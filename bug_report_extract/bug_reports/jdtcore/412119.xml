<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>412119</bug_id>
          
          <creation_ts>2013-07-02 11:19:00 -0400</creation_ts>
          <short_desc>Optional warning for unused throwable variable in catch block</short_desc>
          <delta_ts>2014-08-19 06:01:13 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.2.2</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>4.5 M1</target_milestone>
          
          <blocked>439520</blocked>
    
    <blocked>441933</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="William Lichtenberger">skazzyy</reporter>
          <assigned_to name="shankha banerjee">shankhba</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>jarthana</cc>
    
    <cc>markus_keller</cc>
    
    <cc>shankhba</cc>
    
    <cc>skazzyy</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="62975"
          type_id="1"
          status="+"
          setter="jarthana"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2279831</commentid>
    <comment_count>0</comment_count>
    <who name="William Lichtenberger">skazzyy</who>
    <bug_when>2013-07-02 11:19:00 -0400</bug_when>
    <thetext>I would like to be able to make it a warning if the throwable that is caught, is not used in the surrounding block.

e.g. This would be a warning
try
{
    somethingDangerous();
}
catch(Exception e)
{
   throw new RuntimeException();
}

but this would not
try
{
    somethingDangerous();
}
catch(Exception e)
{
   throw new RuntimeException(e);
}

I have encountered many instances where they fail to pass in the exception as a cause, or fail to log it appropriately which makes debugging a headache.  If it were an optional warning, I would certainly have it enabled.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2280008</commentid>
    <comment_count>1</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-07-03 01:54:21 -0400</bug_when>
    <thetext>I agree, this would be useful. But this also means more work for the UI team. Copying Markus for comments.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2280079</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-07-03 05:44:13 -0400</bug_when>
    <thetext>Thus far, the unused warnings can be used to delete the declared entity
via a quickfix or otherwise. This one would have a different problem id
if we support it at all, so the quick fix for deletion is not offered.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2280144</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-07-03 08:14:17 -0400</bug_when>
    <thetext>I see a similarity to the unused object warning:
Here&apos;s an object that you probably *should* use in your code --
as opposed to complaining the declaration is unused (seems to imply: useless).

As a matter of good programming style I agree that not using the
exception variable is questionable style, just like an empty catch block is.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2280303</commentid>
    <comment_count>4</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-07-03 12:52:18 -0400</bug_when>
    <thetext>I agree about the problem and that we&apos;d need a separate problem id for this.

Can&apos;t we just toggle this with the JavaCore.COMPILER_PB_UNUSED_PARAMETER option?

I know an exception parameter is not exactly the same as a method parameter, but the two are very close, and I think users who want to get a warning in one case typically also want the warning in the other case. @SuppressWarnings(&quot;unused&quot;) can be used in the 0.1% case where it&apos;s really OK to drop the exception.

If you make the problem message &quot;The value of the exception parameter {0} is not used&quot;, then these problems even group well in the Problems view.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2280487</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-07-04 00:29:19 -0400</bug_when>
    <thetext>(In reply to comment #4)

&gt; Can&apos;t we just toggle this with the JavaCore.COMPILER_PB_UNUSED_PARAMETER
&gt; option?
&gt; 
&gt; I know an exception parameter is not exactly the same as a method parameter,
&gt; but the two are very close, and I think users who want to get a warning in
&gt; one case typically also want the warning in the other case.

I am fine with this proposal, Shankha, please take a look.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2425014</commentid>
    <comment_count>6</comment_count>
      <attachid>244853</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-07-07 07:49:36 -0400</bug_when>
    <thetext>Created attachment 244853
Patch

Test Results are good.

1) The test suites DebugEvaluationTest and CodeSnippetTest
have the option:
CompilerOptions.OPTION_ReportUnusedParameter set to Warning.

CodeSnippetTest.java#getCompilerOptions Line No 60
defaultOptions.put(CompilerOptions.OPTION_ReportUnusedParameter, CompilerOptions.WARNING);

That necessitates changes in those two suites. 

2) 
Coming to the change in BlockScope.java: Line 249 

+				if (local.isCatchParameter()) {
+					problemReporter().unusedExceptionParameter(local.declaration); // report unused catch arguments
+				}
+				else {
 					
One could have used the check 
local.declaration instanceof Argument

as mentioned in the previous version of the file. 

The check local.isCatchParameter() tells the reader what is going on. He need not rely on the comment.

---

Please review.

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2425340</commentid>
    <comment_count>7</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-07-08 01:45:09 -0400</bug_when>
    <thetext>(In reply to shankha banerjee from comment #6)
&gt; Created attachment 244853 [details]
&gt; Patch

Patch looks good, just one comment on the test changes:

&gt; 1) The test suites DebugEvaluationTest and CodeSnippetTest
&gt; have the option:
&gt; CompilerOptions.OPTION_ReportUnusedParameter set to Warning.

Looks like there is no need for that option to be set at all. I ran them having set them to IGNORE and all tests pass. So, that should be all that is required for those two test suites. Even if that doesn&apos;t work, we should simply modify the tests to use the exception parameter - for e.g., the changes in EvaluationTest and DebugEvaluationTest#test030() can be avoided.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2425405</commentid>
    <comment_count>8</comment_count>
      <attachid>244875</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-07-08 04:43:54 -0400</bug_when>
    <thetext>Created attachment 244875
Patch

The option OPTION_ReportUnusedParameter DebugEvaluationTest.java and CodeSnippetTest.java is set to ignore.

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2425433</commentid>
    <comment_count>9</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-07-08 05:50:24 -0400</bug_when>
    <thetext>The patch still contains changes in EvaluationTest. The tests no longer need it, do they?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2425512</commentid>
    <comment_count>10</comment_count>
      <attachid>244882</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-07-08 09:21:37 -0400</bug_when>
    <thetext>Created attachment 244882
Patch

(In reply to Jayaprakash Arthanareeswaran from comment #9)
&gt; The patch still contains changes in EvaluationTest. The tests no longer need
&gt; it, do they?

No they are no longer needed. My mistake.
Uploaded new patch.

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2426489</commentid>
    <comment_count>11</comment_count>
      <attachid>244970</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-07-10 06:41:10 -0400</bug_when>
    <thetext>Created attachment 244970
Patch

A slightly better fix. Changes are not needed in both the files 
DebugEvaluationTest.java and CodeSnippetTest.java.

I just made change in one file EvaluationTest.java. The option is not set all.
So no need to unset it again.

None of the tests which extend from EvaluationTest are effected.

Test results are good.

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2426694</commentid>
    <comment_count>12</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-07-10 14:28:33 -0400</bug_when>
    <thetext>Thanks Shankha, released the fix in master:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=bfefcbabb42e4cf52bc5cadc36b5289ae66d310d</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2427181</commentid>
    <comment_count>13</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-07-12 12:52:09 -0400</bug_when>
    <thetext>This fix breaks CodeSnippetTests.

It seems the same change that was done in EvaluationTest needs to be applied also to the override CodeSnippetTest.getCompilerOptions().</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2427183</commentid>
    <comment_count>14</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-07-12 12:53:58 -0400</bug_when>
    <thetext>See also http://download.eclipse.org/eclipse/downloads/drops4/N20140711-2000/testresults/html/org.eclipse.jdt.core.tests.compiler_linux.gtk.x86_64_8.0.html</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2427195</commentid>
    <comment_count>15</comment_count>
      <attachid>245015</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-07-12 23:29:46 -0400</bug_when>
    <thetext>Created attachment 245015
Patch For Regression

Patch Uploaded For Regression.
I had missed the changes in CodeSnippetTest.
Re run all the tests in the test suite harness. All the tests are green.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2427204</commentid>
    <comment_count>16</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-07-13 05:51:08 -0400</bug_when>
    <thetext>The test case results for the following build should e back to normal after the fix.

Test Failures for various Platforms: http://download.eclipse.org/eclipse/downloads/drops4/N20140712-1500/testResults.php</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2427290</commentid>
    <comment_count>17</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-07-14 01:25:08 -0400</bug_when>
    <thetext>Thanksh Shankha, released the test fix via:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=ae0a76573965cce34aad958398b603107880e8e6</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2427894</commentid>
    <comment_count>18</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-07-15 10:21:34 -0400</bug_when>
    <thetext>Please fix your https://wiki.eclipse.org/index.php/Version_Numbering#API_Baseline_in_API_Tools and then fix the wrong @since 3.10 that is reported.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2427914</commentid>
    <comment_count>19</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-07-15 11:01:00 -0400</bug_when>
    <thetext>Fixed the version problem: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=eb98db8467dab9b499bde6848602a31af6a605b6</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2436034</commentid>
    <comment_count>20</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2014-08-06 00:06:14 -0400</bug_when>
    <thetext>Verified for 4.5 M1 using I20140804-2000 build</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>244853</attachid>
            <date>2014-07-07 07:49:00 -0400</date>
            <delta_ts>2014-07-08 04:43:54 -0400</delta_ts>
            <desc>Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>21930</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0NvbXBpbGVySW52b2Nh
dGlvblRlc3RzLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Db21waWxlcklu
dm9jYXRpb25UZXN0cy5qYXZhCmluZGV4IDg4MGJlMGUuLjQ5M2Q0OTggMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0NvbXBpbGVySW52b2NhdGlvblRlc3RzLmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQ29tcGlsZXJJbnZvY2F0aW9uVGVz
dHMuamF2YQpAQCAtNDg5LDYgKzQ4OSw3IEBAIHB1YmxpYyB2b2lkIHRlc3QwMTFfcHJvYmxlbV9j
YXRlZ29yaWVzKCkgewogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiRW51bUNvbnN0
YW50c0Nhbm5vdEJlU3Vycm91bmRlZEJ5UGFyZW50aGVzaXMiLCBuZXcgUHJvYmxlbUF0dHJpYnV0
ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVtLkNBVF9TWU5UQVgpKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0
cmlidXRlcy5wdXQoIkVudW1TdGF0aWNGaWVsZEluSW5Jbml0aWFsaXplckNvbnRleHQiLCBuZXcg
UHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVtLkNBVF9NRU1CRVIpKTsKIAkJZXhw
ZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkVudW1Td2l0Y2hDYW5ub3RUYXJnZXRGaWVsZCIs
IG5ldyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX01FTUJFUikpOwor
CQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiRXhjZXB0aW9uUGFyYW1ldGVySXNOZXZl
clVzZWQiLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVtLkNBVF9VTk5F
Q0VTU0FSWV9DT0RFKSk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJFeGNlcHRp
b25UeXBlQW1iaWd1b3VzIiwgREVQUkVDQVRFRCk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0
ZXMucHV0KCJFeGNlcHRpb25UeXBlSW5oZXJpdGVkTmFtZUhpZGVzRW5jbG9zaW5nTmFtZSIsIERF
UFJFQ0FURUQpOwogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiRXhjZXB0aW9uVHlw
ZUludGVybmFsTmFtZVByb3ZpZGVkIiwgREVQUkVDQVRFRCk7CkBAIC0xMzA4LDYgKzEzMDksNyBA
QCBwdWJsaWMgdm9pZCB0ZXN0MDEyX2NvbXBpbGVyX3Byb2JsZW1zX3R1bmluZygpIHsKIAkJZXhw
ZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkVudW1Db25zdGFudHNDYW5ub3RCZVN1cnJvdW5k
ZWRCeVBhcmVudGhlc2lzIiwgU0tJUCk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0
KCJFbnVtU3RhdGljRmllbGRJbkluSW5pdGlhbGl6ZXJDb250ZXh0IiwgU0tJUCk7CiAJCWV4cGVj
dGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJFbnVtU3dpdGNoQ2Fubm90VGFyZ2V0RmllbGQiLCBT
S0lQKTsKKwkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkV4Y2VwdGlvblBhcmFtZXRl
cklzTmV2ZXJVc2VkIiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKEphdmFDb3JlLkNPTVBJTEVSX1BC
X1VOVVNFRF9QQVJBTUVURVIpKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkV4
Y2VwdGlvblR5cGVBbWJpZ3VvdXMiLCBTS0lQKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRl
cy5wdXQoIkV4Y2VwdGlvblR5cGVJbmhlcml0ZWROYW1lSGlkZXNFbmNsb3NpbmdOYW1lIiwgU0tJ
UCk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJFeGNlcHRpb25UeXBlSW50ZXJu
YWxOYW1lUHJvdmlkZWQiLCBTS0lQKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9y
ZWdyZXNzaW9uL0xvY2FsVmFyaWFibGVUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVn
cmVzc2lvbi9Mb2NhbFZhcmlhYmxlVGVzdC5qYXZhCmluZGV4IGE5Yzg1MzcuLmZlOGE1MTEgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0xvY2FsVmFyaWFibGVUZXN0
LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTG9jYWxWYXJpYWJsZVRl
c3QuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5
cmlnaHQgKGMpIDIwMDUsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5
cmlnaHQgKGMpIDIwMDUsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwg
cmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJp
YWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNl
IFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0
aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC03MTQsNiArNzE0LDE0NiBAQCBwdWJsaWMgdm9p
ZCB0ZXN0MDIwKCkgewogCQkvLyBqYXZhYyBvcHRpb25zCiAJCUphdmFjVGVzdE9wdGlvbnMuRXhj
dXNlLkVjbGlwc2VXYXJuaW5nQ29uZmlndXJlZEFzRXJyb3IgLyogamF2YWMgdGVzdCBvcHRpb25z
ICovKTsKIH0KKy8vaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lk
PTQxMjExOSwgT3B0aW9uYWwgd2FybmluZyBmb3IgdW51c2VkIHRocm93YWJsZSB2YXJpYWJsZSBp
biBjYXRjaCBibG9jaworLy9ObyBlcnJvciBtZXNzYWdlIGZvciBleGNlcHRpb24gcGFyYW1ldGVy
IG5vdCBiZWluZyB1c2VkLgorcHVibGljIHZvaWQgdGVzdDQxMjExOWEoKSB7CisJcnVuQ29uZm9y
bVRlc3QobmV3IFN0cmluZ1tdIHsKKwkJCSJwL1guamF2YSIsCisJCQkicGFja2FnZSBwO1xuIiAr
CisJCQkiY2xhc3MgWCB7XG4iICsKKwkJCSIJXG4iICsKKwkJCSIJdm9pZCBzb21ldGhpbmdEYW5n
ZXJvdXMoKSB7fVxuIiArCisJCQkiCXZvaWQgZm9vKCkge1xuIiArCisJCQkiCQl0cnkge1xuIiAr
CisJCQkiCQkJc29tZXRoaW5nRGFuZ2Vyb3VzKCk7XG4iICsKKwkJCSIJCX0gY2F0Y2goRXhjZXB0
aW9uIGUpIHtcbiIgKworCQkJIgkJCXRocm93IG5ldyBSdW50aW1lRXhjZXB0aW9uKCk7XG4iICsK
KwkJCSIJCX1cbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9XG4iLAorCQl9KTsKK30KKy8vaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQxMjExOSwgT3B0aW9uYWwg
d2FybmluZyBmb3IgdW51c2VkIHRocm93YWJsZSB2YXJpYWJsZSBpbiBjYXRjaCBibG9jaworLy9F
cnJvciBtZXNzYWdlIGZvciBleGNlcHRpb24gcGFyYW1ldGVyIG5vdCBiZWluZyB1c2VkLgorcHVi
bGljIHZvaWQgdGVzdDQxMjExOWIoKSB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlv
bnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVudXNlZFBh
cmFtZXRlciwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgK
KwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJInAvWC5qYXZhIiwKKwkJCQkicGFja2FnZSBwO1xuIiAr
CisJCQkJImNsYXNzIFgge1xuIiArCisJCQkJIgl2b2lkIHNvbWV0aGluZ0Rhbmdlcm91cygpIHt9
XG4iICsKKwkJCQkiCXZvaWQgZm9vKCkge1xuIiArCisJCQkJIgkJdHJ5IHtcbiIgKworCQkJCSIJ
CQlzb21ldGhpbmdEYW5nZXJvdXMoKTtcbiIgKworCQkJCSIJCX0gY2F0Y2goRXhjZXB0aW9uIGUp
IHtcbiIgKworCQkJCSIJCQkJdGhyb3cgbmV3IFJ1bnRpbWVFeGNlcHRpb24oKTtcbiIgKworCQkJ
CSIJCX1cbiIgKworCQkJCSIJCXRyeSB7XG4iICsKKwkJCQkiCQkJc29tZXRoaW5nRGFuZ2Vyb3Vz
KCk7XG4iICsKKworCQkJCS8vIEV4Y2VwdGlvbiB0aHJvd24gdW5kZXIgYSB0cnVlIGJvb2xlYW4g
ZXhwcmVzc2lvbgorCQkJCSIJCX0gY2F0Y2goRXhjZXB0aW9uIGUxKSB7XG4iICsKKwkJCQkiCQkJ
CWlmICh0cnVlKVxuIiArCisJCQkJIgkJCQkJdGhyb3cgbmV3IFJ1bnRpbWVFeGNlcHRpb24oZTEp
O1xuIiArCisJCQkJIgkJfVxuIiArCisKKwkJCQkvLyBDYXRjaCBjbGF1c2UgcGFyYW1ldGVyIHVz
ZWQuCisJCQkJIgkJdHJ5IHtcbiIgKworCQkJCSIJCQlzb21ldGhpbmdEYW5nZXJvdXMoKTtcbiIg
KworCQkJCSIJCX0gY2F0Y2goRXhjZXB0aW9uIGUyKSB7XG4iICsKKwkJCQkiCQkJdGhyb3cgbmV3
IFJ1bnRpbWVFeGNlcHRpb24oZTIpO1xuIiArCisJCQkJIgkJfVxuIiArCisJCQkJIiAgICB9XG4i
ICsKKwkJCQkifVxuIiwKKwkJCX0sCisJCQkiLS0tLS0tLS0tLVxuIiArCisJCQkiMS4gRVJST1Ig
aW4gcFxcWC5qYXZhIChhdCBsaW5lIDcpXG4iICsKKwkJCSIJfSBjYXRjaChFeGNlcHRpb24gZSkg
e1xuIiArCisJCQkiCSAgICAgICAgICAgICAgICAgIF5cbiIgKworCQkJIlRoZSB2YWx1ZSBvZiB0
aGUgZXhjZXB0aW9uIHBhcmFtZXRlciBlIGlzIG5vdCB1c2VkXG4iICsKKwkJCSItLS0tLS0tLS0t
XG4iLAorCQkJbnVsbCwKKwkJCXRydWUsCisJCQlvcHRpb25zKTsKK30KKy8vaHR0cHM6Ly9idWdz
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQxMjExOSwgT3B0aW9uYWwgd2Fybmlu
ZyBmb3IgdW51c2VkIHRocm93YWJsZSB2YXJpYWJsZSBpbiBjYXRjaCBibG9jaworLy9NdWx0aS1j
YXRjaCBwYXJhbWV0ZXJzLgorcHVibGljIHZvaWQgdGVzdDQxMjExOWMoKSB7CisJaWYgKHRoaXMu
Y29tcGxpYW5jZUxldmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfNykKKwkJcmV0dXJuOwor
CU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGls
ZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbnVzZWRQYXJhbWV0ZXIsIENvbXBpbGVyT3B0aW9ucy5F
UlJPUik7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJw
L1guamF2YSIsCisJCQkJInBhY2thZ2UgcDtcbiIgKworCQkJCSJjbGFzcyBYIHtcbiIgKworCQkJ
CSJjbGFzcyBaMiBleHRlbmRzIEV4Y2VwdGlvbiB7XG4iICsKKwkJCQkiCXByaXZhdGUgc3RhdGlj
IGZpbmFsIGxvbmcgc2VyaWFsVmVyc2lvblVJRCA9IDFMO31cbiIgKworCQkJCSJjbGFzcyBaMSBl
eHRlbmRzIEV4Y2VwdGlvbiB7XG4iICsKKwkJCQkiCXByaXZhdGUgc3RhdGljIGZpbmFsIGxvbmcg
c2VyaWFsVmVyc2lvblVJRCA9IDFMO31cbiIgKworCQkJCSIJdm9pZCBzb21ldGhpbmdEYW5nZXJv
dXMoaW50IHgsIGludCB5KSB0aHJvd3MgWjEsIFoyIHtcbiIgKworCQkJCSIJCWlmICh4IDwgMSlc
biIgKworCQkJCSIJCQl0aHJvdyBuZXcgWjEoKTtcbiIgKworCQkJCSIJCWlmICh5ID4gMSkgXG4i
ICsKKwkJCQkiCQkJdGhyb3cgbmV3IFoyKCk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJdm9p
ZCBmb28oaW50IHgsIGludCB5KSB7XG4iICsKKwkJCQkiCQl0cnkge1xuIiArCisJCQkJIgkJCXNv
bWV0aGluZ0Rhbmdlcm91cyh4LCB5KTtcbiIgKworCQkJCSIJCX0gY2F0Y2goWjJ8WjEgeikge1xu
IiArCisJCQkJIgkJCXRocm93IG5ldyBSdW50aW1lRXhjZXB0aW9uKCk7XG4iICsKKwkJCQkiCQl9
XG4iICsKKwkJCQkiCQl0cnkge1xuIiArCisJCQkJIgkJCXNvbWV0aGluZ0Rhbmdlcm91cyh4LCB5
KTtcbiIgKworCQkJCSIJCX0gY2F0Y2goWjJ8WjEgejIpIHtcbiIgKworCQkJCSIJCQl0aHJvdyBu
ZXcgUnVudGltZUV4Y2VwdGlvbih6Mik7XG4iICsKKwkJCQkiCQl9XG4iICsKKwkJCQkiCX1cbiIg
KworCQkJCSJ9XG4iLAorCQkJfSwKKwkJCSItLS0tLS0tLS0tXG4iICsKKwkJCSIxLiBFUlJPUiBp
biBwXFxYLmphdmEgKGF0IGxpbmUgMTYpXG4iICsKKwkJCSIJfSBjYXRjaChaMnxaMSB6KSB7XG4i
ICsKKwkJCSIJICAgICAgICAgICAgICBeXG4iICsKKwkJCSJUaGUgdmFsdWUgb2YgdGhlIGV4Y2Vw
dGlvbiBwYXJhbWV0ZXIgeiBpcyBub3QgdXNlZFxuIiArCisJCQkiLS0tLS0tLS0tLVxuIiwKKwkJ
CW51bGwsCisJCQl0cnVlLAorCQkJb3B0aW9ucyk7Cit9CisvL2h0dHBzOi8vYnVncy5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MTIxMTksIE9wdGlvbmFsIHdhcm5pbmcgZm9yIHVu
dXNlZCB0aHJvd2FibGUgdmFyaWFibGUgaW4gY2F0Y2ggYmxvY2sKKy8vU3VwcHJlc3MgV2Fybmlu
Z3MuCitwdWJsaWMgdm9pZCB0ZXN0NDEyMTE5ZCgpIHsKKwlpZiAodGhpcy5jb21wbGlhbmNlTGV2
ZWwgPCBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV81KQorCQlyZXR1cm47CisJTWFwIG9wdGlvbnMg
PSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BU
SU9OX1JlcG9ydFVudXNlZFBhcmFtZXRlciwgQ29tcGlsZXJPcHRpb25zLldBUk5JTkcpOworCXRo
aXMucnVuTmVnYXRpdmVUZXN0KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkicC9YLmphdmEiLAor
CQkJCSJwYWNrYWdlIHA7XG4iICsKKwkJCQkiY2xhc3MgWCB7XG4iICsKKwkJCQkiCUBTdXBwcmVz
c1dhcm5pbmdzKFwidW51c2VkXCIpXG4iICsKKwkJCQkiCXZvaWQgZm9vKGludCB4KSB7fVxuIiAr
CisJCQkJIgl2b2lkIHNvbWV0aGluZ0Rhbmdlcm91cygpIHt9XG4iICsKKwkJCQkiCUBTdXBwcmVz
c1dhcm5pbmdzKFwidW51c2VkXCIpXG4iICsKKwkJCQkiCXZvaWQgZm9vMygpIHtcbiIgKworCQkJ
CSIJCXRyeSB7XG4iICsKKwkJCQkiCQkJc29tZXRoaW5nRGFuZ2Vyb3VzKCk7XG4iICsKKwkJCQki
CQl9IGNhdGNoKEV4Y2VwdGlvbiBlKSB7XG4iICsKKwkJCQkiCQkJdGhyb3cgbmV3IFJ1bnRpbWVF
eGNlcHRpb24oKTtcbiIgKworCQkJCSIJCX1cbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn1cbiIs
CisJCQl9LAorCQkJIiIgLAorCQkJbnVsbCwKKwkJCXRydWUsCisJCQlvcHRpb25zKTsKK30KIHB1
YmxpYyBzdGF0aWMgQ2xhc3MgdGVzdENsYXNzKCkgewogCXJldHVybiBMb2NhbFZhcmlhYmxlVGVz
dC5jbGFzczsKIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBp
bGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9ldmFsL0NvZGVTbmlwcGV0VGVzdC5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2V2YWwvQ29kZVNuaXBwZXRUZXN0LmphdmEKaW5kZXggMWI5YTcyNi4u
NWJkNjBkZiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIv
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2V2YWwvQ29kZVNuaXBwZXRUZXN0LmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2V2YWwvQ29kZVNuaXBwZXRUZXN0LmphdmEKQEAgLTEsNSArMSw1IEBA
CiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDE0IElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBw
cm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxh
YmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAg
KiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBh
dApAQCAtNjcxLDcgKzY3MSw3IEBAIHB1YmxpYyB2b2lkIHRlc3RSZXR1cm5UeXBlVm9pZCgpIHsK
ICAqIGNvZGUgc25pcHBldCBzdXBwb3J0IChzZWUgUFIgIzFHMUMwSFIpLgogICovCiBwdWJsaWMg
dm9pZCB0ZXN0UnVuTWV0aG9kSW5Bbm9ueW1vdXMoKSB7Ci0JZXZhbHVhdGVXaXRoRXhwZWN0ZWRE
aXNwbGF5U3RyaW5nKGJ1aWxkQ2hhckFycmF5KG5ldyBTdHJpbmdbXSB7CisJZXZhbHVhdGVXaXRo
RXhwZWN0ZWREaXNwbGF5U3RyaW5nMihidWlsZENoYXJBcnJheShuZXcgU3RyaW5nW10gewogCQki
Y2xhc3MgWCB7IiwKIAkJIglwdWJsaWMgaW50IGkgPSAwOyIsCiAJCSIgICBwdWJsaWMgYm9vbGVh
biBmaW5pc2hlZCA9IGZhbHNlOyIsCkBAIC02OTgsNyArNjk4LDcgQEAgcHVibGljIHZvaWQgdGVz
dFJ1bk1ldGhvZEluQW5vbnltb3VzKCkgewogICogY29kZSBzbmlwcGV0IHN1cHBvcnQgKHNlZSBQ
UiAjMUcxQzBIUikuCiAgKi8KIHB1YmxpYyB2b2lkIHRlc3RSdW5NZXRob2RJbkFub255bW91czIo
KSB7Ci0JZXZhbHVhdGVXaXRoRXhwZWN0ZWREaXNwbGF5U3RyaW5nKGJ1aWxkQ2hhckFycmF5KG5l
dyBTdHJpbmdbXSB7CisJZXZhbHVhdGVXaXRoRXhwZWN0ZWREaXNwbGF5U3RyaW5nMihidWlsZENo
YXJBcnJheShuZXcgU3RyaW5nW10gewogCQkiY2xhc3MgWCB7IiwKIAkJIglwdWJsaWMgaW50IGkg
PSAwOyIsCiAJCSIgICBwdWJsaWMgYm9vbGVhbiBmaW5pc2hlZCA9IGZhbHNlOyIsCkBAIC03MjUs
NyArNzI1LDcgQEAgcHVibGljIHZvaWQgdGVzdFJ1bk1ldGhvZEluQW5vbnltb3VzMigpIHsKICAq
IGNvZGUgc25pcHBldCBzdXBwb3J0IChzZWUgUFIgIzFHMUMwSFIpLgogICovCiBwdWJsaWMgdm9p
ZCB0ZXN0UnVuTWV0aG9kSW5Bbm9ueW1vdXMzKCkgewotCWV2YWx1YXRlV2l0aEV4cGVjdGVkRGlz
cGxheVN0cmluZyhidWlsZENoYXJBcnJheShuZXcgU3RyaW5nW10geworCWV2YWx1YXRlV2l0aEV4
cGVjdGVkRGlzcGxheVN0cmluZzIoYnVpbGRDaGFyQXJyYXkobmV3IFN0cmluZ1tdIHsKIAkJImNs
YXNzIFggeyIsCiAJCSIJcHVibGljIGludCBpID0gMDsiLAogCQkiICAgcHVibGljIGJvb2xlYW4g
ZmluaXNoZWQgPSBmYWxzZTsiLApAQCAtNzUyLDcgKzc1Miw3IEBAIHB1YmxpYyB2b2lkIHRlc3RS
dW5NZXRob2RJbkFub255bW91czMoKSB7CiAgKiBjb2RlIHNuaXBwZXQgc3VwcG9ydCAoc2VlIFBS
ICMxRzFDMEhSKS4KICAqLwogcHVibGljIHZvaWQgdGVzdFJ1bk1ldGhvZEluQW5vbnltb3VzNCgp
IHsKLQlldmFsdWF0ZVdpdGhFeHBlY3RlZERpc3BsYXlTdHJpbmcoYnVpbGRDaGFyQXJyYXkobmV3
IFN0cmluZ1tdIHsKKwlldmFsdWF0ZVdpdGhFeHBlY3RlZERpc3BsYXlTdHJpbmcyKGJ1aWxkQ2hh
ckFycmF5KG5ldyBTdHJpbmdbXSB7CiAJCSJjbGFzcyBYIHsiLAogCQkiCXB1YmxpYyBpbnQgaSA9
IDA7IiwKIAkJIiAgIHB1YmxpYyBib29sZWFuIGZpbmlzaGVkID0gZmFsc2U7IiwKQEAgLTc3OSw3
ICs3NzksNyBAQCBwdWJsaWMgdm9pZCB0ZXN0UnVuTWV0aG9kSW5Bbm9ueW1vdXM0KCkgewogICog
Y29kZSBzbmlwcGV0IHN1cHBvcnQgKHNlZSBQUiAjMUcxQzBIUikuCiAgKi8KIHB1YmxpYyB2b2lk
IHRlc3RSdW5NZXRob2RJbkFub255bW91czUoKSB7Ci0JZXZhbHVhdGVXaXRoRXhwZWN0ZWREaXNw
bGF5U3RyaW5nKGJ1aWxkQ2hhckFycmF5KG5ldyBTdHJpbmdbXSB7CisJZXZhbHVhdGVXaXRoRXhw
ZWN0ZWREaXNwbGF5U3RyaW5nMihidWlsZENoYXJBcnJheShuZXcgU3RyaW5nW10gewogCQkiY2xh
c3MgWCB7IiwKIAkJIglwdWJsaWMgaW50IGkgPSAwOyIsCiAJCSIgICBwdWJsaWMgYm9vbGVhbiBm
aW5pc2hlZCA9IGZhbHNlOyIsCkBAIC04MDcsNyArODA3LDcgQEAgcHVibGljIHZvaWQgdGVzdFJ1
bk1ldGhvZEluQW5vbnltb3VzNSgpIHsKICAqIGNvZGUgc25pcHBldCBzdXBwb3J0IChzZWUgUFIg
IzFHMUMwSFIpLgogICovCiBwdWJsaWMgdm9pZCB0ZXN0UnVuTWV0aG9kSW5Bbm9ueW1vdXM2KCkg
ewotCWV2YWx1YXRlV2l0aEV4cGVjdGVkRGlzcGxheVN0cmluZyhidWlsZENoYXJBcnJheShuZXcg
U3RyaW5nW10geworCWV2YWx1YXRlV2l0aEV4cGVjdGVkRGlzcGxheVN0cmluZzIoYnVpbGRDaGFy
QXJyYXkobmV3IFN0cmluZ1tdIHsKIAkJImNsYXNzIFggeyIsCiAJCSIJcHVibGljIGludCBpID0g
MDsiLAogCQkiICAgcHVibGljIGJvb2xlYW4gZmluaXNoZWQgPSBmYWxzZTsiLApAQCAtODM1LDcg
KzgzNSw3IEBAIHB1YmxpYyB2b2lkIHRlc3RSdW5NZXRob2RJbkFub255bW91czYoKSB7CiAgKiBj
b2RlIHNuaXBwZXQgc3VwcG9ydCAoc2VlIFBSICMxRzFDMEhSKS4KICAqLwogcHVibGljIHZvaWQg
dGVzdFJ1bk1ldGhvZEluQW5vbnltb3VzNygpIHsKLQlldmFsdWF0ZVdpdGhFeHBlY3RlZERpc3Bs
YXlTdHJpbmcoYnVpbGRDaGFyQXJyYXkobmV3IFN0cmluZ1tdIHsKKwlldmFsdWF0ZVdpdGhFeHBl
Y3RlZERpc3BsYXlTdHJpbmcyKGJ1aWxkQ2hhckFycmF5KG5ldyBTdHJpbmdbXSB7CiAJCSJjbGFz
cyBYIHsiLAogCQkiCXB1YmxpYyBpbnQgaSA9IDA7IiwKIAkJIiAgIHB1YmxpYyBib29sZWFuIGZp
bmlzaGVkID0gZmFsc2U7IiwKQEAgLTg2Myw3ICs4NjMsNyBAQCBwdWJsaWMgdm9pZCB0ZXN0UnVu
TWV0aG9kSW5Bbm9ueW1vdXM3KCkgewogICogY29kZSBzbmlwcGV0IHN1cHBvcnQgKHNlZSBQUiAj
MUcxQzBIUikuCiAgKi8KIHB1YmxpYyB2b2lkIHRlc3RSdW5NZXRob2RJbkFub255bW91czgoKSB7
Ci0JZXZhbHVhdGVXaXRoRXhwZWN0ZWREaXNwbGF5U3RyaW5nKGJ1aWxkQ2hhckFycmF5KG5ldyBT
dHJpbmdbXSB7CisJZXZhbHVhdGVXaXRoRXhwZWN0ZWREaXNwbGF5U3RyaW5nMihidWlsZENoYXJB
cnJheShuZXcgU3RyaW5nW10gewogCQkiY2xhc3MgWCB7IiwKIAkJIglwdWJsaWMgaW50IGkgPSAw
OyIsCiAJCSIgICBwdWJsaWMgYm9vbGVhbiBmaW5pc2hlZCA9IGZhbHNlOyIsCmRpZmYgLS1naXQg
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvZXZhbC9EZWJ1Z0V2YWx1YXRpb25UZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZXZh
bC9EZWJ1Z0V2YWx1YXRpb25UZXN0LmphdmEKaW5kZXggZjY3NWViNC4uNGE2N2IyOSAxMDA2NDQK
LS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2V2YWwvRGVidWdFdmFsdWF0aW9uVGVzdC5qYXZhCisrKyBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90
ZXN0cy9ldmFsL0RlYnVnRXZhbHVhdGlvblRlc3QuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBv
cmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTQgSUJNIENvcnBv
cmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0g
YW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5k
ZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNo
IGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0x
Mzk2LDcgKzEzOTYsMjIgQEAgcHVibGljIHZvaWQgdGVzdDAzMCgpIHRocm93cyBFeGNlcHRpb24g
ewogCQkJKyAifSBjYXRjaChBcnJheUluZGV4T3V0T2ZCb3VuZHNFeGNlcHRpb24gZSkge1xuIgog
CQkJKyAicmV0dXJuIC0yO1xuIgogCQkJKyAifSIpLnRvQ2hhckFycmF5KCk7Ci0JCWV2YWx1YXRl
KHN0YWNrRnJhbWUsIHJlcXVlc3Rvciwgc25pcHBldCk7CisKKwkJZmluYWwgTWFwIGNvbXBpbGVy
T3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCQljb21waWxlck9wdGlvbnMucHV0KENv
bXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW51c2VkUGFyYW1ldGVyLCBDb21waWxlck9wdGlv
bnMuSUdOT1JFKTsKKwkJdGhpcy5jb250ZXh0LmV2YWx1YXRlKAorCQkJCXNuaXBwZXQsCisJCQkJ
c3RhY2tGcmFtZS5sb2NhbFZhcmlhYmxlVHlwZU5hbWVzKCksCisJCQkJc3RhY2tGcmFtZS5sb2Nh
bFZhcmlhYmxlTmFtZXMoKSwKKwkJCQlzdGFja0ZyYW1lLmxvY2FsVmFyaWFibGVNb2RpZmllcnMo
KSwKKwkJCQlzdGFja0ZyYW1lLmRlY2xhcmluZ1R5cGVOYW1lKCksCisJCQkJc3RhY2tGcmFtZS5p
c1N0YXRpYygpLAorCQkJCXN0YWNrRnJhbWUuaXNDb25zdHJ1Y3RvckNhbGwoKSwKKwkJCQlnZXRF
bnYoKSwKKwkJCQljb21waWxlck9wdGlvbnMsCisJCQkJcmVxdWVzdG9yLAorCQkJCWdldFByb2Js
ZW1GYWN0b3J5KCkpOworCiAJCWFzc2VydFRydWUoCiAJCQkiU2hvdWxkIGdldCBvbmUgcmVzdWx0
IGJ1dCBnb3QgIiArIChyZXF1ZXN0b3IucmVzdWx0SW5kZXggKyAxKSwKIAkJCXJlcXVlc3Rvci5y
ZXN1bHRJbmRleCA9PSAwKTsKQEAgLTE1MzgsNiArMTU1Myw3IEBAIHB1YmxpYyB2b2lkIHRlc3Qw
MzMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJCSJyZXR1cm4gbDsiKS50b0NoYXJBcnJheSgpOwog
CQlmaW5hbCBNYXAgY29tcGlsZXJPcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CiAJCWNv
bXBpbGVyT3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNoZWNrZWRU
eXBlT3BlcmF0aW9uLCBDb21waWxlck9wdGlvbnMuSUdOT1JFKTsKKwkJY29tcGlsZXJPcHRpb25z
LnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVudXNlZFBhcmFtZXRlciwgQ29tcGls
ZXJPcHRpb25zLklHTk9SRSk7CiAKIAkJdGhpcy5jb250ZXh0LmV2YWx1YXRlKAogCQkJc25pcHBl
dCwKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9ldmFsL0V2YWx1YXRpb25UZXN0LmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvZXZhbC9FdmFsdWF0aW9uVGVzdC5qYXZhCmluZGV4IGI3YzBkNzguLjZkMzcyODQgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9ldmFsL0V2YWx1YXRpb25UZXN0LmphdmEKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2V2YWwvRXZhbHVhdGlvblRlc3QuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMDggSUJNIENvcnBvcmF0aW9u
IGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTQgSUJNIENvcnBvcmF0aW9u
IGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRo
ZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhl
IHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29t
cGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0yNDUsNiAr
MjQ1LDM4IEBAIHB1YmxpYyBjbGFzcyBFdmFsdWF0aW9uVGVzdCBleHRlbmRzIEFic3RyYWN0Q29t
cGlsZXJUZXN0IGltcGxlbWVudHMgU3RvcGFibGVUZXN0CiAJfQogCiAJLyoqCisJICogRXZhbHVh
dGVzIHRoZSBnaXZlbiBjb2RlIHNuaXBwZXQgYW5kIG1ha2VzIHN1cmUgaXQgcmV0dXJucyBhIHJl
c3VsdCB3aXRoIHRoZSBnaXZlbiBkaXNwbGF5IHN0cmluZy4KKwkgKiBDb21waWxlciBvcHRpb24g
T1BUSU9OX1JlcG9ydFVudXNlZFBhcmFtZXRlciBpcyBzZXQgdG8gbGV2ZWwgSUdOT1JFLgorCSAq
LworCXB1YmxpYyB2b2lkIGV2YWx1YXRlV2l0aEV4cGVjdGVkRGlzcGxheVN0cmluZzIoY2hhcltd
IGNvZGVTbmlwcGV0LCBjaGFyW10gZGlzcGxheVN0cmluZykgeworCQlSZXF1ZXN0b3IgcmVxdWVz
dG9yID0gbmV3IFJlcXVlc3RvcigpOworCQlNYXAgb3B0aW9uID0gZ2V0Q29tcGlsZXJPcHRpb25z
KCk7CisJCW9wdGlvbi5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbnVzZWRQYXJh
bWV0ZXIsIENvbXBpbGVyT3B0aW9ucy5JR05PUkUpOworCQl0cnkgeworCQkJdGhpcy5jb250ZXh0
LmV2YWx1YXRlKGNvZGVTbmlwcGV0LCBnZXRFbnYoKSwgb3B0aW9uLCByZXF1ZXN0b3IsIGdldFBy
b2JsZW1GYWN0b3J5KCkpOworCQl9IGNhdGNoIChJbnN0YWxsRXhjZXB0aW9uIGUpIHsKKwkJCWFz
c2VydFRydWUoIlRhcmdldCBleGNlcHRpb24gIiArIGUuZ2V0TWVzc2FnZSgpLCBmYWxzZSk7CisJ
CX0KKwkJaWYgKHJlcXVlc3Rvci5yZXN1bHRJbmRleCAhPSAwKSB7CisJCQlmb3IgKGludCBpID0g
MDsgaSA8IHJlcXVlc3Rvci5yZXN1bHRJbmRleDsgaSsrKSB7CisJCQkJU3lzdGVtLm91dC5wcmlu
dGxuKCJ1bmV4cGVjdGVkIHJlc3VsdFsiICsgaSArICJdOiAiICsgcmVxdWVzdG9yLnJlc3VsdHNb
aV0pOworCQkJfQorCQl9CisJCWFzc2VydFRydWUoIlVuZXhwZWN0ZWQgcmVzdWx0IiwgcmVxdWVz
dG9yLnJlc3VsdEluZGV4ID09IDApOworCQlFdmFsdWF0aW9uUmVzdWx0IHJlc3VsdCA9IHJlcXVl
c3Rvci5yZXN1bHRzWzBdOworCQlhc3NlcnRUcnVlKCJIYXMgcHJvYmxlbSIsICFyZXN1bHQuaGFz
UHJvYmxlbXMoKSk7CisJCWFzc2VydFRydWUoIkVtcHR5IHByb2JsZW0gbGlzdCIsIHJlc3VsdC5n
ZXRQcm9ibGVtcygpLmxlbmd0aCA9PSAwKTsKKwkJaWYgKGRpc3BsYXlTdHJpbmcgPT0gbnVsbCkg
eworCQkJYXNzZXJ0VHJ1ZSgiSGFzIHZhbHVlIiwgIXJlc3VsdC5oYXNWYWx1ZSgpKTsKKwkJfSBl
bHNlIHsKKwkJCWFzc2VydFRydWUoIkhhcyB2YWx1ZSIsIHJlc3VsdC5oYXNWYWx1ZSgpKTsKKwkJ
CWFzc2VydEVxdWFscygiRXZhbHVhdGlvbiB0eXBlIiwgRXZhbHVhdGlvblJlc3VsdC5UX0NPREVf
U05JUFBFVCwgcmVzdWx0LmdldEV2YWx1YXRpb25UeXBlKCkpOworCQkJLy9hc3NlcnRFcXVhbHMo
IkV2YWx1YXRpb24gaWQiLCBjb2RlU25pcHBldCwgcmVzdWx0LmdldEV2YWx1YXRpb25JRCgpKTsK
KwkJCWFzc2VydEVxdWFscygiVmFsdWUgZGlzcGxheSBzdHJpbmciLCBkaXNwbGF5U3RyaW5nLCBy
ZXN1bHQuZ2V0VmFsdWVEaXNwbGF5U3RyaW5nKCkpOworCQl9CisJfQorCisJLyoqCiAJICogRXZh
bHVhdGVzIHRoZSBnaXZlbiBjb2RlIHNuaXBwZXQgYW5kIG1ha2VzIHN1cmUgdGhlIGV2YWx1YXRp
b24gcmVzdWx0IGhhcyBhdCBsZWFzdCB0aGUgZ2l2ZW4gcHJvYmxlbSBvbiB0aGUgZ2l2ZW4gaW1w
b3J0LgogCSAqLwogCXByb3RlY3RlZCB2b2lkIGV2YWx1YXRlV2l0aEV4cGVjdGVkSW1wb3J0UHJv
YmxlbShjaGFyW10gY29kZVNuaXBwZXQsIGNoYXJbXSBpbXBvcnREZWNsYXJhdGlvbiwgQ2F0ZWdv
cml6ZWRQcm9ibGVtIGV4cGVjdGVkKSB7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvQ29kZUNv
cnJlY3Rpb25UZXN0cy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0NvZGVDb3JyZWN0aW9uVGVzdHMuamF2
YQppbmRleCA5NzJmNTkxLi5lZTQ2MmYxIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvQ29kZUNv
cnJlY3Rpb25UZXN0cy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVs
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9Db2RlQ29ycmVjdGlvblRlc3Rz
LmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJp
Z2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFs
cwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQ
dWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlv
biwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtODExLDYgKzgxMSw3IEBAIHB1YmxpYyB2b2lkIHRl
c3RXYXJuaW5nVG9rZW5zKCkgewogCWFzc2VydEVxdWFscygid3JvbmcgdG9rZW4iLCAidW51c2Vk
IiwgQ29ycmVjdGlvbkVuZ2luZS5nZXRXYXJuaW5nVG9rZW4oSVByb2JsZW0uVW51c2VkSW1wb3J0
KSk7CiAJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0b2tlbiIsICJ1bnVzZWQiLCBDb3JyZWN0aW9uRW5n
aW5lLmdldFdhcm5pbmdUb2tlbihJUHJvYmxlbS5Mb2NhbFZhcmlhYmxlSXNOZXZlclVzZWQpKTsK
IAlhc3NlcnRFcXVhbHMoIndyb25nIHRva2VuIiwgInVudXNlZCIsIENvcnJlY3Rpb25FbmdpbmUu
Z2V0V2FybmluZ1Rva2VuKElQcm9ibGVtLkFyZ3VtZW50SXNOZXZlclVzZWQpKTsKKwlhc3NlcnRF
cXVhbHMoIndyb25nIHRva2VuIiwgInVudXNlZCIsIENvcnJlY3Rpb25FbmdpbmUuZ2V0V2Fybmlu
Z1Rva2VuKElQcm9ibGVtLkV4Y2VwdGlvblBhcmFtZXRlcklzTmV2ZXJVc2VkKSk7CiAJYXNzZXJ0
RXF1YWxzKCJ3cm9uZyB0b2tlbiIsICJ1bnVzZWQiLCBDb3JyZWN0aW9uRW5naW5lLmdldFdhcm5p
bmdUb2tlbihJUHJvYmxlbS5VbnVzZWRQcml2YXRlQ29uc3RydWN0b3IpKTsKIAlhc3NlcnRFcXVh
bHMoIndyb25nIHRva2VuIiwgInVudXNlZCIsIENvcnJlY3Rpb25FbmdpbmUuZ2V0V2FybmluZ1Rv
a2VuKElQcm9ibGVtLlVudXNlZFByaXZhdGVNZXRob2QpKTsKIAlhc3NlcnRFcXVhbHMoIndyb25n
IHRva2VuIiwgInVudXNlZCIsIENvcnJlY3Rpb25FbmdpbmUuZ2V0V2FybmluZ1Rva2VuKElQcm9i
bGVtLlVudXNlZFByaXZhdGVGaWVsZCkpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2NvcmUvY29tcGlsZXIvSVByb2JsZW0uamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9jb3JlL2NvbXBp
bGVyL0lQcm9ibGVtLmphdmEKaW5kZXggZjIyZDQ2MS4uOWNhMTUzNSAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2NvcmUvY29tcGlsZXIv
SVByb2JsZW0uamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvY29yZS9jb21waWxlci9JUHJvYmxlbS5qYXZhCkBAIC00NTUsNiArNDU1LDEwIEBA
IHZvaWQgc2V0U291cmNlU3RhcnQoaW50IHNvdXJjZVN0YXJ0KTsKIAlpbnQgVW5yZXNvbHZlZFZh
cmlhYmxlID0gRmllbGRSZWxhdGVkICsgODM7CiAJLyoqIEBzaW5jZSAzLjEwICovCiAJaW50IE5v
blN0YXRpY09yQWxpZW5UeXBlUmVjZWl2ZXIgPSBNZXRob2RSZWxhdGVkICsgODQ7CisKKwkvKiog
QHNpbmNlIDMuMTAgKi8KKwlpbnQgRXhjZXB0aW9uUGFyYW1ldGVySXNOZXZlclVzZWQgPSBJbnRl
cm5hbCArIDg1OworCiAJLy8gdmFyaWFibGUgaGlkaW5nCiAJLyoqIEBzaW5jZSAzLjAgKi8KIAlp
bnQgTG9jYWxWYXJpYWJsZUhpZGluZ0xvY2FsVmFyaWFibGUgPSBJbnRlcm5hbCArIDkwOwpkaWZm
IC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CbG9ja1Njb3BlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Js
b2NrU2NvcGUuamF2YQppbmRleCA3OGMxZTViLi5kZTJlYTVmIDEwMDY0NAotLS0gYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
bG9va3VwL0Jsb2NrU2NvcGUuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Jsb2NrU2NvcGUuamF2
YQpAQCAtMjQ5LDggKzI0OSwxMiBAQCB2b2lkIGNvbXB1dGVMb2NhbFZhcmlhYmxlUG9zaXRpb25z
KGludCBpbG9jYWwsIGludCBpbml0T2Zmc2V0LCBDb2RlU3RyZWFtIGNvZGVTdAogCQkJCSYmIChs
b2NhbC5kZWNsYXJhdGlvbiAhPSBudWxsKSAvLyB1bnVzZWQgKGFuZCBub24gc2VjcmV0KSBsb2Nh
bAogCQkJCSYmICgobG9jYWwuZGVjbGFyYXRpb24uYml0cyAmIEFTVE5vZGUuSXNMb2NhbERlY2xh
cmF0aW9uUmVhY2hhYmxlKSAhPSAwKSkgeyAvLyBkZWNsYXJhdGlvbiBpcyByZWFjaGFibGUKIAot
CQkJCWlmICghKGxvY2FsLmRlY2xhcmF0aW9uIGluc3RhbmNlb2YgQXJndW1lbnQpKSAvLyBkbyBu
b3QgcmVwb3J0IHVudXNlZCBjYXRjaCBhcmd1bWVudHMKKwkJCQlpZiAobG9jYWwuaXNDYXRjaFBh
cmFtZXRlcigpKSB7CisJCQkJCXByb2JsZW1SZXBvcnRlcigpLnVudXNlZEV4Y2VwdGlvblBhcmFt
ZXRlcihsb2NhbC5kZWNsYXJhdGlvbik7IC8vIHJlcG9ydCB1bnVzZWQgY2F0Y2ggYXJndW1lbnRz
CisJCQkJfQorCQkJCWVsc2UgewogCQkJCQlwcm9ibGVtUmVwb3J0ZXIoKS51bnVzZWRMb2NhbFZh
cmlhYmxlKGxvY2FsLmRlY2xhcmF0aW9uKTsKKwkJCQl9CiAJCQl9CiAKIAkJCS8vIGNvdWxkIGJl
IG9wdGltaXplZCBvdXQsIGJ1dCBkb2VzIG5lZWQgdG8gcHJlc2VydmUgdW5yZWFkIHZhcmlhYmxl
cyA/CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVtUmVwb3J0ZXIuamF2YSBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9wcm9ibGVtL1Byb2JsZW1SZXBvcnRlci5qYXZhCmluZGV4IDRlMWUzYjkuLmQ0MzgwZjUg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL1Byb2JsZW1SZXBvcnRlci5qYXZhCisrKyBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9wcm9ibGVtL1Byb2JsZW1SZXBvcnRlci5qYXZhCkBAIC0yMjYsNiArMjI2LDcgQEAgcHVi
bGljIHN0YXRpYyBpbnQgZ2V0SXJyaXRhbnQoaW50IHByb2JsZW1JRCkgewogCQkJcmV0dXJuIENv
bXBpbGVyT3B0aW9ucy5VbnVzZWRMb2NhbFZhcmlhYmxlOwogCiAJCWNhc2UgSVByb2JsZW0uQXJn
dW1lbnRJc05ldmVyVXNlZCA6CisJCWNhc2UgSVByb2JsZW0uRXhjZXB0aW9uUGFyYW1ldGVySXNO
ZXZlclVzZWQ6CiAJCQlyZXR1cm4gQ29tcGlsZXJPcHRpb25zLlVudXNlZEFyZ3VtZW50OwogCiAJ
CWNhc2UgSVByb2JsZW0uTm9JbXBsaWNpdFN0cmluZ0NvbnZlcnNpb25Gb3JDaGFyQXJyYXlFeHBy
ZXNzaW9uIDoKQEAgLTg0ODUsNiArODQ4NiwxOCBAQCBwdWJsaWMgdm9pZCB1bnVzZWRBcmd1bWVu
dChMb2NhbERlY2xhcmF0aW9uIGxvY2FsRGVjbCkgewogCQlsb2NhbERlY2wuc291cmNlU3RhcnQs
CiAJCWxvY2FsRGVjbC5zb3VyY2VFbmQpOwogfQorcHVibGljIHZvaWQgdW51c2VkRXhjZXB0aW9u
UGFyYW1ldGVyKExvY2FsRGVjbGFyYXRpb24gZXhjZXB0aW9uUGFyYW1ldGVyKSB7CisJaW50IHNl
dmVyaXR5ID0gY29tcHV0ZVNldmVyaXR5KElQcm9ibGVtLkV4Y2VwdGlvblBhcmFtZXRlcklzTmV2
ZXJVc2VkKTsKKwlpZiAoc2V2ZXJpdHkgPT0gUHJvYmxlbVNldmVyaXRpZXMuSWdub3JlKSByZXR1
cm47CisJU3RyaW5nW10gYXJndW1lbnRzID0gbmV3IFN0cmluZ1tdIHtuZXcgU3RyaW5nKGV4Y2Vw
dGlvblBhcmFtZXRlci5uYW1lKX07CisJdGhpcy5oYW5kbGUoCisJCUlQcm9ibGVtLkV4Y2VwdGlv
blBhcmFtZXRlcklzTmV2ZXJVc2VkLAorCQlhcmd1bWVudHMsCisJCWFyZ3VtZW50cywKKwkJc2V2
ZXJpdHksCisJCWV4Y2VwdGlvblBhcmFtZXRlci5zb3VyY2VTdGFydCwKKwkJZXhjZXB0aW9uUGFy
YW1ldGVyLnNvdXJjZUVuZCk7Cit9CiBwdWJsaWMgdm9pZCB1bnVzZWREZWNsYXJlZFRocm93bkV4
Y2VwdGlvbihSZWZlcmVuY2VCaW5kaW5nIGV4Y2VwdGlvblR5cGUsIEFic3RyYWN0TWV0aG9kRGVj
bGFyYXRpb24gbWV0aG9kLCBBU1ROb2RlIGxvY2F0aW9uKSB7CiAJYm9vbGVhbiBpc0NvbnN0cnVj
dG9yID0gbWV0aG9kLmlzQ29uc3RydWN0b3IoKTsKIAlpbnQgc2V2ZXJpdHkgPSBjb21wdXRlU2V2
ZXJpdHkoaXNDb25zdHJ1Y3RvciA/IElQcm9ibGVtLlVudXNlZENvbnN0cnVjdG9yRGVjbGFyZWRU
aHJvd25FeGNlcHRpb24gOiBJUHJvYmxlbS5VbnVzZWRNZXRob2REZWNsYXJlZFRocm93bkV4Y2Vw
dGlvbik7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9tZXNzYWdlcy5wcm9wZXJ0aWVzIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL3Byb2JsZW0vbWVzc2FnZXMucHJvcGVydGllcwppbmRleCBhYjA1ZTgxLi4zNmRhZTQz
IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9tZXNzYWdlcy5wcm9wZXJ0aWVzCisrKyBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9wcm9ibGVtL21lc3NhZ2VzLnByb3BlcnRpZXMKQEAgLTExMCw2ICsxMTAsNyBAQAogODIg
PSBUaGUgZmluYWwgZmllbGQgezB9IG1heSBhbHJlYWR5IGhhdmUgYmVlbiBhc3NpZ25lZAogODMg
PSB7MH0gY2Fubm90IGJlIHJlc29sdmVkIHRvIGEgdmFyaWFibGUKIDg0ID0gVGhpcyBzdGF0aWMg
bWV0aG9kIG9mIGludGVyZmFjZSB7MH0gY2FuIG9ubHkgYmUgYWNjZXNzZWQgYXMgezB9LnsxfQor
ODUgPSBUaGUgdmFsdWUgb2YgdGhlIGV4Y2VwdGlvbiBwYXJhbWV0ZXIgezB9IGlzIG5vdCB1c2Vk
CiAKIDkwID0gVGhlIGxvY2FsIHZhcmlhYmxlIHswfSBpcyBoaWRpbmcgYW5vdGhlciBsb2NhbCB2
YXJpYWJsZSBkZWZpbmVkIGluIGFuIGVuY2xvc2luZyBzY29wZQogOTEgPSBUaGUgbG9jYWwgdmFy
aWFibGUgezB9IGlzIGhpZGluZyBhIGZpZWxkIGZyb20gdHlwZSB7MX0K
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>244875</attachid>
            <date>2014-07-08 04:43:00 -0400</date>
            <delta_ts>2014-07-08 09:21:37 -0400</delta_ts>
            <desc>Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>19090</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0NvbXBpbGVySW52b2Nh
dGlvblRlc3RzLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Db21waWxlcklu
dm9jYXRpb25UZXN0cy5qYXZhCmluZGV4IDg4MGJlMGUuLjQ5M2Q0OTggMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0NvbXBpbGVySW52b2NhdGlvblRlc3RzLmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQ29tcGlsZXJJbnZvY2F0aW9uVGVz
dHMuamF2YQpAQCAtNDg5LDYgKzQ4OSw3IEBAIHB1YmxpYyB2b2lkIHRlc3QwMTFfcHJvYmxlbV9j
YXRlZ29yaWVzKCkgewogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiRW51bUNvbnN0
YW50c0Nhbm5vdEJlU3Vycm91bmRlZEJ5UGFyZW50aGVzaXMiLCBuZXcgUHJvYmxlbUF0dHJpYnV0
ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVtLkNBVF9TWU5UQVgpKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0
cmlidXRlcy5wdXQoIkVudW1TdGF0aWNGaWVsZEluSW5Jbml0aWFsaXplckNvbnRleHQiLCBuZXcg
UHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVtLkNBVF9NRU1CRVIpKTsKIAkJZXhw
ZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkVudW1Td2l0Y2hDYW5ub3RUYXJnZXRGaWVsZCIs
IG5ldyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX01FTUJFUikpOwor
CQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiRXhjZXB0aW9uUGFyYW1ldGVySXNOZXZl
clVzZWQiLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVtLkNBVF9VTk5F
Q0VTU0FSWV9DT0RFKSk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJFeGNlcHRp
b25UeXBlQW1iaWd1b3VzIiwgREVQUkVDQVRFRCk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0
ZXMucHV0KCJFeGNlcHRpb25UeXBlSW5oZXJpdGVkTmFtZUhpZGVzRW5jbG9zaW5nTmFtZSIsIERF
UFJFQ0FURUQpOwogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiRXhjZXB0aW9uVHlw
ZUludGVybmFsTmFtZVByb3ZpZGVkIiwgREVQUkVDQVRFRCk7CkBAIC0xMzA4LDYgKzEzMDksNyBA
QCBwdWJsaWMgdm9pZCB0ZXN0MDEyX2NvbXBpbGVyX3Byb2JsZW1zX3R1bmluZygpIHsKIAkJZXhw
ZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkVudW1Db25zdGFudHNDYW5ub3RCZVN1cnJvdW5k
ZWRCeVBhcmVudGhlc2lzIiwgU0tJUCk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0
KCJFbnVtU3RhdGljRmllbGRJbkluSW5pdGlhbGl6ZXJDb250ZXh0IiwgU0tJUCk7CiAJCWV4cGVj
dGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJFbnVtU3dpdGNoQ2Fubm90VGFyZ2V0RmllbGQiLCBT
S0lQKTsKKwkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkV4Y2VwdGlvblBhcmFtZXRl
cklzTmV2ZXJVc2VkIiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKEphdmFDb3JlLkNPTVBJTEVSX1BC
X1VOVVNFRF9QQVJBTUVURVIpKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkV4
Y2VwdGlvblR5cGVBbWJpZ3VvdXMiLCBTS0lQKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRl
cy5wdXQoIkV4Y2VwdGlvblR5cGVJbmhlcml0ZWROYW1lSGlkZXNFbmNsb3NpbmdOYW1lIiwgU0tJ
UCk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJFeGNlcHRpb25UeXBlSW50ZXJu
YWxOYW1lUHJvdmlkZWQiLCBTS0lQKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9y
ZWdyZXNzaW9uL0xvY2FsVmFyaWFibGVUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVn
cmVzc2lvbi9Mb2NhbFZhcmlhYmxlVGVzdC5qYXZhCmluZGV4IGE5Yzg1MzcuLmZlOGE1MTEgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0xvY2FsVmFyaWFibGVUZXN0
LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTG9jYWxWYXJpYWJsZVRl
c3QuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5
cmlnaHQgKGMpIDIwMDUsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5
cmlnaHQgKGMpIDIwMDUsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwg
cmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJp
YWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNl
IFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0
aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC03MTQsNiArNzE0LDE0NiBAQCBwdWJsaWMgdm9p
ZCB0ZXN0MDIwKCkgewogCQkvLyBqYXZhYyBvcHRpb25zCiAJCUphdmFjVGVzdE9wdGlvbnMuRXhj
dXNlLkVjbGlwc2VXYXJuaW5nQ29uZmlndXJlZEFzRXJyb3IgLyogamF2YWMgdGVzdCBvcHRpb25z
ICovKTsKIH0KKy8vaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lk
PTQxMjExOSwgT3B0aW9uYWwgd2FybmluZyBmb3IgdW51c2VkIHRocm93YWJsZSB2YXJpYWJsZSBp
biBjYXRjaCBibG9jaworLy9ObyBlcnJvciBtZXNzYWdlIGZvciBleGNlcHRpb24gcGFyYW1ldGVy
IG5vdCBiZWluZyB1c2VkLgorcHVibGljIHZvaWQgdGVzdDQxMjExOWEoKSB7CisJcnVuQ29uZm9y
bVRlc3QobmV3IFN0cmluZ1tdIHsKKwkJCSJwL1guamF2YSIsCisJCQkicGFja2FnZSBwO1xuIiAr
CisJCQkiY2xhc3MgWCB7XG4iICsKKwkJCSIJXG4iICsKKwkJCSIJdm9pZCBzb21ldGhpbmdEYW5n
ZXJvdXMoKSB7fVxuIiArCisJCQkiCXZvaWQgZm9vKCkge1xuIiArCisJCQkiCQl0cnkge1xuIiAr
CisJCQkiCQkJc29tZXRoaW5nRGFuZ2Vyb3VzKCk7XG4iICsKKwkJCSIJCX0gY2F0Y2goRXhjZXB0
aW9uIGUpIHtcbiIgKworCQkJIgkJCXRocm93IG5ldyBSdW50aW1lRXhjZXB0aW9uKCk7XG4iICsK
KwkJCSIJCX1cbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9XG4iLAorCQl9KTsKK30KKy8vaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQxMjExOSwgT3B0aW9uYWwg
d2FybmluZyBmb3IgdW51c2VkIHRocm93YWJsZSB2YXJpYWJsZSBpbiBjYXRjaCBibG9jaworLy9F
cnJvciBtZXNzYWdlIGZvciBleGNlcHRpb24gcGFyYW1ldGVyIG5vdCBiZWluZyB1c2VkLgorcHVi
bGljIHZvaWQgdGVzdDQxMjExOWIoKSB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlv
bnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVudXNlZFBh
cmFtZXRlciwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgK
KwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJInAvWC5qYXZhIiwKKwkJCQkicGFja2FnZSBwO1xuIiAr
CisJCQkJImNsYXNzIFgge1xuIiArCisJCQkJIgl2b2lkIHNvbWV0aGluZ0Rhbmdlcm91cygpIHt9
XG4iICsKKwkJCQkiCXZvaWQgZm9vKCkge1xuIiArCisJCQkJIgkJdHJ5IHtcbiIgKworCQkJCSIJ
CQlzb21ldGhpbmdEYW5nZXJvdXMoKTtcbiIgKworCQkJCSIJCX0gY2F0Y2goRXhjZXB0aW9uIGUp
IHtcbiIgKworCQkJCSIJCQkJdGhyb3cgbmV3IFJ1bnRpbWVFeGNlcHRpb24oKTtcbiIgKworCQkJ
CSIJCX1cbiIgKworCQkJCSIJCXRyeSB7XG4iICsKKwkJCQkiCQkJc29tZXRoaW5nRGFuZ2Vyb3Vz
KCk7XG4iICsKKworCQkJCS8vIEV4Y2VwdGlvbiB0aHJvd24gdW5kZXIgYSB0cnVlIGJvb2xlYW4g
ZXhwcmVzc2lvbgorCQkJCSIJCX0gY2F0Y2goRXhjZXB0aW9uIGUxKSB7XG4iICsKKwkJCQkiCQkJ
CWlmICh0cnVlKVxuIiArCisJCQkJIgkJCQkJdGhyb3cgbmV3IFJ1bnRpbWVFeGNlcHRpb24oZTEp
O1xuIiArCisJCQkJIgkJfVxuIiArCisKKwkJCQkvLyBDYXRjaCBjbGF1c2UgcGFyYW1ldGVyIHVz
ZWQuCisJCQkJIgkJdHJ5IHtcbiIgKworCQkJCSIJCQlzb21ldGhpbmdEYW5nZXJvdXMoKTtcbiIg
KworCQkJCSIJCX0gY2F0Y2goRXhjZXB0aW9uIGUyKSB7XG4iICsKKwkJCQkiCQkJdGhyb3cgbmV3
IFJ1bnRpbWVFeGNlcHRpb24oZTIpO1xuIiArCisJCQkJIgkJfVxuIiArCisJCQkJIiAgICB9XG4i
ICsKKwkJCQkifVxuIiwKKwkJCX0sCisJCQkiLS0tLS0tLS0tLVxuIiArCisJCQkiMS4gRVJST1Ig
aW4gcFxcWC5qYXZhIChhdCBsaW5lIDcpXG4iICsKKwkJCSIJfSBjYXRjaChFeGNlcHRpb24gZSkg
e1xuIiArCisJCQkiCSAgICAgICAgICAgICAgICAgIF5cbiIgKworCQkJIlRoZSB2YWx1ZSBvZiB0
aGUgZXhjZXB0aW9uIHBhcmFtZXRlciBlIGlzIG5vdCB1c2VkXG4iICsKKwkJCSItLS0tLS0tLS0t
XG4iLAorCQkJbnVsbCwKKwkJCXRydWUsCisJCQlvcHRpb25zKTsKK30KKy8vaHR0cHM6Ly9idWdz
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQxMjExOSwgT3B0aW9uYWwgd2Fybmlu
ZyBmb3IgdW51c2VkIHRocm93YWJsZSB2YXJpYWJsZSBpbiBjYXRjaCBibG9jaworLy9NdWx0aS1j
YXRjaCBwYXJhbWV0ZXJzLgorcHVibGljIHZvaWQgdGVzdDQxMjExOWMoKSB7CisJaWYgKHRoaXMu
Y29tcGxpYW5jZUxldmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfNykKKwkJcmV0dXJuOwor
CU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGls
ZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbnVzZWRQYXJhbWV0ZXIsIENvbXBpbGVyT3B0aW9ucy5F
UlJPUik7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJw
L1guamF2YSIsCisJCQkJInBhY2thZ2UgcDtcbiIgKworCQkJCSJjbGFzcyBYIHtcbiIgKworCQkJ
CSJjbGFzcyBaMiBleHRlbmRzIEV4Y2VwdGlvbiB7XG4iICsKKwkJCQkiCXByaXZhdGUgc3RhdGlj
IGZpbmFsIGxvbmcgc2VyaWFsVmVyc2lvblVJRCA9IDFMO31cbiIgKworCQkJCSJjbGFzcyBaMSBl
eHRlbmRzIEV4Y2VwdGlvbiB7XG4iICsKKwkJCQkiCXByaXZhdGUgc3RhdGljIGZpbmFsIGxvbmcg
c2VyaWFsVmVyc2lvblVJRCA9IDFMO31cbiIgKworCQkJCSIJdm9pZCBzb21ldGhpbmdEYW5nZXJv
dXMoaW50IHgsIGludCB5KSB0aHJvd3MgWjEsIFoyIHtcbiIgKworCQkJCSIJCWlmICh4IDwgMSlc
biIgKworCQkJCSIJCQl0aHJvdyBuZXcgWjEoKTtcbiIgKworCQkJCSIJCWlmICh5ID4gMSkgXG4i
ICsKKwkJCQkiCQkJdGhyb3cgbmV3IFoyKCk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJdm9p
ZCBmb28oaW50IHgsIGludCB5KSB7XG4iICsKKwkJCQkiCQl0cnkge1xuIiArCisJCQkJIgkJCXNv
bWV0aGluZ0Rhbmdlcm91cyh4LCB5KTtcbiIgKworCQkJCSIJCX0gY2F0Y2goWjJ8WjEgeikge1xu
IiArCisJCQkJIgkJCXRocm93IG5ldyBSdW50aW1lRXhjZXB0aW9uKCk7XG4iICsKKwkJCQkiCQl9
XG4iICsKKwkJCQkiCQl0cnkge1xuIiArCisJCQkJIgkJCXNvbWV0aGluZ0Rhbmdlcm91cyh4LCB5
KTtcbiIgKworCQkJCSIJCX0gY2F0Y2goWjJ8WjEgejIpIHtcbiIgKworCQkJCSIJCQl0aHJvdyBu
ZXcgUnVudGltZUV4Y2VwdGlvbih6Mik7XG4iICsKKwkJCQkiCQl9XG4iICsKKwkJCQkiCX1cbiIg
KworCQkJCSJ9XG4iLAorCQkJfSwKKwkJCSItLS0tLS0tLS0tXG4iICsKKwkJCSIxLiBFUlJPUiBp
biBwXFxYLmphdmEgKGF0IGxpbmUgMTYpXG4iICsKKwkJCSIJfSBjYXRjaChaMnxaMSB6KSB7XG4i
ICsKKwkJCSIJICAgICAgICAgICAgICBeXG4iICsKKwkJCSJUaGUgdmFsdWUgb2YgdGhlIGV4Y2Vw
dGlvbiBwYXJhbWV0ZXIgeiBpcyBub3QgdXNlZFxuIiArCisJCQkiLS0tLS0tLS0tLVxuIiwKKwkJ
CW51bGwsCisJCQl0cnVlLAorCQkJb3B0aW9ucyk7Cit9CisvL2h0dHBzOi8vYnVncy5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MTIxMTksIE9wdGlvbmFsIHdhcm5pbmcgZm9yIHVu
dXNlZCB0aHJvd2FibGUgdmFyaWFibGUgaW4gY2F0Y2ggYmxvY2sKKy8vU3VwcHJlc3MgV2Fybmlu
Z3MuCitwdWJsaWMgdm9pZCB0ZXN0NDEyMTE5ZCgpIHsKKwlpZiAodGhpcy5jb21wbGlhbmNlTGV2
ZWwgPCBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV81KQorCQlyZXR1cm47CisJTWFwIG9wdGlvbnMg
PSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BU
SU9OX1JlcG9ydFVudXNlZFBhcmFtZXRlciwgQ29tcGlsZXJPcHRpb25zLldBUk5JTkcpOworCXRo
aXMucnVuTmVnYXRpdmVUZXN0KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkicC9YLmphdmEiLAor
CQkJCSJwYWNrYWdlIHA7XG4iICsKKwkJCQkiY2xhc3MgWCB7XG4iICsKKwkJCQkiCUBTdXBwcmVz
c1dhcm5pbmdzKFwidW51c2VkXCIpXG4iICsKKwkJCQkiCXZvaWQgZm9vKGludCB4KSB7fVxuIiAr
CisJCQkJIgl2b2lkIHNvbWV0aGluZ0Rhbmdlcm91cygpIHt9XG4iICsKKwkJCQkiCUBTdXBwcmVz
c1dhcm5pbmdzKFwidW51c2VkXCIpXG4iICsKKwkJCQkiCXZvaWQgZm9vMygpIHtcbiIgKworCQkJ
CSIJCXRyeSB7XG4iICsKKwkJCQkiCQkJc29tZXRoaW5nRGFuZ2Vyb3VzKCk7XG4iICsKKwkJCQki
CQl9IGNhdGNoKEV4Y2VwdGlvbiBlKSB7XG4iICsKKwkJCQkiCQkJdGhyb3cgbmV3IFJ1bnRpbWVF
eGNlcHRpb24oKTtcbiIgKworCQkJCSIJCX1cbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn1cbiIs
CisJCQl9LAorCQkJIiIgLAorCQkJbnVsbCwKKwkJCXRydWUsCisJCQlvcHRpb25zKTsKK30KIHB1
YmxpYyBzdGF0aWMgQ2xhc3MgdGVzdENsYXNzKCkgewogCXJldHVybiBMb2NhbFZhcmlhYmxlVGVz
dC5jbGFzczsKIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBp
bGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9ldmFsL0NvZGVTbmlwcGV0VGVzdC5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2V2YWwvQ29kZVNuaXBwZXRUZXN0LmphdmEKaW5kZXggMWI5YTcyNi4u
MTE2YjlmNyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIv
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2V2YWwvQ29kZVNuaXBwZXRUZXN0LmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2V2YWwvQ29kZVNuaXBwZXRUZXN0LmphdmEKQEAgLTEsNSArMSw1IEBA
CiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDE0IElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBw
cm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxh
YmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAg
KiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBh
dApAQCAtNTYsNyArNTYsNyBAQCBwdWJsaWMgTWFwIGdldENvbXBpbGVyT3B0aW9ucygpIHsKIAlk
ZWZhdWx0T3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9Tb3VyY2VGaWxlQXR0cmli
dXRlLCBDb21waWxlck9wdGlvbnMuRE9fTk9UX0dFTkVSQVRFKTsKIAlkZWZhdWx0T3B0aW9ucy5w
dXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbnVzZWRMb2NhbCwgQ29tcGlsZXJPcHRp
b25zLldBUk5JTkcpOwogCWRlZmF1bHRPcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9O
X1JlcG9ydFVudXNlZEltcG9ydCwgQ29tcGlsZXJPcHRpb25zLklHTk9SRSk7Ci0JZGVmYXVsdE9w
dGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW51c2VkUGFyYW1ldGVyLCBD
b21waWxlck9wdGlvbnMuV0FSTklORyk7CisJZGVmYXVsdE9wdGlvbnMucHV0KENvbXBpbGVyT3B0
aW9ucy5PUFRJT05fUmVwb3J0VW51c2VkUGFyYW1ldGVyLCBDb21waWxlck9wdGlvbnMuSUdOT1JF
KTsKIAlkZWZhdWx0T3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRMb2Nh
bFZhcmlhYmxlSGlkaW5nLCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7CiAJZGVmYXVsdE9wdGlv
bnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW51c2VkUHJpdmF0ZU1lbWJlciwg
Q29tcGlsZXJPcHRpb25zLklHTk9SRSk7CiAJZGVmYXVsdE9wdGlvbnMucHV0KENvbXBpbGVyT3B0
aW9ucy5PUFRJT05fUmVwb3J0UG9zc2libGVBY2NpZGVudGFsQm9vbGVhbkFzc2lnbm1lbnQsIENv
bXBpbGVyT3B0aW9ucy5XQVJOSU5HKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9ldmFsL0RlYnVn
RXZhbHVhdGlvblRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVy
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9ldmFsL0RlYnVnRXZhbHVhdGlvblRlc3Qu
amF2YQppbmRleCBmNjc1ZWI0Li4xM2QyMTJiIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZXZhbC9E
ZWJ1Z0V2YWx1YXRpb25UZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
Y29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2V2YWwvRGVidWdFdmFsdWF0
aW9uVGVzdC5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAq
IENvcHlyaWdodCAoYykgMjAwMCwgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAq
IENvcHlyaWdodCAoYykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAq
IEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBt
YXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVj
bGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0
cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTE2Nyw2ICsxNjcsNyBAQCBwdWJsaWMg
Y2xhc3MgRGVidWdFdmFsdWF0aW9uVGVzdCBleHRlbmRzIEV2YWx1YXRpb25UZXN0IHsKIAkJb3B0
aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9QcmVzZXJ2ZVVudXNlZExvY2FsLCBDb21w
aWxlck9wdGlvbnMuUFJFU0VSVkUpOwogCQlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BU
SU9OX1RhcmdldFBsYXRmb3JtLCBDb21waWxlck9wdGlvbnMuVkVSU0lPTl8xXzIpOwogCQlvcHRp
b25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFJhd1R5cGVSZWZlcmVuY2UsIENv
bXBpbGVyT3B0aW9ucy5JR05PUkUpOworCQlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BU
SU9OX1JlcG9ydFVudXNlZFBhcmFtZXRlciwgQ29tcGlsZXJPcHRpb25zLklHTk9SRSk7CiAJCXJl
dHVybiBvcHRpb25zOwogCX0KIAlwdWJsaWMgdm9pZCBpbml0aWFsaXplKENvbXBpbGVyVGVzdFNl
dHVwIHNldFVwKSB7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21w
aWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZXZhbC9FdmFsdWF0aW9uVGVzdC5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2V2YWwvRXZhbHVhdGlvblRlc3QuamF2YQppbmRleCBiN2MwZDc4Li42
ZDM3Mjg0IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZXZhbC9FdmFsdWF0aW9uVGVzdC5qYXZhCisr
KyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9ldmFsL0V2YWx1YXRpb25UZXN0LmphdmEKQEAgLTEsNSArMSw1IEBACiAv
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDA4IElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDE0IElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9n
cmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxl
IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3
aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApA
QCAtMjQ1LDYgKzI0NSwzOCBAQCBwdWJsaWMgY2xhc3MgRXZhbHVhdGlvblRlc3QgZXh0ZW5kcyBB
YnN0cmFjdENvbXBpbGVyVGVzdCBpbXBsZW1lbnRzIFN0b3BhYmxlVGVzdAogCX0KIAogCS8qKgor
CSAqIEV2YWx1YXRlcyB0aGUgZ2l2ZW4gY29kZSBzbmlwcGV0IGFuZCBtYWtlcyBzdXJlIGl0IHJl
dHVybnMgYSByZXN1bHQgd2l0aCB0aGUgZ2l2ZW4gZGlzcGxheSBzdHJpbmcuCisJICogQ29tcGls
ZXIgb3B0aW9uIE9QVElPTl9SZXBvcnRVbnVzZWRQYXJhbWV0ZXIgaXMgc2V0IHRvIGxldmVsIElH
Tk9SRS4KKwkgKi8KKwlwdWJsaWMgdm9pZCBldmFsdWF0ZVdpdGhFeHBlY3RlZERpc3BsYXlTdHJp
bmcyKGNoYXJbXSBjb2RlU25pcHBldCwgY2hhcltdIGRpc3BsYXlTdHJpbmcpIHsKKwkJUmVxdWVz
dG9yIHJlcXVlc3RvciA9IG5ldyBSZXF1ZXN0b3IoKTsKKwkJTWFwIG9wdGlvbiA9IGdldENvbXBp
bGVyT3B0aW9ucygpOworCQlvcHRpb24ucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0
VW51c2VkUGFyYW1ldGVyLCBDb21waWxlck9wdGlvbnMuSUdOT1JFKTsKKwkJdHJ5IHsKKwkJCXRo
aXMuY29udGV4dC5ldmFsdWF0ZShjb2RlU25pcHBldCwgZ2V0RW52KCksIG9wdGlvbiwgcmVxdWVz
dG9yLCBnZXRQcm9ibGVtRmFjdG9yeSgpKTsKKwkJfSBjYXRjaCAoSW5zdGFsbEV4Y2VwdGlvbiBl
KSB7CisJCQlhc3NlcnRUcnVlKCJUYXJnZXQgZXhjZXB0aW9uICIgKyBlLmdldE1lc3NhZ2UoKSwg
ZmFsc2UpOworCQl9CisJCWlmIChyZXF1ZXN0b3IucmVzdWx0SW5kZXggIT0gMCkgeworCQkJZm9y
IChpbnQgaSA9IDA7IGkgPCByZXF1ZXN0b3IucmVzdWx0SW5kZXg7IGkrKykgeworCQkJCVN5c3Rl
bS5vdXQucHJpbnRsbigidW5leHBlY3RlZCByZXN1bHRbIiArIGkgKyAiXTogIiArIHJlcXVlc3Rv
ci5yZXN1bHRzW2ldKTsKKwkJCX0KKwkJfQorCQlhc3NlcnRUcnVlKCJVbmV4cGVjdGVkIHJlc3Vs
dCIsIHJlcXVlc3Rvci5yZXN1bHRJbmRleCA9PSAwKTsKKwkJRXZhbHVhdGlvblJlc3VsdCByZXN1
bHQgPSByZXF1ZXN0b3IucmVzdWx0c1swXTsKKwkJYXNzZXJ0VHJ1ZSgiSGFzIHByb2JsZW0iLCAh
cmVzdWx0Lmhhc1Byb2JsZW1zKCkpOworCQlhc3NlcnRUcnVlKCJFbXB0eSBwcm9ibGVtIGxpc3Qi
LCByZXN1bHQuZ2V0UHJvYmxlbXMoKS5sZW5ndGggPT0gMCk7CisJCWlmIChkaXNwbGF5U3RyaW5n
ID09IG51bGwpIHsKKwkJCWFzc2VydFRydWUoIkhhcyB2YWx1ZSIsICFyZXN1bHQuaGFzVmFsdWUo
KSk7CisJCX0gZWxzZSB7CisJCQlhc3NlcnRUcnVlKCJIYXMgdmFsdWUiLCByZXN1bHQuaGFzVmFs
dWUoKSk7CisJCQlhc3NlcnRFcXVhbHMoIkV2YWx1YXRpb24gdHlwZSIsIEV2YWx1YXRpb25SZXN1
bHQuVF9DT0RFX1NOSVBQRVQsIHJlc3VsdC5nZXRFdmFsdWF0aW9uVHlwZSgpKTsKKwkJCS8vYXNz
ZXJ0RXF1YWxzKCJFdmFsdWF0aW9uIGlkIiwgY29kZVNuaXBwZXQsIHJlc3VsdC5nZXRFdmFsdWF0
aW9uSUQoKSk7CisJCQlhc3NlcnRFcXVhbHMoIlZhbHVlIGRpc3BsYXkgc3RyaW5nIiwgZGlzcGxh
eVN0cmluZywgcmVzdWx0LmdldFZhbHVlRGlzcGxheVN0cmluZygpKTsKKwkJfQorCX0KKworCS8q
KgogCSAqIEV2YWx1YXRlcyB0aGUgZ2l2ZW4gY29kZSBzbmlwcGV0IGFuZCBtYWtlcyBzdXJlIHRo
ZSBldmFsdWF0aW9uIHJlc3VsdCBoYXMgYXQgbGVhc3QgdGhlIGdpdmVuIHByb2JsZW0gb24gdGhl
IGdpdmVuIGltcG9ydC4KIAkgKi8KIAlwcm90ZWN0ZWQgdm9pZCBldmFsdWF0ZVdpdGhFeHBlY3Rl
ZEltcG9ydFByb2JsZW0oY2hhcltdIGNvZGVTbmlwcGV0LCBjaGFyW10gaW1wb3J0RGVjbGFyYXRp
b24sIENhdGVnb3JpemVkUHJvYmxlbSBleHBlY3RlZCkgewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21v
ZGVsL0NvZGVDb3JyZWN0aW9uVGVzdHMuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3Rz
Lm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9Db2RlQ29ycmVjdGlv
blRlc3RzLmphdmEKaW5kZXggOTcyZjU5MS4uZWU0NjJmMSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21v
ZGVsL0NvZGVDb3JyZWN0aW9uVGVzdHMuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvQ29kZUNvcnJl
Y3Rpb25UZXN0cy5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioK
LSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
KyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
ICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWlu
ZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhl
IEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBk
aXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTgxMSw2ICs4MTEsNyBAQCBwdWJs
aWMgdm9pZCB0ZXN0V2FybmluZ1Rva2VucygpIHsKIAlhc3NlcnRFcXVhbHMoIndyb25nIHRva2Vu
IiwgInVudXNlZCIsIENvcnJlY3Rpb25FbmdpbmUuZ2V0V2FybmluZ1Rva2VuKElQcm9ibGVtLlVu
dXNlZEltcG9ydCkpOwogCWFzc2VydEVxdWFscygid3JvbmcgdG9rZW4iLCAidW51c2VkIiwgQ29y
cmVjdGlvbkVuZ2luZS5nZXRXYXJuaW5nVG9rZW4oSVByb2JsZW0uTG9jYWxWYXJpYWJsZUlzTmV2
ZXJVc2VkKSk7CiAJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0b2tlbiIsICJ1bnVzZWQiLCBDb3JyZWN0
aW9uRW5naW5lLmdldFdhcm5pbmdUb2tlbihJUHJvYmxlbS5Bcmd1bWVudElzTmV2ZXJVc2VkKSk7
CisJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0b2tlbiIsICJ1bnVzZWQiLCBDb3JyZWN0aW9uRW5naW5l
LmdldFdhcm5pbmdUb2tlbihJUHJvYmxlbS5FeGNlcHRpb25QYXJhbWV0ZXJJc05ldmVyVXNlZCkp
OwogCWFzc2VydEVxdWFscygid3JvbmcgdG9rZW4iLCAidW51c2VkIiwgQ29ycmVjdGlvbkVuZ2lu
ZS5nZXRXYXJuaW5nVG9rZW4oSVByb2JsZW0uVW51c2VkUHJpdmF0ZUNvbnN0cnVjdG9yKSk7CiAJ
YXNzZXJ0RXF1YWxzKCJ3cm9uZyB0b2tlbiIsICJ1bnVzZWQiLCBDb3JyZWN0aW9uRW5naW5lLmdl
dFdhcm5pbmdUb2tlbihJUHJvYmxlbS5VbnVzZWRQcml2YXRlTWV0aG9kKSk7CiAJYXNzZXJ0RXF1
YWxzKCJ3cm9uZyB0b2tlbiIsICJ1bnVzZWQiLCBDb3JyZWN0aW9uRW5naW5lLmdldFdhcm5pbmdU
b2tlbihJUHJvYmxlbS5VbnVzZWRQcml2YXRlRmllbGQpKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9jb3JlL2NvbXBpbGVyL0lQcm9i
bGVtLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
Y29yZS9jb21waWxlci9JUHJvYmxlbS5qYXZhCmluZGV4IGYyMmQ0NjEuLjljYTE1MzUgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L2NvbXBpbGVyL0lQcm9ibGVtLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2NvcmUvY29tcGlsZXIvSVByb2JsZW0uamF2YQpAQCAtNDU1LDYg
KzQ1NSwxMCBAQCB2b2lkIHNldFNvdXJjZVN0YXJ0KGludCBzb3VyY2VTdGFydCk7CiAJaW50IFVu
cmVzb2x2ZWRWYXJpYWJsZSA9IEZpZWxkUmVsYXRlZCArIDgzOwogCS8qKiBAc2luY2UgMy4xMCAq
LwogCWludCBOb25TdGF0aWNPckFsaWVuVHlwZVJlY2VpdmVyID0gTWV0aG9kUmVsYXRlZCArIDg0
OworCisJLyoqIEBzaW5jZSAzLjEwICovCisJaW50IEV4Y2VwdGlvblBhcmFtZXRlcklzTmV2ZXJV
c2VkID0gSW50ZXJuYWwgKyA4NTsKKwogCS8vIHZhcmlhYmxlIGhpZGluZwogCS8qKiBAc2luY2Ug
My4wICovCiAJaW50IExvY2FsVmFyaWFibGVIaWRpbmdMb2NhbFZhcmlhYmxlID0gSW50ZXJuYWwg
KyA5MDsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQmxvY2tTY29wZS5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2xvb2t1cC9CbG9ja1Njb3BlLmphdmEKaW5kZXggNzhjMWU1Yi4uZGUyZWE1ZiAxMDA2NDQKLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2xvb2t1cC9CbG9ja1Njb3BlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CbG9j
a1Njb3BlLmphdmEKQEAgLTI0OSw4ICsyNDksMTIgQEAgdm9pZCBjb21wdXRlTG9jYWxWYXJpYWJs
ZVBvc2l0aW9ucyhpbnQgaWxvY2FsLCBpbnQgaW5pdE9mZnNldCwgQ29kZVN0cmVhbSBjb2RlU3QK
IAkJCQkmJiAobG9jYWwuZGVjbGFyYXRpb24gIT0gbnVsbCkgLy8gdW51c2VkIChhbmQgbm9uIHNl
Y3JldCkgbG9jYWwKIAkJCQkmJiAoKGxvY2FsLmRlY2xhcmF0aW9uLmJpdHMgJiBBU1ROb2RlLklz
TG9jYWxEZWNsYXJhdGlvblJlYWNoYWJsZSkgIT0gMCkpIHsgLy8gZGVjbGFyYXRpb24gaXMgcmVh
Y2hhYmxlCiAKLQkJCQlpZiAoIShsb2NhbC5kZWNsYXJhdGlvbiBpbnN0YW5jZW9mIEFyZ3VtZW50
KSkgLy8gZG8gbm90IHJlcG9ydCB1bnVzZWQgY2F0Y2ggYXJndW1lbnRzCisJCQkJaWYgKGxvY2Fs
LmlzQ2F0Y2hQYXJhbWV0ZXIoKSkgeworCQkJCQlwcm9ibGVtUmVwb3J0ZXIoKS51bnVzZWRFeGNl
cHRpb25QYXJhbWV0ZXIobG9jYWwuZGVjbGFyYXRpb24pOyAvLyByZXBvcnQgdW51c2VkIGNhdGNo
IGFyZ3VtZW50cworCQkJCX0KKwkJCQllbHNlIHsKIAkJCQkJcHJvYmxlbVJlcG9ydGVyKCkudW51
c2VkTG9jYWxWYXJpYWJsZShsb2NhbC5kZWNsYXJhdGlvbik7CisJCQkJfQogCQkJfQogCiAJCQkv
LyBjb3VsZCBiZSBvcHRpbWl6ZWQgb3V0LCBidXQgZG9lcyBuZWVkIHRvIHByZXNlcnZlIHVucmVh
ZCB2YXJpYWJsZXMgPwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2JsZW0vUHJvYmxlbVJlcG9ydGVy
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVtUmVwb3J0ZXIuamF2YQppbmRleCA0ZTFlM2I5
Li5kNDM4MGY1IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVtUmVwb3J0ZXIuamF2
YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVtUmVwb3J0ZXIuamF2YQpAQCAtMjI2LDYgKzIy
Niw3IEBAIHB1YmxpYyBzdGF0aWMgaW50IGdldElycml0YW50KGludCBwcm9ibGVtSUQpIHsKIAkJ
CXJldHVybiBDb21waWxlck9wdGlvbnMuVW51c2VkTG9jYWxWYXJpYWJsZTsKIAogCQljYXNlIElQ
cm9ibGVtLkFyZ3VtZW50SXNOZXZlclVzZWQgOgorCQljYXNlIElQcm9ibGVtLkV4Y2VwdGlvblBh
cmFtZXRlcklzTmV2ZXJVc2VkOgogCQkJcmV0dXJuIENvbXBpbGVyT3B0aW9ucy5VbnVzZWRBcmd1
bWVudDsKIAogCQljYXNlIElQcm9ibGVtLk5vSW1wbGljaXRTdHJpbmdDb252ZXJzaW9uRm9yQ2hh
ckFycmF5RXhwcmVzc2lvbiA6CkBAIC04NDg1LDYgKzg0ODYsMTggQEAgcHVibGljIHZvaWQgdW51
c2VkQXJndW1lbnQoTG9jYWxEZWNsYXJhdGlvbiBsb2NhbERlY2wpIHsKIAkJbG9jYWxEZWNsLnNv
dXJjZVN0YXJ0LAogCQlsb2NhbERlY2wuc291cmNlRW5kKTsKIH0KK3B1YmxpYyB2b2lkIHVudXNl
ZEV4Y2VwdGlvblBhcmFtZXRlcihMb2NhbERlY2xhcmF0aW9uIGV4Y2VwdGlvblBhcmFtZXRlcikg
eworCWludCBzZXZlcml0eSA9IGNvbXB1dGVTZXZlcml0eShJUHJvYmxlbS5FeGNlcHRpb25QYXJh
bWV0ZXJJc05ldmVyVXNlZCk7CisJaWYgKHNldmVyaXR5ID09IFByb2JsZW1TZXZlcml0aWVzLkln
bm9yZSkgcmV0dXJuOworCVN0cmluZ1tdIGFyZ3VtZW50cyA9IG5ldyBTdHJpbmdbXSB7bmV3IFN0
cmluZyhleGNlcHRpb25QYXJhbWV0ZXIubmFtZSl9OworCXRoaXMuaGFuZGxlKAorCQlJUHJvYmxl
bS5FeGNlcHRpb25QYXJhbWV0ZXJJc05ldmVyVXNlZCwKKwkJYXJndW1lbnRzLAorCQlhcmd1bWVu
dHMsCisJCXNldmVyaXR5LAorCQlleGNlcHRpb25QYXJhbWV0ZXIuc291cmNlU3RhcnQsCisJCWV4
Y2VwdGlvblBhcmFtZXRlci5zb3VyY2VFbmQpOworfQogcHVibGljIHZvaWQgdW51c2VkRGVjbGFy
ZWRUaHJvd25FeGNlcHRpb24oUmVmZXJlbmNlQmluZGluZyBleGNlcHRpb25UeXBlLCBBYnN0cmFj
dE1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZCwgQVNUTm9kZSBsb2NhdGlvbikgewogCWJvb2xlYW4g
aXNDb25zdHJ1Y3RvciA9IG1ldGhvZC5pc0NvbnN0cnVjdG9yKCk7CiAJaW50IHNldmVyaXR5ID0g
Y29tcHV0ZVNldmVyaXR5KGlzQ29uc3RydWN0b3IgPyBJUHJvYmxlbS5VbnVzZWRDb25zdHJ1Y3Rv
ckRlY2xhcmVkVGhyb3duRXhjZXB0aW9uIDogSVByb2JsZW0uVW51c2VkTWV0aG9kRGVjbGFyZWRU
aHJvd25FeGNlcHRpb24pOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2JsZW0vbWVzc2FnZXMucHJv
cGVydGllcyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9wcm9ibGVtL21lc3NhZ2VzLnByb3BlcnRpZXMKaW5kZXggYWIwNWU4
MS4uMzZkYWU0MyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2JsZW0vbWVzc2FnZXMucHJvcGVydGll
cworKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9tZXNzYWdlcy5wcm9wZXJ0aWVzCkBAIC0xMTAsNiArMTEw
LDcgQEAKIDgyID0gVGhlIGZpbmFsIGZpZWxkIHswfSBtYXkgYWxyZWFkeSBoYXZlIGJlZW4gYXNz
aWduZWQKIDgzID0gezB9IGNhbm5vdCBiZSByZXNvbHZlZCB0byBhIHZhcmlhYmxlCiA4NCA9IFRo
aXMgc3RhdGljIG1ldGhvZCBvZiBpbnRlcmZhY2UgezB9IGNhbiBvbmx5IGJlIGFjY2Vzc2VkIGFz
IHswfS57MX0KKzg1ID0gVGhlIHZhbHVlIG9mIHRoZSBleGNlcHRpb24gcGFyYW1ldGVyIHswfSBp
cyBub3QgdXNlZAogCiA5MCA9IFRoZSBsb2NhbCB2YXJpYWJsZSB7MH0gaXMgaGlkaW5nIGFub3Ro
ZXIgbG9jYWwgdmFyaWFibGUgZGVmaW5lZCBpbiBhbiBlbmNsb3Npbmcgc2NvcGUKIDkxID0gVGhl
IGxvY2FsIHZhcmlhYmxlIHswfSBpcyBoaWRpbmcgYSBmaWVsZCBmcm9tIHR5cGUgezF9Cg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>244882</attachid>
            <date>2014-07-08 09:21:00 -0400</date>
            <delta_ts>2014-07-10 06:41:10 -0400</delta_ts>
            <desc>Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>16389</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0NvbXBpbGVySW52b2Nh
dGlvblRlc3RzLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Db21waWxlcklu
dm9jYXRpb25UZXN0cy5qYXZhCmluZGV4IDg4MGJlMGUuLjQ5M2Q0OTggMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0NvbXBpbGVySW52b2NhdGlvblRlc3RzLmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQ29tcGlsZXJJbnZvY2F0aW9uVGVz
dHMuamF2YQpAQCAtNDg5LDYgKzQ4OSw3IEBAIHB1YmxpYyB2b2lkIHRlc3QwMTFfcHJvYmxlbV9j
YXRlZ29yaWVzKCkgewogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiRW51bUNvbnN0
YW50c0Nhbm5vdEJlU3Vycm91bmRlZEJ5UGFyZW50aGVzaXMiLCBuZXcgUHJvYmxlbUF0dHJpYnV0
ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVtLkNBVF9TWU5UQVgpKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0
cmlidXRlcy5wdXQoIkVudW1TdGF0aWNGaWVsZEluSW5Jbml0aWFsaXplckNvbnRleHQiLCBuZXcg
UHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVtLkNBVF9NRU1CRVIpKTsKIAkJZXhw
ZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkVudW1Td2l0Y2hDYW5ub3RUYXJnZXRGaWVsZCIs
IG5ldyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX01FTUJFUikpOwor
CQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiRXhjZXB0aW9uUGFyYW1ldGVySXNOZXZl
clVzZWQiLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVtLkNBVF9VTk5F
Q0VTU0FSWV9DT0RFKSk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJFeGNlcHRp
b25UeXBlQW1iaWd1b3VzIiwgREVQUkVDQVRFRCk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0
ZXMucHV0KCJFeGNlcHRpb25UeXBlSW5oZXJpdGVkTmFtZUhpZGVzRW5jbG9zaW5nTmFtZSIsIERF
UFJFQ0FURUQpOwogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiRXhjZXB0aW9uVHlw
ZUludGVybmFsTmFtZVByb3ZpZGVkIiwgREVQUkVDQVRFRCk7CkBAIC0xMzA4LDYgKzEzMDksNyBA
QCBwdWJsaWMgdm9pZCB0ZXN0MDEyX2NvbXBpbGVyX3Byb2JsZW1zX3R1bmluZygpIHsKIAkJZXhw
ZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkVudW1Db25zdGFudHNDYW5ub3RCZVN1cnJvdW5k
ZWRCeVBhcmVudGhlc2lzIiwgU0tJUCk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0
KCJFbnVtU3RhdGljRmllbGRJbkluSW5pdGlhbGl6ZXJDb250ZXh0IiwgU0tJUCk7CiAJCWV4cGVj
dGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJFbnVtU3dpdGNoQ2Fubm90VGFyZ2V0RmllbGQiLCBT
S0lQKTsKKwkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkV4Y2VwdGlvblBhcmFtZXRl
cklzTmV2ZXJVc2VkIiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKEphdmFDb3JlLkNPTVBJTEVSX1BC
X1VOVVNFRF9QQVJBTUVURVIpKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkV4
Y2VwdGlvblR5cGVBbWJpZ3VvdXMiLCBTS0lQKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRl
cy5wdXQoIkV4Y2VwdGlvblR5cGVJbmhlcml0ZWROYW1lSGlkZXNFbmNsb3NpbmdOYW1lIiwgU0tJ
UCk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJFeGNlcHRpb25UeXBlSW50ZXJu
YWxOYW1lUHJvdmlkZWQiLCBTS0lQKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9y
ZWdyZXNzaW9uL0xvY2FsVmFyaWFibGVUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVn
cmVzc2lvbi9Mb2NhbFZhcmlhYmxlVGVzdC5qYXZhCmluZGV4IGE5Yzg1MzcuLmZlOGE1MTEgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0xvY2FsVmFyaWFibGVUZXN0
LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTG9jYWxWYXJpYWJsZVRl
c3QuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5
cmlnaHQgKGMpIDIwMDUsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5
cmlnaHQgKGMpIDIwMDUsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwg
cmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJp
YWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNl
IFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0
aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC03MTQsNiArNzE0LDE0NiBAQCBwdWJsaWMgdm9p
ZCB0ZXN0MDIwKCkgewogCQkvLyBqYXZhYyBvcHRpb25zCiAJCUphdmFjVGVzdE9wdGlvbnMuRXhj
dXNlLkVjbGlwc2VXYXJuaW5nQ29uZmlndXJlZEFzRXJyb3IgLyogamF2YWMgdGVzdCBvcHRpb25z
ICovKTsKIH0KKy8vaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lk
PTQxMjExOSwgT3B0aW9uYWwgd2FybmluZyBmb3IgdW51c2VkIHRocm93YWJsZSB2YXJpYWJsZSBp
biBjYXRjaCBibG9jaworLy9ObyBlcnJvciBtZXNzYWdlIGZvciBleGNlcHRpb24gcGFyYW1ldGVy
IG5vdCBiZWluZyB1c2VkLgorcHVibGljIHZvaWQgdGVzdDQxMjExOWEoKSB7CisJcnVuQ29uZm9y
bVRlc3QobmV3IFN0cmluZ1tdIHsKKwkJCSJwL1guamF2YSIsCisJCQkicGFja2FnZSBwO1xuIiAr
CisJCQkiY2xhc3MgWCB7XG4iICsKKwkJCSIJXG4iICsKKwkJCSIJdm9pZCBzb21ldGhpbmdEYW5n
ZXJvdXMoKSB7fVxuIiArCisJCQkiCXZvaWQgZm9vKCkge1xuIiArCisJCQkiCQl0cnkge1xuIiAr
CisJCQkiCQkJc29tZXRoaW5nRGFuZ2Vyb3VzKCk7XG4iICsKKwkJCSIJCX0gY2F0Y2goRXhjZXB0
aW9uIGUpIHtcbiIgKworCQkJIgkJCXRocm93IG5ldyBSdW50aW1lRXhjZXB0aW9uKCk7XG4iICsK
KwkJCSIJCX1cbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9XG4iLAorCQl9KTsKK30KKy8vaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQxMjExOSwgT3B0aW9uYWwg
d2FybmluZyBmb3IgdW51c2VkIHRocm93YWJsZSB2YXJpYWJsZSBpbiBjYXRjaCBibG9jaworLy9F
cnJvciBtZXNzYWdlIGZvciBleGNlcHRpb24gcGFyYW1ldGVyIG5vdCBiZWluZyB1c2VkLgorcHVi
bGljIHZvaWQgdGVzdDQxMjExOWIoKSB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlv
bnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVudXNlZFBh
cmFtZXRlciwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgK
KwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJInAvWC5qYXZhIiwKKwkJCQkicGFja2FnZSBwO1xuIiAr
CisJCQkJImNsYXNzIFgge1xuIiArCisJCQkJIgl2b2lkIHNvbWV0aGluZ0Rhbmdlcm91cygpIHt9
XG4iICsKKwkJCQkiCXZvaWQgZm9vKCkge1xuIiArCisJCQkJIgkJdHJ5IHtcbiIgKworCQkJCSIJ
CQlzb21ldGhpbmdEYW5nZXJvdXMoKTtcbiIgKworCQkJCSIJCX0gY2F0Y2goRXhjZXB0aW9uIGUp
IHtcbiIgKworCQkJCSIJCQkJdGhyb3cgbmV3IFJ1bnRpbWVFeGNlcHRpb24oKTtcbiIgKworCQkJ
CSIJCX1cbiIgKworCQkJCSIJCXRyeSB7XG4iICsKKwkJCQkiCQkJc29tZXRoaW5nRGFuZ2Vyb3Vz
KCk7XG4iICsKKworCQkJCS8vIEV4Y2VwdGlvbiB0aHJvd24gdW5kZXIgYSB0cnVlIGJvb2xlYW4g
ZXhwcmVzc2lvbgorCQkJCSIJCX0gY2F0Y2goRXhjZXB0aW9uIGUxKSB7XG4iICsKKwkJCQkiCQkJ
CWlmICh0cnVlKVxuIiArCisJCQkJIgkJCQkJdGhyb3cgbmV3IFJ1bnRpbWVFeGNlcHRpb24oZTEp
O1xuIiArCisJCQkJIgkJfVxuIiArCisKKwkJCQkvLyBDYXRjaCBjbGF1c2UgcGFyYW1ldGVyIHVz
ZWQuCisJCQkJIgkJdHJ5IHtcbiIgKworCQkJCSIJCQlzb21ldGhpbmdEYW5nZXJvdXMoKTtcbiIg
KworCQkJCSIJCX0gY2F0Y2goRXhjZXB0aW9uIGUyKSB7XG4iICsKKwkJCQkiCQkJdGhyb3cgbmV3
IFJ1bnRpbWVFeGNlcHRpb24oZTIpO1xuIiArCisJCQkJIgkJfVxuIiArCisJCQkJIiAgICB9XG4i
ICsKKwkJCQkifVxuIiwKKwkJCX0sCisJCQkiLS0tLS0tLS0tLVxuIiArCisJCQkiMS4gRVJST1Ig
aW4gcFxcWC5qYXZhIChhdCBsaW5lIDcpXG4iICsKKwkJCSIJfSBjYXRjaChFeGNlcHRpb24gZSkg
e1xuIiArCisJCQkiCSAgICAgICAgICAgICAgICAgIF5cbiIgKworCQkJIlRoZSB2YWx1ZSBvZiB0
aGUgZXhjZXB0aW9uIHBhcmFtZXRlciBlIGlzIG5vdCB1c2VkXG4iICsKKwkJCSItLS0tLS0tLS0t
XG4iLAorCQkJbnVsbCwKKwkJCXRydWUsCisJCQlvcHRpb25zKTsKK30KKy8vaHR0cHM6Ly9idWdz
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQxMjExOSwgT3B0aW9uYWwgd2Fybmlu
ZyBmb3IgdW51c2VkIHRocm93YWJsZSB2YXJpYWJsZSBpbiBjYXRjaCBibG9jaworLy9NdWx0aS1j
YXRjaCBwYXJhbWV0ZXJzLgorcHVibGljIHZvaWQgdGVzdDQxMjExOWMoKSB7CisJaWYgKHRoaXMu
Y29tcGxpYW5jZUxldmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfNykKKwkJcmV0dXJuOwor
CU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGls
ZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbnVzZWRQYXJhbWV0ZXIsIENvbXBpbGVyT3B0aW9ucy5F
UlJPUik7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJw
L1guamF2YSIsCisJCQkJInBhY2thZ2UgcDtcbiIgKworCQkJCSJjbGFzcyBYIHtcbiIgKworCQkJ
CSJjbGFzcyBaMiBleHRlbmRzIEV4Y2VwdGlvbiB7XG4iICsKKwkJCQkiCXByaXZhdGUgc3RhdGlj
IGZpbmFsIGxvbmcgc2VyaWFsVmVyc2lvblVJRCA9IDFMO31cbiIgKworCQkJCSJjbGFzcyBaMSBl
eHRlbmRzIEV4Y2VwdGlvbiB7XG4iICsKKwkJCQkiCXByaXZhdGUgc3RhdGljIGZpbmFsIGxvbmcg
c2VyaWFsVmVyc2lvblVJRCA9IDFMO31cbiIgKworCQkJCSIJdm9pZCBzb21ldGhpbmdEYW5nZXJv
dXMoaW50IHgsIGludCB5KSB0aHJvd3MgWjEsIFoyIHtcbiIgKworCQkJCSIJCWlmICh4IDwgMSlc
biIgKworCQkJCSIJCQl0aHJvdyBuZXcgWjEoKTtcbiIgKworCQkJCSIJCWlmICh5ID4gMSkgXG4i
ICsKKwkJCQkiCQkJdGhyb3cgbmV3IFoyKCk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJdm9p
ZCBmb28oaW50IHgsIGludCB5KSB7XG4iICsKKwkJCQkiCQl0cnkge1xuIiArCisJCQkJIgkJCXNv
bWV0aGluZ0Rhbmdlcm91cyh4LCB5KTtcbiIgKworCQkJCSIJCX0gY2F0Y2goWjJ8WjEgeikge1xu
IiArCisJCQkJIgkJCXRocm93IG5ldyBSdW50aW1lRXhjZXB0aW9uKCk7XG4iICsKKwkJCQkiCQl9
XG4iICsKKwkJCQkiCQl0cnkge1xuIiArCisJCQkJIgkJCXNvbWV0aGluZ0Rhbmdlcm91cyh4LCB5
KTtcbiIgKworCQkJCSIJCX0gY2F0Y2goWjJ8WjEgejIpIHtcbiIgKworCQkJCSIJCQl0aHJvdyBu
ZXcgUnVudGltZUV4Y2VwdGlvbih6Mik7XG4iICsKKwkJCQkiCQl9XG4iICsKKwkJCQkiCX1cbiIg
KworCQkJCSJ9XG4iLAorCQkJfSwKKwkJCSItLS0tLS0tLS0tXG4iICsKKwkJCSIxLiBFUlJPUiBp
biBwXFxYLmphdmEgKGF0IGxpbmUgMTYpXG4iICsKKwkJCSIJfSBjYXRjaChaMnxaMSB6KSB7XG4i
ICsKKwkJCSIJICAgICAgICAgICAgICBeXG4iICsKKwkJCSJUaGUgdmFsdWUgb2YgdGhlIGV4Y2Vw
dGlvbiBwYXJhbWV0ZXIgeiBpcyBub3QgdXNlZFxuIiArCisJCQkiLS0tLS0tLS0tLVxuIiwKKwkJ
CW51bGwsCisJCQl0cnVlLAorCQkJb3B0aW9ucyk7Cit9CisvL2h0dHBzOi8vYnVncy5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MTIxMTksIE9wdGlvbmFsIHdhcm5pbmcgZm9yIHVu
dXNlZCB0aHJvd2FibGUgdmFyaWFibGUgaW4gY2F0Y2ggYmxvY2sKKy8vU3VwcHJlc3MgV2Fybmlu
Z3MuCitwdWJsaWMgdm9pZCB0ZXN0NDEyMTE5ZCgpIHsKKwlpZiAodGhpcy5jb21wbGlhbmNlTGV2
ZWwgPCBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV81KQorCQlyZXR1cm47CisJTWFwIG9wdGlvbnMg
PSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BU
SU9OX1JlcG9ydFVudXNlZFBhcmFtZXRlciwgQ29tcGlsZXJPcHRpb25zLldBUk5JTkcpOworCXRo
aXMucnVuTmVnYXRpdmVUZXN0KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkicC9YLmphdmEiLAor
CQkJCSJwYWNrYWdlIHA7XG4iICsKKwkJCQkiY2xhc3MgWCB7XG4iICsKKwkJCQkiCUBTdXBwcmVz
c1dhcm5pbmdzKFwidW51c2VkXCIpXG4iICsKKwkJCQkiCXZvaWQgZm9vKGludCB4KSB7fVxuIiAr
CisJCQkJIgl2b2lkIHNvbWV0aGluZ0Rhbmdlcm91cygpIHt9XG4iICsKKwkJCQkiCUBTdXBwcmVz
c1dhcm5pbmdzKFwidW51c2VkXCIpXG4iICsKKwkJCQkiCXZvaWQgZm9vMygpIHtcbiIgKworCQkJ
CSIJCXRyeSB7XG4iICsKKwkJCQkiCQkJc29tZXRoaW5nRGFuZ2Vyb3VzKCk7XG4iICsKKwkJCQki
CQl9IGNhdGNoKEV4Y2VwdGlvbiBlKSB7XG4iICsKKwkJCQkiCQkJdGhyb3cgbmV3IFJ1bnRpbWVF
eGNlcHRpb24oKTtcbiIgKworCQkJCSIJCX1cbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn1cbiIs
CisJCQl9LAorCQkJIiIgLAorCQkJbnVsbCwKKwkJCXRydWUsCisJCQlvcHRpb25zKTsKK30KIHB1
YmxpYyBzdGF0aWMgQ2xhc3MgdGVzdENsYXNzKCkgewogCXJldHVybiBMb2NhbFZhcmlhYmxlVGVz
dC5jbGFzczsKIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBp
bGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9ldmFsL0NvZGVTbmlwcGV0VGVzdC5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2V2YWwvQ29kZVNuaXBwZXRUZXN0LmphdmEKaW5kZXggMWI5YTcyNi4u
MTE2YjlmNyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIv
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2V2YWwvQ29kZVNuaXBwZXRUZXN0LmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2V2YWwvQ29kZVNuaXBwZXRUZXN0LmphdmEKQEAgLTEsNSArMSw1IEBA
CiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDE0IElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBw
cm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxh
YmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAg
KiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBh
dApAQCAtNTYsNyArNTYsNyBAQCBwdWJsaWMgTWFwIGdldENvbXBpbGVyT3B0aW9ucygpIHsKIAlk
ZWZhdWx0T3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9Tb3VyY2VGaWxlQXR0cmli
dXRlLCBDb21waWxlck9wdGlvbnMuRE9fTk9UX0dFTkVSQVRFKTsKIAlkZWZhdWx0T3B0aW9ucy5w
dXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbnVzZWRMb2NhbCwgQ29tcGlsZXJPcHRp
b25zLldBUk5JTkcpOwogCWRlZmF1bHRPcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9O
X1JlcG9ydFVudXNlZEltcG9ydCwgQ29tcGlsZXJPcHRpb25zLklHTk9SRSk7Ci0JZGVmYXVsdE9w
dGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW51c2VkUGFyYW1ldGVyLCBD
b21waWxlck9wdGlvbnMuV0FSTklORyk7CisJZGVmYXVsdE9wdGlvbnMucHV0KENvbXBpbGVyT3B0
aW9ucy5PUFRJT05fUmVwb3J0VW51c2VkUGFyYW1ldGVyLCBDb21waWxlck9wdGlvbnMuSUdOT1JF
KTsKIAlkZWZhdWx0T3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRMb2Nh
bFZhcmlhYmxlSGlkaW5nLCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7CiAJZGVmYXVsdE9wdGlv
bnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW51c2VkUHJpdmF0ZU1lbWJlciwg
Q29tcGlsZXJPcHRpb25zLklHTk9SRSk7CiAJZGVmYXVsdE9wdGlvbnMucHV0KENvbXBpbGVyT3B0
aW9ucy5PUFRJT05fUmVwb3J0UG9zc2libGVBY2NpZGVudGFsQm9vbGVhbkFzc2lnbm1lbnQsIENv
bXBpbGVyT3B0aW9ucy5XQVJOSU5HKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9ldmFsL0RlYnVn
RXZhbHVhdGlvblRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVy
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9ldmFsL0RlYnVnRXZhbHVhdGlvblRlc3Qu
amF2YQppbmRleCBmNjc1ZWI0Li4xM2QyMTJiIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZXZhbC9E
ZWJ1Z0V2YWx1YXRpb25UZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
Y29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2V2YWwvRGVidWdFdmFsdWF0
aW9uVGVzdC5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAq
IENvcHlyaWdodCAoYykgMjAwMCwgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAq
IENvcHlyaWdodCAoYykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAq
IEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBt
YXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVj
bGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0
cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTE2Nyw2ICsxNjcsNyBAQCBwdWJsaWMg
Y2xhc3MgRGVidWdFdmFsdWF0aW9uVGVzdCBleHRlbmRzIEV2YWx1YXRpb25UZXN0IHsKIAkJb3B0
aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9QcmVzZXJ2ZVVudXNlZExvY2FsLCBDb21w
aWxlck9wdGlvbnMuUFJFU0VSVkUpOwogCQlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BU
SU9OX1RhcmdldFBsYXRmb3JtLCBDb21waWxlck9wdGlvbnMuVkVSU0lPTl8xXzIpOwogCQlvcHRp
b25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFJhd1R5cGVSZWZlcmVuY2UsIENv
bXBpbGVyT3B0aW9ucy5JR05PUkUpOworCQlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BU
SU9OX1JlcG9ydFVudXNlZFBhcmFtZXRlciwgQ29tcGlsZXJPcHRpb25zLklHTk9SRSk7CiAJCXJl
dHVybiBvcHRpb25zOwogCX0KIAlwdWJsaWMgdm9pZCBpbml0aWFsaXplKENvbXBpbGVyVGVzdFNl
dHVwIHNldFVwKSB7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2Rl
bC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvQ29kZUNvcnJlY3Rpb25UZXN0
cy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL21vZGVsL0NvZGVDb3JyZWN0aW9uVGVzdHMuamF2YQppbmRleCA5NzJm
NTkxLi5lZTQ2MmYxIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2Rl
bC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvQ29kZUNvcnJlY3Rpb25UZXN0
cy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9Db2RlQ29ycmVjdGlvblRlc3RzLmphdmEKQEAgLTEs
NSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZl
ZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1h
ZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5z
ZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2
YWlsYWJsZSBhdApAQCAtODExLDYgKzgxMSw3IEBAIHB1YmxpYyB2b2lkIHRlc3RXYXJuaW5nVG9r
ZW5zKCkgewogCWFzc2VydEVxdWFscygid3JvbmcgdG9rZW4iLCAidW51c2VkIiwgQ29ycmVjdGlv
bkVuZ2luZS5nZXRXYXJuaW5nVG9rZW4oSVByb2JsZW0uVW51c2VkSW1wb3J0KSk7CiAJYXNzZXJ0
RXF1YWxzKCJ3cm9uZyB0b2tlbiIsICJ1bnVzZWQiLCBDb3JyZWN0aW9uRW5naW5lLmdldFdhcm5p
bmdUb2tlbihJUHJvYmxlbS5Mb2NhbFZhcmlhYmxlSXNOZXZlclVzZWQpKTsKIAlhc3NlcnRFcXVh
bHMoIndyb25nIHRva2VuIiwgInVudXNlZCIsIENvcnJlY3Rpb25FbmdpbmUuZ2V0V2FybmluZ1Rv
a2VuKElQcm9ibGVtLkFyZ3VtZW50SXNOZXZlclVzZWQpKTsKKwlhc3NlcnRFcXVhbHMoIndyb25n
IHRva2VuIiwgInVudXNlZCIsIENvcnJlY3Rpb25FbmdpbmUuZ2V0V2FybmluZ1Rva2VuKElQcm9i
bGVtLkV4Y2VwdGlvblBhcmFtZXRlcklzTmV2ZXJVc2VkKSk7CiAJYXNzZXJ0RXF1YWxzKCJ3cm9u
ZyB0b2tlbiIsICJ1bnVzZWQiLCBDb3JyZWN0aW9uRW5naW5lLmdldFdhcm5pbmdUb2tlbihJUHJv
YmxlbS5VbnVzZWRQcml2YXRlQ29uc3RydWN0b3IpKTsKIAlhc3NlcnRFcXVhbHMoIndyb25nIHRv
a2VuIiwgInVudXNlZCIsIENvcnJlY3Rpb25FbmdpbmUuZ2V0V2FybmluZ1Rva2VuKElQcm9ibGVt
LlVudXNlZFByaXZhdGVNZXRob2QpKTsKIAlhc3NlcnRFcXVhbHMoIndyb25nIHRva2VuIiwgInVu
dXNlZCIsIENvcnJlY3Rpb25FbmdpbmUuZ2V0V2FybmluZ1Rva2VuKElQcm9ibGVtLlVudXNlZFBy
aXZhdGVGaWVsZCkpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2NvcmUvY29tcGlsZXIvSVByb2JsZW0uamF2YSBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9jb3JlL2NvbXBpbGVyL0lQcm9ibGVt
LmphdmEKaW5kZXggZjIyZDQ2MS4uOWNhMTUzNSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2NvcmUvY29tcGlsZXIvSVByb2JsZW0uamF2
YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvY29y
ZS9jb21waWxlci9JUHJvYmxlbS5qYXZhCkBAIC00NTUsNiArNDU1LDEwIEBAIHZvaWQgc2V0U291
cmNlU3RhcnQoaW50IHNvdXJjZVN0YXJ0KTsKIAlpbnQgVW5yZXNvbHZlZFZhcmlhYmxlID0gRmll
bGRSZWxhdGVkICsgODM7CiAJLyoqIEBzaW5jZSAzLjEwICovCiAJaW50IE5vblN0YXRpY09yQWxp
ZW5UeXBlUmVjZWl2ZXIgPSBNZXRob2RSZWxhdGVkICsgODQ7CisKKwkvKiogQHNpbmNlIDMuMTAg
Ki8KKwlpbnQgRXhjZXB0aW9uUGFyYW1ldGVySXNOZXZlclVzZWQgPSBJbnRlcm5hbCArIDg1Owor
CiAJLy8gdmFyaWFibGUgaGlkaW5nCiAJLyoqIEBzaW5jZSAzLjAgKi8KIAlpbnQgTG9jYWxWYXJp
YWJsZUhpZGluZ0xvY2FsVmFyaWFibGUgPSBJbnRlcm5hbCArIDkwOwpkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2xvb2t1cC9CbG9ja1Njb3BlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Jsb2NrU2NvcGUuamF2
YQppbmRleCA3OGMxZTViLi5kZTJlYTVmIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Jsb2Nr
U2NvcGUuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Jsb2NrU2NvcGUuamF2YQpAQCAtMjQ5LDgg
KzI0OSwxMiBAQCB2b2lkIGNvbXB1dGVMb2NhbFZhcmlhYmxlUG9zaXRpb25zKGludCBpbG9jYWws
IGludCBpbml0T2Zmc2V0LCBDb2RlU3RyZWFtIGNvZGVTdAogCQkJCSYmIChsb2NhbC5kZWNsYXJh
dGlvbiAhPSBudWxsKSAvLyB1bnVzZWQgKGFuZCBub24gc2VjcmV0KSBsb2NhbAogCQkJCSYmICgo
bG9jYWwuZGVjbGFyYXRpb24uYml0cyAmIEFTVE5vZGUuSXNMb2NhbERlY2xhcmF0aW9uUmVhY2hh
YmxlKSAhPSAwKSkgeyAvLyBkZWNsYXJhdGlvbiBpcyByZWFjaGFibGUKIAotCQkJCWlmICghKGxv
Y2FsLmRlY2xhcmF0aW9uIGluc3RhbmNlb2YgQXJndW1lbnQpKSAvLyBkbyBub3QgcmVwb3J0IHVu
dXNlZCBjYXRjaCBhcmd1bWVudHMKKwkJCQlpZiAobG9jYWwuaXNDYXRjaFBhcmFtZXRlcigpKSB7
CisJCQkJCXByb2JsZW1SZXBvcnRlcigpLnVudXNlZEV4Y2VwdGlvblBhcmFtZXRlcihsb2NhbC5k
ZWNsYXJhdGlvbik7IC8vIHJlcG9ydCB1bnVzZWQgY2F0Y2ggYXJndW1lbnRzCisJCQkJfQorCQkJ
CWVsc2UgewogCQkJCQlwcm9ibGVtUmVwb3J0ZXIoKS51bnVzZWRMb2NhbFZhcmlhYmxlKGxvY2Fs
LmRlY2xhcmF0aW9uKTsKKwkJCQl9CiAJCQl9CiAKIAkJCS8vIGNvdWxkIGJlIG9wdGltaXplZCBv
dXQsIGJ1dCBkb2VzIG5lZWQgdG8gcHJlc2VydmUgdW5yZWFkIHZhcmlhYmxlcyA/CmRpZmYgLS1n
aXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVtUmVwb3J0ZXIuamF2YSBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVt
L1Byb2JsZW1SZXBvcnRlci5qYXZhCmluZGV4IDRlMWUzYjkuLmQ0MzgwZjUgMTAwNjQ0Ci0tLSBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9wcm9ibGVtL1Byb2JsZW1SZXBvcnRlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVt
L1Byb2JsZW1SZXBvcnRlci5qYXZhCkBAIC0yMjYsNiArMjI2LDcgQEAgcHVibGljIHN0YXRpYyBp
bnQgZ2V0SXJyaXRhbnQoaW50IHByb2JsZW1JRCkgewogCQkJcmV0dXJuIENvbXBpbGVyT3B0aW9u
cy5VbnVzZWRMb2NhbFZhcmlhYmxlOwogCiAJCWNhc2UgSVByb2JsZW0uQXJndW1lbnRJc05ldmVy
VXNlZCA6CisJCWNhc2UgSVByb2JsZW0uRXhjZXB0aW9uUGFyYW1ldGVySXNOZXZlclVzZWQ6CiAJ
CQlyZXR1cm4gQ29tcGlsZXJPcHRpb25zLlVudXNlZEFyZ3VtZW50OwogCiAJCWNhc2UgSVByb2Js
ZW0uTm9JbXBsaWNpdFN0cmluZ0NvbnZlcnNpb25Gb3JDaGFyQXJyYXlFeHByZXNzaW9uIDoKQEAg
LTg0ODUsNiArODQ4NiwxOCBAQCBwdWJsaWMgdm9pZCB1bnVzZWRBcmd1bWVudChMb2NhbERlY2xh
cmF0aW9uIGxvY2FsRGVjbCkgewogCQlsb2NhbERlY2wuc291cmNlU3RhcnQsCiAJCWxvY2FsRGVj
bC5zb3VyY2VFbmQpOwogfQorcHVibGljIHZvaWQgdW51c2VkRXhjZXB0aW9uUGFyYW1ldGVyKExv
Y2FsRGVjbGFyYXRpb24gZXhjZXB0aW9uUGFyYW1ldGVyKSB7CisJaW50IHNldmVyaXR5ID0gY29t
cHV0ZVNldmVyaXR5KElQcm9ibGVtLkV4Y2VwdGlvblBhcmFtZXRlcklzTmV2ZXJVc2VkKTsKKwlp
ZiAoc2V2ZXJpdHkgPT0gUHJvYmxlbVNldmVyaXRpZXMuSWdub3JlKSByZXR1cm47CisJU3RyaW5n
W10gYXJndW1lbnRzID0gbmV3IFN0cmluZ1tdIHtuZXcgU3RyaW5nKGV4Y2VwdGlvblBhcmFtZXRl
ci5uYW1lKX07CisJdGhpcy5oYW5kbGUoCisJCUlQcm9ibGVtLkV4Y2VwdGlvblBhcmFtZXRlcklz
TmV2ZXJVc2VkLAorCQlhcmd1bWVudHMsCisJCWFyZ3VtZW50cywKKwkJc2V2ZXJpdHksCisJCWV4
Y2VwdGlvblBhcmFtZXRlci5zb3VyY2VTdGFydCwKKwkJZXhjZXB0aW9uUGFyYW1ldGVyLnNvdXJj
ZUVuZCk7Cit9CiBwdWJsaWMgdm9pZCB1bnVzZWREZWNsYXJlZFRocm93bkV4Y2VwdGlvbihSZWZl
cmVuY2VCaW5kaW5nIGV4Y2VwdGlvblR5cGUsIEFic3RyYWN0TWV0aG9kRGVjbGFyYXRpb24gbWV0
aG9kLCBBU1ROb2RlIGxvY2F0aW9uKSB7CiAJYm9vbGVhbiBpc0NvbnN0cnVjdG9yID0gbWV0aG9k
LmlzQ29uc3RydWN0b3IoKTsKIAlpbnQgc2V2ZXJpdHkgPSBjb21wdXRlU2V2ZXJpdHkoaXNDb25z
dHJ1Y3RvciA/IElQcm9ibGVtLlVudXNlZENvbnN0cnVjdG9yRGVjbGFyZWRUaHJvd25FeGNlcHRp
b24gOiBJUHJvYmxlbS5VbnVzZWRNZXRob2REZWNsYXJlZFRocm93bkV4Y2VwdGlvbik7CmRpZmYg
LS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9tZXNzYWdlcy5wcm9wZXJ0aWVzIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2Js
ZW0vbWVzc2FnZXMucHJvcGVydGllcwppbmRleCBhYjA1ZTgxLi4zNmRhZTQzIDEwMDY0NAotLS0g
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvcHJvYmxlbS9tZXNzYWdlcy5wcm9wZXJ0aWVzCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVt
L21lc3NhZ2VzLnByb3BlcnRpZXMKQEAgLTExMCw2ICsxMTAsNyBAQAogODIgPSBUaGUgZmluYWwg
ZmllbGQgezB9IG1heSBhbHJlYWR5IGhhdmUgYmVlbiBhc3NpZ25lZAogODMgPSB7MH0gY2Fubm90
IGJlIHJlc29sdmVkIHRvIGEgdmFyaWFibGUKIDg0ID0gVGhpcyBzdGF0aWMgbWV0aG9kIG9mIGlu
dGVyZmFjZSB7MH0gY2FuIG9ubHkgYmUgYWNjZXNzZWQgYXMgezB9LnsxfQorODUgPSBUaGUgdmFs
dWUgb2YgdGhlIGV4Y2VwdGlvbiBwYXJhbWV0ZXIgezB9IGlzIG5vdCB1c2VkCiAKIDkwID0gVGhl
IGxvY2FsIHZhcmlhYmxlIHswfSBpcyBoaWRpbmcgYW5vdGhlciBsb2NhbCB2YXJpYWJsZSBkZWZp
bmVkIGluIGFuIGVuY2xvc2luZyBzY29wZQogOTEgPSBUaGUgbG9jYWwgdmFyaWFibGUgezB9IGlz
IGhpZGluZyBhIGZpZWxkIGZyb20gdHlwZSB7MX0K
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>244970</attachid>
            <date>2014-07-10 06:41:00 -0400</date>
            <delta_ts>2014-07-10 06:41:10 -0400</delta_ts>
            <desc>Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>14992</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0NvbXBpbGVySW52b2Nh
dGlvblRlc3RzLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Db21waWxlcklu
dm9jYXRpb25UZXN0cy5qYXZhCmluZGV4IDg4MGJlMGUuLjQ5M2Q0OTggMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0NvbXBpbGVySW52b2NhdGlvblRlc3RzLmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQ29tcGlsZXJJbnZvY2F0aW9uVGVz
dHMuamF2YQpAQCAtNDg5LDYgKzQ4OSw3IEBAIHB1YmxpYyB2b2lkIHRlc3QwMTFfcHJvYmxlbV9j
YXRlZ29yaWVzKCkgewogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiRW51bUNvbnN0
YW50c0Nhbm5vdEJlU3Vycm91bmRlZEJ5UGFyZW50aGVzaXMiLCBuZXcgUHJvYmxlbUF0dHJpYnV0
ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVtLkNBVF9TWU5UQVgpKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0
cmlidXRlcy5wdXQoIkVudW1TdGF0aWNGaWVsZEluSW5Jbml0aWFsaXplckNvbnRleHQiLCBuZXcg
UHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVtLkNBVF9NRU1CRVIpKTsKIAkJZXhw
ZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkVudW1Td2l0Y2hDYW5ub3RUYXJnZXRGaWVsZCIs
IG5ldyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX01FTUJFUikpOwor
CQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiRXhjZXB0aW9uUGFyYW1ldGVySXNOZXZl
clVzZWQiLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVtLkNBVF9VTk5F
Q0VTU0FSWV9DT0RFKSk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJFeGNlcHRp
b25UeXBlQW1iaWd1b3VzIiwgREVQUkVDQVRFRCk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0
ZXMucHV0KCJFeGNlcHRpb25UeXBlSW5oZXJpdGVkTmFtZUhpZGVzRW5jbG9zaW5nTmFtZSIsIERF
UFJFQ0FURUQpOwogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiRXhjZXB0aW9uVHlw
ZUludGVybmFsTmFtZVByb3ZpZGVkIiwgREVQUkVDQVRFRCk7CkBAIC0xMzA4LDYgKzEzMDksNyBA
QCBwdWJsaWMgdm9pZCB0ZXN0MDEyX2NvbXBpbGVyX3Byb2JsZW1zX3R1bmluZygpIHsKIAkJZXhw
ZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkVudW1Db25zdGFudHNDYW5ub3RCZVN1cnJvdW5k
ZWRCeVBhcmVudGhlc2lzIiwgU0tJUCk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0
KCJFbnVtU3RhdGljRmllbGRJbkluSW5pdGlhbGl6ZXJDb250ZXh0IiwgU0tJUCk7CiAJCWV4cGVj
dGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJFbnVtU3dpdGNoQ2Fubm90VGFyZ2V0RmllbGQiLCBT
S0lQKTsKKwkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkV4Y2VwdGlvblBhcmFtZXRl
cklzTmV2ZXJVc2VkIiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKEphdmFDb3JlLkNPTVBJTEVSX1BC
X1VOVVNFRF9QQVJBTUVURVIpKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkV4
Y2VwdGlvblR5cGVBbWJpZ3VvdXMiLCBTS0lQKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRl
cy5wdXQoIkV4Y2VwdGlvblR5cGVJbmhlcml0ZWROYW1lSGlkZXNFbmNsb3NpbmdOYW1lIiwgU0tJ
UCk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJFeGNlcHRpb25UeXBlSW50ZXJu
YWxOYW1lUHJvdmlkZWQiLCBTS0lQKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9y
ZWdyZXNzaW9uL0xvY2FsVmFyaWFibGVUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVn
cmVzc2lvbi9Mb2NhbFZhcmlhYmxlVGVzdC5qYXZhCmluZGV4IGE5Yzg1MzcuLmZlOGE1MTEgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0xvY2FsVmFyaWFibGVUZXN0
LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTG9jYWxWYXJpYWJsZVRl
c3QuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5
cmlnaHQgKGMpIDIwMDUsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5
cmlnaHQgKGMpIDIwMDUsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwg
cmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJp
YWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNl
IFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0
aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC03MTQsNiArNzE0LDE0NiBAQCBwdWJsaWMgdm9p
ZCB0ZXN0MDIwKCkgewogCQkvLyBqYXZhYyBvcHRpb25zCiAJCUphdmFjVGVzdE9wdGlvbnMuRXhj
dXNlLkVjbGlwc2VXYXJuaW5nQ29uZmlndXJlZEFzRXJyb3IgLyogamF2YWMgdGVzdCBvcHRpb25z
ICovKTsKIH0KKy8vaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lk
PTQxMjExOSwgT3B0aW9uYWwgd2FybmluZyBmb3IgdW51c2VkIHRocm93YWJsZSB2YXJpYWJsZSBp
biBjYXRjaCBibG9jaworLy9ObyBlcnJvciBtZXNzYWdlIGZvciBleGNlcHRpb24gcGFyYW1ldGVy
IG5vdCBiZWluZyB1c2VkLgorcHVibGljIHZvaWQgdGVzdDQxMjExOWEoKSB7CisJcnVuQ29uZm9y
bVRlc3QobmV3IFN0cmluZ1tdIHsKKwkJCSJwL1guamF2YSIsCisJCQkicGFja2FnZSBwO1xuIiAr
CisJCQkiY2xhc3MgWCB7XG4iICsKKwkJCSIJXG4iICsKKwkJCSIJdm9pZCBzb21ldGhpbmdEYW5n
ZXJvdXMoKSB7fVxuIiArCisJCQkiCXZvaWQgZm9vKCkge1xuIiArCisJCQkiCQl0cnkge1xuIiAr
CisJCQkiCQkJc29tZXRoaW5nRGFuZ2Vyb3VzKCk7XG4iICsKKwkJCSIJCX0gY2F0Y2goRXhjZXB0
aW9uIGUpIHtcbiIgKworCQkJIgkJCXRocm93IG5ldyBSdW50aW1lRXhjZXB0aW9uKCk7XG4iICsK
KwkJCSIJCX1cbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9XG4iLAorCQl9KTsKK30KKy8vaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQxMjExOSwgT3B0aW9uYWwg
d2FybmluZyBmb3IgdW51c2VkIHRocm93YWJsZSB2YXJpYWJsZSBpbiBjYXRjaCBibG9jaworLy9F
cnJvciBtZXNzYWdlIGZvciBleGNlcHRpb24gcGFyYW1ldGVyIG5vdCBiZWluZyB1c2VkLgorcHVi
bGljIHZvaWQgdGVzdDQxMjExOWIoKSB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlv
bnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVudXNlZFBh
cmFtZXRlciwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgK
KwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJInAvWC5qYXZhIiwKKwkJCQkicGFja2FnZSBwO1xuIiAr
CisJCQkJImNsYXNzIFgge1xuIiArCisJCQkJIgl2b2lkIHNvbWV0aGluZ0Rhbmdlcm91cygpIHt9
XG4iICsKKwkJCQkiCXZvaWQgZm9vKCkge1xuIiArCisJCQkJIgkJdHJ5IHtcbiIgKworCQkJCSIJ
CQlzb21ldGhpbmdEYW5nZXJvdXMoKTtcbiIgKworCQkJCSIJCX0gY2F0Y2goRXhjZXB0aW9uIGUp
IHtcbiIgKworCQkJCSIJCQkJdGhyb3cgbmV3IFJ1bnRpbWVFeGNlcHRpb24oKTtcbiIgKworCQkJ
CSIJCX1cbiIgKworCQkJCSIJCXRyeSB7XG4iICsKKwkJCQkiCQkJc29tZXRoaW5nRGFuZ2Vyb3Vz
KCk7XG4iICsKKworCQkJCS8vIEV4Y2VwdGlvbiB0aHJvd24gdW5kZXIgYSB0cnVlIGJvb2xlYW4g
ZXhwcmVzc2lvbgorCQkJCSIJCX0gY2F0Y2goRXhjZXB0aW9uIGUxKSB7XG4iICsKKwkJCQkiCQkJ
CWlmICh0cnVlKVxuIiArCisJCQkJIgkJCQkJdGhyb3cgbmV3IFJ1bnRpbWVFeGNlcHRpb24oZTEp
O1xuIiArCisJCQkJIgkJfVxuIiArCisKKwkJCQkvLyBDYXRjaCBjbGF1c2UgcGFyYW1ldGVyIHVz
ZWQuCisJCQkJIgkJdHJ5IHtcbiIgKworCQkJCSIJCQlzb21ldGhpbmdEYW5nZXJvdXMoKTtcbiIg
KworCQkJCSIJCX0gY2F0Y2goRXhjZXB0aW9uIGUyKSB7XG4iICsKKwkJCQkiCQkJdGhyb3cgbmV3
IFJ1bnRpbWVFeGNlcHRpb24oZTIpO1xuIiArCisJCQkJIgkJfVxuIiArCisJCQkJIiAgICB9XG4i
ICsKKwkJCQkifVxuIiwKKwkJCX0sCisJCQkiLS0tLS0tLS0tLVxuIiArCisJCQkiMS4gRVJST1Ig
aW4gcFxcWC5qYXZhIChhdCBsaW5lIDcpXG4iICsKKwkJCSIJfSBjYXRjaChFeGNlcHRpb24gZSkg
e1xuIiArCisJCQkiCSAgICAgICAgICAgICAgICAgIF5cbiIgKworCQkJIlRoZSB2YWx1ZSBvZiB0
aGUgZXhjZXB0aW9uIHBhcmFtZXRlciBlIGlzIG5vdCB1c2VkXG4iICsKKwkJCSItLS0tLS0tLS0t
XG4iLAorCQkJbnVsbCwKKwkJCXRydWUsCisJCQlvcHRpb25zKTsKK30KKy8vaHR0cHM6Ly9idWdz
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQxMjExOSwgT3B0aW9uYWwgd2Fybmlu
ZyBmb3IgdW51c2VkIHRocm93YWJsZSB2YXJpYWJsZSBpbiBjYXRjaCBibG9jaworLy9NdWx0aS1j
YXRjaCBwYXJhbWV0ZXJzLgorcHVibGljIHZvaWQgdGVzdDQxMjExOWMoKSB7CisJaWYgKHRoaXMu
Y29tcGxpYW5jZUxldmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfNykKKwkJcmV0dXJuOwor
CU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGls
ZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbnVzZWRQYXJhbWV0ZXIsIENvbXBpbGVyT3B0aW9ucy5F
UlJPUik7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJw
L1guamF2YSIsCisJCQkJInBhY2thZ2UgcDtcbiIgKworCQkJCSJjbGFzcyBYIHtcbiIgKworCQkJ
CSJjbGFzcyBaMiBleHRlbmRzIEV4Y2VwdGlvbiB7XG4iICsKKwkJCQkiCXByaXZhdGUgc3RhdGlj
IGZpbmFsIGxvbmcgc2VyaWFsVmVyc2lvblVJRCA9IDFMO31cbiIgKworCQkJCSJjbGFzcyBaMSBl
eHRlbmRzIEV4Y2VwdGlvbiB7XG4iICsKKwkJCQkiCXByaXZhdGUgc3RhdGljIGZpbmFsIGxvbmcg
c2VyaWFsVmVyc2lvblVJRCA9IDFMO31cbiIgKworCQkJCSIJdm9pZCBzb21ldGhpbmdEYW5nZXJv
dXMoaW50IHgsIGludCB5KSB0aHJvd3MgWjEsIFoyIHtcbiIgKworCQkJCSIJCWlmICh4IDwgMSlc
biIgKworCQkJCSIJCQl0aHJvdyBuZXcgWjEoKTtcbiIgKworCQkJCSIJCWlmICh5ID4gMSkgXG4i
ICsKKwkJCQkiCQkJdGhyb3cgbmV3IFoyKCk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJdm9p
ZCBmb28oaW50IHgsIGludCB5KSB7XG4iICsKKwkJCQkiCQl0cnkge1xuIiArCisJCQkJIgkJCXNv
bWV0aGluZ0Rhbmdlcm91cyh4LCB5KTtcbiIgKworCQkJCSIJCX0gY2F0Y2goWjJ8WjEgeikge1xu
IiArCisJCQkJIgkJCXRocm93IG5ldyBSdW50aW1lRXhjZXB0aW9uKCk7XG4iICsKKwkJCQkiCQl9
XG4iICsKKwkJCQkiCQl0cnkge1xuIiArCisJCQkJIgkJCXNvbWV0aGluZ0Rhbmdlcm91cyh4LCB5
KTtcbiIgKworCQkJCSIJCX0gY2F0Y2goWjJ8WjEgejIpIHtcbiIgKworCQkJCSIJCQl0aHJvdyBu
ZXcgUnVudGltZUV4Y2VwdGlvbih6Mik7XG4iICsKKwkJCQkiCQl9XG4iICsKKwkJCQkiCX1cbiIg
KworCQkJCSJ9XG4iLAorCQkJfSwKKwkJCSItLS0tLS0tLS0tXG4iICsKKwkJCSIxLiBFUlJPUiBp
biBwXFxYLmphdmEgKGF0IGxpbmUgMTYpXG4iICsKKwkJCSIJfSBjYXRjaChaMnxaMSB6KSB7XG4i
ICsKKwkJCSIJICAgICAgICAgICAgICBeXG4iICsKKwkJCSJUaGUgdmFsdWUgb2YgdGhlIGV4Y2Vw
dGlvbiBwYXJhbWV0ZXIgeiBpcyBub3QgdXNlZFxuIiArCisJCQkiLS0tLS0tLS0tLVxuIiwKKwkJ
CW51bGwsCisJCQl0cnVlLAorCQkJb3B0aW9ucyk7Cit9CisvL2h0dHBzOi8vYnVncy5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MTIxMTksIE9wdGlvbmFsIHdhcm5pbmcgZm9yIHVu
dXNlZCB0aHJvd2FibGUgdmFyaWFibGUgaW4gY2F0Y2ggYmxvY2sKKy8vU3VwcHJlc3MgV2Fybmlu
Z3MuCitwdWJsaWMgdm9pZCB0ZXN0NDEyMTE5ZCgpIHsKKwlpZiAodGhpcy5jb21wbGlhbmNlTGV2
ZWwgPCBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV81KQorCQlyZXR1cm47CisJTWFwIG9wdGlvbnMg
PSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BU
SU9OX1JlcG9ydFVudXNlZFBhcmFtZXRlciwgQ29tcGlsZXJPcHRpb25zLldBUk5JTkcpOworCXRo
aXMucnVuTmVnYXRpdmVUZXN0KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkicC9YLmphdmEiLAor
CQkJCSJwYWNrYWdlIHA7XG4iICsKKwkJCQkiY2xhc3MgWCB7XG4iICsKKwkJCQkiCUBTdXBwcmVz
c1dhcm5pbmdzKFwidW51c2VkXCIpXG4iICsKKwkJCQkiCXZvaWQgZm9vKGludCB4KSB7fVxuIiAr
CisJCQkJIgl2b2lkIHNvbWV0aGluZ0Rhbmdlcm91cygpIHt9XG4iICsKKwkJCQkiCUBTdXBwcmVz
c1dhcm5pbmdzKFwidW51c2VkXCIpXG4iICsKKwkJCQkiCXZvaWQgZm9vMygpIHtcbiIgKworCQkJ
CSIJCXRyeSB7XG4iICsKKwkJCQkiCQkJc29tZXRoaW5nRGFuZ2Vyb3VzKCk7XG4iICsKKwkJCQki
CQl9IGNhdGNoKEV4Y2VwdGlvbiBlKSB7XG4iICsKKwkJCQkiCQkJdGhyb3cgbmV3IFJ1bnRpbWVF
eGNlcHRpb24oKTtcbiIgKworCQkJCSIJCX1cbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn1cbiIs
CisJCQl9LAorCQkJIiIgLAorCQkJbnVsbCwKKwkJCXRydWUsCisJCQlvcHRpb25zKTsKK30KIHB1
YmxpYyBzdGF0aWMgQ2xhc3MgdGVzdENsYXNzKCkgewogCXJldHVybiBMb2NhbFZhcmlhYmxlVGVz
dC5jbGFzczsKIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBp
bGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9ldmFsL0V2YWx1YXRpb25UZXN0Lmph
dmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvZXZhbC9FdmFsdWF0aW9uVGVzdC5qYXZhCmluZGV4IGI3YzBkNzguLjNm
MjJmNzggMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3Ny
Yy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9ldmFsL0V2YWx1YXRpb25UZXN0LmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pk
dC9jb3JlL3Rlc3RzL2V2YWwvRXZhbHVhdGlvblRlc3QuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8q
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMDggSUJNIENv
cnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTQgSUJNIENv
cnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dy
YW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUg
dW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdo
aWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBA
IC00NzgsNyArNDc4LDYgQEAgcHVibGljIGNsYXNzIEV2YWx1YXRpb25UZXN0IGV4dGVuZHMgQWJz
dHJhY3RDb21waWxlclRlc3QgaW1wbGVtZW50cyBTdG9wYWJsZVRlc3QKIAkJZGVmYXVsdE9wdGlv
bnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fU291cmNlRmlsZUF0dHJpYnV0ZSwgQ29tcGls
ZXJPcHRpb25zLkRPX05PVF9HRU5FUkFURSk7CiAJCWRlZmF1bHRPcHRpb25zLnB1dChDb21waWxl
ck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVudXNlZExvY2FsLCBDb21waWxlck9wdGlvbnMuV0FSTklO
Ryk7CiAJCWRlZmF1bHRPcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVu
dXNlZEltcG9ydCwgQ29tcGlsZXJPcHRpb25zLklHTk9SRSk7Ci0JCWRlZmF1bHRPcHRpb25zLnB1
dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVudXNlZFBhcmFtZXRlciwgQ29tcGlsZXJP
cHRpb25zLldBUk5JTkcpOwogCQlkZWZhdWx0T3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9Q
VElPTl9SZXBvcnRMb2NhbFZhcmlhYmxlSGlkaW5nLCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7
CiAJCWRlZmF1bHRPcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVudXNl
ZFByaXZhdGVNZW1iZXIsIENvbXBpbGVyT3B0aW9ucy5JR05PUkUpOwogCQlkZWZhdWx0T3B0aW9u
cy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3NzaWJsZUFjY2lkZW50YWxCb29s
ZWFuQXNzaWdubWVudCwgQ29tcGlsZXJPcHRpb25zLldBUk5JTkcpOwpkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL21vZGVsL0NvZGVDb3JyZWN0aW9uVGVzdHMuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9Db2RlQ29y
cmVjdGlvblRlc3RzLmphdmEKaW5kZXggOTcyZjU5MS4uZWU0NjJmMSAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL21vZGVsL0NvZGVDb3JyZWN0aW9uVGVzdHMuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvQ29k
ZUNvcnJlY3Rpb25UZXN0cy5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90
aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5kIG90
aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29t
cGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMg
b2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMg
dGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTgxMSw2ICs4MTEsNyBA
QCBwdWJsaWMgdm9pZCB0ZXN0V2FybmluZ1Rva2VucygpIHsKIAlhc3NlcnRFcXVhbHMoIndyb25n
IHRva2VuIiwgInVudXNlZCIsIENvcnJlY3Rpb25FbmdpbmUuZ2V0V2FybmluZ1Rva2VuKElQcm9i
bGVtLlVudXNlZEltcG9ydCkpOwogCWFzc2VydEVxdWFscygid3JvbmcgdG9rZW4iLCAidW51c2Vk
IiwgQ29ycmVjdGlvbkVuZ2luZS5nZXRXYXJuaW5nVG9rZW4oSVByb2JsZW0uTG9jYWxWYXJpYWJs
ZUlzTmV2ZXJVc2VkKSk7CiAJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0b2tlbiIsICJ1bnVzZWQiLCBD
b3JyZWN0aW9uRW5naW5lLmdldFdhcm5pbmdUb2tlbihJUHJvYmxlbS5Bcmd1bWVudElzTmV2ZXJV
c2VkKSk7CisJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0b2tlbiIsICJ1bnVzZWQiLCBDb3JyZWN0aW9u
RW5naW5lLmdldFdhcm5pbmdUb2tlbihJUHJvYmxlbS5FeGNlcHRpb25QYXJhbWV0ZXJJc05ldmVy
VXNlZCkpOwogCWFzc2VydEVxdWFscygid3JvbmcgdG9rZW4iLCAidW51c2VkIiwgQ29ycmVjdGlv
bkVuZ2luZS5nZXRXYXJuaW5nVG9rZW4oSVByb2JsZW0uVW51c2VkUHJpdmF0ZUNvbnN0cnVjdG9y
KSk7CiAJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0b2tlbiIsICJ1bnVzZWQiLCBDb3JyZWN0aW9uRW5n
aW5lLmdldFdhcm5pbmdUb2tlbihJUHJvYmxlbS5VbnVzZWRQcml2YXRlTWV0aG9kKSk7CiAJYXNz
ZXJ0RXF1YWxzKCJ3cm9uZyB0b2tlbiIsICJ1bnVzZWQiLCBDb3JyZWN0aW9uRW5naW5lLmdldFdh
cm5pbmdUb2tlbihJUHJvYmxlbS5VbnVzZWRQcml2YXRlRmllbGQpKTsKZGlmZiAtLWdpdCBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9jb3JlL2NvbXBpbGVy
L0lQcm9ibGVtLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvY29yZS9jb21waWxlci9JUHJvYmxlbS5qYXZhCmluZGV4IGYyMmQ0NjEuLjljYTE1MzUg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9jb3JlL2NvbXBpbGVyL0lQcm9ibGVtLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2NvcmUvY29tcGlsZXIvSVByb2JsZW0uamF2YQpAQCAt
NDU1LDYgKzQ1NSwxMCBAQCB2b2lkIHNldFNvdXJjZVN0YXJ0KGludCBzb3VyY2VTdGFydCk7CiAJ
aW50IFVucmVzb2x2ZWRWYXJpYWJsZSA9IEZpZWxkUmVsYXRlZCArIDgzOwogCS8qKiBAc2luY2Ug
My4xMCAqLwogCWludCBOb25TdGF0aWNPckFsaWVuVHlwZVJlY2VpdmVyID0gTWV0aG9kUmVsYXRl
ZCArIDg0OworCisJLyoqIEBzaW5jZSAzLjEwICovCisJaW50IEV4Y2VwdGlvblBhcmFtZXRlcklz
TmV2ZXJVc2VkID0gSW50ZXJuYWwgKyA4NTsKKwogCS8vIHZhcmlhYmxlIGhpZGluZwogCS8qKiBA
c2luY2UgMy4wICovCiAJaW50IExvY2FsVmFyaWFibGVIaWRpbmdMb2NhbFZhcmlhYmxlID0gSW50
ZXJuYWwgKyA5MDsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQmxvY2tTY29wZS5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9CbG9ja1Njb3BlLmphdmEKaW5kZXggNzhjMWU1Yi4uZGUyZWE1ZiAxMDA2
NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CbG9ja1Njb3BlLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1
cC9CbG9ja1Njb3BlLmphdmEKQEAgLTI0OSw4ICsyNDksMTIgQEAgdm9pZCBjb21wdXRlTG9jYWxW
YXJpYWJsZVBvc2l0aW9ucyhpbnQgaWxvY2FsLCBpbnQgaW5pdE9mZnNldCwgQ29kZVN0cmVhbSBj
b2RlU3QKIAkJCQkmJiAobG9jYWwuZGVjbGFyYXRpb24gIT0gbnVsbCkgLy8gdW51c2VkIChhbmQg
bm9uIHNlY3JldCkgbG9jYWwKIAkJCQkmJiAoKGxvY2FsLmRlY2xhcmF0aW9uLmJpdHMgJiBBU1RO
b2RlLklzTG9jYWxEZWNsYXJhdGlvblJlYWNoYWJsZSkgIT0gMCkpIHsgLy8gZGVjbGFyYXRpb24g
aXMgcmVhY2hhYmxlCiAKLQkJCQlpZiAoIShsb2NhbC5kZWNsYXJhdGlvbiBpbnN0YW5jZW9mIEFy
Z3VtZW50KSkgLy8gZG8gbm90IHJlcG9ydCB1bnVzZWQgY2F0Y2ggYXJndW1lbnRzCisJCQkJaWYg
KGxvY2FsLmlzQ2F0Y2hQYXJhbWV0ZXIoKSkgeworCQkJCQlwcm9ibGVtUmVwb3J0ZXIoKS51bnVz
ZWRFeGNlcHRpb25QYXJhbWV0ZXIobG9jYWwuZGVjbGFyYXRpb24pOyAvLyByZXBvcnQgdW51c2Vk
IGNhdGNoIGFyZ3VtZW50cworCQkJCX0KKwkJCQllbHNlIHsKIAkJCQkJcHJvYmxlbVJlcG9ydGVy
KCkudW51c2VkTG9jYWxWYXJpYWJsZShsb2NhbC5kZWNsYXJhdGlvbik7CisJCQkJfQogCQkJfQog
CiAJCQkvLyBjb3VsZCBiZSBvcHRpbWl6ZWQgb3V0LCBidXQgZG9lcyBuZWVkIHRvIHByZXNlcnZl
IHVucmVhZCB2YXJpYWJsZXMgPwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2JsZW0vUHJvYmxlbVJl
cG9ydGVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVtUmVwb3J0ZXIuamF2YQppbmRleCA0
ZTFlM2I5Li5kNDM4MGY1IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVtUmVwb3J0
ZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVtUmVwb3J0ZXIuamF2YQpAQCAtMjI2
LDYgKzIyNiw3IEBAIHB1YmxpYyBzdGF0aWMgaW50IGdldElycml0YW50KGludCBwcm9ibGVtSUQp
IHsKIAkJCXJldHVybiBDb21waWxlck9wdGlvbnMuVW51c2VkTG9jYWxWYXJpYWJsZTsKIAogCQlj
YXNlIElQcm9ibGVtLkFyZ3VtZW50SXNOZXZlclVzZWQgOgorCQljYXNlIElQcm9ibGVtLkV4Y2Vw
dGlvblBhcmFtZXRlcklzTmV2ZXJVc2VkOgogCQkJcmV0dXJuIENvbXBpbGVyT3B0aW9ucy5VbnVz
ZWRBcmd1bWVudDsKIAogCQljYXNlIElQcm9ibGVtLk5vSW1wbGljaXRTdHJpbmdDb252ZXJzaW9u
Rm9yQ2hhckFycmF5RXhwcmVzc2lvbiA6CkBAIC04NDg1LDYgKzg0ODYsMTggQEAgcHVibGljIHZv
aWQgdW51c2VkQXJndW1lbnQoTG9jYWxEZWNsYXJhdGlvbiBsb2NhbERlY2wpIHsKIAkJbG9jYWxE
ZWNsLnNvdXJjZVN0YXJ0LAogCQlsb2NhbERlY2wuc291cmNlRW5kKTsKIH0KK3B1YmxpYyB2b2lk
IHVudXNlZEV4Y2VwdGlvblBhcmFtZXRlcihMb2NhbERlY2xhcmF0aW9uIGV4Y2VwdGlvblBhcmFt
ZXRlcikgeworCWludCBzZXZlcml0eSA9IGNvbXB1dGVTZXZlcml0eShJUHJvYmxlbS5FeGNlcHRp
b25QYXJhbWV0ZXJJc05ldmVyVXNlZCk7CisJaWYgKHNldmVyaXR5ID09IFByb2JsZW1TZXZlcml0
aWVzLklnbm9yZSkgcmV0dXJuOworCVN0cmluZ1tdIGFyZ3VtZW50cyA9IG5ldyBTdHJpbmdbXSB7
bmV3IFN0cmluZyhleGNlcHRpb25QYXJhbWV0ZXIubmFtZSl9OworCXRoaXMuaGFuZGxlKAorCQlJ
UHJvYmxlbS5FeGNlcHRpb25QYXJhbWV0ZXJJc05ldmVyVXNlZCwKKwkJYXJndW1lbnRzLAorCQlh
cmd1bWVudHMsCisJCXNldmVyaXR5LAorCQlleGNlcHRpb25QYXJhbWV0ZXIuc291cmNlU3RhcnQs
CisJCWV4Y2VwdGlvblBhcmFtZXRlci5zb3VyY2VFbmQpOworfQogcHVibGljIHZvaWQgdW51c2Vk
RGVjbGFyZWRUaHJvd25FeGNlcHRpb24oUmVmZXJlbmNlQmluZGluZyBleGNlcHRpb25UeXBlLCBB
YnN0cmFjdE1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZCwgQVNUTm9kZSBsb2NhdGlvbikgewogCWJv
b2xlYW4gaXNDb25zdHJ1Y3RvciA9IG1ldGhvZC5pc0NvbnN0cnVjdG9yKCk7CiAJaW50IHNldmVy
aXR5ID0gY29tcHV0ZVNldmVyaXR5KGlzQ29uc3RydWN0b3IgPyBJUHJvYmxlbS5VbnVzZWRDb25z
dHJ1Y3RvckRlY2xhcmVkVGhyb3duRXhjZXB0aW9uIDogSVByb2JsZW0uVW51c2VkTWV0aG9kRGVj
bGFyZWRUaHJvd25FeGNlcHRpb24pOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2JsZW0vbWVzc2Fn
ZXMucHJvcGVydGllcyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL21lc3NhZ2VzLnByb3BlcnRpZXMKaW5kZXgg
YWIwNWU4MS4uMzZkYWU0MyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2JsZW0vbWVzc2FnZXMucHJv
cGVydGllcworKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9tZXNzYWdlcy5wcm9wZXJ0aWVzCkBAIC0xMTAs
NiArMTEwLDcgQEAKIDgyID0gVGhlIGZpbmFsIGZpZWxkIHswfSBtYXkgYWxyZWFkeSBoYXZlIGJl
ZW4gYXNzaWduZWQKIDgzID0gezB9IGNhbm5vdCBiZSByZXNvbHZlZCB0byBhIHZhcmlhYmxlCiA4
NCA9IFRoaXMgc3RhdGljIG1ldGhvZCBvZiBpbnRlcmZhY2UgezB9IGNhbiBvbmx5IGJlIGFjY2Vz
c2VkIGFzIHswfS57MX0KKzg1ID0gVGhlIHZhbHVlIG9mIHRoZSBleGNlcHRpb24gcGFyYW1ldGVy
IHswfSBpcyBub3QgdXNlZAogCiA5MCA9IFRoZSBsb2NhbCB2YXJpYWJsZSB7MH0gaXMgaGlkaW5n
IGFub3RoZXIgbG9jYWwgdmFyaWFibGUgZGVmaW5lZCBpbiBhbiBlbmNsb3Npbmcgc2NvcGUKIDkx
ID0gVGhlIGxvY2FsIHZhcmlhYmxlIHswfSBpcyBoaWRpbmcgYSBmaWVsZCBmcm9tIHR5cGUgezF9
Cg==
</data>
<flag name="review"
          id="62987"
          type_id="6"
          status="?"
          setter="shankhba"
    />
          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>245015</attachid>
            <date>2014-07-12 23:29:00 -0400</date>
            <delta_ts>2014-07-12 23:29:46 -0400</delta_ts>
            <desc>Patch For Regression</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>1573</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9ldmFsL0NvZGVTbmlwcGV0VGVzdC5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2V2YWwvQ29kZVNuaXBwZXRUZXN0LmphdmEKaW5kZXggMWI5YTcyNi4uYTlhODE5NyAxMDA2
NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL2V2YWwvQ29kZVNuaXBwZXRUZXN0LmphdmEKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2V2YWwvQ29kZVNuaXBwZXRUZXN0LmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlv
biBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDE0IElCTSBDb3Jwb3JhdGlv
biBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0
aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRo
ZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2Nv
bXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtNTYsNyAr
NTYsNiBAQCBwdWJsaWMgTWFwIGdldENvbXBpbGVyT3B0aW9ucygpIHsKIAlkZWZhdWx0T3B0aW9u
cy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9Tb3VyY2VGaWxlQXR0cmlidXRlLCBDb21waWxl
ck9wdGlvbnMuRE9fTk9UX0dFTkVSQVRFKTsKIAlkZWZhdWx0T3B0aW9ucy5wdXQoQ29tcGlsZXJP
cHRpb25zLk9QVElPTl9SZXBvcnRVbnVzZWRMb2NhbCwgQ29tcGlsZXJPcHRpb25zLldBUk5JTkcp
OwogCWRlZmF1bHRPcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVudXNl
ZEltcG9ydCwgQ29tcGlsZXJPcHRpb25zLklHTk9SRSk7Ci0JZGVmYXVsdE9wdGlvbnMucHV0KENv
bXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW51c2VkUGFyYW1ldGVyLCBDb21waWxlck9wdGlv
bnMuV0FSTklORyk7CiAJZGVmYXVsdE9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05f
UmVwb3J0TG9jYWxWYXJpYWJsZUhpZGluZywgQ29tcGlsZXJPcHRpb25zLldBUk5JTkcpOwogCWRl
ZmF1bHRPcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVudXNlZFByaXZh
dGVNZW1iZXIsIENvbXBpbGVyT3B0aW9ucy5JR05PUkUpOwogCWRlZmF1bHRPcHRpb25zLnB1dChD
b21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvc3NpYmxlQWNjaWRlbnRhbEJvb2xlYW5Bc3Np
Z25tZW50LCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7Cg==
</data>
<flag name="review"
          id="62996"
          type_id="6"
          status="?"
          setter="shankhba"
    />
          </attachment>
      

    </bug>

</bugzilla>