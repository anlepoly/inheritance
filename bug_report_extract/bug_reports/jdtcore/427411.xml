<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>427411</bug_id>
          
          <creation_ts>2014-02-04 15:28:00 -0500</creation_ts>
          <short_desc>[1.8][generics] JDT reports type mismatch when using method that returns generic type</short_desc>
          <delta_ts>2014-02-21 03:54:23 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          <see_also>https://bugs.eclipse.org/bugs/show_bug.cgi?id=426984</see_also>
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>427059</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Philipp Keck">philipp</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>manpalat</cc>
    
    <cc>philipp</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>1</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2358776</commentid>
    <comment_count>0</comment_count>
      <attachid>239632</attachid>
    <who name="Philipp Keck">philipp</who>
    <bug_when>2014-02-04 15:28:36 -0500</bug_when>
    <thetext>Created attachment 239632
Self-contained program to reproduce the error

Originally posted here: https://bugs.eclipse.org/bugs/show_bug.cgi?id=426984
I use the latest Java8 JDT (Eclipse Java Development Tools Patch for Java 8 Support (BETA)	1.0.0.v20140204-0108_BETA_JAVA8) and Hamcrest matchers 1.3 (verifyThat) and JavaFX (ObservableList).

The original problem is from a hamcrest matcher call that looks like this:
assertThat(list, not(hasItem(x)));

Please see the attached example that contains a more general way to reproduce this bug:
GenericClass&lt;Iterable&lt;? super Object&gt;&gt; tempVariable = genericClassTransformer(genericClassFactory(o));

leads to:
Type mismatch: cannot convert from
GenericsBug.GenericClass&lt;Iterable&lt;? super Object&gt;&gt; to
GenericsBug.GenericClass&lt;Iterable&lt;? super Object&gt;&gt;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2358797</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-04 16:08:25 -0500</bug_when>
    <thetext>Thanks, I&apos;ll investigate.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2359937</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-06 23:21:23 -0500</bug_when>
    <thetext>Unit test released here (passes in 1.7-): 

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=d2f1b4fec195182862080cd06483547e8cdf0d8e</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360728</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-09 18:50:10 -0500</bug_when>
    <thetext>This was a bug in substitution with inference variables:

When inference starts, it replaces type variables (incl. wildcards) with inference variables; when inference is resolved, inference variables are substituted back with real types, or type variables / wildcards.

In the given example this to-and-fro substitution should produce again the initial wildcard, but we were creating a fresh wildcard. As an effect the equal but duplicate wildcards did not match during type checking.

Fixed by using LE.createWildcard (which uses the cache of existing bindings) instead of directly constructing a fresh instance.

Release via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=5ada635301ad663e7db915614d828bbc7aa46d61</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360788</commentid>
    <comment_count>4</comment_count>
    <who name="Philipp Keck">philipp</who>
    <bug_when>2014-02-10 03:01:59 -0500</bug_when>
    <thetext>I can confirm that this has been resolved. Thank you!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360803</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-10 03:32:31 -0500</bug_when>
    <thetext>(In reply to Philipp Keck from comment #4)
&gt; I can confirm that this has been resolved. Thank you!

Thanks much for verifying.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2366539</commentid>
    <comment_count>6</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-02-21 03:54:23 -0500</bug_when>
    <thetext>Verified as working for Eclipse + Java 8 RC1 using Kepler SR2(RC4) +   
Eclipse Java Development Tools Patch for Java 8 Support (BETA)   
1.0.0.v20140220-2054</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>239632</attachid>
            <date>2014-02-04 15:28:00 -0500</date>
            <delta_ts>2014-02-04 15:28:36 -0500</delta_ts>
            <desc>Self-contained program to reproduce the error</desc>
            <filename>GenericsBug.java</filename>
            <type>application/octet-stream</type>
            <size>1687</size>
            <attacher name="Philipp Keck">philipp</attacher>
            
              <data encoding="base64">cGFja2FnZSBkZS5zY2h1bHNjaGVkdWxlci51aXRlc3RzLmVpbmdhYmU7DQoNCmltcG9ydCBqYXZh
LnV0aWwuTGlzdDsNCg0KcHVibGljIGNsYXNzIEdlbmVyaWNzQnVnIHsNCg0KICAgIHB1YmxpYyBz
dGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHsNCiAgICAgICAgTGlzdDxPYmplY3Q+IGxp
c3QgPSBudWxsOw0KICAgICAgICBPYmplY3QgbyA9IG51bGw7DQoNCiAgICAgICAgLy8gVGhpcyBs
ZWFkcyB0byB0aGUgZm9sbG93aW5nIGVycm9yIGluIEVjbGlwc2Ugb25seToNCiAgICAgICAgLy8g
VGhlIG1ldGhvZCBnZW5lcmljTWV0aG9kKFQsIEdlbmVyaWNzQnVnLkdlbmVyaWNDbGFzczw/IHN1
cGVyIFQ+KSBpbg0KICAgICAgICAvLyB0aGUgdHlwZSBHZW5lcmljc0J1ZyBpcyBub3QgYXBwbGlj
YWJsZSB0aGUgYXJndW1lbnRzIA0KICAgICAgICAvLyAoTGlzdDxPYmplY3Q+LCBHZW5lcmljc0J1
Zy5HZW5lcmljQ2xhc3M8SXRlcmFibGU8PyBzdXBlciBPYmplY3Q+PikNCiAgICAgICAgZ2VuZXJp
Y01ldGhvZChsaXN0LCBnZW5lcmljQ2xhc3NUcmFuc2Zvcm1lcihnZW5lcmljQ2xhc3NGYWN0b3J5
KG8pKSk7DQogICAgICAgIA0KICAgICAgICAvLyBUaGlzIHdvcmtzIGZpbmUgaG93ZXZlcjoNCiAg
ICAgICAgZ2VuZXJpY01ldGhvZChsaXN0LCBnZW5lcmljQ2xhc3NGYWN0b3J5KG8pKTsNCiAgICAg
ICAgDQogICAgICAgIC8vIEFuIGV2ZW4gbW9yZSBkaXJlY3Qgd2F5IHRvIHJlcHJvZHVjZSB0aGUg
ZXJyb3I6DQogICAgICAgIC8vIFR5cGUgbWlzbWF0Y2g6IGNhbm5vdCBjb252ZXJ0IGZyb20NCiAg
ICAgICAgLy8gR2VuZXJpY3NCdWcuR2VuZXJpY0NsYXNzPEl0ZXJhYmxlPD8gc3VwZXIgT2JqZWN0
Pj4gdG8NCiAgICAgICAgLy8gR2VuZXJpY3NCdWcuR2VuZXJpY0NsYXNzPEl0ZXJhYmxlPD8gc3Vw
ZXIgT2JqZWN0Pj4NCiAgICAgICAgR2VuZXJpY0NsYXNzPEl0ZXJhYmxlPD8gc3VwZXIgT2JqZWN0
Pj4gdGVtcFZhcmlhYmxlID0gZ2VuZXJpY0NsYXNzVHJhbnNmb3JtZXIoZ2VuZXJpY0NsYXNzRmFj
dG9yeShvKSk7DQogICAgICAgIA0KICAgICAgICAvLyBXaGlsZSB0aGlzIHdvcmtzOg0KICAgICAg
ICBHZW5lcmljQ2xhc3M8SXRlcmFibGU8PyBzdXBlciBPYmplY3Q+PiB0ZW1wVmFyaWFibGUyID0g
Z2VuZXJpY0NsYXNzRmFjdG9yeShvKTsNCiAgICAgICAgDQogICAgfQ0KDQogICAgcHJpdmF0ZSBz
dGF0aWMgPFQ+IHZvaWQgZ2VuZXJpY01ldGhvZChUIHBhcmFtMSwgR2VuZXJpY0NsYXNzPD8gc3Vw
ZXIgVD4gcGFyYW0yKSB7DQogICAgICAgIHRocm93IG5ldyBVbnN1cHBvcnRlZE9wZXJhdGlvbkV4
Y2VwdGlvbigpOw0KICAgIH0NCg0KICAgIHB1YmxpYyBzdGF0aWMgPFQ+IEdlbmVyaWNDbGFzczxJ
dGVyYWJsZTw/IHN1cGVyIFQ+PiBnZW5lcmljQ2xhc3NGYWN0b3J5KFQgaXRlbSkgew0KICAgICAg
ICB0aHJvdyBuZXcgVW5zdXBwb3J0ZWRPcGVyYXRpb25FeGNlcHRpb24oKTsNCiAgICB9DQoNCiAg
ICBwdWJsaWMgc3RhdGljIDxUPiBHZW5lcmljQ2xhc3M8VD4gZ2VuZXJpY0NsYXNzVHJhbnNmb3Jt
ZXIoR2VuZXJpY0NsYXNzPFQ+IG1hdGNoZXIpIHsNCiAgICAgICAgdGhyb3cgbmV3IFVuc3VwcG9y
dGVkT3BlcmF0aW9uRXhjZXB0aW9uKCk7DQogICAgfQ0KDQogICAgcHJpdmF0ZSBzdGF0aWMgY2xh
c3MgR2VuZXJpY0NsYXNzPFQ+IHsNCiAgICB9DQoNCn0NCg==
</data>

          </attachment>
      

    </bug>

</bugzilla>