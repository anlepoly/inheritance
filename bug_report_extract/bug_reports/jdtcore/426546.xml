<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>426546</bug_id>
          
          <creation_ts>2014-01-24 03:25:00 -0500</creation_ts>
          <short_desc>[BETA_JAVA8] Build Eclipse Luna SDK with our Java 8 compiler</short_desc>
          <delta_ts>2014-03-04 08:30:53 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>Platform</product>
          <component>Releng</component>
          <version>4.4</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          <dependson>426543</dependson>
    
    <dependson>428242</dependson>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Dani Megert">daniel_megert</reporter>
          <assigned_to name="David Williams">david_williams</assigned_to>
          <cc>jarthana</cc>
    
    <cc>markus_keller</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2353996</commentid>
    <comment_count>0</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2014-01-24 03:25:13 -0500</bug_when>
    <thetext>Once bug 426543 is fixed, we need to test our Java 8 compiler by building Luna.

For that, no JRE 8 will be needed, since 1. our Java 8 compiler still runs with &apos;JavaSE-1.6&apos; and second, no code in Luna &apos;master&apos; currently has BREE &apos;JavaSE-1.8&apos;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2354722</commentid>
    <comment_count>1</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2014-01-27 03:19:24 -0500</bug_when>
    <thetext>I think the initial plan is (or should be) to have our own, less visible, more transient, highly volatile? &quot;maven repo&quot; directly on build machine ... for some period of time ... perhaps for a few weeks? Maybe more? 

But in either case, for my own reference, the procedure to do this is in bug 397852, from when we first did it.  

This should also help avoid confusion and someone accidentally getting this new one, when they mean to get the usual one from &apos;eclipse-staging&apos;. 

Once JDT team feels its ready for public consumption, it can go in &apos;eclipse-staging&apos; as they do now.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2357174</commentid>
    <comment_count>2</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2014-01-31 08:43:57 -0500</bug_when>
    <thetext>As mentioned in bug 426669 I have been able to do a &quot;production build&quot; with the BETA_JAVA8 branches. As a next step, I took the &apos;jdt.core&apos; compiler from that build, made a &quot;local maven repo&quot; to pull it from, and then used it in building our whole Luna stream. Everything else was the same as how we currently build Luna I-builds (i.e. used Java 1.7 to &quot;run the build&quot;, used bree-lib profile, used the &quot;comparator&quot; to swap in previous bundles that &quot;have not changed qualifier&quot;, etc.). 

I created/used &quot;david_williams/BETA_JAVA8&quot; to change the &quot;aggregator&quot; so I could change the parent pom, etc., to accomplish this. 

Results are left on build machine, in 
http://build.eclipse.org/eclipse/builds/4Y/siteDir/eclipse/downloads/drops4/Y20140131-0101/

No compile errors ... I guess that&apos;s good! :) 

Update repo would be in 
http://build.eclipse.org/eclipse/builds/4Y/siteDir/updates/4.4-Y-builds/Y20140131-0101/

I have not done a bundle by bundle comparison, but am guessing the results are same or very similar to our last I-build. Literally, that most bundles there would have not have changed .qualifier, so would be used in final distribution.

But also assume there were probably a few some bundles that changed qualifiers, that should show the new &quot;magic bytes&quot; in the .class files?  

There were a few &quot;unanticipated&quot; comparator errors. See 

http://build.eclipse.org/eclipse/builds/4Y/siteDir/eclipse/downloads/drops4/Y20140131-0101/buildlogs/comparatorlogs/buildtimeComparatorUnanticipated.log.txt

(Recall, these are where qualifier did not change, but contents of &quot;built bundle&quot; did). 

There, in that listing, there are two bundles listed where the .class files changed &quot;unexpectedly&quot;. (The earlier, unchanged version is what would be included in the distribution ... the new, changed versions being left on the build machine). 

They where related to &quot;apt&quot;? 
How to find the original, built, non-distributed versions is described in 
https://wiki.eclipse.org/Platform-releng/Platform_Build_Comparator_Logs
But may require a shell account fo find easily ... so JDT Team, let me know if you need help getting those. 

I&apos;ll look forward to hearing if these changes &quot;surprise&quot; the JDT team, or if the changes in the .class files, are not actually that unexpected or that big a deal, -- in which case its sort of &quot;business as usual&quot; where (eventually) those bundles would be &quot;touched&quot; to make sure the most recently compiled version is what get distributed. 

[Side note: I meant to do this as a &quot;test build&quot; (which means &quot;not tagged&quot; in Git repo) ... but, I may have, accidentally, tagged a few early tries with something like &quot;Y20140130...&quot;. Those tags in Git repo can be ignored, sorry for the clutter.]

= = = = = 

Comparator differences from current build
	/shared/eclipse/builds/4Y/siteDir/eclipse/downloads/drops4/Y20140131-0101
compared to reference repo at 
	http://download.eclipse.org/eclipse/updates/4.4-I-builds

1.  eclipse.jdt.core/org.eclipse.jdt.apt.core
   no-classifier: different
      META-INF/ECLIPSE_.RSA: different
      META-INF/ECLIPSE_.SF: different
      org/eclipse/jdt/apt/core/internal/declaration/AnnotationDeclarationImpl.class: different
      org/eclipse/jdt/apt/core/internal/declaration/EnumDeclarationImpl.class: different
      org/eclipse/jdt/apt/core/internal/type/ErrorType$ErrorAnnotation.class: different
   classifier-sources: different
      META-INF/ECLIPSE_.RSA: different
      META-INF/ECLIPSE_.SF: different
    The main artifact has been replaced with the baseline version.
    The following attached artifacts have been replaced with the baseline version: [pack200, sources]

2.  eclipse.jdt.core/org.eclipse.jdt.compiler.apt
   no-classifier: different
      META-INF/ECLIPSE_.RSA: different
      META-INF/ECLIPSE_.SF: different
      org/eclipse/jdt/internal/compiler/apt/dispatch/HookedJavaFileObject$ForwardingWriter.class: different
   classifier-sources: different
      META-INF/ECLIPSE_.RSA: different
      META-INF/ECLIPSE_.SF: different
    The main artifact has been replaced with the baseline version.
    The following attached artifacts have been replaced with the baseline version: [pack200, sources]

= = = = =</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2357180</commentid>
    <comment_count>3</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2014-01-31 08:49:09 -0500</bug_when>
    <thetext>(In reply to David Williams from comment #2)

&gt; But also assume there were probably a few some bundles that changed
&gt; qualifiers, that should show the new &quot;magic bytes&quot; in the .class files?  

Oh, ignore that about showing &quot;magic bytes&quot; ... we&apos;ll only get the new &quot;magic number&quot; once we have something that uses a BREE of 1.8 .. and none of ours do, so far.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2357192</commentid>
    <comment_count>4</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2014-01-31 09:10:40 -0500</bug_when>
    <thetext>(In reply to David Williams from comment #2)
&gt; As mentioned in bug 426669 I have been able to do a &quot;production build&quot; with
&gt; the BETA_JAVA8 branches. As a next step, I took the &apos;jdt.core&apos; compiler from
&gt; that build, made a &quot;local maven repo&quot; to pull it from, and then used it in
&gt; building our whole Luna stream. Everything else was the same as how we
&gt; currently build Luna I-builds (i.e. used Java 1.7 to &quot;run the build&quot;, used
&gt; bree-lib profile, used the &quot;comparator&quot; to swap in previous bundles that
&gt; &quot;have not changed qualifier&quot;, etc.). 
&gt; 
&gt; I created/used &quot;david_williams/BETA_JAVA8&quot; to change the &quot;aggregator&quot; so I
&gt; could change the parent pom, etc., to accomplish this. 
&gt; 
&gt; Results are left on build machine, in 
&gt; http://build.eclipse.org/eclipse/builds/4Y/siteDir/eclipse/downloads/drops4/
&gt; Y20140131-0101/
&gt; 
&gt; No compile errors ... I guess that&apos;s good! :) 

Cool! Looks very reasonable.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2357196</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-31 09:15:44 -0500</bug_when>
    <thetext>(In reply to Dani Megert from comment #4)

&gt; Cool! Looks very reasonable.

Reasonable ? That is the best adjective you could come up with Dani ?
We just heard that a compiler that has undergone major rework in all
its subsystems compiled a multi-million lines worth project on the first
go and you say reasonable ? :)

OK, I see you had also threw in &quot;cool&quot; and &quot;very&quot; in your understatement,
we will forgive your understatement :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2364640</commentid>
    <comment_count>6</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2014-02-17 23:56:08 -0500</bug_when>
    <thetext>I think this bug can be closed as fixed, since it&apos;s pretty well automated now. 

I call these &quot;Y-builds&quot; and latest can always been seen by starting at 
http://build.eclipse.org/eclipse/builds/4Y/siteDir/eclipse/downloads/drops4/
and &quot;drilling down&quot; into most recent directory. 

Some notes on the topic I&apos;ve written down at 
http://wiki.eclipse.org/Platform-releng/Platform_Build_BETA_JAVA8_Branch

What I&apos;ll do is set up a cron job to build shortly after our weekly I-builds (Tuesday&apos;s at 8 AM) .... let&apos;s say I&apos;ll do Y-build at Noon on Tuesday, unless someone says otherwise ... since there should be no (few) code changes made in those streams during that short window, so they&apos;ll be pretty comparable ... differing only in a recent Beta Java 8 compiler will be used. 

The most recent run, done today, does show one &quot;comparator&quot; difference,
which is probably not too unusual, given that is is one that&apos;s changed in the [BETA_JAVA8] branch. (but to get a &quot;clean&quot; Luna build, may have to &quot;touch&quot; that bundle ... to be sure the version in the &quot;distribution&quot; is the one produced by Java 8 compiler ... this will happen &quot;automatically&quot; once the Java 8 work is merged into master, but ... in the mean time, it would have to be touched. 
 

Comparator differences from current build
	/shared/eclipse/builds/4Y/siteDir/eclipse/downloads/drops4/Y20140217-1723
compared to reference repo at 
	http://download.eclipse.org/eclipse/updates/4.4-I-builds

1.  eclipse.jdt.core/org.eclipse.jdt.apt.core
   no-classifier: different
      META-INF/ECLIPSE_.RSA: different
      META-INF/ECLIPSE_.SF: different
      org/eclipse/jdt/apt/core/internal/declaration/AnnotationDeclarationImpl.class: different
      org/eclipse/jdt/apt/core/internal/declaration/EnumDeclarationImpl.class: different
      org/eclipse/jdt/apt/core/internal/type/ErrorType$ErrorAnnotation.class: different
   classifier-sources: different
      META-INF/ECLIPSE_.RSA: different
      META-INF/ECLIPSE_.SF: different
    The main artifact has been replaced with the baseline version.
    The following attached artifacts have been replaced with the baseline version: [pack200, sources]

 
In fact, I&apos;ll leave this open until that bundle is &apos;touched&apos; in Luna (master) stream ... ideally before the automated &quot;Y-build&quot; at noon on Tuesday.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2364649</commentid>
    <comment_count>7</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2014-02-18 01:02:31 -0500</bug_when>
    <thetext>(In reply to David Williams from comment #6)

&gt;  
&gt; In fact, I&apos;ll leave this open until that bundle is &apos;touched&apos; in Luna
&gt; (master) stream ... ideally before the automated &quot;Y-build&quot; at noon on
&gt; Tuesday.

Minor update, I&apos;ve decided to schedule for 1 PM, for the simple reason that then X build and Y builds are at same time of day .... X builds at 1 PM Mondays, Y builds at 1 PM on Tuesdays.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2364798</commentid>
    <comment_count>8</comment_count>
      <attachid>240065</attachid>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-02-18 08:16:16 -0500</bug_when>
    <thetext>Created attachment 240065
org.eclipse.jdt.apt.core-diffs.zip from Y20140217-1723

/opt/public/eclipse/builds/4Y/gitCache/eclipse.platform.releng.aggregator/eclipse.jdt.core/org.eclipse.jdt.apt.core/target/artifactcomparison/no-classifier/org/eclipse/jdt/apt/core/internal

The remaining open issue from bug 426543 is this:

Srikanth/Stephan, I can&apos;t explain why some classes from the baseline (Luna compiler) contain additional bridge methods that don&apos;t show up with the BETA_JAVA8 compiler any more.

Looks like these have been removed via bug 404690, but I can&apos;t say whether that&apos;s OK in these cases.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2364815</commentid>
    <comment_count>9</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-18 08:52:15 -0500</bug_when>
    <thetext>(In reply to Markus Keller from comment #8)
&gt; Srikanth/Stephan, I can&apos;t explain why some classes from the baseline (Luna
&gt; compiler) contain additional bridge methods that don&apos;t show up with the
&gt; BETA_JAVA8 compiler any more.
&gt; 
&gt; Looks like these have been removed via bug 404690, but I can&apos;t say whether
&gt; that&apos;s OK in these cases.

The change from bug 404690 should effect only default methods with visibility issues.

Looking at ErrorType$ErrorAnnotation.getDeclaration() the purpose of the bridge is to bridge covariant returns. I don&apos;t think we wanted to change anything in this regard.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2370097</commentid>
    <comment_count>10</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-03-01 06:51:26 -0500</bug_when>
    <thetext>To avoid duplicate work:

(In reply to Markus Keller from comment #8)
&gt; Created attachment 240065 [details]
&gt; org.eclipse.jdt.apt.core-diffs.zip from Y20140217-1723
&gt; 
&gt; /opt/public/eclipse/builds/4Y/gitCache/eclipse.platform.releng.aggregator/
&gt; eclipse.jdt.core/org.eclipse.jdt.apt.core/target/artifactcomparison/no-
&gt; classifier/org/eclipse/jdt/apt/core/internal
&gt; 
&gt; The remaining open issue from bug 426543 is this:
&gt; 
&gt; Srikanth/Stephan, I can&apos;t explain why some classes from the baseline (Luna
&gt; compiler) contain additional bridge methods that don&apos;t show up with the
&gt; BETA_JAVA8 compiler any more.
&gt; 
&gt; Looks like these have been removed via bug 404690, but I can&apos;t say whether
&gt; that&apos;s OK in these cases.

I&apos;m looking into this now.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2370104</commentid>
    <comment_count>11</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-03-01 07:28:28 -0500</bug_when>
    <thetext>Looking at org.eclipse.jdt.apt.core.internal.declaration.AnnotationDeclarationImpl

This is the genealogy of getDeclaration():
 - DeclaredType.getDeclaration() : TypeDeclaration
   - InterfaceType.getDeclaration() : InterfaceType
     - AnnotationType.getDeclaration() : AnnotationType
       - AnnotationDeclarationImpl.getDeclaration() : AnnotationType

Old compiler generates *two* bridge methods:
  - getDeclaration() : TypeDeclaration
  - getDeclaration() : InterfaceType

New compiler only generates one bridge method:
  - getDeclaration() : InterfaceType

This shouldn&apos;t harm since the other bridge method
  - getDeclaration() : TypeDeclaration
is already defined by and inherited from org.eclipse.jdt.apt.core.internal.declaration.InterfaceDeclarationImpl


This change was introduced by http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=ba04cb6ba4b5497c184d335aa777690304f7e67a on behalf of bug 391376.

I&apos;ll make a quick experiment if the change could easily be reduced to only produce the intended change, not the change we are observing here.

Comparison with javac: 1.6 - 1.8 all generate two bridge methods.

OTOH, I believe our current behaviour in BETA_JAVA8 is a legal optimization.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2370112</commentid>
    <comment_count>12</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-03-01 08:36:09 -0500</bug_when>
    <thetext>Since my memories of the exact details of that particular change have faded after 11 months, we have to rely on the comments I added back then:

// need to keep around to produce bridge methods? ...
// ... not if inheriting the bridge situation from a superclass

That&apos;s an exact description of the situation we have regarding getDeclaration()

Ergo: the observed behavior change is not an accidental side effect but was consciously made to better accommodate default methods.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2370113</commentid>
    <comment_count>13</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-03-01 08:51:36 -0500</bug_when>
    <thetext>For complete diligence I

- checked that in all three classes with comparator difference the same situation can be found: duplicate vs. single bridges for getDeclaration()

- added a regression test to ensure the the JVM finds the correct implementation, test released via  http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=077886653bb15b3cde6b2326207364f8fca8f3f7

From my p.o.v. this suffices to explain the differences and demonstrate that these changes are OK.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2370114</commentid>
    <comment_count>14</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-01 09:13:44 -0500</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #13)

&gt; From my p.o.v. this suffices to explain the differences and demonstrate that
&gt; these changes are OK.

Many thanks Stephan.,</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2370940</commentid>
    <comment_count>15</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2014-03-03 23:46:20 -0500</bug_when>
    <thetext>I think this is fixed from my point of view, for its original purpose ... to build Luna stream with JDT 8 compiler. 
Our &quot;Y-Builds&quot; run every Tuesday, at 1.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2371139</commentid>
    <comment_count>16</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2014-03-04 08:30:53 -0500</bug_when>
    <thetext>(In reply to David Williams from comment #15)
&gt; I think this is fixed from my point of view, for its original purpose ... to
&gt; build Luna stream with JDT 8 compiler. 
&gt; Our &quot;Y-Builds&quot; run every Tuesday, at 1.

Yes indeed, thanks David!</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>240065</attachid>
            <date>2014-02-18 08:16:00 -0500</date>
            <delta_ts>2014-02-18 08:16:16 -0500</delta_ts>
            <desc>org.eclipse.jdt.apt.core-diffs.zip from Y20140217-1723</desc>
            <filename>org.eclipse.jdt.apt.core-diffs.zip</filename>
            <type>application/x-zip-compressed</type>
            <size>6554</size>
            <attacher name="Markus Keller">markus_keller</attacher>
            
              <data encoding="base64">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
bC8KACAAAAAAAAEAGAC2REVWqizPAbZERVaqLM8BzHEBVaoszwFQSwECPwAUAAAAAADocFJEAAAA
AAAAAAAAAAAAFQAkAAAAAAAAABAAAAAnAAAAaW50ZXJuYWwvZGVjbGFyYXRpb24vCgAgAAAAAAAB
ABgACWgfWKoszwEJaB9YqizPAaUdRVaqLM8BUEsBAj8AFAAAAAgAMwJSRJZF3oReAwAAnRAAAD0A
JAAAAAAAAAAgAAAAWgAAAGludGVybmFsL2RlY2xhcmF0aW9uL0Fubm90YXRpb25EZWNsYXJhdGlv
bkltcGwuY2xhc3MtYmFzZWxpbmUKACAAAAAAAAEAGAAAVaByNizPAQBVoHI2LM8BhdSfV6oszwFQ
SwECPwAUAAAACAAzAlJEzDUyblcDAABQDwAAOgAkAAAAAAAAACAAAAATBAAAaW50ZXJuYWwvZGVj
bGFyYXRpb24vQW5ub3RhdGlvbkRlY2xhcmF0aW9uSW1wbC5jbGFzcy1idWlsZAoAIAAAAAAAAQAY
AABVoHI2LM8BAFWgcjYszwF7hUFXqizPAVBLAQI/ABQAAAAIADMCUkTW3gmgSQQAAMkUAAA3ACQA
AAAAAAAAIAAAAMIHAABpbnRlcm5hbC9kZWNsYXJhdGlvbi9FbnVtRGVjbGFyYXRpb25JbXBsLmNs
YXNzLWJhc2VsaW5lCgAgAAAAAAABABgAAFWgcjYszwEAVaByNizPAQgZwlaqLM8BUEsBAj8AFAAA
AAgAMwJSRB6FGYFBBAAAjBMAADQAJAAAAAAAAAAgAAAAYAwAAGludGVybmFsL2RlY2xhcmF0aW9u
L0VudW1EZWNsYXJhdGlvbkltcGwuY2xhc3MtYnVpbGQKACAAAAAAAAEAGAAAVaByNizPAQBVoHI2
LM8BCWgfWKoszwFQSwECPwAUAAAAAADmcFJEAAAAAAAAAAAAAAAADgAkAAAAAAAAABAAAADzEAAA
aW50ZXJuYWwvdHlwZS8KACAAAAAAAAEAGAC1fSBWqizPAbV9IFaqLM8B8QNJVaoszwFQSwECPwAU
AAAACAAzAlJET7dgqbYBAACVBwAANgAkAAAAAAAAACAAAAAfEQAAaW50ZXJuYWwvdHlwZS9FcnJv
clR5cGUkRXJyb3JBbm5vdGF0aW9uLmNsYXNzLWJhc2VsaW5lCgAgAAAAAAABABgAAFWgcjYszwEA
VaByNizPAbV9IFaqLM8BUEsBAj8AFAAAAAgAMwJSRAAvyS2xAQAATwYAADMAJAAAAAAAAAAgAAAA
KRMAAGludGVybmFsL3R5cGUvRXJyb3JUeXBlJEVycm9yQW5ub3RhdGlvbi5jbGFzcy1idWlsZAoA
IAAAAAAAAQAYAABVoHI2LM8BAFWgcjYszwFU/8VVqizPAVBLBQYAAAAACQAJAFkEAAArFQAAAAA=
</data>

          </attachment>
      

    </bug>

</bugzilla>