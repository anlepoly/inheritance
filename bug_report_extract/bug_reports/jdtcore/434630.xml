<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>434630</bug_id>
          
          <creation_ts>2014-05-12 06:13:00 -0400</creation_ts>
          <short_desc>[1.5][generics] Unexpected type mismatch error with nested types and generics</short_desc>
          <delta_ts>2014-05-26 01:01:22 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.4 RC2</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Anton Kosyakov">anton.kosyakov</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>dennis.huebner</cc>
    
    <cc>jarthana</cc>
    
    <cc>manpalat</cc>
    
    <cc>Sebastian.Zarnekow</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="62407"
          type_id="1"
          status="+"
          setter="jarthana"
    />
    <flag name="review"
          id="62417"
          type_id="1"
          status="+"
          setter="manpalat"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2400146</commentid>
    <comment_count>0</comment_count>
      <attachid>242956</attachid>
    <who name="Anton Kosyakov">anton.kosyakov</who>
    <bug_when>2014-05-12 06:13:00 -0400</bug_when>
    <thetext>Created attachment 242956
The project to reproduce the issue

After switching to 3.10.0.v20140501-0200 we got type mismatch errors for the code which is used to work.

The project to reproduce the issue is attached to the bug.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2400158</commentid>
    <comment_count>1</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-05-12 06:32:54 -0400</bug_when>
    <thetext>I see the following error (only one) reported. Are you referring to the same?

  Description	Resource	Path	Location	Type
Type mismatch: cannot convert from Class&lt;Foo.SomeProvider&gt; to Class&lt;? extends Provider&lt;?&gt;&gt;	Foo.java	/test/src/main/java/test	line 5	Java Problem

[I am using eclipce Version: Luna (4.4) Build id: I20140429-2000]</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2400164</commentid>
    <comment_count>2</comment_count>
    <who name="Anton Kosyakov">anton.kosyakov</who>
    <bug_when>2014-05-12 06:38:53 -0400</bug_when>
    <thetext>Yes</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2400166</commentid>
    <comment_count>3</comment_count>
    <who name="Anton Kosyakov">anton.kosyakov</who>
    <bug_when>2014-05-12 06:40:48 -0400</bug_when>
    <thetext>If SomeProvider is not the nested type then the error is vanished:

@ProvidedBy(SomeProvider.class)
public interface Foo {
}

class SomeProvider implements com.google.inject.Provider&lt;Foo&gt; {

	public Foo get() {
		return null;
	}
	
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2400190</commentid>
    <comment_count>4</comment_count>
    <who name="Sebastian Zarnekow">Sebastian.Zarnekow</who>
    <bug_when>2014-05-12 07:40:12 -0400</bug_when>
    <thetext>This one is critical to the Xtext project since we can no longer compile our sources with Luna 4.4Mx</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2400509</commentid>
    <comment_count>5</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-05-12 14:35:28 -0400</bug_when>
    <thetext>Same cause as bug 434570.
I&apos;ll include this example as a test in the other bug.

*** This bug has been marked as a duplicate of bug 434570 ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2401937</commentid>
    <comment_count>6</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-05-14 17:51:43 -0400</bug_when>
    <thetext>Fixed indeed via bug 434570 (for 4.4 RC1).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2402931</commentid>
    <comment_count>7</comment_count>
      <attachid>243190</attachid>
    <who name="Dennis Huebner">dennis.huebner</who>
    <bug_when>2014-05-16 11:28:01 -0400</bug_when>
    <thetext>Created attachment 243190
Modified test project -  with an Impl Class

with JDT
Version: 3.10.0.v20140515-1230
Build id: I20140515-1230

Using this example project I have a strange behavior.
A dummy edit in the interface Foo solves the compilation error. But &quot;Project-&gt;Clean&quot; adds an error again. The only difference to Anton&apos;s test project is an Implementation Class FooImpl.java in the same package.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2402933</commentid>
    <comment_count>8</comment_count>
    <who name="Dennis Huebner">dennis.huebner</who>
    <bug_when>2014-05-16 11:28:37 -0400</bug_when>
    <thetext>See #c7</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2403032</commentid>
    <comment_count>9</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-05-16 14:35:28 -0400</bug_when>
    <thetext>(In reply to Dennis Huebner from comment #7)
&gt; Created attachment 243190 [details]
&gt; Modified test project -  with an Impl Class
&gt; 
&gt; with JDT
&gt; Version: 3.10.0.v20140515-1230
&gt; Build id: I20140515-1230
&gt; 
&gt; Using this example project I have a strange behavior.
&gt; A dummy edit in the interface Foo solves the compilation error. But
&gt; &quot;Project-&gt;Clean&quot; adds an error again. The only difference to Anton&apos;s test
&gt; project is an Implementation Class FooImpl.java in the same package.

This difference between builder and reconciler is typical of errors influenced by compilation order.

Let&apos;s keep fingers crossed that this reopen and bug 434804 are the same problem. One fix in this area might still be possible for RC2.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2403304</commentid>
    <comment_count>10</comment_count>
      <attachid>243217</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-05-18 14:53:11 -0400</bug_when>
    <thetext>Created attachment 243217
patch under test

The fix from bug 434630 goes in the right direction, but was to small in scope, as examples in comment 7 and bug 434804 demonstrate.

In comment 7 we need to defer all checks on member value pairs until all types in a unit have connected type hierarchies.

In Bug 434804 we even have to wait until all units in the queue (LookupEnvironment.completeTypeBindings()) have connected type hierarchies.

Solution:

To generally reduce the risk I first added a check in TypeReference.resolveAnnotations() to do extra work only when null annotations analysis is enabled (meant to do this much earlier).

Next I pushed the flag connectingHierarchy from ClassScope to CompilationUnitScope to defer the relevant checks from all types in the unit.

Finally, I withdrew the newly invented trigger ClassScope.deferredMemberValueCheck() and let the existing checkParameterizedTypeBounds() cover the new checks, too. This method is indeed called from LookupEnvironment at the exact right point in time. So piggy-backing on that strategy sounds like a good idea.

Bonus question: Why does LookupEnvironment.completeTypeBindings(CompilationUnitDeclaration parsedUnit) *not* call checkParameterizedTypeBounds() like the other overloads?
I don&apos;t have an answer. To be checked post Luna.

(Additional TODO in Scope to be resolve at our leisure :) ).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2403305</commentid>
    <comment_count>11</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-05-18 14:55:56 -0400</bug_when>
    <thetext>Jay, do we get the necessary +1&apos;s for RC2?

I&apos;ll post test results later today. 

LMK if you have any questions regarding the solution.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2403308</commentid>
    <comment_count>12</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-05-18 14:58:48 -0400</bug_when>
    <thetext>*** Bug 434804 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2403326</commentid>
    <comment_count>13</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-05-18 16:26:00 -0400</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #11)
&gt; I&apos;ll post test results later today. 

RunJDTCoreTests is green.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2403387</commentid>
    <comment_count>14</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-05-19 01:18:28 -0400</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #11)
&gt; Jay, do we get the necessary +1&apos;s for RC2?

Yes, let&apos;s include this in RC2. I will go over the patch by tomorrow.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2403745</commentid>
    <comment_count>15</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-05-19 11:18:13 -0400</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #10)
&gt; Solution:
&gt; 
&gt; To generally reduce the risk I first added a check in
&gt; TypeReference.resolveAnnotations() to do extra work only when null
&gt; annotations analysis is enabled (meant to do this much earlier).

I tried to find out if the check is required in any other place, but found it quite difficult to trace down, because we are making this check in many places. What&apos;s making it more difficult was that we are making the check in various levels of call stacks.

At some point when we have lot of time (when will that be?) We should try and bring down the number of places where this is being done, if possible all in one or two places.

&gt; Bonus question: Why does
&gt; LookupEnvironment.completeTypeBindings(CompilationUnitDeclaration
&gt; parsedUnit) *not* call checkParameterizedTypeBounds() like the other
&gt; overloads?
&gt; I don&apos;t have an answer. To be checked post Luna.

Good catch! I tried to look at history hoping for some clue, but looks like it&apos;s just missed out.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2403755</commentid>
    <comment_count>16</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-05-19 11:41:00 -0400</bug_when>
    <thetext>Patch looks good to me.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2403896</commentid>
    <comment_count>17</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-05-20 00:17:07 -0400</bug_when>
    <thetext>Manoj, please review this bug report.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2403921</commentid>
    <comment_count>18</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-05-20 02:38:49 -0400</bug_when>
    <thetext>Looks good; +1</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2403999</commentid>
    <comment_count>19</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-05-20 05:01:00 -0400</bug_when>
    <thetext>Thanks Jay, Manoj.

Test &amp; fix released for 4.4 RC2 via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=db8326c8bf5f71d5857a001444f9a6b78ff12f0a</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2404013</commentid>
    <comment_count>20</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-05-20 05:26:26 -0400</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #15)
&gt; (In reply to Stephan Herrmann from comment #10)
&gt; &gt; Solution:
&gt; &gt; 
&gt; &gt; To generally reduce the risk I first added a check in
&gt; &gt; TypeReference.resolveAnnotations() to do extra work only when null
&gt; &gt; annotations analysis is enabled (meant to do this much earlier).
&gt; 
&gt; I tried to find out if the check is required in any other place, but found
&gt; it quite difficult to trace down, because we are making this check in many
&gt; places. What&apos;s making it more difficult was that we are making the check in
&gt; various levels of call stacks.

I see your point and we could indeed check the option just *inside* Scope.hasDefaultNullnessFor(int), but in the past we tried to have these checks earlier, rather than later, as to ensure that no significant work is done for null annotations, if those are not enabled.

We could invent an annotation @NullAnnotationOptionChecked to systematically mark the code areas that are covered by the check :)

&gt; At some point when we have lot of time (when will that be?) 

:)

&gt; 
&gt; &gt; Bonus question: Why does
&gt; &gt; LookupEnvironment.completeTypeBindings(CompilationUnitDeclaration
&gt; &gt; parsedUnit) *not* call checkParameterizedTypeBounds() like the other
&gt; &gt; overloads?
&gt; &gt; I don&apos;t have an answer. To be checked post Luna.
&gt; 
&gt; Good catch! I tried to look at history hoping for some clue, but looks like
&gt; it&apos;s just missed out.

While trying to argue in a fup-bug why this is suspicious, I seem to have found an excuse: inside completeTypeBindings(CompilationUnitDeclaration) we have two branches:
- inside &apos;then&apos; we do call another overload which handles the bounds check
- inside &apos;else&apos; we don&apos;t even bother to go past CONNECT_TYPE_HIERARCHY; see that also a call to unitScope.buildFieldsAndMethods() is missing, which is obviously by intention.

Here we should assume that clients of Compiler that are interested in details have added the CU to LE.units and when the time comes, the new unit will be further processed in a subsequent round. Other clients who don&apos;t bother with fields and methods shouldn&apos;t care about the bounds checks either (nor the newly added member-value checks).

I hope this makes sense :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2406865</commentid>
    <comment_count>21</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-05-26 01:01:22 -0400</bug_when>
    <thetext>Verified for Eclipse Luna 4.4 RC2 Build id: I20140525-2000</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>242956</attachid>
            <date>2014-05-12 06:13:00 -0400</date>
            <delta_ts>2014-05-12 06:13:00 -0400</delta_ts>
            <desc>The project to reproduce the issue</desc>
            <filename>test.zip</filename>
            <type>application/zip</type>
            <size>3580</size>
            <attacher name="Anton Kosyakov">anton.kosyakov</attacher>
            
              <data encoding="base64">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
dC90YXJnZXQvY2xhc3Nlcy90ZXN0L0ZvbyRTb21lUHJvdmlkZXIuY2xhc3OFUl1rE0EUPdOm2WRd
TY0f1fo1AR/SFxfBpySkD8WCsKiQWvBxsrndTtmdCbOToA/+LkFB3/1R4t21MUUiMsy9zD1n79xz
Zn/8/PINwHP0AmwJ3PFU+vjY2qcTW9BbZ5d6Ri5AQ2D3Qi1VnCuTxW+mF5T6AE2B/dQWcWZtllOs
TVWOV18JNEfaaD8W2O4fnAo0juyMAlwT6Kx7vXTOuhauC3x6ZxyVNl/STHLXuc6V19bIubPTnIqB
DNsnH+ckC10WyqfnA5kqY6xnslmS8/LM2UIe5aosR6zg2VUFY+ntJXQo6YMnMyvlChwdjsdhiBCd
CAF22YV+sh5w4p022bAS0Em0odeLYkruRPFMAt3Epio/VU5X58tiw5/rUmAv2WjmkO3IyAtE/YM/
jGEL9wR6/3VAIJzYhUvpWFc3tSqd1agC7YnOjPILx+VB8vdbDZN/v9NoPcWYh4teGUOu9orKAE/4
lhXO4FUl6IG18N7hP2iLc4AWxzafXtR1IPyK8H03+owb32vOTY7NGtlBl2P0m4VbuM2ZncfdjR32
NnQIN3TYxv2atY8HdX6IRzUqeD2GRPsXUEsHCG3JAju0AQAA8AIAAFBLAwQUAAgICACuYKxEAAAA
AAAAAAAAAAAAIgAAAHRlc3QvdGFyZ2V0L2NsYXNzZXMvdGVzdC9Gb28uY2xhc3NtjU9LA0EMxV/6
b7vVqpciXjx57uDZkxUKQqFioffpblimzE5gZ3bBr+bBD9APJabYggcD74WQX14O359fAB5xnaFH
GCeOySxFMgwIN3vbWeNtqMx6t+ciESYbaZuCl86z0grOjwzh7r0NydW8ddHtPD+HIMkmJyES7leF
1KYSqTwbF45B5q2RzpVcLj6eCMPO+lbzblfn9w8bqfnENEpcvobAzYu3MXLMMCXM/kWV/DuOCIQ+
fquPoXoPI2TaL3QzVuUFJjpAXY9VV8h/AFBLBwiEN+mvzgAAABUBAABQSwMEFAAICAgA02CsRAAA
AAAAAAAAAAAAABkAAAB0ZXN0L3RhcmdldC90ZXN0LWNsYXNzZXMvAwBQSwcIAAAAAAIAAAAAAAAA
UEsBAhQAFAAICAgAVV+sRHReRSJJAQAAcwUAAA8AAAAAAAAAAAAAAAAAAAAAAHRlc3QvLmNsYXNz
cGF0aFBLAQIUABQACAgIAFVfrEQkeWPq0AAAABUCAAANAAAAAAAAAAAAAAAAAIYBAAB0ZXN0Ly5w
cm9qZWN0UEsBAhQAFAAICAgAVV+sRP6V1CdyAAAA7gAAACkAAAAAAAAAAAAAAAAAkQIAAHRlc3Qv
LnNldHRpbmdzL29yZy5lY2xpcHNlLmpkdC5jb3JlLnByZWZzUEsBAhQAFAAICAgAVV+sRGOYLItI
AAAAVgAAACkAAAAAAAAAAAAAAAAAWgMAAHRlc3QvLnNldHRpbmdzL29yZy5lY2xpcHNlLm0yZS5j
b3JlLnByZWZzUEsBAhQAFAAICAgAYmCsRG3Dt10PAQAAJwIAAAwAAAAAAAAAAAAAAAAA+QMAAHRl
c3QvcG9tLnhtbFBLAQIUABQACAgIAK1grES86lMvnAAAAPMAAAAgAAAAAAAAAAAAAAAAAEIFAAB0
ZXN0L3NyYy9tYWluL2phdmEvdGVzdC9Gb28uamF2YVBLAQIUABQACAgIANNgrEQAAAAAAgAAAAAA
AAAYAAAAAAAAAAAAAAAAACwGAAB0ZXN0L3NyYy9tYWluL3Jlc291cmNlcy9QSwECFAAUAAgICADT
YKxEAAAAAAIAAAAAAAAAEwAAAAAAAAAAAAAAAAB0BgAAdGVzdC9zcmMvdGVzdC9qYXZhL1BLAQIU
ABQACAgIANNgrEQAAAAAAgAAAAAAAAAYAAAAAAAAAAAAAAAAALcGAAB0ZXN0L3NyYy90ZXN0L3Jl
c291cmNlcy9QSwECFAAUAAgICACuYKxEbckCO7QBAADwAgAALwAAAAAAAAAAAAAAAAD/BgAAdGVz
dC90YXJnZXQvY2xhc3Nlcy90ZXN0L0ZvbyRTb21lUHJvdmlkZXIuY2xhc3NQSwECFAAUAAgICACu
YKxEhDfpr84AAAAVAQAAIgAAAAAAAAAAAAAAAAAQCQAAdGVzdC90YXJnZXQvY2xhc3Nlcy90ZXN0
L0Zvby5jbGFzc1BLAQIUABQACAgIANNgrEQAAAAAAgAAAAAAAAAZAAAAAAAAAAAAAAAAAC4KAAB0
ZXN0L3RhcmdldC90ZXN0LWNsYXNzZXMvUEsFBgAAAAAMAAwAbwMAAHcKAAAAAA==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>243190</attachid>
            <date>2014-05-16 11:28:00 -0400</date>
            <delta_ts>2014-05-16 11:28:01 -0400</delta_ts>
            <desc>Modified test project -  with an Impl Class</desc>
            <filename>test2.zip</filename>
            <type>application/octet-stream</type>
            <size>4173</size>
            <attacher name="Dennis Huebner">dennis.huebner</attacher>
            
              <data encoding="base64">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
ABUBAABQSwMEFAAICAgAtYqwRAAAAAAAAAAAAAAAACYAAAB0ZXN0L3RhcmdldC9jbGFzc2VzL3Rl
c3QvRm9vSW1wbC5jbGFzc01PwWrCQBB9Y2Ji09Wof+DN9tDQc6UXQRCCHlq8b+LSrsRsSTb+lyfB
gx/QjypO0ggyzGPe4w1v5vfvfAHwirGPDkFYVdpoYcxy/5P5cAnDnTzIKJP5V7ROdiq1PjxC7+Yj
eDOda/tOcKZPG4I7N1sVwMGjgI8eIYx1rlbVPlHFp0wyRRjHJpXZRha65q3o2m9dEgbx/QVvhODD
VEWqFro2iVZ/qY/CBBzK3eUHiIvjGB+YRQ0Hus8nBEceOhCMXiM66DOKfwMGCJv1YeMaXQFQSwcI
mKECJtAAAAAQAQAAUEsDBBQACAgIANOKsEQAAAAAAAAAAAAAAAAZAAAAdGVzdC90YXJnZXQvdGVz
dC1jbGFzc2VzLwMAUEsHCAAAAAACAAAAAAAAAFBLAQIUABQACAgIAFVfrER0XkUiSQEAAHMFAAAP
AAAAAAAAAAAAAAAAAAAAAAB0ZXN0Ly5jbGFzc3BhdGhQSwECFAAUAAgICABVX6xEJHlj6tAAAAAV
AgAADQAAAAAAAAAAAAAAAACGAQAAdGVzdC8ucHJvamVjdFBLAQIUABQACAgIAFVfrET+ldQncgAA
AO4AAAApAAAAAAAAAAAAAAAAAJECAAB0ZXN0Ly5zZXR0aW5ncy9vcmcuZWNsaXBzZS5qZHQuY29y
ZS5wcmVmc1BLAQIUABQACAgIAFVfrERjmCyLSAAAAFYAAAApAAAAAAAAAAAAAAAAAFoDAAB0ZXN0
Ly5zZXR0aW5ncy9vcmcuZWNsaXBzZS5tMmUuY29yZS5wcmVmc1BLAQIUABQACAgIAGJgrERtw7dd
DwEAACcCAAAMAAAAAAAAAAAAAAAAAPkDAAB0ZXN0L3BvbS54bWxQSwECFAAUAAgICACyirBEvOpT
L5wAAADzAAAAIAAAAAAAAAAAAAAAAABCBQAAdGVzdC9zcmMvbWFpbi9qYXZhL3Rlc3QvRm9vLmph
dmFQSwECFAAUAAgICACuirBEjrh14DUAAAA4AAAAJAAAAAAAAAAAAAAAAAAsBgAAdGVzdC9zcmMv
bWFpbi9qYXZhL3Rlc3QvRm9vSW1wbC5qYXZhUEsBAhQAFAAICAgA04qwRAAAAAACAAAAAAAAABgA
AAAAAAAAAAAAAAAAswYAAHRlc3Qvc3JjL21haW4vcmVzb3VyY2VzL1BLAQIUABQACAgIANOKsEQA
AAAAAgAAAAAAAAATAAAAAAAAAAAAAAAAAPsGAAB0ZXN0L3NyYy90ZXN0L2phdmEvUEsBAhQAFAAI
CAgA04qwRAAAAAACAAAAAAAAABgAAAAAAAAAAAAAAAAAPgcAAHRlc3Qvc3JjL3Rlc3QvcmVzb3Vy
Y2VzL1BLAQIUABQACAgIALWKsERtyQI7tAEAAPACAAAvAAAAAAAAAAAAAAAAAIYHAAB0ZXN0L3Rh
cmdldC9jbGFzc2VzL3Rlc3QvRm9vJFNvbWVQcm92aWRlci5jbGFzc1BLAQIUABQACAgIALWKsESE
N+mvzgAAABUBAAAiAAAAAAAAAAAAAAAAAJcJAAB0ZXN0L3RhcmdldC9jbGFzc2VzL3Rlc3QvRm9v
LmNsYXNzUEsBAhQAFAAICAgAtYqwRJihAibQAAAAEAEAACYAAAAAAAAAAAAAAAAAtQoAAHRlc3Qv
dGFyZ2V0L2NsYXNzZXMvdGVzdC9Gb29JbXBsLmNsYXNzUEsBAhQAFAAICAgA04qwRAAAAAACAAAA
AAAAABkAAAAAAAAAAAAAAAAA2QsAAHRlc3QvdGFyZ2V0L3Rlc3QtY2xhc3Nlcy9QSwUGAAAAAA4A
DgAVBAAAIgwAAAAA
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>243217</attachid>
            <date>2014-05-18 14:53:00 -0400</date>
            <delta_ts>2014-05-18 14:53:11 -0400</delta_ts>
            <desc>patch under test</desc>
            <filename>Bug-434630--15generics-Unexpected-type-mismatch-erro.patch</filename>
            <type>text/plain</type>
            <size>11558</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0dlbmVyaWNzUmVncmVz
c2lvblRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0dlbmVyaWNzUmVn
cmVzc2lvblRlc3QuamF2YQppbmRleCBmM2UxYTFmLi5iMWQ2ZWYxIDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9HZW5lcmljc1JlZ3Jlc3Npb25UZXN0LmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pk
dC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vR2VuZXJpY3NSZWdyZXNzaW9uVGVzdC5q
YXZhCkBAIC01MDE2LDcgKzUwMTYsNyBAQAogCQkJIn1cbiIKIAkJfSk7CiB9Ci1wdWJsaWMgdm9p
ZCBfdGVzdEJ1ZzQzNDU3MF9jb21tZW50MygpIHsKK3B1YmxpYyB2b2lkIHRlc3RCdWc0MzQ1NzBf
Y29tbWVudDMoKSB7CiAJcnVuQ29uZm9ybVRlc3QoCiAJCW5ldyBTdHJpbmdbXSB7CiAJCQkiVGVz
dFdvbnRDb21waWxlLmphdmEiLApAQCAtNTA4MCw1ICs1MDgwLDEwMiBAQAogCQkJIn1cbiIKIAkJ
fSk7CiB9CisvLyBzYW1lIHRlc3QgYnV0IHdpdGggbnVsbCBhbm5vdGF0aW9ucyBhbmFseXNpcyBl
bmFibGVkCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDM0NTcwX2NvbW1lbnQzYigpIHsKKwlNYXAgb3B0
aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJ
TEVSX0FOTk9UQVRJT05fTlVMTF9BTkFMWVNJUywgSmF2YUNvcmUuRU5BQkxFRCk7CisJcnVuQ29u
Zm9ybVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiVGVzdFdvbnRDb21waWxlLmphdmEiLAor
CQkJImltcG9ydCBvcmcuYnVnLkFubm90YXRpb25XaXRoQ2xhc3NQYXJhbWV0ZXI7XG4iICsgCisJ
CQkiaW1wb3J0IG9yZy5idWcuQ3VzdG9tSGFuZGxlcjtcbiIgKyAKKwkJCSJpbXBvcnQgb3JnLmJ1
Zy5IYW5kbGVyO1xuIiArIAorCQkJIlxuIiArIAorCQkJIlxuIiArIAorCQkJIkBBbm5vdGF0aW9u
V2l0aENsYXNzUGFyYW1ldGVyKEN1c3RvbUhhbmRsZXIuY2xhc3MpXG4iICsgCisJCQkicHVibGlj
IGNsYXNzIFRlc3RXb250Q29tcGlsZSBleHRlbmRzIEFUZXN0PE9iamVjdD4ge1xuIiArIAorCQkJ
IglcbiIgKyAKKwkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xu
IiArIAorCQkJIgkJQ2xhc3M8PyBleHRlbmRzIEhhbmRsZXI8Pz4+IGggPSBDdXN0b21IYW5kbGVy
LmNsYXNzO1xuIiArIAorCQkJIgl9XG4iICsgCisJCQkiXG4iICsgCisJCQkifVxuIiwKKwkJCSJB
VGVzdC5qYXZhIiwKKwkJCSJwdWJsaWMgYWJzdHJhY3QgY2xhc3MgQVRlc3Q8VD4ge1xuIiArIAor
CQkJIlxuIiArIAorCQkJIn1cbiIsCisJCQkib3JnL2J1Zy9JdGVtLmphdmEiLAorCQkJInBhY2th
Z2Ugb3JnLmJ1ZztcbiIgKyAKKwkJCSJcbiIgKyAKKwkJCSJwdWJsaWMgaW50ZXJmYWNlIEl0ZW0g
e1xuIiArIAorCQkJIlxuIiArIAorCQkJIn1cbiIsCisJCQkib3JnL2J1Zy9DdXN0b21JdGVtLmph
dmEiLAorCQkJInBhY2thZ2Ugb3JnLmJ1ZztcbiIgKyAKKwkJCSJcbiIgKyAKKwkJCSJwdWJsaWMg
Y2xhc3MgQ3VzdG9tSXRlbSBpbXBsZW1lbnRzIEl0ZW0ge1xuIiArIAorCQkJIlxuIiArIAorCQkJ
In1cbiIsCisJCQkib3JnL2J1Zy9IYW5kbGVyLmphdmEiLAorCQkJInBhY2thZ2Ugb3JnLmJ1Zztc
biIgKyAKKwkJCSJcbiIgKyAKKwkJCSJwdWJsaWMgYWJzdHJhY3QgY2xhc3MgSGFuZGxlcjxUIGV4
dGVuZHMgSXRlbT4ge1xuIiArIAorCQkJIlxuIiArIAorCQkJIn1cbiIsCisJCQkib3JnL2J1Zy9D
dXN0b21IYW5kbGVyLmphdmEiLAorCQkJInBhY2thZ2Ugb3JnLmJ1ZztcbiIgKyAKKwkJCSJcbiIg
KyAKKwkJCSJwdWJsaWMgY2xhc3MgQ3VzdG9tSGFuZGxlciBleHRlbmRzIEhhbmRsZXI8Q3VzdG9t
SXRlbT4ge1xuIiArIAorCQkJIlxuIiArIAorCQkJIn1cbiIsCisJCQkib3JnL2J1Zy9Bbm5vdGF0
aW9uV2l0aENsYXNzUGFyYW1ldGVyLmphdmEiLAorCQkJInBhY2thZ2Ugb3JnLmJ1ZztcbiIgKyAK
KwkJCSJcbiIgKyAKKwkJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uRG9jdW1lbnRlZDtc
biIgKyAKKwkJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGU7XG4iICsg
CisJCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLlJldGVudGlvbjtcbiIgKyAKKwkJCSJp
bXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uUmV0ZW50aW9uUG9saWN5O1xuIiArIAorCQkJImlt
cG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQ7XG4iICsgCisJCQkiXG4iICsgCisJCQki
QFRhcmdldChFbGVtZW50VHlwZS5UWVBFKVxuIiArIAorCQkJIkBSZXRlbnRpb24oUmV0ZW50aW9u
UG9saWN5LlJVTlRJTUUpXG4iICsgCisJCQkiQERvY3VtZW50ZWRcbiIgKyAKKwkJCSJwdWJsaWMg
QGludGVyZmFjZSBBbm5vdGF0aW9uV2l0aENsYXNzUGFyYW1ldGVyIHtcbiIgKyAKKwkJCSIJXG4i
ICsgCisJCQkiCUNsYXNzPD8gZXh0ZW5kcyBIYW5kbGVyPD8+PiB2YWx1ZSgpO1xuIiArIAorCQkJ
IlxuIiArIAorCQkJIn1cbiIKKwkJfSwKKwkJb3B0aW9ucyk7Cit9CitwdWJsaWMgdm9pZCB0ZXN0
QnVnNDM0NjMwX2NvbW1lbnQ3KCkgeworCXJ1bkNvbmZvcm1UZXN0KAorCQluZXcgU3RyaW5nW10g
eworCQkJInRlc3QvRm9vSW1wbC5qYXZhIiwKKwkJCSJwYWNrYWdlIHRlc3Q7XG4iICsgCisJCQki
XG4iICsgCisJCQkicHVibGljIGNsYXNzIEZvb0ltcGwgaW1wbGVtZW50cyBGb28ge1xuIiArIAor
CQkJIlxuIiArIAorCQkJIn1cbiIsCisJCQkidGVzdC9Gb28uamF2YSIsCisJCQkicGFja2FnZSB0
ZXN0O1xuIiArCisJCQkiaW50ZXJmYWNlIFByb3ZpZGVyPFQ+IHt9XG4iICsKKwkJCSJAaW50ZXJm
YWNlIFByb3ZpZGVkQnkge1xuIiArCisJCQkiCUNsYXNzPD8gZXh0ZW5kcyBQcm92aWRlcjw/Pj4g
dmFsdWUoKTsiICsKKwkJCSJ9XG4iICsgCisJCQkiXG4iICsgCisJCQkiQFByb3ZpZGVkQnkoRm9v
LlNvbWVQcm92aWRlci5jbGFzcylcbiIgKyAKKwkJCSJwdWJsaWMgaW50ZXJmYWNlIEZvbyB7XG4i
ICsgCisJCQkiCVxuIiArIAorCQkJIglwdWJsaWMgc3RhdGljIGNsYXNzIFNvbWVQcm92aWRlciBp
bXBsZW1lbnRzIFByb3ZpZGVyPEZvbz4ge1xuIiArIAorCQkJIlxuIiArIAorCQkJIgkJcHVibGlj
IEZvbyBnZXQoKSB7XG4iICsgCisJCQkiCQkJcmV0dXJuIG51bGw7XG4iICsgCisJCQkiCQl9XG4i
ICsgCisJCQkiCQlcbiIgKyAKKwkJCSIJfVxuIiArIAorCQkJIn1cbiIKKwkJfSk7Cit9CiB9CiAK
ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvVHlwZVJlZmVyZW5jZS5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9U
eXBlUmVmZXJlbmNlLmphdmEKaW5kZXggZWI0MmI4OS4uOTQwYzc1MiAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2FzdC9UeXBlUmVmZXJlbmNlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9UeXBlUmVmZXJlbmNl
LmphdmEKQEAgLTE2LDYgKzE2LDcgQEAKICAqCQkJCQkJCQlCdWcgNDE3Mjk1IC0gWzEuOFtbbnVs
bF0gTWFzc2FnZSB0eXBlIGFubm90YXRlZCBudWxsIGFuYWx5c2lzIHRvIGdlbCB3ZWxsIHdpdGgg
ZGVlcCBlbmNvZGVkIHR5cGUgYmluZGluZ3MuCiAgKgkJCQkJCQkJQnVnIDQyNzE2MyAtIFsxLjhd
W251bGxdIGJvZ3VzIGVycm9yICJDb250cmFkaWN0b3J5IG51bGwgc3BlY2lmaWNhdGlvbiIgb24g
dmFyYWdzCiAgKgkJCQkJCQkJQnVnIDQyOTk1OCAtIFsxLjhdW251bGxdIGV2YWx1YXRlIG5ldyBE
ZWZhdWx0TG9jYXRpb24gYXR0cmlidXRlIG9mIEBOb25OdWxsQnlEZWZhdWx0CisgKgkJCQkJCQkJ
QnVnIDQzNDU3MCAtIEdlbmVyaWMgdHlwZSBtaXNtYXRjaCBmb3IgcGFyYW1ldHJpemVkIGNsYXNz
IGFubm90YXRpb24gYXR0cmlidXRlIHdpdGggaW5uZXIgY2xhc3MKICAqICAgICAgICBBbmR5IENs
ZW1lbnQgKEdvUGl2b3RhbCwgSW5jKSBhY2xlbWVudEBnb3Bpdm90YWwuY29tIC0gQ29udHJpYnV0
aW9ucyBmb3IKICAqICAgICAgICAgICAgICAgICAgICAgICAgICBCdWcgMzgzNjI0IC0gWzEuOF1b
Y29tcGlsZXJdIFJldml2ZSBjb2RlIGdlbmVyYXRpb24gc3VwcG9ydCBmb3IgdHlwZSBhbm5vdGF0
aW9ucyAoZnJvbSBPbGl2aWVyJ3Mgd29yaykKICAqICAgICAgICAgICAgICAgICAgICAgICAgICBC
dWcgNDA5MjM2IC0gWzEuOF1bY29tcGlsZXJdIFR5cGUgYW5ub3RhdGlvbnMgb24gaW50ZXJzZWN0
aW9uIGNhc3QgdHlwZXMgZHJvcHBlZCBieSBjb2RlIGdlbmVyYXRvcgpAQCAtNjIzLDcgKzYyNCw4
IEBACiAJCQl9CiAJCX0KIAl9Ci0JaWYgKHRoaXMucmVzb2x2ZWRUeXBlICE9IG51bGwKKwlpZiAo
c2NvcGUuY29tcGlsZXJPcHRpb25zKCkuaXNBbm5vdGF0aW9uQmFzZWROdWxsQW5hbHlzaXNFbmFi
bGVkCisJCQkmJiB0aGlzLnJlc29sdmVkVHlwZSAhPSBudWxsCiAJCQkmJiAodGhpcy5yZXNvbHZl
ZFR5cGUudGFnQml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlvbk51bGxNQVNLKSA9PSAwCiAJCQkmJiAh
dGhpcy5yZXNvbHZlZFR5cGUuaXNUeXBlVmFyaWFibGUoKQogCQkJJiYgIXRoaXMucmVzb2x2ZWRU
eXBlLmlzV2lsZGNhcmQoKQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9DbGFzc1Njb3BlLmph
dmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvbG9va3VwL0NsYXNzU2NvcGUuamF2YQppbmRleCA1ZDQ1MDYzLi43ZjdhMTdj
IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0NsYXNzU2NvcGUuamF2YQorKysgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
bG9va3VwL0NsYXNzU2NvcGUuamF2YQpAQCAtNTAsNyArNTAsNiBAQAogCXB1YmxpYyBUeXBlRGVj
bGFyYXRpb24gcmVmZXJlbmNlQ29udGV4dDsKIAlwdWJsaWMgVHlwZVJlZmVyZW5jZSBzdXBlclR5
cGVSZWZlcmVuY2U7CiAJamF2YS51dGlsLkFycmF5TGlzdDxPYmplY3Q+IGRlZmVycmVkQm91bmRD
aGVja3M7IC8vIGNvbnRhaW5zIFR5cGVSZWZlcmVuY2Ugb3IgUnVubmFibGUuIFRPRE8gY29uc2lk
ZXIgbWFraW5nIHRoaXMgYSBMaXN0PFJ1bm5hYmxlPgotCWJvb2xlYW4gY29ubmVjdGluZ0hpZXJh
cmNoeTsKIAogCXB1YmxpYyBDbGFzc1Njb3BlKFNjb3BlIHBhcmVudCwgVHlwZURlY2xhcmF0aW9u
IGNvbnRleHQpIHsKIAkJc3VwZXIoU2NvcGUuQ0xBU1NfU0NPUEUsIHBhcmVudCk7CkBAIC04ODgs
NiArODg3LDggQEAKIAkJCU9iamVjdCB0b0NoZWNrID0gdGhpcy5kZWZlcnJlZEJvdW5kQ2hlY2tz
LmdldChpKTsKIAkJCWlmICh0b0NoZWNrIGluc3RhbmNlb2YgVHlwZVJlZmVyZW5jZSkKIAkJCQko
KFR5cGVSZWZlcmVuY2UpIHRvQ2hlY2spLmNoZWNrQm91bmRzKHRoaXMpOworCQkJZWxzZSBpZiAo
dG9DaGVjayBpbnN0YW5jZW9mIFJ1bm5hYmxlKQorCQkJCSgoUnVubmFibGUpIHRvQ2hlY2spLnJ1
bigpOwogCQl9CiAJCXRoaXMuZGVmZXJyZWRCb3VuZENoZWNrcyA9IG51bGw7CiAKQEAgLTEwODgs
MjUgKzEwODksMTkgQEAKIAogCXZvaWQgY29ubmVjdFR5cGVIaWVyYXJjaHkoKSB7CiAJCVNvdXJj
ZVR5cGVCaW5kaW5nIHNvdXJjZVR5cGUgPSB0aGlzLnJlZmVyZW5jZUNvbnRleHQuYmluZGluZzsK
LQkJdHJ5IHsKLQkJCWlmICgoc291cmNlVHlwZS50YWdCaXRzICYgVGFnQml0cy5CZWdpbkhpZXJh
cmNoeUNoZWNrKSA9PSAwKSB7Ci0JCQkJdGhpcy5jb25uZWN0aW5nSGllcmFyY2h5ID0gdHJ1ZTsK
LQkJCQlzb3VyY2VUeXBlLnRhZ0JpdHMgfD0gVGFnQml0cy5CZWdpbkhpZXJhcmNoeUNoZWNrOwot
CQkJCWVudmlyb25tZW50KCkudHlwZXNCZWluZ0Nvbm5lY3RlZC5hZGQoc291cmNlVHlwZSk7Ci0J
CQkJYm9vbGVhbiBub1Byb2JsZW1zID0gY29ubmVjdFN1cGVyY2xhc3MoKTsKLQkJCQlub1Byb2Js
ZW1zICY9IGNvbm5lY3RTdXBlckludGVyZmFjZXMoKTsKLQkJCQllbnZpcm9ubWVudCgpLnR5cGVz
QmVpbmdDb25uZWN0ZWQucmVtb3ZlKHNvdXJjZVR5cGUpOwotCQkJCXNvdXJjZVR5cGUudGFnQml0
cyB8PSBUYWdCaXRzLkVuZEhpZXJhcmNoeUNoZWNrOwotCQkJCW5vUHJvYmxlbXMgJj0gY29ubmVj
dFR5cGVWYXJpYWJsZXModGhpcy5yZWZlcmVuY2VDb250ZXh0LnR5cGVQYXJhbWV0ZXJzLCBmYWxz
ZSk7Ci0JCQkJc291cmNlVHlwZS50YWdCaXRzIHw9IFRhZ0JpdHMuVHlwZVZhcmlhYmxlc0FyZUNv
bm5lY3RlZDsKLQkJCQlpZiAobm9Qcm9ibGVtcyAmJiBzb3VyY2VUeXBlLmlzSGllcmFyY2h5SW5j
b25zaXN0ZW50KCkpCi0JCQkJCXByb2JsZW1SZXBvcnRlcigpLmhpZXJhcmNoeUhhc1Byb2JsZW1z
KHNvdXJjZVR5cGUpOwotCQkJfQotCQkJY29ubmVjdE1lbWJlclR5cGVzKCk7Ci0JCX0gZmluYWxs
eSB7Ci0JCQl0aGlzLmNvbm5lY3RpbmdIaWVyYXJjaHkgPSBmYWxzZTsKLQkJCWRlZmVycmVkTWVt
YmVyVmFsdWVDaGVjaygpOworCQlpZiAoKHNvdXJjZVR5cGUudGFnQml0cyAmIFRhZ0JpdHMuQmVn
aW5IaWVyYXJjaHlDaGVjaykgPT0gMCkgeworCQkJc291cmNlVHlwZS50YWdCaXRzIHw9IFRhZ0Jp
dHMuQmVnaW5IaWVyYXJjaHlDaGVjazsKKwkJCWVudmlyb25tZW50KCkudHlwZXNCZWluZ0Nvbm5l
Y3RlZC5hZGQoc291cmNlVHlwZSk7CisJCQlib29sZWFuIG5vUHJvYmxlbXMgPSBjb25uZWN0U3Vw
ZXJjbGFzcygpOworCQkJbm9Qcm9ibGVtcyAmPSBjb25uZWN0U3VwZXJJbnRlcmZhY2VzKCk7CisJ
CQllbnZpcm9ubWVudCgpLnR5cGVzQmVpbmdDb25uZWN0ZWQucmVtb3ZlKHNvdXJjZVR5cGUpOwor
CQkJc291cmNlVHlwZS50YWdCaXRzIHw9IFRhZ0JpdHMuRW5kSGllcmFyY2h5Q2hlY2s7CisJCQlu
b1Byb2JsZW1zICY9IGNvbm5lY3RUeXBlVmFyaWFibGVzKHRoaXMucmVmZXJlbmNlQ29udGV4dC50
eXBlUGFyYW1ldGVycywgZmFsc2UpOworCQkJc291cmNlVHlwZS50YWdCaXRzIHw9IFRhZ0JpdHMu
VHlwZVZhcmlhYmxlc0FyZUNvbm5lY3RlZDsKKwkJCWlmIChub1Byb2JsZW1zICYmIHNvdXJjZVR5
cGUuaXNIaWVyYXJjaHlJbmNvbnNpc3RlbnQoKSkKKwkJCQlwcm9ibGVtUmVwb3J0ZXIoKS5oaWVy
YXJjaHlIYXNQcm9ibGVtcyhzb3VyY2VUeXBlKTsKIAkJfQorCQljb25uZWN0TWVtYmVyVHlwZXMo
KTsKIAkJTG9va3VwRW52aXJvbm1lbnQgZW52ID0gZW52aXJvbm1lbnQoKTsKIAkJdHJ5IHsKIAkJ
CWVudi5taXNzaW5nQ2xhc3NGaWxlTG9jYXRpb24gPSB0aGlzLnJlZmVyZW5jZUNvbnRleHQ7CkBA
IC0xMTIxLDI2ICsxMTE2LDEzIEBACiAKIAlAT3ZlcnJpZGUKIAlwdWJsaWMgYm9vbGVhbiBkZWZl
ckNoZWNrKFJ1bm5hYmxlIGNoZWNrKSB7Ci0JCWlmICh0aGlzLmNvbm5lY3RpbmdIaWVyYXJjaHkp
IHsKKwkJaWYgKGNvbXBpbGF0aW9uVW5pdFNjb3BlKCkuY29ubmVjdGluZ0hpZXJhcmNoeSkgewog
CQkJaWYgKHRoaXMuZGVmZXJyZWRCb3VuZENoZWNrcyA9PSBudWxsKQogCQkJCXRoaXMuZGVmZXJy
ZWRCb3VuZENoZWNrcyA9IG5ldyBBcnJheUxpc3Q8T2JqZWN0PigpOwogCQkJdGhpcy5kZWZlcnJl
ZEJvdW5kQ2hlY2tzLmFkZChjaGVjayk7CiAJCQlyZXR1cm4gdHJ1ZTsKIAkJfSBlbHNlIHsKLQkJ
CXJldHVybiBzdXBlci5kZWZlckNoZWNrKGNoZWNrKTsKLQkJfQotCX0KLQotCXByaXZhdGUgdm9p
ZCBkZWZlcnJlZE1lbWJlclZhbHVlQ2hlY2soKSB7Ci0JCWlmICh0aGlzLmRlZmVycmVkQm91bmRD
aGVja3MgIT0gbnVsbCkgewotCQkJSXRlcmF0b3IgaXRlcmF0b3IgPSB0aGlzLmRlZmVycmVkQm91
bmRDaGVja3MuaXRlcmF0b3IoKTsKLQkJCXdoaWxlIChpdGVyYXRvci5oYXNOZXh0KCkpIHsKLQkJ
CQlPYmplY3QgY2hlY2sgPSBpdGVyYXRvci5uZXh0KCk7Ci0JCQkJaWYgKGNoZWNrIGluc3RhbmNl
b2YgUnVubmFibGUpIHsKLQkJCQkJKChSdW5uYWJsZSljaGVjaykucnVuKCk7Ci0JCQkJCWl0ZXJh
dG9yLnJlbW92ZSgpOwotCQkJCX0KLQkJCX0KKwkJCXJldHVybiBmYWxzZTsKIAkJfQogCX0KIApk
aWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Db21waWxhdGlvblVuaXRTY29wZS5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2xvb2t1cC9Db21waWxhdGlvblVuaXRTY29wZS5qYXZhCmluZGV4IGY4ZmI2MTguLjIxZjdj
MWUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQ29tcGlsYXRpb25Vbml0U2NvcGUuamF2YQor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvbG9va3VwL0NvbXBpbGF0aW9uVW5pdFNjb3BlLmphdmEKQEAgLTEwLDYgKzEw
LDcgQEAKICAqICAgICBFcmxpbmcgRWxsaW5nc2VuIC0gIHBhdGNoIGZvciBidWcgMTI1NTcwCiAg
KiAgICAgU3RlcGhhbiBIZXJybWFubiAtIENvbnRyaWJ1dGlvbiBmb3IKICAqCQkJCQkJCQlCdWcg
NDI5OTU4IC0gWzEuOF1bbnVsbF0gZXZhbHVhdGUgbmV3IERlZmF1bHRMb2NhdGlvbiBhdHRyaWJ1
dGUgb2YgQE5vbk51bGxCeURlZmF1bHQKKyAqCQkJCQkJCQlCdWcgNDM0NTcwIC0gR2VuZXJpYyB0
eXBlIG1pc21hdGNoIGZvciBwYXJhbWV0cml6ZWQgY2xhc3MgYW5ub3RhdGlvbiBhdHRyaWJ1dGUg
d2l0aCBpbm5lciBjbGFzcwogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXA7CiAKQEAgLTQzLDE4ICs0NCwyMCBA
QAogCQogCXByaXZhdGUgSW1wb3J0QmluZGluZ1tdIHRlbXBJbXBvcnRzOwkvLyB0byBrZWVwIGEg
cmVjb3JkIG9mIHJlc29sdmVkIGltcG9ydHMgd2hpbGUgdHJhdmVyc2luZyBhbGwgaW4gZmF1bHRJ
bkltcG9ydHMoKQogCQotCQkvKioKLQkJICogRmxhZyB0aGF0IHNob3VsZCBiZSBzZXQgZHVyaW5n
IGFubm90YXRpb24gdHJhdmVyc2FsIG9yIHNpbWlsYXIgcnVucwotCQkgKiB0byBwcmV2ZW50IGNh
Y2hpbmcgb2YgZmFpbHVyZXMgcmVnYXJkaW5nIGltcG9ydHMgb2YgeWV0IHRvIGJlIGdlbmVyYXRl
ZCBjbGFzc2VzLgotCQkgKi8KLQkJcHVibGljIGJvb2xlYW4gc3VwcHJlc3NJbXBvcnRFcnJvcnM7
Ci0JCQotCQkvKioKLQkJICogU2tpcHMgaW1wb3J0IGNhY2hpbmcgaWYgdW5yZXNvbHZlZCBpbXBv
cnRzIHdlcmUKLQkJICogZm91bmQgbGFzdCB0aW1lLgotCQkgKi8KLQkJcHJpdmF0ZSBib29sZWFu
IHNraXBDYWNoaW5nSW1wb3J0czsKKwkvKioKKwkgKiBGbGFnIHRoYXQgc2hvdWxkIGJlIHNldCBk
dXJpbmcgYW5ub3RhdGlvbiB0cmF2ZXJzYWwgb3Igc2ltaWxhciBydW5zCisJICogdG8gcHJldmVu
dCBjYWNoaW5nIG9mIGZhaWx1cmVzIHJlZ2FyZGluZyBpbXBvcnRzIG9mIHlldCB0byBiZSBnZW5l
cmF0ZWQgY2xhc3Nlcy4KKwkgKi8KKwlwdWJsaWMgYm9vbGVhbiBzdXBwcmVzc0ltcG9ydEVycm9y
czsKIAkKKwkvKioKKwkgKiBTa2lwcyBpbXBvcnQgY2FjaGluZyBpZiB1bnJlc29sdmVkIGltcG9y
dHMgd2VyZQorCSAqIGZvdW5kIGxhc3QgdGltZS4KKwkgKi8KKwlwcml2YXRlIGJvb2xlYW4gc2tp
cENhY2hpbmdJbXBvcnRzOworCisJYm9vbGVhbiBjb25uZWN0aW5nSGllcmFyY2h5OworCiBwdWJs
aWMgQ29tcGlsYXRpb25Vbml0U2NvcGUoQ29tcGlsYXRpb25Vbml0RGVjbGFyYXRpb24gdW5pdCwg
TG9va3VwRW52aXJvbm1lbnQgZW52aXJvbm1lbnQpIHsKIAlzdXBlcihDT01QSUxBVElPTl9VTklU
X1NDT1BFLCBudWxsKTsKIAl0aGlzLmVudmlyb25tZW50ID0gZW52aXJvbm1lbnQ7CkBAIC0zMTQs
OCArMzE3LDEzIEBACiB9CiAKIHZvaWQgY29ubmVjdFR5cGVIaWVyYXJjaHkoKSB7Ci0JZm9yIChp
bnQgaSA9IDAsIGxlbmd0aCA9IHRoaXMudG9wTGV2ZWxUeXBlcy5sZW5ndGg7IGkgPCBsZW5ndGg7
IGkrKykKLQkJdGhpcy50b3BMZXZlbFR5cGVzW2ldLnNjb3BlLmNvbm5lY3RUeXBlSGllcmFyY2h5
KCk7CisJdGhpcy5jb25uZWN0aW5nSGllcmFyY2h5ID0gdHJ1ZTsKKwl0cnkgeworCQlmb3IgKGlu
dCBpID0gMCwgbGVuZ3RoID0gdGhpcy50b3BMZXZlbFR5cGVzLmxlbmd0aDsgaSA8IGxlbmd0aDsg
aSsrKQorCQkJdGhpcy50b3BMZXZlbFR5cGVzW2ldLnNjb3BlLmNvbm5lY3RUeXBlSGllcmFyY2h5
KCk7CisJfSBmaW5hbGx5IHsKKwkJdGhpcy5jb25uZWN0aW5nSGllcmFyY2h5ID0gZmFsc2U7CisJ
fQogfQogdm9pZCBmYXVsdEluSW1wb3J0cygpIHsKIAlib29sZWFuIHVucmVzb2x2ZWRGb3VuZCA9
IGZhbHNlOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9TY29wZS5qYXZhIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xv
b2t1cC9TY29wZS5qYXZhCmluZGV4IDAxYjkwMjIuLmExZjgwNTggMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9sb29rdXAvU2NvcGUuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1Njb3BlLmphdmEKQEAgLTQ4
OTcsNiArNDg5Nyw3IEBACiAJfQogCiAJcHVibGljIHZvaWQgZGVmZXJCb3VuZENoZWNrKFR5cGVS
ZWZlcmVuY2UgdHlwZVJlZikgeworCQkvLyBUT0RPOiB1c2UgZHluYW1pYyBiaW5kaW5nIHJhdGhl
ciB0aGFuIGV4cGxpY2l0IHR5cGUgY2hlY2sKIAkJaWYgKHRoaXMua2luZCA9PSBDTEFTU19TQ09Q
RSkgewogCQkJQ2xhc3NTY29wZSBjbGFzc1Njb3BlID0gKENsYXNzU2NvcGUpIHRoaXM7CiAJCQlp
ZiAoY2xhc3NTY29wZS5kZWZlcnJlZEJvdW5kQ2hlY2tzID09IG51bGwpIHs=
</data>

          </attachment>
      

    </bug>

</bugzilla>