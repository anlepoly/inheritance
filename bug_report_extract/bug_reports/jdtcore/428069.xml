<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>428069</bug_id>
          
          <creation_ts>2014-02-13 03:34:00 -0500</creation_ts>
          <short_desc>DebugEvaluationTest.test012</short_desc>
          <delta_ts>2014-09-10 10:22:58 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux-GTK</op_sys>
          <bug_status>NEW</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords>test</keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Dani Megert">daniel_megert</reporter>
          <assigned_to name="Jay Arthanareeswaran">jarthana</assigned_to>
          <cc>jarthana</cc>
    
    <cc>shankhba</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2362708</commentid>
    <comment_count>0</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2014-02-13 03:34:58 -0500</bug_when>
    <thetext>N20140212-2000.

http://download.eclipse.org/eclipse/downloads/drops4/N20140212-2000/testresults/html/org.eclipse.jdt.core.tests.compiler_linux.gtk.x86_6.0.html

Value expected:&lt;true&gt; but was:&lt;false&gt;

junit.framework.AssertionFailedError: Value expected:&lt;true&gt; but was:&lt;false&gt;
at org.eclipse.jdt.core.tests.eval.EvaluationTest.failNotEquals(EvaluationTest.java:471)
at org.eclipse.jdt.core.tests.eval.EvaluationTest.assertEquals(EvaluationTest.java:156)
at org.eclipse.jdt.core.tests.eval.DebugEvaluationTest.test012(DebugEvaluationTest.java:581)
at org.eclipse.jdt.core.tests.util.CompilerTestSetup.run(CompilerTestSetup.java:55)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:657)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:310)
at org.eclipse.test.CoreTestApplication.runTests(CoreTestApplication.java:36)
at org.eclipse.test.CoreTestApplication.run(CoreTestApplication.java:32)
at org.eclipse.equinox.internal.app.EclipseAppContainer.callMethodWithException(EclipseAppContainer.java:587)
at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:198)
at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:133)
at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:103)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:374)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:228)
at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:648)
at org.eclipse.equinox.launcher.Main.basicRun(Main.java:603)
at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
at org.eclipse.equinox.launcher.Main.main(Main.java:1438)
at org.eclipse.core.launcher.Main.main(Main.java:34)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2362884</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-13 09:05:29 -0500</bug_when>
    <thetext>S.t. non-deterministic going on here, I sometimes observe this when running the tests in the IDE, too.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2384573</commentid>
    <comment_count>2</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2014-04-04 04:35:46 -0400</bug_when>
    <thetext>DebugEvaluationTest.test048 (test048 - 1.5) failed in N20140403-2000:

N/A

org.eclipse.jdt.internal.eval.InstallException
at org.eclipse.jdt.internal.eval.EvaluationContext.evaluate(EvaluationContext.java:298)
at org.eclipse.jdt.core.tests.eval.DebugEvaluationTest.evaluate(DebugEvaluationTest.java:148)
at org.eclipse.jdt.core.tests.eval.DebugEvaluationTest.test048(DebugEvaluationTest.java:2048)
at org.eclipse.jdt.core.tests.util.CompilerTestSetup.run(CompilerTestSetup.java:55)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:657)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:310)
at org.eclipse.test.CoreTestApplication.runTests(CoreTestApplication.java:36)
at org.eclipse.test.CoreTestApplication.run(CoreTestApplication.java:32)
at org.eclipse.equinox.internal.app.EclipseAppContainer.callMethodWithException(EclipseAppContainer.java:587)
at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:198)
at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:379)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:233)
at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:648)
at org.eclipse.equinox.launcher.Main.basicRun(Main.java:603)
at org.eclipse.equinox.launcher.Main.run(Main.java:1465)
at org.eclipse.equinox.launcher.Main.main(Main.java:1438)
at org.eclipse.core.launcher.Main.main(Main.java:34)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2400099</commentid>
    <comment_count>3</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2014-05-12 04:35:09 -0400</bug_when>
    <thetext>This one failed again. This time on Windows:

test012 - 1.6

Value expected:&lt;true&gt; but was:&lt;false&gt;

junit.framework.AssertionFailedError: Value expected:&lt;true&gt; but was:&lt;false&gt;
at org.eclipse.jdt.core.tests.eval.EvaluationTest.failNotEquals(EvaluationTest.java:471)
at org.eclipse.jdt.core.tests.eval.EvaluationTest.assertEquals(EvaluationTest.java:156)
at org.eclipse.jdt.core.tests.eval.DebugEvaluationTest.test012(DebugEvaluationTest.java:584)
at org.eclipse.jdt.core.tests.util.CompilerTestSetup.run(CompilerTestSetup.java:55)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:657)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:310)
at org.eclipse.test.CoreTestApplication.runTests(CoreTestApplication.java:36)
at org.eclipse.test.CoreTestApplication.run(CoreTestApplication.java:32)
at org.eclipse.equinox.internal.app.EclipseAppContainer.callMethodWithException(EclipseAppContainer.java:587)
at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:198)
at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:379)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:233)
at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:648)
at org.eclipse.equinox.launcher.Main.basicRun(Main.java:603)
at org.eclipse.equinox.launcher.Main.run(Main.java:1465)
at org.eclipse.equinox.launcher.Main.main(Main.java:1438)
at org.eclipse.core.launcher.Main.main(Main.java:34)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2433487</commentid>
    <comment_count>4</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-07-30 05:43:17 -0400</bug_when>
    <thetext>Failed again.

N20140729-2000

http://download.eclipse.org/eclipse/downloads/drops4/N20140729-2000/testresults/html/org.eclipse.jdt.core.tests.compiler_linux.gtk.x86_64_8.0.html

test012 - 1.3	


Failure	Value expected:&lt;true&gt; but was:&lt;false&gt; 

Call stack same as Comment 3.

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2437462</commentid>
    <comment_count>5</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-08-11 05:13:48 -0400</bug_when>
    <thetext>Failed Again.

Build ID: N20140810-2000

http://download.eclipse.org/eclipse/downloads/drops4/N20140810-2000/testResults.php

test012 - 1.7

Value expected:&lt;true&gt; but was:&lt;false&gt;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2438273</commentid>
    <comment_count>6</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-08-12 22:04:45 -0400</bug_when>
    <thetext>Failed again.
Build ID: I20140812-0800
test012 - 1.3</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2438515</commentid>
    <comment_count>7</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-08-13 10:00:50 -0400</bug_when>
    <thetext>The failure has occurred both on Linux (more than once) and Windows and across multiple JRE levels. Just looking at the order of tests run, I don&apos;t think it could be inter dependencies between tests (not sure, though).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2438861</commentid>
    <comment_count>8</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-08-14 02:44:42 -0400</bug_when>
    <thetext>One theory is that the preceding assignment of variable &apos;date&apos; never takes effect or the second evaluation is kicked off even before the previous result has been stored. 

Interestingly, the next test in line test013, which is commented out, is identical to the one failing now - only difference being reassignment of an int variable being tested instead of java.util.Date.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2438929</commentid>
    <comment_count>9</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-08-14 05:21:11 -0400</bug_when>
    <thetext>I have put some trouble shooting log here:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=7bcf1741dcb918f3307ee7d52f0450e52fdd3029

However, if my theory (comment #8) is correct and the trouble shooting code introduces some delay, they tests may not fail. Anyway, let&apos;s wait and see what the results produce.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2444730</commentid>
    <comment_count>10</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2014-08-28 04:43:58 -0400</bug_when>
    <thetext>Failed again:

http://download.eclipse.org/eclipse/downloads/drops4/N20140827-2000/testresults/html/org.eclipse.jdt.core.tests.compiler_linux.gtk.x86_64_8.0.html</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2444826</commentid>
    <comment_count>11</comment_count>
      <attachid>246481</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-08-28 07:20:01 -0400</bug_when>
    <thetext>Created attachment 246481
Proposed fix

I suspect the previous evaluation doesn&apos;t quite complete before the next one picks up the stale value in test012(). I can&apos;t reproduce this behavior, but...

In org.eclipse.jdt.core.eval.IEvaluationContext.evaluateCodeSnippet(), I see the following documentation:

* This method is long-running; progress and cancellation are provide
* by the given progress monitor.

Unfortunately the implementing EvaluationContext and EvaluationContextWrapper (and as a result our tests) don&apos;t make use of the progress monitor. I will release some more trouble shooting logs (in place of the ones I already put, which isn&apos;t quite useful) before confirming my thoughts and releasing this fix. But at the moment, I strongly believe this is a test only issue.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2445903</commentid>
    <comment_count>12</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-01 02:21:34 -0400</bug_when>
    <thetext>I notice that this test --&gt; test012 has started hanging of late - particularly
when run as RunAll* - You can reproduce easily by launching RunAllJava8Tests.

Jay, could you just glance through the logging code added recently to make
sure that is causing the shift in symptoms ? TIA.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2445968</commentid>
    <comment_count>13</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-09-01 05:19:38 -0400</bug_when>
    <thetext>Failed again.
Build ID: N20140831-2000
Platform: Linux
test012 - 1.5</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2446192</commentid>
    <comment_count>14</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-09-02 01:57:59 -0400</bug_when>
    <thetext>(In reply to shankha banerjee from comment #13)
&gt; Failed again.
&gt; Build ID: N20140831-2000
&gt; Platform: Linux
&gt; test012 - 1.5

From the logs:

Old date =	Thu Oct 04 19:00:00 EST 1582
new date =	Mon Sep 01 03:57:54 EDT 2014
cal.getGregorianChange() =	Thu Oct 04 19:00:00 EST 1582
...
Old date =	Thu Oct 04 19:00:00 EST 1582
new date =	Thu Oct 04 19:00:00 EST 1582

The first set of print outs are from a passing instance and the second is from the failing tests. So, looks like the assignment of the date never took place or completed. This confirms my thoughts that it is indeed a timing issue.

After looking at the complaint from comment #12, I will release the fix for the test.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2446193</commentid>
    <comment_count>15</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-09-02 02:02:35 -0400</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #12)
&gt; I notice that this test --&gt; test012 has started hanging of late -
&gt; particularly
&gt; when run as RunAll* - You can reproduce easily by launching RunAllJava8Tests.
&gt; 
&gt; Jay, could you just glance through the logging code added recently to make
&gt; sure that is causing the shift in symptoms ? TIA.

I don&apos;t see the test hanging. Do you see the tests taking longer time or they actually hang? The changes to the tests only included some print statements to the snippet being evaluated.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2446203</commentid>
    <comment_count>16</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-02 02:32:11 -0400</bug_when>
    <thetext>I have seen my test runs being stuck at this test for 5 minutes or more. I didn&apos;t
verify if the test is really hanging - so I am using &quot;hang&quot; somewhat informally.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2446854</commentid>
    <comment_count>17</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-03 02:48:09 -0400</bug_when>
    <thetext>I have disabled this test as it consistently appears to hang when you run
RunAllJava8Tests.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2446866</commentid>
    <comment_count>18</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-09-03 02:59:27 -0400</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #17)
&gt; I have disabled this test as it consistently appears to hang when you run
&gt; RunAllJava8Tests.

Srikanth, it will be good if you can find some time to see what&apos;s going on in your machine. Perhaps you can take the thread dump when it happens and share it so we can investigate? I don&apos;t see this in my environment and nor in the build environment. In the build environment, this particular test doesn&apos;t take more than a sec (regardless pass/fail). TIA!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2446869</commentid>
    <comment_count>19</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-09-03 03:03:58 -0400</bug_when>
    <thetext>I(In reply to Jayaprakash Arthanareeswaran from comment #18)
&gt; Srikanth, it will be good if you can find some time to see what&apos;s going on
&gt; in your machine. Perhaps you can take the thread dump when it happens and
&gt; share it so we can investigate? I don&apos;t see this in my environment and nor
&gt; in the build environment. In the build environment, this particular test
&gt; doesn&apos;t take more than a sec (regardless pass/fail). TIA!

I can see the hang issue sometimes while running RunAllJava8Tests.
I will investigate and let you know.

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2449800</commentid>
    <comment_count>20</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-09-10 10:22:58 -0400</bug_when>
    <thetext>This is what I observe:

While performing the write operation : 
185: out.write(classDefinition); // [1]
we get a NPE. There is no call stack. 

The unit test case does not proceed beyond the line:
EventSet set = this.jdiVM.eventQueue().remove(); // [2]

The scenario is not 100% reproducible. I observe this behavior while we run
RunAllJava8 tests.

---
[1] Stack Trace
Thread [main] (Suspended)	
	TargetInterface.sendClasses(boolean, ClassFile[]) line: 185	
	EvaluationTest$Requestor.acceptClassFiles(ClassFile[], char[]) line: 52	
	EvaluationContext.evaluate(char[], char[][], char[][], int[], char[], boolean, boolean, INameEnvironment, Map, IRequestor, IProblemFactory) line: 297	
	EvaluationContext.evaluate(char[], INameEnvironment, Map, IRequestor, IProblemFactory) line: 316	
	JDIStackFrame.getDebuggedThread(DebugEvaluationTest) line: 153	
	JDIStackFrame.&lt;init&gt;(VirtualMachine, DebugEvaluationTest, String, String, String, int, long) line: 86	
	JDIStackFrame.&lt;init&gt;(VirtualMachine, DebugEvaluationTest, String, String, String, int) line: 66	
	JDIStackFrame.&lt;init&gt;(VirtualMachine, DebugEvaluationTest, String) line: 56	
	DebugEvaluationTest.test012() line: 569	

---

[2] Stack Trace
Thread [main] (Suspended)	
	JDIStackFrame.getDebuggedThread(DebugEvaluationTest) line: 180	
	JDIStackFrame.&lt;init&gt;(VirtualMachine, DebugEvaluationTest, String, String, String, int, long) line: 86	
	JDIStackFrame.&lt;init&gt;(VirtualMachine, DebugEvaluationTest, String, String, String, int) line: 66	
	JDIStackFrame.&lt;init&gt;(VirtualMachine, DebugEvaluationTest, String) line: 56	
	DebugEvaluationTest.test012() line: 569</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>246481</attachid>
            <date>2014-08-28 07:20:00 -0400</date>
            <delta_ts>2014-08-28 07:20:01 -0400</delta_ts>
            <desc>Proposed fix</desc>
            <filename>Fixed-Bug-428069--DebugEvaluationTesttest012.patch</filename>
            <type>text/plain</type>
            <size>5588</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9ldmFsL0RlYnVnRXZhbHVhdGlvblRlc3QuamF2YSBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9ldmFsL0RlYnVnRXZhbHVhdGlvblRlc3QuamF2YQppbmRleCAzNDQ2MmYwLi4wOWNm
MjM2IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZXZhbC9EZWJ1Z0V2YWx1YXRpb25UZXN0LmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2V2YWwvRGVidWdFdmFsdWF0aW9uVGVzdC5qYXZhCkBAIC0yMSw0ICsy
MSw1IEBACiBpbXBvcnQganVuaXQuZnJhbWV3b3JrLlRlc3Q7CiAKK2ltcG9ydCBvcmcuZWNsaXBz
ZS5jb3JlLnJ1bnRpbWUuSVByb2dyZXNzTW9uaXRvcjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
Y29yZS5jb21waWxlci5DYXRlZ29yaXplZFByb2JsZW07CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmNvcmUuY29tcGlsZXIuSVByb2JsZW07CkBAIC0xNTgsNCArMTU5LDQ2IEBACiAJCQlyZXF1ZXN0
b3IsCiAJCQlnZXRQcm9ibGVtRmFjdG9yeSgpKTsKKwl9CisJcHJpdmF0ZSB2b2lkIGV2YWx1YXRl
QW5kV2FpdFRvQ29tcGxldGUoSkRJU3RhY2tGcmFtZSBzdGFja0ZyYW1lLCBEZWJ1Z1JlcXVlc3Rv
ciByZXF1ZXN0b3IsIGNoYXJbXSBzbmlwcGV0LCBsb25nIHdhaXQpIHRocm93cyBJbnN0YWxsRXhj
ZXB0aW9uIHsKKwkJY2xhc3MgTG9jYWxQcm9ncmVzc01vbml0b3IgaW1wbGVtZW50cyBJUHJvZ3Jl
c3NNb25pdG9yIHsKKwkJCWJvb2xlYW4gY29tcGxldGUgPSBmYWxzZTsKKwkJCXB1YmxpYyB2b2lk
IHdvcmtlZChpbnQgd29yaykgeworCQkJfQorCQkJcHVibGljIHZvaWQgc3ViVGFzayhTdHJpbmcg
bmFtZSkgeworCQkJfQorCQkJcHVibGljIHZvaWQgc2V0VGFza05hbWUoU3RyaW5nIG5hbWUpIHsK
KwkJCX0KKwkJCXB1YmxpYyB2b2lkIHNldENhbmNlbGVkKGJvb2xlYW4gdmFsdWUpIHsKKwkJCX0K
KwkJCXB1YmxpYyBib29sZWFuIGlzQ2FuY2VsZWQoKSB7CisJCQkJcmV0dXJuIGZhbHNlOworCQkJ
fQorCQkJcHVibGljIHZvaWQgaW50ZXJuYWxXb3JrZWQoZG91YmxlIHdvcmspIHsKKwkJCX0KKwkJ
CXB1YmxpYyB2b2lkIGRvbmUoKSB7CisJCQkJdGhpcy5jb21wbGV0ZSA9IHRydWU7CisJCQl9CisJ
CQlwdWJsaWMgdm9pZCBiZWdpblRhc2soU3RyaW5nIG5hbWUsIGludCB0b3RhbFdvcmspIHsKKwkJ
CX0KKwkJfQorCQlsb25nIHRoZW4gPSBTeXN0ZW0uY3VycmVudFRpbWVNaWxsaXMoKTsKKwkJTG9j
YWxQcm9ncmVzc01vbml0b3IgbW9uaXRvciA9IG5ldyBMb2NhbFByb2dyZXNzTW9uaXRvcigpOwor
CQl0aGlzLmNvbnRleHQuZXZhbHVhdGUoCisJCQlzbmlwcGV0LAorCQkJc3RhY2tGcmFtZS5sb2Nh
bFZhcmlhYmxlVHlwZU5hbWVzKCksCisJCQlzdGFja0ZyYW1lLmxvY2FsVmFyaWFibGVOYW1lcygp
LAorCQkJc3RhY2tGcmFtZS5sb2NhbFZhcmlhYmxlTW9kaWZpZXJzKCksCisJCQlzdGFja0ZyYW1l
LmRlY2xhcmluZ1R5cGVOYW1lKCksCisJCQlzdGFja0ZyYW1lLmlzU3RhdGljKCksCisJCQlzdGFj
a0ZyYW1lLmlzQ29uc3RydWN0b3JDYWxsKCksCisJCQlnZXRFbnYoKSwKKwkJCWdldENvbXBpbGVy
T3B0aW9ucygpLAorCQkJcmVxdWVzdG9yLAorCQkJZ2V0UHJvYmxlbUZhY3RvcnkoKSwKKwkJCW1v
bml0b3IpOworCQlsb25nIG5vdyA9IFN5c3RlbS5jdXJyZW50VGltZU1pbGxpcygpOworCQl3aGls
ZSAoIW1vbml0b3IuY29tcGxldGUpIHsKKwkJCWlmIChub3cgLSB0aGVuID4gd2FpdCkgYnJlYWs7
CisJCX0KIAl9CiAJLyoqCkBAIC01NzQsNSArNjE3LDUgQEAKIAlEZWJ1Z1JlcXVlc3RvciByZXF1
ZXN0b3IgPSBuZXcgRGVidWdSZXF1ZXN0b3IoKTsKIAljaGFyW10gc25pcHBldCA9ICJkYXRlID0g
bmV3IGphdmEudXRpbC5EYXRlKCk7Ii50b0NoYXJBcnJheSgpOwotCWV2YWx1YXRlKHN0YWNrRnJh
bWUsIHJlcXVlc3Rvciwgc25pcHBldCk7CisJZXZhbHVhdGVBbmRXYWl0VG9Db21wbGV0ZShzdGFj
a0ZyYW1lLCByZXF1ZXN0b3IsIHNuaXBwZXQsIDIwMDApOwogCXJlcXVlc3RvciA9IG5ldyBEZWJ1
Z1JlcXVlc3RvcigpOwogCXVzZXJDb2RlID0gIlN5c3RlbS5vdXQucHJpbnRsbihcIm5ldyBkYXRl
ID1cdFwiICsgZGF0ZS50b1N0cmluZygpKTtcbiIgKwpAQCAtNTgwLDUgKzYyMyw1IEBACiAJCQkJ
InJldHVybiBkYXRlLmFmdGVyKGNhbC5nZXRHcmVnb3JpYW5DaGFuZ2UoKSk7IjsKIAlzbmlwcGV0
ID0gdXNlckNvZGUudG9DaGFyQXJyYXkoKTsKLQlldmFsdWF0ZShzdGFja0ZyYW1lLCByZXF1ZXN0
b3IsIHNuaXBwZXQpOworCWV2YWx1YXRlQW5kV2FpdFRvQ29tcGxldGUoc3RhY2tGcmFtZSwgcmVx
dWVzdG9yLCBzbmlwcGV0LCAxMDAwKTsKIAlhc3NlcnRUcnVlKCJTaG91bGQgZ2V0IG9uZSByZXN1
bHQgYnV0IGdvdCAiICsgcmVxdWVzdG9yLnJlc3VsdEluZGV4KzEsIHJlcXVlc3Rvci5yZXN1bHRJ
bmRleCA9PSAwKTsKIAlFdmFsdWF0aW9uUmVzdWx0IHJlc3VsdCA9IHJlcXVlc3Rvci5yZXN1bHRz
WzBdOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZXZhbC9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvZXZhbC9FdmFsdWF0aW9uQ29udGV4dC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUvZXZhbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvZXZhbC9FdmFsdWF0aW9uQ29udGV4
dC5qYXZhCmluZGV4IGI4NjhmZDIuLmE3OTBkYjYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2V2YWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2V2YWwvRXZhbHVhdGlvbkNvbnRl
eHQuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9ldmFsL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9ldmFsL0V2YWx1YXRpb25Db250ZXh0LmphdmEKQEAgLTEsNCArMSw0IEBACiAvKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jw
b3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDE0IElCTSBDb3Jw
b3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFt
IGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVu
ZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCkBAIC0yMjks
NCArMjI5LDI5IEBACiAJfQogfQorcHVibGljIHZvaWQgZXZhbHVhdGUoCisJCWNoYXJbXSBjb2Rl
U25pcHBldCwKKwkJY2hhcltdW10gY29udGV4dExvY2FsVmFyaWFibGVUeXBlTmFtZXMsCisJCWNo
YXJbXVtdIGNvbnRleHRMb2NhbFZhcmlhYmxlTmFtZXMsCisJCWludFtdIGNvbnRleHRMb2NhbFZh
cmlhYmxlTW9kaWZpZXJzLAorCQljaGFyW10gY29udGV4dERlY2xhcmluZ1R5cGVOYW1lLAorCQli
b29sZWFuIGNvbnRleHRJc1N0YXRpYywKKwkJYm9vbGVhbiBjb250ZXh0SXNDb25zdHJ1Y3RvckNh
bGwsCisJCUlOYW1lRW52aXJvbm1lbnQgZW52aXJvbm1lbnQsCisJCU1hcCBvcHRpb25zLAorCQlm
aW5hbCBJUmVxdWVzdG9yIHJlcXVlc3RvciwKKwkJSVByb2JsZW1GYWN0b3J5IHByb2JsZW1GYWN0
b3J5KSB0aHJvd3MgSW5zdGFsbEV4Y2VwdGlvbiB7CisJZXZhbHVhdGUoY29kZVNuaXBwZXQsCisJ
CQljb250ZXh0TG9jYWxWYXJpYWJsZVR5cGVOYW1lcywKKwkJCWNvbnRleHRMb2NhbFZhcmlhYmxl
TmFtZXMsCisJCQljb250ZXh0TG9jYWxWYXJpYWJsZU1vZGlmaWVycywKKwkJCWNvbnRleHREZWNs
YXJpbmdUeXBlTmFtZSwKKwkJCWNvbnRleHRJc1N0YXRpYywKKwkJCWNvbnRleHRJc0NvbnN0cnVj
dG9yQ2FsbCwKKwkJCWVudmlyb25tZW50LAorCQkJb3B0aW9ucywKKwkJCXJlcXVlc3RvciwKKwkJ
CXByb2JsZW1GYWN0b3J5LAorCQkJbnVsbCk7Cit9CiAvKioKICAqIEBzZWUgb3JnLmVjbGlwc2Uu
amR0LmNvcmUuZXZhbC5JRXZhbHVhdGlvbkNvbnRleHQKQEAgLTI0NCw1ICsyNjksNiBAQAogCU1h
cCBvcHRpb25zLAogCWZpbmFsIElSZXF1ZXN0b3IgcmVxdWVzdG9yLAotCUlQcm9ibGVtRmFjdG9y
eSBwcm9ibGVtRmFjdG9yeSkgdGhyb3dzIEluc3RhbGxFeGNlcHRpb24geworCUlQcm9ibGVtRmFj
dG9yeSBwcm9ibGVtRmFjdG9yeSwKKwlJUHJvZ3Jlc3NNb25pdG9yIHByb2dyZXNzTW9uaXRvcikg
dGhyb3dzIEluc3RhbGxFeGNlcHRpb24gewogCiAJLy8gSW5pdGlhbGlhbGl6ZSBjb250ZXh0CkBA
IC0zMDcsNCArMzMzLDUgQEAKIAkJdGhpcy5pc1N0YXRpYyA9IHRydWU7CiAJCXRoaXMuaXNDb25z
dHJ1Y3RvckNhbGwgPSBmYWxzZTsKKwkJaWYgKHByb2dyZXNzTW9uaXRvciAhPSBudWxsKSBwcm9n
cmVzc01vbml0b3IuZG9uZSgpOwogCX0KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2V2YWwvRXZhbHVhdGlvbkNv
bnRleHRXcmFwcGVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29yZS9ldmFsL0V2YWx1YXRpb25Db250ZXh0V3JhcHBlci5qYXZhCmlu
ZGV4IGUwNTc1NzguLjQzZTJhNWQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21v
ZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2V2YWwvRXZhbHVhdGlvbkNvbnRleHRX
cmFwcGVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvcmUvZXZhbC9FdmFsdWF0aW9uQ29udGV4dFdyYXBwZXIuamF2YQpAQCAt
MSw0ICsxLDQgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIw
MDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIw
MDAsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2Vy
dmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUg
bWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNl
bnNlIHYxLjAKQEAgLTIyOCw1ICsyMjgsNiBAQAogCQkJb3B0aW9ucywKIAkJCWdldEluZnJhc3Ry
dWN0dXJlRXZhbHVhdGlvblJlcXVlc3RvcihyZXF1ZXN0b3IpLAotCQkJZ2V0UHJvYmxlbUZhY3Rv
cnkoKSk7CisJCQlnZXRQcm9ibGVtRmFjdG9yeSgpLAorCQkJcHJvZ3Jlc3NNb25pdG9yKTsKIAl9
IGNhdGNoIChJbnN0YWxsRXhjZXB0aW9uIGUpIHsKIAkJaGFuZGxlSW5zdGFsbEV4Y2VwdGlvbihl
KTs=
</data>

          </attachment>
      

    </bug>

</bugzilla>