<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>385374</bug_id>
          
          <creation_ts>2012-07-18 03:44:00 -0400</creation_ts>
          <short_desc>[1.8][compiler] JSR308 style annotations on JSR335 rules</short_desc>
          <delta_ts>2012-07-19 08:31:41 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.8</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>287648</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2138344</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-07-18 03:44:24 -0400</bug_when>
    <thetext>BETA_JAVA8:

This ER is a bit forward looking: The 308 specification is silent on
whether type annotations can be applied on reference expressions. (On
lambda expressions, they can be on explicitly typed formal parameters,
but this should automatically follow since the same productions are
used for (non type-elided) lambda formal parameter list as for any
method.) However early discussions in the EG are indicative of a spec
change to allow type annotations.

We should proceed to change our grammar to allow these already so we
can wrap up the grammar work and move on. Should these be declared
illegal eventually, we could simply reject them during semantic analysis
which often results in better error messages anyways</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2138953</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-07-19 08:24:40 -0400</bug_when>
    <thetext>Fix and tests released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=d14fcf9bcec95873f54edd756055ca864aab7a2b</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2138958</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-07-19 08:31:41 -0400</bug_when>
    <thetext>Resolved.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>