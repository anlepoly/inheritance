<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>407191</bug_id>
          
          <creation_ts>2013-05-03 13:31:00 -0400</creation_ts>
          <short_desc>[1.8] Binary access support for type annotations</short_desc>
          <delta_ts>2013-08-08 04:48:03 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>392384</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Andrew Clement">aclement</reporter>
          <assigned_to name="Andrew Clement">aclement</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>jarthana</cc>
    
    <cc>markus_keller</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="58864"
          type_id="1"
          status="+"
          setter="stephan.herrmann"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2252200</commentid>
    <comment_count>0</comment_count>
    <who name="Andrew Clement">aclement</who>
    <bug_when>2013-05-03 13:31:42 -0400</bug_when>
    <thetext>Following on from bug 383624 which activates code generation for type annotations, this bug covers further work in JDT core on surfacing this information elsewhere in the compiler.

Work items (likely incomplete list), please feel free to add !

org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
- load type annotations on the types and members
- has structural change checking for annotations

BinaryTypeBinding 
- surface relevant type annotations</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2252208</commentid>
    <comment_count>1</comment_count>
      <attachid>230467</attachid>
    <who name="Andrew Clement">aclement</who>
    <bug_when>2013-05-03 13:44:42 -0400</bug_when>
    <thetext>Created attachment 230467
Initial patch for ClassFileReader changes

Basic initial patch that enables ClassFileReader to load type annotations for types, methods and fields.  It does not load anything within methods (code level type annotations) - it isn&apos;t clear that is necessary right now.

This patch should be applied after those in the jsr308 code gen bug.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2252371</commentid>
    <comment_count>2</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-05-04 07:36:10 -0400</bug_when>
    <thetext>I&apos;m much looking forward to this :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2282428</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-07-09 14:14:42 -0400</bug_when>
    <thetext>Do you consider this patch ready for review and release?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2282526</commentid>
    <comment_count>4</comment_count>
    <who name="Andrew Clement">aclement</who>
    <bug_when>2013-07-09 16:49:33 -0400</bug_when>
    <thetext>Functionally complete for what I wanted it to do but it is a bit old now. I think I need to at least modify the copyright statements *sigh*, but I probably should also verify it still applies. I&apos;ll try to get to doing that soon.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2283033</commentid>
    <comment_count>5</comment_count>
      <attachid>233332</attachid>
    <who name="Andrew Clement">aclement</who>
    <bug_when>2013-07-10 14:43:06 -0400</bug_when>
    <thetext>Created attachment 233332
Patch to implement this change

I rebased the patch on the latest BETA_JAVA8 and have fixed up the copyright messages.

I&apos;m still having a couple of issues signing the CLA with my gopivotal ID unfortunately so haven&apos;t managed that yet - but this patch seems good for review.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2283465</commentid>
    <comment_count>6</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-07-11 13:15:15 -0400</bug_when>
    <thetext>Great, I applied the patch on BETA_JAVA8 with only one glitch in CodeSnippetSkeleton.

Now the nitpicking starts :)

(1) Looking at this snippet in ClassFileReader:
	TypeAnnotationInfo[] newInfos = null;
	int newInfoCount = 0;
	newInfos = new TypeAnnotationInfo[numberOfAnnotations];
	for (int i = 0; i &lt; numberOfAnnotations; i++) {
		// With the last parameter being &apos;false&apos;, the data structure will not be flushed out
		TypeAnnotationInfo newInfo = new TypeAnnotationInfo(this.reference, this.constantPoolOffsets, readOffset, runtimeVisible, false);
		readOffset += newInfo.readOffset;
		newInfos[newInfoCount++] = newInfo;
	}
	if (this.annotations == null) {
		if (newInfoCount != newInfos.length)

I bet that the last if condition will never evaluate to true:
newInfoCount is incremented exactly numberOfAnnotations-times.
Looks like copy-paste from the more involved decodeAnnotations().

(2) In the same snippet the check (this.annotations == null) looks wrong, should
be (this.typeAnnotations == null), shouldn&apos;t it?

(3) Is there any comment stating that type annotations from method bodies are
never decoded? Maybe TypeAnnotationInfo would be a good place to mention this.

(4) For bug 392384 I will also need this in IBinaryType:
    IBinaryTypeAnnotation[] getTypeAnnotations();
do you want to add this now, or should I do when I need it?

That&apos;s it for now.

The semantics will be tested via bug 392384 :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2283592</commentid>
    <comment_count>7</comment_count>
    <who name="Andrew Clement">aclement</who>
    <bug_when>2013-07-11 15:35:30 -0400</bug_when>
    <thetext>Thanks for taking a look Stephan. Yep, some copy paste issues there!

(1) fixed
(2) fixed with test case added to check it.
(3) added
(4) I&apos;ll add it.

patch update to follow</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2283623</commentid>
    <comment_count>8</comment_count>
      <attachid>233383</attachid>
    <who name="Andrew Clement">aclement</who>
    <bug_when>2013-07-11 16:05:25 -0400</bug_when>
    <thetext>Created attachment 233383
patch that implements ClassFileReader support for type annos

New patch that addresses the previous comments</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2284791</commentid>
    <comment_count>9</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-07-16 02:15:03 -0400</bug_when>
    <thetext>Stephan, thanks for completing the review and committing when ready.

Andy, please confirm if you have been able to complete the CLA process ?
If not please outline what is the issue you are facing so we can work with
the right folks to have this taken care of.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2285683</commentid>
    <comment_count>10</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-07-17 15:22:16 -0400</bug_when>
    <thetext>The new CLA tag in bugzilla still shows a minus for Andy, so I&apos;ll just wait for
a green tick before doing a final once-over and commit.
Andy, can be please ping me, when you are cleared? TIA</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2286982</commentid>
    <comment_count>11</comment_count>
    <who name="Andrew Clement">aclement</who>
    <bug_when>2013-07-22 13:51:15 -0400</bug_when>
    <thetext>CLA signed (wooo I have a CLA tick in bugzilla)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2290813</commentid>
    <comment_count>12</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-08-01 17:22:56 -0400</bug_when>
    <thetext>Re-checked and patch looks good.

I will release after final testing.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2291352</commentid>
    <comment_count>13</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-08-04 15:34:06 -0400</bug_when>
    <thetext>Testing for bug 392384 on top of this patch was successful.

I found one bug in the type annotation foundation: bug 414384, but that is not a bug
in binary access but in the original code gen.

Other than that the foundations worked smoothly, thanks for this solid contribution!

I was going to release this but the commit hook &quot;reminded&quot; me that Andy has to sign-off:
see http://wiki.eclipse.org/Development_Resources/Contributing_via_Git#Contributing_via_Bugzilla


Andy, could you please add the required sign-off wrt the Certificate of Origin?

&lt;sigh&gt;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2291353</commentid>
    <comment_count>14</comment_count>
      <attachid>234080</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-08-04 15:35:59 -0400</bug_when>
    <thetext>Created attachment 234080
minimally adjusted patch

Actually, I did make a tiny change in the way how the new test class is registered.
So this is the patch pending for release.

Setting to resolve was wishful thinking. Re-opening until legal stuff is done.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2291354</commentid>
    <comment_count>15</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-08-04 15:40:19 -0400</bug_when>
    <thetext>And yes, when re-opening I have to make a comment</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2291629</commentid>
    <comment_count>16</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-08-05 17:08:58 -0400</bug_when>
    <thetext>I realized that the patch has significant size and therefore I filed CQ 7485.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2291951</commentid>
    <comment_count>17</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-08-06 11:32:12 -0400</bug_when>
    <thetext>(In reply to comment #13)
&gt; see
&gt; http://wiki.eclipse.org/Development_Resources/
&gt; Contributing_via_Git#Contributing_via_Bugzilla
&gt; 
&gt; 
&gt; Andy, could you please add the required sign-off wrt the Certificate of
&gt; Origin?

Andy, this is required to proceed with the CQ.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2292421</commentid>
    <comment_count>18</comment_count>
    <who name="Andrew Clement">aclement</who>
    <bug_when>2013-08-07 12:28:30 -0400</bug_when>
    <thetext>Sorry guys, too many bugzilla emails for to look through.  Here we go:

This contribution complies with http://www.eclipse.org/legal/CoO.php</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2292644</commentid>
    <comment_count>19</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-08-08 04:48:03 -0400</bug_when>
    <thetext>After approval of the CQ I released the patch for BETA_JAVA8.

I tried to maintain a clear separation:
- Andy&apos;s patch in commit 2c4adf2736a9a7ce066a42070aabd3f4b1ddf5af
- my tiny adjustment in commit 7ba9ff29fe6b05ec0a2f58eaa1f5d3e68bb11101

Unfortunately a last minute rebase-conflict with Bug 409236 and/or Bug 406973
added some noise, but the final result is exactly as intended.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>230467</attachid>
            <date>2013-05-03 13:44:00 -0400</date>
            <delta_ts>2013-07-10 14:43:06 -0400</delta_ts>
            <desc>Initial patch for ClassFileReader changes</desc>
            <filename>binarysupport.patch</filename>
            <type>text/plain</type>
            <size>65168</size>
            <attacher name="Andrew Clement">aclement</attacher>
            
              <data encoding="base64">RnJvbSA1YTMzYTUxNzlkNjM3ZjgwYjQ2MTg4MDE4YmFlNGU2YzRjYzUxM2JmIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBBbmR5IENsZW1lbnQgPGFuZHJldy5jbGVtZW50QGdtYWlsLmNv
bT4KRGF0ZTogRnJpLCAzIE1heSAyMDEzIDEwOjQwOjM3IC0wNzAwClN1YmplY3Q6IFtQQVRDSF0g
YmluYXJ5IHN1cHBvcnQKCi0tLQogLi4uL3JlZ3Jlc3Npb24vQ2xhc3NGaWxlUmVhZGVyVGVzdF8x
XzguamF2YSAgICAgICAgfCA0ODkgKysrKysrKysrKysrKysrKysrKysrCiAuLi4vY29yZS90ZXN0
cy9jb21waWxlci9yZWdyZXNzaW9uL1Rlc3RBbGwuamF2YSAgICB8ICAgNCArLQogLi4uL2NvbXBp
bGVyL2NsYXNzZm10L0NsYXNzRmlsZVJlYWRlci5qYXZhICAgICAgICAgfCAgNDYgKy0KIC4uLi9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvY2xhc3NmbXQvRmllbGRJbmZvLmphdmEgIHwgMTI4ICsrKyst
LQogLi4uL2NvbXBpbGVyL2NsYXNzZm10L0ZpZWxkSW5mb1dpdGhBbm5vdGF0aW9uLmphdmEgfCAg
MTIgKy0KIC4uLi9jbGFzc2ZtdC9GaWVsZEluZm9XaXRoVHlwZUFubm90YXRpb24uamF2YSAgICAg
IHwgIDUzICsrKwogLi4uL2pkdC9pbnRlcm5hbC9jb21waWxlci9jbGFzc2ZtdC9NZXRob2RJbmZv
LmphdmEgfCAgNDMgKy0KIC4uLi9jbGFzc2ZtdC9NZXRob2RJbmZvV2l0aFR5cGVBbm5vdGF0aW9u
cy5qYXZhICAgIHwgIDUwICsrKwogLi4uL2NvbXBpbGVyL2NsYXNzZm10L1R5cGVBbm5vdGF0aW9u
SW5mby5qYXZhICAgICAgfCAyMzQgKysrKysrKysrKwogLi4uL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9lbnYvSUJpbmFyeUZpZWxkLmphdmEgICAgfCAgMTIgKy0KIC4uLi9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvZW52L0lCaW5hcnlNZXRob2QuamF2YSAgIHwgIDEyICstCiAuLi4vY29tcGlsZXIvZW52
L0lCaW5hcnlUeXBlQW5ub3RhdGlvbi5qYXZhICAgICAgICB8ICA3NyArKysrCiAuLi4vamR0L2lu
dGVybmFsL2V2YWwvQ29kZVNuaXBwZXRTa2VsZXRvbi5qYXZhICAgICB8ICAgOSArCiAxMyBmaWxl
cyBjaGFuZ2VkLCAxMTE3IGluc2VydGlvbnMoKyksIDUyIGRlbGV0aW9ucygtKQogY3JlYXRlIG1v
ZGUgMTAwNjQ0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0NsYXNzRmlsZVJlYWRlclRl
c3RfMV84LmphdmEKIGNyZWF0ZSBtb2RlIDEwMDY0NCBvcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY2xhc3NmbXQvRmllbGRJbmZv
V2l0aFR5cGVBbm5vdGF0aW9uLmphdmEKIGNyZWF0ZSBtb2RlIDEwMDY0NCBvcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY2xhc3Nm
bXQvTWV0aG9kSW5mb1dpdGhUeXBlQW5ub3RhdGlvbnMuamF2YQogY3JlYXRlIG1vZGUgMTAwNjQ0
IG9yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9jbGFzc2ZtdC9UeXBlQW5ub3RhdGlvbkluZm8uamF2YQogY3JlYXRlIG1vZGUgMTAw
NjQ0IG9yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9lbnYvSUJpbmFyeVR5cGVBbm5vdGF0aW9uLmphdmEKCmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9DbGFzc0ZpbGVSZWFkZXJUZXN0XzFfOC5qYXZh
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pk
dC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQ2xhc3NGaWxlUmVhZGVyVGVzdF8xXzgu
amF2YQpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwLi5mNTI1NjcxCi0tLSAvZGV2
L251bGwKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQ2xhc3NGaWxlUmVhZGVy
VGVzdF8xXzguamF2YQpAQCAtMCwwICsxLDQ4OSBAQAorLyoqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioK
KyAqIENvcHlyaWdodCAoYykgMjAxMyBWTXdhcmUsIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4K
KyAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWlu
ZyBtYXRlcmlhbHMKKyAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhl
IEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAorICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBk
aXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKKyAqIGh0dHA6Ly93d3cuZWNsaXBzZS5v
cmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBv
ZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQor
ICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0
aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29t
cGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKgorICogQ29udHJp
YnV0b3JzOgorICogICAgICAgIEFuZHkgQ2xlbWVudCAtIENvbnRyaWJ1dGlvbnMgZm9yIEJ1ZyA0
MDcxOTEgLSBbMS44XSBCaW5hcnkgYWNjZXNzIHN1cHBvcnQgZm9yIHR5cGUgYW5ub3RhdGlvbnMK
KyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqLworcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5jb21waWxlci5yZWdyZXNzaW9uOworCitpbXBvcnQganVuaXQuZnJhbWV3b3JrLlRlc3Q7
CisKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5DaGFyT3BlcmF0aW9uOwor
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jbGFzc2ZtdC5DbGFzc0Zp
bGVDb25zdGFudHM7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNs
YXNzZm10LkNsYXNzRmlsZVJlYWRlcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuY29kZWdlbi5Bbm5vdGF0aW9uVGFyZ2V0VHlwZUNvbnN0YW50czsKK2ltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklCaW5hcnlBbm5vdGF0aW9uOwor
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuSUJpbmFyeUVsZW1l
bnRWYWx1ZVBhaXI7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVu
di5JQmluYXJ5RmllbGQ7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LmVudi5JQmluYXJ5TWV0aG9kOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5lbnYuSUJpbmFyeVR5cGVBbm5vdGF0aW9uOworCitwdWJsaWMgY2xhc3MgQ2xhc3NGaWxl
UmVhZGVyVGVzdF8xXzggZXh0ZW5kcyBBYnN0cmFjdFJlZ3Jlc3Npb25UZXN0IHsKKwlzdGF0aWMg
eworCX0KKworCXB1YmxpYyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsKKwkJcmV0dXJuIGJ1aWxkTWlu
aW1hbENvbXBsaWFuY2VUZXN0U3VpdGUodGVzdENsYXNzKCksIEZfMV84KTsKKwl9CisJcHVibGlj
IHN0YXRpYyBDbGFzcyB0ZXN0Q2xhc3MoKSB7CisJCXJldHVybiBDbGFzc0ZpbGVSZWFkZXJUZXN0
XzFfOC5jbGFzczsKKwl9CisKKwlwdWJsaWMgQ2xhc3NGaWxlUmVhZGVyVGVzdF8xXzgoU3RyaW5n
IG5hbWUpIHsKKwkJc3VwZXIobmFtZSk7CisJfQorCQorCS8vIE5lZWRlZCB0byBydW4gdGVzdHMg
aW5kaXZpZHVhbGx5IGZyb20gSlVuaXQKKwlwcm90ZWN0ZWQgdm9pZCBzZXRVcCgpIHRocm93cyBF
eGNlcHRpb24geworCQlzdXBlci5zZXRVcCgpOworCQl0aGlzLmNvbXBsaWFuY2VMZXZlbCA9IENs
YXNzRmlsZUNvbnN0YW50cy5KREsxXzg7CisJfQorCQorCXB1YmxpYyB2b2lkIHRlc3QwMDFfY2xh
c3NUeXBlUGFyYW1ldGVyKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCVN0cmluZyBzb3VyY2UgPQor
CQkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi4qO1xuIiArCisJCQkicHVibGljIGNsYXNz
IFg8QEZvbyBUMSxAQmFyKGlpaT05OSkgVDI+IHt9XG4iICsKKwkJCSJAUmV0ZW50aW9uKFJldGVu
dGlvblBvbGljeS5DTEFTUylcbiIgKworCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0Up
XG4iICsKKwkJCSJAaW50ZXJmYWNlIEZvbyB7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJAUmV0ZW50
aW9uKFJldGVudGlvblBvbGljeS5DTEFTUylcbiIgKworCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUu
VFlQRV9VU0UpXG4iICsKKwkJCSJAaW50ZXJmYWNlIEJhciB7XG4iICsKKwkJCSIgICAgICAgIGlu
dCBpaWkoKSBkZWZhdWx0IC0xO1xuIiArCisJCQkifSI7CisKKwkJb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmNsYXNzZm10LkNsYXNzRmlsZVJlYWRlciBjbGFzc0ZpbGVSZWFkZXIg
PSBnZXRJbnRlcm5hbENsYXNzRmlsZSgiIiwgIlgiLCAiWCIsIHNvdXJjZSk7CisJCQorCQlJQmlu
YXJ5VHlwZUFubm90YXRpb25bXSB0eXBlQW5ub3RhdGlvbnMgPSBjbGFzc0ZpbGVSZWFkZXIuZ2V0
VHlwZUFubm90YXRpb25zKCk7CisJCWFzc2VydEVxdWFscygyLHR5cGVBbm5vdGF0aW9ucy5sZW5n
dGgpOworCQkKKwkJYXNzZXJ0RXF1YWxzKCJATEZvbzsgQ0xBU1NfVFlQRV9QQVJBTUVURVIodHlw
ZV9wYXJhbWV0ZXJfaW5kZXg9MCkiLCBwcmludFR5cGVBbm5vdGF0aW9uKHR5cGVBbm5vdGF0aW9u
c1swXSkpOworCQlhc3NlcnRFcXVhbHMoIkBMQmFyOyhpaWk9KGludCk5OSkgQ0xBU1NfVFlQRV9Q
QVJBTUVURVIodHlwZV9wYXJhbWV0ZXJfaW5kZXg9MSkiLCBwcmludFR5cGVBbm5vdGF0aW9uKHR5
cGVBbm5vdGF0aW9uc1sxXSkpOworCX0KKwkKKwlwdWJsaWMgdm9pZCB0ZXN0MDAyX21ldGhvZFR5
cGVQYXJhbWV0ZXIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwkJU3RyaW5nIHNvdXJjZSA9CisJCQki
aW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLio7XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7
XG4iICsKKwkJCSIJPEBGb28gVDEsIEBCYXIoMykgVDI+IHZvaWQgZm9vKFQxIHQxLFQyIHQyKSB7
fVxuIiArIAorCQkJIn1cbiIgKworCQkJIkBSZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LkNMQVNT
KVxuIiArCisJCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKworCQkJIkBpbnRl
cmZhY2UgRm9vIHtcbiIgKworCQkJIn1cbiIgKworCQkJIkBSZXRlbnRpb24oUmV0ZW50aW9uUG9s
aWN5LkNMQVNTKVxuIiArCisJCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKwor
CQkJIkBpbnRlcmZhY2UgQmFyIHtcbiIgKworCQkJIiAgICAgICAgaW50IHZhbHVlKCkgZGVmYXVs
dCAtMTtcbiIgKworCQkJIn0iOworCisJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci5jbGFzc2ZtdC5DbGFzc0ZpbGVSZWFkZXIgY2ZyID0gZ2V0SW50ZXJuYWxDbGFzc0ZpbGUoIiIs
ICJYIiwgIlgiLCBzb3VyY2UpOworCQkKKwkJSUJpbmFyeU1ldGhvZCBtZXRob2QgPSBnZXRNZXRo
b2QoY2ZyLCJmb28iKTsKKwkJYXNzZXJ0Tm90TnVsbChtZXRob2QpOworCQlJQmluYXJ5VHlwZUFu
bm90YXRpb25bXSB0eXBlQW5ub3RhdGlvbnMgPSBtZXRob2QuZ2V0VHlwZUFubm90YXRpb25zKCk7
CisJCWFzc2VydE5vdE51bGwodHlwZUFubm90YXRpb25zKTsKKwkJYXNzZXJ0RXF1YWxzKDIsdHlw
ZUFubm90YXRpb25zLmxlbmd0aCk7CisJCWFzc2VydEVxdWFscygiQExGb287IE1FVEhPRF9UWVBF
X1BBUkFNRVRFUih0eXBlX3BhcmFtZXRlcl9pbmRleD0wKSIscHJpbnRUeXBlQW5ub3RhdGlvbih0
eXBlQW5ub3RhdGlvbnNbMF0pKTsKKwkJYXNzZXJ0RXF1YWxzKCJATEJhcjsodmFsdWU9KGludCkz
KSBNRVRIT0RfVFlQRV9QQVJBTUVURVIodHlwZV9wYXJhbWV0ZXJfaW5kZXg9MSkiLHByaW50VHlw
ZUFubm90YXRpb24odHlwZUFubm90YXRpb25zWzFdKSk7CisJfQorCQorCXB1YmxpYyB2b2lkIHRl
c3QwMDNfY2xhc3NFeHRlbmRzKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCXRoaXMuY29tcGxpYW5j
ZUxldmVsID0gQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfODsKKwkJU3RyaW5nIHNvdXJjZSA9CisJ
CQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLio7XG4iICsKKwkJCSJwdWJsaWMgY2xhc3Mg
WCBleHRlbmRzIEBGb28gQEJhcihpaWk9MzQpIE9iamVjdCBpbXBsZW1lbnRzIGphdmEuaW8uQEJh
cihpaWk9MSkgU2VyaWFsaXphYmxlIHtcbiIgKworCQkJIn1cbiIgKworCQkJIkBSZXRlbnRpb24o
UmV0ZW50aW9uUG9saWN5LkNMQVNTKVxuIiArCisJCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBF
X1VTRSlcbiIgKworCQkJIkBpbnRlcmZhY2UgRm9vIHtcbiIgKworCQkJIn1cbiIgKworCQkJIkBS
ZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LkNMQVNTKVxuIiArCisJCQkiQFRhcmdldChFbGVtZW50
VHlwZS5UWVBFX1VTRSlcbiIgKworCQkJIkBpbnRlcmZhY2UgQmFyIHtcbiIgKworCQkJIiAgICAg
ICAgaW50IGlpaSgpIGRlZmF1bHQgLTE7XG4iICsKKwkJCSJ9IjsKKworCQlvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIuY2xhc3NmbXQuQ2xhc3NGaWxlUmVhZGVyIGNsYXNzRmlsZVJl
YWRlciA9IGdldEludGVybmFsQ2xhc3NGaWxlKCIiLCAiWCIsICJYIiwgc291cmNlKTsKKwkJCisJ
CUlCaW5hcnlUeXBlQW5ub3RhdGlvbltdIHR5cGVBbm5vdGF0aW9ucyA9IGNsYXNzRmlsZVJlYWRl
ci5nZXRUeXBlQW5ub3RhdGlvbnMoKTsKKwkJYXNzZXJ0RXF1YWxzKDMsdHlwZUFubm90YXRpb25z
Lmxlbmd0aCk7CisJCWFzc2VydEVxdWFscygiQExGb287IENMQVNTX0VYVEVORFModHlwZV9pbmRl
eD0tMSkiLCBwcmludFR5cGVBbm5vdGF0aW9uKHR5cGVBbm5vdGF0aW9uc1swXSkpOworCQlhc3Nl
cnRFcXVhbHMoIkBMQmFyOyhpaWk9KGludCkzNCkgQ0xBU1NfRVhURU5EUyh0eXBlX2luZGV4PS0x
KSIsIHByaW50VHlwZUFubm90YXRpb24odHlwZUFubm90YXRpb25zWzFdKSk7CisJCWFzc2VydEVx
dWFscygiQExCYXI7KGlpaT0oaW50KTEpIENMQVNTX0VYVEVORFModHlwZV9pbmRleD0wKSIsIHBy
aW50VHlwZUFubm90YXRpb24odHlwZUFubm90YXRpb25zWzJdKSk7CisJfQorCisJcHVibGljIHZv
aWQgdGVzdDAwNF9jbGFzc0V4dGVuZHMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwkJU3RyaW5nIHNv
dXJjZSA9CisJCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLio7XG4iICsKKwkJCSJwdWJs
aWMgY2xhc3MgWCBleHRlbmRzIFk8QEZvbyBTdHJpbmcsQEJhciBJbnRlZ2VyPiBpbXBsZW1lbnRz
IEk8QEZvbyBTdHJpbmc+IHtcbiIgKworCQkJIn1cbiIgKworCQkJImNsYXNzIFk8VDEsIFQyPiB7
fVxuIiArCisJCQkiaW50ZXJmYWNlIEk8VDE+IHt9XG4iICsKKwkJCSJAUmV0ZW50aW9uKFJldGVu
dGlvblBvbGljeS5DTEFTUylcbiIgKworCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0Up
XG4iICsKKwkJCSJAaW50ZXJmYWNlIEZvbyB7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJAUmV0ZW50
aW9uKFJldGVudGlvblBvbGljeS5DTEFTUylcbiIgKworCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUu
VFlQRV9VU0UpXG4iICsKKwkJCSJAaW50ZXJmYWNlIEJhciB7XG4iICsKKwkJCSIgICAgICAgIGlu
dCBpaWkoKSBkZWZhdWx0IC0xO1xuIiArCisJCQkifSI7CisKKwkJb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmNsYXNzZm10LkNsYXNzRmlsZVJlYWRlciBjbGFzc0ZpbGVSZWFkZXIg
PSBnZXRJbnRlcm5hbENsYXNzRmlsZSgiIiwgIlgiLCAiWCIsIHNvdXJjZSk7CisJCQorCQlJQmlu
YXJ5VHlwZUFubm90YXRpb25bXSB0eXBlQW5ub3RhdGlvbnMgPSBjbGFzc0ZpbGVSZWFkZXIuZ2V0
VHlwZUFubm90YXRpb25zKCk7CisJCWFzc2VydEVxdWFscygzLHR5cGVBbm5vdGF0aW9ucy5sZW5n
dGgpOworCQlhc3NlcnRFcXVhbHMoIkBMRm9vOyBDTEFTU19FWFRFTkRTKHR5cGVfaW5kZXg9LTEp
LCBsb2NhdGlvbj1bVFlQRV9BUkdVTUVOVCgwKV0iLCBwcmludFR5cGVBbm5vdGF0aW9uKHR5cGVB
bm5vdGF0aW9uc1swXSkpOworCQlhc3NlcnRFcXVhbHMoIkBMQmFyOyBDTEFTU19FWFRFTkRTKHR5
cGVfaW5kZXg9LTEpLCBsb2NhdGlvbj1bVFlQRV9BUkdVTUVOVCgxKV0iLCBwcmludFR5cGVBbm5v
dGF0aW9uKHR5cGVBbm5vdGF0aW9uc1sxXSkpOworCQlhc3NlcnRFcXVhbHMoIkBMRm9vOyBDTEFT
U19FWFRFTkRTKHR5cGVfaW5kZXg9MCksIGxvY2F0aW9uPVtUWVBFX0FSR1VNRU5UKDApXSIsIHBy
aW50VHlwZUFubm90YXRpb24odHlwZUFubm90YXRpb25zWzJdKSk7CisJfQorCQorCXB1YmxpYyB2
b2lkIHRlc3QwMDVfY2xhc3NUeXBlUGFyYW1ldGVyQm91bmQoKSB0aHJvd3MgRXhjZXB0aW9uIHsK
KwkJU3RyaW5nIHNvdXJjZSA9CisJCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLio7XG4i
ICsKKwkJCSJwdWJsaWMgY2xhc3MgWDxVLCBUIGV4dGVuZHMgWTxARm9vIFN0cmluZyBAQmFyKDEp
W11bXUBCYXIoMilbXT4gJiBAQmFyKDMpIENsb25lYWJsZT4ge31cbiIgKworCQkJImNsYXNzIFk8
VD4ge31cbiIgKworCQkJIkBSZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LkNMQVNTKVxuIiArCisJ
CQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKworCQkJIkBpbnRlcmZhY2UgRm9v
IHtcbiIgKworCQkJIn1cbiIgKworCQkJIkBSZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LkNMQVNT
KVxuIiArCisJCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKworCQkJIkBpbnRl
cmZhY2UgQmFyIHtcbiIgKworCQkJIiAgICAgICAgaW50IHZhbHVlKCkgZGVmYXVsdCAtMTtcbiIg
KworCQkJIn0iOworCisJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jbGFzc2Zt
dC5DbGFzc0ZpbGVSZWFkZXIgY2xhc3NGaWxlUmVhZGVyID0gZ2V0SW50ZXJuYWxDbGFzc0ZpbGUo
IiIsICJYIiwgIlgiLCBzb3VyY2UpOworCQkKKwkJSUJpbmFyeVR5cGVBbm5vdGF0aW9uW10gdHlw
ZUFubm90YXRpb25zID0gY2xhc3NGaWxlUmVhZGVyLmdldFR5cGVBbm5vdGF0aW9ucygpOworCQlh
c3NlcnRFcXVhbHMoNCx0eXBlQW5ub3RhdGlvbnMubGVuZ3RoKTsKKwkJYXNzZXJ0RXF1YWxzKCJA
TEZvbzsgQ0xBU1NfVFlQRV9QQVJBTUVURVJfQk9VTkQodHlwZV9wYXJhbWV0ZXJfaW5kZXg9MSwg
Ym91bmRfaW5kZXg9MCksIGxvY2F0aW9uPVtUWVBFX0FSR1VNRU5UKDApLCBBUlJBWSwgQVJSQVks
IEFSUkFZXSIsIHByaW50VHlwZUFubm90YXRpb24odHlwZUFubm90YXRpb25zWzBdKSk7CisJCWFz
c2VydEVxdWFscygiQExCYXI7KHZhbHVlPShpbnQpMSkgQ0xBU1NfVFlQRV9QQVJBTUVURVJfQk9V
TkQodHlwZV9wYXJhbWV0ZXJfaW5kZXg9MSwgYm91bmRfaW5kZXg9MCksIGxvY2F0aW9uPVtUWVBF
X0FSR1VNRU5UKDApXSIsIHByaW50VHlwZUFubm90YXRpb24odHlwZUFubm90YXRpb25zWzFdKSk7
CisJCWFzc2VydEVxdWFscygiQExCYXI7KHZhbHVlPShpbnQpMikgQ0xBU1NfVFlQRV9QQVJBTUVU
RVJfQk9VTkQodHlwZV9wYXJhbWV0ZXJfaW5kZXg9MSwgYm91bmRfaW5kZXg9MCksIGxvY2F0aW9u
PVtUWVBFX0FSR1VNRU5UKDApLCBBUlJBWSwgQVJSQVldIiwgcHJpbnRUeXBlQW5ub3RhdGlvbih0
eXBlQW5ub3RhdGlvbnNbMl0pKTsKKwkJYXNzZXJ0RXF1YWxzKCJATEJhcjsodmFsdWU9KGludCkz
KSBDTEFTU19UWVBFX1BBUkFNRVRFUl9CT1VORCh0eXBlX3BhcmFtZXRlcl9pbmRleD0xLCBib3Vu
ZF9pbmRleD0xKSIsIHByaW50VHlwZUFubm90YXRpb24odHlwZUFubm90YXRpb25zWzNdKSk7CisJ
fQorCQorCXB1YmxpYyB2b2lkIHRlc3QwMDZfbWV0aG9kVHlwZVBhcmFtZXRlckJvdW5kKCkgdGhy
b3dzIEV4Y2VwdGlvbiB7CisJCVN0cmluZyBzb3VyY2UgPQorCQkJImltcG9ydCBqYXZhLmxhbmcu
YW5ub3RhdGlvbi4qO1xuIiArCisJCQkicHVibGljIGNsYXNzIFh7XG4iICsKKwkJCSIJPFQgZXh0
ZW5kcyBZPEBGb28gWiBAQmFyKDEpW11bXUBCYXIoMilbXT4gJiBAQmFyKDMpIENsb25lYWJsZT4g
dm9pZCBmb28oVCB0KSB7fVxuIiArCisJCQkifVxuIiArCisJCQkiY2xhc3MgWTxUPiB7fVxuIiAr
CisJCQkiY2xhc3MgWiB7fVxuIiArCisJCQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3kuQ0xB
U1MpXG4iICsKKwkJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCQkiQGlu
dGVyZmFjZSBGb28ge1xuIiArCisJCQkifVxuIiArCisJCQkiQFJldGVudGlvbihSZXRlbnRpb25Q
b2xpY3kuQ0xBU1MpXG4iICsKKwkJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiAr
CisJCQkiQGludGVyZmFjZSBCYXIge1xuIiArCisJCQkiICAgICAgICBpbnQgdmFsdWUoKSBkZWZh
dWx0IC0xO1xuIiArCisJCQkifSI7CisKKwkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLmNsYXNzZm10LkNsYXNzRmlsZVJlYWRlciBjZnIgPSBnZXRJbnRlcm5hbENsYXNzRmlsZSgi
IiwgIlgiLCAiWCIsIHNvdXJjZSk7CisKKwkJSUJpbmFyeU1ldGhvZCBtZXRob2QgPSBnZXRNZXRo
b2QoY2ZyLCJmb28iKTsKKwkJYXNzZXJ0Tm90TnVsbChtZXRob2QpOworCQlJQmluYXJ5VHlwZUFu
bm90YXRpb25bXSB0eXBlQW5ub3RhdGlvbnMgPSBtZXRob2QuZ2V0VHlwZUFubm90YXRpb25zKCk7
CisJCWFzc2VydE5vdE51bGwodHlwZUFubm90YXRpb25zKTsKKwkJYXNzZXJ0RXF1YWxzKDQsdHlw
ZUFubm90YXRpb25zLmxlbmd0aCk7CisJCWFzc2VydEVxdWFscygiQExGb287IE1FVEhPRF9UWVBF
X1BBUkFNRVRFUl9CT1VORCh0eXBlX3BhcmFtZXRlcl9pbmRleD0wLCBib3VuZF9pbmRleD0wKSwg
bG9jYXRpb249W1RZUEVfQVJHVU1FTlQoMCksIEFSUkFZLCBBUlJBWSwgQVJSQVldIixwcmludFR5
cGVBbm5vdGF0aW9uKHR5cGVBbm5vdGF0aW9uc1swXSkpOworCQlhc3NlcnRFcXVhbHMoIkBMQmFy
Oyh2YWx1ZT0oaW50KTEpIE1FVEhPRF9UWVBFX1BBUkFNRVRFUl9CT1VORCh0eXBlX3BhcmFtZXRl
cl9pbmRleD0wLCBib3VuZF9pbmRleD0wKSwgbG9jYXRpb249W1RZUEVfQVJHVU1FTlQoMCldIiwg
cHJpbnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlvbnNbMV0pKTsKKwkJYXNzZXJ0RXF1YWxz
KCJATEJhcjsodmFsdWU9KGludCkyKSBNRVRIT0RfVFlQRV9QQVJBTUVURVJfQk9VTkQodHlwZV9w
YXJhbWV0ZXJfaW5kZXg9MCwgYm91bmRfaW5kZXg9MCksIGxvY2F0aW9uPVtUWVBFX0FSR1VNRU5U
KDApLCBBUlJBWSwgQVJSQVldIiwgcHJpbnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlvbnNb
Ml0pKTsKKwkJYXNzZXJ0RXF1YWxzKCJATEJhcjsodmFsdWU9KGludCkzKSBNRVRIT0RfVFlQRV9Q
QVJBTUVURVJfQk9VTkQodHlwZV9wYXJhbWV0ZXJfaW5kZXg9MCwgYm91bmRfaW5kZXg9MSkiLCBw
cmludFR5cGVBbm5vdGF0aW9uKHR5cGVBbm5vdGF0aW9uc1szXSkpOworCX0KKwkKKwlwdWJsaWMg
dm9pZCB0ZXN0MDA3X2ZpZWxkKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCVN0cmluZyBzb3VyY2Ug
PQorCQkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi4qO1xuIiArCisJCQkiaW1wb3J0IGph
dmEudXRpbC5NYXA7XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWHtcbiIgKworCQkJIglARm9vIE1h
cDxAQmFyKDEpIFN0cmluZywgQEJhcigyKSBTdHJpbmcgQEJhcigzKVtdIEBCYXIoNClbXSBAQmFy
KDUpW10+IGZpZWxkMztcbiIgKworCQkJIn1cbiIgKworCQkJImNsYXNzIFk8VD4ge31cbiIgKwor
CQkJImNsYXNzIFoge31cbiIgKworCQkJIkBSZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LkNMQVNT
KVxuIiArCisJCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKworCQkJIkBpbnRl
cmZhY2UgRm9vIHtcbiIgKworCQkJIn1cbiIgKworCQkJIkBSZXRlbnRpb24oUmV0ZW50aW9uUG9s
aWN5LkNMQVNTKVxuIiArCisJCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKwor
CQkJIkBpbnRlcmZhY2UgQmFyIHtcbiIgKworCQkJIiAgICAgICAgaW50IHZhbHVlKCkgZGVmYXVs
dCAtMTtcbiIgKworCQkJIn0iOworCisJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci5jbGFzc2ZtdC5DbGFzc0ZpbGVSZWFkZXIgY2ZyID0gZ2V0SW50ZXJuYWxDbGFzc0ZpbGUoIiIs
ICJYIiwgIlgiLCBzb3VyY2UpOworCisJCUlCaW5hcnlGaWVsZCBmaWVsZCA9IGdldEZpZWxkKGNm
ciwiZmllbGQzIik7CisJCWFzc2VydE5vdE51bGwoZmllbGQpOworCQlJQmluYXJ5VHlwZUFubm90
YXRpb25bXSB0eXBlQW5ub3RhdGlvbnMgPSBmaWVsZC5nZXRUeXBlQW5ub3RhdGlvbnMoKTsKKwkJ
YXNzZXJ0Tm90TnVsbCh0eXBlQW5ub3RhdGlvbnMpOworCQlhc3NlcnRFcXVhbHMoNix0eXBlQW5u
b3RhdGlvbnMubGVuZ3RoKTsKKwkJYXNzZXJ0RXF1YWxzKCJATEZvbzsgRklFTEQiLHByaW50VHlw
ZUFubm90YXRpb24odHlwZUFubm90YXRpb25zWzBdKSk7CisJCWFzc2VydEVxdWFscygiQExCYXI7
KHZhbHVlPShpbnQpMSkgRklFTEQsIGxvY2F0aW9uPVtUWVBFX0FSR1VNRU5UKDApXSIsIHByaW50
VHlwZUFubm90YXRpb24odHlwZUFubm90YXRpb25zWzFdKSk7CisJCWFzc2VydEVxdWFscygiQExC
YXI7KHZhbHVlPShpbnQpMikgRklFTEQsIGxvY2F0aW9uPVtUWVBFX0FSR1VNRU5UKDEpLCBBUlJB
WSwgQVJSQVksIEFSUkFZXSIsIHByaW50VHlwZUFubm90YXRpb24odHlwZUFubm90YXRpb25zWzJd
KSk7CisJCWFzc2VydEVxdWFscygiQExCYXI7KHZhbHVlPShpbnQpMykgRklFTEQsIGxvY2F0aW9u
PVtUWVBFX0FSR1VNRU5UKDEpXSIsIHByaW50VHlwZUFubm90YXRpb24odHlwZUFubm90YXRpb25z
WzNdKSk7CisJCWFzc2VydEVxdWFscygiQExCYXI7KHZhbHVlPShpbnQpNCkgRklFTEQsIGxvY2F0
aW9uPVtUWVBFX0FSR1VNRU5UKDEpLCBBUlJBWV0iLCBwcmludFR5cGVBbm5vdGF0aW9uKHR5cGVB
bm5vdGF0aW9uc1s0XSkpOworCQlhc3NlcnRFcXVhbHMoIkBMQmFyOyh2YWx1ZT0oaW50KTUpIEZJ
RUxELCBsb2NhdGlvbj1bVFlQRV9BUkdVTUVOVCgxKSwgQVJSQVksIEFSUkFZXSIsIHByaW50VHlw
ZUFubm90YXRpb24odHlwZUFubm90YXRpb25zWzVdKSk7CisJfQorCQorCXB1YmxpYyB2b2lkIHRl
c3QwMDhfbWV0aG9kUmV0dXJuKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCVN0cmluZyBzb3VyY2Ug
PQorCQkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi4qO1xuIiArCisJCQkiaW1wb3J0IGph
dmEudXRpbC5NYXA7XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWHtcbiIgKworCQkJIglAQmFyKDMp
IEBGb28gaW50IGZvbygpIHtcbiIgKworCQkJIgkJcmV0dXJuIDE7XG4iICsKKwkJCSIJfVxuIiAr
IAorCQkJIglAQmFyKDMpIGludCBARm9vIFtdIGZvbzIoKSB7XG4iICsKKwkJCSIJCXJldHVybiBu
dWxsO1xuIiArCisJCQkiCX1cbiIgKyAKKwkJCSJ9XG4iICsKKwkJCSJAUmV0ZW50aW9uKFJldGVu
dGlvblBvbGljeS5DTEFTUylcbiIgKworCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0Up
XG4iICsKKwkJCSJAaW50ZXJmYWNlIEZvbyB7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJAUmV0ZW50
aW9uKFJldGVudGlvblBvbGljeS5DTEFTUylcbiIgKworCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUu
VFlQRV9VU0UpXG4iICsKKwkJCSJAaW50ZXJmYWNlIEJhciB7XG4iICsKKwkJCSIgICAgICAgIGlu
dCB2YWx1ZSgpIGRlZmF1bHQgLTE7XG4iICsKKwkJCSJ9IjsKKworCQlvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29tcGlsZXIuY2xhc3NmbXQuQ2xhc3NGaWxlUmVhZGVyIGNmciA9IGdldEludGVy
bmFsQ2xhc3NGaWxlKCIiLCAiWCIsICJYIiwgc291cmNlKTsKKworCQlJQmluYXJ5TWV0aG9kIG1l
dGhvZCA9IGdldE1ldGhvZChjZnIsImZvbyIpOworCQlhc3NlcnROb3ROdWxsKG1ldGhvZCk7CisJ
CUlCaW5hcnlUeXBlQW5ub3RhdGlvbltdIHR5cGVBbm5vdGF0aW9ucyA9IG1ldGhvZC5nZXRUeXBl
QW5ub3RhdGlvbnMoKTsKKwkJYXNzZXJ0Tm90TnVsbCh0eXBlQW5ub3RhdGlvbnMpOworCQlhc3Nl
cnRFcXVhbHMoMix0eXBlQW5ub3RhdGlvbnMubGVuZ3RoKTsKKwkJYXNzZXJ0RXF1YWxzKCJATEJh
cjsodmFsdWU9KGludCkzKSBNRVRIT0RfUkVUVVJOIixwcmludFR5cGVBbm5vdGF0aW9uKHR5cGVB
bm5vdGF0aW9uc1swXSkpOworCQlhc3NlcnRFcXVhbHMoIkBMRm9vOyBNRVRIT0RfUkVUVVJOIiwg
cHJpbnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlvbnNbMV0pKTsKKwkJCisJCW1ldGhvZCA9
IGdldE1ldGhvZChjZnIsImZvbzIiKTsKKwkJYXNzZXJ0Tm90TnVsbChtZXRob2QpOworCQl0eXBl
QW5ub3RhdGlvbnMgPSBtZXRob2QuZ2V0VHlwZUFubm90YXRpb25zKCk7CisJCWFzc2VydE5vdE51
bGwodHlwZUFubm90YXRpb25zKTsKKwkJYXNzZXJ0RXF1YWxzKDIsdHlwZUFubm90YXRpb25zLmxl
bmd0aCk7CisJCWFzc2VydEVxdWFscygiQExCYXI7KHZhbHVlPShpbnQpMykgTUVUSE9EX1JFVFVS
TiwgbG9jYXRpb249W0FSUkFZXSIscHJpbnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlvbnNb
MF0pKTsKKwkJYXNzZXJ0RXF1YWxzKCJATEZvbzsgTUVUSE9EX1JFVFVSTiIsIHByaW50VHlwZUFu
bm90YXRpb24odHlwZUFubm90YXRpb25zWzFdKSk7CisJfQorCQorCXB1YmxpYyB2b2lkIHRlc3Qw
MDlfbWV0aG9kUmVjZWl2ZXIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwkJU3RyaW5nIHNvdXJjZSA9
CisJCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLio7XG4iICsKKwkJCSJpbXBvcnQgamF2
YS51dGlsLk1hcDtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYe1xuIiArCisJCQkiCXZvaWQgZm9v
KEBCYXIoMykgWCB0aGlzKSB7fVxuIiArIAorCQkJIn1cbiIgKworCQkJIkBSZXRlbnRpb24oUmV0
ZW50aW9uUG9saWN5LkNMQVNTKVxuIiArCisJCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VT
RSlcbiIgKworCQkJIkBpbnRlcmZhY2UgRm9vIHtcbiIgKworCQkJIn1cbiIgKworCQkJIkBSZXRl
bnRpb24oUmV0ZW50aW9uUG9saWN5LkNMQVNTKVxuIiArCisJCQkiQFRhcmdldChFbGVtZW50VHlw
ZS5UWVBFX1VTRSlcbiIgKworCQkJIkBpbnRlcmZhY2UgQmFyIHtcbiIgKworCQkJIiAgICAgICAg
aW50IHZhbHVlKCkgZGVmYXVsdCAtMTtcbiIgKworCQkJIn0iOworCisJCW9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5jbGFzc2ZtdC5DbGFzc0ZpbGVSZWFkZXIgY2ZyID0gZ2V0SW50
ZXJuYWxDbGFzc0ZpbGUoIiIsICJYIiwgIlgiLCBzb3VyY2UpOworCisJCUlCaW5hcnlNZXRob2Qg
bWV0aG9kID0gZ2V0TWV0aG9kKGNmciwiZm9vIik7CisJCWFzc2VydE5vdE51bGwobWV0aG9kKTsK
KwkJSUJpbmFyeVR5cGVBbm5vdGF0aW9uW10gdHlwZUFubm90YXRpb25zID0gbWV0aG9kLmdldFR5
cGVBbm5vdGF0aW9ucygpOworCQlhc3NlcnROb3ROdWxsKHR5cGVBbm5vdGF0aW9ucyk7CisJCWFz
c2VydEVxdWFscygxLHR5cGVBbm5vdGF0aW9ucy5sZW5ndGgpOworCQlhc3NlcnRFcXVhbHMoIkBM
QmFyOyh2YWx1ZT0oaW50KTMpIE1FVEhPRF9SRUNFSVZFUiIsIHByaW50VHlwZUFubm90YXRpb24o
dHlwZUFubm90YXRpb25zWzBdKSk7CisJfQorCQorCXB1YmxpYyB2b2lkIHRlc3QwMTBfbWV0aG9k
Rm9ybWFsUGFyYW1ldGVyKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCVN0cmluZyBzb3VyY2UgPQor
CQkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi4qO1xuIiArCisJCQkiaW1wb3J0IGphdmEu
dXRpbC5NYXA7XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWHtcbiIgKworCQkJIgl2b2lkIGZvbyhA
QmFyKDMpIFN0cmluZyBzLCBARm9vIGludCBpKSB7fVxuIiArIAorCQkJIn1cbiIgKworCQkJIkBS
ZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LkNMQVNTKVxuIiArCisJCQkiQFRhcmdldChFbGVtZW50
VHlwZS5UWVBFX1VTRSlcbiIgKworCQkJIkBpbnRlcmZhY2UgRm9vIHtcbiIgKworCQkJIn1cbiIg
KworCQkJIkBSZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LkNMQVNTKVxuIiArCisJCQkiQFRhcmdl
dChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKworCQkJIkBpbnRlcmZhY2UgQmFyIHtcbiIgKwor
CQkJIiAgICAgICAgaW50IHZhbHVlKCkgZGVmYXVsdCAtMTtcbiIgKworCQkJIn0iOworCisJCW9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jbGFzc2ZtdC5DbGFzc0ZpbGVSZWFkZXIg
Y2ZyID0gZ2V0SW50ZXJuYWxDbGFzc0ZpbGUoIiIsICJYIiwgIlgiLCBzb3VyY2UpOworCisJCUlC
aW5hcnlNZXRob2QgbWV0aG9kID0gZ2V0TWV0aG9kKGNmciwiZm9vIik7CisJCWFzc2VydE5vdE51
bGwobWV0aG9kKTsKKwkJSUJpbmFyeVR5cGVBbm5vdGF0aW9uW10gdHlwZUFubm90YXRpb25zID0g
bWV0aG9kLmdldFR5cGVBbm5vdGF0aW9ucygpOworCQlhc3NlcnROb3ROdWxsKHR5cGVBbm5vdGF0
aW9ucyk7CisJCWFzc2VydEVxdWFscygyLHR5cGVBbm5vdGF0aW9ucy5sZW5ndGgpOworCQlhc3Nl
cnRFcXVhbHMoIkBMQmFyOyh2YWx1ZT0oaW50KTMpIE1FVEhPRF9GT1JNQUxfUEFSQU1FVEVSKG1l
dGhvZF9mb3JtYWxfcGFyYW1ldGVyX2luZGV4PTApIixwcmludFR5cGVBbm5vdGF0aW9uKHR5cGVB
bm5vdGF0aW9uc1swXSkpOworCQlhc3NlcnRFcXVhbHMoIkBMRm9vOyBNRVRIT0RfRk9STUFMX1BB
UkFNRVRFUihtZXRob2RfZm9ybWFsX3BhcmFtZXRlcl9pbmRleD0xKSIscHJpbnRUeXBlQW5ub3Rh
dGlvbih0eXBlQW5ub3RhdGlvbnNbMV0pKTsKKwl9CisJCisJcHVibGljIHZvaWQgdGVzdDAxMV90
aHJvd3MoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwkJU3RyaW5nIHNvdXJjZSA9CisJCQkiaW1wb3J0
IGphdmEubGFuZy5hbm5vdGF0aW9uLio7XG4iICsKKwkJCSJpbXBvcnQgamF2YS51dGlsLk1hcDtc
biIgKworCQkJInB1YmxpYyBjbGFzcyBYe1xuIiArCisJCQkiCXZvaWQgZm9vKCkgdGhyb3dzIEBG
b28gRXhjZXB0aW9uLCBAQmFyKDEpIFRocm93YWJsZSB7fVxuIiArIAorCQkJIn1cbiIgKworCQkJ
IkBSZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LkNMQVNTKVxuIiArCisJCQkiQFRhcmdldChFbGVt
ZW50VHlwZS5UWVBFX1VTRSlcbiIgKworCQkJIkBpbnRlcmZhY2UgRm9vIHtcbiIgKworCQkJIn1c
biIgKworCQkJIkBSZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LkNMQVNTKVxuIiArCisJCQkiQFRh
cmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKworCQkJIkBpbnRlcmZhY2UgQmFyIHtcbiIg
KworCQkJIiAgICAgICAgaW50IHZhbHVlKCkgZGVmYXVsdCAtMTtcbiIgKworCQkJIn0iOworCisJ
CW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jbGFzc2ZtdC5DbGFzc0ZpbGVSZWFk
ZXIgY2ZyID0gZ2V0SW50ZXJuYWxDbGFzc0ZpbGUoIiIsICJYIiwgIlgiLCBzb3VyY2UpOworCisJ
CUlCaW5hcnlNZXRob2QgbWV0aG9kID0gZ2V0TWV0aG9kKGNmciwiZm9vIik7CisJCWFzc2VydE5v
dE51bGwobWV0aG9kKTsKKwkJSUJpbmFyeVR5cGVBbm5vdGF0aW9uW10gdHlwZUFubm90YXRpb25z
ID0gbWV0aG9kLmdldFR5cGVBbm5vdGF0aW9ucygpOworCQlhc3NlcnROb3ROdWxsKHR5cGVBbm5v
dGF0aW9ucyk7CisJCWFzc2VydEVxdWFscygyLHR5cGVBbm5vdGF0aW9ucy5sZW5ndGgpOworCQlh
c3NlcnRFcXVhbHMoIkBMRm9vOyBUSFJPV1ModGhyb3dzX3R5cGVfaW5kZXg9MCkiLHByaW50VHlw
ZUFubm90YXRpb24odHlwZUFubm90YXRpb25zWzBdKSk7CisJCWFzc2VydEVxdWFscygiQExCYXI7
KHZhbHVlPShpbnQpMSkgVEhST1dTKHRocm93c190eXBlX2luZGV4PTEpIixwcmludFR5cGVBbm5v
dGF0aW9uKHR5cGVBbm5vdGF0aW9uc1sxXSkpOworCX0KKworCS8qKgorCSAqIFByb2R1Y2UgYSBu
aWNlbHkgZm9ybWF0dGVkIHR5cGUgYW5ub3RhdGlvbiBmb3IgdGVzdGluZy4gRXhlcmNpc2VzIHRo
ZSBBUEkgZm9yIHR5cGUgYW5ub3RhdGlvbnMuCisJICogT3V0cHV0IGV4YW1wbGVzOjxicj4KKwkg
KiA8dHQ+QEZvbyhpZD0zNCkgQ0xBU1NfRVhURU5EUywgdHlwZV9pbmRleD0tMSwgbG9jYXRpb249
W0FSUkFZLCBJTk5FUl9UWVBFLCBUWVBFX0FSR1VNRU5UKDApXTwvdHQ+PGJyPgorCSAqLworCXBy
aXZhdGUgU3RyaW5nIHByaW50VHlwZUFubm90YXRpb24oSUJpbmFyeVR5cGVBbm5vdGF0aW9uIHR5
cGVBbm5vdGF0aW9uKSB7CisJCVN0cmluZ0J1ZmZlciBzYiA9IG5ldyBTdHJpbmdCdWZmZXIoKTsK
KwkJLy8gVGhlIGFubm90YXRpb246CisJCUlCaW5hcnlBbm5vdGF0aW9uIGFubm90YXRpb24gPSB0
eXBlQW5ub3RhdGlvbi5nZXRBbm5vdGF0aW9uKCk7CisJCXNiLmFwcGVuZCgnQCcpLmFwcGVuZChh
bm5vdGF0aW9uLmdldFR5cGVOYW1lKCkpOworCQlJQmluYXJ5RWxlbWVudFZhbHVlUGFpcltdIHBh
aXJzID0gYW5ub3RhdGlvbi5nZXRFbGVtZW50VmFsdWVQYWlycygpOworCQlpZiAocGFpcnMubGVu
Z3RoICE9IDApIHsKKwkJCXNiLmFwcGVuZCgnKCcpOworCQkJZm9yIChpbnQgaSA9IDA7IGkgPCBw
YWlycy5sZW5ndGg7IGkrKykgeworCQkJCWlmIChpID4gMCkgeworCQkJCQlzYi5hcHBlbmQoJywn
KTsKKwkJCQl9CisJCQkJc2IuYXBwZW5kKHBhaXJzW2ldLmdldE5hbWUoKSkuYXBwZW5kKCc9Jyku
YXBwZW5kKHBhaXJzW2ldLmdldFZhbHVlKCkpOworCQkJfQorCQkJc2IuYXBwZW5kKCcpJyk7CisJ
CX0KKwkJc2IuYXBwZW5kKCcgJyk7CisJCQorCQkvLyB0YXJnZXQgdHlwZQorCQlpbnQgdGFyZ2V0
VHlwZSA9IHR5cGVBbm5vdGF0aW9uLmdldFRhcmdldFR5cGUoKTsKKwkJc3dpdGNoICh0YXJnZXRU
eXBlKSB7CisJCQljYXNlIEFubm90YXRpb25UYXJnZXRUeXBlQ29uc3RhbnRzLkNMQVNTX1RZUEVf
UEFSQU1FVEVSOgorCQkJCXNiLmFwcGVuZCgiQ0xBU1NfVFlQRV9QQVJBTUVURVIodHlwZV9wYXJh
bWV0ZXJfaW5kZXg9IikuYXBwZW5kKHR5cGVBbm5vdGF0aW9uLmdldFR5cGVQYXJhbWV0ZXJJbmRl
eCgpKS5hcHBlbmQoJyknKTsKKwkJCQlicmVhazsKKwkJCWNhc2UgQW5ub3RhdGlvblRhcmdldFR5
cGVDb25zdGFudHMuTUVUSE9EX1RZUEVfUEFSQU1FVEVSOgorCQkJCXNiLmFwcGVuZCgiTUVUSE9E
X1RZUEVfUEFSQU1FVEVSKHR5cGVfcGFyYW1ldGVyX2luZGV4PSIpLmFwcGVuZCh0eXBlQW5ub3Rh
dGlvbi5nZXRUeXBlUGFyYW1ldGVySW5kZXgoKSkuYXBwZW5kKCcpJyk7CisJCQkJYnJlYWs7CisJ
CQljYXNlIEFubm90YXRpb25UYXJnZXRUeXBlQ29uc3RhbnRzLkNMQVNTX0VYVEVORFM6CisJCQkJ
c2IuYXBwZW5kKCJDTEFTU19FWFRFTkRTKHR5cGVfaW5kZXg9IikuYXBwZW5kKChzaG9ydCl0eXBl
QW5ub3RhdGlvbi5nZXRTdXBlcnR5cGVJbmRleCgpKS5hcHBlbmQoJyknKTsKKwkJCQlicmVhazsK
KwkJCWNhc2UgQW5ub3RhdGlvblRhcmdldFR5cGVDb25zdGFudHMuQ0xBU1NfVFlQRV9QQVJBTUVU
RVJfQk9VTkQ6CisJCQkJc2IuYXBwZW5kKCJDTEFTU19UWVBFX1BBUkFNRVRFUl9CT1VORCh0eXBl
X3BhcmFtZXRlcl9pbmRleD0iKS4KKwkJCQkJYXBwZW5kKHR5cGVBbm5vdGF0aW9uLmdldFR5cGVQ
YXJhbWV0ZXJJbmRleCgpKS4KKwkJCQkJYXBwZW5kKCIsIGJvdW5kX2luZGV4PSIpLmFwcGVuZCh0
eXBlQW5ub3RhdGlvbi5nZXRCb3VuZEluZGV4KCkpLgorCQkJCQlhcHBlbmQoJyknKTsKKwkJCQli
cmVhazsKKwkJCWNhc2UgQW5ub3RhdGlvblRhcmdldFR5cGVDb25zdGFudHMuTUVUSE9EX1RZUEVf
UEFSQU1FVEVSX0JPVU5EOgorCQkJCXNiLmFwcGVuZCgiTUVUSE9EX1RZUEVfUEFSQU1FVEVSX0JP
VU5EKHR5cGVfcGFyYW1ldGVyX2luZGV4PSIpLgorCQkJCQlhcHBlbmQodHlwZUFubm90YXRpb24u
Z2V0VHlwZVBhcmFtZXRlckluZGV4KCkpLgorCQkJCQlhcHBlbmQoIiwgYm91bmRfaW5kZXg9Iiku
YXBwZW5kKHR5cGVBbm5vdGF0aW9uLmdldEJvdW5kSW5kZXgoKSkuCisJCQkJCWFwcGVuZCgnKScp
OworCQkJCWJyZWFrOworCQkJY2FzZSBBbm5vdGF0aW9uVGFyZ2V0VHlwZUNvbnN0YW50cy5GSUVM
RDoKKwkJCQlzYi5hcHBlbmQoIkZJRUxEIik7CisJCQkJYnJlYWs7CisJCQljYXNlIEFubm90YXRp
b25UYXJnZXRUeXBlQ29uc3RhbnRzLk1FVEhPRF9SRVRVUk46CisJCQkJc2IuYXBwZW5kKCJNRVRI
T0RfUkVUVVJOIik7CisJCQkJYnJlYWs7CisJCQljYXNlIEFubm90YXRpb25UYXJnZXRUeXBlQ29u
c3RhbnRzLk1FVEhPRF9SRUNFSVZFUjoKKwkJCQlzYi5hcHBlbmQoIk1FVEhPRF9SRUNFSVZFUiIp
OworCQkJCWJyZWFrOworCQkJY2FzZSBBbm5vdGF0aW9uVGFyZ2V0VHlwZUNvbnN0YW50cy5NRVRI
T0RfRk9STUFMX1BBUkFNRVRFUiA6CisJCQkJc2IuYXBwZW5kKCJNRVRIT0RfRk9STUFMX1BBUkFN
RVRFUihtZXRob2RfZm9ybWFsX3BhcmFtZXRlcl9pbmRleD0iKS4KKwkJCQkJYXBwZW5kKHR5cGVB
bm5vdGF0aW9uLmdldE1ldGhvZEZvcm1hbFBhcmFtZXRlckluZGV4KCkpLmFwcGVuZCgnKScpOwor
CQkJCWJyZWFrOworCQkJY2FzZSBBbm5vdGF0aW9uVGFyZ2V0VHlwZUNvbnN0YW50cy5USFJPV1Mg
OgorCQkJCXNiLmFwcGVuZCgiVEhST1dTKHRocm93c190eXBlX2luZGV4PSIpLgorCQkJCQlhcHBl
bmQodHlwZUFubm90YXRpb24uZ2V0VGhyb3dzVHlwZUluZGV4KCkpLmFwcGVuZCgnKScpOworCQkJ
CWJyZWFrOworCQkJZGVmYXVsdDogdGhyb3cgbmV3IElsbGVnYWxTdGF0ZUV4Y2VwdGlvbigibnlp
ICIrdGFyZ2V0VHlwZSk7CisJCX0KKwkJCisJCS8vIGxvY2F0aW9uCisJCWludFtdIHR5cGVwYXRo
ID0gdHlwZUFubm90YXRpb24uZ2V0VHlwZVBhdGgoKTsKKwkJCisJCWlmICh0eXBlcGF0aCAhPSBJ
QmluYXJ5VHlwZUFubm90YXRpb24uTk9fVFlQRV9QQVRIKSB7CisJCQlzYi5hcHBlbmQoIiwgbG9j
YXRpb249WyIpOyAvLyROT04tTkxTLTEkCisJCQlmb3IgKGludCBpID0gMCwgbWF4ID0gdHlwZXBh
dGgubGVuZ3RoOyBpIDwgbWF4OyBpICs9IDIpIHsKKwkJCQlpZiAoaSA+IDApIHsKKwkJCQkJc2Iu
YXBwZW5kKCIsICIpOyAvLyROT04tTkxTLTEkCisJCQkJfQorCQkJCXN3aXRjaCAodHlwZXBhdGhb
aV0pIHsKKwkJCQkJY2FzZSAwOgorCQkJCQkJc2IuYXBwZW5kKCJBUlJBWSIpOyAvLyROT04tTkxT
LTEkCisJCQkJCQlicmVhazsKKwkJCQkJY2FzZSAxOgorCQkJCQkJc2IuYXBwZW5kKCJJTk5FUl9U
WVBFIik7IC8vJE5PTi1OTFMtMSQKKwkJCQkJCWJyZWFrOworCQkJCQljYXNlIDI6CisJCQkJCQlz
Yi5hcHBlbmQoIldJTERDQVJEIik7IC8vJE5PTi1OTFMtMSQKKwkJCQkJCWJyZWFrOworCQkJCQlj
YXNlIDM6CisJCQkJCQlzYi5hcHBlbmQoIlRZUEVfQVJHVU1FTlQoIikuYXBwZW5kKHR5cGVwYXRo
W2krMV0pLmFwcGVuZCgnKScpOyAvLyROT04tTkxTLTEkCisJCQkJCQlicmVhazsKKwkJCQl9CisJ
CQl9CisJCQlzYi5hcHBlbmQoJ10nKTsKKwkJfQorCQlyZXR1cm4gc2IudG9TdHJpbmcoKTsKKwl9
CisKKwlwcml2YXRlIElCaW5hcnlNZXRob2QgZ2V0TWV0aG9kKENsYXNzRmlsZVJlYWRlciBjZnIs
U3RyaW5nIG1ldGhvZG5hbWUpIHsKKwkJSUJpbmFyeU1ldGhvZFtdIG1ldGhvZHMgPSBjZnIuZ2V0
TWV0aG9kcygpOworCQlpZiAobWV0aG9kcyA9PSBudWxsKSB7CisJCQlyZXR1cm4gbnVsbDsKKwkJ
fQorCQljaGFyW10gbWV0aG9kbmFtZUFzQ2hhckFycmF5ID0gbWV0aG9kbmFtZS50b0NoYXJBcnJh
eSgpOworCQlmb3IgKGludCBpID0gMCwgbWF4ID0gbWV0aG9kcy5sZW5ndGg7IGkgPCBtYXg7IGkr
KykgeworCQkJaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKG1ldGhvZHNbaV0uZ2V0U2VsZWN0b3Io
KSxtZXRob2RuYW1lQXNDaGFyQXJyYXkpKSB7CisJCQkJcmV0dXJuIG1ldGhvZHNbaV07CisJCQl9
CisJCX0KKwkJcmV0dXJuIG51bGw7CisJfQorCisJcHJpdmF0ZSBJQmluYXJ5RmllbGQgZ2V0Rmll
bGQoQ2xhc3NGaWxlUmVhZGVyIGNmcixTdHJpbmcgZmllbGRuYW1lKSB7CisJCUlCaW5hcnlGaWVs
ZFtdIGZpZWxkcyA9IGNmci5nZXRGaWVsZHMoKTsKKwkJaWYgKGZpZWxkcyA9PSBudWxsKSB7CisJ
CQlyZXR1cm4gbnVsbDsKKwkJfQorCQljaGFyW10gZmllbGRuYW1lQXNDaGFyQXJyYXkgPSBmaWVs
ZG5hbWUudG9DaGFyQXJyYXkoKTsKKwkJZm9yIChpbnQgaSA9IDAsIG1heCA9IGZpZWxkcy5sZW5n
dGg7IGkgPCBtYXg7IGkrKykgeworCQkJaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKGZpZWxkc1tp
XS5nZXROYW1lKCksZmllbGRuYW1lQXNDaGFyQXJyYXkpKSB7CisJCQkJcmV0dXJuIGZpZWxkc1tp
XTsKKwkJCX0KKwkJfQorCQlyZXR1cm4gbnVsbDsKKwl9CisJCit9CmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9UZXN0QWxsLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGls
ZXIvcmVncmVzc2lvbi9UZXN0QWxsLmphdmEKaW5kZXggZWFkM2Y1NS4uMzc3M2EyMSAxMDA2NDQK
LS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vVGVzdEFsbC5qYXZhCisrKyBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Rlc3RBbGwuamF2YQpAQCAtMTQsOCArMTQsNyBA
QAogICogICAgIFN0ZXBoYW4gSGVycm1hbm4gLSBDb250cmlidXRpb25zIGZvcgogICoJCQkJCQkJ
CWJ1ZyAxODYzNDIgLSBbY29tcGlsZXJdW251bGxdIFVzaW5nIGFubm90YXRpb25zIGZvciBudWxs
IGNoZWNraW5nCiAgKgkJCQkJCQkJYnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmlt
cG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCi0gKiAgICAgICAgQW5keSBDbGVtZW50IC0g
Q29udHJpYnV0aW9ucyBmb3IKLSAqICAgICAgICAgICAgICAgICAgICAgICAgICBCdWcgMzgzNjI0
IC0gWzEuOF1bY29tcGlsZXJdIFJldml2ZSBjb2RlIGdlbmVyYXRpb24gc3VwcG9ydCBmb3IgdHlw
ZSBhbm5vdGF0aW9ucyAoZnJvbSBPbGl2aWVyJ3Mgd29yaykKKyAqICAgICAgICBBbmR5IENsZW1l
bnQgLSBDb250cmlidXRpb25zIGZvciBCdWcgNDA3MTkxIC0gWzEuOF0gQmluYXJ5IGFjY2VzcyBz
dXBwb3J0IGZvciB0eXBlIGFubm90YXRpb25zCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBh
Y2thZ2Ugb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIucmVncmVzc2lvbjsKIApA
QCAtMjE0LDYgKzIxMyw3IEBAIHB1YmxpYyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsKIAkJdGVzdHNf
MV84LmFkZEFsbChzaW5jZV8xXzYpOwogCQl0ZXN0c18xXzguYWRkQWxsKHNpbmNlXzFfNyk7CiAJ
CXRlc3RzXzFfOC5hZGRBbGwoc2luY2VfMV84KTsKKwkJdGVzdHNfMV84LmFkZChDbGFzc0ZpbGVS
ZWFkZXJUZXN0XzFfOC5jbGFzcyk7CiAJCS8vIFJlc2V0IGZvcmdvdHRlbiBzdWJzZXRzIHRlc3Rz
CiAJCVRlc3RDYXNlLlRFU1RTX1BSRUZJWCA9IG51bGw7CiAJCVRlc3RDYXNlLlRFU1RTX05BTUVT
ID0gbnVsbDsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jbGFzc2ZtdC9DbGFzc0ZpbGVSZWFkZXIuamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9jbGFzc2ZtdC9DbGFzc0ZpbGVSZWFkZXIuamF2YQppbmRleCBmYTJmYjBmLi4w
OWYxNDU0IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY2xhc3NmbXQvQ2xhc3NGaWxlUmVhZGVyLmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2NsYXNzZm10L0NsYXNzRmlsZVJlYWRlci5qYXZhCkBAIC0xLDEzICsxLDE4
IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEx
IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEx
LCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZl
ZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1h
ZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5z
ZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2
YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwK
ICAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNp
ZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAo
SkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVy
cG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNp
ZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENv
cnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCiAgKiAgICAgU3RlcGhh
biBIZXJybWFubiAtIENvbnRyaWJ1dGlvbiBmb3IgYnVnIDM2NTk5MiAtIFtidWlsZGVyXSBbbnVs
bF0gQ2hhbmdlIG9mIG51bGxuZXNzIGZvciBhIHBhcmFtZXRlciBkb2Vzbid0IHRyaWdnZXIgYSBi
dWlsZCBmb3IgdGhlIGZpbGVzIHRoYXQgY2FsbCB0aGUgbWV0aG9kCisgKiAgICAgICAgQW5keSBD
bGVtZW50IC0gQ29udHJpYnV0aW9ucyBmb3IgQnVnIDQwNzE5MSAtIFsxLjhdIEJpbmFyeSBhY2Nl
c3Mgc3VwcG9ydCBmb3IgdHlwZSBhbm5vdGF0aW9ucyAKICAqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
LwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuY2xhc3NmbXQ7CiAK
QEAgLTMyLDYgKzM3LDcgQEAgcHVibGljIGNsYXNzIENsYXNzRmlsZVJlYWRlciBleHRlbmRzIENs
YXNzRmlsZVN0cnVjdCBpbXBsZW1lbnRzIElCaW5hcnlUeXBlIHsKIAlwcml2YXRlIGludCBjbGFz
c05hbWVJbmRleDsKIAlwcml2YXRlIGludCBjb25zdGFudFBvb2xDb3VudDsKIAlwcml2YXRlIEFu
bm90YXRpb25JbmZvW10gYW5ub3RhdGlvbnM7CisJcHJpdmF0ZSBUeXBlQW5ub3RhdGlvbkluZm9b
XSB0eXBlQW5ub3RhdGlvbnM7CiAJcHJpdmF0ZSBGaWVsZEluZm9bXSBmaWVsZHM7CiAJcHJpdmF0
ZSBpbnQgZmllbGRzQ291bnQ7CiAKQEAgLTM1Niw2ICszNjIsMTAgQEAgcHVibGljIENsYXNzRmls
ZVJlYWRlcihieXRlW10gY2xhc3NGaWxlQnl0ZXMsIGNoYXJbXSBmaWxlTmFtZSwgYm9vbGVhbiBm
dWxseUluaXQKIAkJCQkJCWRlY29kZUFubm90YXRpb25zKHJlYWRPZmZzZXQsIHRydWUpOwogCQkJ
CQl9IGVsc2UgaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKGF0dHJpYnV0ZU5hbWUsIEF0dHJpYnV0
ZU5hbWVzQ29uc3RhbnRzLlJ1bnRpbWVJbnZpc2libGVBbm5vdGF0aW9uc05hbWUpKSB7CiAJCQkJ
CQlkZWNvZGVBbm5vdGF0aW9ucyhyZWFkT2Zmc2V0LCBmYWxzZSk7CisJCQkJCX0gZWxzZSBpZiAo
Q2hhck9wZXJhdGlvbi5lcXVhbHMoYXR0cmlidXRlTmFtZSwgQXR0cmlidXRlTmFtZXNDb25zdGFu
dHMuUnVudGltZVZpc2libGVUeXBlQW5ub3RhdGlvbnNOYW1lKSkgeworCQkJCQkJZGVjb2RlVHlw
ZUFubm90YXRpb25zKHJlYWRPZmZzZXQsIHRydWUpOworCQkJCQl9IGVsc2UgaWYgKENoYXJPcGVy
YXRpb24uZXF1YWxzKGF0dHJpYnV0ZU5hbWUsIEF0dHJpYnV0ZU5hbWVzQ29uc3RhbnRzLlJ1bnRp
bWVJbnZpc2libGVUeXBlQW5ub3RhdGlvbnNOYW1lKSkgeworCQkJCQkJZGVjb2RlVHlwZUFubm90
YXRpb25zKHJlYWRPZmZzZXQsIGZhbHNlKTsKIAkJCQkJfQogCQkJCQlicmVhazsKIAkJCQljYXNl
ICdNJyA6CkBAIC00MzQsNiArNDQ0LDMzIEBAIHByaXZhdGUgdm9pZCBkZWNvZGVBbm5vdGF0aW9u
cyhpbnQgb2Zmc2V0LCBib29sZWFuIHJ1bnRpbWVWaXNpYmxlKSB7CiAJfQogfQogCitwcml2YXRl
IHZvaWQgZGVjb2RlVHlwZUFubm90YXRpb25zKGludCBvZmZzZXQsIGJvb2xlYW4gcnVudGltZVZp
c2libGUpIHsKKwlpbnQgbnVtYmVyT2ZBbm5vdGF0aW9ucyA9IHUyQXQob2Zmc2V0ICsgNik7CisJ
aWYgKG51bWJlck9mQW5ub3RhdGlvbnMgPiAwKSB7CisJCWludCByZWFkT2Zmc2V0ID0gb2Zmc2V0
ICsgODsKKwkJVHlwZUFubm90YXRpb25JbmZvW10gbmV3SW5mb3MgPSBudWxsOworCQlpbnQgbmV3
SW5mb0NvdW50ID0gMDsKKwkJbmV3SW5mb3MgPSBuZXcgVHlwZUFubm90YXRpb25JbmZvW251bWJl
ck9mQW5ub3RhdGlvbnNdOworCQlmb3IgKGludCBpID0gMDsgaSA8IG51bWJlck9mQW5ub3RhdGlv
bnM7IGkrKykgeworCQkJLy8gV2l0aCB0aGUgbGFzdCBwYXJhbWV0ZXIgYmVpbmcgJ2ZhbHNlJywg
dGhlIGRhdGEgc3RydWN0dXJlIHdpbGwgbm90IGJlIGZsdXNoZWQgb3V0CisJCQlUeXBlQW5ub3Rh
dGlvbkluZm8gbmV3SW5mbyA9IG5ldyBUeXBlQW5ub3RhdGlvbkluZm8odGhpcy5yZWZlcmVuY2Us
IHRoaXMuY29uc3RhbnRQb29sT2Zmc2V0cywgcmVhZE9mZnNldCwgcnVudGltZVZpc2libGUsIGZh
bHNlKTsKKwkJCXJlYWRPZmZzZXQgKz0gbmV3SW5mby5yZWFkT2Zmc2V0OworCQkJbmV3SW5mb3Nb
bmV3SW5mb0NvdW50KytdID0gbmV3SW5mbzsKKwkJfQorCQlpZiAodGhpcy5hbm5vdGF0aW9ucyA9
PSBudWxsKSB7CisJCQlpZiAobmV3SW5mb0NvdW50ICE9IG5ld0luZm9zLmxlbmd0aCkKKwkJCQlT
eXN0ZW0uYXJyYXljb3B5KG5ld0luZm9zLCAwLCBuZXdJbmZvcyA9IG5ldyBUeXBlQW5ub3RhdGlv
bkluZm9bbmV3SW5mb0NvdW50XSwgMCwgbmV3SW5mb0NvdW50KTsKKwkJCXRoaXMudHlwZUFubm90
YXRpb25zID0gbmV3SW5mb3M7CisJCX0gZWxzZSB7CisJCQlpbnQgbGVuZ3RoID0gdGhpcy50eXBl
QW5ub3RhdGlvbnMubGVuZ3RoOworCQkJVHlwZUFubm90YXRpb25JbmZvW10gdGVtcCA9IG5ldyBU
eXBlQW5ub3RhdGlvbkluZm9bbGVuZ3RoICsgbmV3SW5mb0NvdW50XTsKKwkJCVN5c3RlbS5hcnJh
eWNvcHkodGhpcy50eXBlQW5ub3RhdGlvbnMsIDAsIHRlbXAsIDAsIGxlbmd0aCk7CisJCQlTeXN0
ZW0uYXJyYXljb3B5KG5ld0luZm9zLCAwLCB0ZW1wLCBsZW5ndGgsIG5ld0luZm9Db3VudCk7CisJ
CQl0aGlzLnR5cGVBbm5vdGF0aW9ucyA9IHRlbXA7CisJCX0KKwl9Cit9CisKIC8qKgogICogQHJl
dHVybiB0aGUgYW5ub3RhdGlvbnMgb3IgbnVsbCBpZiB0aGVyZSBpcyBub25lLgogICovCkBAIC00
NDIsNiArNDc5LDEzIEBAIHB1YmxpYyBJQmluYXJ5QW5ub3RhdGlvbltdIGdldEFubm90YXRpb25z
KCkgewogfQogCiAvKioKKyAqIEByZXR1cm4gdGhlIHR5cGUgYW5ub3RhdGlvbnMgb3IgbnVsbCBp
ZiB0aGVyZSBpcyBub25lLgorICovCitwdWJsaWMgSUJpbmFyeVR5cGVBbm5vdGF0aW9uW10gZ2V0
VHlwZUFubm90YXRpb25zKCkgeworCXJldHVybiB0aGlzLnR5cGVBbm5vdGF0aW9uczsKK30KKwor
LyoqCiAgKiBBbnN3ZXIgdGhlIGNoYXIgYXJyYXkgdGhhdCBjb3JyZXNwb25kcyB0byB0aGUgY2xh
c3MgbmFtZSBvZiB0aGUgY29uc3RhbnQgY2xhc3MuCiAgKiBjb25zdGFudFBvb2xJbmRleCBpcyB0
aGUgaW5kZXggaW4gdGhlIGNvbnN0YW50IHBvb2wgdGhhdCBpcyBhIGNvbnN0YW50IGNsYXNzIGVu
dHJ5LgogICoKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jbGFzc2ZtdC9GaWVsZEluZm8uamF2YSBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9jbGFzc2ZtdC9GaWVsZEluZm8uamF2YQppbmRleCA4ZWFlYTA5Li5jNzAzOTEwIDEwMDY0
NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvY2xhc3NmbXQvRmllbGRJbmZvLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NsYXNz
Zm10L0ZpZWxkSW5mby5qYXZhCkBAIC01LDggKzUsMTMgQEAKICAqIHdoaWNoIGFjY29tcGFuaWVz
IHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVj
bGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAogICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50
YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhl
IEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBm
b3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMg
bm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgorICoKICAq
IENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQg
aW1wbGVtZW50YXRpb24KKyAqICAgICAgICBBbmR5IENsZW1lbnQgLSBDb250cmlidXRpb25zIGZv
ciBCdWcgNDA3MTkxIC0gWzEuOF0gQmluYXJ5IGFjY2VzcyBzdXBwb3J0IGZvciB0eXBlIGFubm90
YXRpb25zCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLmNsYXNzZm10OwogCkBAIC0xNCw2ICsxOSw3IEBAIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5DaGFyT3BlcmF0aW9uOwogaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jb2RlZ2VuLkF0dHJpYnV0ZU5hbWVzQ29uc3Rh
bnRzOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuSUJpbmFy
eUFubm90YXRpb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVu
di5JQmluYXJ5RmllbGQ7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LmVudi5JQmluYXJ5VHlwZUFubm90YXRpb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmltcGwuKjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIubG9va3VwLlR5cGVJZHM7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLnV0aWwuVXRpbDsKQEAgLTMxLDEwICszNyw2NSBAQCBwdWJsaWMgY2xhc3MgRmllbGRJ
bmZvIGV4dGVuZHMgQ2xhc3NGaWxlU3RydWN0IGltcGxlbWVudHMgSUJpbmFyeUZpZWxkLCBDb21w
YXJhYgogCiBwdWJsaWMgc3RhdGljIEZpZWxkSW5mbyBjcmVhdGVGaWVsZChieXRlIGNsYXNzRmls
ZUJ5dGVzW10sIGludCBvZmZzZXRzW10sIGludCBvZmZzZXQpIHsKIAlGaWVsZEluZm8gZmllbGRJ
bmZvID0gbmV3IEZpZWxkSW5mbyhjbGFzc0ZpbGVCeXRlcywgb2Zmc2V0cywgb2Zmc2V0KTsKLQlB
bm5vdGF0aW9uSW5mb1tdIGFubm90YXRpb25zID0gZmllbGRJbmZvLnJlYWRBdHRyaWJ1dGVzKCk7
Ci0JaWYgKGFubm90YXRpb25zID09IG51bGwpCi0JCXJldHVybiBmaWVsZEluZm87Ci0JcmV0dXJu
IG5ldyBGaWVsZEluZm9XaXRoQW5ub3RhdGlvbihmaWVsZEluZm8sIGFubm90YXRpb25zKTsKKwkK
KwlpbnQgYXR0cmlidXRlc0NvdW50ID0gZmllbGRJbmZvLnUyQXQoNik7CisJaW50IHJlYWRPZmZz
ZXQgPSA4OworCUFubm90YXRpb25JbmZvW10gYW5ub3RhdGlvbnMgPSBudWxsOworCVR5cGVBbm5v
dGF0aW9uSW5mb1tdIHR5cGVBbm5vdGF0aW9ucyA9IG51bGw7CisJZm9yIChpbnQgaSA9IDA7IGkg
PCBhdHRyaWJ1dGVzQ291bnQ7IGkrKykgeworCQkvLyBjaGVjayB0aGUgbmFtZSBvZiBlYWNoIGF0
dHJpYnV0ZQorCQlpbnQgdXRmOE9mZnNldCA9IGZpZWxkSW5mby5jb25zdGFudFBvb2xPZmZzZXRz
W2ZpZWxkSW5mby51MkF0KHJlYWRPZmZzZXQpXSAtIGZpZWxkSW5mby5zdHJ1Y3RPZmZzZXQ7CisJ
CWNoYXJbXSBhdHRyaWJ1dGVOYW1lID0gZmllbGRJbmZvLnV0ZjhBdCh1dGY4T2Zmc2V0ICsgMywg
ZmllbGRJbmZvLnUyQXQodXRmOE9mZnNldCArIDEpKTsKKwkJaWYgKGF0dHJpYnV0ZU5hbWUubGVu
Z3RoID4gMCkgeworCQkJc3dpdGNoKGF0dHJpYnV0ZU5hbWVbMF0pIHsKKwkJCQljYXNlICdTJyA6
CisJCQkJCWlmIChDaGFyT3BlcmF0aW9uLmVxdWFscyhBdHRyaWJ1dGVOYW1lc0NvbnN0YW50cy5T
aWduYXR1cmVOYW1lLCBhdHRyaWJ1dGVOYW1lKSkKKwkJCQkJCWZpZWxkSW5mby5zaWduYXR1cmVV
dGY4T2Zmc2V0ID0gZmllbGRJbmZvLmNvbnN0YW50UG9vbE9mZnNldHNbZmllbGRJbmZvLnUyQXQo
cmVhZE9mZnNldCArIDYpXSAtIGZpZWxkSW5mby5zdHJ1Y3RPZmZzZXQ7CisJCQkJCWJyZWFrOwor
CQkJCWNhc2UgJ1InIDoKKwkJCQkJQW5ub3RhdGlvbkluZm9bXSBkZWNvZGVkQW5ub3RhdGlvbnMg
PSBudWxsOworCQkJCQlUeXBlQW5ub3RhdGlvbkluZm9bXSBkZWNvZGVkVHlwZUFubm90YXRpb25z
ID0gbnVsbDsKKwkJCQkJaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKGF0dHJpYnV0ZU5hbWUsIEF0
dHJpYnV0ZU5hbWVzQ29uc3RhbnRzLlJ1bnRpbWVWaXNpYmxlQW5ub3RhdGlvbnNOYW1lKSkgewor
CQkJCQkJZGVjb2RlZEFubm90YXRpb25zID0gZmllbGRJbmZvLmRlY29kZUFubm90YXRpb25zKHJl
YWRPZmZzZXQsIHRydWUpOworCQkJCQl9IGVsc2UgaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKGF0
dHJpYnV0ZU5hbWUsIEF0dHJpYnV0ZU5hbWVzQ29uc3RhbnRzLlJ1bnRpbWVJbnZpc2libGVBbm5v
dGF0aW9uc05hbWUpKSB7CisJCQkJCQlkZWNvZGVkQW5ub3RhdGlvbnMgPSBmaWVsZEluZm8uZGVj
b2RlQW5ub3RhdGlvbnMocmVhZE9mZnNldCwgZmFsc2UpOworCQkJCQl9IGVsc2UgaWYgKENoYXJP
cGVyYXRpb24uZXF1YWxzKGF0dHJpYnV0ZU5hbWUsIEF0dHJpYnV0ZU5hbWVzQ29uc3RhbnRzLlJ1
bnRpbWVWaXNpYmxlVHlwZUFubm90YXRpb25zTmFtZSkpIHsKKwkJCQkJCWRlY29kZWRUeXBlQW5u
b3RhdGlvbnMgPSBmaWVsZEluZm8uZGVjb2RlVHlwZUFubm90YXRpb25zKHJlYWRPZmZzZXQsIHRy
dWUpOworCQkJCQl9IGVsc2UgaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKGF0dHJpYnV0ZU5hbWUs
IEF0dHJpYnV0ZU5hbWVzQ29uc3RhbnRzLlJ1bnRpbWVJbnZpc2libGVUeXBlQW5ub3RhdGlvbnNO
YW1lKSkgeworCQkJCQkJZGVjb2RlZFR5cGVBbm5vdGF0aW9ucyA9IGZpZWxkSW5mby5kZWNvZGVU
eXBlQW5ub3RhdGlvbnMocmVhZE9mZnNldCwgZmFsc2UpOworCQkJCQl9CisJCQkJCWlmIChkZWNv
ZGVkQW5ub3RhdGlvbnMgIT0gbnVsbCkgeworCQkJCQkJaWYgKGFubm90YXRpb25zID09IG51bGwp
IHsKKwkJCQkJCQlhbm5vdGF0aW9ucyA9IGRlY29kZWRBbm5vdGF0aW9uczsKKwkJCQkJCX0gZWxz
ZSB7CisJCQkJCQkJaW50IGxlbmd0aCA9IGFubm90YXRpb25zLmxlbmd0aDsKKwkJCQkJCQlBbm5v
dGF0aW9uSW5mb1tdIGNvbWJpbmVkID0gbmV3IEFubm90YXRpb25JbmZvW2xlbmd0aCArIGRlY29k
ZWRBbm5vdGF0aW9ucy5sZW5ndGhdOworCQkJCQkJCVN5c3RlbS5hcnJheWNvcHkoYW5ub3RhdGlv
bnMsIDAsIGNvbWJpbmVkLCAwLCBsZW5ndGgpOworCQkJCQkJCVN5c3RlbS5hcnJheWNvcHkoZGVj
b2RlZEFubm90YXRpb25zLCAwLCBjb21iaW5lZCwgbGVuZ3RoLCBkZWNvZGVkQW5ub3RhdGlvbnMu
bGVuZ3RoKTsKKwkJCQkJCQlhbm5vdGF0aW9ucyA9IGNvbWJpbmVkOworCQkJCQkJfQorCQkJCQl9
IGVsc2UgaWYgKGRlY29kZWRUeXBlQW5ub3RhdGlvbnMgIT0gbnVsbCkgeworCQkJCQkJaWYgKHR5
cGVBbm5vdGF0aW9ucyA9PSBudWxsKSB7CisJCQkJCQkJdHlwZUFubm90YXRpb25zID0gZGVjb2Rl
ZFR5cGVBbm5vdGF0aW9uczsKKwkJCQkJCX0gZWxzZSB7CisJCQkJCQkJaW50IGxlbmd0aCA9IHR5
cGVBbm5vdGF0aW9ucy5sZW5ndGg7CisJCQkJCQkJVHlwZUFubm90YXRpb25JbmZvW10gY29tYmlu
ZWQgPSBuZXcgVHlwZUFubm90YXRpb25JbmZvW2xlbmd0aCArIGRlY29kZWRUeXBlQW5ub3RhdGlv
bnMubGVuZ3RoXTsKKwkJCQkJCQlTeXN0ZW0uYXJyYXljb3B5KHR5cGVBbm5vdGF0aW9ucywgMCwg
Y29tYmluZWQsIDAsIGxlbmd0aCk7CisJCQkJCQkJU3lzdGVtLmFycmF5Y29weShkZWNvZGVkVHlw
ZUFubm90YXRpb25zLCAwLCBjb21iaW5lZCwgbGVuZ3RoLCBkZWNvZGVkVHlwZUFubm90YXRpb25z
Lmxlbmd0aCk7CisJCQkJCQkJdHlwZUFubm90YXRpb25zID0gY29tYmluZWQ7CisJCQkJCQl9CisJ
CQkJCX0KKwkJCX0KKwkJfQorCQlyZWFkT2Zmc2V0ICs9ICg2ICsgZmllbGRJbmZvLnU0QXQocmVh
ZE9mZnNldCArIDIpKTsKKwl9CisJZmllbGRJbmZvLmF0dHJpYnV0ZUJ5dGVzID0gcmVhZE9mZnNl
dDsKKwkKKwlpZiAodHlwZUFubm90YXRpb25zICE9IG51bGwpCisJCXJldHVybiBuZXcgRmllbGRJ
bmZvV2l0aFR5cGVBbm5vdGF0aW9uKGZpZWxkSW5mbywgYW5ub3RhdGlvbnMsIHR5cGVBbm5vdGF0
aW9ucyk7CisJaWYgKGFubm90YXRpb25zICE9IG51bGwpCisJCXJldHVybiBuZXcgRmllbGRJbmZv
V2l0aEFubm90YXRpb24oZmllbGRJbmZvLCBhbm5vdGF0aW9ucyk7CisJcmV0dXJuIGZpZWxkSW5m
bzsKIH0KIAogLyoqCkBAIC03NSw2ICsxMzYsMjIgQEAgcHJpdmF0ZSBBbm5vdGF0aW9uSW5mb1td
IGRlY29kZUFubm90YXRpb25zKGludCBvZmZzZXQsIGJvb2xlYW4gcnVudGltZVZpc2libGUpIHsK
IAl9CiAJcmV0dXJuIG51bGw7IC8vIG5vdGhpbmcgdG8gcmVjb3JkCiB9CisKK1R5cGVBbm5vdGF0
aW9uSW5mb1tdIGRlY29kZVR5cGVBbm5vdGF0aW9ucyhpbnQgb2Zmc2V0LCBib29sZWFuIHJ1bnRp
bWVWaXNpYmxlKSB7CisJaW50IG51bWJlck9mQW5ub3RhdGlvbnMgPSB1MkF0KG9mZnNldCArIDYp
OworCWlmIChudW1iZXJPZkFubm90YXRpb25zID4gMCkgeworCQlpbnQgcmVhZE9mZnNldCA9IG9m
ZnNldCArIDg7CisJCVR5cGVBbm5vdGF0aW9uSW5mb1tdIHR5cGVBbm5vcyA9IG5ldyBUeXBlQW5u
b3RhdGlvbkluZm9bbnVtYmVyT2ZBbm5vdGF0aW9uc107CisJCWZvciAoaW50IGkgPSAwOyBpIDwg
bnVtYmVyT2ZBbm5vdGF0aW9uczsgaSsrKSB7CisJCQlUeXBlQW5ub3RhdGlvbkluZm8gbmV3SW5m
byA9IG5ldyBUeXBlQW5ub3RhdGlvbkluZm8odGhpcy5yZWZlcmVuY2UsIHRoaXMuY29uc3RhbnRQ
b29sT2Zmc2V0cywgcmVhZE9mZnNldCArIHRoaXMuc3RydWN0T2Zmc2V0LCBydW50aW1lVmlzaWJs
ZSwgZmFsc2UpOworCQkJcmVhZE9mZnNldCArPSBuZXdJbmZvLnJlYWRPZmZzZXQ7CisJCQl0eXBl
QW5ub3NbaV0gPSBuZXdJbmZvOworCQl9CisJCXJldHVybiB0eXBlQW5ub3M7CisJfQorCXJldHVy
biBudWxsOworfQorCiBwdWJsaWMgaW50IGNvbXBhcmVUbyhPYmplY3QgbykgewogCXJldHVybiBu
ZXcgU3RyaW5nKGdldE5hbWUoKSkuY29tcGFyZVRvKG5ldyBTdHJpbmcoKChGaWVsZEluZm8pIG8p
LmdldE5hbWUoKSkpOwogfQpAQCAtMTYzLDYgKzI0MCwxMCBAQCBwdWJsaWMgY2hhcltdIGdldFR5
cGVOYW1lKCkgewogcHVibGljIElCaW5hcnlBbm5vdGF0aW9uW10gZ2V0QW5ub3RhdGlvbnMoKSB7
CiAJcmV0dXJuIG51bGw7CiB9CisKK3B1YmxpYyBJQmluYXJ5VHlwZUFubm90YXRpb25bXSBnZXRU
eXBlQW5ub3RhdGlvbnMoKSB7CisJcmV0dXJuIG51bGw7Cit9CiAvKioKICAqIFJldHVybiBhIHdy
YXBwZXIgdGhhdCBjb250YWlucyB0aGUgY29uc3RhbnQgb2YgdGhlIGZpZWxkLgogICogQHJldHVy
biBqYXZhLmxhbmcuT2JqZWN0CkBAIC0yMzAsNDUgKzMxMSw2IEBAIHByb3RlY3RlZCB2b2lkIGlu
aXRpYWxpemUoKSB7CiBwdWJsaWMgYm9vbGVhbiBpc1N5bnRoZXRpYygpIHsKIAlyZXR1cm4gKGdl
dE1vZGlmaWVycygpICYgQ2xhc3NGaWxlQ29uc3RhbnRzLkFjY1N5bnRoZXRpYykgIT0gMDsKIH0K
LXByaXZhdGUgQW5ub3RhdGlvbkluZm9bXSByZWFkQXR0cmlidXRlcygpIHsKLQlpbnQgYXR0cmli
dXRlc0NvdW50ID0gdTJBdCg2KTsKLQlpbnQgcmVhZE9mZnNldCA9IDg7Ci0JQW5ub3RhdGlvbklu
Zm9bXSBhbm5vdGF0aW9ucyA9IG51bGw7Ci0JZm9yIChpbnQgaSA9IDA7IGkgPCBhdHRyaWJ1dGVz
Q291bnQ7IGkrKykgewotCQkvLyBjaGVjayB0aGUgbmFtZSBvZiBlYWNoIGF0dHJpYnV0ZQotCQlp
bnQgdXRmOE9mZnNldCA9IHRoaXMuY29uc3RhbnRQb29sT2Zmc2V0c1t1MkF0KHJlYWRPZmZzZXQp
XSAtIHRoaXMuc3RydWN0T2Zmc2V0OwotCQljaGFyW10gYXR0cmlidXRlTmFtZSA9IHV0ZjhBdCh1
dGY4T2Zmc2V0ICsgMywgdTJBdCh1dGY4T2Zmc2V0ICsgMSkpOwotCQlpZiAoYXR0cmlidXRlTmFt
ZS5sZW5ndGggPiAwKSB7Ci0JCQlzd2l0Y2goYXR0cmlidXRlTmFtZVswXSkgewotCQkJCWNhc2Ug
J1MnIDoKLQkJCQkJaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKEF0dHJpYnV0ZU5hbWVzQ29uc3Rh
bnRzLlNpZ25hdHVyZU5hbWUsIGF0dHJpYnV0ZU5hbWUpKQotCQkJCQkJdGhpcy5zaWduYXR1cmVV
dGY4T2Zmc2V0ID0gdGhpcy5jb25zdGFudFBvb2xPZmZzZXRzW3UyQXQocmVhZE9mZnNldCArIDYp
XSAtIHRoaXMuc3RydWN0T2Zmc2V0OwotCQkJCQlicmVhazsKLQkJCQljYXNlICdSJyA6Ci0JCQkJ
CUFubm90YXRpb25JbmZvW10gZGVjb2RlZEFubm90YXRpb25zID0gbnVsbDsKLQkJCQkJaWYgKENo
YXJPcGVyYXRpb24uZXF1YWxzKGF0dHJpYnV0ZU5hbWUsIEF0dHJpYnV0ZU5hbWVzQ29uc3RhbnRz
LlJ1bnRpbWVWaXNpYmxlQW5ub3RhdGlvbnNOYW1lKSkgewotCQkJCQkJZGVjb2RlZEFubm90YXRp
b25zID0gZGVjb2RlQW5ub3RhdGlvbnMocmVhZE9mZnNldCwgdHJ1ZSk7Ci0JCQkJCX0gZWxzZSBp
ZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoYXR0cmlidXRlTmFtZSwgQXR0cmlidXRlTmFtZXNDb25z
dGFudHMuUnVudGltZUludmlzaWJsZUFubm90YXRpb25zTmFtZSkpIHsKLQkJCQkJCWRlY29kZWRB
bm5vdGF0aW9ucyA9IGRlY29kZUFubm90YXRpb25zKHJlYWRPZmZzZXQsIGZhbHNlKTsKLQkJCQkJ
fQotCQkJCQlpZiAoZGVjb2RlZEFubm90YXRpb25zICE9IG51bGwpIHsKLQkJCQkJCWlmIChhbm5v
dGF0aW9ucyA9PSBudWxsKSB7Ci0JCQkJCQkJYW5ub3RhdGlvbnMgPSBkZWNvZGVkQW5ub3RhdGlv
bnM7Ci0JCQkJCQl9IGVsc2UgewotCQkJCQkJCWludCBsZW5ndGggPSBhbm5vdGF0aW9ucy5sZW5n
dGg7Ci0JCQkJCQkJQW5ub3RhdGlvbkluZm9bXSBjb21iaW5lZCA9IG5ldyBBbm5vdGF0aW9uSW5m
b1tsZW5ndGggKyBkZWNvZGVkQW5ub3RhdGlvbnMubGVuZ3RoXTsKLQkJCQkJCQlTeXN0ZW0uYXJy
YXljb3B5KGFubm90YXRpb25zLCAwLCBjb21iaW5lZCwgMCwgbGVuZ3RoKTsKLQkJCQkJCQlTeXN0
ZW0uYXJyYXljb3B5KGRlY29kZWRBbm5vdGF0aW9ucywgMCwgY29tYmluZWQsIGxlbmd0aCwgZGVj
b2RlZEFubm90YXRpb25zLmxlbmd0aCk7Ci0JCQkJCQkJYW5ub3RhdGlvbnMgPSBjb21iaW5lZDsK
LQkJCQkJCX0KLQkJCQkJfQotCQkJfQotCQl9Ci0JCXJlYWRPZmZzZXQgKz0gKDYgKyB1NEF0KHJl
YWRPZmZzZXQgKyAyKSk7Ci0JfQotCXRoaXMuYXR0cmlidXRlQnl0ZXMgPSByZWFkT2Zmc2V0Owot
CXJldHVybiBhbm5vdGF0aW9uczsKLX0KIHByaXZhdGUgdm9pZCByZWFkQ29uc3RhbnRBdHRyaWJ1
dGUoKSB7CiAJaW50IGF0dHJpYnV0ZXNDb3VudCA9IHUyQXQoNik7CiAJaW50IHJlYWRPZmZzZXQg
PSA4OwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NsYXNzZm10L0ZpZWxkSW5mb1dpdGhBbm5vdGF0aW9u
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvY2xhc3NmbXQvRmllbGRJbmZvV2l0aEFubm90YXRpb24uamF2YQppbmRl
eCA0ZTNjNDM1Li5mNTQ3NjQzIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY2xhc3NmbXQvRmllbGRJbmZv
V2l0aEFubm90YXRpb24uamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY2xhc3NmbXQvRmllbGRJbmZvV2l0aEFu
bm90YXRpb24uamF2YQpAQCAtNSwxMiArNSwxNyBAQAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhp
cyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBz
ZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCiAgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlv
biBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2
YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0
ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3Qg
Y29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKgogICogQ29u
dHJpYnV0b3JzOgogICogICAgdHlldW5nQGJlYS5jb20gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVt
ZW50YXRpb24KKyAqICAgICAgICBBbmR5IENsZW1lbnQgLSBDb250cmlidXRpb25zIGZvciBCdWcg
NDA3MTkxIC0gWzEuOF0gQmluYXJ5IGFjY2VzcyBzdXBwb3J0IGZvciB0eXBlIGFubm90YXRpb25z
CiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmNsYXNzZm10OwogCi1wdWJsaWMgZmluYWwgY2xhc3MgRmllbGRJbmZvV2l0
aEFubm90YXRpb24gZXh0ZW5kcyBGaWVsZEluZm8geworcHVibGljIGNsYXNzIEZpZWxkSW5mb1dp
dGhBbm5vdGF0aW9uIGV4dGVuZHMgRmllbGRJbmZvIHsKIAlwcml2YXRlIEFubm90YXRpb25JbmZv
W10gYW5ub3RhdGlvbnM7CiAKIEZpZWxkSW5mb1dpdGhBbm5vdGF0aW9uKEZpZWxkSW5mbyBpbmZv
LCBBbm5vdGF0aW9uSW5mb1tdIGFubm9zKSB7CkBAIC0zMSw4ICszNiw5IEBAIHB1YmxpYyBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklCaW5hcnlBbm5vdGF0aW9uW10gZ2V0
QW5ub3RhdGlvbnMoCiAJcmV0dXJuIHRoaXMuYW5ub3RhdGlvbnM7CiB9CiBwcm90ZWN0ZWQgdm9p
ZCBpbml0aWFsaXplKCkgewotCWZvciAoaW50IGkgPSAwLCBtYXggPSB0aGlzLmFubm90YXRpb25z
Lmxlbmd0aDsgaSA8IG1heDsgaSsrKQotCQl0aGlzLmFubm90YXRpb25zW2ldLmluaXRpYWxpemUo
KTsKKwlpZiAodGhpcy5hbm5vdGF0aW9ucyAhPSBudWxsKQorCQlmb3IgKGludCBpID0gMCwgbWF4
ID0gdGhpcy5hbm5vdGF0aW9ucy5sZW5ndGg7IGkgPCBtYXg7IGkrKykKKwkJCXRoaXMuYW5ub3Rh
dGlvbnNbaV0uaW5pdGlhbGl6ZSgpOwogCXN1cGVyLmluaXRpYWxpemUoKTsKIH0KIHByb3RlY3Rl
ZCB2b2lkIHJlc2V0KCkgewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NsYXNzZm10L0ZpZWxkSW5mb1dp
dGhUeXBlQW5ub3RhdGlvbi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NsYXNzZm10L0ZpZWxkSW5mb1dpdGhUeXBl
QW5ub3RhdGlvbi5qYXZhCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLmI1NzRm
ZjQKLS0tIC9kZXYvbnVsbAorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY2xhc3NmbXQvRmllbGRJbmZvV2l0aFR5cGVB
bm5vdGF0aW9uLmphdmEKQEAgLTAsMCArMSw1MyBAQAorLyoqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioK
KyAqIENvcHlyaWdodCAoYykgMjAxMyBWTXdhcmUsIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4K
KyAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWlu
ZyBtYXRlcmlhbHMKKyAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhl
IEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAorICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBk
aXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKKyAqIGh0dHA6Ly93d3cuZWNsaXBzZS5v
cmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBv
ZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQor
ICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0
aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29t
cGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKgorICogQ29udHJp
YnV0b3JzOgorICogICAgICAgIEFuZHkgQ2xlbWVudCAtIENvbnRyaWJ1dGlvbnMgZm9yIEJ1ZyA0
MDcxOTEgLSBbMS44XSBCaW5hcnkgYWNjZXNzIHN1cHBvcnQgZm9yIHR5cGUgYW5ub3RhdGlvbnMK
KyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqLworcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIuY2xhc3NmbXQ7CisKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuZW52LklCaW5hcnlUeXBlQW5ub3RhdGlvbjsKKworcHVibGljIGZpbmFsIGNsYXNz
IEZpZWxkSW5mb1dpdGhUeXBlQW5ub3RhdGlvbiBleHRlbmRzIEZpZWxkSW5mb1dpdGhBbm5vdGF0
aW9uIHsKKwlwcml2YXRlIFR5cGVBbm5vdGF0aW9uSW5mb1tdIHR5cGVBbm5vdGF0aW9uczsKKwor
RmllbGRJbmZvV2l0aFR5cGVBbm5vdGF0aW9uKEZpZWxkSW5mbyBpbmZvLCBBbm5vdGF0aW9uSW5m
b1tdIGFubm9zLCBUeXBlQW5ub3RhdGlvbkluZm9bXSB0eXBlQW5ub3MpIHsKKwlzdXBlcihpbmZv
LCBhbm5vcyk7CisJdGhpcy50eXBlQW5ub3RhdGlvbnMgPSB0eXBlQW5ub3M7Cit9CitwdWJsaWMg
SUJpbmFyeVR5cGVBbm5vdGF0aW9uW10gZ2V0VHlwZUFubm90YXRpb25zKCkgeworCXJldHVybiB0
aGlzLnR5cGVBbm5vdGF0aW9uczsKK30KK3Byb3RlY3RlZCB2b2lkIGluaXRpYWxpemUoKSB7CisJ
Zm9yIChpbnQgaSA9IDAsIG1heCA9IHRoaXMudHlwZUFubm90YXRpb25zLmxlbmd0aDsgaSA8IG1h
eDsgaSsrKQorCQl0aGlzLnR5cGVBbm5vdGF0aW9uc1tpXS5pbml0aWFsaXplKCk7CisJc3VwZXIu
aW5pdGlhbGl6ZSgpOworfQorcHJvdGVjdGVkIHZvaWQgcmVzZXQoKSB7CisJaWYgKHRoaXMudHlw
ZUFubm90YXRpb25zICE9IG51bGwpCisJCWZvciAoaW50IGkgPSAwLCBtYXggPSB0aGlzLnR5cGVB
bm5vdGF0aW9ucy5sZW5ndGg7IGkgPCBtYXg7IGkrKykKKwkJCXRoaXMudHlwZUFubm90YXRpb25z
W2ldLnJlc2V0KCk7CisJc3VwZXIucmVzZXQoKTsKK30KK3B1YmxpYyBTdHJpbmcgdG9TdHJpbmco
KSB7CisJU3RyaW5nQnVmZmVyIGJ1ZmZlciA9IG5ldyBTdHJpbmdCdWZmZXIoZ2V0Q2xhc3MoKS5n
ZXROYW1lKCkpOworCWlmICh0aGlzLnR5cGVBbm5vdGF0aW9ucyAhPSBudWxsKSB7CisJCWJ1ZmZl
ci5hcHBlbmQoJ1xuJyk7CisJCWJ1ZmZlci5hcHBlbmQoInR5cGUgYW5ub3RhdGlvbnM6Iik7IC8v
JE5PTi1OTFMtMSQKKwkJZm9yIChpbnQgaSA9IDA7IGkgPCB0aGlzLnR5cGVBbm5vdGF0aW9ucy5s
ZW5ndGg7IGkrKykgeworCQkJYnVmZmVyLmFwcGVuZCh0aGlzLnR5cGVBbm5vdGF0aW9uc1tpXSk7
CisJCQlidWZmZXIuYXBwZW5kKCdcbicpOworCQl9CisJfQorCXRvU3RyaW5nQ29udGVudChidWZm
ZXIpOworCXJldHVybiBidWZmZXIudG9TdHJpbmcoKTsKK30KK30KZGlmZiAtLWdpdCBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9jbGFzc2ZtdC9NZXRob2RJbmZvLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY2xhc3NmbXQvTWV0aG9kSW5mby5q
YXZhCmluZGV4IDg4ZDYwYWMuLjMxNDIyYzMgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jbGFzc2ZtdC9N
ZXRob2RJbmZvLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NsYXNzZm10L01ldGhvZEluZm8uamF2YQpAQCAt
MSwxMyArMSwxOCBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykg
MjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykg
MjAwMCwgMjAxMSwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdo
dHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMK
ICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVi
bGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24s
IGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBs
LXYxMC5odG1sCiAgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1k
cmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5
IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFs
dWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRo
IGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKgogICogQ29udHJpYnV0b3JzOgogICog
ICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgogICog
ICAgIFN0ZXBoYW4gSGVycm1hbm4gLSBDb250cmlidXRpb24gZm9yIGJ1ZyAxODYzNDIgLSBbY29t
cGlsZXJdW251bGxdIFVzaW5nIGFubm90YXRpb25zIGZvciBudWxsIGNoZWNraW5nCisgKiAgICAg
ICAgQW5keSBDbGVtZW50IC0gQ29udHJpYnV0aW9ucyBmb3IgQnVnIDQwNzE5MSAtIFsxLjhdIEJp
bmFyeSBhY2Nlc3Mgc3VwcG9ydCBmb3IgdHlwZSBhbm5vdGF0aW9ucwogICoqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jbGFz
c2ZtdDsKIApAQCAtMTYsNiArMjEsNyBAQCBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmNvZGVnZW4uQXR0cmlidXRlTmFtZXNDb25zdGFudHM7CiBpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNvZGVnZW4uQ29uc3RhbnRQb29sOwogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuSUJpbmFyeUFubm90YXRpb247
CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5JQmluYXJ5TWV0
aG9kOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuSUJpbmFy
eVR5cGVBbm5vdGF0aW9uOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci51dGlsLlV0aWw7CiAKIHB1YmxpYyBjbGFzcyBNZXRob2RJbmZvIGV4dGVuZHMgQ2xhc3NGaWxl
U3RydWN0IGltcGxlbWVudHMgSUJpbmFyeU1ldGhvZCwgQ29tcGFyYWJsZSB7CkBAIC0zOCw2ICs0
NCw3IEBAIHB1YmxpYyBzdGF0aWMgTWV0aG9kSW5mbyBjcmVhdGVNZXRob2QoYnl0ZSBjbGFzc0Zp
bGVCeXRlc1tdLCBpbnQgb2Zmc2V0c1tdLCBpbnQKIAlpbnQgcmVhZE9mZnNldCA9IDg7CiAJQW5u
b3RhdGlvbkluZm9bXSBhbm5vdGF0aW9ucyA9IG51bGw7CiAJQW5ub3RhdGlvbkluZm9bXVtdIHBh
cmFtZXRlckFubm90YXRpb25zID0gbnVsbDsKKwlUeXBlQW5ub3RhdGlvbkluZm9bXSB0eXBlQW5u
b3RhdGlvbnMgPSBudWxsOwogCWZvciAoaW50IGkgPSAwOyBpIDwgYXR0cmlidXRlc0NvdW50OyBp
KyspIHsKIAkJLy8gY2hlY2sgdGhlIG5hbWUgb2YgZWFjaCBhdHRyaWJ1dGUKIAkJaW50IHV0ZjhP
ZmZzZXQgPSBtZXRob2RJbmZvLmNvbnN0YW50UG9vbE9mZnNldHNbbWV0aG9kSW5mby51MkF0KHJl
YWRPZmZzZXQpXSAtIG1ldGhvZEluZm8uc3RydWN0T2Zmc2V0OwpAQCAtNTEsNiArNTgsNyBAQCBw
dWJsaWMgc3RhdGljIE1ldGhvZEluZm8gY3JlYXRlTWV0aG9kKGJ5dGUgY2xhc3NGaWxlQnl0ZXNb
XSwgaW50IG9mZnNldHNbXSwgaW50CiAJCQkJY2FzZSAnUicgOgogCQkJCQlBbm5vdGF0aW9uSW5m
b1tdIG1ldGhvZEFubm90YXRpb25zID0gbnVsbDsKIAkJCQkJQW5ub3RhdGlvbkluZm9bXVtdIHBh
cmFtQW5ub3RhdGlvbnMgPSBudWxsOworCQkJCQlUeXBlQW5ub3RhdGlvbkluZm9bXSBtZXRob2RU
eXBlQW5ub3RhdGlvbnMgPSBudWxsOwogCQkJCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoYXR0
cmlidXRlTmFtZSwgQXR0cmlidXRlTmFtZXNDb25zdGFudHMuUnVudGltZVZpc2libGVBbm5vdGF0
aW9uc05hbWUpKSB7CiAJCQkJCQltZXRob2RBbm5vdGF0aW9ucyA9IGRlY29kZU1ldGhvZEFubm90
YXRpb25zKHJlYWRPZmZzZXQsIHRydWUsIG1ldGhvZEluZm8pOwogCQkJCQl9IGVsc2UgaWYgKENo
YXJPcGVyYXRpb24uZXF1YWxzKGF0dHJpYnV0ZU5hbWUsIEF0dHJpYnV0ZU5hbWVzQ29uc3RhbnRz
LlJ1bnRpbWVJbnZpc2libGVBbm5vdGF0aW9uc05hbWUpKSB7CkBAIC01OSw2ICs2NywxMCBAQCBw
dWJsaWMgc3RhdGljIE1ldGhvZEluZm8gY3JlYXRlTWV0aG9kKGJ5dGUgY2xhc3NGaWxlQnl0ZXNb
XSwgaW50IG9mZnNldHNbXSwgaW50CiAJCQkJCQlwYXJhbUFubm90YXRpb25zID0gZGVjb2RlUGFy
YW1Bbm5vdGF0aW9ucyhyZWFkT2Zmc2V0LCB0cnVlLCBtZXRob2RJbmZvKTsKIAkJCQkJfSBlbHNl
IGlmIChDaGFyT3BlcmF0aW9uLmVxdWFscyhhdHRyaWJ1dGVOYW1lLCBBdHRyaWJ1dGVOYW1lc0Nv
bnN0YW50cy5SdW50aW1lSW52aXNpYmxlUGFyYW1ldGVyQW5ub3RhdGlvbnNOYW1lKSkgewogCQkJ
CQkJcGFyYW1Bbm5vdGF0aW9ucyA9IGRlY29kZVBhcmFtQW5ub3RhdGlvbnMocmVhZE9mZnNldCwg
ZmFsc2UsIG1ldGhvZEluZm8pOworCQkJCQl9IGVsc2UgaWYgKENoYXJPcGVyYXRpb24uZXF1YWxz
KGF0dHJpYnV0ZU5hbWUsIEF0dHJpYnV0ZU5hbWVzQ29uc3RhbnRzLlJ1bnRpbWVWaXNpYmxlVHlw
ZUFubm90YXRpb25zTmFtZSkpIHsKKwkJCQkJCW1ldGhvZFR5cGVBbm5vdGF0aW9ucyA9IGRlY29k
ZVR5cGVBbm5vdGF0aW9ucyhyZWFkT2Zmc2V0LCB0cnVlLCBtZXRob2RJbmZvKTsKKwkJCQkJfSBl
bHNlIGlmIChDaGFyT3BlcmF0aW9uLmVxdWFscyhhdHRyaWJ1dGVOYW1lLCBBdHRyaWJ1dGVOYW1l
c0NvbnN0YW50cy5SdW50aW1lSW52aXNpYmxlVHlwZUFubm90YXRpb25zTmFtZSkpIHsKKwkJCQkJ
CW1ldGhvZFR5cGVBbm5vdGF0aW9ucyA9IGRlY29kZVR5cGVBbm5vdGF0aW9ucyhyZWFkT2Zmc2V0
LCBmYWxzZSwgbWV0aG9kSW5mbyk7CiAJCQkJCX0KIAkJCQkJaWYgKG1ldGhvZEFubm90YXRpb25z
ICE9IG51bGwpIHsKIAkJCQkJCWlmIChhbm5vdGF0aW9ucyA9PSBudWxsKSB7CkBAIC05MCw2ICsx
MDIsMTYgQEAgcHVibGljIHN0YXRpYyBNZXRob2RJbmZvIGNyZWF0ZU1ldGhvZChieXRlIGNsYXNz
RmlsZUJ5dGVzW10sIGludCBvZmZzZXRzW10sIGludAogCQkJCQkJCQl9CiAJCQkJCQkJfQogCQkJ
CQkJfQorCQkJCQl9IGVsc2UgaWYgKG1ldGhvZFR5cGVBbm5vdGF0aW9ucyAhPSBudWxsKSB7CisJ
CQkJCQlpZiAodHlwZUFubm90YXRpb25zID09IG51bGwpIHsKKwkJCQkJCQl0eXBlQW5ub3RhdGlv
bnMgPSBtZXRob2RUeXBlQW5ub3RhdGlvbnM7CisJCQkJCQl9IGVsc2UgeworCQkJCQkJCWludCBs
ZW5ndGggPSB0eXBlQW5ub3RhdGlvbnMubGVuZ3RoOworCQkJCQkJCVR5cGVBbm5vdGF0aW9uSW5m
b1tdIG5ld0Fubm90YXRpb25zID0gbmV3IFR5cGVBbm5vdGF0aW9uSW5mb1tsZW5ndGggKyBtZXRo
b2RUeXBlQW5ub3RhdGlvbnMubGVuZ3RoXTsKKwkJCQkJCQlTeXN0ZW0uYXJyYXljb3B5KHR5cGVB
bm5vdGF0aW9ucywgMCwgbmV3QW5ub3RhdGlvbnMsIDAsIGxlbmd0aCk7CisJCQkJCQkJU3lzdGVt
LmFycmF5Y29weShtZXRob2RUeXBlQW5ub3RhdGlvbnMsIDAsIG5ld0Fubm90YXRpb25zLCBsZW5n
dGgsIG1ldGhvZFR5cGVBbm5vdGF0aW9ucy5sZW5ndGgpOworCQkJCQkJCXR5cGVBbm5vdGF0aW9u
cyA9IG5ld0Fubm90YXRpb25zOworCQkJCQkJfQogCQkJCQl9CiAJCQkJCWJyZWFrOwogCQkJfQpA
QCAtOTgsNiArMTIwLDggQEAgcHVibGljIHN0YXRpYyBNZXRob2RJbmZvIGNyZWF0ZU1ldGhvZChi
eXRlIGNsYXNzRmlsZUJ5dGVzW10sIGludCBvZmZzZXRzW10sIGludAogCX0KIAltZXRob2RJbmZv
LmF0dHJpYnV0ZUJ5dGVzID0gcmVhZE9mZnNldDsKIAorCWlmICh0eXBlQW5ub3RhdGlvbnMgIT0g
bnVsbCkKKwkJcmV0dXJuIG5ldyBNZXRob2RJbmZvV2l0aFR5cGVBbm5vdGF0aW9ucyhtZXRob2RJ
bmZvLCBhbm5vdGF0aW9ucywgcGFyYW1ldGVyQW5ub3RhdGlvbnMsIHR5cGVBbm5vdGF0aW9ucyk7
CiAJaWYgKHBhcmFtZXRlckFubm90YXRpb25zICE9IG51bGwpCiAJCXJldHVybiBuZXcgTWV0aG9k
SW5mb1dpdGhQYXJhbWV0ZXJBbm5vdGF0aW9ucyhtZXRob2RJbmZvLCBhbm5vdGF0aW9ucywgcGFy
YW1ldGVyQW5ub3RhdGlvbnMpOwogCWlmIChhbm5vdGF0aW9ucyAhPSBudWxsKQpAQCAtMTQ2LDYg
KzE3MCwyMCBAQCBzdGF0aWMgQW5ub3RhdGlvbkluZm9bXSBkZWNvZGVNZXRob2RBbm5vdGF0aW9u
cyhpbnQgb2Zmc2V0LCBib29sZWFuIHJ1bnRpbWVWaXNpYgogCX0KIAlyZXR1cm4gbnVsbDsKIH0K
K3N0YXRpYyBUeXBlQW5ub3RhdGlvbkluZm9bXSBkZWNvZGVUeXBlQW5ub3RhdGlvbnMoaW50IG9m
ZnNldCwgYm9vbGVhbiBydW50aW1lVmlzaWJsZSwgTWV0aG9kSW5mbyBtZXRob2RJbmZvKSB7CisJ
aW50IG51bWJlck9mQW5ub3RhdGlvbnMgPSBtZXRob2RJbmZvLnUyQXQob2Zmc2V0ICsgNik7CisJ
aWYgKG51bWJlck9mQW5ub3RhdGlvbnMgPiAwKSB7CisJCWludCByZWFkT2Zmc2V0ID0gb2Zmc2V0
ICsgODsKKwkJVHlwZUFubm90YXRpb25JbmZvW10gdHlwZUFubm9zID0gbmV3IFR5cGVBbm5vdGF0
aW9uSW5mb1tudW1iZXJPZkFubm90YXRpb25zXTsKKwkJZm9yIChpbnQgaSA9IDA7IGkgPCBudW1i
ZXJPZkFubm90YXRpb25zOyBpKyspIHsKKwkJCVR5cGVBbm5vdGF0aW9uSW5mbyBuZXdJbmZvID0g
bmV3IFR5cGVBbm5vdGF0aW9uSW5mbyhtZXRob2RJbmZvLnJlZmVyZW5jZSwgbWV0aG9kSW5mby5j
b25zdGFudFBvb2xPZmZzZXRzLCByZWFkT2Zmc2V0ICsgbWV0aG9kSW5mby5zdHJ1Y3RPZmZzZXQs
IHJ1bnRpbWVWaXNpYmxlLCBmYWxzZSk7CisJCQlyZWFkT2Zmc2V0ICs9IG5ld0luZm8ucmVhZE9m
ZnNldDsKKwkJCXR5cGVBbm5vc1tpXSA9IG5ld0luZm87CisJCX0KKwkJcmV0dXJuIHR5cGVBbm5v
czsKKwl9CisJcmV0dXJuIG51bGw7Cit9CiBzdGF0aWMgQW5ub3RhdGlvbkluZm9bXVtdIGRlY29k
ZVBhcmFtQW5ub3RhdGlvbnMoaW50IG9mZnNldCwgYm9vbGVhbiBydW50aW1lVmlzaWJsZSwgTWV0
aG9kSW5mbyBtZXRob2RJbmZvKSB7CiAJQW5ub3RhdGlvbkluZm9bXVtdIGFsbFBhcmFtQW5ub3Rh
dGlvbnMgPSBudWxsOwogCWludCBudW1iZXJPZlBhcmFtZXRlcnMgPSBtZXRob2RJbmZvLnUxQXQo
b2Zmc2V0ICsgNik7CkBAIC0yNzQsNiArMzEyLDkgQEAgcHVibGljIElCaW5hcnlBbm5vdGF0aW9u
W10gZ2V0UGFyYW1ldGVyQW5ub3RhdGlvbnMoaW50IGluZGV4KSB7CiBwdWJsaWMgaW50IGdldEFu
bm90YXRlZFBhcmFtZXRlcnNDb3VudCgpIHsKIAlyZXR1cm4gMDsKIH0KK3B1YmxpYyBJQmluYXJ5
VHlwZUFubm90YXRpb25bXSBnZXRUeXBlQW5ub3RhdGlvbnMoKSB7CisJcmV0dXJuIG51bGw7Cit9
CiAvKioKICAqIEFuc3dlciB0aGUgbmFtZSBvZiB0aGUgbWV0aG9kLgogICoKZGlmZiAtLWdpdCBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9jbGFzc2ZtdC9NZXRob2RJbmZvV2l0aFR5cGVBbm5vdGF0aW9ucy5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2NsYXNzZm10L01ldGhvZEluZm9XaXRoVHlwZUFubm90YXRpb25zLmphdmEKbmV3IGZpbGUg
bW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMC4uYTkzZjBjOAotLS0gL2Rldi9udWxsCisrKyBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9jbGFzc2ZtdC9NZXRob2RJbmZvV2l0aFR5cGVBbm5vdGF0aW9ucy5qYXZhCkBAIC0wLDAg
KzEsNTAgQEAKKy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCisgKiBDb3B5cmlnaHQgKGMpIDIwMTMg
Vk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuCisgKiBBbGwgcmlnaHRzIHJlc2VydmVk
LiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCisgKiBhcmUgbWFk
ZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNl
IHYxLjAKKyAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZh
aWxhYmxlIGF0CisgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAor
ICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lm
aWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChK
Q1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJw
b3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lm
aWNhdGlvbiBvZiB0aGUgSkNQLgorICoKKyAqIENvbnRyaWJ1dG9yczoKKyAqICAgICAgICBBbmR5
IENsZW1lbnQgLSBDb250cmlidXRpb25zIGZvciBCdWcgNDA3MTkxIC0gWzEuOF0gQmluYXJ5IGFj
Y2VzcyBzdXBwb3J0IGZvciB0eXBlIGFubm90YXRpb25zCisgKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
Ki8KK3BhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNsYXNzZm10Owor
CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5JQmluYXJ5VHlw
ZUFubm90YXRpb247CisKK2NsYXNzIE1ldGhvZEluZm9XaXRoVHlwZUFubm90YXRpb25zIGV4dGVu
ZHMgTWV0aG9kSW5mb1dpdGhQYXJhbWV0ZXJBbm5vdGF0aW9ucyB7CisJcHJpdmF0ZSBUeXBlQW5u
b3RhdGlvbkluZm9bXSB0eXBlQW5ub3RhdGlvbnM7CisKK01ldGhvZEluZm9XaXRoVHlwZUFubm90
YXRpb25zKE1ldGhvZEluZm8gbWV0aG9kSW5mbywgQW5ub3RhdGlvbkluZm9bXSBhbm5vdGF0aW9u
cywgQW5ub3RhdGlvbkluZm9bXVtdIHBhcmFtZXRlckFubm90YXRpb25zLCBUeXBlQW5ub3RhdGlv
bkluZm9bXSB0eXBlQW5ub3RhdGlvbnMpIHsKKwlzdXBlcihtZXRob2RJbmZvLCBhbm5vdGF0aW9u
cywgcGFyYW1ldGVyQW5ub3RhdGlvbnMpOworCXRoaXMudHlwZUFubm90YXRpb25zID0gdHlwZUFu
bm90YXRpb25zOworfQorcHVibGljIElCaW5hcnlUeXBlQW5ub3RhdGlvbltdIGdldFR5cGVBbm5v
dGF0aW9ucygpIHsKKwlyZXR1cm4gdGhpcy50eXBlQW5ub3RhdGlvbnM7Cit9CisKK3Byb3RlY3Rl
ZCB2b2lkIGluaXRpYWxpemUoKSB7CisJZm9yIChpbnQgaSA9IDAsIGwgPSB0aGlzLnR5cGVBbm5v
dGF0aW9ucyA9PSBudWxsID8gMCA6IHRoaXMudHlwZUFubm90YXRpb25zLmxlbmd0aDsgaSA8IGw7
IGkrKykgeworCQl0aGlzLnR5cGVBbm5vdGF0aW9uc1tpXS5pbml0aWFsaXplKCk7CisJfQorCXN1
cGVyLmluaXRpYWxpemUoKTsKK30KK3Byb3RlY3RlZCB2b2lkIHJlc2V0KCkgeworCWZvciAoaW50
IGkgPSAwLCBsID0gdGhpcy50eXBlQW5ub3RhdGlvbnMgPT0gbnVsbCA/IDAgOiB0aGlzLnR5cGVB
bm5vdGF0aW9ucy5sZW5ndGg7IGkgPCBsOyBpKyspIHsKKwkJdGhpcy50eXBlQW5ub3RhdGlvbnNb
aV0ucmVzZXQoKTsKKwl9CisJc3VwZXIucmVzZXQoKTsKK30KK3Byb3RlY3RlZCB2b2lkIHRvU3Ry
aW5nQ29udGVudChTdHJpbmdCdWZmZXIgYnVmZmVyKSB7CisJc3VwZXIudG9TdHJpbmdDb250ZW50
KGJ1ZmZlcik7CisJYnVmZmVyLmFwcGVuZCgidHlwZSBhbm5vdGF0aW9ucyA9IFxuIik7Ly8kTk9O
LU5MUy0xJAorCWZvciAoaW50IGkgPSAwLCBsID0gdGhpcy50eXBlQW5ub3RhdGlvbnMgPT0gbnVs
bCA/IDAgOiB0aGlzLnR5cGVBbm5vdGF0aW9ucy5sZW5ndGg7IGkgPCBsOyBpKyspIHsKKwkJYnVm
ZmVyLmFwcGVuZCh0aGlzLnR5cGVBbm5vdGF0aW9uc1tpXS50b1N0cmluZygpKTsKKwkJYnVmZmVy
LmFwcGVuZCgnXG4nKTsKKwl9Cit9Cit9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY2xhc3NmbXQvVHlw
ZUFubm90YXRpb25JbmZvLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY2xhc3NmbXQvVHlwZUFubm90YXRpb25JbmZv
LmphdmEKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMC4uMzM0YzQzMgotLS0gL2Rl
di9udWxsCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9jbGFzc2ZtdC9UeXBlQW5ub3RhdGlvbkluZm8uamF2YQpAQCAt
MCwwICsxLDIzNCBAQAorLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKyAqIENvcHlyaWdodCAoYykg
MjAxMyBWTXdhcmUsIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4KKyAqIEFsbCByaWdodHMgcmVz
ZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKKyAqIGFy
ZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExp
Y2Vuc2UgdjEuMAorICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBp
cyBhdmFpbGFibGUgYXQKKyAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5o
dG1sCisgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBz
cGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nl
c3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9u
IHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBz
cGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKgorICogQ29udHJpYnV0b3JzOgorICogICAgICAg
IEFuZHkgQ2xlbWVudCAtIENvbnRyaWJ1dGlvbnMgZm9yIEJ1ZyA0MDcxOTEgLSBbMS44XSBCaW5h
cnkgYWNjZXNzIHN1cHBvcnQgZm9yIHR5cGUgYW5ub3RhdGlvbnMKKyAqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqLworcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuY2xhc3Nm
bXQ7CisKK2ltcG9ydCBqYXZhLnV0aWwuQXJyYXlzOworCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLmNvZGVnZW4uQW5ub3RhdGlvblRhcmdldFR5cGVDb25zdGFudHM7
CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5JQmluYXJ5QW5u
b3RhdGlvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklC
aW5hcnlUeXBlQW5ub3RhdGlvbjsKKworcHVibGljIGNsYXNzIFR5cGVBbm5vdGF0aW9uSW5mbyBl
eHRlbmRzIENsYXNzRmlsZVN0cnVjdCBpbXBsZW1lbnRzIElCaW5hcnlUeXBlQW5ub3RhdGlvbiB7
CisKKwlwcml2YXRlIEFubm90YXRpb25JbmZvIGFubm90YXRpb247CisJCisJcHJpdmF0ZSBpbnQg
dGFyZ2V0VHlwZSA9IDA7CisJCisJLy8gaW5mbyBpcyB1c2VkIGluIGRpZmZlcmVudCB3YXlzOgor
CS8vIFRhcmdldFR5cGUgQ0xBU1NfRVhURU5EUzogc3VwZXJ0eXBlIGluZGV4ICgtMSA9IHN1cGVy
Y2xhc3MsIDAuLk4gc3VwZXJpbnRlcmZhY2UpCisJLy8gVGFyZ2V0VHlwZSBNRVRIT0RfVFlQRV9Q
QVJBTUVURVI6IHR5cGUgcGFyYW1ldGVyIGluZGV4IAorCS8vIFRhcmdldFR5cGUgQ0xBU1NfVFlQ
RV9QQVJBTUVURVI6IHR5cGUgcGFyYW1ldGVyIGluZGV4CisJLy8gVGFyZ2V0VHlwZSBDTEFTU19U
WVBFX1BBUkFNRVRFUl9CT1VORDogdHlwZSBwYXJhbWV0ZXIgaW5kZXgKKwkvLyBUYXJnZXRUeXBl
IE1FVEhPRF9GT1JNQUxfUEFSQU1FVEVSOiBtZXRob2QgZm9ybWFsIHBhcmFtZXRlciBpbmRleAor
CS8vIFRhcmdldFR5cGUgVEhST1dTOiB0aHJvd3MgdHlwZSBpbmRleAorCXByaXZhdGUgaW50IGlu
Zm87CisJCisJLy8gVGFyZ2V0VHlwZSBDTEFTU19UWVBFX1BBUkFNRVRFUl9CT1VORDogYm91bmQg
aW5kZXgKKwlwcml2YXRlIGludCBpbmZvMjsKKwkKKwlwcml2YXRlIGludFtdIHR5cGVQYXRoOyAv
LyBlYWNoIHBhaXIgb2YgaW50cyBpbiB0aGUgYXJyYXkgaXMgYSB0eXBlIHBhdGggZW50cnkKKwkK
KwlpbnQgcmVhZE9mZnNldCA9IDA7CisJCisJCitUeXBlQW5ub3RhdGlvbkluZm8oYnl0ZVtdIGNs
YXNzRmlsZUJ5dGVzLCBpbnRbXSBjb250YW50UG9vbE9mZnNldHMsIGludCBvZmZzZXQpIHsKKwlz
dXBlcihjbGFzc0ZpbGVCeXRlcywgY29udGFudFBvb2xPZmZzZXRzLCBvZmZzZXQpOworfQorCQor
VHlwZUFubm90YXRpb25JbmZvKGJ5dGVbXSBjbGFzc0ZpbGVCeXRlcywgaW50W10gY29udGFudFBv
b2xPZmZzZXRzLCBpbnQgb2Zmc2V0LCBib29sZWFuIHJ1bnRpbWVWaXNpYmxlLCBib29sZWFuIHBv
cHVsYXRlKSB7CisJdGhpcyhjbGFzc0ZpbGVCeXRlcywgY29udGFudFBvb2xPZmZzZXRzLCBvZmZz
ZXQpOworCXRoaXMucmVhZE9mZnNldCA9IDA7CisJdGhpcy50YXJnZXRUeXBlID0gdTFBdCgwKTsK
Kwlzd2l0Y2ggKHRoaXMudGFyZ2V0VHlwZSkgeworCQljYXNlIEFubm90YXRpb25UYXJnZXRUeXBl
Q29uc3RhbnRzLkNMQVNTX1RZUEVfUEFSQU1FVEVSOgorCQljYXNlIEFubm90YXRpb25UYXJnZXRU
eXBlQ29uc3RhbnRzLk1FVEhPRF9UWVBFX1BBUkFNRVRFUjoKKwkJCXRoaXMuaW5mbyA9IHUxQXQo
MSk7IC8vIHR5cGVQYXJhbWV0ZXJJbmRleAorCQkJdGhpcy5yZWFkT2Zmc2V0ICs9IDI7CisJCQli
cmVhazsKKwkJCQorCQljYXNlIEFubm90YXRpb25UYXJnZXRUeXBlQ29uc3RhbnRzLkNMQVNTX0VY
VEVORFM6CisJCQl0aGlzLmluZm8gPSB1MkF0KDEpOyAvLyBzdXBlcnR5cGVJbmRleAorCQkJdGhp
cy5yZWFkT2Zmc2V0ICs9IDM7CisJCQlicmVhazsKKwkJCQorCQljYXNlIEFubm90YXRpb25UYXJn
ZXRUeXBlQ29uc3RhbnRzLkNMQVNTX1RZUEVfUEFSQU1FVEVSX0JPVU5EOgorCQljYXNlIEFubm90
YXRpb25UYXJnZXRUeXBlQ29uc3RhbnRzLk1FVEhPRF9UWVBFX1BBUkFNRVRFUl9CT1VORDoKKwkJ
CXRoaXMuaW5mbyA9IHUxQXQoMSk7IC8vIHR5cGVQYXJhbWV0ZXJJbmRleAorCQkJdGhpcy5pbmZv
MiA9IHUxQXQoMik7IC8vIGJvdW5kSW5kZXg7CisJCQl0aGlzLnJlYWRPZmZzZXQgKz0gMzsKKwkJ
CWJyZWFrOworCQkJCisJCWNhc2UgQW5ub3RhdGlvblRhcmdldFR5cGVDb25zdGFudHMuRklFTEQ6
CisJCWNhc2UgQW5ub3RhdGlvblRhcmdldFR5cGVDb25zdGFudHMuTUVUSE9EX1JFVFVSTjoKKwkJ
Y2FzZSBBbm5vdGF0aW9uVGFyZ2V0VHlwZUNvbnN0YW50cy5NRVRIT0RfUkVDRUlWRVI6CisJCQl0
aGlzLnJlYWRPZmZzZXQgKys7CisJCQlicmVhazsKKwkJCQorCQljYXNlIEFubm90YXRpb25UYXJn
ZXRUeXBlQ29uc3RhbnRzLk1FVEhPRF9GT1JNQUxfUEFSQU1FVEVSIDoKKwkJCXRoaXMuaW5mbyA9
IHUxQXQoMSk7IC8vIG1ldGhvZEZvcm1hbFBhcmFtZXRlckluZGV4CisJCQl0aGlzLnJlYWRPZmZz
ZXQgKz0gMjsKKwkJCWJyZWFrOworCQkJCisJCWNhc2UgQW5ub3RhdGlvblRhcmdldFR5cGVDb25z
dGFudHMuVEhST1dTIDoKKwkJCXRoaXMuaW5mbyA9IHUyQXQoMSk7IC8vIHRocm93c1R5cGVJbmRl
eAorCQkJdGhpcy5yZWFkT2Zmc2V0ICs9IDM7CisJCQlicmVhazsKKworCQlkZWZhdWx0OgorCQkJ
dGhyb3cgbmV3IElsbGVnYWxTdGF0ZUV4Y2VwdGlvbigiVGFyZ2V0IHR5cGUgbm90IGhhbmRsZWQg
Iit0aGlzLnRhcmdldFR5cGUpOyAvLyROT04tTkxTLTEkCisJfQorCWludCB0eXBlUGF0aExlbmd0
aCA9IHUxQXQodGhpcy5yZWFkT2Zmc2V0KTsKKwl0aGlzLnJlYWRPZmZzZXQgKys7CisJaWYgKHR5
cGVQYXRoTGVuZ3RoID09IDApIHsKKwkJdGhpcy50eXBlUGF0aCA9IE5PX1RZUEVfUEFUSDsKKwl9
IGVsc2UgeworCQl0aGlzLnR5cGVQYXRoID0gbmV3IGludFt0eXBlUGF0aExlbmd0aCoyXTsKKwkJ
aW50IGluZGV4ID0gMDsKKwkJZm9yIChpbnQgaSA9IDA7IGkgPCB0eXBlUGF0aExlbmd0aDsgaSsr
KSB7CisJCQl0aGlzLnR5cGVQYXRoW2luZGV4KytdID0gdTFBdCh0aGlzLnJlYWRPZmZzZXQrKyk7
IC8vIGVudHJ5IGtpbmQKKwkJCXRoaXMudHlwZVBhdGhbaW5kZXgrK10gPSB1MUF0KHRoaXMucmVh
ZE9mZnNldCsrKTsgLy8gdHlwZSBhcmd1bWVudCBpbmRleAorCQl9CisJfQorCXRoaXMuYW5ub3Rh
dGlvbiA9IG5ldyBBbm5vdGF0aW9uSW5mbyhjbGFzc0ZpbGVCeXRlcywgdGhpcy5jb25zdGFudFBv
b2xPZmZzZXRzLCB0aGlzLnN0cnVjdE9mZnNldCArIHRoaXMucmVhZE9mZnNldCwgcnVudGltZVZp
c2libGUsIHBvcHVsYXRlKTsKKwl0aGlzLnJlYWRPZmZzZXQgKz0gdGhpcy5hbm5vdGF0aW9uLnJl
YWRPZmZzZXQ7Cit9CisKK3B1YmxpYyBJQmluYXJ5QW5ub3RhdGlvbiBnZXRBbm5vdGF0aW9uKCkg
eworCXJldHVybiB0aGlzLmFubm90YXRpb247Cit9CisKK3Byb3RlY3RlZCB2b2lkIGluaXRpYWxp
emUoKSB7CisJdGhpcy5hbm5vdGF0aW9uLmluaXRpYWxpemUoKTsKK30KKworcHJvdGVjdGVkIHZv
aWQgcmVzZXQoKSB7CisJdGhpcy5hbm5vdGF0aW9uLnJlc2V0KCk7CisJc3VwZXIucmVzZXQoKTsK
K30KKworcHVibGljIFN0cmluZyB0b1N0cmluZygpIHsKKwlTdHJpbmdCdWZmZXIgYnVmZmVyID0g
bmV3IFN0cmluZ0J1ZmZlcigpOworCWJ1ZmZlci5hcHBlbmQodGhpcy5hbm5vdGF0aW9uKTsKKwli
dWZmZXIuYXBwZW5kKCcgJyk7CisJLy8gTm90IGZ1bGx5IGRlY29kaW5nIGl0IGhlcmUsIGp1c3Qg
aW5jbHVkaW5nIGFsbCB0aGUgaW5mb3JtYXRpb24gaW4gdGhlIHN0cmluZworCWJ1ZmZlci5hcHBl
bmQoInRhcmdldF90eXBlPSIpLmFwcGVuZCh0aGlzLnRhcmdldFR5cGUpOyAvLyROT04tTkxTLTEk
CisJYnVmZmVyLmFwcGVuZCgiLCBpbmZvPSIpLmFwcGVuZCh0aGlzLmluZm8pOyAvLyROT04tTkxT
LTEkCisJYnVmZmVyLmFwcGVuZCgiLCBpbmZvMj0iKS5hcHBlbmQodGhpcy5pbmZvMik7IC8vJE5P
Ti1OTFMtMSQKKwlpZiAodGhpcy50eXBlUGF0aCAhPSBOT19UWVBFX1BBVEgpIHsKKwkJYnVmZmVy
LmFwcGVuZCgiLCBsb2NhdGlvbj1bIik7IC8vJE5PTi1OTFMtMSQKKwkJZm9yIChpbnQgaSA9IDAs
IG1heCA9IHRoaXMudHlwZVBhdGgubGVuZ3RoOyBpIDwgbWF4OyBpICs9IDIpIHsKKwkJCWlmIChp
ID4gMCkgeworCQkJCWJ1ZmZlci5hcHBlbmQoIiwgIik7IC8vJE5PTi1OTFMtMSQKKwkJCX0KKwkJ
CXN3aXRjaCAodGhpcy50eXBlUGF0aFtpXSkgeworCQkJCWNhc2UgMDoKKwkJCQkJYnVmZmVyLmFw
cGVuZCgiQVJSQVkiKTsgLy8kTk9OLU5MUy0xJAorCQkJCQlicmVhazsKKwkJCQljYXNlIDE6CisJ
CQkJCWJ1ZmZlci5hcHBlbmQoIklOTkVSX1RZUEUiKTsgLy8kTk9OLU5MUy0xJAorCQkJCQlicmVh
azsKKwkJCQljYXNlIDI6CisJCQkJCWJ1ZmZlci5hcHBlbmQoIldJTERDQVJEIik7IC8vJE5PTi1O
TFMtMSQKKwkJCQkJYnJlYWs7CisJCQkJY2FzZSAzOgorCQkJCQlidWZmZXIuYXBwZW5kKCJUWVBF
X0FSR1VNRU5UKCIpLmFwcGVuZCh0aGlzLnR5cGVQYXRoW2krMV0pLmFwcGVuZCgnKScpOyAvLyRO
T04tTkxTLTEkCisJCQkJCWJyZWFrOworCQkJfQorCQl9CisJCWJ1ZmZlci5hcHBlbmQoJ10nKTsK
Kwl9CisJcmV0dXJuIGJ1ZmZlci50b1N0cmluZygpOworfQorCisKK3B1YmxpYyBpbnQgZ2V0VGFy
Z2V0VHlwZSgpIHsKKwlyZXR1cm4gdGhpcy50YXJnZXRUeXBlOworfQorCitwdWJsaWMgaW50IGdl
dFN1cGVydHlwZUluZGV4KCkgeworCS8vIGFzc2VydCB0aGlzLnRhcmdldFR5cGUgPT0gMHgxMAor
CXJldHVybiB0aGlzLmluZm87Cit9CisKK3B1YmxpYyBpbnQgZ2V0VHlwZVBhcmFtZXRlckluZGV4
KCkgeworCS8vIGFzc2VydCB0aGlzLnRhcmdldFR5cGUgPT0gMHgwMCBvciAweDAxCisJcmV0dXJu
IHRoaXMuaW5mbzsKK30KKworcHVibGljIGludCBnZXRCb3VuZEluZGV4KCkgeworCS8vIGFzc2Vy
dCB0aGlzLnRhcmdldFR5cGUgPT0gMHgxMSBvciAweDEyCisJcmV0dXJuIHRoaXMuaW5mbzI7Cit9
CisKK3B1YmxpYyBpbnQgZ2V0TWV0aG9kRm9ybWFsUGFyYW1ldGVySW5kZXgoKSB7CisJLy8gYXNz
ZXJ0IHRoaXMudGFyZ2V0VHlwZSA9PSAweDE2CisJcmV0dXJuIHRoaXMuaW5mbzsKK30KKworcHVi
bGljIGludCBnZXRUaHJvd3NUeXBlSW5kZXgoKSB7CisJLy8gYXNzZXJ0IHRoaXMudGFyZ2V0VHlw
ZSA9PSAweDE3CisJcmV0dXJuIHRoaXMuaW5mbzsKK30KKworcHVibGljIGludFtdIGdldFR5cGVQ
YXRoKCkgeworCXJldHVybiB0aGlzLnR5cGVQYXRoOworfQorCitwdWJsaWMgaW50IGhhc2hDb2Rl
KCkgeworCWZpbmFsIGludCBwcmltZSA9IDMxOworCWludCByZXN1bHQgPSAxOworCXJlc3VsdCA9
IHByaW1lICogcmVzdWx0ICsgdGhpcy50YXJnZXRUeXBlOworCXJlc3VsdCA9IHByaW1lICogcmVz
dWx0ICsgdGhpcy5pbmZvOworCXJlc3VsdCA9IHByaW1lICogcmVzdWx0ICsgdGhpcy5pbmZvMjsK
KwlpZiAodGhpcy50eXBlUGF0aCAhPSBudWxsKSB7CisJCWZvciAoaW50IGkgPSAwLCBtYXggPSB0
aGlzLnR5cGVQYXRoLmxlbmd0aDsgaSA8IG1heDsgaSsrKSB7CisJCQlyZXN1bHQgPSBwcmltZSAq
IHJlc3VsdCArIHRoaXMudHlwZVBhdGhbaV07CisJCX0KKwl9CisJcmV0dXJuIHJlc3VsdDsKK30K
KworcHVibGljIGJvb2xlYW4gZXF1YWxzKE9iamVjdCBvYmopIHsKKwlpZiAodGhpcyA9PSBvYmop
IHsKKwkJcmV0dXJuIHRydWU7CisJfQorCWlmIChvYmogPT0gbnVsbCkgeworCQlyZXR1cm4gZmFs
c2U7CisJfQorCWlmIChnZXRDbGFzcygpICE9IG9iai5nZXRDbGFzcygpKSB7CisJCXJldHVybiBm
YWxzZTsKKwl9CisKKwlUeXBlQW5ub3RhdGlvbkluZm8gb3RoZXIgPSAoVHlwZUFubm90YXRpb25J
bmZvKSBvYmo7CisKKwlpZiAodGhpcy50YXJnZXRUeXBlICE9IG90aGVyLnRhcmdldFR5cGUpIHsK
KwkJcmV0dXJuIGZhbHNlOworCX0KKwkKKwlpZiAodGhpcy5pbmZvICE9IG90aGVyLmluZm8pIHsK
KwkJcmV0dXJuIGZhbHNlOworCX0KKworCWlmICh0aGlzLmluZm8yICE9IG90aGVyLmluZm8yKSB7
CisJCXJldHVybiBmYWxzZTsKKwl9CisJCisJaWYgKCFBcnJheXMuZXF1YWxzKHRoaXMudHlwZVBh
dGgsIG90aGVyLnR5cGVQYXRoKSkgeworCQlyZXR1cm4gZmFsc2U7CisJfQorCQorCXJldHVybiB0
aGlzLmFubm90YXRpb24uZXF1YWxzKG90aGVyLmFubm90YXRpb24pOworfQorfQpkaWZmIC0tZ2l0
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2Vudi9JQmluYXJ5RmllbGQuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9lbnYvSUJpbmFyeUZpZWxk
LmphdmEKaW5kZXggNGU5YjU2Ni4uYWU2M2MzZCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Vudi9JQmlu
YXJ5RmllbGQuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZW52L0lCaW5hcnlGaWVsZC5qYXZhCkBAIC0xLDEy
ICsxLDE3IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDA5IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDA5LCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyBy
ZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICog
YXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMg
TGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5k
IGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEw
Lmh0bWwKICAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0
IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJv
Y2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRp
b24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55
IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqIAogICogQ29udHJpYnV0b3JzOgogICogICAg
IElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgorICogICAg
ICAgIEFuZHkgQ2xlbWVudCAtIENvbnRyaWJ1dGlvbnMgZm9yIEJ1ZyA0MDcxOTEgLSBbMS44XSBC
aW5hcnkgYWNjZXNzIHN1cHBvcnQgZm9yIHR5cGUgYW5ub3RhdGlvbnMKICAqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52
OwogCkBAIC0xOSw2ICsyNCwxMSBAQCBwdWJsaWMgaW50ZXJmYWNlIElCaW5hcnlGaWVsZCBleHRl
bmRzIElHZW5lcmljRmllbGQgewogSUJpbmFyeUFubm90YXRpb25bXSBnZXRBbm5vdGF0aW9ucygp
OwogCiAvKioKKyAqIEFuc3dlciB0aGUgcnVudGltZSB2aXNpYmxlIGFuZCBpbnZpc2libGUgdHlw
ZSBhbm5vdGF0aW9ucyBmb3IgdGhpcyBmaWVsZCBvciBudWxsIGlmIG5vbmUuCisgKi8KK0lCaW5h
cnlUeXBlQW5ub3RhdGlvbltdIGdldFR5cGVBbm5vdGF0aW9ucygpOworCisvKioKICAqCiAgKiBA
cmV0dXJuIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5Db25zdGFudAogICovCmRp
ZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvZW52L0lCaW5hcnlNZXRob2QuamF2YSBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9lbnYvSUJp
bmFyeU1ldGhvZC5qYXZhCmluZGV4IDE3N2FlMjQuLjBmNmIzNWYgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9lbnYvSUJpbmFyeU1ldGhvZC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9lbnYvSUJpbmFyeU1ldGhvZC5q
YXZhCkBAIC0xLDEzICsxLDE4IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDExLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICog
QWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1h
dGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNs
aXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3Ry
aWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9s
ZWdhbC9lcGwtdjEwLmh0bWwKICAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFu
IGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBD
b21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3Rpbmcg
YW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRp
YmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqIAogICogQ29udHJpYnV0
b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRh
dGlvbgogICogICAgIFN0ZXBoYW4gSGVycm1hbm4gLSBDb250cmlidXRpb24gZm9yIGJ1ZyAxODYz
NDIgLSBbY29tcGlsZXJdW251bGxdIFVzaW5nIGFubm90YXRpb25zIGZvciBudWxsIGNoZWNraW5n
CisgKiAgICAgICAgQW5keSBDbGVtZW50IC0gQ29udHJpYnV0aW9ucyBmb3IgQnVnIDQwNzE5MSAt
IFsxLjhdIEJpbmFyeSBhY2Nlc3Mgc3VwcG9ydCBmb3IgdHlwZSBhbm5vdGF0aW9ucwogICoqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5lbnY7CiAKQEAgLTg5LDQgKzk0LDkgQEAgbG9uZyBnZXRUYWdCaXRzKCk7CiAgKiBBbnN3
ZXIgd2hldGhlciB0aGUgcmVjZWl2ZXIgcmVwcmVzZW50cyBhIGNsYXNzIGluaXRpYWxpemVyIG1l
dGhvZC4KICAqLwogYm9vbGVhbiBpc0NsaW5pdCgpOworCisvKioKKyAqIEFuc3dlciB0aGUgdHlw
ZSBhbm5vdGF0aW9ucyBvbiB0aGlzIG1ldGhvZC4KKyAqLworSUJpbmFyeVR5cGVBbm5vdGF0aW9u
W10gZ2V0VHlwZUFubm90YXRpb25zKCk7CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZW52L0lCaW5h
cnlUeXBlQW5ub3RhdGlvbi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Vudi9JQmluYXJ5VHlwZUFubm90YXRpb24u
amF2YQpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwLi4zZDg4YTgxCi0tLSAvZGV2
L251bGwKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2Vudi9JQmluYXJ5VHlwZUFubm90YXRpb24uamF2YQpAQCAtMCww
ICsxLDc3IEBACisvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgorICogQ29weXJpZ2h0IChjKSAyMDEz
IFZNd2FyZSwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLgorICogQWxsIHJpZ2h0cyByZXNlcnZl
ZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscworICogYXJlIG1h
ZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5z
ZSB2MS4wCisgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2
YWlsYWJsZSBhdAorICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwK
KyAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNp
ZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAo
SkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVy
cG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNp
ZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqCisgKiBDb250cmlidXRvcnM6CisgKiAgICAgICAgQW5k
eSBDbGVtZW50IC0gQ29udHJpYnV0aW9ucyBmb3IgQnVnIDQwNzE5MSAtIFsxLjhdIEJpbmFyeSBh
Y2Nlc3Mgc3VwcG9ydCBmb3IgdHlwZSBhbm5vdGF0aW9ucworICoqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KiovCitwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnY7CisKK2lt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuY29kZWdlbi5Bbm5vdGF0aW9u
VGFyZ2V0VHlwZUNvbnN0YW50czsKKworLyoqCisgKiBUaGlzIHJlcHJlc2VudHMgY2xhc3MgZmls
ZSBpbmZvcm1hdGlvbiBhYm91dCBhbiBhbm5vdGF0aW9uIGluc3RhbmNlLgorICovCitwdWJsaWMg
aW50ZXJmYWNlIElCaW5hcnlUeXBlQW5ub3RhdGlvbiB7CisJCisJc3RhdGljIGludFtdIE5PX1RZ
UEVfUEFUSCA9IG5ldyBpbnRbMF07CisKKy8qKgorICogQHJldHVybiB0aGUgYW5ub3RhdGlvbgor
ICovCitJQmluYXJ5QW5ub3RhdGlvbiBnZXRBbm5vdGF0aW9uKCk7CisKKy8qKgorICogQHJldHVy
biB0aGUgdGFyZ2V0IHR5cGUsIGFjY29yZGluZyB0byB0aGUgY29uc3RhbnRzIGluIHtAbGluayBB
bm5vdGF0aW9uVGFyZ2V0VHlwZUNvbnN0YW50c30KKyAqLworaW50IGdldFRhcmdldFR5cGUoKTsK
KworLyoqCisgKiAKKyAqIEByZXR1cm4gdGhlIHJhdyB0eXBlIHBhdGggZGF0YSwgZWFjaCBwYWly
IG9mIGludHMgaXMgYSB0eXBlIHBhdGggZW50cnkKKyAqLworaW50W10gZ2V0VHlwZVBhdGgoKTsK
KworLyoqCisgKiBBcHBsaWNhYmxlIGZvciB0YXJnZXQgdHlwZSAweDEwKENMQVNTX0VYVEVORFMp
CisgKiAKKyAqIEByZXR1cm4gdGhlIHN1cGVydHlwZSBpbmRleC4gLTEgKDY1NTM1KSBmb3Igc3Vw
ZXJjbGFzcywgMC4ubiBmb3Igc3VwZXJpbnRlcmZhY2VzCisgKi8KK2ludCBnZXRTdXBlcnR5cGVJ
bmRleCgpOworCisvKioKKyAqIEFwcGxpY2FibGUgZm9yIHRhcmdldCB0eXBlIDB4MDAoQ0xBU1Nf
VFlQRV9QQVJBTUVURVIpLCAweDAxKE1FVEhPRF9UWVBFX1BBUkFNRVRFUikKKyAqIAorICogQHJl
dHVybiB0aGUgdHlwZSBwYXJhbWV0ZXIgaW5kZXggKDAgYmFzZWQpCisgKi8KK2ludCBnZXRUeXBl
UGFyYW1ldGVySW5kZXgoKTsKKworLyoqCisgKiBBcHBsaWNhYmxlIGZvciB0YXJnZXQgdHlwZSAw
eDExKENMQVNTX1RZUEVfUEFSQU1FVEVSX0JPVU5EKSwgMHgxMihNRVRIT0RfVFlQRV9QQVJBTUVU
RVJfQk9VTkQpCisgKiAKKyAqIEByZXR1cm4gdGhlIGJvdW5kIGluZGV4CisgKi8KK2ludCBnZXRC
b3VuZEluZGV4KCk7CisKKy8qKgorICogQXBwbGljYWJsZSBmb3IgdGFyZ2V0IHR5cGUgMHgxNihN
RVRIT0RfRk9STUFMX1BBUkFNRVRFUikKKyAqIAorICogQHJldHVybiB0aGUgbWV0aG9kIGZvcm1h
bCBwYXJhbWV0ZXIgaW5kZXgKKyAqLworaW50IGdldE1ldGhvZEZvcm1hbFBhcmFtZXRlckluZGV4
KCk7CisKKy8qKgorICogQXBwbGljYWJsZSBmb3IgdGFyZ2V0IHR5cGUgMHgxNyhUSFJPV1MpCisg
KiAKKyAqIEByZXR1cm4gdGhlIHRocm93cyB0eXBlIGluZGV4CisgKi8KK2ludCBnZXRUaHJvd3NU
eXBlSW5kZXgoKTsKKworfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZXZhbC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvZXZhbC9Db2RlU25pcHBldFNrZWxldG9uLmphdmEgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9ldmFsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9ldmFsL0Nv
ZGVTbmlwcGV0U2tlbGV0b24uamF2YQppbmRleCBmMDA5MGIxLi5lYTVkNDNkIDEwMDY0NAotLS0g
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9ldmFsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9ldmFs
L0NvZGVTbmlwcGV0U2tlbGV0b24uamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9ldmFs
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9ldmFsL0NvZGVTbmlwcGV0U2tlbGV0b24uamF2YQpA
QCAtNSw5ICs1LDE0IEBACiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwg
YW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwt
djEwLmh0bWwKICAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRy
YWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkg
UHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1
YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGgg
YW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqIAogICogQ29udHJpYnV0b3JzOgogICog
ICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgogICog
ICAgIFN0ZXBoYW4gSGVycm1hbm4gLSBDb250cmlidXRpb24gZm9yIGJ1ZyAxODYzNDIgLSBbY29t
cGlsZXJdW251bGxdIFVzaW5nIGFubm90YXRpb25zIGZvciBudWxsIGNoZWNraW5nCisgKiAgICAg
ICAgQW5keSBDbGVtZW50IC0gQ29udHJpYnV0aW9ucyBmb3IgQnVnIDQwNzE5MSAtIFsxLjhdIEJp
bmFyeSBhY2Nlc3Mgc3VwcG9ydCBmb3IgdHlwZSBhbm5vdGF0aW9ucwogICoqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5ldmFsOwogCkBAIC0y
MCw2ICsyNSw3IEBAIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52
LklCaW5hcnlGaWVsZDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
ZW52LklCaW5hcnlNZXRob2Q7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLmVudi5JQmluYXJ5TmVzdGVkVHlwZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIuZW52LklCaW5hcnlUeXBlOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5lbnYuSUJpbmFyeVR5cGVBbm5vdGF0aW9uOwogaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb3JlLnV0aWwuVXRpbDsKIAogLyoqCkBAIC02OCw2ICs3NCw5IEBA
IHB1YmxpYyBjbGFzcyBDb2RlU25pcHBldFNrZWxldG9uIGltcGxlbWVudHMgSUJpbmFyeVR5cGUs
IEV2YWx1YXRpb25Db25zdGFudHMgewogCQlwdWJsaWMgaW50IGdldEFubm90YXRlZFBhcmFtZXRl
cnNDb3VudCgpIHsKIAkJCXJldHVybiAwOwogCQl9CisJCXB1YmxpYyBJQmluYXJ5VHlwZUFubm90
YXRpb25bXSBnZXRUeXBlQW5ub3RhdGlvbnMoKSB7CisJCQlyZXR1cm4gbnVsbDsKKwkJfQogCQlw
dWJsaWMgY2hhcltdIGdldFNlbGVjdG9yKCkgewogCQkJcmV0dXJuIHRoaXMuc2VsZWN0b3I7CiAJ
CX0KLS0gCjEuNy4xMS4yCgo=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>233332</attachid>
            <date>2013-07-10 14:43:00 -0400</date>
            <delta_ts>2013-07-11 16:05:25 -0400</delta_ts>
            <desc>Patch to implement this change</desc>
            <filename>0001-bug407191.patch</filename>
            <type>text/plain</type>
            <size>66176</size>
            <attacher name="Andrew Clement">aclement</attacher>
            
              <data encoding="base64">RnJvbSAzODYxN2M1YzZlM2FhMGQyOWNjM2QwZDA4NjFkMjY2YjJjYzc2OTBhIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBBbmR5IENsZW1lbnQgPGFjbGVtZW50QGdvcGl2b3RhbC5jb20+
CkRhdGU6IFdlZCwgMTAgSnVsIDIwMTMgMTE6MzY6NDEgLTA3MDAKU3ViamVjdDogW1BBVENIXSBi
dWc0MDcxOTEKCnJlYWRkaW5nCi0tLQogLi4uL3JlZ3Jlc3Npb24vQ2xhc3NGaWxlUmVhZGVyVGVz
dF8xXzguamF2YSAgICAgICAgfCA0OTAgKysrKysrKysrKysrKysrKysrKysrCiAuLi4vY29yZS90
ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Rlc3RBbGwuamF2YSAgICB8ICAgNSArLQogLi4uL2Nv
bXBpbGVyL2NsYXNzZm10L0NsYXNzRmlsZVJlYWRlci5qYXZhICAgICAgICAgfCAgNDYgKy0KIC4u
Li9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY2xhc3NmbXQvRmllbGRJbmZvLmphdmEgIHwgMTMxICsr
KystLQogLi4uL2NvbXBpbGVyL2NsYXNzZm10L0ZpZWxkSW5mb1dpdGhBbm5vdGF0aW9uLmphdmEg
fCAgMTMgKy0KIC4uLi9jbGFzc2ZtdC9GaWVsZEluZm9XaXRoVHlwZUFubm90YXRpb24uamF2YSAg
ICAgIHwgIDU0ICsrKwogLi4uL2pkdC9pbnRlcm5hbC9jb21waWxlci9jbGFzc2ZtdC9NZXRob2RJ
bmZvLmphdmEgfCAgNDQgKy0KIC4uLi9jbGFzc2ZtdC9NZXRob2RJbmZvV2l0aFR5cGVBbm5vdGF0
aW9ucy5qYXZhICAgIHwgIDUxICsrKwogLi4uL2NvbXBpbGVyL2NsYXNzZm10L1R5cGVBbm5vdGF0
aW9uSW5mby5qYXZhICAgICAgfCAyMzUgKysrKysrKysrKwogLi4uL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9lbnYvSUJpbmFyeUZpZWxkLmphdmEgICAgfCAgMTMgKy0KIC4uLi9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvZW52L0lCaW5hcnlNZXRob2QuamF2YSAgIHwgIDEzICstCiAuLi4vY29tcGlsZXIv
ZW52L0lCaW5hcnlUeXBlQW5ub3RhdGlvbi5qYXZhICAgICAgICB8ICA3OCArKysrCiAuLi4vamR0
L2ludGVybmFsL2V2YWwvQ29kZVNuaXBwZXRTa2VsZXRvbi5qYXZhICAgICB8ICAxMCArCiAxMyBm
aWxlcyBjaGFuZ2VkLCAxMTMwIGluc2VydGlvbnMoKyksIDUzIGRlbGV0aW9ucygtKQogY3JlYXRl
IG1vZGUgMTAwNjQ0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0NsYXNzRmlsZVJlYWRl
clRlc3RfMV84LmphdmEKIGNyZWF0ZSBtb2RlIDEwMDY0NCBvcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY2xhc3NmbXQvRmllbGRJ
bmZvV2l0aFR5cGVBbm5vdGF0aW9uLmphdmEKIGNyZWF0ZSBtb2RlIDEwMDY0NCBvcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY2xh
c3NmbXQvTWV0aG9kSW5mb1dpdGhUeXBlQW5ub3RhdGlvbnMuamF2YQogY3JlYXRlIG1vZGUgMTAw
NjQ0IG9yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9jbGFzc2ZtdC9UeXBlQW5ub3RhdGlvbkluZm8uamF2YQogY3JlYXRlIG1vZGUg
MTAwNjQ0IG9yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9lbnYvSUJpbmFyeVR5cGVBbm5vdGF0aW9uLmphdmEKCmRpZmYgLS1naXQg
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9DbGFzc0ZpbGVSZWFkZXJUZXN0XzFfOC5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQ2xhc3NGaWxlUmVhZGVyVGVzdF8x
XzguamF2YQpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwLi4xYTc2MmQ5Ci0tLSAv
ZGV2L251bGwKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQ2xhc3NGaWxlUmVh
ZGVyVGVzdF8xXzguamF2YQpAQCAtMCwwICsxLDQ5MCBAQAorLyoqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioKKyAqIENvcHlyaWdodCAoYykgMjAxMyBHb1Bpdm90YWwsIEluYy4gQWxsIFJpZ2h0cyBSZXNl
cnZlZC4KKyAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29t
cGFueWluZyBtYXRlcmlhbHMKKyAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMg
b2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAorICogd2hpY2ggYWNjb21wYW5pZXMg
dGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKKyAqIGh0dHA6Ly93d3cuZWNs
aXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRh
dGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUg
SmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZv
ciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBu
b3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKgorICog
Q29udHJpYnV0b3JzOgorICoJCUFuZHkgQ2xlbWVudCAoR29QaXZvdGFsLCBJbmMpIGFjbGVtZW50
QGdvcGl2b3RhbC5jb20gLSBDb250cmlidXRpb25zIGZvcgorICoJCQlCdWcgNDA3MTkxIC0gWzEu
OF0gQmluYXJ5IGFjY2VzcyBzdXBwb3J0IGZvciB0eXBlIGFubm90YXRpb25zCisgKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKi8KK3BhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGls
ZXIucmVncmVzc2lvbjsKKworaW1wb3J0IGp1bml0LmZyYW1ld29yay5UZXN0OworCitpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIuQ2hhck9wZXJhdGlvbjsKK2ltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuY2xhc3NmbXQuQ2xhc3NGaWxlQ29uc3RhbnRz
OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jbGFzc2ZtdC5DbGFz
c0ZpbGVSZWFkZXI7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNv
ZGVnZW4uQW5ub3RhdGlvblRhcmdldFR5cGVDb25zdGFudHM7CitpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLmVudi5JQmluYXJ5QW5ub3RhdGlvbjsKK2ltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklCaW5hcnlFbGVtZW50VmFsdWVQYWly
OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuSUJpbmFyeUZp
ZWxkOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuSUJpbmFy
eU1ldGhvZDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklC
aW5hcnlUeXBlQW5ub3RhdGlvbjsKKworcHVibGljIGNsYXNzIENsYXNzRmlsZVJlYWRlclRlc3Rf
MV84IGV4dGVuZHMgQWJzdHJhY3RSZWdyZXNzaW9uVGVzdCB7CisJc3RhdGljIHsKKwl9CisKKwlw
dWJsaWMgc3RhdGljIFRlc3Qgc3VpdGUoKSB7CisJCXJldHVybiBidWlsZE1pbmltYWxDb21wbGlh
bmNlVGVzdFN1aXRlKHRlc3RDbGFzcygpLCBGXzFfOCk7CisJfQorCXB1YmxpYyBzdGF0aWMgQ2xh
c3MgdGVzdENsYXNzKCkgeworCQlyZXR1cm4gQ2xhc3NGaWxlUmVhZGVyVGVzdF8xXzguY2xhc3M7
CisJfQorCisJcHVibGljIENsYXNzRmlsZVJlYWRlclRlc3RfMV84KFN0cmluZyBuYW1lKSB7CisJ
CXN1cGVyKG5hbWUpOworCX0KKwkKKwkvLyBOZWVkZWQgdG8gcnVuIHRlc3RzIGluZGl2aWR1YWxs
eSBmcm9tIEpVbml0CisJcHJvdGVjdGVkIHZvaWQgc2V0VXAoKSB0aHJvd3MgRXhjZXB0aW9uIHsK
KwkJc3VwZXIuc2V0VXAoKTsKKwkJdGhpcy5jb21wbGlhbmNlTGV2ZWwgPSBDbGFzc0ZpbGVDb25z
dGFudHMuSkRLMV84OworCX0KKwkKKwlwdWJsaWMgdm9pZCB0ZXN0MDAxX2NsYXNzVHlwZVBhcmFt
ZXRlcigpIHRocm93cyBFeGNlcHRpb24geworCQlTdHJpbmcgc291cmNlID0KKwkJCSJpbXBvcnQg
amF2YS5sYW5nLmFubm90YXRpb24uKjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYPEBGb28gVDEs
QEJhcihpaWk9OTkpIFQyPiB7fVxuIiArCisJCQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3ku
Q0xBU1MpXG4iICsKKwkJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCQki
QGludGVyZmFjZSBGb28ge1xuIiArCisJCQkifVxuIiArCisJCQkiQFJldGVudGlvbihSZXRlbnRp
b25Qb2xpY3kuQ0xBU1MpXG4iICsKKwkJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxu
IiArCisJCQkiQGludGVyZmFjZSBCYXIge1xuIiArCisJCQkiICAgICAgICBpbnQgaWlpKCkgZGVm
YXVsdCAtMTtcbiIgKworCQkJIn0iOworCisJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5jbGFzc2ZtdC5DbGFzc0ZpbGVSZWFkZXIgY2xhc3NGaWxlUmVhZGVyID0gZ2V0SW50ZXJu
YWxDbGFzc0ZpbGUoIiIsICJYIiwgIlgiLCBzb3VyY2UpOworCQkKKwkJSUJpbmFyeVR5cGVBbm5v
dGF0aW9uW10gdHlwZUFubm90YXRpb25zID0gY2xhc3NGaWxlUmVhZGVyLmdldFR5cGVBbm5vdGF0
aW9ucygpOworCQlhc3NlcnRFcXVhbHMoMix0eXBlQW5ub3RhdGlvbnMubGVuZ3RoKTsKKwkJCisJ
CWFzc2VydEVxdWFscygiQExGb287IENMQVNTX1RZUEVfUEFSQU1FVEVSKHR5cGVfcGFyYW1ldGVy
X2luZGV4PTApIiwgcHJpbnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlvbnNbMF0pKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJATEJhcjsoaWlpPShpbnQpOTkpIENMQVNTX1RZUEVfUEFSQU1FVEVSKHR5
cGVfcGFyYW1ldGVyX2luZGV4PTEpIiwgcHJpbnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlv
bnNbMV0pKTsKKwl9CisJCisJcHVibGljIHZvaWQgdGVzdDAwMl9tZXRob2RUeXBlUGFyYW1ldGVy
KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCVN0cmluZyBzb3VyY2UgPQorCQkJImltcG9ydCBqYXZh
LmxhbmcuYW5ub3RhdGlvbi4qO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQki
CTxARm9vIFQxLCBAQmFyKDMpIFQyPiB2b2lkIGZvbyhUMSB0MSxUMiB0Mikge31cbiIgKyAKKwkJ
CSJ9XG4iICsKKwkJCSJAUmV0ZW50aW9uKFJldGVudGlvblBvbGljeS5DTEFTUylcbiIgKworCQkJ
IkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJCSJAaW50ZXJmYWNlIEZvbyB7
XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJAUmV0ZW50aW9uKFJldGVudGlvblBvbGljeS5DTEFTUylc
biIgKworCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJCSJAaW50ZXJm
YWNlIEJhciB7XG4iICsKKwkJCSIgICAgICAgIGludCB2YWx1ZSgpIGRlZmF1bHQgLTE7XG4iICsK
KwkJCSJ9IjsKKworCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuY2xhc3NmbXQu
Q2xhc3NGaWxlUmVhZGVyIGNmciA9IGdldEludGVybmFsQ2xhc3NGaWxlKCIiLCAiWCIsICJYIiwg
c291cmNlKTsKKwkJCisJCUlCaW5hcnlNZXRob2QgbWV0aG9kID0gZ2V0TWV0aG9kKGNmciwiZm9v
Iik7CisJCWFzc2VydE5vdE51bGwobWV0aG9kKTsKKwkJSUJpbmFyeVR5cGVBbm5vdGF0aW9uW10g
dHlwZUFubm90YXRpb25zID0gbWV0aG9kLmdldFR5cGVBbm5vdGF0aW9ucygpOworCQlhc3NlcnRO
b3ROdWxsKHR5cGVBbm5vdGF0aW9ucyk7CisJCWFzc2VydEVxdWFscygyLHR5cGVBbm5vdGF0aW9u
cy5sZW5ndGgpOworCQlhc3NlcnRFcXVhbHMoIkBMRm9vOyBNRVRIT0RfVFlQRV9QQVJBTUVURVIo
dHlwZV9wYXJhbWV0ZXJfaW5kZXg9MCkiLHByaW50VHlwZUFubm90YXRpb24odHlwZUFubm90YXRp
b25zWzBdKSk7CisJCWFzc2VydEVxdWFscygiQExCYXI7KHZhbHVlPShpbnQpMykgTUVUSE9EX1RZ
UEVfUEFSQU1FVEVSKHR5cGVfcGFyYW1ldGVyX2luZGV4PTEpIixwcmludFR5cGVBbm5vdGF0aW9u
KHR5cGVBbm5vdGF0aW9uc1sxXSkpOworCX0KKwkKKwlwdWJsaWMgdm9pZCB0ZXN0MDAzX2NsYXNz
RXh0ZW5kcygpIHRocm93cyBFeGNlcHRpb24geworCQl0aGlzLmNvbXBsaWFuY2VMZXZlbCA9IENs
YXNzRmlsZUNvbnN0YW50cy5KREsxXzg7CisJCVN0cmluZyBzb3VyY2UgPQorCQkJImltcG9ydCBq
YXZhLmxhbmcuYW5ub3RhdGlvbi4qO1xuIiArCisJCQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBA
Rm9vIEBCYXIoaWlpPTM0KSBPYmplY3QgaW1wbGVtZW50cyBqYXZhLmlvLkBCYXIoaWlpPTEpIFNl
cmlhbGl6YWJsZSB7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJAUmV0ZW50aW9uKFJldGVudGlvblBv
bGljeS5DTEFTUylcbiIgKworCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsK
KwkJCSJAaW50ZXJmYWNlIEZvbyB7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJAUmV0ZW50aW9uKFJl
dGVudGlvblBvbGljeS5DTEFTUylcbiIgKworCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9V
U0UpXG4iICsKKwkJCSJAaW50ZXJmYWNlIEJhciB7XG4iICsKKwkJCSIgICAgICAgIGludCBpaWko
KSBkZWZhdWx0IC0xO1xuIiArCisJCQkifSI7CisKKwkJb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmNsYXNzZm10LkNsYXNzRmlsZVJlYWRlciBjbGFzc0ZpbGVSZWFkZXIgPSBnZXRJ
bnRlcm5hbENsYXNzRmlsZSgiIiwgIlgiLCAiWCIsIHNvdXJjZSk7CisJCQorCQlJQmluYXJ5VHlw
ZUFubm90YXRpb25bXSB0eXBlQW5ub3RhdGlvbnMgPSBjbGFzc0ZpbGVSZWFkZXIuZ2V0VHlwZUFu
bm90YXRpb25zKCk7CisJCWFzc2VydEVxdWFscygzLHR5cGVBbm5vdGF0aW9ucy5sZW5ndGgpOwor
CQlhc3NlcnRFcXVhbHMoIkBMRm9vOyBDTEFTU19FWFRFTkRTKHR5cGVfaW5kZXg9LTEpIiwgcHJp
bnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlvbnNbMF0pKTsKKwkJYXNzZXJ0RXF1YWxzKCJA
TEJhcjsoaWlpPShpbnQpMzQpIENMQVNTX0VYVEVORFModHlwZV9pbmRleD0tMSkiLCBwcmludFR5
cGVBbm5vdGF0aW9uKHR5cGVBbm5vdGF0aW9uc1sxXSkpOworCQlhc3NlcnRFcXVhbHMoIkBMQmFy
OyhpaWk9KGludCkxKSBDTEFTU19FWFRFTkRTKHR5cGVfaW5kZXg9MCkiLCBwcmludFR5cGVBbm5v
dGF0aW9uKHR5cGVBbm5vdGF0aW9uc1syXSkpOworCX0KKworCXB1YmxpYyB2b2lkIHRlc3QwMDRf
Y2xhc3NFeHRlbmRzKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCVN0cmluZyBzb3VyY2UgPQorCQkJ
ImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi4qO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgg
ZXh0ZW5kcyBZPEBGb28gU3RyaW5nLEBCYXIgSW50ZWdlcj4gaW1wbGVtZW50cyBJPEBGb28gU3Ry
aW5nPiB7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBZPFQxLCBUMj4ge31cbiIgKworCQkJ
ImludGVyZmFjZSBJPFQxPiB7fVxuIiArCisJCQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3ku
Q0xBU1MpXG4iICsKKwkJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCQki
QGludGVyZmFjZSBGb28ge1xuIiArCisJCQkifVxuIiArCisJCQkiQFJldGVudGlvbihSZXRlbnRp
b25Qb2xpY3kuQ0xBU1MpXG4iICsKKwkJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxu
IiArCisJCQkiQGludGVyZmFjZSBCYXIge1xuIiArCisJCQkiICAgICAgICBpbnQgaWlpKCkgZGVm
YXVsdCAtMTtcbiIgKworCQkJIn0iOworCisJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5jbGFzc2ZtdC5DbGFzc0ZpbGVSZWFkZXIgY2xhc3NGaWxlUmVhZGVyID0gZ2V0SW50ZXJu
YWxDbGFzc0ZpbGUoIiIsICJYIiwgIlgiLCBzb3VyY2UpOworCQkKKwkJSUJpbmFyeVR5cGVBbm5v
dGF0aW9uW10gdHlwZUFubm90YXRpb25zID0gY2xhc3NGaWxlUmVhZGVyLmdldFR5cGVBbm5vdGF0
aW9ucygpOworCQlhc3NlcnRFcXVhbHMoMyx0eXBlQW5ub3RhdGlvbnMubGVuZ3RoKTsKKwkJYXNz
ZXJ0RXF1YWxzKCJATEZvbzsgQ0xBU1NfRVhURU5EUyh0eXBlX2luZGV4PS0xKSwgbG9jYXRpb249
W1RZUEVfQVJHVU1FTlQoMCldIiwgcHJpbnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlvbnNb
MF0pKTsKKwkJYXNzZXJ0RXF1YWxzKCJATEJhcjsgQ0xBU1NfRVhURU5EUyh0eXBlX2luZGV4PS0x
KSwgbG9jYXRpb249W1RZUEVfQVJHVU1FTlQoMSldIiwgcHJpbnRUeXBlQW5ub3RhdGlvbih0eXBl
QW5ub3RhdGlvbnNbMV0pKTsKKwkJYXNzZXJ0RXF1YWxzKCJATEZvbzsgQ0xBU1NfRVhURU5EUyh0
eXBlX2luZGV4PTApLCBsb2NhdGlvbj1bVFlQRV9BUkdVTUVOVCgwKV0iLCBwcmludFR5cGVBbm5v
dGF0aW9uKHR5cGVBbm5vdGF0aW9uc1syXSkpOworCX0KKwkKKwlwdWJsaWMgdm9pZCB0ZXN0MDA1
X2NsYXNzVHlwZVBhcmFtZXRlckJvdW5kKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCVN0cmluZyBz
b3VyY2UgPQorCQkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi4qO1xuIiArCisJCQkicHVi
bGljIGNsYXNzIFg8VSwgVCBleHRlbmRzIFk8QEZvbyBTdHJpbmcgQEJhcigxKVtdW11AQmFyKDIp
W10+ICYgQEJhcigzKSBDbG9uZWFibGU+IHt9XG4iICsKKwkJCSJjbGFzcyBZPFQ+IHt9XG4iICsK
KwkJCSJAUmV0ZW50aW9uKFJldGVudGlvblBvbGljeS5DTEFTUylcbiIgKworCQkJIkBUYXJnZXQo
RWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJCSJAaW50ZXJmYWNlIEZvbyB7XG4iICsKKwkJ
CSJ9XG4iICsKKwkJCSJAUmV0ZW50aW9uKFJldGVudGlvblBvbGljeS5DTEFTUylcbiIgKworCQkJ
IkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJCSJAaW50ZXJmYWNlIEJhciB7
XG4iICsKKwkJCSIgICAgICAgIGludCB2YWx1ZSgpIGRlZmF1bHQgLTE7XG4iICsKKwkJCSJ9IjsK
KworCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuY2xhc3NmbXQuQ2xhc3NGaWxl
UmVhZGVyIGNsYXNzRmlsZVJlYWRlciA9IGdldEludGVybmFsQ2xhc3NGaWxlKCIiLCAiWCIsICJY
Iiwgc291cmNlKTsKKwkJCisJCUlCaW5hcnlUeXBlQW5ub3RhdGlvbltdIHR5cGVBbm5vdGF0aW9u
cyA9IGNsYXNzRmlsZVJlYWRlci5nZXRUeXBlQW5ub3RhdGlvbnMoKTsKKwkJYXNzZXJ0RXF1YWxz
KDQsdHlwZUFubm90YXRpb25zLmxlbmd0aCk7CisJCWFzc2VydEVxdWFscygiQExGb287IENMQVNT
X1RZUEVfUEFSQU1FVEVSX0JPVU5EKHR5cGVfcGFyYW1ldGVyX2luZGV4PTEsIGJvdW5kX2luZGV4
PTApLCBsb2NhdGlvbj1bVFlQRV9BUkdVTUVOVCgwKSwgQVJSQVksIEFSUkFZLCBBUlJBWV0iLCBw
cmludFR5cGVBbm5vdGF0aW9uKHR5cGVBbm5vdGF0aW9uc1swXSkpOworCQlhc3NlcnRFcXVhbHMo
IkBMQmFyOyh2YWx1ZT0oaW50KTEpIENMQVNTX1RZUEVfUEFSQU1FVEVSX0JPVU5EKHR5cGVfcGFy
YW1ldGVyX2luZGV4PTEsIGJvdW5kX2luZGV4PTApLCBsb2NhdGlvbj1bVFlQRV9BUkdVTUVOVCgw
KV0iLCBwcmludFR5cGVBbm5vdGF0aW9uKHR5cGVBbm5vdGF0aW9uc1sxXSkpOworCQlhc3NlcnRF
cXVhbHMoIkBMQmFyOyh2YWx1ZT0oaW50KTIpIENMQVNTX1RZUEVfUEFSQU1FVEVSX0JPVU5EKHR5
cGVfcGFyYW1ldGVyX2luZGV4PTEsIGJvdW5kX2luZGV4PTApLCBsb2NhdGlvbj1bVFlQRV9BUkdV
TUVOVCgwKSwgQVJSQVksIEFSUkFZXSIsIHByaW50VHlwZUFubm90YXRpb24odHlwZUFubm90YXRp
b25zWzJdKSk7CisJCWFzc2VydEVxdWFscygiQExCYXI7KHZhbHVlPShpbnQpMykgQ0xBU1NfVFlQ
RV9QQVJBTUVURVJfQk9VTkQodHlwZV9wYXJhbWV0ZXJfaW5kZXg9MSwgYm91bmRfaW5kZXg9MSki
LCBwcmludFR5cGVBbm5vdGF0aW9uKHR5cGVBbm5vdGF0aW9uc1szXSkpOworCX0KKwkKKwlwdWJs
aWMgdm9pZCB0ZXN0MDA2X21ldGhvZFR5cGVQYXJhbWV0ZXJCb3VuZCgpIHRocm93cyBFeGNlcHRp
b24geworCQlTdHJpbmcgc291cmNlID0KKwkJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24u
KjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYe1xuIiArCisJCQkiCTxUIGV4dGVuZHMgWTxARm9v
IFogQEJhcigxKVtdW11AQmFyKDIpW10+ICYgQEJhcigzKSBDbG9uZWFibGU+IHZvaWQgZm9vKFQg
dCkge31cbiIgKworCQkJIn1cbiIgKworCQkJImNsYXNzIFk8VD4ge31cbiIgKworCQkJImNsYXNz
IFoge31cbiIgKworCQkJIkBSZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LkNMQVNTKVxuIiArCisJ
CQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKworCQkJIkBpbnRlcmZhY2UgRm9v
IHtcbiIgKworCQkJIn1cbiIgKworCQkJIkBSZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LkNMQVNT
KVxuIiArCisJCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKworCQkJIkBpbnRl
cmZhY2UgQmFyIHtcbiIgKworCQkJIiAgICAgICAgaW50IHZhbHVlKCkgZGVmYXVsdCAtMTtcbiIg
KworCQkJIn0iOworCisJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jbGFzc2Zt
dC5DbGFzc0ZpbGVSZWFkZXIgY2ZyID0gZ2V0SW50ZXJuYWxDbGFzc0ZpbGUoIiIsICJYIiwgIlgi
LCBzb3VyY2UpOworCisJCUlCaW5hcnlNZXRob2QgbWV0aG9kID0gZ2V0TWV0aG9kKGNmciwiZm9v
Iik7CisJCWFzc2VydE5vdE51bGwobWV0aG9kKTsKKwkJSUJpbmFyeVR5cGVBbm5vdGF0aW9uW10g
dHlwZUFubm90YXRpb25zID0gbWV0aG9kLmdldFR5cGVBbm5vdGF0aW9ucygpOworCQlhc3NlcnRO
b3ROdWxsKHR5cGVBbm5vdGF0aW9ucyk7CisJCWFzc2VydEVxdWFscyg0LHR5cGVBbm5vdGF0aW9u
cy5sZW5ndGgpOworCQlhc3NlcnRFcXVhbHMoIkBMRm9vOyBNRVRIT0RfVFlQRV9QQVJBTUVURVJf
Qk9VTkQodHlwZV9wYXJhbWV0ZXJfaW5kZXg9MCwgYm91bmRfaW5kZXg9MCksIGxvY2F0aW9uPVtU
WVBFX0FSR1VNRU5UKDApLCBBUlJBWSwgQVJSQVksIEFSUkFZXSIscHJpbnRUeXBlQW5ub3RhdGlv
bih0eXBlQW5ub3RhdGlvbnNbMF0pKTsKKwkJYXNzZXJ0RXF1YWxzKCJATEJhcjsodmFsdWU9KGlu
dCkxKSBNRVRIT0RfVFlQRV9QQVJBTUVURVJfQk9VTkQodHlwZV9wYXJhbWV0ZXJfaW5kZXg9MCwg
Ym91bmRfaW5kZXg9MCksIGxvY2F0aW9uPVtUWVBFX0FSR1VNRU5UKDApXSIsIHByaW50VHlwZUFu
bm90YXRpb24odHlwZUFubm90YXRpb25zWzFdKSk7CisJCWFzc2VydEVxdWFscygiQExCYXI7KHZh
bHVlPShpbnQpMikgTUVUSE9EX1RZUEVfUEFSQU1FVEVSX0JPVU5EKHR5cGVfcGFyYW1ldGVyX2lu
ZGV4PTAsIGJvdW5kX2luZGV4PTApLCBsb2NhdGlvbj1bVFlQRV9BUkdVTUVOVCgwKSwgQVJSQVks
IEFSUkFZXSIsIHByaW50VHlwZUFubm90YXRpb24odHlwZUFubm90YXRpb25zWzJdKSk7CisJCWFz
c2VydEVxdWFscygiQExCYXI7KHZhbHVlPShpbnQpMykgTUVUSE9EX1RZUEVfUEFSQU1FVEVSX0JP
VU5EKHR5cGVfcGFyYW1ldGVyX2luZGV4PTAsIGJvdW5kX2luZGV4PTEpIiwgcHJpbnRUeXBlQW5u
b3RhdGlvbih0eXBlQW5ub3RhdGlvbnNbM10pKTsKKwl9CisJCisJcHVibGljIHZvaWQgdGVzdDAw
N19maWVsZCgpIHRocm93cyBFeGNlcHRpb24geworCQlTdHJpbmcgc291cmNlID0KKwkJCSJpbXBv
cnQgamF2YS5sYW5nLmFubm90YXRpb24uKjtcbiIgKworCQkJImltcG9ydCBqYXZhLnV0aWwuTWFw
O1xuIiArCisJCQkicHVibGljIGNsYXNzIFh7XG4iICsKKwkJCSIJQEZvbyBNYXA8QEJhcigxKSBT
dHJpbmcsIEBCYXIoMikgU3RyaW5nIEBCYXIoMylbXSBAQmFyKDQpW10gQEJhcig1KVtdPiBmaWVs
ZDM7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBZPFQ+IHt9XG4iICsKKwkJCSJjbGFzcyBa
IHt9XG4iICsKKwkJCSJAUmV0ZW50aW9uKFJldGVudGlvblBvbGljeS5DTEFTUylcbiIgKworCQkJ
IkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJCSJAaW50ZXJmYWNlIEZvbyB7
XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJAUmV0ZW50aW9uKFJldGVudGlvblBvbGljeS5DTEFTUylc
biIgKworCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJCSJAaW50ZXJm
YWNlIEJhciB7XG4iICsKKwkJCSIgICAgICAgIGludCB2YWx1ZSgpIGRlZmF1bHQgLTE7XG4iICsK
KwkJCSJ9IjsKKworCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuY2xhc3NmbXQu
Q2xhc3NGaWxlUmVhZGVyIGNmciA9IGdldEludGVybmFsQ2xhc3NGaWxlKCIiLCAiWCIsICJYIiwg
c291cmNlKTsKKworCQlJQmluYXJ5RmllbGQgZmllbGQgPSBnZXRGaWVsZChjZnIsImZpZWxkMyIp
OworCQlhc3NlcnROb3ROdWxsKGZpZWxkKTsKKwkJSUJpbmFyeVR5cGVBbm5vdGF0aW9uW10gdHlw
ZUFubm90YXRpb25zID0gZmllbGQuZ2V0VHlwZUFubm90YXRpb25zKCk7CisJCWFzc2VydE5vdE51
bGwodHlwZUFubm90YXRpb25zKTsKKwkJYXNzZXJ0RXF1YWxzKDYsdHlwZUFubm90YXRpb25zLmxl
bmd0aCk7CisJCWFzc2VydEVxdWFscygiQExGb287IEZJRUxEIixwcmludFR5cGVBbm5vdGF0aW9u
KHR5cGVBbm5vdGF0aW9uc1swXSkpOworCQlhc3NlcnRFcXVhbHMoIkBMQmFyOyh2YWx1ZT0oaW50
KTEpIEZJRUxELCBsb2NhdGlvbj1bVFlQRV9BUkdVTUVOVCgwKV0iLCBwcmludFR5cGVBbm5vdGF0
aW9uKHR5cGVBbm5vdGF0aW9uc1sxXSkpOworCQlhc3NlcnRFcXVhbHMoIkBMQmFyOyh2YWx1ZT0o
aW50KTIpIEZJRUxELCBsb2NhdGlvbj1bVFlQRV9BUkdVTUVOVCgxKSwgQVJSQVksIEFSUkFZLCBB
UlJBWV0iLCBwcmludFR5cGVBbm5vdGF0aW9uKHR5cGVBbm5vdGF0aW9uc1syXSkpOworCQlhc3Nl
cnRFcXVhbHMoIkBMQmFyOyh2YWx1ZT0oaW50KTMpIEZJRUxELCBsb2NhdGlvbj1bVFlQRV9BUkdV
TUVOVCgxKV0iLCBwcmludFR5cGVBbm5vdGF0aW9uKHR5cGVBbm5vdGF0aW9uc1szXSkpOworCQlh
c3NlcnRFcXVhbHMoIkBMQmFyOyh2YWx1ZT0oaW50KTQpIEZJRUxELCBsb2NhdGlvbj1bVFlQRV9B
UkdVTUVOVCgxKSwgQVJSQVldIiwgcHJpbnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlvbnNb
NF0pKTsKKwkJYXNzZXJ0RXF1YWxzKCJATEJhcjsodmFsdWU9KGludCk1KSBGSUVMRCwgbG9jYXRp
b249W1RZUEVfQVJHVU1FTlQoMSksIEFSUkFZLCBBUlJBWV0iLCBwcmludFR5cGVBbm5vdGF0aW9u
KHR5cGVBbm5vdGF0aW9uc1s1XSkpOworCX0KKwkKKwlwdWJsaWMgdm9pZCB0ZXN0MDA4X21ldGhv
ZFJldHVybigpIHRocm93cyBFeGNlcHRpb24geworCQlTdHJpbmcgc291cmNlID0KKwkJCSJpbXBv
cnQgamF2YS5sYW5nLmFubm90YXRpb24uKjtcbiIgKworCQkJImltcG9ydCBqYXZhLnV0aWwuTWFw
O1xuIiArCisJCQkicHVibGljIGNsYXNzIFh7XG4iICsKKwkJCSIJQEJhcigzKSBARm9vIGludCBm
b28oKSB7XG4iICsKKwkJCSIJCXJldHVybiAxO1xuIiArCisJCQkiCX1cbiIgKyAKKwkJCSIJQEJh
cigzKSBpbnQgQEZvbyBbXSBmb28yKCkge1xuIiArCisJCQkiCQlyZXR1cm4gbnVsbDtcbiIgKwor
CQkJIgl9XG4iICsgCisJCQkifVxuIiArCisJCQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3ku
Q0xBU1MpXG4iICsKKwkJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCQki
QGludGVyZmFjZSBGb28ge1xuIiArCisJCQkifVxuIiArCisJCQkiQFJldGVudGlvbihSZXRlbnRp
b25Qb2xpY3kuQ0xBU1MpXG4iICsKKwkJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxu
IiArCisJCQkiQGludGVyZmFjZSBCYXIge1xuIiArCisJCQkiICAgICAgICBpbnQgdmFsdWUoKSBk
ZWZhdWx0IC0xO1xuIiArCisJCQkifSI7CisKKwkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmNsYXNzZm10LkNsYXNzRmlsZVJlYWRlciBjZnIgPSBnZXRJbnRlcm5hbENsYXNzRmls
ZSgiIiwgIlgiLCAiWCIsIHNvdXJjZSk7CisKKwkJSUJpbmFyeU1ldGhvZCBtZXRob2QgPSBnZXRN
ZXRob2QoY2ZyLCJmb28iKTsKKwkJYXNzZXJ0Tm90TnVsbChtZXRob2QpOworCQlJQmluYXJ5VHlw
ZUFubm90YXRpb25bXSB0eXBlQW5ub3RhdGlvbnMgPSBtZXRob2QuZ2V0VHlwZUFubm90YXRpb25z
KCk7CisJCWFzc2VydE5vdE51bGwodHlwZUFubm90YXRpb25zKTsKKwkJYXNzZXJ0RXF1YWxzKDIs
dHlwZUFubm90YXRpb25zLmxlbmd0aCk7CisJCWFzc2VydEVxdWFscygiQExCYXI7KHZhbHVlPShp
bnQpMykgTUVUSE9EX1JFVFVSTiIscHJpbnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlvbnNb
MF0pKTsKKwkJYXNzZXJ0RXF1YWxzKCJATEZvbzsgTUVUSE9EX1JFVFVSTiIsIHByaW50VHlwZUFu
bm90YXRpb24odHlwZUFubm90YXRpb25zWzFdKSk7CisJCQorCQltZXRob2QgPSBnZXRNZXRob2Qo
Y2ZyLCJmb28yIik7CisJCWFzc2VydE5vdE51bGwobWV0aG9kKTsKKwkJdHlwZUFubm90YXRpb25z
ID0gbWV0aG9kLmdldFR5cGVBbm5vdGF0aW9ucygpOworCQlhc3NlcnROb3ROdWxsKHR5cGVBbm5v
dGF0aW9ucyk7CisJCWFzc2VydEVxdWFscygyLHR5cGVBbm5vdGF0aW9ucy5sZW5ndGgpOworCQlh
c3NlcnRFcXVhbHMoIkBMQmFyOyh2YWx1ZT0oaW50KTMpIE1FVEhPRF9SRVRVUk4sIGxvY2F0aW9u
PVtBUlJBWV0iLHByaW50VHlwZUFubm90YXRpb24odHlwZUFubm90YXRpb25zWzBdKSk7CisJCWFz
c2VydEVxdWFscygiQExGb287IE1FVEhPRF9SRVRVUk4iLCBwcmludFR5cGVBbm5vdGF0aW9uKHR5
cGVBbm5vdGF0aW9uc1sxXSkpOworCX0KKwkKKwlwdWJsaWMgdm9pZCB0ZXN0MDA5X21ldGhvZFJl
Y2VpdmVyKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCVN0cmluZyBzb3VyY2UgPQorCQkJImltcG9y
dCBqYXZhLmxhbmcuYW5ub3RhdGlvbi4qO1xuIiArCisJCQkiaW1wb3J0IGphdmEudXRpbC5NYXA7
XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWHtcbiIgKworCQkJIgl2b2lkIGZvbyhAQmFyKDMpIFgg
dGhpcykge31cbiIgKyAKKwkJCSJ9XG4iICsKKwkJCSJAUmV0ZW50aW9uKFJldGVudGlvblBvbGlj
eS5DTEFTUylcbiIgKworCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJ
CSJAaW50ZXJmYWNlIEZvbyB7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJAUmV0ZW50aW9uKFJldGVu
dGlvblBvbGljeS5DTEFTUylcbiIgKworCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0Up
XG4iICsKKwkJCSJAaW50ZXJmYWNlIEJhciB7XG4iICsKKwkJCSIgICAgICAgIGludCB2YWx1ZSgp
IGRlZmF1bHQgLTE7XG4iICsKKwkJCSJ9IjsKKworCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuY2xhc3NmbXQuQ2xhc3NGaWxlUmVhZGVyIGNmciA9IGdldEludGVybmFsQ2xhc3NG
aWxlKCIiLCAiWCIsICJYIiwgc291cmNlKTsKKworCQlJQmluYXJ5TWV0aG9kIG1ldGhvZCA9IGdl
dE1ldGhvZChjZnIsImZvbyIpOworCQlhc3NlcnROb3ROdWxsKG1ldGhvZCk7CisJCUlCaW5hcnlU
eXBlQW5ub3RhdGlvbltdIHR5cGVBbm5vdGF0aW9ucyA9IG1ldGhvZC5nZXRUeXBlQW5ub3RhdGlv
bnMoKTsKKwkJYXNzZXJ0Tm90TnVsbCh0eXBlQW5ub3RhdGlvbnMpOworCQlhc3NlcnRFcXVhbHMo
MSx0eXBlQW5ub3RhdGlvbnMubGVuZ3RoKTsKKwkJYXNzZXJ0RXF1YWxzKCJATEJhcjsodmFsdWU9
KGludCkzKSBNRVRIT0RfUkVDRUlWRVIiLCBwcmludFR5cGVBbm5vdGF0aW9uKHR5cGVBbm5vdGF0
aW9uc1swXSkpOworCX0KKwkKKwlwdWJsaWMgdm9pZCB0ZXN0MDEwX21ldGhvZEZvcm1hbFBhcmFt
ZXRlcigpIHRocm93cyBFeGNlcHRpb24geworCQlTdHJpbmcgc291cmNlID0KKwkJCSJpbXBvcnQg
amF2YS5sYW5nLmFubm90YXRpb24uKjtcbiIgKworCQkJImltcG9ydCBqYXZhLnV0aWwuTWFwO1xu
IiArCisJCQkicHVibGljIGNsYXNzIFh7XG4iICsKKwkJCSIJdm9pZCBmb28oQEJhcigzKSBTdHJp
bmcgcywgQEZvbyBpbnQgaSkge31cbiIgKyAKKwkJCSJ9XG4iICsKKwkJCSJAUmV0ZW50aW9uKFJl
dGVudGlvblBvbGljeS5DTEFTUylcbiIgKworCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9V
U0UpXG4iICsKKwkJCSJAaW50ZXJmYWNlIEZvbyB7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJAUmV0
ZW50aW9uKFJldGVudGlvblBvbGljeS5DTEFTUylcbiIgKworCQkJIkBUYXJnZXQoRWxlbWVudFR5
cGUuVFlQRV9VU0UpXG4iICsKKwkJCSJAaW50ZXJmYWNlIEJhciB7XG4iICsKKwkJCSIgICAgICAg
IGludCB2YWx1ZSgpIGRlZmF1bHQgLTE7XG4iICsKKwkJCSJ9IjsKKworCQlvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIuY2xhc3NmbXQuQ2xhc3NGaWxlUmVhZGVyIGNmciA9IGdldElu
dGVybmFsQ2xhc3NGaWxlKCIiLCAiWCIsICJYIiwgc291cmNlKTsKKworCQlJQmluYXJ5TWV0aG9k
IG1ldGhvZCA9IGdldE1ldGhvZChjZnIsImZvbyIpOworCQlhc3NlcnROb3ROdWxsKG1ldGhvZCk7
CisJCUlCaW5hcnlUeXBlQW5ub3RhdGlvbltdIHR5cGVBbm5vdGF0aW9ucyA9IG1ldGhvZC5nZXRU
eXBlQW5ub3RhdGlvbnMoKTsKKwkJYXNzZXJ0Tm90TnVsbCh0eXBlQW5ub3RhdGlvbnMpOworCQlh
c3NlcnRFcXVhbHMoMix0eXBlQW5ub3RhdGlvbnMubGVuZ3RoKTsKKwkJYXNzZXJ0RXF1YWxzKCJA
TEJhcjsodmFsdWU9KGludCkzKSBNRVRIT0RfRk9STUFMX1BBUkFNRVRFUihtZXRob2RfZm9ybWFs
X3BhcmFtZXRlcl9pbmRleD0wKSIscHJpbnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlvbnNb
MF0pKTsKKwkJYXNzZXJ0RXF1YWxzKCJATEZvbzsgTUVUSE9EX0ZPUk1BTF9QQVJBTUVURVIobWV0
aG9kX2Zvcm1hbF9wYXJhbWV0ZXJfaW5kZXg9MSkiLHByaW50VHlwZUFubm90YXRpb24odHlwZUFu
bm90YXRpb25zWzFdKSk7CisJfQorCQorCXB1YmxpYyB2b2lkIHRlc3QwMTFfdGhyb3dzKCkgdGhy
b3dzIEV4Y2VwdGlvbiB7CisJCVN0cmluZyBzb3VyY2UgPQorCQkJImltcG9ydCBqYXZhLmxhbmcu
YW5ub3RhdGlvbi4qO1xuIiArCisJCQkiaW1wb3J0IGphdmEudXRpbC5NYXA7XG4iICsKKwkJCSJw
dWJsaWMgY2xhc3MgWHtcbiIgKworCQkJIgl2b2lkIGZvbygpIHRocm93cyBARm9vIEV4Y2VwdGlv
biwgQEJhcigxKSBUaHJvd2FibGUge31cbiIgKyAKKwkJCSJ9XG4iICsKKwkJCSJAUmV0ZW50aW9u
KFJldGVudGlvblBvbGljeS5DTEFTUylcbiIgKworCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQ
RV9VU0UpXG4iICsKKwkJCSJAaW50ZXJmYWNlIEZvbyB7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJA
UmV0ZW50aW9uKFJldGVudGlvblBvbGljeS5DTEFTUylcbiIgKworCQkJIkBUYXJnZXQoRWxlbWVu
dFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJCSJAaW50ZXJmYWNlIEJhciB7XG4iICsKKwkJCSIgICAg
ICAgIGludCB2YWx1ZSgpIGRlZmF1bHQgLTE7XG4iICsKKwkJCSJ9IjsKKworCQlvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuY2xhc3NmbXQuQ2xhc3NGaWxlUmVhZGVyIGNmciA9IGdl
dEludGVybmFsQ2xhc3NGaWxlKCIiLCAiWCIsICJYIiwgc291cmNlKTsKKworCQlJQmluYXJ5TWV0
aG9kIG1ldGhvZCA9IGdldE1ldGhvZChjZnIsImZvbyIpOworCQlhc3NlcnROb3ROdWxsKG1ldGhv
ZCk7CisJCUlCaW5hcnlUeXBlQW5ub3RhdGlvbltdIHR5cGVBbm5vdGF0aW9ucyA9IG1ldGhvZC5n
ZXRUeXBlQW5ub3RhdGlvbnMoKTsKKwkJYXNzZXJ0Tm90TnVsbCh0eXBlQW5ub3RhdGlvbnMpOwor
CQlhc3NlcnRFcXVhbHMoMix0eXBlQW5ub3RhdGlvbnMubGVuZ3RoKTsKKwkJYXNzZXJ0RXF1YWxz
KCJATEZvbzsgVEhST1dTKHRocm93c190eXBlX2luZGV4PTApIixwcmludFR5cGVBbm5vdGF0aW9u
KHR5cGVBbm5vdGF0aW9uc1swXSkpOworCQlhc3NlcnRFcXVhbHMoIkBMQmFyOyh2YWx1ZT0oaW50
KTEpIFRIUk9XUyh0aHJvd3NfdHlwZV9pbmRleD0xKSIscHJpbnRUeXBlQW5ub3RhdGlvbih0eXBl
QW5ub3RhdGlvbnNbMV0pKTsKKwl9CisKKwkvKioKKwkgKiBQcm9kdWNlIGEgbmljZWx5IGZvcm1h
dHRlZCB0eXBlIGFubm90YXRpb24gZm9yIHRlc3RpbmcuIEV4ZXJjaXNlcyB0aGUgQVBJIGZvciB0
eXBlIGFubm90YXRpb25zLgorCSAqIE91dHB1dCBleGFtcGxlczo8YnI+CisJICogPHR0PkBGb28o
aWQ9MzQpIENMQVNTX0VYVEVORFMsIHR5cGVfaW5kZXg9LTEsIGxvY2F0aW9uPVtBUlJBWSwgSU5O
RVJfVFlQRSwgVFlQRV9BUkdVTUVOVCgwKV08L3R0Pjxicj4KKwkgKi8KKwlwcml2YXRlIFN0cmlu
ZyBwcmludFR5cGVBbm5vdGF0aW9uKElCaW5hcnlUeXBlQW5ub3RhdGlvbiB0eXBlQW5ub3RhdGlv
bikgeworCQlTdHJpbmdCdWZmZXIgc2IgPSBuZXcgU3RyaW5nQnVmZmVyKCk7CisJCS8vIFRoZSBh
bm5vdGF0aW9uOgorCQlJQmluYXJ5QW5ub3RhdGlvbiBhbm5vdGF0aW9uID0gdHlwZUFubm90YXRp
b24uZ2V0QW5ub3RhdGlvbigpOworCQlzYi5hcHBlbmQoJ0AnKS5hcHBlbmQoYW5ub3RhdGlvbi5n
ZXRUeXBlTmFtZSgpKTsKKwkJSUJpbmFyeUVsZW1lbnRWYWx1ZVBhaXJbXSBwYWlycyA9IGFubm90
YXRpb24uZ2V0RWxlbWVudFZhbHVlUGFpcnMoKTsKKwkJaWYgKHBhaXJzLmxlbmd0aCAhPSAwKSB7
CisJCQlzYi5hcHBlbmQoJygnKTsKKwkJCWZvciAoaW50IGkgPSAwOyBpIDwgcGFpcnMubGVuZ3Ro
OyBpKyspIHsKKwkJCQlpZiAoaSA+IDApIHsKKwkJCQkJc2IuYXBwZW5kKCcsJyk7CisJCQkJfQor
CQkJCXNiLmFwcGVuZChwYWlyc1tpXS5nZXROYW1lKCkpLmFwcGVuZCgnPScpLmFwcGVuZChwYWly
c1tpXS5nZXRWYWx1ZSgpKTsKKwkJCX0KKwkJCXNiLmFwcGVuZCgnKScpOworCQl9CisJCXNiLmFw
cGVuZCgnICcpOworCQkKKwkJLy8gdGFyZ2V0IHR5cGUKKwkJaW50IHRhcmdldFR5cGUgPSB0eXBl
QW5ub3RhdGlvbi5nZXRUYXJnZXRUeXBlKCk7CisJCXN3aXRjaCAodGFyZ2V0VHlwZSkgeworCQkJ
Y2FzZSBBbm5vdGF0aW9uVGFyZ2V0VHlwZUNvbnN0YW50cy5DTEFTU19UWVBFX1BBUkFNRVRFUjoK
KwkJCQlzYi5hcHBlbmQoIkNMQVNTX1RZUEVfUEFSQU1FVEVSKHR5cGVfcGFyYW1ldGVyX2luZGV4
PSIpLmFwcGVuZCh0eXBlQW5ub3RhdGlvbi5nZXRUeXBlUGFyYW1ldGVySW5kZXgoKSkuYXBwZW5k
KCcpJyk7CisJCQkJYnJlYWs7CisJCQljYXNlIEFubm90YXRpb25UYXJnZXRUeXBlQ29uc3RhbnRz
Lk1FVEhPRF9UWVBFX1BBUkFNRVRFUjoKKwkJCQlzYi5hcHBlbmQoIk1FVEhPRF9UWVBFX1BBUkFN
RVRFUih0eXBlX3BhcmFtZXRlcl9pbmRleD0iKS5hcHBlbmQodHlwZUFubm90YXRpb24uZ2V0VHlw
ZVBhcmFtZXRlckluZGV4KCkpLmFwcGVuZCgnKScpOworCQkJCWJyZWFrOworCQkJY2FzZSBBbm5v
dGF0aW9uVGFyZ2V0VHlwZUNvbnN0YW50cy5DTEFTU19FWFRFTkRTOgorCQkJCXNiLmFwcGVuZCgi
Q0xBU1NfRVhURU5EUyh0eXBlX2luZGV4PSIpLmFwcGVuZCgoc2hvcnQpdHlwZUFubm90YXRpb24u
Z2V0U3VwZXJ0eXBlSW5kZXgoKSkuYXBwZW5kKCcpJyk7CisJCQkJYnJlYWs7CisJCQljYXNlIEFu
bm90YXRpb25UYXJnZXRUeXBlQ29uc3RhbnRzLkNMQVNTX1RZUEVfUEFSQU1FVEVSX0JPVU5EOgor
CQkJCXNiLmFwcGVuZCgiQ0xBU1NfVFlQRV9QQVJBTUVURVJfQk9VTkQodHlwZV9wYXJhbWV0ZXJf
aW5kZXg9IikuCisJCQkJCWFwcGVuZCh0eXBlQW5ub3RhdGlvbi5nZXRUeXBlUGFyYW1ldGVySW5k
ZXgoKSkuCisJCQkJCWFwcGVuZCgiLCBib3VuZF9pbmRleD0iKS5hcHBlbmQodHlwZUFubm90YXRp
b24uZ2V0Qm91bmRJbmRleCgpKS4KKwkJCQkJYXBwZW5kKCcpJyk7CisJCQkJYnJlYWs7CisJCQlj
YXNlIEFubm90YXRpb25UYXJnZXRUeXBlQ29uc3RhbnRzLk1FVEhPRF9UWVBFX1BBUkFNRVRFUl9C
T1VORDoKKwkJCQlzYi5hcHBlbmQoIk1FVEhPRF9UWVBFX1BBUkFNRVRFUl9CT1VORCh0eXBlX3Bh
cmFtZXRlcl9pbmRleD0iKS4KKwkJCQkJYXBwZW5kKHR5cGVBbm5vdGF0aW9uLmdldFR5cGVQYXJh
bWV0ZXJJbmRleCgpKS4KKwkJCQkJYXBwZW5kKCIsIGJvdW5kX2luZGV4PSIpLmFwcGVuZCh0eXBl
QW5ub3RhdGlvbi5nZXRCb3VuZEluZGV4KCkpLgorCQkJCQlhcHBlbmQoJyknKTsKKwkJCQlicmVh
azsKKwkJCWNhc2UgQW5ub3RhdGlvblRhcmdldFR5cGVDb25zdGFudHMuRklFTEQ6CisJCQkJc2Iu
YXBwZW5kKCJGSUVMRCIpOworCQkJCWJyZWFrOworCQkJY2FzZSBBbm5vdGF0aW9uVGFyZ2V0VHlw
ZUNvbnN0YW50cy5NRVRIT0RfUkVUVVJOOgorCQkJCXNiLmFwcGVuZCgiTUVUSE9EX1JFVFVSTiIp
OworCQkJCWJyZWFrOworCQkJY2FzZSBBbm5vdGF0aW9uVGFyZ2V0VHlwZUNvbnN0YW50cy5NRVRI
T0RfUkVDRUlWRVI6CisJCQkJc2IuYXBwZW5kKCJNRVRIT0RfUkVDRUlWRVIiKTsKKwkJCQlicmVh
azsKKwkJCWNhc2UgQW5ub3RhdGlvblRhcmdldFR5cGVDb25zdGFudHMuTUVUSE9EX0ZPUk1BTF9Q
QVJBTUVURVIgOgorCQkJCXNiLmFwcGVuZCgiTUVUSE9EX0ZPUk1BTF9QQVJBTUVURVIobWV0aG9k
X2Zvcm1hbF9wYXJhbWV0ZXJfaW5kZXg9IikuCisJCQkJCWFwcGVuZCh0eXBlQW5ub3RhdGlvbi5n
ZXRNZXRob2RGb3JtYWxQYXJhbWV0ZXJJbmRleCgpKS5hcHBlbmQoJyknKTsKKwkJCQlicmVhazsK
KwkJCWNhc2UgQW5ub3RhdGlvblRhcmdldFR5cGVDb25zdGFudHMuVEhST1dTIDoKKwkJCQlzYi5h
cHBlbmQoIlRIUk9XUyh0aHJvd3NfdHlwZV9pbmRleD0iKS4KKwkJCQkJYXBwZW5kKHR5cGVBbm5v
dGF0aW9uLmdldFRocm93c1R5cGVJbmRleCgpKS5hcHBlbmQoJyknKTsKKwkJCQlicmVhazsKKwkJ
CWRlZmF1bHQ6IHRocm93IG5ldyBJbGxlZ2FsU3RhdGVFeGNlcHRpb24oIm55aSAiK3RhcmdldFR5
cGUpOworCQl9CisJCQorCQkvLyBsb2NhdGlvbgorCQlpbnRbXSB0eXBlcGF0aCA9IHR5cGVBbm5v
dGF0aW9uLmdldFR5cGVQYXRoKCk7CisJCQorCQlpZiAodHlwZXBhdGggIT0gSUJpbmFyeVR5cGVB
bm5vdGF0aW9uLk5PX1RZUEVfUEFUSCkgeworCQkJc2IuYXBwZW5kKCIsIGxvY2F0aW9uPVsiKTsg
Ly8kTk9OLU5MUy0xJAorCQkJZm9yIChpbnQgaSA9IDAsIG1heCA9IHR5cGVwYXRoLmxlbmd0aDsg
aSA8IG1heDsgaSArPSAyKSB7CisJCQkJaWYgKGkgPiAwKSB7CisJCQkJCXNiLmFwcGVuZCgiLCAi
KTsgLy8kTk9OLU5MUy0xJAorCQkJCX0KKwkJCQlzd2l0Y2ggKHR5cGVwYXRoW2ldKSB7CisJCQkJ
CWNhc2UgMDoKKwkJCQkJCXNiLmFwcGVuZCgiQVJSQVkiKTsgLy8kTk9OLU5MUy0xJAorCQkJCQkJ
YnJlYWs7CisJCQkJCWNhc2UgMToKKwkJCQkJCXNiLmFwcGVuZCgiSU5ORVJfVFlQRSIpOyAvLyRO
T04tTkxTLTEkCisJCQkJCQlicmVhazsKKwkJCQkJY2FzZSAyOgorCQkJCQkJc2IuYXBwZW5kKCJX
SUxEQ0FSRCIpOyAvLyROT04tTkxTLTEkCisJCQkJCQlicmVhazsKKwkJCQkJY2FzZSAzOgorCQkJ
CQkJc2IuYXBwZW5kKCJUWVBFX0FSR1VNRU5UKCIpLmFwcGVuZCh0eXBlcGF0aFtpKzFdKS5hcHBl
bmQoJyknKTsgLy8kTk9OLU5MUy0xJAorCQkJCQkJYnJlYWs7CisJCQkJfQorCQkJfQorCQkJc2Iu
YXBwZW5kKCddJyk7CisJCX0KKwkJcmV0dXJuIHNiLnRvU3RyaW5nKCk7CisJfQorCisJcHJpdmF0
ZSBJQmluYXJ5TWV0aG9kIGdldE1ldGhvZChDbGFzc0ZpbGVSZWFkZXIgY2ZyLFN0cmluZyBtZXRo
b2RuYW1lKSB7CisJCUlCaW5hcnlNZXRob2RbXSBtZXRob2RzID0gY2ZyLmdldE1ldGhvZHMoKTsK
KwkJaWYgKG1ldGhvZHMgPT0gbnVsbCkgeworCQkJcmV0dXJuIG51bGw7CisJCX0KKwkJY2hhcltd
IG1ldGhvZG5hbWVBc0NoYXJBcnJheSA9IG1ldGhvZG5hbWUudG9DaGFyQXJyYXkoKTsKKwkJZm9y
IChpbnQgaSA9IDAsIG1heCA9IG1ldGhvZHMubGVuZ3RoOyBpIDwgbWF4OyBpKyspIHsKKwkJCWlm
IChDaGFyT3BlcmF0aW9uLmVxdWFscyhtZXRob2RzW2ldLmdldFNlbGVjdG9yKCksbWV0aG9kbmFt
ZUFzQ2hhckFycmF5KSkgeworCQkJCXJldHVybiBtZXRob2RzW2ldOworCQkJfQorCQl9CisJCXJl
dHVybiBudWxsOworCX0KKworCXByaXZhdGUgSUJpbmFyeUZpZWxkIGdldEZpZWxkKENsYXNzRmls
ZVJlYWRlciBjZnIsU3RyaW5nIGZpZWxkbmFtZSkgeworCQlJQmluYXJ5RmllbGRbXSBmaWVsZHMg
PSBjZnIuZ2V0RmllbGRzKCk7CisJCWlmIChmaWVsZHMgPT0gbnVsbCkgeworCQkJcmV0dXJuIG51
bGw7CisJCX0KKwkJY2hhcltdIGZpZWxkbmFtZUFzQ2hhckFycmF5ID0gZmllbGRuYW1lLnRvQ2hh
ckFycmF5KCk7CisJCWZvciAoaW50IGkgPSAwLCBtYXggPSBmaWVsZHMubGVuZ3RoOyBpIDwgbWF4
OyBpKyspIHsKKwkJCWlmIChDaGFyT3BlcmF0aW9uLmVxdWFscyhmaWVsZHNbaV0uZ2V0TmFtZSgp
LGZpZWxkbmFtZUFzQ2hhckFycmF5KSkgeworCQkJCXJldHVybiBmaWVsZHNbaV07CisJCQl9CisJ
CX0KKwkJcmV0dXJuIG51bGw7CisJfQorCQorfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBp
bGVyL3JlZ3Jlc3Npb24vVGVzdEFsbC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
Y29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Np
b24vVGVzdEFsbC5qYXZhCmluZGV4IGEyZDE1YTYuLmU1ZjgwNjggMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90
ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Rlc3RBbGwuamF2YQorKysgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29t
cGlsZXIvcmVncmVzc2lvbi9UZXN0QWxsLmphdmEKQEAgLTE0LDggKzE0LDggQEAKICAqICAgICBT
dGVwaGFuIEhlcnJtYW5uIC0gQ29udHJpYnV0aW9ucyBmb3IKICAqCQkJCQkJCQlidWcgMTg2MzQy
IC0gW2NvbXBpbGVyXVtudWxsXSBVc2luZyBhbm5vdGF0aW9ucyBmb3IgbnVsbCBjaGVja2luZwog
ICoJCQkJCQkJCWJ1ZyAzNTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVz
b3VyY2UgbGVhayB3YXJuaW5ncwotICogICAgICAgIEFuZHkgQ2xlbWVudCAtIENvbnRyaWJ1dGlv
bnMgZm9yCi0gKiAgICAgICAgICAgICAgICAgICAgICAgICAgQnVnIDM4MzYyNCAtIFsxLjhdW2Nv
bXBpbGVyXSBSZXZpdmUgY29kZSBnZW5lcmF0aW9uIHN1cHBvcnQgZm9yIHR5cGUgYW5ub3RhdGlv
bnMgKGZyb20gT2xpdmllcidzIHdvcmspCisgKiAgICAgICAgQW5keSBDbGVtZW50IChHb1Bpdm90
YWwsIEluYykgYWNsZW1lbnRAZ29waXZvdGFsLmNvbSAtIENvbnRyaWJ1dGlvbnMgZm9yCisgKiAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJ1ZyA0MDcxOTEgLSBbMS44XSBCaW5hcnkgYWNj
ZXNzIHN1cHBvcnQgZm9yIHR5cGUgYW5ub3RhdGlvbnMKICAqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
LwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci5yZWdyZXNzaW9u
OwogCkBAIC0yMTUsNiArMjE1LDcgQEAgcHVibGljIHN0YXRpYyBUZXN0IHN1aXRlKCkgewogCQl0
ZXN0c18xXzguYWRkQWxsKHNpbmNlXzFfNik7CiAJCXRlc3RzXzFfOC5hZGRBbGwoc2luY2VfMV83
KTsKIAkJdGVzdHNfMV84LmFkZEFsbChzaW5jZV8xXzgpOworCQl0ZXN0c18xXzguYWRkKENsYXNz
RmlsZVJlYWRlclRlc3RfMV84LmNsYXNzKTsKIAkJLy8gUmVzZXQgZm9yZ290dGVuIHN1YnNldHMg
dGVzdHMKIAkJVGVzdENhc2UuVEVTVFNfUFJFRklYID0gbnVsbDsKIAkJVGVzdENhc2UuVEVTVFNf
TkFNRVMgPSBudWxsOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NsYXNzZm10L0NsYXNzRmlsZVJlYWRl
ci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2NsYXNzZm10L0NsYXNzRmlsZVJlYWRlci5qYXZhCmluZGV4IGZhMmZi
MGYuLjA5ZjE0NTQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jbGFzc2ZtdC9DbGFzc0ZpbGVSZWFkZXIu
amF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvY2xhc3NmbXQvQ2xhc3NGaWxlUmVhZGVyLmphdmEKQEAgLTEsMTMg
KzEsMTggQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAs
IDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAs
IDIwMTEsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJl
c2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBh
cmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBM
aWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQg
aXMgYXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAu
aHRtbAogICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQg
c3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9j
ZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlv
biBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkg
c3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgorICoKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJ
Qk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KICAqICAgICBT
dGVwaGFuIEhlcnJtYW5uIC0gQ29udHJpYnV0aW9uIGZvciBidWcgMzY1OTkyIC0gW2J1aWxkZXJd
IFtudWxsXSBDaGFuZ2Ugb2YgbnVsbG5lc3MgZm9yIGEgcGFyYW1ldGVyIGRvZXNuJ3QgdHJpZ2dl
ciBhIGJ1aWxkIGZvciB0aGUgZmlsZXMgdGhhdCBjYWxsIHRoZSBtZXRob2QKKyAqICAgICAgICBB
bmR5IENsZW1lbnQgLSBDb250cmlidXRpb25zIGZvciBCdWcgNDA3MTkxIC0gWzEuOF0gQmluYXJ5
IGFjY2VzcyBzdXBwb3J0IGZvciB0eXBlIGFubm90YXRpb25zIAogICoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jbGFzc2Zt
dDsKIApAQCAtMzIsNiArMzcsNyBAQCBwdWJsaWMgY2xhc3MgQ2xhc3NGaWxlUmVhZGVyIGV4dGVu
ZHMgQ2xhc3NGaWxlU3RydWN0IGltcGxlbWVudHMgSUJpbmFyeVR5cGUgewogCXByaXZhdGUgaW50
IGNsYXNzTmFtZUluZGV4OwogCXByaXZhdGUgaW50IGNvbnN0YW50UG9vbENvdW50OwogCXByaXZh
dGUgQW5ub3RhdGlvbkluZm9bXSBhbm5vdGF0aW9uczsKKwlwcml2YXRlIFR5cGVBbm5vdGF0aW9u
SW5mb1tdIHR5cGVBbm5vdGF0aW9uczsKIAlwcml2YXRlIEZpZWxkSW5mb1tdIGZpZWxkczsKIAlw
cml2YXRlIGludCBmaWVsZHNDb3VudDsKIApAQCAtMzU2LDYgKzM2MiwxMCBAQCBwdWJsaWMgQ2xh
c3NGaWxlUmVhZGVyKGJ5dGVbXSBjbGFzc0ZpbGVCeXRlcywgY2hhcltdIGZpbGVOYW1lLCBib29s
ZWFuIGZ1bGx5SW5pdAogCQkJCQkJZGVjb2RlQW5ub3RhdGlvbnMocmVhZE9mZnNldCwgdHJ1ZSk7
CiAJCQkJCX0gZWxzZSBpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoYXR0cmlidXRlTmFtZSwgQXR0
cmlidXRlTmFtZXNDb25zdGFudHMuUnVudGltZUludmlzaWJsZUFubm90YXRpb25zTmFtZSkpIHsK
IAkJCQkJCWRlY29kZUFubm90YXRpb25zKHJlYWRPZmZzZXQsIGZhbHNlKTsKKwkJCQkJfSBlbHNl
IGlmIChDaGFyT3BlcmF0aW9uLmVxdWFscyhhdHRyaWJ1dGVOYW1lLCBBdHRyaWJ1dGVOYW1lc0Nv
bnN0YW50cy5SdW50aW1lVmlzaWJsZVR5cGVBbm5vdGF0aW9uc05hbWUpKSB7CisJCQkJCQlkZWNv
ZGVUeXBlQW5ub3RhdGlvbnMocmVhZE9mZnNldCwgdHJ1ZSk7CisJCQkJCX0gZWxzZSBpZiAoQ2hh
ck9wZXJhdGlvbi5lcXVhbHMoYXR0cmlidXRlTmFtZSwgQXR0cmlidXRlTmFtZXNDb25zdGFudHMu
UnVudGltZUludmlzaWJsZVR5cGVBbm5vdGF0aW9uc05hbWUpKSB7CisJCQkJCQlkZWNvZGVUeXBl
QW5ub3RhdGlvbnMocmVhZE9mZnNldCwgZmFsc2UpOwogCQkJCQl9CiAJCQkJCWJyZWFrOwogCQkJ
CWNhc2UgJ00nIDoKQEAgLTQzNCw2ICs0NDQsMzMgQEAgcHJpdmF0ZSB2b2lkIGRlY29kZUFubm90
YXRpb25zKGludCBvZmZzZXQsIGJvb2xlYW4gcnVudGltZVZpc2libGUpIHsKIAl9CiB9CiAKK3By
aXZhdGUgdm9pZCBkZWNvZGVUeXBlQW5ub3RhdGlvbnMoaW50IG9mZnNldCwgYm9vbGVhbiBydW50
aW1lVmlzaWJsZSkgeworCWludCBudW1iZXJPZkFubm90YXRpb25zID0gdTJBdChvZmZzZXQgKyA2
KTsKKwlpZiAobnVtYmVyT2ZBbm5vdGF0aW9ucyA+IDApIHsKKwkJaW50IHJlYWRPZmZzZXQgPSBv
ZmZzZXQgKyA4OworCQlUeXBlQW5ub3RhdGlvbkluZm9bXSBuZXdJbmZvcyA9IG51bGw7CisJCWlu
dCBuZXdJbmZvQ291bnQgPSAwOworCQluZXdJbmZvcyA9IG5ldyBUeXBlQW5ub3RhdGlvbkluZm9b
bnVtYmVyT2ZBbm5vdGF0aW9uc107CisJCWZvciAoaW50IGkgPSAwOyBpIDwgbnVtYmVyT2ZBbm5v
dGF0aW9uczsgaSsrKSB7CisJCQkvLyBXaXRoIHRoZSBsYXN0IHBhcmFtZXRlciBiZWluZyAnZmFs
c2UnLCB0aGUgZGF0YSBzdHJ1Y3R1cmUgd2lsbCBub3QgYmUgZmx1c2hlZCBvdXQKKwkJCVR5cGVB
bm5vdGF0aW9uSW5mbyBuZXdJbmZvID0gbmV3IFR5cGVBbm5vdGF0aW9uSW5mbyh0aGlzLnJlZmVy
ZW5jZSwgdGhpcy5jb25zdGFudFBvb2xPZmZzZXRzLCByZWFkT2Zmc2V0LCBydW50aW1lVmlzaWJs
ZSwgZmFsc2UpOworCQkJcmVhZE9mZnNldCArPSBuZXdJbmZvLnJlYWRPZmZzZXQ7CisJCQluZXdJ
bmZvc1tuZXdJbmZvQ291bnQrK10gPSBuZXdJbmZvOworCQl9CisJCWlmICh0aGlzLmFubm90YXRp
b25zID09IG51bGwpIHsKKwkJCWlmIChuZXdJbmZvQ291bnQgIT0gbmV3SW5mb3MubGVuZ3RoKQor
CQkJCVN5c3RlbS5hcnJheWNvcHkobmV3SW5mb3MsIDAsIG5ld0luZm9zID0gbmV3IFR5cGVBbm5v
dGF0aW9uSW5mb1tuZXdJbmZvQ291bnRdLCAwLCBuZXdJbmZvQ291bnQpOworCQkJdGhpcy50eXBl
QW5ub3RhdGlvbnMgPSBuZXdJbmZvczsKKwkJfSBlbHNlIHsKKwkJCWludCBsZW5ndGggPSB0aGlz
LnR5cGVBbm5vdGF0aW9ucy5sZW5ndGg7CisJCQlUeXBlQW5ub3RhdGlvbkluZm9bXSB0ZW1wID0g
bmV3IFR5cGVBbm5vdGF0aW9uSW5mb1tsZW5ndGggKyBuZXdJbmZvQ291bnRdOworCQkJU3lzdGVt
LmFycmF5Y29weSh0aGlzLnR5cGVBbm5vdGF0aW9ucywgMCwgdGVtcCwgMCwgbGVuZ3RoKTsKKwkJ
CVN5c3RlbS5hcnJheWNvcHkobmV3SW5mb3MsIDAsIHRlbXAsIGxlbmd0aCwgbmV3SW5mb0NvdW50
KTsKKwkJCXRoaXMudHlwZUFubm90YXRpb25zID0gdGVtcDsKKwkJfQorCX0KK30KKwogLyoqCiAg
KiBAcmV0dXJuIHRoZSBhbm5vdGF0aW9ucyBvciBudWxsIGlmIHRoZXJlIGlzIG5vbmUuCiAgKi8K
QEAgLTQ0Miw2ICs0NzksMTMgQEAgcHVibGljIElCaW5hcnlBbm5vdGF0aW9uW10gZ2V0QW5ub3Rh
dGlvbnMoKSB7CiB9CiAKIC8qKgorICogQHJldHVybiB0aGUgdHlwZSBhbm5vdGF0aW9ucyBvciBu
dWxsIGlmIHRoZXJlIGlzIG5vbmUuCisgKi8KK3B1YmxpYyBJQmluYXJ5VHlwZUFubm90YXRpb25b
XSBnZXRUeXBlQW5ub3RhdGlvbnMoKSB7CisJcmV0dXJuIHRoaXMudHlwZUFubm90YXRpb25zOwor
fQorCisvKioKICAqIEFuc3dlciB0aGUgY2hhciBhcnJheSB0aGF0IGNvcnJlc3BvbmRzIHRvIHRo
ZSBjbGFzcyBuYW1lIG9mIHRoZSBjb25zdGFudCBjbGFzcy4KICAqIGNvbnN0YW50UG9vbEluZGV4
IGlzIHRoZSBpbmRleCBpbiB0aGUgY29uc3RhbnQgcG9vbCB0aGF0IGlzIGEgY29uc3RhbnQgY2xh
c3MgZW50cnkuCiAgKgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NsYXNzZm10L0ZpZWxkSW5mby5qYXZh
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2NsYXNzZm10L0ZpZWxkSW5mby5qYXZhCmluZGV4IDhlYWVhMDkuLmQwY2I4NmMg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9jbGFzc2ZtdC9GaWVsZEluZm8uamF2YQorKysgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
Y2xhc3NmbXQvRmllbGRJbmZvLmphdmEKQEAgLTEsMTIgKzEsMTggQEAKIC8qKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMDggSUJNIENvcnBvcmF0aW9uIGFu
ZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMDgsIDIwMTMgSUJNIENvcnBvcmF0
aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5k
IHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIg
dGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFj
Y29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBodHRw
Oi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAogICoKKyAqIFRoaXMgaXMgYW4g
aW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQg
dW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2
YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhl
IGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQ
LgorICoKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFs
IEFQSSBhbmQgaW1wbGVtZW50YXRpb24KKyAqICAgICAgICBBbmR5IENsZW1lbnQgKEdvUGl2b3Rh
bCwgSW5jKSBhY2xlbWVudEBnb3Bpdm90YWwuY29tIC0gQ29udHJpYnV0aW9ucyBmb3IKKyAqICAg
ICAgICAgIEJ1ZyA0MDcxOTEgLSBbMS44XSBCaW5hcnkgYWNjZXNzIHN1cHBvcnQgZm9yIHR5cGUg
YW5ub3RhdGlvbnMgCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNsYXNzZm10OwogCkBAIC0xNCw2ICsyMCw3IEBAIGlt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5DaGFyT3BlcmF0aW9uOwogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jb2RlZ2VuLkF0dHJpYnV0ZU5hbWVz
Q29uc3RhbnRzOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYu
SUJpbmFyeUFubm90YXRpb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLmVudi5JQmluYXJ5RmllbGQ7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmVudi5JQmluYXJ5VHlwZUFubm90YXRpb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLmltcGwuKjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIubG9va3VwLlR5cGVJZHM7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLnV0aWwuVXRpbDsKQEAgLTMxLDEwICszOCw2NSBAQCBwdWJsaWMgY2xhc3Mg
RmllbGRJbmZvIGV4dGVuZHMgQ2xhc3NGaWxlU3RydWN0IGltcGxlbWVudHMgSUJpbmFyeUZpZWxk
LCBDb21wYXJhYgogCiBwdWJsaWMgc3RhdGljIEZpZWxkSW5mbyBjcmVhdGVGaWVsZChieXRlIGNs
YXNzRmlsZUJ5dGVzW10sIGludCBvZmZzZXRzW10sIGludCBvZmZzZXQpIHsKIAlGaWVsZEluZm8g
ZmllbGRJbmZvID0gbmV3IEZpZWxkSW5mbyhjbGFzc0ZpbGVCeXRlcywgb2Zmc2V0cywgb2Zmc2V0
KTsKLQlBbm5vdGF0aW9uSW5mb1tdIGFubm90YXRpb25zID0gZmllbGRJbmZvLnJlYWRBdHRyaWJ1
dGVzKCk7Ci0JaWYgKGFubm90YXRpb25zID09IG51bGwpCi0JCXJldHVybiBmaWVsZEluZm87Ci0J
cmV0dXJuIG5ldyBGaWVsZEluZm9XaXRoQW5ub3RhdGlvbihmaWVsZEluZm8sIGFubm90YXRpb25z
KTsKKwkKKwlpbnQgYXR0cmlidXRlc0NvdW50ID0gZmllbGRJbmZvLnUyQXQoNik7CisJaW50IHJl
YWRPZmZzZXQgPSA4OworCUFubm90YXRpb25JbmZvW10gYW5ub3RhdGlvbnMgPSBudWxsOworCVR5
cGVBbm5vdGF0aW9uSW5mb1tdIHR5cGVBbm5vdGF0aW9ucyA9IG51bGw7CisJZm9yIChpbnQgaSA9
IDA7IGkgPCBhdHRyaWJ1dGVzQ291bnQ7IGkrKykgeworCQkvLyBjaGVjayB0aGUgbmFtZSBvZiBl
YWNoIGF0dHJpYnV0ZQorCQlpbnQgdXRmOE9mZnNldCA9IGZpZWxkSW5mby5jb25zdGFudFBvb2xP
ZmZzZXRzW2ZpZWxkSW5mby51MkF0KHJlYWRPZmZzZXQpXSAtIGZpZWxkSW5mby5zdHJ1Y3RPZmZz
ZXQ7CisJCWNoYXJbXSBhdHRyaWJ1dGVOYW1lID0gZmllbGRJbmZvLnV0ZjhBdCh1dGY4T2Zmc2V0
ICsgMywgZmllbGRJbmZvLnUyQXQodXRmOE9mZnNldCArIDEpKTsKKwkJaWYgKGF0dHJpYnV0ZU5h
bWUubGVuZ3RoID4gMCkgeworCQkJc3dpdGNoKGF0dHJpYnV0ZU5hbWVbMF0pIHsKKwkJCQljYXNl
ICdTJyA6CisJCQkJCWlmIChDaGFyT3BlcmF0aW9uLmVxdWFscyhBdHRyaWJ1dGVOYW1lc0NvbnN0
YW50cy5TaWduYXR1cmVOYW1lLCBhdHRyaWJ1dGVOYW1lKSkKKwkJCQkJCWZpZWxkSW5mby5zaWdu
YXR1cmVVdGY4T2Zmc2V0ID0gZmllbGRJbmZvLmNvbnN0YW50UG9vbE9mZnNldHNbZmllbGRJbmZv
LnUyQXQocmVhZE9mZnNldCArIDYpXSAtIGZpZWxkSW5mby5zdHJ1Y3RPZmZzZXQ7CisJCQkJCWJy
ZWFrOworCQkJCWNhc2UgJ1InIDoKKwkJCQkJQW5ub3RhdGlvbkluZm9bXSBkZWNvZGVkQW5ub3Rh
dGlvbnMgPSBudWxsOworCQkJCQlUeXBlQW5ub3RhdGlvbkluZm9bXSBkZWNvZGVkVHlwZUFubm90
YXRpb25zID0gbnVsbDsKKwkJCQkJaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKGF0dHJpYnV0ZU5h
bWUsIEF0dHJpYnV0ZU5hbWVzQ29uc3RhbnRzLlJ1bnRpbWVWaXNpYmxlQW5ub3RhdGlvbnNOYW1l
KSkgeworCQkJCQkJZGVjb2RlZEFubm90YXRpb25zID0gZmllbGRJbmZvLmRlY29kZUFubm90YXRp
b25zKHJlYWRPZmZzZXQsIHRydWUpOworCQkJCQl9IGVsc2UgaWYgKENoYXJPcGVyYXRpb24uZXF1
YWxzKGF0dHJpYnV0ZU5hbWUsIEF0dHJpYnV0ZU5hbWVzQ29uc3RhbnRzLlJ1bnRpbWVJbnZpc2li
bGVBbm5vdGF0aW9uc05hbWUpKSB7CisJCQkJCQlkZWNvZGVkQW5ub3RhdGlvbnMgPSBmaWVsZElu
Zm8uZGVjb2RlQW5ub3RhdGlvbnMocmVhZE9mZnNldCwgZmFsc2UpOworCQkJCQl9IGVsc2UgaWYg
KENoYXJPcGVyYXRpb24uZXF1YWxzKGF0dHJpYnV0ZU5hbWUsIEF0dHJpYnV0ZU5hbWVzQ29uc3Rh
bnRzLlJ1bnRpbWVWaXNpYmxlVHlwZUFubm90YXRpb25zTmFtZSkpIHsKKwkJCQkJCWRlY29kZWRU
eXBlQW5ub3RhdGlvbnMgPSBmaWVsZEluZm8uZGVjb2RlVHlwZUFubm90YXRpb25zKHJlYWRPZmZz
ZXQsIHRydWUpOworCQkJCQl9IGVsc2UgaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKGF0dHJpYnV0
ZU5hbWUsIEF0dHJpYnV0ZU5hbWVzQ29uc3RhbnRzLlJ1bnRpbWVJbnZpc2libGVUeXBlQW5ub3Rh
dGlvbnNOYW1lKSkgeworCQkJCQkJZGVjb2RlZFR5cGVBbm5vdGF0aW9ucyA9IGZpZWxkSW5mby5k
ZWNvZGVUeXBlQW5ub3RhdGlvbnMocmVhZE9mZnNldCwgZmFsc2UpOworCQkJCQl9CisJCQkJCWlm
IChkZWNvZGVkQW5ub3RhdGlvbnMgIT0gbnVsbCkgeworCQkJCQkJaWYgKGFubm90YXRpb25zID09
IG51bGwpIHsKKwkJCQkJCQlhbm5vdGF0aW9ucyA9IGRlY29kZWRBbm5vdGF0aW9uczsKKwkJCQkJ
CX0gZWxzZSB7CisJCQkJCQkJaW50IGxlbmd0aCA9IGFubm90YXRpb25zLmxlbmd0aDsKKwkJCQkJ
CQlBbm5vdGF0aW9uSW5mb1tdIGNvbWJpbmVkID0gbmV3IEFubm90YXRpb25JbmZvW2xlbmd0aCAr
IGRlY29kZWRBbm5vdGF0aW9ucy5sZW5ndGhdOworCQkJCQkJCVN5c3RlbS5hcnJheWNvcHkoYW5u
b3RhdGlvbnMsIDAsIGNvbWJpbmVkLCAwLCBsZW5ndGgpOworCQkJCQkJCVN5c3RlbS5hcnJheWNv
cHkoZGVjb2RlZEFubm90YXRpb25zLCAwLCBjb21iaW5lZCwgbGVuZ3RoLCBkZWNvZGVkQW5ub3Rh
dGlvbnMubGVuZ3RoKTsKKwkJCQkJCQlhbm5vdGF0aW9ucyA9IGNvbWJpbmVkOworCQkJCQkJfQor
CQkJCQl9IGVsc2UgaWYgKGRlY29kZWRUeXBlQW5ub3RhdGlvbnMgIT0gbnVsbCkgeworCQkJCQkJ
aWYgKHR5cGVBbm5vdGF0aW9ucyA9PSBudWxsKSB7CisJCQkJCQkJdHlwZUFubm90YXRpb25zID0g
ZGVjb2RlZFR5cGVBbm5vdGF0aW9uczsKKwkJCQkJCX0gZWxzZSB7CisJCQkJCQkJaW50IGxlbmd0
aCA9IHR5cGVBbm5vdGF0aW9ucy5sZW5ndGg7CisJCQkJCQkJVHlwZUFubm90YXRpb25JbmZvW10g
Y29tYmluZWQgPSBuZXcgVHlwZUFubm90YXRpb25JbmZvW2xlbmd0aCArIGRlY29kZWRUeXBlQW5u
b3RhdGlvbnMubGVuZ3RoXTsKKwkJCQkJCQlTeXN0ZW0uYXJyYXljb3B5KHR5cGVBbm5vdGF0aW9u
cywgMCwgY29tYmluZWQsIDAsIGxlbmd0aCk7CisJCQkJCQkJU3lzdGVtLmFycmF5Y29weShkZWNv
ZGVkVHlwZUFubm90YXRpb25zLCAwLCBjb21iaW5lZCwgbGVuZ3RoLCBkZWNvZGVkVHlwZUFubm90
YXRpb25zLmxlbmd0aCk7CisJCQkJCQkJdHlwZUFubm90YXRpb25zID0gY29tYmluZWQ7CisJCQkJ
CQl9CisJCQkJCX0KKwkJCX0KKwkJfQorCQlyZWFkT2Zmc2V0ICs9ICg2ICsgZmllbGRJbmZvLnU0
QXQocmVhZE9mZnNldCArIDIpKTsKKwl9CisJZmllbGRJbmZvLmF0dHJpYnV0ZUJ5dGVzID0gcmVh
ZE9mZnNldDsKKwkKKwlpZiAodHlwZUFubm90YXRpb25zICE9IG51bGwpCisJCXJldHVybiBuZXcg
RmllbGRJbmZvV2l0aFR5cGVBbm5vdGF0aW9uKGZpZWxkSW5mbywgYW5ub3RhdGlvbnMsIHR5cGVB
bm5vdGF0aW9ucyk7CisJaWYgKGFubm90YXRpb25zICE9IG51bGwpCisJCXJldHVybiBuZXcgRmll
bGRJbmZvV2l0aEFubm90YXRpb24oZmllbGRJbmZvLCBhbm5vdGF0aW9ucyk7CisJcmV0dXJuIGZp
ZWxkSW5mbzsKIH0KIAogLyoqCkBAIC03NSw2ICsxMzcsMjIgQEAgcHJpdmF0ZSBBbm5vdGF0aW9u
SW5mb1tdIGRlY29kZUFubm90YXRpb25zKGludCBvZmZzZXQsIGJvb2xlYW4gcnVudGltZVZpc2li
bGUpIHsKIAl9CiAJcmV0dXJuIG51bGw7IC8vIG5vdGhpbmcgdG8gcmVjb3JkCiB9CisKK1R5cGVB
bm5vdGF0aW9uSW5mb1tdIGRlY29kZVR5cGVBbm5vdGF0aW9ucyhpbnQgb2Zmc2V0LCBib29sZWFu
IHJ1bnRpbWVWaXNpYmxlKSB7CisJaW50IG51bWJlck9mQW5ub3RhdGlvbnMgPSB1MkF0KG9mZnNl
dCArIDYpOworCWlmIChudW1iZXJPZkFubm90YXRpb25zID4gMCkgeworCQlpbnQgcmVhZE9mZnNl
dCA9IG9mZnNldCArIDg7CisJCVR5cGVBbm5vdGF0aW9uSW5mb1tdIHR5cGVBbm5vcyA9IG5ldyBU
eXBlQW5ub3RhdGlvbkluZm9bbnVtYmVyT2ZBbm5vdGF0aW9uc107CisJCWZvciAoaW50IGkgPSAw
OyBpIDwgbnVtYmVyT2ZBbm5vdGF0aW9uczsgaSsrKSB7CisJCQlUeXBlQW5ub3RhdGlvbkluZm8g
bmV3SW5mbyA9IG5ldyBUeXBlQW5ub3RhdGlvbkluZm8odGhpcy5yZWZlcmVuY2UsIHRoaXMuY29u
c3RhbnRQb29sT2Zmc2V0cywgcmVhZE9mZnNldCArIHRoaXMuc3RydWN0T2Zmc2V0LCBydW50aW1l
VmlzaWJsZSwgZmFsc2UpOworCQkJcmVhZE9mZnNldCArPSBuZXdJbmZvLnJlYWRPZmZzZXQ7CisJ
CQl0eXBlQW5ub3NbaV0gPSBuZXdJbmZvOworCQl9CisJCXJldHVybiB0eXBlQW5ub3M7CisJfQor
CXJldHVybiBudWxsOworfQorCiBwdWJsaWMgaW50IGNvbXBhcmVUbyhPYmplY3QgbykgewogCXJl
dHVybiBuZXcgU3RyaW5nKGdldE5hbWUoKSkuY29tcGFyZVRvKG5ldyBTdHJpbmcoKChGaWVsZElu
Zm8pIG8pLmdldE5hbWUoKSkpOwogfQpAQCAtMTYzLDYgKzI0MSwxMCBAQCBwdWJsaWMgY2hhcltd
IGdldFR5cGVOYW1lKCkgewogcHVibGljIElCaW5hcnlBbm5vdGF0aW9uW10gZ2V0QW5ub3RhdGlv
bnMoKSB7CiAJcmV0dXJuIG51bGw7CiB9CisKK3B1YmxpYyBJQmluYXJ5VHlwZUFubm90YXRpb25b
XSBnZXRUeXBlQW5ub3RhdGlvbnMoKSB7CisJcmV0dXJuIG51bGw7Cit9CiAvKioKICAqIFJldHVy
biBhIHdyYXBwZXIgdGhhdCBjb250YWlucyB0aGUgY29uc3RhbnQgb2YgdGhlIGZpZWxkLgogICog
QHJldHVybiBqYXZhLmxhbmcuT2JqZWN0CkBAIC0yMzAsNDUgKzMxMiw2IEBAIHByb3RlY3RlZCB2
b2lkIGluaXRpYWxpemUoKSB7CiBwdWJsaWMgYm9vbGVhbiBpc1N5bnRoZXRpYygpIHsKIAlyZXR1
cm4gKGdldE1vZGlmaWVycygpICYgQ2xhc3NGaWxlQ29uc3RhbnRzLkFjY1N5bnRoZXRpYykgIT0g
MDsKIH0KLXByaXZhdGUgQW5ub3RhdGlvbkluZm9bXSByZWFkQXR0cmlidXRlcygpIHsKLQlpbnQg
YXR0cmlidXRlc0NvdW50ID0gdTJBdCg2KTsKLQlpbnQgcmVhZE9mZnNldCA9IDg7Ci0JQW5ub3Rh
dGlvbkluZm9bXSBhbm5vdGF0aW9ucyA9IG51bGw7Ci0JZm9yIChpbnQgaSA9IDA7IGkgPCBhdHRy
aWJ1dGVzQ291bnQ7IGkrKykgewotCQkvLyBjaGVjayB0aGUgbmFtZSBvZiBlYWNoIGF0dHJpYnV0
ZQotCQlpbnQgdXRmOE9mZnNldCA9IHRoaXMuY29uc3RhbnRQb29sT2Zmc2V0c1t1MkF0KHJlYWRP
ZmZzZXQpXSAtIHRoaXMuc3RydWN0T2Zmc2V0OwotCQljaGFyW10gYXR0cmlidXRlTmFtZSA9IHV0
ZjhBdCh1dGY4T2Zmc2V0ICsgMywgdTJBdCh1dGY4T2Zmc2V0ICsgMSkpOwotCQlpZiAoYXR0cmli
dXRlTmFtZS5sZW5ndGggPiAwKSB7Ci0JCQlzd2l0Y2goYXR0cmlidXRlTmFtZVswXSkgewotCQkJ
CWNhc2UgJ1MnIDoKLQkJCQkJaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKEF0dHJpYnV0ZU5hbWVz
Q29uc3RhbnRzLlNpZ25hdHVyZU5hbWUsIGF0dHJpYnV0ZU5hbWUpKQotCQkJCQkJdGhpcy5zaWdu
YXR1cmVVdGY4T2Zmc2V0ID0gdGhpcy5jb25zdGFudFBvb2xPZmZzZXRzW3UyQXQocmVhZE9mZnNl
dCArIDYpXSAtIHRoaXMuc3RydWN0T2Zmc2V0OwotCQkJCQlicmVhazsKLQkJCQljYXNlICdSJyA6
Ci0JCQkJCUFubm90YXRpb25JbmZvW10gZGVjb2RlZEFubm90YXRpb25zID0gbnVsbDsKLQkJCQkJ
aWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKGF0dHJpYnV0ZU5hbWUsIEF0dHJpYnV0ZU5hbWVzQ29u
c3RhbnRzLlJ1bnRpbWVWaXNpYmxlQW5ub3RhdGlvbnNOYW1lKSkgewotCQkJCQkJZGVjb2RlZEFu
bm90YXRpb25zID0gZGVjb2RlQW5ub3RhdGlvbnMocmVhZE9mZnNldCwgdHJ1ZSk7Ci0JCQkJCX0g
ZWxzZSBpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoYXR0cmlidXRlTmFtZSwgQXR0cmlidXRlTmFt
ZXNDb25zdGFudHMuUnVudGltZUludmlzaWJsZUFubm90YXRpb25zTmFtZSkpIHsKLQkJCQkJCWRl
Y29kZWRBbm5vdGF0aW9ucyA9IGRlY29kZUFubm90YXRpb25zKHJlYWRPZmZzZXQsIGZhbHNlKTsK
LQkJCQkJfQotCQkJCQlpZiAoZGVjb2RlZEFubm90YXRpb25zICE9IG51bGwpIHsKLQkJCQkJCWlm
IChhbm5vdGF0aW9ucyA9PSBudWxsKSB7Ci0JCQkJCQkJYW5ub3RhdGlvbnMgPSBkZWNvZGVkQW5u
b3RhdGlvbnM7Ci0JCQkJCQl9IGVsc2UgewotCQkJCQkJCWludCBsZW5ndGggPSBhbm5vdGF0aW9u
cy5sZW5ndGg7Ci0JCQkJCQkJQW5ub3RhdGlvbkluZm9bXSBjb21iaW5lZCA9IG5ldyBBbm5vdGF0
aW9uSW5mb1tsZW5ndGggKyBkZWNvZGVkQW5ub3RhdGlvbnMubGVuZ3RoXTsKLQkJCQkJCQlTeXN0
ZW0uYXJyYXljb3B5KGFubm90YXRpb25zLCAwLCBjb21iaW5lZCwgMCwgbGVuZ3RoKTsKLQkJCQkJ
CQlTeXN0ZW0uYXJyYXljb3B5KGRlY29kZWRBbm5vdGF0aW9ucywgMCwgY29tYmluZWQsIGxlbmd0
aCwgZGVjb2RlZEFubm90YXRpb25zLmxlbmd0aCk7Ci0JCQkJCQkJYW5ub3RhdGlvbnMgPSBjb21i
aW5lZDsKLQkJCQkJCX0KLQkJCQkJfQotCQkJfQotCQl9Ci0JCXJlYWRPZmZzZXQgKz0gKDYgKyB1
NEF0KHJlYWRPZmZzZXQgKyAyKSk7Ci0JfQotCXRoaXMuYXR0cmlidXRlQnl0ZXMgPSByZWFkT2Zm
c2V0OwotCXJldHVybiBhbm5vdGF0aW9uczsKLX0KIHByaXZhdGUgdm9pZCByZWFkQ29uc3RhbnRB
dHRyaWJ1dGUoKSB7CiAJaW50IGF0dHJpYnV0ZXNDb3VudCA9IHUyQXQoNik7CiAJaW50IHJlYWRP
ZmZzZXQgPSA4OwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NsYXNzZm10L0ZpZWxkSW5mb1dpdGhBbm5v
dGF0aW9uLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvY2xhc3NmbXQvRmllbGRJbmZvV2l0aEFubm90YXRpb24uamF2
YQppbmRleCA0ZTNjNDM1Li45YzE2MGNjIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY2xhc3NmbXQvRmll
bGRJbmZvV2l0aEFubm90YXRpb24uamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY2xhc3NmbXQvRmllbGRJbmZv
V2l0aEFubm90YXRpb24uamF2YQpAQCAtNSwxMiArNSwxOCBAQAogICogd2hpY2ggYWNjb21wYW5p
ZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cu
ZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCiAgKgorICogVGhpcyBpcyBhbiBpbXBsZW1l
bnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0
aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxl
IGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBp
cyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKgog
ICogQ29udHJpYnV0b3JzOgogICogICAgdHlldW5nQGJlYS5jb20gLSBpbml0aWFsIEFQSSBhbmQg
aW1wbGVtZW50YXRpb24KKyAqICAgICAgICBBbmR5IENsZW1lbnQgKEdvUGl2b3RhbCwgSW5jKSBh
Y2xlbWVudEBnb3Bpdm90YWwuY29tIC0gQ29udHJpYnV0aW9ucyBmb3IKKyAqICAgICAgICAgIEJ1
ZyA0MDcxOTEgLSBbMS44XSBCaW5hcnkgYWNjZXNzIHN1cHBvcnQgZm9yIHR5cGUgYW5ub3RhdGlv
bnMKICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIuY2xhc3NmbXQ7CiAKLXB1YmxpYyBmaW5hbCBjbGFzcyBGaWVsZEluZm9X
aXRoQW5ub3RhdGlvbiBleHRlbmRzIEZpZWxkSW5mbyB7CitwdWJsaWMgY2xhc3MgRmllbGRJbmZv
V2l0aEFubm90YXRpb24gZXh0ZW5kcyBGaWVsZEluZm8gewogCXByaXZhdGUgQW5ub3RhdGlvbklu
Zm9bXSBhbm5vdGF0aW9uczsKIAogRmllbGRJbmZvV2l0aEFubm90YXRpb24oRmllbGRJbmZvIGlu
Zm8sIEFubm90YXRpb25JbmZvW10gYW5ub3MpIHsKQEAgLTMxLDggKzM3LDkgQEAgcHVibGljIG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuSUJpbmFyeUFubm90YXRpb25bXSBn
ZXRBbm5vdGF0aW9ucygKIAlyZXR1cm4gdGhpcy5hbm5vdGF0aW9uczsKIH0KIHByb3RlY3RlZCB2
b2lkIGluaXRpYWxpemUoKSB7Ci0JZm9yIChpbnQgaSA9IDAsIG1heCA9IHRoaXMuYW5ub3RhdGlv
bnMubGVuZ3RoOyBpIDwgbWF4OyBpKyspCi0JCXRoaXMuYW5ub3RhdGlvbnNbaV0uaW5pdGlhbGl6
ZSgpOworCWlmICh0aGlzLmFubm90YXRpb25zICE9IG51bGwpCisJCWZvciAoaW50IGkgPSAwLCBt
YXggPSB0aGlzLmFubm90YXRpb25zLmxlbmd0aDsgaSA8IG1heDsgaSsrKQorCQkJdGhpcy5hbm5v
dGF0aW9uc1tpXS5pbml0aWFsaXplKCk7CiAJc3VwZXIuaW5pdGlhbGl6ZSgpOwogfQogcHJvdGVj
dGVkIHZvaWQgcmVzZXQoKSB7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY2xhc3NmbXQvRmllbGRJbmZv
V2l0aFR5cGVBbm5vdGF0aW9uLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY2xhc3NmbXQvRmllbGRJbmZvV2l0aFR5
cGVBbm5vdGF0aW9uLmphdmEKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMC4uZjgw
MDg1ZAotLS0gL2Rldi9udWxsCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jbGFzc2ZtdC9GaWVsZEluZm9XaXRoVHlw
ZUFubm90YXRpb24uamF2YQpAQCAtMCwwICsxLDU0IEBACisvKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KgorICogQ29weXJpZ2h0IChjKSAyMDEzIEdvUGl2b3RhbCwgSW5jLiBBbGwgUmlnaHRzIFJlc2Vy
dmVkLgorICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21w
YW55aW5nIG1hdGVyaWFscworICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBv
ZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCisgKiB3aGljaCBhY2NvbXBhbmllcyB0
aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAorICogaHR0cDovL3d3dy5lY2xp
cHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0
aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBK
YXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9y
IHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5v
dCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqCisgKiBD
b250cmlidXRvcnM6CisgKiAgICAgICAgQW5keSBDbGVtZW50IChHb1Bpdm90YWwsIEluYykgYWNs
ZW1lbnRAZ29waXZvdGFsLmNvbSAtIENvbnRyaWJ1dGlvbnMgZm9yCisgKiAgICAgICAgICBCdWcg
NDA3MTkxIC0gWzEuOF0gQmluYXJ5IGFjY2VzcyBzdXBwb3J0IGZvciB0eXBlIGFubm90YXRpb25z
CisgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKi8KK3BhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmNsYXNzZm10OworCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmVudi5JQmluYXJ5VHlwZUFubm90YXRpb247CisKK3B1YmxpYyBmaW5hbCBjbGFz
cyBGaWVsZEluZm9XaXRoVHlwZUFubm90YXRpb24gZXh0ZW5kcyBGaWVsZEluZm9XaXRoQW5ub3Rh
dGlvbiB7CisJcHJpdmF0ZSBUeXBlQW5ub3RhdGlvbkluZm9bXSB0eXBlQW5ub3RhdGlvbnM7CisK
K0ZpZWxkSW5mb1dpdGhUeXBlQW5ub3RhdGlvbihGaWVsZEluZm8gaW5mbywgQW5ub3RhdGlvbklu
Zm9bXSBhbm5vcywgVHlwZUFubm90YXRpb25JbmZvW10gdHlwZUFubm9zKSB7CisJc3VwZXIoaW5m
bywgYW5ub3MpOworCXRoaXMudHlwZUFubm90YXRpb25zID0gdHlwZUFubm9zOworfQorcHVibGlj
IElCaW5hcnlUeXBlQW5ub3RhdGlvbltdIGdldFR5cGVBbm5vdGF0aW9ucygpIHsKKwlyZXR1cm4g
dGhpcy50eXBlQW5ub3RhdGlvbnM7Cit9Citwcm90ZWN0ZWQgdm9pZCBpbml0aWFsaXplKCkgewor
CWZvciAoaW50IGkgPSAwLCBtYXggPSB0aGlzLnR5cGVBbm5vdGF0aW9ucy5sZW5ndGg7IGkgPCBt
YXg7IGkrKykKKwkJdGhpcy50eXBlQW5ub3RhdGlvbnNbaV0uaW5pdGlhbGl6ZSgpOworCXN1cGVy
LmluaXRpYWxpemUoKTsKK30KK3Byb3RlY3RlZCB2b2lkIHJlc2V0KCkgeworCWlmICh0aGlzLnR5
cGVBbm5vdGF0aW9ucyAhPSBudWxsKQorCQlmb3IgKGludCBpID0gMCwgbWF4ID0gdGhpcy50eXBl
QW5ub3RhdGlvbnMubGVuZ3RoOyBpIDwgbWF4OyBpKyspCisJCQl0aGlzLnR5cGVBbm5vdGF0aW9u
c1tpXS5yZXNldCgpOworCXN1cGVyLnJlc2V0KCk7Cit9CitwdWJsaWMgU3RyaW5nIHRvU3RyaW5n
KCkgeworCVN0cmluZ0J1ZmZlciBidWZmZXIgPSBuZXcgU3RyaW5nQnVmZmVyKGdldENsYXNzKCku
Z2V0TmFtZSgpKTsKKwlpZiAodGhpcy50eXBlQW5ub3RhdGlvbnMgIT0gbnVsbCkgeworCQlidWZm
ZXIuYXBwZW5kKCdcbicpOworCQlidWZmZXIuYXBwZW5kKCJ0eXBlIGFubm90YXRpb25zOiIpOyAv
LyROT04tTkxTLTEkCisJCWZvciAoaW50IGkgPSAwOyBpIDwgdGhpcy50eXBlQW5ub3RhdGlvbnMu
bGVuZ3RoOyBpKyspIHsKKwkJCWJ1ZmZlci5hcHBlbmQodGhpcy50eXBlQW5ub3RhdGlvbnNbaV0p
OworCQkJYnVmZmVyLmFwcGVuZCgnXG4nKTsKKwkJfQorCX0KKwl0b1N0cmluZ0NvbnRlbnQoYnVm
ZmVyKTsKKwlyZXR1cm4gYnVmZmVyLnRvU3RyaW5nKCk7Cit9Cit9CmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvY2xhc3NmbXQvTWV0aG9kSW5mby5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NsYXNzZm10L01ldGhvZEluZm8u
amF2YQppbmRleCA4OGQ2MGFjLi43YjI4YWY3IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY2xhc3NmbXQv
TWV0aG9kSW5mby5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jbGFzc2ZtdC9NZXRob2RJbmZvLmphdmEKQEAg
LTEsMTMgKzEsMTkgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMp
IDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMp
IDIwMDAsIDIwMTEsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmln
aHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxz
CiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1
YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9u
LCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2Vw
bC12MTAuaHRtbAogICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHkt
ZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0
eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZh
bHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0
aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgorICoKICAqIENvbnRyaWJ1dG9yczoKICAq
ICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KICAq
ICAgICBTdGVwaGFuIEhlcnJtYW5uIC0gQ29udHJpYnV0aW9uIGZvciBidWcgMTg2MzQyIC0gW2Nv
bXBpbGVyXVtudWxsXSBVc2luZyBhbm5vdGF0aW9ucyBmb3IgbnVsbCBjaGVja2luZworICogICAg
ICAgIEFuZHkgQ2xlbWVudCAoR29QaXZvdGFsLCBJbmMpIGFjbGVtZW50QGdvcGl2b3RhbC5jb20g
LSBDb250cmlidXRpb25zIGZvcgorICogICAgICAgICAgQnVnIDQwNzE5MSAtIFsxLjhdIEJpbmFy
eSBhY2Nlc3Mgc3VwcG9ydCBmb3IgdHlwZSBhbm5vdGF0aW9ucwogICoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jbGFzc2Zt
dDsKIApAQCAtMTYsNiArMjIsNyBAQCBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmNvZGVnZW4uQXR0cmlidXRlTmFtZXNDb25zdGFudHM7CiBpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNvZGVnZW4uQ29uc3RhbnRQb29sOwogaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuSUJpbmFyeUFubm90YXRpb247CiBp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5JQmluYXJ5TWV0aG9k
OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuSUJpbmFyeVR5
cGVBbm5vdGF0aW9uOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci51
dGlsLlV0aWw7CiAKIHB1YmxpYyBjbGFzcyBNZXRob2RJbmZvIGV4dGVuZHMgQ2xhc3NGaWxlU3Ry
dWN0IGltcGxlbWVudHMgSUJpbmFyeU1ldGhvZCwgQ29tcGFyYWJsZSB7CkBAIC0zOCw2ICs0NSw3
IEBAIHB1YmxpYyBzdGF0aWMgTWV0aG9kSW5mbyBjcmVhdGVNZXRob2QoYnl0ZSBjbGFzc0ZpbGVC
eXRlc1tdLCBpbnQgb2Zmc2V0c1tdLCBpbnQKIAlpbnQgcmVhZE9mZnNldCA9IDg7CiAJQW5ub3Rh
dGlvbkluZm9bXSBhbm5vdGF0aW9ucyA9IG51bGw7CiAJQW5ub3RhdGlvbkluZm9bXVtdIHBhcmFt
ZXRlckFubm90YXRpb25zID0gbnVsbDsKKwlUeXBlQW5ub3RhdGlvbkluZm9bXSB0eXBlQW5ub3Rh
dGlvbnMgPSBudWxsOwogCWZvciAoaW50IGkgPSAwOyBpIDwgYXR0cmlidXRlc0NvdW50OyBpKysp
IHsKIAkJLy8gY2hlY2sgdGhlIG5hbWUgb2YgZWFjaCBhdHRyaWJ1dGUKIAkJaW50IHV0ZjhPZmZz
ZXQgPSBtZXRob2RJbmZvLmNvbnN0YW50UG9vbE9mZnNldHNbbWV0aG9kSW5mby51MkF0KHJlYWRP
ZmZzZXQpXSAtIG1ldGhvZEluZm8uc3RydWN0T2Zmc2V0OwpAQCAtNTEsNiArNTksNyBAQCBwdWJs
aWMgc3RhdGljIE1ldGhvZEluZm8gY3JlYXRlTWV0aG9kKGJ5dGUgY2xhc3NGaWxlQnl0ZXNbXSwg
aW50IG9mZnNldHNbXSwgaW50CiAJCQkJY2FzZSAnUicgOgogCQkJCQlBbm5vdGF0aW9uSW5mb1td
IG1ldGhvZEFubm90YXRpb25zID0gbnVsbDsKIAkJCQkJQW5ub3RhdGlvbkluZm9bXVtdIHBhcmFt
QW5ub3RhdGlvbnMgPSBudWxsOworCQkJCQlUeXBlQW5ub3RhdGlvbkluZm9bXSBtZXRob2RUeXBl
QW5ub3RhdGlvbnMgPSBudWxsOwogCQkJCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoYXR0cmli
dXRlTmFtZSwgQXR0cmlidXRlTmFtZXNDb25zdGFudHMuUnVudGltZVZpc2libGVBbm5vdGF0aW9u
c05hbWUpKSB7CiAJCQkJCQltZXRob2RBbm5vdGF0aW9ucyA9IGRlY29kZU1ldGhvZEFubm90YXRp
b25zKHJlYWRPZmZzZXQsIHRydWUsIG1ldGhvZEluZm8pOwogCQkJCQl9IGVsc2UgaWYgKENoYXJP
cGVyYXRpb24uZXF1YWxzKGF0dHJpYnV0ZU5hbWUsIEF0dHJpYnV0ZU5hbWVzQ29uc3RhbnRzLlJ1
bnRpbWVJbnZpc2libGVBbm5vdGF0aW9uc05hbWUpKSB7CkBAIC01OSw2ICs2OCwxMCBAQCBwdWJs
aWMgc3RhdGljIE1ldGhvZEluZm8gY3JlYXRlTWV0aG9kKGJ5dGUgY2xhc3NGaWxlQnl0ZXNbXSwg
aW50IG9mZnNldHNbXSwgaW50CiAJCQkJCQlwYXJhbUFubm90YXRpb25zID0gZGVjb2RlUGFyYW1B
bm5vdGF0aW9ucyhyZWFkT2Zmc2V0LCB0cnVlLCBtZXRob2RJbmZvKTsKIAkJCQkJfSBlbHNlIGlm
IChDaGFyT3BlcmF0aW9uLmVxdWFscyhhdHRyaWJ1dGVOYW1lLCBBdHRyaWJ1dGVOYW1lc0NvbnN0
YW50cy5SdW50aW1lSW52aXNpYmxlUGFyYW1ldGVyQW5ub3RhdGlvbnNOYW1lKSkgewogCQkJCQkJ
cGFyYW1Bbm5vdGF0aW9ucyA9IGRlY29kZVBhcmFtQW5ub3RhdGlvbnMocmVhZE9mZnNldCwgZmFs
c2UsIG1ldGhvZEluZm8pOworCQkJCQl9IGVsc2UgaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKGF0
dHJpYnV0ZU5hbWUsIEF0dHJpYnV0ZU5hbWVzQ29uc3RhbnRzLlJ1bnRpbWVWaXNpYmxlVHlwZUFu
bm90YXRpb25zTmFtZSkpIHsKKwkJCQkJCW1ldGhvZFR5cGVBbm5vdGF0aW9ucyA9IGRlY29kZVR5
cGVBbm5vdGF0aW9ucyhyZWFkT2Zmc2V0LCB0cnVlLCBtZXRob2RJbmZvKTsKKwkJCQkJfSBlbHNl
IGlmIChDaGFyT3BlcmF0aW9uLmVxdWFscyhhdHRyaWJ1dGVOYW1lLCBBdHRyaWJ1dGVOYW1lc0Nv
bnN0YW50cy5SdW50aW1lSW52aXNpYmxlVHlwZUFubm90YXRpb25zTmFtZSkpIHsKKwkJCQkJCW1l
dGhvZFR5cGVBbm5vdGF0aW9ucyA9IGRlY29kZVR5cGVBbm5vdGF0aW9ucyhyZWFkT2Zmc2V0LCBm
YWxzZSwgbWV0aG9kSW5mbyk7CiAJCQkJCX0KIAkJCQkJaWYgKG1ldGhvZEFubm90YXRpb25zICE9
IG51bGwpIHsKIAkJCQkJCWlmIChhbm5vdGF0aW9ucyA9PSBudWxsKSB7CkBAIC05MCw2ICsxMDMs
MTYgQEAgcHVibGljIHN0YXRpYyBNZXRob2RJbmZvIGNyZWF0ZU1ldGhvZChieXRlIGNsYXNzRmls
ZUJ5dGVzW10sIGludCBvZmZzZXRzW10sIGludAogCQkJCQkJCQl9CiAJCQkJCQkJfQogCQkJCQkJ
fQorCQkJCQl9IGVsc2UgaWYgKG1ldGhvZFR5cGVBbm5vdGF0aW9ucyAhPSBudWxsKSB7CisJCQkJ
CQlpZiAodHlwZUFubm90YXRpb25zID09IG51bGwpIHsKKwkJCQkJCQl0eXBlQW5ub3RhdGlvbnMg
PSBtZXRob2RUeXBlQW5ub3RhdGlvbnM7CisJCQkJCQl9IGVsc2UgeworCQkJCQkJCWludCBsZW5n
dGggPSB0eXBlQW5ub3RhdGlvbnMubGVuZ3RoOworCQkJCQkJCVR5cGVBbm5vdGF0aW9uSW5mb1td
IG5ld0Fubm90YXRpb25zID0gbmV3IFR5cGVBbm5vdGF0aW9uSW5mb1tsZW5ndGggKyBtZXRob2RU
eXBlQW5ub3RhdGlvbnMubGVuZ3RoXTsKKwkJCQkJCQlTeXN0ZW0uYXJyYXljb3B5KHR5cGVBbm5v
dGF0aW9ucywgMCwgbmV3QW5ub3RhdGlvbnMsIDAsIGxlbmd0aCk7CisJCQkJCQkJU3lzdGVtLmFy
cmF5Y29weShtZXRob2RUeXBlQW5ub3RhdGlvbnMsIDAsIG5ld0Fubm90YXRpb25zLCBsZW5ndGgs
IG1ldGhvZFR5cGVBbm5vdGF0aW9ucy5sZW5ndGgpOworCQkJCQkJCXR5cGVBbm5vdGF0aW9ucyA9
IG5ld0Fubm90YXRpb25zOworCQkJCQkJfQogCQkJCQl9CiAJCQkJCWJyZWFrOwogCQkJfQpAQCAt
OTgsNiArMTIxLDggQEAgcHVibGljIHN0YXRpYyBNZXRob2RJbmZvIGNyZWF0ZU1ldGhvZChieXRl
IGNsYXNzRmlsZUJ5dGVzW10sIGludCBvZmZzZXRzW10sIGludAogCX0KIAltZXRob2RJbmZvLmF0
dHJpYnV0ZUJ5dGVzID0gcmVhZE9mZnNldDsKIAorCWlmICh0eXBlQW5ub3RhdGlvbnMgIT0gbnVs
bCkKKwkJcmV0dXJuIG5ldyBNZXRob2RJbmZvV2l0aFR5cGVBbm5vdGF0aW9ucyhtZXRob2RJbmZv
LCBhbm5vdGF0aW9ucywgcGFyYW1ldGVyQW5ub3RhdGlvbnMsIHR5cGVBbm5vdGF0aW9ucyk7CiAJ
aWYgKHBhcmFtZXRlckFubm90YXRpb25zICE9IG51bGwpCiAJCXJldHVybiBuZXcgTWV0aG9kSW5m
b1dpdGhQYXJhbWV0ZXJBbm5vdGF0aW9ucyhtZXRob2RJbmZvLCBhbm5vdGF0aW9ucywgcGFyYW1l
dGVyQW5ub3RhdGlvbnMpOwogCWlmIChhbm5vdGF0aW9ucyAhPSBudWxsKQpAQCAtMTQ2LDYgKzE3
MSwyMCBAQCBzdGF0aWMgQW5ub3RhdGlvbkluZm9bXSBkZWNvZGVNZXRob2RBbm5vdGF0aW9ucyhp
bnQgb2Zmc2V0LCBib29sZWFuIHJ1bnRpbWVWaXNpYgogCX0KIAlyZXR1cm4gbnVsbDsKIH0KK3N0
YXRpYyBUeXBlQW5ub3RhdGlvbkluZm9bXSBkZWNvZGVUeXBlQW5ub3RhdGlvbnMoaW50IG9mZnNl
dCwgYm9vbGVhbiBydW50aW1lVmlzaWJsZSwgTWV0aG9kSW5mbyBtZXRob2RJbmZvKSB7CisJaW50
IG51bWJlck9mQW5ub3RhdGlvbnMgPSBtZXRob2RJbmZvLnUyQXQob2Zmc2V0ICsgNik7CisJaWYg
KG51bWJlck9mQW5ub3RhdGlvbnMgPiAwKSB7CisJCWludCByZWFkT2Zmc2V0ID0gb2Zmc2V0ICsg
ODsKKwkJVHlwZUFubm90YXRpb25JbmZvW10gdHlwZUFubm9zID0gbmV3IFR5cGVBbm5vdGF0aW9u
SW5mb1tudW1iZXJPZkFubm90YXRpb25zXTsKKwkJZm9yIChpbnQgaSA9IDA7IGkgPCBudW1iZXJP
ZkFubm90YXRpb25zOyBpKyspIHsKKwkJCVR5cGVBbm5vdGF0aW9uSW5mbyBuZXdJbmZvID0gbmV3
IFR5cGVBbm5vdGF0aW9uSW5mbyhtZXRob2RJbmZvLnJlZmVyZW5jZSwgbWV0aG9kSW5mby5jb25z
dGFudFBvb2xPZmZzZXRzLCByZWFkT2Zmc2V0ICsgbWV0aG9kSW5mby5zdHJ1Y3RPZmZzZXQsIHJ1
bnRpbWVWaXNpYmxlLCBmYWxzZSk7CisJCQlyZWFkT2Zmc2V0ICs9IG5ld0luZm8ucmVhZE9mZnNl
dDsKKwkJCXR5cGVBbm5vc1tpXSA9IG5ld0luZm87CisJCX0KKwkJcmV0dXJuIHR5cGVBbm5vczsK
Kwl9CisJcmV0dXJuIG51bGw7Cit9CiBzdGF0aWMgQW5ub3RhdGlvbkluZm9bXVtdIGRlY29kZVBh
cmFtQW5ub3RhdGlvbnMoaW50IG9mZnNldCwgYm9vbGVhbiBydW50aW1lVmlzaWJsZSwgTWV0aG9k
SW5mbyBtZXRob2RJbmZvKSB7CiAJQW5ub3RhdGlvbkluZm9bXVtdIGFsbFBhcmFtQW5ub3RhdGlv
bnMgPSBudWxsOwogCWludCBudW1iZXJPZlBhcmFtZXRlcnMgPSBtZXRob2RJbmZvLnUxQXQob2Zm
c2V0ICsgNik7CkBAIC0yNzQsNiArMzEzLDkgQEAgcHVibGljIElCaW5hcnlBbm5vdGF0aW9uW10g
Z2V0UGFyYW1ldGVyQW5ub3RhdGlvbnMoaW50IGluZGV4KSB7CiBwdWJsaWMgaW50IGdldEFubm90
YXRlZFBhcmFtZXRlcnNDb3VudCgpIHsKIAlyZXR1cm4gMDsKIH0KK3B1YmxpYyBJQmluYXJ5VHlw
ZUFubm90YXRpb25bXSBnZXRUeXBlQW5ub3RhdGlvbnMoKSB7CisJcmV0dXJuIG51bGw7Cit9CiAv
KioKICAqIEFuc3dlciB0aGUgbmFtZSBvZiB0aGUgbWV0aG9kLgogICoKZGlmZiAtLWdpdCBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9jbGFzc2ZtdC9NZXRob2RJbmZvV2l0aFR5cGVBbm5vdGF0aW9ucy5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2NsYXNzZm10L01ldGhvZEluZm9XaXRoVHlwZUFubm90YXRpb25zLmphdmEKbmV3IGZpbGUgbW9k
ZSAxMDA2NDQKaW5kZXggMDAwMDAwMC4uZDE0ZjFjYgotLS0gL2Rldi9udWxsCisrKyBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9jbGFzc2ZtdC9NZXRob2RJbmZvV2l0aFR5cGVBbm5vdGF0aW9ucy5qYXZhCkBAIC0wLDAgKzEs
NTEgQEAKKy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCisgKiBDb3B5cmlnaHQgKGMpIDIwMTMgR29Q
aXZvdGFsLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuCisgKiBBbGwgcmlnaHRzIHJlc2VydmVk
LiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCisgKiBhcmUgbWFk
ZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNl
IHYxLjAKKyAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZh
aWxhYmxlIGF0CisgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAor
ICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lm
aWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChK
Q1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJw
b3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lm
aWNhdGlvbiBvZiB0aGUgSkNQLgorICoKKyAqIENvbnRyaWJ1dG9yczoKKyAqICAgICAgICBBbmR5
IENsZW1lbnQgKEdvUGl2b3RhbCwgSW5jKSBhY2xlbWVudEBnb3Bpdm90YWwuY29tIC0gQ29udHJp
YnV0aW9ucyBmb3IKKyAqICAgICAgICAgIEJ1ZyA0MDcxOTEgLSBbMS44XSBCaW5hcnkgYWNjZXNz
IHN1cHBvcnQgZm9yIHR5cGUgYW5ub3RhdGlvbnMKKyAqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwor
cGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuY2xhc3NmbXQ7CisKK2lt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklCaW5hcnlUeXBlQW5u
b3RhdGlvbjsKKworY2xhc3MgTWV0aG9kSW5mb1dpdGhUeXBlQW5ub3RhdGlvbnMgZXh0ZW5kcyBN
ZXRob2RJbmZvV2l0aFBhcmFtZXRlckFubm90YXRpb25zIHsKKwlwcml2YXRlIFR5cGVBbm5vdGF0
aW9uSW5mb1tdIHR5cGVBbm5vdGF0aW9uczsKKworTWV0aG9kSW5mb1dpdGhUeXBlQW5ub3RhdGlv
bnMoTWV0aG9kSW5mbyBtZXRob2RJbmZvLCBBbm5vdGF0aW9uSW5mb1tdIGFubm90YXRpb25zLCBB
bm5vdGF0aW9uSW5mb1tdW10gcGFyYW1ldGVyQW5ub3RhdGlvbnMsIFR5cGVBbm5vdGF0aW9uSW5m
b1tdIHR5cGVBbm5vdGF0aW9ucykgeworCXN1cGVyKG1ldGhvZEluZm8sIGFubm90YXRpb25zLCBw
YXJhbWV0ZXJBbm5vdGF0aW9ucyk7CisJdGhpcy50eXBlQW5ub3RhdGlvbnMgPSB0eXBlQW5ub3Rh
dGlvbnM7Cit9CitwdWJsaWMgSUJpbmFyeVR5cGVBbm5vdGF0aW9uW10gZ2V0VHlwZUFubm90YXRp
b25zKCkgeworCXJldHVybiB0aGlzLnR5cGVBbm5vdGF0aW9uczsKK30KKworcHJvdGVjdGVkIHZv
aWQgaW5pdGlhbGl6ZSgpIHsKKwlmb3IgKGludCBpID0gMCwgbCA9IHRoaXMudHlwZUFubm90YXRp
b25zID09IG51bGwgPyAwIDogdGhpcy50eXBlQW5ub3RhdGlvbnMubGVuZ3RoOyBpIDwgbDsgaSsr
KSB7CisJCXRoaXMudHlwZUFubm90YXRpb25zW2ldLmluaXRpYWxpemUoKTsKKwl9CisJc3VwZXIu
aW5pdGlhbGl6ZSgpOworfQorcHJvdGVjdGVkIHZvaWQgcmVzZXQoKSB7CisJZm9yIChpbnQgaSA9
IDAsIGwgPSB0aGlzLnR5cGVBbm5vdGF0aW9ucyA9PSBudWxsID8gMCA6IHRoaXMudHlwZUFubm90
YXRpb25zLmxlbmd0aDsgaSA8IGw7IGkrKykgeworCQl0aGlzLnR5cGVBbm5vdGF0aW9uc1tpXS5y
ZXNldCgpOworCX0KKwlzdXBlci5yZXNldCgpOworfQorcHJvdGVjdGVkIHZvaWQgdG9TdHJpbmdD
b250ZW50KFN0cmluZ0J1ZmZlciBidWZmZXIpIHsKKwlzdXBlci50b1N0cmluZ0NvbnRlbnQoYnVm
ZmVyKTsKKwlidWZmZXIuYXBwZW5kKCJ0eXBlIGFubm90YXRpb25zID0gXG4iKTsvLyROT04tTkxT
LTEkCisJZm9yIChpbnQgaSA9IDAsIGwgPSB0aGlzLnR5cGVBbm5vdGF0aW9ucyA9PSBudWxsID8g
MCA6IHRoaXMudHlwZUFubm90YXRpb25zLmxlbmd0aDsgaSA8IGw7IGkrKykgeworCQlidWZmZXIu
YXBwZW5kKHRoaXMudHlwZUFubm90YXRpb25zW2ldLnRvU3RyaW5nKCkpOworCQlidWZmZXIuYXBw
ZW5kKCdcbicpOworCX0KK30KK30KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jbGFzc2ZtdC9UeXBlQW5u
b3RhdGlvbkluZm8uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jbGFzc2ZtdC9UeXBlQW5ub3RhdGlvbkluZm8uamF2
YQpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwLi5iYzA5ZDY1Ci0tLSAvZGV2L251
bGwKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2NsYXNzZm10L1R5cGVBbm5vdGF0aW9uSW5mby5qYXZhCkBAIC0wLDAg
KzEsMjM1IEBACisvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgorICogQ29weXJpZ2h0IChjKSAyMDEz
IEdvUGl2b3RhbCwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLgorICogQWxsIHJpZ2h0cyByZXNl
cnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscworICogYXJl
IG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGlj
ZW5zZSB2MS4wCisgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlz
IGF2YWlsYWJsZSBhdAorICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0
bWwKKyAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNw
ZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2Vz
cyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24g
cHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNw
ZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqCisgKiBDb250cmlidXRvcnM6CisgKiAgICAgICAg
QW5keSBDbGVtZW50IChHb1Bpdm90YWwsIEluYykgYWNsZW1lbnRAZ29waXZvdGFsLmNvbSAtIENv
bnRyaWJ1dGlvbnMgZm9yCisgKiAgICAgICAgICBCdWcgNDA3MTkxIC0gWzEuOF0gQmluYXJ5IGFj
Y2VzcyBzdXBwb3J0IGZvciB0eXBlIGFubm90YXRpb25zCisgKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
Ki8KK3BhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNsYXNzZm10Owor
CitpbXBvcnQgamF2YS51dGlsLkFycmF5czsKKworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5jb2RlZ2VuLkFubm90YXRpb25UYXJnZXRUeXBlQ29uc3RhbnRzOworaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuSUJpbmFyeUFubm90YXRp
b247CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5JQmluYXJ5
VHlwZUFubm90YXRpb247CisKK3B1YmxpYyBjbGFzcyBUeXBlQW5ub3RhdGlvbkluZm8gZXh0ZW5k
cyBDbGFzc0ZpbGVTdHJ1Y3QgaW1wbGVtZW50cyBJQmluYXJ5VHlwZUFubm90YXRpb24geworCisJ
cHJpdmF0ZSBBbm5vdGF0aW9uSW5mbyBhbm5vdGF0aW9uOworCQorCXByaXZhdGUgaW50IHRhcmdl
dFR5cGUgPSAwOworCQorCS8vIGluZm8gaXMgdXNlZCBpbiBkaWZmZXJlbnQgd2F5czoKKwkvLyBU
YXJnZXRUeXBlIENMQVNTX0VYVEVORFM6IHN1cGVydHlwZSBpbmRleCAoLTEgPSBzdXBlcmNsYXNz
LCAwLi5OIHN1cGVyaW50ZXJmYWNlKQorCS8vIFRhcmdldFR5cGUgTUVUSE9EX1RZUEVfUEFSQU1F
VEVSOiB0eXBlIHBhcmFtZXRlciBpbmRleCAKKwkvLyBUYXJnZXRUeXBlIENMQVNTX1RZUEVfUEFS
QU1FVEVSOiB0eXBlIHBhcmFtZXRlciBpbmRleAorCS8vIFRhcmdldFR5cGUgQ0xBU1NfVFlQRV9Q
QVJBTUVURVJfQk9VTkQ6IHR5cGUgcGFyYW1ldGVyIGluZGV4CisJLy8gVGFyZ2V0VHlwZSBNRVRI
T0RfRk9STUFMX1BBUkFNRVRFUjogbWV0aG9kIGZvcm1hbCBwYXJhbWV0ZXIgaW5kZXgKKwkvLyBU
YXJnZXRUeXBlIFRIUk9XUzogdGhyb3dzIHR5cGUgaW5kZXgKKwlwcml2YXRlIGludCBpbmZvOwor
CQorCS8vIFRhcmdldFR5cGUgQ0xBU1NfVFlQRV9QQVJBTUVURVJfQk9VTkQ6IGJvdW5kIGluZGV4
CisJcHJpdmF0ZSBpbnQgaW5mbzI7CisJCisJcHJpdmF0ZSBpbnRbXSB0eXBlUGF0aDsgLy8gZWFj
aCBwYWlyIG9mIGludHMgaW4gdGhlIGFycmF5IGlzIGEgdHlwZSBwYXRoIGVudHJ5CisJCisJaW50
IHJlYWRPZmZzZXQgPSAwOworCQorCQorVHlwZUFubm90YXRpb25JbmZvKGJ5dGVbXSBjbGFzc0Zp
bGVCeXRlcywgaW50W10gY29udGFudFBvb2xPZmZzZXRzLCBpbnQgb2Zmc2V0KSB7CisJc3VwZXIo
Y2xhc3NGaWxlQnl0ZXMsIGNvbnRhbnRQb29sT2Zmc2V0cywgb2Zmc2V0KTsKK30KKwkKK1R5cGVB
bm5vdGF0aW9uSW5mbyhieXRlW10gY2xhc3NGaWxlQnl0ZXMsIGludFtdIGNvbnRhbnRQb29sT2Zm
c2V0cywgaW50IG9mZnNldCwgYm9vbGVhbiBydW50aW1lVmlzaWJsZSwgYm9vbGVhbiBwb3B1bGF0
ZSkgeworCXRoaXMoY2xhc3NGaWxlQnl0ZXMsIGNvbnRhbnRQb29sT2Zmc2V0cywgb2Zmc2V0KTsK
Kwl0aGlzLnJlYWRPZmZzZXQgPSAwOworCXRoaXMudGFyZ2V0VHlwZSA9IHUxQXQoMCk7CisJc3dp
dGNoICh0aGlzLnRhcmdldFR5cGUpIHsKKwkJY2FzZSBBbm5vdGF0aW9uVGFyZ2V0VHlwZUNvbnN0
YW50cy5DTEFTU19UWVBFX1BBUkFNRVRFUjoKKwkJY2FzZSBBbm5vdGF0aW9uVGFyZ2V0VHlwZUNv
bnN0YW50cy5NRVRIT0RfVFlQRV9QQVJBTUVURVI6CisJCQl0aGlzLmluZm8gPSB1MUF0KDEpOyAv
LyB0eXBlUGFyYW1ldGVySW5kZXgKKwkJCXRoaXMucmVhZE9mZnNldCArPSAyOworCQkJYnJlYWs7
CisJCQkKKwkJY2FzZSBBbm5vdGF0aW9uVGFyZ2V0VHlwZUNvbnN0YW50cy5DTEFTU19FWFRFTkRT
OgorCQkJdGhpcy5pbmZvID0gdTJBdCgxKTsgLy8gc3VwZXJ0eXBlSW5kZXgKKwkJCXRoaXMucmVh
ZE9mZnNldCArPSAzOworCQkJYnJlYWs7CisJCQkKKwkJY2FzZSBBbm5vdGF0aW9uVGFyZ2V0VHlw
ZUNvbnN0YW50cy5DTEFTU19UWVBFX1BBUkFNRVRFUl9CT1VORDoKKwkJY2FzZSBBbm5vdGF0aW9u
VGFyZ2V0VHlwZUNvbnN0YW50cy5NRVRIT0RfVFlQRV9QQVJBTUVURVJfQk9VTkQ6CisJCQl0aGlz
LmluZm8gPSB1MUF0KDEpOyAvLyB0eXBlUGFyYW1ldGVySW5kZXgKKwkJCXRoaXMuaW5mbzIgPSB1
MUF0KDIpOyAvLyBib3VuZEluZGV4OworCQkJdGhpcy5yZWFkT2Zmc2V0ICs9IDM7CisJCQlicmVh
azsKKwkJCQorCQljYXNlIEFubm90YXRpb25UYXJnZXRUeXBlQ29uc3RhbnRzLkZJRUxEOgorCQlj
YXNlIEFubm90YXRpb25UYXJnZXRUeXBlQ29uc3RhbnRzLk1FVEhPRF9SRVRVUk46CisJCWNhc2Ug
QW5ub3RhdGlvblRhcmdldFR5cGVDb25zdGFudHMuTUVUSE9EX1JFQ0VJVkVSOgorCQkJdGhpcy5y
ZWFkT2Zmc2V0ICsrOworCQkJYnJlYWs7CisJCQkKKwkJY2FzZSBBbm5vdGF0aW9uVGFyZ2V0VHlw
ZUNvbnN0YW50cy5NRVRIT0RfRk9STUFMX1BBUkFNRVRFUiA6CisJCQl0aGlzLmluZm8gPSB1MUF0
KDEpOyAvLyBtZXRob2RGb3JtYWxQYXJhbWV0ZXJJbmRleAorCQkJdGhpcy5yZWFkT2Zmc2V0ICs9
IDI7CisJCQlicmVhazsKKwkJCQorCQljYXNlIEFubm90YXRpb25UYXJnZXRUeXBlQ29uc3RhbnRz
LlRIUk9XUyA6CisJCQl0aGlzLmluZm8gPSB1MkF0KDEpOyAvLyB0aHJvd3NUeXBlSW5kZXgKKwkJ
CXRoaXMucmVhZE9mZnNldCArPSAzOworCQkJYnJlYWs7CisKKwkJZGVmYXVsdDoKKwkJCXRocm93
IG5ldyBJbGxlZ2FsU3RhdGVFeGNlcHRpb24oIlRhcmdldCB0eXBlIG5vdCBoYW5kbGVkICIrdGhp
cy50YXJnZXRUeXBlKTsgLy8kTk9OLU5MUy0xJAorCX0KKwlpbnQgdHlwZVBhdGhMZW5ndGggPSB1
MUF0KHRoaXMucmVhZE9mZnNldCk7CisJdGhpcy5yZWFkT2Zmc2V0ICsrOworCWlmICh0eXBlUGF0
aExlbmd0aCA9PSAwKSB7CisJCXRoaXMudHlwZVBhdGggPSBOT19UWVBFX1BBVEg7CisJfSBlbHNl
IHsKKwkJdGhpcy50eXBlUGF0aCA9IG5ldyBpbnRbdHlwZVBhdGhMZW5ndGgqMl07CisJCWludCBp
bmRleCA9IDA7CisJCWZvciAoaW50IGkgPSAwOyBpIDwgdHlwZVBhdGhMZW5ndGg7IGkrKykgewor
CQkJdGhpcy50eXBlUGF0aFtpbmRleCsrXSA9IHUxQXQodGhpcy5yZWFkT2Zmc2V0KyspOyAvLyBl
bnRyeSBraW5kCisJCQl0aGlzLnR5cGVQYXRoW2luZGV4KytdID0gdTFBdCh0aGlzLnJlYWRPZmZz
ZXQrKyk7IC8vIHR5cGUgYXJndW1lbnQgaW5kZXgKKwkJfQorCX0KKwl0aGlzLmFubm90YXRpb24g
PSBuZXcgQW5ub3RhdGlvbkluZm8oY2xhc3NGaWxlQnl0ZXMsIHRoaXMuY29uc3RhbnRQb29sT2Zm
c2V0cywgdGhpcy5zdHJ1Y3RPZmZzZXQgKyB0aGlzLnJlYWRPZmZzZXQsIHJ1bnRpbWVWaXNpYmxl
LCBwb3B1bGF0ZSk7CisJdGhpcy5yZWFkT2Zmc2V0ICs9IHRoaXMuYW5ub3RhdGlvbi5yZWFkT2Zm
c2V0OworfQorCitwdWJsaWMgSUJpbmFyeUFubm90YXRpb24gZ2V0QW5ub3RhdGlvbigpIHsKKwly
ZXR1cm4gdGhpcy5hbm5vdGF0aW9uOworfQorCitwcm90ZWN0ZWQgdm9pZCBpbml0aWFsaXplKCkg
eworCXRoaXMuYW5ub3RhdGlvbi5pbml0aWFsaXplKCk7Cit9CisKK3Byb3RlY3RlZCB2b2lkIHJl
c2V0KCkgeworCXRoaXMuYW5ub3RhdGlvbi5yZXNldCgpOworCXN1cGVyLnJlc2V0KCk7Cit9CisK
K3B1YmxpYyBTdHJpbmcgdG9TdHJpbmcoKSB7CisJU3RyaW5nQnVmZmVyIGJ1ZmZlciA9IG5ldyBT
dHJpbmdCdWZmZXIoKTsKKwlidWZmZXIuYXBwZW5kKHRoaXMuYW5ub3RhdGlvbik7CisJYnVmZmVy
LmFwcGVuZCgnICcpOworCS8vIE5vdCBmdWxseSBkZWNvZGluZyBpdCBoZXJlLCBqdXN0IGluY2x1
ZGluZyBhbGwgdGhlIGluZm9ybWF0aW9uIGluIHRoZSBzdHJpbmcKKwlidWZmZXIuYXBwZW5kKCJ0
YXJnZXRfdHlwZT0iKS5hcHBlbmQodGhpcy50YXJnZXRUeXBlKTsgLy8kTk9OLU5MUy0xJAorCWJ1
ZmZlci5hcHBlbmQoIiwgaW5mbz0iKS5hcHBlbmQodGhpcy5pbmZvKTsgLy8kTk9OLU5MUy0xJAor
CWJ1ZmZlci5hcHBlbmQoIiwgaW5mbzI9IikuYXBwZW5kKHRoaXMuaW5mbzIpOyAvLyROT04tTkxT
LTEkCisJaWYgKHRoaXMudHlwZVBhdGggIT0gTk9fVFlQRV9QQVRIKSB7CisJCWJ1ZmZlci5hcHBl
bmQoIiwgbG9jYXRpb249WyIpOyAvLyROT04tTkxTLTEkCisJCWZvciAoaW50IGkgPSAwLCBtYXgg
PSB0aGlzLnR5cGVQYXRoLmxlbmd0aDsgaSA8IG1heDsgaSArPSAyKSB7CisJCQlpZiAoaSA+IDAp
IHsKKwkJCQlidWZmZXIuYXBwZW5kKCIsICIpOyAvLyROT04tTkxTLTEkCisJCQl9CisJCQlzd2l0
Y2ggKHRoaXMudHlwZVBhdGhbaV0pIHsKKwkJCQljYXNlIDA6CisJCQkJCWJ1ZmZlci5hcHBlbmQo
IkFSUkFZIik7IC8vJE5PTi1OTFMtMSQKKwkJCQkJYnJlYWs7CisJCQkJY2FzZSAxOgorCQkJCQli
dWZmZXIuYXBwZW5kKCJJTk5FUl9UWVBFIik7IC8vJE5PTi1OTFMtMSQKKwkJCQkJYnJlYWs7CisJ
CQkJY2FzZSAyOgorCQkJCQlidWZmZXIuYXBwZW5kKCJXSUxEQ0FSRCIpOyAvLyROT04tTkxTLTEk
CisJCQkJCWJyZWFrOworCQkJCWNhc2UgMzoKKwkJCQkJYnVmZmVyLmFwcGVuZCgiVFlQRV9BUkdV
TUVOVCgiKS5hcHBlbmQodGhpcy50eXBlUGF0aFtpKzFdKS5hcHBlbmQoJyknKTsgLy8kTk9OLU5M
Uy0xJAorCQkJCQlicmVhazsKKwkJCX0KKwkJfQorCQlidWZmZXIuYXBwZW5kKCddJyk7CisJfQor
CXJldHVybiBidWZmZXIudG9TdHJpbmcoKTsKK30KKworCitwdWJsaWMgaW50IGdldFRhcmdldFR5
cGUoKSB7CisJcmV0dXJuIHRoaXMudGFyZ2V0VHlwZTsKK30KKworcHVibGljIGludCBnZXRTdXBl
cnR5cGVJbmRleCgpIHsKKwkvLyBhc3NlcnQgdGhpcy50YXJnZXRUeXBlID09IDB4MTAKKwlyZXR1
cm4gdGhpcy5pbmZvOworfQorCitwdWJsaWMgaW50IGdldFR5cGVQYXJhbWV0ZXJJbmRleCgpIHsK
KwkvLyBhc3NlcnQgdGhpcy50YXJnZXRUeXBlID09IDB4MDAgb3IgMHgwMQorCXJldHVybiB0aGlz
LmluZm87Cit9CisKK3B1YmxpYyBpbnQgZ2V0Qm91bmRJbmRleCgpIHsKKwkvLyBhc3NlcnQgdGhp
cy50YXJnZXRUeXBlID09IDB4MTEgb3IgMHgxMgorCXJldHVybiB0aGlzLmluZm8yOworfQorCitw
dWJsaWMgaW50IGdldE1ldGhvZEZvcm1hbFBhcmFtZXRlckluZGV4KCkgeworCS8vIGFzc2VydCB0
aGlzLnRhcmdldFR5cGUgPT0gMHgxNgorCXJldHVybiB0aGlzLmluZm87Cit9CisKK3B1YmxpYyBp
bnQgZ2V0VGhyb3dzVHlwZUluZGV4KCkgeworCS8vIGFzc2VydCB0aGlzLnRhcmdldFR5cGUgPT0g
MHgxNworCXJldHVybiB0aGlzLmluZm87Cit9CisKK3B1YmxpYyBpbnRbXSBnZXRUeXBlUGF0aCgp
IHsKKwlyZXR1cm4gdGhpcy50eXBlUGF0aDsKK30KKworcHVibGljIGludCBoYXNoQ29kZSgpIHsK
KwlmaW5hbCBpbnQgcHJpbWUgPSAzMTsKKwlpbnQgcmVzdWx0ID0gMTsKKwlyZXN1bHQgPSBwcmlt
ZSAqIHJlc3VsdCArIHRoaXMudGFyZ2V0VHlwZTsKKwlyZXN1bHQgPSBwcmltZSAqIHJlc3VsdCAr
IHRoaXMuaW5mbzsKKwlyZXN1bHQgPSBwcmltZSAqIHJlc3VsdCArIHRoaXMuaW5mbzI7CisJaWYg
KHRoaXMudHlwZVBhdGggIT0gbnVsbCkgeworCQlmb3IgKGludCBpID0gMCwgbWF4ID0gdGhpcy50
eXBlUGF0aC5sZW5ndGg7IGkgPCBtYXg7IGkrKykgeworCQkJcmVzdWx0ID0gcHJpbWUgKiByZXN1
bHQgKyB0aGlzLnR5cGVQYXRoW2ldOworCQl9CisJfQorCXJldHVybiByZXN1bHQ7Cit9CisKK3B1
YmxpYyBib29sZWFuIGVxdWFscyhPYmplY3Qgb2JqKSB7CisJaWYgKHRoaXMgPT0gb2JqKSB7CisJ
CXJldHVybiB0cnVlOworCX0KKwlpZiAob2JqID09IG51bGwpIHsKKwkJcmV0dXJuIGZhbHNlOwor
CX0KKwlpZiAoZ2V0Q2xhc3MoKSAhPSBvYmouZ2V0Q2xhc3MoKSkgeworCQlyZXR1cm4gZmFsc2U7
CisJfQorCisJVHlwZUFubm90YXRpb25JbmZvIG90aGVyID0gKFR5cGVBbm5vdGF0aW9uSW5mbykg
b2JqOworCisJaWYgKHRoaXMudGFyZ2V0VHlwZSAhPSBvdGhlci50YXJnZXRUeXBlKSB7CisJCXJl
dHVybiBmYWxzZTsKKwl9CisJCisJaWYgKHRoaXMuaW5mbyAhPSBvdGhlci5pbmZvKSB7CisJCXJl
dHVybiBmYWxzZTsKKwl9CisKKwlpZiAodGhpcy5pbmZvMiAhPSBvdGhlci5pbmZvMikgeworCQly
ZXR1cm4gZmFsc2U7CisJfQorCQorCWlmICghQXJyYXlzLmVxdWFscyh0aGlzLnR5cGVQYXRoLCBv
dGhlci50eXBlUGF0aCkpIHsKKwkJcmV0dXJuIGZhbHNlOworCX0KKwkKKwlyZXR1cm4gdGhpcy5h
bm5vdGF0aW9uLmVxdWFscyhvdGhlci5hbm5vdGF0aW9uKTsKK30KK30KZGlmZiAtLWdpdCBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9lbnYvSUJpbmFyeUZpZWxkLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZW52L0lCaW5hcnlGaWVsZC5qYXZh
CmluZGV4IDRlOWI1NjYuLjNlZDJmYzcgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9lbnYvSUJpbmFyeUZp
ZWxkLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2Vudi9JQmluYXJ5RmllbGQuamF2YQpAQCAtMSwxMiArMSwx
OCBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAw
OSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAw
OSwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2
ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBt
YWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vu
c2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBh
dmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1s
CiAgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVj
aWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3Mg
KEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1
cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVj
aWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKiAKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0g
Q29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KKyAqICAgICAgICBB
bmR5IENsZW1lbnQgKEdvUGl2b3RhbCwgSW5jKSBhY2xlbWVudEBnb3Bpdm90YWwuY29tIC0gQ29u
dHJpYnV0aW9ucyBmb3IKKyAqICAgICAgICAgIEJ1ZyA0MDcxOTEgLSBbMS44XSBCaW5hcnkgYWNj
ZXNzIHN1cHBvcnQgZm9yIHR5cGUgYW5ub3RhdGlvbnMKICAqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
LwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52OwogCkBAIC0x
OSw2ICsyNSwxMSBAQCBwdWJsaWMgaW50ZXJmYWNlIElCaW5hcnlGaWVsZCBleHRlbmRzIElHZW5l
cmljRmllbGQgewogSUJpbmFyeUFubm90YXRpb25bXSBnZXRBbm5vdGF0aW9ucygpOwogCiAvKioK
KyAqIEFuc3dlciB0aGUgcnVudGltZSB2aXNpYmxlIGFuZCBpbnZpc2libGUgdHlwZSBhbm5vdGF0
aW9ucyBmb3IgdGhpcyBmaWVsZCBvciBudWxsIGlmIG5vbmUuCisgKi8KK0lCaW5hcnlUeXBlQW5u
b3RhdGlvbltdIGdldFR5cGVBbm5vdGF0aW9ucygpOworCisvKioKICAqCiAgKiBAcmV0dXJuIG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5Db25zdGFudAogICovCmRpZmYgLS1naXQg
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvZW52L0lCaW5hcnlNZXRob2QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9lbnYvSUJpbmFyeU1ldGhv
ZC5qYXZhCmluZGV4IDE3N2FlMjQuLjY5ZGNhZmMgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9lbnYvSUJp
bmFyeU1ldGhvZC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9lbnYvSUJpbmFyeU1ldGhvZC5qYXZhCkBAIC0x
LDEzICsxLDE5IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAy
MDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAy
MDAwLCAyMDExLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0
cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwog
ICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJs
aWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwg
YW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwt
djEwLmh0bWwKICAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRy
YWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkg
UHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1
YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGgg
YW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqIAogICogQ29udHJpYnV0b3JzOgogICog
ICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgogICog
ICAgIFN0ZXBoYW4gSGVycm1hbm4gLSBDb250cmlidXRpb24gZm9yIGJ1ZyAxODYzNDIgLSBbY29t
cGlsZXJdW251bGxdIFVzaW5nIGFubm90YXRpb25zIGZvciBudWxsIGNoZWNraW5nCisgKiAgICAg
ICAgQW5keSBDbGVtZW50IChHb1Bpdm90YWwsIEluYykgYWNsZW1lbnRAZ29waXZvdGFsLmNvbSAt
IENvbnRyaWJ1dGlvbnMgZm9yCisgKiAgICAgICAgICBCdWcgNDA3MTkxIC0gWzEuOF0gQmluYXJ5
IGFjY2VzcyBzdXBwb3J0IGZvciB0eXBlIGFubm90YXRpb25zCiAgKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudjsKIApA
QCAtODksNCArOTUsOSBAQCBsb25nIGdldFRhZ0JpdHMoKTsKICAqIEFuc3dlciB3aGV0aGVyIHRo
ZSByZWNlaXZlciByZXByZXNlbnRzIGEgY2xhc3MgaW5pdGlhbGl6ZXIgbWV0aG9kLgogICovCiBi
b29sZWFuIGlzQ2xpbml0KCk7CisKKy8qKgorICogQW5zd2VyIHRoZSB0eXBlIGFubm90YXRpb25z
IG9uIHRoaXMgbWV0aG9kLgorICovCitJQmluYXJ5VHlwZUFubm90YXRpb25bXSBnZXRUeXBlQW5u
b3RhdGlvbnMoKTsKIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9lbnYvSUJpbmFyeVR5cGVBbm5vdGF0
aW9uLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvZW52L0lCaW5hcnlUeXBlQW5ub3RhdGlvbi5qYXZhCm5ldyBmaWxl
IG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLmMwNTk1YjIKLS0tIC9kZXYvbnVsbAorKysgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvZW52L0lCaW5hcnlUeXBlQW5ub3RhdGlvbi5qYXZhCkBAIC0wLDAgKzEsNzggQEAKKy8q
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqCisgKiBDb3B5cmlnaHQgKGMpIDIwMTMgR29QaXZvdGFsLCBJ
bmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuCisgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHBy
b2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCisgKiBhcmUgbWFkZSBhdmFpbGFi
bGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKKyAq
IHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0
CisgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICoKKyAqIFRo
aXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBk
ZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBp
cyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICog
b25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBv
ZiB0aGUgSkNQLgorICoKKyAqIENvbnRyaWJ1dG9yczoKKyAqICAgICAgICBBbmR5IENsZW1lbnQg
KEdvUGl2b3RhbCwgSW5jKSBhY2xlbWVudEBnb3Bpdm90YWwuY29tIC0gQ29udHJpYnV0aW9ucyBm
b3IKKyAqICAgICAgICAgIEJ1ZyA0MDcxOTEgLSBbMS44XSBCaW5hcnkgYWNjZXNzIHN1cHBvcnQg
Zm9yIHR5cGUgYW5ub3RhdGlvbnMKKyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLworcGFja2FnZSBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52OworCitpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNvZGVnZW4uQW5ub3RhdGlvblRhcmdldFR5cGVDb25z
dGFudHM7CisKKy8qKgorICogVGhpcyByZXByZXNlbnRzIGNsYXNzIGZpbGUgaW5mb3JtYXRpb24g
YWJvdXQgYW4gYW5ub3RhdGlvbiBpbnN0YW5jZS4KKyAqLworcHVibGljIGludGVyZmFjZSBJQmlu
YXJ5VHlwZUFubm90YXRpb24geworCQorCXN0YXRpYyBpbnRbXSBOT19UWVBFX1BBVEggPSBuZXcg
aW50WzBdOworCisvKioKKyAqIEByZXR1cm4gdGhlIGFubm90YXRpb24KKyAqLworSUJpbmFyeUFu
bm90YXRpb24gZ2V0QW5ub3RhdGlvbigpOworCisvKioKKyAqIEByZXR1cm4gdGhlIHRhcmdldCB0
eXBlLCBhY2NvcmRpbmcgdG8gdGhlIGNvbnN0YW50cyBpbiB7QGxpbmsgQW5ub3RhdGlvblRhcmdl
dFR5cGVDb25zdGFudHN9CisgKi8KK2ludCBnZXRUYXJnZXRUeXBlKCk7CisKKy8qKgorICogCisg
KiBAcmV0dXJuIHRoZSByYXcgdHlwZSBwYXRoIGRhdGEsIGVhY2ggcGFpciBvZiBpbnRzIGlzIGEg
dHlwZSBwYXRoIGVudHJ5CisgKi8KK2ludFtdIGdldFR5cGVQYXRoKCk7CisKKy8qKgorICogQXBw
bGljYWJsZSBmb3IgdGFyZ2V0IHR5cGUgMHgxMChDTEFTU19FWFRFTkRTKQorICogCisgKiBAcmV0
dXJuIHRoZSBzdXBlcnR5cGUgaW5kZXguIC0xICg2NTUzNSkgZm9yIHN1cGVyY2xhc3MsIDAuLm4g
Zm9yIHN1cGVyaW50ZXJmYWNlcworICovCitpbnQgZ2V0U3VwZXJ0eXBlSW5kZXgoKTsKKworLyoq
CisgKiBBcHBsaWNhYmxlIGZvciB0YXJnZXQgdHlwZSAweDAwKENMQVNTX1RZUEVfUEFSQU1FVEVS
KSwgMHgwMShNRVRIT0RfVFlQRV9QQVJBTUVURVIpCisgKiAKKyAqIEByZXR1cm4gdGhlIHR5cGUg
cGFyYW1ldGVyIGluZGV4ICgwIGJhc2VkKQorICovCitpbnQgZ2V0VHlwZVBhcmFtZXRlckluZGV4
KCk7CisKKy8qKgorICogQXBwbGljYWJsZSBmb3IgdGFyZ2V0IHR5cGUgMHgxMShDTEFTU19UWVBF
X1BBUkFNRVRFUl9CT1VORCksIDB4MTIoTUVUSE9EX1RZUEVfUEFSQU1FVEVSX0JPVU5EKQorICog
CisgKiBAcmV0dXJuIHRoZSBib3VuZCBpbmRleAorICovCitpbnQgZ2V0Qm91bmRJbmRleCgpOwor
CisvKioKKyAqIEFwcGxpY2FibGUgZm9yIHRhcmdldCB0eXBlIDB4MTYoTUVUSE9EX0ZPUk1BTF9Q
QVJBTUVURVIpCisgKiAKKyAqIEByZXR1cm4gdGhlIG1ldGhvZCBmb3JtYWwgcGFyYW1ldGVyIGlu
ZGV4CisgKi8KK2ludCBnZXRNZXRob2RGb3JtYWxQYXJhbWV0ZXJJbmRleCgpOworCisvKioKKyAq
IEFwcGxpY2FibGUgZm9yIHRhcmdldCB0eXBlIDB4MTcoVEhST1dTKQorICogCisgKiBAcmV0dXJu
IHRoZSB0aHJvd3MgdHlwZSBpbmRleAorICovCitpbnQgZ2V0VGhyb3dzVHlwZUluZGV4KCk7CisK
K30KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2V2YWwvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2V2YWwvQ29kZVNuaXBwZXRTa2VsZXRvbi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUvZXZhbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvZXZhbC9Db2RlU25pcHBldFNrZWxl
dG9uLmphdmEKaW5kZXggZjAwOTBiMS4uOWY4MjA4MiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvZXZhbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvZXZhbC9Db2RlU25pcHBldFNr
ZWxldG9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZXZhbC9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvZXZhbC9Db2RlU25pcHBldFNrZWxldG9uLmphdmEKQEAgLTUsOSArNSwxNSBA
QAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFi
bGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCiAgKgor
ICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0
aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkg
YW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2Vz
CisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0
aW9uIG9mIHRoZSBKQ1AuCisgKiAKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9y
YXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KICAqICAgICBTdGVwaGFuIEhl
cnJtYW5uIC0gQ29udHJpYnV0aW9uIGZvciBidWcgMTg2MzQyIC0gW2NvbXBpbGVyXVtudWxsXSBV
c2luZyBhbm5vdGF0aW9ucyBmb3IgbnVsbCBjaGVja2luZworICogICAgICAgIEFuZHkgQ2xlbWVu
dCAoR29QaXZvdGFsLCBJbmMpIGFjbGVtZW50QGdvcGl2b3RhbC5jb20gLSBDb250cmlidXRpb25z
IGZvcgorICogICAgICAgICAgQnVnIDQwNzE5MSAtIFsxLjhdIEJpbmFyeSBhY2Nlc3Mgc3VwcG9y
dCBmb3IgdHlwZSBhbm5vdGF0aW9ucwogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdl
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5ldmFsOwogCkBAIC0yMCw2ICsyNiw3IEBAIGltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklCaW5hcnlGaWVsZDsKIGlt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklCaW5hcnlNZXRob2Q7
CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5JQmluYXJ5TmVz
dGVkVHlwZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklC
aW5hcnlUeXBlOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYu
SUJpbmFyeVR5cGVBbm5vdGF0aW9uOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b3JlLnV0aWwuVXRpbDsKIAogLyoqCkBAIC02OCw2ICs3NSw5IEBAIHB1YmxpYyBjbGFzcyBDb2Rl
U25pcHBldFNrZWxldG9uIGltcGxlbWVudHMgSUJpbmFyeVR5cGUsIEV2YWx1YXRpb25Db25zdGFu
dHMgewogCQlwdWJsaWMgaW50IGdldEFubm90YXRlZFBhcmFtZXRlcnNDb3VudCgpIHsKIAkJCXJl
dHVybiAwOwogCQl9CisJCXB1YmxpYyBJQmluYXJ5VHlwZUFubm90YXRpb25bXSBnZXRUeXBlQW5u
b3RhdGlvbnMoKSB7CisJCQlyZXR1cm4gbnVsbDsKKwkJfQogCQlwdWJsaWMgY2hhcltdIGdldFNl
bGVjdG9yKCkgewogCQkJcmV0dXJuIHRoaXMuc2VsZWN0b3I7CiAJCX0KLS0gCjEuNy4xMS4yCgo=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>233383</attachid>
            <date>2013-07-11 16:05:00 -0400</date>
            <delta_ts>2013-08-04 15:35:59 -0400</delta_ts>
            <desc>patch that implements ClassFileReader support for type annos</desc>
            <filename>0001-bug407191.patch</filename>
            <type>text/plain</type>
            <size>72051</size>
            <attacher name="Andrew Clement">aclement</attacher>
            
              <data encoding="base64">RnJvbSBkZTY4YzM5MzQzMGEwNjgxYWFjNmY0OTNhMTZiNGYwYjMzNGQwY2U3IE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBBbmR5IENsZW1lbnQgPGFjbGVtZW50QGdvcGl2b3RhbC5jb20+
CkRhdGU6IFdlZCwgMTAgSnVsIDIwMTMgMTE6MzY6NDEgLTA3MDAKU3ViamVjdDogW1BBVENIXSBi
dWc0MDcxOTEKCi0tLQogLi4uL3JlZ3Jlc3Npb24vQ2xhc3NGaWxlUmVhZGVyVGVzdF8xXzguamF2
YSAgICAgICAgfCA1MTMgKysrKysrKysrKysrKysrKysrKysrCiAuLi4vY29yZS90ZXN0cy9jb21w
aWxlci9yZWdyZXNzaW9uL1Rlc3RBbGwuamF2YSAgICB8ICAgNSArLQogLi4uL2NvbXBpbGVyL2Ns
YXNzZm10L0NsYXNzRmlsZVJlYWRlci5qYXZhICAgICAgICAgfCAgNDQgKy0KIC4uLi9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvY2xhc3NmbXQvRmllbGRJbmZvLmphdmEgIHwgMTMxICsrKystLQogLi4u
L2NvbXBpbGVyL2NsYXNzZm10L0ZpZWxkSW5mb1dpdGhBbm5vdGF0aW9uLmphdmEgfCAgMTUgKy0K
IC4uLi9jbGFzc2ZtdC9GaWVsZEluZm9XaXRoVHlwZUFubm90YXRpb24uamF2YSAgICAgIHwgIDU0
ICsrKwogLi4uL2pkdC9pbnRlcm5hbC9jb21waWxlci9jbGFzc2ZtdC9NZXRob2RJbmZvLmphdmEg
fCAgNDQgKy0KIC4uLi9jbGFzc2ZtdC9NZXRob2RJbmZvV2l0aFR5cGVBbm5vdGF0aW9ucy5qYXZh
ICAgIHwgIDUxICsrCiAuLi4vY29tcGlsZXIvY2xhc3NmbXQvVHlwZUFubm90YXRpb25JbmZvLmph
dmEgICAgICB8IDI0MiArKysrKysrKysrCiAuLi4vamR0L2ludGVybmFsL2NvbXBpbGVyL2Vudi9J
QmluYXJ5RmllbGQuamF2YSAgICB8ICAxMyArLQogLi4uL2pkdC9pbnRlcm5hbC9jb21waWxlci9l
bnYvSUJpbmFyeU1ldGhvZC5qYXZhICAgfCAgMTMgKy0KIC4uLi9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvZW52L0lCaW5hcnlUeXBlLmphdmEgICAgIHwgIDExICstCiAuLi4vY29tcGlsZXIvZW52L0lC
aW5hcnlUeXBlQW5ub3RhdGlvbi5qYXZhICAgICAgICB8ICA3OCArKysrCiAuLi4vamR0L2ludGVy
bmFsL2V2YWwvQ29kZVNuaXBwZXRTa2VsZXRvbi5qYXZhICAgICB8ICAxNSArLQogLi4uL2NvcmUv
aGllcmFyY2h5L0hpZXJhcmNoeUJpbmFyeVR5cGUuamF2YSAgICAgICAgfCAgMTAgKy0KIDE1IGZp
bGVzIGNoYW5nZWQsIDExODIgaW5zZXJ0aW9ucygrKSwgNTcgZGVsZXRpb25zKC0pCiBjcmVhdGUg
bW9kZSAxMDA2NDQgb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQ2xhc3NGaWxlUmVhZGVy
VGVzdF8xXzguamF2YQogY3JlYXRlIG1vZGUgMTAwNjQ0IG9yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jbGFzc2ZtdC9GaWVsZElu
Zm9XaXRoVHlwZUFubm90YXRpb24uamF2YQogY3JlYXRlIG1vZGUgMTAwNjQ0IG9yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jbGFz
c2ZtdC9NZXRob2RJbmZvV2l0aFR5cGVBbm5vdGF0aW9ucy5qYXZhCiBjcmVhdGUgbW9kZSAxMDA2
NDQgb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2NsYXNzZm10L1R5cGVBbm5vdGF0aW9uSW5mby5qYXZhCiBjcmVhdGUgbW9kZSAx
MDA2NDQgb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2Vudi9JQmluYXJ5VHlwZUFubm90YXRpb24uamF2YQoKZGlmZiAtLWdpdCBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0NsYXNzRmlsZVJlYWRlclRlc3RfMV84Lmph
dmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9DbGFzc0ZpbGVSZWFkZXJUZXN0XzFf
OC5qYXZhCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLjdhY2E2YzkKLS0tIC9k
ZXYvbnVsbAorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9DbGFzc0ZpbGVSZWFk
ZXJUZXN0XzFfOC5qYXZhCkBAIC0wLDAgKzEsNTEzIEBACisvKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KgorICogQ29weXJpZ2h0IChjKSAyMDEzIEdvUGl2b3RhbCwgSW5jLiBBbGwgUmlnaHRzIFJlc2Vy
dmVkLgorICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21w
YW55aW5nIG1hdGVyaWFscworICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBv
ZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCisgKiB3aGljaCBhY2NvbXBhbmllcyB0
aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAorICogaHR0cDovL3d3dy5lY2xp
cHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0
aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBK
YXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9y
IHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5v
dCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqCisgKiBD
b250cmlidXRvcnM6CisgKgkJQW5keSBDbGVtZW50IChHb1Bpdm90YWwsIEluYykgYWNsZW1lbnRA
Z29waXZvdGFsLmNvbSAtIENvbnRyaWJ1dGlvbnMgZm9yCisgKgkJCUJ1ZyA0MDcxOTEgLSBbMS44
XSBCaW5hcnkgYWNjZXNzIHN1cHBvcnQgZm9yIHR5cGUgYW5ub3RhdGlvbnMKKyAqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqLworcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxl
ci5yZWdyZXNzaW9uOworCitpbXBvcnQganVuaXQuZnJhbWV3b3JrLlRlc3Q7CisKK2ltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5DaGFyT3BlcmF0aW9uOworaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jbGFzc2ZtdC5DbGFzc0ZpbGVDb25zdGFudHM7
CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNsYXNzZm10LkNsYXNz
RmlsZVJlYWRlcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuY29k
ZWdlbi5Bbm5vdGF0aW9uVGFyZ2V0VHlwZUNvbnN0YW50czsKK2ltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklCaW5hcnlBbm5vdGF0aW9uOworaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuSUJpbmFyeUVsZW1lbnRWYWx1ZVBhaXI7
CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5JQmluYXJ5Rmll
bGQ7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5JQmluYXJ5
TWV0aG9kOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuSUJp
bmFyeVR5cGVBbm5vdGF0aW9uOworCitwdWJsaWMgY2xhc3MgQ2xhc3NGaWxlUmVhZGVyVGVzdF8x
XzggZXh0ZW5kcyBBYnN0cmFjdFJlZ3Jlc3Npb25UZXN0IHsKKwlzdGF0aWMgeworCX0KKworCXB1
YmxpYyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsKKwkJcmV0dXJuIGJ1aWxkTWluaW1hbENvbXBsaWFu
Y2VUZXN0U3VpdGUodGVzdENsYXNzKCksIEZfMV84KTsKKwl9CisJcHVibGljIHN0YXRpYyBDbGFz
cyB0ZXN0Q2xhc3MoKSB7CisJCXJldHVybiBDbGFzc0ZpbGVSZWFkZXJUZXN0XzFfOC5jbGFzczsK
Kwl9CisKKwlwdWJsaWMgQ2xhc3NGaWxlUmVhZGVyVGVzdF8xXzgoU3RyaW5nIG5hbWUpIHsKKwkJ
c3VwZXIobmFtZSk7CisJfQorCQorCS8vIE5lZWRlZCB0byBydW4gdGVzdHMgaW5kaXZpZHVhbGx5
IGZyb20gSlVuaXQKKwlwcm90ZWN0ZWQgdm9pZCBzZXRVcCgpIHRocm93cyBFeGNlcHRpb24gewor
CQlzdXBlci5zZXRVcCgpOworCQl0aGlzLmNvbXBsaWFuY2VMZXZlbCA9IENsYXNzRmlsZUNvbnN0
YW50cy5KREsxXzg7CisJfQorCQorCXB1YmxpYyB2b2lkIHRlc3QwMDFfY2xhc3NUeXBlUGFyYW1l
dGVyKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCVN0cmluZyBzb3VyY2UgPQorCQkJImltcG9ydCBq
YXZhLmxhbmcuYW5ub3RhdGlvbi4qO1xuIiArCisJCQkicHVibGljIGNsYXNzIFg8QEZvbyBUMSxA
QmFyKGlpaT05OSkgVDI+IHt9XG4iICsKKwkJCSJAUmV0ZW50aW9uKFJldGVudGlvblBvbGljeS5D
TEFTUylcbiIgKworCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJCSJA
aW50ZXJmYWNlIEZvbyB7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJAUmV0ZW50aW9uKFJldGVudGlv
blBvbGljeS5DTEFTUylcbiIgKworCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4i
ICsKKwkJCSJAaW50ZXJmYWNlIEJhciB7XG4iICsKKwkJCSIgICAgICAgIGludCBpaWkoKSBkZWZh
dWx0IC0xO1xuIiArCisJCQkifSI7CisKKwkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLmNsYXNzZm10LkNsYXNzRmlsZVJlYWRlciBjbGFzc0ZpbGVSZWFkZXIgPSBnZXRJbnRlcm5h
bENsYXNzRmlsZSgiIiwgIlgiLCAiWCIsIHNvdXJjZSk7CisJCQorCQlJQmluYXJ5VHlwZUFubm90
YXRpb25bXSB0eXBlQW5ub3RhdGlvbnMgPSBjbGFzc0ZpbGVSZWFkZXIuZ2V0VHlwZUFubm90YXRp
b25zKCk7CisJCWFzc2VydEVxdWFscygyLHR5cGVBbm5vdGF0aW9ucy5sZW5ndGgpOworCQkKKwkJ
YXNzZXJ0RXF1YWxzKCJATEZvbzsgQ0xBU1NfVFlQRV9QQVJBTUVURVIodHlwZV9wYXJhbWV0ZXJf
aW5kZXg9MCkiLCBwcmludFR5cGVBbm5vdGF0aW9uKHR5cGVBbm5vdGF0aW9uc1swXSkpOworCQlh
c3NlcnRFcXVhbHMoIkBMQmFyOyhpaWk9KGludCk5OSkgQ0xBU1NfVFlQRV9QQVJBTUVURVIodHlw
ZV9wYXJhbWV0ZXJfaW5kZXg9MSkiLCBwcmludFR5cGVBbm5vdGF0aW9uKHR5cGVBbm5vdGF0aW9u
c1sxXSkpOworCX0KKwkKKwlwdWJsaWMgdm9pZCB0ZXN0MDAxYV9jbGFzc1R5cGVQYXJhbWV0ZXJE
aWZmZXJpbmdSZXRlbnRpb25zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCVN0cmluZyBzb3VyY2Ug
PQorCQkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi4qO1xuIiArCisJCQkicHVibGljIGNs
YXNzIFg8QEZvbyBUMSxAQmFyKGlpaT05OSkgVDI+IHt9XG4iICsKKwkJCSJAUmV0ZW50aW9uKFJl
dGVudGlvblBvbGljeS5SVU5USU1FKVxuIiArCisJCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBF
X1VTRSlcbiIgKworCQkJIkBpbnRlcmZhY2UgRm9vIHtcbiIgKworCQkJIn1cbiIgKworCQkJIkBS
ZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LkNMQVNTKVxuIiArCisJCQkiQFRhcmdldChFbGVtZW50
VHlwZS5UWVBFX1VTRSlcbiIgKworCQkJIkBpbnRlcmZhY2UgQmFyIHtcbiIgKworCQkJIiAgICAg
ICAgaW50IGlpaSgpIGRlZmF1bHQgLTE7XG4iICsKKwkJCSJ9IjsKKworCQlvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIuY2xhc3NmbXQuQ2xhc3NGaWxlUmVhZGVyIGNsYXNzRmlsZVJl
YWRlciA9IGdldEludGVybmFsQ2xhc3NGaWxlKCIiLCAiWCIsICJYIiwgc291cmNlKTsKKwkJCisJ
CUlCaW5hcnlUeXBlQW5ub3RhdGlvbltdIHR5cGVBbm5vdGF0aW9ucyA9IGNsYXNzRmlsZVJlYWRl
ci5nZXRUeXBlQW5ub3RhdGlvbnMoKTsKKwkJYXNzZXJ0RXF1YWxzKDIsdHlwZUFubm90YXRpb25z
Lmxlbmd0aCk7CisJCQorCQlhc3NlcnRFcXVhbHMoIkBMQmFyOyhpaWk9KGludCk5OSkgQ0xBU1Nf
VFlQRV9QQVJBTUVURVIodHlwZV9wYXJhbWV0ZXJfaW5kZXg9MSkiLCBwcmludFR5cGVBbm5vdGF0
aW9uKHR5cGVBbm5vdGF0aW9uc1swXSkpOworCQlhc3NlcnRFcXVhbHMoIkBMRm9vOyBDTEFTU19U
WVBFX1BBUkFNRVRFUih0eXBlX3BhcmFtZXRlcl9pbmRleD0wKSIsIHByaW50VHlwZUFubm90YXRp
b24odHlwZUFubm90YXRpb25zWzFdKSk7CisJfQorCQorCXB1YmxpYyB2b2lkIHRlc3QwMDJfbWV0
aG9kVHlwZVBhcmFtZXRlcigpIHRocm93cyBFeGNlcHRpb24geworCQlTdHJpbmcgc291cmNlID0K
KwkJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uKjtcbiIgKworCQkJInB1YmxpYyBjbGFz
cyBYIHtcbiIgKworCQkJIgk8QEZvbyBUMSwgQEJhcigzKSBUMj4gdm9pZCBmb28oVDEgdDEsVDIg
dDIpIHt9XG4iICsgCisJCQkifVxuIiArCisJCQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3ku
Q0xBU1MpXG4iICsKKwkJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCQki
QGludGVyZmFjZSBGb28ge1xuIiArCisJCQkifVxuIiArCisJCQkiQFJldGVudGlvbihSZXRlbnRp
b25Qb2xpY3kuQ0xBU1MpXG4iICsKKwkJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxu
IiArCisJCQkiQGludGVyZmFjZSBCYXIge1xuIiArCisJCQkiICAgICAgICBpbnQgdmFsdWUoKSBk
ZWZhdWx0IC0xO1xuIiArCisJCQkifSI7CisKKwkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmNsYXNzZm10LkNsYXNzRmlsZVJlYWRlciBjZnIgPSBnZXRJbnRlcm5hbENsYXNzRmls
ZSgiIiwgIlgiLCAiWCIsIHNvdXJjZSk7CisJCQorCQlJQmluYXJ5TWV0aG9kIG1ldGhvZCA9IGdl
dE1ldGhvZChjZnIsImZvbyIpOworCQlhc3NlcnROb3ROdWxsKG1ldGhvZCk7CisJCUlCaW5hcnlU
eXBlQW5ub3RhdGlvbltdIHR5cGVBbm5vdGF0aW9ucyA9IG1ldGhvZC5nZXRUeXBlQW5ub3RhdGlv
bnMoKTsKKwkJYXNzZXJ0Tm90TnVsbCh0eXBlQW5ub3RhdGlvbnMpOworCQlhc3NlcnRFcXVhbHMo
Mix0eXBlQW5ub3RhdGlvbnMubGVuZ3RoKTsKKwkJYXNzZXJ0RXF1YWxzKCJATEZvbzsgTUVUSE9E
X1RZUEVfUEFSQU1FVEVSKHR5cGVfcGFyYW1ldGVyX2luZGV4PTApIixwcmludFR5cGVBbm5vdGF0
aW9uKHR5cGVBbm5vdGF0aW9uc1swXSkpOworCQlhc3NlcnRFcXVhbHMoIkBMQmFyOyh2YWx1ZT0o
aW50KTMpIE1FVEhPRF9UWVBFX1BBUkFNRVRFUih0eXBlX3BhcmFtZXRlcl9pbmRleD0xKSIscHJp
bnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlvbnNbMV0pKTsKKwl9CisJCisJcHVibGljIHZv
aWQgdGVzdDAwM19jbGFzc0V4dGVuZHMoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwkJdGhpcy5jb21w
bGlhbmNlTGV2ZWwgPSBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV84OworCQlTdHJpbmcgc291cmNl
ID0KKwkJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uKjtcbiIgKworCQkJInB1YmxpYyBj
bGFzcyBYIGV4dGVuZHMgQEZvbyBAQmFyKGlpaT0zNCkgT2JqZWN0IGltcGxlbWVudHMgamF2YS5p
by5AQmFyKGlpaT0xKSBTZXJpYWxpemFibGUge1xuIiArCisJCQkifVxuIiArCisJCQkiQFJldGVu
dGlvbihSZXRlbnRpb25Qb2xpY3kuQ0xBU1MpXG4iICsKKwkJCSJAVGFyZ2V0KEVsZW1lbnRUeXBl
LlRZUEVfVVNFKVxuIiArCisJCQkiQGludGVyZmFjZSBGb28ge1xuIiArCisJCQkifVxuIiArCisJ
CQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3kuQ0xBU1MpXG4iICsKKwkJCSJAVGFyZ2V0KEVs
ZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCQkiQGludGVyZmFjZSBCYXIge1xuIiArCisJCQki
ICAgICAgICBpbnQgaWlpKCkgZGVmYXVsdCAtMTtcbiIgKworCQkJIn0iOworCisJCW9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jbGFzc2ZtdC5DbGFzc0ZpbGVSZWFkZXIgY2xhc3NG
aWxlUmVhZGVyID0gZ2V0SW50ZXJuYWxDbGFzc0ZpbGUoIiIsICJYIiwgIlgiLCBzb3VyY2UpOwor
CQkKKwkJSUJpbmFyeVR5cGVBbm5vdGF0aW9uW10gdHlwZUFubm90YXRpb25zID0gY2xhc3NGaWxl
UmVhZGVyLmdldFR5cGVBbm5vdGF0aW9ucygpOworCQlhc3NlcnRFcXVhbHMoMyx0eXBlQW5ub3Rh
dGlvbnMubGVuZ3RoKTsKKwkJYXNzZXJ0RXF1YWxzKCJATEZvbzsgQ0xBU1NfRVhURU5EUyh0eXBl
X2luZGV4PS0xKSIsIHByaW50VHlwZUFubm90YXRpb24odHlwZUFubm90YXRpb25zWzBdKSk7CisJ
CWFzc2VydEVxdWFscygiQExCYXI7KGlpaT0oaW50KTM0KSBDTEFTU19FWFRFTkRTKHR5cGVfaW5k
ZXg9LTEpIiwgcHJpbnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlvbnNbMV0pKTsKKwkJYXNz
ZXJ0RXF1YWxzKCJATEJhcjsoaWlpPShpbnQpMSkgQ0xBU1NfRVhURU5EUyh0eXBlX2luZGV4PTAp
IiwgcHJpbnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlvbnNbMl0pKTsKKwl9CisKKwlwdWJs
aWMgdm9pZCB0ZXN0MDA0X2NsYXNzRXh0ZW5kcygpIHRocm93cyBFeGNlcHRpb24geworCQlTdHJp
bmcgc291cmNlID0KKwkJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uKjtcbiIgKworCQkJ
InB1YmxpYyBjbGFzcyBYIGV4dGVuZHMgWTxARm9vIFN0cmluZyxAQmFyIEludGVnZXI+IGltcGxl
bWVudHMgSTxARm9vIFN0cmluZz4ge1xuIiArCisJCQkifVxuIiArCisJCQkiY2xhc3MgWTxUMSwg
VDI+IHt9XG4iICsKKwkJCSJpbnRlcmZhY2UgSTxUMT4ge31cbiIgKworCQkJIkBSZXRlbnRpb24o
UmV0ZW50aW9uUG9saWN5LkNMQVNTKVxuIiArCisJCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBF
X1VTRSlcbiIgKworCQkJIkBpbnRlcmZhY2UgRm9vIHtcbiIgKworCQkJIn1cbiIgKworCQkJIkBS
ZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LkNMQVNTKVxuIiArCisJCQkiQFRhcmdldChFbGVtZW50
VHlwZS5UWVBFX1VTRSlcbiIgKworCQkJIkBpbnRlcmZhY2UgQmFyIHtcbiIgKworCQkJIiAgICAg
ICAgaW50IGlpaSgpIGRlZmF1bHQgLTE7XG4iICsKKwkJCSJ9IjsKKworCQlvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIuY2xhc3NmbXQuQ2xhc3NGaWxlUmVhZGVyIGNsYXNzRmlsZVJl
YWRlciA9IGdldEludGVybmFsQ2xhc3NGaWxlKCIiLCAiWCIsICJYIiwgc291cmNlKTsKKwkJCisJ
CUlCaW5hcnlUeXBlQW5ub3RhdGlvbltdIHR5cGVBbm5vdGF0aW9ucyA9IGNsYXNzRmlsZVJlYWRl
ci5nZXRUeXBlQW5ub3RhdGlvbnMoKTsKKwkJYXNzZXJ0RXF1YWxzKDMsdHlwZUFubm90YXRpb25z
Lmxlbmd0aCk7CisJCWFzc2VydEVxdWFscygiQExGb287IENMQVNTX0VYVEVORFModHlwZV9pbmRl
eD0tMSksIGxvY2F0aW9uPVtUWVBFX0FSR1VNRU5UKDApXSIsIHByaW50VHlwZUFubm90YXRpb24o
dHlwZUFubm90YXRpb25zWzBdKSk7CisJCWFzc2VydEVxdWFscygiQExCYXI7IENMQVNTX0VYVEVO
RFModHlwZV9pbmRleD0tMSksIGxvY2F0aW9uPVtUWVBFX0FSR1VNRU5UKDEpXSIsIHByaW50VHlw
ZUFubm90YXRpb24odHlwZUFubm90YXRpb25zWzFdKSk7CisJCWFzc2VydEVxdWFscygiQExGb287
IENMQVNTX0VYVEVORFModHlwZV9pbmRleD0wKSwgbG9jYXRpb249W1RZUEVfQVJHVU1FTlQoMCld
IiwgcHJpbnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlvbnNbMl0pKTsKKwl9CisJCisJcHVi
bGljIHZvaWQgdGVzdDAwNV9jbGFzc1R5cGVQYXJhbWV0ZXJCb3VuZCgpIHRocm93cyBFeGNlcHRp
b24geworCQlTdHJpbmcgc291cmNlID0KKwkJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24u
KjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYPFUsIFQgZXh0ZW5kcyBZPEBGb28gU3RyaW5nIEBC
YXIoMSlbXVtdQEJhcigyKVtdPiAmIEBCYXIoMykgQ2xvbmVhYmxlPiB7fVxuIiArCisJCQkiY2xh
c3MgWTxUPiB7fVxuIiArCisJCQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3kuQ0xBU1MpXG4i
ICsKKwkJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCQkiQGludGVyZmFj
ZSBGb28ge1xuIiArCisJCQkifVxuIiArCisJCQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3ku
Q0xBU1MpXG4iICsKKwkJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCQki
QGludGVyZmFjZSBCYXIge1xuIiArCisJCQkiICAgICAgICBpbnQgdmFsdWUoKSBkZWZhdWx0IC0x
O1xuIiArCisJCQkifSI7CisKKwkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNs
YXNzZm10LkNsYXNzRmlsZVJlYWRlciBjbGFzc0ZpbGVSZWFkZXIgPSBnZXRJbnRlcm5hbENsYXNz
RmlsZSgiIiwgIlgiLCAiWCIsIHNvdXJjZSk7CisJCQorCQlJQmluYXJ5VHlwZUFubm90YXRpb25b
XSB0eXBlQW5ub3RhdGlvbnMgPSBjbGFzc0ZpbGVSZWFkZXIuZ2V0VHlwZUFubm90YXRpb25zKCk7
CisJCWFzc2VydEVxdWFscyg0LHR5cGVBbm5vdGF0aW9ucy5sZW5ndGgpOworCQlhc3NlcnRFcXVh
bHMoIkBMRm9vOyBDTEFTU19UWVBFX1BBUkFNRVRFUl9CT1VORCh0eXBlX3BhcmFtZXRlcl9pbmRl
eD0xLCBib3VuZF9pbmRleD0wKSwgbG9jYXRpb249W1RZUEVfQVJHVU1FTlQoMCksIEFSUkFZLCBB
UlJBWSwgQVJSQVldIiwgcHJpbnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlvbnNbMF0pKTsK
KwkJYXNzZXJ0RXF1YWxzKCJATEJhcjsodmFsdWU9KGludCkxKSBDTEFTU19UWVBFX1BBUkFNRVRF
Ul9CT1VORCh0eXBlX3BhcmFtZXRlcl9pbmRleD0xLCBib3VuZF9pbmRleD0wKSwgbG9jYXRpb249
W1RZUEVfQVJHVU1FTlQoMCldIiwgcHJpbnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlvbnNb
MV0pKTsKKwkJYXNzZXJ0RXF1YWxzKCJATEJhcjsodmFsdWU9KGludCkyKSBDTEFTU19UWVBFX1BB
UkFNRVRFUl9CT1VORCh0eXBlX3BhcmFtZXRlcl9pbmRleD0xLCBib3VuZF9pbmRleD0wKSwgbG9j
YXRpb249W1RZUEVfQVJHVU1FTlQoMCksIEFSUkFZLCBBUlJBWV0iLCBwcmludFR5cGVBbm5vdGF0
aW9uKHR5cGVBbm5vdGF0aW9uc1syXSkpOworCQlhc3NlcnRFcXVhbHMoIkBMQmFyOyh2YWx1ZT0o
aW50KTMpIENMQVNTX1RZUEVfUEFSQU1FVEVSX0JPVU5EKHR5cGVfcGFyYW1ldGVyX2luZGV4PTEs
IGJvdW5kX2luZGV4PTEpIiwgcHJpbnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlvbnNbM10p
KTsKKwl9CisJCisJcHVibGljIHZvaWQgdGVzdDAwNl9tZXRob2RUeXBlUGFyYW1ldGVyQm91bmQo
KSB0aHJvd3MgRXhjZXB0aW9uIHsKKwkJU3RyaW5nIHNvdXJjZSA9CisJCQkiaW1wb3J0IGphdmEu
bGFuZy5hbm5vdGF0aW9uLio7XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWHtcbiIgKworCQkJIgk8
VCBleHRlbmRzIFk8QEZvbyBaIEBCYXIoMSlbXVtdQEJhcigyKVtdPiAmIEBCYXIoMykgQ2xvbmVh
YmxlPiB2b2lkIGZvbyhUIHQpIHt9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJjbGFzcyBZPFQ+IHt9
XG4iICsKKwkJCSJjbGFzcyBaIHt9XG4iICsKKwkJCSJAUmV0ZW50aW9uKFJldGVudGlvblBvbGlj
eS5DTEFTUylcbiIgKworCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJ
CSJAaW50ZXJmYWNlIEZvbyB7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJAUmV0ZW50aW9uKFJldGVu
dGlvblBvbGljeS5DTEFTUylcbiIgKworCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0Up
XG4iICsKKwkJCSJAaW50ZXJmYWNlIEJhciB7XG4iICsKKwkJCSIgICAgICAgIGludCB2YWx1ZSgp
IGRlZmF1bHQgLTE7XG4iICsKKwkJCSJ9IjsKKworCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuY2xhc3NmbXQuQ2xhc3NGaWxlUmVhZGVyIGNmciA9IGdldEludGVybmFsQ2xhc3NG
aWxlKCIiLCAiWCIsICJYIiwgc291cmNlKTsKKworCQlJQmluYXJ5TWV0aG9kIG1ldGhvZCA9IGdl
dE1ldGhvZChjZnIsImZvbyIpOworCQlhc3NlcnROb3ROdWxsKG1ldGhvZCk7CisJCUlCaW5hcnlU
eXBlQW5ub3RhdGlvbltdIHR5cGVBbm5vdGF0aW9ucyA9IG1ldGhvZC5nZXRUeXBlQW5ub3RhdGlv
bnMoKTsKKwkJYXNzZXJ0Tm90TnVsbCh0eXBlQW5ub3RhdGlvbnMpOworCQlhc3NlcnRFcXVhbHMo
NCx0eXBlQW5ub3RhdGlvbnMubGVuZ3RoKTsKKwkJYXNzZXJ0RXF1YWxzKCJATEZvbzsgTUVUSE9E
X1RZUEVfUEFSQU1FVEVSX0JPVU5EKHR5cGVfcGFyYW1ldGVyX2luZGV4PTAsIGJvdW5kX2luZGV4
PTApLCBsb2NhdGlvbj1bVFlQRV9BUkdVTUVOVCgwKSwgQVJSQVksIEFSUkFZLCBBUlJBWV0iLHBy
aW50VHlwZUFubm90YXRpb24odHlwZUFubm90YXRpb25zWzBdKSk7CisJCWFzc2VydEVxdWFscygi
QExCYXI7KHZhbHVlPShpbnQpMSkgTUVUSE9EX1RZUEVfUEFSQU1FVEVSX0JPVU5EKHR5cGVfcGFy
YW1ldGVyX2luZGV4PTAsIGJvdW5kX2luZGV4PTApLCBsb2NhdGlvbj1bVFlQRV9BUkdVTUVOVCgw
KV0iLCBwcmludFR5cGVBbm5vdGF0aW9uKHR5cGVBbm5vdGF0aW9uc1sxXSkpOworCQlhc3NlcnRF
cXVhbHMoIkBMQmFyOyh2YWx1ZT0oaW50KTIpIE1FVEhPRF9UWVBFX1BBUkFNRVRFUl9CT1VORCh0
eXBlX3BhcmFtZXRlcl9pbmRleD0wLCBib3VuZF9pbmRleD0wKSwgbG9jYXRpb249W1RZUEVfQVJH
VU1FTlQoMCksIEFSUkFZLCBBUlJBWV0iLCBwcmludFR5cGVBbm5vdGF0aW9uKHR5cGVBbm5vdGF0
aW9uc1syXSkpOworCQlhc3NlcnRFcXVhbHMoIkBMQmFyOyh2YWx1ZT0oaW50KTMpIE1FVEhPRF9U
WVBFX1BBUkFNRVRFUl9CT1VORCh0eXBlX3BhcmFtZXRlcl9pbmRleD0wLCBib3VuZF9pbmRleD0x
KSIsIHByaW50VHlwZUFubm90YXRpb24odHlwZUFubm90YXRpb25zWzNdKSk7CisJfQorCQorCXB1
YmxpYyB2b2lkIHRlc3QwMDdfZmllbGQoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwkJU3RyaW5nIHNv
dXJjZSA9CisJCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLio7XG4iICsKKwkJCSJpbXBv
cnQgamF2YS51dGlsLk1hcDtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYe1xuIiArCisJCQkiCUBG
b28gTWFwPEBCYXIoMSkgU3RyaW5nLCBAQmFyKDIpIFN0cmluZyBAQmFyKDMpW10gQEJhcig0KVtd
IEBCYXIoNSlbXT4gZmllbGQzO1xuIiArCisJCQkifVxuIiArCisJCQkiY2xhc3MgWTxUPiB7fVxu
IiArCisJCQkiY2xhc3MgWiB7fVxuIiArCisJCQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3ku
Q0xBU1MpXG4iICsKKwkJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCQki
QGludGVyZmFjZSBGb28ge1xuIiArCisJCQkifVxuIiArCisJCQkiQFJldGVudGlvbihSZXRlbnRp
b25Qb2xpY3kuQ0xBU1MpXG4iICsKKwkJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxu
IiArCisJCQkiQGludGVyZmFjZSBCYXIge1xuIiArCisJCQkiICAgICAgICBpbnQgdmFsdWUoKSBk
ZWZhdWx0IC0xO1xuIiArCisJCQkifSI7CisKKwkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmNsYXNzZm10LkNsYXNzRmlsZVJlYWRlciBjZnIgPSBnZXRJbnRlcm5hbENsYXNzRmls
ZSgiIiwgIlgiLCAiWCIsIHNvdXJjZSk7CisKKwkJSUJpbmFyeUZpZWxkIGZpZWxkID0gZ2V0Rmll
bGQoY2ZyLCJmaWVsZDMiKTsKKwkJYXNzZXJ0Tm90TnVsbChmaWVsZCk7CisJCUlCaW5hcnlUeXBl
QW5ub3RhdGlvbltdIHR5cGVBbm5vdGF0aW9ucyA9IGZpZWxkLmdldFR5cGVBbm5vdGF0aW9ucygp
OworCQlhc3NlcnROb3ROdWxsKHR5cGVBbm5vdGF0aW9ucyk7CisJCWFzc2VydEVxdWFscyg2LHR5
cGVBbm5vdGF0aW9ucy5sZW5ndGgpOworCQlhc3NlcnRFcXVhbHMoIkBMRm9vOyBGSUVMRCIscHJp
bnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlvbnNbMF0pKTsKKwkJYXNzZXJ0RXF1YWxzKCJA
TEJhcjsodmFsdWU9KGludCkxKSBGSUVMRCwgbG9jYXRpb249W1RZUEVfQVJHVU1FTlQoMCldIiwg
cHJpbnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlvbnNbMV0pKTsKKwkJYXNzZXJ0RXF1YWxz
KCJATEJhcjsodmFsdWU9KGludCkyKSBGSUVMRCwgbG9jYXRpb249W1RZUEVfQVJHVU1FTlQoMSks
IEFSUkFZLCBBUlJBWSwgQVJSQVldIiwgcHJpbnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlv
bnNbMl0pKTsKKwkJYXNzZXJ0RXF1YWxzKCJATEJhcjsodmFsdWU9KGludCkzKSBGSUVMRCwgbG9j
YXRpb249W1RZUEVfQVJHVU1FTlQoMSldIiwgcHJpbnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3Rh
dGlvbnNbM10pKTsKKwkJYXNzZXJ0RXF1YWxzKCJATEJhcjsodmFsdWU9KGludCk0KSBGSUVMRCwg
bG9jYXRpb249W1RZUEVfQVJHVU1FTlQoMSksIEFSUkFZXSIsIHByaW50VHlwZUFubm90YXRpb24o
dHlwZUFubm90YXRpb25zWzRdKSk7CisJCWFzc2VydEVxdWFscygiQExCYXI7KHZhbHVlPShpbnQp
NSkgRklFTEQsIGxvY2F0aW9uPVtUWVBFX0FSR1VNRU5UKDEpLCBBUlJBWSwgQVJSQVldIiwgcHJp
bnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlvbnNbNV0pKTsKKwl9CisJCisJcHVibGljIHZv
aWQgdGVzdDAwOF9tZXRob2RSZXR1cm4oKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwkJU3RyaW5nIHNv
dXJjZSA9CisJCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLio7XG4iICsKKwkJCSJpbXBv
cnQgamF2YS51dGlsLk1hcDtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYe1xuIiArCisJCQkiCUBC
YXIoMykgQEZvbyBpbnQgZm9vKCkge1xuIiArCisJCQkiCQlyZXR1cm4gMTtcbiIgKworCQkJIgl9
XG4iICsgCisJCQkiCUBCYXIoMykgaW50IEBGb28gW10gZm9vMigpIHtcbiIgKworCQkJIgkJcmV0
dXJuIG51bGw7XG4iICsKKwkJCSIJfVxuIiArIAorCQkJIn1cbiIgKworCQkJIkBSZXRlbnRpb24o
UmV0ZW50aW9uUG9saWN5LkNMQVNTKVxuIiArCisJCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBF
X1VTRSlcbiIgKworCQkJIkBpbnRlcmZhY2UgRm9vIHtcbiIgKworCQkJIn1cbiIgKworCQkJIkBS
ZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LkNMQVNTKVxuIiArCisJCQkiQFRhcmdldChFbGVtZW50
VHlwZS5UWVBFX1VTRSlcbiIgKworCQkJIkBpbnRlcmZhY2UgQmFyIHtcbiIgKworCQkJIiAgICAg
ICAgaW50IHZhbHVlKCkgZGVmYXVsdCAtMTtcbiIgKworCQkJIn0iOworCisJCW9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb21waWxlci5jbGFzc2ZtdC5DbGFzc0ZpbGVSZWFkZXIgY2ZyID0gZ2V0
SW50ZXJuYWxDbGFzc0ZpbGUoIiIsICJYIiwgIlgiLCBzb3VyY2UpOworCisJCUlCaW5hcnlNZXRo
b2QgbWV0aG9kID0gZ2V0TWV0aG9kKGNmciwiZm9vIik7CisJCWFzc2VydE5vdE51bGwobWV0aG9k
KTsKKwkJSUJpbmFyeVR5cGVBbm5vdGF0aW9uW10gdHlwZUFubm90YXRpb25zID0gbWV0aG9kLmdl
dFR5cGVBbm5vdGF0aW9ucygpOworCQlhc3NlcnROb3ROdWxsKHR5cGVBbm5vdGF0aW9ucyk7CisJ
CWFzc2VydEVxdWFscygyLHR5cGVBbm5vdGF0aW9ucy5sZW5ndGgpOworCQlhc3NlcnRFcXVhbHMo
IkBMQmFyOyh2YWx1ZT0oaW50KTMpIE1FVEhPRF9SRVRVUk4iLHByaW50VHlwZUFubm90YXRpb24o
dHlwZUFubm90YXRpb25zWzBdKSk7CisJCWFzc2VydEVxdWFscygiQExGb287IE1FVEhPRF9SRVRV
Uk4iLCBwcmludFR5cGVBbm5vdGF0aW9uKHR5cGVBbm5vdGF0aW9uc1sxXSkpOworCQkKKwkJbWV0
aG9kID0gZ2V0TWV0aG9kKGNmciwiZm9vMiIpOworCQlhc3NlcnROb3ROdWxsKG1ldGhvZCk7CisJ
CXR5cGVBbm5vdGF0aW9ucyA9IG1ldGhvZC5nZXRUeXBlQW5ub3RhdGlvbnMoKTsKKwkJYXNzZXJ0
Tm90TnVsbCh0eXBlQW5ub3RhdGlvbnMpOworCQlhc3NlcnRFcXVhbHMoMix0eXBlQW5ub3RhdGlv
bnMubGVuZ3RoKTsKKwkJYXNzZXJ0RXF1YWxzKCJATEJhcjsodmFsdWU9KGludCkzKSBNRVRIT0Rf
UkVUVVJOLCBsb2NhdGlvbj1bQVJSQVldIixwcmludFR5cGVBbm5vdGF0aW9uKHR5cGVBbm5vdGF0
aW9uc1swXSkpOworCQlhc3NlcnRFcXVhbHMoIkBMRm9vOyBNRVRIT0RfUkVUVVJOIiwgcHJpbnRU
eXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlvbnNbMV0pKTsKKwl9CisJCisJcHVibGljIHZvaWQg
dGVzdDAwOV9tZXRob2RSZWNlaXZlcigpIHRocm93cyBFeGNlcHRpb24geworCQlTdHJpbmcgc291
cmNlID0KKwkJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uKjtcbiIgKworCQkJImltcG9y
dCBqYXZhLnV0aWwuTWFwO1xuIiArCisJCQkicHVibGljIGNsYXNzIFh7XG4iICsKKwkJCSIJdm9p
ZCBmb28oQEJhcigzKSBYIHRoaXMpIHt9XG4iICsgCisJCQkifVxuIiArCisJCQkiQFJldGVudGlv
bihSZXRlbnRpb25Qb2xpY3kuQ0xBU1MpXG4iICsKKwkJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZ
UEVfVVNFKVxuIiArCisJCQkiQGludGVyZmFjZSBGb28ge1xuIiArCisJCQkifVxuIiArCisJCQki
QFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3kuQ0xBU1MpXG4iICsKKwkJCSJAVGFyZ2V0KEVsZW1l
bnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCQkiQGludGVyZmFjZSBCYXIge1xuIiArCisJCQkiICAg
ICAgICBpbnQgdmFsdWUoKSBkZWZhdWx0IC0xO1xuIiArCisJCQkifSI7CisKKwkJb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNsYXNzZm10LkNsYXNzRmlsZVJlYWRlciBjZnIgPSBn
ZXRJbnRlcm5hbENsYXNzRmlsZSgiIiwgIlgiLCAiWCIsIHNvdXJjZSk7CisKKwkJSUJpbmFyeU1l
dGhvZCBtZXRob2QgPSBnZXRNZXRob2QoY2ZyLCJmb28iKTsKKwkJYXNzZXJ0Tm90TnVsbChtZXRo
b2QpOworCQlJQmluYXJ5VHlwZUFubm90YXRpb25bXSB0eXBlQW5ub3RhdGlvbnMgPSBtZXRob2Qu
Z2V0VHlwZUFubm90YXRpb25zKCk7CisJCWFzc2VydE5vdE51bGwodHlwZUFubm90YXRpb25zKTsK
KwkJYXNzZXJ0RXF1YWxzKDEsdHlwZUFubm90YXRpb25zLmxlbmd0aCk7CisJCWFzc2VydEVxdWFs
cygiQExCYXI7KHZhbHVlPShpbnQpMykgTUVUSE9EX1JFQ0VJVkVSIiwgcHJpbnRUeXBlQW5ub3Rh
dGlvbih0eXBlQW5ub3RhdGlvbnNbMF0pKTsKKwl9CisJCisJcHVibGljIHZvaWQgdGVzdDAxMF9t
ZXRob2RGb3JtYWxQYXJhbWV0ZXIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwkJU3RyaW5nIHNvdXJj
ZSA9CisJCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLio7XG4iICsKKwkJCSJpbXBvcnQg
amF2YS51dGlsLk1hcDtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYe1xuIiArCisJCQkiCXZvaWQg
Zm9vKEBCYXIoMykgU3RyaW5nIHMsIEBGb28gaW50IGkpIHt9XG4iICsgCisJCQkifVxuIiArCisJ
CQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3kuQ0xBU1MpXG4iICsKKwkJCSJAVGFyZ2V0KEVs
ZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCQkiQGludGVyZmFjZSBGb28ge1xuIiArCisJCQki
fVxuIiArCisJCQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3kuQ0xBU1MpXG4iICsKKwkJCSJA
VGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCQkiQGludGVyZmFjZSBCYXIge1xu
IiArCisJCQkiICAgICAgICBpbnQgdmFsdWUoKSBkZWZhdWx0IC0xO1xuIiArCisJCQkifSI7CisK
KwkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNsYXNzZm10LkNsYXNzRmlsZVJl
YWRlciBjZnIgPSBnZXRJbnRlcm5hbENsYXNzRmlsZSgiIiwgIlgiLCAiWCIsIHNvdXJjZSk7CisK
KwkJSUJpbmFyeU1ldGhvZCBtZXRob2QgPSBnZXRNZXRob2QoY2ZyLCJmb28iKTsKKwkJYXNzZXJ0
Tm90TnVsbChtZXRob2QpOworCQlJQmluYXJ5VHlwZUFubm90YXRpb25bXSB0eXBlQW5ub3RhdGlv
bnMgPSBtZXRob2QuZ2V0VHlwZUFubm90YXRpb25zKCk7CisJCWFzc2VydE5vdE51bGwodHlwZUFu
bm90YXRpb25zKTsKKwkJYXNzZXJ0RXF1YWxzKDIsdHlwZUFubm90YXRpb25zLmxlbmd0aCk7CisJ
CWFzc2VydEVxdWFscygiQExCYXI7KHZhbHVlPShpbnQpMykgTUVUSE9EX0ZPUk1BTF9QQVJBTUVU
RVIobWV0aG9kX2Zvcm1hbF9wYXJhbWV0ZXJfaW5kZXg9MCkiLHByaW50VHlwZUFubm90YXRpb24o
dHlwZUFubm90YXRpb25zWzBdKSk7CisJCWFzc2VydEVxdWFscygiQExGb287IE1FVEhPRF9GT1JN
QUxfUEFSQU1FVEVSKG1ldGhvZF9mb3JtYWxfcGFyYW1ldGVyX2luZGV4PTEpIixwcmludFR5cGVB
bm5vdGF0aW9uKHR5cGVBbm5vdGF0aW9uc1sxXSkpOworCX0KKwkKKwlwdWJsaWMgdm9pZCB0ZXN0
MDExX3Rocm93cygpIHRocm93cyBFeGNlcHRpb24geworCQlTdHJpbmcgc291cmNlID0KKwkJCSJp
bXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uKjtcbiIgKworCQkJImltcG9ydCBqYXZhLnV0aWwu
TWFwO1xuIiArCisJCQkicHVibGljIGNsYXNzIFh7XG4iICsKKwkJCSIJdm9pZCBmb28oKSB0aHJv
d3MgQEZvbyBFeGNlcHRpb24sIEBCYXIoMSkgVGhyb3dhYmxlIHt9XG4iICsgCisJCQkifVxuIiAr
CisJCQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3kuQ0xBU1MpXG4iICsKKwkJCSJAVGFyZ2V0
KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCQkiQGludGVyZmFjZSBGb28ge1xuIiArCisJ
CQkifVxuIiArCisJCQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3kuQ0xBU1MpXG4iICsKKwkJ
CSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCQkiQGludGVyZmFjZSBCYXIg
e1xuIiArCisJCQkiICAgICAgICBpbnQgdmFsdWUoKSBkZWZhdWx0IC0xO1xuIiArCisJCQkifSI7
CisKKwkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNsYXNzZm10LkNsYXNzRmls
ZVJlYWRlciBjZnIgPSBnZXRJbnRlcm5hbENsYXNzRmlsZSgiIiwgIlgiLCAiWCIsIHNvdXJjZSk7
CisKKwkJSUJpbmFyeU1ldGhvZCBtZXRob2QgPSBnZXRNZXRob2QoY2ZyLCJmb28iKTsKKwkJYXNz
ZXJ0Tm90TnVsbChtZXRob2QpOworCQlJQmluYXJ5VHlwZUFubm90YXRpb25bXSB0eXBlQW5ub3Rh
dGlvbnMgPSBtZXRob2QuZ2V0VHlwZUFubm90YXRpb25zKCk7CisJCWFzc2VydE5vdE51bGwodHlw
ZUFubm90YXRpb25zKTsKKwkJYXNzZXJ0RXF1YWxzKDIsdHlwZUFubm90YXRpb25zLmxlbmd0aCk7
CisJCWFzc2VydEVxdWFscygiQExGb287IFRIUk9XUyh0aHJvd3NfdHlwZV9pbmRleD0wKSIscHJp
bnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlvbnNbMF0pKTsKKwkJYXNzZXJ0RXF1YWxzKCJA
TEJhcjsodmFsdWU9KGludCkxKSBUSFJPV1ModGhyb3dzX3R5cGVfaW5kZXg9MSkiLHByaW50VHlw
ZUFubm90YXRpb24odHlwZUFubm90YXRpb25zWzFdKSk7CisJfQorCisJLyoqCisJICogUHJvZHVj
ZSBhIG5pY2VseSBmb3JtYXR0ZWQgdHlwZSBhbm5vdGF0aW9uIGZvciB0ZXN0aW5nLiBFeGVyY2lz
ZXMgdGhlIEFQSSBmb3IgdHlwZSBhbm5vdGF0aW9ucy4KKwkgKiBPdXRwdXQgZXhhbXBsZXM6PGJy
PgorCSAqIDx0dD5ARm9vKGlkPTM0KSBDTEFTU19FWFRFTkRTLCB0eXBlX2luZGV4PS0xLCBsb2Nh
dGlvbj1bQVJSQVksIElOTkVSX1RZUEUsIFRZUEVfQVJHVU1FTlQoMCldPC90dD48YnI+CisJICov
CisJcHJpdmF0ZSBTdHJpbmcgcHJpbnRUeXBlQW5ub3RhdGlvbihJQmluYXJ5VHlwZUFubm90YXRp
b24gdHlwZUFubm90YXRpb24pIHsKKwkJU3RyaW5nQnVmZmVyIHNiID0gbmV3IFN0cmluZ0J1ZmZl
cigpOworCQkvLyBUaGUgYW5ub3RhdGlvbjoKKwkJSUJpbmFyeUFubm90YXRpb24gYW5ub3RhdGlv
biA9IHR5cGVBbm5vdGF0aW9uLmdldEFubm90YXRpb24oKTsKKwkJc2IuYXBwZW5kKCdAJykuYXBw
ZW5kKGFubm90YXRpb24uZ2V0VHlwZU5hbWUoKSk7CisJCUlCaW5hcnlFbGVtZW50VmFsdWVQYWly
W10gcGFpcnMgPSBhbm5vdGF0aW9uLmdldEVsZW1lbnRWYWx1ZVBhaXJzKCk7CisJCWlmIChwYWly
cy5sZW5ndGggIT0gMCkgeworCQkJc2IuYXBwZW5kKCcoJyk7CisJCQlmb3IgKGludCBpID0gMDsg
aSA8IHBhaXJzLmxlbmd0aDsgaSsrKSB7CisJCQkJaWYgKGkgPiAwKSB7CisJCQkJCXNiLmFwcGVu
ZCgnLCcpOworCQkJCX0KKwkJCQlzYi5hcHBlbmQocGFpcnNbaV0uZ2V0TmFtZSgpKS5hcHBlbmQo
Jz0nKS5hcHBlbmQocGFpcnNbaV0uZ2V0VmFsdWUoKSk7CisJCQl9CisJCQlzYi5hcHBlbmQoJykn
KTsKKwkJfQorCQlzYi5hcHBlbmQoJyAnKTsKKwkJCisJCS8vIHRhcmdldCB0eXBlCisJCWludCB0
YXJnZXRUeXBlID0gdHlwZUFubm90YXRpb24uZ2V0VGFyZ2V0VHlwZSgpOworCQlzd2l0Y2ggKHRh
cmdldFR5cGUpIHsKKwkJCWNhc2UgQW5ub3RhdGlvblRhcmdldFR5cGVDb25zdGFudHMuQ0xBU1Nf
VFlQRV9QQVJBTUVURVI6CisJCQkJc2IuYXBwZW5kKCJDTEFTU19UWVBFX1BBUkFNRVRFUih0eXBl
X3BhcmFtZXRlcl9pbmRleD0iKS5hcHBlbmQodHlwZUFubm90YXRpb24uZ2V0VHlwZVBhcmFtZXRl
ckluZGV4KCkpLmFwcGVuZCgnKScpOworCQkJCWJyZWFrOworCQkJY2FzZSBBbm5vdGF0aW9uVGFy
Z2V0VHlwZUNvbnN0YW50cy5NRVRIT0RfVFlQRV9QQVJBTUVURVI6CisJCQkJc2IuYXBwZW5kKCJN
RVRIT0RfVFlQRV9QQVJBTUVURVIodHlwZV9wYXJhbWV0ZXJfaW5kZXg9IikuYXBwZW5kKHR5cGVB
bm5vdGF0aW9uLmdldFR5cGVQYXJhbWV0ZXJJbmRleCgpKS5hcHBlbmQoJyknKTsKKwkJCQlicmVh
azsKKwkJCWNhc2UgQW5ub3RhdGlvblRhcmdldFR5cGVDb25zdGFudHMuQ0xBU1NfRVhURU5EUzoK
KwkJCQlzYi5hcHBlbmQoIkNMQVNTX0VYVEVORFModHlwZV9pbmRleD0iKS5hcHBlbmQoKHNob3J0
KXR5cGVBbm5vdGF0aW9uLmdldFN1cGVydHlwZUluZGV4KCkpLmFwcGVuZCgnKScpOworCQkJCWJy
ZWFrOworCQkJY2FzZSBBbm5vdGF0aW9uVGFyZ2V0VHlwZUNvbnN0YW50cy5DTEFTU19UWVBFX1BB
UkFNRVRFUl9CT1VORDoKKwkJCQlzYi5hcHBlbmQoIkNMQVNTX1RZUEVfUEFSQU1FVEVSX0JPVU5E
KHR5cGVfcGFyYW1ldGVyX2luZGV4PSIpLgorCQkJCQlhcHBlbmQodHlwZUFubm90YXRpb24uZ2V0
VHlwZVBhcmFtZXRlckluZGV4KCkpLgorCQkJCQlhcHBlbmQoIiwgYm91bmRfaW5kZXg9IikuYXBw
ZW5kKHR5cGVBbm5vdGF0aW9uLmdldEJvdW5kSW5kZXgoKSkuCisJCQkJCWFwcGVuZCgnKScpOwor
CQkJCWJyZWFrOworCQkJY2FzZSBBbm5vdGF0aW9uVGFyZ2V0VHlwZUNvbnN0YW50cy5NRVRIT0Rf
VFlQRV9QQVJBTUVURVJfQk9VTkQ6CisJCQkJc2IuYXBwZW5kKCJNRVRIT0RfVFlQRV9QQVJBTUVU
RVJfQk9VTkQodHlwZV9wYXJhbWV0ZXJfaW5kZXg9IikuCisJCQkJCWFwcGVuZCh0eXBlQW5ub3Rh
dGlvbi5nZXRUeXBlUGFyYW1ldGVySW5kZXgoKSkuCisJCQkJCWFwcGVuZCgiLCBib3VuZF9pbmRl
eD0iKS5hcHBlbmQodHlwZUFubm90YXRpb24uZ2V0Qm91bmRJbmRleCgpKS4KKwkJCQkJYXBwZW5k
KCcpJyk7CisJCQkJYnJlYWs7CisJCQljYXNlIEFubm90YXRpb25UYXJnZXRUeXBlQ29uc3RhbnRz
LkZJRUxEOgorCQkJCXNiLmFwcGVuZCgiRklFTEQiKTsKKwkJCQlicmVhazsKKwkJCWNhc2UgQW5u
b3RhdGlvblRhcmdldFR5cGVDb25zdGFudHMuTUVUSE9EX1JFVFVSTjoKKwkJCQlzYi5hcHBlbmQo
Ik1FVEhPRF9SRVRVUk4iKTsKKwkJCQlicmVhazsKKwkJCWNhc2UgQW5ub3RhdGlvblRhcmdldFR5
cGVDb25zdGFudHMuTUVUSE9EX1JFQ0VJVkVSOgorCQkJCXNiLmFwcGVuZCgiTUVUSE9EX1JFQ0VJ
VkVSIik7CisJCQkJYnJlYWs7CisJCQljYXNlIEFubm90YXRpb25UYXJnZXRUeXBlQ29uc3RhbnRz
Lk1FVEhPRF9GT1JNQUxfUEFSQU1FVEVSIDoKKwkJCQlzYi5hcHBlbmQoIk1FVEhPRF9GT1JNQUxf
UEFSQU1FVEVSKG1ldGhvZF9mb3JtYWxfcGFyYW1ldGVyX2luZGV4PSIpLgorCQkJCQlhcHBlbmQo
dHlwZUFubm90YXRpb24uZ2V0TWV0aG9kRm9ybWFsUGFyYW1ldGVySW5kZXgoKSkuYXBwZW5kKCcp
Jyk7CisJCQkJYnJlYWs7CisJCQljYXNlIEFubm90YXRpb25UYXJnZXRUeXBlQ29uc3RhbnRzLlRI
Uk9XUyA6CisJCQkJc2IuYXBwZW5kKCJUSFJPV1ModGhyb3dzX3R5cGVfaW5kZXg9IikuCisJCQkJ
CWFwcGVuZCh0eXBlQW5ub3RhdGlvbi5nZXRUaHJvd3NUeXBlSW5kZXgoKSkuYXBwZW5kKCcpJyk7
CisJCQkJYnJlYWs7CisJCQlkZWZhdWx0OiB0aHJvdyBuZXcgSWxsZWdhbFN0YXRlRXhjZXB0aW9u
KCJueWkgIit0YXJnZXRUeXBlKTsKKwkJfQorCQkKKwkJLy8gbG9jYXRpb24KKwkJaW50W10gdHlw
ZXBhdGggPSB0eXBlQW5ub3RhdGlvbi5nZXRUeXBlUGF0aCgpOworCQkKKwkJaWYgKHR5cGVwYXRo
ICE9IElCaW5hcnlUeXBlQW5ub3RhdGlvbi5OT19UWVBFX1BBVEgpIHsKKwkJCXNiLmFwcGVuZCgi
LCBsb2NhdGlvbj1bIik7IC8vJE5PTi1OTFMtMSQKKwkJCWZvciAoaW50IGkgPSAwLCBtYXggPSB0
eXBlcGF0aC5sZW5ndGg7IGkgPCBtYXg7IGkgKz0gMikgeworCQkJCWlmIChpID4gMCkgeworCQkJ
CQlzYi5hcHBlbmQoIiwgIik7IC8vJE5PTi1OTFMtMSQKKwkJCQl9CisJCQkJc3dpdGNoICh0eXBl
cGF0aFtpXSkgeworCQkJCQljYXNlIDA6CisJCQkJCQlzYi5hcHBlbmQoIkFSUkFZIik7IC8vJE5P
Ti1OTFMtMSQKKwkJCQkJCWJyZWFrOworCQkJCQljYXNlIDE6CisJCQkJCQlzYi5hcHBlbmQoIklO
TkVSX1RZUEUiKTsgLy8kTk9OLU5MUy0xJAorCQkJCQkJYnJlYWs7CisJCQkJCWNhc2UgMjoKKwkJ
CQkJCXNiLmFwcGVuZCgiV0lMRENBUkQiKTsgLy8kTk9OLU5MUy0xJAorCQkJCQkJYnJlYWs7CisJ
CQkJCWNhc2UgMzoKKwkJCQkJCXNiLmFwcGVuZCgiVFlQRV9BUkdVTUVOVCgiKS5hcHBlbmQodHlw
ZXBhdGhbaSsxXSkuYXBwZW5kKCcpJyk7IC8vJE5PTi1OTFMtMSQKKwkJCQkJCWJyZWFrOworCQkJ
CX0KKwkJCX0KKwkJCXNiLmFwcGVuZCgnXScpOworCQl9CisJCXJldHVybiBzYi50b1N0cmluZygp
OworCX0KKworCXByaXZhdGUgSUJpbmFyeU1ldGhvZCBnZXRNZXRob2QoQ2xhc3NGaWxlUmVhZGVy
IGNmcixTdHJpbmcgbWV0aG9kbmFtZSkgeworCQlJQmluYXJ5TWV0aG9kW10gbWV0aG9kcyA9IGNm
ci5nZXRNZXRob2RzKCk7CisJCWlmIChtZXRob2RzID09IG51bGwpIHsKKwkJCXJldHVybiBudWxs
OworCQl9CisJCWNoYXJbXSBtZXRob2RuYW1lQXNDaGFyQXJyYXkgPSBtZXRob2RuYW1lLnRvQ2hh
ckFycmF5KCk7CisJCWZvciAoaW50IGkgPSAwLCBtYXggPSBtZXRob2RzLmxlbmd0aDsgaSA8IG1h
eDsgaSsrKSB7CisJCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMobWV0aG9kc1tpXS5nZXRTZWxl
Y3RvcigpLG1ldGhvZG5hbWVBc0NoYXJBcnJheSkpIHsKKwkJCQlyZXR1cm4gbWV0aG9kc1tpXTsK
KwkJCX0KKwkJfQorCQlyZXR1cm4gbnVsbDsKKwl9CisKKwlwcml2YXRlIElCaW5hcnlGaWVsZCBn
ZXRGaWVsZChDbGFzc0ZpbGVSZWFkZXIgY2ZyLFN0cmluZyBmaWVsZG5hbWUpIHsKKwkJSUJpbmFy
eUZpZWxkW10gZmllbGRzID0gY2ZyLmdldEZpZWxkcygpOworCQlpZiAoZmllbGRzID09IG51bGwp
IHsKKwkJCXJldHVybiBudWxsOworCQl9CisJCWNoYXJbXSBmaWVsZG5hbWVBc0NoYXJBcnJheSA9
IGZpZWxkbmFtZS50b0NoYXJBcnJheSgpOworCQlmb3IgKGludCBpID0gMCwgbWF4ID0gZmllbGRz
Lmxlbmd0aDsgaSA8IG1heDsgaSsrKSB7CisJCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoZmll
bGRzW2ldLmdldE5hbWUoKSxmaWVsZG5hbWVBc0NoYXJBcnJheSkpIHsKKwkJCQlyZXR1cm4gZmll
bGRzW2ldOworCQkJfQorCQl9CisJCXJldHVybiBudWxsOworCX0KKwkKK30KZGlmZiAtLWdpdCBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Rlc3RBbGwuamF2YSBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9j
b21waWxlci9yZWdyZXNzaW9uL1Rlc3RBbGwuamF2YQppbmRleCBhMmQxNWE2Li5lNWY4MDY4IDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9UZXN0QWxsLmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pk
dC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vVGVzdEFsbC5qYXZhCkBAIC0xNCw4ICsx
NCw4IEBACiAgKiAgICAgU3RlcGhhbiBIZXJybWFubiAtIENvbnRyaWJ1dGlvbnMgZm9yCiAgKgkJ
CQkJCQkJYnVnIDE4NjM0MiAtIFtjb21waWxlcl1bbnVsbF0gVXNpbmcgYW5ub3RhdGlvbnMgZm9y
IG51bGwgY2hlY2tpbmcKICAqCQkJCQkJCQlidWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5
IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsgd2FybmluZ3MKLSAqICAgICAgICBBbmR5IENsZW1l
bnQgLSBDb250cmlidXRpb25zIGZvcgotICogICAgICAgICAgICAgICAgICAgICAgICAgIEJ1ZyAz
ODM2MjQgLSBbMS44XVtjb21waWxlcl0gUmV2aXZlIGNvZGUgZ2VuZXJhdGlvbiBzdXBwb3J0IGZv
ciB0eXBlIGFubm90YXRpb25zIChmcm9tIE9saXZpZXIncyB3b3JrKQorICogICAgICAgIEFuZHkg
Q2xlbWVudCAoR29QaXZvdGFsLCBJbmMpIGFjbGVtZW50QGdvcGl2b3RhbC5jb20gLSBDb250cmli
dXRpb25zIGZvcgorICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBidWcgNDA3MTkxIC0g
WzEuOF0gQmluYXJ5IGFjY2VzcyBzdXBwb3J0IGZvciB0eXBlIGFubm90YXRpb25zCiAgKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29t
cGlsZXIucmVncmVzc2lvbjsKIApAQCAtMjE1LDYgKzIxNSw3IEBAIHB1YmxpYyBzdGF0aWMgVGVz
dCBzdWl0ZSgpIHsKIAkJdGVzdHNfMV84LmFkZEFsbChzaW5jZV8xXzYpOwogCQl0ZXN0c18xXzgu
YWRkQWxsKHNpbmNlXzFfNyk7CiAJCXRlc3RzXzFfOC5hZGRBbGwoc2luY2VfMV84KTsKKwkJdGVz
dHNfMV84LmFkZChDbGFzc0ZpbGVSZWFkZXJUZXN0XzFfOC5jbGFzcyk7CiAJCS8vIFJlc2V0IGZv
cmdvdHRlbiBzdWJzZXRzIHRlc3RzCiAJCVRlc3RDYXNlLlRFU1RTX1BSRUZJWCA9IG51bGw7CiAJ
CVRlc3RDYXNlLlRFU1RTX05BTUVTID0gbnVsbDsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jbGFzc2Zt
dC9DbGFzc0ZpbGVSZWFkZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jbGFzc2ZtdC9DbGFzc0ZpbGVSZWFkZXIu
amF2YQppbmRleCBmYTJmYjBmLi5mNjNkZTVkIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY2xhc3NmbXQv
Q2xhc3NGaWxlUmVhZGVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NsYXNzZm10L0NsYXNzRmlsZVJlYWRl
ci5qYXZhCkBAIC0xLDEzICsxLDE5IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29w
eXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29w
eXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxs
IHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVy
aWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBz
ZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1
dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdh
bC9lcGwtdjEwLmh0bWwKICAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVh
cmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21t
dW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5k
IGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxl
IHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqCiAgKiBDb250cmlidXRvcnM6
CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9u
CiAgKiAgICAgU3RlcGhhbiBIZXJybWFubiAtIENvbnRyaWJ1dGlvbiBmb3IgYnVnIDM2NTk5MiAt
IFtidWlsZGVyXSBbbnVsbF0gQ2hhbmdlIG9mIG51bGxuZXNzIGZvciBhIHBhcmFtZXRlciBkb2Vz
bid0IHRyaWdnZXIgYSBidWlsZCBmb3IgdGhlIGZpbGVzIHRoYXQgY2FsbCB0aGUgbWV0aG9kCisg
KiAgICAgQW5keSBDbGVtZW50IChHb1Bpdm90YWwsIEluYykgYWNsZW1lbnRAZ29waXZvdGFsLmNv
bSAtIENvbnRyaWJ1dGlvbnMgZm9yCisgKiAgICAgICAgIGJ1ZyA0MDcxOTEgLSBbMS44XSBCaW5h
cnkgYWNjZXNzIHN1cHBvcnQgZm9yIHR5cGUgYW5ub3RhdGlvbnMKICAqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuY2xhc3Nm
bXQ7CiAKQEAgLTMyLDYgKzM4LDcgQEAgcHVibGljIGNsYXNzIENsYXNzRmlsZVJlYWRlciBleHRl
bmRzIENsYXNzRmlsZVN0cnVjdCBpbXBsZW1lbnRzIElCaW5hcnlUeXBlIHsKIAlwcml2YXRlIGlu
dCBjbGFzc05hbWVJbmRleDsKIAlwcml2YXRlIGludCBjb25zdGFudFBvb2xDb3VudDsKIAlwcml2
YXRlIEFubm90YXRpb25JbmZvW10gYW5ub3RhdGlvbnM7CisJcHJpdmF0ZSBUeXBlQW5ub3RhdGlv
bkluZm9bXSB0eXBlQW5ub3RhdGlvbnM7CiAJcHJpdmF0ZSBGaWVsZEluZm9bXSBmaWVsZHM7CiAJ
cHJpdmF0ZSBpbnQgZmllbGRzQ291bnQ7CiAKQEAgLTM1Niw2ICszNjMsMTAgQEAgcHVibGljIENs
YXNzRmlsZVJlYWRlcihieXRlW10gY2xhc3NGaWxlQnl0ZXMsIGNoYXJbXSBmaWxlTmFtZSwgYm9v
bGVhbiBmdWxseUluaXQKIAkJCQkJCWRlY29kZUFubm90YXRpb25zKHJlYWRPZmZzZXQsIHRydWUp
OwogCQkJCQl9IGVsc2UgaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKGF0dHJpYnV0ZU5hbWUsIEF0
dHJpYnV0ZU5hbWVzQ29uc3RhbnRzLlJ1bnRpbWVJbnZpc2libGVBbm5vdGF0aW9uc05hbWUpKSB7
CiAJCQkJCQlkZWNvZGVBbm5vdGF0aW9ucyhyZWFkT2Zmc2V0LCBmYWxzZSk7CisJCQkJCX0gZWxz
ZSBpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoYXR0cmlidXRlTmFtZSwgQXR0cmlidXRlTmFtZXND
b25zdGFudHMuUnVudGltZVZpc2libGVUeXBlQW5ub3RhdGlvbnNOYW1lKSkgeworCQkJCQkJZGVj
b2RlVHlwZUFubm90YXRpb25zKHJlYWRPZmZzZXQsIHRydWUpOworCQkJCQl9IGVsc2UgaWYgKENo
YXJPcGVyYXRpb24uZXF1YWxzKGF0dHJpYnV0ZU5hbWUsIEF0dHJpYnV0ZU5hbWVzQ29uc3RhbnRz
LlJ1bnRpbWVJbnZpc2libGVUeXBlQW5ub3RhdGlvbnNOYW1lKSkgeworCQkJCQkJZGVjb2RlVHlw
ZUFubm90YXRpb25zKHJlYWRPZmZzZXQsIGZhbHNlKTsKIAkJCQkJfQogCQkJCQlicmVhazsKIAkJ
CQljYXNlICdNJyA6CkBAIC00MzQsNiArNDQ1LDMwIEBAIHByaXZhdGUgdm9pZCBkZWNvZGVBbm5v
dGF0aW9ucyhpbnQgb2Zmc2V0LCBib29sZWFuIHJ1bnRpbWVWaXNpYmxlKSB7CiAJfQogfQogCitw
cml2YXRlIHZvaWQgZGVjb2RlVHlwZUFubm90YXRpb25zKGludCBvZmZzZXQsIGJvb2xlYW4gcnVu
dGltZVZpc2libGUpIHsKKwlpbnQgbnVtYmVyT2ZBbm5vdGF0aW9ucyA9IHUyQXQob2Zmc2V0ICsg
Nik7CisJaWYgKG51bWJlck9mQW5ub3RhdGlvbnMgPiAwKSB7CisJCWludCByZWFkT2Zmc2V0ID0g
b2Zmc2V0ICsgODsKKwkJVHlwZUFubm90YXRpb25JbmZvW10gbmV3SW5mb3MgPSBudWxsOworCQlu
ZXdJbmZvcyA9IG5ldyBUeXBlQW5ub3RhdGlvbkluZm9bbnVtYmVyT2ZBbm5vdGF0aW9uc107CisJ
CWZvciAoaW50IGkgPSAwOyBpIDwgbnVtYmVyT2ZBbm5vdGF0aW9uczsgaSsrKSB7CisJCQkvLyBX
aXRoIHRoZSBsYXN0IHBhcmFtZXRlciBiZWluZyAnZmFsc2UnLCB0aGUgZGF0YSBzdHJ1Y3R1cmUg
d2lsbCBub3QgYmUgZmx1c2hlZCBvdXQKKwkJCVR5cGVBbm5vdGF0aW9uSW5mbyBuZXdJbmZvID0g
bmV3IFR5cGVBbm5vdGF0aW9uSW5mbyh0aGlzLnJlZmVyZW5jZSwgdGhpcy5jb25zdGFudFBvb2xP
ZmZzZXRzLCByZWFkT2Zmc2V0LCBydW50aW1lVmlzaWJsZSwgZmFsc2UpOworCQkJcmVhZE9mZnNl
dCArPSBuZXdJbmZvLnJlYWRPZmZzZXQ7CisJCQluZXdJbmZvc1tpXSA9IG5ld0luZm87CisJCX0K
KwkJaWYgKHRoaXMudHlwZUFubm90YXRpb25zID09IG51bGwpIHsKKwkJCXRoaXMudHlwZUFubm90
YXRpb25zID0gbmV3SW5mb3M7CisJCX0gZWxzZSB7CisJCQlpbnQgbGVuZ3RoID0gdGhpcy50eXBl
QW5ub3RhdGlvbnMubGVuZ3RoOworCQkJVHlwZUFubm90YXRpb25JbmZvW10gdGVtcCA9IG5ldyBU
eXBlQW5ub3RhdGlvbkluZm9bbGVuZ3RoICsgbnVtYmVyT2ZBbm5vdGF0aW9uc107CisJCQlTeXN0
ZW0uYXJyYXljb3B5KHRoaXMudHlwZUFubm90YXRpb25zLCAwLCB0ZW1wLCAwLCBsZW5ndGgpOwor
CQkJU3lzdGVtLmFycmF5Y29weShuZXdJbmZvcywgMCwgdGVtcCwgbGVuZ3RoLCBudW1iZXJPZkFu
bm90YXRpb25zKTsKKwkJCXRoaXMudHlwZUFubm90YXRpb25zID0gdGVtcDsKKwkJfQorCX0KK30K
KwogLyoqCiAgKiBAcmV0dXJuIHRoZSBhbm5vdGF0aW9ucyBvciBudWxsIGlmIHRoZXJlIGlzIG5v
bmUuCiAgKi8KQEAgLTQ0Miw2ICs0NzcsMTMgQEAgcHVibGljIElCaW5hcnlBbm5vdGF0aW9uW10g
Z2V0QW5ub3RhdGlvbnMoKSB7CiB9CiAKIC8qKgorICogQHJldHVybiB0aGUgdHlwZSBhbm5vdGF0
aW9ucyBvciBudWxsIGlmIHRoZXJlIGlzIG5vbmUuCisgKi8KK3B1YmxpYyBJQmluYXJ5VHlwZUFu
bm90YXRpb25bXSBnZXRUeXBlQW5ub3RhdGlvbnMoKSB7CisJcmV0dXJuIHRoaXMudHlwZUFubm90
YXRpb25zOworfQorCisvKioKICAqIEFuc3dlciB0aGUgY2hhciBhcnJheSB0aGF0IGNvcnJlc3Bv
bmRzIHRvIHRoZSBjbGFzcyBuYW1lIG9mIHRoZSBjb25zdGFudCBjbGFzcy4KICAqIGNvbnN0YW50
UG9vbEluZGV4IGlzIHRoZSBpbmRleCBpbiB0aGUgY29uc3RhbnQgcG9vbCB0aGF0IGlzIGEgY29u
c3RhbnQgY2xhc3MgZW50cnkuCiAgKgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NsYXNzZm10L0ZpZWxk
SW5mby5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2NsYXNzZm10L0ZpZWxkSW5mby5qYXZhCmluZGV4IDhlYWVhMDku
LmYwM2U1ZDYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jbGFzc2ZtdC9GaWVsZEluZm8uamF2YQorKysg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvY2xhc3NmbXQvRmllbGRJbmZvLmphdmEKQEAgLTEsMTIgKzEsMTggQEAKIC8qKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMDggSUJNIENvcnBv
cmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBv
cmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0g
YW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5k
ZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNo
IGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBo
dHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAogICoKKyAqIFRoaXMgaXMg
YW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9w
ZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRl
IGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4g
VGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUg
SkNQLgorICoKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0
aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KKyAqICAgICAgICBBbmR5IENsZW1lbnQgKEdvUGl2
b3RhbCwgSW5jKSBhY2xlbWVudEBnb3Bpdm90YWwuY29tIC0gQ29udHJpYnV0aW9ucyBmb3IKKyAq
ICAgICAgICAgIEJ1ZyA0MDcxOTEgLSBbMS44XSBCaW5hcnkgYWNjZXNzIHN1cHBvcnQgZm9yIHR5
cGUgYW5ub3RhdGlvbnMgCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNsYXNzZm10OwogCkBAIC0xNCw2ICsyMCw3IEBA
IGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5DaGFyT3BlcmF0aW9uOwogaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jb2RlZ2VuLkF0dHJpYnV0ZU5h
bWVzQ29uc3RhbnRzOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5l
bnYuSUJpbmFyeUFubm90YXRpb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmVudi5JQmluYXJ5RmllbGQ7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmVudi5JQmluYXJ5VHlwZUFubm90YXRpb247CiBpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLmltcGwuKjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIubG9va3VwLlR5cGVJZHM7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLnV0aWwuVXRpbDsKQEAgLTMxLDEwICszOCw2NSBAQCBwdWJsaWMgY2xh
c3MgRmllbGRJbmZvIGV4dGVuZHMgQ2xhc3NGaWxlU3RydWN0IGltcGxlbWVudHMgSUJpbmFyeUZp
ZWxkLCBDb21wYXJhYgogCiBwdWJsaWMgc3RhdGljIEZpZWxkSW5mbyBjcmVhdGVGaWVsZChieXRl
IGNsYXNzRmlsZUJ5dGVzW10sIGludCBvZmZzZXRzW10sIGludCBvZmZzZXQpIHsKIAlGaWVsZElu
Zm8gZmllbGRJbmZvID0gbmV3IEZpZWxkSW5mbyhjbGFzc0ZpbGVCeXRlcywgb2Zmc2V0cywgb2Zm
c2V0KTsKLQlBbm5vdGF0aW9uSW5mb1tdIGFubm90YXRpb25zID0gZmllbGRJbmZvLnJlYWRBdHRy
aWJ1dGVzKCk7Ci0JaWYgKGFubm90YXRpb25zID09IG51bGwpCi0JCXJldHVybiBmaWVsZEluZm87
Ci0JcmV0dXJuIG5ldyBGaWVsZEluZm9XaXRoQW5ub3RhdGlvbihmaWVsZEluZm8sIGFubm90YXRp
b25zKTsKKwkKKwlpbnQgYXR0cmlidXRlc0NvdW50ID0gZmllbGRJbmZvLnUyQXQoNik7CisJaW50
IHJlYWRPZmZzZXQgPSA4OworCUFubm90YXRpb25JbmZvW10gYW5ub3RhdGlvbnMgPSBudWxsOwor
CVR5cGVBbm5vdGF0aW9uSW5mb1tdIHR5cGVBbm5vdGF0aW9ucyA9IG51bGw7CisJZm9yIChpbnQg
aSA9IDA7IGkgPCBhdHRyaWJ1dGVzQ291bnQ7IGkrKykgeworCQkvLyBjaGVjayB0aGUgbmFtZSBv
ZiBlYWNoIGF0dHJpYnV0ZQorCQlpbnQgdXRmOE9mZnNldCA9IGZpZWxkSW5mby5jb25zdGFudFBv
b2xPZmZzZXRzW2ZpZWxkSW5mby51MkF0KHJlYWRPZmZzZXQpXSAtIGZpZWxkSW5mby5zdHJ1Y3RP
ZmZzZXQ7CisJCWNoYXJbXSBhdHRyaWJ1dGVOYW1lID0gZmllbGRJbmZvLnV0ZjhBdCh1dGY4T2Zm
c2V0ICsgMywgZmllbGRJbmZvLnUyQXQodXRmOE9mZnNldCArIDEpKTsKKwkJaWYgKGF0dHJpYnV0
ZU5hbWUubGVuZ3RoID4gMCkgeworCQkJc3dpdGNoKGF0dHJpYnV0ZU5hbWVbMF0pIHsKKwkJCQlj
YXNlICdTJyA6CisJCQkJCWlmIChDaGFyT3BlcmF0aW9uLmVxdWFscyhBdHRyaWJ1dGVOYW1lc0Nv
bnN0YW50cy5TaWduYXR1cmVOYW1lLCBhdHRyaWJ1dGVOYW1lKSkKKwkJCQkJCWZpZWxkSW5mby5z
aWduYXR1cmVVdGY4T2Zmc2V0ID0gZmllbGRJbmZvLmNvbnN0YW50UG9vbE9mZnNldHNbZmllbGRJ
bmZvLnUyQXQocmVhZE9mZnNldCArIDYpXSAtIGZpZWxkSW5mby5zdHJ1Y3RPZmZzZXQ7CisJCQkJ
CWJyZWFrOworCQkJCWNhc2UgJ1InIDoKKwkJCQkJQW5ub3RhdGlvbkluZm9bXSBkZWNvZGVkQW5u
b3RhdGlvbnMgPSBudWxsOworCQkJCQlUeXBlQW5ub3RhdGlvbkluZm9bXSBkZWNvZGVkVHlwZUFu
bm90YXRpb25zID0gbnVsbDsKKwkJCQkJaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKGF0dHJpYnV0
ZU5hbWUsIEF0dHJpYnV0ZU5hbWVzQ29uc3RhbnRzLlJ1bnRpbWVWaXNpYmxlQW5ub3RhdGlvbnNO
YW1lKSkgeworCQkJCQkJZGVjb2RlZEFubm90YXRpb25zID0gZmllbGRJbmZvLmRlY29kZUFubm90
YXRpb25zKHJlYWRPZmZzZXQsIHRydWUpOworCQkJCQl9IGVsc2UgaWYgKENoYXJPcGVyYXRpb24u
ZXF1YWxzKGF0dHJpYnV0ZU5hbWUsIEF0dHJpYnV0ZU5hbWVzQ29uc3RhbnRzLlJ1bnRpbWVJbnZp
c2libGVBbm5vdGF0aW9uc05hbWUpKSB7CisJCQkJCQlkZWNvZGVkQW5ub3RhdGlvbnMgPSBmaWVs
ZEluZm8uZGVjb2RlQW5ub3RhdGlvbnMocmVhZE9mZnNldCwgZmFsc2UpOworCQkJCQl9IGVsc2Ug
aWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKGF0dHJpYnV0ZU5hbWUsIEF0dHJpYnV0ZU5hbWVzQ29u
c3RhbnRzLlJ1bnRpbWVWaXNpYmxlVHlwZUFubm90YXRpb25zTmFtZSkpIHsKKwkJCQkJCWRlY29k
ZWRUeXBlQW5ub3RhdGlvbnMgPSBmaWVsZEluZm8uZGVjb2RlVHlwZUFubm90YXRpb25zKHJlYWRP
ZmZzZXQsIHRydWUpOworCQkJCQl9IGVsc2UgaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKGF0dHJp
YnV0ZU5hbWUsIEF0dHJpYnV0ZU5hbWVzQ29uc3RhbnRzLlJ1bnRpbWVJbnZpc2libGVUeXBlQW5u
b3RhdGlvbnNOYW1lKSkgeworCQkJCQkJZGVjb2RlZFR5cGVBbm5vdGF0aW9ucyA9IGZpZWxkSW5m
by5kZWNvZGVUeXBlQW5ub3RhdGlvbnMocmVhZE9mZnNldCwgZmFsc2UpOworCQkJCQl9CisJCQkJ
CWlmIChkZWNvZGVkQW5ub3RhdGlvbnMgIT0gbnVsbCkgeworCQkJCQkJaWYgKGFubm90YXRpb25z
ID09IG51bGwpIHsKKwkJCQkJCQlhbm5vdGF0aW9ucyA9IGRlY29kZWRBbm5vdGF0aW9uczsKKwkJ
CQkJCX0gZWxzZSB7CisJCQkJCQkJaW50IGxlbmd0aCA9IGFubm90YXRpb25zLmxlbmd0aDsKKwkJ
CQkJCQlBbm5vdGF0aW9uSW5mb1tdIGNvbWJpbmVkID0gbmV3IEFubm90YXRpb25JbmZvW2xlbmd0
aCArIGRlY29kZWRBbm5vdGF0aW9ucy5sZW5ndGhdOworCQkJCQkJCVN5c3RlbS5hcnJheWNvcHko
YW5ub3RhdGlvbnMsIDAsIGNvbWJpbmVkLCAwLCBsZW5ndGgpOworCQkJCQkJCVN5c3RlbS5hcnJh
eWNvcHkoZGVjb2RlZEFubm90YXRpb25zLCAwLCBjb21iaW5lZCwgbGVuZ3RoLCBkZWNvZGVkQW5u
b3RhdGlvbnMubGVuZ3RoKTsKKwkJCQkJCQlhbm5vdGF0aW9ucyA9IGNvbWJpbmVkOworCQkJCQkJ
fQorCQkJCQl9IGVsc2UgaWYgKGRlY29kZWRUeXBlQW5ub3RhdGlvbnMgIT0gbnVsbCkgeworCQkJ
CQkJaWYgKHR5cGVBbm5vdGF0aW9ucyA9PSBudWxsKSB7CisJCQkJCQkJdHlwZUFubm90YXRpb25z
ID0gZGVjb2RlZFR5cGVBbm5vdGF0aW9uczsKKwkJCQkJCX0gZWxzZSB7CisJCQkJCQkJaW50IGxl
bmd0aCA9IHR5cGVBbm5vdGF0aW9ucy5sZW5ndGg7CisJCQkJCQkJVHlwZUFubm90YXRpb25JbmZv
W10gY29tYmluZWQgPSBuZXcgVHlwZUFubm90YXRpb25JbmZvW2xlbmd0aCArIGRlY29kZWRUeXBl
QW5ub3RhdGlvbnMubGVuZ3RoXTsKKwkJCQkJCQlTeXN0ZW0uYXJyYXljb3B5KHR5cGVBbm5vdGF0
aW9ucywgMCwgY29tYmluZWQsIDAsIGxlbmd0aCk7CisJCQkJCQkJU3lzdGVtLmFycmF5Y29weShk
ZWNvZGVkVHlwZUFubm90YXRpb25zLCAwLCBjb21iaW5lZCwgbGVuZ3RoLCBkZWNvZGVkVHlwZUFu
bm90YXRpb25zLmxlbmd0aCk7CisJCQkJCQkJdHlwZUFubm90YXRpb25zID0gY29tYmluZWQ7CisJ
CQkJCQl9CisJCQkJCX0KKwkJCX0KKwkJfQorCQlyZWFkT2Zmc2V0ICs9ICg2ICsgZmllbGRJbmZv
LnU0QXQocmVhZE9mZnNldCArIDIpKTsKKwl9CisJZmllbGRJbmZvLmF0dHJpYnV0ZUJ5dGVzID0g
cmVhZE9mZnNldDsKKwkKKwlpZiAodHlwZUFubm90YXRpb25zICE9IG51bGwpCisJCXJldHVybiBu
ZXcgRmllbGRJbmZvV2l0aFR5cGVBbm5vdGF0aW9uKGZpZWxkSW5mbywgYW5ub3RhdGlvbnMsIHR5
cGVBbm5vdGF0aW9ucyk7CisJaWYgKGFubm90YXRpb25zICE9IG51bGwpCisJCXJldHVybiBuZXcg
RmllbGRJbmZvV2l0aEFubm90YXRpb24oZmllbGRJbmZvLCBhbm5vdGF0aW9ucyk7CisJcmV0dXJu
IGZpZWxkSW5mbzsKIH0KIAogLyoqCkBAIC03NSw2ICsxMzcsMjIgQEAgcHJpdmF0ZSBBbm5vdGF0
aW9uSW5mb1tdIGRlY29kZUFubm90YXRpb25zKGludCBvZmZzZXQsIGJvb2xlYW4gcnVudGltZVZp
c2libGUpIHsKIAl9CiAJcmV0dXJuIG51bGw7IC8vIG5vdGhpbmcgdG8gcmVjb3JkCiB9CisKK1R5
cGVBbm5vdGF0aW9uSW5mb1tdIGRlY29kZVR5cGVBbm5vdGF0aW9ucyhpbnQgb2Zmc2V0LCBib29s
ZWFuIHJ1bnRpbWVWaXNpYmxlKSB7CisJaW50IG51bWJlck9mQW5ub3RhdGlvbnMgPSB1MkF0KG9m
ZnNldCArIDYpOworCWlmIChudW1iZXJPZkFubm90YXRpb25zID4gMCkgeworCQlpbnQgcmVhZE9m
ZnNldCA9IG9mZnNldCArIDg7CisJCVR5cGVBbm5vdGF0aW9uSW5mb1tdIHR5cGVBbm5vcyA9IG5l
dyBUeXBlQW5ub3RhdGlvbkluZm9bbnVtYmVyT2ZBbm5vdGF0aW9uc107CisJCWZvciAoaW50IGkg
PSAwOyBpIDwgbnVtYmVyT2ZBbm5vdGF0aW9uczsgaSsrKSB7CisJCQlUeXBlQW5ub3RhdGlvbklu
Zm8gbmV3SW5mbyA9IG5ldyBUeXBlQW5ub3RhdGlvbkluZm8odGhpcy5yZWZlcmVuY2UsIHRoaXMu
Y29uc3RhbnRQb29sT2Zmc2V0cywgcmVhZE9mZnNldCArIHRoaXMuc3RydWN0T2Zmc2V0LCBydW50
aW1lVmlzaWJsZSwgZmFsc2UpOworCQkJcmVhZE9mZnNldCArPSBuZXdJbmZvLnJlYWRPZmZzZXQ7
CisJCQl0eXBlQW5ub3NbaV0gPSBuZXdJbmZvOworCQl9CisJCXJldHVybiB0eXBlQW5ub3M7CisJ
fQorCXJldHVybiBudWxsOworfQorCiBwdWJsaWMgaW50IGNvbXBhcmVUbyhPYmplY3Qgbykgewog
CXJldHVybiBuZXcgU3RyaW5nKGdldE5hbWUoKSkuY29tcGFyZVRvKG5ldyBTdHJpbmcoKChGaWVs
ZEluZm8pIG8pLmdldE5hbWUoKSkpOwogfQpAQCAtMTYzLDYgKzI0MSwxMCBAQCBwdWJsaWMgY2hh
cltdIGdldFR5cGVOYW1lKCkgewogcHVibGljIElCaW5hcnlBbm5vdGF0aW9uW10gZ2V0QW5ub3Rh
dGlvbnMoKSB7CiAJcmV0dXJuIG51bGw7CiB9CisKK3B1YmxpYyBJQmluYXJ5VHlwZUFubm90YXRp
b25bXSBnZXRUeXBlQW5ub3RhdGlvbnMoKSB7CisJcmV0dXJuIG51bGw7Cit9CiAvKioKICAqIFJl
dHVybiBhIHdyYXBwZXIgdGhhdCBjb250YWlucyB0aGUgY29uc3RhbnQgb2YgdGhlIGZpZWxkLgog
ICogQHJldHVybiBqYXZhLmxhbmcuT2JqZWN0CkBAIC0yMzAsNDUgKzMxMiw2IEBAIHByb3RlY3Rl
ZCB2b2lkIGluaXRpYWxpemUoKSB7CiBwdWJsaWMgYm9vbGVhbiBpc1N5bnRoZXRpYygpIHsKIAly
ZXR1cm4gKGdldE1vZGlmaWVycygpICYgQ2xhc3NGaWxlQ29uc3RhbnRzLkFjY1N5bnRoZXRpYykg
IT0gMDsKIH0KLXByaXZhdGUgQW5ub3RhdGlvbkluZm9bXSByZWFkQXR0cmlidXRlcygpIHsKLQlp
bnQgYXR0cmlidXRlc0NvdW50ID0gdTJBdCg2KTsKLQlpbnQgcmVhZE9mZnNldCA9IDg7Ci0JQW5u
b3RhdGlvbkluZm9bXSBhbm5vdGF0aW9ucyA9IG51bGw7Ci0JZm9yIChpbnQgaSA9IDA7IGkgPCBh
dHRyaWJ1dGVzQ291bnQ7IGkrKykgewotCQkvLyBjaGVjayB0aGUgbmFtZSBvZiBlYWNoIGF0dHJp
YnV0ZQotCQlpbnQgdXRmOE9mZnNldCA9IHRoaXMuY29uc3RhbnRQb29sT2Zmc2V0c1t1MkF0KHJl
YWRPZmZzZXQpXSAtIHRoaXMuc3RydWN0T2Zmc2V0OwotCQljaGFyW10gYXR0cmlidXRlTmFtZSA9
IHV0ZjhBdCh1dGY4T2Zmc2V0ICsgMywgdTJBdCh1dGY4T2Zmc2V0ICsgMSkpOwotCQlpZiAoYXR0
cmlidXRlTmFtZS5sZW5ndGggPiAwKSB7Ci0JCQlzd2l0Y2goYXR0cmlidXRlTmFtZVswXSkgewot
CQkJCWNhc2UgJ1MnIDoKLQkJCQkJaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKEF0dHJpYnV0ZU5h
bWVzQ29uc3RhbnRzLlNpZ25hdHVyZU5hbWUsIGF0dHJpYnV0ZU5hbWUpKQotCQkJCQkJdGhpcy5z
aWduYXR1cmVVdGY4T2Zmc2V0ID0gdGhpcy5jb25zdGFudFBvb2xPZmZzZXRzW3UyQXQocmVhZE9m
ZnNldCArIDYpXSAtIHRoaXMuc3RydWN0T2Zmc2V0OwotCQkJCQlicmVhazsKLQkJCQljYXNlICdS
JyA6Ci0JCQkJCUFubm90YXRpb25JbmZvW10gZGVjb2RlZEFubm90YXRpb25zID0gbnVsbDsKLQkJ
CQkJaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKGF0dHJpYnV0ZU5hbWUsIEF0dHJpYnV0ZU5hbWVz
Q29uc3RhbnRzLlJ1bnRpbWVWaXNpYmxlQW5ub3RhdGlvbnNOYW1lKSkgewotCQkJCQkJZGVjb2Rl
ZEFubm90YXRpb25zID0gZGVjb2RlQW5ub3RhdGlvbnMocmVhZE9mZnNldCwgdHJ1ZSk7Ci0JCQkJ
CX0gZWxzZSBpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoYXR0cmlidXRlTmFtZSwgQXR0cmlidXRl
TmFtZXNDb25zdGFudHMuUnVudGltZUludmlzaWJsZUFubm90YXRpb25zTmFtZSkpIHsKLQkJCQkJ
CWRlY29kZWRBbm5vdGF0aW9ucyA9IGRlY29kZUFubm90YXRpb25zKHJlYWRPZmZzZXQsIGZhbHNl
KTsKLQkJCQkJfQotCQkJCQlpZiAoZGVjb2RlZEFubm90YXRpb25zICE9IG51bGwpIHsKLQkJCQkJ
CWlmIChhbm5vdGF0aW9ucyA9PSBudWxsKSB7Ci0JCQkJCQkJYW5ub3RhdGlvbnMgPSBkZWNvZGVk
QW5ub3RhdGlvbnM7Ci0JCQkJCQl9IGVsc2UgewotCQkJCQkJCWludCBsZW5ndGggPSBhbm5vdGF0
aW9ucy5sZW5ndGg7Ci0JCQkJCQkJQW5ub3RhdGlvbkluZm9bXSBjb21iaW5lZCA9IG5ldyBBbm5v
dGF0aW9uSW5mb1tsZW5ndGggKyBkZWNvZGVkQW5ub3RhdGlvbnMubGVuZ3RoXTsKLQkJCQkJCQlT
eXN0ZW0uYXJyYXljb3B5KGFubm90YXRpb25zLCAwLCBjb21iaW5lZCwgMCwgbGVuZ3RoKTsKLQkJ
CQkJCQlTeXN0ZW0uYXJyYXljb3B5KGRlY29kZWRBbm5vdGF0aW9ucywgMCwgY29tYmluZWQsIGxl
bmd0aCwgZGVjb2RlZEFubm90YXRpb25zLmxlbmd0aCk7Ci0JCQkJCQkJYW5ub3RhdGlvbnMgPSBj
b21iaW5lZDsKLQkJCQkJCX0KLQkJCQkJfQotCQkJfQotCQl9Ci0JCXJlYWRPZmZzZXQgKz0gKDYg
KyB1NEF0KHJlYWRPZmZzZXQgKyAyKSk7Ci0JfQotCXRoaXMuYXR0cmlidXRlQnl0ZXMgPSByZWFk
T2Zmc2V0OwotCXJldHVybiBhbm5vdGF0aW9uczsKLX0KIHByaXZhdGUgdm9pZCByZWFkQ29uc3Rh
bnRBdHRyaWJ1dGUoKSB7CiAJaW50IGF0dHJpYnV0ZXNDb3VudCA9IHUyQXQoNik7CiAJaW50IHJl
YWRPZmZzZXQgPSA4OwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NsYXNzZm10L0ZpZWxkSW5mb1dpdGhB
bm5vdGF0aW9uLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY2xhc3NmbXQvRmllbGRJbmZvV2l0aEFubm90YXRpb24u
amF2YQppbmRleCA0ZTNjNDM1Li42YmZiYWFhIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY2xhc3NmbXQv
RmllbGRJbmZvV2l0aEFubm90YXRpb24uamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY2xhc3NmbXQvRmllbGRJ
bmZvV2l0aEFubm90YXRpb24uamF2YQpAQCAtMSwxNiArMSwyMiBAQAogLyoqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwNSwgMjAwOSBCRUEgU3lzdGVtcywgSW5jLgor
ICogQ29weXJpZ2h0IChjKSAyMDA1LCAyMDEzIEJFQSBTeXN0ZW1zLCBJbmMuCiAgKiBBbGwgcmln
aHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxz
CiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1
YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9u
LCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2Vw
bC12MTAuaHRtbAogICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHkt
ZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0
eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZh
bHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0
aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgorICoKICAqIENvbnRyaWJ1dG9yczoKICAq
ICAgIHR5ZXVuZ0BiZWEuY29tIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCisgKiAg
ICAgICAgQW5keSBDbGVtZW50IChHb1Bpdm90YWwsIEluYykgYWNsZW1lbnRAZ29waXZvdGFsLmNv
bSAtIENvbnRyaWJ1dGlvbnMgZm9yCisgKiAgICAgICAgICBCdWcgNDA3MTkxIC0gWzEuOF0gQmlu
YXJ5IGFjY2VzcyBzdXBwb3J0IGZvciB0eXBlIGFubm90YXRpb25zCiAgKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNsYXNz
Zm10OwogCi1wdWJsaWMgZmluYWwgY2xhc3MgRmllbGRJbmZvV2l0aEFubm90YXRpb24gZXh0ZW5k
cyBGaWVsZEluZm8geworcHVibGljIGNsYXNzIEZpZWxkSW5mb1dpdGhBbm5vdGF0aW9uIGV4dGVu
ZHMgRmllbGRJbmZvIHsKIAlwcml2YXRlIEFubm90YXRpb25JbmZvW10gYW5ub3RhdGlvbnM7CiAK
IEZpZWxkSW5mb1dpdGhBbm5vdGF0aW9uKEZpZWxkSW5mbyBpbmZvLCBBbm5vdGF0aW9uSW5mb1td
IGFubm9zKSB7CkBAIC0zMSw4ICszNyw5IEBAIHB1YmxpYyBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIuZW52LklCaW5hcnlBbm5vdGF0aW9uW10gZ2V0QW5ub3RhdGlvbnMoCiAJcmV0
dXJuIHRoaXMuYW5ub3RhdGlvbnM7CiB9CiBwcm90ZWN0ZWQgdm9pZCBpbml0aWFsaXplKCkgewot
CWZvciAoaW50IGkgPSAwLCBtYXggPSB0aGlzLmFubm90YXRpb25zLmxlbmd0aDsgaSA8IG1heDsg
aSsrKQotCQl0aGlzLmFubm90YXRpb25zW2ldLmluaXRpYWxpemUoKTsKKwlpZiAodGhpcy5hbm5v
dGF0aW9ucyAhPSBudWxsKQorCQlmb3IgKGludCBpID0gMCwgbWF4ID0gdGhpcy5hbm5vdGF0aW9u
cy5sZW5ndGg7IGkgPCBtYXg7IGkrKykKKwkJCXRoaXMuYW5ub3RhdGlvbnNbaV0uaW5pdGlhbGl6
ZSgpOwogCXN1cGVyLmluaXRpYWxpemUoKTsKIH0KIHByb3RlY3RlZCB2b2lkIHJlc2V0KCkgewpk
aWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2NsYXNzZm10L0ZpZWxkSW5mb1dpdGhUeXBlQW5ub3RhdGlvbi5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2NsYXNzZm10L0ZpZWxkSW5mb1dpdGhUeXBlQW5ub3RhdGlvbi5qYXZhCm5l
dyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLmY4MDA4NWQKLS0tIC9kZXYvbnVsbAor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvY2xhc3NmbXQvRmllbGRJbmZvV2l0aFR5cGVBbm5vdGF0aW9uLmphdmEKQEAg
LTAsMCArMSw1NCBAQAorLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKyAqIENvcHlyaWdodCAoYykg
MjAxMyBHb1Bpdm90YWwsIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4KKyAqIEFsbCByaWdodHMg
cmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKKyAq
IGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGlj
IExpY2Vuc2UgdjEuMAorICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFu
ZCBpcyBhdmFpbGFibGUgYXQKKyAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYx
MC5odG1sCisgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFm
dCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFBy
b2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0
aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFu
eSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKgorICogQ29udHJpYnV0b3JzOgorICogICAg
ICAgIEFuZHkgQ2xlbWVudCAoR29QaXZvdGFsLCBJbmMpIGFjbGVtZW50QGdvcGl2b3RhbC5jb20g
LSBDb250cmlidXRpb25zIGZvcgorICogICAgICAgICAgQnVnIDQwNzE5MSAtIFsxLjhdIEJpbmFy
eSBhY2Nlc3Mgc3VwcG9ydCBmb3IgdHlwZSBhbm5vdGF0aW9ucworICoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKiovCitwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jbGFzc2Zt
dDsKKworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuSUJpbmFy
eVR5cGVBbm5vdGF0aW9uOworCitwdWJsaWMgZmluYWwgY2xhc3MgRmllbGRJbmZvV2l0aFR5cGVB
bm5vdGF0aW9uIGV4dGVuZHMgRmllbGRJbmZvV2l0aEFubm90YXRpb24geworCXByaXZhdGUgVHlw
ZUFubm90YXRpb25JbmZvW10gdHlwZUFubm90YXRpb25zOworCitGaWVsZEluZm9XaXRoVHlwZUFu
bm90YXRpb24oRmllbGRJbmZvIGluZm8sIEFubm90YXRpb25JbmZvW10gYW5ub3MsIFR5cGVBbm5v
dGF0aW9uSW5mb1tdIHR5cGVBbm5vcykgeworCXN1cGVyKGluZm8sIGFubm9zKTsKKwl0aGlzLnR5
cGVBbm5vdGF0aW9ucyA9IHR5cGVBbm5vczsKK30KK3B1YmxpYyBJQmluYXJ5VHlwZUFubm90YXRp
b25bXSBnZXRUeXBlQW5ub3RhdGlvbnMoKSB7CisJcmV0dXJuIHRoaXMudHlwZUFubm90YXRpb25z
OworfQorcHJvdGVjdGVkIHZvaWQgaW5pdGlhbGl6ZSgpIHsKKwlmb3IgKGludCBpID0gMCwgbWF4
ID0gdGhpcy50eXBlQW5ub3RhdGlvbnMubGVuZ3RoOyBpIDwgbWF4OyBpKyspCisJCXRoaXMudHlw
ZUFubm90YXRpb25zW2ldLmluaXRpYWxpemUoKTsKKwlzdXBlci5pbml0aWFsaXplKCk7Cit9Citw
cm90ZWN0ZWQgdm9pZCByZXNldCgpIHsKKwlpZiAodGhpcy50eXBlQW5ub3RhdGlvbnMgIT0gbnVs
bCkKKwkJZm9yIChpbnQgaSA9IDAsIG1heCA9IHRoaXMudHlwZUFubm90YXRpb25zLmxlbmd0aDsg
aSA8IG1heDsgaSsrKQorCQkJdGhpcy50eXBlQW5ub3RhdGlvbnNbaV0ucmVzZXQoKTsKKwlzdXBl
ci5yZXNldCgpOworfQorcHVibGljIFN0cmluZyB0b1N0cmluZygpIHsKKwlTdHJpbmdCdWZmZXIg
YnVmZmVyID0gbmV3IFN0cmluZ0J1ZmZlcihnZXRDbGFzcygpLmdldE5hbWUoKSk7CisJaWYgKHRo
aXMudHlwZUFubm90YXRpb25zICE9IG51bGwpIHsKKwkJYnVmZmVyLmFwcGVuZCgnXG4nKTsKKwkJ
YnVmZmVyLmFwcGVuZCgidHlwZSBhbm5vdGF0aW9uczoiKTsgLy8kTk9OLU5MUy0xJAorCQlmb3Ig
KGludCBpID0gMDsgaSA8IHRoaXMudHlwZUFubm90YXRpb25zLmxlbmd0aDsgaSsrKSB7CisJCQli
dWZmZXIuYXBwZW5kKHRoaXMudHlwZUFubm90YXRpb25zW2ldKTsKKwkJCWJ1ZmZlci5hcHBlbmQo
J1xuJyk7CisJCX0KKwl9CisJdG9TdHJpbmdDb250ZW50KGJ1ZmZlcik7CisJcmV0dXJuIGJ1ZmZl
ci50b1N0cmluZygpOworfQorfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NsYXNzZm10L01ldGhvZElu
Zm8uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9jbGFzc2ZtdC9NZXRob2RJbmZvLmphdmEKaW5kZXggODhkNjBhYy4u
ZDIyZjZjYiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NsYXNzZm10L01ldGhvZEluZm8uamF2YQorKysg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvY2xhc3NmbXQvTWV0aG9kSW5mby5qYXZhCkBAIC0xLDEzICsxLDE5IEBACiAvKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jw
b3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jw
b3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFt
IGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVu
ZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGlj
aCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICog
aHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKICAqCisgKiBUaGlzIGlz
IGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxv
cGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFk
ZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHku
IFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhl
IEpDUC4KKyAqCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5p
dGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCiAgKiAgICAgU3RlcGhhbiBIZXJybWFubiAtIENv
bnRyaWJ1dGlvbiBmb3IgYnVnIDE4NjM0MiAtIFtjb21waWxlcl1bbnVsbF0gVXNpbmcgYW5ub3Rh
dGlvbnMgZm9yIG51bGwgY2hlY2tpbmcKKyAqICAgICBBbmR5IENsZW1lbnQgKEdvUGl2b3RhbCwg
SW5jKSBhY2xlbWVudEBnb3Bpdm90YWwuY29tIC0gQ29udHJpYnV0aW9ucyBmb3IKKyAqICAgICAg
ICAgQnVnIDQwNzE5MSAtIFsxLjhdIEJpbmFyeSBhY2Nlc3Mgc3VwcG9ydCBmb3IgdHlwZSBhbm5v
dGF0aW9ucwogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5jbGFzc2ZtdDsKIApAQCAtMTYsNiArMjIsNyBAQCBpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNvZGVnZW4uQXR0cmlidXRlTmFtZXND
b25zdGFudHM7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNvZGVn
ZW4uQ29uc3RhbnRQb29sOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci5lbnYuSUJpbmFyeUFubm90YXRpb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmVudi5JQmluYXJ5TWV0aG9kOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5lbnYuSUJpbmFyeVR5cGVBbm5vdGF0aW9uOwogaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci51dGlsLlV0aWw7CiAKIHB1YmxpYyBjbGFzcyBNZXRo
b2RJbmZvIGV4dGVuZHMgQ2xhc3NGaWxlU3RydWN0IGltcGxlbWVudHMgSUJpbmFyeU1ldGhvZCwg
Q29tcGFyYWJsZSB7CkBAIC0zOCw2ICs0NSw3IEBAIHB1YmxpYyBzdGF0aWMgTWV0aG9kSW5mbyBj
cmVhdGVNZXRob2QoYnl0ZSBjbGFzc0ZpbGVCeXRlc1tdLCBpbnQgb2Zmc2V0c1tdLCBpbnQKIAlp
bnQgcmVhZE9mZnNldCA9IDg7CiAJQW5ub3RhdGlvbkluZm9bXSBhbm5vdGF0aW9ucyA9IG51bGw7
CiAJQW5ub3RhdGlvbkluZm9bXVtdIHBhcmFtZXRlckFubm90YXRpb25zID0gbnVsbDsKKwlUeXBl
QW5ub3RhdGlvbkluZm9bXSB0eXBlQW5ub3RhdGlvbnMgPSBudWxsOwogCWZvciAoaW50IGkgPSAw
OyBpIDwgYXR0cmlidXRlc0NvdW50OyBpKyspIHsKIAkJLy8gY2hlY2sgdGhlIG5hbWUgb2YgZWFj
aCBhdHRyaWJ1dGUKIAkJaW50IHV0ZjhPZmZzZXQgPSBtZXRob2RJbmZvLmNvbnN0YW50UG9vbE9m
ZnNldHNbbWV0aG9kSW5mby51MkF0KHJlYWRPZmZzZXQpXSAtIG1ldGhvZEluZm8uc3RydWN0T2Zm
c2V0OwpAQCAtNTEsNiArNTksNyBAQCBwdWJsaWMgc3RhdGljIE1ldGhvZEluZm8gY3JlYXRlTWV0
aG9kKGJ5dGUgY2xhc3NGaWxlQnl0ZXNbXSwgaW50IG9mZnNldHNbXSwgaW50CiAJCQkJY2FzZSAn
UicgOgogCQkJCQlBbm5vdGF0aW9uSW5mb1tdIG1ldGhvZEFubm90YXRpb25zID0gbnVsbDsKIAkJ
CQkJQW5ub3RhdGlvbkluZm9bXVtdIHBhcmFtQW5ub3RhdGlvbnMgPSBudWxsOworCQkJCQlUeXBl
QW5ub3RhdGlvbkluZm9bXSBtZXRob2RUeXBlQW5ub3RhdGlvbnMgPSBudWxsOwogCQkJCQlpZiAo
Q2hhck9wZXJhdGlvbi5lcXVhbHMoYXR0cmlidXRlTmFtZSwgQXR0cmlidXRlTmFtZXNDb25zdGFu
dHMuUnVudGltZVZpc2libGVBbm5vdGF0aW9uc05hbWUpKSB7CiAJCQkJCQltZXRob2RBbm5vdGF0
aW9ucyA9IGRlY29kZU1ldGhvZEFubm90YXRpb25zKHJlYWRPZmZzZXQsIHRydWUsIG1ldGhvZElu
Zm8pOwogCQkJCQl9IGVsc2UgaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKGF0dHJpYnV0ZU5hbWUs
IEF0dHJpYnV0ZU5hbWVzQ29uc3RhbnRzLlJ1bnRpbWVJbnZpc2libGVBbm5vdGF0aW9uc05hbWUp
KSB7CkBAIC01OSw2ICs2OCwxMCBAQCBwdWJsaWMgc3RhdGljIE1ldGhvZEluZm8gY3JlYXRlTWV0
aG9kKGJ5dGUgY2xhc3NGaWxlQnl0ZXNbXSwgaW50IG9mZnNldHNbXSwgaW50CiAJCQkJCQlwYXJh
bUFubm90YXRpb25zID0gZGVjb2RlUGFyYW1Bbm5vdGF0aW9ucyhyZWFkT2Zmc2V0LCB0cnVlLCBt
ZXRob2RJbmZvKTsKIAkJCQkJfSBlbHNlIGlmIChDaGFyT3BlcmF0aW9uLmVxdWFscyhhdHRyaWJ1
dGVOYW1lLCBBdHRyaWJ1dGVOYW1lc0NvbnN0YW50cy5SdW50aW1lSW52aXNpYmxlUGFyYW1ldGVy
QW5ub3RhdGlvbnNOYW1lKSkgewogCQkJCQkJcGFyYW1Bbm5vdGF0aW9ucyA9IGRlY29kZVBhcmFt
QW5ub3RhdGlvbnMocmVhZE9mZnNldCwgZmFsc2UsIG1ldGhvZEluZm8pOworCQkJCQl9IGVsc2Ug
aWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKGF0dHJpYnV0ZU5hbWUsIEF0dHJpYnV0ZU5hbWVzQ29u
c3RhbnRzLlJ1bnRpbWVWaXNpYmxlVHlwZUFubm90YXRpb25zTmFtZSkpIHsKKwkJCQkJCW1ldGhv
ZFR5cGVBbm5vdGF0aW9ucyA9IGRlY29kZVR5cGVBbm5vdGF0aW9ucyhyZWFkT2Zmc2V0LCB0cnVl
LCBtZXRob2RJbmZvKTsKKwkJCQkJfSBlbHNlIGlmIChDaGFyT3BlcmF0aW9uLmVxdWFscyhhdHRy
aWJ1dGVOYW1lLCBBdHRyaWJ1dGVOYW1lc0NvbnN0YW50cy5SdW50aW1lSW52aXNpYmxlVHlwZUFu
bm90YXRpb25zTmFtZSkpIHsKKwkJCQkJCW1ldGhvZFR5cGVBbm5vdGF0aW9ucyA9IGRlY29kZVR5
cGVBbm5vdGF0aW9ucyhyZWFkT2Zmc2V0LCBmYWxzZSwgbWV0aG9kSW5mbyk7CiAJCQkJCX0KIAkJ
CQkJaWYgKG1ldGhvZEFubm90YXRpb25zICE9IG51bGwpIHsKIAkJCQkJCWlmIChhbm5vdGF0aW9u
cyA9PSBudWxsKSB7CkBAIC05MCw2ICsxMDMsMTYgQEAgcHVibGljIHN0YXRpYyBNZXRob2RJbmZv
IGNyZWF0ZU1ldGhvZChieXRlIGNsYXNzRmlsZUJ5dGVzW10sIGludCBvZmZzZXRzW10sIGludAog
CQkJCQkJCQl9CiAJCQkJCQkJfQogCQkJCQkJfQorCQkJCQl9IGVsc2UgaWYgKG1ldGhvZFR5cGVB
bm5vdGF0aW9ucyAhPSBudWxsKSB7CisJCQkJCQlpZiAodHlwZUFubm90YXRpb25zID09IG51bGwp
IHsKKwkJCQkJCQl0eXBlQW5ub3RhdGlvbnMgPSBtZXRob2RUeXBlQW5ub3RhdGlvbnM7CisJCQkJ
CQl9IGVsc2UgeworCQkJCQkJCWludCBsZW5ndGggPSB0eXBlQW5ub3RhdGlvbnMubGVuZ3RoOwor
CQkJCQkJCVR5cGVBbm5vdGF0aW9uSW5mb1tdIG5ld0Fubm90YXRpb25zID0gbmV3IFR5cGVBbm5v
dGF0aW9uSW5mb1tsZW5ndGggKyBtZXRob2RUeXBlQW5ub3RhdGlvbnMubGVuZ3RoXTsKKwkJCQkJ
CQlTeXN0ZW0uYXJyYXljb3B5KHR5cGVBbm5vdGF0aW9ucywgMCwgbmV3QW5ub3RhdGlvbnMsIDAs
IGxlbmd0aCk7CisJCQkJCQkJU3lzdGVtLmFycmF5Y29weShtZXRob2RUeXBlQW5ub3RhdGlvbnMs
IDAsIG5ld0Fubm90YXRpb25zLCBsZW5ndGgsIG1ldGhvZFR5cGVBbm5vdGF0aW9ucy5sZW5ndGgp
OworCQkJCQkJCXR5cGVBbm5vdGF0aW9ucyA9IG5ld0Fubm90YXRpb25zOworCQkJCQkJfQogCQkJ
CQl9CiAJCQkJCWJyZWFrOwogCQkJfQpAQCAtOTgsNiArMTIxLDggQEAgcHVibGljIHN0YXRpYyBN
ZXRob2RJbmZvIGNyZWF0ZU1ldGhvZChieXRlIGNsYXNzRmlsZUJ5dGVzW10sIGludCBvZmZzZXRz
W10sIGludAogCX0KIAltZXRob2RJbmZvLmF0dHJpYnV0ZUJ5dGVzID0gcmVhZE9mZnNldDsKIAor
CWlmICh0eXBlQW5ub3RhdGlvbnMgIT0gbnVsbCkKKwkJcmV0dXJuIG5ldyBNZXRob2RJbmZvV2l0
aFR5cGVBbm5vdGF0aW9ucyhtZXRob2RJbmZvLCBhbm5vdGF0aW9ucywgcGFyYW1ldGVyQW5ub3Rh
dGlvbnMsIHR5cGVBbm5vdGF0aW9ucyk7CiAJaWYgKHBhcmFtZXRlckFubm90YXRpb25zICE9IG51
bGwpCiAJCXJldHVybiBuZXcgTWV0aG9kSW5mb1dpdGhQYXJhbWV0ZXJBbm5vdGF0aW9ucyhtZXRo
b2RJbmZvLCBhbm5vdGF0aW9ucywgcGFyYW1ldGVyQW5ub3RhdGlvbnMpOwogCWlmIChhbm5vdGF0
aW9ucyAhPSBudWxsKQpAQCAtMTQ2LDYgKzE3MSwyMCBAQCBzdGF0aWMgQW5ub3RhdGlvbkluZm9b
XSBkZWNvZGVNZXRob2RBbm5vdGF0aW9ucyhpbnQgb2Zmc2V0LCBib29sZWFuIHJ1bnRpbWVWaXNp
YgogCX0KIAlyZXR1cm4gbnVsbDsKIH0KK3N0YXRpYyBUeXBlQW5ub3RhdGlvbkluZm9bXSBkZWNv
ZGVUeXBlQW5ub3RhdGlvbnMoaW50IG9mZnNldCwgYm9vbGVhbiBydW50aW1lVmlzaWJsZSwgTWV0
aG9kSW5mbyBtZXRob2RJbmZvKSB7CisJaW50IG51bWJlck9mQW5ub3RhdGlvbnMgPSBtZXRob2RJ
bmZvLnUyQXQob2Zmc2V0ICsgNik7CisJaWYgKG51bWJlck9mQW5ub3RhdGlvbnMgPiAwKSB7CisJ
CWludCByZWFkT2Zmc2V0ID0gb2Zmc2V0ICsgODsKKwkJVHlwZUFubm90YXRpb25JbmZvW10gdHlw
ZUFubm9zID0gbmV3IFR5cGVBbm5vdGF0aW9uSW5mb1tudW1iZXJPZkFubm90YXRpb25zXTsKKwkJ
Zm9yIChpbnQgaSA9IDA7IGkgPCBudW1iZXJPZkFubm90YXRpb25zOyBpKyspIHsKKwkJCVR5cGVB
bm5vdGF0aW9uSW5mbyBuZXdJbmZvID0gbmV3IFR5cGVBbm5vdGF0aW9uSW5mbyhtZXRob2RJbmZv
LnJlZmVyZW5jZSwgbWV0aG9kSW5mby5jb25zdGFudFBvb2xPZmZzZXRzLCByZWFkT2Zmc2V0ICsg
bWV0aG9kSW5mby5zdHJ1Y3RPZmZzZXQsIHJ1bnRpbWVWaXNpYmxlLCBmYWxzZSk7CisJCQlyZWFk
T2Zmc2V0ICs9IG5ld0luZm8ucmVhZE9mZnNldDsKKwkJCXR5cGVBbm5vc1tpXSA9IG5ld0luZm87
CisJCX0KKwkJcmV0dXJuIHR5cGVBbm5vczsKKwl9CisJcmV0dXJuIG51bGw7Cit9CiBzdGF0aWMg
QW5ub3RhdGlvbkluZm9bXVtdIGRlY29kZVBhcmFtQW5ub3RhdGlvbnMoaW50IG9mZnNldCwgYm9v
bGVhbiBydW50aW1lVmlzaWJsZSwgTWV0aG9kSW5mbyBtZXRob2RJbmZvKSB7CiAJQW5ub3RhdGlv
bkluZm9bXVtdIGFsbFBhcmFtQW5ub3RhdGlvbnMgPSBudWxsOwogCWludCBudW1iZXJPZlBhcmFt
ZXRlcnMgPSBtZXRob2RJbmZvLnUxQXQob2Zmc2V0ICsgNik7CkBAIC0yNzQsNiArMzEzLDkgQEAg
cHVibGljIElCaW5hcnlBbm5vdGF0aW9uW10gZ2V0UGFyYW1ldGVyQW5ub3RhdGlvbnMoaW50IGlu
ZGV4KSB7CiBwdWJsaWMgaW50IGdldEFubm90YXRlZFBhcmFtZXRlcnNDb3VudCgpIHsKIAlyZXR1
cm4gMDsKIH0KK3B1YmxpYyBJQmluYXJ5VHlwZUFubm90YXRpb25bXSBnZXRUeXBlQW5ub3RhdGlv
bnMoKSB7CisJcmV0dXJuIG51bGw7Cit9CiAvKioKICAqIEFuc3dlciB0aGUgbmFtZSBvZiB0aGUg
bWV0aG9kLgogICoKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jbGFzc2ZtdC9NZXRob2RJbmZvV2l0aFR5
cGVBbm5vdGF0aW9ucy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NsYXNzZm10L01ldGhvZEluZm9XaXRoVHlwZUFu
bm90YXRpb25zLmphdmEKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMC4uYTc5YTFl
NAotLS0gL2Rldi9udWxsCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jbGFzc2ZtdC9NZXRob2RJbmZvV2l0aFR5cGVB
bm5vdGF0aW9ucy5qYXZhCkBAIC0wLDAgKzEsNTEgQEAKKy8qKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
CisgKiBDb3B5cmlnaHQgKGMpIDIwMTMgR29QaXZvdGFsLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2
ZWQuCisgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBh
bnlpbmcgbWF0ZXJpYWxzCisgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9m
IHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKKyAqIHdoaWNoIGFjY29tcGFuaWVzIHRo
aXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CisgKiBodHRwOi8vd3d3LmVjbGlw
c2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRp
b24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEph
dmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3Ig
dGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90
IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgorICoKKyAqIENv
bnRyaWJ1dG9yczoKKyAqICAgICAgICBBbmR5IENsZW1lbnQgKEdvUGl2b3RhbCwgSW5jKSBhY2xl
bWVudEBnb3Bpdm90YWwuY29tIC0gQ29udHJpYnV0aW9ucyBmb3IKKyAqICAgICAgICAgICAgQnVn
IDQwNzE5MSAtIFsxLjhdIEJpbmFyeSBhY2Nlc3Mgc3VwcG9ydCBmb3IgdHlwZSBhbm5vdGF0aW9u
cworICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKiovCitwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5jbGFzc2ZtdDsKKworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb21waWxlci5lbnYuSUJpbmFyeVR5cGVBbm5vdGF0aW9uOworCitjbGFzcyBNZXRob2RJbmZv
V2l0aFR5cGVBbm5vdGF0aW9ucyBleHRlbmRzIE1ldGhvZEluZm9XaXRoUGFyYW1ldGVyQW5ub3Rh
dGlvbnMgeworCXByaXZhdGUgVHlwZUFubm90YXRpb25JbmZvW10gdHlwZUFubm90YXRpb25zOwor
CitNZXRob2RJbmZvV2l0aFR5cGVBbm5vdGF0aW9ucyhNZXRob2RJbmZvIG1ldGhvZEluZm8sIEFu
bm90YXRpb25JbmZvW10gYW5ub3RhdGlvbnMsIEFubm90YXRpb25JbmZvW11bXSBwYXJhbWV0ZXJB
bm5vdGF0aW9ucywgVHlwZUFubm90YXRpb25JbmZvW10gdHlwZUFubm90YXRpb25zKSB7CisJc3Vw
ZXIobWV0aG9kSW5mbywgYW5ub3RhdGlvbnMsIHBhcmFtZXRlckFubm90YXRpb25zKTsKKwl0aGlz
LnR5cGVBbm5vdGF0aW9ucyA9IHR5cGVBbm5vdGF0aW9uczsKK30KK3B1YmxpYyBJQmluYXJ5VHlw
ZUFubm90YXRpb25bXSBnZXRUeXBlQW5ub3RhdGlvbnMoKSB7CisJcmV0dXJuIHRoaXMudHlwZUFu
bm90YXRpb25zOworfQorCitwcm90ZWN0ZWQgdm9pZCBpbml0aWFsaXplKCkgeworCWZvciAoaW50
IGkgPSAwLCBsID0gdGhpcy50eXBlQW5ub3RhdGlvbnMgPT0gbnVsbCA/IDAgOiB0aGlzLnR5cGVB
bm5vdGF0aW9ucy5sZW5ndGg7IGkgPCBsOyBpKyspIHsKKwkJdGhpcy50eXBlQW5ub3RhdGlvbnNb
aV0uaW5pdGlhbGl6ZSgpOworCX0KKwlzdXBlci5pbml0aWFsaXplKCk7Cit9Citwcm90ZWN0ZWQg
dm9pZCByZXNldCgpIHsKKwlmb3IgKGludCBpID0gMCwgbCA9IHRoaXMudHlwZUFubm90YXRpb25z
ID09IG51bGwgPyAwIDogdGhpcy50eXBlQW5ub3RhdGlvbnMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7
CisJCXRoaXMudHlwZUFubm90YXRpb25zW2ldLnJlc2V0KCk7CisJfQorCXN1cGVyLnJlc2V0KCk7
Cit9Citwcm90ZWN0ZWQgdm9pZCB0b1N0cmluZ0NvbnRlbnQoU3RyaW5nQnVmZmVyIGJ1ZmZlcikg
eworCXN1cGVyLnRvU3RyaW5nQ29udGVudChidWZmZXIpOworCWJ1ZmZlci5hcHBlbmQoInR5cGUg
YW5ub3RhdGlvbnMgPSBcbiIpOy8vJE5PTi1OTFMtMSQKKwlmb3IgKGludCBpID0gMCwgbCA9IHRo
aXMudHlwZUFubm90YXRpb25zID09IG51bGwgPyAwIDogdGhpcy50eXBlQW5ub3RhdGlvbnMubGVu
Z3RoOyBpIDwgbDsgaSsrKSB7CisJCWJ1ZmZlci5hcHBlbmQodGhpcy50eXBlQW5ub3RhdGlvbnNb
aV0udG9TdHJpbmcoKSk7CisJCWJ1ZmZlci5hcHBlbmQoJ1xuJyk7CisJfQorfQorfQpkaWZmIC0t
Z2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2NsYXNzZm10L1R5cGVBbm5vdGF0aW9uSW5mby5qYXZhIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Ns
YXNzZm10L1R5cGVBbm5vdGF0aW9uSW5mby5qYXZhCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4
IDAwMDAwMDAuLjJjY2Q3NWUKLS0tIC9kZXYvbnVsbAorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY2xhc3NmbXQvVHlw
ZUFubm90YXRpb25JbmZvLmphdmEKQEAgLTAsMCArMSwyNDIgQEAKKy8qKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqCisgKiBDb3B5cmlnaHQgKGMpIDIwMTMgR29QaXZvdGFsLCBJbmMuIEFsbCBSaWdodHMg
UmVzZXJ2ZWQuCisgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBh
Y2NvbXBhbnlpbmcgbWF0ZXJpYWxzCisgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRl
cm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKKyAqIHdoaWNoIGFjY29tcGFu
aWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CisgKiBodHRwOi8vd3d3
LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVt
ZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIg
dGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJs
ZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUg
aXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgorICoK
KyAqIENvbnRyaWJ1dG9yczoKKyAqICAgICAgICBBbmR5IENsZW1lbnQgKEdvUGl2b3RhbCwgSW5j
KSBhY2xlbWVudEBnb3Bpdm90YWwuY29tIC0gQ29udHJpYnV0aW9ucyBmb3IKKyAqICAgICAgICAg
IEJ1ZyA0MDcxOTEgLSBbMS44XSBCaW5hcnkgYWNjZXNzIHN1cHBvcnQgZm9yIHR5cGUgYW5ub3Rh
dGlvbnMKKyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLworcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29tcGlsZXIuY2xhc3NmbXQ7CisKK2ltcG9ydCBqYXZhLnV0aWwuQXJyYXlzOwor
CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNvZGVnZW4uQW5ub3Rh
dGlvblRhcmdldFR5cGVDb25zdGFudHM7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmVudi5JQmluYXJ5QW5ub3RhdGlvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29tcGlsZXIuZW52LklCaW5hcnlUeXBlQW5ub3RhdGlvbjsKKworLyoqCisgKiBU
aGUgVHlwZUFubm90YXRpb25JbmZvIGNsYXNzIGRvZXMgbm90IGN1cnJlbnRseSBzdXBwb3J0IHR5
cGUgYW5ub3RhdGlvbnMgd2l0aGluIGNvZGUKKyAqIGJsb2NrcyAodGhvc2UgdGhhdCBoYXZlIGEg
dGFyZ2V0IHR5cGUgb2YgMHg0MCBhbmQgaGlnaGVyKSAtIGl0IGlzIG5vdCB5ZXQgY2xlYXIgdGhh
dCAKKyAqIHRoZXNlIG5lZWQgdG8gYmUgYWNjZXNzaWJsZS4KKyAqLworcHVibGljIGNsYXNzIFR5
cGVBbm5vdGF0aW9uSW5mbyBleHRlbmRzIENsYXNzRmlsZVN0cnVjdCBpbXBsZW1lbnRzIElCaW5h
cnlUeXBlQW5ub3RhdGlvbiB7CisKKwlwcml2YXRlIEFubm90YXRpb25JbmZvIGFubm90YXRpb247
CisJCisJcHJpdmF0ZSBpbnQgdGFyZ2V0VHlwZSA9IDA7CisJCisJLy8gaW5mbyBpcyB1c2VkIGlu
IGRpZmZlcmVudCB3YXlzOgorCS8vIFRhcmdldFR5cGUgMHgwMDogQ0xBU1NfVFlQRV9QQVJBTUVU
RVI6IHR5cGUgcGFyYW1ldGVyIGluZGV4CisJLy8gVGFyZ2V0VHlwZSAweDAxOiBNRVRIT0RfVFlQ
RV9QQVJBTUVURVI6IHR5cGUgcGFyYW1ldGVyIGluZGV4IAorCS8vIFRhcmdldFR5cGUgMHgxMDog
Q0xBU1NfRVhURU5EUzogc3VwZXJ0eXBlIGluZGV4ICgtMSA9IHN1cGVyY2xhc3MsIDAuLk4gc3Vw
ZXJpbnRlcmZhY2UpCisJLy8gVGFyZ2V0VHlwZSAweDExOiBDTEFTU19UWVBFX1BBUkFNRVRFUl9C
T1VORDogdHlwZSBwYXJhbWV0ZXIgaW5kZXgKKwkvLyBUYXJnZXRUeXBlIDB4MTI6IE1FVEhPRF9U
WVBFX1BBUkFNRVRFUl9CT1VORDogdHlwZSBwYXJhbWV0ZXIgaW5kZXgKKwkvLyBUYXJnZXRUeXBl
IDB4MTY6IE1FVEhPRF9GT1JNQUxfUEFSQU1FVEVSOiBtZXRob2QgZm9ybWFsIHBhcmFtZXRlciBp
bmRleAorCS8vIFRhcmdldFR5cGUgMHgxNzogVEhST1dTOiB0aHJvd3MgdHlwZSBpbmRleAorCXBy
aXZhdGUgaW50IGluZm87CisJCisJLy8gVGFyZ2V0VHlwZSAweDExOiBDTEFTU19UWVBFX1BBUkFN
RVRFUl9CT1VORDogYm91bmQgaW5kZXgKKwkvLyBUYXJnZXRUeXBlIDB4MTI6IE1FVEhPRF9UWVBF
X1BBUkFNRVRFUl9CT1VORDogYm91bmQgaW5kZXgKKwlwcml2YXRlIGludCBpbmZvMjsKKwkKKwlw
cml2YXRlIGludFtdIHR5cGVQYXRoOyAvLyBlYWNoIHBhaXIgb2YgaW50cyBpbiB0aGUgYXJyYXkg
aXMgYSB0eXBlIHBhdGggZW50cnkKKwkKKwlpbnQgcmVhZE9mZnNldCA9IDA7CisJCisJCitUeXBl
QW5ub3RhdGlvbkluZm8oYnl0ZVtdIGNsYXNzRmlsZUJ5dGVzLCBpbnRbXSBjb250YW50UG9vbE9m
ZnNldHMsIGludCBvZmZzZXQpIHsKKwlzdXBlcihjbGFzc0ZpbGVCeXRlcywgY29udGFudFBvb2xP
ZmZzZXRzLCBvZmZzZXQpOworfQorCQorVHlwZUFubm90YXRpb25JbmZvKGJ5dGVbXSBjbGFzc0Zp
bGVCeXRlcywgaW50W10gY29udGFudFBvb2xPZmZzZXRzLCBpbnQgb2Zmc2V0LCBib29sZWFuIHJ1
bnRpbWVWaXNpYmxlLCBib29sZWFuIHBvcHVsYXRlKSB7CisJdGhpcyhjbGFzc0ZpbGVCeXRlcywg
Y29udGFudFBvb2xPZmZzZXRzLCBvZmZzZXQpOworCXRoaXMucmVhZE9mZnNldCA9IDA7CisJdGhp
cy50YXJnZXRUeXBlID0gdTFBdCgwKTsKKwlzd2l0Y2ggKHRoaXMudGFyZ2V0VHlwZSkgeworCQlj
YXNlIEFubm90YXRpb25UYXJnZXRUeXBlQ29uc3RhbnRzLkNMQVNTX1RZUEVfUEFSQU1FVEVSOgor
CQljYXNlIEFubm90YXRpb25UYXJnZXRUeXBlQ29uc3RhbnRzLk1FVEhPRF9UWVBFX1BBUkFNRVRF
UjoKKwkJCXRoaXMuaW5mbyA9IHUxQXQoMSk7IC8vIHR5cGVQYXJhbWV0ZXJJbmRleAorCQkJdGhp
cy5yZWFkT2Zmc2V0ICs9IDI7CisJCQlicmVhazsKKwkJCQorCQljYXNlIEFubm90YXRpb25UYXJn
ZXRUeXBlQ29uc3RhbnRzLkNMQVNTX0VYVEVORFM6CisJCQl0aGlzLmluZm8gPSB1MkF0KDEpOyAv
LyBzdXBlcnR5cGVJbmRleAorCQkJdGhpcy5yZWFkT2Zmc2V0ICs9IDM7CisJCQlicmVhazsKKwkJ
CQorCQljYXNlIEFubm90YXRpb25UYXJnZXRUeXBlQ29uc3RhbnRzLkNMQVNTX1RZUEVfUEFSQU1F
VEVSX0JPVU5EOgorCQljYXNlIEFubm90YXRpb25UYXJnZXRUeXBlQ29uc3RhbnRzLk1FVEhPRF9U
WVBFX1BBUkFNRVRFUl9CT1VORDoKKwkJCXRoaXMuaW5mbyA9IHUxQXQoMSk7IC8vIHR5cGVQYXJh
bWV0ZXJJbmRleAorCQkJdGhpcy5pbmZvMiA9IHUxQXQoMik7IC8vIGJvdW5kSW5kZXg7CisJCQl0
aGlzLnJlYWRPZmZzZXQgKz0gMzsKKwkJCWJyZWFrOworCQkJCisJCWNhc2UgQW5ub3RhdGlvblRh
cmdldFR5cGVDb25zdGFudHMuRklFTEQ6CisJCWNhc2UgQW5ub3RhdGlvblRhcmdldFR5cGVDb25z
dGFudHMuTUVUSE9EX1JFVFVSTjoKKwkJY2FzZSBBbm5vdGF0aW9uVGFyZ2V0VHlwZUNvbnN0YW50
cy5NRVRIT0RfUkVDRUlWRVI6CisJCQl0aGlzLnJlYWRPZmZzZXQgKys7CisJCQlicmVhazsKKwkJ
CQorCQljYXNlIEFubm90YXRpb25UYXJnZXRUeXBlQ29uc3RhbnRzLk1FVEhPRF9GT1JNQUxfUEFS
QU1FVEVSIDoKKwkJCXRoaXMuaW5mbyA9IHUxQXQoMSk7IC8vIG1ldGhvZEZvcm1hbFBhcmFtZXRl
ckluZGV4CisJCQl0aGlzLnJlYWRPZmZzZXQgKz0gMjsKKwkJCWJyZWFrOworCQkJCisJCWNhc2Ug
QW5ub3RhdGlvblRhcmdldFR5cGVDb25zdGFudHMuVEhST1dTIDoKKwkJCXRoaXMuaW5mbyA9IHUy
QXQoMSk7IC8vIHRocm93c1R5cGVJbmRleAorCQkJdGhpcy5yZWFkT2Zmc2V0ICs9IDM7CisJCQli
cmVhazsKKworCQlkZWZhdWx0OgorCQkJdGhyb3cgbmV3IElsbGVnYWxTdGF0ZUV4Y2VwdGlvbigi
VGFyZ2V0IHR5cGUgbm90IGhhbmRsZWQgIit0aGlzLnRhcmdldFR5cGUpOyAvLyROT04tTkxTLTEk
CisJfQorCWludCB0eXBlUGF0aExlbmd0aCA9IHUxQXQodGhpcy5yZWFkT2Zmc2V0KTsKKwl0aGlz
LnJlYWRPZmZzZXQgKys7CisJaWYgKHR5cGVQYXRoTGVuZ3RoID09IDApIHsKKwkJdGhpcy50eXBl
UGF0aCA9IE5PX1RZUEVfUEFUSDsKKwl9IGVsc2UgeworCQl0aGlzLnR5cGVQYXRoID0gbmV3IGlu
dFt0eXBlUGF0aExlbmd0aCoyXTsKKwkJaW50IGluZGV4ID0gMDsKKwkJZm9yIChpbnQgaSA9IDA7
IGkgPCB0eXBlUGF0aExlbmd0aDsgaSsrKSB7CisJCQl0aGlzLnR5cGVQYXRoW2luZGV4KytdID0g
dTFBdCh0aGlzLnJlYWRPZmZzZXQrKyk7IC8vIGVudHJ5IGtpbmQKKwkJCXRoaXMudHlwZVBhdGhb
aW5kZXgrK10gPSB1MUF0KHRoaXMucmVhZE9mZnNldCsrKTsgLy8gdHlwZSBhcmd1bWVudCBpbmRl
eAorCQl9CisJfQorCXRoaXMuYW5ub3RhdGlvbiA9IG5ldyBBbm5vdGF0aW9uSW5mbyhjbGFzc0Zp
bGVCeXRlcywgdGhpcy5jb25zdGFudFBvb2xPZmZzZXRzLCB0aGlzLnN0cnVjdE9mZnNldCArIHRo
aXMucmVhZE9mZnNldCwgcnVudGltZVZpc2libGUsIHBvcHVsYXRlKTsKKwl0aGlzLnJlYWRPZmZz
ZXQgKz0gdGhpcy5hbm5vdGF0aW9uLnJlYWRPZmZzZXQ7Cit9CisKK3B1YmxpYyBJQmluYXJ5QW5u
b3RhdGlvbiBnZXRBbm5vdGF0aW9uKCkgeworCXJldHVybiB0aGlzLmFubm90YXRpb247Cit9CisK
K3Byb3RlY3RlZCB2b2lkIGluaXRpYWxpemUoKSB7CisJdGhpcy5hbm5vdGF0aW9uLmluaXRpYWxp
emUoKTsKK30KKworcHJvdGVjdGVkIHZvaWQgcmVzZXQoKSB7CisJdGhpcy5hbm5vdGF0aW9uLnJl
c2V0KCk7CisJc3VwZXIucmVzZXQoKTsKK30KKworcHVibGljIFN0cmluZyB0b1N0cmluZygpIHsK
KwlTdHJpbmdCdWZmZXIgYnVmZmVyID0gbmV3IFN0cmluZ0J1ZmZlcigpOworCWJ1ZmZlci5hcHBl
bmQodGhpcy5hbm5vdGF0aW9uKTsKKwlidWZmZXIuYXBwZW5kKCcgJyk7CisJLy8gTm90IGZ1bGx5
IGRlY29kaW5nIGl0IGhlcmUsIGp1c3QgaW5jbHVkaW5nIGFsbCB0aGUgaW5mb3JtYXRpb24gaW4g
dGhlIHN0cmluZworCWJ1ZmZlci5hcHBlbmQoInRhcmdldF90eXBlPSIpLmFwcGVuZCh0aGlzLnRh
cmdldFR5cGUpOyAvLyROT04tTkxTLTEkCisJYnVmZmVyLmFwcGVuZCgiLCBpbmZvPSIpLmFwcGVu
ZCh0aGlzLmluZm8pOyAvLyROT04tTkxTLTEkCisJYnVmZmVyLmFwcGVuZCgiLCBpbmZvMj0iKS5h
cHBlbmQodGhpcy5pbmZvMik7IC8vJE5PTi1OTFMtMSQKKwlpZiAodGhpcy50eXBlUGF0aCAhPSBO
T19UWVBFX1BBVEgpIHsKKwkJYnVmZmVyLmFwcGVuZCgiLCBsb2NhdGlvbj1bIik7IC8vJE5PTi1O
TFMtMSQKKwkJZm9yIChpbnQgaSA9IDAsIG1heCA9IHRoaXMudHlwZVBhdGgubGVuZ3RoOyBpIDwg
bWF4OyBpICs9IDIpIHsKKwkJCWlmIChpID4gMCkgeworCQkJCWJ1ZmZlci5hcHBlbmQoIiwgIik7
IC8vJE5PTi1OTFMtMSQKKwkJCX0KKwkJCXN3aXRjaCAodGhpcy50eXBlUGF0aFtpXSkgeworCQkJ
CWNhc2UgMDoKKwkJCQkJYnVmZmVyLmFwcGVuZCgiQVJSQVkiKTsgLy8kTk9OLU5MUy0xJAorCQkJ
CQlicmVhazsKKwkJCQljYXNlIDE6CisJCQkJCWJ1ZmZlci5hcHBlbmQoIklOTkVSX1RZUEUiKTsg
Ly8kTk9OLU5MUy0xJAorCQkJCQlicmVhazsKKwkJCQljYXNlIDI6CisJCQkJCWJ1ZmZlci5hcHBl
bmQoIldJTERDQVJEIik7IC8vJE5PTi1OTFMtMSQKKwkJCQkJYnJlYWs7CisJCQkJY2FzZSAzOgor
CQkJCQlidWZmZXIuYXBwZW5kKCJUWVBFX0FSR1VNRU5UKCIpLmFwcGVuZCh0aGlzLnR5cGVQYXRo
W2krMV0pLmFwcGVuZCgnKScpOyAvLyROT04tTkxTLTEkCisJCQkJCWJyZWFrOworCQkJfQorCQl9
CisJCWJ1ZmZlci5hcHBlbmQoJ10nKTsKKwl9CisJcmV0dXJuIGJ1ZmZlci50b1N0cmluZygpOwor
fQorCisKK3B1YmxpYyBpbnQgZ2V0VGFyZ2V0VHlwZSgpIHsKKwlyZXR1cm4gdGhpcy50YXJnZXRU
eXBlOworfQorCitwdWJsaWMgaW50IGdldFN1cGVydHlwZUluZGV4KCkgeworCS8vIGFzc2VydCB0
aGlzLnRhcmdldFR5cGUgPT0gMHgxMAorCXJldHVybiB0aGlzLmluZm87Cit9CisKK3B1YmxpYyBp
bnQgZ2V0VHlwZVBhcmFtZXRlckluZGV4KCkgeworCS8vIGFzc2VydCB0aGlzLnRhcmdldFR5cGUg
PT0gMHgwMCBvciAweDAxCisJcmV0dXJuIHRoaXMuaW5mbzsKK30KKworcHVibGljIGludCBnZXRC
b3VuZEluZGV4KCkgeworCS8vIGFzc2VydCB0aGlzLnRhcmdldFR5cGUgPT0gMHgxMSBvciAweDEy
CisJcmV0dXJuIHRoaXMuaW5mbzI7Cit9CisKK3B1YmxpYyBpbnQgZ2V0TWV0aG9kRm9ybWFsUGFy
YW1ldGVySW5kZXgoKSB7CisJLy8gYXNzZXJ0IHRoaXMudGFyZ2V0VHlwZSA9PSAweDE2CisJcmV0
dXJuIHRoaXMuaW5mbzsKK30KKworcHVibGljIGludCBnZXRUaHJvd3NUeXBlSW5kZXgoKSB7CisJ
Ly8gYXNzZXJ0IHRoaXMudGFyZ2V0VHlwZSA9PSAweDE3CisJcmV0dXJuIHRoaXMuaW5mbzsKK30K
KworcHVibGljIGludFtdIGdldFR5cGVQYXRoKCkgeworCXJldHVybiB0aGlzLnR5cGVQYXRoOwor
fQorCitwdWJsaWMgaW50IGhhc2hDb2RlKCkgeworCWZpbmFsIGludCBwcmltZSA9IDMxOworCWlu
dCByZXN1bHQgPSAxOworCXJlc3VsdCA9IHByaW1lICogcmVzdWx0ICsgdGhpcy50YXJnZXRUeXBl
OworCXJlc3VsdCA9IHByaW1lICogcmVzdWx0ICsgdGhpcy5pbmZvOworCXJlc3VsdCA9IHByaW1l
ICogcmVzdWx0ICsgdGhpcy5pbmZvMjsKKwlpZiAodGhpcy50eXBlUGF0aCAhPSBudWxsKSB7CisJ
CWZvciAoaW50IGkgPSAwLCBtYXggPSB0aGlzLnR5cGVQYXRoLmxlbmd0aDsgaSA8IG1heDsgaSsr
KSB7CisJCQlyZXN1bHQgPSBwcmltZSAqIHJlc3VsdCArIHRoaXMudHlwZVBhdGhbaV07CisJCX0K
Kwl9CisJcmV0dXJuIHJlc3VsdDsKK30KKworcHVibGljIGJvb2xlYW4gZXF1YWxzKE9iamVjdCBv
YmopIHsKKwlpZiAodGhpcyA9PSBvYmopIHsKKwkJcmV0dXJuIHRydWU7CisJfQorCWlmIChvYmog
PT0gbnVsbCkgeworCQlyZXR1cm4gZmFsc2U7CisJfQorCWlmIChnZXRDbGFzcygpICE9IG9iai5n
ZXRDbGFzcygpKSB7CisJCXJldHVybiBmYWxzZTsKKwl9CisKKwlUeXBlQW5ub3RhdGlvbkluZm8g
b3RoZXIgPSAoVHlwZUFubm90YXRpb25JbmZvKSBvYmo7CisKKwlpZiAodGhpcy50YXJnZXRUeXBl
ICE9IG90aGVyLnRhcmdldFR5cGUpIHsKKwkJcmV0dXJuIGZhbHNlOworCX0KKwkKKwlpZiAodGhp
cy5pbmZvICE9IG90aGVyLmluZm8pIHsKKwkJcmV0dXJuIGZhbHNlOworCX0KKworCWlmICh0aGlz
LmluZm8yICE9IG90aGVyLmluZm8yKSB7CisJCXJldHVybiBmYWxzZTsKKwl9CisJCisJaWYgKCFB
cnJheXMuZXF1YWxzKHRoaXMudHlwZVBhdGgsIG90aGVyLnR5cGVQYXRoKSkgeworCQlyZXR1cm4g
ZmFsc2U7CisJfQorCQorCXJldHVybiB0aGlzLmFubm90YXRpb24uZXF1YWxzKG90aGVyLmFubm90
YXRpb24pOworfQorfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Vudi9JQmluYXJ5RmllbGQuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9lbnYvSUJpbmFyeUZpZWxkLmphdmEKaW5kZXggNGU5YjU2Ni4uZTIyYmY2OSAxMDA2
NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2Vudi9JQmluYXJ5RmllbGQuamF2YQorKysgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZW52L0lC
aW5hcnlGaWVsZC5qYXZhCkBAIC0xLDEyICsxLDE4IEBACiAvKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDA5IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJz
LgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJz
LgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55
aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0
aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlz
IGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNl
Lm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKICAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9u
IG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZh
CisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRl
c3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBj
b21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqIAogICogQ29u
dHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBs
ZW1lbnRhdGlvbgorICogICAgIEFuZHkgQ2xlbWVudCAoR29QaXZvdGFsLCBJbmMpIGFjbGVtZW50
QGdvcGl2b3RhbC5jb20gLSBDb250cmlidXRpb25zIGZvcgorICogICAgICAgICBCdWcgNDA3MTkx
IC0gWzEuOF0gQmluYXJ5IGFjY2VzcyBzdXBwb3J0IGZvciB0eXBlIGFubm90YXRpb25zCiAgKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmVudjsKIApAQCAtMTksNiArMjUsMTEgQEAgcHVibGljIGludGVyZmFjZSBJQmluYXJ5
RmllbGQgZXh0ZW5kcyBJR2VuZXJpY0ZpZWxkIHsKIElCaW5hcnlBbm5vdGF0aW9uW10gZ2V0QW5u
b3RhdGlvbnMoKTsKIAogLyoqCisgKiBBbnN3ZXIgdGhlIHJ1bnRpbWUgdmlzaWJsZSBhbmQgaW52
aXNpYmxlIHR5cGUgYW5ub3RhdGlvbnMgZm9yIHRoaXMgZmllbGQgb3IgbnVsbCBpZiBub25lLgor
ICovCitJQmluYXJ5VHlwZUFubm90YXRpb25bXSBnZXRUeXBlQW5ub3RhdGlvbnMoKTsKKworLyoq
CiAgKgogICogQHJldHVybiBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuQ29uc3Rh
bnQKICAqLwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Vudi9JQmluYXJ5TWV0aG9kLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvZW52L0lCaW5hcnlNZXRob2QuamF2YQppbmRleCAxNzdhZTI0Li5iZTdhYTkwIDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvZW52L0lCaW5hcnlNZXRob2QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZW52L0lCaW5h
cnlNZXRob2QuamF2YQpAQCAtMSwxMyArMSwxOSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioK
LSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
KyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
ICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWlu
ZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhl
IEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBk
aXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5v
cmcvbGVnYWwvZXBsLXYxMC5odG1sCiAgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBv
ZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQor
ICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0
aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29t
cGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKiAKICAqIENvbnRy
aWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVt
ZW50YXRpb24KICAqICAgICBTdGVwaGFuIEhlcnJtYW5uIC0gQ29udHJpYnV0aW9uIGZvciBidWcg
MTg2MzQyIC0gW2NvbXBpbGVyXVtudWxsXSBVc2luZyBhbm5vdGF0aW9ucyBmb3IgbnVsbCBjaGVj
a2luZworICogICAgIEFuZHkgQ2xlbWVudCAoR29QaXZvdGFsLCBJbmMpIGFjbGVtZW50QGdvcGl2
b3RhbC5jb20gLSBDb250cmlidXRpb25zIGZvcgorICogICAgICAgICBCdWcgNDA3MTkxIC0gWzEu
OF0gQmluYXJ5IGFjY2VzcyBzdXBwb3J0IGZvciB0eXBlIGFubm90YXRpb25zCiAgKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LmVudjsKIApAQCAtODksNCArOTUsOSBAQCBsb25nIGdldFRhZ0JpdHMoKTsKICAqIEFuc3dlciB3
aGV0aGVyIHRoZSByZWNlaXZlciByZXByZXNlbnRzIGEgY2xhc3MgaW5pdGlhbGl6ZXIgbWV0aG9k
LgogICovCiBib29sZWFuIGlzQ2xpbml0KCk7CisKKy8qKgorICogQW5zd2VyIHRoZSB0eXBlIGFu
bm90YXRpb25zIG9uIHRoaXMgbWV0aG9kLgorICovCitJQmluYXJ5VHlwZUFubm90YXRpb25bXSBn
ZXRUeXBlQW5ub3RhdGlvbnMoKTsKIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9lbnYvSUJpbmFyeVR5
cGUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9lbnYvSUJpbmFyeVR5cGUuamF2YQppbmRleCA3NDI0MzI1Li4yY2Yz
ZWZhIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZW52L0lCaW5hcnlUeXBlLmphdmEKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2Vudi9JQmluYXJ5VHlwZS5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAwOSBJQk0gQ29ycG9yYXRpb24gYW5kIG90
aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90
aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29t
cGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMg
b2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMg
dGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTcsNiArNyw4IEBACiAg
KgogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJ
IGFuZCBpbXBsZW1lbnRhdGlvbgorICogICAgIEFuZHkgQ2xlbWVudCAoR29QaXZvdGFsLCBJbmMp
IGFjbGVtZW50QGdvcGl2b3RhbC5jb20gLSBDb250cmlidXRpb25zIGZvcgorICogICAgICAgICBi
dWcgNDA3MTkxIC0gWzEuOF0gQmluYXJ5IGFjY2VzcyBzdXBwb3J0IGZvciB0eXBlIGFubm90YXRp
b25zCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmVudjsKIApAQCAtMjMsNiArMjUsMTMgQEAgcHVibGljIGludGVyZmFj
ZSBJQmluYXJ5VHlwZSBleHRlbmRzIElHZW5lcmljVHlwZSB7CiAgKi8KIAogSUJpbmFyeUFubm90
YXRpb25bXSBnZXRBbm5vdGF0aW9ucygpOworCisvKioKKyAqIEFuc3dlciB0aGUgcnVudGltZSB2
aXNpYmxlIGFuZCBpbnZpc2libGUgdHlwZSBhbm5vdGF0aW9ucyBmb3IgdGhpcyB0eXBlIG9yIG51
bGwgaWYgbm9uZS4KKyAqLworCitJQmluYXJ5VHlwZUFubm90YXRpb25bXSBnZXRUeXBlQW5ub3Rh
dGlvbnMoKTsKKwogLyoqCiAgKiBBbnN3ZXIgdGhlIGVuY2xvc2luZyBtZXRob2QgKGluY2x1ZGlu
ZyBtZXRob2Qgc2VsZWN0b3IgYW5kIG1ldGhvZCBkZXNjcmlwdG9yKSwgb3IKICAqIG51bGwgaWYg
bm9uZS4KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9lbnYvSUJpbmFyeVR5cGVBbm5vdGF0aW9uLmphdmEg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvZW52L0lCaW5hcnlUeXBlQW5ub3RhdGlvbi5qYXZhCm5ldyBmaWxlIG1vZGUgMTAw
NjQ0CmluZGV4IDAwMDAwMDAuLmMwNTk1YjIKLS0tIC9kZXYvbnVsbAorKysgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZW52
L0lCaW5hcnlUeXBlQW5ub3RhdGlvbi5qYXZhCkBAIC0wLDAgKzEsNzggQEAKKy8qKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqCisgKiBDb3B5cmlnaHQgKGMpIDIwMTMgR29QaXZvdGFsLCBJbmMuIEFsbCBS
aWdodHMgUmVzZXJ2ZWQuCisgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5k
IHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCisgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIg
dGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKKyAqIHdoaWNoIGFj
Y29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CisgKiBodHRw
Oi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICoKKyAqIFRoaXMgaXMgYW4g
aW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQg
dW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2
YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhl
IGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQ
LgorICoKKyAqIENvbnRyaWJ1dG9yczoKKyAqICAgICAgICBBbmR5IENsZW1lbnQgKEdvUGl2b3Rh
bCwgSW5jKSBhY2xlbWVudEBnb3Bpdm90YWwuY29tIC0gQ29udHJpYnV0aW9ucyBmb3IKKyAqICAg
ICAgICAgIEJ1ZyA0MDcxOTEgLSBbMS44XSBCaW5hcnkgYWNjZXNzIHN1cHBvcnQgZm9yIHR5cGUg
YW5ub3RhdGlvbnMKKyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLworcGFja2FnZSBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52OworCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmNvZGVnZW4uQW5ub3RhdGlvblRhcmdldFR5cGVDb25zdGFudHM7CisK
Ky8qKgorICogVGhpcyByZXByZXNlbnRzIGNsYXNzIGZpbGUgaW5mb3JtYXRpb24gYWJvdXQgYW4g
YW5ub3RhdGlvbiBpbnN0YW5jZS4KKyAqLworcHVibGljIGludGVyZmFjZSBJQmluYXJ5VHlwZUFu
bm90YXRpb24geworCQorCXN0YXRpYyBpbnRbXSBOT19UWVBFX1BBVEggPSBuZXcgaW50WzBdOwor
CisvKioKKyAqIEByZXR1cm4gdGhlIGFubm90YXRpb24KKyAqLworSUJpbmFyeUFubm90YXRpb24g
Z2V0QW5ub3RhdGlvbigpOworCisvKioKKyAqIEByZXR1cm4gdGhlIHRhcmdldCB0eXBlLCBhY2Nv
cmRpbmcgdG8gdGhlIGNvbnN0YW50cyBpbiB7QGxpbmsgQW5ub3RhdGlvblRhcmdldFR5cGVDb25z
dGFudHN9CisgKi8KK2ludCBnZXRUYXJnZXRUeXBlKCk7CisKKy8qKgorICogCisgKiBAcmV0dXJu
IHRoZSByYXcgdHlwZSBwYXRoIGRhdGEsIGVhY2ggcGFpciBvZiBpbnRzIGlzIGEgdHlwZSBwYXRo
IGVudHJ5CisgKi8KK2ludFtdIGdldFR5cGVQYXRoKCk7CisKKy8qKgorICogQXBwbGljYWJsZSBm
b3IgdGFyZ2V0IHR5cGUgMHgxMChDTEFTU19FWFRFTkRTKQorICogCisgKiBAcmV0dXJuIHRoZSBz
dXBlcnR5cGUgaW5kZXguIC0xICg2NTUzNSkgZm9yIHN1cGVyY2xhc3MsIDAuLm4gZm9yIHN1cGVy
aW50ZXJmYWNlcworICovCitpbnQgZ2V0U3VwZXJ0eXBlSW5kZXgoKTsKKworLyoqCisgKiBBcHBs
aWNhYmxlIGZvciB0YXJnZXQgdHlwZSAweDAwKENMQVNTX1RZUEVfUEFSQU1FVEVSKSwgMHgwMShN
RVRIT0RfVFlQRV9QQVJBTUVURVIpCisgKiAKKyAqIEByZXR1cm4gdGhlIHR5cGUgcGFyYW1ldGVy
IGluZGV4ICgwIGJhc2VkKQorICovCitpbnQgZ2V0VHlwZVBhcmFtZXRlckluZGV4KCk7CisKKy8q
KgorICogQXBwbGljYWJsZSBmb3IgdGFyZ2V0IHR5cGUgMHgxMShDTEFTU19UWVBFX1BBUkFNRVRF
Ul9CT1VORCksIDB4MTIoTUVUSE9EX1RZUEVfUEFSQU1FVEVSX0JPVU5EKQorICogCisgKiBAcmV0
dXJuIHRoZSBib3VuZCBpbmRleAorICovCitpbnQgZ2V0Qm91bmRJbmRleCgpOworCisvKioKKyAq
IEFwcGxpY2FibGUgZm9yIHRhcmdldCB0eXBlIDB4MTYoTUVUSE9EX0ZPUk1BTF9QQVJBTUVURVIp
CisgKiAKKyAqIEByZXR1cm4gdGhlIG1ldGhvZCBmb3JtYWwgcGFyYW1ldGVyIGluZGV4CisgKi8K
K2ludCBnZXRNZXRob2RGb3JtYWxQYXJhbWV0ZXJJbmRleCgpOworCisvKioKKyAqIEFwcGxpY2Fi
bGUgZm9yIHRhcmdldCB0eXBlIDB4MTcoVEhST1dTKQorICogCisgKiBAcmV0dXJuIHRoZSB0aHJv
d3MgdHlwZSBpbmRleAorICovCitpbnQgZ2V0VGhyb3dzVHlwZUluZGV4KCk7CisKK30KZGlmZiAt
LWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2V2YWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2V2YWwvQ29kZVNuaXBwZXRTa2VsZXRvbi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZXZh
bC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvZXZhbC9Db2RlU25pcHBldFNrZWxldG9uLmphdmEK
aW5kZXggZjAwOTBiMS4uYzIzNTg5ZCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
ZXZhbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvZXZhbC9Db2RlU25pcHBldFNrZWxldG9uLmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZXZhbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvZXZhbC9Db2RlU25pcHBldFNrZWxldG9uLmphdmEKQEAgLTEsMTMgKzEsMTkgQEAKIC8qKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBv
cmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBv
cmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0g
YW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5k
ZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNo
IGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBo
dHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAogICoKKyAqIFRoaXMgaXMg
YW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9w
ZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRl
IGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4g
VGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUg
SkNQLgorICogCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5p
dGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCiAgKiAgICAgU3RlcGhhbiBIZXJybWFubiAtIENv
bnRyaWJ1dGlvbiBmb3IgYnVnIDE4NjM0MiAtIFtjb21waWxlcl1bbnVsbF0gVXNpbmcgYW5ub3Rh
dGlvbnMgZm9yIG51bGwgY2hlY2tpbmcKKyAqICAgICBBbmR5IENsZW1lbnQgKEdvUGl2b3RhbCwg
SW5jKSBhY2xlbWVudEBnb3Bpdm90YWwuY29tIC0gQ29udHJpYnV0aW9ucyBmb3IKKyAqICAgICAg
ICAgQnVnIDQwNzE5MSAtIFsxLjhdIEJpbmFyeSBhY2Nlc3Mgc3VwcG9ydCBmb3IgdHlwZSBhbm5v
dGF0aW9ucwogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5ldmFsOwogCkBAIC0yMCw2ICsyNiw3IEBAIGltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklCaW5hcnlGaWVsZDsKIGltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklCaW5hcnlNZXRob2Q7CiBpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5JQmluYXJ5TmVzdGVkVHlwZTsKIGltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklCaW5hcnlUeXBlOworaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuSUJpbmFyeVR5cGVBbm5v
dGF0aW9uOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLnV0aWwuVXRpbDsK
IAogLyoqCkBAIC02OCw2ICs3NSw5IEBAIHB1YmxpYyBjbGFzcyBDb2RlU25pcHBldFNrZWxldG9u
IGltcGxlbWVudHMgSUJpbmFyeVR5cGUsIEV2YWx1YXRpb25Db25zdGFudHMgewogCQlwdWJsaWMg
aW50IGdldEFubm90YXRlZFBhcmFtZXRlcnNDb3VudCgpIHsKIAkJCXJldHVybiAwOwogCQl9CisJ
CXB1YmxpYyBJQmluYXJ5VHlwZUFubm90YXRpb25bXSBnZXRUeXBlQW5ub3RhdGlvbnMoKSB7CisJ
CQlyZXR1cm4gbnVsbDsgCisJCX0KIAkJcHVibGljIGNoYXJbXSBnZXRTZWxlY3RvcigpIHsKIAkJ
CXJldHVybiB0aGlzLnNlbGVjdG9yOwogCQl9CkBAIC0xMTIsNiArMTIyLDkgQEAgcHVibGljIENv
ZGVTbmlwcGV0U2tlbGV0b24oKSB7CiBwdWJsaWMgSUJpbmFyeUFubm90YXRpb25bXSBnZXRBbm5v
dGF0aW9ucygpIHsKIAlyZXR1cm4gbnVsbDsKIH0KK3B1YmxpYyBJQmluYXJ5VHlwZUFubm90YXRp
b25bXSBnZXRUeXBlQW5ub3RhdGlvbnMoKSB7CisJcmV0dXJuIG51bGw7IAorfQogcHVibGljIGNo
YXJbXSBnZXRFbmNsb3NpbmdNZXRob2QoKSB7CiAJcmV0dXJuIG51bGw7CiB9CmRpZmYgLS1naXQg
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29y
ZS9oaWVyYXJjaHkvSGllcmFyY2h5QmluYXJ5VHlwZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvaGllcmFyY2h5L0hpZXJhcmNo
eUJpbmFyeVR5cGUuamF2YQppbmRleCBiOTBmYTI1Li44ZWY3MDk1IDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9oaWVy
YXJjaHkvSGllcmFyY2h5QmluYXJ5VHlwZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2hpZXJhcmNoeS9IaWVyYXJjaHlC
aW5hcnlUeXBlLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgot
ICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDA5IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgor
ICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgog
ICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5n
IG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUg
RWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRp
c3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtNyw2ICs3LDggQEAKICAqCiAgKiBD
b250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGlt
cGxlbWVudGF0aW9uCisgKiAgICAgQW5keSBDbGVtZW50IChHb1Bpdm90YWwsIEluYykgYWNsZW1l
bnRAZ29waXZvdGFsLmNvbSAtIENvbnRyaWJ1dGlvbnMgZm9yCisgKiAgICAgICAgIGJ1ZyA0MDcx
OTEgLSBbMS44XSBCaW5hcnkgYWNjZXNzIHN1cHBvcnQgZm9yIHR5cGUgYW5ub3RhdGlvbnMKICAq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29yZS5oaWVyYXJjaHk7CiAKQEAgLTE5LDYgKzIxLDcgQEAgaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5lbnYuSUJpbmFyeUZpZWxkOwogaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuSUJpbmFyeU1ldGhvZDsKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklCaW5hcnlOZXN0ZWRUeXBlOwogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuSUJpbmFyeVR5cGU7CitpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5JQmluYXJ5VHlwZUFubm90
YXRpb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuc2VhcmNoLmluZGV4
aW5nLklJbmRleENvbnN0YW50czsKIAogcHVibGljIGNsYXNzIEhpZXJhcmNoeUJpbmFyeVR5cGUg
aW1wbGVtZW50cyBJQmluYXJ5VHlwZSB7CkBAIC01MCw2ICs1MywxMSBAQCBwdWJsaWMgSGllcmFy
Y2h5QmluYXJ5VHlwZShpbnQgbW9kaWZpZXJzLCBjaGFyW10gcXVhbGlmaWNhdGlvbiwgY2hhcltd
IHNvdXJjZU5hbQogICovCiBwdWJsaWMgSUJpbmFyeUFubm90YXRpb25bXSBnZXRBbm5vdGF0aW9u
cygpIHsKIAlyZXR1cm4gbnVsbDsKK30vKioKKyAqIEBzZWUgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmVudi5JQmluYXJ5VHlwZQorICovCitwdWJsaWMgSUJpbmFyeVR5cGVBbm5v
dGF0aW9uW10gZ2V0VHlwZUFubm90YXRpb25zKCkgeworCXJldHVybiBudWxsOwogfQogcHVibGlj
IGNoYXJbXSBnZXRFbmNsb3NpbmdNZXRob2QoKSB7CiAJcmV0dXJuIG51bGw7Ci0tIAoxLjcuMTEu
MgoK
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>234080</attachid>
            <date>2013-08-04 15:35:00 -0400</date>
            <delta_ts>2013-08-04 15:35:59 -0400</delta_ts>
            <desc>minimally adjusted patch</desc>
            <filename>Bug-407191--18-Binary-access-support-for-type-annota.patch</filename>
            <type>text/plain</type>
            <size>68324</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0NsYXNzRmlsZVJlYWRl
clRlc3RfMV84LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9DbGFzc0ZpbGVS
ZWFkZXJUZXN0XzFfOC5qYXZhCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLjdh
Y2E2YzkKLS0tIC9kZXYvbnVsbAorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21w
aWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9D
bGFzc0ZpbGVSZWFkZXJUZXN0XzFfOC5qYXZhCkBAIC0wLDAgKzEsNTEzIEBACisvKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKgorICogQ29weXJpZ2h0IChjKSAyMDEzIEdvUGl2b3RhbCwgSW5jLiBBbGwg
UmlnaHRzIFJlc2VydmVkLgorICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFu
ZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscworICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVy
IHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCisgKiB3aGljaCBh
Y2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAorICogaHR0
cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisgKiBUaGlzIGlzIGFu
IGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVk
IHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBh
dmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRo
ZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpD
UC4KKyAqCisgKiBDb250cmlidXRvcnM6CisgKgkJQW5keSBDbGVtZW50IChHb1Bpdm90YWwsIElu
YykgYWNsZW1lbnRAZ29waXZvdGFsLmNvbSAtIENvbnRyaWJ1dGlvbnMgZm9yCisgKgkJCUJ1ZyA0
MDcxOTEgLSBbMS44XSBCaW5hcnkgYWNjZXNzIHN1cHBvcnQgZm9yIHR5cGUgYW5ub3RhdGlvbnMK
KyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqLworcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5jb21waWxlci5yZWdyZXNzaW9uOworCitpbXBvcnQganVuaXQuZnJhbWV3b3JrLlRlc3Q7
CisKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5DaGFyT3BlcmF0aW9uOwor
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jbGFzc2ZtdC5DbGFzc0Zp
bGVDb25zdGFudHM7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNs
YXNzZm10LkNsYXNzRmlsZVJlYWRlcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuY29kZWdlbi5Bbm5vdGF0aW9uVGFyZ2V0VHlwZUNvbnN0YW50czsKK2ltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklCaW5hcnlBbm5vdGF0aW9uOwor
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuSUJpbmFyeUVsZW1l
bnRWYWx1ZVBhaXI7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVu
di5JQmluYXJ5RmllbGQ7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LmVudi5JQmluYXJ5TWV0aG9kOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5lbnYuSUJpbmFyeVR5cGVBbm5vdGF0aW9uOworCitwdWJsaWMgY2xhc3MgQ2xhc3NGaWxl
UmVhZGVyVGVzdF8xXzggZXh0ZW5kcyBBYnN0cmFjdFJlZ3Jlc3Npb25UZXN0IHsKKwlzdGF0aWMg
eworCX0KKworCXB1YmxpYyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsKKwkJcmV0dXJuIGJ1aWxkTWlu
aW1hbENvbXBsaWFuY2VUZXN0U3VpdGUodGVzdENsYXNzKCksIEZfMV84KTsKKwl9CisJcHVibGlj
IHN0YXRpYyBDbGFzcyB0ZXN0Q2xhc3MoKSB7CisJCXJldHVybiBDbGFzc0ZpbGVSZWFkZXJUZXN0
XzFfOC5jbGFzczsKKwl9CisKKwlwdWJsaWMgQ2xhc3NGaWxlUmVhZGVyVGVzdF8xXzgoU3RyaW5n
IG5hbWUpIHsKKwkJc3VwZXIobmFtZSk7CisJfQorCQorCS8vIE5lZWRlZCB0byBydW4gdGVzdHMg
aW5kaXZpZHVhbGx5IGZyb20gSlVuaXQKKwlwcm90ZWN0ZWQgdm9pZCBzZXRVcCgpIHRocm93cyBF
eGNlcHRpb24geworCQlzdXBlci5zZXRVcCgpOworCQl0aGlzLmNvbXBsaWFuY2VMZXZlbCA9IENs
YXNzRmlsZUNvbnN0YW50cy5KREsxXzg7CisJfQorCQorCXB1YmxpYyB2b2lkIHRlc3QwMDFfY2xh
c3NUeXBlUGFyYW1ldGVyKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCVN0cmluZyBzb3VyY2UgPQor
CQkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi4qO1xuIiArCisJCQkicHVibGljIGNsYXNz
IFg8QEZvbyBUMSxAQmFyKGlpaT05OSkgVDI+IHt9XG4iICsKKwkJCSJAUmV0ZW50aW9uKFJldGVu
dGlvblBvbGljeS5DTEFTUylcbiIgKworCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0Up
XG4iICsKKwkJCSJAaW50ZXJmYWNlIEZvbyB7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJAUmV0ZW50
aW9uKFJldGVudGlvblBvbGljeS5DTEFTUylcbiIgKworCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUu
VFlQRV9VU0UpXG4iICsKKwkJCSJAaW50ZXJmYWNlIEJhciB7XG4iICsKKwkJCSIgICAgICAgIGlu
dCBpaWkoKSBkZWZhdWx0IC0xO1xuIiArCisJCQkifSI7CisKKwkJb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmNsYXNzZm10LkNsYXNzRmlsZVJlYWRlciBjbGFzc0ZpbGVSZWFkZXIg
PSBnZXRJbnRlcm5hbENsYXNzRmlsZSgiIiwgIlgiLCAiWCIsIHNvdXJjZSk7CisJCQorCQlJQmlu
YXJ5VHlwZUFubm90YXRpb25bXSB0eXBlQW5ub3RhdGlvbnMgPSBjbGFzc0ZpbGVSZWFkZXIuZ2V0
VHlwZUFubm90YXRpb25zKCk7CisJCWFzc2VydEVxdWFscygyLHR5cGVBbm5vdGF0aW9ucy5sZW5n
dGgpOworCQkKKwkJYXNzZXJ0RXF1YWxzKCJATEZvbzsgQ0xBU1NfVFlQRV9QQVJBTUVURVIodHlw
ZV9wYXJhbWV0ZXJfaW5kZXg9MCkiLCBwcmludFR5cGVBbm5vdGF0aW9uKHR5cGVBbm5vdGF0aW9u
c1swXSkpOworCQlhc3NlcnRFcXVhbHMoIkBMQmFyOyhpaWk9KGludCk5OSkgQ0xBU1NfVFlQRV9Q
QVJBTUVURVIodHlwZV9wYXJhbWV0ZXJfaW5kZXg9MSkiLCBwcmludFR5cGVBbm5vdGF0aW9uKHR5
cGVBbm5vdGF0aW9uc1sxXSkpOworCX0KKwkKKwlwdWJsaWMgdm9pZCB0ZXN0MDAxYV9jbGFzc1R5
cGVQYXJhbWV0ZXJEaWZmZXJpbmdSZXRlbnRpb25zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCVN0
cmluZyBzb3VyY2UgPQorCQkJImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi4qO1xuIiArCisJ
CQkicHVibGljIGNsYXNzIFg8QEZvbyBUMSxAQmFyKGlpaT05OSkgVDI+IHt9XG4iICsKKwkJCSJA
UmV0ZW50aW9uKFJldGVudGlvblBvbGljeS5SVU5USU1FKVxuIiArCisJCQkiQFRhcmdldChFbGVt
ZW50VHlwZS5UWVBFX1VTRSlcbiIgKworCQkJIkBpbnRlcmZhY2UgRm9vIHtcbiIgKworCQkJIn1c
biIgKworCQkJIkBSZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LkNMQVNTKVxuIiArCisJCQkiQFRh
cmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKworCQkJIkBpbnRlcmZhY2UgQmFyIHtcbiIg
KworCQkJIiAgICAgICAgaW50IGlpaSgpIGRlZmF1bHQgLTE7XG4iICsKKwkJCSJ9IjsKKworCQlv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuY2xhc3NmbXQuQ2xhc3NGaWxlUmVhZGVy
IGNsYXNzRmlsZVJlYWRlciA9IGdldEludGVybmFsQ2xhc3NGaWxlKCIiLCAiWCIsICJYIiwgc291
cmNlKTsKKwkJCisJCUlCaW5hcnlUeXBlQW5ub3RhdGlvbltdIHR5cGVBbm5vdGF0aW9ucyA9IGNs
YXNzRmlsZVJlYWRlci5nZXRUeXBlQW5ub3RhdGlvbnMoKTsKKwkJYXNzZXJ0RXF1YWxzKDIsdHlw
ZUFubm90YXRpb25zLmxlbmd0aCk7CisJCQorCQlhc3NlcnRFcXVhbHMoIkBMQmFyOyhpaWk9KGlu
dCk5OSkgQ0xBU1NfVFlQRV9QQVJBTUVURVIodHlwZV9wYXJhbWV0ZXJfaW5kZXg9MSkiLCBwcmlu
dFR5cGVBbm5vdGF0aW9uKHR5cGVBbm5vdGF0aW9uc1swXSkpOworCQlhc3NlcnRFcXVhbHMoIkBM
Rm9vOyBDTEFTU19UWVBFX1BBUkFNRVRFUih0eXBlX3BhcmFtZXRlcl9pbmRleD0wKSIsIHByaW50
VHlwZUFubm90YXRpb24odHlwZUFubm90YXRpb25zWzFdKSk7CisJfQorCQorCXB1YmxpYyB2b2lk
IHRlc3QwMDJfbWV0aG9kVHlwZVBhcmFtZXRlcigpIHRocm93cyBFeGNlcHRpb24geworCQlTdHJp
bmcgc291cmNlID0KKwkJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uKjtcbiIgKworCQkJ
InB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIgk8QEZvbyBUMSwgQEJhcigzKSBUMj4gdm9pZCBm
b28oVDEgdDEsVDIgdDIpIHt9XG4iICsgCisJCQkifVxuIiArCisJCQkiQFJldGVudGlvbihSZXRl
bnRpb25Qb2xpY3kuQ0xBU1MpXG4iICsKKwkJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNF
KVxuIiArCisJCQkiQGludGVyZmFjZSBGb28ge1xuIiArCisJCQkifVxuIiArCisJCQkiQFJldGVu
dGlvbihSZXRlbnRpb25Qb2xpY3kuQ0xBU1MpXG4iICsKKwkJCSJAVGFyZ2V0KEVsZW1lbnRUeXBl
LlRZUEVfVVNFKVxuIiArCisJCQkiQGludGVyZmFjZSBCYXIge1xuIiArCisJCQkiICAgICAgICBp
bnQgdmFsdWUoKSBkZWZhdWx0IC0xO1xuIiArCisJCQkifSI7CisKKwkJb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLmNsYXNzZm10LkNsYXNzRmlsZVJlYWRlciBjZnIgPSBnZXRJbnRl
cm5hbENsYXNzRmlsZSgiIiwgIlgiLCAiWCIsIHNvdXJjZSk7CisJCQorCQlJQmluYXJ5TWV0aG9k
IG1ldGhvZCA9IGdldE1ldGhvZChjZnIsImZvbyIpOworCQlhc3NlcnROb3ROdWxsKG1ldGhvZCk7
CisJCUlCaW5hcnlUeXBlQW5ub3RhdGlvbltdIHR5cGVBbm5vdGF0aW9ucyA9IG1ldGhvZC5nZXRU
eXBlQW5ub3RhdGlvbnMoKTsKKwkJYXNzZXJ0Tm90TnVsbCh0eXBlQW5ub3RhdGlvbnMpOworCQlh
c3NlcnRFcXVhbHMoMix0eXBlQW5ub3RhdGlvbnMubGVuZ3RoKTsKKwkJYXNzZXJ0RXF1YWxzKCJA
TEZvbzsgTUVUSE9EX1RZUEVfUEFSQU1FVEVSKHR5cGVfcGFyYW1ldGVyX2luZGV4PTApIixwcmlu
dFR5cGVBbm5vdGF0aW9uKHR5cGVBbm5vdGF0aW9uc1swXSkpOworCQlhc3NlcnRFcXVhbHMoIkBM
QmFyOyh2YWx1ZT0oaW50KTMpIE1FVEhPRF9UWVBFX1BBUkFNRVRFUih0eXBlX3BhcmFtZXRlcl9p
bmRleD0xKSIscHJpbnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlvbnNbMV0pKTsKKwl9CisJ
CisJcHVibGljIHZvaWQgdGVzdDAwM19jbGFzc0V4dGVuZHMoKSB0aHJvd3MgRXhjZXB0aW9uIHsK
KwkJdGhpcy5jb21wbGlhbmNlTGV2ZWwgPSBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV84OworCQlT
dHJpbmcgc291cmNlID0KKwkJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uKjtcbiIgKwor
CQkJInB1YmxpYyBjbGFzcyBYIGV4dGVuZHMgQEZvbyBAQmFyKGlpaT0zNCkgT2JqZWN0IGltcGxl
bWVudHMgamF2YS5pby5AQmFyKGlpaT0xKSBTZXJpYWxpemFibGUge1xuIiArCisJCQkifVxuIiAr
CisJCQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3kuQ0xBU1MpXG4iICsKKwkJCSJAVGFyZ2V0
KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCQkiQGludGVyZmFjZSBGb28ge1xuIiArCisJ
CQkifVxuIiArCisJCQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3kuQ0xBU1MpXG4iICsKKwkJ
CSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCQkiQGludGVyZmFjZSBCYXIg
e1xuIiArCisJCQkiICAgICAgICBpbnQgaWlpKCkgZGVmYXVsdCAtMTtcbiIgKworCQkJIn0iOwor
CisJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jbGFzc2ZtdC5DbGFzc0ZpbGVS
ZWFkZXIgY2xhc3NGaWxlUmVhZGVyID0gZ2V0SW50ZXJuYWxDbGFzc0ZpbGUoIiIsICJYIiwgIlgi
LCBzb3VyY2UpOworCQkKKwkJSUJpbmFyeVR5cGVBbm5vdGF0aW9uW10gdHlwZUFubm90YXRpb25z
ID0gY2xhc3NGaWxlUmVhZGVyLmdldFR5cGVBbm5vdGF0aW9ucygpOworCQlhc3NlcnRFcXVhbHMo
Myx0eXBlQW5ub3RhdGlvbnMubGVuZ3RoKTsKKwkJYXNzZXJ0RXF1YWxzKCJATEZvbzsgQ0xBU1Nf
RVhURU5EUyh0eXBlX2luZGV4PS0xKSIsIHByaW50VHlwZUFubm90YXRpb24odHlwZUFubm90YXRp
b25zWzBdKSk7CisJCWFzc2VydEVxdWFscygiQExCYXI7KGlpaT0oaW50KTM0KSBDTEFTU19FWFRF
TkRTKHR5cGVfaW5kZXg9LTEpIiwgcHJpbnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlvbnNb
MV0pKTsKKwkJYXNzZXJ0RXF1YWxzKCJATEJhcjsoaWlpPShpbnQpMSkgQ0xBU1NfRVhURU5EUyh0
eXBlX2luZGV4PTApIiwgcHJpbnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlvbnNbMl0pKTsK
Kwl9CisKKwlwdWJsaWMgdm9pZCB0ZXN0MDA0X2NsYXNzRXh0ZW5kcygpIHRocm93cyBFeGNlcHRp
b24geworCQlTdHJpbmcgc291cmNlID0KKwkJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24u
KjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIGV4dGVuZHMgWTxARm9vIFN0cmluZyxAQmFyIElu
dGVnZXI+IGltcGxlbWVudHMgSTxARm9vIFN0cmluZz4ge1xuIiArCisJCQkifVxuIiArCisJCQki
Y2xhc3MgWTxUMSwgVDI+IHt9XG4iICsKKwkJCSJpbnRlcmZhY2UgSTxUMT4ge31cbiIgKworCQkJ
IkBSZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LkNMQVNTKVxuIiArCisJCQkiQFRhcmdldChFbGVt
ZW50VHlwZS5UWVBFX1VTRSlcbiIgKworCQkJIkBpbnRlcmZhY2UgRm9vIHtcbiIgKworCQkJIn1c
biIgKworCQkJIkBSZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LkNMQVNTKVxuIiArCisJCQkiQFRh
cmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKworCQkJIkBpbnRlcmZhY2UgQmFyIHtcbiIg
KworCQkJIiAgICAgICAgaW50IGlpaSgpIGRlZmF1bHQgLTE7XG4iICsKKwkJCSJ9IjsKKworCQlv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuY2xhc3NmbXQuQ2xhc3NGaWxlUmVhZGVy
IGNsYXNzRmlsZVJlYWRlciA9IGdldEludGVybmFsQ2xhc3NGaWxlKCIiLCAiWCIsICJYIiwgc291
cmNlKTsKKwkJCisJCUlCaW5hcnlUeXBlQW5ub3RhdGlvbltdIHR5cGVBbm5vdGF0aW9ucyA9IGNs
YXNzRmlsZVJlYWRlci5nZXRUeXBlQW5ub3RhdGlvbnMoKTsKKwkJYXNzZXJ0RXF1YWxzKDMsdHlw
ZUFubm90YXRpb25zLmxlbmd0aCk7CisJCWFzc2VydEVxdWFscygiQExGb287IENMQVNTX0VYVEVO
RFModHlwZV9pbmRleD0tMSksIGxvY2F0aW9uPVtUWVBFX0FSR1VNRU5UKDApXSIsIHByaW50VHlw
ZUFubm90YXRpb24odHlwZUFubm90YXRpb25zWzBdKSk7CisJCWFzc2VydEVxdWFscygiQExCYXI7
IENMQVNTX0VYVEVORFModHlwZV9pbmRleD0tMSksIGxvY2F0aW9uPVtUWVBFX0FSR1VNRU5UKDEp
XSIsIHByaW50VHlwZUFubm90YXRpb24odHlwZUFubm90YXRpb25zWzFdKSk7CisJCWFzc2VydEVx
dWFscygiQExGb287IENMQVNTX0VYVEVORFModHlwZV9pbmRleD0wKSwgbG9jYXRpb249W1RZUEVf
QVJHVU1FTlQoMCldIiwgcHJpbnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlvbnNbMl0pKTsK
Kwl9CisJCisJcHVibGljIHZvaWQgdGVzdDAwNV9jbGFzc1R5cGVQYXJhbWV0ZXJCb3VuZCgpIHRo
cm93cyBFeGNlcHRpb24geworCQlTdHJpbmcgc291cmNlID0KKwkJCSJpbXBvcnQgamF2YS5sYW5n
LmFubm90YXRpb24uKjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYPFUsIFQgZXh0ZW5kcyBZPEBG
b28gU3RyaW5nIEBCYXIoMSlbXVtdQEJhcigyKVtdPiAmIEBCYXIoMykgQ2xvbmVhYmxlPiB7fVxu
IiArCisJCQkiY2xhc3MgWTxUPiB7fVxuIiArCisJCQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xp
Y3kuQ0xBU1MpXG4iICsKKwkJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJ
CQkiQGludGVyZmFjZSBGb28ge1xuIiArCisJCQkifVxuIiArCisJCQkiQFJldGVudGlvbihSZXRl
bnRpb25Qb2xpY3kuQ0xBU1MpXG4iICsKKwkJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNF
KVxuIiArCisJCQkiQGludGVyZmFjZSBCYXIge1xuIiArCisJCQkiICAgICAgICBpbnQgdmFsdWUo
KSBkZWZhdWx0IC0xO1xuIiArCisJCQkifSI7CisKKwkJb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmNsYXNzZm10LkNsYXNzRmlsZVJlYWRlciBjbGFzc0ZpbGVSZWFkZXIgPSBnZXRJ
bnRlcm5hbENsYXNzRmlsZSgiIiwgIlgiLCAiWCIsIHNvdXJjZSk7CisJCQorCQlJQmluYXJ5VHlw
ZUFubm90YXRpb25bXSB0eXBlQW5ub3RhdGlvbnMgPSBjbGFzc0ZpbGVSZWFkZXIuZ2V0VHlwZUFu
bm90YXRpb25zKCk7CisJCWFzc2VydEVxdWFscyg0LHR5cGVBbm5vdGF0aW9ucy5sZW5ndGgpOwor
CQlhc3NlcnRFcXVhbHMoIkBMRm9vOyBDTEFTU19UWVBFX1BBUkFNRVRFUl9CT1VORCh0eXBlX3Bh
cmFtZXRlcl9pbmRleD0xLCBib3VuZF9pbmRleD0wKSwgbG9jYXRpb249W1RZUEVfQVJHVU1FTlQo
MCksIEFSUkFZLCBBUlJBWSwgQVJSQVldIiwgcHJpbnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3Rh
dGlvbnNbMF0pKTsKKwkJYXNzZXJ0RXF1YWxzKCJATEJhcjsodmFsdWU9KGludCkxKSBDTEFTU19U
WVBFX1BBUkFNRVRFUl9CT1VORCh0eXBlX3BhcmFtZXRlcl9pbmRleD0xLCBib3VuZF9pbmRleD0w
KSwgbG9jYXRpb249W1RZUEVfQVJHVU1FTlQoMCldIiwgcHJpbnRUeXBlQW5ub3RhdGlvbih0eXBl
QW5ub3RhdGlvbnNbMV0pKTsKKwkJYXNzZXJ0RXF1YWxzKCJATEJhcjsodmFsdWU9KGludCkyKSBD
TEFTU19UWVBFX1BBUkFNRVRFUl9CT1VORCh0eXBlX3BhcmFtZXRlcl9pbmRleD0xLCBib3VuZF9p
bmRleD0wKSwgbG9jYXRpb249W1RZUEVfQVJHVU1FTlQoMCksIEFSUkFZLCBBUlJBWV0iLCBwcmlu
dFR5cGVBbm5vdGF0aW9uKHR5cGVBbm5vdGF0aW9uc1syXSkpOworCQlhc3NlcnRFcXVhbHMoIkBM
QmFyOyh2YWx1ZT0oaW50KTMpIENMQVNTX1RZUEVfUEFSQU1FVEVSX0JPVU5EKHR5cGVfcGFyYW1l
dGVyX2luZGV4PTEsIGJvdW5kX2luZGV4PTEpIiwgcHJpbnRUeXBlQW5ub3RhdGlvbih0eXBlQW5u
b3RhdGlvbnNbM10pKTsKKwl9CisJCisJcHVibGljIHZvaWQgdGVzdDAwNl9tZXRob2RUeXBlUGFy
YW1ldGVyQm91bmQoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwkJU3RyaW5nIHNvdXJjZSA9CisJCQki
aW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLio7XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWHtc
biIgKworCQkJIgk8VCBleHRlbmRzIFk8QEZvbyBaIEBCYXIoMSlbXVtdQEJhcigyKVtdPiAmIEBC
YXIoMykgQ2xvbmVhYmxlPiB2b2lkIGZvbyhUIHQpIHt9XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJj
bGFzcyBZPFQ+IHt9XG4iICsKKwkJCSJjbGFzcyBaIHt9XG4iICsKKwkJCSJAUmV0ZW50aW9uKFJl
dGVudGlvblBvbGljeS5DTEFTUylcbiIgKworCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9V
U0UpXG4iICsKKwkJCSJAaW50ZXJmYWNlIEZvbyB7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJAUmV0
ZW50aW9uKFJldGVudGlvblBvbGljeS5DTEFTUylcbiIgKworCQkJIkBUYXJnZXQoRWxlbWVudFR5
cGUuVFlQRV9VU0UpXG4iICsKKwkJCSJAaW50ZXJmYWNlIEJhciB7XG4iICsKKwkJCSIgICAgICAg
IGludCB2YWx1ZSgpIGRlZmF1bHQgLTE7XG4iICsKKwkJCSJ9IjsKKworCQlvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIuY2xhc3NmbXQuQ2xhc3NGaWxlUmVhZGVyIGNmciA9IGdldElu
dGVybmFsQ2xhc3NGaWxlKCIiLCAiWCIsICJYIiwgc291cmNlKTsKKworCQlJQmluYXJ5TWV0aG9k
IG1ldGhvZCA9IGdldE1ldGhvZChjZnIsImZvbyIpOworCQlhc3NlcnROb3ROdWxsKG1ldGhvZCk7
CisJCUlCaW5hcnlUeXBlQW5ub3RhdGlvbltdIHR5cGVBbm5vdGF0aW9ucyA9IG1ldGhvZC5nZXRU
eXBlQW5ub3RhdGlvbnMoKTsKKwkJYXNzZXJ0Tm90TnVsbCh0eXBlQW5ub3RhdGlvbnMpOworCQlh
c3NlcnRFcXVhbHMoNCx0eXBlQW5ub3RhdGlvbnMubGVuZ3RoKTsKKwkJYXNzZXJ0RXF1YWxzKCJA
TEZvbzsgTUVUSE9EX1RZUEVfUEFSQU1FVEVSX0JPVU5EKHR5cGVfcGFyYW1ldGVyX2luZGV4PTAs
IGJvdW5kX2luZGV4PTApLCBsb2NhdGlvbj1bVFlQRV9BUkdVTUVOVCgwKSwgQVJSQVksIEFSUkFZ
LCBBUlJBWV0iLHByaW50VHlwZUFubm90YXRpb24odHlwZUFubm90YXRpb25zWzBdKSk7CisJCWFz
c2VydEVxdWFscygiQExCYXI7KHZhbHVlPShpbnQpMSkgTUVUSE9EX1RZUEVfUEFSQU1FVEVSX0JP
VU5EKHR5cGVfcGFyYW1ldGVyX2luZGV4PTAsIGJvdW5kX2luZGV4PTApLCBsb2NhdGlvbj1bVFlQ
RV9BUkdVTUVOVCgwKV0iLCBwcmludFR5cGVBbm5vdGF0aW9uKHR5cGVBbm5vdGF0aW9uc1sxXSkp
OworCQlhc3NlcnRFcXVhbHMoIkBMQmFyOyh2YWx1ZT0oaW50KTIpIE1FVEhPRF9UWVBFX1BBUkFN
RVRFUl9CT1VORCh0eXBlX3BhcmFtZXRlcl9pbmRleD0wLCBib3VuZF9pbmRleD0wKSwgbG9jYXRp
b249W1RZUEVfQVJHVU1FTlQoMCksIEFSUkFZLCBBUlJBWV0iLCBwcmludFR5cGVBbm5vdGF0aW9u
KHR5cGVBbm5vdGF0aW9uc1syXSkpOworCQlhc3NlcnRFcXVhbHMoIkBMQmFyOyh2YWx1ZT0oaW50
KTMpIE1FVEhPRF9UWVBFX1BBUkFNRVRFUl9CT1VORCh0eXBlX3BhcmFtZXRlcl9pbmRleD0wLCBi
b3VuZF9pbmRleD0xKSIsIHByaW50VHlwZUFubm90YXRpb24odHlwZUFubm90YXRpb25zWzNdKSk7
CisJfQorCQorCXB1YmxpYyB2b2lkIHRlc3QwMDdfZmllbGQoKSB0aHJvd3MgRXhjZXB0aW9uIHsK
KwkJU3RyaW5nIHNvdXJjZSA9CisJCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLio7XG4i
ICsKKwkJCSJpbXBvcnQgamF2YS51dGlsLk1hcDtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYe1xu
IiArCisJCQkiCUBGb28gTWFwPEBCYXIoMSkgU3RyaW5nLCBAQmFyKDIpIFN0cmluZyBAQmFyKDMp
W10gQEJhcig0KVtdIEBCYXIoNSlbXT4gZmllbGQzO1xuIiArCisJCQkifVxuIiArCisJCQkiY2xh
c3MgWTxUPiB7fVxuIiArCisJCQkiY2xhc3MgWiB7fVxuIiArCisJCQkiQFJldGVudGlvbihSZXRl
bnRpb25Qb2xpY3kuQ0xBU1MpXG4iICsKKwkJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNF
KVxuIiArCisJCQkiQGludGVyZmFjZSBGb28ge1xuIiArCisJCQkifVxuIiArCisJCQkiQFJldGVu
dGlvbihSZXRlbnRpb25Qb2xpY3kuQ0xBU1MpXG4iICsKKwkJCSJAVGFyZ2V0KEVsZW1lbnRUeXBl
LlRZUEVfVVNFKVxuIiArCisJCQkiQGludGVyZmFjZSBCYXIge1xuIiArCisJCQkiICAgICAgICBp
bnQgdmFsdWUoKSBkZWZhdWx0IC0xO1xuIiArCisJCQkifSI7CisKKwkJb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLmNsYXNzZm10LkNsYXNzRmlsZVJlYWRlciBjZnIgPSBnZXRJbnRl
cm5hbENsYXNzRmlsZSgiIiwgIlgiLCAiWCIsIHNvdXJjZSk7CisKKwkJSUJpbmFyeUZpZWxkIGZp
ZWxkID0gZ2V0RmllbGQoY2ZyLCJmaWVsZDMiKTsKKwkJYXNzZXJ0Tm90TnVsbChmaWVsZCk7CisJ
CUlCaW5hcnlUeXBlQW5ub3RhdGlvbltdIHR5cGVBbm5vdGF0aW9ucyA9IGZpZWxkLmdldFR5cGVB
bm5vdGF0aW9ucygpOworCQlhc3NlcnROb3ROdWxsKHR5cGVBbm5vdGF0aW9ucyk7CisJCWFzc2Vy
dEVxdWFscyg2LHR5cGVBbm5vdGF0aW9ucy5sZW5ndGgpOworCQlhc3NlcnRFcXVhbHMoIkBMRm9v
OyBGSUVMRCIscHJpbnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlvbnNbMF0pKTsKKwkJYXNz
ZXJ0RXF1YWxzKCJATEJhcjsodmFsdWU9KGludCkxKSBGSUVMRCwgbG9jYXRpb249W1RZUEVfQVJH
VU1FTlQoMCldIiwgcHJpbnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlvbnNbMV0pKTsKKwkJ
YXNzZXJ0RXF1YWxzKCJATEJhcjsodmFsdWU9KGludCkyKSBGSUVMRCwgbG9jYXRpb249W1RZUEVf
QVJHVU1FTlQoMSksIEFSUkFZLCBBUlJBWSwgQVJSQVldIiwgcHJpbnRUeXBlQW5ub3RhdGlvbih0
eXBlQW5ub3RhdGlvbnNbMl0pKTsKKwkJYXNzZXJ0RXF1YWxzKCJATEJhcjsodmFsdWU9KGludCkz
KSBGSUVMRCwgbG9jYXRpb249W1RZUEVfQVJHVU1FTlQoMSldIiwgcHJpbnRUeXBlQW5ub3RhdGlv
bih0eXBlQW5ub3RhdGlvbnNbM10pKTsKKwkJYXNzZXJ0RXF1YWxzKCJATEJhcjsodmFsdWU9KGlu
dCk0KSBGSUVMRCwgbG9jYXRpb249W1RZUEVfQVJHVU1FTlQoMSksIEFSUkFZXSIsIHByaW50VHlw
ZUFubm90YXRpb24odHlwZUFubm90YXRpb25zWzRdKSk7CisJCWFzc2VydEVxdWFscygiQExCYXI7
KHZhbHVlPShpbnQpNSkgRklFTEQsIGxvY2F0aW9uPVtUWVBFX0FSR1VNRU5UKDEpLCBBUlJBWSwg
QVJSQVldIiwgcHJpbnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlvbnNbNV0pKTsKKwl9CisJ
CisJcHVibGljIHZvaWQgdGVzdDAwOF9tZXRob2RSZXR1cm4oKSB0aHJvd3MgRXhjZXB0aW9uIHsK
KwkJU3RyaW5nIHNvdXJjZSA9CisJCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLio7XG4i
ICsKKwkJCSJpbXBvcnQgamF2YS51dGlsLk1hcDtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYe1xu
IiArCisJCQkiCUBCYXIoMykgQEZvbyBpbnQgZm9vKCkge1xuIiArCisJCQkiCQlyZXR1cm4gMTtc
biIgKworCQkJIgl9XG4iICsgCisJCQkiCUBCYXIoMykgaW50IEBGb28gW10gZm9vMigpIHtcbiIg
KworCQkJIgkJcmV0dXJuIG51bGw7XG4iICsKKwkJCSIJfVxuIiArIAorCQkJIn1cbiIgKworCQkJ
IkBSZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LkNMQVNTKVxuIiArCisJCQkiQFRhcmdldChFbGVt
ZW50VHlwZS5UWVBFX1VTRSlcbiIgKworCQkJIkBpbnRlcmZhY2UgRm9vIHtcbiIgKworCQkJIn1c
biIgKworCQkJIkBSZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LkNMQVNTKVxuIiArCisJCQkiQFRh
cmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKworCQkJIkBpbnRlcmZhY2UgQmFyIHtcbiIg
KworCQkJIiAgICAgICAgaW50IHZhbHVlKCkgZGVmYXVsdCAtMTtcbiIgKworCQkJIn0iOworCisJ
CW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jbGFzc2ZtdC5DbGFzc0ZpbGVSZWFk
ZXIgY2ZyID0gZ2V0SW50ZXJuYWxDbGFzc0ZpbGUoIiIsICJYIiwgIlgiLCBzb3VyY2UpOworCisJ
CUlCaW5hcnlNZXRob2QgbWV0aG9kID0gZ2V0TWV0aG9kKGNmciwiZm9vIik7CisJCWFzc2VydE5v
dE51bGwobWV0aG9kKTsKKwkJSUJpbmFyeVR5cGVBbm5vdGF0aW9uW10gdHlwZUFubm90YXRpb25z
ID0gbWV0aG9kLmdldFR5cGVBbm5vdGF0aW9ucygpOworCQlhc3NlcnROb3ROdWxsKHR5cGVBbm5v
dGF0aW9ucyk7CisJCWFzc2VydEVxdWFscygyLHR5cGVBbm5vdGF0aW9ucy5sZW5ndGgpOworCQlh
c3NlcnRFcXVhbHMoIkBMQmFyOyh2YWx1ZT0oaW50KTMpIE1FVEhPRF9SRVRVUk4iLHByaW50VHlw
ZUFubm90YXRpb24odHlwZUFubm90YXRpb25zWzBdKSk7CisJCWFzc2VydEVxdWFscygiQExGb287
IE1FVEhPRF9SRVRVUk4iLCBwcmludFR5cGVBbm5vdGF0aW9uKHR5cGVBbm5vdGF0aW9uc1sxXSkp
OworCQkKKwkJbWV0aG9kID0gZ2V0TWV0aG9kKGNmciwiZm9vMiIpOworCQlhc3NlcnROb3ROdWxs
KG1ldGhvZCk7CisJCXR5cGVBbm5vdGF0aW9ucyA9IG1ldGhvZC5nZXRUeXBlQW5ub3RhdGlvbnMo
KTsKKwkJYXNzZXJ0Tm90TnVsbCh0eXBlQW5ub3RhdGlvbnMpOworCQlhc3NlcnRFcXVhbHMoMix0
eXBlQW5ub3RhdGlvbnMubGVuZ3RoKTsKKwkJYXNzZXJ0RXF1YWxzKCJATEJhcjsodmFsdWU9KGlu
dCkzKSBNRVRIT0RfUkVUVVJOLCBsb2NhdGlvbj1bQVJSQVldIixwcmludFR5cGVBbm5vdGF0aW9u
KHR5cGVBbm5vdGF0aW9uc1swXSkpOworCQlhc3NlcnRFcXVhbHMoIkBMRm9vOyBNRVRIT0RfUkVU
VVJOIiwgcHJpbnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlvbnNbMV0pKTsKKwl9CisJCisJ
cHVibGljIHZvaWQgdGVzdDAwOV9tZXRob2RSZWNlaXZlcigpIHRocm93cyBFeGNlcHRpb24gewor
CQlTdHJpbmcgc291cmNlID0KKwkJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uKjtcbiIg
KworCQkJImltcG9ydCBqYXZhLnV0aWwuTWFwO1xuIiArCisJCQkicHVibGljIGNsYXNzIFh7XG4i
ICsKKwkJCSIJdm9pZCBmb28oQEJhcigzKSBYIHRoaXMpIHt9XG4iICsgCisJCQkifVxuIiArCisJ
CQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3kuQ0xBU1MpXG4iICsKKwkJCSJAVGFyZ2V0KEVs
ZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCQkiQGludGVyZmFjZSBGb28ge1xuIiArCisJCQki
fVxuIiArCisJCQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3kuQ0xBU1MpXG4iICsKKwkJCSJA
VGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCQkiQGludGVyZmFjZSBCYXIge1xu
IiArCisJCQkiICAgICAgICBpbnQgdmFsdWUoKSBkZWZhdWx0IC0xO1xuIiArCisJCQkifSI7CisK
KwkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNsYXNzZm10LkNsYXNzRmlsZVJl
YWRlciBjZnIgPSBnZXRJbnRlcm5hbENsYXNzRmlsZSgiIiwgIlgiLCAiWCIsIHNvdXJjZSk7CisK
KwkJSUJpbmFyeU1ldGhvZCBtZXRob2QgPSBnZXRNZXRob2QoY2ZyLCJmb28iKTsKKwkJYXNzZXJ0
Tm90TnVsbChtZXRob2QpOworCQlJQmluYXJ5VHlwZUFubm90YXRpb25bXSB0eXBlQW5ub3RhdGlv
bnMgPSBtZXRob2QuZ2V0VHlwZUFubm90YXRpb25zKCk7CisJCWFzc2VydE5vdE51bGwodHlwZUFu
bm90YXRpb25zKTsKKwkJYXNzZXJ0RXF1YWxzKDEsdHlwZUFubm90YXRpb25zLmxlbmd0aCk7CisJ
CWFzc2VydEVxdWFscygiQExCYXI7KHZhbHVlPShpbnQpMykgTUVUSE9EX1JFQ0VJVkVSIiwgcHJp
bnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlvbnNbMF0pKTsKKwl9CisJCisJcHVibGljIHZv
aWQgdGVzdDAxMF9tZXRob2RGb3JtYWxQYXJhbWV0ZXIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwkJ
U3RyaW5nIHNvdXJjZSA9CisJCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLio7XG4iICsK
KwkJCSJpbXBvcnQgamF2YS51dGlsLk1hcDtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYe1xuIiAr
CisJCQkiCXZvaWQgZm9vKEBCYXIoMykgU3RyaW5nIHMsIEBGb28gaW50IGkpIHt9XG4iICsgCisJ
CQkifVxuIiArCisJCQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3kuQ0xBU1MpXG4iICsKKwkJ
CSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCQkiQGludGVyZmFjZSBGb28g
e1xuIiArCisJCQkifVxuIiArCisJCQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3kuQ0xBU1Mp
XG4iICsKKwkJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCQkiQGludGVy
ZmFjZSBCYXIge1xuIiArCisJCQkiICAgICAgICBpbnQgdmFsdWUoKSBkZWZhdWx0IC0xO1xuIiAr
CisJCQkifSI7CisKKwkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNsYXNzZm10
LkNsYXNzRmlsZVJlYWRlciBjZnIgPSBnZXRJbnRlcm5hbENsYXNzRmlsZSgiIiwgIlgiLCAiWCIs
IHNvdXJjZSk7CisKKwkJSUJpbmFyeU1ldGhvZCBtZXRob2QgPSBnZXRNZXRob2QoY2ZyLCJmb28i
KTsKKwkJYXNzZXJ0Tm90TnVsbChtZXRob2QpOworCQlJQmluYXJ5VHlwZUFubm90YXRpb25bXSB0
eXBlQW5ub3RhdGlvbnMgPSBtZXRob2QuZ2V0VHlwZUFubm90YXRpb25zKCk7CisJCWFzc2VydE5v
dE51bGwodHlwZUFubm90YXRpb25zKTsKKwkJYXNzZXJ0RXF1YWxzKDIsdHlwZUFubm90YXRpb25z
Lmxlbmd0aCk7CisJCWFzc2VydEVxdWFscygiQExCYXI7KHZhbHVlPShpbnQpMykgTUVUSE9EX0ZP
Uk1BTF9QQVJBTUVURVIobWV0aG9kX2Zvcm1hbF9wYXJhbWV0ZXJfaW5kZXg9MCkiLHByaW50VHlw
ZUFubm90YXRpb24odHlwZUFubm90YXRpb25zWzBdKSk7CisJCWFzc2VydEVxdWFscygiQExGb287
IE1FVEhPRF9GT1JNQUxfUEFSQU1FVEVSKG1ldGhvZF9mb3JtYWxfcGFyYW1ldGVyX2luZGV4PTEp
IixwcmludFR5cGVBbm5vdGF0aW9uKHR5cGVBbm5vdGF0aW9uc1sxXSkpOworCX0KKwkKKwlwdWJs
aWMgdm9pZCB0ZXN0MDExX3Rocm93cygpIHRocm93cyBFeGNlcHRpb24geworCQlTdHJpbmcgc291
cmNlID0KKwkJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uKjtcbiIgKworCQkJImltcG9y
dCBqYXZhLnV0aWwuTWFwO1xuIiArCisJCQkicHVibGljIGNsYXNzIFh7XG4iICsKKwkJCSIJdm9p
ZCBmb28oKSB0aHJvd3MgQEZvbyBFeGNlcHRpb24sIEBCYXIoMSkgVGhyb3dhYmxlIHt9XG4iICsg
CisJCQkifVxuIiArCisJCQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3kuQ0xBU1MpXG4iICsK
KwkJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCQkiQGludGVyZmFjZSBG
b28ge1xuIiArCisJCQkifVxuIiArCisJCQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3kuQ0xB
U1MpXG4iICsKKwkJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCQkiQGlu
dGVyZmFjZSBCYXIge1xuIiArCisJCQkiICAgICAgICBpbnQgdmFsdWUoKSBkZWZhdWx0IC0xO1xu
IiArCisJCQkifSI7CisKKwkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNsYXNz
Zm10LkNsYXNzRmlsZVJlYWRlciBjZnIgPSBnZXRJbnRlcm5hbENsYXNzRmlsZSgiIiwgIlgiLCAi
WCIsIHNvdXJjZSk7CisKKwkJSUJpbmFyeU1ldGhvZCBtZXRob2QgPSBnZXRNZXRob2QoY2ZyLCJm
b28iKTsKKwkJYXNzZXJ0Tm90TnVsbChtZXRob2QpOworCQlJQmluYXJ5VHlwZUFubm90YXRpb25b
XSB0eXBlQW5ub3RhdGlvbnMgPSBtZXRob2QuZ2V0VHlwZUFubm90YXRpb25zKCk7CisJCWFzc2Vy
dE5vdE51bGwodHlwZUFubm90YXRpb25zKTsKKwkJYXNzZXJ0RXF1YWxzKDIsdHlwZUFubm90YXRp
b25zLmxlbmd0aCk7CisJCWFzc2VydEVxdWFscygiQExGb287IFRIUk9XUyh0aHJvd3NfdHlwZV9p
bmRleD0wKSIscHJpbnRUeXBlQW5ub3RhdGlvbih0eXBlQW5ub3RhdGlvbnNbMF0pKTsKKwkJYXNz
ZXJ0RXF1YWxzKCJATEJhcjsodmFsdWU9KGludCkxKSBUSFJPV1ModGhyb3dzX3R5cGVfaW5kZXg9
MSkiLHByaW50VHlwZUFubm90YXRpb24odHlwZUFubm90YXRpb25zWzFdKSk7CisJfQorCisJLyoq
CisJICogUHJvZHVjZSBhIG5pY2VseSBmb3JtYXR0ZWQgdHlwZSBhbm5vdGF0aW9uIGZvciB0ZXN0
aW5nLiBFeGVyY2lzZXMgdGhlIEFQSSBmb3IgdHlwZSBhbm5vdGF0aW9ucy4KKwkgKiBPdXRwdXQg
ZXhhbXBsZXM6PGJyPgorCSAqIDx0dD5ARm9vKGlkPTM0KSBDTEFTU19FWFRFTkRTLCB0eXBlX2lu
ZGV4PS0xLCBsb2NhdGlvbj1bQVJSQVksIElOTkVSX1RZUEUsIFRZUEVfQVJHVU1FTlQoMCldPC90
dD48YnI+CisJICovCisJcHJpdmF0ZSBTdHJpbmcgcHJpbnRUeXBlQW5ub3RhdGlvbihJQmluYXJ5
VHlwZUFubm90YXRpb24gdHlwZUFubm90YXRpb24pIHsKKwkJU3RyaW5nQnVmZmVyIHNiID0gbmV3
IFN0cmluZ0J1ZmZlcigpOworCQkvLyBUaGUgYW5ub3RhdGlvbjoKKwkJSUJpbmFyeUFubm90YXRp
b24gYW5ub3RhdGlvbiA9IHR5cGVBbm5vdGF0aW9uLmdldEFubm90YXRpb24oKTsKKwkJc2IuYXBw
ZW5kKCdAJykuYXBwZW5kKGFubm90YXRpb24uZ2V0VHlwZU5hbWUoKSk7CisJCUlCaW5hcnlFbGVt
ZW50VmFsdWVQYWlyW10gcGFpcnMgPSBhbm5vdGF0aW9uLmdldEVsZW1lbnRWYWx1ZVBhaXJzKCk7
CisJCWlmIChwYWlycy5sZW5ndGggIT0gMCkgeworCQkJc2IuYXBwZW5kKCcoJyk7CisJCQlmb3Ig
KGludCBpID0gMDsgaSA8IHBhaXJzLmxlbmd0aDsgaSsrKSB7CisJCQkJaWYgKGkgPiAwKSB7CisJ
CQkJCXNiLmFwcGVuZCgnLCcpOworCQkJCX0KKwkJCQlzYi5hcHBlbmQocGFpcnNbaV0uZ2V0TmFt
ZSgpKS5hcHBlbmQoJz0nKS5hcHBlbmQocGFpcnNbaV0uZ2V0VmFsdWUoKSk7CisJCQl9CisJCQlz
Yi5hcHBlbmQoJyknKTsKKwkJfQorCQlzYi5hcHBlbmQoJyAnKTsKKwkJCisJCS8vIHRhcmdldCB0
eXBlCisJCWludCB0YXJnZXRUeXBlID0gdHlwZUFubm90YXRpb24uZ2V0VGFyZ2V0VHlwZSgpOwor
CQlzd2l0Y2ggKHRhcmdldFR5cGUpIHsKKwkJCWNhc2UgQW5ub3RhdGlvblRhcmdldFR5cGVDb25z
dGFudHMuQ0xBU1NfVFlQRV9QQVJBTUVURVI6CisJCQkJc2IuYXBwZW5kKCJDTEFTU19UWVBFX1BB
UkFNRVRFUih0eXBlX3BhcmFtZXRlcl9pbmRleD0iKS5hcHBlbmQodHlwZUFubm90YXRpb24uZ2V0
VHlwZVBhcmFtZXRlckluZGV4KCkpLmFwcGVuZCgnKScpOworCQkJCWJyZWFrOworCQkJY2FzZSBB
bm5vdGF0aW9uVGFyZ2V0VHlwZUNvbnN0YW50cy5NRVRIT0RfVFlQRV9QQVJBTUVURVI6CisJCQkJ
c2IuYXBwZW5kKCJNRVRIT0RfVFlQRV9QQVJBTUVURVIodHlwZV9wYXJhbWV0ZXJfaW5kZXg9Iiku
YXBwZW5kKHR5cGVBbm5vdGF0aW9uLmdldFR5cGVQYXJhbWV0ZXJJbmRleCgpKS5hcHBlbmQoJykn
KTsKKwkJCQlicmVhazsKKwkJCWNhc2UgQW5ub3RhdGlvblRhcmdldFR5cGVDb25zdGFudHMuQ0xB
U1NfRVhURU5EUzoKKwkJCQlzYi5hcHBlbmQoIkNMQVNTX0VYVEVORFModHlwZV9pbmRleD0iKS5h
cHBlbmQoKHNob3J0KXR5cGVBbm5vdGF0aW9uLmdldFN1cGVydHlwZUluZGV4KCkpLmFwcGVuZCgn
KScpOworCQkJCWJyZWFrOworCQkJY2FzZSBBbm5vdGF0aW9uVGFyZ2V0VHlwZUNvbnN0YW50cy5D
TEFTU19UWVBFX1BBUkFNRVRFUl9CT1VORDoKKwkJCQlzYi5hcHBlbmQoIkNMQVNTX1RZUEVfUEFS
QU1FVEVSX0JPVU5EKHR5cGVfcGFyYW1ldGVyX2luZGV4PSIpLgorCQkJCQlhcHBlbmQodHlwZUFu
bm90YXRpb24uZ2V0VHlwZVBhcmFtZXRlckluZGV4KCkpLgorCQkJCQlhcHBlbmQoIiwgYm91bmRf
aW5kZXg9IikuYXBwZW5kKHR5cGVBbm5vdGF0aW9uLmdldEJvdW5kSW5kZXgoKSkuCisJCQkJCWFw
cGVuZCgnKScpOworCQkJCWJyZWFrOworCQkJY2FzZSBBbm5vdGF0aW9uVGFyZ2V0VHlwZUNvbnN0
YW50cy5NRVRIT0RfVFlQRV9QQVJBTUVURVJfQk9VTkQ6CisJCQkJc2IuYXBwZW5kKCJNRVRIT0Rf
VFlQRV9QQVJBTUVURVJfQk9VTkQodHlwZV9wYXJhbWV0ZXJfaW5kZXg9IikuCisJCQkJCWFwcGVu
ZCh0eXBlQW5ub3RhdGlvbi5nZXRUeXBlUGFyYW1ldGVySW5kZXgoKSkuCisJCQkJCWFwcGVuZCgi
LCBib3VuZF9pbmRleD0iKS5hcHBlbmQodHlwZUFubm90YXRpb24uZ2V0Qm91bmRJbmRleCgpKS4K
KwkJCQkJYXBwZW5kKCcpJyk7CisJCQkJYnJlYWs7CisJCQljYXNlIEFubm90YXRpb25UYXJnZXRU
eXBlQ29uc3RhbnRzLkZJRUxEOgorCQkJCXNiLmFwcGVuZCgiRklFTEQiKTsKKwkJCQlicmVhazsK
KwkJCWNhc2UgQW5ub3RhdGlvblRhcmdldFR5cGVDb25zdGFudHMuTUVUSE9EX1JFVFVSTjoKKwkJ
CQlzYi5hcHBlbmQoIk1FVEhPRF9SRVRVUk4iKTsKKwkJCQlicmVhazsKKwkJCWNhc2UgQW5ub3Rh
dGlvblRhcmdldFR5cGVDb25zdGFudHMuTUVUSE9EX1JFQ0VJVkVSOgorCQkJCXNiLmFwcGVuZCgi
TUVUSE9EX1JFQ0VJVkVSIik7CisJCQkJYnJlYWs7CisJCQljYXNlIEFubm90YXRpb25UYXJnZXRU
eXBlQ29uc3RhbnRzLk1FVEhPRF9GT1JNQUxfUEFSQU1FVEVSIDoKKwkJCQlzYi5hcHBlbmQoIk1F
VEhPRF9GT1JNQUxfUEFSQU1FVEVSKG1ldGhvZF9mb3JtYWxfcGFyYW1ldGVyX2luZGV4PSIpLgor
CQkJCQlhcHBlbmQodHlwZUFubm90YXRpb24uZ2V0TWV0aG9kRm9ybWFsUGFyYW1ldGVySW5kZXgo
KSkuYXBwZW5kKCcpJyk7CisJCQkJYnJlYWs7CisJCQljYXNlIEFubm90YXRpb25UYXJnZXRUeXBl
Q29uc3RhbnRzLlRIUk9XUyA6CisJCQkJc2IuYXBwZW5kKCJUSFJPV1ModGhyb3dzX3R5cGVfaW5k
ZXg9IikuCisJCQkJCWFwcGVuZCh0eXBlQW5ub3RhdGlvbi5nZXRUaHJvd3NUeXBlSW5kZXgoKSku
YXBwZW5kKCcpJyk7CisJCQkJYnJlYWs7CisJCQlkZWZhdWx0OiB0aHJvdyBuZXcgSWxsZWdhbFN0
YXRlRXhjZXB0aW9uKCJueWkgIit0YXJnZXRUeXBlKTsKKwkJfQorCQkKKwkJLy8gbG9jYXRpb24K
KwkJaW50W10gdHlwZXBhdGggPSB0eXBlQW5ub3RhdGlvbi5nZXRUeXBlUGF0aCgpOworCQkKKwkJ
aWYgKHR5cGVwYXRoICE9IElCaW5hcnlUeXBlQW5ub3RhdGlvbi5OT19UWVBFX1BBVEgpIHsKKwkJ
CXNiLmFwcGVuZCgiLCBsb2NhdGlvbj1bIik7IC8vJE5PTi1OTFMtMSQKKwkJCWZvciAoaW50IGkg
PSAwLCBtYXggPSB0eXBlcGF0aC5sZW5ndGg7IGkgPCBtYXg7IGkgKz0gMikgeworCQkJCWlmIChp
ID4gMCkgeworCQkJCQlzYi5hcHBlbmQoIiwgIik7IC8vJE5PTi1OTFMtMSQKKwkJCQl9CisJCQkJ
c3dpdGNoICh0eXBlcGF0aFtpXSkgeworCQkJCQljYXNlIDA6CisJCQkJCQlzYi5hcHBlbmQoIkFS
UkFZIik7IC8vJE5PTi1OTFMtMSQKKwkJCQkJCWJyZWFrOworCQkJCQljYXNlIDE6CisJCQkJCQlz
Yi5hcHBlbmQoIklOTkVSX1RZUEUiKTsgLy8kTk9OLU5MUy0xJAorCQkJCQkJYnJlYWs7CisJCQkJ
CWNhc2UgMjoKKwkJCQkJCXNiLmFwcGVuZCgiV0lMRENBUkQiKTsgLy8kTk9OLU5MUy0xJAorCQkJ
CQkJYnJlYWs7CisJCQkJCWNhc2UgMzoKKwkJCQkJCXNiLmFwcGVuZCgiVFlQRV9BUkdVTUVOVCgi
KS5hcHBlbmQodHlwZXBhdGhbaSsxXSkuYXBwZW5kKCcpJyk7IC8vJE5PTi1OTFMtMSQKKwkJCQkJ
CWJyZWFrOworCQkJCX0KKwkJCX0KKwkJCXNiLmFwcGVuZCgnXScpOworCQl9CisJCXJldHVybiBz
Yi50b1N0cmluZygpOworCX0KKworCXByaXZhdGUgSUJpbmFyeU1ldGhvZCBnZXRNZXRob2QoQ2xh
c3NGaWxlUmVhZGVyIGNmcixTdHJpbmcgbWV0aG9kbmFtZSkgeworCQlJQmluYXJ5TWV0aG9kW10g
bWV0aG9kcyA9IGNmci5nZXRNZXRob2RzKCk7CisJCWlmIChtZXRob2RzID09IG51bGwpIHsKKwkJ
CXJldHVybiBudWxsOworCQl9CisJCWNoYXJbXSBtZXRob2RuYW1lQXNDaGFyQXJyYXkgPSBtZXRo
b2RuYW1lLnRvQ2hhckFycmF5KCk7CisJCWZvciAoaW50IGkgPSAwLCBtYXggPSBtZXRob2RzLmxl
bmd0aDsgaSA8IG1heDsgaSsrKSB7CisJCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMobWV0aG9k
c1tpXS5nZXRTZWxlY3RvcigpLG1ldGhvZG5hbWVBc0NoYXJBcnJheSkpIHsKKwkJCQlyZXR1cm4g
bWV0aG9kc1tpXTsKKwkJCX0KKwkJfQorCQlyZXR1cm4gbnVsbDsKKwl9CisKKwlwcml2YXRlIElC
aW5hcnlGaWVsZCBnZXRGaWVsZChDbGFzc0ZpbGVSZWFkZXIgY2ZyLFN0cmluZyBmaWVsZG5hbWUp
IHsKKwkJSUJpbmFyeUZpZWxkW10gZmllbGRzID0gY2ZyLmdldEZpZWxkcygpOworCQlpZiAoZmll
bGRzID09IG51bGwpIHsKKwkJCXJldHVybiBudWxsOworCQl9CisJCWNoYXJbXSBmaWVsZG5hbWVB
c0NoYXJBcnJheSA9IGZpZWxkbmFtZS50b0NoYXJBcnJheSgpOworCQlmb3IgKGludCBpID0gMCwg
bWF4ID0gZmllbGRzLmxlbmd0aDsgaSA8IG1heDsgaSsrKSB7CisJCQlpZiAoQ2hhck9wZXJhdGlv
bi5lcXVhbHMoZmllbGRzW2ldLmdldE5hbWUoKSxmaWVsZG5hbWVBc0NoYXJBcnJheSkpIHsKKwkJ
CQlyZXR1cm4gZmllbGRzW2ldOworCQkJfQorCQl9CisJCXJldHVybiBudWxsOworCX0KKwkKK30K
ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Rlc3RBbGwuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Rlc3RBbGwuamF2YQppbmRleCBhMmQxNWE2
Li5lNDQ1ZWU5IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxl
ci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9UZXN0
QWxsLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vVGVzdEFsbC5qYXZh
CkBAIC0xNCw4ICsxNCw4IEBACiAgKiAgICAgU3RlcGhhbiBIZXJybWFubiAtIENvbnRyaWJ1dGlv
bnMgZm9yCiAgKgkJCQkJCQkJYnVnIDE4NjM0MiAtIFtjb21waWxlcl1bbnVsbF0gVXNpbmcgYW5u
b3RhdGlvbnMgZm9yIG51bGwgY2hlY2tpbmcKICAqCQkJCQkJCQlidWcgMzU4OTAzIC0gRmlsdGVy
IHByYWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsgd2FybmluZ3MKLSAqICAgICAg
ICBBbmR5IENsZW1lbnQgLSBDb250cmlidXRpb25zIGZvcgotICogICAgICAgICAgICAgICAgICAg
ICAgICAgIEJ1ZyAzODM2MjQgLSBbMS44XVtjb21waWxlcl0gUmV2aXZlIGNvZGUgZ2VuZXJhdGlv
biBzdXBwb3J0IGZvciB0eXBlIGFubm90YXRpb25zIChmcm9tIE9saXZpZXIncyB3b3JrKQorICog
ICAgICAgIEFuZHkgQ2xlbWVudCAoR29QaXZvdGFsLCBJbmMpIGFjbGVtZW50QGdvcGl2b3RhbC5j
b20gLSBDb250cmlidXRpb25zIGZvcgorICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBi
dWcgNDA3MTkxIC0gWzEuOF0gQmluYXJ5IGFjY2VzcyBzdXBwb3J0IGZvciB0eXBlIGFubm90YXRp
b25zCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMuY29tcGlsZXIucmVncmVzc2lvbjsKIApAQCAtMTM3LDYgKzEzNyw3IEBACiAJc2lu
Y2VfMV84LmFkZChGbG93QW5hbHlzaXNUZXN0OC5jbGFzcyk7CiAJc2luY2VfMV84LmFkZChUeXBl
QW5ub3RhdGlvblRlc3QuY2xhc3MpOwogCXNpbmNlXzFfOC5hZGQoRGVwcmVjYXRlZDE4VGVzdC5j
bGFzcyk7CisJc2luY2VfMV84LmFkZChDbGFzc0ZpbGVSZWFkZXJUZXN0XzFfOC5jbGFzcyk7CiAK
IAkvLyBCdWlsZCBmaW5hbCB0ZXN0IHN1aXRlCiAJVGVzdFN1aXRlIGFsbCA9IG5ldyBUZXN0U3Vp
dGUoVGVzdEFsbC5jbGFzcy5nZXROYW1lKCkpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NsYXNzZm10
L0NsYXNzRmlsZVJlYWRlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NsYXNzZm10L0NsYXNzRmlsZVJlYWRlci5q
YXZhCmluZGV4IGZhMmZiMGYuLmY2M2RlNWQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jbGFzc2ZtdC9D
bGFzc0ZpbGVSZWFkZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY2xhc3NmbXQvQ2xhc3NGaWxlUmVhZGVy
LmphdmEKQEAgLTEsMTMgKzEsMTkgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5
cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5
cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwg
cmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJp
YWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNl
IFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0
aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2Fs
L2VwbC12MTAuaHRtbAogICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFy
bHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11
bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQg
ZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUg
d2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgorICoKICAqIENvbnRyaWJ1dG9yczoK
ICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24K
ICAqICAgICBTdGVwaGFuIEhlcnJtYW5uIC0gQ29udHJpYnV0aW9uIGZvciBidWcgMzY1OTkyIC0g
W2J1aWxkZXJdIFtudWxsXSBDaGFuZ2Ugb2YgbnVsbG5lc3MgZm9yIGEgcGFyYW1ldGVyIGRvZXNu
J3QgdHJpZ2dlciBhIGJ1aWxkIGZvciB0aGUgZmlsZXMgdGhhdCBjYWxsIHRoZSBtZXRob2QKKyAq
ICAgICBBbmR5IENsZW1lbnQgKEdvUGl2b3RhbCwgSW5jKSBhY2xlbWVudEBnb3Bpdm90YWwuY29t
IC0gQ29udHJpYnV0aW9ucyBmb3IKKyAqICAgICAgICAgYnVnIDQwNzE5MSAtIFsxLjhdIEJpbmFy
eSBhY2Nlc3Mgc3VwcG9ydCBmb3IgdHlwZSBhbm5vdGF0aW9ucwogICoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jbGFzc2Zt
dDsKIApAQCAtMzIsNiArMzgsNyBAQAogCXByaXZhdGUgaW50IGNsYXNzTmFtZUluZGV4OwogCXBy
aXZhdGUgaW50IGNvbnN0YW50UG9vbENvdW50OwogCXByaXZhdGUgQW5ub3RhdGlvbkluZm9bXSBh
bm5vdGF0aW9uczsKKwlwcml2YXRlIFR5cGVBbm5vdGF0aW9uSW5mb1tdIHR5cGVBbm5vdGF0aW9u
czsKIAlwcml2YXRlIEZpZWxkSW5mb1tdIGZpZWxkczsKIAlwcml2YXRlIGludCBmaWVsZHNDb3Vu
dDsKIApAQCAtMzU2LDYgKzM2MywxMCBAQAogCQkJCQkJZGVjb2RlQW5ub3RhdGlvbnMocmVhZE9m
ZnNldCwgdHJ1ZSk7CiAJCQkJCX0gZWxzZSBpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoYXR0cmli
dXRlTmFtZSwgQXR0cmlidXRlTmFtZXNDb25zdGFudHMuUnVudGltZUludmlzaWJsZUFubm90YXRp
b25zTmFtZSkpIHsKIAkJCQkJCWRlY29kZUFubm90YXRpb25zKHJlYWRPZmZzZXQsIGZhbHNlKTsK
KwkJCQkJfSBlbHNlIGlmIChDaGFyT3BlcmF0aW9uLmVxdWFscyhhdHRyaWJ1dGVOYW1lLCBBdHRy
aWJ1dGVOYW1lc0NvbnN0YW50cy5SdW50aW1lVmlzaWJsZVR5cGVBbm5vdGF0aW9uc05hbWUpKSB7
CisJCQkJCQlkZWNvZGVUeXBlQW5ub3RhdGlvbnMocmVhZE9mZnNldCwgdHJ1ZSk7CisJCQkJCX0g
ZWxzZSBpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoYXR0cmlidXRlTmFtZSwgQXR0cmlidXRlTmFt
ZXNDb25zdGFudHMuUnVudGltZUludmlzaWJsZVR5cGVBbm5vdGF0aW9uc05hbWUpKSB7CisJCQkJ
CQlkZWNvZGVUeXBlQW5ub3RhdGlvbnMocmVhZE9mZnNldCwgZmFsc2UpOwogCQkJCQl9CiAJCQkJ
CWJyZWFrOwogCQkJCWNhc2UgJ00nIDoKQEAgLTQzNCw2ICs0NDUsMzAgQEAKIAl9CiB9CiAKK3By
aXZhdGUgdm9pZCBkZWNvZGVUeXBlQW5ub3RhdGlvbnMoaW50IG9mZnNldCwgYm9vbGVhbiBydW50
aW1lVmlzaWJsZSkgeworCWludCBudW1iZXJPZkFubm90YXRpb25zID0gdTJBdChvZmZzZXQgKyA2
KTsKKwlpZiAobnVtYmVyT2ZBbm5vdGF0aW9ucyA+IDApIHsKKwkJaW50IHJlYWRPZmZzZXQgPSBv
ZmZzZXQgKyA4OworCQlUeXBlQW5ub3RhdGlvbkluZm9bXSBuZXdJbmZvcyA9IG51bGw7CisJCW5l
d0luZm9zID0gbmV3IFR5cGVBbm5vdGF0aW9uSW5mb1tudW1iZXJPZkFubm90YXRpb25zXTsKKwkJ
Zm9yIChpbnQgaSA9IDA7IGkgPCBudW1iZXJPZkFubm90YXRpb25zOyBpKyspIHsKKwkJCS8vIFdp
dGggdGhlIGxhc3QgcGFyYW1ldGVyIGJlaW5nICdmYWxzZScsIHRoZSBkYXRhIHN0cnVjdHVyZSB3
aWxsIG5vdCBiZSBmbHVzaGVkIG91dAorCQkJVHlwZUFubm90YXRpb25JbmZvIG5ld0luZm8gPSBu
ZXcgVHlwZUFubm90YXRpb25JbmZvKHRoaXMucmVmZXJlbmNlLCB0aGlzLmNvbnN0YW50UG9vbE9m
ZnNldHMsIHJlYWRPZmZzZXQsIHJ1bnRpbWVWaXNpYmxlLCBmYWxzZSk7CisJCQlyZWFkT2Zmc2V0
ICs9IG5ld0luZm8ucmVhZE9mZnNldDsKKwkJCW5ld0luZm9zW2ldID0gbmV3SW5mbzsKKwkJfQor
CQlpZiAodGhpcy50eXBlQW5ub3RhdGlvbnMgPT0gbnVsbCkgeworCQkJdGhpcy50eXBlQW5ub3Rh
dGlvbnMgPSBuZXdJbmZvczsKKwkJfSBlbHNlIHsKKwkJCWludCBsZW5ndGggPSB0aGlzLnR5cGVB
bm5vdGF0aW9ucy5sZW5ndGg7CisJCQlUeXBlQW5ub3RhdGlvbkluZm9bXSB0ZW1wID0gbmV3IFR5
cGVBbm5vdGF0aW9uSW5mb1tsZW5ndGggKyBudW1iZXJPZkFubm90YXRpb25zXTsKKwkJCVN5c3Rl
bS5hcnJheWNvcHkodGhpcy50eXBlQW5ub3RhdGlvbnMsIDAsIHRlbXAsIDAsIGxlbmd0aCk7CisJ
CQlTeXN0ZW0uYXJyYXljb3B5KG5ld0luZm9zLCAwLCB0ZW1wLCBsZW5ndGgsIG51bWJlck9mQW5u
b3RhdGlvbnMpOworCQkJdGhpcy50eXBlQW5ub3RhdGlvbnMgPSB0ZW1wOworCQl9CisJfQorfQor
CiAvKioKICAqIEByZXR1cm4gdGhlIGFubm90YXRpb25zIG9yIG51bGwgaWYgdGhlcmUgaXMgbm9u
ZS4KICAqLwpAQCAtNDQyLDYgKzQ3NywxMyBAQAogfQogCiAvKioKKyAqIEByZXR1cm4gdGhlIHR5
cGUgYW5ub3RhdGlvbnMgb3IgbnVsbCBpZiB0aGVyZSBpcyBub25lLgorICovCitwdWJsaWMgSUJp
bmFyeVR5cGVBbm5vdGF0aW9uW10gZ2V0VHlwZUFubm90YXRpb25zKCkgeworCXJldHVybiB0aGlz
LnR5cGVBbm5vdGF0aW9uczsKK30KKworLyoqCiAgKiBBbnN3ZXIgdGhlIGNoYXIgYXJyYXkgdGhh
dCBjb3JyZXNwb25kcyB0byB0aGUgY2xhc3MgbmFtZSBvZiB0aGUgY29uc3RhbnQgY2xhc3MuCiAg
KiBjb25zdGFudFBvb2xJbmRleCBpcyB0aGUgaW5kZXggaW4gdGhlIGNvbnN0YW50IHBvb2wgdGhh
dCBpcyBhIGNvbnN0YW50IGNsYXNzIGVudHJ5LgogICoKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jbGFz
c2ZtdC9GaWVsZEluZm8uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jbGFzc2ZtdC9GaWVsZEluZm8uamF2YQppbmRl
eCA4ZWFlYTA5Li5mMDNlNWQ2IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY2xhc3NmbXQvRmllbGRJbmZv
LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2NsYXNzZm10L0ZpZWxkSW5mby5qYXZhCkBAIC0xLDEyICsxLDE4
IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDA4
IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEz
IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhp
cyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZh
aWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4w
CiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJs
ZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKICAqCisg
KiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRp
b24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBh
bmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMK
KyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRp
b24gb2YgdGhlIEpDUC4KKyAqCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0
aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCisgKiAgICAgICAgQW5keSBDbGVt
ZW50IChHb1Bpdm90YWwsIEluYykgYWNsZW1lbnRAZ29waXZvdGFsLmNvbSAtIENvbnRyaWJ1dGlv
bnMgZm9yCisgKiAgICAgICAgICBCdWcgNDA3MTkxIC0gWzEuOF0gQmluYXJ5IGFjY2VzcyBzdXBw
b3J0IGZvciB0eXBlIGFubm90YXRpb25zIAogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNr
YWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jbGFzc2ZtdDsKIApAQCAtMTQs
NiArMjAsNyBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jb2Rl
Z2VuLkF0dHJpYnV0ZU5hbWVzQ29uc3RhbnRzOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5lbnYuSUJpbmFyeUFubm90YXRpb247CiBpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLmVudi5JQmluYXJ5RmllbGQ7CitpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5JQmluYXJ5VHlwZUFubm90YXRpb247CiBpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmltcGwuKjsKIGltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlR5cGVJZHM7CiBpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnV0aWwuVXRpbDsKQEAgLTMxLDEwICszOCw2
NSBAQAogCiBwdWJsaWMgc3RhdGljIEZpZWxkSW5mbyBjcmVhdGVGaWVsZChieXRlIGNsYXNzRmls
ZUJ5dGVzW10sIGludCBvZmZzZXRzW10sIGludCBvZmZzZXQpIHsKIAlGaWVsZEluZm8gZmllbGRJ
bmZvID0gbmV3IEZpZWxkSW5mbyhjbGFzc0ZpbGVCeXRlcywgb2Zmc2V0cywgb2Zmc2V0KTsKLQlB
bm5vdGF0aW9uSW5mb1tdIGFubm90YXRpb25zID0gZmllbGRJbmZvLnJlYWRBdHRyaWJ1dGVzKCk7
Ci0JaWYgKGFubm90YXRpb25zID09IG51bGwpCi0JCXJldHVybiBmaWVsZEluZm87Ci0JcmV0dXJu
IG5ldyBGaWVsZEluZm9XaXRoQW5ub3RhdGlvbihmaWVsZEluZm8sIGFubm90YXRpb25zKTsKKwkK
KwlpbnQgYXR0cmlidXRlc0NvdW50ID0gZmllbGRJbmZvLnUyQXQoNik7CisJaW50IHJlYWRPZmZz
ZXQgPSA4OworCUFubm90YXRpb25JbmZvW10gYW5ub3RhdGlvbnMgPSBudWxsOworCVR5cGVBbm5v
dGF0aW9uSW5mb1tdIHR5cGVBbm5vdGF0aW9ucyA9IG51bGw7CisJZm9yIChpbnQgaSA9IDA7IGkg
PCBhdHRyaWJ1dGVzQ291bnQ7IGkrKykgeworCQkvLyBjaGVjayB0aGUgbmFtZSBvZiBlYWNoIGF0
dHJpYnV0ZQorCQlpbnQgdXRmOE9mZnNldCA9IGZpZWxkSW5mby5jb25zdGFudFBvb2xPZmZzZXRz
W2ZpZWxkSW5mby51MkF0KHJlYWRPZmZzZXQpXSAtIGZpZWxkSW5mby5zdHJ1Y3RPZmZzZXQ7CisJ
CWNoYXJbXSBhdHRyaWJ1dGVOYW1lID0gZmllbGRJbmZvLnV0ZjhBdCh1dGY4T2Zmc2V0ICsgMywg
ZmllbGRJbmZvLnUyQXQodXRmOE9mZnNldCArIDEpKTsKKwkJaWYgKGF0dHJpYnV0ZU5hbWUubGVu
Z3RoID4gMCkgeworCQkJc3dpdGNoKGF0dHJpYnV0ZU5hbWVbMF0pIHsKKwkJCQljYXNlICdTJyA6
CisJCQkJCWlmIChDaGFyT3BlcmF0aW9uLmVxdWFscyhBdHRyaWJ1dGVOYW1lc0NvbnN0YW50cy5T
aWduYXR1cmVOYW1lLCBhdHRyaWJ1dGVOYW1lKSkKKwkJCQkJCWZpZWxkSW5mby5zaWduYXR1cmVV
dGY4T2Zmc2V0ID0gZmllbGRJbmZvLmNvbnN0YW50UG9vbE9mZnNldHNbZmllbGRJbmZvLnUyQXQo
cmVhZE9mZnNldCArIDYpXSAtIGZpZWxkSW5mby5zdHJ1Y3RPZmZzZXQ7CisJCQkJCWJyZWFrOwor
CQkJCWNhc2UgJ1InIDoKKwkJCQkJQW5ub3RhdGlvbkluZm9bXSBkZWNvZGVkQW5ub3RhdGlvbnMg
PSBudWxsOworCQkJCQlUeXBlQW5ub3RhdGlvbkluZm9bXSBkZWNvZGVkVHlwZUFubm90YXRpb25z
ID0gbnVsbDsKKwkJCQkJaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKGF0dHJpYnV0ZU5hbWUsIEF0
dHJpYnV0ZU5hbWVzQ29uc3RhbnRzLlJ1bnRpbWVWaXNpYmxlQW5ub3RhdGlvbnNOYW1lKSkgewor
CQkJCQkJZGVjb2RlZEFubm90YXRpb25zID0gZmllbGRJbmZvLmRlY29kZUFubm90YXRpb25zKHJl
YWRPZmZzZXQsIHRydWUpOworCQkJCQl9IGVsc2UgaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKGF0
dHJpYnV0ZU5hbWUsIEF0dHJpYnV0ZU5hbWVzQ29uc3RhbnRzLlJ1bnRpbWVJbnZpc2libGVBbm5v
dGF0aW9uc05hbWUpKSB7CisJCQkJCQlkZWNvZGVkQW5ub3RhdGlvbnMgPSBmaWVsZEluZm8uZGVj
b2RlQW5ub3RhdGlvbnMocmVhZE9mZnNldCwgZmFsc2UpOworCQkJCQl9IGVsc2UgaWYgKENoYXJP
cGVyYXRpb24uZXF1YWxzKGF0dHJpYnV0ZU5hbWUsIEF0dHJpYnV0ZU5hbWVzQ29uc3RhbnRzLlJ1
bnRpbWVWaXNpYmxlVHlwZUFubm90YXRpb25zTmFtZSkpIHsKKwkJCQkJCWRlY29kZWRUeXBlQW5u
b3RhdGlvbnMgPSBmaWVsZEluZm8uZGVjb2RlVHlwZUFubm90YXRpb25zKHJlYWRPZmZzZXQsIHRy
dWUpOworCQkJCQl9IGVsc2UgaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKGF0dHJpYnV0ZU5hbWUs
IEF0dHJpYnV0ZU5hbWVzQ29uc3RhbnRzLlJ1bnRpbWVJbnZpc2libGVUeXBlQW5ub3RhdGlvbnNO
YW1lKSkgeworCQkJCQkJZGVjb2RlZFR5cGVBbm5vdGF0aW9ucyA9IGZpZWxkSW5mby5kZWNvZGVU
eXBlQW5ub3RhdGlvbnMocmVhZE9mZnNldCwgZmFsc2UpOworCQkJCQl9CisJCQkJCWlmIChkZWNv
ZGVkQW5ub3RhdGlvbnMgIT0gbnVsbCkgeworCQkJCQkJaWYgKGFubm90YXRpb25zID09IG51bGwp
IHsKKwkJCQkJCQlhbm5vdGF0aW9ucyA9IGRlY29kZWRBbm5vdGF0aW9uczsKKwkJCQkJCX0gZWxz
ZSB7CisJCQkJCQkJaW50IGxlbmd0aCA9IGFubm90YXRpb25zLmxlbmd0aDsKKwkJCQkJCQlBbm5v
dGF0aW9uSW5mb1tdIGNvbWJpbmVkID0gbmV3IEFubm90YXRpb25JbmZvW2xlbmd0aCArIGRlY29k
ZWRBbm5vdGF0aW9ucy5sZW5ndGhdOworCQkJCQkJCVN5c3RlbS5hcnJheWNvcHkoYW5ub3RhdGlv
bnMsIDAsIGNvbWJpbmVkLCAwLCBsZW5ndGgpOworCQkJCQkJCVN5c3RlbS5hcnJheWNvcHkoZGVj
b2RlZEFubm90YXRpb25zLCAwLCBjb21iaW5lZCwgbGVuZ3RoLCBkZWNvZGVkQW5ub3RhdGlvbnMu
bGVuZ3RoKTsKKwkJCQkJCQlhbm5vdGF0aW9ucyA9IGNvbWJpbmVkOworCQkJCQkJfQorCQkJCQl9
IGVsc2UgaWYgKGRlY29kZWRUeXBlQW5ub3RhdGlvbnMgIT0gbnVsbCkgeworCQkJCQkJaWYgKHR5
cGVBbm5vdGF0aW9ucyA9PSBudWxsKSB7CisJCQkJCQkJdHlwZUFubm90YXRpb25zID0gZGVjb2Rl
ZFR5cGVBbm5vdGF0aW9uczsKKwkJCQkJCX0gZWxzZSB7CisJCQkJCQkJaW50IGxlbmd0aCA9IHR5
cGVBbm5vdGF0aW9ucy5sZW5ndGg7CisJCQkJCQkJVHlwZUFubm90YXRpb25JbmZvW10gY29tYmlu
ZWQgPSBuZXcgVHlwZUFubm90YXRpb25JbmZvW2xlbmd0aCArIGRlY29kZWRUeXBlQW5ub3RhdGlv
bnMubGVuZ3RoXTsKKwkJCQkJCQlTeXN0ZW0uYXJyYXljb3B5KHR5cGVBbm5vdGF0aW9ucywgMCwg
Y29tYmluZWQsIDAsIGxlbmd0aCk7CisJCQkJCQkJU3lzdGVtLmFycmF5Y29weShkZWNvZGVkVHlw
ZUFubm90YXRpb25zLCAwLCBjb21iaW5lZCwgbGVuZ3RoLCBkZWNvZGVkVHlwZUFubm90YXRpb25z
Lmxlbmd0aCk7CisJCQkJCQkJdHlwZUFubm90YXRpb25zID0gY29tYmluZWQ7CisJCQkJCQl9CisJ
CQkJCX0KKwkJCX0KKwkJfQorCQlyZWFkT2Zmc2V0ICs9ICg2ICsgZmllbGRJbmZvLnU0QXQocmVh
ZE9mZnNldCArIDIpKTsKKwl9CisJZmllbGRJbmZvLmF0dHJpYnV0ZUJ5dGVzID0gcmVhZE9mZnNl
dDsKKwkKKwlpZiAodHlwZUFubm90YXRpb25zICE9IG51bGwpCisJCXJldHVybiBuZXcgRmllbGRJ
bmZvV2l0aFR5cGVBbm5vdGF0aW9uKGZpZWxkSW5mbywgYW5ub3RhdGlvbnMsIHR5cGVBbm5vdGF0
aW9ucyk7CisJaWYgKGFubm90YXRpb25zICE9IG51bGwpCisJCXJldHVybiBuZXcgRmllbGRJbmZv
V2l0aEFubm90YXRpb24oZmllbGRJbmZvLCBhbm5vdGF0aW9ucyk7CisJcmV0dXJuIGZpZWxkSW5m
bzsKIH0KIAogLyoqCkBAIC03NSw2ICsxMzcsMjIgQEAKIAl9CiAJcmV0dXJuIG51bGw7IC8vIG5v
dGhpbmcgdG8gcmVjb3JkCiB9CisKK1R5cGVBbm5vdGF0aW9uSW5mb1tdIGRlY29kZVR5cGVBbm5v
dGF0aW9ucyhpbnQgb2Zmc2V0LCBib29sZWFuIHJ1bnRpbWVWaXNpYmxlKSB7CisJaW50IG51bWJl
ck9mQW5ub3RhdGlvbnMgPSB1MkF0KG9mZnNldCArIDYpOworCWlmIChudW1iZXJPZkFubm90YXRp
b25zID4gMCkgeworCQlpbnQgcmVhZE9mZnNldCA9IG9mZnNldCArIDg7CisJCVR5cGVBbm5vdGF0
aW9uSW5mb1tdIHR5cGVBbm5vcyA9IG5ldyBUeXBlQW5ub3RhdGlvbkluZm9bbnVtYmVyT2ZBbm5v
dGF0aW9uc107CisJCWZvciAoaW50IGkgPSAwOyBpIDwgbnVtYmVyT2ZBbm5vdGF0aW9uczsgaSsr
KSB7CisJCQlUeXBlQW5ub3RhdGlvbkluZm8gbmV3SW5mbyA9IG5ldyBUeXBlQW5ub3RhdGlvbklu
Zm8odGhpcy5yZWZlcmVuY2UsIHRoaXMuY29uc3RhbnRQb29sT2Zmc2V0cywgcmVhZE9mZnNldCAr
IHRoaXMuc3RydWN0T2Zmc2V0LCBydW50aW1lVmlzaWJsZSwgZmFsc2UpOworCQkJcmVhZE9mZnNl
dCArPSBuZXdJbmZvLnJlYWRPZmZzZXQ7CisJCQl0eXBlQW5ub3NbaV0gPSBuZXdJbmZvOworCQl9
CisJCXJldHVybiB0eXBlQW5ub3M7CisJfQorCXJldHVybiBudWxsOworfQorCiBwdWJsaWMgaW50
IGNvbXBhcmVUbyhPYmplY3QgbykgewogCXJldHVybiBuZXcgU3RyaW5nKGdldE5hbWUoKSkuY29t
cGFyZVRvKG5ldyBTdHJpbmcoKChGaWVsZEluZm8pIG8pLmdldE5hbWUoKSkpOwogfQpAQCAtMTYz
LDYgKzI0MSwxMCBAQAogcHVibGljIElCaW5hcnlBbm5vdGF0aW9uW10gZ2V0QW5ub3RhdGlvbnMo
KSB7CiAJcmV0dXJuIG51bGw7CiB9CisKK3B1YmxpYyBJQmluYXJ5VHlwZUFubm90YXRpb25bXSBn
ZXRUeXBlQW5ub3RhdGlvbnMoKSB7CisJcmV0dXJuIG51bGw7Cit9CiAvKioKICAqIFJldHVybiBh
IHdyYXBwZXIgdGhhdCBjb250YWlucyB0aGUgY29uc3RhbnQgb2YgdGhlIGZpZWxkLgogICogQHJl
dHVybiBqYXZhLmxhbmcuT2JqZWN0CkBAIC0yMjksNDUgKzMxMSw2IEBACiAgKi8KIHB1YmxpYyBi
b29sZWFuIGlzU3ludGhldGljKCkgewogCXJldHVybiAoZ2V0TW9kaWZpZXJzKCkgJiBDbGFzc0Zp
bGVDb25zdGFudHMuQWNjU3ludGhldGljKSAhPSAwOwotfQotcHJpdmF0ZSBBbm5vdGF0aW9uSW5m
b1tdIHJlYWRBdHRyaWJ1dGVzKCkgewotCWludCBhdHRyaWJ1dGVzQ291bnQgPSB1MkF0KDYpOwot
CWludCByZWFkT2Zmc2V0ID0gODsKLQlBbm5vdGF0aW9uSW5mb1tdIGFubm90YXRpb25zID0gbnVs
bDsKLQlmb3IgKGludCBpID0gMDsgaSA8IGF0dHJpYnV0ZXNDb3VudDsgaSsrKSB7Ci0JCS8vIGNo
ZWNrIHRoZSBuYW1lIG9mIGVhY2ggYXR0cmlidXRlCi0JCWludCB1dGY4T2Zmc2V0ID0gdGhpcy5j
b25zdGFudFBvb2xPZmZzZXRzW3UyQXQocmVhZE9mZnNldCldIC0gdGhpcy5zdHJ1Y3RPZmZzZXQ7
Ci0JCWNoYXJbXSBhdHRyaWJ1dGVOYW1lID0gdXRmOEF0KHV0ZjhPZmZzZXQgKyAzLCB1MkF0KHV0
ZjhPZmZzZXQgKyAxKSk7Ci0JCWlmIChhdHRyaWJ1dGVOYW1lLmxlbmd0aCA+IDApIHsKLQkJCXN3
aXRjaChhdHRyaWJ1dGVOYW1lWzBdKSB7Ci0JCQkJY2FzZSAnUycgOgotCQkJCQlpZiAoQ2hhck9w
ZXJhdGlvbi5lcXVhbHMoQXR0cmlidXRlTmFtZXNDb25zdGFudHMuU2lnbmF0dXJlTmFtZSwgYXR0
cmlidXRlTmFtZSkpCi0JCQkJCQl0aGlzLnNpZ25hdHVyZVV0ZjhPZmZzZXQgPSB0aGlzLmNvbnN0
YW50UG9vbE9mZnNldHNbdTJBdChyZWFkT2Zmc2V0ICsgNildIC0gdGhpcy5zdHJ1Y3RPZmZzZXQ7
Ci0JCQkJCWJyZWFrOwotCQkJCWNhc2UgJ1InIDoKLQkJCQkJQW5ub3RhdGlvbkluZm9bXSBkZWNv
ZGVkQW5ub3RhdGlvbnMgPSBudWxsOwotCQkJCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoYXR0
cmlidXRlTmFtZSwgQXR0cmlidXRlTmFtZXNDb25zdGFudHMuUnVudGltZVZpc2libGVBbm5vdGF0
aW9uc05hbWUpKSB7Ci0JCQkJCQlkZWNvZGVkQW5ub3RhdGlvbnMgPSBkZWNvZGVBbm5vdGF0aW9u
cyhyZWFkT2Zmc2V0LCB0cnVlKTsKLQkJCQkJfSBlbHNlIGlmIChDaGFyT3BlcmF0aW9uLmVxdWFs
cyhhdHRyaWJ1dGVOYW1lLCBBdHRyaWJ1dGVOYW1lc0NvbnN0YW50cy5SdW50aW1lSW52aXNpYmxl
QW5ub3RhdGlvbnNOYW1lKSkgewotCQkJCQkJZGVjb2RlZEFubm90YXRpb25zID0gZGVjb2RlQW5u
b3RhdGlvbnMocmVhZE9mZnNldCwgZmFsc2UpOwotCQkJCQl9Ci0JCQkJCWlmIChkZWNvZGVkQW5u
b3RhdGlvbnMgIT0gbnVsbCkgewotCQkJCQkJaWYgKGFubm90YXRpb25zID09IG51bGwpIHsKLQkJ
CQkJCQlhbm5vdGF0aW9ucyA9IGRlY29kZWRBbm5vdGF0aW9uczsKLQkJCQkJCX0gZWxzZSB7Ci0J
CQkJCQkJaW50IGxlbmd0aCA9IGFubm90YXRpb25zLmxlbmd0aDsKLQkJCQkJCQlBbm5vdGF0aW9u
SW5mb1tdIGNvbWJpbmVkID0gbmV3IEFubm90YXRpb25JbmZvW2xlbmd0aCArIGRlY29kZWRBbm5v
dGF0aW9ucy5sZW5ndGhdOwotCQkJCQkJCVN5c3RlbS5hcnJheWNvcHkoYW5ub3RhdGlvbnMsIDAs
IGNvbWJpbmVkLCAwLCBsZW5ndGgpOwotCQkJCQkJCVN5c3RlbS5hcnJheWNvcHkoZGVjb2RlZEFu
bm90YXRpb25zLCAwLCBjb21iaW5lZCwgbGVuZ3RoLCBkZWNvZGVkQW5ub3RhdGlvbnMubGVuZ3Ro
KTsKLQkJCQkJCQlhbm5vdGF0aW9ucyA9IGNvbWJpbmVkOwotCQkJCQkJfQotCQkJCQl9Ci0JCQl9
Ci0JCX0KLQkJcmVhZE9mZnNldCArPSAoNiArIHU0QXQocmVhZE9mZnNldCArIDIpKTsKLQl9Ci0J
dGhpcy5hdHRyaWJ1dGVCeXRlcyA9IHJlYWRPZmZzZXQ7Ci0JcmV0dXJuIGFubm90YXRpb25zOwog
fQogcHJpdmF0ZSB2b2lkIHJlYWRDb25zdGFudEF0dHJpYnV0ZSgpIHsKIAlpbnQgYXR0cmlidXRl
c0NvdW50ID0gdTJBdCg2KTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jbGFzc2ZtdC9GaWVsZEluZm9X
aXRoQW5ub3RhdGlvbi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NsYXNzZm10L0ZpZWxkSW5mb1dpdGhBbm5vdGF0
aW9uLmphdmEKaW5kZXggNGUzYzQzNS4uNmJmYmFhYSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NsYXNz
Zm10L0ZpZWxkSW5mb1dpdGhBbm5vdGF0aW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NsYXNzZm10L0Zp
ZWxkSW5mb1dpdGhBbm5vdGF0aW9uLmphdmEKQEAgLTEsMTYgKzEsMjIgQEAKIC8qKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDUsIDIwMDkgQkVBIFN5c3RlbXMsIElu
Yy4KKyAqIENvcHlyaWdodCAoYykgMjAwNSwgMjAxMyBCRUEgU3lzdGVtcywgSW5jLgogICogQWxs
IHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVy
aWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBz
ZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1
dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdh
bC9lcGwtdjEwLmh0bWwKICAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVh
cmx5LWRyYWZ0IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21t
dW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5k
IGV2YWx1YXRpb24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxl
IHdpdGggYW55IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqCiAgKiBDb250cmlidXRvcnM6
CiAgKiAgICB0eWV1bmdAYmVhLmNvbSAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgor
ICogICAgICAgIEFuZHkgQ2xlbWVudCAoR29QaXZvdGFsLCBJbmMpIGFjbGVtZW50QGdvcGl2b3Rh
bC5jb20gLSBDb250cmlidXRpb25zIGZvcgorICogICAgICAgICAgQnVnIDQwNzE5MSAtIFsxLjhd
IEJpbmFyeSBhY2Nlc3Mgc3VwcG9ydCBmb3IgdHlwZSBhbm5vdGF0aW9ucwogICoqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5j
bGFzc2ZtdDsKIAotcHVibGljIGZpbmFsIGNsYXNzIEZpZWxkSW5mb1dpdGhBbm5vdGF0aW9uIGV4
dGVuZHMgRmllbGRJbmZvIHsKK3B1YmxpYyBjbGFzcyBGaWVsZEluZm9XaXRoQW5ub3RhdGlvbiBl
eHRlbmRzIEZpZWxkSW5mbyB7CiAJcHJpdmF0ZSBBbm5vdGF0aW9uSW5mb1tdIGFubm90YXRpb25z
OwogCiBGaWVsZEluZm9XaXRoQW5ub3RhdGlvbihGaWVsZEluZm8gaW5mbywgQW5ub3RhdGlvbklu
Zm9bXSBhbm5vcykgewpAQCAtMzEsOCArMzcsOSBAQAogCXJldHVybiB0aGlzLmFubm90YXRpb25z
OwogfQogcHJvdGVjdGVkIHZvaWQgaW5pdGlhbGl6ZSgpIHsKLQlmb3IgKGludCBpID0gMCwgbWF4
ID0gdGhpcy5hbm5vdGF0aW9ucy5sZW5ndGg7IGkgPCBtYXg7IGkrKykKLQkJdGhpcy5hbm5vdGF0
aW9uc1tpXS5pbml0aWFsaXplKCk7CisJaWYgKHRoaXMuYW5ub3RhdGlvbnMgIT0gbnVsbCkKKwkJ
Zm9yIChpbnQgaSA9IDAsIG1heCA9IHRoaXMuYW5ub3RhdGlvbnMubGVuZ3RoOyBpIDwgbWF4OyBp
KyspCisJCQl0aGlzLmFubm90YXRpb25zW2ldLmluaXRpYWxpemUoKTsKIAlzdXBlci5pbml0aWFs
aXplKCk7CiB9CiBwcm90ZWN0ZWQgdm9pZCByZXNldCgpIHsKZGlmZiAtLWdpdCBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9j
bGFzc2ZtdC9GaWVsZEluZm9XaXRoVHlwZUFubm90YXRpb24uamF2YSBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jbGFzc2Zt
dC9GaWVsZEluZm9XaXRoVHlwZUFubm90YXRpb24uamF2YQpuZXcgZmlsZSBtb2RlIDEwMDY0NApp
bmRleCAwMDAwMDAwLi5mODAwODVkCi0tLSAvZGV2L251bGwKKysrIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NsYXNzZm10
L0ZpZWxkSW5mb1dpdGhUeXBlQW5ub3RhdGlvbi5qYXZhCkBAIC0wLDAgKzEsNTQgQEAKKy8qKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqCisgKiBDb3B5cmlnaHQgKGMpIDIwMTMgR29QaXZvdGFsLCBJbmMu
IEFsbCBSaWdodHMgUmVzZXJ2ZWQuCisgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dy
YW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCisgKiBhcmUgbWFkZSBhdmFpbGFibGUg
dW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKKyAqIHdo
aWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0Cisg
KiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICoKKyAqIFRoaXMg
aXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZl
bG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBt
YWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25s
eS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0
aGUgSkNQLgorICoKKyAqIENvbnRyaWJ1dG9yczoKKyAqICAgICAgICBBbmR5IENsZW1lbnQgKEdv
UGl2b3RhbCwgSW5jKSBhY2xlbWVudEBnb3Bpdm90YWwuY29tIC0gQ29udHJpYnV0aW9ucyBmb3IK
KyAqICAgICAgICAgIEJ1ZyA0MDcxOTEgLSBbMS44XSBCaW5hcnkgYWNjZXNzIHN1cHBvcnQgZm9y
IHR5cGUgYW5ub3RhdGlvbnMKKyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLworcGFja2FnZSBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuY2xhc3NmbXQ7CisKK2ltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklCaW5hcnlUeXBlQW5ub3RhdGlvbjsKKwor
cHVibGljIGZpbmFsIGNsYXNzIEZpZWxkSW5mb1dpdGhUeXBlQW5ub3RhdGlvbiBleHRlbmRzIEZp
ZWxkSW5mb1dpdGhBbm5vdGF0aW9uIHsKKwlwcml2YXRlIFR5cGVBbm5vdGF0aW9uSW5mb1tdIHR5
cGVBbm5vdGF0aW9uczsKKworRmllbGRJbmZvV2l0aFR5cGVBbm5vdGF0aW9uKEZpZWxkSW5mbyBp
bmZvLCBBbm5vdGF0aW9uSW5mb1tdIGFubm9zLCBUeXBlQW5ub3RhdGlvbkluZm9bXSB0eXBlQW5u
b3MpIHsKKwlzdXBlcihpbmZvLCBhbm5vcyk7CisJdGhpcy50eXBlQW5ub3RhdGlvbnMgPSB0eXBl
QW5ub3M7Cit9CitwdWJsaWMgSUJpbmFyeVR5cGVBbm5vdGF0aW9uW10gZ2V0VHlwZUFubm90YXRp
b25zKCkgeworCXJldHVybiB0aGlzLnR5cGVBbm5vdGF0aW9uczsKK30KK3Byb3RlY3RlZCB2b2lk
IGluaXRpYWxpemUoKSB7CisJZm9yIChpbnQgaSA9IDAsIG1heCA9IHRoaXMudHlwZUFubm90YXRp
b25zLmxlbmd0aDsgaSA8IG1heDsgaSsrKQorCQl0aGlzLnR5cGVBbm5vdGF0aW9uc1tpXS5pbml0
aWFsaXplKCk7CisJc3VwZXIuaW5pdGlhbGl6ZSgpOworfQorcHJvdGVjdGVkIHZvaWQgcmVzZXQo
KSB7CisJaWYgKHRoaXMudHlwZUFubm90YXRpb25zICE9IG51bGwpCisJCWZvciAoaW50IGkgPSAw
LCBtYXggPSB0aGlzLnR5cGVBbm5vdGF0aW9ucy5sZW5ndGg7IGkgPCBtYXg7IGkrKykKKwkJCXRo
aXMudHlwZUFubm90YXRpb25zW2ldLnJlc2V0KCk7CisJc3VwZXIucmVzZXQoKTsKK30KK3B1Ymxp
YyBTdHJpbmcgdG9TdHJpbmcoKSB7CisJU3RyaW5nQnVmZmVyIGJ1ZmZlciA9IG5ldyBTdHJpbmdC
dWZmZXIoZ2V0Q2xhc3MoKS5nZXROYW1lKCkpOworCWlmICh0aGlzLnR5cGVBbm5vdGF0aW9ucyAh
PSBudWxsKSB7CisJCWJ1ZmZlci5hcHBlbmQoJ1xuJyk7CisJCWJ1ZmZlci5hcHBlbmQoInR5cGUg
YW5ub3RhdGlvbnM6Iik7IC8vJE5PTi1OTFMtMSQKKwkJZm9yIChpbnQgaSA9IDA7IGkgPCB0aGlz
LnR5cGVBbm5vdGF0aW9ucy5sZW5ndGg7IGkrKykgeworCQkJYnVmZmVyLmFwcGVuZCh0aGlzLnR5
cGVBbm5vdGF0aW9uc1tpXSk7CisJCQlidWZmZXIuYXBwZW5kKCdcbicpOworCQl9CisJfQorCXRv
U3RyaW5nQ29udGVudChidWZmZXIpOworCXJldHVybiBidWZmZXIudG9TdHJpbmcoKTsKK30KK30K
ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9jbGFzc2ZtdC9NZXRob2RJbmZvLmphdmEgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY2xh
c3NmbXQvTWV0aG9kSW5mby5qYXZhCmluZGV4IDg4ZDYwYWMuLmQyMmY2Y2IgMTAwNjQ0Ci0tLSBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9jbGFzc2ZtdC9NZXRob2RJbmZvLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NsYXNzZm10L01l
dGhvZEluZm8uamF2YQpAQCAtMSwxMyArMSwxOSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioK
LSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
KyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
ICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWlu
ZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhl
IEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBk
aXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5v
cmcvbGVnYWwvZXBsLXYxMC5odG1sCiAgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBv
ZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQor
ICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0
aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29t
cGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKgogICogQ29udHJp
YnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1l
bnRhdGlvbgogICogICAgIFN0ZXBoYW4gSGVycm1hbm4gLSBDb250cmlidXRpb24gZm9yIGJ1ZyAx
ODYzNDIgLSBbY29tcGlsZXJdW251bGxdIFVzaW5nIGFubm90YXRpb25zIGZvciBudWxsIGNoZWNr
aW5nCisgKiAgICAgQW5keSBDbGVtZW50IChHb1Bpdm90YWwsIEluYykgYWNsZW1lbnRAZ29waXZv
dGFsLmNvbSAtIENvbnRyaWJ1dGlvbnMgZm9yCisgKiAgICAgICAgIEJ1ZyA0MDcxOTEgLSBbMS44
XSBCaW5hcnkgYWNjZXNzIHN1cHBvcnQgZm9yIHR5cGUgYW5ub3RhdGlvbnMKICAqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
Y2xhc3NmbXQ7CiAKQEAgLTE2LDYgKzIyLDcgQEAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIuY29kZWdlbi5Db25zdGFudFBvb2w7CiBpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLmVudi5JQmluYXJ5QW5ub3RhdGlvbjsKIGltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklCaW5hcnlNZXRob2Q7CitpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5JQmluYXJ5VHlwZUFubm90YXRp
b247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnV0aWwuVXRpbDsK
IAogcHVibGljIGNsYXNzIE1ldGhvZEluZm8gZXh0ZW5kcyBDbGFzc0ZpbGVTdHJ1Y3QgaW1wbGVt
ZW50cyBJQmluYXJ5TWV0aG9kLCBDb21wYXJhYmxlIHsKQEAgLTM4LDYgKzQ1LDcgQEAKIAlpbnQg
cmVhZE9mZnNldCA9IDg7CiAJQW5ub3RhdGlvbkluZm9bXSBhbm5vdGF0aW9ucyA9IG51bGw7CiAJ
QW5ub3RhdGlvbkluZm9bXVtdIHBhcmFtZXRlckFubm90YXRpb25zID0gbnVsbDsKKwlUeXBlQW5u
b3RhdGlvbkluZm9bXSB0eXBlQW5ub3RhdGlvbnMgPSBudWxsOwogCWZvciAoaW50IGkgPSAwOyBp
IDwgYXR0cmlidXRlc0NvdW50OyBpKyspIHsKIAkJLy8gY2hlY2sgdGhlIG5hbWUgb2YgZWFjaCBh
dHRyaWJ1dGUKIAkJaW50IHV0ZjhPZmZzZXQgPSBtZXRob2RJbmZvLmNvbnN0YW50UG9vbE9mZnNl
dHNbbWV0aG9kSW5mby51MkF0KHJlYWRPZmZzZXQpXSAtIG1ldGhvZEluZm8uc3RydWN0T2Zmc2V0
OwpAQCAtNTEsNiArNTksNyBAQAogCQkJCWNhc2UgJ1InIDoKIAkJCQkJQW5ub3RhdGlvbkluZm9b
XSBtZXRob2RBbm5vdGF0aW9ucyA9IG51bGw7CiAJCQkJCUFubm90YXRpb25JbmZvW11bXSBwYXJh
bUFubm90YXRpb25zID0gbnVsbDsKKwkJCQkJVHlwZUFubm90YXRpb25JbmZvW10gbWV0aG9kVHlw
ZUFubm90YXRpb25zID0gbnVsbDsKIAkJCQkJaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKGF0dHJp
YnV0ZU5hbWUsIEF0dHJpYnV0ZU5hbWVzQ29uc3RhbnRzLlJ1bnRpbWVWaXNpYmxlQW5ub3RhdGlv
bnNOYW1lKSkgewogCQkJCQkJbWV0aG9kQW5ub3RhdGlvbnMgPSBkZWNvZGVNZXRob2RBbm5vdGF0
aW9ucyhyZWFkT2Zmc2V0LCB0cnVlLCBtZXRob2RJbmZvKTsKIAkJCQkJfSBlbHNlIGlmIChDaGFy
T3BlcmF0aW9uLmVxdWFscyhhdHRyaWJ1dGVOYW1lLCBBdHRyaWJ1dGVOYW1lc0NvbnN0YW50cy5S
dW50aW1lSW52aXNpYmxlQW5ub3RhdGlvbnNOYW1lKSkgewpAQCAtNTksNiArNjgsMTAgQEAKIAkJ
CQkJCXBhcmFtQW5ub3RhdGlvbnMgPSBkZWNvZGVQYXJhbUFubm90YXRpb25zKHJlYWRPZmZzZXQs
IHRydWUsIG1ldGhvZEluZm8pOwogCQkJCQl9IGVsc2UgaWYgKENoYXJPcGVyYXRpb24uZXF1YWxz
KGF0dHJpYnV0ZU5hbWUsIEF0dHJpYnV0ZU5hbWVzQ29uc3RhbnRzLlJ1bnRpbWVJbnZpc2libGVQ
YXJhbWV0ZXJBbm5vdGF0aW9uc05hbWUpKSB7CiAJCQkJCQlwYXJhbUFubm90YXRpb25zID0gZGVj
b2RlUGFyYW1Bbm5vdGF0aW9ucyhyZWFkT2Zmc2V0LCBmYWxzZSwgbWV0aG9kSW5mbyk7CisJCQkJ
CX0gZWxzZSBpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoYXR0cmlidXRlTmFtZSwgQXR0cmlidXRl
TmFtZXNDb25zdGFudHMuUnVudGltZVZpc2libGVUeXBlQW5ub3RhdGlvbnNOYW1lKSkgeworCQkJ
CQkJbWV0aG9kVHlwZUFubm90YXRpb25zID0gZGVjb2RlVHlwZUFubm90YXRpb25zKHJlYWRPZmZz
ZXQsIHRydWUsIG1ldGhvZEluZm8pOworCQkJCQl9IGVsc2UgaWYgKENoYXJPcGVyYXRpb24uZXF1
YWxzKGF0dHJpYnV0ZU5hbWUsIEF0dHJpYnV0ZU5hbWVzQ29uc3RhbnRzLlJ1bnRpbWVJbnZpc2li
bGVUeXBlQW5ub3RhdGlvbnNOYW1lKSkgeworCQkJCQkJbWV0aG9kVHlwZUFubm90YXRpb25zID0g
ZGVjb2RlVHlwZUFubm90YXRpb25zKHJlYWRPZmZzZXQsIGZhbHNlLCBtZXRob2RJbmZvKTsKIAkJ
CQkJfQogCQkJCQlpZiAobWV0aG9kQW5ub3RhdGlvbnMgIT0gbnVsbCkgewogCQkJCQkJaWYgKGFu
bm90YXRpb25zID09IG51bGwpIHsKQEAgLTkwLDYgKzEwMywxNiBAQAogCQkJCQkJCQl9CiAJCQkJ
CQkJfQogCQkJCQkJfQorCQkJCQl9IGVsc2UgaWYgKG1ldGhvZFR5cGVBbm5vdGF0aW9ucyAhPSBu
dWxsKSB7CisJCQkJCQlpZiAodHlwZUFubm90YXRpb25zID09IG51bGwpIHsKKwkJCQkJCQl0eXBl
QW5ub3RhdGlvbnMgPSBtZXRob2RUeXBlQW5ub3RhdGlvbnM7CisJCQkJCQl9IGVsc2UgeworCQkJ
CQkJCWludCBsZW5ndGggPSB0eXBlQW5ub3RhdGlvbnMubGVuZ3RoOworCQkJCQkJCVR5cGVBbm5v
dGF0aW9uSW5mb1tdIG5ld0Fubm90YXRpb25zID0gbmV3IFR5cGVBbm5vdGF0aW9uSW5mb1tsZW5n
dGggKyBtZXRob2RUeXBlQW5ub3RhdGlvbnMubGVuZ3RoXTsKKwkJCQkJCQlTeXN0ZW0uYXJyYXlj
b3B5KHR5cGVBbm5vdGF0aW9ucywgMCwgbmV3QW5ub3RhdGlvbnMsIDAsIGxlbmd0aCk7CisJCQkJ
CQkJU3lzdGVtLmFycmF5Y29weShtZXRob2RUeXBlQW5ub3RhdGlvbnMsIDAsIG5ld0Fubm90YXRp
b25zLCBsZW5ndGgsIG1ldGhvZFR5cGVBbm5vdGF0aW9ucy5sZW5ndGgpOworCQkJCQkJCXR5cGVB
bm5vdGF0aW9ucyA9IG5ld0Fubm90YXRpb25zOworCQkJCQkJfQogCQkJCQl9CiAJCQkJCWJyZWFr
OwogCQkJfQpAQCAtOTgsNiArMTIxLDggQEAKIAl9CiAJbWV0aG9kSW5mby5hdHRyaWJ1dGVCeXRl
cyA9IHJlYWRPZmZzZXQ7CiAKKwlpZiAodHlwZUFubm90YXRpb25zICE9IG51bGwpCisJCXJldHVy
biBuZXcgTWV0aG9kSW5mb1dpdGhUeXBlQW5ub3RhdGlvbnMobWV0aG9kSW5mbywgYW5ub3RhdGlv
bnMsIHBhcmFtZXRlckFubm90YXRpb25zLCB0eXBlQW5ub3RhdGlvbnMpOwogCWlmIChwYXJhbWV0
ZXJBbm5vdGF0aW9ucyAhPSBudWxsKQogCQlyZXR1cm4gbmV3IE1ldGhvZEluZm9XaXRoUGFyYW1l
dGVyQW5ub3RhdGlvbnMobWV0aG9kSW5mbywgYW5ub3RhdGlvbnMsIHBhcmFtZXRlckFubm90YXRp
b25zKTsKIAlpZiAoYW5ub3RhdGlvbnMgIT0gbnVsbCkKQEAgLTE0Myw2ICsxNjgsMjAgQEAKIAkJ
CX0KIAkJfQogCQlyZXR1cm4gYW5ub3M7CisJfQorCXJldHVybiBudWxsOworfQorc3RhdGljIFR5
cGVBbm5vdGF0aW9uSW5mb1tdIGRlY29kZVR5cGVBbm5vdGF0aW9ucyhpbnQgb2Zmc2V0LCBib29s
ZWFuIHJ1bnRpbWVWaXNpYmxlLCBNZXRob2RJbmZvIG1ldGhvZEluZm8pIHsKKwlpbnQgbnVtYmVy
T2ZBbm5vdGF0aW9ucyA9IG1ldGhvZEluZm8udTJBdChvZmZzZXQgKyA2KTsKKwlpZiAobnVtYmVy
T2ZBbm5vdGF0aW9ucyA+IDApIHsKKwkJaW50IHJlYWRPZmZzZXQgPSBvZmZzZXQgKyA4OworCQlU
eXBlQW5ub3RhdGlvbkluZm9bXSB0eXBlQW5ub3MgPSBuZXcgVHlwZUFubm90YXRpb25JbmZvW251
bWJlck9mQW5ub3RhdGlvbnNdOworCQlmb3IgKGludCBpID0gMDsgaSA8IG51bWJlck9mQW5ub3Rh
dGlvbnM7IGkrKykgeworCQkJVHlwZUFubm90YXRpb25JbmZvIG5ld0luZm8gPSBuZXcgVHlwZUFu
bm90YXRpb25JbmZvKG1ldGhvZEluZm8ucmVmZXJlbmNlLCBtZXRob2RJbmZvLmNvbnN0YW50UG9v
bE9mZnNldHMsIHJlYWRPZmZzZXQgKyBtZXRob2RJbmZvLnN0cnVjdE9mZnNldCwgcnVudGltZVZp
c2libGUsIGZhbHNlKTsKKwkJCXJlYWRPZmZzZXQgKz0gbmV3SW5mby5yZWFkT2Zmc2V0OworCQkJ
dHlwZUFubm9zW2ldID0gbmV3SW5mbzsKKwkJfQorCQlyZXR1cm4gdHlwZUFubm9zOwogCX0KIAly
ZXR1cm4gbnVsbDsKIH0KQEAgLTI3NCw2ICszMTMsOSBAQAogcHVibGljIGludCBnZXRBbm5vdGF0
ZWRQYXJhbWV0ZXJzQ291bnQoKSB7CiAJcmV0dXJuIDA7CiB9CitwdWJsaWMgSUJpbmFyeVR5cGVB
bm5vdGF0aW9uW10gZ2V0VHlwZUFubm90YXRpb25zKCkgeworCXJldHVybiBudWxsOworfQogLyoq
CiAgKiBBbnN3ZXIgdGhlIG5hbWUgb2YgdGhlIG1ldGhvZC4KICAqCmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvY2xhc3NmbXQvTWV0aG9kSW5mb1dpdGhUeXBlQW5ub3RhdGlvbnMuamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9j
bGFzc2ZtdC9NZXRob2RJbmZvV2l0aFR5cGVBbm5vdGF0aW9ucy5qYXZhCm5ldyBmaWxlIG1vZGUg
MTAwNjQ0CmluZGV4IDAwMDAwMDAuLmE3OWExZTQKLS0tIC9kZXYvbnVsbAorKysgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
Y2xhc3NmbXQvTWV0aG9kSW5mb1dpdGhUeXBlQW5ub3RhdGlvbnMuamF2YQpAQCAtMCwwICsxLDUx
IEBACisvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKgorICogQ29weXJpZ2h0IChjKSAyMDEzIEdvUGl2
b3RhbCwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLgorICogQWxsIHJpZ2h0cyByZXNlcnZlZC4g
VGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscworICogYXJlIG1hZGUg
YXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2
MS4wCisgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWls
YWJsZSBhdAorICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAq
CisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmlj
YXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQ
KSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9z
ZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmlj
YXRpb24gb2YgdGhlIEpDUC4KKyAqCisgKiBDb250cmlidXRvcnM6CisgKiAgICAgICAgQW5keSBD
bGVtZW50IChHb1Bpdm90YWwsIEluYykgYWNsZW1lbnRAZ29waXZvdGFsLmNvbSAtIENvbnRyaWJ1
dGlvbnMgZm9yCisgKiAgICAgICAgICAgIEJ1ZyA0MDcxOTEgLSBbMS44XSBCaW5hcnkgYWNjZXNz
IHN1cHBvcnQgZm9yIHR5cGUgYW5ub3RhdGlvbnMKKyAqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwor
cGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuY2xhc3NmbXQ7CisKK2lt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklCaW5hcnlUeXBlQW5u
b3RhdGlvbjsKKworY2xhc3MgTWV0aG9kSW5mb1dpdGhUeXBlQW5ub3RhdGlvbnMgZXh0ZW5kcyBN
ZXRob2RJbmZvV2l0aFBhcmFtZXRlckFubm90YXRpb25zIHsKKwlwcml2YXRlIFR5cGVBbm5vdGF0
aW9uSW5mb1tdIHR5cGVBbm5vdGF0aW9uczsKKworTWV0aG9kSW5mb1dpdGhUeXBlQW5ub3RhdGlv
bnMoTWV0aG9kSW5mbyBtZXRob2RJbmZvLCBBbm5vdGF0aW9uSW5mb1tdIGFubm90YXRpb25zLCBB
bm5vdGF0aW9uSW5mb1tdW10gcGFyYW1ldGVyQW5ub3RhdGlvbnMsIFR5cGVBbm5vdGF0aW9uSW5m
b1tdIHR5cGVBbm5vdGF0aW9ucykgeworCXN1cGVyKG1ldGhvZEluZm8sIGFubm90YXRpb25zLCBw
YXJhbWV0ZXJBbm5vdGF0aW9ucyk7CisJdGhpcy50eXBlQW5ub3RhdGlvbnMgPSB0eXBlQW5ub3Rh
dGlvbnM7Cit9CitwdWJsaWMgSUJpbmFyeVR5cGVBbm5vdGF0aW9uW10gZ2V0VHlwZUFubm90YXRp
b25zKCkgeworCXJldHVybiB0aGlzLnR5cGVBbm5vdGF0aW9uczsKK30KKworcHJvdGVjdGVkIHZv
aWQgaW5pdGlhbGl6ZSgpIHsKKwlmb3IgKGludCBpID0gMCwgbCA9IHRoaXMudHlwZUFubm90YXRp
b25zID09IG51bGwgPyAwIDogdGhpcy50eXBlQW5ub3RhdGlvbnMubGVuZ3RoOyBpIDwgbDsgaSsr
KSB7CisJCXRoaXMudHlwZUFubm90YXRpb25zW2ldLmluaXRpYWxpemUoKTsKKwl9CisJc3VwZXIu
aW5pdGlhbGl6ZSgpOworfQorcHJvdGVjdGVkIHZvaWQgcmVzZXQoKSB7CisJZm9yIChpbnQgaSA9
IDAsIGwgPSB0aGlzLnR5cGVBbm5vdGF0aW9ucyA9PSBudWxsID8gMCA6IHRoaXMudHlwZUFubm90
YXRpb25zLmxlbmd0aDsgaSA8IGw7IGkrKykgeworCQl0aGlzLnR5cGVBbm5vdGF0aW9uc1tpXS5y
ZXNldCgpOworCX0KKwlzdXBlci5yZXNldCgpOworfQorcHJvdGVjdGVkIHZvaWQgdG9TdHJpbmdD
b250ZW50KFN0cmluZ0J1ZmZlciBidWZmZXIpIHsKKwlzdXBlci50b1N0cmluZ0NvbnRlbnQoYnVm
ZmVyKTsKKwlidWZmZXIuYXBwZW5kKCJ0eXBlIGFubm90YXRpb25zID0gXG4iKTsvLyROT04tTkxT
LTEkCisJZm9yIChpbnQgaSA9IDAsIGwgPSB0aGlzLnR5cGVBbm5vdGF0aW9ucyA9PSBudWxsID8g
MCA6IHRoaXMudHlwZUFubm90YXRpb25zLmxlbmd0aDsgaSA8IGw7IGkrKykgeworCQlidWZmZXIu
YXBwZW5kKHRoaXMudHlwZUFubm90YXRpb25zW2ldLnRvU3RyaW5nKCkpOworCQlidWZmZXIuYXBw
ZW5kKCdcbicpOworCX0KK30KK30KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jbGFzc2ZtdC9UeXBlQW5u
b3RhdGlvbkluZm8uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jbGFzc2ZtdC9UeXBlQW5ub3RhdGlvbkluZm8uamF2
YQpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwLi4yY2NkNzVlCi0tLSAvZGV2L251
bGwKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2NsYXNzZm10L1R5cGVBbm5vdGF0aW9uSW5mby5qYXZhCkBAIC0wLDAg
KzEsMjQyIEBACisvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgorICogQ29weXJpZ2h0IChjKSAyMDEz
IEdvUGl2b3RhbCwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLgorICogQWxsIHJpZ2h0cyByZXNl
cnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscworICogYXJl
IG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGlj
ZW5zZSB2MS4wCisgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlz
IGF2YWlsYWJsZSBhdAorICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0
bWwKKyAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNw
ZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2Vz
cyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24g
cHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNw
ZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqCisgKiBDb250cmlidXRvcnM6CisgKiAgICAgICAg
QW5keSBDbGVtZW50IChHb1Bpdm90YWwsIEluYykgYWNsZW1lbnRAZ29waXZvdGFsLmNvbSAtIENv
bnRyaWJ1dGlvbnMgZm9yCisgKiAgICAgICAgICBCdWcgNDA3MTkxIC0gWzEuOF0gQmluYXJ5IGFj
Y2VzcyBzdXBwb3J0IGZvciB0eXBlIGFubm90YXRpb25zCisgKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
Ki8KK3BhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNsYXNzZm10Owor
CitpbXBvcnQgamF2YS51dGlsLkFycmF5czsKKworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5jb2RlZ2VuLkFubm90YXRpb25UYXJnZXRUeXBlQ29uc3RhbnRzOworaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuSUJpbmFyeUFubm90YXRp
b247CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5JQmluYXJ5
VHlwZUFubm90YXRpb247CisKKy8qKgorICogVGhlIFR5cGVBbm5vdGF0aW9uSW5mbyBjbGFzcyBk
b2VzIG5vdCBjdXJyZW50bHkgc3VwcG9ydCB0eXBlIGFubm90YXRpb25zIHdpdGhpbiBjb2RlCisg
KiBibG9ja3MgKHRob3NlIHRoYXQgaGF2ZSBhIHRhcmdldCB0eXBlIG9mIDB4NDAgYW5kIGhpZ2hl
cikgLSBpdCBpcyBub3QgeWV0IGNsZWFyIHRoYXQgCisgKiB0aGVzZSBuZWVkIHRvIGJlIGFjY2Vz
c2libGUuCisgKi8KK3B1YmxpYyBjbGFzcyBUeXBlQW5ub3RhdGlvbkluZm8gZXh0ZW5kcyBDbGFz
c0ZpbGVTdHJ1Y3QgaW1wbGVtZW50cyBJQmluYXJ5VHlwZUFubm90YXRpb24geworCisJcHJpdmF0
ZSBBbm5vdGF0aW9uSW5mbyBhbm5vdGF0aW9uOworCQorCXByaXZhdGUgaW50IHRhcmdldFR5cGUg
PSAwOworCQorCS8vIGluZm8gaXMgdXNlZCBpbiBkaWZmZXJlbnQgd2F5czoKKwkvLyBUYXJnZXRU
eXBlIDB4MDA6IENMQVNTX1RZUEVfUEFSQU1FVEVSOiB0eXBlIHBhcmFtZXRlciBpbmRleAorCS8v
IFRhcmdldFR5cGUgMHgwMTogTUVUSE9EX1RZUEVfUEFSQU1FVEVSOiB0eXBlIHBhcmFtZXRlciBp
bmRleCAKKwkvLyBUYXJnZXRUeXBlIDB4MTA6IENMQVNTX0VYVEVORFM6IHN1cGVydHlwZSBpbmRl
eCAoLTEgPSBzdXBlcmNsYXNzLCAwLi5OIHN1cGVyaW50ZXJmYWNlKQorCS8vIFRhcmdldFR5cGUg
MHgxMTogQ0xBU1NfVFlQRV9QQVJBTUVURVJfQk9VTkQ6IHR5cGUgcGFyYW1ldGVyIGluZGV4CisJ
Ly8gVGFyZ2V0VHlwZSAweDEyOiBNRVRIT0RfVFlQRV9QQVJBTUVURVJfQk9VTkQ6IHR5cGUgcGFy
YW1ldGVyIGluZGV4CisJLy8gVGFyZ2V0VHlwZSAweDE2OiBNRVRIT0RfRk9STUFMX1BBUkFNRVRF
UjogbWV0aG9kIGZvcm1hbCBwYXJhbWV0ZXIgaW5kZXgKKwkvLyBUYXJnZXRUeXBlIDB4MTc6IFRI
Uk9XUzogdGhyb3dzIHR5cGUgaW5kZXgKKwlwcml2YXRlIGludCBpbmZvOworCQorCS8vIFRhcmdl
dFR5cGUgMHgxMTogQ0xBU1NfVFlQRV9QQVJBTUVURVJfQk9VTkQ6IGJvdW5kIGluZGV4CisJLy8g
VGFyZ2V0VHlwZSAweDEyOiBNRVRIT0RfVFlQRV9QQVJBTUVURVJfQk9VTkQ6IGJvdW5kIGluZGV4
CisJcHJpdmF0ZSBpbnQgaW5mbzI7CisJCisJcHJpdmF0ZSBpbnRbXSB0eXBlUGF0aDsgLy8gZWFj
aCBwYWlyIG9mIGludHMgaW4gdGhlIGFycmF5IGlzIGEgdHlwZSBwYXRoIGVudHJ5CisJCisJaW50
IHJlYWRPZmZzZXQgPSAwOworCQorCQorVHlwZUFubm90YXRpb25JbmZvKGJ5dGVbXSBjbGFzc0Zp
bGVCeXRlcywgaW50W10gY29udGFudFBvb2xPZmZzZXRzLCBpbnQgb2Zmc2V0KSB7CisJc3VwZXIo
Y2xhc3NGaWxlQnl0ZXMsIGNvbnRhbnRQb29sT2Zmc2V0cywgb2Zmc2V0KTsKK30KKwkKK1R5cGVB
bm5vdGF0aW9uSW5mbyhieXRlW10gY2xhc3NGaWxlQnl0ZXMsIGludFtdIGNvbnRhbnRQb29sT2Zm
c2V0cywgaW50IG9mZnNldCwgYm9vbGVhbiBydW50aW1lVmlzaWJsZSwgYm9vbGVhbiBwb3B1bGF0
ZSkgeworCXRoaXMoY2xhc3NGaWxlQnl0ZXMsIGNvbnRhbnRQb29sT2Zmc2V0cywgb2Zmc2V0KTsK
Kwl0aGlzLnJlYWRPZmZzZXQgPSAwOworCXRoaXMudGFyZ2V0VHlwZSA9IHUxQXQoMCk7CisJc3dp
dGNoICh0aGlzLnRhcmdldFR5cGUpIHsKKwkJY2FzZSBBbm5vdGF0aW9uVGFyZ2V0VHlwZUNvbnN0
YW50cy5DTEFTU19UWVBFX1BBUkFNRVRFUjoKKwkJY2FzZSBBbm5vdGF0aW9uVGFyZ2V0VHlwZUNv
bnN0YW50cy5NRVRIT0RfVFlQRV9QQVJBTUVURVI6CisJCQl0aGlzLmluZm8gPSB1MUF0KDEpOyAv
LyB0eXBlUGFyYW1ldGVySW5kZXgKKwkJCXRoaXMucmVhZE9mZnNldCArPSAyOworCQkJYnJlYWs7
CisJCQkKKwkJY2FzZSBBbm5vdGF0aW9uVGFyZ2V0VHlwZUNvbnN0YW50cy5DTEFTU19FWFRFTkRT
OgorCQkJdGhpcy5pbmZvID0gdTJBdCgxKTsgLy8gc3VwZXJ0eXBlSW5kZXgKKwkJCXRoaXMucmVh
ZE9mZnNldCArPSAzOworCQkJYnJlYWs7CisJCQkKKwkJY2FzZSBBbm5vdGF0aW9uVGFyZ2V0VHlw
ZUNvbnN0YW50cy5DTEFTU19UWVBFX1BBUkFNRVRFUl9CT1VORDoKKwkJY2FzZSBBbm5vdGF0aW9u
VGFyZ2V0VHlwZUNvbnN0YW50cy5NRVRIT0RfVFlQRV9QQVJBTUVURVJfQk9VTkQ6CisJCQl0aGlz
LmluZm8gPSB1MUF0KDEpOyAvLyB0eXBlUGFyYW1ldGVySW5kZXgKKwkJCXRoaXMuaW5mbzIgPSB1
MUF0KDIpOyAvLyBib3VuZEluZGV4OworCQkJdGhpcy5yZWFkT2Zmc2V0ICs9IDM7CisJCQlicmVh
azsKKwkJCQorCQljYXNlIEFubm90YXRpb25UYXJnZXRUeXBlQ29uc3RhbnRzLkZJRUxEOgorCQlj
YXNlIEFubm90YXRpb25UYXJnZXRUeXBlQ29uc3RhbnRzLk1FVEhPRF9SRVRVUk46CisJCWNhc2Ug
QW5ub3RhdGlvblRhcmdldFR5cGVDb25zdGFudHMuTUVUSE9EX1JFQ0VJVkVSOgorCQkJdGhpcy5y
ZWFkT2Zmc2V0ICsrOworCQkJYnJlYWs7CisJCQkKKwkJY2FzZSBBbm5vdGF0aW9uVGFyZ2V0VHlw
ZUNvbnN0YW50cy5NRVRIT0RfRk9STUFMX1BBUkFNRVRFUiA6CisJCQl0aGlzLmluZm8gPSB1MUF0
KDEpOyAvLyBtZXRob2RGb3JtYWxQYXJhbWV0ZXJJbmRleAorCQkJdGhpcy5yZWFkT2Zmc2V0ICs9
IDI7CisJCQlicmVhazsKKwkJCQorCQljYXNlIEFubm90YXRpb25UYXJnZXRUeXBlQ29uc3RhbnRz
LlRIUk9XUyA6CisJCQl0aGlzLmluZm8gPSB1MkF0KDEpOyAvLyB0aHJvd3NUeXBlSW5kZXgKKwkJ
CXRoaXMucmVhZE9mZnNldCArPSAzOworCQkJYnJlYWs7CisKKwkJZGVmYXVsdDoKKwkJCXRocm93
IG5ldyBJbGxlZ2FsU3RhdGVFeGNlcHRpb24oIlRhcmdldCB0eXBlIG5vdCBoYW5kbGVkICIrdGhp
cy50YXJnZXRUeXBlKTsgLy8kTk9OLU5MUy0xJAorCX0KKwlpbnQgdHlwZVBhdGhMZW5ndGggPSB1
MUF0KHRoaXMucmVhZE9mZnNldCk7CisJdGhpcy5yZWFkT2Zmc2V0ICsrOworCWlmICh0eXBlUGF0
aExlbmd0aCA9PSAwKSB7CisJCXRoaXMudHlwZVBhdGggPSBOT19UWVBFX1BBVEg7CisJfSBlbHNl
IHsKKwkJdGhpcy50eXBlUGF0aCA9IG5ldyBpbnRbdHlwZVBhdGhMZW5ndGgqMl07CisJCWludCBp
bmRleCA9IDA7CisJCWZvciAoaW50IGkgPSAwOyBpIDwgdHlwZVBhdGhMZW5ndGg7IGkrKykgewor
CQkJdGhpcy50eXBlUGF0aFtpbmRleCsrXSA9IHUxQXQodGhpcy5yZWFkT2Zmc2V0KyspOyAvLyBl
bnRyeSBraW5kCisJCQl0aGlzLnR5cGVQYXRoW2luZGV4KytdID0gdTFBdCh0aGlzLnJlYWRPZmZz
ZXQrKyk7IC8vIHR5cGUgYXJndW1lbnQgaW5kZXgKKwkJfQorCX0KKwl0aGlzLmFubm90YXRpb24g
PSBuZXcgQW5ub3RhdGlvbkluZm8oY2xhc3NGaWxlQnl0ZXMsIHRoaXMuY29uc3RhbnRQb29sT2Zm
c2V0cywgdGhpcy5zdHJ1Y3RPZmZzZXQgKyB0aGlzLnJlYWRPZmZzZXQsIHJ1bnRpbWVWaXNpYmxl
LCBwb3B1bGF0ZSk7CisJdGhpcy5yZWFkT2Zmc2V0ICs9IHRoaXMuYW5ub3RhdGlvbi5yZWFkT2Zm
c2V0OworfQorCitwdWJsaWMgSUJpbmFyeUFubm90YXRpb24gZ2V0QW5ub3RhdGlvbigpIHsKKwly
ZXR1cm4gdGhpcy5hbm5vdGF0aW9uOworfQorCitwcm90ZWN0ZWQgdm9pZCBpbml0aWFsaXplKCkg
eworCXRoaXMuYW5ub3RhdGlvbi5pbml0aWFsaXplKCk7Cit9CisKK3Byb3RlY3RlZCB2b2lkIHJl
c2V0KCkgeworCXRoaXMuYW5ub3RhdGlvbi5yZXNldCgpOworCXN1cGVyLnJlc2V0KCk7Cit9CisK
K3B1YmxpYyBTdHJpbmcgdG9TdHJpbmcoKSB7CisJU3RyaW5nQnVmZmVyIGJ1ZmZlciA9IG5ldyBT
dHJpbmdCdWZmZXIoKTsKKwlidWZmZXIuYXBwZW5kKHRoaXMuYW5ub3RhdGlvbik7CisJYnVmZmVy
LmFwcGVuZCgnICcpOworCS8vIE5vdCBmdWxseSBkZWNvZGluZyBpdCBoZXJlLCBqdXN0IGluY2x1
ZGluZyBhbGwgdGhlIGluZm9ybWF0aW9uIGluIHRoZSBzdHJpbmcKKwlidWZmZXIuYXBwZW5kKCJ0
YXJnZXRfdHlwZT0iKS5hcHBlbmQodGhpcy50YXJnZXRUeXBlKTsgLy8kTk9OLU5MUy0xJAorCWJ1
ZmZlci5hcHBlbmQoIiwgaW5mbz0iKS5hcHBlbmQodGhpcy5pbmZvKTsgLy8kTk9OLU5MUy0xJAor
CWJ1ZmZlci5hcHBlbmQoIiwgaW5mbzI9IikuYXBwZW5kKHRoaXMuaW5mbzIpOyAvLyROT04tTkxT
LTEkCisJaWYgKHRoaXMudHlwZVBhdGggIT0gTk9fVFlQRV9QQVRIKSB7CisJCWJ1ZmZlci5hcHBl
bmQoIiwgbG9jYXRpb249WyIpOyAvLyROT04tTkxTLTEkCisJCWZvciAoaW50IGkgPSAwLCBtYXgg
PSB0aGlzLnR5cGVQYXRoLmxlbmd0aDsgaSA8IG1heDsgaSArPSAyKSB7CisJCQlpZiAoaSA+IDAp
IHsKKwkJCQlidWZmZXIuYXBwZW5kKCIsICIpOyAvLyROT04tTkxTLTEkCisJCQl9CisJCQlzd2l0
Y2ggKHRoaXMudHlwZVBhdGhbaV0pIHsKKwkJCQljYXNlIDA6CisJCQkJCWJ1ZmZlci5hcHBlbmQo
IkFSUkFZIik7IC8vJE5PTi1OTFMtMSQKKwkJCQkJYnJlYWs7CisJCQkJY2FzZSAxOgorCQkJCQli
dWZmZXIuYXBwZW5kKCJJTk5FUl9UWVBFIik7IC8vJE5PTi1OTFMtMSQKKwkJCQkJYnJlYWs7CisJ
CQkJY2FzZSAyOgorCQkJCQlidWZmZXIuYXBwZW5kKCJXSUxEQ0FSRCIpOyAvLyROT04tTkxTLTEk
CisJCQkJCWJyZWFrOworCQkJCWNhc2UgMzoKKwkJCQkJYnVmZmVyLmFwcGVuZCgiVFlQRV9BUkdV
TUVOVCgiKS5hcHBlbmQodGhpcy50eXBlUGF0aFtpKzFdKS5hcHBlbmQoJyknKTsgLy8kTk9OLU5M
Uy0xJAorCQkJCQlicmVhazsKKwkJCX0KKwkJfQorCQlidWZmZXIuYXBwZW5kKCddJyk7CisJfQor
CXJldHVybiBidWZmZXIudG9TdHJpbmcoKTsKK30KKworCitwdWJsaWMgaW50IGdldFRhcmdldFR5
cGUoKSB7CisJcmV0dXJuIHRoaXMudGFyZ2V0VHlwZTsKK30KKworcHVibGljIGludCBnZXRTdXBl
cnR5cGVJbmRleCgpIHsKKwkvLyBhc3NlcnQgdGhpcy50YXJnZXRUeXBlID09IDB4MTAKKwlyZXR1
cm4gdGhpcy5pbmZvOworfQorCitwdWJsaWMgaW50IGdldFR5cGVQYXJhbWV0ZXJJbmRleCgpIHsK
KwkvLyBhc3NlcnQgdGhpcy50YXJnZXRUeXBlID09IDB4MDAgb3IgMHgwMQorCXJldHVybiB0aGlz
LmluZm87Cit9CisKK3B1YmxpYyBpbnQgZ2V0Qm91bmRJbmRleCgpIHsKKwkvLyBhc3NlcnQgdGhp
cy50YXJnZXRUeXBlID09IDB4MTEgb3IgMHgxMgorCXJldHVybiB0aGlzLmluZm8yOworfQorCitw
dWJsaWMgaW50IGdldE1ldGhvZEZvcm1hbFBhcmFtZXRlckluZGV4KCkgeworCS8vIGFzc2VydCB0
aGlzLnRhcmdldFR5cGUgPT0gMHgxNgorCXJldHVybiB0aGlzLmluZm87Cit9CisKK3B1YmxpYyBp
bnQgZ2V0VGhyb3dzVHlwZUluZGV4KCkgeworCS8vIGFzc2VydCB0aGlzLnRhcmdldFR5cGUgPT0g
MHgxNworCXJldHVybiB0aGlzLmluZm87Cit9CisKK3B1YmxpYyBpbnRbXSBnZXRUeXBlUGF0aCgp
IHsKKwlyZXR1cm4gdGhpcy50eXBlUGF0aDsKK30KKworcHVibGljIGludCBoYXNoQ29kZSgpIHsK
KwlmaW5hbCBpbnQgcHJpbWUgPSAzMTsKKwlpbnQgcmVzdWx0ID0gMTsKKwlyZXN1bHQgPSBwcmlt
ZSAqIHJlc3VsdCArIHRoaXMudGFyZ2V0VHlwZTsKKwlyZXN1bHQgPSBwcmltZSAqIHJlc3VsdCAr
IHRoaXMuaW5mbzsKKwlyZXN1bHQgPSBwcmltZSAqIHJlc3VsdCArIHRoaXMuaW5mbzI7CisJaWYg
KHRoaXMudHlwZVBhdGggIT0gbnVsbCkgeworCQlmb3IgKGludCBpID0gMCwgbWF4ID0gdGhpcy50
eXBlUGF0aC5sZW5ndGg7IGkgPCBtYXg7IGkrKykgeworCQkJcmVzdWx0ID0gcHJpbWUgKiByZXN1
bHQgKyB0aGlzLnR5cGVQYXRoW2ldOworCQl9CisJfQorCXJldHVybiByZXN1bHQ7Cit9CisKK3B1
YmxpYyBib29sZWFuIGVxdWFscyhPYmplY3Qgb2JqKSB7CisJaWYgKHRoaXMgPT0gb2JqKSB7CisJ
CXJldHVybiB0cnVlOworCX0KKwlpZiAob2JqID09IG51bGwpIHsKKwkJcmV0dXJuIGZhbHNlOwor
CX0KKwlpZiAoZ2V0Q2xhc3MoKSAhPSBvYmouZ2V0Q2xhc3MoKSkgeworCQlyZXR1cm4gZmFsc2U7
CisJfQorCisJVHlwZUFubm90YXRpb25JbmZvIG90aGVyID0gKFR5cGVBbm5vdGF0aW9uSW5mbykg
b2JqOworCisJaWYgKHRoaXMudGFyZ2V0VHlwZSAhPSBvdGhlci50YXJnZXRUeXBlKSB7CisJCXJl
dHVybiBmYWxzZTsKKwl9CisJCisJaWYgKHRoaXMuaW5mbyAhPSBvdGhlci5pbmZvKSB7CisJCXJl
dHVybiBmYWxzZTsKKwl9CisKKwlpZiAodGhpcy5pbmZvMiAhPSBvdGhlci5pbmZvMikgeworCQly
ZXR1cm4gZmFsc2U7CisJfQorCQorCWlmICghQXJyYXlzLmVxdWFscyh0aGlzLnR5cGVQYXRoLCBv
dGhlci50eXBlUGF0aCkpIHsKKwkJcmV0dXJuIGZhbHNlOworCX0KKwkKKwlyZXR1cm4gdGhpcy5h
bm5vdGF0aW9uLmVxdWFscyhvdGhlci5hbm5vdGF0aW9uKTsKK30KK30KZGlmZiAtLWdpdCBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9lbnYvSUJpbmFyeUZpZWxkLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZW52L0lCaW5hcnlGaWVsZC5qYXZh
CmluZGV4IDRlOWI1NjYuLmUyMmJmNjkgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9lbnYvSUJpbmFyeUZp
ZWxkLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2Vudi9JQmluYXJ5RmllbGQuamF2YQpAQCAtMSwxMiArMSwx
OCBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAw
OSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAx
MyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRo
aXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2
YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEu
MAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFi
bGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCiAgKgor
ICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0
aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkg
YW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2Vz
CisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0
aW9uIG9mIHRoZSBKQ1AuCisgKiAKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9y
YXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KKyAqICAgICBBbmR5IENsZW1l
bnQgKEdvUGl2b3RhbCwgSW5jKSBhY2xlbWVudEBnb3Bpdm90YWwuY29tIC0gQ29udHJpYnV0aW9u
cyBmb3IKKyAqICAgICAgICAgQnVnIDQwNzE5MSAtIFsxLjhdIEJpbmFyeSBhY2Nlc3Mgc3VwcG9y
dCBmb3IgdHlwZSBhbm5vdGF0aW9ucwogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdl
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnY7CiAKQEAgLTE5LDYgKzI1LDEx
IEBACiBJQmluYXJ5QW5ub3RhdGlvbltdIGdldEFubm90YXRpb25zKCk7CiAKIC8qKgorICogQW5z
d2VyIHRoZSBydW50aW1lIHZpc2libGUgYW5kIGludmlzaWJsZSB0eXBlIGFubm90YXRpb25zIGZv
ciB0aGlzIGZpZWxkIG9yIG51bGwgaWYgbm9uZS4KKyAqLworSUJpbmFyeVR5cGVBbm5vdGF0aW9u
W10gZ2V0VHlwZUFubm90YXRpb25zKCk7CisKKy8qKgogICoKICAqIEByZXR1cm4gb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLkNvbnN0YW50CiAgKi8KZGlmZiAtLWdpdCBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9lbnYvSUJpbmFyeU1ldGhvZC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Vudi9JQmluYXJ5TWV0aG9kLmphdmEK
aW5kZXggMTc3YWUyNC4uYmU3YWE5MCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Vudi9JQmluYXJ5TWV0
aG9kLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2Vudi9JQmluYXJ5TWV0aG9kLmphdmEKQEAgLTEsMTMgKzEs
MTkgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIw
MTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIw
MTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBU
aGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBh
dmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYx
LjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxh
YmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAogICoK
KyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNh
dGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1Ap
IGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3Nl
cworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNh
dGlvbiBvZiB0aGUgSkNQLgorICogCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBv
cmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCiAgKiAgICAgU3RlcGhhbiBI
ZXJybWFubiAtIENvbnRyaWJ1dGlvbiBmb3IgYnVnIDE4NjM0MiAtIFtjb21waWxlcl1bbnVsbF0g
VXNpbmcgYW5ub3RhdGlvbnMgZm9yIG51bGwgY2hlY2tpbmcKKyAqICAgICBBbmR5IENsZW1lbnQg
KEdvUGl2b3RhbCwgSW5jKSBhY2xlbWVudEBnb3Bpdm90YWwuY29tIC0gQ29udHJpYnV0aW9ucyBm
b3IKKyAqICAgICAgICAgQnVnIDQwNzE5MSAtIFsxLjhdIEJpbmFyeSBhY2Nlc3Mgc3VwcG9ydCBm
b3IgdHlwZSBhbm5vdGF0aW9ucwogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnY7CiAKQEAgLTg5LDQgKzk1LDkgQEAK
ICAqIEFuc3dlciB3aGV0aGVyIHRoZSByZWNlaXZlciByZXByZXNlbnRzIGEgY2xhc3MgaW5pdGlh
bGl6ZXIgbWV0aG9kLgogICovCiBib29sZWFuIGlzQ2xpbml0KCk7CisKKy8qKgorICogQW5zd2Vy
IHRoZSB0eXBlIGFubm90YXRpb25zIG9uIHRoaXMgbWV0aG9kLgorICovCitJQmluYXJ5VHlwZUFu
bm90YXRpb25bXSBnZXRUeXBlQW5ub3RhdGlvbnMoKTsKIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9l
bnYvSUJpbmFyeVR5cGUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9lbnYvSUJpbmFyeVR5cGUuamF2YQppbmRleCA3
NDI0MzI1Li4yY2YzZWZhIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZW52L0lCaW5hcnlUeXBlLmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2Vudi9JQmluYXJ5VHlwZS5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAwOSBJQk0gQ29ycG9y
YXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9y
YXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBh
bmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRl
ciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2gg
YWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTcs
NiArNyw4IEBACiAgKgogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAt
IGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgorICogICAgIEFuZHkgQ2xlbWVudCAoR29Q
aXZvdGFsLCBJbmMpIGFjbGVtZW50QGdvcGl2b3RhbC5jb20gLSBDb250cmlidXRpb25zIGZvcgor
ICogICAgICAgICBidWcgNDA3MTkxIC0gWzEuOF0gQmluYXJ5IGFjY2VzcyBzdXBwb3J0IGZvciB0
eXBlIGFubm90YXRpb25zCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudjsKIApAQCAtMjMsNiArMjUsMTMgQEAKICAq
LwogCiBJQmluYXJ5QW5ub3RhdGlvbltdIGdldEFubm90YXRpb25zKCk7CisKKy8qKgorICogQW5z
d2VyIHRoZSBydW50aW1lIHZpc2libGUgYW5kIGludmlzaWJsZSB0eXBlIGFubm90YXRpb25zIGZv
ciB0aGlzIHR5cGUgb3IgbnVsbCBpZiBub25lLgorICovCisKK0lCaW5hcnlUeXBlQW5ub3RhdGlv
bltdIGdldFR5cGVBbm5vdGF0aW9ucygpOworCiAvKioKICAqIEFuc3dlciB0aGUgZW5jbG9zaW5n
IG1ldGhvZCAoaW5jbHVkaW5nIG1ldGhvZCBzZWxlY3RvciBhbmQgbWV0aG9kIGRlc2NyaXB0b3Ip
LCBvcgogICogbnVsbCBpZiBub25lLgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Vudi9JQmluYXJ5VHlw
ZUFubm90YXRpb24uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9lbnYvSUJpbmFyeVR5cGVBbm5vdGF0aW9uLmphdmEK
bmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMC4uYzA1OTViMgotLS0gL2Rldi9udWxs
CisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9lbnYvSUJpbmFyeVR5cGVBbm5vdGF0aW9uLmphdmEKQEAgLTAsMCArMSw3
OCBAQAorLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKyAqIENvcHlyaWdodCAoYykgMjAxMyBHb1Bp
dm90YWwsIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4KKyAqIEFsbCByaWdodHMgcmVzZXJ2ZWQu
IFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKKyAqIGFyZSBtYWRl
IGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2Ug
djEuMAorICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFp
bGFibGUgYXQKKyAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisg
KgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZp
Y2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpD
UCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBv
c2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZp
Y2F0aW9uIG9mIHRoZSBKQ1AuCisgKgorICogQ29udHJpYnV0b3JzOgorICogICAgICAgIEFuZHkg
Q2xlbWVudCAoR29QaXZvdGFsLCBJbmMpIGFjbGVtZW50QGdvcGl2b3RhbC5jb20gLSBDb250cmli
dXRpb25zIGZvcgorICogICAgICAgICAgQnVnIDQwNzE5MSAtIFsxLjhdIEJpbmFyeSBhY2Nlc3Mg
c3VwcG9ydCBmb3IgdHlwZSBhbm5vdGF0aW9ucworICoqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCitw
YWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnY7CisKK2ltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuY29kZWdlbi5Bbm5vdGF0aW9uVGFyZ2V0
VHlwZUNvbnN0YW50czsKKworLyoqCisgKiBUaGlzIHJlcHJlc2VudHMgY2xhc3MgZmlsZSBpbmZv
cm1hdGlvbiBhYm91dCBhbiBhbm5vdGF0aW9uIGluc3RhbmNlLgorICovCitwdWJsaWMgaW50ZXJm
YWNlIElCaW5hcnlUeXBlQW5ub3RhdGlvbiB7CisJCisJc3RhdGljIGludFtdIE5PX1RZUEVfUEFU
SCA9IG5ldyBpbnRbMF07CisKKy8qKgorICogQHJldHVybiB0aGUgYW5ub3RhdGlvbgorICovCitJ
QmluYXJ5QW5ub3RhdGlvbiBnZXRBbm5vdGF0aW9uKCk7CisKKy8qKgorICogQHJldHVybiB0aGUg
dGFyZ2V0IHR5cGUsIGFjY29yZGluZyB0byB0aGUgY29uc3RhbnRzIGluIHtAbGluayBBbm5vdGF0
aW9uVGFyZ2V0VHlwZUNvbnN0YW50c30KKyAqLworaW50IGdldFRhcmdldFR5cGUoKTsKKworLyoq
CisgKiAKKyAqIEByZXR1cm4gdGhlIHJhdyB0eXBlIHBhdGggZGF0YSwgZWFjaCBwYWlyIG9mIGlu
dHMgaXMgYSB0eXBlIHBhdGggZW50cnkKKyAqLworaW50W10gZ2V0VHlwZVBhdGgoKTsKKworLyoq
CisgKiBBcHBsaWNhYmxlIGZvciB0YXJnZXQgdHlwZSAweDEwKENMQVNTX0VYVEVORFMpCisgKiAK
KyAqIEByZXR1cm4gdGhlIHN1cGVydHlwZSBpbmRleC4gLTEgKDY1NTM1KSBmb3Igc3VwZXJjbGFz
cywgMC4ubiBmb3Igc3VwZXJpbnRlcmZhY2VzCisgKi8KK2ludCBnZXRTdXBlcnR5cGVJbmRleCgp
OworCisvKioKKyAqIEFwcGxpY2FibGUgZm9yIHRhcmdldCB0eXBlIDB4MDAoQ0xBU1NfVFlQRV9Q
QVJBTUVURVIpLCAweDAxKE1FVEhPRF9UWVBFX1BBUkFNRVRFUikKKyAqIAorICogQHJldHVybiB0
aGUgdHlwZSBwYXJhbWV0ZXIgaW5kZXggKDAgYmFzZWQpCisgKi8KK2ludCBnZXRUeXBlUGFyYW1l
dGVySW5kZXgoKTsKKworLyoqCisgKiBBcHBsaWNhYmxlIGZvciB0YXJnZXQgdHlwZSAweDExKENM
QVNTX1RZUEVfUEFSQU1FVEVSX0JPVU5EKSwgMHgxMihNRVRIT0RfVFlQRV9QQVJBTUVURVJfQk9V
TkQpCisgKiAKKyAqIEByZXR1cm4gdGhlIGJvdW5kIGluZGV4CisgKi8KK2ludCBnZXRCb3VuZElu
ZGV4KCk7CisKKy8qKgorICogQXBwbGljYWJsZSBmb3IgdGFyZ2V0IHR5cGUgMHgxNihNRVRIT0Rf
Rk9STUFMX1BBUkFNRVRFUikKKyAqIAorICogQHJldHVybiB0aGUgbWV0aG9kIGZvcm1hbCBwYXJh
bWV0ZXIgaW5kZXgKKyAqLworaW50IGdldE1ldGhvZEZvcm1hbFBhcmFtZXRlckluZGV4KCk7CisK
Ky8qKgorICogQXBwbGljYWJsZSBmb3IgdGFyZ2V0IHR5cGUgMHgxNyhUSFJPV1MpCisgKiAKKyAq
IEByZXR1cm4gdGhlIHRocm93cyB0eXBlIGluZGV4CisgKi8KK2ludCBnZXRUaHJvd3NUeXBlSW5k
ZXgoKTsKKworfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZXZhbC9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvZXZhbC9Db2RlU25pcHBldFNrZWxldG9uLmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9ldmFsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9ldmFsL0NvZGVTbmlw
cGV0U2tlbGV0b24uamF2YQppbmRleCBmMDA5MGIxLi5jMjM1ODlkIDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9ldmFsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9ldmFsL0NvZGVT
bmlwcGV0U2tlbGV0b24uamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9ldmFsL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9ldmFsL0NvZGVTbmlwcGV0U2tlbGV0b24uamF2YQpAQCAtMSwx
MyArMSwxOSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAw
MCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAw
MCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2
ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBt
YWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vu
c2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBh
dmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1s
CiAgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVj
aWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3Mg
KEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1
cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVj
aWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKiAKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0g
Q29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KICAqICAgICBTdGVw
aGFuIEhlcnJtYW5uIC0gQ29udHJpYnV0aW9uIGZvciBidWcgMTg2MzQyIC0gW2NvbXBpbGVyXVtu
dWxsXSBVc2luZyBhbm5vdGF0aW9ucyBmb3IgbnVsbCBjaGVja2luZworICogICAgIEFuZHkgQ2xl
bWVudCAoR29QaXZvdGFsLCBJbmMpIGFjbGVtZW50QGdvcGl2b3RhbC5jb20gLSBDb250cmlidXRp
b25zIGZvcgorICogICAgICAgICBCdWcgNDA3MTkxIC0gWzEuOF0gQmluYXJ5IGFjY2VzcyBzdXBw
b3J0IGZvciB0eXBlIGFubm90YXRpb25zCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2th
Z2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmV2YWw7CiAKQEAgLTIwLDYgKzI2LDcgQEAKIGlt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklCaW5hcnlNZXRob2Q7
CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5JQmluYXJ5TmVz
dGVkVHlwZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklC
aW5hcnlUeXBlOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYu
SUJpbmFyeVR5cGVBbm5vdGF0aW9uOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b3JlLnV0aWwuVXRpbDsKIAogLyoqCkBAIC02OCw2ICs3NSw5IEBACiAJCXB1YmxpYyBpbnQgZ2V0
QW5ub3RhdGVkUGFyYW1ldGVyc0NvdW50KCkgewogCQkJcmV0dXJuIDA7CiAJCX0KKwkJcHVibGlj
IElCaW5hcnlUeXBlQW5ub3RhdGlvbltdIGdldFR5cGVBbm5vdGF0aW9ucygpIHsKKwkJCXJldHVy
biBudWxsOyAKKwkJfQogCQlwdWJsaWMgY2hhcltdIGdldFNlbGVjdG9yKCkgewogCQkJcmV0dXJu
IHRoaXMuc2VsZWN0b3I7CiAJCX0KQEAgLTExMiw2ICsxMjIsOSBAQAogcHVibGljIElCaW5hcnlB
bm5vdGF0aW9uW10gZ2V0QW5ub3RhdGlvbnMoKSB7CiAJcmV0dXJuIG51bGw7CiB9CitwdWJsaWMg
SUJpbmFyeVR5cGVBbm5vdGF0aW9uW10gZ2V0VHlwZUFubm90YXRpb25zKCkgeworCXJldHVybiBu
dWxsOyAKK30KIHB1YmxpYyBjaGFyW10gZ2V0RW5jbG9zaW5nTWV0aG9kKCkgewogCXJldHVybiBu
dWxsOwogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvcmUvaGllcmFyY2h5L0hpZXJhcmNoeUJpbmFyeVR5cGUuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3Jl
L2hpZXJhcmNoeS9IaWVyYXJjaHlCaW5hcnlUeXBlLmphdmEKaW5kZXggYjkwZmEyNS4uYTBlYTg2
NCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvcmUvaGllcmFyY2h5L0hpZXJhcmNoeUJpbmFyeVR5cGUuamF2YQorKysgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9o
aWVyYXJjaHkvSGllcmFyY2h5QmluYXJ5VHlwZS5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAwOSBJQk0gQ29ycG9y
YXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9y
YXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBh
bmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRl
ciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2gg
YWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTcs
NiArNyw4IEBACiAgKgogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAt
IGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgorICogICAgIEFuZHkgQ2xlbWVudCAoR29Q
aXZvdGFsLCBJbmMpIGFjbGVtZW50QGdvcGl2b3RhbC5jb20gLSBDb250cmlidXRpb25zIGZvcgor
ICogICAgICAgICBidWcgNDA3MTkxIC0gWzEuOF0gQmluYXJ5IGFjY2VzcyBzdXBwb3J0IGZvciB0
eXBlIGFubm90YXRpb25zCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvcmUuaGllcmFyY2h5OwogCkBAIC0xOSw2ICsyMSw3IEBACiBp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5JQmluYXJ5TWV0aG9k
OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuSUJpbmFyeU5l
c3RlZFR5cGU7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5J
QmluYXJ5VHlwZTsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52
LklCaW5hcnlUeXBlQW5ub3RhdGlvbjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29yZS5zZWFyY2guaW5kZXhpbmcuSUluZGV4Q29uc3RhbnRzOwogCiBwdWJsaWMgY2xhc3MgSGll
cmFyY2h5QmluYXJ5VHlwZSBpbXBsZW1lbnRzIElCaW5hcnlUeXBlIHsKQEAgLTUxLDYgKzU0LDEy
IEBACiBwdWJsaWMgSUJpbmFyeUFubm90YXRpb25bXSBnZXRBbm5vdGF0aW9ucygpIHsKIAlyZXR1
cm4gbnVsbDsKIH0KKy8qKgorICogQHNlZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIuZW52LklCaW5hcnlUeXBlCisgKi8KK3B1YmxpYyBJQmluYXJ5VHlwZUFubm90YXRpb25bXSBn
ZXRUeXBlQW5ub3RhdGlvbnMoKSB7CisJcmV0dXJuIG51bGw7Cit9CiBwdWJsaWMgY2hhcltdIGdl
dEVuY2xvc2luZ01ldGhvZCgpIHsKIAlyZXR1cm4gbnVsbDsKIH0=
</data>

          </attachment>
      

    </bug>

</bugzilla>