<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>429948</bug_id>
          
          <creation_ts>2014-03-08 21:45:00 -0500</creation_ts>
          <short_desc>[1.8][model] UnsupportedOperationException is thrown when a lambda expression is nested</short_desc>
          <delta_ts>2014-03-09 20:08:22 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Toshihiro Nakamura">toshihiro.nakamura</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="61851"
          type_id="1"
          status="+"
          setter="stephan.herrmann"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2373426</commentid>
    <comment_count>0</comment_count>
    <who name="Toshihiro Nakamura">toshihiro.nakamura</who>
    <bug_when>2014-03-08 21:45:04 -0500</bug_when>
    <thetext>I use Eclipse Support for Java 8 (https://wiki.eclipse.org/JDT/Eclipse_Java_8_Support_(BETA)).

Installation details: 
- Eclipse Java Development Tools Patch for Java 8 Support (BETA)	1.0.0.v20140308-1731 
- Eclipse Plug-in Development Environment Patch for Java 8 Support (BETA)	1.0.0.v20140303-1740
- Eclipse Standard/SDK	2.0.2.20140224-0000	epp.package.standard

I can&apos;t run following code from Eclipse.
This code works fine with JDK javac and java command.

------------------------------------------------------------------------------------
package xxx;

import java.util.function.Supplier;

public class Main {

	public static void main(String[] args) {
		execute(() -&gt; {
			executeInner(() -&gt; {
			});
			return null;
		});
		System.out.println(&quot;done&quot;);
	}

	static &lt;R&gt; R execute(Supplier&lt;R&gt; supplier) {
		return null;
	}

	static void executeInner(Runnable callback) {
	}
}

------------------------------------------------------------------------------------
eclipse.buildId=4.3.2.M20140221-1700
java.version=1.8.0
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=ja_JP
Framework arguments:  -product org.eclipse.epp.package.standard.product -keyring /Users/nakamura/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.standard.product -keyring /Users/nakamura/.eclipse_keyring -showlocation

Error
Sun Mar 09 11:20:45 JST 2014
Unhandled event loop exception

java.lang.UnsupportedOperationException
	at org.eclipse.jdt.internal.compiler.lookup.InferenceVariable.constantPoolName(InferenceVariable.java:50)
	at org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.signature(ReferenceBinding.java:1734)
	at org.eclipse.jdt.internal.core.LambdaMethod.make(LambdaMethod.java:54)
	at org.eclipse.jdt.internal.core.LambdaExpression.&lt;init&gt;(LambdaExpression.java:47)
	at org.eclipse.jdt.internal.core.util.HandleFactory.createElement(HandleFactory.java:217)
	at org.eclipse.jdt.internal.core.util.HandleFactory.createElement(HandleFactory.java:216)
	at org.eclipse.jdt.internal.core.util.HandleFactory.createLambdaTypeElement(HandleFactory.java:171)
	at org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.rememberAllTypes(HierarchyResolver.java:492)
	at org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.resolve(HierarchyResolver.java:824)
	at org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.resolve(HierarchyResolver.java:624)
	at org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder.buildSupertypes(HierarchyBuilder.java:116)
	at org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.build(IndexBasedHierarchyBuilder.java:136)
	at org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.compute(TypeHierarchy.java:301)
	at org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.refresh(TypeHierarchy.java:1268)
	at org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.executeOperation(CreateTypeHierarchyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.SourceType.newSupertypeHierarchy(SourceType.java:741)
	at org.eclipse.jdt.internal.core.SourceType.newSupertypeHierarchy(SourceType.java:693)
	at org.eclipse.jdt.internal.launching.JavaLaunchableTester.hasSuperclass(JavaLaunchableTester.java:467)
	at org.eclipse.jdt.internal.launching.JavaLaunchableTester.test(JavaLaunchableTester.java:610)
	at org.eclipse.core.internal.expressions.Property.test(Property.java:58)
	at org.eclipse.core.internal.expressions.TestExpression.evaluate(TestExpression.java:99)
	at org.eclipse.core.internal.expressions.CompositeExpression.evaluateOr(CompositeExpression.java:68)
	at org.eclipse.core.internal.expressions.OrExpression.evaluate(OrExpression.java:21)
	at org.eclipse.core.internal.expressions.CompositeExpression.evaluateAnd(CompositeExpression.java:53)
	at org.eclipse.core.internal.expressions.AndExpression.evaluate(AndExpression.java:29)
	at org.eclipse.core.internal.expressions.CompositeExpression.evaluateAnd(CompositeExpression.java:53)
	at org.eclipse.core.internal.expressions.IterateExpression.evaluate(IterateExpression.java:150)
	at org.eclipse.core.internal.expressions.CompositeExpression.evaluateAnd(CompositeExpression.java:53)
	at org.eclipse.core.internal.expressions.WithExpression.evaluate(WithExpression.java:72)
	at org.eclipse.core.internal.expressions.CompositeExpression.evaluateAnd(CompositeExpression.java:53)
	at org.eclipse.core.internal.expressions.EnablementExpression.evaluate(EnablementExpression.java:53)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension.evalEnablementExpression(LaunchShortcutExtension.java:287)
	at org.eclipse.debug.ui.actions.ContextualLaunchAction.isApplicable(ContextualLaunchAction.java:295)
	at org.eclipse.debug.ui.actions.ContextualLaunchAction.fillMenu(ContextualLaunchAction.java:218)
	at org.eclipse.debug.ui.actions.ContextualLaunchAction$1.menuShown(ContextualLaunchAction.java:137)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:255)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4166)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1466)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1489)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1474)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1279)
	at org.eclipse.jface.action.ActionContributionItem.copyMenu(ActionContributionItem.java:1268)
	at org.eclipse.jface.action.ActionContributionItem.handleShowProxy(ActionContributionItem.java:1248)
	at org.eclipse.jface.action.ActionContributionItem.access$4(ActionContributionItem.java:1237)
	at org.eclipse.jface.action.ActionContributionItem$8.handleEvent(ActionContributionItem.java:1210)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4166)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1466)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1489)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1470)
	at org.eclipse.swt.widgets.Menu.menuWillOpen(Menu.java:806)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5610)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSMenu.popUpContextMenu(NSMenu.java:77)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:278)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4089)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3644)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:140)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:611)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2373428</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-08 21:58:11 -0500</bug_when>
    <thetext>Thanks Toshihiro, I&apos;ll follow up.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2373440</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-09 01:49:30 -0500</bug_when>
    <thetext>This is a recent regression and a very good bug to have been caught and
fixed before GA. See that the compiler has no problem compiling and running
this code. Only the IDE has an issue. Basically during hierarchy computation
we end up materializing a temporary copy of the enclosing lambda expression
that was used in type inference instead of the original.

Fix and tests released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=b69d35a983d0e1b233c90a69307b21908dd75c4a.

Thanks for continuing to test.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2373487</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-03-09 08:33:33 -0400</bug_when>
    <thetext>Wow, we were leaking a secret: users should never see the word &quot;InferenceVariable&quot; :)


Thanks for catching and thanks for fixing.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2373504</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-09 09:48:44 -0400</bug_when>
    <thetext>I am not sure if we would ever create a copy of a copy - Scope.originalReferenceContext should return the blue blooded original, so
I amended the fix with: 

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=4ec3d8941998f287d44af5beff0b7f8ef9d972cc

Original(:)) commit here: 

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=b69d35a983d0e1b233c90a69307b21908dd75c4.

Stephan, thanks for reviewing both parts.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2373546</commentid>
    <comment_count>5</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-03-09 18:12:38 -0400</bug_when>
    <thetext>Fix looks good for now (nitpick: seeing you make the field original public: I guess the method original() is obsolete :) ).

Digging deeper the following root cause looks suspicious to me, see this block in LE.resolveType():

if (this.expectedType != null &amp;&amp; this.original == this) {  // final resolution.
	this.ordinal = blockScope.referenceCompilationUnit().record(this);
}

This check misses the fact, that we might be within a copy-resolve process of an enclosing lambda, i.e., our entire universe is only fake, still the current lambda is final resolved, sure, but still this final resolve in a fake universe shouldn&apos;t count and shouldn&apos;t be recorded in the CUD.

In fact in test429948() the CUD contains 4 elements in CUD#functionalExpressions, although the source has only two lambdas.

I&apos;ll file a follow-up bug for that. Hopefully, for GA this current fix is enough (it surely doesn&apos;t hurt).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2373548</commentid>
    <comment_count>6</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-03-09 18:15:29 -0400</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #5)
&gt; I&apos;ll file a follow-up bug for that.

It&apos;s bug 429966</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2373550</commentid>
    <comment_count>7</comment_count>
    <who name="Toshihiro Nakamura">toshihiro.nakamura</who>
    <bug_when>2014-03-09 18:27:54 -0400</bug_when>
    <thetext>I tried following new version:

- Eclipse Java Development Tools Patch for Java 8 Support (BETA)	1.0.0.v20140309-1413

It works fine for me.

Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2373561</commentid>
    <comment_count>8</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-09 20:08:22 -0400</bug_when>
    <thetext>(In reply to Toshihiro Nakamura from comment #7)

&gt; It works fine for me.

Thanks, Marking as VERIFIED</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>