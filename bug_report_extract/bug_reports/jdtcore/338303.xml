<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>338303</bug_id>
          
          <creation_ts>2011-02-26 06:30:00 -0500</creation_ts>
          <short_desc>[compiler][null] Warning about Redundant assignment conflicts with definite assignment analysis</short_desc>
          <delta_ts>2011-03-07 09:01:28 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.7</version>
          <rep_platform>Macintosh</rep_platform>
          <op_sys>Mac OS X - Carbon (unsup.)</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.7 M6</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>keesvr</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>amj87.iitr</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1889743</commentid>
    <comment_count>0</comment_count>
    <who name="">keesvr</who>
    <bug_when>2011-02-26 06:30:55 -0500</bug_when>
    <thetext>Build Identifier: 20110218-0911

Given the following function:
----------
   TileClusterCacheEntry getReadonlyCluster(final File f,
            final int zoom, final long clusterNo) {
        TileClusterCacheEntry ce;
        try {
            ce = searchCacheEntry(zoom, clusterNo);
            if (ce == null) {
                ce = loadEntry(f, zoom, clusterNo, false);
            }
        } catch (final IOException e) {
            e.printStackTrace();
            ce = null;
        }
        return ce;
    }
----
Where only loadEntry() can throw an IOException.

I get the following warning on the statement &apos;ce = null;&apos;:

Redundant assignment: The variable ce can only be null at this location	

However, without this assignment statement I get an error saying that &apos;ce&apos; may not have been initialized.

Yes, the warning is correct, and yes, the error is only there because the Java Language Specification requires it, and yes, I can suppress the warning. Nevertheless, I think it is better not to emit this warning in the first place.


Reproducible: Always</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1889760</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-02-26 09:04:16 -0500</bug_when>
    <thetext>I can reproduce in HEAD using the following self-contained version of
the test case:

import java.io.File;
import java.io.IOException;

public class Bug338303 {
   Object test(Object in, final File f) {
        Object local;
        try {
            local = in;
            if (local == null)
				local = loadEntry(f, false);
        } catch (final IOException e) {
            e.printStackTrace();
            local = null;
        }
        return local;
    }

    private Object loadEntry(File f, boolean b)  throws IOException {
        throw new IOException();
    }
}

We&apos;ll look into this. Thanks for the report.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1889934</commentid>
    <comment_count>2</comment_count>
      <attachid>189900</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-02-27 14:23:56 -0500</bug_when>
    <thetext>Created attachment 189900
test &amp; proposed fix

I was pleased to see how well localized this can be fixed: with this
patch we simply refuse to report an assignment to a local as redundant
if the lhs has the bit FirstAssignmentToLocal set.
I believe that&apos;s exactly what we need to express here.

Compiler regression tests are currently running.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1889991</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-02-27 16:46:01 -0500</bug_when>
    <thetext>Released for 3.7M6</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1894166</commentid>
    <comment_count>4</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-03-07 09:01:28 -0500</bug_when>
    <thetext>Verified for 3.7M6 using build I20110301-1357</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>189900</attachid>
            <date>2011-02-27 14:23:00 -0500</date>
            <delta_ts>2011-02-27 14:23:56 -0500</delta_ts>
            <desc>test &amp; proposed fix</desc>
            <filename>Bug_338303.patch</filename>
            <type>text/plain</type>
            <size>3687</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMAojUCBvcmcuZWNsaXBzZS5qZHQuY29yZQpJ
bmRleDogY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2JsZW0v
UHJvYmxlbVJlcG9ydGVyLmphdmEKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBz
ZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVtUmVwb3J0ZXIuamF2YSx2CnJldHJpZXZpbmcgcmV2aXNp
b24gMS40MzIKZGlmZiAtdSAtcjEuNDMyIFByb2JsZW1SZXBvcnRlci5qYXZhCi0tLSBjb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVtUmVwb3J0
ZXIuamF2YQkxNiBGZWIgMjAxMSAwNzo1Njo1MCAtMDAwMAkxLjQzMgorKysgY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2JsZW0vUHJvYmxlbVJlcG9ydGVyLmph
dmEJMjcgRmViIDIwMTEgMTk6MTU6MTkgLTAwMDAKQEAgLTgsNyArOCw5IEBACiAgKiBDb250cmli
dXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVu
dGF0aW9uCiAgKiAgICAgQmVuamFtaW4gTXVza2FsbGEgLSBDb250cmlidXRpb24gZm9yIGJ1ZyAy
MzkwNjYKLSAqICAgICBTdGVwaGFuIEhlcnJtYW5uICAtIENvbnRyaWJ1dGlvbiBmb3IgYnVnIDIz
NjM4NQorICogICAgIFN0ZXBoYW4gSGVycm1hbm4gIC0gQ29udHJpYnV0aW9ucyBmb3IgCisgKiAg
ICAgCQkJCQkJYnVnIDIzNjM4NSAtIAorICogICAgIAkJCQkJCWJ1ZyAzMzgzMDMgLSBXYXJuaW5n
IGFib3V0IFJlZHVuZGFudCBhc3NpZ25tZW50IGNvbmZsaWN0cyB3aXRoIGRlZmluaXRlIGFzc2ln
bm1lbnQKICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29tcGlsZXIucHJvYmxlbTsKIApAQCAtNDk4MSw2ICs0OTgzLDggQEAKIH0KIAog
cHVibGljIHZvaWQgbG9jYWxWYXJpYWJsZVJlZHVuZGFudE51bGxBc3NpZ25tZW50KExvY2FsVmFy
aWFibGVCaW5kaW5nIGxvY2FsLCBBU1ROb2RlIGxvY2F0aW9uKSB7CisJaWYgKChsb2NhdGlvbi5i
aXRzICYgQVNUTm9kZS5GaXJzdEFzc2lnbm1lbnRUb0xvY2FsKSAhPSAwKSAvLyBodHRwczovL2J1
Z3MuZWNsaXBzZS5vcmcvMzM4MzAzIC0gV2FybmluZyBhYm91dCBSZWR1bmRhbnQgYXNzaWdubWVu
dCBjb25mbGljdHMgd2l0aCBkZWZpbml0ZSBhc3NpZ25tZW50CisJCXJldHVybjsKIAlpbnQgc2V2
ZXJpdHkgPSBjb21wdXRlU2V2ZXJpdHkoSVByb2JsZW0uUmVkdW5kYW50TG9jYWxWYXJpYWJsZU51
bGxBc3NpZ25tZW50KTsKIAlpZiAoc2V2ZXJpdHkgPT0gUHJvYmxlbVNldmVyaXRpZXMuSWdub3Jl
KSByZXR1cm47CiAJU3RyaW5nW10gYXJndW1lbnRzID0gbmV3IFN0cmluZ1tdIHtuZXcgU3RyaW5n
KGxvY2FsLm5hbWUpICB9OwojUCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlcgpJ
bmRleDogc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24v
TnVsbFJlZmVyZW5jZVRlc3QuamF2YQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xp
cHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL051bGxSZWZlcmVuY2VUZXN0LmphdmEs
dgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTEyCmRpZmYgLXUgLXIxLjExMiBOdWxsUmVmZXJlbmNl
VGVzdC5qYXZhCi0tLSBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVn
cmVzc2lvbi9OdWxsUmVmZXJlbmNlVGVzdC5qYXZhCTE2IEZlYiAyMDExIDE4OjU3OjUxIC0wMDAw
CTEuMTEyCisrKyBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVz
c2lvbi9OdWxsUmVmZXJlbmNlVGVzdC5qYXZhCTI3IEZlYiAyMDExIDE5OjE1OjM5IC0wMDAwCkBA
IC04LDcgKzgsNyBAQAogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAt
IGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgogICogICAgIFN0ZXBoYW4gSGVycm1hbm4g
PHN0ZXBoYW5AY3MudHUtYmVybGluLmRlPiAtIENvbnRyaWJ1dGlvbnMgZm9yCi0gKiAgICAgCQkJ
YnVncyAzMjU3NTUsIDEzMzEyNSwgMjkyNDc4LCAzMTkyMDEsIDMyMDE3MCBhbmQgMzMyNjM3Cisg
KiAgICAgCQkJYnVncyAzMjU3NTUsIDEzMzEyNSwgMjkyNDc4LCAzMTkyMDEsIDMyMDE3MCwgMzMy
NjM3IGFuZCAzMzgzMDMKICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci5yZWdyZXNzaW9uOwogCkBAIC0xNDAyNSw0ICsx
NDAyNSwzMyBAQAogCQl9LAogCQkiIik7CiB9CisvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcv
MzM4MzAzIC0gV2FybmluZyBhYm91dCBSZWR1bmRhbnQgYXNzaWdubWVudCBjb25mbGljdHMgd2l0
aCBkZWZpbml0ZSBhc3NpZ25tZW50CitwdWJsaWMgdm9pZCB0ZXN0QnVnMzM4MzAzKCkgeworCXRo
aXMucnVuQ29uZm9ybVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiQnVnMzM4MzAzLmphdmEi
LAorCQkJImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsgCisJCQkiaW1wb3J0IGphdmEuaW8uSU9F
eGNlcHRpb247XG4iICsgCisJCQkiXG4iICsgCisJCQkicHVibGljIGNsYXNzIEJ1ZzMzODMwMyB7
XG4iICsgCisJCQkiICAgT2JqZWN0IHRlc3QoT2JqZWN0IGluLCBmaW5hbCBGaWxlIGYpIHtcbiIg
KyAKKwkJCSIgICAgICAgIE9iamVjdCBsb2NhbDtcbiIgKyAKKwkJCSIgICAgICAgIHRyeSB7XG4i
ICsgCisJCQkiICAgICAgICAgICAgbG9jYWwgPSBpbjtcbiIgKyAKKwkJCSIgICAgICAgICAgICBp
ZiAobG9jYWwgPT0gbnVsbClcbiIgKyAKKwkJCSIgICAgICAgICAgICAgICAgbG9jYWwgPSBsb2Fk
RW50cnkoZiwgZmFsc2UpO1xuIiArIAorCQkJIiAgICAgICAgfSBjYXRjaCAoZmluYWwgSU9FeGNl
cHRpb24gZSkge1xuIiArIAorCQkJIiAgICAgICAgICAgIGUucHJpbnRTdGFja1RyYWNlKCk7XG4i
ICsgCisJCQkiICAgICAgICAgICAgbG9jYWwgPSBudWxsO1xuIiArIAorCQkJIiAgICAgICAgfVxu
IiArIAorCQkJIiAgICAgICAgcmV0dXJuIGxvY2FsO1xuIiArIAorCQkJIiAgICB9XG4iICsgCisJ
CQkiXG4iICsgCisJCQkiICAgIHByaXZhdGUgT2JqZWN0IGxvYWRFbnRyeShGaWxlIGYsIGJvb2xl
YW4gYikgIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsgCisJCQkiICAgICAgICB0aHJvdyBuZXcg
SU9FeGNlcHRpb24oKTtcbiIgKyAKKwkJCSIgICAgfVxuIiArIAorCQkJIn1cbiIKKwkJfSwKKwkJ
IiIpOworfQogfQpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGUK
</data>

          </attachment>
      

    </bug>

</bugzilla>