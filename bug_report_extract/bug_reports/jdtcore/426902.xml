<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>426902</bug_id>
          
          <creation_ts>2014-01-29 10:14:00 -0500</creation_ts>
          <short_desc>Remember to remove &quot;SYSTEM&quot; override, once JavaSE-1.8 is supported</short_desc>
          <delta_ts>2014-03-04 09:51:16 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.8</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="David Williams">david_williams</reporter>
          <assigned_to name="Jay Arthanareeswaran">jarthana</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2356014</commentid>
    <comment_count>0</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2014-01-29 10:14:59 -0500</bug_when>
    <thetext>In bug 426861 we used a &quot;trick&quot; to override the BREE setting in the manifest.mf, since JavaSE-1.8 does not yet work (See 426692). Once that bug 426692 is fixed (and in a version or snapshot of Tycho we can use) we need to remember to go back and revert the change in bug 426861 ... which is in pom.xml of the o.e.j.annotation version 2.0.0 bundle. Basically to remove the whole &lt;build&gt; element in that pom. 

Just a wild guess, I&apos;m expecting this would be in about March that the changes needed would be available to us to use in our builds.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2357204</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-31 09:31:07 -0500</bug_when>
    <thetext>David, for all releng activities to do with Java 8 support, Jay will be the owner
from JDT/Core&apos;s side: So for all bugs related to build, bootstrap, test, package,
verify, certify Java 8 support ... if you wish you can make Jay the assignee and
also set the target to BETA_J8.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360723</commentid>
    <comment_count>2</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2014-02-09 16:28:44 -0500</bug_when>
    <thetext>I&apos;d like to try the fixed Tycho builder (bug 426692) by using 0.20.0-SNAPSHOT in our BATA_JAVA8 builds, and changing back to &quot;running the build&quot; with Java 1.7. 

But to be valid, the &quot;SYSTEM&quot; fix must be reverted. The the BREE in the MANIFEST.MF file should suffice to use &quot;1.8&quot; for that jdt.annotation 2.0 bundle at requires 1.8. (The 1.8 JRE is (still) in our &quot;toolchain&quot; file, so its libraries will be found and used (still) when compiling against at JavaSE-1.8 EE). 

Once I see this fixed, I&apos;ll kick off a test build.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360724</commentid>
    <comment_count>3</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2014-02-09 16:32:44 -0500</bug_when>
    <thetext>You can probably just &apos;revert&apos; the original commit, but to be explicit, all we need to do is remove the section below from the pom.xml of the jdt.annotation bundle in the BETA_JAVA8 branch. 


= = = = 


    &lt;build&gt;
    &lt;plugins&gt;
      &lt;plugin&gt;
        &lt;groupId&gt;org.eclipse.tycho&lt;/groupId&gt;
        &lt;artifactId&gt;tycho-compiler-plugin&lt;/artifactId&gt;
        &lt;version&gt;${tycho.version}&lt;/version&gt;
        &lt;configuration&gt;
          &lt;!--
            In most cases, we want to use BREE, but due to current 
            builder limitations, we can not specify 
            JavaSE1.8 for BREE. Therefore to get this one bundle to 
            compile correctly, and use BREE elsewhere, we override 
            the bree-libs profile and a) specify SYSTEM here, and 
            b) make the strong assumption that we are running the
            build using Java 1.8. 
          --&gt;
          &lt;useJDK&gt;SYSTEM&lt;/useJDK&gt;
        &lt;/configuration&gt;
      &lt;/plugin&gt;
    &lt;/plugins&gt;
  &lt;/build&gt;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360864</commentid>
    <comment_count>4</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-02-10 05:37:20 -0500</bug_when>
    <thetext>I have removed that part of the pom alone via commit:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=aadb2a658581a97e9459691d70634be53e0b7594</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360996</commentid>
    <comment_count>5</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2014-02-10 09:14:00 -0500</bug_when>
    <thetext>Thanks, but I wasn&apos;t quite complete in stating what else had to change ... and that is that jdt.annotation needs to have it&apos;s BREE changed to &quot;JavaSE-1.8&quot; as well. 

Sorry about that.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2361002</commentid>
    <comment_count>6</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2014-02-10 09:24:36 -0500</bug_when>
    <thetext>Reopening, to cover incrementing BREE to JavaSE-1.8</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2361245</commentid>
    <comment_count>7</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2014-02-10 17:01:35 -0500</bug_when>
    <thetext>Note: 

I&apos;ve learned, and documented in 426692, an error will occur, using &quot;JavaSE-1.8&quot;, even with Tycho resolution fix, -- UNLESS we actually use our new &quot;Java 8 capable&quot; compiler in the build. 

So, ready to self host? If so, fine, we can change BETA_JAVA8 branch to use what ever Beta version we have put in our temporary maven repo, at 
http://build.eclipse.org/eclipse/jdtx/

BUT ... if you are not ready to &quot;self host&quot;, then I&apos;d suggest leaving BREE at 1.7, and putting back the &quot;SYSTEM&quot; block I just had you remove, and we&apos;ll continue to use Java 8 to &quot;run the build&quot;. 

Up to you. 

Adding Dani since I think it was he that mentioned to me in my &quot;list of things to do&quot; is get the JDT effort &quot;self hosting&quot; ... but not sure he meant exactly this. Just adding for awareness.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2362222</commentid>
    <comment_count>8</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2014-02-12 10:51:22 -0500</bug_when>
    <thetext>Still waiting on an answer: Please confirm we are ready to &quot;self host&quot;, or change back to &quot;SYSTEM&quot;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2362227</commentid>
    <comment_count>9</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-12 11:01:06 -0500</bug_when>
    <thetext>(In reply to David Williams from comment #8)
&gt; Still waiting on an answer: Please confirm we are ready to &quot;self host&quot;, or
&gt; change back to &quot;SYSTEM&quot;.

Jay, the one thing I am aware of that is waiting on me is the class file comparison differences - I&apos;ll look at this tomorrow. 

What else is required before we move forward ? 

I haven&apos;t seen test results from the build.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2362240</commentid>
    <comment_count>10</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-02-12 11:17:28 -0500</bug_when>
    <thetext>(In reply to David Williams from comment #7)
&gt; So, ready to self host? If so, fine, we can change BETA_JAVA8 branch to use
&gt; what ever Beta version we have put in our temporary maven repo, at 
&gt; http://build.eclipse.org/eclipse/jdtx/

Just to confirm I got this correct, the question is whether or not we (JDT team) will use the SDK built from BETA_JAVA8 branch for development of Java 8 work, right? If so, I believe the answer is &apos;Yes&apos;. We already do by installing the spring source updates on 4.3.2.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2362624</commentid>
    <comment_count>11</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2014-02-12 20:59:20 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #10)
&gt; (In reply to David Williams from comment #7)
&gt; &gt; So, ready to self host? If so, fine, we can change BETA_JAVA8 branch to use
&gt; &gt; what ever Beta version we have put in our temporary maven repo, at 
&gt; &gt; http://build.eclipse.org/eclipse/jdtx/
&gt; 
&gt; Just to confirm I got this correct, the question is whether or not we (JDT
&gt; team) will use the SDK built from BETA_JAVA8 branch for development of Java
&gt; 8 work, right? If so, I believe the answer is &apos;Yes&apos;. We already do by
&gt; installing the spring source updates on 4.3.2.

In this context, by &quot;self host&quot;, I mean do you want to use the BETA Java 8 JDT compiler to compile the BETA Java 8 compiler? (Similar to how in our normal streams, we use the milestone N-1 compiler, to create Milestone N compiler.) 

According to the build script at 
https://github.com/kdvolder/eclipse-java8
you have been using the June version of Kepler compiler to compile the patch build. 

    &lt;cbi-jdt-repo.url&gt;https://repo.eclipse.org/content/repositories/eclipse-staging/&lt;/cbi-jdt-repo.url&gt;
    &lt;cbi-jdt-version&gt;3.9.0.v20130604-1421&lt;/cbi-jdt-version&gt;

So, my question becomes, do you want to continue to use a Kepler compiler to produce the BETA compiler ... or use the BETA compiler itself to do the compiling. 

If the former you&apos;ll need to put back the &quot;SYSTEM&quot; block I had you remove. 
If the later, I can try to switch (though, had trouble with initial attempts, but not sure why ... it could be unrelated to compiler).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2362626</commentid>
    <comment_count>12</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2014-02-12 21:05:07 -0500</bug_when>
    <thetext>(In reply to David Williams from comment #11)

&gt; 
&gt; If the former you&apos;ll need to put back the &quot;SYSTEM&quot; block I had you remove. 
&gt; If the later, I can try to switch (though, had trouble with initial
&gt; attempts, but not sure why ... it could be unrelated to compiler).

Oh, and meant to repeat, if you do want to use the JAVA8 compiler to produce the JAVA8 compiler ... you&apos;ll need to change jdt.annotation 2.0 back to having a 1.8 BREE. (JavaSE-1.8)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2362640</commentid>
    <comment_count>13</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-12 22:30:35 -0500</bug_when>
    <thetext>(In reply to David Williams from comment #11)

&gt; According to the build script at 
&gt; https://github.com/kdvolder/eclipse-java8
&gt; you have been using the June version of Kepler compiler to compile the patch
&gt; build. 
&gt; 
&gt;    
&gt; &lt;cbi-jdt-repo.url&gt;https://repo.eclipse.org/content/repositories/eclipse-
&gt; staging/&lt;/cbi-jdt-repo.url&gt;
&gt;     &lt;cbi-jdt-version&gt;3.9.0.v20130604-1421&lt;/cbi-jdt-version&gt;
&gt; 
&gt; So, my question becomes, do you want to continue to use a Kepler compiler to
&gt; produce the BETA compiler ... or use the BETA compiler itself to do the
&gt; compiling. 

As Jay mentioned earlier, for several months now, the standard development 
desktop for JDT team has been Kepler SR1 + Java 8 bundles (very frequently 
refreshed) used on the development workspace with BETA_JAVA8 sources of JDT.

So, yes, for quite a few months now, we have been building BETA_JAVA8 compiler
with the BETA_JAVA8 compiler of the previous day, week whatever.

The (inner) compiler thus built is what we have been testing as part of 
commit/checkin process and we have had no issues with this process to become
the compiler-compiler for the next day.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2362642</commentid>
    <comment_count>14</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-12 22:35:41 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #9)

&gt; I haven&apos;t seen test results from the build.

David, if there is something holding you up from being able to kick off the
tests, please call out so we can quickly address them. We are keen to see
the results as it would be the true proof of the pudding.

To be clear, we are interested in the test results of the build of the entire
SDK produced by using BETA_JAVA8 compiler as the compiler for the SDK.

The 4 class files that are flagged by the comparator - I will look at them within
the next 2-3 days. I don&apos;t think this in itself should hold up testing if all else
is OK.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2362645</commentid>
    <comment_count>15</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2014-02-12 23:09:51 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #14)
&gt; (In reply to Srikanth Sankaran from comment #9)

&gt; 
&gt; David, if there is something holding you up from being able to kick off the
&gt; tests, please call out so we can quickly address them. We are keen to see
&gt; the results as it would be the true proof of the pudding.
&gt; 

Well, one thing is setting the BREE of jdt.annotations 2.0 to JavaSE-1.8. 

Please? 

Perhaps I should explain more? Tycho has put in early support to resolve 1.8 bree&apos;s in their 0.20.0-SNAPSHOT, so I want to move to that ... part of testing &quot;the whole system&quot;. 

Second, I&apos;d like to have Java 1.7 &quot;run the build&quot; ... since as I understand it, that is a strong point of the JDT compiler, so again, part of &quot;testing the whole system&quot;. 

As far a running the Unit Tests themselves, I&apos;ll have to clarify with &quot;my boss&quot; (and Eclipse PMC) how to set some priorities, but IMHO, once the BREE is fixed, I can produce production quality builds, (using BREE Libs, signed by Eclipse certificate, run through comparator, etc.) and anyone should be able to &quot;run the unit tests&quot; on their workstations if anxious to see a first cut. 

This document may be a bit out of date .. but gives instructions for running the unit tests: 
http://wiki.eclipse.org/Platform-releng/Automated_Testing</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2362667</commentid>
    <comment_count>16</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-02-13 01:18:47 -0500</bug_when>
    <thetext>(In reply to David Williams from comment #15)
&gt; Well, one thing is setting the BREE of jdt.annotations 2.0 to JavaSE-1.8. 

  I have done this now, so that we can move forward.

   http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=b35f620685806d93a7b32cb38ddc1e568690ed0f

&gt; Second, I&apos;d like to have Java 1.7 &quot;run the build&quot; ... since as I understand
&gt; it, that is a strong point of the JDT compiler, so again, part of &quot;testing
&gt; the whole system&quot;. 

  I didn&apos;t quite understand this. Is this something the JDT team needs to decide? Or is just FYI? I think it&apos;s fine that we go with 1.7 as that&apos;s the latest final version we have.

Perhaps Srikanh/Dani can tell us if they think otherwise.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2362888</commentid>
    <comment_count>17</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2014-02-13 09:09:00 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #16)
&gt; (In reply to David Williams from comment #15)
&gt; &gt; Well, one thing is setting the BREE of jdt.annotations 2.0 to JavaSE-1.8. 
&gt; 
&gt;   I have done this now, so that we can move forward.
&gt; 
&gt;   
&gt; http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/
&gt; ?h=BETA_JAVA8&amp;id=b35f620685806d93a7b32cb38ddc1e568690ed0f
&gt; 

Thanks, latest &quot;patch build&quot; is at 
http://build.eclipse.org/eclipse/builds/4P/siteDir/eclipse/downloads/drops4/P20140213-0630/

The &quot;update sites&quot; don&apos;t show up on that page for some reason, but for now, I will keep a composite at 
http://build.eclipse.org/eclipse/builds/4P/siteDir/updates/4.3-P-builds/

It is made to (only) patch &quot;Kepler RC4&quot; build, not earlier.

&gt; &gt; Second, I&apos;d like to have Java 1.7 &quot;run the build&quot; ... since as I understand
&gt; &gt; it, that is a strong point of the JDT compiler, so again, part of &quot;testing
&gt; &gt; the whole system&quot;. 
&gt; 
&gt;   I didn&apos;t quite understand this. Is this something the JDT team needs to
&gt; decide? Or is just FYI? I think it&apos;s fine that we go with 1.7 as that&apos;s the
&gt; latest final version we have.
&gt; 
&gt; Perhaps Srikanh/Dani can tell us if they think otherwise.

I don&apos;t think JDT needs to say. It is mostly up to &quot;releng&quot; :) ... with input from PMC and JDT and other committers, naturally. 

There&apos;s several reasons I&apos;d recommend it, and with our production builds, that uses bree libs, a toolchain, etc., it should make no difference in the output. (Though does seem to make a difference in pack200 files ... not sure if Java 8 is ready for pack200?) 

In testing this latest patch ... , I did see a number of issues ... some might be serious ... some not. 

bug 428100   [BETA_JAVA8] Will need official &quot;source features&quot; if we want source with Java 8 patch
bug 428099   [BETA_JAVA8] both version of jdt.annotation are not installed with patched feature
bug 428087   [BETA_JAVA8] Does Eclipse SDK &quot;root&quot; need to be &quot;patched&quot; to pick up jdt and pde patches?
bug 428085   [BETA_JAVA8] Issues using &quot;pack200&quot; for &quot;Java 8 patch&quot;.
bug 427873   [BETA_JAVA8] Investigate/test pack200 with Java 8 

I&apos;ll assume the compiler itself is correct, and I know a number of changes have been made since the last &quot;X-build&quot; so unless I hear otherwise, quick, I plan to put this compiler into play and do an &quot;X-build&quot; with it. This latest compiler, BTW, was created using the previous &quot;BETA JAVA8&quot; compiler: 

    &lt;cbi-jdt-repo.url&gt;http://build.eclipse.org/eclipse/jdtx/&lt;/cbi-jdt-repo.url&gt;
    &lt;cbi-jdt-version&gt;3.9.2.v20140129-2151&lt;/cbi-jdt-version&gt;

Thanks ... its is good confirm Tycho does does work with &quot;JavaSE-1.8&quot;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2363242</commentid>
    <comment_count>18</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2014-02-14 01:34:45 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #14)
&gt; (In reply to Srikanth Sankaran from comment #9)
&gt; 
&gt; &gt; I haven&apos;t seen test results from the build.
&gt; 
&gt; David, if there is something holding you up from being able to kick off the
&gt; tests, please call out so we can quickly address them. We are keen to see
&gt; the results as it would be the true proof of the pudding.
&gt; 
&gt; To be clear, we are interested in the test results of the build of the entire
&gt; SDK produced by using BETA_JAVA8 compiler as the compiler for the SDK.

And, do you mean this &quot;using Java 8&quot; or do you man &quot;using Java 7&quot; as we do now, just different compiler. 

I have a bug open on former, (bug 425071) but not one for the latter. If that&apos;s what you meant, I suggest you open a new bug for that (in releng component) and I&apos;ll prioritize along with other work I have to do ... (and honestly, easier to do that, that change to use JRE 8!) 

Thanks,</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2363246</commentid>
    <comment_count>19</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2014-02-14 01:37:30 -0500</bug_when>
    <thetext>Meant to close this as fixed, Seems to be working. The jdt.annotation bundle had class format number 59, even though I used Java 7 to run the build ... just as it should, by specifying BREE-LIBS and have appropriate toolchain file.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2363340</commentid>
    <comment_count>20</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-02-14 05:18:44 -0500</bug_when>
    <thetext>(In reply to David Williams from comment #18)
&gt; And, do you mean this &quot;using Java 8&quot; or do you man &quot;using Java 7&quot; as we do
&gt; now, just different compiler. 

You are giving us too many choices ;)

At the moment, I think we would be happy to just have the tests run with JRE 8 and bundles built with Java 8 compiler.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2363342</commentid>
    <comment_count>21</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2014-02-14 05:22:27 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #20)
&gt; (In reply to David Williams from comment #18)
&gt; &gt; And, do you mean this &quot;using Java 8&quot; or do you man &quot;using Java 7&quot; as we do
&gt; &gt; now, just different compiler. 
&gt; 
&gt; You are giving us too many choices ;)
&gt; 
&gt; At the moment, I think we would be happy to just have the tests run with JRE
&gt; 8 and bundles built with Java 8 compiler.

The 4.3.2+J8 build and the feature patch must use the official/final compiler like we use in 4.3.2. Only when we have Java 8 in &apos;master&apos; and build Luna, we can update to ECJ8. Of course I&apos;m fine doing experiments where we use ECJ8 already, but not for the &quot;official&quot; build and feature patches.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2363351</commentid>
    <comment_count>22</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2014-02-14 05:45:31 -0500</bug_when>
    <thetext>(In reply to Dani Megert from comment #21)
&gt; (In reply to Jayaprakash Arthanareeswaran from comment #20)
&gt; &gt; (In reply to David Williams from comment #18)
&gt; &gt; &gt; And, do you mean this &quot;using Java 8&quot; or do you man &quot;using Java 7&quot; as we do
&gt; &gt; &gt; now, just different compiler. 
&gt; &gt; 
&gt; &gt; You are giving us too many choices ;)
&gt; &gt; 
&gt; &gt; At the moment, I think we would be happy to just have the tests run with JRE
&gt; &gt; 8 and bundles built with Java 8 compiler.
&gt; 
&gt; The 4.3.2+J8 build and the feature patch must use the official/final
&gt; compiler like we use in 4.3.2. Only when we have Java 8 in &apos;master&apos; and
&gt; build Luna, we can update to ECJ8. Of course I&apos;m fine doing experiments
&gt; where we use ECJ8 already, but not for the &quot;official&quot; build and feature
&gt; patches.

Given Dani&apos;s wise insights ... I think we should (also) remove o.e.jdt.annotations version 2 from &quot;the patch&quot;, since it wasn&apos;t part of 4.3.2 to begin with (and, well, the fact that it requires 1.8). 

So I recommend leaving these settings &quot;as they are&quot;, and I will write up an outline of how to build 4.3.2-Plus patch locally for those those that want to ... but ... I&apos;ll have to count on others to confirm they work :) 

I&apos;m not sure our &quot;Mark Down&quot; files are displayed as nicely as they are in Git hug, but I&apos;ll at least out line the steps/difference in a README.MD file in the aggregator project ... in the BETA_JAVA8 branch ... I was going to use the wiki ... but guess that&apos;s kind of old fashioned :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2363357</commentid>
    <comment_count>23</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2014-02-14 05:49:54 -0500</bug_when>
    <thetext>Arrg, we&apos;re having parallel discussion in two bugs, this one, and bug 427242. 

Sounds like we may want to stay on ECJ8 after all? I think with &quot;comparator&quot;, we&apos;d be safe doing so ... I&apos;ll stop writing here in bugs for a while, and work on draft of that README.MD anyway. (And, leave so we&apos;re using ECJ8 for patch ... for now).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2363362</commentid>
    <comment_count>24</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2014-02-14 05:54:10 -0500</bug_when>
    <thetext>(In reply to David Williams from comment #23)
&gt; Arrg, we&apos;re having parallel discussion in two bugs, this one, and bug
&gt; 427242. 
&gt; 
&gt; Sounds like we may want to stay on ECJ8 after all?

Yes. Sorry for the swirl :-(.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2366469</commentid>
    <comment_count>25</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-21 00:19:42 -0500</bug_when>
    <thetext>Verified by code inspection for Eclipse + Java 8 RC1</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2370115</commentid>
    <comment_count>26</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-01 09:20:41 -0500</bug_when>
    <thetext>(In reply to David Williams from comment #15)
&gt; (In reply to Srikanth Sankaran from comment #14)
&gt; &gt; (In reply to Srikanth Sankaran from comment #9)
&gt; 
&gt; &gt; 
&gt; &gt; David, if there is something holding you up from being able to kick off the
&gt; &gt; tests, please call out so we can quickly address them. We are keen to see
&gt; &gt; the results as it would be the true proof of the pudding.
&gt; &gt; 
&gt; 
&gt; Well, one thing is setting the BREE of jdt.annotations 2.0 to JavaSE-1.8. 

Is this issue resolved ? I apologize - I am a pure compiler guy and the
moment I see BREE, bundle, plugin, manifest - I tend to gloss over and
lose track :-(

Is there still something that is holding us up from having releng initiated
tests ? 

David, per https://bugs.eclipse.org/bugs/show_bug.cgi?id=426546#c13, the
class file differences seen are explained away.

&gt; As far a running the Unit Tests themselves, I&apos;ll have to clarify with &quot;my
&gt; boss&quot; (and Eclipse PMC) how to set some priorities, but IMHO, once the BREE
&gt; is fixed, I can produce production quality builds, (using BREE Libs, signed
&gt; by Eclipse certificate, run through comparator, etc.) and anyone should be
&gt; able to &quot;run the unit tests&quot; on their workstations if anxious to see a first
&gt; cut. 
&gt; 
&gt; This document may be a bit out of date .. but gives instructions for running
&gt; the unit tests: 
&gt; http://wiki.eclipse.org/Platform-releng/Automated_Testing

At this point, we are close enough to the release that we should have releng
start running tests (if not already done so). It is hazardous to have committers
who have a closeted view of their own components use an outdated document
to launch tests.

Anything you require from our side, please call out and we will expedite,

Thanks David !</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2370116</commentid>
    <comment_count>27</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-01 09:21:49 -0500</bug_when>
    <thetext>(In reply to David Williams from comment #15)

&gt; As far a running the Unit Tests themselves, I&apos;ll have to clarify with &quot;my
&gt; boss&quot; (and Eclipse PMC) how to set some priorities,

Dani, can we have a +1 from PMC that this is a top priority - we are too close
to the release to not have daily tests.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2370403</commentid>
    <comment_count>28</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2014-03-03 05:23:25 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #27)
&gt; (In reply to David Williams from comment #15)
&gt; 
&gt; &gt; As far a running the Unit Tests themselves, I&apos;ll have to clarify with &quot;my
&gt; &gt; boss&quot; (and Eclipse PMC) how to set some priorities,
&gt; 
&gt; Dani, can we have a +1 from PMC that this is a top priority - we are too
&gt; close
&gt; to the release to not have daily tests.

David, now that you already have the full X and Y builds, how far are we away from running the tests?

Of course M6 this week has higher prio but Java 8 GA is only 2 weeks away, so, it&apos;s pretty urgent to get those tests running.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2371204</commentid>
    <comment_count>29</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2014-03-04 09:51:16 -0500</bug_when>
    <thetext>Sorry for the slow response, bug a) just demonstrates how swamped I&apos;ve been :) and b) hard to find in a bug unrelated to testing. So, I opened bug 429571 to track the &quot;testing of BETA_JAVA8 work&quot;. 

I&apos;ll make further comments there.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>