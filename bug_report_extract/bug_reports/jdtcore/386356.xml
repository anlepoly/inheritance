<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>386356</bug_id>
          
          <creation_ts>2012-07-31 17:16:00 -0400</creation_ts>
          <short_desc>Type mismatch error with annotations and generics</short_desc>
          <delta_ts>2012-09-07 04:03:42 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.2</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc>https://svn.kuali.org/repos/rice/tags/rice-1.0.3.1/</bug_file_loc>
          <status_whiteboard>To be verified for 4.3 M2</status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>blocker</bug_severity>
          <target_milestone>3.8.1</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Travis Schneeberger">leo.herbie</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>amj87.iitr</cc>
    
    <cc>hosier.david</cc>
    
    <cc>igor.vaynberg</cc>
    
    <cc>ryan.smith4</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
    
    <cc>vyazelenko</cc>
    
    <cc>wasabi</cc>
          
          <votes>1</votes>

      

      

      <flag name="review"
          id="52904"
          type_id="1"
          status="+"
          setter="srikanth_sankaran"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2143752</commentid>
    <comment_count>0</comment_count>
    <who name="Travis Schneeberger">leo.herbie</who>
    <bug_when>2012-07-31 17:16:40 -0400</bug_when>
    <thetext>We have the following class which is a jaxb adapter:

public class AttributeSetAdapter extends XmlAdapter&lt;StringMapEntry[], AttributeSet&gt; { 
    @Override public StringMapEntry[] marshal(AttributeSet attributeSet) throws Exception {...snip...} 
    @Override public AttributeSet unmarshal(StringMapEntry[] entryArray) throws Exception { ...snip...} 
} 

The XmlAdapter class has the following signature: 

public abstract class XmlAdapter&lt;ValueType,BoundType&gt; { 
    protected XmlAdapter() {} 
    public abstract BoundType unmarshal(ValueType v) throws Exception; 
    public abstract ValueType marshal(BoundType v) throws Exception; 
} 

We refer to the AttributeSetAdapter.class token in an annotation in an interface method like the following:

boolean hasPermission(
  @WebParam(name = &quot;principalId&quot;) String principalId,
  @WebParam(name = &quot;namespaceCode&quot;) String namespaceCode,
  @WebParam(name = &quot;permissionName&quot;) String permissionName,
  @WebParam(name = &quot;permissionDetails&quot;) @XmlJavaTypeAdapter(value = AttributeSetAdapter.class) AttributeSet permissionDetails); 


The @ XmlJavaTypeAdapter annotation has the following signature:

@Retention(RUNTIME) @Target({PACKAGE,FIELD,METHOD,TYPE,PARAMETER})         
public @interface XmlJavaTypeAdapter { 
    Class&lt;? extends XmlAdapter&gt; value(); 
    Class type() default DEFAULT.class; 
    static final class DEFAULT {} 
} 


eclipse gives the following error:

Description Resource Path Location Type 
Type mismatch: cannot convert from Class&lt;AttributeSetAdapter&gt; to Class&lt;? extends XmlAdapter&gt; IdentityManagementService.java /kfs-rice-1.0.3.1/api/src/main/java/org/kuali/rice/kim/service line 203 Java Problem 

I&apos;m using eclipse 4.2 Juno EE edition 64 bit.  I&apos;ve tried compiling the project using java 1.6 &amp; 1.7 compatibility.  This project compiles fine using older versions of eclipse and on the command line via maven.  I&apos;ve tried all kinds of tweaks to the source code and different compiler settings.  Sometimes the error goes away but as soon as I do a clean the errors come back.


This projects is available @ https://svn.kuali.org/repos/rice/tags/rice-1.0.3.1/

If you need any other information or test cases or anything else I&apos;ll gladly help out. 

Thanks a lot!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2143802</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-08-01 03:42:40 -0400</bug_when>
    <thetext>Tentatively target 3.8.1. May need resetting after analysis.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2145132</commentid>
    <comment_count>2</comment_count>
    <who name="wasabi wasabi">wasabi</who>
    <bug_when>2012-08-06 04:51:28 -0400</bug_when>
    <thetext>A temporary workaround is removing the generic parameters from your xml adapter, so that it looks like this:

public class AttributeSetAdapter extends XmlAdapter { 
    @Override public Object marshal(Object attributeSet) throws Exception {...snip with casts...} 
    @Override public Objectt unmarshal(Object entryArray) throws Exception { ...snip with casts...} 
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2145174</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-08-06 06:16:34 -0400</bug_when>
    <thetext>(In reply to comment #0)

&gt; This projects is available @
&gt; https://svn.kuali.org/repos/rice/tags/rice-1.0.3.1/
&gt; 
&gt; If you need any other information or test cases or anything else I&apos;ll gladly
&gt; help out. 

Hello Travis, could you attach a self contained minimal test case please ?
Also could you check the behavior against JDK7 ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2145885</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-08-08 03:37:49 -0400</bug_when>
    <thetext>Sorry, I am unable to observe the problem using the scenario described in
comment#0. Please attach a small &amp; minimal test case. Also verify if javac7
compiles the program fine.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2145889</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-08-08 03:40:56 -0400</bug_when>
    <thetext>Will reassess criticality once we have a test case and we are able to
ascertain if it is a real problem and that there are no workarounds.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2146309</commentid>
    <comment_count>6</comment_count>
      <attachid>219697</attachid>
    <who name="David Hosier">hosier.david</who>
    <bug_when>2012-08-08 20:25:17 -0400</bug_when>
    <thetext>Created attachment 219697
Source demonstrating problem

This is a maven project that demonstrates correct compilation via the command line, but failure to compile the package-info.java class that includes reference to an XmlAdapter class as described by this bug.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2146310</commentid>
    <comment_count>7</comment_count>
    <who name="David Hosier">hosier.david</who>
    <bug_when>2012-08-08 20:26:24 -0400</bug_when>
    <thetext>Also note that if you modify the package-info class and save it, it will compile fine. However, if you then clean the project, it will go back to having errors.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2146345</commentid>
    <comment_count>8</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-08-09 01:53:01 -0400</bug_when>
    <thetext>Thanks for the test case - This seems to be related to the order
in which package info gets processed and the behavior change seems
to have happened at M4. With M3 a clean + build passes while with
M4 clean + build reports an error.

With the incremental build of package-info, the problem goes away.
I wonder (admittedly with little evidence) if this is due to
changes made for null annotation support that changed the order in
which some resolution happens. 

Stephan, do you want to take a look ? We should target this for 3.8.1
though I am fine if this slips RC1 and makes it to RC2 and to M2 on the
4.3 train. 

Feel free to assign it to yourself if you want to take a shot at it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2146346</commentid>
    <comment_count>9</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-08-09 02:00:28 -0400</bug_when>
    <thetext>Smaller test case: though we should verify also against the attachment
in comment#6: 

X.java:

package p;
import javax.xml.bind.annotation.adapters.XmlAdapter;
public abstract class X extends XmlAdapter&lt;String,X&gt; {
}

package-info.java:

@XmlJavaTypeAdapters({ @XmlJavaTypeAdapter(value = X.class, type = X.class) })
package p;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;   
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapters;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2147694</commentid>
    <comment_count>10</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-08-14 05:06:47 -0400</bug_when>
    <thetext>Sorry for the delay, I&apos;m looking into this right now.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2147719</commentid>
    <comment_count>11</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-08-14 05:49:59 -0400</bug_when>
    <thetext>During debugging I&apos;m looking at this stack fragment, which says it all:

MemberValuePair.resolveTypeExpecting(BlockScope, TypeBinding) line: 115	
NormalAnnotation(Annotation).resolveType(BlockScope) line: 321	
ArrayInitializer.resolveTypeExpecting(BlockScope, TypeBinding) line: 167	
MemberValuePair.resolveTypeExpecting(BlockScope, TypeBinding) line: 81	
SingleMemberAnnotation(Annotation).resolveType(BlockScope) line: 321	
ASTNode.resolveAnnotations(BlockScope, Annotation[], Binding) line: 677	
SourceTypeBinding.getAnnotationTagBits() line: 789	
SourceTypeBinding.initializeDeprecatedAnnotationTagBits() line: 1104	
PackageBinding.isViewedAsDeprecated() line: 227	
SourceTypeBinding(ReferenceBinding).isViewedAsDeprecated() line: 1324	
SingleTypeReference(ASTNode).isTypeUseDeprecated(TypeBinding, Scope) line: 512	
SingleTypeReference(TypeReference).internalResolveType(Scope) line: 153	
SingleTypeReference(TypeReference).resolveType(ClassScope) line: 208	
SingleTypeReference(TypeReference).resolveTypeArgument(ClassScope, ReferenceBinding, int) line: 226	
ParameterizedSingleTypeReference.internalResolveLeafType(Scope, ReferenceBinding, boolean) line: 191	
ParameterizedSingleTypeReference.internalResolveType(Scope, ReferenceBinding, boolean) line: 110	
ParameterizedSingleTypeReference.resolveType(ClassScope) line: 296	
ParameterizedSingleTypeReference(TypeReference).resolveSuperType(ClassScope) line: 186	
ClassScope.findSupertype(TypeReference) line: 1229	
ClassScope.connectSuperclass() line: 895	

We have a cyclic dependency:
- we want to connect X to its superclass XmlAdapter&lt;String,X&gt;
- after resolving the super type, we need to check whether it is deprecated
- to check whether XmlAdapter&lt;String,X&gt; is deprecated we need to check the same for X
- to check whether p.X is deprecated we need to check whether package p is deprecated
- for this we need to resolve annotations in p/package-info.java
- there we find @XmlJavaTypeAdapters({@XmlJavaTypeAdapter(value = X.class,type = X.class)})
- during resolving of the above we need to type check the MemberValuePair &quot;value = X.class&quot;
  - required type is &quot;Class&lt;? extends XmlAdapter#RAW&gt;&quot;
  - provided type is &quot;Class&lt;p.X&gt;&quot;
  - to show compatibility we need the superclass of p.X

Each of the above steps makes sense and the sum gives a cyclic contention.

I see two possible ways out:
(1) make any of the above steps more lazy, e.g., check if resolveAnnotations() could avoid resolving MemberValuePairs
(2) entirely postpone checking of deprecation to a later phase.

Before I dive into either strategy, does anyone have a quick guess which of the options (1) - (3) :) is most likely to succeed?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2147731</commentid>
    <comment_count>12</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-08-14 06:00:10 -0400</bug_when>
    <thetext>(In reply to comment #11)

&gt; Each of the above steps makes sense and the sum gives a cyclic contention.

So why does this happen only since 3.8 M4 ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2147732</commentid>
    <comment_count>13</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-08-14 06:00:10 -0400</bug_when>
    <thetext>(In reply to comment #11)

&gt; Each of the above steps makes sense and the sum gives a cyclic contention.

So why does this happen only since 3.8 M4 ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2147738</commentid>
    <comment_count>14</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-08-14 06:14:49 -0400</bug_when>
    <thetext>
(In reply to comment #13)
&gt; (In reply to comment #11)
&gt; 
&gt; &gt; Each of the above steps makes sense and the sum gives a cyclic contention.
&gt; 
&gt; So why does this happen only since 3.8 M4 ?

For null annotation support one constituent of the above chain was added, the call to
  SourceTypeBinding.getAnnotationTagBits()
from
  SourceTypeBinding.initializeDeprecatedAnnotationTagBits() line: 1104	

I&apos;m currently digging out the exact step when this was added, in order to recover the rationale.
I seem to remember, that before this addition, @Deprecated in package-info.java wasn&apos;t even working as specified. This would have been discovered because the same applied to @NonNullByDefault in package-info.java. - Re-checking...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2147760</commentid>
    <comment_count>15</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-08-14 06:56:47 -0400</bug_when>
    <thetext>My archaeologist tells me:
The two lines in question were added in Feb 2011. At that time I reported (bug 186342 comment 98):

&quot;When playing with new quickfixes I noticed that two intended features
are not too well supported by the existing infrastructure in JDT/Core:

1. Defining per-package defaults using annotations in package-info.java.
2. [...]

Both features work just fine during full builds but may break, e.g., when
Java model and dom are involved, too.&quot;

At a quick check I couldn&apos;t find a JDT/Core test that breaks when I remove the lines in question, and, yes, this removal would fix the current bug.

However, since I added these for the sake of quick fixes, I should also check with the tests for quick fixes for null annotations. Unfortunately, no such tests exist in 3.8 - so I will try to use my tests from the   NullAnnotationsForFields branch. I&apos;ll report back whether I find evidence that these lines are still needed.

It is not unlikely that the issue that was solved by these lines has additionally been addressed by some other tweaks, too. Much water has flown under this bridge since then.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2147778</commentid>
    <comment_count>16</comment_count>
      <attachid>219853</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-08-14 07:50:45 -0400</bug_when>
    <thetext>Created attachment 219853
fix under test</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2147789</commentid>
    <comment_count>17</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-08-14 08:10:40 -0400</bug_when>
    <thetext>(In reply to comment #15)
&gt; It is not unlikely that the issue that was solved by these lines has
&gt; additionally been addressed by some other tweaks, too. Much water has flown
&gt; under this bridge since then.

Rewinding that stream I found a change that apparently changed the game: Bug 372012.
If I remove in SourceTypeBinding ...
- the last two lines in initializeDeprecatedAnnotationTagBits() *AND*
- one block in evaluateNullAnnotations() that was introduced in bug 372012
... then I get some regressions in NullAnnotationTest.
Restoring *either* of the two changes fixes those regressions.

Ergo: bug 372012 seems to have made the call inside initializeDeprecatedAnnotationTagBits() obsolete.

Thus I propose to indeed remove those two lines as I&apos;ve done in attachment 219853. This breaks the cyclic dependency documented in comment 11.

Even if on some obscure call path we now miss out to initialize annotations in package-info.java, that would be much better tolerable than this bug.

Tests are currently running against the proposed fix.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2147811</commentid>
    <comment_count>18</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-08-14 08:57:02 -0400</bug_when>
    <thetext>(In reply to comment #17)
&gt; Tests are currently running against the proposed fix.

Tests showed one funny spontaneous regression:
org.eclipse.jdt.core.tests.compiler.regression.SwitchTest.testSwitchOnNull() produced no output where it should have said &quot;NPE1NPE2NPE3NPE4NPE5&quot;.
Re-running SwitchTest alone did not reproduce that failure, nor did &quot;Rerun Test - Failures First&quot;.
Some solar activity interfering with Eclipse?

Long story short: no reproduceable failure.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2147889</commentid>
    <comment_count>19</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-08-14 10:57:33 -0400</bug_when>
    <thetext>Analysis, rationale, fix - all look reasonable - Please release for M2 and 
3.8.1 RC1 - Thanks!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2147944</commentid>
    <comment_count>20</comment_count>
      <attachid>219697</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-08-14 12:02:29 -0400</bug_when>
    <thetext>Comment on attachment 219697
Source demonstrating problem

Sources from this attachment have been adopted for a test.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2147945</commentid>
    <comment_count>21</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-08-14 12:03:13 -0400</bug_when>
    <thetext>Released for 3.8.1 via commit d61c8fde6d93556ac9edd6dcb12c4cd9dba068e9.

Version for 4.3 M2 following soon (after retest).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2148035</commentid>
    <comment_count>22</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-08-14 14:53:48 -0400</bug_when>
    <thetext>Released for 4.3 M2 via commit 4b0b5e4ba4fc84b55ca6c20dd4ad4ee385e312fc</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2148897</commentid>
    <comment_count>23</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-08-16 02:10:10 -0400</bug_when>
    <thetext>Verified for 3.7.1 using Build id: M20120815-1000</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2148971</commentid>
    <comment_count>24</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-08-16 05:44:42 -0400</bug_when>
    <thetext>(In reply to comment #23)
&gt; Verified for 3.7.1 using Build id: M20120815-1000

Let&apos;s call it 3.8.1 :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2157260</commentid>
    <comment_count>25</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-09-07 04:03:42 -0400</bug_when>
    <thetext>*** Bug 388948 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>219697</attachid>
            <date>2012-08-08 20:25:00 -0400</date>
            <delta_ts>2012-08-14 12:02:29 -0400</delta_ts>
            <desc>Source demonstrating problem</desc>
            <filename>bug-386356.tar</filename>
            <type>application/x-tar</type>
            <size>12288</size>
            <attacher name="David Hosier">hosier.david</attacher>
            
              <data encoding="base64">YnVnLTM4NjM1Ni8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDc1NSAAMDAwNzY1
IAAwMDAwMjQgADAwMDAwMDAwMDAwIDEyMDEwNjAxMTIwIDAxMjYyMAAgNQAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB1c3RhcgAwMGRhdmlkAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAc3RhZmYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDAwMDAgADAwMDAw
MCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABi
dWctMzg2MzU2L3BvbS54bWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwNjQ0IAAwMDA3NjUg
ADAwMDAyNCAAMDAwMDAwMDEzNjMgMTIwMTA2MDA2MzQgMDE0MTUxACAwAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHVzdGFyADAwZGF2aWQAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABzdGFmZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDAwMCAAMDAwMDAw
IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADxw
cm9qZWN0IHhtbG5zPSJodHRwOi8vbWF2ZW4uYXBhY2hlLm9yZy9QT00vNC4wLjAiIHhtbG5zOnhz
aT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiCiAgeHNpOnNjaGVt
YUxvY2F0aW9uPSJodHRwOi8vbWF2ZW4uYXBhY2hlLm9yZy9QT00vNC4wLjAgaHR0cDovL21hdmVu
LmFwYWNoZS5vcmcveHNkL21hdmVuLTQuMC4wLnhzZCI+CiAgPG1vZGVsVmVyc2lvbj40LjAuMDwv
bW9kZWxWZXJzaW9uPgoKICA8Z3JvdXBJZD5jb20uZXJtYWhnZXJkPC9ncm91cElkPgogIDxhcnRp
ZmFjdElkPmJ1Zy0zODYzNTY8L2FydGlmYWN0SWQ+CiAgPHZlcnNpb24+MS4wLVNOQVBTSE9UPC92
ZXJzaW9uPgogIDxwYWNrYWdpbmc+amFyPC9wYWNrYWdpbmc+CgogIDxuYW1lPmJ1Zy0zODYzNTY8
L25hbWU+CiAgPHVybD5odHRwOi8vbWF2ZW4uYXBhY2hlLm9yZzwvdXJsPgoKICA8cHJvcGVydGll
cz4KICAgIDxwcm9qZWN0LmJ1aWxkLnNvdXJjZUVuY29kaW5nPlVURi04PC9wcm9qZWN0LmJ1aWxk
LnNvdXJjZUVuY29kaW5nPgogIDwvcHJvcGVydGllcz4KCiAgPGRlcGVuZGVuY2llcz4KICAgIDxk
ZXBlbmRlbmN5PgogICAgICA8Z3JvdXBJZD5qdW5pdDwvZ3JvdXBJZD4KICAgICAgPGFydGlmYWN0
SWQ+anVuaXQ8L2FydGlmYWN0SWQ+CiAgICAgIDx2ZXJzaW9uPjMuOC4xPC92ZXJzaW9uPgogICAg
ICA8c2NvcGU+dGVzdDwvc2NvcGU+CiAgICA8L2RlcGVuZGVuY3k+CiAgPC9kZXBlbmRlbmNpZXM+
CjwvcHJvamVjdD4KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABidWct
Mzg2MzU2L3NyYy8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwNzU1IAAwMDA3NjUgADAw
MDAyNCAAMDAwMDAwMDAwMDAgMTIwMTA2MDExNDQgMDEzNDE1ACA1AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHVzdGFyADAwZGF2aWQAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAABzdGFmZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDAwMCAAMDAwMDAwIAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGJ1Zy0z
ODYzNTYvc3JjL21haW4vAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDA3NTUgADAwMDc2NSAAMDAw
MDI0IAAwMDAwMDAwMDAwMCAxMjAxMDYwMTE1MSAwMTQzMzcAIDUAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdXN0YXIAMDBkYXZpZAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAHN0YWZmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwMDAwIAAwMDAwMDAgAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYnVnLTM4
NjM1Ni9zcmMvdGVzdC8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDc1NSAAMDAwNzY1IAAwMDAw
MjQgADAwMDAwMDAwMDAwIDEyMDEwNjAwNjM0IDAxNDM3NwAgNQAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB1c3RhcgAwMGRhdmlkAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAc3RhZmYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDAwMDAgADAwMDAwMCAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABidWctMzg2
MzU2L3NyYy90ZXN0L2phdmEvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwNzU1IAAwMDA3NjUgADAwMDAy
NCAAMDAwMDAwMDAwMDAgMTIwMTA2MDA2MzQgMDE1MzIwACA1AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHVzdGFyADAwZGF2aWQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAABzdGFmZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDAwMCAAMDAwMDAwIAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGJ1Zy0zODYz
NTYvc3JjL3Rlc3QvamF2YS9jb20vAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDA3NTUgADAwMDc2NSAAMDAwMDI0
IAAwMDAwMDAwMDAwMCAxMjAxMDYwMDYzNCAwMTYwNzYAIDUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAdXN0YXIAMDBkYXZpZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAHN0YWZmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwMDAwIAAwMDAwMDAgAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYnVnLTM4NjM1
Ni9zcmMvdGVzdC9qYXZhL2NvbS9lcm1haGdlcmQvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDc1NSAAMDAwNzY1IAAwMDAwMjQg
ADAwMDAwMDAwMDAwIDEyMDEwNjAwNjM0IDAyMDAzNAAgNQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAB1c3RhcgAwMGRhdmlkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAc3RhZmYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDAwMDAgADAwMDAwMCAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABidWctMzg2MzU2
L3NyYy90ZXN0L2phdmEvY29tL2VybWFoZ2VyZC9BcHBUZXN0LmphdmEAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwNjQ0IAAwMDA3NjUgADAwMDAyNCAA
MDAwMDAwMDEyMDEgMTIwMTA2MDA2MzQgMDIyMjUxACAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAHVzdGFyADAwZGF2aWQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AABzdGFmZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDAwMCAAMDAwMDAwIAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHBhY2thZ2UgY29t
LmVybWFoZ2VyZDsKCmltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdDsKaW1wb3J0IGp1bml0LmZy
YW1ld29yay5UZXN0Q2FzZTsKaW1wb3J0IGp1bml0LmZyYW1ld29yay5UZXN0U3VpdGU7CgovKioK
ICogVW5pdCB0ZXN0IGZvciBzaW1wbGUgQXBwLgogKi8KcHVibGljIGNsYXNzIEFwcFRlc3QgCiAg
ICBleHRlbmRzIFRlc3RDYXNlCnsKICAgIC8qKgogICAgICogQ3JlYXRlIHRoZSB0ZXN0IGNhc2UK
ICAgICAqCiAgICAgKiBAcGFyYW0gdGVzdE5hbWUgbmFtZSBvZiB0aGUgdGVzdCBjYXNlCiAgICAg
Ki8KICAgIHB1YmxpYyBBcHBUZXN0KCBTdHJpbmcgdGVzdE5hbWUgKQogICAgewogICAgICAgIHN1
cGVyKCB0ZXN0TmFtZSApOwogICAgfQoKICAgIC8qKgogICAgICogQHJldHVybiB0aGUgc3VpdGUg
b2YgdGVzdHMgYmVpbmcgdGVzdGVkCiAgICAgKi8KICAgIHB1YmxpYyBzdGF0aWMgVGVzdCBzdWl0
ZSgpCiAgICB7CiAgICAgICAgcmV0dXJuIG5ldyBUZXN0U3VpdGUoIEFwcFRlc3QuY2xhc3MgKTsK
ICAgIH0KCiAgICAvKioKICAgICAqIFJpZ291cm91cyBUZXN0IDotKQogICAgICovCiAgICBwdWJs
aWMgdm9pZCB0ZXN0QXBwKCkKICAgIHsKICAgICAgICBhc3NlcnRUcnVlKCB0cnVlICk7CiAgICB9
Cn0KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABidWctMzg2MzU2L3Ny
Yy9tYWluL2phdmEvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwNzU1IAAwMDA3NjUgADAwMDAyNCAAMDAw
MDAwMDAwMDAgMTIwMTA2MDExNjAgMDE1MjYwACA1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAHVzdGFyADAwZGF2aWQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABz
dGFmZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDAwMCAAMDAwMDAwIAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGJ1Zy0zODYzNTYvc3Jj
L21haW4vamF2YS9jb20vAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDA3NTUgADAwMDc2NSAAMDAwMDI0IAAwMDAw
MDAwMDAwMCAxMjAxMDYwMTE2NSAwMTYwNDMAIDUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAdXN0YXIAMDBkYXZpZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHN0
YWZmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwMDAwIAAwMDAwMDAgAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYnVnLTM4NjM1Ni9zcmMv
bWFpbi9qYXZhL2NvbS9lcm1haGdlcmQvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDc1NSAAMDAwNzY1IAAwMDAwMjQgADAwMDAw
MDAwMDAwIDEyMDEwNjAxMjMyIDAxNzc3NAAgNQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAB1c3RhcgAwMGRhdmlkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAc3Rh
ZmYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDAwMDAgADAwMDAwMCAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABidWctMzg2MzU2L3NyYy9t
YWluL2phdmEvY29tL2VybWFoZ2VyZC9Fcm1haGdlcmQuamF2YQAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwNjQ0IAAwMDA3NjUgADAwMDAyNCAAMDAwMDAw
MDAwNjQgMTIwMTA1NzA0NDQgMDIyNTQ3ACAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAHVzdGFyADAwZGF2aWQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABzdGFm
ZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDAwMCAAMDAwMDAwIAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHBhY2thZ2UgY29tLmVybWFo
Z2VyZDsKCnB1YmxpYyBjbGFzcyBFcm1haGdlcmQgewoKfQoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYnVnLTM4NjM1Ni9zcmMvbWFp
bi9qYXZhL2NvbS9lcm1haGdlcmQvRXJtYWhnZXJkWG1sQWRhcHRlci5qYXZhAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDY0NCAAMDAwNzY1IAAwMDAwMjQgADAwMDAwMDAw
NjI2IDEyMDEwNTc1Njc3IDAyNDU1MgAgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAB1c3RhcgAwMGRhdmlkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAc3RhZmYA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDAwMDAgADAwMDAwMCAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwYWNrYWdlIGNvbS5lcm1haGdl
cmQ7CgppbXBvcnQgamF2YXgueG1sLmJpbmQuYW5ub3RhdGlvbi5hZGFwdGVycy5YbWxBZGFwdGVy
OwoKcHVibGljIGNsYXNzIEVybWFoZ2VyZFhtbEFkYXB0ZXIgZXh0ZW5kcyBYbWxBZGFwdGVyPFN0
cmluZyxFcm1haGdlcmQ+IHsKCglAT3ZlcnJpZGUKCXB1YmxpYyBTdHJpbmcgbWFyc2hhbChFcm1h
aGdlcmQgYXJnMCkgdGhyb3dzIEV4Y2VwdGlvbiB7CgkJLy8gVE9ETyBBdXRvLWdlbmVyYXRlZCBt
ZXRob2Qgc3R1YgoJCXJldHVybiBudWxsOwoJfQoKCUBPdmVycmlkZQoJcHVibGljIEVybWFoZ2Vy
ZCB1bm1hcnNoYWwoU3RyaW5nIGFyZzApIHRocm93cyBFeGNlcHRpb24gewoJCS8vIFRPRE8gQXV0
by1nZW5lcmF0ZWQgbWV0aG9kIHN0dWIKCQlyZXR1cm4gbnVsbDsKCX0KCn0KAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGJ1Zy0zODYzNTYvc3JjL21haW4v
amF2YS9jb20vZXJtYWhnZXJkL3BhY2thZ2UtaW5mby5qYXZhAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDA2NDQgADAwMDc2NSAAMDAwMDI0IAAwMDAwMDAwMDM3
NSAxMjAxMDU3MDY0NSAwMjMyMDUAIDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAdXN0YXIAMDBkYXZpZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHN0YWZmAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwMDAwIAAwMDAwMDAgAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQFhtbEphdmFUeXBlQWRhcHRlcnMo
eyBAWG1sSmF2YVR5cGVBZGFwdGVyKHZhbHVlID0gRXJtYWhnZXJkWG1sQWRhcHRlci5jbGFzcywg
dHlwZSA9IEVybWFoZ2VyZC5jbGFzcykgfSkKcGFja2FnZSBjb20uZXJtYWhnZXJkOwppbXBvcnQg
amF2YXgueG1sLmJpbmQuYW5ub3RhdGlvbi5hZGFwdGVycy5YbWxKYXZhVHlwZUFkYXB0ZXI7Cmlt
cG9ydCBqYXZheC54bWwuYmluZC5hbm5vdGF0aW9uLmFkYXB0ZXJzLlhtbEphdmFUeXBlQWRhcHRl
cnM7CgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</data>
<flag name="iplog"
          id="52908"
          type_id="7"
          status="+"
          setter="stephan.herrmann"
    />
          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>219853</attachid>
            <date>2012-08-14 07:50:00 -0400</date>
            <delta_ts>2012-08-14 07:50:45 -0400</delta_ts>
            <desc>fix under test</desc>
            <filename>clipboard.txt</filename>
            <type>text/plain</type>
            <size>3605</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0Fubm90YXRpb25UZXN0
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Bbm5vdGF0aW9uVGVzdC5qYXZh
CmluZGV4IGM1YTc1YjQuLjRkZDYxZWUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9y
ZWdyZXNzaW9uL0Fubm90YXRpb25UZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUu
dGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3Jl
Z3Jlc3Npb24vQW5ub3RhdGlvblRlc3QuamF2YQpAQCAtNDgsNyArNDgsNyBAQAogCS8vIFN0YXRp
YyBpbml0aWFsaXplciB0byBzcGVjaWZ5IHRlc3RzIHN1YnNldCB1c2luZyBURVNUU18qIHN0YXRp
YyB2YXJpYWJsZXMKIAkvLyBBbGwgc3BlY2lmaWVkIHRlc3RzIHdoaWNoIGRvIG5vdCBiZWxvbmcg
dG8gdGhlIGNsYXNzIGFyZSBza2lwcGVkLi4uCiAJc3RhdGljIHsKLS8vCQlURVNUU19OQU1FUyA9
IG5ldyBTdHJpbmdbXSB7ICJ0ZXN0QnVnMzg0NjYzIiB9OworCQlURVNUU19OQU1FUyA9IG5ldyBT
dHJpbmdbXSB7ICJ0ZXN0QnVnMzg2MzU2IiB9OwogLy8JCVRFU1RTX05VTUJFUlMgPSBuZXcgaW50
W10geyAyOTcgfTsKIC8vCQlURVNUU19SQU5HRSA9IG5ldyBpbnRbXSB7IDI5NCwgLTEgfTsKIAl9
CkBAIC0xMDYzNyw0ICsxMDYzNyw2NCBAQAogCX07CiAJcnVuQ29uZm9ybVRlc3QodGVzdEZpbGVz
KTsKIH0KKworLy8gQnVnIDM4NjM1NiAtIFR5cGUgbWlzbWF0Y2ggZXJyb3Igd2l0aCBhbm5vdGF0
aW9ucyBhbmQgZ2VuZXJpY3MKKy8vIHRlc3QgY2FzZSBmcm9tIGNvbW1lbnQgOQorcHVibGljIHZv
aWQgdGVzdEJ1ZzM4NjM1Nl8xKCkgeworCXJ1bkNvbmZvcm1UZXN0KAorCQluZXcgU3RyaW5nW10g
eworCQkJInAvWC5qYXZhIiwKKwkJCSJwYWNrYWdlIHA7XG4iICsgCisJCQkiaW1wb3J0IGphdmF4
LnhtbC5iaW5kLmFubm90YXRpb24uYWRhcHRlcnMuWG1sQWRhcHRlcjtcbiIgKyAKKwkJCSJwdWJs
aWMgYWJzdHJhY3QgY2xhc3MgWCBleHRlbmRzIFhtbEFkYXB0ZXI8U3RyaW5nLFg+IHtcbiIgKyAK
KwkJCSJ9IiwKKworCQkJInAvcGFja2FnZS1pbmZvLmphdmEiLAorCQkJIkBYbWxKYXZhVHlwZUFk
YXB0ZXJzKHsgQFhtbEphdmFUeXBlQWRhcHRlcih2YWx1ZSA9IFguY2xhc3MsIHR5cGUgPSBYLmNs
YXNzKSB9KVxuIiArIAorCQkJInBhY2thZ2UgcDtcbiIgKyAKKwkJCSJpbXBvcnQgamF2YXgueG1s
LmJpbmQuYW5ub3RhdGlvbi5hZGFwdGVycy5YbWxKYXZhVHlwZUFkYXB0ZXI7ICAgXG4iICsgCisJ
CQkiaW1wb3J0IGphdmF4LnhtbC5iaW5kLmFubm90YXRpb24uYWRhcHRlcnMuWG1sSmF2YVR5cGVB
ZGFwdGVyczsiCisJCQkKKwkJfSk7Cit9CisKKy8vQnVnIDM4NjM1NiAtIFR5cGUgbWlzbWF0Y2gg
ZXJyb3Igd2l0aCBhbm5vdGF0aW9ucyBhbmQgZ2VuZXJpY3MKKy8vdGVzdCBjYXNlIGZyb20gY29t
bWVudCA2CitwdWJsaWMgdm9pZCB0ZXN0QnVnMzg2MzU2XzIoKSB7CisJcnVuQ29uZm9ybVRlc3Qo
CisJCW5ldyBTdHJpbmdbXSB7CisJCQkiY29tL2VybWFoZ2VyZC9Fcm1haGdlcmQuamF2YSIsCisJ
CQkicGFja2FnZSBjb20uZXJtYWhnZXJkO1xuIiArIAorCQkJIlxuIiArIAorCQkJInB1YmxpYyBj
bGFzcyBFcm1haGdlcmQge1xuIiArIAorCQkJIn0iLAorCisJCQkiY29tL2VybWFoZ2VyZC9wYWNr
YWdlLWluZm8uamF2YSIsCisJCQkiQFhtbEphdmFUeXBlQWRhcHRlcnMoeyBAWG1sSmF2YVR5cGVB
ZGFwdGVyKHZhbHVlID0gRXJtYWhnZXJkWG1sQWRhcHRlci5jbGFzcywgdHlwZSA9IEVybWFoZ2Vy
ZC5jbGFzcykgfSlcbiIgKyAKKwkJCSJwYWNrYWdlIGNvbS5lcm1haGdlcmQ7XG4iICsgCisJCQki
aW1wb3J0IGphdmF4LnhtbC5iaW5kLmFubm90YXRpb24uYWRhcHRlcnMuWG1sSmF2YVR5cGVBZGFw
dGVyO1xuIiArIAorCQkJImltcG9ydCBqYXZheC54bWwuYmluZC5hbm5vdGF0aW9uLmFkYXB0ZXJz
LlhtbEphdmFUeXBlQWRhcHRlcnM7IiwKKwkJCQorCQkJImNvbS9lcm1haGdlcmQvRXJtYWhnZXJk
WG1sQWRhcHRlci5qYXZhIiwKKwkJCSJwYWNrYWdlIGNvbS5lcm1haGdlcmQ7XG4iICsgCisJCQki
XG4iICsgCisJCQkiaW1wb3J0IGphdmF4LnhtbC5iaW5kLmFubm90YXRpb24uYWRhcHRlcnMuWG1s
QWRhcHRlcjtcbiIgKyAKKwkJCSJcbiIgKyAKKwkJCSJwdWJsaWMgY2xhc3MgRXJtYWhnZXJkWG1s
QWRhcHRlciBleHRlbmRzIFhtbEFkYXB0ZXI8U3RyaW5nLEVybWFoZ2VyZD4ge1xuIiArIAorCQkJ
IlxuIiArIAorCQkJIglAT3ZlcnJpZGVcbiIgKyAKKwkJCSIJcHVibGljIFN0cmluZyBtYXJzaGFs
KEVybWFoZ2VyZCBhcmcwKSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIgKyAKKwkJCSIJCS8vIFRPRE8g
QXV0by1nZW5lcmF0ZWQgbWV0aG9kIHN0dWJcbiIgKyAKKwkJCSIJCXJldHVybiBudWxsO1xuIiAr
IAorCQkJIgl9XG4iICsgCisJCQkiXG4iICsgCisJCQkiCUBPdmVycmlkZVxuIiArIAorCQkJIglw
dWJsaWMgRXJtYWhnZXJkIHVubWFyc2hhbChTdHJpbmcgYXJnMCkgdGhyb3dzIEV4Y2VwdGlvbiB7
XG4iICsgCisJCQkiCQkvLyBUT0RPIEF1dG8tZ2VuZXJhdGVkIG1ldGhvZCBzdHViXG4iICsgCisJ
CQkiCQlyZXR1cm4gbnVsbDtcbiIgKyAKKwkJCSIJfVxuIiArIAorCQkJIn0iCisJCQkKKwkJfSk7
Cit9CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1NvdXJjZVR5cGVCaW5kaW5nLmphdmEg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvbG9va3VwL1NvdXJjZVR5cGVCaW5kaW5nLmphdmEKaW5kZXggYThmYmM1OS4uMDk2
YjU0NCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Tb3VyY2VUeXBlQmluZGluZy5qYXZhCisr
KyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9sb29rdXAvU291cmNlVHlwZUJpbmRpbmcuamF2YQpAQCAtMTEwMCw4ICsxMTAw
LDYgQEAKIAkJCXRoaXMubW9kaWZpZXJzIHw9IENsYXNzRmlsZUNvbnN0YW50cy5BY2NEZXByZWNh
dGVkOwogCQl9CiAJfQotCWlmIChDaGFyT3BlcmF0aW9uLmVxdWFscyh0aGlzLnNvdXJjZU5hbWUs
IFR5cGVDb25zdGFudHMuUEFDS0FHRV9JTkZPX05BTUUpKQotCQlnZXRBbm5vdGF0aW9uVGFnQml0
cygpOyAvLyBpbml0aWFsaXplCiB9CiAKIC8vIGVuc3VyZSB0aGUgcmVjZWl2ZXIga25vd3MgaXRz
IGhpZXJhcmNoeSAmIGZpZWxkcy9tZXRob2RzIHNvIHN0YXRpYyBpbXBvcnRzIGNhbiBiZSByZXNv
bHZlZCBjb3JyZWN0bHk=
</data>

          </attachment>
      

    </bug>

</bugzilla>