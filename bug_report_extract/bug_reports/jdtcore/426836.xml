<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>426836</bug_id>
          
          <creation_ts>2014-01-28 16:29:00 -0500</creation_ts>
          <short_desc>[1.8] special handling for return type in references to method getClass()?</short_desc>
          <delta_ts>2014-02-21 01:06:57 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Stephan Herrmann">stephan.herrmann</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>manpalat</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2355669</commentid>
    <comment_count>0</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-01-28 16:29:29 -0500</bug_when>
    <thetext>I guess we need to implement this fairly recent clarification:

&quot;New text for 15.12.2.6:

If the chosen method is the getClass method of the class Object (4.3.2), the method&apos;s invocation type is the same as the method&apos;s type, except that the return type is Class&lt;? extends T&gt;, where T is the type that was searched, as determined by 15.12.1.&quot;

See https://bugs.openjdk.java.net/browse/JDK-8029568</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2355713</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-28 19:13:27 -0500</bug_when>
    <thetext>org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createGetClassMethod(TypeBinding, MethodBinding, Scope) already should be handling this scenario, but
may be not at the right place/time for part G ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360675</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-09 06:30:47 -0500</bug_when>
    <thetext>I don&apos;t see anything called for this. getClass() being a non-generic method
that takes no arguments, should not impact the new inference scheme.

Released a test establishing that the return type is massaged: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=8101ab5e0a0336012bb45b1966198ded493b22e4</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2361816</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-11 15:11:40 -0500</bug_when>
    <thetext>Should the following work?

// ----
import java.util.function.Supplier;

public class ReferenceToGetClass {
	&lt;T&gt; T extract(Supplier&lt;T&gt; s) {
		return s.get();
	}
	Class&lt;?&gt; test() {
		Class&lt;? extends ReferenceToGetClass&gt; c = extract(this::getClass);
		return c;
	}
}
// ----

Currently we get:
Type mismatch: cannot convert from Class&lt;capture#1-of ?&gt; to Class&lt;? extends ReferenceToGetClass&gt;

The parameter of extract is inferred as 
   Supplier&lt;Class&lt;?&gt;&gt;
not
   Supplier&lt;Class&lt;? extends ReferenceToGetClass&gt;&gt;

I&apos;ll make a quick check if this is an obvious flaw in the inference.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2361821</commentid>
    <comment_count>4</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-11 15:41:02 -0500</bug_when>
    <thetext>The example in comment 3 fails only due to differences between Scope.getExactMethod(..) and similar methods in Scope.

Most of these methods have a special stanza for Object.getClass(), except for the new one used for resolving ReferenceExpression.exactMethodBinding.

Adding the same stanza also to getExactMethod makes the above example compile, which seems to be called for by the spec update quoted in comment 0.

Currently testing my patch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2361823</commentid>
    <comment_count>5</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-11 15:45:53 -0500</bug_when>
    <thetext>javac does accept the example in comment 3.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2361830</commentid>
    <comment_count>6</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-11 16:00:42 -0500</bug_when>
    <thetext>Additional test  la comment 3 plus fix released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=a82dc4871132f6f30550e7b934921ef96c00600d</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2366477</commentid>
    <comment_count>7</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-02-21 00:37:22 -0500</bug_when>
    <thetext>Verified for Eclipse Kepler 4.3.2 RC4 Build id: M20140212-0800</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2366488</commentid>
    <comment_count>8</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-02-21 01:06:57 -0500</bug_when>
    <thetext>(In reply to Manoj Palat from comment #7)
&gt; Verified for Eclipse Kepler 4.3.2 RC4 Build id: M20140212-0800

Stands corrected as :
Verified as working for Eclipse + Java 8 RC1 using Kepler SR2(RC4) +   
Eclipse Java Development Tools Patch for Java 8 Support (BETA)   
1.0.0.v20140220-2054</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>