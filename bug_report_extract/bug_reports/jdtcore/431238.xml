<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>431238</bug_id>
          
          <creation_ts>2014-03-26 10:26:00 -0400</creation_ts>
          <short_desc>No Javadoc for org.eclipse.jdt.annotation 1.1.0 in Luna</short_desc>
          <delta_ts>2014-04-15 10:37:13 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Doc</component>
          <version>4.4</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.4 M7</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Markus Keller">markus_keller</reporter>
          <assigned_to name="Markus Keller">markus_keller</assigned_to>
          <cc>jarthana</cc>
    
    <cc>markus_keller</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2380464</commentid>
    <comment_count>0</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-03-26 10:26:01 -0400</bug_when>
    <thetext>In Luna builds, we only generate Javadoc for the org.eclipse.jdt.annotation project (2.0.0), but not for the old 1.1.0 version.

We can&apos;t just add org.eclipse.jdt.annotation_v1 to jdtOptions.txt, since the Javadoc tool can&apos;t handle multiple versions (second version just overrides previous files).

I see two possible solutions:

a) generate Javadoc for 1.1.0 separately, and then try to insert links into the generated TOC from the main Javadoc build

b) add a link to the old version to the the current Javadocs, e.g.:
 * &lt;p&gt;
 * &lt;b&gt;Note:&lt;/b&gt; Since org.eclipse.jdt.annotation 2.0.0, the
 * &lt;code&gt;@Target&lt;/code&gt; is &lt;code&gt;{TYPE_USE}&lt;/code&gt;. See
 * &lt;a href=&quot;http://help.eclipse.org/kepler/topic/org.eclipse.jdt.doc.isv/reference/api/org/eclipse/jdt/annotation/NonNull.html&quot;&gt;
 * &lt;code&gt;@NonNull&lt;/code&gt; in 1.1.0&lt;/a&gt;
 * &lt;/p&gt;

I prefer (b), but I&apos;d like to hear others&apos; opinions.

See also bug 431236 (need to use Java 8 to generate Javadocs).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2389264</commentid>
    <comment_count>1</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-04-15 10:37:13 -0400</bug_when>
    <thetext>Fixed with http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=c5bc570b3367d0f94772d64cf154af589a536a09</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>