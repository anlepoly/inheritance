<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>412150</bug_id>
          
          <creation_ts>2013-07-02 18:37:00 -0400</creation_ts>
          <short_desc>[1.8] [compiler] Enable reflected parameter names during annotation processing</short_desc>
          <delta_ts>2013-08-30 01:07:14 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>406966</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Jesper Moller">jesper</reporter>
          <assigned_to name="Jesper Moller">jesper</assigned_to>
          <cc>jarthana</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="59183"
          type_id="1"
          status="+"
          setter="srikanth_sankaran"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2279969</commentid>
    <comment_count>0</comment_count>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-07-02 18:37:38 -0400</bug_when>
    <thetext>If the annotation processing supports it, enable accessing the decoded method parameter names during processing of annotations.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2299851</commentid>
    <comment_count>1</comment_count>
      <attachid>234832</attachid>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-08-28 03:44:48 -0400</bug_when>
    <thetext>Created attachment 234832
Patch for this functionality (contains binary)

I haven&apos;t worked with the APT stuff before, so the testing strategy is a &apos;best effort&apos;.
I&apos;ve built the annotations.jar as per the jardesc.

The patch is not final, since the VariableElement.getModifiers() method doesn&apos;t return the final modifier from MethodParameters yet.

Note how ExecutableElementImpl contained filtering of synthetic arguments for enum constructors, but it effectively duplicated the same kind of filtering in BinaryTypeBinding, so I&apos;ve removed it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2299855</commentid>
    <comment_count>2</comment_count>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-08-28 03:49:17 -0400</bug_when>
    <thetext>Requesting review of implementation and testing strategy.

I figured I could test it in org.eclipse.jdt.compiler.apt.tests.ModelTests as well, but I couldn&apos;t quite figure out how the existing tests worked.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2299861</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-08-28 04:00:02 -0400</bug_when>
    <thetext>Jesper, sorry for the housekeeping burden, could you split this patch into
two please, one for the JDT/Core, for which I&apos;ll be reviewer and Jay will be
the reviewer and committer for APT (I don&apos;t think either of us have commit
right for APT)

Jay, the APT portion will have to go through CQ approval process. Can be
taken up after review.

We also need to raise a ER against APT and move the relevant portions of
the patch there.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2299891</commentid>
    <comment_count>4</comment_count>
      <attachid>234834</attachid>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-08-28 05:22:42 -0400</bug_when>
    <thetext>Created attachment 234834
JDT part of the patch

This is the JDT part of the changes, to support carrying the methodparameters over to the MethodBinding.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2299897</commentid>
    <comment_count>5</comment_count>
      <attachid>234836</attachid>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-08-28 05:36:20 -0400</bug_when>
    <thetext>Created attachment 234836
APT part of the patch

The APT part of the patch, mostly tests. This is the part which should go to CQ review, since it&apos;s well over 250 lines.

There&apos;ll be a few more changes coming when I get to the finishing touches, but it&apos;ll be &lt;250 lines -- or you could wait, if you prefer.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2299898</commentid>
    <comment_count>6</comment_count>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-08-28 05:38:53 -0400</bug_when>
    <thetext>(In reply to comment #3)
&gt; Jesper, sorry for the housekeeping burden, could you split this patch into
&gt; two please, one for the JDT/Core, for which I&apos;ll be reviewer and Jay will be
&gt; the reviewer and committer for APT (I don&apos;t think either of us have commit
&gt; right for APT)

Done. Will we need to split the bug as well?

It&apos;s a pity I couldn&apos;t finish this entirely (I didn&apos;t notice that APT was a separate component), but I&apos;m going to continue on JEP120 while the housekeeping is in progress.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2299913</commentid>
    <comment_count>7</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-08-28 06:25:44 -0400</bug_when>
    <thetext>Patch looks good, In BTB, please extract the 4 uses of argumentNames.length
into a local, release and resolve this one, Thanks!

Yes, I&apos;ll raise a separate bug for APT shortly.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2299920</commentid>
    <comment_count>8</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-08-28 06:34:11 -0400</bug_when>
    <thetext>(In reply to comment #7)

&gt; Yes, I&apos;ll raise a separate bug for APT shortly.

https://bugs.eclipse.org/bugs/show_bug.cgi?id=416027, Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2299922</commentid>
    <comment_count>9</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-08-28 06:38:18 -0400</bug_when>
    <thetext>BTW, I noticed that your name shows up &quot;Jesper Steen Moeller&quot; in a bunch 
of copyright text and as &quot;Jesper Steen Moller&quot; in others. Is this a valid
alternate spelling or a typo perpetuated by copy + paste ? 

(Also some of us thought you pronounced your name with a starting &quot;Y&quot; sound
during our phone meeting. So is that the right pronunciation ?)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2299926</commentid>
    <comment_count>10</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-08-28 06:51:37 -0400</bug_when>
    <thetext>(In reply to comment #6)

&gt; It&apos;s a pity I couldn&apos;t finish this entirely (I didn&apos;t notice that APT was a
&gt; separate component), but I&apos;m going to continue on JEP120 while the
&gt; housekeeping is in progress.

APT work may not need CQ review - I&apos;ll check with Dani.

Before you plunge into JEP 120, can we close the loose ends in 118 JDT/Core work
so we can declare done (APT work can happen in due course)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2301086</commentid>
    <comment_count>11</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-08-30 01:07:14 -0400</bug_when>
    <thetext>(In reply to comment #7)
&gt; Patch looks good, In BTB, please extract the 4 uses of argumentNames.length
&gt; into a local, release and resolve this one, Thanks!

I went ahead and made this change and released it here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=1ab5591c67cb695048e1591e0a714342e9b9c85b

&gt; APT work may not need CQ review - I&apos;ll check with Dani.

It does not require, but it is better to engage Jay when you are
fully done with the finishing touches.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>234832</attachid>
            <date>2013-08-28 03:44:00 -0400</date>
            <delta_ts>2013-08-28 05:22:42 -0400</delta_ts>
            <desc>Patch for this functionality (contains binary)</desc>
            <filename>bug412150.txt</filename>
            <type>text/plain</type>
            <size>37617</size>
            <attacher name="Jesper Moller">jesper</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3RzLy5jbGFzc3Bh
dGggYi9vcmcuZWNsaXBzZS5qZHQuYXB0LnBsdWdnYWJsZS50ZXN0cy8uY2xhc3NwYXRoCmluZGV4
IDEyMWU1MjcuLjIyZjMwNjQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dh
YmxlLnRlc3RzLy5jbGFzc3BhdGgKKysrIGIvb3JnLmVjbGlwc2UuamR0LmFwdC5wbHVnZ2FibGUu
dGVzdHMvLmNsYXNzcGF0aApAQCAtMSw3ICsxLDcgQEAKIDw/eG1sIHZlcnNpb249IjEuMCIgZW5j
b2Rpbmc9IlVURi04Ij8+CiA8Y2xhc3NwYXRoPgogCTxjbGFzc3BhdGhlbnRyeSBraW5kPSJzcmMi
IHBhdGg9InNyYyIvPgotCTxjbGFzc3BhdGhlbnRyeSBraW5kPSJjb24iIHBhdGg9Im9yZy5lY2xp
cHNlLmpkdC5sYXVuY2hpbmcuSlJFX0NPTlRBSU5FUi9vcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
ZGVidWcudWkubGF1bmNoZXIuU3RhbmRhcmRWTVR5cGUvSmF2YVNFLTEuNiIvPgorCTxjbGFzc3Bh
dGhlbnRyeSBraW5kPSJjb24iIHBhdGg9Im9yZy5lY2xpcHNlLmpkdC5sYXVuY2hpbmcuSlJFX0NP
TlRBSU5FUi9vcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuZGVidWcudWkubGF1bmNoZXIuU3RhbmRh
cmRWTVR5cGUvSmF2YVNFLTEuOCIvPgogCTxjbGFzc3BhdGhlbnRyeSBraW5kPSJjb24iIHBhdGg9
Im9yZy5lY2xpcHNlLnBkZS5jb3JlLnJlcXVpcmVkUGx1Z2lucyIvPgogCTxjbGFzc3BhdGhlbnRy
eSBraW5kPSJvdXRwdXQiIHBhdGg9ImJpbiIvPgogPC9jbGFzc3BhdGg+CmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuYXB0LnBsdWdnYWJsZS50ZXN0cy9saWIvYW5ub3RhdGlvbnMuamFyIGIv
b3JnLmVjbGlwc2UuamR0LmFwdC5wbHVnZ2FibGUudGVzdHMvbGliL2Fubm90YXRpb25zLmphcgpp
bmRleCA2OTNlZTgxNTRkOGMwODdkZDdmYjBlMDgzNGQzZTRiMGE4NmQ2NWI4Li4zYjJmOTM5NTli
Njk3MWViZTk1OGZjMjlkMjIwOTIyODM3OWI2ODNlIDEwMDY0NApHSVQgYmluYXJ5IHBhdGNoCmRl
bHRhIDY1Ngp6Y21kbGRgQT4hfno/KyN4Z248Skg0ez9oLVB2bmJibmFjPkleU149ViY4ezVtajY1
KEVBZXFWUW5IKUIrV01wRTUKeiRnZ0t8ZndJMGMqRmFieDZfZUw7aSVtWXVgVTBZOEN0Qy1qJmB1
NjxYOWd0VCZNXjVzeEFFaTtPZFJ6VkF3YCsjCno+OFY5fSR2S0l8I2l7LTB5X2dMSmpfdSFhYiM0
Nz5nfXFoNmRvNW1oZWg4VGBQbFckMXg2ayhFNkdEP3pQeVE7OQp6dDZgQSRuJlZtXiRiWSF6UHVq
RTcpNmNLfSZkKlJqQlVEMENDdXgoKSo3OTdqdFpsNzNiZyVxNjdqPl48cTAtS2oKek0qPkw/QTA/
Z21CRDRMYF57KTVWUGV5OTVKYXB2MmxLT3x7WVVkQUxJPXlWLXU4PHExN1Y8OT05Sn1LKTRQTUZ7
CnpTblM/WUJ+PSEjeC0mdCg8a1pQfjVfOTsoYCMrdFVkITc0X1BkQExyQFF2UEViPkBtVXxKK30z
ZWVlNiRpKz92Pgp6PiNNNj5RPnBFOUAlZz5XPiU/ciZTX0JtUVV8KFNxV08/WUxkNE0tTjJmek8m
P3JYcD5GbFNfNzI9SGNQNUA3JVoKekpzVHdLQ3I1RVFmeH5PXjA/c3JEIT02V0t2ST57azxiRUZN
JHB1X281SjRfM0RXKklvVkJpQHxVZGJwbklnZzc2CnpCMz1nKy1AKihIUjhmJCkwd31eYl9zRzJ2
MkhMal9pMHpUV3BNbHtJMyltMGBaZlNAQ0AhVjMzSEl2QH5CVntlTwp6NT9KcilzUDs8PUt6JTJH
KmJZVlNLNmFwOTl8Y2dQQjc0ZG1NVWZYTClITklgczhKbD8mQl9LKyRxOXMpbkhkPFMKSGEpRWRO
QzAqNjcKCmRlbHRhIDM5NQp6Y21ldy12cm0jUXo/KyN4Z248SkhBRj53TVBVTVNhUUNzQ3xKMkMk
b25CSDgmPGlyU09PfEReYm1eXl87WV9iSCkKekpCU24pWVltZHJEWWt6UTtXTytWajRVZ0ZXXkst
N1dNfH1LV0Q7Uk9tX0s8Ym1sTVJlKklhMjMjeU1gTyRAJCE3CnpsalYzNjZoS3pyVkJnN2tnQEoq
PWwjemtLNE0tIXZMWi09dSsodGwwRDFqQW4/dlo7VDN7PG9YaTB1KW9mVUs5eQp6VjEtXyt7NWs+
TjJuVD5uem13fHhfIzlBKUNXaCZtdFlBJjIqdSpDOTxLX1h8YTV9Mn1rXilmUzJfVXZadjAqaEUK
dlNUUFI9QUJxaGlae0wyQWApQyRXQGcqU2tNJHUlPjBvM0YjIXBhNWAxJS1HVkdYc01jQ3h7MEN3
PzAoIQoKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3RzL3Bs
dWdpbi54bWwgYi9vcmcuZWNsaXBzZS5qZHQuYXB0LnBsdWdnYWJsZS50ZXN0cy9wbHVnaW4ueG1s
CmluZGV4IGNkNTIxZGUuLmMwZjdmZDIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5hcHQu
cGx1Z2dhYmxlLnRlc3RzL3BsdWdpbi54bWwKKysrIGIvb3JnLmVjbGlwc2UuamR0LmFwdC5wbHVn
Z2FibGUudGVzdHMvcGx1Z2luLnhtbApAQCAtMzQsNiArMzQsOSBAQAogICAgICAgICAgPGphdmE2
cHJvY2Vzc29yCiAgICAgICAgICAgICAgICBjbGFzcz0ib3JnLmVjbGlwc2UuamR0LmFwdC5wbHVn
Z2FibGUudGVzdHMucHJvY2Vzc29ycy5tb2RlbHRlc3Rlci5Nb2RlbFRlc3RlclByb2MiPgogICAg
ICAgICAgPC9qYXZhNnByb2Nlc3Nvcj4KKyAgICAgICAgIDxqYXZhNnByb2Nlc3NvcgorICAgICAg
ICAgICAgICAgY2xhc3M9Im9yZy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3RzLnByb2Nl
c3NvcnMubW9kZWx0ZXN0ZXIuTW9kZWxUZXN0ZXI4UHJvYyI+CisgICAgICAgICA8L2phdmE2cHJv
Y2Vzc29yPgogICAgICAgPC9qYXZhNnByb2Nlc3NvcnM+CiAgICA8L2V4dGVuc2lvbj4KIDwvcGx1
Z2luPgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmFwdC5wbHVnZ2FibGUudGVzdHMvc3Jj
L29yZy9lY2xpcHNlL2pkdC9hcHQvcGx1Z2dhYmxlL3Rlc3RzL01vZGVsVGVzdHMuamF2YSBiL29y
Zy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3RzL3NyYy9vcmcvZWNsaXBzZS9qZHQvYXB0
L3BsdWdnYWJsZS90ZXN0cy9Nb2RlbFRlc3RzLmphdmEKaW5kZXggOThjMjBlNi4uN2ZlYzExNCAx
MDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmFwdC5wbHVnZ2FibGUudGVzdHMvc3JjL29yZy9l
Y2xpcHNlL2pkdC9hcHQvcGx1Z2dhYmxlL3Rlc3RzL01vZGVsVGVzdHMuamF2YQorKysgYi9vcmcu
ZWNsaXBzZS5qZHQuYXB0LnBsdWdnYWJsZS50ZXN0cy9zcmMvb3JnL2VjbGlwc2UvamR0L2FwdC9w
bHVnZ2FibGUvdGVzdHMvTW9kZWxUZXN0cy5qYXZhCkBAIC0xNCwxMSArMTQsMTcgQEAgcGFja2Fn
ZSBvcmcuZWNsaXBzZS5qZHQuYXB0LnBsdWdnYWJsZS50ZXN0czsKIGltcG9ydCBqdW5pdC5mcmFt
ZXdvcmsuVGVzdDsKIGltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdFN1aXRlOwogCitpbXBvcnQg
b3JnLmVjbGlwc2UuY29yZS5yZXNvdXJjZXMuSUZpbGU7CitpbXBvcnQgb3JnLmVjbGlwc2UuY29y
ZS5yZXNvdXJjZXMuSUZvbGRlcjsKIGltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJlc291cmNlcy5J
UHJvamVjdDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuQ29yZUV4Y2VwdGlvbjsK
IGltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuSVBhdGg7CitpbXBvcnQgb3JnLmVjbGlw
c2UuY29yZS5ydW50aW1lLk51bGxQcm9ncmVzc01vbml0b3I7CiBpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmFwdC5jb3JlLnV0aWwuQXB0Q29uZmlnOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5hcHQu
cGx1Z2dhYmxlLnRlc3RzLnByb2Nlc3NvcnMubW9kZWx0ZXN0ZXIuTW9kZWxUZXN0ZXI4UHJvYzsK
IGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuYXB0LnBsdWdnYWJsZS50ZXN0cy5wcm9jZXNzb3JzLm1v
ZGVsdGVzdGVyLk1vZGVsVGVzdGVyUHJvYzsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5J
SmF2YVByb2plY3Q7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmlt
cGwuQ29tcGlsZXJPcHRpb25zOwogCiAvKioKICAqIEJhc2ljIHRlc3RzIGZvciB0aGUgdHlwZXN5
c3RlbSBtb2RlbCBpbnRlcmZhY2VzIGluIHRoZSBJREUuCkBAIC04MSw0ICs4Nyw2NSBAQCBwdWJs
aWMgY2xhc3MgTW9kZWxUZXN0cyBleHRlbmRzIFRlc3RCYXNlCiAJCWFzc2VydFRydWUoIlByb2Nl
c3NvciBkaWQgbm90IHJ1biIsIFByb2Nlc3NvclRlc3RTdGF0dXMucHJvY2Vzc29yUmFuKCkpOwog
CQlhc3NlcnRFcXVhbHMoIlByb2Nlc3NvciByZXBvcnRlZCBlcnJvcnMiLCBQcm9jZXNzb3JUZXN0
U3RhdHVzLk5PX0VSUk9SUywgUHJvY2Vzc29yVGVzdFN0YXR1cy5nZXRFcnJvcnMoKSk7CiAJfQkK
KworCS8qKgorCSAqIENhbGwgTW9kZWxUZXN0ZXI4UHJvYy50ZXN0TWV0aG9kUGFyYW1ldGVycygp
LCB3aGljaCBjaGVja3MgdGhlIHR5cGUgb2YgYSBtZXRob2QKKwkgKi8KKwlAU3VwcHJlc3NXYXJu
aW5ncygicmVzdHJpY3Rpb24iKQorCXB1YmxpYyB2b2lkIHRlc3RNZXRob2RQYXJhbWV0ZXJzKCkg
dGhyb3dzIFRocm93YWJsZSB7CisJCVByb2Nlc3NvclRlc3RTdGF0dXMucmVzZXQoKTsKKwkJSUph
dmFQcm9qZWN0IGpwcm9qID0gY3JlYXRlSmF2YThQcm9qZWN0KF9wcm9qZWN0TmFtZSk7CisJCWpw
cm9qLnNldE9wdGlvbihDb21waWxlck9wdGlvbnMuT1BUSU9OX0xvY2FsVmFyaWFibGVBdHRyaWJ1
dGUsIENvbXBpbGVyT3B0aW9ucy5ET19OT1RfR0VORVJBVEUpOworCQlqcHJvai5zZXRPcHRpb24o
Q29tcGlsZXJPcHRpb25zLk9QVElPTl9NZXRob2RQYXJhbWV0ZXJzQXR0cmlidXRlLCBDb21waWxl
ck9wdGlvbnMuR0VORVJBVEUpOworCQlkaXNhYmxlSmF2YTVGYWN0b3JpZXMoanByb2opOworCQlJ
UHJvamVjdCBwcm9qID0ganByb2ouZ2V0UHJvamVjdCgpOworCQlJUGF0aCBwcm9qUGF0aCA9IHBy
b2ouZ2V0RnVsbFBhdGgoKTsKKworCQllbnYuYWRkQ2xhc3MocHJvalBhdGguYXBwZW5kKCJzcmMi
KSwgCisJCQkJTW9kZWxUZXN0ZXI4UHJvYy5URVNUX01FVEhPRF9QQVJBTUVURVJTX1RZUEUxX1BL
RywKKwkJCQlNb2RlbFRlc3RlcjhQcm9jLlRFU1RfTUVUSE9EX1BBUkFNRVRFUlNfVFlQRTFfQ0xB
U1MsCisJCQkJTW9kZWxUZXN0ZXI4UHJvYy5URVNUX01FVEhPRF9QQVJBTUVURVJTX1RZUEUxX1NP
VVJDRSk7CisJCWVudi5hZGRDbGFzcyhwcm9qUGF0aC5hcHBlbmQoInNyYyIpLCAKKwkJCQlNb2Rl
bFRlc3RlcjhQcm9jLlRFU1RfTUVUSE9EX1BBUkFNRVRFUlNfVFlQRTJfUEtHLAorCQkJCU1vZGVs
VGVzdGVyOFByb2MuVEVTVF9NRVRIT0RfUEFSQU1FVEVSU19UWVBFMl9DTEFTUywKKwkJCQlNb2Rl
bFRlc3RlcjhQcm9jLlRFU1RfTUVUSE9EX1BBUkFNRVRFUlNfVFlQRTJfU09VUkNFKTsKKwkJZnVs
bEJ1aWxkKCk7CisJCWV4cGVjdGluZ05vUHJvYmxlbXMoKTsKKwkJYXNzZXJ0RmFsc2UoIlByb2Nl
c3NvciByYW4gdG9vIGVhcmx5IiwgUHJvY2Vzc29yVGVzdFN0YXR1cy5wcm9jZXNzb3JSYW4oKSk7
CisKKwkJa2VlcEJpbmFyeU9ubHkoanByb2osCisJCQkJTW9kZWxUZXN0ZXI4UHJvYy5URVNUX01F
VEhPRF9QQVJBTUVURVJTX1RZUEUxX1BLRywKKwkJCQlNb2RlbFRlc3RlcjhQcm9jLlRFU1RfTUVU
SE9EX1BBUkFNRVRFUlNfVFlQRTFfQ0xBU1MpOworCisJCWtlZXBCaW5hcnlPbmx5KGpwcm9qLAor
CQkJCU1vZGVsVGVzdGVyOFByb2MuVEVTVF9NRVRIT0RfUEFSQU1FVEVSU19UWVBFMl9QS0csCisJ
CQkJTW9kZWxUZXN0ZXI4UHJvYy5URVNUX01FVEhPRF9QQVJBTUVURVJTX1RZUEUyX0NMQVNTKTsK
KworCQlmdWxsQnVpbGQoKTsKKworCQllbnYuYWRkQ2xhc3MocHJvalBhdGguYXBwZW5kKCJzcmMi
KSwgCisJCQkJTW9kZWxUZXN0ZXI4UHJvYy5URVNUX01FVEhPRF9QQVJBTUVURVJTX1RZUEUzX1BL
RywKKwkJCQlNb2RlbFRlc3RlcjhQcm9jLlRFU1RfTUVUSE9EX1BBUkFNRVRFUlNfVFlQRTNfQ0xB
U1MsCisJCQkJTW9kZWxUZXN0ZXI4UHJvYy5URVNUX01FVEhPRF9QQVJBTUVURVJTX1RZUEUzX1NP
VVJDRSk7CisJCQorCQlBcHRDb25maWcuc2V0RW5hYmxlZChqcHJvaiwgdHJ1ZSk7CisJCQorCQlm
dWxsQnVpbGQoKTsKKwkJZXhwZWN0aW5nTm9Qcm9ibGVtcygpOworCQlhc3NlcnRUcnVlKCJQcm9j
ZXNzb3IgZGlkIG5vdCBydW4iLCBQcm9jZXNzb3JUZXN0U3RhdHVzLnByb2Nlc3NvclJhbigpKTsK
KwkJYXNzZXJ0RXF1YWxzKCJQcm9jZXNzb3IgcmVwb3J0ZWQgZXJyb3JzIiwgUHJvY2Vzc29yVGVz
dFN0YXR1cy5OT19FUlJPUlMsIFByb2Nlc3NvclRlc3RTdGF0dXMuZ2V0RXJyb3JzKCkpOworCX0K
KworCXByaXZhdGUgdm9pZCBrZWVwQmluYXJ5T25seShJSmF2YVByb2plY3QganByb2osIFN0cmlu
ZyBwYWNrYWdlTmFtZSwgU3RyaW5nIGNsYXNzTmFtZSkgdGhyb3dzIENvcmVFeGNlcHRpb24gewor
CQlJRmlsZSByZWFsU291cmNlRmlsZSA9IGpwcm9qLmdldFByb2plY3QoKS5nZXRGb2xkZXIoInNy
YyIpLmdldEZvbGRlcihwYWNrYWdlTmFtZSkuZ2V0RmlsZShjbGFzc05hbWUgKyAiLmphdmEiKTsK
KwkJSUZpbGUgY29tcGlsZWRDbGFzc0ZpbGUgPSBqcHJvai5nZXRQcm9qZWN0KCkuZ2V0Rm9sZGVy
KCJiaW4iKS5nZXRGb2xkZXIocGFja2FnZU5hbWUpLmdldEZpbGUoY2xhc3NOYW1lICsgIi5jbGFz
cyIpOworCQlhc3NlcnRUcnVlKCJObyBjb21waWxlZCBjbGFzcyBmb3IgIiArIHBhY2thZ2VOYW1l
ICsgIi4iICsgY2xhc3NOYW1lICsgIjogIixjb21waWxlZENsYXNzRmlsZS5leGlzdHMoKSk7CisJ
CUlGaWxlIHByZWJ1aWx0Q2xhc3NGaWxlID0ganByb2ouZ2V0UHJvamVjdCgpLmdldEZvbGRlcigi
cHJlYnVpbHQiKS5nZXRGb2xkZXIocGFja2FnZU5hbWUpLmdldEZpbGUoY2xhc3NOYW1lICsgIi5j
bGFzcyIpOworCQlhc3NlcnRGYWxzZSgiQ29tcGlsZWQgY2xhc3MgYWxyZWFkeSBpbiBzcmM6ICIs
cHJlYnVpbHRDbGFzc0ZpbGUuZXhpc3RzKCkpOworCQljb21waWxlZENsYXNzRmlsZS5jb3B5KHBy
ZWJ1aWx0Q2xhc3NGaWxlLmdldEZ1bGxQYXRoKCksIHRydWUsIG5ldyBOdWxsUHJvZ3Jlc3NNb25p
dG9yKCkpOworCQlhc3NlcnRUcnVlKCJDb21waWxlZCBjbGFzcyBub3QgY29waWVkIHRvIHNyYyIs
cHJlYnVpbHRDbGFzc0ZpbGUuZXhpc3RzKCkpOworCQlyZWFsU291cmNlRmlsZS5kZWxldGUodHJ1
ZSwgbmV3IE51bGxQcm9ncmVzc01vbml0b3IoKSk7CisJCWFzc2VydEZhbHNlKCJTdGlsbCBzb3Vy
Y2U/OiAiLCByZWFsU291cmNlRmlsZS5leGlzdHMoKSk7CisJfQorCiB9CmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuYXB0LnBsdWdnYWJsZS50ZXN0cy9zcmMvb3JnL2VjbGlwc2UvamR0L2Fw
dC9wbHVnZ2FibGUvdGVzdHMvVGVzdEJhc2UuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5hcHQucGx1
Z2dhYmxlLnRlc3RzL3NyYy9vcmcvZWNsaXBzZS9qZHQvYXB0L3BsdWdnYWJsZS90ZXN0cy9UZXN0
QmFzZS5qYXZhCmluZGV4IDk5Nzg5YTAuLjJmM2ZhMzYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNl
LmpkdC5hcHQucGx1Z2dhYmxlLnRlc3RzL3NyYy9vcmcvZWNsaXBzZS9qZHQvYXB0L3BsdWdnYWJs
ZS90ZXN0cy9UZXN0QmFzZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxl
LnRlc3RzL3NyYy9vcmcvZWNsaXBzZS9qZHQvYXB0L3BsdWdnYWJsZS90ZXN0cy9UZXN0QmFzZS5q
YXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdo
dCAoYykgMjAwNywgMjAwOCBCRUEgU3lzdGVtcywgSW5jLiBhbmQgb3RoZXJzLgorICogQ29weXJp
Z2h0IChjKSAyMDA3LCAyMDEzIEJFQSBTeXN0ZW1zLCBJbmMuIGFuZCBvdGhlcnMuCiAgKiBBbGwg
cmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJp
YWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNl
IFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0
aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC03LDYgKzcsNyBAQAogICogCiAgKiBDb250cmli
dXRvcnM6CiAgKiAgICAgQkVBIFN5c3RlbXMsIEluYy4gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVt
ZW50YXRpb24KKyAqICAgIEplc3BlciBTdGVlbiBNb2xsZXIgLSBCdWcgNDEyMTUwIFsxLjhdIFtj
b21waWxlcl0gRW5hYmxlIHJlZmxlY3RlZCBwYXJhbWV0ZXIgbmFtZXMgZHVyaW5nIGFubm90YXRp
b24gcHJvY2Vzc2luZwogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xp
cHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3RzOwogCkBAIC0xOSw2ICsyMCw3IEBAIGltcG9ydCBv
cmcuZWNsaXBzZS5jb3JlLnJlc291cmNlcy5JRmlsZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5jb3Jl
LnJlc291cmNlcy5JUHJvamVjdDsKIGltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuQ29y
ZUV4Y2VwdGlvbjsKIGltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuSVBhdGg7CitpbXBv
cnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLlBhdGg7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmFwdC5jb3JlLmludGVybmFsLnV0aWwuRmFjdG9yeUNvbnRhaW5lcjsKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuYXB0LmNvcmUuaW50ZXJuYWwudXRpbC5GYWN0b3J5UGF0aDsKIGltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuYXB0LmNvcmUuaW50ZXJuYWwudXRpbC5GYWN0b3J5Q29udGFpbmVyLkZhY3Rv
cnlUeXBlOwpAQCAtMzEsNiArMzMsNyBAQCBwdWJsaWMgY2xhc3MgVGVzdEJhc2UgZXh0ZW5kcyBC
dWlsZGVyVGVzdHMKIHsKIAogCXByb3RlY3RlZCBzdGF0aWMgZmluYWwgU3RyaW5nIEpBVkFfMTZf
Q09NUExJQU5DRSA9ICIxLjYiOworCXByb3RlY3RlZCBzdGF0aWMgZmluYWwgU3RyaW5nIEpBVkFf
MThfQ09NUExJQU5DRSA9ICIxLjgiOwogCQogCXByb3RlY3RlZCBTdHJpbmcgX3Byb2plY3ROYW1l
OwogCXByb3RlY3RlZCBzdGF0aWMgaW50IF9wcm9qZWN0U2VyaWFsID0gMDsgLy8gdXNlZCB0byBj
cmVhdGUgdW5pcXVlIHByb2plY3QgbmFtZXMsIHRvIGF2b2lkIHJlc291cmNlIGRlbGV0aW9uIHBy
b2JsZW1zCkBAIC04MSw2ICs4NCwzMiBAQCBwdWJsaWMgY2xhc3MgVGVzdEJhc2UgZXh0ZW5kcyBC
dWlsZGVyVGVzdHMKIAkJYWRkQW5ub3RhdGlvbkphcihqYXZhUHJvaik7CiAJCXJldHVybiBqYXZh
UHJvajsKIAl9CisKKwkvKioKKwkgKiBDcmVhdGUgYSBqYXZhIHByb2plY3Qgd2l0aCBqYXZhIGxp
YnJhcmllcyBhbmQgdGVzdCBhbm5vdGF0aW9ucyBvbiBjbGFzc3BhdGgKKwkgKiAoY29tcGlsZXIg
bGV2ZWwgaXMgMS44KS4gVXNlICJzcmMiIGFzIHNvdXJjZSBmb2xkZXIgYW5kICJiaW4iIGFzIG91
dHB1dCBmb2xkZXIuIEFQVAorCSAqIGlzIG5vdCBlbmFibGVkLgorCSAqIAorCSAqIEBwYXJhbSBw
cm9qZWN0TmFtZQorCSAqIEByZXR1cm4gYSBqYXZhIHByb2plY3QgdGhhdCBoYXMgYmVlbiBhZGRl
ZCB0byB0aGUgY3VycmVudCB3b3Jrc3BhY2UuCisJICogQHRocm93cyBFeGNlcHRpb24KKwkgKi8K
Kwlwcm90ZWN0ZWQgc3RhdGljIElKYXZhUHJvamVjdCBjcmVhdGVKYXZhOFByb2plY3QoZmluYWwg
U3RyaW5nIHByb2plY3ROYW1lKSB0aHJvd3MgRXhjZXB0aW9uCisJeworCQlJUGF0aCBwcm9qZWN0
UGF0aCA9IGVudi5hZGRQcm9qZWN0KHByb2plY3ROYW1lLCBKQVZBXzE4X0NPTVBMSUFOQ0UpOwor
CQllbnYuYWRkRXh0ZXJuYWxKYXJzKHByb2plY3RQYXRoLCBVdGlsLmdldEphdmFDbGFzc0xpYnMo
KSk7CisJCQorCQkvLyByZW1vdmUgb2xkIHBhY2thZ2UgZnJhZ21lbnQgcm9vdCBzbyB0aGF0IG5h
bWVzIGRvbid0IGNvbGxpZGUKKwkJZW52LnJlbW92ZVBhY2thZ2VGcmFnbWVudFJvb3QocHJvamVj
dFBhdGgsICIiKTsgLy8kTk9OLU5MUy0xJAorCQllbnYuYWRkUGFja2FnZUZyYWdtZW50Um9vdChw
cm9qZWN0UGF0aCwgInNyYyIpOyAvLyROT04tTkxTLTEkCisJCWVudi5zZXRPdXRwdXRGb2xkZXIo
cHJvamVjdFBhdGgsICJiaW4iKTsgLy8kTk9OLU5MUy0xJAorCQlmaW5hbCBJSmF2YVByb2plY3Qg
amF2YVByb2ogPSBlbnYuZ2V0SmF2YVByb2plY3QocHJvamVjdFBhdGgpOworCQlqYXZhUHJvai5n
ZXRQcm9qZWN0KCkuZ2V0Rm9sZGVyKCJwcmVidWlsdCIpLmNyZWF0ZSh0cnVlLCB0cnVlLCBudWxs
KTsKKwkJamF2YVByb2ouZ2V0UHJvamVjdCgpLmdldEZvbGRlcigicHJlYnVpbHQiKS5nZXRGb2xk
ZXIoInAiKS5jcmVhdGUodHJ1ZSwgdHJ1ZSwgbnVsbCk7CisJCWVudi5hZGRDbGFzc0ZvbGRlcihw
cm9qZWN0UGF0aCwgcHJvamVjdFBhdGguYXBwZW5kKCJwcmVidWlsdCIpLCB0cnVlKTsKKwkJYWRk
QW5ub3RhdGlvbkphcihqYXZhUHJvaik7CisJCXJldHVybiBqYXZhUHJvajsKKwl9CiAJCiAJLyoq
CiAJICogRW5zdXJlIHRoYXQgdGhlcmUgYXJlIG5vIEphdmEgNSBwcm9jZXNzb3JzIG9uIHRoZSBm
YWN0b3J5IHBhdGgsIGFzIHRoZXkgY2FuIGNhdXNlCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5q
ZHQuYXB0LnBsdWdnYWJsZS50ZXN0cy9zcmMvb3JnL2VjbGlwc2UvamR0L2FwdC9wbHVnZ2FibGUv
dGVzdHMvYW5ub3RhdGlvbnMvTW9kZWxUZXN0OFRyaWdnZXIuamF2YSBiL29yZy5lY2xpcHNlLmpk
dC5hcHQucGx1Z2dhYmxlLnRlc3RzL3NyYy9vcmcvZWNsaXBzZS9qZHQvYXB0L3BsdWdnYWJsZS90
ZXN0cy9hbm5vdGF0aW9ucy9Nb2RlbFRlc3Q4VHJpZ2dlci5qYXZhCm5ldyBmaWxlIG1vZGUgMTAw
NjQ0CmluZGV4IDAwMDAwMDAuLjQyNmQ1OTUKLS0tIC9kZXYvbnVsbAorKysgYi9vcmcuZWNsaXBz
ZS5qZHQuYXB0LnBsdWdnYWJsZS50ZXN0cy9zcmMvb3JnL2VjbGlwc2UvamR0L2FwdC9wbHVnZ2Fi
bGUvdGVzdHMvYW5ub3RhdGlvbnMvTW9kZWxUZXN0OFRyaWdnZXIuamF2YQpAQCAtMCwwICsxLDI4
IEBACisvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKgorICogQ29weXJpZ2h0IChjKSAyMDEzIEplc3Bl
ciBTdGVlbiBNb2xsZXIgYW5kIG90aGVycy4gIAorICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhp
cyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscworICogYXJlIG1hZGUgYXZh
aWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4w
CisgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJs
ZSBhdAorICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisg
KiBDb250cmlidXRvcnM6CisgKiAgICBKZXNwZXIgU3RlZW4gTW9sbGVyIC0gaW5pdGlhbCBBUEkg
YW5kIGltcGxlbWVudGF0aW9uCisgKiAgICAKKyAqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLworCitw
YWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3RzLmFubm90YXRpb25zOwor
CisvKioKKyAqIAorICogQHNpbmNlIDMuNQorICovCitwdWJsaWMgQGludGVyZmFjZSBNb2RlbFRl
c3Q4VHJpZ2dlciB7CisJLyoqIE5hbWUgb2YgdGVzdCBtZXRob2QgdG8gcnVuICovCisJU3RyaW5n
IHRlc3QoKTsKKwkKKwkvKiogQXJiaXRyYXJ5IGFyZ3VtZW50ICovCisJU3RyaW5nIGFyZzAoKSBk
ZWZhdWx0ICIiOworCisJLyoqIEFyYml0cmFyeSBhcmd1bWVudCAqLworCVN0cmluZyBhcmcxKCkg
ZGVmYXVsdCAiIjsKK30KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxl
LnRlc3RzL3NyYy9vcmcvZWNsaXBzZS9qZHQvYXB0L3BsdWdnYWJsZS90ZXN0cy9wcm9jZXNzb3Jz
L21vZGVsdGVzdGVyL01vZGVsVGVzdGVyOFByb2MuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5hcHQu
cGx1Z2dhYmxlLnRlc3RzL3NyYy9vcmcvZWNsaXBzZS9qZHQvYXB0L3BsdWdnYWJsZS90ZXN0cy9w
cm9jZXNzb3JzL21vZGVsdGVzdGVyL01vZGVsVGVzdGVyOFByb2MuamF2YQpuZXcgZmlsZSBtb2Rl
IDEwMDY0NAppbmRleCAwMDAwMDAwLi5mNjEyNjI2Ci0tLSAvZGV2L251bGwKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmFwdC5wbHVnZ2FibGUudGVzdHMvc3JjL29yZy9lY2xpcHNlL2pkdC9hcHQvcGx1
Z2dhYmxlL3Rlc3RzL3Byb2Nlc3NvcnMvbW9kZWx0ZXN0ZXIvTW9kZWxUZXN0ZXI4UHJvYy5qYXZh
CkBAIC0wLDAgKzEsMjUzIEBACisvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgorICogQ29weXJpZ2h0
IChjKSAyMDEzIEplc3BlciBTdGVlbiBNb2xsZXIgYW5kIG90aGVycy4gIAorICogQWxsIHJpZ2h0
cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwor
ICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJs
aWMgTGljZW5zZSB2MS4wCisgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwg
YW5kIGlzIGF2YWlsYWJsZSBhdAorICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwt
djEwLmh0bWwKKyAqCisgKiBDb250cmlidXRvcnM6CisgKiAgICBKZXNwZXIgU3RlZW4gTW9sbGVy
IC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCisgKiAgICAKKyAqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqLworCitwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3Rz
LnByb2Nlc3NvcnMubW9kZWx0ZXN0ZXI7CisKK2ltcG9ydCBqYXZhLmxhbmcucmVmbGVjdC5JbnZv
Y2F0aW9uVGFyZ2V0RXhjZXB0aW9uOworaW1wb3J0IGphdmEubGFuZy5yZWZsZWN0Lk1ldGhvZDsK
K2ltcG9ydCBqYXZhLnV0aWwuSGFzaE1hcDsKK2ltcG9ydCBqYXZhLnV0aWwuTGlua2VkTGlzdDsK
K2ltcG9ydCBqYXZhLnV0aWwuTGlzdDsKK2ltcG9ydCBqYXZhLnV0aWwuTWFwOworaW1wb3J0IGph
dmEudXRpbC5TZXQ7CisKK2ltcG9ydCBqYXZheC5hbm5vdGF0aW9uLnByb2Nlc3NpbmcuQWJzdHJh
Y3RQcm9jZXNzb3I7CitpbXBvcnQgamF2YXguYW5ub3RhdGlvbi5wcm9jZXNzaW5nLlByb2Nlc3Np
bmdFbnZpcm9ubWVudDsKK2ltcG9ydCBqYXZheC5hbm5vdGF0aW9uLnByb2Nlc3NpbmcuUm91bmRF
bnZpcm9ubWVudDsKK2ltcG9ydCBqYXZheC5hbm5vdGF0aW9uLnByb2Nlc3NpbmcuU3VwcG9ydGVk
QW5ub3RhdGlvblR5cGVzOworaW1wb3J0IGphdmF4LmFubm90YXRpb24ucHJvY2Vzc2luZy5TdXBw
b3J0ZWRPcHRpb25zOworaW1wb3J0IGphdmF4LmFubm90YXRpb24ucHJvY2Vzc2luZy5TdXBwb3J0
ZWRTb3VyY2VWZXJzaW9uOworaW1wb3J0IGphdmF4LmxhbmcubW9kZWwuU291cmNlVmVyc2lvbjsK
K2ltcG9ydCBqYXZheC5sYW5nLm1vZGVsLmVsZW1lbnQuRWxlbWVudDsKK2ltcG9ydCBqYXZheC5s
YW5nLm1vZGVsLmVsZW1lbnQuRWxlbWVudEtpbmQ7CitpbXBvcnQgamF2YXgubGFuZy5tb2RlbC5l
bGVtZW50LkV4ZWN1dGFibGVFbGVtZW50OworaW1wb3J0IGphdmF4LmxhbmcubW9kZWwuZWxlbWVu
dC5UeXBlRWxlbWVudDsKK2ltcG9ydCBqYXZheC5sYW5nLm1vZGVsLmVsZW1lbnQuVmFyaWFibGVF
bGVtZW50OworaW1wb3J0IGphdmF4LmxhbmcubW9kZWwudHlwZS5EZWNsYXJlZFR5cGU7CitpbXBv
cnQgamF2YXgubGFuZy5tb2RlbC50eXBlLlR5cGVLaW5kOworaW1wb3J0IGphdmF4LmxhbmcubW9k
ZWwudHlwZS5UeXBlTWlycm9yOworaW1wb3J0IGphdmF4LmxhbmcubW9kZWwudXRpbC5FbGVtZW50
RmlsdGVyOworCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmFwdC5wbHVnZ2FibGUudGVzdHMuUHJv
Y2Vzc29yVGVzdFN0YXR1czsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuYXB0LnBsdWdnYWJsZS50
ZXN0cy5hbm5vdGF0aW9ucy5Mb29rQXQ7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmFwdC5wbHVn
Z2FibGUudGVzdHMuYW5ub3RhdGlvbnMuTW9kZWxUZXN0OFRyaWdnZXI7CisKKy8qKgorICogVGhp
cyBwcm9jZXNzb3IgdGVzdHMgZmVhdHVyZXMgc3BlY2lmaWMgdG8gSkVQIDExOC4KKyAqIE9uZSBw
cm9jZXNzb3IgY2FuIHJ1biBtYW55IHRlc3RzLiBUaGUgSlVuaXQgdGVzdHMgc3BlY2lmeSB3aGlj
aCB0ZXN0IHRvIHJ1biBieSBwYXNzaW5nIGl0cyBuYW1lIGluIHRvIHRoZQorICogTW9kZWxUZXN0
OFRyaWdnZXIgYW5ub3RhdGlvbi4KKyAqIAorICogQHNpbmNlIDMuOSBCRVRBX0pBVkE4CisgKi8K
K0BTdXBwb3J0ZWRBbm5vdGF0aW9uVHlwZXMoIHsgIm9yZy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dh
YmxlLnRlc3RzLmFubm90YXRpb25zLk1vZGVsVGVzdDhUcmlnZ2VyIiB9KQorQFN1cHBvcnRlZFNv
dXJjZVZlcnNpb24oU291cmNlVmVyc2lvbi5SRUxFQVNFXzgpCitAU3VwcG9ydGVkT3B0aW9ucygg
e30pCitwdWJsaWMgY2xhc3MgTW9kZWxUZXN0ZXI4UHJvYyBleHRlbmRzIEFic3RyYWN0UHJvY2Vz
c29yIHsKKwlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBURVNUX01FVEhPRF9QQVJBTUVURVJT
X1RZUEUxX1BLRyA9ICJwIjsKKwlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBURVNUX01FVEhP
RF9QQVJBTUVURVJTX1RZUEUxX0NMQVNTID0gIkJhciI7CisJcHVibGljIHN0YXRpYyBmaW5hbCBT
dHJpbmcgVEVTVF9NRVRIT0RfUEFSQU1FVEVSU19UWVBFMV9TT1VSQ0UgPQorCQkJInBhY2thZ2Ug
cDtcbiIgKworCQkJCQkicHVibGljIGNsYXNzIEJhciB7XG4iICsKKwkJCQkJIiAgICBwdWJsaWMg
dm9pZCBvdGhlclN0dWZmKGZpbmFsIGRvdWJsZSBmdW4sIFN0cmluZyBiZWFucykgeyB9XG4iICsK
KwkJCQkJIn0iOworCQorCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIFRFU1RfTUVUSE9EX1BB
UkFNRVRFUlNfVFlQRTJfUEtHID0gInAiOworCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIFRF
U1RfTUVUSE9EX1BBUkFNRVRFUlNfVFlQRTJfQ0xBU1MgPSAiTXlFbnVtIjsKKwlwdWJsaWMgc3Rh
dGljIGZpbmFsIFN0cmluZyBURVNUX01FVEhPRF9QQVJBTUVURVJTX1RZUEUyX1NPVVJDRSA9CisJ
CQkicGFja2FnZSBwO1xuIiArCisJCQkJCSJcbiIgKyAKKwkJCQkJInB1YmxpYyBlbnVtIE15RW51
bSB7XG4iICsgCisJCQkJCSIJT05FKDEpLCBUV08oMik7XG4iICsgCisJCQkJCSIJXG4iICsgCisJ
CQkJCSIJcHJpdmF0ZSBNeUVudW0oZmluYWwgaW50IGZpbmFsSW50VmFsdWUpIHsgdGhpcy52YXIg
PSBmaW5hbEludFZhbHVlOyB9XG4iICsgCisJCQkJCSIJaW50IHZhcjtcbiIgKyAKKwkJCQkJIn1c
biI7CisJCisJcHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgVEVTVF9NRVRIT0RfUEFSQU1FVEVS
U19UWVBFM19QS0cgPSAicCI7CisJcHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgVEVTVF9NRVRI
T0RfUEFSQU1FVEVSU19UWVBFM19DTEFTUyA9ICJGb28iOworCXB1YmxpYyBzdGF0aWMgZmluYWwg
U3RyaW5nIFRFU1RfTUVUSE9EX1BBUkFNRVRFUlNfVFlQRTNfU09VUkNFID0KKwkJInBhY2thZ2Ug
cDtcbiIgKworCQkiaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3RzLmFu
bm90YXRpb25zLk1vZGVsVGVzdDhUcmlnZ2VyO1xuIiArCisJCSJpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmFwdC5wbHVnZ2FibGUudGVzdHMuYW5ub3RhdGlvbnMuTG9va0F0O1xuIiArCisJCSJATW9k
ZWxUZXN0OFRyaWdnZXIodGVzdCA9IFwidGVzdE1ldGhvZFBhcmFtZXRlcnNcIikiICsKKwkJInB1
YmxpYyBjbGFzcyBGb28ge1xuIiArCisJCSIgICAgQExvb2tBdFxuIiArCisJCSIgICAgcHVibGlj
IEJhciBkb1N0dWZmKGZpbmFsIGludCBudW1iZXIsIFN0cmluZyB0ZXh0dWFsKSB7IHJldHVybiBu
dWxsOyB9XG4iICsKKwkJIiAgICBATG9va0F0XG4iICsKKwkJIiAgICBwdWJsaWMgTXlFbnVtIGd1
ZXNzKGZpbmFsIGludCBpc0l0T25lKSB7IHJldHVybiBpc0l0T25lID09IDEgPyBNeUVudW0uT05F
IDogTXlFbnVtLlRXTzsgfVxuIiArCisJCSJ9IjsKKworCisJQFN1cHByZXNzV2FybmluZ3MoInVu
dXNlZCIpCisJcHJpdmF0ZSBQcm9jZXNzaW5nRW52aXJvbm1lbnQgX3Byb2Nlc3NpbmdFbnY7CisJ
CisJLyoKKwkgKiAobm9uLUphdmFkb2MpCisJICogCisJICogQHNlZSBqYXZheC5hbm5vdGF0aW9u
LnByb2Nlc3NpbmcuQWJzdHJhY3RQcm9jZXNzb3IjaW5pdChqYXZheC5hbm5vdGF0aW9uLnByb2Nl
c3NpbmcuUHJvY2Vzc2luZ0Vudmlyb25tZW50KQorCSAqLworCUBPdmVycmlkZQorCXB1YmxpYyBz
eW5jaHJvbml6ZWQgdm9pZCBpbml0KFByb2Nlc3NpbmdFbnZpcm9ubWVudCBwcm9jZXNzaW5nRW52
KSB7CisJCXN1cGVyLmluaXQocHJvY2Vzc2luZ0Vudik7CisJCV9wcm9jZXNzaW5nRW52ID0gcHJv
Y2Vzc2luZ0VudjsKKwl9CisKKwkvKgorCSAqIChub24tSmF2YWRvYykKKwkgKiAKKwkgKiBAc2Vl
IGphdmF4LmFubm90YXRpb24ucHJvY2Vzc2luZy5BYnN0cmFjdFByb2Nlc3NvciNwcm9jZXNzKGph
dmEudXRpbC5TZXQsCisJICogICAgICBqYXZheC5hbm5vdGF0aW9uLnByb2Nlc3NpbmcuUm91bmRF
bnZpcm9ubWVudCkKKwkgKi8KKwlAT3ZlcnJpZGUKKwlwdWJsaWMgYm9vbGVhbiBwcm9jZXNzKFNl
dDw/IGV4dGVuZHMgVHlwZUVsZW1lbnQ+IGFubm90YXRpb25zLCBSb3VuZEVudmlyb25tZW50IHJv
dW5kRW52KSB7CisJCVByb2Nlc3NvclRlc3RTdGF0dXMuc2V0UHJvY2Vzc29yUmFuKCk7CisJCWlm
ICghcm91bmRFbnYucHJvY2Vzc2luZ092ZXIoKSAmJiAhYW5ub3RhdGlvbnMuaXNFbXB0eSgpKSB7
CisJCQlyb3VuZChhbm5vdGF0aW9ucywgcm91bmRFbnYpOworCQl9CisJCXJldHVybiB0cnVlOwor
CX0KKworCS8qKgorCSAqIFBlcmZvcm0gYSByb3VuZCBvZiBwcm9jZXNzaW5nOiBmb3IgYSBnaXZl
biBhbm5vdGF0aW9uIGluc3RhbmNlLCBkZXRlcm1pbmUgd2hhdCB0ZXN0IG1ldGhvZCBpdAorCSAq
IHNwZWNpZmllcywgYW5kIGludm9rZSB0aGF0IG1ldGhvZCwgcGFzc2luZyBpbiB0aGUgYW5ub3Rh
dGVkIGVsZW1lbnQuCisJICovCisJcHJpdmF0ZSB2b2lkIHJvdW5kKFNldDw/IGV4dGVuZHMgVHlw
ZUVsZW1lbnQ+IGFubm90YXRpb25zLCBSb3VuZEVudmlyb25tZW50IHJvdW5kRW52KSB7CisJCVR5
cGVFbGVtZW50IG1vZGVsVGVzdGVyQW5ubyA9IGFubm90YXRpb25zLml0ZXJhdG9yKCkubmV4dCgp
OworCQlTZXQ8PyBleHRlbmRzIEVsZW1lbnQ+IGFubm90YXRlZEVscyA9IHJvdW5kRW52LmdldEVs
ZW1lbnRzQW5ub3RhdGVkV2l0aChtb2RlbFRlc3RlckFubm8pOworCQlmb3IgKEVsZW1lbnQgYW5u
b3RhdGVkRWwgOiBhbm5vdGF0ZWRFbHMpIHsKKwkJCU1vZGVsVGVzdDhUcmlnZ2VyIG1vZGVsVGVz
dGVyTWlycm9yID0gYW5ub3RhdGVkRWwuZ2V0QW5ub3RhdGlvbihNb2RlbFRlc3Q4VHJpZ2dlci5j
bGFzcyk7CisJCQlTdHJpbmcgdGVzdE1ldGhvZE5hbWUgPSBtb2RlbFRlc3Rlck1pcnJvci50ZXN0
KCk7CisJCQlTdHJpbmcgYXJnMCA9IG1vZGVsVGVzdGVyTWlycm9yLmFyZzAoKTsKKwkJCVN0cmlu
ZyBhcmcxID0gbW9kZWxUZXN0ZXJNaXJyb3IuYXJnMSgpOworCQkJaWYgKG51bGwgIT0gdGVzdE1l
dGhvZE5hbWUgJiYgdGVzdE1ldGhvZE5hbWUubGVuZ3RoKCkgPiAwKSB7CisJCQkJdHJ5IHsKKwkJ
CQkJTWV0aG9kIHRlc3RNZXRob2QgPSBNb2RlbFRlc3RlcjhQcm9jLmNsYXNzLmdldE1ldGhvZCh0
ZXN0TWV0aG9kTmFtZSwgCisJCQkJCQkJUm91bmRFbnZpcm9ubWVudC5jbGFzcywgRWxlbWVudC5j
bGFzcywgU3RyaW5nLmNsYXNzLCBTdHJpbmcuY2xhc3MpOworCQkJCQl0ZXN0TWV0aG9kLmludm9r
ZSh0aGlzLCByb3VuZEVudiwgYW5ub3RhdGVkRWwsIGFyZzAsIGFyZzEpOworCQkJCX0gY2F0Y2gg
KEV4Y2VwdGlvbiBlKSB7CisJCQkJCVRocm93YWJsZSB0OworCQkJCQl0ID0gKGUgaW5zdGFuY2Vv
ZiBJbnZvY2F0aW9uVGFyZ2V0RXhjZXB0aW9uKSA/IHQgPSBlLmdldENhdXNlKCkgOiBlOworCQkJ
CQl0LnByaW50U3RhY2tUcmFjZSgpOworCQkJCQkvLyBJbGxlZ2FsU3RhdGVFeGNlcHRpb24gcHJv
YmFibHkgbWVhbnMgdGVzdCBtZXRob2QgY2FsbGVkIFByb2Nlc3NvclRlc3RTdGF0dXMuZmFpbCgp
CisJCQkJCVN0cmluZyBtc2cgPSAodCBpbnN0YW5jZW9mIElsbGVnYWxTdGF0ZUV4Y2VwdGlvbikg
PworCQkJCQkJCXQuZ2V0TWVzc2FnZSgpIDoKKwkJCQkJCQl0LmdldENsYXNzKCkuZ2V0U2ltcGxl
TmFtZSgpICsgIiBpbnZva2luZyB0ZXN0IG1ldGhvZCAiICsgCisJCQkJCQkJdGVzdE1ldGhvZE5h
bWUgKyAiIC0gc2VlIGNvbnNvbGUgZm9yIGRldGFpbHMiOworCQkJCQlQcm9jZXNzb3JUZXN0U3Rh
dHVzLmZhaWwobXNnKTsKKwkJCQl9CisJCQl9CisJCX0KKwl9CisKKwkKKwkvKioKKwkgKiBDaGVj
ayB0aGUgdHlwZXMgb2Ygc29tZSBtZXRob2RzIChjaGVjayB0aGF0IHRoZSBhbm5vdGF0aW9uIHBy
b2Nlc3NpbmcgdXNlcyB0aGUgcGFyc2VkIE1ldGhvZFBhcmFtZXRlcnMKKwkgKiBhdHRyaWJ1dGUg
ZnJvbSBjbGFzcyBmaWxlcyBhY2NvcmRpbmcgdG8gSkVQIDExOCkKKwkgKiBAc2VlICNURVNUX01F
VEhPRF9QQVJBTUVURVJTX1RZUEUxX1NPVVJDRQorCSAqIEBzZWUgI1RFU1RfTUVUSE9EX1BBUkFN
RVRFUlNfVFlQRTJfU09VUkNFCisJICogQHNlZSAjVEVTVF9NRVRIT0RfUEFSQU1FVEVSU19UWVBF
M19TT1VSQ0UKKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0TWV0aG9kUGFyYW1ldGVycyhSb3VuZEVu
dmlyb25tZW50IHJvdW5kRW52LCBFbGVtZW50IGUsIFN0cmluZyBhcmcwLCBTdHJpbmcgYXJnMSkg
CisJCQl0aHJvd3MgRXhjZXB0aW9uIAorCXsKKwkJTWFwPFN0cmluZywgRXhlY3V0YWJsZUVsZW1l
bnQ+IG1ldGhvZHMgPSBuZXcgSGFzaE1hcDxTdHJpbmcsIEV4ZWN1dGFibGVFbGVtZW50PigpOwor
CQlJdGVyYWJsZTw/IGV4dGVuZHMgRWxlbWVudD4gZWxlbWVudHM7CisKKwkJZWxlbWVudHMgPSBy
b3VuZEVudi5nZXRFbGVtZW50c0Fubm90YXRlZFdpdGgoTG9va0F0LmNsYXNzKTsKKwkJZm9yIChF
eGVjdXRhYmxlRWxlbWVudCBtZXRob2QgOiBFbGVtZW50RmlsdGVyLm1ldGhvZHNJbihlbGVtZW50
cykpIHsKKwkJCW1ldGhvZHMucHV0KG1ldGhvZC5nZXRTaW1wbGVOYW1lKCkudG9TdHJpbmcoKSwg
bWV0aG9kKTsKKwkJfQorCisJCS8vIEV4YW1pbmUgdGhlIGVhc3kgY2FzZSwgdGhlIEZvby5kb1N0
dWZmIG1ldGhvZAorCQlFeGVjdXRhYmxlRWxlbWVudCBtRG9TdHVmZiA9IG1ldGhvZHMuZ2V0KCJk
b1N0dWZmIik7CisJCWlmIChtRG9TdHVmZiA9PSBudWxsKSB7CisJCQlQcm9jZXNzb3JUZXN0U3Rh
dHVzLmZhaWwoIk1ldGhvZCBkb1N0dWZmKCkgd2FzIG5vdCBmb3VuZCIpOworCQl9CisJCWlmICht
RG9TdHVmZi5nZXRLaW5kKCkgIT0gRWxlbWVudEtpbmQuTUVUSE9EKSB7CisJCQlQcm9jZXNzb3JU
ZXN0U3RhdHVzLmZhaWwoIkVsZW1lbnRLaW5kIG9mIG1ldGhvZCBkb1N0dWZmKCkgd2FzICIgKyBt
RG9TdHVmZi5nZXRLaW5kKCkgKyAKKwkJCQkJIiwgZXhwZWN0ZWQgTUVUSE9EIik7CisJCX0KKwkJ
Ly8gRXhhbWluZSBwYXJhbWV0ZXJzCisJCUxpc3Q8PyBleHRlbmRzIFZhcmlhYmxlRWxlbWVudD4g
cGFyYW1ldGVycyA9IG1Eb1N0dWZmLmdldFBhcmFtZXRlcnMoKTsKKwkJaWYgKHBhcmFtZXRlcnMu
c2l6ZSgpICE9IDIpIHsKKwkJCVByb2Nlc3NvclRlc3RTdGF0dXMuZmFpbCgiRXhwZWN0ZWQgdHdv
IHBhcmFtZXRlcnMgZm9yIGRvU3R1ZmYoKSIpOworCQl9CisJCVByb2Nlc3NvclRlc3RTdGF0dXMu
YXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgIm51bWJlciIsIHBhcmFtZXRlcnMuZ2V0KDApLmdl
dFNpbXBsZU5hbWUoKS50b1N0cmluZygpKTsKKwkJUHJvY2Vzc29yVGVzdFN0YXR1cy5hc3NlcnRF
cXVhbHMoIldyb25nIG5hbWUiLCAidGV4dHVhbCIsIHBhcmFtZXRlcnMuZ2V0KDEpLmdldFNpbXBs
ZU5hbWUoKS50b1N0cmluZygpKTsKKwkJCisJCS8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8v
Ly8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vCisJ
CQorCQkvLyBDb29sLCBub3cgY2hlY2sgJ3AuQmFyLm90aGVyU3R1ZmYnIHdoaWNoIGlzIGFsc28g
dGhlIHJldHVybiB0eXBlIG9mIGRvU3R1ZmYKKwkJVHlwZU1pcnJvciByZXR1cm5UeXBlID0gbURv
U3R1ZmYuZ2V0UmV0dXJuVHlwZSgpOworCQlpZiAocmV0dXJuVHlwZS5nZXRLaW5kKCkgIT0gVHlw
ZUtpbmQuREVDTEFSRUQpCisJCQlQcm9jZXNzb3JUZXN0U3RhdHVzLmZhaWwoIlR5cGVLaW5kIG9m
IG1ldGhvZCBkb1N0dWZmKCkncyByZXR1cm4gdHlwZSAiICsgcmV0dXJuVHlwZS5nZXRLaW5kKCkg
KyAKKwkJCQkJIiwgZXhwZWN0ZWQgREVDTEFSRUQiKTsKKworCQlEZWNsYXJlZFR5cGUgYmFyVHlw
ZSA9IChEZWNsYXJlZFR5cGUpIHJldHVyblR5cGU7CisJCVR5cGVFbGVtZW50IGJhciA9IChUeXBl
RWxlbWVudCkgYmFyVHlwZS5hc0VsZW1lbnQoKTsKKwkJCisJCWZvciAoRWxlbWVudCBtZXRob2Qg
OiBiYXIuZ2V0RW5jbG9zZWRFbGVtZW50cygpKSB7CisJCQlpZiAobWV0aG9kLmdldEtpbmQoKSA9
PSBFbGVtZW50S2luZC5NRVRIT0QpCisJCQkJbWV0aG9kcy5wdXQobWV0aG9kLmdldFNpbXBsZU5h
bWUoKS50b1N0cmluZygpLCAoRXhlY3V0YWJsZUVsZW1lbnQpbWV0aG9kKTsKKwkJfQorCQkKKwkJ
RXhlY3V0YWJsZUVsZW1lbnQgbU90aGVyU3R1ZmYgPSBtZXRob2RzLmdldCgib3RoZXJTdHVmZiIp
OworCQlpZiAobU90aGVyU3R1ZmYgPT0gbnVsbCkgeworCQkJUHJvY2Vzc29yVGVzdFN0YXR1cy5m
YWlsKCJNZXRob2Qgb3RoZXJTdHVmZigpIHdhcyBub3QgZm91bmQiKTsKKwkJfQorCQlpZiAobU90
aGVyU3R1ZmYuZ2V0S2luZCgpICE9IEVsZW1lbnRLaW5kLk1FVEhPRCkgeworCQkJUHJvY2Vzc29y
VGVzdFN0YXR1cy5mYWlsKCJFbGVtZW50S2luZCBvZiBtZXRob2Qgb3RoZXJTdHVmZigpIHdhcyAi
ICsgbU90aGVyU3R1ZmYuZ2V0S2luZCgpICsgCisJCQkJCSIsIGV4cGVjdGVkIE1FVEhPRCIpOwor
CQl9CisJCS8vIEV4YW1pbmUgcGFyYW1ldGVycworCQlMaXN0PD8gZXh0ZW5kcyBWYXJpYWJsZUVs
ZW1lbnQ+IG90aGVyUGFyYW1ldGVycyA9IG1PdGhlclN0dWZmLmdldFBhcmFtZXRlcnMoKTsKKwkJ
aWYgKG90aGVyUGFyYW1ldGVycy5zaXplKCkgIT0gMikgeworCQkJUHJvY2Vzc29yVGVzdFN0YXR1
cy5mYWlsKCJFeHBlY3RlZCB0d28gcGFyYW1ldGVycyBmb3Igb3RoZXJTdHVmZigpIik7CisJCX0K
KwkJUHJvY2Vzc29yVGVzdFN0YXR1cy5hc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiZnVuIiwg
b3RoZXJQYXJhbWV0ZXJzLmdldCgwKS5nZXRTaW1wbGVOYW1lKCkudG9TdHJpbmcoKSk7CisJCVBy
b2Nlc3NvclRlc3RTdGF0dXMuYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgImJlYW5zIiwgb3Ro
ZXJQYXJhbWV0ZXJzLmdldCgxKS5nZXRTaW1wbGVOYW1lKCkudG9TdHJpbmcoKSk7CisKKwkJLy8v
Ly8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8v
Ly8vLy8vLy8vLy8vLy8vLy8vLy8vLy8KKworCQkvLyBFeGFtaW5lIHRoZSBlbnVtIGFzIHJldHVy
bmVkIGJ5IEZvby5ndWVzcyBtZXRob2QKKwkJRXhlY3V0YWJsZUVsZW1lbnQgbUd1ZXNzID0gbWV0
aG9kcy5nZXQoImd1ZXNzIik7CisJCWlmIChtR3Vlc3MgPT0gbnVsbCkgeworCQkJUHJvY2Vzc29y
VGVzdFN0YXR1cy5mYWlsKCJNZXRob2QgZ3Vlc3MoKSB3YXMgbm90IGZvdW5kIik7CisJCX0KKwkJ
aWYgKG1HdWVzcy5nZXRLaW5kKCkgIT0gRWxlbWVudEtpbmQuTUVUSE9EKSB7CisJCQlQcm9jZXNz
b3JUZXN0U3RhdHVzLmZhaWwoIkVsZW1lbnRLaW5kIG9mIG1ldGhvZCBkb1N0dWZmKCkgd2FzICIg
KyBtR3Vlc3MuZ2V0S2luZCgpICsgCisJCQkJCSIsIGV4cGVjdGVkIE1FVEhPRCIpOworCQl9CisJ
CQorCQkvLyBDb29sLCBub3cgY2hlY2sgJ3AuQmFyLm90aGVyU3R1ZmYnIHdoaWNoIGlzIGFsc28g
dGhlIHJldHVybiB0eXBlIG9mIGRvU3R1ZmYKKwkJVHlwZU1pcnJvciBndWVzc1JldHVyblR5cGUg
PSBtR3Vlc3MuZ2V0UmV0dXJuVHlwZSgpOworCQlpZiAoZ3Vlc3NSZXR1cm5UeXBlLmdldEtpbmQo
KSAhPSBUeXBlS2luZC5ERUNMQVJFRCkKKwkJCVByb2Nlc3NvclRlc3RTdGF0dXMuZmFpbCgiVHlw
ZUtpbmQgb2YgbWV0aG9kIGd1ZXNzKCkncyByZXR1cm4gdHlwZSAiICsgZ3Vlc3NSZXR1cm5UeXBl
LmdldEtpbmQoKSArIAorCQkJCQkiLCBleHBlY3RlZCBERUNMQVJFRCIpOworCisJCURlY2xhcmVk
VHlwZSBteUVudW1UeXBlID0gKERlY2xhcmVkVHlwZSkgZ3Vlc3NSZXR1cm5UeXBlOworCQlUeXBl
RWxlbWVudCBteUVudW1DbGFzcyA9IChUeXBlRWxlbWVudCkgbXlFbnVtVHlwZS5hc0VsZW1lbnQo
KTsKKworCQlMaXN0PEV4ZWN1dGFibGVFbGVtZW50PiBjdG9ycyA9IG5ldyBMaW5rZWRMaXN0PEV4
ZWN1dGFibGVFbGVtZW50PigpOworCQlmb3IgKEVsZW1lbnQgbWV0aG9kIDogbXlFbnVtQ2xhc3Mu
Z2V0RW5jbG9zZWRFbGVtZW50cygpKSB7CisJCQlpZiAobWV0aG9kLmdldEtpbmQoKSA9PSBFbGVt
ZW50S2luZC5DT05TVFJVQ1RPUikgeworCQkJCWN0b3JzLmFkZCgoRXhlY3V0YWJsZUVsZW1lbnQp
bWV0aG9kKTsKKwkJCX0KKwkJfQorCisJCVByb2Nlc3NvclRlc3RTdGF0dXMuYXNzZXJ0RXF1YWxz
KCJCYWQgIyBvZiBjb25zdHJ1Y3RvcnMgZm9yIE15RW51bSIsIDEsIGN0b3JzLnNpemUoKSk7CisJ
CS8vIEV4YW1pbmUgcGFyYW1ldGVycworCQlMaXN0PD8gZXh0ZW5kcyBWYXJpYWJsZUVsZW1lbnQ+
IGN0b3JQYXJhbWV0ZXJzID0gY3RvcnMuZ2V0KDApLmdldFBhcmFtZXRlcnMoKTsKKwkJUHJvY2Vz
c29yVGVzdFN0YXR1cy5hc3NlcnRFcXVhbHMoIkJhZCAjIG9mIHBhcmFtZXRlcnMgZm9yIE15RW51
bSBjdG9yIiwgMSwgY3RvclBhcmFtZXRlcnMuc2l6ZSgpKTsKKwkJUHJvY2Vzc29yVGVzdFN0YXR1
cy5hc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAiZmluYWxJbnRWYWx1ZSIsIGN0b3JQYXJhbWV0
ZXJzLmdldCgwKS5nZXRTaW1wbGVOYW1lKCkudG9TdHJpbmcoKSk7CisJfQorfQpkaWZmIC0tZ2l0
IGEvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLmFwdC9zcmMvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2FwdC9tb2RlbC9FeGVjdXRhYmxlRWxlbWVudEltcGwuamF2YSBiL29yZy5l
Y2xpcHNlLmpkdC5jb21waWxlci5hcHQvc3JjL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9hcHQvbW9kZWwvRXhlY3V0YWJsZUVsZW1lbnRJbXBsLmphdmEKaW5kZXggMzNiODI0MS4u
YjhmMjM2NyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLmFwdC9zcmMvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FwdC9tb2RlbC9FeGVjdXRhYmxlRWxlbWVu
dEltcGwuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29tcGlsZXIuYXB0L3NyYy9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXB0L21vZGVsL0V4ZWN1dGFibGVFbGVtZW50SW1w
bC5qYXZhCkBAIC03LDYgKzcsNyBAQAogICoKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0g
Q29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KKyAqICAgIEplc3Bl
ciBTdGVlbiBNb2xsZXIgLSBCdWcgNDEyMTUwIFsxLjhdIFtjb21waWxlcl0gRW5hYmxlIHJlZmxl
Y3RlZCBwYXJhbWV0ZXIgbmFtZXMgZHVyaW5nIGFubm90YXRpb24gcHJvY2Vzc2luZwogICoqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5hcHQubW9kZWw7CiAKQEAgLTM1LDcgKzM2LDYgQEAgaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5hc3QuQXJndW1lbnQ7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5Bbm5vdGF0aW9uQmluZGluZzsKIGltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkFubm90YXRpb25Ib2xkZXI7CiBp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5BcHRCaW5hcnlM
b2NhbFZhcmlhYmxlQmluZGluZzsKLWltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIubG9va3VwLkV4dHJhQ29tcGlsZXJNb2RpZmllcnM7CiBpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5Mb29rdXBFbnZpcm9ubWVudDsKIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLk1ldGhvZEJpbmRpbmc7CiBp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5NZXRob2RWZXJp
ZmllcjsKQEAgLTE0Myw0OSArMTQzLDI5IEBAIHB1YmxpYyBjbGFzcyBFeGVjdXRhYmxlRWxlbWVu
dEltcGwgZXh0ZW5kcyBFbGVtZW50SW1wbCBpbXBsZW1lbnRzCiAJCQkJfQogCQkJfSBlbHNlIHsK
IAkJCQkvLyBiaW5hcnkgbWV0aG9kCi0JCQkJYm9vbGVhbiBpc0VudW1Db25zdHJ1Y3RvciA9IGJp
bmRpbmcuaXNDb25zdHJ1Y3RvcigpCi0JCQkJCQkmJiBiaW5kaW5nLmRlY2xhcmluZ0NsYXNzLmlz
RW51bSgpCi0JCQkJCQkmJiBiaW5kaW5nLmRlY2xhcmluZ0NsYXNzLmlzQmluYXJ5QmluZGluZygp
Ci0JCQkJCQkmJiAoKGJpbmRpbmcubW9kaWZpZXJzICYgRXh0cmFDb21waWxlck1vZGlmaWVycy5B
Y2NHZW5lcmljU2lnbmF0dXJlKSA9PSAwKTsKIAkJCQlBbm5vdGF0aW9uQmluZGluZ1tdW10gcGFy
YW1ldGVyQW5ub3RhdGlvbkJpbmRpbmdzID0gbnVsbDsKIAkJCQlBbm5vdGF0aW9uSG9sZGVyIGFu
bm90YXRpb25Ib2xkZXIgPSBiaW5kaW5nLmRlY2xhcmluZ0NsYXNzLnJldHJpZXZlQW5ub3RhdGlv
bkhvbGRlcihiaW5kaW5nLCBmYWxzZSk7CiAJCQkJaWYgKGFubm90YXRpb25Ib2xkZXIgIT0gbnVs
bCkgewogCQkJCQlwYXJhbWV0ZXJBbm5vdGF0aW9uQmluZGluZ3MgPSBhbm5vdGF0aW9uSG9sZGVy
LmdldFBhcmFtZXRlckFubm90YXRpb25zKCk7CiAJCQkJfQogCQkJCS8vIHdlIG5lZWQgdG8gZmls
dGVyIHRoZSBzeW50aGV0aWMgYXJndW1lbnRzCi0JCQkJaWYgKGlzRW51bUNvbnN0cnVjdG9yKSB7
Ci0JCQkJCWlmIChsZW5ndGggPT0gMikgewotCQkJCQkJLy8gdGhlIHR3byBhcmd1bWVudHMgYXJl
IG9ubHkgdGhlIHR3byBzeW50aGV0aWMgYXJndW1lbnRzCi0JCQkJCQlyZXR1cm4gQ29sbGVjdGlv
bnMuZW1wdHlMaXN0KCk7Ci0JCQkJCX0KLQkJCQkJZm9yIChpbnQgaSA9IDI7IGkgPCBsZW5ndGg7
IGkrKykgewotCQkJCQkJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSBiaW5kaW5nLnBhcmFtZXRl
cnNbaV07Ci0JCQkJCQlTdHJpbmdCdWlsZGVyIGJ1aWxkZXIgPSBuZXcgU3RyaW5nQnVpbGRlcigi
YXJnIik7Ly8kTk9OLU5MUy0xJAotCQkJCQkJYnVpbGRlci5hcHBlbmQoaSAtIDIpOwotCQkJCQkJ
VmFyaWFibGVFbGVtZW50IHBhcmFtID0gbmV3IFZhcmlhYmxlRWxlbWVudEltcGwoX2VudiwKLQkJ
CQkJCQkJbmV3IEFwdEJpbmFyeUxvY2FsVmFyaWFibGVCaW5kaW5nKAotCQkJCQkJCQkJCVN0cmlu
Zy52YWx1ZU9mKGJ1aWxkZXIpLnRvQ2hhckFycmF5KCksCi0JCQkJCQkJCQkJdHlwZUJpbmRpbmcs
Ci0JCQkJCQkJCQkJMCwKLQkJCQkJCQkJCQludWxsLAotCQkJCQkJCQkJCWJpbmRpbmcpKTsKLQkJ
CQkJCXBhcmFtcy5hZGQocGFyYW0pOwotCQkJCQl9Ci0JCQkJfSBlbHNlIHsKLQkJCQkJaW50IGkg
PSAwOwotCQkJCQlmb3IgKFR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nIDogYmluZGluZy5wYXJhbWV0
ZXJzKSB7Ci0JCQkJCQlTdHJpbmdCdWlsZGVyIGJ1aWxkZXIgPSBuZXcgU3RyaW5nQnVpbGRlcigi
YXJnIik7Ly8kTk9OLU5MUy0xJAorCQkJCWludCBpID0gMDsKKwkJCQlmb3IgKFR5cGVCaW5kaW5n
IHR5cGVCaW5kaW5nIDogYmluZGluZy5wYXJhbWV0ZXJzKSB7CisJCQkJCWNoYXIgbmFtZVtdID0g
YmluZGluZy5wYXJhbWV0ZXJOYW1lcy5sZW5ndGggPiBpID8gYmluZGluZy5wYXJhbWV0ZXJOYW1l
c1tpXSA6IG51bGw7CisJCQkJCWlmIChuYW1lID09IG51bGwpIHsKKyAJCQkJCQlTdHJpbmdCdWls
ZGVyIGJ1aWxkZXIgPSBuZXcgU3RyaW5nQnVpbGRlcigiYXJnIik7Ly8kTk9OLU5MUy0xJAogCQkJ
CQkJYnVpbGRlci5hcHBlbmQoaSk7Ci0JCQkJCQlWYXJpYWJsZUVsZW1lbnQgcGFyYW0gPSBuZXcg
VmFyaWFibGVFbGVtZW50SW1wbChfZW52LAotCQkJCQkJCQluZXcgQXB0QmluYXJ5TG9jYWxWYXJp
YWJsZUJpbmRpbmcoCi0JCQkJCQkJCQkJU3RyaW5nLnZhbHVlT2YoYnVpbGRlcikudG9DaGFyQXJy
YXkoKSwKLQkJCQkJCQkJCQl0eXBlQmluZGluZywKLQkJCQkJCQkJCQkwLAotCQkJCQkJCQkJCXBh
cmFtZXRlckFubm90YXRpb25CaW5kaW5ncyAhPSBudWxsID8gcGFyYW1ldGVyQW5ub3RhdGlvbkJp
bmRpbmdzW2ldIDogbnVsbCwKLQkJCQkJCQkJCQliaW5kaW5nKSk7Ci0JCQkJCQlwYXJhbXMuYWRk
KHBhcmFtKTsKLQkJCQkJCWkrKzsKKwkJCQkJCW5hbWUgPSBTdHJpbmcudmFsdWVPZihidWlsZGVy
KS50b0NoYXJBcnJheSgpOwogCQkJCQl9CisJCQkJCVZhcmlhYmxlRWxlbWVudCBwYXJhbSA9IG5l
dyBWYXJpYWJsZUVsZW1lbnRJbXBsKF9lbnYsCisJCQkJCQkJbmV3IEFwdEJpbmFyeUxvY2FsVmFy
aWFibGVCaW5kaW5nKAorCQkJCQkJCQkJbmFtZSwKKwkJCQkJCQkJCXR5cGVCaW5kaW5nLAorCQkJ
CQkJCQkJMCwKKwkJCQkJCQkJCXBhcmFtZXRlckFubm90YXRpb25CaW5kaW5ncyAhPSBudWxsID8g
cGFyYW1ldGVyQW5ub3RhdGlvbkJpbmRpbmdzW2ldIDogbnVsbCwKKwkJCQkJCQkJCWJpbmRpbmcp
KTsKKwkJCQkJcGFyYW1zLmFkZChwYXJhbSk7CisJCQkJCWkrKzsKIAkJCQl9CiAJCQl9CiAJCQly
ZXR1cm4gQ29sbGVjdGlvbnMudW5tb2RpZmlhYmxlTGlzdChwYXJhbXMpOwpkaWZmIC0tZ2l0IGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvLnNldHRpbmdzLy5hcGlfZmlsdGVycyBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlLy5zZXR0aW5ncy8uYXBpX2ZpbHRlcnMKaW5kZXggODI2OGIwMC4uOWQ3NzBlZCAx
MDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvLnNldHRpbmdzLy5hcGlfZmlsdGVycwor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS8uc2V0dGluZ3MvLmFwaV9maWx0ZXJzCkBAIC0xLDUg
KzEsMTIgQEAKLTw/eG1sIHZlcnNpb249IjEuMCIgZW5jb2Rpbmc9IlVURi04Ij8+PGNvbXBvbmVu
dCBpZD0ib3JnLmVjbGlwc2UuamR0LmNvcmUiIHZlcnNpb249IjIiPgorPD94bWwgdmVyc2lvbj0i
MS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+Cis8Y29tcG9uZW50IGlkPSJv
cmcuZWNsaXBzZS5qZHQuY29yZSIgdmVyc2lvbj0iMiI+CiAgICAgPHJlc291cmNlIHBhdGg9Ik1F
VEEtSU5GL01BTklGRVNULk1GIj4KKyAgICAgICAgPGZpbHRlciBpZD0iOTIzNzk1NDYxIj4KKyAg
ICAgICAgICAgIDxtZXNzYWdlX2FyZ3VtZW50cz4KKyAgICAgICAgICAgICAgICA8bWVzc2FnZV9h
cmd1bWVudCB2YWx1ZT0iMy45LjEiLz4KKyAgICAgICAgICAgICAgICA8bWVzc2FnZV9hcmd1bWVu
dCB2YWx1ZT0iMy45LjAiLz4KKyAgICAgICAgICAgIDwvbWVzc2FnZV9hcmd1bWVudHM+CisgICAg
ICAgIDwvZmlsdGVyPgogICAgICAgICA8ZmlsdGVyIGNvbW1lbnQ9IkJFVEFfSkFWQTgiIGlkPSI5
MjQ4NDQwMzkiPgogICAgICAgICAgICAgPG1lc3NhZ2VfYXJndW1lbnRzPgogICAgICAgICAgICAg
ICAgIDxtZXNzYWdlX2FyZ3VtZW50IHZhbHVlPSIzLjkuMSIvPgpAQCAtNyw0ICsxNCw4MCBAQAog
ICAgICAgICAgICAgPC9tZXNzYWdlX2FyZ3VtZW50cz4KICAgICAgICAgPC9maWx0ZXI+CiAgICAg
PC9yZXNvdXJjZT4KLTwvY29tcG9uZW50PgpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGUKKyAg
ICA8cmVzb3VyY2UgcGF0aD0iZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9TaW5nbGVWYXJp
YWJsZURlY2xhcmF0aW9uLmphdmEiIHR5cGU9Im9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5TaW5n
bGVWYXJpYWJsZURlY2xhcmF0aW9uIj4KKyAgICAgICAgPGZpbHRlciBpZD0iMzM4NzkyNTQ2Ij4K
KyAgICAgICAgICAgIDxtZXNzYWdlX2FyZ3VtZW50cz4KKyAgICAgICAgICAgICAgICA8bWVzc2Fn
ZV9hcmd1bWVudCB2YWx1ZT0ib3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLlNpbmdsZVZhcmlhYmxl
RGVjbGFyYXRpb24iLz4KKyAgICAgICAgICAgICAgICA8bWVzc2FnZV9hcmd1bWVudCB2YWx1ZT0i
Z2V0RXh0cmFEaW1lbnNpb25zKCkiLz4KKyAgICAgICAgICAgIDwvbWVzc2FnZV9hcmd1bWVudHM+
CisgICAgICAgIDwvZmlsdGVyPgorICAgICAgICA8ZmlsdGVyIGlkPSIzMzg3OTI1NDYiPgorICAg
ICAgICAgICAgPG1lc3NhZ2VfYXJndW1lbnRzPgorICAgICAgICAgICAgICAgIDxtZXNzYWdlX2Fy
Z3VtZW50IHZhbHVlPSJvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uU2luZ2xlVmFyaWFibGVEZWNs
YXJhdGlvbiIvPgorICAgICAgICAgICAgICAgIDxtZXNzYWdlX2FyZ3VtZW50IHZhbHVlPSJnZXRJ
bml0aWFsaXplcigpIi8+CisgICAgICAgICAgICA8L21lc3NhZ2VfYXJndW1lbnRzPgorICAgICAg
ICA8L2ZpbHRlcj4KKyAgICAgICAgPGZpbHRlciBpZD0iMzM4NzkyNTQ2Ij4KKyAgICAgICAgICAg
IDxtZXNzYWdlX2FyZ3VtZW50cz4KKyAgICAgICAgICAgICAgICA8bWVzc2FnZV9hcmd1bWVudCB2
YWx1ZT0ib3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLlNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24i
Lz4KKyAgICAgICAgICAgICAgICA8bWVzc2FnZV9hcmd1bWVudCB2YWx1ZT0iZ2V0TmFtZSgpIi8+
CisgICAgICAgICAgICA8L21lc3NhZ2VfYXJndW1lbnRzPgorICAgICAgICA8L2ZpbHRlcj4KKyAg
ICAgICAgPGZpbHRlciBpZD0iMzM4NzkyNTQ2Ij4KKyAgICAgICAgICAgIDxtZXNzYWdlX2FyZ3Vt
ZW50cz4KKyAgICAgICAgICAgICAgICA8bWVzc2FnZV9hcmd1bWVudCB2YWx1ZT0ib3JnLmVjbGlw
c2UuamR0LmNvcmUuZG9tLlNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24iLz4KKyAgICAgICAgICAg
ICAgICA8bWVzc2FnZV9hcmd1bWVudCB2YWx1ZT0ic2V0RXh0cmFEaW1lbnNpb25zKGludCkiLz4K
KyAgICAgICAgICAgIDwvbWVzc2FnZV9hcmd1bWVudHM+CisgICAgICAgIDwvZmlsdGVyPgorICAg
ICAgICA8ZmlsdGVyIGlkPSIzMzg3OTI1NDYiPgorICAgICAgICAgICAgPG1lc3NhZ2VfYXJndW1l
bnRzPgorICAgICAgICAgICAgICAgIDxtZXNzYWdlX2FyZ3VtZW50IHZhbHVlPSJvcmcuZWNsaXBz
ZS5qZHQuY29yZS5kb20uU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiIvPgorICAgICAgICAgICAg
ICAgIDxtZXNzYWdlX2FyZ3VtZW50IHZhbHVlPSJzZXRJbml0aWFsaXplcihFeHByZXNzaW9uKSIv
PgorICAgICAgICAgICAgPC9tZXNzYWdlX2FyZ3VtZW50cz4KKyAgICAgICAgPC9maWx0ZXI+Cisg
ICAgICAgIDxmaWx0ZXIgaWQ9IjMzODc5MjU0NiI+CisgICAgICAgICAgICA8bWVzc2FnZV9hcmd1
bWVudHM+CisgICAgICAgICAgICAgICAgPG1lc3NhZ2VfYXJndW1lbnQgdmFsdWU9Im9yZy5lY2xp
cHNlLmpkdC5jb3JlLmRvbS5TaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIi8+CisgICAgICAgICAg
ICAgICAgPG1lc3NhZ2VfYXJndW1lbnQgdmFsdWU9InNldE5hbWUoU2ltcGxlTmFtZSkiLz4KKyAg
ICAgICAgICAgIDwvbWVzc2FnZV9hcmd1bWVudHM+CisgICAgICAgIDwvZmlsdGVyPgorICAgIDwv
cmVzb3VyY2U+CisgICAgPHJlc291cmNlIHBhdGg9ImRvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9k
b20vVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50LmphdmEiIHR5cGU9Im9yZy5lY2xpcHNlLmpk
dC5jb3JlLmRvbS5WYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQiPgorICAgICAgICA8ZmlsdGVy
IGlkPSIzMzg3OTI1NDYiPgorICAgICAgICAgICAgPG1lc3NhZ2VfYXJndW1lbnRzPgorICAgICAg
ICAgICAgICAgIDxtZXNzYWdlX2FyZ3VtZW50IHZhbHVlPSJvcmcuZWNsaXBzZS5qZHQuY29yZS5k
b20uVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50Ii8+CisgICAgICAgICAgICAgICAgPG1lc3Nh
Z2VfYXJndW1lbnQgdmFsdWU9ImdldEV4dHJhRGltZW5zaW9ucygpIi8+CisgICAgICAgICAgICA8
L21lc3NhZ2VfYXJndW1lbnRzPgorICAgICAgICA8L2ZpbHRlcj4KKyAgICAgICAgPGZpbHRlciBp
ZD0iMzM4NzkyNTQ2Ij4KKyAgICAgICAgICAgIDxtZXNzYWdlX2FyZ3VtZW50cz4KKyAgICAgICAg
ICAgICAgICA8bWVzc2FnZV9hcmd1bWVudCB2YWx1ZT0ib3JnLmVjbGlwc2UuamR0LmNvcmUuZG9t
LlZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCIvPgorICAgICAgICAgICAgICAgIDxtZXNzYWdl
X2FyZ3VtZW50IHZhbHVlPSJnZXRJbml0aWFsaXplcigpIi8+CisgICAgICAgICAgICA8L21lc3Nh
Z2VfYXJndW1lbnRzPgorICAgICAgICA8L2ZpbHRlcj4KKyAgICAgICAgPGZpbHRlciBpZD0iMzM4
NzkyNTQ2Ij4KKyAgICAgICAgICAgIDxtZXNzYWdlX2FyZ3VtZW50cz4KKyAgICAgICAgICAgICAg
ICA8bWVzc2FnZV9hcmd1bWVudCB2YWx1ZT0ib3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLlZhcmlh
YmxlRGVjbGFyYXRpb25GcmFnbWVudCIvPgorICAgICAgICAgICAgICAgIDxtZXNzYWdlX2FyZ3Vt
ZW50IHZhbHVlPSJnZXROYW1lKCkiLz4KKyAgICAgICAgICAgIDwvbWVzc2FnZV9hcmd1bWVudHM+
CisgICAgICAgIDwvZmlsdGVyPgorICAgICAgICA8ZmlsdGVyIGlkPSIzMzg3OTI1NDYiPgorICAg
ICAgICAgICAgPG1lc3NhZ2VfYXJndW1lbnRzPgorICAgICAgICAgICAgICAgIDxtZXNzYWdlX2Fy
Z3VtZW50IHZhbHVlPSJvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uVmFyaWFibGVEZWNsYXJhdGlv
bkZyYWdtZW50Ii8+CisgICAgICAgICAgICAgICAgPG1lc3NhZ2VfYXJndW1lbnQgdmFsdWU9InNl
dEV4dHJhRGltZW5zaW9ucyhpbnQpIi8+CisgICAgICAgICAgICA8L21lc3NhZ2VfYXJndW1lbnRz
PgorICAgICAgICA8L2ZpbHRlcj4KKyAgICAgICAgPGZpbHRlciBpZD0iMzM4NzkyNTQ2Ij4KKyAg
ICAgICAgICAgIDxtZXNzYWdlX2FyZ3VtZW50cz4KKyAgICAgICAgICAgICAgICA8bWVzc2FnZV9h
cmd1bWVudCB2YWx1ZT0ib3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLlZhcmlhYmxlRGVjbGFyYXRp
b25GcmFnbWVudCIvPgorICAgICAgICAgICAgICAgIDxtZXNzYWdlX2FyZ3VtZW50IHZhbHVlPSJz
ZXRJbml0aWFsaXplcihFeHByZXNzaW9uKSIvPgorICAgICAgICAgICAgPC9tZXNzYWdlX2FyZ3Vt
ZW50cz4KKyAgICAgICAgPC9maWx0ZXI+CisgICAgICAgIDxmaWx0ZXIgaWQ9IjMzODc5MjU0NiI+
CisgICAgICAgICAgICA8bWVzc2FnZV9hcmd1bWVudHM+CisgICAgICAgICAgICAgICAgPG1lc3Nh
Z2VfYXJndW1lbnQgdmFsdWU9Im9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5WYXJpYWJsZURlY2xh
cmF0aW9uRnJhZ21lbnQiLz4KKyAgICAgICAgICAgICAgICA8bWVzc2FnZV9hcmd1bWVudCB2YWx1
ZT0ic2V0TmFtZShTaW1wbGVOYW1lKSIvPgorICAgICAgICAgICAgPC9tZXNzYWdlX2FyZ3VtZW50
cz4KKyAgICAgICAgPC9maWx0ZXI+CisgICAgPC9yZXNvdXJjZT4KKzwvY29tcG9uZW50PgpkaWZm
IC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CaW5hcnlUeXBlQmluZGluZy5qYXZhIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xv
b2t1cC9CaW5hcnlUeXBlQmluZGluZy5qYXZhCmluZGV4IDJmNDIyNDkuLjZmYzY0NjMgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9sb29rdXAvQmluYXJ5VHlwZUJpbmRpbmcuamF2YQorKysgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
bG9va3VwL0JpbmFyeVR5cGVCaW5kaW5nLmphdmEKQEAgLTI1LDYgKzI1LDggQEAKICAqCQkJCQkJ
CQlCdWcgMzkyMDk5IC0gWzEuOF1bY29tcGlsZXJdW251bGxdIEFwcGx5IG51bGwgYW5ub3RhdGlv
biBvbiB0eXBlcyBmb3IgbnVsbCBhbmFseXNpcwogICoJCQkJCQkJCUJ1ZyA0MTUwNDMgLSBbMS44
XVtudWxsXSBGb2xsb3ctdXAgcmUgbnVsbCB0eXBlIGFubm90YXRpb25zIGFmdGVyIGJ1ZyAzOTIw
OTkKICAqCQkJCQkJCQlCdWcgNDE1ODUwIC0gWzEuOF0gRW5zdXJlIFJ1bkpEVENvcmVUZXN0cyBj
YW4gY29wZSB3aXRoIG51bGwgYW5ub3RhdGlvbnMgZW5hYmxlZAorICogICAgSmVzcGVyIFN0ZWVu
IE1vbGxlciAtIENvbnRyaWJ1dGlvbnMgZm9yCisgKgkJCQkJCQkJQnVnIDQxMjE1MCBbMS44XSBb
Y29tcGlsZXJdIEVuYWJsZSByZWZsZWN0ZWQgcGFyYW1ldGVyIG5hbWVzIGR1cmluZyBhbm5vdGF0
aW9uIHByb2Nlc3NpbmcKICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwOwogCkBAIC01MDEsNiArNTAzLDggQEAg
cHJpdmF0ZSBNZXRob2RCaW5kaW5nIGNyZWF0ZU1ldGhvZChJQmluYXJ5TWV0aG9kIG1ldGhvZCwg
bG9uZyBzb3VyY2VMZXZlbCwgY2hhclsKIAlBbm5vdGF0aW9uQmluZGluZ1tdW10gcGFyYW1Bbm5v
dGF0aW9ucyA9IG51bGw7CiAJVHlwZUJpbmRpbmcgcmV0dXJuVHlwZSA9IG51bGw7CiAKKwljaGFy
W11bXSBhcmd1bWVudE5hbWVzID0gbWV0aG9kLmdldEFyZ3VtZW50TmFtZXMoKTsKKwogCWZpbmFs
IGJvb2xlYW4gdXNlMTVzcGVjaWZpY3MgPSBzb3VyY2VMZXZlbCA+PSBDbGFzc0ZpbGVDb25zdGFu
dHMuSkRLMV81OwogCS8qIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNn
aT9pZD0zMjQ4NTAsIFNpbmNlIGEgMS40IHByb2plY3QgY2FuIGhhdmUgYSAxLjUKIAkgICB0eXBl
IGFzIGEgc3VwZXIgdHlwZSBhbmQgdGhlIDEuNSB0eXBlIGNvdWxkIGJlIGdlbmVyaWMsIHdlIG11
c3QgaW50ZXJuYWxpemUgdXNhZ2VzIG9mIHR5cGUKQEAgLTU3MSw2ICs1NzUsMTggQEAgcHJpdmF0
ZSBNZXRob2RCaW5kaW5nIGNyZWF0ZU1ldGhvZChJQmluYXJ5TWV0aG9kIG1ldGhvZCwgbG9uZyBz
b3VyY2VMZXZlbCwgY2hhclsKIAogCQlpZiAoIW1ldGhvZC5pc0NvbnN0cnVjdG9yKCkpCiAJCQly
ZXR1cm5UeXBlID0gdGhpcy5lbnZpcm9ubWVudC5nZXRUeXBlRnJvbVNpZ25hdHVyZShtZXRob2RE
ZXNjcmlwdG9yLCBpbmRleCArIDEsIC0xLCBmYWxzZSwgdGhpcywgbWlzc2luZ1R5cGVOYW1lcywg
d2Fsa2VyLnRvTWV0aG9kUmV0dXJuKCkpOyAgIC8vIGluZGV4IGlzIGN1cnJlbnRseSBwb2ludGlu
ZyBhdCB0aGUgJyknCisJCQorCQlpZiAoc3RhcnRJbmRleCA+IDAgJiYgYXJndW1lbnROYW1lcyAh
PSBudWxsICYmIGFyZ3VtZW50TmFtZXMubGVuZ3RoID4gMCkgeworCQkJLy8gV2UnbGwgaGF2ZSB0
byBzbGljZSB0aGUgc3RhcnRpbmcgYXJndW1lbnRzIG9mZgorCQkJaWYgKHN0YXJ0SW5kZXggPj0g
YXJndW1lbnROYW1lcy5sZW5ndGgpIHsKKwkJCQlhcmd1bWVudE5hbWVzID0gQmluZGluZy5OT19Q
QVJBTUVURVJfTkFNRVM7IC8vIFdlIGtub3cgbm90aGluZyBhYm91dCB0aGUgYXJndW1lbnQgbmFt
ZXMKKwkJCX0gZWxzZSB7CisJCQkJY2hhcltdW10gc2xpY2VkQXJndW1lbnROYW1lcyA9IG5ldyBj
aGFyW2FyZ3VtZW50TmFtZXMubGVuZ3RoIC0gc3RhcnRJbmRleF1bXTsKKwkJCQlTeXN0ZW0uYXJy
YXljb3B5KGFyZ3VtZW50TmFtZXMsIHN0YXJ0SW5kZXgsIHNsaWNlZEFyZ3VtZW50TmFtZXMsIDAs
IGFyZ3VtZW50TmFtZXMubGVuZ3RoIC0gc3RhcnRJbmRleCk7CisJCQkJYXJndW1lbnROYW1lcyA9
IHNsaWNlZEFyZ3VtZW50TmFtZXM7CisJCQl9CisJCX0KKwogCX0gZWxzZSB7CiAJCW1ldGhvZE1v
ZGlmaWVycyB8PSBFeHRyYUNvbXBpbGVyTW9kaWZpZXJzLkFjY0dlbmVyaWNTaWduYXR1cmU7CiAJ
CS8vIE1ldGhvZFR5cGVTaWduYXR1cmUgPSBQYXJhbWV0ZXJQYXJ0KG9wdGlvbmFsKSAnKCcgVHlw
ZVNpZ25hdHVyZXMgJyknIHJldHVybl90eXBlU2lnbmF0dXJlIFsnXicgVHlwZVNpZ25hdHVyZSAo
b3B0aW9uYWwpXQpAQCAtNjQ0LDYgKzY2MCw4IEBAIHByaXZhdGUgTWV0aG9kQmluZGluZyBjcmVh
dGVNZXRob2QoSUJpbmFyeU1ldGhvZCBtZXRob2QsIGxvbmcgc291cmNlTGV2ZWwsIGNoYXJbCiAJ
CQlpc0Fubm90YXRpb25UeXBlKCkgPyBjb252ZXJ0TWVtYmVyVmFsdWUobWV0aG9kLmdldERlZmF1
bHRWYWx1ZSgpLCB0aGlzLmVudmlyb25tZW50LCBtaXNzaW5nVHlwZU5hbWVzKSA6IG51bGwsCiAJ
CQl0aGlzLmVudmlyb25tZW50KTsKIAorCWlmIChhcmd1bWVudE5hbWVzICE9IG51bGwpIHJlc3Vs
dC5wYXJhbWV0ZXJOYW1lcyA9IGFyZ3VtZW50TmFtZXM7CisJCiAJaWYgKHVzZTE1c3BlY2lmaWNz
KQogCQlyZXN1bHQudGFnQml0cyB8PSBtZXRob2QuZ2V0VGFnQml0cygpOwogCXJlc3VsdC50eXBl
VmFyaWFibGVzID0gdHlwZVZhcnM7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0JpbmRpbmcu
amF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9sb29rdXAvQmluZGluZy5qYXZhCmluZGV4IDI4NGI1ODAuLjA4YTBlZDgg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQmluZGluZy5qYXZhCisrKyBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29r
dXAvQmluZGluZy5qYXZhCkBAIC0xMyw2ICsxMyw4IEBACiAgKiAgICAgSUJNIENvcnBvcmF0aW9u
IC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCiAgKiAgICAgU3RlcGhhbiBIZXJybWFu
biAtIENvbnRyaWJ1dGlvbiBmb3IKICAqCQkJCQkJCQlidWcgMzY1NTMxIC0gW2NvbXBpbGVyXVtu
dWxsXSBpbnZlc3RpZ2F0ZSBhbHRlcm5hdGl2ZSBzdHJhdGVneSBmb3IgaW50ZXJuYWxseSBlbmNv
ZGluZyBudWxsbmVzcyBkZWZhdWx0cworICogICAgIEplc3BlciBTdGVlbiBNb2xsZXIgLSBDb250
cmlidXRpb25zIGZvcgorICoJCQkJCQkJCUJ1ZyA0MTIxNTAgWzEuOF0gW2NvbXBpbGVyXSBFbmFi
bGUgcmVmbGVjdGVkIHBhcmFtZXRlciBuYW1lcyBkdXJpbmcgYW5ub3RhdGlvbiBwcm9jZXNzaW5n
CiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmxvb2t1cDsKIApAQCAtNTUsNiArNTcsNyBAQCBwdWJsaWMgYWJzdHJhY3Qg
Y2xhc3MgQmluZGluZyB7CiAJcHVibGljIHN0YXRpYyBmaW5hbCBUeXBlVmFyaWFibGVCaW5kaW5n
W10gTk9fVFlQRV9WQVJJQUJMRVMgPSBuZXcgVHlwZVZhcmlhYmxlQmluZGluZ1swXTsKIAlwdWJs
aWMgc3RhdGljIGZpbmFsIEFubm90YXRpb25CaW5kaW5nW10gTk9fQU5OT1RBVElPTlMgPSBuZXcg
QW5ub3RhdGlvbkJpbmRpbmdbMF07CiAJcHVibGljIHN0YXRpYyBmaW5hbCBFbGVtZW50VmFsdWVQ
YWlyW10gTk9fRUxFTUVOVF9WQUxVRV9QQUlSUyA9IG5ldyBFbGVtZW50VmFsdWVQYWlyWzBdOwor
CXB1YmxpYyBzdGF0aWMgZmluYWwgY2hhcltdW10gTk9fUEFSQU1FVEVSX05BTUVTID0gbmV3IGNo
YXJbMF1bXTsKIAogCXB1YmxpYyBzdGF0aWMgZmluYWwgRmllbGRCaW5kaW5nW10gVU5JTklUSUFM
SVpFRF9GSUVMRFMgPSBuZXcgRmllbGRCaW5kaW5nWzBdOwogCXB1YmxpYyBzdGF0aWMgZmluYWwg
TWV0aG9kQmluZGluZ1tdIFVOSU5JVElBTElaRURfTUVUSE9EUyA9IG5ldyBNZXRob2RCaW5kaW5n
WzBdOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RCaW5kaW5nLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvbG9va3VwL01ldGhvZEJpbmRpbmcuamF2YQppbmRleCA1ZDFhYTI2Li40NTEzNDdjIDEwMDY0
NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvbG9va3VwL01ldGhvZEJpbmRpbmcuamF2YQorKysgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9v
a3VwL01ldGhvZEJpbmRpbmcuamF2YQpAQCAtMTksNiArMTksOCBAQAogICoJCQkJCQkJCWJ1ZyAz
NjU1MzEgLSBbY29tcGlsZXJdW251bGxdIGludmVzdGlnYXRlIGFsdGVybmF0aXZlIHN0cmF0ZWd5
IGZvciBpbnRlcm5hbGx5IGVuY29kaW5nIG51bGxuZXNzIGRlZmF1bHRzCiAgKgkJCQkJCQkJYnVn
IDM4ODI4MSAtIFtjb21waWxlcl1bbnVsbF0gaW5oZXJpdGFuY2Ugb2YgbnVsbCBhbm5vdGF0aW9u
cyBhcyBhbiBvcHRpb24KICAqCQkJCQkJCQlCdWcgMzkyMDk5IC0gWzEuOF1bY29tcGlsZXJdW251
bGxdIEFwcGx5IG51bGwgYW5ub3RhdGlvbiBvbiB0eXBlcyBmb3IgbnVsbCBhbmFseXNpcworICog
ICAgIEplc3BlciBTdGVlbiBNb2xsZXIgLSBDb250cmlidXRpb25zIGZvcgorICoJCQkJCQkJCUJ1
ZyA0MTIxNTAgWzEuOF0gW2NvbXBpbGVyXSBFbmFibGUgcmVmbGVjdGVkIHBhcmFtZXRlciBuYW1l
cyBkdXJpbmcgYW5ub3RhdGlvbiBwcm9jZXNzaW5nCiAgKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8K
IHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cDsKIApAQCAt
NTEsNiArNTMsOSBAQCBwdWJsaWMgY2xhc3MgTWV0aG9kQmluZGluZyBleHRlbmRzIEJpbmRpbmcg
ewogCS8qKiBTdG9yZSBudWxsbmVzcyBpbmZvcm1hdGlvbiBmcm9tIGFubm90YXRpb24gKGluY2wu
IGFwcGxpY2FibGUgZGVmYXVsdCkuICovCiAJcHVibGljIEJvb2xlYW5bXSBwYXJhbWV0ZXJOb25O
dWxsbmVzczsgIC8vIFRSVUUgbWVhbnMgQE5vbk51bGwgZGVjbGFyZWQsIEZBTFNFIG1lYW5zIEBO
dWxsYWJsZSBkZWNsYXJlZCwgbnVsbCBtZWFucyBub3RoaW5nIGRlY2xhcmVkCiAKKwkvKiogU3Rv
cmUgcGFyYW1ldGVyIG5hbWVzIGZyb20gTWV0aG9kUGFyYW1ldGVycyBhdHRyaWJ1dGUgKGluY2wu
IGFwcGxpY2FibGUgZGVmYXVsdCkuICovCisJcHVibGljIGNoYXJbXVtdIHBhcmFtZXRlck5hbWVz
ID0gQmluZGluZy5OT19QQVJBTUVURVJfTkFNRVM7CisKIHByb3RlY3RlZCBNZXRob2RCaW5kaW5n
KCkgewogCS8vIGZvciBjcmVhdGluZyBwcm9ibGVtIG9yIHN5bnRoZXRpYyBtZXRob2QKIH0K
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>234834</attachid>
            <date>2013-08-28 05:22:00 -0400</date>
            <delta_ts>2013-08-28 05:43:11 -0400</delta_ts>
            <desc>JDT part of the patch</desc>
            <filename>file_412150.txt</filename>
            <type>text/plain</type>
            <size>6078</size>
            <attacher name="Jesper Moller">jesper</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQmluYXJ5VHlwZUJpbmRpbmcuamF2YSBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9sb29rdXAvQmluYXJ5VHlwZUJpbmRpbmcuamF2YQ0KaW5kZXggMmY0MjI0OS4uNmZjNjQ2MyAx
MDA2NDQNCi0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQmluYXJ5VHlwZUJpbmRpbmcuamF2YQ0KKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9CaW5hcnlUeXBlQmluZGluZy5qYXZhDQpAQCAtMjUsNiArMjUsOCBAQA0K
ICAqCQkJCQkJCQlCdWcgMzkyMDk5IC0gWzEuOF1bY29tcGlsZXJdW251bGxdIEFwcGx5IG51bGwg
YW5ub3RhdGlvbiBvbiB0eXBlcyBmb3IgbnVsbCBhbmFseXNpcw0KICAqCQkJCQkJCQlCdWcgNDE1
MDQzIC0gWzEuOF1bbnVsbF0gRm9sbG93LXVwIHJlIG51bGwgdHlwZSBhbm5vdGF0aW9ucyBhZnRl
ciBidWcgMzkyMDk5DQogICoJCQkJCQkJCUJ1ZyA0MTU4NTAgLSBbMS44XSBFbnN1cmUgUnVuSkRU
Q29yZVRlc3RzIGNhbiBjb3BlIHdpdGggbnVsbCBhbm5vdGF0aW9ucyBlbmFibGVkDQorICogICAg
SmVzcGVyIFN0ZWVuIE1vbGxlciAtIENvbnRyaWJ1dGlvbnMgZm9yDQorICoJCQkJCQkJCUJ1ZyA0
MTIxNTAgWzEuOF0gW2NvbXBpbGVyXSBFbmFibGUgcmVmbGVjdGVkIHBhcmFtZXRlciBuYW1lcyBk
dXJpbmcgYW5ub3RhdGlvbiBwcm9jZXNzaW5nDQogICoqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQog
cGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwOw0KIA0KQEAg
LTUwMSw2ICs1MDMsOCBAQCBwcml2YXRlIE1ldGhvZEJpbmRpbmcgY3JlYXRlTWV0aG9kKElCaW5h
cnlNZXRob2QgbWV0aG9kLCBsb25nIHNvdXJjZUxldmVsLCBjaGFyWw0KIAlBbm5vdGF0aW9uQmlu
ZGluZ1tdW10gcGFyYW1Bbm5vdGF0aW9ucyA9IG51bGw7DQogCVR5cGVCaW5kaW5nIHJldHVyblR5
cGUgPSBudWxsOw0KIA0KKwljaGFyW11bXSBhcmd1bWVudE5hbWVzID0gbWV0aG9kLmdldEFyZ3Vt
ZW50TmFtZXMoKTsNCisNCiAJZmluYWwgYm9vbGVhbiB1c2UxNXNwZWNpZmljcyA9IHNvdXJjZUxl
dmVsID49IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzU7DQogCS8qIGh0dHBzOi8vYnVncy5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMjQ4NTAsIFNpbmNlIGEgMS40IHByb2plY3Qg
Y2FuIGhhdmUgYSAxLjUNCiAJICAgdHlwZSBhcyBhIHN1cGVyIHR5cGUgYW5kIHRoZSAxLjUgdHlw
ZSBjb3VsZCBiZSBnZW5lcmljLCB3ZSBtdXN0IGludGVybmFsaXplIHVzYWdlcyBvZiB0eXBlDQpA
QCAtNTcxLDYgKzU3NSwxOCBAQCBwcml2YXRlIE1ldGhvZEJpbmRpbmcgY3JlYXRlTWV0aG9kKElC
aW5hcnlNZXRob2QgbWV0aG9kLCBsb25nIHNvdXJjZUxldmVsLCBjaGFyWw0KIA0KIAkJaWYgKCFt
ZXRob2QuaXNDb25zdHJ1Y3RvcigpKQ0KIAkJCXJldHVyblR5cGUgPSB0aGlzLmVudmlyb25tZW50
LmdldFR5cGVGcm9tU2lnbmF0dXJlKG1ldGhvZERlc2NyaXB0b3IsIGluZGV4ICsgMSwgLTEsIGZh
bHNlLCB0aGlzLCBtaXNzaW5nVHlwZU5hbWVzLCB3YWxrZXIudG9NZXRob2RSZXR1cm4oKSk7ICAg
Ly8gaW5kZXggaXMgY3VycmVudGx5IHBvaW50aW5nIGF0IHRoZSAnKScNCisJCQ0KKwkJaWYgKHN0
YXJ0SW5kZXggPiAwICYmIGFyZ3VtZW50TmFtZXMgIT0gbnVsbCAmJiBhcmd1bWVudE5hbWVzLmxl
bmd0aCA+IDApIHsNCisJCQkvLyBXZSdsbCBoYXZlIHRvIHNsaWNlIHRoZSBzdGFydGluZyBhcmd1
bWVudHMgb2ZmDQorCQkJaWYgKHN0YXJ0SW5kZXggPj0gYXJndW1lbnROYW1lcy5sZW5ndGgpIHsN
CisJCQkJYXJndW1lbnROYW1lcyA9IEJpbmRpbmcuTk9fUEFSQU1FVEVSX05BTUVTOyAvLyBXZSBr
bm93IG5vdGhpbmcgYWJvdXQgdGhlIGFyZ3VtZW50IG5hbWVzDQorCQkJfSBlbHNlIHsNCisJCQkJ
Y2hhcltdW10gc2xpY2VkQXJndW1lbnROYW1lcyA9IG5ldyBjaGFyW2FyZ3VtZW50TmFtZXMubGVu
Z3RoIC0gc3RhcnRJbmRleF1bXTsNCisJCQkJU3lzdGVtLmFycmF5Y29weShhcmd1bWVudE5hbWVz
LCBzdGFydEluZGV4LCBzbGljZWRBcmd1bWVudE5hbWVzLCAwLCBhcmd1bWVudE5hbWVzLmxlbmd0
aCAtIHN0YXJ0SW5kZXgpOw0KKwkJCQlhcmd1bWVudE5hbWVzID0gc2xpY2VkQXJndW1lbnROYW1l
czsNCisJCQl9DQorCQl9DQorDQogCX0gZWxzZSB7DQogCQltZXRob2RNb2RpZmllcnMgfD0gRXh0
cmFDb21waWxlck1vZGlmaWVycy5BY2NHZW5lcmljU2lnbmF0dXJlOw0KIAkJLy8gTWV0aG9kVHlw
ZVNpZ25hdHVyZSA9IFBhcmFtZXRlclBhcnQob3B0aW9uYWwpICcoJyBUeXBlU2lnbmF0dXJlcyAn
KScgcmV0dXJuX3R5cGVTaWduYXR1cmUgWydeJyBUeXBlU2lnbmF0dXJlIChvcHRpb25hbCldDQpA
QCAtNjQ0LDYgKzY2MCw4IEBAIHByaXZhdGUgTWV0aG9kQmluZGluZyBjcmVhdGVNZXRob2QoSUJp
bmFyeU1ldGhvZCBtZXRob2QsIGxvbmcgc291cmNlTGV2ZWwsIGNoYXJbDQogCQkJaXNBbm5vdGF0
aW9uVHlwZSgpID8gY29udmVydE1lbWJlclZhbHVlKG1ldGhvZC5nZXREZWZhdWx0VmFsdWUoKSwg
dGhpcy5lbnZpcm9ubWVudCwgbWlzc2luZ1R5cGVOYW1lcykgOiBudWxsLA0KIAkJCXRoaXMuZW52
aXJvbm1lbnQpOw0KIA0KKwlpZiAoYXJndW1lbnROYW1lcyAhPSBudWxsKSByZXN1bHQucGFyYW1l
dGVyTmFtZXMgPSBhcmd1bWVudE5hbWVzOw0KKwkNCiAJaWYgKHVzZTE1c3BlY2lmaWNzKQ0KIAkJ
cmVzdWx0LnRhZ0JpdHMgfD0gbWV0aG9kLmdldFRhZ0JpdHMoKTsNCiAJcmVzdWx0LnR5cGVWYXJp
YWJsZXMgPSB0eXBlVmFyczsNCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0JpbmRpbmcuamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9sb29rdXAvQmluZGluZy5qYXZhDQppbmRleCAyODRiNTgwLi4wOGEwZWQ4IDEw
MDY0NA0KLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CaW5kaW5nLmphdmENCisrKyBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29r
dXAvQmluZGluZy5qYXZhDQpAQCAtMTMsNiArMTMsOCBAQA0KICAqICAgICBJQk0gQ29ycG9yYXRp
b24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24NCiAgKiAgICAgU3RlcGhhbiBIZXJy
bWFubiAtIENvbnRyaWJ1dGlvbiBmb3INCiAgKgkJCQkJCQkJYnVnIDM2NTUzMSAtIFtjb21waWxl
cl1bbnVsbF0gaW52ZXN0aWdhdGUgYWx0ZXJuYXRpdmUgc3RyYXRlZ3kgZm9yIGludGVybmFsbHkg
ZW5jb2RpbmcgbnVsbG5lc3MgZGVmYXVsdHMNCisgKiAgICAgSmVzcGVyIFN0ZWVuIE1vbGxlciAt
IENvbnRyaWJ1dGlvbnMgZm9yDQorICoJCQkJCQkJCUJ1ZyA0MTIxNTAgWzEuOF0gW2NvbXBpbGVy
XSBFbmFibGUgcmVmbGVjdGVkIHBhcmFtZXRlciBuYW1lcyBkdXJpbmcgYW5ub3RhdGlvbiBwcm9j
ZXNzaW5nDQogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQogcGFja2FnZSBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwOw0KIA0KQEAgLTU1LDYgKzU3LDcgQEAgcHVibGlj
IGFic3RyYWN0IGNsYXNzIEJpbmRpbmcgew0KIAlwdWJsaWMgc3RhdGljIGZpbmFsIFR5cGVWYXJp
YWJsZUJpbmRpbmdbXSBOT19UWVBFX1ZBUklBQkxFUyA9IG5ldyBUeXBlVmFyaWFibGVCaW5kaW5n
WzBdOw0KIAlwdWJsaWMgc3RhdGljIGZpbmFsIEFubm90YXRpb25CaW5kaW5nW10gTk9fQU5OT1RB
VElPTlMgPSBuZXcgQW5ub3RhdGlvbkJpbmRpbmdbMF07DQogCXB1YmxpYyBzdGF0aWMgZmluYWwg
RWxlbWVudFZhbHVlUGFpcltdIE5PX0VMRU1FTlRfVkFMVUVfUEFJUlMgPSBuZXcgRWxlbWVudFZh
bHVlUGFpclswXTsNCisJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyW11bXSBOT19QQVJBTUVURVJf
TkFNRVMgPSBuZXcgY2hhclswXVtdOw0KIA0KIAlwdWJsaWMgc3RhdGljIGZpbmFsIEZpZWxkQmlu
ZGluZ1tdIFVOSU5JVElBTElaRURfRklFTERTID0gbmV3IEZpZWxkQmluZGluZ1swXTsNCiAJcHVi
bGljIHN0YXRpYyBmaW5hbCBNZXRob2RCaW5kaW5nW10gVU5JTklUSUFMSVpFRF9NRVRIT0RTID0g
bmV3IE1ldGhvZEJpbmRpbmdbMF07DQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RC
aW5kaW5nLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL01ldGhvZEJpbmRpbmcuamF2YQ0KaW5kZXggNWQx
YWEyNi4uNDUxMzQ3YyAxMDA2NDQNCi0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvTWV0aG9kQmluZGluZy5q
YXZhDQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL01ldGhvZEJpbmRpbmcuamF2YQ0KQEAgLTE5LDYgKzE5
LDggQEANCiAgKgkJCQkJCQkJYnVnIDM2NTUzMSAtIFtjb21waWxlcl1bbnVsbF0gaW52ZXN0aWdh
dGUgYWx0ZXJuYXRpdmUgc3RyYXRlZ3kgZm9yIGludGVybmFsbHkgZW5jb2RpbmcgbnVsbG5lc3Mg
ZGVmYXVsdHMNCiAgKgkJCQkJCQkJYnVnIDM4ODI4MSAtIFtjb21waWxlcl1bbnVsbF0gaW5oZXJp
dGFuY2Ugb2YgbnVsbCBhbm5vdGF0aW9ucyBhcyBhbiBvcHRpb24NCiAgKgkJCQkJCQkJQnVnIDM5
MjA5OSAtIFsxLjhdW2NvbXBpbGVyXVtudWxsXSBBcHBseSBudWxsIGFubm90YXRpb24gb24gdHlw
ZXMgZm9yIG51bGwgYW5hbHlzaXMNCisgKiAgICAgSmVzcGVyIFN0ZWVuIE1vbGxlciAtIENvbnRy
aWJ1dGlvbnMgZm9yDQorICoJCQkJCQkJCUJ1ZyA0MTIxNTAgWzEuOF0gW2NvbXBpbGVyXSBFbmFi
bGUgcmVmbGVjdGVkIHBhcmFtZXRlciBuYW1lcyBkdXJpbmcgYW5ub3RhdGlvbiBwcm9jZXNzaW5n
DQogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKiovDQogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIubG9va3VwOw0KIA0KQEAgLTUxLDYgKzUzLDkgQEAgcHVibGljIGNsYXNz
IE1ldGhvZEJpbmRpbmcgZXh0ZW5kcyBCaW5kaW5nIHsNCiAJLyoqIFN0b3JlIG51bGxuZXNzIGlu
Zm9ybWF0aW9uIGZyb20gYW5ub3RhdGlvbiAoaW5jbC4gYXBwbGljYWJsZSBkZWZhdWx0KS4gKi8N
CiAJcHVibGljIEJvb2xlYW5bXSBwYXJhbWV0ZXJOb25OdWxsbmVzczsgIC8vIFRSVUUgbWVhbnMg
QE5vbk51bGwgZGVjbGFyZWQsIEZBTFNFIG1lYW5zIEBOdWxsYWJsZSBkZWNsYXJlZCwgbnVsbCBt
ZWFucyBub3RoaW5nIGRlY2xhcmVkDQogDQorCS8qKiBTdG9yZSBwYXJhbWV0ZXIgbmFtZXMgZnJv
bSBNZXRob2RQYXJhbWV0ZXJzIGF0dHJpYnV0ZSAoaW5jbC4gYXBwbGljYWJsZSBkZWZhdWx0KS4g
Ki8NCisJcHVibGljIGNoYXJbXVtdIHBhcmFtZXRlck5hbWVzID0gQmluZGluZy5OT19QQVJBTUVU
RVJfTkFNRVM7DQorDQogcHJvdGVjdGVkIE1ldGhvZEJpbmRpbmcoKSB7DQogCS8vIGZvciBjcmVh
dGluZyBwcm9ibGVtIG9yIHN5bnRoZXRpYyBtZXRob2QNCiB9
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>234836</attachid>
            <date>2013-08-28 05:36:00 -0400</date>
            <delta_ts>2013-08-28 06:32:55 -0400</delta_ts>
            <desc>APT part of the patch</desc>
            <filename>file_412150.txt</filename>
            <type>text/plain</type>
            <size>27532</size>
            <attacher name="Jesper Moller">jesper</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3RzLy5jbGFzc3Bh
dGggYi9vcmcuZWNsaXBzZS5qZHQuYXB0LnBsdWdnYWJsZS50ZXN0cy8uY2xhc3NwYXRoDQppbmRl
eCAxMjFlNTI3Li4yMmYzMDY0IDEwMDY0NA0KLS0tIGEvb3JnLmVjbGlwc2UuamR0LmFwdC5wbHVn
Z2FibGUudGVzdHMvLmNsYXNzcGF0aA0KKysrIGIvb3JnLmVjbGlwc2UuamR0LmFwdC5wbHVnZ2Fi
bGUudGVzdHMvLmNsYXNzcGF0aA0KQEAgLTEsNyArMSw3IEBADQogPD94bWwgdmVyc2lvbj0iMS4w
IiBlbmNvZGluZz0iVVRGLTgiPz4NCiA8Y2xhc3NwYXRoPg0KIAk8Y2xhc3NwYXRoZW50cnkga2lu
ZD0ic3JjIiBwYXRoPSJzcmMiLz4NCi0JPGNsYXNzcGF0aGVudHJ5IGtpbmQ9ImNvbiIgcGF0aD0i
b3JnLmVjbGlwc2UuamR0LmxhdW5jaGluZy5KUkVfQ09OVEFJTkVSL29yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5kZWJ1Zy51aS5sYXVuY2hlci5TdGFuZGFyZFZNVHlwZS9KYXZhU0UtMS42Ii8+DQor
CTxjbGFzc3BhdGhlbnRyeSBraW5kPSJjb24iIHBhdGg9Im9yZy5lY2xpcHNlLmpkdC5sYXVuY2hp
bmcuSlJFX0NPTlRBSU5FUi9vcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuZGVidWcudWkubGF1bmNo
ZXIuU3RhbmRhcmRWTVR5cGUvSmF2YVNFLTEuOCIvPg0KIAk8Y2xhc3NwYXRoZW50cnkga2luZD0i
Y29uIiBwYXRoPSJvcmcuZWNsaXBzZS5wZGUuY29yZS5yZXF1aXJlZFBsdWdpbnMiLz4NCiAJPGNs
YXNzcGF0aGVudHJ5IGtpbmQ9Im91dHB1dCIgcGF0aD0iYmluIi8+DQogPC9jbGFzc3BhdGg+DQpk
aWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmFwdC5wbHVnZ2FibGUudGVzdHMvbGliL2Fubm90
YXRpb25zLmphciBiL29yZy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3RzL2xpYi9hbm5v
dGF0aW9ucy5qYXINCmluZGV4IDY5M2VlODE1NGQ4YzA4N2RkN2ZiMGUwODM0ZDNlNGIwYTg2ZDY1
YjguLjNiMmY5Mzk1OWI2OTcxZWJlOTU4ZmMyOWQyMjA5MjI4Mzc5YjY4M2UgMTAwNjQ0DQpHSVQg
YmluYXJ5IHBhdGNoDQpkZWx0YSA2NTYNCnpjbWRsZGBBPiF+ej8rI3hnbjxKSDR7P2gtUHZuYmJu
YWM+SV5TXj1WJjh7NW1qNjUoRUFlcVZRbkgpQitXTXBFNQ0KeiRnZ0t8ZndJMGMqRmFieDZfZUw7
aSVtWXVgVTBZOEN0Qy1qJmB1NjxYOWd0VCZNXjVzeEFFaTtPZFJ6VkF3YCsjDQp6PjhWOX0kdktJ
fCNpey0weV9nTEpqX3UhYWIjNDc+Z31xaDZkbzVtaGVoOFRgUGxXJDF4NmsoRTZHRD96UHlROzkN
Cnp0NmBBJG4mVm1eJGJZIXpQdWpFNyk2Y0t9JmQqUmpCVUQwQ0N1eCgpKjc5N2p0Wmw3M2JnJXE2
N2o+XjxxMC1Lag0Kek0qPkw/QTA/Z21CRDRMYF57KTVWUGV5OTVKYXB2MmxLT3x7WVVkQUxJPXlW
LXU4PHExN1Y8OT05Sn1LKTRQTUZ7DQp6U25TP1lCfj0hI3gtJnQoPGtaUH41Xzk7KGAjK3RVZCE3
NF9QZEBMckBRdlBFYj5AbVV8Sit9M2VlZTYkaSs/dj4NCno+I002PlE+cEU5QCVnPlc+JT9yJlNf
Qm1RVXwoU3FXTz9ZTGQ0TS1OMmZ6TyY/clhwPkZsU183Mj1IY1A1QDclWg0KekpzVHdLQ3I1RVFm
eH5PXjA/c3JEIT02V0t2ST57azxiRUZNJHB1X281SjRfM0RXKklvVkJpQHxVZGJwbklnZzc2DQp6
QjM9ZystQCooSFI4ZiQpMHd9XmJfc0cydjJITGpfaTB6VFdwTWx7STMpbTBgWmZTQENAIVYzM0hJ
dkB+QlZ7ZU8NCno1P0pyKXNQOzw9S3olMkcqYllWU0s2YXA5OXxjZ1BCNzRkbU1VZlhMKUhOSWBz
OEpsPyZCX0srJHE5cyluSGQ8Uw0KSGEpRWROQzAqNjcNCg0KZGVsdGEgMzk1DQp6Y21ldy12cm0j
UXo/KyN4Z248SkhBRj53TVBVTVNhUUNzQ3xKMkMkb25CSDgmPGlyU09PfEReYm1eXl87WV9iSCkN
CnpKQlNuKVlZbWRyRFlrelE7V08rVmo0VWdGV15LLTdXTXx9S1dEO1JPbV9LPGJtbE1SZSpJYTIz
I3lNYE8kQCQhNw0KemxqVjM2NmhLenJWQmc3a2dASio9bCN6a0s0TS0hdkxaLT11Kyh0bDBEMWpB
bj92WjtUM3s8b1hpMHUpb2ZVSzl5DQp6VjEtXyt7NWs+TjJuVD5uem13fHhfIzlBKUNXaCZtdFlB
JjIqdSpDOTxLX1h8YTV9Mn1rXilmUzJfVXZadjAqaEUNCnZTVFBSPUFCcWhpWntMMkFgKUMkV0Bn
KlNrTSR1JT4wbzNGIyFwYTVgMSUtR1ZHWHNNY0N4ezBDdz8wKCENCg0KZGlmZiAtLWdpdCBhL29y
Zy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3RzL3BsdWdpbi54bWwgYi9vcmcuZWNsaXBz
ZS5qZHQuYXB0LnBsdWdnYWJsZS50ZXN0cy9wbHVnaW4ueG1sDQppbmRleCBjZDUyMWRlLi5jMGY3
ZmQyIDEwMDY0NA0KLS0tIGEvb3JnLmVjbGlwc2UuamR0LmFwdC5wbHVnZ2FibGUudGVzdHMvcGx1
Z2luLnhtbA0KKysrIGIvb3JnLmVjbGlwc2UuamR0LmFwdC5wbHVnZ2FibGUudGVzdHMvcGx1Z2lu
LnhtbA0KQEAgLTM0LDYgKzM0LDkgQEANCiAgICAgICAgICA8amF2YTZwcm9jZXNzb3INCiAgICAg
ICAgICAgICAgICBjbGFzcz0ib3JnLmVjbGlwc2UuamR0LmFwdC5wbHVnZ2FibGUudGVzdHMucHJv
Y2Vzc29ycy5tb2RlbHRlc3Rlci5Nb2RlbFRlc3RlclByb2MiPg0KICAgICAgICAgIDwvamF2YTZw
cm9jZXNzb3I+DQorICAgICAgICAgPGphdmE2cHJvY2Vzc29yDQorICAgICAgICAgICAgICAgY2xh
c3M9Im9yZy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3RzLnByb2Nlc3NvcnMubW9kZWx0
ZXN0ZXIuTW9kZWxUZXN0ZXI4UHJvYyI+DQorICAgICAgICAgPC9qYXZhNnByb2Nlc3Nvcj4NCiAg
ICAgICA8L2phdmE2cHJvY2Vzc29ycz4NCiAgICA8L2V4dGVuc2lvbj4NCiA8L3BsdWdpbj4NCmRp
ZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuYXB0LnBsdWdnYWJsZS50ZXN0cy9zcmMvb3JnL2Vj
bGlwc2UvamR0L2FwdC9wbHVnZ2FibGUvdGVzdHMvTW9kZWxUZXN0cy5qYXZhIGIvb3JnLmVjbGlw
c2UuamR0LmFwdC5wbHVnZ2FibGUudGVzdHMvc3JjL29yZy9lY2xpcHNlL2pkdC9hcHQvcGx1Z2dh
YmxlL3Rlc3RzL01vZGVsVGVzdHMuamF2YQ0KaW5kZXggOThjMjBlNi4uN2ZlYzExNCAxMDA2NDQN
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3RzL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvYXB0L3BsdWdnYWJsZS90ZXN0cy9Nb2RlbFRlc3RzLmphdmENCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3RzL3NyYy9vcmcvZWNsaXBzZS9qZHQvYXB0L3BsdWdn
YWJsZS90ZXN0cy9Nb2RlbFRlc3RzLmphdmENCkBAIC0xNCwxMSArMTQsMTcgQEAgcGFja2FnZSBv
cmcuZWNsaXBzZS5qZHQuYXB0LnBsdWdnYWJsZS50ZXN0czsNCiBpbXBvcnQganVuaXQuZnJhbWV3
b3JrLlRlc3Q7DQogaW1wb3J0IGp1bml0LmZyYW1ld29yay5UZXN0U3VpdGU7DQogDQoraW1wb3J0
IG9yZy5lY2xpcHNlLmNvcmUucmVzb3VyY2VzLklGaWxlOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5j
b3JlLnJlc291cmNlcy5JRm9sZGVyOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJlc291cmNl
cy5JUHJvamVjdDsNCitpbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLkNvcmVFeGNlcHRp
b247DQogaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5JUGF0aDsNCitpbXBvcnQgb3Jn
LmVjbGlwc2UuY29yZS5ydW50aW1lLk51bGxQcm9ncmVzc01vbml0b3I7DQogaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5hcHQuY29yZS51dGlsLkFwdENvbmZpZzsNCitpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmFwdC5wbHVnZ2FibGUudGVzdHMucHJvY2Vzc29ycy5tb2RlbHRlc3Rlci5Nb2RlbFRlc3Rl
cjhQcm9jOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuYXB0LnBsdWdnYWJsZS50ZXN0cy5wcm9j
ZXNzb3JzLm1vZGVsdGVzdGVyLk1vZGVsVGVzdGVyUHJvYzsNCiBpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmNvcmUuSUphdmFQcm9qZWN0Ow0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuaW1wbC5Db21waWxlck9wdGlvbnM7DQogDQogLyoqDQogICogQmFzaWMgdGVzdHMg
Zm9yIHRoZSB0eXBlc3lzdGVtIG1vZGVsIGludGVyZmFjZXMgaW4gdGhlIElERS4NCkBAIC04MSw0
ICs4Nyw2NSBAQCBwdWJsaWMgY2xhc3MgTW9kZWxUZXN0cyBleHRlbmRzIFRlc3RCYXNlDQogCQlh
c3NlcnRUcnVlKCJQcm9jZXNzb3IgZGlkIG5vdCBydW4iLCBQcm9jZXNzb3JUZXN0U3RhdHVzLnBy
b2Nlc3NvclJhbigpKTsNCiAJCWFzc2VydEVxdWFscygiUHJvY2Vzc29yIHJlcG9ydGVkIGVycm9y
cyIsIFByb2Nlc3NvclRlc3RTdGF0dXMuTk9fRVJST1JTLCBQcm9jZXNzb3JUZXN0U3RhdHVzLmdl
dEVycm9ycygpKTsNCiAJfQkNCisNCisJLyoqDQorCSAqIENhbGwgTW9kZWxUZXN0ZXI4UHJvYy50
ZXN0TWV0aG9kUGFyYW1ldGVycygpLCB3aGljaCBjaGVja3MgdGhlIHR5cGUgb2YgYSBtZXRob2QN
CisJICovDQorCUBTdXBwcmVzc1dhcm5pbmdzKCJyZXN0cmljdGlvbiIpDQorCXB1YmxpYyB2b2lk
IHRlc3RNZXRob2RQYXJhbWV0ZXJzKCkgdGhyb3dzIFRocm93YWJsZSB7DQorCQlQcm9jZXNzb3JU
ZXN0U3RhdHVzLnJlc2V0KCk7DQorCQlJSmF2YVByb2plY3QganByb2ogPSBjcmVhdGVKYXZhOFBy
b2plY3QoX3Byb2plY3ROYW1lKTsNCisJCWpwcm9qLnNldE9wdGlvbihDb21waWxlck9wdGlvbnMu
T1BUSU9OX0xvY2FsVmFyaWFibGVBdHRyaWJ1dGUsIENvbXBpbGVyT3B0aW9ucy5ET19OT1RfR0VO
RVJBVEUpOw0KKwkJanByb2ouc2V0T3B0aW9uKENvbXBpbGVyT3B0aW9ucy5PUFRJT05fTWV0aG9k
UGFyYW1ldGVyc0F0dHJpYnV0ZSwgQ29tcGlsZXJPcHRpb25zLkdFTkVSQVRFKTsNCisJCWRpc2Fi
bGVKYXZhNUZhY3RvcmllcyhqcHJvaik7DQorCQlJUHJvamVjdCBwcm9qID0ganByb2ouZ2V0UHJv
amVjdCgpOw0KKwkJSVBhdGggcHJvalBhdGggPSBwcm9qLmdldEZ1bGxQYXRoKCk7DQorDQorCQll
bnYuYWRkQ2xhc3MocHJvalBhdGguYXBwZW5kKCJzcmMiKSwgDQorCQkJCU1vZGVsVGVzdGVyOFBy
b2MuVEVTVF9NRVRIT0RfUEFSQU1FVEVSU19UWVBFMV9QS0csDQorCQkJCU1vZGVsVGVzdGVyOFBy
b2MuVEVTVF9NRVRIT0RfUEFSQU1FVEVSU19UWVBFMV9DTEFTUywNCisJCQkJTW9kZWxUZXN0ZXI4
UHJvYy5URVNUX01FVEhPRF9QQVJBTUVURVJTX1RZUEUxX1NPVVJDRSk7DQorCQllbnYuYWRkQ2xh
c3MocHJvalBhdGguYXBwZW5kKCJzcmMiKSwgDQorCQkJCU1vZGVsVGVzdGVyOFByb2MuVEVTVF9N
RVRIT0RfUEFSQU1FVEVSU19UWVBFMl9QS0csDQorCQkJCU1vZGVsVGVzdGVyOFByb2MuVEVTVF9N
RVRIT0RfUEFSQU1FVEVSU19UWVBFMl9DTEFTUywNCisJCQkJTW9kZWxUZXN0ZXI4UHJvYy5URVNU
X01FVEhPRF9QQVJBTUVURVJTX1RZUEUyX1NPVVJDRSk7DQorCQlmdWxsQnVpbGQoKTsNCisJCWV4
cGVjdGluZ05vUHJvYmxlbXMoKTsNCisJCWFzc2VydEZhbHNlKCJQcm9jZXNzb3IgcmFuIHRvbyBl
YXJseSIsIFByb2Nlc3NvclRlc3RTdGF0dXMucHJvY2Vzc29yUmFuKCkpOw0KKw0KKwkJa2VlcEJp
bmFyeU9ubHkoanByb2osDQorCQkJCU1vZGVsVGVzdGVyOFByb2MuVEVTVF9NRVRIT0RfUEFSQU1F
VEVSU19UWVBFMV9QS0csDQorCQkJCU1vZGVsVGVzdGVyOFByb2MuVEVTVF9NRVRIT0RfUEFSQU1F
VEVSU19UWVBFMV9DTEFTUyk7DQorDQorCQlrZWVwQmluYXJ5T25seShqcHJvaiwNCisJCQkJTW9k
ZWxUZXN0ZXI4UHJvYy5URVNUX01FVEhPRF9QQVJBTUVURVJTX1RZUEUyX1BLRywNCisJCQkJTW9k
ZWxUZXN0ZXI4UHJvYy5URVNUX01FVEhPRF9QQVJBTUVURVJTX1RZUEUyX0NMQVNTKTsNCisNCisJ
CWZ1bGxCdWlsZCgpOw0KKw0KKwkJZW52LmFkZENsYXNzKHByb2pQYXRoLmFwcGVuZCgic3JjIiks
IA0KKwkJCQlNb2RlbFRlc3RlcjhQcm9jLlRFU1RfTUVUSE9EX1BBUkFNRVRFUlNfVFlQRTNfUEtH
LA0KKwkJCQlNb2RlbFRlc3RlcjhQcm9jLlRFU1RfTUVUSE9EX1BBUkFNRVRFUlNfVFlQRTNfQ0xB
U1MsDQorCQkJCU1vZGVsVGVzdGVyOFByb2MuVEVTVF9NRVRIT0RfUEFSQU1FVEVSU19UWVBFM19T
T1VSQ0UpOw0KKwkJDQorCQlBcHRDb25maWcuc2V0RW5hYmxlZChqcHJvaiwgdHJ1ZSk7DQorCQkN
CisJCWZ1bGxCdWlsZCgpOw0KKwkJZXhwZWN0aW5nTm9Qcm9ibGVtcygpOw0KKwkJYXNzZXJ0VHJ1
ZSgiUHJvY2Vzc29yIGRpZCBub3QgcnVuIiwgUHJvY2Vzc29yVGVzdFN0YXR1cy5wcm9jZXNzb3JS
YW4oKSk7DQorCQlhc3NlcnRFcXVhbHMoIlByb2Nlc3NvciByZXBvcnRlZCBlcnJvcnMiLCBQcm9j
ZXNzb3JUZXN0U3RhdHVzLk5PX0VSUk9SUywgUHJvY2Vzc29yVGVzdFN0YXR1cy5nZXRFcnJvcnMo
KSk7DQorCX0NCisNCisJcHJpdmF0ZSB2b2lkIGtlZXBCaW5hcnlPbmx5KElKYXZhUHJvamVjdCBq
cHJvaiwgU3RyaW5nIHBhY2thZ2VOYW1lLCBTdHJpbmcgY2xhc3NOYW1lKSB0aHJvd3MgQ29yZUV4
Y2VwdGlvbiB7DQorCQlJRmlsZSByZWFsU291cmNlRmlsZSA9IGpwcm9qLmdldFByb2plY3QoKS5n
ZXRGb2xkZXIoInNyYyIpLmdldEZvbGRlcihwYWNrYWdlTmFtZSkuZ2V0RmlsZShjbGFzc05hbWUg
KyAiLmphdmEiKTsNCisJCUlGaWxlIGNvbXBpbGVkQ2xhc3NGaWxlID0ganByb2ouZ2V0UHJvamVj
dCgpLmdldEZvbGRlcigiYmluIikuZ2V0Rm9sZGVyKHBhY2thZ2VOYW1lKS5nZXRGaWxlKGNsYXNz
TmFtZSArICIuY2xhc3MiKTsNCisJCWFzc2VydFRydWUoIk5vIGNvbXBpbGVkIGNsYXNzIGZvciAi
ICsgcGFja2FnZU5hbWUgKyAiLiIgKyBjbGFzc05hbWUgKyAiOiAiLGNvbXBpbGVkQ2xhc3NGaWxl
LmV4aXN0cygpKTsNCisJCUlGaWxlIHByZWJ1aWx0Q2xhc3NGaWxlID0ganByb2ouZ2V0UHJvamVj
dCgpLmdldEZvbGRlcigicHJlYnVpbHQiKS5nZXRGb2xkZXIocGFja2FnZU5hbWUpLmdldEZpbGUo
Y2xhc3NOYW1lICsgIi5jbGFzcyIpOw0KKwkJYXNzZXJ0RmFsc2UoIkNvbXBpbGVkIGNsYXNzIGFs
cmVhZHkgaW4gc3JjOiAiLHByZWJ1aWx0Q2xhc3NGaWxlLmV4aXN0cygpKTsNCisJCWNvbXBpbGVk
Q2xhc3NGaWxlLmNvcHkocHJlYnVpbHRDbGFzc0ZpbGUuZ2V0RnVsbFBhdGgoKSwgdHJ1ZSwgbmV3
IE51bGxQcm9ncmVzc01vbml0b3IoKSk7DQorCQlhc3NlcnRUcnVlKCJDb21waWxlZCBjbGFzcyBu
b3QgY29waWVkIHRvIHNyYyIscHJlYnVpbHRDbGFzc0ZpbGUuZXhpc3RzKCkpOw0KKwkJcmVhbFNv
dXJjZUZpbGUuZGVsZXRlKHRydWUsIG5ldyBOdWxsUHJvZ3Jlc3NNb25pdG9yKCkpOw0KKwkJYXNz
ZXJ0RmFsc2UoIlN0aWxsIHNvdXJjZT86ICIsIHJlYWxTb3VyY2VGaWxlLmV4aXN0cygpKTsNCisJ
fQ0KKw0KIH0NCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuYXB0LnBsdWdnYWJsZS50ZXN0
cy9zcmMvb3JnL2VjbGlwc2UvamR0L2FwdC9wbHVnZ2FibGUvdGVzdHMvVGVzdEJhc2UuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3RzL3NyYy9vcmcvZWNsaXBzZS9qZHQv
YXB0L3BsdWdnYWJsZS90ZXN0cy9UZXN0QmFzZS5qYXZhDQppbmRleCA5OTc4OWEwLi4yZjNmYTM2
IDEwMDY0NA0KLS0tIGEvb3JnLmVjbGlwc2UuamR0LmFwdC5wbHVnZ2FibGUudGVzdHMvc3JjL29y
Zy9lY2xpcHNlL2pkdC9hcHQvcGx1Z2dhYmxlL3Rlc3RzL1Rlc3RCYXNlLmphdmENCisrKyBiL29y
Zy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3RzL3NyYy9vcmcvZWNsaXBzZS9qZHQvYXB0
L3BsdWdnYWJsZS90ZXN0cy9UZXN0QmFzZS5qYXZhDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwNywgMjAwOCBCRUEgU3lzdGVt
cywgSW5jLiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwNywgMjAxMyBCRUEgU3lz
dGVtcywgSW5jLiBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJv
Z3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFi
bGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAg
KiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBh
dA0KQEAgLTcsNiArNyw3IEBADQogICogDQogICogQ29udHJpYnV0b3JzOg0KICAqICAgICBCRUEg
U3lzdGVtcywgSW5jLiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbg0KKyAqICAgIEpl
c3BlciBTdGVlbiBNb2xsZXIgLSBCdWcgNDEyMTUwIFsxLjhdIFtjb21waWxlcl0gRW5hYmxlIHJl
ZmxlY3RlZCBwYXJhbWV0ZXIgbmFtZXMgZHVyaW5nIGFubm90YXRpb24gcHJvY2Vzc2luZw0KICAq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqLw0KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmFwdC5wbHVn
Z2FibGUudGVzdHM7DQogDQpAQCAtMTksNiArMjAsNyBAQCBpbXBvcnQgb3JnLmVjbGlwc2UuY29y
ZS5yZXNvdXJjZXMuSUZpbGU7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucmVzb3VyY2VzLklQ
cm9qZWN0Ow0KIGltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuQ29yZUV4Y2VwdGlvbjsN
CiBpbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLklQYXRoOw0KK2ltcG9ydCBvcmcuZWNs
aXBzZS5jb3JlLnJ1bnRpbWUuUGF0aDsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmFwdC5jb3Jl
LmludGVybmFsLnV0aWwuRmFjdG9yeUNvbnRhaW5lcjsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmFwdC5jb3JlLmludGVybmFsLnV0aWwuRmFjdG9yeVBhdGg7DQogaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5hcHQuY29yZS5pbnRlcm5hbC51dGlsLkZhY3RvcnlDb250YWluZXIuRmFjdG9yeVR5cGU7
DQpAQCAtMzEsNiArMzMsNyBAQCBwdWJsaWMgY2xhc3MgVGVzdEJhc2UgZXh0ZW5kcyBCdWlsZGVy
VGVzdHMNCiB7DQogDQogCXByb3RlY3RlZCBzdGF0aWMgZmluYWwgU3RyaW5nIEpBVkFfMTZfQ09N
UExJQU5DRSA9ICIxLjYiOw0KKwlwcm90ZWN0ZWQgc3RhdGljIGZpbmFsIFN0cmluZyBKQVZBXzE4
X0NPTVBMSUFOQ0UgPSAiMS44IjsNCiAJDQogCXByb3RlY3RlZCBTdHJpbmcgX3Byb2plY3ROYW1l
Ow0KIAlwcm90ZWN0ZWQgc3RhdGljIGludCBfcHJvamVjdFNlcmlhbCA9IDA7IC8vIHVzZWQgdG8g
Y3JlYXRlIHVuaXF1ZSBwcm9qZWN0IG5hbWVzLCB0byBhdm9pZCByZXNvdXJjZSBkZWxldGlvbiBw
cm9ibGVtcw0KQEAgLTgxLDYgKzg0LDMyIEBAIHB1YmxpYyBjbGFzcyBUZXN0QmFzZSBleHRlbmRz
IEJ1aWxkZXJUZXN0cw0KIAkJYWRkQW5ub3RhdGlvbkphcihqYXZhUHJvaik7DQogCQlyZXR1cm4g
amF2YVByb2o7DQogCX0NCisNCisJLyoqDQorCSAqIENyZWF0ZSBhIGphdmEgcHJvamVjdCB3aXRo
IGphdmEgbGlicmFyaWVzIGFuZCB0ZXN0IGFubm90YXRpb25zIG9uIGNsYXNzcGF0aA0KKwkgKiAo
Y29tcGlsZXIgbGV2ZWwgaXMgMS44KS4gVXNlICJzcmMiIGFzIHNvdXJjZSBmb2xkZXIgYW5kICJi
aW4iIGFzIG91dHB1dCBmb2xkZXIuIEFQVA0KKwkgKiBpcyBub3QgZW5hYmxlZC4NCisJICogDQor
CSAqIEBwYXJhbSBwcm9qZWN0TmFtZQ0KKwkgKiBAcmV0dXJuIGEgamF2YSBwcm9qZWN0IHRoYXQg
aGFzIGJlZW4gYWRkZWQgdG8gdGhlIGN1cnJlbnQgd29ya3NwYWNlLg0KKwkgKiBAdGhyb3dzIEV4
Y2VwdGlvbg0KKwkgKi8NCisJcHJvdGVjdGVkIHN0YXRpYyBJSmF2YVByb2plY3QgY3JlYXRlSmF2
YThQcm9qZWN0KGZpbmFsIFN0cmluZyBwcm9qZWN0TmFtZSkgdGhyb3dzIEV4Y2VwdGlvbg0KKwl7
DQorCQlJUGF0aCBwcm9qZWN0UGF0aCA9IGVudi5hZGRQcm9qZWN0KHByb2plY3ROYW1lLCBKQVZB
XzE4X0NPTVBMSUFOQ0UpOw0KKwkJZW52LmFkZEV4dGVybmFsSmFycyhwcm9qZWN0UGF0aCwgVXRp
bC5nZXRKYXZhQ2xhc3NMaWJzKCkpOw0KKwkJDQorCQkvLyByZW1vdmUgb2xkIHBhY2thZ2UgZnJh
Z21lbnQgcm9vdCBzbyB0aGF0IG5hbWVzIGRvbid0IGNvbGxpZGUNCisJCWVudi5yZW1vdmVQYWNr
YWdlRnJhZ21lbnRSb290KHByb2plY3RQYXRoLCAiIik7IC8vJE5PTi1OTFMtMSQNCisJCWVudi5h
ZGRQYWNrYWdlRnJhZ21lbnRSb290KHByb2plY3RQYXRoLCAic3JjIik7IC8vJE5PTi1OTFMtMSQN
CisJCWVudi5zZXRPdXRwdXRGb2xkZXIocHJvamVjdFBhdGgsICJiaW4iKTsgLy8kTk9OLU5MUy0x
JA0KKwkJZmluYWwgSUphdmFQcm9qZWN0IGphdmFQcm9qID0gZW52LmdldEphdmFQcm9qZWN0KHBy
b2plY3RQYXRoKTsNCisJCWphdmFQcm9qLmdldFByb2plY3QoKS5nZXRGb2xkZXIoInByZWJ1aWx0
IikuY3JlYXRlKHRydWUsIHRydWUsIG51bGwpOw0KKwkJamF2YVByb2ouZ2V0UHJvamVjdCgpLmdl
dEZvbGRlcigicHJlYnVpbHQiKS5nZXRGb2xkZXIoInAiKS5jcmVhdGUodHJ1ZSwgdHJ1ZSwgbnVs
bCk7DQorCQllbnYuYWRkQ2xhc3NGb2xkZXIocHJvamVjdFBhdGgsIHByb2plY3RQYXRoLmFwcGVu
ZCgicHJlYnVpbHQiKSwgdHJ1ZSk7DQorCQlhZGRBbm5vdGF0aW9uSmFyKGphdmFQcm9qKTsNCisJ
CXJldHVybiBqYXZhUHJvajsNCisJfQ0KIAkNCiAJLyoqDQogCSAqIEVuc3VyZSB0aGF0IHRoZXJl
IGFyZSBubyBKYXZhIDUgcHJvY2Vzc29ycyBvbiB0aGUgZmFjdG9yeSBwYXRoLCBhcyB0aGV5IGNh
biBjYXVzZQ0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3Rz
L3NyYy9vcmcvZWNsaXBzZS9qZHQvYXB0L3BsdWdnYWJsZS90ZXN0cy9hbm5vdGF0aW9ucy9Nb2Rl
bFRlc3Q4VHJpZ2dlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmFwdC5wbHVnZ2FibGUudGVzdHMv
c3JjL29yZy9lY2xpcHNlL2pkdC9hcHQvcGx1Z2dhYmxlL3Rlc3RzL2Fubm90YXRpb25zL01vZGVs
VGVzdDhUcmlnZ2VyLmphdmENCm5ldyBmaWxlIG1vZGUgMTAwNjQ0DQppbmRleCAwMDAwMDAwLi40
MjZkNTk1DQotLS0gL2Rldi9udWxsDQorKysgYi9vcmcuZWNsaXBzZS5qZHQuYXB0LnBsdWdnYWJs
ZS50ZXN0cy9zcmMvb3JnL2VjbGlwc2UvamR0L2FwdC9wbHVnZ2FibGUvdGVzdHMvYW5ub3RhdGlv
bnMvTW9kZWxUZXN0OFRyaWdnZXIuamF2YQ0KQEAgLTAsMCArMSwyOCBAQA0KKy8qKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqDQorICogQ29weXJpZ2h0IChjKSAyMDEzIEplc3BlciBTdGVlbiBNb2xsZXIg
YW5kIG90aGVycy4gIA0KKyAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQg
dGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCisgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIg
dGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCisgKiB3aGljaCBh
Y2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KKyAqIGh0
dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sDQorICoNCisgKiBDb250cmli
dXRvcnM6DQorICogICAgSmVzcGVyIFN0ZWVuIE1vbGxlciAtIGluaXRpYWwgQVBJIGFuZCBpbXBs
ZW1lbnRhdGlvbg0KKyAqICAgIA0KKyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KKw0KK3BhY2th
Z2Ugb3JnLmVjbGlwc2UuamR0LmFwdC5wbHVnZ2FibGUudGVzdHMuYW5ub3RhdGlvbnM7DQorDQor
LyoqDQorICogDQorICogQHNpbmNlIDMuNQ0KKyAqLw0KK3B1YmxpYyBAaW50ZXJmYWNlIE1vZGVs
VGVzdDhUcmlnZ2VyIHsNCisJLyoqIE5hbWUgb2YgdGVzdCBtZXRob2QgdG8gcnVuICovDQorCVN0
cmluZyB0ZXN0KCk7DQorCQ0KKwkvKiogQXJiaXRyYXJ5IGFyZ3VtZW50ICovDQorCVN0cmluZyBh
cmcwKCkgZGVmYXVsdCAiIjsNCisNCisJLyoqIEFyYml0cmFyeSBhcmd1bWVudCAqLw0KKwlTdHJp
bmcgYXJnMSgpIGRlZmF1bHQgIiI7DQorfQ0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5h
cHQucGx1Z2dhYmxlLnRlc3RzL3NyYy9vcmcvZWNsaXBzZS9qZHQvYXB0L3BsdWdnYWJsZS90ZXN0
cy9wcm9jZXNzb3JzL21vZGVsdGVzdGVyL01vZGVsVGVzdGVyOFByb2MuamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3RzL3NyYy9vcmcvZWNsaXBzZS9qZHQvYXB0L3BsdWdn
YWJsZS90ZXN0cy9wcm9jZXNzb3JzL21vZGVsdGVzdGVyL01vZGVsVGVzdGVyOFByb2MuamF2YQ0K
bmV3IGZpbGUgbW9kZSAxMDA2NDQNCmluZGV4IDAwMDAwMDAuLmY2MTI2MjYNCi0tLSAvZGV2L251
bGwNCisrKyBiL29yZy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3RzL3NyYy9vcmcvZWNs
aXBzZS9qZHQvYXB0L3BsdWdnYWJsZS90ZXN0cy9wcm9jZXNzb3JzL21vZGVsdGVzdGVyL01vZGVs
VGVzdGVyOFByb2MuamF2YQ0KQEAgLTAsMCArMSwyNTMgQEANCisvKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKg0KKyAqIENvcHlyaWdodCAoYykgMjAxMyBKZXNwZXIgU3RlZW4gTW9sbGVyIGFuZCBvdGhl
cnMuICANCisgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2Nv
bXBhbnlpbmcgbWF0ZXJpYWxzDQorICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJt
cyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQorICogd2hpY2ggYWNjb21wYW5p
ZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCisgKiBodHRwOi8vd3d3
LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbA0KKyAqDQorICogQ29udHJpYnV0b3JzOg0K
KyAqICAgIEplc3BlciBTdGVlbiBNb2xsZXIgLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRp
b24NCisgKiAgICANCisgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCisNCitwYWNrYWdlIG9yZy5l
Y2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3RzLnByb2Nlc3NvcnMubW9kZWx0ZXN0ZXI7DQor
DQoraW1wb3J0IGphdmEubGFuZy5yZWZsZWN0Lkludm9jYXRpb25UYXJnZXRFeGNlcHRpb247DQor
aW1wb3J0IGphdmEubGFuZy5yZWZsZWN0Lk1ldGhvZDsNCitpbXBvcnQgamF2YS51dGlsLkhhc2hN
YXA7DQoraW1wb3J0IGphdmEudXRpbC5MaW5rZWRMaXN0Ow0KK2ltcG9ydCBqYXZhLnV0aWwuTGlz
dDsNCitpbXBvcnQgamF2YS51dGlsLk1hcDsNCitpbXBvcnQgamF2YS51dGlsLlNldDsNCisNCitp
bXBvcnQgamF2YXguYW5ub3RhdGlvbi5wcm9jZXNzaW5nLkFic3RyYWN0UHJvY2Vzc29yOw0KK2lt
cG9ydCBqYXZheC5hbm5vdGF0aW9uLnByb2Nlc3NpbmcuUHJvY2Vzc2luZ0Vudmlyb25tZW50Ow0K
K2ltcG9ydCBqYXZheC5hbm5vdGF0aW9uLnByb2Nlc3NpbmcuUm91bmRFbnZpcm9ubWVudDsNCitp
bXBvcnQgamF2YXguYW5ub3RhdGlvbi5wcm9jZXNzaW5nLlN1cHBvcnRlZEFubm90YXRpb25UeXBl
czsNCitpbXBvcnQgamF2YXguYW5ub3RhdGlvbi5wcm9jZXNzaW5nLlN1cHBvcnRlZE9wdGlvbnM7
DQoraW1wb3J0IGphdmF4LmFubm90YXRpb24ucHJvY2Vzc2luZy5TdXBwb3J0ZWRTb3VyY2VWZXJz
aW9uOw0KK2ltcG9ydCBqYXZheC5sYW5nLm1vZGVsLlNvdXJjZVZlcnNpb247DQoraW1wb3J0IGph
dmF4LmxhbmcubW9kZWwuZWxlbWVudC5FbGVtZW50Ow0KK2ltcG9ydCBqYXZheC5sYW5nLm1vZGVs
LmVsZW1lbnQuRWxlbWVudEtpbmQ7DQoraW1wb3J0IGphdmF4LmxhbmcubW9kZWwuZWxlbWVudC5F
eGVjdXRhYmxlRWxlbWVudDsNCitpbXBvcnQgamF2YXgubGFuZy5tb2RlbC5lbGVtZW50LlR5cGVF
bGVtZW50Ow0KK2ltcG9ydCBqYXZheC5sYW5nLm1vZGVsLmVsZW1lbnQuVmFyaWFibGVFbGVtZW50
Ow0KK2ltcG9ydCBqYXZheC5sYW5nLm1vZGVsLnR5cGUuRGVjbGFyZWRUeXBlOw0KK2ltcG9ydCBq
YXZheC5sYW5nLm1vZGVsLnR5cGUuVHlwZUtpbmQ7DQoraW1wb3J0IGphdmF4LmxhbmcubW9kZWwu
dHlwZS5UeXBlTWlycm9yOw0KK2ltcG9ydCBqYXZheC5sYW5nLm1vZGVsLnV0aWwuRWxlbWVudEZp
bHRlcjsNCisNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmFwdC5wbHVnZ2FibGUudGVzdHMuUHJv
Y2Vzc29yVGVzdFN0YXR1czsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmFwdC5wbHVnZ2FibGUu
dGVzdHMuYW5ub3RhdGlvbnMuTG9va0F0Ow0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuYXB0LnBs
dWdnYWJsZS50ZXN0cy5hbm5vdGF0aW9ucy5Nb2RlbFRlc3Q4VHJpZ2dlcjsNCisNCisvKioNCisg
KiBUaGlzIHByb2Nlc3NvciB0ZXN0cyBmZWF0dXJlcyBzcGVjaWZpYyB0byBKRVAgMTE4Lg0KKyAq
IE9uZSBwcm9jZXNzb3IgY2FuIHJ1biBtYW55IHRlc3RzLiBUaGUgSlVuaXQgdGVzdHMgc3BlY2lm
eSB3aGljaCB0ZXN0IHRvIHJ1biBieSBwYXNzaW5nIGl0cyBuYW1lIGluIHRvIHRoZQ0KKyAqIE1v
ZGVsVGVzdDhUcmlnZ2VyIGFubm90YXRpb24uDQorICogDQorICogQHNpbmNlIDMuOSBCRVRBX0pB
VkE4DQorICovDQorQFN1cHBvcnRlZEFubm90YXRpb25UeXBlcyggeyAib3JnLmVjbGlwc2UuamR0
LmFwdC5wbHVnZ2FibGUudGVzdHMuYW5ub3RhdGlvbnMuTW9kZWxUZXN0OFRyaWdnZXIiIH0pDQor
QFN1cHBvcnRlZFNvdXJjZVZlcnNpb24oU291cmNlVmVyc2lvbi5SRUxFQVNFXzgpDQorQFN1cHBv
cnRlZE9wdGlvbnMoIHt9KQ0KK3B1YmxpYyBjbGFzcyBNb2RlbFRlc3RlcjhQcm9jIGV4dGVuZHMg
QWJzdHJhY3RQcm9jZXNzb3Igew0KKwlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBURVNUX01F
VEhPRF9QQVJBTUVURVJTX1RZUEUxX1BLRyA9ICJwIjsNCisJcHVibGljIHN0YXRpYyBmaW5hbCBT
dHJpbmcgVEVTVF9NRVRIT0RfUEFSQU1FVEVSU19UWVBFMV9DTEFTUyA9ICJCYXIiOw0KKwlwdWJs
aWMgc3RhdGljIGZpbmFsIFN0cmluZyBURVNUX01FVEhPRF9QQVJBTUVURVJTX1RZUEUxX1NPVVJD
RSA9DQorCQkJInBhY2thZ2UgcDtcbiIgKw0KKwkJCQkJInB1YmxpYyBjbGFzcyBCYXIge1xuIiAr
DQorCQkJCQkiICAgIHB1YmxpYyB2b2lkIG90aGVyU3R1ZmYoZmluYWwgZG91YmxlIGZ1biwgU3Ry
aW5nIGJlYW5zKSB7IH1cbiIgKw0KKwkJCQkJIn0iOw0KKwkNCisJcHVibGljIHN0YXRpYyBmaW5h
bCBTdHJpbmcgVEVTVF9NRVRIT0RfUEFSQU1FVEVSU19UWVBFMl9QS0cgPSAicCI7DQorCXB1Ymxp
YyBzdGF0aWMgZmluYWwgU3RyaW5nIFRFU1RfTUVUSE9EX1BBUkFNRVRFUlNfVFlQRTJfQ0xBU1Mg
PSAiTXlFbnVtIjsNCisJcHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgVEVTVF9NRVRIT0RfUEFS
QU1FVEVSU19UWVBFMl9TT1VSQ0UgPQ0KKwkJCSJwYWNrYWdlIHA7XG4iICsNCisJCQkJCSJcbiIg
KyANCisJCQkJCSJwdWJsaWMgZW51bSBNeUVudW0ge1xuIiArIA0KKwkJCQkJIglPTkUoMSksIFRX
TygyKTtcbiIgKyANCisJCQkJCSIJXG4iICsgDQorCQkJCQkiCXByaXZhdGUgTXlFbnVtKGZpbmFs
IGludCBmaW5hbEludFZhbHVlKSB7IHRoaXMudmFyID0gZmluYWxJbnRWYWx1ZTsgfVxuIiArIA0K
KwkJCQkJIglpbnQgdmFyO1xuIiArIA0KKwkJCQkJIn1cbiI7DQorCQ0KKwlwdWJsaWMgc3RhdGlj
IGZpbmFsIFN0cmluZyBURVNUX01FVEhPRF9QQVJBTUVURVJTX1RZUEUzX1BLRyA9ICJwIjsNCisJ
cHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgVEVTVF9NRVRIT0RfUEFSQU1FVEVSU19UWVBFM19D
TEFTUyA9ICJGb28iOw0KKwlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBURVNUX01FVEhPRF9Q
QVJBTUVURVJTX1RZUEUzX1NPVVJDRSA9DQorCQkicGFja2FnZSBwO1xuIiArDQorCQkiaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxlLnRlc3RzLmFubm90YXRpb25zLk1vZGVsVGVz
dDhUcmlnZ2VyO1xuIiArDQorCQkiaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxl
LnRlc3RzLmFubm90YXRpb25zLkxvb2tBdDtcbiIgKw0KKwkJIkBNb2RlbFRlc3Q4VHJpZ2dlcih0
ZXN0ID0gXCJ0ZXN0TWV0aG9kUGFyYW1ldGVyc1wiKSIgKw0KKwkJInB1YmxpYyBjbGFzcyBGb28g
e1xuIiArDQorCQkiICAgIEBMb29rQXRcbiIgKw0KKwkJIiAgICBwdWJsaWMgQmFyIGRvU3R1ZmYo
ZmluYWwgaW50IG51bWJlciwgU3RyaW5nIHRleHR1YWwpIHsgcmV0dXJuIG51bGw7IH1cbiIgKw0K
KwkJIiAgICBATG9va0F0XG4iICsNCisJCSIgICAgcHVibGljIE15RW51bSBndWVzcyhmaW5hbCBp
bnQgaXNJdE9uZSkgeyByZXR1cm4gaXNJdE9uZSA9PSAxID8gTXlFbnVtLk9ORSA6IE15RW51bS5U
V087IH1cbiIgKw0KKwkJIn0iOw0KKw0KKw0KKwlAU3VwcHJlc3NXYXJuaW5ncygidW51c2VkIikN
CisJcHJpdmF0ZSBQcm9jZXNzaW5nRW52aXJvbm1lbnQgX3Byb2Nlc3NpbmdFbnY7DQorCQ0KKwkv
Kg0KKwkgKiAobm9uLUphdmFkb2MpDQorCSAqIA0KKwkgKiBAc2VlIGphdmF4LmFubm90YXRpb24u
cHJvY2Vzc2luZy5BYnN0cmFjdFByb2Nlc3NvciNpbml0KGphdmF4LmFubm90YXRpb24ucHJvY2Vz
c2luZy5Qcm9jZXNzaW5nRW52aXJvbm1lbnQpDQorCSAqLw0KKwlAT3ZlcnJpZGUNCisJcHVibGlj
IHN5bmNocm9uaXplZCB2b2lkIGluaXQoUHJvY2Vzc2luZ0Vudmlyb25tZW50IHByb2Nlc3NpbmdF
bnYpIHsNCisJCXN1cGVyLmluaXQocHJvY2Vzc2luZ0Vudik7DQorCQlfcHJvY2Vzc2luZ0VudiA9
IHByb2Nlc3NpbmdFbnY7DQorCX0NCisNCisJLyoNCisJICogKG5vbi1KYXZhZG9jKQ0KKwkgKiAN
CisJICogQHNlZSBqYXZheC5hbm5vdGF0aW9uLnByb2Nlc3NpbmcuQWJzdHJhY3RQcm9jZXNzb3Ij
cHJvY2VzcyhqYXZhLnV0aWwuU2V0LA0KKwkgKiAgICAgIGphdmF4LmFubm90YXRpb24ucHJvY2Vz
c2luZy5Sb3VuZEVudmlyb25tZW50KQ0KKwkgKi8NCisJQE92ZXJyaWRlDQorCXB1YmxpYyBib29s
ZWFuIHByb2Nlc3MoU2V0PD8gZXh0ZW5kcyBUeXBlRWxlbWVudD4gYW5ub3RhdGlvbnMsIFJvdW5k
RW52aXJvbm1lbnQgcm91bmRFbnYpIHsNCisJCVByb2Nlc3NvclRlc3RTdGF0dXMuc2V0UHJvY2Vz
c29yUmFuKCk7DQorCQlpZiAoIXJvdW5kRW52LnByb2Nlc3NpbmdPdmVyKCkgJiYgIWFubm90YXRp
b25zLmlzRW1wdHkoKSkgew0KKwkJCXJvdW5kKGFubm90YXRpb25zLCByb3VuZEVudik7DQorCQl9
DQorCQlyZXR1cm4gdHJ1ZTsNCisJfQ0KKw0KKwkvKioNCisJICogUGVyZm9ybSBhIHJvdW5kIG9m
IHByb2Nlc3Npbmc6IGZvciBhIGdpdmVuIGFubm90YXRpb24gaW5zdGFuY2UsIGRldGVybWluZSB3
aGF0IHRlc3QgbWV0aG9kIGl0DQorCSAqIHNwZWNpZmllcywgYW5kIGludm9rZSB0aGF0IG1ldGhv
ZCwgcGFzc2luZyBpbiB0aGUgYW5ub3RhdGVkIGVsZW1lbnQuDQorCSAqLw0KKwlwcml2YXRlIHZv
aWQgcm91bmQoU2V0PD8gZXh0ZW5kcyBUeXBlRWxlbWVudD4gYW5ub3RhdGlvbnMsIFJvdW5kRW52
aXJvbm1lbnQgcm91bmRFbnYpIHsNCisJCVR5cGVFbGVtZW50IG1vZGVsVGVzdGVyQW5ubyA9IGFu
bm90YXRpb25zLml0ZXJhdG9yKCkubmV4dCgpOw0KKwkJU2V0PD8gZXh0ZW5kcyBFbGVtZW50PiBh
bm5vdGF0ZWRFbHMgPSByb3VuZEVudi5nZXRFbGVtZW50c0Fubm90YXRlZFdpdGgobW9kZWxUZXN0
ZXJBbm5vKTsNCisJCWZvciAoRWxlbWVudCBhbm5vdGF0ZWRFbCA6IGFubm90YXRlZEVscykgew0K
KwkJCU1vZGVsVGVzdDhUcmlnZ2VyIG1vZGVsVGVzdGVyTWlycm9yID0gYW5ub3RhdGVkRWwuZ2V0
QW5ub3RhdGlvbihNb2RlbFRlc3Q4VHJpZ2dlci5jbGFzcyk7DQorCQkJU3RyaW5nIHRlc3RNZXRo
b2ROYW1lID0gbW9kZWxUZXN0ZXJNaXJyb3IudGVzdCgpOw0KKwkJCVN0cmluZyBhcmcwID0gbW9k
ZWxUZXN0ZXJNaXJyb3IuYXJnMCgpOw0KKwkJCVN0cmluZyBhcmcxID0gbW9kZWxUZXN0ZXJNaXJy
b3IuYXJnMSgpOw0KKwkJCWlmIChudWxsICE9IHRlc3RNZXRob2ROYW1lICYmIHRlc3RNZXRob2RO
YW1lLmxlbmd0aCgpID4gMCkgew0KKwkJCQl0cnkgew0KKwkJCQkJTWV0aG9kIHRlc3RNZXRob2Qg
PSBNb2RlbFRlc3RlcjhQcm9jLmNsYXNzLmdldE1ldGhvZCh0ZXN0TWV0aG9kTmFtZSwgDQorCQkJ
CQkJCVJvdW5kRW52aXJvbm1lbnQuY2xhc3MsIEVsZW1lbnQuY2xhc3MsIFN0cmluZy5jbGFzcywg
U3RyaW5nLmNsYXNzKTsNCisJCQkJCXRlc3RNZXRob2QuaW52b2tlKHRoaXMsIHJvdW5kRW52LCBh
bm5vdGF0ZWRFbCwgYXJnMCwgYXJnMSk7DQorCQkJCX0gY2F0Y2ggKEV4Y2VwdGlvbiBlKSB7DQor
CQkJCQlUaHJvd2FibGUgdDsNCisJCQkJCXQgPSAoZSBpbnN0YW5jZW9mIEludm9jYXRpb25UYXJn
ZXRFeGNlcHRpb24pID8gdCA9IGUuZ2V0Q2F1c2UoKSA6IGU7DQorCQkJCQl0LnByaW50U3RhY2tU
cmFjZSgpOw0KKwkJCQkJLy8gSWxsZWdhbFN0YXRlRXhjZXB0aW9uIHByb2JhYmx5IG1lYW5zIHRl
c3QgbWV0aG9kIGNhbGxlZCBQcm9jZXNzb3JUZXN0U3RhdHVzLmZhaWwoKQ0KKwkJCQkJU3RyaW5n
IG1zZyA9ICh0IGluc3RhbmNlb2YgSWxsZWdhbFN0YXRlRXhjZXB0aW9uKSA/DQorCQkJCQkJCXQu
Z2V0TWVzc2FnZSgpIDoNCisJCQkJCQkJdC5nZXRDbGFzcygpLmdldFNpbXBsZU5hbWUoKSArICIg
aW52b2tpbmcgdGVzdCBtZXRob2QgIiArIA0KKwkJCQkJCQl0ZXN0TWV0aG9kTmFtZSArICIgLSBz
ZWUgY29uc29sZSBmb3IgZGV0YWlscyI7DQorCQkJCQlQcm9jZXNzb3JUZXN0U3RhdHVzLmZhaWwo
bXNnKTsNCisJCQkJfQ0KKwkJCX0NCisJCX0NCisJfQ0KKw0KKwkNCisJLyoqDQorCSAqIENoZWNr
IHRoZSB0eXBlcyBvZiBzb21lIG1ldGhvZHMgKGNoZWNrIHRoYXQgdGhlIGFubm90YXRpb24gcHJv
Y2Vzc2luZyB1c2VzIHRoZSBwYXJzZWQgTWV0aG9kUGFyYW1ldGVycw0KKwkgKiBhdHRyaWJ1dGUg
ZnJvbSBjbGFzcyBmaWxlcyBhY2NvcmRpbmcgdG8gSkVQIDExOCkNCisJICogQHNlZSAjVEVTVF9N
RVRIT0RfUEFSQU1FVEVSU19UWVBFMV9TT1VSQ0UNCisJICogQHNlZSAjVEVTVF9NRVRIT0RfUEFS
QU1FVEVSU19UWVBFMl9TT1VSQ0UNCisJICogQHNlZSAjVEVTVF9NRVRIT0RfUEFSQU1FVEVSU19U
WVBFM19TT1VSQ0UNCisJICovDQorCXB1YmxpYyB2b2lkIHRlc3RNZXRob2RQYXJhbWV0ZXJzKFJv
dW5kRW52aXJvbm1lbnQgcm91bmRFbnYsIEVsZW1lbnQgZSwgU3RyaW5nIGFyZzAsIFN0cmluZyBh
cmcxKSANCisJCQl0aHJvd3MgRXhjZXB0aW9uIA0KKwl7DQorCQlNYXA8U3RyaW5nLCBFeGVjdXRh
YmxlRWxlbWVudD4gbWV0aG9kcyA9IG5ldyBIYXNoTWFwPFN0cmluZywgRXhlY3V0YWJsZUVsZW1l
bnQ+KCk7DQorCQlJdGVyYWJsZTw/IGV4dGVuZHMgRWxlbWVudD4gZWxlbWVudHM7DQorDQorCQll
bGVtZW50cyA9IHJvdW5kRW52LmdldEVsZW1lbnRzQW5ub3RhdGVkV2l0aChMb29rQXQuY2xhc3Mp
Ow0KKwkJZm9yIChFeGVjdXRhYmxlRWxlbWVudCBtZXRob2QgOiBFbGVtZW50RmlsdGVyLm1ldGhv
ZHNJbihlbGVtZW50cykpIHsNCisJCQltZXRob2RzLnB1dChtZXRob2QuZ2V0U2ltcGxlTmFtZSgp
LnRvU3RyaW5nKCksIG1ldGhvZCk7DQorCQl9DQorDQorCQkvLyBFeGFtaW5lIHRoZSBlYXN5IGNh
c2UsIHRoZSBGb28uZG9TdHVmZiBtZXRob2QNCisJCUV4ZWN1dGFibGVFbGVtZW50IG1Eb1N0dWZm
ID0gbWV0aG9kcy5nZXQoImRvU3R1ZmYiKTsNCisJCWlmIChtRG9TdHVmZiA9PSBudWxsKSB7DQor
CQkJUHJvY2Vzc29yVGVzdFN0YXR1cy5mYWlsKCJNZXRob2QgZG9TdHVmZigpIHdhcyBub3QgZm91
bmQiKTsNCisJCX0NCisJCWlmIChtRG9TdHVmZi5nZXRLaW5kKCkgIT0gRWxlbWVudEtpbmQuTUVU
SE9EKSB7DQorCQkJUHJvY2Vzc29yVGVzdFN0YXR1cy5mYWlsKCJFbGVtZW50S2luZCBvZiBtZXRo
b2QgZG9TdHVmZigpIHdhcyAiICsgbURvU3R1ZmYuZ2V0S2luZCgpICsgDQorCQkJCQkiLCBleHBl
Y3RlZCBNRVRIT0QiKTsNCisJCX0NCisJCS8vIEV4YW1pbmUgcGFyYW1ldGVycw0KKwkJTGlzdDw/
IGV4dGVuZHMgVmFyaWFibGVFbGVtZW50PiBwYXJhbWV0ZXJzID0gbURvU3R1ZmYuZ2V0UGFyYW1l
dGVycygpOw0KKwkJaWYgKHBhcmFtZXRlcnMuc2l6ZSgpICE9IDIpIHsNCisJCQlQcm9jZXNzb3JU
ZXN0U3RhdHVzLmZhaWwoIkV4cGVjdGVkIHR3byBwYXJhbWV0ZXJzIGZvciBkb1N0dWZmKCkiKTsN
CisJCX0NCisJCVByb2Nlc3NvclRlc3RTdGF0dXMuYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwg
Im51bWJlciIsIHBhcmFtZXRlcnMuZ2V0KDApLmdldFNpbXBsZU5hbWUoKS50b1N0cmluZygpKTsN
CisJCVByb2Nlc3NvclRlc3RTdGF0dXMuYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgInRleHR1
YWwiLCBwYXJhbWV0ZXJzLmdldCgxKS5nZXRTaW1wbGVOYW1lKCkudG9TdHJpbmcoKSk7DQorCQkN
CisJCS8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8v
Ly8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vDQorCQkNCisJCS8vIENvb2wsIG5vdyBjaGVj
ayAncC5CYXIub3RoZXJTdHVmZicgd2hpY2ggaXMgYWxzbyB0aGUgcmV0dXJuIHR5cGUgb2YgZG9T
dHVmZg0KKwkJVHlwZU1pcnJvciByZXR1cm5UeXBlID0gbURvU3R1ZmYuZ2V0UmV0dXJuVHlwZSgp
Ow0KKwkJaWYgKHJldHVyblR5cGUuZ2V0S2luZCgpICE9IFR5cGVLaW5kLkRFQ0xBUkVEKQ0KKwkJ
CVByb2Nlc3NvclRlc3RTdGF0dXMuZmFpbCgiVHlwZUtpbmQgb2YgbWV0aG9kIGRvU3R1ZmYoKSdz
IHJldHVybiB0eXBlICIgKyByZXR1cm5UeXBlLmdldEtpbmQoKSArIA0KKwkJCQkJIiwgZXhwZWN0
ZWQgREVDTEFSRUQiKTsNCisNCisJCURlY2xhcmVkVHlwZSBiYXJUeXBlID0gKERlY2xhcmVkVHlw
ZSkgcmV0dXJuVHlwZTsNCisJCVR5cGVFbGVtZW50IGJhciA9IChUeXBlRWxlbWVudCkgYmFyVHlw
ZS5hc0VsZW1lbnQoKTsNCisJCQ0KKwkJZm9yIChFbGVtZW50IG1ldGhvZCA6IGJhci5nZXRFbmNs
b3NlZEVsZW1lbnRzKCkpIHsNCisJCQlpZiAobWV0aG9kLmdldEtpbmQoKSA9PSBFbGVtZW50S2lu
ZC5NRVRIT0QpDQorCQkJCW1ldGhvZHMucHV0KG1ldGhvZC5nZXRTaW1wbGVOYW1lKCkudG9TdHJp
bmcoKSwgKEV4ZWN1dGFibGVFbGVtZW50KW1ldGhvZCk7DQorCQl9DQorCQkNCisJCUV4ZWN1dGFi
bGVFbGVtZW50IG1PdGhlclN0dWZmID0gbWV0aG9kcy5nZXQoIm90aGVyU3R1ZmYiKTsNCisJCWlm
IChtT3RoZXJTdHVmZiA9PSBudWxsKSB7DQorCQkJUHJvY2Vzc29yVGVzdFN0YXR1cy5mYWlsKCJN
ZXRob2Qgb3RoZXJTdHVmZigpIHdhcyBub3QgZm91bmQiKTsNCisJCX0NCisJCWlmIChtT3RoZXJT
dHVmZi5nZXRLaW5kKCkgIT0gRWxlbWVudEtpbmQuTUVUSE9EKSB7DQorCQkJUHJvY2Vzc29yVGVz
dFN0YXR1cy5mYWlsKCJFbGVtZW50S2luZCBvZiBtZXRob2Qgb3RoZXJTdHVmZigpIHdhcyAiICsg
bU90aGVyU3R1ZmYuZ2V0S2luZCgpICsgDQorCQkJCQkiLCBleHBlY3RlZCBNRVRIT0QiKTsNCisJ
CX0NCisJCS8vIEV4YW1pbmUgcGFyYW1ldGVycw0KKwkJTGlzdDw/IGV4dGVuZHMgVmFyaWFibGVF
bGVtZW50PiBvdGhlclBhcmFtZXRlcnMgPSBtT3RoZXJTdHVmZi5nZXRQYXJhbWV0ZXJzKCk7DQor
CQlpZiAob3RoZXJQYXJhbWV0ZXJzLnNpemUoKSAhPSAyKSB7DQorCQkJUHJvY2Vzc29yVGVzdFN0
YXR1cy5mYWlsKCJFeHBlY3RlZCB0d28gcGFyYW1ldGVycyBmb3Igb3RoZXJTdHVmZigpIik7DQor
CQl9DQorCQlQcm9jZXNzb3JUZXN0U3RhdHVzLmFzc2VydEVxdWFscygiV3JvbmcgbmFtZSIsICJm
dW4iLCBvdGhlclBhcmFtZXRlcnMuZ2V0KDApLmdldFNpbXBsZU5hbWUoKS50b1N0cmluZygpKTsN
CisJCVByb2Nlc3NvclRlc3RTdGF0dXMuYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1lIiwgImJlYW5z
Iiwgb3RoZXJQYXJhbWV0ZXJzLmdldCgxKS5nZXRTaW1wbGVOYW1lKCkudG9TdHJpbmcoKSk7DQor
DQorCQkvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8v
Ly8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLw0KKw0KKwkJLy8gRXhhbWluZSB0aGUgZW51
bSBhcyByZXR1cm5lZCBieSBGb28uZ3Vlc3MgbWV0aG9kDQorCQlFeGVjdXRhYmxlRWxlbWVudCBt
R3Vlc3MgPSBtZXRob2RzLmdldCgiZ3Vlc3MiKTsNCisJCWlmIChtR3Vlc3MgPT0gbnVsbCkgew0K
KwkJCVByb2Nlc3NvclRlc3RTdGF0dXMuZmFpbCgiTWV0aG9kIGd1ZXNzKCkgd2FzIG5vdCBmb3Vu
ZCIpOw0KKwkJfQ0KKwkJaWYgKG1HdWVzcy5nZXRLaW5kKCkgIT0gRWxlbWVudEtpbmQuTUVUSE9E
KSB7DQorCQkJUHJvY2Vzc29yVGVzdFN0YXR1cy5mYWlsKCJFbGVtZW50S2luZCBvZiBtZXRob2Qg
ZG9TdHVmZigpIHdhcyAiICsgbUd1ZXNzLmdldEtpbmQoKSArIA0KKwkJCQkJIiwgZXhwZWN0ZWQg
TUVUSE9EIik7DQorCQl9DQorCQkNCisJCS8vIENvb2wsIG5vdyBjaGVjayAncC5CYXIub3RoZXJT
dHVmZicgd2hpY2ggaXMgYWxzbyB0aGUgcmV0dXJuIHR5cGUgb2YgZG9TdHVmZg0KKwkJVHlwZU1p
cnJvciBndWVzc1JldHVyblR5cGUgPSBtR3Vlc3MuZ2V0UmV0dXJuVHlwZSgpOw0KKwkJaWYgKGd1
ZXNzUmV0dXJuVHlwZS5nZXRLaW5kKCkgIT0gVHlwZUtpbmQuREVDTEFSRUQpDQorCQkJUHJvY2Vz
c29yVGVzdFN0YXR1cy5mYWlsKCJUeXBlS2luZCBvZiBtZXRob2QgZ3Vlc3MoKSdzIHJldHVybiB0
eXBlICIgKyBndWVzc1JldHVyblR5cGUuZ2V0S2luZCgpICsgDQorCQkJCQkiLCBleHBlY3RlZCBE
RUNMQVJFRCIpOw0KKw0KKwkJRGVjbGFyZWRUeXBlIG15RW51bVR5cGUgPSAoRGVjbGFyZWRUeXBl
KSBndWVzc1JldHVyblR5cGU7DQorCQlUeXBlRWxlbWVudCBteUVudW1DbGFzcyA9IChUeXBlRWxl
bWVudCkgbXlFbnVtVHlwZS5hc0VsZW1lbnQoKTsNCisNCisJCUxpc3Q8RXhlY3V0YWJsZUVsZW1l
bnQ+IGN0b3JzID0gbmV3IExpbmtlZExpc3Q8RXhlY3V0YWJsZUVsZW1lbnQ+KCk7DQorCQlmb3Ig
KEVsZW1lbnQgbWV0aG9kIDogbXlFbnVtQ2xhc3MuZ2V0RW5jbG9zZWRFbGVtZW50cygpKSB7DQor
CQkJaWYgKG1ldGhvZC5nZXRLaW5kKCkgPT0gRWxlbWVudEtpbmQuQ09OU1RSVUNUT1IpIHsNCisJ
CQkJY3RvcnMuYWRkKChFeGVjdXRhYmxlRWxlbWVudCltZXRob2QpOw0KKwkJCX0NCisJCX0NCisN
CisJCVByb2Nlc3NvclRlc3RTdGF0dXMuYXNzZXJ0RXF1YWxzKCJCYWQgIyBvZiBjb25zdHJ1Y3Rv
cnMgZm9yIE15RW51bSIsIDEsIGN0b3JzLnNpemUoKSk7DQorCQkvLyBFeGFtaW5lIHBhcmFtZXRl
cnMNCisJCUxpc3Q8PyBleHRlbmRzIFZhcmlhYmxlRWxlbWVudD4gY3RvclBhcmFtZXRlcnMgPSBj
dG9ycy5nZXQoMCkuZ2V0UGFyYW1ldGVycygpOw0KKwkJUHJvY2Vzc29yVGVzdFN0YXR1cy5hc3Nl
cnRFcXVhbHMoIkJhZCAjIG9mIHBhcmFtZXRlcnMgZm9yIE15RW51bSBjdG9yIiwgMSwgY3RvclBh
cmFtZXRlcnMuc2l6ZSgpKTsNCisJCVByb2Nlc3NvclRlc3RTdGF0dXMuYXNzZXJ0RXF1YWxzKCJX
cm9uZyBuYW1lIiwgImZpbmFsSW50VmFsdWUiLCBjdG9yUGFyYW1ldGVycy5nZXQoMCkuZ2V0U2lt
cGxlTmFtZSgpLnRvU3RyaW5nKCkpOw0KKwl9DQorfQ0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNl
LmpkdC5jb21waWxlci5hcHQvc3JjL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9h
cHQvbW9kZWwvRXhlY3V0YWJsZUVsZW1lbnRJbXBsLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29t
cGlsZXIuYXB0L3NyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXB0L21vZGVs
L0V4ZWN1dGFibGVFbGVtZW50SW1wbC5qYXZhDQppbmRleCAzM2I4MjQxLi5iOGYyMzY3IDEwMDY0
NA0KLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLmFwdC9zcmMvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2FwdC9tb2RlbC9FeGVjdXRhYmxlRWxlbWVudEltcGwuamF2YQ0K
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLmFwdC9zcmMvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2FwdC9tb2RlbC9FeGVjdXRhYmxlRWxlbWVudEltcGwuamF2YQ0KQEAg
LTcsNiArNyw3IEBADQogICoNCiAgKiBDb250cmlidXRvcnM6DQogICogICAgIElCTSBDb3Jwb3Jh
dGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbg0KKyAqICAgIEplc3BlciBTdGVl
biBNb2xsZXIgLSBCdWcgNDEyMTUwIFsxLjhdIFtjb21waWxlcl0gRW5hYmxlIHJlZmxlY3RlZCBw
YXJhbWV0ZXIgbmFtZXMgZHVyaW5nIGFubm90YXRpb24gcHJvY2Vzc2luZw0KICAqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqLw0KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LmFwdC5tb2RlbDsNCiANCkBAIC0zNSw3ICszNiw2IEBAIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29tcGlsZXIuYXN0LkFyZ3VtZW50Ow0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkFubm90YXRpb25CaW5kaW5nOw0KIGltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkFubm90YXRpb25Ib2xkZXI7DQog
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuQXB0QmluYXJ5
TG9jYWxWYXJpYWJsZUJpbmRpbmc7DQotaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5sb29rdXAuRXh0cmFDb21waWxlck1vZGlmaWVyczsNCiBpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5Mb29rdXBFbnZpcm9ubWVudDsNCiBpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5NZXRob2RCaW5kaW5n
Ow0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLk1ldGhv
ZFZlcmlmaWVyOw0KQEAgLTE0Myw0OSArMTQzLDI5IEBAIHB1YmxpYyBjbGFzcyBFeGVjdXRhYmxl
RWxlbWVudEltcGwgZXh0ZW5kcyBFbGVtZW50SW1wbCBpbXBsZW1lbnRzDQogCQkJCX0NCiAJCQl9
IGVsc2Ugew0KIAkJCQkvLyBiaW5hcnkgbWV0aG9kDQotCQkJCWJvb2xlYW4gaXNFbnVtQ29uc3Ry
dWN0b3IgPSBiaW5kaW5nLmlzQ29uc3RydWN0b3IoKQ0KLQkJCQkJCSYmIGJpbmRpbmcuZGVjbGFy
aW5nQ2xhc3MuaXNFbnVtKCkNCi0JCQkJCQkmJiBiaW5kaW5nLmRlY2xhcmluZ0NsYXNzLmlzQmlu
YXJ5QmluZGluZygpDQotCQkJCQkJJiYgKChiaW5kaW5nLm1vZGlmaWVycyAmIEV4dHJhQ29tcGls
ZXJNb2RpZmllcnMuQWNjR2VuZXJpY1NpZ25hdHVyZSkgPT0gMCk7DQogCQkJCUFubm90YXRpb25C
aW5kaW5nW11bXSBwYXJhbWV0ZXJBbm5vdGF0aW9uQmluZGluZ3MgPSBudWxsOw0KIAkJCQlBbm5v
dGF0aW9uSG9sZGVyIGFubm90YXRpb25Ib2xkZXIgPSBiaW5kaW5nLmRlY2xhcmluZ0NsYXNzLnJl
dHJpZXZlQW5ub3RhdGlvbkhvbGRlcihiaW5kaW5nLCBmYWxzZSk7DQogCQkJCWlmIChhbm5vdGF0
aW9uSG9sZGVyICE9IG51bGwpIHsNCiAJCQkJCXBhcmFtZXRlckFubm90YXRpb25CaW5kaW5ncyA9
IGFubm90YXRpb25Ib2xkZXIuZ2V0UGFyYW1ldGVyQW5ub3RhdGlvbnMoKTsNCiAJCQkJfQ0KIAkJ
CQkvLyB3ZSBuZWVkIHRvIGZpbHRlciB0aGUgc3ludGhldGljIGFyZ3VtZW50cw0KLQkJCQlpZiAo
aXNFbnVtQ29uc3RydWN0b3IpIHsNCi0JCQkJCWlmIChsZW5ndGggPT0gMikgew0KLQkJCQkJCS8v
IHRoZSB0d28gYXJndW1lbnRzIGFyZSBvbmx5IHRoZSB0d28gc3ludGhldGljIGFyZ3VtZW50cw0K
LQkJCQkJCXJldHVybiBDb2xsZWN0aW9ucy5lbXB0eUxpc3QoKTsNCi0JCQkJCX0NCi0JCQkJCWZv
ciAoaW50IGkgPSAyOyBpIDwgbGVuZ3RoOyBpKyspIHsNCi0JCQkJCQlUeXBlQmluZGluZyB0eXBl
QmluZGluZyA9IGJpbmRpbmcucGFyYW1ldGVyc1tpXTsNCi0JCQkJCQlTdHJpbmdCdWlsZGVyIGJ1
aWxkZXIgPSBuZXcgU3RyaW5nQnVpbGRlcigiYXJnIik7Ly8kTk9OLU5MUy0xJA0KLQkJCQkJCWJ1
aWxkZXIuYXBwZW5kKGkgLSAyKTsNCi0JCQkJCQlWYXJpYWJsZUVsZW1lbnQgcGFyYW0gPSBuZXcg
VmFyaWFibGVFbGVtZW50SW1wbChfZW52LA0KLQkJCQkJCQkJbmV3IEFwdEJpbmFyeUxvY2FsVmFy
aWFibGVCaW5kaW5nKA0KLQkJCQkJCQkJCQlTdHJpbmcudmFsdWVPZihidWlsZGVyKS50b0NoYXJB
cnJheSgpLA0KLQkJCQkJCQkJCQl0eXBlQmluZGluZywNCi0JCQkJCQkJCQkJMCwNCi0JCQkJCQkJ
CQkJbnVsbCwNCi0JCQkJCQkJCQkJYmluZGluZykpOw0KLQkJCQkJCXBhcmFtcy5hZGQocGFyYW0p
Ow0KLQkJCQkJfQ0KLQkJCQl9IGVsc2Ugew0KLQkJCQkJaW50IGkgPSAwOw0KLQkJCQkJZm9yIChU
eXBlQmluZGluZyB0eXBlQmluZGluZyA6IGJpbmRpbmcucGFyYW1ldGVycykgew0KLQkJCQkJCVN0
cmluZ0J1aWxkZXIgYnVpbGRlciA9IG5ldyBTdHJpbmdCdWlsZGVyKCJhcmciKTsvLyROT04tTkxT
LTEkDQorCQkJCWludCBpID0gMDsNCisJCQkJZm9yIChUeXBlQmluZGluZyB0eXBlQmluZGluZyA6
IGJpbmRpbmcucGFyYW1ldGVycykgew0KKwkJCQkJY2hhciBuYW1lW10gPSBiaW5kaW5nLnBhcmFt
ZXRlck5hbWVzLmxlbmd0aCA+IGkgPyBiaW5kaW5nLnBhcmFtZXRlck5hbWVzW2ldIDogbnVsbDsN
CisJCQkJCWlmIChuYW1lID09IG51bGwpIHsNCisgCQkJCQkJU3RyaW5nQnVpbGRlciBidWlsZGVy
ID0gbmV3IFN0cmluZ0J1aWxkZXIoImFyZyIpOy8vJE5PTi1OTFMtMSQNCiAJCQkJCQlidWlsZGVy
LmFwcGVuZChpKTsNCi0JCQkJCQlWYXJpYWJsZUVsZW1lbnQgcGFyYW0gPSBuZXcgVmFyaWFibGVF
bGVtZW50SW1wbChfZW52LA0KLQkJCQkJCQkJbmV3IEFwdEJpbmFyeUxvY2FsVmFyaWFibGVCaW5k
aW5nKA0KLQkJCQkJCQkJCQlTdHJpbmcudmFsdWVPZihidWlsZGVyKS50b0NoYXJBcnJheSgpLA0K
LQkJCQkJCQkJCQl0eXBlQmluZGluZywNCi0JCQkJCQkJCQkJMCwNCi0JCQkJCQkJCQkJcGFyYW1l
dGVyQW5ub3RhdGlvbkJpbmRpbmdzICE9IG51bGwgPyBwYXJhbWV0ZXJBbm5vdGF0aW9uQmluZGlu
Z3NbaV0gOiBudWxsLA0KLQkJCQkJCQkJCQliaW5kaW5nKSk7DQotCQkJCQkJcGFyYW1zLmFkZChw
YXJhbSk7DQotCQkJCQkJaSsrOw0KKwkJCQkJCW5hbWUgPSBTdHJpbmcudmFsdWVPZihidWlsZGVy
KS50b0NoYXJBcnJheSgpOw0KIAkJCQkJfQ0KKwkJCQkJVmFyaWFibGVFbGVtZW50IHBhcmFtID0g
bmV3IFZhcmlhYmxlRWxlbWVudEltcGwoX2VudiwNCisJCQkJCQkJbmV3IEFwdEJpbmFyeUxvY2Fs
VmFyaWFibGVCaW5kaW5nKA0KKwkJCQkJCQkJCW5hbWUsDQorCQkJCQkJCQkJdHlwZUJpbmRpbmcs
DQorCQkJCQkJCQkJMCwNCisJCQkJCQkJCQlwYXJhbWV0ZXJBbm5vdGF0aW9uQmluZGluZ3MgIT0g
bnVsbCA/IHBhcmFtZXRlckFubm90YXRpb25CaW5kaW5nc1tpXSA6IG51bGwsDQorCQkJCQkJCQkJ
YmluZGluZykpOw0KKwkJCQkJcGFyYW1zLmFkZChwYXJhbSk7DQorCQkJCQlpKys7DQogCQkJCX0N
CiAJCQl9DQogCQkJcmV0dXJuIENvbGxlY3Rpb25zLnVubW9kaWZpYWJsZUxpc3QocGFyYW1zKTsN
Cg==
</data>

          </attachment>
      

    </bug>

</bugzilla>