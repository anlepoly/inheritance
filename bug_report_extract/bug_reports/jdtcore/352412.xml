<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>352412</bug_id>
          
          <creation_ts>2011-07-19 04:25:00 -0400</creation_ts>
          <short_desc>Switching on strings in 1.6- modes produces misleading message</short_desc>
          <delta_ts>2011-09-13 09:50:39 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.7</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows XP</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P5</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.8 M2</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Ayushman Jain">amj87.iitr</assigned_to>
          <cc>amj87.iitr</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1966518</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-07-19 04:25:26 -0400</bug_when>
    <thetext>BETA_JAVA7 branch.

&quot;Cannot switch on a value of type String for source level below 1.7. Only convertible int values or enum constants are permitted&quot; is the message
we issue when there is an attempt to switch on strings in source levels
1.6-.

The latter part of message is obviously incorrect, as you can switch
on a enum variable. In fact there is no reason why you would want to
switch on an enum constant.

The phrase &quot;convertible int values&quot; is also not particularly helpful.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1966530</commentid>
    <comment_count>1</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-07-19 04:41:13 -0400</bug_when>
    <thetext>(In reply to comment #0)
&gt; BETA_JAVA7 branch.
&gt; 
&gt; &quot;Cannot switch on a value of type String for source level below 1.7. Only
&gt; convertible int values or enum constants are permitted&quot; is the message
&gt; we issue when there is an attempt to switch on strings in source levels
&gt; 1.6-.
&gt; 
&gt; The latter part of message is obviously incorrect, as you can switch
&gt; on a enum variable. In fact there is no reason why you would want to
&gt; switch on an enum constant.
&gt; 
&gt; The phrase &quot;convertible int values&quot; is also not particularly helpful.

Two things:
1) An identical warning is also seen for invalid switches for 1.6- where we&apos;re not switching on a string.
2) The part that says &quot;convertible int values&quot; sounds ok since we need to cover all the types that can be converted to an integral number, such as a char. So the following is still valid:
char c = &apos;a&apos;;
		switch(c) {
		case &apos;a&apos;:
		case &apos;b&apos;:
		}

Hence the bug comes down to changing &quot;enum constants&quot; to &quot;enum variables&quot;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1975618</commentid>
    <comment_count>2</comment_count>
      <attachid>201099</attachid>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-08-08 14:46:39 -0400</bug_when>
    <thetext>Created attachment 201099
proposed fix v1.0 + updated tests

Corrected all the switch related errors, replacing &quot;enum constants&quot; with &quot;enum variables&quot;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1976135</commentid>
    <comment_count>3</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-08-09 10:33:15 -0400</bug_when>
    <thetext>Released in HEAD for 3.8M2</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1992682</commentid>
    <comment_count>4</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-09-13 09:50:39 -0400</bug_when>
    <thetext>Verified for 3.8M2 using build I20110911-2000.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>201099</attachid>
            <date>2011-08-08 14:46:00 -0400</date>
            <delta_ts>2011-08-08 14:46:39 -0400</delta_ts>
            <desc>proposed fix v1.0 + updated tests</desc>
            <filename>patch352412.txt</filename>
            <type>text/plain</type>
            <size>16024</size>
            <attacher name="Ayushman Jain">amj87.iitr</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxl
bS9tZXNzYWdlcy5wcm9wZXJ0aWVzDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNs
aXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvcHJvYmxlbS9tZXNzYWdlcy5wcm9wZXJ0aWVzLHYNCnJldHJpZXZpbmcgcmV2
aXNpb24gMS4yNjcNCmRpZmYgLXUgLXIxLjI2NyBtZXNzYWdlcy5wcm9wZXJ0aWVzDQotLS0gY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2JsZW0vbWVzc2FnZXMu
cHJvcGVydGllcwkyOCBKdWwgMjAxMSAxNzowNzo0OCAtMDAwMAkxLjI2Nw0KKysrIGNvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL21lc3NhZ2VzLnByb3Bl
cnRpZXMJOCBBdWcgMjAxMSAxODo0NDozOCAtMDAwMA0KQEAgLTE0Nyw3ICsxNDcsNyBAQA0KIDE2
NiA9IFRoZSBkZWZhdWx0IGNhc2UgaXMgYWxyZWFkeSBkZWZpbmVkDQogMTY3ID0gVW5yZWFjaGFi
bGUgY2F0Y2ggYmxvY2sgZm9yIHswfS4gVGhpcyBleGNlcHRpb24gaXMgbmV2ZXIgdGhyb3duIGZy
b20gdGhlIHRyeSBzdGF0ZW1lbnQgYm9keQ0KIDE2OCA9IFVuaGFuZGxlZCBleGNlcHRpb24gdHlw
ZSB7MH0NCi0xNjkgPSBDYW5ub3Qgc3dpdGNoIG9uIGEgdmFsdWUgb2YgdHlwZSB7MH0uIE9ubHkg
Y29udmVydGlibGUgaW50IHZhbHVlcyBvciBlbnVtIGNvbnN0YW50cyBhcmUgcGVybWl0dGVkDQor
MTY5ID0gQ2Fubm90IHN3aXRjaCBvbiBhIHZhbHVlIG9mIHR5cGUgezB9LiBPbmx5IGNvbnZlcnRp
YmxlIGludCB2YWx1ZXMgb3IgZW51bSB2YXJpYWJsZXMgYXJlIHBlcm1pdHRlZA0KIDE3MCA9IER1
cGxpY2F0ZSBjYXNlDQogMTcxID0gRHVwbGljYXRlIGxhYmVsIHswfQ0KIDE3MiA9IGJyZWFrIGNh
bm5vdCBiZSB1c2VkIG91dHNpZGUgb2YgYSBsb29wIG9yIGEgc3dpdGNoDQpAQCAtNjM1LDExICs2
MzUsMTEgQEANCiA4NzQgPSBSZXNvdXJjZSBzcGVjaWZpY2F0aW9uIG5vdCBhbGxvd2VkIGhlcmUg
Zm9yIHNvdXJjZSBsZXZlbCBiZWxvdyAxLjcNCiA4NzUgPSBNdWx0aS1jYXRjaCBwYXJhbWV0ZXJz
IGFyZSBub3QgYWxsb3dlZCBmb3Igc291cmNlIGxldmVsIGJlbG93IDEuNw0KIDg3NiA9IEludm9j
YXRpb24gb2YgcG9seW1vcnBoaWMgbWV0aG9kcyBub3QgYWxsb3dlZCBmb3Igc291cmNlIGxldmVs
IGJlbG93IDEuNw0KLTg3NyA9IENhbm5vdCBzd2l0Y2ggb24gYSB2YWx1ZSBvZiB0eXBlIHswfS4g
T25seSBjb252ZXJ0aWJsZSBpbnQgdmFsdWVzLCBzdHJpbmdzIG9yIGVudW0gY29uc3RhbnRzIGFy
ZSBwZXJtaXR0ZWQNCis4NzcgPSBDYW5ub3Qgc3dpdGNoIG9uIGEgdmFsdWUgb2YgdHlwZSB7MH0u
IE9ubHkgY29udmVydGlibGUgaW50IHZhbHVlcywgc3RyaW5ncyBvciBlbnVtIHZhcmlhYmxlcyBh
cmUgcGVybWl0dGVkDQogODc4ID0gQ2Fubm90IGluZmVyIHR5cGUgYXJndW1lbnRzIGZvciB7MH0N
CiA4NzkgPSBFeHBsaWNpdCB0eXBlIGFyZ3VtZW50cyBjYW5ub3QgYmUgdXNlZCB3aXRoICc8Picg
aW4gYW4gYWxsb2NhdGlvbiBleHByZXNzaW9uDQogODgwID0gJzw+JyBjYW5ub3QgYmUgdXNlZCB3
aXRoIGFub255bW91cyBjbGFzc2VzDQotODgxID0gQ2Fubm90IHN3aXRjaCBvbiBhIHZhbHVlIG9m
IHR5cGUgU3RyaW5nIGZvciBzb3VyY2UgbGV2ZWwgYmVsb3cgMS43LiBPbmx5IGNvbnZlcnRpYmxl
IGludCB2YWx1ZXMgb3IgZW51bSBjb25zdGFudHMgYXJlIHBlcm1pdHRlZA0KKzg4MSA9IENhbm5v
dCBzd2l0Y2ggb24gYSB2YWx1ZSBvZiB0eXBlIFN0cmluZyBmb3Igc291cmNlIGxldmVsIGJlbG93
IDEuNy4gT25seSBjb252ZXJ0aWJsZSBpbnQgdmFsdWVzIG9yIGVudW0gdmFyaWFibGVzIGFyZSBw
ZXJtaXR0ZWQNCiA4ODIgPSBVbmhhbmRsZWQgZXhjZXB0aW9uIHR5cGUgezB9IHRocm93biBieSBh
dXRvbWF0aWMgY2xvc2UoKSBpbnZvY2F0aW9uIG9uIHsxfQ0KIDg4MyA9ICc8Picgb3BlcmF0b3Ig
aXMgbm90IGFsbG93ZWQgZm9yIHNvdXJjZSBsZXZlbCBiZWxvdyAxLjcNCiA4ODQgPSBSZWR1bmRh
bnQgc3BlY2lmaWNhdGlvbiBvZiB0eXBlIGFyZ3VtZW50cyA8ezB9Pg0KI1Agb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXINCkluZGV4OiBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Td2l0Y2hUZXN0LmphdmENCj09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJD
UyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBp
bGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1N3
aXRjaFRlc3QuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMjgNCmRpZmYgLXUgLXIxLjI4
IFN3aXRjaFRlc3QuamF2YQ0KLS0tIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21w
aWxlci9yZWdyZXNzaW9uL1N3aXRjaFRlc3QuamF2YQkyOCBKdWwgMjAxMSAxNzowNjoyNyAtMDAw
MAkxLjI4DQorKysgc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jl
c3Npb24vU3dpdGNoVGVzdC5qYXZhCTggQXVnIDIwMTEgMTg6NDQ6NDAgLTAwMDANCkBAIC0yMzAs
NyArMjMwLDcgQEANCiAJCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDQpXG4iICsNCiAJ
CQkiCXN3aXRjaCh0aGlzKXtcbiIgKw0KIAkJCSIJICAgICAgIF5eXl5cbiIgKw0KLQkJCSJDYW5u
b3Qgc3dpdGNoIG9uIGEgdmFsdWUgb2YgdHlwZSBYLiBPbmx5IGNvbnZlcnRpYmxlIGludCB2YWx1
ZXMsIHN0cmluZ3Mgb3IgZW51bSBjb25zdGFudHMgYXJlIHBlcm1pdHRlZFxuIiArDQorCQkJIkNh
bm5vdCBzd2l0Y2ggb24gYSB2YWx1ZSBvZiB0eXBlIFguIE9ubHkgY29udmVydGlibGUgaW50IHZh
bHVlcywgc3RyaW5ncyBvciBlbnVtIHZhcmlhYmxlcyBhcmUgcGVybWl0dGVkXG4iICsNCiAJCQki
LS0tLS0tLS0tLVxuIiArDQogCQkJIjIuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA2KVxuIiAr
DQogCQkJIglab3JrIHo7XG4iICsNCkBAIC0yNTIsNyArMjUyLDcgQEANCiAJCQkiMS4gRVJST1Ig
aW4gWC5qYXZhIChhdCBsaW5lIDQpXG4iICsNCiAJCQkiCXN3aXRjaCh0aGlzKXtcbiIgKw0KIAkJ
CSIJICAgICAgIF5eXl5cbiIgKw0KLQkJCSJDYW5ub3Qgc3dpdGNoIG9uIGEgdmFsdWUgb2YgdHlw
ZSBYLiBPbmx5IGNvbnZlcnRpYmxlIGludCB2YWx1ZXMgb3IgZW51bSBjb25zdGFudHMgYXJlIHBl
cm1pdHRlZFxuIiArDQorCQkJIkNhbm5vdCBzd2l0Y2ggb24gYSB2YWx1ZSBvZiB0eXBlIFguIE9u
bHkgY29udmVydGlibGUgaW50IHZhbHVlcyBvciBlbnVtIHZhcmlhYmxlcyBhcmUgcGVybWl0dGVk
XG4iICsNCiAJCQkiLS0tLS0tLS0tLVxuIiArDQogCQkJIjIuIEVSUk9SIGluIFguamF2YSAoYXQg
bGluZSA2KVxuIiArDQogCQkJIglab3JrIHo7XG4iICsNCkBAIC04NzIsNyArODcyLDcgQEANCiAJ
CQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDMpXG4iICsgDQogCQkJIglzd2l0Y2goYXJn
c1swXSkge1xuIiArIA0KIAkJCSIJICAgICAgIF5eXl5eXl5cbiIgKyANCi0JCQkiQ2Fubm90IHN3
aXRjaCBvbiBhIHZhbHVlIG9mIHR5cGUgU3RyaW5nIGZvciBzb3VyY2UgbGV2ZWwgYmVsb3cgMS43
LiBPbmx5IGNvbnZlcnRpYmxlIGludCB2YWx1ZXMgb3IgZW51bSBjb25zdGFudHMgYXJlIHBlcm1p
dHRlZFxuIiArIA0KKwkJCSJDYW5ub3Qgc3dpdGNoIG9uIGEgdmFsdWUgb2YgdHlwZSBTdHJpbmcg
Zm9yIHNvdXJjZSBsZXZlbCBiZWxvdyAxLjcuIE9ubHkgY29udmVydGlibGUgaW50IHZhbHVlcyBv
ciBlbnVtIHZhcmlhYmxlcyBhcmUgcGVybWl0dGVkXG4iICsgDQogCQkJIi0tLS0tLS0tLS1cbiIg
KyANCiAJCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDQpXG4iICsgDQogCQkJIglkZWZh
dWx0OiByZXR1cm4gYXJncztcbiIgKyANCkBAIC05NTIsNyArOTUyLDcgQEANCiAJCQkiMS4gRVJS
T1IgaW4gWC5qYXZhIChhdCBsaW5lIDMpXG4iICsgDQogCQkJIglzd2l0Y2goYXJnc1swXSkge1xu
IiArIA0KIAkJCSIJICAgICAgIF5eXl5eXl5cbiIgKyANCi0JCQkiQ2Fubm90IHN3aXRjaCBvbiBh
IHZhbHVlIG9mIHR5cGUgU3RyaW5nIGZvciBzb3VyY2UgbGV2ZWwgYmVsb3cgMS43LiBPbmx5IGNv
bnZlcnRpYmxlIGludCB2YWx1ZXMgb3IgZW51bSBjb25zdGFudHMgYXJlIHBlcm1pdHRlZFxuIiAr
IA0KKwkJCSJDYW5ub3Qgc3dpdGNoIG9uIGEgdmFsdWUgb2YgdHlwZSBTdHJpbmcgZm9yIHNvdXJj
ZSBsZXZlbCBiZWxvdyAxLjcuIE9ubHkgY29udmVydGlibGUgaW50IHZhbHVlcyBvciBlbnVtIHZh
cmlhYmxlcyBhcmUgcGVybWl0dGVkXG4iICsgDQogCQkJIi0tLS0tLS0tLS1cbiIgKyANCiAJCQki
Mi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDEyKVxuIiArIA0KIAkJCSIJY2FzZSAoYm9vbGVh
bikgODogYnJlYWs7XG4iICsgDQpAQCAtOTk3LDcgKzk5Nyw3IEBADQogCQkJIjEuIEVSUk9SIGlu
IFguamF2YSAoYXQgbGluZSA2KVxuIiArIA0KIAkJCSIJc3dpdGNoIChcIlN1bmRheVwiKSB7XG4i
ICsgDQogCQkJIgkgICAgICAgIF5eXl5eXl5eXG4iICsgDQotCQkJIkNhbm5vdCBzd2l0Y2ggb24g
YSB2YWx1ZSBvZiB0eXBlIFN0cmluZyBmb3Igc291cmNlIGxldmVsIGJlbG93IDEuNy4gT25seSBj
b252ZXJ0aWJsZSBpbnQgdmFsdWVzIG9yIGVudW0gY29uc3RhbnRzIGFyZSBwZXJtaXR0ZWRcbiIg
KyANCisJCQkiQ2Fubm90IHN3aXRjaCBvbiBhIHZhbHVlIG9mIHR5cGUgU3RyaW5nIGZvciBzb3Vy
Y2UgbGV2ZWwgYmVsb3cgMS43LiBPbmx5IGNvbnZlcnRpYmxlIGludCB2YWx1ZXMgb3IgZW51bSB2
YXJpYWJsZXMgYXJlIHBlcm1pdHRlZFxuIiArIA0KIAkJCSItLS0tLS0tLS0tXG4iOw0KIAkJCQkN
CiAJCXRoaXMucnVuTmVnYXRpdmVUZXN0KG5ldyBTdHJpbmdbXSB7DQpAQCAtMTA4NCw3ICsxMDg0
LDcgQEANCiAJCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDMpXG4iICsgDQogCQkJIglz
d2l0Y2goYXJnc1swXSkge1xuIiArIA0KIAkJCSIJICAgICAgIF5eXl5eXl5cbiIgKyANCi0JCQki
Q2Fubm90IHN3aXRjaCBvbiBhIHZhbHVlIG9mIHR5cGUgU3RyaW5nIGZvciBzb3VyY2UgbGV2ZWwg
YmVsb3cgMS43LiBPbmx5IGNvbnZlcnRpYmxlIGludCB2YWx1ZXMgb3IgZW51bSBjb25zdGFudHMg
YXJlIHBlcm1pdHRlZFxuIiArIA0KKwkJCSJDYW5ub3Qgc3dpdGNoIG9uIGEgdmFsdWUgb2YgdHlw
ZSBTdHJpbmcgZm9yIHNvdXJjZSBsZXZlbCBiZWxvdyAxLjcuIE9ubHkgY29udmVydGlibGUgaW50
IHZhbHVlcyBvciBlbnVtIHZhcmlhYmxlcyBhcmUgcGVybWl0dGVkXG4iICsgDQogCQkJIi0tLS0t
LS0tLS1cbiIgKyANCiAJCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDYpXG4iICsgDQog
CQkJIglkZWZhdWx0OiByZXR1cm4gYXJncztcbiIgKyANCkBAIC0xMTU3LDcgKzExNTcsNyBAQA0K
IAkJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgOClcbiIgKyANCiAJCQkiCXN3aXRjaChh
cmdzWzBdKSB7XG4iICsgDQogCQkJIgkgICAgICAgXl5eXl5eXlxuIiArIA0KLQkJCSJDYW5ub3Qg
c3dpdGNoIG9uIGEgdmFsdWUgb2YgdHlwZSBTdHJpbmcgZm9yIHNvdXJjZSBsZXZlbCBiZWxvdyAx
LjcuIE9ubHkgY29udmVydGlibGUgaW50IHZhbHVlcyBvciBlbnVtIGNvbnN0YW50cyBhcmUgcGVy
bWl0dGVkXG4iICsgDQorCQkJIkNhbm5vdCBzd2l0Y2ggb24gYSB2YWx1ZSBvZiB0eXBlIFN0cmlu
ZyBmb3Igc291cmNlIGxldmVsIGJlbG93IDEuNy4gT25seSBjb252ZXJ0aWJsZSBpbnQgdmFsdWVz
IG9yIGVudW0gdmFyaWFibGVzIGFyZSBwZXJtaXR0ZWRcbiIgKyANCiAJCQkiLS0tLS0tLS0tLVxu
IiArIA0KIAkJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTUpXG4iICsgDQogCQkJIglj
YXNlIGlmaWVsZDogYnJlYWs7XG4iICsgDQpAQCAtMTIzNyw3ICsxMjM3LDcgQEANCiAJCQkiMS4g
RVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDYpXG4iICsgDQogCQkJIglzd2l0Y2goYXJnc1swXSkg
e1xuIiArIA0KIAkJCSIJICAgICAgIF5eXl5eXl5cbiIgKyANCi0JCQkiQ2Fubm90IHN3aXRjaCBv
biBhIHZhbHVlIG9mIHR5cGUgU3RyaW5nIGZvciBzb3VyY2UgbGV2ZWwgYmVsb3cgMS43LiBPbmx5
IGNvbnZlcnRpYmxlIGludCB2YWx1ZXMgb3IgZW51bSBjb25zdGFudHMgYXJlIHBlcm1pdHRlZFxu
IiArIA0KKwkJCSJDYW5ub3Qgc3dpdGNoIG9uIGEgdmFsdWUgb2YgdHlwZSBTdHJpbmcgZm9yIHNv
dXJjZSBsZXZlbCBiZWxvdyAxLjcuIE9ubHkgY29udmVydGlibGUgaW50IHZhbHVlcyBvciBlbnVt
IHZhcmlhYmxlcyBhcmUgcGVybWl0dGVkXG4iICsgDQogCQkJIi0tLS0tLS0tLS1cbiI7DQogCQkJ
CQ0KIAkJdGhpcy5ydW5OZWdhdGl2ZVRlc3QobmV3IFN0cmluZ1tdIHsNCkBAIC0xMjc5LDcgKzEy
NzksNyBAQA0KIAkJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNilcbiIgKyANCiAJCQki
CXN3aXRjaChhcmdzWzBdKSB7XG4iICsgDQogCQkJIgkgICAgICAgXl5eXl5eXlxuIiArIA0KLQkJ
CSJDYW5ub3Qgc3dpdGNoIG9uIGEgdmFsdWUgb2YgdHlwZSBTdHJpbmcgZm9yIHNvdXJjZSBsZXZl
bCBiZWxvdyAxLjcuIE9ubHkgY29udmVydGlibGUgaW50IHZhbHVlcyBvciBlbnVtIGNvbnN0YW50
cyBhcmUgcGVybWl0dGVkXG4iICsgDQorCQkJIkNhbm5vdCBzd2l0Y2ggb24gYSB2YWx1ZSBvZiB0
eXBlIFN0cmluZyBmb3Igc291cmNlIGxldmVsIGJlbG93IDEuNy4gT25seSBjb252ZXJ0aWJsZSBp
bnQgdmFsdWVzIG9yIGVudW0gdmFyaWFibGVzIGFyZSBwZXJtaXR0ZWRcbiIgKyANCiAJCQkiLS0t
LS0tLS0tLVxuIjsNCiAJCQkJDQogCQl0aGlzLnJ1bk5lZ2F0aXZlVGVzdChuZXcgU3RyaW5nW10g
ew0KQEAgLTEzNDYsNyArMTM0Niw3IEBADQogCQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGlu
ZSA2KVxuIiArIA0KIAkJCSIJc3dpdGNoKGFyZ3NbMF0pIHtcbiIgKyANCiAJCQkiCSAgICAgICBe
Xl5eXl5eXG4iICsgDQotCQkJIkNhbm5vdCBzd2l0Y2ggb24gYSB2YWx1ZSBvZiB0eXBlIFN0cmlu
ZyBmb3Igc291cmNlIGxldmVsIGJlbG93IDEuNy4gT25seSBjb252ZXJ0aWJsZSBpbnQgdmFsdWVz
IG9yIGVudW0gY29uc3RhbnRzIGFyZSBwZXJtaXR0ZWRcbiIgKyANCisJCQkiQ2Fubm90IHN3aXRj
aCBvbiBhIHZhbHVlIG9mIHR5cGUgU3RyaW5nIGZvciBzb3VyY2UgbGV2ZWwgYmVsb3cgMS43LiBP
bmx5IGNvbnZlcnRpYmxlIGludCB2YWx1ZXMgb3IgZW51bSB2YXJpYWJsZXMgYXJlIHBlcm1pdHRl
ZFxuIiArIA0KIAkJCSItLS0tLS0tLS0tXG4iOw0KIAkJCQkNCiAJCXRoaXMucnVuTmVnYXRpdmVU
ZXN0KG5ldyBTdHJpbmdbXSB7DQpAQCAtMTQwOSw3ICsxNDA5LDcgQEANCiAJCQkiMS4gRVJST1Ig
aW4gWC5qYXZhIChhdCBsaW5lIDgpXG4iICsgDQogCQkJIglzd2l0Y2goYXJnc1swXSkge1xuIiAr
IA0KIAkJCSIJICAgICAgIF5eXl5eXl5cbiIgKyANCi0JCQkiQ2Fubm90IHN3aXRjaCBvbiBhIHZh
bHVlIG9mIHR5cGUgU3RyaW5nIGZvciBzb3VyY2UgbGV2ZWwgYmVsb3cgMS43LiBPbmx5IGNvbnZl
cnRpYmxlIGludCB2YWx1ZXMgb3IgZW51bSBjb25zdGFudHMgYXJlIHBlcm1pdHRlZFxuIiArIA0K
KwkJCSJDYW5ub3Qgc3dpdGNoIG9uIGEgdmFsdWUgb2YgdHlwZSBTdHJpbmcgZm9yIHNvdXJjZSBs
ZXZlbCBiZWxvdyAxLjcuIE9ubHkgY29udmVydGlibGUgaW50IHZhbHVlcyBvciBlbnVtIHZhcmlh
YmxlcyBhcmUgcGVybWl0dGVkXG4iICsgDQogCQkJIi0tLS0tLS0tLS1cbiIgKyANCiAJCQkiMi4g
RVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDE4KVxuIiArIA0KIAkJCSIJZGVmYXVsdDogYnJlYWs7
XG4iICsgDQpAQCAtMTQ1MCw3ICsxNDUwLDcgQEANCiAJCSIxLiBFUlJPUiBpbiB0ZXN0RHVwbGlj
YXRlSGFzaENvZGUuamF2YSAoYXQgbGluZSA1KVxuIiArIA0KIAkJIglzd2l0Y2ggKGRpc3BhdGNo
ZXIpIHtcbiIgKyANCiAJCSIJICAgICAgICBeXl5eXl5eXl5eXG4iICsgDQotCQkiQ2Fubm90IHN3
aXRjaCBvbiBhIHZhbHVlIG9mIHR5cGUgU3RyaW5nIGZvciBzb3VyY2UgbGV2ZWwgYmVsb3cgMS43
LiBPbmx5IGNvbnZlcnRpYmxlIGludCB2YWx1ZXMgb3IgZW51bSBjb25zdGFudHMgYXJlIHBlcm1p
dHRlZFxuIiArIA0KKwkJIkNhbm5vdCBzd2l0Y2ggb24gYSB2YWx1ZSBvZiB0eXBlIFN0cmluZyBm
b3Igc291cmNlIGxldmVsIGJlbG93IDEuNy4gT25seSBjb252ZXJ0aWJsZSBpbnQgdmFsdWVzIG9y
IGVudW0gdmFyaWFibGVzIGFyZSBwZXJtaXR0ZWRcbiIgKyANCiAJCSItLS0tLS0tLS0tXG4iOw0K
IAkNCiAJU3RyaW5nIFtdIHNvdXJjZUZpbGVzID0gDQpAQCAtMTUwNiw3ICsxNTA2LDcgQEANCiAJ
CSIxLiBFUlJPUiBpbiB0ZXN0RHVwbGljYXRlSGFzaENvZGUuamF2YSAoYXQgbGluZSA1KVxuIiAr
IA0KIAkJIglzd2l0Y2ggKGRpc3BhdGNoZXIpIHtcbiIgKyANCiAJCSIJICAgICAgICBeXl5eXl5e
Xl5eXG4iICsgDQotCQkiQ2Fubm90IHN3aXRjaCBvbiBhIHZhbHVlIG9mIHR5cGUgU3RyaW5nIGZv
ciBzb3VyY2UgbGV2ZWwgYmVsb3cgMS43LiBPbmx5IGNvbnZlcnRpYmxlIGludCB2YWx1ZXMgb3Ig
ZW51bSBjb25zdGFudHMgYXJlIHBlcm1pdHRlZFxuIiArIA0KKwkJIkNhbm5vdCBzd2l0Y2ggb24g
YSB2YWx1ZSBvZiB0eXBlIFN0cmluZyBmb3Igc291cmNlIGxldmVsIGJlbG93IDEuNy4gT25seSBj
b252ZXJ0aWJsZSBpbnQgdmFsdWVzIG9yIGVudW0gdmFyaWFibGVzIGFyZSBwZXJtaXR0ZWRcbiIg
KyANCiAJCSItLS0tLS0tLS0tXG4iOw0KIAkNCiAJU3RyaW5nIFtdIHNvdXJjZUZpbGVzID0gDQpA
QCAtMTU2OSwyNyArMTU2OSwyNyBAQA0KIAkJIjEuIEVSUk9SIGluIHRlc3RTd2l0Y2hPbk51bGwu
amF2YSAoYXQgbGluZSAxMylcbiIgKyANCiAJCSIJc3dpdGNoIChzKSB7XG4iICsgDQogCQkiCSAg
ICAgICAgXlxuIiArIA0KLQkJIkNhbm5vdCBzd2l0Y2ggb24gYSB2YWx1ZSBvZiB0eXBlIFN0cmlu
ZyBmb3Igc291cmNlIGxldmVsIGJlbG93IDEuNy4gT25seSBjb252ZXJ0aWJsZSBpbnQgdmFsdWVz
IG9yIGVudW0gY29uc3RhbnRzIGFyZSBwZXJtaXR0ZWRcbiIgKyANCisJCSJDYW5ub3Qgc3dpdGNo
IG9uIGEgdmFsdWUgb2YgdHlwZSBTdHJpbmcgZm9yIHNvdXJjZSBsZXZlbCBiZWxvdyAxLjcuIE9u
bHkgY29udmVydGlibGUgaW50IHZhbHVlcyBvciBlbnVtIHZhcmlhYmxlcyBhcmUgcGVybWl0dGVk
XG4iICsgDQogCQkiLS0tLS0tLS0tLVxuIiArIA0KIAkJIjIuIEVSUk9SIGluIHRlc3RTd2l0Y2hP
bk51bGwuamF2YSAoYXQgbGluZSAyMylcbiIgKyANCiAJCSIJc3dpdGNoICgoU3RyaW5nKSBudWxs
KSB7XG4iICsgDQogCQkiCSAgICAgICAgXl5eXl5eXl5eXl5eXlxuIiArIA0KLQkJIkNhbm5vdCBz
d2l0Y2ggb24gYSB2YWx1ZSBvZiB0eXBlIFN0cmluZyBmb3Igc291cmNlIGxldmVsIGJlbG93IDEu
Ny4gT25seSBjb252ZXJ0aWJsZSBpbnQgdmFsdWVzIG9yIGVudW0gY29uc3RhbnRzIGFyZSBwZXJt
aXR0ZWRcbiIgKyANCisJCSJDYW5ub3Qgc3dpdGNoIG9uIGEgdmFsdWUgb2YgdHlwZSBTdHJpbmcg
Zm9yIHNvdXJjZSBsZXZlbCBiZWxvdyAxLjcuIE9ubHkgY29udmVydGlibGUgaW50IHZhbHVlcyBv
ciBlbnVtIHZhcmlhYmxlcyBhcmUgcGVybWl0dGVkXG4iICsgDQogCQkiLS0tLS0tLS0tLVxuIiAr
IA0KIAkJIjMuIEVSUk9SIGluIHRlc3RTd2l0Y2hPbk51bGwuamF2YSAoYXQgbGluZSAzMylcbiIg
KyANCiAJCSIJc3dpdGNoIChzb21lTWV0aG9kKCkpIHtcbiIgKyANCiAJCSIJICAgICAgICBeXl5e
Xl5eXl5eXl5cbiIgKyANCi0JCSJDYW5ub3Qgc3dpdGNoIG9uIGEgdmFsdWUgb2YgdHlwZSBTdHJp
bmcgZm9yIHNvdXJjZSBsZXZlbCBiZWxvdyAxLjcuIE9ubHkgY29udmVydGlibGUgaW50IHZhbHVl
cyBvciBlbnVtIGNvbnN0YW50cyBhcmUgcGVybWl0dGVkXG4iICsgDQorCQkiQ2Fubm90IHN3aXRj
aCBvbiBhIHZhbHVlIG9mIHR5cGUgU3RyaW5nIGZvciBzb3VyY2UgbGV2ZWwgYmVsb3cgMS43LiBP
bmx5IGNvbnZlcnRpYmxlIGludCB2YWx1ZXMgb3IgZW51bSB2YXJpYWJsZXMgYXJlIHBlcm1pdHRl
ZFxuIiArIA0KIAkJIi0tLS0tLS0tLS1cbiIgKyANCiAJCSI0LiBFUlJPUiBpbiB0ZXN0U3dpdGNo
T25OdWxsLmphdmEgKGF0IGxpbmUgNDApXG4iICsgDQogCQkiCXN3aXRjaCAobnVsbFN0cmluZykg
e1xuIiArIA0KIAkJIgkgICAgICAgIF5eXl5eXl5eXl5cbiIgKyANCi0JCSJDYW5ub3Qgc3dpdGNo
IG9uIGEgdmFsdWUgb2YgdHlwZSBTdHJpbmcgZm9yIHNvdXJjZSBsZXZlbCBiZWxvdyAxLjcuIE9u
bHkgY29udmVydGlibGUgaW50IHZhbHVlcyBvciBlbnVtIGNvbnN0YW50cyBhcmUgcGVybWl0dGVk
XG4iICsgDQorCQkiQ2Fubm90IHN3aXRjaCBvbiBhIHZhbHVlIG9mIHR5cGUgU3RyaW5nIGZvciBz
b3VyY2UgbGV2ZWwgYmVsb3cgMS43LiBPbmx5IGNvbnZlcnRpYmxlIGludCB2YWx1ZXMgb3IgZW51
bSB2YXJpYWJsZXMgYXJlIHBlcm1pdHRlZFxuIiArIA0KIAkJIi0tLS0tLS0tLS1cbiIgKyANCiAJ
CSI1LiBFUlJPUiBpbiB0ZXN0U3dpdGNoT25OdWxsLmphdmEgKGF0IGxpbmUgNDcpXG4iICsgDQog
CQkiCXN3aXRjaCAoc29tZU1ldGhvZCgpKSB7XG4iICsgDQogCQkiCSAgICAgICAgXl5eXl5eXl5e
Xl5eXG4iICsgDQotCQkiQ2Fubm90IHN3aXRjaCBvbiBhIHZhbHVlIG9mIHR5cGUgU3RyaW5nIGZv
ciBzb3VyY2UgbGV2ZWwgYmVsb3cgMS43LiBPbmx5IGNvbnZlcnRpYmxlIGludCB2YWx1ZXMgb3Ig
ZW51bSBjb25zdGFudHMgYXJlIHBlcm1pdHRlZFxuIiArIA0KKwkJIkNhbm5vdCBzd2l0Y2ggb24g
YSB2YWx1ZSBvZiB0eXBlIFN0cmluZyBmb3Igc291cmNlIGxldmVsIGJlbG93IDEuNy4gT25seSBj
b252ZXJ0aWJsZSBpbnQgdmFsdWVzIG9yIGVudW0gdmFyaWFibGVzIGFyZSBwZXJtaXR0ZWRcbiIg
KyANCiAJCSItLS0tLS0tLS0tXG4iOw0KIAkNCiAJU3RyaW5nIFtdIHNvdXJjZUZpbGVzID0gDQpA
QCAtMTY2NSw3ICsxNjY1LDcgQEANCiAJCSIxLiBFUlJPUiBpbiB0ZXN0U2lkZUVmZmVjdC5qYXZh
IChhdCBsaW5lIDExKVxuIiArIA0KIAkJIglzd2l0Y2goZGlzcGF0Y2hlcigpKSB7XG4iICsgDQog
CQkiCSAgICAgICBeXl5eXl5eXl5eXl5cbiIgKyANCi0JCSJDYW5ub3Qgc3dpdGNoIG9uIGEgdmFs
dWUgb2YgdHlwZSBTdHJpbmcgZm9yIHNvdXJjZSBsZXZlbCBiZWxvdyAxLjcuIE9ubHkgY29udmVy
dGlibGUgaW50IHZhbHVlcyBvciBlbnVtIGNvbnN0YW50cyBhcmUgcGVybWl0dGVkXG4iICsgDQor
CQkiQ2Fubm90IHN3aXRjaCBvbiBhIHZhbHVlIG9mIHR5cGUgU3RyaW5nIGZvciBzb3VyY2UgbGV2
ZWwgYmVsb3cgMS43LiBPbmx5IGNvbnZlcnRpYmxlIGludCB2YWx1ZXMgb3IgZW51bSB2YXJpYWJs
ZXMgYXJlIHBlcm1pdHRlZFxuIiArIA0KIAkJIi0tLS0tLS0tLS1cbiI7DQogCQ0KIAlTdHJpbmcg
W10gc291cmNlRmlsZXMgPSANCkBAIC0xNzAzLDcgKzE3MDMsNyBAQA0KIAkJIjEuIEVSUk9SIGlu
IHRlc3RGYWxsVGhyb3VnaC5qYXZhIChhdCBsaW5lIDExKVxuIiArIA0KIAkJIglzd2l0Y2gocyA9
IGRpc3BhdGNoZXIoKSkge1xuIiArIA0KIAkJIgkgICAgICAgXl5eXl5eXl5eXl5eXl5eXlxuIiAr
IA0KLQkJIkNhbm5vdCBzd2l0Y2ggb24gYSB2YWx1ZSBvZiB0eXBlIFN0cmluZyBmb3Igc291cmNl
IGxldmVsIGJlbG93IDEuNy4gT25seSBjb252ZXJ0aWJsZSBpbnQgdmFsdWVzIG9yIGVudW0gY29u
c3RhbnRzIGFyZSBwZXJtaXR0ZWRcbiIgKyANCisJCSJDYW5ub3Qgc3dpdGNoIG9uIGEgdmFsdWUg
b2YgdHlwZSBTdHJpbmcgZm9yIHNvdXJjZSBsZXZlbCBiZWxvdyAxLjcuIE9ubHkgY29udmVydGli
bGUgaW50IHZhbHVlcyBvciBlbnVtIHZhcmlhYmxlcyBhcmUgcGVybWl0dGVkXG4iICsgDQogCQki
LS0tLS0tLS0tLVxuIjsNCiAJDQogCVN0cmluZyBbXSBzb3VyY2VGaWxlcyA9IA0KQEAgLTE3NTMs
NyArMTc1Myw3IEBADQogCQkiMS4gRVJST1IgaW4gdGVzdEZhbGxUaHJvdWdoLmphdmEgKGF0IGxp
bmUgMTEpXG4iICsgDQogCQkiCXN3aXRjaChzID0gZGlzcGF0Y2hlcigpKSB7XG4iICsgDQogCQki
CSAgICAgICBeXl5eXl5eXl5eXl5eXl5eXG4iICsgDQotCQkiQ2Fubm90IHN3aXRjaCBvbiBhIHZh
bHVlIG9mIHR5cGUgU3RyaW5nIGZvciBzb3VyY2UgbGV2ZWwgYmVsb3cgMS43LiBPbmx5IGNvbnZl
cnRpYmxlIGludCB2YWx1ZXMgb3IgZW51bSBjb25zdGFudHMgYXJlIHBlcm1pdHRlZFxuIiArIA0K
KwkJIkNhbm5vdCBzd2l0Y2ggb24gYSB2YWx1ZSBvZiB0eXBlIFN0cmluZyBmb3Igc291cmNlIGxl
dmVsIGJlbG93IDEuNy4gT25seSBjb252ZXJ0aWJsZSBpbnQgdmFsdWVzIG9yIGVudW0gdmFyaWFi
bGVzIGFyZSBwZXJtaXR0ZWRcbiIgKyANCiAJCSItLS0tLS0tLS0tXG4iOw0KIAkNCiAJU3RyaW5n
IFtdIHNvdXJjZUZpbGVzID0gDQpAQCAtMTc5OCw3ICsxNzk4LDcgQEANCiAJCSIxLiBFUlJPUiBp
biB0ZXN0TWFyeXNMYW1iLmphdmEgKGF0IGxpbmUgNClcbiIgKyANCiAJCSIJc3dpdGNoKHMpIHtc
biIgKyANCiAJCSIJICAgICAgIF5cbiIgKyANCi0JCSJDYW5ub3Qgc3dpdGNoIG9uIGEgdmFsdWUg
b2YgdHlwZSBTdHJpbmcgZm9yIHNvdXJjZSBsZXZlbCBiZWxvdyAxLjcuIE9ubHkgY29udmVydGli
bGUgaW50IHZhbHVlcyBvciBlbnVtIGNvbnN0YW50cyBhcmUgcGVybWl0dGVkXG4iICsgDQorCQki
Q2Fubm90IHN3aXRjaCBvbiBhIHZhbHVlIG9mIHR5cGUgU3RyaW5nIGZvciBzb3VyY2UgbGV2ZWwg
YmVsb3cgMS43LiBPbmx5IGNvbnZlcnRpYmxlIGludCB2YWx1ZXMgb3IgZW51bSB2YXJpYWJsZXMg
YXJlIHBlcm1pdHRlZFxuIiArIA0KIAkJIi0tLS0tLS0tLS1cbiI7DQogCQ0KIAlTdHJpbmcgW10g
c291cmNlRmlsZXMgPSANCkBAIC0xODI2LDcgKzE4MjYsNyBAQA0KIAkJIjEuIEVSUk9SIGluIHRl
c3RCcmVha091dC5qYXZhIChhdCBsaW5lIDUpXG4iICsgDQogCQkiCXN3aXRjaChzKSB7XG4iICsg
DQogCQkiCSAgICAgICBeXG4iICsgDQotCQkiQ2Fubm90IHN3aXRjaCBvbiBhIHZhbHVlIG9mIHR5
cGUgU3RyaW5nIGZvciBzb3VyY2UgbGV2ZWwgYmVsb3cgMS43LiBPbmx5IGNvbnZlcnRpYmxlIGlu
dCB2YWx1ZXMgb3IgZW51bSBjb25zdGFudHMgYXJlIHBlcm1pdHRlZFxuIiArIA0KKwkJIkNhbm5v
dCBzd2l0Y2ggb24gYSB2YWx1ZSBvZiB0eXBlIFN0cmluZyBmb3Igc291cmNlIGxldmVsIGJlbG93
IDEuNy4gT25seSBjb252ZXJ0aWJsZSBpbnQgdmFsdWVzIG9yIGVudW0gdmFyaWFibGVzIGFyZSBw
ZXJtaXR0ZWRcbiIgKyANCiAJCSItLS0tLS0tLS0tXG4iOw0KIAkNCiAJU3RyaW5nIFtdIHNvdXJj
ZUZpbGVzID0gDQpAQCAtMTg2NCwxNyArMTg2NCwxNyBAQA0KIAkJIjEuIEVSUk9SIGluIFguamF2
YSAoYXQgbGluZSA2KVxuIiArIA0KIAkJIglzd2l0Y2ggKHMpIHtcbiIgKyANCiAJCSIJICAgICAg
ICBeXG4iICsgDQotCQkiQ2Fubm90IHN3aXRjaCBvbiBhIHZhbHVlIG9mIHR5cGUgU3RyaW5nIGZv
ciBzb3VyY2UgbGV2ZWwgYmVsb3cgMS43LiBPbmx5IGNvbnZlcnRpYmxlIGludCB2YWx1ZXMgb3Ig
ZW51bSBjb25zdGFudHMgYXJlIHBlcm1pdHRlZFxuIiArIA0KKwkJIkNhbm5vdCBzd2l0Y2ggb24g
YSB2YWx1ZSBvZiB0eXBlIFN0cmluZyBmb3Igc291cmNlIGxldmVsIGJlbG93IDEuNy4gT25seSBj
b252ZXJ0aWJsZSBpbnQgdmFsdWVzIG9yIGVudW0gdmFyaWFibGVzIGFyZSBwZXJtaXR0ZWRcbiIg
KyANCiAJCSItLS0tLS0tLS0tXG4iICsgDQogCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5l
IDM1KVxuIiArIA0KIAkJIglzd2l0Y2ggKHMpIHtcbiIgKyANCiAJCSIJICAgICAgICBeXG4iICsg
DQotCQkiQ2Fubm90IHN3aXRjaCBvbiBhIHZhbHVlIG9mIHR5cGUgU3RyaW5nIGZvciBzb3VyY2Ug
bGV2ZWwgYmVsb3cgMS43LiBPbmx5IGNvbnZlcnRpYmxlIGludCB2YWx1ZXMgb3IgZW51bSBjb25z
dGFudHMgYXJlIHBlcm1pdHRlZFxuIiArIA0KKwkJIkNhbm5vdCBzd2l0Y2ggb24gYSB2YWx1ZSBv
ZiB0eXBlIFN0cmluZyBmb3Igc291cmNlIGxldmVsIGJlbG93IDEuNy4gT25seSBjb252ZXJ0aWJs
ZSBpbnQgdmFsdWVzIG9yIGVudW0gdmFyaWFibGVzIGFyZSBwZXJtaXR0ZWRcbiIgKyANCiAJCSIt
LS0tLS0tLS0tXG4iICsgDQogCQkiMy4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDUxKVxuIiAr
IA0KIAkJIglzd2l0Y2ggKHMpIHtcbiIgKyANCiAJCSIJICAgICAgICBeXG4iICsgDQotCQkiQ2Fu
bm90IHN3aXRjaCBvbiBhIHZhbHVlIG9mIHR5cGUgU3RyaW5nIGZvciBzb3VyY2UgbGV2ZWwgYmVs
b3cgMS43LiBPbmx5IGNvbnZlcnRpYmxlIGludCB2YWx1ZXMgb3IgZW51bSBjb25zdGFudHMgYXJl
IHBlcm1pdHRlZFxuIiArIA0KKwkJIkNhbm5vdCBzd2l0Y2ggb24gYSB2YWx1ZSBvZiB0eXBlIFN0
cmluZyBmb3Igc291cmNlIGxldmVsIGJlbG93IDEuNy4gT25seSBjb252ZXJ0aWJsZSBpbnQgdmFs
dWVzIG9yIGVudW0gdmFyaWFibGVzIGFyZSBwZXJtaXR0ZWRcbiIgKyANCiAJCSItLS0tLS0tLS0t
XG4iOw0KIAkNCiAJU3RyaW5nIFtdIHNvdXJjZUZpbGVzID0gDQpAQCAtMTk2NiwxNyArMTk2Niwx
NyBAQA0KIAkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA0KVxuIiArIA0KIAkJIglzd2l0
Y2ggKHMpIHtcbiIgKyANCiAJCSIJICAgICAgICBeXG4iICsgDQotCQkiQ2Fubm90IHN3aXRjaCBv
biBhIHZhbHVlIG9mIHR5cGUgU3RyaW5nIGZvciBzb3VyY2UgbGV2ZWwgYmVsb3cgMS43LiBPbmx5
IGNvbnZlcnRpYmxlIGludCB2YWx1ZXMgb3IgZW51bSBjb25zdGFudHMgYXJlIHBlcm1pdHRlZFxu
IiArIA0KKwkJIkNhbm5vdCBzd2l0Y2ggb24gYSB2YWx1ZSBvZiB0eXBlIFN0cmluZyBmb3Igc291
cmNlIGxldmVsIGJlbG93IDEuNy4gT25seSBjb252ZXJ0aWJsZSBpbnQgdmFsdWVzIG9yIGVudW0g
dmFyaWFibGVzIGFyZSBwZXJtaXR0ZWRcbiIgKyANCiAJCSItLS0tLS0tLS0tXG4iICsgDQogCQki
Mi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDcpXG4iICsgDQogCQkiCXN3aXRjaCAocykge1xu
IiArIA0KIAkJIgkgICAgICAgIF5cbiIgKyANCi0JCSJDYW5ub3Qgc3dpdGNoIG9uIGEgdmFsdWUg
b2YgdHlwZSBTdHJpbmcgZm9yIHNvdXJjZSBsZXZlbCBiZWxvdyAxLjcuIE9ubHkgY29udmVydGli
bGUgaW50IHZhbHVlcyBvciBlbnVtIGNvbnN0YW50cyBhcmUgcGVybWl0dGVkXG4iICsgDQorCQki
Q2Fubm90IHN3aXRjaCBvbiBhIHZhbHVlIG9mIHR5cGUgU3RyaW5nIGZvciBzb3VyY2UgbGV2ZWwg
YmVsb3cgMS43LiBPbmx5IGNvbnZlcnRpYmxlIGludCB2YWx1ZXMgb3IgZW51bSB2YXJpYWJsZXMg
YXJlIHBlcm1pdHRlZFxuIiArIA0KIAkJIi0tLS0tLS0tLS1cbiIgKyANCiAJCSIzLiBFUlJPUiBp
biBYLmphdmEgKGF0IGxpbmUgMTgpXG4iICsgDQogCQkiCXN3aXRjaCAocykge1xuIiArIA0KIAkJ
IgkgICAgICAgIF5cbiIgKyANCi0JCSJDYW5ub3Qgc3dpdGNoIG9uIGEgdmFsdWUgb2YgdHlwZSBT
dHJpbmcgZm9yIHNvdXJjZSBsZXZlbCBiZWxvdyAxLjcuIE9ubHkgY29udmVydGlibGUgaW50IHZh
bHVlcyBvciBlbnVtIGNvbnN0YW50cyBhcmUgcGVybWl0dGVkXG4iICsgDQorCQkiQ2Fubm90IHN3
aXRjaCBvbiBhIHZhbHVlIG9mIHR5cGUgU3RyaW5nIGZvciBzb3VyY2UgbGV2ZWwgYmVsb3cgMS43
LiBPbmx5IGNvbnZlcnRpYmxlIGludCB2YWx1ZXMgb3IgZW51bSB2YXJpYWJsZXMgYXJlIHBlcm1p
dHRlZFxuIiArIA0KIAkJIi0tLS0tLS0tLS1cbiI7DQogCQ0KIAlTdHJpbmcgW10gc291cmNlRmls
ZXMgPSANCg==
</data>

          </attachment>
      

    </bug>

</bugzilla>