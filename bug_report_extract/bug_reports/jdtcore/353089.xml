<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>353089</bug_id>
          
          <creation_ts>2011-07-26 06:01:00 -0400</creation_ts>
          <short_desc>[1.7][compiler] Incorrect name clash error with ecj</short_desc>
          <delta_ts>2011-09-14 12:35:42 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.7</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.7.1</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Ayushman Jain">amj87.iitr</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>jarthana</cc>
    
    <cc>satyam.kandula</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="44989"
          type_id="1"
          status="+"
          setter="satyam.kandula"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1970120</commentid>
    <comment_count>0</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-07-26 06:01:27 -0400</bug_when>
    <thetext>BETA_JAVA7

import java.util.*;

interface A {
int get(List&lt;String&gt; l);
}

interface B  {
int get(List&lt;Integer&gt; l);
}

interface C  extends A, B { 
int get(List l);      // name clash error here
}

This code compiles fine with javac 7b147, not with ecj.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1970121</commentid>
    <comment_count>1</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-07-26 06:02:51 -0400</bug_when>
    <thetext>This was fixed in javac 7 via oracle bug http://bugs.sun.com/view_bug.do?bug_id=7020657</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1970164</commentid>
    <comment_count>2</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-07-26 07:27:04 -0400</bug_when>
    <thetext>Another example, may be related :

public abstract class Bug extends SuperBug
{
	abstract &lt;T extends Bug&gt; T clone () throws CloneNotSupportedException;
}

class SuperBug
{
	@Override
	public SuperBug clone () throws CloneNotSupportedException
	{
		return (SuperBug) super.clone ();
	}
}

This also compiles fine with javac7b147</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1975270</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-08-08 02:39:21 -0400</bug_when>
    <thetext>(In reply to comment #2)
&gt; Another example, may be related :

I think this problem is unrelated - as this is not a regression with respect
to 3.6.

The comment# 0 test case is a regression introduced by the fix for 
bug 334306</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1975281</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-08-08 03:30:36 -0400</bug_when>
    <thetext>(In reply to comment #3)


&gt; The comment# 0 test case is a regression introduced by the fix for 
&gt; bug 334306

The fix for bug 334306 brought this out, but looks like the problem got
introduced at the time of the fix for bug 175987. Why is the code

	if (one.declaringClass.isInterface()) {
		for (int i = 0; i &lt; length; i++)
			if (!areTypesEqual(oneArgs[i], twoArgs[i]))
				return false;
	} else {

even there in org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15.areParametersEqual(MethodBinding, MethodBinding) ???</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1975314</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-08-08 04:55:59 -0400</bug_when>
    <thetext>(In reply to comment #2)
&gt; Another example, may be related :

I think this test case is the same as the one in bug 345947 and so
this piece will be worked on as part of that fix. I&apos;ll add a comment
to that bug carrying over this test case. This bug itself is not a
regression with respect to 3.6.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1975316</commentid>
    <comment_count>6</comment_count>
      <attachid>201058</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-08-08 04:57:02 -0400</bug_when>
    <thetext>Created attachment 201058
Proposed patch

To make the review easier, I have preserved the original indentation.
Before releasing I&apos;ll reindent the code.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1975318</commentid>
    <comment_count>7</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-08-08 04:57:46 -0400</bug_when>
    <thetext>Satyam, please review, TIA.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1975326</commentid>
    <comment_count>8</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-08-08 05:36:24 -0400</bug_when>
    <thetext>Released in HEAD and 3.7 maintenance branch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1975959</commentid>
    <comment_count>9</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2011-08-09 06:42:45 -0400</bug_when>
    <thetext>There is a difference between ecj and javac7 when the line &apos; int get(List l); &apos; gets commented out. I have filed bug 345947 to track it. This change in behavior is not caused by this bug fix. 

Otherwise, the changes look good. Hence +1 for the changes.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1975960</commentid>
    <comment_count>10</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2011-08-09 06:44:19 -0400</bug_when>
    <thetext>(In reply to comment #9)
&gt; There is a difference between ecj and javac7 when the line &apos; int get(List l); &apos;
&gt; gets commented out. I have filed bug 345947 to track it. This change in
&gt; behavior is not caused by this bug fix. 
&gt; 
&gt; Otherwise, the changes look good. Hence +1 for the changes.

I actually meant bug 354229 and not bug 345947.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1984291</commentid>
    <comment_count>11</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2011-08-25 06:42:57 -0400</bug_when>
    <thetext>Verified for 3.7.1 RC2 with build M20110824-0800.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1993533</commentid>
    <comment_count>12</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-09-14 12:35:42 -0400</bug_when>
    <thetext>Verified for 3.8M2 using build I20110911-2000.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>201058</attachid>
            <date>2011-08-08 04:57:00 -0400</date>
            <delta_ts>2011-08-08 04:57:02 -0400</delta_ts>
            <desc>Proposed patch</desc>
            <filename>patch.txt</filename>
            <type>text/plain</type>
            <size>6229</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3Vw
L01ldGhvZFZlcmlmaWVyMTUuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2Vj
bGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RWZXJpZmllcjE1LmphdmEsdg0KcmV0cmlldmluZyBy
ZXZpc2lvbiAxLjEyNQ0KZGlmZiAtdSAtcjEuMTI1IE1ldGhvZFZlcmlmaWVyMTUuamF2YQ0KLS0t
IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvTWV0aG9k
VmVyaWZpZXIxNS5qYXZhCTI4IEp1bCAyMDExIDE3OjA3OjIyIC0wMDAwCTEuMTI1DQorKysgY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RWZXJp
ZmllcjE1LmphdmEJOCBBdWcgMjAxMSAwODo1NTozOSAtMDAwMA0KQEAgLTQ2LDExICs0Niw3IEBA
DQogCWludCBsZW5ndGggPSBvbmVBcmdzLmxlbmd0aDsNCiAJaWYgKGxlbmd0aCAhPSB0d29Bcmdz
Lmxlbmd0aCkgcmV0dXJuIGZhbHNlOw0KIA0KLQlpZiAob25lLmRlY2xhcmluZ0NsYXNzLmlzSW50
ZXJmYWNlKCkpIHsNCi0JCWZvciAoaW50IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspDQotCQkJaWYg
KCFhcmVUeXBlc0VxdWFsKG9uZUFyZ3NbaV0sIHR3b0FyZ3NbaV0pKQ0KLQkJCQlyZXR1cm4gZmFs
c2U7DQotCX0gZWxzZSB7DQorCXsNCiAJCS8vIG1ldGhvZHMgd2l0aCByYXcgcGFyYW1ldGVycyBh
cmUgY29uc2lkZXJlZCBlcXVhbCB0byBpbmhlcml0ZWQgbWV0aG9kcw0KIAkJLy8gd2l0aCBwYXJh
bWV0ZXJpemVkIHBhcmFtZXRlcnMgZm9yIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5LCBuZWVkIGEg
bW9yZSBjb21wbGV4IGNoZWNrDQogCQlpbnQgaTsNCiNQIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLmNvbXBpbGVyDQpJbmRleDogc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBp
bGVyL3JlZ3Jlc3Npb24vTWV0aG9kVmVyaWZ5VGVzdC5qYXZhDQo9PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmls
ZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9NZXRob2RW
ZXJpZnlUZXN0LmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjIyNA0KZGlmZiAtdSAtcjEu
MjI0IE1ldGhvZFZlcmlmeVRlc3QuamF2YQ0KLS0tIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90
ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL01ldGhvZFZlcmlmeVRlc3QuamF2YQkyOCBKdWwgMjAx
MSAxNzowNjoyNCAtMDAwMAkxLjIyNA0KKysrIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9jb21waWxlci9yZWdyZXNzaW9uL01ldGhvZFZlcmlmeVRlc3QuamF2YQk4IEF1ZyAyMDExIDA4
OjU1OjQyIC0wMDAwDQpAQCAtMTIzMjgsNCArMTIzMjgsMTEyIEBADQogCQkiVGhlIG1ldGhvZCBm
KFN0cmluZykgaXMgYW1iaWd1b3VzIGZvciB0aGUgdHlwZSBCPFN0cmluZz5cbiIgKyANCiAJCSIt
LS0tLS0tLS0tXG4iKTsNCiB9DQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hv
d19idWcuY2dpP2lkPTM1MzA4OQ0KK3B1YmxpYyB2b2lkIHRlc3QzNTMwODkoKSB0aHJvd3MgRXhj
ZXB0aW9uIHsNCisJdGhpcy5ydW5Db25mb3JtVGVzdCgNCisJCW5ldyBTdHJpbmdbXSB7DQorCQkJ
IlguamF2YSIsDQorCQkJImltcG9ydCBqYXZhLnV0aWwuKjtcbiIgKw0KKwkJCSJpbnRlcmZhY2Ug
QSB7XG4iICsNCisJCQkiaW50IGdldChMaXN0PFN0cmluZz4gbCk7XG4iICsNCisJCQkifVxuIiAr
DQorCQkJImludGVyZmFjZSBCICB7XG4iICsNCisJCQkiaW50IGdldChMaXN0PEludGVnZXI+IGwp
O1xuIiArDQorCQkJIn1cbiIgKw0KKwkJCSJpbnRlcmZhY2UgQyAgZXh0ZW5kcyBBLCBCIHsgXG4i
ICsNCisJCQkiaW50IGdldChMaXN0IGwpOyAgICAgIC8vIG5hbWUgY2xhc2ggZXJyb3IgaGVyZVxu
IiArDQorICAgICAgICAgICAgIn1cbiIgKw0KKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsNCisg
ICAgICAgICAgICAiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7
XG4iICsNCisJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oXCJCdWlsdCBPS1wiKTtcbiIg
Kw0KKyAgICAgICAgICAgICIgICAgfVxuIiArDQorCQkJIn0iDQorCQl9LA0KKwkJIkJ1aWx0IE9L
Iik7DQorfQ0KKy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9p
ZD0zNTMwODkNCitwdWJsaWMgdm9pZCB0ZXN0MzUzMDg5YigpIHRocm93cyBFeGNlcHRpb24gew0K
Kwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgNCisJCW5ldyBTdHJpbmdbXSB7DQorCQkJIlguamF2YSIs
DQorCQkJImltcG9ydCBqYXZhLnV0aWwuTGlzdDtcbiIgKw0KKwkJCSJpbnRlcmZhY2UgSSB7XG4i
ICsNCisJCQkiICAgIHZvaWQgYShMaXN0PFN0cmluZz4gaSwgTGlzdDxTdHJpbmc+IGopO1xuIiAr
DQorCQkJIiAgICB2b2lkIGIoTGlzdDxTdHJpbmc+IGksIExpc3Q8U3RyaW5nPiBqKTtcbiIgKw0K
KwkJCSIgICAgdm9pZCBjKExpc3QgaSwgTGlzdDxTdHJpbmc+IGopO1xuIiArDQorCQkJIn1cbiIg
Kw0KKwkJCSJpbnRlcmZhY2UgWCBleHRlbmRzIEkge1xuIiArDQorCQkJIiAgICBwdWJsaWMgdm9p
ZCBhKExpc3Q8U3RyaW5nPiBpLCBMaXN0IGopO1xuIiArDQorCQkJIiAgICBwdWJsaWMgdm9pZCBi
KExpc3QgaSwgTGlzdCBqKTtcbiIgKw0KKwkJCSIgICAgcHVibGljIHZvaWQgYyhMaXN0IGksIExp
c3Qgaik7XG4iICsNCisJCQkiICAgIHB1YmxpYyB2b2lkIGQoWm9yayB6KTtcbiIgKw0KKwkJCSJ9
XG4iDQorCQl9LA0KKwkJIi0tLS0tLS0tLS1cbiIgKyANCisJCSIxLiBXQVJOSU5HIGluIFguamF2
YSAoYXQgbGluZSA1KVxuIiArIA0KKwkJIgl2b2lkIGMoTGlzdCBpLCBMaXN0PFN0cmluZz4gaik7
XG4iICsgDQorCQkiCSAgICAgICBeXl5eXG4iICsgDQorCQkiTGlzdCBpcyBhIHJhdyB0eXBlLiBS
ZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBMaXN0PEU+IHNob3VsZCBiZSBwYXJhbWV0ZXJpemVk
XG4iICsgDQorCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJIjIuIEVSUk9SIGluIFguamF2YSAoYXQg
bGluZSA4KVxuIiArIA0KKwkJIglwdWJsaWMgdm9pZCBhKExpc3Q8U3RyaW5nPiBpLCBMaXN0IGop
O1xuIiArIA0KKwkJIgkgICAgICAgICAgICBeXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXG4iICsg
DQorCQkiTmFtZSBjbGFzaDogVGhlIG1ldGhvZCBhKExpc3Q8U3RyaW5nPiwgTGlzdCkgb2YgdHlw
ZSBYIGhhcyB0aGUgc2FtZSBlcmFzdXJlIGFzIGEoTGlzdDxTdHJpbmc+LCBMaXN0PFN0cmluZz4p
IG9mIHR5cGUgSSBidXQgZG9lcyBub3Qgb3ZlcnJpZGUgaXRcbiIgKyANCisJCSItLS0tLS0tLS0t
XG4iICsgDQorCQkiMy4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUgOClcbiIgKyANCisJCSIJ
cHVibGljIHZvaWQgYShMaXN0PFN0cmluZz4gaSwgTGlzdCBqKTtcbiIgKyANCisJCSIJICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgXl5eXlxuIiArIA0KKwkJIkxpc3QgaXMgYSByYXcgdHlw
ZS4gUmVmZXJlbmNlcyB0byBnZW5lcmljIHR5cGUgTGlzdDxFPiBzaG91bGQgYmUgcGFyYW1ldGVy
aXplZFxuIiArIA0KKwkJIi0tLS0tLS0tLS1cbiIgKyANCisJCSI0LiBXQVJOSU5HIGluIFguamF2
YSAoYXQgbGluZSA5KVxuIiArIA0KKwkJIglwdWJsaWMgdm9pZCBiKExpc3QgaSwgTGlzdCBqKTtc
biIgKyANCisJCSIJICAgICAgICAgICAgICBeXl5eXG4iICsgDQorCQkiTGlzdCBpcyBhIHJhdyB0
eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBMaXN0PEU+IHNob3VsZCBiZSBwYXJhbWV0
ZXJpemVkXG4iICsgDQorCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJIjUuIFdBUk5JTkcgaW4gWC5q
YXZhIChhdCBsaW5lIDkpXG4iICsgDQorCQkiCXB1YmxpYyB2b2lkIGIoTGlzdCBpLCBMaXN0IGop
O1xuIiArIA0KKwkJIgkgICAgICAgICAgICAgICAgICAgICAgXl5eXlxuIiArIA0KKwkJIkxpc3Qg
aXMgYSByYXcgdHlwZS4gUmVmZXJlbmNlcyB0byBnZW5lcmljIHR5cGUgTGlzdDxFPiBzaG91bGQg
YmUgcGFyYW1ldGVyaXplZFxuIiArIA0KKwkJIi0tLS0tLS0tLS1cbiIgKyANCisJCSI2LiBXQVJO
SU5HIGluIFguamF2YSAoYXQgbGluZSAxMClcbiIgKyANCisJCSIJcHVibGljIHZvaWQgYyhMaXN0
IGksIExpc3Qgaik7XG4iICsgDQorCQkiCSAgICAgICAgICAgICAgXl5eXlxuIiArIA0KKwkJIkxp
c3QgaXMgYSByYXcgdHlwZS4gUmVmZXJlbmNlcyB0byBnZW5lcmljIHR5cGUgTGlzdDxFPiBzaG91
bGQgYmUgcGFyYW1ldGVyaXplZFxuIiArIA0KKwkJIi0tLS0tLS0tLS1cbiIgKyANCisJCSI3LiBX
QVJOSU5HIGluIFguamF2YSAoYXQgbGluZSAxMClcbiIgKyANCisJCSIJcHVibGljIHZvaWQgYyhM
aXN0IGksIExpc3Qgaik7XG4iICsgDQorCQkiCSAgICAgICAgICAgICAgICAgICAgICBeXl5eXG4i
ICsgDQorCQkiTGlzdCBpcyBhIHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBM
aXN0PEU+IHNob3VsZCBiZSBwYXJhbWV0ZXJpemVkXG4iICsgDQorCQkiLS0tLS0tLS0tLVxuIiAr
IA0KKwkJIjguIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxMSlcbiIgKyANCisJCSIJcHVibGlj
IHZvaWQgZChab3JrIHopO1xuIiArIA0KKwkJIgkgICAgICAgICAgICAgIF5eXl5cbiIgKyANCisJ
CSJab3JrIGNhbm5vdCBiZSByZXNvbHZlZCB0byBhIHR5cGVcbiIgKyANCisJCSItLS0tLS0tLS0t
XG4iKTsNCit9DQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTM1MzA4OQ0KK3B1YmxpYyB2b2lkIHRlc3QzNTMwODljKCkgdGhyb3dzIEV4Y2VwdGlvbiB7
DQorCXRoaXMucnVuTmVnYXRpdmVUZXN0KA0KKwkJbmV3IFN0cmluZ1tdIHsNCisJCQkiWC5qYXZh
IiwNCisJCQkiaW1wb3J0IGphdmEudXRpbC5MaXN0O1xuIiArDQorCQkJImludGVyZmFjZSBJRnRl
c3Qge1xuIiArDQorCQkJIiAgICBwdWJsaWMgdm9pZCBkb1Rlc3QoSW50ZWdlciBpLCBMaXN0PFN0
cmluZz4gcExpc3QsIExpc3Q8U3RyaW5nPiBwTGlzdDIpO1xuIiArDQorCQkJIn1cbiIgKw0KKwkJ
CSJpbnRlcmZhY2UgSW1wbCBleHRlbmRzIElGdGVzdCB7XG4iICsNCisJCQkiICAgIHB1YmxpYyB2
b2lkIGRvVGVzdChJbnRlZ2VyIGksIExpc3Q8U3RyaW5nPiBpTGlzdCwgTGlzdCBpTGlzdDIpO1xu
IiArDQorCQkJIn1cbiINCisJCX0sDQorCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJIjEuIEVSUk9S
IGluIFguamF2YSAoYXQgbGluZSA2KVxuIiArIA0KKwkJIglwdWJsaWMgdm9pZCBkb1Rlc3QoSW50
ZWdlciBpLCBMaXN0PFN0cmluZz4gaUxpc3QsIExpc3QgaUxpc3QyKTtcbiIgKyANCisJCSIJICAg
ICAgICAgICAgXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5cbiIgKyANCisJCSJOYW1lIGNsYXNoOiBUaGUgbWV0aG9kIGRvVGVzdChJbnRlZ2VyLCBMaXN0
PFN0cmluZz4sIExpc3QpIG9mIHR5cGUgSW1wbCBoYXMgdGhlIHNhbWUgZXJhc3VyZSBhcyBkb1Rl
c3QoSW50ZWdlciwgTGlzdDxTdHJpbmc+LCBMaXN0PFN0cmluZz4pIG9mIHR5cGUgSUZ0ZXN0IGJ1
dCBkb2VzIG5vdCBvdmVycmlkZSBpdFxuIiArIA0KKwkJIi0tLS0tLS0tLS1cbiIgKyANCisJCSIy
LiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSA2KVxuIiArIA0KKwkJIglwdWJsaWMgdm9pZCBk
b1Rlc3QoSW50ZWdlciBpLCBMaXN0PFN0cmluZz4gaUxpc3QsIExpc3QgaUxpc3QyKTtcbiIgKyAN
CisJCSIJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBe
Xl5eXG4iICsgDQorCQkiTGlzdCBpcyBhIHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMg
dHlwZSBMaXN0PEU+IHNob3VsZCBiZSBwYXJhbWV0ZXJpemVkXG4iICsgDQorCQkiLS0tLS0tLS0t
LVxuIik7DQorfQ0KIH0NCg==
</data>

          </attachment>
      

    </bug>

</bugzilla>