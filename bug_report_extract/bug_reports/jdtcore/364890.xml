<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>364890</bug_id>
          
          <creation_ts>2011-11-26 10:36:00 -0500</creation_ts>
          <short_desc>BinaryTypeBinding should use char constants from Util</short_desc>
          <delta_ts>2012-01-23 09:45:39 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.8</version>
          <rep_platform>Other</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>trivial</bug_severity>
          <target_milestone>3.8 M5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Stephan Herrmann">stephan.herrmann</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>amj87.iitr</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2032263</commentid>
    <comment_count>0</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-11-26 10:36:11 -0500</bug_when>
    <thetext>(In reply to bug 186342 comment #150)
&gt; (In reply to bug 186342 comment #146)
&gt; &gt; 1) In
&gt; &gt; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.scanMethodForNullAnnotation(IBinaryMethod,
&gt; &gt; MethodBinding) and scanTypeForNullAnnotation(..), the constant
&gt; &gt; org.eclipse.jdt.core.Signature.C_RESOLVED should be used instead of character
&gt; &gt; &apos;L&apos;.
&gt; 
&gt; Even better: org.eclipse.jdt.internal.compiler.util.Util since
&gt; org.eclipse.jdt.core.Signature isn&apos;t available for ecj :)
&gt; While we&apos;re at it: should I make the same change also for other occurrences
&gt; of &apos;L&apos; within BinaryTypeBinding?

It turns out, BinaryTypeBinding could use the constants from class Util
in quite a few places.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2032264</commentid>
    <comment_count>1</comment_count>
      <attachid>207566</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-11-26 10:40:14 -0500</bug_when>
    <thetext>Created attachment 207566
proposed changes</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2043907</commentid>
    <comment_count>2</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-12-22 09:37:45 -0500</bug_when>
    <thetext>Released for 3.8 M5 via commit 6e5a548d86606bf19201f8e25ff7972af2431caf</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2054407</commentid>
    <comment_count>3</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-01-23 09:45:39 -0500</bug_when>
    <thetext>Verified for 3.8M5 using code inspection</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>207566</attachid>
            <date>2011-11-26 10:40:00 -0500</date>
            <delta_ts>2011-11-26 10:40:14 -0500</delta_ts>
            <desc>proposed changes</desc>
            <filename>Bug_364890.patch</filename>
            <type>text/plain</type>
            <size>9122</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQmluYXJ5VHlwZUJpbmRpbmcuamF2YSBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9sb29rdXAvQmluYXJ5VHlwZUJpbmRpbmcuamF2YQppbmRleCA0MWVmYTUwLi42YjQzMjNkIDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0JpbmFyeVR5cGVCaW5kaW5nLmphdmEKKysrIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2xvb2t1cC9CaW5hcnlUeXBlQmluZGluZy5qYXZhCkBAIC0xNjAsNyArMTYwLDcgQEAKIAkg
ICBvZiBnZW5lcmljcy4KIAkgKi8KIAljaGFyW10gdHlwZVNpZ25hdHVyZSA9IGJpbmFyeVR5cGUu
Z2V0R2VuZXJpY1NpZ25hdHVyZSgpOwotCXRoaXMudHlwZVZhcmlhYmxlcyA9IHR5cGVTaWduYXR1
cmUgIT0gbnVsbCAmJiB0eXBlU2lnbmF0dXJlLmxlbmd0aCA+IDAgJiYgdHlwZVNpZ25hdHVyZVsw
XSA9PSAnPCcKKwl0aGlzLnR5cGVWYXJpYWJsZXMgPSB0eXBlU2lnbmF0dXJlICE9IG51bGwgJiYg
dHlwZVNpZ25hdHVyZS5sZW5ndGggPiAwICYmIHR5cGVTaWduYXR1cmVbMF0gPT0gVXRpbC5DX0dF
TkVSSUNfU1RBUlQKIAkJPyBudWxsIC8vIGlzIGluaXRpYWxpemVkIGluIGNhY2hlUGFydHNGcm9t
IChjYWxsZWQgZnJvbSBMb29rdXBFbnZpcm9ubWVudC5jcmVhdGVCaW5hcnlUeXBlRnJvbSgpKS4u
LiBtdXN0IHNldCB0byBudWxsIHNvIGlzR2VuZXJpY1R5cGUoKSBhbnN3ZXJzIHRydWUKIAkJOiBC
aW5kaW5nLk5PX1RZUEVfVkFSSUFCTEVTOwogCkBAIC0zMTAsNyArMzEwLDcgQEAKIAkJaWYgKHR5
cGVTaWduYXR1cmUgIT0gbnVsbCkgewogCQkJLy8gQ2xhc3NTaWduYXR1cmUgPSBQYXJhbWV0ZXJQ
YXJ0KG9wdGlvbmFsKSBzdXBlcl9UeXBlU2lnbmF0dXJlIGludGVyZmFjZV9zaWduYXR1cmUKIAkJ
CXdyYXBwZXIgPSBuZXcgU2lnbmF0dXJlV3JhcHBlcih0eXBlU2lnbmF0dXJlKTsKLQkJCWlmICh3
cmFwcGVyLnNpZ25hdHVyZVt3cmFwcGVyLnN0YXJ0XSA9PSAnPCcpIHsKKwkJCWlmICh3cmFwcGVy
LnNpZ25hdHVyZVt3cmFwcGVyLnN0YXJ0XSA9PSBVdGlsLkNfR0VORVJJQ19TVEFSVCkgewogCQkJ
CS8vIFBhcmFtZXRlclBhcnQgPSAnPCcgUGFyYW1ldGVyU2lnbmF0dXJlKHMpICc+JwogCQkJCXdy
YXBwZXIuc3RhcnQrKzsgLy8gc2tpcCAnPCcKIAkJCQl0aGlzLnR5cGVWYXJpYWJsZXMgPSBjcmVh
dGVUeXBlVmFyaWFibGVzKHdyYXBwZXIsIHRydWUsIG1pc3NpbmdUeXBlTmFtZXMpOwpAQCAtNDY3
LDExICs0NjcsMTEgQEAKIAkJaW50IG51bU9mUGFyYW1zID0gMDsKIAkJY2hhciBuZXh0Q2hhcjsK
IAkJaW50IGluZGV4ID0gMDsgLy8gZmlyc3QgY2hhcmFjdGVyIGlzIGFsd2F5cyAnKCcgc28gc2tp
cCBpdAotCQl3aGlsZSAoKG5leHRDaGFyID0gbWV0aG9kRGVzY3JpcHRvclsrK2luZGV4XSkgIT0g
JyknKSB7Ci0JCQlpZiAobmV4dENoYXIgIT0gJ1snKSB7CisJCXdoaWxlICgobmV4dENoYXIgPSBt
ZXRob2REZXNjcmlwdG9yWysraW5kZXhdKSAhPSBVdGlsLkNfUEFSQU1fRU5EKSB7CisJCQlpZiAo
bmV4dENoYXIgIT0gVXRpbC5DX0FSUkFZKSB7CiAJCQkJbnVtT2ZQYXJhbXMrKzsKLQkJCQlpZiAo
bmV4dENoYXIgPT0gJ0wnKQotCQkJCQl3aGlsZSAoKG5leHRDaGFyID0gbWV0aG9kRGVzY3JpcHRv
clsrK2luZGV4XSkgIT0gJzsnKXsvKmVtcHR5Ki99CisJCQkJaWYgKG5leHRDaGFyID09IFV0aWwu
Q19SRVNPTFZFRCkKKwkJCQkJd2hpbGUgKChuZXh0Q2hhciA9IG1ldGhvZERlc2NyaXB0b3JbKytp
bmRleF0pICE9IFV0aWwuQ19OQU1FX0VORCl7LyplbXB0eSovfQogCQkJfQogCQl9CiAKQEAgLTQ5
NSw5ICs0OTUsOSBAQAogCQkJaW5kZXggPSAxOwogCQkJaW50IGVuZCA9IDA7ICAgLy8gZmlyc3Qg
Y2hhcmFjdGVyIGlzIGFsd2F5cyAnKCcgc28gc2tpcCBpdAogCQkJZm9yIChpbnQgaSA9IDA7IGkg
PCBudW1PZlBhcmFtczsgaSsrKSB7Ci0JCQkJd2hpbGUgKChuZXh0Q2hhciA9IG1ldGhvZERlc2Ny
aXB0b3JbKytlbmRdKSA9PSAnWycpey8qZW1wdHkqL30KLQkJCQlpZiAobmV4dENoYXIgPT0gJ0wn
KQotCQkJCQl3aGlsZSAoKG5leHRDaGFyID0gbWV0aG9kRGVzY3JpcHRvclsrK2VuZF0pICE9ICc7
Jyl7LyplbXB0eSovfQorCQkJCXdoaWxlICgobmV4dENoYXIgPSBtZXRob2REZXNjcmlwdG9yWysr
ZW5kXSkgPT0gVXRpbC5DX0FSUkFZKXsvKmVtcHR5Ki99CisJCQkJaWYgKG5leHRDaGFyID09IFV0
aWwuQ19SRVNPTFZFRCkKKwkJCQkJd2hpbGUgKChuZXh0Q2hhciA9IG1ldGhvZERlc2NyaXB0b3Jb
KytlbmRdKSAhPSBVdGlsLkNfTkFNRV9FTkQpey8qZW1wdHkqL30KIAogCQkJCWlmIChpID49IHN0
YXJ0SW5kZXgpIHsgICAvLyBza2lwIHRoZSBzeW50aGV0aWMgYXJnIGlmIG5lY2Vzc2FyeQogCQkJ
CQlwYXJhbWV0ZXJzW2kgLSBzdGFydEluZGV4XSA9IHRoaXMuZW52aXJvbm1lbnQuZ2V0VHlwZUZy
b21TaWduYXR1cmUobWV0aG9kRGVzY3JpcHRvciwgaW5kZXgsIGVuZCwgZmFsc2UsIHRoaXMsIG1p
c3NpbmdUeXBlTmFtZXMpOwpAQCAtNTI2LDcgKzUyNiw3IEBACiAJCW1ldGhvZE1vZGlmaWVycyB8
PSBFeHRyYUNvbXBpbGVyTW9kaWZpZXJzLkFjY0dlbmVyaWNTaWduYXR1cmU7CiAJCS8vIE1ldGhv
ZFR5cGVTaWduYXR1cmUgPSBQYXJhbWV0ZXJQYXJ0KG9wdGlvbmFsKSAnKCcgVHlwZVNpZ25hdHVy
ZXMgJyknIHJldHVybl90eXBlU2lnbmF0dXJlIFsnXicgVHlwZVNpZ25hdHVyZSAob3B0aW9uYWwp
XQogCQlTaWduYXR1cmVXcmFwcGVyIHdyYXBwZXIgPSBuZXcgU2lnbmF0dXJlV3JhcHBlcihtZXRo
b2RTaWduYXR1cmUsIHVzZTE1c3BlY2lmaWNzKTsKLQkJaWYgKHdyYXBwZXIuc2lnbmF0dXJlW3dy
YXBwZXIuc3RhcnRdID09ICc8JykgeworCQlpZiAod3JhcHBlci5zaWduYXR1cmVbd3JhcHBlci5z
dGFydF0gPT0gVXRpbC5DX0dFTkVSSUNfU1RBUlQpIHsKIAkJCS8vIDxBOjpMamF2YS9sYW5nL2Fu
bm90YXRpb24vQW5ub3RhdGlvbjs+KExqYXZhL2xhbmcvQ2xhc3M8VEE7PjspVEE7CiAJCQkvLyBQ
YXJhbWV0ZXJQYXJ0ID0gJzwnIFBhcmFtZXRlclNpZ25hdHVyZShzKSAnPicKIAkJCXdyYXBwZXIu
c3RhcnQrKzsgLy8gc2tpcCAnPCcKQEAgLTUzNCwxMyArNTM0LDEzIEBACiAJCQl3cmFwcGVyLnN0
YXJ0Kys7IC8vIHNraXAgJz4nCiAJCX0KIAotCQlpZiAod3JhcHBlci5zaWduYXR1cmVbd3JhcHBl
ci5zdGFydF0gPT0gJygnKSB7CisJCWlmICh3cmFwcGVyLnNpZ25hdHVyZVt3cmFwcGVyLnN0YXJ0
XSA9PSBVdGlsLkNfUEFSQU1fU1RBUlQpIHsKIAkJCXdyYXBwZXIuc3RhcnQrKzsgLy8gc2tpcCAn
KCcKLQkJCWlmICh3cmFwcGVyLnNpZ25hdHVyZVt3cmFwcGVyLnN0YXJ0XSA9PSAnKScpIHsKKwkJ
CWlmICh3cmFwcGVyLnNpZ25hdHVyZVt3cmFwcGVyLnN0YXJ0XSA9PSBVdGlsLkNfUEFSQU1fRU5E
KSB7CiAJCQkJd3JhcHBlci5zdGFydCsrOyAvLyBza2lwICcpJwogCQkJfSBlbHNlIHsKIAkJCQlq
YXZhLnV0aWwuQXJyYXlMaXN0IHR5cGVzID0gbmV3IGphdmEudXRpbC5BcnJheUxpc3QoMik7Ci0J
CQkJd2hpbGUgKHdyYXBwZXIuc2lnbmF0dXJlW3dyYXBwZXIuc3RhcnRdICE9ICcpJykKKwkJCQl3
aGlsZSAod3JhcHBlci5zaWduYXR1cmVbd3JhcHBlci5zdGFydF0gIT0gVXRpbC5DX1BBUkFNX0VO
RCkKIAkJCQkJdHlwZXMuYWRkKHRoaXMuZW52aXJvbm1lbnQuZ2V0VHlwZUZyb21UeXBlU2lnbmF0
dXJlKHdyYXBwZXIsIHR5cGVWYXJzLCB0aGlzLCBtaXNzaW5nVHlwZU5hbWVzKSk7CiAJCQkJd3Jh
cHBlci5zdGFydCsrOyAvLyBza2lwICcpJwogCQkJCWludCBudW1QYXJhbSA9IHR5cGVzLnNpemUo
KTsKQEAgLTU1NywxMyArNTU3LDEzIEBACiAJCS8vIGFsd2F5cyByZXRyaWV2ZSByZXR1cm4gdHlw
ZSAoZm9yIGNvbnN0cnVjdG9ycywgaXRzIFYgZm9yIHZvaWQgLSB3aWxsIGJlIGlnbm9yZWQpCiAJ
CXJldHVyblR5cGUgPSB0aGlzLmVudmlyb25tZW50LmdldFR5cGVGcm9tVHlwZVNpZ25hdHVyZSh3
cmFwcGVyLCB0eXBlVmFycywgdGhpcywgbWlzc2luZ1R5cGVOYW1lcyk7CiAKLQkJaWYgKCF3cmFw
cGVyLmF0RW5kKCkgJiYgd3JhcHBlci5zaWduYXR1cmVbd3JhcHBlci5zdGFydF0gPT0gJ14nKSB7
CisJCWlmICghd3JhcHBlci5hdEVuZCgpICYmIHdyYXBwZXIuc2lnbmF0dXJlW3dyYXBwZXIuc3Rh
cnRdID09IFV0aWwuQ19FWENFUFRJT05fU1RBUlQpIHsKIAkJCS8vIGF0dGVtcHQgdG8gZmluZCBl
YWNoIGV4Y2VwdGlvbiBpZiBpdCBleGlzdHMgaW4gdGhlIGNhY2hlIChvdGhlcndpc2UgLSByZXNv
bHZlIGl0IHdoZW4gcmVxdWVzdGVkKQogCQkJamF2YS51dGlsLkFycmF5TGlzdCB0eXBlcyA9IG5l
dyBqYXZhLnV0aWwuQXJyYXlMaXN0KDIpOwogCQkJZG8gewogCQkJCXdyYXBwZXIuc3RhcnQrKzsg
Ly8gc2tpcCAnXicKIAkJCQl0eXBlcy5hZGQodGhpcy5lbnZpcm9ubWVudC5nZXRUeXBlRnJvbVR5
cGVTaWduYXR1cmUod3JhcHBlciwgdHlwZVZhcnMsIHRoaXMsIG1pc3NpbmdUeXBlTmFtZXMpKTsK
LQkJCX0gd2hpbGUgKCF3cmFwcGVyLmF0RW5kKCkgJiYgd3JhcHBlci5zaWduYXR1cmVbd3JhcHBl
ci5zdGFydF0gPT0gJ14nKTsKKwkJCX0gd2hpbGUgKCF3cmFwcGVyLmF0RW5kKCkgJiYgd3JhcHBl
ci5zaWduYXR1cmVbd3JhcHBlci5zdGFydF0gPT0gVXRpbC5DX0VYQ0VQVElPTl9TVEFSVCk7CiAJ
CQlleGNlcHRpb25zID0gbmV3IFJlZmVyZW5jZUJpbmRpbmdbdHlwZXMuc2l6ZSgpXTsKIAkJCXR5
cGVzLnRvQXJyYXkoZXhjZXB0aW9ucyk7CiAJCX0gZWxzZSB7IC8vIGdldCB0aGUgZXhjZXB0aW9u
cyB0aGUgb2xkIHdheQpAQCAtNjIxLDcgKzYyMSw3IEBACiAJCQkJdG90YWwtLTsKIAkJCX0gZWxz
ZSBpZiAoaUNsaW5pdCA9PSAtMSkgewogCQkJCWNoYXJbXSBtZXRob2ROYW1lID0gbWV0aG9kLmdl
dFNlbGVjdG9yKCk7Ci0JCQkJaWYgKG1ldGhvZE5hbWUubGVuZ3RoID09IDggJiYgbWV0aG9kTmFt
ZVswXSA9PSAnPCcpIHsKKwkJCQlpZiAobWV0aG9kTmFtZS5sZW5ndGggPT0gOCAmJiBtZXRob2RO
YW1lWzBdID09IFV0aWwuQ19HRU5FUklDX1NUQVJUKSB7CiAJCQkJCS8vIGRpc2NhcmQgPGNsaW5p
dD4KIAkJCQkJaUNsaW5pdCA9IGk7CiAJCQkJCXRvdGFsLS07CkBAIC02NjYsMjEgKzY2NiwyMSBA
QAogCWNyZWF0ZVZhcmlhYmxlczogewogCQlmb3IgKGludCBpID0gMTsgaSA8IGxlbmd0aDsgaSsr
KSB7CiAJCQlzd2l0Y2godHlwZVNpZ25hdHVyZVtpXSkgewotCQkJCWNhc2UgJzwnIDoKKwkJCQlj
YXNlIFV0aWwuQ19HRU5FUklDX1NUQVJUIDoKIAkJCQkJZGVwdGgrKzsKIAkJCQkJYnJlYWs7Ci0J
CQkJY2FzZSAnPicgOgorCQkJCWNhc2UgVXRpbC5DX0dFTkVSSUNfRU5EIDoKIAkJCQkJaWYgKC0t
ZGVwdGggPCAwKQogCQkJCQkJYnJlYWsgY3JlYXRlVmFyaWFibGVzOwogCQkJCQlicmVhazsKLQkJ
CQljYXNlICc7JyA6Ci0JCQkJCWlmICgoZGVwdGggPT0gMCkgJiYgKGkgKzEgPCBsZW5ndGgpICYm
ICh0eXBlU2lnbmF0dXJlW2krMV0gIT0gJzonKSkKKwkJCQljYXNlIFV0aWwuQ19OQU1FX0VORCA6
CisJCQkJCWlmICgoZGVwdGggPT0gMCkgJiYgKGkgKzEgPCBsZW5ndGgpICYmICh0eXBlU2lnbmF0
dXJlW2krMV0gIT0gVXRpbC5DX0NPTE9OKSkKIAkJCQkJCXBlbmRpbmdWYXJpYWJsZSA9IHRydWU7
CiAJCQkJCWJyZWFrOwogCQkJCWRlZmF1bHQ6CiAJCQkJCWlmIChwZW5kaW5nVmFyaWFibGUpIHsK
IAkJCQkJCXBlbmRpbmdWYXJpYWJsZSA9IGZhbHNlOwotCQkJCQkJaW50IGNvbG9uID0gQ2hhck9w
ZXJhdGlvbi5pbmRleE9mKCc6JywgdHlwZVNpZ25hdHVyZSwgaSk7CisJCQkJCQlpbnQgY29sb24g
PSBDaGFyT3BlcmF0aW9uLmluZGV4T2YoVXRpbC5DX0NPTE9OLCB0eXBlU2lnbmF0dXJlLCBpKTsK
IAkJCQkJCWNoYXJbXSB2YXJpYWJsZU5hbWUgPSBDaGFyT3BlcmF0aW9uLnN1YmFycmF5KHR5cGVT
aWduYXR1cmUsIGksIGNvbG9uKTsKIAkJCQkJCXZhcmlhYmxlcy5hZGQobmV3IFR5cGVWYXJpYWJs
ZUJpbmRpbmcodmFyaWFibGVOYW1lLCB0aGlzLCByYW5rKyssIHRoaXMuZW52aXJvbm1lbnQpKTsK
IAkJCQkJfQpAQCAtNzMzLDcgKzczMyw3IEBACiAKIHByaXZhdGUgTWV0aG9kQmluZGluZyBmaW5k
TWV0aG9kKGNoYXJbXSBtZXRob2REZXNjcmlwdG9yLCBjaGFyW11bXVtdIG1pc3NpbmdUeXBlTmFt
ZXMpIHsKIAlpbnQgaW5kZXggPSAtMTsKLQl3aGlsZSAobWV0aG9kRGVzY3JpcHRvclsrK2luZGV4
XSAhPSAnKCcpIHsKKwl3aGlsZSAobWV0aG9kRGVzY3JpcHRvclsrK2luZGV4XSAhPSBVdGlsLkNf
UEFSQU1fU1RBUlQpIHsKIAkJLy8gZW1wdHkKIAl9CiAJY2hhcltdIHNlbGVjdG9yID0gbmV3IGNo
YXJbaW5kZXhdOwpAQCAtNzQyLDExICs3NDIsMTEgQEAKIAlpbnQgbnVtT2ZQYXJhbXMgPSAwOwog
CWNoYXIgbmV4dENoYXI7CiAJaW50IHBhcmFtU3RhcnQgPSBpbmRleDsKLQl3aGlsZSAoKG5leHRD
aGFyID0gbWV0aG9kRGVzY3JpcHRvclsrK2luZGV4XSkgIT0gJyknKSB7Ci0JCWlmIChuZXh0Q2hh
ciAhPSAnWycpIHsKKwl3aGlsZSAoKG5leHRDaGFyID0gbWV0aG9kRGVzY3JpcHRvclsrK2luZGV4
XSkgIT0gVXRpbC5DX1BBUkFNX0VORCkgeworCQlpZiAobmV4dENoYXIgIT0gVXRpbC5DX0FSUkFZ
KSB7CiAJCQludW1PZlBhcmFtcysrOwotCQkJaWYgKG5leHRDaGFyID09ICdMJykKLQkJCQl3aGls
ZSAoKG5leHRDaGFyID0gbWV0aG9kRGVzY3JpcHRvclsrK2luZGV4XSkgIT0gJzsnKXsvKmVtcHR5
Ki99CisJCQlpZiAobmV4dENoYXIgPT0gVXRpbC5DX1JFU09MVkVEKQorCQkJCXdoaWxlICgobmV4
dENoYXIgPSBtZXRob2REZXNjcmlwdG9yWysraW5kZXhdKSAhPSBVdGlsLkNfTkFNRV9FTkQpey8q
ZW1wdHkqL30KIAkJfQogCX0KIAlpZiAobnVtT2ZQYXJhbXMgPiAwKSB7CkBAIC03NTQsOSArNzU0
LDkgQEAKIAkJaW5kZXggPSBwYXJhbVN0YXJ0ICsgMTsKIAkJaW50IGVuZCA9IHBhcmFtU3RhcnQ7
IC8vIGZpcnN0IGNoYXJhY3RlciBpcyBhbHdheXMgJygnIHNvIHNraXAgaXQKIAkJZm9yIChpbnQg
aSA9IDA7IGkgPCBudW1PZlBhcmFtczsgaSsrKSB7Ci0JCQl3aGlsZSAoKG5leHRDaGFyID0gbWV0
aG9kRGVzY3JpcHRvclsrK2VuZF0pID09ICdbJyl7LyplbXB0eSovfQotCQkJaWYgKG5leHRDaGFy
ID09ICdMJykKLQkJCQl3aGlsZSAoKG5leHRDaGFyID0gbWV0aG9kRGVzY3JpcHRvclsrK2VuZF0p
ICE9ICc7Jyl7LyplbXB0eSovfQorCQkJd2hpbGUgKChuZXh0Q2hhciA9IG1ldGhvZERlc2NyaXB0
b3JbKytlbmRdKSA9PSBVdGlsLkNfQVJSQVkpey8qZW1wdHkqL30KKwkJCWlmIChuZXh0Q2hhciA9
PSBVdGlsLkNfUkVTT0xWRUQpCisJCQkJd2hpbGUgKChuZXh0Q2hhciA9IG1ldGhvZERlc2NyaXB0
b3JbKytlbmRdKSAhPSBVdGlsLkNfTkFNRV9FTkQpey8qZW1wdHkqL30KIAogCQkJVHlwZUJpbmRp
bmcgcGFyYW0gPSB0aGlzLmVudmlyb25tZW50LmdldFR5cGVGcm9tU2lnbmF0dXJlKG1ldGhvZERl
c2NyaXB0b3IsIGluZGV4LCBlbmQsIGZhbHNlLCB0aGlzLCBtaXNzaW5nVHlwZU5hbWVzKTsKIAkJ
CWlmIChwYXJhbSBpbnN0YW5jZW9mIFVucmVzb2x2ZWRSZWZlcmVuY2VCaW5kaW5nKSB7CkBAIC05
OTgsMTAgKzk5OCwxMCBAQAogCS8vIFBhcmFtZXRlclNpZ25hdHVyZSA9IElkZW50aWZpZXIgJzon
IFR5cGVTaWduYXR1cmUKIAkvLyAgIG9yIElkZW50aWZpZXIgJzonIFR5cGVTaWduYXR1cmUob3B0
aW9uYWwpIEludGVyZmFjZUJvdW5kKHMpCiAJLy8gSW50ZXJmYWNlQm91bmQgPSAnOicgVHlwZVNp
Z25hdHVyZQotCWludCBjb2xvbiA9IENoYXJPcGVyYXRpb24uaW5kZXhPZignOicsIHdyYXBwZXIu
c2lnbmF0dXJlLCB3cmFwcGVyLnN0YXJ0KTsKKwlpbnQgY29sb24gPSBDaGFyT3BlcmF0aW9uLmlu
ZGV4T2YoVXRpbC5DX0NPTE9OLCB3cmFwcGVyLnNpZ25hdHVyZSwgd3JhcHBlci5zdGFydCk7CiAJ
d3JhcHBlci5zdGFydCA9IGNvbG9uICsgMTsgLy8gc2tpcCBuYW1lICsgJzonCiAJUmVmZXJlbmNl
QmluZGluZyB0eXBlLCBmaXJzdEJvdW5kID0gbnVsbDsKLQlpZiAod3JhcHBlci5zaWduYXR1cmVb
d3JhcHBlci5zdGFydF0gPT0gJzonKSB7CisJaWYgKHdyYXBwZXIuc2lnbmF0dXJlW3dyYXBwZXIu
c3RhcnRdID09IFV0aWwuQ19DT0xPTikgewogCQl0eXBlID0gdGhpcy5lbnZpcm9ubWVudC5nZXRS
ZXNvbHZlZFR5cGUoVHlwZUNvbnN0YW50cy5KQVZBX0xBTkdfT0JKRUNULCBudWxsKTsKIAl9IGVs
c2UgewogCQlUeXBlQmluZGluZyB0eXBlRnJvbVR5cGVTaWduYXR1cmUgPSB0aGlzLmVudmlyb25t
ZW50LmdldFR5cGVGcm9tVHlwZVNpZ25hdHVyZSh3cmFwcGVyLCBleGlzdGluZ1ZhcmlhYmxlcywg
dGhpcywgbWlzc2luZ1R5cGVOYW1lcyk7CkBAIC0xMDE5LDEyICsxMDE5LDEyIEBACiAJdmFyaWFi
bGUuc3VwZXJjbGFzcyA9IHR5cGU7CiAKIAlSZWZlcmVuY2VCaW5kaW5nW10gYm91bmRzID0gbnVs
bDsKLQlpZiAod3JhcHBlci5zaWduYXR1cmVbd3JhcHBlci5zdGFydF0gPT0gJzonKSB7CisJaWYg
KHdyYXBwZXIuc2lnbmF0dXJlW3dyYXBwZXIuc3RhcnRdID09IFV0aWwuQ19DT0xPTikgewogCQlq
YXZhLnV0aWwuQXJyYXlMaXN0IHR5cGVzID0gbmV3IGphdmEudXRpbC5BcnJheUxpc3QoMik7CiAJ
CWRvIHsKIAkJCXdyYXBwZXIuc3RhcnQrKzsgLy8gc2tpcCAnOicKIAkJCXR5cGVzLmFkZCh0aGlz
LmVudmlyb25tZW50LmdldFR5cGVGcm9tVHlwZVNpZ25hdHVyZSh3cmFwcGVyLCBleGlzdGluZ1Zh
cmlhYmxlcywgdGhpcywgbWlzc2luZ1R5cGVOYW1lcykpOwotCQl9IHdoaWxlICh3cmFwcGVyLnNp
Z25hdHVyZVt3cmFwcGVyLnN0YXJ0XSA9PSAnOicpOworCQl9IHdoaWxlICh3cmFwcGVyLnNpZ25h
dHVyZVt3cmFwcGVyLnN0YXJ0XSA9PSBVdGlsLkNfQ09MT04pOwogCQlib3VuZHMgPSBuZXcgUmVm
ZXJlbmNlQmluZGluZ1t0eXBlcy5zaXplKCldOwogCQl0eXBlcy50b0FycmF5KGJvdW5kcyk7CiAJ
fQo=
</data>

          </attachment>
      

    </bug>

</bugzilla>