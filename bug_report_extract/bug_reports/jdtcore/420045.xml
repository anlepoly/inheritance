<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>420045</bug_id>
          
          <creation_ts>2013-10-22 03:47:00 -0400</creation_ts>
          <short_desc>[1.8][compiler] Pull back temporary bug compatibility mode with javac (report errors as warnings)</short_desc>
          <delta_ts>2015-04-20 02:07:15 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>NEW</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.6</target_milestone>
          
          <blocked>429559</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Jay Arthanareeswaran">jarthana</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>jarthana</cc>
    
    <cc>markus_keller</cc>
    
    <cc>shankhba</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2321481</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-10-22 03:47:31 -0400</bug_when>
    <thetext>BETA_JAVA8: 

As of 8b111, there are a few areas where ECJ and javac differ in that either
javac has a clear bug or has not implemented some part of the spec.

This CR is to make eclipse mimic javac behavior to the extent possible without
introducing bugs that would affect program behavior:

At the moment, there are 3 items:

1. &apos;_&apos; as an identifier triggers a warning in javac, an error in eclipse.
2. Annotations are tolerated on dimensions of a class literal expression
such as int @T [].class.
3. javac does not yet diagnose the illegal scenario of a repeatable annotation
being used along with repeating container.

I propose to make all of these warnings at the moment, leave this CR open and
revert the right behavior before GA. This is so as to minimize surprises. Since
in each case, we warn clearly and since these areas are chosen carefully as
ones not affecting run time behavior, we are good.

As we discover more such areas, we should update the list and republish the
full list as a comment, so up to date issues list can be found by reading
the latest comment rather than having to scan through.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2321497</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-10-22 04:06:54 -0400</bug_when>
    <thetext>For the set of cases identified in comment#0: here is the patch that makes
them warnings instead of errors: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=b31cd8ccd51413655d3e805905e8dd7d1404f391</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2321499</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-10-22 04:08:09 -0400</bug_when>
    <thetext>Will tag this item as blocking bug 380190, since these behaviors must be
reverted before the release.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2330091</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-11-14 05:17:41 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #0)

&gt; 1. &apos;_&apos; as an identifier triggers a warning in javac, an error in eclipse.

See https://bugs.eclipse.org/bugs/show_bug.cgi?id=421711. We are in compliance
with the spec now as well as javac.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2333412</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-11-22 08:53:27 -0500</bug_when>
    <thetext>*** Bug 422337 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2371593</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-05 01:33:53 -0500</bug_when>
    <thetext>In http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=712689471fd4116d08552bca059239228ce897f6 I made annotations
on class literals an error again.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2371595</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-05 01:38:09 -0500</bug_when>
    <thetext>We have only one at the moment.

We emit a warning when the container and the containee are present on the
same element. Javac is silent. It should be an error.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2371611</commentid>
    <comment_count>7</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-05 02:43:48 -0500</bug_when>
    <thetext>In commit http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=4207a2afae6c22729e09d7310b464a6d241a4a46

I am injecting a bug to match javac bug https://bugs.openjdk.java.net/browse/JDK-8031744.

This will have to pulled back at a suitable point and the disabled test
Java8ElementsTests.testTypeAnnotations27 needs to be reenabled.

Javac 8b129 is failing this test while eclipse is passing.

An preference has been introduced to control the behavior: 

org.eclipse.jdt.core.compiler.emulateJavacBug8031744 (enabled/disabled)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2475394</commentid>
    <comment_count>8</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-11-02 23:19:24 -0500</bug_when>
    <thetext>Jay, at some point we should check if javac behavior has changed and
eliminate the bugs we injected to be compatible. I didn&apos;t check the
present status.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2478455</commentid>
    <comment_count>9</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-11-07 01:48:28 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #8)
&gt; Jay, at some point we should check if javac behavior has changed and
&gt; eliminate the bugs we injected to be compatible. I didn&apos;t check the
&gt; present status.

As of jdk-8u25, the status hasn&apos;t changed</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2513496</commentid>
    <comment_count>10</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2015-02-03 04:22:01 -0500</bug_when>
    <thetext>No change as of jdk-8u31. For future reference, here&apos;s the test case:

import java.lang.annotation.Inherited;
import java.lang.annotation.Repeatable;

@IFooContainer({@IFoo(1), @IFoo(2)}) @IFoo(1)
public class X {}

@Repeatable(IFooContainer.class)
@Inherited
@interface IFoo {
	int value() default -1;
}
@Inherited
@interface IFooContainer {
	IFoo [] value();
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2513572</commentid>
    <comment_count>11</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2015-02-03 05:56:47 -0500</bug_when>
    <thetext>(In reply to Jay Arthanareeswaran from comment #10)
&gt; No change as of jdk-8u31. For future reference, here&apos;s the test case:
&gt; 
&gt; import java.lang.annotation.Inherited;
&gt; import java.lang.annotation.Repeatable;
&gt; 
&gt; @IFooContainer({@IFoo(1), @IFoo(2)}) @IFoo(1)
&gt; public class X {}
&gt; 
&gt; @Repeatable(IFooContainer.class)
&gt; @Inherited
&gt; @interface IFoo {
&gt; 	int value() default -1;
&gt; }
&gt; @Inherited
&gt; @interface IFooContainer {
&gt; 	IFoo [] value();
&gt; }

Just to be sure, we&apos;re on the same page: we are waiting for javac to report an error, right?

Also javac 1.8.0_40-ea is silent.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2513616</commentid>
    <comment_count>12</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2015-02-03 08:00:45 -0500</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #11)
&gt; Just to be sure, we&apos;re on the same page: we are waiting for javac to report
&gt; an error, right?

Yes.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2548420</commentid>
    <comment_count>13</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2015-04-20 02:07:15 -0400</bug_when>
    <thetext>As of jdk-8u45, status quo remains.

I wonder if there are plans to address these in the Oracle compiler. For now moving out of Mars.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>