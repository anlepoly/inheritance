<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>427164</bug_id>
          
          <creation_ts>2014-01-31 17:04:00 -0500</creation_ts>
          <short_desc>[1.8][inference] NPE in ConstraintExpressionFormula.reduce:71</short_desc>
          <delta_ts>2014-03-11 20:21:34 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>427059</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Stephan Herrmann">stephan.herrmann</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>manju656</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2357398</commentid>
    <comment_count>0</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-01-31 17:04:07 -0500</bug_when>
    <thetext>This nonsense code (note the syntax error):

import java.util.*;

@FunctionalInterface
interface FInter {
	String allToString(List&lt;String&gt; input);
}

public abstract class NNLambda {
	abstract &lt;INP&gt; void printem(FInter conv, INP single);
	
	void test() {
		printem((i) -&gt; {
				Collections.&lt;String&gt;singletonList(&quot;const&quot;) // missing &apos;;&apos;
			}, 
			&quot;single&quot;);
	}
}

triggers this NPE:

java.lang.NullPointerException
	at org.eclipse.jdt.internal.compiler.lookup.ConstraintExpressionFormula.reduce(ConstraintExpressionFormula.java:71)
	at org.eclipse.jdt.internal.compiler.lookup.BoundSet.reduceOneConstraint(BoundSet.java:642)
	at org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.inferInvocationType(InferenceContext18.java:450)
	at org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.inferInvocationType(InferenceContext18.java:502)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.inferInvocationType(Scope.java:5039)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.findDefaultAbstractMethod(Scope.java:1261)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.findMethod0(Scope.java:1731)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.findMethod(Scope.java:1626)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.getImplicitMethod(Scope.java:2571)
	at org.eclipse.jdt.internal.compiler.ast.MessageSend.findMethodBinding(MessageSend.java:861)
	at org.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType(MessageSend.java:694)
	at org.eclipse.jdt.internal.compiler.ast.Expression.resolve(Expression.java:1018)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements(AbstractMethodDeclaration.java:621)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements(MethodDeclaration.java:303)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:532)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1211)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1321)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:571)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2357417</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-01-31 18:16:12 -0500</bug_when>
    <thetext>Note for reproducing: the test needs statement recovery.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2357752</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-03 03:14:44 -0500</bug_when>
    <thetext>I have verified that this has been fixed with the commit http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=93dc25294a36977649983cf027f3b2ea56005bf2

The NPE does occur anymore and ECJ behavior matches javac 8b126.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2374667</commentid>
    <comment_count>3</comment_count>
    <who name="Manju Mathew">manju656</who>
    <bug_when>2014-03-11 20:21:34 -0400</bug_when>
    <thetext>Verified as working for Eclipse + Java 8 RC2 using Kepler SR2 +  
Eclipse Java Development Tools Patch for Java 8 Support (BETA)	1.0.0.v20140311-1940</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>