<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>426462</bug_id>
          
          <creation_ts>2014-01-23 10:20:00 -0500</creation_ts>
          <short_desc>[1.8][dom ast] TypeParameter#annotations() should be #modifiers()</short_desc>
          <delta_ts>2014-02-03 06:27:41 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Markus Keller">markus_keller</reporter>
          <assigned_to name="Manoj Palat Away Until May 11 2015">manpalat</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>jarthana</cc>
    
    <cc>manju656</cc>
    
    <cc>markus_keller</cc>
    
    <cc>noopur_gupta</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2353556</commentid>
    <comment_count>0</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-01-23 10:20:21 -0500</bug_when>
    <thetext>While reviewing the DOM APIs, I found that PackageDeclaration#annotations() and TypeParameterModifier#annotations() are a bit odd:

These are the only declaration nodes that have an #annotations() property.
All other declaration nodes use #modifiers(). Elsewhere, #annotations() is only used on type references (AnnotatableTypes / Dimension).

The JLS8 grammar also uses the nonterminals &quot;PackageModifier&quot; and &quot;TypeParameterModifier&quot;, which hints that future language versions may add other modifiers there (e.g. for accessibility).

To future-proof our APIs, we should rename these #annotations() properties and generalize their type to IExtendedModifier.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2353906</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-23 18:47:24 -0500</bug_when>
    <thetext>Manoj, please follow up. TIA.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2355903</commentid>
    <comment_count>2</comment_count>
      <attachid>239426</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-01-29 07:09:03 -0500</bug_when>
    <thetext>Created attachment 239426
Proposed Patch - Part 1 (wip)

Addresses PackageDeclaration - would combine the rest (but independent) part and post - submitting this patch for early peek/review, if required.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2356001</commentid>
    <comment_count>3</comment_count>
      <attachid>239431</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-01-29 10:02:31 -0500</bug_when>
    <thetext>Created attachment 239431
Proposed Patch

Modifications done at PackageDeclaration and TypeParameter. Once committed, bugs will be raised for clients (apt and ui) for consequent changes</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2357363</commentid>
    <comment_count>4</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-01-31 15:10:10 -0500</bug_when>
    <thetext>Oh, sorry, I missed that PackageDeclaration already had an &quot;annotations&quot; property before JLS8. While &quot;modifiers&quot; would be better, it&apos;s not worth breaking existing API clients at this time. We should only touch that once a later language version actually adds non-annotation modifiers to PackageDeclaration.

But we should apply the fix for TypeParameter, since that API is not published yet (@since 3.9 BETA_JAVA8).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2357463</commentid>
    <comment_count>5</comment_count>
      <attachid>239540</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-02-01 01:16:32 -0500</bug_when>
    <thetext>Created attachment 239540
Proposed Patch

(In reply to Markus Keller from comment #4)
&gt; Oh, sorry, I missed that PackageDeclaration already had an &quot;annotations&quot;
&gt; property before JLS8. While &quot;modifiers&quot; would be better, it&apos;s not worth
&gt; breaking existing API clients at this time. We should only touch that once a
&gt; later language version actually adds non-annotation modifiers to
&gt; PackageDeclaration.
&gt; 
&gt; But we should apply the fix for TypeParameter, since that API is not
&gt; published yet (@since 3.9 BETA_JAVA8).

Please find the pruned patch, applicable only for TypeParameter attached.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2357728</commentid>
    <comment_count>6</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-02-03 01:25:23 -0500</bug_when>
    <thetext>Thanks Markus for the comment. Fix released by:http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=7974f4a5911052c39ead36f51d3952ab684e5130

Bug 427227 filed against ui for the consequent changes.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2357859</commentid>
    <comment_count>7</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-02-03 06:27:41 -0500</bug_when>
    <thetext>Looks good, thx.

I&apos;ve added some Javadoc adjustments for older problems: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=0c9f31ea2ca6f747fc91ab022c7efc052d0b1c5a .

The TypeParameter node type should actually have been called TypeParameterDeclaration. Too late to change that now. Probably happened because the JLS grammar is also inconsistent. &quot;EnumConstant&quot; is another declaration node that misses &quot;Declaration&quot; in the grammar, but there, our node is called EnumConstantDeclaration.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>239426</attachid>
            <date>2014-01-29 07:09:00 -0500</date>
            <delta_ts>2014-01-29 10:02:31 -0500</delta_ts>
            <desc>Proposed Patch - Part 1 (wip)</desc>
            <filename>Fix-for-Bug-426462--18dom-ast-PackageDeclaration-Typ.patch</filename>
            <type>text/plain</type>
            <size>35494</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMTVKTFM0VGVzdC5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2RvbS9BU1RDb252ZXJ0ZXIxNUpMUzRUZXN0LmphdmEKaW5kZXggNmNiNWE1NC4uMmYzYjUy
ZCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxNUpMUzRUZXN0LmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxNUpMUzRUZXN0LmphdmEKQEAgLTc1LDYgKzc1LDEz
IEBACiAJCXJldHVybiBhcnJheS5nZXRDb21wb25lbnRUeXBlKCk7CiAJfQogCisJLyoqCisJICog
QGRlcHJlY2F0ZWQKKwkgKi8KKwlwcml2YXRlIExpc3QgZ2V0UGFja2FnZURlY2xBTUxpc3QoUGFj
a2FnZURlY2xhcmF0aW9uIHBhY2thZ2VEZWNsYXJhdGlvbiwgaW50IGFwaUxldmVsKSB7CisJCXJl
dHVybiBhcGlMZXZlbCA8IEFTVC5KTFM4ID8gcGFja2FnZURlY2xhcmF0aW9uLmFubm90YXRpb25z
KCkgOiBwYWNrYWdlRGVjbGFyYXRpb24ubW9kaWZpZXJzKCk7CisJfQorCiAJLy8gaHR0cHM6Ly9i
dWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTIzNDYwOSBCaW5kaW5nS2V5I3Rv
U2lnbmF0dXJlKCkgZmFpbHMgd2l0aCBrZXkgZnJvbSBjcmVhdGVXaWxjYXJkVHlwZUJpbmRpbmdL
ZXkoLi4pCiAJcHVibGljIHZvaWQgdGVzdDIzNDYwOSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRp
b24gewogCkBAIC00MTAsNyArNDE3LDcgQEAKIAkJUGFja2FnZURlY2xhcmF0aW9uIHBhY2thZ2VE
ZWNsYXJhdGlvbiA9IGNvbXBpbGF0aW9uVW5pdC5nZXRQYWNrYWdlKCk7CiAJCWFzc2VydE5vdE51
bGwoIk5vIHBhY2thZ2UgZGVjbGFyYXRpb24iLCBwYWNrYWdlRGVjbGFyYXRpb24pOwogCQljaGVj
a1NvdXJjZVJhbmdlKHBhY2thZ2VEZWNsYXJhdGlvbiwgIkBSZXRlbnRpb24gcGFja2FnZSB0ZXN0
MDAwNjsiLCBzb3VyY2UpOwotCQlMaXN0IGFubm90YXRpb25zID0gcGFja2FnZURlY2xhcmF0aW9u
LmFubm90YXRpb25zKCk7CisJCUxpc3QgYW5ub3RhdGlvbnMgPSBnZXRQYWNrYWdlRGVjbEFNTGlz
dChwYWNrYWdlRGVjbGFyYXRpb24sIHRoaXMuYXN0LmFwaUxldmVsKCkpOwogCQlhc3NlcnRFcXVh
bHMoIldyb25nIHNpemUiLCAxLCBhbm5vdGF0aW9ucy5zaXplKCkpOwogCQlBbm5vdGF0aW9uIGFu
bm90YXRpb24gPSAoQW5ub3RhdGlvbikgYW5ub3RhdGlvbnMuZ2V0KDApOwogCQljaGVja1NvdXJj
ZVJhbmdlKGFubm90YXRpb24sICJAUmV0ZW50aW9uIiwgc291cmNlKTsKZGlmZiAtLWdpdCBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90
ZXN0cy9kb20vQVNUQ29udmVydGVyMTVKTFM4VGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252
ZXJ0ZXIxNUpMUzhUZXN0LmphdmEKaW5kZXggODNlYjVmYy4uMjk3ODY3NyAxMDA2NDQKLS0tIGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxNUpMUzhUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9B
U1RDb252ZXJ0ZXIxNUpMUzhUZXN0LmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDExLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDExLCAyMDE0IElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUg
YWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0
ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBh
bmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtNjYsNiArNjYs
MTMgQEAKIAkJCXRoaXMud29ya2luZ0NvcHkuZGlzY2FyZFdvcmtpbmdDb3B5KCk7CiAJCQl0aGlz
LndvcmtpbmdDb3B5ID0gbnVsbDsKIAkJfQorCX0KKworCS8qKgorCSAqIEBkZXByZWNhdGVkCisJ
ICovCisJcHJpdmF0ZSBMaXN0IGdldFBhY2thZ2VEZWNsQU1MaXN0KFBhY2thZ2VEZWNsYXJhdGlv
biBwYWNrYWdlRGVjbGFyYXRpb24sIGludCBhcGlMZXZlbCkgeworCQlyZXR1cm4gYXBpTGV2ZWwg
PCBBU1QuSkxTOCA/IHBhY2thZ2VEZWNsYXJhdGlvbi5hbm5vdGF0aW9ucygpIDogcGFja2FnZURl
Y2xhcmF0aW9uLm1vZGlmaWVycygpOwogCX0KIAogCS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yMzQ2MDkgQmluZGluZ0tleSN0b1NpZ25hdHVyZSgpIGZh
aWxzIHdpdGgga2V5IGZyb20gY3JlYXRlV2lsY2FyZFR5cGVCaW5kaW5nS2V5KC4uKQpAQCAtNDAz
LDcgKzQxMCw3IEBACiAJCVBhY2thZ2VEZWNsYXJhdGlvbiBwYWNrYWdlRGVjbGFyYXRpb24gPSBj
b21waWxhdGlvblVuaXQuZ2V0UGFja2FnZSgpOwogCQlhc3NlcnROb3ROdWxsKCJObyBwYWNrYWdl
IGRlY2xhcmF0aW9uIiwgcGFja2FnZURlY2xhcmF0aW9uKTsKIAkJY2hlY2tTb3VyY2VSYW5nZShw
YWNrYWdlRGVjbGFyYXRpb24sICJAUmV0ZW50aW9uIHBhY2thZ2UgdGVzdDAwMDY7Iiwgc291cmNl
KTsKLQkJTGlzdCBhbm5vdGF0aW9ucyA9IHBhY2thZ2VEZWNsYXJhdGlvbi5hbm5vdGF0aW9ucygp
OworCQlMaXN0IGFubm90YXRpb25zID0gZ2V0UGFja2FnZURlY2xBTUxpc3QocGFja2FnZURlY2xh
cmF0aW9uLCB0aGlzLmFzdC5hcGlMZXZlbCgpKTsKIAkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXpl
IiwgMSwgYW5ub3RhdGlvbnMuc2l6ZSgpKTsKIAkJQW5ub3RhdGlvbiBhbm5vdGF0aW9uID0gKEFu
bm90YXRpb24pIGFubm90YXRpb25zLmdldCgwKTsKIAkJY2hlY2tTb3VyY2VSYW5nZShhbm5vdGF0
aW9uLCAiQFJldGVudGlvbiIsIHNvdXJjZSk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENv
bnZlcnRlcjE1VGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxNVRlc3QuamF2YQpp
bmRleCBhY2RjNzkwLi5iODU2NjUzIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRl
cjE1VGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMTVUZXN0LmphdmEKQEAg
LTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAy
MDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAy
MDAwLCAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNl
cnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJl
IG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGlj
ZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlz
IGF2YWlsYWJsZSBhdApAQCAtODMsNiArODMsMTMgQEAKIAkgKi8KIAlwcml2YXRlIFR5cGUgY29t
cG9uZW50VHlwZShBcnJheVR5cGUgYXJyYXkpIHsKIAkJcmV0dXJuIGFycmF5LmdldENvbXBvbmVu
dFR5cGUoKTsKKwl9CisKKwkvKioKKwkgKiBAZGVwcmVjYXRlZAorCSAqLworCXByaXZhdGUgTGlz
dCBnZXRQYWNrYWdlRGVjbEFNTGlzdChQYWNrYWdlRGVjbGFyYXRpb24gcGFja2FnZURlY2xhcmF0
aW9uLCBpbnQgYXBpTGV2ZWwpIHsKKwkJcmV0dXJuIGFwaUxldmVsIDwgQVNULkpMUzggPyBwYWNr
YWdlRGVjbGFyYXRpb24uYW5ub3RhdGlvbnMoKSA6IHBhY2thZ2VEZWNsYXJhdGlvbi5tb2RpZmll
cnMoKTsKIAl9CiAKIAkvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9MjM0NjA5IEJpbmRpbmdLZXkjdG9TaWduYXR1cmUoKSBmYWlscyB3aXRoIGtleSBmcm9t
IGNyZWF0ZVdpbGNhcmRUeXBlQmluZGluZ0tleSguLikKQEAgLTQyMCw3ICs0MjcsNyBAQAogCQlQ
YWNrYWdlRGVjbGFyYXRpb24gcGFja2FnZURlY2xhcmF0aW9uID0gY29tcGlsYXRpb25Vbml0Lmdl
dFBhY2thZ2UoKTsKIAkJYXNzZXJ0Tm90TnVsbCgiTm8gcGFja2FnZSBkZWNsYXJhdGlvbiIsIHBh
Y2thZ2VEZWNsYXJhdGlvbik7CiAJCWNoZWNrU291cmNlUmFuZ2UocGFja2FnZURlY2xhcmF0aW9u
LCAiQFJldGVudGlvbiBwYWNrYWdlIHRlc3QwMDA2OyIsIHNvdXJjZSk7Ci0JCUxpc3QgYW5ub3Rh
dGlvbnMgPSBwYWNrYWdlRGVjbGFyYXRpb24uYW5ub3RhdGlvbnMoKTsKKwkJTGlzdCBhbm5vdGF0
aW9ucyA9IGdldFBhY2thZ2VEZWNsQU1MaXN0KHBhY2thZ2VEZWNsYXJhdGlvbiwgdGhpcy5hc3Qu
YXBpTGV2ZWwoKSk7CiAJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGFubm90YXRpb25z
LnNpemUoKSk7CiAJCUFubm90YXRpb24gYW5ub3RhdGlvbiA9IChBbm5vdGF0aW9uKSBhbm5vdGF0
aW9ucy5nZXQoMCk7CiAJCWNoZWNrU291cmNlUmFuZ2UoYW5ub3RhdGlvbiwgIkBSZXRlbnRpb24i
LCBzb3VyY2UpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwv
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RNYXRjaGVyVGVzdC5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL2RvbS9BU1RNYXRjaGVyVGVzdC5qYXZhCmluZGV4IDk5NmQ1YjAuLjdiYTZjZDYgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUTWF0Y2hlclRlc3QuamF2YQorKysgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9t
L0FTVE1hdGNoZXJUZXN0LmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21w
YW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBv
ZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0
aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtMTYsNiArMTYsNyBAQAog
cGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5kb207CiAKIGltcG9ydCBqYXZhLmxh
bmcucmVmbGVjdC5NZXRob2Q7CitpbXBvcnQgamF2YS51dGlsLkxpc3Q7CiAKIGltcG9ydCBqdW5p
dC5mcmFtZXdvcmsuVGVzdDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uKjsKQEAg
LTExMTksMTAgKzExMjAsMTEgQEAKIAl9CiAJcHVibGljIHZvaWQgdGVzdFBhY2thZ2VEZWNsYXJh
dGlvbigpIHsKIAkJUGFja2FnZURlY2xhcmF0aW9uIHgxID0gdGhpcy5hc3QubmV3UGFja2FnZURl
Y2xhcmF0aW9uKCk7Ci0JCWlmICh0aGlzLmFzdC5hcGlMZXZlbCgpID49IEpMUzNfSU5URVJOQUwp
IHsKKwkJaW50IGFwaUxldmVsID0gdGhpcy5hc3QuYXBpTGV2ZWwoKTsKKwkJaWYgKGFwaUxldmVs
ID49IEpMUzNfSU5URVJOQUwpIHsKIAkJCXgxLnNldEphdmFkb2ModGhpcy5KRDEpOwotCQkJeDEu
YW5ub3RhdGlvbnMoKS5hZGQodGhpcy5BTk8xKTsKLQkJCXgxLmFubm90YXRpb25zKCkuYWRkKHRo
aXMuQU5PMik7CisJCQlnZXRQYWNrYWdlRGVjbEFNTGlzdCh4MSwgYXBpTGV2ZWwpLmFkZCh0aGlz
LkFOTzEpOworCQkJZ2V0UGFja2FnZURlY2xBTUxpc3QoeDEsIGFwaUxldmVsKS5hZGQodGhpcy5B
Tk8yKTsKIAkJfQogCQliYXNpY01hdGNoKHgxKTsKIAl9CkBAIC0xNjk4LDQgKzE3MDAsMTAgQEAK
IAkJeDEudHlwZXMoKS5hZGQodGhpcy5hc3QubmV3U2ltcGxlVHlwZSh0aGlzLk4xKSk7CiAJCWJh
c2ljTWF0Y2goeDEpOwogCX0KKwkvKioKKwkgKiBAZGVwcmVjYXRlZAorCSAqLworCXByaXZhdGUg
TGlzdCBnZXRQYWNrYWdlRGVjbEFNTGlzdChQYWNrYWdlRGVjbGFyYXRpb24gcGFja2FnZURlY2xh
cmF0aW9uLCBpbnQgYXBpTGV2ZWwpIHsKKwkJcmV0dXJuIGFwaUxldmVsIDwgQVNULkpMUzggPyBw
YWNrYWdlRGVjbGFyYXRpb24uYW5ub3RhdGlvbnMoKSA6IHBhY2thZ2VEZWNsYXJhdGlvbi5tb2Rp
ZmllcnMoKTsKKwl9CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5t
b2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFRlc3QuamF2YSBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90
ZXN0cy9kb20vQVNUVGVzdC5qYXZhCmluZGV4IGJkN2UyNzUuLjZlMDBhMGQgMTAwNjQ0Ci0tLSBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9kb20vQVNUVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3Rz
Lm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUVGVzdC5qYXZhCkBA
IC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykg
MjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykg
MjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVz
ZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFy
ZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExp
Y2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBp
cyBhdmFpbGFibGUgYXQKQEAgLTI0MjMsNiArMjQyMyw5IEBACiAKIAl9CiAKKwkvKioKKwkgKiBA
ZGVwcmVjYXRlZAorCSAqLwogCXB1YmxpYyB2b2lkIHRlc3RQYWNrYWdlRGVjbGFyYXRpb24oKSB7
CiAJCWxvbmcgcHJldmlvdXNDb3VudCA9IHRoaXMuYXN0Lm1vZGlmaWNhdGlvbkNvdW50KCk7CiAJ
CWZpbmFsIFBhY2thZ2VEZWNsYXJhdGlvbiB4ID0gdGhpcy5hc3QubmV3UGFja2FnZURlY2xhcmF0
aW9uKCk7CkBAIC0yNDMwLDkgKzI0MzMsMTAgQEAKIAkJcHJldmlvdXNDb3VudCA9IHRoaXMuYXN0
Lm1vZGlmaWNhdGlvbkNvdW50KCk7CiAJCWFzc2VydFRydWUoeC5nZXRBU1QoKSA9PSB0aGlzLmFz
dCk7CiAJCWFzc2VydFRydWUoeC5nZXRQYXJlbnQoKSA9PSBudWxsKTsKLQkJaWYgKHRoaXMuYXN0
LmFwaUxldmVsKCkgPj0gSkxTM19JTlRFUk5BTCkgeworCQlpbnQgYXBpTGV2ZWwgPSB0aGlzLmFz
dC5hcGlMZXZlbCgpOworCQlpZiAoYXBpTGV2ZWwgPj0gSkxTM19JTlRFUk5BTCkgewogCQkJYXNz
ZXJ0VHJ1ZSh4LmdldEphdmFkb2MoKSA9PSBudWxsKTsKLQkJCWFzc2VydFRydWUoeC5hbm5vdGF0
aW9ucygpLmlzRW1wdHkoKSk7CisJCQlhc3NlcnRUcnVlKGFwaUxldmVsICA8IEFTVC5KTFM4ID8g
eC5hbm5vdGF0aW9ucygpLmlzRW1wdHkoKSA6IHgubW9kaWZpZXJzKCkuaXNFbXB0eSgpKTsKIAkJ
fQogCQlhc3NlcnRUcnVlKHguZ2V0TmFtZSgpLmdldFBhcmVudCgpID09IHgpOwogCQlhc3NlcnRU
cnVlKHguZ2V0Tm9kZVR5cGUoKSA9PSBBU1ROb2RlLlBBQ0tBR0VfREVDTEFSQVRJT04pOwpAQCAt
MjQ0MCw3ICsyNDQ0LDcgQEAKIAkJLy8gbWFrZSBzdXJlIHRoYXQgcmVhZGluZyBkaWQgbm90IGNo
YW5nZSBtb2RpZmljYXRpb24gY291bnQKIAkJYXNzZXJ0VHJ1ZSh0aGlzLmFzdC5tb2RpZmljYXRp
b25Db3VudCgpID09IHByZXZpb3VzQ291bnQpOwogCi0JCWlmICh0aGlzLmFzdC5hcGlMZXZlbCgp
ID49IEpMUzNfSU5URVJOQUwpIHsKKwkJaWYgKGFwaUxldmVsID49IEpMUzNfSU5URVJOQUwpIHsK
IAkJCWdlbmVyaWNQcm9wZXJ0eVRlc3QoeCwgbmV3IFByb3BlcnR5KCJKYXZhZG9jIiwgZmFsc2Us
IEphdmFkb2MuY2xhc3MpIHsgLy8kTk9OLU5MUy0xJAogCQkJCXB1YmxpYyBBU1ROb2RlIHNhbXBs
ZShBU1QgdGFyZ2V0QXN0LCBib29sZWFuIHBhcmVudGVkKSB7CiAJCQkJCUphdmFkb2MgcmVzdWx0
ID0gdGFyZ2V0QXN0Lm5ld0phdmFkb2MoKTsKQEAgLTI0NTcsMTYgKzI0NjEsMjkgQEAKIAkJCQl9
CiAJCQl9KTsKIAotCQkJZ2VuZXJpY1Byb3BlcnR5TGlzdFRlc3QoeCwgeC5hbm5vdGF0aW9ucygp
LCBuZXcgUHJvcGVydHkoIkFubm90YXRpb25zIiwgdHJ1ZSwgQW5ub3RhdGlvbi5jbGFzcykgeyAv
LyROT04tTkxTLTEkCi0JCQkJcHVibGljIEFTVE5vZGUgc2FtcGxlKEFTVCB0YXJnZXRBc3QsIGJv
b2xlYW4gcGFyZW50ZWQpIHsKLQkJCQkJTWFya2VyQW5ub3RhdGlvbiByZXN1bHQgPSB0YXJnZXRB
c3QubmV3TWFya2VyQW5ub3RhdGlvbigpOwotCQkJCQlpZiAocGFyZW50ZWQpIHsKLQkJCQkJCVBh
Y2thZ2VEZWNsYXJhdGlvbiBwZCA9IHRhcmdldEFzdC5uZXdQYWNrYWdlRGVjbGFyYXRpb24oKTsK
LQkJCQkJCXBkLmFubm90YXRpb25zKCkuYWRkKHJlc3VsdCk7CisJCQlpZiAoYXBpTGV2ZWwgPCBB
U1QuSkxTOCkgeworCQkJCWdlbmVyaWNQcm9wZXJ0eUxpc3RUZXN0KHgsIHguYW5ub3RhdGlvbnMo
KSwgbmV3IFByb3BlcnR5KCJBbm5vdGF0aW9ucyIsIHRydWUsIEFubm90YXRpb24uY2xhc3MpIHsg
Ly8kTk9OLU5MUy0xJAorCQkJCQlwdWJsaWMgQVNUTm9kZSBzYW1wbGUoQVNUIHRhcmdldEFzdCwg
Ym9vbGVhbiBwYXJlbnRlZCkgeworCQkJCQkJTWFya2VyQW5ub3RhdGlvbiByZXN1bHQgPSB0YXJn
ZXRBc3QubmV3TWFya2VyQW5ub3RhdGlvbigpOworCQkJCQkJaWYgKHBhcmVudGVkKSB7CisJCQkJ
CQkJUGFja2FnZURlY2xhcmF0aW9uIHBkID0gdGFyZ2V0QXN0Lm5ld1BhY2thZ2VEZWNsYXJhdGlv
bigpOworCQkJCQkJCXBkLmFubm90YXRpb25zKCkuYWRkKHJlc3VsdCk7CisJCQkJCQl9CisJCQkJ
CQlyZXR1cm4gcmVzdWx0OwogCQkJCQl9Ci0JCQkJCXJldHVybiByZXN1bHQ7Ci0JCQkJfQotCQkJ
fSk7CisJCQkJfSk7CisJCQl9IGVsc2UgeworCQkJCWdlbmVyaWNQcm9wZXJ0eUxpc3RUZXN0KHgs
IHgubW9kaWZpZXJzKCksIG5ldyBQcm9wZXJ0eSgiTW9kaWZpZXJzIiwgdHJ1ZSwgSUV4dGVuZGVk
TW9kaWZpZXIuY2xhc3MpIHsgLy8kTk9OLU5MUy0xJAorCQkJCQlwdWJsaWMgQVNUTm9kZSBzYW1w
bGUoQVNUIHRhcmdldEFzdCwgYm9vbGVhbiBwYXJlbnRlZCkgeworCQkJCQkJTWFya2VyQW5ub3Rh
dGlvbiByZXN1bHQgPSB0YXJnZXRBc3QubmV3TWFya2VyQW5ub3RhdGlvbigpOworCQkJCQkJaWYg
KHBhcmVudGVkKSB7CisJCQkJCQkJUGFja2FnZURlY2xhcmF0aW9uIHBkID0gdGFyZ2V0QXN0Lm5l
d1BhY2thZ2VEZWNsYXJhdGlvbigpOworCQkJCQkJCXBkLm1vZGlmaWVycygpLmFkZChyZXN1bHQp
OworCQkJCQkJfQorCQkJCQkJcmV0dXJuIHJlc3VsdDsKKwkJCQkJfQorCQkJCX0pOworCQkJfQog
CQl9CiAKIAkJZ2VuZXJpY1Byb3BlcnR5VGVzdCh4LCBuZXcgUHJvcGVydHkoIk5hbWUiLCB0cnVl
LCBOYW1lLmNsYXNzKSB7IC8vJE5PTi1OTFMtMSQKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNU
VmlzaXRvclRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUVmlzaXRvclRlc3QuamF2YQppbmRleCA4
OTUwOTY4Li5lODhhYzgwIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5t
b2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFZpc2l0b3JUZXN0Lmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RWaXNpdG9yVGVzdC5qYXZhCkBAIC0xLDUgKzEsNSBAQAog
LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0g
Q29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxNCBJQk0g
Q29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJv
Z3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJs
ZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICog
d2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQK
QEAgLTE5NTcsMTAgKzE5NTcsMTYgQEAKIAkvKiogQGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVjYXRl
ZCBjb2RlICovCiAJcHVibGljIHZvaWQgdGVzdFBhY2thZ2VEZWNsYXJhdGlvbigpIHsKIAkJUGFj
a2FnZURlY2xhcmF0aW9uIHgxID0gdGhpcy5hc3QubmV3UGFja2FnZURlY2xhcmF0aW9uKCk7Ci0J
CWlmICh0aGlzLmFzdC5hcGlMZXZlbCgpID49IEFTVC5KTFMzKSB7CisJCWludCBhcGlMZXZlbCA9
IHRoaXMuYXN0LmFwaUxldmVsKCk7CisJCWlmIChhcGlMZXZlbCA+PSBBU1QuSkxTMykgewogCQkJ
eDEuc2V0SmF2YWRvYyh0aGlzLkpEMSk7Ci0JCQl4MS5hbm5vdGF0aW9ucygpLmFkZCh0aGlzLkFO
TzEpOwotCQkJeDEuYW5ub3RhdGlvbnMoKS5hZGQodGhpcy5BTk8yKTsKKwkJCWlmIChhcGlMZXZl
bCA8IEFTVC5KTFM4KSB7CisJCQkJeDEuYW5ub3RhdGlvbnMoKS5hZGQodGhpcy5BTk8xKTsKKwkJ
CQl4MS5hbm5vdGF0aW9ucygpLmFkZCh0aGlzLkFOTzIpOworCQkJfSBlbHNlIHsKKwkJCQl4MS5t
b2RpZmllcnMoKS5hZGQodGhpcy5BTk8xKTsKKwkJCQl4MS5tb2RpZmllcnMoKS5hZGQodGhpcy5B
Tk8yKTsKKwkJCX0KIAkJfQogCQl4MS5zZXROYW1lKHRoaXMuTjEpOwogCQlUZXN0VmlzaXRvciB2
MSA9IG5ldyBUZXN0VmlzaXRvcigpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUu
dGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3Jp
YmluZy9BU1RSZXdyaXRpbmdQYWNrYWdlRGVjbFRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rl
c2NyaWJpbmcvQVNUUmV3cml0aW5nUGFja2FnZURlY2xUZXN0LmphdmEKaW5kZXggMWU4NDdlNS4u
ODFkYzc2MiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRp
bmdQYWNrYWdlRGVjbFRlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5t
b2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FT
VFJld3JpdGluZ1BhY2thZ2VEZWNsVGVzdC5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAxMywgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFj
Y29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVy
bXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5p
ZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTM3LDYgKzM3LDcg
QEAKIAogCS8qKgogCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNn
aT9pZD0zMjg0MDAKKwkgKiBAZGVwcmVjYXRlZAogCSAqLwogCXB1YmxpYyB2b2lkIHRlc3RBbm5v
dGF0aW9uc19zaW5jZV8zKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQg
cGFjazE9IHRoaXMuc291cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBm
YWxzZSwgbnVsbCk7CkBAIC00OSw3ICs1MCw4IEBACiAJCUFTVCBhc3Q9IGFzdFJvb3QuZ2V0QVNU
KCk7CiAJCXsgLy8gaW5zZXJ0IGFubm90YXRpb24gZmlyc3QKIAkJCVBhY2thZ2VEZWNsYXJhdGlv
biBwYWNrYWdlRGVjbGFyYXRpb24gPSBhc3RSb290LmdldFBhY2thZ2UoKTsKLQkJCUxpc3RSZXdy
aXRlIGxpc3RSZXdyaXRlPSByZXdyaXRlLmdldExpc3RSZXdyaXRlKHBhY2thZ2VEZWNsYXJhdGlv
biwgUGFja2FnZURlY2xhcmF0aW9uLkFOTk9UQVRJT05TX1BST1BFUlRZKTsKKwkJCUNoaWxkTGlz
dFByb3BlcnR5RGVzY3JpcHRvciBwcm9wZXJ0eSA9IGFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgg
PyBQYWNrYWdlRGVjbGFyYXRpb24uQU5OT1RBVElPTlNfUFJPUEVSVFkgOiBQYWNrYWdlRGVjbGFy
YXRpb24uTU9ESUZJRVJTX1BST1BFUlRZOworCQkJTGlzdFJld3JpdGUgbGlzdFJld3JpdGU9IHJl
d3JpdGUuZ2V0TGlzdFJld3JpdGUocGFja2FnZURlY2xhcmF0aW9uLCBwcm9wZXJ0eSk7CiAJCQlN
YXJrZXJBbm5vdGF0aW9uIGFubm90PSBhc3QubmV3TWFya2VyQW5ub3RhdGlvbigpOwogCQkJYW5u
b3Quc2V0VHlwZU5hbWUoYXN0Lm5ld1NpbXBsZU5hbWUoIkRlcHJlY2F0ZWQiKSk7CiAJCQlsaXN0
UmV3cml0ZS5pbnNlcnRGaXJzdChhbm5vdCwgbnVsbCk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3
cml0ZS9tb2RpZnlpbmcvQVNUUmV3cml0aW5nTW9kaWZ5aW5nSW5zZXJ0VGVzdC5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL3Jld3JpdGUvbW9kaWZ5aW5nL0FTVFJld3JpdGluZ01vZGlmeWluZ0luc2VydFRlc3QuamF2
YQppbmRleCA2OWFmZGZmLi5hY2M5M2VlIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9tb2Rp
ZnlpbmcvQVNUUmV3cml0aW5nTW9kaWZ5aW5nSW5zZXJ0VGVzdC5qYXZhCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9y
ZXdyaXRlL21vZGlmeWluZy9BU1RSZXdyaXRpbmdNb2RpZnlpbmdJbnNlcnRUZXN0LmphdmEKQEAg
LTUsNiArNSw5IEBACiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5k
IGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEw
Lmh0bWwKICAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0
IHNwZWNpZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJv
Y2VzcyAoSkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRp
b24gcHVycG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55
IHNwZWNpZmljYXRpb24gb2YgdGhlIEpDUC4KICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0g
Q29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KICAqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqLwpAQCAtMzIsNiArMzUsMTMgQEAKIAlwdWJsaWMgc3RhdGljIFRlc3Qgc3Vp
dGUoKSB7CiAJCXJldHVybiBhbGxUZXN0cygpOwogCX0KKwkvKioKKwkgKiBAZGVwcmVjYXRlZAor
CSAqLworCXByaXZhdGUgTGlzdCBnZXRQYWNrYWdlRGVjbEFNTGlzdChQYWNrYWdlRGVjbGFyYXRp
b24gcGFja2FnZURlY2xhcmF0aW9uLCBpbnQgYXBpTGV2ZWwpIHsKKwkJcmV0dXJuIGFwaUxldmVs
IDwgQVNULkpMUzggPyBwYWNrYWdlRGVjbGFyYXRpb24uYW5ub3RhdGlvbnMoKSA6IHBhY2thZ2VE
ZWNsYXJhdGlvbi5tb2RpZmllcnMoKTsKKwl9CisKIAkvKioKIAkgKiBpbnNlcnQgYSBuZXcgaW1w
b3J0IGRlY2xhcmF0aW9uCiAJICovCkBAIC02NDEsNyArNjUxLDggQEAKIAogCQlNYXJrZXJBbm5v
dGF0aW9uIGFubm90YXRpb24gPSBhc3QubmV3TWFya2VyQW5ub3RhdGlvbigpOwogCQlhbm5vdGF0
aW9uLnNldFR5cGVOYW1lKGFzdC5uZXdTaW1wbGVOYW1lKCJEZXByZWNhdGVkIikpOwotCQlhc3RS
b290LmdldFBhY2thZ2UoKS5hbm5vdGF0aW9ucygpLmFkZChhbm5vdGF0aW9uKTsKKwkJTGlzdCBs
aXN0ID0gZ2V0UGFja2FnZURlY2xBTUxpc3QoYXN0Um9vdC5nZXRQYWNrYWdlKCksIGFzdC5hcGlM
ZXZlbCgpKTsKKwkJbGlzdC5hZGQoYW5ub3RhdGlvbik7CiAKIAkJU3RyaW5nIHByZXZpZXcgPSBl
dmFsdWF0ZVJld3JpdGUoY3UsIGFzdFJvb3QpOwogCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVENvbnZlcnRlci5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252
ZXJ0ZXIuamF2YQppbmRleCBmOTU4OGI5Li5jZTY4ZDc4IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVENvbnZlcnRlci5qYXZh
CisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20v
QVNUQ29udmVydGVyLmphdmEKQEAgLTM5Niw2ICszOTYsMTUgQEAKIAkJcmV0dXJuIG5vZGUudGhy
b3duRXhjZXB0aW9ucygpOwogCX0KIAorCS8qKiAKKwkgKiBJbnRlcm5hbCBhY2Nlc3MgbWV0aG9k
IHRvIFBhY2thZ2VEZWNsYXJhdGlvbi5hbm5vdGF0aW9ucyAoKSBmb3IgYXZvaWRpbmcgZGVwcmVj
YXRlZCB3YXJuaW5ncworCSAqCisJICogQHBhcmFtIG5vZGUKKwkgKiBAZGVwcmVjYXRlZAorCSAq
LworCXByaXZhdGUgc3RhdGljIExpc3QgaW50ZXJuYWxQYWNrYWdlRGVjbG5Bbm5vdGF0aW9ucyhQ
YWNrYWdlRGVjbGFyYXRpb24gbm9kZSkgeworCQlyZXR1cm4gbm9kZS5hbm5vdGF0aW9ucygpOwor
CX0KIAkvKioKIAkgKiBAcGFyYW0gY29tcGlsYXRpb25Vbml0CiAJICogQHBhcmFtIGNvbW1lbnRz
CkBAIC0zMTIzLDEzICszMTMyLDE1IEBACiAJCXBhY2thZ2VEZWNsYXJhdGlvbi5zZXRTb3VyY2VS
YW5nZShpbXBvcnRSZWZlcmVuY2UuZGVjbGFyYXRpb25Tb3VyY2VTdGFydCwgaW1wb3J0UmVmZXJl
bmNlLmRlY2xhcmF0aW9uRW5kIC0gaW1wb3J0UmVmZXJlbmNlLmRlY2xhcmF0aW9uU291cmNlU3Rh
cnQgKyAxKTsKIAkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0
aW9uW10gYW5ub3RhdGlvbnMgPSBpbXBvcnRSZWZlcmVuY2UuYW5ub3RhdGlvbnM7CiAJCWlmIChh
bm5vdGF0aW9ucyAhPSBudWxsKSB7Ci0JCQlzd2l0Y2godGhpcy5hc3QuYXBpTGV2ZWwpIHsKKwkJ
CWludCBhcGlMZXZlbCA9IHRoaXMuYXN0LmFwaUxldmVsOworCQkJc3dpdGNoKGFwaUxldmVsKSB7
CiAJCQkJY2FzZSBBU1QuSkxTMl9JTlRFUk5BTCA6CiAJCQkJCXBhY2thZ2VEZWNsYXJhdGlvbi5z
ZXRGbGFncyhwYWNrYWdlRGVjbGFyYXRpb24uZ2V0RmxhZ3MoKSAmIEFTVE5vZGUuTUFMRk9STUVE
KTsKIAkJCQkJYnJlYWs7CiAJCQkJZGVmYXVsdCA6CisJCQkJCUxpc3QgbGlzdCA9IGFwaUxldmVs
IDwgQVNULkpMUzggPyBpbnRlcm5hbFBhY2thZ2VEZWNsbkFubm90YXRpb25zKHBhY2thZ2VEZWNs
YXJhdGlvbikgOiBwYWNrYWdlRGVjbGFyYXRpb24ubW9kaWZpZXJzKCk7CiAJCQkJCWZvciAoaW50
IGkgPSAwLCBtYXggPSBhbm5vdGF0aW9ucy5sZW5ndGg7IGkgPCBtYXg7IGkrKykgewotCQkJCQkJ
cGFja2FnZURlY2xhcmF0aW9uLmFubm90YXRpb25zKCkuYWRkKGNvbnZlcnQoYW5ub3RhdGlvbnNb
aV0pKTsKKwkJCQkJCWxpc3QuYWRkKGNvbnZlcnQoYW5ub3RhdGlvbnNbaV0pKTsKIAkJCQkJfQog
CQkJfQogCQl9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlw
c2UvamR0L2NvcmUvZG9tL0FTVE1hdGNoZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Rv
bS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUTWF0Y2hlci5qYXZhCmluZGV4IGM1ZDRlMjMu
LjY4ZjVmMjggMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBz
ZS9qZHQvY29yZS9kb20vQVNUTWF0Y2hlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUTWF0Y2hlci5qYXZhCkBAIC0xLDUgKzEs
NSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAx
MyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAx
NCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRo
aXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2
YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEu
MAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFi
bGUgYXQKQEAgLTE2OSw2ICsxNjksMTQgQEAKIAkgKi8KIAlwcml2YXRlIFR5cGUgY29tcG9uZW50
VHlwZShBcnJheVR5cGUgYXJyYXkpIHsKIAkJcmV0dXJuIGFycmF5LmdldENvbXBvbmVudFR5cGUo
KTsKKwl9CisJCisJLyoqCisJICogQWRkZWQgdG8gYXZvaWQgdGhlIGRlcHJlY2F0ZWQgd2Fybmlu
ZworCSAqIEBkZXByZWNhdGVkCisJICovCisJcHJpdmF0ZSBMaXN0IGdldFBhY2thZ2VEZWNsbkFu
bm90YXRpb25zKFBhY2thZ2VEZWNsYXJhdGlvbiBwYWNrYWdlRGVjbGFyYXRpb24pIHsKKwkJcmV0
dXJuIHBhY2thZ2VEZWNsYXJhdGlvbi5hbm5vdGF0aW9ucygpOwogCX0KIAogCS8qKgpAQCAtMTY1
NSwxMSArMTY2MywyMCBAQAogCQkJcmV0dXJuIGZhbHNlOwogCQl9CiAJCVBhY2thZ2VEZWNsYXJh
dGlvbiBvID0gKFBhY2thZ2VEZWNsYXJhdGlvbikgb3RoZXI7Ci0JCWlmIChub2RlLmdldEFTVCgp
LmFwaUxldmVsID49IEFTVC5KTFMzX0lOVEVSTkFMKSB7CisJCWludCBhcGlMZXZlbCA9IG5vZGUu
Z2V0QVNUKCkuYXBpTGV2ZWwoKTsKKwkJaWYgKGFwaUxldmVsID49IEFTVC5KTFMzX0lOVEVSTkFM
KSB7CiAJCQlpZiAoIXNhZmVTdWJ0cmVlTWF0Y2gobm9kZS5nZXRKYXZhZG9jKCksIG8uZ2V0SmF2
YWRvYygpKSkgewogCQkJCXJldHVybiBmYWxzZTsKIAkJCX0KLQkJCWlmICghc2FmZVN1YnRyZWVM
aXN0TWF0Y2gobm9kZS5hbm5vdGF0aW9ucygpLCBvLmFubm90YXRpb25zKCkpKSB7CisJCQlMaXN0
IG5MaXN0LCBvTGlzdDsKKwkJCWlmIChhcGlMZXZlbCA8IEFTVC5KTFM4KSB7CisJCQkJbkxpc3Qg
PSBnZXRQYWNrYWdlRGVjbG5Bbm5vdGF0aW9ucyhub2RlKTsKKwkJCQlvTGlzdCA9IGdldFBhY2th
Z2VEZWNsbkFubm90YXRpb25zKG8pOworCQkJfSBlbHNlIHsKKwkJCQluTGlzdCA9IG5vZGUubW9k
aWZpZXJzKCk7CisJCQkJb0xpc3QgPSBvLm1vZGlmaWVycygpOworCQkJfQorCQkJaWYgKCFzYWZl
U3VidHJlZUxpc3RNYXRjaChuTGlzdCwgb0xpc3QpKSB7CiAJCQkJcmV0dXJuIGZhbHNlOwogCQkJ
fQogCQl9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2Uv
amR0L2NvcmUvZG9tL1BhY2thZ2VCaW5kaW5nLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9k
b20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1BhY2thZ2VCaW5kaW5nLmphdmEKaW5kZXggY2Y1
YTRhZi4uMzk2M2FiOCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL2RvbS9QYWNrYWdlQmluZGluZy5qYXZhCisrKyBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vUGFja2FnZUJpbmRpbmcuamF2
YQpAQCAtMSwxMCArMSwxMyBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdo
dCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdo
dCAoYykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdo
dHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMK
ICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVi
bGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24s
IGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBs
LXYxMC5odG1sCiAgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1k
cmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5
IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFs
dWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRo
IGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAg
SUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCiAgKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKi8KQEAgLTc0LDcgKzc3LDcgQEAKIAkJCQkJCVN0cmluZyB1bml0TmFt
ZSA9ICJwYWNrYWdlLWluZm8uamF2YSI7IC8vJE5PTi1OTFMtMSQKIAkJCQkJCUlDb21waWxhdGlv
blVuaXQgdW5pdCA9IHBrZ3NbaV0uZ2V0Q29tcGlsYXRpb25Vbml0KHVuaXROYW1lKTsKIAkJCQkJ
CWlmICh1bml0ICE9IG51bGwgJiYgdW5pdC5leGlzdHMoKSkgewotCQkJCQkJCUFTVFBhcnNlciBw
ID0gQVNUUGFyc2VyLm5ld1BhcnNlcihBU1QuSkxTM19JTlRFUk5BTCk7CisJCQkJCQkJQVNUUGFy
c2VyIHAgPSBBU1RQYXJzZXIubmV3UGFyc2VyKEFTVC5KTFM4KTsKIAkJCQkJCQlwLnNldFNvdXJj
ZSh1bml0KTsKIAkJCQkJCQlwLnNldFJlc29sdmVCaW5kaW5ncyh0cnVlKTsKIAkJCQkJCQlwLnNl
dFVuaXROYW1lKHVuaXROYW1lKTsKQEAgLTgzLDEzICs4NiwxNSBAQAogCQkJCQkJCUNvbXBpbGF0
aW9uVW5pdCBkb21Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcC5jcmVhdGVBU1QobnVsbCk7CiAJ
CQkJCQkJUGFja2FnZURlY2xhcmF0aW9uIHBrZ0RlY2wgPSBkb21Vbml0LmdldFBhY2thZ2UoKTsK
IAkJCQkJCQlpZiAocGtnRGVjbCAhPSBudWxsKSB7Ci0JCQkJCQkJCUxpc3QgYW5ub3MgPSBwa2dE
ZWNsLmFubm90YXRpb25zKCk7CisJCQkJCQkJCUxpc3QgYW5ub3MgPSBwa2dEZWNsLm1vZGlmaWVy
cygpOwogCQkJCQkJCQlpZiAoYW5ub3MgPT0gbnVsbCB8fCBhbm5vcy5pc0VtcHR5KCkpCiAJCQkJ
CQkJCQlyZXR1cm4gQW5ub3RhdGlvbkJpbmRpbmcuTm9Bbm5vdGF0aW9uczsKIAkJCQkJCQkJSUFu
bm90YXRpb25CaW5kaW5nW10gcmVzdWx0ID0gbmV3IElBbm5vdGF0aW9uQmluZGluZ1thbm5vcy5z
aXplKCldOwogCQkJCQkJCQlpbnQgaW5kZXg9MDsKIAkJIAkJCQkJCWZvciAoSXRlcmF0b3IgaXQg
PSBhbm5vcy5pdGVyYXRvcigpOyBpdC5oYXNOZXh0KCk7IGluZGV4KyspIHsKLQkJCQkJCQkJCXJl
c3VsdFtpbmRleF0gPSAoKEFubm90YXRpb24pIGl0Lm5leHQoKSkucmVzb2x2ZUFubm90YXRpb25C
aW5kaW5nKCk7CisJCSAJCQkJCQkJSUV4dGVuZGVkTW9kaWZpZXIgbm9kZSA9IChJRXh0ZW5kZWRN
b2RpZmllcikgaXQubmV4dCgpOworCQkgCQkJCQkJCWlmICghbm9kZS5pc0Fubm90YXRpb24oKSkg
Y29udGludWU7CisJCQkJCQkJCQlyZXN1bHRbaW5kZXhdID0gKChBbm5vdGF0aW9uKSBub2RlKS5y
ZXNvbHZlQW5ub3RhdGlvbkJpbmRpbmcoKTsKIAkJCQkJCQkJCS8vIG5vdCByZXNvbHZpbmcgYmlu
ZGluZ3MKIAkJCQkJCQkJCWlmIChyZXN1bHRbaW5kZXhdID09IG51bGwpCiAJCQkJCQkJCQkJcmV0
dXJuIEFubm90YXRpb25CaW5kaW5nLk5vQW5ub3RhdGlvbnM7CmRpZmYgLS1naXQgYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1BhY2thZ2VEZWNsYXJh
dGlvbi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L2RvbS9QYWNrYWdlRGVjbGFyYXRpb24uamF2YQppbmRleCAyY2Y3N2U1Li41YTMzNjc5IDEwMDY0
NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9t
L1BhY2thZ2VEZWNsYXJhdGlvbi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9v
cmcvZWNsaXBzZS9qZHQvY29yZS9kb20vUGFja2FnZURlY2xhcmF0aW9uLmphdmEKQEAgLTEsMTAg
KzEsMTMgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAs
IDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAs
IDIwMTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVk
LiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFk
ZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNl
IHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZh
aWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAog
ICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lm
aWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChK
Q1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJw
b3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lm
aWNhdGlvbiBvZiB0aGUgSkNQLgogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3Jh
dGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgogICoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKiovCkBAIC00MSw5ICs0NCwxNyBAQAogCS8qKgogCSAqIFRoZSAiYW5ub3RhdGlvbnMiIHN0
cnVjdHVyYWwgcHJvcGVydHkgb2YgdGhpcyBub2RlIHR5cGUgKGVsZW1lbnQgdHlwZToge0BsaW5r
IEFubm90YXRpb259KSAoYWRkZWQgaW4gSkxTMyBBUEkpLgogCSAqIEBzaW5jZSAzLjEKKwkgKiBA
ZGVwcmVjYXRlZCBJbiB0aGUgSkxTOCBBUEksIHRoaXMgcHJvcGVydHkgaXMgcmVwbGFjZWQgYnkg
e0BsaW5rICNNT0RJRklFUlNfUFJPUEVSVFl9LgogCSAqLwogCXB1YmxpYyBzdGF0aWMgZmluYWwg
Q2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yIEFOTk9UQVRJT05TX1BST1BFUlRZID0KIAkJbmV3
IENoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvcihQYWNrYWdlRGVjbGFyYXRpb24uY2xhc3MsICJh
bm5vdGF0aW9ucyIsIEFubm90YXRpb24uY2xhc3MsIENZQ0xFX1JJU0spOyAvLyROT04tTkxTLTEk
CisKKwkvKioKKwkgKiBUaGUgIm1vZGlmaWVycyIgc3RydWN0dXJhbCBwcm9wZXJ0eSBvZiB0aGlz
IG5vZGUgdHlwZSAoZWxlbWVudCB0eXBlOiB7QGxpbmsgSUV4dGVuZGVkTW9kaWZpZXJ9KSAoYWRk
ZWQgaW4gSkxTOCBBUEkpLgorCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAorCSAqLworCXB1Ymxp
YyBzdGF0aWMgZmluYWwgQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yIE1PRElGSUVSU19QUk9Q
RVJUWSA9CisJCW5ldyBDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IoUGFja2FnZURlY2xhcmF0
aW9uLmNsYXNzLCAibW9kaWZpZXJzIiwgSUV4dGVuZGVkTW9kaWZpZXIuY2xhc3MsIENZQ0xFX1JJ
U0spOyAvLyROT04tTkxTLTEkCiAKIAkvKioKIAkgKiBUaGUgIm5hbWUiIHN0cnVjdHVyYWwgcHJv
cGVydHkgb2YgdGhpcyBub2RlIHR5cGUgKGNoaWxkIHR5cGU6IHtAbGluayBOYW1lfSkuCkBAIC02
OCw2ICs3OSwxNCBAQAogCSAqLwogCXByaXZhdGUgc3RhdGljIGZpbmFsIExpc3QgUFJPUEVSVFlf
REVTQ1JJUFRPUlNfM18wOwogCisJLyoqCisJICogQSBsaXN0IG9mIHByb3BlcnR5IGRlc2NyaXB0
b3JzIChlbGVtZW50IHR5cGU6CisJICoge0BsaW5rIFN0cnVjdHVyYWxQcm9wZXJ0eURlc2NyaXB0
b3J9KSwKKwkgKiBvciBudWxsIGlmIHVuaW5pdGlhbGl6ZWQuCisJICogQHNpbmNlIDMuOSBCRVRB
X0pBVkE4CisJICovCisJcHJpdmF0ZSBzdGF0aWMgZmluYWwgTGlzdCBQUk9QRVJUWV9ERVNDUklQ
VE9SU184XzA7CisKIAlzdGF0aWMgewogCQlMaXN0IHByb3BlcnR5TGlzdCA9IG5ldyBBcnJheUxp
c3QoMik7CiAJCWNyZWF0ZVByb3BlcnR5TGlzdChQYWNrYWdlRGVjbGFyYXRpb24uY2xhc3MsIHBy
b3BlcnR5TGlzdCk7CkBAIC04MCw4ICs5OSwxNCBAQAogCQlhZGRQcm9wZXJ0eShBTk5PVEFUSU9O
U19QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKIAkJYWRkUHJvcGVydHkoTkFNRV9QUk9QRVJUWSwg
cHJvcGVydHlMaXN0KTsKIAkJUFJPUEVSVFlfREVTQ1JJUFRPUlNfM18wID0gcmVhcFByb3BlcnR5
TGlzdChwcm9wZXJ0eUxpc3QpOwotCX0KIAorCQlwcm9wZXJ0eUxpc3QgPSBuZXcgQXJyYXlMaXN0
KDQpOworCQljcmVhdGVQcm9wZXJ0eUxpc3QoUGFja2FnZURlY2xhcmF0aW9uLmNsYXNzLCBwcm9w
ZXJ0eUxpc3QpOworCQlhZGRQcm9wZXJ0eShKQVZBRE9DX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3Qp
OworCQlhZGRQcm9wZXJ0eShNT0RJRklFUlNfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CisJCWFk
ZFByb3BlcnR5KE5BTUVfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CisJCVBST1BFUlRZX0RFU0NS
SVBUT1JTXzhfMCA9IHJlYXBQcm9wZXJ0eUxpc3QocHJvcGVydHlMaXN0KTsKK30KIAkvKioKIAkg
KiBSZXR1cm5zIGEgbGlzdCBvZiBzdHJ1Y3R1cmFsIHByb3BlcnR5IGRlc2NyaXB0b3JzIGZvciB0
aGlzIG5vZGUgdHlwZS4KIAkgKiBDbGllbnRzIG11c3Qgbm90IG1vZGlmeSB0aGUgcmVzdWx0LgpA
QCAtOTYsOSArMTIxLDEwIEBACiAJcHVibGljIHN0YXRpYyBMaXN0IHByb3BlcnR5RGVzY3JpcHRv
cnMoaW50IGFwaUxldmVsKSB7CiAJCWlmIChhcGlMZXZlbCA9PSBBU1QuSkxTMl9JTlRFUk5BTCkg
ewogCQkJcmV0dXJuIFBST1BFUlRZX0RFU0NSSVBUT1JTXzJfMDsKLQkJfSBlbHNlIHsKKwkJfSBl
bHNlIGlmIChhcGlMZXZlbCA8IEFTVC5KTFM4KXsKIAkJCXJldHVybiBQUk9QRVJUWV9ERVNDUklQ
VE9SU18zXzA7CiAJCX0KKwkJcmV0dXJuIFBST1BFUlRZX0RFU0NSSVBUT1JTXzhfMDsKIAl9CiAK
IAkvKioKQEAgLTExMCwxMSArMTM2LDIwIEBACiAKIAkvKioKIAkgKiBUaGUgYW5ub3RhdGlvbnMg
KGVsZW1lbnQgdHlwZToge0BsaW5rIEFubm90YXRpb259KS4KLQkgKiBOdWxsIGluIEpMUzIuIEFk
ZGVkIGluIEpMUzM7IGRlZmF1bHRzIHRvIGFuIGVtcHR5IGxpc3QKKwkgKiBOdWxsIGluIEpMUzIg
YW5kIGluIEpMUzggYW5kIGFib3ZlLiBBZGRlZCBpbiBKTFMzOyBkZWZhdWx0cyB0byBhbiBlbXB0
eSBsaXN0IAogCSAqIChzZWUgY29uc3RydWN0b3IpLgogCSAqIEBzaW5jZSAzLjEKKwkgKiBAZGVw
cmVjYXRlZCBJbiBKTFM4IGFuZCBsYXRlciwgdXNlIHtAbGluayAjbW9kaWZpZXJzfSBpbnN0ZWFk
LgogCSAqLwogCXByaXZhdGUgQVNUTm9kZS5Ob2RlTGlzdCBhbm5vdGF0aW9ucyA9IG51bGw7CisK
KwkvKioKKwkgKiBUaGUgbW9kaWZpZXJzIChlbGVtZW50IHR5cGU6IHtAbGluayBJRXh0ZW5kZWRN
b2RpZmllcn0pLgorCSAqIEFkZGVkIGluIEpMUzg7IGRlZmF1bHRzIHRvIGFuIGVtcHR5IGxpc3Qg
Zm9yIEpMUzggYW5kIGFib3ZlIChzZWUgY29uc3RydWN0b3IpLAorCSAqIG51bGwgb3RoZXJ3aXNl
LgorCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAorCSAqLworCXByaXZhdGUgQVNUTm9kZS5Ob2Rl
TGlzdCBtb2RpZmllcnMgPSBudWxsOwogCiAJLyoqCiAJICogVGhlIHBhY2thZ2UgbmFtZTsgbGF6
aWx5IGluaXRpYWxpemVkOyBkZWZhdWx0cyB0byBhIHVuc3BlY2lmaWVkLApAQCAtMTM2LDcgKzE3
MSwxMCBAQAogCSAqLwogCVBhY2thZ2VEZWNsYXJhdGlvbihBU1QgYXN0KSB7CiAJCXN1cGVyKGFz
dCk7Ci0JCWlmIChhc3QuYXBpTGV2ZWwgPj0gQVNULkpMUzNfSU5URVJOQUwpIHsKKwkJaW50IGFw
aUxldmVsID0gYXN0LmFwaUxldmVsKCk7CisJCWlmIChhcGlMZXZlbCA+PSBBU1QuSkxTOCkgewor
CQkJdGhpcy5tb2RpZmllcnMgPSBuZXcgQVNUTm9kZS5Ob2RlTGlzdChNT0RJRklFUlNfUFJPUEVS
VFkpOworCQl9IGVsc2UgaWYgKGFwaUxldmVsID49IEFTVC5KTFMzX0lOVEVSTkFMKSB7CiAJCQl0
aGlzLmFubm90YXRpb25zID0gbmV3IEFTVE5vZGUuTm9kZUxpc3QoQU5OT1RBVElPTlNfUFJPUEVS
VFkpOwogCQl9CiAJfQpAQCAtMTc2LDYgKzIxNCw5IEBACiAJICogTWV0aG9kIGRlY2xhcmVkIG9u
IEFTVE5vZGUuCiAJICovCiAJZmluYWwgTGlzdCBpbnRlcm5hbEdldENoaWxkTGlzdFByb3BlcnR5
KENoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBwcm9wZXJ0eSkgeworCQlpZiAocHJvcGVydHkg
PT0gTU9ESUZJRVJTX1BST1BFUlRZKSB7CisJCQlyZXR1cm4gbW9kaWZpZXJzKCk7CisJCX0KIAkJ
aWYgKHByb3BlcnR5ID09IEFOTk9UQVRJT05TX1BST1BFUlRZKSB7CiAJCQlyZXR1cm4gYW5ub3Rh
dGlvbnMoKTsKIAkJfQpAQCAtMTk2LDkgKzIzNywxNCBAQAogCUFTVE5vZGUgY2xvbmUwKEFTVCB0
YXJnZXQpIHsKIAkJUGFja2FnZURlY2xhcmF0aW9uIHJlc3VsdCA9IG5ldyBQYWNrYWdlRGVjbGFy
YXRpb24odGFyZ2V0KTsKIAkJcmVzdWx0LnNldFNvdXJjZVJhbmdlKGdldFN0YXJ0UG9zaXRpb24o
KSwgZ2V0TGVuZ3RoKCkpOwotCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwgPj0gQVNULkpMUzNfSU5U
RVJOQUwpIHsKKwkJaW50IGFwaUxldmVsID0gdGhpcy5hc3QuYXBpTGV2ZWwoKTsKKwkJaWYgKGFw
aUxldmVsID49IEFTVC5KTFMzX0lOVEVSTkFMKSB7CiAJCQlyZXN1bHQuc2V0SmF2YWRvYygoSmF2
YWRvYykgQVNUTm9kZS5jb3B5U3VidHJlZSh0YXJnZXQsIGdldEphdmFkb2MoKSkpOwotCQkJcmVz
dWx0LmFubm90YXRpb25zKCkuYWRkQWxsKEFTVE5vZGUuY29weVN1YnRyZWVzKHRhcmdldCwgYW5u
b3RhdGlvbnMoKSkpOworCQkJaWYgKGFwaUxldmVsIDwgQVNULkpMUzgpIHsKKwkJCQlyZXN1bHQu
YW5ub3RhdGlvbnMoKS5hZGRBbGwoQVNUTm9kZS5jb3B5U3VidHJlZXModGFyZ2V0LCBhbm5vdGF0
aW9ucygpKSk7CisJCQl9IGVsc2UgeworCQkJCXJlc3VsdC5tb2RpZmllcnMoKS5hZGRBbGwoQVNU
Tm9kZS5jb3B5U3VidHJlZXModGFyZ2V0LCBtb2RpZmllcnMoKSkpOworCQkJfQogCQl9CiAJCXJl
c3VsdC5zZXROYW1lKChOYW1lKSBnZXROYW1lKCkuY2xvbmUodGFyZ2V0KSk7CiAJCXJldHVybiBy
ZXN1bHQ7CkBAIC0yMTgsOSArMjY0LDEwIEBACiAJdm9pZCBhY2NlcHQwKEFTVFZpc2l0b3Igdmlz
aXRvcikgewogCQlib29sZWFuIHZpc2l0Q2hpbGRyZW4gPSB2aXNpdG9yLnZpc2l0KHRoaXMpOwog
CQlpZiAodmlzaXRDaGlsZHJlbikgewotCQkJaWYgKHRoaXMuYXN0LmFwaUxldmVsID49IEFTVC5K
TFMzX0lOVEVSTkFMKSB7CisJCQlpbnQgYXBpTGV2ZWwgPSB0aGlzLmFzdC5hcGlMZXZlbCgpOwor
CQkJaWYgKGFwaUxldmVsID49IEFTVC5KTFMzX0lOVEVSTkFMKSB7CiAJCQkJYWNjZXB0Q2hpbGQo
dmlzaXRvciwgZ2V0SmF2YWRvYygpKTsKLQkJCQlhY2NlcHRDaGlsZHJlbih2aXNpdG9yLCB0aGlz
LmFubm90YXRpb25zKTsKKwkJCQlhY2NlcHRDaGlsZHJlbih2aXNpdG9yLCBhcGlMZXZlbCA8IEFT
VC5KTFM4ID8gdGhpcy5hbm5vdGF0aW9ucyA6IHRoaXMubW9kaWZpZXJzKTsKIAkJCX0KIAkJCWFj
Y2VwdENoaWxkKHZpc2l0b3IsIGdldE5hbWUoKSk7CiAJCX0KQEAgLTIzNiwxMyArMjgzLDI2IEBA
CiAJICogQGV4Y2VwdGlvbiBVbnN1cHBvcnRlZE9wZXJhdGlvbkV4Y2VwdGlvbiBpZiB0aGlzIG9w
ZXJhdGlvbiBpcyB1c2VkIGluCiAJICogYSBKTFMyIEFTVAogCSAqIEBzaW5jZSAzLjEKKwkgKiBA
ZGVwcmVjYXRlZCBGcm9tIEpMUzggb253YXJkcywgdXNlIHtAbGluayAjbW9kaWZpZXJzKCl9CiAJ
ICovCiAJcHVibGljIExpc3QgYW5ub3RhdGlvbnMoKSB7Ci0JCS8vIG1vcmUgZWZmaWNpZW50IHRo
YW4ganVzdCBjYWxsaW5nIHVuc3VwcG9ydGVkSW4yKCkgdG8gY2hlY2sKLQkJaWYgKHRoaXMuYW5u
b3RhdGlvbnMgPT0gbnVsbCkgewotCQkJdW5zdXBwb3J0ZWRJbjIoKTsKLQkJfQorCQl1bnN1cHBv
cnRlZEluMigpOwogCQlyZXR1cm4gdGhpcy5hbm5vdGF0aW9uczsKKwl9CisKKwkvKioKKwkgKiBS
ZXR1cm5zIHRoZSBsaXZlIG9yZGVyZWQgbGlzdCBvZiBtb2RpZmllcnMgb2YgdGhpcworCSAqIHBh
Y2thZ2UgZGVjbGFyYXRpb24gKGFkZGVkIGluIEpMUzggQVBJKS4KKwkgKgorCSAqIEByZXR1cm4g
dGhlIGxpdmUgbGlzdCBvZiBtb2RpZmllcnMKKwkgKiAgICAoZWxlbWVudCB0eXBlOiB7QGxpbmsg
SUV4dGVuZGVkTW9kaWZpZXJ9KQorCSAqIEBleGNlcHRpb24gVW5zdXBwb3J0ZWRPcGVyYXRpb25F
eGNlcHRpb24gaWYgdGhpcyBvcGVyYXRpb24gaXMgdXNlZCBpbgorCSAqIGFuIGFzdCB3aXRoIGxl
dmVsIGxlc3MgdGhhbiBKTFM4CisJICogQHNpbmNlIDMuOSBCRVRBX0pBVkE4CisJICovCisJcHVi
bGljIExpc3QgbW9kaWZpZXJzKCkgeworCQl1bnN1cHBvcnRlZEluMl8zXzQoKTsKKwkJcmV0dXJu
IHRoaXMubW9kaWZpZXJzOwogCX0KIAogCS8qKgpAQCAtMjU0LDEwICszMTQsNyBAQAogCSAqIEBz
aW5jZSAzLjAKIAkgKi8KIAlwdWJsaWMgSmF2YWRvYyBnZXRKYXZhZG9jKCkgewotCQkvLyBtb3Jl
IGVmZmljaWVudCB0aGFuIGp1c3QgY2FsbGluZyB1bnN1cHBvcnRlZEluMigpIHRvIGNoZWNrCi0J
CWlmICh0aGlzLmFubm90YXRpb25zID09IG51bGwpIHsKLQkJCXVuc3VwcG9ydGVkSW4yKCk7Ci0J
CX0KKwkJdW5zdXBwb3J0ZWRJbjIoKTsKIAkJcmV0dXJuIHRoaXMub3B0aW9uYWxEb2NDb21tZW50
OwogCX0KIApAQCAtMjcxLDEwICszMjgsNyBAQAogCSAqIEBzaW5jZSAzLjAKIAkgKi8KIAlwdWJs
aWMgdm9pZCBzZXRKYXZhZG9jKEphdmFkb2MgZG9jQ29tbWVudCkgewotCQkvLyBtb3JlIGVmZmlj
aWVudCB0aGFuIGp1c3QgY2FsbGluZyB1bnN1cHBvcnRlZEluMigpIHRvIGNoZWNrCi0JCWlmICh0
aGlzLmFubm90YXRpb25zID09IG51bGwpIHsKLQkJCXVuc3VwcG9ydGVkSW4yKCk7Ci0JCX0KKwkJ
dW5zdXBwb3J0ZWRJbjIoKTsKIAkJQVNUTm9kZSBvbGRDaGlsZCA9IHRoaXMub3B0aW9uYWxEb2ND
b21tZW50OwogCQlwcmVSZXBsYWNlQ2hpbGQob2xkQ2hpbGQsIGRvY0NvbW1lbnQsIEpBVkFET0Nf
UFJPUEVSVFkpOwogCQl0aGlzLm9wdGlvbmFsRG9jQ29tbWVudCA9IGRvY0NvbW1lbnQ7CkBAIC0z
MzksMTcgKzM5MywxOCBAQAogCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgogCSAqLwog
CWludCBtZW1TaXplKCkgewotCQlyZXR1cm4gQkFTRV9OT0RFX1NJWkUgKyAzICogNDsKKwkJcmV0
dXJuIEJBU0VfTk9ERV9TSVpFICsgNCAqIDQ7CiAJfQogCiAJLyogKG9taXQgamF2YWRvYyBmb3Ig
dGhpcyBtZXRob2QpCiAJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCiAJICovCiAJaW50
IHRyZWVTaXplKCkgeworCQlOb2RlTGlzdCBub2RlTGlzdCA9IHRoaXMuYXN0LmFwaUxldmVsKCkg
PCBBU1QuSkxTOCA/IHRoaXMuYW5ub3RhdGlvbnMgOiB0aGlzLm1vZGlmaWVyczsKIAkJcmV0dXJu
CiAJCQltZW1TaXplKCkKIAkJCSsgKHRoaXMub3B0aW9uYWxEb2NDb21tZW50ID09IG51bGwgPyAw
IDogZ2V0SmF2YWRvYygpLnRyZWVTaXplKCkpCi0JCQkrICh0aGlzLmFubm90YXRpb25zID09IG51
bGwgPyAwIDogdGhpcy5hbm5vdGF0aW9ucy5saXN0U2l6ZSgpKQorCQkJKyAobm9kZUxpc3QgPT0g
bnVsbCA/IDAgOiBub2RlTGlzdC5saXN0U2l6ZSgpKQogCQkJKyAodGhpcy5wYWNrYWdlTmFtZSA9
PSBudWxsID8gMCA6IGdldE5hbWUoKS50cmVlU2l6ZSgpKTsKIAl9CiB9CmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9t
L05haXZlQVNURmxhdHRlbmVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL05haXZlQVNURmxhdHRlbmVyLmphdmEKaW5kZXgg
NjE4OWExZi4uMzAzMzQ5NSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9OYWl2ZUFTVEZsYXR0ZW5lci5qYXZhCisr
KyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29y
ZS9kb20vTmFpdmVBU1RGbGF0dGVuZXIuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9u
IGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTQgSUJNIENvcnBvcmF0aW9u
IGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRo
ZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhl
IHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29t
cGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0xMjU0LDEx
ICsxMjU0LDEzIEBACiAJICogQHNlZSBBU1RWaXNpdG9yI3Zpc2l0KFBhY2thZ2VEZWNsYXJhdGlv
bikKIAkgKi8KIAlwdWJsaWMgYm9vbGVhbiB2aXNpdChQYWNrYWdlRGVjbGFyYXRpb24gbm9kZSkg
ewotCQlpZiAobm9kZS5nZXRBU1QoKS5hcGlMZXZlbCgpID49IEpMUzMpIHsKKwkJaW50IGFwaUxl
dmVsID0gbm9kZS5nZXRBU1QoKS5hcGlMZXZlbCgpOworCQlpZiAoYXBpTGV2ZWwgPj0gSkxTMykg
ewogCQkJaWYgKG5vZGUuZ2V0SmF2YWRvYygpICE9IG51bGwpIHsKIAkJCQlub2RlLmdldEphdmFk
b2MoKS5hY2NlcHQodGhpcyk7CiAJCQl9Ci0JCQlmb3IgKEl0ZXJhdG9yIGl0ID0gbm9kZS5hbm5v
dGF0aW9ucygpLml0ZXJhdG9yKCk7IGl0Lmhhc05leHQoKTsgKSB7CisJCQlMaXN0IGxpc3QgPSBn
ZXRQYWNrYWdlRGVjbEFNTGlzdChub2RlLCBhcGlMZXZlbCk7CisJCQlmb3IgKEl0ZXJhdG9yIGl0
ID0gbGlzdC5pdGVyYXRvcigpOyBpdC5oYXNOZXh0KCk7ICkgewogCQkJCUFubm90YXRpb24gcCA9
IChBbm5vdGF0aW9uKSBpdC5uZXh0KCk7CiAJCQkJcC5hY2NlcHQodGhpcyk7CiAJCQkJdGhpcy5i
dWZmZXIuYXBwZW5kKCIgIik7Ly8kTk9OLU5MUy0xJApAQCAtMTk1NCw0ICsxOTU2LDExIEBACiAJ
CW5vZGUuZ2V0Q29tcG9uZW50VHlwZSgpLmFjY2VwdCh0aGlzKTsKIAl9CiAKKwkvKioKKwkgKiBA
ZGVwcmVjYXRlZAorCSAqLworCXByaXZhdGUgTGlzdCBnZXRQYWNrYWdlRGVjbEFNTGlzdChQYWNr
YWdlRGVjbGFyYXRpb24gcGFja2FnZURlY2xhcmF0aW9uLCBpbnQgYXBpTGV2ZWwpIHsKKwkJcmV0
dXJuIGFwaUxldmVsIDwgQVNULkpMUzggPyBwYWNrYWdlRGVjbGFyYXRpb24uYW5ub3RhdGlvbnMo
KSA6IHBhY2thZ2VEZWNsYXJhdGlvbi5tb2RpZmllcnMoKTsKKwl9CisKIH0KZGlmZiAtLWdpdCBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9k
b20vcmV3cml0ZS9BU1RSZXdyaXRlQW5hbHl6ZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9BU1RSZXdyaXRl
QW5hbHl6ZXIuamF2YQppbmRleCA0MTcxZmYzLi44MzQ0YTkxIDEwMDY0NAotLS0gYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL3Jld3Jp
dGUvQVNUUmV3cml0ZUFuYWx5emVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9t
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9yZXdyaXRlL0FTVFJld3JpdGVBbmFs
eXplci5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENv
cHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENv
cHlyaWdodCAoYykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFs
bCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRl
cmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlw
c2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmli
dXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTg1LDYgKzg1LDkgQEAKIAogCS8qKiBAZGVw
cmVjYXRlZCB1c2luZyBkZXByZWNhdGVkIGNvZGUgKi8KIAlwcml2YXRlIHN0YXRpYyBmaW5hbCBD
aGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IgSU5URVJOQUxfTUVUSE9EX1RIUk9XTl9FWENFUFRJ
T05TX1BST1BFUlRZID0gTWV0aG9kRGVjbGFyYXRpb24uVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVS
VFk7CisKKwkvKiogQGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVjYXRlZCBjb2RlICovCisJcHJpdmF0
ZSBzdGF0aWMgZmluYWwgQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yIElOVEVSTkFMX1BBQ0tB
R0VfQU5OT1RBVElPTlNfUFJPUEVSVFkgPSBQYWNrYWdlRGVjbGFyYXRpb24uQU5OT1RBVElPTlNf
UFJPUEVSVFk7CiAKIAkvKiogQGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVjYXRlZCBjb2RlICovCiAJ
cHJpdmF0ZSBzdGF0aWMgZmluYWwgU2ltcGxlUHJvcGVydHlEZXNjcmlwdG9yIElOVEVSTkFMX1RZ
UEVfTU9ESUZJRVJTX1BST1BFUlRZID0gVHlwZURlY2xhcmF0aW9uLk1PRElGSUVSU19QUk9QRVJU
WTsKQEAgLTMxMjUsOSArMzEyOCwxMSBAQAogCQlpZiAoIWhhc0NoaWxkcmVuQ2hhbmdlcyhub2Rl
KSkgewogCQkJcmV0dXJuIGRvVmlzaXRVbmNoYW5nZWRDaGlsZHJlbihub2RlKTsKIAkJfQotCQlp
ZiAobm9kZS5nZXRBU1QoKS5hcGlMZXZlbCgpID49IEpMUzNfSU5URVJOQUwpIHsKKwkJaW50IGFw
aUxldmVsID0gbm9kZS5nZXRBU1QoKS5hcGlMZXZlbCgpOworCQlpZiAoYXBpTGV2ZWwgPj0gSkxT
M19JTlRFUk5BTCkgewogCQkJaW50IHBvcz0gcmV3cml0ZUphdmFkb2Mobm9kZSwgUGFja2FnZURl
Y2xhcmF0aW9uLkpBVkFET0NfUFJPUEVSVFkpOwotCQkJcmV3cml0ZU1vZGlmaWVyczIobm9kZSwg
UGFja2FnZURlY2xhcmF0aW9uLkFOTk9UQVRJT05TX1BST1BFUlRZLCBwb3MpOworCQkJQ2hpbGRM
aXN0UHJvcGVydHlEZXNjcmlwdG9yIHByb3BlcnR5ID0gYXBpTGV2ZWwgPCBBU1QuSkxTOCA/IElO
VEVSTkFMX1BBQ0tBR0VfQU5OT1RBVElPTlNfUFJPUEVSVFkgOiBQYWNrYWdlRGVjbGFyYXRpb24u
TU9ESUZJRVJTX1BST1BFUlRZOworCQkJcmV3cml0ZU1vZGlmaWVyczIobm9kZSwgcHJvcGVydHks
IHBvcyk7CiAJCX0KIAogCQlyZXdyaXRlUmVxdWlyZWROb2RlKG5vZGUsIFBhY2thZ2VEZWNsYXJh
dGlvbi5OQU1FX1BST1BFUlRZKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Rv
bS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9BU1RSZXdyaXRlRmxh
dHRlbmVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvcmUvZG9tL3Jld3JpdGUvQVNUUmV3cml0ZUZsYXR0ZW5lci5qYXZhCmluZGV4IDhk
MWVhZmYuLmQwZDMzMjkgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9BU1RSZXdyaXRlRmxhdHRlbmVy
LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL2RvbS9yZXdyaXRlL0FTVFJld3JpdGVGbGF0dGVuZXIuamF2YQpAQCAtMSw1ICsx
LDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIw
MTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIw
MTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBU
aGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBh
dmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYx
LjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxh
YmxlIGF0CkBAIC00Miw2ICs0Miw5IEBACiAKIAkvKiogQGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVj
YXRlZCBjb2RlICovCiAJcHJpdmF0ZSBzdGF0aWMgZmluYWwgQ2hpbGRMaXN0UHJvcGVydHlEZXNj
cmlwdG9yIElOVEVSTkFMX01FVEhPRF9USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSA9IE1ldGhv
ZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZOworCisJLyoqIEBkZXByZWNh
dGVkIHVzaW5nIGRlcHJlY2F0ZWQgY29kZSAqLworCXByaXZhdGUgc3RhdGljIGZpbmFsIENoaWxk
TGlzdFByb3BlcnR5RGVzY3JpcHRvciBJTlRFUk5BTF9QQUNLQUdFX0FOTk9UQVRJT05TX1BST1BF
UlRZID0gUGFja2FnZURlY2xhcmF0aW9uLkFOTk9UQVRJT05TX1BST1BFUlRZOwogCiAJLyoqIEBk
ZXByZWNhdGVkIHVzaW5nIGRlcHJlY2F0ZWQgY29kZSAqLwogCXByaXZhdGUgc3RhdGljIGZpbmFs
IFNpbXBsZVByb3BlcnR5RGVzY3JpcHRvciBJTlRFUk5BTF9UWVBFX01PRElGSUVSU19QUk9QRVJU
WSA9IFR5cGVEZWNsYXJhdGlvbi5NT0RJRklFUlNfUFJPUEVSVFk7CkBAIC04MTQsMTIgKzgxNywx
NCBAQAogCSAqIEBzZWUgQVNUVmlzaXRvciN2aXNpdChQYWNrYWdlRGVjbGFyYXRpb24pCiAJICov
CiAJcHVibGljIGJvb2xlYW4gdmlzaXQoUGFja2FnZURlY2xhcmF0aW9uIG5vZGUpIHsKLQkJaWYg
KG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA+PSBKTFMzX0lOVEVSTkFMKSB7CisJCWludCBhcGlM
ZXZlbCA9IG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKTsKKwkJaWYgKGFwaUxldmVsID49IEpMUzNf
SU5URVJOQUwpIHsKIAkJCUFTVE5vZGUgamF2YWRvYyA9IGdldENoaWxkTm9kZShub2RlLCBQYWNr
YWdlRGVjbGFyYXRpb24uSkFWQURPQ19QUk9QRVJUWSk7CiAJCQlpZiAoamF2YWRvYyAhPSBudWxs
KSB7CiAJCQkJamF2YWRvYy5hY2NlcHQodGhpcyk7CiAJCQl9Ci0JCQl2aXNpdExpc3Qobm9kZSwg
UGFja2FnZURlY2xhcmF0aW9uLkFOTk9UQVRJT05TX1BST1BFUlRZLCBTdHJpbmcudmFsdWVPZign
ICcpKTsKKwkJCUNoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBwcm9wZXJ0eSA9IGFwaUxldmVs
IDwgQVNULkpMUzggPyBJTlRFUk5BTF9QQUNLQUdFX0FOTk9UQVRJT05TX1BST1BFUlRZIDogUGFj
a2FnZURlY2xhcmF0aW9uLk1PRElGSUVSU19QUk9QRVJUWTsKKwkJCXZpc2l0TGlzdChub2RlLCBw
cm9wZXJ0eSwgU3RyaW5nLnZhbHVlT2YoJyAnKSk7CiAJCX0KIAkJdGhpcy5yZXN1bHQuYXBwZW5k
KCJwYWNrYWdlICIpOyAvLyROT04tTkxTLTEkCiAJCWdldENoaWxkTm9kZShub2RlLCBQYWNrYWdl
RGVjbGFyYXRpb24uTkFNRV9QUk9QRVJUWSkuYWNjZXB0KHRoaXMpOw==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>239431</attachid>
            <date>2014-01-29 10:02:00 -0500</date>
            <delta_ts>2014-02-01 01:16:32 -0500</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Fix-for-Bug-426462--18dom-ast-PackageDeclaration-Typ.patch</filename>
            <type>text/plain</type>
            <size>44876</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMTVKTFM0VGVzdC5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2RvbS9BU1RDb252ZXJ0ZXIxNUpMUzRUZXN0LmphdmEKaW5kZXggNmNiNWE1NC4uMmYzYjUy
ZCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxNUpMUzRUZXN0LmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxNUpMUzRUZXN0LmphdmEKQEAgLTc1LDYgKzc1LDEz
IEBACiAJCXJldHVybiBhcnJheS5nZXRDb21wb25lbnRUeXBlKCk7CiAJfQogCisJLyoqCisJICog
QGRlcHJlY2F0ZWQKKwkgKi8KKwlwcml2YXRlIExpc3QgZ2V0UGFja2FnZURlY2xBTUxpc3QoUGFj
a2FnZURlY2xhcmF0aW9uIHBhY2thZ2VEZWNsYXJhdGlvbiwgaW50IGFwaUxldmVsKSB7CisJCXJl
dHVybiBhcGlMZXZlbCA8IEFTVC5KTFM4ID8gcGFja2FnZURlY2xhcmF0aW9uLmFubm90YXRpb25z
KCkgOiBwYWNrYWdlRGVjbGFyYXRpb24ubW9kaWZpZXJzKCk7CisJfQorCiAJLy8gaHR0cHM6Ly9i
dWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTIzNDYwOSBCaW5kaW5nS2V5I3Rv
U2lnbmF0dXJlKCkgZmFpbHMgd2l0aCBrZXkgZnJvbSBjcmVhdGVXaWxjYXJkVHlwZUJpbmRpbmdL
ZXkoLi4pCiAJcHVibGljIHZvaWQgdGVzdDIzNDYwOSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRp
b24gewogCkBAIC00MTAsNyArNDE3LDcgQEAKIAkJUGFja2FnZURlY2xhcmF0aW9uIHBhY2thZ2VE
ZWNsYXJhdGlvbiA9IGNvbXBpbGF0aW9uVW5pdC5nZXRQYWNrYWdlKCk7CiAJCWFzc2VydE5vdE51
bGwoIk5vIHBhY2thZ2UgZGVjbGFyYXRpb24iLCBwYWNrYWdlRGVjbGFyYXRpb24pOwogCQljaGVj
a1NvdXJjZVJhbmdlKHBhY2thZ2VEZWNsYXJhdGlvbiwgIkBSZXRlbnRpb24gcGFja2FnZSB0ZXN0
MDAwNjsiLCBzb3VyY2UpOwotCQlMaXN0IGFubm90YXRpb25zID0gcGFja2FnZURlY2xhcmF0aW9u
LmFubm90YXRpb25zKCk7CisJCUxpc3QgYW5ub3RhdGlvbnMgPSBnZXRQYWNrYWdlRGVjbEFNTGlz
dChwYWNrYWdlRGVjbGFyYXRpb24sIHRoaXMuYXN0LmFwaUxldmVsKCkpOwogCQlhc3NlcnRFcXVh
bHMoIldyb25nIHNpemUiLCAxLCBhbm5vdGF0aW9ucy5zaXplKCkpOwogCQlBbm5vdGF0aW9uIGFu
bm90YXRpb24gPSAoQW5ub3RhdGlvbikgYW5ub3RhdGlvbnMuZ2V0KDApOwogCQljaGVja1NvdXJj
ZVJhbmdlKGFubm90YXRpb24sICJAUmV0ZW50aW9uIiwgc291cmNlKTsKZGlmZiAtLWdpdCBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90
ZXN0cy9kb20vQVNUQ29udmVydGVyMTVKTFM4VGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252
ZXJ0ZXIxNUpMUzhUZXN0LmphdmEKaW5kZXggODNlYjVmYy4uMjk3ODY3NyAxMDA2NDQKLS0tIGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxNUpMUzhUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9B
U1RDb252ZXJ0ZXIxNUpMUzhUZXN0LmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDExLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDExLCAyMDE0IElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUg
YWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0
ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBh
bmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtNjYsNiArNjYs
MTMgQEAKIAkJCXRoaXMud29ya2luZ0NvcHkuZGlzY2FyZFdvcmtpbmdDb3B5KCk7CiAJCQl0aGlz
LndvcmtpbmdDb3B5ID0gbnVsbDsKIAkJfQorCX0KKworCS8qKgorCSAqIEBkZXByZWNhdGVkCisJ
ICovCisJcHJpdmF0ZSBMaXN0IGdldFBhY2thZ2VEZWNsQU1MaXN0KFBhY2thZ2VEZWNsYXJhdGlv
biBwYWNrYWdlRGVjbGFyYXRpb24sIGludCBhcGlMZXZlbCkgeworCQlyZXR1cm4gYXBpTGV2ZWwg
PCBBU1QuSkxTOCA/IHBhY2thZ2VEZWNsYXJhdGlvbi5hbm5vdGF0aW9ucygpIDogcGFja2FnZURl
Y2xhcmF0aW9uLm1vZGlmaWVycygpOwogCX0KIAogCS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yMzQ2MDkgQmluZGluZ0tleSN0b1NpZ25hdHVyZSgpIGZh
aWxzIHdpdGgga2V5IGZyb20gY3JlYXRlV2lsY2FyZFR5cGVCaW5kaW5nS2V5KC4uKQpAQCAtNDAz
LDcgKzQxMCw3IEBACiAJCVBhY2thZ2VEZWNsYXJhdGlvbiBwYWNrYWdlRGVjbGFyYXRpb24gPSBj
b21waWxhdGlvblVuaXQuZ2V0UGFja2FnZSgpOwogCQlhc3NlcnROb3ROdWxsKCJObyBwYWNrYWdl
IGRlY2xhcmF0aW9uIiwgcGFja2FnZURlY2xhcmF0aW9uKTsKIAkJY2hlY2tTb3VyY2VSYW5nZShw
YWNrYWdlRGVjbGFyYXRpb24sICJAUmV0ZW50aW9uIHBhY2thZ2UgdGVzdDAwMDY7Iiwgc291cmNl
KTsKLQkJTGlzdCBhbm5vdGF0aW9ucyA9IHBhY2thZ2VEZWNsYXJhdGlvbi5hbm5vdGF0aW9ucygp
OworCQlMaXN0IGFubm90YXRpb25zID0gZ2V0UGFja2FnZURlY2xBTUxpc3QocGFja2FnZURlY2xh
cmF0aW9uLCB0aGlzLmFzdC5hcGlMZXZlbCgpKTsKIAkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzaXpl
IiwgMSwgYW5ub3RhdGlvbnMuc2l6ZSgpKTsKIAkJQW5ub3RhdGlvbiBhbm5vdGF0aW9uID0gKEFu
bm90YXRpb24pIGFubm90YXRpb25zLmdldCgwKTsKIAkJY2hlY2tTb3VyY2VSYW5nZShhbm5vdGF0
aW9uLCAiQFJldGVudGlvbiIsIHNvdXJjZSk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENv
bnZlcnRlcjE1VGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxNVRlc3QuamF2YQpp
bmRleCBhY2RjNzkwLi5iODU2NjUzIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRl
cjE1VGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMTVUZXN0LmphdmEKQEAg
LTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAy
MDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAy
MDAwLCAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNl
cnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJl
IG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGlj
ZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlz
IGF2YWlsYWJsZSBhdApAQCAtODMsNiArODMsMTMgQEAKIAkgKi8KIAlwcml2YXRlIFR5cGUgY29t
cG9uZW50VHlwZShBcnJheVR5cGUgYXJyYXkpIHsKIAkJcmV0dXJuIGFycmF5LmdldENvbXBvbmVu
dFR5cGUoKTsKKwl9CisKKwkvKioKKwkgKiBAZGVwcmVjYXRlZAorCSAqLworCXByaXZhdGUgTGlz
dCBnZXRQYWNrYWdlRGVjbEFNTGlzdChQYWNrYWdlRGVjbGFyYXRpb24gcGFja2FnZURlY2xhcmF0
aW9uLCBpbnQgYXBpTGV2ZWwpIHsKKwkJcmV0dXJuIGFwaUxldmVsIDwgQVNULkpMUzggPyBwYWNr
YWdlRGVjbGFyYXRpb24uYW5ub3RhdGlvbnMoKSA6IHBhY2thZ2VEZWNsYXJhdGlvbi5tb2RpZmll
cnMoKTsKIAl9CiAKIAkvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9MjM0NjA5IEJpbmRpbmdLZXkjdG9TaWduYXR1cmUoKSBmYWlscyB3aXRoIGtleSBmcm9t
IGNyZWF0ZVdpbGNhcmRUeXBlQmluZGluZ0tleSguLikKQEAgLTQyMCw3ICs0MjcsNyBAQAogCQlQ
YWNrYWdlRGVjbGFyYXRpb24gcGFja2FnZURlY2xhcmF0aW9uID0gY29tcGlsYXRpb25Vbml0Lmdl
dFBhY2thZ2UoKTsKIAkJYXNzZXJ0Tm90TnVsbCgiTm8gcGFja2FnZSBkZWNsYXJhdGlvbiIsIHBh
Y2thZ2VEZWNsYXJhdGlvbik7CiAJCWNoZWNrU291cmNlUmFuZ2UocGFja2FnZURlY2xhcmF0aW9u
LCAiQFJldGVudGlvbiBwYWNrYWdlIHRlc3QwMDA2OyIsIHNvdXJjZSk7Ci0JCUxpc3QgYW5ub3Rh
dGlvbnMgPSBwYWNrYWdlRGVjbGFyYXRpb24uYW5ub3RhdGlvbnMoKTsKKwkJTGlzdCBhbm5vdGF0
aW9ucyA9IGdldFBhY2thZ2VEZWNsQU1MaXN0KHBhY2thZ2VEZWNsYXJhdGlvbiwgdGhpcy5hc3Qu
YXBpTGV2ZWwoKSk7CiAJCWFzc2VydEVxdWFscygiV3Jvbmcgc2l6ZSIsIDEsIGFubm90YXRpb25z
LnNpemUoKSk7CiAJCUFubm90YXRpb24gYW5ub3RhdGlvbiA9IChBbm5vdGF0aW9uKSBhbm5vdGF0
aW9ucy5nZXQoMCk7CiAJCWNoZWNrU291cmNlUmFuZ2UoYW5ub3RhdGlvbiwgIkBSZXRlbnRpb24i
LCBzb3VyY2UpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwv
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEKaW5kZXggNDljZmYyNC4uMjQ2
NjE2ZCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YQorKysg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZhCkBAIC0xNDQxLDggKzE0NDEsOCBA
QAogCiAJCS8vIFR5cGVQYXJhbWV0ZXIgd2l0aCBUWVBFX1VTRSBhbmQgVFlQRV9QQVJBTUVURVIg
YW5ub3RhdGlvbiBjb21iaW5hdGlvbi4KIAkJYXNzZXJ0RXF1YWxzKCJATWFya2VyMSBATWFya2Vy
MyBGIGV4dGVuZHMgQE1hcmtlcjEgQE1hcmtlcjIgRmlsZSIsIHR5cGVQYXJhbWV0ZXIudG9TdHJp
bmcoKSk7Ci0JCWFzc2VydFRydWUodHlwZVBhcmFtZXRlci5hbm5vdGF0aW9ucygpLnNpemUoKSA9
PSAyKTsKLQkJQW5ub3RhdGlvbiBhbm5vdGF0aW9uID0gKEFubm90YXRpb24pdHlwZVBhcmFtZXRl
ci5hbm5vdGF0aW9ucygpLmdldCgxKTsKKwkJYXNzZXJ0VHJ1ZSh0eXBlUGFyYW1ldGVyLm1vZGlm
aWVycygpLnNpemUoKSA9PSAyKTsKKwkJQW5ub3RhdGlvbiBhbm5vdGF0aW9uID0gKEFubm90YXRp
b24pdHlwZVBhcmFtZXRlci5tb2RpZmllcnMoKS5nZXQoMSk7CiAJCWFzc2VydEVxdWFscygiQE1h
cmtlcjMiLCBhbm5vdGF0aW9uLnRvU3RyaW5nKCkpOwogCQlJQW5ub3RhdGlvbkJpbmRpbmcgYWJp
bmRpbmcgPSBhbm5vdGF0aW9uLnJlc29sdmVBbm5vdGF0aW9uQmluZGluZygpOwogCQlhc3NlcnRF
cXVhbHMoIkBNYXJrZXIzKCkiLCBhYmluZGluZy50b1N0cmluZygpKTsKQEAgLTE1MzAsOCArMTUz
MCw4IEBACiAJCXR5cGVkZWNsYXJhdGlvbiA9IChUeXBlRGVjbGFyYXRpb24pIGdldEFTVE5vZGUo
Y3UsIDEpOwogCQl0eXBlUGFyYW1ldGVyID0gKFR5cGVQYXJhbWV0ZXIpIHR5cGVkZWNsYXJhdGlv
bi50eXBlUGFyYW1ldGVycygpLmdldCgwKTsKIAkJYXNzZXJ0RXF1YWxzKCJATWFya2VyMyBUIiwg
dHlwZVBhcmFtZXRlci50b1N0cmluZygpKTsKLQkJYXNzZXJ0VHJ1ZSh0eXBlUGFyYW1ldGVyLmFu
bm90YXRpb25zKCkuc2l6ZSgpID09IDEpOwotCQlhbm5vdGF0aW9uID0gKEFubm90YXRpb24pdHlw
ZVBhcmFtZXRlci5hbm5vdGF0aW9ucygpLmdldCgwKTsKKwkJYXNzZXJ0VHJ1ZSh0eXBlUGFyYW1l
dGVyLm1vZGlmaWVycygpLnNpemUoKSA9PSAxKTsKKwkJYW5ub3RhdGlvbiA9IChBbm5vdGF0aW9u
KXR5cGVQYXJhbWV0ZXIubW9kaWZpZXJzKCkuZ2V0KDApOwogCQlhc3NlcnRFcXVhbHMoIkBNYXJr
ZXIzIiwgYW5ub3RhdGlvbi50b1N0cmluZygpKTsKIAkJYWJpbmRpbmcgPSBhbm5vdGF0aW9uLnJl
c29sdmVBbm5vdGF0aW9uQmluZGluZygpOwogCQlhc3NlcnRFcXVhbHMoIkBNYXJrZXIzKCkiLCBh
YmluZGluZy50b1N0cmluZygpKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUTWF0Y2hlclRl
c3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUTWF0Y2hlclRlc3QuamF2YQppbmRleCA5OTZkNWIwLi41
YTQwYWU1IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVE1hdGNoZXJUZXN0LmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL2RvbS9BU1RNYXRjaGVyVGVzdC5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQg
dGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0
aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNj
b21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTE2LDYg
KzE2LDcgQEAKIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuZG9tOwogCiBpbXBv
cnQgamF2YS5sYW5nLnJlZmxlY3QuTWV0aG9kOworaW1wb3J0IGphdmEudXRpbC5MaXN0OwogCiBp
bXBvcnQganVuaXQuZnJhbWV3b3JrLlRlc3Q7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUu
ZG9tLio7CkBAIC0xMTE5LDEwICsxMTIwLDExIEBACiAJfQogCXB1YmxpYyB2b2lkIHRlc3RQYWNr
YWdlRGVjbGFyYXRpb24oKSB7CiAJCVBhY2thZ2VEZWNsYXJhdGlvbiB4MSA9IHRoaXMuYXN0Lm5l
d1BhY2thZ2VEZWNsYXJhdGlvbigpOwotCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA+PSBKTFMz
X0lOVEVSTkFMKSB7CisJCWludCBhcGlMZXZlbCA9IHRoaXMuYXN0LmFwaUxldmVsKCk7CisJCWlm
IChhcGlMZXZlbCA+PSBKTFMzX0lOVEVSTkFMKSB7CiAJCQl4MS5zZXRKYXZhZG9jKHRoaXMuSkQx
KTsKLQkJCXgxLmFubm90YXRpb25zKCkuYWRkKHRoaXMuQU5PMSk7Ci0JCQl4MS5hbm5vdGF0aW9u
cygpLmFkZCh0aGlzLkFOTzIpOworCQkJZ2V0UGFja2FnZURlY2xBTUxpc3QoeDEsIGFwaUxldmVs
KS5hZGQodGhpcy5BTk8xKTsKKwkJCWdldFBhY2thZ2VEZWNsQU1MaXN0KHgxLCBhcGlMZXZlbCku
YWRkKHRoaXMuQU5PMik7CiAJCX0KIAkJYmFzaWNNYXRjaCh4MSk7CiAJfQpAQCAtMTYwMiw3ICsx
NjA0LDcgQEAKIAkJVHlwZURlY2xhcmF0aW9uIHgxID0gdGhpcy5hc3QubmV3VHlwZURlY2xhcmF0
aW9uKCk7CiAJCVR5cGVQYXJhbWV0ZXIgeDIgPSB0aGlzLmFzdC5uZXdUeXBlUGFyYW1ldGVyKCk7
CiAJCXgyLnNldE5hbWUodGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiVCIpKTsKLQkJeDIuYW5ub3Rh
dGlvbnMoKS5hZGQodGhpcy5BTk8xKTsKKwkJeDIubW9kaWZpZXJzKCkuYWRkKHRoaXMuQU5PMSk7
CiAJCXgxLnR5cGVQYXJhbWV0ZXJzKCkuYWRkKHgyKTsKIAkJeDEuc2V0TmFtZSh0aGlzLk4yKTsK
IAkJYmFzaWNNYXRjaCh4MSk7CkBAIC0xNjk4LDQgKzE3MDAsMTAgQEAKIAkJeDEudHlwZXMoKS5h
ZGQodGhpcy5hc3QubmV3U2ltcGxlVHlwZSh0aGlzLk4xKSk7CiAJCWJhc2ljTWF0Y2goeDEpOwog
CX0KKwkvKioKKwkgKiBAZGVwcmVjYXRlZAorCSAqLworCXByaXZhdGUgTGlzdCBnZXRQYWNrYWdl
RGVjbEFNTGlzdChQYWNrYWdlRGVjbGFyYXRpb24gcGFja2FnZURlY2xhcmF0aW9uLCBpbnQgYXBp
TGV2ZWwpIHsKKwkJcmV0dXJuIGFwaUxldmVsIDwgQVNULkpMUzggPyBwYWNrYWdlRGVjbGFyYXRp
b24uYW5ub3RhdGlvbnMoKSA6IHBhY2thZ2VEZWNsYXJhdGlvbi5tb2RpZmllcnMoKTsKKwl9CiB9
CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUVGVz
dC5qYXZhCmluZGV4IGJkN2UyNzUuLjZlMDBhMGQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNU
VGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUVGVzdC5qYXZhCkBAIC0xLDUgKzEsNSBAQAog
LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0g
Q29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxNCBJQk0g
Q29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJv
Z3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJs
ZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICog
d2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQK
QEAgLTI0MjMsNiArMjQyMyw5IEBACiAKIAl9CiAKKwkvKioKKwkgKiBAZGVwcmVjYXRlZAorCSAq
LwogCXB1YmxpYyB2b2lkIHRlc3RQYWNrYWdlRGVjbGFyYXRpb24oKSB7CiAJCWxvbmcgcHJldmlv
dXNDb3VudCA9IHRoaXMuYXN0Lm1vZGlmaWNhdGlvbkNvdW50KCk7CiAJCWZpbmFsIFBhY2thZ2VE
ZWNsYXJhdGlvbiB4ID0gdGhpcy5hc3QubmV3UGFja2FnZURlY2xhcmF0aW9uKCk7CkBAIC0yNDMw
LDkgKzI0MzMsMTAgQEAKIAkJcHJldmlvdXNDb3VudCA9IHRoaXMuYXN0Lm1vZGlmaWNhdGlvbkNv
dW50KCk7CiAJCWFzc2VydFRydWUoeC5nZXRBU1QoKSA9PSB0aGlzLmFzdCk7CiAJCWFzc2VydFRy
dWUoeC5nZXRQYXJlbnQoKSA9PSBudWxsKTsKLQkJaWYgKHRoaXMuYXN0LmFwaUxldmVsKCkgPj0g
SkxTM19JTlRFUk5BTCkgeworCQlpbnQgYXBpTGV2ZWwgPSB0aGlzLmFzdC5hcGlMZXZlbCgpOwor
CQlpZiAoYXBpTGV2ZWwgPj0gSkxTM19JTlRFUk5BTCkgewogCQkJYXNzZXJ0VHJ1ZSh4LmdldEph
dmFkb2MoKSA9PSBudWxsKTsKLQkJCWFzc2VydFRydWUoeC5hbm5vdGF0aW9ucygpLmlzRW1wdHko
KSk7CisJCQlhc3NlcnRUcnVlKGFwaUxldmVsICA8IEFTVC5KTFM4ID8geC5hbm5vdGF0aW9ucygp
LmlzRW1wdHkoKSA6IHgubW9kaWZpZXJzKCkuaXNFbXB0eSgpKTsKIAkJfQogCQlhc3NlcnRUcnVl
KHguZ2V0TmFtZSgpLmdldFBhcmVudCgpID09IHgpOwogCQlhc3NlcnRUcnVlKHguZ2V0Tm9kZVR5
cGUoKSA9PSBBU1ROb2RlLlBBQ0tBR0VfREVDTEFSQVRJT04pOwpAQCAtMjQ0MCw3ICsyNDQ0LDcg
QEAKIAkJLy8gbWFrZSBzdXJlIHRoYXQgcmVhZGluZyBkaWQgbm90IGNoYW5nZSBtb2RpZmljYXRp
b24gY291bnQKIAkJYXNzZXJ0VHJ1ZSh0aGlzLmFzdC5tb2RpZmljYXRpb25Db3VudCgpID09IHBy
ZXZpb3VzQ291bnQpOwogCi0JCWlmICh0aGlzLmFzdC5hcGlMZXZlbCgpID49IEpMUzNfSU5URVJO
QUwpIHsKKwkJaWYgKGFwaUxldmVsID49IEpMUzNfSU5URVJOQUwpIHsKIAkJCWdlbmVyaWNQcm9w
ZXJ0eVRlc3QoeCwgbmV3IFByb3BlcnR5KCJKYXZhZG9jIiwgZmFsc2UsIEphdmFkb2MuY2xhc3Mp
IHsgLy8kTk9OLU5MUy0xJAogCQkJCXB1YmxpYyBBU1ROb2RlIHNhbXBsZShBU1QgdGFyZ2V0QXN0
LCBib29sZWFuIHBhcmVudGVkKSB7CiAJCQkJCUphdmFkb2MgcmVzdWx0ID0gdGFyZ2V0QXN0Lm5l
d0phdmFkb2MoKTsKQEAgLTI0NTcsMTYgKzI0NjEsMjkgQEAKIAkJCQl9CiAJCQl9KTsKIAotCQkJ
Z2VuZXJpY1Byb3BlcnR5TGlzdFRlc3QoeCwgeC5hbm5vdGF0aW9ucygpLCBuZXcgUHJvcGVydHko
IkFubm90YXRpb25zIiwgdHJ1ZSwgQW5ub3RhdGlvbi5jbGFzcykgeyAvLyROT04tTkxTLTEkCi0J
CQkJcHVibGljIEFTVE5vZGUgc2FtcGxlKEFTVCB0YXJnZXRBc3QsIGJvb2xlYW4gcGFyZW50ZWQp
IHsKLQkJCQkJTWFya2VyQW5ub3RhdGlvbiByZXN1bHQgPSB0YXJnZXRBc3QubmV3TWFya2VyQW5u
b3RhdGlvbigpOwotCQkJCQlpZiAocGFyZW50ZWQpIHsKLQkJCQkJCVBhY2thZ2VEZWNsYXJhdGlv
biBwZCA9IHRhcmdldEFzdC5uZXdQYWNrYWdlRGVjbGFyYXRpb24oKTsKLQkJCQkJCXBkLmFubm90
YXRpb25zKCkuYWRkKHJlc3VsdCk7CisJCQlpZiAoYXBpTGV2ZWwgPCBBU1QuSkxTOCkgeworCQkJ
CWdlbmVyaWNQcm9wZXJ0eUxpc3RUZXN0KHgsIHguYW5ub3RhdGlvbnMoKSwgbmV3IFByb3BlcnR5
KCJBbm5vdGF0aW9ucyIsIHRydWUsIEFubm90YXRpb24uY2xhc3MpIHsgLy8kTk9OLU5MUy0xJAor
CQkJCQlwdWJsaWMgQVNUTm9kZSBzYW1wbGUoQVNUIHRhcmdldEFzdCwgYm9vbGVhbiBwYXJlbnRl
ZCkgeworCQkJCQkJTWFya2VyQW5ub3RhdGlvbiByZXN1bHQgPSB0YXJnZXRBc3QubmV3TWFya2Vy
QW5ub3RhdGlvbigpOworCQkJCQkJaWYgKHBhcmVudGVkKSB7CisJCQkJCQkJUGFja2FnZURlY2xh
cmF0aW9uIHBkID0gdGFyZ2V0QXN0Lm5ld1BhY2thZ2VEZWNsYXJhdGlvbigpOworCQkJCQkJCXBk
LmFubm90YXRpb25zKCkuYWRkKHJlc3VsdCk7CisJCQkJCQl9CisJCQkJCQlyZXR1cm4gcmVzdWx0
OwogCQkJCQl9Ci0JCQkJCXJldHVybiByZXN1bHQ7Ci0JCQkJfQotCQkJfSk7CisJCQkJfSk7CisJ
CQl9IGVsc2UgeworCQkJCWdlbmVyaWNQcm9wZXJ0eUxpc3RUZXN0KHgsIHgubW9kaWZpZXJzKCks
IG5ldyBQcm9wZXJ0eSgiTW9kaWZpZXJzIiwgdHJ1ZSwgSUV4dGVuZGVkTW9kaWZpZXIuY2xhc3Mp
IHsgLy8kTk9OLU5MUy0xJAorCQkJCQlwdWJsaWMgQVNUTm9kZSBzYW1wbGUoQVNUIHRhcmdldEFz
dCwgYm9vbGVhbiBwYXJlbnRlZCkgeworCQkJCQkJTWFya2VyQW5ub3RhdGlvbiByZXN1bHQgPSB0
YXJnZXRBc3QubmV3TWFya2VyQW5ub3RhdGlvbigpOworCQkJCQkJaWYgKHBhcmVudGVkKSB7CisJ
CQkJCQkJUGFja2FnZURlY2xhcmF0aW9uIHBkID0gdGFyZ2V0QXN0Lm5ld1BhY2thZ2VEZWNsYXJh
dGlvbigpOworCQkJCQkJCXBkLm1vZGlmaWVycygpLmFkZChyZXN1bHQpOworCQkJCQkJfQorCQkJ
CQkJcmV0dXJuIHJlc3VsdDsKKwkJCQkJfQorCQkJCX0pOworCQkJfQogCQl9CiAKIAkJZ2VuZXJp
Y1Byb3BlcnR5VGVzdCh4LCBuZXcgUHJvcGVydHkoIk5hbWUiLCB0cnVlLCBOYW1lLmNsYXNzKSB7
IC8vJE5PTi1OTFMtMSQKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1v
ZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUVmlzaXRvclRlc3QuamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9kb20vQVNUVmlzaXRvclRlc3QuamF2YQppbmRleCA4OTUwOTY4Li5lODhhYzgw
IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFZpc2l0b3JUZXN0LmphdmEKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L2RvbS9BU1RWaXNpdG9yVGVzdC5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFj
Y29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVy
bXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5p
ZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTE5NTcsMTAgKzE5
NTcsMTYgQEAKIAkvKiogQGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVjYXRlZCBjb2RlICovCiAJcHVi
bGljIHZvaWQgdGVzdFBhY2thZ2VEZWNsYXJhdGlvbigpIHsKIAkJUGFja2FnZURlY2xhcmF0aW9u
IHgxID0gdGhpcy5hc3QubmV3UGFja2FnZURlY2xhcmF0aW9uKCk7Ci0JCWlmICh0aGlzLmFzdC5h
cGlMZXZlbCgpID49IEFTVC5KTFMzKSB7CisJCWludCBhcGlMZXZlbCA9IHRoaXMuYXN0LmFwaUxl
dmVsKCk7CisJCWlmIChhcGlMZXZlbCA+PSBBU1QuSkxTMykgewogCQkJeDEuc2V0SmF2YWRvYyh0
aGlzLkpEMSk7Ci0JCQl4MS5hbm5vdGF0aW9ucygpLmFkZCh0aGlzLkFOTzEpOwotCQkJeDEuYW5u
b3RhdGlvbnMoKS5hZGQodGhpcy5BTk8yKTsKKwkJCWlmIChhcGlMZXZlbCA8IEFTVC5KTFM4KSB7
CisJCQkJeDEuYW5ub3RhdGlvbnMoKS5hZGQodGhpcy5BTk8xKTsKKwkJCQl4MS5hbm5vdGF0aW9u
cygpLmFkZCh0aGlzLkFOTzIpOworCQkJfSBlbHNlIHsKKwkJCQl4MS5tb2RpZmllcnMoKS5hZGQo
dGhpcy5BTk8xKTsKKwkJCQl4MS5tb2RpZmllcnMoKS5hZGQodGhpcy5BTk8yKTsKKwkJCX0KIAkJ
fQogCQl4MS5zZXROYW1lKHRoaXMuTjEpOwogCQlUZXN0VmlzaXRvciB2MSA9IG5ldyBUZXN0Vmlz
aXRvcigpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRp
bmdQYWNrYWdlRGVjbFRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVs
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3
cml0aW5nUGFja2FnZURlY2xUZXN0LmphdmEKaW5kZXggMWU4NDdlNS4uODFkYzc2MiAxMDA2NDQK
LS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pk
dC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdQYWNrYWdlRGVjbFRl
c3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ1BhY2th
Z2VEZWNsVGVzdC5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioK
LSAqIENvcHlyaWdodCAoYykgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENv
cHlyaWdodCAoYykgMjAxMywgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFs
bCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRl
cmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlw
c2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmli
dXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTM3LDYgKzM3LDcgQEAKIAogCS8qKgogCSAq
IGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMjg0MDAKKwkg
KiBAZGVwcmVjYXRlZAogCSAqLwogCXB1YmxpYyB2b2lkIHRlc3RBbm5vdGF0aW9uc19zaW5jZV8z
KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJCUlQYWNrYWdlRnJhZ21lbnQgcGFjazE9IHRoaXMuc291
cmNlRm9sZGVyLmNyZWF0ZVBhY2thZ2VGcmFnbWVudCgidGVzdDEiLCBmYWxzZSwgbnVsbCk7CkBA
IC00OSw3ICs1MCw4IEBACiAJCUFTVCBhc3Q9IGFzdFJvb3QuZ2V0QVNUKCk7CiAJCXsgLy8gaW5z
ZXJ0IGFubm90YXRpb24gZmlyc3QKIAkJCVBhY2thZ2VEZWNsYXJhdGlvbiBwYWNrYWdlRGVjbGFy
YXRpb24gPSBhc3RSb290LmdldFBhY2thZ2UoKTsKLQkJCUxpc3RSZXdyaXRlIGxpc3RSZXdyaXRl
PSByZXdyaXRlLmdldExpc3RSZXdyaXRlKHBhY2thZ2VEZWNsYXJhdGlvbiwgUGFja2FnZURlY2xh
cmF0aW9uLkFOTk9UQVRJT05TX1BST1BFUlRZKTsKKwkJCUNoaWxkTGlzdFByb3BlcnR5RGVzY3Jp
cHRvciBwcm9wZXJ0eSA9IGFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzggPyBQYWNrYWdlRGVjbGFy
YXRpb24uQU5OT1RBVElPTlNfUFJPUEVSVFkgOiBQYWNrYWdlRGVjbGFyYXRpb24uTU9ESUZJRVJT
X1BST1BFUlRZOworCQkJTGlzdFJld3JpdGUgbGlzdFJld3JpdGU9IHJld3JpdGUuZ2V0TGlzdFJl
d3JpdGUocGFja2FnZURlY2xhcmF0aW9uLCBwcm9wZXJ0eSk7CiAJCQlNYXJrZXJBbm5vdGF0aW9u
IGFubm90PSBhc3QubmV3TWFya2VyQW5ub3RhdGlvbigpOwogCQkJYW5ub3Quc2V0VHlwZU5hbWUo
YXN0Lm5ld1NpbXBsZU5hbWUoIkRlcHJlY2F0ZWQiKSk7CiAJCQlsaXN0UmV3cml0ZS5pbnNlcnRG
aXJzdChhbm5vdCwgbnVsbCk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0
cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9tb2RpZnlpbmcv
QVNUUmV3cml0aW5nTW9kaWZ5aW5nSW5zZXJ0VGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvbW9k
aWZ5aW5nL0FTVFJld3JpdGluZ01vZGlmeWluZ0luc2VydFRlc3QuamF2YQppbmRleCA2OWFmZGZm
Li5hY2M5M2VlIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9tb2RpZnlpbmcvQVNUUmV3cml0
aW5nTW9kaWZ5aW5nSW5zZXJ0VGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL21vZGlmeWlu
Zy9BU1RSZXdyaXRpbmdNb2RpZnlpbmdJbnNlcnRUZXN0LmphdmEKQEAgLTUsNiArNSw5IEBACiAg
KiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBh
dAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKICAqCisgKiBU
aGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24g
ZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQg
aXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAq
IG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24g
b2YgdGhlIEpDUC4KICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBp
bml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KICAqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwpA
QCAtMzIsNiArMzUsMTMgQEAKIAlwdWJsaWMgc3RhdGljIFRlc3Qgc3VpdGUoKSB7CiAJCXJldHVy
biBhbGxUZXN0cygpOwogCX0KKwkvKioKKwkgKiBAZGVwcmVjYXRlZAorCSAqLworCXByaXZhdGUg
TGlzdCBnZXRQYWNrYWdlRGVjbEFNTGlzdChQYWNrYWdlRGVjbGFyYXRpb24gcGFja2FnZURlY2xh
cmF0aW9uLCBpbnQgYXBpTGV2ZWwpIHsKKwkJcmV0dXJuIGFwaUxldmVsIDwgQVNULkpMUzggPyBw
YWNrYWdlRGVjbGFyYXRpb24uYW5ub3RhdGlvbnMoKSA6IHBhY2thZ2VEZWNsYXJhdGlvbi5tb2Rp
ZmllcnMoKTsKKwl9CisKIAkvKioKIAkgKiBpbnNlcnQgYSBuZXcgaW1wb3J0IGRlY2xhcmF0aW9u
CiAJICovCkBAIC02NDEsNyArNjUxLDggQEAKIAogCQlNYXJrZXJBbm5vdGF0aW9uIGFubm90YXRp
b24gPSBhc3QubmV3TWFya2VyQW5ub3RhdGlvbigpOwogCQlhbm5vdGF0aW9uLnNldFR5cGVOYW1l
KGFzdC5uZXdTaW1wbGVOYW1lKCJEZXByZWNhdGVkIikpOwotCQlhc3RSb290LmdldFBhY2thZ2Uo
KS5hbm5vdGF0aW9ucygpLmFkZChhbm5vdGF0aW9uKTsKKwkJTGlzdCBsaXN0ID0gZ2V0UGFja2Fn
ZURlY2xBTUxpc3QoYXN0Um9vdC5nZXRQYWNrYWdlKCksIGFzdC5hcGlMZXZlbCgpKTsKKwkJbGlz
dC5hZGQoYW5ub3RhdGlvbik7CiAKIAkJU3RyaW5nIHByZXZpZXcgPSBldmFsdWF0ZVJld3JpdGUo
Y3UsIGFzdFJvb3QpOwogCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3Jn
L2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVENvbnZlcnRlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIuamF2YQppbmRl
eCBmOTU4OGI5Li5mNjgxOGNiIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20v
b3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVENvbnZlcnRlci5qYXZhCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUQ29udmVydGVyLmph
dmEKQEAgLTM5Niw2ICszOTYsMTUgQEAKIAkJcmV0dXJuIG5vZGUudGhyb3duRXhjZXB0aW9ucygp
OwogCX0KIAorCS8qKiAKKwkgKiBJbnRlcm5hbCBhY2Nlc3MgbWV0aG9kIHRvIFBhY2thZ2VEZWNs
YXJhdGlvbi5hbm5vdGF0aW9ucyAoKSBmb3IgYXZvaWRpbmcgZGVwcmVjYXRlZCB3YXJuaW5ncwor
CSAqCisJICogQHBhcmFtIG5vZGUKKwkgKiBAZGVwcmVjYXRlZAorCSAqLworCXByaXZhdGUgc3Rh
dGljIExpc3QgaW50ZXJuYWxQYWNrYWdlRGVjbG5Bbm5vdGF0aW9ucyhQYWNrYWdlRGVjbGFyYXRp
b24gbm9kZSkgeworCQlyZXR1cm4gbm9kZS5hbm5vdGF0aW9ucygpOworCX0KIAkvKioKIAkgKiBA
cGFyYW0gY29tcGlsYXRpb25Vbml0CiAJICogQHBhcmFtIGNvbW1lbnRzCkBAIC0zMTIzLDEzICsz
MTMyLDE1IEBACiAJCXBhY2thZ2VEZWNsYXJhdGlvbi5zZXRTb3VyY2VSYW5nZShpbXBvcnRSZWZl
cmVuY2UuZGVjbGFyYXRpb25Tb3VyY2VTdGFydCwgaW1wb3J0UmVmZXJlbmNlLmRlY2xhcmF0aW9u
RW5kIC0gaW1wb3J0UmVmZXJlbmNlLmRlY2xhcmF0aW9uU291cmNlU3RhcnQgKyAxKTsKIAkJb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uW10gYW5ub3RhdGlv
bnMgPSBpbXBvcnRSZWZlcmVuY2UuYW5ub3RhdGlvbnM7CiAJCWlmIChhbm5vdGF0aW9ucyAhPSBu
dWxsKSB7Ci0JCQlzd2l0Y2godGhpcy5hc3QuYXBpTGV2ZWwpIHsKKwkJCWludCBhcGlMZXZlbCA9
IHRoaXMuYXN0LmFwaUxldmVsOworCQkJc3dpdGNoKGFwaUxldmVsKSB7CiAJCQkJY2FzZSBBU1Qu
SkxTMl9JTlRFUk5BTCA6CiAJCQkJCXBhY2thZ2VEZWNsYXJhdGlvbi5zZXRGbGFncyhwYWNrYWdl
RGVjbGFyYXRpb24uZ2V0RmxhZ3MoKSAmIEFTVE5vZGUuTUFMRk9STUVEKTsKIAkJCQkJYnJlYWs7
CiAJCQkJZGVmYXVsdCA6CisJCQkJCUxpc3QgbGlzdCA9IGFwaUxldmVsIDwgQVNULkpMUzggPyBp
bnRlcm5hbFBhY2thZ2VEZWNsbkFubm90YXRpb25zKHBhY2thZ2VEZWNsYXJhdGlvbikgOiBwYWNr
YWdlRGVjbGFyYXRpb24ubW9kaWZpZXJzKCk7CiAJCQkJCWZvciAoaW50IGkgPSAwLCBtYXggPSBh
bm5vdGF0aW9ucy5sZW5ndGg7IGkgPCBtYXg7IGkrKykgewotCQkJCQkJcGFja2FnZURlY2xhcmF0
aW9uLmFubm90YXRpb25zKCkuYWRkKGNvbnZlcnQoYW5ub3RhdGlvbnNbaV0pKTsKKwkJCQkJCWxp
c3QuYWRkKGNvbnZlcnQoYW5ub3RhdGlvbnNbaV0pKTsKIAkJCQkJfQogCQkJfQogCQl9CkBAIC0z
NDg1LDcgKzM0OTYsNyBAQAogCQkJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
YXN0LkFubm90YXRpb24gdHlwZUFubm90YXRpb24gPSBhbm5vdGF0aW9uc1tpXTsKIAkJCQkJaWYg
KHR5cGVBbm5vdGF0aW9uICE9IG51bGwpIHsKIAkJCQkJCUFubm90YXRpb24gYW5ub3RhdGlvbiA9
IGNvbnZlcnQodHlwZUFubm90YXRpb24pOwotCQkJCQkJdHlwZVBhcmFtZXRlci5hbm5vdGF0aW9u
cygpLmFkZChhbm5vdGF0aW9uKTsKKwkJCQkJCXR5cGVQYXJhbWV0ZXIubW9kaWZpZXJzKCkuYWRk
KGFubm90YXRpb24pOwogCQkJCQl9CiAJCQkJfQogCQl9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVE1hdGNoZXIuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUTWF0
Y2hlci5qYXZhCmluZGV4IGM1ZDRlMjMuLjA3YTRiNTQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUTWF0Y2hlci5qYXZhCisr
KyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNU
TWF0Y2hlci5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAq
IENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAq
IENvcHlyaWdodCAoYykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAq
IEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBt
YXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVj
bGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0
cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTE2OSw2ICsxNjksMTQgQEAKIAkgKi8K
IAlwcml2YXRlIFR5cGUgY29tcG9uZW50VHlwZShBcnJheVR5cGUgYXJyYXkpIHsKIAkJcmV0dXJu
IGFycmF5LmdldENvbXBvbmVudFR5cGUoKTsKKwl9CisJCisJLyoqCisJICogQWRkZWQgdG8gYXZv
aWQgdGhlIGRlcHJlY2F0ZWQgd2FybmluZworCSAqIEBkZXByZWNhdGVkCisJICovCisJcHJpdmF0
ZSBMaXN0IGdldFBhY2thZ2VEZWNsbkFubm90YXRpb25zKFBhY2thZ2VEZWNsYXJhdGlvbiBwYWNr
YWdlRGVjbGFyYXRpb24pIHsKKwkJcmV0dXJuIHBhY2thZ2VEZWNsYXJhdGlvbi5hbm5vdGF0aW9u
cygpOwogCX0KIAogCS8qKgpAQCAtMTY1NSwxMSArMTY2MywyMCBAQAogCQkJcmV0dXJuIGZhbHNl
OwogCQl9CiAJCVBhY2thZ2VEZWNsYXJhdGlvbiBvID0gKFBhY2thZ2VEZWNsYXJhdGlvbikgb3Ro
ZXI7Ci0JCWlmIChub2RlLmdldEFTVCgpLmFwaUxldmVsID49IEFTVC5KTFMzX0lOVEVSTkFMKSB7
CisJCWludCBhcGlMZXZlbCA9IG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKTsKKwkJaWYgKGFwaUxl
dmVsID49IEFTVC5KTFMzX0lOVEVSTkFMKSB7CiAJCQlpZiAoIXNhZmVTdWJ0cmVlTWF0Y2gobm9k
ZS5nZXRKYXZhZG9jKCksIG8uZ2V0SmF2YWRvYygpKSkgewogCQkJCXJldHVybiBmYWxzZTsKIAkJ
CX0KLQkJCWlmICghc2FmZVN1YnRyZWVMaXN0TWF0Y2gobm9kZS5hbm5vdGF0aW9ucygpLCBvLmFu
bm90YXRpb25zKCkpKSB7CisJCQlMaXN0IG5MaXN0LCBvTGlzdDsKKwkJCWlmIChhcGlMZXZlbCA8
IEFTVC5KTFM4KSB7CisJCQkJbkxpc3QgPSBnZXRQYWNrYWdlRGVjbG5Bbm5vdGF0aW9ucyhub2Rl
KTsKKwkJCQlvTGlzdCA9IGdldFBhY2thZ2VEZWNsbkFubm90YXRpb25zKG8pOworCQkJfSBlbHNl
IHsKKwkJCQluTGlzdCA9IG5vZGUubW9kaWZpZXJzKCk7CisJCQkJb0xpc3QgPSBvLm1vZGlmaWVy
cygpOworCQkJfQorCQkJaWYgKCFzYWZlU3VidHJlZUxpc3RNYXRjaChuTGlzdCwgb0xpc3QpKSB7
CiAJCQkJcmV0dXJuIGZhbHNlOwogCQkJfQogCQl9CkBAIC0yNDI4LDcgKzI0NDUsNyBAQAogCQl9
CiAJCVR5cGVQYXJhbWV0ZXIgbyA9IChUeXBlUGFyYW1ldGVyKSBvdGhlcjsKIAkJaW50IGxldmVs
ID0gbm9kZS5nZXRBU1QoKS5hcGlMZXZlbDsKLQkJcmV0dXJuIChsZXZlbCA+PSBBU1QuSkxTOCA/
IHNhZmVTdWJ0cmVlTGlzdE1hdGNoKG5vZGUuYW5ub3RhdGlvbnMoKSwgby5hbm5vdGF0aW9ucygp
KSA6IHRydWUpCisJCXJldHVybiAobGV2ZWwgPj0gQVNULkpMUzggPyBzYWZlU3VidHJlZUxpc3RN
YXRjaChub2RlLm1vZGlmaWVycygpLCBvLm1vZGlmaWVycygpKSA6IHRydWUpCiAJCQkJJiYgc2Fm
ZVN1YnRyZWVNYXRjaChub2RlLmdldE5hbWUoKSwgby5nZXROYW1lKCkpCiAJCQkJJiYgc2FmZVN1
YnRyZWVMaXN0TWF0Y2gobm9kZS50eXBlQm91bmRzKCksIG8udHlwZUJvdW5kcygpKTsKIAl9CmRp
ZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUv
ZG9tL1BhY2thZ2VCaW5kaW5nLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2NvcmUvZG9tL1BhY2thZ2VCaW5kaW5nLmphdmEKaW5kZXggY2Y1YTRhZi4uMzk2
M2FiOCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pk
dC9jb3JlL2RvbS9QYWNrYWdlQmluZGluZy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vUGFja2FnZUJpbmRpbmcuamF2YQpAQCAtMSwx
MCArMSwxMyBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAw
MCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAw
MCwgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2
ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBt
YWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vu
c2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBh
dmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1s
CiAgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVj
aWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3Mg
KEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1
cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVj
aWZpY2F0aW9uIG9mIHRoZSBKQ1AuCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBv
cmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCiAgKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKi8KQEAgLTc0LDcgKzc3LDcgQEAKIAkJCQkJCVN0cmluZyB1bml0TmFtZSA9ICJwYWNr
YWdlLWluZm8uamF2YSI7IC8vJE5PTi1OTFMtMSQKIAkJCQkJCUlDb21waWxhdGlvblVuaXQgdW5p
dCA9IHBrZ3NbaV0uZ2V0Q29tcGlsYXRpb25Vbml0KHVuaXROYW1lKTsKIAkJCQkJCWlmICh1bml0
ICE9IG51bGwgJiYgdW5pdC5leGlzdHMoKSkgewotCQkJCQkJCUFTVFBhcnNlciBwID0gQVNUUGFy
c2VyLm5ld1BhcnNlcihBU1QuSkxTM19JTlRFUk5BTCk7CisJCQkJCQkJQVNUUGFyc2VyIHAgPSBB
U1RQYXJzZXIubmV3UGFyc2VyKEFTVC5KTFM4KTsKIAkJCQkJCQlwLnNldFNvdXJjZSh1bml0KTsK
IAkJCQkJCQlwLnNldFJlc29sdmVCaW5kaW5ncyh0cnVlKTsKIAkJCQkJCQlwLnNldFVuaXROYW1l
KHVuaXROYW1lKTsKQEAgLTgzLDEzICs4NiwxNSBAQAogCQkJCQkJCUNvbXBpbGF0aW9uVW5pdCBk
b21Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgcC5jcmVhdGVBU1QobnVsbCk7CiAJCQkJCQkJUGFj
a2FnZURlY2xhcmF0aW9uIHBrZ0RlY2wgPSBkb21Vbml0LmdldFBhY2thZ2UoKTsKIAkJCQkJCQlp
ZiAocGtnRGVjbCAhPSBudWxsKSB7Ci0JCQkJCQkJCUxpc3QgYW5ub3MgPSBwa2dEZWNsLmFubm90
YXRpb25zKCk7CisJCQkJCQkJCUxpc3QgYW5ub3MgPSBwa2dEZWNsLm1vZGlmaWVycygpOwogCQkJ
CQkJCQlpZiAoYW5ub3MgPT0gbnVsbCB8fCBhbm5vcy5pc0VtcHR5KCkpCiAJCQkJCQkJCQlyZXR1
cm4gQW5ub3RhdGlvbkJpbmRpbmcuTm9Bbm5vdGF0aW9uczsKIAkJCQkJCQkJSUFubm90YXRpb25C
aW5kaW5nW10gcmVzdWx0ID0gbmV3IElBbm5vdGF0aW9uQmluZGluZ1thbm5vcy5zaXplKCldOwog
CQkJCQkJCQlpbnQgaW5kZXg9MDsKIAkJIAkJCQkJCWZvciAoSXRlcmF0b3IgaXQgPSBhbm5vcy5p
dGVyYXRvcigpOyBpdC5oYXNOZXh0KCk7IGluZGV4KyspIHsKLQkJCQkJCQkJCXJlc3VsdFtpbmRl
eF0gPSAoKEFubm90YXRpb24pIGl0Lm5leHQoKSkucmVzb2x2ZUFubm90YXRpb25CaW5kaW5nKCk7
CisJCSAJCQkJCQkJSUV4dGVuZGVkTW9kaWZpZXIgbm9kZSA9IChJRXh0ZW5kZWRNb2RpZmllcikg
aXQubmV4dCgpOworCQkgCQkJCQkJCWlmICghbm9kZS5pc0Fubm90YXRpb24oKSkgY29udGludWU7
CisJCQkJCQkJCQlyZXN1bHRbaW5kZXhdID0gKChBbm5vdGF0aW9uKSBub2RlKS5yZXNvbHZlQW5u
b3RhdGlvbkJpbmRpbmcoKTsKIAkJCQkJCQkJCS8vIG5vdCByZXNvbHZpbmcgYmluZGluZ3MKIAkJ
CQkJCQkJCWlmIChyZXN1bHRbaW5kZXhdID09IG51bGwpCiAJCQkJCQkJCQkJcmV0dXJuIEFubm90
YXRpb25CaW5kaW5nLk5vQW5ub3RhdGlvbnM7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1BhY2thZ2VEZWNsYXJhdGlvbi5qYXZh
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9QYWNr
YWdlRGVjbGFyYXRpb24uamF2YQppbmRleCAyY2Y3N2U1Li41YTMzNjc5IDEwMDY0NAotLS0gYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1BhY2thZ2VE
ZWNsYXJhdGlvbi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBz
ZS9qZHQvY29yZS9kb20vUGFja2FnZURlY2xhcmF0aW9uLmphdmEKQEAgLTEsMTAgKzEsMTMgQEAK
IC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJN
IENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTQgSUJN
IENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHBy
b2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFi
bGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAq
IHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0
CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAogICoKKyAqIFRo
aXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBk
ZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBp
cyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICog
b25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBv
ZiB0aGUgSkNQLgogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGlu
aXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgogICoqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCkBA
IC00MSw5ICs0NCwxNyBAQAogCS8qKgogCSAqIFRoZSAiYW5ub3RhdGlvbnMiIHN0cnVjdHVyYWwg
cHJvcGVydHkgb2YgdGhpcyBub2RlIHR5cGUgKGVsZW1lbnQgdHlwZToge0BsaW5rIEFubm90YXRp
b259KSAoYWRkZWQgaW4gSkxTMyBBUEkpLgogCSAqIEBzaW5jZSAzLjEKKwkgKiBAZGVwcmVjYXRl
ZCBJbiB0aGUgSkxTOCBBUEksIHRoaXMgcHJvcGVydHkgaXMgcmVwbGFjZWQgYnkge0BsaW5rICNN
T0RJRklFUlNfUFJPUEVSVFl9LgogCSAqLwogCXB1YmxpYyBzdGF0aWMgZmluYWwgQ2hpbGRMaXN0
UHJvcGVydHlEZXNjcmlwdG9yIEFOTk9UQVRJT05TX1BST1BFUlRZID0KIAkJbmV3IENoaWxkTGlz
dFByb3BlcnR5RGVzY3JpcHRvcihQYWNrYWdlRGVjbGFyYXRpb24uY2xhc3MsICJhbm5vdGF0aW9u
cyIsIEFubm90YXRpb24uY2xhc3MsIENZQ0xFX1JJU0spOyAvLyROT04tTkxTLTEkCisKKwkvKioK
KwkgKiBUaGUgIm1vZGlmaWVycyIgc3RydWN0dXJhbCBwcm9wZXJ0eSBvZiB0aGlzIG5vZGUgdHlw
ZSAoZWxlbWVudCB0eXBlOiB7QGxpbmsgSUV4dGVuZGVkTW9kaWZpZXJ9KSAoYWRkZWQgaW4gSkxT
OCBBUEkpLgorCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAorCSAqLworCXB1YmxpYyBzdGF0aWMg
ZmluYWwgQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yIE1PRElGSUVSU19QUk9QRVJUWSA9CisJ
CW5ldyBDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IoUGFja2FnZURlY2xhcmF0aW9uLmNsYXNz
LCAibW9kaWZpZXJzIiwgSUV4dGVuZGVkTW9kaWZpZXIuY2xhc3MsIENZQ0xFX1JJU0spOyAvLyRO
T04tTkxTLTEkCiAKIAkvKioKIAkgKiBUaGUgIm5hbWUiIHN0cnVjdHVyYWwgcHJvcGVydHkgb2Yg
dGhpcyBub2RlIHR5cGUgKGNoaWxkIHR5cGU6IHtAbGluayBOYW1lfSkuCkBAIC02OCw2ICs3OSwx
NCBAQAogCSAqLwogCXByaXZhdGUgc3RhdGljIGZpbmFsIExpc3QgUFJPUEVSVFlfREVTQ1JJUFRP
UlNfM18wOwogCisJLyoqCisJICogQSBsaXN0IG9mIHByb3BlcnR5IGRlc2NyaXB0b3JzIChlbGVt
ZW50IHR5cGU6CisJICoge0BsaW5rIFN0cnVjdHVyYWxQcm9wZXJ0eURlc2NyaXB0b3J9KSwKKwkg
KiBvciBudWxsIGlmIHVuaW5pdGlhbGl6ZWQuCisJICogQHNpbmNlIDMuOSBCRVRBX0pBVkE4CisJ
ICovCisJcHJpdmF0ZSBzdGF0aWMgZmluYWwgTGlzdCBQUk9QRVJUWV9ERVNDUklQVE9SU184XzA7
CisKIAlzdGF0aWMgewogCQlMaXN0IHByb3BlcnR5TGlzdCA9IG5ldyBBcnJheUxpc3QoMik7CiAJ
CWNyZWF0ZVByb3BlcnR5TGlzdChQYWNrYWdlRGVjbGFyYXRpb24uY2xhc3MsIHByb3BlcnR5TGlz
dCk7CkBAIC04MCw4ICs5OSwxNCBAQAogCQlhZGRQcm9wZXJ0eShBTk5PVEFUSU9OU19QUk9QRVJU
WSwgcHJvcGVydHlMaXN0KTsKIAkJYWRkUHJvcGVydHkoTkFNRV9QUk9QRVJUWSwgcHJvcGVydHlM
aXN0KTsKIAkJUFJPUEVSVFlfREVTQ1JJUFRPUlNfM18wID0gcmVhcFByb3BlcnR5TGlzdChwcm9w
ZXJ0eUxpc3QpOwotCX0KIAorCQlwcm9wZXJ0eUxpc3QgPSBuZXcgQXJyYXlMaXN0KDQpOworCQlj
cmVhdGVQcm9wZXJ0eUxpc3QoUGFja2FnZURlY2xhcmF0aW9uLmNsYXNzLCBwcm9wZXJ0eUxpc3Qp
OworCQlhZGRQcm9wZXJ0eShKQVZBRE9DX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOworCQlhZGRQ
cm9wZXJ0eShNT0RJRklFUlNfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CisJCWFkZFByb3BlcnR5
KE5BTUVfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CisJCVBST1BFUlRZX0RFU0NSSVBUT1JTXzhf
MCA9IHJlYXBQcm9wZXJ0eUxpc3QocHJvcGVydHlMaXN0KTsKK30KIAkvKioKIAkgKiBSZXR1cm5z
IGEgbGlzdCBvZiBzdHJ1Y3R1cmFsIHByb3BlcnR5IGRlc2NyaXB0b3JzIGZvciB0aGlzIG5vZGUg
dHlwZS4KIAkgKiBDbGllbnRzIG11c3Qgbm90IG1vZGlmeSB0aGUgcmVzdWx0LgpAQCAtOTYsOSAr
MTIxLDEwIEBACiAJcHVibGljIHN0YXRpYyBMaXN0IHByb3BlcnR5RGVzY3JpcHRvcnMoaW50IGFw
aUxldmVsKSB7CiAJCWlmIChhcGlMZXZlbCA9PSBBU1QuSkxTMl9JTlRFUk5BTCkgewogCQkJcmV0
dXJuIFBST1BFUlRZX0RFU0NSSVBUT1JTXzJfMDsKLQkJfSBlbHNlIHsKKwkJfSBlbHNlIGlmIChh
cGlMZXZlbCA8IEFTVC5KTFM4KXsKIAkJCXJldHVybiBQUk9QRVJUWV9ERVNDUklQVE9SU18zXzA7
CiAJCX0KKwkJcmV0dXJuIFBST1BFUlRZX0RFU0NSSVBUT1JTXzhfMDsKIAl9CiAKIAkvKioKQEAg
LTExMCwxMSArMTM2LDIwIEBACiAKIAkvKioKIAkgKiBUaGUgYW5ub3RhdGlvbnMgKGVsZW1lbnQg
dHlwZToge0BsaW5rIEFubm90YXRpb259KS4KLQkgKiBOdWxsIGluIEpMUzIuIEFkZGVkIGluIEpM
UzM7IGRlZmF1bHRzIHRvIGFuIGVtcHR5IGxpc3QKKwkgKiBOdWxsIGluIEpMUzIgYW5kIGluIEpM
UzggYW5kIGFib3ZlLiBBZGRlZCBpbiBKTFMzOyBkZWZhdWx0cyB0byBhbiBlbXB0eSBsaXN0IAog
CSAqIChzZWUgY29uc3RydWN0b3IpLgogCSAqIEBzaW5jZSAzLjEKKwkgKiBAZGVwcmVjYXRlZCBJ
biBKTFM4IGFuZCBsYXRlciwgdXNlIHtAbGluayAjbW9kaWZpZXJzfSBpbnN0ZWFkLgogCSAqLwog
CXByaXZhdGUgQVNUTm9kZS5Ob2RlTGlzdCBhbm5vdGF0aW9ucyA9IG51bGw7CisKKwkvKioKKwkg
KiBUaGUgbW9kaWZpZXJzIChlbGVtZW50IHR5cGU6IHtAbGluayBJRXh0ZW5kZWRNb2RpZmllcn0p
LgorCSAqIEFkZGVkIGluIEpMUzg7IGRlZmF1bHRzIHRvIGFuIGVtcHR5IGxpc3QgZm9yIEpMUzgg
YW5kIGFib3ZlIChzZWUgY29uc3RydWN0b3IpLAorCSAqIG51bGwgb3RoZXJ3aXNlLgorCSAqIEBz
aW5jZSAzLjkgQkVUQV9KQVZBOAorCSAqLworCXByaXZhdGUgQVNUTm9kZS5Ob2RlTGlzdCBtb2Rp
ZmllcnMgPSBudWxsOwogCiAJLyoqCiAJICogVGhlIHBhY2thZ2UgbmFtZTsgbGF6aWx5IGluaXRp
YWxpemVkOyBkZWZhdWx0cyB0byBhIHVuc3BlY2lmaWVkLApAQCAtMTM2LDcgKzE3MSwxMCBAQAog
CSAqLwogCVBhY2thZ2VEZWNsYXJhdGlvbihBU1QgYXN0KSB7CiAJCXN1cGVyKGFzdCk7Ci0JCWlm
IChhc3QuYXBpTGV2ZWwgPj0gQVNULkpMUzNfSU5URVJOQUwpIHsKKwkJaW50IGFwaUxldmVsID0g
YXN0LmFwaUxldmVsKCk7CisJCWlmIChhcGlMZXZlbCA+PSBBU1QuSkxTOCkgeworCQkJdGhpcy5t
b2RpZmllcnMgPSBuZXcgQVNUTm9kZS5Ob2RlTGlzdChNT0RJRklFUlNfUFJPUEVSVFkpOworCQl9
IGVsc2UgaWYgKGFwaUxldmVsID49IEFTVC5KTFMzX0lOVEVSTkFMKSB7CiAJCQl0aGlzLmFubm90
YXRpb25zID0gbmV3IEFTVE5vZGUuTm9kZUxpc3QoQU5OT1RBVElPTlNfUFJPUEVSVFkpOwogCQl9
CiAJfQpAQCAtMTc2LDYgKzIxNCw5IEBACiAJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUu
CiAJICovCiAJZmluYWwgTGlzdCBpbnRlcm5hbEdldENoaWxkTGlzdFByb3BlcnR5KENoaWxkTGlz
dFByb3BlcnR5RGVzY3JpcHRvciBwcm9wZXJ0eSkgeworCQlpZiAocHJvcGVydHkgPT0gTU9ESUZJ
RVJTX1BST1BFUlRZKSB7CisJCQlyZXR1cm4gbW9kaWZpZXJzKCk7CisJCX0KIAkJaWYgKHByb3Bl
cnR5ID09IEFOTk9UQVRJT05TX1BST1BFUlRZKSB7CiAJCQlyZXR1cm4gYW5ub3RhdGlvbnMoKTsK
IAkJfQpAQCAtMTk2LDkgKzIzNywxNCBAQAogCUFTVE5vZGUgY2xvbmUwKEFTVCB0YXJnZXQpIHsK
IAkJUGFja2FnZURlY2xhcmF0aW9uIHJlc3VsdCA9IG5ldyBQYWNrYWdlRGVjbGFyYXRpb24odGFy
Z2V0KTsKIAkJcmVzdWx0LnNldFNvdXJjZVJhbmdlKGdldFN0YXJ0UG9zaXRpb24oKSwgZ2V0TGVu
Z3RoKCkpOwotCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwgPj0gQVNULkpMUzNfSU5URVJOQUwpIHsK
KwkJaW50IGFwaUxldmVsID0gdGhpcy5hc3QuYXBpTGV2ZWwoKTsKKwkJaWYgKGFwaUxldmVsID49
IEFTVC5KTFMzX0lOVEVSTkFMKSB7CiAJCQlyZXN1bHQuc2V0SmF2YWRvYygoSmF2YWRvYykgQVNU
Tm9kZS5jb3B5U3VidHJlZSh0YXJnZXQsIGdldEphdmFkb2MoKSkpOwotCQkJcmVzdWx0LmFubm90
YXRpb25zKCkuYWRkQWxsKEFTVE5vZGUuY29weVN1YnRyZWVzKHRhcmdldCwgYW5ub3RhdGlvbnMo
KSkpOworCQkJaWYgKGFwaUxldmVsIDwgQVNULkpMUzgpIHsKKwkJCQlyZXN1bHQuYW5ub3RhdGlv
bnMoKS5hZGRBbGwoQVNUTm9kZS5jb3B5U3VidHJlZXModGFyZ2V0LCBhbm5vdGF0aW9ucygpKSk7
CisJCQl9IGVsc2UgeworCQkJCXJlc3VsdC5tb2RpZmllcnMoKS5hZGRBbGwoQVNUTm9kZS5jb3B5
U3VidHJlZXModGFyZ2V0LCBtb2RpZmllcnMoKSkpOworCQkJfQogCQl9CiAJCXJlc3VsdC5zZXRO
YW1lKChOYW1lKSBnZXROYW1lKCkuY2xvbmUodGFyZ2V0KSk7CiAJCXJldHVybiByZXN1bHQ7CkBA
IC0yMTgsOSArMjY0LDEwIEBACiAJdm9pZCBhY2NlcHQwKEFTVFZpc2l0b3IgdmlzaXRvcikgewog
CQlib29sZWFuIHZpc2l0Q2hpbGRyZW4gPSB2aXNpdG9yLnZpc2l0KHRoaXMpOwogCQlpZiAodmlz
aXRDaGlsZHJlbikgewotCQkJaWYgKHRoaXMuYXN0LmFwaUxldmVsID49IEFTVC5KTFMzX0lOVEVS
TkFMKSB7CisJCQlpbnQgYXBpTGV2ZWwgPSB0aGlzLmFzdC5hcGlMZXZlbCgpOworCQkJaWYgKGFw
aUxldmVsID49IEFTVC5KTFMzX0lOVEVSTkFMKSB7CiAJCQkJYWNjZXB0Q2hpbGQodmlzaXRvciwg
Z2V0SmF2YWRvYygpKTsKLQkJCQlhY2NlcHRDaGlsZHJlbih2aXNpdG9yLCB0aGlzLmFubm90YXRp
b25zKTsKKwkJCQlhY2NlcHRDaGlsZHJlbih2aXNpdG9yLCBhcGlMZXZlbCA8IEFTVC5KTFM4ID8g
dGhpcy5hbm5vdGF0aW9ucyA6IHRoaXMubW9kaWZpZXJzKTsKIAkJCX0KIAkJCWFjY2VwdENoaWxk
KHZpc2l0b3IsIGdldE5hbWUoKSk7CiAJCX0KQEAgLTIzNiwxMyArMjgzLDI2IEBACiAJICogQGV4
Y2VwdGlvbiBVbnN1cHBvcnRlZE9wZXJhdGlvbkV4Y2VwdGlvbiBpZiB0aGlzIG9wZXJhdGlvbiBp
cyB1c2VkIGluCiAJICogYSBKTFMyIEFTVAogCSAqIEBzaW5jZSAzLjEKKwkgKiBAZGVwcmVjYXRl
ZCBGcm9tIEpMUzggb253YXJkcywgdXNlIHtAbGluayAjbW9kaWZpZXJzKCl9CiAJICovCiAJcHVi
bGljIExpc3QgYW5ub3RhdGlvbnMoKSB7Ci0JCS8vIG1vcmUgZWZmaWNpZW50IHRoYW4ganVzdCBj
YWxsaW5nIHVuc3VwcG9ydGVkSW4yKCkgdG8gY2hlY2sKLQkJaWYgKHRoaXMuYW5ub3RhdGlvbnMg
PT0gbnVsbCkgewotCQkJdW5zdXBwb3J0ZWRJbjIoKTsKLQkJfQorCQl1bnN1cHBvcnRlZEluMigp
OwogCQlyZXR1cm4gdGhpcy5hbm5vdGF0aW9uczsKKwl9CisKKwkvKioKKwkgKiBSZXR1cm5zIHRo
ZSBsaXZlIG9yZGVyZWQgbGlzdCBvZiBtb2RpZmllcnMgb2YgdGhpcworCSAqIHBhY2thZ2UgZGVj
bGFyYXRpb24gKGFkZGVkIGluIEpMUzggQVBJKS4KKwkgKgorCSAqIEByZXR1cm4gdGhlIGxpdmUg
bGlzdCBvZiBtb2RpZmllcnMKKwkgKiAgICAoZWxlbWVudCB0eXBlOiB7QGxpbmsgSUV4dGVuZGVk
TW9kaWZpZXJ9KQorCSAqIEBleGNlcHRpb24gVW5zdXBwb3J0ZWRPcGVyYXRpb25FeGNlcHRpb24g
aWYgdGhpcyBvcGVyYXRpb24gaXMgdXNlZCBpbgorCSAqIGFuIGFzdCB3aXRoIGxldmVsIGxlc3Mg
dGhhbiBKTFM4CisJICogQHNpbmNlIDMuOSBCRVRBX0pBVkE4CisJICovCisJcHVibGljIExpc3Qg
bW9kaWZpZXJzKCkgeworCQl1bnN1cHBvcnRlZEluMl8zXzQoKTsKKwkJcmV0dXJuIHRoaXMubW9k
aWZpZXJzOwogCX0KIAogCS8qKgpAQCAtMjU0LDEwICszMTQsNyBAQAogCSAqIEBzaW5jZSAzLjAK
IAkgKi8KIAlwdWJsaWMgSmF2YWRvYyBnZXRKYXZhZG9jKCkgewotCQkvLyBtb3JlIGVmZmljaWVu
dCB0aGFuIGp1c3QgY2FsbGluZyB1bnN1cHBvcnRlZEluMigpIHRvIGNoZWNrCi0JCWlmICh0aGlz
LmFubm90YXRpb25zID09IG51bGwpIHsKLQkJCXVuc3VwcG9ydGVkSW4yKCk7Ci0JCX0KKwkJdW5z
dXBwb3J0ZWRJbjIoKTsKIAkJcmV0dXJuIHRoaXMub3B0aW9uYWxEb2NDb21tZW50OwogCX0KIApA
QCAtMjcxLDEwICszMjgsNyBAQAogCSAqIEBzaW5jZSAzLjAKIAkgKi8KIAlwdWJsaWMgdm9pZCBz
ZXRKYXZhZG9jKEphdmFkb2MgZG9jQ29tbWVudCkgewotCQkvLyBtb3JlIGVmZmljaWVudCB0aGFu
IGp1c3QgY2FsbGluZyB1bnN1cHBvcnRlZEluMigpIHRvIGNoZWNrCi0JCWlmICh0aGlzLmFubm90
YXRpb25zID09IG51bGwpIHsKLQkJCXVuc3VwcG9ydGVkSW4yKCk7Ci0JCX0KKwkJdW5zdXBwb3J0
ZWRJbjIoKTsKIAkJQVNUTm9kZSBvbGRDaGlsZCA9IHRoaXMub3B0aW9uYWxEb2NDb21tZW50Owog
CQlwcmVSZXBsYWNlQ2hpbGQob2xkQ2hpbGQsIGRvY0NvbW1lbnQsIEpBVkFET0NfUFJPUEVSVFkp
OwogCQl0aGlzLm9wdGlvbmFsRG9jQ29tbWVudCA9IGRvY0NvbW1lbnQ7CkBAIC0zMzksMTcgKzM5
MywxOCBAQAogCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgogCSAqLwogCWludCBtZW1T
aXplKCkgewotCQlyZXR1cm4gQkFTRV9OT0RFX1NJWkUgKyAzICogNDsKKwkJcmV0dXJuIEJBU0Vf
Tk9ERV9TSVpFICsgNCAqIDQ7CiAJfQogCiAJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRo
b2QpCiAJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCiAJICovCiAJaW50IHRyZWVTaXpl
KCkgeworCQlOb2RlTGlzdCBub2RlTGlzdCA9IHRoaXMuYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxT
OCA/IHRoaXMuYW5ub3RhdGlvbnMgOiB0aGlzLm1vZGlmaWVyczsKIAkJcmV0dXJuCiAJCQltZW1T
aXplKCkKIAkJCSsgKHRoaXMub3B0aW9uYWxEb2NDb21tZW50ID09IG51bGwgPyAwIDogZ2V0SmF2
YWRvYygpLnRyZWVTaXplKCkpCi0JCQkrICh0aGlzLmFubm90YXRpb25zID09IG51bGwgPyAwIDog
dGhpcy5hbm5vdGF0aW9ucy5saXN0U2l6ZSgpKQorCQkJKyAobm9kZUxpc3QgPT0gbnVsbCA/IDAg
OiBub2RlTGlzdC5saXN0U2l6ZSgpKQogCQkJKyAodGhpcy5wYWNrYWdlTmFtZSA9PSBudWxsID8g
MCA6IGdldE5hbWUoKS50cmVlU2l6ZSgpKTsKIAl9CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1R5cGVQYXJhbWV0ZXIuamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vVHlw
ZVBhcmFtZXRlci5qYXZhCmluZGV4IDc5MzhjNzkuLmFlYjM5NTAgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vVHlwZVBhcmFtZXRl
ci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29y
ZS9kb20vVHlwZVBhcmFtZXRlci5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMywgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMywgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFj
Y29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVy
bXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5p
ZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTMzLDExICszMywx
MSBAQAogcHVibGljIGNsYXNzIFR5cGVQYXJhbWV0ZXIgZXh0ZW5kcyBBU1ROb2RlIHsKIAogCS8q
KgotCSAqIFRoZSAiYW5ub3RhdGlvbnMiIHN0cnVjdHVyYWwgcHJvcGVydHkgb2YgdGhpcyBub2Rl
IHR5cGUgKGVsZW1lbnQgdHlwZToge0BsaW5rIEFubm90YXRpb259KSAoYWRkZWQgaW4gSkxTOCBB
UEkpLgorCSAqIFRoZSAibW9kaWZpZXJzIiBzdHJ1Y3R1cmFsIHByb3BlcnR5IG9mIHRoaXMgbm9k
ZSB0eXBlIChlbGVtZW50IHR5cGU6IHtAbGluayBJRXh0ZW5kZWRNb2RpZmllcn0pIChhZGRlZCBp
biBKTFM4IEFQSSkuCiAJICogQHNpbmNlIDMuOSBCRVRBX0pBVkE4CiAJICovCi0JcHVibGljIHN0
YXRpYyBmaW5hbCBDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IgQU5OT1RBVElPTlNfUFJPUEVS
VFkgPQotCQkJbmV3IENoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvcihUeXBlUGFyYW1ldGVyLmNs
YXNzLCAiYW5ub3RhdGlvbnMiLCBBbm5vdGF0aW9uLmNsYXNzLCBDWUNMRV9SSVNLKTsgLy8kTk9O
LU5MUy0xJAorCXB1YmxpYyBzdGF0aWMgZmluYWwgQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9y
IE1PRElGSUVSU19QUk9QRVJUWSA9CisJCQluZXcgQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9y
KFR5cGVQYXJhbWV0ZXIuY2xhc3MsICJtb2RpZmllcnMiLCBJRXh0ZW5kZWRNb2RpZmllci5jbGFz
cywgQ1lDTEVfUklTSyk7IC8vJE5PTi1OTFMtMSQKIAkKIAkvKioKIAkgKiBUaGUgIm5hbWUiIHN0
cnVjdHVyYWwgcHJvcGVydHkgb2YgdGhpcyBub2RlIHR5cGUgKGNoaWxkIHR5cGU6IHtAbGluayBT
aW1wbGVOYW1lfSkuCkBAIC03NCw3ICs3NCw3IEBACiAJCQogCQlwcm9wZXJ0eUxpc3QgPSBuZXcg
QXJyYXlMaXN0KDQpOwogCQljcmVhdGVQcm9wZXJ0eUxpc3QoVHlwZVBhcmFtZXRlci5jbGFzcywg
cHJvcGVydHlMaXN0KTsKLQkJYWRkUHJvcGVydHkoQU5OT1RBVElPTlNfUFJPUEVSVFksIHByb3Bl
cnR5TGlzdCk7CisJCWFkZFByb3BlcnR5KE1PRElGSUVSU19QUk9QRVJUWSwgcHJvcGVydHlMaXN0
KTsKIAkJYWRkUHJvcGVydHkoTkFNRV9QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKIAkJYWRkUHJv
cGVydHkoVFlQRV9CT1VORFNfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CiAJCVBST1BFUlRZX0RF
U0NSSVBUT1JTXzhfMCA9IHJlYXBQcm9wZXJ0eUxpc3QocHJvcGVydHlMaXN0KTsKQEAgLTExNSwx
MSArMTE1LDExIEBACiAJCW5ldyBBU1ROb2RlLk5vZGVMaXN0KFRZUEVfQk9VTkRTX1BST1BFUlRZ
KTsKIAogCS8qKgotCSAqIFRoZSB0eXBlIGFubm90YXRpb25zIChlbGVtZW50IHR5cGU6IHtAbGlu
ayBBbm5vdGF0aW9ufSkuCisJICogVGhlIG1vZGlmaWVycyAoZWxlbWVudCB0eXBlOiB7QGxpbmsg
SUV4dGVuZGVkTW9kaWZpZXJ9KS4KIAkgKiBOdWxsIGluIEpMUyA8IDguIEFkZGVkIGluIEpMUzg7
IGRlZmF1bHRzIHRvIGFuIGVtcHR5IGxpc3QKIAkgKiAoc2VlIGNvbnN0cnVjdG9yKS4KIAkgKi8K
LQlwcml2YXRlIEFTVE5vZGUuTm9kZUxpc3QgYW5ub3RhdGlvbnMgPSBudWxsOworCXByaXZhdGUg
QVNUTm9kZS5Ob2RlTGlzdCBtb2RpZmllcnMgPSBudWxsOwogCQogCS8qKgogCSAqIENyZWF0ZXMg
YSBuZXcgdW5wYXJlbnRlZCBub2RlIGZvciBhIHBhcmFtZXRlcml6ZWQgdHlwZSBvd25lZCBieSB0
aGUKQEAgLTEzNSw3ICsxMzUsNyBAQAogCQlzdXBlcihhc3QpOwogCSAgICB1bnN1cHBvcnRlZElu
MigpOwogCSAgICBpZiAoYXN0LmFwaUxldmVsID49IEFTVC5KTFM4KSB7Ci0JCQl0aGlzLmFubm90
YXRpb25zID0gbmV3IEFTVE5vZGUuTm9kZUxpc3QoQU5OT1RBVElPTlNfUFJPUEVSVFkpOworCQkJ
dGhpcy5tb2RpZmllcnMgPSBuZXcgQVNUTm9kZS5Ob2RlTGlzdChNT0RJRklFUlNfUFJPUEVSVFkp
OwogCQl9CiAJfQogCkBAIC0xNjYsOCArMTY2LDggQEAKIAkgKiBNZXRob2QgZGVjbGFyZWQgb24g
QVNUTm9kZS4KIAkgKi8KIAlmaW5hbCBMaXN0IGludGVybmFsR2V0Q2hpbGRMaXN0UHJvcGVydHko
Q2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yIHByb3BlcnR5KSB7Ci0JCWlmIChwcm9wZXJ0eSA9
PSBBTk5PVEFUSU9OU19QUk9QRVJUWSkgewotCQkJcmV0dXJuIGFubm90YXRpb25zKCk7CisJCWlm
IChwcm9wZXJ0eSA9PSBNT0RJRklFUlNfUFJPUEVSVFkpIHsKKwkJCXJldHVybiBtb2RpZmllcnMo
KTsKIAkJfQogCQlpZiAocHJvcGVydHkgPT0gVFlQRV9CT1VORFNfUFJPUEVSVFkpIHsKIAkJCXJl
dHVybiB0eXBlQm91bmRzKCk7CkBAIC0xOTAsOCArMTkwLDggQEAKIAkJVHlwZVBhcmFtZXRlciBy
ZXN1bHQgPSBuZXcgVHlwZVBhcmFtZXRlcih0YXJnZXQpOwogCQlyZXN1bHQuc2V0U291cmNlUmFu
Z2UoZ2V0U3RhcnRQb3NpdGlvbigpLCBnZXRMZW5ndGgoKSk7CiAJCWlmICh0aGlzLmFzdC5hcGlM
ZXZlbCA+PSBBU1QuSkxTOCkgewotCQkJcmVzdWx0LmFubm90YXRpb25zKCkuYWRkQWxsKAotCQkJ
CQlBU1ROb2RlLmNvcHlTdWJ0cmVlcyh0YXJnZXQsIGFubm90YXRpb25zKCkpKTsKKwkJCXJlc3Vs
dC5tb2RpZmllcnMoKS5hZGRBbGwoCisJCQkJCUFTVE5vZGUuY29weVN1YnRyZWVzKHRhcmdldCwg
bW9kaWZpZXJzKCkpKTsKIAkJfQogCQlyZXN1bHQuc2V0TmFtZSgoU2ltcGxlTmFtZSkgKChBU1RO
b2RlKSBnZXROYW1lKCkpLmNsb25lKHRhcmdldCkpOwogCQlyZXN1bHQudHlwZUJvdW5kcygpLmFk
ZEFsbCgKQEAgLTIxNSw3ICsyMTUsNyBAQAogCQlpZiAodmlzaXRDaGlsZHJlbikgewogCQkJLy8g
dmlzaXQgY2hpbGRyZW4gaW4gbm9ybWFsIGxlZnQgdG8gcmlnaHQgcmVhZGluZyBvcmRlcgogCQkJ
aWYgKHRoaXMuYXN0LmFwaUxldmVsID49IEFTVC5KTFM4KSB7Ci0JCQkJYWNjZXB0Q2hpbGRyZW4o
dmlzaXRvciwgdGhpcy5hbm5vdGF0aW9ucyk7CisJCQkJYWNjZXB0Q2hpbGRyZW4odmlzaXRvciwg
dGhpcy5tb2RpZmllcnMpOwogCQkJfQogCQkJYWNjZXB0Q2hpbGQodmlzaXRvciwgZ2V0TmFtZSgp
KTsKIAkJCWFjY2VwdENoaWxkcmVuKHZpc2l0b3IsIHRoaXMudHlwZUJvdW5kcyk7CkBAIC0yOTIs
MTkgKzI5MiwxOSBAQAogCX0KIAkKIAkvKioKLQkgKiBSZXR1cm5zIHRoZSBsaXZlIG9yZGVyZWQg
bGlzdCBvZiBhbm5vdGF0aW9ucyBmb3IgdGhpcyBUeXBlUGFyYW1ldGVyIG5vZGUgKGFkZGVkIGlu
IEpMUzggQVBJKS4KKwkgKiBSZXR1cm5zIHRoZSBsaXZlIG9yZGVyZWQgbGlzdCBvZiBtb2RpZmll
cnMgZm9yIHRoaXMgVHlwZVBhcmFtZXRlciBub2RlIChhZGRlZCBpbiBKTFM4IEFQSSkuCiAJICoK
LQkgKiBAcmV0dXJuIHRoZSBsaXZlIGxpc3Qgb2YgYW5ub3RhdGlvbnMgKGVsZW1lbnQgdHlwZTog
e0BsaW5rIEFubm90YXRpb259KQorCSAqIEByZXR1cm4gdGhlIGxpdmUgbGlzdCBvZiBtb2RpZmll
cnMgKGVsZW1lbnQgdHlwZToge0BsaW5rIElFeHRlbmRlZE1vZGlmaWVyfSkKIAkgKiBAZXhjZXB0
aW9uIFVuc3VwcG9ydGVkT3BlcmF0aW9uRXhjZXB0aW9uIGlmIHRoaXMgb3BlcmF0aW9uIGlzIHVz
ZWQKIAkgKiAgICAgICAgICAgIGluIGEgSkxTMiwgSkxTMyBvciBKTFM0IEFTVAogCSAqIEBzaW5j
ZSAzLjkgQkVUQV9KQVZBOAogCSAqLwotCXB1YmxpYyBMaXN0IGFubm90YXRpb25zKCkgeworCXB1
YmxpYyBMaXN0IG1vZGlmaWVycygpIHsKIAkJLy8gbW9yZSBlZmZpY2llbnQgdGhhbiBqdXN0IGNh
bGxpbmcgdW5zdXBwb3J0ZWRJbjJfM180KCkgdG8gY2hlY2sKLQkJaWYgKHRoaXMuYW5ub3RhdGlv
bnMgPT0gbnVsbCkgeworCQlpZiAodGhpcy5tb2RpZmllcnMgPT0gbnVsbCkgewogCQkJdW5zdXBw
b3J0ZWRJbjJfM180KCk7CiAJCX0KLQkJcmV0dXJuIHRoaXMuYW5ub3RhdGlvbnM7CisJCXJldHVy
biB0aGlzLm1vZGlmaWVyczsKIAl9CiAKIAkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhv
ZCkKQEAgLTMyMSw3ICszMjEsNyBAQAogCWludCB0cmVlU2l6ZSgpIHsKIAkJcmV0dXJuCiAJCQlt
ZW1TaXplKCkKLQkJCSsgKHRoaXMuYW5ub3RhdGlvbnMgPT0gbnVsbCA/IDAgOiB0aGlzLmFubm90
YXRpb25zLmxpc3RTaXplKCkpCisJCQkrICh0aGlzLm1vZGlmaWVycyA9PSBudWxsID8gMCA6IHRo
aXMubW9kaWZpZXJzLmxpc3RTaXplKCkpCiAJCQkrICh0aGlzLnR5cGVWYXJpYWJsZU5hbWUgPT0g
bnVsbCA/IDAgOiBnZXROYW1lKCkudHJlZVNpemUoKSkKIAkJCSsgdGhpcy50eXBlQm91bmRzLmxp
c3RTaXplKCk7CiAJfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9OYWl2ZUFTVEZsYXR0ZW5lci5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9O
YWl2ZUFTVEZsYXR0ZW5lci5qYXZhCmluZGV4IDYxODlhMWYuLjhjZTE3YmMgMTAwNjQ0Ci0tLSBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9k
b20vTmFpdmVBU1RGbGF0dGVuZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20v
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL05haXZlQVNURmxhdHRlbmVyLmphdmEK
QEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChj
KSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChj
KSAyMDAwLCAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyBy
ZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICog
YXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMg
TGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5k
IGlzIGF2YWlsYWJsZSBhdApAQCAtMTI1NCwxMSArMTI1NCwxMyBAQAogCSAqIEBzZWUgQVNUVmlz
aXRvciN2aXNpdChQYWNrYWdlRGVjbGFyYXRpb24pCiAJICovCiAJcHVibGljIGJvb2xlYW4gdmlz
aXQoUGFja2FnZURlY2xhcmF0aW9uIG5vZGUpIHsKLQkJaWYgKG5vZGUuZ2V0QVNUKCkuYXBpTGV2
ZWwoKSA+PSBKTFMzKSB7CisJCWludCBhcGlMZXZlbCA9IG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwo
KTsKKwkJaWYgKGFwaUxldmVsID49IEpMUzMpIHsKIAkJCWlmIChub2RlLmdldEphdmFkb2MoKSAh
PSBudWxsKSB7CiAJCQkJbm9kZS5nZXRKYXZhZG9jKCkuYWNjZXB0KHRoaXMpOwogCQkJfQotCQkJ
Zm9yIChJdGVyYXRvciBpdCA9IG5vZGUuYW5ub3RhdGlvbnMoKS5pdGVyYXRvcigpOyBpdC5oYXNO
ZXh0KCk7ICkgeworCQkJTGlzdCBsaXN0ID0gZ2V0UGFja2FnZURlY2xBTUxpc3Qobm9kZSwgYXBp
TGV2ZWwpOworCQkJZm9yIChJdGVyYXRvciBpdCA9IGxpc3QuaXRlcmF0b3IoKTsgaXQuaGFzTmV4
dCgpOyApIHsKIAkJCQlBbm5vdGF0aW9uIHAgPSAoQW5ub3RhdGlvbikgaXQubmV4dCgpOwogCQkJ
CXAuYWNjZXB0KHRoaXMpOwogCQkJCXRoaXMuYnVmZmVyLmFwcGVuZCgiICIpOy8vJE5PTi1OTFMt
MSQKQEAgLTE4MTYsNyArMTgxOCw3IEBACiAJICovCiAJcHVibGljIGJvb2xlYW4gdmlzaXQoVHlw
ZVBhcmFtZXRlciBub2RlKSB7CiAJCWlmIChub2RlLmdldEFTVCgpLmFwaUxldmVsKCkgPj0gQVNU
LkpMUzgpIHsKLQkJCXZpc2l0QW5ub3RhdGlvbnNMaXN0KG5vZGUuYW5ub3RhdGlvbnMoKSk7CisJ
CQlwcmludE1vZGlmaWVycyhub2RlLm1vZGlmaWVycygpKTsKIAkJfQogCQlub2RlLmdldE5hbWUo
KS5hY2NlcHQodGhpcyk7CiAJCWlmICghbm9kZS50eXBlQm91bmRzKCkuaXNFbXB0eSgpKSB7CkBA
IC0xOTU0LDQgKzE5NTYsMTEgQEAKIAkJbm9kZS5nZXRDb21wb25lbnRUeXBlKCkuYWNjZXB0KHRo
aXMpOwogCX0KIAorCS8qKgorCSAqIEBkZXByZWNhdGVkCisJICovCisJcHJpdmF0ZSBMaXN0IGdl
dFBhY2thZ2VEZWNsQU1MaXN0KFBhY2thZ2VEZWNsYXJhdGlvbiBwYWNrYWdlRGVjbGFyYXRpb24s
IGludCBhcGlMZXZlbCkgeworCQlyZXR1cm4gYXBpTGV2ZWwgPCBBU1QuSkxTOCA/IHBhY2thZ2VE
ZWNsYXJhdGlvbi5hbm5vdGF0aW9ucygpIDogcGFja2FnZURlY2xhcmF0aW9uLm1vZGlmaWVycygp
OworCX0KKwogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9yZXdyaXRlL0FTVFJld3JpdGVBbmFseXplci5qYXZh
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3Jl
L2RvbS9yZXdyaXRlL0FTVFJld3JpdGVBbmFseXplci5qYXZhCmluZGV4IDQxNzFmZjMuLjBkN2Ew
ZjIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9BU1RSZXdyaXRlQW5hbHl6ZXIuamF2YQorKysgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9t
L3Jld3JpdGUvQVNUUmV3cml0ZUFuYWx5emVyLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3Jh
dGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDE0IElCTSBDb3Jwb3Jh
dGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFu
ZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVy
IHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBh
Y2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtODUs
NiArODUsOSBAQAogCiAJLyoqIEBkZXByZWNhdGVkIHVzaW5nIGRlcHJlY2F0ZWQgY29kZSAqLwog
CXByaXZhdGUgc3RhdGljIGZpbmFsIENoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBJTlRFUk5B
TF9NRVRIT0RfVEhST1dOX0VYQ0VQVElPTlNfUFJPUEVSVFkgPSBNZXRob2REZWNsYXJhdGlvbi5U
SFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWTsKKworCS8qKiBAZGVwcmVjYXRlZCB1c2luZyBkZXBy
ZWNhdGVkIGNvZGUgKi8KKwlwcml2YXRlIHN0YXRpYyBmaW5hbCBDaGlsZExpc3RQcm9wZXJ0eURl
c2NyaXB0b3IgSU5URVJOQUxfUEFDS0FHRV9BTk5PVEFUSU9OU19QUk9QRVJUWSA9IFBhY2thZ2VE
ZWNsYXJhdGlvbi5BTk5PVEFUSU9OU19QUk9QRVJUWTsKIAogCS8qKiBAZGVwcmVjYXRlZCB1c2lu
ZyBkZXByZWNhdGVkIGNvZGUgKi8KIAlwcml2YXRlIHN0YXRpYyBmaW5hbCBTaW1wbGVQcm9wZXJ0
eURlc2NyaXB0b3IgSU5URVJOQUxfVFlQRV9NT0RJRklFUlNfUFJPUEVSVFkgPSBUeXBlRGVjbGFy
YXRpb24uTU9ESUZJRVJTX1BST1BFUlRZOwpAQCAtMTUzMyw3ICsxNTM2LDggQEAKIAkJfQogCiAJ
CVByZWZpeCBmb3JtYXR0ZXJQcmVmaXg7Ci0JCWlmIChwcm9wZXJ0eSA9PSBTaW5nbGVWYXJpYWJs
ZURlY2xhcmF0aW9uLk1PRElGSUVSUzJfUFJPUEVSVFkgfHwgaXNBbm5vdGF0aW9uc1Byb3BlcnR5
KQorCQlpZiAocHJvcGVydHkgPT0gU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbi5NT0RJRklFUlMy
X1BST1BFUlRZIHx8IAorCQkJCXByb3BlcnR5ID09IFR5cGVQYXJhbWV0ZXIuTU9ESUZJRVJTX1BS
T1BFUlRZIHx8IGlzQW5ub3RhdGlvbnNQcm9wZXJ0eSkKIAkJCWZvcm1hdHRlclByZWZpeD0gdGhp
cy5mb3JtYXR0ZXIuUEFSQU1fQU5OT1RBVElPTl9TRVBBUkFUSU9OOwogCQllbHNlCiAJCQlmb3Jt
YXR0ZXJQcmVmaXg9IHRoaXMuZm9ybWF0dGVyLkFOTk9UQVRJT05fU0VQQVJBVElPTjsKQEAgLTMx
MjUsOSArMzEyOSwxMSBAQAogCQlpZiAoIWhhc0NoaWxkcmVuQ2hhbmdlcyhub2RlKSkgewogCQkJ
cmV0dXJuIGRvVmlzaXRVbmNoYW5nZWRDaGlsZHJlbihub2RlKTsKIAkJfQotCQlpZiAobm9kZS5n
ZXRBU1QoKS5hcGlMZXZlbCgpID49IEpMUzNfSU5URVJOQUwpIHsKKwkJaW50IGFwaUxldmVsID0g
bm9kZS5nZXRBU1QoKS5hcGlMZXZlbCgpOworCQlpZiAoYXBpTGV2ZWwgPj0gSkxTM19JTlRFUk5B
TCkgewogCQkJaW50IHBvcz0gcmV3cml0ZUphdmFkb2Mobm9kZSwgUGFja2FnZURlY2xhcmF0aW9u
LkpBVkFET0NfUFJPUEVSVFkpOwotCQkJcmV3cml0ZU1vZGlmaWVyczIobm9kZSwgUGFja2FnZURl
Y2xhcmF0aW9uLkFOTk9UQVRJT05TX1BST1BFUlRZLCBwb3MpOworCQkJQ2hpbGRMaXN0UHJvcGVy
dHlEZXNjcmlwdG9yIHByb3BlcnR5ID0gYXBpTGV2ZWwgPCBBU1QuSkxTOCA/IElOVEVSTkFMX1BB
Q0tBR0VfQU5OT1RBVElPTlNfUFJPUEVSVFkgOiBQYWNrYWdlRGVjbGFyYXRpb24uTU9ESUZJRVJT
X1BST1BFUlRZOworCQkJcmV3cml0ZU1vZGlmaWVyczIobm9kZSwgcHJvcGVydHksIHBvcyk7CiAJ
CX0KIAogCQlyZXdyaXRlUmVxdWlyZWROb2RlKG5vZGUsIFBhY2thZ2VEZWNsYXJhdGlvbi5OQU1F
X1BST1BFUlRZKTsKQEAgLTQyNDMsNyArNDI0OSw3IEBACiAJCX0KIAkJaW50IHBvczsKIAkJaWYg
KG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA+PSBBU1QuSkxTOCkgewotCQkJcG9zID0gcmV3cml0
ZVR5cGVBbm5vdGF0aW9ucyhub2RlLCBUeXBlUGFyYW1ldGVyLkFOTk9UQVRJT05TX1BST1BFUlRZ
LCBub2RlLmdldFN0YXJ0UG9zaXRpb24oKSk7CisJCQlwb3MgPSByZXdyaXRlTW9kaWZpZXJzMihu
b2RlLCBUeXBlUGFyYW1ldGVyLk1PRElGSUVSU19QUk9QRVJUWSwgbm9kZS5nZXRTdGFydFBvc2l0
aW9uKCkpOwogCQl9CiAJCXBvcz0gcmV3cml0ZVJlcXVpcmVkTm9kZShub2RlLCBUeXBlUGFyYW1l
dGVyLk5BTUVfUFJPUEVSVFkpOwogCQlyZXdyaXRlTm9kZUxpc3Qobm9kZSwgVHlwZVBhcmFtZXRl
ci5UWVBFX0JPVU5EU19QUk9QRVJUWSwgcG9zLCAiIGV4dGVuZHMgIiwgIiAmICIpOyAvLyROT04t
TkxTLTEkIC8vJE5PTi1OTFMtMiQKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Rv
bS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9BU1RSZXdyaXRlRmxh
dHRlbmVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvcmUvZG9tL3Jld3JpdGUvQVNUUmV3cml0ZUZsYXR0ZW5lci5qYXZhCmluZGV4IDhk
MWVhZmYuLmFkY2UyMWYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9BU1RSZXdyaXRlRmxhdHRlbmVy
LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL2RvbS9yZXdyaXRlL0FTVFJld3JpdGVGbGF0dGVuZXIuamF2YQpAQCAtMSw1ICsx
LDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIw
MTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIw
MTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBU
aGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBh
dmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYx
LjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxh
YmxlIGF0CkBAIC00Miw2ICs0Miw5IEBACiAKIAkvKiogQGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVj
YXRlZCBjb2RlICovCiAJcHJpdmF0ZSBzdGF0aWMgZmluYWwgQ2hpbGRMaXN0UHJvcGVydHlEZXNj
cmlwdG9yIElOVEVSTkFMX01FVEhPRF9USFJPV05fRVhDRVBUSU9OU19QUk9QRVJUWSA9IE1ldGhv
ZERlY2xhcmF0aW9uLlRIUk9XTl9FWENFUFRJT05TX1BST1BFUlRZOworCisJLyoqIEBkZXByZWNh
dGVkIHVzaW5nIGRlcHJlY2F0ZWQgY29kZSAqLworCXByaXZhdGUgc3RhdGljIGZpbmFsIENoaWxk
TGlzdFByb3BlcnR5RGVzY3JpcHRvciBJTlRFUk5BTF9QQUNLQUdFX0FOTk9UQVRJT05TX1BST1BF
UlRZID0gUGFja2FnZURlY2xhcmF0aW9uLkFOTk9UQVRJT05TX1BST1BFUlRZOwogCiAJLyoqIEBk
ZXByZWNhdGVkIHVzaW5nIGRlcHJlY2F0ZWQgY29kZSAqLwogCXByaXZhdGUgc3RhdGljIGZpbmFs
IFNpbXBsZVByb3BlcnR5RGVzY3JpcHRvciBJTlRFUk5BTF9UWVBFX01PRElGSUVSU19QUk9QRVJU
WSA9IFR5cGVEZWNsYXJhdGlvbi5NT0RJRklFUlNfUFJPUEVSVFk7CkBAIC04MTQsMTIgKzgxNywx
NCBAQAogCSAqIEBzZWUgQVNUVmlzaXRvciN2aXNpdChQYWNrYWdlRGVjbGFyYXRpb24pCiAJICov
CiAJcHVibGljIGJvb2xlYW4gdmlzaXQoUGFja2FnZURlY2xhcmF0aW9uIG5vZGUpIHsKLQkJaWYg
KG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA+PSBKTFMzX0lOVEVSTkFMKSB7CisJCWludCBhcGlM
ZXZlbCA9IG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKTsKKwkJaWYgKGFwaUxldmVsID49IEpMUzNf
SU5URVJOQUwpIHsKIAkJCUFTVE5vZGUgamF2YWRvYyA9IGdldENoaWxkTm9kZShub2RlLCBQYWNr
YWdlRGVjbGFyYXRpb24uSkFWQURPQ19QUk9QRVJUWSk7CiAJCQlpZiAoamF2YWRvYyAhPSBudWxs
KSB7CiAJCQkJamF2YWRvYy5hY2NlcHQodGhpcyk7CiAJCQl9Ci0JCQl2aXNpdExpc3Qobm9kZSwg
UGFja2FnZURlY2xhcmF0aW9uLkFOTk9UQVRJT05TX1BST1BFUlRZLCBTdHJpbmcudmFsdWVPZign
ICcpKTsKKwkJCUNoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBwcm9wZXJ0eSA9IGFwaUxldmVs
IDwgQVNULkpMUzggPyBJTlRFUk5BTF9QQUNLQUdFX0FOTk9UQVRJT05TX1BST1BFUlRZIDogUGFj
a2FnZURlY2xhcmF0aW9uLk1PRElGSUVSU19QUk9QRVJUWTsKKwkJCXZpc2l0TGlzdChub2RlLCBw
cm9wZXJ0eSwgU3RyaW5nLnZhbHVlT2YoJyAnKSk7CiAJCX0KIAkJdGhpcy5yZXN1bHQuYXBwZW5k
KCJwYWNrYWdlICIpOyAvLyROT04tTkxTLTEkCiAJCWdldENoaWxkTm9kZShub2RlLCBQYWNrYWdl
RGVjbGFyYXRpb24uTkFNRV9QUk9QRVJUWSkuYWNjZXB0KHRoaXMpOwpAQCAtMTUyNiw3ICsxNTMx
LDcgQEAKIAkgKi8KIAlwdWJsaWMgYm9vbGVhbiB2aXNpdChUeXBlUGFyYW1ldGVyIG5vZGUpIHsK
IAkJaWYgKG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA+PSBBU1QuSkxTOCkgewotCQkJdmlzaXRM
aXN0KG5vZGUsIFR5cGVQYXJhbWV0ZXIuQU5OT1RBVElPTlNfUFJPUEVSVFksIFN0cmluZy52YWx1
ZU9mKCcgJyksIFV0aWwuRU1QVFlfU1RSSU5HLCBTdHJpbmcudmFsdWVPZignICcpKTsKKwkJCXZp
c2l0TGlzdChub2RlLCBUeXBlUGFyYW1ldGVyLk1PRElGSUVSU19QUk9QRVJUWSwgU3RyaW5nLnZh
bHVlT2YoJyAnKSwgVXRpbC5FTVBUWV9TVFJJTkcsIFN0cmluZy52YWx1ZU9mKCcgJykpOwogCQl9
CiAJCWdldENoaWxkTm9kZShub2RlLCBUeXBlUGFyYW1ldGVyLk5BTUVfUFJPUEVSVFkpLmFjY2Vw
dCh0aGlzKTsKIAkJdmlzaXRMaXN0KG5vZGUsIFR5cGVQYXJhbWV0ZXIuVFlQRV9CT1VORFNfUFJP
UEVSVFksICIgJiAiLCAiIGV4dGVuZHMgIiwgVXRpbC5FTVBUWV9TVFJJTkcpOyAvLyROT04tTkxT
LTEkIC8vJE5PTi1OTFMtMiQ=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>239540</attachid>
            <date>2014-02-01 01:16:00 -0500</date>
            <delta_ts>2014-02-01 01:16:32 -0500</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Fix-for-Bug-426462-18dom-ast-TypeParameterannotation.patch</filename>
            <type>text/plain</type>
            <size>13751</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
ZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZhCmluZGV4IDQ5Y2ZmMjQuLjI0NjYxNmQgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Rv
bS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YQpAQCAtMTQ0MSw4ICsxNDQxLDggQEAKIAogCQkvLyBU
eXBlUGFyYW1ldGVyIHdpdGggVFlQRV9VU0UgYW5kIFRZUEVfUEFSQU1FVEVSIGFubm90YXRpb24g
Y29tYmluYXRpb24uCiAJCWFzc2VydEVxdWFscygiQE1hcmtlcjEgQE1hcmtlcjMgRiBleHRlbmRz
IEBNYXJrZXIxIEBNYXJrZXIyIEZpbGUiLCB0eXBlUGFyYW1ldGVyLnRvU3RyaW5nKCkpOwotCQlh
c3NlcnRUcnVlKHR5cGVQYXJhbWV0ZXIuYW5ub3RhdGlvbnMoKS5zaXplKCkgPT0gMik7Ci0JCUFu
bm90YXRpb24gYW5ub3RhdGlvbiA9IChBbm5vdGF0aW9uKXR5cGVQYXJhbWV0ZXIuYW5ub3RhdGlv
bnMoKS5nZXQoMSk7CisJCWFzc2VydFRydWUodHlwZVBhcmFtZXRlci5tb2RpZmllcnMoKS5zaXpl
KCkgPT0gMik7CisJCUFubm90YXRpb24gYW5ub3RhdGlvbiA9IChBbm5vdGF0aW9uKXR5cGVQYXJh
bWV0ZXIubW9kaWZpZXJzKCkuZ2V0KDEpOwogCQlhc3NlcnRFcXVhbHMoIkBNYXJrZXIzIiwgYW5u
b3RhdGlvbi50b1N0cmluZygpKTsKIAkJSUFubm90YXRpb25CaW5kaW5nIGFiaW5kaW5nID0gYW5u
b3RhdGlvbi5yZXNvbHZlQW5ub3RhdGlvbkJpbmRpbmcoKTsKIAkJYXNzZXJ0RXF1YWxzKCJATWFy
a2VyMygpIiwgYWJpbmRpbmcudG9TdHJpbmcoKSk7CkBAIC0xNTMwLDggKzE1MzAsOCBAQAogCQl0
eXBlZGVjbGFyYXRpb24gPSAoVHlwZURlY2xhcmF0aW9uKSBnZXRBU1ROb2RlKGN1LCAxKTsKIAkJ
dHlwZVBhcmFtZXRlciA9IChUeXBlUGFyYW1ldGVyKSB0eXBlZGVjbGFyYXRpb24udHlwZVBhcmFt
ZXRlcnMoKS5nZXQoMCk7CiAJCWFzc2VydEVxdWFscygiQE1hcmtlcjMgVCIsIHR5cGVQYXJhbWV0
ZXIudG9TdHJpbmcoKSk7Ci0JCWFzc2VydFRydWUodHlwZVBhcmFtZXRlci5hbm5vdGF0aW9ucygp
LnNpemUoKSA9PSAxKTsKLQkJYW5ub3RhdGlvbiA9IChBbm5vdGF0aW9uKXR5cGVQYXJhbWV0ZXIu
YW5ub3RhdGlvbnMoKS5nZXQoMCk7CisJCWFzc2VydFRydWUodHlwZVBhcmFtZXRlci5tb2RpZmll
cnMoKS5zaXplKCkgPT0gMSk7CisJCWFubm90YXRpb24gPSAoQW5ub3RhdGlvbil0eXBlUGFyYW1l
dGVyLm1vZGlmaWVycygpLmdldCgwKTsKIAkJYXNzZXJ0RXF1YWxzKCJATWFya2VyMyIsIGFubm90
YXRpb24udG9TdHJpbmcoKSk7CiAJCWFiaW5kaW5nID0gYW5ub3RhdGlvbi5yZXNvbHZlQW5ub3Rh
dGlvbkJpbmRpbmcoKTsKIAkJYXNzZXJ0RXF1YWxzKCJATWFya2VyMygpIiwgYWJpbmRpbmcudG9T
dHJpbmcoKSk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVE1hdGNoZXJUZXN0LmphdmEgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvZG9tL0FTVE1hdGNoZXJUZXN0LmphdmEKaW5kZXggOTk2ZDViMC4uYzJhZmRjZCAxMDA2
NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RNYXRjaGVyVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20v
QVNUTWF0Y2hlclRlc3QuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhl
cnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhl
cnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBh
bnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9m
IHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRo
aXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0xNjAyLDcgKzE2MDIsNyBA
QAogCQlUeXBlRGVjbGFyYXRpb24geDEgPSB0aGlzLmFzdC5uZXdUeXBlRGVjbGFyYXRpb24oKTsK
IAkJVHlwZVBhcmFtZXRlciB4MiA9IHRoaXMuYXN0Lm5ld1R5cGVQYXJhbWV0ZXIoKTsKIAkJeDIu
c2V0TmFtZSh0aGlzLmFzdC5uZXdTaW1wbGVOYW1lKCJUIikpOwotCQl4Mi5hbm5vdGF0aW9ucygp
LmFkZCh0aGlzLkFOTzEpOworCQl4Mi5tb2RpZmllcnMoKS5hZGQodGhpcy5BTk8xKTsKIAkJeDEu
dHlwZVBhcmFtZXRlcnMoKS5hZGQoeDIpOwogCQl4MS5zZXROYW1lKHRoaXMuTjIpOwogCQliYXNp
Y01hdGNoKHgxKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNs
aXBzZS9qZHQvY29yZS9kb20vQVNUQ29udmVydGVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVENvbnZlcnRlci5qYXZhCmluZGV4IGY5
NTg4YjkuLmYxNjkyZTYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcv
ZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUQ29udmVydGVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIuamF2YQpA
QCAtMzQ4NSw3ICszNDg1LDcgQEAKIAkJCQkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLmFzdC5Bbm5vdGF0aW9uIHR5cGVBbm5vdGF0aW9uID0gYW5ub3RhdGlvbnNbaV07CiAJCQkJ
CWlmICh0eXBlQW5ub3RhdGlvbiAhPSBudWxsKSB7CiAJCQkJCQlBbm5vdGF0aW9uIGFubm90YXRp
b24gPSBjb252ZXJ0KHR5cGVBbm5vdGF0aW9uKTsKLQkJCQkJCXR5cGVQYXJhbWV0ZXIuYW5ub3Rh
dGlvbnMoKS5hZGQoYW5ub3RhdGlvbik7CisJCQkJCQl0eXBlUGFyYW1ldGVyLm1vZGlmaWVycygp
LmFkZChhbm5vdGF0aW9uKTsKIAkJCQkJfQogCQkJCX0KIAkJfQpkaWZmIC0tZ2l0IGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RNYXRjaGVyLmph
dmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FT
VE1hdGNoZXIuamF2YQppbmRleCBjNWQ0ZTIzLi42MTYzMzA4IDEwMDY0NAotLS0gYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVE1hdGNoZXIuamF2
YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9t
L0FTVE1hdGNoZXIuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
Ci0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMu
CisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMu
CiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlp
bmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRo
ZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMg
ZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0yNDI4LDcgKzI0MjgsNyBAQAog
CQl9CiAJCVR5cGVQYXJhbWV0ZXIgbyA9IChUeXBlUGFyYW1ldGVyKSBvdGhlcjsKIAkJaW50IGxl
dmVsID0gbm9kZS5nZXRBU1QoKS5hcGlMZXZlbDsKLQkJcmV0dXJuIChsZXZlbCA+PSBBU1QuSkxT
OCA/IHNhZmVTdWJ0cmVlTGlzdE1hdGNoKG5vZGUuYW5ub3RhdGlvbnMoKSwgby5hbm5vdGF0aW9u
cygpKSA6IHRydWUpCisJCXJldHVybiAobGV2ZWwgPj0gQVNULkpMUzggPyBzYWZlU3VidHJlZUxp
c3RNYXRjaChub2RlLm1vZGlmaWVycygpLCBvLm1vZGlmaWVycygpKSA6IHRydWUpCiAJCQkJJiYg
c2FmZVN1YnRyZWVNYXRjaChub2RlLmdldE5hbWUoKSwgby5nZXROYW1lKCkpCiAJCQkJJiYgc2Fm
ZVN1YnRyZWVMaXN0TWF0Y2gobm9kZS50eXBlQm91bmRzKCksIG8udHlwZUJvdW5kcygpKTsKIAl9
CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2Nv
cmUvZG9tL1R5cGVQYXJhbWV0ZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcv
ZWNsaXBzZS9qZHQvY29yZS9kb20vVHlwZVBhcmFtZXRlci5qYXZhCmluZGV4IDc5MzhjNzkuLmFl
YjM5NTAgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9q
ZHQvY29yZS9kb20vVHlwZVBhcmFtZXRlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vVHlwZVBhcmFtZXRlci5qYXZhCkBAIC0xLDUg
KzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMywg
MjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMywg
MjAxNCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQu
IFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRl
IGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2Ug
djEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFp
bGFibGUgYXQKQEAgLTMzLDExICszMywxMSBAQAogcHVibGljIGNsYXNzIFR5cGVQYXJhbWV0ZXIg
ZXh0ZW5kcyBBU1ROb2RlIHsKIAogCS8qKgotCSAqIFRoZSAiYW5ub3RhdGlvbnMiIHN0cnVjdHVy
YWwgcHJvcGVydHkgb2YgdGhpcyBub2RlIHR5cGUgKGVsZW1lbnQgdHlwZToge0BsaW5rIEFubm90
YXRpb259KSAoYWRkZWQgaW4gSkxTOCBBUEkpLgorCSAqIFRoZSAibW9kaWZpZXJzIiBzdHJ1Y3R1
cmFsIHByb3BlcnR5IG9mIHRoaXMgbm9kZSB0eXBlIChlbGVtZW50IHR5cGU6IHtAbGluayBJRXh0
ZW5kZWRNb2RpZmllcn0pIChhZGRlZCBpbiBKTFM4IEFQSSkuCiAJICogQHNpbmNlIDMuOSBCRVRB
X0pBVkE4CiAJICovCi0JcHVibGljIHN0YXRpYyBmaW5hbCBDaGlsZExpc3RQcm9wZXJ0eURlc2Ny
aXB0b3IgQU5OT1RBVElPTlNfUFJPUEVSVFkgPQotCQkJbmV3IENoaWxkTGlzdFByb3BlcnR5RGVz
Y3JpcHRvcihUeXBlUGFyYW1ldGVyLmNsYXNzLCAiYW5ub3RhdGlvbnMiLCBBbm5vdGF0aW9uLmNs
YXNzLCBDWUNMRV9SSVNLKTsgLy8kTk9OLU5MUy0xJAorCXB1YmxpYyBzdGF0aWMgZmluYWwgQ2hp
bGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yIE1PRElGSUVSU19QUk9QRVJUWSA9CisJCQluZXcgQ2hp
bGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yKFR5cGVQYXJhbWV0ZXIuY2xhc3MsICJtb2RpZmllcnMi
LCBJRXh0ZW5kZWRNb2RpZmllci5jbGFzcywgQ1lDTEVfUklTSyk7IC8vJE5PTi1OTFMtMSQKIAkK
IAkvKioKIAkgKiBUaGUgIm5hbWUiIHN0cnVjdHVyYWwgcHJvcGVydHkgb2YgdGhpcyBub2RlIHR5
cGUgKGNoaWxkIHR5cGU6IHtAbGluayBTaW1wbGVOYW1lfSkuCkBAIC03NCw3ICs3NCw3IEBACiAJ
CQogCQlwcm9wZXJ0eUxpc3QgPSBuZXcgQXJyYXlMaXN0KDQpOwogCQljcmVhdGVQcm9wZXJ0eUxp
c3QoVHlwZVBhcmFtZXRlci5jbGFzcywgcHJvcGVydHlMaXN0KTsKLQkJYWRkUHJvcGVydHkoQU5O
T1RBVElPTlNfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CisJCWFkZFByb3BlcnR5KE1PRElGSUVS
U19QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKIAkJYWRkUHJvcGVydHkoTkFNRV9QUk9QRVJUWSwg
cHJvcGVydHlMaXN0KTsKIAkJYWRkUHJvcGVydHkoVFlQRV9CT1VORFNfUFJPUEVSVFksIHByb3Bl
cnR5TGlzdCk7CiAJCVBST1BFUlRZX0RFU0NSSVBUT1JTXzhfMCA9IHJlYXBQcm9wZXJ0eUxpc3Qo
cHJvcGVydHlMaXN0KTsKQEAgLTExNSwxMSArMTE1LDExIEBACiAJCW5ldyBBU1ROb2RlLk5vZGVM
aXN0KFRZUEVfQk9VTkRTX1BST1BFUlRZKTsKIAogCS8qKgotCSAqIFRoZSB0eXBlIGFubm90YXRp
b25zIChlbGVtZW50IHR5cGU6IHtAbGluayBBbm5vdGF0aW9ufSkuCisJICogVGhlIG1vZGlmaWVy
cyAoZWxlbWVudCB0eXBlOiB7QGxpbmsgSUV4dGVuZGVkTW9kaWZpZXJ9KS4KIAkgKiBOdWxsIGlu
IEpMUyA8IDguIEFkZGVkIGluIEpMUzg7IGRlZmF1bHRzIHRvIGFuIGVtcHR5IGxpc3QKIAkgKiAo
c2VlIGNvbnN0cnVjdG9yKS4KIAkgKi8KLQlwcml2YXRlIEFTVE5vZGUuTm9kZUxpc3QgYW5ub3Rh
dGlvbnMgPSBudWxsOworCXByaXZhdGUgQVNUTm9kZS5Ob2RlTGlzdCBtb2RpZmllcnMgPSBudWxs
OwogCQogCS8qKgogCSAqIENyZWF0ZXMgYSBuZXcgdW5wYXJlbnRlZCBub2RlIGZvciBhIHBhcmFt
ZXRlcml6ZWQgdHlwZSBvd25lZCBieSB0aGUKQEAgLTEzNSw3ICsxMzUsNyBAQAogCQlzdXBlcihh
c3QpOwogCSAgICB1bnN1cHBvcnRlZEluMigpOwogCSAgICBpZiAoYXN0LmFwaUxldmVsID49IEFT
VC5KTFM4KSB7Ci0JCQl0aGlzLmFubm90YXRpb25zID0gbmV3IEFTVE5vZGUuTm9kZUxpc3QoQU5O
T1RBVElPTlNfUFJPUEVSVFkpOworCQkJdGhpcy5tb2RpZmllcnMgPSBuZXcgQVNUTm9kZS5Ob2Rl
TGlzdChNT0RJRklFUlNfUFJPUEVSVFkpOwogCQl9CiAJfQogCkBAIC0xNjYsOCArMTY2LDggQEAK
IAkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KIAkgKi8KIAlmaW5hbCBMaXN0IGludGVy
bmFsR2V0Q2hpbGRMaXN0UHJvcGVydHkoQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yIHByb3Bl
cnR5KSB7Ci0JCWlmIChwcm9wZXJ0eSA9PSBBTk5PVEFUSU9OU19QUk9QRVJUWSkgewotCQkJcmV0
dXJuIGFubm90YXRpb25zKCk7CisJCWlmIChwcm9wZXJ0eSA9PSBNT0RJRklFUlNfUFJPUEVSVFkp
IHsKKwkJCXJldHVybiBtb2RpZmllcnMoKTsKIAkJfQogCQlpZiAocHJvcGVydHkgPT0gVFlQRV9C
T1VORFNfUFJPUEVSVFkpIHsKIAkJCXJldHVybiB0eXBlQm91bmRzKCk7CkBAIC0xOTAsOCArMTkw
LDggQEAKIAkJVHlwZVBhcmFtZXRlciByZXN1bHQgPSBuZXcgVHlwZVBhcmFtZXRlcih0YXJnZXQp
OwogCQlyZXN1bHQuc2V0U291cmNlUmFuZ2UoZ2V0U3RhcnRQb3NpdGlvbigpLCBnZXRMZW5ndGgo
KSk7CiAJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCA+PSBBU1QuSkxTOCkgewotCQkJcmVzdWx0LmFu
bm90YXRpb25zKCkuYWRkQWxsKAotCQkJCQlBU1ROb2RlLmNvcHlTdWJ0cmVlcyh0YXJnZXQsIGFu
bm90YXRpb25zKCkpKTsKKwkJCXJlc3VsdC5tb2RpZmllcnMoKS5hZGRBbGwoCisJCQkJCUFTVE5v
ZGUuY29weVN1YnRyZWVzKHRhcmdldCwgbW9kaWZpZXJzKCkpKTsKIAkJfQogCQlyZXN1bHQuc2V0
TmFtZSgoU2ltcGxlTmFtZSkgKChBU1ROb2RlKSBnZXROYW1lKCkpLmNsb25lKHRhcmdldCkpOwog
CQlyZXN1bHQudHlwZUJvdW5kcygpLmFkZEFsbCgKQEAgLTIxNSw3ICsyMTUsNyBAQAogCQlpZiAo
dmlzaXRDaGlsZHJlbikgewogCQkJLy8gdmlzaXQgY2hpbGRyZW4gaW4gbm9ybWFsIGxlZnQgdG8g
cmlnaHQgcmVhZGluZyBvcmRlcgogCQkJaWYgKHRoaXMuYXN0LmFwaUxldmVsID49IEFTVC5KTFM4
KSB7Ci0JCQkJYWNjZXB0Q2hpbGRyZW4odmlzaXRvciwgdGhpcy5hbm5vdGF0aW9ucyk7CisJCQkJ
YWNjZXB0Q2hpbGRyZW4odmlzaXRvciwgdGhpcy5tb2RpZmllcnMpOwogCQkJfQogCQkJYWNjZXB0
Q2hpbGQodmlzaXRvciwgZ2V0TmFtZSgpKTsKIAkJCWFjY2VwdENoaWxkcmVuKHZpc2l0b3IsIHRo
aXMudHlwZUJvdW5kcyk7CkBAIC0yOTIsMTkgKzI5MiwxOSBAQAogCX0KIAkKIAkvKioKLQkgKiBS
ZXR1cm5zIHRoZSBsaXZlIG9yZGVyZWQgbGlzdCBvZiBhbm5vdGF0aW9ucyBmb3IgdGhpcyBUeXBl
UGFyYW1ldGVyIG5vZGUgKGFkZGVkIGluIEpMUzggQVBJKS4KKwkgKiBSZXR1cm5zIHRoZSBsaXZl
IG9yZGVyZWQgbGlzdCBvZiBtb2RpZmllcnMgZm9yIHRoaXMgVHlwZVBhcmFtZXRlciBub2RlIChh
ZGRlZCBpbiBKTFM4IEFQSSkuCiAJICoKLQkgKiBAcmV0dXJuIHRoZSBsaXZlIGxpc3Qgb2YgYW5u
b3RhdGlvbnMgKGVsZW1lbnQgdHlwZToge0BsaW5rIEFubm90YXRpb259KQorCSAqIEByZXR1cm4g
dGhlIGxpdmUgbGlzdCBvZiBtb2RpZmllcnMgKGVsZW1lbnQgdHlwZToge0BsaW5rIElFeHRlbmRl
ZE1vZGlmaWVyfSkKIAkgKiBAZXhjZXB0aW9uIFVuc3VwcG9ydGVkT3BlcmF0aW9uRXhjZXB0aW9u
IGlmIHRoaXMgb3BlcmF0aW9uIGlzIHVzZWQKIAkgKiAgICAgICAgICAgIGluIGEgSkxTMiwgSkxT
MyBvciBKTFM0IEFTVAogCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAogCSAqLwotCXB1YmxpYyBM
aXN0IGFubm90YXRpb25zKCkgeworCXB1YmxpYyBMaXN0IG1vZGlmaWVycygpIHsKIAkJLy8gbW9y
ZSBlZmZpY2llbnQgdGhhbiBqdXN0IGNhbGxpbmcgdW5zdXBwb3J0ZWRJbjJfM180KCkgdG8gY2hl
Y2sKLQkJaWYgKHRoaXMuYW5ub3RhdGlvbnMgPT0gbnVsbCkgeworCQlpZiAodGhpcy5tb2RpZmll
cnMgPT0gbnVsbCkgewogCQkJdW5zdXBwb3J0ZWRJbjJfM180KCk7CiAJCX0KLQkJcmV0dXJuIHRo
aXMuYW5ub3RhdGlvbnM7CisJCXJldHVybiB0aGlzLm1vZGlmaWVyczsKIAl9CiAKIAkvKiAob21p
dCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKQEAgLTMyMSw3ICszMjEsNyBAQAogCWludCB0cmVl
U2l6ZSgpIHsKIAkJcmV0dXJuCiAJCQltZW1TaXplKCkKLQkJCSsgKHRoaXMuYW5ub3RhdGlvbnMg
PT0gbnVsbCA/IDAgOiB0aGlzLmFubm90YXRpb25zLmxpc3RTaXplKCkpCisJCQkrICh0aGlzLm1v
ZGlmaWVycyA9PSBudWxsID8gMCA6IHRoaXMubW9kaWZpZXJzLmxpc3RTaXplKCkpCiAJCQkrICh0
aGlzLnR5cGVWYXJpYWJsZU5hbWUgPT0gbnVsbCA/IDAgOiBnZXROYW1lKCkudHJlZVNpemUoKSkK
IAkJCSsgdGhpcy50eXBlQm91bmRzLmxpc3RTaXplKCk7CiAJfQpkaWZmIC0tZ2l0IGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9OYWl2
ZUFTVEZsYXR0ZW5lci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9OYWl2ZUFTVEZsYXR0ZW5lci5qYXZhCmluZGV4IDYxODlh
MWYuLjVhZWJhMTIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vTmFpdmVBU1RGbGF0dGVuZXIuamF2YQorKysgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9t
L05haXZlQVNURmxhdHRlbmVyLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQg
b3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQg
b3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNj
b21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJt
cyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmll
cyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtMTgxNiw3ICsxODE2
LDcgQEAKIAkgKi8KIAlwdWJsaWMgYm9vbGVhbiB2aXNpdChUeXBlUGFyYW1ldGVyIG5vZGUpIHsK
IAkJaWYgKG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA+PSBBU1QuSkxTOCkgewotCQkJdmlzaXRB
bm5vdGF0aW9uc0xpc3Qobm9kZS5hbm5vdGF0aW9ucygpKTsKKwkJCXByaW50TW9kaWZpZXJzKG5v
ZGUubW9kaWZpZXJzKCkpOwogCQl9CiAJCW5vZGUuZ2V0TmFtZSgpLmFjY2VwdCh0aGlzKTsKIAkJ
aWYgKCFub2RlLnR5cGVCb3VuZHMoKS5pc0VtcHR5KCkpIHsKZGlmZiAtLWdpdCBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vcmV3cml0
ZS9BU1RSZXdyaXRlQW5hbHl6ZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9BU1RSZXdyaXRlQW5hbHl6ZXIu
amF2YQppbmRleCA0MTcxZmYzLi5mYTgxZmVhIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL3Jld3JpdGUvQVNUUmV3
cml0ZUFuYWx5emVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9yZXdyaXRlL0FTVFJld3JpdGVBbmFseXplci5qYXZh
CkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAo
YykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAo
YykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMg
cmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAq
IGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGlj
IExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFu
ZCBpcyBhdmFpbGFibGUgYXQKQEAgLTE1MzMsNyArMTUzMyw4IEBACiAJCX0KIAogCQlQcmVmaXgg
Zm9ybWF0dGVyUHJlZml4OwotCQlpZiAocHJvcGVydHkgPT0gU2luZ2xlVmFyaWFibGVEZWNsYXJh
dGlvbi5NT0RJRklFUlMyX1BST1BFUlRZIHx8IGlzQW5ub3RhdGlvbnNQcm9wZXJ0eSkKKwkJaWYg
KHByb3BlcnR5ID09IFNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24uTU9ESUZJRVJTMl9QUk9QRVJU
WSB8fCAKKwkJCQlwcm9wZXJ0eSA9PSBUeXBlUGFyYW1ldGVyLk1PRElGSUVSU19QUk9QRVJUWSB8
fCBpc0Fubm90YXRpb25zUHJvcGVydHkpCiAJCQlmb3JtYXR0ZXJQcmVmaXg9IHRoaXMuZm9ybWF0
dGVyLlBBUkFNX0FOTk9UQVRJT05fU0VQQVJBVElPTjsKIAkJZWxzZQogCQkJZm9ybWF0dGVyUHJl
Zml4PSB0aGlzLmZvcm1hdHRlci5BTk5PVEFUSU9OX1NFUEFSQVRJT047CkBAIC00MjQzLDcgKzQy
NDQsNyBAQAogCQl9CiAJCWludCBwb3M7CiAJCWlmIChub2RlLmdldEFTVCgpLmFwaUxldmVsKCkg
Pj0gQVNULkpMUzgpIHsKLQkJCXBvcyA9IHJld3JpdGVUeXBlQW5ub3RhdGlvbnMobm9kZSwgVHlw
ZVBhcmFtZXRlci5BTk5PVEFUSU9OU19QUk9QRVJUWSwgbm9kZS5nZXRTdGFydFBvc2l0aW9uKCkp
OworCQkJcG9zID0gcmV3cml0ZU1vZGlmaWVyczIobm9kZSwgVHlwZVBhcmFtZXRlci5NT0RJRklF
UlNfUFJPUEVSVFksIG5vZGUuZ2V0U3RhcnRQb3NpdGlvbigpKTsKIAkJfQogCQlwb3M9IHJld3Jp
dGVSZXF1aXJlZE5vZGUobm9kZSwgVHlwZVBhcmFtZXRlci5OQU1FX1BST1BFUlRZKTsKIAkJcmV3
cml0ZU5vZGVMaXN0KG5vZGUsIFR5cGVQYXJhbWV0ZXIuVFlQRV9CT1VORFNfUFJPUEVSVFksIHBv
cywgIiBleHRlbmRzICIsICIgJiAiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCmRpZmYg
LS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvcmUvZG9tL3Jld3JpdGUvQVNUUmV3cml0ZUZsYXR0ZW5lci5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9yZXdyaXRlL0FT
VFJld3JpdGVGbGF0dGVuZXIuamF2YQppbmRleCA4ZDFlYWZmLi44NzAxOWMxIDEwMDY0NAotLS0g
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUv
ZG9tL3Jld3JpdGUvQVNUUmV3cml0ZUZsYXR0ZW5lci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9BU1RS
ZXdyaXRlRmxhdHRlbmVyLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21w
YW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBv
ZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0
aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtMTUyNiw3ICsxNTI2LDcg
QEAKIAkgKi8KIAlwdWJsaWMgYm9vbGVhbiB2aXNpdChUeXBlUGFyYW1ldGVyIG5vZGUpIHsKIAkJ
aWYgKG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA+PSBBU1QuSkxTOCkgewotCQkJdmlzaXRMaXN0
KG5vZGUsIFR5cGVQYXJhbWV0ZXIuQU5OT1RBVElPTlNfUFJPUEVSVFksIFN0cmluZy52YWx1ZU9m
KCcgJyksIFV0aWwuRU1QVFlfU1RSSU5HLCBTdHJpbmcudmFsdWVPZignICcpKTsKKwkJCXZpc2l0
TGlzdChub2RlLCBUeXBlUGFyYW1ldGVyLk1PRElGSUVSU19QUk9QRVJUWSwgU3RyaW5nLnZhbHVl
T2YoJyAnKSwgVXRpbC5FTVBUWV9TVFJJTkcsIFN0cmluZy52YWx1ZU9mKCcgJykpOwogCQl9CiAJ
CWdldENoaWxkTm9kZShub2RlLCBUeXBlUGFyYW1ldGVyLk5BTUVfUFJPUEVSVFkpLmFjY2VwdCh0
aGlzKTsKIAkJdmlzaXRMaXN0KG5vZGUsIFR5cGVQYXJhbWV0ZXIuVFlQRV9CT1VORFNfUFJPUEVS
VFksICIgJiAiLCAiIGV4dGVuZHMgIiwgVXRpbC5FTVBUWV9TVFJJTkcpOyAvLyROT04tTkxTLTEk
IC8vJE5PTi1OTFMtMiQ=
</data>

          </attachment>
      

    </bug>

</bugzilla>