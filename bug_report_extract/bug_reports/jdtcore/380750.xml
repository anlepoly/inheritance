<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>380750</bug_id>
          
          <creation_ts>2012-05-26 08:09:00 -0400</creation_ts>
          <short_desc>[compiler] local incorrectly flagged as uninitialized due to fix for bug 359495</short_desc>
          <delta_ts>2012-12-17 23:51:33 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.8</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.8 RC3</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Stephan Herrmann">stephan.herrmann</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>amj87.iitr</cc>
    
    <cc>daniel_megert</cc>
    
    <cc>jarthana</cc>
    
    <cc>satyam.kandula</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="51834"
          type_id="1"
          status="+"
          setter="amj87.iitr"
    />
    <flag name="review"
          id="51835"
          type_id="1"
          status="+"
          setter="srikanth_sankaran"
    />
    <flag name="review"
          id="51836"
          type_id="1"
          status="+"
          setter="satyam.kandula"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2114714</commentid>
    <comment_count>0</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-05-26 08:09:48 -0400</bug_when>
    <thetext>public class X {
	void foo() {
		String s0;
		for(String s : singleton(s0=&quot;&quot;)) {
			System.out.println(s);
		}
		System.out.println(s0);
	}
	String[] singleton(String s) {
		return new String[] {s};
	}
}

Up until 3.8 M2 this compiles fine, but since the fix for bug 359495 this reports:

1. ERROR in X.java (at line 7)
        System.out.println(s0);
                           ^^
The local variable s0 may not have been initialized

Apparently the change in ForeachStatement is a bit too strong.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2114718</commentid>
    <comment_count>1</comment_count>
      <attachid>216325</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-05-26 08:26:42 -0400</bug_when>
    <thetext>Created attachment 216325
test &amp; fix

This seems to be a better way to fix bug 359495 for ForeachStatements.
It follows the canonical approach from bug 380313 and thus should be easier to maintain, too.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2114720</commentid>
    <comment_count>2</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-05-26 09:20:13 -0400</bug_when>
    <thetext>Patch passes all JDT/Core tests.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2114731</commentid>
    <comment_count>3</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-05-26 11:01:35 -0400</bug_when>
    <thetext>This is definitely bad and I&apos;d prefer this also to go into RC3</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2114848</commentid>
    <comment_count>4</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-05-28 01:59:10 -0400</bug_when>
    <thetext>Looks good.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2115214</commentid>
    <comment_count>5</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-05-29 04:27:08 -0400</bug_when>
    <thetext>The changes are good. +1 for the patch</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2115253</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-05-29 05:51:13 -0400</bug_when>
    <thetext>Patch looks good. Ayush, please release for RC3. TIA.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2115436</commentid>
    <comment_count>7</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-05-29 10:25:44 -0400</bug_when>
    <thetext>Released in master via commit ee3dfd8d808b314a45a2da4f8014d314b68011f8 on behalf of Stephan</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2117357</commentid>
    <comment_count>8</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-06-01 01:02:03 -0400</bug_when>
    <thetext>(In reply to comment #3)
&gt; This is definitely bad and I&apos;d prefer this also to go into RC3

Ayush, I don&apos;t understand why you prefer definitely bad things to go
into RC3.

Verified for 3.8 RC3 using Build id: I20120531-0600</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2195169</commentid>
    <comment_count>9</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-12-17 05:46:49 -0500</bug_when>
    <thetext>The fix for bug 359495 was released also in R3_7_maintenance and R3_6_maintenance_Java7. This being a regression from that fix, I am wondering why this was not back-ported to those streams as well.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2195234</commentid>
    <comment_count>10</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-12-17 08:35:51 -0500</bug_when>
    <thetext>(In reply to comment #9)
&gt; The fix for bug 359495 was released also in R3_7_maintenance and
&gt; R3_6_maintenance_Java7. This being a regression from that fix, I am
&gt; wondering why this was not back-ported to those streams as well.

Okay, I meant to ask if, at any point, the fix was considered for back-porting and we decided against it or did we simply not consider it for back-porting. Anyone involved has any idea?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2195357</commentid>
    <comment_count>11</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-12-17 12:43:05 -0500</bug_when>
    <thetext>(In reply to comment #10)
&gt; (In reply to comment #9)
&gt; &gt; The fix for bug 359495 was released also in R3_7_maintenance and
&gt; &gt; R3_6_maintenance_Java7. This being a regression from that fix, I am
&gt; &gt; wondering why this was not back-ported to those streams as well.
&gt; 
&gt; Okay, I meant to ask if, at any point, the fix was considered for
&gt; back-porting and we decided against it or did we simply not consider it for
&gt; back-porting. Anyone involved has any idea?

I can&apos;t recall any discussion about backporting this, I guess we were all too excited about getting this into 3.8 at that late time.

I wasn&apos;t even aware of a backport of bug 359495 back beyond 3.7.2.

On a related note: what about bug 380313? IIRC that one wasn&apos;t strictly a regression, but became critical because a 1.7 vm cannot fall back to the old verifier, right? Should that bug be backported as well?
I&apos;m asking because all of these bugs seem to be closely related.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2195530</commentid>
    <comment_count>12</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-12-17 23:51:33 -0500</bug_when>
    <thetext>(In reply to comment #11)
&gt; On a related note: what about bug 380313? IIRC that one wasn&apos;t strictly a
&gt; regression, but became critical because a 1.7 vm cannot fall back to the old
&gt; verifier, right? Should that bug be backported as well?
&gt; I&apos;m asking because all of these bugs seem to be closely related.

Thanks, Stephan. I found this in my second iteration of search. I have added this to the list on bug 396723.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>216325</attachid>
            <date>2012-05-26 08:26:00 -0400</date>
            <delta_ts>2012-05-26 08:26:42 -0400</delta_ts>
            <desc>test &amp; fix</desc>
            <filename>bug380750_v1.patch</filename>
            <type>text/plain</type>
            <size>2649</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0Zsb3dBbmFseXNpc1Rl
c3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0Zsb3dBbmFseXNpc1Rlc3Qu
amF2YQppbmRleCA2NTk3NGViLi5lNzI2OTgzIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGls
ZXIvcmVncmVzc2lvbi9GbG93QW5hbHlzaXNUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBp
bGVyL3JlZ3Jlc3Npb24vRmxvd0FuYWx5c2lzVGVzdC5qYXZhCkBAIC0yNDk2LDYgKzI0OTYsMjkg
QEAgcHVibGljIHZvaWQgdGVzdExvY2FsQ2xhc3NJbkluaXRpYWxpemVyMigpIHsKIAkJCSJjb250
aW51ZSBjYW5ub3QgYmUgdXNlZCBvdXRzaWRlIG9mIGEgbG9vcFxuIiArIAogCQkJIi0tLS0tLS0t
LS1cbiIpOwogfQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTM4MDc1MAorLy8gdmVyaWZ5IHRoYXQgczAgaXMgbm90IHJlcG9ydGVkIGFzIHVuaW5pdGlh
bGl6ZWQKK3B1YmxpYyB2b2lkIHRlc3RCdWczODA3NTAoKSB7CisJaWYgKHRoaXMuY29tcGxpYW5j
ZUxldmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfNSkKKwkJcmV0dXJuOworCXRoaXMucnVu
Q29uZm9ybVRlc3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEiLAorCQkJCSJwdWJs
aWMgY2xhc3MgWCB7XG4iICsgCisJCQkJIgl2b2lkIGZvbyhTdHJpbmdbXSBhcmdzKSB7XG4iICsg
CisJCQkJIgkJU3RyaW5nIHMwO1xuIiArIAorCQkJCSIJCWZvcihTdHJpbmcgcyA6IHNpbmdsZXRv
bihzMD1cIlwiKSkge1xuIiArIAorCQkJCSIJCQlTeXN0ZW0ub3V0LnByaW50bG4ocyk7XG4iICsg
CisJCQkJIgkJfVxuIiArIAorCQkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbihzMCk7XG4iICsgCisJ
CQkJIgl9XG4iICsgCisJCQkJIglTdHJpbmdbXSBzaW5nbGV0b24oU3RyaW5nIHMpIHtcbiIgKyAK
KwkJCQkiCQlyZXR1cm4gbmV3IFN0cmluZ1tdIHtzfTtcbiIgKyAKKwkJCQkiCX1cbiIgKyAKKwkJ
CQkifVxuIgorCQkJfSwgCisJCQkiIik7Cit9CiBwdWJsaWMgc3RhdGljIENsYXNzIHRlc3RDbGFz
cygpIHsKIAlyZXR1cm4gRmxvd0FuYWx5c2lzVGVzdC5jbGFzczsKIH0KZGlmZiAtLWdpdCBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9hc3QvRm9yZWFjaFN0YXRlbWVudC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Gb3JlYWNoU3RhdGVt
ZW50LmphdmEKaW5kZXggODVlZTgwOS4uNDQ1NmY2ZSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9G
b3JlYWNoU3RhdGVtZW50LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Gb3JlYWNoU3RhdGVtZW50Lmph
dmEKQEAgLTEyMSw3ICsxMjEsNyBAQCBwdWJsaWMgY2xhc3MgRm9yZWFjaFN0YXRlbWVudCBleHRl
bmRzIFN0YXRlbWVudCB7CiAKIAkJCS8vIGNvZGUgZ2VuZXJhdGlvbiBjYW4gYmUgb3B0aW1pemVk
IHdoZW4gbm8gbmVlZCB0byBjb250aW51ZSBpbiB0aGUgbG9vcAogCQkJZXhpdEJyYW5jaCA9IGZs
b3dJbmZvLnVuY29uZGl0aW9uYWxDb3B5KCkuCi0JCQkJCWFkZE51bGxJbmZvRnJvbShjb25kSW5m
by5pbml0c1doZW5GYWxzZSgpKTsKKwkJCQkJYWRkSW5pdGlhbGl6YXRpb25zRnJvbShjb25kSW5m
by5pbml0c1doZW5GYWxzZSgpKTsKIAkJCS8vIFRPRE8gKG1heGltZSkgbm8gbmVlZCB0byB0ZXN0
IHdoZW4gZmFsc2U6IGNhbiBvcHRpbWl6ZSAoc2FtZSBmb3IgYWN0aW9uIGJlaW5nIHVucmVhY2hh
YmxlIGFib3ZlKQogCQkJaWYgKChhY3Rpb25JbmZvLnRhZ0JpdHMgJiBsb29waW5nQ29udGV4dC5p
bml0c09uQ29udGludWUudGFnQml0cyAmCiAJCQkJCUZsb3dJbmZvLlVOUkVBQ0hBQkxFX09SX0RF
QUQpICE9IDApIHsKQEAgLTE2OSw2ICsxNjksNyBAQCBwdWJsaWMgY2xhc3MgRm9yZWFjaFN0YXRl
bWVudCBleHRlbmRzIFN0YXRlbWVudCB7CiAJCQkJCQkJCQlleGl0QnJhbmNoLAogCQkJCQkJCQkJ
ZmFsc2UsCiAJCQkJCQkJCQl0cnVlIC8qZm9yKDs7KXt9d2hpbGUodHJ1ZSk7IHVucmVhY2hhYmxl
KCk7ICovKTsKKwkJbWVyZ2VkSW5mby5yZXNldEFzc2lnbm1lbnRJbmZvKHRoaXMuZWxlbWVudFZh
cmlhYmxlLmJpbmRpbmcpOwogCQl0aGlzLm1lcmdlZEluaXRTdGF0ZUluZGV4ID0gY3VycmVudFNj
b3BlLm1ldGhvZFNjb3BlKCkucmVjb3JkSW5pdGlhbGl6YXRpb25TdGF0ZXMobWVyZ2VkSW5mbyk7
CiAJCXJldHVybiBtZXJnZWRJbmZvOwogCX0K
</data>

          </attachment>
      

    </bug>

</bugzilla>