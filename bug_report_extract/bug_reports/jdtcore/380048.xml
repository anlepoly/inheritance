<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>380048</bug_id>
          
          <creation_ts>2012-05-19 07:12:00 -0400</creation_ts>
          <short_desc>error popup when navigating to source files</short_desc>
          <delta_ts>2013-07-07 11:13:17 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.8</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X - Carbon (unsup.)</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.3 M2</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Marcel Bruch">marcel.bruch</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>amj87.iitr</cc>
    
    <cc>deepakazad</cc>
    
    <cc>denismitin123</cc>
    
    <cc>Sebastian.Zarnekow</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2110468</commentid>
    <comment_count>0</comment_count>
    <who name="Marcel Bruch">marcel.bruch</who>
    <bug_when>2012-05-19 07:12:45 -0400</bug_when>
    <thetext>I&apos;m yet not able to identify the cause but when navigating to other source files I get an error popup. the stacktrace below is what gets logged. All open files do not contain compile errors.

Build id: I20120515-2200



java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.Signature.appendTypeArgumentSignatures(Signature.java:825)
	at org.eclipse.jdt.core.Signature.appendClassTypeSignature(Signature.java:615)
	at org.eclipse.jdt.core.Signature.appendTypeSignature(Signature.java:911)
	at org.eclipse.jdt.core.Signature.appendTypeSignature(Signature.java:855)
	at org.eclipse.jdt.core.Signature.toCharArray(Signature.java:2637)
	at org.eclipse.jdt.core.Signature.getSignatureSimpleName(Signature.java:1870)
	at org.eclipse.jdt.core.Signature.getSignatureSimpleName(Signature.java:1914)
	at org.eclipse.jdt.internal.core.SourceMapper$LocalVariableElementKey.&lt;init&gt;(SourceMapper.java:96)
	at org.eclipse.jdt.internal.core.SourceMapper.enterAbstractMethod(SourceMapper.java:836)
	at org.eclipse.jdt.internal.core.SourceMapper.enterMethod(SourceMapper.java:774)
	at org.eclipse.jdt.internal.compiler.SourceElementNotifier.notifySourceElementRequestor(SourceElementNotifier.java:368)
	at org.eclipse.jdt.internal.compiler.SourceElementNotifier.notifySourceElementRequestor(SourceElementNotifier.java:693)
	at org.eclipse.jdt.internal.compiler.SourceElementNotifier.notifySourceElementRequestor(SourceElementNotifier.java:455)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(SourceElementParser.java:934)
	at org.eclipse.jdt.internal.core.SourceMapper.mapSource(SourceMapper.java:1404)
	at org.eclipse.jdt.internal.core.SourceMapper.mapSource(SourceMapper.java:1339)
	at org.eclipse.jdt.internal.core.ClassFile.mapSource(ClassFile.java:659)
	at org.eclipse.jdt.internal.core.ClassFile.openBuffer(ClassFile.java:635)
	at org.eclipse.jdt.internal.core.Openable.getBuffer(Openable.java:288)
	at org.eclipse.jdt.internal.core.ClassFile.getBuffer(ClassFile.java:359)
	at org.eclipse.jdt.internal.core.ClassFile.getSourceRange(ClassFile.java:523)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.getEditorID(EditorUtility.java:421)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:179)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:249)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:228)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaElementHyperlink.open(JavaElementHyperlink.java:77)
	at org.eclipse.jface.text.hyperlink.HyperlinkManager.mouseUp(HyperlinkManager.java:429)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:220)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4130)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1458)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1481)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1466)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1271)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3976)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3615)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1021)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:915)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:86)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:585)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:540)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:353)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:629)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2110470</commentid>
    <comment_count>1</comment_count>
    <who name="Marcel Bruch">marcel.bruch</who>
    <bug_when>2012-05-19 07:15:10 -0400</bug_when>
    <thetext>Another stacktrace with other locations but same problem:

java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.Signature.appendTypeArgumentSignatures(Signature.java:825)
	at org.eclipse.jdt.core.Signature.appendClassTypeSignature(Signature.java:615)
	at org.eclipse.jdt.core.Signature.appendTypeSignature(Signature.java:911)
	at org.eclipse.jdt.core.Signature.appendTypeSignature(Signature.java:855)
	at org.eclipse.jdt.core.Signature.toCharArray(Signature.java:2637)
	at org.eclipse.jdt.core.Signature.getSignatureSimpleName(Signature.java:1870)
	at org.eclipse.jdt.core.Signature.getSignatureSimpleName(Signature.java:1914)
	at org.eclipse.jdt.internal.core.SourceMapper$LocalVariableElementKey.&lt;init&gt;(SourceMapper.java:96)
	at org.eclipse.jdt.internal.core.SourceMapper.enterAbstractMethod(SourceMapper.java:836)
	at org.eclipse.jdt.internal.core.SourceMapper.enterMethod(SourceMapper.java:774)
	at org.eclipse.jdt.internal.compiler.SourceElementNotifier.notifySourceElementRequestor(SourceElementNotifier.java:368)
	at org.eclipse.jdt.internal.compiler.SourceElementNotifier.notifySourceElementRequestor(SourceElementNotifier.java:693)
	at org.eclipse.jdt.internal.compiler.SourceElementNotifier.notifySourceElementRequestor(SourceElementNotifier.java:455)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(SourceElementParser.java:934)
	at org.eclipse.jdt.internal.core.SourceMapper.mapSource(SourceMapper.java:1404)
	at org.eclipse.jdt.internal.core.SourceMapper.mapSource(SourceMapper.java:1339)
	at org.eclipse.jdt.internal.core.ClassFile.mapSource(ClassFile.java:659)
	at org.eclipse.jdt.internal.core.ClassFile.openBuffer(ClassFile.java:635)
	at org.eclipse.jdt.internal.core.Openable.getBuffer(Openable.java:288)
	at org.eclipse.jdt.internal.core.ClassFile.getBuffer(ClassFile.java:359)
	at org.eclipse.jdt.internal.core.BinaryMember.getCategories(BinaryMember.java:98)
	at org.eclipse.jdt.internal.ui.viewsupport.JavaElementLabelComposer.appendCategoryLabel(JavaElementLabelComposer.java:630)
	at org.eclipse.jdt.internal.ui.viewsupport.JavaElementLabelComposer.appendTypeLabel(JavaElementLabelComposer.java:1025)
	at org.eclipse.jdt.internal.ui.viewsupport.JavaElementLabelComposer.appendElementLabel(JavaElementLabelComposer.java:285)
	at org.eclipse.jdt.ui.JavaElementLabels.getElementLabel(JavaElementLabels.java:531)
	at org.eclipse.jdt.ui.JavaElementLabels.getStyledElementLabel(JavaElementLabels.java:506)
	at org.eclipse.jdt.ui.JavaElementLabels.getStyledTextLabel(JavaElementLabels.java:434)
	at org.eclipse.jdt.internal.ui.viewsupport.JavaUILabelProvider.getStyledText(JavaUILabelProvider.java:178)
	at org.eclipse.jface.viewers.DelegatingStyledCellLabelProvider.getStyledText(DelegatingStyledCellLabelProvider.java:195)
	at org.eclipse.jface.viewers.DecoratingStyledCellLabelProvider.getStyledText(DecoratingStyledCellLabelProvider.java:192)
	at org.eclipse.jface.viewers.DelegatingStyledCellLabelProvider.update(DelegatingStyledCellLabelProvider.java:103)
	at org.eclipse.jface.viewers.DecoratingStyledCellLabelProvider.update(DecoratingStyledCellLabelProvider.java:134)
	at org.eclipse.jface.viewers.ViewerColumn.refresh(ViewerColumn.java:152)
	at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:953)
	at org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run(AbstractTreeViewer.java:113)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:49)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:175)
	at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:1033)
	at org.eclipse.jface.viewers.StructuredViewer$UpdateItemSafeRunnable.run(StructuredViewer.java:485)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:49)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:175)
	at org.eclipse.jface.viewers.StructuredViewer.updateItem(StructuredViewer.java:2167)
	at org.eclipse.jface.viewers.StructuredViewer.internalUpdate(StructuredViewer.java:2150)
	at org.eclipse.jface.viewers.StructuredViewer.update(StructuredViewer.java:2089)
	at org.eclipse.jface.viewers.ColumnViewer.update(ColumnViewer.java:554)
	at org.eclipse.jface.viewers.StructuredViewer.update(StructuredViewer.java:2033)
	at org.eclipse.jface.viewers.StructuredViewer.handleLabelProviderChanged(StructuredViewer.java:1191)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage$JavaOutlineViewer.handleLabelProviderChanged(JavaOutlinePage.java:454)
	at org.eclipse.jface.viewers.ContentViewer$1.labelProviderChanged(ContentViewer.java:97)
	at org.eclipse.jface.viewers.BaseLabelProvider$1.run(BaseLabelProvider.java:74)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:49)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:175)
	at org.eclipse.jface.viewers.BaseLabelProvider.fireLabelProviderChanged(BaseLabelProvider.java:72)
	at org.eclipse.jface.viewers.DecoratingStyledCellLabelProvider$1.labelProviderChanged(DecoratingStyledCellLabelProvider.java:77)
	at org.eclipse.ui.internal.decorators.DecoratorManager$1.run(DecoratorManager.java:430)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.DecoratorManager.fireListener(DecoratorManager.java:428)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$3.runInUIThread(DecorationScheduler.java:530)
	at org.eclipse.ui.progress.UIJob$1.run(UIJob.java:95)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3940)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3617)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1021)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:915)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:86)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:585)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:540)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:353)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:629)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2110481</commentid>
    <comment_count>2</comment_count>
    <who name="Deepak Azad">deepakazad</who>
    <bug_when>2012-05-19 07:31:28 -0400</bug_when>
    <thetext>(In reply to comment #0)
&gt; I&apos;m yet not able to identify the cause but when navigating to other source
&gt; files I get an error popup. the stacktrace below is what gets logged. All open
&gt; files do not contain compile errors.

Stacktrace indicates that you did a Ctrl+Click. Can you also include the source  file and the location where you did that?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2110482</commentid>
    <comment_count>3</comment_count>
    <who name="Marcel Bruch">marcel.bruch</who>
    <bug_when>2012-05-19 07:44:41 -0400</bug_when>
    <thetext>It seems that whatever method of KMeansCluster I *select*, e.g. in outline view, it raises this exception.

e.g. org.apache.mahout.clustering.kmeans.KMeansClusterer.clusterPoints(Iterable&lt;Vector&gt;, List&lt;Cluster&gt;, DistanceMeasure, int, double))


The class is contained in a binary plug-in project. Should I attach this project?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2110483</commentid>
    <comment_count>4</comment_count>
    <who name="Deepak Azad">deepakazad</who>
    <bug_when>2012-05-19 08:00:41 -0400</bug_when>
    <thetext>(In reply to comment #3)
&gt; The class is contained in a binary plug-in project. Should I attach this
&gt; project?
That should also be good enough.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2110486</commentid>
    <comment_count>5</comment_count>
    <who name="Marcel Bruch">marcel.bruch</who>
    <bug_when>2012-05-19 08:13:47 -0400</bug_when>
    <thetext>The mahout project is a bit large (33mb). I made the project temporarily available here: https://www.dropbox.com/s/o1sdvatzz5y3w5n/org.apache.mahout.zip</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2110495</commentid>
    <comment_count>6</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-05-19 10:04:48 -0400</bug_when>
    <thetext>Thanks for the example, Marcel.

I can reproduce.

I see it fail even when just opening class KMeansCluster in an editor.
In my case it falls over a scrambled type signature of method
  public void emitPointToNearestCluster(org.apache.mahout.math.Vector point, Iterable clusters, org.apache.hadoop.mapreduce.Mapper$Context context)

The third parameter has this type signature:
  Lorg/apache/hadoop/mapreduce/Mapper&lt;**Lorg/apache/hadoop/io/Text;Lorg/apache/mahout/clustering/ClusterObservations;&gt;.Context;

but the BinaryMethod ends up with this type signature:
  QMapper&lt;**QText;QContext;
i.e., we are missing this section:
  Lorg/apache/mahout/clustering/ClusterObservations;&gt;.

Upon failing to find the terminating &apos;&gt;&apos; we read over the end of the singature.

I&apos;m investigating what makes us drop the mentioned section.

It seems to be related to the &apos;.&apos;, like we would interpret this
  Lorg/apache/mahout/clustering/ClusterObservations;&gt;.Context;
as a qualified name whose last segment in &quot;Context&quot;, without noticing
the intermediate &apos;&gt;&apos;!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2110502</commentid>
    <comment_count>7</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-05-19 10:50:31 -0400</bug_when>
    <thetext>This happens inside org.eclipse.jdt.internal.core.SourceMapper.convertTypeNamesToSigs(char[][]) , which converts 
Mapper&lt;?,?,Text,ClusterObservations&gt;.Context
to an invalid signature:
QMapper&lt;**QText;QContext;

This is because convertTypeNamesToSigs creates unqualified signatures, converting, eofr example, QX&lt;QMap.Entry&gt; to QX&lt;QEntry&gt; by recording the position of the last &apos;Q&apos; and the next obtained dot. However, in the given scenario, the last recorded Q belongs to ClusterObservations but the &apos;.&apos; belongs to Mapper =&gt; The bug is that &apos;&gt;&apos; is not handled at all.

This, however is an old standing bug.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2110503</commentid>
    <comment_count>8</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-05-19 10:51:00 -0400</bug_when>
    <thetext>(In reply to comment #6)
&gt; Thanks for the example, Marcel.
&gt; 
&gt; I can reproduce.
Oops, mid-air collision! :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2110504</commentid>
    <comment_count>9</comment_count>
      <attachid>215901</attachid>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-05-19 10:52:07 -0400</bug_when>
    <thetext>Created attachment 215901
patch under test</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2110506</commentid>
    <comment_count>10</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-05-19 11:05:56 -0400</bug_when>
    <thetext>(In reply to comment #8)
&gt; (In reply to comment #6)
&gt; &gt; Thanks for the example, Marcel.
&gt; &gt; 
&gt; &gt; I can reproduce.
&gt; Oops, mid-air collision! :)

Now I had the collision, while writing pretty much the same analysis.
You beat me to it :)
So we seem to agree.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2110508</commentid>
    <comment_count>11</comment_count>
    <who name="Sebastian Zarnekow">Sebastian.Zarnekow</who>
    <bug_when>2012-05-19 11:14:37 -0400</bug_when>
    <thetext>I&apos;m not too much into the code in SourceMapper but the suggested patch seems to fail for nested qualified inner types, e.g.

Mapper&lt;?,?,Text,Mapper&lt;?,?,Text,ClusterObservations&gt;.Context&gt;.Context

produces

QMapper&lt;**QText;QContextQContext;

whereas I&apos;d expect

QContext;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2110509</commentid>
    <comment_count>12</comment_count>
    <who name="Sebastian Zarnekow">Sebastian.Zarnekow</who>
    <bug_when>2012-05-19 11:18:11 -0400</bug_when>
    <thetext>Iterable&lt;Mapper&lt;?,?,Text,ClusterObservations&gt;.Context&gt;

will yield 

QIterable&lt;QContextQContext;&gt;;

which does not look right either.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2110510</commentid>
    <comment_count>13</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-05-19 11:19:25 -0400</bug_when>
    <thetext>(In reply to comment #11)
&gt; I&apos;m not too much into the code in SourceMapper but the suggested patch seems to
&gt; fail for nested qualified inner types, e.g.

exactly, we need to somehow count nesting levels</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2110519</commentid>
    <comment_count>14</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-05-19 12:23:01 -0400</bug_when>
    <thetext>(In reply to comment #12)
&gt; Iterable&lt;Mapper&lt;?,?,Text,ClusterObservations&gt;.Context&gt;
&gt; 
&gt; will yield 
&gt; 
&gt; QIterable&lt;QContextQContext;&gt;;
&gt; 
&gt; which does not look right either.
Yeah, mine was a &quot;weekend patch&quot; :)

Anyway, I dont think this will make it to Juno. Srikanth, I&apos;ll target this for 4.3 , unless you think otherwise.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2110570</commentid>
    <comment_count>15</comment_count>
      <attachid>215908</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-05-19 19:26:52 -0400</bug_when>
    <thetext>Created attachment 215908
alternative patch

Here&apos;s a somewhat more refined solution (incl. a little main for easy
testing / playing).

For some more or less random examples here&apos;s what it does:

java.lang.String
-&gt;	QString;
apache.Mapper&lt;?,?,ap.Text,ap.ClusterObservations&gt;.Context
-&gt;	QContext;
apache.Mapper&lt;?,?,ap.Text,ap.ClusterObservations&gt;.Context&lt;java.lang.String&gt;
-&gt;	QContext&lt;QString;&gt;;
app.Mapper&lt;?,?,ap.Text,ap2.ClusterObservations&gt;
-&gt;	QMapper&lt;**QText;QClusterObservations;&gt;;
Context&lt;String&gt;
-&gt;	QContext&lt;QString;&gt;;
Mapper&lt;?,?,Text,ClusterObservations&gt;.Context&lt;String&gt;
-&gt;	QContext&lt;QString;&gt;;
Iterable&lt;Mapper&lt;?,?,Text,ClusterObservations&gt;.Context&gt;
-&gt;	QIterable&lt;QContext;&gt;;
java.util.Iterable&lt;Mapper&lt;?,?,Text,ClusterObservations&gt;.Context&gt;
-&gt;	QIterable&lt;QContext;&gt;;
Mapper&lt;?,?,Text,Mapper&lt;?,?,Text,ClusterObservations&gt;.Context&gt;.Context
-&gt;	QContext;


While this bug doesn&apos;t seem to be a regression it has bad consequences
for someone trying to work with specific (legal!) class files.

The patch uses a small lookahead function to find the matching &apos;&gt;&apos;
for a given &apos;&lt;&apos;. I noticed that methods in SourceMapper and Signature
tend to process strings in a single loop. I tried another solution first,
which indeed avoids the lookahead, but that solution is significantly
more involved.

My patch passes all of JDT/Core&apos;s tests. 
New unit tests still need to be written.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2110715</commentid>
    <comment_count>16</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-05-21 03:03:27 -0400</bug_when>
    <thetext>Stephan, thanks for the patch. Assigning it to you so that you can release it in 3.9 / 4.3 M1</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2153281</commentid>
    <comment_count>17</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-08-28 10:52:12 -0400</bug_when>
    <thetext>Released for 4.3 M2 via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=7df383b00e8453025afa0d0c65533607ef343fe1

White box tests have been added to class SignatureTests (I needed to make one internal method public for access by unit tests, but I think this is OK since the class itself is internal too, shouldn&apos;t be accessed by clients anyway).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2161130</commentid>
    <comment_count>18</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-09-18 04:57:04 -0400</bug_when>
    <thetext>Verified for 4.3 M2 via code inspection</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2168008</commentid>
    <comment_count>19</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-10-04 12:47:38 -0400</bug_when>
    <thetext>*** Bug 391030 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>215901</attachid>
            <date>2012-05-19 10:52:00 -0400</date>
            <delta_ts>2012-05-19 10:52:07 -0400</delta_ts>
            <desc>patch under test</desc>
            <filename>test.patch</filename>
            <type>text/plain</type>
            <size>1095</size>
            <attacher name="Ayushman Jain">amj87.iitr</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb3JlL1NvdXJjZU1hcHBlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9k
ZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvU291cmNlTWFwcGVyLmphdmEKaW5kZXgg
ZjM2YmU2OC4uNDRjMzE3ZSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvU291cmNlTWFwcGVyLmphdmEKKysrIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvU291
cmNlTWFwcGVyLmphdmEKQEAgLTM5MCw2ICszOTAsNyBAQAogCQkJaW50IHN0YXJ0ID0gMDsKIAkJ
CWludCBkb3QgPSAtMTsKIAkJCWludCBsZW5ndGggPSB0eXBlU2lnLmxlbmd0aDsKKwkJCWludCB0
aGlzR2VuZXJpY1N0YXJ0QmVsb25nc1RvID0gLTE7CiAJCQlmb3IgKGludCBqID0gMDsgaiA8IGxl
bmd0aDsgaisrKSB7CiAJCQkJc3dpdGNoICh0eXBlU2lnW2pdKSB7CiAJCQkJCWNhc2UgU2lnbmF0
dXJlLkNfVU5SRVNPTFZFRDoKQEAgLTQwMSw2ICs0MDIsOCBAQAogCQkJCQkJZG90ID0gajsKIAkJ
CQkJCWJyZWFrOwogCQkJCQljYXNlIFNpZ25hdHVyZS5DX0dFTkVSSUNfU1RBUlQ6CisJCQkJCQl0
aGlzR2VuZXJpY1N0YXJ0QmVsb25nc1RvID0gc3RhcnQ7CisJCQkJCQkvLyRGQUxMLVRIUk9VR0gk
CiAJCQkJCWNhc2UgU2lnbmF0dXJlLkNfTkFNRV9FTkQ6CiAJCQkJCQlpZiAoZG90ID4gc3RhcnQp
IHsKIAkJCQkJCQlpZiAoc2ltcGxlVHlwZVNpZyA9PSBudWxsKQpAQCAtNDEwLDYgKzQxMyw4IEBA
CiAJCQkJCQkJc3RhcnQgPSBqOwogCQkJCQkJfQogCQkJCQkJYnJlYWs7CisJCQkJCWNhc2UgU2ln
bmF0dXJlLkNfR0VORVJJQ19FTkQ6CisJCQkJCQlzdGFydCA9IHRoaXNHZW5lcmljU3RhcnRCZWxv
bmdzVG87IC8vIHJlc2V0IHRoZSBzdGFydCBwb3NpdGlvbiwgZXZlcnl0aGluZyBiZXR3ZWVuIDwg
YW5kID4gaGFzIGJlZW4gY29uc3VtZWQKIAkJCQl9CiAJCQl9CiAJCQlpZiAoc2ltcGxlVHlwZVNp
ZyA9PSBudWxsKSB7
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>215908</attachid>
            <date>2012-05-19 19:26:00 -0400</date>
            <delta_ts>2012-05-19 19:26:52 -0400</delta_ts>
            <desc>alternative patch</desc>
            <filename>Bug380048_v02.patch</filename>
            <type>text/plain</type>
            <size>2610</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb3JlL1NvdXJjZU1hcHBlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9k
ZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvU291cmNlTWFwcGVyLmphdmEKaW5kZXgg
ZjM2YmU2OC4uY2M2MzgzNyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvU291cmNlTWFwcGVyLmphdmEKKysrIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvU291
cmNlTWFwcGVyLmphdmEKQEAgLTQwMSw2ICs0MDEsMTYgQEAKIAkJCQkJCWRvdCA9IGo7CiAJCQkJ
CQlicmVhazsKIAkJCQkJY2FzZSBTaWduYXR1cmUuQ19HRU5FUklDX1NUQVJUOgorCQkJCQkJaW50
IG1hdGNoaW5nRW5kID0gZmluZE1hdGNoaW5nR2VuZXJpY0VuZCh0eXBlU2lnLCBqKzEpOworCQkJ
CQkJaWYgKG1hdGNoaW5nRW5kID4gMCAmJiBtYXRjaGluZ0VuZCsxIDwgbGVuZ3RoICYmIHR5cGVT
aWdbbWF0Y2hpbmdFbmQrMV0gPT0gU2lnbmF0dXJlLkNfRE9UKSB7CisJCQkJCQkJLy8gZm91bmQg
SGVhZDxQYXJhbT4uVGFpbCAtPiBkaXNjYXJkIGV2ZXJ5dGhpbmcgZXhjZXB0IFRhaWwKKwkJCQkJ
CQlpZiAoc2ltcGxlVHlwZVNpZyA9PSBudWxsKQorCQkJCQkJCQlzaW1wbGVUeXBlU2lnID0gbmV3
IFN0cmluZ0J1ZmZlcigpLmFwcGVuZCh0eXBlU2lnLCAwLCBzdGFydCk7CisJCQkJCQkJc2ltcGxl
VHlwZVNpZy5hcHBlbmQoU2lnbmF0dXJlLkNfVU5SRVNPTFZFRCk7CisJCQkJCQkJc3RhcnQgPSBq
ID0gbWF0Y2hpbmdFbmQrMjsKKwkJCQkJCQlicmVhazsKKwkJCQkJCX0KKwkJCQkJCS8vJEZBTEwt
VEhST1VHSCQKIAkJCQkJY2FzZSBTaWduYXR1cmUuQ19OQU1FX0VORDoKIAkJCQkJCWlmIChkb3Qg
PiBzdGFydCkgewogCQkJCQkJCWlmIChzaW1wbGVUeXBlU2lnID09IG51bGwpCkBAIC00MjIsNiAr
NDMyLDYyIEBACiAJCXJldHVybiB0eXBlU2lnczsKIAl9CiAKKwlpbnQgZmluZE1hdGNoaW5nR2Vu
ZXJpY0VuZChjaGFyW10gc2lnLCBpbnQgc3RhcnQpIHsKKwkJaW50IG5lc3RpbmcgPSAwOworCQlp
bnQgbGVuZ3RoID0gc2lnLmxlbmd0aDsKKwkJZm9yIChpbnQgaT1zdGFydDsgaSA8IGxlbmd0aDsg
aSsrKSB7CisJCQlzd2l0Y2ggKHNpZ1tpXSkgeworCQkJCWNhc2UgU2lnbmF0dXJlLkNfR0VORVJJ
Q19TVEFSVDoKKwkJCQkJbmVzdGluZysrOworCQkJCQlicmVhazsKKwkJCQljYXNlIFNpZ25hdHVy
ZS5DX0dFTkVSSUNfRU5EOgorCQkJCQlpZiAobmVzdGluZyA9PSAwKQorCQkJCQkJcmV0dXJuIGk7
CisJCQkJCW5lc3RpbmctLTsKKwkJCQkJYnJlYWs7CisJCQl9CisJCX0KKwkJcmV0dXJuIC0xOwor
CX0KKworCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHsKKwkJU291cmNl
TWFwcGVyIG0gPSBuZXcgU291cmNlTWFwcGVyKCk7CisJCWNoYXJbXVtdIHR5cGVOYW1lcyA9IG5l
dyBjaGFyW11bXSB7CisJCQkiamF2YS5sYW5nLlN0cmluZyIudG9DaGFyQXJyYXkoKSwKKwkJCQor
CQkJKCJhcGFjaGUuTWFwcGVyIiArIAorCQkJIjw/LD8sYXAuVGV4dCxhcC5DbHVzdGVyT2JzZXJ2
YXRpb25zPiIgKyAKKwkJCSIuQ29udGV4dCIKKwkJCSkudG9DaGFyQXJyYXkoKSwKKworCQkJKCJh
cGFjaGUuTWFwcGVyIiArIAorCQkJIjw/LD8sYXAuVGV4dCxhcC5DbHVzdGVyT2JzZXJ2YXRpb25z
PiIgKyAKKwkJCSIuQ29udGV4dDxqYXZhLmxhbmcuU3RyaW5nPiIKKwkJCSkudG9DaGFyQXJyYXko
KSwKKwkJCQorCQkJKCJhcHAuTWFwcGVyIiArIAorCQkJIjw/LD8sYXAuVGV4dCxhcDIuQ2x1c3Rl
ck9ic2VydmF0aW9ucz4iCisJCQkpLnRvQ2hhckFycmF5KCksCisJCQkKKwkJCSJDb250ZXh0PFN0
cmluZz4iLnRvQ2hhckFycmF5KCksCisKKwkJCSgiTWFwcGVyIiArIAorCQkJIjw/LD8sVGV4dCxD
bHVzdGVyT2JzZXJ2YXRpb25zPiIgKyAKKwkJCSIuQ29udGV4dCIKKwkJCSsiPFN0cmluZz4iCisJ
CQkpLnRvQ2hhckFycmF5KCksCisJCQkKKwkJCSJJdGVyYWJsZTxNYXBwZXI8Pyw/LFRleHQsQ2x1
c3Rlck9ic2VydmF0aW9ucz4uQ29udGV4dD4iLnRvQ2hhckFycmF5KCksCisJCQkKKwkJCSJqYXZh
LnV0aWwuSXRlcmFibGU8TWFwcGVyPD8sPyxUZXh0LENsdXN0ZXJPYnNlcnZhdGlvbnM+LkNvbnRl
eHQ+Ii50b0NoYXJBcnJheSgpLAorCisJCQkiTWFwcGVyPD8sPyxUZXh0LE1hcHBlcjw/LD8sVGV4
dCxDbHVzdGVyT2JzZXJ2YXRpb25zPi5Db250ZXh0Pi5Db250ZXh0Ii50b0NoYXJBcnJheSgpCisJ
CX07CisJCVN0cmluZ1tdIHNzID0gbS5jb252ZXJ0VHlwZU5hbWVzVG9TaWdzKHR5cGVOYW1lcyk7
CisJCWZvciAoaW50IGk9MDsgaTxzcy5sZW5ndGg7IGkrKykKKwkJCVN5c3RlbS5vdXQucHJpbnRs
bihuZXcgU3RyaW5nKHR5cGVOYW1lc1tpXSkrIlxuLT5cdCIrc3NbaV0pOworCX0KKwogCXByaXZh
dGUgc3luY2hyb25pemVkIHZvaWQgY29tcHV0ZUFsbFJvb3RQYXRocyhJVHlwZSB0eXBlKSB7CiAJ
CWlmICh0aGlzLmFyZVJvb3RQYXRoc0NvbXB1dGVkKSB7CiAJCQlyZXR1cm47
</data>

          </attachment>
      

    </bug>

</bugzilla>