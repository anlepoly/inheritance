<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>454182</bug_id>
          
          <creation_ts>2014-12-04 16:32:00 -0500</creation_ts>
          <short_desc>Internal compiler error when using 1.8 compliance for simple project</short_desc>
          <delta_ts>2015-02-01 17:11:31 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4.1</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.5 M5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="mark r">org.eclipse</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>jarthana</cc>
    
    <cc>siegmaralber</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2492971</commentid>
    <comment_count>0</comment_count>
      <attachid>249180</attachid>
    <who name="mark r">org.eclipse</who>
    <bug_when>2014-12-04 16:32:04 -0500</bug_when>
    <thetext>Created attachment 249180
A zip of the project

Hello.

I decided to try out the new Java 8 features with a simple project, but found that Eclipse raised internal compiler errors for code that doesn&apos;t actually use any Java 8 features. Unfortunately, I&apos;ve not been able to isolate the problem to a simpler example, but the current project as it stands is only a few hundred lines (of mostly comments!), so that may be isolated enough.

The error occurs in the file VThumbnailTask.java. The file currently has an error, because the compute() method doesn&apos;t return a value, but even if this error is fixed, the problem persists. Essentially, the IDE says:

Internal compiler error: java.lang.NullPointerException at org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.methods(BinaryTypeBinding.java:1357)

... and refuses to build any further.

The same project compiled as 1.7 builds without issue.

To reproduce: Import the project into Eclipse as a Maven project (this probably requires the m2e plugin). The IDE will raise an error immediately as it tries to build the project.

Versions:

Linux viper 3.17.4-1-ARCH #1 SMP PREEMPT Fri Nov 21 21:14:42 CET 2014 x86_64 GNU/Linux.

openjdk version &quot;1.8.0_25&quot;
OpenJDK Runtime Environment (build 1.8.0_25-b18)
OpenJDK 64-Bit Server VM (build 25.25-b02, mixed mode)

Version: Luna Service Release 1 (4.4.1)
Build id: 20140925-1800

The actual eclipse package is just the one taken from eclipse.org.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2493016</commentid>
    <comment_count>1</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-12-05 00:22:04 -0500</bug_when>
    <thetext>I can&apos;t reproduce this on master or 4.4.1.

So, you don&apos;t ha1ve any other bundles installed other than m2e, right? Do you get the error even when you do a clean build or edit VThumbnailTask?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2493150</commentid>
    <comment_count>2</comment_count>
    <who name="mark r">org.eclipse</who>
    <bug_when>2014-12-05 06:00:36 -0500</bug_when>
    <thetext>Hi.

The &quot;currently installed software&quot; panel shows the following:

Eclipse IDE for Eclipse Committers  4.4.1.20140925-1820 epp.package.standard
m2e - Maven Integration for Eclipse (includes Incubating components)  1.5.0.20140606-0033 org.eclipse.m2e.feature.feature.group Eclipse.org - m2e
m2e connector for mavenarchiver pom properties  0.16.0.201401211452-signed-20140310144306 org.sonatype.m2e.mavenarchiver.feature.feature.group  Sonatype, Inc.

I only remember installing m2e, so presumably the Eclipse IDE package is already there on install?

Cleaning and/or editing VThumbnailTask makes no difference, no.

I&apos;ll try a completely clean install in a VM and see if that provokes the same error.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2493154</commentid>
    <comment_count>3</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-12-05 06:07:39 -0500</bug_when>
    <thetext>Mark, if possible, can you also try with a recent Mars build? Thanks!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2493271</commentid>
    <comment_count>4</comment_count>
    <who name="mark r">org.eclipse</who>
    <bug_when>2014-12-05 10:29:21 -0500</bug_when>
    <thetext>Hello.

I think I&apos;ve narrowed it down: When I was unable to reproduce the problem in the clean VM install, it suddenly occurred to me that I was using non-standard compiler settings, so I switched over each setting one at a time in the hope that the error would reappear. It did!

Basically, I&apos;m using my own null annotations as there seem to be a lot of competing standards and no clear winner. If I &quot;Enable annotation-based null analysis&quot; and then set com.io7m.jnull.NonNullByDefault as the NonNullByDefault annotation, I receive the error immediately. If I use the standard eclipse annotation, I don&apos;t.

The definition of this annotation is:

http://fossil.io7m.com/repo.cgi/io7m-jnull/raw/io7m-jnull-core/src/main/java/com/io7m/jnull/NonNullByDefault.java?name=b82c34b952e132ac6c38e0fecfd994d57d9bce30

... which is the version that&apos;s currently deployed to Maven Central (1.0.0).

I&apos;ve not tried it on a Mars build yet, I&apos;ll do that next.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2493288</commentid>
    <comment_count>5</comment_count>
    <who name="mark r">org.eclipse</who>
    <bug_when>2014-12-05 11:04:09 -0500</bug_when>
    <thetext>The same issue is still present in:

Version: Mars Milestone 3 (4.5.0M3)
Build id: 20141113-0320</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2493434</commentid>
    <comment_count>6</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-12-05 17:41:10 -0500</bug_when>
    <thetext>(In reply to mark r from comment #4)
&gt; The definition of this annotation is:
&gt; 
&gt; http://fossil.io7m.com/repo.cgi/io7m-jnull/raw/io7m-jnull-core/src/main/java/
&gt; com/io7m/jnull/NonNullByDefault.
&gt; java?name=b82c34b952e132ac6c38e0fecfd994d57d9bce30

Thanks for the reference, this could well explain.

Basically, the jdt annotations have some more detail inside the @NNBD annotation, which is needed for *canceling* defaults from outer scopes. In v2.0 of the annotation bundle (which you should use at compliance 1.8) the attribute is actually a bitset of locations where the default should have effect, leveraging the extended capabilities of Java 8 type annotations.

I will have to check
- if we are silently assuming to find &quot;our&quot; @NNBD
- if we can work with &quot;foreign&quot; annotations

At 1.7- ignoring the missing attribute is easier than at 1.8, let&apos;s see ...

In case your&apos;re wondering about the difference 1.7- vs. 1.8, have you seen this:
  http://help.eclipse.org/topic/org.eclipse.jdt.doc.user/tasks/task-using_null_type_annotations.htm
?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2494615</commentid>
    <comment_count>7</comment_count>
    <who name="mark r">org.eclipse</who>
    <bug_when>2014-12-09 10:37:21 -0500</bug_when>
    <thetext>I&apos;d not seen that page before.

Having read it, I&apos;m sort of left wondering how I might update my annotations to have enough semantic information to be usable for Java 8, but to remain compatible with Java 6 projects (I have a lot of code that&apos;ll need to stay Java 6 compatible for the forseeable future).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2494835</commentid>
    <comment_count>8</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-12-09 15:16:46 -0500</bug_when>
    <thetext>(In reply to comment #7)
&gt; I&apos;d not seen that page before.
&gt; 
&gt; Having read it, I&apos;m sort of left wondering how I might update my annotations to
&gt; have enough semantic information to be usable for Java 8, but to remain
&gt; compatible with Java 6 projects (I have a lot of code that&apos;ll need to stay Java
&gt; 6 compatible for the forseeable future).

If you&apos;re tied to Java 6 you cannot use type annotations. Period. But then you shouldn&apos;t set the compliance to 1.8 in the first place :)

Client projects using Java 8 which compile against your classes should then stick to SE 5 annotations, too, because mixing old and new annotations is likely to create quite some headache, I&apos;m afraid.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2494855</commentid>
    <comment_count>9</comment_count>
    <who name="mark r">org.eclipse</who>
    <bug_when>2014-12-09 16:15:55 -0500</bug_when>
    <thetext>Sorry, I should clarify.

I&apos;d like to use Java 8 for new projects, but I have a ton of library code that I&apos;d like to keep Java 6 compatible. I&apos;d like to use the same annotations for both so that I get proper null analysis in Eclipse. I&apos;d likely not use the annotations in a manner that wasn&apos;t possible prior to 8 (such as the example with the array of non-null elements). It&apos;s basically just for requiring that constructor and method parameters are not null, that class fields are not null, and that method return values are not null. I use @NonNullByDefault for all packages, and essentially never use null anywhere.

It&apos;d be pretty obnoxious to arbitrarily make all of the old library code require Java 8 when all of it runs nicely on 6, just for the sake of newly incompatible annotations.

If it can&apos;t be done, it can&apos;t be done. In that case, it&apos;d obviously be nice if Eclipse was capable of using the old annotations for analysis!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2494866</commentid>
    <comment_count>10</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-12-09 16:47:15 -0500</bug_when>
    <thetext>(In reply to mark r from comment #9)
&gt; It&apos;d be pretty obnoxious to arbitrarily make all of the old library code
&gt; require Java 8 when all of it runs nicely on 6, just for the sake of newly
&gt; incompatible annotations.

In the help document I explained the two situations of inevitable incompatibility: annotations on arrays and on qualified type names. Everything else is backward compatible.

If you don&apos;t use a lot of generics, you&apos;re fine. If you do, you&apos;ll miss out better null analysis while staying at Java 6. But the choice is yours :)

&gt; In that case, it&apos;d obviously be nice
&gt; if Eclipse was capable of using the old annotations for analysis!

For the most part: it can. Using jdt.annotation v1.1 in 1.8 projects has been tested. Using a foreign @NNBD is what currently breaks. This NPE shouldn&apos;t be hard to fix, though - in particular, knowing that your annotations have proper @Target declarations.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2494869</commentid>
    <comment_count>11</comment_count>
    <who name="mark r">org.eclipse</who>
    <bug_when>2014-12-09 16:59:37 -0500</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #10)
&gt; In the help document I explained the two situations of inevitable
&gt; incompatibility: annotations on arrays and on qualified type names.
&gt; Everything else is backward compatible.
&gt; 
&gt; If you don&apos;t use a lot of generics, you&apos;re fine. If you do, you&apos;ll miss out
&gt; better null analysis while staying at Java 6. But the choice is yours :)

I do use a lot of generics! :D

The current level of analysis I get with Java 6 seems reasonable though, I can probably live without the extras. Anyway, it&apos;s nice to know that it&apos;s mostly compatible if I obey a few constraints.

&gt; For the most part: it can. Using jdt.annotation v1.1 in 1.8 projects has
&gt; been tested. Using a foreign @NNBD is what currently breaks. This NPE
&gt; shouldn&apos;t be hard to fix, though - in particular, knowing that your
&gt; annotations have proper @Target declarations.

OK. Er, to be clear, do you mean that my current annotations do have sufficient @Target declarations?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2501809</commentid>
    <comment_count>12</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2015-01-04 18:09:15 -0500</bug_when>
    <thetext>Here&apos;s what triggers the bug:

While loading com.io7m.jnull.NullableByDefault we check if a @NNBD applies to this type.
We find com.io7m.jnull.package-info which indeed is annotated @NNBD.
So we need to check if the annotation has a value (which in 1.8 involves lookup of the annotation&apos;s &apos;value&apos; method).
By the above reentrance we are inspecting details of @NNBD while it is being loaded itself, and hasn&apos;t yet initialized fields and methods.
=&gt; NPE.

Workaround: Don&apos;t recursively apply @NNBD on itself!

I will have to add special code to skip reentrant lookup of NNBD.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2502161</commentid>
    <comment_count>13</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2015-01-05 17:37:31 -0500</bug_when>
    <thetext>Test &amp; fix released for 4.5 M5 via commit 6371de522c7598447758c929efc0763e0276c5ff</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2511105</commentid>
    <comment_count>14</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2015-01-28 00:40:53 -0500</bug_when>
    <thetext>Verified for 4.5 M5 with build I20150127-0900</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2512951</commentid>
    <comment_count>15</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2015-02-01 17:11:31 -0500</bug_when>
    <thetext>*** Bug 438449 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>249180</attachid>
            <date>2014-12-04 16:32:00 -0500</date>
            <delta_ts>2014-12-04 16:32:04 -0500</delta_ts>
            <desc>A zip of the project</desc>
            <filename>eclipsebug.zip</filename>
            <type>application/zip</type>
            <size>12722</size>
            <attacher name="mark r">org.eclipse</attacher>
            
              <data encoding="base64">UEsDBAoAAAAAAJuqhEUAAAAAAAAAAAAAAAALABwAZWNsaXBzZWJ1Zy9VVAkAAzXQgFQ20IBUdXgL
AAEE6AMAAAToAwAAUEsDBBQAAAAIAHiqhEVGkbUOlwMAAK0NAAASABwAZWNsaXBzZWJ1Zy9wb20u
eG1sVVQJAAPzz4BUC9CAVHV4CwABBOgDAAAE6AMAAMVWy67bNhDd+ysY7wpEou0mTXChq6CLG6BA
jAa9bRAgK0aiZTYUKYiUH3/f4UM0JUuxEaDITpw5mjnzJLN3p5qjA20Vk+JxuU5XS0RFIUsmqsfl
P3+/T94u3+WLrGnlv7TQC4QAL9Tjcq9184BxTQ5UpKQhxZ6msq3wxz+3+FW6Ajs99uGkWMAfj8f0
+KtFblarNf68/fAMv9YkYUJpIgpq/1PsQVnxB1kQbanddIjmECdVOmFicSmcl/kC3GS1LCn/5ILP
rTLDA5kBVa3smj/KvJB1yuSbOj0woCl0hnuNQZFWsx0pNByDPpIZiM9yvkrXxtEh8gFkv5EKcp43
ss7w5djT7DhVBhlOvZekkC21rI3QoHGAW8utbCjwCL/7SqZfO8bLVMmuLeiTr3huCw7+v4cZmmlp
I8G8qFLZ6abTc6ZmcZZyzNIIrOPeE+8gFZ4+nF8kCfpoZX3fKpQkQe3g/TGqH7RC3xWuRbzhQR39
P1HlXOcUnBKRuD/GhfX/9PXcpK8HxbVKPKT1P7EsacPl+V6ab34WTTvqnN/L89XP4tlS1/rqXqa/
3WDan1yX+17+nXN5RK50NUw0kmADKbUPXZ3Rk6bCdnqwG0T3BH0klRQ3QraYBNwmxnQrCL8Z7mYi
3BGvSDAIekvab8gnAxGFWCVgj5UIhvqp4KxR9CUqJVVISI3IbgcrBOk9RW4jXTLjTGyJIBU1yRt1
hIp4j3tklDDq3Kb1hk5kapgrzoDQGXZCUpOmgS02naooWWt3uYzSZSGFFDtWda2952IN6IKjrfOz
pZqURJMhLAT3dKJFp+M+mYdcI64x7xmHVphCjpKnpCD63AyHbDKN0wmlNbwA3NB9b9QGv/tc/kVE
RfMv63Tz8peQYCec4S0Jn8hPpM3Ngmq72l3yRjBtCc+a6gf9jkxmEONMOUDp5iLPsP+Y9DVn4YrF
VduMAaNgMnxPA2Z4poWv1jQeTGV/HE5vhv3lv/Cr4hlCR303KHTcU+G3JfBBWiLzKPMbwTxLdozH
jx1zDARYmV8WbdK07EA0jDsLPWarcRjH4Z8n50HUgtQ0tw/Ci8kMW2mcgdGvrlpDD/Fzx/kbL6/J
9fVj15yLcnzVVU11c/KiZXZ9JXsInd1AF9VEo0IBFJQ5CWWOaxInYU8UPH1py3ZnyK09XaPmx9IO
s/E0N9czM22usUn2kWJYLnz1JMGjqoZG99pLq4aDuTLDEzpf/AdQSwMECgAAAAAApaqERQAAAAAA
AAAAAAAAABgAHABlY2xpcHNlYnVnL3ZpbmNlbnQtY29yZS9VVAkAA0XQgFRI0IBUdXgLAAEE6AMA
AAToAwAAUEsDBAoAAAAAAByOhEUAAAAAAAAAAAAAAAAcABwAZWNsaXBzZWJ1Zy92aW5jZW50LWNv
cmUvc3JjL1VUCQADiJ6AVBLQgFR1eAsAAQToAwAABOgDAABQSwMECgAAAAAAHI6ERQAAAAAAAAAA
AAAAACEAHABlY2xpcHNlYnVnL3ZpbmNlbnQtY29yZS9zcmMvbWFpbi9VVAkAA4iegFQS0IBUdXgL
AAEE6AMAAAToAwAAUEsDBAoAAAAAACKOhEUAAAAAAAAAAAAAAAAmABwAZWNsaXBzZWJ1Zy92aW5j
ZW50LWNvcmUvc3JjL21haW4vamF2YS9VVAkAA5CegFQS0IBUdXgLAAEE6AMAAAToAwAAUEsDBAoA
AAAAACKOhEUAAAAAAAAAAAAAAAAqABwAZWNsaXBzZWJ1Zy92aW5jZW50LWNvcmUvc3JjL21haW4v
amF2YS9jb20vVVQJAAOQnoBUEtCAVHV4CwABBOgDAAAE6AMAAFBLAwQKAAAAAAAijoRFAAAAAAAA
AAAAAAAALwAcAGVjbGlwc2VidWcvdmluY2VudC1jb3JlL3NyYy9tYWluL2phdmEvY29tL2lvN20v
VVQJAAOQnoBUEtCAVHV4CwABBOgDAAAE6AMAAFBLAwQKAAAAAADbnIRFAAAAAAAAAAAAAAAANwAc
AGVjbGlwc2VidWcvdmluY2VudC1jb3JlL3NyYy9tYWluL2phdmEvY29tL2lvN20vdmluY2VudC9V
VAkAA024gFQS0IBUdXgLAAEE6AMAAAToAwAAUEsDBBQAAAAIAEyWhEUjkKfexwIAAAgFAABOABwA
ZWNsaXBzZWJ1Zy92aW5jZW50LWNvcmUvc3JjL21haW4vamF2YS9jb20vaW83bS92aW5jZW50L1ZD
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
L1ZEYXRhYmFzZVRyYW5zYWN0aW9uVHlwZS5qYXZhVVQJAAMbuIBUEtCAVHV4CwABBOgDAAAE6AMA
AFWSwY7TMBCG73mK0R5XUQsICQkQwps4jaXULrbT1R7dxG0t2jhK3K4qxAPxGjwZ4+yWwiWO7fm/
+Wc88/sE7iHz/WVwu32A37/g3Zu37+Fz41v71fkPx1njj19gH0L/cT6/HqAo6lZ2OLpxdL6D4OE0
2hQaRKVw9K3b4mq6du4HaN0YBrc5BQth70YY/TY8m8HCFi9Nd4ms/jT0frTw7MIe8Diu/hRgay2g
ZG8Hu7nAbjBdsG0K/eDPrrUtAk3AjwWz8WcbSc3fajofXGOji5e8/c3v9arvrRnAdWAOh6h0dpy9
VqdLCkoU+pFICkzBSoo1y2kOd0Th/g4Iz6cgUutSSMiZyirClgpIVQGqJOGaURVZj0yXIOmCSJQI
VCHvxuZZVeeMLyYhW64qhlluABBFZCypzEo8IQ+sYvppSl8wzalSM2QAF0DXlGtQZeT84+yBQsXI
Q0WhwB3hTxGnVjRjpErRt6SZThFx/cOgTHBFv9WIwxjIyZIsopFJfd1OhZVEK4F5JZan6krHMgop
llAJFZ1DrSjmIJpENfYQLasUdRQNyuib8AgimWaCRwGm1pJEH5wuKragPKNRKyaBFhIDa/UqSIFI
pmJSUeuoFjLSEIsYTl+gU/djP9DL5IJKbMSSTODi/9eIrz9Pkt40383O4kgcZ9PUn13X2C58wqvT
5uAanJlgh63BIVrnJpiNGa3G6RxNE3DA9KW3yY8k+Zn8AVBLAwQUAAAACABpl4RFABCBkv4CAAC/
BQAAUgAcAGVjbGlwc2VidWcvdmluY2VudC1jb3JlL3NyYy9tYWluL2phdmEvY29tL2lvN20vdmlu
Y2VudC9WU2VyaWFsaXphYmxlSW1hZ2VJbmZvLmphdmFVVAkAAwWvgFQS0IBUdXgLAAEE6AMAAATo
AwAAfVTdbtowFL7PUxz1qq0YtKxsdGzT3GDAUkhYHKh6VRkw4DaJo8RQdVMfaK+xJ9tx0rRsbRcp
P/Y53885dtw6duAYXJ3d52q9MfD7F7RPTs/g80Iv5TelPybNhU6+wsaY7FOrVU9YkL0nMk9UUSid
gtGwLWQDFsjVgEQv1QrfIl22dA5LVZhczbdGgtmoAgq9Mncil7DCoEjvLVe2zTNdSLhTZgM4bd96
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
L3NyYy9tYWluL1VUBQADiJ6AVHV4CwABBOgDAAAE6AMAAFBLAQIeAwoAAAAAACKOhEUAAAAAAAAA
AAAAAAAmABgAAAAAAAAAEADtQSsFAABlY2xpcHNlYnVnL3ZpbmNlbnQtY29yZS9zcmMvbWFpbi9q
YXZhL1VUBQADkJ6AVHV4CwABBOgDAAAE6AMAAFBLAQIeAwoAAAAAACKOhEUAAAAAAAAAAAAAAAAq
ABgAAAAAAAAAEADtQYsFAABlY2xpcHNlYnVnL3ZpbmNlbnQtY29yZS9zcmMvbWFpbi9qYXZhL2Nv
bS9VVAUAA5CegFR1eAsAAQToAwAABOgDAABQSwECHgMKAAAAAAAijoRFAAAAAAAAAAAAAAAALwAY
AAAAAAAAABAA7UHvBQAAZWNsaXBzZWJ1Zy92aW5jZW50LWNvcmUvc3JjL21haW4vamF2YS9jb20v
aW83bS9VVAUAA5CegFR1eAsAAQToAwAABOgDAABQSwECHgMKAAAAAADbnIRFAAAAAAAAAAAAAAAA
NwAYAAAAAAAAABAA7UFYBgAAZWNsaXBzZWJ1Zy92aW5jZW50LWNvcmUvc3JjL21haW4vamF2YS9j
b20vaW83bS92aW5jZW50L1VUBQADTbiAVHV4CwABBOgDAAAE6AMAAFBLAQIeAxQAAAAIAEyWhEUj
kKfexwIAAAgFAABOABgAAAAAAAEAAACkgckGAABlY2xpcHNlYnVnL3ZpbmNlbnQtY29yZS9zcmMv
bWFpbi9qYXZhL2NvbS9pbzdtL3ZpbmNlbnQvVkNvbmZpZ0J1aWxkZXJUeXBlLmphdmFVVAUAA++s
gFR1eAsAAQToAwAABOgDAABQSwECHgMUAAAACACwnIRFf9Lud1QCAADVAwAASQAYAAAAAAABAAAA
pIEYCgAAZWNsaXBzZWJ1Zy92aW5jZW50LWNvcmUvc3JjL21haW4vamF2YS9jb20vaW83bS92aW5j
ZW50L1ZEYXRhYmFzZVR5cGUuamF2YVVUBQAD+7eAVHV4CwABBOgDAAAE6AMAAFBLAQIeAxQAAAAI
ANmdhEWv0sTxDgQAAB0JAABFABgAAAAAAAEAAACkge8MAABlY2xpcHNlYnVnL3ZpbmNlbnQtY29y
ZS9zcmMvbWFpbi9qYXZhL2NvbS9pbzdtL3ZpbmNlbnQvVkRhdGFiYXNlLmphdmFVVAUAAyq6gFR1
eAsAAQToAwAABOgDAABQSwECHgMUAAAACADCnIRF0r/BUCICAABjAwAAVAAYAAAAAAABAAAApIF8
EQAAZWNsaXBzZWJ1Zy92aW5jZW50LWNvcmUvc3JjL21haW4vamF2YS9jb20vaW83bS92aW5jZW50
L1ZEYXRhYmFzZVRyYW5zYWN0aW9uVHlwZS5qYXZhVVQFAAMbuIBUdXgLAAEE6AMAAAToAwAAUEsB
Ah4DFAAAAAgAaZeERQAQgZL+AgAAvwUAAFIAGAAAAAAAAQAAAKSBLBQAAGVjbGlwc2VidWcvdmlu
Y2VudC1jb3JlL3NyYy9tYWluL2phdmEvY29tL2lvN20vdmluY2VudC9WU2VyaWFsaXphYmxlSW1h
Z2VJbmZvLmphdmFVVAUAAwWvgFR1eAsAAQToAwAABOgDAABQSwECHgMUAAAACADbqYRFEP7utDoD
AAAfBgAASgAYAAAAAAABAAAApIG2FwAAZWNsaXBzZWJ1Zy92aW5jZW50LWNvcmUvc3JjL21haW4v
amF2YS9jb20vaW83bS92aW5jZW50L1ZUaHVtYm5haWxUYXNrLmphdmFVVAUAA87OgFR1eAsAAQTo
AwAABOgDAABQSwECHgMUAAAACABZjoRFbU8avhICAABVAwAASAAYAAAAAAABAAAApIF0GwAAZWNs
aXBzZWJ1Zy92aW5jZW50LWNvcmUvc3JjL21haW4vamF2YS9jb20vaW83bS92aW5jZW50L3BhY2th
Z2UtaW5mby5qYXZhVVQFAAP6noBUdXgLAAEE6AMAAAToAwAAUEsBAh4DFAAAAAgA9paERZco0FmD
BgAAERYAAEMAGAAAAAAAAQAAAKSBCB4AAGVjbGlwc2VidWcvdmluY2VudC1jb3JlL3NyYy9tYWlu
L2phdmEvY29tL2lvN20vdmluY2VudC9WQ29uZmlnLmphdmFVVAUAAy+ugFR1eAsAAQToAwAABOgD
AABQSwECHgMUAAAACABUqoRFy/DfvbEDAAAdEAAAHwAYAAAAAAABAAAApIEIJQAAZWNsaXBzZWJ1
Zy92aW5jZW50LWNvcmUvcG9tLnhtbFVUBQADsM+AVHV4CwABBOgDAAAE6AMAAFBLBQYAAAAAEgAS
AIoIAAASKQAAAAA=
</data>

          </attachment>
      

    </bug>

</bugzilla>