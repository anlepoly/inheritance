<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>438467</bug_id>
          
          <creation_ts>2014-06-28 18:06:00 -0400</creation_ts>
          <short_desc>[compiler][null] Better error position for &quot;The method _ cannot implement the corresponding method _ due to incompatible nullness constraints&quot;</short_desc>
          <delta_ts>2014-08-05 08:01:26 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>trivial</bug_severity>
          <target_milestone>4.5 M1</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Michael Vorburger">mike</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>clovis.seragiotto</cc>
    
    <cc>manpalat</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2421875</commentid>
    <comment_count>0</comment_count>
    <who name="Michael Vorburger">mike</who>
    <bug_when>2014-06-28 18:06:47 -0400</bug_when>
    <thetext>The error marker:
 
&quot;The method @Nullable (someMethod) from (someClass) cannot implement the corresponding method from (someInterface) due to incompatible nullness constraints&quot;

has the line location of (someClass). In an ideal world, it would obviously be (someMethod) instead, to allow one to correct the problem more easily by double clicking and jumping to the correct line.

This is certainly a minor problem in the larger scheme of things of null analysis, but I thought I&apos;d let you know anyways.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2430065</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-07-22 04:40:47 -0400</bug_when>
    <thetext>This is blocking the use of @SuppressWarnings(&quot;null&quot;) in bug 438469.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2430285</commentid>
    <comment_count>2</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-07-22 10:31:24 -0400</bug_when>
    <thetext>The sub-optimal error location corresponds to raising a sub-optimal error: instead for reporting &quot;cannot implement ... due to incompatible ...&quot; we should explicitly say: &quot;The return type is incompatible with ...&quot;.

Technically this means: whenever we do have the AST of the method to complain against, use problemReporter().illegalReturnRedefinition() instead of problemReporter().cannotImplementIncompatibleNullness().
The latter is a fallback for a situation of which I&apos;m not sure whether it can actually occur.

To match the same situation for parameter incompatibilities which do not fit the old messages for SE5 null annotations, I added IProblem.IllegalParameterNullityRedefinition.

I had to rephrase one existing error message to make it suitable for type annotations, too, which required update to a number of existing tests ...

Messages are now:
914 = The return type is incompatible with &apos;&apos;{1}&apos;&apos; returned from {0} (mismatching null constraints)

972 = Illegal redefinition of parameter {0}, inherited method from {1} declares this parameter as &apos;&apos;{2}&apos;&apos; (mismatching null constraints)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2430384</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-07-22 12:01:57 -0400</bug_when>
    <thetext>Released for 4.5 M1 via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=61133b8c5e6da454f7cea747a5c83744e4b067c9</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2430481</commentid>
    <comment_count>4</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-07-22 15:05:15 -0400</bug_when>
    <thetext>*** Bug 438397 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2434053</commentid>
    <comment_count>5</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-07-31 04:53:40 -0400</bug_when>
    <thetext>*** Bug 438469 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2435645</commentid>
    <comment_count>6</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-08-05 08:01:26 -0400</bug_when>
    <thetext>Verified for Eclipse Mars 4.5 M1 Build id: I20140804-2000</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>