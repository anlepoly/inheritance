<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>339139</bug_id>
          
          <creation_ts>2011-03-07 14:34:00 -0500</creation_ts>
          <short_desc>[compiler] HEAD contents of org.eclipse.wst.jsdt.core doesn&apos;t compile anymore</short_desc>
          <delta_ts>2011-05-02 10:33:45 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.7</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>blocker</bug_severity>
          <target_milestone>3.7 M6</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Olivier Thomann">Olivier_Thomann</reporter>
          <assigned_to name="Ayushman Jain">amj87.iitr</assigned_to>
          <cc>jarthana</cc>
    
    <cc>Michael_Rennie</cc>
    
    <cc>nitind</cc>
    
    <cc>remy.suen</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1894493</commentid>
    <comment_count>0</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-03-07 14:34:46 -0500</bug_when>
    <thetext>The source of the Scope.java class doesn&apos;t compile because of a NPE.

java.lang.NullPointerException
	at org.eclipse.jdt.internal.compiler.codegen.BranchLabel.branch(BranchLabel.java:127)
	at org.eclipse.jdt.internal.compiler.codegen.CodeStream.goto_(CodeStream.java:3129)
	at org.eclipse.jdt.internal.compiler.ast.BranchStatement.generateCode(BranchStatement.java:60)
	at org.eclipse.jdt.internal.compiler.ast.IfStatement.generateCode(IfStatement.java:183)
	at org.eclipse.jdt.internal.compiler.ast.ForStatement.generateCode(ForStatement.java:290)
	at org.eclipse.jdt.internal.compiler.ast.Block.generateCode(Block.java:51)
	at org.eclipse.jdt.internal.compiler.ast.ForStatement.generateCode(ForStatement.java:290)
	at org.eclipse.jdt.internal.compiler.ast.LabeledStatement.generateCode(LabeledStatement.java:104)
	at org.eclipse.jdt.internal.compiler.ast.Block.generateCode(Block.java:51)
	at org.eclipse.jdt.internal.compiler.ast.IfStatement.generateCode(IfStatement.java:183)
	at org.eclipse.jdt.internal.compiler.ast.Block.generateCode(Block.java:51)
	at org.eclipse.jdt.internal.compiler.ast.ForStatement.generateCode(ForStatement.java:290)
	at org.eclipse.jdt.internal.compiler.ast.LabeledStatement.generateCode(LabeledStatement.java:104)
	at org.eclipse.jdt.internal.compiler.ast.Block.generateCode(Block.java:51)
	at org.eclipse.jdt.internal.compiler.ast.IfStatement.generateCode(IfStatement.java:183)
	at org.eclipse.jdt.internal.compiler.ast.Block.generateCode(Block.java:51)
	at org.eclipse.jdt.internal.compiler.ast.IfStatement.generateCode(IfStatement.java:183)
	at org.eclipse.jdt.internal.compiler.ast.Block.generateCode(Block.java:51)
	at org.eclipse.jdt.internal.compiler.ast.ForStatement.generateCode(ForStatement.java:290)
	at org.eclipse.jdt.internal.compiler.ast.LabeledStatement.generateCode(LabeledStatement.java:104)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:244)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:182)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:543)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:612)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:361)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:919)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:958)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:202)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:268)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:190)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1244)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.initialReconcile(JavaReconcilingStrategy.java:178)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.initialReconcile(CompositeReconcilingStrategy.java:114)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.initialReconcile(JavaCompositeReconcilingStrategy.java:136)
	at org.eclipse.jface.text.reconciler.MonoReconciler.initialProcess(MonoReconciler.java:105)
	at org.eclipse.jdt.internal.ui.text.JavaReconciler.initialProcess(JavaReconciler.java:406)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:173)

This might be related to the latest changes in the code generation changes around dead code.

I am investigating to isolate a test case.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1894494</commentid>
    <comment_count>1</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-03-07 14:35:00 -0500</bug_when>
    <thetext>A must fix for M6.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1894521</commentid>
    <comment_count>2</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-03-07 15:05:00 -0500</bug_when>
    <thetext>Reduced test case:
public abstract class X {
	private static Object[] bar() {
		return null;
	}
	protected final Object foo() {
			Object[] tab = null;
			if (tab != null) {
					Object[] v = bar();
					int length = tab.length;
					loop : for (int i = 0, max = v.length; i &lt; max; i++) {
						Object o = v[i];
						if (o == null) {
							continue loop;
						}
						if (0 == length) {
							loop2 : for (int j = 0; j &lt; length; j++) {
								Object o2 = null;
								for (int k = 0; k &lt; length; k++) {
									if (o2 == tab[k]) {
										continue loop2;
									}
								}
								continue loop;
							}
							return o;
						}
					}
				}
		return null;
	}
}

This blows up with HEAD contents. It is related to the recent changes for dead code detection and code generation.
The code stream of the labels for the labeled statement are still null at code generation time causing the NPE.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1894535</commentid>
    <comment_count>3</comment_count>
      <attachid>190598</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-03-07 15:28:13 -0500</bug_when>
    <thetext>Created attachment 190598
Proposed fix

With this patch, the code compiles again and still reports a dead code warning.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1894537</commentid>
    <comment_count>4</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-03-07 15:30:16 -0500</bug_when>
    <thetext>Stephan, Ayushman, please review the patch and propagate the same kind of changes to all possible locations.
I haven&apos;t checked in details other possible usages of UNREACHABLE instead of UNREACHABLE_OR_DEAD.
I also haven&apos;t run all tests yet.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1894775</commentid>
    <comment_count>5</comment_count>
      <attachid>190636</attachid>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-03-08 04:30:54 -0500</bug_when>
    <thetext>Created attachment 190636
proposed fix extended

Here&apos;s the same fix extended to some other places which affect code gen later on. Testing this now.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1894851</commentid>
    <comment_count>6</comment_count>
      <attachid>190644</attachid>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-03-08 06:53:53 -0500</bug_when>
    <thetext>Created attachment 190644
fix + tests

Same fix with added tests.
Note that the change in LocalDeclaration is to make sure we treat a local declaration in a null analysed dead code as reachable. As a consequence, local variable unused warnings also show up inside dead code now, which is good. 
Olivier/Stephan, if you don&apos;t have any objections with this fix, I&apos;ll release it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1894863</commentid>
    <comment_count>7</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-03-08 07:11:25 -0500</bug_when>
    <thetext>(In reply to comment #5)
&gt; Created attachment 190636 [details]
&gt; proposed fix extended
&gt; 
&gt; Here&apos;s the same fix extended to some other places which affect code gen later
&gt; on. Testing this now.

I had prepared a similar patch last night. But I must have been tired: 
I forgot to actually click submit..

So, while working independently we agree on the locations in FlowContext
and sub-classes. The common pattern is:

 - XFlowContext has a field initsOnY 
 - this field is initialized to FlowInfo.DEAD_END (!)
 - only during recordZFrom(..) is this field updated to something useful
 - this method only works if not dead code (need to use UNREACHABLE_OR_DEAD)

IMO in all those methods changing the outer if should suffice for the 
immediate issue. (The inner if in LoopingFlowContext only affects the
content of the flowInfo, it is unrelated to the NPE at hand).

With just these changes I ran tests.compiler and tests.model and they pass.

Also the occurrences in LocalDeclaration and MethodScope looked suspicious 
to me. I agree with changing these, too.

I missed the location in TryStatement, but that&apos;s a good catch, too.


On the semantic side I suspect FlowContext.recordSettingFinal(..) should
also be changed for correct analysis, but I don&apos;t see danger of an NPE here.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1894866</commentid>
    <comment_count>8</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-03-08 07:15:18 -0500</bug_when>
    <thetext>Now we had a mid-air collision of comments. ....

(In reply to comment #6)
&gt; Created attachment 190644 [details]
&gt; fix + tests
&gt; 
&gt; Same fix with added tests.
&gt; Note that the change in LocalDeclaration is to make sure we treat a local
&gt; declaration in a null analysed dead code as reachable. As a consequence, local
&gt; variable unused warnings also show up inside dead code now, which is good. 
&gt; Olivier/Stephan, if you don&apos;t have any objections with this fix, I&apos;ll release
&gt; it.

Maybe you can briefly comment on two points where our findings differ:
- why change the inner if in LoopingFlowContext?
- how about FlowContext.recordSettingFinal?

thanks,
Stephan</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1894944</commentid>
    <comment_count>9</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-03-08 08:59:29 -0500</bug_when>
    <thetext>(In reply to comment #8)
&gt; Maybe you can briefly comment on two points where our findings differ:
&gt; - why change the inner if in LoopingFlowContext?
I couldn&apos;t really convince myself on changing it or leaving it as is. I was basically trying the following tweaked case (focus on the portion between the &quot;///////..&quot;):

public class X {
  
	private static Object[] bar() {
    	Object o = null;
    	
    	if (o != null) {
    		int a11 = 0; 
        	a11++;
	    	Object aa = null;
	    	if (aa == null) {
	    		aa.toString(); 
	    	}
    	}
        return null;
    }
    protected final Object foo() {
        Object[] tab = null;
        if (tab != null) {
                Object[] v = bar();
                int length = tab.length;
                loop : for (int i = 0, max = v.length; i &lt; max; i++) {
                    Object o = v[i];
/////////////////////////////////////////////////
                    if (o == null) { 
                    	continue loop;    // CONTINUE 1
                    }
                    o = null;
                    if (o == null ) { 
                        continue loop;    // CONTINUE 2
                    }
////////////////////////////////////////////////////
                    if (0 == length) {
                        loop2 : for (int j = 0; j &lt; length; j++) {
                            Object o2 = null;
                            for (int k = 0; k &lt; length; k++) {
                                if (o2 == tab[k]) {
                                    continue loop2;
                                }
                            }
                            continue loop;
                        }
                        return o;
                    }
                }
            }
    return null;
}
}

I saw that if we just have the UNREACHABLE bit comparison, we don&apos;t merge the initsOnContinue  that we obtained from the CONTINUE 1, and just copy the flowInfo of the loop into the inits. I&apos;m not sure if it&apos;ll have any consequence on code gen really. Frankly speaking, I wasn&apos;t able to make up my mind. We can use just the UNREACHABLE bit as well. 


&gt; - how about FlowContext.recordSettingFinal?
I did consider this but didnt find a possibility of an NPE. Again, we can change this as well to be consistent.

Let me know what you think.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1894962</commentid>
    <comment_count>10</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-03-08 09:15:37 -0500</bug_when>
    <thetext>(In reply to comment #9)
&gt; Let me know what you think.

It&apos;s probably safest to use UNREACHABLE_OR_DEAD in all mentioned locations
even if no direct impact on codegen can be shown now (as to minimize the danger 
of null-analysis causing grief).

At the same time I suggest to open fups for the issues where we still want
to investigate the exact impact on analysis in general. This would affect
at least both locations mentioned in comment 8 .
That why we can take our time to find test cases for those and still cleanly 
fix the NPE now.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1895098</commentid>
    <comment_count>11</comment_count>
      <attachid>190668</attachid>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-03-08 11:35:32 -0500</bug_when>
    <thetext>Created attachment 190668
same fix with suggested changes

I&apos;ll release this fix then. It passes all tests.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1895107</commentid>
    <comment_count>12</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-03-08 11:46:26 -0500</bug_when>
    <thetext>Released in HEAD for 3.7M6</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1895109</commentid>
    <comment_count>13</comment_count>
      <attachid>190669</attachid>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-03-08 11:47:32 -0500</bug_when>
    <thetext>Created attachment 190669
released patch

Same patch. Just fixed some comments.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1895139</commentid>
    <comment_count>14</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-03-08 12:14:04 -0500</bug_when>
    <thetext>(In reply to comment #10)
&gt; At the same time I suggest to open fups for the issues where we still want
&gt; to investigate the exact impact on analysis in general.
Done. See bug 339253</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1896537</commentid>
    <comment_count>15</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-03-10 09:15:13 -0500</bug_when>
    <thetext>Verified for 3.7M6.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1922250</commentid>
    <comment_count>16</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2011-05-02 10:33:45 -0400</bug_when>
    <thetext>Verified with build I20110428-0848 for 3.7RC0</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>190598</attachid>
            <date>2011-03-07 15:28:00 -0500</date>
            <delta_ts>2011-03-08 04:30:54 -0500</delta_ts>
            <desc>Proposed fix</desc>
            <filename>patch_339139_3.txt</filename>
            <type>text/plain</type>
            <size>1112</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxvdy9M
b29waW5nRmxvd0NvbnRleHQuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2Vj
bGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2Zsb3cvTG9vcGluZ0Zsb3dDb250ZXh0LmphdmEsdg0KcmV0cmlldmluZyBy
ZXZpc2lvbiAxLjU1DQpkaWZmIC11IC1yMS41NSBMb29waW5nRmxvd0NvbnRleHQuamF2YQ0KLS0t
IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L0xvb3BpbmdG
bG93Q29udGV4dC5qYXZhCTUgTWFyIDIwMTEgMTc6MTg6NDMgLTAwMDAJMS41NQ0KKysrIGNvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L0xvb3BpbmdGbG93Q29u
dGV4dC5qYXZhCTcgTWFyIDIwMTEgMjA6Mjc6MzAgLTAwMDANCkBAIC0zODUsOCArMzg1LDggQEAN
CiB9DQogDQogcHVibGljIHZvaWQgcmVjb3JkQ29udGludWVGcm9tKEZsb3dDb250ZXh0IGlubmVy
Rmxvd0NvbnRleHQsIEZsb3dJbmZvIGZsb3dJbmZvKSB7DQotCWlmICgoZmxvd0luZm8udGFnQml0
cyAmIEZsb3dJbmZvLlVOUkVBQ0hBQkxFKSA9PSAwKQl7DQotCQlpZiAoKHRoaXMuaW5pdHNPbkNv
bnRpbnVlLnRhZ0JpdHMgJiBGbG93SW5mby5VTlJFQUNIQUJMRSkgPT0gMCkgew0KKwlpZiAoKGZs
b3dJbmZvLnRhZ0JpdHMgJiBGbG93SW5mby5VTlJFQUNIQUJMRV9PUl9ERUFEKSA9PSAwKQl7DQor
CQlpZiAoKHRoaXMuaW5pdHNPbkNvbnRpbnVlLnRhZ0JpdHMgJiBGbG93SW5mby5VTlJFQUNIQUJM
RV9PUl9ERUFEKSA9PSAwKSB7DQogCQkJdGhpcy5pbml0c09uQ29udGludWUgPSB0aGlzLmluaXRz
T25Db250aW51ZS4NCiAJCQkJCW1lcmdlZFdpdGgoZmxvd0luZm8udW5jb25kaXRpb25hbEluaXRz
V2l0aG91dFNpZGVFZmZlY3QoKSk7DQogCQl9DQo=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>190636</attachid>
            <date>2011-03-08 04:30:00 -0500</date>
            <delta_ts>2011-03-08 06:53:53 -0500</delta_ts>
            <desc>proposed fix extended</desc>
            <filename>patch339139.txt</filename>
            <type>text/plain</type>
            <size>8876</size>
            <attacher name="Ayushman Jain">amj87.iitr</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0xv
Y2FsRGVjbGFyYXRpb24uamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlw
c2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2FzdC9Mb2NhbERlY2xhcmF0aW9uLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lv
biAxLjc5DQpkaWZmIC11IC1yMS43OSBMb2NhbERlY2xhcmF0aW9uLmphdmENCi0tLSBjb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0xvY2FsRGVjbGFyYXRpb24u
amF2YQk4IEZlYiAyMDExIDA1OjU5OjE3IC0wMDAwCTEuNzkNCisrKyBjb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0xvY2FsRGVjbGFyYXRpb24uamF2YQk4IE1h
ciAyMDExIDA5OjI5OjQ0IC0wMDAwDQpAQCAtMzgsNyArMzgsNyBAQA0KIA0KIHB1YmxpYyBGbG93
SW5mbyBhbmFseXNlQ29kZShCbG9ja1Njb3BlIGN1cnJlbnRTY29wZSwgRmxvd0NvbnRleHQgZmxv
d0NvbnRleHQsIEZsb3dJbmZvIGZsb3dJbmZvKSB7DQogCS8vIHJlY29yZCB2YXJpYWJsZSBpbml0
aWFsaXphdGlvbiBpZiBhbnkNCi0JaWYgKChmbG93SW5mby50YWdCaXRzICYgRmxvd0luZm8uVU5S
RUFDSEFCTEUpID09IDApIHsNCisJaWYgKChmbG93SW5mby50YWdCaXRzICYgRmxvd0luZm8uVU5S
RUFDSEFCTEVfT1JfREVBRCkgPT0gMCkgew0KIAkJdGhpcy5iaXRzIHw9IEFTVE5vZGUuSXNMb2Nh
bERlY2xhcmF0aW9uUmVhY2hhYmxlOyAvLyBvbmx5IHNldCBpZiBhY3R1YWxseSByZWFjaGVkDQog
CX0NCiAJaWYgKHRoaXMuYmluZGluZyAhPSBudWxsICYmIHRoaXMudHlwZS5yZXNvbHZlZFR5cGUg
aW5zdGFuY2VvZiBUeXBlVmFyaWFibGVCaW5kaW5nKSB7DQpJbmRleDogY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9UcnlTdGF0ZW1lbnQuamF2YQ0KPT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9UcnlTdGF0ZW1lbnQu
amF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTE4DQpkaWZmIC11IC1yMS4xMTggVHJ5U3Rh
dGVtZW50LmphdmENCi0tLSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L1RyeVN0YXRlbWVudC5qYXZhCTUgTWFyIDIwMTEgMTc6MTg6NDMgLTAwMDAJMS4xMTgN
CisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1RyeVN0
YXRlbWVudC5qYXZhCTggTWFyIDIwMTEgMDk6Mjk6NDQgLTAwMDANCkBAIC0xNTksNyArMTU5LDcg
QEANCiAJCQkJCQljYXRjaEluZm8pOw0KIAkJCQl0aGlzLmNhdGNoRXhpdEluaXRTdGF0ZUluZGV4
ZXNbaV0gPSBjdXJyZW50U2NvcGUubWV0aG9kU2NvcGUoKS5yZWNvcmRJbml0aWFsaXphdGlvblN0
YXRlcyhjYXRjaEluZm8pOw0KIAkJCQl0aGlzLmNhdGNoRXhpdHNbaV0gPQ0KLQkJCQkJKGNhdGNo
SW5mby50YWdCaXRzICYgRmxvd0luZm8uVU5SRUFDSEFCTEUpICE9IDA7DQorCQkJCQkoY2F0Y2hJ
bmZvLnRhZ0JpdHMgJiBGbG93SW5mby5VTlJFQUNIQUJMRV9PUl9ERUFEKSAhPSAwOw0KIAkJCQl0
cnlJbmZvID0gdHJ5SW5mby5tZXJnZWRXaXRoKGNhdGNoSW5mby51bmNvbmRpdGlvbmFsSW5pdHMo
KSk7DQogCQkJfQ0KIAkJfQ0KQEAgLTI2OCw3ICsyNjgsNyBAQA0KIAkJCQkJCWNhdGNoSW5mbyk7
DQogCQkJCXRoaXMuY2F0Y2hFeGl0SW5pdFN0YXRlSW5kZXhlc1tpXSA9IGN1cnJlbnRTY29wZS5t
ZXRob2RTY29wZSgpLnJlY29yZEluaXRpYWxpemF0aW9uU3RhdGVzKGNhdGNoSW5mbyk7DQogCQkJ
CXRoaXMuY2F0Y2hFeGl0c1tpXSA9DQotCQkJCQkoY2F0Y2hJbmZvLnRhZ0JpdHMgJiBGbG93SW5m
by5VTlJFQUNIQUJMRSkgIT0gMDsNCisJCQkJCShjYXRjaEluZm8udGFnQml0cyAmIEZsb3dJbmZv
LlVOUkVBQ0hBQkxFX09SX0RFQUQpICE9IDA7DQogCQkJCXRyeUluZm8gPSB0cnlJbmZvLm1lcmdl
ZFdpdGgoY2F0Y2hJbmZvLnVuY29uZGl0aW9uYWxJbml0cygpKTsNCiAJCQl9DQogCQl9DQpJbmRl
eDogY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvRXhjZXB0
aW9uSGFuZGxpbmdGbG93Q29udGV4dC5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jv
b3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvZmxvdy9FeGNlcHRpb25IYW5kbGluZ0Zsb3dDb250ZXh0LmphdmEs
dg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjQ1DQpkaWZmIC11IC1yMS40NSBFeGNlcHRpb25IYW5k
bGluZ0Zsb3dDb250ZXh0LmphdmENCi0tLSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvZmxvdy9FeGNlcHRpb25IYW5kbGluZ0Zsb3dDb250ZXh0LmphdmEJNyBNYXIg
MjAwOSAwMDo1OTowNiAtMDAwMAkxLjQ1DQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2Zsb3cvRXhjZXB0aW9uSGFuZGxpbmdGbG93Q29udGV4dC5qYXZhCTgg
TWFyIDIwMTEgMDk6Mjk6NDQgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDA5IElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24g
YW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRo
ZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRo
ZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNj
b21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC0yMjcs
OCArMjI3LDggQEANCiB9DQogDQogcHVibGljIHZvaWQgcmVjb3JkUmV0dXJuRnJvbShVbmNvbmRp
dGlvbmFsRmxvd0luZm8gZmxvd0luZm8pIHsNCi0JaWYgKChmbG93SW5mby50YWdCaXRzICYgRmxv
d0luZm8uVU5SRUFDSEFCTEUpID09IDApIHsNCi0JCWlmICgodGhpcy5pbml0c09uUmV0dXJuLnRh
Z0JpdHMgJiBGbG93SW5mby5VTlJFQUNIQUJMRSkgPT0gMCkgew0KKwlpZiAoKGZsb3dJbmZvLnRh
Z0JpdHMgJiBGbG93SW5mby5VTlJFQUNIQUJMRV9PUl9ERUFEKSA9PSAwKSB7DQorCQlpZiAoKHRo
aXMuaW5pdHNPblJldHVybi50YWdCaXRzICYgRmxvd0luZm8uVU5SRUFDSEFCTEVfT1JfREVBRCkg
PT0gMCkgew0KIAkJCXRoaXMuaW5pdHNPblJldHVybiA9IHRoaXMuaW5pdHNPblJldHVybi5tZXJn
ZWRXaXRoKGZsb3dJbmZvKTsNCiAJCX0NCiAJCWVsc2Ugew0KSW5kZXg6IGNvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L0luc2lkZVN1YlJvdXRpbmVGbG93Q29u
dGV4dC5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
Zmxvdy9JbnNpZGVTdWJSb3V0aW5lRmxvd0NvbnRleHQuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlz
aW9uIDEuMjENCmRpZmYgLXUgLXIxLjIxIEluc2lkZVN1YlJvdXRpbmVGbG93Q29udGV4dC5qYXZh
DQotLS0gY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvSW5z
aWRlU3ViUm91dGluZUZsb3dDb250ZXh0LmphdmEJNyBNYXIgMjAwOSAwMTowODoxMCAtMDAwMAkx
LjIxDQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cv
SW5zaWRlU3ViUm91dGluZUZsb3dDb250ZXh0LmphdmEJOCBNYXIgMjAxMSAwOToyOTo0NCAtMDAw
MA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmln
aHQgKGMpIDIwMDAsIDIwMDkgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCBy
aWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlh
bHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNl
IFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1
dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTQzLDcgKzQzLDcgQEANCiB9DQogDQogcHVi
bGljIHZvaWQgcmVjb3JkUmV0dXJuRnJvbShVbmNvbmRpdGlvbmFsRmxvd0luZm8gZmxvd0luZm8p
IHsNCi0JaWYgKChmbG93SW5mby50YWdCaXRzICYgRmxvd0luZm8uVU5SRUFDSEFCTEUpID09IDAp
CXsNCisJaWYgKChmbG93SW5mby50YWdCaXRzICYgRmxvd0luZm8uVU5SRUFDSEFCTEVfT1JfREVB
RCkgPT0gMCkJew0KIAlpZiAodGhpcy5pbml0c09uUmV0dXJuID09IEZsb3dJbmZvLkRFQURfRU5E
KSB7DQogCQl0aGlzLmluaXRzT25SZXR1cm4gPSAoVW5jb25kaXRpb25hbEZsb3dJbmZvKSBmbG93
SW5mby5jb3B5KCk7DQogCX0gZWxzZSB7DQpJbmRleDogY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvTG9vcGluZ0Zsb3dDb250ZXh0LmphdmENCj09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L0xvb3BpbmdGbG93Q29u
dGV4dC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS41NQ0KZGlmZiAtdSAtcjEuNTUgTG9v
cGluZ0Zsb3dDb250ZXh0LmphdmENCi0tLSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvZmxvdy9Mb29waW5nRmxvd0NvbnRleHQuamF2YQk1IE1hciAyMDExIDE3OjE4
OjQzIC0wMDAwCTEuNTUNCisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvZmxvdy9Mb29waW5nRmxvd0NvbnRleHQuamF2YQk4IE1hciAyMDExIDA5OjI5OjQ0IC0w
MDAwDQpAQCAtMzg1LDggKzM4NSw4IEBADQogfQ0KIA0KIHB1YmxpYyB2b2lkIHJlY29yZENvbnRp
bnVlRnJvbShGbG93Q29udGV4dCBpbm5lckZsb3dDb250ZXh0LCBGbG93SW5mbyBmbG93SW5mbykg
ew0KLQlpZiAoKGZsb3dJbmZvLnRhZ0JpdHMgJiBGbG93SW5mby5VTlJFQUNIQUJMRSkgPT0gMCkJ
ew0KLQkJaWYgKCh0aGlzLmluaXRzT25Db250aW51ZS50YWdCaXRzICYgRmxvd0luZm8uVU5SRUFD
SEFCTEUpID09IDApIHsNCisJaWYgKChmbG93SW5mby50YWdCaXRzICYgRmxvd0luZm8uVU5SRUFD
SEFCTEVfT1JfREVBRCkgPT0gMCkJew0KKwkJaWYgKCh0aGlzLmluaXRzT25Db250aW51ZS50YWdC
aXRzICYgRmxvd0luZm8uVU5SRUFDSEFCTEVfT1JfREVBRCkgPT0gMCkgew0KIAkJCXRoaXMuaW5p
dHNPbkNvbnRpbnVlID0gdGhpcy5pbml0c09uQ29udGludWUuDQogCQkJCQltZXJnZWRXaXRoKGZs
b3dJbmZvLnVuY29uZGl0aW9uYWxJbml0c1dpdGhvdXRTaWRlRWZmZWN0KCkpOw0KIAkJfQ0KSW5k
ZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L1N3aXRj
aEZsb3dDb250ZXh0LmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNl
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9mbG93L1N3aXRjaEZsb3dDb250ZXh0LmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lv
biAxLjMyDQpkaWZmIC11IC1yMS4zMiBTd2l0Y2hGbG93Q29udGV4dC5qYXZhDQotLS0gY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvU3dpdGNoRmxvd0NvbnRl
eHQuamF2YQk3IE1hciAyMDA5IDAxOjA4OjEwIC0wMDAwCTEuMzINCisrKyBjb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxvdy9Td2l0Y2hGbG93Q29udGV4dC5qYXZh
CTggTWFyIDIwMTEgMDk6Mjk6NDQgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDA5IElCTSBDb3Jwb3JhdGlv
biBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5k
IHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVy
IHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2gg
YWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC00
Miw3ICs0Miw3IEBADQogfQ0KIA0KIHB1YmxpYyB2b2lkIHJlY29yZEJyZWFrRnJvbShGbG93SW5m
byBmbG93SW5mbykgew0KLQlpZiAoKHRoaXMuaW5pdHNPbkJyZWFrLnRhZ0JpdHMgJiBGbG93SW5m
by5VTlJFQUNIQUJMRSkgPT0gMCkgew0KKwlpZiAoKHRoaXMuaW5pdHNPbkJyZWFrLnRhZ0JpdHMg
JiBGbG93SW5mby5VTlJFQUNIQUJMRV9PUl9ERUFEKSA9PSAwKSB7DQogCQl0aGlzLmluaXRzT25C
cmVhayA9IHRoaXMuaW5pdHNPbkJyZWFrLm1lcmdlZFdpdGgoZmxvd0luZm8udW5jb25kaXRpb25h
bEluaXRzKCkpOw0KIAl9DQogCWVsc2Ugew0KSW5kZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvTWV0aG9kU2NvcGUuamF2YQ0KPT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0K
UkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RTY29wZS5qYXZh
LHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS43OA0KZGlmZiAtdSAtcjEuNzggTWV0aG9kU2NvcGUu
amF2YQ0KLS0tIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29r
dXAvTWV0aG9kU2NvcGUuamF2YQkxIE5vdiAyMDEwIDE0OjE1OjQ3IC0wMDAwCTEuNzgNCisrKyBj
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL01ldGhvZFNj
b3BlLmphdmEJOCBNYXIgMjAxMSAwOToyOTo0NCAtMDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENv
cnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJv
Z3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFi
bGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAg
KiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBh
dA0KQEAgLTQwOSw3ICs0MDksNyBAQA0KIH0NCiANCiBwdWJsaWMgZmluYWwgaW50IHJlY29yZElu
aXRpYWxpemF0aW9uU3RhdGVzKEZsb3dJbmZvIGZsb3dJbmZvKSB7DQotCWlmICgoZmxvd0luZm8u
dGFnQml0cyAmIEZsb3dJbmZvLlVOUkVBQ0hBQkxFKSAhPSAwKSByZXR1cm4gLTE7DQorCWlmICgo
Zmxvd0luZm8udGFnQml0cyAmIEZsb3dJbmZvLlVOUkVBQ0hBQkxFX09SX0RFQUQpICE9IDApIHJl
dHVybiAtMTsNCiAJVW5jb25kaXRpb25hbEZsb3dJbmZvIHVuY29uZGl0aW9uYWxGbG93SW5mbyA9
IGZsb3dJbmZvLnVuY29uZGl0aW9uYWxJbml0c1dpdGhvdXRTaWRlRWZmZWN0KCk7DQogCWxvbmdb
XSBleHRyYUluaXRzID0gdW5jb25kaXRpb25hbEZsb3dJbmZvLmV4dHJhID09IG51bGwgPw0KIAkJ
CW51bGwgOiB1bmNvbmRpdGlvbmFsRmxvd0luZm8uZXh0cmFbMF07DQo=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>190644</attachid>
            <date>2011-03-08 06:53:00 -0500</date>
            <delta_ts>2011-03-08 11:35:32 -0500</delta_ts>
            <desc>fix + tests</desc>
            <filename>patch339139.txt</filename>
            <type>text/plain</type>
            <size>14987</size>
            <attacher name="Ayushman Jain">amj87.iitr</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0xv
Y2FsRGVjbGFyYXRpb24uamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlw
c2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2FzdC9Mb2NhbERlY2xhcmF0aW9uLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lv
biAxLjc5DQpkaWZmIC11IC1yMS43OSBMb2NhbERlY2xhcmF0aW9uLmphdmENCi0tLSBjb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0xvY2FsRGVjbGFyYXRpb24u
amF2YQk4IEZlYiAyMDExIDA1OjU5OjE3IC0wMDAwCTEuNzkNCisrKyBjb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0xvY2FsRGVjbGFyYXRpb24uamF2YQk4IE1h
ciAyMDExIDExOjUxOjMyIC0wMDAwDQpAQCAtMzgsNyArMzgsNyBAQA0KIA0KIHB1YmxpYyBGbG93
SW5mbyBhbmFseXNlQ29kZShCbG9ja1Njb3BlIGN1cnJlbnRTY29wZSwgRmxvd0NvbnRleHQgZmxv
d0NvbnRleHQsIEZsb3dJbmZvIGZsb3dJbmZvKSB7DQogCS8vIHJlY29yZCB2YXJpYWJsZSBpbml0
aWFsaXphdGlvbiBpZiBhbnkNCi0JaWYgKChmbG93SW5mby50YWdCaXRzICYgRmxvd0luZm8uVU5S
RUFDSEFCTEUpID09IDApIHsNCisJaWYgKChmbG93SW5mby50YWdCaXRzICYgRmxvd0luZm8uVU5S
RUFDSEFCTEVfT1JfREVBRCkgPT0gMCkgew0KIAkJdGhpcy5iaXRzIHw9IEFTVE5vZGUuSXNMb2Nh
bERlY2xhcmF0aW9uUmVhY2hhYmxlOyAvLyBvbmx5IHNldCBpZiBhY3R1YWxseSByZWFjaGVkDQog
CX0NCiAJaWYgKHRoaXMuYmluZGluZyAhPSBudWxsICYmIHRoaXMudHlwZS5yZXNvbHZlZFR5cGUg
aW5zdGFuY2VvZiBUeXBlVmFyaWFibGVCaW5kaW5nKSB7DQpJbmRleDogY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9UcnlTdGF0ZW1lbnQuamF2YQ0KPT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9UcnlTdGF0ZW1lbnQu
amF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTE4DQpkaWZmIC11IC1yMS4xMTggVHJ5U3Rh
dGVtZW50LmphdmENCi0tLSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L1RyeVN0YXRlbWVudC5qYXZhCTUgTWFyIDIwMTEgMTc6MTg6NDMgLTAwMDAJMS4xMTgN
CisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1RyeVN0
YXRlbWVudC5qYXZhCTggTWFyIDIwMTEgMTE6NTE6MzIgLTAwMDANCkBAIC0xNTksNyArMTU5LDcg
QEANCiAJCQkJCQljYXRjaEluZm8pOw0KIAkJCQl0aGlzLmNhdGNoRXhpdEluaXRTdGF0ZUluZGV4
ZXNbaV0gPSBjdXJyZW50U2NvcGUubWV0aG9kU2NvcGUoKS5yZWNvcmRJbml0aWFsaXphdGlvblN0
YXRlcyhjYXRjaEluZm8pOw0KIAkJCQl0aGlzLmNhdGNoRXhpdHNbaV0gPQ0KLQkJCQkJKGNhdGNo
SW5mby50YWdCaXRzICYgRmxvd0luZm8uVU5SRUFDSEFCTEUpICE9IDA7DQorCQkJCQkoY2F0Y2hJ
bmZvLnRhZ0JpdHMgJiBGbG93SW5mby5VTlJFQUNIQUJMRV9PUl9ERUFEKSAhPSAwOw0KIAkJCQl0
cnlJbmZvID0gdHJ5SW5mby5tZXJnZWRXaXRoKGNhdGNoSW5mby51bmNvbmRpdGlvbmFsSW5pdHMo
KSk7DQogCQkJfQ0KIAkJfQ0KQEAgLTI2OCw3ICsyNjgsNyBAQA0KIAkJCQkJCWNhdGNoSW5mbyk7
DQogCQkJCXRoaXMuY2F0Y2hFeGl0SW5pdFN0YXRlSW5kZXhlc1tpXSA9IGN1cnJlbnRTY29wZS5t
ZXRob2RTY29wZSgpLnJlY29yZEluaXRpYWxpemF0aW9uU3RhdGVzKGNhdGNoSW5mbyk7DQogCQkJ
CXRoaXMuY2F0Y2hFeGl0c1tpXSA9DQotCQkJCQkoY2F0Y2hJbmZvLnRhZ0JpdHMgJiBGbG93SW5m
by5VTlJFQUNIQUJMRSkgIT0gMDsNCisJCQkJCShjYXRjaEluZm8udGFnQml0cyAmIEZsb3dJbmZv
LlVOUkVBQ0hBQkxFX09SX0RFQUQpICE9IDA7DQogCQkJCXRyeUluZm8gPSB0cnlJbmZvLm1lcmdl
ZFdpdGgoY2F0Y2hJbmZvLnVuY29uZGl0aW9uYWxJbml0cygpKTsNCiAJCQl9DQogCQl9DQpJbmRl
eDogY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvRXhjZXB0
aW9uSGFuZGxpbmdGbG93Q29udGV4dC5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jv
b3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvZmxvdy9FeGNlcHRpb25IYW5kbGluZ0Zsb3dDb250ZXh0LmphdmEs
dg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjQ1DQpkaWZmIC11IC1yMS40NSBFeGNlcHRpb25IYW5k
bGluZ0Zsb3dDb250ZXh0LmphdmENCi0tLSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvZmxvdy9FeGNlcHRpb25IYW5kbGluZ0Zsb3dDb250ZXh0LmphdmEJNyBNYXIg
MjAwOSAwMDo1OTowNiAtMDAwMAkxLjQ1DQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2Zsb3cvRXhjZXB0aW9uSGFuZGxpbmdGbG93Q29udGV4dC5qYXZhCTgg
TWFyIDIwMTEgMTE6NTE6MzIgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDA5IElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24g
YW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRo
ZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRo
ZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNj
b21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC0yMjcs
OCArMjI3LDggQEANCiB9DQogDQogcHVibGljIHZvaWQgcmVjb3JkUmV0dXJuRnJvbShVbmNvbmRp
dGlvbmFsRmxvd0luZm8gZmxvd0luZm8pIHsNCi0JaWYgKChmbG93SW5mby50YWdCaXRzICYgRmxv
d0luZm8uVU5SRUFDSEFCTEUpID09IDApIHsNCi0JCWlmICgodGhpcy5pbml0c09uUmV0dXJuLnRh
Z0JpdHMgJiBGbG93SW5mby5VTlJFQUNIQUJMRSkgPT0gMCkgew0KKwlpZiAoKGZsb3dJbmZvLnRh
Z0JpdHMgJiBGbG93SW5mby5VTlJFQUNIQUJMRV9PUl9ERUFEKSA9PSAwKSB7DQorCQlpZiAoKHRo
aXMuaW5pdHNPblJldHVybi50YWdCaXRzICYgRmxvd0luZm8uVU5SRUFDSEFCTEVfT1JfREVBRCkg
PT0gMCkgew0KIAkJCXRoaXMuaW5pdHNPblJldHVybiA9IHRoaXMuaW5pdHNPblJldHVybi5tZXJn
ZWRXaXRoKGZsb3dJbmZvKTsNCiAJCX0NCiAJCWVsc2Ugew0KSW5kZXg6IGNvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L0luc2lkZVN1YlJvdXRpbmVGbG93Q29u
dGV4dC5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
Zmxvdy9JbnNpZGVTdWJSb3V0aW5lRmxvd0NvbnRleHQuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlz
aW9uIDEuMjENCmRpZmYgLXUgLXIxLjIxIEluc2lkZVN1YlJvdXRpbmVGbG93Q29udGV4dC5qYXZh
DQotLS0gY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvSW5z
aWRlU3ViUm91dGluZUZsb3dDb250ZXh0LmphdmEJNyBNYXIgMjAwOSAwMTowODoxMCAtMDAwMAkx
LjIxDQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cv
SW5zaWRlU3ViUm91dGluZUZsb3dDb250ZXh0LmphdmEJOCBNYXIgMjAxMSAxMTo1MTozMiAtMDAw
MA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmln
aHQgKGMpIDIwMDAsIDIwMDkgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCBy
aWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlh
bHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNl
IFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1
dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTQzLDcgKzQzLDcgQEANCiB9DQogDQogcHVi
bGljIHZvaWQgcmVjb3JkUmV0dXJuRnJvbShVbmNvbmRpdGlvbmFsRmxvd0luZm8gZmxvd0luZm8p
IHsNCi0JaWYgKChmbG93SW5mby50YWdCaXRzICYgRmxvd0luZm8uVU5SRUFDSEFCTEUpID09IDAp
CXsNCisJaWYgKChmbG93SW5mby50YWdCaXRzICYgRmxvd0luZm8uVU5SRUFDSEFCTEVfT1JfREVB
RCkgPT0gMCkJew0KIAlpZiAodGhpcy5pbml0c09uUmV0dXJuID09IEZsb3dJbmZvLkRFQURfRU5E
KSB7DQogCQl0aGlzLmluaXRzT25SZXR1cm4gPSAoVW5jb25kaXRpb25hbEZsb3dJbmZvKSBmbG93
SW5mby5jb3B5KCk7DQogCX0gZWxzZSB7DQpJbmRleDogY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvTG9vcGluZ0Zsb3dDb250ZXh0LmphdmENCj09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L0xvb3BpbmdGbG93Q29u
dGV4dC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS41NQ0KZGlmZiAtdSAtcjEuNTUgTG9v
cGluZ0Zsb3dDb250ZXh0LmphdmENCi0tLSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvZmxvdy9Mb29waW5nRmxvd0NvbnRleHQuamF2YQk1IE1hciAyMDExIDE3OjE4
OjQzIC0wMDAwCTEuNTUNCisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvZmxvdy9Mb29waW5nRmxvd0NvbnRleHQuamF2YQk4IE1hciAyMDExIDExOjUxOjMyIC0w
MDAwDQpAQCAtMzg1LDggKzM4NSw4IEBADQogfQ0KIA0KIHB1YmxpYyB2b2lkIHJlY29yZENvbnRp
bnVlRnJvbShGbG93Q29udGV4dCBpbm5lckZsb3dDb250ZXh0LCBGbG93SW5mbyBmbG93SW5mbykg
ew0KLQlpZiAoKGZsb3dJbmZvLnRhZ0JpdHMgJiBGbG93SW5mby5VTlJFQUNIQUJMRSkgPT0gMCkJ
ew0KLQkJaWYgKCh0aGlzLmluaXRzT25Db250aW51ZS50YWdCaXRzICYgRmxvd0luZm8uVU5SRUFD
SEFCTEUpID09IDApIHsNCisJaWYgKChmbG93SW5mby50YWdCaXRzICYgRmxvd0luZm8uVU5SRUFD
SEFCTEVfT1JfREVBRCkgPT0gMCkJew0KKwkJaWYgKCh0aGlzLmluaXRzT25Db250aW51ZS50YWdC
aXRzICYgRmxvd0luZm8uVU5SRUFDSEFCTEVfT1JfREVBRCkgPT0gMCkgew0KIAkJCXRoaXMuaW5p
dHNPbkNvbnRpbnVlID0gdGhpcy5pbml0c09uQ29udGludWUuDQogCQkJCQltZXJnZWRXaXRoKGZs
b3dJbmZvLnVuY29uZGl0aW9uYWxJbml0c1dpdGhvdXRTaWRlRWZmZWN0KCkpOw0KIAkJfQ0KSW5k
ZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L1N3aXRj
aEZsb3dDb250ZXh0LmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNl
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9mbG93L1N3aXRjaEZsb3dDb250ZXh0LmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lv
biAxLjMyDQpkaWZmIC11IC1yMS4zMiBTd2l0Y2hGbG93Q29udGV4dC5qYXZhDQotLS0gY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvU3dpdGNoRmxvd0NvbnRl
eHQuamF2YQk3IE1hciAyMDA5IDAxOjA4OjEwIC0wMDAwCTEuMzINCisrKyBjb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxvdy9Td2l0Y2hGbG93Q29udGV4dC5qYXZh
CTggTWFyIDIwMTEgMTE6NTE6MzIgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDA5IElCTSBDb3Jwb3JhdGlv
biBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5k
IHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVy
IHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2gg
YWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC00
Miw3ICs0Miw3IEBADQogfQ0KIA0KIHB1YmxpYyB2b2lkIHJlY29yZEJyZWFrRnJvbShGbG93SW5m
byBmbG93SW5mbykgew0KLQlpZiAoKHRoaXMuaW5pdHNPbkJyZWFrLnRhZ0JpdHMgJiBGbG93SW5m
by5VTlJFQUNIQUJMRSkgPT0gMCkgew0KKwlpZiAoKHRoaXMuaW5pdHNPbkJyZWFrLnRhZ0JpdHMg
JiBGbG93SW5mby5VTlJFQUNIQUJMRV9PUl9ERUFEKSA9PSAwKSB7DQogCQl0aGlzLmluaXRzT25C
cmVhayA9IHRoaXMuaW5pdHNPbkJyZWFrLm1lcmdlZFdpdGgoZmxvd0luZm8udW5jb25kaXRpb25h
bEluaXRzKCkpOw0KIAl9DQogCWVsc2Ugew0KSW5kZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvTWV0aG9kU2NvcGUuamF2YQ0KPT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0K
UkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RTY29wZS5qYXZh
LHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS43OA0KZGlmZiAtdSAtcjEuNzggTWV0aG9kU2NvcGUu
amF2YQ0KLS0tIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29r
dXAvTWV0aG9kU2NvcGUuamF2YQkxIE5vdiAyMDEwIDE0OjE1OjQ3IC0wMDAwCTEuNzgNCisrKyBj
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL01ldGhvZFNj
b3BlLmphdmEJOCBNYXIgMjAxMSAxMTo1MTozMiAtMDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENv
cnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJv
Z3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFi
bGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAg
KiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBh
dA0KQEAgLTQwOSw3ICs0MDksNyBAQA0KIH0NCiANCiBwdWJsaWMgZmluYWwgaW50IHJlY29yZElu
aXRpYWxpemF0aW9uU3RhdGVzKEZsb3dJbmZvIGZsb3dJbmZvKSB7DQotCWlmICgoZmxvd0luZm8u
dGFnQml0cyAmIEZsb3dJbmZvLlVOUkVBQ0hBQkxFKSAhPSAwKSByZXR1cm4gLTE7DQorCWlmICgo
Zmxvd0luZm8udGFnQml0cyAmIEZsb3dJbmZvLlVOUkVBQ0hBQkxFX09SX0RFQUQpICE9IDApIHJl
dHVybiAtMTsNCiAJVW5jb25kaXRpb25hbEZsb3dJbmZvIHVuY29uZGl0aW9uYWxGbG93SW5mbyA9
IGZsb3dJbmZvLnVuY29uZGl0aW9uYWxJbml0c1dpdGhvdXRTaWRlRWZmZWN0KCk7DQogCWxvbmdb
XSBleHRyYUluaXRzID0gdW5jb25kaXRpb25hbEZsb3dJbmZvLmV4dHJhID09IG51bGwgPw0KIAkJ
CW51bGwgOiB1bmNvbmRpdGlvbmFsRmxvd0luZm8uZXh0cmFbMF07DQojUCBvcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cw0KSW5kZXg6IEVjbGlwc2UgSmF2YSBUZXN0cyBDb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Db25mb3JtVGVzdC5qYXZhDQo9PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09DQpSQ1MgZmlsZTogL2hvbWUvY3ZzL251bWJhdC9vcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy9FY2xpcHNlIEphdmEgVGVzdHMgQ29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vQ29uZm9ybVRlc3QuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9u
IDEuMTU3DQpkaWZmIC11IC1yMS4xNTcgQ29uZm9ybVRlc3QuamF2YQ0KLS0tIEVjbGlwc2UgSmF2
YSBUZXN0cyBDb21waWxlci9vcmcvZWNsaXBzZS9qZHQvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lv
bi9Db25mb3JtVGVzdC5qYXZhCTUgTWFyIDIwMTEgMTc6MTg6MjkgLTAwMDAJMS4xNTcNCisrKyBF
Y2xpcHNlIEphdmEgVGVzdHMgQ29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L3Rlc3RzL2NvbXBpbGVy
L3JlZ3Jlc3Npb24vQ29uZm9ybVRlc3QuamF2YQk4IE1hciAyMDExIDExOjUxOjM0IC0wMDAwDQpA
QCAtNjY4OCwxNSArNjY4OCwxMyBAQA0KIAkJCSIgICAgICAgIFtwYzogMCwgcGM6IDk2XSBsb2Nh
bDogZGVsZXRlIGluZGV4OiAxIHR5cGU6IGJvb2xlYW5cbiIgKyANCiAJCQkiICAgICAgICBbcGM6
IDUsIHBjOiA5Nl0gbG9jYWw6IHMgaW5kZXg6IDIgdHlwZTogamF2YS5sYW5nLlN0cmluZ1xuIiAr
IA0KIAkJCSIgICAgICAgIFtwYzogMTMsIHBjOiA5Nl0gbG9jYWw6IGJ1ZmZlciBpbmRleDogMyB0
eXBlOiBqYXZhLmxhbmcuU3RyaW5nQnVmZmVyXG4iICsgDQotCQkJIiAgICAgICAgW3BjOiAyNCwg
cGM6IDU5XSBsb2NhbDogZGF0YXMgaW5kZXg6IDQgdHlwZTogamF2YS5sYW5nLlN0cmluZ1tdXG4i
ICsgDQotCQkJIiAgICAgICAgW3BjOiA2MiwgcGM6IDc5XSBsb2NhbDogZGF0YXMgaW5kZXg6IDQg
dHlwZTogamF2YS5sYW5nLlN0cmluZ1tdXG4iICsgDQotCQkJIiAgICAgICAgW3BjOiAzNCwgcGM6
IDU5XSBsb2NhbDogZGF0YSBpbmRleDogNSB0eXBlOiBqYXZhLmxhbmcuT2JqZWN0W11cbiIgKyAN
Ci0JCQkiICAgICAgICBbcGM6IDYyLCBwYzogNzldIGxvY2FsOiBkYXRhIGluZGV4OiA1IHR5cGU6
IGphdmEubGFuZy5PYmplY3RbXVxuIiArIA0KLQkJCSIgICAgICAgIFtwYzogNTEsIHBjOiA1OV0g
bG9jYWw6IGUgaW5kZXg6IDYgdHlwZTogamF2YS5sYW5nLkV4Y2VwdGlvblxuIiArIA0KKwkJCSIg
ICAgICAgIFtwYzogMjQsIHBjOiA3OV0gbG9jYWw6IGRhdGFzIGluZGV4OiA0IHR5cGU6IGphdmEu
bGFuZy5TdHJpbmdbXVxuIiArIA0KKwkJCSIgICAgICAgIFtwYzogMzQsIHBjOiA3OV0gbG9jYWw6
IGRhdGEgaW5kZXg6IDUgdHlwZTogamF2YS5sYW5nLk9iamVjdFtdXG4iICsgDQorCQkJIiAgICAg
ICAgW3BjOiA1MSwgcGM6IDYyXSBsb2NhbDogZSBpbmRleDogNiB0eXBlOiBqYXZhLmxhbmcuRXhj
ZXB0aW9uXG4iICsgDQogCQkJIiAgICAgIFN0YWNrIG1hcCB0YWJsZTogbnVtYmVyIG9mIGZyYW1l
cyA4XG4iICsgDQogCQkJIiAgICAgICAgW3BjOiA0OSwgZnVsbCwgc3RhY2s6IHtqYXZhLmxhbmcu
RXhjZXB0aW9ufSwgbG9jYWxzOiB7WCwgaW50LCBqYXZhLmxhbmcuU3RyaW5nLCBqYXZhLmxhbmcu
U3RyaW5nQnVmZmVyLCBqYXZhLmxhbmcuU3RyaW5nW10sIGphdmEubGFuZy5PYmplY3RbXX1dXG4i
ICsgDQotCQkJIiAgICAgICAgW3BjOiA1OSwgY2hvcCAyIGxvY2FsKHMpXVxuIiArIA0KLQkJCSIg
ICAgICAgIFtwYzogNjIsIGFwcGVuZDoge2phdmEubGFuZy5TdHJpbmdbXSwgamF2YS5sYW5nLk9i
amVjdFtdfV1cbiIgKyANCisJCQkiICAgICAgICBbcGM6IDU5LCBhcHBlbmQ6IHtqYXZhLmxhbmcu
RXhjZXB0aW9ufV1cbiIgKyANCisJCQkiICAgICAgICBbcGM6IDYyLCBjaG9wIDEgbG9jYWwocyld
XG4iICsgDQogCQkJIiAgICAgICAgW3BjOiA3Niwgc2FtZV1cbiIgKyANCiAJCQkiICAgICAgICBb
cGM6IDc5LCBmdWxsLCBzdGFjazoge2phdmEubGFuZy5FeGNlcHRpb259LCBsb2NhbHM6IHtYLCBp
bnQsIGphdmEubGFuZy5TdHJpbmcsIGphdmEubGFuZy5TdHJpbmdCdWZmZXJ9XVxuIiArIA0KIAkJ
CSIgICAgICAgIFtwYzogODYsIHNhbWVfbG9jYWxzXzFfc3RhY2tfaXRlbSwgc3RhY2s6IHtqYXZh
LmxhbmcuVGhyb3dhYmxlfV1cbiIgKyANCkBAIC03NTY5LDYgKzc1NjcsNDYgQEANCiAJfQ0KIH0N
CiANCisvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMDM0
NDgNCisvL1RvIGNoZWNrIHRoYXQgY29kZSBnZW4gaXMgbm90IG9wdGltaXplZCBmb3IgYW4gaWYg
c3RhdGVtZW50DQorLy93aGVyZSBhIGxvY2FsIHZhcmlhYmxlJ3MgZGVmaW5pdGUgbnVsbG5lc3Mg
b3Igb3RoZXJ3aXNlIGlzIGtub3duIGJlY2F1c2Ugb2YNCisvL2FuIGVhcmxpZXIgYXNzZXJ0IGV4
cHJlc3Npb24gKGluc2lkZSBmaW5hbGx5IGNvbnRleHQpDQorcHVibGljIHZvaWQgdGVzdEJ1ZzMz
OTEzOSgpIHRocm93cyBFeGNlcHRpb24gew0KKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KA0KKwkJbmV3
IFN0cmluZ1tdIHsNCisJCQkiWC5qYXZhIiwNCisJCQkicHVibGljIGFic3RyYWN0IGNsYXNzIFgg
e1xuIiArDQorCQkJIgkgcHJpdmF0ZSBzdGF0aWMgT2JqZWN0W10gYmFyKCkge1xuIiArDQorCQkJ
IgkJcmV0dXJuIG51bGw7XG4iICsNCisJCQkiCX1cbiIgKw0KKwkJCSIJcHJvdGVjdGVkIGZpbmFs
IE9iamVjdCBmb28oKSB7XG4iICsNCisJCQkiCQlPYmplY3RbXSB0YWIgPSBudWxsO1xuIiArDQor
CQkJIgkJaWYodGFiICE9IG51bGwpIHtcbiIgKw0KKwkJCSIJCQlPYmplY3RbXSB2ID0gYmFyKCk7
IFxuIiArDQorCQkJIgkJCWludCBsZW5ndGggPSB0YWIubGVuZ3RoO1xuIiArDQorCQkJIgkJCWxv
b3AgOiBmb3IgKGludCBpID0gMCwgbWF4ID0gdi5sZW5ndGg7IGkgPCBtYXg7IGkrKykge1xuIiAr
DQorCQkJIgkJCQlPYmplY3QgbyA9IHZbaV07XG4iICsNCisJCQkiCQkJCWlmIChvID09IG51bGwp
ICBjb250aW51ZSBsb29wO1xuIiArDQorCQkJIgkJCQlpZigwID09IGxlbmd0aCkge1xuIiArDQor
CQkJIgkJCQkJbG9vcDIgOiBmb3IgKGludCBqID0gMDsgaiA8IGxlbmd0aDsgaisrKSB7XG4iICsN
CisJCQkiCQkJCQkJT2JqZWN0IG8yID0gbnVsbDtcbiIgKw0KKwkJCSIJCQkJCQlmb3IgKGludCBr
ID0gMDsgayA8IGxlbmd0aDsgaysrKSB7XG4iICsNCisJCQkiCQkJCQkJCWlmIChvMiA9PSB0YWJb
a10pIHtcbiIgKw0KKwkJCSIJCQkJCQkJCWNvbnRpbnVlIGxvb3AyO1xuIiArDQorCQkJIgkJCQkJ
CQl9XG4iICsNCisJCQkiCQkJCQkJfVxuIiArDQorCQkJIgkJCQkJCWNvbnRpbnVlIGxvb3A7XG4i
ICsNCisJCQkiCQkJCQl9XG4iICsNCisJCQkiCQkJCQlyZXR1cm4gbztcbiIgKw0KKwkJCSIJCQkJ
fVxuIiArDQorCQkJIgkJCX1cbiIgKw0KKwkJCSIJCX1cbiIgKw0KKwkJCSIJCXJldHVybiBudWxs
O1xuIiArDQorCQkJIgl9XG4iICsNCisJCQkifVxuIiwNCisJCX0pOyAvLyBjdXN0b20gcmVxdWVz
dG9yDQorfQ0KKw0KIHB1YmxpYyBzdGF0aWMgQ2xhc3MgdGVzdENsYXNzKCkgew0KIAlyZXR1cm4g
Q29uZm9ybVRlc3QuY2xhc3M7DQogfQ0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29t
cGlsZXINCkluZGV4OiBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVn
cmVzc2lvbi9Qcm9ncmFtbWluZ1Byb2JsZW1zVGVzdC5qYXZhDQo9PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmls
ZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Qcm9ncmFt
bWluZ1Byb2JsZW1zVGVzdC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4zMQ0KZGlmZiAt
dSAtcjEuMzEgUHJvZ3JhbW1pbmdQcm9ibGVtc1Rlc3QuamF2YQ0KLS0tIHNyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Byb2dyYW1taW5nUHJvYmxlbXNU
ZXN0LmphdmEJMTYgRmViIDIwMTEgMDg6MDk6MTUgLTAwMDAJMS4zMQ0KKysrIHNyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Byb2dyYW1taW5nUHJvYmxl
bXNUZXN0LmphdmEJOCBNYXIgMjAxMSAxMTo1MTozNiAtMDAwMA0KQEAgLTM2LDcgKzM2LDcgQEAN
CiAgIAkvLyBPbmx5IHRoZSBoaWdoZXN0IGNvbXBsaWFuY2UgbGV2ZWwgaXMgcnVuOyBhZGQgdGhl
IFZNIGFyZ3VtZW50DQogICAJLy8gLURjb21wbGlhbmNlPTEuNCAoZm9yIGV4YW1wbGUpIHRvIGxv
d2VyIGl0IGlmIG5lZWRlZA0KICAgCXN0YXRpYyB7DQotLy8gICAgCVRFU1RTX05BTUVTID0gbmV3
IFN0cmluZ1tdIHsgInRlc3QwMDU1IiB9Ow0KKyAgICAJVEVTVFNfTkFNRVMgPSBuZXcgU3RyaW5n
W10geyAidGVzdDAwNTkiIH07DQogLy8JCVRFU1RTX05VTUJFUlMgPSBuZXcgaW50W10geyA1NiB9
Ow0KIC8vICAJVEVTVFNfUkFOR0UgPSBuZXcgaW50W10geyAxLCAtMSB9Ow0KICAgCX0NCkBAIC0y
MzA5LDQgKzIzMDksNDIgQEANCiAJCQl0cnVlLypzaG91bGRGbHVzaE91dHB1dERpcmVjdG9yeSov
LA0KIAkJCWN1c3RvbU9wdGlvbnMpOw0KIH0NCisvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzM5MTM5DQorLy8gSXNzdWUgbG9jYWwgdmFyaWFibGUgbm90
IHVzZWQgd2FybmluZyBpbnNpZGUgZGVhZGNvZGUNCitwdWJsaWMgdm9pZCB0ZXN0MDA1OSgpIHRo
cm93cyBFeGNlcHRpb24gew0KKwlNYXAgY3VzdG9tT3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9u
cygpOw0KKwljdXN0b21PcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVu
dXNlZExvY2FsLCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7DQorCWN1c3RvbU9wdGlvbnMucHV0
KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0RGVhZENvZGUsIENvbXBpbGVyT3B0aW9ucy5X
QVJOSU5HKTsNCisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoDQorCQluZXcgU3RyaW5nW10gew0KKwkJ
CSJYLmphdmEiLA0KKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsgDQorCQkJIiAgICBwdWJsaWMg
c3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iICsgDQorCQkJIiAgICAJT2JqZWN0
IGEgPSBudWxsO1xuIiArIA0KKwkJCSIgICAgCWlmIChhICE9IG51bGwpe1xuIiArIA0KKwkJCSIg
ICAgICAgIAlpbnQgaiA9IDM7XG4iICsgDQorCQkJIiAgICAgICAgCWorKztcbiIgKyAJLy8gdmFs
dWUgaXMgbm90IHVzZWQNCisJCQkiICAgIAl9XG4iICsNCisJCQkiICAgIAlTeXN0ZW0ub3V0LnBy
aW50bG4oXCJPS1wiKTtcbiIgKyANCisJCQkiICAgIH1cbiIgKyANCisJCQkifSINCisJCX0sDQor
CQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJIjEuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDQp
XG4iICsgDQorCQkiCWlmIChhICE9IG51bGwpe1xuIiArIA0KKwkJIiAgICAgICAgCWludCBqID0g
MztcbiIgKyANCisJCSIgICAgICAgIAlqKys7XG4iICsgDQorCQkiICAgIAl9XG4iICsgDQorCQki
CSAgICAgICAgICAgICAgXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5e
XG4iICsgDQorCQkiRGVhZCBjb2RlXG4iICsgDQorCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJIjIu
IFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDUpXG4iICsgDQorCQkiCWludCBqID0gMztcbiIg
KyANCisJCSIJICAgIF5cbiIgKyANCisJCSJUaGUgdmFsdWUgb2YgdGhlIGxvY2FsIHZhcmlhYmxl
IGogaXMgbm90IHVzZWRcbiIgKyANCisJCSItLS0tLS0tLS0tXG4iLA0KKwkJbnVsbC8qY2xhc3NM
aWJyYXJpZXMqLywNCisJCXRydWUvKnNob3VsZEZsdXNoT3V0cHV0RGlyZWN0b3J5Ki8sDQorCQlj
dXN0b21PcHRpb25zKTsNCit9DQogfQ0KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlDQo=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>190668</attachid>
            <date>2011-03-08 11:35:00 -0500</date>
            <delta_ts>2011-03-08 11:47:32 -0500</delta_ts>
            <desc>same fix with suggested changes</desc>
            <filename>patch339139.txt</filename>
            <type>text/plain</type>
            <size>15890</size>
            <attacher name="Ayushman Jain">amj87.iitr</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0xv
Y2FsRGVjbGFyYXRpb24uamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlw
c2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2FzdC9Mb2NhbERlY2xhcmF0aW9uLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lv
biAxLjc5DQpkaWZmIC11IC1yMS43OSBMb2NhbERlY2xhcmF0aW9uLmphdmENCi0tLSBjb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0xvY2FsRGVjbGFyYXRpb24u
amF2YQk4IEZlYiAyMDExIDA1OjU5OjE3IC0wMDAwCTEuNzkNCisrKyBjb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0xvY2FsRGVjbGFyYXRpb24uamF2YQk4IE1h
ciAyMDExIDE2OjMzOjQ2IC0wMDAwDQpAQCAtMzgsNyArMzgsNyBAQA0KIA0KIHB1YmxpYyBGbG93
SW5mbyBhbmFseXNlQ29kZShCbG9ja1Njb3BlIGN1cnJlbnRTY29wZSwgRmxvd0NvbnRleHQgZmxv
d0NvbnRleHQsIEZsb3dJbmZvIGZsb3dJbmZvKSB7DQogCS8vIHJlY29yZCB2YXJpYWJsZSBpbml0
aWFsaXphdGlvbiBpZiBhbnkNCi0JaWYgKChmbG93SW5mby50YWdCaXRzICYgRmxvd0luZm8uVU5S
RUFDSEFCTEUpID09IDApIHsNCisJaWYgKChmbG93SW5mby50YWdCaXRzICYgRmxvd0luZm8uVU5S
RUFDSEFCTEVfT1JfREVBRCkgPT0gMCkgew0KIAkJdGhpcy5iaXRzIHw9IEFTVE5vZGUuSXNMb2Nh
bERlY2xhcmF0aW9uUmVhY2hhYmxlOyAvLyBvbmx5IHNldCBpZiBhY3R1YWxseSByZWFjaGVkDQog
CX0NCiAJaWYgKHRoaXMuYmluZGluZyAhPSBudWxsICYmIHRoaXMudHlwZS5yZXNvbHZlZFR5cGUg
aW5zdGFuY2VvZiBUeXBlVmFyaWFibGVCaW5kaW5nKSB7DQpJbmRleDogY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9UcnlTdGF0ZW1lbnQuamF2YQ0KPT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9UcnlTdGF0ZW1lbnQu
amF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTE4DQpkaWZmIC11IC1yMS4xMTggVHJ5U3Rh
dGVtZW50LmphdmENCi0tLSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L1RyeVN0YXRlbWVudC5qYXZhCTUgTWFyIDIwMTEgMTc6MTg6NDMgLTAwMDAJMS4xMTgN
CisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1RyeVN0
YXRlbWVudC5qYXZhCTggTWFyIDIwMTEgMTY6MzM6NDYgLTAwMDANCkBAIC0xNTksNyArMTU5LDcg
QEANCiAJCQkJCQljYXRjaEluZm8pOw0KIAkJCQl0aGlzLmNhdGNoRXhpdEluaXRTdGF0ZUluZGV4
ZXNbaV0gPSBjdXJyZW50U2NvcGUubWV0aG9kU2NvcGUoKS5yZWNvcmRJbml0aWFsaXphdGlvblN0
YXRlcyhjYXRjaEluZm8pOw0KIAkJCQl0aGlzLmNhdGNoRXhpdHNbaV0gPQ0KLQkJCQkJKGNhdGNo
SW5mby50YWdCaXRzICYgRmxvd0luZm8uVU5SRUFDSEFCTEUpICE9IDA7DQorCQkJCQkoY2F0Y2hJ
bmZvLnRhZ0JpdHMgJiBGbG93SW5mby5VTlJFQUNIQUJMRV9PUl9ERUFEKSAhPSAwOw0KIAkJCQl0
cnlJbmZvID0gdHJ5SW5mby5tZXJnZWRXaXRoKGNhdGNoSW5mby51bmNvbmRpdGlvbmFsSW5pdHMo
KSk7DQogCQkJfQ0KIAkJfQ0KQEAgLTI2OCw3ICsyNjgsNyBAQA0KIAkJCQkJCWNhdGNoSW5mbyk7
DQogCQkJCXRoaXMuY2F0Y2hFeGl0SW5pdFN0YXRlSW5kZXhlc1tpXSA9IGN1cnJlbnRTY29wZS5t
ZXRob2RTY29wZSgpLnJlY29yZEluaXRpYWxpemF0aW9uU3RhdGVzKGNhdGNoSW5mbyk7DQogCQkJ
CXRoaXMuY2F0Y2hFeGl0c1tpXSA9DQotCQkJCQkoY2F0Y2hJbmZvLnRhZ0JpdHMgJiBGbG93SW5m
by5VTlJFQUNIQUJMRSkgIT0gMDsNCisJCQkJCShjYXRjaEluZm8udGFnQml0cyAmIEZsb3dJbmZv
LlVOUkVBQ0hBQkxFX09SX0RFQUQpICE9IDA7DQogCQkJCXRyeUluZm8gPSB0cnlJbmZvLm1lcmdl
ZFdpdGgoY2F0Y2hJbmZvLnVuY29uZGl0aW9uYWxJbml0cygpKTsNCiAJCQl9DQogCQl9DQpJbmRl
eDogY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvRXhjZXB0
aW9uSGFuZGxpbmdGbG93Q29udGV4dC5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jv
b3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvZmxvdy9FeGNlcHRpb25IYW5kbGluZ0Zsb3dDb250ZXh0LmphdmEs
dg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjQ1DQpkaWZmIC11IC1yMS40NSBFeGNlcHRpb25IYW5k
bGluZ0Zsb3dDb250ZXh0LmphdmENCi0tLSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvZmxvdy9FeGNlcHRpb25IYW5kbGluZ0Zsb3dDb250ZXh0LmphdmEJNyBNYXIg
MjAwOSAwMDo1OTowNiAtMDAwMAkxLjQ1DQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2Zsb3cvRXhjZXB0aW9uSGFuZGxpbmdGbG93Q29udGV4dC5qYXZhCTgg
TWFyIDIwMTEgMTY6MzM6NDYgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDA5IElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24g
YW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRo
ZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRo
ZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNj
b21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC0yMjcs
OCArMjI3LDggQEANCiB9DQogDQogcHVibGljIHZvaWQgcmVjb3JkUmV0dXJuRnJvbShVbmNvbmRp
dGlvbmFsRmxvd0luZm8gZmxvd0luZm8pIHsNCi0JaWYgKChmbG93SW5mby50YWdCaXRzICYgRmxv
d0luZm8uVU5SRUFDSEFCTEUpID09IDApIHsNCi0JCWlmICgodGhpcy5pbml0c09uUmV0dXJuLnRh
Z0JpdHMgJiBGbG93SW5mby5VTlJFQUNIQUJMRSkgPT0gMCkgew0KKwlpZiAoKGZsb3dJbmZvLnRh
Z0JpdHMgJiBGbG93SW5mby5VTlJFQUNIQUJMRV9PUl9ERUFEKSA9PSAwKSB7DQorCQlpZiAoKHRo
aXMuaW5pdHNPblJldHVybi50YWdCaXRzICYgRmxvd0luZm8uVU5SRUFDSEFCTEVfT1JfREVBRCkg
PT0gMCkgew0KIAkJCXRoaXMuaW5pdHNPblJldHVybiA9IHRoaXMuaW5pdHNPblJldHVybi5tZXJn
ZWRXaXRoKGZsb3dJbmZvKTsNCiAJCX0NCiAJCWVsc2Ugew0KSW5kZXg6IGNvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L0Zsb3dDb250ZXh0LmphdmENCj09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L0Zsb3dDb250ZXh0
LmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjY5DQpkaWZmIC11IC1yMS42OSBGbG93Q29u
dGV4dC5qYXZhDQotLS0gY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2Zsb3cvRmxvd0NvbnRleHQuamF2YQk0IE1hciAyMDExIDEyOjQxOjIxIC0wMDAwCTEuNjkNCisr
KyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxvdy9GbG93Q29u
dGV4dC5qYXZhCTggTWFyIDIwMTEgMTY6MzM6NDYgLTAwMDANCkBAIC01MzAsNyArNTMwLDcgQEAN
CiB9DQogDQogcHVibGljIHZvaWQgcmVjb3JkU2V0dGluZ0ZpbmFsKFZhcmlhYmxlQmluZGluZyB2
YXJpYWJsZSwgUmVmZXJlbmNlIGZpbmFsUmVmZXJlbmNlLCBGbG93SW5mbyBmbG93SW5mbykgew0K
LQlpZiAoKGZsb3dJbmZvLnRhZ0JpdHMgJiBGbG93SW5mby5VTlJFQUNIQUJMRSkgPT0gMCkJew0K
KwlpZiAoKGZsb3dJbmZvLnRhZ0JpdHMgJiBGbG93SW5mby5VTlJFQUNIQUJMRV9PUl9ERUFEKSA9
PSAwKQl7DQogCS8vIGZvciBpbml0aWFsaXphdGlvbiBpbnNpZGUgbG9vcGluZyBzdGF0ZW1lbnQg
dGhhdCBlZmZlY3RpdmVseSBsb29wcw0KIAlGbG93Q29udGV4dCBjb250ZXh0ID0gdGhpczsNCiAJ
d2hpbGUgKGNvbnRleHQgIT0gbnVsbCkgew0KSW5kZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9mbG93L0luc2lkZVN1YlJvdXRpbmVGbG93Q29udGV4dC5qYXZh
DQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxvdy9JbnNp
ZGVTdWJSb3V0aW5lRmxvd0NvbnRleHQuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMjEN
CmRpZmYgLXUgLXIxLjIxIEluc2lkZVN1YlJvdXRpbmVGbG93Q29udGV4dC5qYXZhDQotLS0gY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvSW5zaWRlU3ViUm91
dGluZUZsb3dDb250ZXh0LmphdmEJNyBNYXIgMjAwOSAwMTowODoxMCAtMDAwMAkxLjIxDQorKysg
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvSW5zaWRlU3Vi
Um91dGluZUZsb3dDb250ZXh0LmphdmEJOCBNYXIgMjAxMSAxNjozMzo0NiAtMDAwMA0KQEAgLTEs
NSArMSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIw
MDAsIDIwMDkgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAy
MDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVz
ZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBh
cmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBM
aWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5k
IGlzIGF2YWlsYWJsZSBhdA0KQEAgLTQzLDcgKzQzLDcgQEANCiB9DQogDQogcHVibGljIHZvaWQg
cmVjb3JkUmV0dXJuRnJvbShVbmNvbmRpdGlvbmFsRmxvd0luZm8gZmxvd0luZm8pIHsNCi0JaWYg
KChmbG93SW5mby50YWdCaXRzICYgRmxvd0luZm8uVU5SRUFDSEFCTEUpID09IDApCXsNCisJaWYg
KChmbG93SW5mby50YWdCaXRzICYgRmxvd0luZm8uVU5SRUFDSEFCTEVfT1JfREVBRCkgPT0gMCkJ
ew0KIAlpZiAodGhpcy5pbml0c09uUmV0dXJuID09IEZsb3dJbmZvLkRFQURfRU5EKSB7DQogCQl0
aGlzLmluaXRzT25SZXR1cm4gPSAoVW5jb25kaXRpb25hbEZsb3dJbmZvKSBmbG93SW5mby5jb3B5
KCk7DQogCX0gZWxzZSB7DQpJbmRleDogY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2Zsb3cvTG9vcGluZ0Zsb3dDb250ZXh0LmphdmENCj09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBm
aWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L0xvb3BpbmdGbG93Q29udGV4dC5qYXZh
LHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS41NQ0KZGlmZiAtdSAtcjEuNTUgTG9vcGluZ0Zsb3dD
b250ZXh0LmphdmENCi0tLSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvZmxvdy9Mb29waW5nRmxvd0NvbnRleHQuamF2YQk1IE1hciAyMDExIDE3OjE4OjQzIC0wMDAw
CTEuNTUNCisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxv
dy9Mb29waW5nRmxvd0NvbnRleHQuamF2YQk4IE1hciAyMDExIDE2OjMzOjQ2IC0wMDAwDQpAQCAt
Mzg1LDggKzM4NSw4IEBADQogfQ0KIA0KIHB1YmxpYyB2b2lkIHJlY29yZENvbnRpbnVlRnJvbShG
bG93Q29udGV4dCBpbm5lckZsb3dDb250ZXh0LCBGbG93SW5mbyBmbG93SW5mbykgew0KLQlpZiAo
KGZsb3dJbmZvLnRhZ0JpdHMgJiBGbG93SW5mby5VTlJFQUNIQUJMRSkgPT0gMCkJew0KLQkJaWYg
KCh0aGlzLmluaXRzT25Db250aW51ZS50YWdCaXRzICYgRmxvd0luZm8uVU5SRUFDSEFCTEUpID09
IDApIHsNCisJaWYgKChmbG93SW5mby50YWdCaXRzICYgRmxvd0luZm8uVU5SRUFDSEFCTEVfT1Jf
REVBRCkgPT0gMCkJew0KKwkJaWYgKCh0aGlzLmluaXRzT25Db250aW51ZS50YWdCaXRzICYgRmxv
d0luZm8uVU5SRUFDSEFCTEVfT1JfREVBRCkgPT0gMCkgew0KIAkJCXRoaXMuaW5pdHNPbkNvbnRp
bnVlID0gdGhpcy5pbml0c09uQ29udGludWUuDQogCQkJCQltZXJnZWRXaXRoKGZsb3dJbmZvLnVu
Y29uZGl0aW9uYWxJbml0c1dpdGhvdXRTaWRlRWZmZWN0KCkpOw0KIAkJfQ0KSW5kZXg6IGNvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L1N3aXRjaEZsb3dDb250
ZXh0LmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9m
bG93L1N3aXRjaEZsb3dDb250ZXh0LmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjMyDQpk
aWZmIC11IC1yMS4zMiBTd2l0Y2hGbG93Q29udGV4dC5qYXZhDQotLS0gY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvU3dpdGNoRmxvd0NvbnRleHQuamF2YQk3
IE1hciAyMDA5IDAxOjA4OjEwIC0wMDAwCTEuMzINCisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxvdy9Td2l0Y2hGbG93Q29udGV4dC5qYXZhCTggTWFyIDIw
MTEgMTY6MzM6NDYgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDA5IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90
aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2Nv
bXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJt
cyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5p
ZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC00Miw3ICs0Miw3
IEBADQogfQ0KIA0KIHB1YmxpYyB2b2lkIHJlY29yZEJyZWFrRnJvbShGbG93SW5mbyBmbG93SW5m
bykgew0KLQlpZiAoKHRoaXMuaW5pdHNPbkJyZWFrLnRhZ0JpdHMgJiBGbG93SW5mby5VTlJFQUNI
QUJMRSkgPT0gMCkgew0KKwlpZiAoKHRoaXMuaW5pdHNPbkJyZWFrLnRhZ0JpdHMgJiBGbG93SW5m
by5VTlJFQUNIQUJMRV9PUl9ERUFEKSA9PSAwKSB7DQogCQl0aGlzLmluaXRzT25CcmVhayA9IHRo
aXMuaW5pdHNPbkJyZWFrLm1lcmdlZFdpdGgoZmxvd0luZm8udW5jb25kaXRpb25hbEluaXRzKCkp
Ow0KIAl9DQogCWVsc2Ugew0KSW5kZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9sb29rdXAvTWV0aG9kU2NvcGUuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6
IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RTY29wZS5qYXZhLHYNCnJldHJp
ZXZpbmcgcmV2aXNpb24gMS43OA0KZGlmZiAtdSAtcjEuNzggTWV0aG9kU2NvcGUuamF2YQ0KLS0t
IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvTWV0aG9k
U2NvcGUuamF2YQkxIE5vdiAyMDEwIDE0OjE1OjQ3IC0wMDAwCTEuNzgNCisrKyBjb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL01ldGhvZFNjb3BlLmphdmEJ
OCBNYXIgMjAxMSAxNjozMzo0NiAtMDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBvcmF0aW9u
IGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlv
biBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQg
dGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIg
dGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBh
Y2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTQw
OSw3ICs0MDksNyBAQA0KIH0NCiANCiBwdWJsaWMgZmluYWwgaW50IHJlY29yZEluaXRpYWxpemF0
aW9uU3RhdGVzKEZsb3dJbmZvIGZsb3dJbmZvKSB7DQotCWlmICgoZmxvd0luZm8udGFnQml0cyAm
IEZsb3dJbmZvLlVOUkVBQ0hBQkxFKSAhPSAwKSByZXR1cm4gLTE7DQorCWlmICgoZmxvd0luZm8u
dGFnQml0cyAmIEZsb3dJbmZvLlVOUkVBQ0hBQkxFX09SX0RFQUQpICE9IDApIHJldHVybiAtMTsN
CiAJVW5jb25kaXRpb25hbEZsb3dJbmZvIHVuY29uZGl0aW9uYWxGbG93SW5mbyA9IGZsb3dJbmZv
LnVuY29uZGl0aW9uYWxJbml0c1dpdGhvdXRTaWRlRWZmZWN0KCk7DQogCWxvbmdbXSBleHRyYUlu
aXRzID0gdW5jb25kaXRpb25hbEZsb3dJbmZvLmV4dHJhID09IG51bGwgPw0KIAkJCW51bGwgOiB1
bmNvbmRpdGlvbmFsRmxvd0luZm8uZXh0cmFbMF07DQojUCBvcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cw0KSW5kZXg6IEVjbGlwc2UgSmF2YSBUZXN0cyBDb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
dGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Db25mb3JtVGVzdC5qYXZhDQo9PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpS
Q1MgZmlsZTogL2hvbWUvY3ZzL251bWJhdC9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy9FY2xp
cHNlIEphdmEgVGVzdHMgQ29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L3Rlc3RzL2NvbXBpbGVyL3Jl
Z3Jlc3Npb24vQ29uZm9ybVRlc3QuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTU3DQpk
aWZmIC11IC1yMS4xNTcgQ29uZm9ybVRlc3QuamF2YQ0KLS0tIEVjbGlwc2UgSmF2YSBUZXN0cyBD
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Db25mb3Jt
VGVzdC5qYXZhCTUgTWFyIDIwMTEgMTc6MTg6MjkgLTAwMDAJMS4xNTcNCisrKyBFY2xpcHNlIEph
dmEgVGVzdHMgQ29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Np
b24vQ29uZm9ybVRlc3QuamF2YQk4IE1hciAyMDExIDE2OjM0OjAwIC0wMDAwDQpAQCAtNjY4OCwx
NSArNjY4OCwxMyBAQA0KIAkJCSIgICAgICAgIFtwYzogMCwgcGM6IDk2XSBsb2NhbDogZGVsZXRl
IGluZGV4OiAxIHR5cGU6IGJvb2xlYW5cbiIgKyANCiAJCQkiICAgICAgICBbcGM6IDUsIHBjOiA5
Nl0gbG9jYWw6IHMgaW5kZXg6IDIgdHlwZTogamF2YS5sYW5nLlN0cmluZ1xuIiArIA0KIAkJCSIg
ICAgICAgIFtwYzogMTMsIHBjOiA5Nl0gbG9jYWw6IGJ1ZmZlciBpbmRleDogMyB0eXBlOiBqYXZh
LmxhbmcuU3RyaW5nQnVmZmVyXG4iICsgDQotCQkJIiAgICAgICAgW3BjOiAyNCwgcGM6IDU5XSBs
b2NhbDogZGF0YXMgaW5kZXg6IDQgdHlwZTogamF2YS5sYW5nLlN0cmluZ1tdXG4iICsgDQotCQkJ
IiAgICAgICAgW3BjOiA2MiwgcGM6IDc5XSBsb2NhbDogZGF0YXMgaW5kZXg6IDQgdHlwZTogamF2
YS5sYW5nLlN0cmluZ1tdXG4iICsgDQotCQkJIiAgICAgICAgW3BjOiAzNCwgcGM6IDU5XSBsb2Nh
bDogZGF0YSBpbmRleDogNSB0eXBlOiBqYXZhLmxhbmcuT2JqZWN0W11cbiIgKyANCi0JCQkiICAg
ICAgICBbcGM6IDYyLCBwYzogNzldIGxvY2FsOiBkYXRhIGluZGV4OiA1IHR5cGU6IGphdmEubGFu
Zy5PYmplY3RbXVxuIiArIA0KLQkJCSIgICAgICAgIFtwYzogNTEsIHBjOiA1OV0gbG9jYWw6IGUg
aW5kZXg6IDYgdHlwZTogamF2YS5sYW5nLkV4Y2VwdGlvblxuIiArIA0KKwkJCSIgICAgICAgIFtw
YzogMjQsIHBjOiA3OV0gbG9jYWw6IGRhdGFzIGluZGV4OiA0IHR5cGU6IGphdmEubGFuZy5TdHJp
bmdbXVxuIiArIA0KKwkJCSIgICAgICAgIFtwYzogMzQsIHBjOiA3OV0gbG9jYWw6IGRhdGEgaW5k
ZXg6IDUgdHlwZTogamF2YS5sYW5nLk9iamVjdFtdXG4iICsgDQorCQkJIiAgICAgICAgW3BjOiA1
MSwgcGM6IDYyXSBsb2NhbDogZSBpbmRleDogNiB0eXBlOiBqYXZhLmxhbmcuRXhjZXB0aW9uXG4i
ICsgDQogCQkJIiAgICAgIFN0YWNrIG1hcCB0YWJsZTogbnVtYmVyIG9mIGZyYW1lcyA4XG4iICsg
DQogCQkJIiAgICAgICAgW3BjOiA0OSwgZnVsbCwgc3RhY2s6IHtqYXZhLmxhbmcuRXhjZXB0aW9u
fSwgbG9jYWxzOiB7WCwgaW50LCBqYXZhLmxhbmcuU3RyaW5nLCBqYXZhLmxhbmcuU3RyaW5nQnVm
ZmVyLCBqYXZhLmxhbmcuU3RyaW5nW10sIGphdmEubGFuZy5PYmplY3RbXX1dXG4iICsgDQotCQkJ
IiAgICAgICAgW3BjOiA1OSwgY2hvcCAyIGxvY2FsKHMpXVxuIiArIA0KLQkJCSIgICAgICAgIFtw
YzogNjIsIGFwcGVuZDoge2phdmEubGFuZy5TdHJpbmdbXSwgamF2YS5sYW5nLk9iamVjdFtdfV1c
biIgKyANCisJCQkiICAgICAgICBbcGM6IDU5LCBhcHBlbmQ6IHtqYXZhLmxhbmcuRXhjZXB0aW9u
fV1cbiIgKyANCisJCQkiICAgICAgICBbcGM6IDYyLCBjaG9wIDEgbG9jYWwocyldXG4iICsgDQog
CQkJIiAgICAgICAgW3BjOiA3Niwgc2FtZV1cbiIgKyANCiAJCQkiICAgICAgICBbcGM6IDc5LCBm
dWxsLCBzdGFjazoge2phdmEubGFuZy5FeGNlcHRpb259LCBsb2NhbHM6IHtYLCBpbnQsIGphdmEu
bGFuZy5TdHJpbmcsIGphdmEubGFuZy5TdHJpbmdCdWZmZXJ9XVxuIiArIA0KIAkJCSIgICAgICAg
IFtwYzogODYsIHNhbWVfbG9jYWxzXzFfc3RhY2tfaXRlbSwgc3RhY2s6IHtqYXZhLmxhbmcuVGhy
b3dhYmxlfV1cbiIgKyANCkBAIC03NTY5LDYgKzc1NjcsNDYgQEANCiAJfQ0KIH0NCiANCisvL2h0
dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMDM0NDgNCisvL1Rv
IGNoZWNrIHRoYXQgY29kZSBnZW4gaXMgbm90IG9wdGltaXplZCBmb3IgYW4gaWYgc3RhdGVtZW50
DQorLy93aGVyZSBhIGxvY2FsIHZhcmlhYmxlJ3MgZGVmaW5pdGUgbnVsbG5lc3Mgb3Igb3RoZXJ3
aXNlIGlzIGtub3duIGJlY2F1c2Ugb2YNCisvL2FuIGVhcmxpZXIgYXNzZXJ0IGV4cHJlc3Npb24g
KGluc2lkZSBmaW5hbGx5IGNvbnRleHQpDQorcHVibGljIHZvaWQgdGVzdEJ1ZzMzOTEzOSgpIHRo
cm93cyBFeGNlcHRpb24gew0KKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KA0KKwkJbmV3IFN0cmluZ1td
IHsNCisJCQkiWC5qYXZhIiwNCisJCQkicHVibGljIGFic3RyYWN0IGNsYXNzIFgge1xuIiArDQor
CQkJIgkgcHJpdmF0ZSBzdGF0aWMgT2JqZWN0W10gYmFyKCkge1xuIiArDQorCQkJIgkJcmV0dXJu
IG51bGw7XG4iICsNCisJCQkiCX1cbiIgKw0KKwkJCSIJcHJvdGVjdGVkIGZpbmFsIE9iamVjdCBm
b28oKSB7XG4iICsNCisJCQkiCQlPYmplY3RbXSB0YWIgPSBudWxsO1xuIiArDQorCQkJIgkJaWYo
dGFiICE9IG51bGwpIHtcbiIgKw0KKwkJCSIJCQlPYmplY3RbXSB2ID0gYmFyKCk7IFxuIiArDQor
CQkJIgkJCWludCBsZW5ndGggPSB0YWIubGVuZ3RoO1xuIiArDQorCQkJIgkJCWxvb3AgOiBmb3Ig
KGludCBpID0gMCwgbWF4ID0gdi5sZW5ndGg7IGkgPCBtYXg7IGkrKykge1xuIiArDQorCQkJIgkJ
CQlPYmplY3QgbyA9IHZbaV07XG4iICsNCisJCQkiCQkJCWlmIChvID09IG51bGwpICBjb250aW51
ZSBsb29wO1xuIiArDQorCQkJIgkJCQlpZigwID09IGxlbmd0aCkge1xuIiArDQorCQkJIgkJCQkJ
bG9vcDIgOiBmb3IgKGludCBqID0gMDsgaiA8IGxlbmd0aDsgaisrKSB7XG4iICsNCisJCQkiCQkJ
CQkJT2JqZWN0IG8yID0gbnVsbDtcbiIgKw0KKwkJCSIJCQkJCQlmb3IgKGludCBrID0gMDsgayA8
IGxlbmd0aDsgaysrKSB7XG4iICsNCisJCQkiCQkJCQkJCWlmIChvMiA9PSB0YWJba10pIHtcbiIg
Kw0KKwkJCSIJCQkJCQkJCWNvbnRpbnVlIGxvb3AyO1xuIiArDQorCQkJIgkJCQkJCQl9XG4iICsN
CisJCQkiCQkJCQkJfVxuIiArDQorCQkJIgkJCQkJCWNvbnRpbnVlIGxvb3A7XG4iICsNCisJCQki
CQkJCQl9XG4iICsNCisJCQkiCQkJCQlyZXR1cm4gbztcbiIgKw0KKwkJCSIJCQkJfVxuIiArDQor
CQkJIgkJCX1cbiIgKw0KKwkJCSIJCX1cbiIgKw0KKwkJCSIJCXJldHVybiBudWxsO1xuIiArDQor
CQkJIgl9XG4iICsNCisJCQkifVxuIiwNCisJCX0pOyAvLyBjdXN0b20gcmVxdWVzdG9yDQorfQ0K
Kw0KIHB1YmxpYyBzdGF0aWMgQ2xhc3MgdGVzdENsYXNzKCkgew0KIAlyZXR1cm4gQ29uZm9ybVRl
c3QuY2xhc3M7DQogfQ0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXINCklu
ZGV4OiBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Q
cm9ncmFtbWluZ1Byb2JsZW1zVGVzdC5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jv
b3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Qcm9ncmFtbWluZ1Byb2Js
ZW1zVGVzdC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4zMQ0KZGlmZiAtdSAtcjEuMzEg
UHJvZ3JhbW1pbmdQcm9ibGVtc1Rlc3QuamF2YQ0KLS0tIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Byb2dyYW1taW5nUHJvYmxlbXNUZXN0LmphdmEJ
MTYgRmViIDIwMTEgMDg6MDk6MTUgLTAwMDAJMS4zMQ0KKysrIHNyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Byb2dyYW1taW5nUHJvYmxlbXNUZXN0Lmph
dmEJOCBNYXIgMjAxMSAxNjozNDowNiAtMDAwMA0KQEAgLTM2LDcgKzM2LDcgQEANCiAgIAkvLyBP
bmx5IHRoZSBoaWdoZXN0IGNvbXBsaWFuY2UgbGV2ZWwgaXMgcnVuOyBhZGQgdGhlIFZNIGFyZ3Vt
ZW50DQogICAJLy8gLURjb21wbGlhbmNlPTEuNCAoZm9yIGV4YW1wbGUpIHRvIGxvd2VyIGl0IGlm
IG5lZWRlZA0KICAgCXN0YXRpYyB7DQotLy8gICAgCVRFU1RTX05BTUVTID0gbmV3IFN0cmluZ1td
IHsgInRlc3QwMDU1IiB9Ow0KKyAgICAJVEVTVFNfTkFNRVMgPSBuZXcgU3RyaW5nW10geyAidGVz
dDAwNTkiIH07DQogLy8JCVRFU1RTX05VTUJFUlMgPSBuZXcgaW50W10geyA1NiB9Ow0KIC8vICAJ
VEVTVFNfUkFOR0UgPSBuZXcgaW50W10geyAxLCAtMSB9Ow0KICAgCX0NCkBAIC0yMzA5LDQgKzIz
MDksNDIgQEANCiAJCQl0cnVlLypzaG91bGRGbHVzaE91dHB1dERpcmVjdG9yeSovLA0KIAkJCWN1
c3RvbU9wdGlvbnMpOw0KIH0NCisvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93
X2J1Zy5jZ2k/aWQ9MzM5MTM5DQorLy8gSXNzdWUgbG9jYWwgdmFyaWFibGUgbm90IHVzZWQgd2Fy
bmluZyBpbnNpZGUgZGVhZGNvZGUNCitwdWJsaWMgdm9pZCB0ZXN0MDA1OSgpIHRocm93cyBFeGNl
cHRpb24gew0KKwlNYXAgY3VzdG9tT3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOw0KKwlj
dXN0b21PcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVudXNlZExvY2Fs
LCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7DQorCWN1c3RvbU9wdGlvbnMucHV0KENvbXBpbGVy
T3B0aW9ucy5PUFRJT05fUmVwb3J0RGVhZENvZGUsIENvbXBpbGVyT3B0aW9ucy5XQVJOSU5HKTsN
CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoDQorCQluZXcgU3RyaW5nW10gew0KKwkJCSJYLmphdmEi
LA0KKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsgDQorCQkJIiAgICBwdWJsaWMgc3RhdGljIHZv
aWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iICsgDQorCQkJIiAgICAJT2JqZWN0IGEgPSBudWxs
O1xuIiArIA0KKwkJCSIgICAgCWlmIChhICE9IG51bGwpe1xuIiArIA0KKwkJCSIgICAgICAgIAlp
bnQgaiA9IDM7XG4iICsgDQorCQkJIiAgICAgICAgCWorKztcbiIgKyAJLy8gdmFsdWUgaXMgbm90
IHVzZWQNCisJCQkiICAgIAl9XG4iICsNCisJCQkiICAgIAlTeXN0ZW0ub3V0LnByaW50bG4oXCJP
S1wiKTtcbiIgKyANCisJCQkiICAgIH1cbiIgKyANCisJCQkifSINCisJCX0sDQorCQkiLS0tLS0t
LS0tLVxuIiArIA0KKwkJIjEuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDQpXG4iICsgDQor
CQkiCWlmIChhICE9IG51bGwpe1xuIiArIA0KKwkJIiAgICAgICAgCWludCBqID0gMztcbiIgKyAN
CisJCSIgICAgICAgIAlqKys7XG4iICsgDQorCQkiICAgIAl9XG4iICsgDQorCQkiCSAgICAgICAg
ICAgICAgXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXG4iICsgDQor
CQkiRGVhZCBjb2RlXG4iICsgDQorCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJIjIuIFdBUk5JTkcg
aW4gWC5qYXZhIChhdCBsaW5lIDUpXG4iICsgDQorCQkiCWludCBqID0gMztcbiIgKyANCisJCSIJ
ICAgIF5cbiIgKyANCisJCSJUaGUgdmFsdWUgb2YgdGhlIGxvY2FsIHZhcmlhYmxlIGogaXMgbm90
IHVzZWRcbiIgKyANCisJCSItLS0tLS0tLS0tXG4iLA0KKwkJbnVsbC8qY2xhc3NMaWJyYXJpZXMq
LywNCisJCXRydWUvKnNob3VsZEZsdXNoT3V0cHV0RGlyZWN0b3J5Ki8sDQorCQljdXN0b21PcHRp
b25zKTsNCit9DQogfQ0KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlDQo=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>190669</attachid>
            <date>2011-03-08 11:47:00 -0500</date>
            <delta_ts>2011-03-08 11:47:32 -0500</delta_ts>
            <desc>released patch</desc>
            <filename>patch339139.txt</filename>
            <type>text/plain</type>
            <size>15368</size>
            <attacher name="Ayushman Jain">amj87.iitr</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0xv
Y2FsRGVjbGFyYXRpb24uamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlw
c2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2FzdC9Mb2NhbERlY2xhcmF0aW9uLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lv
biAxLjc5DQpkaWZmIC11IC1yMS43OSBMb2NhbERlY2xhcmF0aW9uLmphdmENCi0tLSBjb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0xvY2FsRGVjbGFyYXRpb24u
amF2YQk4IEZlYiAyMDExIDA1OjU5OjE3IC0wMDAwCTEuNzkNCisrKyBjb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0xvY2FsRGVjbGFyYXRpb24uamF2YQk4IE1h
ciAyMDExIDE2OjQwOjM0IC0wMDAwDQpAQCAtMzgsNyArMzgsNyBAQA0KIA0KIHB1YmxpYyBGbG93
SW5mbyBhbmFseXNlQ29kZShCbG9ja1Njb3BlIGN1cnJlbnRTY29wZSwgRmxvd0NvbnRleHQgZmxv
d0NvbnRleHQsIEZsb3dJbmZvIGZsb3dJbmZvKSB7DQogCS8vIHJlY29yZCB2YXJpYWJsZSBpbml0
aWFsaXphdGlvbiBpZiBhbnkNCi0JaWYgKChmbG93SW5mby50YWdCaXRzICYgRmxvd0luZm8uVU5S
RUFDSEFCTEUpID09IDApIHsNCisJaWYgKChmbG93SW5mby50YWdCaXRzICYgRmxvd0luZm8uVU5S
RUFDSEFCTEVfT1JfREVBRCkgPT0gMCkgew0KIAkJdGhpcy5iaXRzIHw9IEFTVE5vZGUuSXNMb2Nh
bERlY2xhcmF0aW9uUmVhY2hhYmxlOyAvLyBvbmx5IHNldCBpZiBhY3R1YWxseSByZWFjaGVkDQog
CX0NCiAJaWYgKHRoaXMuYmluZGluZyAhPSBudWxsICYmIHRoaXMudHlwZS5yZXNvbHZlZFR5cGUg
aW5zdGFuY2VvZiBUeXBlVmFyaWFibGVCaW5kaW5nKSB7DQpJbmRleDogY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9UcnlTdGF0ZW1lbnQuamF2YQ0KPT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9UcnlTdGF0ZW1lbnQu
amF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTE4DQpkaWZmIC11IC1yMS4xMTggVHJ5U3Rh
dGVtZW50LmphdmENCi0tLSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L1RyeVN0YXRlbWVudC5qYXZhCTUgTWFyIDIwMTEgMTc6MTg6NDMgLTAwMDAJMS4xMTgN
CisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1RyeVN0
YXRlbWVudC5qYXZhCTggTWFyIDIwMTEgMTY6NDA6MzQgLTAwMDANCkBAIC0xNTksNyArMTU5LDcg
QEANCiAJCQkJCQljYXRjaEluZm8pOw0KIAkJCQl0aGlzLmNhdGNoRXhpdEluaXRTdGF0ZUluZGV4
ZXNbaV0gPSBjdXJyZW50U2NvcGUubWV0aG9kU2NvcGUoKS5yZWNvcmRJbml0aWFsaXphdGlvblN0
YXRlcyhjYXRjaEluZm8pOw0KIAkJCQl0aGlzLmNhdGNoRXhpdHNbaV0gPQ0KLQkJCQkJKGNhdGNo
SW5mby50YWdCaXRzICYgRmxvd0luZm8uVU5SRUFDSEFCTEUpICE9IDA7DQorCQkJCQkoY2F0Y2hJ
bmZvLnRhZ0JpdHMgJiBGbG93SW5mby5VTlJFQUNIQUJMRV9PUl9ERUFEKSAhPSAwOw0KIAkJCQl0
cnlJbmZvID0gdHJ5SW5mby5tZXJnZWRXaXRoKGNhdGNoSW5mby51bmNvbmRpdGlvbmFsSW5pdHMo
KSk7DQogCQkJfQ0KIAkJfQ0KQEAgLTI2OCw3ICsyNjgsNyBAQA0KIAkJCQkJCWNhdGNoSW5mbyk7
DQogCQkJCXRoaXMuY2F0Y2hFeGl0SW5pdFN0YXRlSW5kZXhlc1tpXSA9IGN1cnJlbnRTY29wZS5t
ZXRob2RTY29wZSgpLnJlY29yZEluaXRpYWxpemF0aW9uU3RhdGVzKGNhdGNoSW5mbyk7DQogCQkJ
CXRoaXMuY2F0Y2hFeGl0c1tpXSA9DQotCQkJCQkoY2F0Y2hJbmZvLnRhZ0JpdHMgJiBGbG93SW5m
by5VTlJFQUNIQUJMRSkgIT0gMDsNCisJCQkJCShjYXRjaEluZm8udGFnQml0cyAmIEZsb3dJbmZv
LlVOUkVBQ0hBQkxFX09SX0RFQUQpICE9IDA7DQogCQkJCXRyeUluZm8gPSB0cnlJbmZvLm1lcmdl
ZFdpdGgoY2F0Y2hJbmZvLnVuY29uZGl0aW9uYWxJbml0cygpKTsNCiAJCQl9DQogCQl9DQpJbmRl
eDogY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvRXhjZXB0
aW9uSGFuZGxpbmdGbG93Q29udGV4dC5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jv
b3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvZmxvdy9FeGNlcHRpb25IYW5kbGluZ0Zsb3dDb250ZXh0LmphdmEs
dg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjQ1DQpkaWZmIC11IC1yMS40NSBFeGNlcHRpb25IYW5k
bGluZ0Zsb3dDb250ZXh0LmphdmENCi0tLSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvZmxvdy9FeGNlcHRpb25IYW5kbGluZ0Zsb3dDb250ZXh0LmphdmEJNyBNYXIg
MjAwOSAwMDo1OTowNiAtMDAwMAkxLjQ1DQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2Zsb3cvRXhjZXB0aW9uSGFuZGxpbmdGbG93Q29udGV4dC5qYXZhCTgg
TWFyIDIwMTEgMTY6NDA6MzQgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDA5IElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24g
YW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRo
ZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRo
ZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNj
b21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC0yMjcs
OCArMjI3LDggQEANCiB9DQogDQogcHVibGljIHZvaWQgcmVjb3JkUmV0dXJuRnJvbShVbmNvbmRp
dGlvbmFsRmxvd0luZm8gZmxvd0luZm8pIHsNCi0JaWYgKChmbG93SW5mby50YWdCaXRzICYgRmxv
d0luZm8uVU5SRUFDSEFCTEUpID09IDApIHsNCi0JCWlmICgodGhpcy5pbml0c09uUmV0dXJuLnRh
Z0JpdHMgJiBGbG93SW5mby5VTlJFQUNIQUJMRSkgPT0gMCkgew0KKwlpZiAoKGZsb3dJbmZvLnRh
Z0JpdHMgJiBGbG93SW5mby5VTlJFQUNIQUJMRV9PUl9ERUFEKSA9PSAwKSB7DQorCQlpZiAoKHRo
aXMuaW5pdHNPblJldHVybi50YWdCaXRzICYgRmxvd0luZm8uVU5SRUFDSEFCTEVfT1JfREVBRCkg
PT0gMCkgew0KIAkJCXRoaXMuaW5pdHNPblJldHVybiA9IHRoaXMuaW5pdHNPblJldHVybi5tZXJn
ZWRXaXRoKGZsb3dJbmZvKTsNCiAJCX0NCiAJCWVsc2Ugew0KSW5kZXg6IGNvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L0Zsb3dDb250ZXh0LmphdmENCj09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L0Zsb3dDb250ZXh0
LmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjY5DQpkaWZmIC11IC1yMS42OSBGbG93Q29u
dGV4dC5qYXZhDQotLS0gY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2Zsb3cvRmxvd0NvbnRleHQuamF2YQk0IE1hciAyMDExIDEyOjQxOjIxIC0wMDAwCTEuNjkNCisr
KyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxvdy9GbG93Q29u
dGV4dC5qYXZhCTggTWFyIDIwMTEgMTY6NDA6MzQgLTAwMDANCkBAIC01MzAsNyArNTMwLDcgQEAN
CiB9DQogDQogcHVibGljIHZvaWQgcmVjb3JkU2V0dGluZ0ZpbmFsKFZhcmlhYmxlQmluZGluZyB2
YXJpYWJsZSwgUmVmZXJlbmNlIGZpbmFsUmVmZXJlbmNlLCBGbG93SW5mbyBmbG93SW5mbykgew0K
LQlpZiAoKGZsb3dJbmZvLnRhZ0JpdHMgJiBGbG93SW5mby5VTlJFQUNIQUJMRSkgPT0gMCkJew0K
KwlpZiAoKGZsb3dJbmZvLnRhZ0JpdHMgJiBGbG93SW5mby5VTlJFQUNIQUJMRV9PUl9ERUFEKSA9
PSAwKQl7DQogCS8vIGZvciBpbml0aWFsaXphdGlvbiBpbnNpZGUgbG9vcGluZyBzdGF0ZW1lbnQg
dGhhdCBlZmZlY3RpdmVseSBsb29wcw0KIAlGbG93Q29udGV4dCBjb250ZXh0ID0gdGhpczsNCiAJ
d2hpbGUgKGNvbnRleHQgIT0gbnVsbCkgew0KSW5kZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9mbG93L0luc2lkZVN1YlJvdXRpbmVGbG93Q29udGV4dC5qYXZh
DQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxvdy9JbnNp
ZGVTdWJSb3V0aW5lRmxvd0NvbnRleHQuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMjEN
CmRpZmYgLXUgLXIxLjIxIEluc2lkZVN1YlJvdXRpbmVGbG93Q29udGV4dC5qYXZhDQotLS0gY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvSW5zaWRlU3ViUm91
dGluZUZsb3dDb250ZXh0LmphdmEJNyBNYXIgMjAwOSAwMTowODoxMCAtMDAwMAkxLjIxDQorKysg
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvSW5zaWRlU3Vi
Um91dGluZUZsb3dDb250ZXh0LmphdmEJOCBNYXIgMjAxMSAxNjo0MDozNCAtMDAwMA0KQEAgLTEs
NSArMSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIw
MDAsIDIwMDkgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAy
MDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVz
ZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBh
cmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBM
aWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5k
IGlzIGF2YWlsYWJsZSBhdA0KQEAgLTQzLDcgKzQzLDcgQEANCiB9DQogDQogcHVibGljIHZvaWQg
cmVjb3JkUmV0dXJuRnJvbShVbmNvbmRpdGlvbmFsRmxvd0luZm8gZmxvd0luZm8pIHsNCi0JaWYg
KChmbG93SW5mby50YWdCaXRzICYgRmxvd0luZm8uVU5SRUFDSEFCTEUpID09IDApCXsNCisJaWYg
KChmbG93SW5mby50YWdCaXRzICYgRmxvd0luZm8uVU5SRUFDSEFCTEVfT1JfREVBRCkgPT0gMCkJ
ew0KIAlpZiAodGhpcy5pbml0c09uUmV0dXJuID09IEZsb3dJbmZvLkRFQURfRU5EKSB7DQogCQl0
aGlzLmluaXRzT25SZXR1cm4gPSAoVW5jb25kaXRpb25hbEZsb3dJbmZvKSBmbG93SW5mby5jb3B5
KCk7DQogCX0gZWxzZSB7DQpJbmRleDogY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2Zsb3cvTG9vcGluZ0Zsb3dDb250ZXh0LmphdmENCj09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBm
aWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L0xvb3BpbmdGbG93Q29udGV4dC5qYXZh
LHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS41NQ0KZGlmZiAtdSAtcjEuNTUgTG9vcGluZ0Zsb3dD
b250ZXh0LmphdmENCi0tLSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvZmxvdy9Mb29waW5nRmxvd0NvbnRleHQuamF2YQk1IE1hciAyMDExIDE3OjE4OjQzIC0wMDAw
CTEuNTUNCisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxv
dy9Mb29waW5nRmxvd0NvbnRleHQuamF2YQk4IE1hciAyMDExIDE2OjQwOjM0IC0wMDAwDQpAQCAt
Mzg1LDggKzM4NSw4IEBADQogfQ0KIA0KIHB1YmxpYyB2b2lkIHJlY29yZENvbnRpbnVlRnJvbShG
bG93Q29udGV4dCBpbm5lckZsb3dDb250ZXh0LCBGbG93SW5mbyBmbG93SW5mbykgew0KLQlpZiAo
KGZsb3dJbmZvLnRhZ0JpdHMgJiBGbG93SW5mby5VTlJFQUNIQUJMRSkgPT0gMCkJew0KLQkJaWYg
KCh0aGlzLmluaXRzT25Db250aW51ZS50YWdCaXRzICYgRmxvd0luZm8uVU5SRUFDSEFCTEUpID09
IDApIHsNCisJaWYgKChmbG93SW5mby50YWdCaXRzICYgRmxvd0luZm8uVU5SRUFDSEFCTEVfT1Jf
REVBRCkgPT0gMCkJew0KKwkJaWYgKCh0aGlzLmluaXRzT25Db250aW51ZS50YWdCaXRzICYgRmxv
d0luZm8uVU5SRUFDSEFCTEVfT1JfREVBRCkgPT0gMCkgew0KIAkJCXRoaXMuaW5pdHNPbkNvbnRp
bnVlID0gdGhpcy5pbml0c09uQ29udGludWUuDQogCQkJCQltZXJnZWRXaXRoKGZsb3dJbmZvLnVu
Y29uZGl0aW9uYWxJbml0c1dpdGhvdXRTaWRlRWZmZWN0KCkpOw0KIAkJfQ0KSW5kZXg6IGNvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L1N3aXRjaEZsb3dDb250
ZXh0LmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9m
bG93L1N3aXRjaEZsb3dDb250ZXh0LmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjMyDQpk
aWZmIC11IC1yMS4zMiBTd2l0Y2hGbG93Q29udGV4dC5qYXZhDQotLS0gY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvU3dpdGNoRmxvd0NvbnRleHQuamF2YQk3
IE1hciAyMDA5IDAxOjA4OjEwIC0wMDAwCTEuMzINCisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxvdy9Td2l0Y2hGbG93Q29udGV4dC5qYXZhCTggTWFyIDIw
MTEgMTY6NDA6MzQgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDA5IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90
aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2Nv
bXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJt
cyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5p
ZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC00Miw3ICs0Miw3
IEBADQogfQ0KIA0KIHB1YmxpYyB2b2lkIHJlY29yZEJyZWFrRnJvbShGbG93SW5mbyBmbG93SW5m
bykgew0KLQlpZiAoKHRoaXMuaW5pdHNPbkJyZWFrLnRhZ0JpdHMgJiBGbG93SW5mby5VTlJFQUNI
QUJMRSkgPT0gMCkgew0KKwlpZiAoKHRoaXMuaW5pdHNPbkJyZWFrLnRhZ0JpdHMgJiBGbG93SW5m
by5VTlJFQUNIQUJMRV9PUl9ERUFEKSA9PSAwKSB7DQogCQl0aGlzLmluaXRzT25CcmVhayA9IHRo
aXMuaW5pdHNPbkJyZWFrLm1lcmdlZFdpdGgoZmxvd0luZm8udW5jb25kaXRpb25hbEluaXRzKCkp
Ow0KIAl9DQogCWVsc2Ugew0KSW5kZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9sb29rdXAvTWV0aG9kU2NvcGUuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6
IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RTY29wZS5qYXZhLHYNCnJldHJp
ZXZpbmcgcmV2aXNpb24gMS43OA0KZGlmZiAtdSAtcjEuNzggTWV0aG9kU2NvcGUuamF2YQ0KLS0t
IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvTWV0aG9k
U2NvcGUuamF2YQkxIE5vdiAyMDEwIDE0OjE1OjQ3IC0wMDAwCTEuNzgNCisrKyBjb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL01ldGhvZFNjb3BlLmphdmEJ
OCBNYXIgMjAxMSAxNjo0MDozNCAtMDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBvcmF0aW9u
IGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlv
biBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQg
dGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIg
dGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBh
Y2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTQw
OSw3ICs0MDksNyBAQA0KIH0NCiANCiBwdWJsaWMgZmluYWwgaW50IHJlY29yZEluaXRpYWxpemF0
aW9uU3RhdGVzKEZsb3dJbmZvIGZsb3dJbmZvKSB7DQotCWlmICgoZmxvd0luZm8udGFnQml0cyAm
IEZsb3dJbmZvLlVOUkVBQ0hBQkxFKSAhPSAwKSByZXR1cm4gLTE7DQorCWlmICgoZmxvd0luZm8u
dGFnQml0cyAmIEZsb3dJbmZvLlVOUkVBQ0hBQkxFX09SX0RFQUQpICE9IDApIHJldHVybiAtMTsN
CiAJVW5jb25kaXRpb25hbEZsb3dJbmZvIHVuY29uZGl0aW9uYWxGbG93SW5mbyA9IGZsb3dJbmZv
LnVuY29uZGl0aW9uYWxJbml0c1dpdGhvdXRTaWRlRWZmZWN0KCk7DQogCWxvbmdbXSBleHRyYUlu
aXRzID0gdW5jb25kaXRpb25hbEZsb3dJbmZvLmV4dHJhID09IG51bGwgPw0KIAkJCW51bGwgOiB1
bmNvbmRpdGlvbmFsRmxvd0luZm8uZXh0cmFbMF07DQojUCBvcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cw0KSW5kZXg6IEVjbGlwc2UgSmF2YSBUZXN0cyBDb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
dGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Db25mb3JtVGVzdC5qYXZhDQo9PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpS
Q1MgZmlsZTogL2hvbWUvY3ZzL251bWJhdC9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy9FY2xp
cHNlIEphdmEgVGVzdHMgQ29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L3Rlc3RzL2NvbXBpbGVyL3Jl
Z3Jlc3Npb24vQ29uZm9ybVRlc3QuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTU3DQpk
aWZmIC11IC1yMS4xNTcgQ29uZm9ybVRlc3QuamF2YQ0KLS0tIEVjbGlwc2UgSmF2YSBUZXN0cyBD
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Db25mb3Jt
VGVzdC5qYXZhCTUgTWFyIDIwMTEgMTc6MTg6MjkgLTAwMDAJMS4xNTcNCisrKyBFY2xpcHNlIEph
dmEgVGVzdHMgQ29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Np
b24vQ29uZm9ybVRlc3QuamF2YQk4IE1hciAyMDExIDE2OjQwOjQwIC0wMDAwDQpAQCAtNjY4OCwx
NSArNjY4OCwxMyBAQA0KIAkJCSIgICAgICAgIFtwYzogMCwgcGM6IDk2XSBsb2NhbDogZGVsZXRl
IGluZGV4OiAxIHR5cGU6IGJvb2xlYW5cbiIgKyANCiAJCQkiICAgICAgICBbcGM6IDUsIHBjOiA5
Nl0gbG9jYWw6IHMgaW5kZXg6IDIgdHlwZTogamF2YS5sYW5nLlN0cmluZ1xuIiArIA0KIAkJCSIg
ICAgICAgIFtwYzogMTMsIHBjOiA5Nl0gbG9jYWw6IGJ1ZmZlciBpbmRleDogMyB0eXBlOiBqYXZh
LmxhbmcuU3RyaW5nQnVmZmVyXG4iICsgDQotCQkJIiAgICAgICAgW3BjOiAyNCwgcGM6IDU5XSBs
b2NhbDogZGF0YXMgaW5kZXg6IDQgdHlwZTogamF2YS5sYW5nLlN0cmluZ1tdXG4iICsgDQotCQkJ
IiAgICAgICAgW3BjOiA2MiwgcGM6IDc5XSBsb2NhbDogZGF0YXMgaW5kZXg6IDQgdHlwZTogamF2
YS5sYW5nLlN0cmluZ1tdXG4iICsgDQotCQkJIiAgICAgICAgW3BjOiAzNCwgcGM6IDU5XSBsb2Nh
bDogZGF0YSBpbmRleDogNSB0eXBlOiBqYXZhLmxhbmcuT2JqZWN0W11cbiIgKyANCi0JCQkiICAg
ICAgICBbcGM6IDYyLCBwYzogNzldIGxvY2FsOiBkYXRhIGluZGV4OiA1IHR5cGU6IGphdmEubGFu
Zy5PYmplY3RbXVxuIiArIA0KLQkJCSIgICAgICAgIFtwYzogNTEsIHBjOiA1OV0gbG9jYWw6IGUg
aW5kZXg6IDYgdHlwZTogamF2YS5sYW5nLkV4Y2VwdGlvblxuIiArIA0KKwkJCSIgICAgICAgIFtw
YzogMjQsIHBjOiA3OV0gbG9jYWw6IGRhdGFzIGluZGV4OiA0IHR5cGU6IGphdmEubGFuZy5TdHJp
bmdbXVxuIiArIA0KKwkJCSIgICAgICAgIFtwYzogMzQsIHBjOiA3OV0gbG9jYWw6IGRhdGEgaW5k
ZXg6IDUgdHlwZTogamF2YS5sYW5nLk9iamVjdFtdXG4iICsgDQorCQkJIiAgICAgICAgW3BjOiA1
MSwgcGM6IDYyXSBsb2NhbDogZSBpbmRleDogNiB0eXBlOiBqYXZhLmxhbmcuRXhjZXB0aW9uXG4i
ICsgDQogCQkJIiAgICAgIFN0YWNrIG1hcCB0YWJsZTogbnVtYmVyIG9mIGZyYW1lcyA4XG4iICsg
DQogCQkJIiAgICAgICAgW3BjOiA0OSwgZnVsbCwgc3RhY2s6IHtqYXZhLmxhbmcuRXhjZXB0aW9u
fSwgbG9jYWxzOiB7WCwgaW50LCBqYXZhLmxhbmcuU3RyaW5nLCBqYXZhLmxhbmcuU3RyaW5nQnVm
ZmVyLCBqYXZhLmxhbmcuU3RyaW5nW10sIGphdmEubGFuZy5PYmplY3RbXX1dXG4iICsgDQotCQkJ
IiAgICAgICAgW3BjOiA1OSwgY2hvcCAyIGxvY2FsKHMpXVxuIiArIA0KLQkJCSIgICAgICAgIFtw
YzogNjIsIGFwcGVuZDoge2phdmEubGFuZy5TdHJpbmdbXSwgamF2YS5sYW5nLk9iamVjdFtdfV1c
biIgKyANCisJCQkiICAgICAgICBbcGM6IDU5LCBhcHBlbmQ6IHtqYXZhLmxhbmcuRXhjZXB0aW9u
fV1cbiIgKyANCisJCQkiICAgICAgICBbcGM6IDYyLCBjaG9wIDEgbG9jYWwocyldXG4iICsgDQog
CQkJIiAgICAgICAgW3BjOiA3Niwgc2FtZV1cbiIgKyANCiAJCQkiICAgICAgICBbcGM6IDc5LCBm
dWxsLCBzdGFjazoge2phdmEubGFuZy5FeGNlcHRpb259LCBsb2NhbHM6IHtYLCBpbnQsIGphdmEu
bGFuZy5TdHJpbmcsIGphdmEubGFuZy5TdHJpbmdCdWZmZXJ9XVxuIiArIA0KIAkJCSIgICAgICAg
IFtwYzogODYsIHNhbWVfbG9jYWxzXzFfc3RhY2tfaXRlbSwgc3RhY2s6IHtqYXZhLmxhbmcuVGhy
b3dhYmxlfV1cbiIgKyANCkBAIC03NTY5LDYgKzc1NjcsNDQgQEANCiAJfQ0KIH0NCiANCisvLyBo
dHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzM5MTM5DQorLy8g
VG8gY2hlY2sgdGhhdCBjb2RlIGdlbiBpcyBvaw0KK3B1YmxpYyB2b2lkIHRlc3RCdWczMzkxMzko
KSB0aHJvd3MgRXhjZXB0aW9uIHsNCisJdGhpcy5ydW5Db25mb3JtVGVzdCgNCisJCW5ldyBTdHJp
bmdbXSB7DQorCQkJIlguamF2YSIsDQorCQkJInB1YmxpYyBhYnN0cmFjdCBjbGFzcyBYIHtcbiIg
Kw0KKwkJCSIJIHByaXZhdGUgc3RhdGljIE9iamVjdFtdIGJhcigpIHtcbiIgKw0KKwkJCSIJCXJl
dHVybiBudWxsO1xuIiArDQorCQkJIgl9XG4iICsNCisJCQkiCXByb3RlY3RlZCBmaW5hbCBPYmpl
Y3QgZm9vKCkge1xuIiArDQorCQkJIgkJT2JqZWN0W10gdGFiID0gbnVsbDtcbiIgKw0KKwkJCSIJ
CWlmKHRhYiAhPSBudWxsKSB7XG4iICsNCisJCQkiCQkJT2JqZWN0W10gdiA9IGJhcigpOyBcbiIg
Kw0KKwkJCSIJCQlpbnQgbGVuZ3RoID0gdGFiLmxlbmd0aDtcbiIgKw0KKwkJCSIJCQlsb29wIDog
Zm9yIChpbnQgaSA9IDAsIG1heCA9IHYubGVuZ3RoOyBpIDwgbWF4OyBpKyspIHtcbiIgKw0KKwkJ
CSIJCQkJT2JqZWN0IG8gPSB2W2ldO1xuIiArDQorCQkJIgkJCQlpZiAobyA9PSBudWxsKSAgY29u
dGludWUgbG9vcDtcbiIgKw0KKwkJCSIJCQkJaWYoMCA9PSBsZW5ndGgpIHtcbiIgKw0KKwkJCSIJ
CQkJCWxvb3AyIDogZm9yIChpbnQgaiA9IDA7IGogPCBsZW5ndGg7IGorKykge1xuIiArDQorCQkJ
IgkJCQkJCU9iamVjdCBvMiA9IG51bGw7XG4iICsNCisJCQkiCQkJCQkJZm9yIChpbnQgayA9IDA7
IGsgPCBsZW5ndGg7IGsrKykge1xuIiArDQorCQkJIgkJCQkJCQlpZiAobzIgPT0gdGFiW2tdKSB7
XG4iICsNCisJCQkiCQkJCQkJCQljb250aW51ZSBsb29wMjtcbiIgKw0KKwkJCSIJCQkJCQkJfVxu
IiArDQorCQkJIgkJCQkJCX1cbiIgKw0KKwkJCSIJCQkJCQljb250aW51ZSBsb29wO1xuIiArDQor
CQkJIgkJCQkJfVxuIiArDQorCQkJIgkJCQkJcmV0dXJuIG87XG4iICsNCisJCQkiCQkJCX1cbiIg
Kw0KKwkJCSIJCQl9XG4iICsNCisJCQkiCQl9XG4iICsNCisJCQkiCQlyZXR1cm4gbnVsbDtcbiIg
Kw0KKwkJCSIJfVxuIiArDQorCQkJIn1cbiIsDQorCQl9KTsgLy8gY3VzdG9tIHJlcXVlc3Rvcg0K
K30NCisNCiBwdWJsaWMgc3RhdGljIENsYXNzIHRlc3RDbGFzcygpIHsNCiAJcmV0dXJuIENvbmZv
cm1UZXN0LmNsYXNzOw0KIH0NCiNQIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVy
DQpJbmRleDogc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Np
b24vUHJvZ3JhbW1pbmdQcm9ibGVtc1Rlc3QuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9j
dnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vUHJvZ3JhbW1pbmdQ
cm9ibGVtc1Rlc3QuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMzENCmRpZmYgLXUgLXIx
LjMxIFByb2dyYW1taW5nUHJvYmxlbXNUZXN0LmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Qcm9ncmFtbWluZ1Byb2JsZW1zVGVzdC5q
YXZhCTE2IEZlYiAyMDExIDA4OjA5OjE1IC0wMDAwCTEuMzENCisrKyBzcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Qcm9ncmFtbWluZ1Byb2JsZW1zVGVz
dC5qYXZhCTggTWFyIDIwMTEgMTY6NDA6NDcgLTAwMDANCkBAIC0yMzA5LDQgKzIzMDksNDIgQEAN
CiAJCQl0cnVlLypzaG91bGRGbHVzaE91dHB1dERpcmVjdG9yeSovLA0KIAkJCWN1c3RvbU9wdGlv
bnMpOw0KIH0NCisvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/
aWQ9MzM5MTM5DQorLy8gSXNzdWUgbG9jYWwgdmFyaWFibGUgbm90IHVzZWQgd2FybmluZyBpbnNp
ZGUgZGVhZGNvZGUNCitwdWJsaWMgdm9pZCB0ZXN0MDA1OSgpIHRocm93cyBFeGNlcHRpb24gew0K
KwlNYXAgY3VzdG9tT3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOw0KKwljdXN0b21PcHRp
b25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVudXNlZExvY2FsLCBDb21waWxl
ck9wdGlvbnMuV0FSTklORyk7DQorCWN1c3RvbU9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5P
UFRJT05fUmVwb3J0RGVhZENvZGUsIENvbXBpbGVyT3B0aW9ucy5XQVJOSU5HKTsNCisJdGhpcy5y
dW5OZWdhdGl2ZVRlc3QoDQorCQluZXcgU3RyaW5nW10gew0KKwkJCSJYLmphdmEiLA0KKwkJCSJw
dWJsaWMgY2xhc3MgWCB7XG4iICsgDQorCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihT
dHJpbmdbXSBhcmdzKSB7XG4iICsgDQorCQkJIiAgICAJT2JqZWN0IGEgPSBudWxsO1xuIiArIA0K
KwkJCSIgICAgCWlmIChhICE9IG51bGwpe1xuIiArIA0KKwkJCSIgICAgICAgIAlpbnQgaiA9IDM7
XG4iICsgDQorCQkJIiAgICAgICAgCWorKztcbiIgKyAJLy8gdmFsdWUgaXMgbm90IHVzZWQNCisJ
CQkiICAgIAl9XG4iICsNCisJCQkiICAgIAlTeXN0ZW0ub3V0LnByaW50bG4oXCJPS1wiKTtcbiIg
KyANCisJCQkiICAgIH1cbiIgKyANCisJCQkifSINCisJCX0sDQorCQkiLS0tLS0tLS0tLVxuIiAr
IA0KKwkJIjEuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDQpXG4iICsgDQorCQkiCWlmIChh
ICE9IG51bGwpe1xuIiArIA0KKwkJIiAgICAgICAgCWludCBqID0gMztcbiIgKyANCisJCSIgICAg
ICAgIAlqKys7XG4iICsgDQorCQkiICAgIAl9XG4iICsgDQorCQkiCSAgICAgICAgICAgICAgXl5e
Xl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXG4iICsgDQorCQkiRGVhZCBj
b2RlXG4iICsgDQorCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJIjIuIFdBUk5JTkcgaW4gWC5qYXZh
IChhdCBsaW5lIDUpXG4iICsgDQorCQkiCWludCBqID0gMztcbiIgKyANCisJCSIJICAgIF5cbiIg
KyANCisJCSJUaGUgdmFsdWUgb2YgdGhlIGxvY2FsIHZhcmlhYmxlIGogaXMgbm90IHVzZWRcbiIg
KyANCisJCSItLS0tLS0tLS0tXG4iLA0KKwkJbnVsbC8qY2xhc3NMaWJyYXJpZXMqLywNCisJCXRy
dWUvKnNob3VsZEZsdXNoT3V0cHV0RGlyZWN0b3J5Ki8sDQorCQljdXN0b21PcHRpb25zKTsNCit9
DQogfQ0KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlDQo=
</data>

          </attachment>
      

    </bug>

</bugzilla>