<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>427748</bug_id>
          
          <creation_ts>2014-02-09 04:54:00 -0500</creation_ts>
          <short_desc>[1.8][compiler] Cannot convert from Boolean to boolean on generic return type</short_desc>
          <delta_ts>2014-02-21 01:00:18 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 8</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>427059</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Timo Kinnunen">timo.kinnunen</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>manpalat</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2360661</commentid>
    <comment_count>0</comment_count>
    <who name="Timo Kinnunen">timo.kinnunen</who>
    <bug_when>2014-02-09 04:54:51 -0500</bug_when>
    <thetext>Another weird sounding error from compiling JDK source, with this source code:

public class CannotConvertTest {
  private static interface Action&lt;T&gt; {T run();}
  private static Action&lt;Boolean&gt; baction;
  static void getLog(int override) {}
  static void getLog(boolean override) {}
  private static &lt;T&gt; T doit(Action&lt;T&gt; action) {return null;}
  static {
    //Type mismatch: cannot convert from Boolean to boolean
    getLog(doit(baction));
  }
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360662</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-09 04:59:06 -0500</bug_when>
    <thetext>Thanks, I think I just fixed the counter part of this problem for poly
conditional expressions (https://bugs.eclipse.org/bugs/show_bug.cgi?id=427744)
I&apos;ll take a look.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360665</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-09 05:32:13 -0500</bug_when>
    <thetext>Takes me a bit deeper into the new engine that I am familiar with right at
the moment. Stephan, Thanks for taking a look.

Test here: OverloadResolutionTest8._test427748()

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=0317ca655e0c51da9ebc137a7fc750f41103e862</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360666</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-09 05:37:02 -0500</bug_when>
    <thetext>(In reply to Timo Kinnunen from comment #0)
&gt; Another weird sounding error from compiling JDK source, with this source
&gt; code:

This one is due to autoboxing considerations being ignored in certain paths in
the new type inference engine. With that reason spelled out, it is not really 
weird, The other two bugs where we have identical types being complained against
is the true weird one, we are on the case. Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360698</commentid>
    <comment_count>4</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-09 10:58:03 -0500</bug_when>
    <thetext>Another example of misleading error messages: all we really learn from the message is: inference failed. The reason was: when resolving &quot;doit(baction)&quot; against target type &quot;int&quot; (while checking if getLog(int) is a good candidate), the &quot;int&quot; piece of information sticks to the inference context, leading to failure because T#0 is required to be &quot;= Boolean&quot; *and* &quot;= Integer&quot; -&gt; Boom.

I have been going back and forth on where and when the IC18 should restore the previous bound set after failure. I even had this exact logic in place in the initial version from Bug 400874, but in the polish phase of bug 424167 this got deleted. It&apos;s a pity I haven&apos;t any notes on why I deleted this.

Anyway, restoring (in improved version of) the restore-logic resolves this bug. Released via https://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java?h=BETA_JAVA8&amp;id=46e269010b20dd18e9137cea742d17a67cd0d720</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2361929</commentid>
    <comment_count>5</comment_count>
    <who name="Timo Kinnunen">timo.kinnunen</who>
    <bug_when>2014-02-11 21:48:27 -0500</bug_when>
    <thetext>No longer occurs on a new build from HEAD.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2366475</commentid>
    <comment_count>6</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-02-21 00:34:47 -0500</bug_when>
    <thetext>Verified for eclipse Kepler 4.3.2 RC4 Build id: M20140212-0800</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2366486</commentid>
    <comment_count>7</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-02-21 01:00:18 -0500</bug_when>
    <thetext>(In reply to Manoj Palat from comment #6)
&gt; Verified for eclipse Kepler 4.3.2 RC4 Build id: M20140212-0800

Stands corrected as :
Verified as working for Eclipse + Java 8 RC1 using Kepler SR2(RC4) +   
Eclipse Java Development Tools Patch for Java 8 Support (BETA)   
1.0.0.v20140220-2054</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>