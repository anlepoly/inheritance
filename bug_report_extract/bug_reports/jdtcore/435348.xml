<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>435348</bug_id>
          
          <creation_ts>2014-05-20 22:32:00 -0400</creation_ts>
          <short_desc>[1.8][compiler] NPE in JDT Core during AST creation</short_desc>
          <delta_ts>2015-01-19 00:21:42 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.4.2</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Manju Mathew">manju656</reporter>
          <assigned_to name="shankha banerjee">shankhba</assigned_to>
          <cc>jarthana</cc>
    
    <cc>manpalat</cc>
    
    <cc>markus_keller</cc>
    
    <cc>shankhba</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="63157"
          type_id="1"
          status="+"
          setter="srikanth_sankaran"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2404610</commentid>
    <comment_count>0</comment_count>
    <who name="Manju Mathew">manju656</who>
    <bug_when>2014-05-20 22:32:58 -0400</bug_when>
    <thetext>Consider the below code snippet:
package p1;

import java.util.function.Consumer;

public class Test {
    static void run(Consumer&lt;Integer&gt; consumer) { // type &apos;@&apos; before Consumer&lt;Integer&gt;
        System.out.println(&quot;consumer&quot;);
    }
    static {
        run(new Consumer&lt;Integer&gt;() {
            @Override
            public void accept(Integer integer) {
                System.out.println(andThen(null));
            }
        });
    }
}

Type &apos;@&apos; as mentioned in the code and there are multiple NPE thrown.

java.lang.NullPointerException
	at org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.anonymousOriginalSuperType(LocalTypeBinding.java:89)
	at org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.sourceName(LocalTypeBinding.java:282)
	at org.eclipse.jdt.internal.compiler.problem.ProblemReporter.illegalModifierForLocalClass(ProblemReporter.java:2776)
	at org.eclipse.jdt.internal.compiler.lookup.ClassScope.checkAndSetModifiers(ClassScope.java:638)
	at org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildLocalType(ClassScope.java:204)
	at org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildAnonymousTypeBinding(ClassScope.java:62)
	at org.eclipse.jdt.internal.compiler.lookup.BlockScope.addAnonymousType(BlockScope.java:94)
	at org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.resolveTypeForQualifiedAllocationExpression(QualifiedAllocationExpression.java:538)
	at org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.resolveType(QualifiedAllocationExpression.java:283)
	at org.eclipse.jdt.internal.compiler.ast.Expression.resolve(Expression.java:1020)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements(AbstractMethodDeclaration.java:619)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements(MethodDeclaration.java:299)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:529)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1207)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1320)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:587)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1204)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:689)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1183)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2404611</commentid>
    <comment_count>1</comment_count>
    <who name="Manju Mathew">manju656</who>
    <bug_when>2014-05-20 22:34:16 -0400</bug_when>
    <thetext>Tested using 4.4 RC1 build.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2404615</commentid>
    <comment_count>2</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-05-21 00:47:21 -0400</bug_when>
    <thetext>thanks Shankha for taking a look.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2423508</commentid>
    <comment_count>3</comment_count>
      <attachid>244734</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-07-02 09:32:12 -0400</bug_when>
    <thetext>Created attachment 244734
Parser Debug Statements

Please consider a simplified version of the test case:

class Y {}
class Z{}

class X {
  
  void bar2(@ Z z) {}
  //        ^  Illegal @ 

  static  {
        bar(new Y() {});
  }
}

Please note this is a test case with errors.

Reason for the NPE:

org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.anonymousOriginalSuperType(LocalTypeBinding.java:89)

The reason is the field: this.superInterfaces is null. 
The field: this.superclass is also null along with this.superInterfaces

The superType and the superInterface for the anonymous type has not been set.

Call Stack:

LocalTypeBinding.anonymousOriginalSuperType(LocalTypeBinding.java:89)
LocalTypeBinding.sourceName(LocalTypeBinding.java:282)
ProblemReporter.illegalModifierForLocalClass(ProblemReporter.java:2776)
ClassScope.checkAndSetModifiers(ClassScope.java:638)
ClassScope.buildLocalType(ClassScope.java:204)

ClassScope.buildAnonymousTypeBinding(ClassScope.java:62)

The superType and superInterface are set in ClassScope.buildAnonymousTypeBinding
Line 77 and Line 90.

The function checkAndSetModifiers handles all the issues with respect to modifiers. 

The reason checkAndSetModifiers is not able to handle this case is because
the modifier is set to 8. This is not in the standard set of unexpected modifiers:

Line No: 635
final int UNEXPECTED_MODIFIERS = ~(ClassFileConstants.AccAbstract | ClassFileConstants.AccFinal | ClassFileConstants.AccStrictfp);

------------------------------

Now coming back to the reason why the modifier is set to 8.

void bar2(@ Z z) {}
//        ^  Illegal @


The function parse() 
is called for the method bar2 form
Parser#parse(MethodDeclaration md, CompilationUnitDeclaration unit)
Parser.java: Line No: 11379 

We fill up the statements of the method (md). 
void bar2(@ Z z) {}

We mark &quot;new Y() {}&quot; as in 

static {
        bar(new Y() {});
}

As one of the statements for the method (bar2()). 
We skip the original arguments associated with bar2.  

After execution of parse() 

md.statements[0] is set to QualifiedAllocationExpression
which denotes a anonymous type.

The QualifiedAllocationExpressiontype is marked as 
new Y() {
}

with QualifiedAllocationExpressiontype.anonymousType being set to:
{
}

QualifiedAllocationExpressiontype.anonymousType.modifiers is set to 8.

And thus leads to NPE, as checkAndSetModifiers (as mentioned above) cannot handle
this case.


------------------------------
There can be two solutions:

1) A simple check if the super interface and super type do not exist and skip
looking up the sourceName() for the anonymous type.

LTB#sourceName()
if (anonymousOriginalSuperType() == null) {
			System.out.println(&quot;Will hit null\n&quot;); //$NON-NLS-1$
			return CharOperation.concat(TypeConstants.ANONYM_PREFIX, this.sourceName,
					TypeConstants.ANONYM_SUFFIX);
		}

2) 
bar2(@ Z z) {}
To fix the error recovery where we do not miss out on the function&apos;s parameter z on encountering a illegal @.

Which one is preferable?

I have set:
private static final boolean DEBUG = true;
private static final boolean DEBUG_AUTOMATON = true;

and attaching the relevant parser debug statements in a separate file. 

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2423857</commentid>
    <comment_count>4</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-07-03 00:54:59 -0400</bug_when>
    <thetext>(In reply to shankha banerjee from comment #3)
&gt; 
&gt; Please note this is a test case with errors.
&gt; 
&gt; Reason for the NPE:
&gt; 
&gt; org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.
&gt; anonymousOriginalSuperType(LocalTypeBinding.java:89)
&gt; 

Some more clarification on the relation between  NPE and the modifier of the anonymous type.

The NPE is caused as we enter from checkModifiers to ProblemReporter.illegalModifierForLocalClass as mentioned in the call stack.

Function checkModifiers is not able to handle the case where the modifier is set to 8 (int AccStatic       = 0x0008). 

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2423965</commentid>
    <comment_count>5</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-07-03 07:05:45 -0400</bug_when>
    <thetext>(In reply to shankha banerjee from comment #3)
&gt; There can be two solutions:
&gt; 2) 
&gt; bar2(@ Z z) {}
&gt; To fix the error recovery where we do not miss out on the function&apos;s
&gt; parameter z on encountering a illegal @.
&gt; 
&gt; Which one is preferable?

I would prefer this. But I am surprised that the recovery doesn&apos;t succeeds for what seems to be a straight forward case. I haven&apos;t looked at the parser debug logs, perhaps Srikanth can throw some light on what&apos;s going on.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2424367</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-07-04 02:14:44 -0400</bug_when>
    <thetext>(In reply to shankha banerjee from comment #3)
&gt; There can be two solutions:
&gt; 
&gt; 1) A simple check if the super interface and super type do not exist and skip
&gt; looking up the sourceName() for the anonymous type.
&gt; 
&gt; LTB#sourceName()
&gt; if (anonymousOriginalSuperType() == null) {
&gt; 			System.out.println(&quot;Will hit null\n&quot;); //$NON-NLS-1$
&gt; 			return CharOperation.concat(TypeConstants.ANONYM_PREFIX, this.sourceName,
&gt; 					TypeConstants.ANONYM_SUFFIX);
&gt; 		}
&gt; 
&gt; 2) 
&gt; bar2(@ Z z) {}
&gt; To fix the error recovery where we do not miss out on the function&apos;s
&gt; parameter z on encountering a illegal @.
&gt; 
&gt; Which one is preferable?

What does the parse tree look like ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2424383</commentid>
    <comment_count>7</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-07-04 03:12:36 -0400</bug_when>
    <thetext>(In reply to Srikanth Sankaran  - On vacation till Jul 13th 2014  from comment &gt; 
&gt; What does the parse tree look like ?

I printed out the compilationUnit : unit
in MethodDeclaration#parseStatements 

For the source code mentioned in Comment 3:

This is what I get:

class Y {
  Y() {
    super();
  }
}
class Z {
  Z() {
    super();
  }
}
class X {
  static {
  }
  X() {
    super();
  }
  &lt;clinit&gt;() {
  }
  void bar2() {
  }
}
---
The parameters of bar2 have been removed.

For the following piece of code without the illegal @
class Y {}
class Z {}

class X {
  void bar2(Z z) {}
  static  {
      bar(new Y() {});
  }
}

We get:

class Y {
  Y() {
    super();
  }
}
class Z {
  Z() {
    super();
  }
}
class X {
  static {
  }
  &lt;clinit&gt;() {
  }
  X() {
    super();
  }
  void bar2(Z z) {
  }
}

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2435055</commentid>
    <comment_count>8</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-08-04 04:02:13 -0400</bug_when>
    <thetext>Target: 4.5 M2

More effort is needed to fix error recovery, which is the original source of the problem.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2437188</commentid>
    <comment_count>9</comment_count>
      <attachid>245840</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-08-08 11:00:40 -0400</bug_when>
    <thetext>Created attachment 245840
Patch

Test results are good.

The recovery is broken and it generates a incorrect parse tree.
The conservative fix is to handle the issue in LTB#anonymousOriginalSuperType and return getJavaLangObject() as per the documented protocol. // See the comment before the function.

Fix: if (this.superclass == null &amp;&amp; this.scope != null)

There is no need to check for both this.superclass and this.superInterfaces.
Check on one of them is good enough.

The fields are set here:
ClassScope#buildAnonymousTypeBinding

LineNo: 78
anonymousType.setSuperClass(getJavaLangObject());
anonymousType.setSuperInterfaces(new ReferenceBinding[] { supertype });

Line No: 90
anonymousType.setSuperClass(supertype);			anonymousType.setSuperInterfaces(Binding.NO_SUPERINTERFACES);

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2437401</commentid>
    <comment_count>10</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-08-11 00:14:38 -0400</bug_when>
    <thetext>My contribution for this defect fix complies with http://www.eclipse.org/legal/CoO.php</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2437402</commentid>
    <comment_count>11</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-08-11 00:16:28 -0400</bug_when>
    <thetext>Patch looks good - Released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=9a8f94b0b98db0b5d6b8eb4d27d568dc18fc1309</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2452905</commentid>
    <comment_count>12</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-09-17 04:03:26 -0400</bug_when>
    <thetext>Verified for 4.5 M2 using build I20140916-2000</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2478485</commentid>
    <comment_count>13</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-11-07 03:16:59 -0500</bug_when>
    <thetext>Reopening for back port</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2478553</commentid>
    <comment_count>14</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-11-07 04:29:07 -0500</bug_when>
    <thetext>Back ported via:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=R4_4_maintenance&amp;id=aea243be17e329664f276f935fa564c75f6b6985</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2507085</commentid>
    <comment_count>15</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2015-01-19 00:21:42 -0500</bug_when>
    <thetext>Verified for Eclipse Luna SR2 Build id: M20150114-1500</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>244734</attachid>
            <date>2014-07-02 09:32:00 -0400</date>
            <delta_ts>2014-07-02 09:32:12 -0400</delta_ts>
            <desc>Parser Debug Statements</desc>
            <filename>ParserDebugStmt.txt</filename>
            <type>text/plain</type>
            <size>6346</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">LS0gRU5URVIgSU5TSURFIFBBUlNFIE1FVEhPRCAtLQ0KLSBTdGFydCAtLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLQ0KQ3VycmVudCBUb2tlbjogfg0KDQpTaGlmdCAgICAgICAgLSAoQCkN
ClNoaWZ0ICAgICAgICAtIChJZGVudGlmaWVyKQ0KU2hpZnQgICAgICAgIC0gKElkZW50aWZpZXIp
DQpSZWR1Y2UgICAgICAgLSBBbm5vdGF0aW9uTmFtZQ0KQW5ub3RhdGlvbk5hbWUgOjo9IEFUIFVu
YW5ub3RhdGFibGVOYW1lDQotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
DQpSZWR1Y2UgICAgICAgLSBNYXJrZXJBbm5vdGF0aW9uDQpNYXJrZXJBbm5vdGF0aW9uIDo6PSBB
bm5vdGF0aW9uTmFtZQ0KLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0K
UmVkdWNlICAgICAgIC0gTW9kaWZpZXINCk1vZGlmaWVyIDo6PSBBbm5vdGF0aW9uDQotLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQpSZWR1Y2UgICAgICAgLSBNb2RpZmll
cnMNCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NClNoaWZ0ICAgICAg
ICAtICgpKQ0KUmVkdWNlICAgICAgIC0gTmFtZQ0KTmFtZSA6Oj0gU2ltcGxlTmFtZQ0KLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KUmVkdWNlICAgICAgIC0gQ2xhc3NP
ckludGVyZmFjZQ0KQ2xhc3NPckludGVyZmFjZSA6Oj0gTmFtZQ0KLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KUmVkdWNlICAgICAgIC0gQ2xhc3NPckludGVyZmFjZVR5
cGUNCiAgICAgICAgICAgICAtIFJlZmVyZW5jZVR5cGUNClJlZmVyZW5jZVR5cGUgOjo9IENsYXNz
T3JJbnRlcmZhY2VUeXBlDQotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
DQpSZWR1Y2UgICAgICAgLSBQdXNoUmVhbE1vZGlmaWVycw0KUHVzaFJlYWxNb2RpZmllcnMgOjo9
DQotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQpFcnJvciAgICAgICAg
LSANClNoaWZ0ICAgICAgICAtIChAKQ0KU2hpZnQgICAgICAgIC0gKElkZW50aWZpZXIpDQpTaGlm
dCAgICAgICAgLSAoSWRlbnRpZmllcikNClJlZHVjZSAgICAgICAtIEFubm90YXRpb25OYW1lDQpB
bm5vdGF0aW9uTmFtZSA6Oj0gQVQgVW5hbm5vdGF0YWJsZU5hbWUNCi0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NClJlZHVjZSAgICAgICAtIE1hcmtlckFubm90YXRpb24N
Ck1hcmtlckFubm90YXRpb24gOjo9IEFubm90YXRpb25OYW1lDQotLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tDQpSZWR1Y2UgICAgICAgLSBNb2RpZmllcg0KTW9kaWZpZXIg
Ojo9IEFubm90YXRpb24NCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0N
ClJlZHVjZSAgICAgICAtIE1vZGlmaWVyc29wdA0KTW9kaWZpZXJzb3B0IDo6PSBNb2RpZmllcnMN
Ci0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NClNoaWZ0ICAgICAgICAt
ICgpKQ0KUmVkdWNlICAgICAgIC0gTmFtZQ0KTmFtZSA6Oj0gU2ltcGxlTmFtZQ0KLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KUmVkdWNlICAgICAgIC0gQ2xhc3NPcklu
dGVyZmFjZQ0KQ2xhc3NPckludGVyZmFjZSA6Oj0gTmFtZQ0KLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLQ0KUmVkdWNlICAgICAgIC0gQ2xhc3NPckludGVyZmFjZVR5cGUN
CiAgICAgICAgICAgICAtIFJlZmVyZW5jZVR5cGUNClJlZmVyZW5jZVR5cGUgOjo9IENsYXNzT3JJ
bnRlcmZhY2VUeXBlDQotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQpF
cnJvciAgICAgICAgLSANClNoaWZ0ICAgICAgICAtIChJZGVudGlmaWVyKQ0KUmVkdWNlICAgICAg
IC0gTW9kaWZpZXJzb3B0DQpNb2RpZmllcnNvcHQgOjo9DQotLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tDQpTaGlmdCAgICAgICAgLSAoKSkNClJlZHVjZSAgICAgICAtIE5h
bWUNCk5hbWUgOjo9IFNpbXBsZU5hbWUNCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0NClJlZHVjZSAgICAgICAtIENsYXNzT3JJbnRlcmZhY2UNCkNsYXNzT3JJbnRlcmZh
Y2UgOjo9IE5hbWUNCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NClJl
ZHVjZSAgICAgICAtIENsYXNzT3JJbnRlcmZhY2VUeXBlDQogICAgICAgICAgICAgLSBSZWZlcmVu
Y2VUeXBlDQpSZWZlcmVuY2VUeXBlIDo6PSBDbGFzc09ySW50ZXJmYWNlVHlwZQ0KLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KRXJyb3IgICAgICAgIC0gDQpTaGlmdCAg
ICAgICAgLSAoKSkNClJlZHVjZSAgICAgICAtIE1vZGlmaWVyc29wdA0KTW9kaWZpZXJzb3B0IDo6
PQ0KLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KUmVkdWNlICAgICAg
IC0gVHlwZUFubm90YXRpb25zb3B0DQpUeXBlQW5ub3RhdGlvbnNvcHQgOjo9DQotLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQpFcnJvciAgICAgICAgLSANClNoaWZ0ICAg
ICAgICAtICh7KQ0KUmVkdWNlICAgICAgIC0gTW9kaWZpZXJzb3B0DQpNb2RpZmllcnNvcHQgOjo9
DQotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQpSZWR1Y2UgICAgICAg
LSBUeXBlQW5ub3RhdGlvbnNvcHQNClR5cGVBbm5vdGF0aW9uc29wdCA6Oj0NCi0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCkVycm9yICAgICAgICAtIA0KU2hpZnQgICAg
ICAgIC0gKH0pDQpSZWR1Y2UgICAgICAgLSBNb2RpZmllcnNvcHQNCk1vZGlmaWVyc29wdCA6Oj0N
Ci0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NClJlZHVjZSAgICAgICAt
IFR5cGVBbm5vdGF0aW9uc29wdA0KVHlwZUFubm90YXRpb25zb3B0IDo6PQ0KLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KRXJyb3IgICAgICAgIC0gDQpTaGlmdCAgICAg
ICAgLSAoc3RhdGljKQ0KU2hpZnQgICAgICAgIC0gKHspDQpSZWR1Y2UgICAgICAgLSBTdGF0aWNP
bmx5DQpTdGF0aWNPbmx5IDo6PSBzdGF0aWMNCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0NClJlZHVjZSAgICAgICAtIE9wZW5CbG9jaw0KT3BlbkJsb2NrIDo6PQ0KLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KU2hpZnQgICAgICAgIC0gKElk
ZW50aWZpZXIpDQpTaGlmdCAgICAgICAgLSAoKCkNClJlZHVjZSAgICAgICAtIE5hbWUNCk5hbWUg
Ojo9IFNpbXBsZU5hbWUNCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0N
ClNoaWZ0ICAgICAgICAtIChuZXcpDQpTaGlmdCAgICAgICAgLSAoSWRlbnRpZmllcikNClNoaWZ0
ICAgICAgICAtICgoKQ0KUmVkdWNlICAgICAgIC0gTmFtZQ0KTmFtZSA6Oj0gU2ltcGxlTmFtZQ0K
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KUmVkdWNlICAgICAgIC0g
Q2xhc3NPckludGVyZmFjZQ0KQ2xhc3NPckludGVyZmFjZSA6Oj0gTmFtZQ0KLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KUmVkdWNlICAgICAgIC0gQ2xhc3NPckludGVy
ZmFjZVR5cGUNCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NClJlZHVj
ZSAgICAgICAtIENsYXNzVHlwZQ0KLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLQ0KUmVkdWNlICAgICAgIC0gRW50ZXJJbnN0YW5jZUNyZWF0aW9uQXJndW1lbnRMaXN0DQpF
bnRlckluc3RhbmNlQ3JlYXRpb25Bcmd1bWVudExpc3QgOjo9DQotLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tDQpTaGlmdCAgICAgICAgLSAoKSkNClJlZHVjZSAgICAgICAt
IEFyZ3VtZW50TGlzdG9wdA0KQXJndW1lbnRMaXN0b3B0IDo6PQ0KLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KU2hpZnQgICAgICAgIC0gKHspDQpSZWR1Y2UgICAgICAg
LSBVbnF1YWxpZmllZEVudGVyQW5vbnltb3VzQ2xhc3NCb2R5DQpVbnF1YWxpZmllZEVudGVyQW5v
bnltb3VzQ2xhc3NCb2R5IDo6PQ0KLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLQ0KRXJyb3IgICAgICAgIC0gDQpTaGlmdCAgICAgICAgLSAofSkNClJlZHVjZSAgICAgICAt
IE1vZGlmaWVyc29wdA0KTW9kaWZpZXJzb3B0IDo6PQ0KLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLQ0KUmVkdWNlICAgICAgIC0gVHlwZUFubm90YXRpb25zb3B0DQpUeXBl
QW5ub3RhdGlvbnNvcHQgOjo9DQotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tDQpFcnJvciAgICAgICAgLSANClNoaWZ0ICAgICAgICAtICgpKQ0KUmVkdWNlICAgICAgIC0g
TW9kaWZpZXJzb3B0DQpNb2RpZmllcnNvcHQgOjo9DQotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tDQpSZWR1Y2UgICAgICAgLSBUeXBlQW5ub3RhdGlvbnNvcHQNClR5cGVB
bm5vdGF0aW9uc29wdCA6Oj0NCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0NCkVycm9yICAgICAgICAtIA0KU2hpZnQgICAgICAgIC0gKDspDQpSZWR1Y2UgICAgICAgLSBN
b2RpZmllcnNvcHQNCk1vZGlmaWVyc29wdCA6Oj0NCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0NClJlZHVjZSAgICAgICAtIFR5cGVBbm5vdGF0aW9uc29wdA0KVHlwZUFu
bm90YXRpb25zb3B0IDo6PQ0KLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LQ0KRXJyb3IgICAgICAgIC0gDQpTaGlmdCAgICAgICAgLSAoVW5leHBlY3RlZCBFbmQgT2YgRmls
ZSkNClJlZHVjZSAgICAgICAtIE1vZGlmaWVyc29wdA0KTW9kaWZpZXJzb3B0IDo6PQ0KLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KUmVkdWNlICAgICAgIC0gVHlwZUFu
bm90YXRpb25zb3B0DQpUeXBlQW5ub3RhdGlvbnNvcHQgOjo9DQotLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tDQpFcnJvciAgICAgICAgLSANCi0gRW5kIC0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCi0tIEVOVEVSIElOU0lERSBQQVJTRSBNRVRIT0QgLS0N
Ci0gU3RhcnQgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCkN1cnJlbnQgVG9rZW46
IH4NCg0KU2hpZnQgICAgICAgIC0gKEApDQpTaGlmdCAgICAgICAgLSAoSWRlbnRpZmllcikNClNo
aWZ0ICAgICAgICAtIChJZGVudGlmaWVyKQ0KUmVkdWNlICAgICAgIC0gQW5ub3RhdGlvbk5hbWUN
CkFubm90YXRpb25OYW1lIDo6PSBBVCBVbmFubm90YXRhYmxlTmFtZQ0KLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KUmVkdWNlICAgICAgIC0gTWFya2VyQW5ub3RhdGlv
bg0KTWFya2VyQW5ub3RhdGlvbiA6Oj0gQW5ub3RhdGlvbk5hbWUNCi0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NClJlZHVjZSAgICAgICAtIE1vZGlmaWVyDQpNb2RpZmll
ciA6Oj0gQW5ub3RhdGlvbg0KLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LQ0KUmVkdWNlICAgICAgIC0gTW9kaWZpZXJzDQotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tDQpTaGlmdCAgICAgICAgLSAoKSkNClJlZHVjZSAgICAgICAtIE5hbWUNCk5h
bWUgOjo9IFNpbXBsZU5hbWUNCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0NClJlZHVjZSAgICAgICAtIENsYXNzT3JJbnRlcmZhY2UNCkNsYXNzT3JJbnRlcmZhY2UgOjo9
IE5hbWUNCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NClJlZHVjZSAg
ICAgICAtIENsYXNzT3JJbnRlcmZhY2VUeXBlDQogICAgICAgICAgICAgLSBSZWZlcmVuY2VUeXBl
DQpSZWZlcmVuY2VUeXBlIDo6PSBDbGFzc09ySW50ZXJmYWNlVHlwZQ0KLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KUmVkdWNlICAgICAgIC0gUHVzaFJlYWxNb2RpZmll
cnMNClB1c2hSZWFsTW9kaWZpZXJzIDo6PQ0KLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLQ0KRXJyb3IgICAgICAgIC0gDQotIEVuZCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tDQotLSBFWElUIEZST00gUEFSU0UgTUVUSE9EIC0tDQotLSBFWElUIEZST00g
UEFSU0UgTUVUSE9EIC0tDQoNCg==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>245840</attachid>
            <date>2014-08-08 11:00:00 -0400</date>
            <delta_ts>2014-08-08 11:00:40 -0400</delta_ts>
            <desc>Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>2028</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
ZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZhCmluZGV4IDI1MzBlOWEuLmJhZWZlMmUgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Rv
bS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YQpAQCAtNDg1OCw1ICs0ODU4LDIyIEBAIHB1YmxpYyB2
b2lkIHRlc3RCdWc0MzIxNzUoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKIAkJdGhpcy5h
c3QubmV3U2ltcGxlVHlwZSh0aGlzLmFzdC5uZXdOYW1lKHJlcykpOwogCX0KIH0KKy8vaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQzNTM0OCwgWzEuOF1bY29t
cGlsZXJdIE5QRSBpbiBKRFQgQ29yZSBkdXJpbmcgQVNUIGNyZWF0aW9uCisvLyBOUEUgd2l0aG91
dCBmaXgKK3B1YmxpYyB2b2lkIHRlc3RCdWc0MzUzNDgoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0
aW9uIHsKKwl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxOC9z
cmMvdGVzdEJ1ZzQzNTM0OC9YLmphdmEiLAorCQl0cnVlLyogcmVzb2x2ZSAqLyk7CisJU3RyaW5n
IGNvbnRlbnRzID0gInBhY2thZ2UgdGVzdEJ1ZzQzNTM0ODtcbiIgKworCQkiY2xhc3MgWSB7fVxu
IiArCisJCSJjbGFzcyBae31cbiIgKworCQkiY2xhc3MgWCB7XG4iICsKKwkJIiAgdm9pZCBiYXIy
KEAgWiB6KSB7fVxuIiArCisJCSIgIC8vICAgICAgICBeICBJbGxlZ2FsIEAgXG4iICsKKwkJIiAg
c3RhdGljICB7XG4iICsKKwkJIiAgICAgICAgYmFyKG5ldyBZKCkge30pO1xuIiArCisJCSIgIH1c
biIgKworCQkifVxuIjsKKwlidWlsZEFTVChjb250ZW50cywgdGhpcy53b3JraW5nQ29weSwgZmFs
c2UpOworfQogCiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0xvY2FsVHlwZUJpbmRpbmcu
amF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9sb29rdXAvTG9jYWxUeXBlQmluZGluZy5qYXZhCmluZGV4IDc2MzM0NzMu
LjkwZGVhNzUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvTG9jYWxUeXBlQmluZGluZy5qYXZh
CisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9sb29rdXAvTG9jYWxUeXBlQmluZGluZy5qYXZhCkBAIC04NCw2ICs4NCw4
IEBAIHB1YmxpYyB2b2lkIGFkZElubmVyRW11bGF0aW9uRGVwZW5kZW50KEJsb2NrU2NvcGUgZGVw
ZW5kZW50U2NvcGUsIGJvb2xlYW4gd2FzRW5jCiBwdWJsaWMgUmVmZXJlbmNlQmluZGluZyBhbm9u
eW1vdXNPcmlnaW5hbFN1cGVyVHlwZSgpIHsKIAlpZiAoIWlzUHJvdG90eXBlKCkpCiAJCXJldHVy
biAoKExvY2FsVHlwZUJpbmRpbmcpIHRoaXMucHJvdG90eXBlKS5hbm9ueW1vdXNPcmlnaW5hbFN1
cGVyVHlwZSgpOworCWlmICh0aGlzLnN1cGVyY2xhc3MgPT0gbnVsbCAmJiB0aGlzLnNjb3BlICE9
IG51bGwpCisJCXJldHVybiB0aGlzLnNjb3BlLmdldEphdmFMYW5nT2JqZWN0KCk7CiAJCiAJaWYg
KHRoaXMuc3VwZXJJbnRlcmZhY2VzICE9IEJpbmRpbmcuTk9fU1VQRVJJTlRFUkZBQ0VTKSB7CiAJ
CXJldHVybiB0aGlzLnN1cGVySW50ZXJmYWNlc1swXTsK
</data>
<flag name="review"
          id="63156"
          type_id="6"
          status="?"
          setter="shankhba"
    />
          </attachment>
      

    </bug>

</bugzilla>