<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>448556</bug_id>
          
          <creation_ts>2014-10-23 16:59:00 -0400</creation_ts>
          <short_desc>[1.8][compiler] Invalid compiler error about effectively final variable outside the context of a lambda.</short_desc>
          <delta_ts>2015-01-28 01:18:22 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4.1</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.4.2</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Craig Motlin">craig.motlin</reporter>
          <assigned_to name="Sasikanth Bharadwaj">saammana</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>jarthana</cc>
    
    <cc>srikanth_sankaran</cc>
          <qa_contact name="Srikanth Sankaran">srikanth_sankaran</qa_contact>
          <votes>0</votes>

      

      

      <flag name="review"
          id="63803"
          type_id="1"
          status="+"
          setter="jarthana"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2470764</commentid>
    <comment_count>0</comment_count>
    <who name="Craig Motlin">craig.motlin</who>
    <bug_when>2014-10-23 16:59:27 -0400</bug_when>
    <thetext>In the example code below, ecj gives the invalid error &quot;Local variable i defined in an enclosing scope must be final or effectively final.&quot; It&apos;s invalid because the variable i is not being closed over by the lambda, rather the value returned by get() is being closed over. Oddly, the fact that MyPredicate extends Serializable seems to matter. If I delete that, the compiler error goes away.

public class MyTest
{
     private static final List&lt;Integer&gt; INTEGERS = Arrays.asList(1, 2, 3, 4);

    public static void main(String[] args)
    {
        for (int i = 0; i &lt; INTEGERS.size(); i++)
        {
            MyPredicate&lt;Integer&gt; predicate = INTEGERS.get(i)::equals;
        }
    }

    public interface MyPredicate&lt;T&gt; extends Serializable
    {
        boolean accept(T each);
    }
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2471480</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-10-24 14:21:44 -0400</bug_when>
    <thetext>Thanks for the report. Strange as it may sound this is a problem in
code generation. There are some scenarios where we turn a method
reference into an implicit lambda for ease of code generation purposes 
and there is some bad interaction there.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2471482</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-10-24 14:29:41 -0400</bug_when>
    <thetext>Trivial workaround exists - to extract the receiver to a local variable.
Lowering severity to normal. Fix is still in consideration for M3, or
early M4.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2471695</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-10-25 06:25:51 -0400</bug_when>
    <thetext>I&apos;ll work on this early M4, M3 looks too cramped.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2475393</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-11-02 23:17:15 -0500</bug_when>
    <thetext>Sasi, can you take this forward for M4 please ? 

We may have to create a hidden local variable into which we evaluate the
LHS of :: and capture the result. The evaluation of the LHS has to be
happen then and there and cannot be deferred.

You may want to look at how switching on strings is implemented with a
hidden variable: See uses of SwitchStatement.SecretStringVariableName.
Alternately ForeachStatement.Secret*. This hidden variable may have to
be created right during resolve and it may not be possible to defer it
to code generation time.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2486106</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-11-19 23:50:09 -0500</bug_when>
    <thetext>If a patch is available by 27th Nov, I can review - this one is a bit tricky.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2487883</commentid>
    <comment_count>6</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2014-11-24 03:57:31 -0500</bug_when>
    <thetext>Also a candidate for 4.4.2.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2488705</commentid>
    <comment_count>7</comment_count>
      <attachid>248903</attachid>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2014-11-25 05:33:17 -0500</bug_when>
    <thetext>Created attachment 248903
patch</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2488716</commentid>
    <comment_count>8</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2014-11-25 05:42:22 -0500</bug_when>
    <thetext>(In reply to comment #5)
&gt; If a patch is available by 27th Nov, I can review - this one is a bit tricky.
Attached in progress patch with fix and test. Patch follows the same approach outlined in comment4, but I&apos;ve tried to limit the secret variable to the cases only where the lhs accesses a non-final local variable. All java8 tests pass. I&apos;m working on coming up with more test cases. Srikanth, please take a look.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2489563</commentid>
    <comment_count>9</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-11-27 01:04:03 -0500</bug_when>
    <thetext>(In reply to Sasikanth Bharadwaj from comment #8)
&gt; (In reply to comment #5)
&gt; &gt; If a patch is available by 27th Nov, I can review - this one is a bit tricky.
&gt; Attached in progress patch with fix and test. Patch follows the same
&gt; approach outlined in comment4, but I&apos;ve tried to limit the secret variable
&gt; to the cases only where the lhs accesses a non-final local variable. All
&gt; java8 tests pass. I&apos;m working on coming up with more test cases. Srikanth,
&gt; please take a look.


The specification requires that the LHS be evaluated right then and there, I am
not sure the patch guarantees that. Could you look into that please ? For example
if the LHS is a method call, it should be evaluated right then and there so any
side effects should be seen immediately.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2490796</commentid>
    <comment_count>10</comment_count>
      <attachid>249041</attachid>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2014-12-01 03:13:41 -0500</bug_when>
    <thetext>Created attachment 249041
patch

Modified patch that takes care of lhs evaluation and test</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2490799</commentid>
    <comment_count>11</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2014-12-01 03:15:17 -0500</bug_when>
    <thetext>(In reply to comment #9)
&gt; (In reply to Sasikanth Bharadwaj from comment #8)
&gt; &gt; (In reply to comment #5)
&gt; &gt; &gt; If a patch is available by 27th Nov, I can review - this one is a bit
&gt; tricky.
&gt; &gt; Attached in progress patch with fix and test. Patch follows the same
&gt; &gt; approach outlined in comment4, but I&apos;ve tried to limit the secret variable
&gt; &gt; to the cases only where the lhs accesses a non-final local variable. All
&gt; &gt; java8 tests pass. I&apos;m working on coming up with more test cases. Srikanth,
&gt; &gt; please take a look.
&gt; 
&gt; 
&gt; The specification requires that the LHS be evaluated right then and there, I am
&gt; not sure the patch guarantees that. Could you look into that please ? For
&gt; example
&gt; if the LHS is a method call, it should be evaluated right then and there so any
&gt; side effects should be seen immediately.
Modified the patch to take care of this. @Jay, please review. Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2491407</commentid>
    <comment_count>12</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-12-02 00:50:44 -0500</bug_when>
    <thetext>Just one comment on the patch:

Can &quot;this.removeVariable&quot; be made null after codeStream.removeVariable() call if we don&apos;t expect to use it again?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2491523</commentid>
    <comment_count>13</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2014-12-02 06:15:13 -0500</bug_when>
    <thetext>(In reply to comment #12)
&gt; Just one comment on the patch:
&gt; 
&gt; Can &quot;this.removeVariable&quot; be made null after codeStream.removeVariable() call if
&gt; we don&apos;t expect to use it again?
No issues doing so</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2491924</commentid>
    <comment_count>14</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2014-12-03 01:09:45 -0500</bug_when>
    <thetext>Released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=5c2dc76a8d3cf16dded8b483e956ad365692fb92</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2492340</commentid>
    <comment_count>15</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2014-12-03 12:16:00 -0500</bug_when>
    <thetext>Please backport to 4.4.2.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2504417</commentid>
    <comment_count>16</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2015-01-12 06:57:14 -0500</bug_when>
    <thetext>Adapted to 442 and released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=R4_4_maintenance&amp;id=6cf26d9b8eafde2a3d40abef8196cb5e533e4091</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2507629</commentid>
    <comment_count>17</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2015-01-20 00:25:15 -0500</bug_when>
    <thetext>Resolving for verification</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2511117</commentid>
    <comment_count>18</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2015-01-28 01:18:22 -0500</bug_when>
    <thetext>Verified for 4.5 M5 with build I20150127-0900

And 

Verified for 4.4.2 RC2 with build M20150122-0430</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>248903</attachid>
            <date>2014-11-25 05:33:00 -0500</date>
            <delta_ts>2014-12-01 03:11:02 -0500</delta_ts>
            <desc>patch</desc>
            <filename>Fix-and-test-for-bug448556.patch</filename>
            <type>text/plain</type>
            <size>6228</size>
            <attacher name="Sasikanth Bharadwaj">saammana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0xhbWJkYVJlZ3Jlc3Np
b25UZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9MYW1iZGFSZWdyZXNz
aW9uVGVzdC5qYXZhCmluZGV4IGMwZjQwMjEuLmMwNjA0ZmUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9jb21waWxlci9yZWdyZXNzaW9uL0xhbWJkYVJlZ3Jlc3Npb25UZXN0LmphdmEKKysrIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTGFtYmRhUmVncmVzc2lvblRlc3QuamF2YQpAQCAt
NTMwLDYgKzUzMCwyOCBAQAogCQkidGVzdCBjYW5ub3QgYmUgcmVzb2x2ZWQgdG8gYSB0eXBlXG4i
ICsgCiAJCSItLS0tLS0tLS0tXG4iKTsKIH0KKy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD00NDg1NTYKKy8vIFsxLjhdW2NvbXBpbGVyXSBJbnZhbGlkIGNv
bXBpbGVyIGVycm9yIGFib3V0IGVmZmVjdGl2ZWx5IGZpbmFsIHZhcmlhYmxlIG91dHNpZGUgdGhl
IGNvbnRleHQgb2YgYSBsYW1iZGEuCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDQ0ODU1NigpIHsKKwl0
aGlzLnJ1bkNvbmZvcm1UZXN0KG5ldyBTdHJpbmcgW10geworCQkiWC5qYXZhIiwKKwkJImltcG9y
dCBqYXZhLmlvLlNlcmlhbGl6YWJsZTtcbiIgKyAKKwkJImltcG9ydCBqYXZhLnV0aWwuQXJyYXlz
O1xuIiArIAorCQkiaW1wb3J0IGphdmEudXRpbC5MaXN0O1xuIiArIAorCQkicHVibGljIGNsYXNz
IFgge1xuIiArIAorCQkiICAgIHByaXZhdGUgc3RhdGljIGZpbmFsIExpc3Q8SW50ZWdlcj4gSU5U
RUdFUlMgPSBBcnJheXMuYXNMaXN0KDEsIDIsIDMsIDQpO1xuIiArIAorCQkiICAgIHB1YmxpYyBz
dGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKyAKKwkJIiAgICAgICAgZm9yIChp
bnQgaSA9IDA7IGkgPCBJTlRFR0VSUy5zaXplKCk7IGkrKykge1xuIiArIAorCQkiICAgICAgICAg
ICAgTXlQcmVkaWNhdGU8SW50ZWdlcj4gcHJlZGljYXRlID0gSU5URUdFUlMuZ2V0KGkpOjplcXVh
bHM7XG4iICsgCisJCSIgICAgICAgIH1cbiIgKyAKKwkJIiAgICB9ICBcbiIgKyAKKwkJIiAgICBw
dWJsaWMgaW50ZXJmYWNlIE15UHJlZGljYXRlPFQ+IGV4dGVuZHMgU2VyaWFsaXphYmxlIHtcbiIg
KyAKKwkJIiAgICAgICAgYm9vbGVhbiBhY2NlcHQoVCBlYWNoKTtcbiIgKyAKKwkJIiAgICB9XG4i
ICsgCisJCSJ9IgorCX0sCisJIiIpOworfQogcHVibGljIHN0YXRpYyBDbGFzcyB0ZXN0Q2xhc3Mo
KSB7CiAJcmV0dXJuIExhbWJkYVJlZ3Jlc3Npb25UZXN0LmNsYXNzOwogfQpkaWZmIC0tZ2l0IGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2FzdC9SZWZlcmVuY2VFeHByZXNzaW9uLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1JlZmVyZW5j
ZUV4cHJlc3Npb24uamF2YQppbmRleCA1NjdkMDNkLi4yYzhkYTE1IDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L1JlZmVyZW5jZUV4cHJlc3Npb24uamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1JlZmVyZW5j
ZUV4cHJlc3Npb24uamF2YQpAQCAtNjMsNiArNjMsNyBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuSW5mZXJlbmNlQ29udGV4dDE4OwogaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuSW50ZXJzZWN0aW9uVHlwZUJp
bmRpbmcxODsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3Vw
Lkludm9jYXRpb25TaXRlOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci5sb29rdXAuTG9jYWxWYXJpYWJsZUJpbmRpbmc7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmxvb2t1cC5NZXRob2RCaW5kaW5nOwogaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuUGFyYW1ldGVyaXplZEdlbmVyaWNNZXRob2RC
aW5kaW5nOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAu
UGFyYW1ldGVyaXplZE1ldGhvZEJpbmRpbmc7CkBAIC04Miw3ICs4MywxMSBAQAogaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5wYXJzZXIuUGFyc2VyOwogCiBwdWJsaWMg
Y2xhc3MgUmVmZXJlbmNlRXhwcmVzc2lvbiBleHRlbmRzIEZ1bmN0aW9uYWxFeHByZXNzaW9uIGlt
cGxlbWVudHMgSVBvbHlFeHByZXNzaW9uLCBJbnZvY2F0aW9uU2l0ZSB7Ci0JCisJLy8gc2VjcmV0
IHZhcmlhYmxlIG5hbWUKKwlwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgU2VjcmV0UmVjZWl2
ZXJWYXJpYWJsZU5hbWUgPSAiIHJlY2VpdmVyXyI7IC8vJE5PTi1OTFMtMSQKKwkvLyBzZWNyZXQg
dmFyaWFibGUgZm9yIGNvZGVnZW4KKwlwdWJsaWMgTG9jYWxWYXJpYWJsZUJpbmRpbmcgcmVjZWl2
ZXJWYXJpYWJsZTsKKwlwcml2YXRlIGJvb2xlYW4gc2hvdWxkR2VuZXJhdGVTZWNyZXRSZWNlaXZl
clZhcmlhYmxlOyAKIAlwdWJsaWMgRXhwcmVzc2lvbiBsaHM7CiAJcHVibGljIFR5cGVSZWZlcmVu
Y2UgW10gdHlwZUFyZ3VtZW50czsKIAlwdWJsaWMgY2hhciBbXSBzZWxlY3RvcjsKQEAgLTE1Myw5
ICsxNTgsMzQgQEAKIAkJCWFyZ3ZbaV0gPSBuZXcgU2luZ2xlTmFtZVJlZmVyZW5jZShuYW1lLnRv
Q2hhckFycmF5KCksIDApOwogCQl9CiAJCWlmIChpc01ldGhvZFJlZmVyZW5jZSgpKSB7CisJCQl0
aGlzLnNob3VsZEdlbmVyYXRlU2VjcmV0UmVjZWl2ZXJWYXJpYWJsZSA9IG5ldyBBU1RWaXNpdG9y
KCkgeworCQkJCWJvb2xlYW4gYWNjZXNzZXNub25GaW5hbE91dGVyTG9jYWxzOworCisJCQkJcHVi
bGljIGJvb2xlYW4gdmlzaXQoU2luZ2xlTmFtZVJlZmVyZW5jZSBuYW1lLCBCbG9ja1Njb3BlIHNr
b3BlKSB7CisJCQkJCUJpbmRpbmcgbG9jYWwgPSBza29wZS5nZXRCaW5kaW5nKG5hbWUuZ2V0TmFt
ZSgpLCBSZWZlcmVuY2VFeHByZXNzaW9uLnRoaXMpOworCQkJCQlpZiAobG9jYWwgaW5zdGFuY2Vv
ZiBMb2NhbFZhcmlhYmxlQmluZGluZykgeworCQkJCQkJTG9jYWxWYXJpYWJsZUJpbmRpbmcgbG9j
YWxCaW5kaW5nID0gKExvY2FsVmFyaWFibGVCaW5kaW5nKWxvY2FsOworCQkJCQkJaWYgKCFsb2Nh
bEJpbmRpbmcuaXNGaW5hbCgpICYmICFsb2NhbEJpbmRpbmcuaXNFZmZlY3RpdmVseUZpbmFsKCkp
IHsKKwkJCQkJCQl0aGlzLmFjY2Vzc2Vzbm9uRmluYWxPdXRlckxvY2FscyA9IHRydWU7CisJCQkJ
CQl9CisJCQkJCX0KKwkJCQkJcmV0dXJuIGZhbHNlOworCQkJCX0KKworCQkJCXB1YmxpYyBib29s
ZWFuIGFjY2Vzc2Vzbm9uRmluYWxPdXRlckxvY2FscygpIHsKKwkJCQkJUmVmZXJlbmNlRXhwcmVz
c2lvbi50aGlzLmxocy50cmF2ZXJzZSh0aGlzLCBSZWZlcmVuY2VFeHByZXNzaW9uLnRoaXMuZW5j
bG9zaW5nU2NvcGUpOworCQkJCQlyZXR1cm4gdGhpcy5hY2Nlc3Nlc25vbkZpbmFsT3V0ZXJMb2Nh
bHM7CisJCQkJfQorCQkJfS5hY2Nlc3Nlc25vbkZpbmFsT3V0ZXJMb2NhbHMoKTsKKwkJCWlmICh0
aGlzLnNob3VsZEdlbmVyYXRlU2VjcmV0UmVjZWl2ZXJWYXJpYWJsZSkgeworCQkJCXRoaXMubGhz
LmdlbmVyYXRlQ29kZShjdXJyZW50U2NvcGUsIGNvZGVTdHJlYW0sIHRydWUpOworCQkJCWNvZGVT
dHJlYW0uc3RvcmUodGhpcy5yZWNlaXZlclZhcmlhYmxlLCBmYWxzZSk7CisJCQkJY29kZVN0cmVh
bS5hZGRWYXJpYWJsZSh0aGlzLnJlY2VpdmVyVmFyaWFibGUpOworCQkJfQogCQkJTWVzc2FnZVNl
bmQgbWVzc2FnZSA9IG5ldyBNZXNzYWdlU2VuZCgpOwogCQkJbWVzc2FnZS5zZWxlY3RvciA9IHRo
aXMuc2VsZWN0b3I7Ci0JCQltZXNzYWdlLnJlY2VpdmVyID0gdGhpcy5yZWNlaXZlclByZWNlZGVz
UGFyYW1ldGVycyA/IG5ldyBTaW5nbGVOYW1lUmVmZXJlbmNlKCJhcmcwIi50b0NoYXJBcnJheSgp
LCAwKSA6IGNvcHkubGhzOyAvLyROT04tTkxTLTEkCisJCQlFeHByZXNzaW9uIHJlY2VpdmVyID0g
dGhpcy5zaG91bGRHZW5lcmF0ZVNlY3JldFJlY2VpdmVyVmFyaWFibGUgPyBuZXcgU2luZ2xlTmFt
ZVJlZmVyZW5jZSh0aGlzLnJlY2VpdmVyVmFyaWFibGUubmFtZSwgMCk6IGNvcHkubGhzOworCQkJ
bWVzc2FnZS5yZWNlaXZlciA9IHRoaXMucmVjZWl2ZXJQcmVjZWRlc1BhcmFtZXRlcnMgPyBuZXcg
U2luZ2xlTmFtZVJlZmVyZW5jZSgiYXJnMCIudG9DaGFyQXJyYXkoKSwgMCkgOiByZWNlaXZlcjsg
Ly8kTk9OLU5MUy0xJAogCQkJbWVzc2FnZS50eXBlQXJndW1lbnRzID0gY29weS50eXBlQXJndW1l
bnRzOwogCQkJbWVzc2FnZS5hcmd1bWVudHMgPSBhcmd2OwogCQkJaW1wbGljaXRMYW1iZGEuc2V0
Qm9keShtZXNzYWdlKTsKQEAgLTIwNSw2ICsyMzUsOSBAQAogCQkJaW1wbGljaXRMYW1iZGEuYWRk
U3ludGhldGljQXJndW1lbnQob3V0ZXJMb2NhbHNbaV0uYWN0dWFsT3V0ZXJMb2NhbFZhcmlhYmxl
KTsKIAkJCiAJCWltcGxpY2l0TGFtYmRhLmdlbmVyYXRlQ29kZShjdXJyZW50U2NvcGUsIGNvZGVT
dHJlYW0sIHZhbHVlUmVxdWlyZWQpOworCQlpZiAodGhpcy5zaG91bGRHZW5lcmF0ZVNlY3JldFJl
Y2VpdmVyVmFyaWFibGUpIHsKKwkJCWNvZGVTdHJlYW0ucmVtb3ZlVmFyaWFibGUodGhpcy5yZWNl
aXZlclZhcmlhYmxlKTsKKwkJfQogCX0JCiAJCiAJcHJpdmF0ZSBib29sZWFuIHNob3VsZEdlbmVy
YXRlSW1wbGljaXRMYW1iZGEoQmxvY2tTY29wZSBjdXJyZW50U2NvcGUpIHsKQEAgLTM2NCw3ICsz
OTcsNyBAQAogCQl9CiAJfQogCQotCXB1YmxpYyBGbG93SW5mbyBhbmFseXNlQ29kZShCbG9ja1Nj
b3BlIGN1cnJlbnRTY29wZSwgRmxvd0NvbnRleHQgZmxvd0NvbnRleHQsIEZsb3dJbmZvIGZsb3dJ
bmZvKSB7CisJcHVibGljIEZsb3dJbmZvIGFuYWx5c2VDb2RlKGZpbmFsIEJsb2NrU2NvcGUgY3Vy
cmVudFNjb3BlLCBGbG93Q29udGV4dCBmbG93Q29udGV4dCwgRmxvd0luZm8gZmxvd0luZm8pIHsK
IAkJLy8gc3RhdGljIG1ldGhvZHMgd2l0aCByZWNlaXZlciB2YWx1ZSBuZXZlciBnZXQgaGVyZQog
CQlpZiAodGhpcy5oYXZlUmVjZWl2ZXIpIHsKIAkJCXRoaXMubGhzLmNoZWNrTlBFKGN1cnJlbnRT
Y29wZSwgZmxvd0NvbnRleHQsIGZsb3dJbmZvKTsKQEAgLTQ2OCw2ICs1MDEsMTQgQEAKIAkgICAg
ICAgICAgICB9CiAJICAgICAgICAJdGhpcy5iaW5kaW5nID0gdGhpcy5leGFjdE1ldGhvZEJpbmRp
bmcgPSBzY29wZS5nZXRFeGFjdENvbnN0cnVjdG9yKGxoc1R5cGUsIHRoaXMpOwogCSAgICAgICAg
fQorCQkJaWYgKGlzTWV0aG9kUmVmZXJlbmNlKCkgJiYgdGhpcy5oYXZlUmVjZWl2ZXIpIHsKKwkJ
CQl0aGlzLnJlY2VpdmVyVmFyaWFibGUgPSBuZXcgTG9jYWxWYXJpYWJsZUJpbmRpbmcoCisJCQkJ
CQkoU2VjcmV0UmVjZWl2ZXJWYXJpYWJsZU5hbWUgKyB0aGlzLm5hbWVTb3VyY2VTdGFydCkudG9D
aGFyQXJyYXkoKSwgdGhpcy5saHMucmVzb2x2ZWRUeXBlLAorCQkJCQkJQ2xhc3NGaWxlQ29uc3Rh
bnRzLkFjY0RlZmF1bHQsIGZhbHNlKTsKKwkJCQlzY29wZS5hZGRMb2NhbFZhcmlhYmxlKHRoaXMu
cmVjZWl2ZXJWYXJpYWJsZSk7CisJCQkJdGhpcy5yZWNlaXZlclZhcmlhYmxlLnNldENvbnN0YW50
KENvbnN0YW50Lk5vdEFDb25zdGFudCk7IC8vIG5vdCBpbmxpbmFibGUKKwkJCQl0aGlzLnJlY2Vp
dmVyVmFyaWFibGUudXNlRmxhZyA9IExvY2FsVmFyaWFibGVCaW5kaW5nLlVTRUQ7CisJCQl9CiAK
IAkgICAgCWlmICh0aGlzLmV4cGVjdGVkVHlwZSA9PSBudWxsICYmIHRoaXMuZXhwcmVzc2lvbkNv
bnRleHQgPT0gSU5WT0NBVElPTl9DT05URVhUKSB7CiAJICAgIAkJcmV0dXJuIG5ldyBQb2x5VHlw
ZUJpbmRpbmcodGhpcyk7
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>249041</attachid>
            <date>2014-12-01 03:13:00 -0500</date>
            <delta_ts>2014-12-01 03:13:41 -0500</delta_ts>
            <desc>patch</desc>
            <filename>Fix-and-test-for-bug448556.patch</filename>
            <type>text/plain</type>
            <size>7327</size>
            <attacher name="Sasikanth Bharadwaj">saammana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0xhbWJkYVJlZ3Jlc3Np
b25UZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9MYW1iZGFSZWdyZXNz
aW9uVGVzdC5qYXZhCmluZGV4IGMwZjQwMjEuLjE0NWM0NWIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9jb21waWxlci9yZWdyZXNzaW9uL0xhbWJkYVJlZ3Jlc3Npb25UZXN0LmphdmEKKysrIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTGFtYmRhUmVncmVzc2lvblRlc3QuamF2YQpAQCAt
NTMwLDYgKzUzMCw1NCBAQAogCQkidGVzdCBjYW5ub3QgYmUgcmVzb2x2ZWQgdG8gYSB0eXBlXG4i
ICsgCiAJCSItLS0tLS0tLS0tXG4iKTsKIH0KKy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD00NDg1NTYKKy8vIFsxLjhdW2NvbXBpbGVyXSBJbnZhbGlkIGNv
bXBpbGVyIGVycm9yIGFib3V0IGVmZmVjdGl2ZWx5IGZpbmFsIHZhcmlhYmxlIG91dHNpZGUgdGhl
IGNvbnRleHQgb2YgYSBsYW1iZGEuCitwdWJsaWMgdm9pZCB0ZXN0QnVnNDQ0ODU1NigpIHsKKwl0
aGlzLnJ1bkNvbmZvcm1UZXN0KG5ldyBTdHJpbmcgW10geworCQkiWC5qYXZhIiwKKwkJImltcG9y
dCBqYXZhLmlvLlNlcmlhbGl6YWJsZTtcbiIgKyAKKwkJImltcG9ydCBqYXZhLnV0aWwuQXJyYXlz
O1xuIiArIAorCQkiaW1wb3J0IGphdmEudXRpbC5MaXN0O1xuIiArIAorCQkicHVibGljIGNsYXNz
IFgge1xuIiArIAorCQkiICAgIHByaXZhdGUgc3RhdGljIGZpbmFsIExpc3Q8SW50ZWdlcj4gSU5U
RUdFUlMgPSBBcnJheXMuYXNMaXN0KDEsIDIsIDMsIDQpO1xuIiArIAorCQkiICAgIHB1YmxpYyBz
dGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKyAKKwkJIiAgICAgICAgZm9yIChp
bnQgaSA9IDA7IGkgPCBJTlRFR0VSUy5zaXplKCk7IGkrKykge1xuIiArIAorCQkiICAgICAgICAg
ICAgTXlQcmVkaWNhdGU8SW50ZWdlcj4gcHJlZGljYXRlID0gSU5URUdFUlMuZ2V0KGkpOjplcXVh
bHM7XG4iICsgCisJCSIgICAgICAgIH1cbiIgKyAKKwkJIiAgICB9ICBcbiIgKyAKKwkJIiAgICBw
dWJsaWMgaW50ZXJmYWNlIE15UHJlZGljYXRlPFQ+IGV4dGVuZHMgU2VyaWFsaXphYmxlIHtcbiIg
KyAKKwkJIiAgICAgICAgYm9vbGVhbiBhY2NlcHQoVCBlYWNoKTtcbiIgKyAKKwkJIiAgICB9XG4i
ICsgCisJCSJ9IgorCX0sCisJIiIpOworfQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1
Z3Mvc2hvd19idWcuY2dpP2lkPTQ0ODU1NgorLy8gWzEuOF1bY29tcGlsZXJdIEludmFsaWQgY29t
cGlsZXIgZXJyb3IgYWJvdXQgZWZmZWN0aXZlbHkgZmluYWwgdmFyaWFibGUgb3V0c2lkZSB0aGUg
Y29udGV4dCBvZiBhIGxhbWJkYS4KK3B1YmxpYyB2b2lkIHRlc3RCdWc0NDQ4NTU2YSgpIHsKKwl0
aGlzLnJ1bkNvbmZvcm1UZXN0KG5ldyBTdHJpbmcgW10geworCQkiWC5qYXZhIiwKKwkJImltcG9y
dCBqYXZhLmlvLlNlcmlhbGl6YWJsZTtcbiIgKyAKKwkJImltcG9ydCBqYXZhLnV0aWwuQXJyYXlz
O1xuIiArIAorCQkiaW1wb3J0IGphdmEudXRpbC5MaXN0O1xuIiArIAorCQkicHVibGljIGNsYXNz
IFgge1xuIiArIAorCQkiCWludCB2YWx1ZSA9IDA7IFxuIiArIAorCQkiICAgIHByaXZhdGUgc3Rh
dGljIGZpbmFsIExpc3Q8SW50ZWdlcj4gSU5URUdFUlMgPSBBcnJheXMuYXNMaXN0KDEsIDIsIDMs
IDQpO1xuIiArIAorCQkiICAgIHB1YmxpYyBJbnRlZ2VyIG5leHQoKSB7XG4iICsgCisJCSIgICAg
CXJldHVybiBuZXcgSW50ZWdlcigrK3ZhbHVlKTtcbiIgKyAKKwkJIiAgICB9XG4iICsgCisJCSIg
ICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIiArIAorCQkiICAg
IAlYIHQgPSBuZXcgWCgpO1xuIiArIAorCQkiICAgICAgICBNeVByZWRpY2F0ZTxJbnRlZ2VyPiBw
cmVkaWNhdGUgPSB0Lm5leHQoKTo6ZXF1YWxzO1xuIiArIAorCQkiICAgICAgICBTeXN0ZW0ub3V0
LnByaW50bG4oXCJWYWx1ZSBcIiArIHQudmFsdWUgKyBcIiBhY2NlcHQgXCIgKyBwcmVkaWNhdGUu
YWNjZXB0KHQudmFsdWUpKTtcbiIgKyAKKwkJIiAgICB9XG4iICsgCisJCSIgICAgcHVibGljIGlu
dGVyZmFjZSBNeVByZWRpY2F0ZTxUPiBleHRlbmRzIFNlcmlhbGl6YWJsZSB7XG4iICsgCisJCSIg
ICAgICAgIGJvb2xlYW4gYWNjZXB0KFQgZWFjaCk7XG4iICsgCisJCSIgICAgfVxuIiArIAorCQki
fSIKKwl9LAorCSJWYWx1ZSAxIGFjY2VwdCB0cnVlIik7Cit9CiBwdWJsaWMgc3RhdGljIENsYXNz
IHRlc3RDbGFzcygpIHsKIAlyZXR1cm4gTGFtYmRhUmVncmVzc2lvblRlc3QuY2xhc3M7CiB9CmRp
ZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXN0L1JlZmVyZW5jZUV4cHJlc3Npb24uamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9h
c3QvUmVmZXJlbmNlRXhwcmVzc2lvbi5qYXZhCmluZGV4IDU2N2QwM2QuLmRmYTE3Y2QgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9hc3QvUmVmZXJlbmNlRXhwcmVzc2lvbi5qYXZhCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9h
c3QvUmVmZXJlbmNlRXhwcmVzc2lvbi5qYXZhCkBAIC02Myw2ICs2Myw3IEBACiBpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5JbmZlcmVuY2VDb250ZXh0MTg7
CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5JbnRlcnNl
Y3Rpb25UeXBlQmluZGluZzE4OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5sb29rdXAuSW52b2NhdGlvblNpdGU7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmxvb2t1cC5Mb2NhbFZhcmlhYmxlQmluZGluZzsKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLk1ldGhvZEJpbmRpbmc7CiBpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5QYXJhbWV0ZXJpemVkR2Vu
ZXJpY01ldGhvZEJpbmRpbmc7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLmxvb2t1cC5QYXJhbWV0ZXJpemVkTWV0aG9kQmluZGluZzsKQEAgLTgyLDcgKzgzLDEwIEBA
CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnBhcnNlci5QYXJzZXI7
CiAKIHB1YmxpYyBjbGFzcyBSZWZlcmVuY2VFeHByZXNzaW9uIGV4dGVuZHMgRnVuY3Rpb25hbEV4
cHJlc3Npb24gaW1wbGVtZW50cyBJUG9seUV4cHJlc3Npb24sIEludm9jYXRpb25TaXRlIHsKLQkK
KwkvLyBzZWNyZXQgdmFyaWFibGUgbmFtZQorCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBT
ZWNyZXRSZWNlaXZlclZhcmlhYmxlTmFtZSA9ICIgcmVjZWl2ZXJfIjsgLy8kTk9OLU5MUy0xJAor
CS8vIHNlY3JldCB2YXJpYWJsZSBmb3IgY29kZWdlbgorCXB1YmxpYyBMb2NhbFZhcmlhYmxlQmlu
ZGluZyByZWNlaXZlclZhcmlhYmxlOwogCXB1YmxpYyBFeHByZXNzaW9uIGxoczsKIAlwdWJsaWMg
VHlwZVJlZmVyZW5jZSBbXSB0eXBlQXJndW1lbnRzOwogCXB1YmxpYyBjaGFyIFtdIHNlbGVjdG9y
OwpAQCAtMTMyLDYgKzEzNiwzNCBAQAogCQlyZXR1cm4gY29weTsKIAl9CiAgCisJcHJpdmF0ZSBi
b29sZWFuIHNob3VsZEdlbmVyYXRlU2VjcmV0UmVjZWl2ZXJWYXJpYWJsZSgpIHsKKwkJaWYgKGlz
TWV0aG9kUmVmZXJlbmNlKCkgJiYgdGhpcy5oYXZlUmVjZWl2ZXIpIHsKKwkJCWlmICh0aGlzLmxo
cyBpbnN0YW5jZW9mIEludm9jYXRpb24pCisJCQkJcmV0dXJuIHRydWU7CisJCQllbHNlIHsKKwkJ
CQlyZXR1cm4gbmV3IEFTVFZpc2l0b3IoKSB7CisJCQkJCWJvb2xlYW4gYWNjZXNzZXNub25GaW5h
bE91dGVyTG9jYWxzOworCisJCQkJCXB1YmxpYyBib29sZWFuIHZpc2l0KFNpbmdsZU5hbWVSZWZl
cmVuY2UgbmFtZSwgQmxvY2tTY29wZSBza29wZSkgeworCQkJCQkJQmluZGluZyBsb2NhbCA9IHNr
b3BlLmdldEJpbmRpbmcobmFtZS5nZXROYW1lKCksIFJlZmVyZW5jZUV4cHJlc3Npb24udGhpcyk7
CisJCQkJCQlpZiAobG9jYWwgaW5zdGFuY2VvZiBMb2NhbFZhcmlhYmxlQmluZGluZykgeworCQkJ
CQkJCUxvY2FsVmFyaWFibGVCaW5kaW5nIGxvY2FsQmluZGluZyA9IChMb2NhbFZhcmlhYmxlQmlu
ZGluZykgbG9jYWw7CisJCQkJCQkJaWYgKCFsb2NhbEJpbmRpbmcuaXNGaW5hbCgpICYmICFsb2Nh
bEJpbmRpbmcuaXNFZmZlY3RpdmVseUZpbmFsKCkpIHsKKwkJCQkJCQkJdGhpcy5hY2Nlc3Nlc25v
bkZpbmFsT3V0ZXJMb2NhbHMgPSB0cnVlOworCQkJCQkJCX0KKwkJCQkJCX0KKwkJCQkJCXJldHVy
biBmYWxzZTsKKwkJCQkJfQorCisJCQkJCXB1YmxpYyBib29sZWFuIGFjY2Vzc2Vzbm9uRmluYWxP
dXRlckxvY2FscygpIHsKKwkJCQkJCVJlZmVyZW5jZUV4cHJlc3Npb24udGhpcy5saHMudHJhdmVy
c2UodGhpcywgUmVmZXJlbmNlRXhwcmVzc2lvbi50aGlzLmVuY2xvc2luZ1Njb3BlKTsKKwkJCQkJ
CXJldHVybiB0aGlzLmFjY2Vzc2Vzbm9uRmluYWxPdXRlckxvY2FsczsKKwkJCQkJfQorCQkJCX0u
YWNjZXNzZXNub25GaW5hbE91dGVyTG9jYWxzKCk7CisJCQl9CisJCX0KKwkJcmV0dXJuIGZhbHNl
OworCX0KIAlwdWJsaWMgdm9pZCBnZW5lcmF0ZUltcGxpY2l0TGFtYmRhKEJsb2NrU2NvcGUgY3Vy
cmVudFNjb3BlLCBDb2RlU3RyZWFtIGNvZGVTdHJlYW0sIGJvb2xlYW4gdmFsdWVSZXF1aXJlZCkg
ewogCQkKIAkJUmVmZXJlbmNlRXhwcmVzc2lvbiBjb3B5ID0gY29weSgpOwpAQCAtMTUyLDEwICsx
ODQsMTcgQEAKIAkJCVN0cmluZyBuYW1lID0gImFyZyIgKyAoaSArIHBhcmFtZXRlclNoaWZ0KTsg
Ly8kTk9OLU5MUy0xJAogCQkJYXJndltpXSA9IG5ldyBTaW5nbGVOYW1lUmVmZXJlbmNlKG5hbWUu
dG9DaGFyQXJyYXkoKSwgMCk7CiAJCX0KKwkJYm9vbGVhbiBnZW5lcmF0ZVNlY3JldFJlY2VpdmVy
VmFyaWFibGUgPSBzaG91bGRHZW5lcmF0ZVNlY3JldFJlY2VpdmVyVmFyaWFibGUoKTsKIAkJaWYg
KGlzTWV0aG9kUmVmZXJlbmNlKCkpIHsKKwkJCWlmIChnZW5lcmF0ZVNlY3JldFJlY2VpdmVyVmFy
aWFibGUpIHsKKwkJCQl0aGlzLmxocy5nZW5lcmF0ZUNvZGUoY3VycmVudFNjb3BlLCBjb2RlU3Ry
ZWFtLCB0cnVlKTsKKwkJCQljb2RlU3RyZWFtLnN0b3JlKHRoaXMucmVjZWl2ZXJWYXJpYWJsZSwg
ZmFsc2UpOworCQkJCWNvZGVTdHJlYW0uYWRkVmFyaWFibGUodGhpcy5yZWNlaXZlclZhcmlhYmxl
KTsKKwkJCX0KIAkJCU1lc3NhZ2VTZW5kIG1lc3NhZ2UgPSBuZXcgTWVzc2FnZVNlbmQoKTsKIAkJ
CW1lc3NhZ2Uuc2VsZWN0b3IgPSB0aGlzLnNlbGVjdG9yOwotCQkJbWVzc2FnZS5yZWNlaXZlciA9
IHRoaXMucmVjZWl2ZXJQcmVjZWRlc1BhcmFtZXRlcnMgPyBuZXcgU2luZ2xlTmFtZVJlZmVyZW5j
ZSgiYXJnMCIudG9DaGFyQXJyYXkoKSwgMCkgOiBjb3B5LmxoczsgLy8kTk9OLU5MUy0xJAorCQkJ
RXhwcmVzc2lvbiByZWNlaXZlciA9IGdlbmVyYXRlU2VjcmV0UmVjZWl2ZXJWYXJpYWJsZSA/IG5l
dyBTaW5nbGVOYW1lUmVmZXJlbmNlKHRoaXMucmVjZWl2ZXJWYXJpYWJsZS5uYW1lLCAwKSA6IGNv
cHkubGhzOworCQkJbWVzc2FnZS5yZWNlaXZlciA9IHRoaXMucmVjZWl2ZXJQcmVjZWRlc1BhcmFt
ZXRlcnMgPyBuZXcgU2luZ2xlTmFtZVJlZmVyZW5jZSgiYXJnMCIudG9DaGFyQXJyYXkoKSwgMCkg
OiByZWNlaXZlcjsgLy8kTk9OLU5MUy0xJAogCQkJbWVzc2FnZS50eXBlQXJndW1lbnRzID0gY29w
eS50eXBlQXJndW1lbnRzOwogCQkJbWVzc2FnZS5hcmd1bWVudHMgPSBhcmd2OwogCQkJaW1wbGlj
aXRMYW1iZGEuc2V0Qm9keShtZXNzYWdlKTsKQEAgLTIwNSw2ICsyNDQsOSBAQAogCQkJaW1wbGlj
aXRMYW1iZGEuYWRkU3ludGhldGljQXJndW1lbnQob3V0ZXJMb2NhbHNbaV0uYWN0dWFsT3V0ZXJM
b2NhbFZhcmlhYmxlKTsKIAkJCiAJCWltcGxpY2l0TGFtYmRhLmdlbmVyYXRlQ29kZShjdXJyZW50
U2NvcGUsIGNvZGVTdHJlYW0sIHZhbHVlUmVxdWlyZWQpOworCQlpZiAoZ2VuZXJhdGVTZWNyZXRS
ZWNlaXZlclZhcmlhYmxlKSB7CisJCQljb2RlU3RyZWFtLnJlbW92ZVZhcmlhYmxlKHRoaXMucmVj
ZWl2ZXJWYXJpYWJsZSk7CisJCX0KIAl9CQogCQogCXByaXZhdGUgYm9vbGVhbiBzaG91bGRHZW5l
cmF0ZUltcGxpY2l0TGFtYmRhKEJsb2NrU2NvcGUgY3VycmVudFNjb3BlKSB7CkBAIC00NjgsNiAr
NTEwLDE0IEBACiAJICAgICAgICAgICAgfQogCSAgICAgICAgCXRoaXMuYmluZGluZyA9IHRoaXMu
ZXhhY3RNZXRob2RCaW5kaW5nID0gc2NvcGUuZ2V0RXhhY3RDb25zdHJ1Y3RvcihsaHNUeXBlLCB0
aGlzKTsKIAkgICAgICAgIH0KKwkJCWlmIChpc01ldGhvZFJlZmVyZW5jZSgpICYmIHRoaXMuaGF2
ZVJlY2VpdmVyKSB7CisJCQkJdGhpcy5yZWNlaXZlclZhcmlhYmxlID0gbmV3IExvY2FsVmFyaWFi
bGVCaW5kaW5nKAorCQkJCQkJKFNlY3JldFJlY2VpdmVyVmFyaWFibGVOYW1lICsgdGhpcy5uYW1l
U291cmNlU3RhcnQpLnRvQ2hhckFycmF5KCksIHRoaXMubGhzLnJlc29sdmVkVHlwZSwKKwkJCQkJ
CUNsYXNzRmlsZUNvbnN0YW50cy5BY2NEZWZhdWx0LCBmYWxzZSk7CisJCQkJc2NvcGUuYWRkTG9j
YWxWYXJpYWJsZSh0aGlzLnJlY2VpdmVyVmFyaWFibGUpOworCQkJCXRoaXMucmVjZWl2ZXJWYXJp
YWJsZS5zZXRDb25zdGFudChDb25zdGFudC5Ob3RBQ29uc3RhbnQpOyAvLyBub3QgaW5saW5hYmxl
CisJCQkJdGhpcy5yZWNlaXZlclZhcmlhYmxlLnVzZUZsYWcgPSBMb2NhbFZhcmlhYmxlQmluZGlu
Zy5VU0VEOworCQkJfQogCiAJICAgIAlpZiAodGhpcy5leHBlY3RlZFR5cGUgPT0gbnVsbCAmJiB0
aGlzLmV4cHJlc3Npb25Db250ZXh0ID09IElOVk9DQVRJT05fQ09OVEVYVCkgewogCSAgICAJCXJl
dHVybiBuZXcgUG9seVR5cGVCaW5kaW5nKHRoaXMpOw==
</data>

          </attachment>
      

    </bug>

</bugzilla>