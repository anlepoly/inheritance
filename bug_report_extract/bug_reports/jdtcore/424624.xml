<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>424624</bug_id>
          
          <creation_ts>2013-12-23 14:55:00 -0500</creation_ts>
          <short_desc>[1.8][null] if a static-object with annotation @NonNull is used, a warning is shown</short_desc>
          <delta_ts>2014-03-11 12:24:11 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3.1</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>392099</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Thomas Olbrich">tommy.O</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>jarthana</cc>
    
    <cc>shankhba</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="61853"
          type_id="1"
          status="+"
          setter="srikanth_sankaran"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2344727</commentid>
    <comment_count>0</comment_count>
    <who name="Thomas Olbrich">tommy.O</who>
    <bug_when>2013-12-23 14:55:57 -0500</bug_when>
    <thetext>A static class an a static fina object of this class are declared with @NonNull.
In another class the static object are used in as methode-argument that are annotated @NonNull. The compiler shows the warning &quot;Null type safety (type annotations): The expression of type &apos;@NonNull Test3.Test3aa&apos; needs unchecked conversion to conform to &apos;@NonNull Object&apos;&quot; by the use of Methode &quot;test1&quot; in class &quot;Test4&quot; (see Attachment)

The warning says &quot;Test3.Test3aa&quot; but the Objectname are &quot;Test3.Test3a&quot;.

I uses Java 8 Beta and eclipse-SDK-4.3.1-linux-gtk-x86_64-efx-0.9.0-SNAPSHOT.tar.gz</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2344728</commentid>
    <comment_count>1</comment_count>
      <attachid>238546</attachid>
    <who name="Thomas Olbrich">tommy.O</who>
    <bug_when>2013-12-23 14:56:50 -0500</bug_when>
    <thetext>Created attachment 238546
Test-classes</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2344859</commentid>
    <comment_count>2</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-12-25 12:06:59 -0500</bug_when>
    <thetext>(In reply to Thomas Olbrich from comment #0)
&gt; The warning says &quot;Test3.Test3aa&quot; but the Objectname are &quot;Test3.Test3a&quot;.

this part looks OK, since it speaks of the &quot;type &apos;@NonNull Test3.Test3aa&apos;&quot; :)

Please note that for BETA_JAVA8 we are changing null annotations to become type annotations (JSR 308), hence the annotation is indeed attached to the type (Test3.Test3aa) not the variable declaration (Test3a).

I&apos;ll take a look. 

Meanwhile you might confirm which version of org.eclipse.jdt.annotation you are using. For 1.8 work it should be version 2.0.0.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2365203</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-18 18:15:16 -0500</bug_when>
    <thetext>The warning only occurs when compiling Test4.java separately, where Test3.java is read from class file. We already have another report somewhere mentioning that reading null annotations from class file doesn&apos;t always work. I&apos;ll try to tie up these loose ends soon.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2373556</commentid>
    <comment_count>4</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-03-09 19:53:04 -0400</bug_when>
    <thetext>We have a bug in decoding type annotations of a static nested type.

in LookupEnvironment.getTypeFromSignature() we find a type with a depth() of 2 and thus populate an array
  [0] = {@NonNull}
  [1] = null

Passing this into AnnotatableTypeSystem.getAnnotatedType() places the annotation on the outer type, which is wrong.

This would be correct for a non-static inner class, but the static class doesn&apos;t allow any type annotations on the enclosing, hence the (single) array of annotations should be applied on the nested type.

I checked that the class file looks the same as what javac generates.


I made a quick-n-dirty change inside ATS by manipulating the indices i and j, which fixes this bug but causes regressions in 
 - TypeBindingTests308.test026()
 - TypeBindingTests308.test020()


This lets me think we need to resolve the type, and count off any static levels, prior to calling into ATS.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2373557</commentid>
    <comment_count>5</comment_count>
      <attachid>240702</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-03-09 19:54:27 -0400</bug_when>
    <thetext>Created attachment 240702
draft patch

This seems to fix the current bug without breakage in TypeBindingTests308.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2373558</commentid>
    <comment_count>6</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-03-09 19:57:04 -0400</bug_when>
    <thetext>Srikanth, this is not a polished and fully tested patch, but if you have a minute I&apos;d appreciate a comment (a) whether this should be the right direction, and (b) whether this is suitable for GA, after due diligence.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2373932</commentid>
    <comment_count>7</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-10 12:34:28 -0400</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #6)
&gt; Srikanth, this is not a polished and fully tested patch, but if you have a
&gt; minute I&apos;d appreciate a comment (a) whether this should be the right
&gt; direction, and (b) whether this is suitable for GA, after due diligence.

Having only glanced through the patch - the overall approach is OK, I had
to do similar things for attaching annotations at the right level earlier 
i.e force resolve (when absolutely necessary)

So, yes, proceed to put together a final version. 

I have Jay to also verify the fix as it stands now.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2374255</commentid>
    <comment_count>8</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-11 06:45:00 -0400</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #7)
&gt; I have Jay to also verify the fix as it stands now.

Jay found no issues with the patch as it stands - I am also OK with the
overall approach, please proceed to propose a final patch. Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2374399</commentid>
    <comment_count>9</comment_count>
      <attachid>240761</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-03-11 10:21:29 -0400</bug_when>
    <thetext>Created attachment 240761
extended patch

I added more tests and made the fix more robust.

While doing so I found a code-clone that suffered from the same problem, of not correctly decoding annotations on nested/inner types. Test added in TypeBindingTests308 (fails without the fix).

Please review this version. TIA.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2374455</commentid>
    <comment_count>10</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-11 12:02:37 -0400</bug_when>
    <thetext>I noticed that for org.eclipse.jdt.core.tests.compiler.regression.NullAnnotationTest.testBug424624()

(testing without the fix)
the warning shows up only for incremental builds - this is perhaps because
full build picks the STB vs BTB in the case of incremental build.

May be there could be a test that verifies that in incremental builds the
problem does not show up - I did verify in the IDE with the fix.

I spent some time trying to satisfy myself that we won&apos;t eagerly resolve
symbols when not required - this indeed looks to be the case - I think we
should see empty walkers unless there are type annotations at some level.

Under those circumstances, opting for resolution is fine - 

Patch looks good. Thanks Stephan.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2374457</commentid>
    <comment_count>11</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-11 12:08:10 -0400</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #10)

&gt; May be there could be a test that verifies that in incremental builds the
&gt; problem does not show up - I did verify in the IDE with the fix.

I think this is already observed in comment#3 and I do see files being
compiled separately by the test. So this should be fine.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2374467</commentid>
    <comment_count>12</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-03-11 12:24:11 -0400</bug_when>
    <thetext>Thanks, Srikanth,

(In reply to Srikanth Sankaran from comment #10)
&gt; I spent some time trying to satisfy myself that we won&apos;t eagerly resolve
&gt; symbols when not required - this indeed looks to be the case - I think we
&gt; should see empty walkers unless there are type annotations at some level.

Yes, and additionally we resolve only if depth indicates that a &apos;$&apos; has been seen, the same condition that also AnnotatableTypeSystem.getAnnotatedType() already uses to see if resolve is needed :)
 
&gt; Under those circumstances, opting for resolution is fine - 
&gt; 
&gt; Patch looks good. Thanks Stephan.

Thanks, released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=dc444b8320482476925f9f5e1514794476164a28</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>238546</attachid>
            <date>2013-12-23 14:56:00 -0500</date>
            <delta_ts>2013-12-23 14:56:50 -0500</delta_ts>
            <desc>Test-classes</desc>
            <filename>file_424624.txt</filename>
            <type>text/plain</type>
            <size>454</size>
            <attacher name="Thomas Olbrich">tommy.O</attacher>
            
              <data encoding="base64">cGFja2FnZSB0ZXN0Ow0KDQppbXBvcnQgb3JnLmVjbGlwc2UuamR0LmFubm90YXRpb24uTm9uTnVs
bDsNCg0KcHVibGljIGNsYXNzIFRlc3QzIHsNCg0KCXB1YmxpYyBUZXN0MygpIHsNCgl9DQoNCglz
dGF0aWMgcHVibGljIGNsYXNzIFRlc3QzYWEgZXh0ZW5kcyBPYmplY3Qge30NCglzdGF0aWMgcHVi
bGljIGZpbmFsIEBOb25OdWxsIFRlc3QzYWEgVGVzdDNhID0gbmV3IFRlc3QzYWEoKTsNCg0KfQ0K
DQpwYWNrYWdlIHRlc3Q7DQoNCmltcG9ydCBvcmcuZWNsaXBzZS5qZHQuYW5ub3RhdGlvbi5Ob25O
dWxsOw0KDQpwdWJsaWMgY2xhc3MgVGVzdDQgew0KDQoJcHVibGljIFRlc3Q0KCkgew0KCX0NCgkN
CglwdWJsaWMgdm9pZCB0ZXN0KCkgew0KCQl0ZXN0MSggVGVzdDMuVGVzdDNhKTsNCgl9DQoJDQoJ
cHVibGljIHZvaWQgdGVzdDEoIEBOb25OdWxsIE9iamVjdCBvYmplY3QpIHsNCgl9DQoNCn0NCg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>240702</attachid>
            <date>2014-03-09 19:54:00 -0400</date>
            <delta_ts>2014-03-11 10:21:29 -0400</delta_ts>
            <desc>draft patch</desc>
            <filename>Bug-424624--18null-if-a-staticobject-with-annotation.patch</filename>
            <type>text/plain</type>
            <size>2718</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL051bGxBbm5vdGF0aW9u
VGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTnVsbEFubm90YXRpb25U
ZXN0LmphdmEKaW5kZXggYmExMzViNy4uZTE0YTI2YiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vTnVsbEFubm90YXRpb25UZXN0LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L2NvbXBpbGVyL3JlZ3Jlc3Npb24vTnVsbEFubm90YXRpb25UZXN0LmphdmEKQEAgLTY4MjEsNCAr
NjgyMSw0NCBAQAogCQkiTWlzc2luZyBub24tbnVsbCBhbm5vdGF0aW9uOiBpbmhlcml0ZWQgbWV0
aG9kIGZyb20gVW50eXBlZEJhc2Ugc3BlY2lmaWVzIHRoaXMgcGFyYW1ldGVyIGFzIEBOb25OdWxs
XG4iICsgCiAJCSItLS0tLS0tLS0tXG4iKTsKIH0KK3B1YmxpYyB2b2lkIHRlc3RCdWc0MjQ2MjQo
KSB7CisJcnVuQ29uZm9ybVRlc3RXaXRoTGlicygKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJUZXN0
My5qYXZhIiwKKwkJCSJpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmFubm90YXRpb24uTm9uTnVsbDtc
biIgKyAKKwkJCSJcbiIgKyAKKwkJCSJwdWJsaWMgY2xhc3MgVGVzdDMge1xuIiArIAorCQkJIlxu
IiArIAorCQkJIglwdWJsaWMgVGVzdDMoKSB7XG4iICsgCisJCQkiCX1cbiIgKyAKKwkJCSJcbiIg
KyAKKwkJCSIJc3RhdGljIHB1YmxpYyBjbGFzcyBUZXN0M2FhIGV4dGVuZHMgT2JqZWN0IHt9XG4i
ICsgCisJCQkiCXN0YXRpYyBwdWJsaWMgZmluYWwgQE5vbk51bGwgVGVzdDNhYSBUZXN0M2EgPSBu
ZXcgVGVzdDNhYSgpO1xuIiArIAorCQkJIlxuIiArIAorCQkJIn1cbiIsCisJCX0sCisJCWdldENv
bXBpbGVyT3B0aW9ucygpLAorCQkiIik7CisJcnVuQ29uZm9ybVRlc3RXaXRoTGlicygKKwkJbmV3
IFN0cmluZ1tdIHsKKwkJCSJUZXN0NC5qYXZhIiwKKwkJCSJpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmFubm90YXRpb24uTm9uTnVsbDtcbiIgKyAKKwkJCSJcbiIgKyAKKwkJCSJwdWJsaWMgY2xhc3Mg
VGVzdDQge1xuIiArIAorCQkJIlxuIiArIAorCQkJIglwdWJsaWMgVGVzdDQoKSB7XG4iICsgCisJ
CQkiCX1cbiIgKyAKKwkJCSIJXG4iICsgCisJCQkiCXB1YmxpYyB2b2lkIHRlc3QoKSB7XG4iICsg
CisJCQkiCQl0ZXN0MSggVGVzdDMuVGVzdDNhKTtcbiIgKyAKKwkJCSIJfVxuIiArIAorCQkJIglc
biIgKyAKKwkJCSIJcHVibGljIHZvaWQgdGVzdDEoIEBOb25OdWxsIE9iamVjdCBvYmplY3QpIHtc
biIgKyAKKwkJCSIJfVxuIiArIAorCQkJIlxuIiArIAorCQkJIn1cbiIKKwkJfSwKKwkJZ2V0Q29t
cGlsZXJPcHRpb25zKCksCisJCSIiKTsKK30KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAv
TG9va3VwRW52aXJvbm1lbnQuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvTG9va3VwRW52aXJvbm1lbnQu
amF2YQppbmRleCBkM2M2OGEwLi45YzkwZjkwIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0xv
b2t1cEVudmlyb25tZW50LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Mb29rdXBFbnZpcm9ubWVu
dC5qYXZhCkBAIC0xMzI2LDcgKzEzMjYsMTYgQEAKIAl9CiAJCiAJaWYgKHdhbGtlciAhPSBUeXBl
QW5ub3RhdGlvbldhbGtlci5FTVBUWV9BTk5PVEFUSU9OX1dBTEtFUikgewotCQlmaW5hbCBpbnQg
ZGVwdGggPSBiaW5kaW5nLmRlcHRoKCk7CisJCWludCBkZXB0aCA9IGJpbmRpbmcuZGVwdGgoKTsK
KwkJVHlwZUJpbmRpbmcgY3VycmVudEJpbmRpbmcgPSBiaW5kaW5nOworCQl3aGlsZSAoZGVwdGgg
PiAwICYmIGN1cnJlbnRCaW5kaW5nICE9IG51bGwpIHsKKwkJCWlmIChjdXJyZW50QmluZGluZy5p
c1VucmVzb2x2ZWRUeXBlKCkpCisJCQkJY3VycmVudEJpbmRpbmcgPSAoKFVucmVzb2x2ZWRSZWZl
cmVuY2VCaW5kaW5nKSBjdXJyZW50QmluZGluZykucmVzb2x2ZSh0aGlzLCBmYWxzZSk7CisJCQlp
ZiAoIWN1cnJlbnRCaW5kaW5nLmlzU3RhdGljKCkpCisJCQkJYnJlYWs7CisJCQlkZXB0aC0tOwor
CQkJY3VycmVudEJpbmRpbmcgPSBjdXJyZW50QmluZGluZy5lbmNsb3NpbmdUeXBlKCk7CisJCX0K
IAkJQW5ub3RhdGlvbkJpbmRpbmcgW11bXSBhbm5vdGF0aW9ucyA9IG51bGw7CiAJCWZvciAoaW50
IGkgPSAwOyBpIDw9IGRlcHRoOyBpKyspIHsKIAkJCUFubm90YXRpb25CaW5kaW5nW10gYW5ub3Rz
ID0gQmluYXJ5VHlwZUJpbmRpbmcuY3JlYXRlQW5ub3RhdGlvbnMod2Fsa2VyLmdldEFubm90YXRp
b25zQXRDdXJzb3IoKSwgdGhpcywgbWlzc2luZ1R5cGVOYW1lcyk7
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>240761</attachid>
            <date>2014-03-11 10:21:00 -0400</date>
            <delta_ts>2014-03-11 10:21:29 -0400</delta_ts>
            <desc>extended patch</desc>
            <filename>Bug-424624--18null-if-a-staticobject-with-annotation.patch</filename>
            <type>text/plain</type>
            <size>13917</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL051bGxBbm5vdGF0aW9u
VGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTnVsbEFubm90YXRpb25U
ZXN0LmphdmEKaW5kZXggYmExMzViNy4uNDRmNjZhZiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vTnVsbEFubm90YXRpb25UZXN0LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L2NvbXBpbGVyL3JlZ3Jlc3Npb24vTnVsbEFubm90YXRpb25UZXN0LmphdmEKQEAgLTY4MjEsNCAr
NjgyMSwxNzIgQEAKIAkJIk1pc3Npbmcgbm9uLW51bGwgYW5ub3RhdGlvbjogaW5oZXJpdGVkIG1l
dGhvZCBmcm9tIFVudHlwZWRCYXNlIHNwZWNpZmllcyB0aGlzIHBhcmFtZXRlciBhcyBATm9uTnVs
bFxuIiArIAogCQkiLS0tLS0tLS0tLVxuIik7CiB9CisvLyBvcmlnaW5hbCB0ZXN0CitwdWJsaWMg
dm9pZCB0ZXN0QnVnNDI0NjI0KCkgeworCXJ1bkNvbmZvcm1UZXN0V2l0aExpYnMoCisJCW5ldyBT
dHJpbmdbXSB7CisJCQkiVGVzdDMuamF2YSIsCisJCQkiaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5h
bm5vdGF0aW9uLk5vbk51bGw7XG4iICsgCisJCQkiXG4iICsgCisJCQkicHVibGljIGNsYXNzIFRl
c3QzIHtcbiIgKyAKKwkJCSJcbiIgKyAKKwkJCSIJcHVibGljIFRlc3QzKCkge1xuIiArIAorCQkJ
Igl9XG4iICsgCisJCQkiXG4iICsgCisJCQkiCXN0YXRpYyBwdWJsaWMgY2xhc3MgVGVzdDNhYSBl
eHRlbmRzIE9iamVjdCB7fVxuIiArIAorCQkJIglzdGF0aWMgcHVibGljIGZpbmFsIEBOb25OdWxs
IFRlc3QzYWEgVGVzdDNhID0gbmV3IFRlc3QzYWEoKTtcbiIgKyAKKwkJCSJcbiIgKyAKKwkJCSJ9
XG4iLAorCQl9LAorCQlnZXRDb21waWxlck9wdGlvbnMoKSwKKwkJIiIpOworCXJ1bkNvbmZvcm1U
ZXN0V2l0aExpYnMoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiVGVzdDQuamF2YSIsCisJCQkiaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5hbm5vdGF0aW9uLk5vbk51bGw7XG4iICsgCisJCQkiXG4iICsg
CisJCQkicHVibGljIGNsYXNzIFRlc3Q0IHtcbiIgKyAKKwkJCSJcbiIgKyAKKwkJCSIJcHVibGlj
IFRlc3Q0KCkge1xuIiArIAorCQkJIgl9XG4iICsgCisJCQkiCVxuIiArIAorCQkJIglwdWJsaWMg
dm9pZCB0ZXN0KCkge1xuIiArIAorCQkJIgkJdGVzdDEoIFRlc3QzLlRlc3QzYSk7XG4iICsgCisJ
CQkiCX1cbiIgKyAKKwkJCSIJXG4iICsgCisJCQkiCXB1YmxpYyB2b2lkIHRlc3QxKCBATm9uTnVs
bCBPYmplY3Qgb2JqZWN0KSB7XG4iICsgCisJCQkiCX1cbiIgKyAKKwkJCSJcbiIgKyAKKwkJCSJ9
XG4iCisJCX0sCisJCWdldENvbXBpbGVyT3B0aW9ucygpLAorCQkiIik7Cit9CisvLyBvdGhlciBu
ZXN0aW5nIGxldmVscywgYmluYXJ5IGNhc2UKK3B1YmxpYyB2b2lkIHRlc3RCdWc0MjQ2MjRhKCkg
eworCXJ1bkNvbmZvcm1UZXN0V2l0aExpYnMoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkidGVzdC9U
ZXN0My5qYXZhIiwKKwkJCSJwYWNrYWdlIHRlc3Q7XG4iICsKKwkJCSJpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmFubm90YXRpb24uTm9uTnVsbDtcbiIgKworCQkJKHRoaXMuY29tcGxpYW5jZUxldmVs
ID49IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzggPworCQkJImltcG9ydCBqYXZhLmxhbmcuYW5u
b3RhdGlvbi4qO1xuIiArCisJCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSkgQGludGVy
ZmFjZSBNYXJrZXIge31cbiIKKwkJCToKKwkJCSIiCisJCQkpKyAKKwkJCSJcbiIgKyAKKwkJCSJw
dWJsaWMgY2xhc3MgVGVzdDMge1xuIiArIAorCQkJIlxuIiArIAorCQkJIglwdWJsaWMgVGVzdDMo
KSB7XG4iICsgCisJCQkiCX1cbiIgKyAKKwkJCSJcbiIgKyAKKwkJCSIJcHVibGljIGNsYXNzIElu
bmVyIGV4dGVuZHMgT2JqZWN0IHtcbiIgKworCQkJIgkJY2xhc3MgRGVlcElubmVyIHt9XG4iICsK
KwkJCSIJfVxuIiArIAorCQkJIglwdWJsaWMgc3RhdGljIGNsYXNzIE5lc3RlZCBleHRlbmRzIE9i
amVjdCB7XG4iICsKKwkJCSIJCWNsYXNzIElubmVySW5OZXN0ZWQge31cbiIgKworCQkJIgkJc3Rh
dGljIGNsYXNzIERlZXBOZXN0ZWQge31cbiIgKworCQkJIgl9XG4iICsgCisJCQkiCXN0YXRpYyBw
dWJsaWMgZmluYWwgQE5vbk51bGwgSW5uZXIgZmllbGQxID0gbmV3IFRlc3QzKCkubmV3IElubmVy
KCk7XG4iICsgCisJCQkodGhpcy5jb21wbGlhbmNlTGV2ZWwgPCBDbGFzc0ZpbGVDb25zdGFudHMu
SkRLMV84ID8KKwkJCSIJc3RhdGljIHB1YmxpYyBmaW5hbCBATm9uTnVsbCBJbm5lci5EZWVwSW5u
ZXIgZmllbGQyID0gZmllbGQxLm5ldyBEZWVwSW5uZXIoKTtcbiIgKyAKKwkJCSIJc3RhdGljIHB1
YmxpYyBmaW5hbCBATm9uTnVsbCBOZXN0ZWQuSW5uZXJJbk5lc3RlZCBmaWVsZDMgPSBuZXcgTmVz
dGVkKCkubmV3IElubmVySW5OZXN0ZWQoKTtcbiIgKworCQkJIglzdGF0aWMgcHVibGljIGZpbmFs
IEBOb25OdWxsIE5lc3RlZC5EZWVwTmVzdGVkIGZpZWxkNCA9IG5ldyBOZXN0ZWQuRGVlcE5lc3Rl
ZCgpO1xuIgorCQkJOgorCQkJIglzdGF0aWMgcHVibGljIGZpbmFsIEBNYXJrZXIgSW5uZXIuQE5v
bk51bGwgRGVlcElubmVyIGZpZWxkMiA9IGZpZWxkMS5uZXcgRGVlcElubmVyKCk7XG4iICsgCisJ
CQkiCXN0YXRpYyBwdWJsaWMgZmluYWwgTmVzdGVkLkBOb25OdWxsIElubmVySW5OZXN0ZWQgZmll
bGQzID0gbmV3IE5lc3RlZCgpLm5ldyBJbm5lckluTmVzdGVkKCk7XG4iICsKKwkJCSIJc3RhdGlj
IHB1YmxpYyBmaW5hbCBOZXN0ZWQuQE5vbk51bGwgRGVlcE5lc3RlZCBmaWVsZDQgPSBuZXcgTmVz
dGVkLkRlZXBOZXN0ZWQoKTtcbiIKKwkJCSkgKyAKKwkJCSJcbiIgKyAKKwkJCSJ9XG4iLAorCQl9
LAorCQlnZXRDb21waWxlck9wdGlvbnMoKSwKKwkJIiIpOworCXJ1bkNvbmZvcm1UZXN0V2l0aExp
YnMoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiVGVzdDQuamF2YSIsCisJCQkiaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5hbm5vdGF0aW9uLk5vbk51bGw7XG4iICsKKwkJCSJpbXBvcnQgdGVzdC5UZXN0
MztcbiIgKyAKKwkJCSJcbiIgKyAKKwkJCSJwdWJsaWMgY2xhc3MgVGVzdDQge1xuIiArIAorCQkJ
IlxuIiArIAorCQkJIglwdWJsaWMgVGVzdDQoKSB7XG4iICsgCisJCQkiCX1cbiIgKyAKKwkJCSIJ
XG4iICsgCisJCQkiCXB1YmxpYyB2b2lkIHRlc3QoKSB7XG4iICsgCisJCQkiCQl0ZXN0MSggVGVz
dDMuZmllbGQxKTtcbiIgKyAKKwkJCSIJCXRlc3QxKCBUZXN0My5maWVsZDIpO1xuIiArIAorCQkJ
IgkJdGVzdDEoIFRlc3QzLmZpZWxkMyk7XG4iICsgCisJCQkiCQl0ZXN0MSggVGVzdDMuZmllbGQ0
KTtcbiIgKyAKKwkJCSIJfVxuIiArIAorCQkJIglcbiIgKyAKKwkJCSIJcHVibGljIHZvaWQgdGVz
dDEoIEBOb25OdWxsIE9iamVjdCBvYmplY3QpIHtcbiIgKyAKKwkJCSIJfVxuIiArIAorCQkJIlxu
IiArIAorCQkJIn1cbiIKKwkJfSwKKwkJZ2V0Q29tcGlsZXJPcHRpb25zKCksCisJCSIiKTsKK30K
Ky8vIHNhbWUgYXMgcHJldmlvdXMsIHNvdXJjZSBjYXNlIGZvciByZWZlcmVuY2UKK3B1YmxpYyB2
b2lkIHRlc3RCdWc0MjQ2MjRiKCkgeworCXJ1bkNvbmZvcm1UZXN0V2l0aExpYnMoCisJCW5ldyBT
dHJpbmdbXSB7CisJCQkiVGVzdDMuamF2YSIsCisJCQkiaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5h
bm5vdGF0aW9uLk5vbk51bGw7XG4iICsKKwkJCSh0aGlzLmNvbXBsaWFuY2VMZXZlbCA+PSBDbGFz
c0ZpbGVDb25zdGFudHMuSkRLMV84ID8KKwkJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24u
KjtcbiIgKworCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpIEBpbnRlcmZhY2UgTWFy
a2VyIHt9XG4iCisJCQk6CisJCQkiIgorCQkJKSsgCisJCQkiXG4iICsgCisJCQkicHVibGljIGNs
YXNzIFRlc3QzIHtcbiIgKyAKKwkJCSJcbiIgKyAKKwkJCSIJcHVibGljIFRlc3QzKCkge1xuIiAr
IAorCQkJIgl9XG4iICsgCisJCQkiXG4iICsgCisJCQkiCXB1YmxpYyBjbGFzcyBJbm5lciBleHRl
bmRzIE9iamVjdCB7XG4iICsKKwkJCSIJCWNsYXNzIERlZXBJbm5lciB7fVxuIiArCisJCQkiCX1c
biIgKyAKKwkJCSIJcHVibGljIHN0YXRpYyBjbGFzcyBOZXN0ZWQgZXh0ZW5kcyBPYmplY3Qge1xu
IiArCisJCQkiCQljbGFzcyBJbm5lckluTmVzdGVkIHt9XG4iICsKKwkJCSIJCXN0YXRpYyBjbGFz
cyBEZWVwTmVzdGVkIHt9XG4iICsKKwkJCSIJfVxuIiArIAorCQkJIglzdGF0aWMgcHVibGljIGZp
bmFsIEBOb25OdWxsIElubmVyIGZpZWxkMSA9IG5ldyBUZXN0MygpLm5ldyBJbm5lcigpO1xuIiAr
IAorCQkJKHRoaXMuY29tcGxpYW5jZUxldmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfOCA/
CisJCQkiCXN0YXRpYyBwdWJsaWMgZmluYWwgQE5vbk51bGwgSW5uZXIuRGVlcElubmVyIGZpZWxk
MiA9IGZpZWxkMS5uZXcgRGVlcElubmVyKCk7XG4iICsgCisJCQkiCXN0YXRpYyBwdWJsaWMgZmlu
YWwgQE5vbk51bGwgTmVzdGVkLklubmVySW5OZXN0ZWQgZmllbGQzID0gbmV3IE5lc3RlZCgpLm5l
dyBJbm5lckluTmVzdGVkKCk7XG4iICsKKwkJCSIJc3RhdGljIHB1YmxpYyBmaW5hbCBATm9uTnVs
bCBOZXN0ZWQuRGVlcE5lc3RlZCBmaWVsZDQgPSBuZXcgTmVzdGVkLkRlZXBOZXN0ZWQoKTtcbiIK
KwkJCToKKwkJCSIJc3RhdGljIHB1YmxpYyBmaW5hbCBATWFya2VyIElubmVyLkBOb25OdWxsIERl
ZXBJbm5lciBmaWVsZDIgPSBmaWVsZDEubmV3IERlZXBJbm5lcigpO1xuIiArIAorCQkJIglzdGF0
aWMgcHVibGljIGZpbmFsIE5lc3RlZC5ATm9uTnVsbCBJbm5lckluTmVzdGVkIGZpZWxkMyA9IG5l
dyBOZXN0ZWQoKS5uZXcgSW5uZXJJbk5lc3RlZCgpO1xuIiArCisJCQkiCXN0YXRpYyBwdWJsaWMg
ZmluYWwgTmVzdGVkLkBOb25OdWxsIERlZXBOZXN0ZWQgZmllbGQ0ID0gbmV3IE5lc3RlZC5EZWVw
TmVzdGVkKCk7XG4iCisJCQkpICsgCisJCQkiXG4iICsgCisJCQkifVxuIiwKKwkJCSJUZXN0NC5q
YXZhIiwKKwkJCSJpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmFubm90YXRpb24uTm9uTnVsbDtcbiIg
KyAKKwkJCSJcbiIgKyAKKwkJCSJwdWJsaWMgY2xhc3MgVGVzdDQge1xuIiArIAorCQkJIlxuIiAr
IAorCQkJIglwdWJsaWMgVGVzdDQoKSB7XG4iICsgCisJCQkiCX1cbiIgKyAKKwkJCSIJXG4iICsg
CisJCQkiCXB1YmxpYyB2b2lkIHRlc3QoKSB7XG4iICsgCisJCQkiCQl0ZXN0MSggVGVzdDMuZmll
bGQxKTtcbiIgKyAKKwkJCSIJCXRlc3QxKCBUZXN0My5maWVsZDIpO1xuIiArIAorCQkJIgkJdGVz
dDEoIFRlc3QzLmZpZWxkMyk7XG4iICsgCisJCQkiCQl0ZXN0MSggVGVzdDMuZmllbGQ0KTtcbiIg
KyAKKwkJCSIJfVxuIiArIAorCQkJIglcbiIgKyAKKwkJCSIJcHVibGljIHZvaWQgdGVzdDEoIEBO
b25OdWxsIE9iamVjdCBvYmplY3QpIHtcbiIgKyAKKwkJCSIJfVxuIiArIAorCQkJIlxuIiArIAor
CQkJIn1cbiIKKwkJfSwKKwkJZ2V0Q29tcGlsZXJPcHRpb25zKCksCisJCSIiKTsKK30KIH0KZGlm
ZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9kb20vVHlwZUJpbmRpbmdUZXN0czMwOC5qYXZhIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Rv
bS9UeXBlQmluZGluZ1Rlc3RzMzA4LmphdmEKaW5kZXggNTU1YzRkYS4uZTc1NzFhOCAxMDA2NDQK
LS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pk
dC9jb3JlL3Rlc3RzL2RvbS9UeXBlQmluZGluZ1Rlc3RzMzA4LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Rv
bS9UeXBlQmluZGluZ1Rlc3RzMzA4LmphdmEKQEAgLTIwNzgsNiArMjA3OCw4MyBAQAogCQkJcmVt
b3ZlTGlicmFyeShqYXZhUHJvamVjdCwgamFyTmFtZSwgc3JjTmFtZSk7DQogCQl9DQogCX0NCisJ
Ly8gVmFyaWFudHMgd2hlcmUgc3VwZXJjbGFzcyBpbiBiaW5hcnkgaXMgYW4gYW5ub3RhdGVkIGlu
bmVyL25lc3RlZCBjbGFzcw0KKwlwdWJsaWMgdm9pZCB0ZXN0QmluYXJ5V2l0aG91dEdlbmVyaWNT
aWduYXR1cmVfYigpIHRocm93cyBDb3JlRXhjZXB0aW9uLCBJT0V4Y2VwdGlvbiB7DQorCQlTdHJp
bmcgamFyTmFtZSA9ICJUeXBlQmluZGluZ1Rlc3RzMzA4LmphciI7DQorCQlTdHJpbmcgc3JjTmFt
ZSA9ICJUeXBlQmluZGluZ1Rlc3RzMzA4X3NyYy56aXAiOw0KKwkJZmluYWwgSUphdmFQcm9qZWN0
IGphdmFQcm9qZWN0ID0gZ2V0SmF2YVByb2plY3QoIkNvbnZlcnRlcjE4Iik7DQorCQl0cnkgew0K
KwkJCVN0cmluZ1tdIHBhdGhBbmRDb250ZW50cyA9IG5ldyBTdHJpbmdbXSB7DQorCQkJCSJTdXBl
cmNsYXNzLmphdmEiLA0KKwkJCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRU
eXBlO1xuIiArDQorCQkJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0O1xuIiAr
DQorCQkJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArDQorCQkJCSJAaW50ZXJm
YWNlIFQge1xuIiArDQorCQkJCSIJaW50IHZhbHVlKCkgZGVmYXVsdCAwO1xuIiArDQorCQkJCSJ9
XG4iICsNCisJCQkJIkBUKDEpXG4iICsNCisJCQkJInB1YmxpYyBhYnN0cmFjdCBjbGFzcyBTdXBl
cmNsYXNzIGV4dGVuZHMgQFQoMikgT2JqZWN0IGltcGxlbWVudHMgQFQoMykgUnVubmFibGUge1xu
IiArDQorCQkJCSIgICBAVCg5KVxuIiArDQorCQkJCSIgICBTdXBlcmNsYXNzICgpIHt9XG4iICsN
CisJCQkJIiAgIEBUKDEwKVxuIiArDQorCQkJCSIgICBjbGFzcyBJbm5lciB7fVxuIiArDQorCQkJ
CSIgICBAVCgxMSlcbiIgKw0KKwkJCQkiICAgY2xhc3MgU3ViSW5uZXIgZXh0ZW5kcyBAVCgxMikg
SW5uZXIge31cbiIgKw0KKwkJCQkiICAgQFQoMTMpXG4iICsNCisJCQkJIiAgIHN0YXRpYyBjbGFz
cyBOZXN0ZWQge31cbiIgKw0KKwkJCQkiICAgQFQoMTQpXG4iICsNCisJCQkJIiAgIHN0YXRpYyBj
bGFzcyBTdWJOZXN0ZWQgZXh0ZW5kcyBAVCgxNSkgTmVzdGVkIHt9XG4iICsNCisJCQkJIn1cbiIN
CisJCQl9Ow0KKwkJCQ0KKwkJCUhhc2hNYXAgbGlicmFyeU9wdGlvbnMgPSBuZXcgSGFzaE1hcChq
YXZhUHJvamVjdC5nZXRPcHRpb25zKHRydWUpKTsNCisJCQlsaWJyYXJ5T3B0aW9ucy5wdXQoQ29t
cGlsZXJPcHRpb25zLk9QVElPTl9TdG9yZV9Bbm5vdGF0aW9ucywgQ29tcGlsZXJPcHRpb25zLkVO
QUJMRUQpOw0KKwkJCWFkZExpYnJhcnkoamF2YVByb2plY3QsIGphck5hbWUsIHNyY05hbWUsIHBh
dGhBbmRDb250ZW50cywgSmF2YUNvcmUuVkVSU0lPTl8xXzgsIGxpYnJhcnlPcHRpb25zKTsNCisJ
CQkNCisJCQlTdHJpbmcgY29udGVudHMgPSANCisJCQkJCSJAVCgyMSlcbiIgKw0KKwkJCQkJInB1
YmxpYyBhYnN0cmFjdCBjbGFzcyBYIGV4dGVuZHMgQFQoMjIpIFN1cGVyY2xhc3MgaW1wbGVtZW50
cyBAVCgyMykgUnVubmFibGUge1xuIiArDQorCQkJCQkifVxuIjsNCisJCQkNCisJCQl0aGlzLndv
cmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxOC9zcmMvWC5qYXZhIiwgdHJ1
ZSk7DQorCQkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoY29udGVudHMsIHRoaXMud29ya2luZ0Nv
cHkpOw0KKwkJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUu
Q09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsNCisJCQlDb21waWxhdGlvblVu
aXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsNCisJCQlhc3NlcnRQ
cm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAwKTsNCisJCQlMaXN0IHR5cGVzID0gY29tcGls
YXRpb25Vbml0LnR5cGVzKCk7DQorCQkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3Qgbm8gb2YgdHlw
ZXMiLCAxLCB0eXBlcy5zaXplKCkpOw0KKwkJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbCA9IChU
eXBlRGVjbGFyYXRpb24pIHR5cGVzLmdldCgwKTsNCisJCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRp
bmcgPSB0eXBlRGVjbC5yZXNvbHZlQmluZGluZygpOw0KKwkJCUlBbm5vdGF0aW9uQmluZGluZ1td
IGFubm90YXRpb25zID0gdHlwZUJpbmRpbmcuZ2V0QW5ub3RhdGlvbnMoKTsNCisJCQlhc3NlcnRU
cnVlKCJTaG91bGQgYmUgMSIsIGFubm90YXRpb25zLmxlbmd0aCA9PSAxKTsNCisJCQlhc3NlcnRF
cXVhbHMoIkFubm90YXRpb24gbWlzbWF0Y2giLCAiQFQodmFsdWUgPSAyMSkiLCBhbm5vdGF0aW9u
c1swXS50b1N0cmluZygpKTsNCisJCQkNCisJCQlJVHlwZUJpbmRpbmcgc3VwZXJjbGFzcyA9IHR5
cGVCaW5kaW5nLmdldFN1cGVyY2xhc3MoKTsNCisJCQlJVHlwZUJpbmRpbmdbXSBpbm5lcnMgPSBz
dXBlcmNsYXNzLmdldERlY2xhcmVkVHlwZXMoKTsNCisJCQlhc3NlcnRUcnVlKCJTaG91bGQgYmUg
MiIsIGlubmVycy5sZW5ndGggPT0gNCk7DQorCQkJDQorCQkJSVR5cGVCaW5kaW5nIHN1YklubmVy
ID0gaW5uZXJzWzJdOw0KKwkJCWFzc2VydEVxdWFscygiVHlwZSBuYW1lIG1pc21hdGNoIiwgIlN1
YklubmVyIiwgc3ViSW5uZXIuZ2V0TmFtZSgpKTsNCisJCQlhbm5vdGF0aW9ucyA9IHN1YklubmVy
LmdldEFubm90YXRpb25zKCk7DQorCQkJYXNzZXJ0VHJ1ZSgiU2hvdWxkIGJlIDEiLCBhbm5vdGF0
aW9ucy5sZW5ndGggPT0gMSk7DQorCQkJYXNzZXJ0RXF1YWxzKCJBbm5vdGF0aW9uIG1pc21hdGNo
IiwgIkBUKHZhbHVlID0gMTEpIiwgYW5ub3RhdGlvbnNbMF0udG9TdHJpbmcoKSk7DQorCQkJDQor
CQkJYW5ub3RhdGlvbnMgPSBzdWJJbm5lci5nZXRTdXBlcmNsYXNzKCkuZ2V0VHlwZUFubm90YXRp
b25zKCk7DQorCQkJYXNzZXJ0VHJ1ZSgiU2hvdWxkIGJlIDEiLCBhbm5vdGF0aW9ucy5sZW5ndGgg
PT0gMSk7DQorCQkJYXNzZXJ0RXF1YWxzKCJBbm5vdGF0aW9uIG1pc21hdGNoIiwgIkBUKHZhbHVl
ID0gMTIpIiwgYW5ub3RhdGlvbnNbMF0udG9TdHJpbmcoKSk7DQorCQkJDQorCQkJSVR5cGVCaW5k
aW5nIHN1Yk5lc3RlZCA9IGlubmVyc1szXTsNCisJCQlhbm5vdGF0aW9ucyA9IHN1Yk5lc3RlZC5n
ZXRBbm5vdGF0aW9ucygpOw0KKwkJCWFzc2VydFRydWUoIlNob3VsZCBiZSAxIiwgYW5ub3RhdGlv
bnMubGVuZ3RoID09IDEpOw0KKwkJCWFzc2VydEVxdWFscygiQW5ub3RhdGlvbiBtaXNtYXRjaCIs
ICJAVCh2YWx1ZSA9IDE0KSIsIGFubm90YXRpb25zWzBdLnRvU3RyaW5nKCkpOw0KKwkJCQ0KKwkJ
CWFubm90YXRpb25zID0gc3ViTmVzdGVkLmdldFN1cGVyY2xhc3MoKS5nZXRUeXBlQW5ub3RhdGlv
bnMoKTsNCisJCQlhc3NlcnRUcnVlKCJTaG91bGQgYmUgMSIsIGFubm90YXRpb25zLmxlbmd0aCA9
PSAxKTsNCisJCQlhc3NlcnRFcXVhbHMoIkFubm90YXRpb24gbWlzbWF0Y2giLCAiQFQodmFsdWUg
PSAxNSkiLCBhbm5vdGF0aW9uc1swXS50b1N0cmluZygpKTsJCQkNCisJCX0gZmluYWxseSB7DQor
CQkJcmVtb3ZlTGlicmFyeShqYXZhUHJvamVjdCwgamFyTmFtZSwgc3JjTmFtZSk7DQorCQl9DQor
CX0NCiAJLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQx
OTkxOCwgWzEuOF1bY29tcGlsZXJdIEFubm90YXRpb25zIGFyZSBub3QgcmVzdG9yZWQgZnJvbSBj
bGFzcyBmaWxlcyBpbiBhIGZldyBzaXR1YXRpb25zLg0KIAlwdWJsaWMgdm9pZCB0ZXN0QmluYXJ5
QW5ub3RhdGlvblR5cGUoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiwgSU9FeGNlcHRpb24gew0KIAkJ
U3RyaW5nIGphck5hbWUgPSAiVHlwZUJpbmRpbmdUZXN0czMwOC5qYXIiOw0KZGlmZiAtLWdpdCBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9sb29rdXAvTG9va3VwRW52aXJvbm1lbnQuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvTG9v
a3VwRW52aXJvbm1lbnQuamF2YQppbmRleCBkM2M2OGEwLi42ZmY1ZTI4IDEwMDY0NAotLS0gYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvbG9va3VwL0xvb2t1cEVudmlyb25tZW50LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9M
b29rdXBFbnZpcm9ubWVudC5qYXZhCkBAIC0yNyw2ICsyNyw3IEBACiAgKgkJCQkJCQkJQnVnIDQx
NjMwNyAtIFsxLjhdW2NvbXBpbGVyXVtudWxsXSBzdWJjbGFzcyB3aXRoIHR5cGUgcGFyYW1ldGVy
IHN1YnN0aXR1dGlvbiBjb25mdXNlcyBudWxsIGNoZWNraW5nCiAgKgkJCQkJCQkJQnVnIDQxNzI5
NSAtIFsxLjhbW251bGxdIE1hc3NhZ2UgdHlwZSBhbm5vdGF0ZWQgbnVsbCBhbmFseXNpcyB0byBn
ZWwgd2VsbCB3aXRoIGRlZXAgZW5jb2RlZCB0eXBlIGJpbmRpbmdzLgogICoJCQkJCQkJCUJ1ZyA0
MTYxOTAgLSBbMS44XVtudWxsXSBkZXRlY3QgaW5jb21wYXRpYmxlIG92ZXJyaWRlcyBkdWUgdG8g
bnVsbCB0eXBlIGFubm90YXRpb25zCisgKgkJCQkJCQkJQnVnIDQyNDYyNCAtIFsxLjhdW251bGxd
IGlmIGEgc3RhdGljLW9iamVjdCB3aXRoIGFubm90YXRpb24gQE5vbk51bGwgaXMgdXNlZCwgYSB3
YXJuaW5nIGlzIHNob3duCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cDsKIApAQCAtMTIyOCwxOSArMTIyOSw3
IEBACiAJfQogCVJlZmVyZW5jZUJpbmRpbmcgYmluZGluZyA9IGdldFR5cGVGcm9tQ29tcG91bmRO
YW1lKGNvbXBvdW5kTmFtZSwgaXNQYXJhbWV0ZXJpemVkLCB3YXNNaXNzaW5nVHlwZSk7CiAJaWYg
KHdhbGtlciAhPSBUeXBlQW5ub3RhdGlvbldhbGtlci5FTVBUWV9BTk5PVEFUSU9OX1dBTEtFUikg
ewotCQlmaW5hbCBpbnQgZGVwdGggPSBiaW5kaW5nLmRlcHRoKCk7Ci0JCUFubm90YXRpb25CaW5k
aW5nIFtdW10gYW5ub3RhdGlvbnMgPSBudWxsOwotCQlmb3IgKGludCBpID0gMDsgaSA8PSBkZXB0
aDsgaSsrKSB7Ci0JCQlBbm5vdGF0aW9uQmluZGluZ1tdIGFubm90cyA9IEJpbmFyeVR5cGVCaW5k
aW5nLmNyZWF0ZUFubm90YXRpb25zKHdhbGtlci5nZXRBbm5vdGF0aW9uc0F0Q3Vyc29yKCksIHRo
aXMsIG1pc3NpbmdUeXBlTmFtZXMpOwotCQkJaWYgKGFubm90cyAhPSBudWxsICYmIGFubm90cy5s
ZW5ndGggPiAwKSB7Ci0JCQkJaWYgKGFubm90YXRpb25zID09IG51bGwpCi0JCQkJCWFubm90YXRp
b25zID0gbmV3IEFubm90YXRpb25CaW5kaW5nW2RlcHRoICsgMV1bXTsKLQkJCQlhbm5vdGF0aW9u
c1tpXSA9IGFubm90czsKLQkJCX0KLQkJCXdhbGtlciA9IHdhbGtlci50b05leHROZXN0ZWRUeXBl
KCk7Ci0JCX0KLQkJaWYgKGFubm90YXRpb25zICE9IG51bGwpCi0JCQliaW5kaW5nID0gKFJlZmVy
ZW5jZUJpbmRpbmcpIGNyZWF0ZUFubm90YXRlZFR5cGUoYmluZGluZywgYW5ub3RhdGlvbnMpOwor
CQliaW5kaW5nID0gKFJlZmVyZW5jZUJpbmRpbmcpIGFubm90YXRlVHlwZShiaW5kaW5nLCB3YWxr
ZXIsIG1pc3NpbmdUeXBlTmFtZXMpOwogCX0KIAlyZXR1cm4gYmluZGluZzsKIH0KQEAgLTEzMjYs
MTkgKzEzMTUsNyBAQAogCX0KIAkKIAlpZiAod2Fsa2VyICE9IFR5cGVBbm5vdGF0aW9uV2Fsa2Vy
LkVNUFRZX0FOTk9UQVRJT05fV0FMS0VSKSB7Ci0JCWZpbmFsIGludCBkZXB0aCA9IGJpbmRpbmcu
ZGVwdGgoKTsKLQkJQW5ub3RhdGlvbkJpbmRpbmcgW11bXSBhbm5vdGF0aW9ucyA9IG51bGw7Ci0J
CWZvciAoaW50IGkgPSAwOyBpIDw9IGRlcHRoOyBpKyspIHsKLQkJCUFubm90YXRpb25CaW5kaW5n
W10gYW5ub3RzID0gQmluYXJ5VHlwZUJpbmRpbmcuY3JlYXRlQW5ub3RhdGlvbnMod2Fsa2VyLmdl
dEFubm90YXRpb25zQXRDdXJzb3IoKSwgdGhpcywgbWlzc2luZ1R5cGVOYW1lcyk7Ci0JCQlpZiAo
YW5ub3RzICE9IG51bGwgJiYgYW5ub3RzLmxlbmd0aCA+IDApIHsKLQkJCQlpZiAoYW5ub3RhdGlv
bnMgPT0gbnVsbCkKLQkJCQkJYW5ub3RhdGlvbnMgPSBuZXcgQW5ub3RhdGlvbkJpbmRpbmdbZGVw
dGggKyAxXVtdOwotCQkJCWFubm90YXRpb25zW2ldID0gYW5ub3RzOwotCQkJfQotCQkJd2Fsa2Vy
ID0gd2Fsa2VyLnRvTmV4dE5lc3RlZFR5cGUoKTsKLQkJfQotCQlpZiAoYW5ub3RhdGlvbnMgIT0g
bnVsbCkKLQkJCWJpbmRpbmcgPSBjcmVhdGVBbm5vdGF0ZWRUeXBlKGJpbmRpbmcsIGFubm90YXRp
b25zKTsKKwkJYmluZGluZyA9IGFubm90YXRlVHlwZShiaW5kaW5nLCB3YWxrZXIsIG1pc3NpbmdU
eXBlTmFtZXMpOwogCX0KIAkKIAlpZiAoZGltZW5zaW9uICE9IDApCkBAIC0xMzQ3LDYgKzEzMjQs
MzYgQEAKIAlyZXR1cm4gYmluZGluZzsKIH0KIAorcHJpdmF0ZSBUeXBlQmluZGluZyBhbm5vdGF0
ZVR5cGUoVHlwZUJpbmRpbmcgYmluZGluZywgVHlwZUFubm90YXRpb25XYWxrZXIgd2Fsa2VyLCBj
aGFyW11bXVtdIG1pc3NpbmdUeXBlTmFtZXMpIHsKKwlpbnQgZGVwdGggPSBiaW5kaW5nLmRlcHRo
KCkgKyAxOworCWlmIChkZXB0aCA+IDEpIHsKKwkJLy8gbmVlZCB0byBjb3VudCBub24tc3RhdGlj
IG5lc3RpbmcgbGV2ZWxzLCByZXNvbHZlZCBiaW5kaW5nIHJlcXVpcmVkIGZvciBwcmVjaXNpb24K
KwkJaWYgKGJpbmRpbmcuaXNVbnJlc29sdmVkVHlwZSgpKQorCQkJYmluZGluZyA9ICgoVW5yZXNv
bHZlZFJlZmVyZW5jZUJpbmRpbmcpIGJpbmRpbmcpLnJlc29sdmUodGhpcywgdHJ1ZSk7CisJCVR5
cGVCaW5kaW5nIGN1cnJlbnRCaW5kaW5nID0gYmluZGluZzsKKwkJZGVwdGggPSAwOworCQl3aGls
ZSAoY3VycmVudEJpbmRpbmcgIT0gbnVsbCkgeworCQkJZGVwdGgrKzsKKwkJCWlmIChjdXJyZW50
QmluZGluZy5pc1N0YXRpYygpKQorCQkJCWJyZWFrOworCQkJY3VycmVudEJpbmRpbmcgPSBjdXJy
ZW50QmluZGluZy5lbmNsb3NpbmdUeXBlKCk7CisJCX0KKwl9CisJQW5ub3RhdGlvbkJpbmRpbmcg
W11bXSBhbm5vdGF0aW9ucyA9IG51bGw7CisJZm9yIChpbnQgaSA9IDA7IGkgPCBkZXB0aDsgaSsr
KSB7CisJCUFubm90YXRpb25CaW5kaW5nW10gYW5ub3RzID0gQmluYXJ5VHlwZUJpbmRpbmcuY3Jl
YXRlQW5ub3RhdGlvbnMod2Fsa2VyLmdldEFubm90YXRpb25zQXRDdXJzb3IoKSwgdGhpcywgbWlz
c2luZ1R5cGVOYW1lcyk7CisJCWlmIChhbm5vdHMgIT0gbnVsbCAmJiBhbm5vdHMubGVuZ3RoID4g
MCkgeworCQkJaWYgKGFubm90YXRpb25zID09IG51bGwpCisJCQkJYW5ub3RhdGlvbnMgPSBuZXcg
QW5ub3RhdGlvbkJpbmRpbmdbZGVwdGhdW107CisJCQlhbm5vdGF0aW9uc1tpXSA9IGFubm90czsK
KwkJfQorCQl3YWxrZXIgPSB3YWxrZXIudG9OZXh0TmVzdGVkVHlwZSgpOworCX0KKwlpZiAoYW5u
b3RhdGlvbnMgIT0gbnVsbCkKKwkJYmluZGluZyA9IGNyZWF0ZUFubm90YXRlZFR5cGUoYmluZGlu
ZywgYW5ub3RhdGlvbnMpOworCXJldHVybiBiaW5kaW5nOworfQorCiBib29sZWFuIHF1YWxpZmll
ZE5hbWVNYXRjaGVzU2lnbmF0dXJlKGNoYXJbXVtdIG5hbWUsIGNoYXJbXSBzaWduYXR1cmUpIHsK
IAlpbnQgcyA9IDE7IC8vIHNraXAgJ0wnCiAJZm9yIChpbnQgaSA9IDA7IGkgPCBuYW1lLmxlbmd0
aDsgaSsrKSB7
</data>

          </attachment>
      

    </bug>

</bugzilla>