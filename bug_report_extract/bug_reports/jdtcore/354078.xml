<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>354078</bug_id>
          
          <creation_ts>2011-08-06 16:10:00 -0400</creation_ts>
          <short_desc>[dom] ASTConverter.removeTrailingCommentFromExpressionEndingWithAParen() ??</short_desc>
          <delta_ts>2011-09-12 16:25:36 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.7.1</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>3.8 M2</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Stephan Herrmann">stephan.herrmann</reporter>
          <assigned_to name="Olivier Thomann">Olivier_Thomann</assigned_to>
          <cc>amj87.iitr</cc>
    
    <cc>Olivier_Thomann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1975156</commentid>
    <comment_count>0</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-08-06 16:10:46 -0400</bug_when>
    <thetext>The method in the bug title was involved in intermittent failures in 
org.eclipse.jdt.core.tests.dom.RunAllTests when run against Object Teams.

The results come at three steps:

1) The method has an off-by-one bug which, however, doesn&apos;t cause harm,
normally.

2) The method may trigger what looks like a bug in Oracle&apos;s VM 1.7.0-b144

3) The method doesn&apos;t seem to be needed in current code.


Details:
(1)
Inside removeTrailingCommentFromExpressionEndingWithAParen() the scanner
is repositioned using:
  this.scanner.resetTo(start, start + node.getLength());
so for this test snippet:
  System.out.println(new Object());
the scanner now sees:
  new Object())
While the method is intended for reducing the source range of &apos;node&apos;
the scanner range theoretically allows also extending the source range
which is not intended.
As said, normally this causes no harm as matching of parens gives the
correct result.

(2)
The failures I saw never happened when running in the debugger. So I did
some sysout-debugging and observed that in these lines:
	case TerminalTokens.TokenNameRPAREN :
		parenCounter--;
		if (parenCounter == 0) {
			int end = this.scanner.currentPosition - 1;
parenCounter was decremented to -1 and immediately after that
the following if-then was entered!
I just started seeing this and I assume this is because I just now switched
to running these tests on a 1.7 VM (1.7.0-b144 to be precise).
Later I installed 1.7.0-b147 (final) and couldn&apos;t yet reproduce on that VM,
so maybe it&apos;s fixed, maybe it just happens less frequently (it never happened
very deterministically).

(3)
Then I searched why removeTrailingCommentFromExpressionEndingWithAParen()
was introduced in the first place, found bug 10874, removed the method body
and ran all dom tests again: no failure. Specifically, ASTConverterTest
has a number of tests that mention bug 10874, but none of these tests is
effected by emptying removeTrailingCommentFromExpressionEndingWithAParen()
Should we remove this method altogether, or can anybody demonstrate that
it&apos;s still needed?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1975432</commentid>
    <comment_count>1</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-08-08 10:11:04 -0400</bug_when>
    <thetext>I&apos;m running all tests to see if any lead to a call to this method.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1975505</commentid>
    <comment_count>2</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-08-08 11:37:42 -0400</bug_when>
    <thetext>Found one test atleast - org.eclipse.jdt.core.tests.dom.StandAloneASTParserTest.test3().

Looking at the references for the method, I can see that it is used for converting MessageSend and AllocationExpression

Stephan, assuming this is indeed used, I think the only issue we should fix here is (1)?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1975724</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-08-08 19:01:47 -0400</bug_when>
    <thetext>(In reply to comment #2)
&gt; Found one test atleast -
&gt; org.eclipse.jdt.core.tests.dom.StandAloneASTParserTest.test3().
&gt; 
&gt; Looking at the references for the method, I can see that it is used for
&gt; converting MessageSend and AllocationExpression

It&apos;s called, but I don&apos;t see any behavior changes if I delete the method.
So, why keep it? What breaks?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1978810</commentid>
    <comment_count>4</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-08-15 12:58:06 -0400</bug_when>
    <thetext>(In reply to comment #0)
&gt; Details:
&gt; (1)
&gt; Inside removeTrailingCommentFromExpressionEndingWithAParen() the scanner
&gt; is repositioned using:
&gt;   this.scanner.resetTo(start, start + node.getLength());
&gt; so for this test snippet:
&gt;   System.out.println(new Object());
&gt; the scanner now sees:
&gt;   new Object())
&gt; While the method is intended for reducing the source range of &apos;node&apos;
&gt; the scanner range theoretically allows also extending the source range
&gt; which is not intended.
&gt; As said, normally this causes no harm as matching of parens gives the
&gt; correct result.
This is probably not expected.

&gt; (2)
&gt; The failures I saw never happened when running in the debugger. So I did
&gt; some sysout-debugging and observed that in these lines:
&gt;     case TerminalTokens.TokenNameRPAREN :
&gt;         parenCounter--;
&gt;         if (parenCounter == 0) {
&gt;             int end = this.scanner.currentPosition - 1;
&gt; parenCounter was decremented to -1 and immediately after that
&gt; the following if-then was entered!
&gt; I just started seeing this and I assume this is because I just now switched
&gt; to running these tests on a 1.7 VM (1.7.0-b144 to be precise).
&gt; Later I installed 1.7.0-b147 (final) and couldn&apos;t yet reproduce on that VM,
&gt; so maybe it&apos;s fixed, maybe it just happens less frequently (it never happened
&gt; very deterministically)
There was a JIT bug that has been fixed with b147.

&gt; (3)
&gt; Then I searched why removeTrailingCommentFromExpressionEndingWithAParen()
&gt; was introduced in the first place, found bug 10874, removed the method body
&gt; and ran all dom tests again: no failure. Specifically, ASTConverterTest
&gt; has a number of tests that mention bug 10874, but none of these tests is
&gt; effected by emptying removeTrailingCommentFromExpressionEndingWithAParen()
&gt; Should we remove this method altogether, or can anybody demonstrate that
&gt; it&apos;s still needed?
If we cannot come up a test case that is passing through that code, we should get rid of it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1979525</commentid>
    <comment_count>5</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-08-16 14:12:43 -0400</bug_when>
    <thetext>I&apos;ll take care of this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1979568</commentid>
    <comment_count>6</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-08-16 15:08:38 -0400</bug_when>
    <thetext>The code seems to be useless as the positions are properly set before the code is called. This might be left overs from a time where the end position was wrong. I would simply get rid of it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1979572</commentid>
    <comment_count>7</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-08-16 15:12:37 -0400</bug_when>
    <thetext>Released for 3.8M2.
Verification needs to be done by code inspection.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1992275</commentid>
    <comment_count>8</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-09-12 16:25:36 -0400</bug_when>
    <thetext>Verified for 3.8M2 using code inspection</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>