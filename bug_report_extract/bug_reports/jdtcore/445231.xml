<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>445231</bug_id>
          
          <creation_ts>2014-09-26 16:22:00 -0400</creation_ts>
          <short_desc>[compiler] IllegalAccessError running Eclipse-compiled class</short_desc>
          <delta_ts>2015-05-07 14:48:11 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.5 M7</target_milestone>
          
          <blocked>466675</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="&quot;Z&quot; Zorzella">zorzella</reporter>
          <assigned_to name="shankha banerjee">shankhba</assigned_to>
          <cc>jarthana</cc>
    
    <cc>markus_keller</cc>
    
    <cc>saammana</cc>
    
    <cc>shankhba</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2456885</commentid>
    <comment_count>0</comment_count>
      <attachid>247419</attachid>
    <who name="&quot;Z&quot; Zorzella">zorzella</who>
    <bug_when>2014-09-26 16:22:12 -0400</bug_when>
    <thetext>Created attachment 247419
whole Eclipse project, with 4 source files and their compiled .classes as well

The code below, when compiled by Eclipse (4.4.1), causes an IllegalAccessError to be thrown by &quot;clazz.isAnonymousClass()&quot; when it&apos;s run. The same code can be successfully compiled and runs properly by java&apos;s javac (java 1.7.0).

I encountered this problem on my project, and then did my best to trim it down to a minimal reproduceable case, but I still need 4 classes in 2 java packages. Just about anything that I try to trim down any further makes the problem disappear.

Be careful tinkering with this: incremental compile sometimes does not toggle the thing to go good/bad (i.e. when making any change to the code, do a full clean and re-run).

I attach here the entire project as a zip, including the .classes as I see them.

BTW, here&apos;s a few examples of things that make the problem go away:

1. Stop calling .setJobName on Buggered

2. Make Base public

3. put all classes in the same package

4. simplify the generic type of Base.Builder</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2456912</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-26 21:11:37 -0400</bug_when>
    <thetext>Shankha, please take a look.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2471975</commentid>
    <comment_count>2</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-10-26 11:25:28 -0400</bug_when>
    <thetext>Will look into it during 4.5 M4.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2490797</commentid>
    <comment_count>3</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-12-01 03:13:43 -0500</bug_when>
    <thetext>Hi Zorella,
I tried out the project with the following version:

Version: Luna SR1 (4.4.1)
Build id: M20140925-0400

I could not reproduce the error.
I could not figure out a recent defect which would have solved the issue. 

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2491236</commentid>
    <comment_count>4</comment_count>
    <who name="&quot;Z&quot; Zorzella">zorzella</who>
    <bug_when>2014-12-01 12:32:25 -0500</bug_when>
    <thetext>I just tried with Luna, and I can still repro both on my Ubuntu as well as my Mac OS. On the Mac here&apos;s the version:

Version: Luna Service Release 1 (4.4.1)
Build id: 20140925-1800

To try:

1. download and unzip the attached project

2. import it in Eclipse

3. Open &quot;Bug.java&quot; and &quot;Run as Java Application&quot;

*******************

In case that makes a difference, on my Mac, I&apos;m using for JRE the JDK 1.7.0_45 and the compiler is set for Compliance level 1.6.

If you still can&apos;t repro, I&apos;ll try to tinker with these two to see if it makes a difference.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2492031</commentid>
    <comment_count>5</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-12-03 05:08:36 -0500</bug_when>
    <thetext>I can reproduce it on Ubuntu.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2492060</commentid>
    <comment_count>6</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-12-03 06:10:16 -0500</bug_when>
    <thetext>I can reproduce it on tip on Windows.
1) Take the 4 source files: Base, Child, Bug, Buggered .java
2) Make the default JRE as 1.8
3) Compliance setting 1.8
4) Run Bug.java

We see the error.

Create a new Project with 1.7 JRE and compliance level 1.7.
Executes without any issues.

Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2492088</commentid>
    <comment_count>7</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-12-03 07:09:31 -0500</bug_when>
    <thetext>I do not see any difference in code generated for the successful and failure scenarios (Comment 6).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2492570</commentid>
    <comment_count>8</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-12-04 04:53:18 -0500</bug_when>
    <thetext>Hi Stephan,
Could you please me know your suggestions.
Please see steps in Comment 6 for reproducing the bug.

Following are some observations:

1) The code generated at compliance level 1.7 is the same as the code generated 
at compliance level 1.8 for all the files.

2) There are no runtime exceptions with 1.7 JDK.

We can draw two conclusions.
1) Eclipse has been generating wrong code all along and due to tightening of some constraints in JDK 1.8 the code fails.

If we look at the call stack of the error message:
at java.lang.Class.getDeclaringClass0(Native Method)
	at java.lang.Class.getDeclaringClass(Class.java:1222)
	at java.lang.Class.getEnclosingClass(Class.java:1264)
	at java.lang.Class.getSimpleBinaryName(Class.java:1430)
	at java.lang.Class.getSimpleName(Class.java:1296)
	at java.lang.Class.isAnonymousClass(Class.java:1398)

The implementation at 1.8 is different from 1.7 starting from isAnonymousClass.

2) This is a bug with JDK 1.8. Something like : https://bugs.openjdk.java.net/browse/JDK-8026394.

I am not saying the bug: JDK-8026394 and what we see here are related.

Thanks for your help.  

Thanks,
Shankha</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2492700</commentid>
    <comment_count>9</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-12-04 08:35:47 -0500</bug_when>
    <thetext>(In reply to shankha banerjee from comment #8)
&gt; 2) There are no runtime exceptions with 1.7 JDK.

On my box running the program with 1.7.0_67-b01 throws the same exception.

&gt; 1) The code generated at compliance level 1.7 is the same as the code
&gt; generated 
&gt; at compliance level 1.8 for all the files.

Even more interesting I cannot find any significant difference between the code generated by javac (which works) and the code generated by ecj. Differences found:
- different order of InnerClasses
- different order of constant pool entries
- different #entries in LineNumberTable of ctor of Buggered
None of these should be significant.

I compared class files for Buggered and Buggered$Foo. Maybe any of the other class files has a significant difference?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2492736</commentid>
    <comment_count>10</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-12-04 09:25:30 -0500</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #9)

&gt; On my box running the program with 1.7.0_67-b01 throws the same exception.
&gt; 

I tried running with 1.7.0_80-ea and 1.7.0_65.
I also got the same exception.

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2492908</commentid>
    <comment_count>11</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-12-04 13:39:43 -0500</bug_when>
    <thetext>Have you compared the other .class files? Any significant difference?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2493098</commentid>
    <comment_count>12</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-12-05 04:38:48 -0500</bug_when>
    <thetext>Hi Stephan,
We generate a extra method for ChildBuilder.class

  public com.g.Base$Builder setJobName();
    descriptor: ()Lcom/g/Base$Builder;
    flags: ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #18                 // Method com/g/Base$Builder.setJobName:()Lcom/g/Base$Builder;
         4: areturn
      LineNumberTable:
        line 1: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
} 

===

This method is not generated for javac.

===

If we change the Builder class in Class Base:
static class Builder&lt;B extends Builder&lt;B&gt;&gt;
to
static class Builder&lt;B&gt;

The project executes without any issues.
The above method is still generated.

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2493631</commentid>
    <comment_count>13</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-12-07 13:35:15 -0500</bug_when>
    <thetext>(In reply to shankha banerjee from comment #12)
&gt; We generate a extra method for ChildBuilder.class

Could you quickly tweak our compiler to skip generating this bridge method and see if the output still triggers the exception?
 
&gt; If we change the Builder class in Class Base:
&gt; static class Builder&lt;B extends Builder&lt;B&gt;&gt;
&gt; to
&gt; static class Builder&lt;B&gt;
&gt; 
&gt; The project executes without any issues.

Do you have a theory how this change could be related to the exception?
Could the &quot;extends Builder&lt;B&gt;&quot; part by itself trigger illegal access or is it essentially unrelated and only accidentally changes some order within the class file that toggles the exception?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2493646</commentid>
    <comment_count>14</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-12-07 22:09:34 -0500</bug_when>
    <thetext>Moving it to 4.5 M5. I started on the bug at the end of M4. Will work on it with priority for 4.5 M5.

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2509417</commentid>
    <comment_count>15</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2015-01-23 05:33:17 -0500</bug_when>
    <thetext>I need some more time to investigate:

Consider this line:

MessageSend.java#generateCode
MethodBinding codegenBinding = this.binding instanceof PolymorphicMethodBinding ? this.binding : this.binding.original();

Instead of this.binding.original() if we make codegenBinding  pointing to 
this.binding

the program executes successfully. 

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2535480</commentid>
    <comment_count>16</comment_count>
    <who name="Eclipse Genie">genie</who>
    <bug_when>2015-03-21 22:10:55 -0400</bug_when>
    <thetext>New Gerrit change created: https://git.eclipse.org/r/44334</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2535613</commentid>
    <comment_count>17</comment_count>
      <attachid>251815</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2015-03-22 23:44:38 -0400</bug_when>
    <thetext>Created attachment 251815
Patch

Hi Sasi,
Could you please review the patch. Test results are good. 

The issue is we are trying to access a class from a different package which is not exposed out side the package.

The fix is pretty simple:
MessageSend#generateCode:

Line: 423 (patched code)

if (this.binding.isPolymorphic() ||
			(this.binding instanceof ParameterizedMethodBinding &amp;&amp;
			!this.binding.original().declaringClass.canBeSeenBy(currentScope.compilationUnitScope().fPackage))) {

///
Question:

Is the check:
 &quot;this.binding instanceof ParameterizedMethodBinding&quot;
necessary.

I tested out the code without the check and everything seems to work fine.
I could not think of a example where we will need the patch in case of non-generic methods and classes.

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2536391</commentid>
    <comment_count>18</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2015-03-24 04:39:29 -0400</bug_when>
    <thetext>I think the real problem is not with the binding but with references to inaccessible types creeping into the class file via the MessageSend&apos;s signature. 
That&apos;s why this is only going to solve this case, but the problem would still occur when the method in question refers to an inaccessible type (either via return type or arguments). Consider this case where the Base and child classes from the earlier example are modified a little

class Base {

  static class R {
	  
  }
  public static class Builder&lt;B extends R&gt; {

	    public B setJobName() {
	      return null;
	    }
	  }
}

public final class Child {

  public static class Builder&lt;I&gt; extends Base.Builder&lt;R&gt; {}

}

In this case, the declaring class is accessible from Buggered, but the type &apos;R&apos; isn&apos;t and we would end up with the same error as before. 
We have to prevent these inaccessible nested types from being recorded in the class file</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2542397</commentid>
    <comment_count>19</comment_count>
    <who name="Eclipse Genie">genie</who>
    <bug_when>2015-04-06 05:02:04 -0400</bug_when>
    <thetext>New Gerrit change created: https://git.eclipse.org/r/45313</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2542414</commentid>
    <comment_count>20</comment_count>
      <attachid>252173</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2015-04-06 06:33:09 -0400</bug_when>
    <thetext>Created attachment 252173
Patch

Hi Sasi,
Can you please review the patch. Test results are good.
This handles the test case mentioned in Comment 18.
Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2542702</commentid>
    <comment_count>21</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2015-04-07 02:37:42 -0400</bug_when>
    <thetext>Unfortunately, checking whether the member type alone is accessible isn&apos;t sufficient. We need to check whether the enclosing types are accessible as well. 
For an example, change the method setJobName to this in the test

		public &lt;Q extends R&gt; Builder3&lt;Q&gt; setJobName() {
			return null;
		}
and you can see that the exception appears again because although the type Builder3 itself is accessible, it&apos;s enclosing type isn&apos;t</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2543890</commentid>
    <comment_count>22</comment_count>
      <attachid>252248</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2015-04-09 01:55:26 -0400</bug_when>
    <thetext>Created attachment 252248
WIP : Patch

Hi Sasi,
Can you please take a look. I have handled the case mentioned in Comment 21.
Thanks for your help. I will check if there are any other scenarios which I need to handle.

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2544113</commentid>
    <comment_count>23</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2015-04-09 06:52:45 -0400</bug_when>
    <thetext>(In reply to comment #22)
&gt; Created attachment 252248
&gt; WIP : Patch
&gt; 
&gt; Hi Sasi,
&gt; Can you please take a look. I have handled the case mentioned in Comment 21.
&gt; Thanks for your help. I will check if there are any other scenarios which I need
&gt; to handle.
&gt; 
&gt; Thanks
This looks fine to me. We should probably add tests for wildcard parameters &amp; return types that refer to inaccessible types</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2545741</commentid>
    <comment_count>24</comment_count>
    <who name="Eclipse Genie">genie</who>
    <bug_when>2015-04-13 10:52:23 -0400</bug_when>
    <thetext>New Gerrit change created: https://git.eclipse.org/r/45758</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2545974</commentid>
    <comment_count>25</comment_count>
    <who name="Eclipse Genie">genie</who>
    <bug_when>2015-04-14 00:44:57 -0400</bug_when>
    <thetext>Gerrit change https://git.eclipse.org/r/45758 was merged to [master].
Commit: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=a0b3d36cbab89591c7bbefcf57ecd7091e3dd7a6</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2545976</commentid>
    <comment_count>26</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2015-04-14 00:48:54 -0400</bug_when>
    <thetext>The test case as requested mentioned in review Comment 23 have been added.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2545977</commentid>
    <comment_count>27</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2015-04-14 00:52:13 -0400</bug_when>
    <thetext>The change has been merged:
http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=a0b3d36cbab89591c7bbefcf57ecd7091e3dd7a6</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2552014</commentid>
    <comment_count>28</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2015-04-27 04:14:22 -0400</bug_when>
    <thetext>Verified for M7 using I20150426-2000 build</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2560173</commentid>
    <comment_count>29</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2015-05-07 14:48:11 -0400</bug_when>
    <thetext>See bug 466675 for follow-ups. This change will likely be reverted.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>247419</attachid>
            <date>2014-09-26 16:22:00 -0400</date>
            <delta_ts>2014-09-26 16:22:12 -0400</delta_ts>
            <desc>whole Eclipse project, with 4 source files and their compiled .classes as well</desc>
            <filename>bugproject.zip</filename>
            <type>application/zip</type>
            <size>7881</size>
            <attacher name="&quot;Z&quot; Zorzella">zorzella</attacher>
            
              <data encoding="base64">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
AgAAIQAYAAAAAAAAAAAAoIENDwAAYnVnL2Jpbi9jb20vZy9DaGlsZCRCdWlsZGVyLmNsYXNzVVQF
AAMauSVUdXgLAAEEii0AAASIEwAAUEsBAh4DFAAAAAgArGA6RR+VGo9LAQAAUQIAACAAGAAAAAAA
AAAAAKCBxxAAAGJ1Zy9iaW4vY29tL2cvQmFzZSRCdWlsZGVyLmNsYXNzVVQFAAPzuCVUdXgLAAEE
ii0AAASIEwAAUEsBAh4DFAAAAAgAwWA6RcFdbPPqAAAAPgEAABkAGAAAAAAAAAAAAKCBbBIAAGJ1
Zy9iaW4vY29tL2cvQ2hpbGQuY2xhc3NVVAUAAxq5JVR1eAsAAQSKLQAABIgTAABQSwECHgMUAAAA
CACsYDpFQXHS4OkAAAA6AQAAGAAYAAAAAAAAAAAAoIGpEwAAYnVnL2Jpbi9jb20vZy9CYXNlLmNs
YXNzVVQFAAPzuCVUdXgLAAEEii0AAASIEwAAUEsBAh4DCgAAAAAAC1U6RQAAAAAAAAAAAAAAAA4A
GAAAAAAAAAAQAOhB5BQAAGJ1Zy8uc2V0dGluZ3MvVVQFAAMFpSVUdXgLAAEEii0AAASIEwAAUEsB
Ah4DFAAAAAgAC1U6RXoAQHy8AAAASwIAACgAGAAAAAAAAQAAAKCBLBUAAGJ1Zy8uc2V0dGluZ3Mv
b3JnLmVjbGlwc2UuamR0LmNvcmUucHJlZnNVVAUAAwWlJVR1eAsAAQSKLQAABIgTAABQSwUGAAAA
ABgAGABpCAAAShYAAAAA
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>251815</attachid>
            <date>2015-03-22 23:44:00 -0400</date>
            <delta_ts>2015-04-06 06:33:09 -0400</delta_ts>
            <desc>Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>4248</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0dlbmVyaWNzUmVncmVz
c2lvblRlc3RfMV84LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9HZW5lcmlj
c1JlZ3Jlc3Npb25UZXN0XzFfOC5qYXZhCmluZGV4IDY5OTY4M2YuLjkwZjIxYjIgMTAwNjQ0Ci0t
LSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0dlbmVyaWNzUmVncmVzc2lvblRlc3Rf
MV84LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vR2VuZXJpY3NSZWdy
ZXNzaW9uVGVzdF8xXzguamF2YQpAQCAtNTEwNiw0ICs1MTA2LDgwIEBAIHB1YmxpYyB2b2lkIHRl
c3RCdWc0NTU5NDUoKSB7CiAJCQkifVxuIgogCQl9KTsKIH0KKy8vIGh0dHBzOi8vYnVncy5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00NDUyMzEsIFtjb21waWxlcl0gSWxsZWdhbEFj
Y2Vzc0Vycm9yIHJ1bm5pbmcgRWNsaXBzZS1jb21waWxlZCBjbGFzcworcHVibGljIHZvaWQgdGVz
dEJ1ZzQ0NTIzMSgpIHsKKwlydW5Db25mb3JtVGVzdCgKKwkJdHJ1ZSwKKwkJbmV3IFN0cmluZ1td
IHsKKwkJImNvbS9uL0J1Zy5qYXZhIiwKKwkJInBhY2thZ2UgY29tLm47XG4iICsKKwkJInB1Ymxp
YyBjbGFzcyBCdWcge1xuIiArCisJCSIgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1td
IGFyZ3MpIHtcbiIgKworCQkiICAgIHRyeSB7XG4iICsKKwkJIiAgICAgIG5ldyBCdWcoKS5nbygp
O1xuIiArCisJCSIgICAgICBTeXN0ZW0uZXJyLnByaW50bG4oXCJPa1wiKTtcbiIgKworCQkiICAg
IH0gY2F0Y2ggKElsbGVnYWxBY2Nlc3NFcnJvciBlKSB7XG4iICsKKwkJIiAgICAgIFN5c3RlbS5l
cnIucHJpbnRsbihcIkVycm9yXCIpO1xuIiArCisJCSIgICAgICBlLnByaW50U3RhY2tUcmFjZSgp
O1xuIiArCisJCSIgICAgfVxuIiArCisJCSIgIH1cbiIgKworCQkiICBwdWJsaWMgdm9pZCBnbygp
IHtcbiIgKworCQkiICAgIENsYXNzPD8+IGNsYXp6ID0gQnVnZ2VyZWQuRm9vLmNsYXNzO1xuIiAr
CisJCSIgICAgU3lzdGVtLmVyci5wcmludGxuKFwiSGVyZSB3ZSBnb1wiKTtcbiIgKworCQkiICAg
IGlmIChjbGF6ei5pc0Fub255bW91c0NsYXNzKCkpIHtcbiIgKworCQkiICAgICAgU3lzdGVtLmVy
ci5wcmludGxuKFwiaXMgYW5vblwiKTtcbiIgKworCQkiICAgIH0gZWxzZSB7XG4iICsKKwkJIiAg
ICAgIFN5c3RlbS5lcnIucHJpbnRsbihcIm5vdCBhbm9uXCIpO1xuIiArCisJCSIgICAgfVxuIiAr
CisJCSIgIH1cbiIgKworCQkifVxuIiwKKwkJImNvbS9nL0Jhc2UuamF2YSIsCisJCSJwYWNrYWdl
IGNvbS5nO1xuIiArCisJCSJjbGFzcyBCYXNlMnt9XG4iICsKKwkJImNsYXNzIEJhc2Uge1xuIiAr
CisJCSIJc3RhdGljIGNsYXNzIEJ1aWxkZXI8QiBleHRlbmRzIEJ1aWxkZXI8Qj4+IHtcbiIgKwor
CQkiCQlwdWJsaWMgQiBzZXRKb2JOYW1lKCkge1xuIiArCisJCSIJCQlyZXR1cm4gbnVsbDtcbiIg
KworCQkiCQl9XG4iICsKKwkJIgkJcHVibGljIEJhc2UyIHNldEpvYk5hbWUyKEIgYikge1xuIiAr
CisJCSIJCQlyZXR1cm4gbnVsbDtcbiIgKworCQkiCQl9XG4iICsKKwkJIgl9XG4iICsKKwkJIiAg
IHN0YXRpYyBjbGFzcyBCdWlsZGVyMiB7XG4iICsKKwkJIiAgICAgICBwdWJsaWMgPEIgZXh0ZW5k
cyBCdWlsZGVyPEI+PiBCIHNldEpvYk5hbWUzKCkge1xuIiArCisJCSIJICAgICAgICByZXR1cm4g
bnVsbDtcbiIgKworCQkiICAgICAgIH1cbiIgKworCQkiICAgIH1cbiIgKworCQkifVxuIiwKKwkJ
ImNvbS9nL0NoaWxkLmphdmEiLAorCQkicGFja2FnZSBjb20uZztcbiIgKworCQkicHVibGljIGZp
bmFsIGNsYXNzIENoaWxkIHtcbiIgKworCQkiICBwdWJsaWMgc3RhdGljIGNsYXNzIEJ1aWxkZXI8
ST4gZXh0ZW5kcyBCYXNlLkJ1aWxkZXI8QnVpbGRlcjxJPj4ge1xuIiArCisJCSIJICBwdWJsaWMg
dm9pZCBzZXREdW1teU5hbWUoKXt9XG4iICsKKwkJIiAgfVxuIiArCisJCSIgIHB1YmxpYyBzdGF0
aWMgY2xhc3MgQnVpbGRlcjIgZXh0ZW5kcyBCYXNlLkJ1aWxkZXIyIHt9XG4iICsKKwkJIn1cbiIs
CisJCSJjb20vbi9CdWdnZXJlZC5qYXZhIiwKKwkJInBhY2thZ2UgY29tLm47XG4iICsKKwkJImlt
cG9ydCBjb20uZy5DaGlsZDtcbiIgKworCQkiY2xhc3MgWnt9XG4iICsKKwkJInB1YmxpYyBmaW5h
bCBjbGFzcyBCdWdnZXJlZCB7XG4iICsKKwkJIiAgcHVibGljIHN0YXRpYyBmaW5hbCBjbGFzcyBG
b28ge31cbiIgKworCQkiICB2b2lkIHVudXNlZCgpIHtcbiIgKworCQkiICAgIENoaWxkLkJ1aWxk
ZXI8Vm9pZD4gYyA9IG5ldyBDaGlsZC5CdWlsZGVyPFZvaWQ+KCk7XG4iICsKKwkJIiAgICBjLnNl
dEpvYk5hbWUoKTtcbiIgKyAvLyBQTUIKKwkJIiAgICBjLnNldEpvYk5hbWUyKG5ldyBDaGlsZC5C
dWlsZGVyPFZvaWQ+KCkpO1xuIiArCisJCSIgICAgQ2hpbGQuQnVpbGRlcjxaPiBjMiA9IG5ldyBD
aGlsZC5CdWlsZGVyPFo+KCk7XG4iICsKKwkJIiAgICBjMi5zZXRKb2JOYW1lKCk7XG4iICsKKwkJ
IiAgICBjMi5zZXRKb2JOYW1lMihuZXcgQ2hpbGQuQnVpbGRlcjxaPigpKTtcbiIgKworCQkiICAg
IENoaWxkLkJ1aWxkZXIyIGMzID0gbmV3IENoaWxkLkJ1aWxkZXIyKCk7XG4iICsKKwkJIiAgICBj
My5zZXRKb2JOYW1lMygpO1xuIiArICAvLyBQR01CCisJCSIgIH1cbiIgKworCQkifVxuIgorCX0s
CisJbnVsbCwgbnVsbCwKKwkiSGVyZSB3ZSBnb1xuIiArCisJIm5vdCBhbm9uXG4iICsKKwkiT2si
LCBudWxsKTsKK30KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTWVzc2FnZVNlbmQuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9hc3QvTWVzc2FnZVNlbmQuamF2YQppbmRleCA2YzJhZGU5Li5hYjcxNTMwIDEwMDY0
NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvYXN0L01lc3NhZ2VTZW5kLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9NZXNz
YWdlU2VuZC5qYXZhCkBAIC00MTksNyArNDE5LDE0IEBAIHB1YmxpYyB2b2lkIGNvbXB1dGVDb252
ZXJzaW9uKFNjb3BlIHNjb3BlLCBUeXBlQmluZGluZyBydW50aW1lVGltZVR5cGUsIFR5cGVCaW5k
CiBwdWJsaWMgdm9pZCBnZW5lcmF0ZUNvZGUoQmxvY2tTY29wZSBjdXJyZW50U2NvcGUsIENvZGVT
dHJlYW0gY29kZVN0cmVhbSwgYm9vbGVhbiB2YWx1ZVJlcXVpcmVkKSB7CiAJaW50IHBjID0gY29k
ZVN0cmVhbS5wb3NpdGlvbjsKIAkvLyBnZW5lcmF0ZSByZWNlaXZlci9lbmNsb3NpbmcgaW5zdGFu
Y2UgYWNjZXNzCi0JTWV0aG9kQmluZGluZyBjb2RlZ2VuQmluZGluZyA9IHRoaXMuYmluZGluZyBp
bnN0YW5jZW9mIFBvbHltb3JwaGljTWV0aG9kQmluZGluZyA/IHRoaXMuYmluZGluZyA6IHRoaXMu
YmluZGluZy5vcmlnaW5hbCgpOworCU1ldGhvZEJpbmRpbmcgY29kZWdlbkJpbmRpbmcgPSBudWxs
OworCWlmICh0aGlzLmJpbmRpbmcuaXNQb2x5bW9ycGhpYygpIHx8CisJCQkodGhpcy5iaW5kaW5n
IGluc3RhbmNlb2YgUGFyYW1ldGVyaXplZE1ldGhvZEJpbmRpbmcgJiYKKwkJCSF0aGlzLmJpbmRp
bmcub3JpZ2luYWwoKS5kZWNsYXJpbmdDbGFzcy5jYW5CZVNlZW5CeShjdXJyZW50U2NvcGUuY29t
cGlsYXRpb25Vbml0U2NvcGUoKS5mUGFja2FnZSkpKSB7CisJCWNvZGVnZW5CaW5kaW5nID0gdGhp
cy5iaW5kaW5nOworCX0gZWxzZSB7CisJCWNvZGVnZW5CaW5kaW5nID0gdGhpcy5iaW5kaW5nLm9y
aWdpbmFsKCk7CisJfQogCWJvb2xlYW4gaXNTdGF0aWMgPSBjb2RlZ2VuQmluZGluZy5pc1N0YXRp
YygpOwogCWlmIChpc1N0YXRpYykgewogCQl0aGlzLnJlY2VpdmVyLmdlbmVyYXRlQ29kZShjdXJy
ZW50U2NvcGUsIGNvZGVTdHJlYW0sIGZhbHNlKTsK
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>252173</attachid>
            <date>2015-04-06 06:33:00 -0400</date>
            <delta_ts>2015-04-09 01:55:26 -0400</delta_ts>
            <desc>Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>4420</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0dlbmVyaWNzUmVncmVz
c2lvblRlc3RfMV84LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9HZW5lcmlj
c1JlZ3Jlc3Npb25UZXN0XzFfOC5qYXZhCmluZGV4IDY5OTY4M2YuLjJlYzY4ZGMgMTAwNjQ0Ci0t
LSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0dlbmVyaWNzUmVncmVzc2lvblRlc3Rf
MV84LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vR2VuZXJpY3NSZWdy
ZXNzaW9uVGVzdF8xXzguamF2YQpAQCAtNTEwNiw0ICs1MTA2LDkwIEBAIHB1YmxpYyB2b2lkIHRl
c3RCdWc0NTU5NDUoKSB7CiAJCQkifVxuIgogCQl9KTsKIH0KKy8vIGh0dHBzOi8vYnVncy5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00NDUyMzEsIFtjb21waWxlcl0gSWxsZWdhbEFj
Y2Vzc0Vycm9yIHJ1bm5pbmcgRWNsaXBzZS1jb21waWxlZCBjbGFzcworcHVibGljIHZvaWQgdGVz
dEJ1ZzQ0NTIzMSgpIHsKKwlydW5Db25mb3JtVGVzdCgKKwkJdHJ1ZSwKKwkJbmV3IFN0cmluZ1td
IHsKKwkJImNvbS9uL0J1Zy5qYXZhIiwKKwkJInBhY2thZ2UgY29tLm47XG4iICsKKwkJInB1Ymxp
YyBjbGFzcyBCdWcge1xuIiArCisJCSIgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1td
IGFyZ3MpIHtcbiIgKworCQkiICAgIHRyeSB7XG4iICsKKwkJIiAgICAgIG5ldyBCdWcoKS5nbygp
O1xuIiArCisJCSIgICAgICBTeXN0ZW0uZXJyLnByaW50bG4oXCJPa1wiKTtcbiIgKworCQkiICAg
IH0gY2F0Y2ggKElsbGVnYWxBY2Nlc3NFcnJvciBlKSB7XG4iICsKKwkJIiAgICAgIFN5c3RlbS5l
cnIucHJpbnRsbihcIkVycm9yXCIpO1xuIiArCisJCSIgICAgICBlLnByaW50U3RhY2tUcmFjZSgp
O1xuIiArCisJCSIgICAgfVxuIiArCisJCSIgIH1cbiIgKworCQkiICBwdWJsaWMgdm9pZCBnbygp
IHtcbiIgKworCQkiICAgIENsYXNzPD8+IGNsYXp6ID0gQnVnZ2VyZWQuRm9vLmNsYXNzO1xuIiAr
CisJCSIgICAgU3lzdGVtLmVyci5wcmludGxuKFwiSGVyZSB3ZSBnb1wiKTtcbiIgKworCQkiICAg
IGlmIChjbGF6ei5pc0Fub255bW91c0NsYXNzKCkpIHtcbiIgKworCQkiICAgICAgU3lzdGVtLmVy
ci5wcmludGxuKFwiaXMgYW5vblwiKTtcbiIgKworCQkiICAgIH0gZWxzZSB7XG4iICsKKwkJIiAg
ICAgIFN5c3RlbS5lcnIucHJpbnRsbihcIm5vdCBhbm9uXCIpO1xuIiArCisJCSIgICAgfVxuIiAr
CisJCSIgIH1cbiIgKworCQkifVxuIiwKKwkJImNvbS9nL0Jhc2UuamF2YSIsCisJCSJwYWNrYWdl
IGNvbS5nO1xuIiArCisJCSJjbGFzcyBCYXNlMnt9XG4iICsKKwkJImNsYXNzIEJhc2Uge1xuIiAr
CisJCSIJc3RhdGljIGNsYXNzIEJ1aWxkZXI8QiBleHRlbmRzIEJ1aWxkZXI8Qj4+IHtcbiIgKwor
CQkiCQlwdWJsaWMgQiBzZXRKb2JOYW1lKCkge1xuIiArCisJCSIJCQlyZXR1cm4gbnVsbDtcbiIg
KworCQkiCQl9XG4iICsKKwkJIgkJcHVibGljIEJhc2UyIHNldEpvYk5hbWUyKEIgYikge1xuIiAr
CisJCSIJCQlyZXR1cm4gbnVsbDtcbiIgKworCQkiCQl9XG4iICsKKwkJIgl9XG4iICsKKwkJIiAg
IHN0YXRpYyBjbGFzcyBCdWlsZGVyMiB7XG4iICsKKwkJIiAgICAgICBwdWJsaWMgPEIgZXh0ZW5k
cyBCdWlsZGVyPEI+PiBCIHNldEpvYk5hbWUzKCkge1xuIiArCisJCSIJICAgICAgICByZXR1cm4g
bnVsbDtcbiIgKworCQkiICAgICAgIH1cbiIgKworCQkiICAgIH1cbiIgKworCQkiCXN0YXRpYyBj
bGFzcyBSIHt9XG4iICsKKwkJIglwdWJsaWMgc3RhdGljIGNsYXNzIEJ1aWxkZXIzPEIgZXh0ZW5k
cyBSPiB7XG4iICsKKwkJIgkJcHVibGljIEIgc2V0Sm9iTmFtZSgpIHtcbiIgKworCQkiCQkJcmV0
dXJuIG51bGw7XG4iICsKKwkJIgkJfVxuIiArCisJCSIJfVxuIiArCisJCSJ9XG4iLAorCQkiY29t
L2cvQ2hpbGQuamF2YSIsCisJCSJwYWNrYWdlIGNvbS5nO1xuIiArCisJCSJpbXBvcnQgY29tLmcu
QmFzZS5SO1xuIiArCisJCSJwdWJsaWMgZmluYWwgY2xhc3MgQ2hpbGQge1xuIiArCisJCSIgIHB1
YmxpYyBzdGF0aWMgY2xhc3MgQnVpbGRlcjxJPiBleHRlbmRzIEJhc2UuQnVpbGRlcjxCdWlsZGVy
PEk+PiB7XG4iICsKKwkJIgkgIHB1YmxpYyB2b2lkIHNldER1bW15TmFtZSgpe31cbiIgKworCQki
ICB9XG4iICsKKwkJIiAgcHVibGljIHN0YXRpYyBjbGFzcyBCdWlsZGVyMiBleHRlbmRzIEJhc2Uu
QnVpbGRlcjIge31cbiIgKworCQkiICBwdWJsaWMgc3RhdGljIGNsYXNzIEJ1aWxkZXIzPEk+IGV4
dGVuZHMgIEJhc2UuQnVpbGRlcjM8Uj4ge31cbiIgKworCQkifVxuIiwKKwkJImNvbS9uL0J1Z2dl
cmVkLmphdmEiLAorCQkicGFja2FnZSBjb20ubjtcbiIgKworCQkiaW1wb3J0IGNvbS5nLkNoaWxk
O1xuIiArCisJCSJjbGFzcyBae31cbiIgKworCQkicHVibGljIGZpbmFsIGNsYXNzIEJ1Z2dlcmVk
IHtcbiIgKworCQkiICBwdWJsaWMgc3RhdGljIGZpbmFsIGNsYXNzIEZvbyB7fVxuIiArCisJCSIg
IHZvaWQgdW51c2VkKCkge1xuIiArCisJCSIgICAgQ2hpbGQuQnVpbGRlcjxWb2lkPiBjID0gbmV3
IENoaWxkLkJ1aWxkZXI8Vm9pZD4oKTtcbiIgKworCQkiICAgIGMuc2V0Sm9iTmFtZSgpO1xuIiAr
CisJCSIgICAgYy5zZXRKb2JOYW1lMihuZXcgQ2hpbGQuQnVpbGRlcjxWb2lkPigpKTtcbiIgKwor
CQkiICAgIENoaWxkLkJ1aWxkZXI8Wj4gYzIgPSBuZXcgQ2hpbGQuQnVpbGRlcjxaPigpO1xuIiAr
CisJCSIgICAgYzIuc2V0Sm9iTmFtZSgpO1xuIiArCisJCSIgICAgYzIuc2V0Sm9iTmFtZTIobmV3
IENoaWxkLkJ1aWxkZXI8Wj4oKSk7XG4iICsKKwkJIiAgICBDaGlsZC5CdWlsZGVyMiBjMyA9IG5l
dyBDaGlsZC5CdWlsZGVyMigpO1xuIiArCisJCSIgICAgYzMuc2V0Sm9iTmFtZTMoKTtcbiIgKwor
CQkiICAgIENoaWxkLkJ1aWxkZXIzPFZvaWQ+IGM0ID0gbmV3IENoaWxkLkJ1aWxkZXIzPFZvaWQ+
KCk7XG4iICsKKwkJIiAgICBjNC5zZXRKb2JOYW1lKCk7XG4iICsKKwkJIiAgfVxuIiArCisJCSJ9
XG4iCisJfSwKKwludWxsLCBudWxsLAorCSJIZXJlIHdlIGdvXG4iICsKKwkibm90IGFub25cbiIg
KworCSJPayIsIG51bGwpOworfQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3V0aWwvVXRpbC5qYXZh
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL3V0aWwvVXRpbC5qYXZhCmluZGV4IDY1ZjU1ZWQuLmI5NWRiM2EgMTAwNjQ0Ci0t
LSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci91dGlsL1V0aWwuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvdXRpbC9VdGlsLmphdmEKQEAg
LTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAy
MDAwLCAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAy
MDAwLCAyMDE1IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNl
cnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJl
IG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGlj
ZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlz
IGF2YWlsYWJsZSBhdApAQCAtMTA2OSw3ICsxMDY5LDggQEAgcHVibGljIGNsYXNzIFV0aWwgaW1w
bGVtZW50cyBTdWZmaXhDb25zdGFudHMgewogCQkJCX0KIAkJCX0KIAkJfSBlbHNlIGlmICh0eXBl
QmluZGluZy5pc05lc3RlZFR5cGUoKSkgewotCQkJY2xhc3NGaWxlLnJlY29yZElubmVyQ2xhc3Nl
cyh0eXBlQmluZGluZyk7CisJCQlpZiAodHlwZUJpbmRpbmcuY2FuQmVTZWVuQnkoY2xhc3NGaWxl
LnJlZmVyZW5jZUJpbmRpbmcuc2NvcGUpKQorCQkJCWNsYXNzRmlsZS5yZWNvcmRJbm5lckNsYXNz
ZXModHlwZUJpbmRpbmcpOwogCQl9CiAJfQogCS8qCg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>252248</attachid>
            <date>2015-04-09 01:55:00 -0400</date>
            <delta_ts>2015-04-13 20:38:08 -0400</delta_ts>
            <desc>WIP : Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>4949</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0dlbmVyaWNzUmVncmVz
c2lvblRlc3RfMV84LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9HZW5lcmlj
c1JlZ3Jlc3Npb25UZXN0XzFfOC5qYXZhCmluZGV4IDY5OTY4M2YuLjBmZjAzMGUgMTAwNjQ0Ci0t
LSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0dlbmVyaWNzUmVncmVzc2lvblRlc3Rf
MV84LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vR2VuZXJpY3NSZWdy
ZXNzaW9uVGVzdF8xXzguamF2YQpAQCAtNTEwNiw0ICs1MTA2LDk4IEBAIHB1YmxpYyB2b2lkIHRl
c3RCdWc0NTU5NDUoKSB7CiAJCQkifVxuIgogCQl9KTsKIH0KKy8vIGh0dHBzOi8vYnVncy5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00NDUyMzEsIFtjb21waWxlcl0gSWxsZWdhbEFj
Y2Vzc0Vycm9yIHJ1bm5pbmcgRWNsaXBzZS1jb21waWxlZCBjbGFzcworcHVibGljIHZvaWQgdGVz
dEJ1ZzQ0NTIzMSgpIHsKKwlydW5Db25mb3JtVGVzdCgKKwkJdHJ1ZSwKKwkJbmV3IFN0cmluZ1td
IHsKKwkJImNvbS9uL0J1Zy5qYXZhIiwKKwkJInBhY2thZ2UgY29tLm47XG4iICsKKwkJInB1Ymxp
YyBjbGFzcyBCdWcge1xuIiArCisJCSIgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1td
IGFyZ3MpIHtcbiIgKworCQkiICAgIHRyeSB7XG4iICsKKwkJIiAgICAgIG5ldyBCdWcoKS5nbygp
O1xuIiArCisJCSIgICAgICBTeXN0ZW0uZXJyLnByaW50bG4oXCJPa1wiKTtcbiIgKworCQkiICAg
IH0gY2F0Y2ggKElsbGVnYWxBY2Nlc3NFcnJvciBlKSB7XG4iICsKKwkJIiAgICAgIFN5c3RlbS5l
cnIucHJpbnRsbihcIkVycm9yXCIpO1xuIiArCisJCSIgICAgICBlLnByaW50U3RhY2tUcmFjZSgp
O1xuIiArCisJCSIgICAgfVxuIiArCisJCSIgIH1cbiIgKworCQkiICBwdWJsaWMgdm9pZCBnbygp
IHtcbiIgKworCQkiICAgIENsYXNzPD8+IGNsYXp6ID0gQnVnZ2VyZWQuRm9vLmNsYXNzO1xuIiAr
CisJCSIgICAgU3lzdGVtLmVyci5wcmludGxuKFwiSGVyZSB3ZSBnb1wiKTtcbiIgKworCQkiICAg
IGlmIChjbGF6ei5pc0Fub255bW91c0NsYXNzKCkpIHtcbiIgKworCQkiICAgICAgU3lzdGVtLmVy
ci5wcmludGxuKFwiaXMgYW5vblwiKTtcbiIgKworCQkiICAgIH0gZWxzZSB7XG4iICsKKwkJIiAg
ICAgIFN5c3RlbS5lcnIucHJpbnRsbihcIm5vdCBhbm9uXCIpO1xuIiArCisJCSIgICAgfVxuIiAr
CisJCSIgIH1cbiIgKworCQkifVxuIiwKKwkJImNvbS9nL0Jhc2UuamF2YSIsCisJCSJwYWNrYWdl
IGNvbS5nO1xuIiArCisJCSJjbGFzcyBCYXNlMnt9XG4iICsKKwkJImNsYXNzIEJhc2Uge1xuIiAr
CisJCSIJc3RhdGljIGNsYXNzIEJ1aWxkZXI8QiBleHRlbmRzIEJ1aWxkZXI8Qj4+IHtcbiIgKwor
CQkiCQlwdWJsaWMgQiBzZXRKb2JOYW1lKCkge1xuIiArCisJCSIJCQlyZXR1cm4gbnVsbDtcbiIg
KworCQkiCQl9XG4iICsKKwkJIgkJcHVibGljIEJhc2UyIHNldEpvYk5hbWUyKEIgYikge1xuIiAr
CisJCSIJCQlyZXR1cm4gbnVsbDtcbiIgKworCQkiCQl9XG4iICsKKwkJIgl9XG4iICsKKwkJIiAg
IHN0YXRpYyBjbGFzcyBCdWlsZGVyMiB7XG4iICsKKwkJIiAgICAgICBwdWJsaWMgPEIgZXh0ZW5k
cyBCdWlsZGVyPEI+PiBCIHNldEpvYk5hbWUzKCkge1xuIiArCisJCSIJICAgICAgICByZXR1cm4g
bnVsbDtcbiIgKworCQkiICAgICAgIH1cbiIgKworCQkiICAgfVxuIiArCisJCSIJc3RhdGljIGNs
YXNzIFIge31cbiIgKworCQkiCXB1YmxpYyBzdGF0aWMgY2xhc3MgQnVpbGRlcjM8QiBleHRlbmRz
IFI+IHtcbiIgKworCQkiCQlwdWJsaWMgQiBzZXRKb2JOYW1lKCkge1xuIiArCisJCSIJCQlyZXR1
cm4gbnVsbDtcbiIgKworCQkiCQl9XG4iICsKKwkJIgl9XG4iICsKKwkJIglwdWJsaWMgc3RhdGlj
IGNsYXNzIEJ1aWxkZXI0PEIgZXh0ZW5kcyBSPiB7XG4iICsKKwkJIgkJcHVibGljIDxRIGV4dGVu
ZHMgUj4gQnVpbGRlcjM8UT4gc2V0Sm9iTmFtZSgpIHtcbiIgKworCQkiCQkJcmV0dXJuIG51bGw7
XG4iICsKKwkJIgkJfVxuIiArCisJCSIJfVxuIiArCisJCSJ9XG4iLAorCQkiY29tL2cvQ2hpbGQu
amF2YSIsCisJCSJwYWNrYWdlIGNvbS5nO1xuIiArCisJCSJpbXBvcnQgY29tLmcuQmFzZS5SO1xu
IiArCisJCSJwdWJsaWMgZmluYWwgY2xhc3MgQ2hpbGQge1xuIiArCisJCSIgIHB1YmxpYyBzdGF0
aWMgY2xhc3MgQnVpbGRlcjxJPiBleHRlbmRzIEJhc2UuQnVpbGRlcjxCdWlsZGVyPEk+PiB7XG4i
ICsKKwkJIgkgIHB1YmxpYyB2b2lkIHNldER1bW15TmFtZSgpe31cbiIgKworCQkiICB9XG4iICsK
KwkJIiAgcHVibGljIHN0YXRpYyBjbGFzcyBCdWlsZGVyMiBleHRlbmRzIEJhc2UuQnVpbGRlcjIg
e31cbiIgKworCQkiICBwdWJsaWMgc3RhdGljIGNsYXNzIEJ1aWxkZXIzPEk+IGV4dGVuZHMgIEJh
c2UuQnVpbGRlcjM8Uj4ge31cbiIgKworCQkiICBwdWJsaWMgc3RhdGljIGNsYXNzIEJ1aWxkZXI0
PEk+IGV4dGVuZHMgIEJhc2UuQnVpbGRlcjQ8Uj4ge31cbiIgKworCQkifVxuIiwKKwkJImNvbS9u
L0J1Z2dlcmVkLmphdmEiLAorCQkicGFja2FnZSBjb20ubjtcbiIgKworCQkiaW1wb3J0IGNvbS5n
LkNoaWxkO1xuIiArCisJCSJjbGFzcyBae31cbiIgKworCQkicHVibGljIGZpbmFsIGNsYXNzIEJ1
Z2dlcmVkIHtcbiIgKworCQkiICBwdWJsaWMgc3RhdGljIGZpbmFsIGNsYXNzIEZvbyB7fVxuIiAr
CisJCSIgIHZvaWQgdW51c2VkKCkge1xuIiArCisJCSIgICAgQ2hpbGQuQnVpbGRlcjxWb2lkPiBj
ID0gbmV3IENoaWxkLkJ1aWxkZXI8Vm9pZD4oKTtcbiIgKworCQkiICAgIGMuc2V0Sm9iTmFtZSgp
O1xuIiArCisJCSIgICAgYy5zZXRKb2JOYW1lMihuZXcgQ2hpbGQuQnVpbGRlcjxWb2lkPigpKTtc
biIgKworCQkiICAgIENoaWxkLkJ1aWxkZXI8Wj4gY2IgPSBuZXcgQ2hpbGQuQnVpbGRlcjxaPigp
O1xuIiArCisJCSIgICAgY2Iuc2V0Sm9iTmFtZSgpO1xuIiArCisJCSIgICAgY2Iuc2V0Sm9iTmFt
ZTIobmV3IENoaWxkLkJ1aWxkZXI8Wj4oKSk7XG4iICsKKwkJIiAgICBDaGlsZC5CdWlsZGVyMiBj
YjIgPSBuZXcgQ2hpbGQuQnVpbGRlcjIoKTtcbiIgKworCQkiICAgIGNiMi5zZXRKb2JOYW1lMygp
O1xuIiArCisJCSIgICAgQ2hpbGQuQnVpbGRlcjM8Vm9pZD4gY2IzID0gbmV3IENoaWxkLkJ1aWxk
ZXIzPFZvaWQ+KCk7XG4iICsKKwkJIiAgICBjYjMuc2V0Sm9iTmFtZSgpO1xuIiArCisJCSIgICAg
Q2hpbGQuQnVpbGRlcjQ8Vm9pZD4gY2I0ID0gbmV3IENoaWxkLkJ1aWxkZXI0PFZvaWQ+KCk7XG4i
ICsKKwkJIiAgICBjYjQuc2V0Sm9iTmFtZSgpO1xuIiArCisJCSIgIH1cbiIgKworCQkifVxuIgor
CX0sCisJbnVsbCwgbnVsbCwKKwkiSGVyZSB3ZSBnb1xuIiArCisJIm5vdCBhbm9uXG4iICsKKwki
T2siLCBudWxsKTsKK30KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci91dGlsL1V0aWwuamF2YSBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci91dGlsL1V0aWwuamF2YQppbmRleCA2NWY1NWVkLi41OTdhMDcwIDEwMDY0NAotLS0gYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvdXRpbC9VdGlsLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3V0aWwvVXRpbC5qYXZhCkBAIC0xLDUg
KzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwg
MjAxNCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwg
MjAxNSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQu
IFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRl
IGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2Ug
djEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFp
bGFibGUgYXQKQEAgLTEwNjksNyArMTA2OSwxNCBAQCBwdWJsaWMgY2xhc3MgVXRpbCBpbXBsZW1l
bnRzIFN1ZmZpeENvbnN0YW50cyB7CiAJCQkJfQogCQkJfQogCQl9IGVsc2UgaWYgKHR5cGVCaW5k
aW5nLmlzTmVzdGVkVHlwZSgpKSB7Ci0JCQljbGFzc0ZpbGUucmVjb3JkSW5uZXJDbGFzc2VzKHR5
cGVCaW5kaW5nKTsKKwkJCVR5cGVCaW5kaW5nIGVuY2xvc2luZ1R5cGUgPSB0eXBlQmluZGluZzsK
KwkJCWRvIHsKKwkJCQlpZiAoIWVuY2xvc2luZ1R5cGUuY2FuQmVTZWVuQnkoY2xhc3NGaWxlLnJl
ZmVyZW5jZUJpbmRpbmcuc2NvcGUpKQorCQkJCQlicmVhazsKKwkJCQllbmNsb3NpbmdUeXBlID0g
ZW5jbG9zaW5nVHlwZS5lbmNsb3NpbmdUeXBlKCk7CisJCQl9IHdoaWxlIChlbmNsb3NpbmdUeXBl
ICE9IG51bGwpOworCQkJaWYgKGVuY2xvc2luZ1R5cGUgPT0gbnVsbCkKKwkJCQljbGFzc0ZpbGUu
cmVjb3JkSW5uZXJDbGFzc2VzKHR5cGVCaW5kaW5nKTsKIAkJfQogCX0KIAkvKgo=
</data>

          </attachment>
      

    </bug>

</bugzilla>