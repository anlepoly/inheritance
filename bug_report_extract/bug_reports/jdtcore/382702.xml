<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>382702</bug_id>
          
          <creation_ts>2012-06-15 03:40:00 -0400</creation_ts>
          <short_desc>[1.8][compiler] Lambda expressions should be rejected in disallowed contexts.</short_desc>
          <delta_ts>2013-02-05 19:56:54 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.8</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>382701</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>amj87.iitr</cc>
    
    <cc>anchakrk</cc>
    
    <cc>jesper</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2124720</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-06-15 03:40:39 -0400</bug_when>
    <thetext>BETA_JAVA8.

The following program uses lambda expressions, method references and
constructor references in syntactically allowed, but semantically
illegal locations. All these uses should be rejected and at the 
moment they are not.

From proposed amends to JLS 15.27:

&quot;It is a compile-time error if a lambda expression occurs in a program in 
someplace other than an assignment context (5.2), an invocation context 
(5.3), or a casting context (5.5).&quot;

// ------------------- 8&lt; -------------------
public class X {
  public static void main(String[] args) {
    System.out.println(&quot;Lambda in illegal context: &quot; + () -&gt; &quot;Illegal Lambda&quot;);
    System.out.println(&quot;Method Reference in illegal context: &quot; + System::exit);
    System.out.println(&quot;Constructor Reference in illegal context: &quot; + X::new);
  }
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2138178</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-07-17 14:50:26 -0400</bug_when>
    <thetext>In bug 380194 comment 77 ff. we were discussing how to report this error
  I i = X::foo::bar;
        ^^^^^^

From the context rule we should perhaps say s.t. like
  &quot;Method reference is not allowed here, legal contexts are assignment, ...&quot;
I hold that this is not very clear for users.

Not sure if I&apos;m suggesting a special message for illegally nested method references, maybe?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2205477</commentid>
    <comment_count>2</comment_count>
      <attachid>225889</attachid>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-01-21 09:56:57 -0500</bug_when>
    <thetext>Created attachment 225889
A few test cases for this, both negative and positive

These tests will also require the patch, and my earlier patches for bug 382701 and others.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2205482</commentid>
    <comment_count>3</comment_count>
      <attachid>225890</attachid>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-01-21 10:00:22 -0500</bug_when>
    <thetext>Created attachment 225890
Patch which adds the context check

... and also unifies the LambdaExpression and ReferenceExpression under a common base class FunctionalLiteral.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2208246</commentid>
    <comment_count>4</comment_count>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-01-27 06:26:25 -0500</bug_when>
    <thetext>In Gerrit:

https://git.eclipse.org/r/#/c/9915/</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2208247</commentid>
    <comment_count>5</comment_count>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-01-27 06:27:45 -0500</bug_when>
    <thetext>In Gerrit - also:

https://git.eclipse.org/r/#/c/9916/
https://git.eclipse.org/r/#/c/9917/

Next time, I&apos;ll make sure to amend the commits for easier review. Sorry (Git n00b)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2212702</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-02-05 19:56:09 -0500</bug_when>
    <thetext>(In reply to comment #2)
&gt; Created attachment 225889 [details]
&gt; A few test cases for this, both negative and positive

Commented out a couple that are still failing due to lack of context
propagation support in casts and conditionals (see bug 399778) - Thanks
Jesper.

Released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=852fc464e158b12302acdd8c591e32fe926a3a37</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="0"
              isprivate="0"
          >
            <attachid>225889</attachid>
            <date>2013-01-21 09:56:00 -0500</date>
            <delta_ts>2013-02-05 19:56:35 -0500</delta_ts>
            <desc>A few test cases for this, both negative and positive</desc>
            <filename>file_382702.txt</filename>
            <type>text/plain</type>
            <size>5390</size>
            <attacher name="Jesper Moller">jesper</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUu
dGVzdHMuY29tcGlsZXINCmRpZmYgLS1naXQgc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L2NvbXBpbGVyL3JlZ3Jlc3Npb24vQ29tcGlsZXJJbnZvY2F0aW9uVGVzdHMuamF2YSBzcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Db21waWxlckludm9j
YXRpb25UZXN0cy5qYXZhDQppbmRleCA2ODQwYjk3Li4yYTM2ZmU5IDEwMDY0NA0KLS0tIHNyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0NvbXBpbGVySW52
b2NhdGlvblRlc3RzLmphdmENCisrKyBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29t
cGlsZXIvcmVncmVzc2lvbi9Db21waWxlckludm9jYXRpb25UZXN0cy5qYXZhDQpAQCAtNDk4LDYg
KzQ5OCw3IEBADQogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiSWxsZWdhbEFubm90
YXRpb25Gb3JCYXNlVHlwZSIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2Js
ZW0uQ0FUX1RZUEUpKTsNCiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJJbGxlZ2Fs
Q2FzdCIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX1RZUEUp
KTsNCiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJJbGxlZ2FsQ2xhc3NMaXRlcmFs
Rm9yVHlwZVZhcmlhYmxlIiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKENhdGVnb3JpemVkUHJvYmxl
bS5DQVRfVFlQRSkpOw0KKwkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIklsbGVnYWxD
b250ZXh0Rm9yRnVuY3Rpb25hbEV4cHJlc3Npb24iLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoQ2F0
ZWdvcml6ZWRQcm9ibGVtLkNBVF9UWVBFKSk7DQogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVz
LnB1dCgiSWxsZWdhbERlY2xhcmF0aW9uT2ZUaGlzUGFyYW1ldGVyIiwgbmV3IFByb2JsZW1BdHRy
aWJ1dGVzKENhdGVnb3JpemVkUHJvYmxlbS5DQVRfU1lOVEFYKSk7DQogCQlleHBlY3RlZFByb2Js
ZW1BdHRyaWJ1dGVzLnB1dCgiSWxsZWdhbERlZmluaXRpb25Ub05vbk51bGxQYXJhbWV0ZXIiLCBu
ZXcgUHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVtLkNBVF9QT1RFTlRJQUxfUFJP
R1JBTU1JTkdfUFJPQkxFTSkpOw0KIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkls
bGVnYWxEaW1lbnNpb24iLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVt
LkNBVF9JTlRFUk5BTCkpOw0KQEAgLTg3Niw2ICs4NzcsNyBAQA0KIAkJZXhwZWN0ZWRQcm9ibGVt
QXR0cmlidXRlcy5wdXQoIlN1cGVyZmx1b3VzU2VtaWNvbG9uIiwgbmV3IFByb2JsZW1BdHRyaWJ1
dGVzKENhdGVnb3JpemVkUHJvYmxlbS5DQVRfUE9URU5USUFMX1BST0dSQU1NSU5HX1BST0JMRU0p
KTsNCiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJTd2l0Y2hPbkVudW1Ob3RCZWxv
dzE1IiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKENhdGVnb3JpemVkUHJvYmxlbS5DQVRfVFlQRSkp
Ow0KIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIlN3aXRjaE9uU3RyaW5nc05vdEJl
bG93MTciLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVtLkNBVF9UWVBF
KSk7DQorCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiVGFyZ2V0VHlwZUlzTm90QUZ1
bmN0aW9uYWxJbnRlcmZhY2UiLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQcm9i
bGVtLkNBVF9UWVBFKSk7DQogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiVGFzayIs
IG5ldyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX0lOVEVSTkFMKSk7
DQogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiVGhpc0luU3RhdGljQ29udGV4dCIs
IG5ldyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX0lOVEVSTkFMKSk7
DQogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiVGhpc1N1cGVyRHVyaW5nQ29uc3Ry
dWN0b3JJbnZvY2F0aW9uIiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKENhdGVnb3JpemVkUHJvYmxl
bS5DQVRfTUVNQkVSKSk7DQpkaWZmIC0tZ2l0IHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9jb21waWxlci9yZWdyZXNzaW9uL05lZ2F0aXZlTGFtYmRhRXhwcmVzc2lvbnNUZXN0LmphdmEg
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTmVnYXRp
dmVMYW1iZGFFeHByZXNzaW9uc1Rlc3QuamF2YQ0KaW5kZXggZGE0M2Q0ZS4uYjZlZTQ5NCAxMDA2
NDQNCi0tLSBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lv
bi9OZWdhdGl2ZUxhbWJkYUV4cHJlc3Npb25zVGVzdC5qYXZhDQorKysgc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTmVnYXRpdmVMYW1iZGFFeHByZXNz
aW9uc1Rlc3QuamF2YQ0KQEAgLTE4MSw3ICsxODEsNyBAQA0KIAkJCQkJInB1YmxpYyBjbGFzcyBY
IHtcbiIgKw0KIAkJCQkJIiAgICB2b2lkIGZvbygpIHtcbiIgKw0KIAkJCQkJIiAgICAgICAgICAg
IEkgdDEgPSBmIC0+IHt7fTtcbiIgKw0KLQkJCQkJIiAgICAgICAgICAgIEkgdDIgPSAoKSAtPiA0
MjtcbiIgKw0KKwkJCQkJIiAgICAgICAgICAgIEkgdDIgPSAoeCkgLT4gNDI7XG4iICsNCiAJCQkJ
CSIgICAgICAgIH0gXG4iICsNCiAJCQkJCSIgICAgICAgIH1cbiIgKw0KIAkJCQkJIn1cbiIsDQpA
QCAtMjUwLDcgKzI1MCw3IEBADQogfQ0KIA0KIC8vaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1
Z3Mvc2hvd19idWcuY2dpP2lkPTM4MTEyMSwgIFtdIHNob3VsZCBiZSBhY2NlcHRlZCBpbiByZWZl
cmVuY2UgZXhwcmVzc2lvbnMuDQotcHVibGljIHZvaWQgdGVzdDAxMEEoKSB7IC8vIGF3YWl0cyBp
bXBsZW1lbnRhdGlvbiBvZiByZXNvbHV0aW9uIG9mIHRhcmdldCB0eXBlcyBiZWZvcmUgcmV0dXJu
IGNhbiBiZSBjaGVja2VkDQorcHVibGljIHZvaWQgdGVzdDAxMEEoKSB7DQogCXRoaXMucnVuTmVn
YXRpdmVUZXN0KA0KIAkJCW5ldyBTdHJpbmdbXSB7DQogCQkJCQkiWC5qYXZhIiwNCkBAIC00MDYs
NiArNDA2LDQzIEBADQogCQkJIi0tLS0tLS0tLS1cbiIpOw0KIH0NCiANCisvL2h0dHBzOi8vYnVn
cy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zODI3MDIgLSBbMS44XVtjb21waWxl
cl0gTGFtYmRhIGV4cHJlc3Npb25zIHNob3VsZCBiZSByZWplY3RlZCBpbiBkaXNhbGxvd2VkIGNv
bnRleHRzDQorcHVibGljIHZvaWQgdGVzdDAxNCgpIHsNCisJdGhpcy5ydW5OZWdhdGl2ZVRlc3Qo
DQorCQkJbmV3IFN0cmluZ1tdIHsNCisJCQkiWC5qYXZhIiwNCisJCQkiaW50ZXJmYWNlIEkge1xy
XG4iICsgDQorCQkJIiAgaW50IGZvbzEoU3RyaW5nIHgpO1xyXG4iICsgDQorCQkJIn1cclxuIiAr
IA0KKwkJCSJwdWJsaWMgY2xhc3MgWCB7XHJcbiIgKyANCisJCQkiICBwdWJsaWMgc3RhdGljIHZv
aWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XHJcbiIgKw0KKwkJCSIgICAgU3lzdGVtLm91dC5wcmlu
dGxuKFwiTGFtYmRhIGluIGlsbGVnYWwgY29udGV4dDogXCIgKyAoKCkgLT4gXCJJbGxlZ2FsIExh
bWJkYVwiKSk7XHJcbiIgKw0KKwkJCSIgICAgU3lzdGVtLm91dC5wcmludGxuKFwiTWV0aG9kIFJl
ZmVyZW5jZSBpbiBpbGxlZ2FsIGNvbnRleHQ6IFwiICsgU3lzdGVtOjpleGl0KTtcclxuIiArDQor
CQkJIiAgICBTeXN0ZW0ub3V0LnByaW50bG4oXCJDb25zdHJ1Y3RvciBSZWZlcmVuY2UgaW4gaWxs
ZWdhbCBjb250ZXh0OiBcIiArIFN0cmluZzo6bmV3KTtcclxuIiArDQorCQkJIiAgICBJIHNhbTEg
PSAoeCkgLT4geC5sZW5ndGgoKTsgLy8gT0tcclxuIiArDQorCQkJIiAgICBJIHNhbTIgPSAoKFN0
cmluZzo6bGVuZ3RoKSk7IC8vIE9LXHJcbiIgKw0KKwkJCSIgICAgSSBzYW0zID0gKE1hdGgucmFu
ZG9tKCkgPiAwLjUpID8gU3RyaW5nOjpsZW5ndGggOiBTdHJpbmc6Omhhc2hDb2RlOyAvLyBPS1xy
XG4iICsNCisJCQkiICAgIEkgc2FtNCA9IChJKShTdHJpbmc6Omxlbmd0aCk7IC8vIE9LXHJcbiIg
Kw0KKwkJCSIgIH1cclxuIiArIA0KKwkJCSJ9In0sDQorCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJ
CQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDYpXG4iICsgDQorCQkJIglTeXN0ZW0ub3V0
LnByaW50bG4oXCJMYW1iZGEgaW4gaWxsZWdhbCBjb250ZXh0OiBcIiArICgoKSAtPiBcIklsbGVn
YWwgTGFtYmRhXCIpKTtcbiIgKyANCisJCQkiCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgIF5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXlxuIiArIA0KKwkJ
CSJGdW5jdGlvbmFsIGV4cHJlc3Npb25zIG1heSBub3QgYmUgdXNlZCBoZXJlIChvbmx5IGFsbG93
ZWQgaW4gYXNzaWdubWVudHMsIGNhc3RzLCBhbmQgYXMgcGFyYW1ldGVycylcbiIgKyANCisJCQki
LS0tLS0tLS0tLVxuIiArIA0KKwkJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNylcbiIg
KyANCisJCQkiCVN5c3RlbS5vdXQucHJpbnRsbihcIk1ldGhvZCBSZWZlcmVuY2UgaW4gaWxsZWdh
bCBjb250ZXh0OiBcIiArIFN5c3RlbTo6ZXhpdCk7XG4iICsgDQorCQkJIgkgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXl5eXl5eXl5e
Xl5eXG4iICsgDQorCQkJIkZ1bmN0aW9uYWwgZXhwcmVzc2lvbnMgbWF5IG5vdCBiZSB1c2VkIGhl
cmUgKG9ubHkgYWxsb3dlZCBpbiBhc3NpZ25tZW50cywgY2FzdHMsIGFuZCBhcyBwYXJhbWV0ZXJz
KVxuIiArIA0KKwkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJIjMuIEVSUk9SIGluIFguamF2YSAo
YXQgbGluZSA4KVxuIiArIA0KKwkJCSIJU3lzdGVtLm91dC5wcmludGxuKFwiQ29uc3RydWN0b3Ig
UmVmZXJlbmNlIGluIGlsbGVnYWwgY29udGV4dDogXCIgKyBTdHJpbmc6Om5ldyk7XG4iICsgDQor
CQkJIgkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICBeXl5eXl5eXl5eXl5cbiIgKyANCisJCQkiRnVuY3Rpb25hbCBleHByZXNz
aW9ucyBtYXkgbm90IGJlIHVzZWQgaGVyZSAob25seSBhbGxvd2VkIGluIGFzc2lnbm1lbnRzLCBj
YXN0cywgYW5kIGFzIHBhcmFtZXRlcnMpXG4iICsgDQorCQkJIi0tLS0tLS0tLS1cbiIpOw0KK30N
CisNCiBwdWJsaWMgc3RhdGljIENsYXNzIHRlc3RDbGFzcygpIHsNCiAJcmV0dXJuIE5lZ2F0aXZl
TGFtYmRhRXhwcmVzc2lvbnNUZXN0LmNsYXNzOw0KIH0=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="0"
              isprivate="0"
          >
            <attachid>225890</attachid>
            <date>2013-01-21 10:00:00 -0500</date>
            <delta_ts>2013-02-05 19:56:54 -0500</delta_ts>
            <desc>Patch which adds the context check</desc>
            <filename>file_382702.txt</filename>
            <type>text/plain</type>
            <size>14861</size>
            <attacher name="Jesper Moller">jesper</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CmRpZmYgLS1naXQgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2NvcmUvY29tcGlsZXIvSVByb2Js
ZW0uamF2YSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvY29yZS9jb21waWxlci9JUHJvYmxlbS5q
YXZhDQppbmRleCBlNjAxZThjLi44OTc0NDM3IDEwMDY0NA0KLS0tIGNvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9jb3JlL2NvbXBpbGVyL0lQcm9ibGVtLmphdmENCisrKyBjb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvY29yZS9jb21waWxlci9JUHJvYmxlbS5qYXZhDQpAQCAtMTMyOSw2ICsxMzI5LDgg
QEANCiAgICAgaW50IElsbGVnYWxUeXBlRm9yRXhwbGljaXRUaGlzID0gSW50ZXJuYWwgKyBTeW50
YXggKyA2NTA7DQogICAgIC8qKiBAc2luY2UgMy45ICovDQogICAgIGludCBJbGxlZ2FsUXVhbGlm
aWVyRm9yRXhwbGljaXRUaGlzID0gSW50ZXJuYWwgKyBTeW50YXggKyA2NTE7DQorICAgIC8qKiBA
c2luY2UgMy45ICovDQorICAgIGludCBJbGxlZ2FsQ29udGV4dEZvckZ1bmN0aW9uYWxFeHByZXNz
aW9uID0gVHlwZVJlbGF0ZWQgKyA2NTI7DQogICAgIA0KIAkvKioNCiAJICogTW9yZSBwcm9ibGVt
cyBpbiBnZW5lcmljcw0KQEAgLTEzNDEsOSArMTM0Myw3IEBADQogCWludCBJbGxlZ2FsQXJyYXlP
ZlVuaW9uVHlwZSA9IFR5cGVSZWxhdGVkICsgNjYyOw0KIA0KIAkvKiogQHNpbmNlIDMuOSAqLw0K
LQlpbnQgUG9seUV4cHJlc3Npb25JbklsbGVnYWxDb250ZXh0ID0gVHlwZVJlbGF0ZWQgKyA2NjM7
DQotCS8qKiBAc2luY2UgMy45ICovDQotCWludCBUYXJnZXRUeXBlSXNOb3RBRnVuY3Rpb25hbElu
dGVyZmFjZSA9IFR5cGVSZWxhdGVkICsgNjY0Ow0KKwlpbnQgVGFyZ2V0VHlwZUlzTm90QUZ1bmN0
aW9uYWxJbnRlcmZhY2UgPSBUeXBlUmVsYXRlZCArIDY2MzsNCiAJDQogCS8qKg0KIAkgKiBDb3Jy
dXB0ZWQgYmluYXJpZXMNCmRpZmYgLS1naXQgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL0FTVFZpc2l0b3IuamF2YSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvQVNUVmlzaXRvci5qYXZhDQppbmRleCAxY2U4NDI3Li5jYTgxMDMwIDEw
MDY0NA0KLS0tIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9BU1RW
aXNpdG9yLmphdmENCisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvQVNUVmlzaXRvci5qYXZhDQpAQCAtNDEsNiArNDEsOSBAQA0KIAkJCUNsYXNzU2NvcGUgY2xh
c3NTY29wZSkgew0KIAkJCS8vIGRvIG5vdGhpbmcgYnkgZGVmYXVsdA0KIAl9DQorCXB1YmxpYyB2
b2lkIGVuZFZpc2l0KExhbWJkYUV4cHJlc3Npb24gYXJndW1lbnQsIEJsb2NrU2NvcGUgc2NvcGUp
IHsNCisJCS8vIGRvIG5vdGhpbmcgYnkgZGVmYXVsdA0KKwl9DQogCXB1YmxpYyB2b2lkIGVuZFZp
c2l0KEFyZ3VtZW50IGFyZ3VtZW50LCBCbG9ja1Njb3BlIHNjb3BlKSB7DQogCQkvLyBkbyBub3Ro
aW5nIGJ5IGRlZmF1bHQNCiAJfQ0KQEAgLTUxMCw2ICs1MTMsOSBAQA0KIAkJCUNsYXNzU2NvcGUg
Y2xhc3NTY29wZSkgew0KIAkJcmV0dXJuIHRydWU7IC8vIGRvIG5vdGhpbmcgYnkgZGVmYXVsdCwg
a2VlcCB0cmF2ZXJzaW5nDQogCX0NCisJcHVibGljIGJvb2xlYW4gdmlzaXQoTGFtYmRhRXhwcmVz
c2lvbiBhcmd1bWVudCwgQmxvY2tTY29wZSBzY29wZSkgew0KKwkJcmV0dXJuIHRydWU7IC8vIGRv
IG5vdGhpbmcgYnkgZGVmYXVsdCwga2VlcCB0cmF2ZXJzaW5nDQorCX0NCiAJcHVibGljIGJvb2xl
YW4gdmlzaXQoQXJndW1lbnQgYXJndW1lbnQsIEJsb2NrU2NvcGUgc2NvcGUpIHsNCiAJCXJldHVy
biB0cnVlOyAvLyBkbyBub3RoaW5nIGJ5IGRlZmF1bHQsIGtlZXAgdHJhdmVyc2luZw0KIAl9DQpk
aWZmIC0tZ2l0IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3Qv
QXNzaWdubWVudC5qYXZhIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9hc3QvQXNzaWdubWVudC5qYXZhDQppbmRleCA5YWNhYjE4Li43Y2ExOGJiIDEwMDY0NA0KLS0t
IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQXNzaWdubWVu
dC5qYXZhDQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Fz
dC9Bc3NpZ25tZW50LmphdmENCkBAIC0xNjYsNiArMTY2LDggQEANCiAJCXJldHVybiBudWxsOw0K
IAl9DQogCVR5cGVCaW5kaW5nIGxoc1R5cGUgPSB0aGlzLmxocy5yZXNvbHZlVHlwZShzY29wZSk7
DQorCXRoaXMuZXhwcmVzc2lvbi5hbGxvd0Z1bmN0aW9uYWxJbnRlcmZhY2UoKTsgLy8gbmVlZGVk
IHRvIGZsYWcgdGhhdCBsYW1iZGFzIGFyZSBPSyBoZXJlDQorDQogCXRoaXMuZXhwcmVzc2lvbi5z
ZXRFeHBlY3RlZFR5cGUobGhzVHlwZSk7IC8vIG5lZWRlZCBpbiBjYXNlIG9mIGdlbmVyaWMgbWV0
aG9kIGludm9jYXRpb24NCiAJaWYgKGxoc1R5cGUgIT0gbnVsbCkgew0KIAkJdGhpcy5yZXNvbHZl
ZFR5cGUgPSBsaHNUeXBlLmNhcHR1cmUoc2NvcGUsIHRoaXMuc291cmNlRW5kKTsNCmRpZmYgLS1n
aXQgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9DYXN0RXhw
cmVzc2lvbi5qYXZhIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9h
c3QvQ2FzdEV4cHJlc3Npb24uamF2YQ0KaW5kZXggNzA3YzMwMC4uYmEwYWRlMSAxMDA2NDQNCi0t
LSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Nhc3RFeHBy
ZXNzaW9uLmphdmENCisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L0Nhc3RFeHByZXNzaW9uLmphdmENCkBAIC00OTUsNiArNDk1LDEwIEBADQogDQogCVR5
cGVCaW5kaW5nIGNhc3RUeXBlID0gdGhpcy5yZXNvbHZlZFR5cGUgPSB0aGlzLnR5cGUucmVzb2x2
ZVR5cGUoc2NvcGUpOw0KIAkvL2V4cHJlc3Npb24uc2V0RXhwZWN0ZWRUeXBlKHRoaXMucmVzb2x2
ZWRUeXBlKTsgLy8gbmVlZGVkIGluIGNhc2Ugb2YgZ2VuZXJpYyBtZXRob2QgaW52b2NhdGlvbg0K
KwlpZiAodGhpcy5leHByZXNzaW9uIGluc3RhbmNlb2YgRnVuY3Rpb25hbExpdGVyYWwpIHsNCisJ
CXRoaXMuZXhwcmVzc2lvbi5hbGxvd0Z1bmN0aW9uYWxJbnRlcmZhY2UoKTsNCisJCXRoaXMuZXhw
cmVzc2lvbi5zZXRFeHBlY3RlZFR5cGUodGhpcy5yZXNvbHZlZFR5cGUpOyAvLyBuZWVkZWQgZm9y
IGNoZWNraW5nIGxhbWJkYXMgYW5kIHJlZmVyZW5jZXMNCisJfQ0KIAlpZiAodGhpcy5leHByZXNz
aW9uIGluc3RhbmNlb2YgQ2FzdEV4cHJlc3Npb24pIHsNCiAJCXRoaXMuZXhwcmVzc2lvbi5iaXRz
IHw9IEFTVE5vZGUuRGlzYWJsZVVubmVjZXNzYXJ5Q2FzdENoZWNrOw0KIAkJZXhwckNvbnRhaW5D
YXN0ID0gdHJ1ZTsNCmRpZmYgLS1naXQgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2FzdC9Db25kaXRpb25hbEV4cHJlc3Npb24uamF2YSBjb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0NvbmRpdGlvbmFsRXhwcmVzc2lvbi5qYXZh
DQppbmRleCBhYTM2Y2I5Li5iMDIyMjEyIDEwMDY0NA0KLS0tIGNvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQ29uZGl0aW9uYWxFeHByZXNzaW9uLmphdmENCisr
KyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0NvbmRpdGlv
bmFsRXhwcmVzc2lvbi5qYXZhDQpAQCAtMzkwLDYgKzM5MCwxNyBAQA0KIAkJcmV0dXJuIHRoaXMu
dmFsdWVJZkZhbHNlLnByaW50RXhwcmVzc2lvbigwLCBvdXRwdXQpOw0KIAl9DQogDQorCXB1Ymxp
YyB2b2lkIGFsbG93RnVuY3Rpb25hbEludGVyZmFjZSgpIHsNCisJCS8vIEJ1YmJsZSB0aHJvdWdo
IHRvIGJvdGggYnJhbmNoZXMNCisJCXRoaXMudmFsdWVJZlRydWUuYWxsb3dGdW5jdGlvbmFsSW50
ZXJmYWNlKCk7DQorCQl0aGlzLnZhbHVlSWZGYWxzZS5hbGxvd0Z1bmN0aW9uYWxJbnRlcmZhY2Uo
KTsNCisJfQ0KKwkNCisJcHVibGljIHZvaWQgc2V0RXhwZWN0ZWRUeXBlKFR5cGVCaW5kaW5nIGV4
cGVjdGVkVHlwZSkgew0KKwkJdGhpcy52YWx1ZUlmVHJ1ZS5zZXRFeHBlY3RlZFR5cGUoZXhwZWN0
ZWRUeXBlKTsNCisJCXRoaXMudmFsdWVJZkZhbHNlLnNldEV4cGVjdGVkVHlwZShleHBlY3RlZFR5
cGUpOw0KKwl9DQorDQogCXB1YmxpYyBUeXBlQmluZGluZyByZXNvbHZlVHlwZShCbG9ja1Njb3Bl
IHNjb3BlKSB7DQogCQkvLyBKTFMzIDE1LjI1DQogCQl0aGlzLmNvbnN0YW50ID0gQ29uc3RhbnQu
Tm90QUNvbnN0YW50Ow0KZGlmZiAtLWdpdCBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvYXN0L0V4cHJlc3Npb24uamF2YSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXN0L0V4cHJlc3Npb24uamF2YQ0KaW5kZXggMjZiNGE3Zi4uYmNk
M2ExZiAxMDA2NDQNCi0tLSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L0V4cHJlc3Npb24uamF2YQ0KKysrIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9hc3QvRXhwcmVzc2lvbi5qYXZhDQpAQCAtMTEyNyw0ICsxMTI3LDEyIEBA
DQogcHVibGljIHZvaWQgdHJhdmVyc2UoQVNUVmlzaXRvciB2aXNpdG9yLCBDbGFzc1Njb3BlIHNj
b3BlKSB7DQogCS8vIG5vdGhpbmcgdG8gZG8NCiB9DQorDQorLyoqDQorICogU2V0cyBhIGZsYWcg
dG8gYWxsb3cgYSBmdW5jdGlvbmFsIGludGVyZmFjZSBhdCB0aGlzIGV4cHJlc3Npb24uDQorICov
DQorcHVibGljIHZvaWQgYWxsb3dGdW5jdGlvbmFsSW50ZXJmYWNlKCkgew0KKwkvLyBkZWZhdWx0
IGlzIHRvIGRvIG5vdGhpbmcNCiB9DQorDQorfQ0KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxl
DQpkaWZmIC0tZ2l0IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9h
c3QvRmllbGREZWNsYXJhdGlvbi5qYXZhIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9hc3QvRmllbGREZWNsYXJhdGlvbi5qYXZhDQppbmRleCAxOWRjMDUzLi41NzNk
MWRkIDEwMDY0NA0KLS0tIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9hc3QvRmllbGREZWNsYXJhdGlvbi5qYXZhDQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2FzdC9GaWVsZERlY2xhcmF0aW9uLmphdmENCkBAIC0yMjUsNiAr
MjI1LDcgQEANCiANCiAJCQlUeXBlQmluZGluZyBmaWVsZFR5cGUgPSB0aGlzLmJpbmRpbmcudHlw
ZTsNCiAJCQlUeXBlQmluZGluZyBpbml0aWFsaXphdGlvblR5cGU7DQorCQkJdGhpcy5pbml0aWFs
aXphdGlvbi5hbGxvd0Z1bmN0aW9uYWxJbnRlcmZhY2UoKTsgLy8gbmVlZGVkIHRvIGZsYWcgdGhh
dCBsYW1iZGFzIGFyZSBPSyBoZXJlDQogCQkJdGhpcy5pbml0aWFsaXphdGlvbi5zZXRFeHBlY3Rl
ZFR5cGUoZmllbGRUeXBlKTsgLy8gbmVlZGVkIGluIGNhc2Ugb2YgZ2VuZXJpYyBtZXRob2QgaW52
b2NhdGlvbg0KIAkJCWlmICh0aGlzLmluaXRpYWxpemF0aW9uIGluc3RhbmNlb2YgQXJyYXlJbml0
aWFsaXplcikgew0KIA0KZGlmZiAtLWdpdCBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvYXN0L0xhbWJkYUV4cHJlc3Npb24uamF2YSBjb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0xhbWJkYUV4cHJlc3Npb24uamF2YQ0KaW5kZXgg
YzVjOTRlYS4uZGVhNWMyOCAxMDA2NDQNCi0tLSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvYXN0L0xhbWJkYUV4cHJlc3Npb24uamF2YQ0KKysrIGNvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTGFtYmRhRXhwcmVzc2lvbi5qYXZh
DQpAQCAtMTgsMTYgKzE4LDEzIEBADQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5sb29rdXAuQmxvY2tTY29wZTsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmxvb2t1cC5MYW1iZGFTY29wZTsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5NZXRob2RCaW5kaW5nOw0KLWltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlJlZmVyZW5jZUJpbmRpbmc7DQogaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuVHlwZUJpbmRpbmc7
DQogDQotcHVibGljIGNsYXNzIExhbWJkYUV4cHJlc3Npb24gZXh0ZW5kcyBOdWxsTGl0ZXJhbCB7
ICAvLyBGb3IgdGhlIHRpbWUgYmVpbmcuDQorcHVibGljIGNsYXNzIExhbWJkYUV4cHJlc3Npb24g
ZXh0ZW5kcyBGdW5jdGlvbmFsTGl0ZXJhbCB7DQogCUFyZ3VtZW50IFtdIGFyZ3VtZW50czsNCiAJ
U3RhdGVtZW50IGJvZHk7DQogCUxhbWJkYVNjb3BlIHNjb3BlOw0KIAlUeXBlRGVjbGFyYXRpb24g
dHlwZURlY2xhcmF0aW9uOw0KLQlwcml2YXRlIFR5cGVCaW5kaW5nIGV4cGVjdGVkVHlwZTsNCi0J
cHJpdmF0ZSBNZXRob2RCaW5kaW5nIHNpbmdsZU1ldGhvZDsNCiAJDQogCXB1YmxpYyBMYW1iZGFF
eHByZXNzaW9uKEFyZ3VtZW50IFtdIGFyZ3VtZW50cywgU3RhdGVtZW50IGJvZHkpIHsNCiAJCXN1
cGVyKDAsIDApOw0KQEAgLTM1LDQ2ICszMiwyNiBAQA0KIAkJdGhpcy5ib2R5ID0gYm9keTsNCiAJ
fQ0KIAkNCi0JcHVibGljIHZvaWQgc2V0RXhwZWN0ZWRUeXBlKFR5cGVCaW5kaW5nIGV4cGVjdGVk
VHlwZSkgew0KLQkJdGhpcy5leHBlY3RlZFR5cGUgPSBleHBlY3RlZFR5cGU7DQotCX0NCi0NCiAJ
cHVibGljIFR5cGVCaW5kaW5nIHJlc29sdmVUeXBlKEJsb2NrU2NvcGUgYmxvY2tTY29wZSkgew0K
IAkJaWYgKHRoaXMuc2NvcGUgPT0gbnVsbCkgew0KIAkJCXRoaXMuc2NvcGUgPSBuZXcgTGFtYmRh
U2NvcGUoYmxvY2tTY29wZSwgdGhpcyk7DQogCQl9DQotCQlpZiAodGhpcy5leHBlY3RlZFR5cGUg
PT0gbnVsbCkgew0KLQkJCXRoaXMuc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkucG9seUV4cHJlc3Np
b25JbklsbGVnYWxDb250ZXh0KHRoaXMpOw0KLQkJfQ0KLQkJdGhpcy5zaW5nbGVNZXRob2QgPSBy
ZXNvbHZlRnVuY3Rpb25hbE1ldGhvZCh0aGlzLmFyZ3VtZW50cyAhPSBudWxsID8gdGhpcy5hcmd1
bWVudHMubGVuZ3RoIDogMCk7DQotCQlpZiAodGhpcy5hcmd1bWVudHMgIT0gbnVsbCAmJiB0aGlz
LnNpbmdsZU1ldGhvZCAhPSBudWxsKSB7DQotCQkJZm9yIChpbnQgaSA9IDAsIGxlbmd0aCA9IHRo
aXMuYXJndW1lbnRzLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7DQotCQkJCXRoaXMuYXJndW1l
bnRzW2ldLnNldEVsaWRlZFR5cGUodGhpcy5zaW5nbGVNZXRob2QucGFyYW1ldGVyc1tpXSk7DQot
CQkJCXRoaXMuYXJndW1lbnRzW2ldLnJlc29sdmUodGhpcy5zY29wZSk7DQorCQlpZiAoY2hlY2tD
b250ZXh0KGJsb2NrU2NvcGUpKSB7DQorCQkJaW50IGZvcm1hbEFyZ3VtZW50Q291bnQgPSB0aGlz
LmFyZ3VtZW50cyAhPSBudWxsID8gdGhpcy5hcmd1bWVudHMubGVuZ3RoIDogMDsNCisJCQlNZXRo
b2RCaW5kaW5nIG1ldGhvZCA9IHJlc29sdmVGdW5jdGlvbmFsTWV0aG9kKGZvcm1hbEFyZ3VtZW50
Q291bnQsIHRoaXMuc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkpOw0KKwkJCWlmICh0aGlzLmFyZ3Vt
ZW50cyAhPSBudWxsICYmIG1ldGhvZCAhPSBudWxsKSB7DQorCQkJCWZvciAoaW50IGkgPSAwLCBs
ZW5ndGggPSB0aGlzLmFyZ3VtZW50cy5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykgew0KKwkJCQkJ
dGhpcy5hcmd1bWVudHNbaV0uc2V0RWxpZGVkVHlwZShtZXRob2QucGFyYW1ldGVyc1tpXSk7DQor
CQkJCQl0aGlzLmFyZ3VtZW50c1tpXS5yZXNvbHZlKHRoaXMuc2NvcGUpOw0KKwkJCQl9DQogCQkJ
fQ0KLQkJfQ0KLQkJLy8gTXVzdCBleGFtaW5lIHBvbHktdHlwZSBhbmQgcGljayB0aGUgcmlnaHQg
b25lDQotCQkNCisJCQkvLyBNdXN0IGV4YW1pbmUgcG9seS10eXBlIGFuZCBwaWNrIHRoZSByaWdo
dCBvbmUNCisJCX0JCQ0KIAkJaWYgKHRoaXMuYm9keSAhPSBudWxsKSB7DQogCQkJdGhpcy5ib2R5
LnJlc29sdmUodGhpcy5zY29wZSk7DQogCQl9DQogCQkNCiAJCXJldHVybiBzdXBlci5yZXNvbHZl
VHlwZSh0aGlzLnNjb3BlKTsNCi0JfQ0KLQkNCi0JcHJpdmF0ZSBNZXRob2RCaW5kaW5nIHJlc29s
dmVGdW5jdGlvbmFsTWV0aG9kKGludCBudW1iZXJPZkFyZ3VtZW50cykgew0KLQkJaWYgKCEgKHRo
aXMuZXhwZWN0ZWRUeXBlIGluc3RhbmNlb2YgUmVmZXJlbmNlQmluZGluZykpIHsNCi0JCQl0aGlz
LnNjb3BlLnByb2JsZW1SZXBvcnRlcigpLnBvbHlFeHByZXNzaW9uSW5JbGxlZ2FsQ29udGV4dCh0
aGlzKTsNCi0JCQlyZXR1cm4gbnVsbDsNCi0JCX0NCi0JCVJlZmVyZW5jZUJpbmRpbmcgcmVmZXJl
bmNlQmluZGluZyA9IChSZWZlcmVuY2VCaW5kaW5nKXRoaXMuZXhwZWN0ZWRUeXBlOw0KLQkJTWV0
aG9kQmluZGluZyBtZXRob2RzW10gPSByZWZlcmVuY2VCaW5kaW5nLm1ldGhvZHMoKTsNCi0JCQ0K
LQkJaWYgKG1ldGhvZHMgPT0gbnVsbCB8fCBtZXRob2RzLmxlbmd0aCAhPSAxKSB7DQotCQkJdGhp
cy5zY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5wb2x5RXhwcmVzc2lvbkluSWxsZWdhbENvbnRleHQo
dGhpcyk7DQotCQkJcmV0dXJuIG51bGw7DQotCQl9DQotCQlyZXR1cm4gbWV0aG9kc1swXTsNCiAJ
fQ0KIA0KIAlwdWJsaWMgdm9pZCB0cmF2ZXJzZSgNCkBAIC0xMTQsNyArOTEsNCBAQA0KIAkJcmV0
dXJuIG91dHB1dC5hcHBlbmQoc3VmZml4KTsNCiAJfQ0KIA0KLQlwdWJsaWMgVHlwZUJpbmRpbmcg
ZXhwZWN0ZWRSZXN1bHRUeXBlKCkgew0KLQkJcmV0dXJuIHRoaXMuc2luZ2xlTWV0aG9kICE9IG51
bGwgPyB0aGlzLnNpbmdsZU1ldGhvZC5yZXR1cm5UeXBlIDogbnVsbDsgDQotCX0NCiB9DQpkaWZm
IC0tZ2l0IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTG9j
YWxEZWNsYXJhdGlvbi5qYXZhIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9hc3QvTG9jYWxEZWNsYXJhdGlvbi5qYXZhDQppbmRleCA3Njg4OTM3Li42MmUzNDMwIDEw
MDY0NA0KLS0tIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3Qv
TG9jYWxEZWNsYXJhdGlvbi5qYXZhDQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2FzdC9Mb2NhbERlY2xhcmF0aW9uLmphdmENCkBAIC0yNzEsNiArMjcxLDcg
QEANCiAJCQkJCXRoaXMuaW5pdGlhbGl6YXRpb24uY29tcHV0ZUNvbnZlcnNpb24oc2NvcGUsIHZh
cmlhYmxlVHlwZSwgaW5pdGlhbGl6YXRpb25UeXBlKTsNCiAJCQkJfQ0KIAkJCX0gZWxzZSB7DQor
CQkJCXRoaXMuaW5pdGlhbGl6YXRpb24uYWxsb3dGdW5jdGlvbmFsSW50ZXJmYWNlKCk7IC8vIG5l
ZWRlZCB0byBmbGFnIHRoYXQgbGFtYmRhcyBhcmUgT0sgaGVyZQ0KIAkJCSAgICB0aGlzLmluaXRp
YWxpemF0aW9uLnNldEV4cGVjdGVkVHlwZSh2YXJpYWJsZVR5cGUpOw0KIAkJCQlUeXBlQmluZGlu
ZyBpbml0aWFsaXphdGlvblR5cGUgPSB0aGlzLmluaXRpYWxpemF0aW9uLnJlc29sdmVUeXBlKHNj
b3BlKTsNCiAJCQkJaWYgKGluaXRpYWxpemF0aW9uVHlwZSAhPSBudWxsKSB7DQpkaWZmIC0tZ2l0
IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvUmVmZXJlbmNl
RXhwcmVzc2lvbi5qYXZhIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9hc3QvUmVmZXJlbmNlRXhwcmVzc2lvbi5qYXZhDQppbmRleCA4MjgwZTYxLi4zZjZmYTlmIDEw
MDY0NA0KLS0tIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3Qv
UmVmZXJlbmNlRXhwcmVzc2lvbi5qYXZhDQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2FzdC9SZWZlcmVuY2VFeHByZXNzaW9uLmphdmENCkBAIC0xNyw5ICsx
NywxMCBAQA0KIA0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuY2xh
c3NmbXQuQ2xhc3NGaWxlQ29uc3RhbnRzOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIubG9va3VwLkJsb2NrU2NvcGU7DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb21waWxlci5sb29rdXAuTWV0aG9kQmluZGluZzsNCiBpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5UeXBlQmluZGluZzsNCiANCi1wdWJsaWMg
Y2xhc3MgUmVmZXJlbmNlRXhwcmVzc2lvbiBleHRlbmRzIE51bGxMaXRlcmFsIHsgLy8gRm9yIHRo
ZSB0aW1lIGJlaW5nLg0KK3B1YmxpYyBjbGFzcyBSZWZlcmVuY2VFeHByZXNzaW9uIGV4dGVuZHMg
RnVuY3Rpb25hbExpdGVyYWwgew0KIAkNCiAJcHJvdGVjdGVkIE5hbWVSZWZlcmVuY2UgbmFtZTsN
CiAJcHJvdGVjdGVkIFR5cGVSZWZlcmVuY2UgdHlwZTsNCkBAIC0xMDAsNiArMTAxLDEyIEBADQog
CX0NCiAJDQogCXB1YmxpYyBUeXBlQmluZGluZyByZXNvbHZlVHlwZShCbG9ja1Njb3BlIHNjb3Bl
KSB7DQorCQlpZiAoY2hlY2tDb250ZXh0KHNjb3BlKSkgew0KKwkJCS8vIENoZWNrIHRoZSBmdW5j
dGlvbmFsIGludGVyZmFjZQ0KKwkJCU1ldGhvZEJpbmRpbmcgbWV0aG9kID0gcmVzb2x2ZUZ1bmN0
aW9uYWxNZXRob2QoMCwgc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkpOw0KKwkJCS8vIE11c3QgZXhh
bWluZSBwb2x5LXR5cGUgYW5kIGNoZWNrIGlmIHRoZXkgYXJlIGNvbXBhdGlibGUNCisJCX0JCQ0K
KwkJDQogCQkvLyByZXNvbHZlIHR5cGUgYXJndW1lbnRzIChmb3IgZ2VuZXJpYyBjb25zdHJ1Y3Rv
ciBjYWxsKQ0KIAkJaWYgKHRoaXMudHlwZUFyZ3VtZW50cyAhPSBudWxsKSB7DQogCQkJaW50IGxl
bmd0aCA9IHRoaXMudHlwZUFyZ3VtZW50cy5sZW5ndGg7DQpkaWZmIC0tZ2l0IGNvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvUmV0dXJuU3RhdGVtZW50LmphdmEg
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9SZXR1cm5TdGF0
ZW1lbnQuamF2YQ0KaW5kZXggZTA1MGMwOC4uYTAyMTBiYSAxMDA2NDQNCi0tLSBjb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1JldHVyblN0YXRlbWVudC5qYXZh
DQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9SZXR1
cm5TdGF0ZW1lbnQuamF2YQ0KQEAgLTI4MCw2ICsyODAsNyBAQA0KIAkJaWYgKG1ldGhvZFR5cGUg
IT0gbnVsbCkgc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkuc2hvdWxkUmV0dXJuKG1ldGhvZFR5cGUs
IHRoaXMpOw0KIAkJcmV0dXJuOw0KIAl9DQorCXRoaXMuZXhwcmVzc2lvbi5hbGxvd0Z1bmN0aW9u
YWxJbnRlcmZhY2UoKTsgLy8gbmVlZGVkIHRvIGZsYWcgdGhhdCBsYW1iZGFzIGFyZSBPSyBoZXJl
DQogCXRoaXMuZXhwcmVzc2lvbi5zZXRFeHBlY3RlZFR5cGUobWV0aG9kVHlwZSk7IC8vIG5lZWRl
ZCBpbiBjYXNlIG9mIGdlbmVyaWMgbWV0aG9kIGludm9jYXRpb24NCiAJaWYgKChleHByZXNzaW9u
VHlwZSA9IHRoaXMuZXhwcmVzc2lvbi5yZXNvbHZlVHlwZShzY29wZSkpID09IG51bGwpIHJldHVy
bjsNCiAJaWYgKGV4cHJlc3Npb25UeXBlID09IFR5cGVCaW5kaW5nLlZPSUQpIHsNCmRpZmYgLS1n
aXQgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2JsZW0vUHJv
YmxlbVJlcG9ydGVyLmphdmEgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL3Byb2JsZW0vUHJvYmxlbVJlcG9ydGVyLmphdmENCmluZGV4IDA0ZGRhYzIuLjIxMDkyOGUg
MTAwNjQ0DQotLS0gY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3By
b2JsZW0vUHJvYmxlbVJlcG9ydGVyLmphdmENCisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVtUmVwb3J0ZXIuamF2YQ0KQEAgLTcwLDYg
KzcwLDcgQEANCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5G
YWtlZFRyYWNraW5nVmFyaWFibGU7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5hc3QuRmllbGREZWNsYXJhdGlvbjsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmFzdC5GaWVsZFJlZmVyZW5jZTsNCitpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5GdW5jdGlvbmFsTGl0ZXJhbDsNCiBpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5JbXBvcnRSZWZlcmVuY2U7DQogaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuSW5pdGlhbGl6ZXI7DQog
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuSW5zdGFuY2VPZkV4
cHJlc3Npb247DQpAQCAtMjc2OSwxNSArMjc3MCw3IEBADQogCQkJbGV4cC5zb3VyY2VTdGFydCwN
CiAJCQlsZXhwLnNvdXJjZUVuZCk7DQogfQ0KLXB1YmxpYyB2b2lkIHBvbHlFeHByZXNzaW9uSW5J
bGxlZ2FsQ29udGV4dChMYW1iZGFFeHByZXNzaW9uIGxleHApIHsNCi0JdGhpcy5oYW5kbGUoDQot
CQkJSVByb2JsZW0uUG9seUV4cHJlc3Npb25JbklsbGVnYWxDb250ZXh0LA0KLQkJCU5vQXJndW1l
bnQsDQotCQkJTm9Bcmd1bWVudCwNCi0JCQlsZXhwLnNvdXJjZVN0YXJ0LA0KLQkJCWxleHAuc291
cmNlRW5kKTsNCi19DQotcHVibGljIHZvaWQgdGFyZ2V0VHlwZUlzTm90QUZ1bmN0aW9uYWxJbnRl
cmZhY2UoTGFtYmRhRXhwcmVzc2lvbiBsZXhwKSB7DQorcHVibGljIHZvaWQgdGFyZ2V0VHlwZUlz
Tm90QUZ1bmN0aW9uYWxJbnRlcmZhY2UoRnVuY3Rpb25hbExpdGVyYWwgbGV4cCkgew0KIAl0aGlz
LmhhbmRsZSgNCiAJCQlJUHJvYmxlbS5UYXJnZXRUeXBlSXNOb3RBRnVuY3Rpb25hbEludGVyZmFj
ZSwNCiAJCQlOb0FyZ3VtZW50LA0KQEAgLTI3ODUsNiArMjc3OCwxNSBAQA0KIAkJCWxleHAuc291
cmNlU3RhcnQsDQogCQkJbGV4cC5zb3VyY2VFbmQpOw0KIH0NCitwdWJsaWMgdm9pZCBpbGxlZ2Fs
Q29udGV4dEZvckZ1bmN0aW9uYWxFeHByZXNzaW9uKEZ1bmN0aW9uYWxMaXRlcmFsIGxleHApIHsN
CisJdGhpcy5oYW5kbGUoDQorCQkJSVByb2JsZW0uSWxsZWdhbENvbnRleHRGb3JGdW5jdGlvbmFs
RXhwcmVzc2lvbiwNCisJCQlOb0FyZ3VtZW50LA0KKwkJCU5vQXJndW1lbnQsDQorCQkJbGV4cC5z
b3VyY2VTdGFydCwNCisJCQlsZXhwLnNvdXJjZUVuZCk7DQorfQ0KKw0KIHB1YmxpYyB2b2lkIGls
bGVnYWxWaXNpYmlsaXR5TW9kaWZpZXJDb21iaW5hdGlvbkZvckZpZWxkKFJlZmVyZW5jZUJpbmRp
bmcgdHlwZSwgRmllbGREZWNsYXJhdGlvbiBmaWVsZERlY2wpIHsNCiAJU3RyaW5nW10gYXJndW1l
bnRzID0gbmV3IFN0cmluZ1tdIHtuZXcgU3RyaW5nKGZpZWxkRGVjbC5uYW1lKX07DQogCXRoaXMu
aGFuZGxlKA0KZGlmZiAtLWdpdCBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvcHJvYmxlbS9tZXNzYWdlcy5wcm9wZXJ0aWVzIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL21lc3NhZ2VzLnByb3BlcnRpZXMNCmluZGV4IDVk
MjIwYTYuLmZkOWIxN2UgMTAwNjQ0DQotLS0gY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL3Byb2JsZW0vbWVzc2FnZXMucHJvcGVydGllcw0KKysrIGNvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL21lc3NhZ2VzLnByb3BlcnRp
ZXMNCkBAIC02MDUsMTMgKzYwNSwxMyBAQA0KIDY0OSA9IEFubm90YXRpb24gdHlwZXMgdGhhdCBk
byBub3Qgc3BlY2lmeSBleHBsaWNpdCB0YXJnZXQgZWxlbWVudCB0eXBlcyBjYW5ub3QgYmUgYXBw
bGllZCBoZXJlDQogNjUwID0gVGhlIGRlY2xhcmVkIHR5cGUgb2YgdGhlIGV4cGxpY2l0ICcndGhp
cycnIHBhcmFtZXRlciBpcyBleHBlY3RlZCB0byBiZSB7MH0NCiA2NTEgPSBUaGUgZXhwbGljaXQg
Jyd0aGlzJycgcGFyYW1ldGVyIGlzIGV4cGVjdGVkIHRvIGJlIHF1YWxpZmllZCB3aXRoIHswfQ0K
KzY1MiA9IEZ1bmN0aW9uYWwgZXhwcmVzc2lvbnMgbWF5IG5vdCBiZSB1c2VkIGhlcmUgKG9ubHkg
YWxsb3dlZCBpbiBhc3NpZ25tZW50cywgY2FzdHMsIGFuZCBhcyBwYXJhbWV0ZXJzKQ0KICMjIyBN
T1JFIEdFTkVSSUNTDQogNjYwID0gVW51c2VkIHR5cGUgYXJndW1lbnRzIGZvciB0aGUgbm9uIGdl
bmVyaWMgY29uc3RydWN0b3IgezB9KHsxfSkgb2YgdHlwZSB7Mn07IGl0IHNob3VsZCBub3QgYmUg
cGFyYW1ldGVyaXplZCB3aXRoIGFyZ3VtZW50cyA8ezN9Pg0KIDY2MSA9IFVudXNlZCB0eXBlIHBh
cmFtZXRlciB7MH0NCiANCiAjIyMgTU9SRSBUWVBFIFJFTEFURUQNCiA2NjIgPSBJbGxlZ2FsIGF0
dGVtcHQgdG8gY3JlYXRlIGFycmF5cyBvZiB1bmlvbiB0eXBlcw0KLTY2MyA9IChUT0RPOiBXb3Jk
aW5nKSBJbGxlZ2FsIFBvbHkgZXhwcmVzc2lvbiBjb250ZXh0ICAvIHRhcmdldCB0eXBlIG5vdCBz
ZXQNCiA2NjMgPSAoVE9ETzogV29yZGluZykgVGFyZ2V0IHR5cGUgaXMgbm90IGEgZnVuY3Rpb25h
bCBpbnRlcmZhY2UgIA0KIA0KICMjIyBDT1JSVVBURUQgQklOQVJJRVM=
</data>

          </attachment>
      

    </bug>

</bugzilla>