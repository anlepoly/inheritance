<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>428845</bug_id>
          
          <creation_ts>2014-02-23 10:19:00 -0500</creation_ts>
          <short_desc>eclipse compiler does not flag ambiguous method call in some cases</short_desc>
          <delta_ts>2015-01-20 10:05:12 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.4.2</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Igor Fedorenko">igor</reporter>
          <assigned_to name="Sasikanth Bharadwaj">saammana</assigned_to>
          <cc>jarthana</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="62929"
          type_id="1"
          status="+"
          setter="srikanth_sankaran"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2367303</commentid>
    <comment_count>0</comment_count>
    <who name="Igor Fedorenko">igor</who>
    <bug_when>2014-02-23 10:19:35 -0500</bug_when>
    <thetext>Not sure if this is a dup of bug 340506 or bug 427719, but here is a small example where eclipse fails to report ambiguous method invocation. Almost looks like jdt compiler is confused about newAbstractClass() return type and uses IInterface interface instead of AbstractClass abstract class. The error is correctly flagged by javac

Tested with eclipse 4.4M5 (I20140123-1600) and javac from jdk 1.7.0_45-b18 on command line.

-------------------------------------
package ambiguous;

import java.io.File;

public class AmbiguousTets {

  static interface IInterface {
    public void method(File file);
  }

  static abstract class AbstractClass implements IInterface {

    public void method(File file) {
      System.err.println(&quot;file&quot;);
    }

    public void method(String string) {
      System.err.println(&quot;string&quot;);
    }
  }

  private static AbstractClass newAbstractClass() {
    return new AbstractClass() {};
  }

  public static void main(String[] args) {
    // this should be flagged as ambiguous, but is not
    // correctly reported by javac as an error
    newAbstractClass().method(null);
  }
}
-------------------------------------</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2369070</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-26 16:58:31 -0500</bug_when>
    <thetext>Thanks for the test case, Igor.

Interestingly, at 1.8 we do report:

        newAbstractClass().method(null);
                           ^^^^^^
The method method(File) is ambiguous for the type AmbiguousTets.AbstractClass


I don&apos;t think its the same as any of the mentioned bugs, as those involve generics which are nowhere in sight in this bug.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2388651</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-04-14 07:19:02 -0400</bug_when>
    <thetext>Sasi, please take a look.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2406005</commentid>
    <comment_count>3</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-05-22 22:51:13 -0400</bug_when>
    <thetext>With not much time left in Luna, we will handle this in 4.5 or 4.4.1.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2419160</commentid>
    <comment_count>4</comment_count>
      <attachid>244420</attachid>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2014-06-23 04:51:12 -0400</bug_when>
    <thetext>Created attachment 244420
Patch with proposed fix and test</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2419161</commentid>
    <comment_count>5</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2014-06-23 04:55:40 -0400</bug_when>
    <thetext>Scope.findDefaultAbstractMethod() skips interface methods that are already overridden in the class, but does so only at sourcelevel18. Fix changes this behavior, this filtering happens at other levels also except for parameterized vararg methods to have the same behavior for the case mentioned in bug 426633.
All tests pass with this change. Srikanth, please review</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2422008</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-06-30 02:00:24 -0400</bug_when>
    <thetext>Patch looks reasonable to me. Released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=6217980941ff682ecbf64b069805f7999b4a024a</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2436074</commentid>
    <comment_count>7</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-08-06 01:41:11 -0400</bug_when>
    <thetext>Verified for 4.5 M1 with build I20140804-2000</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2473902</commentid>
    <comment_count>8</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-10-30 02:23:22 -0400</bug_when>
    <thetext>This affects fix made in bug 433588. Hence needs to be back ported for 4.4.2.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2477662</commentid>
    <comment_count>9</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-11-06 03:12:40 -0500</bug_when>
    <thetext>Released in R4_4_maintenance via commit(s):

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=R4_4_maintenance&amp;id=08076aab664568469f1ee82b59145601a1474680</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2507885</commentid>
    <comment_count>10</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2015-01-20 10:05:12 -0500</bug_when>
    <thetext>Verified for 4.4.2 RC1 with build M20150114-1500</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>244420</attachid>
            <date>2014-06-23 04:51:00 -0400</date>
            <delta_ts>2014-06-23 04:51:12 -0400</delta_ts>
            <desc>Patch with proposed fix and test</desc>
            <filename>Fix-and-test-for-bug-428845.patch</filename>
            <type>text/plain</type>
            <size>2781</size>
            <attacher name="Sasikanth Bharadwaj">saammana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0FtYmlndW91c01ldGhv
ZFRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0FtYmlndW91c01ldGhv
ZFRlc3QuamF2YQppbmRleCBkYWM0YzIwLi45NTk1ZmNlIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
Y29tcGlsZXIvcmVncmVzc2lvbi9BbWJpZ3VvdXNNZXRob2RUZXN0LmphdmEKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQW1iaWd1b3VzTWV0aG9kVGVzdC5qYXZhCkBAIC00NDY0
LDQgKzQ0NjQsMzcgQEAKIAkJIlRoZSBtZXRob2QgbShMaXN0PE9iamVjdD4sIE9iamVjdCkgaXMg
YW1iaWd1b3VzIGZvciB0aGUgdHlwZSBUZXN0XG4iICsgCiAJCSItLS0tLS0tLS0tXG4iKTsKIH0K
Ky8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00Mjg4NDUK
K3B1YmxpYyB2b2lkIHRlc3RCdWc0Mjg4NDUoKSB7CisJcnVuTmVnYXRpdmVUZXN0KAorCQkJbmV3
IFN0cmluZ1tdIHsKKwkJCQkiQW1iaWd1b3VzVGVzdC5qYXZhIiwKKwkJCQkiaW1wb3J0IGphdmEu
aW8uRmlsZTtcbiIgKyAKKwkJCQkicHVibGljIGNsYXNzIEFtYmlndW91c1Rlc3Qge1xuIiArIAor
CQkJCSIgIHN0YXRpYyBpbnRlcmZhY2UgSUludGVyZmFjZSB7XG4iICsgCisJCQkJIiAgICBwdWJs
aWMgdm9pZCBtZXRob2QoRmlsZSBmaWxlKTtcbiIgKyAKKwkJCQkiICB9XG4iICsgCisJCQkJIiAg
c3RhdGljIGFic3RyYWN0IGNsYXNzIEFic3RyYWN0Q2xhc3MgaW1wbGVtZW50cyBJSW50ZXJmYWNl
IHtcbiIgKyAKKwkJCQkiICAgIHB1YmxpYyB2b2lkIG1ldGhvZChGaWxlIGZpbGUpIHtcbiIgKyAK
KwkJCQkiICAgICAgU3lzdGVtLmVyci5wcmludGxuKFwiZmlsZVwiKTtcbiIgKyAKKwkJCQkiICAg
IH1cbiIgKyAKKwkJCQkiICAgIHB1YmxpYyB2b2lkIG1ldGhvZChTdHJpbmcgc3RyaW5nKSB7XG4i
ICsgCisJCQkJIiAgICAgIFN5c3RlbS5lcnIucHJpbnRsbihcInN0cmluZ1wiKTtcbiIgKyAKKwkJ
CQkiICAgIH1cbiIgKyAKKwkJCQkiICB9XG4iICsgCisJCQkJIiAgcHJpdmF0ZSBzdGF0aWMgQWJz
dHJhY3RDbGFzcyBuZXdBYnN0cmFjdENsYXNzKCkge1xuIiArIAorCQkJCSIgICAgcmV0dXJuIG5l
dyBBYnN0cmFjdENsYXNzKCkge307XG4iICsgCisJCQkJIiAgfVxuIiArIAorCQkJCSIgIHB1Ymxp
YyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKyAKKwkJCQkiICAgIG5ld0Fi
c3RyYWN0Q2xhc3MoKS5tZXRob2QobnVsbCk7XG4iICsgCisJCQkJIiAgfVxuIiArIAorCQkJCSJ9
IgorCQkJfSwKKwkJCSItLS0tLS0tLS0tXG4iICsgCisJCQkiMS4gRVJST1IgaW4gQW1iaWd1b3Vz
VGVzdC5qYXZhIChhdCBsaW5lIDE4KVxuIiArIAorCQkJIgluZXdBYnN0cmFjdENsYXNzKCkubWV0
aG9kKG51bGwpO1xuIiArIAorCQkJIgkgICAgICAgICAgICAgICAgICAgXl5eXl5eXG4iICsgCisJ
CQkiVGhlIG1ldGhvZCBtZXRob2QoRmlsZSkgaXMgYW1iaWd1b3VzIGZvciB0aGUgdHlwZSBBbWJp
Z3VvdXNUZXN0LkFic3RyYWN0Q2xhc3NcbiIgKyAKKwkJCSItLS0tLS0tLS0tXG4iKTsKK30KIH0K
ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvU2NvcGUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvU2Nv
cGUuamF2YQppbmRleCA2YmYwYTQ4Li5iZjA3MmQ0IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3Vw
L1Njb3BlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9TY29wZS5qYXZhCkBAIC0xMjY3LDcgKzEy
NjcsNyBAQAogCQkJCQkJCWlmIChtZXRob2RWZXJpZmllci5hcmVNZXRob2RzQ29tcGF0aWJsZShj
b25jcmV0ZU1hdGNoLCBjb21wYXRpYmxlTWV0aG9kKSkKIAkJCQkJCQkJY29udGludWU7IC8vIGNh
biBza2lwIHRoaXMgbWV0aG9kIHNpbmNlIGNvbmNyZXRlTWF0Y2ggb3ZlcnJpZGVzIGl0CiAJCQkJ
CQl9Ci0JCQkJCQlpZiAoc291cmNlTGV2ZWwxOCkgeworCQkJCQkJaWYgKHNvdXJjZUxldmVsMTgg
fHwgIShjb21wYXRpYmxlTWV0aG9kLmlzVmFyYXJncygpICYmIGNvbXBhdGlibGVNZXRob2QgaW5z
dGFuY2VvZiBQYXJhbWV0ZXJpemVkR2VuZXJpY01ldGhvZEJpbmRpbmcpKSB7CiAJCQkJCQkJZm9y
IChpbnQgaiA9IDA7IGogPCBzdGFydEZvdW5kU2l6ZTsgaisrKSB7CiAJCQkJCQkJCU1ldGhvZEJp
bmRpbmcgY2xhc3NNZXRob2QgPSAoTWV0aG9kQmluZGluZykgZm91bmQuZWxlbWVudEF0KGopOwog
CQkJCQkJCQlpZiAoY2xhc3NNZXRob2QgIT0gbnVsbCAmJiBtZXRob2RWZXJpZmllci5hcmVNZXRo
b2RzQ29tcGF0aWJsZShjbGFzc01ldGhvZCwgY29tcGF0aWJsZU1ldGhvZCkp
</data>

          </attachment>
      

    </bug>

</bugzilla>