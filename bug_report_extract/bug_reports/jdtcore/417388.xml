<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>417388</bug_id>
          
          <creation_ts>2013-09-17 02:00:00 -0400</creation_ts>
          <short_desc>TypeBinding on a TypeReference for parameter does not have type use annotations</short_desc>
          <delta_ts>2013-09-25 13:02:16 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>409586</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Jay Arthanareeswaran">jarthana</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>shankhba</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2307612</commentid>
    <comment_count>0</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-09-17 02:00:59 -0400</bug_when>
    <thetext>Here is a simple code:

class X {
	public void foo(@Marker int p) {}
}

Now, for parameter &apos;p&apos;, Argument#type#resolvedType (which is a BaseTypeBinding)doesn&apos;t contain the type use annotations. Interestingly, Argument#binding#type (which is also a BaseTypeBinding) contains the annotations correctly. Ideally, they should be referencing the same object.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2307749</commentid>
    <comment_count>1</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-09-17 06:50:05 -0400</bug_when>
    <thetext>Looks like we have this problem in other places as well where TypeReference have a different type binding (without the type use annotations).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2308157</commentid>
    <comment_count>2</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-09-18 02:16:27 -0400</bug_when>
    <thetext>Srikanth, can you take a look at this? I am discovering that many of the new tests I am adding as part of bug 409586 are failing because of this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2308286</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-09-18 06:46:19 -0400</bug_when>
    <thetext>Could you attach these tests,I&apos;ll take a look at it today. TIA.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2308396</commentid>
    <comment_count>4</comment_count>
      <attachid>235602</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-09-18 10:05:02 -0400</bug_when>
    <thetext>Created attachment 235602
Test case

Test cases with failing tests. There are about 5 tests that are failing. 

The tests need this code as a prerequisite:
https://bugs.eclipse.org/bugs/attachment.cgi?id=235525&amp;action=diff</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2308580</commentid>
    <comment_count>5</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-09-18 17:29:17 -0400</bug_when>
    <thetext>let me guess:

When copySE8AnnotationsToType() writes to
  local.type
it should write the same also to
  typeRef.resolvedType
(if valid binding ...)

I haven&apos;t tried this, it&apos;s pure theory :)

Now that we have mergeAnnotationsIntoType() it could even be done inside there.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2309472</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-09-21 06:43:38 -0400</bug_when>
    <thetext>Fix released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=b66bc0ca466232b8b3006ed38a5137923b03416c.

Jay, I didn&apos;t add a test since you have tests. If they show any problems,
please reopen.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2309638</commentid>
    <comment_count>7</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-09-23 01:07:31 -0400</bug_when>
    <thetext>Most fixes seem to be addressed, but for the following one:
try {
} catch (@Marker NullPointerException | @Marker ArrayIndexOutOfBoundsException e) {
}

Here, the first annotation seem to be added to the UnionType rather than the TypeReference of the &apos;NullPointerException&apos;. This eventually annotates the binding of the RuntimeException. Is this what is expected?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2310837</commentid>
    <comment_count>8</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-09-25 13:02:16 -0400</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #7)
&gt; Most fixes seem to be addressed, but for the following one:
&gt; try {
&gt; } catch (@Marker NullPointerException | @Marker
&gt; ArrayIndexOutOfBoundsException e) {
&gt; }

I have fixed this along with fix for bug 409586.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>235602</attachid>
            <date>2013-09-18 10:05:00 -0400</date>
            <delta_ts>2013-09-18 10:05:02 -0400</delta_ts>
            <desc>Test case</desc>
            <filename>Testcase-for-bug-417388.patch</filename>
            <type>text/plain</type>
            <size>42265</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMAojUCBvcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5tb2RlbApkaWZmIC0tZ2l0IHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20v
VHlwZUJpbmRpbmdUZXN0czMwOC5qYXZhIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9k
b20vVHlwZUJpbmRpbmdUZXN0czMwOC5qYXZhCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAw
MDAwMDAuLjFlMmMwNTkKLS0tIC9kZXYvbnVsbAorKysgc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL2RvbS9UeXBlQmluZGluZ1Rlc3RzMzA4LmphdmEKQEAgLTAsMCArMSw5MTIgQEAKKy8q
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqDQorICogQ29weXJpZ2h0IChjKSAyMDExLCAyMDEzIElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJv
Z3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCisgKiBhcmUgbWFkZSBhdmFpbGFi
bGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCisg
KiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBh
dA0KKyAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sDQorICogDQor
ICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0
aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQ0KKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1Ap
IGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3Nl
cw0KKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmlj
YXRpb24gb2YgdGhlIEpDUC4NCisgKg0KKyAqIENvbnRyaWJ1dG9yczoNCisgKiAgICAgSUJNIENv
cnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uDQorICogICAgIFN0ZXBo
YW4gSGVycm1hbm4gLSBDb250cmlidXRpb24gZm9yDQorICoJCQkJCQkJCWJ1ZyAzOTIwOTkgLSBb
MS44XVtjb21waWxlcl1bbnVsbF0gQXBwbHkgbnVsbCBhbm5vdGF0aW9uIG9uIHR5cGVzIGZvciBu
dWxsIGFuYWx5c2lzDQorICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQorcGFja2FnZSBvcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5kb207DQorDQoraW1wb3J0IGphdmEudXRpbC5MaXN0Ow0KKw0K
K2ltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdDsNCisNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmNvcmUuSUNvbXBpbGF0aW9uVW5pdDsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9t
LkFTVDsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLkFTVE5vZGU7DQoraW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5BcnJheUNyZWF0aW9uOw0KK2ltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuY29yZS5kb20uQXJyYXlUeXBlOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29y
ZS5kb20uQ2FzdEV4cHJlc3Npb247DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5D
YXRjaENsYXVzZTsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLkNvbXBpbGF0aW9u
VW5pdDsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLkVuaGFuY2VkRm9yU3RhdGVt
ZW50Ow0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uRmllbGREZWNsYXJhdGlvbjsN
CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLklBbm5vdGF0aW9uQmluZGluZzsNCitp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLklUeXBlQmluZGluZzsNCitpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmNvcmUuZG9tLklmU3RhdGVtZW50Ow0KK2ltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuY29yZS5kb20uSW5zdGFuY2VvZkV4cHJlc3Npb247DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5jb3JlLmRvbS5NZXRob2REZWNsYXJhdGlvbjsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNv
cmUuZG9tLlBhcmFtZXRlcml6ZWRUeXBlOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5k
b20uU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbjsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNv
cmUuZG9tLlRyeVN0YXRlbWVudDsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLlR5
cGU7DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5UeXBlRGVjbGFyYXRpb247DQor
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5UeXBlTWV0aG9kUmVmZXJlbmNlOw0KK2lt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uVHlwZVBhcmFtZXRlcjsNCitpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmNvcmUuZG9tLlVuaW9uVHlwZTsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmNvcmUuZG9tLlZhcmlhYmxlRGVjbGFyYXRpb25FeHByZXNzaW9uOw0KK2ltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuY29yZS5kb20uVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50Ow0KK2ltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuY29yZS5kb20uVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudDsNCitp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLldpbGRjYXJkVHlwZTsNCisNCitwdWJsaWMg
Y2xhc3MgVHlwZUJpbmRpbmdUZXN0czMwOCBleHRlbmRzIENvbnZlcnRlclRlc3RTZXR1cCB7DQor
DQorCUlDb21waWxhdGlvblVuaXQgd29ya2luZ0NvcHk7DQorDQorCXB1YmxpYyBzdGF0aWMgVGVz
dCBzdWl0ZSgpIHsNCisJCXJldHVybiBidWlsZE1vZGVsVGVzdFN1aXRlKFR5cGVCaW5kaW5nVGVz
dHMzMDguY2xhc3MpOw0KKwl9DQorCXB1YmxpYyB2b2lkIHNldFVwU3VpdGUoKSB0aHJvd3MgRXhj
ZXB0aW9uIHsNCisJCXN1cGVyLnNldFVwU3VpdGUoKTsgICAgICAgICAgICAgICAgICAgIA0KKwkJ
dGhpcy5hc3QgPSBBU1QubmV3QVNUKEFTVC5KTFM4KTsNCisJfQ0KKwlwdWJsaWMgVHlwZUJpbmRp
bmdUZXN0czMwOChTdHJpbmcgdGVzdE5hbWUpew0KKwkJc3VwZXIodGVzdE5hbWUpOw0KKwl9DQor
CXN0YXRpYyB7DQorLy8JCVRFU1RTX05VTUJFUlMgPSBuZXcgaW50W10geyB9Ow0KKy8vCQlURVNU
U19SQU5HRSA9IG5ldyBpbnRbXSB7IH07DQorLy8JCVRFU1RTX05BTUVTID0gbmV3IFN0cmluZ1td
IHsidGVzdDAyMiJ9Ow0KKwl9DQorCS8vIExvbmUgdGVzdCB0byB2ZXJpZnkgdGhhdCBtdWx0aXBs
ZSBhbm5vdGF0aW9ucyBvZiBhbGwgdGhyZWUga2luZHMgYXJlIGFjY2VwdGVkLiBBbGwgb3RoZXIg
dGVzdHMgd2lsbCB1c2Ugb25seSBtYXJrZXIgYW5ub3RhdGlvbnMNCisJcHVibGljIHZvaWQgdGVz
dDAwMCgpIHRocm93cyBFeGNlcHRpb24gew0KKwkJU3RyaW5nIGNvbnRlbnRzID0gDQorCQkJCQki
cHVibGljIGNsYXNzIFggZXh0ZW5kcyBATWFya2VyIEBTaW5nbGVNZW1iZXIoMCkgQE5vcm1hbCh2
YWx1ZSA9IDApIE9iamVjdCB7XG4iICsNCisJCQkJCSJ9XG4iICsNCisJCQkJCSJAamF2YS5sYW5n
LmFubm90YXRpb24uVGFyZ2V0IChqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZS5UWVBF
X1VTRSlcbiIgKw0KKwkJCQkJIkBpbnRlcmZhY2UgTWFya2VyIHt9XG4iICsNCisJCQkJCSJAamF2
YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0IChqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlw
ZS5UWVBFX1VTRSlcbiIgKw0KKwkJCQkJIkBpbnRlcmZhY2UgU2luZ2xlTWVtYmVyIHsgaW50IHZh
bHVlKCkgZGVmYXVsdCAwO31cbiIgKw0KKwkJCQkJIkBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJn
ZXQgKGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArDQorCQkJ
CQkiQGludGVyZmFjZSBOb3JtYWwgeyBpbnQgdmFsdWUoKSBkZWZhdWx0IDA7fVxuIjsNCisJCQ0K
KwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTgvc3JjL1gu
amF2YSIsIHRydWUvKnJlc29sdmUqLyk7DQorCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVChjb250
ZW50cywgdGhpcy53b3JraW5nQ29weSk7DQorCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0
aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7
DQorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkg
bm9kZTsNCisJCWFzc2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDApOw0KKwkJTGlz
dCB0eXBlcyA9IGNvbXBpbGF0aW9uVW5pdC50eXBlcygpOw0KKwkJYXNzZXJ0RXF1YWxzKCJJbmNv
cnJlY3Qgbm8gb2YgdHlwZXMiLCA0LCB0eXBlcy5zaXplKCkpOw0KKwkJVHlwZURlY2xhcmF0aW9u
IHR5cGVEZWNsID0gKFR5cGVEZWNsYXJhdGlvbikgdHlwZXMuZ2V0KDApOw0KKwkJVHlwZSB0eXBl
ID0gdHlwZURlY2wuZ2V0U3VwZXJjbGFzc1R5cGUoKTsNCisJCWFzc2VydE5vdE51bGwoIlN1cGVy
IGNsYXNzIHNob3VsZCBub3QgYmUgbnVsbCIsIHR5cGUpOw0KKwkJDQorCQl2ZXJpZnlBbm5vdGF0
aW9uT25UeXBlKHR5cGUsIG5ldyBTdHJpbmdbXXsiQE1hcmtlcigpIiwgIkBTaW5nbGVNZW1iZXIo
dmFsdWUgPSAwKSIsICJATm9ybWFsKHZhbHVlID0gMCkifSk7DQorCX0NCisJLy8gRmllbGREZWNs
YXJhdGlvbiA6Oj0gTW9kaWZpZXJzb3B0IFR5cGUgVmFyaWFibGVEZWNsYXJhdG9ycyAnOycNCisJ
cHVibGljIHZvaWQgdGVzdDAwMSgpIHRocm93cyBFeGNlcHRpb24gew0KKwkJU3RyaW5nIGNvbnRl
bnRzID0gDQorCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsNCisJCQkJCQkiICAgIEBNYXJrZXIg
aW50IHg7XG4iICsNCisJCQkJCQkifVxuIiArDQorCQkJCQkJIkBqYXZhLmxhbmcuYW5ub3RhdGlv
bi5UYXJnZXQgKGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiAr
DQorCQkJCQkJIkBpbnRlcmZhY2UgTWFya2VyIHt9XG4iOw0KKw0KKwkJdGhpcy53b3JraW5nQ29w
eSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVyMTgvc3JjL1guamF2YSIsIHRydWUvKnJlc29s
dmUqLyk7DQorCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVChjb250ZW50cywgdGhpcy53b3JraW5n
Q29weSk7DQorCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2Rl
LkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7DQorCQlDb21waWxhdGlvblVu
aXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsNCisJCWFzc2VydFBy
b2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDApOw0KKwkJTGlzdCB0eXBlcyA9IGNvbXBpbGF0
aW9uVW5pdC50eXBlcygpOw0KKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3Qgbm8gb2YgdHlwZXMi
LCAyLCB0eXBlcy5zaXplKCkpOw0KKwkJVHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsID0gKFR5cGVE
ZWNsYXJhdGlvbikgdHlwZXMuZ2V0KDApOw0KKwkJRmllbGREZWNsYXJhdGlvbltdIGZpZWxkcyA9
IHR5cGVEZWNsLmdldEZpZWxkcygpOw0KKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgZmllbGQi
LCAxLCBmaWVsZHMubGVuZ3RoKTsNCisJCUZpZWxkRGVjbGFyYXRpb24gZmllbGQgPSBmaWVsZHNb
MF07DQorCQl2ZXJpZnlBbm5vdGF0aW9uT25UeXBlKGZpZWxkLmdldFR5cGUoKSwgbmV3IFN0cmlu
Z1tdeyJATWFya2VyKCkifSk7DQorCX0NCisJLy8gVFlQRTogICBNZXRob2RIZWFkZXJOYW1lIDo6
PSBNb2RpZmllcnNvcHQgVHlwZVBhcmFtZXRlcnMgVHlwZSAnSWRlbnRpZmllcicgJygnDQorCXB1
YmxpYyB2b2lkIHRlc3QwMDIoKSB0aHJvd3MgRXhjZXB0aW9uIHsNCisJCS8vIE5PVEUgdG8gc2Vs
ZjogYW5ub3RhdGlvbiBvbiByZXR1cm4gdHlwZSByZW1vdmVkIHRvIG1ha2UgdGhlIHRlc3QgY29k
ZSBjb21waWxlOw0KKwkJU3RyaW5nIGNvbnRlbnRzID0gDQorCQkJCQkJInB1YmxpYyBjbGFzcyBY
IHtcbiIgKw0KKwkJCQkJCSIgICAgQE1hcmtlciA8QE1hcmtlcjIgVD4gaW50IHgoKSB7IHJldHVy
biAxMDsgfTtcbiIgKw0KKwkJCQkJCSJ9XG4iICsNCisJCQkJCQkiQGphdmEubGFuZy5hbm5vdGF0
aW9uLlRhcmdldCAoamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGUuVFlQRV9QQVJBTUVU
RVIpXG4iICsNCisJCQkJCQkiQGludGVyZmFjZSBNYXJrZXIye31cbiIgKw0KKwkJCQkJCSJAamF2
YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0IChqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlw
ZS5UWVBFX1VTRSlcbiIgKw0KKwkJCQkJCSJAaW50ZXJmYWNlIE1hcmtlciB7fVxuIjsNCisNCisJ
CXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE4L3NyYy9YLmph
dmEiLCB0cnVlLypyZXNvbHZlKi8pOw0KKwkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoY29udGVu
dHMsIHRoaXMud29ya2luZ0NvcHkpOw0KKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlv
biB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOw0K
KwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5v
ZGU7DQorCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAwKTsNCisJCUxpc3Qg
dHlwZXMgPSBjb21waWxhdGlvblVuaXQudHlwZXMoKTsNCisJCWFzc2VydEVxdWFscygiSW5jb3Jy
ZWN0IG5vIG9mIHR5cGVzIiwgMywgdHlwZXMuc2l6ZSgpKTsNCisJCVR5cGVEZWNsYXJhdGlvbiB0
eXBlRGVjbCA9IChUeXBlRGVjbGFyYXRpb24pIHR5cGVzLmdldCgwKTsNCisJCU1ldGhvZERlY2xh
cmF0aW9uW10gbWV0aG9kcyA9IHR5cGVEZWNsLmdldE1ldGhvZHMoKTsNCisJCWFzc2VydEVxdWFs
cygiSW5jb3JyZWN0IG1ldGhvZCIsIDEsIG1ldGhvZHMubGVuZ3RoKTsNCisJCU1ldGhvZERlY2xh
cmF0aW9uIG1ldGhvZCA9IG1ldGhvZHNbMF07DQorCQlMaXN0IHBhcmFtcyA9IG1ldGhvZC50eXBl
UGFyYW1ldGVycygpOw0KKwkJVHlwZVBhcmFtZXRlciBwYXJhbSA9IChUeXBlUGFyYW1ldGVyKSBw
YXJhbXMuZ2V0KDApOw0KKwkJSVR5cGVCaW5kaW5nIGJpbmRpbmcgPSBwYXJhbS5yZXNvbHZlQmlu
ZGluZygpOw0KKwkJdmVyaWZ5QW5ub3RhdGlvbnNPbkJpbmRpbmcoYmluZGluZywgbmV3IFN0cmlu
Z1tdeyJATWFya2VyMigpIn0pOw0KKwkJdmVyaWZ5QW5ub3RhdGlvbk9uVHlwZShtZXRob2QuZ2V0
UmV0dXJuVHlwZTIoKSwgbmV3IFN0cmluZ1tdeyJATWFya2VyKCkifSk7DQorCX0NCisJLyoNCisJ
Ly8gVFlQRTogICBNZXRob2RIZWFkZXJOYW1lIDo6PSBNb2RpZmllcnNvcHQgVHlwZSAnSWRlbnRp
ZmllcicgJygnDQorCXB1YmxpYyB2b2lkIHRlc3QwMDMoKSB0aHJvd3MgRXhjZXB0aW9uIHsNCisJ
CXRoaXMucnVuTmVnYXRpdmVUZXN0KA0KKwkJCQluZXcgU3RyaW5nW10gew0KKwkJCQkJIlguamF2
YSIsDQorCQkJCQkicHVibGljIGNsYXNzIFgge1xuIiArDQorCQkJCQkiICAgIEBNYXJrZXIgaW50
IHgoKSB7IHJldHVybiAxMDsgfTtcbiIgKw0KKwkJCQkJIiAgICBab3JrIHo7XG4iICsNCisJCQkJ
CSJ9XG4iICsNCisJCQkJCSJAamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0IChqYXZhLmxhbmcu
YW5ub3RhdGlvbi5FbGVtZW50VHlwZS5UWVBFX1BBUkFNRVRFUilcbiIgKw0KKwkJCQkJIkBpbnRl
cmZhY2UgTWFya2VyIHt9XG4iLA0KKwkJCQkJDQorCQkJCQkiamF2YS9sYW5nL2Fubm90YXRpb24v
RWxlbWVudFR5cGUuamF2YSIsDQorCQkJCQkicGFja2FnZSBqYXZhLmxhbmcuYW5ub3RhdGlvbjtc
biIrDQorCQkJCQkicHVibGljIGVudW0gRWxlbWVudFR5cGUge1xuIiArDQorCQkJCQkiICAgIFRZ
UEUsXG4iICsNCisJCQkJCSIgICAgRklFTEQsXG4iICsNCisJCQkJCSIgICAgTUVUSE9ELFxuIiAr
DQorCQkJCQkiICAgIFBBUkFNRVRFUixcbiIgKw0KKwkJCQkJIiAgICBDT05TVFJVQ1RPUixcbiIg
Kw0KKwkJCQkJIiAgICBMT0NBTF9WQVJJQUJMRSxcbiIgKw0KKwkJCQkJIiAgICBBTk5PVEFUSU9O
X1RZUEUsXG4iICsNCisJCQkJCSIgICAgUEFDS0FHRSxcbiIgKw0KKwkJCQkJIiAgICBUWVBFX1BB
UkFNRVRFUixcbiIgKw0KKwkJCQkJIiAgICBUWVBFX1VTRVxuIiArDQorCQkJCQkifVxuIg0KKwkJ
CQl9LA0KKwkJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCQkiMS4gRVJST1IgaW4gWC5qYXZhIChh
dCBsaW5lIDIpXG4iICsgDQorCQkJCSIJQE1hcmtlciBpbnQgeCgpIHsgcmV0dXJuIDEwOyB9O1xu
IiArIA0KKwkJCQkiCV5eXl5eXl5cbiIgKyANCisJCQkJIlRoZSBhbm5vdGF0aW9uIEBNYXJrZXIg
aXMgZGlzYWxsb3dlZCBmb3IgdGhpcyBsb2NhdGlvblxuIiArIA0KKwkJCQkiLS0tLS0tLS0tLVxu
IiArIA0KKwkJCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDMpXG4iICsgDQorCQkJCSIJ
Wm9yayB6O1xuIiArIA0KKwkJCQkiCV5eXl5cbiIgKyANCisJCQkJIlpvcmsgY2Fubm90IGJlIHJl
c29sdmVkIHRvIGEgdHlwZVxuIiArIA0KKwkJCQkiLS0tLS0tLS0tLVxuIik7DQorCX0NCisJKi8N
CisJLy8gRm9ybWFsUGFyYW1ldGVyIDo6PSBNb2RpZmllcnNvcHQgVHlwZSBWYXJpYWJsZURlY2xh
cmF0b3JJZE9yVGhpcw0KKwlwdWJsaWMgdm9pZCB0ZXN0MDA0KCkgdGhyb3dzIEV4Y2VwdGlvbiB7
DQorCQlTdHJpbmcgY29udGVudHMgPSANCisJCQkJCQkicHVibGljIGNsYXNzIFgge1xuIiArDQor
CQkJCQkJIiAgICBpbnQgeChATWFya2VyIGludCBwKSB7IHJldHVybiAxMDsgfTtcbiIgKw0KKwkJ
CQkJCSJ9XG4iICsNCisJCQkJCQkiQGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldCAoamF2YS5s
YW5nLmFubm90YXRpb24uRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsNCisJCQkJCQkiQGludGVy
ZmFjZSBNYXJrZXIge31cbiI7DQorDQorCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0Nv
cHkoIi9Db252ZXJ0ZXIxOC9zcmMvWC5qYXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsNCisJCUFTVE5v
ZGUgbm9kZSA9IGJ1aWxkQVNUKGNvbnRlbnRzLCB0aGlzLndvcmtpbmdDb3B5KTsNCisJCWFzc2Vy
dEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5J
VCwgbm9kZS5nZXROb2RlVHlwZSgpKTsNCisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVu
aXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOw0KKwkJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBp
bGF0aW9uVW5pdCwgMCk7DQorCQlMaXN0IHR5cGVzID0gY29tcGlsYXRpb25Vbml0LnR5cGVzKCk7
DQorCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCBubyBvZiB0eXBlcyIsIDIsIHR5cGVzLnNpemUo
KSk7DQorCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2wgPSAoVHlwZURlY2xhcmF0aW9uKSB0eXBl
cy5nZXQoMCk7DQorCQlNZXRob2REZWNsYXJhdGlvbltdIG1ldGhvZHMgPSB0eXBlRGVjbC5nZXRN
ZXRob2RzKCk7DQorCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCBtZXRob2QiLCAxLCBtZXRob2Rz
Lmxlbmd0aCk7DQorCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2QgPSBtZXRob2RzWzBdOw0KKwkJ
TGlzdCBwYXJhbXMgPSBtZXRob2QucGFyYW1ldGVycygpOw0KKwkJU2luZ2xlVmFyaWFibGVEZWNs
YXJhdGlvbiBwYXJhbSA9IChTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uKSBwYXJhbXMuZ2V0KDAp
Ow0KKwkJSVR5cGVCaW5kaW5nIGJpbmRpbmcgPSBwYXJhbS5yZXNvbHZlQmluZGluZygpLmdldFR5
cGUoKTsNCisJCQ0KKwkJdmVyaWZ5QW5ub3RhdGlvbnNPbkJpbmRpbmcoYmluZGluZywgbmV3IFN0
cmluZ1tdeyJATWFya2VyKCkifSk7DQorCQl2ZXJpZnlBbm5vdGF0aW9uT25UeXBlKHBhcmFtLmdl
dFR5cGUoKSwgbmV3IFN0cmluZ1tdeyJATWFya2VyKCkifSk7DQorCX0NCisJLy8gRm9ybWFsUGFy
YW1ldGVyIDo6PSBNb2RpZmllcnNvcHQgVHlwZSBQdXNoWmVyb1R5cGVBbm5vdGF0aW9ucyAnLi4u
JyBWYXJpYWJsZURlY2xhcmF0b3JJZE9yVGhpcw0KKwlwdWJsaWMgdm9pZCB0ZXN0MDA1KCkgdGhy
b3dzIEV4Y2VwdGlvbiB7DQorCQlTdHJpbmcgY29udGVudHMgPSANCisJCQkJInB1YmxpYyBjbGFz
cyBYIHtcbiIgKw0KKwkJCQkJCSIgICAgaW50IHgoQE1hcmtlciBpbnQgLi4uIHApIHsgcmV0dXJu
IDEwOyB9O1xuIiArDQorCQkJCQkJIn1cbiIgKw0KKwkJCQkJCSJAamF2YS5sYW5nLmFubm90YXRp
b24uVGFyZ2V0IChqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIg
Kw0KKwkJCQkJCSJAaW50ZXJmYWNlIE1hcmtlciB7fVxuIjsNCisNCisJCXRoaXMud29ya2luZ0Nv
cHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE4L3NyYy9YLmphdmEiLCB0cnVlLypyZXNv
bHZlKi8pOw0KKwkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoY29udGVudHMsIHRoaXMud29ya2lu
Z0NvcHkpOw0KKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9k
ZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOw0KKwkJQ29tcGlsYXRpb25V
bml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7DQorCQlhc3NlcnRQ
cm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAwKTsNCisJCUxpc3QgdHlwZXMgPSBjb21waWxh
dGlvblVuaXQudHlwZXMoKTsNCisJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IG5vIG9mIHR5cGVz
IiwgMiwgdHlwZXMuc2l6ZSgpKTsNCisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbCA9IChUeXBl
RGVjbGFyYXRpb24pIHR5cGVzLmdldCgwKTsNCisJCU1ldGhvZERlY2xhcmF0aW9uW10gbWV0aG9k
cyA9IHR5cGVEZWNsLmdldE1ldGhvZHMoKTsNCisJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IG1l
dGhvZCIsIDEsIG1ldGhvZHMubGVuZ3RoKTsNCisJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZCA9
IG1ldGhvZHNbMF07DQorCQlMaXN0IHBhcmFtcyA9IG1ldGhvZC5wYXJhbWV0ZXJzKCk7DQorCQlT
aW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIHBhcmFtID0gKFNpbmdsZVZhcmlhYmxlRGVjbGFyYXRp
b24pIHBhcmFtcy5nZXQoMCk7DQorCQlJVHlwZUJpbmRpbmcgYmluZGluZyA9IHBhcmFtLnJlc29s
dmVCaW5kaW5nKCkuZ2V0VHlwZSgpOw0KKwkJdmVyaWZ5QW5ub3RhdGlvbnNPbkJpbmRpbmcoYmlu
ZGluZywgbmV3IFN0cmluZ1tdeyJATWFya2VyKCkifSk7DQorCQkvLyBGb3IgQXJyYXlCaW5kaW5n
LCBtaWdodCBoYXZlIHRvIGdldCB0aGUgYW5ub3RhdGlvbnMgZnJvbSB0aGUgbGVhZiB0eXBlDQor
CQl2ZXJpZnlBbm5vdGF0aW9uT25UeXBlKHBhcmFtLmdldFR5cGUoKSwgbmV3IFN0cmluZ1tdeyJA
TWFya2VyKCkifSk7DQorCX0NCisNCisJLy8gRm9ybWFsUGFyYW1ldGVyIDo6PSBNb2RpZmllcnNv
cHQgVHlwZSBAMzA4Li4uIFR5cGVBbm5vdGF0aW9ucyAnLi4uJyBWYXJpYWJsZURlY2xhcmF0b3JJ
ZE9yVGhpcw0KKwlwdWJsaWMgdm9pZCB0ZXN0MDA2KCkgdGhyb3dzIEV4Y2VwdGlvbiB7DQorCQkJ
U3RyaW5nIGNvbnRlbnRzID0gDQorCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsNCisJCQkJCQki
ICAgIGludCB4KEBNYXJrZXIgaW50IFtdIEBNYXJrZXIgLi4uIHApIHsgcmV0dXJuIDEwOyB9O1xu
IiArDQorCQkJCQkJIn1cbiIgKw0KKwkJCQkJCSJAamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0
IChqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKw0KKwkJCQkJ
CSJAaW50ZXJmYWNlIE1hcmtlciB7fVxuIjsNCisNCisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRX
b3JraW5nQ29weSgiL0NvbnZlcnRlcjE4L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOw0K
KwkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoY29udGVudHMsIHRoaXMud29ya2luZ0NvcHkpOw0K
KwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxB
VElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOw0KKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBp
bGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7DQorCQlhc3NlcnRQcm9ibGVtc1Np
emUoY29tcGlsYXRpb25Vbml0LCAwKTsNCisJCUxpc3QgdHlwZXMgPSBjb21waWxhdGlvblVuaXQu
dHlwZXMoKTsNCisJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IG5vIG9mIHR5cGVzIiwgMiwgdHlw
ZXMuc2l6ZSgpKTsNCisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbCA9IChUeXBlRGVjbGFyYXRp
b24pIHR5cGVzLmdldCgwKTsNCisJCU1ldGhvZERlY2xhcmF0aW9uW10gbWV0aG9kcyA9IHR5cGVE
ZWNsLmdldE1ldGhvZHMoKTsNCisJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IG1ldGhvZCIsIDEs
IG1ldGhvZHMubGVuZ3RoKTsNCisJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZCA9IG1ldGhvZHNb
MF07DQorCQlMaXN0IHBhcmFtcyA9IG1ldGhvZC5wYXJhbWV0ZXJzKCk7DQorCQlTaW5nbGVWYXJp
YWJsZURlY2xhcmF0aW9uIHBhcmFtID0gKFNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24pIHBhcmFt
cy5nZXQoMCk7DQorCQlJVHlwZUJpbmRpbmcgYmluZGluZyA9IHBhcmFtLnJlc29sdmVCaW5kaW5n
KCkuZ2V0VHlwZSgpOw0KKwkJSUFubm90YXRpb25CaW5kaW5nW10gYW5ub3RhdGlvbnMgPSBiaW5k
aW5nLmdldFR5cGVVc2VBbm5vdGF0aW9ucygpOw0KKwkJYXNzZXJ0Tm90TnVsbCgiU2hvdWxkIG5v
dCBiZSBudWxsIiwgYW5ub3RhdGlvbnMpOw0KKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgdHlw
ZSB1c2UgYW5ub3RhdGlvbnMiLCAzLCBhbm5vdGF0aW9ucy5sZW5ndGgpOw0KKwkJYXNzZXJ0TnVs
bCgiU2hvdWxkIGJlIG51bGwiLCBhbm5vdGF0aW9uc1swXSk7DQorCQlhc3NlcnRFcXVhbHMoIklu
Y29ycmVjdCBhbm5vdGF0aW9uIiwgIkBNYXJrZXIoKSIsIGFubm90YXRpb25zWzFdLnRvU3RyaW5n
KCkpOw0KKwkJYXNzZXJ0TnVsbCgiU2hvdWxkIGJlIG51bGwiLCBhbm5vdGF0aW9uc1syXSk7DQor
CQlUeXBlIHR5cGUgPSBwYXJhbS5nZXRUeXBlKCk7DQorCQl2ZXJpZnlBbm5vdGF0aW9uT25UeXBl
KHR5cGUsIG5ldyBTdHJpbmdbXXtudWxsLCAiQE1hcmtlcigpIiwgbnVsbH0pOw0KKwl9DQorCS8v
IFVuaW9uVHlwZSA6Oj0gVHlwZQ0KKwkvLyBVbmlvblR5cGUgOjo9IFVuaW9uVHlwZSAnfCcgVHlw
ZQ0KKwlwdWJsaWMgdm9pZCB0ZXN0MDA3KCkgdGhyb3dzIEV4Y2VwdGlvbiB7DQorCQlTdHJpbmcg
Y29udGVudHMgPSANCisJCQkJCQkicHVibGljIGNsYXNzIFgge1xuIiArDQorCQkJCQkJIiAgICBp
bnQgeCgpIHtcbiIgKw0KKwkJCQkJCSIgICAgICAgIHRyeSB7XG4iICsNCisJCQkJCQkiICAgICAg
ICB9IGNhdGNoIChATWFya2VyIE51bGxQb2ludGVyRXhjZXB0aW9uIHwgQE1hcmtlciBBcnJheUlu
ZGV4T3V0T2ZCb3VuZHNFeGNlcHRpb24gZSkge1xuIiArDQorCQkJCQkJIiAgICAgICAgfVxuIiAr
DQorCQkJCQkJIiAgICAgICAgcmV0dXJuIDEwO1xuIiArDQorCQkJCQkJIiAgICB9XG4iICsNCisJ
CQkJCQkifVxuIiArDQorCQkJCQkJIkBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQgKGphdmEu
bGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArDQorCQkJCQkJIkBpbnRl
cmZhY2UgTWFya2VyIHt9XG4iOw0KKw0KKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdD
b3B5KCIvQ29udmVydGVyMTgvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7DQorCQlBU1RO
b2RlIG5vZGUgPSBidWlsZEFTVChjb250ZW50cywgdGhpcy53b3JraW5nQ29weSk7DQorCQlhc3Nl
cnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VO
SVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7DQorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25V
bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsNCisJCWFzc2VydFByb2JsZW1zU2l6ZShjb21w
aWxhdGlvblVuaXQsIDApOw0KKwkJTGlzdCB0eXBlcyA9IGNvbXBpbGF0aW9uVW5pdC50eXBlcygp
Ow0KKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3Qgbm8gb2YgdHlwZXMiLCAyLCB0eXBlcy5zaXpl
KCkpOw0KKwkJVHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsID0gKFR5cGVEZWNsYXJhdGlvbikgdHlw
ZXMuZ2V0KDApOw0KKwkJTWV0aG9kRGVjbGFyYXRpb25bXSBtZXRob2RzID0gdHlwZURlY2wuZ2V0
TWV0aG9kcygpOw0KKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgbWV0aG9kIiwgMSwgbWV0aG9k
cy5sZW5ndGgpOw0KKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kID0gbWV0aG9kc1swXTsNCisJ
CUxpc3Qgc3RhdGVtZW50cyA9IG1ldGhvZC5nZXRCb2R5KCkuc3RhdGVtZW50cygpOw0KKwkJVHJ5
U3RhdGVtZW50IHRyeVN0ID0gKFRyeVN0YXRlbWVudCkgc3RhdGVtZW50cy5nZXQoMCk7DQorCQlD
YXRjaENsYXVzZSBjYXRjaENsID0gKENhdGNoQ2xhdXNlKSB0cnlTdC5jYXRjaENsYXVzZXMoKS5n
ZXQoMCk7DQorCQlVbmlvblR5cGUgdW5pb24gPSAoVW5pb25UeXBlKSBjYXRjaENsLmdldEV4Y2Vw
dGlvbigpLmdldFR5cGUoKTsNCisJCXR5cGVzID0gdW5pb24udHlwZXMoKTsNCisJCWFzc2VydEVx
dWFscygiSW5jb3JyZWN0IHVuaW9uIHR5cGVzIiwgMiwgdHlwZXMuc2l6ZSgpKTsNCisJCVR5cGUg
dHlwZSA9IChUeXBlKSB0eXBlcy5nZXQoMCk7DQorCQl2ZXJpZnlBbm5vdGF0aW9uT25UeXBlKHR5
cGUsIG5ldyBTdHJpbmdbXXsiQE1hcmtlcigpIn0pOw0KKwkJDQorCQl0eXBlID0gKFR5cGUpIHR5
cGVzLmdldCgxKTsNCisJCXZlcmlmeUFubm90YXRpb25PblR5cGUodHlwZSwgbmV3IFN0cmluZ1td
eyJATWFya2VyKCkifSk7DQorCX0JDQorCS8qDQorCS8vIExvY2FsVmFyaWFibGVEZWNsYXJhdGlv
biA6Oj0gVHlwZSBQdXNoTW9kaWZpZXJzIFZhcmlhYmxlRGVjbGFyYXRvcnMNCisgICAgLy8gTG9j
YWxWYXJpYWJsZURlY2xhcmF0aW9uIDo6PSBNb2RpZmllcnMgVHlwZSBQdXNoUmVhbE1vZGlmaWVy
cyBWYXJpYWJsZURlY2xhcmF0b3JzDQorCXB1YmxpYyB2b2lkIHRlc3QwMDgoKSB0aHJvd3MgRXhj
ZXB0aW9uIHsNCisJCXRoaXMucnVuTmVnYXRpdmVUZXN0KA0KKwkJCQluZXcgU3RyaW5nW10gew0K
KwkJCQkJIlguamF2YSIsDQorCQkJCQkicHVibGljIGNsYXNzIFgge1xuIiArDQorCQkJCQkiICAg
IGludCB4KCkge1xuIiArDQorCQkJCQkiICAgICAgICBATWFya2VyIGludCBwO1xuIiArDQorCQkJ
CQkiICAgICAgICBmaW5hbCBATWFya2VyIGludCBxO1xuIiArDQorCQkJCQkiICAgICAgICBATWFy
a2VyIGZpbmFsIGludCByO1xuIiArDQorCQkJCQkiICAgICAgICByZXR1cm4gMTA7XG4iICsNCisJ
CQkJCSIgICAgfVxuIiArDQorCQkJCQkiICAgIFpvcmsgejtcbiIgKw0KKwkJCQkJIn1cbiIgKw0K
KwkJCQkJIkBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQgKGphdmEubGFuZy5hbm5vdGF0aW9u
LkVsZW1lbnRUeXBlLlRZUEVfUEFSQU1FVEVSKVxuIiArDQorCQkJCQkiQGludGVyZmFjZSBNYXJr
ZXIge31cbiIsDQorCQkJCQkNCisJCQkJCSJqYXZhL2xhbmcvYW5ub3RhdGlvbi9FbGVtZW50VHlw
ZS5qYXZhIiwNCisJCQkJCSJwYWNrYWdlIGphdmEubGFuZy5hbm5vdGF0aW9uO1xuIisNCisJCQkJ
CSJwdWJsaWMgZW51bSBFbGVtZW50VHlwZSB7XG4iICsNCisJCQkJCSIgICAgVFlQRSxcbiIgKw0K
KwkJCQkJIiAgICBGSUVMRCxcbiIgKw0KKwkJCQkJIiAgICBNRVRIT0QsXG4iICsNCisJCQkJCSIg
ICAgUEFSQU1FVEVSLFxuIiArDQorCQkJCQkiICAgIENPTlNUUlVDVE9SLFxuIiArDQorCQkJCQki
ICAgIExPQ0FMX1ZBUklBQkxFLFxuIiArDQorCQkJCQkiICAgIEFOTk9UQVRJT05fVFlQRSxcbiIg
Kw0KKwkJCQkJIiAgICBQQUNLQUdFLFxuIiArDQorCQkJCQkiICAgIFRZUEVfUEFSQU1FVEVSLFxu
IiArDQorCQkJCQkiICAgIFRZUEVfVVNFXG4iICsNCisJCQkJCSJ9XG4iDQorCQkJCX0sDQorCQkJ
CSItLS0tLS0tLS0tXG4iICsgDQorCQkJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMylc
biIgKyANCisJCQkJIglATWFya2VyIGludCBwO1xuIiArIA0KKwkJCQkiCV5eXl5eXl5cbiIgKyAN
CisJCQkJIlRoZSBhbm5vdGF0aW9uIEBNYXJrZXIgaXMgZGlzYWxsb3dlZCBmb3IgdGhpcyBsb2Nh
dGlvblxuIiArIA0KKwkJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCQkiMi4gRVJST1IgaW4gWC5q
YXZhIChhdCBsaW5lIDQpXG4iICsgDQorCQkJCSIJZmluYWwgQE1hcmtlciBpbnQgcTtcbiIgKyAN
CisJCQkJIgkgICAgICBeXl5eXl5eXG4iICsgDQorCQkJCSJUaGUgYW5ub3RhdGlvbiBATWFya2Vy
IGlzIGRpc2FsbG93ZWQgZm9yIHRoaXMgbG9jYXRpb25cbiIgKyANCisJCQkJIi0tLS0tLS0tLS1c
biIgKyANCisJCQkJIjMuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA1KVxuIiArIA0KKwkJCQki
CUBNYXJrZXIgZmluYWwgaW50IHI7XG4iICsgDQorCQkJCSIJXl5eXl5eXlxuIiArIA0KKwkJCQki
VGhlIGFubm90YXRpb24gQE1hcmtlciBpcyBkaXNhbGxvd2VkIGZvciB0aGlzIGxvY2F0aW9uXG4i
ICsgDQorCQkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJCSI0LiBFUlJPUiBpbiBYLmphdmEgKGF0
IGxpbmUgOClcbiIgKyANCisJCQkJIglab3JrIHo7XG4iICsgDQorCQkJCSIJXl5eXlxuIiArIA0K
KwkJCQkiWm9yayBjYW5ub3QgYmUgcmVzb2x2ZWQgdG8gYSB0eXBlXG4iICsgDQorCQkJCSItLS0t
LS0tLS0tXG4iKTsNCisJfQ0KKwkqLw0KKwkvLyBSZXNvdXJjZSA6Oj0gVHlwZSBQdXNoTW9kaWZp
ZXJzIFZhcmlhYmxlRGVjbGFyYXRvcklkIEVudGVyVmFyaWFibGUgJz0nIEZvcmNlTm9EaWV0IFZh
cmlhYmxlSW5pdGlhbGl6ZXIgUmVzdG9yZURpZXQgRXhpdFZhcmlhYmxlV2l0aEluaXRpYWxpemF0
aW9uDQorCS8vIFJlc291cmNlIDo6PSBNb2RpZmllcnMgVHlwZSBQdXNoUmVhbE1vZGlmaWVycyBW
YXJpYWJsZURlY2xhcmF0b3JJZCBFbnRlclZhcmlhYmxlICc9JyBGb3JjZU5vRGlldCBWYXJpYWJs
ZUluaXRpYWxpemVyIFJlc3RvcmVEaWV0IEV4aXRWYXJpYWJsZVdpdGhJbml0aWFsaXphdGlvbg0K
KwlwdWJsaWMgdm9pZCB0ZXN0MDA5KCkgdGhyb3dzIEV4Y2VwdGlvbiB7DQorCQkvLyBUT0RPOiBm
aWd1cmUgb3V0IHdoeSBqYXZhLmxhbmcuQXV0b0Nsb3NlYWJsZSBpcyBub3QgYXZhaWxhYmxlDQor
CQlTdHJpbmcgY29udGVudHMgPSANCisJCQkJInBhY2thZ2UgamF2YS5sYW5nO1xuIiArDQorCQkJ
CSJwdWJsaWMgY2xhc3MgWCB7XG4iICsNCisJCQkJIiAgICBwdWJsaWMgdm9pZCB4KCkgdGhyb3dz
IEV4Y2VwdGlvbiB7XG4iICsNCisJCQkJIiAgICAgICAgdHJ5IChATWFya2VyIExvY2FsU3RyZWFt
IHAgPSBudWxsOyBmaW5hbCBATWFya2VyIExvY2FsU3RyZWFtIHEgPSBudWxsOyBATWFya2VyIGZp
bmFsIExvY2FsU3RyZWFtIHIgPSBudWxsKSB7fVxuIiArDQorCQkJCSIgICAgfVxuIiArDQorCQkJ
CSJ9XG4iICsNCisJCQkJImNsYXNzIExvY2FsU3RyZWFtIGltcGxlbWVudHMgQXV0b0Nsb3NlYWJs
ZSB7XG4iICsNCisJCQkJIiAgICBwdWJsaWMgdm9pZCBjbG9zZSgpIHRocm93cyBFeGNlcHRpb24g
e31cbiIgKw0KKwkJCQkifVxuIiArDQorCQkJCSJpbnRlcmZhY2UgQXV0b0Nsb3NlYWJsZSB7fVxu
IiArDQorCQkJCSJAamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0IChqYXZhLmxhbmcuYW5ub3Rh
dGlvbi5FbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKw0KKwkJCQkiQGludGVyZmFjZSBNYXJrZXIg
e31cbiI7DQorDQorCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0
ZXIxOC9zcmMvamF2YS9sYW5nL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7DQorCQlBU1ROb2Rl
IG5vZGUgPSBidWlsZEFTVChjb250ZW50cywgdGhpcy53b3JraW5nQ29weSk7DQorCQlhc3NlcnRF
cXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQs
IG5vZGUuZ2V0Tm9kZVR5cGUoKSk7DQorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0
ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsNCisJCWFzc2VydFByb2JsZW1zU2l6ZShjb21waWxh
dGlvblVuaXQsIDApOw0KKwkJTGlzdCB0eXBlcyA9IGNvbXBpbGF0aW9uVW5pdC50eXBlcygpOw0K
KwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3Qgbm8gb2YgdHlwZXMiLCA0LCB0eXBlcy5zaXplKCkp
Ow0KKwkJVHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsID0gKFR5cGVEZWNsYXJhdGlvbikgdHlwZXMu
Z2V0KDApOw0KKwkJTWV0aG9kRGVjbGFyYXRpb25bXSBtZXRob2RzID0gdHlwZURlY2wuZ2V0TWV0
aG9kcygpOw0KKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgbWV0aG9kIiwgMSwgbWV0aG9kcy5s
ZW5ndGgpOw0KKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kID0gbWV0aG9kc1swXTsNCisJCUxp
c3Qgc3RhdGVtZW50cyA9IG1ldGhvZC5nZXRCb2R5KCkuc3RhdGVtZW50cygpOw0KKwkJVHJ5U3Rh
dGVtZW50IHRyeVN0ID0gKFRyeVN0YXRlbWVudCkgc3RhdGVtZW50cy5nZXQoMCk7DQorCQlMaXN0
IHJlc291cmNlcyA9IHRyeVN0LnJlc291cmNlcygpOw0KKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJl
Y3Qgbm8gb2YgcmVzb3VyY2VzIiwgMywgcmVzb3VyY2VzLnNpemUoKSk7DQorCQlWYXJpYWJsZURl
Y2xhcmF0aW9uRXhwcmVzc2lvbiByZXNvdXJjZSA9IChWYXJpYWJsZURlY2xhcmF0aW9uRXhwcmVz
c2lvbikgcmVzb3VyY2VzLmdldCgwKTsNCisJCVR5cGUgdHlwZSA9IHJlc291cmNlLmdldFR5cGUo
KTsNCisJCWFzc2VydE5vdE51bGwoIlJlc291cmNlIHR5cGUgc2hvdWxkIG5vdCBiZSBudWxsIiwg
dHlwZSk7DQorCQl2ZXJpZnlBbm5vdGF0aW9uT25UeXBlKHR5cGUsIG5ldyBTdHJpbmdbXXsiQE1h
cmtlcigpIn0pOw0KKwkJDQorCQlyZXNvdXJjZSA9IChWYXJpYWJsZURlY2xhcmF0aW9uRXhwcmVz
c2lvbikgcmVzb3VyY2VzLmdldCgxKTsNCisJCXR5cGUgPSByZXNvdXJjZS5nZXRUeXBlKCk7DQor
CQlhc3NlcnROb3ROdWxsKCJSZXNvdXJjZSB0eXBlIHNob3VsZCBub3QgYmUgbnVsbCIsIHR5cGUp
Ow0KKwkJdmVyaWZ5QW5ub3RhdGlvbk9uVHlwZSh0eXBlLCBuZXcgU3RyaW5nW117IkBNYXJrZXIo
KSJ9KTsNCisJCQ0KKwkJcmVzb3VyY2UgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkV4cHJlc3Npb24p
IHJlc291cmNlcy5nZXQoMik7DQorCQl0eXBlID0gcmVzb3VyY2UuZ2V0VHlwZSgpOw0KKwkJYXNz
ZXJ0Tm90TnVsbCgiUmVzb3VyY2UgdHlwZSBzaG91bGQgbm90IGJlIG51bGwiLCB0eXBlKTsNCisJ
CXZlcmlmeUFubm90YXRpb25PblR5cGUodHlwZSwgbmV3IFN0cmluZ1tdeyJATWFya2VyKCkifSk7
DQorCX0NCisJLy8gRW5oYW5jZWRGb3JTdGF0ZW1lbnRIZWFkZXJJbml0IDo6PSAnZm9yJyAnKCcg
VHlwZSBQdXNoTW9kaWZpZXJzIElkZW50aWZpZXIgRGltc29wdA0KKwkvLyBFbmhhbmNlZEZvclN0
YXRlbWVudEhlYWRlckluaXQgOjo9ICdmb3InICcoJyBNb2RpZmllcnMgVHlwZSBQdXNoUmVhbE1v
ZGlmaWVycyBJZGVudGlmaWVyIERpbXNvcHQNCisJcHVibGljIHZvaWQgdGVzdDAxMCgpIHRocm93
cyBFeGNlcHRpb24gew0KKwkJU3RyaW5nIGNvbnRlbnRzID0gDQorCQkJCSJwdWJsaWMgY2xhc3Mg
WCB7XG4iICsNCisJCQkJCQkiICAgIGludCB4KCkge1xuIiArDQorCQkJCQkJIiAgICAgICAgZm9y
IChATWFya2VyIGludCBpOiBuZXcgaW50WzNdKSB7fVxuIiArDQorCQkJCQkJIiAgICAgICAgZm9y
IChmaW5hbCBATWFya2VyIGludCBpOiBuZXcgaW50WzNdKSB7fVxuIiArDQorCQkJCQkJIiAgICAg
ICAgZm9yIChATWFya2VyIGZpbmFsIGludCBpOiBuZXcgaW50WzNdKSB7fVxuIiArDQorCQkJCQkJ
IiAgICAgICAgcmV0dXJuIDEwO1xuIiArDQorCQkJCQkJIiAgICB9XG4iICsNCisJCQkJCQkifVxu
IiArDQorCQkJCQkJIkBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQgKGphdmEubGFuZy5hbm5v
dGF0aW9uLkVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArDQorCQkJCQkJIkBpbnRlcmZhY2UgTWFy
a2VyIHt9XG4iOw0KKw0KKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29u
dmVydGVyMTgvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7DQorCQlBU1ROb2RlIG5vZGUg
PSBidWlsZEFTVChjb250ZW50cywgdGhpcy53b3JraW5nQ29weSk7DQorCQlhc3NlcnRFcXVhbHMo
Ik5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUu
Z2V0Tm9kZVR5cGUoKSk7DQorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENv
bXBpbGF0aW9uVW5pdCkgbm9kZTsNCisJCWFzc2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVu
aXQsIDApOw0KKwkJTGlzdCB0eXBlcyA9IGNvbXBpbGF0aW9uVW5pdC50eXBlcygpOw0KKwkJYXNz
ZXJ0RXF1YWxzKCJJbmNvcnJlY3Qgbm8gb2YgdHlwZXMiLCAyLCB0eXBlcy5zaXplKCkpOw0KKwkJ
VHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsID0gKFR5cGVEZWNsYXJhdGlvbikgdHlwZXMuZ2V0KDAp
Ow0KKwkJTWV0aG9kRGVjbGFyYXRpb25bXSBtZXRob2RzID0gdHlwZURlY2wuZ2V0TWV0aG9kcygp
Ow0KKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgbWV0aG9kIiwgMSwgbWV0aG9kcy5sZW5ndGgp
Ow0KKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kID0gbWV0aG9kc1swXTsNCisJCUxpc3Qgc3Rh
dGVtZW50cyA9IG1ldGhvZC5nZXRCb2R5KCkuc3RhdGVtZW50cygpOw0KKwkJRW5oYW5jZWRGb3JT
dGF0ZW1lbnQgZm9yU3RtdCA9IChFbmhhbmNlZEZvclN0YXRlbWVudCkgc3RhdGVtZW50cy5nZXQo
MCk7DQorCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIHBhcmFtID0gZm9yU3RtdC5nZXRQYXJh
bWV0ZXIoKTsNCisJCVR5cGUgdHlwZSA9IHBhcmFtLmdldFR5cGUoKTsNCisJCWFzc2VydE5vdE51
bGwoIlJlc291cmNlIHR5cGUgc2hvdWxkIG5vdCBiZSBudWxsIiwgdHlwZSk7DQorCQlJVHlwZUJp
bmRpbmcgYmluZGluZyA9IHBhcmFtLnJlc29sdmVCaW5kaW5nKCkuZ2V0VHlwZSgpOw0KKwkJLy9U
T0RPOiBiaW5kaW5nIG9idGFpbmVkIHdpdGggdGhlIGZvbGxvd2luZyBjb2RlIHNob3VsZCBiZSB0
ZXN0ZWQgdG9vLg0KKy8vCQlJVHlwZUJpbmRpbmcgYmluZGluZyA9IHR5cGUucmVzb2x2ZUJpbmRp
bmcoKTsNCisJCXZlcmlmeUFubm90YXRpb25zT25CaW5kaW5nKGJpbmRpbmcsIG5ldyBTdHJpbmdb
XXsiQE1hcmtlcigpIn0pOw0KKwl9CQ0KKwkvKg0KKwkvLyBBbm5vdGF0aW9uTWV0aG9kSGVhZGVy
TmFtZSA6Oj0gTW9kaWZpZXJzb3B0IFR5cGVQYXJhbWV0ZXJzIFR5cGUgJ0lkZW50aWZpZXInICco
Jw0KKwkvLyBBbm5vdGF0aW9uTWV0aG9kSGVhZGVyTmFtZSA6Oj0gTW9kaWZpZXJzb3B0IFR5cGUg
J0lkZW50aWZpZXInICcoJw0KKwlwdWJsaWMgdm9pZCB0ZXN0MDExKCkgdGhyb3dzIEV4Y2VwdGlv
biB7DQorCQl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgNCisJCQkJbmV3IFN0cmluZ1tdIHsNCisJCQkJ
CSJYLmphdmEiLA0KKwkJCQkJInB1YmxpYyBAaW50ZXJmYWNlIFggeyBcbiIgKw0KKwkJCQkJIglw
dWJsaWMgQE1hcmtlciBTdHJpbmcgdmFsdWUoKTsgXG4iICsNCisJCQkJCSIJQE1hcmtlciBTdHJp
bmcgdmFsdWUyKCk7IFxuIiArDQorCQkJCQkiCUBNYXJrZXIgcHVibGljIFN0cmluZyB2YWx1ZTMo
KTsgXG4iICsNCisJCQkJCSIJcHVibGljIEBNYXJrZXIgPFQ+IEBNYXJrZXIgU3RyaW5nIHZhbHVl
NCgpOyBcbiIgKw0KKwkJCQkJIglATWFya2VyIDxUPiBATWFya2VyIFN0cmluZyB2YWx1ZTUoKTsg
XG4iICsNCisJCQkJCSIJQE1hcmtlciBwdWJsaWMgPFQ+IEBNYXJrZXIgU3RyaW5nIHZhbHVlNigp
OyBcbiIgKw0KKwkJCQkJIn1cbiIgKw0KKwkJCQkJDQorCQkJCQkiQGphdmEubGFuZy5hbm5vdGF0
aW9uLlRhcmdldCAoamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGUuVFlQRV9QQVJBTUVU
RVIpXG4iICsNCisJCQkJCSJAaW50ZXJmYWNlIE1hcmtlciB7fVxuIiwNCisJCQkJCQ0KKwkJCQkJ
ImphdmEvbGFuZy9hbm5vdGF0aW9uL0VsZW1lbnRUeXBlLmphdmEiLA0KKwkJCQkJInBhY2thZ2Ug
amF2YS5sYW5nLmFubm90YXRpb247XG4iKw0KKwkJCQkJInB1YmxpYyBlbnVtIEVsZW1lbnRUeXBl
IHtcbiIgKw0KKwkJCQkJIiAgICBUWVBFLFxuIiArDQorCQkJCQkiICAgIEZJRUxELFxuIiArDQor
CQkJCQkiICAgIE1FVEhPRCxcbiIgKw0KKwkJCQkJIiAgICBQQVJBTUVURVIsXG4iICsNCisJCQkJ
CSIgICAgQ09OU1RSVUNUT1IsXG4iICsNCisJCQkJCSIgICAgTE9DQUxfVkFSSUFCTEUsXG4iICsN
CisJCQkJCSIgICAgQU5OT1RBVElPTl9UWVBFLFxuIiArDQorCQkJCQkiICAgIFBBQ0tBR0UsXG4i
ICsNCisJCQkJCSIgICAgVFlQRV9QQVJBTUVURVIsXG4iICsNCisJCQkJCSIgICAgVFlQRV9VU0Vc
biIgKw0KKwkJCQkJIn1cbiINCisJCQkJfSwNCisJCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkJ
IjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAyKVxuIiArIA0KKwkJCQkiCXB1YmxpYyBATWFy
a2VyIFN0cmluZyB2YWx1ZSgpOyBcbiIgKyANCisJCQkJIgkgICAgICAgXl5eXl5eXlxuIiArIA0K
KwkJCQkiVGhlIGFubm90YXRpb24gQE1hcmtlciBpcyBkaXNhbGxvd2VkIGZvciB0aGlzIGxvY2F0
aW9uXG4iICsgDQorCQkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJCSIyLiBFUlJPUiBpbiBYLmph
dmEgKGF0IGxpbmUgMylcbiIgKyANCisJCQkJIglATWFya2VyIFN0cmluZyB2YWx1ZTIoKTsgXG4i
ICsgDQorCQkJCSIJXl5eXl5eXlxuIiArIA0KKwkJCQkiVGhlIGFubm90YXRpb24gQE1hcmtlciBp
cyBkaXNhbGxvd2VkIGZvciB0aGlzIGxvY2F0aW9uXG4iICsgDQorCQkJCSItLS0tLS0tLS0tXG4i
ICsgDQorCQkJCSIzLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNClcbiIgKyANCisJCQkJIglA
TWFya2VyIHB1YmxpYyBTdHJpbmcgdmFsdWUzKCk7IFxuIiArIA0KKwkJCQkiCV5eXl5eXl5cbiIg
KyANCisJCQkJIlRoZSBhbm5vdGF0aW9uIEBNYXJrZXIgaXMgZGlzYWxsb3dlZCBmb3IgdGhpcyBs
b2NhdGlvblxuIiArIA0KKwkJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCQkiNC4gRVJST1IgaW4g
WC5qYXZhIChhdCBsaW5lIDUpXG4iICsgDQorCQkJCSIJcHVibGljIEBNYXJrZXIgPFQ+IEBNYXJr
ZXIgU3RyaW5nIHZhbHVlNCgpOyBcbiIgKyANCisJCQkJIgkgICAgICAgXl5eXl5eXlxuIiArIA0K
KwkJCQkiVGhlIGFubm90YXRpb24gQE1hcmtlciBpcyBkaXNhbGxvd2VkIGZvciB0aGlzIGxvY2F0
aW9uXG4iICsgDQorCQkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJCSI1LiBFUlJPUiBpbiBYLmph
dmEgKGF0IGxpbmUgNSlcbiIgKyANCisJCQkJIglwdWJsaWMgQE1hcmtlciA8VD4gQE1hcmtlciBT
dHJpbmcgdmFsdWU0KCk7IFxuIiArIA0KKwkJCQkiCSAgICAgICAgICAgICAgICAgICBeXl5eXl5e
XG4iICsgDQorCQkJCSJTeW50YXggZXJyb3IsIHR5cGUgYW5ub3RhdGlvbnMgYXJlIGlsbGVnYWwg
aGVyZVxuIiArIA0KKwkJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCQkiNi4gRVJST1IgaW4gWC5q
YXZhIChhdCBsaW5lIDUpXG4iICsgDQorCQkJCSIJcHVibGljIEBNYXJrZXIgPFQ+IEBNYXJrZXIg
U3RyaW5nIHZhbHVlNCgpOyBcbiIgKyANCisJCQkJIgkgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgXl5eXl5eXl5cbiIgKyANCisJCQkJIkFubm90YXRpb24gYXR0cmlidXRlcyBjYW5u
b3QgYmUgZ2VuZXJpY1xuIiArIA0KKwkJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCQkiNy4gRVJS
T1IgaW4gWC5qYXZhIChhdCBsaW5lIDYpXG4iICsgDQorCQkJCSIJQE1hcmtlciA8VD4gQE1hcmtl
ciBTdHJpbmcgdmFsdWU1KCk7IFxuIiArIA0KKwkJCQkiCV5eXl5eXl5cbiIgKyANCisJCQkJIlRo
ZSBhbm5vdGF0aW9uIEBNYXJrZXIgaXMgZGlzYWxsb3dlZCBmb3IgdGhpcyBsb2NhdGlvblxuIiAr
IA0KKwkJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCQkiOC4gRVJST1IgaW4gWC5qYXZhIChhdCBs
aW5lIDYpXG4iICsgDQorCQkJCSIJQE1hcmtlciA8VD4gQE1hcmtlciBTdHJpbmcgdmFsdWU1KCk7
IFxuIiArIA0KKwkJCQkiCSAgICAgICAgICAgIF5eXl5eXl5cbiIgKyANCisJCQkJIlN5bnRheCBl
cnJvciwgdHlwZSBhbm5vdGF0aW9ucyBhcmUgaWxsZWdhbCBoZXJlXG4iICsgDQorCQkJCSItLS0t
LS0tLS0tXG4iICsgDQorCQkJCSI5LiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNilcbiIgKyAN
CisJCQkJIglATWFya2VyIDxUPiBATWFya2VyIFN0cmluZyB2YWx1ZTUoKTsgXG4iICsgDQorCQkJ
CSIJICAgICAgICAgICAgICAgICAgICAgICAgICAgXl5eXl5eXl5cbiIgKyANCisJCQkJIkFubm90
YXRpb24gYXR0cmlidXRlcyBjYW5ub3QgYmUgZ2VuZXJpY1xuIiArIA0KKwkJCQkiLS0tLS0tLS0t
LVxuIiArIA0KKwkJCQkiMTAuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA3KVxuIiArIA0KKwkJ
CQkiCUBNYXJrZXIgcHVibGljIDxUPiBATWFya2VyIFN0cmluZyB2YWx1ZTYoKTsgXG4iICsgDQor
CQkJCSIJXl5eXl5eXlxuIiArIA0KKwkJCQkiVGhlIGFubm90YXRpb24gQE1hcmtlciBpcyBkaXNh
bGxvd2VkIGZvciB0aGlzIGxvY2F0aW9uXG4iICsgDQorCQkJCSItLS0tLS0tLS0tXG4iICsgDQor
CQkJCSIxMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDcpXG4iICsgDQorCQkJCSIJQE1hcmtl
ciBwdWJsaWMgPFQ+IEBNYXJrZXIgU3RyaW5nIHZhbHVlNigpOyBcbiIgKyANCisJCQkJIgkgICAg
ICAgICAgICAgICAgICAgXl5eXl5eXlxuIiArIA0KKwkJCQkiU3ludGF4IGVycm9yLCB0eXBlIGFu
bm90YXRpb25zIGFyZSBpbGxlZ2FsIGhlcmVcbiIgKyANCisJCQkJIi0tLS0tLS0tLS1cbiIgKyAN
CisJCQkJIjEyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNylcbiIgKyANCisJCQkJIglATWFy
a2VyIHB1YmxpYyA8VD4gQE1hcmtlciBTdHJpbmcgdmFsdWU2KCk7IFxuIiArIA0KKwkJCQkiCSAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBeXl5eXl5eXlxuIiArIA0KKwkJCQkiQW5u
b3RhdGlvbiBhdHRyaWJ1dGVzIGNhbm5vdCBiZSBnZW5lcmljXG4iICsgDQorCQkJCSItLS0tLS0t
LS0tXG4iKTsNCisJfQ0KKwkvLyBQcmltYXJ5Tm9OZXdBcnJheSA6Oj0gUHJpbWl0aXZlVHlwZSBE
aW1zICcuJyAnY2xhc3MnDQorCS8vIFByaW1hcnlOb05ld0FycmF5IDo6PSBQcmltaXRpdmVUeXBl
ICcuJyAnY2xhc3MnDQorCXB1YmxpYyB2b2lkIHRlc3QwMTIoKSB0aHJvd3MgRXhjZXB0aW9uIHsN
CisJCXRoaXMucnVuTmVnYXRpdmVUZXN0KA0KKwkJCQluZXcgU3RyaW5nW10gew0KKwkJCQkJIlgu
amF2YSIsDQorCQkJCQkicHVibGljIGNsYXNzIFggeyBcbiIgKw0KKwkJCQkJIglwdWJsaWMgdm9p
ZCB2YWx1ZSgpIHtcbiIgKw0KKwkJCQkJIgkJT2JqZWN0IG8gPSBATWFya2VyIGludC5jbGFzcztc
biIgKw0KKwkJCQkJIgkJT2JqZWN0IG8yID0gQE1hcmtlciBpbnQgQE1hcmtlcltdIFtdIEBNYXJr
ZXJbXS5jbGFzcztcbiIgKw0KKwkJCQkJIiAgIH1cbiIgKw0KKwkJCQkJIn1cbiINCisJCQkJfSwN
CisJCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGlu
ZSAzKVxuIiArIA0KKwkJCQkiCU9iamVjdCBvID0gQE1hcmtlciBpbnQuY2xhc3M7XG4iICsgDQor
CQkJCSIJICAgICAgICAgICBeXl5eXl5eXG4iICsgDQorCQkJCSJTeW50YXggZXJyb3IsIHR5cGUg
YW5ub3RhdGlvbnMgYXJlIGlsbGVnYWwgaGVyZVxuIiArIA0KKwkJCQkiLS0tLS0tLS0tLVxuIiAr
IA0KKwkJCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDQpXG4iICsgDQorCQkJCSIJT2Jq
ZWN0IG8yID0gQE1hcmtlciBpbnQgQE1hcmtlcltdIFtdIEBNYXJrZXJbXS5jbGFzcztcbiIgKyAN
CisJCQkJIgkgICAgICAgICAgICBeXl5eXl5eXG4iICsgDQorCQkJCSJTeW50YXggZXJyb3IsIHR5
cGUgYW5ub3RhdGlvbnMgYXJlIGlsbGVnYWwgaGVyZVxuIiArIA0KKwkJCQkiLS0tLS0tLS0tLVxu
IiArIA0KKwkJCQkiMy4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDQpXG4iICsgDQorCQkJCSIJ
T2JqZWN0IG8yID0gQE1hcmtlciBpbnQgQE1hcmtlcltdIFtdIEBNYXJrZXJbXS5jbGFzcztcbiIg
KyANCisJCQkJIgkgICAgICAgICAgICAgICAgICAgICAgICBeXl5eXl5eXG4iICsgDQorCQkJCSJT
eW50YXggZXJyb3IsIHR5cGUgYW5ub3RhdGlvbnMgYXJlIGlsbGVnYWwgaGVyZVxuIiArIA0KKwkJ
CQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCQkiNC4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDQp
XG4iICsgDQorCQkJCSIJT2JqZWN0IG8yID0gQE1hcmtlciBpbnQgQE1hcmtlcltdIFtdIEBNYXJr
ZXJbXS5jbGFzcztcbiIgKyANCisJCQkJIgkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgXl5eXl5eXlxuIiArIA0KKwkJCQkiU3ludGF4IGVycm9yLCB0eXBlIGFubm90YXRpb25z
IGFyZSBpbGxlZ2FsIGhlcmVcbiIgKyANCisJCQkJIi0tLS0tLS0tLS1cbiIpOw0KKwl9DQorCSov
DQorCS8vIFJlZmVyZW5jZUV4cHJlc3Npb24gOjo9IFByaW1pdGl2ZVR5cGUgRGltcyAnOjonIE5v
bldpbGRUeXBlQXJndW1lbnRzb3B0IElkZW50aWZpZXJPck5ldw0KKwlwdWJsaWMgdm9pZCB0ZXN0
MDEzKCkgdGhyb3dzIEV4Y2VwdGlvbiB7DQorCQlTdHJpbmcgY29udGVudHMgPSANCisJCQkJImlu
dGVyZmFjZSBJIHtcbiIgKw0KKwkJCQkiICAgIE9iamVjdCBjb3B5KGludCBbXSBpYSk7XG4iICsN
CisJCQkJIn1cbiIgKw0KKwkJCQkicHVibGljIGNsYXNzIFggIHtcbiIgKw0KKwkJCQkiICAgIHB1
YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsNCisJCQkJIiAgICAg
ICAgSSBpID0gQE1hcmtlciBpbnQgQE1hcmtlciBbXTo6Y2xvbmU7XG4iICsNCisJCQkJIiAgICB9
XG4iICsNCisJCQkJIn1cbiIgKw0KKwkJCQkiQGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldCAo
amF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsNCisJCQkJIkBp
bnRlcmZhY2UgTWFya2VyIHt9XG4iOw0KKw0KKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtp
bmdDb3B5KCIvQ29udmVydGVyMTgvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7DQorCQlB
U1ROb2RlIG5vZGUgPSBidWlsZEFTVChjb250ZW50cywgdGhpcy53b3JraW5nQ29weSk7DQorCQlh
c3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9O
X1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7DQorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRp
b25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsNCisJCWFzc2VydFByb2JsZW1zU2l6ZShj
b21waWxhdGlvblVuaXQsIDApOw0KKwkJTGlzdCB0eXBlcyA9IGNvbXBpbGF0aW9uVW5pdC50eXBl
cygpOw0KKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3Qgbm8gb2YgdHlwZXMiLCAzLCB0eXBlcy5z
aXplKCkpOw0KKwkJVHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsID0gKFR5cGVEZWNsYXJhdGlvbikg
dHlwZXMuZ2V0KDEpOw0KKwkJTWV0aG9kRGVjbGFyYXRpb25bXSBtZXRob2RzID0gdHlwZURlY2wu
Z2V0TWV0aG9kcygpOw0KKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgbWV0aG9kIiwgMSwgbWV0
aG9kcy5sZW5ndGgpOw0KKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kID0gbWV0aG9kc1swXTsN
CisJCUxpc3Qgc3RhdGVtZW50cyA9IG1ldGhvZC5nZXRCb2R5KCkuc3RhdGVtZW50cygpOw0KKwkJ
VmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCBzdG10ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25T
dGF0ZW1lbnQpIHN0YXRlbWVudHMuZ2V0KDApOw0KKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdt
ZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgc3RtdC5mcmFnbWVu
dHMoKS5nZXQoMCk7DQorCQlUeXBlTWV0aG9kUmVmZXJlbmNlIGxhbWJkYSA9IChUeXBlTWV0aG9k
UmVmZXJlbmNlKSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOw0KKwkJVHlwZSB0eXBlID0gbGFt
YmRhLmdldFR5cGUoKTsNCisNCisJCXZlcmlmeUFubm90YXRpb25PblR5cGUodHlwZSwgbmV3IFN0
cmluZ1tdeyJATWFya2VyKCkiLCBudWxsfSk7DQorCQl2ZXJpZnlBbm5vdGF0aW9uT25UeXBlKCgo
QXJyYXlUeXBlKSB0eXBlKS5nZXRDb21wb25lbnRUeXBlKCksIG5ldyBTdHJpbmdbXXsiQE1hcmtl
cigpIn0pOw0KKwl9DQorCS8vIEFycmF5Q3JlYXRpb25XaXRob3V0QXJyYXlJbml0aWFsaXplciA6
Oj0gJ25ldycgUHJpbWl0aXZlVHlwZSBEaW1XaXRoT3JXaXRoT3V0RXhwcnMNCisJLy8gQXJyYXlD
cmVhdGlvbldpdGhBcnJheUluaXRpYWxpemVyIDo6PSAnbmV3JyBQcmltaXRpdmVUeXBlIERpbVdp
dGhPcldpdGhPdXRFeHBycyBBcnJheUluaXRpYWxpemVyDQorCXB1YmxpYyB2b2lkIHRlc3QwMTQo
KSB0aHJvd3MgRXhjZXB0aW9uIHsNCisJCVN0cmluZyBjb250ZW50cyA9IA0KKwkJCQkicHVibGlj
IGNsYXNzIFggIHtcbiIgKw0KKwkJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmlu
ZyBbXSBhcmdzKSB7XG4iICsNCisJCQkJIiAgICAgICAgaW50IGkgW10gPSBuZXcgQE1hcmtlciBp
bnQgQE1hcmtlcjIgWzRdO1xuIiArDQorCQkJCSIgICAgICAgIGludCBqIFtdID0gbmV3IEBNYXJr
ZXIyIGludCBATWFya2VyIFtdIHsgMTAgfTtcbiIgKw0KKwkJCQkiICAgIH1cbiIgKw0KKwkJCQki
fVxuIiArDQorCQkJCSJAamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0IChqYXZhLmxhbmcuYW5u
b3RhdGlvbi5FbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKw0KKwkJCQkiQGludGVyZmFjZSBNYXJr
ZXIge31cbiIgKw0KKwkJCQkiQGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldCAoamF2YS5sYW5n
LmFubm90YXRpb24uRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsNCisJCQkJIkBpbnRlcmZhY2Ug
TWFya2VyMiB7fVxuIjsNCisNCisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgi
L0NvbnZlcnRlcjE4L3NyYy9YLmphdmEiLCB0cnVlLypyZXNvbHZlKi8pOw0KKwkJQVNUTm9kZSBu
b2RlID0gYnVpbGRBU1QoY29udGVudHMsIHRoaXMud29ya2luZ0NvcHkpOw0KKwkJYXNzZXJ0RXF1
YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBu
b2RlLmdldE5vZGVUeXBlKCkpOw0KKwkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9
IChDb21waWxhdGlvblVuaXQpIG5vZGU7DQorCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRp
b25Vbml0LCAwKTsNCisJCUxpc3QgdHlwZXMgPSBjb21waWxhdGlvblVuaXQudHlwZXMoKTsNCisJ
CWFzc2VydEVxdWFscygiSW5jb3JyZWN0IG5vIG9mIHR5cGVzIiwgMywgdHlwZXMuc2l6ZSgpKTsN
CisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbCA9IChUeXBlRGVjbGFyYXRpb24pIHR5cGVzLmdl
dCgwKTsNCisJCU1ldGhvZERlY2xhcmF0aW9uW10gbWV0aG9kcyA9IHR5cGVEZWNsLmdldE1ldGhv
ZHMoKTsNCisJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IG1ldGhvZCIsIDEsIG1ldGhvZHMubGVu
Z3RoKTsNCisJCU1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZCA9IG1ldGhvZHNbMF07DQorCQlMaXN0
IHN0YXRlbWVudHMgPSBtZXRob2QuZ2V0Qm9keSgpLnN0YXRlbWVudHMoKTsNCisJCVZhcmlhYmxl
RGVjbGFyYXRpb25TdGF0ZW1lbnQgc3RtdCA9IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50
KSBzdGF0ZW1lbnRzLmdldCgwKTsNCisJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBmcmFn
bWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIHN0bXQuZnJhZ21lbnRzKCkuZ2V0
KDApOw0KKwkJQXJyYXlDcmVhdGlvbiBhcnJheUNyID0gKEFycmF5Q3JlYXRpb24pIGZyYWdtZW50
LmdldEluaXRpYWxpemVyKCk7DQorDQorCQlBcnJheVR5cGUgdHlwZSA9IGFycmF5Q3IuZ2V0VHlw
ZSgpOw0KKwkJdmVyaWZ5QW5ub3RhdGlvbk9uVHlwZSh0eXBlLCBuZXcgU3RyaW5nW117IkBNYXJr
ZXIyKCkiLCBudWxsfSk7DQorCQl2ZXJpZnlBbm5vdGF0aW9uT25UeXBlKHR5cGUuZ2V0Q29tcG9u
ZW50VHlwZSgpLCBuZXcgU3RyaW5nW117IkBNYXJrZXIoKSJ9KTsNCisJCQ0KKwkJc3RtdCA9IChW
YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBzdGF0ZW1lbnRzLmdldCgxKTsNCisJCWZyYWdt
ZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgc3RtdC5mcmFnbWVudHMoKS5nZXQo
MCk7DQorCQlhcnJheUNyID0gKEFycmF5Q3JlYXRpb24pIGZyYWdtZW50LmdldEluaXRpYWxpemVy
KCk7DQorCQl0eXBlID0gYXJyYXlDci5nZXRUeXBlKCk7DQorCQl2ZXJpZnlBbm5vdGF0aW9uT25U
eXBlKHR5cGUsIG5ldyBTdHJpbmdbXXsiQE1hcmtlcigpIiwgbnVsbH0pOw0KKwkJdmVyaWZ5QW5u
b3RhdGlvbk9uVHlwZSh0eXBlLmdldENvbXBvbmVudFR5cGUoKSwgbmV3IFN0cmluZ1tdeyJATWFy
a2VyMigpIn0pOw0KKwl9DQorCS8vIENhc3RFeHByZXNzaW9uIDo6PSBQdXNoTFBBUkVOIFByaW1p
dGl2ZVR5cGUgRGltc29wdCBQdXNoUlBBUkVOIEluc2lkZUNhc3RFeHByZXNzaW9uIFVuYXJ5RXhw
cmVzc2lvbg0KKwlwdWJsaWMgdm9pZCB0ZXN0MDE1KCkgdGhyb3dzIEV4Y2VwdGlvbiB7DQorCQlT
dHJpbmcgY29udGVudHMgPSANCisJCQkJInB1YmxpYyBjbGFzcyBYICB7XG4iICsNCisJCQkJIiAg
ICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykge1xuIiArDQorCQkJCSIg
ICAgICAgIGludCBpID0gKEBNYXJrZXIgaW50KSAwO1xuIiArDQorCQkJCSIgICAgICAgIGludCBq
IFtdID0gKEBNYXJrZXIgaW50IEBNYXJrZXIyIFtdKSBudWxsO1xuIiArDQorCQkJCSIgICAgfVxu
IiArDQorCQkJCSJ9XG4iICsNCisJCQkJIkBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQgKGph
dmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArDQorCQkJCSJAaW50
ZXJmYWNlIE1hcmtlciB7fVxuIiArDQorCQkJCSJAamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0
IChqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKw0KKwkJCQki
QGludGVyZmFjZSBNYXJrZXIyIHt9XG4iOw0KKw0KKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdv
cmtpbmdDb3B5KCIvQ29udmVydGVyMTgvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7DQor
CQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVChjb250ZW50cywgdGhpcy53b3JraW5nQ29weSk7DQor
CQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFU
SU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7DQorCQlDb21waWxhdGlvblVuaXQgY29tcGls
YXRpb25Vbml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsNCisJCWFzc2VydFByb2JsZW1zU2l6
ZShjb21waWxhdGlvblVuaXQsIDApOw0KKwkJTGlzdCB0eXBlcyA9IGNvbXBpbGF0aW9uVW5pdC50
eXBlcygpOw0KKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3Qgbm8gb2YgdHlwZXMiLCAzLCB0eXBl
cy5zaXplKCkpOw0KKwkJVHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsID0gKFR5cGVEZWNsYXJhdGlv
bikgdHlwZXMuZ2V0KDApOw0KKwkJTWV0aG9kRGVjbGFyYXRpb25bXSBtZXRob2RzID0gdHlwZURl
Y2wuZ2V0TWV0aG9kcygpOw0KKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgbWV0aG9kIiwgMSwg
bWV0aG9kcy5sZW5ndGgpOw0KKwkJTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kID0gbWV0aG9kc1sw
XTsNCisJCUxpc3Qgc3RhdGVtZW50cyA9IG1ldGhvZC5nZXRCb2R5KCkuc3RhdGVtZW50cygpOw0K
KwkJVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCBzdG10ID0gKFZhcmlhYmxlRGVjbGFyYXRp
b25TdGF0ZW1lbnQpIHN0YXRlbWVudHMuZ2V0KDApOw0KKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZy
YWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgc3RtdC5mcmFn
bWVudHMoKS5nZXQoMCk7DQorCQlDYXN0RXhwcmVzc2lvbiBjYXN0RXhwID0gKENhc3RFeHByZXNz
aW9uKSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOw0KKwkJVHlwZSB0eXBlID0gY2FzdEV4cC5n
ZXRUeXBlKCk7DQorCQl2ZXJpZnlBbm5vdGF0aW9uT25UeXBlKHR5cGUsIG5ldyBTdHJpbmdbXXsi
QE1hcmtlcigpIn0pOw0KKwkJDQorCQlzdG10ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1l
bnQpIHN0YXRlbWVudHMuZ2V0KDEpOw0KKwkJZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlv
bkZyYWdtZW50KSBzdG10LmZyYWdtZW50cygpLmdldCgwKTsNCisJCWNhc3RFeHAgPSAoQ2FzdEV4
cHJlc3Npb24pIGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7DQorCQlBcnJheVR5cGUgYXJyYXlU
eXBlID0gKEFycmF5VHlwZSkgY2FzdEV4cC5nZXRUeXBlKCk7DQorCQl2ZXJpZnlBbm5vdGF0aW9u
T25UeXBlKGFycmF5VHlwZSwgbmV3IFN0cmluZ1tdeyJATWFya2VyKCkiLCBudWxsfSk7DQorDQor
CQl0eXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsNCisJCXZlcmlmeUFubm90YXRp
b25PblR5cGUodHlwZSwgbmV3IFN0cmluZ1tdeyJATWFya2VyKCkifSk7DQorCX0NCisJLy8gSW5z
dGFuY2VvZkV4cHJlc3Npb24gOjo9IEluc3RhbmNlb2ZFeHByZXNzaW9uICdpbnN0YW5jZW9mJyBS
ZWZlcmVuY2VUeXBlDQorCXB1YmxpYyB2b2lkIHRlc3QwMTYoKSB0aHJvd3MgRXhjZXB0aW9uIHsN
CisJCVN0cmluZyBjb250ZW50cyA9IA0KKwkJCQkicHVibGljIGNsYXNzIFggIHtcbiIgKw0KKwkJ
CQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBhcmdzKSB7XG4iICsNCisJCQkJ
IiAgICAgICAgaWYgKGFyZ3MgaW5zdGFuY2VvZiBATWFya2VyIFN0cmluZykge1xuIiArDQorCQkJ
CSIgICAgICAgIH1cbiIgKw0KKwkJCQkiICAgIH1cbiIgKw0KKwkJCQkifVxuIiArDQorCQkJCSJA
amF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0IChqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50
VHlwZS5UWVBFX1VTRSlcbiIgKw0KKwkJCQkiQGludGVyZmFjZSBNYXJrZXIge31cbiI7DQorDQor
CQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxOC9zcmMvWC5q
YXZhIiwgdHJ1ZS8qcmVzb2x2ZSovKTsNCisJCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKGNvbnRl
bnRzLCB0aGlzLndvcmtpbmdDb3B5KTsNCisJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRp
b24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsN
CisJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBu
b2RlOw0KKwkJYXNzZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7DQorCQlMaXN0
IHR5cGVzID0gY29tcGlsYXRpb25Vbml0LnR5cGVzKCk7DQorCQlhc3NlcnRFcXVhbHMoIkluY29y
cmVjdCBubyBvZiB0eXBlcyIsIDIsIHR5cGVzLnNpemUoKSk7DQorCQlUeXBlRGVjbGFyYXRpb24g
dHlwZURlY2wgPSAoVHlwZURlY2xhcmF0aW9uKSB0eXBlcy5nZXQoMCk7DQorCQlNZXRob2REZWNs
YXJhdGlvbltdIG1ldGhvZHMgPSB0eXBlRGVjbC5nZXRNZXRob2RzKCk7DQorCQlhc3NlcnRFcXVh
bHMoIkluY29ycmVjdCBtZXRob2QiLCAxLCBtZXRob2RzLmxlbmd0aCk7DQorCQlNZXRob2REZWNs
YXJhdGlvbiBtZXRob2QgPSBtZXRob2RzWzBdOw0KKwkJTGlzdCBzdGF0ZW1lbnRzID0gbWV0aG9k
LmdldEJvZHkoKS5zdGF0ZW1lbnRzKCk7DQorCQlJZlN0YXRlbWVudCBpZlN0bXQgPSAoSWZTdGF0
ZW1lbnQpIHN0YXRlbWVudHMuZ2V0KDApOw0KKwkJSW5zdGFuY2VvZkV4cHJlc3Npb24gaW5zdGFu
Y2VPZiA9IChJbnN0YW5jZW9mRXhwcmVzc2lvbikgaWZTdG10LmdldEV4cHJlc3Npb24oKTsNCisJ
CVR5cGUgdHlwZSA9IGluc3RhbmNlT2YuZ2V0UmlnaHRPcGVyYW5kKCk7DQorCQl2ZXJpZnlBbm5v
dGF0aW9uT25UeXBlKHR5cGUsIG5ldyBTdHJpbmdbXXsiQE1hcmtlcigpIn0pOw0KKwl9DQorCS8v
IFR5cGVBcmd1bWVudCA6Oj0gUmVmZXJlbmNlVHlwZQ0KKwlwdWJsaWMgdm9pZCB0ZXN0MDE3KCkg
dGhyb3dzIEV4Y2VwdGlvbiB7DQorCQkJU3RyaW5nIGNvbnRlbnRzID0gDQorCQkJCSJwdWJsaWMg
Y2xhc3MgWCBleHRlbmRzIFk8QE1hcmtlcigxMCkgSW50ZWdlciwgU3RyaW5nPiB7fVxuIiArDQor
CQkJCSJjbGFzcyBZPFQsIFY+IHt9XG4iICsNCisJCQkJIkBqYXZhLmxhbmcuYW5ub3RhdGlvbi5U
YXJnZXQgKGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArDQor
CQkJCSJAaW50ZXJmYWNlIE1hcmtlciB7aW50IHZhbHVlKCk7fVxuIjsNCisNCisJCXRoaXMud29y
a2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlcjE4L3NyYy9YLmphdmEiLCB0cnVl
LypyZXNvbHZlKi8pOw0KKwkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1QoY29udGVudHMsIHRoaXMu
d29ya2luZ0NvcHkpOw0KKwkJYXNzZXJ0RXF1YWxzKCJOb3QgYSBjb21waWxhdGlvbiB1bml0Iiwg
QVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5vZGVUeXBlKCkpOw0KKwkJQ29tcGls
YXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5vZGU7DQorCQlh
c3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAwKTsNCisJCUxpc3QgdHlwZXMgPSBj
b21waWxhdGlvblVuaXQudHlwZXMoKTsNCisJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IG5vIG9m
IHR5cGVzIiwgMywgdHlwZXMuc2l6ZSgpKTsNCisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbCA9
IChUeXBlRGVjbGFyYXRpb24pIHR5cGVzLmdldCgwKTsNCisJCVBhcmFtZXRlcml6ZWRUeXBlIHN1
cGVyQ2xhc3MgPSAoUGFyYW1ldGVyaXplZFR5cGUpIHR5cGVEZWNsLmdldFN1cGVyY2xhc3NUeXBl
KCk7DQorCQlMaXN0IGFyZ3VtZW50cyA9IHN1cGVyQ2xhc3MudHlwZUFyZ3VtZW50cygpOw0KKwkJ
YXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3Qgbm8gb2YgdHlwZSBhcmd1bWVudHMiLCAyLCBhcmd1bWVu
dHMuc2l6ZSgpKTsNCisJCVR5cGUgdHlwZSA9IChUeXBlKSBhcmd1bWVudHMuZ2V0KDApOw0KKwkJ
DQorCQl2ZXJpZnlBbm5vdGF0aW9uT25UeXBlKHR5cGUsIG5ldyBTdHJpbmdbXXsiQE1hcmtlcih2
YWx1ZSA9IDEwKSJ9KTsNCisJfQ0KKy8qDQorCS8vIFJlZmVyZW5jZVR5cGUxIDo6PSBSZWZlcmVu
Y2VUeXBlICc+Jw0KKwlwdWJsaWMgdm9pZCB0ZXN0MDE4KCkgdGhyb3dzIEV4Y2VwdGlvbiB7DQor
CQl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgNCisJCQkJbmV3IFN0cmluZ1tdIHsNCisJCQkJCSJYLmph
dmEiLA0KKwkJCQkJInB1YmxpYyBjbGFzcyBYIGV4dGVuZHMgWTxATWFya2VyIEludGVnZXI+IHt9
XG4iICsNCisJCQkJCSJjbGFzcyBZPFQ+IHtcbiIgKw0KKwkJCQkgICAgIiAgICBab3JrIHo7XG4i
ICsNCisJCQkJCSJ9XG4iDQorCQkJCX0sDQorCQkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJCSIx
LiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMSlcbiIgKyANCisJCQkJIglwdWJsaWMgY2xhc3Mg
WCBleHRlbmRzIFk8QE1hcmtlciBJbnRlZ2VyPiB7fVxuIiArIA0KKwkJCQkiCSAgICAgICAgICAg
ICAgICAgICAgICAgICAgXl5eXl5eXG4iICsgDQorCQkJCSJNYXJrZXIgY2Fubm90IGJlIHJlc29s
dmVkIHRvIGEgdHlwZVxuIiArIA0KKwkJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCQkiMi4gRVJS
T1IgaW4gWC5qYXZhIChhdCBsaW5lIDMpXG4iICsgDQorCQkJCSIJWm9yayB6O1xuIiArIA0KKwkJ
CQkiCV5eXl5cbiIgKyANCisJCQkJIlpvcmsgY2Fubm90IGJlIHJlc29sdmVkIHRvIGEgdHlwZVxu
IiArIA0KKwkJCQkiLS0tLS0tLS0tLVxuIik7DQorCX0NCisJKi8NCisJDQorCS8vIFJlZmVyZW5j
ZVR5cGUyIDo6PSBSZWZlcmVuY2VUeXBlICc+PicNCisJcHVibGljIHZvaWQgdGVzdDAxOSgpIHRo
cm93cyBFeGNlcHRpb24gew0KKwkJU3RyaW5nIGNvbnRlbnRzID0gDQorCQkJCSJwdWJsaWMgY2xh
c3MgWDxUIGV4dGVuZHMgT2JqZWN0ICYgQ29tcGFyYWJsZTw/IHN1cGVyIEBNYXJrZXIgU3RyaW5n
Pj4ge31cbiIgKw0KKwkJCQkiY2xhc3MgWTxUPiB7fVxuIiArDQorCQkJCSJAamF2YS5sYW5nLmFu
bm90YXRpb24uVGFyZ2V0IChqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZS5UWVBFX1VT
RSlcbiIgKw0KKwkJCQkiQGludGVyZmFjZSBNYXJrZXIge31cbiI7DQorDQorCQl0aGlzLndvcmtp
bmdDb3B5ID0gZ2V0V29ya2luZ0NvcHkoIi9Db252ZXJ0ZXIxOC9zcmMvWC5qYXZhIiwgdHJ1ZS8q
cmVzb2x2ZSovKTsNCisJCUFTVE5vZGUgbm9kZSA9IGJ1aWxkQVNUKGNvbnRlbnRzLCB0aGlzLndv
cmtpbmdDb3B5KTsNCisJCWFzc2VydEVxdWFscygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFT
VE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9kZS5nZXROb2RlVHlwZSgpKTsNCisJCUNvbXBpbGF0
aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOw0KKwkJYXNz
ZXJ0UHJvYmxlbXNTaXplKGNvbXBpbGF0aW9uVW5pdCwgMCk7DQorCQlMaXN0IHR5cGVzID0gY29t
cGlsYXRpb25Vbml0LnR5cGVzKCk7DQorCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCBubyBvZiB0
eXBlcyIsIDMsIHR5cGVzLnNpemUoKSk7DQorCQlUeXBlRGVjbGFyYXRpb24gdHlwZURlY2wgPSAo
VHlwZURlY2xhcmF0aW9uKSB0eXBlcy5nZXQoMCk7DQorCQlMaXN0IHR5cGVQYXJhbXMgPSB0eXBl
RGVjbC50eXBlUGFyYW1ldGVycygpOw0KKw0KKwkJVHlwZVBhcmFtZXRlciB0eXBlUGFyYW0gPSAo
VHlwZVBhcmFtZXRlcikgdHlwZVBhcmFtcy5nZXQoMCk7DQorCQlMaXN0IGJvdW5kcyA9IHR5cGVQ
YXJhbS50eXBlQm91bmRzKCk7DQorCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCBubyBvZiB0eXBl
IGJvdW5kcyIsIDIsIGJvdW5kcy5zaXplKCkpOw0KKwkJUGFyYW1ldGVyaXplZFR5cGUgdHlwZSA9
IChQYXJhbWV0ZXJpemVkVHlwZSkgYm91bmRzLmdldCgxKTsNCisJCXR5cGVQYXJhbXMgPSB0eXBl
LnR5cGVBcmd1bWVudHMoKTsNCisJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IHR5cGUgcGFyYW1z
IiwgMSwgdHlwZVBhcmFtcy5zaXplKCkpOw0KKwkJV2lsZGNhcmRUeXBlIHdpbGRjYXJkID0gKFdp
bGRjYXJkVHlwZSl0eXBlUGFyYW1zLmdldCgwKTsNCisJCVR5cGUgYm91bmQgPSB3aWxkY2FyZC5n
ZXRCb3VuZCgpOw0KKwkJYXNzZXJ0Tm90TnVsbCgiQm91bmQgc2hvdWxkIG5vdCBiZSBudWxsIiwg
Ym91bmQpOw0KKwkJdmVyaWZ5QW5ub3RhdGlvbk9uVHlwZShib3VuZCwgbmV3IFN0cmluZ1tdeyJA
TWFya2VyKCkifSk7DQorCX0NCisJLyoNCisJLy8gUmVmZXJlbmNlVHlwZTMgOjo9IFJlZmVyZW5j
ZVR5cGUgJz4+PicNCisJcHVibGljIHZvaWQgdGVzdDAyMCgpIHRocm93cyBFeGNlcHRpb24gew0K
KwkJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoDQorCQkJCW5ldyBTdHJpbmdbXSB7DQorCQkJCQkiWC5q
YXZhIiwNCisJCQkJCSJwdWJsaWMgY2xhc3MgWDxBIGV4dGVuZHMgWDxYPFg8QE1hcmtlciBTdHJp
bmc+Pj4+IHt9XG4iICsNCisJCQkJCSJjbGFzcyBZPFQ+IHtcbiIgKw0KKwkJCQkgICAgIiAgICBa
b3JrIHo7XG4iICsNCisJCQkJCSJ9XG4iDQorIAkJCQl9LA0KKyAJCQkJIi0tLS0tLS0tLS1cbiIg
KyANCisJCQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxKVxuIiArIA0KKwkJCQkiCXB1
YmxpYyBjbGFzcyBYPEEgZXh0ZW5kcyBYPFg8WDxATWFya2VyIFN0cmluZz4+Pj4ge31cbiIgKyAN
CisJCQkJIgkgICAgICAgICAgICAgICAgICAgICAgICAgICBeXG4iICsgDQorCQkJCSJCb3VuZCBt
aXNtYXRjaDogVGhlIHR5cGUgWDxYPFN0cmluZz4+IGlzIG5vdCBhIHZhbGlkIHN1YnN0aXR1dGUg
Zm9yIHRoZSBib3VuZGVkIHBhcmFtZXRlciA8QSBleHRlbmRzIFg8WDxYPFN0cmluZz4+Pj4gb2Yg
dGhlIHR5cGUgWDxBPlxuIiArIA0KKwkJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCQkiMi4gRVJS
T1IgaW4gWC5qYXZhIChhdCBsaW5lIDEpXG4iICsgDQorCQkJCSIJcHVibGljIGNsYXNzIFg8QSBl
eHRlbmRzIFg8WDxYPEBNYXJrZXIgU3RyaW5nPj4+PiB7fVxuIiArIA0KKwkJCQkiCSAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgXlxuIiArIA0KKwkJCQkiQm91bmQgbWlzbWF0Y2g6IFRoZSB0
eXBlIFg8U3RyaW5nPiBpcyBub3QgYSB2YWxpZCBzdWJzdGl0dXRlIGZvciB0aGUgYm91bmRlZCBw
YXJhbWV0ZXIgPEEgZXh0ZW5kcyBYPFg8WDxTdHJpbmc+Pj4+IG9mIHRoZSB0eXBlIFg8QT5cbiIg
KyANCisJCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkJIjMuIEVSUk9SIGluIFguamF2YSAoYXQg
bGluZSAxKVxuIiArIA0KKwkJCQkiCXB1YmxpYyBjbGFzcyBYPEEgZXh0ZW5kcyBYPFg8WDxATWFy
a2VyIFN0cmluZz4+Pj4ge31cbiIgKyANCisJCQkJIgkgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgXl5eXl5eXl5eXl5eXl5cbiIgKyANCisJCQkJIkJvdW5kIG1pc21hdGNoOiBUaGUgdHlw
ZSBTdHJpbmcgaXMgbm90IGEgdmFsaWQgc3Vic3RpdHV0ZSBmb3IgdGhlIGJvdW5kZWQgcGFyYW1l
dGVyIDxBIGV4dGVuZHMgWDxYPFg8U3RyaW5nPj4+PiBvZiB0aGUgdHlwZSBYPEE+XG4iICsgDQor
CQkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJCSI0LiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUg
MSlcbiIgKyANCisJCQkJIglwdWJsaWMgY2xhc3MgWDxBIGV4dGVuZHMgWDxYPFg8QE1hcmtlciBT
dHJpbmc+Pj4+IHt9XG4iICsgDQorCQkJCSIJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICBeXl5eXl5cbiIgKyANCisJCQkJIk1hcmtlciBjYW5ub3QgYmUgcmVzb2x2ZWQgdG8gYSB0eXBl
XG4iICsgDQorCQkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJCSI1LiBFUlJPUiBpbiBYLmphdmEg
KGF0IGxpbmUgMylcbiIgKyANCisJCQkJIglab3JrIHo7XG4iICsgDQorCQkJCSIJXl5eXlxuIiAr
IA0KKwkJCQkiWm9yayBjYW5ub3QgYmUgcmVzb2x2ZWQgdG8gYSB0eXBlXG4iICsgDQorCQkJCSIt
LS0tLS0tLS0tXG4iKTsNCisJfQ0KKwkqLw0KKwkvLyBXaWxkY2FyZEJvdW5kcyA6Oj0gJ2V4dGVu
ZHMnIFJlZmVyZW5jZVR5cGUNCisJLy8gV2lsZGNhcmRCb3VuZHMgOjo9ICdzdXBlcicgUmVmZXJl
bmNlVHlwZQ0KKwlwdWJsaWMgdm9pZCB0ZXN0MDIxKCkgdGhyb3dzIEV4Y2VwdGlvbiB7DQorCQlT
dHJpbmcgY29udGVudHMgPSANCisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKw0KKwkJCQkiCXZv
aWQgZm9vKE1hcDxATWFya2VyID8gc3VwZXIgQE1hcmtlciBPYmplY3QsIEBNYXJrZXIgPyBleHRl
bmRzIEBNYXJrZXIgU3RyaW5nPiBtKXt9XG4iICsNCisJCQkJIiAgIHZvaWQgZ29vKE1hcDxATWFy
a2VyID8gZXh0ZW5kcyBATWFya2VyIE9iamVjdCwgQE1hcmtlciA/IHN1cGVyIEBNYXJrZXIgU3Ry
aW5nPiBtKXt9XG4iICsNCisJCQkJIn1cbiIgKw0KKwkJCQkiY2xhc3MgTWFwPEssIFY+e31cbiIg
Kw0KKwkJCQkiQGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldCAoamF2YS5sYW5nLmFubm90YXRp
b24uRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsNCisJCQkJIkBpbnRlcmZhY2UgTWFya2VyIHt9
XG4iOw0KKw0KKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVy
MTgvc3JjL1guamF2YSIsIHRydWUvKnJlc29sdmUqLyk7DQorCQlBU1ROb2RlIG5vZGUgPSBidWls
ZEFTVChjb250ZW50cywgdGhpcy53b3JraW5nQ29weSk7DQorCQlhc3NlcnRFcXVhbHMoIk5vdCBh
IGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9k
ZVR5cGUoKSk7DQorCQlDb21waWxhdGlvblVuaXQgY29tcGlsYXRpb25Vbml0ID0gKENvbXBpbGF0
aW9uVW5pdCkgbm9kZTsNCisJCWFzc2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDAp
Ow0KKwkJTGlzdCB0eXBlcyA9IGNvbXBpbGF0aW9uVW5pdC50eXBlcygpOw0KKwkJYXNzZXJ0RXF1
YWxzKCJJbmNvcnJlY3Qgbm8gb2YgdHlwZXMiLCAzLCB0eXBlcy5zaXplKCkpOw0KKwkJDQorCQlN
ZXRob2REZWNsYXJhdGlvbltdIG1ldGhvZHMgPSAoKFR5cGVEZWNsYXJhdGlvbikgdHlwZXMuZ2V0
KDApKS5nZXRNZXRob2RzKCk7DQorCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCBubyBvZiBtZXRv
ZHMiLCAyLCBtZXRob2RzLmxlbmd0aCk7DQorCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2QgPSBt
ZXRob2RzWzBdOw0KKwkJU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiBhcmcgPSAoU2luZ2xlVmFy
aWFibGVEZWNsYXJhdGlvbikgbWV0aG9kLnBhcmFtZXRlcnMoKS5nZXQoMCk7DQorCQkNCisJCQ0K
KwkJTGlzdCB0eXBlQXJncyA9ICgoUGFyYW1ldGVyaXplZFR5cGUpIGFyZy5nZXRUeXBlKCkpLnR5
cGVBcmd1bWVudHMoKTsNCisJCQ0KKwkJV2lsZGNhcmRUeXBlIHdpbGRjYXJkID0gKFdpbGRjYXJk
VHlwZSkgdHlwZUFyZ3MuZ2V0KDApOw0KKwkJdmVyaWZ5QW5ub3RhdGlvbk9uVHlwZSh3aWxkY2Fy
ZCwgbmV3IFN0cmluZ1tdeyJATWFya2VyKCkifSk7DQorCQlUeXBlIHR5cGUgPSB3aWxkY2FyZC5n
ZXRCb3VuZCgpOw0KKwkJdmVyaWZ5QW5ub3RhdGlvbk9uVHlwZSh0eXBlLCBuZXcgU3RyaW5nW117
IkBNYXJrZXIoKSJ9KTsNCisNCisJCXdpbGRjYXJkID0gKFdpbGRjYXJkVHlwZSkgdHlwZUFyZ3Mu
Z2V0KDEpOw0KKwkJdmVyaWZ5QW5ub3RhdGlvbk9uVHlwZSh3aWxkY2FyZCwgbmV3IFN0cmluZ1td
eyJATWFya2VyKCkifSk7DQorCQl0eXBlID0gd2lsZGNhcmQuZ2V0Qm91bmQoKTsNCisJCXZlcmlm
eUFubm90YXRpb25PblR5cGUodHlwZSwgbmV3IFN0cmluZ1tdeyJATWFya2VyKCkifSk7DQorCQkN
CisJCW1ldGhvZCA9IG1ldGhvZHNbMV07DQorCQlhcmcgPSAoU2luZ2xlVmFyaWFibGVEZWNsYXJh
dGlvbikgbWV0aG9kLnBhcmFtZXRlcnMoKS5nZXQoMCk7DQorCQl0eXBlQXJncyA9ICgoUGFyYW1l
dGVyaXplZFR5cGUpIGFyZy5nZXRUeXBlKCkpLnR5cGVBcmd1bWVudHMoKTsNCisNCisJCXdpbGRj
YXJkID0gKFdpbGRjYXJkVHlwZSkgdHlwZUFyZ3MuZ2V0KDApOw0KKwkJdmVyaWZ5QW5ub3RhdGlv
bk9uVHlwZSh3aWxkY2FyZCwgbmV3IFN0cmluZ1tdeyJATWFya2VyKCkifSk7DQorCQl0eXBlID0g
d2lsZGNhcmQuZ2V0Qm91bmQoKTsNCisJCXZlcmlmeUFubm90YXRpb25PblR5cGUodHlwZSwgbmV3
IFN0cmluZ1tdeyJATWFya2VyKCkifSk7DQorDQorCQl3aWxkY2FyZCA9IChXaWxkY2FyZFR5cGUp
IHR5cGVBcmdzLmdldCgxKTsNCisJCXZlcmlmeUFubm90YXRpb25PblR5cGUod2lsZGNhcmQsIG5l
dyBTdHJpbmdbXXsiQE1hcmtlcigpIn0pOw0KKwkJdHlwZSA9IHdpbGRjYXJkLmdldEJvdW5kKCk7
DQorCQl2ZXJpZnlBbm5vdGF0aW9uT25UeXBlKHR5cGUsIG5ldyBTdHJpbmdbXXsiQE1hcmtlcigp
In0pOw0KKwl9DQorCQ0KKwlwcml2YXRlIHZvaWQgdmVyaWZ5QW5ub3RhdGlvbk9uVHlwZShUeXBl
IHR5cGUsIFN0cmluZ1tdIGFubm90cykgew0KKwkJdmVyaWZ5QW5ub3RhdGlvbnNPbkJpbmRpbmco
dHlwZS5yZXNvbHZlQmluZGluZygpLCBhbm5vdHMpOw0KKwl9DQorCQ0KKwlwcml2YXRlIHZvaWQg
dmVyaWZ5QW5ub3RhdGlvbnNPbkJpbmRpbmcoSVR5cGVCaW5kaW5nIGJpbmRpbmcsIFN0cmluZ1td
IGFubm90cykgew0KKwkJSUFubm90YXRpb25CaW5kaW5nW10gYW5ub3RhdGlvbnMgPSBiaW5kaW5n
LmdldFR5cGVVc2VBbm5vdGF0aW9ucygpOw0KKwkJYXNzZXJ0Tm90TnVsbCgiU2hvdWxkIG5vdCBi
ZSBudWxsIiwgYW5ub3RhdGlvbnMpOw0KKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgdHlwZSB1
c2UgYW5ub3RhdGlvbnMiLCBhbm5vdHMubGVuZ3RoLCBhbm5vdGF0aW9ucy5sZW5ndGgpOw0KKwkJ
Zm9yIChpbnQgaSA9IDA7IGkgPCBhbm5vdHMubGVuZ3RoOyBpKyspIHsNCisJCQlhc3NlcnRFcXVh
bHMoIkluY29ycmVjdCBhbm5vdGF0aW9uIiwgYW5ub3RzW2ldLCAoYW5ub3RhdGlvbnNbaV0gPT0g
bnVsbCkgPyBudWxsIDogYW5ub3RhdGlvbnNbaV0udG9TdHJpbmcoKSk7DQorCQl9DQorCX0NCit9
ClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmlsZQ==
</data>

          </attachment>
      

    </bug>

</bugzilla>