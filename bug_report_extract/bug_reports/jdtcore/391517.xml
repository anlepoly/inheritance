<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>391517</bug_id>
          
          <creation_ts>2012-10-10 06:00:00 -0400</creation_ts>
          <short_desc>java.lang.VerifyError on code that runs correctly in Eclipse 3.7 and eclipse 3.6</short_desc>
          <delta_ts>2013-02-04 10:55:50 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.2.1</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>critical</bug_severity>
          <target_milestone>3.8.2</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Martin Taal">mtaal</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>anchakrk</cc>
    
    <cc>daniel_megert</cc>
    
    <cc>jarthana</cc>
    
    <cc>Olivier_Thomann</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="53983"
          type_id="1"
          status="+"
          setter="srikanth_sankaran"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2169867</commentid>
    <comment_count>0</comment_count>
    <who name="Martin Taal">mtaal</who>
    <bug_when>2012-10-10 06:00:35 -0400</bug_when>
    <thetext>Hi, I am trying my application on juno. It worked fine on eclipse 3.6/3.7. It is a web application. 

See the stack trace below. This happens on a method which first checks a constant and then returns, in the standard case the return happens.

  private static final int ADMIN_TRACE_SIZE = 0;

  private static void addStackTrace(String prefix) {
    if (ADMIN_TRACE_SIZE == 0) {
      return;
    }
   ....
  }

When I change this to do the check on ADMIN_TRACE_SIZE when calling the method, the VerifyError is not thrown.

I tried to create a small test project which reproduces the error but I can&apos;t. So it maybe specific to our situation.

java.lang.VerifyError: (class: org/openbravo/dal/core/OBContext, method: addStackTrace signature: (Ljava/lang/String;)V) Illegal target of jump or branch
	at org.openbravo.dal.core.DalRequestFilter$1.doBefore(DalRequestFilter.java:76)
	at org.openbravo.dal.core.ThreadHandler.run(ThreadHandler.java:44)
	at org.openbravo.dal.core.DalRequestFilter.doFilter(DalRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:859)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Thread.java:662)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2169878</commentid>
    <comment_count>1</comment_count>
    <who name="Martin Taal">mtaal</who>
    <bug_when>2012-10-10 06:10:50 -0400</bug_when>
    <thetext>See here for the actual code:
https://code.openbravo.com/erp/devel/pi/file/98ca8ddc5e0e/src/org/openbravo/dal/core/OBContext.java#l257</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2169891</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-10-10 06:33:44 -0400</bug_when>
    <thetext>(In reply to comment #0)
&gt; Hi, I am trying my application on juno. It worked fine on eclipse 3.6/3.7.
&gt; It is a web application. 

We have fixed several of these in Juno SR1. Please try and see if the problem
is still reproducible there and if so, we are going to require a test case to
work on</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2169894</commentid>
    <comment_count>3</comment_count>
    <who name="Martin Taal">mtaal</who>
    <bug_when>2012-10-10 06:36:09 -0400</bug_when>
    <thetext>I tested this in juno SR1/4.2.1. I tried a testcase but I could not reproduce it in a simple testcase.

I can understand if this issue does not get resolved because of lack of testcase. I entered the issue also for possible future cases, as a reference.

gr. Martin</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2169897</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-10-10 06:39:09 -0400</bug_when>
    <thetext>(In reply to comment #3)
&gt; I tested this in juno SR1/4.2.1. I tried a testcase but I could not
&gt; reproduce it in a simple testcase.

Could you reproduce in on the full blown test case on Juno SR1 ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2169899</commentid>
    <comment_count>5</comment_count>
    <who name="Martin Taal">mtaal</who>
    <bug_when>2012-10-10 06:40:36 -0400</bug_when>
    <thetext>Yes, I tested it in eclipse 4.2.1/SR1, I downloaded the latest eclipse version a few hours back.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2169989</commentid>
    <comment_count>6</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2012-10-10 09:31:53 -0400</bug_when>
    <thetext>Martin,

You got the error using Eclipse 4.2.1. Are you using the same settings you used with 3.6 or 3.7?
Is your target platform 1.7 in all cases (3.6/3.7/4.2.1) ?

If I grab the test case you sent, should I be able to reproduce the problem?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2170093</commentid>
    <comment_count>7</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2012-10-10 10:52:30 -0400</bug_when>
    <thetext>Reproduced. I&apos;ll take a look.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2170123</commentid>
    <comment_count>8</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2012-10-10 11:50:03 -0400</bug_when>
    <thetext>This is more serious than I thought initially. The problem comes from the code where the condition of an if statement is a constant expression.

The code looks like this:

  private static void addStackTrace(String prefix) {
    if (ADMIN_TRACE_SIZE == 0) {
      return;
    }

    ...
  }

In this case, we generate a return statement as ADMIN_TRACE_SIZE == 0 is always true, but we do generate code for what is coming after the if statement.
That code must not be there.

This is a reduced test case that seems to cause similar error at runtime:

import java.io.PrintWriter;

public class X {

	private static final int CONSTANT = 0;

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

	static void addStackTrace(String prefix) {
		if (CONSTANT == 0) {
			return;
		}
		PrintWriter pw = null;
		new Exception().printStackTrace(pw);
		if (bar() == null) {
			System.out.println();
		}
	}

	static Object bar() {
		return null;
	}
}

For the addStackTrace(..) method, the generated code is:

  // Method descriptor #23 (Ljava/lang/String;)V
  // Stack: 1, Locals: 1
  static void addStackTrace(java.lang.String prefix);
    0  return
    1  invokestatic X.bar() : java.lang.Object [24]
    4  ifnonnull 7
      Line numbers:
        [pc: 0, line: 14]
        [pc: 1, line: 18]
      Local variable table:
        [pc: 0, pc: 7] local: prefix index: 0 type: java.lang.String
      Stack map table: number of frames 1
        [pc: 1, same]

instead of:
  static void addStackTrace(java.lang.String prefix);
    0  return

I could not debug further, but this is definitely a critical bug as the generated code is bogus and there is no way to find out till the code is executed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2170141</commentid>
    <comment_count>9</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2012-10-10 12:14:30 -0400</bug_when>
    <thetext>There might be something wrong in the logic of:
org.eclipse.jdt.internal.compiler.ast.Statement.complainIfUnreachable(FlowInfo, BlockScope, int, boolean)

where the second if statement doesn&apos;t get it IsReachable bit reset.

The flowInfo.reachMode() is REACHABLE for the second if statement. So it could also be that the flow info itself is bogus.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2170377</commentid>
    <comment_count>10</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-10-11 00:52:19 -0400</bug_when>
    <thetext>(In reply to comment #8)

&gt; I could not debug further, but this is definitely a critical bug as the
&gt; generated code is bogus and there is no way to find out till the code is
&gt; executed.

Olivier, do you mean to spend more cycles on this ? I am happy to take over
otherwise.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2170490</commentid>
    <comment_count>11</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2012-10-11 08:00:41 -0400</bug_when>
    <thetext>(In reply to comment #10)
&gt; (In reply to comment #8)
&gt; Olivier, do you mean to spend more cycles on this ? I am happy to take over
&gt; otherwise.
Unfortunately I cannot for now. Srikanth, please take over. I took a look in case something was wrong with the generation of stack maps themselves. In this case, this is not in the picture.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2173694</commentid>
    <comment_count>12</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2012-10-18 11:50:00 -0400</bug_when>
    <thetext>Stephan, I add you to the CC list as you might have an idea what has changed in the flow analysis that could cause this issue.
The biggest issue is that we can no longer trust the actual generated code. So we will have to increment the builder status value so that a full build is triggered once this is fixed and delivered to make sure all .class files are recompiled.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2173702</commentid>
    <comment_count>13</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-10-18 12:00:42 -0400</bug_when>
    <thetext>Stephan, do you have time to work on this ? I would be OK if that means
some work on default methods get shifted out. Otherwise, I can take a look
at this next week.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2173721</commentid>
    <comment_count>14</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-10-18 12:24:21 -0400</bug_when>
    <thetext>(In reply to comment #13)
&gt; Stephan, do you have time to work on this ? I would be OK if that means
&gt; some work on default methods get shifted out. Otherwise, I can take a look
&gt; at this next week.

I converted Olivier&apos;s example into a unit test and seeing that it reproduces the error, I&apos;ll take a look now.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2173739</commentid>
    <comment_count>15</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-10-18 13:03:07 -0400</bug_when>
    <thetext>Here&apos;s what happened:

For bug 362331 (released 3.8 M5) I added this innocent line in FakedTrackingVariable.markPassedToOutside(..):

  return FlowInfo.conditional(flowInfo, infoResourceIsClosed);

Apparently this is the first to trigger an omission in ConditionalFlowInfo:
- creating a ConditionalFlowInfo via the above method, passing two 
  unreachable sub-flows, we only assign the given sub-flows to initsWhenTrue
  and initsWhenFalse resp. and that&apos;s it
- when asking the reachMode() of this flow info we answer 0 because
  the tagBits of the ConditionalFlowInfo itself are not set,
  although both its sub-flows have tagBits == 5.

Two possible solutions:
- override reachMode() in ConditionalFlowInfo, or even easier:
- add this line in the constructor of ConditionalFlowInfo:
	this.tagBits = initsWhenTrue.tagBits &amp; initsWhenFalse.tagBits &amp; UNREACHABLE;
  Note that other bits seem not to be relevant, since they are not directly
  accessed on a ConditionalFlowInfo.

This looks like a bug from day #1, that just happened to lie sleeping until now.

I&apos;ll run the tests with this fix now.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2173754</commentid>
    <comment_count>16</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-10-18 13:34:34 -0400</bug_when>
    <thetext>Tests are happy,

Tests and fix released for 4.3 M3 via commit 51ebb1f7cfea7403ec34dc6efe4fba1d95b8c175.

Srikanth, should I backport this for 4.2.2?

The bug occurs since 3.8 M5 (although it was present in the code for ever :) ).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2173941</commentid>
    <comment_count>17</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-10-19 01:40:53 -0400</bug_when>
    <thetext>(In reply to comment #16)

&gt; Srikanth, should I backport this for 4.2.2?

+1 for backport - but let us do this in early January, after code review, testing
and a bit more exposure. Not because of any doubts - I haven&apos;t looked at the
patch at all, but simply because we can afford to be conservative given the
schedule.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2174656</commentid>
    <comment_count>18</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-10-22 04:52:46 -0400</bug_when>
    <thetext>Agree with the patch - Thanks Stephan.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2199960</commentid>
    <comment_count>19</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-01-08 00:37:37 -0500</bug_when>
    <thetext>We have the RC1 build tomorrow. And have had quite a few builds since it went in for M5 without any issues. So, I think we can go release this for the RC1 build.

Also, somehow this had been left out of the bug verification during M3. I am re-targeting this for verification during M5.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2199990</commentid>
    <comment_count>20</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-01-08 03:10:51 -0500</bug_when>
    <thetext>(In reply to comment #19)
&gt; We have the RC1 build tomorrow. And have had quite a few builds since it
&gt; went in for M5 without any issues. So, I think we can go release this for
&gt; the RC1 build.
&gt; 
&gt; Also, somehow this had been left out of the bug verification during M3. I am
&gt; re-targeting this for verification during M5.

+1.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2200048</commentid>
    <comment_count>21</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-01-08 05:09:05 -0500</bug_when>
    <thetext>Released for 3.8.2 via commit dca1fbe994a237a82ccef93097f5e93751606c74</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2201529</commentid>
    <comment_count>22</comment_count>
    <who name="ANIRBAN CHAKRABORTY">anchakrk</who>
    <bug_when>2013-01-10 17:37:23 -0500</bug_when>
    <thetext>Verified for 4.2.2 M20130109-1200</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2211842</commentid>
    <comment_count>23</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-02-04 10:55:50 -0500</bug_when>
    <thetext>Verified for 4.3 M5 with build I20130130-2000</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>