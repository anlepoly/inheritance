<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>411771</bug_id>
          
          <creation_ts>2013-06-27 09:13:00 -0400</creation_ts>
          <short_desc>[compiler][null] Enum constants not recognised as being NonNull.</short_desc>
          <delta_ts>2014-03-04 04:08:57 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>Macintosh</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          <see_also>https://bugs.eclipse.org/bugs/show_bug.cgi?id=403674</see_also>
    
    <see_also>https://bugs.eclipse.org/bugs/show_bug.cgi?id=428986</see_also>
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.4 M6</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Max Gilead">max.gilead</reporter>
          <assigned_to name="shankha banerjee">shankhba</assigned_to>
          <cc>b.michael</cc>
    
    <cc>dawuid</cc>
    
    <cc>jan.ortmann</cc>
    
    <cc>jarthana</cc>
    
    <cc>rolf.paulsen</cc>
    
    <cc>shankhba</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
    
    <cc>tom.vandenberge</cc>
          
          <votes>6</votes>

      

      

      <flag name="review"
          id="59003"
          type_id="1"
          status="+"
          setter="stephan.herrmann"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2278161</commentid>
    <comment_count>0</comment_count>
    <who name="Max Gilead">max.gilead</who>
    <bug_when>2013-06-27 09:13:39 -0400</bug_when>
    <thetext>This is pretty similar to bug 380896 but the test case is slightly different -- the enum is declared in a separate file.


// file TestEnum.java
enum TestEnum { FOO; }

// file NullTest.java
public class NullTest {
  public static TestEnum bla() {
    @javax.annotation.Nonnull final TestEnum t = TestEnum.FOO; // Null type safety: The expression of type TestEnum needs unchecked conversion to conform to &apos;@Nonnull TestEnum&apos;
    return t;
  }
}

Eclipse is configured to use &apos;javax.annotation.CheckForNull&apos; for &apos;Nullable&apos; annotation, &apos;javax.annotation.Nonnull&apos; for &apos;NonNull&apos; and the &apos;NonNullByDefault&apos; is left unchanged. The annotations are as downloaded from http://code.google.com/p/jsr-305/ SVN.

Strangely enough, moving TestEnum to the same file as NullTest (as in the test case in bug 380896) makes the issue go away.

Eclipse SDK
Version: 4.3.0
Build id: I20130605-2000</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2278178</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-06-27 09:29:03 -0400</bug_when>
    <thetext>Looks like I forgot to mark enum constants in BinaryTypeBinding.createFields()
(analogous to SourceTypeBinding.resolveTypeFor(FieldBinding)). Too bad.

Shankha, would you like to try this one, too?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2278273</commentid>
    <comment_count>2</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-06-27 11:46:17 -0400</bug_when>
    <thetext>Hi Stephan,
Thanks. I will look into it. 

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2279239</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-07-01 01:18:15 -0400</bug_when>
    <thetext>Shankha, when a patch becomes available, ask Stephan to review/release by
raising a review request. TIA.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2291596</commentid>
    <comment_count>4</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-08-05 14:10:17 -0400</bug_when>
    <thetext>Hi Stephan,
I need help on this bug. 

I looked at create fields. The function is part of the object which is associated with .class files (objs). The ifield value passed as parameter to the function is null and we return from this function. 

I don&apos;t think the binary binding is created in this function. I can&apos;t figure out where else the binary binding is created for

@NonNull final TestEnum t = TestEnum.FOO;

Thanks for your help.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2291616</commentid>
    <comment_count>5</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-08-05 16:02:57 -0400</bug_when>
    <thetext>Hi Shankha,

I don&apos;t exactly understand what you have looked at. Giving the exact names of classes
and methods helps communicate if you can&apos;t just point at s.t. on your screen :)

When I want to figure out who instantiates a given class, I pick one of two options:
- set a breakpoint into each constructor and run a test case, or
- put the cursor on the class name and let Ctrl-Alt-H show the call hierarchy,
  here: all calls leading to an instantiation.

If you do that and open a few of the branches of the tree, you will see two main
paths:
- one from ClassScope#buildFields()
- one from BinaryTypeBinding#createFields()

I guess that latter is what you have been looking at, right?

So, we should be on the same page here, which means we need to figure out why 
you are seeing null where an IBinaryField is expected. Maybe you can share the
unit test you are using? When I slightly forge an existing test in EnumTest
I do see all the enum constants represented by IBinaryField. And even better:
all have the bit ClassFileConstants#AccEnum set, so they&apos;re easy to recognize.

Are you doing a two phase test to ensure that the enum has been compiled already
and is being consumed from .class file? I think once we use the same unit test,
we should quickly find the solution.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2291802</commentid>
    <comment_count>6</comment_count>
      <attachid>234108</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-08-06 07:53:24 -0400</bug_when>
    <thetext>Created attachment 234108
Test Case

Hi Stephan,
Thanks for your detailed comments. 

I have attached the test case. 

Yes, I am looking into BinaryTypeBinding#createFields(). 

I did not understand the statement &quot;two phase test&quot;. Is there a way I can specify while compiling NullTest.java to look for dependencies in a particular class file. 

I picked up few tests from EnumTest.java. The first parameter &quot;IBinaryField[] iFields&quot; to createFields is non null for the cases picked up from EnumTest.java, not so with the test case I have attached. 

Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2291895</commentid>
    <comment_count>7</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-08-06 10:08:39 -0400</bug_when>
    <thetext>Shankha,

First, from my changes to the attachment you see that I had issues opening the file.
If you don&apos;t specify a mime-type the browser will try to display as text,
which isn&apos;t so helpful for a zip archive :)

Second, while you showed me the Java classes to be used for the unit test,
the unit test itself is still missing.

By &quot;two phase test&quot; I meant a unit test which has two invocations of
runConformTest(..) and/or runNegativeTest(..).
The first invocation would create the class files which will be consumed
by the second invocation. When create this, you may need to check, there&apos;s
a parameter in these test methods &quot;flushOutputDirectory&quot; or s.t. like that.
When set to true, the approach won&apos;t work, because the result from the first
phase will not be visible to the second.

So, please prepare and attach a unit test to be included in one of the existing
suites like EnumTest or NullAnnotationTest.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2292659</commentid>
    <comment_count>8</comment_count>
      <attachid>234188</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-08-08 05:15:03 -0400</bug_when>
    <thetext>Created attachment 234188
Patch

Hi Stephan,
I have uploaded the patch. Could you please review it?
I had few questions:

1) I have the test case in AnnotationDependencyTest and not in EnumTest as you had suggested.

2) I had the following check:

   if (containingTypeEnum || fieldBinding.type.isEnum())
       fieldBinding.tagBits |= TagBits.AnnotationNonNull; 


Do you think both the conditions are necessary. containingTypeEnum implies 
fieldBinding.type.isEnum() and vice versa. 

3) Is it okay to have the test code strings as testEnumCode and nullTestCode
or they should be renamed to Test1 and Test2?

RunAllJDTCoreTests is clean.

Thanks for the help.

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2298721</commentid>
    <comment_count>9</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-08-25 11:32:58 -0400</bug_when>
    <thetext>(In reply to comment #8)
&gt; 1) I have the test case in AnnotationDependencyTest and not in EnumTest as
&gt; you had suggested.

I was going to suggest NullReferenceTest, or (since using an annotation)
NullAnnotationTest as the canonical home for null related tests, but seeing that
AnnotationDependencyTest already has similar tests that&apos;s a fair choice.
 
&gt; 2) I had the following check:
&gt; 
&gt;    if (containingTypeEnum || fieldBinding.type.isEnum())
&gt;        fieldBinding.tagBits |= TagBits.AnnotationNonNull; 

At this point fieldBinding.type is an UnresolveReferenceBinding, which doesn&apos;t
truthfully answer isEnum(). 

&gt; Do you think both the conditions are necessary. containingTypeEnum implies 
&gt; fieldBinding.type.isEnum() and vice versa. 

No. If isEnum() would work in this context, the result would actually be wrong:

compile this first:

  class X { TestEnum f; };

and then, consuming X.class:

  public class NullTest {
	public static TestEnum bla(X x) {
		@NonNull final TestEnum t = x.f;
		return t;
	}
  }

X.f has an enum type, but it is not an enum constant. Your patch would mark
X.f as @NonNull, which is wrong.

&gt; 3) Is it okay to have the test code strings as testEnumCode and nullTestCode
&gt; or they should be renamed to Test1 and Test2?

naming of local variables in tests isn&apos;t all that important, it should follow the
conventions (like lower case first char ...), though.
 

One more point: 
I find the usage of &apos;containingTypeEnum&apos; confusing to read, I would either:
- initialize this local directly from isEnum(), and only use the local from there, or
- avoid the new argument to scanFieldForNullAnnotation() and directly use isEnum()
  where needed inside

Shankha, do you want to make the mentioned improvements to get a clean +1 review?

(a) remove &quot;|| fieldBinding.type.isEnum()&quot;

(b) simplify or avoid usage of &apos;containingTypeEnum&apos; local&amp;argument

(c) (not mentioned above) when creating variations of a test it&apos;s good to add a
    comment line explaining what each particular test is challenging.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2300370</commentid>
    <comment_count>10</comment_count>
      <attachid>234892</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-08-28 23:39:33 -0400</bug_when>
    <thetext>Created attachment 234892
Patch

Hi Stephan,
Thanks for your detailed review.

I have incorporated all your suggestions. I had one more question.

I have the following test case:
        //https://bugs.eclipse.org/bugs/show_bug.cgi?id=411771
	//[compiler][null] Enum constants not recognized as being NonNull.
	//Please look at comment 9.
	public void test411771c() throws IOException, JavaModelException {
	  setupProjectForNullAnnotations();
	  String testEnumCode = &quot;package p1;\n&quot; +
		&quot;enum TestEnum { FOO };\n&quot;;
	  env.addClass( this.srcRoot, &quot;p1&quot;, &quot;TestEnum&quot;, testEnumCode );
	  fullBuild( this.projectPath );
	  expectingNoProblems();

	  String x = &quot;package p1;\n&quot; +
		&quot;class X { TestEnum f; };\n&quot;;
	  env.addClass( this.srcRoot, &quot;p1&quot;, &quot;X&quot;, x );
	  incrementalBuild( this.projectPath );
	  expectingNoProblems();
	  expectingUniqueCompiledClasses(new String[] { &quot;p1.X&quot; });

	  String nullTestCode = &quot;package p1;\n&quot; +
		&quot;import org.eclipse.jdt.annotation.NonNull;\n&quot; +
		&quot;public class NullTest {\n&quot; +
		&quot;	public static TestEnum bla(X x) {\n&quot; +
		&quot;		@NonNull TestEnum t = x.f;\n&quot; +
		&quot;    	return t;\n&quot; +
		&quot;	}\n&quot; +
		&quot;}&quot;;
	  env.addClass( this.srcRoot, &quot;p1&quot;, &quot;NullTest&quot;, nullTestCode );
	  incrementalBuild( this.projectPath );
	  expectingNoProblems();

	  expectingUniqueCompiledClasses(new String[] { &quot;p1.NullTest&quot; });


This is not part of the patch. 

The function call fieldBinding.type.isEnum() returns false for this case. It never sets the tagBits to TagBits.AnnotationNonNull. 

I think I am missing a point. 

Other question is even if it did set the tag bits to TagBits.AnnotationNonNull
is there a way to have a test case for it?

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2300702</commentid>
    <comment_count>11</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-08-29 11:16:01 -0400</bug_when>
    <thetext>(In reply to comment #10)
&gt; The function call fieldBinding.type.isEnum() returns false for this case. It
&gt; never sets the tagBits to TagBits.AnnotationNonNull. 

Which field are you looking at?

If it is &quot;x.f&quot; then we don&apos;t want to set TagBits.AnnotationNonNull because it can well be null (different from enum *constants* inside the enum type).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2301132</commentid>
    <comment_count>12</comment_count>
      <attachid>235013</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-08-30 02:59:07 -0400</bug_when>
    <thetext>Created attachment 235013
Patch

All changes incorporated.
RunAllJDTCore tests have been run and the results are fine.

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2303464</commentid>
    <comment_count>13</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-09-05 19:25:56 -0400</bug_when>
    <thetext>Comments from looking at the patch (without applying / testing / debugging):

- Setting TagBits.AnnotationNonNullByDefault looks wrong to me.
  Can you explain why you&apos;re doing this?
  Keep in mind that enums can also have regular fields.

- When we find examples that break a proposed patch it&apos;s usually a good idea to keep
  them as an additional test case (see, e.g., comment 9).

- When a review lists several action items, its easier to re-review, when you give
  a brief comment how you resolved each of these items. E.g., if several options were
  discussed, simply mention which option was selected etc.
  It&apos;s not dramatic at this size of a fix, but when patches get larger, it gets 
  harder to understand the progress from one version to the next.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2303485</commentid>
    <comment_count>14</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-09-05 23:23:00 -0400</bug_when>
    <thetext>Apologies. I will update the defect with comments. You had told me about the test case earlier as well. I will keep in mind. 

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2346632</commentid>
    <comment_count>15</comment_count>
    <who name="Jan Ortmann">jan.ortmann</who>
    <bug_when>2014-01-07 12:17:25 -0500</bug_when>
    <thetext>I think null analysis is a pretty cool feature. Would be awesome if this isuue would be fixed, as it really stops you from using this feature if you work with enums.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2348589</commentid>
    <comment_count>16</comment_count>
      <attachid>238890</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-01-12 03:08:15 -0500</bug_when>
    <thetext>Created attachment 238890
Patch

Hi Stephan,
Following are the actions on reviews and comments:

1) (In reply to Stephan Herrmann from comment #13)

&gt; Comments from looking at the patch (without applying / testing / debugging):
&gt; 
&gt; - Setting TagBits.AnnotationNonNullByDefault looks wrong to me.
&gt;   Can you explain why you&apos;re doing this?
&gt;   Keep in mind that enums can also have regular fields.

The code has been removed.

2) (In reply to Stephan Herrmann from comment #9) 
&gt; I had the following check:
&gt; 
&gt;    if (containingTypeEnum || fieldBinding.type.isEnum())
&gt;        fieldBinding.tagBits |= TagBits.AnnotationNonNull; 
 
 At this point fieldBinding.type is an UnresolveReferenceBinding, which
 doesn&apos;t truthfully answer isEnum().

I had tried debugging AnnonationDependency and NullAnnotationTests and checked
if  fieldBinding.type is UnresolveReferenceBinding. Couldn&apos;t find a example.
I haven&apos;t used  fieldBinding.type.

 
3) (In reply to Stephan Herrmann from comment #9)
&gt; No. If isEnum() would work in this context, the result would actually be
&gt; wrong:

&gt; compile this first:
&gt; 
&gt;   class X { TestEnum f; };
&gt; 
&gt; and then, consuming X.class:
&gt; 
&gt;   public class NullTest {
&gt; 	public static TestEnum bla(X x) {
&gt; 		@NonNull final TestEnum t = x.f;
&gt; 		return t;
&gt; 	}
&gt;   }

I was not marking it as Non-null in my prevous code.
I have added a test case. Test case :  test411771b

Thanks for the review.

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2348590</commentid>
    <comment_count>17</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-01-12 03:13:54 -0500</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #9)
I had missed the following review points in my comment.
 
&gt; (a) remove &quot;|| fieldBinding.type.isEnum()&quot;

Done

&gt; (b) simplify or avoid usage of &apos;containingTypeEnum&apos; local&amp;argument

The type.isEnum() is passed as a parameter to scanFieldForNullAnnotation.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2348591</commentid>
    <comment_count>18</comment_count>
      <attachid>238891</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-01-12 03:17:18 -0500</bug_when>
    <thetext>Created attachment 238891
Patch

Removed new extraneous new lines. 

Please look at Comment 16 and Comment 17 for comments on the patch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2366378</commentid>
    <comment_count>19</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-20 17:49:49 -0500</bug_when>
    <thetext>The patch is good now.

I&apos;ve released it to master for 4.4 M6 via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=f1a111b3a23818f90206cf827aa78528b873971f</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2368014</commentid>
    <comment_count>20</comment_count>
      <attachid>240289</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-02-25 03:46:22 -0500</bug_when>
    <thetext>Created attachment 240289
Patch: Ported to BETA_JAVA8 branch

Patch ported to BETA_JAVA8 branch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2368024</commentid>
    <comment_count>21</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-02-25 04:07:13 -0500</bug_when>
    <thetext>Could there be similar changes needed for
scanMethodForNullAnnotation (for parameters) in BinaryTypeBinding.java.

Just jogging it down. Will investigate and put in the comments.

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2368071</commentid>
    <comment_count>22</comment_count>
      <attachid>240293</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-02-25 05:48:20 -0500</bug_when>
    <thetext>Created attachment 240293
Patch: Ported to BETA_JAVA8 branch

Indentation of the test cases were out of place.

Patch ported on BETA_JAVA8.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2370935</commentid>
    <comment_count>23</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-03-03 23:12:59 -0500</bug_when>
    <thetext>(In reply to shankha banerjee from comment #22)
&gt; Created attachment 240293 [details]
&gt; Patch: Ported to BETA_JAVA8 branch

Thanks Shankha, I have pushed this in BETA_JAVA8 here:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=262ea77ae957f8d7dab24f1acde74cdb537e3922</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2370999</commentid>
    <comment_count>24</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-03-04 04:08:57 -0500</bug_when>
    <thetext>Verified for 4.4 M6 with build I20140303-1130</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="0"
              isprivate="0"
          >
            <attachid>234108</attachid>
            <date>2013-08-06 07:53:00 -0400</date>
            <delta_ts>2013-08-08 05:15:03 -0400</delta_ts>
            <desc>Test Case</desc>
            <filename>TestEnum.zip</filename>
            <type>application/zip</type>
            <size>465</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">UEsDBBQAAAAIAKp1AUOhU1JYFwAAABgAAAANAAAAVGVzdEVudW0uamF2YUvNK81VCEktLnEFMaoV
3Pz9FWqtFRQAUEsDBBQAAAAIAJGIBkNOVJwb2AAAAGYBAAANAAAATnVsbFRlc3QuamF2YW2OvW7D
MAyEdwN+h9uSdJD3GgW6pGMyJC+gyHSjRKYEiSpqFHn3RnZ+OpQTT/fxdHYIPgp8/FRknA2J1KkT
pZm9aLGe1UtbV3UV8sFZA+N0Sthk5/aUBD91BdysVHiD8r7mPODg9HI1E8D7xnO5Qm9ZuyckeHsI
9bHdtmiaKR4yBkLSPcn4iv2RQN8hUkrXSvD9bD9imKhLyGyOZM7UwXj+ojix4ovqfRzKuihFuOTf
bxdzwd2YhAbls6gQLYvjpaza2Wuaf9y/re9gJMnx+uUkL3V1wW1+AVBLAQIUABQAAAAIAKp1AUOh
U1JYFwAAABgAAAANAAAAAAAAAAEAIAAAAAAAAABUZXN0RW51bS5qYXZhUEsBAhQAFAAAAAgAkYgG
Q05UnBvYAAAAZgEAAA0AAAAAAAAAAQAgAAAAQgAAAE51bGxUZXN0LmphdmFQSwUGAAAAAAIAAgB2
AAAARQEAAAAA
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>234188</attachid>
            <date>2013-08-08 05:15:00 -0400</date>
            <delta_ts>2013-08-28 23:39:33 -0400</delta_ts>
            <desc>Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>4765</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmJ1aWxkZXIvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2J1aWxkZXIvQW5ub3RhdGlvbkRlcGVuZGVuY3lUZXN0cy5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuYnVpbGRlci9zcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvYnVpbGRlci9Bbm5vdGF0aW9uRGVwZW5kZW5jeVRlc3RzLmphdmEKaW5k
ZXggZGMwY2JhZC4uMWE4N2M4YSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMuYnVpbGRlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvYnVpbGRlci9Bbm5vdGF0
aW9uRGVwZW5kZW5jeVRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
YnVpbGRlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvYnVpbGRlci9Bbm5vdGF0aW9u
RGVwZW5kZW5jeVRlc3RzLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKgotICogQ29weXJpZ2h0IChjKSAyMDA5LCAyMDEyIFdhbHRlciBIYXJsZXkgYW5kIG90aGVy
cy4KKyAqIENvcHlyaWdodCAoYykgMjAwOSwgMjAxMyBXYWx0ZXIgSGFybGV5IGFuZCBvdGhlcnMu
CiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlp
bmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRo
ZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMg
ZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0xNTU3LDQgKzE1NTcsNDYgQEAg
cHVibGljIGNsYXNzIEFubm90YXRpb25EZXBlbmRlbmN5VGVzdHMgZXh0ZW5kcyBCdWlsZGVyVGVz
dHMgewogCQkvLyB2ZXJpZnkgdGhhdCBUZXN0MiBvbmx5IHdhcyByZWNvbXBpbGVkCiAJCWV4cGVj
dGluZ1VuaXF1ZUNvbXBpbGVkQ2xhc3NlcyhuZXcgU3RyaW5nW10geyAicDEuVGVzdDIiIH0pOwog
CX0KKwkvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MTE3
NzEKKwkvL1tjb21waWxlcl1bbnVsbF0gRW51bSBjb25zdGFudHMgbm90IHJlY29nbml6ZWQgYXMg
YmVpbmcgTm9uTnVsbC4KKwlwdWJsaWMgdm9pZCB0ZXN0NDExNzcxYSgpIHRocm93cyBJT0V4Y2Vw
dGlvbiwgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJc2V0dXBQcm9qZWN0Rm9yTnVsbEFubm90YXRp
b25zKCk7CisJCVN0cmluZyB0ZXN0RW51bUNvZGUgPSAicGFja2FnZSBwMTtcbiIgKworCQkJImVu
dW0gVGVzdEVudW0geyBGT08gfTtcbiI7CisJCWVudi5hZGRDbGFzcyggdGhpcy5zcmNSb290LCAi
cDEiLCAiVGVzdEVudW0iLCB0ZXN0RW51bUNvZGUgKTsKKwkJZnVsbEJ1aWxkKCB0aGlzLnByb2pl
Y3RQYXRoICk7CisJCWV4cGVjdGluZ05vUHJvYmxlbXMoKTsKKworCQlTdHJpbmcgbnVsbFRlc3RD
b2RlID0gInBhY2thZ2UgcDE7XG4iICsKKwkJCSJpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmFubm90
YXRpb24uTm9uTnVsbDtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBOdWxsVGVzdCB7XG4iICsKKwkJ
CSIJcHVibGljIHN0YXRpYyBUZXN0RW51bSBibGEoKSB7XG4iICsKKwkJCSIJCUBOb25OdWxsIGZp
bmFsIFRlc3RFbnVtIHQgPSBUZXN0RW51bS5GT087XG4iICsKKwkJCSIgICAgCXJldHVybiB0O1xu
IiArCisJCQkiCX1cbiIgKworCQkJIn0iOworCQllbnYuYWRkQ2xhc3MoIHRoaXMuc3JjUm9vdCwg
InAxIiwgIk51bGxUZXN0IiwgbnVsbFRlc3RDb2RlICk7CisJCWluY3JlbWVudGFsQnVpbGQoIHRo
aXMucHJvamVjdFBhdGggKTsKKwkJZXhwZWN0aW5nTm9Qcm9ibGVtcygpOworCisJCWV4cGVjdGlu
Z1VuaXF1ZUNvbXBpbGVkQ2xhc3NlcyhuZXcgU3RyaW5nW10geyAicDEuTnVsbFRlc3QiIH0pOwor
CX0KKworCS8vaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQx
MTc3MQorCS8vW2NvbXBpbGVyXVtudWxsXSBFbnVtIGNvbnN0YW50cyBub3QgcmVjb2duaXplZCBh
cyBiZWluZyBOb25OdWxsLgorCXB1YmxpYyB2b2lkIHRlc3Q0MTE3NzFiKCkgdGhyb3dzIElPRXhj
ZXB0aW9uLCBKYXZhTW9kZWxFeGNlcHRpb24geworCQlzZXR1cFByb2plY3RGb3JOdWxsQW5ub3Rh
dGlvbnMoKTsKKwkJU3RyaW5nIG51bGxUZXN0Q29kZSA9ICJwYWNrYWdlIHAxO1xuIiArCisJCQkJ
ImltcG9ydCBvcmcuZWNsaXBzZS5qZHQuYW5ub3RhdGlvbi5Ob25OdWxsO1xuIiArCisJCQkJImVu
dW0gVGVzdEVudW0geyBGT08gfTtcbiIgKworCQkJCSJwdWJsaWMgY2xhc3MgTnVsbFRlc3Qge1xu
IiArCisJCQkJIglwdWJsaWMgc3RhdGljIFRlc3RFbnVtIGJsYSgpIHtcbiIgKworCQkJCSIgICAg
QE5vbk51bGwgZmluYWwgVGVzdEVudW0gdCA9IFRlc3RFbnVtLkZPTztcbiIgKworCQkJCSIgICAg
cmV0dXJuIHQ7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9IjsKKwkJZW52LmFkZENsYXNzKCB0
aGlzLnNyY1Jvb3QsICJwMSIsICJOdWxsVGVzdCIsIG51bGxUZXN0Q29kZSApOworCQlmdWxsQnVp
bGQoIHRoaXMucHJvamVjdFBhdGggKTsKKwkJZXhwZWN0aW5nTm9Qcm9ibGVtcygpOworCX0KIH0K
ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQmluYXJ5VHlwZUJpbmRpbmcuamF2YSBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9sb29rdXAvQmluYXJ5VHlwZUJpbmRpbmcuamF2YQppbmRleCBiZjEyY2FhLi5mM2VjZGRmIDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0JpbmFyeVR5cGVCaW5kaW5nLmphdmEKKysrIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2xvb2t1cC9CaW5hcnlUeXBlQmluZGluZy5qYXZhCkBAIC00NDYsOSArNDQ2LDE2IEBAIHBy
aXZhdGUgdm9pZCBjcmVhdGVGaWVsZHMoSUJpbmFyeUZpZWxkW10gaUZpZWxkcywgbG9uZyBzb3Vy
Y2VMZXZlbCwgY2hhcltdW11bXSBtCiAJCQkJfQogCQkJfQogCQkJaWYgKHRoaXMuZW52aXJvbm1l
bnQuZ2xvYmFsT3B0aW9ucy5pc0Fubm90YXRpb25CYXNlZE51bGxBbmFseXNpc0VuYWJsZWQpIHsK
KwkJCQlib29sZWFuIGNvbnRhaW5pbmdUeXBlRW51bSA9IGZhbHNlOworCQkJCWlmICh0aGlzLmlz
RW51bSgpKSB7CisJCQkJCWNvbnRhaW5pbmdUeXBlRW51bSA9IHRydWU7CisJCQkJCWlmICgodGhp
cy50YWdCaXRzICYgVGFnQml0cy5Bbm5vdGF0aW9uTm9uTnVsbEJ5RGVmYXVsdCkgIT0gMCkgewor
CQkJCQkJdGhpcy50YWdCaXRzIHw9IFRhZ0JpdHMuQW5ub3RhdGlvbk5vbk51bGxCeURlZmF1bHQ7
CisJCQkJCX0KKwkJCQl9CiAJCQkJZm9yIChpbnQgaSA9IDA7IGkgPHNpemU7IGkrKykgewogCQkJ
CQlJQmluYXJ5RmllbGQgYmluYXJ5RmllbGQgPSBpRmllbGRzW2ldOwotCQkJCQlzY2FuRmllbGRG
b3JOdWxsQW5ub3RhdGlvbihiaW5hcnlGaWVsZCwgdGhpcy5maWVsZHNbaV0pOworCQkJCQlzY2Fu
RmllbGRGb3JOdWxsQW5ub3RhdGlvbihiaW5hcnlGaWVsZCwgdGhpcy5maWVsZHNbaV0sIGNvbnRh
aW5pbmdUeXBlRW51bSk7CiAJCQkJfQogCQkJfQogCQl9CkBAIC0xMTYyLDcgKzExNjksNyBAQCBT
aW1wbGVMb29rdXBUYWJsZSBzdG9yZWRBbm5vdGF0aW9ucyhib29sZWFuIGZvcmNlSW5pdGlhbGl6
ZSkgewogCXJldHVybiB0aGlzLnN0b3JlZEFubm90YXRpb25zOwogfQogCi12b2lkIHNjYW5GaWVs
ZEZvck51bGxBbm5vdGF0aW9uKElCaW5hcnlGaWVsZCBmaWVsZCwgRmllbGRCaW5kaW5nIGZpZWxk
QmluZGluZykgewordm9pZCBzY2FuRmllbGRGb3JOdWxsQW5ub3RhdGlvbihJQmluYXJ5RmllbGQg
ZmllbGQsIEZpZWxkQmluZGluZyBmaWVsZEJpbmRpbmcsIGJvb2xlYW4gY29udGFpbmluZ1R5cGVF
bnVtKSB7CiAJLy8gZ2xvYmFsIG9wdGlvbiBpcyBjaGVja2VkIGJ5IGNhbGxlcgogCWNoYXJbXVtd
IG51bGxhYmxlQW5ub3RhdGlvbk5hbWUgPSB0aGlzLmVudmlyb25tZW50LmdldE51bGxhYmxlQW5u
b3RhdGlvbk5hbWUoKTsKIAljaGFyW11bXSBub25OdWxsQW5ub3RhdGlvbk5hbWUgPSB0aGlzLmVu
dmlyb25tZW50LmdldE5vbk51bGxBbm5vdGF0aW9uTmFtZSgpOwpAQCAtMTE5NSw2ICsxMjAyLDkg
QEAgdm9pZCBzY2FuRmllbGRGb3JOdWxsQW5ub3RhdGlvbihJQmluYXJ5RmllbGQgZmllbGQsIEZp
ZWxkQmluZGluZyBmaWVsZEJpbmRpbmcpIHsKIAlpZiAoIWV4cGxpY2l0TnVsbG5lc3MgJiYgKHRo
aXMudGFnQml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlvbk5vbk51bGxCeURlZmF1bHQpICE9IDApIHsK
IAkJZmllbGRCaW5kaW5nLnRhZ0JpdHMgfD0gVGFnQml0cy5Bbm5vdGF0aW9uTm9uTnVsbDsKIAl9
CisKKwlpZiAoY29udGFpbmluZ1R5cGVFbnVtIHx8IGZpZWxkQmluZGluZy50eXBlLmlzRW51bSgp
KQorCQlmaWVsZEJpbmRpbmcudGFnQml0cyB8PSBUYWdCaXRzLkFubm90YXRpb25Ob25OdWxsOwog
fQogCiB2b2lkIHNjYW5NZXRob2RGb3JOdWxsQW5ub3RhdGlvbihJQmluYXJ5TWV0aG9kIG1ldGhv
ZCwgTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nKSB7Cg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>234892</attachid>
            <date>2013-08-28 23:39:00 -0400</date>
            <delta_ts>2013-08-30 02:59:07 -0400</delta_ts>
            <desc>Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>4224</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmJ1aWxkZXIvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2J1aWxkZXIvQW5ub3RhdGlvbkRlcGVuZGVuY3lUZXN0cy5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuYnVpbGRlci9zcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvYnVpbGRlci9Bbm5vdGF0aW9uRGVwZW5kZW5jeVRlc3RzLmphdmEKaW5k
ZXggZGMwY2JhZC4uMzhjY2Y2NSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMuYnVpbGRlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvYnVpbGRlci9Bbm5vdGF0
aW9uRGVwZW5kZW5jeVRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
YnVpbGRlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvYnVpbGRlci9Bbm5vdGF0aW9u
RGVwZW5kZW5jeVRlc3RzLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKgotICogQ29weXJpZ2h0IChjKSAyMDA5LCAyMDEyIFdhbHRlciBIYXJsZXkgYW5kIG90aGVy
cy4KKyAqIENvcHlyaWdodCAoYykgMjAwOSwgMjAxMyBXYWx0ZXIgSGFybGV5IGFuZCBvdGhlcnMu
CiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlp
bmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRo
ZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMg
ZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0xNTU3LDQgKzE1NTcsNDkgQEAg
cHVibGljIGNsYXNzIEFubm90YXRpb25EZXBlbmRlbmN5VGVzdHMgZXh0ZW5kcyBCdWlsZGVyVGVz
dHMgewogCQkvLyB2ZXJpZnkgdGhhdCBUZXN0MiBvbmx5IHdhcyByZWNvbXBpbGVkCiAJCWV4cGVj
dGluZ1VuaXF1ZUNvbXBpbGVkQ2xhc3NlcyhuZXcgU3RyaW5nW10geyAicDEuVGVzdDIiIH0pOwog
CX0KKwkvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MTE3
NzEKKwkvL1tjb21waWxlcl1bbnVsbF0gRW51bSBjb25zdGFudHMgbm90IHJlY29nbml6ZWQgYXMg
YmVpbmcgTm9uTnVsbC4KKwkvL1RoaXMgdGVzdCBjYXNlIGV4cG9zZXMgdGhlIGJ1ZyBtZW50aW9u
ZWQgaW4gdGhlIGRlZmVjdC4gVGhlIGVudW0KKwkvL2RlZmluaXRpb24gY29tZXMgZnJvbSBhIGZp
bGUgZGlmZmVyZW50IGZyb20gd2hlcmUgaXQgaXMgYWNjZXNzZWQuCisJcHVibGljIHZvaWQgdGVz
dDQxMTc3MWEoKSB0aHJvd3MgSU9FeGNlcHRpb24sIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXNl
dHVwUHJvamVjdEZvck51bGxBbm5vdGF0aW9ucygpOworCQlTdHJpbmcgdGVzdEVudW1Db2RlID0g
InBhY2thZ2UgcDE7XG4iICsKKwkJCSJlbnVtIFRlc3RFbnVtIHsgRk9PIH07XG4iOworCQllbnYu
YWRkQ2xhc3MoIHRoaXMuc3JjUm9vdCwgInAxIiwgIlRlc3RFbnVtIiwgdGVzdEVudW1Db2RlICk7
CisJCWZ1bGxCdWlsZCggdGhpcy5wcm9qZWN0UGF0aCApOworCQlleHBlY3RpbmdOb1Byb2JsZW1z
KCk7CisKKwkJU3RyaW5nIG51bGxUZXN0Q29kZSA9ICJwYWNrYWdlIHAxO1xuIiArCisJCQkiaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5hbm5vdGF0aW9uLk5vbk51bGw7XG4iICsKKwkJCSJwdWJsaWMg
Y2xhc3MgTnVsbFRlc3Qge1xuIiArCisJCQkiCXB1YmxpYyBzdGF0aWMgVGVzdEVudW0gYmxhKCkg
e1xuIiArCisJCQkiCQlATm9uTnVsbCBmaW5hbCBUZXN0RW51bSB0ID0gVGVzdEVudW0uRk9PO1xu
IiArCisJCQkiICAgIAlyZXR1cm4gdDtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9IjsKKwkJZW52
LmFkZENsYXNzKCB0aGlzLnNyY1Jvb3QsICJwMSIsICJOdWxsVGVzdCIsIG51bGxUZXN0Q29kZSAp
OworCQlpbmNyZW1lbnRhbEJ1aWxkKCB0aGlzLnByb2plY3RQYXRoICk7CisJCWV4cGVjdGluZ05v
UHJvYmxlbXMoKTsKKworCQlleHBlY3RpbmdVbmlxdWVDb21waWxlZENsYXNzZXMobmV3IFN0cmlu
Z1tdIHsgInAxLk51bGxUZXN0IiB9KTsKKwl9CisKKwkvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MTE3NzEKKwkvL1tjb21waWxlcl1bbnVsbF0gRW51bSBj
b25zdGFudHMgbm90IHJlY29nbml6ZWQgYXMgYmVpbmcgTm9uTnVsbC4KKwkvL1RoZSBlbnVtIGRl
ZmluaXRpb24gaXMgY29udGFpbmVkIGluIHRoZSBzYW1lIGZpbGUgd2hlcmUgaXQgaXMgYWNjZXNz
ZWQuCisJcHVibGljIHZvaWQgdGVzdDQxMTc3MWIoKSB0aHJvd3MgSU9FeGNlcHRpb24sIEphdmFN
b2RlbEV4Y2VwdGlvbiB7CisJCXNldHVwUHJvamVjdEZvck51bGxBbm5vdGF0aW9ucygpOworCQlT
dHJpbmcgbnVsbFRlc3RDb2RlID0gInBhY2thZ2UgcDE7XG4iICsKKwkJCQkiaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5hbm5vdGF0aW9uLk5vbk51bGw7XG4iICsKKwkJCQkiZW51bSBUZXN0RW51bSB7
IEZPTyB9O1xuIiArCisJCQkJInB1YmxpYyBjbGFzcyBOdWxsVGVzdCB7XG4iICsKKwkJCQkiCXB1
YmxpYyBzdGF0aWMgVGVzdEVudW0gYmxhKCkge1xuIiArCisJCQkJIiAgICBATm9uTnVsbCBmaW5h
bCBUZXN0RW51bSB0ID0gVGVzdEVudW0uRk9PO1xuIiArCisJCQkJIiAgICByZXR1cm4gdDtcbiIg
KworCQkJCSIJfVxuIiArCisJCQkJIn0iOworCQllbnYuYWRkQ2xhc3MoIHRoaXMuc3JjUm9vdCwg
InAxIiwgIk51bGxUZXN0IiwgbnVsbFRlc3RDb2RlICk7CisJCWZ1bGxCdWlsZCggdGhpcy5wcm9q
ZWN0UGF0aCApOworCQlleHBlY3RpbmdOb1Byb2JsZW1zKCk7CisJfQogfQpkaWZmIC0tZ2l0IGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9CaW5hcnlUeXBlQmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CaW5h
cnlUeXBlQmluZGluZy5qYXZhCmluZGV4IGJmMTJjYWEuLmQyY2JhNjcgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9sb29rdXAvQmluYXJ5VHlwZUJpbmRpbmcuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Jp
bmFyeVR5cGVCaW5kaW5nLmphdmEKQEAgLTQ0Niw2ICs0NDYsOCBAQCBwcml2YXRlIHZvaWQgY3Jl
YXRlRmllbGRzKElCaW5hcnlGaWVsZFtdIGlGaWVsZHMsIGxvbmcgc291cmNlTGV2ZWwsIGNoYXJb
XVtdW10gbQogCQkJCX0KIAkJCX0KIAkJCWlmICh0aGlzLmVudmlyb25tZW50Lmdsb2JhbE9wdGlv
bnMuaXNBbm5vdGF0aW9uQmFzZWROdWxsQW5hbHlzaXNFbmFibGVkKSB7CisJCQkJaWYgKHRoaXMu
aXNFbnVtKCkgJiYgKHRoaXMudGFnQml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlvbk5vbk51bGxCeURl
ZmF1bHQpICE9IDApCisJCQkJCXRoaXMudGFnQml0cyB8PSBUYWdCaXRzLkFubm90YXRpb25Ob25O
dWxsQnlEZWZhdWx0OwogCQkJCWZvciAoaW50IGkgPSAwOyBpIDxzaXplOyBpKyspIHsKIAkJCQkJ
SUJpbmFyeUZpZWxkIGJpbmFyeUZpZWxkID0gaUZpZWxkc1tpXTsKIAkJCQkJc2NhbkZpZWxkRm9y
TnVsbEFubm90YXRpb24oYmluYXJ5RmllbGQsIHRoaXMuZmllbGRzW2ldKTsKQEAgLTExOTUsNiAr
MTE5Nyw5IEBAIHZvaWQgc2NhbkZpZWxkRm9yTnVsbEFubm90YXRpb24oSUJpbmFyeUZpZWxkIGZp
ZWxkLCBGaWVsZEJpbmRpbmcgZmllbGRCaW5kaW5nKSB7CiAJaWYgKCFleHBsaWNpdE51bGxuZXNz
ICYmICh0aGlzLnRhZ0JpdHMgJiBUYWdCaXRzLkFubm90YXRpb25Ob25OdWxsQnlEZWZhdWx0KSAh
PSAwKSB7CiAJCWZpZWxkQmluZGluZy50YWdCaXRzIHw9IFRhZ0JpdHMuQW5ub3RhdGlvbk5vbk51
bGw7CiAJfQorCisJaWYgKHRoaXMuaXNFbnVtKCkpCisJCWZpZWxkQmluZGluZy50YWdCaXRzIHw9
IFRhZ0JpdHMuQW5ub3RhdGlvbk5vbk51bGw7CiB9CiAKIHZvaWQgc2Nhbk1ldGhvZEZvck51bGxB
bm5vdGF0aW9uKElCaW5hcnlNZXRob2QgbWV0aG9kLCBNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRp
bmcpIHsK
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>235013</attachid>
            <date>2013-08-30 02:59:00 -0400</date>
            <delta_ts>2014-01-12 03:08:15 -0500</delta_ts>
            <desc>Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>4157</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmJ1aWxkZXIvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2J1aWxkZXIvQW5ub3RhdGlvbkRlcGVuZGVuY3lUZXN0cy5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuYnVpbGRlci9zcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvYnVpbGRlci9Bbm5vdGF0aW9uRGVwZW5kZW5jeVRlc3RzLmphdmEKaW5k
ZXggZGMwY2JhZC4uNTZjYjA0NyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMuYnVpbGRlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvYnVpbGRlci9Bbm5vdGF0
aW9uRGVwZW5kZW5jeVRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
YnVpbGRlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvYnVpbGRlci9Bbm5vdGF0aW9u
RGVwZW5kZW5jeVRlc3RzLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKgotICogQ29weXJpZ2h0IChjKSAyMDA5LCAyMDEyIFdhbHRlciBIYXJsZXkgYW5kIG90aGVy
cy4KKyAqIENvcHlyaWdodCAoYykgMjAwOSwgMjAxMyBXYWx0ZXIgSGFybGV5IGFuZCBvdGhlcnMu
CiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlp
bmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRo
ZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMg
ZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0xNTU3LDQgKzE1NTcsNDkgQEAg
cHVibGljIGNsYXNzIEFubm90YXRpb25EZXBlbmRlbmN5VGVzdHMgZXh0ZW5kcyBCdWlsZGVyVGVz
dHMgewogCQkvLyB2ZXJpZnkgdGhhdCBUZXN0MiBvbmx5IHdhcyByZWNvbXBpbGVkCiAJCWV4cGVj
dGluZ1VuaXF1ZUNvbXBpbGVkQ2xhc3NlcyhuZXcgU3RyaW5nW10geyAicDEuVGVzdDIiIH0pOwog
CX0KKwkvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MTE3
NzEKKwkvL1tjb21waWxlcl1bbnVsbF0gRW51bSBjb25zdGFudHMgbm90IHJlY29nbml6ZWQgYXMg
YmVpbmcgTm9uTnVsbC4KKwkvL1RoaXMgdGVzdCBjYXNlIGV4cG9zZXMgdGhlIGJ1ZyBtZW50aW9u
ZWQgaW4gdGhlIGRlZmVjdC4gVGhlIGVudW0KKwkvL2RlZmluaXRpb24gY29tZXMgZnJvbSBhIGZp
bGUgZGlmZmVyZW50IGZyb20gd2hlcmUgaXQgaXMgYWNjZXNzZWQuCisJcHVibGljIHZvaWQgdGVz
dDQxMTc3MWEoKSB0aHJvd3MgSU9FeGNlcHRpb24sIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXNl
dHVwUHJvamVjdEZvck51bGxBbm5vdGF0aW9ucygpOworCQlTdHJpbmcgdGVzdEVudW1Db2RlID0g
InBhY2thZ2UgcDE7XG4iICsKKwkJCSJlbnVtIFRlc3RFbnVtIHsgRk9PIH07XG4iOworCQllbnYu
YWRkQ2xhc3MoIHRoaXMuc3JjUm9vdCwgInAxIiwgIlRlc3RFbnVtIiwgdGVzdEVudW1Db2RlICk7
CisJCWZ1bGxCdWlsZCggdGhpcy5wcm9qZWN0UGF0aCApOworCQlleHBlY3RpbmdOb1Byb2JsZW1z
KCk7CisKKwkJU3RyaW5nIG51bGxUZXN0Q29kZSA9ICJwYWNrYWdlIHAxO1xuIiArCisJCQkiaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5hbm5vdGF0aW9uLk5vbk51bGw7XG4iICsKKwkJCSJwdWJsaWMg
Y2xhc3MgTnVsbFRlc3Qge1xuIiArCisJCQkiCXB1YmxpYyBzdGF0aWMgVGVzdEVudW0gYmxhKCkg
e1xuIiArCisJCQkiCQlATm9uTnVsbCBmaW5hbCBUZXN0RW51bSB0ID0gVGVzdEVudW0uRk9PO1xu
IiArCisJCQkiCQlyZXR1cm4gdDtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9IjsKKwkJZW52LmFk
ZENsYXNzKCB0aGlzLnNyY1Jvb3QsICJwMSIsICJOdWxsVGVzdCIsIG51bGxUZXN0Q29kZSApOwor
CQlpbmNyZW1lbnRhbEJ1aWxkKCB0aGlzLnByb2plY3RQYXRoICk7CisJCWV4cGVjdGluZ05vUHJv
YmxlbXMoKTsKKworCQlleHBlY3RpbmdVbmlxdWVDb21waWxlZENsYXNzZXMobmV3IFN0cmluZ1td
IHsgInAxLk51bGxUZXN0IiB9KTsKKwl9CisKKwkvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD00MTE3NzEKKwkvL1tjb21waWxlcl1bbnVsbF0gRW51bSBjb25z
dGFudHMgbm90IHJlY29nbml6ZWQgYXMgYmVpbmcgTm9uTnVsbC4KKwkvL1RoZSBlbnVtIGRlZmlu
aXRpb24gaXMgY29udGFpbmVkIGluIHRoZSBzYW1lIGZpbGUgd2hlcmUgaXQgaXMgYWNjZXNzZWQu
CisJcHVibGljIHZvaWQgdGVzdDQxMTc3MWIoKSB0aHJvd3MgSU9FeGNlcHRpb24sIEphdmFNb2Rl
bEV4Y2VwdGlvbiB7CisJCXNldHVwUHJvamVjdEZvck51bGxBbm5vdGF0aW9ucygpOworCQlTdHJp
bmcgbnVsbFRlc3RDb2RlID0gInBhY2thZ2UgcDE7XG4iICsKKwkJCQkiaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5hbm5vdGF0aW9uLk5vbk51bGw7XG4iICsKKwkJCQkiZW51bSBUZXN0RW51bSB7IEZP
TyB9O1xuIiArCisJCQkJInB1YmxpYyBjbGFzcyBOdWxsVGVzdCB7XG4iICsKKwkJCQkiCXB1Ymxp
YyBzdGF0aWMgVGVzdEVudW0gYmxhKCkge1xuIiArCisJCQkJIgkJQE5vbk51bGwgZmluYWwgVGVz
dEVudW0gdCA9IFRlc3RFbnVtLkZPTztcbiIgKworCQkJCSIJCXJldHVybiB0O1xuIiArCisJCQkJ
Igl9XG4iICsKKwkJCQkifSI7CisJCWVudi5hZGRDbGFzcyggdGhpcy5zcmNSb290LCAicDEiLCAi
TnVsbFRlc3QiLCBudWxsVGVzdENvZGUgKTsKKwkJZnVsbEJ1aWxkKCB0aGlzLnByb2plY3RQYXRo
ICk7CisJCWV4cGVjdGluZ05vUHJvYmxlbXMoKTsKKwl9CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
bG9va3VwL0JpbmFyeVR5cGVCaW5kaW5nLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0JpbmFyeVR5cGVC
aW5kaW5nLmphdmEKaW5kZXggYmYxMmNhYS4uMDRhYjRkMiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xv
b2t1cC9CaW5hcnlUeXBlQmluZGluZy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQmluYXJ5VHlw
ZUJpbmRpbmcuamF2YQpAQCAtNDQ2LDYgKzQ0Niw4IEBAIHByaXZhdGUgdm9pZCBjcmVhdGVGaWVs
ZHMoSUJpbmFyeUZpZWxkW10gaUZpZWxkcywgbG9uZyBzb3VyY2VMZXZlbCwgY2hhcltdW11bXSBt
CiAJCQkJfQogCQkJfQogCQkJaWYgKHRoaXMuZW52aXJvbm1lbnQuZ2xvYmFsT3B0aW9ucy5pc0Fu
bm90YXRpb25CYXNlZE51bGxBbmFseXNpc0VuYWJsZWQpIHsKKwkJCQlpZiAodGhpcy5pc0VudW0o
KSkKKwkJCQkJdGhpcy50YWdCaXRzIHw9IFRhZ0JpdHMuQW5ub3RhdGlvbk5vbk51bGxCeURlZmF1
bHQ7CiAJCQkJZm9yIChpbnQgaSA9IDA7IGkgPHNpemU7IGkrKykgewogCQkJCQlJQmluYXJ5Rmll
bGQgYmluYXJ5RmllbGQgPSBpRmllbGRzW2ldOwogCQkJCQlzY2FuRmllbGRGb3JOdWxsQW5ub3Rh
dGlvbihiaW5hcnlGaWVsZCwgdGhpcy5maWVsZHNbaV0pOwpAQCAtMTE5NSw2ICsxMTk3LDkgQEAg
dm9pZCBzY2FuRmllbGRGb3JOdWxsQW5ub3RhdGlvbihJQmluYXJ5RmllbGQgZmllbGQsIEZpZWxk
QmluZGluZyBmaWVsZEJpbmRpbmcpIHsKIAlpZiAoIWV4cGxpY2l0TnVsbG5lc3MgJiYgKHRoaXMu
dGFnQml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlvbk5vbk51bGxCeURlZmF1bHQpICE9IDApIHsKIAkJ
ZmllbGRCaW5kaW5nLnRhZ0JpdHMgfD0gVGFnQml0cy5Bbm5vdGF0aW9uTm9uTnVsbDsKIAl9CisK
KwlpZiAodGhpcy5pc0VudW0oKSkKKwkJZmllbGRCaW5kaW5nLnRhZ0JpdHMgfD0gVGFnQml0cy5B
bm5vdGF0aW9uTm9uTnVsbDsKIH0KIAogdm9pZCBzY2FuTWV0aG9kRm9yTnVsbEFubm90YXRpb24o
SUJpbmFyeU1ldGhvZCBtZXRob2QsIE1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZykgewo=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>238890</attachid>
            <date>2014-01-12 03:08:00 -0500</date>
            <delta_ts>2014-01-12 03:17:18 -0500</delta_ts>
            <desc>Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>7572</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmJ1aWxkZXIvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2J1aWxkZXIvQW5ub3RhdGlvbkRlcGVuZGVuY3lUZXN0cy5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuYnVpbGRlci9zcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvYnVpbGRlci9Bbm5vdGF0aW9uRGVwZW5kZW5jeVRlc3RzLmphdmEKaW5k
ZXggZGMwY2JhZC4uMDM3NjliOCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMuYnVpbGRlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvYnVpbGRlci9Bbm5vdGF0
aW9uRGVwZW5kZW5jeVRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
YnVpbGRlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvYnVpbGRlci9Bbm5vdGF0aW9u
RGVwZW5kZW5jeVRlc3RzLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKgotICogQ29weXJpZ2h0IChjKSAyMDA5LCAyMDEyIFdhbHRlciBIYXJsZXkgYW5kIG90aGVy
cy4KKyAqIENvcHlyaWdodCAoYykgMjAwOSwgMjAxNCBXYWx0ZXIgSGFybGV5IGFuZCBvdGhlcnMu
CiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlp
bmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRo
ZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMg
ZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0xNTU3LDQgKzE1NTcsMTEwIEBA
IHB1YmxpYyBjbGFzcyBBbm5vdGF0aW9uRGVwZW5kZW5jeVRlc3RzIGV4dGVuZHMgQnVpbGRlclRl
c3RzIHsKIAkJLy8gdmVyaWZ5IHRoYXQgVGVzdDIgb25seSB3YXMgcmVjb21waWxlZAogCQlleHBl
Y3RpbmdVbmlxdWVDb21waWxlZENsYXNzZXMobmV3IFN0cmluZ1tdIHsgInAxLlRlc3QyIiB9KTsK
IAl9CisKKwkvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00
MTE3NzEKKwkvL1tjb21waWxlcl1bbnVsbF0gRW51bSBjb25zdGFudHMgbm90IHJlY29nbml6ZWQg
YXMgYmVpbmcgTm9uTnVsbC4KKwkvL1RoaXMgdGVzdCBjYXNlIGV4cG9zZXMgdGhlIGJ1ZyBtZW50
aW9uZWQgaW4gdGhlIGRlZmVjdC4gVGhlIGVudW0KKwkvL2RlZmluaXRpb24gY29tZXMgZnJvbSBh
IGZpbGUgZGlmZmVyZW50IGZyb20gd2hlcmUgaXQgaXMgYWNjZXNzZWQuCisJcHVibGljIHZvaWQg
dGVzdDQxMTc3MWEoKSB0aHJvd3MgSU9FeGNlcHRpb24sIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJ
CQlzZXR1cFByb2plY3RGb3JOdWxsQW5ub3RhdGlvbnMoKTsKKwkJCVN0cmluZyB0ZXN0RW51bUNv
ZGUgPSAicGFja2FnZSBwMTtcbiIgKworCQkJCQkiZW51bSBUZXN0RW51bSB7Rk9PIH07XG4iOwor
CQkJZW52LmFkZENsYXNzKCB0aGlzLnNyY1Jvb3QsICJwMSIsICJUZXN0RW51bSIsIHRlc3RFbnVt
Q29kZSApOworCQkJZnVsbEJ1aWxkKCB0aGlzLnByb2plY3RQYXRoICk7CisJCQlleHBlY3RpbmdO
b1Byb2JsZW1zKCk7CisKKwkJCVN0cmluZyBudWxsVGVzdENvZGUgPSAicGFja2FnZSBwMTtcbiIg
KworCQkJCQkiaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5hbm5vdGF0aW9uLk5vbk51bGw7XG4iICsK
KwkJCQkJInB1YmxpYyBjbGFzcyBOdWxsVGVzdCB7XG4iICsKKwkJCQkJIglwdWJsaWMgc3RhdGlj
IFRlc3RFbnVtIGJsYSgpIHtcbiIgKworCQkJCQkiCQlATm9uTnVsbCBmaW5hbCBUZXN0RW51bSB0
ID0gVGVzdEVudW0uRk9PO1xuIiArCisJCQkJCSIJCXJldHVybiB0O1xuIiArCisJCQkJCSIJfVxu
IiArCisJCQkJCSJ9IjsKKwkJCWVudi5hZGRDbGFzcyggdGhpcy5zcmNSb290LCAicDEiLCAiTnVs
bFRlc3QiLCBudWxsVGVzdENvZGUgKTsKKwkJCWluY3JlbWVudGFsQnVpbGQoIHRoaXMucHJvamVj
dFBhdGggKTsKKwkJCWV4cGVjdGluZ05vUHJvYmxlbXMoKTsKKworCQkJZXhwZWN0aW5nVW5pcXVl
Q29tcGlsZWRDbGFzc2VzKG5ldyBTdHJpbmdbXSB7ICJwMS5OdWxsVGVzdCIgfSk7CisJfQorCisJ
Ly9odHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDExNzcxCisJ
Ly9bY29tcGlsZXJdW251bGxdIEVudW0gY29uc3RhbnRzIG5vdCByZWNvZ25pemVkIGFzIGJlaW5n
IE5vbk51bGwuCisJLy9EaXN0aW5ndWlzaCBiZXR3ZWVuIGVudW0gY29uc3RhbnQgYW5kIGVudW0g
dHlwZS4gVGhlIGVudW0gdHlwZSBzaG91bGQgbm90CisJLy9iZSBtYXJrZWQgYXMgTm9uTnVsbC4K
KwlwdWJsaWMgdm9pZCB0ZXN0NDExNzcxYigpIHRocm93cyBJT0V4Y2VwdGlvbiwgSmF2YU1vZGVs
RXhjZXB0aW9uIHsKKwkJc2V0dXBQcm9qZWN0Rm9yTnVsbEFubm90YXRpb25zKCk7CisJCVN0cmlu
ZyB0ZXN0RW51bUNvZGUgPSAicGFja2FnZSBwMTtcbiIgKworCQkJCSJlbnVtIFRlc3RFbnVtIHsg
Rk9PIH07XG4iOworCQllbnYuYWRkQ2xhc3MoIHRoaXMuc3JjUm9vdCwgInAxIiwgIlRlc3RFbnVt
IiwgdGVzdEVudW1Db2RlICk7CisJCWZ1bGxCdWlsZCggdGhpcy5wcm9qZWN0UGF0aCApOworCQll
eHBlY3RpbmdOb1Byb2JsZW1zKCk7CisKKwkJU3RyaW5nIHRlc3RDbGFzcyA9ICJwYWNrYWdlIHAx
O1xuIiArCisJCQkJInB1YmxpYyBjbGFzcyBYIHsgVGVzdEVudW0gZjsgfTtcbiI7CisJCWVudi5h
ZGRDbGFzcyggdGhpcy5zcmNSb290LCAicDEiLCAiWCIsIHRlc3RDbGFzcyApOworCQlpbmNyZW1l
bnRhbEJ1aWxkKCB0aGlzLnByb2plY3RQYXRoICk7CisJCWV4cGVjdGluZ05vUHJvYmxlbXMoKTsK
KworCQlTdHJpbmcgbnVsbFRlc3RDb2RlID0gInBhY2thZ2UgcDE7XG4iICsKKwkJCQkiaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5hbm5vdGF0aW9uLk5vbk51bGw7XG4iICsKKwkJCQkicHVibGljIGNs
YXNzIE51bGxUZXN0IHtcbiIgKworCQkJCSIgIHB1YmxpYyBzdGF0aWMgVGVzdEVudW0gYmxhKFgg
eCkge1xuIiArCisJCQkJIglATm9uTnVsbCBmaW5hbCBUZXN0RW51bSB0ID0geC5mO1xuIiArCisJ
CQkJIglyZXR1cm4gdDtcbiIgKworCQkJCSIgIH1cbiIgKworCQkJCSJ9XG4iOworCQlJUGF0aCB0
ZXN0MVBhdGggPSBlbnYuYWRkQ2xhc3MoIHRoaXMuc3JjUm9vdCwgInAxIiwgIk51bGxUZXN0Iiwg
bnVsbFRlc3RDb2RlICk7CisJCWluY3JlbWVudGFsQnVpbGQoIHRoaXMucHJvamVjdFBhdGggKTsK
KworCQlleHBlY3RpbmdQcm9ibGVtc0Zvcih0ZXN0MVBhdGgsCisJCQkJIlByb2JsZW0gOiBOdWxs
IHR5cGUgc2FmZXR5OiBUaGUgZXhwcmVzc2lvbiBvZiB0eXBlIFRlc3RFbnVtIG5lZWRzIHVuY2hl
Y2tlZCBjb252ZXJzaW9uIHRvIGNvbmZvcm0gdG8gIiArCisJCQkJIidATm9uTnVsbCBUZXN0RW51
bScgWyByZXNvdXJjZSA6IDwvUHJvamVjdC9zcmMvcDEvTnVsbFRlc3QuamF2YT4gcmFuZ2UgOiA8
MTQ0LDE0Nz4gY2F0ZWdvcnkgOiA8OTA+IHNldmVyaXR5IDogPDE+XSIpOworCisJCWV4cGVjdGlu
Z1VuaXF1ZUNvbXBpbGVkQ2xhc3NlcyhuZXcgU3RyaW5nW10geyAicDEuTnVsbFRlc3QiIH0pOwor
CX0KKworCS8vaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQx
MTc3MQorCS8vW2NvbXBpbGVyXVtudWxsXSBFbnVtIGNvbnN0YW50cyBub3QgcmVjb2duaXplZCBh
cyBiZWluZyBOb25OdWxsLgorCS8vQSBlbnVtIG1heSBjb250YWluIGZpZWxkcyBvdGhlciB0aGFu
IHByZWRlZmluZWQgY29uc3RhbnRzLiBXZQorCS8vc2hvdWxkIG5vdCB0YWcgdGhlbSBhcyBOb25O
dWxsLgorCXB1YmxpYyB2b2lkIHRlc3Q0MTE3NzFjKCkgdGhyb3dzIElPRXhjZXB0aW9uLCBKYXZh
TW9kZWxFeGNlcHRpb24geworCQlzZXR1cFByb2plY3RGb3JOdWxsQW5ub3RhdGlvbnMoKTsKKwkJ
U3RyaW5nIHRlc3RDbGFzcyA9ICJwYWNrYWdlIHAxO1xuIiArCisJCQkJInB1YmxpYyBjbGFzcyBB
IHt9IjsKKwkJZW52LmFkZENsYXNzKCB0aGlzLnNyY1Jvb3QsICJwMSIsICJBIiwgdGVzdENsYXNz
ICk7CisJCWZ1bGxCdWlsZCggdGhpcy5wcm9qZWN0UGF0aCApOworCQlleHBlY3RpbmdOb1Byb2Js
ZW1zKCk7CisKKwkJU3RyaW5nIHRlc3RFbnVtQ29kZSA9ICJwYWNrYWdlIHAxO1xuIiArCisJCQkJ
ImVudW0gVGVzdEVudW0ge1xuIiArCisJCQkJIgkJRk9PO1xuIiArCisJCQkJIiAJCXB1YmxpYyBz
dGF0aWMgQSBhOyIgKworCQkJCSJ9O1xuIjsKKwkJZW52LmFkZENsYXNzKCB0aGlzLnNyY1Jvb3Qs
ICJwMSIsICJUZXN0RW51bSIsIHRlc3RFbnVtQ29kZSApOworCQlpbmNyZW1lbnRhbEJ1aWxkKCB0
aGlzLnByb2plY3RQYXRoICk7CisJCWV4cGVjdGluZ05vUHJvYmxlbXMoKTsKKworCQlTdHJpbmcg
bnVsbFRlc3RDb2RlID0gInBhY2thZ2UgcDE7XG4iICsKKwkJCQkiaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5hbm5vdGF0aW9uLk5vbk51bGw7XG4iICsKKwkJCQkicHVibGljIGNsYXNzIE51bGxUZXN0
IHtcbiIgKworCQkJCSIJcHVibGljIHN0YXRpYyBUZXN0RW51bSBibGEoKSB7XG4iICsKKwkJCQki
CQlATm9uTnVsbCBmaW5hbCBUZXN0RW51bSB0ID0gVGVzdEVudW0uRk9PO1xuIiArCisJCQkJIgkJ
cmV0dXJuIHQ7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJcHVibGljIEEgdGVzdGludCgpIHtc
biIgKworCQkJCSIJCUBOb25OdWxsIEEgYSA9IFRlc3RFbnVtLmE7XG4iICsKKwkJCQkiICAgICAg
IHJldHVybiBhO1xuIiArCisJCQkJIiAgIH1cbiIgKworCQkJCSJ9IjsKKwkJSVBhdGggdGVzdDFQ
YXRoID0gZW52LmFkZENsYXNzKCB0aGlzLnNyY1Jvb3QsICJwMSIsICJOdWxsVGVzdCIsIG51bGxU
ZXN0Q29kZSApOworCQlpbmNyZW1lbnRhbEJ1aWxkKCB0aGlzLnByb2plY3RQYXRoICk7CisJCWV4
cGVjdGluZ1Byb2JsZW1zRm9yKHRlc3QxUGF0aCwKKwkJCQkiUHJvYmxlbSA6IE51bGwgdHlwZSBz
YWZldHk6IFRoZSBleHByZXNzaW9uIG9mIHR5cGUgQSBuZWVkcyB1bmNoZWNrZWQgY29udmVyc2lv
biB0byBjb25mb3JtIHRvICIgKworCQkJCSInQE5vbk51bGwgQScgWyByZXNvdXJjZSA6IDwvUHJv
amVjdC9zcmMvcDEvTnVsbFRlc3QuamF2YT4gcmFuZ2UgOiA8MjA5LDIxOT4gY2F0ZWdvcnkgOiA8
OTA+IHNldmVyaXR5IDogPDE+XSIpOworCisJCWV4cGVjdGluZ1VuaXF1ZUNvbXBpbGVkQ2xhc3Nl
cyhuZXcgU3RyaW5nW10geyAicDEuTnVsbFRlc3QiIH0pOworCX0KKwogfQpkaWZmIC0tZ2l0IGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9CaW5hcnlUeXBlQmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CaW5h
cnlUeXBlQmluZGluZy5qYXZhCmluZGV4IDlmN2FiYzcuLjU2YTkxZTAgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9sb29rdXAvQmluYXJ5VHlwZUJpbmRpbmcuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Jp
bmFyeVR5cGVCaW5kaW5nLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21w
YW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBv
ZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0
aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtNDQ5LDcgKzQ0OSw3IEBA
IHByaXZhdGUgdm9pZCBjcmVhdGVGaWVsZHMoSUJpbmFyeUZpZWxkW10gaUZpZWxkcywgbG9uZyBz
b3VyY2VMZXZlbCwgY2hhcltdW11bXSBtCiAJCQlpZiAodGhpcy5lbnZpcm9ubWVudC5nbG9iYWxP
cHRpb25zLmlzQW5ub3RhdGlvbkJhc2VkTnVsbEFuYWx5c2lzRW5hYmxlZCkgewogCQkJCWZvciAo
aW50IGkgPSAwOyBpIDxzaXplOyBpKyspIHsKIAkJCQkJSUJpbmFyeUZpZWxkIGJpbmFyeUZpZWxk
ID0gaUZpZWxkc1tpXTsKLQkJCQkJc2NhbkZpZWxkRm9yTnVsbEFubm90YXRpb24oYmluYXJ5Rmll
bGQsIHRoaXMuZmllbGRzW2ldKTsKKwkJCQkJc2NhbkZpZWxkRm9yTnVsbEFubm90YXRpb24oYmlu
YXJ5RmllbGQsIHRoaXMuZmllbGRzW2ldLCB0aGlzLmlzRW51bSgpKTsKIAkJCQl9CiAJCQl9CiAJ
CX0KQEAgLTExNjMsNyArMTE2Myw3IEBAIFNpbXBsZUxvb2t1cFRhYmxlIHN0b3JlZEFubm90YXRp
b25zKGJvb2xlYW4gZm9yY2VJbml0aWFsaXplKSB7CiAJcmV0dXJuIHRoaXMuc3RvcmVkQW5ub3Rh
dGlvbnM7CiB9CiAKLXZvaWQgc2NhbkZpZWxkRm9yTnVsbEFubm90YXRpb24oSUJpbmFyeUZpZWxk
IGZpZWxkLCBGaWVsZEJpbmRpbmcgZmllbGRCaW5kaW5nKSB7Cit2b2lkIHNjYW5GaWVsZEZvck51
bGxBbm5vdGF0aW9uKElCaW5hcnlGaWVsZCBmaWVsZCwgRmllbGRCaW5kaW5nIGZpZWxkQmluZGlu
ZywgYm9vbGVhbiBpc0VudW0pIHsKIAkvLyBnbG9iYWwgb3B0aW9uIGlzIGNoZWNrZWQgYnkgY2Fs
bGVyCiAJY2hhcltdW10gbnVsbGFibGVBbm5vdGF0aW9uTmFtZSA9IHRoaXMuZW52aXJvbm1lbnQu
Z2V0TnVsbGFibGVBbm5vdGF0aW9uTmFtZSgpOwogCWNoYXJbXVtdIG5vbk51bGxBbm5vdGF0aW9u
TmFtZSA9IHRoaXMuZW52aXJvbm1lbnQuZ2V0Tm9uTnVsbEFubm90YXRpb25OYW1lKCk7CkBAIC0x
MTkzLDkgKzExOTMsMTcgQEAgdm9pZCBzY2FuRmllbGRGb3JOdWxsQW5ub3RhdGlvbihJQmluYXJ5
RmllbGQgZmllbGQsIEZpZWxkQmluZGluZyBmaWVsZEJpbmRpbmcpIHsKIAkJCX0KIAkJfQogCX0K
KwogCWlmICghZXhwbGljaXROdWxsbmVzcyAmJiAodGhpcy50YWdCaXRzICYgVGFnQml0cy5Bbm5v
dGF0aW9uTm9uTnVsbEJ5RGVmYXVsdCkgIT0gMCkgewogCQlmaWVsZEJpbmRpbmcudGFnQml0cyB8
PSBUYWdCaXRzLkFubm90YXRpb25Ob25OdWxsOwogCX0KKworCisJaWYgKGlzRW51bSkgeworCQlp
ZiAoKGZpZWxkLmdldE1vZGlmaWVycygpICYgQ2xhc3NGaWxlQ29uc3RhbnRzLkFjY0VudW0pICE9
IDApIHsKKwkJCWZpZWxkQmluZGluZy50YWdCaXRzIHw9IFRhZ0JpdHMuQW5ub3RhdGlvbk5vbk51
bGw7CisJCX0KKwl9CiB9CiAKIHZvaWQgc2Nhbk1ldGhvZEZvck51bGxBbm5vdGF0aW9uKElCaW5h
cnlNZXRob2QgbWV0aG9kLCBNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcpIHsK
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>238891</attachid>
            <date>2014-01-12 03:17:00 -0500</date>
            <delta_ts>2014-01-12 03:17:18 -0500</delta_ts>
            <desc>Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>7551</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmJ1aWxkZXIvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2J1aWxkZXIvQW5ub3RhdGlvbkRlcGVuZGVuY3lUZXN0cy5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuYnVpbGRlci9zcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvYnVpbGRlci9Bbm5vdGF0aW9uRGVwZW5kZW5jeVRlc3RzLmphdmEKaW5k
ZXggZGMwY2JhZC4uMDM3NjliOCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMuYnVpbGRlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvYnVpbGRlci9Bbm5vdGF0
aW9uRGVwZW5kZW5jeVRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
YnVpbGRlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvYnVpbGRlci9Bbm5vdGF0aW9u
RGVwZW5kZW5jeVRlc3RzLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKgotICogQ29weXJpZ2h0IChjKSAyMDA5LCAyMDEyIFdhbHRlciBIYXJsZXkgYW5kIG90aGVy
cy4KKyAqIENvcHlyaWdodCAoYykgMjAwOSwgMjAxNCBXYWx0ZXIgSGFybGV5IGFuZCBvdGhlcnMu
CiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlp
bmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRo
ZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMg
ZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0xNTU3LDQgKzE1NTcsMTEwIEBA
IHB1YmxpYyBjbGFzcyBBbm5vdGF0aW9uRGVwZW5kZW5jeVRlc3RzIGV4dGVuZHMgQnVpbGRlclRl
c3RzIHsKIAkJLy8gdmVyaWZ5IHRoYXQgVGVzdDIgb25seSB3YXMgcmVjb21waWxlZAogCQlleHBl
Y3RpbmdVbmlxdWVDb21waWxlZENsYXNzZXMobmV3IFN0cmluZ1tdIHsgInAxLlRlc3QyIiB9KTsK
IAl9CisKKwkvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00
MTE3NzEKKwkvL1tjb21waWxlcl1bbnVsbF0gRW51bSBjb25zdGFudHMgbm90IHJlY29nbml6ZWQg
YXMgYmVpbmcgTm9uTnVsbC4KKwkvL1RoaXMgdGVzdCBjYXNlIGV4cG9zZXMgdGhlIGJ1ZyBtZW50
aW9uZWQgaW4gdGhlIGRlZmVjdC4gVGhlIGVudW0KKwkvL2RlZmluaXRpb24gY29tZXMgZnJvbSBh
IGZpbGUgZGlmZmVyZW50IGZyb20gd2hlcmUgaXQgaXMgYWNjZXNzZWQuCisJcHVibGljIHZvaWQg
dGVzdDQxMTc3MWEoKSB0aHJvd3MgSU9FeGNlcHRpb24sIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJ
CQlzZXR1cFByb2plY3RGb3JOdWxsQW5ub3RhdGlvbnMoKTsKKwkJCVN0cmluZyB0ZXN0RW51bUNv
ZGUgPSAicGFja2FnZSBwMTtcbiIgKworCQkJCQkiZW51bSBUZXN0RW51bSB7Rk9PIH07XG4iOwor
CQkJZW52LmFkZENsYXNzKCB0aGlzLnNyY1Jvb3QsICJwMSIsICJUZXN0RW51bSIsIHRlc3RFbnVt
Q29kZSApOworCQkJZnVsbEJ1aWxkKCB0aGlzLnByb2plY3RQYXRoICk7CisJCQlleHBlY3RpbmdO
b1Byb2JsZW1zKCk7CisKKwkJCVN0cmluZyBudWxsVGVzdENvZGUgPSAicGFja2FnZSBwMTtcbiIg
KworCQkJCQkiaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5hbm5vdGF0aW9uLk5vbk51bGw7XG4iICsK
KwkJCQkJInB1YmxpYyBjbGFzcyBOdWxsVGVzdCB7XG4iICsKKwkJCQkJIglwdWJsaWMgc3RhdGlj
IFRlc3RFbnVtIGJsYSgpIHtcbiIgKworCQkJCQkiCQlATm9uTnVsbCBmaW5hbCBUZXN0RW51bSB0
ID0gVGVzdEVudW0uRk9PO1xuIiArCisJCQkJCSIJCXJldHVybiB0O1xuIiArCisJCQkJCSIJfVxu
IiArCisJCQkJCSJ9IjsKKwkJCWVudi5hZGRDbGFzcyggdGhpcy5zcmNSb290LCAicDEiLCAiTnVs
bFRlc3QiLCBudWxsVGVzdENvZGUgKTsKKwkJCWluY3JlbWVudGFsQnVpbGQoIHRoaXMucHJvamVj
dFBhdGggKTsKKwkJCWV4cGVjdGluZ05vUHJvYmxlbXMoKTsKKworCQkJZXhwZWN0aW5nVW5pcXVl
Q29tcGlsZWRDbGFzc2VzKG5ldyBTdHJpbmdbXSB7ICJwMS5OdWxsVGVzdCIgfSk7CisJfQorCisJ
Ly9odHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDExNzcxCisJ
Ly9bY29tcGlsZXJdW251bGxdIEVudW0gY29uc3RhbnRzIG5vdCByZWNvZ25pemVkIGFzIGJlaW5n
IE5vbk51bGwuCisJLy9EaXN0aW5ndWlzaCBiZXR3ZWVuIGVudW0gY29uc3RhbnQgYW5kIGVudW0g
dHlwZS4gVGhlIGVudW0gdHlwZSBzaG91bGQgbm90CisJLy9iZSBtYXJrZWQgYXMgTm9uTnVsbC4K
KwlwdWJsaWMgdm9pZCB0ZXN0NDExNzcxYigpIHRocm93cyBJT0V4Y2VwdGlvbiwgSmF2YU1vZGVs
RXhjZXB0aW9uIHsKKwkJc2V0dXBQcm9qZWN0Rm9yTnVsbEFubm90YXRpb25zKCk7CisJCVN0cmlu
ZyB0ZXN0RW51bUNvZGUgPSAicGFja2FnZSBwMTtcbiIgKworCQkJCSJlbnVtIFRlc3RFbnVtIHsg
Rk9PIH07XG4iOworCQllbnYuYWRkQ2xhc3MoIHRoaXMuc3JjUm9vdCwgInAxIiwgIlRlc3RFbnVt
IiwgdGVzdEVudW1Db2RlICk7CisJCWZ1bGxCdWlsZCggdGhpcy5wcm9qZWN0UGF0aCApOworCQll
eHBlY3RpbmdOb1Byb2JsZW1zKCk7CisKKwkJU3RyaW5nIHRlc3RDbGFzcyA9ICJwYWNrYWdlIHAx
O1xuIiArCisJCQkJInB1YmxpYyBjbGFzcyBYIHsgVGVzdEVudW0gZjsgfTtcbiI7CisJCWVudi5h
ZGRDbGFzcyggdGhpcy5zcmNSb290LCAicDEiLCAiWCIsIHRlc3RDbGFzcyApOworCQlpbmNyZW1l
bnRhbEJ1aWxkKCB0aGlzLnByb2plY3RQYXRoICk7CisJCWV4cGVjdGluZ05vUHJvYmxlbXMoKTsK
KworCQlTdHJpbmcgbnVsbFRlc3RDb2RlID0gInBhY2thZ2UgcDE7XG4iICsKKwkJCQkiaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5hbm5vdGF0aW9uLk5vbk51bGw7XG4iICsKKwkJCQkicHVibGljIGNs
YXNzIE51bGxUZXN0IHtcbiIgKworCQkJCSIgIHB1YmxpYyBzdGF0aWMgVGVzdEVudW0gYmxhKFgg
eCkge1xuIiArCisJCQkJIglATm9uTnVsbCBmaW5hbCBUZXN0RW51bSB0ID0geC5mO1xuIiArCisJ
CQkJIglyZXR1cm4gdDtcbiIgKworCQkJCSIgIH1cbiIgKworCQkJCSJ9XG4iOworCQlJUGF0aCB0
ZXN0MVBhdGggPSBlbnYuYWRkQ2xhc3MoIHRoaXMuc3JjUm9vdCwgInAxIiwgIk51bGxUZXN0Iiwg
bnVsbFRlc3RDb2RlICk7CisJCWluY3JlbWVudGFsQnVpbGQoIHRoaXMucHJvamVjdFBhdGggKTsK
KworCQlleHBlY3RpbmdQcm9ibGVtc0Zvcih0ZXN0MVBhdGgsCisJCQkJIlByb2JsZW0gOiBOdWxs
IHR5cGUgc2FmZXR5OiBUaGUgZXhwcmVzc2lvbiBvZiB0eXBlIFRlc3RFbnVtIG5lZWRzIHVuY2hl
Y2tlZCBjb252ZXJzaW9uIHRvIGNvbmZvcm0gdG8gIiArCisJCQkJIidATm9uTnVsbCBUZXN0RW51
bScgWyByZXNvdXJjZSA6IDwvUHJvamVjdC9zcmMvcDEvTnVsbFRlc3QuamF2YT4gcmFuZ2UgOiA8
MTQ0LDE0Nz4gY2F0ZWdvcnkgOiA8OTA+IHNldmVyaXR5IDogPDE+XSIpOworCisJCWV4cGVjdGlu
Z1VuaXF1ZUNvbXBpbGVkQ2xhc3NlcyhuZXcgU3RyaW5nW10geyAicDEuTnVsbFRlc3QiIH0pOwor
CX0KKworCS8vaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQx
MTc3MQorCS8vW2NvbXBpbGVyXVtudWxsXSBFbnVtIGNvbnN0YW50cyBub3QgcmVjb2duaXplZCBh
cyBiZWluZyBOb25OdWxsLgorCS8vQSBlbnVtIG1heSBjb250YWluIGZpZWxkcyBvdGhlciB0aGFu
IHByZWRlZmluZWQgY29uc3RhbnRzLiBXZQorCS8vc2hvdWxkIG5vdCB0YWcgdGhlbSBhcyBOb25O
dWxsLgorCXB1YmxpYyB2b2lkIHRlc3Q0MTE3NzFjKCkgdGhyb3dzIElPRXhjZXB0aW9uLCBKYXZh
TW9kZWxFeGNlcHRpb24geworCQlzZXR1cFByb2plY3RGb3JOdWxsQW5ub3RhdGlvbnMoKTsKKwkJ
U3RyaW5nIHRlc3RDbGFzcyA9ICJwYWNrYWdlIHAxO1xuIiArCisJCQkJInB1YmxpYyBjbGFzcyBB
IHt9IjsKKwkJZW52LmFkZENsYXNzKCB0aGlzLnNyY1Jvb3QsICJwMSIsICJBIiwgdGVzdENsYXNz
ICk7CisJCWZ1bGxCdWlsZCggdGhpcy5wcm9qZWN0UGF0aCApOworCQlleHBlY3RpbmdOb1Byb2Js
ZW1zKCk7CisKKwkJU3RyaW5nIHRlc3RFbnVtQ29kZSA9ICJwYWNrYWdlIHAxO1xuIiArCisJCQkJ
ImVudW0gVGVzdEVudW0ge1xuIiArCisJCQkJIgkJRk9PO1xuIiArCisJCQkJIiAJCXB1YmxpYyBz
dGF0aWMgQSBhOyIgKworCQkJCSJ9O1xuIjsKKwkJZW52LmFkZENsYXNzKCB0aGlzLnNyY1Jvb3Qs
ICJwMSIsICJUZXN0RW51bSIsIHRlc3RFbnVtQ29kZSApOworCQlpbmNyZW1lbnRhbEJ1aWxkKCB0
aGlzLnByb2plY3RQYXRoICk7CisJCWV4cGVjdGluZ05vUHJvYmxlbXMoKTsKKworCQlTdHJpbmcg
bnVsbFRlc3RDb2RlID0gInBhY2thZ2UgcDE7XG4iICsKKwkJCQkiaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5hbm5vdGF0aW9uLk5vbk51bGw7XG4iICsKKwkJCQkicHVibGljIGNsYXNzIE51bGxUZXN0
IHtcbiIgKworCQkJCSIJcHVibGljIHN0YXRpYyBUZXN0RW51bSBibGEoKSB7XG4iICsKKwkJCQki
CQlATm9uTnVsbCBmaW5hbCBUZXN0RW51bSB0ID0gVGVzdEVudW0uRk9PO1xuIiArCisJCQkJIgkJ
cmV0dXJuIHQ7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJcHVibGljIEEgdGVzdGludCgpIHtc
biIgKworCQkJCSIJCUBOb25OdWxsIEEgYSA9IFRlc3RFbnVtLmE7XG4iICsKKwkJCQkiICAgICAg
IHJldHVybiBhO1xuIiArCisJCQkJIiAgIH1cbiIgKworCQkJCSJ9IjsKKwkJSVBhdGggdGVzdDFQ
YXRoID0gZW52LmFkZENsYXNzKCB0aGlzLnNyY1Jvb3QsICJwMSIsICJOdWxsVGVzdCIsIG51bGxU
ZXN0Q29kZSApOworCQlpbmNyZW1lbnRhbEJ1aWxkKCB0aGlzLnByb2plY3RQYXRoICk7CisJCWV4
cGVjdGluZ1Byb2JsZW1zRm9yKHRlc3QxUGF0aCwKKwkJCQkiUHJvYmxlbSA6IE51bGwgdHlwZSBz
YWZldHk6IFRoZSBleHByZXNzaW9uIG9mIHR5cGUgQSBuZWVkcyB1bmNoZWNrZWQgY29udmVyc2lv
biB0byBjb25mb3JtIHRvICIgKworCQkJCSInQE5vbk51bGwgQScgWyByZXNvdXJjZSA6IDwvUHJv
amVjdC9zcmMvcDEvTnVsbFRlc3QuamF2YT4gcmFuZ2UgOiA8MjA5LDIxOT4gY2F0ZWdvcnkgOiA8
OTA+IHNldmVyaXR5IDogPDE+XSIpOworCisJCWV4cGVjdGluZ1VuaXF1ZUNvbXBpbGVkQ2xhc3Nl
cyhuZXcgU3RyaW5nW10geyAicDEuTnVsbFRlc3QiIH0pOworCX0KKwogfQpkaWZmIC0tZ2l0IGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9CaW5hcnlUeXBlQmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CaW5h
cnlUeXBlQmluZGluZy5qYXZhCmluZGV4IDlmN2FiYzcuLjA2NDYxNDIgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9sb29rdXAvQmluYXJ5VHlwZUJpbmRpbmcuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Jp
bmFyeVR5cGVCaW5kaW5nLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21w
YW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBv
ZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0
aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtNDQ5LDcgKzQ0OSw3IEBA
IHByaXZhdGUgdm9pZCBjcmVhdGVGaWVsZHMoSUJpbmFyeUZpZWxkW10gaUZpZWxkcywgbG9uZyBz
b3VyY2VMZXZlbCwgY2hhcltdW11bXSBtCiAJCQlpZiAodGhpcy5lbnZpcm9ubWVudC5nbG9iYWxP
cHRpb25zLmlzQW5ub3RhdGlvbkJhc2VkTnVsbEFuYWx5c2lzRW5hYmxlZCkgewogCQkJCWZvciAo
aW50IGkgPSAwOyBpIDxzaXplOyBpKyspIHsKIAkJCQkJSUJpbmFyeUZpZWxkIGJpbmFyeUZpZWxk
ID0gaUZpZWxkc1tpXTsKLQkJCQkJc2NhbkZpZWxkRm9yTnVsbEFubm90YXRpb24oYmluYXJ5Rmll
bGQsIHRoaXMuZmllbGRzW2ldKTsKKwkJCQkJc2NhbkZpZWxkRm9yTnVsbEFubm90YXRpb24oYmlu
YXJ5RmllbGQsIHRoaXMuZmllbGRzW2ldLCB0aGlzLmlzRW51bSgpKTsKIAkJCQl9CiAJCQl9CiAJ
CX0KQEAgLTExNjMsNyArMTE2Myw3IEBAIFNpbXBsZUxvb2t1cFRhYmxlIHN0b3JlZEFubm90YXRp
b25zKGJvb2xlYW4gZm9yY2VJbml0aWFsaXplKSB7CiAJcmV0dXJuIHRoaXMuc3RvcmVkQW5ub3Rh
dGlvbnM7CiB9CiAKLXZvaWQgc2NhbkZpZWxkRm9yTnVsbEFubm90YXRpb24oSUJpbmFyeUZpZWxk
IGZpZWxkLCBGaWVsZEJpbmRpbmcgZmllbGRCaW5kaW5nKSB7Cit2b2lkIHNjYW5GaWVsZEZvck51
bGxBbm5vdGF0aW9uKElCaW5hcnlGaWVsZCBmaWVsZCwgRmllbGRCaW5kaW5nIGZpZWxkQmluZGlu
ZywgYm9vbGVhbiBpc0VudW0pIHsKIAkvLyBnbG9iYWwgb3B0aW9uIGlzIGNoZWNrZWQgYnkgY2Fs
bGVyCiAJY2hhcltdW10gbnVsbGFibGVBbm5vdGF0aW9uTmFtZSA9IHRoaXMuZW52aXJvbm1lbnQu
Z2V0TnVsbGFibGVBbm5vdGF0aW9uTmFtZSgpOwogCWNoYXJbXVtdIG5vbk51bGxBbm5vdGF0aW9u
TmFtZSA9IHRoaXMuZW52aXJvbm1lbnQuZ2V0Tm9uTnVsbEFubm90YXRpb25OYW1lKCk7CkBAIC0x
MTk2LDYgKzExOTYsMTEgQEAgdm9pZCBzY2FuRmllbGRGb3JOdWxsQW5ub3RhdGlvbihJQmluYXJ5
RmllbGQgZmllbGQsIEZpZWxkQmluZGluZyBmaWVsZEJpbmRpbmcpIHsKIAlpZiAoIWV4cGxpY2l0
TnVsbG5lc3MgJiYgKHRoaXMudGFnQml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlvbk5vbk51bGxCeURl
ZmF1bHQpICE9IDApIHsKIAkJZmllbGRCaW5kaW5nLnRhZ0JpdHMgfD0gVGFnQml0cy5Bbm5vdGF0
aW9uTm9uTnVsbDsKIAl9CisJaWYgKGlzRW51bSkgeworCQlpZiAoKGZpZWxkLmdldE1vZGlmaWVy
cygpICYgQ2xhc3NGaWxlQ29uc3RhbnRzLkFjY0VudW0pICE9IDApIHsKKwkJCWZpZWxkQmluZGlu
Zy50YWdCaXRzIHw9IFRhZ0JpdHMuQW5ub3RhdGlvbk5vbk51bGw7CisJCX0KKwl9CiB9CiAKIHZv
aWQgc2Nhbk1ldGhvZEZvck51bGxBbm5vdGF0aW9uKElCaW5hcnlNZXRob2QgbWV0aG9kLCBNZXRo
b2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcpIHsK
</data>
<flag name="review"
          id="60332"
          type_id="6"
          status="?"
          setter="shankhba"
    />
          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>240289</attachid>
            <date>2014-02-25 03:46:00 -0500</date>
            <delta_ts>2014-02-25 05:48:20 -0500</delta_ts>
            <desc>Patch: Ported to BETA_JAVA8 branch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>7177</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmJ1aWxkZXIvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2J1aWxkZXIvQW5ub3RhdGlvbkRlcGVuZGVuY3lUZXN0cy5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuYnVpbGRlci9zcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvYnVpbGRlci9Bbm5vdGF0aW9uRGVwZW5kZW5jeVRlc3RzLmphdmEKaW5k
ZXggY2Y3YzYxNi4uMDk1YmZmOSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMuYnVpbGRlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvYnVpbGRlci9Bbm5vdGF0
aW9uRGVwZW5kZW5jeVRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
YnVpbGRlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvYnVpbGRlci9Bbm5vdGF0aW9u
RGVwZW5kZW5jeVRlc3RzLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKgotICogQ29weXJpZ2h0IChjKSAyMDA5LCAyMDEyIFdhbHRlciBIYXJsZXkgYW5kIG90aGVy
cy4KKyAqIENvcHlyaWdodCAoYykgMjAwOSwgMjAxNCBXYWx0ZXIgSGFybGV5IGFuZCBvdGhlcnMu
CiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlp
bmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRo
ZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMg
ZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0xNTYxLDQgKzE1NjEsMTA5IEBA
IHB1YmxpYyBjbGFzcyBBbm5vdGF0aW9uRGVwZW5kZW5jeVRlc3RzIGV4dGVuZHMgQnVpbGRlclRl
c3RzIHsKIAkJLy8gdmVyaWZ5IHRoYXQgVGVzdDIgb25seSB3YXMgcmVjb21waWxlZAogCQlleHBl
Y3RpbmdVbmlxdWVDb21waWxlZENsYXNzZXMobmV3IFN0cmluZ1tdIHsgInAxLlRlc3QyIiB9KTsK
IAl9CisKKwkgLy9odHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
NDExNzcxCisJIC8vW2NvbXBpbGVyXVtudWxsXSBFbnVtIGNvbnN0YW50cyBub3QgcmVjb2duaXpl
ZCBhcyBiZWluZyBOb25OdWxsLgorCSAvL1RoaXMgdGVzdCBjYXNlIGV4cG9zZXMgdGhlIGJ1ZyBt
ZW50aW9uZWQgaW4gdGhlIGRlZmVjdC4gVGhlIGVudW0KKwkgLy9kZWZpbml0aW9uIGNvbWVzIGZy
b20gYSBmaWxlIGRpZmZlcmVudCBmcm9tIHdoZXJlIGl0IGlzIGFjY2Vzc2VkLgorCSBwdWJsaWMg
dm9pZCB0ZXN0NDExNzcxYSgpIHRocm93cyBJT0V4Y2VwdGlvbiwgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKKwkJIHNldHVwUHJvamVjdEZvck51bGxBbm5vdGF0aW9ucygpOworCQkgU3RyaW5nIHRlc3RF
bnVtQ29kZSA9ICJwYWNrYWdlIHAxO1xuIiArCisJCQkJICJlbnVtIFRlc3RFbnVtIHtGT08gfTtc
biI7CisJCSBlbnYuYWRkQ2xhc3MoIHRoaXMuc3JjUm9vdCwgInAxIiwgIlRlc3RFbnVtIiwgdGVz
dEVudW1Db2RlICk7CisJCSBmdWxsQnVpbGQoIHRoaXMucHJvamVjdFBhdGggKTsKKwkJIGV4cGVj
dGluZ05vUHJvYmxlbXMoKTsKKworCQkgU3RyaW5nIG51bGxUZXN0Q29kZSA9ICJwYWNrYWdlIHAx
O1xuIiArCisJCQkJICJpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmFubm90YXRpb24uTm9uTnVsbDtc
biIgKworCQkJCSAicHVibGljIGNsYXNzIE51bGxUZXN0IHtcbiIgKworCQkJCSAiIHB1YmxpYyBz
dGF0aWMgVGVzdEVudW0gYmxhKCkge1xuIiArCisJCQkJICIgQE5vbk51bGwgZmluYWwgVGVzdEVu
dW0gdCA9IFRlc3RFbnVtLkZPTztcbiIgKworCQkJCSAiIHJldHVybiB0O1xuIiArCisJCQkJICIg
fVxuIiArCisJCQkJICJ9IjsKKwkJIGVudi5hZGRDbGFzcyggdGhpcy5zcmNSb290LCAicDEiLCAi
TnVsbFRlc3QiLCBudWxsVGVzdENvZGUgKTsKKwkJIGluY3JlbWVudGFsQnVpbGQoIHRoaXMucHJv
amVjdFBhdGggKTsKKwkJIGV4cGVjdGluZ05vUHJvYmxlbXMoKTsKKworCQkgZXhwZWN0aW5nVW5p
cXVlQ29tcGlsZWRDbGFzc2VzKG5ldyBTdHJpbmdbXSB7ICJwMS5OdWxsVGVzdCIgfSk7CisJIH0K
KworCSAvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MTE3
NzEKKwkgLy9bY29tcGlsZXJdW251bGxdIEVudW0gY29uc3RhbnRzIG5vdCByZWNvZ25pemVkIGFz
IGJlaW5nIE5vbk51bGwuCisJIC8vRGlzdGluZ3Vpc2ggYmV0d2VlbiBlbnVtIGNvbnN0YW50IGFu
ZCBlbnVtIHR5cGUuIFRoZSBlbnVtIHR5cGUgc2hvdWxkIG5vdAorCSAvL2JlIG1hcmtlZCBhcyBO
b25OdWxsLgorCSBwdWJsaWMgdm9pZCB0ZXN0NDExNzcxYigpIHRocm93cyBJT0V4Y2VwdGlvbiwg
SmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJIHNldHVwUHJvamVjdEZvck51bGxBbm5vdGF0aW9ucygp
OworCQkgU3RyaW5nIHRlc3RFbnVtQ29kZSA9ICJwYWNrYWdlIHAxO1xuIiArCisJCQkJICJlbnVt
IFRlc3RFbnVtIHsgRk9PIH07XG4iOworCQkgZW52LmFkZENsYXNzKCB0aGlzLnNyY1Jvb3QsICJw
MSIsICJUZXN0RW51bSIsIHRlc3RFbnVtQ29kZSApOworCQkgZnVsbEJ1aWxkKCB0aGlzLnByb2pl
Y3RQYXRoICk7CisJCSBleHBlY3RpbmdOb1Byb2JsZW1zKCk7CisKKwkJIFN0cmluZyB0ZXN0Q2xh
c3MgPSAicGFja2FnZSBwMTtcbiIgKworCQkJCSAicHVibGljIGNsYXNzIFggeyBUZXN0RW51bSBm
OyB9O1xuIjsKKwkJIGVudi5hZGRDbGFzcyggdGhpcy5zcmNSb290LCAicDEiLCAiWCIsIHRlc3RD
bGFzcyApOworCQkgaW5jcmVtZW50YWxCdWlsZCggdGhpcy5wcm9qZWN0UGF0aCApOworCQkgZXhw
ZWN0aW5nTm9Qcm9ibGVtcygpOworCisJCSBTdHJpbmcgbnVsbFRlc3RDb2RlID0gInBhY2thZ2Ug
cDE7XG4iICsKKwkJCQkgImltcG9ydCBvcmcuZWNsaXBzZS5qZHQuYW5ub3RhdGlvbi5Ob25OdWxs
O1xuIiArCisJCQkJICJwdWJsaWMgY2xhc3MgTnVsbFRlc3Qge1xuIiArCisJCQkJICIgcHVibGlj
IHN0YXRpYyBUZXN0RW51bSBibGEoWCB4KSB7XG4iICsKKwkJCQkgIiBATm9uTnVsbCBmaW5hbCBU
ZXN0RW51bSB0ID0geC5mO1xuIiArCisJCQkJICIgcmV0dXJuIHQ7XG4iICsKKwkJCQkgIiB9XG4i
ICsKKwkJCQkgIn1cbiI7CisJCSBJUGF0aCB0ZXN0MVBhdGggPSBlbnYuYWRkQ2xhc3MoIHRoaXMu
c3JjUm9vdCwgInAxIiwgIk51bGxUZXN0IiwgbnVsbFRlc3RDb2RlICk7CisJCSBpbmNyZW1lbnRh
bEJ1aWxkKCB0aGlzLnByb2plY3RQYXRoICk7CisKKwkJIGV4cGVjdGluZ1Byb2JsZW1zRm9yKHRl
c3QxUGF0aCwKKwkJCQkgIlByb2JsZW0gOiBOdWxsIHR5cGUgc2FmZXR5OiBUaGUgZXhwcmVzc2lv
biBvZiB0eXBlICdUZXN0RW51bScgbmVlZHMgdW5jaGVja2VkIGNvbnZlcnNpb24gdG8gY29uZm9y
bSB0byAiICsKKwkJCQkgIidATm9uTnVsbCBUZXN0RW51bScgWyByZXNvdXJjZSA6IDwvUHJvamVj
dC9zcmMvcDEvTnVsbFRlc3QuamF2YT4gcmFuZ2UgOiA8MTQzLDE0Nj4gY2F0ZWdvcnkgOiA8OTA+
IHNldmVyaXR5IDogPDE+XSIpOworCisJCSBleHBlY3RpbmdVbmlxdWVDb21waWxlZENsYXNzZXMo
bmV3IFN0cmluZ1tdIHsgInAxLk51bGxUZXN0IiB9KTsKKwkgfQorCisJIC8vaHR0cHM6Ly9idWdz
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQxMTc3MQorCSAvL1tjb21waWxlcl1b
bnVsbF0gRW51bSBjb25zdGFudHMgbm90IHJlY29nbml6ZWQgYXMgYmVpbmcgTm9uTnVsbC4KKwkg
Ly9BIGVudW0gbWF5IGNvbnRhaW4gZmllbGRzIG90aGVyIHRoYW4gcHJlZGVmaW5lZCBjb25zdGFu
dHMuIFdlCisJIC8vc2hvdWxkIG5vdCB0YWcgdGhlbSBhcyBOb25OdWxsLgorCSBwdWJsaWMgdm9p
ZCB0ZXN0NDExNzcxYygpIHRocm93cyBJT0V4Y2VwdGlvbiwgSmF2YU1vZGVsRXhjZXB0aW9uIHsK
KwkJIHNldHVwUHJvamVjdEZvck51bGxBbm5vdGF0aW9ucygpOworCQkgU3RyaW5nIHRlc3RDbGFz
cyA9ICJwYWNrYWdlIHAxO1xuIiArCisJCQkJICJwdWJsaWMgY2xhc3MgQSB7fSI7CisJCSBlbnYu
YWRkQ2xhc3MoIHRoaXMuc3JjUm9vdCwgInAxIiwgIkEiLCB0ZXN0Q2xhc3MgKTsKKwkJIGZ1bGxC
dWlsZCggdGhpcy5wcm9qZWN0UGF0aCApOworCQkgZXhwZWN0aW5nTm9Qcm9ibGVtcygpOworCisJ
CSBTdHJpbmcgdGVzdEVudW1Db2RlID0gInBhY2thZ2UgcDE7XG4iICsKKwkJCQkgImVudW0gVGVz
dEVudW0ge1xuIiArCisJCQkJICIgRk9PO1xuIiArCisJCQkJICIgcHVibGljIHN0YXRpYyBBIGE7
IiArCisJCQkJICJ9O1xuIjsKKwkJIGVudi5hZGRDbGFzcyggdGhpcy5zcmNSb290LCAicDEiLCAi
VGVzdEVudW0iLCB0ZXN0RW51bUNvZGUgKTsKKwkJIGluY3JlbWVudGFsQnVpbGQoIHRoaXMucHJv
amVjdFBhdGggKTsKKwkJIGV4cGVjdGluZ05vUHJvYmxlbXMoKTsKKworCQkgU3RyaW5nIG51bGxU
ZXN0Q29kZSA9ICJwYWNrYWdlIHAxO1xuIiArCisJCQkJICJpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmFubm90YXRpb24uTm9uTnVsbDtcbiIgKworCQkJCSAicHVibGljIGNsYXNzIE51bGxUZXN0IHtc
biIgKworCQkJCSAiIHB1YmxpYyBzdGF0aWMgVGVzdEVudW0gYmxhKCkge1xuIiArCisJCQkJICIg
QE5vbk51bGwgZmluYWwgVGVzdEVudW0gdCA9IFRlc3RFbnVtLkZPTztcbiIgKworCQkJCSAiIHJl
dHVybiB0O1xuIiArCisJCQkJICIgfVxuIiArCisJCQkJICIgcHVibGljIEEgdGVzdGludCgpIHtc
biIgKworCQkJCSAiIEBOb25OdWxsIEEgYSA9IFRlc3RFbnVtLmE7XG4iICsKKwkJCQkgIiByZXR1
cm4gYTtcbiIgKworCQkJCSAiIH1cbiIgKworCQkJCSAifSI7CisJCSBJUGF0aCB0ZXN0MVBhdGgg
PSBlbnYuYWRkQ2xhc3MoIHRoaXMuc3JjUm9vdCwgInAxIiwgIk51bGxUZXN0IiwgbnVsbFRlc3RD
b2RlICk7CisJCSBpbmNyZW1lbnRhbEJ1aWxkKCB0aGlzLnByb2plY3RQYXRoICk7CisJCSBleHBl
Y3RpbmdQcm9ibGVtc0Zvcih0ZXN0MVBhdGgsCisJCQkJICJQcm9ibGVtIDogTnVsbCB0eXBlIHNh
ZmV0eTogVGhlIGV4cHJlc3Npb24gb2YgdHlwZSAnQScgbmVlZHMgdW5jaGVja2VkIGNvbnZlcnNp
b24gdG8gY29uZm9ybSB0byAiICsKKwkJCQkgIidATm9uTnVsbCBBJyBbIHJlc291cmNlIDogPC9Q
cm9qZWN0L3NyYy9wMS9OdWxsVGVzdC5qYXZhPiByYW5nZSA6IDwyMDYsMjE2PiBjYXRlZ29yeSA6
IDw5MD4gc2V2ZXJpdHkgOiA8MT5dIik7CisKKwkJIGV4cGVjdGluZ1VuaXF1ZUNvbXBpbGVkQ2xh
c3NlcyhuZXcgU3RyaW5nW10geyAicDEuTnVsbFRlc3QiIH0pOworCSB9CiB9CmRpZmYgLS1naXQg
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvbG9va3VwL0JpbmFyeVR5cGVCaW5kaW5nLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Jp
bmFyeVR5cGVCaW5kaW5nLmphdmEKaW5kZXggOTZkMjBiZC4uYWM0MmJlMyAxMDA2NDQKLS0tIGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9CaW5hcnlUeXBlQmluZGluZy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAv
QmluYXJ5VHlwZUJpbmRpbmcuamF2YQpAQCAtNDg0LDcgKzQ4NCw3IEBAIHZvaWQgY2FjaGVQYXJ0
c0Zyb20oSUJpbmFyeVR5cGUgYmluYXJ5VHlwZSwgYm9vbGVhbiBuZWVkRmllbGRzQW5kTWV0aG9k
cykgewogCiAJCQkJaWYgKGlGaWVsZHMgIT0gbnVsbCkgewogCQkJCQlmb3IgKGludCBpID0gMDsg
aSA8IGlGaWVsZHMubGVuZ3RoOyBpKyspCi0JCQkJCQlzY2FuRmllbGRGb3JOdWxsQW5ub3RhdGlv
bihpRmllbGRzW2ldLCB0aGlzLmZpZWxkc1tpXSk7CisJCQkJCQlzY2FuRmllbGRGb3JOdWxsQW5u
b3RhdGlvbihpRmllbGRzW2ldLCB0aGlzLmZpZWxkc1tpXSwgdGhpcy5pc0VudW0oKSk7CiAJCQkJ
fQogCQkJCWlmIChpTWV0aG9kcyAhPSBudWxsKSB7CiAJCQkJCWZvciAoaW50IGkgPSAwOyBpIDwg
aU1ldGhvZHMubGVuZ3RoOyBpKyspCkBAIC0xNDUxLDcgKzE0NTEsNyBAQCBTaW1wbGVMb29rdXBU
YWJsZSBzdG9yZWRBbm5vdGF0aW9ucyhib29sZWFuIGZvcmNlSW5pdGlhbGl6ZSkgewogCXJldHVy
biB0aGlzLnN0b3JlZEFubm90YXRpb25zOwogfQogCi1wcml2YXRlIHZvaWQgc2NhbkZpZWxkRm9y
TnVsbEFubm90YXRpb24oSUJpbmFyeUZpZWxkIGZpZWxkLCBGaWVsZEJpbmRpbmcgZmllbGRCaW5k
aW5nKSB7Citwcml2YXRlIHZvaWQgc2NhbkZpZWxkRm9yTnVsbEFubm90YXRpb24oSUJpbmFyeUZp
ZWxkIGZpZWxkLCBGaWVsZEJpbmRpbmcgZmllbGRCaW5kaW5nLCBib29sZWFuIGlzRW51bSkgewog
CWlmICghaXNQcm90b3R5cGUoKSkgdGhyb3cgbmV3IElsbGVnYWxTdGF0ZUV4Y2VwdGlvbigpOwog
CWlmICh0aGlzLmVudmlyb25tZW50Lmdsb2JhbE9wdGlvbnMuc291cmNlTGV2ZWwgPj0gQ2xhc3NG
aWxlQ29uc3RhbnRzLkpESzFfOCkgewogCQlUeXBlQmluZGluZyBmaWVsZFR5cGUgPSBmaWVsZEJp
bmRpbmcudHlwZTsKQEAgLTE0OTYsNiArMTQ5NiwxMSBAQCBwcml2YXRlIHZvaWQgc2NhbkZpZWxk
Rm9yTnVsbEFubm90YXRpb24oSUJpbmFyeUZpZWxkIGZpZWxkLCBGaWVsZEJpbmRpbmcgZmllbGRC
aQogCWlmICghZXhwbGljaXROdWxsbmVzcyAmJiAodGhpcy50YWdCaXRzICYgVGFnQml0cy5Bbm5v
dGF0aW9uTm9uTnVsbEJ5RGVmYXVsdCkgIT0gMCkgewogCQlmaWVsZEJpbmRpbmcudGFnQml0cyB8
PSBUYWdCaXRzLkFubm90YXRpb25Ob25OdWxsOwogCX0KKwlpZiAoaXNFbnVtKSB7CisJCWlmICgo
ZmllbGQuZ2V0TW9kaWZpZXJzKCkgJiBDbGFzc0ZpbGVDb25zdGFudHMuQWNjRW51bSkgIT0gMCkg
eworCQkJZmllbGRCaW5kaW5nLnRhZ0JpdHMgfD0gVGFnQml0cy5Bbm5vdGF0aW9uTm9uTnVsbDsK
KwkJfQorCX0KIH0KIAogcHJpdmF0ZSB2b2lkIHNjYW5NZXRob2RGb3JOdWxsQW5ub3RhdGlvbihJ
QmluYXJ5TWV0aG9kIG1ldGhvZCwgTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nKSB7Cg==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>240293</attachid>
            <date>2014-02-25 05:48:00 -0500</date>
            <delta_ts>2014-02-25 05:48:20 -0500</delta_ts>
            <desc>Patch: Ported to BETA_JAVA8 branch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>7184</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmJ1aWxkZXIvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2J1aWxkZXIvQW5ub3RhdGlvbkRlcGVuZGVuY3lUZXN0cy5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuYnVpbGRlci9zcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvYnVpbGRlci9Bbm5vdGF0aW9uRGVwZW5kZW5jeVRlc3RzLmphdmEKaW5k
ZXggY2Y3YzYxNi4uMjFkY2Y3YiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMuYnVpbGRlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvYnVpbGRlci9Bbm5vdGF0
aW9uRGVwZW5kZW5jeVRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
YnVpbGRlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvYnVpbGRlci9Bbm5vdGF0aW9u
RGVwZW5kZW5jeVRlc3RzLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKgotICogQ29weXJpZ2h0IChjKSAyMDA5LCAyMDEyIFdhbHRlciBIYXJsZXkgYW5kIG90aGVy
cy4KKyAqIENvcHlyaWdodCAoYykgMjAwOSwgMjAxNCBXYWx0ZXIgSGFybGV5IGFuZCBvdGhlcnMu
CiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlp
bmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRo
ZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMg
ZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0xNTYxLDQgKzE1NjEsMTA5IEBA
IHB1YmxpYyBjbGFzcyBBbm5vdGF0aW9uRGVwZW5kZW5jeVRlc3RzIGV4dGVuZHMgQnVpbGRlclRl
c3RzIHsKIAkJLy8gdmVyaWZ5IHRoYXQgVGVzdDIgb25seSB3YXMgcmVjb21waWxlZAogCQlleHBl
Y3RpbmdVbmlxdWVDb21waWxlZENsYXNzZXMobmV3IFN0cmluZ1tdIHsgInAxLlRlc3QyIiB9KTsK
IAl9CisKKwkgLy9odHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
NDExNzcxCisJIC8vW2NvbXBpbGVyXVtudWxsXSBFbnVtIGNvbnN0YW50cyBub3QgcmVjb2duaXpl
ZCBhcyBiZWluZyBOb25OdWxsLgorCSAvL1RoaXMgdGVzdCBjYXNlIGV4cG9zZXMgdGhlIGJ1ZyBt
ZW50aW9uZWQgaW4gdGhlIGRlZmVjdC4gVGhlIGVudW0KKwkgLy9kZWZpbml0aW9uIGNvbWVzIGZy
b20gYSBmaWxlIGRpZmZlcmVudCBmcm9tIHdoZXJlIGl0IGlzIGFjY2Vzc2VkLgorCSBwdWJsaWMg
dm9pZCB0ZXN0NDExNzcxYSgpIHRocm93cyBJT0V4Y2VwdGlvbiwgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKKwkJIHNldHVwUHJvamVjdEZvck51bGxBbm5vdGF0aW9ucygpOworCQkgU3RyaW5nIHRlc3RF
bnVtQ29kZSA9ICJwYWNrYWdlIHAxO1xuIiArCisJCQkJICJlbnVtIFRlc3RFbnVtIHtGT08gfTtc
biI7CisJCSBlbnYuYWRkQ2xhc3MoIHRoaXMuc3JjUm9vdCwgInAxIiwgIlRlc3RFbnVtIiwgdGVz
dEVudW1Db2RlICk7CisJCSBmdWxsQnVpbGQoIHRoaXMucHJvamVjdFBhdGggKTsKKwkJIGV4cGVj
dGluZ05vUHJvYmxlbXMoKTsKKworCQkgU3RyaW5nIG51bGxUZXN0Q29kZSA9ICJwYWNrYWdlIHAx
O1xuIiArCisJCQkJICJpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmFubm90YXRpb24uTm9uTnVsbDtc
biIgKworCQkJCSAicHVibGljIGNsYXNzIE51bGxUZXN0IHtcbiIgKworCQkJCSAiCXB1YmxpYyBz
dGF0aWMgVGVzdEVudW0gYmxhKCkge1xuIiArCisJCQkJICIJCUBOb25OdWxsIGZpbmFsIFRlc3RF
bnVtIHQgPSBUZXN0RW51bS5GT087XG4iICsKKwkJCQkgIgkJcmV0dXJuIHQ7XG4iICsKKwkJCQkg
Igl9XG4iICsKKwkJCQkgIn0iOworCQkgZW52LmFkZENsYXNzKCB0aGlzLnNyY1Jvb3QsICJwMSIs
ICJOdWxsVGVzdCIsIG51bGxUZXN0Q29kZSApOworCQkgaW5jcmVtZW50YWxCdWlsZCggdGhpcy5w
cm9qZWN0UGF0aCApOworCQkgZXhwZWN0aW5nTm9Qcm9ibGVtcygpOworCisJCSBleHBlY3RpbmdV
bmlxdWVDb21waWxlZENsYXNzZXMobmV3IFN0cmluZ1tdIHsgInAxLk51bGxUZXN0IiB9KTsKKwkg
fQorCisJIC8vaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQx
MTc3MQorCSAvL1tjb21waWxlcl1bbnVsbF0gRW51bSBjb25zdGFudHMgbm90IHJlY29nbml6ZWQg
YXMgYmVpbmcgTm9uTnVsbC4KKwkgLy9EaXN0aW5ndWlzaCBiZXR3ZWVuIGVudW0gY29uc3RhbnQg
YW5kIGVudW0gdHlwZS4gVGhlIGVudW0gdHlwZSBzaG91bGQgbm90CisJIC8vYmUgbWFya2VkIGFz
IE5vbk51bGwuCisJIHB1YmxpYyB2b2lkIHRlc3Q0MTE3NzFiKCkgdGhyb3dzIElPRXhjZXB0aW9u
LCBKYXZhTW9kZWxFeGNlcHRpb24geworCQkgc2V0dXBQcm9qZWN0Rm9yTnVsbEFubm90YXRpb25z
KCk7CisJCSBTdHJpbmcgdGVzdEVudW1Db2RlID0gInBhY2thZ2UgcDE7XG4iICsKKwkJCQkgImVu
dW0gVGVzdEVudW0geyBGT08gfTtcbiI7CisJCSBlbnYuYWRkQ2xhc3MoIHRoaXMuc3JjUm9vdCwg
InAxIiwgIlRlc3RFbnVtIiwgdGVzdEVudW1Db2RlICk7CisJCSBmdWxsQnVpbGQoIHRoaXMucHJv
amVjdFBhdGggKTsKKwkJIGV4cGVjdGluZ05vUHJvYmxlbXMoKTsKKworCQkgU3RyaW5nIHRlc3RD
bGFzcyA9ICJwYWNrYWdlIHAxO1xuIiArCisJCQkJICJwdWJsaWMgY2xhc3MgWCB7IFRlc3RFbnVt
IGY7IH07XG4iOworCQkgZW52LmFkZENsYXNzKCB0aGlzLnNyY1Jvb3QsICJwMSIsICJYIiwgdGVz
dENsYXNzICk7CisJCSBpbmNyZW1lbnRhbEJ1aWxkKCB0aGlzLnByb2plY3RQYXRoICk7CisJCSBl
eHBlY3RpbmdOb1Byb2JsZW1zKCk7CisKKwkJIFN0cmluZyBudWxsVGVzdENvZGUgPSAicGFja2Fn
ZSBwMTtcbiIgKworCQkJCSAiaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5hbm5vdGF0aW9uLk5vbk51
bGw7XG4iICsKKwkJCQkgInB1YmxpYyBjbGFzcyBOdWxsVGVzdCB7XG4iICsKKwkJCQkgIglwdWJs
aWMgc3RhdGljIFRlc3RFbnVtIGJsYShYIHgpIHtcbiIgKworCQkJCSAiCQlATm9uTnVsbCBmaW5h
bCBUZXN0RW51bSB0ID0geC5mO1xuIiArCisJCQkJICIJCXJldHVybiB0O1xuIiArCisJCQkJICIJ
fVxuIiArCisJCQkJICJ9XG4iOworCQkgSVBhdGggdGVzdDFQYXRoID0gZW52LmFkZENsYXNzKCB0
aGlzLnNyY1Jvb3QsICJwMSIsICJOdWxsVGVzdCIsIG51bGxUZXN0Q29kZSApOworCQkgaW5jcmVt
ZW50YWxCdWlsZCggdGhpcy5wcm9qZWN0UGF0aCApOworCisJCSBleHBlY3RpbmdQcm9ibGVtc0Zv
cih0ZXN0MVBhdGgsCisJCQkJICJQcm9ibGVtIDogTnVsbCB0eXBlIHNhZmV0eTogVGhlIGV4cHJl
c3Npb24gb2YgdHlwZSAnVGVzdEVudW0nIG5lZWRzIHVuY2hlY2tlZCBjb252ZXJzaW9uIHRvIGNv
bmZvcm0gdG8gIiArCisJCQkJICInQE5vbk51bGwgVGVzdEVudW0nIFsgcmVzb3VyY2UgOiA8L1By
b2plY3Qvc3JjL3AxL051bGxUZXN0LmphdmE+IHJhbmdlIDogPDE0NCwxNDc+IGNhdGVnb3J5IDog
PDkwPiBzZXZlcml0eSA6IDwxPl0iKTsKKworCQkgZXhwZWN0aW5nVW5pcXVlQ29tcGlsZWRDbGFz
c2VzKG5ldyBTdHJpbmdbXSB7ICJwMS5OdWxsVGVzdCIgfSk7CisJIH0KKworCSAvL2h0dHBzOi8v
YnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MTE3NzEKKwkgLy9bY29tcGls
ZXJdW251bGxdIEVudW0gY29uc3RhbnRzIG5vdCByZWNvZ25pemVkIGFzIGJlaW5nIE5vbk51bGwu
CisJIC8vQSBlbnVtIG1heSBjb250YWluIGZpZWxkcyBvdGhlciB0aGFuIHByZWRlZmluZWQgY29u
c3RhbnRzLiBXZQorCSAvL3Nob3VsZCBub3QgdGFnIHRoZW0gYXMgTm9uTnVsbC4KKwkgcHVibGlj
IHZvaWQgdGVzdDQxMTc3MWMoKSB0aHJvd3MgSU9FeGNlcHRpb24sIEphdmFNb2RlbEV4Y2VwdGlv
biB7CisJCSBzZXR1cFByb2plY3RGb3JOdWxsQW5ub3RhdGlvbnMoKTsKKwkJIFN0cmluZyB0ZXN0
Q2xhc3MgPSAicGFja2FnZSBwMTtcbiIgKworCQkJCSAicHVibGljIGNsYXNzIEEge30iOworCQkg
ZW52LmFkZENsYXNzKCB0aGlzLnNyY1Jvb3QsICJwMSIsICJBIiwgdGVzdENsYXNzICk7CisJCSBm
dWxsQnVpbGQoIHRoaXMucHJvamVjdFBhdGggKTsKKwkJIGV4cGVjdGluZ05vUHJvYmxlbXMoKTsK
KworCQkgU3RyaW5nIHRlc3RFbnVtQ29kZSA9ICJwYWNrYWdlIHAxO1xuIiArCisJCQkJICJlbnVt
IFRlc3RFbnVtIHtcbiIgKworCQkJCSAiCUZPTztcbiIgKworCQkJCSAiCXB1YmxpYyBzdGF0aWMg
QSBhOyIgKworCQkJCSAifTtcbiI7CisJCSBlbnYuYWRkQ2xhc3MoIHRoaXMuc3JjUm9vdCwgInAx
IiwgIlRlc3RFbnVtIiwgdGVzdEVudW1Db2RlICk7CisJCSBpbmNyZW1lbnRhbEJ1aWxkKCB0aGlz
LnByb2plY3RQYXRoICk7CisJCSBleHBlY3RpbmdOb1Byb2JsZW1zKCk7CisKKwkJIFN0cmluZyBu
dWxsVGVzdENvZGUgPSAicGFja2FnZSBwMTtcbiIgKworCQkJCSAiaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5hbm5vdGF0aW9uLk5vbk51bGw7XG4iICsKKwkJCQkgInB1YmxpYyBjbGFzcyBOdWxsVGVz
dCB7XG4iICsKKwkJCQkgIglwdWJsaWMgc3RhdGljIFRlc3RFbnVtIGJsYSgpIHtcbiIgKworCQkJ
CSAiCQlATm9uTnVsbCBmaW5hbCBUZXN0RW51bSB0ID0gVGVzdEVudW0uRk9PO1xuIiArCisJCQkJ
ICIJCXJldHVybiB0O1xuIiArCisJCQkJICIJfVxuIiArCisJCQkJICIJcHVibGljIEEgdGVzdGlu
dCgpIHtcbiIgKworCQkJCSAiCUBOb25OdWxsIEEgYSA9IFRlc3RFbnVtLmE7XG4iICsKKwkJCQkg
IgkJcmV0dXJuIGE7XG4iICsKKwkJCQkgIgl9XG4iICsKKwkJCQkgIn0iOworCQkgSVBhdGggdGVz
dDFQYXRoID0gZW52LmFkZENsYXNzKCB0aGlzLnNyY1Jvb3QsICJwMSIsICJOdWxsVGVzdCIsIG51
bGxUZXN0Q29kZSApOworCQkgaW5jcmVtZW50YWxCdWlsZCggdGhpcy5wcm9qZWN0UGF0aCApOwor
CQkgZXhwZWN0aW5nUHJvYmxlbXNGb3IodGVzdDFQYXRoLAorCQkJCSAiUHJvYmxlbSA6IE51bGwg
dHlwZSBzYWZldHk6IFRoZSBleHByZXNzaW9uIG9mIHR5cGUgJ0EnIG5lZWRzIHVuY2hlY2tlZCBj
b252ZXJzaW9uIHRvIGNvbmZvcm0gdG8gIiArCisJCQkJICInQE5vbk51bGwgQScgWyByZXNvdXJj
ZSA6IDwvUHJvamVjdC9zcmMvcDEvTnVsbFRlc3QuamF2YT4gcmFuZ2UgOiA8MjA4LDIxOD4gY2F0
ZWdvcnkgOiA8OTA+IHNldmVyaXR5IDogPDE+XSIpOworCisJCSBleHBlY3RpbmdVbmlxdWVDb21w
aWxlZENsYXNzZXMobmV3IFN0cmluZ1tdIHsgInAxLk51bGxUZXN0IiB9KTsKKwkgfQogfQpkaWZm
IC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CaW5hcnlUeXBlQmluZGluZy5qYXZhIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xv
b2t1cC9CaW5hcnlUeXBlQmluZGluZy5qYXZhCmluZGV4IDk2ZDIwYmQuLmFjNDJiZTMgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9sb29rdXAvQmluYXJ5VHlwZUJpbmRpbmcuamF2YQorKysgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
bG9va3VwL0JpbmFyeVR5cGVCaW5kaW5nLmphdmEKQEAgLTQ4NCw3ICs0ODQsNyBAQCB2b2lkIGNh
Y2hlUGFydHNGcm9tKElCaW5hcnlUeXBlIGJpbmFyeVR5cGUsIGJvb2xlYW4gbmVlZEZpZWxkc0Fu
ZE1ldGhvZHMpIHsKIAogCQkJCWlmIChpRmllbGRzICE9IG51bGwpIHsKIAkJCQkJZm9yIChpbnQg
aSA9IDA7IGkgPCBpRmllbGRzLmxlbmd0aDsgaSsrKQotCQkJCQkJc2NhbkZpZWxkRm9yTnVsbEFu
bm90YXRpb24oaUZpZWxkc1tpXSwgdGhpcy5maWVsZHNbaV0pOworCQkJCQkJc2NhbkZpZWxkRm9y
TnVsbEFubm90YXRpb24oaUZpZWxkc1tpXSwgdGhpcy5maWVsZHNbaV0sIHRoaXMuaXNFbnVtKCkp
OwogCQkJCX0KIAkJCQlpZiAoaU1ldGhvZHMgIT0gbnVsbCkgewogCQkJCQlmb3IgKGludCBpID0g
MDsgaSA8IGlNZXRob2RzLmxlbmd0aDsgaSsrKQpAQCAtMTQ1MSw3ICsxNDUxLDcgQEAgU2ltcGxl
TG9va3VwVGFibGUgc3RvcmVkQW5ub3RhdGlvbnMoYm9vbGVhbiBmb3JjZUluaXRpYWxpemUpIHsK
IAlyZXR1cm4gdGhpcy5zdG9yZWRBbm5vdGF0aW9uczsKIH0KIAotcHJpdmF0ZSB2b2lkIHNjYW5G
aWVsZEZvck51bGxBbm5vdGF0aW9uKElCaW5hcnlGaWVsZCBmaWVsZCwgRmllbGRCaW5kaW5nIGZp
ZWxkQmluZGluZykgeworcHJpdmF0ZSB2b2lkIHNjYW5GaWVsZEZvck51bGxBbm5vdGF0aW9uKElC
aW5hcnlGaWVsZCBmaWVsZCwgRmllbGRCaW5kaW5nIGZpZWxkQmluZGluZywgYm9vbGVhbiBpc0Vu
dW0pIHsKIAlpZiAoIWlzUHJvdG90eXBlKCkpIHRocm93IG5ldyBJbGxlZ2FsU3RhdGVFeGNlcHRp
b24oKTsKIAlpZiAodGhpcy5lbnZpcm9ubWVudC5nbG9iYWxPcHRpb25zLnNvdXJjZUxldmVsID49
IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzgpIHsKIAkJVHlwZUJpbmRpbmcgZmllbGRUeXBlID0g
ZmllbGRCaW5kaW5nLnR5cGU7CkBAIC0xNDk2LDYgKzE0OTYsMTEgQEAgcHJpdmF0ZSB2b2lkIHNj
YW5GaWVsZEZvck51bGxBbm5vdGF0aW9uKElCaW5hcnlGaWVsZCBmaWVsZCwgRmllbGRCaW5kaW5n
IGZpZWxkQmkKIAlpZiAoIWV4cGxpY2l0TnVsbG5lc3MgJiYgKHRoaXMudGFnQml0cyAmIFRhZ0Jp
dHMuQW5ub3RhdGlvbk5vbk51bGxCeURlZmF1bHQpICE9IDApIHsKIAkJZmllbGRCaW5kaW5nLnRh
Z0JpdHMgfD0gVGFnQml0cy5Bbm5vdGF0aW9uTm9uTnVsbDsKIAl9CisJaWYgKGlzRW51bSkgewor
CQlpZiAoKGZpZWxkLmdldE1vZGlmaWVycygpICYgQ2xhc3NGaWxlQ29uc3RhbnRzLkFjY0VudW0p
ICE9IDApIHsKKwkJCWZpZWxkQmluZGluZy50YWdCaXRzIHw9IFRhZ0JpdHMuQW5ub3RhdGlvbk5v
bk51bGw7CisJCX0KKwl9CiB9CiAKIHByaXZhdGUgdm9pZCBzY2FuTWV0aG9kRm9yTnVsbEFubm90
YXRpb24oSUJpbmFyeU1ldGhvZCBtZXRob2QsIE1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZykg
ewo=
</data>

          </attachment>
      

    </bug>

</bugzilla>