<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>401789</bug_id>
          
          <creation_ts>2013-02-26 08:36:00 -0500</creation_ts>
          <short_desc>[1.8][compiler] Enable support for method/constructor references in non-overloaded method calls.</short_desc>
          <delta_ts>2013-02-26 21:56:40 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>400871</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2222021</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-02-26 08:36:58 -0500</bug_when>
    <thetext>BETA_JAVA8:

As a first step to supporting full blown usage of method and constructor
reference in overloaded method calls, I&apos;ll use this ER to enable support
for these expressions in non-overloaded calls (actually in calls which
end up with just one applicable method - i.e deferring work on most specific
method determination to a later date)

The following program should compile, but does not:

// -------------
interface I {
	void foo(X x);
}

public class X {
	void foo(I i) {}

	void goo() {}
	
	{
		foo(X::goo);
	}
}

// --------------</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2222211</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-02-26 13:23:57 -0500</bug_when>
    <thetext>Combined fix and tests for bug 401789 and bug 401790 delivered here:
http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=fbf658958d1eb066a4b5c16fdea253c3d8d5019c.

I&apos;ll add more tests before closing.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2222375</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-02-26 21:56:40 -0500</bug_when>
    <thetext>Basic tests are already released, I&apos;ll add additional tests on behalf of 
bug 401847 that will exercise poly conditionals that use method and
constructor references in invocation contexts.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>