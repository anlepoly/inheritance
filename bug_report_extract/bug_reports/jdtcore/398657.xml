<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>398657</bug_id>
          
          <creation_ts>2013-01-21 12:04:00 -0500</creation_ts>
          <short_desc>Java class compiled by the Eclipse compiler fail to load in the Scala compiler</short_desc>
          <delta_ts>2013-02-12 00:35:51 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.2.1</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>4.3 M5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Luc Bourlier">lb</reporter>
          <assigned_to name="Jay Arthanareeswaran">jarthana</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>jarthana</cc>
    
    <cc>Olivier_Thomann</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2205555</commentid>
    <comment_count>0</comment_count>
    <who name="Luc Bourlier">lb</who>
    <bug_when>2013-01-21 12:04:22 -0500</bug_when>
    <thetext>Original report (Scala IDE): https://scala-ide-portfolio.assembla.com/spaces/scala-ide/tickets/1001402

Twin issue reported against Scala: https://issues.scala-lang.org/browse/SI-7002

Scalac crashes when trying to open a Java class, with annotations, compiled by the Eclipse Java compiler.

The Java code is the following:

------
package ide.issue.session;

import java.util.HashMap;

import org.codehaus.jackson.annotate.JsonIgnoreProperties;
import org.codehaus.jackson.annotate.JsonTypeInfo;

@JsonIgnoreProperties(ignoreUnknown=true)
public class JavaClass {

	@JsonTypeInfo(use=JsonTypeInfo.Id.CLASS, include=JsonTypeInfo.As.PROPERTY, property=&quot;@class&quot;)
    protected HashMap&lt;String, Object&gt; content = new HashMap&lt;String, Object&gt;();

    public void foo() {
		
    }
}
------

It depends on &quot;org.codehaus.jackson&quot; % &quot;jackson-core-asl&quot; % &quot;1.9.4&quot;, also available at http://search.maven.org/remotecontent?filepath=org/codehaus/jackson/jackson-core-asl/1.9.4/jackson-core-asl-1.9.4.jar .

A Scala test class:

------
package ide.issue.security

import ide.issue.session.JavaClass


class ScalaTest {
  def test(){
    val j= new JavaClass()
  }
}
-----

The error:

$ scalac -classpath ../jackson-core-asl-1.9.4.jar:../t1402.jar ScalaTest.scala 
error: error while loading JsonTypeInfo$Id, class file &apos;../jackson-core-asl-1.9.4.jar(org/codehaus/jackson/annotate/JsonTypeInfo$Id.class)&apos; is broken
(class java.lang.UnsupportedOperationException/addChild inapplicable for &lt;none&gt;)
warning: Caught: java.lang.AssertionError: assertion failed: 
     while compiling: ScalaTest.scala
        during phase: typer
     library version: version 2.10.0
    compiler version: version 2.10.0
  reconstructed args: -classpath ../jackson-core-asl-1.9.4.jar:../t1402.jar

  last tree to typer: Ident(JavaClass)
              symbol: &lt;none&gt; (flags: sealed abstract)
   symbol definition: &lt;none&gt;
       symbol owners: 
      context owners: value j -&gt; method test -&gt; class ScalaTest -&gt; package security

== Enclosing template or block ==

Block(
  ValDef( // val j: &lt;?&gt;
    &lt;locked&gt;
    &quot;j&quot;
    &lt;tpt&gt;
    Apply(
      new JavaClass.&quot;&lt;init&gt;&quot;
      Nil
    )
  )
  ()
)

org.codehaus.jackson.annotate.JsonTypeInfo$Id while parsing annotations in ../t1402.jar(ide/issue/session/JavaClass.class)
error: error while loading JavaClass, class file &apos;../t1402.jar(ide/issue/session/JavaClass.class)&apos; is broken
(class java.lang.RuntimeException/bad constant pool index: 3840 at pos: 710)
ScalaTest.scala:8: error: ide.issue.session.JavaClass does not have a constructor
    val j= new JavaClass()
           ^
one warning found
three errors found

If the Java class is compiled with javac, scalac is working fine.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2205751</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-01-21 20:59:23 -0500</bug_when>
    <thetext>Looking at the jar file t1402.jar from https://issues.scala-lang.org/browse/SI-7002 I fail to see any problems with the byte code.

Can you be more specific? Which component rejects the class file? Is it the JVM or some utility from the jackson library?

More specifically, I see 38 well-formed entries in the constant pool and have no idea who is reading at some position &quot;710&quot; and why.

Can you say how the byte codes generated by javac vs. ecj differ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2205871</commentid>
    <comment_count>2</comment_count>
    <who name="Luc Bourlier">lb</who>
    <bug_when>2013-01-22 05:39:49 -0500</bug_when>
    <thetext>Scalac, the Scala compiler, is reporting a problem when trying to compile a Scala class which depends on the Java class compiled with the Eclipse java compiler.

My guess would be that in the class generated for JavaClass, there is a reference to an element in the constant pool of JsonTypeInfo$Id, and for some reason scalac is not able to make sense of this information.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2206000</commentid>
    <comment_count>3</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2013-01-22 10:17:33 -0500</bug_when>
    <thetext>I think I know what is going on. In the Eclipse compiler when compiling the code given in comment 0, there is no inner class info added to the .class file that refers to JsonTypeInfo.Id. This is a member type. As is, there should be an inner class info that refers to it.
Let me try a quick hack to see if this is the problem.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2206011</commentid>
    <comment_count>4</comment_count>
      <attachid>225942</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2013-01-22 10:31:31 -0500</bug_when>
    <thetext>Created attachment 225942
Proposed fix

The problem comes from missing inner class info in the .class file when annotation value refers to fields inside member types.
The following patch fixes it, but needs review and regression tests.

Luc, would you test it once released ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2206014</commentid>
    <comment_count>5</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2013-01-22 10:35:00 -0500</bug_when>
    <thetext>I am setting as major as this is blocking scala users from using .class files compiled with Eclipse.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2206034</commentid>
    <comment_count>6</comment_count>
    <who name="Luc Bourlier">lb</who>
    <bug_when>2013-01-22 11:00:08 -0500</bug_when>
    <thetext>Yes, I can test the fix once it is available in a build.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2206037</commentid>
    <comment_count>7</comment_count>
      <attachid>225945</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2013-01-22 11:02:30 -0500</bug_when>
    <thetext>Created attachment 225945
Regression test

This test makes sure that there is an inner class info added for references to member types inside annotations.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2206049</commentid>
    <comment_count>8</comment_count>
      <attachid>225947</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2013-01-22 11:12:51 -0500</bug_when>
    <thetext>Created attachment 225947
Proposed fix

An inner class info should also be added if the annotation type itself is a member type. This is fixing this issue as well.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2206051</commentid>
    <comment_count>9</comment_count>
      <attachid>225948</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2013-01-22 11:13:37 -0500</bug_when>
    <thetext>Created attachment 225948
Regression test

New regression test to address the second fix. I didn&apos;t run all tests with this fix. Some tests might need to be updated.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2206059</commentid>
    <comment_count>10</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2013-01-22 11:23:37 -0500</bug_when>
    <thetext>I have to admit that I am pretty disappointed by the error reported by the scala compiler:

org.codehaus.jackson.annotate.JsonTypeInfo$Id while parsing annotations in ../t1402.jar(ide/issue/session/JavaClass.class)
error: error while loading JavaClass, class file &apos;../t1402.jar(ide/issue/session/JavaClass.class)&apos; is broken
(class java.lang.RuntimeException/bad constant pool index: 3840 at pos: 710)
ScalaTest.scala:8: error: ide.issue.session.JavaClass does not have a constructor

This is completely misleading. The problem is a missing inner class info. Not a problem with the constant pool. A better error would have help to diagnose this issue quicker.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2206496</commentid>
    <comment_count>11</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-01-23 08:58:52 -0500</bug_when>
    <thetext>Dani, I have not released this yet into master but this would also need to be back-ported to previous versions.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2206855</commentid>
    <comment_count>12</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-01-24 00:47:30 -0500</bug_when>
    <thetext>+1 for the patch.

For completeness sake, here are the steps to reproduce:

1. Create a new project with jackson-core-asl-1.9.4.jar  (downloaded) in the build path.
2. Copy paste the Java code (class JavaClass) into the source folder of the above project.
3. Export the project as a Jar file (Only generated class files and resource will suffice), let&apos;s name the jar as t1402.jar
4. Download scala (I used 2.10.0) and add the &lt;scala&gt;/bin to the system path
5. Put the jackson jar and t1402.jar in the same folder and create the scala class (as given in comment #0) by name ScalaTest.scala
6. Run the command:
   scalac -classpath ./jackson-core-asl-1.9.4.jar;./t1402.jar ScalaTest.scala and see the compilation fail.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2206913</commentid>
    <comment_count>13</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-01-24 04:21:38 -0500</bug_when>
    <thetext>Fix released for 4.3 M5 via:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=ca4522438592d5854eccb915e03c5fdcf0af620d</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2207061</commentid>
    <comment_count>14</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2013-01-24 09:30:00 -0500</bug_when>
    <thetext>I don&apos;t know if there is still time to backport this one to 4.2.2. The risk is low and missing inner class infos might cause more grief than just failing the scala compiler.
If it is too late for the official 4.2.2, the fix should still be backported to the 3.8.x/4.2.x maintenance branch, 3.7.x and 3.6.x + Java 7.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2207065</commentid>
    <comment_count>15</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-01-24 09:34:15 -0500</bug_when>
    <thetext>(In reply to comment #14)
&gt; I don&apos;t know if there is still time to backport this one to 4.2.2. The risk
&gt; is low and missing inner class infos might cause more grief than just
&gt; failing the scala compiler.
&gt; If it is too late for the official 4.2.2, the fix should still be backported
&gt; to the 3.8.x/4.2.x maintenance branch, 3.7.x and 3.6.x + Java 7.

We&apos;re at RC3 and that&apos;s not the right time to change class file generation for a bug that&apos;s there since day one. If the fix plays well in 4.3, we can backport at some point.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2207215</commentid>
    <comment_count>16</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-01-24 13:24:43 -0500</bug_when>
    <thetext>(In reply to comment #10)
&gt; I have to admit that I am pretty disappointed by the error reported by the
&gt; scala compiler:
&gt; 
&gt; org.codehaus.jackson.annotate.JsonTypeInfo$Id while parsing annotations in
&gt; ../t1402.jar(ide/issue/session/JavaClass.class)
&gt; error: error while loading JavaClass, class file
&gt; &apos;../t1402.jar(ide/issue/session/JavaClass.class)&apos; is broken
&gt; (class java.lang.RuntimeException/bad constant pool index: 3840 at pos: 710)
&gt; ScalaTest.scala:8: error: ide.issue.session.JavaClass does not have a
&gt; constructor
&gt; 
&gt; This is completely misleading. The problem is a missing inner class info.
&gt; Not a problem with the constant pool. A better error would have help to
&gt; diagnose this issue quicker.

Thanks, Olivier, for mentioning this. When I briefly looked at this problem the error message has sent me down the wrong alley entirely.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2208672</commentid>
    <comment_count>17</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2013-01-28 11:26:29 -0500</bug_when>
    <thetext>Luc, the build 4.3.0 I-Build: I20130128-0800 contains the fix for this issue.
Could you please give it a try and report back if this is now fixed for you?
Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2209109</commentid>
    <comment_count>18</comment_count>
    <who name="Luc Bourlier">lb</who>
    <bug_when>2013-01-29 04:28:04 -0500</bug_when>
    <thetext>I tried the test case on the latest integration build, and cannot reproduce the problem anymore.

Thanks for fixing this problem.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2215139</commentid>
    <comment_count>19</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-02-12 00:35:51 -0500</bug_when>
    <thetext>This has already been verified by the reporter.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>225942</attachid>
            <date>2013-01-22 10:31:00 -0500</date>
            <delta_ts>2013-01-22 11:12:51 -0500</delta_ts>
            <desc>Proposed fix</desc>
            <filename>patch_398657.txt</filename>
            <type>text/plain</type>
            <size>882</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9DbGFzc0ZpbGUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9DbGFzc0ZpbGUuamF2
YQppbmRleCA1YTA4ODUwLi42NzE4NzZlIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvQ2xhc3NGaWxlLmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL0NsYXNzRmlsZS5qYXZhCkBAIC0yMDc0LDYgKzIwNzQsMTIgQEAKIAkJ
aWYgKGRlZmF1bHRWYWx1ZUJpbmRpbmcgPT0gbnVsbCkgewogCQkJdGhpcy5jb250ZW50c09mZnNl
dCA9IGF0dHJpYnV0ZU9mZnNldDsKIAkJfSBlbHNlIHsKKwkJCWlmIChkZWZhdWx0VmFsdWVCaW5k
aW5nLmlzTWVtYmVyVHlwZSgpKSB7CisJCQkJdGhpcy5yZWNvcmRJbm5lckNsYXNzZXMoZGVmYXVs
dFZhbHVlQmluZGluZyk7CisJCQl9CisJCQlpZiAobWVtYmVyVmFsdWVQYWlyUmV0dXJuVHlwZS5p
c01lbWJlclR5cGUoKSkgeworCQkJCXRoaXMucmVjb3JkSW5uZXJDbGFzc2VzKG1lbWJlclZhbHVl
UGFpclJldHVyblR5cGUpOworCQkJfQogCQkJaWYgKG1lbWJlclZhbHVlUGFpclJldHVyblR5cGUu
aXNBcnJheVR5cGUoKSAmJiAhZGVmYXVsdFZhbHVlQmluZGluZy5pc0FycmF5VHlwZSgpKSB7CiAJ
CQkJLy8gYXV0b21hdGljIHdyYXBwaW5nCiAJCQkJaWYgKHRoaXMuY29udGVudHNPZmZzZXQgKyAz
ID49IHRoaXMuY29udGVudHMubGVuZ3RoKSB7
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>225945</attachid>
            <date>2013-01-22 11:02:00 -0500</date>
            <delta_ts>2013-01-22 11:13:37 -0500</delta_ts>
            <desc>Regression test</desc>
            <filename>patch_398657_tests.txt</filename>
            <type>text/plain</type>
            <size>2083</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0Fubm90YXRpb25UZXN0
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Bbm5vdGF0aW9uVGVzdC5qYXZh
CmluZGV4IGRmYmViODYuLjE2ZDdjNGUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9y
ZWdyZXNzaW9uL0Fubm90YXRpb25UZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUu
dGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3Jl
Z3Jlc3Npb24vQW5ub3RhdGlvblRlc3QuamF2YQpAQCAtNDksNyArNDksNyBAQAogCS8vIFN0YXRp
YyBpbml0aWFsaXplciB0byBzcGVjaWZ5IHRlc3RzIHN1YnNldCB1c2luZyBURVNUU18qIHN0YXRp
YyB2YXJpYWJsZXMKIAkvLyBBbGwgc3BlY2lmaWVkIHRlc3RzIHdoaWNoIGRvIG5vdCBiZWxvbmcg
dG8gdGhlIGNsYXNzIGFyZSBza2lwcGVkLi4uCiAJc3RhdGljIHsKLS8vCQlURVNUU19OQU1FUyA9
IG5ldyBTdHJpbmdbXSB7ICJ0ZXN0QnVnMzg0NjYzIiB9OworLy8JCVRFU1RTX05BTUVTID0gbmV3
IFN0cmluZ1tdIHsgInRlc3QzOTg2NTciIH07CiAvLwkJVEVTVFNfTlVNQkVSUyA9IG5ldyBpbnRb
XSB7IDI5NyB9OwogLy8JCVRFU1RTX1JBTkdFID0gbmV3IGludFtdIHsgMjk0LCAtMSB9OwogCX0K
QEAgLTEwNjk4LDQgKzEwNjk4LDQyIEBACiAJCQkKIAkJfSk7CiB9CisvL2h0dHBzOi8vYnVncy5l
Y2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTg2NTcKK3B1YmxpYyB2b2lkIHRlc3Qz
OTg2NTcoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwlpZiAodGhpcy5jb21wbGlhbmNlTGV2ZWwgIT0g
Q2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfNSkgeworCQlyZXR1cm47CisJfQorCU1hcCBvcHRpb25z
ID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9Q
VElPTl9Tb3VyY2UsIENvbXBpbGVyT3B0aW9ucy5WRVJTSU9OXzFfNSk7CisJb3B0aW9ucy5wdXQo
Q29tcGlsZXJPcHRpb25zLk9QVElPTl9UYXJnZXRQbGF0Zm9ybSwgQ29tcGlsZXJPcHRpb25zLlZF
UlNJT05fMV80KTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX0NvbXBsaWFu
Y2UsIENvbXBpbGVyT3B0aW9ucy5WRVJTSU9OXzFfNSk7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgK
KwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJwL0Fubm90LmphdmEiLAorCQkJInBhY2thZ2UgcDtcbiIg
KworCQkJInB1YmxpYyBAaW50ZXJmYWNlIEFubm90IHtcbiIgKyAKKwkJCSIgICBzdGF0aWMgcHVi
bGljIGVudW0gRSB7IEEgfVxuIiArIAorCQkJIiAgIEUgZ2V0RW51bSgpO1xuIiArIAorCQkJIn0i
LAorCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IHN0YXRpYyBwLkFubm90LkUuKjtcbiIgKworCQkJ
ImltcG9ydCBwLkFubm90OztcbiIgKworCQkJIkBBbm5vdChnZXRFbnVtPUEpXG4iICsKKwkJCSJw
dWJsaWMgY2xhc3MgWCB7fSIKKwkJfSwKKwkJIiIsCisJCW51bGwsCisJCXRydWUsCisJCW51bGws
CisJCW9wdGlvbnMsCisJCW51bGwsCisJCXRydWUpOworCisJU3RyaW5nIGV4cGVjdGVkT3V0cHV0
ID0KKwkJIiAgSW5uZXIgY2xhc3NlczpcbiIgKyAKKwkJIiAgICBbaW5uZXIgY2xhc3MgaW5mbzog
IzIyIHAvQW5ub3QkRSwgb3V0ZXIgY2xhc3MgaW5mbzogIzI0IHAvQW5ub3RcbiIgKyAKKwkJIiAg
ICAgaW5uZXIgbmFtZTogIzI2IEUsIGFjY2Vzc2ZsYWdzOiAxNjQwOSBwdWJsaWMgc3RhdGljIGZp
bmFsXVxuIjsKKworCWNoZWNrRGlzYXNzZW1ibGVkQ2xhc3NGaWxlKE9VVFBVVF9ESVIgKyBGaWxl
LnNlcGFyYXRvciAgKyJYLmNsYXNzIiwgIlgiLCBleHBlY3RlZE91dHB1dCwgQ2xhc3NGaWxlQnl0
ZXNEaXNhc3NlbWJsZXIuREVUQUlMRUQpOworfQogfQ==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>225947</attachid>
            <date>2013-01-22 11:12:00 -0500</date>
            <delta_ts>2013-01-22 11:12:51 -0500</delta_ts>
            <desc>Proposed fix</desc>
            <filename>patch_398657.txt</filename>
            <type>text/plain</type>
            <size>1294</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9DbGFzc0ZpbGUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9DbGFzc0ZpbGUuamF2
YQppbmRleCA1YTA4ODUwLi44MTg1YzM0IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvQ2xhc3NGaWxlLmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL0NsYXNzRmlsZS5qYXZhCkBAIC0xODYxLDYgKzE4NjEsOSBAQAogCQkJ
dGhpcy5jb250ZW50c09mZnNldCA9IHN0YXJ0aW5nQ29udGVudHNPZmZzZXQ7CiAJCQlyZXR1cm47
CiAJCX0KKwkJaWYgKGFubm90YXRpb25UeXBlQmluZGluZy5pc01lbWJlclR5cGUoKSkgeworCQkJ
dGhpcy5yZWNvcmRJbm5lckNsYXNzZXMoYW5ub3RhdGlvblR5cGVCaW5kaW5nKTsKKwkJfQogCQlm
aW5hbCBpbnQgdHlwZUluZGV4ID0gdGhpcy5jb25zdGFudFBvb2wubGl0ZXJhbEluZGV4KGFubm90
YXRpb25UeXBlQmluZGluZy5zaWduYXR1cmUoKSk7CiAJCXRoaXMuY29udGVudHNbdGhpcy5jb250
ZW50c09mZnNldCsrXSA9IChieXRlKSAodHlwZUluZGV4ID4+IDgpOwogCQl0aGlzLmNvbnRlbnRz
W3RoaXMuY29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgdHlwZUluZGV4OwpAQCAtMjA3NCw2ICsy
MDc3LDEyIEBACiAJCWlmIChkZWZhdWx0VmFsdWVCaW5kaW5nID09IG51bGwpIHsKIAkJCXRoaXMu
Y29udGVudHNPZmZzZXQgPSBhdHRyaWJ1dGVPZmZzZXQ7CiAJCX0gZWxzZSB7CisJCQlpZiAoZGVm
YXVsdFZhbHVlQmluZGluZy5pc01lbWJlclR5cGUoKSkgeworCQkJCXRoaXMucmVjb3JkSW5uZXJD
bGFzc2VzKGRlZmF1bHRWYWx1ZUJpbmRpbmcpOworCQkJfQorCQkJaWYgKG1lbWJlclZhbHVlUGFp
clJldHVyblR5cGUuaXNNZW1iZXJUeXBlKCkpIHsKKwkJCQl0aGlzLnJlY29yZElubmVyQ2xhc3Nl
cyhtZW1iZXJWYWx1ZVBhaXJSZXR1cm5UeXBlKTsKKwkJCX0KIAkJCWlmIChtZW1iZXJWYWx1ZVBh
aXJSZXR1cm5UeXBlLmlzQXJyYXlUeXBlKCkgJiYgIWRlZmF1bHRWYWx1ZUJpbmRpbmcuaXNBcnJh
eVR5cGUoKSkgewogCQkJCS8vIGF1dG9tYXRpYyB3cmFwcGluZwogCQkJCWlmICh0aGlzLmNvbnRl
bnRzT2Zmc2V0ICsgMyA+PSB0aGlzLmNvbnRlbnRzLmxlbmd0aCkgew==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>225948</attachid>
            <date>2013-01-22 11:13:00 -0500</date>
            <delta_ts>2013-01-22 11:13:37 -0500</delta_ts>
            <desc>Regression test</desc>
            <filename>patch_398657_tests.txt</filename>
            <type>text/plain</type>
            <size>3248</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0Fubm90YXRpb25UZXN0
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Bbm5vdGF0aW9uVGVzdC5qYXZh
CmluZGV4IGRmYmViODYuLmUwYTI1ODkgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9y
ZWdyZXNzaW9uL0Fubm90YXRpb25UZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUu
dGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3Jl
Z3Jlc3Npb24vQW5ub3RhdGlvblRlc3QuamF2YQpAQCAtNDksNyArNDksNyBAQAogCS8vIFN0YXRp
YyBpbml0aWFsaXplciB0byBzcGVjaWZ5IHRlc3RzIHN1YnNldCB1c2luZyBURVNUU18qIHN0YXRp
YyB2YXJpYWJsZXMKIAkvLyBBbGwgc3BlY2lmaWVkIHRlc3RzIHdoaWNoIGRvIG5vdCBiZWxvbmcg
dG8gdGhlIGNsYXNzIGFyZSBza2lwcGVkLi4uCiAJc3RhdGljIHsKLS8vCQlURVNUU19OQU1FUyA9
IG5ldyBTdHJpbmdbXSB7ICJ0ZXN0QnVnMzg0NjYzIiB9OworLy8JCVRFU1RTX05BTUVTID0gbmV3
IFN0cmluZ1tdIHsgICJ0ZXN0Mzk4NjU3IiwgInRlc3QzOTg2NTdfMiIgfTsKIC8vCQlURVNUU19O
VU1CRVJTID0gbmV3IGludFtdIHsgMjk3IH07CiAvLwkJVEVTVFNfUkFOR0UgPSBuZXcgaW50W10g
eyAyOTQsIC0xIH07CiAJfQpAQCAtMTA2OTgsNCArMTA2OTgsODAgQEAKIAkJCQogCQl9KTsKIH0K
Ky8vaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5ODY1Nwor
cHVibGljIHZvaWQgdGVzdDM5ODY1NygpIHRocm93cyBFeGNlcHRpb24geworCWlmICh0aGlzLmNv
bXBsaWFuY2VMZXZlbCAhPSBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV81KSB7CisJCXJldHVybjsK
Kwl9CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChD
b21waWxlck9wdGlvbnMuT1BUSU9OX1NvdXJjZSwgQ29tcGlsZXJPcHRpb25zLlZFUlNJT05fMV81
KTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1RhcmdldFBsYXRmb3JtLCBD
b21waWxlck9wdGlvbnMuVkVSU0lPTl8xXzQpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9u
cy5PUFRJT05fQ29tcGxpYW5jZSwgQ29tcGlsZXJPcHRpb25zLlZFUlNJT05fMV81KTsKKwl0aGlz
LnJ1bkNvbmZvcm1UZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJInAvQW5ub3QuamF2YSIsCisJ
CQkicGFja2FnZSBwO1xuIiArCisJCQkicHVibGljIEBpbnRlcmZhY2UgQW5ub3Qge1xuIiArIAor
CQkJIiAgIHN0YXRpYyBwdWJsaWMgZW51bSBFIHsgQSB9XG4iICsgCisJCQkiICAgRSBnZXRFbnVt
KCk7XG4iICsgCisJCQkifSIsCisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgc3RhdGljIHAuQW5u
b3QuRS4qO1xuIiArCisJCQkiaW1wb3J0IHAuQW5ub3Q7IiArCisJCQkiQEFubm90KGdldEVudW09
QSlcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHt9IgorCQl9LAorCQkiIiwKKwkJbnVsbCwKKwkJ
dHJ1ZSwKKwkJbnVsbCwKKwkJb3B0aW9ucywKKwkJbnVsbCwKKwkJdHJ1ZSk7CisKKwlTdHJpbmcg
ZXhwZWN0ZWRPdXRwdXQgPQorCQkiICBJbm5lciBjbGFzc2VzOlxuIiArIAorCQkiICAgIFtpbm5l
ciBjbGFzcyBpbmZvOiAjMjIgcC9Bbm5vdCRFLCBvdXRlciBjbGFzcyBpbmZvOiAjMjQgcC9Bbm5v
dFxuIiArIAorCQkiICAgICBpbm5lciBuYW1lOiAjMjYgRSwgYWNjZXNzZmxhZ3M6IDE2NDA5IHB1
YmxpYyBzdGF0aWMgZmluYWxdXG4iOworCisJY2hlY2tEaXNhc3NlbWJsZWRDbGFzc0ZpbGUoT1VU
UFVUX0RJUiArIEZpbGUuc2VwYXJhdG9yICArIlguY2xhc3MiLCAiWCIsIGV4cGVjdGVkT3V0cHV0
LCBDbGFzc0ZpbGVCeXRlc0Rpc2Fzc2VtYmxlci5ERVRBSUxFRCk7Cit9CisvL2h0dHBzOi8vYnVn
cy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTg2NTcKK3B1YmxpYyB2b2lkIHRl
c3QzOTg2NTdfMigpIHRocm93cyBFeGNlcHRpb24geworCWlmICh0aGlzLmNvbXBsaWFuY2VMZXZl
bCAhPSBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV81KSB7CisJCXJldHVybjsKKwl9CisJTWFwIG9w
dGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlv
bnMuT1BUSU9OX1NvdXJjZSwgQ29tcGlsZXJPcHRpb25zLlZFUlNJT05fMV81KTsKKwlvcHRpb25z
LnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1RhcmdldFBsYXRmb3JtLCBDb21waWxlck9wdGlv
bnMuVkVSU0lPTl8xXzQpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fQ29t
cGxpYW5jZSwgQ29tcGlsZXJPcHRpb25zLlZFUlNJT05fMV81KTsKKwl0aGlzLnJ1bkNvbmZvcm1U
ZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJInAvWS5qYXZhIiwKKwkJCSJwYWNrYWdlIHA7XG4i
ICsKKwkJCSJwdWJsaWMgY2xhc3MgWSB7XG4iICsKKwkJCSIJc3RhdGljIHB1YmxpYyBAaW50ZXJm
YWNlIEFubm90IHtcbiIgKyAKKwkJCSIJCWludCBpZCgpO1xuIiArCisJCQkiCX1cbiIgKyAKKwkJ
CSJ9IiwKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBwLlkuQW5ub3Q7XG4iICsKKwkJCSJAQW5u
b3QoaWQ9NClcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHt9IgorCQl9LAorCQkiIiwKKwkJbnVs
bCwKKwkJdHJ1ZSwKKwkJbnVsbCwKKwkJb3B0aW9ucywKKwkJbnVsbCwKKwkJdHJ1ZSk7CisKKwlT
dHJpbmcgZXhwZWN0ZWRPdXRwdXQgPQorCQkJIiAgSW5uZXIgY2xhc3NlczpcbiIgKyAKKwkJCSIg
ICAgW2lubmVyIGNsYXNzIGluZm86ICMyMSBwL1kkQW5ub3QsIG91dGVyIGNsYXNzIGluZm86ICMy
MyBwL1lcbiIgKyAKKwkJCSIgICAgIGlubmVyIG5hbWU6ICMyNSBBbm5vdCwgYWNjZXNzZmxhZ3M6
IDk3MzcgcHVibGljIGFic3RyYWN0IHN0YXRpY11cbiI7CisKKwljaGVja0Rpc2Fzc2VtYmxlZENs
YXNzRmlsZShPVVRQVVRfRElSICsgRmlsZS5zZXBhcmF0b3IgICsiWC5jbGFzcyIsICJYIiwgZXhw
ZWN0ZWRPdXRwdXQsIENsYXNzRmlsZUJ5dGVzRGlzYXNzZW1ibGVyLkRFVEFJTEVEKTsKK30KIH0=
</data>

          </attachment>
      

    </bug>

</bugzilla>