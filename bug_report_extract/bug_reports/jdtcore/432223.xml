<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>432223</bug_id>
          
          <creation_ts>2014-04-08 03:39:00 -0400</creation_ts>
          <short_desc>[1.8][null] Java 1.8 null annotations cause &apos;Contradictory null annotations&apos; error</short_desc>
          <delta_ts>2014-04-28 23:35:41 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.4 M7</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Tom van den Berge">tom.vandenberge</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>jarthana</cc>
    
    <cc>shankhba</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2385952</commentid>
    <comment_count>0</comment_count>
    <who name="Tom van den Berge">tom.vandenberge</who>
    <bug_when>2014-04-08 03:39:46 -0400</bug_when>
    <thetext>I&apos;ve installed the Kepler java 8 feature patch, and I&apos;m using the latest null annotations jar (version 2.0.0, that came with the java 8 patch).

The following piece of code used to compile when my project was using Java 7, and the previous null annotations jar (1.1.0):


	public static @NonNull &lt;T&gt; T assertNotNull(@Nullable T object) {
		return assertNotNull(null, object);
	}

	public static @NonNull &lt;T&gt; T assertNotNull(@Nullable String message, @Nullable T object) {
		if (object == null) {
			throw new NullPointerException(message);
		}
		return object;
	}


After upgrading the project to Java 8, and upgrading the null annotations jar to 2.0.0, the statement

		return assertNotNull(null, object);

gives the following compiler error:

&quot;Contradictory null annotations: method was inferred as &apos;@NonNull @Nullable T assertNotNull(@Nullable String, @Nullable T)&apos;, but only one of &apos;@NonNull&apos; and &apos;@Nullable&apos; can be effective at any location	&quot;

If I replace the 2.0.0 jar with the 1.1.0 jar, it works again. This is not a solution however, since the old jar does not support type annotations.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2388489</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-04-13 17:23:57 -0400</bug_when>
    <thetext>Seems we are trying to infer null annotations too aggressively.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2388962</commentid>
    <comment_count>2</comment_count>
    <who name="Tom van den Berge">tom.vandenberge</who>
    <bug_when>2014-04-14 16:53:23 -0400</bug_when>
    <thetext>Can you think of a workaround?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2388989</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-04-14 19:11:06 -0400</bug_when>
    <thetext>(In reply to Tom van den Berge from comment #2)
&gt; Can you think of a workaround?

Didn&apos;t find one immediately :(
That&apos;s why I set the target to M7 ...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2389192</commentid>
    <comment_count>4</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-04-15 08:22:08 -0400</bug_when>
    <thetext>Test &amp; fix released for 4.4 M7 via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=dd4e66116fa81ff4f74deaa928460684d87fc74d</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2393941</commentid>
    <comment_count>5</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-04-28 09:12:21 -0400</bug_when>
    <thetext>The code in Comment 0 compiles without any issues.

Verified for 4.4 M7 using I20140427-2030 build.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>