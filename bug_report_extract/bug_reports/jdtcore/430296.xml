<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>430296</bug_id>
          
          <creation_ts>2014-03-13 11:43:00 -0400</creation_ts>
          <short_desc>[1.8] broken code triggers stack overflow in CaptureBinding18.isCompatibleWith</short_desc>
          <delta_ts>2014-05-19 04:35:43 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.4 RC1</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Stephan Herrmann">stephan.herrmann</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>jarthana</cc>
    
    <cc>shankhba</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2375576</commentid>
    <comment_count>0</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-03-13 11:43:00 -0400</bug_when>
    <thetext>This is what I had during editing:

//---
import java.lang.annotation.*;
import java.util.*;
import java.util.function.*;
import java.util.stream.*;
interface MyCollector&lt;T, A, R&gt; extends Collector&lt;T, A, R&gt; { }

public abstract class AnnotationCollector {
        abstract &lt;T, K, U, M extends Map&lt;K, U&gt;&gt; 
    MyCollector&lt;T, ?, M&gt; toMap(Function&lt;? super T, ? extends K&gt; km, BinaryOperator&lt;U&gt; mf);
        
        void test(Stream&lt;Annotation&gt; annotations) {
                annotations
                        .collect(toMap(Annotation::annotationType,
                                        (Annotation first, Annotation second) -&gt; first));
        }
        
        Map&lt;String, Person&gt; test2(Stream&lt;Person&gt; persons) {
                return persons.collect(Collectors.toMap((Person p) -&gt; p.getLastName(),
                                                                Function::identity,
                                                        (p1, p2) -&gt; p1));
        }
}

class Person {
        String getLastName() { return &quot;&quot;; }
}
//---

The compiler answer with

java.lang.StackOverflowError at org.eclipse.jdt.internal.compiler.lookup.CaptureBinding18.isCompatibleWith(CaptureBinding18.java:123)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2375577</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-03-13 11:43:45 -0400</bug_when>
    <thetext>I&apos;ll investigate for 4.4</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2375809</commentid>
    <comment_count>2</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-03-13 19:32:04 -0400</bug_when>
    <thetext>Mh, stackoverflow isn&apos;t exactly nice.

Fix is simple:

We encounter a recursive CaptureBinding18. Some queries in this class already avoid stackoverflow using the flag &quot;inRecursiveFunction&quot;, doing the same also in CB18.isCompatibleWith fixes this bug.

On the long run we can avoid this situation even earlier: the recursive CB18 is constructed from a type bound K#1 &lt;: K#1 (an inference variable should be a subtype of itself). This type bound is legal but unnecessary, I will reduce it directly to TRUE.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2375815</commentid>
    <comment_count>3</comment_count>
      <attachid>240884</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-03-13 19:37:33 -0400</bug_when>
    <thetext>Created attachment 240884
test &amp; fix

Srikanth, Jay:

I don&apos;t have the time to run all tests (RunAllJava8Tests are green).

If you think this is good to have in GA and have the time to test it, from my p.o.v its safe and good to have. So feel free to release if you like. Otherwise I&apos;ll take it forward after GA.

Point in favour: when it hits you, no editing is possible, your only option is: exit workbench, edit file externally, and restart.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2375822</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-13 19:56:40 -0400</bug_when>
    <thetext>I&apos;ll take a look later today. Thanks Stephan.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2375854</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-14 02:08:52 -0400</bug_when>
    <thetext>I&apos;ll first take this up for black box testing. Subsequently see if I have
time for review and then decide.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2375872</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-03-14 04:11:13 -0400</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #5)
&gt; I&apos;ll first take this up for black box testing. Subsequently see if I have
&gt; time for review and then decide.

All JDT core tests went OK, Jay is doing additional testing ...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2376078</commentid>
    <comment_count>7</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-03-14 10:57:03 -0400</bug_when>
    <thetext>Testing went well and released the changes into BETA_JAVA8:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=1b7626b6bc39479837ae0cdb8edf077e6aad6481</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2376120</commentid>
    <comment_count>8</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-03-14 12:02:15 -0400</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #7)
&gt; Testing went well and released the changes into BETA_JAVA8:
&gt; 
&gt; http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/
&gt; ?h=BETA_JAVA8&amp;id=1b7626b6bc39479837ae0cdb8edf077e6aad6481

Thanks!

Polish/optimization mentioned in comment 2 will be handled via bug 430404</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2403393</commentid>
    <comment_count>9</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-05-19 01:32:38 -0400</bug_when>
    <thetext>Somehow we ended up with target 4.4 even though this was released in BETA_JAVA8. To take it through verification stage, setting it to RC1.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2403472</commentid>
    <comment_count>10</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-05-19 04:26:24 -0400</bug_when>
    <thetext>Verified for Luna 4.4 RC1 Build id: I20140518-2000.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>240884</attachid>
            <date>2014-03-13 19:37:00 -0400</date>
            <delta_ts>2014-03-13 19:37:33 -0400</delta_ts>
            <desc>test &amp; fix</desc>
            <filename>Bug-430296--18-broken-code-triggers-stack-overflow-i.patch</filename>
            <type>text/plain</type>
            <size>3627</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0dlbmVyaWNzUmVncmVz
c2lvblRlc3RfMV84LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9HZW5lcmlj
c1JlZ3Jlc3Npb25UZXN0XzFfOC5qYXZhCmluZGV4IGFlN2Q0YTMuLjQ1ZjMxMTcgMTAwNjQ0Ci0t
LSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0dlbmVyaWNzUmVncmVzc2lvblRlc3Rf
MV84LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vR2VuZXJpY3NSZWdy
ZXNzaW9uVGVzdF8xXzguamF2YQpAQCAtMjg2OCw0ICsyODY4LDQwIEBACiAJCSItLS0tLS0tLS0t
XG4iLAogCQludWxsLCB0cnVlLCBjdXN0b21PcHRpb25zKTsKIH0KK3B1YmxpYyB2b2lkIHRlc3RC
dWc0MzAyOTYoKSB7CisJcnVuTmVnYXRpdmVUZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIkFu
bm90YXRpb25Db2xsZWN0b3IuamF2YSIsCisJCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9u
Lio7XG4iICsgCisJCQkiaW1wb3J0IGphdmEudXRpbC4qO1xuIiArIAorCQkJImltcG9ydCBqYXZh
LnV0aWwuZnVuY3Rpb24uKjtcbiIgKyAKKwkJCSJpbXBvcnQgamF2YS51dGlsLnN0cmVhbS4qO1xu
IiArIAorCQkJIlxuIiArIAorCQkJInB1YmxpYyBhYnN0cmFjdCBjbGFzcyBBbm5vdGF0aW9uQ29s
bGVjdG9yIHtcbiIgKyAKKwkJCSIgICAgICAgIFxuIiArIAorCQkJIiAgICAgICAgTWFwPFN0cmlu
ZywgUGVyc29uPiB0ZXN0MihTdHJlYW08UGVyc29uPiBwZXJzb25zKSB7XG4iICsgCisJCQkiICAg
ICAgICAgICAgICAgIHJldHVybiBwZXJzb25zLmNvbGxlY3QoQ29sbGVjdG9ycy50b01hcCgoUGVy
c29uIHApIC0+IHAuZ2V0TGFzdE5hbWUoKSxcbiIgKyAKKwkJCSIgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRnVuY3Rpb246Omlk
ZW50aXR5LFxuIiArIAorCQkJIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgKHAxLCBwMikgLT4gcDEpKTtcbiIgKyAKKwkJCSIgICAgICAgIH1c
biIgKyAKKwkJCSJ9XG4iICsgCisJCQkiXG4iICsgCisJCQkiY2xhc3MgUGVyc29uIHtcbiIgKyAK
KwkJCSIgICAgICAgIFN0cmluZyBnZXRMYXN0TmFtZSgpIHsgcmV0dXJuIFwiXCI7IH1cbiIgKyAK
KwkJCSJ9IgorCQl9LAorCQkiLS0tLS0tLS0tLVxuIiArIAorCQkiMS4gRVJST1IgaW4gQW5ub3Rh
dGlvbkNvbGxlY3Rvci5qYXZhIChhdCBsaW5lIDkpXG4iICsgCisJCSIJcmV0dXJuIHBlcnNvbnMu
Y29sbGVjdChDb2xsZWN0b3JzLnRvTWFwKChQZXJzb24gcCkgLT4gcC5nZXRMYXN0TmFtZSgpLFxu
IiArIAorCQkiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgIEZ1bmN0aW9uOjppZGVudGl0eSxcbiIgKyAKKwkJIiAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKHAxLCBwMikgLT4g
cDEpKTtcbiIgKyAKKwkJIgkgICAgICAgXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXl5eXl5eXlxuIiArIAorCQkiVHlwZSBtaXNtYXRjaDogY2Fubm90IGNvbnZlcnQg
ZnJvbSBNYXA8U3RyaW5nLE9iamVjdD4gdG8gTWFwPFN0cmluZyxQZXJzb24+XG4iICsgCisJCSIt
LS0tLS0tLS0tXG4iICsgCisJCSIyLiBFUlJPUiBpbiBBbm5vdGF0aW9uQ29sbGVjdG9yLmphdmEg
KGF0IGxpbmUgMTApXG4iICsgCisJCSIJRnVuY3Rpb246OmlkZW50aXR5LFxuIiArIAorCQkiCV5e
Xl5eXl5eXl5eXl5eXl5eXlxuIiArIAorCQkiVGhlIHR5cGUgRnVuY3Rpb24gZG9lcyBub3QgZGVm
aW5lIGlkZW50aXR5KFBlcnNvbikgdGhhdCBpcyBhcHBsaWNhYmxlIGhlcmVcbiIgKyAKKwkJIi0t
LS0tLS0tLS1cbiIpOworfQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9DYXB0dXJlQmlu
ZGluZzE4LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0NhcHR1cmVCaW5kaW5nMTguamF2YQppbmRleCAz
ZTMxZDcwLi5jYzY5OGE5IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0NhcHR1cmVCaW5kaW5n
MTguamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0NhcHR1cmVCaW5kaW5nMTguamF2YQpAQCAtMTI0
LDEzICsxMjQsMjAgQEAKIAl9CiAKIAlwdWJsaWMgYm9vbGVhbiBpc0NvbXBhdGlibGVXaXRoKFR5
cGVCaW5kaW5nIG90aGVyVHlwZSwgU2NvcGUgY2FwdHVyZVNjb3BlKSB7Ci0JCWlmICh0aGlzLnVw
cGVyQm91bmRzICE9IG51bGwpIHsKLQkJCWZvciAoaW50IGkgPSAwOyBpIDwgdGhpcy51cHBlckJv
dW5kcy5sZW5ndGg7IGkrKykgewotCQkJCWlmICh0aGlzLnVwcGVyQm91bmRzW2ldLmlzQ29tcGF0
aWJsZVdpdGgob3RoZXJUeXBlLCBjYXB0dXJlU2NvcGUpKQotCQkJCQlyZXR1cm4gdHJ1ZTsKKwkJ
aWYgKHRoaXMuaW5SZWN1cnNpdmVGdW5jdGlvbikKKwkJCXJldHVybiB0cnVlOworCQl0aGlzLmlu
UmVjdXJzaXZlRnVuY3Rpb24gPSB0cnVlOyAKKwkJdHJ5IHsKKwkJCWlmICh0aGlzLnVwcGVyQm91
bmRzICE9IG51bGwpIHsKKwkJCQlmb3IgKGludCBpID0gMDsgaSA8IHRoaXMudXBwZXJCb3VuZHMu
bGVuZ3RoOyBpKyspIHsKKwkJCQkJaWYgKHRoaXMudXBwZXJCb3VuZHNbaV0uaXNDb21wYXRpYmxl
V2l0aChvdGhlclR5cGUsIGNhcHR1cmVTY29wZSkpCisJCQkJCQlyZXR1cm4gdHJ1ZTsKKwkJCQl9
CiAJCQl9CisJCQlyZXR1cm4gc3VwZXIuaXNDb21wYXRpYmxlV2l0aChvdGhlclR5cGUsIGNhcHR1
cmVTY29wZSk7CisJCX0gZmluYWxseSB7CisJCQl0aGlzLmluUmVjdXJzaXZlRnVuY3Rpb24gPSBm
YWxzZTsKIAkJfQotCQlyZXR1cm4gc3VwZXIuaXNDb21wYXRpYmxlV2l0aChvdGhlclR5cGUsIGNh
cHR1cmVTY29wZSk7CiAJfQogCiAJcHVibGljIFR5cGVCaW5kaW5nIGZpbmRTdXBlclR5cGVPcmln
aW5hdGluZ0Zyb20oVHlwZUJpbmRpbmcgb3RoZXJUeXBlKSB7
</data>

          </attachment>
      

    </bug>

</bugzilla>