<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>421040</bug_id>
          
          <creation_ts>2013-11-05 00:12:00 -0500</creation_ts>
          <short_desc>[dom] TypeBinding.getDeclaredModifiers simply delegates to getModifiers()</short_desc>
          <delta_ts>2013-12-10 03:24:16 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.4 M4</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="shankha banerjee">shankhba</assigned_to>
          <cc>jarthana</cc>
    
    <cc>markus_keller</cc>
    
    <cc>shankhba</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="59898"
          type_id="1"
          status="+"
          setter="jarthana"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2326530</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-11-05 00:12:34 -0500</bug_when>
    <thetext>Per Javadoc, ITypeBinding.getDeclaredModifiers() is supposed to return
&quot;the modifiers ... as specified in the original source declaration of the class or
interface&quot;. In the present implementation, it simply delegates to getModifiers()
which is wrong.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2326768</commentid>
    <comment_count>1</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-11-05 10:51:01 -0500</bug_when>
    <thetext>The 2 usages of this API in JDT UI only check whether an ITypeBinding is private or protected, so we should not be affected by a change here.

It would also be OK for me to deprecate this API. It can&apos;t work for binary types and it&apos;s hardly useful for source types (AST already has the source info, and I don&apos;t know when a client would not want to see e.g. the &quot;implicitly static&quot; properties from bug 419057).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2327034</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-11-06 02:02:07 -0500</bug_when>
    <thetext>Shankha, please follow up on this, Ask Jay to review/release, Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2327961</commentid>
    <comment_count>3</comment_count>
      <attachid>237305</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-11-08 04:43:41 -0500</bug_when>
    <thetext>Created attachment 237305
Patch

The patch marks the API getDeclaredModifiers deprecated.

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2327982</commentid>
    <comment_count>4</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-11-08 05:24:08 -0500</bug_when>
    <thetext>There are 3 new warning messages introduced during the build.

1) The method getDeclaredModifiers() from the type ITypeBinding is deprecated	ExtractClassRefactoring.java	/org.eclipse.jdt.ui/core refactoring/org/eclipse/jdt/internal/corext/refactoring/structure	line 756	Java Problem  

2) The method getDeclaredModifiers() from the type ITypeBinding is deprecated	ExtractClassRefactoring.java	/org.eclipse.jdt.ui/core refactoring/org/eclipse/jdt/internal/corext/refactoring/structure	line 758	Java Problem 

3) The method getDeclaredModifiers() from the type ITypeBinding is deprecated	ParameterObjectFactory.java	/org.eclipse.jdt.ui/core refactoring/org/eclipse/jdt/internal/corext/refactoring/structure	line 302	Java Problem</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2328007</commentid>
    <comment_count>5</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-11-08 06:26:53 -0500</bug_when>
    <thetext>(In reply to shankha banerjee from comment #4)
&gt; There are 3 new warning messages introduced during the build.

Fixed with http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=fc5db860cde9862df43b16821dd6c29a092bace8</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2328013</commentid>
    <comment_count>6</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-11-08 06:33:19 -0500</bug_when>
    <thetext>Please adhere to https://wiki.eclipse.org/Evolving_Java-based_APIs#API_Prime_Directive :

&gt; Obsolete API elements should be marked as deprecated and point new customers
&gt; at the new API that replaces it

Look for other files that contain &quot;* @deprecated&quot;. In this case, the deprecation message should explain that this was never implemented properly and that clients can just use getModifiers().</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2328051</commentid>
    <comment_count>7</comment_count>
      <attachid>237309</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-11-08 08:01:53 -0500</bug_when>
    <thetext>Created attachment 237309
Patch

Have incorporated the reasons for deprecation of the API as suggested in https://bugs.eclipse.org/bugs/show_bug.cgi?id=421040#c6.

The javadoc for getDeclaredModifiers in org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ITypeBinding.java 

has also been modified. 

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2328085</commentid>
    <comment_count>8</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-11-08 09:12:01 -0500</bug_when>
    <thetext>Check the Javadoc hover of ITypeBinding#getDeclaredModifiers(). It will show you that most of the Javadoc is missing now, and that a space is missing in front of {@link ...}

Please read and follow http://docs.oracle.com/javase/7/docs/technotes/tools/windows/javadoc.html and http://www.oracle.com/technetwork/java/javase/documentation/index-137868.html . This will also tell you about that

	 * @see Modifier
	 *
	 * &lt;further general comments here&gt;

is not a valid pattern, that the dash after @deprecated shouldn&apos;t be there, and that the deprecation message should start with an uppercase letter.

When writing API docs, always imagine you&apos;re a client who uses this API as a black box. As I said, the client should be informed that getModifiers() is a 100% safe replacement. A client shouldn&apos;t have to dig in history only to find that getDeclaredModifiers() has never been different from getModifiers(). On the other hand, &quot;declared modifiers could not be extracted from compiled modifiers&quot; is not really relevant for the client.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2328555</commentid>
    <comment_count>9</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-11-10 23:17:47 -0500</bug_when>
    <thetext>Hi Markus,

The javadoc for getDecalaredModifiers reads as follows:

------------------------------------------------------------------------
Returns the declared modifiers for this class or interface binding
as specified in the original source declaration of the class or
interface. 
The result may not correspond to the modifiers in the compiled
binary, since the compiler may change them (in particular, for inner
class emulation). The &lt;code&gt;getModifiers&lt;/code&gt; method should be used if
the compiled modifiers are needed. Returns -1 if this type does not
represent a class or interface.
-------------------------------------------------------------------------
Would it be proper to remove the whole doc and just point to getModifier and say this particular API has been deprecated. 

For 
getModifier

The result may not correspond to the modifiers as declared in the
original source, since the compiler may change them (in particular,
for inner class emulation).

Can it be modified to:

Returns the compiled modifiers which includes declared modifiers (modifiers declared in the original source).

Thanks



Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2328580</commentid>
    <comment_count>10</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-11-11 01:17:11 -0500</bug_when>
    <thetext>(In reply to shankha banerjee from comment #9)
&gt; Hi Markus,
&gt; 
&gt; The javadoc for getDecalaredModifiers reads as follows:
&gt; ...
&gt; Would it be proper to remove the whole doc and just point to getModifier and
&gt; say this particular API has been deprecated. 

I guess it doesn&apos;t matter as it&apos;s deprecated now anyway. APIs get deprecated because their behavior is not accurate or no longer required. So, we can just leave the rest as they are and specify why they are being deprecated and what the client should be using in its place.

&gt; For 
&gt; getModifier
&gt; 
&gt; The result may not correspond to the modifiers as declared in the
&gt; original source, since the compiler may change them (in particular,
&gt; for inner class emulation).
&gt; 
&gt; Can it be modified to:
&gt; 
&gt; Returns the compiled modifiers which includes declared modifiers (modifiers
&gt; declared in the original source).

The only thing that needs a change here is that getDeclaredModifiers() is no longer available and we can&apos;t reference it anymore.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2328992</commentid>
    <comment_count>11</comment_count>
      <attachid>237383</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-11-11 22:00:42 -0500</bug_when>
    <thetext>Created attachment 237383
Patch: Deprecated getDeclaredModifiers

1) The javadoc for getModifiers is visible when hovered over the link to getModifiers.

2) Few lines in getModifiers pointing to getDeclaredModifiers were removed.

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2330022</commentid>
    <comment_count>12</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-11-14 01:56:01 -0500</bug_when>
    <thetext>(In reply to shankha banerjee from comment #11)
&gt; Created attachment 237383 [details]
&gt; Patch: Deprecated getDeclaredModifiers

Found these problems with the patch:
1. ITypeBinding#getDeclaredModifiers - You have introduced a new Javadoc block right below the existing one. This makes the existing one useless even though it&apos;s physically present. It&apos;s okay to keep the old documentation, just add the @Deprecated tag right at the end of the Javadoc.

2. You have to have a space after the Use in &quot;Use{@link #getModifiers()} instead.&quot;

3. The deprecation message could use some detail. Something like: 

Use {@link #getModifiers()} instead, as these two methods have 			always produced the same result.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2330028</commentid>
    <comment_count>13</comment_count>
      <attachid>237459</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-11-14 02:30:38 -0500</bug_when>
    <thetext>Created attachment 237459
Patch: Deprecated getDeclaredModifiers

(In reply to Jayaprakash Arthanareeswaran from comment #12)

&gt; 1. ITypeBinding#getDeclaredModifiers - You have introduced a new Javadoc
&gt; block right below the existing one. This makes the existing one useless even
&gt; though it&apos;s physically present. It&apos;s okay to keep the old documentation,
&gt; just add the @Deprecated tag right at the end of the Javadoc.

&gt; 3. The deprecation message could use some detail. Something like: 
&gt; 
&gt; Use {@link #getModifiers()} instead, as these two methods have 			always
&gt; produced the same result.

I have modified the javadoc to take care of the above two points.

&gt; 2. You have to have a space after the Use in &quot;Use{@link #getModifiers()}
&gt; instead.&quot;

Done.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2330095</commentid>
    <comment_count>14</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-11-14 05:25:57 -0500</bug_when>
    <thetext>(In reply to shankha banerjee from comment #13)

&gt; &gt; Use {@link #getModifiers()} instead, as these two methods have 			always
&gt; &gt; produced the same result.
&gt; 
&gt; I have modified the javadoc to take care of the above two points.

Sorry for pitching in late, I like the wording in comment#6 better:
I think we can say: 

&quot;This method was never implemented properly and historically 
has simply delegated to getModifiers(). Clients should call getModifiers() 
directly.&quot;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2330129</commentid>
    <comment_count>15</comment_count>
      <attachid>237465</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2013-11-14 06:30:12 -0500</bug_when>
    <thetext>Created attachment 237465
Patch: Deprecated getDeclaredModifiers

Following are the changes as per comment (https://bugs.eclipse.org/bugs/show_bug.cgi?id=421040#c14):


@@ -173,6 +173,10 @@ public interface ITypeBinding extends IBinding {
 	 * @return the bit-wise or of &lt;code&gt;Modifier&lt;/code&gt; constants
 	 * @see #getModifiers()
 	 * @see Modifier
+	 * @deprecated  Use {@link #getModifiers()} instead.
+	 * This method was never implemented properly and historically has simply
+	 * delegated to the method &lt;code&gt;getModifiers&lt;/code&gt;. Clients should call
+	 * &lt;code&gt;getModifiers&lt;/code&gt; method directly.
 	 */

I have checked the javadoc by hovering of the pointer and formatting looks correct.
Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2330548</commentid>
    <comment_count>16</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-11-15 01:40:10 -0500</bug_when>
    <thetext>Thanks, Shankha. I have pushed the fix here:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=c0b5895abd09ac3472890c9dbd43d2aa66a43571</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2339673</commentid>
    <comment_count>17</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-12-10 03:24:16 -0500</bug_when>
    <thetext>Verified for 4.4 M4 with build I20131209-2000.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>237305</attachid>
            <date>2013-11-08 04:43:00 -0500</date>
            <delta_ts>2013-11-08 08:01:53 -0500</delta_ts>
            <desc>Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>3313</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZUJpbmRpbmcuamF2YSBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29r
dXAvVHlwZUJpbmRpbmcuamF2YQppbmRleCBlZGEwYTZlLi4wY2E5YzkwIDEwMDY0NAotLS0gYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvbG9va3VwL1R5cGVCaW5kaW5nLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlQmlu
ZGluZy5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENv
cHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENv
cHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFs
bCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRl
cmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlw
c2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmli
dXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vSVR5cGVCaW5kaW5nLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0lUeXBlQmluZGlu
Zy5qYXZhCmluZGV4IDE1MDUyNzcuLmU0MjI4NGQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vSVR5cGVCaW5kaW5nLmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9JVHlw
ZUJpbmRpbmcuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0g
KiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisg
KiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAg
KiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcg
bWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBF
Y2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlz
dHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0xNzQsNiArMTc0LDcgQEAgcHVibGlj
IGludGVyZmFjZSBJVHlwZUJpbmRpbmcgZXh0ZW5kcyBJQmluZGluZyB7CiAJICogQHNlZSAjZ2V0
TW9kaWZpZXJzKCkKIAkgKiBAc2VlIE1vZGlmaWVyCiAJICovCisJLyoqIEBkZXByZWNhdGVkICov
CiAJcHVibGljIGludCBnZXREZWNsYXJlZE1vZGlmaWVycygpOwogCiAJLyoqCmRpZmYgLS1naXQg
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1JlY292
ZXJlZFR5cGVCaW5kaW5nLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlw
c2UvamR0L2NvcmUvZG9tL1JlY292ZXJlZFR5cGVCaW5kaW5nLmphdmEKaW5kZXggZjBlOGI0MC4u
ODlkNzBmMyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNl
L2pkdC9jb3JlL2RvbS9SZWNvdmVyZWRUeXBlQmluZGluZy5qYXZhCisrKyBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vUmVjb3ZlcmVkVHlwZUJpbmRp
bmcuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5
cmlnaHQgKGMpIDIwMDcsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5
cmlnaHQgKGMpIDIwMDcsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwg
cmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJp
YWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNl
IFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0
aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0xMjcsNiArMTI3LDcgQEAgY2xhc3MgUmVjb3Zl
cmVkVHlwZUJpbmRpbmcgaW1wbGVtZW50cyBJVHlwZUJpbmRpbmcgewogCS8qIChub24tSmF2YWRv
YykKIAkgKiBAc2VlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5JVHlwZUJpbmRpbmcjZ2V0RGVj
bGFyZWRNb2RpZmllcnMoKQogCSAqLworCS8qKiBAZGVwcmVjYXRlZCAqLwogCXB1YmxpYyBpbnQg
Z2V0RGVjbGFyZWRNb2RpZmllcnMoKSB7CiAJCXJldHVybiAwOwogCX0KZGlmZiAtLWdpdCBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vVHlwZUJpbmRp
bmcuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9k
b20vVHlwZUJpbmRpbmcuamF2YQppbmRleCBkNzIzNTM2Li5kMjZlMTAzIDEwMDY0NAotLS0gYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1R5cGVCaW5k
aW5nLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9j
b3JlL2RvbS9UeXBlQmluZGluZy5qYXZhCkBAIC0zMDIsNiArMzAyLDcgQEAgY2xhc3MgVHlwZUJp
bmRpbmcgaW1wbGVtZW50cyBJVHlwZUJpbmRpbmcgewogCS8qCiAJICogQHNlZSBJVHlwZUJpbmRp
bmcjZ2V0RGVjbGFyZWRNb2RpZmllcnMoKQogCSAqLworCS8qKiBAZGVwcmVjYXRlZCAqLwogCXB1
YmxpYyBpbnQgZ2V0RGVjbGFyZWRNb2RpZmllcnMoKSB7CiAJCXJldHVybiBnZXRNb2RpZmllcnMo
KTsKIAl9Cg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>237309</attachid>
            <date>2013-11-08 08:01:00 -0500</date>
            <delta_ts>2013-11-11 22:00:42 -0500</delta_ts>
            <desc>Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>3643</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29y
ZS9kb20vSVR5cGVCaW5kaW5nLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2NvcmUvZG9tL0lUeXBlQmluZGluZy5qYXZhCmluZGV4IDE1MDUyNzcuLjIyZjc2
MzQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQv
Y29yZS9kb20vSVR5cGVCaW5kaW5nLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9t
L29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9JVHlwZUJpbmRpbmcuamF2YQpAQCAtMSw1ICsxLDUg
QEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEg
SUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMg
SUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlz
IHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFp
bGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAK
ICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxl
IGF0CkBAIC0xNzMsNyArMTczLDExIEBAIHB1YmxpYyBpbnRlcmZhY2UgSVR5cGVCaW5kaW5nIGV4
dGVuZHMgSUJpbmRpbmcgewogCSAqIEByZXR1cm4gdGhlIGJpdC13aXNlIG9yIG9mIDxjb2RlPk1v
ZGlmaWVyPC9jb2RlPiBjb25zdGFudHMKIAkgKiBAc2VlICNnZXRNb2RpZmllcnMoKQogCSAqIEBz
ZWUgTW9kaWZpZXIKKwkgKgorCSAqIFRoZSBtZXRob2QgaGFzIGJlZW4gZGVwcmVjYXRlZCBhcyBk
ZWNsYXJlZCBtb2RpZmllcnMgY291bGQgbm90IGJlCisJICogZXh0cmFjdGVkIGZyb20gY29tcGls
ZWQgbW9kaWZpZXJzLgogCSAqLworCS8qKiBAZGVwcmVjYXRlZCAtIHVzZXtAbGluayAjZ2V0TW9k
aWZpZXJzKCl9IGluc3RlYWQqLwogCXB1YmxpYyBpbnQgZ2V0RGVjbGFyZWRNb2RpZmllcnMoKTsK
IAogCS8qKgpAQCAtMzI4LDE1ICszMzIsMTMgQEAgcHVibGljIGludGVyZmFjZSBJVHlwZUJpbmRp
bmcgZXh0ZW5kcyBJQmluZGluZyB7CiAJICogb3IgYW5ub3RhdGlvbiB0eXBlIGJpbmRpbmcuCiAJ
ICogVGhlIHJlc3VsdCBtYXkgbm90IGNvcnJlc3BvbmQgdG8gdGhlIG1vZGlmaWVycyBhcyBkZWNs
YXJlZCBpbiB0aGUKIAkgKiBvcmlnaW5hbCBzb3VyY2UsIHNpbmNlIHRoZSBjb21waWxlciBtYXkg
Y2hhbmdlIHRoZW0gKGluIHBhcnRpY3VsYXIsCi0JICogZm9yIGlubmVyIGNsYXNzIGVtdWxhdGlv
bikuIFRoZSA8Y29kZT5nZXREZWNsYXJlZE1vZGlmaWVyczwvY29kZT4gbWV0aG9kCi0JICogc2hv
dWxkIGJlIHVzZWQgaWYgdGhlIG9yaWdpbmFsIG1vZGlmaWVycyBhcmUgbmVlZGVkLgorCSAqIGZv
ciBpbm5lciBjbGFzcyBlbXVsYXRpb24pLgogCSAqIFJldHVybnMgMCBpZiB0aGlzIHR5cGUgZG9l
cyBub3QgcmVwcmVzZW50IGEgY2xhc3MsIGFuIGludGVyZmFjZSwgYW4gZW51bSwgYW4gYW5ub3Rh
dGlvbgogCSAqIHR5cGUgb3IgYSByZWNvdmVyZWQgdHlwZS4KIAkgKgogCSAqIEByZXR1cm4gdGhl
IGNvbXBpbGVkIG1vZGlmaWVycyBmb3IgdGhpcyB0eXBlIGJpbmRpbmcgb3IgMAogCSAqIGlmIHRo
aXMgdHlwZSBkb2VzIG5vdCByZXByZXNlbnQgYSBjbGFzcywgYW4gaW50ZXJmYWNlLCBhbiBlbnVt
LCBhbiBhbm5vdGF0aW9uCiAJICogdHlwZSBvciBhIHJlY292ZXJlZCB0eXBlLgotCSAqIEBzZWUg
I2dldERlY2xhcmVkTW9kaWZpZXJzKCkKIAkgKi8KIAlwdWJsaWMgaW50IGdldE1vZGlmaWVycygp
OwogCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0
L2NvcmUvZG9tL1JlY292ZXJlZFR5cGVCaW5kaW5nLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1JlY292ZXJlZFR5cGVCaW5kaW5nLmphdmEK
aW5kZXggZjBlOGI0MC4uYTM2NTc5NCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
ZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9SZWNvdmVyZWRUeXBlQmluZGluZy5qYXZhCisr
KyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vUmVj
b3ZlcmVkVHlwZUJpbmRpbmcuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDcsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBv
dGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDcsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBv
dGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2Nv
bXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1z
IG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVz
IHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0xMjcsNiArMTI3LDcg
QEAgY2xhc3MgUmVjb3ZlcmVkVHlwZUJpbmRpbmcgaW1wbGVtZW50cyBJVHlwZUJpbmRpbmcgewog
CS8qIChub24tSmF2YWRvYykKIAkgKiBAc2VlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5JVHlw
ZUJpbmRpbmcjZ2V0RGVjbGFyZWRNb2RpZmllcnMoKQogCSAqLworCS8qKiBAZGVwcmVjYXRlZCAt
IHVzZXtAbGluayBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uSVR5cGVCaW5kaW5nI2dldE1vZGlm
aWVycygpfSBpbnN0ZWFkKi8KIAlwdWJsaWMgaW50IGdldERlY2xhcmVkTW9kaWZpZXJzKCkgewog
CQlyZXR1cm4gMDsKIAl9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3Jn
L2VjbGlwc2UvamR0L2NvcmUvZG9tL1R5cGVCaW5kaW5nLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1R5cGVCaW5kaW5nLmphdmEKaW5kZXgg
ZDcyMzUzNi4uNDUxZDc3NiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9UeXBlQmluZGluZy5qYXZhCisrKyBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vVHlwZUJpbmRpbmcuamF2YQpA
QCAtMzAyLDYgKzMwMiw3IEBAIGNsYXNzIFR5cGVCaW5kaW5nIGltcGxlbWVudHMgSVR5cGVCaW5k
aW5nIHsKIAkvKgogCSAqIEBzZWUgSVR5cGVCaW5kaW5nI2dldERlY2xhcmVkTW9kaWZpZXJzKCkK
IAkgKi8KKwkvKiogQGRlcHJlY2F0ZWQgLSB1c2V7QGxpbmsgb3JnLmVjbGlwc2UuamR0LmNvcmUu
ZG9tLklUeXBlQmluZGluZyNnZXRNb2RpZmllcnN9IGluc3RlYWQqLwogCXB1YmxpYyBpbnQgZ2V0
RGVjbGFyZWRNb2RpZmllcnMoKSB7CiAJCXJldHVybiBnZXRNb2RpZmllcnMoKTsKIAl9Cg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>237383</attachid>
            <date>2013-11-11 22:00:00 -0500</date>
            <delta_ts>2013-11-14 02:30:38 -0500</delta_ts>
            <desc>Patch: Deprecated getDeclaredModifiers</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>3466</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29y
ZS9kb20vSVR5cGVCaW5kaW5nLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2NvcmUvZG9tL0lUeXBlQmluZGluZy5qYXZhCmluZGV4IDE1MDUyNzcuLjkyZDgx
OTMgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQv
Y29yZS9kb20vSVR5cGVCaW5kaW5nLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9t
L29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9JVHlwZUJpbmRpbmcuamF2YQpAQCAtMSw1ICsxLDUg
QEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEg
SUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMg
SUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlz
IHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFp
bGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAK
ICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxl
IGF0CkBAIC0xNzQsNiArMTc0LDcgQEAgcHVibGljIGludGVyZmFjZSBJVHlwZUJpbmRpbmcgZXh0
ZW5kcyBJQmluZGluZyB7CiAJICogQHNlZSAjZ2V0TW9kaWZpZXJzKCkKIAkgKiBAc2VlIE1vZGlm
aWVyCiAJICovCisJLyoqIEBkZXByZWNhdGVkICBVc2V7QGxpbmsgI2dldE1vZGlmaWVycygpfSBp
bnN0ZWFkLiAqLwogCXB1YmxpYyBpbnQgZ2V0RGVjbGFyZWRNb2RpZmllcnMoKTsKIAogCS8qKgpA
QCAtMzI4LDE1ICszMjksMTMgQEAgcHVibGljIGludGVyZmFjZSBJVHlwZUJpbmRpbmcgZXh0ZW5k
cyBJQmluZGluZyB7CiAJICogb3IgYW5ub3RhdGlvbiB0eXBlIGJpbmRpbmcuCiAJICogVGhlIHJl
c3VsdCBtYXkgbm90IGNvcnJlc3BvbmQgdG8gdGhlIG1vZGlmaWVycyBhcyBkZWNsYXJlZCBpbiB0
aGUKIAkgKiBvcmlnaW5hbCBzb3VyY2UsIHNpbmNlIHRoZSBjb21waWxlciBtYXkgY2hhbmdlIHRo
ZW0gKGluIHBhcnRpY3VsYXIsCi0JICogZm9yIGlubmVyIGNsYXNzIGVtdWxhdGlvbikuIFRoZSA8
Y29kZT5nZXREZWNsYXJlZE1vZGlmaWVyczwvY29kZT4gbWV0aG9kCi0JICogc2hvdWxkIGJlIHVz
ZWQgaWYgdGhlIG9yaWdpbmFsIG1vZGlmaWVycyBhcmUgbmVlZGVkLgorCSAqIGZvciBpbm5lciBj
bGFzcyBlbXVsYXRpb24pLgogCSAqIFJldHVybnMgMCBpZiB0aGlzIHR5cGUgZG9lcyBub3QgcmVw
cmVzZW50IGEgY2xhc3MsIGFuIGludGVyZmFjZSwgYW4gZW51bSwgYW4gYW5ub3RhdGlvbgogCSAq
IHR5cGUgb3IgYSByZWNvdmVyZWQgdHlwZS4KIAkgKgogCSAqIEByZXR1cm4gdGhlIGNvbXBpbGVk
IG1vZGlmaWVycyBmb3IgdGhpcyB0eXBlIGJpbmRpbmcgb3IgMAogCSAqIGlmIHRoaXMgdHlwZSBk
b2VzIG5vdCByZXByZXNlbnQgYSBjbGFzcywgYW4gaW50ZXJmYWNlLCBhbiBlbnVtLCBhbiBhbm5v
dGF0aW9uCiAJICogdHlwZSBvciBhIHJlY292ZXJlZCB0eXBlLgotCSAqIEBzZWUgI2dldERlY2xh
cmVkTW9kaWZpZXJzKCkKIAkgKi8KIAlwdWJsaWMgaW50IGdldE1vZGlmaWVycygpOwogCmRpZmYg
LS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9t
L1JlY292ZXJlZFR5cGVCaW5kaW5nLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3Jn
L2VjbGlwc2UvamR0L2NvcmUvZG9tL1JlY292ZXJlZFR5cGVCaW5kaW5nLmphdmEKaW5kZXggZjBl
OGI0MC4uNDhiM2RhYyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL2RvbS9SZWNvdmVyZWRUeXBlQmluZGluZy5qYXZhCisrKyBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vUmVjb3ZlcmVkVHlw
ZUJpbmRpbmcuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0g
KiBDb3B5cmlnaHQgKGMpIDIwMDcsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisg
KiBDb3B5cmlnaHQgKGMpIDIwMDcsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAg
KiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcg
bWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBF
Y2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlz
dHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0xMjcsNiArMTI3LDcgQEAgY2xhc3Mg
UmVjb3ZlcmVkVHlwZUJpbmRpbmcgaW1wbGVtZW50cyBJVHlwZUJpbmRpbmcgewogCS8qIChub24t
SmF2YWRvYykKIAkgKiBAc2VlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5JVHlwZUJpbmRpbmcj
Z2V0RGVjbGFyZWRNb2RpZmllcnMoKQogCSAqLworCS8qKiBAZGVwcmVjYXRlZCBVc2Uge0BsaW5r
IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5JVHlwZUJpbmRpbmcjZ2V0TW9kaWZpZXJzKCl9IGlu
c3RlYWQuICovCiAJcHVibGljIGludCBnZXREZWNsYXJlZE1vZGlmaWVycygpIHsKIAkJcmV0dXJu
IDA7CiAJfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNl
L2pkdC9jb3JlL2RvbS9UeXBlQmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9t
L29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9UeXBlQmluZGluZy5qYXZhCmluZGV4IGQ3MjM1MzYu
LmEyYjdiODcgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBz
ZS9qZHQvY29yZS9kb20vVHlwZUJpbmRpbmcuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1R5cGVCaW5kaW5nLmphdmEKQEAgLTMwMiw2
ICszMDIsNyBAQCBjbGFzcyBUeXBlQmluZGluZyBpbXBsZW1lbnRzIElUeXBlQmluZGluZyB7CiAJ
LyoKIAkgKiBAc2VlIElUeXBlQmluZGluZyNnZXREZWNsYXJlZE1vZGlmaWVycygpCiAJICovCisJ
LyoqIEBkZXByZWNhdGVkICBVc2Uge0BsaW5rIG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5JVHlw
ZUJpbmRpbmcjZ2V0TW9kaWZpZXJzfSBpbnN0ZWFkLiAqLwogCXB1YmxpYyBpbnQgZ2V0RGVjbGFy
ZWRNb2RpZmllcnMoKSB7CiAJCXJldHVybiBnZXRNb2RpZmllcnMoKTsKIAl9Cg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>237459</attachid>
            <date>2013-11-14 02:30:00 -0500</date>
            <delta_ts>2013-11-14 06:30:12 -0500</delta_ts>
            <desc>Patch: Deprecated getDeclaredModifiers</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>3585</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29y
ZS9kb20vSVR5cGVCaW5kaW5nLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2NvcmUvZG9tL0lUeXBlQmluZGluZy5qYXZhCmluZGV4IDE1MDUyNzcuLjliNTk1
NWEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQv
Y29yZS9kb20vSVR5cGVCaW5kaW5nLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9t
L29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9JVHlwZUJpbmRpbmcuamF2YQpAQCAtMSw1ICsxLDUg
QEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEg
SUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMg
SUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlz
IHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFp
bGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAK
ICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxl
IGF0CkBAIC0xNzMsNiArMTczLDggQEAgcHVibGljIGludGVyZmFjZSBJVHlwZUJpbmRpbmcgZXh0
ZW5kcyBJQmluZGluZyB7CiAJICogQHJldHVybiB0aGUgYml0LXdpc2Ugb3Igb2YgPGNvZGU+TW9k
aWZpZXI8L2NvZGU+IGNvbnN0YW50cwogCSAqIEBzZWUgI2dldE1vZGlmaWVycygpCiAJICogQHNl
ZSBNb2RpZmllcgorCSAqIEBkZXByZWNhdGVkICBVc2Uge0BsaW5rICNnZXRNb2RpZmllcnMoKX0g
aW5zdGVhZCwgYXMgdGhlc2UgdHdvIG1ldGhvZHMKKwkgKiBoYXZlIGFsd2F5cyBwcm9kdWNlZCB0
aGUgc2FtZSByZXN1bHQuCiAJICovCiAJcHVibGljIGludCBnZXREZWNsYXJlZE1vZGlmaWVycygp
OwogCkBAIC0zMjgsMTUgKzMzMCwxMyBAQCBwdWJsaWMgaW50ZXJmYWNlIElUeXBlQmluZGluZyBl
eHRlbmRzIElCaW5kaW5nIHsKIAkgKiBvciBhbm5vdGF0aW9uIHR5cGUgYmluZGluZy4KIAkgKiBU
aGUgcmVzdWx0IG1heSBub3QgY29ycmVzcG9uZCB0byB0aGUgbW9kaWZpZXJzIGFzIGRlY2xhcmVk
IGluIHRoZQogCSAqIG9yaWdpbmFsIHNvdXJjZSwgc2luY2UgdGhlIGNvbXBpbGVyIG1heSBjaGFu
Z2UgdGhlbSAoaW4gcGFydGljdWxhciwKLQkgKiBmb3IgaW5uZXIgY2xhc3MgZW11bGF0aW9uKS4g
VGhlIDxjb2RlPmdldERlY2xhcmVkTW9kaWZpZXJzPC9jb2RlPiBtZXRob2QKLQkgKiBzaG91bGQg
YmUgdXNlZCBpZiB0aGUgb3JpZ2luYWwgbW9kaWZpZXJzIGFyZSBuZWVkZWQuCisJICogZm9yIGlu
bmVyIGNsYXNzIGVtdWxhdGlvbikuCiAJICogUmV0dXJucyAwIGlmIHRoaXMgdHlwZSBkb2VzIG5v
dCByZXByZXNlbnQgYSBjbGFzcywgYW4gaW50ZXJmYWNlLCBhbiBlbnVtLCBhbiBhbm5vdGF0aW9u
CiAJICogdHlwZSBvciBhIHJlY292ZXJlZCB0eXBlLgogCSAqCiAJICogQHJldHVybiB0aGUgY29t
cGlsZWQgbW9kaWZpZXJzIGZvciB0aGlzIHR5cGUgYmluZGluZyBvciAwCiAJICogaWYgdGhpcyB0
eXBlIGRvZXMgbm90IHJlcHJlc2VudCBhIGNsYXNzLCBhbiBpbnRlcmZhY2UsIGFuIGVudW0sIGFu
IGFubm90YXRpb24KIAkgKiB0eXBlIG9yIGEgcmVjb3ZlcmVkIHR5cGUuCi0JICogQHNlZSAjZ2V0
RGVjbGFyZWRNb2RpZmllcnMoKQogCSAqLwogCXB1YmxpYyBpbnQgZ2V0TW9kaWZpZXJzKCk7CiAK
ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29y
ZS9kb20vUmVjb3ZlcmVkVHlwZUJpbmRpbmcuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Rv
bS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vUmVjb3ZlcmVkVHlwZUJpbmRpbmcuamF2YQppbmRl
eCBmMGU4YjQwLi40OGIzZGFjIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20v
b3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1JlY292ZXJlZFR5cGVCaW5kaW5nLmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9SZWNvdmVy
ZWRUeXBlQmluZGluZy5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioKLSAqIENvcHlyaWdodCAoYykgMjAwNywgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVy
cy4KKyAqIENvcHlyaWdodCAoYykgMjAwNywgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVy
cy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFu
eWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2Yg
dGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhp
cyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTEyNyw2ICsxMjcsNyBAQCBj
bGFzcyBSZWNvdmVyZWRUeXBlQmluZGluZyBpbXBsZW1lbnRzIElUeXBlQmluZGluZyB7CiAJLyog
KG5vbi1KYXZhZG9jKQogCSAqIEBzZWUgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLklUeXBlQmlu
ZGluZyNnZXREZWNsYXJlZE1vZGlmaWVycygpCiAJICovCisJLyoqIEBkZXByZWNhdGVkIFVzZSB7
QGxpbmsgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLklUeXBlQmluZGluZyNnZXRNb2RpZmllcnMo
KX0gaW5zdGVhZC4gKi8KIAlwdWJsaWMgaW50IGdldERlY2xhcmVkTW9kaWZpZXJzKCkgewogCQly
ZXR1cm4gMDsKIAl9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2NvcmUvZG9tL1R5cGVCaW5kaW5nLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1R5cGVCaW5kaW5nLmphdmEKaW5kZXggZDcy
MzUzNi4uYTJiN2I4NyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL2RvbS9UeXBlQmluZGluZy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vVHlwZUJpbmRpbmcuamF2YQpAQCAt
MzAyLDYgKzMwMiw3IEBAIGNsYXNzIFR5cGVCaW5kaW5nIGltcGxlbWVudHMgSVR5cGVCaW5kaW5n
IHsKIAkvKgogCSAqIEBzZWUgSVR5cGVCaW5kaW5nI2dldERlY2xhcmVkTW9kaWZpZXJzKCkKIAkg
Ki8KKwkvKiogQGRlcHJlY2F0ZWQgIFVzZSB7QGxpbmsgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9t
LklUeXBlQmluZGluZyNnZXRNb2RpZmllcnN9IGluc3RlYWQuICovCiAJcHVibGljIGludCBnZXRE
ZWNsYXJlZE1vZGlmaWVycygpIHsKIAkJcmV0dXJuIGdldE1vZGlmaWVycygpOwogCX0K
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>237465</attachid>
            <date>2013-11-14 06:30:00 -0500</date>
            <delta_ts>2013-11-14 06:30:12 -0500</delta_ts>
            <desc>Patch: Deprecated getDeclaredModifiers</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>3722</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29y
ZS9kb20vSVR5cGVCaW5kaW5nLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2NvcmUvZG9tL0lUeXBlQmluZGluZy5qYXZhCmluZGV4IDE1MDUyNzcuLmQ0Mzg0
OGUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQv
Y29yZS9kb20vSVR5cGVCaW5kaW5nLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9t
L29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9JVHlwZUJpbmRpbmcuamF2YQpAQCAtMSw1ICsxLDUg
QEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEg
SUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMg
SUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlz
IHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFp
bGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAK
ICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxl
IGF0CkBAIC0xNzMsNiArMTczLDEwIEBAIHB1YmxpYyBpbnRlcmZhY2UgSVR5cGVCaW5kaW5nIGV4
dGVuZHMgSUJpbmRpbmcgewogCSAqIEByZXR1cm4gdGhlIGJpdC13aXNlIG9yIG9mIDxjb2RlPk1v
ZGlmaWVyPC9jb2RlPiBjb25zdGFudHMKIAkgKiBAc2VlICNnZXRNb2RpZmllcnMoKQogCSAqIEBz
ZWUgTW9kaWZpZXIKKwkgKiBAZGVwcmVjYXRlZCAgVXNlIHtAbGluayAjZ2V0TW9kaWZpZXJzKCl9
IGluc3RlYWQuCisJICogVGhpcyBtZXRob2Qgd2FzIG5ldmVyIGltcGxlbWVudGVkIHByb3Blcmx5
IGFuZCBoaXN0b3JpY2FsbHkgaGFzIHNpbXBseQorCSAqIGRlbGVnYXRlZCB0byB0aGUgbWV0aG9k
IDxjb2RlPmdldE1vZGlmaWVyczwvY29kZT4uIENsaWVudHMgc2hvdWxkIGNhbGwKKwkgKiA8Y29k
ZT5nZXRNb2RpZmllcnM8L2NvZGU+IG1ldGhvZCBkaXJlY3RseS4KIAkgKi8KIAlwdWJsaWMgaW50
IGdldERlY2xhcmVkTW9kaWZpZXJzKCk7CiAKQEAgLTMyOCwxNSArMzMyLDEzIEBAIHB1YmxpYyBp
bnRlcmZhY2UgSVR5cGVCaW5kaW5nIGV4dGVuZHMgSUJpbmRpbmcgewogCSAqIG9yIGFubm90YXRp
b24gdHlwZSBiaW5kaW5nLgogCSAqIFRoZSByZXN1bHQgbWF5IG5vdCBjb3JyZXNwb25kIHRvIHRo
ZSBtb2RpZmllcnMgYXMgZGVjbGFyZWQgaW4gdGhlCiAJICogb3JpZ2luYWwgc291cmNlLCBzaW5j
ZSB0aGUgY29tcGlsZXIgbWF5IGNoYW5nZSB0aGVtIChpbiBwYXJ0aWN1bGFyLAotCSAqIGZvciBp
bm5lciBjbGFzcyBlbXVsYXRpb24pLiBUaGUgPGNvZGU+Z2V0RGVjbGFyZWRNb2RpZmllcnM8L2Nv
ZGU+IG1ldGhvZAotCSAqIHNob3VsZCBiZSB1c2VkIGlmIHRoZSBvcmlnaW5hbCBtb2RpZmllcnMg
YXJlIG5lZWRlZC4KKwkgKiBmb3IgaW5uZXIgY2xhc3MgZW11bGF0aW9uKS4KIAkgKiBSZXR1cm5z
IDAgaWYgdGhpcyB0eXBlIGRvZXMgbm90IHJlcHJlc2VudCBhIGNsYXNzLCBhbiBpbnRlcmZhY2Us
IGFuIGVudW0sIGFuIGFubm90YXRpb24KIAkgKiB0eXBlIG9yIGEgcmVjb3ZlcmVkIHR5cGUuCiAJ
ICoKIAkgKiBAcmV0dXJuIHRoZSBjb21waWxlZCBtb2RpZmllcnMgZm9yIHRoaXMgdHlwZSBiaW5k
aW5nIG9yIDAKIAkgKiBpZiB0aGlzIHR5cGUgZG9lcyBub3QgcmVwcmVzZW50IGEgY2xhc3MsIGFu
IGludGVyZmFjZSwgYW4gZW51bSwgYW4gYW5ub3RhdGlvbgogCSAqIHR5cGUgb3IgYSByZWNvdmVy
ZWQgdHlwZS4KLQkgKiBAc2VlICNnZXREZWNsYXJlZE1vZGlmaWVycygpCiAJICovCiAJcHVibGlj
IGludCBnZXRNb2RpZmllcnMoKTsKIApkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
ZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9SZWNvdmVyZWRUeXBlQmluZGluZy5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9SZWNvdmVy
ZWRUeXBlQmluZGluZy5qYXZhCmluZGV4IGYwZThiNDAuLjQ4YjNkYWMgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vUmVjb3ZlcmVk
VHlwZUJpbmRpbmcuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlw
c2UvamR0L2NvcmUvZG9tL1JlY292ZXJlZFR5cGVCaW5kaW5nLmphdmEKQEAgLTEsNSArMSw1IEBA
CiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDA3LCAyMDExIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDA3LCAyMDEzIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBw
cm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxh
YmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAg
KiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBh
dApAQCAtMTI3LDYgKzEyNyw3IEBAIGNsYXNzIFJlY292ZXJlZFR5cGVCaW5kaW5nIGltcGxlbWVu
dHMgSVR5cGVCaW5kaW5nIHsKIAkvKiAobm9uLUphdmFkb2MpCiAJICogQHNlZSBvcmcuZWNsaXBz
ZS5qZHQuY29yZS5kb20uSVR5cGVCaW5kaW5nI2dldERlY2xhcmVkTW9kaWZpZXJzKCkKIAkgKi8K
KwkvKiogQGRlcHJlY2F0ZWQgVXNlIHtAbGluayBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb20uSVR5
cGVCaW5kaW5nI2dldE1vZGlmaWVycygpfSBpbnN0ZWFkLiAqLwogCXB1YmxpYyBpbnQgZ2V0RGVj
bGFyZWRNb2RpZmllcnMoKSB7CiAJCXJldHVybiAwOwogCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vVHlwZUJpbmRpbmcuamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vVHlw
ZUJpbmRpbmcuamF2YQppbmRleCBkNzIzNTM2Li5hMmI3Yjg3IDEwMDY0NAotLS0gYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1R5cGVCaW5kaW5nLmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2Rv
bS9UeXBlQmluZGluZy5qYXZhCkBAIC0zMDIsNiArMzAyLDcgQEAgY2xhc3MgVHlwZUJpbmRpbmcg
aW1wbGVtZW50cyBJVHlwZUJpbmRpbmcgewogCS8qCiAJICogQHNlZSBJVHlwZUJpbmRpbmcjZ2V0
RGVjbGFyZWRNb2RpZmllcnMoKQogCSAqLworCS8qKiBAZGVwcmVjYXRlZCAgVXNlIHtAbGluayBv
cmcuZWNsaXBzZS5qZHQuY29yZS5kb20uSVR5cGVCaW5kaW5nI2dldE1vZGlmaWVyc30gaW5zdGVh
ZC4gKi8KIAlwdWJsaWMgaW50IGdldERlY2xhcmVkTW9kaWZpZXJzKCkgewogCQlyZXR1cm4gZ2V0
TW9kaWZpZXJzKCk7CiAJfQo=
</data>

          </attachment>
      

    </bug>

</bugzilla>