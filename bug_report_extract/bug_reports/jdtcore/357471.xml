<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>357471</bug_id>
          
          <creation_ts>2011-09-13 07:39:00 -0400</creation_ts>
          <short_desc>ASTParser cannot resolve binding of PackageDeclaration if class name is equal to the first segment of the package name</short_desc>
          <delta_ts>2011-10-24 20:15:10 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.8</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.8 M3</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Missing name Mising name">hjs.becker</reporter>
          <assigned_to name="Olivier Thomann">Olivier_Thomann</assigned_to>
          <cc>Olivier_Thomann</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1992558</commentid>
    <comment_count>0</comment_count>
    <who name="Missing name Mising name">hjs.becker</who>
    <bug_when>2011-09-13 07:39:46 -0400</bug_when>
    <thetext>Build Identifier: I20110613-1736

We have the following example:

package one.two;
public class one {
}

We use the ASTParser to get the AST of the code.
The binding of the PackageDeclaration &apos;package one.two;&apos; is null, but the binding of the QualifiedName &apos;one.two&apos; is the correct package binding.
Furthermore, if we have this case, then in any other compilation unit contained in the same package, the binding of the PackageDeclaration is null. 

Reproducible: Always

Steps to Reproduce:
1. Create a Java class &apos;one&apos; in the package &apos;one.two&apos;.
2. Use the ASTView to get the AST of this class.
3. Look at the binding of the PackageDeclaration. It is null.
4. Look at the binding of the QualifiedName &apos;one.two&apos;. It is the expected package binding.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1992684</commentid>
    <comment_count>1</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-09-13 09:53:02 -0400</bug_when>
    <thetext>I&apos;ll take a look.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1992913</commentid>
    <comment_count>2</comment_count>
      <attachid>203277</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-09-13 14:13:34 -0400</bug_when>
    <thetext>Created attachment 203277
Patch v1</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1992915</commentid>
    <comment_count>3</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-09-13 14:15:54 -0400</bug_when>
    <thetext>Could you please give it a try ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1993020</commentid>
    <comment_count>4</comment_count>
    <who name="Missing name Mising name">hjs.becker</who>
    <bug_when>2011-09-13 16:01:27 -0400</bug_when>
    <thetext>The patch works perfectly. The bindings of the PackageDeclarations can now be resolved.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1993588</commentid>
    <comment_count>5</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-09-14 13:57:07 -0400</bug_when>
    <thetext>Since the call to org.eclipse.jdt.internal.compiler.lookup.Scope.getPackage(char[][]) with &quot;one.two&quot; as the name doesn&apos;t work when resolved in the context of the package &quot;one.two&quot; (it considers that one is the type inside the package instead of the package &apos;one&apos; itself), I suggest to add a method that retrieves packages only.

Srikanth, please let me know what you think. I found quite weird that getPackage(..) doesn&apos;t do the job, but trying to change it is causing more trouble.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1996445</commentid>
    <comment_count>6</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-09-20 09:40:49 -0400</bug_when>
    <thetext>Released for 3.8M3.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2015845</commentid>
    <comment_count>7</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-10-24 20:15:10 -0400</bug_when>
    <thetext>Fix verified by reporter via comment#4. (In reply to comment #5)

&gt; Srikanth, please let me know what you think. I found quite weird that
&gt; getPackage(..) doesn&apos;t do the job, but trying to change it is causing more
&gt; trouble.

Agree with the approach.

VERIFIED for 3.8 M3.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>203277</attachid>
            <date>2011-09-13 14:13:00 -0400</date>
            <delta_ts>2011-09-13 14:13:34 -0400</delta_ts>
            <desc>Patch v1</desc>
            <filename>patch_357471.txt</filename>
            <type>text/plain</type>
            <size>6531</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3Vw
L1Njb3BlLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9sb29rdXAvU2NvcGUuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMzgyDQpkaWZmIC11
IC1yMS4zODIgU2NvcGUuamF2YQ0KLS0tIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9sb29rdXAvU2NvcGUuamF2YQkyOCBKdWwgMjAxMSAxNzowNzoyMiAtMDAwMAkx
LjM4Mg0KKysrIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29r
dXAvU2NvcGUuamF2YQkxMyBTZXAgMjAxMSAxNjoxMToyNiAtMDAwMA0KQEAgLTIzODksNiArMjM4
OSw0MCBAQA0KIAkJcmV0dXJuIG5ldyBQcm9ibGVtUmVmZXJlbmNlQmluZGluZyhjb21wb3VuZE5h
bWUsIG51bGwgLyogbm8gY2xvc2VzdCBtYXRjaCBzaW5jZSBzZWFyY2ggZm9yIHBrZyovLCBQcm9i
bGVtUmVhc29ucy5Ob3RGb3VuZCk7DQogCX0NCiANCisJLyogQW5zd2VyIHRoZSBwYWNrYWdlIGZy
b20gdGhlIGNvbXBvdW5kTmFtZSBvciBudWxsIGlmIGl0IGJlZ2lucyB3aXRoIGEgdHlwZS4NCisJ
KiBJbnRlbmRlZCB0byBiZSB1c2VkIHdoaWxlIHJlc29sdmluZyBhIHBhY2thZ2UgbmFtZSBvbmx5
Lg0KKwkqIA0KKwkqIEludGVybmFsIHVzZSBvbmx5DQorCSovDQorCXB1YmxpYyBmaW5hbCBCaW5k
aW5nIGdldE9ubHlQYWNrYWdlKGNoYXJbXVtdIGNvbXBvdW5kTmFtZSkgew0KKyAJCWNvbXBpbGF0
aW9uVW5pdFNjb3BlKCkucmVjb3JkUXVhbGlmaWVkUmVmZXJlbmNlKGNvbXBvdW5kTmFtZSk7DQor
CQlCaW5kaW5nIGJpbmRpbmcgPSBnZXRUeXBlT3JQYWNrYWdlKGNvbXBvdW5kTmFtZVswXSwgQmlu
ZGluZy5QQUNLQUdFLCB0cnVlKTsNCisJCWlmIChiaW5kaW5nID09IG51bGwgfHwgIWJpbmRpbmcu
aXNWYWxpZEJpbmRpbmcoKSkgew0KKwkJCWNoYXJbXVtdIHFOYW1lID0gbmV3IGNoYXJbXVtdIHsg
Y29tcG91bmROYW1lWzBdIH07DQorCQkJcmV0dXJuIG5ldyBQcm9ibGVtUmVmZXJlbmNlQmluZGlu
ZyhxTmFtZSwgbnVsbCAvKiBubyBjbG9zZXN0IG1hdGNoIHNpbmNlIHNlYXJjaCBmb3IgcGtnKi8s
IFByb2JsZW1SZWFzb25zLk5vdEZvdW5kKTsNCisJCX0NCisJCWlmICghKGJpbmRpbmcgaW5zdGFu
Y2VvZiBQYWNrYWdlQmluZGluZykpIHsNCisJCQlyZXR1cm4gbnVsbDsgLy8gY29tcG91bmROYW1l
IGRvZXMgbm90IHN0YXJ0IHdpdGggYSBwYWNrYWdlDQorCQl9DQorDQorCQlpbnQgY3VycmVudElu
ZGV4ID0gMSwgbGVuZ3RoID0gY29tcG91bmROYW1lLmxlbmd0aDsNCisJCVBhY2thZ2VCaW5kaW5n
IHBhY2thZ2VCaW5kaW5nID0gKFBhY2thZ2VCaW5kaW5nKSBiaW5kaW5nOw0KKwkJd2hpbGUgKGN1
cnJlbnRJbmRleCA8IGxlbmd0aCkgew0KKwkJCWJpbmRpbmcgPSBwYWNrYWdlQmluZGluZy5nZXRQ
YWNrYWdlKGNvbXBvdW5kTmFtZVtjdXJyZW50SW5kZXgrK10pOw0KKwkJCWlmIChiaW5kaW5nID09
IG51bGwpIHsNCisJCQkJcmV0dXJuIG5ldyBQcm9ibGVtUmVmZXJlbmNlQmluZGluZyhDaGFyT3Bl
cmF0aW9uLnN1YmFycmF5KGNvbXBvdW5kTmFtZSwgMCwgY3VycmVudEluZGV4KSwgbnVsbCAvKiBu
byBjbG9zZXN0IG1hdGNoIHNpbmNlIHNlYXJjaCBmb3IgcGtnKi8sIFByb2JsZW1SZWFzb25zLk5v
dEZvdW5kKTsNCisJCQl9DQorCQkJaWYgKCFiaW5kaW5nLmlzVmFsaWRCaW5kaW5nKCkpIHsNCisJ
CQkJcmV0dXJuIG5ldyBQcm9ibGVtUmVmZXJlbmNlQmluZGluZygNCisJCQkJCUNoYXJPcGVyYXRp
b24uc3ViYXJyYXkoY29tcG91bmROYW1lLCAwLCBjdXJyZW50SW5kZXgpLA0KKwkJCQkJYmluZGlu
ZyBpbnN0YW5jZW9mIFJlZmVyZW5jZUJpbmRpbmcgPyAoUmVmZXJlbmNlQmluZGluZykoKFJlZmVy
ZW5jZUJpbmRpbmcpYmluZGluZykuY2xvc2VzdE1hdGNoKCkgOiBudWxsLA0KKwkJCQkJYmluZGlu
Zy5wcm9ibGVtSWQoKSk7DQorCQkJfQ0KKwkJCXBhY2thZ2VCaW5kaW5nID0gKFBhY2thZ2VCaW5k
aW5nKSBiaW5kaW5nOw0KKwkJfQ0KKwkJcmV0dXJuIHBhY2thZ2VCaW5kaW5nOw0KKwl9DQorDQog
CS8qIEFuc3dlciB0aGUgdHlwZSBiaW5kaW5nIHRoYXQgY29ycmVzcG9uZHMgdGhlIGdpdmVuIG5h
bWUsIHN0YXJ0aW5nIHRoZSBsb29rdXAgaW4gdGhlIHJlY2VpdmVyLg0KIAkqIFRoZSBuYW1lIHBy
b3ZpZGVkIGlzIGEgc2ltcGxlIHNvdXJjZSBuYW1lIChlLmcuLCAiT2JqZWN0IiAsICJQb2ludCIs
IC4uLikNCiAJKi8NCkluZGV4OiBkb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0RlZmF1bHRC
aW5kaW5nUmVzb2x2ZXIuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlw
c2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9EZWZh
dWx0QmluZGluZ1Jlc29sdmVyLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjE3Ng0KZGlm
ZiAtdSAtcjEuMTc2IERlZmF1bHRCaW5kaW5nUmVzb2x2ZXIuamF2YQ0KLS0tIGRvbS9vcmcvZWNs
aXBzZS9qZHQvY29yZS9kb20vRGVmYXVsdEJpbmRpbmdSZXNvbHZlci5qYXZhCTI4IEp1bCAyMDEx
IDE3OjA3OjM0IC0wMDAwCTEuMTc2DQorKysgZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9E
ZWZhdWx0QmluZGluZ1Jlc29sdmVyLmphdmEJMTMgU2VwIDIwMTEgMTY6MTE6MjcgLTAwMDANCkBA
IC0xMzg0LDcgKzEzODQsNyBAQA0KIAkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci5hc3QuQVNUTm9kZSBub2RlID0gKG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5h
c3QuQVNUTm9kZSkgdGhpcy5uZXdBc3RUb09sZEFzdC5nZXQocGtnKTsNCiAJCQlpZiAobm9kZSBp
bnN0YW5jZW9mIEltcG9ydFJlZmVyZW5jZSkgew0KIAkJCQlJbXBvcnRSZWZlcmVuY2UgaW1wb3J0
UmVmZXJlbmNlID0gKEltcG9ydFJlZmVyZW5jZSkgbm9kZTsNCi0JCQkJQmluZGluZyBiaW5kaW5n
ID0gdGhpcy5zY29wZS5nZXRUeXBlT3JQYWNrYWdlKENoYXJPcGVyYXRpb24uc3ViYXJyYXkoaW1w
b3J0UmVmZXJlbmNlLnRva2VucywgMCwgaW1wb3J0UmVmZXJlbmNlLnRva2Vucy5sZW5ndGgpKTsN
CisJCQkJQmluZGluZyBiaW5kaW5nID0gdGhpcy5zY29wZS5nZXRPbmx5UGFja2FnZShDaGFyT3Bl
cmF0aW9uLnN1YmFycmF5KGltcG9ydFJlZmVyZW5jZS50b2tlbnMsIDAsIGltcG9ydFJlZmVyZW5j
ZS50b2tlbnMubGVuZ3RoKSk7DQogCQkJCWlmICgoYmluZGluZyAhPSBudWxsKSAmJiAoYmluZGlu
Zy5pc1ZhbGlkQmluZGluZygpKSkgew0KIAkJCQkJaWYgKGJpbmRpbmcgaW5zdGFuY2VvZiBSZWZl
cmVuY2VCaW5kaW5nKSB7DQogCQkJCQkJLy8gdGhpcyBvbmx5IGhhcHBlbnMgaWYgYSB0eXBlIG5h
bWUgaGFzIHRoZSBzYW1lIG5hbWUgYXMgaXRzIHBhY2thZ2UNCiNQIG9yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLm1vZGVsDQpJbmRleDogc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Rv
bS9BU1RDb252ZXJ0ZXJUZXN0QVNUNF8yLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zz
cm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyVGVzdEFTVDRfMi5qYXZhLHYNCnJl
dHJpZXZpbmcgcmV2aXNpb24gMS4zDQpkaWZmIC11IC1yMS4zIEFTVENvbnZlcnRlclRlc3RBU1Q0
XzIuamF2YQ0KLS0tIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVy
dGVyVGVzdEFTVDRfMi5qYXZhCTggU2VwIDIwMTEgMTg6MzY6MTUgLTAwMDAJMS4zDQorKysgc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXJUZXN0QVNUNF8yLmph
dmEJMTMgU2VwIDIwMTEgMTY6MTE6MjggLTAwMDANCkBAIC0xMjIsNyArMTIyLDcgQEANCiAJc3Rh
dGljIHsNCiAvLwkJVEVTVFNfTkFNRVMgPSBuZXcgU3RyaW5nW10geyJ0ZXN0MDYwMiJ9Ow0KIC8v
CQlURVNUU19SQU5HRSA9IG5ldyBpbnRbXSB7IDcyMSwgLTEgfTsNCi0vLwkJVEVTVFNfTlVNQkVS
UyA9ICBuZXcgaW50W10geyA3MjMsIDcyNCB9Ow0KKy8vCQlURVNUU19OVU1CRVJTID0gIG5ldyBp
bnRbXSB7IDcyNSB9Ow0KIAl9DQogCXB1YmxpYyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsNCiAJCXJl
dHVybiBidWlsZE1vZGVsVGVzdFN1aXRlKEFTVENvbnZlcnRlclRlc3RBU1Q0XzIuY2xhc3MpOw0K
QEAgLTEwNjg0LDQgKzEwNjg0LDQ3IEBADQogCQlhc3NlcnRGYWxzZShpc1JlY292ZXJlZCgoQVNU
Tm9kZSkgc3RhdGVtZW50cy5nZXQoMSkpKTsNCiAJCWFzc2VydEZhbHNlKGlzUmVjb3ZlcmVkKChB
U1ROb2RlKSBzdGF0ZW1lbnRzLmdldCgyKSkpOw0KIAl9DQorCS8qDQorCSAqIGh0dHBzOi8vYnVn
cy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zNTc0NzENCisJICovDQorCXB1Ymxp
YyB2b2lkIHRlc3QwNzI1KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7DQorCQlJQ29tcGls
YXRpb25Vbml0IHdvcmtpbmdDb3B5ID0gbnVsbDsNCisJCXRyeSB7DQorCQkJU3RyaW5nIGNvbnRl
bnRzID0NCisJCQkJInBhY2thZ2Ugb25lLnR3bztcbiIgKw0KKwkJCQkicHVibGljIGNsYXNzIG9u
ZSB7fSI7DQorCQkJd29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0NvbnZlcnRlci9zcmMv
b25lL3R3by9vbmUuamF2YSIsIHRydWUvKnJlc29sdmUqLyk7DQorCQkJQ29tcGlsYXRpb25Vbml0
IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBidWlsZEFTVCgNCisJCQkJQVNULkpMUzMsDQorCQkJ
CWNvbnRlbnRzLA0KKwkJCQl3b3JraW5nQ29weSwNCisJCQkJdHJ1ZSwNCisJCQkJdHJ1ZSwNCisJ
CQkJdHJ1ZSk7DQorCQkJUGFja2FnZURlY2xhcmF0aW9uIHBhY2thZ2VEZWNsYXJhdGlvbiA9IHVu
aXQuZ2V0UGFja2FnZSgpOw0KKwkJCUlQYWNrYWdlQmluZGluZyBwYWNrYWdlQmluZGluZyA9IHBh
Y2thZ2VEZWNsYXJhdGlvbi5yZXNvbHZlQmluZGluZygpOw0KKwkJCWFzc2VydE5vdE51bGwoIk5v
IGJpbmRpbmciLCBwYWNrYWdlQmluZGluZyk7DQorCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBuYW1l
IiwgIm9uZS50d28iLCBwYWNrYWdlQmluZGluZy5nZXROYW1lKCkpOw0KKwkJCU5hbWUgcGFja2Fn
ZU5hbWUgPSBwYWNrYWdlRGVjbGFyYXRpb24uZ2V0TmFtZSgpOw0KKwkJCUlCaW5kaW5nIGJpbmRp
bmcgPSBwYWNrYWdlTmFtZS5yZXNvbHZlQmluZGluZygpOw0KKwkJCWFzc2VydEVxdWFscygiV3Jv
bmcgdHlwZSIsIElCaW5kaW5nLlBBQ0tBR0UsIGJpbmRpbmcuZ2V0S2luZCgpKTsNCisJCQlwYWNr
YWdlQmluZGluZyA9IChJUGFja2FnZUJpbmRpbmcpIGJpbmRpbmc7DQorCQkJYXNzZXJ0RXF1YWxz
KCJXcm9uZyBuYW1lIiwgIm9uZS50d28iLCBwYWNrYWdlQmluZGluZy5nZXROYW1lKCkpOw0KKwkJ
CXBhY2thZ2VOYW1lID0gKChRdWFsaWZpZWROYW1lKSBwYWNrYWdlTmFtZSkuZ2V0UXVhbGlmaWVy
KCk7DQorCQkJYmluZGluZyA9IHBhY2thZ2VOYW1lLnJlc29sdmVCaW5kaW5nKCk7DQorCQkJYXNz
ZXJ0RXF1YWxzKCJXcm9uZyB0eXBlIiwgSUJpbmRpbmcuUEFDS0FHRSwgYmluZGluZy5nZXRLaW5k
KCkpOw0KKwkJCXBhY2thZ2VCaW5kaW5nID0gKElQYWNrYWdlQmluZGluZykgYmluZGluZzsNCisJ
CQlhc3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAib25lIiwgcGFja2FnZUJpbmRpbmcuZ2V0TmFt
ZSgpKTsNCisJCQlwYWNrYWdlTmFtZSA9IHBhY2thZ2VEZWNsYXJhdGlvbi5nZXROYW1lKCk7DQor
CQkJcGFja2FnZU5hbWUgPSAoKFF1YWxpZmllZE5hbWUpIHBhY2thZ2VOYW1lKS5nZXROYW1lKCk7
DQorCQkJYmluZGluZyA9IHBhY2thZ2VOYW1lLnJlc29sdmVCaW5kaW5nKCk7DQorCQkJYXNzZXJ0
RXF1YWxzKCJXcm9uZyB0eXBlIiwgSUJpbmRpbmcuUEFDS0FHRSwgYmluZGluZy5nZXRLaW5kKCkp
Ow0KKwkJCXBhY2thZ2VCaW5kaW5nID0gKElQYWNrYWdlQmluZGluZykgYmluZGluZzsNCisJCQlh
c3NlcnRFcXVhbHMoIldyb25nIG5hbWUiLCAib25lLnR3byIsIHBhY2thZ2VCaW5kaW5nLmdldE5h
bWUoKSk7DQorCQl9IGZpbmFsbHkgew0KKwkJCWlmICh3b3JraW5nQ29weSAhPSBudWxsKSB7DQor
CQkJCXdvcmtpbmdDb3B5LmRpc2NhcmRXb3JraW5nQ29weSgpOw0KKwkJCX0NCisJCX0NCisJfQ0K
IH0NClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmlsZQ0K
</data>

          </attachment>
      

    </bug>

</bugzilla>