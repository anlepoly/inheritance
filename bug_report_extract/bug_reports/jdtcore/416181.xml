<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>416181</bug_id>
          
          <creation_ts>2013-08-29 15:09:00 -0400</creation_ts>
          <short_desc>[1.8][compiler][null] Inalid assignment is not rejected by the compiler</short_desc>
          <delta_ts>2013-08-31 07:38:33 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>392099</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2300884</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-08-29 15:09:43 -0400</bug_when>
    <thetext>// --- Expect two errors, but got one

import org.eclipse.jdt.annotation.NonNull;

public class X&lt;T&gt; {
	class Y {
		
	}
	
	X&lt;String&gt;.@NonNull Y y = null; // no error here, bad.
	
	@NonNull Y y2 = null; // error here. Good.
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2300885</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-08-29 15:10:10 -0400</bug_when>
    <thetext>Stephan, please follow up, TIA</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2301495</commentid>
    <comment_count>2</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-08-31 07:38:33 -0400</bug_when>
    <thetext>Root cause: annotations on PQTR were resolved too early: this.resolvedType needs to
be initialized so that Annotation.resolveType() can update the resolved type&apos;s tagBits.

Simply swapping statements fixed the issue with one side effect:
If an annotation is both syntactically illegal and unresolved, only the former
error is reported. See changes in GrammarCoverageTests308.test039().

I think this is a good change actually, LMK if you think differently.


Released via commit 4d1b2a602aa63e2d641e31567150dab25a5e04f3</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>