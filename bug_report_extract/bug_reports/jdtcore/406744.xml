<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>406744</bug_id>
          
          <creation_ts>2013-04-27 23:21:00 -0400</creation_ts>
          <short_desc>[1.8][compiler][codegen] LambdaConversionException seen when method reference targets a varargs method.</short_desc>
          <delta_ts>2014-02-02 22:16:29 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>400875</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>anchakrk</cc>
    
    <cc>jarthana</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="60417"
          type_id="1"
          status="?"
          setter="srikanth_sankaran"
          requestee="anchakrk"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2249472</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-04-27 23:21:44 -0400</bug_when>
    <thetext>BETA_JAVA8:

We generate bad code that triggers a LCE for this program:

// ---
interface I {
    void foo(Integer a1, Integer a2, String a3);
}

class Y {
    static void m(Number a1, Object... rest) { 
        System.out.println(a1);
        print(rest);
    }
    static void print (Object [] o) {
        for (int i = 0; i &lt; o.length; i++)
            System.out.println(o[i]);
    }
    
}

public class X {
    public static void main(String [] args) {
        I i = Y::m;
        i.foo(10, 20, &quot;10, 20&quot;);
    }
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2252497</commentid>
    <comment_count>1</comment_count>
      <attachid>230488</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-05-06 01:37:57 -0400</bug_when>
    <thetext>Created attachment 230488
Work in progress</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2286726</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-07-22 05:37:36 -0400</bug_when>
    <thetext>I&apos;ll take this one up freeing up Jay to look at APT changes. Stephan
if and when cycles become available, this is up for grabs.

This is an interesting fix to work on.

By default, I&apos;ll work on it after bringing the overload resolution project
to a good shape.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2313335</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-10-02 06:56:59 -0400</bug_when>
    <thetext>Andy, this is a very interesting bug to work on. Take a look at
SyntheticMethodBinding.java for various synthetics we already
create.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2346089</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-06 10:04:03 -0500</bug_when>
    <thetext>Anirban, please take it forward, there is an early version of patch
attached to this bug,</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2349413</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-14 09:02:36 -0500</bug_when>
    <thetext>Pleases see the disabled test NullTypeAnnotationTest._testBug424637_comment3() for another situation throwing the same exception. Enable after fixing.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2349553</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-14 11:44:13 -0500</bug_when>
    <thetext>*** Bug 425494 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2352849</commentid>
    <comment_count>7</comment_count>
      <attachid>239213</attachid>
    <who name="ANIRBAN CHAKRABORTY">anchakrk</who>
    <bug_when>2014-01-22 04:32:30 -0500</bug_when>
    <thetext>Created attachment 239213
First cut working patch

This first cut patch at least passes the example in the description, and some others.
The patch is yet to be completed by:
- considering other scenarios
- general hygiene
- testcases

Regards</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2354610</commentid>
    <comment_count>8</comment_count>
      <attachid>239322</attachid>
    <who name="ANIRBAN CHAKRABORTY">anchakrk</who>
    <bug_when>2014-01-26 03:35:30 -0500</bug_when>
    <thetext>Created attachment 239322
Code patch and testcase

Code patch and testcase.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2354625</commentid>
    <comment_count>9</comment_count>
      <attachid>239323</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-26 09:02:43 -0500</bug_when>
    <thetext>Created attachment 239323
Patch synchronized to HEAD

I released the junits in a disabled form here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=1438111baa39ba1a30117b19ff4ad6ece4a69fe1

I also deleted the already disabled junit since this has been duplicated
in your patch.

(to avoid merge conflicts as this is a busy file)

Patch under review attached.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2354636</commentid>
    <comment_count>10</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-26 11:49:15 -0500</bug_when>
    <thetext>Comments:

(We need a lot more tests: Please fix these issues add more tests and ask
for review again - I didn&apos;t yet review the code - simply did some black
box testing.)

(1) Copy + pasting code as is is dangerous: We generate bad code for:

interface I {
    void foo(int a1, Integer a2, String a3);
}

interface Y {
    static void m(float a1, Object... rest) { 
        System.out.println(a1);
        print(rest);
    }
    static void print (Object [] o) {
        for (int i = 0; i &lt; o.length; i++)
            System.out.println(o[i]);
    }
    
}

public interface X extends Y {
    public static void main(String [] args) {
        I i = Y::m;
        i.foo(10, 20, &quot;10, 20&quot;); 
    }
}


Exception in thread &quot;main&quot; java.lang.ClassFormatError: bootstrap_method_index 36 has bad constant type in class file X
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:760)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:455)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:367)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:360)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:495)

// ----

(2) The following program triggers an AIOOB:

interface I {
        String method(int a);
}
class C {
    static String foo(Integer... i) {
        return &quot;foo&quot;;
    }

    static String goo(Integer bi, Integer... i) {
        return &quot;bar&quot;;
    }

    public void foo() {
    	I i;

    	i = C::foo;
    	i.method(0);

    	i = C::goo;
    	i.method(0);
    }

}

public class X {
    public static void main(String argv[])   {
        new C().foo();
    }
}

java.lang.ArrayIndexOutOfBoundsException
	at org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.syntheticMethods(SourceTypeBinding.java:2400)
	at org.eclipse.jdt.internal.compiler.ClassFile.addSpecialMethods(ClassFile.java:880)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:574)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:639)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:369)

(3) The following triggers a LambdConversionException:

// --
interface I {
    void foo(Integer a1, Integer a2, String a3);
}

class Y {
    void m(Number a1, Object... rest) { 
        System.out.println(a1);
        print(rest);
    }
    static void print (Object [] o) {
        for (int i = 0; i &lt; o.length; i++)
            System.out.println(o[i]);
    }
    
}

public class X extends Y {
	
	static void print (Object [] o) {
		for (int i = 0; i &lt; o.length; i++)
			System.out.println(o[i]);
	}
	    
    public static void main(String [] args) {
    	new X().foo();
    }
    void foo() { 
    	I i = super::m;
        i.foo(10, 20, &quot;10, 20&quot;);
    }
}

Exception in thread &quot;main&quot; java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:328)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:296)
	at X.foo(X.java:28)
	at X.main(X.java:25)
Caused by: java.lang.invoke.LambdaConversionException: Incorrect number of parameters for static method invokeStatic X.access$0:(X,Number,Object[])void; 1 captured parameters, 3 functional interface method parameters, 3 implementation parameters
	at java.lang.invoke.AbstractValidatingLambdaMetafactory.validateMetafactoryArgs(AbstractValidatingLambdaMetafactory.java:188)
	at java.lang.invoke.LambdaMetafactory.metafactory(LambdaMetafactory.java:303)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:289)
	... 3 more

(4) We generate bad code for this program. As a result, the compiled program
prints:

10
10
20
10, 20

while with javac it prints: (correctly)

10
20
10, 20


// --
interface I {
    void foo(Integer a1, Integer a2, String a3);
}

class Y {
    
    static void print (Object [] o) {
        for (int i = 0; i &lt; o.length; i++)
            System.out.println(o[i]);
    }
    
}

public class X extends Y {
	private void m(Number a1, Object... rest) { 
        System.out.println(a1);
        print(rest);
    }
	static void print (Object [] o) {
		for (int i = 0; i &lt; o.length; i++)
			System.out.println(o[i]);
	}
	    
    public static void main(String [] args) {
    	new X().foo();
    }
    void foo() { 
    	I i = this::m;
        i.foo(10, 20, &quot;10, 20&quot;);
    }
}

(5) This program triggers a java.lang.BootstrapMethodError: call site initialization exception: Type mismatch for lambda argument 1: class [I is not convertible to class [Ljava.lang.Object;

interface I {
    void foo(int [] ia);
}

class Y {
    void m(Object... rest) { 
        print(rest);
    }
    static void print (Object [] o) {
        for (int i = 0; i &lt; o.length; i++)
            System.out.println(o[i]);
    }
    
}

public class X extends Y {
    public static void main(String [] args) {
    	new X().foo();
    }
    void foo() { 
    	I i = super::m;
        i.foo(new int [0]);
    }
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2354688</commentid>
    <comment_count>11</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-26 22:12:37 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #10)

&gt; (2) The following program triggers an AIOOB:

Please fix this first as this is inhibiting further testing</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2355195</commentid>
    <comment_count>12</comment_count>
      <attachid>239367</attachid>
    <who name="ANIRBAN CHAKRABORTY">anchakrk</who>
    <bug_when>2014-01-27 23:26:35 -0500</bug_when>
    <thetext>Created attachment 239367
Code and test patch

Code and test patch. Fixed all the reported issues. Added several other testcases. Ran RunOnlyJava8Tests. Will run all jdt core tests sometime during the day.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2355207</commentid>
    <comment_count>13</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-28 01:50:56 -0500</bug_when>
    <thetext>Please obsolete old patches as you post new ones.

I did some more black box testing and it appears we continue to generate
bad code for fairly straightforward cases. Here are some examples:

(1) We generate bad code for the following program: As a result the
class file fails verification step:

interface I {
	void foo(Integer i);
}
public class X {
	static void foo(int ... x) {
	}
	public static void main(String[] args) {
		I i = X::foo;
		i.foo(1);
	}
}

Exception in thread &quot;main&quot; java.lang.VerifyError: Bad local variable type

(2) Even without autoboxing involved, I get a verify error for:

interface I {
	void foo(int i);
}
public class X {
	static void foo(int ... x) {
	}
	public static void main(String[] args) {
		I i = X::foo;
		i.foo(1);
	}
}

(3) We generate bad code for the following program. It should print &quot;OK&quot;
instead throws 

Exception in thread &quot;main&quot; java.lang.RuntimeException
	at X.foo(X.java:13)
	at X.lambda$0(X.java:1)
	at X$$Lambda$1/1995265320.foo(Unknown Source)
	at X.goo(X.java:20)
	at X.main(X.java:16)

After these are fixed, I&apos;ll test some more. Thanks for looking into this
asap.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2355208</commentid>
    <comment_count>14</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-28 01:59:45 -0500</bug_when>
    <thetext>You may have an easier time, if the bridge&apos;s signature is derived from
the target method rather than from the interface method. That way auto
boxing/unboxing concerns may be delegated to the lambda meta factory.
(I haven&apos;t verified this would work - it should is my expectation)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2355213</commentid>
    <comment_count>15</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-28 02:24:52 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #13)

&gt; (3) We generate bad code for the following program. It should print &quot;OK&quot;
&gt; instead throws 

Sorry, forgot to attach test case: here it is

interface I {
	void foo(Integer i);
}
class Base {
	void foo(Object ...objects) {
		System.out.println(&quot;Ok&quot;);
	}
}
public class X extends Base {
	void foo(Object... objects) {
		throw new RuntimeException();
	}
	public static void main(String[] args) {
		new X().goo();
	}
	void goo() {
		I i = super::foo;
		i.foo(10);
	}
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2355280</commentid>
    <comment_count>16</comment_count>
      <attachid>239376</attachid>
    <who name="ANIRBAN CHAKRABORTY">anchakrk</who>
    <bug_when>2014-01-28 04:32:00 -0500</bug_when>
    <thetext>Created attachment 239376
patch

Hello,
Patch that fixes all the previously reported bugs, and adds them 9and many others) as testcases.
RunOnlyJava8Tests clean.
I&apos;ll do some more testing.
Regards
Anirban</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2355436</commentid>
    <comment_count>17</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-28 09:41:23 -0500</bug_when>
    <thetext>More problems in code generation:

(1) LambdaConversionException: Type mismatch in captured lambda parameter 0: expecting class X, found class Base

interface I {
	void foo(int x);
}

class Base {
	public void foo(int ...is) {
		System.out.println(&quot;foo&quot;);
	}
}
public class X extends Base {
  public static void main( String[] args ) {
	  I i = new X()::foo;
	  i.foo(10);
  }
}
 
Exception in thread &quot;main&quot; java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:328)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:296)
	at X.main(X.java:12)
Caused by: java.lang.invoke.LambdaConversionException: Type mismatch in captured lambda parameter 0: expecting class X, found class Base
	at java.lang.invoke.AbstractValidatingLambdaMetafactory.validateMetafactoryArgs(AbstractValidatingLambdaMetafactory.java:237)
	at java.lang.invoke.LambdaMetafactory.metafactory(LambdaMetafactory.java:303)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:289)
	... 2 more

(2) Type mismatch for lambda argument 1: int is not convertible to class [I

interface I {
	void foo(int x);
}

public class X {
	private void foo(int ...is) {
		System.out.println(&quot;foo&quot;);
	}

	public static void main(String[] args ) {
		new X().new Y().foo();
	}
	
  class Y extends X {
	  void foo() {
		  I i = new X()::foo;
		  i.foo(10);
	  }
  }
}

Exception in thread &quot;main&quot; java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:328)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:296)
	at X$Y.foo(X.java:16)
	at X.main(X.java:11)
Caused by: java.lang.invoke.LambdaConversionException: Type mismatch for lambda argument 1: int is not convertible to class [I
	at java.lang.invoke.AbstractValidatingLambdaMetafactory.validateMetafactoryArgs(AbstractValidatingLambdaMetafactory.java:248)
	at java.lang.invoke.LambdaMetafactory.metafactory(LambdaMetafactory.java:303)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:289)
	... 3 more

(3) The following program triggers a verify error:

Exception in thread &quot;main&quot; java.lang.VerifyError: Bad type on operand stack
Exception Details:
  Location:
    X.lambda$0(I)LX; @11: invokespecial
  Reason:
    Type uninitialized 0 (current frame, stack[1]) is not assignable to &apos;X&apos;

// --
import p.*;
interface I {
	X foo(int x);
}

public class X {

	class Y extends X {
	    Y(int ... x) {
		    System.out.println(&quot;Y::Y&quot;);
	    }
	}
	public static void main(String[] args ) {
		new X().goo();
	}
	
	void goo() {
		I i = Y::new;
		i.foo(10);
	}
}


(4) We generate bad code for the program below. It should print

X.foo
Y.foo

instead prints:

X.foo
X.foo


interface I {
	void foo(int t);
}

class Y {
	public static void foo(int ...is) {
		System.out.println(&quot;Y.foo&quot;);
	}
}
public class X {
	public static void foo(int ...is) {
		System.out.println(&quot;X.foo&quot;);
	}
	public static void main(String[] args) {
		I i = X::foo;
		i.foo(10);
		i = Y::foo;
		i.foo(20);
	}
}

(We should simply be checking for == of method bindings on the target side
not name, parameters and return type.)

(5) Another variant that triggers a runtime error:

interface I {
	void foo(int t, int [] ia);
}
public class X {
	public static void foo(Integer i, int ...is) {
		System.out.println(&quot;Y.foo&quot;);
	}
	public static void main(String[] args) {
		I i = X::foo;
		i.foo(10, null);
	}
}

Review Comments:

(1) Please fix the new compiler warnings introduced.
(2) Let us get rid of the entire bridge method reuse mechanism for now,
We will address this in a follow up patch. For now every reference
expression targetting a varargs method can have its own synthetic method.
(3) (2) would also mean we would be able to postpone the NOT_BOOTSTRAPPED
logic ? If so remove these portions also for now.
(4) What explains this code in syntheticMethods()
	if (bindings.length == 1 &amp;&amp; bindings[0] == null) {
		return null;
	}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2355714</commentid>
    <comment_count>18</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-28 19:16:00 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #17)
&gt; More problems in code generation:

Many cases already work so that it may make sense to release what we have for
EAR3 and then address the new crop of problems in a follow up patch.

So could you look into the clean ups required by these comments first and
post a patch ? Thanks
 
&gt; Review Comments:

...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2355972</commentid>
    <comment_count>19</comment_count>
      <attachid>239430</attachid>
    <who name="ANIRBAN CHAKRABORTY">anchakrk</who>
    <bug_when>2014-01-29 09:31:54 -0500</bug_when>
    <thetext>Created attachment 239430
patch

Hello,
This RunOnlyJava8Tests clean patch fixes all the issues reported upto comment#17.
I&apos;ll clean up code, remove optimizers etc and do some testing and submit another patch shortly.
Regards
Anirban</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2355973</commentid>
    <comment_count>20</comment_count>
    <who name="ANIRBAN CHAKRABORTY">anchakrk</who>
    <bug_when>2014-01-29 09:35:59 -0500</bug_when>
    <thetext>(In reply to ANIRBAN CHAKRABORTY from comment #19)

&gt; This RunOnlyJava8Tests clean patch fixes all the issues reported upto
&gt; comment#17.

Upto and including comment#17. Testcases added.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2356296</commentid>
    <comment_count>21</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-29 16:27:09 -0500</bug_when>
    <thetext>(In reply to ANIRBAN CHAKRABORTY from comment #20)
&gt; (In reply to ANIRBAN CHAKRABORTY from comment #19)
&gt; 
&gt; &gt; This RunOnlyJava8Tests clean patch fixes all the issues reported upto
&gt; &gt; comment#17.
&gt; 
&gt; Upto and including comment#17. Testcases added.

This ignores the request in comment#18 to simplify the existing patch
by removing all non-essentials so it would be easy to review and release
in time for EAR3 and goes the other direction by adding more 
non-essentials :-(

Comparing the newly introduced method

org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.isSubClassOf(SourceTypeBinding, SourceTypeBinding)

with the existing:

 org.eclipse.jdt.internal.compiler.lookup.TypeBinding.findSuperTypeOriginatingFrom(TypeBinding)

I suspect that there could be holes in the new implementation - didn&apos;t
actually verify.

// ----

This patch causes build failures:

Description	Resource	Path	Location	Type
The uninterned types TypeBinding and SourceTypeBinding should not be compared using ==/!= operators.	ReferenceExpression.java	/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast	line 207	Java Problem
The uninterned types SourceTypeBinding and SourceTypeBinding should not be compared using ==/!= operators.	ReferenceExpression.java	/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast	line 250	Java Problem

Since it obviously compiles for you, you must be using a stale and incorrect 
build environment. Please upgrade.

Now no need to back track, let us move forward by fixing the build errors,
and incorporate the clean ups requested in comment#17 bottom and start the
review once it is done. Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2356396</commentid>
    <comment_count>22</comment_count>
      <attachid>239463</attachid>
    <who name="ANIRBAN CHAKRABORTY">anchakrk</who>
    <bug_when>2014-01-30 02:23:08 -0500</bug_when>
    <thetext>Created attachment 239463
patch after removing optimizer

patch after removing optimizer</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2356427</commentid>
    <comment_count>23</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-30 04:05:54 -0500</bug_when>
    <thetext>(In reply to ANIRBAN CHAKRABORTY from comment #22)
&gt; Created attachment 239463 [details]
&gt; patch after removing optimizer
&gt; 
&gt; patch after removing optimizer

Thanks Anirban, I may not have time to wrap up the review in for EAR3,
but in any case assuming all is well, we will release this early next
week.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2356532</commentid>
    <comment_count>24</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-30 06:40:46 -0500</bug_when>
    <thetext>The following program triggers a verify error: 

// --
interface I {
	X foo(int x);
}
public class X&lt;T&gt; {
	class Y extends X {
	    Y(int ... x) {
		    System.out.println(&quot;Y::Y&quot;);
	    }
	}
	public static void main(String[] args ) {
		System.out.println(&quot;Hello&quot;);
		new X().goo();
	}
	void goo() {
		I i = Y::new;
		i.foo(10);
	}
}

Exception in thread &quot;main&quot; java.lang.VerifyError: Bad type on operand stack
Exception Details:
  Location:
    X.lambda$0(I)LX; @11: invokespecial
  Reason:
    Type uninitialized 0 (current frame, stack[1]) is not assignable to &apos;X&apos;

(2) Likewise this case:

interface I {
	X&lt;String&gt; foo(int x);
}
public class X&lt;T&gt; {  
	class Y extends X&lt;String&gt; {
	    Y(int ... x) {
		    System.out.println(&quot;Y::Y&quot;); 
	    }
	}
	public static void main(String[] args ) {
		System.out.println(&quot;Hello&quot;);
		new X&lt;String&gt;().goo();  
	}
	void goo() {
		I i = Y::new;
		i.foo(10); 
	}
}

(3) I also noticed some cases where the program produces no output while
it should. I don&apos;t know the exact sequence needed to reproduce this, clean
build vs incremental build seems to have an influence. 

These are all corner cases. I think we should wrap up the review since
many cases work well - I&apos;ll take up this task, but this cannot be squeeezed
in for EAR3.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2357636</commentid>
    <comment_count>25</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-02 10:27:41 -0500</bug_when>
    <thetext>Doing some white box testing along with code review, I can spot problem areas:
Continuing the numbering with issues still open from comment#24:

(3) The following program triggers an exception because 
in manageSyntheticAccessIfNecessary, varargs are not considered in the
if (this.isConstructorReference()) {} block.


Exception in thread &quot;main&quot; java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:328)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:296)
	at X$Y.goo(X.java:14)
	at X.main(X.java:10)
Caused by: java.lang.invoke.LambdaConversionException: Incorrect number of parameters for static method invokeStatic X$Y.lambda$0:(int[])X; 0 captured parameters, 0 functional interface method parameters, 1 implementation parameters
	at java.lang.invoke.AbstractValidatingLambdaMetafactory.validateMetafactoryArgs(AbstractValidatingLambdaMetafactory.java:188)
	at java.lang.invoke.LambdaMetafactory.metafactory(LambdaMetafactory.java:303)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:289)
	... 3 more


// --
interface I {
	X foo();
}
public class X {
	private X(int ... is) {
		System.out.println(&quot;X::X&quot;);
	}
	
	public static void main(String[] args) {
		new X().new Y().goo();
	}
	public class Y {
		public void goo() {
			I i = X::new; 
			i.foo();
		} 
	}
}

(4) The following program triggers an exception because 
in manageSyntheticAccessIfNecessary, varargs are not considered in the
if (this.binding.isProtected() &amp;&amp; (this.bits &amp; ASTNode.DepthMASK) != 0 &amp;&amp; codegenBinding.declaringClass.getPackage() != enclosingSourceType.getPackage()) {}

block:

Exception in thread &quot;main&quot; java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:328)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:296)
	at p2.B$Y.g(B.java:12)
	at p2.B.main(B.java:19)
Caused by: java.lang.invoke.LambdaConversionException: Type mismatch for lambda argument 0: int is not convertible to class [I
	at java.lang.invoke.AbstractValidatingLambdaMetafactory.validateMetafactoryArgs(AbstractValidatingLambdaMetafactory.java:248)
	at java.lang.invoke.LambdaMetafactory.metafactory(LambdaMetafactory.java:303)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:289)
	... 3 more

// --
package p2;
import p1.*;								
interface I {
	void foo(int x);
}
interface J {
	void foo(int x);
}
public class B extends A {
	class Y {
		void g() {
			I i = B::foo;
			i.foo(10);
			J j = new B()::goo;
			j.foo(10);
		}
	}
	public static void main(String[] args) {
		new B().new Y().g();
	}
}
// --
package p1;
import p2.*;
public class A {
	protected static void foo(int ... is) {
	    System.out.println(&quot;A&apos;s static foo&quot;);
	}
	protected void goo(int ... is) {
	    System.out.println(&quot;A&apos;s instance goo&quot;);
	}
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2357677</commentid>
    <comment_count>26</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-02 15:35:11 -0500</bug_when>
    <thetext>Continuing with code review and white box testing, I am finding more and
more issues. The patch looks overly complicated with quite a bit of reinvention
and not enough reuse.

Anirban, I&apos;ll take this one over, I have a 50 line implementation that passes all
the tests including the most recently reported one.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2357680</commentid>
    <comment_count>27</comment_count>
      <attachid>239563</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-02 15:47:46 -0500</bug_when>
    <thetext>Created attachment 239563
Proposed patch

This passes all the varargs tests. Running all JDT/Core tests now.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2357681</commentid>
    <comment_count>28</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-02 15:50:49 -0500</bug_when>
    <thetext>Anirban, please take a look. We delegate all the complexity to MessageSend
by synthesizing an implicit lambda.

This patch is &lt; 60 lines long all told and should be very simple to understand.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2357712</commentid>
    <comment_count>29</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-02 22:16:29 -0500</bug_when>
    <thetext>Fix and tests released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=0b6cbc7336ec44b9257b7aa04e8ba2a7e4c8be56

This is essentially the same as the &quot;Proposed patch&quot; with 3 differences:

    - Fixed a wrong check ReferenceExpression.manageSyntheticAccessIfNecessary
    - Added a test to establish that the above is necessary and sufficient.
    - Eliminated potential double reporting of errors/warnings during flow
      analysis. 

The approach exemplified by this patch could perhaps be used for all situations
that require synthetics, not just variable arity methods, but it will incur
a bit of runtime overhead ([implicit lambda -&gt; bridge -&gt; target] as opposed to
[bridge -&gt; target].</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>230488</attachid>
            <date>2013-05-06 01:37:00 -0400</date>
            <delta_ts>2014-02-02 15:47:46 -0500</delta_ts>
            <desc>Work in progress</desc>
            <filename>Bridge.patch</filename>
            <type>text/plain</type>
            <size>12977</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvQWxsb2NhdGlvbkV4cHJlc3Npb24uamF2YSBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9hc3QvQWxsb2NhdGlvbkV4cHJlc3Npb24uamF2YQppbmRleCBlOWQ4NWU5Li4wNTRiZGE4IDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXN0L0FsbG9jYXRpb25FeHByZXNzaW9uLmphdmEKKysrIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2FzdC9BbGxvY2F0aW9uRXhwcmVzc2lvbi5qYXZhCkBAIC0yNTYsNyArMjU2LDcgQEAKIAkJ
CS8vIGNvbnN0cnVjdG9yIHdpbGwgbm90IGJlIGR1bXBlZCBhcyBwcml2YXRlLCBubyBlbXVsYXRp
b24gcmVxdWlyZWQgdGh1cwogCQkJY29kZWdlbkJpbmRpbmcudGFnQml0cyB8PSBUYWdCaXRzLkNs
ZWFyUHJpdmF0ZU1vZGlmaWVyOwogCQl9IGVsc2UgewotCQkJdGhpcy5zeW50aGV0aWNBY2Nlc3Nv
ciA9ICgoU291cmNlVHlwZUJpbmRpbmcpIGRlY2xhcmluZ0NsYXNzKS5hZGRTeW50aGV0aWNNZXRo
b2QoY29kZWdlbkJpbmRpbmcsIGlzU3VwZXJBY2Nlc3MoKSk7CisJCQl0aGlzLnN5bnRoZXRpY0Fj
Y2Vzc29yID0gKChTb3VyY2VUeXBlQmluZGluZykgZGVjbGFyaW5nQ2xhc3MpLmFkZFN5bnRoZXRp
Y01ldGhvZChudWxsLCBjb2RlZ2VuQmluZGluZywgaXNTdXBlckFjY2VzcygpKTsKIAkJCWN1cnJl
bnRTY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5uZWVkVG9FbXVsYXRlTWV0aG9kQWNjZXNzKGNvZGVn
ZW5CaW5kaW5nLCB0aGlzKTsKIAkJfQogCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvRXhwbGlj
aXRDb25zdHJ1Y3RvckNhbGwuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvRXhwbGljaXRDb25zdHJ1Y3RvckNh
bGwuamF2YQppbmRleCBlNzA2ODM5Li4zZDliNzg4IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0V4
cGxpY2l0Q29uc3RydWN0b3JDYWxsLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9FeHBsaWNpdENvbnN0
cnVjdG9yQ2FsbC5qYXZhCkBAIC0yMzUsNyArMjM1LDcgQEAKIAkJCQkJLy8gY29uc3RydWN0b3Ig
d2lsbCBub3QgYmUgZHVtcGVkIGFzIHByaXZhdGUsIG5vIGVtdWxhdGlvbiByZXF1aXJlZCB0aHVz
CiAJCQkJCWNvZGVnZW5CaW5kaW5nLnRhZ0JpdHMgfD0gVGFnQml0cy5DbGVhclByaXZhdGVNb2Rp
ZmllcjsKIAkJCQl9IGVsc2UgewotCQkJCQl0aGlzLnN5bnRoZXRpY0FjY2Vzc29yID0gKChTb3Vy
Y2VUeXBlQmluZGluZykgZGVjbGFyaW5nQ2xhc3MpLmFkZFN5bnRoZXRpY01ldGhvZChjb2RlZ2Vu
QmluZGluZywgaXNTdXBlckFjY2VzcygpKTsKKwkJCQkJdGhpcy5zeW50aGV0aWNBY2Nlc3NvciA9
ICgoU291cmNlVHlwZUJpbmRpbmcpIGRlY2xhcmluZ0NsYXNzKS5hZGRTeW50aGV0aWNNZXRob2Qo
bnVsbCwgY29kZWdlbkJpbmRpbmcsIGlzU3VwZXJBY2Nlc3MoKSk7CiAJCQkJCWN1cnJlbnRTY29w
ZS5wcm9ibGVtUmVwb3J0ZXIoKS5uZWVkVG9FbXVsYXRlTWV0aG9kQWNjZXNzKGNvZGVnZW5CaW5k
aW5nLCB0aGlzKTsKIAkJCQl9CiAJCQl9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L01lc3NhZ2VT
ZW5kLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXN0L01lc3NhZ2VTZW5kLmphdmEKaW5kZXggNDJjZjk3OC4uN2Qy
NDZhOSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9NZXNzYWdlU2VuZC5qYXZhCisrKyBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9hc3QvTWVzc2FnZVNlbmQuamF2YQpAQCAtNDU2LDcgKzQ1Niw3IEBACiAKIAkJLy8gZGVwdGgg
aXMgc2V0IGZvciBib3RoIGltcGxpY2l0IGFuZCBleHBsaWNpdCBhY2Nlc3MgKHNlZSBNZXRob2RC
aW5kaW5nI2NhbkJlU2VlbkJ5KQogCQlpZiAoY3VycmVudFNjb3BlLmVuY2xvc2luZ1NvdXJjZVR5
cGUoKSAhPSBjb2RlZ2VuQmluZGluZy5kZWNsYXJpbmdDbGFzcyl7Ci0JCQl0aGlzLnN5bnRoZXRp
Y0FjY2Vzc29yID0gKChTb3VyY2VUeXBlQmluZGluZyljb2RlZ2VuQmluZGluZy5kZWNsYXJpbmdD
bGFzcykuYWRkU3ludGhldGljTWV0aG9kKGNvZGVnZW5CaW5kaW5nLCBmYWxzZSAvKiBub3Qgc3Vw
ZXIgYWNjZXNzIHRoZXJlICovKTsKKwkJCXRoaXMuc3ludGhldGljQWNjZXNzb3IgPSAoKFNvdXJj
ZVR5cGVCaW5kaW5nKWNvZGVnZW5CaW5kaW5nLmRlY2xhcmluZ0NsYXNzKS5hZGRTeW50aGV0aWNN
ZXRob2QobnVsbCwgY29kZWdlbkJpbmRpbmcsIGZhbHNlIC8qIG5vdCBzdXBlciBhY2Nlc3MgdGhl
cmUgKi8pOwogCQkJY3VycmVudFNjb3BlLnByb2JsZW1SZXBvcnRlcigpLm5lZWRUb0VtdWxhdGVN
ZXRob2RBY2Nlc3MoY29kZWdlbkJpbmRpbmcsIHRoaXMpOwogCQkJcmV0dXJuOwogCQl9CkBAIC00
NjYsNyArNDY2LDcgQEAKIAkJCXJldHVybjsgLy8gaW52b2tpbmcgYW4gb3ZlcnJpZGRlbiBkZWZh
dWx0IG1ldGhvZCwgd2hpY2ggaXMgYWNjZXNzaWJsZS9wdWJsaWMgYnkgZGVmaW5pdGlvbgogCQkv
LyBxdWFsaWZpZWQgc3VwZXIgbmVlZCBlbXVsYXRpb24gYWx3YXlzCiAJCVNvdXJjZVR5cGVCaW5k
aW5nIGRlc3RpbmF0aW9uVHlwZSA9IChTb3VyY2VUeXBlQmluZGluZykoKChRdWFsaWZpZWRTdXBl
clJlZmVyZW5jZSl0aGlzLnJlY2VpdmVyKS5jdXJyZW50Q29tcGF0aWJsZVR5cGUpOwotCQl0aGlz
LnN5bnRoZXRpY0FjY2Vzc29yID0gZGVzdGluYXRpb25UeXBlLmFkZFN5bnRoZXRpY01ldGhvZChj
b2RlZ2VuQmluZGluZywgaXNTdXBlckFjY2VzcygpKTsKKwkJdGhpcy5zeW50aGV0aWNBY2Nlc3Nv
ciA9IGRlc3RpbmF0aW9uVHlwZS5hZGRTeW50aGV0aWNNZXRob2QobnVsbCwgY29kZWdlbkJpbmRp
bmcsIGlzU3VwZXJBY2Nlc3MoKSk7CiAJCWN1cnJlbnRTY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5u
ZWVkVG9FbXVsYXRlTWV0aG9kQWNjZXNzKGNvZGVnZW5CaW5kaW5nLCB0aGlzKTsKIAkJcmV0dXJu
OwogCkBAIC00NzgsNyArNDc4LDcgQEAKIAkJCQkJIT0gKGVuY2xvc2luZ1NvdXJjZVR5cGUgPSBj
dXJyZW50U2NvcGUuZW5jbG9zaW5nU291cmNlVHlwZSgpKS5nZXRQYWNrYWdlKCkpewogCiAJCQlT
b3VyY2VUeXBlQmluZGluZyBjdXJyZW50Q29tcGF0aWJsZVR5cGUgPSAoU291cmNlVHlwZUJpbmRp
bmcpZW5jbG9zaW5nU291cmNlVHlwZS5lbmNsb3NpbmdUeXBlQXQoKHRoaXMuYml0cyAmIEFTVE5v
ZGUuRGVwdGhNQVNLKSA+PiBBU1ROb2RlLkRlcHRoU0hJRlQpOwotCQkJdGhpcy5zeW50aGV0aWNB
Y2Nlc3NvciA9IGN1cnJlbnRDb21wYXRpYmxlVHlwZS5hZGRTeW50aGV0aWNNZXRob2QoY29kZWdl
bkJpbmRpbmcsIGlzU3VwZXJBY2Nlc3MoKSk7CisJCQl0aGlzLnN5bnRoZXRpY0FjY2Vzc29yID0g
Y3VycmVudENvbXBhdGlibGVUeXBlLmFkZFN5bnRoZXRpY01ldGhvZChudWxsLCBjb2RlZ2VuQmlu
ZGluZywgaXNTdXBlckFjY2VzcygpKTsKIAkJCWN1cnJlbnRTY29wZS5wcm9ibGVtUmVwb3J0ZXIo
KS5uZWVkVG9FbXVsYXRlTWV0aG9kQWNjZXNzKGNvZGVnZW5CaW5kaW5nLCB0aGlzKTsKIAkJCXJl
dHVybjsKIAkJfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9SZWZlcmVuY2VFeHByZXNzaW9uLmph
dmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvYXN0L1JlZmVyZW5jZUV4cHJlc3Npb24uamF2YQppbmRleCA0YTRhMzE0Li5k
ZjJiZWJjIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1JlZmVyZW5jZUV4cHJlc3Npb24uamF2YQor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvYXN0L1JlZmVyZW5jZUV4cHJlc3Npb24uamF2YQpAQCAtMTYyLDcgKzE2Miw3
IEBACiAJCQkJaWYgKChhbGxvY2F0ZWRUeXBlLnRhZ0JpdHMgJiBUYWdCaXRzLklzTG9jYWxUeXBl
KSAhPSAwKSB7CiAJCQkJCWNvZGVnZW5CaW5kaW5nLnRhZ0JpdHMgfD0gVGFnQml0cy5DbGVhclBy
aXZhdGVNb2RpZmllcjsKIAkJCQl9IGVsc2UgewotCQkJCQl0aGlzLnN5bnRoZXRpY0FjY2Vzc29y
ID0gKChTb3VyY2VUeXBlQmluZGluZykgYWxsb2NhdGVkVHlwZSkuYWRkU3ludGhldGljTWV0aG9k
KGNvZGVnZW5CaW5kaW5nLCBmYWxzZSk7CisJCQkJCXRoaXMuc3ludGhldGljQWNjZXNzb3IgPSAo
KFNvdXJjZVR5cGVCaW5kaW5nKSBhbGxvY2F0ZWRUeXBlKS5hZGRTeW50aGV0aWNNZXRob2QodGhp
cy5kZXNjcmlwdG9yLCBjb2RlZ2VuQmluZGluZywgZmFsc2UpOwogCQkJCQljdXJyZW50U2NvcGUu
cHJvYmxlbVJlcG9ydGVyKCkubmVlZFRvRW11bGF0ZU1ldGhvZEFjY2Vzcyhjb2RlZ2VuQmluZGlu
ZywgdGhpcyk7CiAJCQkJfQogCQkJfQpAQCAtMTcyLDcgKzE3Miw3IEBACiAJCS8vIC0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICAgT25seSBtZXRob2QgcmVmZXJlbmNlcyBmcm9t
IG5vdyBvbiAtLS0tLS0tLS0tLQogCQlpZiAodGhpcy5iaW5kaW5nLmlzUHJpdmF0ZSgpKSB7CiAJ
CQlpZiAoZW5jbG9zaW5nU291cmNlVHlwZSAhPSBjb2RlZ2VuQmluZGluZy5kZWNsYXJpbmdDbGFz
cyl7Ci0JCQkJdGhpcy5zeW50aGV0aWNBY2Nlc3NvciA9ICgoU291cmNlVHlwZUJpbmRpbmcpY29k
ZWdlbkJpbmRpbmcuZGVjbGFyaW5nQ2xhc3MpLmFkZFN5bnRoZXRpY01ldGhvZChjb2RlZ2VuQmlu
ZGluZywgZmFsc2UgLyogbm90IHN1cGVyIGFjY2VzcyAqLyk7CisJCQkJdGhpcy5zeW50aGV0aWNB
Y2Nlc3NvciA9ICgoU291cmNlVHlwZUJpbmRpbmcpY29kZWdlbkJpbmRpbmcuZGVjbGFyaW5nQ2xh
c3MpLmFkZFN5bnRoZXRpY01ldGhvZCh0aGlzLmRlc2NyaXB0b3IsIGNvZGVnZW5CaW5kaW5nLCBm
YWxzZSAvKiBub3Qgc3VwZXIgYWNjZXNzICovKTsKIAkJCQljdXJyZW50U2NvcGUucHJvYmxlbVJl
cG9ydGVyKCkubmVlZFRvRW11bGF0ZU1ldGhvZEFjY2Vzcyhjb2RlZ2VuQmluZGluZywgdGhpcyk7
CiAJCQl9CiAJCQlyZXR1cm47CkBAIC0xODcsMTQgKzE4NywxNCBAQAogCQkJCQlkZXN0aW5hdGlv
blR5cGUgPSAoU291cmNlVHlwZUJpbmRpbmcpIChxdWFsaWZpZWRTdXBlclJlZmVyZW5jZS5jdXJy
ZW50Q29tcGF0aWJsZVR5cGUpOwogCQkJfQogCQkJCi0JCQl0aGlzLnN5bnRoZXRpY0FjY2Vzc29y
ID0gZGVzdGluYXRpb25UeXBlLmFkZFN5bnRoZXRpY01ldGhvZChjb2RlZ2VuQmluZGluZywgdHJ1
ZSk7CisJCQl0aGlzLnN5bnRoZXRpY0FjY2Vzc29yID0gZGVzdGluYXRpb25UeXBlLmFkZFN5bnRo
ZXRpY01ldGhvZCh0aGlzLmRlc2NyaXB0b3IsIGNvZGVnZW5CaW5kaW5nLCB0cnVlKTsKIAkJCWN1
cnJlbnRTY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5uZWVkVG9FbXVsYXRlTWV0aG9kQWNjZXNzKGNv
ZGVnZW5CaW5kaW5nLCB0aGlzKTsKIAkJCXJldHVybjsKIAkJfQogCQkKIAkJaWYgKHRoaXMuYmlu
ZGluZy5pc1Byb3RlY3RlZCgpICYmICh0aGlzLmJpdHMgJiBBU1ROb2RlLkRlcHRoTUFTSykgIT0g
MCAmJiBjb2RlZ2VuQmluZGluZy5kZWNsYXJpbmdDbGFzcy5nZXRQYWNrYWdlKCkgIT0gZW5jbG9z
aW5nU291cmNlVHlwZS5nZXRQYWNrYWdlKCkpIHsKIAkJCVNvdXJjZVR5cGVCaW5kaW5nIGN1cnJl
bnRDb21wYXRpYmxlVHlwZSA9IChTb3VyY2VUeXBlQmluZGluZykgZW5jbG9zaW5nU291cmNlVHlw
ZS5lbmNsb3NpbmdUeXBlQXQoKHRoaXMuYml0cyAmIEFTVE5vZGUuRGVwdGhNQVNLKSA+PiBBU1RO
b2RlLkRlcHRoU0hJRlQpOwotCQkJdGhpcy5zeW50aGV0aWNBY2Nlc3NvciA9IGN1cnJlbnRDb21w
YXRpYmxlVHlwZS5hZGRTeW50aGV0aWNNZXRob2QoY29kZWdlbkJpbmRpbmcsIGlzU3VwZXJBY2Nl
c3MoKSk7CisJCQl0aGlzLnN5bnRoZXRpY0FjY2Vzc29yID0gY3VycmVudENvbXBhdGlibGVUeXBl
LmFkZFN5bnRoZXRpY01ldGhvZCh0aGlzLmRlc2NyaXB0b3IsIGNvZGVnZW5CaW5kaW5nLCBpc1N1
cGVyQWNjZXNzKCkpOwogCQkJY3VycmVudFNjb3BlLnByb2JsZW1SZXBvcnRlcigpLm5lZWRUb0Vt
dWxhdGVNZXRob2RBY2Nlc3MoY29kZWdlbkJpbmRpbmcsIHRoaXMpOwogCQkJcmV0dXJuOwogCQl9
CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1NvdXJjZVR5cGVCaW5kaW5nLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvbG9va3VwL1NvdXJjZVR5cGVCaW5kaW5nLmphdmEKaW5kZXggMTBjYTBiYS4uNzUxOWI4ZSAx
MDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Tb3VyY2VUeXBlQmluZGluZy5qYXZhCisrKyBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9sb29rdXAvU291cmNlVHlwZUJpbmRpbmcuamF2YQpAQCAtNTQxLDIxICs1NDEsNDMgQEAK
ICAqIE11c3QgZGlzdGluZ3Vpc2ggYWNjZXNzIG1ldGhvZCB1c2VkIGZvciBzdXBlciBhY2Nlc3Mg
ZnJvbSBvdGhlcnMgKG5lZWQgdG8gdXNlIGludm9rZXNwZWNpYWwgYnl0ZWNvZGUpCiAJQW5zd2Vy
IHRoZSBuZXcgbWV0aG9kIG9yIHRoZSBleGlzdGluZyBtZXRob2QgaWYgb25lIGFscmVhZHkgZXhp
c3RlZC4KICovCi1wdWJsaWMgU3ludGhldGljTWV0aG9kQmluZGluZyBhZGRTeW50aGV0aWNNZXRo
b2QoTWV0aG9kQmluZGluZyB0YXJnZXRNZXRob2QsIGJvb2xlYW4gaXNTdXBlckFjY2Vzcykgewor
cHVibGljIFN5bnRoZXRpY01ldGhvZEJpbmRpbmcgYWRkU3ludGhldGljTWV0aG9kKE1ldGhvZEJp
bmRpbmcgc291cmNlTWV0aG9kLCBNZXRob2RCaW5kaW5nIHRhcmdldE1ldGhvZCwgYm9vbGVhbiBp
c1N1cGVyQWNjZXNzKSB7CiAJaWYgKHRoaXMuc3ludGhldGljcyA9PSBudWxsKQogCQl0aGlzLnN5
bnRoZXRpY3MgPSBuZXcgSGFzaE1hcFtNQVhfU1lOVEhFVElDU107CiAJaWYgKHRoaXMuc3ludGhl
dGljc1tTb3VyY2VUeXBlQmluZGluZy5NRVRIT0RfRU1VTF0gPT0gbnVsbCkKIAkJdGhpcy5zeW50
aGV0aWNzW1NvdXJjZVR5cGVCaW5kaW5nLk1FVEhPRF9FTVVMXSA9IG5ldyBIYXNoTWFwKDUpOwog
CisJY2xhc3MgQnJpZGdlIHsKKwkJTWV0aG9kQmluZGluZyBmcm9tOworCQlNZXRob2RCaW5kaW5n
IHRvOworCQlCcmlkZ2UoTWV0aG9kQmluZGluZyBmcm9tLCBNZXRob2RCaW5kaW5nIHRvKSB7CisJ
CQl0aGlzLmZyb20gPSBmcm9tOworCQkJdGhpcy50byA9IHRvOworCQl9CisJCXB1YmxpYyBpbnQg
aGFzaENvZGUoKSB7CisJCQlyZXR1cm4gb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUudXRp
bC5VdGlsLmNvbWJpbmVIYXNoQ29kZXModGhpcy5mcm9tID09IG51bGwgPyAwIDogdGhpcy5mcm9t
Lmhhc2hDb2RlKCksIHRoaXMudG8uaGFzaENvZGUoKSk7CisJCX0KKwkJcHVibGljIGJvb2xlYW4g
ZXF1YWxzKE9iamVjdCBvYmplY3QpIHsKKwkJCWlmIChvYmplY3QgPT0gdGhpcykgcmV0dXJuIHRy
dWU7CisJCQlpZiAob2JqZWN0IGluc3RhbmNlb2YgQnJpZGdlKSB7CisJCQkJQnJpZGdlIGIgPSAo
QnJpZGdlKSBvYmplY3Q7CisJCQkJcmV0dXJuIHRoaXMuZnJvbSA9PSBiLmZyb20gJiYgdGhpcy50
byA9PSBiLnRvOworCQkJfQorCQkJcmV0dXJuIGZhbHNlOworCQl9CisJfQorCQorCUJyaWRnZSBr
ZXkgPSBuZXcgQnJpZGdlKHNvdXJjZU1ldGhvZCwgdGFyZ2V0TWV0aG9kKTsKKwkKIAlTeW50aGV0
aWNNZXRob2RCaW5kaW5nIGFjY2Vzc01ldGhvZCA9IG51bGw7Ci0JU3ludGhldGljTWV0aG9kQmlu
ZGluZ1tdIGFjY2Vzc29ycyA9IChTeW50aGV0aWNNZXRob2RCaW5kaW5nW10pIHRoaXMuc3ludGhl
dGljc1tTb3VyY2VUeXBlQmluZGluZy5NRVRIT0RfRU1VTF0uZ2V0KHRhcmdldE1ldGhvZCk7CisJ
U3ludGhldGljTWV0aG9kQmluZGluZ1tdIGFjY2Vzc29ycyA9IChTeW50aGV0aWNNZXRob2RCaW5k
aW5nW10pIHRoaXMuc3ludGhldGljc1tTb3VyY2VUeXBlQmluZGluZy5NRVRIT0RfRU1VTF0uZ2V0
KGtleSk7CiAJaWYgKGFjY2Vzc29ycyA9PSBudWxsKSB7Ci0JCWFjY2Vzc01ldGhvZCA9IG5ldyBT
eW50aGV0aWNNZXRob2RCaW5kaW5nKHRhcmdldE1ldGhvZCwgaXNTdXBlckFjY2VzcywgdGhpcyk7
Ci0JCXRoaXMuc3ludGhldGljc1tTb3VyY2VUeXBlQmluZGluZy5NRVRIT0RfRU1VTF0ucHV0KHRh
cmdldE1ldGhvZCwgYWNjZXNzb3JzID0gbmV3IFN5bnRoZXRpY01ldGhvZEJpbmRpbmdbMl0pOwor
CQlhY2Nlc3NNZXRob2QgPSBuZXcgU3ludGhldGljTWV0aG9kQmluZGluZyhzb3VyY2VNZXRob2Qs
IHRhcmdldE1ldGhvZCwgaXNTdXBlckFjY2VzcywgdGhpcyk7CisJCXRoaXMuc3ludGhldGljc1tT
b3VyY2VUeXBlQmluZGluZy5NRVRIT0RfRU1VTF0ucHV0KGtleSwgYWNjZXNzb3JzID0gbmV3IFN5
bnRoZXRpY01ldGhvZEJpbmRpbmdbMl0pOwogCQlhY2Nlc3NvcnNbaXNTdXBlckFjY2VzcyA/IDAg
OiAxXSA9IGFjY2Vzc01ldGhvZDsKIAl9IGVsc2UgewogCQlpZiAoKGFjY2Vzc01ldGhvZCA9IGFj
Y2Vzc29yc1tpc1N1cGVyQWNjZXNzID8gMCA6IDFdKSA9PSBudWxsKSB7Ci0JCQlhY2Nlc3NNZXRo
b2QgPSBuZXcgU3ludGhldGljTWV0aG9kQmluZGluZyh0YXJnZXRNZXRob2QsIGlzU3VwZXJBY2Nl
c3MsIHRoaXMpOworCQkJYWNjZXNzTWV0aG9kID0gbmV3IFN5bnRoZXRpY01ldGhvZEJpbmRpbmco
c291cmNlTWV0aG9kLCB0YXJnZXRNZXRob2QsIGlzU3VwZXJBY2Nlc3MsIHRoaXMpOwogCQkJYWNj
ZXNzb3JzW2lzU3VwZXJBY2Nlc3MgPyAwIDogMV0gPSBhY2Nlc3NNZXRob2Q7CiAJCX0KIAl9CmRp
ZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1N5bnRoZXRpY01ldGhvZEJpbmRpbmcuamF2YSBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9sb29rdXAvU3ludGhldGljTWV0aG9kQmluZGluZy5qYXZhCmluZGV4IDE0ZjFhODguLmFl
MzljZTggMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvU3ludGhldGljTWV0aG9kQmluZGluZy5q
YXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9sb29rdXAvU3ludGhldGljTWV0aG9kQmluZGluZy5qYXZhCkBAIC0y
Niw2ICsyNiw3IEBACiAKIAlwdWJsaWMgRmllbGRCaW5kaW5nIHRhcmdldFJlYWRGaWVsZDsJCS8v
IHJlYWQgYWNjZXNzIHRvIGEgZmllbGQKIAlwdWJsaWMgRmllbGRCaW5kaW5nIHRhcmdldFdyaXRl
RmllbGQ7CQkvLyB3cml0ZSBhY2Nlc3MgdG8gYSBmaWVsZAorCXB1YmxpYyBNZXRob2RCaW5kaW5n
IHNvdXJjZU1ldGhvZDsgICAgICAgICAgLy8gb3JpZ2luIGZvciB0aGUgYnJpZGdlLCBudWxsIGV4
Y2VwdCBmb3IgbWV0aG9kL2NvbnN0cnVjdG9yIHJlZmVyZW5jZSBleHByZXNzaW9ucyBicmlkZ2lu
Zy4KIAlwdWJsaWMgTWV0aG9kQmluZGluZyB0YXJnZXRNZXRob2Q7CQkJLy8gbWV0aG9kIG9yIGNv
bnN0cnVjdG9yCiAJcHVibGljIFR5cGVCaW5kaW5nIHRhcmdldEVudW1UeXBlOyAJCQkvLyBlbnVt
IHR5cGUKIAlwdWJsaWMgTGFtYmRhRXhwcmVzc2lvbiBsYW1iZGE7CkBAIC0yMjYsMTIgKzIyNywx
MiBAQAogCQl0aGlzLnNvdXJjZVN0YXJ0ID0gZGVjbGFyaW5nU291cmNlVHlwZS5zY29wZS5yZWZl
cmVuY2VDb250ZXh0LnNvdXJjZVN0YXJ0OyAvLyB1c2UgdGhlIHRhcmdldCBkZWNsYXJpbmcgY2xh
c3MgbmFtZSBwb3NpdGlvbiBpbnN0ZWFkCiAJfQogCi0JcHVibGljIFN5bnRoZXRpY01ldGhvZEJp
bmRpbmcoTWV0aG9kQmluZGluZyB0YXJnZXRNZXRob2QsIGJvb2xlYW4gaXNTdXBlckFjY2Vzcywg
UmVmZXJlbmNlQmluZGluZyBkZWNsYXJpbmdDbGFzcykgeworCXB1YmxpYyBTeW50aGV0aWNNZXRo
b2RCaW5kaW5nKE1ldGhvZEJpbmRpbmcgc291cmNlTWV0aG9kLCBNZXRob2RCaW5kaW5nIHRhcmdl
dE1ldGhvZCwgYm9vbGVhbiBpc1N1cGVyQWNjZXNzLCBSZWZlcmVuY2VCaW5kaW5nIGRlY2xhcmlu
Z0NsYXNzKSB7CiAKIAkJaWYgKHRhcmdldE1ldGhvZC5pc0NvbnN0cnVjdG9yKCkpIHsKLQkJCWlu
aXRpYWxpemVDb25zdHJ1Y3RvckFjY2Vzc29yKHRhcmdldE1ldGhvZCk7CisJCQlpbml0aWFsaXpl
Q29uc3RydWN0b3JBY2Nlc3Nvcihzb3VyY2VNZXRob2QsIHRhcmdldE1ldGhvZCk7CiAJCX0gZWxz
ZSB7Ci0JCQlpbml0aWFsaXplTWV0aG9kQWNjZXNzb3IodGFyZ2V0TWV0aG9kLCBpc1N1cGVyQWNj
ZXNzLCBkZWNsYXJpbmdDbGFzcyk7CisJCQlpbml0aWFsaXplTWV0aG9kQWNjZXNzb3Ioc291cmNl
TWV0aG9kLCB0YXJnZXRNZXRob2QsIGlzU3VwZXJBY2Nlc3MsIGRlY2xhcmluZ0NsYXNzKTsKIAkJ
fQogCX0KIApAQCAtMzgxLDggKzM4Miw5IEBACiAJICogQW4gY29uc3RydWN0b3IgYWNjZXNzb3Ig
aXMgYSBjb25zdHJ1Y3RvciB3aXRoIGFuIGV4dHJhIGFyZ3VtZW50IChkZWNsYXJpbmdDbGFzcyks
IGluIGNhc2Ugb2YKIAkgKiBjb2xsaXNpb24gd2l0aCBhbiBleGlzdGluZyBjb25zdHJ1Y3Rvciwg
dGhlbiBhZGQgYWdhaW4gYW4gZXh0cmEgYXJndW1lbnQgKGRlY2xhcmluZ0NsYXNzIGFnYWluKS4K
IAkgKi8KLQkgcHVibGljIHZvaWQgaW5pdGlhbGl6ZUNvbnN0cnVjdG9yQWNjZXNzb3IoTWV0aG9k
QmluZGluZyBhY2Nlc3NlZENvbnN0cnVjdG9yKSB7CisJIHB1YmxpYyB2b2lkIGluaXRpYWxpemVD
b25zdHJ1Y3RvckFjY2Vzc29yKE1ldGhvZEJpbmRpbmcgc3JjTWV0aG9kLCBNZXRob2RCaW5kaW5n
IGFjY2Vzc2VkQ29uc3RydWN0b3IpIHsKIAorCQl0aGlzLnNvdXJjZU1ldGhvZCA9IHNyY01ldGhv
ZDsgCiAJCXRoaXMudGFyZ2V0TWV0aG9kID0gYWNjZXNzZWRDb25zdHJ1Y3RvcjsKIAkJdGhpcy5t
b2RpZmllcnMgPSBDbGFzc0ZpbGVDb25zdGFudHMuQWNjRGVmYXVsdCB8IENsYXNzRmlsZUNvbnN0
YW50cy5BY2NTeW50aGV0aWM7CiAJCXRoaXMudGFnQml0cyB8PSAoVGFnQml0cy5Bbm5vdGF0aW9u
UmVzb2x2ZWQgfCBUYWdCaXRzLkRlcHJlY2F0ZWRBbm5vdGF0aW9uUmVzb2x2ZWQpOwpAQCAtMzkz
LDcgKzM5NSw3IEBACiAJCXRoaXMuc2VsZWN0b3IgPSBhY2Nlc3NlZENvbnN0cnVjdG9yLnNlbGVj
dG9yOwogCQl0aGlzLnJldHVyblR5cGUgPSBhY2Nlc3NlZENvbnN0cnVjdG9yLnJldHVyblR5cGU7
CiAJCXRoaXMucHVycG9zZSA9IFN5bnRoZXRpY01ldGhvZEJpbmRpbmcuQ29uc3RydWN0b3JBY2Nl
c3M7Ci0JCWZpbmFsIGludCBwYXJhbWV0ZXJzTGVuZ3RoID0gYWNjZXNzZWRDb25zdHJ1Y3Rvci5w
YXJhbWV0ZXJzLmxlbmd0aDsKKwkJZmluYWwgaW50IHBhcmFtZXRlcnNMZW5ndGggPSBzcmNNZXRo
b2QgPT0gbnVsbCA/IGFjY2Vzc2VkQ29uc3RydWN0b3IucGFyYW1ldGVycy5sZW5ndGggOiBzcmNN
ZXRob2QucGFyYW1ldGVycy5sZW5ndGg7CiAJCXRoaXMucGFyYW1ldGVycyA9IG5ldyBUeXBlQmlu
ZGluZ1twYXJhbWV0ZXJzTGVuZ3RoICsgMV07CiAJCVN5c3RlbS5hcnJheWNvcHkoCiAJCQlhY2Nl
c3NlZENvbnN0cnVjdG9yLnBhcmFtZXRlcnMsCkBAIC00NTksOCArNDYxLDkgQEAKIAkvKioKIAkg
KiBBbiBtZXRob2QgYWNjZXNzb3IgaXMgYSBtZXRob2Qgd2l0aCBhbiBhY2Nlc3MkTiBzZWxlY3Rv
ciwgd2hlcmUgTiBpcyBpbmNyZW1lbnRlZCBpbiBjYXNlIG9mIGNvbGxpc2lvbnMuCiAJICovCi0J
cHVibGljIHZvaWQgaW5pdGlhbGl6ZU1ldGhvZEFjY2Vzc29yKE1ldGhvZEJpbmRpbmcgYWNjZXNz
ZWRNZXRob2QsIGJvb2xlYW4gaXNTdXBlckFjY2VzcywgUmVmZXJlbmNlQmluZGluZyByZWNlaXZl
clR5cGUpIHsKKwlwdWJsaWMgdm9pZCBpbml0aWFsaXplTWV0aG9kQWNjZXNzb3IoTWV0aG9kQmlu
ZGluZyBzcmNNZXRob2QsIE1ldGhvZEJpbmRpbmcgYWNjZXNzZWRNZXRob2QsIGJvb2xlYW4gaXNT
dXBlckFjY2VzcywgUmVmZXJlbmNlQmluZGluZyByZWNlaXZlclR5cGUpIHsKIAorCQl0aGlzLnNv
dXJjZU1ldGhvZCA9IHNyY01ldGhvZDsKIAkJdGhpcy50YXJnZXRNZXRob2QgPSBhY2Nlc3NlZE1l
dGhvZDsKIAkJdGhpcy5tb2RpZmllcnMgPSBDbGFzc0ZpbGVDb25zdGFudHMuQWNjRGVmYXVsdCB8
IENsYXNzRmlsZUNvbnN0YW50cy5BY2NTdGF0aWMgfCBDbGFzc0ZpbGVDb25zdGFudHMuQWNjU3lu
dGhldGljOwogCQl0aGlzLnRhZ0JpdHMgfD0gKFRhZ0JpdHMuQW5ub3RhdGlvblJlc29sdmVkIHwg
VGFnQml0cy5EZXByZWNhdGVkQW5ub3RhdGlvblJlc29sdmVkKTs=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>239213</attachid>
            <date>2014-01-22 04:32:00 -0500</date>
            <delta_ts>2014-01-26 03:35:30 -0500</delta_ts>
            <desc>First cut working patch</desc>
            <filename>Bug-406744-new-WIP.patch</filename>
            <type>text/plain</type>
            <size>23094</size>
            <attacher name="ANIRBAN CHAKRABORTY">anchakrk</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9DbGFzc0ZpbGUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9DbGFzc0ZpbGUuamF2
YQppbmRleCBiOTBlZWJiLi5kNDNmYWQ4IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvQ2xhc3NGaWxlLmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL0NsYXNzRmlsZS5qYXZhCkBAIC04OTksMTAgKzg5OSwxMyBAQAogCQkJ
CQkJY2FzZSBTeW50aGV0aWNNZXRob2RCaW5kaW5nLlN1cGVyTWV0aG9kQWNjZXNzIDoKIAkJCQkJ
CWNhc2UgU3ludGhldGljTWV0aG9kQmluZGluZy5CcmlkZ2VNZXRob2QgOgogCQkJCQkJCS8vIGdl
bmVyYXRlIGEgbWV0aG9kIGluZm8gdG8gZW11bGF0ZSBhbiBhY2Nlc3MgdG8gYSBub24tYWNjZXNz
aWJsZSBtZXRob2QgLyBzdXBlci1tZXRob2Qgb3IgYnJpZGdlIG1ldGhvZAogCQkJCQkJCWFkZFN5
bnRoZXRpY01ldGhvZEFjY2Vzc01ldGhvZChzeW50aGV0aWNNZXRob2QpOwogCQkJCQkJCWJyZWFr
OworCQkJCQkJY2FzZSBTeW50aGV0aWNNZXRob2RCaW5kaW5nLkNoYW5uZWxpc2VQYXJhbXNUb1Zh
ckFyZ3MgOgorCQkJCQkJCWFkZFN5bnRoZXRpY01ldGhvZEFjY2Vzc01ldGhvZEZvclZhckFyZ3Mo
c3ludGhldGljTWV0aG9kKTsKKwkJCQkJCQlicmVhazsKIAkJCQkJCWNhc2UgU3ludGhldGljTWV0
aG9kQmluZGluZy5Db25zdHJ1Y3RvckFjY2VzcyA6CiAJCQkJCQkJLy8gZ2VuZXJhdGUgYSBtZXRo
b2QgaW5mbyB0byBlbXVsYXRlIGFuIGFjY2VzcyB0byBhIG5vbi1hY2Nlc3NpYmxlIGNvbnN0cnVj
dG9yCiAJCQkJCQkJYWRkU3ludGhldGljQ29uc3RydWN0b3JBY2Nlc3NNZXRob2Qoc3ludGhldGlj
TWV0aG9kKTsKIAkJCQkJCQlicmVhazsKIAkJCQkJCWNhc2UgU3ludGhldGljTWV0aG9kQmluZGlu
Zy5FbnVtVmFsdWVzIDoKQEAgLTEyMDYsMTAgKzEyMDksMzQgQEAKIAkJaW50IGNvZGVBdHRyaWJ1
dGVPZmZzZXQgPSB0aGlzLmNvbnRlbnRzT2Zmc2V0OwogCQlhdHRyaWJ1dGVOdW1iZXIrKzsgLy8g
YWRkIGNvZGUgYXR0cmlidXRlCiAJCWdlbmVyYXRlQ29kZUF0dHJpYnV0ZUhlYWRlcigpOwogCQl0
aGlzLmNvZGVTdHJlYW0uaW5pdCh0aGlzKTsKIAkJdGhpcy5jb2RlU3RyZWFtLmdlbmVyYXRlU3lu
dGhldGljQm9keUZvck1ldGhvZEFjY2VzcyhtZXRob2RCaW5kaW5nKTsKKwkJY29tcGxldGVDb2Rl
QXR0cmlidXRlRm9yU3ludGhldGljTWV0aG9kKAorCQkJbWV0aG9kQmluZGluZywKKwkJCWNvZGVB
dHRyaWJ1dGVPZmZzZXQsCisJCQkoKFNvdXJjZVR5cGVCaW5kaW5nKSBtZXRob2RCaW5kaW5nLmRl
Y2xhcmluZ0NsYXNzKQorCQkJCS5zY29wZQorCQkJCS5yZWZlcmVuY2VDb21waWxhdGlvblVuaXQo
KQorCQkJCS5jb21waWxhdGlvblJlc3VsdAorCQkJCS5nZXRMaW5lU2VwYXJhdG9yUG9zaXRpb25z
KCkpOworCQkvLyB1cGRhdGUgdGhlIG51bWJlciBvZiBhdHRyaWJ1dGVzCisJCXRoaXMuY29udGVu
dHNbbWV0aG9kQXR0cmlidXRlT2Zmc2V0KytdID0gKGJ5dGUpIChhdHRyaWJ1dGVOdW1iZXIgPj4g
OCk7CisJCXRoaXMuY29udGVudHNbbWV0aG9kQXR0cmlidXRlT2Zmc2V0XSA9IChieXRlKSBhdHRy
aWJ1dGVOdW1iZXI7CisJfQorCisJcHVibGljIHZvaWQgYWRkU3ludGhldGljTWV0aG9kQWNjZXNz
TWV0aG9kRm9yVmFyQXJncyhTeW50aGV0aWNNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcpIHsK
KwkJZ2VuZXJhdGVNZXRob2RJbmZvSGVhZGVyKG1ldGhvZEJpbmRpbmcpOworCQlpbnQgbWV0aG9k
QXR0cmlidXRlT2Zmc2V0ID0gdGhpcy5jb250ZW50c09mZnNldDsKKwkJLy8gdGhpcyB3aWxsIGFk
ZCBleGNlcHRpb24gYXR0cmlidXRlLCBzeW50aGV0aWMgYXR0cmlidXRlLCBkZXByZWNhdGVkIGF0
dHJpYnV0ZSwuLi4KKwkJaW50IGF0dHJpYnV0ZU51bWJlciA9IGdlbmVyYXRlTWV0aG9kSW5mb0F0
dHJpYnV0ZXMobWV0aG9kQmluZGluZyk7CisJCS8vIENvZGUgYXR0cmlidXRlCisJCWludCBjb2Rl
QXR0cmlidXRlT2Zmc2V0ID0gdGhpcy5jb250ZW50c09mZnNldDsKKwkJYXR0cmlidXRlTnVtYmVy
Kys7IC8vIGFkZCBjb2RlIGF0dHJpYnV0ZQorCQlnZW5lcmF0ZUNvZGVBdHRyaWJ1dGVIZWFkZXIo
KTsKKwkJdGhpcy5jb2RlU3RyZWFtLmluaXQodGhpcyk7CisJCXRoaXMuY29kZVN0cmVhbS5nZW5l
cmF0ZVN5bnRoZXRpY0JvZHlGb3JNZXRob2RBY2Nlc3NGb3JWYXJBcmdzKG1ldGhvZEJpbmRpbmcp
OwogCQljb21wbGV0ZUNvZGVBdHRyaWJ1dGVGb3JTeW50aGV0aWNNZXRob2QoCiAJCQltZXRob2RC
aW5kaW5nLAogCQkJY29kZUF0dHJpYnV0ZU9mZnNldCwKIAkJCSgoU291cmNlVHlwZUJpbmRpbmcp
IG1ldGhvZEJpbmRpbmcuZGVjbGFyaW5nQ2xhc3MpCiAJCQkJLnNjb3BlCkBAIC0yODc2LDEyICsy
OTAzLDE0IEBACiAJCWludCBhdHRyaWJ1dGVMZW5ndGhQb3NpdGlvbiA9IGxvY2FsQ29udGVudHNP
ZmZzZXQ7CiAJCWxvY2FsQ29udGVudHNPZmZzZXQgKz0gNDsKIAkJdGhpcy5jb250ZW50c1tsb2Nh
bENvbnRlbnRzT2Zmc2V0KytdID0gKGJ5dGUpIChudW1iZXJPZkJvb3RzdHJhcHMgPj4gOCk7CiAJ
CXRoaXMuY29udGVudHNbbG9jYWxDb250ZW50c09mZnNldCsrXSA9IChieXRlKSBudW1iZXJPZkJv
b3RzdHJhcHM7CiAJCWZvciAoaW50IGkgPSAwOyBpIDwgbnVtYmVyT2ZCb290c3RyYXBzOyBpKysp
IHsKLQkJCUZ1bmN0aW9uYWxFeHByZXNzaW9uIGZ1bmN0aW9uYWwgPSAoRnVuY3Rpb25hbEV4cHJl
c3Npb24pIGZ1bmN0aW9uYWxFeHByZXNzaW9uTGlzdC5nZXQoaSk7Ci0JCQkKKwkJCU9iamVjdCB0
ZW1wID0gZnVuY3Rpb25hbEV4cHJlc3Npb25MaXN0LmdldChpKTsKKworCQkJaWYgKHRlbXAgaW5z
dGFuY2VvZiBGdW5jdGlvbmFsRXhwcmVzc2lvbikgeworCQkJRnVuY3Rpb25hbEV4cHJlc3Npb24g
ZnVuY3Rpb25hbCA9IChGdW5jdGlvbmFsRXhwcmVzc2lvbil0ZW1wOwogCQkJVHlwZUJpbmRpbmdb
XSBtYXJrZXJJbnRlcmZhY2VzID0gbnVsbDsKIAkJCWlmIChmdW5jdGlvbmFsIGluc3RhbmNlb2Yg
TGFtYmRhRXhwcmVzc2lvbiAmJiAKIAkJCQkgICAoKChtYXJrZXJJbnRlcmZhY2VzPSgoTGFtYmRh
RXhwcmVzc2lvbilmdW5jdGlvbmFsKS5nZXRNYXJrZXJJbnRlcmZhY2VzKCkpICE9IG51bGwpIHx8
CiAJCQkJICAgCSgoTGFtYmRhRXhwcmVzc2lvbilmdW5jdGlvbmFsKS5pc1NlcmlhbGl6YWJsZSkp
IHsKIAkJCQkKQEAgLTI5NjYsMTAgKzI5OTUsMzYgQEAKIAkKIAkJCQljaGFyIFtdIGluc3RhbnRp
YXRlZFNpZ25hdHVyZSA9IGZ1bmN0aW9uYWwuZGVzY3JpcHRvci5zaWduYXR1cmUoKTsKIAkJCQlp
bnQgbWV0aG9kVHlwZUluZGV4ID0gdGhpcy5jb25zdGFudFBvb2wubGl0ZXJhbEluZGV4Rm9yTWV0
aG9kVHlwZShpbnN0YW50aWF0ZWRTaWduYXR1cmUpOwogCQkJCXRoaXMuY29udGVudHNbbG9jYWxD
b250ZW50c09mZnNldCsrXSA9IChieXRlKSAobWV0aG9kVHlwZUluZGV4ID4+IDgpOwogCQkJCXRo
aXMuY29udGVudHNbbG9jYWxDb250ZW50c09mZnNldCsrXSA9IChieXRlKSBtZXRob2RUeXBlSW5k
ZXg7CQkJCQorCQkJfQorCQkJfSBlbHNlIGlmICh0ZW1wIGluc3RhbmNlb2YgU3ludGhldGljTWV0
aG9kQmluZGluZyAmJiAoKFN5bnRoZXRpY01ldGhvZEJpbmRpbmcpdGVtcCkucHVycG9zZSA9PSBT
eW50aGV0aWNNZXRob2RCaW5kaW5nLkNoYW5uZWxpc2VQYXJhbXNUb1ZhckFyZ3MpIHsKKwkJCQlp
ZiAoaW5kZXhGb3JNZXRhRmFjdG9yeSA9PSAwKSB7CisJCQkJCWluZGV4Rm9yTWV0YUZhY3Rvcnkg
PSB0aGlzLmNvbnN0YW50UG9vbC5saXRlcmFsSW5kZXhGb3JNZXRob2RIYW5kbGUoQ2xhc3NGaWxl
Q29uc3RhbnRzLk1ldGhvZEhhbmRsZVJlZktpbmRJbnZva2VTdGF0aWMsIGphdmFMYW5nSW52b2tl
TGFtYmRhTWV0YWZhY3RvcnksIAorCQkJCQkJCUNvbnN0YW50UG9vbC5NRVRBRkFDVE9SWSwgQ29u
c3RhbnRQb29sLkpBVkFfTEFOR19JTlZPS0VfTEFNQkRBTUVUQUZBQ1RPUllfTUVUQUZBQ1RPUllf
U0lHTkFUVVJFLCBmYWxzZSk7CisJCQkJfQorCQkJCVN5bnRoZXRpY01ldGhvZEJpbmRpbmcgc3lu
dGhldGljID0gKFN5bnRoZXRpY01ldGhvZEJpbmRpbmcpIHRlbXA7CisJCQkJCisJCQkJdGhpcy5j
b250ZW50c1tsb2NhbENvbnRlbnRzT2Zmc2V0KytdID0gKGJ5dGUpIChpbmRleEZvck1ldGFGYWN0
b3J5ID4+IDgpOworCQkJCXRoaXMuY29udGVudHNbbG9jYWxDb250ZW50c09mZnNldCsrXSA9IChi
eXRlKSBpbmRleEZvck1ldGFGYWN0b3J5OworCQkJCQorCQkJCS8vIHUyIG51bV9ib290c3RyYXBf
YXJndW1lbnRzCisJCQkJdGhpcy5jb250ZW50c1tsb2NhbENvbnRlbnRzT2Zmc2V0KytdID0gMDsK
KwkJCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgMzsKKwkJ
CQkKKwkJCQlpbnQgZnVuY3Rpb25hbERlc2NyaXB0b3JJbmRleCA9IHRoaXMuY29uc3RhbnRQb29s
LmxpdGVyYWxJbmRleEZvck1ldGhvZFR5cGUoc3ludGhldGljLmlucHV0TWV0aG9kLm9yaWdpbmFs
KCkuc2lnbmF0dXJlKCkpOworCQkJCXRoaXMuY29udGVudHNbbG9jYWxDb250ZW50c09mZnNldCsr
XSA9IChieXRlKSAoZnVuY3Rpb25hbERlc2NyaXB0b3JJbmRleCA+PiA4KTsKKwkJCQl0aGlzLmNv
bnRlbnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgZnVuY3Rpb25hbERlc2NyaXB0
b3JJbmRleDsKKwkKKwkJCQlpbnQgbWV0aG9kSGFuZGxlSW5kZXggPSB0aGlzLmNvbnN0YW50UG9v
bC5saXRlcmFsSW5kZXhGb3JNZXRob2RIYW5kbGUoc3ludGhldGljLm9yaWdpbmFsKCkpOyAvLyBT
cGVhayBvZiAiIGltcGxlbWVudGF0aW9uIiAoZXJhc2VkKSB2ZXJzaW9uIGhlcmUsIGFkYXB0YXRp
b25zIGRlc2NyaWJlZCBiZWxvdy4KKwkJCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVudHNPZmZz
ZXQrK10gPSAoYnl0ZSkgKG1ldGhvZEhhbmRsZUluZGV4ID4+IDgpOworCQkJCXRoaXMuY29udGVu
dHNbbG9jYWxDb250ZW50c09mZnNldCsrXSA9IChieXRlKSBtZXRob2RIYW5kbGVJbmRleDsKKwkK
KwkJCQlpbnQgbWV0aG9kVHlwZUluZGV4ID0gdGhpcy5jb25zdGFudFBvb2wubGl0ZXJhbEluZGV4
Rm9yTWV0aG9kVHlwZShzeW50aGV0aWMuaW5wdXRNZXRob2Quc2lnbmF0dXJlKCkpOworCQkJCXRo
aXMuY29udGVudHNbbG9jYWxDb250ZW50c09mZnNldCsrXSA9IChieXRlKSAobWV0aG9kVHlwZUlu
ZGV4ID4+IDgpOworCQkJCXRoaXMuY29udGVudHNbbG9jYWxDb250ZW50c09mZnNldCsrXSA9IChi
eXRlKSBtZXRob2RUeXBlSW5kZXg7CQkJCQkJCQkKIAkJCX0KIAkJfQogCiAJCWludCBhdHRyaWJ1
dGVMZW5ndGggPSBsb2NhbENvbnRlbnRzT2Zmc2V0IC0gYXR0cmlidXRlTGVuZ3RoUG9zaXRpb24g
LSA0OwogCQl0aGlzLmNvbnRlbnRzW2F0dHJpYnV0ZUxlbmd0aFBvc2l0aW9uKytdID0gKGJ5dGUp
IChhdHRyaWJ1dGVMZW5ndGggPj4gMjQpOwpAQCAtNTExOCwxMCArNTE3MywxOCBAQAogCQl0aGlz
LmJvb3RzdHJhcE1ldGhvZHMuYWRkKGV4cHJlc3Npb24pOwogCQkvLyBSZWNvcmQgd2hpY2ggYm9v
dHN0cmFwIG1ldGhvZCB3YXMgYXNzaWduZWQgdG8gdGhlIGV4cHJlc3Npb24KIAkJZXhwcmVzc2lv
bi5ib290c3RyYXBNZXRob2ROdW1iZXIgPSB0aGlzLmJvb3RzdHJhcE1ldGhvZHMuc2l6ZSgpIC0g
MTsKIAkJcmV0dXJuIHRoaXMuYm9vdHN0cmFwTWV0aG9kcy5zaXplKCkgLSAxOwogCX0KKwkKKwlw
dWJsaWMgaW50IHJlY29yZEJvb3RzdHJhcE1ldGhvZFBsYWNlaG9sZGVyKFN5bnRoZXRpY01ldGhv
ZEJpbmRpbmcgc20pIHsKKwkJaWYgKHRoaXMuYm9vdHN0cmFwTWV0aG9kcyA9PSBudWxsKSB7CisJ
CQl0aGlzLmJvb3RzdHJhcE1ldGhvZHMgPSBuZXcgQXJyYXlMaXN0KCk7CisJCX0KKwkJdGhpcy5i
b290c3RyYXBNZXRob2RzLmFkZChzbSk7CisJCXJldHVybiB0aGlzLmJvb3RzdHJhcE1ldGhvZHMu
c2l6ZSgpIC0gMTsKKwl9CiAKIAlwdWJsaWMgdm9pZCByZXNldChTb3VyY2VUeXBlQmluZGluZyB0
eXBlQmluZGluZykgewogCQkvLyB0aGUgY29kZSBzdHJlYW0gaXMgcmVpbml0aWFsaXplZCBmb3Ig
ZWFjaCBtZXRob2QKIAkJZmluYWwgQ29tcGlsZXJPcHRpb25zIG9wdGlvbnMgPSB0eXBlQmluZGlu
Zy5zY29wZS5jb21waWxlck9wdGlvbnMoKTsKIAkJdGhpcy5yZWZlcmVuY2VCaW5kaW5nID0gdHlw
ZUJpbmRpbmc7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1JlZmVyZW5jZUV4cHJlc3Npb24uamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9hc3QvUmVmZXJlbmNlRXhwcmVzc2lvbi5qYXZhCmluZGV4IDI2YjgyMTguLjc4
MWM2MzIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvUmVmZXJlbmNlRXhwcmVzc2lvbi5qYXZhCisr
KyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9hc3QvUmVmZXJlbmNlRXhwcmVzc2lvbi5qYXZhCkBAIC0xNjksMTEgKzE2OSwx
OCBAQAogCQl9CiAJCWJ1ZmZlci5hcHBlbmQoJyknKTsKIAkJYnVmZmVyLmFwcGVuZCgnTCcpOwog
CQlidWZmZXIuYXBwZW5kKHRoaXMucmVzb2x2ZWRUeXBlLmNvbnN0YW50UG9vbE5hbWUoKSk7CiAJ
CWJ1ZmZlci5hcHBlbmQoJzsnKTsKLQkJaW50IGludm9rZUR5bmFtaWNOdW1iZXIgPSBjb2RlU3Ry
ZWFtLmNsYXNzRmlsZS5yZWNvcmRCb290c3RyYXBNZXRob2QodGhpcyk7CisJCWludCBpbnZva2VE
eW5hbWljTnVtYmVyOworCQlpZiAoIXRoaXMuYmluZGluZy5hcmVQYXJhbWV0ZXJzRXF1YWwodGhp
cy5kZXNjcmlwdG9yKSkgeworCQkJU3ludGhldGljTWV0aG9kQmluZGluZyBzbSA9IHNvdXJjZVR5
cGUuYWRkU3ludGhldGljTWV0aG9kRm9yQXJndW1lbnRDaGFubmVsaW5nRm9yVmFyQXJncyh0aGlz
LmRlc2NyaXB0b3IsIHRoaXMuYmluZGluZyk7CisJCQlpbnZva2VEeW5hbWljTnVtYmVyID0gY29k
ZVN0cmVhbS5jbGFzc0ZpbGUucmVjb3JkQm9vdHN0cmFwTWV0aG9kUGxhY2Vob2xkZXIoc20pOwor
CQkJCisJCX0gZWxzZSB7CisJCQlpbnZva2VEeW5hbWljTnVtYmVyID0gY29kZVN0cmVhbS5jbGFz
c0ZpbGUucmVjb3JkQm9vdHN0cmFwTWV0aG9kKHRoaXMpOwkJCQorCQl9CiAJCWNvZGVTdHJlYW0u
aW52b2tlRHluYW1pYyhpbnZva2VEeW5hbWljTnVtYmVyLCBhcmd1bWVudHNTaXplLCAxLCB0aGlz
LmRlc2NyaXB0b3Iuc2VsZWN0b3IsIGJ1ZmZlci50b1N0cmluZygpLnRvQ2hhckFycmF5KCksIAog
CQkJCXRoaXMuaXNDb25zdHJ1Y3RvclJlZmVyZW5jZSgpLCAodGhpcy5saHMgaW5zdGFuY2VvZiBU
eXBlUmVmZXJlbmNlPyAoVHlwZVJlZmVyZW5jZSkgdGhpcy5saHMgOiBudWxsKSwgdGhpcy50eXBl
QXJndW1lbnRzKTsKIAkJaWYgKCF2YWx1ZVJlcXVpcmVkKQogCQkJY29kZVN0cmVhbS5wb3AoKTsK
IAkJY29kZVN0cmVhbS5yZWNvcmRQb3NpdGlvbnNGcm9tKHBjLCB0aGlzLnNvdXJjZVN0YXJ0KTsK
ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9jb2RlZ2VuL0NvZGVTdHJlYW0uamF2YSBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jb2Rl
Z2VuL0NvZGVTdHJlYW0uamF2YQppbmRleCA1NjM0OTI1Li5iMWJiNzU1IDEwMDY0NAotLS0gYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvY29kZWdlbi9Db2RlU3RyZWFtLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NvZGVnZW4vQ29kZVN0
cmVhbS5qYXZhCkBAIC0yOTYxLDEwICsyOTYxLDEwOSBAQAogCQkJCXRoaXMuY2hlY2tjYXN0KGFj
Y2Vzc0VyYXN1cmUpOyAvLyBmb3IgYnJpZGdlIG1ldGhvZHMKIAkJCX0KIAkJCWFyZXR1cm4oKTsK
IAl9CiB9CitwdWJsaWMgdm9pZCBnZW5lcmF0ZVN5bnRoZXRpY0JvZHlGb3JNZXRob2RBY2Nlc3NG
b3JWYXJBcmdzKFN5bnRoZXRpY01ldGhvZEJpbmRpbmcgYWNjZXNzTWV0aG9kKSB7CisJaW5pdGlh
bGl6ZU1heExvY2FscyhhY2Nlc3NNZXRob2QpOworCU1ldGhvZEJpbmRpbmcgdGFyZ2V0TWV0aG9k
ID0gYWNjZXNzTWV0aG9kLnRhcmdldE1ldGhvZDsKKwlUeXBlQmluZGluZ1tdIHBhcmFtZXRlcnMg
PSB0YXJnZXRNZXRob2QucGFyYW1ldGVyczsKKwlpbnQgbGVuZ3RoID0gcGFyYW1ldGVycy5sZW5n
dGg7CisJaWYgKCEocGFyYW1ldGVyc1tsZW5ndGggLSAxXSBpbnN0YW5jZW9mIEFycmF5QmluZGlu
ZykpIHsKKwkJcmV0dXJuOworCX0KKwlUeXBlQmluZGluZ1tdIGFyZ3VtZW50cyA9IGFjY2Vzc01l
dGhvZC5wdXJwb3NlID09IFN5bnRoZXRpY01ldGhvZEJpbmRpbmcuQ2hhbm5lbGlzZVBhcmFtc1Rv
VmFyQXJncworCQkJCQkJCQkJCQkJCT8gYWNjZXNzTWV0aG9kLnBhcmFtZXRlcnMKKwkJCQkJCQkJ
CQkJCQk6IG51bGw7CisJaW50IHJlc29sdmVkUG9zaXRpb247CisJaWYgKHRhcmdldE1ldGhvZC5p
c1N0YXRpYygpKQorCQlyZXNvbHZlZFBvc2l0aW9uID0gMDsKKwllbHNlIHsKKwkJYWxvYWRfMCgp
OworCQlyZXNvbHZlZFBvc2l0aW9uID0gMTsKKwl9CisJZm9yIChpbnQgaSA9IDA7IGkgPCBsZW5n
dGggLSAxOyBpKyspIHsKKwkgICAgVHlwZUJpbmRpbmcgcGFyYW1ldGVyID0gcGFyYW1ldGVyc1tp
XTsKKwkgICAgaWYgKGFyZ3VtZW50cyAhPSBudWxsKSB7IC8vIGZvciBicmlkZ2UgbWV0aG9kcwor
CQkgICAgVHlwZUJpbmRpbmcgYXJndW1lbnQgPSBhcmd1bWVudHNbaV07CisJCQlsb2FkKGFyZ3Vt
ZW50LCByZXNvbHZlZFBvc2l0aW9uKTsKKwkJCWlmIChUeXBlQmluZGluZy5ub3RFcXVhbHMoYXJn
dW1lbnQsIHBhcmFtZXRlcikpCisJCQkgICAgY2hlY2tjYXN0KHBhcmFtZXRlcik7CisJICAgIH0g
ZWxzZSB7CisJCQlsb2FkKHBhcmFtZXRlciwgcmVzb2x2ZWRQb3NpdGlvbik7CisJCX0KKwkJc3dp
dGNoKHBhcmFtZXRlci5pZCkgeworCQkJY2FzZSBUeXBlSWRzLlRfbG9uZyA6CisJCQljYXNlIFR5
cGVJZHMuVF9kb3VibGUgOgorCQkJCXJlc29sdmVkUG9zaXRpb24gKz0gMjsKKwkJCQlicmVhazsK
KwkJCWRlZmF1bHQgOgorCQkJCXJlc29sdmVkUG9zaXRpb24rKzsKKwkJCQlicmVhazsKKwkJfQor
CX0KKwlnZW5lcmF0ZUlubGluZWRWYWx1ZShhcmd1bWVudHMubGVuZ3RoIC0gbGVuZ3RoICsgMSk7
CisJQXJyYXlCaW5kaW5nIHZhckFyZ1R5cGU7CisJbmV3QXJyYXkodmFyQXJnVHlwZSA9IChBcnJh
eUJpbmRpbmcpcGFyYW1ldGVyc1tsZW5ndGggLSAxXSk7CisJZm9yKGludCBhcnJheUluZGV4ID0g
MCwgbWF4ID0gYXJndW1lbnRzLmxlbmd0aCAtIGxlbmd0aCArIDE7IGFycmF5SW5kZXggPCBtYXg7
IGFycmF5SW5kZXgrKykgeworCQlkdXAoKTsKKwkJZ2VuZXJhdGVJbmxpbmVkVmFsdWUoYXJyYXlJ
bmRleCk7CisJCWxvYWQoVHlwZUlkcy5UX0phdmFMYW5nT2JqZWN0LCBsZW5ndGggKyBhcnJheUlu
ZGV4IC0gMSk7CisJCWlmIChUeXBlQmluZGluZy5ub3RFcXVhbHMoYXJndW1lbnRzW2xlbmd0aCAr
IGFycmF5SW5kZXggLSAxXSwgdmFyQXJnVHlwZS5lbGVtZW50c1R5cGUoKSkpIHsKKwkJCWNoZWNr
Y2FzdCh2YXJBcmdUeXBlLmVsZW1lbnRzVHlwZSgpKTsKKwkJfQorCQlhcnJheUF0UHV0KHZhckFy
Z1R5cGUuZWxlbWVudHNUeXBlKCkuaWQsIGZhbHNlKTsKKwl9CisJaWYgKHRhcmdldE1ldGhvZC5p
c1N0YXRpYygpKQorCQlpbnZva2UoT3Bjb2Rlcy5PUENfaW52b2tlc3RhdGljLCB0YXJnZXRNZXRo
b2QsIHRhcmdldE1ldGhvZC5kZWNsYXJpbmdDbGFzcyk7CisJZWxzZSB7CisJCWlmICh0YXJnZXRN
ZXRob2QuaXNDb25zdHJ1Y3RvcigpCisJCQkJfHwgdGFyZ2V0TWV0aG9kLmlzUHJpdmF0ZSgpCisJ
CQkJLy8gcXVhbGlmaWVkIHN1cGVyICJYLnN1cGVyLmZvbygpIiB0YXJnZXRzIG1ldGhvZHMgZnJv
bSBzdXBlcmNsYXNzCisJCQkJfHwgYWNjZXNzTWV0aG9kLnB1cnBvc2UgPT0gU3ludGhldGljTWV0
aG9kQmluZGluZy5TdXBlck1ldGhvZEFjY2Vzcyl7CisJCQkvLyB0YXJnZXQgbWV0aG9kIGRlY2xh
cmluZyBjbGFzcyBtYXkgbm90IGJlIGFjY2Vzc2libGUgKDI0Nzk1Myk7CisJCQlUeXBlQmluZGlu
ZyBkZWNsYXJpbmdDbGFzcyA9IGFjY2Vzc01ldGhvZC5wdXJwb3NlID09IFN5bnRoZXRpY01ldGhv
ZEJpbmRpbmcuU3VwZXJNZXRob2RBY2Nlc3MgCisJCQkJCT8gZmluZERpcmVjdFN1cGVyVHlwZVRv
d2FyZHMoYWNjZXNzTWV0aG9kLCB0YXJnZXRNZXRob2QpCisJCQkJCTogYWNjZXNzTWV0aG9kLmRl
Y2xhcmluZ0NsYXNzOworCQkJaW52b2tlKE9wY29kZXMuT1BDX2ludm9rZXNwZWNpYWwsIHRhcmdl
dE1ldGhvZCwgZGVjbGFyaW5nQ2xhc3MpOworCQl9IGVsc2UgeworCQkJaWYgKHRhcmdldE1ldGhv
ZC5kZWNsYXJpbmdDbGFzcy5pc0ludGVyZmFjZSgpKSB7IC8vIGludGVyZmFjZSBvciBhbm5vdGF0
aW9uIHR5cGUKKwkJCQlpbnZva2UoT3Bjb2Rlcy5PUENfaW52b2tlaW50ZXJmYWNlLCB0YXJnZXRN
ZXRob2QsIG51bGwgLyogZGVmYXVsdCBkZWNsYXJpbmdDbGFzcyAqLyk7CisJCQl9IGVsc2Ugewor
CQkJCWludm9rZShPcGNvZGVzLk9QQ19pbnZva2V2aXJ0dWFsLCB0YXJnZXRNZXRob2QsIGFjY2Vz
c01ldGhvZC5kZWNsYXJpbmdDbGFzcyk7IC8vIHRhcmdldCBtZXRob2QgZGVjbGFyaW5nIGNsYXNz
IG1heSBub3QgYmUgYWNjZXNzaWJsZSAoMTI4NTYzKQorCQkJfQorCQl9CisJfQorCXN3aXRjaCAo
dGFyZ2V0TWV0aG9kLnJldHVyblR5cGUuaWQpIHsKKwkJY2FzZSBUeXBlSWRzLlRfdm9pZCA6CisJ
CQlyZXR1cm5fKCk7CisJCQlicmVhazsKKwkJY2FzZSBUeXBlSWRzLlRfYm9vbGVhbiA6CisJCWNh
c2UgVHlwZUlkcy5UX2J5dGUgOgorCQljYXNlIFR5cGVJZHMuVF9jaGFyIDoKKwkJY2FzZSBUeXBl
SWRzLlRfc2hvcnQgOgorCQljYXNlIFR5cGVJZHMuVF9pbnQgOgorCQkJaXJldHVybigpOworCQkJ
YnJlYWs7CisJCWNhc2UgVHlwZUlkcy5UX2xvbmcgOgorCQkJbHJldHVybigpOworCQkJYnJlYWs7
CisJCWNhc2UgVHlwZUlkcy5UX2Zsb2F0IDoKKwkJCWZyZXR1cm4oKTsKKwkJCWJyZWFrOworCQlj
YXNlIFR5cGVJZHMuVF9kb3VibGUgOgorCQkJZHJldHVybigpOworCQkJYnJlYWs7CisJCWRlZmF1
bHQgOgorCQkJVHlwZUJpbmRpbmcgYWNjZXNzRXJhc3VyZSA9IGFjY2Vzc01ldGhvZC5yZXR1cm5U
eXBlLmVyYXN1cmUoKTsKKwkJCVR5cGVCaW5kaW5nIG1hdGNoID0gdGFyZ2V0TWV0aG9kLnJldHVy
blR5cGUuZmluZFN1cGVyVHlwZU9yaWdpbmF0aW5nRnJvbShhY2Nlc3NFcmFzdXJlKTsKKwkJCWlm
IChtYXRjaCA9PSBudWxsKSB7CisJCQkJdGhpcy5jaGVja2Nhc3QoYWNjZXNzRXJhc3VyZSk7IC8v
IGZvciBicmlkZ2UgbWV0aG9kcworCQkJfQorCQkJYXJldHVybigpOworCX0KK30KIC8qKiBXaGVu
IGdlbmVyYXRpbmcgU3VwZXJNZXRvZEFjY2VzcyB0b3dhcmRzIHRhcmdldE1ldGhvZCwKICAqICBm
aW5kIHRoZSBzdWl0YWJsZSBkaXJlY3Qgc3VwZXIgdHlwZSwgdGhhdCB3aWxsIGV2ZW50dWFsbHkg
bGVhZCB0byB0YXJnZXRNZXRob2QuZGVjbGFyaW5nQ2xhc3MuKi8KIFJlZmVyZW5jZUJpbmRpbmcg
ZmluZERpcmVjdFN1cGVyVHlwZVRvd2FyZHMoU3ludGhldGljTWV0aG9kQmluZGluZyBhY2Nlc3NN
ZXRob2QsIE1ldGhvZEJpbmRpbmcgdGFyZ2V0TWV0aG9kKSB7CiAJUmVmZXJlbmNlQmluZGluZyBj
dXJyZW50VHlwZSA9IGFjY2Vzc01ldGhvZC5kZWNsYXJpbmdDbGFzczsKIAlSZWZlcmVuY2VCaW5k
aW5nIHN1cGVyY2xhc3MgPSBjdXJyZW50VHlwZS5zdXBlcmNsYXNzKCk7CkBAIC01Njg1LDEyICs1
Nzg0LDE2IEBACiAJbG9hZChsb2NhbEJpbmRpbmcudHlwZSwgbG9jYWxCaW5kaW5nLnJlc29sdmVk
UG9zaXRpb24pOwogfQogCiBwcm90ZWN0ZWQgZmluYWwgdm9pZCBsb2FkKFR5cGVCaW5kaW5nIHR5
cGVCaW5kaW5nLCBpbnQgcmVzb2x2ZWRQb3NpdGlvbikgewogCXRoaXMuY291bnRMYWJlbHMgPSAw
OworCWxvYWQodHlwZUJpbmRpbmcuaWQsIHJlc29sdmVkUG9zaXRpb24pOworfQorCitwcm90ZWN0
ZWQgZmluYWwgdm9pZCBsb2FkKGludCB0eXBlSWQsIGludCByZXNvbHZlZFBvc2l0aW9uKSB7CiAJ
Ly8gVXNpbmcgZGVkaWNhdGVkIGludCBieXRlY29kZQotCXN3aXRjaCh0eXBlQmluZGluZy5pZCkg
eworCXN3aXRjaCh0eXBlSWQpIHsKIAkJY2FzZSBUeXBlSWRzLlRfaW50IDoKIAkJY2FzZSBUeXBl
SWRzLlRfYnl0ZSA6CiAJCWNhc2UgVHlwZUlkcy5UX2NoYXIgOgogCQljYXNlIFR5cGVJZHMuVF9i
b29sZWFuIDoKIAkJY2FzZSBUeXBlSWRzLlRfc2hvcnQgOgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xv
b2t1cC9Tb3VyY2VUeXBlQmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Tb3VyY2VUeXBlQmlu
ZGluZy5qYXZhCmluZGV4IGZjODIxMWIuLjBkMmNiN2IgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29r
dXAvU291cmNlVHlwZUJpbmRpbmcuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1NvdXJjZVR5cGVC
aW5kaW5nLmphdmEKQEAgLTc4LDEyICs3OCwxMyBAQAogCS8vIFN5bnRoZXRpY3MgYXJlIHNlcGFy
YXRlZCBpbnRvIDQgY2F0ZWdvcmllczogbWV0aG9kcywgc3VwZXIgbWV0aG9kcywgZmllbGRzLCBj
bGFzcyBsaXRlcmFscyBhbmQgYnJpZGdlIG1ldGhvZHMKIAkvLyBpZiBhIG5ldyBjYXRlZ29yeSBp
cyBhZGRlZCwgYWxzbyBpbmNyZW1lbnQgTUFYX1NZTlRIRVRJQ1MKIAlwcml2YXRlIGZpbmFsIHN0
YXRpYyBpbnQgTUVUSE9EX0VNVUwgPSAwOwogCXByaXZhdGUgZmluYWwgc3RhdGljIGludCBGSUVM
RF9FTVVMID0gMTsKIAlwcml2YXRlIGZpbmFsIHN0YXRpYyBpbnQgQ0xBU1NfTElURVJBTF9FTVVM
ID0gMjsKKwlwcml2YXRlIGZpbmFsIHN0YXRpYyBpbnQgTUVUSE9EX1BBSVJfQlJJREdFID0gMzsK
IAotCXByaXZhdGUgZmluYWwgc3RhdGljIGludCBNQVhfU1lOVEhFVElDUyA9IDM7CisJcHJpdmF0
ZSBmaW5hbCBzdGF0aWMgaW50IE1BWF9TWU5USEVUSUNTID0gNDsKIAogCUhhc2hNYXBbXSBzeW50
aGV0aWNzOwogCWNoYXJbXSBnZW5lcmljUmVmZXJlbmNlVHlwZVNpZ25hdHVyZTsKIAogCXByaXZh
dGUgU2ltcGxlTG9va3VwVGFibGUgc3RvcmVkQW5ub3RhdGlvbnMgPSBudWxsOyAvLyBrZXlzIGFy
ZSB0aGlzIFJlZmVyZW5jZUJpbmRpbmcgJiBpdHMgZmllbGRzIGFuZCBtZXRob2RzLCB2YWx1ZSBp
cyBhbiBBbm5vdGF0aW9uSG9sZGVyCkBAIC03NzcsMTAgKzc3OCw3MyBAQAogCQkJYWNjZXNzb3Jz
WzBdID0gYWNjZXNzTWV0aG9kOwogCQl9CiAJfQogCXJldHVybiBhY2Nlc3NNZXRob2Q7CiB9CisK
K3B1YmxpYyBTeW50aGV0aWNNZXRob2RCaW5kaW5nIGFkZFN5bnRoZXRpY01ldGhvZEZvckFyZ3Vt
ZW50Q2hhbm5lbGluZ0ZvclZhckFyZ3MoTWV0aG9kQmluZGluZyBpbnB1dCwgTWV0aG9kQmluZGlu
ZyB0YXJnZXRNZXRob2QpIHsKKwlpZiAoIWlzUHJvdG90eXBlKCkpIHRocm93IG5ldyBJbGxlZ2Fs
U3RhdGVFeGNlcHRpb24oKTsKKwlpZiAoaXNJbnRlcmZhY2UoKSkgcmV0dXJuIG51bGw7IC8vIG9u
bHkgY2xhc3NlcyAmIGVudW1zIGdldCBicmlkZ2UgbWV0aG9kcworCS8vIHRhcmdldE1ldGhvZCBt
YXkgYmUgaW5oZXJpdGVkCisJaWYgKFR5cGVCaW5kaW5nLmVxdWFsc0VxdWFscyhpbnB1dC5yZXR1
cm5UeXBlLmVyYXN1cmUoKSwgdGFyZ2V0TWV0aG9kLnJldHVyblR5cGUuZXJhc3VyZSgpKQorCQkm
JiBpbnB1dC5hcmVQYXJhbWV0ZXJFcmFzdXJlc0VxdWFsKHRhcmdldE1ldGhvZCkpIHsKKwkJCXJl
dHVybiBudWxsOyAvLyBkbyBub3QgbmVlZCBicmlkZ2UgbWV0aG9kCisJfQorCWlmICh0aGlzLnN5
bnRoZXRpY3MgPT0gbnVsbCkKKwkJdGhpcy5zeW50aGV0aWNzID0gbmV3IEhhc2hNYXBbTUFYX1NZ
TlRIRVRJQ1NdOworCWlmICh0aGlzLnN5bnRoZXRpY3NbU291cmNlVHlwZUJpbmRpbmcuTUVUSE9E
X1BBSVJfQlJJREdFXSA9PSBudWxsKSB7CisJCXRoaXMuc3ludGhldGljc1tTb3VyY2VUeXBlQmlu
ZGluZy5NRVRIT0RfUEFJUl9CUklER0VdID0gbmV3IEhhc2hNYXAoNSk7CisJfSBlbHNlIHsKKwkJ
Ly8gY2hlY2sgdG8gc2VlIGlmIHRoZXJlIGlzIGFub3RoZXIgZXF1aXZhbGVudCBpbmhlcml0ZWRN
ZXRob2QgYWxyZWFkeSBhZGRlZAorCQlJdGVyYXRvciBmaXJzdE9mVGhlUGFpckl0ZXJhdG9yID0g
dGhpcy5zeW50aGV0aWNzW1NvdXJjZVR5cGVCaW5kaW5nLk1FVEhPRF9QQUlSX0JSSURHRV0ua2V5
U2V0KCkuaXRlcmF0b3IoKTsKKwkJd2hpbGUgKGZpcnN0T2ZUaGVQYWlySXRlcmF0b3IuaGFzTmV4
dCgpKSB7CisJCQlPYmplY3Qgc3ludGhldGljID0gZmlyc3RPZlRoZVBhaXJJdGVyYXRvci5uZXh0
KCk7CisJCQlpZiAoc3ludGhldGljIGluc3RhbmNlb2YgTWV0aG9kQmluZGluZykgeworCQkJCU1l
dGhvZEJpbmRpbmcgZmlyc3RPZlRoZXBhaXIgPSAoTWV0aG9kQmluZGluZykgc3ludGhldGljOwor
CQkJCWlmIChDaGFyT3BlcmF0aW9uLmVxdWFscyhpbnB1dC5zZWxlY3RvciwgZmlyc3RPZlRoZXBh
aXIuc2VsZWN0b3IpCisJCQkJCQkmJiBUeXBlQmluZGluZy5lcXVhbHNFcXVhbHMoaW5wdXQucmV0
dXJuVHlwZS5lcmFzdXJlKCksIGZpcnN0T2ZUaGVwYWlyLnJldHVyblR5cGUuZXJhc3VyZSgpKQor
CQkJCQkJJiYgaW5wdXQuYXJlUGFyYW1ldGVyRXJhc3VyZXNFcXVhbChmaXJzdE9mVGhlcGFpcikp
IHsKKwkJCQkJT2JqZWN0IGhNYXAgPSB0aGlzLnN5bnRoZXRpY3NbU291cmNlVHlwZUJpbmRpbmcu
TUVUSE9EX1BBSVJfQlJJREdFXS5nZXQoc3ludGhldGljKTsKKwkJCQkJaWYgKGhNYXAgaW5zdGFu
Y2VvZiBIYXNoTWFwKSB7CisJCQkJCQlJdGVyYXRvciBzZWNvbmRPZlRoZVBhaXJJdGVyYXRvciA9
ICgoSGFzaE1hcCloTWFwKS5rZXlTZXQoKS5pdGVyYXRvcigpOworCQkJCQkJd2hpbGUgKHNlY29u
ZE9mVGhlUGFpckl0ZXJhdG9yLmhhc05leHQoKSkgeworCQkJCQkJCU9iamVjdCBzeW50aGV0aWMx
ID0gc2Vjb25kT2ZUaGVQYWlySXRlcmF0b3IubmV4dCgpOworCQkJCQkJCWlmIChzeW50aGV0aWMx
IGluc3RhbmNlb2YgTWV0aG9kQmluZGluZykgeworCQkJCQkJCQlNZXRob2RCaW5kaW5nIHNlY29u
ZE9mVGhlcGFpciA9IChNZXRob2RCaW5kaW5nKSBzeW50aGV0aWMxOworCQkJCQkJCQlpZiAoQ2hh
ck9wZXJhdGlvbi5lcXVhbHModGFyZ2V0TWV0aG9kLnNlbGVjdG9yLCBzZWNvbmRPZlRoZXBhaXIu
c2VsZWN0b3IpCisJCQkJCQkJCQkJJiYgVHlwZUJpbmRpbmcuZXF1YWxzRXF1YWxzKHRhcmdldE1l
dGhvZC5yZXR1cm5UeXBlLmVyYXN1cmUoKSwgc2Vjb25kT2ZUaGVwYWlyLnJldHVyblR5cGUuZXJh
c3VyZSgpKQorCQkJCQkJCQkJCSYmIHRhcmdldE1ldGhvZC5hcmVQYXJhbWV0ZXJFcmFzdXJlc0Vx
dWFsKHNlY29uZE9mVGhlcGFpcikpIHsKKwkJCQkJCQkJCXJldHVybiBudWxsOworCQkJCQkJCQl9
CisJCQkJCQkJfQorCQkJCQkJfQorCQkJCQl9CisJCQkJfQorCQkJfQorCQl9CisJfQorCisJU3lu
dGhldGljTWV0aG9kQmluZGluZyBhY2Nlc3NNZXRob2QgPSBudWxsOworCUhhc2hNYXAgaE1hcCA9
IChIYXNoTWFwKSB0aGlzLnN5bnRoZXRpY3NbU291cmNlVHlwZUJpbmRpbmcuTUVUSE9EX1BBSVJf
QlJJREdFXS5nZXQoaW5wdXQpOworCWlmIChoTWFwID09IG51bGwpIHsKKwkJdGhpcy5zeW50aGV0
aWNzW1NvdXJjZVR5cGVCaW5kaW5nLk1FVEhPRF9QQUlSX0JSSURHRV0ucHV0KGlucHV0LCBoTWFw
ID0gbmV3IEhhc2hNYXAoNSkpOworCX0KKwlTeW50aGV0aWNNZXRob2RCaW5kaW5nW10gYWNjZXNz
b3JzID0gKFN5bnRoZXRpY01ldGhvZEJpbmRpbmdbXSkgaE1hcC5nZXQodGFyZ2V0TWV0aG9kKTsK
KwljaGFyIFtdIHNlbGVjdG9yID0gQ2hhck9wZXJhdGlvbi5jb25jYXQoVHlwZUNvbnN0YW50cy5B
Tk9OWU1PVVNfTUVUSE9ELCBJbnRlZ2VyLnRvU3RyaW5nKHRoaXMubGFtYmRhT3JkaW5hbCsrKS50
b0NoYXJBcnJheSgpKTsKKwlpZiAoYWNjZXNzb3JzID09IG51bGwpIHsKKwkJYWNjZXNzTWV0aG9k
ID0gbmV3IFN5bnRoZXRpY01ldGhvZEJpbmRpbmcoaW5wdXQsIHRhcmdldE1ldGhvZCwgc2VsZWN0
b3IsIHRoaXMpOworCQloTWFwLnB1dChpbnB1dCwgYWNjZXNzb3JzID0gbmV3IFN5bnRoZXRpY01l
dGhvZEJpbmRpbmdbMl0pOworCQlhY2Nlc3NvcnNbMV0gPSBhY2Nlc3NNZXRob2Q7CisJfSBlbHNl
IHsKKwkJaWYgKChhY2Nlc3NNZXRob2QgPSBhY2Nlc3NvcnNbMV0pID09IG51bGwpIHsKKwkJCWFj
Y2Vzc01ldGhvZCA9IG5ldyBTeW50aGV0aWNNZXRob2RCaW5kaW5nKGlucHV0LCB0YXJnZXRNZXRo
b2QsIHNlbGVjdG9yLCB0aGlzKTsKKwkJCWFjY2Vzc29yc1sxXSA9IGFjY2Vzc01ldGhvZDsKKwkJ
fQorCX0KKwlyZXR1cm4gYWNjZXNzTWV0aG9kOworfQorCiBib29sZWFuIGFyZUZpZWxkc0luaXRp
YWxpemVkKCkgewogCWlmICghaXNQcm90b3R5cGUoKSkKIAkJcmV0dXJuIHRoaXMucHJvdG90eXBl
LmFyZUZpZWxkc0luaXRpYWxpemVkKCk7CiAJcmV0dXJuIHRoaXMuZmllbGRzICE9IEJpbmRpbmcu
VU5JTklUSUFMSVpFRF9GSUVMRFM7CiB9CkBAIC0yMjc0LDE3ICsyMzM4LDIwIEBACiBwdWJsaWMg
U3ludGhldGljTWV0aG9kQmluZGluZ1tdIHN5bnRoZXRpY01ldGhvZHMoKSB7CiAJCiAJaWYgKCFp
c1Byb3RvdHlwZSgpKSB0aHJvdyBuZXcgSWxsZWdhbFN0YXRlRXhjZXB0aW9uKCk7CiAJCiAJaWYg
KHRoaXMuc3ludGhldGljcyA9PSBudWxsIAotCQkJfHwgdGhpcy5zeW50aGV0aWNzW1NvdXJjZVR5
cGVCaW5kaW5nLk1FVEhPRF9FTVVMXSA9PSBudWxsIAotCQkJfHwgdGhpcy5zeW50aGV0aWNzW1Nv
dXJjZVR5cGVCaW5kaW5nLk1FVEhPRF9FTVVMXS5zaXplKCkgPT0gMCkgeworCQkJfHwgKCggdGhp
cy5zeW50aGV0aWNzW1NvdXJjZVR5cGVCaW5kaW5nLk1FVEhPRF9FTVVMXSA9PSBudWxsIAorCQkJ
ICAgfHwgdGhpcy5zeW50aGV0aWNzW1NvdXJjZVR5cGVCaW5kaW5nLk1FVEhPRF9FTVVMXS5zaXpl
KCkgPT0gMCkKKwkJCSAgJiYgKHRoaXMuc3ludGhldGljc1tTb3VyY2VUeXBlQmluZGluZy5NRVRI
T0RfUEFJUl9CUklER0VdID09IG51bGwKKwkJCSAgIHx8IHRoaXMuc3ludGhldGljc1tTb3VyY2VU
eXBlQmluZGluZy5NRVRIT0RfUEFJUl9CUklER0VdLnNpemUoKSA9PSAwKSkpIHsKIAkJcmV0dXJu
IG51bGw7CiAJfQogCS8vIGRpZmZpY3VsdCB0byBjb21wdXRlIHNpemUgdXAgZnJvbnQgYmVjYXVz
ZSBvZiB0aGUgZW1iZWRkZWQgYXJyYXlzIHNvIGFzc3VtZSB0aGVyZSBpcyBvbmx5IDEKIAlpbnQg
aW5kZXggPSAwOwogCVN5bnRoZXRpY01ldGhvZEJpbmRpbmdbXSBiaW5kaW5ncyA9IG5ldyBTeW50
aGV0aWNNZXRob2RCaW5kaW5nWzFdOworCWlmICh0aGlzLnN5bnRoZXRpY3NbU291cmNlVHlwZUJp
bmRpbmcuTUVUSE9EX0VNVUxdICE9IG51bGwpIHsKIAlJdGVyYXRvciBtZXRob2RBcnJheUl0ZXJh
dG9yID0gdGhpcy5zeW50aGV0aWNzW1NvdXJjZVR5cGVCaW5kaW5nLk1FVEhPRF9FTVVMXS52YWx1
ZXMoKS5pdGVyYXRvcigpOwogCXdoaWxlIChtZXRob2RBcnJheUl0ZXJhdG9yLmhhc05leHQoKSkg
ewogCQlTeW50aGV0aWNNZXRob2RCaW5kaW5nW10gbWV0aG9kQWNjZXNzb3JzID0gKFN5bnRoZXRp
Y01ldGhvZEJpbmRpbmdbXSkgbWV0aG9kQXJyYXlJdGVyYXRvci5uZXh0KCk7CiAJCWZvciAoaW50
IGkgPSAwLCBtYXggPSBtZXRob2RBY2Nlc3NvcnMubGVuZ3RoOyBpIDwgbWF4OyBpKyspIHsKIAkJ
CWlmIChtZXRob2RBY2Nlc3NvcnNbaV0gIT0gbnVsbCkgewpAQCAtMjI5MywxMiArMjM2MCwzNiBA
QAogCQkJCX0KIAkJCQliaW5kaW5nc1tpbmRleCsrXSA9IG1ldGhvZEFjY2Vzc29yc1tpXTsgCiAJ
CQl9CiAJCX0KIAl9CisJfQorCWlmICh0aGlzLnN5bnRoZXRpY3NbU291cmNlVHlwZUJpbmRpbmcu
TUVUSE9EX1BBSVJfQlJJREdFXSAhPSBudWxsKSB7CisJSXRlcmF0b3IgdG9wSXRlcmF0b3IgPSB0
aGlzLnN5bnRoZXRpY3NbU291cmNlVHlwZUJpbmRpbmcuTUVUSE9EX1BBSVJfQlJJREdFXS52YWx1
ZXMoKS5pdGVyYXRvcigpOworCXdoaWxlICh0b3BJdGVyYXRvci5oYXNOZXh0KCkpIHsKKwkJT2Jq
ZWN0IHRlbXAgPSB0b3BJdGVyYXRvci5uZXh0KCk7CisJCWlmICh0ZW1wIGluc3RhbmNlb2YgSGFz
aE1hcCkgeworCQlJdGVyYXRvciBuZXh0SXRlcmF0b3IgPSAoKEhhc2hNYXApdGVtcCkudmFsdWVz
KCkuaXRlcmF0b3IoKTsKKwkJd2hpbGUgKG5leHRJdGVyYXRvci5oYXNOZXh0KCkpIHsKKwkJU3lu
dGhldGljTWV0aG9kQmluZGluZ1tdIG1ldGhvZEFjY2Vzc29ycyA9IChTeW50aGV0aWNNZXRob2RC
aW5kaW5nW10pIG5leHRJdGVyYXRvci5uZXh0KCk7CisJCWZvciAoaW50IGkgPSAwLCBtYXggPSBt
ZXRob2RBY2Nlc3NvcnMubGVuZ3RoOyBpIDwgbWF4OyBpKyspIHsKKwkJCWlmIChtZXRob2RBY2Nl
c3NvcnNbaV0gIT0gbnVsbCkgeworCQkJCWlmIChpbmRleCsxID4gYmluZGluZ3MubGVuZ3RoKSB7
CisJCQkJCVN5c3RlbS5hcnJheWNvcHkoYmluZGluZ3MsIDAsIChiaW5kaW5ncyA9IG5ldyBTeW50
aGV0aWNNZXRob2RCaW5kaW5nW2luZGV4ICsgMV0pLCAwLCBpbmRleCk7CisJCQkJfQorCQkJCWJp
bmRpbmdzW2luZGV4KytdID0gbWV0aG9kQWNjZXNzb3JzW2ldOyAKKwkJCX0KKwkJfQorCQl9CisJ
CX0KKwl9CisJfQogCS8vIHNvcnQgdGhlbSBpbiBhY2NvcmRpbmcgdG8gdGhlaXIgb3duIGluZGV4
ZXMKIAlpbnQgbGVuZ3RoOworCWlmIChiaW5kaW5ncy5sZW5ndGggPT0gMSAmJiBiaW5kaW5nc1sw
XSA9PSBudWxsKSB7CisJCXJldHVybiBudWxsOworCX0KIAlTeW50aGV0aWNNZXRob2RCaW5kaW5n
W10gc29ydGVkQmluZGluZ3MgPSBuZXcgU3ludGhldGljTWV0aG9kQmluZGluZ1tsZW5ndGggPSBi
aW5kaW5ncy5sZW5ndGhdOwogCWZvciAoaW50IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspewogCQlT
eW50aGV0aWNNZXRob2RCaW5kaW5nIGJpbmRpbmcgPSBiaW5kaW5nc1tpXTsKIAkJc29ydGVkQmlu
ZGluZ3NbYmluZGluZy5pbmRleF0gPSBiaW5kaW5nOwogCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9s
b29rdXAvU3ludGhldGljTWV0aG9kQmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9TeW50aGV0
aWNNZXRob2RCaW5kaW5nLmphdmEKaW5kZXggZDExODA1Yi4uNDkxMDhjZSAxMDA2NDQKLS0tIGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9TeW50aGV0aWNNZXRob2RCaW5kaW5nLmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xv
b2t1cC9TeW50aGV0aWNNZXRob2RCaW5kaW5nLmphdmEKQEAgLTI5LDEwICsyOSwxMSBAQAogCXB1
YmxpYyBGaWVsZEJpbmRpbmcgdGFyZ2V0UmVhZEZpZWxkOwkJLy8gcmVhZCBhY2Nlc3MgdG8gYSBm
aWVsZAogCXB1YmxpYyBGaWVsZEJpbmRpbmcgdGFyZ2V0V3JpdGVGaWVsZDsJCS8vIHdyaXRlIGFj
Y2VzcyB0byBhIGZpZWxkCiAJcHVibGljIE1ldGhvZEJpbmRpbmcgdGFyZ2V0TWV0aG9kOwkJCS8v
IG1ldGhvZCBvciBjb25zdHJ1Y3RvcgogCXB1YmxpYyBUeXBlQmluZGluZyB0YXJnZXRFbnVtVHlw
ZTsgCQkJLy8gZW51bSB0eXBlCiAJcHVibGljIExhbWJkYUV4cHJlc3Npb24gbGFtYmRhOworCXB1
YmxpYyBNZXRob2RCaW5kaW5nIGlucHV0TWV0aG9kID0gbnVsbDsKIAkKIAlwdWJsaWMgaW50IHB1
cnBvc2U7CiAKIAkvLyBmaWVsZHMgdXNlZCB0byBnZW5lcmF0ZSBlbnVtIGNvbnN0YW50cyB3aGVu
IHRvbyBtYW55CiAJcHVibGljIGludCBzdGFydEluZGV4OwpAQCAtNTMsMTUgKzU0LDQyIEBACiAJ
cHVibGljIHN0YXRpYyBmaW5hbCBpbnQgTGFtYmRhTWV0aG9kID0gMTM7IC8vIExhbWJkYSBib2R5
IGVtaXR0ZWQgYXMgYSBtZXRob2QuCiAJcHVibGljIGZpbmFsIHN0YXRpYyBpbnQgQXJyYXlDb25z
dHJ1Y3RvciA9IDE0OyAvLyBYW106Om5ldwogCXB1YmxpYyBzdGF0aWMgZmluYWwgaW50IEFycmF5
Q2xvbmUgPSAxNTsgLy8gWFtdOjpjbG9uZQogICAgIHB1YmxpYyBzdGF0aWMgZmluYWwgaW50IEZh
Y3RvcnlNZXRob2QgPSAxNjsgLy8gZm9yIGluZHkgY2FsbCB0byBwcml2YXRlIGNvbnN0cnVjdG9y
LgogICAgIHB1YmxpYyBzdGF0aWMgZmluYWwgaW50IERlc2VyaWFsaXplTGFtYmRhID0gMTc7IC8v
IEZvciBzdXBwb3J0aW5nIGxhbWJkYSBkZXNlcmlhbGl6YXRpb24uCisgICAgcHVibGljIHN0YXRp
YyBmaW5hbCBpbnQgQ2hhbm5lbGlzZVBhcmFtc1RvVmFyQXJncyA9IDE4OwogICAgIAogCXB1Ymxp
YyBpbnQgc291cmNlU3RhcnQgPSAwOyAvLyBzdGFydCBwb3NpdGlvbiBvZiB0aGUgbWF0Y2hpbmcg
ZGVjbGFyYXRpb24KIAlwdWJsaWMgaW50IGluZGV4OyAvLyB1c2VkIGZvciBzb3J0aW5nIGFjY2Vz
cyBtZXRob2RzIGluIHRoZSBjbGFzcyBmaWxlCiAJcHVibGljIGludCBmYWtlUGFkZGVkUGFyYW1l
dGVycyA9IDA7IC8vIGFkZGVkIGluIHN5bnRoZXRpYyBjb25zdHJ1Y3RvciB0byBhdm9pZCBuYW1l
IGNsYXNoLgogCisJcHVibGljIFN5bnRoZXRpY01ldGhvZEJpbmRpbmcoTWV0aG9kQmluZGluZyBp
bnB1dE1ldGhvZCwgTWV0aG9kQmluZGluZyB0YXJnZXRNZXRob2QsIGNoYXIgW10gc2VsZWN0b3Is
IFNvdXJjZVR5cGVCaW5kaW5nIGRlY2xhcmluZ0NsYXNzKSB7CisJICAgIHRoaXMuZGVjbGFyaW5n
Q2xhc3MgPSBkZWNsYXJpbmdDbGFzczsKKwkJdGhpcy5wdXJwb3NlID0gU3ludGhldGljTWV0aG9k
QmluZGluZy5DaGFubmVsaXNlUGFyYW1zVG9WYXJBcmdzOworCSAgICB0aGlzLm1vZGlmaWVycyA9
ICh0YXJnZXRNZXRob2QubW9kaWZpZXJzIHwgQ2xhc3NGaWxlQ29uc3RhbnRzLkFjY0JyaWRnZSB8
IENsYXNzRmlsZUNvbnN0YW50cy5BY2NTeW50aGV0aWMpICYgfihDbGFzc0ZpbGVDb25zdGFudHMu
QWNjU3luY2hyb25pemVkIHwgQ2xhc3NGaWxlQ29uc3RhbnRzLkFjY0Fic3RyYWN0IHwgQ2xhc3NG
aWxlQ29uc3RhbnRzLkFjY05hdGl2ZSAgfCBDbGFzc0ZpbGVDb25zdGFudHMuQWNjRmluYWwgfCBF
eHRyYUNvbXBpbGVyTW9kaWZpZXJzLkFjY0dlbmVyaWNTaWduYXR1cmUgfCBDbGFzc0ZpbGVDb25z
dGFudHMuQWNjVmFyYXJncyk7CisJCXRoaXMudGFnQml0cyB8PSAoVGFnQml0cy5Bbm5vdGF0aW9u
UmVzb2x2ZWQgfCBUYWdCaXRzLkRlcHJlY2F0ZWRBbm5vdGF0aW9uUmVzb2x2ZWQpOworCSAgICB0
aGlzLnJldHVyblR5cGUgPSBpbnB1dE1ldGhvZC5yZXR1cm5UeXBlOworCSAgICB0aGlzLnRocm93
bkV4Y2VwdGlvbnMgPSBpbnB1dE1ldGhvZC50aHJvd25FeGNlcHRpb25zOworCSAgICB0aGlzLnRh
cmdldE1ldGhvZCA9IHRhcmdldE1ldGhvZDsKKwkJU3ludGhldGljTWV0aG9kQmluZGluZ1tdIGtu
b3duQWNjZXNzTWV0aG9kcyA9IGRlY2xhcmluZ0NsYXNzLnN5bnRoZXRpY01ldGhvZHMoKTsKKwkJ
aW50IG1ldGhvZElkID0ga25vd25BY2Nlc3NNZXRob2RzID09IG51bGwgPyAwIDoga25vd25BY2Nl
c3NNZXRob2RzLmxlbmd0aDsKKwkJdGhpcy5pbmRleCA9IG1ldGhvZElkOworCQl0aGlzLmlucHV0
TWV0aG9kID0gaW5wdXRNZXRob2Q7CisJCXRoaXMuc2VsZWN0b3IgPSBzZWxlY3RvcjsKKwkJaW50
IGxlbmd0aCA9IGlucHV0TWV0aG9kLnBhcmFtZXRlcnMubGVuZ3RoOworCQl0aGlzLnBhcmFtZXRl
cnMgPSBuZXcgVHlwZUJpbmRpbmdbbGVuZ3RoXTsKKwkJaW50IGN1cnJJbmR4OworCQlpbnQgaiA9
IHRhcmdldE1ldGhvZC5wYXJhbWV0ZXJzLmxlbmd0aCAtIDE7CisJCWZvciAoY3VyckluZHggPSAw
OyBjdXJySW5keCA8IGo7IGN1cnJJbmR4KyspIHsKKwkJCXRoaXMucGFyYW1ldGVyc1tjdXJySW5k
eF0gPSB0YXJnZXRNZXRob2QucGFyYW1ldGVyc1tjdXJySW5keF07CisJCX0KKwkJVHlwZUJpbmRp
bmcgdGIgPSAoKEFycmF5QmluZGluZyl0YXJnZXRNZXRob2QucGFyYW1ldGVyc1tqXSkuZWxlbWVu
dHNUeXBlKCk7CisJCWZvciAoOyBjdXJySW5keCA8IGxlbmd0aDsgY3VyckluZHgrKykgeworCQkJ
dGhpcy5wYXJhbWV0ZXJzW2N1cnJJbmR4XSA9IHRiOworCQl9CisJfQorCiAJcHVibGljIFN5bnRo
ZXRpY01ldGhvZEJpbmRpbmcoRmllbGRCaW5kaW5nIHRhcmdldEZpZWxkLCBib29sZWFuIGlzUmVh
ZEFjY2VzcywgYm9vbGVhbiBpc1N1cGVyQWNjZXNzLCBSZWZlcmVuY2VCaW5kaW5nIGRlY2xhcmlu
Z0NsYXNzKSB7CiAKIAkJdGhpcy5tb2RpZmllcnMgPSBDbGFzc0ZpbGVDb25zdGFudHMuQWNjRGVm
YXVsdCB8IENsYXNzRmlsZUNvbnN0YW50cy5BY2NTdGF0aWMgfCBDbGFzc0ZpbGVDb25zdGFudHMu
QWNjU3ludGhldGljOwogCQl0aGlzLnRhZ0JpdHMgfD0gKFRhZ0JpdHMuQW5ub3RhdGlvblJlc29s
dmVkIHwgVGFnQml0cy5EZXByZWNhdGVkQW5ub3RhdGlvblJlc29sdmVkKTsKIAkJU291cmNlVHlw
ZUJpbmRpbmcgZGVjbGFyaW5nU291cmNlVHlwZSA9IChTb3VyY2VUeXBlQmluZGluZykgZGVjbGFy
aW5nQ2xhc3M7
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>239322</attachid>
            <date>2014-01-26 03:35:00 -0500</date>
            <delta_ts>2014-01-26 09:02:43 -0500</delta_ts>
            <desc>Code patch and testcase</desc>
            <filename>Bug-406744--full-2.patch</filename>
            <type>text/plain</type>
            <size>28670</size>
            <attacher name="ANIRBAN CHAKRABORTY">anchakrk</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0xhbWJkYUV4cHJlc3Np
b25zVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTGFtYmRhRXhwcmVz
c2lvbnNUZXN0LmphdmEKaW5kZXggNDc5ODg5Mi4uZWZmMjk4ZCAxMDA2NDQKLS0tIGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTGFtYmRhRXhwcmVzc2lvbnNUZXN0LmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTGFtYmRhRXhwcmVzc2lvbnNUZXN0LmphdmEK
QEAgLTI0MjEsOSArMjQyMSwxMDQgQEAKIAkJCQkiCX1cbiIgKwogCQkJCSJ9XG4iLAogCQl9LAog
CQkiOTkiKTsKIH0KKy8vQnVnIDQwNjc0NCAtIFsxLjhdW2NvbXBpbGVyXVtjb2RlZ2VuXSBMYW1i
ZGFDb252ZXJzaW9uRXhjZXB0aW9uIHNlZW4gd2hlbiBtZXRob2QgcmVmZXJlbmNlIHRhcmdldHMg
YSB2YXJhcmdzIG1ldGhvZC4KKy8vaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTQwNjc0NAorcHVibGljIHZvaWQgdGVzdDQwNjc0NGEoKSB7CisJdGhpcy5ydW5D
b25mb3JtVGVzdCgKKwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJIlguamF2YSIsCisJCQkJImludGVy
ZmFjZSBJIHtcbiIgKworCQkJCSIJdm9pZCBmb28oSW50ZWdlciBhMSwgSW50ZWdlciBhMiwgU3Ry
aW5nIGEzKTtcbiIgKworCQkJCSJ9XG4iICsKKwkJCQkiY2xhc3MgWSB7XG4iICsKKwkJCQkiCXN0
YXRpYyB2b2lkIG0oTnVtYmVyIGExLCBPYmplY3QuLi4gcmVzdCkge1xuIiArIAorCQkJCSIJCVN5
c3RlbS5vdXQucHJpbnRsbihhMSk7XG4iICsKKwkJCQkiCQlwcmludChyZXN0KTtcbiIgKworCQkJ
CSIJfVxuIiArCisJCQkJIglzdGF0aWMgdm9pZCBwcmludCAoT2JqZWN0IFtdIG8pIHtcbiIgKwor
CQkJCSIJCWZvciAoaW50IGkgPSAwOyBpIDwgby5sZW5ndGg7IGkrKylcbiIgKworCQkJCSIJCQlT
eXN0ZW0ub3V0LnByaW50bG4ob1tpXSk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iICsK
KwkJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWFp
bihTdHJpbmcgW10gYXJncykge1xuIiArCisJCQkJIgkJSSBpID0gWTo6bTtcbiIgKworCQkJCSIJ
CWkuZm9vKDEwLCAyMCwgXCIxMCwgMjBcIik7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4i
LAorCQkJfSwKKwkJCSIxMFxuIiArCisJCQkiMjBcbiIgKworCQkJIjEwLCAyMCIKKwkJCSk7Cit9
CitwdWJsaWMgdm9pZCB0ZXN0NDA2NzQ0YigpIHsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQkJ
bmV3IFN0cmluZ1tdIHsKKwkJCQkiWC5qYXZhIiwKKwkJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJ
CQkJIglpbnQgZm9vKEludGVnZXIgYTEsIEludGVnZXIgYTIsIFN0cmluZyBhMyk7XG4iICsKKwkJ
CQkifVxuIiArCisJCQkJImNsYXNzIFkge1xuIiArCisJCQkJIglzdGF0aWMgaW50IG0oTnVtYmVy
IGExLCBPYmplY3QuLi4gcmVzdCkge1xuIiArIAorCQkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbihh
MSk7XG4iICsKKwkJCQkiCQlwcmludChyZXN0KTtcbiIgKworCQkJCSIJCXJldHVybiAxO1xuIiAr
CisJCQkJIgl9XG4iICsKKwkJCQkiCXN0YXRpYyB2b2lkIHByaW50IChPYmplY3QgW10gbykge1xu
IiArCisJCQkJIgkJZm9yIChpbnQgaSA9IDA7IGkgPCBvLmxlbmd0aDsgaSsrKVxuIiArCisJCQkJ
IgkJCVN5c3RlbS5vdXQucHJpbnRsbihvW2ldKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn1c
biIgKworCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCQkiCXB1YmxpYyBzdGF0aWMgdm9p
ZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCQkiCQlJIGkgPSBZOjptO1xuIiArCisJ
CQkJIgkJaS5mb28oMTAsIDIwLCBcIjEwLCAyMFwiKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJ
In1cbiIsCisJCQl9LAorCQkJIjEwXG4iICsKKwkJCSIyMFxuIiArCisJCQkiMTAsIDIwIgorCQkJ
KTsKK30KK3B1YmxpYyB2b2lkIHRlc3Q0MDY3NDRjKCkgeworCXRoaXMucnVuQ29uZm9ybVRlc3Qo
CisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEiLAorCQkJCSJpbnRlcmZhY2UgSSB7XG4i
ICsKKwkJCQkiCXZvaWQgZm9vKEludGVnZXIgYTEsIEludGVnZXIgYTIsIFN0cmluZyBhMyk7XG4i
ICsKKwkJCQkifVxuIiArCisJCQkJImNsYXNzIFkge1xuIiArCisJCQkJIgkgWShOdW1iZXIgYTEs
IE9iamVjdC4uLiByZXN0KSB7XG4iICsgCisJCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKGExKTtc
biIgKworCQkJCSIJCXByaW50KHJlc3QpO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkiCXN0YXRp
YyB2b2lkIG0oTnVtYmVyIGExLCBPYmplY3QuLi4gcmVzdCkge1xuIiArIAorCQkJCSIJCVN5c3Rl
bS5vdXQucHJpbnRsbihhMSk7XG4iICsKKwkJCQkiCQlwcmludChyZXN0KTtcbiIgKworCQkJCSIJ
fVxuIiArCisJCQkJIglzdGF0aWMgdm9pZCBwcmludCAoT2JqZWN0IFtdIG8pIHtcbiIgKworCQkJ
CSIJCWZvciAoaW50IGkgPSAwOyBpIDwgby5sZW5ndGg7IGkrKylcbiIgKworCQkJCSIJCQlTeXN0
ZW0ub3V0LnByaW50bG4ob1tpXSk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iICsKKwkJ
CQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihT
dHJpbmcgW10gYXJncykge1xuIiArCisJCQkJIgkJSSBpID0gWTo6bmV3O1xuIiArCisJCQkJIgkJ
aS5mb28oMTAsIDIwLCBcIjEwLCAyMFwiKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn1cbiIs
CisJCQl9LAorCQkJIjEwXG4iICsKKwkJCSIyMFxuIiArCisJCQkiMTAsIDIwIgorCQkJKTsKK30K
KwogcHVibGljIHN0YXRpYyBDbGFzcyB0ZXN0Q2xhc3MoKSB7CiAJcmV0dXJuIExhbWJkYUV4cHJl
c3Npb25zVGVzdC5jbGFzczsKIH0KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9y
ZWdyZXNzaW9uL051bGxUeXBlQW5ub3RhdGlvblRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxl
ci9yZWdyZXNzaW9uL051bGxUeXBlQW5ub3RhdGlvblRlc3QuamF2YQppbmRleCA2MjRkNWE2Li5m
NTRmNThjIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9OdWxsVHlw
ZUFubm90YXRpb25UZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29t
cGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24v
TnVsbFR5cGVBbm5vdGF0aW9uVGVzdC5qYXZhCkBAIC0xLDcgKzEsNyBAQAogLyoqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAxMiwgMjAxMyBHSyBTb2Z0d2FyZSBBRyBh
bmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDEyLCAyMDE0IEdLIFNvZnR3YXJlIEFHIGFu
ZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBh
Y2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRl
cm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFu
aWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3
LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAogICogCkBAIC0zNDI1LDEyICszNDI1LDEx
IEBACiAJCSIJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF5eXl5eXl5eXlxuIiAr
IAogCQkiTnVsbCB0eXBlIG1pc21hdGNoIGF0IHBhcmFtZXRlciAzOiByZXF1aXJlZCBcJ0BOb25O
dWxsIEZpbGVWaXNpdE9wdGlvblwnIGJ1dCBwcm92aWRlZCBcJ0BOdWxsYWJsZSBGaWxlVmlzaXRP
cHRpb25cJyB2aWEgbWV0aG9kIGRlc2NyaXB0b3IgVHJpRnVuYzxQYXRoLEZpbGVWaXNpdE9wdGlv
bixGaWxlVmlzaXRPcHRpb24sU3RyZWFtPFBhdGg+Pi5hcHBseShQYXRoLCBGaWxlVmlzaXRPcHRp
b24sIEZpbGVWaXNpdE9wdGlvbilcbiIgKyAKIAkJIi0tLS0tLS0tLS1cbiIpOwogfQogCi0vLyBE
SVNBQkxFRCwgY3VycmVudGx5IHRocm93cyBqYXZhLmxhbmcuQm9vdHN0cmFwTWV0aG9kRXJyb3Ig
YXQgcnVudGltZToKLXB1YmxpYyB2b2lkIF90ZXN0QnVnNDI0NjM3X2NvbW1lbnQzKCkgeworcHVi
bGljIHZvaWQgdGVzdEJ1ZzQyNDYzN19jb21tZW50MygpIHsKIAlydW5Db25mb3JtVGVzdCgKIAkJ
bmV3IFN0cmluZ1tdIHsKIAkJCSJWYXJBcmdzTWV0aG9kUmVmZXJlbmNlVGVzdC5qYXZhIiwKIAkJ
CSJpbXBvcnQgamF2YS51dGlsLmZ1bmN0aW9uLkNvbnN1bWVyO1xuIiArIAogCQkJInB1YmxpYyBj
bGFzcyBWYXJBcmdzTWV0aG9kUmVmZXJlbmNlVGVzdCB7XG4iICsgCmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvQ2xhc3NGaWxlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvQ2xhc3NGaWxlLmphdmEKaW5kZXggYjkwZWViYi4u
OGJiNTZlZSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL0NsYXNzRmlsZS5qYXZhCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9D
bGFzc0ZpbGUuamF2YQpAQCAtODk5LDEwICs4OTksMTMgQEAKIAkJCQkJCWNhc2UgU3ludGhldGlj
TWV0aG9kQmluZGluZy5TdXBlck1ldGhvZEFjY2VzcyA6CiAJCQkJCQljYXNlIFN5bnRoZXRpY01l
dGhvZEJpbmRpbmcuQnJpZGdlTWV0aG9kIDoKIAkJCQkJCQkvLyBnZW5lcmF0ZSBhIG1ldGhvZCBp
bmZvIHRvIGVtdWxhdGUgYW4gYWNjZXNzIHRvIGEgbm9uLWFjY2Vzc2libGUgbWV0aG9kIC8gc3Vw
ZXItbWV0aG9kIG9yIGJyaWRnZSBtZXRob2QKIAkJCQkJCQlhZGRTeW50aGV0aWNNZXRob2RBY2Nl
c3NNZXRob2Qoc3ludGhldGljTWV0aG9kKTsKIAkJCQkJCQlicmVhazsKKwkJCQkJCWNhc2UgU3lu
dGhldGljTWV0aG9kQmluZGluZy5DaGFubmVsaXNlUGFyYW1zVG9WYXJBcmdzIDoKKwkJCQkJCQlh
ZGRTeW50aGV0aWNNZXRob2RBY2Nlc3NNZXRob2RGb3JWYXJBcmdzKHN5bnRoZXRpY01ldGhvZCk7
CisJCQkJCQkJYnJlYWs7CiAJCQkJCQljYXNlIFN5bnRoZXRpY01ldGhvZEJpbmRpbmcuQ29uc3Ry
dWN0b3JBY2Nlc3MgOgogCQkJCQkJCS8vIGdlbmVyYXRlIGEgbWV0aG9kIGluZm8gdG8gZW11bGF0
ZSBhbiBhY2Nlc3MgdG8gYSBub24tYWNjZXNzaWJsZSBjb25zdHJ1Y3RvcgogCQkJCQkJCWFkZFN5
bnRoZXRpY0NvbnN0cnVjdG9yQWNjZXNzTWV0aG9kKHN5bnRoZXRpY01ldGhvZCk7CiAJCQkJCQkJ
YnJlYWs7CiAJCQkJCQljYXNlIFN5bnRoZXRpY01ldGhvZEJpbmRpbmcuRW51bVZhbHVlcyA6CkBA
IC0xMjA2LDEwICsxMjA5LDM0IEBACiAJCWludCBjb2RlQXR0cmlidXRlT2Zmc2V0ID0gdGhpcy5j
b250ZW50c09mZnNldDsKIAkJYXR0cmlidXRlTnVtYmVyKys7IC8vIGFkZCBjb2RlIGF0dHJpYnV0
ZQogCQlnZW5lcmF0ZUNvZGVBdHRyaWJ1dGVIZWFkZXIoKTsKIAkJdGhpcy5jb2RlU3RyZWFtLmlu
aXQodGhpcyk7CiAJCXRoaXMuY29kZVN0cmVhbS5nZW5lcmF0ZVN5bnRoZXRpY0JvZHlGb3JNZXRo
b2RBY2Nlc3MobWV0aG9kQmluZGluZyk7CisJCWNvbXBsZXRlQ29kZUF0dHJpYnV0ZUZvclN5bnRo
ZXRpY01ldGhvZCgKKwkJCW1ldGhvZEJpbmRpbmcsCisJCQljb2RlQXR0cmlidXRlT2Zmc2V0LAor
CQkJKChTb3VyY2VUeXBlQmluZGluZykgbWV0aG9kQmluZGluZy5kZWNsYXJpbmdDbGFzcykKKwkJ
CQkuc2NvcGUKKwkJCQkucmVmZXJlbmNlQ29tcGlsYXRpb25Vbml0KCkKKwkJCQkuY29tcGlsYXRp
b25SZXN1bHQKKwkJCQkuZ2V0TGluZVNlcGFyYXRvclBvc2l0aW9ucygpKTsKKwkJLy8gdXBkYXRl
IHRoZSBudW1iZXIgb2YgYXR0cmlidXRlcworCQl0aGlzLmNvbnRlbnRzW21ldGhvZEF0dHJpYnV0
ZU9mZnNldCsrXSA9IChieXRlKSAoYXR0cmlidXRlTnVtYmVyID4+IDgpOworCQl0aGlzLmNvbnRl
bnRzW21ldGhvZEF0dHJpYnV0ZU9mZnNldF0gPSAoYnl0ZSkgYXR0cmlidXRlTnVtYmVyOworCX0K
KworCXB1YmxpYyB2b2lkIGFkZFN5bnRoZXRpY01ldGhvZEFjY2Vzc01ldGhvZEZvclZhckFyZ3Mo
U3ludGhldGljTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nKSB7CisJCWdlbmVyYXRlTWV0aG9k
SW5mb0hlYWRlcihtZXRob2RCaW5kaW5nKTsKKwkJaW50IG1ldGhvZEF0dHJpYnV0ZU9mZnNldCA9
IHRoaXMuY29udGVudHNPZmZzZXQ7CisJCS8vIHRoaXMgd2lsbCBhZGQgZXhjZXB0aW9uIGF0dHJp
YnV0ZSwgc3ludGhldGljIGF0dHJpYnV0ZSwgZGVwcmVjYXRlZCBhdHRyaWJ1dGUsLi4uCisJCWlu
dCBhdHRyaWJ1dGVOdW1iZXIgPSBnZW5lcmF0ZU1ldGhvZEluZm9BdHRyaWJ1dGVzKG1ldGhvZEJp
bmRpbmcpOworCQkvLyBDb2RlIGF0dHJpYnV0ZQorCQlpbnQgY29kZUF0dHJpYnV0ZU9mZnNldCA9
IHRoaXMuY29udGVudHNPZmZzZXQ7CisJCWF0dHJpYnV0ZU51bWJlcisrOyAvLyBhZGQgY29kZSBh
dHRyaWJ1dGUKKwkJZ2VuZXJhdGVDb2RlQXR0cmlidXRlSGVhZGVyKCk7CisJCXRoaXMuY29kZVN0
cmVhbS5pbml0KHRoaXMpOworCQl0aGlzLmNvZGVTdHJlYW0uZ2VuZXJhdGVTeW50aGV0aWNCb2R5
Rm9yTWV0aG9kQWNjZXNzRm9yVmFyQXJncyhtZXRob2RCaW5kaW5nKTsKIAkJY29tcGxldGVDb2Rl
QXR0cmlidXRlRm9yU3ludGhldGljTWV0aG9kKAogCQkJbWV0aG9kQmluZGluZywKIAkJCWNvZGVB
dHRyaWJ1dGVPZmZzZXQsCiAJCQkoKFNvdXJjZVR5cGVCaW5kaW5nKSBtZXRob2RCaW5kaW5nLmRl
Y2xhcmluZ0NsYXNzKQogCQkJCS5zY29wZQpAQCAtMjg3NiwxMiArMjkwMywxNCBAQAogCQlpbnQg
YXR0cmlidXRlTGVuZ3RoUG9zaXRpb24gPSBsb2NhbENvbnRlbnRzT2Zmc2V0OwogCQlsb2NhbENv
bnRlbnRzT2Zmc2V0ICs9IDQ7CiAJCXRoaXMuY29udGVudHNbbG9jYWxDb250ZW50c09mZnNldCsr
XSA9IChieXRlKSAobnVtYmVyT2ZCb290c3RyYXBzID4+IDgpOwogCQl0aGlzLmNvbnRlbnRzW2xv
Y2FsQ29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgbnVtYmVyT2ZCb290c3RyYXBzOwogCQlmb3Ig
KGludCBpID0gMDsgaSA8IG51bWJlck9mQm9vdHN0cmFwczsgaSsrKSB7Ci0JCQlGdW5jdGlvbmFs
RXhwcmVzc2lvbiBmdW5jdGlvbmFsID0gKEZ1bmN0aW9uYWxFeHByZXNzaW9uKSBmdW5jdGlvbmFs
RXhwcmVzc2lvbkxpc3QuZ2V0KGkpOwotCQkJCisJCQlPYmplY3QgdGVtcCA9IGZ1bmN0aW9uYWxF
eHByZXNzaW9uTGlzdC5nZXQoaSk7CisKKwkJCWlmICh0ZW1wIGluc3RhbmNlb2YgRnVuY3Rpb25h
bEV4cHJlc3Npb24pIHsKKwkJCUZ1bmN0aW9uYWxFeHByZXNzaW9uIGZ1bmN0aW9uYWwgPSAoRnVu
Y3Rpb25hbEV4cHJlc3Npb24pdGVtcDsKIAkJCVR5cGVCaW5kaW5nW10gbWFya2VySW50ZXJmYWNl
cyA9IG51bGw7CiAJCQlpZiAoZnVuY3Rpb25hbCBpbnN0YW5jZW9mIExhbWJkYUV4cHJlc3Npb24g
JiYgCiAJCQkJICAgKCgobWFya2VySW50ZXJmYWNlcz0oKExhbWJkYUV4cHJlc3Npb24pZnVuY3Rp
b25hbCkuZ2V0TWFya2VySW50ZXJmYWNlcygpKSAhPSBudWxsKSB8fAogCQkJCSAgIAkoKExhbWJk
YUV4cHJlc3Npb24pZnVuY3Rpb25hbCkuaXNTZXJpYWxpemFibGUpKSB7CiAJCQkJCkBAIC0yOTY2
LDEwICsyOTk1LDM2IEBACiAJCiAJCQkJY2hhciBbXSBpbnN0YW50aWF0ZWRTaWduYXR1cmUgPSBm
dW5jdGlvbmFsLmRlc2NyaXB0b3Iuc2lnbmF0dXJlKCk7CiAJCQkJaW50IG1ldGhvZFR5cGVJbmRl
eCA9IHRoaXMuY29uc3RhbnRQb29sLmxpdGVyYWxJbmRleEZvck1ldGhvZFR5cGUoaW5zdGFudGlh
dGVkU2lnbmF0dXJlKTsKIAkJCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10g
PSAoYnl0ZSkgKG1ldGhvZFR5cGVJbmRleCA+PiA4KTsKIAkJCQl0aGlzLmNvbnRlbnRzW2xvY2Fs
Q29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgbWV0aG9kVHlwZUluZGV4OwkJCQkKKwkJCX0KKwkJ
CX0gZWxzZSBpZiAodGVtcCBpbnN0YW5jZW9mIFN5bnRoZXRpY01ldGhvZEJpbmRpbmcgJiYgKChT
eW50aGV0aWNNZXRob2RCaW5kaW5nKXRlbXApLnB1cnBvc2UgPT0gU3ludGhldGljTWV0aG9kQmlu
ZGluZy5DaGFubmVsaXNlUGFyYW1zVG9WYXJBcmdzKSB7CisJCQkJaWYgKGluZGV4Rm9yTWV0YUZh
Y3RvcnkgPT0gMCkgeworCQkJCQlpbmRleEZvck1ldGFGYWN0b3J5ID0gdGhpcy5jb25zdGFudFBv
b2wubGl0ZXJhbEluZGV4Rm9yTWV0aG9kSGFuZGxlKENsYXNzRmlsZUNvbnN0YW50cy5NZXRob2RI
YW5kbGVSZWZLaW5kSW52b2tlU3RhdGljLCBqYXZhTGFuZ0ludm9rZUxhbWJkYU1ldGFmYWN0b3J5
LCAKKwkJCQkJCQlDb25zdGFudFBvb2wuTUVUQUZBQ1RPUlksIENvbnN0YW50UG9vbC5KQVZBX0xB
TkdfSU5WT0tFX0xBTUJEQU1FVEFGQUNUT1JZX01FVEFGQUNUT1JZX1NJR05BVFVSRSwgZmFsc2Up
OworCQkJCX0KKwkJCQlTeW50aGV0aWNNZXRob2RCaW5kaW5nIHN5bnRoZXRpYyA9IChTeW50aGV0
aWNNZXRob2RCaW5kaW5nKSB0ZW1wOworCQkJCQorCQkJCXRoaXMuY29udGVudHNbbG9jYWxDb250
ZW50c09mZnNldCsrXSA9IChieXRlKSAoaW5kZXhGb3JNZXRhRmFjdG9yeSA+PiA4KTsKKwkJCQl0
aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgaW5kZXhGb3JNZXRh
RmFjdG9yeTsKKwkJCQkKKwkJCQkvLyB1MiBudW1fYm9vdHN0cmFwX2FyZ3VtZW50cworCQkJCXRo
aXMuY29udGVudHNbbG9jYWxDb250ZW50c09mZnNldCsrXSA9IDA7CisJCQkJdGhpcy5jb250ZW50
c1tsb2NhbENvbnRlbnRzT2Zmc2V0KytdID0gKGJ5dGUpIDM7CisJCQkJCisJCQkJaW50IGZ1bmN0
aW9uYWxEZXNjcmlwdG9ySW5kZXggPSB0aGlzLmNvbnN0YW50UG9vbC5saXRlcmFsSW5kZXhGb3JN
ZXRob2RUeXBlKHN5bnRoZXRpYy5pbnB1dE1ldGhvZC5vcmlnaW5hbCgpLnNpZ25hdHVyZSgpKTsK
KwkJCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgKGZ1bmN0
aW9uYWxEZXNjcmlwdG9ySW5kZXggPj4gOCk7CisJCQkJdGhpcy5jb250ZW50c1tsb2NhbENvbnRl
bnRzT2Zmc2V0KytdID0gKGJ5dGUpIGZ1bmN0aW9uYWxEZXNjcmlwdG9ySW5kZXg7CisJCisJCQkJ
aW50IG1ldGhvZEhhbmRsZUluZGV4ID0gdGhpcy5jb25zdGFudFBvb2wubGl0ZXJhbEluZGV4Rm9y
TWV0aG9kSGFuZGxlKHN5bnRoZXRpYy5vcmlnaW5hbCgpKTsgLy8gU3BlYWsgb2YgIiBpbXBsZW1l
bnRhdGlvbiIgKGVyYXNlZCkgdmVyc2lvbiBoZXJlLCBhZGFwdGF0aW9ucyBkZXNjcmliZWQgYmVs
b3cuCisJCQkJdGhpcy5jb250ZW50c1tsb2NhbENvbnRlbnRzT2Zmc2V0KytdID0gKGJ5dGUpICht
ZXRob2RIYW5kbGVJbmRleCA+PiA4KTsKKwkJCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVudHNP
ZmZzZXQrK10gPSAoYnl0ZSkgbWV0aG9kSGFuZGxlSW5kZXg7CisJCisJCQkJaW50IG1ldGhvZFR5
cGVJbmRleCA9IHRoaXMuY29uc3RhbnRQb29sLmxpdGVyYWxJbmRleEZvck1ldGhvZFR5cGUoc3lu
dGhldGljLmlucHV0TWV0aG9kLnNpZ25hdHVyZSgpKTsKKwkJCQl0aGlzLmNvbnRlbnRzW2xvY2Fs
Q29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgKG1ldGhvZFR5cGVJbmRleCA+PiA4KTsKKwkJCQl0
aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgbWV0aG9kVHlwZUlu
ZGV4OwkJCQkJCQkJCiAJCQl9CiAJCX0KIAogCQlpbnQgYXR0cmlidXRlTGVuZ3RoID0gbG9jYWxD
b250ZW50c09mZnNldCAtIGF0dHJpYnV0ZUxlbmd0aFBvc2l0aW9uIC0gNDsKIAkJdGhpcy5jb250
ZW50c1thdHRyaWJ1dGVMZW5ndGhQb3NpdGlvbisrXSA9IChieXRlKSAoYXR0cmlidXRlTGVuZ3Ro
ID4+IDI0KTsKQEAgLTUxMTgsMTAgKzUxNzMsMTggQEAKIAkJdGhpcy5ib290c3RyYXBNZXRob2Rz
LmFkZChleHByZXNzaW9uKTsKIAkJLy8gUmVjb3JkIHdoaWNoIGJvb3RzdHJhcCBtZXRob2Qgd2Fz
IGFzc2lnbmVkIHRvIHRoZSBleHByZXNzaW9uCiAJCWV4cHJlc3Npb24uYm9vdHN0cmFwTWV0aG9k
TnVtYmVyID0gdGhpcy5ib290c3RyYXBNZXRob2RzLnNpemUoKSAtIDE7CiAJCXJldHVybiB0aGlz
LmJvb3RzdHJhcE1ldGhvZHMuc2l6ZSgpIC0gMTsKIAl9CisJCisJcHVibGljIGludCByZWNvcmRC
b290c3RyYXBNZXRob2QoU3ludGhldGljTWV0aG9kQmluZGluZyBzbSkgeworCQlpZiAodGhpcy5i
b290c3RyYXBNZXRob2RzID09IG51bGwpIHsKKwkJCXRoaXMuYm9vdHN0cmFwTWV0aG9kcyA9IG5l
dyBBcnJheUxpc3QoKTsKKwkJfQorCQl0aGlzLmJvb3RzdHJhcE1ldGhvZHMuYWRkKHNtKTsKKwkJ
cmV0dXJuIHRoaXMuYm9vdHN0cmFwTWV0aG9kcy5zaXplKCkgLSAxOworCX0KIAogCXB1YmxpYyB2
b2lkIHJlc2V0KFNvdXJjZVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nKSB7CiAJCS8vIHRoZSBjb2Rl
IHN0cmVhbSBpcyByZWluaXRpYWxpemVkIGZvciBlYWNoIG1ldGhvZAogCQlmaW5hbCBDb21waWxl
ck9wdGlvbnMgb3B0aW9ucyA9IHR5cGVCaW5kaW5nLnNjb3BlLmNvbXBpbGVyT3B0aW9ucygpOwog
CQl0aGlzLnJlZmVyZW5jZUJpbmRpbmcgPSB0eXBlQmluZGluZzsKZGlmZiAtLWdpdCBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9hc3QvUmVmZXJlbmNlRXhwcmVzc2lvbi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9SZWZlcmVuY2VFeHBy
ZXNzaW9uLmphdmEKaW5kZXggYzEyNzMyYy4uMmYyYWMyMiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Fz
dC9SZWZlcmVuY2VFeHByZXNzaW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9SZWZlcmVuY2VFeHBy
ZXNzaW9uLmphdmEKQEAgLTE3MCwxMSArMTcwLDE4IEBACiAJCX0KIAkJYnVmZmVyLmFwcGVuZCgn
KScpOwogCQlidWZmZXIuYXBwZW5kKCdMJyk7CiAJCWJ1ZmZlci5hcHBlbmQodGhpcy5yZXNvbHZl
ZFR5cGUuY29uc3RhbnRQb29sTmFtZSgpKTsKIAkJYnVmZmVyLmFwcGVuZCgnOycpOwotCQlpbnQg
aW52b2tlRHluYW1pY051bWJlciA9IGNvZGVTdHJlYW0uY2xhc3NGaWxlLnJlY29yZEJvb3RzdHJh
cE1ldGhvZCh0aGlzKTsKKwkJaW50IGludm9rZUR5bmFtaWNOdW1iZXI7CisJCWlmICh0aGlzLmJp
bmRpbmcuaXNWYXJhcmdzKCkgJiYgISh0aGlzLmJpbmRpbmcgaW5zdGFuY2VvZiBTeW50aGV0aWNN
ZXRob2RCaW5kaW5nKSAmJiAhdGhpcy5iaW5kaW5nLmFyZVBhcmFtZXRlckVyYXN1cmVzRXF1YWwo
dGhpcy5kZXNjcmlwdG9yKSkgeworCQkJU3ludGhldGljTWV0aG9kQmluZGluZyBzbSA9IHNvdXJj
ZVR5cGUuYWRkU3ludGhldGljTWV0aG9kRm9yQXJndW1lbnRDaGFubmVsaW5nRm9yVmFyQXJncyh0
aGlzLmRlc2NyaXB0b3IsIHRoaXMuYmluZGluZyk7CisJCQlpbnZva2VEeW5hbWljTnVtYmVyID0g
Y29kZVN0cmVhbS5jbGFzc0ZpbGUucmVjb3JkQm9vdHN0cmFwTWV0aG9kKHNtKTsKKwkJCQorCQl9
IGVsc2UgeworCQkJaW52b2tlRHluYW1pY051bWJlciA9IGNvZGVTdHJlYW0uY2xhc3NGaWxlLnJl
Y29yZEJvb3RzdHJhcE1ldGhvZCh0aGlzKTsKKwkJfQogCQljb2RlU3RyZWFtLmludm9rZUR5bmFt
aWMoaW52b2tlRHluYW1pY051bWJlciwgYXJndW1lbnRzU2l6ZSwgMSwgdGhpcy5kZXNjcmlwdG9y
LnNlbGVjdG9yLCBidWZmZXIudG9TdHJpbmcoKS50b0NoYXJBcnJheSgpLCAKIAkJCQl0aGlzLmlz
Q29uc3RydWN0b3JSZWZlcmVuY2UoKSwgKHRoaXMubGhzIGluc3RhbmNlb2YgVHlwZVJlZmVyZW5j
ZT8gKFR5cGVSZWZlcmVuY2UpIHRoaXMubGhzIDogbnVsbCksIHRoaXMudHlwZUFyZ3VtZW50cyk7
CiAJCWlmICghdmFsdWVSZXF1aXJlZCkKIAkJCWNvZGVTdHJlYW0ucG9wKCk7CiAJCWNvZGVTdHJl
YW0ucmVjb3JkUG9zaXRpb25zRnJvbShwYywgdGhpcy5zb3VyY2VTdGFydCk7CmRpZmYgLS1naXQg
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvY29kZWdlbi9Db2RlU3RyZWFtLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY29kZWdlbi9Db2RlU3Ry
ZWFtLmphdmEKaW5kZXggNjVmZjdkNi4uODdhNjg5MCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NvZGVn
ZW4vQ29kZVN0cmVhbS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jb2RlZ2VuL0NvZGVTdHJlYW0uamF2YQpA
QCAtMjk2MSwxMCArMjk2MSwxMDggQEAKIAkJCQl0aGlzLmNoZWNrY2FzdChhY2Nlc3NFcmFzdXJl
KTsgLy8gZm9yIGJyaWRnZSBtZXRob2RzCiAJCQl9CiAJCQlhcmV0dXJuKCk7CiAJfQogfQorcHVi
bGljIHZvaWQgZ2VuZXJhdGVTeW50aGV0aWNCb2R5Rm9yTWV0aG9kQWNjZXNzRm9yVmFyQXJncyhT
eW50aGV0aWNNZXRob2RCaW5kaW5nIGFjY2Vzc01ldGhvZCkgeworCWluaXRpYWxpemVNYXhMb2Nh
bHMoYWNjZXNzTWV0aG9kKTsKKwlNZXRob2RCaW5kaW5nIHRhcmdldE1ldGhvZCA9IGFjY2Vzc01l
dGhvZC50YXJnZXRNZXRob2Q7CisJVHlwZUJpbmRpbmdbXSBwYXJhbWV0ZXJzID0gdGFyZ2V0TWV0
aG9kLnBhcmFtZXRlcnM7CisJaW50IGxlbmd0aCA9IHBhcmFtZXRlcnMubGVuZ3RoOworCWlmICgh
KHBhcmFtZXRlcnNbbGVuZ3RoIC0gMV0gaW5zdGFuY2VvZiBBcnJheUJpbmRpbmcpKSB7CisJCXJl
dHVybjsKKwl9CisJVHlwZUJpbmRpbmdbXSBhcmd1bWVudHMgPSBhY2Nlc3NNZXRob2QucHVycG9z
ZSA9PSBTeW50aGV0aWNNZXRob2RCaW5kaW5nLkNoYW5uZWxpc2VQYXJhbXNUb1ZhckFyZ3MKKwkJ
CQkJCQkJCQkJCQk/IGFjY2Vzc01ldGhvZC5wYXJhbWV0ZXJzCisJCQkJCQkJCQkJCQkJOiBudWxs
OworCWludCByZXNvbHZlZFBvc2l0aW9uOworCWlmICh0YXJnZXRNZXRob2QuaXNTdGF0aWMoKSkK
KwkJcmVzb2x2ZWRQb3NpdGlvbiA9IDA7CisJZWxzZSBpZiAodGFyZ2V0TWV0aG9kLmlzQ29uc3Ry
dWN0b3IoKSkgeworCQlyZXNvbHZlZFBvc2l0aW9uID0gMDsKKwkJbmV3Xyh0YXJnZXRNZXRob2Qu
ZGVjbGFyaW5nQ2xhc3MpOworCQlkdXAoKTsKKwl9IGVsc2UgeworCQlhbG9hZF8wKCk7CisJCXJl
c29sdmVkUG9zaXRpb24gPSAxOworCX0KKwlmb3IgKGludCBpID0gMDsgaSA8IGxlbmd0aCAtIDE7
IGkrKykgeworCSAgICBUeXBlQmluZGluZyBwYXJhbWV0ZXIgPSBwYXJhbWV0ZXJzW2ldOworCSAg
ICBpZiAoYXJndW1lbnRzICE9IG51bGwpIHsgLy8gZm9yIGJyaWRnZSBtZXRob2RzCisJCSAgICBU
eXBlQmluZGluZyBhcmd1bWVudCA9IGFyZ3VtZW50c1tpXTsKKwkJCWxvYWQoYXJndW1lbnQsIHJl
c29sdmVkUG9zaXRpb24pOworCSAgICB9IGVsc2UgeworCQkJbG9hZChwYXJhbWV0ZXIsIHJlc29s
dmVkUG9zaXRpb24pOworCQl9CisJCXN3aXRjaChwYXJhbWV0ZXIuaWQpIHsKKwkJCWNhc2UgVHlw
ZUlkcy5UX2xvbmcgOgorCQkJY2FzZSBUeXBlSWRzLlRfZG91YmxlIDoKKwkJCQlyZXNvbHZlZFBv
c2l0aW9uICs9IDI7CisJCQkJYnJlYWs7CisJCQlkZWZhdWx0IDoKKwkJCQlyZXNvbHZlZFBvc2l0
aW9uKys7CisJCQkJYnJlYWs7CisJCX0KKwl9CisJaW50IGFycmF5TGVuZ3RoID0gYXJndW1lbnRz
Lmxlbmd0aCAtIGxlbmd0aCArIDE7CisJZ2VuZXJhdGVJbmxpbmVkVmFsdWUoYXJyYXlMZW5ndGgp
OworCUFycmF5QmluZGluZyB2YXJBcmdUeXBlOworCW5ld0FycmF5KHZhckFyZ1R5cGUgPSAoQXJy
YXlCaW5kaW5nKXBhcmFtZXRlcnNbbGVuZ3RoIC0gMV0pOworCWZvcihpbnQgYXJyYXlJbmRleCA9
IDA7IGFycmF5SW5kZXggPCBhcnJheUxlbmd0aDsgYXJyYXlJbmRleCsrKSB7CisJCWR1cCgpOwor
CQlnZW5lcmF0ZUlubGluZWRWYWx1ZShhcnJheUluZGV4KTsKKwkJbG9hZChUeXBlSWRzLlRfSmF2
YUxhbmdPYmplY3QsIGxlbmd0aCArIGFycmF5SW5kZXggLSAxKTsKKwkJaWYgKFR5cGVCaW5kaW5n
Lm5vdEVxdWFscyhhcmd1bWVudHNbbGVuZ3RoICsgYXJyYXlJbmRleCAtIDFdLCB2YXJBcmdUeXBl
LmVsZW1lbnRzVHlwZSgpKSkgeworCQkJY2hlY2tjYXN0KHZhckFyZ1R5cGUuZWxlbWVudHNUeXBl
KCkpOworCQl9CisJCWFycmF5QXRQdXQodmFyQXJnVHlwZS5lbGVtZW50c1R5cGUoKS5pZCwgZmFs
c2UpOworCX0KKwlpZiAodGFyZ2V0TWV0aG9kLmlzU3RhdGljKCkpCisJCWludm9rZShPcGNvZGVz
Lk9QQ19pbnZva2VzdGF0aWMsIHRhcmdldE1ldGhvZCwgdGFyZ2V0TWV0aG9kLmRlY2xhcmluZ0Ns
YXNzKTsKKwllbHNlIHsKKwkJaWYgKHRhcmdldE1ldGhvZC5pc0NvbnN0cnVjdG9yKCkgfHwgdGFy
Z2V0TWV0aG9kLmlzUHJpdmF0ZSgpKXsKKwkJCWludm9rZShPcGNvZGVzLk9QQ19pbnZva2VzcGVj
aWFsLCB0YXJnZXRNZXRob2QsIHRhcmdldE1ldGhvZC5kZWNsYXJpbmdDbGFzcyk7CisJCX0gZWxz
ZSB7CisJCQlpZiAodGFyZ2V0TWV0aG9kLmRlY2xhcmluZ0NsYXNzLmlzSW50ZXJmYWNlKCkpIHsK
KwkJCQlpbnZva2UoT3Bjb2Rlcy5PUENfaW52b2tlaW50ZXJmYWNlLCB0YXJnZXRNZXRob2QsIG51
bGwgLyogZGVmYXVsdCBkZWNsYXJpbmdDbGFzcyAqLyk7CisJCQl9IGVsc2UgeworCQkJCWludm9r
ZShPcGNvZGVzLk9QQ19pbnZva2V2aXJ0dWFsLCB0YXJnZXRNZXRob2QsIHRhcmdldE1ldGhvZC5k
ZWNsYXJpbmdDbGFzcyk7CisJCQl9CisJCX0KKwl9CisJaWYgKHRhcmdldE1ldGhvZC5yZXR1cm5U
eXBlLmlkICE9IFR5cGVJZHMuVF92b2lkICYmIGFjY2Vzc01ldGhvZC5yZXR1cm5UeXBlLmlkID09
IFR5cGVJZHMuVF92b2lkKSB7CisJCXBvcCgpOworCX0KKwlzd2l0Y2ggKGFjY2Vzc01ldGhvZC5y
ZXR1cm5UeXBlLmlkKSB7CisJCWNhc2UgVHlwZUlkcy5UX3ZvaWQgOgorCQkJcmV0dXJuXygpOwor
CQkJYnJlYWs7CisJCWNhc2UgVHlwZUlkcy5UX2Jvb2xlYW4gOgorCQljYXNlIFR5cGVJZHMuVF9i
eXRlIDoKKwkJY2FzZSBUeXBlSWRzLlRfY2hhciA6CisJCWNhc2UgVHlwZUlkcy5UX3Nob3J0IDoK
KwkJY2FzZSBUeXBlSWRzLlRfaW50IDoKKwkJCWlyZXR1cm4oKTsKKwkJCWJyZWFrOworCQljYXNl
IFR5cGVJZHMuVF9sb25nIDoKKwkJCWxyZXR1cm4oKTsKKwkJCWJyZWFrOworCQljYXNlIFR5cGVJ
ZHMuVF9mbG9hdCA6CisJCQlmcmV0dXJuKCk7CisJCQlicmVhazsKKwkJY2FzZSBUeXBlSWRzLlRf
ZG91YmxlIDoKKwkJCWRyZXR1cm4oKTsKKwkJCWJyZWFrOworCQlkZWZhdWx0IDoKKwkJCVR5cGVC
aW5kaW5nIGFjY2Vzc0VyYXN1cmUgPSBhY2Nlc3NNZXRob2QucmV0dXJuVHlwZS5lcmFzdXJlKCk7
CisJCQlUeXBlQmluZGluZyBtYXRjaCA9IHRhcmdldE1ldGhvZC5yZXR1cm5UeXBlLmZpbmRTdXBl
clR5cGVPcmlnaW5hdGluZ0Zyb20oYWNjZXNzRXJhc3VyZSk7CisJCQlpZiAobWF0Y2ggPT0gbnVs
bCkgeworCQkJCXRoaXMuY2hlY2tjYXN0KGFjY2Vzc0VyYXN1cmUpOyAvLyBmb3IgYnJpZGdlIG1l
dGhvZHMKKwkJCX0KKwkJCWFyZXR1cm4oKTsKKwl9Cit9CiAvKiogV2hlbiBnZW5lcmF0aW5nIFN1
cGVyTWV0b2RBY2Nlc3MgdG93YXJkcyB0YXJnZXRNZXRob2QsCiAgKiAgZmluZCB0aGUgc3VpdGFi
bGUgZGlyZWN0IHN1cGVyIHR5cGUsIHRoYXQgd2lsbCBldmVudHVhbGx5IGxlYWQgdG8gdGFyZ2V0
TWV0aG9kLmRlY2xhcmluZ0NsYXNzLiovCiBSZWZlcmVuY2VCaW5kaW5nIGZpbmREaXJlY3RTdXBl
clR5cGVUb3dhcmRzKFN5bnRoZXRpY01ldGhvZEJpbmRpbmcgYWNjZXNzTWV0aG9kLCBNZXRob2RC
aW5kaW5nIHRhcmdldE1ldGhvZCkgewogCVJlZmVyZW5jZUJpbmRpbmcgY3VycmVudFR5cGUgPSBh
Y2Nlc3NNZXRob2QuZGVjbGFyaW5nQ2xhc3M7CiAJUmVmZXJlbmNlQmluZGluZyBzdXBlcmNsYXNz
ID0gY3VycmVudFR5cGUuc3VwZXJjbGFzcygpOwpAQCAtNTY4NywxMiArNTc4NSwxNiBAQAogCWxv
YWQobG9jYWxCaW5kaW5nLnR5cGUsIGxvY2FsQmluZGluZy5yZXNvbHZlZFBvc2l0aW9uKTsKIH0K
IAogcHJvdGVjdGVkIGZpbmFsIHZvaWQgbG9hZChUeXBlQmluZGluZyB0eXBlQmluZGluZywgaW50
IHJlc29sdmVkUG9zaXRpb24pIHsKIAl0aGlzLmNvdW50TGFiZWxzID0gMDsKKwlsb2FkKHR5cGVC
aW5kaW5nLmlkLCByZXNvbHZlZFBvc2l0aW9uKTsKK30KKworcHJvdGVjdGVkIGZpbmFsIHZvaWQg
bG9hZChpbnQgdHlwZUlkLCBpbnQgcmVzb2x2ZWRQb3NpdGlvbikgewogCS8vIFVzaW5nIGRlZGlj
YXRlZCBpbnQgYnl0ZWNvZGUKLQlzd2l0Y2godHlwZUJpbmRpbmcuaWQpIHsKKwlzd2l0Y2godHlw
ZUlkKSB7CiAJCWNhc2UgVHlwZUlkcy5UX2ludCA6CiAJCWNhc2UgVHlwZUlkcy5UX2J5dGUgOgog
CQljYXNlIFR5cGVJZHMuVF9jaGFyIDoKIAkJY2FzZSBUeXBlSWRzLlRfYm9vbGVhbiA6CiAJCWNh
c2UgVHlwZUlkcy5UX3Nob3J0IDoKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvU291cmNlVHlw
ZUJpbmRpbmcuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvU291cmNlVHlwZUJpbmRpbmcuamF2YQppbmRl
eCA0M2I5NDAwLi5kYWFmYjEwIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1NvdXJjZVR5cGVC
aW5kaW5nLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Tb3VyY2VUeXBlQmluZGluZy5qYXZhCkBA
IC03OSwxMiArNzksMTMgQEAKIAkvLyBTeW50aGV0aWNzIGFyZSBzZXBhcmF0ZWQgaW50byA0IGNh
dGVnb3JpZXM6IG1ldGhvZHMsIHN1cGVyIG1ldGhvZHMsIGZpZWxkcywgY2xhc3MgbGl0ZXJhbHMg
YW5kIGJyaWRnZSBtZXRob2RzCiAJLy8gaWYgYSBuZXcgY2F0ZWdvcnkgaXMgYWRkZWQsIGFsc28g
aW5jcmVtZW50IE1BWF9TWU5USEVUSUNTCiAJcHJpdmF0ZSBmaW5hbCBzdGF0aWMgaW50IE1FVEhP
RF9FTVVMID0gMDsKIAlwcml2YXRlIGZpbmFsIHN0YXRpYyBpbnQgRklFTERfRU1VTCA9IDE7CiAJ
cHJpdmF0ZSBmaW5hbCBzdGF0aWMgaW50IENMQVNTX0xJVEVSQUxfRU1VTCA9IDI7CisJcHJpdmF0
ZSBmaW5hbCBzdGF0aWMgaW50IE1FVEhPRF9QQUlSX0JSSURHRSA9IDM7CiAKLQlwcml2YXRlIGZp
bmFsIHN0YXRpYyBpbnQgTUFYX1NZTlRIRVRJQ1MgPSAzOworCXByaXZhdGUgZmluYWwgc3RhdGlj
IGludCBNQVhfU1lOVEhFVElDUyA9IDQ7CiAKIAlIYXNoTWFwW10gc3ludGhldGljczsKIAljaGFy
W10gZ2VuZXJpY1JlZmVyZW5jZVR5cGVTaWduYXR1cmU7CiAKIAlwcml2YXRlIFNpbXBsZUxvb2t1
cFRhYmxlIHN0b3JlZEFubm90YXRpb25zID0gbnVsbDsgLy8ga2V5cyBhcmUgdGhpcyBSZWZlcmVu
Y2VCaW5kaW5nICYgaXRzIGZpZWxkcyBhbmQgbWV0aG9kcywgdmFsdWUgaXMgYW4gQW5ub3RhdGlv
bkhvbGRlcgpAQCAtNzc4LDEwICs3NzksNzMgQEAKIAkJCWFjY2Vzc29yc1swXSA9IGFjY2Vzc01l
dGhvZDsKIAkJfQogCX0KIAlyZXR1cm4gYWNjZXNzTWV0aG9kOwogfQorCitwdWJsaWMgU3ludGhl
dGljTWV0aG9kQmluZGluZyBhZGRTeW50aGV0aWNNZXRob2RGb3JBcmd1bWVudENoYW5uZWxpbmdG
b3JWYXJBcmdzKE1ldGhvZEJpbmRpbmcgaW5wdXQsIE1ldGhvZEJpbmRpbmcgdGFyZ2V0TWV0aG9k
KSB7CisJaWYgKCFpc1Byb3RvdHlwZSgpKSB0aHJvdyBuZXcgSWxsZWdhbFN0YXRlRXhjZXB0aW9u
KCk7CisJaWYgKGlzSW50ZXJmYWNlKCkpIHJldHVybiBudWxsOyAvLyBvbmx5IGNsYXNzZXMgJiBl
bnVtcyBnZXQgYnJpZGdlIG1ldGhvZHMKKwkvLyB0YXJnZXRNZXRob2QgbWF5IGJlIGluaGVyaXRl
ZAorCWlmIChUeXBlQmluZGluZy5lcXVhbHNFcXVhbHMoaW5wdXQucmV0dXJuVHlwZS5lcmFzdXJl
KCksIHRhcmdldE1ldGhvZC5yZXR1cm5UeXBlLmVyYXN1cmUoKSkKKwkJJiYgaW5wdXQuYXJlUGFy
YW1ldGVyRXJhc3VyZXNFcXVhbCh0YXJnZXRNZXRob2QpKSB7CisJCQlyZXR1cm4gbnVsbDsgLy8g
ZG8gbm90IG5lZWQgYnJpZGdlIG1ldGhvZAorCX0KKwlpZiAodGhpcy5zeW50aGV0aWNzID09IG51
bGwpCisJCXRoaXMuc3ludGhldGljcyA9IG5ldyBIYXNoTWFwW01BWF9TWU5USEVUSUNTXTsKKwlp
ZiAodGhpcy5zeW50aGV0aWNzW1NvdXJjZVR5cGVCaW5kaW5nLk1FVEhPRF9QQUlSX0JSSURHRV0g
PT0gbnVsbCkgeworCQl0aGlzLnN5bnRoZXRpY3NbU291cmNlVHlwZUJpbmRpbmcuTUVUSE9EX1BB
SVJfQlJJREdFXSA9IG5ldyBIYXNoTWFwKDUpOworCX0gZWxzZSB7CisJCS8vIGNoZWNrIHRvIHNl
ZSBpZiB0aGVyZSBpcyBhbm90aGVyIGVxdWl2YWxlbnQgaW5oZXJpdGVkTWV0aG9kIGFscmVhZHkg
YWRkZWQKKwkJSXRlcmF0b3IgZmlyc3RPZlRoZVBhaXJJdGVyYXRvciA9IHRoaXMuc3ludGhldGlj
c1tTb3VyY2VUeXBlQmluZGluZy5NRVRIT0RfUEFJUl9CUklER0VdLmtleVNldCgpLml0ZXJhdG9y
KCk7CisJCXdoaWxlIChmaXJzdE9mVGhlUGFpckl0ZXJhdG9yLmhhc05leHQoKSkgeworCQkJT2Jq
ZWN0IHN5bnRoZXRpYyA9IGZpcnN0T2ZUaGVQYWlySXRlcmF0b3IubmV4dCgpOworCQkJaWYgKHN5
bnRoZXRpYyBpbnN0YW5jZW9mIE1ldGhvZEJpbmRpbmcpIHsKKwkJCQlNZXRob2RCaW5kaW5nIGZp
cnN0T2ZUaGVwYWlyID0gKE1ldGhvZEJpbmRpbmcpIHN5bnRoZXRpYzsKKwkJCQlpZiAoQ2hhck9w
ZXJhdGlvbi5lcXVhbHMoaW5wdXQuc2VsZWN0b3IsIGZpcnN0T2ZUaGVwYWlyLnNlbGVjdG9yKQor
CQkJCQkJJiYgVHlwZUJpbmRpbmcuZXF1YWxzRXF1YWxzKGlucHV0LnJldHVyblR5cGUuZXJhc3Vy
ZSgpLCBmaXJzdE9mVGhlcGFpci5yZXR1cm5UeXBlLmVyYXN1cmUoKSkKKwkJCQkJCSYmIGlucHV0
LmFyZVBhcmFtZXRlckVyYXN1cmVzRXF1YWwoZmlyc3RPZlRoZXBhaXIpKSB7CisJCQkJCU9iamVj
dCBoTWFwID0gdGhpcy5zeW50aGV0aWNzW1NvdXJjZVR5cGVCaW5kaW5nLk1FVEhPRF9QQUlSX0JS
SURHRV0uZ2V0KHN5bnRoZXRpYyk7CisJCQkJCWlmIChoTWFwIGluc3RhbmNlb2YgSGFzaE1hcCkg
eworCQkJCQkJSXRlcmF0b3Igc2Vjb25kT2ZUaGVQYWlySXRlcmF0b3IgPSAoKEhhc2hNYXApaE1h
cCkua2V5U2V0KCkuaXRlcmF0b3IoKTsKKwkJCQkJCXdoaWxlIChzZWNvbmRPZlRoZVBhaXJJdGVy
YXRvci5oYXNOZXh0KCkpIHsKKwkJCQkJCQlPYmplY3Qgc3ludGhldGljMSA9IHNlY29uZE9mVGhl
UGFpckl0ZXJhdG9yLm5leHQoKTsKKwkJCQkJCQlpZiAoc3ludGhldGljMSBpbnN0YW5jZW9mIE1l
dGhvZEJpbmRpbmcpIHsKKwkJCQkJCQkJTWV0aG9kQmluZGluZyBzZWNvbmRPZlRoZXBhaXIgPSAo
TWV0aG9kQmluZGluZykgc3ludGhldGljMTsKKwkJCQkJCQkJaWYgKENoYXJPcGVyYXRpb24uZXF1
YWxzKHRhcmdldE1ldGhvZC5zZWxlY3Rvciwgc2Vjb25kT2ZUaGVwYWlyLnNlbGVjdG9yKQorCQkJ
CQkJCQkJCSYmIFR5cGVCaW5kaW5nLmVxdWFsc0VxdWFscyh0YXJnZXRNZXRob2QucmV0dXJuVHlw
ZS5lcmFzdXJlKCksIHNlY29uZE9mVGhlcGFpci5yZXR1cm5UeXBlLmVyYXN1cmUoKSkKKwkJCQkJ
CQkJCQkmJiB0YXJnZXRNZXRob2QuYXJlUGFyYW1ldGVyRXJhc3VyZXNFcXVhbChzZWNvbmRPZlRo
ZXBhaXIpKSB7CisJCQkJCQkJCQlyZXR1cm4gbnVsbDsKKwkJCQkJCQkJfQorCQkJCQkJCX0KKwkJ
CQkJCX0KKwkJCQkJfQorCQkJCX0KKwkJCX0KKwkJfQorCX0KKworCVN5bnRoZXRpY01ldGhvZEJp
bmRpbmcgYWNjZXNzTWV0aG9kID0gbnVsbDsKKwlIYXNoTWFwIGhNYXAgPSAoSGFzaE1hcCkgdGhp
cy5zeW50aGV0aWNzW1NvdXJjZVR5cGVCaW5kaW5nLk1FVEhPRF9QQUlSX0JSSURHRV0uZ2V0KGlu
cHV0KTsKKwlpZiAoaE1hcCA9PSBudWxsKSB7CisJCXRoaXMuc3ludGhldGljc1tTb3VyY2VUeXBl
QmluZGluZy5NRVRIT0RfUEFJUl9CUklER0VdLnB1dChpbnB1dCwgaE1hcCA9IG5ldyBIYXNoTWFw
KDUpKTsKKwl9CisJU3ludGhldGljTWV0aG9kQmluZGluZ1tdIGFjY2Vzc29ycyA9IChTeW50aGV0
aWNNZXRob2RCaW5kaW5nW10pIGhNYXAuZ2V0KHRhcmdldE1ldGhvZCk7CisJY2hhciBbXSBzZWxl
Y3RvciA9IENoYXJPcGVyYXRpb24uY29uY2F0KFR5cGVDb25zdGFudHMuQU5PTllNT1VTX01FVEhP
RCwgSW50ZWdlci50b1N0cmluZyh0aGlzLmxhbWJkYU9yZGluYWwrKykudG9DaGFyQXJyYXkoKSk7
CisJaWYgKGFjY2Vzc29ycyA9PSBudWxsKSB7CisJCWFjY2Vzc01ldGhvZCA9IG5ldyBTeW50aGV0
aWNNZXRob2RCaW5kaW5nKGlucHV0LCB0YXJnZXRNZXRob2QsIHNlbGVjdG9yLCB0aGlzKTsKKwkJ
aE1hcC5wdXQoaW5wdXQsIGFjY2Vzc29ycyA9IG5ldyBTeW50aGV0aWNNZXRob2RCaW5kaW5nWzJd
KTsKKwkJYWNjZXNzb3JzWzFdID0gYWNjZXNzTWV0aG9kOworCX0gZWxzZSB7CisJCWlmICgoYWNj
ZXNzTWV0aG9kID0gYWNjZXNzb3JzWzFdKSA9PSBudWxsKSB7CisJCQlhY2Nlc3NNZXRob2QgPSBu
ZXcgU3ludGhldGljTWV0aG9kQmluZGluZyhpbnB1dCwgdGFyZ2V0TWV0aG9kLCBzZWxlY3Rvciwg
dGhpcyk7CisJCQlhY2Nlc3NvcnNbMV0gPSBhY2Nlc3NNZXRob2Q7CisJCX0KKwl9CisJcmV0dXJu
IGFjY2Vzc01ldGhvZDsKK30KKwogYm9vbGVhbiBhcmVGaWVsZHNJbml0aWFsaXplZCgpIHsKIAlp
ZiAoIWlzUHJvdG90eXBlKCkpCiAJCXJldHVybiB0aGlzLnByb3RvdHlwZS5hcmVGaWVsZHNJbml0
aWFsaXplZCgpOwogCXJldHVybiB0aGlzLmZpZWxkcyAhPSBCaW5kaW5nLlVOSU5JVElBTElaRURf
RklFTERTOwogfQpAQCAtMjI4MCwzMSArMjM0NCw1OCBAQAogcHVibGljIFN5bnRoZXRpY01ldGhv
ZEJpbmRpbmdbXSBzeW50aGV0aWNNZXRob2RzKCkgewogCQogCWlmICghaXNQcm90b3R5cGUoKSkg
dGhyb3cgbmV3IElsbGVnYWxTdGF0ZUV4Y2VwdGlvbigpOwogCQogCWlmICh0aGlzLnN5bnRoZXRp
Y3MgPT0gbnVsbCAKLQkJCXx8IHRoaXMuc3ludGhldGljc1tTb3VyY2VUeXBlQmluZGluZy5NRVRI
T0RfRU1VTF0gPT0gbnVsbCAKLQkJCXx8IHRoaXMuc3ludGhldGljc1tTb3VyY2VUeXBlQmluZGlu
Zy5NRVRIT0RfRU1VTF0uc2l6ZSgpID09IDApIHsKKwkJCXx8ICgoIHRoaXMuc3ludGhldGljc1tT
b3VyY2VUeXBlQmluZGluZy5NRVRIT0RfRU1VTF0gPT0gbnVsbCAKKwkJCSAgIHx8IHRoaXMuc3lu
dGhldGljc1tTb3VyY2VUeXBlQmluZGluZy5NRVRIT0RfRU1VTF0uc2l6ZSgpID09IDApCisJCQkg
ICYmICh0aGlzLnN5bnRoZXRpY3NbU291cmNlVHlwZUJpbmRpbmcuTUVUSE9EX1BBSVJfQlJJREdF
XSA9PSBudWxsCisJCQkgICB8fCB0aGlzLnN5bnRoZXRpY3NbU291cmNlVHlwZUJpbmRpbmcuTUVU
SE9EX1BBSVJfQlJJREdFXS5zaXplKCkgPT0gMCkpKSB7CiAJCXJldHVybiBudWxsOwogCX0KIAkv
LyBkaWZmaWN1bHQgdG8gY29tcHV0ZSBzaXplIHVwIGZyb250IGJlY2F1c2Ugb2YgdGhlIGVtYmVk
ZGVkIGFycmF5cyBzbyBhc3N1bWUgdGhlcmUgaXMgb25seSAxCiAJaW50IGluZGV4ID0gMDsKIAlT
eW50aGV0aWNNZXRob2RCaW5kaW5nW10gYmluZGluZ3MgPSBuZXcgU3ludGhldGljTWV0aG9kQmlu
ZGluZ1sxXTsKLQlJdGVyYXRvciBtZXRob2RBcnJheUl0ZXJhdG9yID0gdGhpcy5zeW50aGV0aWNz
W1NvdXJjZVR5cGVCaW5kaW5nLk1FVEhPRF9FTVVMXS52YWx1ZXMoKS5pdGVyYXRvcigpOwotCXdo
aWxlIChtZXRob2RBcnJheUl0ZXJhdG9yLmhhc05leHQoKSkgewotCQlTeW50aGV0aWNNZXRob2RC
aW5kaW5nW10gbWV0aG9kQWNjZXNzb3JzID0gKFN5bnRoZXRpY01ldGhvZEJpbmRpbmdbXSkgbWV0
aG9kQXJyYXlJdGVyYXRvci5uZXh0KCk7Ci0JCWZvciAoaW50IGkgPSAwLCBtYXggPSBtZXRob2RB
Y2Nlc3NvcnMubGVuZ3RoOyBpIDwgbWF4OyBpKyspIHsKLQkJCWlmIChtZXRob2RBY2Nlc3NvcnNb
aV0gIT0gbnVsbCkgewotCQkJCWlmIChpbmRleCsxID4gYmluZGluZ3MubGVuZ3RoKSB7Ci0JCQkJ
CVN5c3RlbS5hcnJheWNvcHkoYmluZGluZ3MsIDAsIChiaW5kaW5ncyA9IG5ldyBTeW50aGV0aWNN
ZXRob2RCaW5kaW5nW2luZGV4ICsgMV0pLCAwLCBpbmRleCk7CisJaWYgKHRoaXMuc3ludGhldGlj
c1tTb3VyY2VUeXBlQmluZGluZy5NRVRIT0RfRU1VTF0gIT0gbnVsbCkgeworCQlJdGVyYXRvciBt
ZXRob2RBcnJheUl0ZXJhdG9yID0gdGhpcy5zeW50aGV0aWNzW1NvdXJjZVR5cGVCaW5kaW5nLk1F
VEhPRF9FTVVMXS52YWx1ZXMoKS5pdGVyYXRvcigpOworCQl3aGlsZSAobWV0aG9kQXJyYXlJdGVy
YXRvci5oYXNOZXh0KCkpIHsKKwkJCVN5bnRoZXRpY01ldGhvZEJpbmRpbmdbXSBtZXRob2RBY2Nl
c3NvcnMgPSAoU3ludGhldGljTWV0aG9kQmluZGluZ1tdKSBtZXRob2RBcnJheUl0ZXJhdG9yLm5l
eHQoKTsKKwkJCWZvciAoaW50IGkgPSAwLCBtYXggPSBtZXRob2RBY2Nlc3NvcnMubGVuZ3RoOyBp
IDwgbWF4OyBpKyspIHsKKwkJCQlpZiAobWV0aG9kQWNjZXNzb3JzW2ldICE9IG51bGwpIHsKKwkJ
CQkJaWYgKGluZGV4KzEgPiBiaW5kaW5ncy5sZW5ndGgpIHsKKwkJCQkJCVN5c3RlbS5hcnJheWNv
cHkoYmluZGluZ3MsIDAsIChiaW5kaW5ncyA9IG5ldyBTeW50aGV0aWNNZXRob2RCaW5kaW5nW2lu
ZGV4ICsgMV0pLCAwLCBpbmRleCk7CisJCQkJCX0KKwkJCQkJYmluZGluZ3NbaW5kZXgrK10gPSBt
ZXRob2RBY2Nlc3NvcnNbaV07IAogCQkJCX0KLQkJCQliaW5kaW5nc1tpbmRleCsrXSA9IG1ldGhv
ZEFjY2Vzc29yc1tpXTsgCisJCQl9CisJCX0KKwl9CisJaWYgKHRoaXMuc3ludGhldGljc1tTb3Vy
Y2VUeXBlQmluZGluZy5NRVRIT0RfUEFJUl9CUklER0VdICE9IG51bGwpIHsKKwkJSXRlcmF0b3Ig
dG9wSXRlcmF0b3IgPSB0aGlzLnN5bnRoZXRpY3NbU291cmNlVHlwZUJpbmRpbmcuTUVUSE9EX1BB
SVJfQlJJREdFXS52YWx1ZXMoKS5pdGVyYXRvcigpOworCQl3aGlsZSAodG9wSXRlcmF0b3IuaGFz
TmV4dCgpKSB7CisJCQlPYmplY3QgdGVtcCA9IHRvcEl0ZXJhdG9yLm5leHQoKTsKKwkJCWlmICh0
ZW1wIGluc3RhbmNlb2YgSGFzaE1hcCkgeworCQkJCUl0ZXJhdG9yIG5leHRJdGVyYXRvciA9ICgo
SGFzaE1hcCl0ZW1wKS52YWx1ZXMoKS5pdGVyYXRvcigpOworCQkJCXdoaWxlIChuZXh0SXRlcmF0
b3IuaGFzTmV4dCgpKSB7CisJCQkJCVN5bnRoZXRpY01ldGhvZEJpbmRpbmdbXSBtZXRob2RBY2Nl
c3NvcnMgPSAoU3ludGhldGljTWV0aG9kQmluZGluZ1tdKSBuZXh0SXRlcmF0b3IubmV4dCgpOwor
CQkJCQlmb3IgKGludCBpID0gMCwgbWF4ID0gbWV0aG9kQWNjZXNzb3JzLmxlbmd0aDsgaSA8IG1h
eDsgaSsrKSB7CisJCQkJCQlpZiAobWV0aG9kQWNjZXNzb3JzW2ldICE9IG51bGwpIHsKKwkJCQkJ
CQlpZiAoaW5kZXgrMSA+IGJpbmRpbmdzLmxlbmd0aCkgeworCQkJCQkJCQlTeXN0ZW0uYXJyYXlj
b3B5KGJpbmRpbmdzLCAwLCAoYmluZGluZ3MgPSBuZXcgU3ludGhldGljTWV0aG9kQmluZGluZ1tp
bmRleCArIDFdKSwgMCwgaW5kZXgpOworCQkJCQkJCX0KKwkJCQkJCQliaW5kaW5nc1tpbmRleCsr
XSA9IG1ldGhvZEFjY2Vzc29yc1tpXTsgCisJCQkJCQl9CisJCQkJCX0KKwkJCQl9CiAJCQl9CiAJ
CX0KIAl9CiAJLy8gc29ydCB0aGVtIGluIGFjY29yZGluZyB0byB0aGVpciBvd24gaW5kZXhlcwog
CWludCBsZW5ndGg7CisJaWYgKGJpbmRpbmdzLmxlbmd0aCA9PSAxICYmIGJpbmRpbmdzWzBdID09
IG51bGwpIHsKKwkJcmV0dXJuIG51bGw7CisJfQogCVN5bnRoZXRpY01ldGhvZEJpbmRpbmdbXSBz
b3J0ZWRCaW5kaW5ncyA9IG5ldyBTeW50aGV0aWNNZXRob2RCaW5kaW5nW2xlbmd0aCA9IGJpbmRp
bmdzLmxlbmd0aF07CiAJZm9yIChpbnQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKyl7CiAJCVN5bnRo
ZXRpY01ldGhvZEJpbmRpbmcgYmluZGluZyA9IGJpbmRpbmdzW2ldOwogCQlzb3J0ZWRCaW5kaW5n
c1tiaW5kaW5nLmluZGV4XSA9IGJpbmRpbmc7CiAJfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1
cC9TeW50aGV0aWNNZXRob2RCaW5kaW5nLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1N5bnRoZXRpY01l
dGhvZEJpbmRpbmcuamF2YQppbmRleCBkMTE4MDViLi5mMzUxNmZmIDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvbG9va3VwL1N5bnRoZXRpY01ldGhvZEJpbmRpbmcuamF2YQorKysgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3Vw
L1N5bnRoZXRpY01ldGhvZEJpbmRpbmcuamF2YQpAQCAtMjksMTAgKzI5LDExIEBACiAJcHVibGlj
IEZpZWxkQmluZGluZyB0YXJnZXRSZWFkRmllbGQ7CQkvLyByZWFkIGFjY2VzcyB0byBhIGZpZWxk
CiAJcHVibGljIEZpZWxkQmluZGluZyB0YXJnZXRXcml0ZUZpZWxkOwkJLy8gd3JpdGUgYWNjZXNz
IHRvIGEgZmllbGQKIAlwdWJsaWMgTWV0aG9kQmluZGluZyB0YXJnZXRNZXRob2Q7CQkJLy8gbWV0
aG9kIG9yIGNvbnN0cnVjdG9yCiAJcHVibGljIFR5cGVCaW5kaW5nIHRhcmdldEVudW1UeXBlOyAJ
CQkvLyBlbnVtIHR5cGUKIAlwdWJsaWMgTGFtYmRhRXhwcmVzc2lvbiBsYW1iZGE7CisJcHVibGlj
IE1ldGhvZEJpbmRpbmcgaW5wdXRNZXRob2QgPSBudWxsOwogCQogCXB1YmxpYyBpbnQgcHVycG9z
ZTsKIAogCS8vIGZpZWxkcyB1c2VkIHRvIGdlbmVyYXRlIGVudW0gY29uc3RhbnRzIHdoZW4gdG9v
IG1hbnkKIAlwdWJsaWMgaW50IHN0YXJ0SW5kZXg7CkBAIC01MywxNSArNTQsNDkgQEAKIAlwdWJs
aWMgc3RhdGljIGZpbmFsIGludCBMYW1iZGFNZXRob2QgPSAxMzsgLy8gTGFtYmRhIGJvZHkgZW1p
dHRlZCBhcyBhIG1ldGhvZC4KIAlwdWJsaWMgZmluYWwgc3RhdGljIGludCBBcnJheUNvbnN0cnVj
dG9yID0gMTQ7IC8vIFhbXTo6bmV3CiAJcHVibGljIHN0YXRpYyBmaW5hbCBpbnQgQXJyYXlDbG9u
ZSA9IDE1OyAvLyBYW106OmNsb25lCiAgICAgcHVibGljIHN0YXRpYyBmaW5hbCBpbnQgRmFjdG9y
eU1ldGhvZCA9IDE2OyAvLyBmb3IgaW5keSBjYWxsIHRvIHByaXZhdGUgY29uc3RydWN0b3IuCiAg
ICAgcHVibGljIHN0YXRpYyBmaW5hbCBpbnQgRGVzZXJpYWxpemVMYW1iZGEgPSAxNzsgLy8gRm9y
IHN1cHBvcnRpbmcgbGFtYmRhIGRlc2VyaWFsaXphdGlvbi4KKyAgICBwdWJsaWMgc3RhdGljIGZp
bmFsIGludCBDaGFubmVsaXNlUGFyYW1zVG9WYXJBcmdzID0gMTg7CiAgICAgCiAJcHVibGljIGlu
dCBzb3VyY2VTdGFydCA9IDA7IC8vIHN0YXJ0IHBvc2l0aW9uIG9mIHRoZSBtYXRjaGluZyBkZWNs
YXJhdGlvbgogCXB1YmxpYyBpbnQgaW5kZXg7IC8vIHVzZWQgZm9yIHNvcnRpbmcgYWNjZXNzIG1l
dGhvZHMgaW4gdGhlIGNsYXNzIGZpbGUKIAlwdWJsaWMgaW50IGZha2VQYWRkZWRQYXJhbWV0ZXJz
ID0gMDsgLy8gYWRkZWQgaW4gc3ludGhldGljIGNvbnN0cnVjdG9yIHRvIGF2b2lkIG5hbWUgY2xh
c2guCiAKKwlwdWJsaWMgU3ludGhldGljTWV0aG9kQmluZGluZyhNZXRob2RCaW5kaW5nIGlucHV0
TWV0aG9kLCBNZXRob2RCaW5kaW5nIHRhcmdldE1ldGhvZCwgY2hhciBbXSBzZWxlY3RvciwgU291
cmNlVHlwZUJpbmRpbmcgZGVjbGFyaW5nQ2xhc3MpIHsKKwkgICAgdGhpcy5kZWNsYXJpbmdDbGFz
cyA9IGRlY2xhcmluZ0NsYXNzOworCQl0aGlzLnB1cnBvc2UgPSBTeW50aGV0aWNNZXRob2RCaW5k
aW5nLkNoYW5uZWxpc2VQYXJhbXNUb1ZhckFyZ3M7CisJICAgIHRoaXMubW9kaWZpZXJzID0gKHRh
cmdldE1ldGhvZC5tb2RpZmllcnMgfCBDbGFzc0ZpbGVDb25zdGFudHMuQWNjQnJpZGdlIHwgQ2xh
c3NGaWxlQ29uc3RhbnRzLkFjY1N5bnRoZXRpYyB8IENsYXNzRmlsZUNvbnN0YW50cy5BY2NTdGF0
aWMpICYgfihDbGFzc0ZpbGVDb25zdGFudHMuQWNjU3luY2hyb25pemVkIHwgQ2xhc3NGaWxlQ29u
c3RhbnRzLkFjY0Fic3RyYWN0IHwgQ2xhc3NGaWxlQ29uc3RhbnRzLkFjY05hdGl2ZSAgfCBDbGFz
c0ZpbGVDb25zdGFudHMuQWNjRmluYWwgfCBFeHRyYUNvbXBpbGVyTW9kaWZpZXJzLkFjY0dlbmVy
aWNTaWduYXR1cmUgfCBDbGFzc0ZpbGVDb25zdGFudHMuQWNjVmFyYXJncyk7CisJCXRoaXMudGFn
Qml0cyB8PSAoVGFnQml0cy5Bbm5vdGF0aW9uUmVzb2x2ZWQgfCBUYWdCaXRzLkRlcHJlY2F0ZWRB
bm5vdGF0aW9uUmVzb2x2ZWQpOworCSAgICB0aGlzLnJldHVyblR5cGUgPSBpbnB1dE1ldGhvZC5y
ZXR1cm5UeXBlOworCSAgICB0aGlzLnRocm93bkV4Y2VwdGlvbnMgPSBpbnB1dE1ldGhvZC50aHJv
d25FeGNlcHRpb25zOworCSAgICB0aGlzLnRhcmdldE1ldGhvZCA9IHRhcmdldE1ldGhvZDsKKwkJ
U3ludGhldGljTWV0aG9kQmluZGluZ1tdIGtub3duQWNjZXNzTWV0aG9kcyA9IGRlY2xhcmluZ0Ns
YXNzLnN5bnRoZXRpY01ldGhvZHMoKTsKKwkJaW50IG1ldGhvZElkID0ga25vd25BY2Nlc3NNZXRo
b2RzID09IG51bGwgPyAwIDoga25vd25BY2Nlc3NNZXRob2RzLmxlbmd0aDsKKwkJdGhpcy5pbmRl
eCA9IG1ldGhvZElkOworCQl0aGlzLmlucHV0TWV0aG9kID0gaW5wdXRNZXRob2Q7CisJCXRoaXMu
c2VsZWN0b3IgPSBzZWxlY3RvcjsKKwkJaW50IGxlbmd0aCA9IGlucHV0TWV0aG9kLnBhcmFtZXRl
cnMubGVuZ3RoOworCQlpZiAoIXRhcmdldE1ldGhvZC5pc1N0YXRpYygpICYmICF0YXJnZXRNZXRo
b2QuaXNDb25zdHJ1Y3RvcigpKSB7CisJCQlsZW5ndGgrKzsKKwkJfQorCQl0aGlzLnBhcmFtZXRl
cnMgPSBuZXcgVHlwZUJpbmRpbmdbbGVuZ3RoXTsKKwkJaW50IGN1cnJJbmR4ID0gMDsKKwkJaWYg
KCF0YXJnZXRNZXRob2QuaXNTdGF0aWMoKSAmJiAhdGFyZ2V0TWV0aG9kLmlzQ29uc3RydWN0b3Io
KSkgeworCQkJdGhpcy5wYXJhbWV0ZXJzW2N1cnJJbmR4KytdID0gdGFyZ2V0TWV0aG9kLmRlY2xh
cmluZ0NsYXNzOworCQl9CisJCWludCBqID0gdGFyZ2V0TWV0aG9kLnBhcmFtZXRlcnMubGVuZ3Ro
IC0gMSArIGN1cnJJbmR4OworCQlpbnQgayA9IDA7CisJCXdoaWxlIChjdXJySW5keCA8IGopIHsK
KwkJCXRoaXMucGFyYW1ldGVyc1tjdXJySW5keCsrXSA9IHRhcmdldE1ldGhvZC5wYXJhbWV0ZXJz
W2srK107CisJCX0KKwkJVHlwZUJpbmRpbmcgdGIgPSAoKEFycmF5QmluZGluZyl0YXJnZXRNZXRo
b2QucGFyYW1ldGVyc1t0YXJnZXRNZXRob2QucGFyYW1ldGVycy5sZW5ndGggLSAxXSkuZWxlbWVu
dHNUeXBlKCk7CisJCXdoaWxlIChjdXJySW5keCA8IGxlbmd0aCkgeworCQkJdGhpcy5wYXJhbWV0
ZXJzW2N1cnJJbmR4KytdID0gdGI7CisJCX0KKwl9CisKIAlwdWJsaWMgU3ludGhldGljTWV0aG9k
QmluZGluZyhGaWVsZEJpbmRpbmcgdGFyZ2V0RmllbGQsIGJvb2xlYW4gaXNSZWFkQWNjZXNzLCBi
b29sZWFuIGlzU3VwZXJBY2Nlc3MsIFJlZmVyZW5jZUJpbmRpbmcgZGVjbGFyaW5nQ2xhc3MpIHsK
IAogCQl0aGlzLm1vZGlmaWVycyA9IENsYXNzRmlsZUNvbnN0YW50cy5BY2NEZWZhdWx0IHwgQ2xh
c3NGaWxlQ29uc3RhbnRzLkFjY1N0YXRpYyB8IENsYXNzRmlsZUNvbnN0YW50cy5BY2NTeW50aGV0
aWM7CiAJCXRoaXMudGFnQml0cyB8PSAoVGFnQml0cy5Bbm5vdGF0aW9uUmVzb2x2ZWQgfCBUYWdC
aXRzLkRlcHJlY2F0ZWRBbm5vdGF0aW9uUmVzb2x2ZWQpOwogCQlTb3VyY2VUeXBlQmluZGluZyBk
ZWNsYXJpbmdTb3VyY2VUeXBlID0gKFNvdXJjZVR5cGVCaW5kaW5nKSBkZWNsYXJpbmdDbGFzczs=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>239323</attachid>
            <date>2014-01-26 09:02:00 -0500</date>
            <delta_ts>2014-01-28 04:32:00 -0500</delta_ts>
            <desc>Patch synchronized to HEAD</desc>
            <filename>VarargsAnirban.patch</filename>
            <type>text/plain</type>
            <size>23751</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0xhbWJkYUV4cHJlc3Np
b25zVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTGFtYmRhRXhwcmVz
c2lvbnNUZXN0LmphdmEKaW5kZXggN2RkMzRhMy4uZWRlOWQxNSAxMDA2NDQKLS0tIGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTGFtYmRhRXhwcmVzc2lvbnNUZXN0LmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTGFtYmRhRXhwcmVzc2lvbnNUZXN0LmphdmEK
QEAgLTI0NTIsNyArMjQ1Miw3IEBACiB9CiAvLyBCdWcgNDA2NzQ0IC0gWzEuOF1bY29tcGlsZXJd
W2NvZGVnZW5dIExhbWJkYUNvbnZlcnNpb25FeGNlcHRpb24gc2VlbiB3aGVuIG1ldGhvZCByZWZl
cmVuY2UgdGFyZ2V0cyBhIHZhcmFyZ3MgbWV0aG9kLgogLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uu
b3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwNjc0NAotcHVibGljIHZvaWQgX3Rlc3Q0MDY3NDRh
KCkgeworcHVibGljIHZvaWQgdGVzdDQwNjc0NGEoKSB7CiAJdGhpcy5ydW5Db25mb3JtVGVzdCgK
IAkJCW5ldyBTdHJpbmdbXSB7CiAJCQkJIlguamF2YSIsCkBAIC0yNDgxLDcgKzI0ODEsNyBAQAog
CQkJIjEwLCAyMCIKIAkJCSk7CiB9Ci1wdWJsaWMgdm9pZCBfdGVzdDQwNjc0NGIoKSB7CitwdWJs
aWMgdm9pZCB0ZXN0NDA2NzQ0YigpIHsKIAl0aGlzLnJ1bkNvbmZvcm1UZXN0KAogCQkJbmV3IFN0
cmluZ1tdIHsKIAkJCQkiWC5qYXZhIiwKQEAgLTI1MTEsNyArMjUxMSw3IEBACiAJCQkiMTAsIDIw
IgogCQkJKTsKIH0KLXB1YmxpYyB2b2lkIF90ZXN0NDA2NzQ0YygpIHsKK3B1YmxpYyB2b2lkIHRl
c3Q0MDY3NDRjKCkgewogCXRoaXMucnVuQ29uZm9ybVRlc3QoCiAJCQluZXcgU3RyaW5nW10gewog
CQkJCSJYLmphdmEiLApkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29t
cGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24v
TnVsbFR5cGVBbm5vdGF0aW9uVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
Y29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Np
b24vTnVsbFR5cGVBbm5vdGF0aW9uVGVzdC5qYXZhCmluZGV4IDYyNGQ1YTYuLmY1NGY1OGMgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL051bGxUeXBlQW5ub3RhdGlv
blRlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9OdWxsVHlwZUFu
bm90YXRpb25UZXN0LmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KgotICogQ29weXJpZ2h0IChjKSAyMDEyLCAyMDEzIEdLIFNvZnR3YXJlIEFHIGFuZCBvdGhlcnMu
CisgKiBDb3B5cmlnaHQgKGMpIDIwMTIsIDIwMTQgR0sgU29mdHdhcmUgQUcgYW5kIG90aGVycy4K
ICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWlu
ZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhl
IEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBk
aXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTM0MjcsOCArMzQyNyw3IEBACiAJ
CSItLS0tLS0tLS0tXG4iKTsKIH0KIAotLy8gRElTQUJMRUQsIGN1cnJlbnRseSB0aHJvd3MgamF2
YS5sYW5nLkJvb3RzdHJhcE1ldGhvZEVycm9yIGF0IHJ1bnRpbWU6Ci1wdWJsaWMgdm9pZCBfdGVz
dEJ1ZzQyNDYzN19jb21tZW50MygpIHsKK3B1YmxpYyB2b2lkIHRlc3RCdWc0MjQ2MzdfY29tbWVu
dDMoKSB7CiAJcnVuQ29uZm9ybVRlc3QoCiAJCW5ldyBTdHJpbmdbXSB7CiAJCQkiVmFyQXJnc01l
dGhvZFJlZmVyZW5jZVRlc3QuamF2YSIsCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvQ2xhc3NGaWxlLmph
dmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvQ2xhc3NGaWxlLmphdmEKaW5kZXggYjkwZWViYi4uOGJiNTZlZSAxMDA2NDQK
LS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL0NsYXNzRmlsZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9DbGFzc0ZpbGUuamF2YQpA
QCAtOTAxLDYgKzkwMSw5IEBACiAJCQkJCQkJLy8gZ2VuZXJhdGUgYSBtZXRob2QgaW5mbyB0byBl
bXVsYXRlIGFuIGFjY2VzcyB0byBhIG5vbi1hY2Nlc3NpYmxlIG1ldGhvZCAvIHN1cGVyLW1ldGhv
ZCBvciBicmlkZ2UgbWV0aG9kCiAJCQkJCQkJYWRkU3ludGhldGljTWV0aG9kQWNjZXNzTWV0aG9k
KHN5bnRoZXRpY01ldGhvZCk7CiAJCQkJCQkJYnJlYWs7CisJCQkJCQljYXNlIFN5bnRoZXRpY01l
dGhvZEJpbmRpbmcuQ2hhbm5lbGlzZVBhcmFtc1RvVmFyQXJncyA6CisJCQkJCQkJYWRkU3ludGhl
dGljTWV0aG9kQWNjZXNzTWV0aG9kRm9yVmFyQXJncyhzeW50aGV0aWNNZXRob2QpOworCQkJCQkJ
CWJyZWFrOwogCQkJCQkJY2FzZSBTeW50aGV0aWNNZXRob2RCaW5kaW5nLkNvbnN0cnVjdG9yQWNj
ZXNzIDoKIAkJCQkJCQkvLyBnZW5lcmF0ZSBhIG1ldGhvZCBpbmZvIHRvIGVtdWxhdGUgYW4gYWNj
ZXNzIHRvIGEgbm9uLWFjY2Vzc2libGUgY29uc3RydWN0b3IKIAkJCQkJCQlhZGRTeW50aGV0aWND
b25zdHJ1Y3RvckFjY2Vzc01ldGhvZChzeW50aGV0aWNNZXRob2QpOwpAQCAtMTIwOCw2ICsxMjEx
LDMwIEBACiAJCWdlbmVyYXRlQ29kZUF0dHJpYnV0ZUhlYWRlcigpOwogCQl0aGlzLmNvZGVTdHJl
YW0uaW5pdCh0aGlzKTsKIAkJdGhpcy5jb2RlU3RyZWFtLmdlbmVyYXRlU3ludGhldGljQm9keUZv
ck1ldGhvZEFjY2VzcyhtZXRob2RCaW5kaW5nKTsKKwkJY29tcGxldGVDb2RlQXR0cmlidXRlRm9y
U3ludGhldGljTWV0aG9kKAorCQkJbWV0aG9kQmluZGluZywKKwkJCWNvZGVBdHRyaWJ1dGVPZmZz
ZXQsCisJCQkoKFNvdXJjZVR5cGVCaW5kaW5nKSBtZXRob2RCaW5kaW5nLmRlY2xhcmluZ0NsYXNz
KQorCQkJCS5zY29wZQorCQkJCS5yZWZlcmVuY2VDb21waWxhdGlvblVuaXQoKQorCQkJCS5jb21w
aWxhdGlvblJlc3VsdAorCQkJCS5nZXRMaW5lU2VwYXJhdG9yUG9zaXRpb25zKCkpOworCQkvLyB1
cGRhdGUgdGhlIG51bWJlciBvZiBhdHRyaWJ1dGVzCisJCXRoaXMuY29udGVudHNbbWV0aG9kQXR0
cmlidXRlT2Zmc2V0KytdID0gKGJ5dGUpIChhdHRyaWJ1dGVOdW1iZXIgPj4gOCk7CisJCXRoaXMu
Y29udGVudHNbbWV0aG9kQXR0cmlidXRlT2Zmc2V0XSA9IChieXRlKSBhdHRyaWJ1dGVOdW1iZXI7
CisJfQorCisJcHVibGljIHZvaWQgYWRkU3ludGhldGljTWV0aG9kQWNjZXNzTWV0aG9kRm9yVmFy
QXJncyhTeW50aGV0aWNNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcpIHsKKwkJZ2VuZXJhdGVN
ZXRob2RJbmZvSGVhZGVyKG1ldGhvZEJpbmRpbmcpOworCQlpbnQgbWV0aG9kQXR0cmlidXRlT2Zm
c2V0ID0gdGhpcy5jb250ZW50c09mZnNldDsKKwkJLy8gdGhpcyB3aWxsIGFkZCBleGNlcHRpb24g
YXR0cmlidXRlLCBzeW50aGV0aWMgYXR0cmlidXRlLCBkZXByZWNhdGVkIGF0dHJpYnV0ZSwuLi4K
KwkJaW50IGF0dHJpYnV0ZU51bWJlciA9IGdlbmVyYXRlTWV0aG9kSW5mb0F0dHJpYnV0ZXMobWV0
aG9kQmluZGluZyk7CisJCS8vIENvZGUgYXR0cmlidXRlCisJCWludCBjb2RlQXR0cmlidXRlT2Zm
c2V0ID0gdGhpcy5jb250ZW50c09mZnNldDsKKwkJYXR0cmlidXRlTnVtYmVyKys7IC8vIGFkZCBj
b2RlIGF0dHJpYnV0ZQorCQlnZW5lcmF0ZUNvZGVBdHRyaWJ1dGVIZWFkZXIoKTsKKwkJdGhpcy5j
b2RlU3RyZWFtLmluaXQodGhpcyk7CisJCXRoaXMuY29kZVN0cmVhbS5nZW5lcmF0ZVN5bnRoZXRp
Y0JvZHlGb3JNZXRob2RBY2Nlc3NGb3JWYXJBcmdzKG1ldGhvZEJpbmRpbmcpOwogCQljb21wbGV0
ZUNvZGVBdHRyaWJ1dGVGb3JTeW50aGV0aWNNZXRob2QoCiAJCQltZXRob2RCaW5kaW5nLAogCQkJ
Y29kZUF0dHJpYnV0ZU9mZnNldCwKQEAgLTI4NzgsOCArMjkwNSwxMCBAQAogCQl0aGlzLmNvbnRl
bnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgKG51bWJlck9mQm9vdHN0cmFwcyA+
PiA4KTsKIAkJdGhpcy5jb250ZW50c1tsb2NhbENvbnRlbnRzT2Zmc2V0KytdID0gKGJ5dGUpIG51
bWJlck9mQm9vdHN0cmFwczsKIAkJZm9yIChpbnQgaSA9IDA7IGkgPCBudW1iZXJPZkJvb3RzdHJh
cHM7IGkrKykgewotCQkJRnVuY3Rpb25hbEV4cHJlc3Npb24gZnVuY3Rpb25hbCA9IChGdW5jdGlv
bmFsRXhwcmVzc2lvbikgZnVuY3Rpb25hbEV4cHJlc3Npb25MaXN0LmdldChpKTsKLQkJCQorCQkJ
T2JqZWN0IHRlbXAgPSBmdW5jdGlvbmFsRXhwcmVzc2lvbkxpc3QuZ2V0KGkpOworCisJCQlpZiAo
dGVtcCBpbnN0YW5jZW9mIEZ1bmN0aW9uYWxFeHByZXNzaW9uKSB7CisJCQlGdW5jdGlvbmFsRXhw
cmVzc2lvbiBmdW5jdGlvbmFsID0gKEZ1bmN0aW9uYWxFeHByZXNzaW9uKXRlbXA7CiAJCQlUeXBl
QmluZGluZ1tdIG1hcmtlckludGVyZmFjZXMgPSBudWxsOwogCQkJaWYgKGZ1bmN0aW9uYWwgaW5z
dGFuY2VvZiBMYW1iZGFFeHByZXNzaW9uICYmIAogCQkJCSAgICgoKG1hcmtlckludGVyZmFjZXM9
KChMYW1iZGFFeHByZXNzaW9uKWZ1bmN0aW9uYWwpLmdldE1hcmtlckludGVyZmFjZXMoKSkgIT0g
bnVsbCkgfHwKQEAgLTI5NjgsNiArMjk5NywzMiBAQAogCQkJCWludCBtZXRob2RUeXBlSW5kZXgg
PSB0aGlzLmNvbnN0YW50UG9vbC5saXRlcmFsSW5kZXhGb3JNZXRob2RUeXBlKGluc3RhbnRpYXRl
ZFNpZ25hdHVyZSk7CiAJCQkJdGhpcy5jb250ZW50c1tsb2NhbENvbnRlbnRzT2Zmc2V0KytdID0g
KGJ5dGUpIChtZXRob2RUeXBlSW5kZXggPj4gOCk7CiAJCQkJdGhpcy5jb250ZW50c1tsb2NhbENv
bnRlbnRzT2Zmc2V0KytdID0gKGJ5dGUpIG1ldGhvZFR5cGVJbmRleDsJCQkJCisJCQl9CisJCQl9
IGVsc2UgaWYgKHRlbXAgaW5zdGFuY2VvZiBTeW50aGV0aWNNZXRob2RCaW5kaW5nICYmICgoU3lu
dGhldGljTWV0aG9kQmluZGluZyl0ZW1wKS5wdXJwb3NlID09IFN5bnRoZXRpY01ldGhvZEJpbmRp
bmcuQ2hhbm5lbGlzZVBhcmFtc1RvVmFyQXJncykgeworCQkJCWlmIChpbmRleEZvck1ldGFGYWN0
b3J5ID09IDApIHsKKwkJCQkJaW5kZXhGb3JNZXRhRmFjdG9yeSA9IHRoaXMuY29uc3RhbnRQb29s
LmxpdGVyYWxJbmRleEZvck1ldGhvZEhhbmRsZShDbGFzc0ZpbGVDb25zdGFudHMuTWV0aG9kSGFu
ZGxlUmVmS2luZEludm9rZVN0YXRpYywgamF2YUxhbmdJbnZva2VMYW1iZGFNZXRhZmFjdG9yeSwg
CisJCQkJCQkJQ29uc3RhbnRQb29sLk1FVEFGQUNUT1JZLCBDb25zdGFudFBvb2wuSkFWQV9MQU5H
X0lOVk9LRV9MQU1CREFNRVRBRkFDVE9SWV9NRVRBRkFDVE9SWV9TSUdOQVRVUkUsIGZhbHNlKTsK
KwkJCQl9CisJCQkJU3ludGhldGljTWV0aG9kQmluZGluZyBzeW50aGV0aWMgPSAoU3ludGhldGlj
TWV0aG9kQmluZGluZykgdGVtcDsKKwkJCQkKKwkJCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVu
dHNPZmZzZXQrK10gPSAoYnl0ZSkgKGluZGV4Rm9yTWV0YUZhY3RvcnkgPj4gOCk7CisJCQkJdGhp
cy5jb250ZW50c1tsb2NhbENvbnRlbnRzT2Zmc2V0KytdID0gKGJ5dGUpIGluZGV4Rm9yTWV0YUZh
Y3Rvcnk7CisJCQkJCisJCQkJLy8gdTIgbnVtX2Jvb3RzdHJhcF9hcmd1bWVudHMKKwkJCQl0aGlz
LmNvbnRlbnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10gPSAwOworCQkJCXRoaXMuY29udGVudHNb
bG9jYWxDb250ZW50c09mZnNldCsrXSA9IChieXRlKSAzOworCQkJCQorCQkJCWludCBmdW5jdGlv
bmFsRGVzY3JpcHRvckluZGV4ID0gdGhpcy5jb25zdGFudFBvb2wubGl0ZXJhbEluZGV4Rm9yTWV0
aG9kVHlwZShzeW50aGV0aWMuaW5wdXRNZXRob2Qub3JpZ2luYWwoKS5zaWduYXR1cmUoKSk7CisJ
CQkJdGhpcy5jb250ZW50c1tsb2NhbENvbnRlbnRzT2Zmc2V0KytdID0gKGJ5dGUpIChmdW5jdGlv
bmFsRGVzY3JpcHRvckluZGV4ID4+IDgpOworCQkJCXRoaXMuY29udGVudHNbbG9jYWxDb250ZW50
c09mZnNldCsrXSA9IChieXRlKSBmdW5jdGlvbmFsRGVzY3JpcHRvckluZGV4OworCQorCQkJCWlu
dCBtZXRob2RIYW5kbGVJbmRleCA9IHRoaXMuY29uc3RhbnRQb29sLmxpdGVyYWxJbmRleEZvck1l
dGhvZEhhbmRsZShzeW50aGV0aWMub3JpZ2luYWwoKSk7IC8vIFNwZWFrIG9mICIgaW1wbGVtZW50
YXRpb24iIChlcmFzZWQpIHZlcnNpb24gaGVyZSwgYWRhcHRhdGlvbnMgZGVzY3JpYmVkIGJlbG93
LgorCQkJCXRoaXMuY29udGVudHNbbG9jYWxDb250ZW50c09mZnNldCsrXSA9IChieXRlKSAobWV0
aG9kSGFuZGxlSW5kZXggPj4gOCk7CisJCQkJdGhpcy5jb250ZW50c1tsb2NhbENvbnRlbnRzT2Zm
c2V0KytdID0gKGJ5dGUpIG1ldGhvZEhhbmRsZUluZGV4OworCQorCQkJCWludCBtZXRob2RUeXBl
SW5kZXggPSB0aGlzLmNvbnN0YW50UG9vbC5saXRlcmFsSW5kZXhGb3JNZXRob2RUeXBlKHN5bnRo
ZXRpYy5pbnB1dE1ldGhvZC5zaWduYXR1cmUoKSk7CisJCQkJdGhpcy5jb250ZW50c1tsb2NhbENv
bnRlbnRzT2Zmc2V0KytdID0gKGJ5dGUpIChtZXRob2RUeXBlSW5kZXggPj4gOCk7CisJCQkJdGhp
cy5jb250ZW50c1tsb2NhbENvbnRlbnRzT2Zmc2V0KytdID0gKGJ5dGUpIG1ldGhvZFR5cGVJbmRl
eDsJCQkJCQkJCQogCQkJfQogCQl9CiAKQEAgLTUxMjAsNiArNTE3NSwxNCBAQAogCQlleHByZXNz
aW9uLmJvb3RzdHJhcE1ldGhvZE51bWJlciA9IHRoaXMuYm9vdHN0cmFwTWV0aG9kcy5zaXplKCkg
LSAxOwogCQlyZXR1cm4gdGhpcy5ib290c3RyYXBNZXRob2RzLnNpemUoKSAtIDE7CiAJfQorCQor
CXB1YmxpYyBpbnQgcmVjb3JkQm9vdHN0cmFwTWV0aG9kKFN5bnRoZXRpY01ldGhvZEJpbmRpbmcg
c20pIHsKKwkJaWYgKHRoaXMuYm9vdHN0cmFwTWV0aG9kcyA9PSBudWxsKSB7CisJCQl0aGlzLmJv
b3RzdHJhcE1ldGhvZHMgPSBuZXcgQXJyYXlMaXN0KCk7CisJCX0KKwkJdGhpcy5ib290c3RyYXBN
ZXRob2RzLmFkZChzbSk7CisJCXJldHVybiB0aGlzLmJvb3RzdHJhcE1ldGhvZHMuc2l6ZSgpIC0g
MTsKKwl9CiAKIAlwdWJsaWMgdm9pZCByZXNldChTb3VyY2VUeXBlQmluZGluZyB0eXBlQmluZGlu
ZykgewogCQkvLyB0aGUgY29kZSBzdHJlYW0gaXMgcmVpbml0aWFsaXplZCBmb3IgZWFjaCBtZXRo
b2QKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvUmVmZXJlbmNlRXhwcmVzc2lvbi5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2FzdC9SZWZlcmVuY2VFeHByZXNzaW9uLmphdmEKaW5kZXggODEyM2U3My4uOGRiM2Q5NiAx
MDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2FzdC9SZWZlcmVuY2VFeHByZXNzaW9uLmphdmEKKysrIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2FzdC9SZWZlcmVuY2VFeHByZXNzaW9uLmphdmEKQEAgLTE3Miw3ICsxNzIsMTQgQEAKIAkJ
YnVmZmVyLmFwcGVuZCgnTCcpOwogCQlidWZmZXIuYXBwZW5kKHRoaXMucmVzb2x2ZWRUeXBlLmNv
bnN0YW50UG9vbE5hbWUoKSk7CiAJCWJ1ZmZlci5hcHBlbmQoJzsnKTsKLQkJaW50IGludm9rZUR5
bmFtaWNOdW1iZXIgPSBjb2RlU3RyZWFtLmNsYXNzRmlsZS5yZWNvcmRCb290c3RyYXBNZXRob2Qo
dGhpcyk7CisJCWludCBpbnZva2VEeW5hbWljTnVtYmVyOworCQlpZiAodGhpcy5iaW5kaW5nLmlz
VmFyYXJncygpICYmICEodGhpcy5iaW5kaW5nIGluc3RhbmNlb2YgU3ludGhldGljTWV0aG9kQmlu
ZGluZykgJiYgIXRoaXMuYmluZGluZy5hcmVQYXJhbWV0ZXJFcmFzdXJlc0VxdWFsKHRoaXMuZGVz
Y3JpcHRvcikpIHsKKwkJCVN5bnRoZXRpY01ldGhvZEJpbmRpbmcgc20gPSBzb3VyY2VUeXBlLmFk
ZFN5bnRoZXRpY01ldGhvZEZvckFyZ3VtZW50Q2hhbm5lbGluZ0ZvclZhckFyZ3ModGhpcy5kZXNj
cmlwdG9yLCB0aGlzLmJpbmRpbmcpOworCQkJaW52b2tlRHluYW1pY051bWJlciA9IGNvZGVTdHJl
YW0uY2xhc3NGaWxlLnJlY29yZEJvb3RzdHJhcE1ldGhvZChzbSk7CisJCQkKKwkJfSBlbHNlIHsK
KwkJCWludm9rZUR5bmFtaWNOdW1iZXIgPSBjb2RlU3RyZWFtLmNsYXNzRmlsZS5yZWNvcmRCb290
c3RyYXBNZXRob2QodGhpcyk7CisJCX0KIAkJY29kZVN0cmVhbS5pbnZva2VEeW5hbWljKGludm9r
ZUR5bmFtaWNOdW1iZXIsIGFyZ3VtZW50c1NpemUsIDEsIHRoaXMuZGVzY3JpcHRvci5zZWxlY3Rv
ciwgYnVmZmVyLnRvU3RyaW5nKCkudG9DaGFyQXJyYXkoKSwgCiAJCQkJdGhpcy5pc0NvbnN0cnVj
dG9yUmVmZXJlbmNlKCksICh0aGlzLmxocyBpbnN0YW5jZW9mIFR5cGVSZWZlcmVuY2U/IChUeXBl
UmVmZXJlbmNlKSB0aGlzLmxocyA6IG51bGwpLCB0aGlzLnR5cGVBcmd1bWVudHMpOwogCQlpZiAo
IXZhbHVlUmVxdWlyZWQpCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY29kZWdlbi9Db2RlU3RyZWFtLmph
dmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvY29kZWdlbi9Db2RlU3RyZWFtLmphdmEKaW5kZXggNjVmZjdkNi4uODdhNjg5
MCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2NvZGVnZW4vQ29kZVN0cmVhbS5qYXZhCisrKyBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9jb2RlZ2VuL0NvZGVTdHJlYW0uamF2YQpAQCAtMjk2Myw2ICsyOTYzLDEwNCBAQAogCQkJYXJl
dHVybigpOwogCX0KIH0KK3B1YmxpYyB2b2lkIGdlbmVyYXRlU3ludGhldGljQm9keUZvck1ldGhv
ZEFjY2Vzc0ZvclZhckFyZ3MoU3ludGhldGljTWV0aG9kQmluZGluZyBhY2Nlc3NNZXRob2QpIHsK
Kwlpbml0aWFsaXplTWF4TG9jYWxzKGFjY2Vzc01ldGhvZCk7CisJTWV0aG9kQmluZGluZyB0YXJn
ZXRNZXRob2QgPSBhY2Nlc3NNZXRob2QudGFyZ2V0TWV0aG9kOworCVR5cGVCaW5kaW5nW10gcGFy
YW1ldGVycyA9IHRhcmdldE1ldGhvZC5wYXJhbWV0ZXJzOworCWludCBsZW5ndGggPSBwYXJhbWV0
ZXJzLmxlbmd0aDsKKwlpZiAoIShwYXJhbWV0ZXJzW2xlbmd0aCAtIDFdIGluc3RhbmNlb2YgQXJy
YXlCaW5kaW5nKSkgeworCQlyZXR1cm47CisJfQorCVR5cGVCaW5kaW5nW10gYXJndW1lbnRzID0g
YWNjZXNzTWV0aG9kLnB1cnBvc2UgPT0gU3ludGhldGljTWV0aG9kQmluZGluZy5DaGFubmVsaXNl
UGFyYW1zVG9WYXJBcmdzCisJCQkJCQkJCQkJCQkJPyBhY2Nlc3NNZXRob2QucGFyYW1ldGVycwor
CQkJCQkJCQkJCQkJCTogbnVsbDsKKwlpbnQgcmVzb2x2ZWRQb3NpdGlvbjsKKwlpZiAodGFyZ2V0
TWV0aG9kLmlzU3RhdGljKCkpCisJCXJlc29sdmVkUG9zaXRpb24gPSAwOworCWVsc2UgaWYgKHRh
cmdldE1ldGhvZC5pc0NvbnN0cnVjdG9yKCkpIHsKKwkJcmVzb2x2ZWRQb3NpdGlvbiA9IDA7CisJ
CW5ld18odGFyZ2V0TWV0aG9kLmRlY2xhcmluZ0NsYXNzKTsKKwkJZHVwKCk7CisJfSBlbHNlIHsK
KwkJYWxvYWRfMCgpOworCQlyZXNvbHZlZFBvc2l0aW9uID0gMTsKKwl9CisJZm9yIChpbnQgaSA9
IDA7IGkgPCBsZW5ndGggLSAxOyBpKyspIHsKKwkgICAgVHlwZUJpbmRpbmcgcGFyYW1ldGVyID0g
cGFyYW1ldGVyc1tpXTsKKwkgICAgaWYgKGFyZ3VtZW50cyAhPSBudWxsKSB7IC8vIGZvciBicmlk
Z2UgbWV0aG9kcworCQkgICAgVHlwZUJpbmRpbmcgYXJndW1lbnQgPSBhcmd1bWVudHNbaV07CisJ
CQlsb2FkKGFyZ3VtZW50LCByZXNvbHZlZFBvc2l0aW9uKTsKKwkgICAgfSBlbHNlIHsKKwkJCWxv
YWQocGFyYW1ldGVyLCByZXNvbHZlZFBvc2l0aW9uKTsKKwkJfQorCQlzd2l0Y2gocGFyYW1ldGVy
LmlkKSB7CisJCQljYXNlIFR5cGVJZHMuVF9sb25nIDoKKwkJCWNhc2UgVHlwZUlkcy5UX2RvdWJs
ZSA6CisJCQkJcmVzb2x2ZWRQb3NpdGlvbiArPSAyOworCQkJCWJyZWFrOworCQkJZGVmYXVsdCA6
CisJCQkJcmVzb2x2ZWRQb3NpdGlvbisrOworCQkJCWJyZWFrOworCQl9CisJfQorCWludCBhcnJh
eUxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGggLSBsZW5ndGggKyAxOworCWdlbmVyYXRlSW5saW5l
ZFZhbHVlKGFycmF5TGVuZ3RoKTsKKwlBcnJheUJpbmRpbmcgdmFyQXJnVHlwZTsKKwluZXdBcnJh
eSh2YXJBcmdUeXBlID0gKEFycmF5QmluZGluZylwYXJhbWV0ZXJzW2xlbmd0aCAtIDFdKTsKKwlm
b3IoaW50IGFycmF5SW5kZXggPSAwOyBhcnJheUluZGV4IDwgYXJyYXlMZW5ndGg7IGFycmF5SW5k
ZXgrKykgeworCQlkdXAoKTsKKwkJZ2VuZXJhdGVJbmxpbmVkVmFsdWUoYXJyYXlJbmRleCk7CisJ
CWxvYWQoVHlwZUlkcy5UX0phdmFMYW5nT2JqZWN0LCBsZW5ndGggKyBhcnJheUluZGV4IC0gMSk7
CisJCWlmIChUeXBlQmluZGluZy5ub3RFcXVhbHMoYXJndW1lbnRzW2xlbmd0aCArIGFycmF5SW5k
ZXggLSAxXSwgdmFyQXJnVHlwZS5lbGVtZW50c1R5cGUoKSkpIHsKKwkJCWNoZWNrY2FzdCh2YXJB
cmdUeXBlLmVsZW1lbnRzVHlwZSgpKTsKKwkJfQorCQlhcnJheUF0UHV0KHZhckFyZ1R5cGUuZWxl
bWVudHNUeXBlKCkuaWQsIGZhbHNlKTsKKwl9CisJaWYgKHRhcmdldE1ldGhvZC5pc1N0YXRpYygp
KQorCQlpbnZva2UoT3Bjb2Rlcy5PUENfaW52b2tlc3RhdGljLCB0YXJnZXRNZXRob2QsIHRhcmdl
dE1ldGhvZC5kZWNsYXJpbmdDbGFzcyk7CisJZWxzZSB7CisJCWlmICh0YXJnZXRNZXRob2QuaXND
b25zdHJ1Y3RvcigpIHx8IHRhcmdldE1ldGhvZC5pc1ByaXZhdGUoKSl7CisJCQlpbnZva2UoT3Bj
b2Rlcy5PUENfaW52b2tlc3BlY2lhbCwgdGFyZ2V0TWV0aG9kLCB0YXJnZXRNZXRob2QuZGVjbGFy
aW5nQ2xhc3MpOworCQl9IGVsc2UgeworCQkJaWYgKHRhcmdldE1ldGhvZC5kZWNsYXJpbmdDbGFz
cy5pc0ludGVyZmFjZSgpKSB7CisJCQkJaW52b2tlKE9wY29kZXMuT1BDX2ludm9rZWludGVyZmFj
ZSwgdGFyZ2V0TWV0aG9kLCBudWxsIC8qIGRlZmF1bHQgZGVjbGFyaW5nQ2xhc3MgKi8pOworCQkJ
fSBlbHNlIHsKKwkJCQlpbnZva2UoT3Bjb2Rlcy5PUENfaW52b2tldmlydHVhbCwgdGFyZ2V0TWV0
aG9kLCB0YXJnZXRNZXRob2QuZGVjbGFyaW5nQ2xhc3MpOworCQkJfQorCQl9CisJfQorCWlmICh0
YXJnZXRNZXRob2QucmV0dXJuVHlwZS5pZCAhPSBUeXBlSWRzLlRfdm9pZCAmJiBhY2Nlc3NNZXRo
b2QucmV0dXJuVHlwZS5pZCA9PSBUeXBlSWRzLlRfdm9pZCkgeworCQlwb3AoKTsKKwl9CisJc3dp
dGNoIChhY2Nlc3NNZXRob2QucmV0dXJuVHlwZS5pZCkgeworCQljYXNlIFR5cGVJZHMuVF92b2lk
IDoKKwkJCXJldHVybl8oKTsKKwkJCWJyZWFrOworCQljYXNlIFR5cGVJZHMuVF9ib29sZWFuIDoK
KwkJY2FzZSBUeXBlSWRzLlRfYnl0ZSA6CisJCWNhc2UgVHlwZUlkcy5UX2NoYXIgOgorCQljYXNl
IFR5cGVJZHMuVF9zaG9ydCA6CisJCWNhc2UgVHlwZUlkcy5UX2ludCA6CisJCQlpcmV0dXJuKCk7
CisJCQlicmVhazsKKwkJY2FzZSBUeXBlSWRzLlRfbG9uZyA6CisJCQlscmV0dXJuKCk7CisJCQli
cmVhazsKKwkJY2FzZSBUeXBlSWRzLlRfZmxvYXQgOgorCQkJZnJldHVybigpOworCQkJYnJlYWs7
CisJCWNhc2UgVHlwZUlkcy5UX2RvdWJsZSA6CisJCQlkcmV0dXJuKCk7CisJCQlicmVhazsKKwkJ
ZGVmYXVsdCA6CisJCQlUeXBlQmluZGluZyBhY2Nlc3NFcmFzdXJlID0gYWNjZXNzTWV0aG9kLnJl
dHVyblR5cGUuZXJhc3VyZSgpOworCQkJVHlwZUJpbmRpbmcgbWF0Y2ggPSB0YXJnZXRNZXRob2Qu
cmV0dXJuVHlwZS5maW5kU3VwZXJUeXBlT3JpZ2luYXRpbmdGcm9tKGFjY2Vzc0VyYXN1cmUpOwor
CQkJaWYgKG1hdGNoID09IG51bGwpIHsKKwkJCQl0aGlzLmNoZWNrY2FzdChhY2Nlc3NFcmFzdXJl
KTsgLy8gZm9yIGJyaWRnZSBtZXRob2RzCisJCQl9CisJCQlhcmV0dXJuKCk7CisJfQorfQogLyoq
IFdoZW4gZ2VuZXJhdGluZyBTdXBlck1ldG9kQWNjZXNzIHRvd2FyZHMgdGFyZ2V0TWV0aG9kLAog
ICogIGZpbmQgdGhlIHN1aXRhYmxlIGRpcmVjdCBzdXBlciB0eXBlLCB0aGF0IHdpbGwgZXZlbnR1
YWxseSBsZWFkIHRvIHRhcmdldE1ldGhvZC5kZWNsYXJpbmdDbGFzcy4qLwogUmVmZXJlbmNlQmlu
ZGluZyBmaW5kRGlyZWN0U3VwZXJUeXBlVG93YXJkcyhTeW50aGV0aWNNZXRob2RCaW5kaW5nIGFj
Y2Vzc01ldGhvZCwgTWV0aG9kQmluZGluZyB0YXJnZXRNZXRob2QpIHsKQEAgLTU2ODksOCArNTc4
NywxMiBAQAogCiBwcm90ZWN0ZWQgZmluYWwgdm9pZCBsb2FkKFR5cGVCaW5kaW5nIHR5cGVCaW5k
aW5nLCBpbnQgcmVzb2x2ZWRQb3NpdGlvbikgewogCXRoaXMuY291bnRMYWJlbHMgPSAwOworCWxv
YWQodHlwZUJpbmRpbmcuaWQsIHJlc29sdmVkUG9zaXRpb24pOworfQorCitwcm90ZWN0ZWQgZmlu
YWwgdm9pZCBsb2FkKGludCB0eXBlSWQsIGludCByZXNvbHZlZFBvc2l0aW9uKSB7CiAJLy8gVXNp
bmcgZGVkaWNhdGVkIGludCBieXRlY29kZQotCXN3aXRjaCh0eXBlQmluZGluZy5pZCkgeworCXN3
aXRjaCh0eXBlSWQpIHsKIAkJY2FzZSBUeXBlSWRzLlRfaW50IDoKIAkJY2FzZSBUeXBlSWRzLlRf
Ynl0ZSA6CiAJCWNhc2UgVHlwZUlkcy5UX2NoYXIgOgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1
cC9Tb3VyY2VUeXBlQmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Tb3VyY2VUeXBlQmluZGlu
Zy5qYXZhCmluZGV4IDQzYjk0MDAuLmRhYWZiMTAgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAv
U291cmNlVHlwZUJpbmRpbmcuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1NvdXJjZVR5cGVCaW5k
aW5nLmphdmEKQEAgLTgxLDggKzgxLDkgQEAKIAlwcml2YXRlIGZpbmFsIHN0YXRpYyBpbnQgTUVU
SE9EX0VNVUwgPSAwOwogCXByaXZhdGUgZmluYWwgc3RhdGljIGludCBGSUVMRF9FTVVMID0gMTsK
IAlwcml2YXRlIGZpbmFsIHN0YXRpYyBpbnQgQ0xBU1NfTElURVJBTF9FTVVMID0gMjsKKwlwcml2
YXRlIGZpbmFsIHN0YXRpYyBpbnQgTUVUSE9EX1BBSVJfQlJJREdFID0gMzsKIAotCXByaXZhdGUg
ZmluYWwgc3RhdGljIGludCBNQVhfU1lOVEhFVElDUyA9IDM7CisJcHJpdmF0ZSBmaW5hbCBzdGF0
aWMgaW50IE1BWF9TWU5USEVUSUNTID0gNDsKIAogCUhhc2hNYXBbXSBzeW50aGV0aWNzOwogCWNo
YXJbXSBnZW5lcmljUmVmZXJlbmNlVHlwZVNpZ25hdHVyZTsKQEAgLTc4MCw2ICs3ODEsNjkgQEAK
IAl9CiAJcmV0dXJuIGFjY2Vzc01ldGhvZDsKIH0KKworcHVibGljIFN5bnRoZXRpY01ldGhvZEJp
bmRpbmcgYWRkU3ludGhldGljTWV0aG9kRm9yQXJndW1lbnRDaGFubmVsaW5nRm9yVmFyQXJncyhN
ZXRob2RCaW5kaW5nIGlucHV0LCBNZXRob2RCaW5kaW5nIHRhcmdldE1ldGhvZCkgeworCWlmICgh
aXNQcm90b3R5cGUoKSkgdGhyb3cgbmV3IElsbGVnYWxTdGF0ZUV4Y2VwdGlvbigpOworCWlmIChp
c0ludGVyZmFjZSgpKSByZXR1cm4gbnVsbDsgLy8gb25seSBjbGFzc2VzICYgZW51bXMgZ2V0IGJy
aWRnZSBtZXRob2RzCisJLy8gdGFyZ2V0TWV0aG9kIG1heSBiZSBpbmhlcml0ZWQKKwlpZiAoVHlw
ZUJpbmRpbmcuZXF1YWxzRXF1YWxzKGlucHV0LnJldHVyblR5cGUuZXJhc3VyZSgpLCB0YXJnZXRN
ZXRob2QucmV0dXJuVHlwZS5lcmFzdXJlKCkpCisJCSYmIGlucHV0LmFyZVBhcmFtZXRlckVyYXN1
cmVzRXF1YWwodGFyZ2V0TWV0aG9kKSkgeworCQkJcmV0dXJuIG51bGw7IC8vIGRvIG5vdCBuZWVk
IGJyaWRnZSBtZXRob2QKKwl9CisJaWYgKHRoaXMuc3ludGhldGljcyA9PSBudWxsKQorCQl0aGlz
LnN5bnRoZXRpY3MgPSBuZXcgSGFzaE1hcFtNQVhfU1lOVEhFVElDU107CisJaWYgKHRoaXMuc3lu
dGhldGljc1tTb3VyY2VUeXBlQmluZGluZy5NRVRIT0RfUEFJUl9CUklER0VdID09IG51bGwpIHsK
KwkJdGhpcy5zeW50aGV0aWNzW1NvdXJjZVR5cGVCaW5kaW5nLk1FVEhPRF9QQUlSX0JSSURHRV0g
PSBuZXcgSGFzaE1hcCg1KTsKKwl9IGVsc2UgeworCQkvLyBjaGVjayB0byBzZWUgaWYgdGhlcmUg
aXMgYW5vdGhlciBlcXVpdmFsZW50IGluaGVyaXRlZE1ldGhvZCBhbHJlYWR5IGFkZGVkCisJCUl0
ZXJhdG9yIGZpcnN0T2ZUaGVQYWlySXRlcmF0b3IgPSB0aGlzLnN5bnRoZXRpY3NbU291cmNlVHlw
ZUJpbmRpbmcuTUVUSE9EX1BBSVJfQlJJREdFXS5rZXlTZXQoKS5pdGVyYXRvcigpOworCQl3aGls
ZSAoZmlyc3RPZlRoZVBhaXJJdGVyYXRvci5oYXNOZXh0KCkpIHsKKwkJCU9iamVjdCBzeW50aGV0
aWMgPSBmaXJzdE9mVGhlUGFpckl0ZXJhdG9yLm5leHQoKTsKKwkJCWlmIChzeW50aGV0aWMgaW5z
dGFuY2VvZiBNZXRob2RCaW5kaW5nKSB7CisJCQkJTWV0aG9kQmluZGluZyBmaXJzdE9mVGhlcGFp
ciA9IChNZXRob2RCaW5kaW5nKSBzeW50aGV0aWM7CisJCQkJaWYgKENoYXJPcGVyYXRpb24uZXF1
YWxzKGlucHV0LnNlbGVjdG9yLCBmaXJzdE9mVGhlcGFpci5zZWxlY3RvcikKKwkJCQkJCSYmIFR5
cGVCaW5kaW5nLmVxdWFsc0VxdWFscyhpbnB1dC5yZXR1cm5UeXBlLmVyYXN1cmUoKSwgZmlyc3RP
ZlRoZXBhaXIucmV0dXJuVHlwZS5lcmFzdXJlKCkpCisJCQkJCQkmJiBpbnB1dC5hcmVQYXJhbWV0
ZXJFcmFzdXJlc0VxdWFsKGZpcnN0T2ZUaGVwYWlyKSkgeworCQkJCQlPYmplY3QgaE1hcCA9IHRo
aXMuc3ludGhldGljc1tTb3VyY2VUeXBlQmluZGluZy5NRVRIT0RfUEFJUl9CUklER0VdLmdldChz
eW50aGV0aWMpOworCQkJCQlpZiAoaE1hcCBpbnN0YW5jZW9mIEhhc2hNYXApIHsKKwkJCQkJCUl0
ZXJhdG9yIHNlY29uZE9mVGhlUGFpckl0ZXJhdG9yID0gKChIYXNoTWFwKWhNYXApLmtleVNldCgp
Lml0ZXJhdG9yKCk7CisJCQkJCQl3aGlsZSAoc2Vjb25kT2ZUaGVQYWlySXRlcmF0b3IuaGFzTmV4
dCgpKSB7CisJCQkJCQkJT2JqZWN0IHN5bnRoZXRpYzEgPSBzZWNvbmRPZlRoZVBhaXJJdGVyYXRv
ci5uZXh0KCk7CisJCQkJCQkJaWYgKHN5bnRoZXRpYzEgaW5zdGFuY2VvZiBNZXRob2RCaW5kaW5n
KSB7CisJCQkJCQkJCU1ldGhvZEJpbmRpbmcgc2Vjb25kT2ZUaGVwYWlyID0gKE1ldGhvZEJpbmRp
bmcpIHN5bnRoZXRpYzE7CisJCQkJCQkJCWlmIChDaGFyT3BlcmF0aW9uLmVxdWFscyh0YXJnZXRN
ZXRob2Quc2VsZWN0b3IsIHNlY29uZE9mVGhlcGFpci5zZWxlY3RvcikKKwkJCQkJCQkJCQkmJiBU
eXBlQmluZGluZy5lcXVhbHNFcXVhbHModGFyZ2V0TWV0aG9kLnJldHVyblR5cGUuZXJhc3VyZSgp
LCBzZWNvbmRPZlRoZXBhaXIucmV0dXJuVHlwZS5lcmFzdXJlKCkpCisJCQkJCQkJCQkJJiYgdGFy
Z2V0TWV0aG9kLmFyZVBhcmFtZXRlckVyYXN1cmVzRXF1YWwoc2Vjb25kT2ZUaGVwYWlyKSkgewor
CQkJCQkJCQkJcmV0dXJuIG51bGw7CisJCQkJCQkJCX0KKwkJCQkJCQl9CisJCQkJCQl9CisJCQkJ
CX0KKwkJCQl9CisJCQl9CisJCX0KKwl9CisKKwlTeW50aGV0aWNNZXRob2RCaW5kaW5nIGFjY2Vz
c01ldGhvZCA9IG51bGw7CisJSGFzaE1hcCBoTWFwID0gKEhhc2hNYXApIHRoaXMuc3ludGhldGlj
c1tTb3VyY2VUeXBlQmluZGluZy5NRVRIT0RfUEFJUl9CUklER0VdLmdldChpbnB1dCk7CisJaWYg
KGhNYXAgPT0gbnVsbCkgeworCQl0aGlzLnN5bnRoZXRpY3NbU291cmNlVHlwZUJpbmRpbmcuTUVU
SE9EX1BBSVJfQlJJREdFXS5wdXQoaW5wdXQsIGhNYXAgPSBuZXcgSGFzaE1hcCg1KSk7CisJfQor
CVN5bnRoZXRpY01ldGhvZEJpbmRpbmdbXSBhY2Nlc3NvcnMgPSAoU3ludGhldGljTWV0aG9kQmlu
ZGluZ1tdKSBoTWFwLmdldCh0YXJnZXRNZXRob2QpOworCWNoYXIgW10gc2VsZWN0b3IgPSBDaGFy
T3BlcmF0aW9uLmNvbmNhdChUeXBlQ29uc3RhbnRzLkFOT05ZTU9VU19NRVRIT0QsIEludGVnZXIu
dG9TdHJpbmcodGhpcy5sYW1iZGFPcmRpbmFsKyspLnRvQ2hhckFycmF5KCkpOworCWlmIChhY2Nl
c3NvcnMgPT0gbnVsbCkgeworCQlhY2Nlc3NNZXRob2QgPSBuZXcgU3ludGhldGljTWV0aG9kQmlu
ZGluZyhpbnB1dCwgdGFyZ2V0TWV0aG9kLCBzZWxlY3RvciwgdGhpcyk7CisJCWhNYXAucHV0KGlu
cHV0LCBhY2Nlc3NvcnMgPSBuZXcgU3ludGhldGljTWV0aG9kQmluZGluZ1syXSk7CisJCWFjY2Vz
c29yc1sxXSA9IGFjY2Vzc01ldGhvZDsKKwl9IGVsc2UgeworCQlpZiAoKGFjY2Vzc01ldGhvZCA9
IGFjY2Vzc29yc1sxXSkgPT0gbnVsbCkgeworCQkJYWNjZXNzTWV0aG9kID0gbmV3IFN5bnRoZXRp
Y01ldGhvZEJpbmRpbmcoaW5wdXQsIHRhcmdldE1ldGhvZCwgc2VsZWN0b3IsIHRoaXMpOworCQkJ
YWNjZXNzb3JzWzFdID0gYWNjZXNzTWV0aG9kOworCQl9CisJfQorCXJldHVybiBhY2Nlc3NNZXRo
b2Q7Cit9CisKIGJvb2xlYW4gYXJlRmllbGRzSW5pdGlhbGl6ZWQoKSB7CiAJaWYgKCFpc1Byb3Rv
dHlwZSgpKQogCQlyZXR1cm4gdGhpcy5wcm90b3R5cGUuYXJlRmllbGRzSW5pdGlhbGl6ZWQoKTsK
QEAgLTIyODIsMjcgKzIzNDYsNTQgQEAKIAlpZiAoIWlzUHJvdG90eXBlKCkpIHRocm93IG5ldyBJ
bGxlZ2FsU3RhdGVFeGNlcHRpb24oKTsKIAkKIAlpZiAodGhpcy5zeW50aGV0aWNzID09IG51bGwg
Ci0JCQl8fCB0aGlzLnN5bnRoZXRpY3NbU291cmNlVHlwZUJpbmRpbmcuTUVUSE9EX0VNVUxdID09
IG51bGwgCi0JCQl8fCB0aGlzLnN5bnRoZXRpY3NbU291cmNlVHlwZUJpbmRpbmcuTUVUSE9EX0VN
VUxdLnNpemUoKSA9PSAwKSB7CisJCQl8fCAoKCB0aGlzLnN5bnRoZXRpY3NbU291cmNlVHlwZUJp
bmRpbmcuTUVUSE9EX0VNVUxdID09IG51bGwgCisJCQkgICB8fCB0aGlzLnN5bnRoZXRpY3NbU291
cmNlVHlwZUJpbmRpbmcuTUVUSE9EX0VNVUxdLnNpemUoKSA9PSAwKQorCQkJICAmJiAodGhpcy5z
eW50aGV0aWNzW1NvdXJjZVR5cGVCaW5kaW5nLk1FVEhPRF9QQUlSX0JSSURHRV0gPT0gbnVsbAor
CQkJICAgfHwgdGhpcy5zeW50aGV0aWNzW1NvdXJjZVR5cGVCaW5kaW5nLk1FVEhPRF9QQUlSX0JS
SURHRV0uc2l6ZSgpID09IDApKSkgewogCQlyZXR1cm4gbnVsbDsKIAl9CiAJLy8gZGlmZmljdWx0
IHRvIGNvbXB1dGUgc2l6ZSB1cCBmcm9udCBiZWNhdXNlIG9mIHRoZSBlbWJlZGRlZCBhcnJheXMg
c28gYXNzdW1lIHRoZXJlIGlzIG9ubHkgMQogCWludCBpbmRleCA9IDA7CiAJU3ludGhldGljTWV0
aG9kQmluZGluZ1tdIGJpbmRpbmdzID0gbmV3IFN5bnRoZXRpY01ldGhvZEJpbmRpbmdbMV07Ci0J
SXRlcmF0b3IgbWV0aG9kQXJyYXlJdGVyYXRvciA9IHRoaXMuc3ludGhldGljc1tTb3VyY2VUeXBl
QmluZGluZy5NRVRIT0RfRU1VTF0udmFsdWVzKCkuaXRlcmF0b3IoKTsKLQl3aGlsZSAobWV0aG9k
QXJyYXlJdGVyYXRvci5oYXNOZXh0KCkpIHsKLQkJU3ludGhldGljTWV0aG9kQmluZGluZ1tdIG1l
dGhvZEFjY2Vzc29ycyA9IChTeW50aGV0aWNNZXRob2RCaW5kaW5nW10pIG1ldGhvZEFycmF5SXRl
cmF0b3IubmV4dCgpOwotCQlmb3IgKGludCBpID0gMCwgbWF4ID0gbWV0aG9kQWNjZXNzb3JzLmxl
bmd0aDsgaSA8IG1heDsgaSsrKSB7Ci0JCQlpZiAobWV0aG9kQWNjZXNzb3JzW2ldICE9IG51bGwp
IHsKLQkJCQlpZiAoaW5kZXgrMSA+IGJpbmRpbmdzLmxlbmd0aCkgewotCQkJCQlTeXN0ZW0uYXJy
YXljb3B5KGJpbmRpbmdzLCAwLCAoYmluZGluZ3MgPSBuZXcgU3ludGhldGljTWV0aG9kQmluZGlu
Z1tpbmRleCArIDFdKSwgMCwgaW5kZXgpOworCWlmICh0aGlzLnN5bnRoZXRpY3NbU291cmNlVHlw
ZUJpbmRpbmcuTUVUSE9EX0VNVUxdICE9IG51bGwpIHsKKwkJSXRlcmF0b3IgbWV0aG9kQXJyYXlJ
dGVyYXRvciA9IHRoaXMuc3ludGhldGljc1tTb3VyY2VUeXBlQmluZGluZy5NRVRIT0RfRU1VTF0u
dmFsdWVzKCkuaXRlcmF0b3IoKTsKKwkJd2hpbGUgKG1ldGhvZEFycmF5SXRlcmF0b3IuaGFzTmV4
dCgpKSB7CisJCQlTeW50aGV0aWNNZXRob2RCaW5kaW5nW10gbWV0aG9kQWNjZXNzb3JzID0gKFN5
bnRoZXRpY01ldGhvZEJpbmRpbmdbXSkgbWV0aG9kQXJyYXlJdGVyYXRvci5uZXh0KCk7CisJCQlm
b3IgKGludCBpID0gMCwgbWF4ID0gbWV0aG9kQWNjZXNzb3JzLmxlbmd0aDsgaSA8IG1heDsgaSsr
KSB7CisJCQkJaWYgKG1ldGhvZEFjY2Vzc29yc1tpXSAhPSBudWxsKSB7CisJCQkJCWlmIChpbmRl
eCsxID4gYmluZGluZ3MubGVuZ3RoKSB7CisJCQkJCQlTeXN0ZW0uYXJyYXljb3B5KGJpbmRpbmdz
LCAwLCAoYmluZGluZ3MgPSBuZXcgU3ludGhldGljTWV0aG9kQmluZGluZ1tpbmRleCArIDFdKSwg
MCwgaW5kZXgpOworCQkJCQl9CisJCQkJCWJpbmRpbmdzW2luZGV4KytdID0gbWV0aG9kQWNjZXNz
b3JzW2ldOyAKIAkJCQl9Ci0JCQkJYmluZGluZ3NbaW5kZXgrK10gPSBtZXRob2RBY2Nlc3NvcnNb
aV07IAorCQkJfQorCQl9CisJfQorCWlmICh0aGlzLnN5bnRoZXRpY3NbU291cmNlVHlwZUJpbmRp
bmcuTUVUSE9EX1BBSVJfQlJJREdFXSAhPSBudWxsKSB7CisJCUl0ZXJhdG9yIHRvcEl0ZXJhdG9y
ID0gdGhpcy5zeW50aGV0aWNzW1NvdXJjZVR5cGVCaW5kaW5nLk1FVEhPRF9QQUlSX0JSSURHRV0u
dmFsdWVzKCkuaXRlcmF0b3IoKTsKKwkJd2hpbGUgKHRvcEl0ZXJhdG9yLmhhc05leHQoKSkgewor
CQkJT2JqZWN0IHRlbXAgPSB0b3BJdGVyYXRvci5uZXh0KCk7CisJCQlpZiAodGVtcCBpbnN0YW5j
ZW9mIEhhc2hNYXApIHsKKwkJCQlJdGVyYXRvciBuZXh0SXRlcmF0b3IgPSAoKEhhc2hNYXApdGVt
cCkudmFsdWVzKCkuaXRlcmF0b3IoKTsKKwkJCQl3aGlsZSAobmV4dEl0ZXJhdG9yLmhhc05leHQo
KSkgeworCQkJCQlTeW50aGV0aWNNZXRob2RCaW5kaW5nW10gbWV0aG9kQWNjZXNzb3JzID0gKFN5
bnRoZXRpY01ldGhvZEJpbmRpbmdbXSkgbmV4dEl0ZXJhdG9yLm5leHQoKTsKKwkJCQkJZm9yIChp
bnQgaSA9IDAsIG1heCA9IG1ldGhvZEFjY2Vzc29ycy5sZW5ndGg7IGkgPCBtYXg7IGkrKykgewor
CQkJCQkJaWYgKG1ldGhvZEFjY2Vzc29yc1tpXSAhPSBudWxsKSB7CisJCQkJCQkJaWYgKGluZGV4
KzEgPiBiaW5kaW5ncy5sZW5ndGgpIHsKKwkJCQkJCQkJU3lzdGVtLmFycmF5Y29weShiaW5kaW5n
cywgMCwgKGJpbmRpbmdzID0gbmV3IFN5bnRoZXRpY01ldGhvZEJpbmRpbmdbaW5kZXggKyAxXSks
IDAsIGluZGV4KTsKKwkJCQkJCQl9CisJCQkJCQkJYmluZGluZ3NbaW5kZXgrK10gPSBtZXRob2RB
Y2Nlc3NvcnNbaV07IAorCQkJCQkJfQorCQkJCQl9CisJCQkJfQogCQkJfQogCQl9CiAJfQogCS8v
IHNvcnQgdGhlbSBpbiBhY2NvcmRpbmcgdG8gdGhlaXIgb3duIGluZGV4ZXMKIAlpbnQgbGVuZ3Ro
OworCWlmIChiaW5kaW5ncy5sZW5ndGggPT0gMSAmJiBiaW5kaW5nc1swXSA9PSBudWxsKSB7CisJ
CXJldHVybiBudWxsOworCX0KIAlTeW50aGV0aWNNZXRob2RCaW5kaW5nW10gc29ydGVkQmluZGlu
Z3MgPSBuZXcgU3ludGhldGljTWV0aG9kQmluZGluZ1tsZW5ndGggPSBiaW5kaW5ncy5sZW5ndGhd
OwogCWZvciAoaW50IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspewogCQlTeW50aGV0aWNNZXRob2RC
aW5kaW5nIGJpbmRpbmcgPSBiaW5kaW5nc1tpXTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAv
U3ludGhldGljTWV0aG9kQmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9TeW50aGV0aWNNZXRo
b2RCaW5kaW5nLmphdmEKaW5kZXggZDExODA1Yi4uZjM1MTZmZiAxMDA2NDQKLS0tIGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2xvb2t1cC9TeW50aGV0aWNNZXRob2RCaW5kaW5nLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9T
eW50aGV0aWNNZXRob2RCaW5kaW5nLmphdmEKQEAgLTMxLDYgKzMxLDcgQEAKIAlwdWJsaWMgTWV0
aG9kQmluZGluZyB0YXJnZXRNZXRob2Q7CQkJLy8gbWV0aG9kIG9yIGNvbnN0cnVjdG9yCiAJcHVi
bGljIFR5cGVCaW5kaW5nIHRhcmdldEVudW1UeXBlOyAJCQkvLyBlbnVtIHR5cGUKIAlwdWJsaWMg
TGFtYmRhRXhwcmVzc2lvbiBsYW1iZGE7CisJcHVibGljIE1ldGhvZEJpbmRpbmcgaW5wdXRNZXRo
b2QgPSBudWxsOwogCQogCXB1YmxpYyBpbnQgcHVycG9zZTsKIApAQCAtNTUsMTEgKzU2LDQ1IEBA
CiAJcHVibGljIHN0YXRpYyBmaW5hbCBpbnQgQXJyYXlDbG9uZSA9IDE1OyAvLyBYW106OmNsb25l
CiAgICAgcHVibGljIHN0YXRpYyBmaW5hbCBpbnQgRmFjdG9yeU1ldGhvZCA9IDE2OyAvLyBmb3Ig
aW5keSBjYWxsIHRvIHByaXZhdGUgY29uc3RydWN0b3IuCiAgICAgcHVibGljIHN0YXRpYyBmaW5h
bCBpbnQgRGVzZXJpYWxpemVMYW1iZGEgPSAxNzsgLy8gRm9yIHN1cHBvcnRpbmcgbGFtYmRhIGRl
c2VyaWFsaXphdGlvbi4KKyAgICBwdWJsaWMgc3RhdGljIGZpbmFsIGludCBDaGFubmVsaXNlUGFy
YW1zVG9WYXJBcmdzID0gMTg7CiAgICAgCiAJcHVibGljIGludCBzb3VyY2VTdGFydCA9IDA7IC8v
IHN0YXJ0IHBvc2l0aW9uIG9mIHRoZSBtYXRjaGluZyBkZWNsYXJhdGlvbgogCXB1YmxpYyBpbnQg
aW5kZXg7IC8vIHVzZWQgZm9yIHNvcnRpbmcgYWNjZXNzIG1ldGhvZHMgaW4gdGhlIGNsYXNzIGZp
bGUKIAlwdWJsaWMgaW50IGZha2VQYWRkZWRQYXJhbWV0ZXJzID0gMDsgLy8gYWRkZWQgaW4gc3lu
dGhldGljIGNvbnN0cnVjdG9yIHRvIGF2b2lkIG5hbWUgY2xhc2guCiAKKwlwdWJsaWMgU3ludGhl
dGljTWV0aG9kQmluZGluZyhNZXRob2RCaW5kaW5nIGlucHV0TWV0aG9kLCBNZXRob2RCaW5kaW5n
IHRhcmdldE1ldGhvZCwgY2hhciBbXSBzZWxlY3RvciwgU291cmNlVHlwZUJpbmRpbmcgZGVjbGFy
aW5nQ2xhc3MpIHsKKwkgICAgdGhpcy5kZWNsYXJpbmdDbGFzcyA9IGRlY2xhcmluZ0NsYXNzOwor
CQl0aGlzLnB1cnBvc2UgPSBTeW50aGV0aWNNZXRob2RCaW5kaW5nLkNoYW5uZWxpc2VQYXJhbXNU
b1ZhckFyZ3M7CisJICAgIHRoaXMubW9kaWZpZXJzID0gKHRhcmdldE1ldGhvZC5tb2RpZmllcnMg
fCBDbGFzc0ZpbGVDb25zdGFudHMuQWNjQnJpZGdlIHwgQ2xhc3NGaWxlQ29uc3RhbnRzLkFjY1N5
bnRoZXRpYyB8IENsYXNzRmlsZUNvbnN0YW50cy5BY2NTdGF0aWMpICYgfihDbGFzc0ZpbGVDb25z
dGFudHMuQWNjU3luY2hyb25pemVkIHwgQ2xhc3NGaWxlQ29uc3RhbnRzLkFjY0Fic3RyYWN0IHwg
Q2xhc3NGaWxlQ29uc3RhbnRzLkFjY05hdGl2ZSAgfCBDbGFzc0ZpbGVDb25zdGFudHMuQWNjRmlu
YWwgfCBFeHRyYUNvbXBpbGVyTW9kaWZpZXJzLkFjY0dlbmVyaWNTaWduYXR1cmUgfCBDbGFzc0Zp
bGVDb25zdGFudHMuQWNjVmFyYXJncyk7CisJCXRoaXMudGFnQml0cyB8PSAoVGFnQml0cy5Bbm5v
dGF0aW9uUmVzb2x2ZWQgfCBUYWdCaXRzLkRlcHJlY2F0ZWRBbm5vdGF0aW9uUmVzb2x2ZWQpOwor
CSAgICB0aGlzLnJldHVyblR5cGUgPSBpbnB1dE1ldGhvZC5yZXR1cm5UeXBlOworCSAgICB0aGlz
LnRocm93bkV4Y2VwdGlvbnMgPSBpbnB1dE1ldGhvZC50aHJvd25FeGNlcHRpb25zOworCSAgICB0
aGlzLnRhcmdldE1ldGhvZCA9IHRhcmdldE1ldGhvZDsKKwkJU3ludGhldGljTWV0aG9kQmluZGlu
Z1tdIGtub3duQWNjZXNzTWV0aG9kcyA9IGRlY2xhcmluZ0NsYXNzLnN5bnRoZXRpY01ldGhvZHMo
KTsKKwkJaW50IG1ldGhvZElkID0ga25vd25BY2Nlc3NNZXRob2RzID09IG51bGwgPyAwIDoga25v
d25BY2Nlc3NNZXRob2RzLmxlbmd0aDsKKwkJdGhpcy5pbmRleCA9IG1ldGhvZElkOworCQl0aGlz
LmlucHV0TWV0aG9kID0gaW5wdXRNZXRob2Q7CisJCXRoaXMuc2VsZWN0b3IgPSBzZWxlY3RvcjsK
KwkJaW50IGxlbmd0aCA9IGlucHV0TWV0aG9kLnBhcmFtZXRlcnMubGVuZ3RoOworCQlpZiAoIXRh
cmdldE1ldGhvZC5pc1N0YXRpYygpICYmICF0YXJnZXRNZXRob2QuaXNDb25zdHJ1Y3RvcigpKSB7
CisJCQlsZW5ndGgrKzsKKwkJfQorCQl0aGlzLnBhcmFtZXRlcnMgPSBuZXcgVHlwZUJpbmRpbmdb
bGVuZ3RoXTsKKwkJaW50IGN1cnJJbmR4ID0gMDsKKwkJaWYgKCF0YXJnZXRNZXRob2QuaXNTdGF0
aWMoKSAmJiAhdGFyZ2V0TWV0aG9kLmlzQ29uc3RydWN0b3IoKSkgeworCQkJdGhpcy5wYXJhbWV0
ZXJzW2N1cnJJbmR4KytdID0gdGFyZ2V0TWV0aG9kLmRlY2xhcmluZ0NsYXNzOworCQl9CisJCWlu
dCBqID0gdGFyZ2V0TWV0aG9kLnBhcmFtZXRlcnMubGVuZ3RoIC0gMSArIGN1cnJJbmR4OworCQlp
bnQgayA9IDA7CisJCXdoaWxlIChjdXJySW5keCA8IGopIHsKKwkJCXRoaXMucGFyYW1ldGVyc1tj
dXJySW5keCsrXSA9IHRhcmdldE1ldGhvZC5wYXJhbWV0ZXJzW2srK107CisJCX0KKwkJVHlwZUJp
bmRpbmcgdGIgPSAoKEFycmF5QmluZGluZyl0YXJnZXRNZXRob2QucGFyYW1ldGVyc1t0YXJnZXRN
ZXRob2QucGFyYW1ldGVycy5sZW5ndGggLSAxXSkuZWxlbWVudHNUeXBlKCk7CisJCXdoaWxlIChj
dXJySW5keCA8IGxlbmd0aCkgeworCQkJdGhpcy5wYXJhbWV0ZXJzW2N1cnJJbmR4KytdID0gdGI7
CisJCX0KKwl9CisKIAlwdWJsaWMgU3ludGhldGljTWV0aG9kQmluZGluZyhGaWVsZEJpbmRpbmcg
dGFyZ2V0RmllbGQsIGJvb2xlYW4gaXNSZWFkQWNjZXNzLCBib29sZWFuIGlzU3VwZXJBY2Nlc3Ms
IFJlZmVyZW5jZUJpbmRpbmcgZGVjbGFyaW5nQ2xhc3MpIHsKIAogCQl0aGlzLm1vZGlmaWVycyA9
IENsYXNzRmlsZUNvbnN0YW50cy5BY2NEZWZhdWx0IHwgQ2xhc3NGaWxlQ29uc3RhbnRzLkFjY1N0
YXRpYyB8IENsYXNzRmlsZUNvbnN0YW50cy5BY2NTeW50aGV0aWM7
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>239367</attachid>
            <date>2014-01-27 23:26:00 -0500</date>
            <delta_ts>2014-01-28 04:32:00 -0500</delta_ts>
            <desc>Code and test patch</desc>
            <filename>Bug-406744--full--4.patch</filename>
            <type>text/plain</type>
            <size>37115</size>
            <attacher name="ANIRBAN CHAKRABORTY">anchakrk</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0xhbWJkYUV4cHJlc3Np
b25zVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTGFtYmRhRXhwcmVz
c2lvbnNUZXN0LmphdmEKaW5kZXggN2RkMzRhMy4uZTdhMzI5MCAxMDA2NDQKLS0tIGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTGFtYmRhRXhwcmVzc2lvbnNUZXN0LmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTGFtYmRhRXhwcmVzc2lvbnNUZXN0LmphdmEK
QEAgLTI0NTAsMTEgKzI0NTAsMTEgQEAKIAkJfSwKIAkJIjkiKTsKIH0KIC8vIEJ1ZyA0MDY3NDQg
LSBbMS44XVtjb21waWxlcl1bY29kZWdlbl0gTGFtYmRhQ29udmVyc2lvbkV4Y2VwdGlvbiBzZWVu
IHdoZW4gbWV0aG9kIHJlZmVyZW5jZSB0YXJnZXRzIGEgdmFyYXJncyBtZXRob2QuCiAvLyBodHRw
czovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDA2NzQ0Ci1wdWJsaWMg
dm9pZCBfdGVzdDQwNjc0NGEoKSB7CitwdWJsaWMgdm9pZCB0ZXN0NDA2NzQ0YSgpIHsKIAl0aGlz
LnJ1bkNvbmZvcm1UZXN0KAogCQkJbmV3IFN0cmluZ1tdIHsKIAkJCQkiWC5qYXZhIiwKIAkJCQki
aW50ZXJmYWNlIEkge1xuIiArCiAJCQkJIgl2b2lkIGZvbyhJbnRlZ2VyIGExLCBJbnRlZ2VyIGEy
LCBTdHJpbmcgYTMpO1xuIiArCkBAIC0yNDc5LDExICsyNDc5LDExIEBACiAJCQkiMTBcbiIgKwog
CQkJIjIwXG4iICsKIAkJCSIxMCwgMjAiCiAJCQkpOwogfQotcHVibGljIHZvaWQgX3Rlc3Q0MDY3
NDRiKCkgeworcHVibGljIHZvaWQgdGVzdDQwNjc0NGIoKSB7CiAJdGhpcy5ydW5Db25mb3JtVGVz
dCgKIAkJCW5ldyBTdHJpbmdbXSB7CiAJCQkJIlguamF2YSIsCiAJCQkJImludGVyZmFjZSBJIHtc
biIgKwogCQkJCSIJaW50IGZvbyhJbnRlZ2VyIGExLCBJbnRlZ2VyIGEyLCBTdHJpbmcgYTMpO1xu
IiArCkBAIC0yNTA5LDExICsyNTA5LDExIEBACiAJCQkiMTBcbiIgKwogCQkJIjIwXG4iICsKIAkJ
CSIxMCwgMjAiCiAJCQkpOwogfQotcHVibGljIHZvaWQgX3Rlc3Q0MDY3NDRjKCkgeworcHVibGlj
IHZvaWQgdGVzdDQwNjc0NGMoKSB7CiAJdGhpcy5ydW5Db25mb3JtVGVzdCgKIAkJCW5ldyBTdHJp
bmdbXSB7CiAJCQkJIlguamF2YSIsCiAJCQkJImludGVyZmFjZSBJIHtcbiIgKwogCQkJCSIJdm9p
ZCBmb28oSW50ZWdlciBhMSwgSW50ZWdlciBhMiwgU3RyaW5nIGEzKTtcbiIgKwpAQCAtMjU0Miwx
MCArMjU0MiwzNDMgQEAKIAkJCSIxMFxuIiArCiAJCQkiMjBcbiIgKwogCQkJIjEwLCAyMCIKIAkJ
CSk7CiB9CitwdWJsaWMgdm9pZCB0ZXN0NDA2NzQ0ZCgpIHsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0
KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiWC5qYXZhIiwKKwkJCQkiaW50ZXJmYWNlIEkge1xu
IiArCisJCQkJIgl2b2lkIGZvbyhpbnQgYTEsIEludGVnZXIgYTIsIFN0cmluZyBhMyk7XG4iICsK
KwkJCQkifVxuIiArCisJCQkJImludGVyZmFjZSBZIHtcbiIgKworCQkJCSIJc3RhdGljIHZvaWQg
bShmbG9hdCBhMSwgT2JqZWN0Li4uIHJlc3QpIHtcbiIgKyAKKwkJCQkiCQlTeXN0ZW0ub3V0LnBy
aW50bG4oYTEpO1xuIiArCisJCQkJIgkJcHJpbnQocmVzdCk7XG4iICsKKwkJCQkiCX1cbiIgKwor
CQkJCSIJc3RhdGljIHZvaWQgcHJpbnQgKE9iamVjdCBbXSBvKSB7XG4iICsKKwkJCQkiCQlmb3Ig
KGludCBpID0gMDsgaSA8IG8ubGVuZ3RoOyBpKyspXG4iICsKKwkJCQkiCQkJU3lzdGVtLm91dC5w
cmludGxuKG9baV0pO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxuIiArCisJCQkJInB1Ymxp
YyBpbnRlcmZhY2UgWCBleHRlbmRzIFl7XG4iICsKKwkJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBt
YWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCQkiCQlJIGkgPSBZOjptO1xuIiArCisJCQkJ
IgkJaS5mb28oMTAsIDIwLCBcIjEwLCAyMFwiKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn1c
biIsCisJCQl9LAorCQkJIjEwLjBcbiIgKworCQkJIjIwXG4iICsKKwkJCSIxMCwgMjAiCisJCQkp
OworfQorcHVibGljIHZvaWQgdGVzdDQwNjc0NGUoKSB7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgK
KwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJIlguamF2YSIsCisJCQkJImludGVyZmFjZSBJIHtcbiIg
KworCQkJCSIJU3RyaW5nIG1ldGhvZChpbnQgYSk7XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNs
YXNzIEMge1xuIiArCisJCQkJIglzdGF0aWMgU3RyaW5nIGZvbyhJbnRlZ2VyLi4uIGkpIHtcbiIg
KworCQkJCSIJCXJldHVybiBcImZvb1wiO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkiCXN0YXRp
YyBTdHJpbmcgZ29vKEludGVnZXIgYmksIEludGVnZXIuLi4gaSkge1xuIiArCisJCQkJIgkJcmV0
dXJuIFwiYmFyXCI7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJcHVibGljIHZvaWQgZm9vKCkg
e1xuIiArCisJCQkJIgkJSSBpO1xuIiArCisJCQkJIgkJaSA9IEM6OmZvbztcbiIgKworCQkJCSIJ
CVN5c3RlbS5vdXQucHJpbnRsbihpLm1ldGhvZCgwKSk7XG4iICsKKwkJCQkiCQlpID0gQzo6Z29v
O1xuIiArCisJCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKGkubWV0aG9kKDApKTtcbiIgKworCQkJ
CSIJfVxuIiArCisJCQkJIn1cbiIgKworCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCQki
CXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBhcmd2W10pICAge1xuIiArCisJCQkJIgkJ
bmV3IEMoKS5mb28oKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn1cbiIsCisJCQl9LAorCQkJ
ImZvb1xuIiArCisJCQkiYmFyIgorCQkJKTsKK30KK3B1YmxpYyB2b2lkIHRlc3Q0MDY3NDRmKCkg
eworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEi
LAorCQkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCQkiCXZvaWQgZm9vKEludGVnZXIgYTEsIElu
dGVnZXIgYTIsIFN0cmluZyBhMyk7XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNsYXNzIFkge1xu
IiArCisJCQkJIgl2b2lkIG0oTnVtYmVyIGExLCBPYmplY3QuLi4gcmVzdCkge1xuIiArIAorCQkJ
CSIJCVN5c3RlbS5vdXQucHJpbnRsbihhMSk7XG4iICsKKwkJCQkiCQlwcmludChyZXN0KTtcbiIg
KworCQkJCSIJfVxuIiArCisJCQkJIglzdGF0aWMgdm9pZCBwcmludCAoT2JqZWN0IFtdIG8pIHtc
biIgKworCQkJCSIJCWZvciAoaW50IGkgPSAwOyBpIDwgby5sZW5ndGg7IGkrKylcbiIgKworCQkJ
CSIJCQlTeXN0ZW0ub3V0LnByaW50bG4ob1tpXSk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9
XG4iICsKKwkJCQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBZIHtcbiIgKworCQkJCSIJc3RhdGlj
IHZvaWQgcHJpbnQgKE9iamVjdCBbXSBvKSB7XG4iICsKKwkJCQkiCQlmb3IgKGludCBpID0gMDsg
aSA8IG8ubGVuZ3RoOyBpKyspXG4iICsKKwkJCQkiCQkJU3lzdGVtLm91dC5wcmludGxuKG9baV0p
O1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmlu
ZyBbXSBhcmdzKSB7XG4iICsKKwkJCQkiCQluZXcgWCgpLmZvbygpO1xuIiArCisJCQkJIgl9XG4i
ICsKKwkJCQkiCXZvaWQgZm9vKCkge1xuIiArIAorCQkJCSIJCUkgaSA9IHN1cGVyOjptO1xuIiAr
CisJCQkJIgkJaS5mb28oMTAsIDIwLCBcIjEwLCAyMFwiKTtcbiIgKworCQkJCSIJfVxuIiArCisJ
CQkJIn1cbiIsCisJCQl9LAorCQkJIjEwXG4iICsKKwkJCSIyMFxuIiArCisJCQkiMTAsIDIwIgor
CQkJKTsKK30KK3B1YmxpYyB2b2lkIHRlc3Q0MDY3NDRnKCkgeworCXRoaXMucnVuQ29uZm9ybVRl
c3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEiLAorCQkJCSJpbnRlcmZhY2UgSSB7
XG4iICsKKwkJCQkiCXZvaWQgZm9vKEludGVnZXIgYTEsIEludGVnZXIgYTIsIFN0cmluZyBhMyk7
XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNsYXNzIFkge1xuIiArCisJCQkJIglzdGF0aWMgdm9p
ZCBwcmludCAoT2JqZWN0IFtdIG8pIHtcbiIgKworCQkJCSIJCWZvciAoaW50IGkgPSAwOyBpIDwg
by5sZW5ndGg7IGkrKylcbiIgKworCQkJCSIJCQlTeXN0ZW0ub3V0LnByaW50bG4ob1tpXSk7XG4i
ICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iICsKKwkJCQkicHVibGljIGNsYXNzIFggZXh0ZW5k
cyBZIHtcbiIgKworCQkJCSIJcHJpdmF0ZSB2b2lkIG0oTnVtYmVyIGExLCBPYmplY3QuLi4gcmVz
dCkge1xuIiArIAorCQkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbihhMSk7XG4iICsKKwkJCQkiCQlw
cmludChyZXN0KTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIglzdGF0aWMgdm9pZCBwcmludCAo
T2JqZWN0IFtdIG8pIHtcbiIgKworCQkJCSIJCWZvciAoaW50IGkgPSAwOyBpIDwgby5sZW5ndGg7
IGkrKylcbiIgKworCQkJCSIJCQlTeXN0ZW0ub3V0LnByaW50bG4ob1tpXSk7XG4iICsKKwkJCQki
CX1cbiIgKworCQkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtc
biIgKworCQkJCSIJCW5ldyBYKCkuZm9vKCk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJdm9p
ZCBmb28oKSB7XG4iICsgCisJCQkJIgkJSSBpID0gdGhpczo6bTtcbiIgKworCQkJCSIJCWkuZm9v
KDEwLCAyMCwgXCIxMCwgMjBcIik7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iLAorCQkJ
fSwKKwkJCSIxMFxuIiArCisJCQkiMjBcbiIgKworCQkJIjEwLCAyMCIKKwkJCSk7Cit9CitwdWJs
aWMgdm9pZCB0ZXN0NDA2NzQ0aCgpIHsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQkJbmV3IFN0
cmluZ1tdIHsKKwkJCQkiWC5qYXZhIiwKKwkJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkJIgl2
b2lkIGZvbyhpbnQgW10gaWEpO1xuIiArCisJCQkJIn1cbiIgKworCQkJCSJjbGFzcyBZIHtcbiIg
KworCQkJCSIJdm9pZCBtKE9iamVjdC4uLiByZXN0KSB7XG4iICsgCisJCQkJIgkJU3lzdGVtLm91
dC5wcmludGxuKFwiSGVsbG8gXCIgKyByZXN0Lmxlbmd0aCk7XG4iICsKKwkJCQkiCX1cbiIgKwor
CQkJCSIJc3RhdGljIHZvaWQgcHJpbnQgKE9iamVjdCBbXSBvKSB7XG4iICsKKwkJCQkiCQlmb3Ig
KGludCBpID0gMDsgaSA8IG8ubGVuZ3RoOyBpKyspXG4iICsKKwkJCQkiCQkJU3lzdGVtLm91dC5w
cmludGxuKG9baV0pO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxuIiArCisJCQkJInB1Ymxp
YyBjbGFzcyBYIGV4dGVuZHMgWSB7XG4iICsKKwkJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWlu
KFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCQkiCQluZXcgWCgpLmZvbygpO1xuIiArCisJCQkJ
Igl9XG4iICsKKwkJCQkiCXZvaWQgZm9vKCkge1xuIiArIAorCQkJCSIJCUkgaSA9IHN1cGVyOjpt
O1xuIiArCisJCQkJIgkJaS5mb28obmV3IGludCBbMF0pO1xuIiArCisJCQkJIgl9XG4iICsKKwkJ
CQkifVxuIiwKKwkJCX0sCisJCQkiSGVsbG8gMSIKKwkJCSk7Cit9CitwdWJsaWMgdm9pZCB0ZXN0
NDA2NzQ0aSgpIHsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJ
CQkiWC5qYXZhIiwKKwkJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkJIgl2b2lkIGZvbyhpbnQg
W10gaWEpO1xuIiArCisJCQkJIn1cbiIgKworCQkJCSJjbGFzcyBZIHtcbiIgKworCQkJCSIJdm9p
ZCBtKE9iamVjdC4uLiByZXN0KSB7XG4iICsgCisJCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKFwi
SGVsbG8gXCIgKyByZXN0Lmxlbmd0aCk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJdm9pZCBu
KE9iamVjdC4uLiByZXN0KSB7XG4iICsgCisJCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKFwiSGVs
bG8gXCIgKyByZXN0Lmxlbmd0aCk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJc3RhdGljIHZv
aWQgcHJpbnQgKE9iamVjdCBbXSBvKSB7XG4iICsKKwkJCQkiCQlmb3IgKGludCBpID0gMDsgaSA8
IG8ubGVuZ3RoOyBpKyspXG4iICsKKwkJCQkiCQkJU3lzdGVtLm91dC5wcmludGxuKG9baV0pO1xu
IiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxuIiArCisJCQkJInB1YmxpYyBjbGFzcyBYIGV4dGVu
ZHMgWSB7XG4iICsKKwkJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBhcmdz
KSB7XG4iICsKKwkJCQkiCQluZXcgWCgpLmZvbygpO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQki
CXZvaWQgZm9vKCkge1xuIiArIAorCQkJCSIJCUkgW10gaSA9IHsgc3VwZXI6Om0sIHRoaXM6Om0s
IHN1cGVyOjpuLCB0aGlzOjpufTtcbiIgKworCQkJCSIJCWZvciAoSSB4IDogaSlcbiIgKworCQkJ
CSIJCQl4LmZvbyhuZXcgaW50IFswXSk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iLAor
CQkJfSwKKwkJCSJIZWxsbyAxXG4iICsKKwkJCSJIZWxsbyAxXG4iICsKKwkJCSJIZWxsbyAxXG4i
ICsKKwkJCSJIZWxsbyAxIgorCQkJKTsKK30KK3B1YmxpYyB2b2lkIHRlc3Q0MDY3NDRqKCkgewor
CXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEiLAor
CQkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCQkiCXZvaWQgZm9vKGludCBbXSBpYSk7XG4iICsK
KwkJCQkifVxuIiArCisJCQkJImludGVyZmFjZSBJMSB7XG4iICsKKwkJCQkiCXZvaWQgZm9vKGlu
dCBbXSBpYSk7XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNsYXNzIFkge1xuIiArCisJCQkJIgl2
b2lkIG0oT2JqZWN0Li4uIHJlc3QpIHtcbiIgKyAKKwkJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4o
XCJIZWxsbyBcIiArIHJlc3QubGVuZ3RoKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIglzdGF0
aWMgdm9pZCBwcmludCAoT2JqZWN0IFtdIG8pIHtcbiIgKworCQkJCSIJCWZvciAoaW50IGkgPSAw
OyBpIDwgby5sZW5ndGg7IGkrKylcbiIgKworCQkJCSIJCQlTeXN0ZW0ub3V0LnByaW50bG4ob1tp
XSk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iICsKKwkJCQkicHVibGljIGNsYXNzIFgg
ZXh0ZW5kcyBZIHtcbiIgKworCQkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtd
IGFyZ3MpIHtcbiIgKworCQkJCSIJCW5ldyBYKCkuZm9vKCk7XG4iICsKKwkJCQkiCX1cbiIgKwor
CQkJCSIJdm9pZCBmb28oKSB7XG4iICsgCisJCQkJIgkJSSBpID0gc3VwZXI6Om07XG4iICsKKwkJ
CQkiCQlpLmZvbyhuZXcgaW50IFswXSk7XG4iICsKKwkJCQkiCQlJMSBpMSA9IHN1cGVyOjptO1xu
IiArCisJCQkJIgkJaTEuZm9vKG5ldyBpbnQgWzBdKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJ
In1cbiIsCisJCQl9LAorCQkJIkhlbGxvIDFcbiIgKworCQkJIkhlbGxvIDEiCisJCQkpOworfQor
cHVibGljIHZvaWQgdGVzdDQwNjc0NGsoKSB7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJCW5l
dyBTdHJpbmdbXSB7CisJCQkJIlguamF2YSIsCisJCQkJImludGVyZmFjZSBJIHtcbiIgKworCQkJ
CSIJdm9pZCBmb28oaW50IFtdIGlhKTtcbiIgKworCQkJCSJ9XG4iICsKKwkJCQkiaW50ZXJmYWNl
IEkxIGV4dGVuZHMgSSB7XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNsYXNzIFkge1xuIiArCisJ
CQkJIgl2b2lkIG0oT2JqZWN0Li4uIHJlc3QpIHtcbiIgKyAKKwkJCQkiCQlTeXN0ZW0ub3V0LnBy
aW50bG4oXCJIZWxsbyBcIiArIHJlc3QubGVuZ3RoKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJ
IglzdGF0aWMgdm9pZCBwcmludCAoT2JqZWN0IFtdIG8pIHtcbiIgKworCQkJCSIJCWZvciAoaW50
IGkgPSAwOyBpIDwgby5sZW5ndGg7IGkrKylcbiIgKworCQkJCSIJCQlTeXN0ZW0ub3V0LnByaW50
bG4ob1tpXSk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iICsKKwkJCQkicHVibGljIGNs
YXNzIFggZXh0ZW5kcyBZIHtcbiIgKworCQkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3Ry
aW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJCSIJCW5ldyBYKCkuZm9vKCk7XG4iICsKKwkJCQkiCX1c
biIgKworCQkJCSIJdm9pZCBmb28oKSB7XG4iICsgCisJCQkJIgkJSSBpID0gc3VwZXI6Om07XG4i
ICsKKwkJCQkiCQlpLmZvbyhuZXcgaW50IFswXSk7XG4iICsKKwkJCQkiCQlJMSBpMSA9IHRoaXM6
Om07XG4iICsKKwkJCQkiCQlpMS5mb28obmV3IGludCBbMF0pO1xuIiArCisJCQkJIgl9XG4iICsK
KwkJCQkifVxuIiwKKwkJCX0sCisJCQkiSGVsbG8gMVxuIiArCisJCQkiSGVsbG8gMSIKKwkJCSk7
Cit9CitwdWJsaWMgdm9pZCB0ZXN0NDA2NzQ0bCgpIHsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAor
CQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiWC5qYXZhIiwKKwkJCQkiaW50ZXJmYWNlIEkge1xuIiAr
CisJCQkJIgl2b2lkIGZvbyhpbnQgW10gaWEpO1xuIiArCisJCQkJIn1cbiIgKworCQkJCSJjbGFz
cyBZIHtcbiIgKworCQkJCSIJdm9pZCBtKE9iamVjdC4uLiByZXN0KSB7XG4iICsgCisJCQkJIgkJ
SSBpID0gdGhpczo6bjtcbiIgKworCQkJCSIJCWkuZm9vKG5ldyBpbnQgWzBdKTtcbiIgKworCQkJ
CSIJfVxuIiArCisJCQkJIgl2b2lkIG4oT2JqZWN0Li4uIHJlc3QpIHtcbiIgKyAKKwkJCQkiCQlT
eXN0ZW0ub3V0LnByaW50bG4oXCJIZWxsbyBcIiArIHJlc3QubGVuZ3RoKTtcbiIgKworCQkJCSIJ
fVxuIiArCisJCQkJIglzdGF0aWMgdm9pZCBwcmludCAoT2JqZWN0IFtdIG8pIHtcbiIgKworCQkJ
CSIJCWZvciAoaW50IGkgPSAwOyBpIDwgby5sZW5ndGg7IGkrKylcbiIgKworCQkJCSIJCQlTeXN0
ZW0ub3V0LnByaW50bG4ob1tpXSk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iICsKKwkJ
CQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBZIHtcbiIgKworCQkJCSIJcHVibGljIHN0YXRpYyB2
b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJCSIJCW5ldyBYKCkuZm9vKCk7XG4i
ICsKKwkJCQkiCX1cbiIgKworCQkJCSIJdm9pZCBmb28oKSB7XG4iICsgCisJCQkJIgkJSSBpID0g
c3VwZXI6Om07XG4iICsKKwkJCQkiCQlpLmZvbyhuZXcgaW50IFswXSk7XG4iICsKKwkJCQkiCX1c
biIgKworCQkJCSJ9XG4iLAorCQkJfSwKKwkJCSJIZWxsbyAxIgorCQkJKTsKK30KK3B1YmxpYyB2
b2lkIHRlc3Q0MDY3NDRtKCkgeworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQluZXcgU3RyaW5n
W10geworCQkJCSJYLmphdmEiLAorCQkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCQkiCXZvaWQg
Zm9vKGludCBbXSBpYSk7XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNsYXNzIFkge1xuIiArCisJ
CQkJIglzdGF0aWMgdm9pZCBtKE9iamVjdC4uLiByZXN0KSB7XG4iICsgCisJCQkJIgkJU3lzdGVt
Lm91dC5wcmludGxuKFwiSGVsbG8gXCIgKyByZXN0Lmxlbmd0aCk7XG4iICsKKwkJCQkiCX1cbiIg
KworCQkJCSIJc3RhdGljIHZvaWQgcHJpbnQgKE9iamVjdCBbXSBvKSB7XG4iICsKKwkJCQkiCQlm
b3IgKGludCBpID0gMDsgaSA8IG8ubGVuZ3RoOyBpKyspXG4iICsKKwkJCQkiCQkJU3lzdGVtLm91
dC5wcmludGxuKG9baV0pO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNs
YXNzIFkxIGV4dGVuZHMgWSB7IH1cbiIgKworCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJ
CQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCQki
CQluZXcgWCgpLmZvbygpO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkiCXZvaWQgZm9vKCkge1xu
IiArIAorCQkJCSIJCUkgaSA9IFk6Om07XG4iICsKKwkJCQkiCQlpLmZvbyhuZXcgaW50IFswXSk7
XG4iICsKKwkJCQkiCQlpID0gWTE6Om07XG4iICsKKwkJCQkiCQlpLmZvbyhuZXcgaW50IFswXSk7
XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iLAorCQkJfSwKKwkJCSJIZWxsbyAxXG4iICsK
KwkJCSJIZWxsbyAxIgorCQkJKTsKK30KIAogcHVibGljIHN0YXRpYyBDbGFzcyB0ZXN0Q2xhc3Mo
KSB7CiAJcmV0dXJuIExhbWJkYUV4cHJlc3Npb25zVGVzdC5jbGFzczsKIH0KIH0KZGlmZiAtLWdp
dCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL051bGxUeXBlQW5ub3RhdGlvblRlc3Qu
amF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL051bGxUeXBlQW5ub3RhdGlvblRl
c3QuamF2YQppbmRleCA2MjRkNWE2Li5mNTRmNThjIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29t
cGlsZXIvcmVncmVzc2lvbi9OdWxsVHlwZUFubm90YXRpb25UZXN0LmphdmEKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTnVsbFR5cGVBbm5vdGF0aW9uVGVzdC5qYXZhCkBAIC0x
LDcgKzEsNyBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAx
MiwgMjAxMyBHSyBTb2Z0d2FyZSBBRyBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDEy
LCAyMDE0IEdLIFNvZnR3YXJlIEFHIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVk
LiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFk
ZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNl
IHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZh
aWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAog
ICogCkBAIC0zNDI1LDEyICszNDI1LDExIEBACiAJCSIJICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgIF5eXl5eXl5eXlxuIiArIAogCQkiTnVsbCB0eXBlIG1pc21hdGNoIGF0IHBhcmFt
ZXRlciAzOiByZXF1aXJlZCBcJ0BOb25OdWxsIEZpbGVWaXNpdE9wdGlvblwnIGJ1dCBwcm92aWRl
ZCBcJ0BOdWxsYWJsZSBGaWxlVmlzaXRPcHRpb25cJyB2aWEgbWV0aG9kIGRlc2NyaXB0b3IgVHJp
RnVuYzxQYXRoLEZpbGVWaXNpdE9wdGlvbixGaWxlVmlzaXRPcHRpb24sU3RyZWFtPFBhdGg+Pi5h
cHBseShQYXRoLCBGaWxlVmlzaXRPcHRpb24sIEZpbGVWaXNpdE9wdGlvbilcbiIgKyAKIAkJIi0t
LS0tLS0tLS1cbiIpOwogfQogCi0vLyBESVNBQkxFRCwgY3VycmVudGx5IHRocm93cyBqYXZhLmxh
bmcuQm9vdHN0cmFwTWV0aG9kRXJyb3IgYXQgcnVudGltZToKLXB1YmxpYyB2b2lkIF90ZXN0QnVn
NDI0NjM3X2NvbW1lbnQzKCkgeworcHVibGljIHZvaWQgdGVzdEJ1ZzQyNDYzN19jb21tZW50Mygp
IHsKIAlydW5Db25mb3JtVGVzdCgKIAkJbmV3IFN0cmluZ1tdIHsKIAkJCSJWYXJBcmdzTWV0aG9k
UmVmZXJlbmNlVGVzdC5qYXZhIiwKIAkJCSJpbXBvcnQgamF2YS51dGlsLmZ1bmN0aW9uLkNvbnN1
bWVyO1xuIiArIAogCQkJInB1YmxpYyBjbGFzcyBWYXJBcmdzTWV0aG9kUmVmZXJlbmNlVGVzdCB7
XG4iICsgCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvQ2xhc3NGaWxlLmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvQ2xhc3NG
aWxlLmphdmEKaW5kZXggYmY3ZTMwYy4uYTk2MDI1ZiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL0NsYXNz
RmlsZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9DbGFzc0ZpbGUuamF2YQpAQCAtOTAwLDEwICs5MDAsMTMg
QEAKIAkJCQkJCWNhc2UgU3ludGhldGljTWV0aG9kQmluZGluZy5TdXBlck1ldGhvZEFjY2VzcyA6
CiAJCQkJCQljYXNlIFN5bnRoZXRpY01ldGhvZEJpbmRpbmcuQnJpZGdlTWV0aG9kIDoKIAkJCQkJ
CQkvLyBnZW5lcmF0ZSBhIG1ldGhvZCBpbmZvIHRvIGVtdWxhdGUgYW4gYWNjZXNzIHRvIGEgbm9u
LWFjY2Vzc2libGUgbWV0aG9kIC8gc3VwZXItbWV0aG9kIG9yIGJyaWRnZSBtZXRob2QKIAkJCQkJ
CQlhZGRTeW50aGV0aWNNZXRob2RBY2Nlc3NNZXRob2Qoc3ludGhldGljTWV0aG9kKTsKIAkJCQkJ
CQlicmVhazsKKwkJCQkJCWNhc2UgU3ludGhldGljTWV0aG9kQmluZGluZy5DaGFubmVsaXNlUGFy
YW1zVG9WYXJBcmdzIDoKKwkJCQkJCQlhZGRTeW50aGV0aWNNZXRob2RBY2Nlc3NNZXRob2RGb3JW
YXJBcmdzKHN5bnRoZXRpY01ldGhvZCk7CisJCQkJCQkJYnJlYWs7CiAJCQkJCQljYXNlIFN5bnRo
ZXRpY01ldGhvZEJpbmRpbmcuQ29uc3RydWN0b3JBY2Nlc3MgOgogCQkJCQkJCS8vIGdlbmVyYXRl
IGEgbWV0aG9kIGluZm8gdG8gZW11bGF0ZSBhbiBhY2Nlc3MgdG8gYSBub24tYWNjZXNzaWJsZSBj
b25zdHJ1Y3RvcgogCQkJCQkJCWFkZFN5bnRoZXRpY0NvbnN0cnVjdG9yQWNjZXNzTWV0aG9kKHN5
bnRoZXRpY01ldGhvZCk7CiAJCQkJCQkJYnJlYWs7CiAJCQkJCQljYXNlIFN5bnRoZXRpY01ldGhv
ZEJpbmRpbmcuRW51bVZhbHVlcyA6CkBAIC0xMjE2LDEwICsxMjE5LDMxIEBACiAJCQkJLnNjb3Bl
CiAJCQkJLnJlZmVyZW5jZUNvbXBpbGF0aW9uVW5pdCgpCiAJCQkJLmNvbXBpbGF0aW9uUmVzdWx0
CiAJCQkJLmdldExpbmVTZXBhcmF0b3JQb3NpdGlvbnMoKSk7CiAJCS8vIHVwZGF0ZSB0aGUgbnVt
YmVyIG9mIGF0dHJpYnV0ZXMKKwkJdGhpcy5jb250ZW50c1ttZXRob2RBdHRyaWJ1dGVPZmZzZXQr
K10gPSAoYnl0ZSkgKGF0dHJpYnV0ZU51bWJlciA+PiA4KTsKKwkJdGhpcy5jb250ZW50c1ttZXRo
b2RBdHRyaWJ1dGVPZmZzZXRdID0gKGJ5dGUpIGF0dHJpYnV0ZU51bWJlcjsKKwl9CisKKwlwdWJs
aWMgdm9pZCBhZGRTeW50aGV0aWNNZXRob2RBY2Nlc3NNZXRob2RGb3JWYXJBcmdzKFN5bnRoZXRp
Y01ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZykgeworCQlnZW5lcmF0ZU1ldGhvZEluZm9IZWFk
ZXIobWV0aG9kQmluZGluZyk7CisJCWludCBtZXRob2RBdHRyaWJ1dGVPZmZzZXQgPSB0aGlzLmNv
bnRlbnRzT2Zmc2V0OworCQlpbnQgYXR0cmlidXRlTnVtYmVyID0gZ2VuZXJhdGVNZXRob2RJbmZv
QXR0cmlidXRlcyhtZXRob2RCaW5kaW5nKTsKKwkJaW50IGNvZGVBdHRyaWJ1dGVPZmZzZXQgPSB0
aGlzLmNvbnRlbnRzT2Zmc2V0OworCQlhdHRyaWJ1dGVOdW1iZXIrKzsKKwkJZ2VuZXJhdGVDb2Rl
QXR0cmlidXRlSGVhZGVyKCk7CisJCXRoaXMuY29kZVN0cmVhbS5pbml0KHRoaXMpOworCQl0aGlz
LmNvZGVTdHJlYW0uZ2VuZXJhdGVTeW50aGV0aWNCb2R5Rm9yTWV0aG9kQWNjZXNzRm9yVmFyQXJn
cyhtZXRob2RCaW5kaW5nKTsKKwkJY29tcGxldGVDb2RlQXR0cmlidXRlRm9yU3ludGhldGljTWV0
aG9kKAorCQkJbWV0aG9kQmluZGluZywKKwkJCWNvZGVBdHRyaWJ1dGVPZmZzZXQsCisJCQkoKFNv
dXJjZVR5cGVCaW5kaW5nKSBtZXRob2RCaW5kaW5nLmRlY2xhcmluZ0NsYXNzKQorCQkJCS5zY29w
ZQorCQkJCS5yZWZlcmVuY2VDb21waWxhdGlvblVuaXQoKQorCQkJCS5jb21waWxhdGlvblJlc3Vs
dAorCQkJCS5nZXRMaW5lU2VwYXJhdG9yUG9zaXRpb25zKCkpOwogCQl0aGlzLmNvbnRlbnRzW21l
dGhvZEF0dHJpYnV0ZU9mZnNldCsrXSA9IChieXRlKSAoYXR0cmlidXRlTnVtYmVyID4+IDgpOwog
CQl0aGlzLmNvbnRlbnRzW21ldGhvZEF0dHJpYnV0ZU9mZnNldF0gPSAoYnl0ZSkgYXR0cmlidXRl
TnVtYmVyOwogCX0KIAogCXB1YmxpYyB2b2lkIGFkZFN5bnRoZXRpY1N3aXRjaFRhYmxlKFN5bnRo
ZXRpY01ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZykgewpAQCAtMjg3NywxMiArMjkwMSwxNCBA
QAogCQlpbnQgYXR0cmlidXRlTGVuZ3RoUG9zaXRpb24gPSBsb2NhbENvbnRlbnRzT2Zmc2V0Owog
CQlsb2NhbENvbnRlbnRzT2Zmc2V0ICs9IDQ7CiAJCXRoaXMuY29udGVudHNbbG9jYWxDb250ZW50
c09mZnNldCsrXSA9IChieXRlKSAobnVtYmVyT2ZCb290c3RyYXBzID4+IDgpOwogCQl0aGlzLmNv
bnRlbnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgbnVtYmVyT2ZCb290c3RyYXBz
OwogCQlmb3IgKGludCBpID0gMDsgaSA8IG51bWJlck9mQm9vdHN0cmFwczsgaSsrKSB7Ci0JCQlG
dW5jdGlvbmFsRXhwcmVzc2lvbiBmdW5jdGlvbmFsID0gKEZ1bmN0aW9uYWxFeHByZXNzaW9uKSBm
dW5jdGlvbmFsRXhwcmVzc2lvbkxpc3QuZ2V0KGkpOwotCQkJCisJCQlPYmplY3QgdGVtcCA9IGZ1
bmN0aW9uYWxFeHByZXNzaW9uTGlzdC5nZXQoaSk7CisKKwkJCWlmICh0ZW1wIGluc3RhbmNlb2Yg
RnVuY3Rpb25hbEV4cHJlc3Npb24pIHsKKwkJCUZ1bmN0aW9uYWxFeHByZXNzaW9uIGZ1bmN0aW9u
YWwgPSAoRnVuY3Rpb25hbEV4cHJlc3Npb24pdGVtcDsKIAkJCVR5cGVCaW5kaW5nW10gbWFya2Vy
SW50ZXJmYWNlcyA9IG51bGw7CiAJCQlpZiAoZnVuY3Rpb25hbCBpbnN0YW5jZW9mIExhbWJkYUV4
cHJlc3Npb24gJiYgCiAJCQkJICAgKCgobWFya2VySW50ZXJmYWNlcz0oKExhbWJkYUV4cHJlc3Np
b24pZnVuY3Rpb25hbCkuZ2V0TWFya2VySW50ZXJmYWNlcygpKSAhPSBudWxsKSB8fAogCQkJCSAg
IAkoKExhbWJkYUV4cHJlc3Npb24pZnVuY3Rpb25hbCkuaXNTZXJpYWxpemFibGUpKSB7CiAJCQkJ
CkBAIC0yOTY3LDEwICsyOTkzLDM2IEBACiAJCiAJCQkJY2hhciBbXSBpbnN0YW50aWF0ZWRTaWdu
YXR1cmUgPSBmdW5jdGlvbmFsLmRlc2NyaXB0b3Iuc2lnbmF0dXJlKCk7CiAJCQkJaW50IG1ldGhv
ZFR5cGVJbmRleCA9IHRoaXMuY29uc3RhbnRQb29sLmxpdGVyYWxJbmRleEZvck1ldGhvZFR5cGUo
aW5zdGFudGlhdGVkU2lnbmF0dXJlKTsKIAkJCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVudHNP
ZmZzZXQrK10gPSAoYnl0ZSkgKG1ldGhvZFR5cGVJbmRleCA+PiA4KTsKIAkJCQl0aGlzLmNvbnRl
bnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgbWV0aG9kVHlwZUluZGV4OwkJCQkK
KwkJCX0KKwkJCX0gZWxzZSBpZiAodGVtcCBpbnN0YW5jZW9mIFN5bnRoZXRpY01ldGhvZEJpbmRp
bmcgJiYgKChTeW50aGV0aWNNZXRob2RCaW5kaW5nKXRlbXApLnB1cnBvc2UgPT0gU3ludGhldGlj
TWV0aG9kQmluZGluZy5DaGFubmVsaXNlUGFyYW1zVG9WYXJBcmdzKSB7CisJCQkJaWYgKGluZGV4
Rm9yTWV0YUZhY3RvcnkgPT0gMCkgeworCQkJCQlpbmRleEZvck1ldGFGYWN0b3J5ID0gdGhpcy5j
b25zdGFudFBvb2wubGl0ZXJhbEluZGV4Rm9yTWV0aG9kSGFuZGxlKENsYXNzRmlsZUNvbnN0YW50
cy5NZXRob2RIYW5kbGVSZWZLaW5kSW52b2tlU3RhdGljLCBqYXZhTGFuZ0ludm9rZUxhbWJkYU1l
dGFmYWN0b3J5LCAKKwkJCQkJCQlDb25zdGFudFBvb2wuTUVUQUZBQ1RPUlksIENvbnN0YW50UG9v
bC5KQVZBX0xBTkdfSU5WT0tFX0xBTUJEQU1FVEFGQUNUT1JZX01FVEFGQUNUT1JZX1NJR05BVFVS
RSwgZmFsc2UpOworCQkJCX0KKwkJCQlTeW50aGV0aWNNZXRob2RCaW5kaW5nIHN5bnRoZXRpYyA9
IChTeW50aGV0aWNNZXRob2RCaW5kaW5nKSB0ZW1wOworCQkJCQorCQkJCXRoaXMuY29udGVudHNb
bG9jYWxDb250ZW50c09mZnNldCsrXSA9IChieXRlKSAoaW5kZXhGb3JNZXRhRmFjdG9yeSA+PiA4
KTsKKwkJCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgaW5k
ZXhGb3JNZXRhRmFjdG9yeTsKKwkJCQkKKwkJCQkvLyB1MiBudW1fYm9vdHN0cmFwX2FyZ3VtZW50
cworCQkJCXRoaXMuY29udGVudHNbbG9jYWxDb250ZW50c09mZnNldCsrXSA9IDA7CisJCQkJdGhp
cy5jb250ZW50c1tsb2NhbENvbnRlbnRzT2Zmc2V0KytdID0gKGJ5dGUpIDM7CisJCQkJCisJCQkJ
aW50IGZ1bmN0aW9uYWxEZXNjcmlwdG9ySW5kZXggPSB0aGlzLmNvbnN0YW50UG9vbC5saXRlcmFs
SW5kZXhGb3JNZXRob2RUeXBlKHN5bnRoZXRpYy5pbnB1dE1ldGhvZC5vcmlnaW5hbCgpLnNpZ25h
dHVyZSgpKTsKKwkJCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10gPSAoYnl0
ZSkgKGZ1bmN0aW9uYWxEZXNjcmlwdG9ySW5kZXggPj4gOCk7CisJCQkJdGhpcy5jb250ZW50c1ts
b2NhbENvbnRlbnRzT2Zmc2V0KytdID0gKGJ5dGUpIGZ1bmN0aW9uYWxEZXNjcmlwdG9ySW5kZXg7
CisJCisJCQkJaW50IG1ldGhvZEhhbmRsZUluZGV4ID0gdGhpcy5jb25zdGFudFBvb2wubGl0ZXJh
bEluZGV4Rm9yTWV0aG9kSGFuZGxlKHN5bnRoZXRpYy5vcmlnaW5hbCgpKTsgLy8gU3BlYWsgb2Yg
IiBpbXBsZW1lbnRhdGlvbiIgKGVyYXNlZCkgdmVyc2lvbiBoZXJlLCBhZGFwdGF0aW9ucyBkZXNj
cmliZWQgYmVsb3cuCisJCQkJdGhpcy5jb250ZW50c1tsb2NhbENvbnRlbnRzT2Zmc2V0KytdID0g
KGJ5dGUpIChtZXRob2RIYW5kbGVJbmRleCA+PiA4KTsKKwkJCQl0aGlzLmNvbnRlbnRzW2xvY2Fs
Q29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgbWV0aG9kSGFuZGxlSW5kZXg7CisJCisJCQkJaW50
IG1ldGhvZFR5cGVJbmRleCA9IHRoaXMuY29uc3RhbnRQb29sLmxpdGVyYWxJbmRleEZvck1ldGhv
ZFR5cGUoc3ludGhldGljLmlucHV0TWV0aG9kLnNpZ25hdHVyZSgpKTsKKwkJCQl0aGlzLmNvbnRl
bnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgKG1ldGhvZFR5cGVJbmRleCA+PiA4
KTsKKwkJCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgbWV0
aG9kVHlwZUluZGV4OwkJCQkJCQkJCiAJCQl9CiAJCX0KIAogCQlpbnQgYXR0cmlidXRlTGVuZ3Ro
ID0gbG9jYWxDb250ZW50c09mZnNldCAtIGF0dHJpYnV0ZUxlbmd0aFBvc2l0aW9uIC0gNDsKIAkJ
dGhpcy5jb250ZW50c1thdHRyaWJ1dGVMZW5ndGhQb3NpdGlvbisrXSA9IChieXRlKSAoYXR0cmli
dXRlTGVuZ3RoID4+IDI0KTsKQEAgLTUxMTksMTAgKzUxNzEsMTggQEAKIAkJdGhpcy5ib290c3Ry
YXBNZXRob2RzLmFkZChleHByZXNzaW9uKTsKIAkJLy8gUmVjb3JkIHdoaWNoIGJvb3RzdHJhcCBt
ZXRob2Qgd2FzIGFzc2lnbmVkIHRvIHRoZSBleHByZXNzaW9uCiAJCWV4cHJlc3Npb24uYm9vdHN0
cmFwTWV0aG9kTnVtYmVyID0gdGhpcy5ib290c3RyYXBNZXRob2RzLnNpemUoKSAtIDE7CiAJCXJl
dHVybiB0aGlzLmJvb3RzdHJhcE1ldGhvZHMuc2l6ZSgpIC0gMTsKIAl9CisJCisJcHVibGljIGlu
dCByZWNvcmRCb290c3RyYXBNZXRob2QoU3ludGhldGljTWV0aG9kQmluZGluZyBzbSkgeworCQlp
ZiAodGhpcy5ib290c3RyYXBNZXRob2RzID09IG51bGwpIHsKKwkJCXRoaXMuYm9vdHN0cmFwTWV0
aG9kcyA9IG5ldyBBcnJheUxpc3QoKTsKKwkJfQorCQl0aGlzLmJvb3RzdHJhcE1ldGhvZHMuYWRk
KHNtKTsKKwkJcmV0dXJuIHRoaXMuYm9vdHN0cmFwTWV0aG9kcy5zaXplKCkgLSAxOworCX0KIAog
CXB1YmxpYyB2b2lkIHJlc2V0KFNvdXJjZVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nKSB7CiAJCS8v
IHRoZSBjb2RlIHN0cmVhbSBpcyByZWluaXRpYWxpemVkIGZvciBlYWNoIG1ldGhvZAogCQlmaW5h
bCBDb21waWxlck9wdGlvbnMgb3B0aW9ucyA9IHR5cGVCaW5kaW5nLnNjb3BlLmNvbXBpbGVyT3B0
aW9ucygpOwogCQl0aGlzLnJlZmVyZW5jZUJpbmRpbmcgPSB0eXBlQmluZGluZzsKZGlmZiAtLWdp
dCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9hc3QvUmVmZXJlbmNlRXhwcmVzc2lvbi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9SZWZl
cmVuY2VFeHByZXNzaW9uLmphdmEKaW5kZXggODEyM2U3My4uODM2MGJmMyAxMDA2NDQKLS0tIGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2FzdC9SZWZlcmVuY2VFeHByZXNzaW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9SZWZl
cmVuY2VFeHByZXNzaW9uLmphdmEKQEAgLTE3MCwxMSArMTcwLDIyIEBACiAJCX0KIAkJYnVmZmVy
LmFwcGVuZCgnKScpOwogCQlidWZmZXIuYXBwZW5kKCdMJyk7CiAJCWJ1ZmZlci5hcHBlbmQodGhp
cy5yZXNvbHZlZFR5cGUuY29uc3RhbnRQb29sTmFtZSgpKTsKIAkJYnVmZmVyLmFwcGVuZCgnOycp
OwotCQlpbnQgaW52b2tlRHluYW1pY051bWJlciA9IGNvZGVTdHJlYW0uY2xhc3NGaWxlLnJlY29y
ZEJvb3RzdHJhcE1ldGhvZCh0aGlzKTsKKwkJaW50IGludm9rZUR5bmFtaWNOdW1iZXI7CisJCWlm
ICh0aGlzLmJpbmRpbmcuaXNWYXJhcmdzKCkgJiYgISh0aGlzLmJpbmRpbmcgaW5zdGFuY2VvZiBT
eW50aGV0aWNNZXRob2RCaW5kaW5nKSAmJiAhdGhpcy5iaW5kaW5nLmFyZVBhcmFtZXRlckVyYXN1
cmVzRXF1YWwodGhpcy5kZXNjcmlwdG9yKSkgeworCQkJU3ludGhldGljTWV0aG9kQmluZGluZyBz
bSA9IHNvdXJjZVR5cGUuYWRkU3ludGhldGljTWV0aG9kRm9yQXJndW1lbnRDaGFubmVsaW5nRm9y
VmFyQXJncyh0aGlzLmRlc2NyaXB0b3IsIHRoaXMuYmluZGluZywgZmFsc2UpOworCQkJaWYgKHNt
Lmludm9rZUR5bmFtaWNOdW1iZXIgPT0gU3ludGhldGljTWV0aG9kQmluZGluZy5OT1RfQk9PVFNU
UkFQUEVEKSB7CisJCQkJc20uaW52b2tlRHluYW1pY051bWJlciA9IGludm9rZUR5bmFtaWNOdW1i
ZXIgPSBjb2RlU3RyZWFtLmNsYXNzRmlsZS5yZWNvcmRCb290c3RyYXBNZXRob2Qoc20pOworCQkJ
fSBlbHNlIHsKKwkJCQlpbnZva2VEeW5hbWljTnVtYmVyID0gc20uaW52b2tlRHluYW1pY051bWJl
cjsKKwkJCX0KKwkJCQorCQl9IGVsc2UgeworCQkJaW52b2tlRHluYW1pY051bWJlciA9IGNvZGVT
dHJlYW0uY2xhc3NGaWxlLnJlY29yZEJvb3RzdHJhcE1ldGhvZCh0aGlzKTsKKwkJfQogCQljb2Rl
U3RyZWFtLmludm9rZUR5bmFtaWMoaW52b2tlRHluYW1pY051bWJlciwgYXJndW1lbnRzU2l6ZSwg
MSwgdGhpcy5kZXNjcmlwdG9yLnNlbGVjdG9yLCBidWZmZXIudG9TdHJpbmcoKS50b0NoYXJBcnJh
eSgpLCAKIAkJCQl0aGlzLmlzQ29uc3RydWN0b3JSZWZlcmVuY2UoKSwgKHRoaXMubGhzIGluc3Rh
bmNlb2YgVHlwZVJlZmVyZW5jZT8gKFR5cGVSZWZlcmVuY2UpIHRoaXMubGhzIDogbnVsbCksIHRo
aXMudHlwZUFyZ3VtZW50cyk7CiAJCWlmICghdmFsdWVSZXF1aXJlZCkKIAkJCWNvZGVTdHJlYW0u
cG9wKCk7CiAJCWNvZGVTdHJlYW0ucmVjb3JkUG9zaXRpb25zRnJvbShwYywgdGhpcy5zb3VyY2VT
dGFydCk7CkBAIC0yMTcsMTEgKzIyOCwxNSBAQAogCQkJCVR5cGVSZWZlcmVuY2UgcXVhbGlmaWNh
dGlvbiA9IHF1YWxpZmllZFN1cGVyUmVmZXJlbmNlLnF1YWxpZmljYXRpb247CiAJCQkJaWYgKCFx
dWFsaWZpY2F0aW9uLnJlc29sdmVkVHlwZS5pc0ludGVyZmFjZSgpKSAvLyB3ZSBjYW4ndCBkcm9w
IHRoZSBicmlkZ2UgaW4gSSwgaXQgbWF5IG5vdCBldmVuIGJlIGEgc291cmNlIHR5cGUuCiAJCQkJ
CWRlc3RpbmF0aW9uVHlwZSA9IChTb3VyY2VUeXBlQmluZGluZykgKHF1YWxpZmllZFN1cGVyUmVm
ZXJlbmNlLmN1cnJlbnRDb21wYXRpYmxlVHlwZSk7CiAJCQl9CiAJCQkKLQkJCXRoaXMuc3ludGhl
dGljQWNjZXNzb3IgPSBkZXN0aW5hdGlvblR5cGUuYWRkU3ludGhldGljTWV0aG9kKGNvZGVnZW5C
aW5kaW5nLCB0cnVlKTsKKwkJCWlmIChjb2RlZ2VuQmluZGluZy5pc1ZhcmFyZ3MoKSAmJiAhKGNv
ZGVnZW5CaW5kaW5nIGluc3RhbmNlb2YgU3ludGhldGljTWV0aG9kQmluZGluZykgJiYgIWNvZGVn
ZW5CaW5kaW5nLmFyZVBhcmFtZXRlckVyYXN1cmVzRXF1YWwodGhpcy5kZXNjcmlwdG9yKSkgewor
CQkJCXRoaXMuc3ludGhldGljQWNjZXNzb3IgPSBkZXN0aW5hdGlvblR5cGUuYWRkU3ludGhldGlj
TWV0aG9kRm9yQXJndW1lbnRDaGFubmVsaW5nRm9yVmFyQXJncyh0aGlzLmRlc2NyaXB0b3IsIHRo
aXMuYmluZGluZywgdHJ1ZSk7CisJCQl9IGVsc2UgeworCQkJCXRoaXMuc3ludGhldGljQWNjZXNz
b3IgPSBkZXN0aW5hdGlvblR5cGUuYWRkU3ludGhldGljTWV0aG9kKGNvZGVnZW5CaW5kaW5nLCB0
cnVlKTsKKwkJCX0KIAkJCWN1cnJlbnRTY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5uZWVkVG9FbXVs
YXRlTWV0aG9kQWNjZXNzKGNvZGVnZW5CaW5kaW5nLCB0aGlzKTsKIAkJCXJldHVybjsKIAkJfQog
CQkKIAkJaWYgKHRoaXMuYmluZGluZy5pc1Byb3RlY3RlZCgpICYmICh0aGlzLmJpdHMgJiBBU1RO
b2RlLkRlcHRoTUFTSykgIT0gMCAmJiBjb2RlZ2VuQmluZGluZy5kZWNsYXJpbmdDbGFzcy5nZXRQ
YWNrYWdlKCkgIT0gZW5jbG9zaW5nU291cmNlVHlwZS5nZXRQYWNrYWdlKCkpIHsKZGlmZiAtLWdp
dCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9jb2RlZ2VuL0NvZGVTdHJlYW0uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jb2RlZ2VuL0NvZGVT
dHJlYW0uamF2YQppbmRleCA0MDJkODRkLi4xZGEyMzllIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY29k
ZWdlbi9Db2RlU3RyZWFtLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NvZGVnZW4vQ29kZVN0cmVhbS5qYXZh
CkBAIC0yOTYyLDEwICsyOTYyLDEwOCBAQAogCQkJCXRoaXMuY2hlY2tjYXN0KGFjY2Vzc0VyYXN1
cmUpOyAvLyBmb3IgYnJpZGdlIG1ldGhvZHMKIAkJCX0KIAkJCWFyZXR1cm4oKTsKIAl9CiB9Citw
dWJsaWMgdm9pZCBnZW5lcmF0ZVN5bnRoZXRpY0JvZHlGb3JNZXRob2RBY2Nlc3NGb3JWYXJBcmdz
KFN5bnRoZXRpY01ldGhvZEJpbmRpbmcgYWNjZXNzTWV0aG9kKSB7CisJaW5pdGlhbGl6ZU1heExv
Y2FscyhhY2Nlc3NNZXRob2QpOworCU1ldGhvZEJpbmRpbmcgdGFyZ2V0TWV0aG9kID0gYWNjZXNz
TWV0aG9kLnRhcmdldE1ldGhvZDsKKwlUeXBlQmluZGluZ1tdIHBhcmFtZXRlcnMgPSB0YXJnZXRN
ZXRob2QucGFyYW1ldGVyczsKKwlpbnQgbGVuZ3RoID0gcGFyYW1ldGVycy5sZW5ndGg7CisJaWYg
KCEocGFyYW1ldGVyc1tsZW5ndGggLSAxXSBpbnN0YW5jZW9mIEFycmF5QmluZGluZykpIHsKKwkJ
cmV0dXJuOworCX0KKwlUeXBlQmluZGluZ1tdIGFyZ3VtZW50cyA9IGFjY2Vzc01ldGhvZC5wdXJw
b3NlID09IFN5bnRoZXRpY01ldGhvZEJpbmRpbmcuQ2hhbm5lbGlzZVBhcmFtc1RvVmFyQXJncwor
CQkJCQkJCQkJCQkJCT8gYWNjZXNzTWV0aG9kLnBhcmFtZXRlcnMKKwkJCQkJCQkJCQkJCQk6IG51
bGw7CisJaW50IHJlc29sdmVkUG9zaXRpb24sIGFycmF5TGVuZ3RoID0gMDsKKwlpZiAodGFyZ2V0
TWV0aG9kLmlzU3RhdGljKCkpCisJCXJlc29sdmVkUG9zaXRpb24gPSAwOworCWVsc2UgaWYgKHRh
cmdldE1ldGhvZC5pc0NvbnN0cnVjdG9yKCkpIHsKKwkJcmVzb2x2ZWRQb3NpdGlvbiA9IDA7CisJ
CW5ld18odGFyZ2V0TWV0aG9kLmRlY2xhcmluZ0NsYXNzKTsKKwkJZHVwKCk7CisJfSBlbHNlIHsK
KwkJYWxvYWRfMCgpOworCQlyZXNvbHZlZFBvc2l0aW9uID0gMTsKKwkJaWYgKGFjY2Vzc01ldGhv
ZC5pc1N1cGVyQWNjZXNzKSB7CisJCQlhcnJheUxlbmd0aCsrOworCQl9CisJfQorCWZvciAoaW50
IGkgPSAwOyBpIDwgbGVuZ3RoIC0gMTsgaSsrKSB7CisJICAgIFR5cGVCaW5kaW5nIHBhcmFtZXRl
ciA9IHBhcmFtZXRlcnNbaV07CisJICAgIGlmIChhcmd1bWVudHMgIT0gbnVsbCkgeyAvLyBmb3Ig
YnJpZGdlIG1ldGhvZHMKKwkJICAgIFR5cGVCaW5kaW5nIGFyZ3VtZW50ID0gYXJndW1lbnRzW2ld
OworCQkJbG9hZChhcmd1bWVudCwgcmVzb2x2ZWRQb3NpdGlvbik7CisJICAgIH0gZWxzZSB7CisJ
CQlsb2FkKHBhcmFtZXRlciwgcmVzb2x2ZWRQb3NpdGlvbik7CisJCX0KKwkJc3dpdGNoKHBhcmFt
ZXRlci5pZCkgeworCQkJY2FzZSBUeXBlSWRzLlRfbG9uZyA6CisJCQljYXNlIFR5cGVJZHMuVF9k
b3VibGUgOgorCQkJCXJlc29sdmVkUG9zaXRpb24gKz0gMjsKKwkJCQlicmVhazsKKwkJCWRlZmF1
bHQgOgorCQkJCXJlc29sdmVkUG9zaXRpb24rKzsKKwkJCQlicmVhazsKKwkJfQorCX0KKwlhcnJh
eUxlbmd0aCArPSBhcmd1bWVudHMubGVuZ3RoIC0gcmVzb2x2ZWRQb3NpdGlvbjsgLy8gKyAoYWNj
ZXNzTWV0aG9kLmlzU3VwZXJBY2Nlc3MgPyAxIDogMCk7CisJZ2VuZXJhdGVJbmxpbmVkVmFsdWUo
YXJyYXlMZW5ndGgpOworCUFycmF5QmluZGluZyB2YXJBcmdUeXBlOworCW5ld0FycmF5KHZhckFy
Z1R5cGUgPSAoQXJyYXlCaW5kaW5nKXBhcmFtZXRlcnNbbGVuZ3RoIC0gMV0pOworCWZvcihpbnQg
YXJyYXlJbmRleCA9IDA7IGFycmF5SW5kZXggPCBhcnJheUxlbmd0aDsgYXJyYXlJbmRleCsrKSB7
CisJCWR1cCgpOworCQlnZW5lcmF0ZUlubGluZWRWYWx1ZShhcnJheUluZGV4KTsKKwkJbG9hZChU
eXBlSWRzLlRfSmF2YUxhbmdPYmplY3QsIHJlc29sdmVkUG9zaXRpb24rKyk7CisJCWFycmF5QXRQ
dXQodmFyQXJnVHlwZS5lbGVtZW50c1R5cGUoKS5pZCwgZmFsc2UpOworCX0KKwlpZiAodGFyZ2V0
TWV0aG9kLmlzU3RhdGljKCkpCisJCWludm9rZShPcGNvZGVzLk9QQ19pbnZva2VzdGF0aWMsIHRh
cmdldE1ldGhvZCwgdGFyZ2V0TWV0aG9kLmRlY2xhcmluZ0NsYXNzKTsKKwllbHNlIHsKKwkJaWYg
KHRhcmdldE1ldGhvZC5pc0NvbnN0cnVjdG9yKCkgfHwgdGFyZ2V0TWV0aG9kLmlzUHJpdmF0ZSgp
KXsKKwkJCWludm9rZShPcGNvZGVzLk9QQ19pbnZva2VzcGVjaWFsLCB0YXJnZXRNZXRob2QsIHRh
cmdldE1ldGhvZC5kZWNsYXJpbmdDbGFzcyk7CisJCX0gZWxzZSB7CisJCQlpZiAodGFyZ2V0TWV0
aG9kLmRlY2xhcmluZ0NsYXNzLmlzSW50ZXJmYWNlKCkpIHsKKwkJCQlpbnZva2UoT3Bjb2Rlcy5P
UENfaW52b2tlaW50ZXJmYWNlLCB0YXJnZXRNZXRob2QsIG51bGwgLyogZGVmYXVsdCBkZWNsYXJp
bmdDbGFzcyAqLyk7CisJCQl9IGVsc2UgeworCQkJCWludm9rZShPcGNvZGVzLk9QQ19pbnZva2V2
aXJ0dWFsLCB0YXJnZXRNZXRob2QsIHRhcmdldE1ldGhvZC5kZWNsYXJpbmdDbGFzcyk7CisJCQl9
CisJCX0KKwl9CisJaWYgKHRhcmdldE1ldGhvZC5yZXR1cm5UeXBlLmlkICE9IFR5cGVJZHMuVF92
b2lkICYmIGFjY2Vzc01ldGhvZC5yZXR1cm5UeXBlLmlkID09IFR5cGVJZHMuVF92b2lkKSB7CisJ
CXBvcCgpOworCX0KKwlzd2l0Y2ggKGFjY2Vzc01ldGhvZC5yZXR1cm5UeXBlLmlkKSB7CisJCWNh
c2UgVHlwZUlkcy5UX3ZvaWQgOgorCQkJcmV0dXJuXygpOworCQkJYnJlYWs7CisJCWNhc2UgVHlw
ZUlkcy5UX2Jvb2xlYW4gOgorCQljYXNlIFR5cGVJZHMuVF9ieXRlIDoKKwkJY2FzZSBUeXBlSWRz
LlRfY2hhciA6CisJCWNhc2UgVHlwZUlkcy5UX3Nob3J0IDoKKwkJY2FzZSBUeXBlSWRzLlRfaW50
IDoKKwkJCWlyZXR1cm4oKTsKKwkJCWJyZWFrOworCQljYXNlIFR5cGVJZHMuVF9sb25nIDoKKwkJ
CWxyZXR1cm4oKTsKKwkJCWJyZWFrOworCQljYXNlIFR5cGVJZHMuVF9mbG9hdCA6CisJCQlmcmV0
dXJuKCk7CisJCQlicmVhazsKKwkJY2FzZSBUeXBlSWRzLlRfZG91YmxlIDoKKwkJCWRyZXR1cm4o
KTsKKwkJCWJyZWFrOworCQlkZWZhdWx0IDoKKwkJCVR5cGVCaW5kaW5nIGFjY2Vzc0VyYXN1cmUg
PSBhY2Nlc3NNZXRob2QucmV0dXJuVHlwZS5lcmFzdXJlKCk7CisJCQlUeXBlQmluZGluZyBtYXRj
aCA9IHRhcmdldE1ldGhvZC5yZXR1cm5UeXBlLmZpbmRTdXBlclR5cGVPcmlnaW5hdGluZ0Zyb20o
YWNjZXNzRXJhc3VyZSk7CisJCQlpZiAobWF0Y2ggPT0gbnVsbCkgeworCQkJCXRoaXMuY2hlY2tj
YXN0KGFjY2Vzc0VyYXN1cmUpOyAvLyBmb3IgYnJpZGdlIG1ldGhvZHMKKwkJCX0KKwkJCWFyZXR1
cm4oKTsKKwl9Cit9CiAvKiogV2hlbiBnZW5lcmF0aW5nIFN1cGVyTWV0b2RBY2Nlc3MgdG93YXJk
cyB0YXJnZXRNZXRob2QsCiAgKiAgZmluZCB0aGUgc3VpdGFibGUgZGlyZWN0IHN1cGVyIHR5cGUs
IHRoYXQgd2lsbCBldmVudHVhbGx5IGxlYWQgdG8gdGFyZ2V0TWV0aG9kLmRlY2xhcmluZ0NsYXNz
LiovCiBSZWZlcmVuY2VCaW5kaW5nIGZpbmREaXJlY3RTdXBlclR5cGVUb3dhcmRzKFN5bnRoZXRp
Y01ldGhvZEJpbmRpbmcgYWNjZXNzTWV0aG9kLCBNZXRob2RCaW5kaW5nIHRhcmdldE1ldGhvZCkg
ewogCVJlZmVyZW5jZUJpbmRpbmcgY3VycmVudFR5cGUgPSBhY2Nlc3NNZXRob2QuZGVjbGFyaW5n
Q2xhc3M7CiAJUmVmZXJlbmNlQmluZGluZyBzdXBlcmNsYXNzID0gY3VycmVudFR5cGUuc3VwZXJj
bGFzcygpOwpAQCAtNTY4OCwxMiArNTc4NiwxNiBAQAogCWxvYWQobG9jYWxCaW5kaW5nLnR5cGUs
IGxvY2FsQmluZGluZy5yZXNvbHZlZFBvc2l0aW9uKTsKIH0KIAogcHJvdGVjdGVkIGZpbmFsIHZv
aWQgbG9hZChUeXBlQmluZGluZyB0eXBlQmluZGluZywgaW50IHJlc29sdmVkUG9zaXRpb24pIHsK
IAl0aGlzLmNvdW50TGFiZWxzID0gMDsKKwlsb2FkKHR5cGVCaW5kaW5nLmlkLCByZXNvbHZlZFBv
c2l0aW9uKTsKK30KKworcHJvdGVjdGVkIGZpbmFsIHZvaWQgbG9hZChpbnQgdHlwZUlkLCBpbnQg
cmVzb2x2ZWRQb3NpdGlvbikgewogCS8vIFVzaW5nIGRlZGljYXRlZCBpbnQgYnl0ZWNvZGUKLQlz
d2l0Y2godHlwZUJpbmRpbmcuaWQpIHsKKwlzd2l0Y2godHlwZUlkKSB7CiAJCWNhc2UgVHlwZUlk
cy5UX2ludCA6CiAJCWNhc2UgVHlwZUlkcy5UX2J5dGUgOgogCQljYXNlIFR5cGVJZHMuVF9jaGFy
IDoKIAkJY2FzZSBUeXBlSWRzLlRfYm9vbGVhbiA6CiAJCWNhc2UgVHlwZUlkcy5UX3Nob3J0IDoK
ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvU291cmNlVHlwZUJpbmRpbmcuamF2YSBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9sb29rdXAvU291cmNlVHlwZUJpbmRpbmcuamF2YQppbmRleCA3NjUzZjI1Li5lMzUwYmI1IDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1NvdXJjZVR5cGVCaW5kaW5nLmphdmEKKysrIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2xvb2t1cC9Tb3VyY2VUeXBlQmluZGluZy5qYXZhCkBAIC04MCwxMiArODAsMTMgQEAKIAkv
LyBTeW50aGV0aWNzIGFyZSBzZXBhcmF0ZWQgaW50byA0IGNhdGVnb3JpZXM6IG1ldGhvZHMsIHN1
cGVyIG1ldGhvZHMsIGZpZWxkcywgY2xhc3MgbGl0ZXJhbHMgYW5kIGJyaWRnZSBtZXRob2RzCiAJ
Ly8gaWYgYSBuZXcgY2F0ZWdvcnkgaXMgYWRkZWQsIGFsc28gaW5jcmVtZW50IE1BWF9TWU5USEVU
SUNTCiAJcHJpdmF0ZSBmaW5hbCBzdGF0aWMgaW50IE1FVEhPRF9FTVVMID0gMDsKIAlwcml2YXRl
IGZpbmFsIHN0YXRpYyBpbnQgRklFTERfRU1VTCA9IDE7CiAJcHJpdmF0ZSBmaW5hbCBzdGF0aWMg
aW50IENMQVNTX0xJVEVSQUxfRU1VTCA9IDI7CisJcHJpdmF0ZSBmaW5hbCBzdGF0aWMgaW50IE1F
VEhPRF9QQUlSX0JSSURHRSA9IDM7CiAKLQlwcml2YXRlIGZpbmFsIHN0YXRpYyBpbnQgTUFYX1NZ
TlRIRVRJQ1MgPSAzOworCXByaXZhdGUgZmluYWwgc3RhdGljIGludCBNQVhfU1lOVEhFVElDUyA9
IDQ7CiAKIAlIYXNoTWFwW10gc3ludGhldGljczsKIAljaGFyW10gZ2VuZXJpY1JlZmVyZW5jZVR5
cGVTaWduYXR1cmU7CiAKIAlwcml2YXRlIFNpbXBsZUxvb2t1cFRhYmxlIHN0b3JlZEFubm90YXRp
b25zID0gbnVsbDsgLy8ga2V5cyBhcmUgdGhpcyBSZWZlcmVuY2VCaW5kaW5nICYgaXRzIGZpZWxk
cyBhbmQgbWV0aG9kcywgdmFsdWUgaXMgYW4gQW5ub3RhdGlvbkhvbGRlcgpAQCAtNzc5LDEwICs3
ODAsNzIgQEAKIAkJCWFjY2Vzc29yc1swXSA9IGFjY2Vzc01ldGhvZDsKIAkJfQogCX0KIAlyZXR1
cm4gYWNjZXNzTWV0aG9kOwogfQorCitwdWJsaWMgU3ludGhldGljTWV0aG9kQmluZGluZyBhZGRT
eW50aGV0aWNNZXRob2RGb3JBcmd1bWVudENoYW5uZWxpbmdGb3JWYXJBcmdzKE1ldGhvZEJpbmRp
bmcgaW5wdXQsIE1ldGhvZEJpbmRpbmcgdGFyZ2V0TWV0aG9kLCBib29sZWFuIGlzU3VwZXJBY2Nl
c3MpIHsKKwlpZiAoIWlzUHJvdG90eXBlKCkpIHRocm93IG5ldyBJbGxlZ2FsU3RhdGVFeGNlcHRp
b24oKTsKKwlpZiAoVHlwZUJpbmRpbmcuZXF1YWxzRXF1YWxzKGlucHV0LnJldHVyblR5cGUuZXJh
c3VyZSgpLCB0YXJnZXRNZXRob2QucmV0dXJuVHlwZS5lcmFzdXJlKCkpCisJCSYmIGlucHV0LmFy
ZVBhcmFtZXRlckVyYXN1cmVzRXF1YWwodGFyZ2V0TWV0aG9kKSkgeworCQkJcmV0dXJuIG51bGw7
IC8vIGRvIG5vdCBuZWVkIGJyaWRnZSBtZXRob2QKKwl9CisJaWYgKHRoaXMuc3ludGhldGljcyA9
PSBudWxsKQorCQl0aGlzLnN5bnRoZXRpY3MgPSBuZXcgSGFzaE1hcFtNQVhfU1lOVEhFVElDU107
CisJaWYgKHRoaXMuc3ludGhldGljc1tTb3VyY2VUeXBlQmluZGluZy5NRVRIT0RfUEFJUl9CUklE
R0VdID09IG51bGwpIHsKKwkJdGhpcy5zeW50aGV0aWNzW1NvdXJjZVR5cGVCaW5kaW5nLk1FVEhP
RF9QQUlSX0JSSURHRV0gPSBuZXcgSGFzaE1hcCg1KTsKKwl9IGVsc2UgeworCQkvLyBjaGVjayB0
byBzZWUgaWYgdGhlcmUgaXMgYW5vdGhlciBlcXVpdmFsZW50IGluaGVyaXRlZE1ldGhvZCBhbHJl
YWR5IGFkZGVkCisJCUl0ZXJhdG9yIGZpcnN0T2ZUaGVQYWlySXRlcmF0b3IgPSB0aGlzLnN5bnRo
ZXRpY3NbU291cmNlVHlwZUJpbmRpbmcuTUVUSE9EX1BBSVJfQlJJREdFXS5rZXlTZXQoKS5pdGVy
YXRvcigpOworCQl3aGlsZSAoZmlyc3RPZlRoZVBhaXJJdGVyYXRvci5oYXNOZXh0KCkpIHsKKwkJ
CU9iamVjdCBzeW50aGV0aWMgPSBmaXJzdE9mVGhlUGFpckl0ZXJhdG9yLm5leHQoKTsKKwkJCWlm
IChzeW50aGV0aWMgaW5zdGFuY2VvZiBNZXRob2RCaW5kaW5nKSB7CisJCQkJTWV0aG9kQmluZGlu
ZyBmaXJzdE9mVGhlcGFpciA9IChNZXRob2RCaW5kaW5nKSBzeW50aGV0aWM7CisJCQkJaWYgKENo
YXJPcGVyYXRpb24uZXF1YWxzKGlucHV0LnNlbGVjdG9yLCBmaXJzdE9mVGhlcGFpci5zZWxlY3Rv
cikKKwkJCQkJCSYmIFR5cGVCaW5kaW5nLmVxdWFsc0VxdWFscyhpbnB1dC5yZXR1cm5UeXBlLmVy
YXN1cmUoKSwgZmlyc3RPZlRoZXBhaXIucmV0dXJuVHlwZS5lcmFzdXJlKCkpCisJCQkJCQkmJiBp
bnB1dC5hcmVQYXJhbWV0ZXJFcmFzdXJlc0VxdWFsKGZpcnN0T2ZUaGVwYWlyKSkgeworCQkJCQlP
YmplY3QgaE1hcCA9IHRoaXMuc3ludGhldGljc1tTb3VyY2VUeXBlQmluZGluZy5NRVRIT0RfUEFJ
Ul9CUklER0VdLmdldChzeW50aGV0aWMpOworCQkJCQlpZiAoaE1hcCBpbnN0YW5jZW9mIEhhc2hN
YXApIHsKKwkJCQkJCUl0ZXJhdG9yIHNlY29uZE9mVGhlUGFpckl0ZXJhdG9yID0gKChIYXNoTWFw
KWhNYXApLmtleVNldCgpLml0ZXJhdG9yKCk7CisJCQkJCQl3aGlsZSAoc2Vjb25kT2ZUaGVQYWly
SXRlcmF0b3IuaGFzTmV4dCgpKSB7CisJCQkJCQkJT2JqZWN0IHN5bnRoZXRpYzEgPSBzZWNvbmRP
ZlRoZVBhaXJJdGVyYXRvci5uZXh0KCk7CisJCQkJCQkJaWYgKHN5bnRoZXRpYzEgaW5zdGFuY2Vv
ZiBNZXRob2RCaW5kaW5nKSB7CisJCQkJCQkJCU1ldGhvZEJpbmRpbmcgc2Vjb25kT2ZUaGVwYWly
ID0gKE1ldGhvZEJpbmRpbmcpIHN5bnRoZXRpYzE7CisJCQkJCQkJCWlmIChDaGFyT3BlcmF0aW9u
LmVxdWFscyh0YXJnZXRNZXRob2Quc2VsZWN0b3IsIHNlY29uZE9mVGhlcGFpci5zZWxlY3RvcikK
KwkJCQkJCQkJCQkmJiBUeXBlQmluZGluZy5lcXVhbHNFcXVhbHModGFyZ2V0TWV0aG9kLnJldHVy
blR5cGUuZXJhc3VyZSgpLCBzZWNvbmRPZlRoZXBhaXIucmV0dXJuVHlwZS5lcmFzdXJlKCkpCisJ
CQkJCQkJCQkJJiYgdGFyZ2V0TWV0aG9kLmFyZVBhcmFtZXRlckVyYXN1cmVzRXF1YWwoc2Vjb25k
T2ZUaGVwYWlyKSkgeworCQkJCQkJCQkJU3ludGhldGljTWV0aG9kQmluZGluZyBbXSBzbSA9IChT
eW50aGV0aWNNZXRob2RCaW5kaW5nW10pICgoSGFzaE1hcCloTWFwKS5nZXQoc3ludGhldGljMSk7
CisJCQkJCQkJCQlyZXR1cm4gc21bMV07CisJCQkJCQkJCX0KKwkJCQkJCQl9CisJCQkJCQl9CisJ
CQkJCX0KKwkJCQl9CisJCQl9CisJCX0KKwl9CisKKwlTeW50aGV0aWNNZXRob2RCaW5kaW5nIGFj
Y2Vzc01ldGhvZCA9IG51bGw7CisJSGFzaE1hcCBoTWFwID0gKEhhc2hNYXApIHRoaXMuc3ludGhl
dGljc1tTb3VyY2VUeXBlQmluZGluZy5NRVRIT0RfUEFJUl9CUklER0VdLmdldChpbnB1dCk7CisJ
aWYgKGhNYXAgPT0gbnVsbCkgeworCQl0aGlzLnN5bnRoZXRpY3NbU291cmNlVHlwZUJpbmRpbmcu
TUVUSE9EX1BBSVJfQlJJREdFXS5wdXQoaW5wdXQsIGhNYXAgPSBuZXcgSGFzaE1hcCg1KSk7CisJ
fQorCVN5bnRoZXRpY01ldGhvZEJpbmRpbmdbXSBhY2Nlc3NvcnMgPSAoU3ludGhldGljTWV0aG9k
QmluZGluZ1tdKSBoTWFwLmdldCh0YXJnZXRNZXRob2QpOworCWNoYXIgW10gc2VsZWN0b3IgPSBD
aGFyT3BlcmF0aW9uLmNvbmNhdChUeXBlQ29uc3RhbnRzLkFOT05ZTU9VU19NRVRIT0QsIEludGVn
ZXIudG9TdHJpbmcodGhpcy5sYW1iZGFPcmRpbmFsKyspLnRvQ2hhckFycmF5KCkpOworCWlmIChh
Y2Nlc3NvcnMgPT0gbnVsbCkgeworCQlhY2Nlc3NNZXRob2QgPSBuZXcgU3ludGhldGljTWV0aG9k
QmluZGluZyhpbnB1dCwgdGFyZ2V0TWV0aG9kLCBzZWxlY3RvciwgdGhpcywgaXNTdXBlckFjY2Vz
cyk7CisJCWhNYXAucHV0KHRhcmdldE1ldGhvZCwgYWNjZXNzb3JzID0gbmV3IFN5bnRoZXRpY01l
dGhvZEJpbmRpbmdbMl0pOworCQlhY2Nlc3NvcnNbMV0gPSBhY2Nlc3NNZXRob2Q7CisJfSBlbHNl
IHsKKwkJaWYgKChhY2Nlc3NNZXRob2QgPSBhY2Nlc3NvcnNbMV0pID09IG51bGwpIHsKKwkJCWFj
Y2Vzc01ldGhvZCA9IG5ldyBTeW50aGV0aWNNZXRob2RCaW5kaW5nKGlucHV0LCB0YXJnZXRNZXRo
b2QsIHNlbGVjdG9yLCB0aGlzLCBpc1N1cGVyQWNjZXNzKTsKKwkJCWFjY2Vzc29yc1sxXSA9IGFj
Y2Vzc01ldGhvZDsKKwkJfQorCX0KKwlyZXR1cm4gYWNjZXNzTWV0aG9kOworfQorCiBib29sZWFu
IGFyZUZpZWxkc0luaXRpYWxpemVkKCkgewogCWlmICghaXNQcm90b3R5cGUoKSkKIAkJcmV0dXJu
IHRoaXMucHJvdG90eXBlLmFyZUZpZWxkc0luaXRpYWxpemVkKCk7CiAJcmV0dXJuIHRoaXMuZmll
bGRzICE9IEJpbmRpbmcuVU5JTklUSUFMSVpFRF9GSUVMRFM7CiB9CkBAIC0yMjgxLDMxICsyMzQ0
LDU4IEBACiBwdWJsaWMgU3ludGhldGljTWV0aG9kQmluZGluZ1tdIHN5bnRoZXRpY01ldGhvZHMo
KSB7CiAJCiAJaWYgKCFpc1Byb3RvdHlwZSgpKSB0aHJvdyBuZXcgSWxsZWdhbFN0YXRlRXhjZXB0
aW9uKCk7CiAJCiAJaWYgKHRoaXMuc3ludGhldGljcyA9PSBudWxsIAotCQkJfHwgdGhpcy5zeW50
aGV0aWNzW1NvdXJjZVR5cGVCaW5kaW5nLk1FVEhPRF9FTVVMXSA9PSBudWxsIAotCQkJfHwgdGhp
cy5zeW50aGV0aWNzW1NvdXJjZVR5cGVCaW5kaW5nLk1FVEhPRF9FTVVMXS5zaXplKCkgPT0gMCkg
eworCQkJfHwgKCggdGhpcy5zeW50aGV0aWNzW1NvdXJjZVR5cGVCaW5kaW5nLk1FVEhPRF9FTVVM
XSA9PSBudWxsIAorCQkJICAgfHwgdGhpcy5zeW50aGV0aWNzW1NvdXJjZVR5cGVCaW5kaW5nLk1F
VEhPRF9FTVVMXS5zaXplKCkgPT0gMCkKKwkJCSAgJiYgKHRoaXMuc3ludGhldGljc1tTb3VyY2VU
eXBlQmluZGluZy5NRVRIT0RfUEFJUl9CUklER0VdID09IG51bGwKKwkJCSAgIHx8IHRoaXMuc3lu
dGhldGljc1tTb3VyY2VUeXBlQmluZGluZy5NRVRIT0RfUEFJUl9CUklER0VdLnNpemUoKSA9PSAw
KSkpIHsKIAkJcmV0dXJuIG51bGw7CiAJfQogCS8vIGRpZmZpY3VsdCB0byBjb21wdXRlIHNpemUg
dXAgZnJvbnQgYmVjYXVzZSBvZiB0aGUgZW1iZWRkZWQgYXJyYXlzIHNvIGFzc3VtZSB0aGVyZSBp
cyBvbmx5IDEKIAlpbnQgaW5kZXggPSAwOwogCVN5bnRoZXRpY01ldGhvZEJpbmRpbmdbXSBiaW5k
aW5ncyA9IG5ldyBTeW50aGV0aWNNZXRob2RCaW5kaW5nWzFdOwotCUl0ZXJhdG9yIG1ldGhvZEFy
cmF5SXRlcmF0b3IgPSB0aGlzLnN5bnRoZXRpY3NbU291cmNlVHlwZUJpbmRpbmcuTUVUSE9EX0VN
VUxdLnZhbHVlcygpLml0ZXJhdG9yKCk7Ci0Jd2hpbGUgKG1ldGhvZEFycmF5SXRlcmF0b3IuaGFz
TmV4dCgpKSB7Ci0JCVN5bnRoZXRpY01ldGhvZEJpbmRpbmdbXSBtZXRob2RBY2Nlc3NvcnMgPSAo
U3ludGhldGljTWV0aG9kQmluZGluZ1tdKSBtZXRob2RBcnJheUl0ZXJhdG9yLm5leHQoKTsKLQkJ
Zm9yIChpbnQgaSA9IDAsIG1heCA9IG1ldGhvZEFjY2Vzc29ycy5sZW5ndGg7IGkgPCBtYXg7IGkr
KykgewotCQkJaWYgKG1ldGhvZEFjY2Vzc29yc1tpXSAhPSBudWxsKSB7Ci0JCQkJaWYgKGluZGV4
KzEgPiBiaW5kaW5ncy5sZW5ndGgpIHsKLQkJCQkJU3lzdGVtLmFycmF5Y29weShiaW5kaW5ncywg
MCwgKGJpbmRpbmdzID0gbmV3IFN5bnRoZXRpY01ldGhvZEJpbmRpbmdbaW5kZXggKyAxXSksIDAs
IGluZGV4KTsKKwlpZiAodGhpcy5zeW50aGV0aWNzW1NvdXJjZVR5cGVCaW5kaW5nLk1FVEhPRF9F
TVVMXSAhPSBudWxsKSB7CisJCUl0ZXJhdG9yIG1ldGhvZEFycmF5SXRlcmF0b3IgPSB0aGlzLnN5
bnRoZXRpY3NbU291cmNlVHlwZUJpbmRpbmcuTUVUSE9EX0VNVUxdLnZhbHVlcygpLml0ZXJhdG9y
KCk7CisJCXdoaWxlIChtZXRob2RBcnJheUl0ZXJhdG9yLmhhc05leHQoKSkgeworCQkJU3ludGhl
dGljTWV0aG9kQmluZGluZ1tdIG1ldGhvZEFjY2Vzc29ycyA9IChTeW50aGV0aWNNZXRob2RCaW5k
aW5nW10pIG1ldGhvZEFycmF5SXRlcmF0b3IubmV4dCgpOworCQkJZm9yIChpbnQgaSA9IDAsIG1h
eCA9IG1ldGhvZEFjY2Vzc29ycy5sZW5ndGg7IGkgPCBtYXg7IGkrKykgeworCQkJCWlmIChtZXRo
b2RBY2Nlc3NvcnNbaV0gIT0gbnVsbCkgeworCQkJCQlpZiAoaW5kZXgrMSA+IGJpbmRpbmdzLmxl
bmd0aCkgeworCQkJCQkJU3lzdGVtLmFycmF5Y29weShiaW5kaW5ncywgMCwgKGJpbmRpbmdzID0g
bmV3IFN5bnRoZXRpY01ldGhvZEJpbmRpbmdbaW5kZXggKyAxXSksIDAsIGluZGV4KTsKKwkJCQkJ
fQorCQkJCQliaW5kaW5nc1tpbmRleCsrXSA9IG1ldGhvZEFjY2Vzc29yc1tpXTsgCiAJCQkJfQot
CQkJCWJpbmRpbmdzW2luZGV4KytdID0gbWV0aG9kQWNjZXNzb3JzW2ldOyAKKwkJCX0KKwkJfQor
CX0KKwlpZiAodGhpcy5zeW50aGV0aWNzW1NvdXJjZVR5cGVCaW5kaW5nLk1FVEhPRF9QQUlSX0JS
SURHRV0gIT0gbnVsbCkgeworCQlJdGVyYXRvciB0b3BJdGVyYXRvciA9IHRoaXMuc3ludGhldGlj
c1tTb3VyY2VUeXBlQmluZGluZy5NRVRIT0RfUEFJUl9CUklER0VdLnZhbHVlcygpLml0ZXJhdG9y
KCk7CisJCXdoaWxlICh0b3BJdGVyYXRvci5oYXNOZXh0KCkpIHsKKwkJCU9iamVjdCB0ZW1wID0g
dG9wSXRlcmF0b3IubmV4dCgpOworCQkJaWYgKHRlbXAgaW5zdGFuY2VvZiBIYXNoTWFwKSB7CisJ
CQkJSXRlcmF0b3IgbmV4dEl0ZXJhdG9yID0gKChIYXNoTWFwKXRlbXApLnZhbHVlcygpLml0ZXJh
dG9yKCk7CisJCQkJd2hpbGUgKG5leHRJdGVyYXRvci5oYXNOZXh0KCkpIHsKKwkJCQkJU3ludGhl
dGljTWV0aG9kQmluZGluZ1tdIG1ldGhvZEFjY2Vzc29ycyA9IChTeW50aGV0aWNNZXRob2RCaW5k
aW5nW10pIG5leHRJdGVyYXRvci5uZXh0KCk7CisJCQkJCWZvciAoaW50IGkgPSAwLCBtYXggPSBt
ZXRob2RBY2Nlc3NvcnMubGVuZ3RoOyBpIDwgbWF4OyBpKyspIHsKKwkJCQkJCWlmIChtZXRob2RB
Y2Nlc3NvcnNbaV0gIT0gbnVsbCkgeworCQkJCQkJCWlmIChpbmRleCsxID4gYmluZGluZ3MubGVu
Z3RoKSB7CisJCQkJCQkJCVN5c3RlbS5hcnJheWNvcHkoYmluZGluZ3MsIDAsIChiaW5kaW5ncyA9
IG5ldyBTeW50aGV0aWNNZXRob2RCaW5kaW5nW2luZGV4ICsgMV0pLCAwLCBpbmRleCk7CisJCQkJ
CQkJfQorCQkJCQkJCWJpbmRpbmdzW2luZGV4KytdID0gbWV0aG9kQWNjZXNzb3JzW2ldOyAKKwkJ
CQkJCX0KKwkJCQkJfQorCQkJCX0KIAkJCX0KIAkJfQogCX0KIAkvLyBzb3J0IHRoZW0gaW4gYWNj
b3JkaW5nIHRvIHRoZWlyIG93biBpbmRleGVzCiAJaW50IGxlbmd0aDsKKwlpZiAoYmluZGluZ3Mu
bGVuZ3RoID09IDEgJiYgYmluZGluZ3NbMF0gPT0gbnVsbCkgeworCQlyZXR1cm4gbnVsbDsKKwl9
CiAJU3ludGhldGljTWV0aG9kQmluZGluZ1tdIHNvcnRlZEJpbmRpbmdzID0gbmV3IFN5bnRoZXRp
Y01ldGhvZEJpbmRpbmdbbGVuZ3RoID0gYmluZGluZ3MubGVuZ3RoXTsKIAlmb3IgKGludCBpID0g
MDsgaSA8IGxlbmd0aDsgaSsrKXsKIAkJU3ludGhldGljTWV0aG9kQmluZGluZyBiaW5kaW5nID0g
YmluZGluZ3NbaV07CiAJCXNvcnRlZEJpbmRpbmdzW2JpbmRpbmcuaW5kZXhdID0gYmluZGluZzsK
IAl9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1N5bnRoZXRpY01ldGhvZEJpbmRpbmcuamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9sb29rdXAvU3ludGhldGljTWV0aG9kQmluZGluZy5qYXZhCmluZGV4IGQxMTgw
NWIuLjRhYWQyZGYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvU3ludGhldGljTWV0aG9kQmlu
ZGluZy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvU3ludGhldGljTWV0aG9kQmluZGluZy5qYXZh
CkBAIC0yOSwxMCArMjksMTEgQEAKIAlwdWJsaWMgRmllbGRCaW5kaW5nIHRhcmdldFJlYWRGaWVs
ZDsJCS8vIHJlYWQgYWNjZXNzIHRvIGEgZmllbGQKIAlwdWJsaWMgRmllbGRCaW5kaW5nIHRhcmdl
dFdyaXRlRmllbGQ7CQkvLyB3cml0ZSBhY2Nlc3MgdG8gYSBmaWVsZAogCXB1YmxpYyBNZXRob2RC
aW5kaW5nIHRhcmdldE1ldGhvZDsJCQkvLyBtZXRob2Qgb3IgY29uc3RydWN0b3IKIAlwdWJsaWMg
VHlwZUJpbmRpbmcgdGFyZ2V0RW51bVR5cGU7IAkJCS8vIGVudW0gdHlwZQogCXB1YmxpYyBMYW1i
ZGFFeHByZXNzaW9uIGxhbWJkYTsKKwlwdWJsaWMgTWV0aG9kQmluZGluZyBpbnB1dE1ldGhvZCA9
IG51bGw7CiAJCiAJcHVibGljIGludCBwdXJwb3NlOwogCiAJLy8gZmllbGRzIHVzZWQgdG8gZ2Vu
ZXJhdGUgZW51bSBjb25zdGFudHMgd2hlbiB0b28gbWFueQogCXB1YmxpYyBpbnQgc3RhcnRJbmRl
eDsKQEAgLTUzLDE0ICs1NCw2MSBAQAogCXB1YmxpYyBzdGF0aWMgZmluYWwgaW50IExhbWJkYU1l
dGhvZCA9IDEzOyAvLyBMYW1iZGEgYm9keSBlbWl0dGVkIGFzIGEgbWV0aG9kLgogCXB1YmxpYyBm
aW5hbCBzdGF0aWMgaW50IEFycmF5Q29uc3RydWN0b3IgPSAxNDsgLy8gWFtdOjpuZXcKIAlwdWJs
aWMgc3RhdGljIGZpbmFsIGludCBBcnJheUNsb25lID0gMTU7IC8vIFhbXTo6Y2xvbmUKICAgICBw
dWJsaWMgc3RhdGljIGZpbmFsIGludCBGYWN0b3J5TWV0aG9kID0gMTY7IC8vIGZvciBpbmR5IGNh
bGwgdG8gcHJpdmF0ZSBjb25zdHJ1Y3Rvci4KICAgICBwdWJsaWMgc3RhdGljIGZpbmFsIGludCBE
ZXNlcmlhbGl6ZUxhbWJkYSA9IDE3OyAvLyBGb3Igc3VwcG9ydGluZyBsYW1iZGEgZGVzZXJpYWxp
emF0aW9uLgorICAgIHB1YmxpYyBzdGF0aWMgZmluYWwgaW50IENoYW5uZWxpc2VQYXJhbXNUb1Zh
ckFyZ3MgPSAxODsKKyAgICAKKyAgICBwdWJsaWMgc3RhdGljIGludCBOT1RfQk9PVFNUUkFQUEVE
ID0gLTk5OTk7CiAgICAgCiAJcHVibGljIGludCBzb3VyY2VTdGFydCA9IDA7IC8vIHN0YXJ0IHBv
c2l0aW9uIG9mIHRoZSBtYXRjaGluZyBkZWNsYXJhdGlvbgogCXB1YmxpYyBpbnQgaW5kZXg7IC8v
IHVzZWQgZm9yIHNvcnRpbmcgYWNjZXNzIG1ldGhvZHMgaW4gdGhlIGNsYXNzIGZpbGUKIAlwdWJs
aWMgaW50IGZha2VQYWRkZWRQYXJhbWV0ZXJzID0gMDsgLy8gYWRkZWQgaW4gc3ludGhldGljIGNv
bnN0cnVjdG9yIHRvIGF2b2lkIG5hbWUgY2xhc2guCisJcHVibGljIGJvb2xlYW4gaXNTdXBlckFj
Y2VzcyA9IGZhbHNlOworCXB1YmxpYyBpbnQgaW52b2tlRHluYW1pY051bWJlciA9IE5PVF9CT09U
U1RSQVBQRUQ7CisKKwlwdWJsaWMgU3ludGhldGljTWV0aG9kQmluZGluZyhNZXRob2RCaW5kaW5n
IGlucHV0TWV0aG9kLCBNZXRob2RCaW5kaW5nIHRhcmdldE1ldGhvZCwgY2hhciBbXSBzZWxlY3Rv
ciwgU291cmNlVHlwZUJpbmRpbmcgZGVjbGFyaW5nQ2xhc3MsIGJvb2xlYW4gaXNTdXBlckFjY2Vz
cykgeworCSAgICB0aGlzLmRlY2xhcmluZ0NsYXNzID0gZGVjbGFyaW5nQ2xhc3M7CisJCXRoaXMu
cHVycG9zZSA9IFN5bnRoZXRpY01ldGhvZEJpbmRpbmcuQ2hhbm5lbGlzZVBhcmFtc1RvVmFyQXJn
czsKKwkgICAgdGhpcy5tb2RpZmllcnMgPSAodGFyZ2V0TWV0aG9kLm1vZGlmaWVycyB8IENsYXNz
RmlsZUNvbnN0YW50cy5BY2NCcmlkZ2UgfCBDbGFzc0ZpbGVDb25zdGFudHMuQWNjU3ludGhldGlj
KSAmIH4oQ2xhc3NGaWxlQ29uc3RhbnRzLkFjY1N5bmNocm9uaXplZCB8IENsYXNzRmlsZUNvbnN0
YW50cy5BY2NBYnN0cmFjdCB8IENsYXNzRmlsZUNvbnN0YW50cy5BY2NOYXRpdmUgIHwgQ2xhc3NG
aWxlQ29uc3RhbnRzLkFjY0ZpbmFsIHwgRXh0cmFDb21waWxlck1vZGlmaWVycy5BY2NHZW5lcmlj
U2lnbmF0dXJlIHwgQ2xhc3NGaWxlQ29uc3RhbnRzLkFjY1ZhcmFyZ3MpOworCQlpZiAoaXNTdXBl
ckFjY2VzcykgeworCQkJdGhpcy5tb2RpZmllcnMgfD0gQ2xhc3NGaWxlQ29uc3RhbnRzLkFjY1By
aXZhdGU7CisJCX0gZWxzZSB7CisJCQl0aGlzLm1vZGlmaWVycyB8PSBDbGFzc0ZpbGVDb25zdGFu
dHMuQWNjU3RhdGljOworCQl9CisJCWlmICh0YXJnZXRNZXRob2QuaXNTdGF0aWMoKSkgeworCQkJ
dGhpcy5tb2RpZmllcnMgfD0gQ2xhc3NGaWxlQ29uc3RhbnRzLkFjY1N0YXRpYzsKKwkJfQorCSAg
ICB0aGlzLnRhZ0JpdHMgfD0gKFRhZ0JpdHMuQW5ub3RhdGlvblJlc29sdmVkIHwgVGFnQml0cy5E
ZXByZWNhdGVkQW5ub3RhdGlvblJlc29sdmVkKTsKKwkgICAgdGhpcy5yZXR1cm5UeXBlID0gaW5w
dXRNZXRob2QucmV0dXJuVHlwZTsKKwkgICAgdGhpcy50aHJvd25FeGNlcHRpb25zID0gaW5wdXRN
ZXRob2QudGhyb3duRXhjZXB0aW9uczsKKwkgICAgdGhpcy50YXJnZXRNZXRob2QgPSB0YXJnZXRN
ZXRob2Q7CisJICAgIHRoaXMuaXNTdXBlckFjY2VzcyA9IGlzU3VwZXJBY2Nlc3M7CisJCVN5bnRo
ZXRpY01ldGhvZEJpbmRpbmdbXSBrbm93bkFjY2Vzc01ldGhvZHMgPSBkZWNsYXJpbmdDbGFzcy5z
eW50aGV0aWNNZXRob2RzKCk7CisJCWludCBtZXRob2RJZCA9IGtub3duQWNjZXNzTWV0aG9kcyA9
PSBudWxsID8gMCA6IGtub3duQWNjZXNzTWV0aG9kcy5sZW5ndGg7CisJCXRoaXMuaW5kZXggPSBt
ZXRob2RJZDsKKwkJdGhpcy5pbnB1dE1ldGhvZCA9IGlucHV0TWV0aG9kOworCQl0aGlzLnNlbGVj
dG9yID0gc2VsZWN0b3I7CisJCWludCBsZW5ndGggPSBpbnB1dE1ldGhvZC5wYXJhbWV0ZXJzLmxl
bmd0aDsKKwkJaWYgKCF0YXJnZXRNZXRob2QuaXNTdGF0aWMoKSAmJiAhdGFyZ2V0TWV0aG9kLmlz
Q29uc3RydWN0b3IoKSAmJiAhaXNTdXBlckFjY2VzcykgeworCQkJbGVuZ3RoKys7CisJCX0KKwkJ
dGhpcy5wYXJhbWV0ZXJzID0gbmV3IFR5cGVCaW5kaW5nW2xlbmd0aF07CisJCWludCBjdXJySW5k
eCA9IDA7CisJCWlmICghdGFyZ2V0TWV0aG9kLmlzU3RhdGljKCkgJiYgIXRhcmdldE1ldGhvZC5p
c0NvbnN0cnVjdG9yKCkgJiYgIWlzU3VwZXJBY2Nlc3MpIHsKKwkJCXRoaXMucGFyYW1ldGVyc1tj
dXJySW5keCsrXSA9IHRhcmdldE1ldGhvZC5kZWNsYXJpbmdDbGFzczsKKwkJfQorCQlpbnQgaiA9
IHRhcmdldE1ldGhvZC5wYXJhbWV0ZXJzLmxlbmd0aCAtIDEgKyBjdXJySW5keDsKKwkJaW50IGsg
PSAwOworCQl3aGlsZSAoY3VyckluZHggPCBqKSB7CisJCQl0aGlzLnBhcmFtZXRlcnNbY3Vycklu
ZHgrK10gPSB0YXJnZXRNZXRob2QucGFyYW1ldGVyc1trKytdOworCQl9CisJCVR5cGVCaW5kaW5n
IHRiID0gKChBcnJheUJpbmRpbmcpdGFyZ2V0TWV0aG9kLnBhcmFtZXRlcnNbdGFyZ2V0TWV0aG9k
LnBhcmFtZXRlcnMubGVuZ3RoIC0gMV0pLmVsZW1lbnRzVHlwZSgpOworCQl3aGlsZSAoY3Vycklu
ZHggPCBsZW5ndGgpIHsKKwkJCXRoaXMucGFyYW1ldGVyc1tjdXJySW5keCsrXSA9IHRiOworCQl9
CisJfQogCiAJcHVibGljIFN5bnRoZXRpY01ldGhvZEJpbmRpbmcoRmllbGRCaW5kaW5nIHRhcmdl
dEZpZWxkLCBib29sZWFuIGlzUmVhZEFjY2VzcywgYm9vbGVhbiBpc1N1cGVyQWNjZXNzLCBSZWZl
cmVuY2VCaW5kaW5nIGRlY2xhcmluZ0NsYXNzKSB7CiAKIAkJdGhpcy5tb2RpZmllcnMgPSBDbGFz
c0ZpbGVDb25zdGFudHMuQWNjRGVmYXVsdCB8IENsYXNzRmlsZUNvbnN0YW50cy5BY2NTdGF0aWMg
fCBDbGFzc0ZpbGVDb25zdGFudHMuQWNjU3ludGhldGljOwogCQl0aGlzLnRhZ0JpdHMgfD0gKFRh
Z0JpdHMuQW5ub3RhdGlvblJlc29sdmVkIHwgVGFnQml0cy5EZXByZWNhdGVkQW5ub3RhdGlvblJl
c29sdmVkKTs=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>239376</attachid>
            <date>2014-01-28 04:32:00 -0500</date>
            <delta_ts>2014-01-29 09:31:54 -0500</delta_ts>
            <desc>patch</desc>
            <filename>Bug-406744--full-5.patch</filename>
            <type>text/plain</type>
            <size>38683</size>
            <attacher name="ANIRBAN CHAKRABORTY">anchakrk</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0xhbWJkYUV4cHJlc3Np
b25zVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTGFtYmRhRXhwcmVz
c2lvbnNUZXN0LmphdmEKaW5kZXggN2RkMzRhMy4uY2I0NWI2ZiAxMDA2NDQKLS0tIGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTGFtYmRhRXhwcmVzc2lvbnNUZXN0LmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTGFtYmRhRXhwcmVzc2lvbnNUZXN0LmphdmEK
QEAgLTI0NTAsMTEgKzI0NTAsMTEgQEAKIAkJfSwKIAkJIjkiKTsKIH0KIC8vIEJ1ZyA0MDY3NDQg
LSBbMS44XVtjb21waWxlcl1bY29kZWdlbl0gTGFtYmRhQ29udmVyc2lvbkV4Y2VwdGlvbiBzZWVu
IHdoZW4gbWV0aG9kIHJlZmVyZW5jZSB0YXJnZXRzIGEgdmFyYXJncyBtZXRob2QuCiAvLyBodHRw
czovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDA2NzQ0Ci1wdWJsaWMg
dm9pZCBfdGVzdDQwNjc0NGEoKSB7CitwdWJsaWMgdm9pZCB0ZXN0NDA2NzQ0YSgpIHsKIAl0aGlz
LnJ1bkNvbmZvcm1UZXN0KAogCQkJbmV3IFN0cmluZ1tdIHsKIAkJCQkiWC5qYXZhIiwKIAkJCQki
aW50ZXJmYWNlIEkge1xuIiArCiAJCQkJIgl2b2lkIGZvbyhJbnRlZ2VyIGExLCBJbnRlZ2VyIGEy
LCBTdHJpbmcgYTMpO1xuIiArCkBAIC0yNDc5LDExICsyNDc5LDExIEBACiAJCQkiMTBcbiIgKwog
CQkJIjIwXG4iICsKIAkJCSIxMCwgMjAiCiAJCQkpOwogfQotcHVibGljIHZvaWQgX3Rlc3Q0MDY3
NDRiKCkgeworcHVibGljIHZvaWQgdGVzdDQwNjc0NGIoKSB7CiAJdGhpcy5ydW5Db25mb3JtVGVz
dCgKIAkJCW5ldyBTdHJpbmdbXSB7CiAJCQkJIlguamF2YSIsCiAJCQkJImludGVyZmFjZSBJIHtc
biIgKwogCQkJCSIJaW50IGZvbyhJbnRlZ2VyIGExLCBJbnRlZ2VyIGEyLCBTdHJpbmcgYTMpO1xu
IiArCkBAIC0yNTA5LDExICsyNTA5LDExIEBACiAJCQkiMTBcbiIgKwogCQkJIjIwXG4iICsKIAkJ
CSIxMCwgMjAiCiAJCQkpOwogfQotcHVibGljIHZvaWQgX3Rlc3Q0MDY3NDRjKCkgeworcHVibGlj
IHZvaWQgdGVzdDQwNjc0NGMoKSB7CiAJdGhpcy5ydW5Db25mb3JtVGVzdCgKIAkJCW5ldyBTdHJp
bmdbXSB7CiAJCQkJIlguamF2YSIsCiAJCQkJImludGVyZmFjZSBJIHtcbiIgKwogCQkJCSIJdm9p
ZCBmb28oSW50ZWdlciBhMSwgSW50ZWdlciBhMiwgU3RyaW5nIGEzKTtcbiIgKwpAQCAtMjU0Miwx
MCArMjU0Miw0MTEgQEAKIAkJCSIxMFxuIiArCiAJCQkiMjBcbiIgKwogCQkJIjEwLCAyMCIKIAkJ
CSk7CiB9CitwdWJsaWMgdm9pZCB0ZXN0NDA2NzQ0ZCgpIHsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0
KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiWC5qYXZhIiwKKwkJCQkiaW50ZXJmYWNlIEkge1xu
IiArCisJCQkJIgl2b2lkIGZvbyhpbnQgYTEsIEludGVnZXIgYTIsIFN0cmluZyBhMyk7XG4iICsK
KwkJCQkifVxuIiArCisJCQkJImludGVyZmFjZSBZIHtcbiIgKworCQkJCSIJc3RhdGljIHZvaWQg
bShmbG9hdCBhMSwgT2JqZWN0Li4uIHJlc3QpIHtcbiIgKyAKKwkJCQkiCQlTeXN0ZW0ub3V0LnBy
aW50bG4oYTEpO1xuIiArCisJCQkJIgkJcHJpbnQocmVzdCk7XG4iICsKKwkJCQkiCX1cbiIgKwor
CQkJCSIJc3RhdGljIHZvaWQgcHJpbnQgKE9iamVjdCBbXSBvKSB7XG4iICsKKwkJCQkiCQlmb3Ig
KGludCBpID0gMDsgaSA8IG8ubGVuZ3RoOyBpKyspXG4iICsKKwkJCQkiCQkJU3lzdGVtLm91dC5w
cmludGxuKG9baV0pO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxuIiArCisJCQkJInB1Ymxp
YyBpbnRlcmZhY2UgWCBleHRlbmRzIFl7XG4iICsKKwkJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBt
YWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCQkiCQlJIGkgPSBZOjptO1xuIiArCisJCQkJ
IgkJaS5mb28oMTAsIDIwLCBcIjEwLCAyMFwiKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn1c
biIsCisJCQl9LAorCQkJIjEwLjBcbiIgKworCQkJIjIwXG4iICsKKwkJCSIxMCwgMjAiCisJCQkp
OworfQorcHVibGljIHZvaWQgdGVzdDQwNjc0NGUoKSB7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgK
KwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJIlguamF2YSIsCisJCQkJImludGVyZmFjZSBJIHtcbiIg
KworCQkJCSIJU3RyaW5nIG1ldGhvZChpbnQgYSk7XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNs
YXNzIEMge1xuIiArCisJCQkJIglzdGF0aWMgU3RyaW5nIGZvbyhJbnRlZ2VyLi4uIGkpIHtcbiIg
KworCQkJCSIJCXJldHVybiBcImZvb1wiO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkiCXN0YXRp
YyBTdHJpbmcgZ29vKEludGVnZXIgYmksIEludGVnZXIuLi4gaSkge1xuIiArCisJCQkJIgkJcmV0
dXJuIFwiYmFyXCI7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJcHVibGljIHZvaWQgZm9vKCkg
e1xuIiArCisJCQkJIgkJSSBpO1xuIiArCisJCQkJIgkJaSA9IEM6OmZvbztcbiIgKworCQkJCSIJ
CVN5c3RlbS5vdXQucHJpbnRsbihpLm1ldGhvZCgwKSk7XG4iICsKKwkJCQkiCQlpID0gQzo6Z29v
O1xuIiArCisJCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKGkubWV0aG9kKDApKTtcbiIgKworCQkJ
CSIJfVxuIiArCisJCQkJIn1cbiIgKworCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCQki
CXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBhcmd2W10pICAge1xuIiArCisJCQkJIgkJ
bmV3IEMoKS5mb28oKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn1cbiIsCisJCQl9LAorCQkJ
ImZvb1xuIiArCisJCQkiYmFyIgorCQkJKTsKK30KK3B1YmxpYyB2b2lkIHRlc3Q0MDY3NDRmKCkg
eworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEi
LAorCQkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCQkiCXZvaWQgZm9vKEludGVnZXIgYTEsIElu
dGVnZXIgYTIsIFN0cmluZyBhMyk7XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNsYXNzIFkge1xu
IiArCisJCQkJIgl2b2lkIG0oTnVtYmVyIGExLCBPYmplY3QuLi4gcmVzdCkge1xuIiArIAorCQkJ
CSIJCVN5c3RlbS5vdXQucHJpbnRsbihhMSk7XG4iICsKKwkJCQkiCQlwcmludChyZXN0KTtcbiIg
KworCQkJCSIJfVxuIiArCisJCQkJIglzdGF0aWMgdm9pZCBwcmludCAoT2JqZWN0IFtdIG8pIHtc
biIgKworCQkJCSIJCWZvciAoaW50IGkgPSAwOyBpIDwgby5sZW5ndGg7IGkrKylcbiIgKworCQkJ
CSIJCQlTeXN0ZW0ub3V0LnByaW50bG4ob1tpXSk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9
XG4iICsKKwkJCQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBZIHtcbiIgKworCQkJCSIJc3RhdGlj
IHZvaWQgcHJpbnQgKE9iamVjdCBbXSBvKSB7XG4iICsKKwkJCQkiCQlmb3IgKGludCBpID0gMDsg
aSA8IG8ubGVuZ3RoOyBpKyspXG4iICsKKwkJCQkiCQkJU3lzdGVtLm91dC5wcmludGxuKG9baV0p
O1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmlu
ZyBbXSBhcmdzKSB7XG4iICsKKwkJCQkiCQluZXcgWCgpLmZvbygpO1xuIiArCisJCQkJIgl9XG4i
ICsKKwkJCQkiCXZvaWQgZm9vKCkge1xuIiArIAorCQkJCSIJCUkgaSA9IHN1cGVyOjptO1xuIiAr
CisJCQkJIgkJaS5mb28oMTAsIDIwLCBcIjEwLCAyMFwiKTtcbiIgKworCQkJCSIJfVxuIiArCisJ
CQkJIn1cbiIsCisJCQl9LAorCQkJIjEwXG4iICsKKwkJCSIyMFxuIiArCisJCQkiMTAsIDIwIgor
CQkJKTsKK30KK3B1YmxpYyB2b2lkIHRlc3Q0MDY3NDRnKCkgeworCXRoaXMucnVuQ29uZm9ybVRl
c3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEiLAorCQkJCSJpbnRlcmZhY2UgSSB7
XG4iICsKKwkJCQkiCXZvaWQgZm9vKEludGVnZXIgYTEsIEludGVnZXIgYTIsIFN0cmluZyBhMyk7
XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNsYXNzIFkge1xuIiArCisJCQkJIglzdGF0aWMgdm9p
ZCBwcmludCAoT2JqZWN0IFtdIG8pIHtcbiIgKworCQkJCSIJCWZvciAoaW50IGkgPSAwOyBpIDwg
by5sZW5ndGg7IGkrKylcbiIgKworCQkJCSIJCQlTeXN0ZW0ub3V0LnByaW50bG4ob1tpXSk7XG4i
ICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iICsKKwkJCQkicHVibGljIGNsYXNzIFggZXh0ZW5k
cyBZIHtcbiIgKworCQkJCSIJcHJpdmF0ZSB2b2lkIG0oTnVtYmVyIGExLCBPYmplY3QuLi4gcmVz
dCkge1xuIiArIAorCQkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbihhMSk7XG4iICsKKwkJCQkiCQlw
cmludChyZXN0KTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIglzdGF0aWMgdm9pZCBwcmludCAo
T2JqZWN0IFtdIG8pIHtcbiIgKworCQkJCSIJCWZvciAoaW50IGkgPSAwOyBpIDwgby5sZW5ndGg7
IGkrKylcbiIgKworCQkJCSIJCQlTeXN0ZW0ub3V0LnByaW50bG4ob1tpXSk7XG4iICsKKwkJCQki
CX1cbiIgKworCQkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtc
biIgKworCQkJCSIJCW5ldyBYKCkuZm9vKCk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJdm9p
ZCBmb28oKSB7XG4iICsgCisJCQkJIgkJSSBpID0gdGhpczo6bTtcbiIgKworCQkJCSIJCWkuZm9v
KDEwLCAyMCwgXCIxMCwgMjBcIik7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iLAorCQkJ
fSwKKwkJCSIxMFxuIiArCisJCQkiMjBcbiIgKworCQkJIjEwLCAyMCIKKwkJCSk7Cit9CitwdWJs
aWMgdm9pZCB0ZXN0NDA2NzQ0aCgpIHsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQkJbmV3IFN0
cmluZ1tdIHsKKwkJCQkiWC5qYXZhIiwKKwkJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkJIgl2
b2lkIGZvbyhpbnQgW10gaWEpO1xuIiArCisJCQkJIn1cbiIgKworCQkJCSJjbGFzcyBZIHtcbiIg
KworCQkJCSIJdm9pZCBtKE9iamVjdC4uLiByZXN0KSB7XG4iICsgCisJCQkJIgkJU3lzdGVtLm91
dC5wcmludGxuKFwiSGVsbG8gXCIgKyByZXN0Lmxlbmd0aCk7XG4iICsKKwkJCQkiCX1cbiIgKwor
CQkJCSIJc3RhdGljIHZvaWQgcHJpbnQgKE9iamVjdCBbXSBvKSB7XG4iICsKKwkJCQkiCQlmb3Ig
KGludCBpID0gMDsgaSA8IG8ubGVuZ3RoOyBpKyspXG4iICsKKwkJCQkiCQkJU3lzdGVtLm91dC5w
cmludGxuKG9baV0pO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxuIiArCisJCQkJInB1Ymxp
YyBjbGFzcyBYIGV4dGVuZHMgWSB7XG4iICsKKwkJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWlu
KFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCQkiCQluZXcgWCgpLmZvbygpO1xuIiArCisJCQkJ
Igl9XG4iICsKKwkJCQkiCXZvaWQgZm9vKCkge1xuIiArIAorCQkJCSIJCUkgaSA9IHN1cGVyOjpt
O1xuIiArCisJCQkJIgkJaS5mb28obmV3IGludCBbMF0pO1xuIiArCisJCQkJIgl9XG4iICsKKwkJ
CQkifVxuIiwKKwkJCX0sCisJCQkiSGVsbG8gMSIKKwkJCSk7Cit9CitwdWJsaWMgdm9pZCB0ZXN0
NDA2NzQ0aSgpIHsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJ
CQkiWC5qYXZhIiwKKwkJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkJIgl2b2lkIGZvbyhpbnQg
W10gaWEpO1xuIiArCisJCQkJIn1cbiIgKworCQkJCSJjbGFzcyBZIHtcbiIgKworCQkJCSIJdm9p
ZCBtKE9iamVjdC4uLiByZXN0KSB7XG4iICsgCisJCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKFwi
SGVsbG8gXCIgKyByZXN0Lmxlbmd0aCk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJdm9pZCBu
KE9iamVjdC4uLiByZXN0KSB7XG4iICsgCisJCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKFwiSGVs
bG8gXCIgKyByZXN0Lmxlbmd0aCk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJc3RhdGljIHZv
aWQgcHJpbnQgKE9iamVjdCBbXSBvKSB7XG4iICsKKwkJCQkiCQlmb3IgKGludCBpID0gMDsgaSA8
IG8ubGVuZ3RoOyBpKyspXG4iICsKKwkJCQkiCQkJU3lzdGVtLm91dC5wcmludGxuKG9baV0pO1xu
IiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxuIiArCisJCQkJInB1YmxpYyBjbGFzcyBYIGV4dGVu
ZHMgWSB7XG4iICsKKwkJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBhcmdz
KSB7XG4iICsKKwkJCQkiCQluZXcgWCgpLmZvbygpO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQki
CXZvaWQgZm9vKCkge1xuIiArIAorCQkJCSIJCUkgW10gaSA9IHsgc3VwZXI6Om0sIHRoaXM6Om0s
IHN1cGVyOjpuLCB0aGlzOjpufTtcbiIgKworCQkJCSIJCWZvciAoSSB4IDogaSlcbiIgKworCQkJ
CSIJCQl4LmZvbyhuZXcgaW50IFswXSk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iLAor
CQkJfSwKKwkJCSJIZWxsbyAxXG4iICsKKwkJCSJIZWxsbyAxXG4iICsKKwkJCSJIZWxsbyAxXG4i
ICsKKwkJCSJIZWxsbyAxIgorCQkJKTsKK30KK3B1YmxpYyB2b2lkIHRlc3Q0MDY3NDRqKCkgewor
CXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEiLAor
CQkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCQkiCXZvaWQgZm9vKGludCBbXSBpYSk7XG4iICsK
KwkJCQkifVxuIiArCisJCQkJImludGVyZmFjZSBJMSB7XG4iICsKKwkJCQkiCXZvaWQgZm9vKGlu
dCBbXSBpYSk7XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNsYXNzIFkge1xuIiArCisJCQkJIgl2
b2lkIG0oT2JqZWN0Li4uIHJlc3QpIHtcbiIgKyAKKwkJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4o
XCJIZWxsbyBcIiArIHJlc3QubGVuZ3RoKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIglzdGF0
aWMgdm9pZCBwcmludCAoT2JqZWN0IFtdIG8pIHtcbiIgKworCQkJCSIJCWZvciAoaW50IGkgPSAw
OyBpIDwgby5sZW5ndGg7IGkrKylcbiIgKworCQkJCSIJCQlTeXN0ZW0ub3V0LnByaW50bG4ob1tp
XSk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iICsKKwkJCQkicHVibGljIGNsYXNzIFgg
ZXh0ZW5kcyBZIHtcbiIgKworCQkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtd
IGFyZ3MpIHtcbiIgKworCQkJCSIJCW5ldyBYKCkuZm9vKCk7XG4iICsKKwkJCQkiCX1cbiIgKwor
CQkJCSIJdm9pZCBmb28oKSB7XG4iICsgCisJCQkJIgkJSSBpID0gc3VwZXI6Om07XG4iICsKKwkJ
CQkiCQlpLmZvbyhuZXcgaW50IFswXSk7XG4iICsKKwkJCQkiCQlJMSBpMSA9IHN1cGVyOjptO1xu
IiArCisJCQkJIgkJaTEuZm9vKG5ldyBpbnQgWzBdKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJ
In1cbiIsCisJCQl9LAorCQkJIkhlbGxvIDFcbiIgKworCQkJIkhlbGxvIDEiCisJCQkpOworfQor
cHVibGljIHZvaWQgdGVzdDQwNjc0NGsoKSB7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJCW5l
dyBTdHJpbmdbXSB7CisJCQkJIlguamF2YSIsCisJCQkJImludGVyZmFjZSBJIHtcbiIgKworCQkJ
CSIJdm9pZCBmb28oaW50IFtdIGlhKTtcbiIgKworCQkJCSJ9XG4iICsKKwkJCQkiaW50ZXJmYWNl
IEkxIGV4dGVuZHMgSSB7XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNsYXNzIFkge1xuIiArCisJ
CQkJIgl2b2lkIG0oT2JqZWN0Li4uIHJlc3QpIHtcbiIgKyAKKwkJCQkiCQlTeXN0ZW0ub3V0LnBy
aW50bG4oXCJIZWxsbyBcIiArIHJlc3QubGVuZ3RoKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJ
IglzdGF0aWMgdm9pZCBwcmludCAoT2JqZWN0IFtdIG8pIHtcbiIgKworCQkJCSIJCWZvciAoaW50
IGkgPSAwOyBpIDwgby5sZW5ndGg7IGkrKylcbiIgKworCQkJCSIJCQlTeXN0ZW0ub3V0LnByaW50
bG4ob1tpXSk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iICsKKwkJCQkicHVibGljIGNs
YXNzIFggZXh0ZW5kcyBZIHtcbiIgKworCQkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3Ry
aW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJCSIJCW5ldyBYKCkuZm9vKCk7XG4iICsKKwkJCQkiCX1c
biIgKworCQkJCSIJdm9pZCBmb28oKSB7XG4iICsgCisJCQkJIgkJSSBpID0gc3VwZXI6Om07XG4i
ICsKKwkJCQkiCQlpLmZvbyhuZXcgaW50IFswXSk7XG4iICsKKwkJCQkiCQlJMSBpMSA9IHRoaXM6
Om07XG4iICsKKwkJCQkiCQlpMS5mb28obmV3IGludCBbMF0pO1xuIiArCisJCQkJIgl9XG4iICsK
KwkJCQkifVxuIiwKKwkJCX0sCisJCQkiSGVsbG8gMVxuIiArCisJCQkiSGVsbG8gMSIKKwkJCSk7
Cit9CitwdWJsaWMgdm9pZCB0ZXN0NDA2NzQ0bCgpIHsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAor
CQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiWC5qYXZhIiwKKwkJCQkiaW50ZXJmYWNlIEkge1xuIiAr
CisJCQkJIgl2b2lkIGZvbyhpbnQgW10gaWEpO1xuIiArCisJCQkJIn1cbiIgKworCQkJCSJjbGFz
cyBZIHtcbiIgKworCQkJCSIJdm9pZCBtKE9iamVjdC4uLiByZXN0KSB7XG4iICsgCisJCQkJIgkJ
SSBpID0gdGhpczo6bjtcbiIgKworCQkJCSIJCWkuZm9vKG5ldyBpbnQgWzBdKTtcbiIgKworCQkJ
CSIJfVxuIiArCisJCQkJIgl2b2lkIG4oT2JqZWN0Li4uIHJlc3QpIHtcbiIgKyAKKwkJCQkiCQlT
eXN0ZW0ub3V0LnByaW50bG4oXCJIZWxsbyBcIiArIHJlc3QubGVuZ3RoKTtcbiIgKworCQkJCSIJ
fVxuIiArCisJCQkJIglzdGF0aWMgdm9pZCBwcmludCAoT2JqZWN0IFtdIG8pIHtcbiIgKworCQkJ
CSIJCWZvciAoaW50IGkgPSAwOyBpIDwgby5sZW5ndGg7IGkrKylcbiIgKworCQkJCSIJCQlTeXN0
ZW0ub3V0LnByaW50bG4ob1tpXSk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iICsKKwkJ
CQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBZIHtcbiIgKworCQkJCSIJcHVibGljIHN0YXRpYyB2
b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJCSIJCW5ldyBYKCkuZm9vKCk7XG4i
ICsKKwkJCQkiCX1cbiIgKworCQkJCSIJdm9pZCBmb28oKSB7XG4iICsgCisJCQkJIgkJSSBpID0g
c3VwZXI6Om07XG4iICsKKwkJCQkiCQlpLmZvbyhuZXcgaW50IFswXSk7XG4iICsKKwkJCQkiCX1c
biIgKworCQkJCSJ9XG4iLAorCQkJfSwKKwkJCSJIZWxsbyAxIgorCQkJKTsKK30KK3B1YmxpYyB2
b2lkIHRlc3Q0MDY3NDRtKCkgeworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQluZXcgU3RyaW5n
W10geworCQkJCSJYLmphdmEiLAorCQkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCQkiCXZvaWQg
Zm9vKGludCBbXSBpYSk7XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNsYXNzIFkge1xuIiArCisJ
CQkJIglzdGF0aWMgdm9pZCBtKE9iamVjdC4uLiByZXN0KSB7XG4iICsgCisJCQkJIgkJU3lzdGVt
Lm91dC5wcmludGxuKFwiSGVsbG8gXCIgKyByZXN0Lmxlbmd0aCk7XG4iICsKKwkJCQkiCX1cbiIg
KworCQkJCSIJc3RhdGljIHZvaWQgcHJpbnQgKE9iamVjdCBbXSBvKSB7XG4iICsKKwkJCQkiCQlm
b3IgKGludCBpID0gMDsgaSA8IG8ubGVuZ3RoOyBpKyspXG4iICsKKwkJCQkiCQkJU3lzdGVtLm91
dC5wcmludGxuKG9baV0pO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNs
YXNzIFkxIGV4dGVuZHMgWSB7IH1cbiIgKworCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJ
CQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCQki
CQluZXcgWCgpLmZvbygpO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkiCXZvaWQgZm9vKCkge1xu
IiArIAorCQkJCSIJCUkgaSA9IFk6Om07XG4iICsKKwkJCQkiCQlpLmZvbyhuZXcgaW50IFswXSk7
XG4iICsKKwkJCQkiCQlpID0gWTE6Om07XG4iICsKKwkJCQkiCQlpLmZvbyhuZXcgaW50IFswXSk7
XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iLAorCQkJfSwKKwkJCSJIZWxsbyAxXG4iICsK
KwkJCSJIZWxsbyAxIgorCQkJKTsKK30KK3B1YmxpYyB2b2lkIHRlc3Q0MDY3NDRuKCkgeworCXRo
aXMucnVuQ29uZm9ybVRlc3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEiLAorCQkJ
CSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCQkiCXZvaWQgZm9vKEludGVnZXIgaSk7XG4iICsKKwkJ
CQkifVxuIiArCisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJCSIJc3RhdGljIHZvaWQg
Zm9vKGludCAuLi4geCkge1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkiCXB1YmxpYyBzdGF0aWMg
dm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKworCQkJCSIJCUkgaSA9IFg6OmZvbztcbiIg
KworCQkJCSIJCWkuZm9vKDEpO1xuIiArCisJCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKFwiSGVs
bG9cIik7XG4iICsKKwkJCQkifVxuIiArCisJCQkJIn1cbiIsCisJCQl9LAorCQkJIkhlbGxvIgor
CQkJKTsKK30KK3B1YmxpYyB2b2lkIHRlc3Q0MDY3NDRvKCkgeworCXRoaXMucnVuQ29uZm9ybVRl
c3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEiLAorCQkJCSJpbnRlcmZhY2UgSSB7
XG4iICsKKwkJCQkiCXZvaWQgZm9vKGludCBpKTtcbiIgKworCQkJCSJ9XG4iICsKKwkJCQkicHVi
bGljIGNsYXNzIFgge1xuIiArCisJCQkJIglzdGF0aWMgdm9pZCBmb28oaW50IC4uLiB4KSB7XG4i
ICsKKwkJCQkiCX1cbiIgKworCQkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10g
YXJncykge1xuIiArCisJCQkJIgkJSSBpID0gWDo6Zm9vO1xuIiArCisJCQkJIgkJaS5mb28oMSk7
XG4iICsKKwkJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oXCJIZWxsb1wiKTtcbiIgKworCQkJCSIJ
fVxuIiArCisJCQkJIn1cbiIsCisJCQl9LAorCQkJIkhlbGxvIgorCQkJKTsKK30KK3B1YmxpYyB2
b2lkIHRlc3Q0MDY3NDRwKCkgeworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQluZXcgU3RyaW5n
W10geworCQkJCSJYLmphdmEiLAorCQkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCQkiCXZvaWQg
Zm9vKEludGVnZXIgaSk7XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNsYXNzIEJhc2Uge1xuIiAr
CisJCQkJIgl2b2lkIGZvbyhPYmplY3QgLi4ub2JqZWN0cykge1xuIiArCisJCQkJIgkJU3lzdGVt
Lm91dC5wcmludGxuKFwiT2tcIik7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iICsKKwkJ
CQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBCYXNlIHtcbiIgKworCQkJCSIJdm9pZCBmb28oT2Jq
ZWN0Li4uIG9iamVjdHMpIHtcbiIgKworCQkJCSIJCXRocm93IG5ldyBSdW50aW1lRXhjZXB0aW9u
KCk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3Ry
aW5nW10gYXJncykge1xuIiArCisJCQkJIgkJbmV3IFgoKS5nb28oKTtcbiIgKworCQkJCSIJfVxu
IiArCisJCQkJIgl2b2lkIGdvbygpIHtcbiIgKworCQkJCSIJCUkgaSA9IHN1cGVyOjpmb287XG4i
ICsKKwkJCQkiCQlpLmZvbygxMCk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iLAorCQkJ
fSwKKwkJCSJPayIKKwkJCSk7Cit9CiAKIHB1YmxpYyBzdGF0aWMgQ2xhc3MgdGVzdENsYXNzKCkg
ewogCXJldHVybiBMYW1iZGFFeHByZXNzaW9uc1Rlc3QuY2xhc3M7CiB9CiB9CmRpZmYgLS1naXQg
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9OdWxsVHlwZUFubm90YXRpb25UZXN0Lmph
dmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9OdWxsVHlwZUFubm90YXRpb25UZXN0
LmphdmEKaW5kZXggNjI0ZDVhNi4uZjU0ZjU4YyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBp
bGVyL3JlZ3Jlc3Npb24vTnVsbFR5cGVBbm5vdGF0aW9uVGVzdC5qYXZhCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9jb21waWxlci9yZWdyZXNzaW9uL051bGxUeXBlQW5ub3RhdGlvblRlc3QuamF2YQpAQCAtMSw3
ICsxLDcgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMTIs
IDIwMTMgR0sgU29mdHdhcmUgQUcgYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAxMiwg
MjAxNCBHSyBTb2Z0d2FyZSBBRyBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4g
VGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUg
YXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2
MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWls
YWJsZSBhdAogICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKICAq
IApAQCAtMzQyNSwxMiArMzQyNSwxMSBAQAogCQkiCSAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICBeXl5eXl5eXl5cbiIgKyAKIAkJIk51bGwgdHlwZSBtaXNtYXRjaCBhdCBwYXJhbWV0
ZXIgMzogcmVxdWlyZWQgXCdATm9uTnVsbCBGaWxlVmlzaXRPcHRpb25cJyBidXQgcHJvdmlkZWQg
XCdATnVsbGFibGUgRmlsZVZpc2l0T3B0aW9uXCcgdmlhIG1ldGhvZCBkZXNjcmlwdG9yIFRyaUZ1
bmM8UGF0aCxGaWxlVmlzaXRPcHRpb24sRmlsZVZpc2l0T3B0aW9uLFN0cmVhbTxQYXRoPj4uYXBw
bHkoUGF0aCwgRmlsZVZpc2l0T3B0aW9uLCBGaWxlVmlzaXRPcHRpb24pXG4iICsgCiAJCSItLS0t
LS0tLS0tXG4iKTsKIH0KIAotLy8gRElTQUJMRUQsIGN1cnJlbnRseSB0aHJvd3MgamF2YS5sYW5n
LkJvb3RzdHJhcE1ldGhvZEVycm9yIGF0IHJ1bnRpbWU6Ci1wdWJsaWMgdm9pZCBfdGVzdEJ1ZzQy
NDYzN19jb21tZW50MygpIHsKK3B1YmxpYyB2b2lkIHRlc3RCdWc0MjQ2MzdfY29tbWVudDMoKSB7
CiAJcnVuQ29uZm9ybVRlc3QoCiAJCW5ldyBTdHJpbmdbXSB7CiAJCQkiVmFyQXJnc01ldGhvZFJl
ZmVyZW5jZVRlc3QuamF2YSIsCiAJCQkiaW1wb3J0IGphdmEudXRpbC5mdW5jdGlvbi5Db25zdW1l
cjtcbiIgKyAKIAkJCSJwdWJsaWMgY2xhc3MgVmFyQXJnc01ldGhvZFJlZmVyZW5jZVRlc3Qge1xu
IiArIApkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL0NsYXNzRmlsZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL0NsYXNzRmls
ZS5qYXZhCmluZGV4IGJmN2UzMGMuLmE5NjAyNWYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9DbGFzc0Zp
bGUuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvQ2xhc3NGaWxlLmphdmEKQEAgLTkwMCwxMCArOTAwLDEzIEBA
CiAJCQkJCQljYXNlIFN5bnRoZXRpY01ldGhvZEJpbmRpbmcuU3VwZXJNZXRob2RBY2Nlc3MgOgog
CQkJCQkJY2FzZSBTeW50aGV0aWNNZXRob2RCaW5kaW5nLkJyaWRnZU1ldGhvZCA6CiAJCQkJCQkJ
Ly8gZ2VuZXJhdGUgYSBtZXRob2QgaW5mbyB0byBlbXVsYXRlIGFuIGFjY2VzcyB0byBhIG5vbi1h
Y2Nlc3NpYmxlIG1ldGhvZCAvIHN1cGVyLW1ldGhvZCBvciBicmlkZ2UgbWV0aG9kCiAJCQkJCQkJ
YWRkU3ludGhldGljTWV0aG9kQWNjZXNzTWV0aG9kKHN5bnRoZXRpY01ldGhvZCk7CiAJCQkJCQkJ
YnJlYWs7CisJCQkJCQljYXNlIFN5bnRoZXRpY01ldGhvZEJpbmRpbmcuQ2hhbm5lbGlzZVBhcmFt
c1RvVmFyQXJncyA6CisJCQkJCQkJYWRkU3ludGhldGljTWV0aG9kQWNjZXNzTWV0aG9kRm9yVmFy
QXJncyhzeW50aGV0aWNNZXRob2QpOworCQkJCQkJCWJyZWFrOwogCQkJCQkJY2FzZSBTeW50aGV0
aWNNZXRob2RCaW5kaW5nLkNvbnN0cnVjdG9yQWNjZXNzIDoKIAkJCQkJCQkvLyBnZW5lcmF0ZSBh
IG1ldGhvZCBpbmZvIHRvIGVtdWxhdGUgYW4gYWNjZXNzIHRvIGEgbm9uLWFjY2Vzc2libGUgY29u
c3RydWN0b3IKIAkJCQkJCQlhZGRTeW50aGV0aWNDb25zdHJ1Y3RvckFjY2Vzc01ldGhvZChzeW50
aGV0aWNNZXRob2QpOwogCQkJCQkJCWJyZWFrOwogCQkJCQkJY2FzZSBTeW50aGV0aWNNZXRob2RC
aW5kaW5nLkVudW1WYWx1ZXMgOgpAQCAtMTIxNiwxMCArMTIxOSwzMSBAQAogCQkJCS5zY29wZQog
CQkJCS5yZWZlcmVuY2VDb21waWxhdGlvblVuaXQoKQogCQkJCS5jb21waWxhdGlvblJlc3VsdAog
CQkJCS5nZXRMaW5lU2VwYXJhdG9yUG9zaXRpb25zKCkpOwogCQkvLyB1cGRhdGUgdGhlIG51bWJl
ciBvZiBhdHRyaWJ1dGVzCisJCXRoaXMuY29udGVudHNbbWV0aG9kQXR0cmlidXRlT2Zmc2V0Kytd
ID0gKGJ5dGUpIChhdHRyaWJ1dGVOdW1iZXIgPj4gOCk7CisJCXRoaXMuY29udGVudHNbbWV0aG9k
QXR0cmlidXRlT2Zmc2V0XSA9IChieXRlKSBhdHRyaWJ1dGVOdW1iZXI7CisJfQorCisJcHVibGlj
IHZvaWQgYWRkU3ludGhldGljTWV0aG9kQWNjZXNzTWV0aG9kRm9yVmFyQXJncyhTeW50aGV0aWNN
ZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcpIHsKKwkJZ2VuZXJhdGVNZXRob2RJbmZvSGVhZGVy
KG1ldGhvZEJpbmRpbmcpOworCQlpbnQgbWV0aG9kQXR0cmlidXRlT2Zmc2V0ID0gdGhpcy5jb250
ZW50c09mZnNldDsKKwkJaW50IGF0dHJpYnV0ZU51bWJlciA9IGdlbmVyYXRlTWV0aG9kSW5mb0F0
dHJpYnV0ZXMobWV0aG9kQmluZGluZyk7CisJCWludCBjb2RlQXR0cmlidXRlT2Zmc2V0ID0gdGhp
cy5jb250ZW50c09mZnNldDsKKwkJYXR0cmlidXRlTnVtYmVyKys7CisJCWdlbmVyYXRlQ29kZUF0
dHJpYnV0ZUhlYWRlcigpOworCQl0aGlzLmNvZGVTdHJlYW0uaW5pdCh0aGlzKTsKKwkJdGhpcy5j
b2RlU3RyZWFtLmdlbmVyYXRlU3ludGhldGljQm9keUZvck1ldGhvZEFjY2Vzc0ZvclZhckFyZ3Mo
bWV0aG9kQmluZGluZyk7CisJCWNvbXBsZXRlQ29kZUF0dHJpYnV0ZUZvclN5bnRoZXRpY01ldGhv
ZCgKKwkJCW1ldGhvZEJpbmRpbmcsCisJCQljb2RlQXR0cmlidXRlT2Zmc2V0LAorCQkJKChTb3Vy
Y2VUeXBlQmluZGluZykgbWV0aG9kQmluZGluZy5kZWNsYXJpbmdDbGFzcykKKwkJCQkuc2NvcGUK
KwkJCQkucmVmZXJlbmNlQ29tcGlsYXRpb25Vbml0KCkKKwkJCQkuY29tcGlsYXRpb25SZXN1bHQK
KwkJCQkuZ2V0TGluZVNlcGFyYXRvclBvc2l0aW9ucygpKTsKIAkJdGhpcy5jb250ZW50c1ttZXRo
b2RBdHRyaWJ1dGVPZmZzZXQrK10gPSAoYnl0ZSkgKGF0dHJpYnV0ZU51bWJlciA+PiA4KTsKIAkJ
dGhpcy5jb250ZW50c1ttZXRob2RBdHRyaWJ1dGVPZmZzZXRdID0gKGJ5dGUpIGF0dHJpYnV0ZU51
bWJlcjsKIAl9CiAKIAlwdWJsaWMgdm9pZCBhZGRTeW50aGV0aWNTd2l0Y2hUYWJsZShTeW50aGV0
aWNNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcpIHsKQEAgLTI4NzcsMTIgKzI5MDEsMTQgQEAK
IAkJaW50IGF0dHJpYnV0ZUxlbmd0aFBvc2l0aW9uID0gbG9jYWxDb250ZW50c09mZnNldDsKIAkJ
bG9jYWxDb250ZW50c09mZnNldCArPSA0OwogCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVudHNP
ZmZzZXQrK10gPSAoYnl0ZSkgKG51bWJlck9mQm9vdHN0cmFwcyA+PiA4KTsKIAkJdGhpcy5jb250
ZW50c1tsb2NhbENvbnRlbnRzT2Zmc2V0KytdID0gKGJ5dGUpIG51bWJlck9mQm9vdHN0cmFwczsK
IAkJZm9yIChpbnQgaSA9IDA7IGkgPCBudW1iZXJPZkJvb3RzdHJhcHM7IGkrKykgewotCQkJRnVu
Y3Rpb25hbEV4cHJlc3Npb24gZnVuY3Rpb25hbCA9IChGdW5jdGlvbmFsRXhwcmVzc2lvbikgZnVu
Y3Rpb25hbEV4cHJlc3Npb25MaXN0LmdldChpKTsKLQkJCQorCQkJT2JqZWN0IHRlbXAgPSBmdW5j
dGlvbmFsRXhwcmVzc2lvbkxpc3QuZ2V0KGkpOworCisJCQlpZiAodGVtcCBpbnN0YW5jZW9mIEZ1
bmN0aW9uYWxFeHByZXNzaW9uKSB7CisJCQlGdW5jdGlvbmFsRXhwcmVzc2lvbiBmdW5jdGlvbmFs
ID0gKEZ1bmN0aW9uYWxFeHByZXNzaW9uKXRlbXA7CiAJCQlUeXBlQmluZGluZ1tdIG1hcmtlcklu
dGVyZmFjZXMgPSBudWxsOwogCQkJaWYgKGZ1bmN0aW9uYWwgaW5zdGFuY2VvZiBMYW1iZGFFeHBy
ZXNzaW9uICYmIAogCQkJCSAgICgoKG1hcmtlckludGVyZmFjZXM9KChMYW1iZGFFeHByZXNzaW9u
KWZ1bmN0aW9uYWwpLmdldE1hcmtlckludGVyZmFjZXMoKSkgIT0gbnVsbCkgfHwKIAkJCQkgICAJ
KChMYW1iZGFFeHByZXNzaW9uKWZ1bmN0aW9uYWwpLmlzU2VyaWFsaXphYmxlKSkgewogCQkJCQpA
QCAtMjk2NywxMCArMjk5MywzNiBAQAogCQogCQkJCWNoYXIgW10gaW5zdGFudGlhdGVkU2lnbmF0
dXJlID0gZnVuY3Rpb25hbC5kZXNjcmlwdG9yLnNpZ25hdHVyZSgpOwogCQkJCWludCBtZXRob2RU
eXBlSW5kZXggPSB0aGlzLmNvbnN0YW50UG9vbC5saXRlcmFsSW5kZXhGb3JNZXRob2RUeXBlKGlu
c3RhbnRpYXRlZFNpZ25hdHVyZSk7CiAJCQkJdGhpcy5jb250ZW50c1tsb2NhbENvbnRlbnRzT2Zm
c2V0KytdID0gKGJ5dGUpIChtZXRob2RUeXBlSW5kZXggPj4gOCk7CiAJCQkJdGhpcy5jb250ZW50
c1tsb2NhbENvbnRlbnRzT2Zmc2V0KytdID0gKGJ5dGUpIG1ldGhvZFR5cGVJbmRleDsJCQkJCisJ
CQl9CisJCQl9IGVsc2UgaWYgKHRlbXAgaW5zdGFuY2VvZiBTeW50aGV0aWNNZXRob2RCaW5kaW5n
ICYmICgoU3ludGhldGljTWV0aG9kQmluZGluZyl0ZW1wKS5wdXJwb3NlID09IFN5bnRoZXRpY01l
dGhvZEJpbmRpbmcuQ2hhbm5lbGlzZVBhcmFtc1RvVmFyQXJncykgeworCQkJCWlmIChpbmRleEZv
ck1ldGFGYWN0b3J5ID09IDApIHsKKwkJCQkJaW5kZXhGb3JNZXRhRmFjdG9yeSA9IHRoaXMuY29u
c3RhbnRQb29sLmxpdGVyYWxJbmRleEZvck1ldGhvZEhhbmRsZShDbGFzc0ZpbGVDb25zdGFudHMu
TWV0aG9kSGFuZGxlUmVmS2luZEludm9rZVN0YXRpYywgamF2YUxhbmdJbnZva2VMYW1iZGFNZXRh
ZmFjdG9yeSwgCisJCQkJCQkJQ29uc3RhbnRQb29sLk1FVEFGQUNUT1JZLCBDb25zdGFudFBvb2wu
SkFWQV9MQU5HX0lOVk9LRV9MQU1CREFNRVRBRkFDVE9SWV9NRVRBRkFDVE9SWV9TSUdOQVRVUkUs
IGZhbHNlKTsKKwkJCQl9CisJCQkJU3ludGhldGljTWV0aG9kQmluZGluZyBzeW50aGV0aWMgPSAo
U3ludGhldGljTWV0aG9kQmluZGluZykgdGVtcDsKKwkJCQkKKwkJCQl0aGlzLmNvbnRlbnRzW2xv
Y2FsQ29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgKGluZGV4Rm9yTWV0YUZhY3RvcnkgPj4gOCk7
CisJCQkJdGhpcy5jb250ZW50c1tsb2NhbENvbnRlbnRzT2Zmc2V0KytdID0gKGJ5dGUpIGluZGV4
Rm9yTWV0YUZhY3Rvcnk7CisJCQkJCisJCQkJLy8gdTIgbnVtX2Jvb3RzdHJhcF9hcmd1bWVudHMK
KwkJCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10gPSAwOworCQkJCXRoaXMu
Y29udGVudHNbbG9jYWxDb250ZW50c09mZnNldCsrXSA9IChieXRlKSAzOworCQkJCQorCQkJCWlu
dCBmdW5jdGlvbmFsRGVzY3JpcHRvckluZGV4ID0gdGhpcy5jb25zdGFudFBvb2wubGl0ZXJhbElu
ZGV4Rm9yTWV0aG9kVHlwZShzeW50aGV0aWMuaW5wdXRNZXRob2Qub3JpZ2luYWwoKS5zaWduYXR1
cmUoKSk7CisJCQkJdGhpcy5jb250ZW50c1tsb2NhbENvbnRlbnRzT2Zmc2V0KytdID0gKGJ5dGUp
IChmdW5jdGlvbmFsRGVzY3JpcHRvckluZGV4ID4+IDgpOworCQkJCXRoaXMuY29udGVudHNbbG9j
YWxDb250ZW50c09mZnNldCsrXSA9IChieXRlKSBmdW5jdGlvbmFsRGVzY3JpcHRvckluZGV4Owor
CQorCQkJCWludCBtZXRob2RIYW5kbGVJbmRleCA9IHRoaXMuY29uc3RhbnRQb29sLmxpdGVyYWxJ
bmRleEZvck1ldGhvZEhhbmRsZShzeW50aGV0aWMub3JpZ2luYWwoKSk7IC8vIFNwZWFrIG9mICIg
aW1wbGVtZW50YXRpb24iIChlcmFzZWQpIHZlcnNpb24gaGVyZSwgYWRhcHRhdGlvbnMgZGVzY3Jp
YmVkIGJlbG93LgorCQkJCXRoaXMuY29udGVudHNbbG9jYWxDb250ZW50c09mZnNldCsrXSA9IChi
eXRlKSAobWV0aG9kSGFuZGxlSW5kZXggPj4gOCk7CisJCQkJdGhpcy5jb250ZW50c1tsb2NhbENv
bnRlbnRzT2Zmc2V0KytdID0gKGJ5dGUpIG1ldGhvZEhhbmRsZUluZGV4OworCQorCQkJCWludCBt
ZXRob2RUeXBlSW5kZXggPSB0aGlzLmNvbnN0YW50UG9vbC5saXRlcmFsSW5kZXhGb3JNZXRob2RU
eXBlKHN5bnRoZXRpYy5pbnB1dE1ldGhvZC5zaWduYXR1cmUoKSk7CisJCQkJdGhpcy5jb250ZW50
c1tsb2NhbENvbnRlbnRzT2Zmc2V0KytdID0gKGJ5dGUpIChtZXRob2RUeXBlSW5kZXggPj4gOCk7
CisJCQkJdGhpcy5jb250ZW50c1tsb2NhbENvbnRlbnRzT2Zmc2V0KytdID0gKGJ5dGUpIG1ldGhv
ZFR5cGVJbmRleDsJCQkJCQkJCQogCQkJfQogCQl9CiAKIAkJaW50IGF0dHJpYnV0ZUxlbmd0aCA9
IGxvY2FsQ29udGVudHNPZmZzZXQgLSBhdHRyaWJ1dGVMZW5ndGhQb3NpdGlvbiAtIDQ7CiAJCXRo
aXMuY29udGVudHNbYXR0cmlidXRlTGVuZ3RoUG9zaXRpb24rK10gPSAoYnl0ZSkgKGF0dHJpYnV0
ZUxlbmd0aCA+PiAyNCk7CkBAIC01MTE5LDEwICs1MTcxLDE4IEBACiAJCXRoaXMuYm9vdHN0cmFw
TWV0aG9kcy5hZGQoZXhwcmVzc2lvbik7CiAJCS8vIFJlY29yZCB3aGljaCBib290c3RyYXAgbWV0
aG9kIHdhcyBhc3NpZ25lZCB0byB0aGUgZXhwcmVzc2lvbgogCQlleHByZXNzaW9uLmJvb3RzdHJh
cE1ldGhvZE51bWJlciA9IHRoaXMuYm9vdHN0cmFwTWV0aG9kcy5zaXplKCkgLSAxOwogCQlyZXR1
cm4gdGhpcy5ib290c3RyYXBNZXRob2RzLnNpemUoKSAtIDE7CiAJfQorCQorCXB1YmxpYyBpbnQg
cmVjb3JkQm9vdHN0cmFwTWV0aG9kKFN5bnRoZXRpY01ldGhvZEJpbmRpbmcgc20pIHsKKwkJaWYg
KHRoaXMuYm9vdHN0cmFwTWV0aG9kcyA9PSBudWxsKSB7CisJCQl0aGlzLmJvb3RzdHJhcE1ldGhv
ZHMgPSBuZXcgQXJyYXlMaXN0KCk7CisJCX0KKwkJdGhpcy5ib290c3RyYXBNZXRob2RzLmFkZChz
bSk7CisJCXJldHVybiB0aGlzLmJvb3RzdHJhcE1ldGhvZHMuc2l6ZSgpIC0gMTsKKwl9CiAKIAlw
dWJsaWMgdm9pZCByZXNldChTb3VyY2VUeXBlQmluZGluZyB0eXBlQmluZGluZykgewogCQkvLyB0
aGUgY29kZSBzdHJlYW0gaXMgcmVpbml0aWFsaXplZCBmb3IgZWFjaCBtZXRob2QKIAkJZmluYWwg
Q29tcGlsZXJPcHRpb25zIG9wdGlvbnMgPSB0eXBlQmluZGluZy5zY29wZS5jb21waWxlck9wdGlv
bnMoKTsKIAkJdGhpcy5yZWZlcmVuY2VCaW5kaW5nID0gdHlwZUJpbmRpbmc7CmRpZmYgLS1naXQg
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvYXN0L1JlZmVyZW5jZUV4cHJlc3Npb24uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvUmVmZXJl
bmNlRXhwcmVzc2lvbi5qYXZhCmluZGV4IDgxMjNlNzMuLjgzNjBiZjMgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9hc3QvUmVmZXJlbmNlRXhwcmVzc2lvbi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvUmVmZXJl
bmNlRXhwcmVzc2lvbi5qYXZhCkBAIC0xNzAsMTEgKzE3MCwyMiBAQAogCQl9CiAJCWJ1ZmZlci5h
cHBlbmQoJyknKTsKIAkJYnVmZmVyLmFwcGVuZCgnTCcpOwogCQlidWZmZXIuYXBwZW5kKHRoaXMu
cmVzb2x2ZWRUeXBlLmNvbnN0YW50UG9vbE5hbWUoKSk7CiAJCWJ1ZmZlci5hcHBlbmQoJzsnKTsK
LQkJaW50IGludm9rZUR5bmFtaWNOdW1iZXIgPSBjb2RlU3RyZWFtLmNsYXNzRmlsZS5yZWNvcmRC
b290c3RyYXBNZXRob2QodGhpcyk7CisJCWludCBpbnZva2VEeW5hbWljTnVtYmVyOworCQlpZiAo
dGhpcy5iaW5kaW5nLmlzVmFyYXJncygpICYmICEodGhpcy5iaW5kaW5nIGluc3RhbmNlb2YgU3lu
dGhldGljTWV0aG9kQmluZGluZykgJiYgIXRoaXMuYmluZGluZy5hcmVQYXJhbWV0ZXJFcmFzdXJl
c0VxdWFsKHRoaXMuZGVzY3JpcHRvcikpIHsKKwkJCVN5bnRoZXRpY01ldGhvZEJpbmRpbmcgc20g
PSBzb3VyY2VUeXBlLmFkZFN5bnRoZXRpY01ldGhvZEZvckFyZ3VtZW50Q2hhbm5lbGluZ0ZvclZh
ckFyZ3ModGhpcy5kZXNjcmlwdG9yLCB0aGlzLmJpbmRpbmcsIGZhbHNlKTsKKwkJCWlmIChzbS5p
bnZva2VEeW5hbWljTnVtYmVyID09IFN5bnRoZXRpY01ldGhvZEJpbmRpbmcuTk9UX0JPT1RTVFJB
UFBFRCkgeworCQkJCXNtLmludm9rZUR5bmFtaWNOdW1iZXIgPSBpbnZva2VEeW5hbWljTnVtYmVy
ID0gY29kZVN0cmVhbS5jbGFzc0ZpbGUucmVjb3JkQm9vdHN0cmFwTWV0aG9kKHNtKTsKKwkJCX0g
ZWxzZSB7CisJCQkJaW52b2tlRHluYW1pY051bWJlciA9IHNtLmludm9rZUR5bmFtaWNOdW1iZXI7
CisJCQl9CisJCQkKKwkJfSBlbHNlIHsKKwkJCWludm9rZUR5bmFtaWNOdW1iZXIgPSBjb2RlU3Ry
ZWFtLmNsYXNzRmlsZS5yZWNvcmRCb290c3RyYXBNZXRob2QodGhpcyk7CisJCX0KIAkJY29kZVN0
cmVhbS5pbnZva2VEeW5hbWljKGludm9rZUR5bmFtaWNOdW1iZXIsIGFyZ3VtZW50c1NpemUsIDEs
IHRoaXMuZGVzY3JpcHRvci5zZWxlY3RvciwgYnVmZmVyLnRvU3RyaW5nKCkudG9DaGFyQXJyYXko
KSwgCiAJCQkJdGhpcy5pc0NvbnN0cnVjdG9yUmVmZXJlbmNlKCksICh0aGlzLmxocyBpbnN0YW5j
ZW9mIFR5cGVSZWZlcmVuY2U/IChUeXBlUmVmZXJlbmNlKSB0aGlzLmxocyA6IG51bGwpLCB0aGlz
LnR5cGVBcmd1bWVudHMpOwogCQlpZiAoIXZhbHVlUmVxdWlyZWQpCiAJCQljb2RlU3RyZWFtLnBv
cCgpOwogCQljb2RlU3RyZWFtLnJlY29yZFBvc2l0aW9uc0Zyb20ocGMsIHRoaXMuc291cmNlU3Rh
cnQpOwpAQCAtMjE3LDExICsyMjgsMTUgQEAKIAkJCQlUeXBlUmVmZXJlbmNlIHF1YWxpZmljYXRp
b24gPSBxdWFsaWZpZWRTdXBlclJlZmVyZW5jZS5xdWFsaWZpY2F0aW9uOwogCQkJCWlmICghcXVh
bGlmaWNhdGlvbi5yZXNvbHZlZFR5cGUuaXNJbnRlcmZhY2UoKSkgLy8gd2UgY2FuJ3QgZHJvcCB0
aGUgYnJpZGdlIGluIEksIGl0IG1heSBub3QgZXZlbiBiZSBhIHNvdXJjZSB0eXBlLgogCQkJCQlk
ZXN0aW5hdGlvblR5cGUgPSAoU291cmNlVHlwZUJpbmRpbmcpIChxdWFsaWZpZWRTdXBlclJlZmVy
ZW5jZS5jdXJyZW50Q29tcGF0aWJsZVR5cGUpOwogCQkJfQogCQkJCi0JCQl0aGlzLnN5bnRoZXRp
Y0FjY2Vzc29yID0gZGVzdGluYXRpb25UeXBlLmFkZFN5bnRoZXRpY01ldGhvZChjb2RlZ2VuQmlu
ZGluZywgdHJ1ZSk7CisJCQlpZiAoY29kZWdlbkJpbmRpbmcuaXNWYXJhcmdzKCkgJiYgIShjb2Rl
Z2VuQmluZGluZyBpbnN0YW5jZW9mIFN5bnRoZXRpY01ldGhvZEJpbmRpbmcpICYmICFjb2RlZ2Vu
QmluZGluZy5hcmVQYXJhbWV0ZXJFcmFzdXJlc0VxdWFsKHRoaXMuZGVzY3JpcHRvcikpIHsKKwkJ
CQl0aGlzLnN5bnRoZXRpY0FjY2Vzc29yID0gZGVzdGluYXRpb25UeXBlLmFkZFN5bnRoZXRpY01l
dGhvZEZvckFyZ3VtZW50Q2hhbm5lbGluZ0ZvclZhckFyZ3ModGhpcy5kZXNjcmlwdG9yLCB0aGlz
LmJpbmRpbmcsIHRydWUpOworCQkJfSBlbHNlIHsKKwkJCQl0aGlzLnN5bnRoZXRpY0FjY2Vzc29y
ID0gZGVzdGluYXRpb25UeXBlLmFkZFN5bnRoZXRpY01ldGhvZChjb2RlZ2VuQmluZGluZywgdHJ1
ZSk7CisJCQl9CiAJCQljdXJyZW50U2NvcGUucHJvYmxlbVJlcG9ydGVyKCkubmVlZFRvRW11bGF0
ZU1ldGhvZEFjY2Vzcyhjb2RlZ2VuQmluZGluZywgdGhpcyk7CiAJCQlyZXR1cm47CiAJCX0KIAkJ
CiAJCWlmICh0aGlzLmJpbmRpbmcuaXNQcm90ZWN0ZWQoKSAmJiAodGhpcy5iaXRzICYgQVNUTm9k
ZS5EZXB0aE1BU0spICE9IDAgJiYgY29kZWdlbkJpbmRpbmcuZGVjbGFyaW5nQ2xhc3MuZ2V0UGFj
a2FnZSgpICE9IGVuY2xvc2luZ1NvdXJjZVR5cGUuZ2V0UGFja2FnZSgpKSB7CmRpZmYgLS1naXQg
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvY29kZWdlbi9Db2RlU3RyZWFtLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY29kZWdlbi9Db2RlU3Ry
ZWFtLmphdmEKaW5kZXggNDAyZDg0ZC4uNmI5MDJmZSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NvZGVn
ZW4vQ29kZVN0cmVhbS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jb2RlZ2VuL0NvZGVTdHJlYW0uamF2YQpA
QCAtMjk2MiwxMCArMjk2MiwxMDggQEAKIAkJCQl0aGlzLmNoZWNrY2FzdChhY2Nlc3NFcmFzdXJl
KTsgLy8gZm9yIGJyaWRnZSBtZXRob2RzCiAJCQl9CiAJCQlhcmV0dXJuKCk7CiAJfQogfQorcHVi
bGljIHZvaWQgZ2VuZXJhdGVTeW50aGV0aWNCb2R5Rm9yTWV0aG9kQWNjZXNzRm9yVmFyQXJncyhT
eW50aGV0aWNNZXRob2RCaW5kaW5nIGFjY2Vzc01ldGhvZCkgeworCWluaXRpYWxpemVNYXhMb2Nh
bHMoYWNjZXNzTWV0aG9kKTsKKwlNZXRob2RCaW5kaW5nIHRhcmdldE1ldGhvZCA9IGFjY2Vzc01l
dGhvZC50YXJnZXRNZXRob2Q7CisJVHlwZUJpbmRpbmdbXSBwYXJhbWV0ZXJzID0gdGFyZ2V0TWV0
aG9kLnBhcmFtZXRlcnM7CisJaW50IGxlbmd0aCA9IHBhcmFtZXRlcnMubGVuZ3RoOworCWlmICgh
KHBhcmFtZXRlcnNbbGVuZ3RoIC0gMV0gaW5zdGFuY2VvZiBBcnJheUJpbmRpbmcpKSB7CisJCXJl
dHVybjsKKwl9CisJVHlwZUJpbmRpbmdbXSBhcmd1bWVudHMgPSBhY2Nlc3NNZXRob2QucHVycG9z
ZSA9PSBTeW50aGV0aWNNZXRob2RCaW5kaW5nLkNoYW5uZWxpc2VQYXJhbXNUb1ZhckFyZ3MKKwkJ
CQkJCQkJCQkJCQk/IGFjY2Vzc01ldGhvZC5wYXJhbWV0ZXJzCisJCQkJCQkJCQkJCQkJOiBudWxs
OworCWludCByZXNvbHZlZFBvc2l0aW9uLCBhcnJheUxlbmd0aCA9IDA7CisJaWYgKHRhcmdldE1l
dGhvZC5pc1N0YXRpYygpKQorCQlyZXNvbHZlZFBvc2l0aW9uID0gMDsKKwllbHNlIGlmICh0YXJn
ZXRNZXRob2QuaXNDb25zdHJ1Y3RvcigpKSB7CisJCXJlc29sdmVkUG9zaXRpb24gPSAwOworCQlu
ZXdfKHRhcmdldE1ldGhvZC5kZWNsYXJpbmdDbGFzcyk7CisJCWR1cCgpOworCX0gZWxzZSB7CisJ
CWFsb2FkXzAoKTsKKwkJcmVzb2x2ZWRQb3NpdGlvbiA9IDE7CisJCWlmIChhY2Nlc3NNZXRob2Qu
aXNTdXBlckFjY2VzcykgeworCQkJYXJyYXlMZW5ndGgrKzsKKwkJfQorCX0KKwlmb3IgKGludCBp
ID0gMDsgaSA8IGxlbmd0aCAtIDE7IGkrKykgeworCSAgICBUeXBlQmluZGluZyBwYXJhbWV0ZXIg
PSBwYXJhbWV0ZXJzW2ldOworCSAgICBpZiAoYXJndW1lbnRzICE9IG51bGwpIHsgLy8gZm9yIGJy
aWRnZSBtZXRob2RzCisJCSAgICBUeXBlQmluZGluZyBhcmd1bWVudCA9IGFyZ3VtZW50c1tpXTsK
KwkJCWxvYWQoYXJndW1lbnQsIHJlc29sdmVkUG9zaXRpb24pOworCSAgICB9IGVsc2UgeworCQkJ
bG9hZChwYXJhbWV0ZXIsIHJlc29sdmVkUG9zaXRpb24pOworCQl9CisJCXN3aXRjaChwYXJhbWV0
ZXIuaWQpIHsKKwkJCWNhc2UgVHlwZUlkcy5UX2xvbmcgOgorCQkJY2FzZSBUeXBlSWRzLlRfZG91
YmxlIDoKKwkJCQlyZXNvbHZlZFBvc2l0aW9uICs9IDI7CisJCQkJYnJlYWs7CisJCQlkZWZhdWx0
IDoKKwkJCQlyZXNvbHZlZFBvc2l0aW9uKys7CisJCQkJYnJlYWs7CisJCX0KKwl9CisJYXJyYXlM
ZW5ndGggKz0gYXJndW1lbnRzLmxlbmd0aCAtIHJlc29sdmVkUG9zaXRpb247IC8vICsgKGFjY2Vz
c01ldGhvZC5pc1N1cGVyQWNjZXNzID8gMSA6IDApOworCWdlbmVyYXRlSW5saW5lZFZhbHVlKGFy
cmF5TGVuZ3RoKTsKKwlBcnJheUJpbmRpbmcgdmFyQXJnVHlwZTsKKwluZXdBcnJheSh2YXJBcmdU
eXBlID0gKEFycmF5QmluZGluZylwYXJhbWV0ZXJzW2xlbmd0aCAtIDFdKTsKKwlmb3IoaW50IGFy
cmF5SW5kZXggPSAwOyBhcnJheUluZGV4IDwgYXJyYXlMZW5ndGg7IGFycmF5SW5kZXgrKykgewor
CQlkdXAoKTsKKwkJZ2VuZXJhdGVJbmxpbmVkVmFsdWUoYXJyYXlJbmRleCk7CisJCWxvYWQodmFy
QXJnVHlwZS5lbGVtZW50c1R5cGUoKSwgcmVzb2x2ZWRQb3NpdGlvbisrKTsKKwkJYXJyYXlBdFB1
dCh2YXJBcmdUeXBlLmVsZW1lbnRzVHlwZSgpLmlkLCBmYWxzZSk7CisJfQorCWlmICh0YXJnZXRN
ZXRob2QuaXNTdGF0aWMoKSkKKwkJaW52b2tlKE9wY29kZXMuT1BDX2ludm9rZXN0YXRpYywgdGFy
Z2V0TWV0aG9kLCB0YXJnZXRNZXRob2QuZGVjbGFyaW5nQ2xhc3MpOworCWVsc2UgeworCQlpZiAo
dGFyZ2V0TWV0aG9kLmlzQ29uc3RydWN0b3IoKSB8fCB0YXJnZXRNZXRob2QuaXNQcml2YXRlKCkg
fHwgYWNjZXNzTWV0aG9kLmlzU3VwZXJBY2Nlc3MpeworCQkJaW52b2tlKE9wY29kZXMuT1BDX2lu
dm9rZXNwZWNpYWwsIHRhcmdldE1ldGhvZCwgdGFyZ2V0TWV0aG9kLmRlY2xhcmluZ0NsYXNzKTsK
KwkJfSBlbHNlIHsKKwkJCWlmICh0YXJnZXRNZXRob2QuZGVjbGFyaW5nQ2xhc3MuaXNJbnRlcmZh
Y2UoKSkgeworCQkJCWludm9rZShPcGNvZGVzLk9QQ19pbnZva2VpbnRlcmZhY2UsIHRhcmdldE1l
dGhvZCwgbnVsbCAvKiBkZWZhdWx0IGRlY2xhcmluZ0NsYXNzICovKTsKKwkJCX0gZWxzZSB7CisJ
CQkJaW52b2tlKE9wY29kZXMuT1BDX2ludm9rZXZpcnR1YWwsIHRhcmdldE1ldGhvZCwgdGFyZ2V0
TWV0aG9kLmRlY2xhcmluZ0NsYXNzKTsKKwkJCX0KKwkJfQorCX0KKwlpZiAodGFyZ2V0TWV0aG9k
LnJldHVyblR5cGUuaWQgIT0gVHlwZUlkcy5UX3ZvaWQgJiYgYWNjZXNzTWV0aG9kLnJldHVyblR5
cGUuaWQgPT0gVHlwZUlkcy5UX3ZvaWQpIHsKKwkJcG9wKCk7CisJfQorCXN3aXRjaCAoYWNjZXNz
TWV0aG9kLnJldHVyblR5cGUuaWQpIHsKKwkJY2FzZSBUeXBlSWRzLlRfdm9pZCA6CisJCQlyZXR1
cm5fKCk7CisJCQlicmVhazsKKwkJY2FzZSBUeXBlSWRzLlRfYm9vbGVhbiA6CisJCWNhc2UgVHlw
ZUlkcy5UX2J5dGUgOgorCQljYXNlIFR5cGVJZHMuVF9jaGFyIDoKKwkJY2FzZSBUeXBlSWRzLlRf
c2hvcnQgOgorCQljYXNlIFR5cGVJZHMuVF9pbnQgOgorCQkJaXJldHVybigpOworCQkJYnJlYWs7
CisJCWNhc2UgVHlwZUlkcy5UX2xvbmcgOgorCQkJbHJldHVybigpOworCQkJYnJlYWs7CisJCWNh
c2UgVHlwZUlkcy5UX2Zsb2F0IDoKKwkJCWZyZXR1cm4oKTsKKwkJCWJyZWFrOworCQljYXNlIFR5
cGVJZHMuVF9kb3VibGUgOgorCQkJZHJldHVybigpOworCQkJYnJlYWs7CisJCWRlZmF1bHQgOgor
CQkJVHlwZUJpbmRpbmcgYWNjZXNzRXJhc3VyZSA9IGFjY2Vzc01ldGhvZC5yZXR1cm5UeXBlLmVy
YXN1cmUoKTsKKwkJCVR5cGVCaW5kaW5nIG1hdGNoID0gdGFyZ2V0TWV0aG9kLnJldHVyblR5cGUu
ZmluZFN1cGVyVHlwZU9yaWdpbmF0aW5nRnJvbShhY2Nlc3NFcmFzdXJlKTsKKwkJCWlmIChtYXRj
aCA9PSBudWxsKSB7CisJCQkJdGhpcy5jaGVja2Nhc3QoYWNjZXNzRXJhc3VyZSk7IC8vIGZvciBi
cmlkZ2UgbWV0aG9kcworCQkJfQorCQkJYXJldHVybigpOworCX0KK30KIC8qKiBXaGVuIGdlbmVy
YXRpbmcgU3VwZXJNZXRvZEFjY2VzcyB0b3dhcmRzIHRhcmdldE1ldGhvZCwKICAqICBmaW5kIHRo
ZSBzdWl0YWJsZSBkaXJlY3Qgc3VwZXIgdHlwZSwgdGhhdCB3aWxsIGV2ZW50dWFsbHkgbGVhZCB0
byB0YXJnZXRNZXRob2QuZGVjbGFyaW5nQ2xhc3MuKi8KIFJlZmVyZW5jZUJpbmRpbmcgZmluZERp
cmVjdFN1cGVyVHlwZVRvd2FyZHMoU3ludGhldGljTWV0aG9kQmluZGluZyBhY2Nlc3NNZXRob2Qs
IE1ldGhvZEJpbmRpbmcgdGFyZ2V0TWV0aG9kKSB7CiAJUmVmZXJlbmNlQmluZGluZyBjdXJyZW50
VHlwZSA9IGFjY2Vzc01ldGhvZC5kZWNsYXJpbmdDbGFzczsKIAlSZWZlcmVuY2VCaW5kaW5nIHN1
cGVyY2xhc3MgPSBjdXJyZW50VHlwZS5zdXBlcmNsYXNzKCk7CkBAIC01Njg4LDEyICs1Nzg2LDE2
IEBACiAJbG9hZChsb2NhbEJpbmRpbmcudHlwZSwgbG9jYWxCaW5kaW5nLnJlc29sdmVkUG9zaXRp
b24pOwogfQogCiBwcm90ZWN0ZWQgZmluYWwgdm9pZCBsb2FkKFR5cGVCaW5kaW5nIHR5cGVCaW5k
aW5nLCBpbnQgcmVzb2x2ZWRQb3NpdGlvbikgewogCXRoaXMuY291bnRMYWJlbHMgPSAwOworCWxv
YWQodHlwZUJpbmRpbmcuaWQsIHJlc29sdmVkUG9zaXRpb24pOworfQorCitwcm90ZWN0ZWQgZmlu
YWwgdm9pZCBsb2FkKGludCB0eXBlSWQsIGludCByZXNvbHZlZFBvc2l0aW9uKSB7CiAJLy8gVXNp
bmcgZGVkaWNhdGVkIGludCBieXRlY29kZQotCXN3aXRjaCh0eXBlQmluZGluZy5pZCkgeworCXN3
aXRjaCh0eXBlSWQpIHsKIAkJY2FzZSBUeXBlSWRzLlRfaW50IDoKIAkJY2FzZSBUeXBlSWRzLlRf
Ynl0ZSA6CiAJCWNhc2UgVHlwZUlkcy5UX2NoYXIgOgogCQljYXNlIFR5cGVJZHMuVF9ib29sZWFu
IDoKIAkJY2FzZSBUeXBlSWRzLlRfc2hvcnQgOgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9T
b3VyY2VUeXBlQmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Tb3VyY2VUeXBlQmluZGluZy5q
YXZhCmluZGV4IDc2NTNmMjUuLmUzNTBiYjUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvU291
cmNlVHlwZUJpbmRpbmcuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1NvdXJjZVR5cGVCaW5kaW5n
LmphdmEKQEAgLTgwLDEyICs4MCwxMyBAQAogCS8vIFN5bnRoZXRpY3MgYXJlIHNlcGFyYXRlZCBp
bnRvIDQgY2F0ZWdvcmllczogbWV0aG9kcywgc3VwZXIgbWV0aG9kcywgZmllbGRzLCBjbGFzcyBs
aXRlcmFscyBhbmQgYnJpZGdlIG1ldGhvZHMKIAkvLyBpZiBhIG5ldyBjYXRlZ29yeSBpcyBhZGRl
ZCwgYWxzbyBpbmNyZW1lbnQgTUFYX1NZTlRIRVRJQ1MKIAlwcml2YXRlIGZpbmFsIHN0YXRpYyBp
bnQgTUVUSE9EX0VNVUwgPSAwOwogCXByaXZhdGUgZmluYWwgc3RhdGljIGludCBGSUVMRF9FTVVM
ID0gMTsKIAlwcml2YXRlIGZpbmFsIHN0YXRpYyBpbnQgQ0xBU1NfTElURVJBTF9FTVVMID0gMjsK
Kwlwcml2YXRlIGZpbmFsIHN0YXRpYyBpbnQgTUVUSE9EX1BBSVJfQlJJREdFID0gMzsKIAotCXBy
aXZhdGUgZmluYWwgc3RhdGljIGludCBNQVhfU1lOVEhFVElDUyA9IDM7CisJcHJpdmF0ZSBmaW5h
bCBzdGF0aWMgaW50IE1BWF9TWU5USEVUSUNTID0gNDsKIAogCUhhc2hNYXBbXSBzeW50aGV0aWNz
OwogCWNoYXJbXSBnZW5lcmljUmVmZXJlbmNlVHlwZVNpZ25hdHVyZTsKIAogCXByaXZhdGUgU2lt
cGxlTG9va3VwVGFibGUgc3RvcmVkQW5ub3RhdGlvbnMgPSBudWxsOyAvLyBrZXlzIGFyZSB0aGlz
IFJlZmVyZW5jZUJpbmRpbmcgJiBpdHMgZmllbGRzIGFuZCBtZXRob2RzLCB2YWx1ZSBpcyBhbiBB
bm5vdGF0aW9uSG9sZGVyCkBAIC03NzksMTAgKzc4MCw3MiBAQAogCQkJYWNjZXNzb3JzWzBdID0g
YWNjZXNzTWV0aG9kOwogCQl9CiAJfQogCXJldHVybiBhY2Nlc3NNZXRob2Q7CiB9CisKK3B1Ymxp
YyBTeW50aGV0aWNNZXRob2RCaW5kaW5nIGFkZFN5bnRoZXRpY01ldGhvZEZvckFyZ3VtZW50Q2hh
bm5lbGluZ0ZvclZhckFyZ3MoTWV0aG9kQmluZGluZyBpbnB1dCwgTWV0aG9kQmluZGluZyB0YXJn
ZXRNZXRob2QsIGJvb2xlYW4gaXNTdXBlckFjY2VzcykgeworCWlmICghaXNQcm90b3R5cGUoKSkg
dGhyb3cgbmV3IElsbGVnYWxTdGF0ZUV4Y2VwdGlvbigpOworCWlmIChUeXBlQmluZGluZy5lcXVh
bHNFcXVhbHMoaW5wdXQucmV0dXJuVHlwZS5lcmFzdXJlKCksIHRhcmdldE1ldGhvZC5yZXR1cm5U
eXBlLmVyYXN1cmUoKSkKKwkJJiYgaW5wdXQuYXJlUGFyYW1ldGVyRXJhc3VyZXNFcXVhbCh0YXJn
ZXRNZXRob2QpKSB7CisJCQlyZXR1cm4gbnVsbDsgLy8gZG8gbm90IG5lZWQgYnJpZGdlIG1ldGhv
ZAorCX0KKwlpZiAodGhpcy5zeW50aGV0aWNzID09IG51bGwpCisJCXRoaXMuc3ludGhldGljcyA9
IG5ldyBIYXNoTWFwW01BWF9TWU5USEVUSUNTXTsKKwlpZiAodGhpcy5zeW50aGV0aWNzW1NvdXJj
ZVR5cGVCaW5kaW5nLk1FVEhPRF9QQUlSX0JSSURHRV0gPT0gbnVsbCkgeworCQl0aGlzLnN5bnRo
ZXRpY3NbU291cmNlVHlwZUJpbmRpbmcuTUVUSE9EX1BBSVJfQlJJREdFXSA9IG5ldyBIYXNoTWFw
KDUpOworCX0gZWxzZSB7CisJCS8vIGNoZWNrIHRvIHNlZSBpZiB0aGVyZSBpcyBhbm90aGVyIGVx
dWl2YWxlbnQgaW5oZXJpdGVkTWV0aG9kIGFscmVhZHkgYWRkZWQKKwkJSXRlcmF0b3IgZmlyc3RP
ZlRoZVBhaXJJdGVyYXRvciA9IHRoaXMuc3ludGhldGljc1tTb3VyY2VUeXBlQmluZGluZy5NRVRI
T0RfUEFJUl9CUklER0VdLmtleVNldCgpLml0ZXJhdG9yKCk7CisJCXdoaWxlIChmaXJzdE9mVGhl
UGFpckl0ZXJhdG9yLmhhc05leHQoKSkgeworCQkJT2JqZWN0IHN5bnRoZXRpYyA9IGZpcnN0T2ZU
aGVQYWlySXRlcmF0b3IubmV4dCgpOworCQkJaWYgKHN5bnRoZXRpYyBpbnN0YW5jZW9mIE1ldGhv
ZEJpbmRpbmcpIHsKKwkJCQlNZXRob2RCaW5kaW5nIGZpcnN0T2ZUaGVwYWlyID0gKE1ldGhvZEJp
bmRpbmcpIHN5bnRoZXRpYzsKKwkJCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoaW5wdXQuc2Vs
ZWN0b3IsIGZpcnN0T2ZUaGVwYWlyLnNlbGVjdG9yKQorCQkJCQkJJiYgVHlwZUJpbmRpbmcuZXF1
YWxzRXF1YWxzKGlucHV0LnJldHVyblR5cGUuZXJhc3VyZSgpLCBmaXJzdE9mVGhlcGFpci5yZXR1
cm5UeXBlLmVyYXN1cmUoKSkKKwkJCQkJCSYmIGlucHV0LmFyZVBhcmFtZXRlckVyYXN1cmVzRXF1
YWwoZmlyc3RPZlRoZXBhaXIpKSB7CisJCQkJCU9iamVjdCBoTWFwID0gdGhpcy5zeW50aGV0aWNz
W1NvdXJjZVR5cGVCaW5kaW5nLk1FVEhPRF9QQUlSX0JSSURHRV0uZ2V0KHN5bnRoZXRpYyk7CisJ
CQkJCWlmIChoTWFwIGluc3RhbmNlb2YgSGFzaE1hcCkgeworCQkJCQkJSXRlcmF0b3Igc2Vjb25k
T2ZUaGVQYWlySXRlcmF0b3IgPSAoKEhhc2hNYXApaE1hcCkua2V5U2V0KCkuaXRlcmF0b3IoKTsK
KwkJCQkJCXdoaWxlIChzZWNvbmRPZlRoZVBhaXJJdGVyYXRvci5oYXNOZXh0KCkpIHsKKwkJCQkJ
CQlPYmplY3Qgc3ludGhldGljMSA9IHNlY29uZE9mVGhlUGFpckl0ZXJhdG9yLm5leHQoKTsKKwkJ
CQkJCQlpZiAoc3ludGhldGljMSBpbnN0YW5jZW9mIE1ldGhvZEJpbmRpbmcpIHsKKwkJCQkJCQkJ
TWV0aG9kQmluZGluZyBzZWNvbmRPZlRoZXBhaXIgPSAoTWV0aG9kQmluZGluZykgc3ludGhldGlj
MTsKKwkJCQkJCQkJaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKHRhcmdldE1ldGhvZC5zZWxlY3Rv
ciwgc2Vjb25kT2ZUaGVwYWlyLnNlbGVjdG9yKQorCQkJCQkJCQkJCSYmIFR5cGVCaW5kaW5nLmVx
dWFsc0VxdWFscyh0YXJnZXRNZXRob2QucmV0dXJuVHlwZS5lcmFzdXJlKCksIHNlY29uZE9mVGhl
cGFpci5yZXR1cm5UeXBlLmVyYXN1cmUoKSkKKwkJCQkJCQkJCQkmJiB0YXJnZXRNZXRob2QuYXJl
UGFyYW1ldGVyRXJhc3VyZXNFcXVhbChzZWNvbmRPZlRoZXBhaXIpKSB7CisJCQkJCQkJCQlTeW50
aGV0aWNNZXRob2RCaW5kaW5nIFtdIHNtID0gKFN5bnRoZXRpY01ldGhvZEJpbmRpbmdbXSkgKChI
YXNoTWFwKWhNYXApLmdldChzeW50aGV0aWMxKTsKKwkJCQkJCQkJCXJldHVybiBzbVsxXTsKKwkJ
CQkJCQkJfQorCQkJCQkJCX0KKwkJCQkJCX0KKwkJCQkJfQorCQkJCX0KKwkJCX0KKwkJfQorCX0K
KworCVN5bnRoZXRpY01ldGhvZEJpbmRpbmcgYWNjZXNzTWV0aG9kID0gbnVsbDsKKwlIYXNoTWFw
IGhNYXAgPSAoSGFzaE1hcCkgdGhpcy5zeW50aGV0aWNzW1NvdXJjZVR5cGVCaW5kaW5nLk1FVEhP
RF9QQUlSX0JSSURHRV0uZ2V0KGlucHV0KTsKKwlpZiAoaE1hcCA9PSBudWxsKSB7CisJCXRoaXMu
c3ludGhldGljc1tTb3VyY2VUeXBlQmluZGluZy5NRVRIT0RfUEFJUl9CUklER0VdLnB1dChpbnB1
dCwgaE1hcCA9IG5ldyBIYXNoTWFwKDUpKTsKKwl9CisJU3ludGhldGljTWV0aG9kQmluZGluZ1td
IGFjY2Vzc29ycyA9IChTeW50aGV0aWNNZXRob2RCaW5kaW5nW10pIGhNYXAuZ2V0KHRhcmdldE1l
dGhvZCk7CisJY2hhciBbXSBzZWxlY3RvciA9IENoYXJPcGVyYXRpb24uY29uY2F0KFR5cGVDb25z
dGFudHMuQU5PTllNT1VTX01FVEhPRCwgSW50ZWdlci50b1N0cmluZyh0aGlzLmxhbWJkYU9yZGlu
YWwrKykudG9DaGFyQXJyYXkoKSk7CisJaWYgKGFjY2Vzc29ycyA9PSBudWxsKSB7CisJCWFjY2Vz
c01ldGhvZCA9IG5ldyBTeW50aGV0aWNNZXRob2RCaW5kaW5nKGlucHV0LCB0YXJnZXRNZXRob2Qs
IHNlbGVjdG9yLCB0aGlzLCBpc1N1cGVyQWNjZXNzKTsKKwkJaE1hcC5wdXQodGFyZ2V0TWV0aG9k
LCBhY2Nlc3NvcnMgPSBuZXcgU3ludGhldGljTWV0aG9kQmluZGluZ1syXSk7CisJCWFjY2Vzc29y
c1sxXSA9IGFjY2Vzc01ldGhvZDsKKwl9IGVsc2UgeworCQlpZiAoKGFjY2Vzc01ldGhvZCA9IGFj
Y2Vzc29yc1sxXSkgPT0gbnVsbCkgeworCQkJYWNjZXNzTWV0aG9kID0gbmV3IFN5bnRoZXRpY01l
dGhvZEJpbmRpbmcoaW5wdXQsIHRhcmdldE1ldGhvZCwgc2VsZWN0b3IsIHRoaXMsIGlzU3VwZXJB
Y2Nlc3MpOworCQkJYWNjZXNzb3JzWzFdID0gYWNjZXNzTWV0aG9kOworCQl9CisJfQorCXJldHVy
biBhY2Nlc3NNZXRob2Q7Cit9CisKIGJvb2xlYW4gYXJlRmllbGRzSW5pdGlhbGl6ZWQoKSB7CiAJ
aWYgKCFpc1Byb3RvdHlwZSgpKQogCQlyZXR1cm4gdGhpcy5wcm90b3R5cGUuYXJlRmllbGRzSW5p
dGlhbGl6ZWQoKTsKIAlyZXR1cm4gdGhpcy5maWVsZHMgIT0gQmluZGluZy5VTklOSVRJQUxJWkVE
X0ZJRUxEUzsKIH0KQEAgLTIyODEsMzEgKzIzNDQsNTggQEAKIHB1YmxpYyBTeW50aGV0aWNNZXRo
b2RCaW5kaW5nW10gc3ludGhldGljTWV0aG9kcygpIHsKIAkKIAlpZiAoIWlzUHJvdG90eXBlKCkp
IHRocm93IG5ldyBJbGxlZ2FsU3RhdGVFeGNlcHRpb24oKTsKIAkKIAlpZiAodGhpcy5zeW50aGV0
aWNzID09IG51bGwgCi0JCQl8fCB0aGlzLnN5bnRoZXRpY3NbU291cmNlVHlwZUJpbmRpbmcuTUVU
SE9EX0VNVUxdID09IG51bGwgCi0JCQl8fCB0aGlzLnN5bnRoZXRpY3NbU291cmNlVHlwZUJpbmRp
bmcuTUVUSE9EX0VNVUxdLnNpemUoKSA9PSAwKSB7CisJCQl8fCAoKCB0aGlzLnN5bnRoZXRpY3Nb
U291cmNlVHlwZUJpbmRpbmcuTUVUSE9EX0VNVUxdID09IG51bGwgCisJCQkgICB8fCB0aGlzLnN5
bnRoZXRpY3NbU291cmNlVHlwZUJpbmRpbmcuTUVUSE9EX0VNVUxdLnNpemUoKSA9PSAwKQorCQkJ
ICAmJiAodGhpcy5zeW50aGV0aWNzW1NvdXJjZVR5cGVCaW5kaW5nLk1FVEhPRF9QQUlSX0JSSURH
RV0gPT0gbnVsbAorCQkJICAgfHwgdGhpcy5zeW50aGV0aWNzW1NvdXJjZVR5cGVCaW5kaW5nLk1F
VEhPRF9QQUlSX0JSSURHRV0uc2l6ZSgpID09IDApKSkgewogCQlyZXR1cm4gbnVsbDsKIAl9CiAJ
Ly8gZGlmZmljdWx0IHRvIGNvbXB1dGUgc2l6ZSB1cCBmcm9udCBiZWNhdXNlIG9mIHRoZSBlbWJl
ZGRlZCBhcnJheXMgc28gYXNzdW1lIHRoZXJlIGlzIG9ubHkgMQogCWludCBpbmRleCA9IDA7CiAJ
U3ludGhldGljTWV0aG9kQmluZGluZ1tdIGJpbmRpbmdzID0gbmV3IFN5bnRoZXRpY01ldGhvZEJp
bmRpbmdbMV07Ci0JSXRlcmF0b3IgbWV0aG9kQXJyYXlJdGVyYXRvciA9IHRoaXMuc3ludGhldGlj
c1tTb3VyY2VUeXBlQmluZGluZy5NRVRIT0RfRU1VTF0udmFsdWVzKCkuaXRlcmF0b3IoKTsKLQl3
aGlsZSAobWV0aG9kQXJyYXlJdGVyYXRvci5oYXNOZXh0KCkpIHsKLQkJU3ludGhldGljTWV0aG9k
QmluZGluZ1tdIG1ldGhvZEFjY2Vzc29ycyA9IChTeW50aGV0aWNNZXRob2RCaW5kaW5nW10pIG1l
dGhvZEFycmF5SXRlcmF0b3IubmV4dCgpOwotCQlmb3IgKGludCBpID0gMCwgbWF4ID0gbWV0aG9k
QWNjZXNzb3JzLmxlbmd0aDsgaSA8IG1heDsgaSsrKSB7Ci0JCQlpZiAobWV0aG9kQWNjZXNzb3Jz
W2ldICE9IG51bGwpIHsKLQkJCQlpZiAoaW5kZXgrMSA+IGJpbmRpbmdzLmxlbmd0aCkgewotCQkJ
CQlTeXN0ZW0uYXJyYXljb3B5KGJpbmRpbmdzLCAwLCAoYmluZGluZ3MgPSBuZXcgU3ludGhldGlj
TWV0aG9kQmluZGluZ1tpbmRleCArIDFdKSwgMCwgaW5kZXgpOworCWlmICh0aGlzLnN5bnRoZXRp
Y3NbU291cmNlVHlwZUJpbmRpbmcuTUVUSE9EX0VNVUxdICE9IG51bGwpIHsKKwkJSXRlcmF0b3Ig
bWV0aG9kQXJyYXlJdGVyYXRvciA9IHRoaXMuc3ludGhldGljc1tTb3VyY2VUeXBlQmluZGluZy5N
RVRIT0RfRU1VTF0udmFsdWVzKCkuaXRlcmF0b3IoKTsKKwkJd2hpbGUgKG1ldGhvZEFycmF5SXRl
cmF0b3IuaGFzTmV4dCgpKSB7CisJCQlTeW50aGV0aWNNZXRob2RCaW5kaW5nW10gbWV0aG9kQWNj
ZXNzb3JzID0gKFN5bnRoZXRpY01ldGhvZEJpbmRpbmdbXSkgbWV0aG9kQXJyYXlJdGVyYXRvci5u
ZXh0KCk7CisJCQlmb3IgKGludCBpID0gMCwgbWF4ID0gbWV0aG9kQWNjZXNzb3JzLmxlbmd0aDsg
aSA8IG1heDsgaSsrKSB7CisJCQkJaWYgKG1ldGhvZEFjY2Vzc29yc1tpXSAhPSBudWxsKSB7CisJ
CQkJCWlmIChpbmRleCsxID4gYmluZGluZ3MubGVuZ3RoKSB7CisJCQkJCQlTeXN0ZW0uYXJyYXlj
b3B5KGJpbmRpbmdzLCAwLCAoYmluZGluZ3MgPSBuZXcgU3ludGhldGljTWV0aG9kQmluZGluZ1tp
bmRleCArIDFdKSwgMCwgaW5kZXgpOworCQkJCQl9CisJCQkJCWJpbmRpbmdzW2luZGV4KytdID0g
bWV0aG9kQWNjZXNzb3JzW2ldOyAKIAkJCQl9Ci0JCQkJYmluZGluZ3NbaW5kZXgrK10gPSBtZXRo
b2RBY2Nlc3NvcnNbaV07IAorCQkJfQorCQl9CisJfQorCWlmICh0aGlzLnN5bnRoZXRpY3NbU291
cmNlVHlwZUJpbmRpbmcuTUVUSE9EX1BBSVJfQlJJREdFXSAhPSBudWxsKSB7CisJCUl0ZXJhdG9y
IHRvcEl0ZXJhdG9yID0gdGhpcy5zeW50aGV0aWNzW1NvdXJjZVR5cGVCaW5kaW5nLk1FVEhPRF9Q
QUlSX0JSSURHRV0udmFsdWVzKCkuaXRlcmF0b3IoKTsKKwkJd2hpbGUgKHRvcEl0ZXJhdG9yLmhh
c05leHQoKSkgeworCQkJT2JqZWN0IHRlbXAgPSB0b3BJdGVyYXRvci5uZXh0KCk7CisJCQlpZiAo
dGVtcCBpbnN0YW5jZW9mIEhhc2hNYXApIHsKKwkJCQlJdGVyYXRvciBuZXh0SXRlcmF0b3IgPSAo
KEhhc2hNYXApdGVtcCkudmFsdWVzKCkuaXRlcmF0b3IoKTsKKwkJCQl3aGlsZSAobmV4dEl0ZXJh
dG9yLmhhc05leHQoKSkgeworCQkJCQlTeW50aGV0aWNNZXRob2RCaW5kaW5nW10gbWV0aG9kQWNj
ZXNzb3JzID0gKFN5bnRoZXRpY01ldGhvZEJpbmRpbmdbXSkgbmV4dEl0ZXJhdG9yLm5leHQoKTsK
KwkJCQkJZm9yIChpbnQgaSA9IDAsIG1heCA9IG1ldGhvZEFjY2Vzc29ycy5sZW5ndGg7IGkgPCBt
YXg7IGkrKykgeworCQkJCQkJaWYgKG1ldGhvZEFjY2Vzc29yc1tpXSAhPSBudWxsKSB7CisJCQkJ
CQkJaWYgKGluZGV4KzEgPiBiaW5kaW5ncy5sZW5ndGgpIHsKKwkJCQkJCQkJU3lzdGVtLmFycmF5
Y29weShiaW5kaW5ncywgMCwgKGJpbmRpbmdzID0gbmV3IFN5bnRoZXRpY01ldGhvZEJpbmRpbmdb
aW5kZXggKyAxXSksIDAsIGluZGV4KTsKKwkJCQkJCQl9CisJCQkJCQkJYmluZGluZ3NbaW5kZXgr
K10gPSBtZXRob2RBY2Nlc3NvcnNbaV07IAorCQkJCQkJfQorCQkJCQl9CisJCQkJfQogCQkJfQog
CQl9CiAJfQogCS8vIHNvcnQgdGhlbSBpbiBhY2NvcmRpbmcgdG8gdGhlaXIgb3duIGluZGV4ZXMK
IAlpbnQgbGVuZ3RoOworCWlmIChiaW5kaW5ncy5sZW5ndGggPT0gMSAmJiBiaW5kaW5nc1swXSA9
PSBudWxsKSB7CisJCXJldHVybiBudWxsOworCX0KIAlTeW50aGV0aWNNZXRob2RCaW5kaW5nW10g
c29ydGVkQmluZGluZ3MgPSBuZXcgU3ludGhldGljTWV0aG9kQmluZGluZ1tsZW5ndGggPSBiaW5k
aW5ncy5sZW5ndGhdOwogCWZvciAoaW50IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspewogCQlTeW50
aGV0aWNNZXRob2RCaW5kaW5nIGJpbmRpbmcgPSBiaW5kaW5nc1tpXTsKIAkJc29ydGVkQmluZGlu
Z3NbYmluZGluZy5pbmRleF0gPSBiaW5kaW5nOwogCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29r
dXAvU3ludGhldGljTWV0aG9kQmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9TeW50aGV0aWNN
ZXRob2RCaW5kaW5nLmphdmEKaW5kZXggZDExODA1Yi4uNGFhZDJkZiAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2xvb2t1cC9TeW50aGV0aWNNZXRob2RCaW5kaW5nLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1
cC9TeW50aGV0aWNNZXRob2RCaW5kaW5nLmphdmEKQEAgLTI5LDEwICsyOSwxMSBAQAogCXB1Ymxp
YyBGaWVsZEJpbmRpbmcgdGFyZ2V0UmVhZEZpZWxkOwkJLy8gcmVhZCBhY2Nlc3MgdG8gYSBmaWVs
ZAogCXB1YmxpYyBGaWVsZEJpbmRpbmcgdGFyZ2V0V3JpdGVGaWVsZDsJCS8vIHdyaXRlIGFjY2Vz
cyB0byBhIGZpZWxkCiAJcHVibGljIE1ldGhvZEJpbmRpbmcgdGFyZ2V0TWV0aG9kOwkJCS8vIG1l
dGhvZCBvciBjb25zdHJ1Y3RvcgogCXB1YmxpYyBUeXBlQmluZGluZyB0YXJnZXRFbnVtVHlwZTsg
CQkJLy8gZW51bSB0eXBlCiAJcHVibGljIExhbWJkYUV4cHJlc3Npb24gbGFtYmRhOworCXB1Ymxp
YyBNZXRob2RCaW5kaW5nIGlucHV0TWV0aG9kID0gbnVsbDsKIAkKIAlwdWJsaWMgaW50IHB1cnBv
c2U7CiAKIAkvLyBmaWVsZHMgdXNlZCB0byBnZW5lcmF0ZSBlbnVtIGNvbnN0YW50cyB3aGVuIHRv
byBtYW55CiAJcHVibGljIGludCBzdGFydEluZGV4OwpAQCAtNTMsMTQgKzU0LDYxIEBACiAJcHVi
bGljIHN0YXRpYyBmaW5hbCBpbnQgTGFtYmRhTWV0aG9kID0gMTM7IC8vIExhbWJkYSBib2R5IGVt
aXR0ZWQgYXMgYSBtZXRob2QuCiAJcHVibGljIGZpbmFsIHN0YXRpYyBpbnQgQXJyYXlDb25zdHJ1
Y3RvciA9IDE0OyAvLyBYW106Om5ldwogCXB1YmxpYyBzdGF0aWMgZmluYWwgaW50IEFycmF5Q2xv
bmUgPSAxNTsgLy8gWFtdOjpjbG9uZQogICAgIHB1YmxpYyBzdGF0aWMgZmluYWwgaW50IEZhY3Rv
cnlNZXRob2QgPSAxNjsgLy8gZm9yIGluZHkgY2FsbCB0byBwcml2YXRlIGNvbnN0cnVjdG9yLgog
ICAgIHB1YmxpYyBzdGF0aWMgZmluYWwgaW50IERlc2VyaWFsaXplTGFtYmRhID0gMTc7IC8vIEZv
ciBzdXBwb3J0aW5nIGxhbWJkYSBkZXNlcmlhbGl6YXRpb24uCisgICAgcHVibGljIHN0YXRpYyBm
aW5hbCBpbnQgQ2hhbm5lbGlzZVBhcmFtc1RvVmFyQXJncyA9IDE4OworICAgIAorICAgIHB1Ymxp
YyBzdGF0aWMgaW50IE5PVF9CT09UU1RSQVBQRUQgPSAtOTk5OTsKICAgICAKIAlwdWJsaWMgaW50
IHNvdXJjZVN0YXJ0ID0gMDsgLy8gc3RhcnQgcG9zaXRpb24gb2YgdGhlIG1hdGNoaW5nIGRlY2xh
cmF0aW9uCiAJcHVibGljIGludCBpbmRleDsgLy8gdXNlZCBmb3Igc29ydGluZyBhY2Nlc3MgbWV0
aG9kcyBpbiB0aGUgY2xhc3MgZmlsZQogCXB1YmxpYyBpbnQgZmFrZVBhZGRlZFBhcmFtZXRlcnMg
PSAwOyAvLyBhZGRlZCBpbiBzeW50aGV0aWMgY29uc3RydWN0b3IgdG8gYXZvaWQgbmFtZSBjbGFz
aC4KKwlwdWJsaWMgYm9vbGVhbiBpc1N1cGVyQWNjZXNzID0gZmFsc2U7CisJcHVibGljIGludCBp
bnZva2VEeW5hbWljTnVtYmVyID0gTk9UX0JPT1RTVFJBUFBFRDsKKworCXB1YmxpYyBTeW50aGV0
aWNNZXRob2RCaW5kaW5nKE1ldGhvZEJpbmRpbmcgaW5wdXRNZXRob2QsIE1ldGhvZEJpbmRpbmcg
dGFyZ2V0TWV0aG9kLCBjaGFyIFtdIHNlbGVjdG9yLCBTb3VyY2VUeXBlQmluZGluZyBkZWNsYXJp
bmdDbGFzcywgYm9vbGVhbiBpc1N1cGVyQWNjZXNzKSB7CisJICAgIHRoaXMuZGVjbGFyaW5nQ2xh
c3MgPSBkZWNsYXJpbmdDbGFzczsKKwkJdGhpcy5wdXJwb3NlID0gU3ludGhldGljTWV0aG9kQmlu
ZGluZy5DaGFubmVsaXNlUGFyYW1zVG9WYXJBcmdzOworCSAgICB0aGlzLm1vZGlmaWVycyA9ICh0
YXJnZXRNZXRob2QubW9kaWZpZXJzIHwgQ2xhc3NGaWxlQ29uc3RhbnRzLkFjY0JyaWRnZSB8IENs
YXNzRmlsZUNvbnN0YW50cy5BY2NTeW50aGV0aWMpICYgfihDbGFzc0ZpbGVDb25zdGFudHMuQWNj
U3luY2hyb25pemVkIHwgQ2xhc3NGaWxlQ29uc3RhbnRzLkFjY0Fic3RyYWN0IHwgQ2xhc3NGaWxl
Q29uc3RhbnRzLkFjY05hdGl2ZSAgfCBDbGFzc0ZpbGVDb25zdGFudHMuQWNjRmluYWwgfCBFeHRy
YUNvbXBpbGVyTW9kaWZpZXJzLkFjY0dlbmVyaWNTaWduYXR1cmUgfCBDbGFzc0ZpbGVDb25zdGFu
dHMuQWNjVmFyYXJncyk7CisJCWlmIChpc1N1cGVyQWNjZXNzKSB7CisJCQl0aGlzLm1vZGlmaWVy
cyB8PSBDbGFzc0ZpbGVDb25zdGFudHMuQWNjUHJpdmF0ZTsKKwkJfSBlbHNlIHsKKwkJCXRoaXMu
bW9kaWZpZXJzIHw9IENsYXNzRmlsZUNvbnN0YW50cy5BY2NTdGF0aWM7CisJCX0KKwkJaWYgKHRh
cmdldE1ldGhvZC5pc1N0YXRpYygpKSB7CisJCQl0aGlzLm1vZGlmaWVycyB8PSBDbGFzc0ZpbGVD
b25zdGFudHMuQWNjU3RhdGljOworCQl9CisJICAgIHRoaXMudGFnQml0cyB8PSAoVGFnQml0cy5B
bm5vdGF0aW9uUmVzb2x2ZWQgfCBUYWdCaXRzLkRlcHJlY2F0ZWRBbm5vdGF0aW9uUmVzb2x2ZWQp
OworCSAgICB0aGlzLnJldHVyblR5cGUgPSBpbnB1dE1ldGhvZC5yZXR1cm5UeXBlOworCSAgICB0
aGlzLnRocm93bkV4Y2VwdGlvbnMgPSBpbnB1dE1ldGhvZC50aHJvd25FeGNlcHRpb25zOworCSAg
ICB0aGlzLnRhcmdldE1ldGhvZCA9IHRhcmdldE1ldGhvZDsKKwkgICAgdGhpcy5pc1N1cGVyQWNj
ZXNzID0gaXNTdXBlckFjY2VzczsKKwkJU3ludGhldGljTWV0aG9kQmluZGluZ1tdIGtub3duQWNj
ZXNzTWV0aG9kcyA9IGRlY2xhcmluZ0NsYXNzLnN5bnRoZXRpY01ldGhvZHMoKTsKKwkJaW50IG1l
dGhvZElkID0ga25vd25BY2Nlc3NNZXRob2RzID09IG51bGwgPyAwIDoga25vd25BY2Nlc3NNZXRo
b2RzLmxlbmd0aDsKKwkJdGhpcy5pbmRleCA9IG1ldGhvZElkOworCQl0aGlzLmlucHV0TWV0aG9k
ID0gaW5wdXRNZXRob2Q7CisJCXRoaXMuc2VsZWN0b3IgPSBzZWxlY3RvcjsKKwkJaW50IGxlbmd0
aCA9IGlucHV0TWV0aG9kLnBhcmFtZXRlcnMubGVuZ3RoOworCQlpZiAoIXRhcmdldE1ldGhvZC5p
c1N0YXRpYygpICYmICF0YXJnZXRNZXRob2QuaXNDb25zdHJ1Y3RvcigpICYmICFpc1N1cGVyQWNj
ZXNzKSB7CisJCQlsZW5ndGgrKzsKKwkJfQorCQl0aGlzLnBhcmFtZXRlcnMgPSBuZXcgVHlwZUJp
bmRpbmdbbGVuZ3RoXTsKKwkJaW50IGN1cnJJbmR4ID0gMDsKKwkJaWYgKCF0YXJnZXRNZXRob2Qu
aXNTdGF0aWMoKSAmJiAhdGFyZ2V0TWV0aG9kLmlzQ29uc3RydWN0b3IoKSAmJiAhaXNTdXBlckFj
Y2VzcykgeworCQkJdGhpcy5wYXJhbWV0ZXJzW2N1cnJJbmR4KytdID0gdGFyZ2V0TWV0aG9kLmRl
Y2xhcmluZ0NsYXNzOworCQl9CisJCWludCBqID0gdGFyZ2V0TWV0aG9kLnBhcmFtZXRlcnMubGVu
Z3RoIC0gMSArIGN1cnJJbmR4OworCQlpbnQgayA9IDA7CisJCXdoaWxlIChjdXJySW5keCA8IGop
IHsKKwkJCXRoaXMucGFyYW1ldGVyc1tjdXJySW5keCsrXSA9IHRhcmdldE1ldGhvZC5wYXJhbWV0
ZXJzW2srK107CisJCX0KKwkJVHlwZUJpbmRpbmcgdGIgPSAoKEFycmF5QmluZGluZyl0YXJnZXRN
ZXRob2QucGFyYW1ldGVyc1t0YXJnZXRNZXRob2QucGFyYW1ldGVycy5sZW5ndGggLSAxXSkuZWxl
bWVudHNUeXBlKCk7CisJCXdoaWxlIChjdXJySW5keCA8IGxlbmd0aCkgeworCQkJdGhpcy5wYXJh
bWV0ZXJzW2N1cnJJbmR4KytdID0gdGI7CisJCX0KKwl9CiAKIAlwdWJsaWMgU3ludGhldGljTWV0
aG9kQmluZGluZyhGaWVsZEJpbmRpbmcgdGFyZ2V0RmllbGQsIGJvb2xlYW4gaXNSZWFkQWNjZXNz
LCBib29sZWFuIGlzU3VwZXJBY2Nlc3MsIFJlZmVyZW5jZUJpbmRpbmcgZGVjbGFyaW5nQ2xhc3Mp
IHsKIAogCQl0aGlzLm1vZGlmaWVycyA9IENsYXNzRmlsZUNvbnN0YW50cy5BY2NEZWZhdWx0IHwg
Q2xhc3NGaWxlQ29uc3RhbnRzLkFjY1N0YXRpYyB8IENsYXNzRmlsZUNvbnN0YW50cy5BY2NTeW50
aGV0aWM7CiAJCXRoaXMudGFnQml0cyB8PSAoVGFnQml0cy5Bbm5vdGF0aW9uUmVzb2x2ZWQgfCBU
YWdCaXRzLkRlcHJlY2F0ZWRBbm5vdGF0aW9uUmVzb2x2ZWQpOw==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>239430</attachid>
            <date>2014-01-29 09:31:00 -0500</date>
            <delta_ts>2014-01-30 02:23:08 -0500</delta_ts>
            <desc>patch</desc>
            <filename>Bug-406744--full--7.patch</filename>
            <type>text/plain</type>
            <size>48512</size>
            <attacher name="ANIRBAN CHAKRABORTY">anchakrk</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0xhbWJkYUV4cHJlc3Np
b25zVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTGFtYmRhRXhwcmVz
c2lvbnNUZXN0LmphdmEKaW5kZXggN2RkMzRhMy4uNzA3ZGQ4NSAxMDA2NDQKLS0tIGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTGFtYmRhRXhwcmVzc2lvbnNUZXN0LmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTGFtYmRhRXhwcmVzc2lvbnNUZXN0LmphdmEK
QEAgLTI0NTAsMTEgKzI0NTAsMTEgQEAKIAkJfSwKIAkJIjkiKTsKIH0KIC8vIEJ1ZyA0MDY3NDQg
LSBbMS44XVtjb21waWxlcl1bY29kZWdlbl0gTGFtYmRhQ29udmVyc2lvbkV4Y2VwdGlvbiBzZWVu
IHdoZW4gbWV0aG9kIHJlZmVyZW5jZSB0YXJnZXRzIGEgdmFyYXJncyBtZXRob2QuCiAvLyBodHRw
czovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDA2NzQ0Ci1wdWJsaWMg
dm9pZCBfdGVzdDQwNjc0NGEoKSB7CitwdWJsaWMgdm9pZCB0ZXN0NDA2NzQ0YSgpIHsKIAl0aGlz
LnJ1bkNvbmZvcm1UZXN0KAogCQkJbmV3IFN0cmluZ1tdIHsKIAkJCQkiWC5qYXZhIiwKIAkJCQki
aW50ZXJmYWNlIEkge1xuIiArCiAJCQkJIgl2b2lkIGZvbyhJbnRlZ2VyIGExLCBJbnRlZ2VyIGEy
LCBTdHJpbmcgYTMpO1xuIiArCkBAIC0yNDc5LDExICsyNDc5LDExIEBACiAJCQkiMTBcbiIgKwog
CQkJIjIwXG4iICsKIAkJCSIxMCwgMjAiCiAJCQkpOwogfQotcHVibGljIHZvaWQgX3Rlc3Q0MDY3
NDRiKCkgeworcHVibGljIHZvaWQgdGVzdDQwNjc0NGIoKSB7CiAJdGhpcy5ydW5Db25mb3JtVGVz
dCgKIAkJCW5ldyBTdHJpbmdbXSB7CiAJCQkJIlguamF2YSIsCiAJCQkJImludGVyZmFjZSBJIHtc
biIgKwogCQkJCSIJaW50IGZvbyhJbnRlZ2VyIGExLCBJbnRlZ2VyIGEyLCBTdHJpbmcgYTMpO1xu
IiArCkBAIC0yNTA5LDExICsyNTA5LDExIEBACiAJCQkiMTBcbiIgKwogCQkJIjIwXG4iICsKIAkJ
CSIxMCwgMjAiCiAJCQkpOwogfQotcHVibGljIHZvaWQgX3Rlc3Q0MDY3NDRjKCkgeworcHVibGlj
IHZvaWQgdGVzdDQwNjc0NGMoKSB7CiAJdGhpcy5ydW5Db25mb3JtVGVzdCgKIAkJCW5ldyBTdHJp
bmdbXSB7CiAJCQkJIlguamF2YSIsCiAJCQkJImludGVyZmFjZSBJIHtcbiIgKwogCQkJCSIJdm9p
ZCBmb28oSW50ZWdlciBhMSwgSW50ZWdlciBhMiwgU3RyaW5nIGEzKTtcbiIgKwpAQCAtMjU0Miwx
MCArMjU0Miw1MzEgQEAKIAkJCSIxMFxuIiArCiAJCQkiMjBcbiIgKwogCQkJIjEwLCAyMCIKIAkJ
CSk7CiB9CitwdWJsaWMgdm9pZCB0ZXN0NDA2NzQ0ZCgpIHsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0
KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiWC5qYXZhIiwKKwkJCQkiaW50ZXJmYWNlIEkge1xu
IiArCisJCQkJIgl2b2lkIGZvbyhpbnQgYTEsIEludGVnZXIgYTIsIFN0cmluZyBhMyk7XG4iICsK
KwkJCQkifVxuIiArCisJCQkJImludGVyZmFjZSBZIHtcbiIgKworCQkJCSIJc3RhdGljIHZvaWQg
bShmbG9hdCBhMSwgT2JqZWN0Li4uIHJlc3QpIHtcbiIgKyAKKwkJCQkiCQlTeXN0ZW0ub3V0LnBy
aW50bG4oYTEpO1xuIiArCisJCQkJIgkJcHJpbnQocmVzdCk7XG4iICsKKwkJCQkiCX1cbiIgKwor
CQkJCSIJc3RhdGljIHZvaWQgcHJpbnQgKE9iamVjdCBbXSBvKSB7XG4iICsKKwkJCQkiCQlmb3Ig
KGludCBpID0gMDsgaSA8IG8ubGVuZ3RoOyBpKyspXG4iICsKKwkJCQkiCQkJU3lzdGVtLm91dC5w
cmludGxuKG9baV0pO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxuIiArCisJCQkJInB1Ymxp
YyBpbnRlcmZhY2UgWCBleHRlbmRzIFl7XG4iICsKKwkJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBt
YWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCQkiCQlJIGkgPSBZOjptO1xuIiArCisJCQkJ
IgkJaS5mb28oMTAsIDIwLCBcIjEwLCAyMFwiKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn1c
biIsCisJCQl9LAorCQkJIjEwLjBcbiIgKworCQkJIjIwXG4iICsKKwkJCSIxMCwgMjAiCisJCQkp
OworfQorcHVibGljIHZvaWQgdGVzdDQwNjc0NGUoKSB7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgK
KwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJIlguamF2YSIsCisJCQkJImludGVyZmFjZSBJIHtcbiIg
KworCQkJCSIJU3RyaW5nIG1ldGhvZChpbnQgYSk7XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNs
YXNzIEMge1xuIiArCisJCQkJIglzdGF0aWMgU3RyaW5nIGZvbyhJbnRlZ2VyLi4uIGkpIHtcbiIg
KworCQkJCSIJCXJldHVybiBcImZvb1wiO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkiCXN0YXRp
YyBTdHJpbmcgZ29vKEludGVnZXIgYmksIEludGVnZXIuLi4gaSkge1xuIiArCisJCQkJIgkJcmV0
dXJuIFwiYmFyXCI7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJcHVibGljIHZvaWQgZm9vKCkg
e1xuIiArCisJCQkJIgkJSSBpO1xuIiArCisJCQkJIgkJaSA9IEM6OmZvbztcbiIgKworCQkJCSIJ
CVN5c3RlbS5vdXQucHJpbnRsbihpLm1ldGhvZCgwKSk7XG4iICsKKwkJCQkiCQlpID0gQzo6Z29v
O1xuIiArCisJCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKGkubWV0aG9kKDApKTtcbiIgKworCQkJ
CSIJfVxuIiArCisJCQkJIn1cbiIgKworCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCQki
CXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBhcmd2W10pICAge1xuIiArCisJCQkJIgkJ
bmV3IEMoKS5mb28oKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn1cbiIsCisJCQl9LAorCQkJ
ImZvb1xuIiArCisJCQkiYmFyIgorCQkJKTsKK30KK3B1YmxpYyB2b2lkIHRlc3Q0MDY3NDRmKCkg
eworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEi
LAorCQkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCQkiCXZvaWQgZm9vKEludGVnZXIgYTEsIElu
dGVnZXIgYTIsIFN0cmluZyBhMyk7XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNsYXNzIFkge1xu
IiArCisJCQkJIgl2b2lkIG0oTnVtYmVyIGExLCBPYmplY3QuLi4gcmVzdCkge1xuIiArIAorCQkJ
CSIJCVN5c3RlbS5vdXQucHJpbnRsbihhMSk7XG4iICsKKwkJCQkiCQlwcmludChyZXN0KTtcbiIg
KworCQkJCSIJfVxuIiArCisJCQkJIglzdGF0aWMgdm9pZCBwcmludCAoT2JqZWN0IFtdIG8pIHtc
biIgKworCQkJCSIJCWZvciAoaW50IGkgPSAwOyBpIDwgby5sZW5ndGg7IGkrKylcbiIgKworCQkJ
CSIJCQlTeXN0ZW0ub3V0LnByaW50bG4ob1tpXSk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9
XG4iICsKKwkJCQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBZIHtcbiIgKworCQkJCSIJc3RhdGlj
IHZvaWQgcHJpbnQgKE9iamVjdCBbXSBvKSB7XG4iICsKKwkJCQkiCQlmb3IgKGludCBpID0gMDsg
aSA8IG8ubGVuZ3RoOyBpKyspXG4iICsKKwkJCQkiCQkJU3lzdGVtLm91dC5wcmludGxuKG9baV0p
O1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmlu
ZyBbXSBhcmdzKSB7XG4iICsKKwkJCQkiCQluZXcgWCgpLmZvbygpO1xuIiArCisJCQkJIgl9XG4i
ICsKKwkJCQkiCXZvaWQgZm9vKCkge1xuIiArIAorCQkJCSIJCUkgaSA9IHN1cGVyOjptO1xuIiAr
CisJCQkJIgkJaS5mb28oMTAsIDIwLCBcIjEwLCAyMFwiKTtcbiIgKworCQkJCSIJfVxuIiArCisJ
CQkJIn1cbiIsCisJCQl9LAorCQkJIjEwXG4iICsKKwkJCSIyMFxuIiArCisJCQkiMTAsIDIwIgor
CQkJKTsKK30KK3B1YmxpYyB2b2lkIHRlc3Q0MDY3NDRnKCkgeworCXRoaXMucnVuQ29uZm9ybVRl
c3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEiLAorCQkJCSJpbnRlcmZhY2UgSSB7
XG4iICsKKwkJCQkiCXZvaWQgZm9vKEludGVnZXIgYTEsIEludGVnZXIgYTIsIFN0cmluZyBhMyk7
XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNsYXNzIFkge1xuIiArCisJCQkJIglzdGF0aWMgdm9p
ZCBwcmludCAoT2JqZWN0IFtdIG8pIHtcbiIgKworCQkJCSIJCWZvciAoaW50IGkgPSAwOyBpIDwg
by5sZW5ndGg7IGkrKylcbiIgKworCQkJCSIJCQlTeXN0ZW0ub3V0LnByaW50bG4ob1tpXSk7XG4i
ICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iICsKKwkJCQkicHVibGljIGNsYXNzIFggZXh0ZW5k
cyBZIHtcbiIgKworCQkJCSIJcHJpdmF0ZSB2b2lkIG0oTnVtYmVyIGExLCBPYmplY3QuLi4gcmVz
dCkge1xuIiArIAorCQkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbihhMSk7XG4iICsKKwkJCQkiCQlw
cmludChyZXN0KTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIglzdGF0aWMgdm9pZCBwcmludCAo
T2JqZWN0IFtdIG8pIHtcbiIgKworCQkJCSIJCWZvciAoaW50IGkgPSAwOyBpIDwgby5sZW5ndGg7
IGkrKylcbiIgKworCQkJCSIJCQlTeXN0ZW0ub3V0LnByaW50bG4ob1tpXSk7XG4iICsKKwkJCQki
CX1cbiIgKworCQkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtc
biIgKworCQkJCSIJCW5ldyBYKCkuZm9vKCk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJdm9p
ZCBmb28oKSB7XG4iICsgCisJCQkJIgkJSSBpID0gdGhpczo6bTtcbiIgKworCQkJCSIJCWkuZm9v
KDEwLCAyMCwgXCIxMCwgMjBcIik7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iLAorCQkJ
fSwKKwkJCSIxMFxuIiArCisJCQkiMjBcbiIgKworCQkJIjEwLCAyMCIKKwkJCSk7Cit9CitwdWJs
aWMgdm9pZCB0ZXN0NDA2NzQ0aCgpIHsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQkJbmV3IFN0
cmluZ1tdIHsKKwkJCQkiWC5qYXZhIiwKKwkJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkJIgl2
b2lkIGZvbyhpbnQgW10gaWEpO1xuIiArCisJCQkJIn1cbiIgKworCQkJCSJjbGFzcyBZIHtcbiIg
KworCQkJCSIJdm9pZCBtKE9iamVjdC4uLiByZXN0KSB7XG4iICsgCisJCQkJIgkJU3lzdGVtLm91
dC5wcmludGxuKFwiSGVsbG8gXCIgKyByZXN0Lmxlbmd0aCk7XG4iICsKKwkJCQkiCX1cbiIgKwor
CQkJCSIJc3RhdGljIHZvaWQgcHJpbnQgKE9iamVjdCBbXSBvKSB7XG4iICsKKwkJCQkiCQlmb3Ig
KGludCBpID0gMDsgaSA8IG8ubGVuZ3RoOyBpKyspXG4iICsKKwkJCQkiCQkJU3lzdGVtLm91dC5w
cmludGxuKG9baV0pO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxuIiArCisJCQkJInB1Ymxp
YyBjbGFzcyBYIGV4dGVuZHMgWSB7XG4iICsKKwkJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWlu
KFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCQkiCQluZXcgWCgpLmZvbygpO1xuIiArCisJCQkJ
Igl9XG4iICsKKwkJCQkiCXZvaWQgZm9vKCkge1xuIiArIAorCQkJCSIJCUkgaSA9IHN1cGVyOjpt
O1xuIiArCisJCQkJIgkJaS5mb28obmV3IGludCBbMF0pO1xuIiArCisJCQkJIgl9XG4iICsKKwkJ
CQkifVxuIiwKKwkJCX0sCisJCQkiSGVsbG8gMSIKKwkJCSk7Cit9CitwdWJsaWMgdm9pZCB0ZXN0
NDA2NzQ0aSgpIHsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJ
CQkiWC5qYXZhIiwKKwkJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkJIgl2b2lkIGZvbyhpbnQg
W10gaWEpO1xuIiArCisJCQkJIn1cbiIgKworCQkJCSJjbGFzcyBZIHtcbiIgKworCQkJCSIJdm9p
ZCBtKE9iamVjdC4uLiByZXN0KSB7XG4iICsgCisJCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKFwi
SGVsbG8gXCIgKyByZXN0Lmxlbmd0aCk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJdm9pZCBu
KE9iamVjdC4uLiByZXN0KSB7XG4iICsgCisJCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKFwiSGVs
bG8gXCIgKyByZXN0Lmxlbmd0aCk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJc3RhdGljIHZv
aWQgcHJpbnQgKE9iamVjdCBbXSBvKSB7XG4iICsKKwkJCQkiCQlmb3IgKGludCBpID0gMDsgaSA8
IG8ubGVuZ3RoOyBpKyspXG4iICsKKwkJCQkiCQkJU3lzdGVtLm91dC5wcmludGxuKG9baV0pO1xu
IiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxuIiArCisJCQkJInB1YmxpYyBjbGFzcyBYIGV4dGVu
ZHMgWSB7XG4iICsKKwkJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBhcmdz
KSB7XG4iICsKKwkJCQkiCQluZXcgWCgpLmZvbygpO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQki
CXZvaWQgZm9vKCkge1xuIiArIAorCQkJCSIJCUkgW10gaSA9IHsgc3VwZXI6Om0sIHRoaXM6Om0s
IHN1cGVyOjpuLCB0aGlzOjpufTtcbiIgKworCQkJCSIJCWZvciAoSSB4IDogaSlcbiIgKworCQkJ
CSIJCQl4LmZvbyhuZXcgaW50IFswXSk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iLAor
CQkJfSwKKwkJCSJIZWxsbyAxXG4iICsKKwkJCSJIZWxsbyAxXG4iICsKKwkJCSJIZWxsbyAxXG4i
ICsKKwkJCSJIZWxsbyAxIgorCQkJKTsKK30KK3B1YmxpYyB2b2lkIHRlc3Q0MDY3NDRqKCkgewor
CXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEiLAor
CQkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCQkiCXZvaWQgZm9vKGludCBbXSBpYSk7XG4iICsK
KwkJCQkifVxuIiArCisJCQkJImludGVyZmFjZSBJMSB7XG4iICsKKwkJCQkiCXZvaWQgZm9vKGlu
dCBbXSBpYSk7XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNsYXNzIFkge1xuIiArCisJCQkJIgl2
b2lkIG0oT2JqZWN0Li4uIHJlc3QpIHtcbiIgKyAKKwkJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4o
XCJIZWxsbyBcIiArIHJlc3QubGVuZ3RoKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIglzdGF0
aWMgdm9pZCBwcmludCAoT2JqZWN0IFtdIG8pIHtcbiIgKworCQkJCSIJCWZvciAoaW50IGkgPSAw
OyBpIDwgby5sZW5ndGg7IGkrKylcbiIgKworCQkJCSIJCQlTeXN0ZW0ub3V0LnByaW50bG4ob1tp
XSk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iICsKKwkJCQkicHVibGljIGNsYXNzIFgg
ZXh0ZW5kcyBZIHtcbiIgKworCQkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtd
IGFyZ3MpIHtcbiIgKworCQkJCSIJCW5ldyBYKCkuZm9vKCk7XG4iICsKKwkJCQkiCX1cbiIgKwor
CQkJCSIJdm9pZCBmb28oKSB7XG4iICsgCisJCQkJIgkJSSBpID0gc3VwZXI6Om07XG4iICsKKwkJ
CQkiCQlpLmZvbyhuZXcgaW50IFswXSk7XG4iICsKKwkJCQkiCQlJMSBpMSA9IHN1cGVyOjptO1xu
IiArCisJCQkJIgkJaTEuZm9vKG5ldyBpbnQgWzBdKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJ
In1cbiIsCisJCQl9LAorCQkJIkhlbGxvIDFcbiIgKworCQkJIkhlbGxvIDEiCisJCQkpOworfQor
cHVibGljIHZvaWQgdGVzdDQwNjc0NGsoKSB7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJCW5l
dyBTdHJpbmdbXSB7CisJCQkJIlguamF2YSIsCisJCQkJImludGVyZmFjZSBJIHtcbiIgKworCQkJ
CSIJdm9pZCBmb28oaW50IFtdIGlhKTtcbiIgKworCQkJCSJ9XG4iICsKKwkJCQkiaW50ZXJmYWNl
IEkxIGV4dGVuZHMgSSB7XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNsYXNzIFkge1xuIiArCisJ
CQkJIgl2b2lkIG0oT2JqZWN0Li4uIHJlc3QpIHtcbiIgKyAKKwkJCQkiCQlTeXN0ZW0ub3V0LnBy
aW50bG4oXCJIZWxsbyBcIiArIHJlc3QubGVuZ3RoKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJ
IglzdGF0aWMgdm9pZCBwcmludCAoT2JqZWN0IFtdIG8pIHtcbiIgKworCQkJCSIJCWZvciAoaW50
IGkgPSAwOyBpIDwgby5sZW5ndGg7IGkrKylcbiIgKworCQkJCSIJCQlTeXN0ZW0ub3V0LnByaW50
bG4ob1tpXSk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iICsKKwkJCQkicHVibGljIGNs
YXNzIFggZXh0ZW5kcyBZIHtcbiIgKworCQkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3Ry
aW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJCSIJCW5ldyBYKCkuZm9vKCk7XG4iICsKKwkJCQkiCX1c
biIgKworCQkJCSIJdm9pZCBmb28oKSB7XG4iICsgCisJCQkJIgkJSSBpID0gc3VwZXI6Om07XG4i
ICsKKwkJCQkiCQlpLmZvbyhuZXcgaW50IFswXSk7XG4iICsKKwkJCQkiCQlJMSBpMSA9IHRoaXM6
Om07XG4iICsKKwkJCQkiCQlpMS5mb28obmV3IGludCBbMF0pO1xuIiArCisJCQkJIgl9XG4iICsK
KwkJCQkifVxuIiwKKwkJCX0sCisJCQkiSGVsbG8gMVxuIiArCisJCQkiSGVsbG8gMSIKKwkJCSk7
Cit9CitwdWJsaWMgdm9pZCB0ZXN0NDA2NzQ0bCgpIHsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAor
CQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiWC5qYXZhIiwKKwkJCQkiaW50ZXJmYWNlIEkge1xuIiAr
CisJCQkJIgl2b2lkIGZvbyhpbnQgW10gaWEpO1xuIiArCisJCQkJIn1cbiIgKworCQkJCSJjbGFz
cyBZIHtcbiIgKworCQkJCSIJdm9pZCBtKE9iamVjdC4uLiByZXN0KSB7XG4iICsgCisJCQkJIgkJ
SSBpID0gdGhpczo6bjtcbiIgKworCQkJCSIJCWkuZm9vKG5ldyBpbnQgWzBdKTtcbiIgKworCQkJ
CSIJfVxuIiArCisJCQkJIgl2b2lkIG4oT2JqZWN0Li4uIHJlc3QpIHtcbiIgKyAKKwkJCQkiCQlT
eXN0ZW0ub3V0LnByaW50bG4oXCJIZWxsbyBcIiArIHJlc3QubGVuZ3RoKTtcbiIgKworCQkJCSIJ
fVxuIiArCisJCQkJIglzdGF0aWMgdm9pZCBwcmludCAoT2JqZWN0IFtdIG8pIHtcbiIgKworCQkJ
CSIJCWZvciAoaW50IGkgPSAwOyBpIDwgby5sZW5ndGg7IGkrKylcbiIgKworCQkJCSIJCQlTeXN0
ZW0ub3V0LnByaW50bG4ob1tpXSk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iICsKKwkJ
CQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBZIHtcbiIgKworCQkJCSIJcHVibGljIHN0YXRpYyB2
b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJCSIJCW5ldyBYKCkuZm9vKCk7XG4i
ICsKKwkJCQkiCX1cbiIgKworCQkJCSIJdm9pZCBmb28oKSB7XG4iICsgCisJCQkJIgkJSSBpID0g
c3VwZXI6Om07XG4iICsKKwkJCQkiCQlpLmZvbyhuZXcgaW50IFswXSk7XG4iICsKKwkJCQkiCX1c
biIgKworCQkJCSJ9XG4iLAorCQkJfSwKKwkJCSJIZWxsbyAxIgorCQkJKTsKK30KK3B1YmxpYyB2
b2lkIHRlc3Q0MDY3NDRtKCkgeworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQluZXcgU3RyaW5n
W10geworCQkJCSJYLmphdmEiLAorCQkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCQkiCXZvaWQg
Zm9vKGludCBbXSBpYSk7XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNsYXNzIFkge1xuIiArCisJ
CQkJIglzdGF0aWMgdm9pZCBtKE9iamVjdC4uLiByZXN0KSB7XG4iICsgCisJCQkJIgkJU3lzdGVt
Lm91dC5wcmludGxuKFwiSGVsbG8gXCIgKyByZXN0Lmxlbmd0aCk7XG4iICsKKwkJCQkiCX1cbiIg
KworCQkJCSIJc3RhdGljIHZvaWQgcHJpbnQgKE9iamVjdCBbXSBvKSB7XG4iICsKKwkJCQkiCQlm
b3IgKGludCBpID0gMDsgaSA8IG8ubGVuZ3RoOyBpKyspXG4iICsKKwkJCQkiCQkJU3lzdGVtLm91
dC5wcmludGxuKG9baV0pO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNs
YXNzIFkxIGV4dGVuZHMgWSB7IH1cbiIgKworCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJ
CQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCQki
CQluZXcgWCgpLmZvbygpO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkiCXZvaWQgZm9vKCkge1xu
IiArIAorCQkJCSIJCUkgaSA9IFk6Om07XG4iICsKKwkJCQkiCQlpLmZvbyhuZXcgaW50IFswXSk7
XG4iICsKKwkJCQkiCQlpID0gWTE6Om07XG4iICsKKwkJCQkiCQlpLmZvbyhuZXcgaW50IFswXSk7
XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iLAorCQkJfSwKKwkJCSJIZWxsbyAxXG4iICsK
KwkJCSJIZWxsbyAxIgorCQkJKTsKK30KK3B1YmxpYyB2b2lkIHRlc3Q0MDY3NDRuKCkgeworCXRo
aXMucnVuQ29uZm9ybVRlc3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEiLAorCQkJ
CSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCQkiCXZvaWQgZm9vKEludGVnZXIgaSk7XG4iICsKKwkJ
CQkifVxuIiArCisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJCSIJc3RhdGljIHZvaWQg
Zm9vKGludCAuLi4geCkge1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkiCXB1YmxpYyBzdGF0aWMg
dm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKworCQkJCSIJCUkgaSA9IFg6OmZvbztcbiIg
KworCQkJCSIJCWkuZm9vKDEpO1xuIiArCisJCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKFwiSGVs
bG9cIik7XG4iICsKKwkJCQkifVxuIiArCisJCQkJIn1cbiIsCisJCQl9LAorCQkJIkhlbGxvIgor
CQkJKTsKK30KK3B1YmxpYyB2b2lkIHRlc3Q0MDY3NDRvKCkgeworCXRoaXMucnVuQ29uZm9ybVRl
c3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEiLAorCQkJCSJpbnRlcmZhY2UgSSB7
XG4iICsKKwkJCQkiCXZvaWQgZm9vKGludCBpKTtcbiIgKworCQkJCSJ9XG4iICsKKwkJCQkicHVi
bGljIGNsYXNzIFgge1xuIiArCisJCQkJIglzdGF0aWMgdm9pZCBmb28oaW50IC4uLiB4KSB7XG4i
ICsKKwkJCQkiCX1cbiIgKworCQkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10g
YXJncykge1xuIiArCisJCQkJIgkJSSBpID0gWDo6Zm9vO1xuIiArCisJCQkJIgkJaS5mb28oMSk7
XG4iICsKKwkJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oXCJIZWxsb1wiKTtcbiIgKworCQkJCSIJ
fVxuIiArCisJCQkJIn1cbiIsCisJCQl9LAorCQkJIkhlbGxvIgorCQkJKTsKK30KK3B1YmxpYyB2
b2lkIHRlc3Q0MDY3NDRwKCkgeworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQluZXcgU3RyaW5n
W10geworCQkJCSJYLmphdmEiLAorCQkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCQkiCXZvaWQg
Zm9vKEludGVnZXIgaSk7XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNsYXNzIEJhc2Uge1xuIiAr
CisJCQkJIgl2b2lkIGZvbyhPYmplY3QgLi4ub2JqZWN0cykge1xuIiArCisJCQkJIgkJU3lzdGVt
Lm91dC5wcmludGxuKFwiT2tcIik7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iICsKKwkJ
CQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBCYXNlIHtcbiIgKworCQkJCSIJdm9pZCBmb28oT2Jq
ZWN0Li4uIG9iamVjdHMpIHtcbiIgKworCQkJCSIJCXRocm93IG5ldyBSdW50aW1lRXhjZXB0aW9u
KCk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3Ry
aW5nW10gYXJncykge1xuIiArCisJCQkJIgkJbmV3IFgoKS5nb28oKTtcbiIgKworCQkJCSIJfVxu
IiArCisJCQkJIgl2b2lkIGdvbygpIHtcbiIgKworCQkJCSIJCUkgaSA9IHN1cGVyOjpmb287XG4i
ICsKKwkJCQkiCQlpLmZvbygxMCk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iLAorCQkJ
fSwKKwkJCSJPayIKKwkJCSk7Cit9CitwdWJsaWMgdm9pZCB0ZXN0NDA2NzQ0cSgpIHsKKwl0aGlz
LnJ1bkNvbmZvcm1UZXN0KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiWC5qYXZhIiwKKwkJCQki
aW50ZXJmYWNlIEkge1xuIiArCisJCQkJIgl2b2lkIGZvbyhpbnQgeCk7XG4iICsKKwkJCQkifVxu
IiArCisJCQkJImNsYXNzIEJhc2Uge1xuIiArCisJCQkJIglwdWJsaWMgdm9pZCBmb28oaW50IC4u
LmlzKSB7XG4iICsKKwkJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oXCJmb29cIik7XG4iICsKKwkJ
CQkiCX1cbiIgKworCQkJCSJ9XG4iICsKKwkJCQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBCYXNl
IHtcbiIgKworCQkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oIFN0cmluZ1tdIGFyZ3MgKSB7
XG4iICsKKwkJCQkiCQlJIGkgPSBuZXcgWCgpOjpmb287XG4iICsKKwkJCQkiCQlpLmZvbygxMCk7
XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iLAorCQkJfSwKKwkJCSJmb28iCisJCQkpOwor
fQorcHVibGljIHZvaWQgdGVzdDQwNjc0NHIoKSB7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJ
CW5ldyBTdHJpbmdbXSB7CisJCQkJIlguamF2YSIsCisJCQkJImludGVyZmFjZSBJIHtcbiIgKwor
CQkJCSIJdm9pZCBmb28oaW50IHgpO1xuIiArCisJCQkJIn1cbiIgKworCQkJCSJwdWJsaWMgY2xh
c3MgWCB7XG4iICsKKwkJCQkiCXByaXZhdGUgdm9pZCBmb28oaW50IC4uLmlzKSB7XG4iICsKKwkJ
CQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oXCJmb29cIik7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJ
CSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncyApIHtcbiIgKworCQkJCSIJ
CW5ldyBYKCkubmV3IFkoKS5mb28oKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIgljbGFzcyBZ
IGV4dGVuZHMgWCB7XG4iICsKKwkJCQkiCQl2b2lkIGZvbygpIHtcbiIgKworCQkJCSIJCQlJIGkg
PSBuZXcgWCgpOjpmb287XG4iICsKKwkJCQkiCQkJaS5mb28oMTApO1xuIiArCisJCQkJIgkJfVxu
IiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxuIiwKKwkJCX0sCisJCQkiZm9vIgorCQkJKTsKK30K
K3B1YmxpYyB2b2lkIHRlc3Q0MDY3NDRzKCkgeworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQlu
ZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEiLAorCQkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJ
CQkiCXZvaWQgZm9vKGludCB4KTtcbiIgKworCQkJCSJ9XG4iICsKKwkJCQkiY2xhc3MgWSB7XG4i
ICsKKwkJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBmb28oaW50IC4uLmlzKSB7XG4iICsKKwkJCQki
CQlTeXN0ZW0ub3V0LnByaW50bG4oXCJZLmZvb1wiKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJ
In1cbiIgKworCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCQkiCXB1YmxpYyBzdGF0aWMg
dm9pZCBmb28oaW50IC4uLmlzKSB7XG4iICsKKwkJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oXCJY
LmZvb1wiKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWFp
bihTdHJpbmdbXSBhcmdzKSB7XG4iICsKKwkJCQkiCQlJIGkgPSBYOjpmb287XG4iICsKKwkJCQki
CQlpLmZvbygxMCk7XG4iICsKKwkJCQkiCQlpID0gWTo6Zm9vO1xuIiArCisJCQkJIgkJaS5mb28o
MjApO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxuIiwKKwkJCX0sCisJCQkiWC5mb29cbiIg
KworCQkJIlkuZm9vIgorCQkJKTsKK30KK3B1YmxpYyB2b2lkIHRlc3Q0MDY3NDR0KCkgeworCXRo
aXMucnVuQ29uZm9ybVRlc3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEiLAorCQkJ
CSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCQkiCXZvaWQgZm9vKGludCB0LCBpbnQgW10gaWEpO1xu
IiArCisJCQkJIn1cbiIgKworCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCQkiCXB1Ymxp
YyBzdGF0aWMgdm9pZCBmb28oSW50ZWdlciBpLCBpbnQgLi4uaXMpIHtcbiIgKworCQkJCSIJCVN5
c3RlbS5vdXQucHJpbnRsbihcIlkuZm9vXCIpO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkiCXB1
YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKworCQkJCSIJCUkgaSA9
IFg6OmZvbztcbiIgKworCQkJCSIJCWkuZm9vKDEwLCBudWxsKTtcbiIgKworCQkJCSIJfVxuIiAr
CisJCQkJIn1cbiIsCisJCQl9LAorCQkJIlkuZm9vIgorCQkJKTsKK30KK3B1YmxpYyB2b2lkIHRl
c3Q0MDY3NDR1KCkgeworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQluZXcgU3RyaW5nW10gewor
CQkJCSJYLmphdmEiLAorCQkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCQkiCVggZm9vKGludCB4
KTtcbiIgKworCQkJCSJ9XG4iICsKKwkJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkJIglj
bGFzcyBZIGV4dGVuZHMgWCB7XG4iICsKKwkJCQkiCQlZKGludCAuLi4geCkge1xuIiArCisJCQkJ
IgkJCVN5c3RlbS5vdXQucHJpbnRsbihcIlk6OllcIik7XG4iICsKKwkJCQkiCQl9XG4iICsKKwkJ
CQkiCX1cbiIgKworCQkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncyAp
IHtcbiIgKworCQkJCSIJCW5ldyBYKCkuZ29vKCk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJ
dm9pZCBnb28oKSB7XG4iICsKKwkJCQkiCQlJIGkgPSBZOjpuZXc7XG4iICsKKwkJCQkiCQlpLmZv
bygxMCk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iLAorCQkJfSwKKwkJCSJZOjpZIgor
CQkJKTsKK30KIAogcHVibGljIHN0YXRpYyBDbGFzcyB0ZXN0Q2xhc3MoKSB7CiAJcmV0dXJuIExh
bWJkYUV4cHJlc3Npb25zVGVzdC5jbGFzczsKIH0KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9j
b21waWxlci9yZWdyZXNzaW9uL051bGxUeXBlQW5ub3RhdGlvblRlc3QuamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9jb21waWxlci9yZWdyZXNzaW9uL051bGxUeXBlQW5ub3RhdGlvblRlc3QuamF2YQppbmRleCA2
MjRkNWE2Li5mNTRmNThjIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5j
b21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lv
bi9OdWxsVHlwZUFubm90YXRpb25UZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUu
dGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3Jl
Z3Jlc3Npb24vTnVsbFR5cGVBbm5vdGF0aW9uVGVzdC5qYXZhCkBAIC0xLDcgKzEsNyBAQAogLyoq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAxMiwgMjAxMyBHSyBTb2Z0
d2FyZSBBRyBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDEyLCAyMDE0IEdLIFNvZnR3
YXJlIEFHIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0g
YW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5k
ZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNo
IGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBo
dHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAogICogCkBAIC0zNDI1LDEy
ICszNDI1LDExIEBACiAJCSIJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF5eXl5e
Xl5eXlxuIiArIAogCQkiTnVsbCB0eXBlIG1pc21hdGNoIGF0IHBhcmFtZXRlciAzOiByZXF1aXJl
ZCBcJ0BOb25OdWxsIEZpbGVWaXNpdE9wdGlvblwnIGJ1dCBwcm92aWRlZCBcJ0BOdWxsYWJsZSBG
aWxlVmlzaXRPcHRpb25cJyB2aWEgbWV0aG9kIGRlc2NyaXB0b3IgVHJpRnVuYzxQYXRoLEZpbGVW
aXNpdE9wdGlvbixGaWxlVmlzaXRPcHRpb24sU3RyZWFtPFBhdGg+Pi5hcHBseShQYXRoLCBGaWxl
VmlzaXRPcHRpb24sIEZpbGVWaXNpdE9wdGlvbilcbiIgKyAKIAkJIi0tLS0tLS0tLS1cbiIpOwog
fQogCi0vLyBESVNBQkxFRCwgY3VycmVudGx5IHRocm93cyBqYXZhLmxhbmcuQm9vdHN0cmFwTWV0
aG9kRXJyb3IgYXQgcnVudGltZToKLXB1YmxpYyB2b2lkIF90ZXN0QnVnNDI0NjM3X2NvbW1lbnQz
KCkgeworcHVibGljIHZvaWQgdGVzdEJ1ZzQyNDYzN19jb21tZW50MygpIHsKIAlydW5Db25mb3Jt
VGVzdCgKIAkJbmV3IFN0cmluZ1tdIHsKIAkJCSJWYXJBcmdzTWV0aG9kUmVmZXJlbmNlVGVzdC5q
YXZhIiwKIAkJCSJpbXBvcnQgamF2YS51dGlsLmZ1bmN0aW9uLkNvbnN1bWVyO1xuIiArIAogCQkJ
InB1YmxpYyBjbGFzcyBWYXJBcmdzTWV0aG9kUmVmZXJlbmNlVGVzdCB7XG4iICsgCmRpZmYgLS1n
aXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvQ2xhc3NGaWxlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvQ2xhc3NGaWxlLmphdmEKaW5kZXgg
YmY3ZTMwYy4uMzcxZjU3OSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL0NsYXNzRmlsZS5qYXZhCisrKyBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9DbGFzc0ZpbGUuamF2YQpAQCAtOTAwLDEwICs5MDAsMTMgQEAKIAkJCQkJCWNhc2Ug
U3ludGhldGljTWV0aG9kQmluZGluZy5TdXBlck1ldGhvZEFjY2VzcyA6CiAJCQkJCQljYXNlIFN5
bnRoZXRpY01ldGhvZEJpbmRpbmcuQnJpZGdlTWV0aG9kIDoKIAkJCQkJCQkvLyBnZW5lcmF0ZSBh
IG1ldGhvZCBpbmZvIHRvIGVtdWxhdGUgYW4gYWNjZXNzIHRvIGEgbm9uLWFjY2Vzc2libGUgbWV0
aG9kIC8gc3VwZXItbWV0aG9kIG9yIGJyaWRnZSBtZXRob2QKIAkJCQkJCQlhZGRTeW50aGV0aWNN
ZXRob2RBY2Nlc3NNZXRob2Qoc3ludGhldGljTWV0aG9kKTsKIAkJCQkJCQlicmVhazsKKwkJCQkJ
CWNhc2UgU3ludGhldGljTWV0aG9kQmluZGluZy5DaGFubmVsaXNlUGFyYW1zVG9WYXJBcmdzIDoK
KwkJCQkJCQlhZGRTeW50aGV0aWNNZXRob2RBY2Nlc3NNZXRob2RGb3JWYXJBcmdzKHN5bnRoZXRp
Y01ldGhvZCk7CisJCQkJCQkJYnJlYWs7CiAJCQkJCQljYXNlIFN5bnRoZXRpY01ldGhvZEJpbmRp
bmcuQ29uc3RydWN0b3JBY2Nlc3MgOgogCQkJCQkJCS8vIGdlbmVyYXRlIGEgbWV0aG9kIGluZm8g
dG8gZW11bGF0ZSBhbiBhY2Nlc3MgdG8gYSBub24tYWNjZXNzaWJsZSBjb25zdHJ1Y3RvcgogCQkJ
CQkJCWFkZFN5bnRoZXRpY0NvbnN0cnVjdG9yQWNjZXNzTWV0aG9kKHN5bnRoZXRpY01ldGhvZCk7
CiAJCQkJCQkJYnJlYWs7CiAJCQkJCQljYXNlIFN5bnRoZXRpY01ldGhvZEJpbmRpbmcuRW51bVZh
bHVlcyA6CkBAIC0xMjE2LDEwICsxMjE5LDMxIEBACiAJCQkJLnNjb3BlCiAJCQkJLnJlZmVyZW5j
ZUNvbXBpbGF0aW9uVW5pdCgpCiAJCQkJLmNvbXBpbGF0aW9uUmVzdWx0CiAJCQkJLmdldExpbmVT
ZXBhcmF0b3JQb3NpdGlvbnMoKSk7CiAJCS8vIHVwZGF0ZSB0aGUgbnVtYmVyIG9mIGF0dHJpYnV0
ZXMKKwkJdGhpcy5jb250ZW50c1ttZXRob2RBdHRyaWJ1dGVPZmZzZXQrK10gPSAoYnl0ZSkgKGF0
dHJpYnV0ZU51bWJlciA+PiA4KTsKKwkJdGhpcy5jb250ZW50c1ttZXRob2RBdHRyaWJ1dGVPZmZz
ZXRdID0gKGJ5dGUpIGF0dHJpYnV0ZU51bWJlcjsKKwl9CisKKwlwdWJsaWMgdm9pZCBhZGRTeW50
aGV0aWNNZXRob2RBY2Nlc3NNZXRob2RGb3JWYXJBcmdzKFN5bnRoZXRpY01ldGhvZEJpbmRpbmcg
bWV0aG9kQmluZGluZykgeworCQlnZW5lcmF0ZU1ldGhvZEluZm9IZWFkZXIobWV0aG9kQmluZGlu
Zyk7CisJCWludCBtZXRob2RBdHRyaWJ1dGVPZmZzZXQgPSB0aGlzLmNvbnRlbnRzT2Zmc2V0Owor
CQlpbnQgYXR0cmlidXRlTnVtYmVyID0gZ2VuZXJhdGVNZXRob2RJbmZvQXR0cmlidXRlcyhtZXRo
b2RCaW5kaW5nKTsKKwkJaW50IGNvZGVBdHRyaWJ1dGVPZmZzZXQgPSB0aGlzLmNvbnRlbnRzT2Zm
c2V0OworCQlhdHRyaWJ1dGVOdW1iZXIrKzsKKwkJZ2VuZXJhdGVDb2RlQXR0cmlidXRlSGVhZGVy
KCk7CisJCXRoaXMuY29kZVN0cmVhbS5pbml0KHRoaXMpOworCQl0aGlzLmNvZGVTdHJlYW0uZ2Vu
ZXJhdGVTeW50aGV0aWNCb2R5Rm9yTWV0aG9kQWNjZXNzRm9yVmFyQXJncyhtZXRob2RCaW5kaW5n
KTsKKwkJY29tcGxldGVDb2RlQXR0cmlidXRlRm9yU3ludGhldGljTWV0aG9kKAorCQkJbWV0aG9k
QmluZGluZywKKwkJCWNvZGVBdHRyaWJ1dGVPZmZzZXQsCisJCQkoKFNvdXJjZVR5cGVCaW5kaW5n
KSBtZXRob2RCaW5kaW5nLmRlY2xhcmluZ0NsYXNzKQorCQkJCS5zY29wZQorCQkJCS5yZWZlcmVu
Y2VDb21waWxhdGlvblVuaXQoKQorCQkJCS5jb21waWxhdGlvblJlc3VsdAorCQkJCS5nZXRMaW5l
U2VwYXJhdG9yUG9zaXRpb25zKCkpOwogCQl0aGlzLmNvbnRlbnRzW21ldGhvZEF0dHJpYnV0ZU9m
ZnNldCsrXSA9IChieXRlKSAoYXR0cmlidXRlTnVtYmVyID4+IDgpOwogCQl0aGlzLmNvbnRlbnRz
W21ldGhvZEF0dHJpYnV0ZU9mZnNldF0gPSAoYnl0ZSkgYXR0cmlidXRlTnVtYmVyOwogCX0KIAog
CXB1YmxpYyB2b2lkIGFkZFN5bnRoZXRpY1N3aXRjaFRhYmxlKFN5bnRoZXRpY01ldGhvZEJpbmRp
bmcgbWV0aG9kQmluZGluZykgewpAQCAtMjg3NywxMiArMjkwMSwxNCBAQAogCQlpbnQgYXR0cmli
dXRlTGVuZ3RoUG9zaXRpb24gPSBsb2NhbENvbnRlbnRzT2Zmc2V0OwogCQlsb2NhbENvbnRlbnRz
T2Zmc2V0ICs9IDQ7CiAJCXRoaXMuY29udGVudHNbbG9jYWxDb250ZW50c09mZnNldCsrXSA9IChi
eXRlKSAobnVtYmVyT2ZCb290c3RyYXBzID4+IDgpOwogCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29u
dGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgbnVtYmVyT2ZCb290c3RyYXBzOwogCQlmb3IgKGludCBp
ID0gMDsgaSA8IG51bWJlck9mQm9vdHN0cmFwczsgaSsrKSB7Ci0JCQlGdW5jdGlvbmFsRXhwcmVz
c2lvbiBmdW5jdGlvbmFsID0gKEZ1bmN0aW9uYWxFeHByZXNzaW9uKSBmdW5jdGlvbmFsRXhwcmVz
c2lvbkxpc3QuZ2V0KGkpOwotCQkJCisJCQlPYmplY3QgdGVtcCA9IGZ1bmN0aW9uYWxFeHByZXNz
aW9uTGlzdC5nZXQoaSk7CisKKwkJCWlmICh0ZW1wIGluc3RhbmNlb2YgRnVuY3Rpb25hbEV4cHJl
c3Npb24pIHsKKwkJCUZ1bmN0aW9uYWxFeHByZXNzaW9uIGZ1bmN0aW9uYWwgPSAoRnVuY3Rpb25h
bEV4cHJlc3Npb24pdGVtcDsKIAkJCVR5cGVCaW5kaW5nW10gbWFya2VySW50ZXJmYWNlcyA9IG51
bGw7CiAJCQlpZiAoZnVuY3Rpb25hbCBpbnN0YW5jZW9mIExhbWJkYUV4cHJlc3Npb24gJiYgCiAJ
CQkJICAgKCgobWFya2VySW50ZXJmYWNlcz0oKExhbWJkYUV4cHJlc3Npb24pZnVuY3Rpb25hbCku
Z2V0TWFya2VySW50ZXJmYWNlcygpKSAhPSBudWxsKSB8fAogCQkJCSAgIAkoKExhbWJkYUV4cHJl
c3Npb24pZnVuY3Rpb25hbCkuaXNTZXJpYWxpemFibGUpKSB7CiAJCQkJCkBAIC0yOTU5LDE4ICsy
OTg1LDQ5IEBACiAJCQkJCiAJCQkJaW50IGZ1bmN0aW9uYWxEZXNjcmlwdG9ySW5kZXggPSB0aGlz
LmNvbnN0YW50UG9vbC5saXRlcmFsSW5kZXhGb3JNZXRob2RUeXBlKGZ1bmN0aW9uYWwuZGVzY3Jp
cHRvci5vcmlnaW5hbCgpLnNpZ25hdHVyZSgpKTsKIAkJCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29u
dGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgKGZ1bmN0aW9uYWxEZXNjcmlwdG9ySW5kZXggPj4gOCk7
CiAJCQkJdGhpcy5jb250ZW50c1tsb2NhbENvbnRlbnRzT2Zmc2V0KytdID0gKGJ5dGUpIGZ1bmN0
aW9uYWxEZXNjcmlwdG9ySW5kZXg7CiAJCi0JCQkJaW50IG1ldGhvZEhhbmRsZUluZGV4ID0gdGhp
cy5jb25zdGFudFBvb2wubGl0ZXJhbEluZGV4Rm9yTWV0aG9kSGFuZGxlKGZ1bmN0aW9uYWwuYmlu
ZGluZy5vcmlnaW5hbCgpKTsgLy8gU3BlYWsgb2YgIiBpbXBsZW1lbnRhdGlvbiIgKGVyYXNlZCkg
dmVyc2lvbiBoZXJlLCBhZGFwdGF0aW9ucyBkZXNjcmliZWQgYmVsb3cuCisJCQkJaW50IG1ldGhv
ZEhhbmRsZUluZGV4OworCQkJCWlmIChmdW5jdGlvbmFsLmZpcnN0QnJpZGdlICE9IG51bGwgJiYg
ZnVuY3Rpb25hbC5maXJzdEJyaWRnZSBpbnN0YW5jZW9mIFN5bnRoZXRpY01ldGhvZEJpbmRpbmcp
IHsKKwkJCQkJbWV0aG9kSGFuZGxlSW5kZXggPSB0aGlzLmNvbnN0YW50UG9vbC5saXRlcmFsSW5k
ZXhGb3JNZXRob2RIYW5kbGUoZnVuY3Rpb25hbC5maXJzdEJyaWRnZS5vcmlnaW5hbCgpKTsgLy8g
U3BlYWsgb2YgIiBpbXBsZW1lbnRhdGlvbiIgKGVyYXNlZCkgdmVyc2lvbiBoZXJlLCBhZGFwdGF0
aW9ucyBkZXNjcmliZWQgYmVsb3cuCisJCQkJfSBlbHNlIHsKKwkJCQkJbWV0aG9kSGFuZGxlSW5k
ZXggPSB0aGlzLmNvbnN0YW50UG9vbC5saXRlcmFsSW5kZXhGb3JNZXRob2RIYW5kbGUoZnVuY3Rp
b25hbC5iaW5kaW5nLm9yaWdpbmFsKCkpOyAvLyBTcGVhayBvZiAiIGltcGxlbWVudGF0aW9uIiAo
ZXJhc2VkKSB2ZXJzaW9uIGhlcmUsIGFkYXB0YXRpb25zIGRlc2NyaWJlZCBiZWxvdy4KKwkJCQl9
CiAJCQkJdGhpcy5jb250ZW50c1tsb2NhbENvbnRlbnRzT2Zmc2V0KytdID0gKGJ5dGUpIChtZXRo
b2RIYW5kbGVJbmRleCA+PiA4KTsKIAkJCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVudHNPZmZz
ZXQrK10gPSAoYnl0ZSkgbWV0aG9kSGFuZGxlSW5kZXg7CiAJCiAJCQkJY2hhciBbXSBpbnN0YW50
aWF0ZWRTaWduYXR1cmUgPSBmdW5jdGlvbmFsLmRlc2NyaXB0b3Iuc2lnbmF0dXJlKCk7CiAJCQkJ
aW50IG1ldGhvZFR5cGVJbmRleCA9IHRoaXMuY29uc3RhbnRQb29sLmxpdGVyYWxJbmRleEZvck1l
dGhvZFR5cGUoaW5zdGFudGlhdGVkU2lnbmF0dXJlKTsKIAkJCQl0aGlzLmNvbnRlbnRzW2xvY2Fs
Q29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgKG1ldGhvZFR5cGVJbmRleCA+PiA4KTsKIAkJCQl0
aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgbWV0aG9kVHlwZUlu
ZGV4OwkJCQkKKwkJCX0KKwkJCX0gZWxzZSBpZiAodGVtcCBpbnN0YW5jZW9mIFN5bnRoZXRpY01l
dGhvZEJpbmRpbmcgJiYgKChTeW50aGV0aWNNZXRob2RCaW5kaW5nKXRlbXApLnB1cnBvc2UgPT0g
U3ludGhldGljTWV0aG9kQmluZGluZy5DaGFubmVsaXNlUGFyYW1zVG9WYXJBcmdzKSB7CisJCQkJ
aWYgKGluZGV4Rm9yTWV0YUZhY3RvcnkgPT0gMCkgeworCQkJCQlpbmRleEZvck1ldGFGYWN0b3J5
ID0gdGhpcy5jb25zdGFudFBvb2wubGl0ZXJhbEluZGV4Rm9yTWV0aG9kSGFuZGxlKENsYXNzRmls
ZUNvbnN0YW50cy5NZXRob2RIYW5kbGVSZWZLaW5kSW52b2tlU3RhdGljLCBqYXZhTGFuZ0ludm9r
ZUxhbWJkYU1ldGFmYWN0b3J5LCAKKwkJCQkJCQlDb25zdGFudFBvb2wuTUVUQUZBQ1RPUlksIENv
bnN0YW50UG9vbC5KQVZBX0xBTkdfSU5WT0tFX0xBTUJEQU1FVEFGQUNUT1JZX01FVEFGQUNUT1JZ
X1NJR05BVFVSRSwgZmFsc2UpOworCQkJCX0KKwkJCQlTeW50aGV0aWNNZXRob2RCaW5kaW5nIHN5
bnRoZXRpYyA9IChTeW50aGV0aWNNZXRob2RCaW5kaW5nKSB0ZW1wOworCQkJCQorCQkJCXRoaXMu
Y29udGVudHNbbG9jYWxDb250ZW50c09mZnNldCsrXSA9IChieXRlKSAoaW5kZXhGb3JNZXRhRmFj
dG9yeSA+PiA4KTsKKwkJCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10gPSAo
Ynl0ZSkgaW5kZXhGb3JNZXRhRmFjdG9yeTsKKwkJCQkKKwkJCQkvLyB1MiBudW1fYm9vdHN0cmFw
X2FyZ3VtZW50cworCQkJCXRoaXMuY29udGVudHNbbG9jYWxDb250ZW50c09mZnNldCsrXSA9IDA7
CisJCQkJdGhpcy5jb250ZW50c1tsb2NhbENvbnRlbnRzT2Zmc2V0KytdID0gKGJ5dGUpIDM7CisJ
CQkJCisJCQkJaW50IGZ1bmN0aW9uYWxEZXNjcmlwdG9ySW5kZXggPSB0aGlzLmNvbnN0YW50UG9v
bC5saXRlcmFsSW5kZXhGb3JNZXRob2RUeXBlKHN5bnRoZXRpYy5pbnB1dE1ldGhvZC5vcmlnaW5h
bCgpLnNpZ25hdHVyZSgpKTsKKwkJCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVudHNPZmZzZXQr
K10gPSAoYnl0ZSkgKGZ1bmN0aW9uYWxEZXNjcmlwdG9ySW5kZXggPj4gOCk7CisJCQkJdGhpcy5j
b250ZW50c1tsb2NhbENvbnRlbnRzT2Zmc2V0KytdID0gKGJ5dGUpIGZ1bmN0aW9uYWxEZXNjcmlw
dG9ySW5kZXg7CisJCisJCQkJaW50IG1ldGhvZEhhbmRsZUluZGV4ID0gdGhpcy5jb25zdGFudFBv
b2wubGl0ZXJhbEluZGV4Rm9yTWV0aG9kSGFuZGxlKHN5bnRoZXRpYy5vcmlnaW5hbCgpKTsgLy8g
U3BlYWsgb2YgIiBpbXBsZW1lbnRhdGlvbiIgKGVyYXNlZCkgdmVyc2lvbiBoZXJlLCBhZGFwdGF0
aW9ucyBkZXNjcmliZWQgYmVsb3cuCisJCQkJdGhpcy5jb250ZW50c1tsb2NhbENvbnRlbnRzT2Zm
c2V0KytdID0gKGJ5dGUpIChtZXRob2RIYW5kbGVJbmRleCA+PiA4KTsKKwkJCQl0aGlzLmNvbnRl
bnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgbWV0aG9kSGFuZGxlSW5kZXg7CisJ
CisJCQkJaW50IG1ldGhvZFR5cGVJbmRleCA9IHRoaXMuY29uc3RhbnRQb29sLmxpdGVyYWxJbmRl
eEZvck1ldGhvZFR5cGUoc3ludGhldGljLmlucHV0TWV0aG9kLnNpZ25hdHVyZSgpKTsKKwkJCQl0
aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgKG1ldGhvZFR5cGVJ
bmRleCA+PiA4KTsKKwkJCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10gPSAo
Ynl0ZSkgbWV0aG9kVHlwZUluZGV4OwkJCQkJCQkJCiAJCQl9CiAJCX0KIAogCQlpbnQgYXR0cmli
dXRlTGVuZ3RoID0gbG9jYWxDb250ZW50c09mZnNldCAtIGF0dHJpYnV0ZUxlbmd0aFBvc2l0aW9u
IC0gNDsKIAkJdGhpcy5jb250ZW50c1thdHRyaWJ1dGVMZW5ndGhQb3NpdGlvbisrXSA9IChieXRl
KSAoYXR0cmlidXRlTGVuZ3RoID4+IDI0KTsKQEAgLTUxMTksMTAgKzUxNzYsMTggQEAKIAkJdGhp
cy5ib290c3RyYXBNZXRob2RzLmFkZChleHByZXNzaW9uKTsKIAkJLy8gUmVjb3JkIHdoaWNoIGJv
b3RzdHJhcCBtZXRob2Qgd2FzIGFzc2lnbmVkIHRvIHRoZSBleHByZXNzaW9uCiAJCWV4cHJlc3Np
b24uYm9vdHN0cmFwTWV0aG9kTnVtYmVyID0gdGhpcy5ib290c3RyYXBNZXRob2RzLnNpemUoKSAt
IDE7CiAJCXJldHVybiB0aGlzLmJvb3RzdHJhcE1ldGhvZHMuc2l6ZSgpIC0gMTsKIAl9CisJCisJ
cHVibGljIGludCByZWNvcmRCb290c3RyYXBNZXRob2QoU3ludGhldGljTWV0aG9kQmluZGluZyBz
bSkgeworCQlpZiAodGhpcy5ib290c3RyYXBNZXRob2RzID09IG51bGwpIHsKKwkJCXRoaXMuYm9v
dHN0cmFwTWV0aG9kcyA9IG5ldyBBcnJheUxpc3QoKTsKKwkJfQorCQl0aGlzLmJvb3RzdHJhcE1l
dGhvZHMuYWRkKHNtKTsKKwkJcmV0dXJuIHRoaXMuYm9vdHN0cmFwTWV0aG9kcy5zaXplKCkgLSAx
OworCX0KIAogCXB1YmxpYyB2b2lkIHJlc2V0KFNvdXJjZVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5n
KSB7CiAJCS8vIHRoZSBjb2RlIHN0cmVhbSBpcyByZWluaXRpYWxpemVkIGZvciBlYWNoIG1ldGhv
ZAogCQlmaW5hbCBDb21waWxlck9wdGlvbnMgb3B0aW9ucyA9IHR5cGVCaW5kaW5nLnNjb3BlLmNv
bXBpbGVyT3B0aW9ucygpOwogCQl0aGlzLnJlZmVyZW5jZUJpbmRpbmcgPSB0eXBlQmluZGluZzsK
ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvRnVuY3Rpb25hbEV4cHJlc3Npb24uamF2YSBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9hc3QvRnVuY3Rpb25hbEV4cHJlc3Npb24uamF2YQppbmRleCBlMWNmNjZlLi5kYzIxY2VmIDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXN0L0Z1bmN0aW9uYWxFeHByZXNzaW9uLmphdmEKKysrIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2FzdC9GdW5jdGlvbmFsRXhwcmVzc2lvbi5qYXZhCkBAIC01NywxMCArNTcsMTIgQEAKIAlw
dWJsaWMgQmxvY2tTY29wZSBlbmNsb3NpbmdTY29wZTsKIAlwcm90ZWN0ZWQgYm9vbGVhbiBlbGxp
cHNpc0FyZ3VtZW50OwogCXB1YmxpYyBpbnQgYm9vdHN0cmFwTWV0aG9kTnVtYmVyID0gLTE7CiAJ
cHJvdGVjdGVkIHN0YXRpYyBJRXJyb3JIYW5kbGluZ1BvbGljeSBzaWxlbnRFcnJvckhhbmRsaW5n
UG9saWN5ID0gRGVmYXVsdEVycm9ySGFuZGxpbmdQb2xpY2llcy5pZ25vcmVBbGxQcm9ibGVtcygp
OwogCXByaXZhdGUgYm9vbGVhbiBoYXNSZXBvcnRlZFNhbVByb2JsZW0gPSBmYWxzZTsKKwlwdWJs
aWMgTWV0aG9kQmluZGluZyBmaXJzdEJyaWRnZSA9IG51bGw7CisKIAogCXB1YmxpYyBGdW5jdGlv
bmFsRXhwcmVzc2lvbihDb21waWxhdGlvblJlc3VsdCBjb21waWxhdGlvblJlc3VsdCkgewogCQl0
aGlzLmNvbXBpbGF0aW9uUmVzdWx0ID0gY29tcGlsYXRpb25SZXN1bHQ7CiAJfQogCQpkaWZmIC0t
Z2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2FzdC9SZWZlcmVuY2VFeHByZXNzaW9uLmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1Jl
ZmVyZW5jZUV4cHJlc3Npb24uamF2YQppbmRleCA4MTIzZTczLi41YzMxMjljIDEwMDY0NAotLS0g
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvYXN0L1JlZmVyZW5jZUV4cHJlc3Npb24uamF2YQorKysgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1Jl
ZmVyZW5jZUV4cHJlc3Npb24uamF2YQpAQCAtNDUsMTAgKzQ1LDEyIEBACiBpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5BcnJheUJpbmRpbmc7CiBpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5CaW5kaW5nOwogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuQmxvY2tTY29wZTsKIGlt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkluZmVyZW5jZUNv
bnRleHQxODsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3Vw
Lkludm9jYXRpb25TaXRlOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci5sb29rdXAuTG9va3VwRW52aXJvbm1lbnQ7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmxvb2t1cC5NZW1iZXJUeXBlQmluZGluZzsKIGltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLk1ldGhvZEJpbmRpbmc7CiBpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5OZXN0ZWRUeXBlQmluZGluZzsK
IGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlBhcmFtZXRl
cml6ZWRUeXBlQmluZGluZzsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIubG9va3VwLlBvbHlUeXBlQmluZGluZzsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIubG9va3VwLlByb2JsZW1SZWFzb25zOwpAQCAtMTcwLDE2ICsxNzIsOTIgQEAK
IAkJfQogCQlidWZmZXIuYXBwZW5kKCcpJyk7CiAJCWJ1ZmZlci5hcHBlbmQoJ0wnKTsKIAkJYnVm
ZmVyLmFwcGVuZCh0aGlzLnJlc29sdmVkVHlwZS5jb25zdGFudFBvb2xOYW1lKCkpOwogCQlidWZm
ZXIuYXBwZW5kKCc7Jyk7Ci0JCWludCBpbnZva2VEeW5hbWljTnVtYmVyID0gY29kZVN0cmVhbS5j
bGFzc0ZpbGUucmVjb3JkQm9vdHN0cmFwTWV0aG9kKHRoaXMpOworCQlpbnQgaW52b2tlRHluYW1p
Y051bWJlcjsKKwkJaWYgKHRoaXMuYmluZGluZy5pc1ZhcmFyZ3MoKSAmJiAKKwkJCQkhKHRoaXMu
YmluZGluZyBpbnN0YW5jZW9mIFN5bnRoZXRpY01ldGhvZEJpbmRpbmcpICYmIAorCQkJCSF0aGlz
LmJpbmRpbmcuYXJlUGFyYW1ldGVyRXJhc3VyZXNFcXVhbCh0aGlzLmRlc2NyaXB0b3IpICYmIAor
CQkJCSF2YXJBcmdzUGFyYW1ldGVyc09uZU9uT25lQ29ycmVzcG9uZGVuY2VDb25zaWRlcmluZ0Jv
eGluZyh0aGlzLmJpbmRpbmcucGFyYW1ldGVycywgdGhpcy5kZXNjcmlwdG9yLnBhcmFtZXRlcnMs
IGN1cnJlbnRTY29wZSkpIHsKKwkJCVN5bnRoZXRpY01ldGhvZEJpbmRpbmcgc20gPSAKKwkJCQkJ
c291cmNlVHlwZS5hZGRTeW50aGV0aWNNZXRob2RGb3JBcmd1bWVudENoYW5uZWxpbmdGb3JWYXJB
cmdzKCB0aGlzLmRlc2NyaXB0b3IsIHRoaXMuYmluZGluZywgZmFsc2UsIAorCQkJCQkJCQkJCQkJ
CXRoaXMubGhzIGluc3RhbmNlb2YgQWxsb2NhdGlvbkV4cHJlc3Npb24gPyB0aGlzLnJlY2VpdmVy
VHlwZSA6IG51bGwsCisJCQkJCQkJCQkJCQkJKHRoaXMuYmluZGluZy5kZWNsYXJpbmdDbGFzcyBp
bnN0YW5jZW9mIE1lbWJlclR5cGVCaW5kaW5nKSAmJiAKKwkJCQkJCQkJCQkJCQkJKGlzU3ViQ2xh
c3NPZigoTWVtYmVyVHlwZUJpbmRpbmcpdGhpcy5iaW5kaW5nLmRlY2xhcmluZ0NsYXNzLCBzb3Vy
Y2VUeXBlKSkgPyAKKwkJCQkJCQkJCQkJCQkJCQlzb3VyY2VUeXBlIDogbnVsbCk7CisJCQlpZiAo
c20uaW52b2tlRHluYW1pY051bWJlciA9PSBTeW50aGV0aWNNZXRob2RCaW5kaW5nLk5PVF9CT09U
U1RSQVBQRUQpIHsKKwkJCQlzbS5pbnZva2VEeW5hbWljTnVtYmVyID0gaW52b2tlRHluYW1pY051
bWJlciA9IGNvZGVTdHJlYW0uY2xhc3NGaWxlLnJlY29yZEJvb3RzdHJhcE1ldGhvZChzbSk7CisJ
CQl9IGVsc2UgeworCQkJCWludm9rZUR5bmFtaWNOdW1iZXIgPSBzbS5pbnZva2VEeW5hbWljTnVt
YmVyOworCQkJfQorCQkJCisJCX0gZWxzZSB7CisJCQlpbnZva2VEeW5hbWljTnVtYmVyID0gY29k
ZVN0cmVhbS5jbGFzc0ZpbGUucmVjb3JkQm9vdHN0cmFwTWV0aG9kKHRoaXMpOworCQl9CiAJCWNv
ZGVTdHJlYW0uaW52b2tlRHluYW1pYyhpbnZva2VEeW5hbWljTnVtYmVyLCBhcmd1bWVudHNTaXpl
LCAxLCB0aGlzLmRlc2NyaXB0b3Iuc2VsZWN0b3IsIGJ1ZmZlci50b1N0cmluZygpLnRvQ2hhckFy
cmF5KCksIAogCQkJCXRoaXMuaXNDb25zdHJ1Y3RvclJlZmVyZW5jZSgpLCAodGhpcy5saHMgaW5z
dGFuY2VvZiBUeXBlUmVmZXJlbmNlPyAoVHlwZVJlZmVyZW5jZSkgdGhpcy5saHMgOiBudWxsKSwg
dGhpcy50eXBlQXJndW1lbnRzKTsKIAkJaWYgKCF2YWx1ZVJlcXVpcmVkKQogCQkJY29kZVN0cmVh
bS5wb3AoKTsKIAkJY29kZVN0cmVhbS5yZWNvcmRQb3NpdGlvbnNGcm9tKHBjLCB0aGlzLnNvdXJj
ZVN0YXJ0KTsKKwl9CisJCisJcHJpdmF0ZSBzdGF0aWMgYm9vbGVhbiBpc1N1YkNsYXNzT2YoU291
cmNlVHlwZUJpbmRpbmcgdDEsIFNvdXJjZVR5cGVCaW5kaW5nIHQyKSB7CisJCVR5cGVCaW5kaW5n
IHQgPSB0MTsKKwkJd2hpbGUodCAhPSBudWxsKSB7CisJCQlpZiAodCA9PSB0MikgeworCQkJCXJl
dHVybiB0cnVlOworCQkJfQorCQkJdCA9IHQuc3VwZXJjbGFzcygpOworCQl9CisJCXJldHVybiBm
YWxzZTsKKwl9CisKKwlwdWJsaWMgYm9vbGVhbiB2YXJBcmdzUGFyYW1ldGVyc09uZU9uT25lQ29y
cmVzcG9uZGVuY2VDb25zaWRlcmluZ0JveGluZyAoVHlwZUJpbmRpbmcgW10gdGIxLCBUeXBlQmlu
ZGluZyBbXSB0YjIsIFNjb3BlIHNjb3BlKSB7CisJCWludCBsZW5ndGg7CisJCWlmICh0YjEgPT0g
dGIyKSB7CisJCQlyZXR1cm4gdHJ1ZTsKKwkJfQorCQlpZiAoKHRiMSA9PSBudWxsICYmIHRiMiAh
PSBudWxsKSB8fCAodGIyID09IG51bGwgJiYgdGIxICE9IG51bGwpIHx8ICh0YjEubGVuZ3RoICE9
IHRiMi5sZW5ndGgpKSB7CisJCQlyZXR1cm4gZmFsc2U7CisJCX0KKwkJaWYgKChsZW5ndGggPSB0
YjEubGVuZ3RoKSA9PSAwKSB7CisJCQlyZXR1cm4gdHJ1ZTsKKwkJfQorCQlpZiAoISh0YjFbbGVu
Z3RoIC0gMV0gaW5zdGFuY2VvZiBBcnJheUJpbmRpbmcpIHx8ICEodGIyW2xlbmd0aCAtIDFdIGlu
c3RhbmNlb2YgQXJyYXlCaW5kaW5nKSkgeworCQkJcmV0dXJuIGZhbHNlOworCQl9CisJCUxvb2t1
cEVudmlyb25tZW50IGVudmlyb25tZW50ID0gc2NvcGUuZW52aXJvbm1lbnQoKTsKKwkJVHlwZUJp
bmRpbmcgdHlwZTEgPSAoKEFycmF5QmluZGluZyl0YjFbbGVuZ3RoIC0gMV0pLmVsZW1lbnRzVHlw
ZSgpOworCQl0eXBlMSA9IHR5cGUxLmlzQmFzZVR5cGUoKSA/IGVudmlyb25tZW50LmNvbXB1dGVC
b3hpbmdUeXBlKHR5cGUxKSA6IHR5cGUxOworCQlUeXBlQmluZGluZyB0eXBlMiA9ICgoQXJyYXlC
aW5kaW5nKXRiMltsZW5ndGggLSAxXSkuZWxlbWVudHNUeXBlKCk7CisJCXR5cGUyID0gdHlwZTIu
aXNCYXNlVHlwZSgpID8gZW52aXJvbm1lbnQuY29tcHV0ZUJveGluZ1R5cGUodHlwZTIpIDogdHlw
ZTI7CisJCWlmICh0eXBlMS5pZCAhPSB0eXBlMi5pZCkgeworCQkJcmV0dXJuIGZhbHNlOworCQl9
CisJCWZvciAoaW50IGkgPSAwOyBpIDwgbGVuZ3RoIC0gMTsgaSsrKSB7CisJCQlUeXBlQmluZGlu
ZyB0MSA9IHRiMVtpXS5pc0Jhc2VUeXBlKCkgPyBlbnZpcm9ubWVudC5jb21wdXRlQm94aW5nVHlw
ZSh0YjFbaV0pIDogdGIxW2ldOworCQkJVHlwZUJpbmRpbmcgdDIgPSB0YjJbaV0uaXNCYXNlVHlw
ZSgpID8gZW52aXJvbm1lbnQuY29tcHV0ZUJveGluZ1R5cGUodGIyW2ldKSA6IHRiMltpXTsKKwkJ
CWlmKHQxLmlkICE9IHQyLmlkKSB7CisJCQkJcmV0dXJuIGZhbHNlOworCQkJfQorCQl9CQkKKwkJ
cmV0dXJuIHRydWU7CisJfQorCQorCXByaXZhdGUgU3ludGhldGljTWV0aG9kQmluZGluZyBnZXRB
cHByb3ByaWF0ZVN5bnRoZXRpY01ldGhvZChNZXRob2RCaW5kaW5nIGNvZGVnZW5CaW5kaW5nLCBT
b3VyY2VUeXBlQmluZGluZyBkZXN0aW5hdGlvblR5cGUsIGJvb2xlYW4gaXNTdXBlckFjY2Vzcykg
eworCQlpZiAoY29kZWdlbkJpbmRpbmcuaXNWYXJhcmdzKCkgJiYgIShjb2RlZ2VuQmluZGluZyBp
bnN0YW5jZW9mIFN5bnRoZXRpY01ldGhvZEJpbmRpbmcpICYmICFjb2RlZ2VuQmluZGluZy5hcmVQ
YXJhbWV0ZXJFcmFzdXJlc0VxdWFsKHRoaXMuZGVzY3JpcHRvcikpIHsKKwkJCVNvdXJjZVR5cGVC
aW5kaW5nIGIgPSB0aGlzLmVuY2xvc2luZ1Njb3BlLmNsYXNzU2NvcGUoKS5yZWZlcmVuY2VDb250
ZXh0LmJpbmRpbmc7CisJCQlpZiAoYiBpbnN0YW5jZW9mIE1lbWJlclR5cGVCaW5kaW5nICYmIGIg
IT0gZGVzdGluYXRpb25UeXBlKSB7CisJCQkJdGhpcy5maXJzdEJyaWRnZSA9IGIuYWRkU3ludGhl
dGljTWV0aG9kRm9yQXJndW1lbnRDaGFubmVsaW5nRm9yVmFyQXJncyh0aGlzLmRlc2NyaXB0b3Is
IHRoaXMuYmluZGluZywgaXNTdXBlckFjY2VzcywgdGhpcy5saHMgaW5zdGFuY2VvZiBBbGxvY2F0
aW9uRXhwcmVzc2lvbiA/IHRoaXMucmVjZWl2ZXJUeXBlIDogbnVsbCwgbnVsbCk7CisJCQkJcmV0
dXJuICgoU3ludGhldGljTWV0aG9kQmluZGluZyl0aGlzLmZpcnN0QnJpZGdlKS5uZXh0QnJpZGdl
ID0gZGVzdGluYXRpb25UeXBlLmFkZFN5bnRoZXRpY01ldGhvZChjb2RlZ2VuQmluZGluZywgaXNT
dXBlckFjY2Vzcyk7CQkJCQorCQkJfSBlbHNlIHsKKwkJCQlyZXR1cm4gZGVzdGluYXRpb25UeXBl
LmFkZFN5bnRoZXRpY01ldGhvZEZvckFyZ3VtZW50Q2hhbm5lbGluZ0ZvclZhckFyZ3ModGhpcy5k
ZXNjcmlwdG9yLCB0aGlzLmJpbmRpbmcsIGlzU3VwZXJBY2Nlc3MsIHRoaXMubGhzIGluc3RhbmNl
b2YgQWxsb2NhdGlvbkV4cHJlc3Npb24gPyB0aGlzLnJlY2VpdmVyVHlwZSA6IG51bGwsIG51bGwp
OworCQkJfQorCQl9IGVsc2UgeworCQkJcmV0dXJuIGRlc3RpbmF0aW9uVHlwZS5hZGRTeW50aGV0
aWNNZXRob2QoY29kZWdlbkJpbmRpbmcsIGlzU3VwZXJBY2Nlc3MpOworCQl9CQkKIAl9CiAJCiAJ
cHVibGljIHZvaWQgbWFuYWdlU3ludGhldGljQWNjZXNzSWZOZWNlc3NhcnkoQmxvY2tTY29wZSBj
dXJyZW50U2NvcGUsIEZsb3dJbmZvIGZsb3dJbmZvKSB7CiAJCQogCQlpZiAoKGZsb3dJbmZvLnRh
Z0JpdHMgJiBGbG93SW5mby5VTlJFQUNIQUJMRV9PUl9ERUFEKSAhPSAwIHx8IHRoaXMuYmluZGlu
ZyA9PSBudWxsIHx8ICF0aGlzLmJpbmRpbmcuaXNWYWxpZEJpbmRpbmcoKSkgCkBAIC0yMDIsMTEg
KzI4MCwxMSBAQAogCQl9CiAJCiAJCS8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tICAgT25seSBtZXRob2QgcmVmZXJlbmNlcyBmcm9tIG5vdyBvbiAtLS0tLS0tLS0tLQogCQlp
ZiAodGhpcy5iaW5kaW5nLmlzUHJpdmF0ZSgpKSB7CiAJCQlpZiAoVHlwZUJpbmRpbmcubm90RXF1
YWxzKGVuY2xvc2luZ1NvdXJjZVR5cGUsIGNvZGVnZW5CaW5kaW5nLmRlY2xhcmluZ0NsYXNzKSl7
Ci0JCQkJdGhpcy5zeW50aGV0aWNBY2Nlc3NvciA9ICgoU291cmNlVHlwZUJpbmRpbmcpY29kZWdl
bkJpbmRpbmcuZGVjbGFyaW5nQ2xhc3MpLmFkZFN5bnRoZXRpY01ldGhvZChjb2RlZ2VuQmluZGlu
ZywgZmFsc2UgLyogbm90IHN1cGVyIGFjY2VzcyAqLyk7CisJCQkJdGhpcy5zeW50aGV0aWNBY2Nl
c3NvciA9IGdldEFwcHJvcHJpYXRlU3ludGhldGljTWV0aG9kKGNvZGVnZW5CaW5kaW5nLCAoKFNv
dXJjZVR5cGVCaW5kaW5nKWNvZGVnZW5CaW5kaW5nLmRlY2xhcmluZ0NsYXNzKSwgZmFsc2UgLyog
bm90IHN1cGVyIGFjY2VzcyAqLyk7CiAJCQkJY3VycmVudFNjb3BlLnByb2JsZW1SZXBvcnRlcigp
Lm5lZWRUb0VtdWxhdGVNZXRob2RBY2Nlc3MoY29kZWdlbkJpbmRpbmcsIHRoaXMpOwogCQkJfQog
CQkJcmV0dXJuOwogCQl9CiAJCQpAQCAtMjE3LDExICsyOTUsMTEgQEAKIAkJCQlUeXBlUmVmZXJl
bmNlIHF1YWxpZmljYXRpb24gPSBxdWFsaWZpZWRTdXBlclJlZmVyZW5jZS5xdWFsaWZpY2F0aW9u
OwogCQkJCWlmICghcXVhbGlmaWNhdGlvbi5yZXNvbHZlZFR5cGUuaXNJbnRlcmZhY2UoKSkgLy8g
d2UgY2FuJ3QgZHJvcCB0aGUgYnJpZGdlIGluIEksIGl0IG1heSBub3QgZXZlbiBiZSBhIHNvdXJj
ZSB0eXBlLgogCQkJCQlkZXN0aW5hdGlvblR5cGUgPSAoU291cmNlVHlwZUJpbmRpbmcpIChxdWFs
aWZpZWRTdXBlclJlZmVyZW5jZS5jdXJyZW50Q29tcGF0aWJsZVR5cGUpOwogCQkJfQogCQkJCi0J
CQl0aGlzLnN5bnRoZXRpY0FjY2Vzc29yID0gZGVzdGluYXRpb25UeXBlLmFkZFN5bnRoZXRpY01l
dGhvZChjb2RlZ2VuQmluZGluZywgdHJ1ZSk7CisJCQl0aGlzLnN5bnRoZXRpY0FjY2Vzc29yID0g
Z2V0QXBwcm9wcmlhdGVTeW50aGV0aWNNZXRob2QoY29kZWdlbkJpbmRpbmcsIGRlc3RpbmF0aW9u
VHlwZSwgdHJ1ZSk7CiAJCQljdXJyZW50U2NvcGUucHJvYmxlbVJlcG9ydGVyKCkubmVlZFRvRW11
bGF0ZU1ldGhvZEFjY2Vzcyhjb2RlZ2VuQmluZGluZywgdGhpcyk7CiAJCQlyZXR1cm47CiAJCX0K
IAkJCiAJCWlmICh0aGlzLmJpbmRpbmcuaXNQcm90ZWN0ZWQoKSAmJiAodGhpcy5iaXRzICYgQVNU
Tm9kZS5EZXB0aE1BU0spICE9IDAgJiYgY29kZWdlbkJpbmRpbmcuZGVjbGFyaW5nQ2xhc3MuZ2V0
UGFja2FnZSgpICE9IGVuY2xvc2luZ1NvdXJjZVR5cGUuZ2V0UGFja2FnZSgpKSB7CmRpZmYgLS1n
aXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvY29kZWdlbi9Db2RlU3RyZWFtLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY29kZWdlbi9Db2Rl
U3RyZWFtLmphdmEKaW5kZXggNDAyZDg0ZC4uMzBmNzNmYiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Nv
ZGVnZW4vQ29kZVN0cmVhbS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jb2RlZ2VuL0NvZGVTdHJlYW0uamF2
YQpAQCAtMjk2MiwxMCArMjk2MiwxMjMgQEAKIAkJCQl0aGlzLmNoZWNrY2FzdChhY2Nlc3NFcmFz
dXJlKTsgLy8gZm9yIGJyaWRnZSBtZXRob2RzCiAJCQl9CiAJCQlhcmV0dXJuKCk7CiAJfQogfQor
cHVibGljIHZvaWQgZ2VuZXJhdGVTeW50aGV0aWNCb2R5Rm9yTWV0aG9kQWNjZXNzRm9yVmFyQXJn
cyhTeW50aGV0aWNNZXRob2RCaW5kaW5nIGFjY2Vzc01ldGhvZCkgeworCWluaXRpYWxpemVNYXhM
b2NhbHMoYWNjZXNzTWV0aG9kKTsKKwlNZXRob2RCaW5kaW5nIHRhcmdldE1ldGhvZCA9IGFjY2Vz
c01ldGhvZC50YXJnZXRNZXRob2Q7CisJVHlwZUJpbmRpbmdbXSBwYXJhbWV0ZXJzID0gdGFyZ2V0
TWV0aG9kLnBhcmFtZXRlcnM7CisJaW50IGxlbmd0aCA9IHBhcmFtZXRlcnMubGVuZ3RoOworCWlm
ICghKHBhcmFtZXRlcnNbbGVuZ3RoIC0gMV0gaW5zdGFuY2VvZiBBcnJheUJpbmRpbmcpKSB7CisJ
CXJldHVybjsKKwl9CisJVHlwZUJpbmRpbmdbXSBhcmd1bWVudHMgPSBhY2Nlc3NNZXRob2QucHVy
cG9zZSA9PSBTeW50aGV0aWNNZXRob2RCaW5kaW5nLkNoYW5uZWxpc2VQYXJhbXNUb1ZhckFyZ3MK
KwkJCQkJCQkJCQkJCQk/IGFjY2Vzc01ldGhvZC5wYXJhbWV0ZXJzCisJCQkJCQkJCQkJCQkJOiBu
dWxsOworCWludCByZXNvbHZlZFBvc2l0aW9uLCBhcnJheUxlbmd0aCA9IDA7CisJaWYgKHRhcmdl
dE1ldGhvZC5pc1N0YXRpYygpKQorCQlyZXNvbHZlZFBvc2l0aW9uID0gMDsKKwllbHNlIGlmICh0
YXJnZXRNZXRob2QuaXNDb25zdHJ1Y3RvcigpKSB7CisJCXJlc29sdmVkUG9zaXRpb24gPSAwOwor
CQluZXdfKHRhcmdldE1ldGhvZC5kZWNsYXJpbmdDbGFzcyk7CisJCWR1cCgpOworCQlpZiAoYWNj
ZXNzTWV0aG9kLmFuY2VzdG9yICE9IG51bGwpIHsKKwkJCWFsb2FkXzAoKTsKKwkJCXN3aXRjaChw
YXJhbWV0ZXJzWzBdLmlkKSB7CisJCQkJY2FzZSBUeXBlSWRzLlRfbG9uZyA6CisJCQkJY2FzZSBU
eXBlSWRzLlRfZG91YmxlIDoKKwkJCQkJcmVzb2x2ZWRQb3NpdGlvbiArPSAyOworCQkJCQlicmVh
azsKKwkJCQlkZWZhdWx0IDoKKwkJCQkJcmVzb2x2ZWRQb3NpdGlvbisrOworCQkJCQlicmVhazsK
KwkJCX0KKwkJfQorCX0gZWxzZSB7CisJCWFsb2FkXzAoKTsKKwkJcmVzb2x2ZWRQb3NpdGlvbiA9
IDE7CisJCWlmIChhY2Nlc3NNZXRob2QuaXNTdXBlckFjY2VzcykgeworCQkJYXJyYXlMZW5ndGgr
KzsKKwkJfQorCX0KKwlmb3IgKGludCBpID0gMDsgaSA8IGxlbmd0aCAtIDE7IGkrKykgeworCSAg
ICBUeXBlQmluZGluZyBwYXJhbWV0ZXIgPSBwYXJhbWV0ZXJzW2ldOworCSAgICBpZiAoYXJndW1l
bnRzICE9IG51bGwpIHsgLy8gZm9yIGJyaWRnZSBtZXRob2RzCisJCSAgICBUeXBlQmluZGluZyBh
cmd1bWVudCA9IGFyZ3VtZW50c1tpXTsKKwkJCWxvYWQoYXJndW1lbnQsIHJlc29sdmVkUG9zaXRp
b24pOworCSAgICB9IGVsc2UgeworCQkJbG9hZChwYXJhbWV0ZXIsIHJlc29sdmVkUG9zaXRpb24p
OworCQl9CisJCXN3aXRjaChwYXJhbWV0ZXIuaWQpIHsKKwkJCWNhc2UgVHlwZUlkcy5UX2xvbmcg
OgorCQkJY2FzZSBUeXBlSWRzLlRfZG91YmxlIDoKKwkJCQlyZXNvbHZlZFBvc2l0aW9uICs9IDI7
CisJCQkJYnJlYWs7CisJCQlkZWZhdWx0IDoKKwkJCQlyZXNvbHZlZFBvc2l0aW9uKys7CisJCQkJ
YnJlYWs7CisJCX0KKwl9CisJYXJyYXlMZW5ndGggKz0gYXJndW1lbnRzLmxlbmd0aCAtIHJlc29s
dmVkUG9zaXRpb247IC8vICsgKGFjY2Vzc01ldGhvZC5pc1N1cGVyQWNjZXNzID8gMSA6IDApOwor
CWdlbmVyYXRlSW5saW5lZFZhbHVlKGFycmF5TGVuZ3RoKTsKKwlBcnJheUJpbmRpbmcgdmFyQXJn
VHlwZTsKKwluZXdBcnJheSh2YXJBcmdUeXBlID0gKEFycmF5QmluZGluZylwYXJhbWV0ZXJzW2xl
bmd0aCAtIDFdKTsKKwlmb3IoaW50IGFycmF5SW5kZXggPSAwOyBhcnJheUluZGV4IDwgYXJyYXlM
ZW5ndGg7IGFycmF5SW5kZXgrKykgeworCQlkdXAoKTsKKwkJZ2VuZXJhdGVJbmxpbmVkVmFsdWUo
YXJyYXlJbmRleCk7CisJCWxvYWQodmFyQXJnVHlwZS5lbGVtZW50c1R5cGUoKSwgcmVzb2x2ZWRQ
b3NpdGlvbisrKTsKKwkJYXJyYXlBdFB1dCh2YXJBcmdUeXBlLmVsZW1lbnRzVHlwZSgpLmlkLCBm
YWxzZSk7CisJfQorCWlmIChhY2Nlc3NNZXRob2QubmV4dEJyaWRnZSAhPSBudWxsKSB7CisJCXRh
cmdldE1ldGhvZCA9IGFjY2Vzc01ldGhvZC5uZXh0QnJpZGdlOworCX0KKwlpZiAodGFyZ2V0TWV0
aG9kLmlzU3RhdGljKCkpCisJCWludm9rZShPcGNvZGVzLk9QQ19pbnZva2VzdGF0aWMsIHRhcmdl
dE1ldGhvZCwgdGFyZ2V0TWV0aG9kLmRlY2xhcmluZ0NsYXNzKTsKKwllbHNlIHsKKwkJaWYgKHRh
cmdldE1ldGhvZC5pc0NvbnN0cnVjdG9yKCkgfHwgdGFyZ2V0TWV0aG9kLmlzUHJpdmF0ZSgpIHx8
IGFjY2Vzc01ldGhvZC5pc1N1cGVyQWNjZXNzKXsKKwkJCWludm9rZShPcGNvZGVzLk9QQ19pbnZv
a2VzcGVjaWFsLCB0YXJnZXRNZXRob2QsIHRhcmdldE1ldGhvZC5kZWNsYXJpbmdDbGFzcyk7CisJ
CX0gZWxzZSB7CisJCQlpZiAodGFyZ2V0TWV0aG9kLmRlY2xhcmluZ0NsYXNzLmlzSW50ZXJmYWNl
KCkpIHsKKwkJCQlpbnZva2UoT3Bjb2Rlcy5PUENfaW52b2tlaW50ZXJmYWNlLCB0YXJnZXRNZXRo
b2QsIG51bGwgLyogZGVmYXVsdCBkZWNsYXJpbmdDbGFzcyAqLyk7CisJCQl9IGVsc2UgeworCQkJ
CWludm9rZShPcGNvZGVzLk9QQ19pbnZva2V2aXJ0dWFsLCB0YXJnZXRNZXRob2QsIHRhcmdldE1l
dGhvZC5kZWNsYXJpbmdDbGFzcyk7CisJCQl9CisJCX0KKwl9CisJaWYgKHRhcmdldE1ldGhvZC5y
ZXR1cm5UeXBlLmlkICE9IFR5cGVJZHMuVF92b2lkICYmIGFjY2Vzc01ldGhvZC5yZXR1cm5UeXBl
LmlkID09IFR5cGVJZHMuVF92b2lkKSB7CisJCXBvcCgpOworCX0KKwlzd2l0Y2ggKGFjY2Vzc01l
dGhvZC5yZXR1cm5UeXBlLmlkKSB7CisJCWNhc2UgVHlwZUlkcy5UX3ZvaWQgOgorCQkJcmV0dXJu
XygpOworCQkJYnJlYWs7CisJCWNhc2UgVHlwZUlkcy5UX2Jvb2xlYW4gOgorCQljYXNlIFR5cGVJ
ZHMuVF9ieXRlIDoKKwkJY2FzZSBUeXBlSWRzLlRfY2hhciA6CisJCWNhc2UgVHlwZUlkcy5UX3No
b3J0IDoKKwkJY2FzZSBUeXBlSWRzLlRfaW50IDoKKwkJCWlyZXR1cm4oKTsKKwkJCWJyZWFrOwor
CQljYXNlIFR5cGVJZHMuVF9sb25nIDoKKwkJCWxyZXR1cm4oKTsKKwkJCWJyZWFrOworCQljYXNl
IFR5cGVJZHMuVF9mbG9hdCA6CisJCQlmcmV0dXJuKCk7CisJCQlicmVhazsKKwkJY2FzZSBUeXBl
SWRzLlRfZG91YmxlIDoKKwkJCWRyZXR1cm4oKTsKKwkJCWJyZWFrOworCQlkZWZhdWx0IDoKKwkJ
CVR5cGVCaW5kaW5nIGFjY2Vzc0VyYXN1cmUgPSBhY2Nlc3NNZXRob2QucmV0dXJuVHlwZS5lcmFz
dXJlKCk7CisJCQlUeXBlQmluZGluZyBtYXRjaCA9IHRhcmdldE1ldGhvZC5yZXR1cm5UeXBlLmZp
bmRTdXBlclR5cGVPcmlnaW5hdGluZ0Zyb20oYWNjZXNzRXJhc3VyZSk7CisJCQlpZiAobWF0Y2gg
PT0gbnVsbCkgeworCQkJCXRoaXMuY2hlY2tjYXN0KGFjY2Vzc0VyYXN1cmUpOyAvLyBmb3IgYnJp
ZGdlIG1ldGhvZHMKKwkJCX0KKwkJCWFyZXR1cm4oKTsKKwl9Cit9CiAvKiogV2hlbiBnZW5lcmF0
aW5nIFN1cGVyTWV0b2RBY2Nlc3MgdG93YXJkcyB0YXJnZXRNZXRob2QsCiAgKiAgZmluZCB0aGUg
c3VpdGFibGUgZGlyZWN0IHN1cGVyIHR5cGUsIHRoYXQgd2lsbCBldmVudHVhbGx5IGxlYWQgdG8g
dGFyZ2V0TWV0aG9kLmRlY2xhcmluZ0NsYXNzLiovCiBSZWZlcmVuY2VCaW5kaW5nIGZpbmREaXJl
Y3RTdXBlclR5cGVUb3dhcmRzKFN5bnRoZXRpY01ldGhvZEJpbmRpbmcgYWNjZXNzTWV0aG9kLCBN
ZXRob2RCaW5kaW5nIHRhcmdldE1ldGhvZCkgewogCVJlZmVyZW5jZUJpbmRpbmcgY3VycmVudFR5
cGUgPSBhY2Nlc3NNZXRob2QuZGVjbGFyaW5nQ2xhc3M7CiAJUmVmZXJlbmNlQmluZGluZyBzdXBl
cmNsYXNzID0gY3VycmVudFR5cGUuc3VwZXJjbGFzcygpOwpAQCAtNTY4OCwxMiArNTgwMSwxNiBA
QAogCWxvYWQobG9jYWxCaW5kaW5nLnR5cGUsIGxvY2FsQmluZGluZy5yZXNvbHZlZFBvc2l0aW9u
KTsKIH0KIAogcHJvdGVjdGVkIGZpbmFsIHZvaWQgbG9hZChUeXBlQmluZGluZyB0eXBlQmluZGlu
ZywgaW50IHJlc29sdmVkUG9zaXRpb24pIHsKIAl0aGlzLmNvdW50TGFiZWxzID0gMDsKKwlsb2Fk
KHR5cGVCaW5kaW5nLmlkLCByZXNvbHZlZFBvc2l0aW9uKTsKK30KKworcHJvdGVjdGVkIGZpbmFs
IHZvaWQgbG9hZChpbnQgdHlwZUlkLCBpbnQgcmVzb2x2ZWRQb3NpdGlvbikgewogCS8vIFVzaW5n
IGRlZGljYXRlZCBpbnQgYnl0ZWNvZGUKLQlzd2l0Y2godHlwZUJpbmRpbmcuaWQpIHsKKwlzd2l0
Y2godHlwZUlkKSB7CiAJCWNhc2UgVHlwZUlkcy5UX2ludCA6CiAJCWNhc2UgVHlwZUlkcy5UX2J5
dGUgOgogCQljYXNlIFR5cGVJZHMuVF9jaGFyIDoKIAkJY2FzZSBUeXBlSWRzLlRfYm9vbGVhbiA6
CiAJCWNhc2UgVHlwZUlkcy5UX3Nob3J0IDoKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvU291
cmNlVHlwZUJpbmRpbmcuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvU291cmNlVHlwZUJpbmRpbmcuamF2
YQppbmRleCA3NjUzZjI1Li40YjhlNTNkIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1NvdXJj
ZVR5cGVCaW5kaW5nLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Tb3VyY2VUeXBlQmluZGluZy5q
YXZhCkBAIC04MCwxMiArODAsMTMgQEAKIAkvLyBTeW50aGV0aWNzIGFyZSBzZXBhcmF0ZWQgaW50
byA0IGNhdGVnb3JpZXM6IG1ldGhvZHMsIHN1cGVyIG1ldGhvZHMsIGZpZWxkcywgY2xhc3MgbGl0
ZXJhbHMgYW5kIGJyaWRnZSBtZXRob2RzCiAJLy8gaWYgYSBuZXcgY2F0ZWdvcnkgaXMgYWRkZWQs
IGFsc28gaW5jcmVtZW50IE1BWF9TWU5USEVUSUNTCiAJcHJpdmF0ZSBmaW5hbCBzdGF0aWMgaW50
IE1FVEhPRF9FTVVMID0gMDsKIAlwcml2YXRlIGZpbmFsIHN0YXRpYyBpbnQgRklFTERfRU1VTCA9
IDE7CiAJcHJpdmF0ZSBmaW5hbCBzdGF0aWMgaW50IENMQVNTX0xJVEVSQUxfRU1VTCA9IDI7CisJ
cHJpdmF0ZSBmaW5hbCBzdGF0aWMgaW50IE1FVEhPRF9QQUlSX0JSSURHRSA9IDM7CiAKLQlwcml2
YXRlIGZpbmFsIHN0YXRpYyBpbnQgTUFYX1NZTlRIRVRJQ1MgPSAzOworCXByaXZhdGUgZmluYWwg
c3RhdGljIGludCBNQVhfU1lOVEhFVElDUyA9IDQ7CiAKIAlIYXNoTWFwW10gc3ludGhldGljczsK
IAljaGFyW10gZ2VuZXJpY1JlZmVyZW5jZVR5cGVTaWduYXR1cmU7CiAKIAlwcml2YXRlIFNpbXBs
ZUxvb2t1cFRhYmxlIHN0b3JlZEFubm90YXRpb25zID0gbnVsbDsgLy8ga2V5cyBhcmUgdGhpcyBS
ZWZlcmVuY2VCaW5kaW5nICYgaXRzIGZpZWxkcyBhbmQgbWV0aG9kcywgdmFsdWUgaXMgYW4gQW5u
b3RhdGlvbkhvbGRlcgpAQCAtNzc5LDEwICs3ODAsNzAgQEAKIAkJCWFjY2Vzc29yc1swXSA9IGFj
Y2Vzc01ldGhvZDsKIAkJfQogCX0KIAlyZXR1cm4gYWNjZXNzTWV0aG9kOwogfQorCitwdWJsaWMg
U3ludGhldGljTWV0aG9kQmluZGluZyBhZGRTeW50aGV0aWNNZXRob2RGb3JBcmd1bWVudENoYW5u
ZWxpbmdGb3JWYXJBcmdzKE1ldGhvZEJpbmRpbmcgaW5wdXQsIE1ldGhvZEJpbmRpbmcgdGFyZ2V0
TWV0aG9kLCBib29sZWFuIGlzU3VwZXJBY2Nlc3MsIFR5cGVCaW5kaW5nIGFsbG9jYXRpb25UeXBl
LCBUeXBlQmluZGluZyBhbmNlc3RvcikgeworCWlmICghaXNQcm90b3R5cGUoKSkgdGhyb3cgbmV3
IElsbGVnYWxTdGF0ZUV4Y2VwdGlvbigpOworCWlmIChUeXBlQmluZGluZy5lcXVhbHNFcXVhbHMo
aW5wdXQucmV0dXJuVHlwZS5lcmFzdXJlKCksIHRhcmdldE1ldGhvZC5yZXR1cm5UeXBlLmVyYXN1
cmUoKSkKKwkJJiYgaW5wdXQuYXJlUGFyYW1ldGVyRXJhc3VyZXNFcXVhbCh0YXJnZXRNZXRob2Qp
KSB7CisJCQlyZXR1cm4gbnVsbDsgLy8gZG8gbm90IG5lZWQgYnJpZGdlIG1ldGhvZAorCX0KKwlp
ZiAodGhpcy5zeW50aGV0aWNzID09IG51bGwpCisJCXRoaXMuc3ludGhldGljcyA9IG5ldyBIYXNo
TWFwW01BWF9TWU5USEVUSUNTXTsKKwlpZiAodGhpcy5zeW50aGV0aWNzW1NvdXJjZVR5cGVCaW5k
aW5nLk1FVEhPRF9QQUlSX0JSSURHRV0gPT0gbnVsbCkgeworCQl0aGlzLnN5bnRoZXRpY3NbU291
cmNlVHlwZUJpbmRpbmcuTUVUSE9EX1BBSVJfQlJJREdFXSA9IG5ldyBIYXNoTWFwKDUpOworCX0g
ZWxzZSB7CisJCS8vIGNoZWNrIHRvIHNlZSBpZiB0aGVyZSBpcyBhbm90aGVyIGVxdWl2YWxlbnQg
aW5oZXJpdGVkTWV0aG9kIGFscmVhZHkgYWRkZWQKKwkJSXRlcmF0b3IgZmlyc3RPZlRoZVBhaXJJ
dGVyYXRvciA9IHRoaXMuc3ludGhldGljc1tTb3VyY2VUeXBlQmluZGluZy5NRVRIT0RfUEFJUl9C
UklER0VdLmtleVNldCgpLml0ZXJhdG9yKCk7CisJCXdoaWxlIChmaXJzdE9mVGhlUGFpckl0ZXJh
dG9yLmhhc05leHQoKSkgeworCQkJT2JqZWN0IHN5bnRoZXRpYyA9IGZpcnN0T2ZUaGVQYWlySXRl
cmF0b3IubmV4dCgpOworCQkJaWYgKHN5bnRoZXRpYyBpbnN0YW5jZW9mIE1ldGhvZEJpbmRpbmcp
IHsKKwkJCQlNZXRob2RCaW5kaW5nIGZpcnN0T2ZUaGVwYWlyID0gKE1ldGhvZEJpbmRpbmcpIHN5
bnRoZXRpYzsKKwkJCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoaW5wdXQuc2VsZWN0b3IsIGZp
cnN0T2ZUaGVwYWlyLnNlbGVjdG9yKQorCQkJCQkJJiYgVHlwZUJpbmRpbmcuZXF1YWxzRXF1YWxz
KGlucHV0LnJldHVyblR5cGUuZXJhc3VyZSgpLCBmaXJzdE9mVGhlcGFpci5yZXR1cm5UeXBlLmVy
YXN1cmUoKSkKKwkJCQkJCSYmIGlucHV0LmFyZVBhcmFtZXRlckVyYXN1cmVzRXF1YWwoZmlyc3RP
ZlRoZXBhaXIpKSB7CisJCQkJCU9iamVjdCBoTWFwID0gdGhpcy5zeW50aGV0aWNzW1NvdXJjZVR5
cGVCaW5kaW5nLk1FVEhPRF9QQUlSX0JSSURHRV0uZ2V0KHN5bnRoZXRpYyk7CisJCQkJCWlmICho
TWFwIGluc3RhbmNlb2YgSGFzaE1hcCkgeworCQkJCQkJSXRlcmF0b3Igc2Vjb25kT2ZUaGVQYWly
SXRlcmF0b3IgPSAoKEhhc2hNYXApaE1hcCkua2V5U2V0KCkuaXRlcmF0b3IoKTsKKwkJCQkJCXdo
aWxlIChzZWNvbmRPZlRoZVBhaXJJdGVyYXRvci5oYXNOZXh0KCkpIHsKKwkJCQkJCQlPYmplY3Qg
c3ludGhldGljMSA9IHNlY29uZE9mVGhlUGFpckl0ZXJhdG9yLm5leHQoKTsKKwkJCQkJCQlpZiAo
c3ludGhldGljMSBpbnN0YW5jZW9mIE1ldGhvZEJpbmRpbmcpIHsKKwkJCQkJCQkJTWV0aG9kQmlu
ZGluZyBzZWNvbmRPZlRoZXBhaXIgPSAoTWV0aG9kQmluZGluZykgc3ludGhldGljMTsKKwkJCQkJ
CQkJaWYgKHRhcmdldE1ldGhvZCA9PSBzZWNvbmRPZlRoZXBhaXIpIHsKKwkJCQkJCQkJCVN5bnRo
ZXRpY01ldGhvZEJpbmRpbmcgW10gc20gPSAoU3ludGhldGljTWV0aG9kQmluZGluZ1tdKSAoKEhh
c2hNYXApaE1hcCkuZ2V0KHN5bnRoZXRpYzEpOworCQkJCQkJCQkJcmV0dXJuIHNtWzFdOworCQkJ
CQkJCQl9CisJCQkJCQkJfQorCQkJCQkJfQorCQkJCQl9CisJCQkJfQorCQkJfQorCQl9CisJfQor
CisJU3ludGhldGljTWV0aG9kQmluZGluZyBhY2Nlc3NNZXRob2QgPSBudWxsOworCUhhc2hNYXAg
aE1hcCA9IChIYXNoTWFwKSB0aGlzLnN5bnRoZXRpY3NbU291cmNlVHlwZUJpbmRpbmcuTUVUSE9E
X1BBSVJfQlJJREdFXS5nZXQoaW5wdXQpOworCWlmIChoTWFwID09IG51bGwpIHsKKwkJdGhpcy5z
eW50aGV0aWNzW1NvdXJjZVR5cGVCaW5kaW5nLk1FVEhPRF9QQUlSX0JSSURHRV0ucHV0KGlucHV0
LCBoTWFwID0gbmV3IEhhc2hNYXAoNSkpOworCX0KKwlTeW50aGV0aWNNZXRob2RCaW5kaW5nW10g
YWNjZXNzb3JzID0gKFN5bnRoZXRpY01ldGhvZEJpbmRpbmdbXSkgaE1hcC5nZXQodGFyZ2V0TWV0
aG9kKTsKKwljaGFyIFtdIHNlbGVjdG9yID0gQ2hhck9wZXJhdGlvbi5jb25jYXQoVHlwZUNvbnN0
YW50cy5BTk9OWU1PVVNfTUVUSE9ELCBJbnRlZ2VyLnRvU3RyaW5nKHRoaXMubGFtYmRhT3JkaW5h
bCsrKS50b0NoYXJBcnJheSgpKTsKKwlpZiAoYWNjZXNzb3JzID09IG51bGwpIHsKKwkJYWNjZXNz
TWV0aG9kID0gbmV3IFN5bnRoZXRpY01ldGhvZEJpbmRpbmcoaW5wdXQsIHRhcmdldE1ldGhvZCwg
c2VsZWN0b3IsIHRoaXMsIGlzU3VwZXJBY2Nlc3MsIGFsbG9jYXRpb25UeXBlLCBhbmNlc3Rvcik7
CisJCWhNYXAucHV0KHRhcmdldE1ldGhvZCwgYWNjZXNzb3JzID0gbmV3IFN5bnRoZXRpY01ldGhv
ZEJpbmRpbmdbMl0pOworCQlhY2Nlc3NvcnNbMV0gPSBhY2Nlc3NNZXRob2Q7CisJfSBlbHNlIHsK
KwkJaWYgKChhY2Nlc3NNZXRob2QgPSBhY2Nlc3NvcnNbMV0pID09IG51bGwpIHsKKwkJCWFjY2Vz
c01ldGhvZCA9IG5ldyBTeW50aGV0aWNNZXRob2RCaW5kaW5nKGlucHV0LCB0YXJnZXRNZXRob2Qs
IHNlbGVjdG9yLCB0aGlzLCBpc1N1cGVyQWNjZXNzLCBhbGxvY2F0aW9uVHlwZSwgYW5jZXN0b3Ip
OworCQkJYWNjZXNzb3JzWzFdID0gYWNjZXNzTWV0aG9kOworCQl9CisJfQorCXJldHVybiBhY2Nl
c3NNZXRob2Q7Cit9CisKIGJvb2xlYW4gYXJlRmllbGRzSW5pdGlhbGl6ZWQoKSB7CiAJaWYgKCFp
c1Byb3RvdHlwZSgpKQogCQlyZXR1cm4gdGhpcy5wcm90b3R5cGUuYXJlRmllbGRzSW5pdGlhbGl6
ZWQoKTsKIAlyZXR1cm4gdGhpcy5maWVsZHMgIT0gQmluZGluZy5VTklOSVRJQUxJWkVEX0ZJRUxE
UzsKIH0KQEAgLTIyODEsMzEgKzIzNDIsNTggQEAKIHB1YmxpYyBTeW50aGV0aWNNZXRob2RCaW5k
aW5nW10gc3ludGhldGljTWV0aG9kcygpIHsKIAkKIAlpZiAoIWlzUHJvdG90eXBlKCkpIHRocm93
IG5ldyBJbGxlZ2FsU3RhdGVFeGNlcHRpb24oKTsKIAkKIAlpZiAodGhpcy5zeW50aGV0aWNzID09
IG51bGwgCi0JCQl8fCB0aGlzLnN5bnRoZXRpY3NbU291cmNlVHlwZUJpbmRpbmcuTUVUSE9EX0VN
VUxdID09IG51bGwgCi0JCQl8fCB0aGlzLnN5bnRoZXRpY3NbU291cmNlVHlwZUJpbmRpbmcuTUVU
SE9EX0VNVUxdLnNpemUoKSA9PSAwKSB7CisJCQl8fCAoKCB0aGlzLnN5bnRoZXRpY3NbU291cmNl
VHlwZUJpbmRpbmcuTUVUSE9EX0VNVUxdID09IG51bGwgCisJCQkgICB8fCB0aGlzLnN5bnRoZXRp
Y3NbU291cmNlVHlwZUJpbmRpbmcuTUVUSE9EX0VNVUxdLnNpemUoKSA9PSAwKQorCQkJICAmJiAo
dGhpcy5zeW50aGV0aWNzW1NvdXJjZVR5cGVCaW5kaW5nLk1FVEhPRF9QQUlSX0JSSURHRV0gPT0g
bnVsbAorCQkJICAgfHwgdGhpcy5zeW50aGV0aWNzW1NvdXJjZVR5cGVCaW5kaW5nLk1FVEhPRF9Q
QUlSX0JSSURHRV0uc2l6ZSgpID09IDApKSkgewogCQlyZXR1cm4gbnVsbDsKIAl9CiAJLy8gZGlm
ZmljdWx0IHRvIGNvbXB1dGUgc2l6ZSB1cCBmcm9udCBiZWNhdXNlIG9mIHRoZSBlbWJlZGRlZCBh
cnJheXMgc28gYXNzdW1lIHRoZXJlIGlzIG9ubHkgMQogCWludCBpbmRleCA9IDA7CiAJU3ludGhl
dGljTWV0aG9kQmluZGluZ1tdIGJpbmRpbmdzID0gbmV3IFN5bnRoZXRpY01ldGhvZEJpbmRpbmdb
MV07Ci0JSXRlcmF0b3IgbWV0aG9kQXJyYXlJdGVyYXRvciA9IHRoaXMuc3ludGhldGljc1tTb3Vy
Y2VUeXBlQmluZGluZy5NRVRIT0RfRU1VTF0udmFsdWVzKCkuaXRlcmF0b3IoKTsKLQl3aGlsZSAo
bWV0aG9kQXJyYXlJdGVyYXRvci5oYXNOZXh0KCkpIHsKLQkJU3ludGhldGljTWV0aG9kQmluZGlu
Z1tdIG1ldGhvZEFjY2Vzc29ycyA9IChTeW50aGV0aWNNZXRob2RCaW5kaW5nW10pIG1ldGhvZEFy
cmF5SXRlcmF0b3IubmV4dCgpOwotCQlmb3IgKGludCBpID0gMCwgbWF4ID0gbWV0aG9kQWNjZXNz
b3JzLmxlbmd0aDsgaSA8IG1heDsgaSsrKSB7Ci0JCQlpZiAobWV0aG9kQWNjZXNzb3JzW2ldICE9
IG51bGwpIHsKLQkJCQlpZiAoaW5kZXgrMSA+IGJpbmRpbmdzLmxlbmd0aCkgewotCQkJCQlTeXN0
ZW0uYXJyYXljb3B5KGJpbmRpbmdzLCAwLCAoYmluZGluZ3MgPSBuZXcgU3ludGhldGljTWV0aG9k
QmluZGluZ1tpbmRleCArIDFdKSwgMCwgaW5kZXgpOworCWlmICh0aGlzLnN5bnRoZXRpY3NbU291
cmNlVHlwZUJpbmRpbmcuTUVUSE9EX0VNVUxdICE9IG51bGwpIHsKKwkJSXRlcmF0b3IgbWV0aG9k
QXJyYXlJdGVyYXRvciA9IHRoaXMuc3ludGhldGljc1tTb3VyY2VUeXBlQmluZGluZy5NRVRIT0Rf
RU1VTF0udmFsdWVzKCkuaXRlcmF0b3IoKTsKKwkJd2hpbGUgKG1ldGhvZEFycmF5SXRlcmF0b3Iu
aGFzTmV4dCgpKSB7CisJCQlTeW50aGV0aWNNZXRob2RCaW5kaW5nW10gbWV0aG9kQWNjZXNzb3Jz
ID0gKFN5bnRoZXRpY01ldGhvZEJpbmRpbmdbXSkgbWV0aG9kQXJyYXlJdGVyYXRvci5uZXh0KCk7
CisJCQlmb3IgKGludCBpID0gMCwgbWF4ID0gbWV0aG9kQWNjZXNzb3JzLmxlbmd0aDsgaSA8IG1h
eDsgaSsrKSB7CisJCQkJaWYgKG1ldGhvZEFjY2Vzc29yc1tpXSAhPSBudWxsKSB7CisJCQkJCWlm
IChpbmRleCsxID4gYmluZGluZ3MubGVuZ3RoKSB7CisJCQkJCQlTeXN0ZW0uYXJyYXljb3B5KGJp
bmRpbmdzLCAwLCAoYmluZGluZ3MgPSBuZXcgU3ludGhldGljTWV0aG9kQmluZGluZ1tpbmRleCAr
IDFdKSwgMCwgaW5kZXgpOworCQkJCQl9CisJCQkJCWJpbmRpbmdzW2luZGV4KytdID0gbWV0aG9k
QWNjZXNzb3JzW2ldOyAKIAkJCQl9Ci0JCQkJYmluZGluZ3NbaW5kZXgrK10gPSBtZXRob2RBY2Nl
c3NvcnNbaV07IAorCQkJfQorCQl9CisJfQorCWlmICh0aGlzLnN5bnRoZXRpY3NbU291cmNlVHlw
ZUJpbmRpbmcuTUVUSE9EX1BBSVJfQlJJREdFXSAhPSBudWxsKSB7CisJCUl0ZXJhdG9yIHRvcEl0
ZXJhdG9yID0gdGhpcy5zeW50aGV0aWNzW1NvdXJjZVR5cGVCaW5kaW5nLk1FVEhPRF9QQUlSX0JS
SURHRV0udmFsdWVzKCkuaXRlcmF0b3IoKTsKKwkJd2hpbGUgKHRvcEl0ZXJhdG9yLmhhc05leHQo
KSkgeworCQkJT2JqZWN0IHRlbXAgPSB0b3BJdGVyYXRvci5uZXh0KCk7CisJCQlpZiAodGVtcCBp
bnN0YW5jZW9mIEhhc2hNYXApIHsKKwkJCQlJdGVyYXRvciBuZXh0SXRlcmF0b3IgPSAoKEhhc2hN
YXApdGVtcCkudmFsdWVzKCkuaXRlcmF0b3IoKTsKKwkJCQl3aGlsZSAobmV4dEl0ZXJhdG9yLmhh
c05leHQoKSkgeworCQkJCQlTeW50aGV0aWNNZXRob2RCaW5kaW5nW10gbWV0aG9kQWNjZXNzb3Jz
ID0gKFN5bnRoZXRpY01ldGhvZEJpbmRpbmdbXSkgbmV4dEl0ZXJhdG9yLm5leHQoKTsKKwkJCQkJ
Zm9yIChpbnQgaSA9IDAsIG1heCA9IG1ldGhvZEFjY2Vzc29ycy5sZW5ndGg7IGkgPCBtYXg7IGkr
KykgeworCQkJCQkJaWYgKG1ldGhvZEFjY2Vzc29yc1tpXSAhPSBudWxsKSB7CisJCQkJCQkJaWYg
KGluZGV4KzEgPiBiaW5kaW5ncy5sZW5ndGgpIHsKKwkJCQkJCQkJU3lzdGVtLmFycmF5Y29weShi
aW5kaW5ncywgMCwgKGJpbmRpbmdzID0gbmV3IFN5bnRoZXRpY01ldGhvZEJpbmRpbmdbaW5kZXgg
KyAxXSksIDAsIGluZGV4KTsKKwkJCQkJCQl9CisJCQkJCQkJYmluZGluZ3NbaW5kZXgrK10gPSBt
ZXRob2RBY2Nlc3NvcnNbaV07IAorCQkJCQkJfQorCQkJCQl9CisJCQkJfQogCQkJfQogCQl9CiAJ
fQogCS8vIHNvcnQgdGhlbSBpbiBhY2NvcmRpbmcgdG8gdGhlaXIgb3duIGluZGV4ZXMKIAlpbnQg
bGVuZ3RoOworCWlmIChiaW5kaW5ncy5sZW5ndGggPT0gMSAmJiBiaW5kaW5nc1swXSA9PSBudWxs
KSB7CisJCXJldHVybiBudWxsOworCX0KIAlTeW50aGV0aWNNZXRob2RCaW5kaW5nW10gc29ydGVk
QmluZGluZ3MgPSBuZXcgU3ludGhldGljTWV0aG9kQmluZGluZ1tsZW5ndGggPSBiaW5kaW5ncy5s
ZW5ndGhdOwogCWZvciAoaW50IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspewogCQlTeW50aGV0aWNN
ZXRob2RCaW5kaW5nIGJpbmRpbmcgPSBiaW5kaW5nc1tpXTsKIAkJc29ydGVkQmluZGluZ3NbYmlu
ZGluZy5pbmRleF0gPSBiaW5kaW5nOwogCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvU3lu
dGhldGljTWV0aG9kQmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9TeW50aGV0aWNNZXRob2RC
aW5kaW5nLmphdmEKaW5kZXggZDExODA1Yi4uMjM2YTIyOCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xv
b2t1cC9TeW50aGV0aWNNZXRob2RCaW5kaW5nLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9TeW50
aGV0aWNNZXRob2RCaW5kaW5nLmphdmEKQEAgLTI5LDEwICsyOSwxMSBAQAogCXB1YmxpYyBGaWVs
ZEJpbmRpbmcgdGFyZ2V0UmVhZEZpZWxkOwkJLy8gcmVhZCBhY2Nlc3MgdG8gYSBmaWVsZAogCXB1
YmxpYyBGaWVsZEJpbmRpbmcgdGFyZ2V0V3JpdGVGaWVsZDsJCS8vIHdyaXRlIGFjY2VzcyB0byBh
IGZpZWxkCiAJcHVibGljIE1ldGhvZEJpbmRpbmcgdGFyZ2V0TWV0aG9kOwkJCS8vIG1ldGhvZCBv
ciBjb25zdHJ1Y3RvcgogCXB1YmxpYyBUeXBlQmluZGluZyB0YXJnZXRFbnVtVHlwZTsgCQkJLy8g
ZW51bSB0eXBlCiAJcHVibGljIExhbWJkYUV4cHJlc3Npb24gbGFtYmRhOworCXB1YmxpYyBNZXRo
b2RCaW5kaW5nIGlucHV0TWV0aG9kID0gbnVsbDsKIAkKIAlwdWJsaWMgaW50IHB1cnBvc2U7CiAK
IAkvLyBmaWVsZHMgdXNlZCB0byBnZW5lcmF0ZSBlbnVtIGNvbnN0YW50cyB3aGVuIHRvbyBtYW55
CiAJcHVibGljIGludCBzdGFydEluZGV4OwpAQCAtNTMsMTQgKzU0LDcyIEBACiAJcHVibGljIHN0
YXRpYyBmaW5hbCBpbnQgTGFtYmRhTWV0aG9kID0gMTM7IC8vIExhbWJkYSBib2R5IGVtaXR0ZWQg
YXMgYSBtZXRob2QuCiAJcHVibGljIGZpbmFsIHN0YXRpYyBpbnQgQXJyYXlDb25zdHJ1Y3RvciA9
IDE0OyAvLyBYW106Om5ldwogCXB1YmxpYyBzdGF0aWMgZmluYWwgaW50IEFycmF5Q2xvbmUgPSAx
NTsgLy8gWFtdOjpjbG9uZQogICAgIHB1YmxpYyBzdGF0aWMgZmluYWwgaW50IEZhY3RvcnlNZXRo
b2QgPSAxNjsgLy8gZm9yIGluZHkgY2FsbCB0byBwcml2YXRlIGNvbnN0cnVjdG9yLgogICAgIHB1
YmxpYyBzdGF0aWMgZmluYWwgaW50IERlc2VyaWFsaXplTGFtYmRhID0gMTc7IC8vIEZvciBzdXBw
b3J0aW5nIGxhbWJkYSBkZXNlcmlhbGl6YXRpb24uCisgICAgcHVibGljIHN0YXRpYyBmaW5hbCBp
bnQgQ2hhbm5lbGlzZVBhcmFtc1RvVmFyQXJncyA9IDE4OworICAgIAorICAgIHB1YmxpYyBzdGF0
aWMgaW50IE5PVF9CT09UU1RSQVBQRUQgPSAtOTk5OTsKICAgICAKIAlwdWJsaWMgaW50IHNvdXJj
ZVN0YXJ0ID0gMDsgLy8gc3RhcnQgcG9zaXRpb24gb2YgdGhlIG1hdGNoaW5nIGRlY2xhcmF0aW9u
CiAJcHVibGljIGludCBpbmRleDsgLy8gdXNlZCBmb3Igc29ydGluZyBhY2Nlc3MgbWV0aG9kcyBp
biB0aGUgY2xhc3MgZmlsZQogCXB1YmxpYyBpbnQgZmFrZVBhZGRlZFBhcmFtZXRlcnMgPSAwOyAv
LyBhZGRlZCBpbiBzeW50aGV0aWMgY29uc3RydWN0b3IgdG8gYXZvaWQgbmFtZSBjbGFzaC4KKwlw
dWJsaWMgYm9vbGVhbiBpc1N1cGVyQWNjZXNzID0gZmFsc2U7CisJcHVibGljIFR5cGVCaW5kaW5n
IGFuY2VzdG9yID0gbnVsbDsKKwlwdWJsaWMgaW50IGludm9rZUR5bmFtaWNOdW1iZXIgPSBOT1Rf
Qk9PVFNUUkFQUEVEOworCXB1YmxpYyBTeW50aGV0aWNNZXRob2RCaW5kaW5nIG5leHRCcmlkZ2Ug
PSBudWxsOworCisJcHVibGljIFN5bnRoZXRpY01ldGhvZEJpbmRpbmcoTWV0aG9kQmluZGluZyBp
bnB1dE1ldGhvZCwgTWV0aG9kQmluZGluZyB0YXJnZXRNZXRob2QsIGNoYXIgW10gc2VsZWN0b3Is
IFNvdXJjZVR5cGVCaW5kaW5nIGRlY2xhcmluZ0NsYXNzLCBib29sZWFuIGlzU3VwZXJBY2Nlc3Ms
IFR5cGVCaW5kaW5nIGFsbG9jYXRpb25UeXBlLCBUeXBlQmluZGluZyBhbmNlc3RvcikgeworCSAg
ICB0aGlzLmRlY2xhcmluZ0NsYXNzID0gZGVjbGFyaW5nQ2xhc3M7CisJCXRoaXMucHVycG9zZSA9
IFN5bnRoZXRpY01ldGhvZEJpbmRpbmcuQ2hhbm5lbGlzZVBhcmFtc1RvVmFyQXJnczsKKwkgICAg
dGhpcy5tb2RpZmllcnMgPSAodGFyZ2V0TWV0aG9kLm1vZGlmaWVycyB8IENsYXNzRmlsZUNvbnN0
YW50cy5BY2NCcmlkZ2UgfCBDbGFzc0ZpbGVDb25zdGFudHMuQWNjU3ludGhldGljKSAmIH4oQ2xh
c3NGaWxlQ29uc3RhbnRzLkFjY1N5bmNocm9uaXplZCB8IENsYXNzRmlsZUNvbnN0YW50cy5BY2NB
YnN0cmFjdCB8IENsYXNzRmlsZUNvbnN0YW50cy5BY2NOYXRpdmUgIHwgQ2xhc3NGaWxlQ29uc3Rh
bnRzLkFjY0ZpbmFsIHwgRXh0cmFDb21waWxlck1vZGlmaWVycy5BY2NHZW5lcmljU2lnbmF0dXJl
IHwgQ2xhc3NGaWxlQ29uc3RhbnRzLkFjY1ZhcmFyZ3MpOworCQlpZiAoaXNTdXBlckFjY2Vzcykg
eworCQkJdGhpcy5tb2RpZmllcnMgfD0gQ2xhc3NGaWxlQ29uc3RhbnRzLkFjY1ByaXZhdGU7CisJ
CX0gZWxzZSB7CisJCQl0aGlzLm1vZGlmaWVycyB8PSBDbGFzc0ZpbGVDb25zdGFudHMuQWNjU3Rh
dGljOworCQl9CisJCWlmICh0YXJnZXRNZXRob2QuaXNTdGF0aWMoKSkgeworCQkJdGhpcy5tb2Rp
ZmllcnMgfD0gQ2xhc3NGaWxlQ29uc3RhbnRzLkFjY1N0YXRpYzsKKwkJfQorCSAgICB0aGlzLnRh
Z0JpdHMgfD0gKFRhZ0JpdHMuQW5ub3RhdGlvblJlc29sdmVkIHwgVGFnQml0cy5EZXByZWNhdGVk
QW5ub3RhdGlvblJlc29sdmVkKTsKKwkgICAgdGhpcy5yZXR1cm5UeXBlID0gaW5wdXRNZXRob2Qu
cmV0dXJuVHlwZTsKKwkgICAgdGhpcy50aHJvd25FeGNlcHRpb25zID0gaW5wdXRNZXRob2QudGhy
b3duRXhjZXB0aW9uczsKKwkgICAgdGhpcy50YXJnZXRNZXRob2QgPSB0YXJnZXRNZXRob2Q7CisJ
ICAgIHRoaXMuaXNTdXBlckFjY2VzcyA9IGlzU3VwZXJBY2Nlc3M7CisJCVN5bnRoZXRpY01ldGhv
ZEJpbmRpbmdbXSBrbm93bkFjY2Vzc01ldGhvZHMgPSBkZWNsYXJpbmdDbGFzcy5zeW50aGV0aWNN
ZXRob2RzKCk7CisJCWludCBtZXRob2RJZCA9IGtub3duQWNjZXNzTWV0aG9kcyA9PSBudWxsID8g
MCA6IGtub3duQWNjZXNzTWV0aG9kcy5sZW5ndGg7CisJCXRoaXMuaW5kZXggPSBtZXRob2RJZDsK
KwkJdGhpcy5pbnB1dE1ldGhvZCA9IGlucHV0TWV0aG9kOworCQl0aGlzLnNlbGVjdG9yID0gc2Vs
ZWN0b3I7CisJCWlmIChhbmNlc3RvciAhPSBudWxsKSB7CisJCQl0aGlzLmFuY2VzdG9yID0gYW5j
ZXN0b3I7CisJCX0KKwkJaW50IGxlbmd0aCA9IGlucHV0TWV0aG9kLnBhcmFtZXRlcnMubGVuZ3Ro
OworCQlpZiAoKCF0YXJnZXRNZXRob2QuaXNTdGF0aWMoKSAmJiAhdGFyZ2V0TWV0aG9kLmlzQ29u
c3RydWN0b3IoKSAmJiAhaXNTdXBlckFjY2VzcykgfHwgYW5jZXN0b3IgIT0gbnVsbCkgeworCQkJ
bGVuZ3RoKys7CisJCX0KKwkJdGhpcy5wYXJhbWV0ZXJzID0gbmV3IFR5cGVCaW5kaW5nW2xlbmd0
aF07CisJCWludCBjdXJySW5keCA9IDA7CisJCWlmICgoIXRhcmdldE1ldGhvZC5pc1N0YXRpYygp
ICYmICF0YXJnZXRNZXRob2QuaXNDb25zdHJ1Y3RvcigpICYmICFpc1N1cGVyQWNjZXNzKSB8fCBh
bmNlc3RvciAhPSBudWxsKSB7CisJCQlpZiAoYWxsb2NhdGlvblR5cGUgIT0gbnVsbCkgeworCQkJ
CXRoaXMucGFyYW1ldGVyc1tjdXJySW5keCsrXSA9IGFsbG9jYXRpb25UeXBlOworCQkJfSBlbHNl
IGlmIChhbmNlc3RvciAhPSBudWxsKSB7CisJCQkJdGhpcy5wYXJhbWV0ZXJzW2N1cnJJbmR4Kytd
ID0gYW5jZXN0b3I7CisJCQl9IGVsc2UgeworCQkJCXRoaXMucGFyYW1ldGVyc1tjdXJySW5keCsr
XSA9IHRhcmdldE1ldGhvZC5kZWNsYXJpbmdDbGFzczsKKwkJCX0KKwkJfQorCQlpbnQgaiA9IHRh
cmdldE1ldGhvZC5wYXJhbWV0ZXJzLmxlbmd0aCAtIDEgKyBjdXJySW5keDsKKwkJaW50IGsgPSAw
OworCQl3aGlsZSAoY3VyckluZHggPCBqKSB7CisJCQl0aGlzLnBhcmFtZXRlcnNbY3VyckluZHgr
K10gPSB0YXJnZXRNZXRob2QucGFyYW1ldGVyc1trKytdOworCQl9CisJCVR5cGVCaW5kaW5nIHRi
ID0gKChBcnJheUJpbmRpbmcpdGFyZ2V0TWV0aG9kLnBhcmFtZXRlcnNbdGFyZ2V0TWV0aG9kLnBh
cmFtZXRlcnMubGVuZ3RoIC0gMV0pLmVsZW1lbnRzVHlwZSgpOworCQl3aGlsZSAoY3VyckluZHgg
PCBsZW5ndGgpIHsKKwkJCXRoaXMucGFyYW1ldGVyc1tjdXJySW5keCsrXSA9IHRiOworCQl9CisJ
fQogCiAJcHVibGljIFN5bnRoZXRpY01ldGhvZEJpbmRpbmcoRmllbGRCaW5kaW5nIHRhcmdldEZp
ZWxkLCBib29sZWFuIGlzUmVhZEFjY2VzcywgYm9vbGVhbiBpc1N1cGVyQWNjZXNzLCBSZWZlcmVu
Y2VCaW5kaW5nIGRlY2xhcmluZ0NsYXNzKSB7CiAKIAkJdGhpcy5tb2RpZmllcnMgPSBDbGFzc0Zp
bGVDb25zdGFudHMuQWNjRGVmYXVsdCB8IENsYXNzRmlsZUNvbnN0YW50cy5BY2NTdGF0aWMgfCBD
bGFzc0ZpbGVDb25zdGFudHMuQWNjU3ludGhldGljOwogCQl0aGlzLnRhZ0JpdHMgfD0gKFRhZ0Jp
dHMuQW5ub3RhdGlvblJlc29sdmVkIHwgVGFnQml0cy5EZXByZWNhdGVkQW5ub3RhdGlvblJlc29s
dmVkKTs=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>239463</attachid>
            <date>2014-01-30 02:23:00 -0500</date>
            <delta_ts>2014-01-30 02:23:08 -0500</delta_ts>
            <desc>patch after removing optimizer</desc>
            <filename>Bug-406744--8.patch</filename>
            <type>text/plain</type>
            <size>45217</size>
            <attacher name="ANIRBAN CHAKRABORTY">anchakrk</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0xhbWJkYUV4cHJlc3Np
b25zVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTGFtYmRhRXhwcmVz
c2lvbnNUZXN0LmphdmEKaW5kZXggN2RkMzRhMy4uNTBhZjc4OCAxMDA2NDQKLS0tIGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTGFtYmRhRXhwcmVzc2lvbnNUZXN0LmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTGFtYmRhRXhwcmVzc2lvbnNUZXN0LmphdmEK
QEAgLTI0NTAsMTEgKzI0NTAsMTEgQEAKIAkJfSwKIAkJIjkiKTsKIH0KIC8vIEJ1ZyA0MDY3NDQg
LSBbMS44XVtjb21waWxlcl1bY29kZWdlbl0gTGFtYmRhQ29udmVyc2lvbkV4Y2VwdGlvbiBzZWVu
IHdoZW4gbWV0aG9kIHJlZmVyZW5jZSB0YXJnZXRzIGEgdmFyYXJncyBtZXRob2QuCiAvLyBodHRw
czovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDA2NzQ0Ci1wdWJsaWMg
dm9pZCBfdGVzdDQwNjc0NGEoKSB7CitwdWJsaWMgdm9pZCB0ZXN0NDA2NzQ0YSgpIHsKIAl0aGlz
LnJ1bkNvbmZvcm1UZXN0KAogCQkJbmV3IFN0cmluZ1tdIHsKIAkJCQkiWC5qYXZhIiwKIAkJCQki
aW50ZXJmYWNlIEkge1xuIiArCiAJCQkJIgl2b2lkIGZvbyhJbnRlZ2VyIGExLCBJbnRlZ2VyIGEy
LCBTdHJpbmcgYTMpO1xuIiArCkBAIC0yNDc5LDExICsyNDc5LDExIEBACiAJCQkiMTBcbiIgKwog
CQkJIjIwXG4iICsKIAkJCSIxMCwgMjAiCiAJCQkpOwogfQotcHVibGljIHZvaWQgX3Rlc3Q0MDY3
NDRiKCkgeworcHVibGljIHZvaWQgdGVzdDQwNjc0NGIoKSB7CiAJdGhpcy5ydW5Db25mb3JtVGVz
dCgKIAkJCW5ldyBTdHJpbmdbXSB7CiAJCQkJIlguamF2YSIsCiAJCQkJImludGVyZmFjZSBJIHtc
biIgKwogCQkJCSIJaW50IGZvbyhJbnRlZ2VyIGExLCBJbnRlZ2VyIGEyLCBTdHJpbmcgYTMpO1xu
IiArCkBAIC0yNTA5LDExICsyNTA5LDExIEBACiAJCQkiMTBcbiIgKwogCQkJIjIwXG4iICsKIAkJ
CSIxMCwgMjAiCiAJCQkpOwogfQotcHVibGljIHZvaWQgX3Rlc3Q0MDY3NDRjKCkgeworcHVibGlj
IHZvaWQgdGVzdDQwNjc0NGMoKSB7CiAJdGhpcy5ydW5Db25mb3JtVGVzdCgKIAkJCW5ldyBTdHJp
bmdbXSB7CiAJCQkJIlguamF2YSIsCiAJCQkJImludGVyZmFjZSBJIHtcbiIgKwogCQkJCSIJdm9p
ZCBmb28oSW50ZWdlciBhMSwgSW50ZWdlciBhMiwgU3RyaW5nIGEzKTtcbiIgKwpAQCAtMjU0Miwx
MCArMjU0Miw0NjEgQEAKIAkJCSIxMFxuIiArCiAJCQkiMjBcbiIgKwogCQkJIjEwLCAyMCIKIAkJ
CSk7CiB9CitwdWJsaWMgdm9pZCB0ZXN0NDA2NzQ0ZCgpIHsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0
KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiWC5qYXZhIiwKKwkJCQkiaW50ZXJmYWNlIEkge1xu
IiArCisJCQkJIgl2b2lkIGZvbyhpbnQgYTEsIEludGVnZXIgYTIsIFN0cmluZyBhMyk7XG4iICsK
KwkJCQkifVxuIiArCisJCQkJImludGVyZmFjZSBZIHtcbiIgKworCQkJCSIJc3RhdGljIHZvaWQg
bShmbG9hdCBhMSwgT2JqZWN0Li4uIHJlc3QpIHtcbiIgKyAKKwkJCQkiCQlTeXN0ZW0ub3V0LnBy
aW50bG4oYTEpO1xuIiArCisJCQkJIgkJcHJpbnQocmVzdCk7XG4iICsKKwkJCQkiCX1cbiIgKwor
CQkJCSIJc3RhdGljIHZvaWQgcHJpbnQgKE9iamVjdCBbXSBvKSB7XG4iICsKKwkJCQkiCQlmb3Ig
KGludCBpID0gMDsgaSA8IG8ubGVuZ3RoOyBpKyspXG4iICsKKwkJCQkiCQkJU3lzdGVtLm91dC5w
cmludGxuKG9baV0pO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxuIiArCisJCQkJInB1Ymxp
YyBpbnRlcmZhY2UgWCBleHRlbmRzIFl7XG4iICsKKwkJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBt
YWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCQkiCQlJIGkgPSBZOjptO1xuIiArCisJCQkJ
IgkJaS5mb28oMTAsIDIwLCBcIjEwLCAyMFwiKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn1c
biIsCisJCQl9LAorCQkJIjEwLjBcbiIgKworCQkJIjIwXG4iICsKKwkJCSIxMCwgMjAiCisJCQkp
OworfQorcHVibGljIHZvaWQgdGVzdDQwNjc0NGUoKSB7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgK
KwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJIlguamF2YSIsCisJCQkJImludGVyZmFjZSBJIHtcbiIg
KworCQkJCSIJU3RyaW5nIG1ldGhvZChpbnQgYSk7XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNs
YXNzIEMge1xuIiArCisJCQkJIglzdGF0aWMgU3RyaW5nIGZvbyhJbnRlZ2VyLi4uIGkpIHtcbiIg
KworCQkJCSIJCXJldHVybiBcImZvb1wiO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkiCXN0YXRp
YyBTdHJpbmcgZ29vKEludGVnZXIgYmksIEludGVnZXIuLi4gaSkge1xuIiArCisJCQkJIgkJcmV0
dXJuIFwiYmFyXCI7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJcHVibGljIHZvaWQgZm9vKCkg
e1xuIiArCisJCQkJIgkJSSBpO1xuIiArCisJCQkJIgkJaSA9IEM6OmZvbztcbiIgKworCQkJCSIJ
CVN5c3RlbS5vdXQucHJpbnRsbihpLm1ldGhvZCgwKSk7XG4iICsKKwkJCQkiCQlpID0gQzo6Z29v
O1xuIiArCisJCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKGkubWV0aG9kKDApKTtcbiIgKworCQkJ
CSIJfVxuIiArCisJCQkJIn1cbiIgKworCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCQki
CXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBhcmd2W10pICAge1xuIiArCisJCQkJIgkJ
bmV3IEMoKS5mb28oKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn1cbiIsCisJCQl9LAorCQkJ
ImZvb1xuIiArCisJCQkiYmFyIgorCQkJKTsKK30KK3B1YmxpYyB2b2lkIHRlc3Q0MDY3NDRmKCkg
eworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEi
LAorCQkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCQkiCXZvaWQgZm9vKEludGVnZXIgYTEsIElu
dGVnZXIgYTIsIFN0cmluZyBhMyk7XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNsYXNzIFkge1xu
IiArCisJCQkJIgl2b2lkIG0oTnVtYmVyIGExLCBPYmplY3QuLi4gcmVzdCkge1xuIiArIAorCQkJ
CSIJCVN5c3RlbS5vdXQucHJpbnRsbihhMSk7XG4iICsKKwkJCQkiCQlwcmludChyZXN0KTtcbiIg
KworCQkJCSIJfVxuIiArCisJCQkJIglzdGF0aWMgdm9pZCBwcmludCAoT2JqZWN0IFtdIG8pIHtc
biIgKworCQkJCSIJCWZvciAoaW50IGkgPSAwOyBpIDwgby5sZW5ndGg7IGkrKylcbiIgKworCQkJ
CSIJCQlTeXN0ZW0ub3V0LnByaW50bG4ob1tpXSk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9
XG4iICsKKwkJCQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBZIHtcbiIgKworCQkJCSIJc3RhdGlj
IHZvaWQgcHJpbnQgKE9iamVjdCBbXSBvKSB7XG4iICsKKwkJCQkiCQlmb3IgKGludCBpID0gMDsg
aSA8IG8ubGVuZ3RoOyBpKyspXG4iICsKKwkJCQkiCQkJU3lzdGVtLm91dC5wcmludGxuKG9baV0p
O1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmlu
ZyBbXSBhcmdzKSB7XG4iICsKKwkJCQkiCQluZXcgWCgpLmZvbygpO1xuIiArCisJCQkJIgl9XG4i
ICsKKwkJCQkiCXZvaWQgZm9vKCkge1xuIiArIAorCQkJCSIJCUkgaSA9IHN1cGVyOjptO1xuIiAr
CisJCQkJIgkJaS5mb28oMTAsIDIwLCBcIjEwLCAyMFwiKTtcbiIgKworCQkJCSIJfVxuIiArCisJ
CQkJIn1cbiIsCisJCQl9LAorCQkJIjEwXG4iICsKKwkJCSIyMFxuIiArCisJCQkiMTAsIDIwIgor
CQkJKTsKK30KK3B1YmxpYyB2b2lkIHRlc3Q0MDY3NDRnKCkgeworCXRoaXMucnVuQ29uZm9ybVRl
c3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEiLAorCQkJCSJpbnRlcmZhY2UgSSB7
XG4iICsKKwkJCQkiCXZvaWQgZm9vKEludGVnZXIgYTEsIEludGVnZXIgYTIsIFN0cmluZyBhMyk7
XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNsYXNzIFkge1xuIiArCisJCQkJIglzdGF0aWMgdm9p
ZCBwcmludCAoT2JqZWN0IFtdIG8pIHtcbiIgKworCQkJCSIJCWZvciAoaW50IGkgPSAwOyBpIDwg
by5sZW5ndGg7IGkrKylcbiIgKworCQkJCSIJCQlTeXN0ZW0ub3V0LnByaW50bG4ob1tpXSk7XG4i
ICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iICsKKwkJCQkicHVibGljIGNsYXNzIFggZXh0ZW5k
cyBZIHtcbiIgKworCQkJCSIJcHJpdmF0ZSB2b2lkIG0oTnVtYmVyIGExLCBPYmplY3QuLi4gcmVz
dCkge1xuIiArIAorCQkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbihhMSk7XG4iICsKKwkJCQkiCQlw
cmludChyZXN0KTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIglzdGF0aWMgdm9pZCBwcmludCAo
T2JqZWN0IFtdIG8pIHtcbiIgKworCQkJCSIJCWZvciAoaW50IGkgPSAwOyBpIDwgby5sZW5ndGg7
IGkrKylcbiIgKworCQkJCSIJCQlTeXN0ZW0ub3V0LnByaW50bG4ob1tpXSk7XG4iICsKKwkJCQki
CX1cbiIgKworCQkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtc
biIgKworCQkJCSIJCW5ldyBYKCkuZm9vKCk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJdm9p
ZCBmb28oKSB7XG4iICsgCisJCQkJIgkJSSBpID0gdGhpczo6bTtcbiIgKworCQkJCSIJCWkuZm9v
KDEwLCAyMCwgXCIxMCwgMjBcIik7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iLAorCQkJ
fSwKKwkJCSIxMFxuIiArCisJCQkiMjBcbiIgKworCQkJIjEwLCAyMCIKKwkJCSk7Cit9CitwdWJs
aWMgdm9pZCB0ZXN0NDA2NzQ0aCgpIHsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQkJbmV3IFN0
cmluZ1tdIHsKKwkJCQkiWC5qYXZhIiwKKwkJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkJIgl2
b2lkIGZvbyhpbnQgW10gaWEpO1xuIiArCisJCQkJIn1cbiIgKworCQkJCSJjbGFzcyBZIHtcbiIg
KworCQkJCSIJdm9pZCBtKE9iamVjdC4uLiByZXN0KSB7XG4iICsgCisJCQkJIgkJU3lzdGVtLm91
dC5wcmludGxuKFwiSGVsbG8gXCIgKyByZXN0Lmxlbmd0aCk7XG4iICsKKwkJCQkiCX1cbiIgKwor
CQkJCSIJc3RhdGljIHZvaWQgcHJpbnQgKE9iamVjdCBbXSBvKSB7XG4iICsKKwkJCQkiCQlmb3Ig
KGludCBpID0gMDsgaSA8IG8ubGVuZ3RoOyBpKyspXG4iICsKKwkJCQkiCQkJU3lzdGVtLm91dC5w
cmludGxuKG9baV0pO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxuIiArCisJCQkJInB1Ymxp
YyBjbGFzcyBYIGV4dGVuZHMgWSB7XG4iICsKKwkJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWlu
KFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCQkiCQluZXcgWCgpLmZvbygpO1xuIiArCisJCQkJ
Igl9XG4iICsKKwkJCQkiCXZvaWQgZm9vKCkge1xuIiArIAorCQkJCSIJCUkgaSA9IHN1cGVyOjpt
O1xuIiArCisJCQkJIgkJaS5mb28obmV3IGludCBbMF0pO1xuIiArCisJCQkJIgl9XG4iICsKKwkJ
CQkifVxuIiwKKwkJCX0sCisJCQkiSGVsbG8gMSIKKwkJCSk7Cit9CitwdWJsaWMgdm9pZCB0ZXN0
NDA2NzQ0aSgpIHsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJ
CQkiWC5qYXZhIiwKKwkJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkJIgl2b2lkIGZvbyhpbnQg
W10gaWEpO1xuIiArCisJCQkJIn1cbiIgKworCQkJCSJpbnRlcmZhY2UgSTEge1xuIiArCisJCQkJ
Igl2b2lkIGZvbyhpbnQgW10gaWEpO1xuIiArCisJCQkJIn1cbiIgKworCQkJCSJjbGFzcyBZIHtc
biIgKworCQkJCSIJdm9pZCBtKE9iamVjdC4uLiByZXN0KSB7XG4iICsgCisJCQkJIgkJU3lzdGVt
Lm91dC5wcmludGxuKFwiSGVsbG8gXCIgKyByZXN0Lmxlbmd0aCk7XG4iICsKKwkJCQkiCX1cbiIg
KworCQkJCSIJc3RhdGljIHZvaWQgcHJpbnQgKE9iamVjdCBbXSBvKSB7XG4iICsKKwkJCQkiCQlm
b3IgKGludCBpID0gMDsgaSA8IG8ubGVuZ3RoOyBpKyspXG4iICsKKwkJCQkiCQkJU3lzdGVtLm91
dC5wcmludGxuKG9baV0pO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxuIiArCisJCQkJInB1
YmxpYyBjbGFzcyBYIGV4dGVuZHMgWSB7XG4iICsKKwkJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBt
YWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCQkiCQluZXcgWCgpLmZvbygpO1xuIiArCisJ
CQkJIgl9XG4iICsKKwkJCQkiCXZvaWQgZm9vKCkge1xuIiArIAorCQkJCSIJCUkgaSA9IHN1cGVy
OjptO1xuIiArCisJCQkJIgkJaS5mb28obmV3IGludCBbMF0pO1xuIiArCisJCQkJIgkJSTEgaTEg
PSBzdXBlcjo6bTtcbiIgKworCQkJCSIJCWkxLmZvbyhuZXcgaW50IFswXSk7XG4iICsKKwkJCQki
CX1cbiIgKworCQkJCSJ9XG4iLAorCQkJfSwKKwkJCSJIZWxsbyAxXG4iICsKKwkJCSJIZWxsbyAx
IgorCQkJKTsKK30KK3B1YmxpYyB2b2lkIHRlc3Q0MDY3NDRqKCkgeworCXRoaXMucnVuQ29uZm9y
bVRlc3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEiLAorCQkJCSJpbnRlcmZhY2Ug
SSB7XG4iICsKKwkJCQkiCXZvaWQgZm9vKGludCBbXSBpYSk7XG4iICsKKwkJCQkifVxuIiArCisJ
CQkJImNsYXNzIFkge1xuIiArCisJCQkJIgl2b2lkIG0oT2JqZWN0Li4uIHJlc3QpIHtcbiIgKyAK
KwkJCQkiCQlJIGkgPSB0aGlzOjpuO1xuIiArCisJCQkJIgkJaS5mb28obmV3IGludCBbMF0pO1xu
IiArCisJCQkJIgl9XG4iICsKKwkJCQkiCXZvaWQgbihPYmplY3QuLi4gcmVzdCkge1xuIiArIAor
CQkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbihcIkhlbGxvIFwiICsgcmVzdC5sZW5ndGgpO1xuIiAr
CisJCQkJIgl9XG4iICsKKwkJCQkiCXN0YXRpYyB2b2lkIHByaW50IChPYmplY3QgW10gbykge1xu
IiArCisJCQkJIgkJZm9yIChpbnQgaSA9IDA7IGkgPCBvLmxlbmd0aDsgaSsrKVxuIiArCisJCQkJ
IgkJCVN5c3RlbS5vdXQucHJpbnRsbihvW2ldKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn1c
biIgKworCQkJCSJwdWJsaWMgY2xhc3MgWCBleHRlbmRzIFkge1xuIiArCisJCQkJIglwdWJsaWMg
c3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykge1xuIiArCisJCQkJIgkJbmV3IFgoKS5m
b28oKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIgl2b2lkIGZvbygpIHtcbiIgKyAKKwkJCQki
CQlJIGkgPSBzdXBlcjo6bTtcbiIgKworCQkJCSIJCWkuZm9vKG5ldyBpbnQgWzBdKTtcbiIgKwor
CQkJCSIJfVxuIiArCisJCQkJIn1cbiIsCisJCQl9LAorCQkJIkhlbGxvIDEiCisJCQkpOworfQor
cHVibGljIHZvaWQgdGVzdDQwNjc0NGsoKSB7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJCW5l
dyBTdHJpbmdbXSB7CisJCQkJIlguamF2YSIsCisJCQkJImludGVyZmFjZSBJIHtcbiIgKworCQkJ
CSIJdm9pZCBmb28oaW50IFtdIGlhKTtcbiIgKworCQkJCSJ9XG4iICsKKwkJCQkiY2xhc3MgWSB7
XG4iICsKKwkJCQkiCXN0YXRpYyB2b2lkIG0oT2JqZWN0Li4uIHJlc3QpIHtcbiIgKyAKKwkJCQki
CQlTeXN0ZW0ub3V0LnByaW50bG4oXCJIZWxsbyBcIiArIHJlc3QubGVuZ3RoKTtcbiIgKworCQkJ
CSIJfVxuIiArCisJCQkJIglzdGF0aWMgdm9pZCBwcmludCAoT2JqZWN0IFtdIG8pIHtcbiIgKwor
CQkJCSIJCWZvciAoaW50IGkgPSAwOyBpIDwgby5sZW5ndGg7IGkrKylcbiIgKworCQkJCSIJCQlT
eXN0ZW0ub3V0LnByaW50bG4ob1tpXSk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iICsK
KwkJCQkiY2xhc3MgWTEgZXh0ZW5kcyBZIHsgfVxuIiArCisJCQkJInB1YmxpYyBjbGFzcyBYIHtc
biIgKworCQkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIg
KworCQkJCSIJCW5ldyBYKCkuZm9vKCk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJdm9pZCBm
b28oKSB7XG4iICsgCisJCQkJIgkJSSBpID0gWTo6bTtcbiIgKworCQkJCSIJCWkuZm9vKG5ldyBp
bnQgWzBdKTtcbiIgKworCQkJCSIJCWkgPSBZMTo6bTtcbiIgKworCQkJCSIJCWkuZm9vKG5ldyBp
bnQgWzBdKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn1cbiIsCisJCQl9LAorCQkJIkhlbGxv
IDFcbiIgKworCQkJIkhlbGxvIDEiCisJCQkpOworfQorcHVibGljIHZvaWQgdGVzdDQwNjc0NGwo
KSB7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJIlguamF2
YSIsCisJCQkJImludGVyZmFjZSBJIHtcbiIgKworCQkJCSIJdm9pZCBmb28oSW50ZWdlciBpKTtc
biIgKworCQkJCSJ9XG4iICsKKwkJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkJIglzdGF0
aWMgdm9pZCBmb28oaW50IC4uLiB4KSB7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJcHVibGlj
IHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIiArCisJCQkJIgkJSSBpID0gWDo6
Zm9vO1xuIiArCisJCQkJIgkJaS5mb28oMSk7XG4iICsKKwkJCQkiCQlTeXN0ZW0ub3V0LnByaW50
bG4oXCJIZWxsb1wiKTtcbiIgKworCQkJCSJ9XG4iICsKKwkJCQkifVxuIiwKKwkJCX0sCisJCQki
SGVsbG8iCisJCQkpOworfQorcHVibGljIHZvaWQgdGVzdDQwNjc0NG0oKSB7CisJdGhpcy5ydW5D
b25mb3JtVGVzdCgKKwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJIlguamF2YSIsCisJCQkJImludGVy
ZmFjZSBJIHtcbiIgKworCQkJCSIJdm9pZCBmb28oaW50IGkpO1xuIiArCisJCQkJIn1cbiIgKwor
CQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCQkiCXN0YXRpYyB2b2lkIGZvbyhpbnQgLi4u
IHgpIHtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihT
dHJpbmdbXSBhcmdzKSB7XG4iICsKKwkJCQkiCQlJIGkgPSBYOjpmb287XG4iICsKKwkJCQkiCQlp
LmZvbygxKTtcbiIgKworCQkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbihcIkhlbGxvXCIpO1xuIiAr
CisJCQkJIgl9XG4iICsKKwkJCQkifVxuIiwKKwkJCX0sCisJCQkiSGVsbG8iCisJCQkpOworfQor
cHVibGljIHZvaWQgdGVzdDQwNjc0NG4oKSB7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJCW5l
dyBTdHJpbmdbXSB7CisJCQkJIlguamF2YSIsCisJCQkJImludGVyZmFjZSBJIHtcbiIgKworCQkJ
CSIJdm9pZCBmb28oSW50ZWdlciBpKTtcbiIgKworCQkJCSJ9XG4iICsKKwkJCQkiY2xhc3MgQmFz
ZSB7XG4iICsKKwkJCQkiCXZvaWQgZm9vKE9iamVjdCAuLi5vYmplY3RzKSB7XG4iICsKKwkJCQki
CQlTeXN0ZW0ub3V0LnByaW50bG4oXCJPa1wiKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn1c
biIgKworCQkJCSJwdWJsaWMgY2xhc3MgWCBleHRlbmRzIEJhc2Uge1xuIiArCisJCQkJIgl2b2lk
IGZvbyhPYmplY3QuLi4gb2JqZWN0cykge1xuIiArCisJCQkJIgkJdGhyb3cgbmV3IFJ1bnRpbWVF
eGNlcHRpb24oKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIglwdWJsaWMgc3RhdGljIHZvaWQg
bWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iICsKKwkJCQkiCQluZXcgWCgpLmdvbygpO1xuIiArCisJ
CQkJIgl9XG4iICsKKwkJCQkiCXZvaWQgZ29vKCkge1xuIiArCisJCQkJIgkJSSBpID0gc3VwZXI6
OmZvbztcbiIgKworCQkJCSIJCWkuZm9vKDEwKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn1c
biIsCisJCQl9LAorCQkJIk9rIgorCQkJKTsKK30KK3B1YmxpYyB2b2lkIHRlc3Q0MDY3NDRvKCkg
eworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEi
LAorCQkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCQkiCXZvaWQgZm9vKGludCB4KTtcbiIgKwor
CQkJCSJ9XG4iICsKKwkJCQkiY2xhc3MgQmFzZSB7XG4iICsKKwkJCQkiCXB1YmxpYyB2b2lkIGZv
byhpbnQgLi4uaXMpIHtcbiIgKworCQkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbihcImZvb1wiKTtc
biIgKworCQkJCSIJfVxuIiArCisJCQkJIn1cbiIgKworCQkJCSJwdWJsaWMgY2xhc3MgWCBleHRl
bmRzIEJhc2Uge1xuIiArCisJCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWFpbiggU3RyaW5nW10g
YXJncyApIHtcbiIgKworCQkJCSIJCUkgaSA9IG5ldyBYKCk6OmZvbztcbiIgKworCQkJCSIJCWku
Zm9vKDEwKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn1cbiIsCisJCQl9LAorCQkJImZvbyIK
KwkJCSk7Cit9CitwdWJsaWMgdm9pZCB0ZXN0NDA2NzQ0cCgpIHsKKwl0aGlzLnJ1bkNvbmZvcm1U
ZXN0KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiWC5qYXZhIiwKKwkJCQkiaW50ZXJmYWNlIEkg
e1xuIiArCisJCQkJIgl2b2lkIGZvbyhpbnQgeCk7XG4iICsKKwkJCQkifVxuIiArCisJCQkJInB1
YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJCSIJcHJpdmF0ZSB2b2lkIGZvbyhpbnQgLi4uaXMpIHtc
biIgKworCQkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbihcImZvb1wiKTtcbiIgKworCQkJCSIJfVxu
IiArCisJCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzICkge1xuIiAr
CisJCQkJIgkJbmV3IFgoKS5uZXcgWSgpLmZvbygpO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQki
CWNsYXNzIFkgZXh0ZW5kcyBYIHtcbiIgKworCQkJCSIJCXZvaWQgZm9vKCkge1xuIiArCisJCQkJ
IgkJCUkgaSA9IG5ldyBYKCk6OmZvbztcbiIgKworCQkJCSIJCQlpLmZvbygxMCk7XG4iICsKKwkJ
CQkiCQl9XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iLAorCQkJfSwKKwkJCSJmb28iCisJ
CQkpOworfQorcHVibGljIHZvaWQgdGVzdDQwNjc0NHEoKSB7CisJdGhpcy5ydW5Db25mb3JtVGVz
dCgKKwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJIlguamF2YSIsCisJCQkJImludGVyZmFjZSBJIHtc
biIgKworCQkJCSIJdm9pZCBmb28oaW50IHgpO1xuIiArCisJCQkJIn1cbiIgKworCQkJCSJjbGFz
cyBZIHtcbiIgKworCQkJCSIJcHVibGljIHN0YXRpYyB2b2lkIGZvbyhpbnQgLi4uaXMpIHtcbiIg
KworCQkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbihcIlkuZm9vXCIpO1xuIiArCisJCQkJIgl9XG4i
ICsKKwkJCQkifVxuIiArCisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJCSIJcHVibGlj
IHN0YXRpYyB2b2lkIGZvbyhpbnQgLi4uaXMpIHtcbiIgKworCQkJCSIJCVN5c3RlbS5vdXQucHJp
bnRsbihcIlguZm9vXCIpO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkiCXB1YmxpYyBzdGF0aWMg
dm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKworCQkJCSIJCUkgaSA9IFg6OmZvbztcbiIg
KworCQkJCSIJCWkuZm9vKDEwKTtcbiIgKworCQkJCSIJCWkgPSBZOjpmb287XG4iICsKKwkJCQki
CQlpLmZvbygyMCk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iLAorCQkJfSwKKwkJCSJY
LmZvb1xuIiArCisJCQkiWS5mb28iCisJCQkpOworfQorcHVibGljIHZvaWQgdGVzdDQwNjc0NHIo
KSB7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJIlguamF2
YSIsCisJCQkJImludGVyZmFjZSBJIHtcbiIgKworCQkJCSIJdm9pZCBmb28oaW50IHQsIGludCBb
XSBpYSk7XG4iICsKKwkJCQkifVxuIiArCisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJ
CSIJcHVibGljIHN0YXRpYyB2b2lkIGZvbyhJbnRlZ2VyIGksIGludCAuLi5pcykge1xuIiArCisJ
CQkJIgkJU3lzdGVtLm91dC5wcmludGxuKFwiWS5mb29cIik7XG4iICsKKwkJCQkiCX1cbiIgKwor
CQkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIiArCisJCQkJ
IgkJSSBpID0gWDo6Zm9vO1xuIiArCisJCQkJIgkJaS5mb28oMTAsIG51bGwpO1xuIiArCisJCQkJ
Igl9XG4iICsKKwkJCQkifVxuIiwKKwkJCX0sCisJCQkiWS5mb28iCisJCQkpOworfQorcHVibGlj
IHZvaWQgdGVzdDQwNjc0NHMoKSB7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJCW5ldyBTdHJp
bmdbXSB7CisJCQkJIlguamF2YSIsCisJCQkJImludGVyZmFjZSBJIHtcbiIgKworCQkJCSIJWCBm
b28oaW50IHgpO1xuIiArCisJCQkJIn1cbiIgKworCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsK
KwkJCQkiCWNsYXNzIFkgZXh0ZW5kcyBYIHtcbiIgKworCQkJCSIJCVkoaW50IC4uLiB4KSB7XG4i
ICsKKwkJCQkiCQkJU3lzdGVtLm91dC5wcmludGxuKFwiWTo6WVwiKTtcbiIgKworCQkJCSIJCX1c
biIgKworCQkJCSIJfVxuIiArCisJCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdb
XSBhcmdzICkge1xuIiArCisJCQkJIgkJbmV3IFgoKS5nb28oKTtcbiIgKworCQkJCSIJfVxuIiAr
CisJCQkJIgl2b2lkIGdvbygpIHtcbiIgKworCQkJCSIJCUkgaSA9IFk6Om5ldztcbiIgKworCQkJ
CSIJCWkuZm9vKDEwKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn1cbiIsCisJCQl9LAorCQkJ
Ilk6OlkiCisJCQkpOworfQogCiBwdWJsaWMgc3RhdGljIENsYXNzIHRlc3RDbGFzcygpIHsKIAly
ZXR1cm4gTGFtYmRhRXhwcmVzc2lvbnNUZXN0LmNsYXNzOwogfQogfQpkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTnVsbFR5cGVBbm5vdGF0aW9uVGVzdC5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTnVsbFR5cGVBbm5vdGF0aW9uVGVzdC5qYXZh
CmluZGV4IDYyNGQ1YTYuLmY1NGY1OGMgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9y
ZWdyZXNzaW9uL051bGxUeXBlQW5ub3RhdGlvblRlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29t
cGlsZXIvcmVncmVzc2lvbi9OdWxsVHlwZUFubm90YXRpb25UZXN0LmphdmEKQEAgLTEsNyArMSw3
IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDEyLCAyMDEz
IEdLIFNvZnR3YXJlIEFHIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMTIsIDIwMTQg
R0sgU29mdHdhcmUgQUcgYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMg
cHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWls
YWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAog
ICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUg
YXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCiAgKiAKQEAg
LTM0MjUsMTIgKzM0MjUsMTEgQEAKIAkJIgkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgXl5eXl5eXl5eXG4iICsgCiAJCSJOdWxsIHR5cGUgbWlzbWF0Y2ggYXQgcGFyYW1ldGVyIDM6
IHJlcXVpcmVkIFwnQE5vbk51bGwgRmlsZVZpc2l0T3B0aW9uXCcgYnV0IHByb3ZpZGVkIFwnQE51
bGxhYmxlIEZpbGVWaXNpdE9wdGlvblwnIHZpYSBtZXRob2QgZGVzY3JpcHRvciBUcmlGdW5jPFBh
dGgsRmlsZVZpc2l0T3B0aW9uLEZpbGVWaXNpdE9wdGlvbixTdHJlYW08UGF0aD4+LmFwcGx5KFBh
dGgsIEZpbGVWaXNpdE9wdGlvbiwgRmlsZVZpc2l0T3B0aW9uKVxuIiArIAogCQkiLS0tLS0tLS0t
LVxuIik7CiB9CiAKLS8vIERJU0FCTEVELCBjdXJyZW50bHkgdGhyb3dzIGphdmEubGFuZy5Cb290
c3RyYXBNZXRob2RFcnJvciBhdCBydW50aW1lOgotcHVibGljIHZvaWQgX3Rlc3RCdWc0MjQ2Mzdf
Y29tbWVudDMoKSB7CitwdWJsaWMgdm9pZCB0ZXN0QnVnNDI0NjM3X2NvbW1lbnQzKCkgewogCXJ1
bkNvbmZvcm1UZXN0KAogCQluZXcgU3RyaW5nW10gewogCQkJIlZhckFyZ3NNZXRob2RSZWZlcmVu
Y2VUZXN0LmphdmEiLAogCQkJImltcG9ydCBqYXZhLnV0aWwuZnVuY3Rpb24uQ29uc3VtZXI7XG4i
ICsgCiAJCQkicHVibGljIGNsYXNzIFZhckFyZ3NNZXRob2RSZWZlcmVuY2VUZXN0IHtcbiIgKyAK
ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9DbGFzc0ZpbGUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9DbGFzc0ZpbGUuamF2
YQppbmRleCBiZjdlMzBjLi4zNzFmNTc5IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvQ2xhc3NGaWxlLmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL0NsYXNzRmlsZS5qYXZhCkBAIC05MDAsMTAgKzkwMCwxMyBAQAogCQkJ
CQkJY2FzZSBTeW50aGV0aWNNZXRob2RCaW5kaW5nLlN1cGVyTWV0aG9kQWNjZXNzIDoKIAkJCQkJ
CWNhc2UgU3ludGhldGljTWV0aG9kQmluZGluZy5CcmlkZ2VNZXRob2QgOgogCQkJCQkJCS8vIGdl
bmVyYXRlIGEgbWV0aG9kIGluZm8gdG8gZW11bGF0ZSBhbiBhY2Nlc3MgdG8gYSBub24tYWNjZXNz
aWJsZSBtZXRob2QgLyBzdXBlci1tZXRob2Qgb3IgYnJpZGdlIG1ldGhvZAogCQkJCQkJCWFkZFN5
bnRoZXRpY01ldGhvZEFjY2Vzc01ldGhvZChzeW50aGV0aWNNZXRob2QpOwogCQkJCQkJCWJyZWFr
OworCQkJCQkJY2FzZSBTeW50aGV0aWNNZXRob2RCaW5kaW5nLkNoYW5uZWxpc2VQYXJhbXNUb1Zh
ckFyZ3MgOgorCQkJCQkJCWFkZFN5bnRoZXRpY01ldGhvZEFjY2Vzc01ldGhvZEZvclZhckFyZ3Mo
c3ludGhldGljTWV0aG9kKTsKKwkJCQkJCQlicmVhazsKIAkJCQkJCWNhc2UgU3ludGhldGljTWV0
aG9kQmluZGluZy5Db25zdHJ1Y3RvckFjY2VzcyA6CiAJCQkJCQkJLy8gZ2VuZXJhdGUgYSBtZXRo
b2QgaW5mbyB0byBlbXVsYXRlIGFuIGFjY2VzcyB0byBhIG5vbi1hY2Nlc3NpYmxlIGNvbnN0cnVj
dG9yCiAJCQkJCQkJYWRkU3ludGhldGljQ29uc3RydWN0b3JBY2Nlc3NNZXRob2Qoc3ludGhldGlj
TWV0aG9kKTsKIAkJCQkJCQlicmVhazsKIAkJCQkJCWNhc2UgU3ludGhldGljTWV0aG9kQmluZGlu
Zy5FbnVtVmFsdWVzIDoKQEAgLTEyMTYsMTAgKzEyMTksMzEgQEAKIAkJCQkuc2NvcGUKIAkJCQku
cmVmZXJlbmNlQ29tcGlsYXRpb25Vbml0KCkKIAkJCQkuY29tcGlsYXRpb25SZXN1bHQKIAkJCQku
Z2V0TGluZVNlcGFyYXRvclBvc2l0aW9ucygpKTsKIAkJLy8gdXBkYXRlIHRoZSBudW1iZXIgb2Yg
YXR0cmlidXRlcworCQl0aGlzLmNvbnRlbnRzW21ldGhvZEF0dHJpYnV0ZU9mZnNldCsrXSA9IChi
eXRlKSAoYXR0cmlidXRlTnVtYmVyID4+IDgpOworCQl0aGlzLmNvbnRlbnRzW21ldGhvZEF0dHJp
YnV0ZU9mZnNldF0gPSAoYnl0ZSkgYXR0cmlidXRlTnVtYmVyOworCX0KKworCXB1YmxpYyB2b2lk
IGFkZFN5bnRoZXRpY01ldGhvZEFjY2Vzc01ldGhvZEZvclZhckFyZ3MoU3ludGhldGljTWV0aG9k
QmluZGluZyBtZXRob2RCaW5kaW5nKSB7CisJCWdlbmVyYXRlTWV0aG9kSW5mb0hlYWRlcihtZXRo
b2RCaW5kaW5nKTsKKwkJaW50IG1ldGhvZEF0dHJpYnV0ZU9mZnNldCA9IHRoaXMuY29udGVudHNP
ZmZzZXQ7CisJCWludCBhdHRyaWJ1dGVOdW1iZXIgPSBnZW5lcmF0ZU1ldGhvZEluZm9BdHRyaWJ1
dGVzKG1ldGhvZEJpbmRpbmcpOworCQlpbnQgY29kZUF0dHJpYnV0ZU9mZnNldCA9IHRoaXMuY29u
dGVudHNPZmZzZXQ7CisJCWF0dHJpYnV0ZU51bWJlcisrOworCQlnZW5lcmF0ZUNvZGVBdHRyaWJ1
dGVIZWFkZXIoKTsKKwkJdGhpcy5jb2RlU3RyZWFtLmluaXQodGhpcyk7CisJCXRoaXMuY29kZVN0
cmVhbS5nZW5lcmF0ZVN5bnRoZXRpY0JvZHlGb3JNZXRob2RBY2Nlc3NGb3JWYXJBcmdzKG1ldGhv
ZEJpbmRpbmcpOworCQljb21wbGV0ZUNvZGVBdHRyaWJ1dGVGb3JTeW50aGV0aWNNZXRob2QoCisJ
CQltZXRob2RCaW5kaW5nLAorCQkJY29kZUF0dHJpYnV0ZU9mZnNldCwKKwkJCSgoU291cmNlVHlw
ZUJpbmRpbmcpIG1ldGhvZEJpbmRpbmcuZGVjbGFyaW5nQ2xhc3MpCisJCQkJLnNjb3BlCisJCQkJ
LnJlZmVyZW5jZUNvbXBpbGF0aW9uVW5pdCgpCisJCQkJLmNvbXBpbGF0aW9uUmVzdWx0CisJCQkJ
LmdldExpbmVTZXBhcmF0b3JQb3NpdGlvbnMoKSk7CiAJCXRoaXMuY29udGVudHNbbWV0aG9kQXR0
cmlidXRlT2Zmc2V0KytdID0gKGJ5dGUpIChhdHRyaWJ1dGVOdW1iZXIgPj4gOCk7CiAJCXRoaXMu
Y29udGVudHNbbWV0aG9kQXR0cmlidXRlT2Zmc2V0XSA9IChieXRlKSBhdHRyaWJ1dGVOdW1iZXI7
CiAJfQogCiAJcHVibGljIHZvaWQgYWRkU3ludGhldGljU3dpdGNoVGFibGUoU3ludGhldGljTWV0
aG9kQmluZGluZyBtZXRob2RCaW5kaW5nKSB7CkBAIC0yODc3LDEyICsyOTAxLDE0IEBACiAJCWlu
dCBhdHRyaWJ1dGVMZW5ndGhQb3NpdGlvbiA9IGxvY2FsQ29udGVudHNPZmZzZXQ7CiAJCWxvY2Fs
Q29udGVudHNPZmZzZXQgKz0gNDsKIAkJdGhpcy5jb250ZW50c1tsb2NhbENvbnRlbnRzT2Zmc2V0
KytdID0gKGJ5dGUpIChudW1iZXJPZkJvb3RzdHJhcHMgPj4gOCk7CiAJCXRoaXMuY29udGVudHNb
bG9jYWxDb250ZW50c09mZnNldCsrXSA9IChieXRlKSBudW1iZXJPZkJvb3RzdHJhcHM7CiAJCWZv
ciAoaW50IGkgPSAwOyBpIDwgbnVtYmVyT2ZCb290c3RyYXBzOyBpKyspIHsKLQkJCUZ1bmN0aW9u
YWxFeHByZXNzaW9uIGZ1bmN0aW9uYWwgPSAoRnVuY3Rpb25hbEV4cHJlc3Npb24pIGZ1bmN0aW9u
YWxFeHByZXNzaW9uTGlzdC5nZXQoaSk7Ci0JCQkKKwkJCU9iamVjdCB0ZW1wID0gZnVuY3Rpb25h
bEV4cHJlc3Npb25MaXN0LmdldChpKTsKKworCQkJaWYgKHRlbXAgaW5zdGFuY2VvZiBGdW5jdGlv
bmFsRXhwcmVzc2lvbikgeworCQkJRnVuY3Rpb25hbEV4cHJlc3Npb24gZnVuY3Rpb25hbCA9IChG
dW5jdGlvbmFsRXhwcmVzc2lvbil0ZW1wOwogCQkJVHlwZUJpbmRpbmdbXSBtYXJrZXJJbnRlcmZh
Y2VzID0gbnVsbDsKIAkJCWlmIChmdW5jdGlvbmFsIGluc3RhbmNlb2YgTGFtYmRhRXhwcmVzc2lv
biAmJiAKIAkJCQkgICAoKChtYXJrZXJJbnRlcmZhY2VzPSgoTGFtYmRhRXhwcmVzc2lvbilmdW5j
dGlvbmFsKS5nZXRNYXJrZXJJbnRlcmZhY2VzKCkpICE9IG51bGwpIHx8CiAJCQkJICAgCSgoTGFt
YmRhRXhwcmVzc2lvbilmdW5jdGlvbmFsKS5pc1NlcmlhbGl6YWJsZSkpIHsKIAkJCQkKQEAgLTI5
NTksMTggKzI5ODUsNDkgQEAKIAkJCQkKIAkJCQlpbnQgZnVuY3Rpb25hbERlc2NyaXB0b3JJbmRl
eCA9IHRoaXMuY29uc3RhbnRQb29sLmxpdGVyYWxJbmRleEZvck1ldGhvZFR5cGUoZnVuY3Rpb25h
bC5kZXNjcmlwdG9yLm9yaWdpbmFsKCkuc2lnbmF0dXJlKCkpOwogCQkJCXRoaXMuY29udGVudHNb
bG9jYWxDb250ZW50c09mZnNldCsrXSA9IChieXRlKSAoZnVuY3Rpb25hbERlc2NyaXB0b3JJbmRl
eCA+PiA4KTsKIAkJCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10gPSAoYnl0
ZSkgZnVuY3Rpb25hbERlc2NyaXB0b3JJbmRleDsKIAkKLQkJCQlpbnQgbWV0aG9kSGFuZGxlSW5k
ZXggPSB0aGlzLmNvbnN0YW50UG9vbC5saXRlcmFsSW5kZXhGb3JNZXRob2RIYW5kbGUoZnVuY3Rp
b25hbC5iaW5kaW5nLm9yaWdpbmFsKCkpOyAvLyBTcGVhayBvZiAiIGltcGxlbWVudGF0aW9uIiAo
ZXJhc2VkKSB2ZXJzaW9uIGhlcmUsIGFkYXB0YXRpb25zIGRlc2NyaWJlZCBiZWxvdy4KKwkJCQlp
bnQgbWV0aG9kSGFuZGxlSW5kZXg7CisJCQkJaWYgKGZ1bmN0aW9uYWwuZmlyc3RCcmlkZ2UgIT0g
bnVsbCAmJiBmdW5jdGlvbmFsLmZpcnN0QnJpZGdlIGluc3RhbmNlb2YgU3ludGhldGljTWV0aG9k
QmluZGluZykgeworCQkJCQltZXRob2RIYW5kbGVJbmRleCA9IHRoaXMuY29uc3RhbnRQb29sLmxp
dGVyYWxJbmRleEZvck1ldGhvZEhhbmRsZShmdW5jdGlvbmFsLmZpcnN0QnJpZGdlLm9yaWdpbmFs
KCkpOyAvLyBTcGVhayBvZiAiIGltcGxlbWVudGF0aW9uIiAoZXJhc2VkKSB2ZXJzaW9uIGhlcmUs
IGFkYXB0YXRpb25zIGRlc2NyaWJlZCBiZWxvdy4KKwkJCQl9IGVsc2UgeworCQkJCQltZXRob2RI
YW5kbGVJbmRleCA9IHRoaXMuY29uc3RhbnRQb29sLmxpdGVyYWxJbmRleEZvck1ldGhvZEhhbmRs
ZShmdW5jdGlvbmFsLmJpbmRpbmcub3JpZ2luYWwoKSk7IC8vIFNwZWFrIG9mICIgaW1wbGVtZW50
YXRpb24iIChlcmFzZWQpIHZlcnNpb24gaGVyZSwgYWRhcHRhdGlvbnMgZGVzY3JpYmVkIGJlbG93
LgorCQkJCX0KIAkJCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10gPSAoYnl0
ZSkgKG1ldGhvZEhhbmRsZUluZGV4ID4+IDgpOwogCQkJCXRoaXMuY29udGVudHNbbG9jYWxDb250
ZW50c09mZnNldCsrXSA9IChieXRlKSBtZXRob2RIYW5kbGVJbmRleDsKIAkKIAkJCQljaGFyIFtd
IGluc3RhbnRpYXRlZFNpZ25hdHVyZSA9IGZ1bmN0aW9uYWwuZGVzY3JpcHRvci5zaWduYXR1cmUo
KTsKIAkJCQlpbnQgbWV0aG9kVHlwZUluZGV4ID0gdGhpcy5jb25zdGFudFBvb2wubGl0ZXJhbElu
ZGV4Rm9yTWV0aG9kVHlwZShpbnN0YW50aWF0ZWRTaWduYXR1cmUpOwogCQkJCXRoaXMuY29udGVu
dHNbbG9jYWxDb250ZW50c09mZnNldCsrXSA9IChieXRlKSAobWV0aG9kVHlwZUluZGV4ID4+IDgp
OwogCQkJCXRoaXMuY29udGVudHNbbG9jYWxDb250ZW50c09mZnNldCsrXSA9IChieXRlKSBtZXRo
b2RUeXBlSW5kZXg7CQkJCQorCQkJfQorCQkJfSBlbHNlIGlmICh0ZW1wIGluc3RhbmNlb2YgU3lu
dGhldGljTWV0aG9kQmluZGluZyAmJiAoKFN5bnRoZXRpY01ldGhvZEJpbmRpbmcpdGVtcCkucHVy
cG9zZSA9PSBTeW50aGV0aWNNZXRob2RCaW5kaW5nLkNoYW5uZWxpc2VQYXJhbXNUb1ZhckFyZ3Mp
IHsKKwkJCQlpZiAoaW5kZXhGb3JNZXRhRmFjdG9yeSA9PSAwKSB7CisJCQkJCWluZGV4Rm9yTWV0
YUZhY3RvcnkgPSB0aGlzLmNvbnN0YW50UG9vbC5saXRlcmFsSW5kZXhGb3JNZXRob2RIYW5kbGUo
Q2xhc3NGaWxlQ29uc3RhbnRzLk1ldGhvZEhhbmRsZVJlZktpbmRJbnZva2VTdGF0aWMsIGphdmFM
YW5nSW52b2tlTGFtYmRhTWV0YWZhY3RvcnksIAorCQkJCQkJCUNvbnN0YW50UG9vbC5NRVRBRkFD
VE9SWSwgQ29uc3RhbnRQb29sLkpBVkFfTEFOR19JTlZPS0VfTEFNQkRBTUVUQUZBQ1RPUllfTUVU
QUZBQ1RPUllfU0lHTkFUVVJFLCBmYWxzZSk7CisJCQkJfQorCQkJCVN5bnRoZXRpY01ldGhvZEJp
bmRpbmcgc3ludGhldGljID0gKFN5bnRoZXRpY01ldGhvZEJpbmRpbmcpIHRlbXA7CisJCQkJCisJ
CQkJdGhpcy5jb250ZW50c1tsb2NhbENvbnRlbnRzT2Zmc2V0KytdID0gKGJ5dGUpIChpbmRleEZv
ck1ldGFGYWN0b3J5ID4+IDgpOworCQkJCXRoaXMuY29udGVudHNbbG9jYWxDb250ZW50c09mZnNl
dCsrXSA9IChieXRlKSBpbmRleEZvck1ldGFGYWN0b3J5OworCQkJCQorCQkJCS8vIHUyIG51bV9i
b290c3RyYXBfYXJndW1lbnRzCisJCQkJdGhpcy5jb250ZW50c1tsb2NhbENvbnRlbnRzT2Zmc2V0
KytdID0gMDsKKwkJCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10gPSAoYnl0
ZSkgMzsKKwkJCQkKKwkJCQlpbnQgZnVuY3Rpb25hbERlc2NyaXB0b3JJbmRleCA9IHRoaXMuY29u
c3RhbnRQb29sLmxpdGVyYWxJbmRleEZvck1ldGhvZFR5cGUoc3ludGhldGljLmlucHV0TWV0aG9k
Lm9yaWdpbmFsKCkuc2lnbmF0dXJlKCkpOworCQkJCXRoaXMuY29udGVudHNbbG9jYWxDb250ZW50
c09mZnNldCsrXSA9IChieXRlKSAoZnVuY3Rpb25hbERlc2NyaXB0b3JJbmRleCA+PiA4KTsKKwkJ
CQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgZnVuY3Rpb25h
bERlc2NyaXB0b3JJbmRleDsKKwkKKwkJCQlpbnQgbWV0aG9kSGFuZGxlSW5kZXggPSB0aGlzLmNv
bnN0YW50UG9vbC5saXRlcmFsSW5kZXhGb3JNZXRob2RIYW5kbGUoc3ludGhldGljLm9yaWdpbmFs
KCkpOyAvLyBTcGVhayBvZiAiIGltcGxlbWVudGF0aW9uIiAoZXJhc2VkKSB2ZXJzaW9uIGhlcmUs
IGFkYXB0YXRpb25zIGRlc2NyaWJlZCBiZWxvdy4KKwkJCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29u
dGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgKG1ldGhvZEhhbmRsZUluZGV4ID4+IDgpOworCQkJCXRo
aXMuY29udGVudHNbbG9jYWxDb250ZW50c09mZnNldCsrXSA9IChieXRlKSBtZXRob2RIYW5kbGVJ
bmRleDsKKwkKKwkJCQlpbnQgbWV0aG9kVHlwZUluZGV4ID0gdGhpcy5jb25zdGFudFBvb2wubGl0
ZXJhbEluZGV4Rm9yTWV0aG9kVHlwZShzeW50aGV0aWMuaW5wdXRNZXRob2Quc2lnbmF0dXJlKCkp
OworCQkJCXRoaXMuY29udGVudHNbbG9jYWxDb250ZW50c09mZnNldCsrXSA9IChieXRlKSAobWV0
aG9kVHlwZUluZGV4ID4+IDgpOworCQkJCXRoaXMuY29udGVudHNbbG9jYWxDb250ZW50c09mZnNl
dCsrXSA9IChieXRlKSBtZXRob2RUeXBlSW5kZXg7CQkJCQkJCQkKIAkJCX0KIAkJfQogCiAJCWlu
dCBhdHRyaWJ1dGVMZW5ndGggPSBsb2NhbENvbnRlbnRzT2Zmc2V0IC0gYXR0cmlidXRlTGVuZ3Ro
UG9zaXRpb24gLSA0OwogCQl0aGlzLmNvbnRlbnRzW2F0dHJpYnV0ZUxlbmd0aFBvc2l0aW9uKytd
ID0gKGJ5dGUpIChhdHRyaWJ1dGVMZW5ndGggPj4gMjQpOwpAQCAtNTExOSwxMCArNTE3NiwxOCBA
QAogCQl0aGlzLmJvb3RzdHJhcE1ldGhvZHMuYWRkKGV4cHJlc3Npb24pOwogCQkvLyBSZWNvcmQg
d2hpY2ggYm9vdHN0cmFwIG1ldGhvZCB3YXMgYXNzaWduZWQgdG8gdGhlIGV4cHJlc3Npb24KIAkJ
ZXhwcmVzc2lvbi5ib290c3RyYXBNZXRob2ROdW1iZXIgPSB0aGlzLmJvb3RzdHJhcE1ldGhvZHMu
c2l6ZSgpIC0gMTsKIAkJcmV0dXJuIHRoaXMuYm9vdHN0cmFwTWV0aG9kcy5zaXplKCkgLSAxOwog
CX0KKwkKKwlwdWJsaWMgaW50IHJlY29yZEJvb3RzdHJhcE1ldGhvZChTeW50aGV0aWNNZXRob2RC
aW5kaW5nIHNtKSB7CisJCWlmICh0aGlzLmJvb3RzdHJhcE1ldGhvZHMgPT0gbnVsbCkgeworCQkJ
dGhpcy5ib290c3RyYXBNZXRob2RzID0gbmV3IEFycmF5TGlzdCgpOworCQl9CisJCXRoaXMuYm9v
dHN0cmFwTWV0aG9kcy5hZGQoc20pOworCQlyZXR1cm4gdGhpcy5ib290c3RyYXBNZXRob2RzLnNp
emUoKSAtIDE7CisJfQogCiAJcHVibGljIHZvaWQgcmVzZXQoU291cmNlVHlwZUJpbmRpbmcgdHlw
ZUJpbmRpbmcpIHsKIAkJLy8gdGhlIGNvZGUgc3RyZWFtIGlzIHJlaW5pdGlhbGl6ZWQgZm9yIGVh
Y2ggbWV0aG9kCiAJCWZpbmFsIENvbXBpbGVyT3B0aW9ucyBvcHRpb25zID0gdHlwZUJpbmRpbmcu
c2NvcGUuY29tcGlsZXJPcHRpb25zKCk7CiAJCXRoaXMucmVmZXJlbmNlQmluZGluZyA9IHR5cGVC
aW5kaW5nOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9GdW5jdGlvbmFsRXhwcmVzc2lvbi5qYXZh
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2FzdC9GdW5jdGlvbmFsRXhwcmVzc2lvbi5qYXZhCmluZGV4IGUxY2Y2NmUuLmRj
MjFjZWYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvRnVuY3Rpb25hbEV4cHJlc3Npb24uamF2YQor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvYXN0L0Z1bmN0aW9uYWxFeHByZXNzaW9uLmphdmEKQEAgLTU3LDEwICs1Nywx
MiBAQAogCXB1YmxpYyBCbG9ja1Njb3BlIGVuY2xvc2luZ1Njb3BlOwogCXByb3RlY3RlZCBib29s
ZWFuIGVsbGlwc2lzQXJndW1lbnQ7CiAJcHVibGljIGludCBib290c3RyYXBNZXRob2ROdW1iZXIg
PSAtMTsKIAlwcm90ZWN0ZWQgc3RhdGljIElFcnJvckhhbmRsaW5nUG9saWN5IHNpbGVudEVycm9y
SGFuZGxpbmdQb2xpY3kgPSBEZWZhdWx0RXJyb3JIYW5kbGluZ1BvbGljaWVzLmlnbm9yZUFsbFBy
b2JsZW1zKCk7CiAJcHJpdmF0ZSBib29sZWFuIGhhc1JlcG9ydGVkU2FtUHJvYmxlbSA9IGZhbHNl
OworCXB1YmxpYyBNZXRob2RCaW5kaW5nIGZpcnN0QnJpZGdlID0gbnVsbDsKKwogCiAJcHVibGlj
IEZ1bmN0aW9uYWxFeHByZXNzaW9uKENvbXBpbGF0aW9uUmVzdWx0IGNvbXBpbGF0aW9uUmVzdWx0
KSB7CiAJCXRoaXMuY29tcGlsYXRpb25SZXN1bHQgPSBjb21waWxhdGlvblJlc3VsdDsKIAl9CiAJ
CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1JlZmVyZW5jZUV4cHJlc3Npb24uamF2YSBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9hc3QvUmVmZXJlbmNlRXhwcmVzc2lvbi5qYXZhCmluZGV4IDgxMjNlNzMuLjEyY2U3ODkgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9hc3QvUmVmZXJlbmNlRXhwcmVzc2lvbi5qYXZhCisrKyBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9hc3QvUmVmZXJlbmNlRXhwcmVzc2lvbi5qYXZhCkBAIC00NSwxMCArNDUsMTIgQEAKIGltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkFycmF5QmluZGluZzsK
IGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkJpbmRpbmc7
CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5CbG9ja1Nj
b3BlOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuSW5m
ZXJlbmNlQ29udGV4dDE4OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci5sb29rdXAuSW52b2NhdGlvblNpdGU7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmxvb2t1cC5Mb29rdXBFbnZpcm9ubWVudDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLk1lbWJlclR5cGVCaW5kaW5nOwogaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuTWV0aG9kQmluZGluZzsKIGlt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLk5lc3RlZFR5cGVC
aW5kaW5nOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAu
UGFyYW1ldGVyaXplZFR5cGVCaW5kaW5nOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb21waWxlci5sb29rdXAuUG9seVR5cGVCaW5kaW5nOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuUHJvYmxlbVJlYXNvbnM7CkBAIC0xNzAsMTYgKzE3
Miw4OCBAQAogCQl9CiAJCWJ1ZmZlci5hcHBlbmQoJyknKTsKIAkJYnVmZmVyLmFwcGVuZCgnTCcp
OwogCQlidWZmZXIuYXBwZW5kKHRoaXMucmVzb2x2ZWRUeXBlLmNvbnN0YW50UG9vbE5hbWUoKSk7
CiAJCWJ1ZmZlci5hcHBlbmQoJzsnKTsKLQkJaW50IGludm9rZUR5bmFtaWNOdW1iZXIgPSBjb2Rl
U3RyZWFtLmNsYXNzRmlsZS5yZWNvcmRCb290c3RyYXBNZXRob2QodGhpcyk7CisJCWludCBpbnZv
a2VEeW5hbWljTnVtYmVyOworCQlpZiAodGhpcy5iaW5kaW5nLmlzVmFyYXJncygpICYmIAorCQkJ
CSEodGhpcy5iaW5kaW5nIGluc3RhbmNlb2YgU3ludGhldGljTWV0aG9kQmluZGluZykgJiYgCisJ
CQkJIXRoaXMuYmluZGluZy5hcmVQYXJhbWV0ZXJFcmFzdXJlc0VxdWFsKHRoaXMuZGVzY3JpcHRv
cikgJiYgCisJCQkJIXZhckFyZ3NQYXJhbWV0ZXJzT25lT25PbmVDb3JyZXNwb25kZW5jZUNvbnNp
ZGVyaW5nQm94aW5nKHRoaXMuYmluZGluZy5wYXJhbWV0ZXJzLCB0aGlzLmRlc2NyaXB0b3IucGFy
YW1ldGVycywgY3VycmVudFNjb3BlKSkgeworCQkJU3ludGhldGljTWV0aG9kQmluZGluZyBzbSA9
IAorCQkJCQlzb3VyY2VUeXBlLmFkZFN5bnRoZXRpY01ldGhvZEZvckFyZ3VtZW50Q2hhbm5lbGlu
Z0ZvclZhckFyZ3MoIHRoaXMuZGVzY3JpcHRvciwgdGhpcy5iaW5kaW5nLCBmYWxzZSwgCisJCQkJ
CQkJCQkJCQkJdGhpcy5saHMgaW5zdGFuY2VvZiBBbGxvY2F0aW9uRXhwcmVzc2lvbiA/IHRoaXMu
cmVjZWl2ZXJUeXBlIDogbnVsbCwKKwkJCQkJCQkJCQkJCQkodGhpcy5iaW5kaW5nLmRlY2xhcmlu
Z0NsYXNzIGluc3RhbmNlb2YgTWVtYmVyVHlwZUJpbmRpbmcpICYmIAorCQkJCQkJCQkJCQkJCQko
aXNTdWJDbGFzc09mKChNZW1iZXJUeXBlQmluZGluZyl0aGlzLmJpbmRpbmcuZGVjbGFyaW5nQ2xh
c3MsIHNvdXJjZVR5cGUpKSA/IAorCQkJCQkJCQkJCQkJCQkJCXNvdXJjZVR5cGUgOiBudWxsKTsK
KwkJCWludm9rZUR5bmFtaWNOdW1iZXIgPSBjb2RlU3RyZWFtLmNsYXNzRmlsZS5yZWNvcmRCb290
c3RyYXBNZXRob2Qoc20pOworCQkJCisJCX0gZWxzZSB7CisJCQlpbnZva2VEeW5hbWljTnVtYmVy
ID0gY29kZVN0cmVhbS5jbGFzc0ZpbGUucmVjb3JkQm9vdHN0cmFwTWV0aG9kKHRoaXMpOworCQl9
CiAJCWNvZGVTdHJlYW0uaW52b2tlRHluYW1pYyhpbnZva2VEeW5hbWljTnVtYmVyLCBhcmd1bWVu
dHNTaXplLCAxLCB0aGlzLmRlc2NyaXB0b3Iuc2VsZWN0b3IsIGJ1ZmZlci50b1N0cmluZygpLnRv
Q2hhckFycmF5KCksIAogCQkJCXRoaXMuaXNDb25zdHJ1Y3RvclJlZmVyZW5jZSgpLCAodGhpcy5s
aHMgaW5zdGFuY2VvZiBUeXBlUmVmZXJlbmNlPyAoVHlwZVJlZmVyZW5jZSkgdGhpcy5saHMgOiBu
dWxsKSwgdGhpcy50eXBlQXJndW1lbnRzKTsKIAkJaWYgKCF2YWx1ZVJlcXVpcmVkKQogCQkJY29k
ZVN0cmVhbS5wb3AoKTsKIAkJY29kZVN0cmVhbS5yZWNvcmRQb3NpdGlvbnNGcm9tKHBjLCB0aGlz
LnNvdXJjZVN0YXJ0KTsKKwl9CisJCisJcHJpdmF0ZSBzdGF0aWMgYm9vbGVhbiBpc1N1YkNsYXNz
T2YoU291cmNlVHlwZUJpbmRpbmcgdDEsIFNvdXJjZVR5cGVCaW5kaW5nIHQyKSB7CisJCVR5cGVC
aW5kaW5nIHQgPSB0MTsKKwkJd2hpbGUodCAhPSBudWxsKSB7CisJCQlpZiAodC5lcXVhbHModDIp
KSB7CisJCQkJcmV0dXJuIHRydWU7CisJCQl9CisJCQl0ID0gdC5zdXBlcmNsYXNzKCk7CisJCX0K
KwkJcmV0dXJuIGZhbHNlOworCX0KKworCXB1YmxpYyBib29sZWFuIHZhckFyZ3NQYXJhbWV0ZXJz
T25lT25PbmVDb3JyZXNwb25kZW5jZUNvbnNpZGVyaW5nQm94aW5nIChUeXBlQmluZGluZyBbXSB0
YjEsIFR5cGVCaW5kaW5nIFtdIHRiMiwgU2NvcGUgc2NvcGUpIHsKKwkJaW50IGxlbmd0aDsKKwkJ
aWYgKHRiMSA9PSB0YjIpIHsKKwkJCXJldHVybiB0cnVlOworCQl9CisJCWlmICgodGIxID09IG51
bGwgJiYgdGIyICE9IG51bGwpIHx8ICh0YjIgPT0gbnVsbCAmJiB0YjEgIT0gbnVsbCkgfHwgKHRi
MS5sZW5ndGggIT0gdGIyLmxlbmd0aCkpIHsKKwkJCXJldHVybiBmYWxzZTsKKwkJfQorCQlpZiAo
KGxlbmd0aCA9IHRiMS5sZW5ndGgpID09IDApIHsKKwkJCXJldHVybiB0cnVlOworCQl9CisJCWlm
ICghKHRiMVtsZW5ndGggLSAxXSBpbnN0YW5jZW9mIEFycmF5QmluZGluZykgfHwgISh0YjJbbGVu
Z3RoIC0gMV0gaW5zdGFuY2VvZiBBcnJheUJpbmRpbmcpKSB7CisJCQlyZXR1cm4gZmFsc2U7CisJ
CX0KKwkJTG9va3VwRW52aXJvbm1lbnQgZW52aXJvbm1lbnQgPSBzY29wZS5lbnZpcm9ubWVudCgp
OworCQlUeXBlQmluZGluZyB0eXBlMSA9ICgoQXJyYXlCaW5kaW5nKXRiMVtsZW5ndGggLSAxXSku
ZWxlbWVudHNUeXBlKCk7CisJCXR5cGUxID0gdHlwZTEuaXNCYXNlVHlwZSgpID8gZW52aXJvbm1l
bnQuY29tcHV0ZUJveGluZ1R5cGUodHlwZTEpIDogdHlwZTE7CisJCVR5cGVCaW5kaW5nIHR5cGUy
ID0gKChBcnJheUJpbmRpbmcpdGIyW2xlbmd0aCAtIDFdKS5lbGVtZW50c1R5cGUoKTsKKwkJdHlw
ZTIgPSB0eXBlMi5pc0Jhc2VUeXBlKCkgPyBlbnZpcm9ubWVudC5jb21wdXRlQm94aW5nVHlwZSh0
eXBlMikgOiB0eXBlMjsKKwkJaWYgKHR5cGUxLmlkICE9IHR5cGUyLmlkKSB7CisJCQlyZXR1cm4g
ZmFsc2U7CisJCX0KKwkJZm9yIChpbnQgaSA9IDA7IGkgPCBsZW5ndGggLSAxOyBpKyspIHsKKwkJ
CVR5cGVCaW5kaW5nIHQxID0gdGIxW2ldLmlzQmFzZVR5cGUoKSA/IGVudmlyb25tZW50LmNvbXB1
dGVCb3hpbmdUeXBlKHRiMVtpXSkgOiB0YjFbaV07CisJCQlUeXBlQmluZGluZyB0MiA9IHRiMltp
XS5pc0Jhc2VUeXBlKCkgPyBlbnZpcm9ubWVudC5jb21wdXRlQm94aW5nVHlwZSh0YjJbaV0pIDog
dGIyW2ldOworCQkJaWYodDEuaWQgIT0gdDIuaWQpIHsKKwkJCQlyZXR1cm4gZmFsc2U7CisJCQl9
CisJCX0JCQorCQlyZXR1cm4gdHJ1ZTsKKwl9CisJCisJcHJpdmF0ZSBTeW50aGV0aWNNZXRob2RC
aW5kaW5nIGdldEFwcHJvcHJpYXRlU3ludGhldGljTWV0aG9kKE1ldGhvZEJpbmRpbmcgY29kZWdl
bkJpbmRpbmcsIFNvdXJjZVR5cGVCaW5kaW5nIGRlc3RpbmF0aW9uVHlwZSwgYm9vbGVhbiBpc1N1
cGVyQWNjZXNzKSB7CisJCWlmIChjb2RlZ2VuQmluZGluZy5pc1ZhcmFyZ3MoKSAmJiAhKGNvZGVn
ZW5CaW5kaW5nIGluc3RhbmNlb2YgU3ludGhldGljTWV0aG9kQmluZGluZykgJiYgIWNvZGVnZW5C
aW5kaW5nLmFyZVBhcmFtZXRlckVyYXN1cmVzRXF1YWwodGhpcy5kZXNjcmlwdG9yKSkgeworCQkJ
U291cmNlVHlwZUJpbmRpbmcgYiA9IHRoaXMuZW5jbG9zaW5nU2NvcGUuY2xhc3NTY29wZSgpLnJl
ZmVyZW5jZUNvbnRleHQuYmluZGluZzsKKwkJCWlmIChiIGluc3RhbmNlb2YgTWVtYmVyVHlwZUJp
bmRpbmcgJiYgIWIuZXF1YWxzKGRlc3RpbmF0aW9uVHlwZSkpIHsKKwkJCQl0aGlzLmZpcnN0QnJp
ZGdlID0gYi5hZGRTeW50aGV0aWNNZXRob2RGb3JBcmd1bWVudENoYW5uZWxpbmdGb3JWYXJBcmdz
KHRoaXMuZGVzY3JpcHRvciwgdGhpcy5iaW5kaW5nLCBpc1N1cGVyQWNjZXNzLCB0aGlzLmxocyBp
bnN0YW5jZW9mIEFsbG9jYXRpb25FeHByZXNzaW9uID8gdGhpcy5yZWNlaXZlclR5cGUgOiBudWxs
LCBudWxsKTsKKwkJCQlyZXR1cm4gKChTeW50aGV0aWNNZXRob2RCaW5kaW5nKXRoaXMuZmlyc3RC
cmlkZ2UpLm5leHRCcmlkZ2UgPSBkZXN0aW5hdGlvblR5cGUuYWRkU3ludGhldGljTWV0aG9kKGNv
ZGVnZW5CaW5kaW5nLCBpc1N1cGVyQWNjZXNzKTsJCQkJCisJCQl9IGVsc2UgeworCQkJCXJldHVy
biBkZXN0aW5hdGlvblR5cGUuYWRkU3ludGhldGljTWV0aG9kRm9yQXJndW1lbnRDaGFubmVsaW5n
Rm9yVmFyQXJncyh0aGlzLmRlc2NyaXB0b3IsIHRoaXMuYmluZGluZywgaXNTdXBlckFjY2Vzcywg
dGhpcy5saHMgaW5zdGFuY2VvZiBBbGxvY2F0aW9uRXhwcmVzc2lvbiA/IHRoaXMucmVjZWl2ZXJU
eXBlIDogbnVsbCwgbnVsbCk7CisJCQl9CisJCX0gZWxzZSB7CisJCQlyZXR1cm4gZGVzdGluYXRp
b25UeXBlLmFkZFN5bnRoZXRpY01ldGhvZChjb2RlZ2VuQmluZGluZywgaXNTdXBlckFjY2Vzcyk7
CisJCX0JCQogCX0KIAkKIAlwdWJsaWMgdm9pZCBtYW5hZ2VTeW50aGV0aWNBY2Nlc3NJZk5lY2Vz
c2FyeShCbG9ja1Njb3BlIGN1cnJlbnRTY29wZSwgRmxvd0luZm8gZmxvd0luZm8pIHsKIAkJCiAJ
CWlmICgoZmxvd0luZm8udGFnQml0cyAmIEZsb3dJbmZvLlVOUkVBQ0hBQkxFX09SX0RFQUQpICE9
IDAgfHwgdGhpcy5iaW5kaW5nID09IG51bGwgfHwgIXRoaXMuYmluZGluZy5pc1ZhbGlkQmluZGlu
ZygpKSAKQEAgLTIwMiwxMSArMjc2LDExIEBACiAJCX0KIAkKIAkJLy8gLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0gICBPbmx5IG1ldGhvZCByZWZlcmVuY2VzIGZyb20gbm93IG9u
IC0tLS0tLS0tLS0tCiAJCWlmICh0aGlzLmJpbmRpbmcuaXNQcml2YXRlKCkpIHsKIAkJCWlmIChU
eXBlQmluZGluZy5ub3RFcXVhbHMoZW5jbG9zaW5nU291cmNlVHlwZSwgY29kZWdlbkJpbmRpbmcu
ZGVjbGFyaW5nQ2xhc3MpKXsKLQkJCQl0aGlzLnN5bnRoZXRpY0FjY2Vzc29yID0gKChTb3VyY2VU
eXBlQmluZGluZyljb2RlZ2VuQmluZGluZy5kZWNsYXJpbmdDbGFzcykuYWRkU3ludGhldGljTWV0
aG9kKGNvZGVnZW5CaW5kaW5nLCBmYWxzZSAvKiBub3Qgc3VwZXIgYWNjZXNzICovKTsKKwkJCQl0
aGlzLnN5bnRoZXRpY0FjY2Vzc29yID0gZ2V0QXBwcm9wcmlhdGVTeW50aGV0aWNNZXRob2QoY29k
ZWdlbkJpbmRpbmcsICgoU291cmNlVHlwZUJpbmRpbmcpY29kZWdlbkJpbmRpbmcuZGVjbGFyaW5n
Q2xhc3MpLCBmYWxzZSAvKiBub3Qgc3VwZXIgYWNjZXNzICovKTsKIAkJCQljdXJyZW50U2NvcGUu
cHJvYmxlbVJlcG9ydGVyKCkubmVlZFRvRW11bGF0ZU1ldGhvZEFjY2Vzcyhjb2RlZ2VuQmluZGlu
ZywgdGhpcyk7CiAJCQl9CiAJCQlyZXR1cm47CiAJCX0KIAkJCkBAIC0yMTcsMTEgKzI5MSwxMSBA
QAogCQkJCVR5cGVSZWZlcmVuY2UgcXVhbGlmaWNhdGlvbiA9IHF1YWxpZmllZFN1cGVyUmVmZXJl
bmNlLnF1YWxpZmljYXRpb247CiAJCQkJaWYgKCFxdWFsaWZpY2F0aW9uLnJlc29sdmVkVHlwZS5p
c0ludGVyZmFjZSgpKSAvLyB3ZSBjYW4ndCBkcm9wIHRoZSBicmlkZ2UgaW4gSSwgaXQgbWF5IG5v
dCBldmVuIGJlIGEgc291cmNlIHR5cGUuCiAJCQkJCWRlc3RpbmF0aW9uVHlwZSA9IChTb3VyY2VU
eXBlQmluZGluZykgKHF1YWxpZmllZFN1cGVyUmVmZXJlbmNlLmN1cnJlbnRDb21wYXRpYmxlVHlw
ZSk7CiAJCQl9CiAJCQkKLQkJCXRoaXMuc3ludGhldGljQWNjZXNzb3IgPSBkZXN0aW5hdGlvblR5
cGUuYWRkU3ludGhldGljTWV0aG9kKGNvZGVnZW5CaW5kaW5nLCB0cnVlKTsKKwkJCXRoaXMuc3lu
dGhldGljQWNjZXNzb3IgPSBnZXRBcHByb3ByaWF0ZVN5bnRoZXRpY01ldGhvZChjb2RlZ2VuQmlu
ZGluZywgZGVzdGluYXRpb25UeXBlLCB0cnVlKTsKIAkJCWN1cnJlbnRTY29wZS5wcm9ibGVtUmVw
b3J0ZXIoKS5uZWVkVG9FbXVsYXRlTWV0aG9kQWNjZXNzKGNvZGVnZW5CaW5kaW5nLCB0aGlzKTsK
IAkJCXJldHVybjsKIAkJfQogCQkKIAkJaWYgKHRoaXMuYmluZGluZy5pc1Byb3RlY3RlZCgpICYm
ICh0aGlzLmJpdHMgJiBBU1ROb2RlLkRlcHRoTUFTSykgIT0gMCAmJiBjb2RlZ2VuQmluZGluZy5k
ZWNsYXJpbmdDbGFzcy5nZXRQYWNrYWdlKCkgIT0gZW5jbG9zaW5nU291cmNlVHlwZS5nZXRQYWNr
YWdlKCkpIHsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jb2RlZ2VuL0NvZGVTdHJlYW0uamF2YSBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9jb2RlZ2VuL0NvZGVTdHJlYW0uamF2YQppbmRleCA0MDJkODRkLi4zMGY3M2ZiIDEwMDY0
NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvY29kZWdlbi9Db2RlU3RyZWFtLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NvZGVn
ZW4vQ29kZVN0cmVhbS5qYXZhCkBAIC0yOTYyLDEwICsyOTYyLDEyMyBAQAogCQkJCXRoaXMuY2hl
Y2tjYXN0KGFjY2Vzc0VyYXN1cmUpOyAvLyBmb3IgYnJpZGdlIG1ldGhvZHMKIAkJCX0KIAkJCWFy
ZXR1cm4oKTsKIAl9CiB9CitwdWJsaWMgdm9pZCBnZW5lcmF0ZVN5bnRoZXRpY0JvZHlGb3JNZXRo
b2RBY2Nlc3NGb3JWYXJBcmdzKFN5bnRoZXRpY01ldGhvZEJpbmRpbmcgYWNjZXNzTWV0aG9kKSB7
CisJaW5pdGlhbGl6ZU1heExvY2FscyhhY2Nlc3NNZXRob2QpOworCU1ldGhvZEJpbmRpbmcgdGFy
Z2V0TWV0aG9kID0gYWNjZXNzTWV0aG9kLnRhcmdldE1ldGhvZDsKKwlUeXBlQmluZGluZ1tdIHBh
cmFtZXRlcnMgPSB0YXJnZXRNZXRob2QucGFyYW1ldGVyczsKKwlpbnQgbGVuZ3RoID0gcGFyYW1l
dGVycy5sZW5ndGg7CisJaWYgKCEocGFyYW1ldGVyc1tsZW5ndGggLSAxXSBpbnN0YW5jZW9mIEFy
cmF5QmluZGluZykpIHsKKwkJcmV0dXJuOworCX0KKwlUeXBlQmluZGluZ1tdIGFyZ3VtZW50cyA9
IGFjY2Vzc01ldGhvZC5wdXJwb3NlID09IFN5bnRoZXRpY01ldGhvZEJpbmRpbmcuQ2hhbm5lbGlz
ZVBhcmFtc1RvVmFyQXJncworCQkJCQkJCQkJCQkJCT8gYWNjZXNzTWV0aG9kLnBhcmFtZXRlcnMK
KwkJCQkJCQkJCQkJCQk6IG51bGw7CisJaW50IHJlc29sdmVkUG9zaXRpb24sIGFycmF5TGVuZ3Ro
ID0gMDsKKwlpZiAodGFyZ2V0TWV0aG9kLmlzU3RhdGljKCkpCisJCXJlc29sdmVkUG9zaXRpb24g
PSAwOworCWVsc2UgaWYgKHRhcmdldE1ldGhvZC5pc0NvbnN0cnVjdG9yKCkpIHsKKwkJcmVzb2x2
ZWRQb3NpdGlvbiA9IDA7CisJCW5ld18odGFyZ2V0TWV0aG9kLmRlY2xhcmluZ0NsYXNzKTsKKwkJ
ZHVwKCk7CisJCWlmIChhY2Nlc3NNZXRob2QuYW5jZXN0b3IgIT0gbnVsbCkgeworCQkJYWxvYWRf
MCgpOworCQkJc3dpdGNoKHBhcmFtZXRlcnNbMF0uaWQpIHsKKwkJCQljYXNlIFR5cGVJZHMuVF9s
b25nIDoKKwkJCQljYXNlIFR5cGVJZHMuVF9kb3VibGUgOgorCQkJCQlyZXNvbHZlZFBvc2l0aW9u
ICs9IDI7CisJCQkJCWJyZWFrOworCQkJCWRlZmF1bHQgOgorCQkJCQlyZXNvbHZlZFBvc2l0aW9u
Kys7CisJCQkJCWJyZWFrOworCQkJfQorCQl9CisJfSBlbHNlIHsKKwkJYWxvYWRfMCgpOworCQly
ZXNvbHZlZFBvc2l0aW9uID0gMTsKKwkJaWYgKGFjY2Vzc01ldGhvZC5pc1N1cGVyQWNjZXNzKSB7
CisJCQlhcnJheUxlbmd0aCsrOworCQl9CisJfQorCWZvciAoaW50IGkgPSAwOyBpIDwgbGVuZ3Ro
IC0gMTsgaSsrKSB7CisJICAgIFR5cGVCaW5kaW5nIHBhcmFtZXRlciA9IHBhcmFtZXRlcnNbaV07
CisJICAgIGlmIChhcmd1bWVudHMgIT0gbnVsbCkgeyAvLyBmb3IgYnJpZGdlIG1ldGhvZHMKKwkJ
ICAgIFR5cGVCaW5kaW5nIGFyZ3VtZW50ID0gYXJndW1lbnRzW2ldOworCQkJbG9hZChhcmd1bWVu
dCwgcmVzb2x2ZWRQb3NpdGlvbik7CisJICAgIH0gZWxzZSB7CisJCQlsb2FkKHBhcmFtZXRlciwg
cmVzb2x2ZWRQb3NpdGlvbik7CisJCX0KKwkJc3dpdGNoKHBhcmFtZXRlci5pZCkgeworCQkJY2Fz
ZSBUeXBlSWRzLlRfbG9uZyA6CisJCQljYXNlIFR5cGVJZHMuVF9kb3VibGUgOgorCQkJCXJlc29s
dmVkUG9zaXRpb24gKz0gMjsKKwkJCQlicmVhazsKKwkJCWRlZmF1bHQgOgorCQkJCXJlc29sdmVk
UG9zaXRpb24rKzsKKwkJCQlicmVhazsKKwkJfQorCX0KKwlhcnJheUxlbmd0aCArPSBhcmd1bWVu
dHMubGVuZ3RoIC0gcmVzb2x2ZWRQb3NpdGlvbjsgLy8gKyAoYWNjZXNzTWV0aG9kLmlzU3VwZXJB
Y2Nlc3MgPyAxIDogMCk7CisJZ2VuZXJhdGVJbmxpbmVkVmFsdWUoYXJyYXlMZW5ndGgpOworCUFy
cmF5QmluZGluZyB2YXJBcmdUeXBlOworCW5ld0FycmF5KHZhckFyZ1R5cGUgPSAoQXJyYXlCaW5k
aW5nKXBhcmFtZXRlcnNbbGVuZ3RoIC0gMV0pOworCWZvcihpbnQgYXJyYXlJbmRleCA9IDA7IGFy
cmF5SW5kZXggPCBhcnJheUxlbmd0aDsgYXJyYXlJbmRleCsrKSB7CisJCWR1cCgpOworCQlnZW5l
cmF0ZUlubGluZWRWYWx1ZShhcnJheUluZGV4KTsKKwkJbG9hZCh2YXJBcmdUeXBlLmVsZW1lbnRz
VHlwZSgpLCByZXNvbHZlZFBvc2l0aW9uKyspOworCQlhcnJheUF0UHV0KHZhckFyZ1R5cGUuZWxl
bWVudHNUeXBlKCkuaWQsIGZhbHNlKTsKKwl9CisJaWYgKGFjY2Vzc01ldGhvZC5uZXh0QnJpZGdl
ICE9IG51bGwpIHsKKwkJdGFyZ2V0TWV0aG9kID0gYWNjZXNzTWV0aG9kLm5leHRCcmlkZ2U7CisJ
fQorCWlmICh0YXJnZXRNZXRob2QuaXNTdGF0aWMoKSkKKwkJaW52b2tlKE9wY29kZXMuT1BDX2lu
dm9rZXN0YXRpYywgdGFyZ2V0TWV0aG9kLCB0YXJnZXRNZXRob2QuZGVjbGFyaW5nQ2xhc3MpOwor
CWVsc2UgeworCQlpZiAodGFyZ2V0TWV0aG9kLmlzQ29uc3RydWN0b3IoKSB8fCB0YXJnZXRNZXRo
b2QuaXNQcml2YXRlKCkgfHwgYWNjZXNzTWV0aG9kLmlzU3VwZXJBY2Nlc3MpeworCQkJaW52b2tl
KE9wY29kZXMuT1BDX2ludm9rZXNwZWNpYWwsIHRhcmdldE1ldGhvZCwgdGFyZ2V0TWV0aG9kLmRl
Y2xhcmluZ0NsYXNzKTsKKwkJfSBlbHNlIHsKKwkJCWlmICh0YXJnZXRNZXRob2QuZGVjbGFyaW5n
Q2xhc3MuaXNJbnRlcmZhY2UoKSkgeworCQkJCWludm9rZShPcGNvZGVzLk9QQ19pbnZva2VpbnRl
cmZhY2UsIHRhcmdldE1ldGhvZCwgbnVsbCAvKiBkZWZhdWx0IGRlY2xhcmluZ0NsYXNzICovKTsK
KwkJCX0gZWxzZSB7CisJCQkJaW52b2tlKE9wY29kZXMuT1BDX2ludm9rZXZpcnR1YWwsIHRhcmdl
dE1ldGhvZCwgdGFyZ2V0TWV0aG9kLmRlY2xhcmluZ0NsYXNzKTsKKwkJCX0KKwkJfQorCX0KKwlp
ZiAodGFyZ2V0TWV0aG9kLnJldHVyblR5cGUuaWQgIT0gVHlwZUlkcy5UX3ZvaWQgJiYgYWNjZXNz
TWV0aG9kLnJldHVyblR5cGUuaWQgPT0gVHlwZUlkcy5UX3ZvaWQpIHsKKwkJcG9wKCk7CisJfQor
CXN3aXRjaCAoYWNjZXNzTWV0aG9kLnJldHVyblR5cGUuaWQpIHsKKwkJY2FzZSBUeXBlSWRzLlRf
dm9pZCA6CisJCQlyZXR1cm5fKCk7CisJCQlicmVhazsKKwkJY2FzZSBUeXBlSWRzLlRfYm9vbGVh
biA6CisJCWNhc2UgVHlwZUlkcy5UX2J5dGUgOgorCQljYXNlIFR5cGVJZHMuVF9jaGFyIDoKKwkJ
Y2FzZSBUeXBlSWRzLlRfc2hvcnQgOgorCQljYXNlIFR5cGVJZHMuVF9pbnQgOgorCQkJaXJldHVy
bigpOworCQkJYnJlYWs7CisJCWNhc2UgVHlwZUlkcy5UX2xvbmcgOgorCQkJbHJldHVybigpOwor
CQkJYnJlYWs7CisJCWNhc2UgVHlwZUlkcy5UX2Zsb2F0IDoKKwkJCWZyZXR1cm4oKTsKKwkJCWJy
ZWFrOworCQljYXNlIFR5cGVJZHMuVF9kb3VibGUgOgorCQkJZHJldHVybigpOworCQkJYnJlYWs7
CisJCWRlZmF1bHQgOgorCQkJVHlwZUJpbmRpbmcgYWNjZXNzRXJhc3VyZSA9IGFjY2Vzc01ldGhv
ZC5yZXR1cm5UeXBlLmVyYXN1cmUoKTsKKwkJCVR5cGVCaW5kaW5nIG1hdGNoID0gdGFyZ2V0TWV0
aG9kLnJldHVyblR5cGUuZmluZFN1cGVyVHlwZU9yaWdpbmF0aW5nRnJvbShhY2Nlc3NFcmFzdXJl
KTsKKwkJCWlmIChtYXRjaCA9PSBudWxsKSB7CisJCQkJdGhpcy5jaGVja2Nhc3QoYWNjZXNzRXJh
c3VyZSk7IC8vIGZvciBicmlkZ2UgbWV0aG9kcworCQkJfQorCQkJYXJldHVybigpOworCX0KK30K
IC8qKiBXaGVuIGdlbmVyYXRpbmcgU3VwZXJNZXRvZEFjY2VzcyB0b3dhcmRzIHRhcmdldE1ldGhv
ZCwKICAqICBmaW5kIHRoZSBzdWl0YWJsZSBkaXJlY3Qgc3VwZXIgdHlwZSwgdGhhdCB3aWxsIGV2
ZW50dWFsbHkgbGVhZCB0byB0YXJnZXRNZXRob2QuZGVjbGFyaW5nQ2xhc3MuKi8KIFJlZmVyZW5j
ZUJpbmRpbmcgZmluZERpcmVjdFN1cGVyVHlwZVRvd2FyZHMoU3ludGhldGljTWV0aG9kQmluZGlu
ZyBhY2Nlc3NNZXRob2QsIE1ldGhvZEJpbmRpbmcgdGFyZ2V0TWV0aG9kKSB7CiAJUmVmZXJlbmNl
QmluZGluZyBjdXJyZW50VHlwZSA9IGFjY2Vzc01ldGhvZC5kZWNsYXJpbmdDbGFzczsKIAlSZWZl
cmVuY2VCaW5kaW5nIHN1cGVyY2xhc3MgPSBjdXJyZW50VHlwZS5zdXBlcmNsYXNzKCk7CkBAIC01
Njg4LDEyICs1ODAxLDE2IEBACiAJbG9hZChsb2NhbEJpbmRpbmcudHlwZSwgbG9jYWxCaW5kaW5n
LnJlc29sdmVkUG9zaXRpb24pOwogfQogCiBwcm90ZWN0ZWQgZmluYWwgdm9pZCBsb2FkKFR5cGVC
aW5kaW5nIHR5cGVCaW5kaW5nLCBpbnQgcmVzb2x2ZWRQb3NpdGlvbikgewogCXRoaXMuY291bnRM
YWJlbHMgPSAwOworCWxvYWQodHlwZUJpbmRpbmcuaWQsIHJlc29sdmVkUG9zaXRpb24pOworfQor
Citwcm90ZWN0ZWQgZmluYWwgdm9pZCBsb2FkKGludCB0eXBlSWQsIGludCByZXNvbHZlZFBvc2l0
aW9uKSB7CiAJLy8gVXNpbmcgZGVkaWNhdGVkIGludCBieXRlY29kZQotCXN3aXRjaCh0eXBlQmlu
ZGluZy5pZCkgeworCXN3aXRjaCh0eXBlSWQpIHsKIAkJY2FzZSBUeXBlSWRzLlRfaW50IDoKIAkJ
Y2FzZSBUeXBlSWRzLlRfYnl0ZSA6CiAJCWNhc2UgVHlwZUlkcy5UX2NoYXIgOgogCQljYXNlIFR5
cGVJZHMuVF9ib29sZWFuIDoKIAkJY2FzZSBUeXBlSWRzLlRfc2hvcnQgOgpkaWZmIC0tZ2l0IGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9Tb3VyY2VUeXBlQmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Tb3Vy
Y2VUeXBlQmluZGluZy5qYXZhCmluZGV4IDc2NTNmMjUuLjc2N2RlOTkgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9sb29rdXAvU291cmNlVHlwZUJpbmRpbmcuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1Nv
dXJjZVR5cGVCaW5kaW5nLmphdmEKQEAgLTQwLDEyICs0MCwxNCBAQAogICogICAgICBBbmR5IENs
ZW1lbnQgKEdvUGl2b3RhbCwgSW5jKSBhY2xlbWVudEBnb3Bpdm90YWwuY29tIC0gQ29udHJpYnV0
aW9ucyBmb3IKICAqICAgICAgICAgICAgICAgICAgICAgICAgICAJQnVnIDQwNTEwNCAtIFsxLjhd
W2NvbXBpbGVyXVtjb2RlZ2VuXSBJbXBsZW1lbnQgc3VwcG9ydCBmb3Igc2VyaWFsaXplYWJsZSBs
YW1iZGFzCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cDsKIAoraW1wb3J0IGphdmEudXRpbC5BcnJheUxpc3Q7
CiBpbXBvcnQgamF2YS51dGlsLkhhc2hNYXA7CiBpbXBvcnQgamF2YS51dGlsLkl0ZXJhdG9yOwor
aW1wb3J0IGphdmEudXRpbC5MaXN0OwogCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuY29t
cGlsZXIuQ2hhck9wZXJhdGlvbjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIuYXN0LkFTVE5vZGU7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLmFzdC5BYnN0cmFjdE1ldGhvZERlY2xhcmF0aW9uOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5hc3QuQWJzdHJhY3RWYXJpYWJsZURlY2xhcmF0aW9uOwpAQCAt
ODQsMTAgKzg2LDEyIEBACiAJcHJpdmF0ZSBmaW5hbCBzdGF0aWMgaW50IENMQVNTX0xJVEVSQUxf
RU1VTCA9IDI7CiAKIAlwcml2YXRlIGZpbmFsIHN0YXRpYyBpbnQgTUFYX1NZTlRIRVRJQ1MgPSAz
OwogCiAJSGFzaE1hcFtdIHN5bnRoZXRpY3M7CisJTGlzdCByZWZlcmVuY2VFeHByZXNzaW9uQnJp
ZGdlcyA9IG51bGw7CisJCiAJY2hhcltdIGdlbmVyaWNSZWZlcmVuY2VUeXBlU2lnbmF0dXJlOwog
CiAJcHJpdmF0ZSBTaW1wbGVMb29rdXBUYWJsZSBzdG9yZWRBbm5vdGF0aW9ucyA9IG51bGw7IC8v
IGtleXMgYXJlIHRoaXMgUmVmZXJlbmNlQmluZGluZyAmIGl0cyBmaWVsZHMgYW5kIG1ldGhvZHMs
IHZhbHVlIGlzIGFuIEFubm90YXRpb25Ib2xkZXIKIAogCXByaXZhdGUgaW50IGRlZmF1bHROdWxs
bmVzczsKQEAgLTEzMCwxMCArMTM0LDExIEBACiAJdGhpcy5lbnZpcm9ubWVudCA9IHByb3RvdHlw
ZS5lbnZpcm9ubWVudDsKIAogCS8vIHRoaXMuc2NvcGUgPSBwcm90b3R5cGUuc2NvcGU7ICAvLyBX
aWxsIGRlZmVhdCBDb21waWxhdGlvblVuaXREZWNsYXJhdGlvbi5jbGVhblVwKFR5cGVEZWNsYXJh
dGlvbikgJiYgQ29tcGlsYXRpb25Vbml0RGVjbGFyYXRpb24uY2xlYW5VcCgpLCBzbyBub3QgY29w
aWVkLCBub3QgYW4gaXNzdWUgZm9yIEpTUiAzMDguCiAKIAl0aGlzLnN5bnRoZXRpY3MgPSBwcm90
b3R5cGUuc3ludGhldGljczsKKwl0aGlzLnJlZmVyZW5jZUV4cHJlc3Npb25CcmlkZ2VzID0gcHJv
dG90eXBlLnJlZmVyZW5jZUV4cHJlc3Npb25CcmlkZ2VzOwogCXRoaXMuZ2VuZXJpY1JlZmVyZW5j
ZVR5cGVTaWduYXR1cmUgPSBwcm90b3R5cGUuZ2VuZXJpY1JlZmVyZW5jZVR5cGVTaWduYXR1cmU7
CiAJdGhpcy5zdG9yZWRBbm5vdGF0aW9ucyA9IHByb3RvdHlwZS5zdG9yZWRBbm5vdGF0aW9uczsK
IAl0aGlzLmRlZmF1bHROdWxsbmVzcyA9IHByb3RvdHlwZS5kZWZhdWx0TnVsbG5lc3M7CiAJdGhp
cy5udWxsbmVzc0RlZmF1bHRJbml0aWFsaXplZD0gcHJvdG90eXBlLm51bGxuZXNzRGVmYXVsdElu
aXRpYWxpemVkOwogCXRoaXMubGFtYmRhT3JkaW5hbCA9IHByb3RvdHlwZS5sYW1iZGFPcmRpbmFs
OwpAQCAtNzc5LDEwICs3ODQsMjIgQEAKIAkJCWFjY2Vzc29yc1swXSA9IGFjY2Vzc01ldGhvZDsK
IAkJfQogCX0KIAlyZXR1cm4gYWNjZXNzTWV0aG9kOwogfQorCitwdWJsaWMgU3ludGhldGljTWV0
aG9kQmluZGluZyBhZGRTeW50aGV0aWNNZXRob2RGb3JBcmd1bWVudENoYW5uZWxpbmdGb3JWYXJB
cmdzKE1ldGhvZEJpbmRpbmcgaW5wdXQsIE1ldGhvZEJpbmRpbmcgdGFyZ2V0TWV0aG9kLCBib29s
ZWFuIGlzU3VwZXJBY2Nlc3MsIFR5cGVCaW5kaW5nIGFsbG9jYXRpb25UeXBlLCBUeXBlQmluZGlu
ZyBhbmNlc3RvcikgeworCWlmICghaXNQcm90b3R5cGUoKSkgdGhyb3cgbmV3IElsbGVnYWxTdGF0
ZUV4Y2VwdGlvbigpOworCWNoYXIgW10gc2VsZWN0b3IgPSBDaGFyT3BlcmF0aW9uLmNvbmNhdChU
eXBlQ29uc3RhbnRzLkFOT05ZTU9VU19NRVRIT0QsIEludGVnZXIudG9TdHJpbmcodGhpcy5sYW1i
ZGFPcmRpbmFsKyspLnRvQ2hhckFycmF5KCkpOworCVN5bnRoZXRpY01ldGhvZEJpbmRpbmcgYWNj
ZXNzTWV0aG9kID0gbmV3IFN5bnRoZXRpY01ldGhvZEJpbmRpbmcoaW5wdXQsIHRhcmdldE1ldGhv
ZCwgc2VsZWN0b3IsIHRoaXMsIGlzU3VwZXJBY2Nlc3MsIGFsbG9jYXRpb25UeXBlLCBhbmNlc3Rv
cik7CisJaWYgKHRoaXMucmVmZXJlbmNlRXhwcmVzc2lvbkJyaWRnZXMgPT0gbnVsbCkgeworCQl0
aGlzLnJlZmVyZW5jZUV4cHJlc3Npb25CcmlkZ2VzID0gbmV3IEFycmF5TGlzdCgpOworCX0KKwl0
aGlzLnJlZmVyZW5jZUV4cHJlc3Npb25CcmlkZ2VzLmFkZChhY2Nlc3NNZXRob2QpOworCXJldHVy
biBhY2Nlc3NNZXRob2Q7Cit9CisKIGJvb2xlYW4gYXJlRmllbGRzSW5pdGlhbGl6ZWQoKSB7CiAJ
aWYgKCFpc1Byb3RvdHlwZSgpKQogCQlyZXR1cm4gdGhpcy5wcm90b3R5cGUuYXJlRmllbGRzSW5p
dGlhbGl6ZWQoKTsKIAlyZXR1cm4gdGhpcy5maWVsZHMgIT0gQmluZGluZy5VTklOSVRJQUxJWkVE
X0ZJRUxEUzsKIH0KQEAgLTIyNzksMzkgKzIyOTYsNTIgQEAKIH0KIAogcHVibGljIFN5bnRoZXRp
Y01ldGhvZEJpbmRpbmdbXSBzeW50aGV0aWNNZXRob2RzKCkgewogCQogCWlmICghaXNQcm90b3R5
cGUoKSkgdGhyb3cgbmV3IElsbGVnYWxTdGF0ZUV4Y2VwdGlvbigpOwotCQotCWlmICh0aGlzLnN5
bnRoZXRpY3MgPT0gbnVsbCAKLQkJCXx8IHRoaXMuc3ludGhldGljc1tTb3VyY2VUeXBlQmluZGlu
Zy5NRVRIT0RfRU1VTF0gPT0gbnVsbCAKLQkJCXx8IHRoaXMuc3ludGhldGljc1tTb3VyY2VUeXBl
QmluZGluZy5NRVRIT0RfRU1VTF0uc2l6ZSgpID09IDApIHsKLQkJcmV0dXJuIG51bGw7Ci0JfQot
CS8vIGRpZmZpY3VsdCB0byBjb21wdXRlIHNpemUgdXAgZnJvbnQgYmVjYXVzZSBvZiB0aGUgZW1i
ZWRkZWQgYXJyYXlzIHNvIGFzc3VtZSB0aGVyZSBpcyBvbmx5IDEKKwogCWludCBpbmRleCA9IDA7
CiAJU3ludGhldGljTWV0aG9kQmluZGluZ1tdIGJpbmRpbmdzID0gbmV3IFN5bnRoZXRpY01ldGhv
ZEJpbmRpbmdbMV07Ci0JSXRlcmF0b3IgbWV0aG9kQXJyYXlJdGVyYXRvciA9IHRoaXMuc3ludGhl
dGljc1tTb3VyY2VUeXBlQmluZGluZy5NRVRIT0RfRU1VTF0udmFsdWVzKCkuaXRlcmF0b3IoKTsK
LQl3aGlsZSAobWV0aG9kQXJyYXlJdGVyYXRvci5oYXNOZXh0KCkpIHsKLQkJU3ludGhldGljTWV0
aG9kQmluZGluZ1tdIG1ldGhvZEFjY2Vzc29ycyA9IChTeW50aGV0aWNNZXRob2RCaW5kaW5nW10p
IG1ldGhvZEFycmF5SXRlcmF0b3IubmV4dCgpOwotCQlmb3IgKGludCBpID0gMCwgbWF4ID0gbWV0
aG9kQWNjZXNzb3JzLmxlbmd0aDsgaSA8IG1heDsgaSsrKSB7Ci0JCQlpZiAobWV0aG9kQWNjZXNz
b3JzW2ldICE9IG51bGwpIHsKLQkJCQlpZiAoaW5kZXgrMSA+IGJpbmRpbmdzLmxlbmd0aCkgewot
CQkJCQlTeXN0ZW0uYXJyYXljb3B5KGJpbmRpbmdzLCAwLCAoYmluZGluZ3MgPSBuZXcgU3ludGhl
dGljTWV0aG9kQmluZGluZ1tpbmRleCArIDFdKSwgMCwgaW5kZXgpOworCisJaWYgKCEodGhpcy5z
eW50aGV0aWNzID09IG51bGwgCisJCQl8fCB0aGlzLnN5bnRoZXRpY3NbU291cmNlVHlwZUJpbmRp
bmcuTUVUSE9EX0VNVUxdID09IG51bGwgCisJCQl8fCB0aGlzLnN5bnRoZXRpY3NbU291cmNlVHlw
ZUJpbmRpbmcuTUVUSE9EX0VNVUxdLnNpemUoKSA9PSAwKSkgeworCQkvLyBkaWZmaWN1bHQgdG8g
Y29tcHV0ZSBzaXplIHVwIGZyb250IGJlY2F1c2Ugb2YgdGhlIGVtYmVkZGVkIGFycmF5cyBzbyBh
c3N1bWUgdGhlcmUgaXMgb25seSAxCisJCUl0ZXJhdG9yIG1ldGhvZEFycmF5SXRlcmF0b3IgPSB0
aGlzLnN5bnRoZXRpY3NbU291cmNlVHlwZUJpbmRpbmcuTUVUSE9EX0VNVUxdLnZhbHVlcygpLml0
ZXJhdG9yKCk7CisJCXdoaWxlIChtZXRob2RBcnJheUl0ZXJhdG9yLmhhc05leHQoKSkgeworCQkJ
U3ludGhldGljTWV0aG9kQmluZGluZ1tdIG1ldGhvZEFjY2Vzc29ycyA9IChTeW50aGV0aWNNZXRo
b2RCaW5kaW5nW10pIG1ldGhvZEFycmF5SXRlcmF0b3IubmV4dCgpOworCQkJZm9yIChpbnQgaSA9
IDAsIG1heCA9IG1ldGhvZEFjY2Vzc29ycy5sZW5ndGg7IGkgPCBtYXg7IGkrKykgeworCQkJCWlm
IChtZXRob2RBY2Nlc3NvcnNbaV0gIT0gbnVsbCkgeworCQkJCQlpZiAoaW5kZXgrMSA+IGJpbmRp
bmdzLmxlbmd0aCkgeworCQkJCQkJU3lzdGVtLmFycmF5Y29weShiaW5kaW5ncywgMCwgKGJpbmRp
bmdzID0gbmV3IFN5bnRoZXRpY01ldGhvZEJpbmRpbmdbaW5kZXggKyAxXSksIDAsIGluZGV4KTsK
KwkJCQkJfQorCQkJCQliaW5kaW5nc1tpbmRleCsrXSA9IG1ldGhvZEFjY2Vzc29yc1tpXTsgCiAJ
CQkJfQotCQkJCWJpbmRpbmdzW2luZGV4KytdID0gbWV0aG9kQWNjZXNzb3JzW2ldOyAKIAkJCX0K
IAkJfQogCX0KLQkvLyBzb3J0IHRoZW0gaW4gYWNjb3JkaW5nIHRvIHRoZWlyIG93biBpbmRleGVz
Ci0JaW50IGxlbmd0aDsKLQlTeW50aGV0aWNNZXRob2RCaW5kaW5nW10gc29ydGVkQmluZGluZ3Mg
PSBuZXcgU3ludGhldGljTWV0aG9kQmluZGluZ1tsZW5ndGggPSBiaW5kaW5ncy5sZW5ndGhdOwot
CWZvciAoaW50IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspewotCQlTeW50aGV0aWNNZXRob2RCaW5k
aW5nIGJpbmRpbmcgPSBiaW5kaW5nc1tpXTsKLQkJc29ydGVkQmluZGluZ3NbYmluZGluZy5pbmRl
eF0gPSBiaW5kaW5nOworCisJaWYgKCEodGhpcy5yZWZlcmVuY2VFeHByZXNzaW9uQnJpZGdlcyA9
PSBudWxsIHx8IHRoaXMucmVmZXJlbmNlRXhwcmVzc2lvbkJyaWRnZXMuc2l6ZSgpID09IDApKSB7
CisJCVN5c3RlbS5hcnJheWNvcHkoYmluZGluZ3MsIDAsIChiaW5kaW5ncyA9IG5ldyBTeW50aGV0
aWNNZXRob2RCaW5kaW5nW2luZGV4ICsgdGhpcy5yZWZlcmVuY2VFeHByZXNzaW9uQnJpZGdlcy5z
aXplKCldKSwgMCwgaW5kZXgpOworCQlJdGVyYXRvciBpdGVyID0gdGhpcy5yZWZlcmVuY2VFeHBy
ZXNzaW9uQnJpZGdlcy5pdGVyYXRvcigpOworCQl3aGlsZSAoaXRlci5oYXNOZXh0KCkpIHsKKwkJ
CWJpbmRpbmdzW2luZGV4KytdID0gKFN5bnRoZXRpY01ldGhvZEJpbmRpbmcpaXRlci5uZXh0KCk7
CisJCX0KIAl9Ci0JcmV0dXJuIHNvcnRlZEJpbmRpbmdzOworCisJaWYgKGluZGV4ID4gMCkgewor
CQkvLyBzb3J0IHRoZW0gaW4gYWNjb3JkaW5nIHRvIHRoZWlyIG93biBpbmRleGVzCisJCWludCBs
ZW5ndGg7CisJCVN5bnRoZXRpY01ldGhvZEJpbmRpbmdbXSBzb3J0ZWRCaW5kaW5ncyA9IG5ldyBT
eW50aGV0aWNNZXRob2RCaW5kaW5nW2xlbmd0aCA9IGJpbmRpbmdzLmxlbmd0aF07CisJCWZvciAo
aW50IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspeworCQkJU3ludGhldGljTWV0aG9kQmluZGluZyBi
aW5kaW5nID0gYmluZGluZ3NbaV07CisJCQlzb3J0ZWRCaW5kaW5nc1tiaW5kaW5nLmluZGV4XSA9
IGJpbmRpbmc7CisJCX0KKwkJcmV0dXJuIHNvcnRlZEJpbmRpbmdzOworCX0gZWxzZSB7CisJCXJl
dHVybiBudWxsOworCX0KIH0KIC8qKgogICogQW5zd2VyIHRoZSBjb2xsZWN0aW9uIG9mIHN5bnRo
ZXRpYyBmaWVsZHMgdG8gYXBwZW5kIGludG8gdGhlIGNsYXNzZmlsZQogICovCiBwdWJsaWMgRmll
bGRCaW5kaW5nW10gc3ludGhldGljRmllbGRzKCkgewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1
cC9TeW50aGV0aWNNZXRob2RCaW5kaW5nLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1N5bnRoZXRpY01l
dGhvZEJpbmRpbmcuamF2YQppbmRleCBkMTE4MDViLi43ZjMxOWUzIDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvbG9va3VwL1N5bnRoZXRpY01ldGhvZEJpbmRpbmcuamF2YQorKysgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3Vw
L1N5bnRoZXRpY01ldGhvZEJpbmRpbmcuamF2YQpAQCAtMjksMTAgKzI5LDExIEBACiAJcHVibGlj
IEZpZWxkQmluZGluZyB0YXJnZXRSZWFkRmllbGQ7CQkvLyByZWFkIGFjY2VzcyB0byBhIGZpZWxk
CiAJcHVibGljIEZpZWxkQmluZGluZyB0YXJnZXRXcml0ZUZpZWxkOwkJLy8gd3JpdGUgYWNjZXNz
IHRvIGEgZmllbGQKIAlwdWJsaWMgTWV0aG9kQmluZGluZyB0YXJnZXRNZXRob2Q7CQkJLy8gbWV0
aG9kIG9yIGNvbnN0cnVjdG9yCiAJcHVibGljIFR5cGVCaW5kaW5nIHRhcmdldEVudW1UeXBlOyAJ
CQkvLyBlbnVtIHR5cGUKIAlwdWJsaWMgTGFtYmRhRXhwcmVzc2lvbiBsYW1iZGE7CisJcHVibGlj
IE1ldGhvZEJpbmRpbmcgaW5wdXRNZXRob2QgPSBudWxsOwogCQogCXB1YmxpYyBpbnQgcHVycG9z
ZTsKIAogCS8vIGZpZWxkcyB1c2VkIHRvIGdlbmVyYXRlIGVudW0gY29uc3RhbnRzIHdoZW4gdG9v
IG1hbnkKIAlwdWJsaWMgaW50IHN0YXJ0SW5kZXg7CkBAIC01MywxNCArNTQsNjkgQEAKIAlwdWJs
aWMgc3RhdGljIGZpbmFsIGludCBMYW1iZGFNZXRob2QgPSAxMzsgLy8gTGFtYmRhIGJvZHkgZW1p
dHRlZCBhcyBhIG1ldGhvZC4KIAlwdWJsaWMgZmluYWwgc3RhdGljIGludCBBcnJheUNvbnN0cnVj
dG9yID0gMTQ7IC8vIFhbXTo6bmV3CiAJcHVibGljIHN0YXRpYyBmaW5hbCBpbnQgQXJyYXlDbG9u
ZSA9IDE1OyAvLyBYW106OmNsb25lCiAgICAgcHVibGljIHN0YXRpYyBmaW5hbCBpbnQgRmFjdG9y
eU1ldGhvZCA9IDE2OyAvLyBmb3IgaW5keSBjYWxsIHRvIHByaXZhdGUgY29uc3RydWN0b3IuCiAg
ICAgcHVibGljIHN0YXRpYyBmaW5hbCBpbnQgRGVzZXJpYWxpemVMYW1iZGEgPSAxNzsgLy8gRm9y
IHN1cHBvcnRpbmcgbGFtYmRhIGRlc2VyaWFsaXphdGlvbi4KKyAgICBwdWJsaWMgc3RhdGljIGZp
bmFsIGludCBDaGFubmVsaXNlUGFyYW1zVG9WYXJBcmdzID0gMTg7CiAgICAgCiAJcHVibGljIGlu
dCBzb3VyY2VTdGFydCA9IDA7IC8vIHN0YXJ0IHBvc2l0aW9uIG9mIHRoZSBtYXRjaGluZyBkZWNs
YXJhdGlvbgogCXB1YmxpYyBpbnQgaW5kZXg7IC8vIHVzZWQgZm9yIHNvcnRpbmcgYWNjZXNzIG1l
dGhvZHMgaW4gdGhlIGNsYXNzIGZpbGUKIAlwdWJsaWMgaW50IGZha2VQYWRkZWRQYXJhbWV0ZXJz
ID0gMDsgLy8gYWRkZWQgaW4gc3ludGhldGljIGNvbnN0cnVjdG9yIHRvIGF2b2lkIG5hbWUgY2xh
c2guCisJcHVibGljIGJvb2xlYW4gaXNTdXBlckFjY2VzcyA9IGZhbHNlOworCXB1YmxpYyBUeXBl
QmluZGluZyBhbmNlc3RvciA9IG51bGw7CisJcHVibGljIFN5bnRoZXRpY01ldGhvZEJpbmRpbmcg
bmV4dEJyaWRnZSA9IG51bGw7CisKKwlwdWJsaWMgU3ludGhldGljTWV0aG9kQmluZGluZyhNZXRo
b2RCaW5kaW5nIGlucHV0TWV0aG9kLCBNZXRob2RCaW5kaW5nIHRhcmdldE1ldGhvZCwgY2hhciBb
XSBzZWxlY3RvciwgU291cmNlVHlwZUJpbmRpbmcgZGVjbGFyaW5nQ2xhc3MsIGJvb2xlYW4gaXNT
dXBlckFjY2VzcywgVHlwZUJpbmRpbmcgYWxsb2NhdGlvblR5cGUsIFR5cGVCaW5kaW5nIGFuY2Vz
dG9yKSB7CisJICAgIHRoaXMuZGVjbGFyaW5nQ2xhc3MgPSBkZWNsYXJpbmdDbGFzczsKKwkJdGhp
cy5wdXJwb3NlID0gU3ludGhldGljTWV0aG9kQmluZGluZy5DaGFubmVsaXNlUGFyYW1zVG9WYXJB
cmdzOworCSAgICB0aGlzLm1vZGlmaWVycyA9ICh0YXJnZXRNZXRob2QubW9kaWZpZXJzIHwgQ2xh
c3NGaWxlQ29uc3RhbnRzLkFjY0JyaWRnZSB8IENsYXNzRmlsZUNvbnN0YW50cy5BY2NTeW50aGV0
aWMpICYgfihDbGFzc0ZpbGVDb25zdGFudHMuQWNjU3luY2hyb25pemVkIHwgQ2xhc3NGaWxlQ29u
c3RhbnRzLkFjY0Fic3RyYWN0IHwgQ2xhc3NGaWxlQ29uc3RhbnRzLkFjY05hdGl2ZSAgfCBDbGFz
c0ZpbGVDb25zdGFudHMuQWNjRmluYWwgfCBFeHRyYUNvbXBpbGVyTW9kaWZpZXJzLkFjY0dlbmVy
aWNTaWduYXR1cmUgfCBDbGFzc0ZpbGVDb25zdGFudHMuQWNjVmFyYXJncyk7CisJCWlmIChpc1N1
cGVyQWNjZXNzKSB7CisJCQl0aGlzLm1vZGlmaWVycyB8PSBDbGFzc0ZpbGVDb25zdGFudHMuQWNj
UHJpdmF0ZTsKKwkJfSBlbHNlIHsKKwkJCXRoaXMubW9kaWZpZXJzIHw9IENsYXNzRmlsZUNvbnN0
YW50cy5BY2NTdGF0aWM7CisJCX0KKwkJaWYgKHRhcmdldE1ldGhvZC5pc1N0YXRpYygpKSB7CisJ
CQl0aGlzLm1vZGlmaWVycyB8PSBDbGFzc0ZpbGVDb25zdGFudHMuQWNjU3RhdGljOworCQl9CisJ
ICAgIHRoaXMudGFnQml0cyB8PSAoVGFnQml0cy5Bbm5vdGF0aW9uUmVzb2x2ZWQgfCBUYWdCaXRz
LkRlcHJlY2F0ZWRBbm5vdGF0aW9uUmVzb2x2ZWQpOworCSAgICB0aGlzLnJldHVyblR5cGUgPSBp
bnB1dE1ldGhvZC5yZXR1cm5UeXBlOworCSAgICB0aGlzLnRocm93bkV4Y2VwdGlvbnMgPSBpbnB1
dE1ldGhvZC50aHJvd25FeGNlcHRpb25zOworCSAgICB0aGlzLnRhcmdldE1ldGhvZCA9IHRhcmdl
dE1ldGhvZDsKKwkgICAgdGhpcy5pc1N1cGVyQWNjZXNzID0gaXNTdXBlckFjY2VzczsKKwkJU3lu
dGhldGljTWV0aG9kQmluZGluZ1tdIGtub3duQWNjZXNzTWV0aG9kcyA9IGRlY2xhcmluZ0NsYXNz
LnN5bnRoZXRpY01ldGhvZHMoKTsKKwkJaW50IG1ldGhvZElkID0ga25vd25BY2Nlc3NNZXRob2Rz
ID09IG51bGwgPyAwIDoga25vd25BY2Nlc3NNZXRob2RzLmxlbmd0aDsKKwkJdGhpcy5pbmRleCA9
IG1ldGhvZElkOworCQl0aGlzLmlucHV0TWV0aG9kID0gaW5wdXRNZXRob2Q7CisJCXRoaXMuc2Vs
ZWN0b3IgPSBzZWxlY3RvcjsKKwkJaWYgKGFuY2VzdG9yICE9IG51bGwpIHsKKwkJCXRoaXMuYW5j
ZXN0b3IgPSBhbmNlc3RvcjsKKwkJfQorCQlpbnQgbGVuZ3RoID0gaW5wdXRNZXRob2QucGFyYW1l
dGVycy5sZW5ndGg7CisJCWlmICgoIXRhcmdldE1ldGhvZC5pc1N0YXRpYygpICYmICF0YXJnZXRN
ZXRob2QuaXNDb25zdHJ1Y3RvcigpICYmICFpc1N1cGVyQWNjZXNzKSB8fCBhbmNlc3RvciAhPSBu
dWxsKSB7CisJCQlsZW5ndGgrKzsKKwkJfQorCQl0aGlzLnBhcmFtZXRlcnMgPSBuZXcgVHlwZUJp
bmRpbmdbbGVuZ3RoXTsKKwkJaW50IGN1cnJJbmR4ID0gMDsKKwkJaWYgKCghdGFyZ2V0TWV0aG9k
LmlzU3RhdGljKCkgJiYgIXRhcmdldE1ldGhvZC5pc0NvbnN0cnVjdG9yKCkgJiYgIWlzU3VwZXJB
Y2Nlc3MpIHx8IGFuY2VzdG9yICE9IG51bGwpIHsKKwkJCWlmIChhbGxvY2F0aW9uVHlwZSAhPSBu
dWxsKSB7CisJCQkJdGhpcy5wYXJhbWV0ZXJzW2N1cnJJbmR4KytdID0gYWxsb2NhdGlvblR5cGU7
CisJCQl9IGVsc2UgaWYgKGFuY2VzdG9yICE9IG51bGwpIHsKKwkJCQl0aGlzLnBhcmFtZXRlcnNb
Y3VyckluZHgrK10gPSBhbmNlc3RvcjsKKwkJCX0gZWxzZSB7CisJCQkJdGhpcy5wYXJhbWV0ZXJz
W2N1cnJJbmR4KytdID0gdGFyZ2V0TWV0aG9kLmRlY2xhcmluZ0NsYXNzOworCQkJfQorCQl9CisJ
CWludCBqID0gdGFyZ2V0TWV0aG9kLnBhcmFtZXRlcnMubGVuZ3RoIC0gMSArIGN1cnJJbmR4Owor
CQlpbnQgayA9IDA7CisJCXdoaWxlIChjdXJySW5keCA8IGopIHsKKwkJCXRoaXMucGFyYW1ldGVy
c1tjdXJySW5keCsrXSA9IHRhcmdldE1ldGhvZC5wYXJhbWV0ZXJzW2srK107CisJCX0KKwkJVHlw
ZUJpbmRpbmcgdGIgPSAoKEFycmF5QmluZGluZyl0YXJnZXRNZXRob2QucGFyYW1ldGVyc1t0YXJn
ZXRNZXRob2QucGFyYW1ldGVycy5sZW5ndGggLSAxXSkuZWxlbWVudHNUeXBlKCk7CisJCXdoaWxl
IChjdXJySW5keCA8IGxlbmd0aCkgeworCQkJdGhpcy5wYXJhbWV0ZXJzW2N1cnJJbmR4KytdID0g
dGI7CisJCX0KKwl9CiAKIAlwdWJsaWMgU3ludGhldGljTWV0aG9kQmluZGluZyhGaWVsZEJpbmRp
bmcgdGFyZ2V0RmllbGQsIGJvb2xlYW4gaXNSZWFkQWNjZXNzLCBib29sZWFuIGlzU3VwZXJBY2Nl
c3MsIFJlZmVyZW5jZUJpbmRpbmcgZGVjbGFyaW5nQ2xhc3MpIHsKIAogCQl0aGlzLm1vZGlmaWVy
cyA9IENsYXNzRmlsZUNvbnN0YW50cy5BY2NEZWZhdWx0IHwgQ2xhc3NGaWxlQ29uc3RhbnRzLkFj
Y1N0YXRpYyB8IENsYXNzRmlsZUNvbnN0YW50cy5BY2NTeW50aGV0aWM7CiAJCXRoaXMudGFnQml0
cyB8PSAoVGFnQml0cy5Bbm5vdGF0aW9uUmVzb2x2ZWQgfCBUYWdCaXRzLkRlcHJlY2F0ZWRBbm5v
dGF0aW9uUmVzb2x2ZWQpOw==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>239563</attachid>
            <date>2014-02-02 15:47:00 -0500</date>
            <delta_ts>2014-02-02 15:47:46 -0500</delta_ts>
            <desc>Proposed patch</desc>
            <filename>newvararg.patch</filename>
            <type>text/plain</type>
            <size>23407</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0xhbWJkYUV4cHJlc3Np
b25zVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTGFtYmRhRXhwcmVz
c2lvbnNUZXN0LmphdmEKaW5kZXggN2RkMzRhMy4uZjc3NjgyOCAxMDA2NDQKLS0tIGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTGFtYmRhRXhwcmVzc2lvbnNUZXN0LmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTGFtYmRhRXhwcmVzc2lvbnNUZXN0LmphdmEK
QEAgLTI0NTIsNyArMjQ1Miw3IEBACiB9CiAvLyBCdWcgNDA2NzQ0IC0gWzEuOF1bY29tcGlsZXJd
W2NvZGVnZW5dIExhbWJkYUNvbnZlcnNpb25FeGNlcHRpb24gc2VlbiB3aGVuIG1ldGhvZCByZWZl
cmVuY2UgdGFyZ2V0cyBhIHZhcmFyZ3MgbWV0aG9kLgogLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uu
b3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwNjc0NAotcHVibGljIHZvaWQgX3Rlc3Q0MDY3NDRh
KCkgeworcHVibGljIHZvaWQgdGVzdDQwNjc0NGEoKSB7CiAJdGhpcy5ydW5Db25mb3JtVGVzdCgK
IAkJCW5ldyBTdHJpbmdbXSB7CiAJCQkJIlguamF2YSIsCkBAIC0yNDgxLDcgKzI0ODEsNyBAQAog
CQkJIjEwLCAyMCIKIAkJCSk7CiB9Ci1wdWJsaWMgdm9pZCBfdGVzdDQwNjc0NGIoKSB7CitwdWJs
aWMgdm9pZCB0ZXN0NDA2NzQ0YigpIHsKIAl0aGlzLnJ1bkNvbmZvcm1UZXN0KAogCQkJbmV3IFN0
cmluZ1tdIHsKIAkJCQkiWC5qYXZhIiwKQEAgLTI1MTEsNyArMjUxMSw3IEBACiAJCQkiMTAsIDIw
IgogCQkJKTsKIH0KLXB1YmxpYyB2b2lkIF90ZXN0NDA2NzQ0YygpIHsKK3B1YmxpYyB2b2lkIHRl
c3Q0MDY3NDRjKCkgewogCXRoaXMucnVuQ29uZm9ybVRlc3QoCiAJCQluZXcgU3RyaW5nW10gewog
CQkJCSJYLmphdmEiLApAQCAtMjU0NCw3ICsyNTQ0LDU3OSBAQAogCQkJIjEwLCAyMCIKIAkJCSk7
CiB9Ci0KK3B1YmxpYyB2b2lkIHRlc3Q0MDY3NDRkKCkgeworCXRoaXMucnVuQ29uZm9ybVRlc3Qo
CisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEiLAorCQkJCSJpbnRlcmZhY2UgSSB7XG4i
ICsKKwkJCQkiCXZvaWQgZm9vKGludCBhMSwgSW50ZWdlciBhMiwgU3RyaW5nIGEzKTtcbiIgKwor
CQkJCSJ9XG4iICsKKwkJCQkiaW50ZXJmYWNlIFkge1xuIiArCisJCQkJIglzdGF0aWMgdm9pZCBt
KGZsb2F0IGExLCBPYmplY3QuLi4gcmVzdCkge1xuIiArIAorCQkJCSIJCVN5c3RlbS5vdXQucHJp
bnRsbihhMSk7XG4iICsKKwkJCQkiCQlwcmludChyZXN0KTtcbiIgKworCQkJCSIJfVxuIiArCisJ
CQkJIglzdGF0aWMgdm9pZCBwcmludCAoT2JqZWN0IFtdIG8pIHtcbiIgKworCQkJCSIJCWZvciAo
aW50IGkgPSAwOyBpIDwgby5sZW5ndGg7IGkrKylcbiIgKworCQkJCSIJCQlTeXN0ZW0ub3V0LnBy
aW50bG4ob1tpXSk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iICsKKwkJCQkicHVibGlj
IGludGVyZmFjZSBYIGV4dGVuZHMgWXtcbiIgKworCQkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1h
aW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJCSIJCUkgaSA9IFk6Om07XG4iICsKKwkJCQki
CQlpLmZvbygxMCwgMjAsIFwiMTAsIDIwXCIpO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxu
IiwKKwkJCX0sCisJCQkiMTAuMFxuIiArCisJCQkiMjBcbiIgKworCQkJIjEwLCAyMCIKKwkJCSk7
Cit9CitwdWJsaWMgdm9pZCB0ZXN0NDA2NzQ0ZSgpIHsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAor
CQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiWC5qYXZhIiwKKwkJCQkiaW50ZXJmYWNlIEkge1xuIiAr
CisJCQkJIglTdHJpbmcgbWV0aG9kKGludCBhKTtcbiIgKworCQkJCSJ9XG4iICsKKwkJCQkiY2xh
c3MgQyB7XG4iICsKKwkJCQkiCXN0YXRpYyBTdHJpbmcgZm9vKEludGVnZXIuLi4gaSkge1xuIiAr
CisJCQkJIgkJcmV0dXJuIFwiZm9vXCI7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJc3RhdGlj
IFN0cmluZyBnb28oSW50ZWdlciBiaSwgSW50ZWdlci4uLiBpKSB7XG4iICsKKwkJCQkiCQlyZXR1
cm4gXCJiYXJcIjtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIglwdWJsaWMgdm9pZCBmb28oKSB7
XG4iICsKKwkJCQkiCQlJIGk7XG4iICsKKwkJCQkiCQlpID0gQzo6Zm9vO1xuIiArCisJCQkJIgkJ
U3lzdGVtLm91dC5wcmludGxuKGkubWV0aG9kKDApKTtcbiIgKworCQkJCSIJCWkgPSBDOjpnb287
XG4iICsKKwkJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oaS5tZXRob2QoMCkpO1xuIiArCisJCQkJ
Igl9XG4iICsKKwkJCQkifVxuIiArCisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJCSIJ
cHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIGFyZ3ZbXSkgICB7XG4iICsKKwkJCQkiCQlu
ZXcgQygpLmZvbygpO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxuIiwKKwkJCX0sCisJCQki
Zm9vXG4iICsKKwkJCSJiYXIiCisJCQkpOworfQorcHVibGljIHZvaWQgdGVzdDQwNjc0NGYoKSB7
CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJIlguamF2YSIs
CisJCQkJImludGVyZmFjZSBJIHtcbiIgKworCQkJCSIJdm9pZCBmb28oSW50ZWdlciBhMSwgSW50
ZWdlciBhMiwgU3RyaW5nIGEzKTtcbiIgKworCQkJCSJ9XG4iICsKKwkJCQkiY2xhc3MgWSB7XG4i
ICsKKwkJCQkiCXZvaWQgbShOdW1iZXIgYTEsIE9iamVjdC4uLiByZXN0KSB7XG4iICsgCisJCQkJ
IgkJU3lzdGVtLm91dC5wcmludGxuKGExKTtcbiIgKworCQkJCSIJCXByaW50KHJlc3QpO1xuIiAr
CisJCQkJIgl9XG4iICsKKwkJCQkiCXN0YXRpYyB2b2lkIHByaW50IChPYmplY3QgW10gbykge1xu
IiArCisJCQkJIgkJZm9yIChpbnQgaSA9IDA7IGkgPCBvLmxlbmd0aDsgaSsrKVxuIiArCisJCQkJ
IgkJCVN5c3RlbS5vdXQucHJpbnRsbihvW2ldKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn1c
biIgKworCQkJCSJwdWJsaWMgY2xhc3MgWCBleHRlbmRzIFkge1xuIiArCisJCQkJIglzdGF0aWMg
dm9pZCBwcmludCAoT2JqZWN0IFtdIG8pIHtcbiIgKworCQkJCSIJCWZvciAoaW50IGkgPSAwOyBp
IDwgby5sZW5ndGg7IGkrKylcbiIgKworCQkJCSIJCQlTeXN0ZW0ub3V0LnByaW50bG4ob1tpXSk7
XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5n
IFtdIGFyZ3MpIHtcbiIgKworCQkJCSIJCW5ldyBYKCkuZm9vKCk7XG4iICsKKwkJCQkiCX1cbiIg
KworCQkJCSIJdm9pZCBmb28oKSB7XG4iICsgCisJCQkJIgkJSSBpID0gc3VwZXI6Om07XG4iICsK
KwkJCQkiCQlpLmZvbygxMCwgMjAsIFwiMTAsIDIwXCIpO1xuIiArCisJCQkJIgl9XG4iICsKKwkJ
CQkifVxuIiwKKwkJCX0sCisJCQkiMTBcbiIgKworCQkJIjIwXG4iICsKKwkJCSIxMCwgMjAiCisJ
CQkpOworfQorcHVibGljIHZvaWQgdGVzdDQwNjc0NGcoKSB7CisJdGhpcy5ydW5Db25mb3JtVGVz
dCgKKwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJIlguamF2YSIsCisJCQkJImludGVyZmFjZSBJIHtc
biIgKworCQkJCSIJdm9pZCBmb28oSW50ZWdlciBhMSwgSW50ZWdlciBhMiwgU3RyaW5nIGEzKTtc
biIgKworCQkJCSJ9XG4iICsKKwkJCQkiY2xhc3MgWSB7XG4iICsKKwkJCQkiCXN0YXRpYyB2b2lk
IHByaW50IChPYmplY3QgW10gbykge1xuIiArCisJCQkJIgkJZm9yIChpbnQgaSA9IDA7IGkgPCBv
Lmxlbmd0aDsgaSsrKVxuIiArCisJCQkJIgkJCVN5c3RlbS5vdXQucHJpbnRsbihvW2ldKTtcbiIg
KworCQkJCSIJfVxuIiArCisJCQkJIn1cbiIgKworCQkJCSJwdWJsaWMgY2xhc3MgWCBleHRlbmRz
IFkge1xuIiArCisJCQkJIglwcml2YXRlIHZvaWQgbShOdW1iZXIgYTEsIE9iamVjdC4uLiByZXN0
KSB7XG4iICsgCisJCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKGExKTtcbiIgKworCQkJCSIJCXBy
aW50KHJlc3QpO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkiCXN0YXRpYyB2b2lkIHByaW50IChP
YmplY3QgW10gbykge1xuIiArCisJCQkJIgkJZm9yIChpbnQgaSA9IDA7IGkgPCBvLmxlbmd0aDsg
aSsrKVxuIiArCisJCQkJIgkJCVN5c3RlbS5vdXQucHJpbnRsbihvW2ldKTtcbiIgKworCQkJCSIJ
fVxuIiArCisJCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykge1xu
IiArCisJCQkJIgkJbmV3IFgoKS5mb28oKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIgl2b2lk
IGZvbygpIHtcbiIgKyAKKwkJCQkiCQlJIGkgPSB0aGlzOjptO1xuIiArCisJCQkJIgkJaS5mb28o
MTAsIDIwLCBcIjEwLCAyMFwiKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn1cbiIsCisJCQl9
LAorCQkJIjEwXG4iICsKKwkJCSIyMFxuIiArCisJCQkiMTAsIDIwIgorCQkJKTsKK30KK3B1Ymxp
YyB2b2lkIHRlc3Q0MDY3NDRoKCkgeworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQluZXcgU3Ry
aW5nW10geworCQkJCSJYLmphdmEiLAorCQkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCQkiCXZv
aWQgZm9vKGludCBbXSBpYSk7XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNsYXNzIFkge1xuIiAr
CisJCQkJIgl2b2lkIG0oT2JqZWN0Li4uIHJlc3QpIHtcbiIgKyAKKwkJCQkiCQlTeXN0ZW0ub3V0
LnByaW50bG4oXCJIZWxsbyBcIiArIHJlc3QubGVuZ3RoKTtcbiIgKworCQkJCSIJfVxuIiArCisJ
CQkJIglzdGF0aWMgdm9pZCBwcmludCAoT2JqZWN0IFtdIG8pIHtcbiIgKworCQkJCSIJCWZvciAo
aW50IGkgPSAwOyBpIDwgby5sZW5ndGg7IGkrKylcbiIgKworCQkJCSIJCQlTeXN0ZW0ub3V0LnBy
aW50bG4ob1tpXSk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iICsKKwkJCQkicHVibGlj
IGNsYXNzIFggZXh0ZW5kcyBZIHtcbiIgKworCQkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4o
U3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJCSIJCW5ldyBYKCkuZm9vKCk7XG4iICsKKwkJCQki
CX1cbiIgKworCQkJCSIJdm9pZCBmb28oKSB7XG4iICsgCisJCQkJIgkJSSBpID0gc3VwZXI6Om07
XG4iICsKKwkJCQkiCQlpLmZvbyhuZXcgaW50IFswXSk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJ
CSJ9XG4iLAorCQkJfSwKKwkJCSJIZWxsbyAxIgorCQkJKTsKK30KK3B1YmxpYyB2b2lkIHRlc3Q0
MDY3NDRpKCkgeworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQluZXcgU3RyaW5nW10geworCQkJ
CSJYLmphdmEiLAorCQkJCSJpbnRlcmZhY2UgSSB7XG4iICsKKwkJCQkiCXZvaWQgZm9vKGludCBb
XSBpYSk7XG4iICsKKwkJCQkifVxuIiArCisJCQkJImludGVyZmFjZSBJMSB7XG4iICsKKwkJCQki
CXZvaWQgZm9vKGludCBbXSBpYSk7XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNsYXNzIFkge1xu
IiArCisJCQkJIgl2b2lkIG0oT2JqZWN0Li4uIHJlc3QpIHtcbiIgKyAKKwkJCQkiCQlTeXN0ZW0u
b3V0LnByaW50bG4oXCJIZWxsbyBcIiArIHJlc3QubGVuZ3RoKTtcbiIgKworCQkJCSIJfVxuIiAr
CisJCQkJIglzdGF0aWMgdm9pZCBwcmludCAoT2JqZWN0IFtdIG8pIHtcbiIgKworCQkJCSIJCWZv
ciAoaW50IGkgPSAwOyBpIDwgby5sZW5ndGg7IGkrKylcbiIgKworCQkJCSIJCQlTeXN0ZW0ub3V0
LnByaW50bG4ob1tpXSk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iICsKKwkJCQkicHVi
bGljIGNsYXNzIFggZXh0ZW5kcyBZIHtcbiIgKworCQkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1h
aW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJCSIJCW5ldyBYKCkuZm9vKCk7XG4iICsKKwkJ
CQkiCX1cbiIgKworCQkJCSIJdm9pZCBmb28oKSB7XG4iICsgCisJCQkJIgkJSSBpID0gc3VwZXI6
Om07XG4iICsKKwkJCQkiCQlpLmZvbyhuZXcgaW50IFswXSk7XG4iICsKKwkJCQkiCQlJMSBpMSA9
IHN1cGVyOjptO1xuIiArCisJCQkJIgkJaTEuZm9vKG5ldyBpbnQgWzBdKTtcbiIgKworCQkJCSIJ
fVxuIiArCisJCQkJIn1cbiIsCisJCQl9LAorCQkJIkhlbGxvIDFcbiIgKworCQkJIkhlbGxvIDEi
CisJCQkpOworfQorcHVibGljIHZvaWQgdGVzdDQwNjc0NGooKSB7CisJdGhpcy5ydW5Db25mb3Jt
VGVzdCgKKwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJIlguamF2YSIsCisJCQkJImludGVyZmFjZSBJ
IHtcbiIgKworCQkJCSIJdm9pZCBmb28oaW50IFtdIGlhKTtcbiIgKworCQkJCSJ9XG4iICsKKwkJ
CQkiY2xhc3MgWSB7XG4iICsKKwkJCQkiCXZvaWQgbShPYmplY3QuLi4gcmVzdCkge1xuIiArIAor
CQkJCSIJCUkgaSA9IHRoaXM6Om47XG4iICsKKwkJCQkiCQlpLmZvbyhuZXcgaW50IFswXSk7XG4i
ICsKKwkJCQkiCX1cbiIgKworCQkJCSIJdm9pZCBuKE9iamVjdC4uLiByZXN0KSB7XG4iICsgCisJ
CQkJIgkJU3lzdGVtLm91dC5wcmludGxuKFwiSGVsbG8gXCIgKyByZXN0Lmxlbmd0aCk7XG4iICsK
KwkJCQkiCX1cbiIgKworCQkJCSIJc3RhdGljIHZvaWQgcHJpbnQgKE9iamVjdCBbXSBvKSB7XG4i
ICsKKwkJCQkiCQlmb3IgKGludCBpID0gMDsgaSA8IG8ubGVuZ3RoOyBpKyspXG4iICsKKwkJCQki
CQkJU3lzdGVtLm91dC5wcmludGxuKG9baV0pO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxu
IiArCisJCQkJInB1YmxpYyBjbGFzcyBYIGV4dGVuZHMgWSB7XG4iICsKKwkJCQkiCXB1YmxpYyBz
dGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBhcmdzKSB7XG4iICsKKwkJCQkiCQluZXcgWCgpLmZv
bygpO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkiCXZvaWQgZm9vKCkge1xuIiArIAorCQkJCSIJ
CUkgaSA9IHN1cGVyOjptO1xuIiArCisJCQkJIgkJaS5mb28obmV3IGludCBbMF0pO1xuIiArCisJ
CQkJIgl9XG4iICsKKwkJCQkifVxuIiwKKwkJCX0sCisJCQkiSGVsbG8gMSIKKwkJCSk7Cit9Citw
dWJsaWMgdm9pZCB0ZXN0NDA2NzQ0aygpIHsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQkJbmV3
IFN0cmluZ1tdIHsKKwkJCQkiWC5qYXZhIiwKKwkJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkJ
Igl2b2lkIGZvbyhpbnQgW10gaWEpO1xuIiArCisJCQkJIn1cbiIgKworCQkJCSJjbGFzcyBZIHtc
biIgKworCQkJCSIJc3RhdGljIHZvaWQgbShPYmplY3QuLi4gcmVzdCkge1xuIiArIAorCQkJCSIJ
CVN5c3RlbS5vdXQucHJpbnRsbihcIkhlbGxvIFwiICsgcmVzdC5sZW5ndGgpO1xuIiArCisJCQkJ
Igl9XG4iICsKKwkJCQkiCXN0YXRpYyB2b2lkIHByaW50IChPYmplY3QgW10gbykge1xuIiArCisJ
CQkJIgkJZm9yIChpbnQgaSA9IDA7IGkgPCBvLmxlbmd0aDsgaSsrKVxuIiArCisJCQkJIgkJCVN5
c3RlbS5vdXQucHJpbnRsbihvW2ldKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn1cbiIgKwor
CQkJCSJjbGFzcyBZMSBleHRlbmRzIFkgeyB9XG4iICsKKwkJCQkicHVibGljIGNsYXNzIFgge1xu
IiArCisJCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykge1xuIiAr
CisJCQkJIgkJbmV3IFgoKS5mb28oKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIgl2b2lkIGZv
bygpIHtcbiIgKyAKKwkJCQkiCQlJIGkgPSBZOjptO1xuIiArCisJCQkJIgkJaS5mb28obmV3IGlu
dCBbMF0pO1xuIiArCisJCQkJIgkJaSA9IFkxOjptO1xuIiArCisJCQkJIgkJaS5mb28obmV3IGlu
dCBbMF0pO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxuIiwKKwkJCX0sCisJCQkiSGVsbG8g
MVxuIiArCisJCQkiSGVsbG8gMSIKKwkJCSk7Cit9CitwdWJsaWMgdm9pZCB0ZXN0NDA2NzQ0bCgp
IHsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiWC5qYXZh
IiwKKwkJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkJIgl2b2lkIGZvbyhJbnRlZ2VyIGkpO1xu
IiArCisJCQkJIn1cbiIgKworCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCQkiCXN0YXRp
YyB2b2lkIGZvbyhpbnQgLi4uIHgpIHtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIglwdWJsaWMg
c3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iICsKKwkJCQkiCQlJIGkgPSBYOjpm
b287XG4iICsKKwkJCQkiCQlpLmZvbygxKTtcbiIgKworCQkJCSIJCVN5c3RlbS5vdXQucHJpbnRs
bihcIkhlbGxvXCIpO1xuIiArCisJCQkJIn1cbiIgKworCQkJCSJ9XG4iLAorCQkJfSwKKwkJCSJI
ZWxsbyIKKwkJCSk7Cit9CitwdWJsaWMgdm9pZCB0ZXN0NDA2NzQ0bSgpIHsKKwl0aGlzLnJ1bkNv
bmZvcm1UZXN0KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiWC5qYXZhIiwKKwkJCQkiaW50ZXJm
YWNlIEkge1xuIiArCisJCQkJIgl2b2lkIGZvbyhpbnQgaSk7XG4iICsKKwkJCQkifVxuIiArCisJ
CQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJCSIJc3RhdGljIHZvaWQgZm9vKGludCAuLi4g
eCkge1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0
cmluZ1tdIGFyZ3MpIHtcbiIgKworCQkJCSIJCUkgaSA9IFg6OmZvbztcbiIgKworCQkJCSIJCWku
Zm9vKDEpO1xuIiArCisJCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKFwiSGVsbG9cIik7XG4iICsK
KwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iLAorCQkJfSwKKwkJCSJIZWxsbyIKKwkJCSk7Cit9Citw
dWJsaWMgdm9pZCB0ZXN0NDA2NzQ0bigpIHsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQkJbmV3
IFN0cmluZ1tdIHsKKwkJCQkiWC5qYXZhIiwKKwkJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkJ
Igl2b2lkIGZvbyhJbnRlZ2VyIGkpO1xuIiArCisJCQkJIn1cbiIgKworCQkJCSJjbGFzcyBCYXNl
IHtcbiIgKworCQkJCSIJdm9pZCBmb28oT2JqZWN0IC4uLm9iamVjdHMpIHtcbiIgKworCQkJCSIJ
CVN5c3RlbS5vdXQucHJpbnRsbihcIk9rXCIpO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxu
IiArCisJCQkJInB1YmxpYyBjbGFzcyBYIGV4dGVuZHMgQmFzZSB7XG4iICsKKwkJCQkiCXZvaWQg
Zm9vKE9iamVjdC4uLiBvYmplY3RzKSB7XG4iICsKKwkJCQkiCQl0aHJvdyBuZXcgUnVudGltZUV4
Y2VwdGlvbigpO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBt
YWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKworCQkJCSIJCW5ldyBYKCkuZ29vKCk7XG4iICsKKwkJ
CQkiCX1cbiIgKworCQkJCSIJdm9pZCBnb28oKSB7XG4iICsKKwkJCQkiCQlJIGkgPSBzdXBlcjo6
Zm9vO1xuIiArCisJCQkJIgkJaS5mb28oMTApO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxu
IiwKKwkJCX0sCisJCQkiT2siCisJCQkpOworfQorcHVibGljIHZvaWQgdGVzdDQwNjc0NG8oKSB7
CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJIlguamF2YSIs
CisJCQkJImludGVyZmFjZSBJIHtcbiIgKworCQkJCSIJdm9pZCBmb28oaW50IHgpO1xuIiArCisJ
CQkJIn1cbiIgKworCQkJCSJjbGFzcyBCYXNlIHtcbiIgKworCQkJCSIJcHVibGljIHZvaWQgZm9v
KGludCAuLi5pcykge1xuIiArCisJCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKFwiZm9vXCIpO1xu
IiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxuIiArCisJCQkJInB1YmxpYyBjbGFzcyBYIGV4dGVu
ZHMgQmFzZSB7XG4iICsKKwkJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKCBTdHJpbmdbXSBh
cmdzICkge1xuIiArCisJCQkJIgkJSSBpID0gbmV3IFgoKTo6Zm9vO1xuIiArCisJCQkJIgkJaS5m
b28oMTApO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxuIiwKKwkJCX0sCisJCQkiZm9vIgor
CQkJKTsKK30KK3B1YmxpYyB2b2lkIHRlc3Q0MDY3NDRwKCkgeworCXRoaXMucnVuQ29uZm9ybVRl
c3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCSJYLmphdmEiLAorCQkJCSJpbnRlcmZhY2UgSSB7
XG4iICsKKwkJCQkiCXZvaWQgZm9vKGludCB4KTtcbiIgKworCQkJCSJ9XG4iICsKKwkJCQkicHVi
bGljIGNsYXNzIFgge1xuIiArCisJCQkJIglwcml2YXRlIHZvaWQgZm9vKGludCAuLi5pcykge1xu
IiArCisJCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKFwiZm9vXCIpO1xuIiArCisJCQkJIgl9XG4i
ICsKKwkJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MgKSB7XG4iICsK
KwkJCQkiCQluZXcgWCgpLm5ldyBZKCkuZm9vKCk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJ
Y2xhc3MgWSBleHRlbmRzIFgge1xuIiArCisJCQkJIgkJdm9pZCBmb28oKSB7XG4iICsKKwkJCQki
CQkJSSBpID0gbmV3IFgoKTo6Zm9vO1xuIiArCisJCQkJIgkJCWkuZm9vKDEwKTtcbiIgKworCQkJ
CSIJCX1cbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn1cbiIsCisJCQl9LAorCQkJImZvbyIKKwkJ
CSk7Cit9CitwdWJsaWMgdm9pZCB0ZXN0NDA2NzQ0cSgpIHsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0
KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiWC5qYXZhIiwKKwkJCQkiaW50ZXJmYWNlIEkge1xu
IiArCisJCQkJIgl2b2lkIGZvbyhpbnQgeCk7XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNsYXNz
IFkge1xuIiArCisJCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgZm9vKGludCAuLi5pcykge1xuIiAr
CisJCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKFwiWS5mb29cIik7XG4iICsKKwkJCQkiCX1cbiIg
KworCQkJCSJ9XG4iICsKKwkJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkJIglwdWJsaWMg
c3RhdGljIHZvaWQgZm9vKGludCAuLi5pcykge1xuIiArCisJCQkJIgkJU3lzdGVtLm91dC5wcmlu
dGxuKFwiWC5mb29cIik7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJcHVibGljIHN0YXRpYyB2
b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIiArCisJCQkJIgkJSSBpID0gWDo6Zm9vO1xuIiAr
CisJCQkJIgkJaS5mb28oMTApO1xuIiArCisJCQkJIgkJaSA9IFk6OmZvbztcbiIgKworCQkJCSIJ
CWkuZm9vKDIwKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn1cbiIsCisJCQl9LAorCQkJIlgu
Zm9vXG4iICsKKwkJCSJZLmZvbyIKKwkJCSk7Cit9CitwdWJsaWMgdm9pZCB0ZXN0NDA2NzQ0cigp
IHsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiWC5qYXZh
IiwKKwkJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkJIgl2b2lkIGZvbyhpbnQgdCwgaW50IFtd
IGlhKTtcbiIgKworCQkJCSJ9XG4iICsKKwkJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkJ
IglwdWJsaWMgc3RhdGljIHZvaWQgZm9vKEludGVnZXIgaSwgaW50IC4uLmlzKSB7XG4iICsKKwkJ
CQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oXCJZLmZvb1wiKTtcbiIgKworCQkJCSIJfVxuIiArCisJ
CQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iICsKKwkJCQki
CQlJIGkgPSBYOjpmb287XG4iICsKKwkJCQkiCQlpLmZvbygxMCwgbnVsbCk7XG4iICsKKwkJCQki
CX1cbiIgKworCQkJCSJ9XG4iLAorCQkJfSwKKwkJCSJZLmZvbyIKKwkJCSk7Cit9CitwdWJsaWMg
dm9pZCB0ZXN0NDA2NzQ0cygpIHsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQkJbmV3IFN0cmlu
Z1tdIHsKKwkJCQkiWC5qYXZhIiwKKwkJCQkiaW50ZXJmYWNlIEkge1xuIiArCisJCQkJIglYIGZv
byhpbnQgeCk7XG4iICsKKwkJCQkifVxuIiArCisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwor
CQkJCSIJY2xhc3MgWSBleHRlbmRzIFgge1xuIiArCisJCQkJIgkJWShpbnQgLi4uIHgpIHtcbiIg
KworCQkJCSIJCQlTeXN0ZW0ub3V0LnByaW50bG4oXCJZOjpZXCIpO1xuIiArCisJCQkJIgkJfVxu
IiArCisJCQkJIgl9XG4iICsKKwkJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1td
IGFyZ3MgKSB7XG4iICsKKwkJCQkiCQluZXcgWCgpLmdvbygpO1xuIiArCisJCQkJIgl9XG4iICsK
KwkJCQkiCXZvaWQgZ29vKCkge1xuIiArCisJCQkJIgkJSSBpID0gWTo6bmV3O1xuIiArCisJCQkJ
IgkJaS5mb28oMTApO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxuIiwKKwkJCX0sCisJCQki
WTo6WSIKKwkJCSk7Cit9CitwdWJsaWMgdm9pZCB0ZXN0NDA2NzQ0dCgpIHsKKwl0aGlzLnJ1bkNv
bmZvcm1UZXN0KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiWC5qYXZhIiwKKwkJCQkiaW50ZXJm
YWNlIEkge1xuIiArCisJCQkJIglYIGZvbyhpbnQgeCk7XG4iICsKKwkJCQkifVxuIiArCisJCQkJ
InB1YmxpYyBjbGFzcyBYPFQ+IHtcbiIgKworCQkJCSIJY2xhc3MgWSBleHRlbmRzIFgge1xuIiAr
CisJCQkJIgkgICAgWShpbnQgLi4uIHgpIHtcbiIgKworCQkJCSIJCSAgICBTeXN0ZW0ub3V0LnBy
aW50bG4oXCJZOjpZXCIpO1xuIiArCisJCQkJIgkgICAgfVxuIiArCisJCQkJIgl9XG4iICsKKwkJ
CQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MgKSB7XG4iICsKKwkJCQki
CQlTeXN0ZW0ub3V0LnByaW50bG4oXCJIZWxsb1wiKTtcbiIgKworCQkJCSIJCW5ldyBYKCkuZ29v
KCk7XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSIJdm9pZCBnb28oKSB7XG4iICsKKwkJCQkiCQlJ
IGkgPSBZOjpuZXc7XG4iICsKKwkJCQkiCQlpLmZvbygxMCk7XG4iICsKKwkJCQkiCX1cbiIgKwor
CQkJCSJ9XG4iLAorCQkJfSwKKwkJCSJIZWxsb1xuIiArIAorCQkJIlk6OlkiCisJCQkpOworfQor
cHVibGljIHZvaWQgdGVzdDQwNjc0NHUoKSB7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJCW5l
dyBTdHJpbmdbXSB7CisJCQkJIlguamF2YSIsCisJCQkJImludGVyZmFjZSBJIHtcbiIgKworCQkJ
CSIJWDxTdHJpbmc+IGZvbyhpbnQgeCk7XG4iICsKKwkJCQkifVxuIiArCisJCQkJInB1YmxpYyBj
bGFzcyBYPFQ+IHsgIFxuIiArCisJCQkJIgljbGFzcyBZIGV4dGVuZHMgWDxTdHJpbmc+IHtcbiIg
KworCQkJCSIJICAgIFkoaW50IC4uLiB4KSB7XG4iICsKKwkJCQkiCQkgICAgU3lzdGVtLm91dC5w
cmludGxuKFwiWTo6WVwiKTsgXG4iICsKKwkJCQkiCSAgICB9XG4iICsKKwkJCQkiCX1cbiIgKwor
CQkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncyApIHtcbiIgKworCQkJ
CSIJCVN5c3RlbS5vdXQucHJpbnRsbihcIkhlbGxvXCIpO1xuIiArCisJCQkiCQluZXcgWDxTdHJp
bmc+KCkuZ29vKCk7ICBcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIgl2b2lkIGdvbygpIHtcbiIg
KworCQkJCSIJCUkgaSA9IFk6Om5ldztcbiIgKworCQkJCSIJCWkuZm9vKDEwKTsgXG4iICsKKwkJ
CQkiCX1cbiIgKworCQkJCSJ9XG4iLAorCQkJfSwKKwkJCSJIZWxsb1xuIiArIAorCQkJIlk6Olki
CisJCQkpOworfQorcHVibGljIHZvaWQgdGVzdDQwNjc0NHYoKSB7CisJdGhpcy5ydW5Db25mb3Jt
VGVzdCgKKwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJIlguamF2YSIsCisJCQkJImludGVyZmFjZSBJ
IHtcbiIgKworCQkJCSIJWCBmb28oKTtcbiIgKworCQkJCSJ9XG4iICsKKwkJCQkicHVibGljIGNs
YXNzIFgge1xuIiArCisJCQkJIglwcml2YXRlIFgoaW50IC4uLiBpcykge1xuIiArCisJCQkJIgkJ
U3lzdGVtLm91dC5wcmludGxuKFwiWDo6WFwiKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIglc
biIgKworCQkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIiAr
CisJCQkJIgkJbmV3IFgoKS5uZXcgWSgpLmdvbygpO1xuIiArCisJCQkJIgl9XG4iICsKKwkJCQki
CXB1YmxpYyBjbGFzcyBZIHtcbiIgKworCQkJCSIJCXB1YmxpYyB2b2lkIGdvbygpIHtcbiIgKwor
CQkJCSIJCQlJIGkgPSBYOjpuZXc7IFxuIiArCisJCQkJIgkJCWkuZm9vKCk7XG4iICsKKwkJCQki
CQl9IFxuIiArCisJCQkJIgl9XG4iICsKKwkJCQkifVxuIiwKKwkJCX0sCisJCQkiWDo6WFxuIiAr
IAorCQkJIlg6OlgiCisJCQkpOworfQorcHVibGljIHZvaWQgdGVzdDQwNjc0NHcoKSB7CisJdGhp
cy5ydW5Db25mb3JtVGVzdCgKKwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJInAyL0IuamF2YSIsCisJ
CQkJInBhY2thZ2UgcDI7XG4iICsKKwkJCQkiaW1wb3J0IHAxLio7XG4iICsKKwkJCQkiaW50ZXJm
YWNlIEkge1xuIiArCisJCQkJIgl2b2lkIGZvbyhpbnQgeCk7XG4iICsKKwkJCQkifVxuIiArCisJ
CQkJImludGVyZmFjZSBKIHtcbiIgKworCQkJCSIJdm9pZCBmb28oaW50IHgpO1xuIiArCisJCQkJ
In1cbiIgKworCQkJCSJwdWJsaWMgY2xhc3MgQiBleHRlbmRzIEEge1xuIiArCisJCQkJIgljbGFz
cyBZIHtcbiIgKworCQkJCSIJCXZvaWQgZygpIHtcbiIgKworCQkJCSIJCQlJIGkgPSBCOjpmb287
XG4iICsKKwkJCQkiCQkJaS5mb28oMTApO1xuIiArCisJCQkJIgkJCUogaiA9IG5ldyBCKCk6Omdv
bztcbiIgKworCQkJCSIJCQlqLmZvbygxMCk7XG4iICsKKwkJCQkiCQl9XG4iICsKKwkJCQkiCX1c
biIgKworCQkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIiAr
CisJCQkJIgkJbmV3IEIoKS5uZXcgWSgpLmcoKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIn1c
biIsCisJCQkJInAxL0EuamF2YSIsIAorCQkJCSJwYWNrYWdlIHAxO1xuIiArCisJCQkJImltcG9y
dCBwMi4qO1xuIiArCisJCQkJInB1YmxpYyBjbGFzcyBBIHtcbiIgKworCQkJCSIJcHJvdGVjdGVk
IHN0YXRpYyB2b2lkIGZvbyhpbnQgLi4uIGlzKSB7XG4iICsKKwkJCQkiCSAgICBTeXN0ZW0ub3V0
LnByaW50bG4oXCJBJ3Mgc3RhdGljIGZvb1wiKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJIglw
cm90ZWN0ZWQgdm9pZCBnb28oaW50IC4uLiBpcykge1xuIiArCisJCQkJIgkgICAgU3lzdGVtLm91
dC5wcmludGxuKFwiQSdzIGluc3RhbmNlIGdvb1wiKTtcbiIgKworCQkJCSIJfVxuIiArCisJCQkJ
In1cbiIKKwkJCX0sCisJCQkiQVwncyBzdGF0aWMgZm9vXG4iICsgCisJCQkiQVwncyBpbnN0YW5j
ZSBnb28iCisJCQkpOworfQogcHVibGljIHN0YXRpYyBDbGFzcyB0ZXN0Q2xhc3MoKSB7CiAJcmV0
dXJuIExhbWJkYUV4cHJlc3Npb25zVGVzdC5jbGFzczsKIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9jb21waWxlci9yZWdyZXNzaW9uL051bGxUeXBlQW5ub3RhdGlvblRlc3QuamF2YSBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90
ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL051bGxUeXBlQW5ub3RhdGlvblRlc3QuamF2YQppbmRl
eCA2MjRkNWE2Li5mNTRmNThjIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0
cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVz
c2lvbi9OdWxsVHlwZUFubm90YXRpb25UZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVy
L3JlZ3Jlc3Npb24vTnVsbFR5cGVBbm5vdGF0aW9uVGVzdC5qYXZhCkBAIC0xLDUgKzEsNSBAQAog
LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAxMiwgMjAxMyBHSyBT
b2Z0d2FyZSBBRyBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDEyLCAyMDE0IEdLIFNv
ZnR3YXJlIEFHIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dy
YW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUg
dW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdo
aWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBA
IC0zNDI3LDggKzM0MjcsNyBAQAogCQkiLS0tLS0tLS0tLVxuIik7CiB9CiAKLS8vIERJU0FCTEVE
LCBjdXJyZW50bHkgdGhyb3dzIGphdmEubGFuZy5Cb290c3RyYXBNZXRob2RFcnJvciBhdCBydW50
aW1lOgotcHVibGljIHZvaWQgX3Rlc3RCdWc0MjQ2MzdfY29tbWVudDMoKSB7CitwdWJsaWMgdm9p
ZCB0ZXN0QnVnNDI0NjM3X2NvbW1lbnQzKCkgewogCXJ1bkNvbmZvcm1UZXN0KAogCQluZXcgU3Ry
aW5nW10gewogCQkJIlZhckFyZ3NNZXRob2RSZWZlcmVuY2VUZXN0LmphdmEiLApkaWZmIC0tZ2l0
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2FzdC9SZWZlcmVuY2VFeHByZXNzaW9uLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1JlZmVy
ZW5jZUV4cHJlc3Npb24uamF2YQppbmRleCA5Njc5YTJmLi40MDQxMTdiIDEwMDY0NAotLS0gYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvYXN0L1JlZmVyZW5jZUV4cHJlc3Npb24uamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1JlZmVy
ZW5jZUV4cHJlc3Npb24uamF2YQpAQCAtMzgsOCArMzgsMTAgQEAKIGltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuY2xhc3NmbXQuQ2xhc3NGaWxlQ29uc3RhbnRzOwogaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jb2RlZ2VuLkNvZGVTdHJlYW07
CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNvZGVnZW4uQ29uc3Rh
bnRQb29sOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5mbG93LkV4
Y2VwdGlvbkhhbmRsaW5nRmxvd0NvbnRleHQ7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmZsb3cuRmxvd0NvbnRleHQ7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmZsb3cuRmxvd0luZm87CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmZsb3cuVW5jb25kaXRpb25hbEZsb3dJbmZvOwogaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5pbXBsLkNvbXBpbGVyT3B0aW9uczsKIGltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuaW1wbC5Db25zdGFudDsKIGltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkFycmF5QmluZGluZzsK
QEAgLTYwLDYgKzYyLDcgQEAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIubG9va3VwLlR5cGVCaW5kaW5nOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5sb29rdXAuVHlwZUNvbnN0YW50czsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIubG9va3VwLlR5cGVJZHM7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLnBhcnNlci5QYXJzZXI7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLnByb2JsZW0uUHJvYmxlbVNldmVyaXRpZXM7CiAKIHB1YmxpYyBjbGFz
cyBSZWZlcmVuY2VFeHByZXNzaW9uIGV4dGVuZHMgRnVuY3Rpb25hbEV4cHJlc3Npb24gaW1wbGVt
ZW50cyBJbnZvY2F0aW9uU2l0ZSB7CkBAIC03Niw2ICs3OSw3IEBACiAJTWV0aG9kQmluZGluZyBz
eW50aGV0aWNBY2Nlc3NvcjsJLy8gc3ludGhldGljIGFjY2Vzc29yIGZvciBpbm5lci1lbXVsYXRp
b24KIAlwcml2YXRlIGludCBkZXB0aDsKIAlwcml2YXRlIE1ldGhvZEJpbmRpbmcgZXhhY3RNZXRo
b2RCaW5kaW5nOyAvLyAhPSBudWxsID09PiBleGFjdCBtZXRob2QgcmVmZXJlbmNlLgorCXByaXZh
dGUgYm9vbGVhbiByZWNlaXZlclByZWNlZGVzUGFyYW1ldGVycyA9IGZhbHNlOwogCQogCXB1Ymxp
YyBSZWZlcmVuY2VFeHByZXNzaW9uKCkgewogCQlzdXBlcigpOwpAQCAtOTAsOCArOTQsNjUgQEAK
IAkJdGhpcy5zb3VyY2VFbmQgPSBzb3VyY2VFbmRQb3NpdGlvbjsKIAl9CiAgCisJcHVibGljIHZv
aWQgZ2VuZXJhdGVJbXBsaWNpdExhbWJkYShCbG9ja1Njb3BlIGN1cnJlbnRTY29wZSwgQ29kZVN0
cmVhbSBjb2RlU3RyZWFtLCBib29sZWFuIHZhbHVlUmVxdWlyZWQpIHsKKwkJCisJCWZpbmFsIFBh
cnNlciBwYXJzZXIgPSBuZXcgUGFyc2VyKHRoaXMuZW5jbG9zaW5nU2NvcGUucHJvYmxlbVJlcG9y
dGVyKCksIGZhbHNlKTsKKwkJZmluYWwgY2hhcltdIHNvdXJjZSA9IHRoaXMuY29tcGlsYXRpb25S
ZXN1bHQuZ2V0Q29tcGlsYXRpb25Vbml0KCkuZ2V0Q29udGVudHMoKTsKKwkJUmVmZXJlbmNlRXhw
cmVzc2lvbiBjb3B5ID0gIChSZWZlcmVuY2VFeHByZXNzaW9uKSBwYXJzZXIucGFyc2VFeHByZXNz
aW9uKHNvdXJjZSwgdGhpcy5zb3VyY2VTdGFydCwgdGhpcy5zb3VyY2VFbmQgLSB0aGlzLnNvdXJj
ZVN0YXJ0ICsgMSwgCisJCQkJCQkJCQkJdGhpcy5lbmNsb3NpbmdTY29wZS5yZWZlcmVuY2VDb21w
aWxhdGlvblVuaXQoKSwgZmFsc2UgLyogcmVjb3JkIGxpbmUgc2VwYXJhdG9ycyAqLyk7CisJCQor
CQlpbnQgYXJnYyA9IHRoaXMuZGVzY3JpcHRvci5wYXJhbWV0ZXJzLmxlbmd0aDsKKwkJCisJCUxh
bWJkYUV4cHJlc3Npb24gaW1wbGljaXRMYW1iZGEgPSBuZXcgTGFtYmRhRXhwcmVzc2lvbih0aGlz
LmNvbXBpbGF0aW9uUmVzdWx0LCBmYWxzZSk7CisJCUFyZ3VtZW50IFtdIGFyZ3VtZW50cyA9IG5l
dyBBcmd1bWVudFthcmdjXTsKKwkJZm9yIChpbnQgaSA9IDA7IGkgPCBhcmdjOyBpKyspCisJCQlh
cmd1bWVudHNbaV0gPSBuZXcgQXJndW1lbnQoKCJhcmciICsgaSkudG9DaGFyQXJyYXkoKSwgMCwg
bnVsbCwgMCwgdHJ1ZSk7IC8vJE5PTi1OTFMtMSQKKwkJaW1wbGljaXRMYW1iZGEuc2V0QXJndW1l
bnRzKGFyZ3VtZW50cyk7CisJCWltcGxpY2l0TGFtYmRhLnNldEV4cHJlc3Npb25Db250ZXh0KHRo
aXMuZXhwcmVzc2lvbkNvbnRleHQpOworCQlpbXBsaWNpdExhbWJkYS5zZXRFeHBlY3RlZFR5cGUo
dGhpcy5leHBlY3RlZFR5cGUpOworCQkKKwkJaW50IHBhcmFtZXRlclNoaWZ0ID0gdGhpcy5yZWNl
aXZlclByZWNlZGVzUGFyYW1ldGVycyA/IDEgOiAwOworCQlFeHByZXNzaW9uIFtdIGFyZ3YgPSBu
ZXcgU2luZ2xlTmFtZVJlZmVyZW5jZVthcmdjIC0gcGFyYW1ldGVyU2hpZnRdOworCQlmb3IgKGlu
dCBpID0gMCwgbGVuZ3RoID0gYXJndi5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykgeworCQkJU3Ry
aW5nIG5hbWUgPSAiYXJnIiArIChpICsgcGFyYW1ldGVyU2hpZnQpOyAvLyROT04tTkxTLTEkCisJ
CQlhcmd2W2ldID0gbmV3IFNpbmdsZU5hbWVSZWZlcmVuY2UobmFtZS50b0NoYXJBcnJheSgpLCAw
KTsKKwkJfQorCQlpZiAoaXNNZXRob2RSZWZlcmVuY2UoKSkgeworCQkJTWVzc2FnZVNlbmQgbWVz
c2FnZSA9IG5ldyBNZXNzYWdlU2VuZCgpOworCQkJbWVzc2FnZS5zZWxlY3RvciA9IHRoaXMuc2Vs
ZWN0b3I7CisJCQltZXNzYWdlLnJlY2VpdmVyID0gdGhpcy5yZWNlaXZlclByZWNlZGVzUGFyYW1l
dGVycyA/IG5ldyBTaW5nbGVOYW1lUmVmZXJlbmNlKCJhcmcwIi50b0NoYXJBcnJheSgpLCAwKSA6
IGNvcHkubGhzOyAvLyROT04tTkxTLTEkCisJCQltZXNzYWdlLnR5cGVBcmd1bWVudHMgPSBjb3B5
LnR5cGVBcmd1bWVudHM7CisJCQltZXNzYWdlLmFyZ3VtZW50cyA9IGFyZ3Y7CisJCQlpbXBsaWNp
dExhbWJkYS5zZXRCb2R5KG1lc3NhZ2UpOworCQl9IGVsc2UgeworCQkJQWxsb2NhdGlvbkV4cHJl
c3Npb24gYWxsb2NhdGlvbiA9IG5ldyBBbGxvY2F0aW9uRXhwcmVzc2lvbigpOworCQkJaWYgKHRo
aXMubGhzIGluc3RhbmNlb2YgVHlwZVJlZmVyZW5jZSkgeworCQkJCWFsbG9jYXRpb24udHlwZSA9
IChUeXBlUmVmZXJlbmNlKSB0aGlzLmxoczsKKwkJCX0gZWxzZSBpZiAodGhpcy5saHMgaW5zdGFu
Y2VvZiBTaW5nbGVOYW1lUmVmZXJlbmNlKSB7CisJCQkJYWxsb2NhdGlvbi50eXBlID0gbmV3IFNp
bmdsZVR5cGVSZWZlcmVuY2UoKChTaW5nbGVOYW1lUmVmZXJlbmNlKSB0aGlzLmxocykudG9rZW4s
IDApOworCQkJfSBlbHNlIGlmICh0aGlzLmxocyBpbnN0YW5jZW9mIFF1YWxpZmllZE5hbWVSZWZl
cmVuY2UpIHsKKwkJCQlhbGxvY2F0aW9uLnR5cGUgPSBuZXcgUXVhbGlmaWVkVHlwZVJlZmVyZW5j
ZSgoKFF1YWxpZmllZE5hbWVSZWZlcmVuY2UpIHRoaXMubGhzKS50b2tlbnMsIG5ldyBsb25nIFso
KFF1YWxpZmllZE5hbWVSZWZlcmVuY2UpIHRoaXMubGhzKS50b2tlbnMubGVuZ3RoXSk7CisJCQl9
IGVsc2UgeworCQkJCXRocm93IG5ldyBJbGxlZ2FsU3RhdGVFeGNlcHRpb24oIlVuZXhwZWN0ZWQg
bm9kZSB0eXBlIik7IC8vJE5PTi1OTFMtMSQKKwkJCX0KKwkJCWFsbG9jYXRpb24udHlwZUFyZ3Vt
ZW50cyA9IGNvcHkudHlwZUFyZ3VtZW50czsKKwkJCWFsbG9jYXRpb24uYXJndW1lbnRzID0gYXJn
djsKKwkJCWltcGxpY2l0TGFtYmRhLnNldEJvZHkoYWxsb2NhdGlvbik7CisJCX0KKwkJCisJCWlt
cGxpY2l0TGFtYmRhLnJlc29sdmUoY3VycmVudFNjb3BlKTsKKwkJaW1wbGljaXRMYW1iZGEuYW5h
bHlzZUNvZGUoY3VycmVudFNjb3BlLCAKKwkJCQkgbmV3IEV4Y2VwdGlvbkhhbmRsaW5nRmxvd0Nv
bnRleHQobnVsbCwgdGhpcywgQmluZGluZy5OT19FWENFUFRJT05TLCBudWxsLCBjdXJyZW50U2Nv
cGUsIEZsb3dJbmZvLkRFQURfRU5EKSwgCisJCQkJIFVuY29uZGl0aW9uYWxGbG93SW5mby5mYWtl
SW5pdGlhbGl6ZWRGbG93SW5mbyhjdXJyZW50U2NvcGUub3V0ZXJNb3N0TWV0aG9kU2NvcGUoKS5h
bmFseXNpc0luZGV4LCBjdXJyZW50U2NvcGUucmVmZXJlbmNlVHlwZSgpLm1heEZpZWxkQ291bnQp
KTsKKwkJaW1wbGljaXRMYW1iZGEuZ2VuZXJhdGVDb2RlKGN1cnJlbnRTY29wZSwgY29kZVN0cmVh
bSwgdmFsdWVSZXF1aXJlZCk7CisJfQkKKwkKIAlwdWJsaWMgdm9pZCBnZW5lcmF0ZUNvZGUoQmxv
Y2tTY29wZSBjdXJyZW50U2NvcGUsIENvZGVTdHJlYW0gY29kZVN0cmVhbSwgYm9vbGVhbiB2YWx1
ZVJlcXVpcmVkKSB7CiAJCXRoaXMuYWN0dWFsTWV0aG9kQmluZGluZyA9IHRoaXMuYmluZGluZzsg
Ly8gZ3JhYiBiZWZvcmUgc3ludGhldGljcyBjb21lIGludG8gcGxheS4KKwkJaWYgKHRoaXMuYmlu
ZGluZy5pc1ZhcmFyZ3MoKSkgeworCQkJZ2VuZXJhdGVJbXBsaWNpdExhbWJkYShjdXJyZW50U2Nv
cGUsIGNvZGVTdHJlYW0sIHZhbHVlUmVxdWlyZWQpOworCQkJcmV0dXJuOworCQl9CiAJCVNvdXJj
ZVR5cGVCaW5kaW5nIHNvdXJjZVR5cGUgPSBjdXJyZW50U2NvcGUuZW5jbG9zaW5nU291cmNlVHlw
ZSgpOwogCQlpZiAodGhpcy5yZWNlaXZlclR5cGUuaXNBcnJheVR5cGUoKSkgewogCQkJaWYgKGlz
Q29uc3RydWN0b3JSZWZlcmVuY2UoKSkgewpAQCAtMTg2LDYgKzI0Nyw5IEBACiAJCQlyZXR1cm47
CiAJCQogCQlNZXRob2RCaW5kaW5nIGNvZGVnZW5CaW5kaW5nID0gdGhpcy5iaW5kaW5nLm9yaWdp
bmFsKCk7CisJCWlmIChjb2RlZ2VuQmluZGluZy5pc1ZhbGlkQmluZGluZygpICYmICFjb2RlZ2Vu
QmluZGluZy5hcmVQYXJhbWV0ZXJFcmFzdXJlc0VxdWFsKHRoaXMuZGVzY3JpcHRvcikpCisJCQly
ZXR1cm47IC8vIGNvbXBsZXRlbHkgbWFuYWdlZCBieSB0cmFuc2Zvcm1pbmcgaW50byBpbXBsaWNp
dCBsYW1iZGEgZXhwcmVzc2lvbi4KKwkJCiAJCVNvdXJjZVR5cGVCaW5kaW5nIGVuY2xvc2luZ1Nv
dXJjZVR5cGUgPSBjdXJyZW50U2NvcGUuZW5jbG9zaW5nU291cmNlVHlwZSgpOwogCQkKIAkJaWYg
KHRoaXMuaXNDb25zdHJ1Y3RvclJlZmVyZW5jZSgpKSB7CkBAIC0zNzksNyArNDQzLDcgQEAKICAg
ICAJfQogCiAgICAgICAgIE1ldGhvZEJpbmRpbmcgYW5vdGhlck1ldGhvZCA9IG51bGw7Ci0gICAg
ICAgIGludCBwYXJhbU9mZnNldCA9IDA7CisgICAgICAgIHRoaXMucmVjZWl2ZXJQcmVjZWRlc1Bh
cmFtZXRlcnMgPSBmYWxzZTsKICAgICAgICAgaWYgKCF0aGlzLmhhdmVSZWNlaXZlciAmJiBpc01l
dGhvZFJlZmVyZW5jZSAmJiBwYXJhbWV0ZXJzTGVuZ3RoID4gMCkgewogICAgICAgICAJZmluYWwg
VHlwZUJpbmRpbmcgcG90ZW50aWFsUmVjZWl2ZXIgPSBkZXNjcmlwdG9yUGFyYW1ldGVyc1swXTsK
ICAgICAgICAgCWlmIChwb3RlbnRpYWxSZWNlaXZlci5pc0NvbXBhdGlibGVXaXRoKHRoaXMucmVj
ZWl2ZXJUeXBlLCBzY29wZSkpIHsKQEAgLTQxOCw3ICs0ODIsNyBAQAogICAgICAgICAJfQogICAg
ICAgICB9IGVsc2UgaWYgKGFub3RoZXJNZXRob2QgIT0gbnVsbCAmJiBhbm90aGVyTWV0aG9kLmlz
VmFsaWRCaW5kaW5nKCkpIHsKICAgICAgICAgCXRoaXMuYmluZGluZyA9IGFub3RoZXJNZXRob2Q7
Ci0gICAgICAgIAlwYXJhbU9mZnNldCA9IDE7IC8vIDAgaXMgcmVjZWl2ZXIsIHJlYWwgcGFyYW1l
dGVycyBzdGFydCBhdCAxCisgICAgICAgIAl0aGlzLnJlY2VpdmVyUHJlY2VkZXNQYXJhbWV0ZXJz
ID0gdHJ1ZTsgLy8gMCBpcyByZWNlaXZlciwgcmVhbCBwYXJhbWV0ZXJzIHN0YXJ0IGF0IDEKICAg
ICAgICAgCXRoaXMuYml0cyAmPSB+QVNUTm9kZS5EZXB0aE1BU0s7CiAgICAgICAgIAlpZiAoYW5v
dGhlck1ldGhvZERlcHRoID4gMCkgewogICAgICAgICAJCXRoaXMuYml0cyB8PSAoYW5vdGhlck1l
dGhvZERlcHRoICYgMHhGRikgPDwgQVNUTm9kZS5EZXB0aFNISUZUOwpAQCAtNDg1LDcgKzU0OSw3
IEBACiAgICAgICAgIAkJbGVuID0gTWF0aC5taW4oZXhwZWN0ZWRsZW4sIHByb3ZpZGVkTGVuKTsK
ICAgICAgICAgCX0KICAgICAJCWZvciAoaW50IGkgPSAwOyBpIDwgbGVuOyBpKyspIHsKLSAgICAJ
CQlUeXBlQmluZGluZyBkZXNjcmlwdG9yUGFyYW1ldGVyID0gdGhpcy5kZXNjcmlwdG9yLnBhcmFt
ZXRlcnNbaStwYXJhbU9mZnNldF07CisgICAgCQkJVHlwZUJpbmRpbmcgZGVzY3JpcHRvclBhcmFt
ZXRlciA9IHRoaXMuZGVzY3JpcHRvci5wYXJhbWV0ZXJzW2kgKyAodGhpcy5yZWNlaXZlclByZWNl
ZGVzUGFyYW1ldGVycyA/IDEgOiAwKV07CiAgICAgCQkJVHlwZUJpbmRpbmcgYmluZGluZ1BhcmFt
ZXRlciA9IEluZmVyZW5jZUNvbnRleHQxOC5nZXRQYXJhbWV0ZXIodGhpcy5iaW5kaW5nLnBhcmFt
ZXRlcnMsIGksIGlzVmFyQXJncyk7CiAgICAgCQkJTnVsbEFubm90YXRpb25NYXRjaGluZyBhbm5v
dGF0aW9uU3RhdHVzID0gTnVsbEFubm90YXRpb25NYXRjaGluZy5hbmFseXNlKGJpbmRpbmdQYXJh
bWV0ZXIsIGRlc2NyaXB0b3JQYXJhbWV0ZXIsIEZsb3dJbmZvLlVOS05PV04pOwogICAgIAkJCWlm
IChhbm5vdGF0aW9uU3RhdHVzLmlzQW55TWlzbWF0Y2goKSkgew==
</data>

          </attachment>
      

    </bug>

</bugzilla>