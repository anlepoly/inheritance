<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>440285</bug_id>
          
          <creation_ts>2014-07-24 01:29:00 -0400</creation_ts>
          <short_desc>[1.8] Compiler allows array creation reference with type arguments</short_desc>
          <delta_ts>2014-10-29 02:27:26 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.5</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.5 M3</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Noopur Gupta">noopur_gupta</reporter>
          <assigned_to name="shankha banerjee">shankhba</assigned_to>
          <cc>jarthana</cc>
    
    <cc>manpalat</cc>
    
    <cc>markus_keller</cc>
    
    <cc>shankhba</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="63536"
          type_id="1"
          status="+"
          setter="srikanth_sankaran"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2431416</commentid>
    <comment_count>0</comment_count>
    <who name="Noopur Gupta">noopur_gupta</who>
    <bug_when>2014-07-24 01:29:56 -0400</bug_when>
    <thetext>Both ECJ and javac compile the following incorrect code (array type constructor reference with type arguments):

Function&lt;Integer, int[]&gt; m1 = int[]::&lt;Runnable&gt;new;

The code specifies &lt;Runnable&gt; as a type argument for the array creation expression, which is not correct.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2431420</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-07-24 02:24:11 -0400</bug_when>
    <thetext>Redundant type arguments are always allowed for method and constructor
calls. IIRC, this behavior is carried over to method references. I&apos;ll
double check.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2431666</commentid>
    <comment_count>2</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-07-24 10:34:25 -0400</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #1)
&gt; Redundant type arguments are always allowed for method and constructor
&gt; calls. IIRC, this behavior is carried over to method references. I&apos;ll
&gt; double check.

Correct, JLS8 15.13 points to 15.12.2.1 to resolve the reference, which even drops type arguments if the method declaration doesn&apos;t declare any type parameters.

However, the grammar for CreationReferences is:

  ClassType :: [TypeArguments] new
  ArrayType :: new

Since &quot;int[]&quot; is not a ClassType, type arguments are not allowed by the grammar for array-typed CreationReferences.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2452847</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-17 00:46:53 -0400</bug_when>
    <thetext>For this particular case, the path taken is short circuited so it does
not reach the portion of code that emits UnusedTypeArgumentsForMethodInvocation.
Unfortunately it is not simple a copy + paste (if warn/optional error is the
lazy route we want to take) solution as int[]::new&apos;s binding claims (at that
point) to be Object::Object(int)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2453489</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-18 02:37:19 -0400</bug_when>
    <thetext>We should really fix this, since (a) the grammar does not allow it and (b)
since &quot;int [] ia = new int.&lt;String&gt; [10];&quot; is illegal.

We need to add a problem ID and message since the existing message is not
suitable per my earlier comment.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2454015</commentid>
    <comment_count>5</comment_count>
      <attachid>247221</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-09-19 02:16:25 -0400</bug_when>
    <thetext>Created attachment 247221
Patch

All test results are good.

---

Please review.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2454918</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-22 12:07:07 -0400</bug_when>
    <thetext>Thanks, I massaged it a bit to simplify the error reported/ting and released
here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=61127586ff5c7073135a904b527964a79adf7ab8</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2473204</commentid>
    <comment_count>7</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-10-29 02:27:26 -0400</bug_when>
    <thetext>Verified for 4.5 M3 using I20141028-2000 build</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>247221</attachid>
            <date>2014-09-19 02:16:00 -0400</date>
            <delta_ts>2014-09-19 02:16:25 -0400</delta_ts>
            <desc>Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>7739</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9wYXJzZXIvQ29tcGxpYW5jZURpYWdub3Nl
VGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3BhcnNlci9Db21wbGlhbmNlRGlhZ25vc2VU
ZXN0LmphdmEKaW5kZXggOWVlYTM3Yi4uM2ExYWQzYiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3BhcnNlci9Db21wbGlhbmNlRGlhZ25vc2VUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L2NvbXBpbGVyL3BhcnNlci9Db21wbGlhbmNlRGlhZ25vc2VUZXN0LmphdmEKQEAgLTM0ODAsNCAr
MzQ4MCwzMCBAQCBwdWJsaWMgdm9pZCB0ZXN0NDI4NjA1KCkgewogCQkJIi0tLS0tLS0tLS1cbiIg
OgogCQkJIiIpKTsKIH0KKy8vaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTQ0MDI4NQorLy9bMS44XSBDb21waWxlciBhbGxvd3MgYXJyYXkgY3JlYXRpb24gcmVm
ZXJlbmNlIHdpdGggdHlwZSBhcmd1bWVudHMKK3B1YmxpYyB2b2lkIHRlc3RCdWc0NDAyODUoKSB7
CisJaWYgKHRoaXMuY29tcGxpYW5jZUxldmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfOCkK
KwkJcmV0dXJuOworCXJ1bk5lZ2F0aXZlVGVzdChuZXcgU3RyaW5nIFtdIHsKKwkJIlguamF2YSIs
CisJCSJpbXBvcnQgamF2YS51dGlsLmZ1bmN0aW9uLkZ1bmN0aW9uO1xuIiArCisJCSJjbGFzcyBZ
e31cbiIgKworCQkiY2xhc3MgWnt9XG4iICsKKwkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQki
CUZ1bmN0aW9uPEludGVnZXIsIGludFtdPiBtMSA9IGludFtdOjo8WSwgWj5uZXc7XG4iICsKKwkJ
IglGdW5jdGlvbjxJbnRlZ2VyLCBpbnRbXT4gbTIgPSBpbnRbXTo6PFk+bmV3O1xuIiArCisJCSJ9
Iix9LAorCQkiLS0tLS0tLS0tLVxuIiArCisJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUg
NSlcbiIgKworCQkiCUZ1bmN0aW9uPEludGVnZXIsIGludFtdPiBtMSA9IGludFtdOjo8WSwgWj5u
ZXc7XG4iICsKKwkJIgkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF5eXl5c
biIgKworCQkiVHlwZSBhcmd1bWVudHM6IFksIFogYXJlIG5vdCBhbGxvd2VkIGJ5IHRoZSBncmFt
bWFyIGZvciBhcnJheS10eXBlZCBjcmVhdGlvbiByZWZlcmVuY2VzXG4iICsKKwkJIi0tLS0tLS0t
LS1cbiIgKworCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDYpXG4iICsKKwkJIglGdW5j
dGlvbjxJbnRlZ2VyLCBpbnRbXT4gbTIgPSBpbnRbXTo6PFk+bmV3O1xuIiArCisJCSIJICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBeXG4iICsKKwkJIlR5cGUgYXJndW1lbnQ6
IFkgaXMgbm90IGFsbG93ZWQgYnkgdGhlIGdyYW1tYXIgZm9yIGFycmF5LXR5cGVkIGNyZWF0aW9u
IHJlZmVyZW5jZXNcbiIgKworCQkiLS0tLS0tLS0tLVxuIik7Cit9CiB9CmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Db21waWxlckludm9jYXRpb25UZXN0cy5qYXZh
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pk
dC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQ29tcGlsZXJJbnZvY2F0aW9uVGVzdHMu
amF2YQppbmRleCAyYzZkNTNiLi4yMGIyZTdhIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGls
ZXIvcmVncmVzc2lvbi9Db21waWxlckludm9jYXRpb25UZXN0cy5qYXZhCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9jb21waWxlci9yZWdyZXNzaW9uL0NvbXBpbGVySW52b2NhdGlvblRlc3RzLmphdmEKQEAgLTY2
Niw2ICs2NjYsNyBAQCBwdWJsaWMgdm9pZCB0ZXN0MDExX3Byb2JsZW1fY2F0ZWdvcmllcygpIHsK
IAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkludmFsaWRQYXJhbWV0ZXJpemVkRXhj
ZXB0aW9uVHlwZSIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FU
X1RZUEUpKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkludmFsaWRQYXJlbnRo
ZXNpemVkRXhwcmVzc2lvbiIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2Js
ZW0uQ0FUX1NZTlRBWCkpOwogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiSW52YWxp
ZFR5cGVFeHByZXNzaW9uIiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKENhdGVnb3JpemVkUHJvYmxl
bS5DQVRfSU5URVJOQUwpKTsKKwkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkludmFs
aWRUeXBlQXJndW1lbnRzT25BcnJheVR5cGVDcmVhdGVkUmVmZXJlbmNlcyIsIG5ldyBQcm9ibGVt
QXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX1RZUEUpKTsKIAkJZXhwZWN0ZWRQcm9i
bGVtQXR0cmlidXRlcy5wdXQoIkludmFsaWRUeXBlRm9yQ29sbGVjdGlvbiIsIG5ldyBQcm9ibGVt
QXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX0lOVEVSTkFMKSk7CiAJCWV4cGVjdGVk
UHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJJbnZhbGlkVHlwZUZvckNvbGxlY3Rpb25UYXJnZXQxNCIs
IG5ldyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX0lOVEVSTkFMKSk7
CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJJbnZhbGlkVHlwZUZvclN0YXRpY0lt
cG9ydCIsIG5ldyBQcm9ibGVtQXR0cmlidXRlcyhDYXRlZ29yaXplZFByb2JsZW0uQ0FUX0lNUE9S
VCkpOwpAQCAtMTQ4Nyw2ICsxNDg4LDcgQEAgcHVibGljIHZvaWQgdGVzdDAxMl9jb21waWxlcl9w
cm9ibGVtc190dW5pbmcoKSB7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJJbnZh
bGlkT3BlcmF0b3IiLCBTS0lQKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIklu
dmFsaWRQYXJhbWV0ZXJpemVkRXhjZXB0aW9uVHlwZSIsIFNLSVApOwogCQlleHBlY3RlZFByb2Js
ZW1BdHRyaWJ1dGVzLnB1dCgiSW52YWxpZFBhcmVudGhlc2l6ZWRFeHByZXNzaW9uIiwgU0tJUCk7
CisJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJJbnZhbGlkVHlwZUFyZ3VtZW50c09u
QXJyYXlUeXBlQ3JlYXRlZFJlZmVyZW5jZXMiLCBTS0lQKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0
cmlidXRlcy5wdXQoIkludmFsaWRUeXBlRXhwcmVzc2lvbiIsIFNLSVApOwogCQlleHBlY3RlZFBy
b2JsZW1BdHRyaWJ1dGVzLnB1dCgiSW52YWxpZFR5cGVGb3JDb2xsZWN0aW9uIiwgU0tJUCk7CiAJ
CWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJJbnZhbGlkVHlwZUZvckNvbGxlY3Rpb25U
YXJnZXQxNCIsIFNLSVApOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2NvcmUvY29tcGlsZXIvSVByb2JsZW0uamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9jb3JlL2NvbXBpbGVyL0lQcm9i
bGVtLmphdmEKaW5kZXggMWEzYjc4My4uMjg4NmRmYSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2NvcmUvY29tcGlsZXIvSVByb2JsZW0u
amF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
Y29yZS9jb21waWxlci9JUHJvYmxlbS5qYXZhCkBAIC0xMjkyLDYgKzEyOTIsOCBAQCB2b2lkIHNl
dFNvdXJjZVN0YXJ0KGludCBzb3VyY2VTdGFydCk7CiAKIAkvKiogQHNpbmNlIDMuOSAqLwogCWlu
dCBVbnNhZmVFbGVtZW50VHlwZUNvbnZlcnNpb24gPSBUeXBlUmVsYXRlZCArIDU4NTsKKwkvKiog
QHNpbmNlIDMuMTEgKi8KKyAgICBpbnQgSW52YWxpZFR5cGVBcmd1bWVudHNPbkFycmF5VHlwZUNy
ZWF0ZWRSZWZlcmVuY2VzID0gTWV0aG9kUmVsYXRlZCArIFR5cGVSZWxhdGVkICsgNTg2OwogCiAJ
LyoqCiAJICogMS41IFN5bnRheCBlcnJvcnMgKHdoZW4gc291cmNlIGxldmVsIDwgMS41KQpkaWZm
IC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2FzdC9SZWZlcmVuY2VFeHByZXNzaW9uLmphdmEgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0
L1JlZmVyZW5jZUV4cHJlc3Npb24uamF2YQppbmRleCAzMTBjNTNkLi5kOTU4NjBlIDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvYXN0L1JlZmVyZW5jZUV4cHJlc3Npb24uamF2YQorKysgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0
L1JlZmVyZW5jZUV4cHJlc3Npb24uamF2YQpAQCAtNDU3LDYgKzQ1NywxMiBAQCBwdWJsaWMgY2xh
c3MgUmVmZXJlbmNlRXhwcmVzc2lvbiBleHRlbmRzIEZ1bmN0aW9uYWxFeHByZXNzaW9uIGltcGxl
bWVudHMgSW52b2NhdAogICAgICAgICAJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmNvbnN0cnVj
dGVkQXJyYXlJbmNvbXBhdGlibGUodGhpcywgbGhzVHlwZSwgdGhpcy5kZXNjcmlwdG9yLnJldHVy
blR5cGUpOwogICAgICAgICAJCXJldHVybiB0aGlzLnJlc29sdmVkVHlwZSA9IG51bGw7CiAgICAg
ICAgIAl9CisKKyAgICAgICAgICAgIGlmICh0aGlzLnR5cGVBcmd1bWVudHMgIT0gbnVsbCkgewor
ICAgICAgICAgICAgICAgIHNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmludmFsaWRUeXBlQXJndW1l
bnRzT25BcnJheVR5cGVDcmVhdGVkUmVmZXJlbmNlcyh0aGlzLnR5cGVBcmd1bWVudHMpOworICAg
ICAgICAgICAgICAgIHJldHVybiB0aGlzLnJlc29sdmVkVHlwZSA9IG51bGw7CisgICAgICAgICAg
ICB9CisKICAgICAgICAgCXRoaXMuYmluZGluZyA9IHRoaXMuZXhhY3RNZXRob2RCaW5kaW5nID0g
c2NvcGUuZ2V0RXhhY3RDb25zdHJ1Y3RvcihsaHNUeXBlLCB0aGlzKTsKICAgICAgICAgCXJldHVy
biB0aGlzLnJlc29sdmVkVHlwZTsKICAgICAgICAgfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2Js
ZW0vUHJvYmxlbVJlcG9ydGVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVtUmVwb3J0ZXIu
amF2YQppbmRleCA0MWZjNTFmLi4xOGFkNDEzIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Q
cm9ibGVtUmVwb3J0ZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVtUmVwb3J0ZXIu
amF2YQpAQCAtMTAxODcsNCArMTAxODcsMjAgQEAgcHVibGljIHZvaWQgdW5pbnRlcm5lZElkZW50
aXR5Q29tcGFyaXNvbihFcXVhbEV4cHJlc3Npb24gZXhwciwgVHlwZUJpbmRpbmcgbGhzLAogCQkJ
ZXhwci5zb3VyY2VTdGFydCwKIAkJCWV4cHIuc291cmNlRW5kKTsKIH0KK3B1YmxpYyB2b2lkIGlu
dmFsaWRUeXBlQXJndW1lbnRzT25BcnJheVR5cGVDcmVhdGVkUmVmZXJlbmNlcyhUeXBlUmVmZXJl
bmNlW10gdHlwZVJlZmVyZW5jZSkgeworCVN0cmluZ0J1ZmZlciBtZXNzYWdlQXJndW1lbnQgPSBu
ZXcgU3RyaW5nQnVmZmVyKCk7CisJZm9yIChpbnQgaSA9IDAsIGxlbmd0aCA9IHR5cGVSZWZlcmVu
Y2UubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHsKKwkJaWYgKGkgIT0gMCkgeworCQkJbWVzc2Fn
ZUFyZ3VtZW50LmFwcGVuZCgiLCAiKTsgLy8kTk9OLU5MUy0xJAorCQl9CisJCW1lc3NhZ2VBcmd1
bWVudC5hcHBlbmQobmV3IFN0cmluZyh0eXBlUmVmZXJlbmNlW2ldLnJlc29sdmVkVHlwZS5zaG9y
dFJlYWRhYmxlTmFtZSgpKSk7CisJfQorCVN0cmluZ1tdIG1lc3NhZ2UgPSBuZXcgU3RyaW5nW10g
e3R5cGVSZWZlcmVuY2UubGVuZ3RoID09IDEgPyAiYXJndW1lbnQiIDogImFyZ3VtZW50cyIsICAg
Ly8kTk9OLU5MUy0xJC8vJE5PTi1OTFMtMiQKKwkJCW1lc3NhZ2VBcmd1bWVudC50b1N0cmluZygp
LAorCQkJdHlwZVJlZmVyZW5jZS5sZW5ndGggPT0gMSA/ICJpcyIgOiAiYXJlIn07ICAvLyROT04t
TkxTLTEkLy8kTk9OLU5MUy0yJAorCXRoaXMuaGFuZGxlKElQcm9ibGVtLkludmFsaWRUeXBlQXJn
dW1lbnRzT25BcnJheVR5cGVDcmVhdGVkUmVmZXJlbmNlcywKKwkJCW1lc3NhZ2UsIG1lc3NhZ2Us
CisJCQl0eXBlUmVmZXJlbmNlWzBdLnNvdXJjZVN0YXJ0LAorCQkJdHlwZVJlZmVyZW5jZVt0eXBl
UmVmZXJlbmNlLmxlbmd0aCAtIDFdLnNvdXJjZUVuZCk7Cit9CiB9CmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvcHJvYmxlbS9tZXNzYWdlcy5wcm9wZXJ0aWVzIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2JsZW0vbWVzc2FnZXMu
cHJvcGVydGllcwppbmRleCBhOTcwNmU1Li44ZDZhODFhIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJv
YmxlbS9tZXNzYWdlcy5wcm9wZXJ0aWVzCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL21lc3NhZ2VzLnBy
b3BlcnRpZXMKQEAgLTU3MSw2ICs1NzEsNyBAQAogNTc5ID0gVW51c2VkIHR5cGUgYXJndW1lbnRz
IGZvciB0aGUgbm9uIGdlbmVyaWMgbWV0aG9kIHswfSh7MX0pIG9mIHR5cGUgezJ9OyBpdCBzaG91
bGQgbm90IGJlIHBhcmFtZXRlcml6ZWQgd2l0aCBhcmd1bWVudHMgPHszfT4KIDU4MyA9IER1cGxp
Y2F0ZSBtZXRob2RzIG5hbWVkIHswfSB3aXRoIHRoZSBwYXJhbWV0ZXJzICh7MX0pIGFuZCAoezJ9
KSBhcmUgaW5oZXJpdGVkIGZyb20gdGhlIHR5cGVzIHszfSBhbmQgezR9CiA1ODQgPSBOYW1lIGNs
YXNoOiBUaGUgbWV0aG9kIHswfSh7MX0pIG9mIHR5cGUgezJ9IGhhcyB0aGUgc2FtZSBlcmFzdXJl
IGFzIHswfSh7M30pIG9mIHR5cGUgezR9IGJ1dCBkb2VzIG5vdCBoaWRlIGl0Cis1ODYgPSBUeXBl
IHswfTogezF9IHsyfSBub3QgYWxsb3dlZCBieSB0aGUgZ3JhbW1hciBmb3IgYXJyYXktdHlwZWQg
Y3JlYXRpb24gcmVmZXJlbmNlcwogCiAjIyMgRk9SRUFDSAogNTgwID0gVHlwZSBtaXNtYXRjaDog
Y2Fubm90IGNvbnZlcnQgZnJvbSBlbGVtZW50IHR5cGUgezB9IHRvIHsxfQo=
</data>

          </attachment>
      

    </bug>

</bugzilla>