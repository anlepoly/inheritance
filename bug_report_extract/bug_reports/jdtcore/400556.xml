<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>400556</bug_id>
          
          <creation_ts>2013-02-12 06:16:00 -0500</creation_ts>
          <short_desc>[1.8][compiler] Visibility checks are missing for lambda/reference expressions.</short_desc>
          <delta_ts>2013-02-15 01:47:01 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>382701</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>jesper</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2215319</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-02-12 06:16:55 -0500</bug_when>
    <thetext>BETA_JAVA8:

The following program compiles silently with HEAD:

// ---- X.java
import p.I;

public class X {
	I i = (p) -&gt; { return null; };
}
// ---- I.java
package p;
public interface I {
	ReturnType doit(ParameterType p) throws ExceptionType;
}

class ReturnType {
}

class ParameterType {
}

class ExceptionType extends Exception {
}
// ----------------------

It should report three errors, one each about ReturnType, ParameterType
and Exception type as they are not visible at the lambda definition site.

Interestingly javac 8b74 complains:

X.java:6: error: ParameterType is not public in p; cannot be accessed from outsi
de package
X.java:4: error: ParameterType is not public in p; cannot be accessed from outsi
de package
        I i = (p) -&gt; { return null; };
              ^
2 errors

// ----

Here is the relevant wording:

 For each checked exception that can result from execution of the body of the lambda expression, a compile-time error occurs unless that exception type or a supertype of that exception type is mentioned in the throws clause of the descriptor of T&apos;.

 It is a compile-time error if any class or interface mentioned by either T&apos; or the descriptor of T&apos; is not accessible from the class in which the lambda expression appears.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2215343</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-02-12 07:45:17 -0500</bug_when>
    <thetext>// ---- Another example: I.java

package p;
import java.util.List;
public interface I&lt;P extends ParameterType&gt; {
	&lt;T extends ExceptionType , R extends ReturnType&gt; R doit(P p) throws T;
}

class ReturnType {
}

class ParameterType {
}

class ExceptionType extends Exception {
}
// ---- X.java
import p.I;

public class X {
	I i = (p) -&gt; { return null; };
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2217006</commentid>
    <comment_count>2</comment_count>
      <attachid>227100</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-02-14 14:18:13 -0500</bug_when>
    <thetext>Created attachment 227100
Patch under consideration</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2217136</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-02-14 19:33:13 -0500</bug_when>
    <thetext>Released fix and tests here:08b9d40dde0b005b87b207f8d02b5899cde7b397.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2217181</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-02-15 01:47:01 -0500</bug_when>
    <thetext>Released several more tests here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=2adf5e7af76ae05ae6976726576af8c12845ba88</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>227100</attachid>
            <date>2013-02-14 14:18:00 -0500</date>
            <delta_ts>2013-02-14 14:18:13 -0500</delta_ts>
            <desc>Patch under consideration</desc>
            <filename>visibility-checks.patch</filename>
            <type>text/plain</type>
            <size>27202</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0NvbXBpbGVySW52b2Nh
dGlvblRlc3RzLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Db21waWxlcklu
dm9jYXRpb25UZXN0cy5qYXZhCmluZGV4IDU2NDZkMGUuLjNhNTdmOTkgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0NvbXBpbGVySW52b2NhdGlvblRlc3RzLmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQ29tcGlsZXJJbnZvY2F0aW9uVGVz
dHMuamF2YQpAQCAtNzE5LDYgKzcxOSw3IEBACiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMu
cHV0KCJKYXZhZG9jVXNpbmdEZXByZWNhdGVkRmllbGQiLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMo
Q2F0ZWdvcml6ZWRQcm9ibGVtLkNBVF9KQVZBRE9DKSk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJp
YnV0ZXMucHV0KCJKYXZhZG9jVXNpbmdEZXByZWNhdGVkTWV0aG9kIiwgbmV3IFByb2JsZW1BdHRy
aWJ1dGVzKENhdGVnb3JpemVkUHJvYmxlbS5DQVRfSkFWQURPQykpOwogCQlleHBlY3RlZFByb2Js
ZW1BdHRyaWJ1dGVzLnB1dCgiSmF2YWRvY1VzaW5nRGVwcmVjYXRlZFR5cGUiLCBuZXcgUHJvYmxl
bUF0dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVtLkNBVF9KQVZBRE9DKSk7CisJCWV4cGVjdGVk
UHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJMYW1iZGFEZXNjcmlwdG9yTWVudGlvbnNVbm1lbnRpb25h
YmxlIiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKENhdGVnb3JpemVkUHJvYmxlbS5DQVRfSU5URVJO
QUwpKTsKIAkJZXhwZWN0ZWRQcm9ibGVtQXR0cmlidXRlcy5wdXQoIkxhbWJkYUV4cHJlc3Npb25O
b3RCZWxvdzE4IiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKENhdGVnb3JpemVkUHJvYmxlbS5DQVRf
U1lOVEFYKSk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJMYW1iZGFSZWRlY2xh
cmVzQXJndW1lbnQiLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoQ2F0ZWdvcml6ZWRQcm9ibGVtLkNB
VF9JTlRFUk5BTCkpOwogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiTGFtYmRhUmVk
ZWNsYXJlc0xvY2FsIiwgbmV3IFByb2JsZW1BdHRyaWJ1dGVzKENhdGVnb3JpemVkUHJvYmxlbS5D
QVRfSU5URVJOQUwpKTsKQEAgLTE0NzgsNiArMTQ3OSw3IEBACiAJCWV4cGVjdGVkUHJvYmxlbUF0
dHJpYnV0ZXMucHV0KCJKYXZhZG9jVXNpbmdEZXByZWNhdGVkRmllbGQiLCBuZXcgUHJvYmxlbUF0
dHJpYnV0ZXMoSmF2YUNvcmUuQ09NUElMRVJfUEJfSU5WQUxJRF9KQVZBRE9DKSk7CiAJCWV4cGVj
dGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJKYXZhZG9jVXNpbmdEZXByZWNhdGVkTWV0aG9kIiwg
bmV3IFByb2JsZW1BdHRyaWJ1dGVzKEphdmFDb3JlLkNPTVBJTEVSX1BCX0lOVkFMSURfSkFWQURP
QykpOwogCQlleHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiSmF2YWRvY1VzaW5nRGVwcmVj
YXRlZFR5cGUiLCBuZXcgUHJvYmxlbUF0dHJpYnV0ZXMoSmF2YUNvcmUuQ09NUElMRVJfUEJfSU5W
QUxJRF9KQVZBRE9DKSk7CisJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJMYW1iZGFE
ZXNjcmlwdG9yTWVudGlvbnNVbm1lbnRpb25hYmxlIiwgU0tJUCk7CiAJCWV4cGVjdGVkUHJvYmxl
bUF0dHJpYnV0ZXMucHV0KCJMYW1iZGFFeHByZXNzaW9uTm90QmVsb3cxOCIsIFNLSVApOwogCQll
eHBlY3RlZFByb2JsZW1BdHRyaWJ1dGVzLnB1dCgiTGFtYmRhUmVkZWNsYXJlc0FyZ3VtZW50Iiwg
U0tJUCk7CiAJCWV4cGVjdGVkUHJvYmxlbUF0dHJpYnV0ZXMucHV0KCJMYW1iZGFSZWRlY2xhcmVz
TG9jYWwiLCBTS0lQKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNv
bXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9u
L05lZ2F0aXZlTGFtYmRhRXhwcmVzc2lvbnNUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIv
cmVncmVzc2lvbi9OZWdhdGl2ZUxhbWJkYUV4cHJlc3Npb25zVGVzdC5qYXZhCmluZGV4IDA4MGZj
MzMuLmU4NmY1N2QgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBp
bGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL05l
Z2F0aXZlTGFtYmRhRXhwcmVzc2lvbnNUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVy
L3JlZ3Jlc3Npb24vTmVnYXRpdmVMYW1iZGFFeHByZXNzaW9uc1Rlc3QuamF2YQpAQCAtMzQxNiw2
ICszNDE2LDEwMyBAQAogCQkJIlRoZSB0eXBlIFkgaXMgbmV2ZXIgdXNlZCBsb2NhbGx5XG4iICsg
CiAJCQkiLS0tLS0tLS0tLVxuIik7CiB9CisvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9NDAwNTU2LCBbMS44XVtjb21waWxlcl0gVmlzaWJpbGl0eSBjaGVj
a3MgYXJlIG1pc3NpbmcgZm9yIGxhbWJkYS9yZWZlcmVuY2UgZXhwcmVzc2lvbnMKK3B1YmxpYyB2
b2lkIHRlc3Q0MDA1NTYoKSB7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCQluZXcgU3RyaW5n
W10geworCQkJCQkicC9JLmphdmEiLAorCQkJCQkicGFja2FnZSBwO1xuIiArCisJCQkJCSJwdWJs
aWMgaW50ZXJmYWNlIEk8UCBleHRlbmRzIFBhcmFtZXRlclR5cGU+IHtcbiIgKworCQkJCQkiCTxU
IGV4dGVuZHMgRXhjZXB0aW9uVHlwZSAsIFIgZXh0ZW5kcyBSZXR1cm5UeXBlPiBSIGRvaXQoUCBw
KSB0aHJvd3MgVDtcbiIgKworCQkJCQkifVxuIiArCisJCQkJCSJcbiIgKworCQkJCQkiY2xhc3Mg
UmV0dXJuVHlwZSB7XG4iICsKKwkJCQkJIn1cbiIgKworCQkJCQkiXG4iICsKKwkJCQkJImNsYXNz
IFBhcmFtZXRlclR5cGUge1xuIiArCisJCQkJCSJ9XG4iICsKKwkJCQkJIlxuIiArCisJCQkJCSJj
bGFzcyBFeGNlcHRpb25UeXBlIGV4dGVuZHMgRXhjZXB0aW9uIHtcbiIgKworCQkJCQkifVxuIiwK
KwkJCQkJIlguamF2YSIsCisJCQkJCSJpbXBvcnQgcC5JO1xuIiArCisJCQkJCSJwdWJsaWMgY2xh
c3MgWCB7XG4iICsKKwkJCQkJIglJIGkgPSAocCkgLT4geyByZXR1cm4gbnVsbDsgfTtcbiIgKwor
CQkJCQkifVxuIgorCQkJfSwKKwkJCSItLS0tLS0tLS0tXG4iICsgCisJCQkiMS4gV0FSTklORyBp
biBwXFxJLmphdmEgKGF0IGxpbmUgMTIpXG4iICsgCisJCQkiCWNsYXNzIEV4Y2VwdGlvblR5cGUg
ZXh0ZW5kcyBFeGNlcHRpb24ge1xuIiArIAorCQkJIgkgICAgICBeXl5eXl5eXl5eXl5eXG4iICsg
CisJCQkiVGhlIHNlcmlhbGl6YWJsZSBjbGFzcyBFeGNlcHRpb25UeXBlIGRvZXMgbm90IGRlY2xh
cmUgYSBzdGF0aWMgZmluYWwgc2VyaWFsVmVyc2lvblVJRCBmaWVsZCBvZiB0eXBlIGxvbmdcbiIg
KyAKKwkJCSItLS0tLS0tLS0tXG4iICsgCisJCQkiLS0tLS0tLS0tLVxuIiArIAorCQkJIjEuIFdB
Uk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDMpXG4iICsgCisJCQkiCUkgaSA9IChwKSAtPiB7IHJl
dHVybiBudWxsOyB9O1xuIiArIAorCQkJIgleXG4iICsgCisJCQkiSSBpcyBhIHJhdyB0eXBlLiBS
ZWZlcmVuY2VzIHRvIGdlbmVyaWMgdHlwZSBJPFA+IHNob3VsZCBiZSBwYXJhbWV0ZXJpemVkXG4i
ICsgCisJCQkiLS0tLS0tLS0tLVxuIiArIAorCQkJIjIuIEVSUk9SIGluIFguamF2YSAoYXQgbGlu
ZSAzKVxuIiArIAorCQkJIglJIGkgPSAocCkgLT4geyByZXR1cm4gbnVsbDsgfTtcbiIgKyAKKwkJ
CSIJICAgICAgXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIgKyAKKwkJCSJUaGUgdHlwZSBSZXR1
cm5UeXBlIGZyb20gdGhlIGRlc2NyaXB0b3IgY29tcHV0ZWQgZm9yIHRoZSB0YXJnZXQgY29udGV4
dCBpcyBub3QgdmlzaWJsZSBoZXJlLiAgXG4iICsgCisJCQkiLS0tLS0tLS0tLVxuIiArIAorCQkJ
IjMuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAzKVxuIiArIAorCQkJIglJIGkgPSAocCkgLT4g
eyByZXR1cm4gbnVsbDsgfTtcbiIgKyAKKwkJCSIJICAgICAgXl5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5cbiIgKyAKKwkJCSJUaGUgdHlwZSBQYXJhbWV0ZXJUeXBlIGZyb20gdGhlIGRlc2NyaXB0b3Ig
Y29tcHV0ZWQgZm9yIHRoZSB0YXJnZXQgY29udGV4dCBpcyBub3QgdmlzaWJsZSBoZXJlLiAgXG4i
ICsgCisJCQkiLS0tLS0tLS0tLVxuIiArIAorCQkJIjQuIEVSUk9SIGluIFguamF2YSAoYXQgbGlu
ZSAzKVxuIiArIAorCQkJIglJIGkgPSAocCkgLT4geyByZXR1cm4gbnVsbDsgfTtcbiIgKyAKKwkJ
CSIJICAgICAgXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIgKyAKKwkJCSJUaGUgdHlwZSBFeGNl
cHRpb25UeXBlIGZyb20gdGhlIGRlc2NyaXB0b3IgY29tcHV0ZWQgZm9yIHRoZSB0YXJnZXQgY29u
dGV4dCBpcyBub3QgdmlzaWJsZSBoZXJlLiAgXG4iICsgCisJCQkiLS0tLS0tLS0tLVxuIik7Cit9
CisKKy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDA1
NTYsIFsxLjhdW2NvbXBpbGVyXSBWaXNpYmlsaXR5IGNoZWNrcyBhcmUgbWlzc2luZyBmb3IgbGFt
YmRhL3JlZmVyZW5jZSBleHByZXNzaW9ucworcHVibGljIHZvaWQgdGVzdDQwMDU1NmEoKSB7CisJ
dGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCQluZXcgU3RyaW5nW10geworCQkJCQkicC9JLmphdmEi
LAorCQkJCQkicGFja2FnZSBwO1xuIiArCisJCQkJCSJwdWJsaWMgaW50ZXJmYWNlIEk8UCBleHRl
bmRzIFBhcmFtZXRlclR5cGU+IHtcbiIgKworCQkJCQkiCTxUIGV4dGVuZHMgRXhjZXB0aW9uVHlw
ZSAsIFIgZXh0ZW5kcyBSZXR1cm5UeXBlPiBSIGRvaXQoUCBwKSB0aHJvd3MgVDtcbiIgKworCQkJ
CQkifVxuIiwKKwkJCQkJInAvUmV0dXJuVHlwZS5qYXZhIiwKKwkJCQkJInBhY2thZ2UgcDtcbiIg
KworCQkJCQkicHVibGljIGNsYXNzIFJldHVyblR5cGUge1xuIiArCisJCQkJCSJ9XG4iICsKKwkJ
CQkJIlxuIiArCisJCQkJCSJjbGFzcyBQYXJhbWV0ZXJUeXBlIHtcbiIgKworCQkJCQkifVxuIiwK
KwkJCQkJInAvRXhjZXB0aW9uVHlwZS5qYXZhIiwKKwkJCQkJInBhY2thZ2UgcDtcbiIgKworCQkJ
CQkicHVibGljIGNsYXNzIEV4Y2VwdGlvblR5cGUgZXh0ZW5kcyBFeGNlcHRpb24ge1xuIiArCisJ
CQkJCSJ9XG4iLAorCQkJCQkiWC5qYXZhIiwKKwkJCQkJImltcG9ydCBwLkk7XG4iICsKKwkJCQkJ
InB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJCQkiCUkgaSA9IChwKSAtPiB7IHJldHVybiBudWxs
OyB9O1xuIiArCisJCQkJCSJ9XG4iCisJCQl9LAorCQkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJCSIx
LiBXQVJOSU5HIGluIHBcXEV4Y2VwdGlvblR5cGUuamF2YSAoYXQgbGluZSAyKVxuIiArIAorCQkJ
IglwdWJsaWMgY2xhc3MgRXhjZXB0aW9uVHlwZSBleHRlbmRzIEV4Y2VwdGlvbiB7XG4iICsgCisJ
CQkiCSAgICAgICAgICAgICBeXl5eXl5eXl5eXl5eXG4iICsgCisJCQkiVGhlIHNlcmlhbGl6YWJs
ZSBjbGFzcyBFeGNlcHRpb25UeXBlIGRvZXMgbm90IGRlY2xhcmUgYSBzdGF0aWMgZmluYWwgc2Vy
aWFsVmVyc2lvblVJRCBmaWVsZCBvZiB0eXBlIGxvbmdcbiIgKyAKKwkJCSItLS0tLS0tLS0tXG4i
ICsgCisJCQkiLS0tLS0tLS0tLVxuIiArIAorCQkJIjEuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBs
aW5lIDMpXG4iICsgCisJCQkiCUkgaSA9IChwKSAtPiB7IHJldHVybiBudWxsOyB9O1xuIiArIAor
CQkJIgleXG4iICsgCisJCQkiSSBpcyBhIHJhdyB0eXBlLiBSZWZlcmVuY2VzIHRvIGdlbmVyaWMg
dHlwZSBJPFA+IHNob3VsZCBiZSBwYXJhbWV0ZXJpemVkXG4iICsgCisJCQkiLS0tLS0tLS0tLVxu
IiArIAorCQkJIjIuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAzKVxuIiArIAorCQkJIglJIGkg
PSAocCkgLT4geyByZXR1cm4gbnVsbDsgfTtcbiIgKyAKKwkJCSIJICAgICAgXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXl5cbiIgKyAKKwkJCSJUaGUgdHlwZSBQYXJhbWV0ZXJUeXBlIGZyb20gdGhlIGRl
c2NyaXB0b3IgY29tcHV0ZWQgZm9yIHRoZSB0YXJnZXQgY29udGV4dCBpcyBub3QgdmlzaWJsZSBo
ZXJlLiAgXG4iICsgCisJCQkiLS0tLS0tLS0tLVxuIik7Cit9CiAKIHB1YmxpYyBzdGF0aWMgQ2xh
c3MgdGVzdENsYXNzKCkgewogCXJldHVybiBOZWdhdGl2ZUxhbWJkYUV4cHJlc3Npb25zVGVzdC5j
bGFzczsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9jb3JlL2NvbXBpbGVyL0lQcm9ibGVtLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvY29yZS9jb21waWxlci9JUHJvYmxlbS5qYXZhCmlu
ZGV4IDdmZWU4NTMuLmFlM2IwNzEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9jb3JlL2NvbXBpbGVyL0lQcm9ibGVtLmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2NvcmUvY29tcGls
ZXIvSVByb2JsZW0uamF2YQpAQCAtNDM1LDYgKzQzNSw4IEBACiAJaW50IExhbWJkYVJlZGVjbGFy
ZXNBcmd1bWVudCA9IEludGVybmFsICsgOTc7CiAJLyoqIEBzaW5jZSAzLjkgKi8KIAlpbnQgTGFt
YmRhUmVkZWNsYXJlc0xvY2FsID0gSW50ZXJuYWwgKyA5ODsKKwkvKiogQHNpbmNlIDMuOSAqLwor
CWludCBMYW1iZGFEZXNjcmlwdG9yTWVudGlvbnNVbm1lbnRpb25hYmxlID0gOTk7CiAKIAkvLyBt
ZXRob2RzCiAJaW50IFVuZGVmaW5lZE1ldGhvZCA9IE1ldGhvZFJlbGF0ZWQgKyAxMDA7CmRpZmYg
LS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvYXN0L0V4cHJlc3Npb24uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvRXhwcmVzc2lv
bi5qYXZhCmluZGV4IDViZTkyMDQuLjFkOGM5NDUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvRXhw
cmVzc2lvbi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvRXhwcmVzc2lvbi5qYXZhCkBAIC0zNzAsNyAr
MzcwLDEzIEBACiAJCQl9CiAJCQkvLyByZWN1cnNpdmVseSBvbiB0aGUgdHlwZSB2YXJpYWJsZSB1
cHBlciBib3VuZAogCQkJcmV0dXJuIGNoZWNrQ2FzdFR5cGVzQ29tcGF0aWJpbGl0eShzY29wZSwg
Y2FzdFR5cGUsICgoV2lsZGNhcmRCaW5kaW5nKWV4cHJlc3Npb25UeXBlKS5ib3VuZCwgZXhwcmVz
c2lvbik7Ci0KKwkJY2FzZSBCaW5kaW5nLklOVEVSU0VDVElPTl9DQVNUX1RZUEU6CisJCQlSZWZl
cmVuY2VCaW5kaW5nIFtdIGludGVyc2VjdGluZ1R5cGVzID0gZXhwcmVzc2lvblR5cGUuZ2V0SW50
ZXJzZWN0aW5nVHlwZXMoKTsKKwkJCWZvciAoaW50IGkgPSAwLCBsZW5ndGggPSBpbnRlcnNlY3Rp
bmdUeXBlcy5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykgeworCQkJCWlmIChjaGVja0Nhc3RUeXBl
c0NvbXBhdGliaWxpdHkoc2NvcGUsIGNhc3RUeXBlLCBpbnRlcnNlY3RpbmdUeXBlc1tpXSwgZXhw
cmVzc2lvbikpCisJCQkJCXJldHVybiB0cnVlOworCQkJfQorCQkJcmV0dXJuIGZhbHNlOwogCQlk
ZWZhdWx0OgogCQkJaWYgKGV4cHJlc3Npb25UeXBlLmlzSW50ZXJmYWNlKCkpIHsKIAkJCQlzd2l0
Y2ggKGNhc3RUeXBlLmtpbmQoKSkgewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9GdW5jdGlvbmFs
RXhwcmVzc2lvbi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9GdW5jdGlvbmFsRXhwcmVzc2lvbi5qYXZhCmlu
ZGV4IDdmMWFiMDIuLjQ2ZjJlOTYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvRnVuY3Rpb25hbEV4
cHJlc3Npb24uamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Z1bmN0aW9uYWxFeHByZXNzaW9uLmphdmEK
QEAgLTIxLDggKzIxLDEzIEBACiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLmltcGwuQ29uc3RhbnQ7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLmxvb2t1cC5CbG9ja1Njb3BlOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5sb29rdXAuTWV0aG9kQmluZGluZzsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIubG9va3VwLlBhcmFtZXRlcml6ZWRUeXBlQmluZGluZzsKIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlByb2JsZW1SZWFzb25zOwor
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuUmF3VHlwZUJp
bmRpbmc7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5S
ZWZlcmVuY2VCaW5kaW5nOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci5sb29rdXAuU2NvcGU7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
Lmxvb2t1cC5UeXBlQmluZGluZzsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIubG9va3VwLlR5cGVCaW5kaW5nVmlzaXRvcjsKIAogcHVibGljIGFic3RyYWN0IGNsYXNz
IEZ1bmN0aW9uYWxFeHByZXNzaW9uIGV4dGVuZHMgRXhwcmVzc2lvbiB7CiAJCkBAIC02NywxMCAr
NzIsNzcgQEAKIAkJCXJldHVybiBudWxsOwogCQl9CiAJCQotCQkvLyBWaXNpYmlsaXR5IGNoZWNr
cyBzaG91bGQgZ28gaGVyZSAuLi4KLQkJCiAJCXRoaXMuZGVzY3JpcHRvciA9IHNhbTsKLQkJcmV0
dXJuIHRoaXMucmVzb2x2ZWRUeXBlID0gdGhpcy5leHBlY3RlZFR5cGU7CisJCWlmIChrb3NoZXJE
ZXNjcmlwdG9yKGJsb2NrU2NvcGUsIHNhbSwgdHJ1ZSkpIHsKKwkJCXJldHVybiB0aGlzLnJlc29s
dmVkVHlwZSA9IHRoaXMuZXhwZWN0ZWRUeXBlOwkJCisJCX0KKwkJCisJCXJldHVybiB0aGlzLnJl
c29sdmVkVHlwZSA9IG51bGw7CisJfQorCisJY2xhc3MgVmlzaWJpbGl0eUluc3BlY3RvciBleHRl
bmRzIFR5cGVCaW5kaW5nVmlzaXRvciB7CisKKwkJcHJpdmF0ZSBTY29wZSBzY29wZTsKKwkJcHJp
dmF0ZSBib29sZWFuIHNob3VsZENoYXR0ZXI7CisgICAgICAgIHByaXZhdGUgYm9vbGVhbiB2aXNp
YmxlID0gdHJ1ZTsKKwkJcHJpdmF0ZSBGdW5jdGlvbmFsRXhwcmVzc2lvbiBleHByZXNzaW9uOwor
ICAgICAgICAKKwkJcHVibGljIFZpc2liaWxpdHlJbnNwZWN0b3IoRnVuY3Rpb25hbEV4cHJlc3Np
b24gZXhwcmVzc2lvbiwgU2NvcGUgc2NvcGUsIGJvb2xlYW4gc2hvdWxkQ2hhdHRlcikgeworCQkJ
dGhpcy5zY29wZSA9IHNjb3BlOworCQkJdGhpcy5zaG91bGRDaGF0dGVyID0gc2hvdWxkQ2hhdHRl
cjsKKwkJCXRoaXMuZXhwcmVzc2lvbiA9IGV4cHJlc3Npb247CisJCX0KKworCQlwcml2YXRlIHZv
aWQgY2hlY2tWaXNpYmlsaXR5KFJlZmVyZW5jZUJpbmRpbmcgcmVmZXJlbmNlQmluZGluZykgewor
CQkJaWYgKCFyZWZlcmVuY2VCaW5kaW5nLmNhbkJlU2VlbkJ5KHRoaXMuc2NvcGUpKSB7CisJCQkJ
dGhpcy52aXNpYmxlID0gZmFsc2U7CisJCQkJaWYgKHRoaXMuc2hvdWxkQ2hhdHRlcikKKwkJCQkJ
dGhpcy5zY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5kZXNjcmlwdG9ySGFzSW52aXNpYmxlVHlwZSh0
aGlzLmV4cHJlc3Npb24sIHJlZmVyZW5jZUJpbmRpbmcpOworCQkJfQorCQl9CisJCQorCQlwdWJs
aWMgYm9vbGVhbiB2aXNpdChSZWZlcmVuY2VCaW5kaW5nIHJlZmVyZW5jZUJpbmRpbmcpIHsKKwkJ
CWNoZWNrVmlzaWJpbGl0eShyZWZlcmVuY2VCaW5kaW5nKTsKKwkJCXJldHVybiB0cnVlOworCQl9
CisKKwkJCisJCXB1YmxpYyBib29sZWFuIHZpc2l0KFBhcmFtZXRlcml6ZWRUeXBlQmluZGluZyBw
YXJhbWV0ZXJpemVkVHlwZUJpbmRpbmcpIHsKKwkJCWNoZWNrVmlzaWJpbGl0eShwYXJhbWV0ZXJp
emVkVHlwZUJpbmRpbmcpOworCQkJcmV0dXJuIHRydWU7CisJCX0KKwkJCisJCXB1YmxpYyBib29s
ZWFuIHZpc2l0KFJhd1R5cGVCaW5kaW5nIHJhd1R5cGVCaW5kaW5nKSB7CisJCQljaGVja1Zpc2li
aWxpdHkocmF3VHlwZUJpbmRpbmcpOworCQkJcmV0dXJuIHRydWU7CisJCX0KKworCQlwdWJsaWMg
Ym9vbGVhbiB2aXNpYmxlKFR5cGVCaW5kaW5nIHR5cGUpIHsKKwkJCVR5cGVCaW5kaW5nVmlzaXRv
ci52aXNpdCh0aGlzLCB0eXBlKTsKKwkJCXJldHVybiB0aGlzLnZpc2libGU7CisJCX0KKworCQlw
dWJsaWMgYm9vbGVhbiB2aXNpYmxlKFR5cGVCaW5kaW5nW10gdHlwZXMpIHsKKwkJCVR5cGVCaW5k
aW5nVmlzaXRvci52aXNpdCh0aGlzLCB0eXBlcyk7CisJCQlyZXR1cm4gdGhpcy52aXNpYmxlOwor
CQl9CisJCQorCX0KKworCXB1YmxpYyBib29sZWFuIGtvc2hlckRlc2NyaXB0b3IoU2NvcGUgc2Nv
cGUsIE1ldGhvZEJpbmRpbmcgc2FtLCBib29sZWFuIHNob3VsZENoYXR0ZXIpIHsKKwkKKwkJVmlz
aWJpbGl0eUluc3BlY3RvciBpbnNwZWN0b3IgPSBuZXcgVmlzaWJpbGl0eUluc3BlY3Rvcih0aGlz
LCBzY29wZSwgc2hvdWxkQ2hhdHRlcik7CisJCQorCQlib29sZWFuIHN0YXR1cyA9IHRydWU7CisJ
CQorCQlpZiAoIWluc3BlY3Rvci52aXNpYmxlKHNhbS5yZXR1cm5UeXBlKSkKKwkJCXN0YXR1cyA9
IGZhbHNlOworCQlpZiAoIWluc3BlY3Rvci52aXNpYmxlKHNhbS5wYXJhbWV0ZXJzKSkKKwkJCXN0
YXR1cyA9IGZhbHNlOworCQlpZiAoIWluc3BlY3Rvci52aXNpYmxlKHNhbS50aHJvd25FeGNlcHRp
b25zKSkKKwkJCXN0YXR1cyA9IGZhbHNlOworCQkKKwkJcmV0dXJuIHN0YXR1czsKIAl9CiAKIAlw
dWJsaWMgaW50IG51bGxTdGF0dXMoRmxvd0luZm8gZmxvd0luZm8pIHsKZGlmZiAtLWdpdCBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9hc3QvTGFtYmRhRXhwcmVzc2lvbi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9MYW1iZGFFeHByZXNz
aW9uLmphdmEKaW5kZXggZjU0ZTYzMy4uY2FhNGRiNyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9M
YW1iZGFFeHByZXNzaW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9MYW1iZGFFeHByZXNzaW9uLmph
dmEKQEAgLTY1LDYgKzY1LDE1IEBACiAJCXRoaXMuYm9keS5nZW5lcmF0ZUNvZGUodGhpcy5zY29w
ZSwgY29kZVN0cmVhbSk7CiAJfQogCisJcHVibGljIGJvb2xlYW4ga29zaGVyRGVzY3JpcHRvcihT
Y29wZSBjdXJyZW50U2NvcGUsIE1ldGhvZEJpbmRpbmcgc2FtLCBib29sZWFuIHNob3VsZENoYXR0
ZXIpIHsKKwkJaWYgKHNhbS50eXBlVmFyaWFibGVzICE9IEJpbmRpbmcuTk9fVFlQRV9WQVJJQUJM
RVMpIHsKKwkJCWlmIChzaG91bGRDaGF0dGVyKQorCQkJCWN1cnJlbnRTY29wZS5wcm9ibGVtUmVw
b3J0ZXIoKS5sYW1iZGFFeHByZXNzaW9uQ2Fubm90SW1wbGVtZW50R2VuZXJpY01ldGhvZCh0aGlz
LCBzYW0pOworCQkJcmV0dXJuIGZhbHNlOworCQl9CisJCXJldHVybiBzdXBlci5rb3NoZXJEZXNj
cmlwdG9yKGN1cnJlbnRTY29wZSwgc2FtLCBzaG91bGRDaGF0dGVyKTsKKwl9CisJCiAJLyogVGhp
cyBjb2RlIGlzIGFycmFuZ2VkIHNvIHRoYXQgd2UgY2FuIGNvbnRpbnVlIHdpdGggYXMgbXVjaCBh
bmFseXNpcyBhcyBwb3NzaWJsZSB3aGlsZSBhdm9pZGluZyAKIAkgKiBtaW5lIGZpZWxkcyB0aGF0
IHdvdWxkIHJlc3VsdCBpbiBhIHNsZXcgb2Ygc3B1cmlvdXMgbWVzc2FnZXMuIFRoaXMgbWV0aG9k
IGlzIGEgbWVyZ2VyIG9mOgogCSAqIEBzZWUgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLmxvb2t1cC5NZXRob2RTY29wZS5jcmVhdGVNZXRob2QoQWJzdHJhY3RNZXRob2REZWNsYXJh
dGlvbikKQEAgLTc4LDEwICs4Nyw5IEBACiAJCWZpbmFsIGJvb2xlYW4gYXJndW1lbnRzVHlwZUVs
aWRlZCA9IGFyZ3VtZW50c1R5cGVFbGlkZWQoKTsKIAkJZmluYWwgYm9vbGVhbiBoYXZlRGVzY3Jp
cHRvciA9IHRoaXMuZGVzY3JpcHRvciAhPSBudWxsOwogCQkKLQkJaWYgKGhhdmVEZXNjcmlwdG9y
ICYmIHRoaXMuZGVzY3JpcHRvci50eXBlVmFyaWFibGVzICE9IEJpbmRpbmcuTk9fVFlQRV9WQVJJ
QUJMRVMpIHsKLQkJCWJsb2NrU2NvcGUucHJvYmxlbVJlcG9ydGVyKCkubGFtYmRhRXhwcmVzc2lv
bkNhbm5vdEltcGxlbWVudEdlbmVyaWNNZXRob2QodGhpcywgdGhpcy5kZXNjcmlwdG9yKTsKLQkJ
CXJldHVybiB0aGlzLnJlc29sdmVkVHlwZSA9IG51bGw7Ci0JCX0KKwkJaWYgKGhhdmVEZXNjcmlw
dG9yICYmIHRoaXMuZGVzY3JpcHRvci50eXBlVmFyaWFibGVzICE9IEJpbmRpbmcuTk9fVFlQRV9W
QVJJQUJMRVMpIC8vIGFscmVhZHkgY29tcGxhaW5lZCBpbiBrb3NoZXIqCisJCQlyZXR1cm4gbnVs
bDsKKwkJCiAJCWlmICghaGF2ZURlc2NyaXB0b3IgJiYgYXJndW1lbnRzVHlwZUVsaWRlZCkgCiAJ
CQlyZXR1cm4gbnVsbDsgLy8gRlVCQVIsIGJhaWwgb3V0Li4uCiAKZGlmZiAtLWdpdCBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9sb29rdXAvQmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CaW5kaW5nLmphdmEKaW5kZXgg
OGQwNTczZC4uN2M5ZTMzNCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CaW5kaW5nLmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2xvb2t1cC9CaW5kaW5nLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3Jh
dGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3Jh
dGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFu
ZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVy
IHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBh
Y2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtMzgs
NiArMzgsOSBAQAogCXB1YmxpYyBzdGF0aWMgZmluYWwgaW50IElOVEVSU0VDVElPTl9UWVBFID0g
VFlQRSB8IEFTVE5vZGUuQml0MTQ7CiAJLy8ganNyIDMwOAogCXB1YmxpYyBzdGF0aWMgZmluYWwg
aW50IFRZUEVfVVNFID0gVFlQRSB8IEFTVE5vZGUuQml0MTU7CisJcHVibGljIHN0YXRpYyBmaW5h
bCBpbnQgSU5URVJTRUNUSU9OX0NBU1RfVFlQRSA9IFRZUEUgfCBBU1ROb2RlLkJpdDE2OworCQor
CS8vIEluIHRoZSB1bmxpa2VseSBldmVudCB5b3UgYWRkIGEgbmV3IHR5cGUgYmluZGluZywgcmVt
ZW1iZXIgdG8gdXBkYXRlIFR5cGVCaW5kaW5nVmlzaXRvciBhbmQgU2NvcGUuc3Vic3RpdHV0ZSBt
ZXRob2RzLiAKIAogCS8vIFNoYXJlZCBiaW5kaW5nIGNvbGxlY3Rpb25zCiAJcHVibGljIHN0YXRp
YyBmaW5hbCBUeXBlQmluZGluZ1tdIE5PX1RZUEVTID0gbmV3IFR5cGVCaW5kaW5nWzBdOwpkaWZm
IC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2xvb2t1cC9JbnRlcnNlY3Rpb25DYXN0VHlwZUJpbmRpbmcuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9sb29rdXAvSW50ZXJzZWN0aW9uQ2FzdFR5cGVCaW5kaW5nLmphdmEKaW5kZXggN2Vh
OWFkZS4uNjIzYWU4MyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9JbnRlcnNlY3Rpb25DYXN0
VHlwZUJpbmRpbmcuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0ludGVyc2VjdGlvbkNhc3RUeXBl
QmluZGluZy5qYXZhCkBAIC0xMzIsNyArMTMyLDcgQEAKIAkJcmV0dXJuIHRydWU7CiAJfQogCXB1
YmxpYyBpbnQga2luZCgpIHsKLQkJcmV0dXJuIEJpbmRpbmcuVFlQRTsKKwkJcmV0dXJuIEJpbmRp
bmcuSU5URVJTRUNUSU9OX0NBU1RfVFlQRTsKIAl9CiAJcHVibGljIFN0cmluZyBkZWJ1Z05hbWUo
KSB7CiAJCVN0cmluZ0J1ZmZlciBkZWJ1Z05hbWUgPSBuZXcgU3RyaW5nQnVmZmVyKDE2KTsKZGlm
ZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9sb29rdXAvUGFyYW1ldGVyaXplZFR5cGVCaW5kaW5nLmphdmEgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvbG9va3VwL1BhcmFtZXRlcml6ZWRUeXBlQmluZGluZy5qYXZhCmluZGV4IDRhZTBmMDQu
LjZkYzc5OGEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvUGFyYW1ldGVyaXplZFR5cGVCaW5k
aW5nLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9QYXJhbWV0ZXJpemVkVHlwZUJpbmRpbmcuamF2
YQpAQCAtMTE0OSwxMiArMTE0OSwxMyBAQAogCQlyZXR1cm4gdGhpcy5maWVsZHM7CiAJfQogCXB1
YmxpYyBNZXRob2RCaW5kaW5nIGdldFNpbmdsZUFic3RyYWN0TWV0aG9kKGZpbmFsIFNjb3BlIHNj
b3BlKSB7Ci0JCU1ldGhvZEJpbmRpbmcgdGhlQWJzdHJhY3RNZXRob2QgPSBnZW5lcmljVHlwZSgp
LmdldFNpbmdsZUFic3RyYWN0TWV0aG9kKHNjb3BlKTsKKwkJZmluYWwgUmVmZXJlbmNlQmluZGlu
ZyBnZW5lcmljVHlwZSA9IGdlbmVyaWNUeXBlKCk7CisJCU1ldGhvZEJpbmRpbmcgdGhlQWJzdHJh
Y3RNZXRob2QgPSBnZW5lcmljVHlwZS5nZXRTaW5nbGVBYnN0cmFjdE1ldGhvZChzY29wZSk7CiAJ
CWlmICh0aGVBYnN0cmFjdE1ldGhvZCA9PSBudWxsIHx8ICF0aGVBYnN0cmFjdE1ldGhvZC5pc1Zh
bGlkQmluZGluZygpKQogCQkJcmV0dXJuIHRoZUFic3RyYWN0TWV0aG9kOwogCQkKIAkJVHlwZUJp
bmRpbmcgW10gdHlwZUFyZ3VtZW50cyA9IHRoaXMuYXJndW1lbnRzOyAvLyBBMSAuLi4gQW4gCi0J
CVR5cGVWYXJpYWJsZUJpbmRpbmcgW10gdHlwZVBhcmFtZXRlcnMgPSBnZW5lcmljVHlwZSgpLnR5
cGVWYXJpYWJsZXMoKTsgLy8gUDEgLi4uIFBuCisJCVR5cGVWYXJpYWJsZUJpbmRpbmcgW10gdHlw
ZVBhcmFtZXRlcnMgPSBnZW5lcmljVHlwZS50eXBlVmFyaWFibGVzKCk7IC8vIFAxIC4uLiBQbgog
CQlUeXBlQmluZGluZyBbXSB0eXBlcyA9IG5ldyBUeXBlQmluZGluZ1t0eXBlQXJndW1lbnRzLmxl
bmd0aF07ICAvLyBUMSAuLi4gVG4KIAkJZm9yIChpbnQgaSA9IDAsIGxlbmd0aCA9IHR5cGVBcmd1
bWVudHMubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHsKIAkJCVR5cGVCaW5kaW5nIHR5cGVBcmd1
bWVudCA9IHR5cGVBcmd1bWVudHNbaV07CkBAIC0xMTg0LDcgKzExODUsNyBAQAogCQkJaWYgKHR5
cGVQYXJhbWV0ZXJzW2ldLmJvdW5kQ2hlY2sobnVsbCwgdHlwZXNbaV0sIHNjb3BlKSAhPSBUeXBl
Q29uc3RhbnRzLk9LKQogCQkJCXJldHVybiB0aGlzLnNpbmdsZUFic3RyYWN0TWV0aG9kID0gbmV3
IFByb2JsZW1NZXRob2RCaW5kaW5nKFR5cGVDb25zdGFudHMuQU5PTllNT1VTX01FVEhPRCwgbnVs
bCwgUHJvYmxlbVJlYXNvbnMuTm90QVdlbGxGb3JtZWRQYXJhbWV0ZXJpemVkVHlwZSk7CiAJCX0K
LQkJUGFyYW1ldGVyaXplZFR5cGVCaW5kaW5nIHBhcmFtZXRlcml6ZWRUeXBlID0gc2NvcGUuZW52
aXJvbm1lbnQoKS5jcmVhdGVQYXJhbWV0ZXJpemVkVHlwZShnZW5lcmljVHlwZSgpLCB0eXBlcywg
dGhpcy5lbmNsb3NpbmdUeXBlKTsKKwkJUGFyYW1ldGVyaXplZFR5cGVCaW5kaW5nIHBhcmFtZXRl
cml6ZWRUeXBlID0gc2NvcGUuZW52aXJvbm1lbnQoKS5jcmVhdGVQYXJhbWV0ZXJpemVkVHlwZShn
ZW5lcmljVHlwZSwgdHlwZXMsIGdlbmVyaWNUeXBlLmVuY2xvc2luZ1R5cGUoKSk7CiAJCU1ldGhv
ZEJpbmRpbmcgW10gY2hvaWNlcyA9IHBhcmFtZXRlcml6ZWRUeXBlLmdldE1ldGhvZHModGhlQWJz
dHJhY3RNZXRob2Quc2VsZWN0b3IpOwogCQlmb3IgKGludCBpID0gMCwgbGVuZ3RoID0gY2hvaWNl
cy5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykgewogCQkJTWV0aG9kQmluZGluZyBtZXRob2QgPSBj
aG9pY2VzW2ldOwpAQCAtMTE5NiwyNCArMTE5NywxOCBAQAogCX0KIAogCXByaXZhdGUgYm9vbGVh
biB0eXBlUGFyYW1ldGVyc01lbnRpb25lZChUeXBlQmluZGluZyB1cHBlckJvdW5kKSB7Ci0JCWNs
YXNzIE1lbnRpb25MaXN0ZW5lciBpbXBsZW1lbnRzIFN1YnN0aXR1dGlvbiB7CisJCWNsYXNzIE1l
bnRpb25MaXN0ZW5lciBleHRlbmRzIFR5cGVCaW5kaW5nVmlzaXRvciB7CiAJCQlwcml2YXRlIGJv
b2xlYW4gdHlwZVBhcmFtZXRlcnNNZW50aW9uZWQgPSBmYWxzZTsKLQkJCXB1YmxpYyBUeXBlQmlu
ZGluZyBzdWJzdGl0dXRlKFR5cGVWYXJpYWJsZUJpbmRpbmcgdHlwZVZhcmlhYmxlKSB7CisJCQlw
dWJsaWMgYm9vbGVhbiB2aXNpdChUeXBlVmFyaWFibGVCaW5kaW5nIHR5cGVWYXJpYWJsZSkgewog
CQkJCXRoaXMudHlwZVBhcmFtZXRlcnNNZW50aW9uZWQgPSB0cnVlOwotCQkJCXJldHVybiB0eXBl
VmFyaWFibGU7Ci0JCQl9Ci0JCQlwdWJsaWMgYm9vbGVhbiBpc1Jhd1N1YnN0aXR1dGlvbigpIHsK
IAkJCQlyZXR1cm4gZmFsc2U7Ci0JCQl9Ci0JCQlwdWJsaWMgTG9va3VwRW52aXJvbm1lbnQgZW52
aXJvbm1lbnQoKSB7Ci0JCQkJcmV0dXJuIG51bGw7CiAJCQl9CiAJCQlwdWJsaWMgYm9vbGVhbiB0
eXBlUGFyYW1ldGVyc01lbnRpb25lZCgpIHsKIAkJCQlyZXR1cm4gdGhpcy50eXBlUGFyYW1ldGVy
c01lbnRpb25lZDsKIAkJCX0KIAkJfQogCQlNZW50aW9uTGlzdGVuZXIgbWVudGlvbkxpc3RlbmVy
ID0gbmV3IE1lbnRpb25MaXN0ZW5lcigpOwotCQlTY29wZS5zdWJzdGl0dXRlKG1lbnRpb25MaXN0
ZW5lciwgdXBwZXJCb3VuZCk7CisJCVR5cGVCaW5kaW5nVmlzaXRvci52aXNpdChtZW50aW9uTGlz
dGVuZXIsIHVwcGVyQm91bmQpOwogCQlyZXR1cm4gbWVudGlvbkxpc3RlbmVyLnR5cGVQYXJhbWV0
ZXJzTWVudGlvbmVkKCk7CiAJfQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9SYXdUeXBl
QmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9SYXdUeXBlQmluZGluZy5qYXZhCmluZGV4IDIx
NDU3MmYuLmQyZmUwNTEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvUmF3VHlwZUJpbmRpbmcu
amF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1Jhd1R5cGVCaW5kaW5nLmphdmEKQEAgLTEsMTAgKzEs
MTQgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIw
MTAgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIw
MTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBU
aGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBh
dmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYx
LjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxh
YmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAogICoK
KyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNh
dGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1Ap
IGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3Nl
cworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNh
dGlvbiBvZiB0aGUgSkNQLgorICogCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBv
cmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCiAgKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKi8KQEAgLTE2OSw2ICsxNzMsMjMgQEAKIAkJfQogCQl0aGlzLmFyZ3VtZW50cyA9IHR5
cGVBcmd1bWVudHM7CiAJfQorCQorCXB1YmxpYyBNZXRob2RCaW5kaW5nIGdldFNpbmdsZUFic3Ry
YWN0TWV0aG9kKFNjb3BlIHNjb3BlKSB7CisJCWZpbmFsIFJlZmVyZW5jZUJpbmRpbmcgZ2VuZXJp
Y1R5cGUgPSBnZW5lcmljVHlwZSgpOworCQlNZXRob2RCaW5kaW5nIHRoZUFic3RyYWN0TWV0aG9k
ID0gZ2VuZXJpY1R5cGUuZ2V0U2luZ2xlQWJzdHJhY3RNZXRob2Qoc2NvcGUpOworCQlpZiAodGhl
QWJzdHJhY3RNZXRob2QgPT0gbnVsbCB8fCAhdGhlQWJzdHJhY3RNZXRob2QuaXNWYWxpZEJpbmRp
bmcoKSkKKwkJCXJldHVybiB0aGVBYnN0cmFjdE1ldGhvZDsKKwkJCisJCVJlZmVyZW5jZUJpbmRp
bmcgcmF3VHlwZSA9IChSZWZlcmVuY2VCaW5kaW5nKSBzY29wZS5lbnZpcm9ubWVudCgpLmNvbnZl
cnRUb1Jhd1R5cGUoZ2VuZXJpY1R5cGUsIHRydWUpOworCQlNZXRob2RCaW5kaW5nIFtdIGNob2lj
ZXMgPSByYXdUeXBlLmdldE1ldGhvZHModGhlQWJzdHJhY3RNZXRob2Quc2VsZWN0b3IpOworCQlm
b3IgKGludCBpID0gMCwgbGVuZ3RoID0gY2hvaWNlcy5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykg
eworCQkJTWV0aG9kQmluZGluZyBtZXRob2QgPSBjaG9pY2VzW2ldOworCQkJaWYgKCFtZXRob2Qu
aXNBYnN0cmFjdCgpIHx8IG1ldGhvZC5yZWRlY2xhcmVzUHVibGljT2JqZWN0TWV0aG9kKHNjb3Bl
KSkgY29udGludWU7IC8vIChyZSlza2lwIHN0YXRpY3MsIGRlZmF1bHRzLCBwdWJsaWMgb2JqZWN0
IG1ldGhvZHMgLi4uCisJCQl0aGlzLnNpbmdsZUFic3RyYWN0TWV0aG9kID0gbWV0aG9kOworCQkJ
YnJlYWs7CisJCX0KKwkJcmV0dXJuIHRoaXMuc2luZ2xlQWJzdHJhY3RNZXRob2Q7CisJfQogCS8q
KgogCSAqIEBzZWUgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5CaW5k
aW5nI3JlYWRhYmxlTmFtZSgpCiAJICovCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVC
aW5kaW5nVmlzaXRvci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlQmluZGluZ1Zpc2l0b3IuamF2
YQpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwLi43ZTQxYmIwCi0tLSAvZGV2L251
bGwKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlQmluZGluZ1Zpc2l0b3IuamF2YQpAQCAtMCwwICsx
LDEzOCBAQAorLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKyAqIENvcHlyaWdodCAoYykgMjAxMyBJ
Qk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMg
cHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKKyAqIGFyZSBtYWRlIGF2YWls
YWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAor
ICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUg
YXQKKyAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICog
VGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9u
IGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5k
IGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisg
KiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9u
IG9mIHRoZSBKQ1AuCisgKgorICogQ29udHJpYnV0b3JzOgorICogICAgIElCTSBDb3Jwb3JhdGlv
biAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgorICoqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KiovCitwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXA7CisK
K2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LldpbGRjYXJkOwor
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQW5ub3RhdGlvbi5U
eXBlVXNlQmluZGluZzsKKworCitwdWJsaWMgY2xhc3MgVHlwZUJpbmRpbmdWaXNpdG9yIHsKKwor
CXB1YmxpYyBib29sZWFuIHZpc2l0KEJhc2VUeXBlQmluZGluZyBiYXNlVHlwZUJpbmRpbmcpICB7
CisJCXJldHVybiB0cnVlOyAgLy8gY29udGludWUgdHJhdmVyc2FsLgorCX0KKworCXB1YmxpYyBi
b29sZWFuIHZpc2l0KEFycmF5QmluZGluZyBhcnJheUJpbmRpbmcpIHsKKwkJcmV0dXJuIHRydWU7
ICAvLyBjb250aW51ZSB0cmF2ZXJzYWwuCisJfQorCQorCXB1YmxpYyBib29sZWFuIHZpc2l0KFR5
cGVWYXJpYWJsZUJpbmRpbmcgdHlwZVZhcmlhYmxlKSB7CisJCXJldHVybiB0cnVlOyAgLy8gY29u
dGludWUgdHJhdmVyc2FsLgorCX0KKwkKKwlwdWJsaWMgYm9vbGVhbiB2aXNpdChSZWZlcmVuY2VC
aW5kaW5nIHJlZmVyZW5jZUJpbmRpbmcpIHsKKwkJcmV0dXJuIHRydWU7ICAvLyBjb250aW51ZSB0
cmF2ZXJzYWwuCisJfQorCQorCXB1YmxpYyBib29sZWFuIHZpc2l0KFdpbGRjYXJkQmluZGluZyB3
aWxkY2FyZEJpbmRpbmcpIHsKKwkJcmV0dXJuIHRydWU7ICAvLyBjb250aW51ZSB0cmF2ZXJzYWwu
CisJfQorCQorCXB1YmxpYyBib29sZWFuIHZpc2l0KFBhcmFtZXRlcml6ZWRUeXBlQmluZGluZyBw
YXJhbWV0ZXJpemVkVHlwZUJpbmRpbmcpIHsKKwkJcmV0dXJuIHRydWU7ICAvLyBjb250aW51ZSB0
cmF2ZXJzYWwuCisJfQorCQorCXB1YmxpYyBib29sZWFuIHZpc2l0KEludGVyc2VjdGlvbkNhc3RU
eXBlQmluZGluZyBpbnRlcnNlY3Rpb25DYXN0VHlwZUJpbmRpbmcpIHsKKwkJcmV0dXJuIHRydWU7
ICAvLyBjb250aW51ZSB0cmF2ZXJzYWwuCisJfQorCQorCXB1YmxpYyBib29sZWFuIHZpc2l0KFR5
cGVVc2VCaW5kaW5nIHR5cGVVc2VCaW5kaW5nKSB7CisJCXJldHVybiB0cnVlOyAgLy8gY29udGlu
dWUgdHJhdmVyc2FsLgorCX0KKwkKKwlwdWJsaWMgYm9vbGVhbiB2aXNpdChSYXdUeXBlQmluZGlu
ZyByYXdUeXBlQmluZGluZykgeworCQlyZXR1cm4gdHJ1ZTsgIC8vIGNvbnRpbnVlIHRyYXZlcnNh
bC4KKwl9CisKKwlwdWJsaWMgc3RhdGljIHZvaWQgdmlzaXQoVHlwZUJpbmRpbmdWaXNpdG9yIHZp
c2l0b3IsIFJlZmVyZW5jZUJpbmRpbmdbXSB0eXBlcykgeworCQlmb3IgKGludCBpID0gMCwgbGVu
Z3RoID0gdHlwZXMgPT0gbnVsbCA/IDAgOiB0eXBlcy5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykg
eworCSAgICAgICAgdmlzaXQodmlzaXRvciwgdHlwZXNbaV0pOworCSAgICB9CisJfQorCisJcHVi
bGljIHN0YXRpYyB2b2lkIHZpc2l0KFR5cGVCaW5kaW5nVmlzaXRvciB2aXNpdG9yLCBUeXBlQmlu
ZGluZyB0eXBlKSB7CisKKwkJaWYgKHR5cGUgPT0gbnVsbCkgCisJCQlyZXR1cm47CisJCQorCQlz
d2l0Y2ggKHR5cGUua2luZCgpKSB7CisJCQkKKwkJCWNhc2UgQmluZGluZy5UWVBFX1BBUkFNRVRF
UjoKKwkJCQl2aXNpdG9yLnZpc2l0KChUeXBlVmFyaWFibGVCaW5kaW5nKSB0eXBlKTsKKwkgICAg
ICAgICAgICBicmVhazsKKwkgICAgICAgICAgICAKKwkJCWNhc2UgQmluZGluZy5QQVJBTUVURVJJ
WkVEX1RZUEU6CisJCQkJUGFyYW1ldGVyaXplZFR5cGVCaW5kaW5nIHBhcmFtZXRlcml6ZWRUeXBl
QmluZGluZyA9IChQYXJhbWV0ZXJpemVkVHlwZUJpbmRpbmcpIHR5cGU7CisJCQkJaWYgKHZpc2l0
b3IudmlzaXQocGFyYW1ldGVyaXplZFR5cGVCaW5kaW5nKSkgeworCQkJCQl2aXNpdCh2aXNpdG9y
LCBwYXJhbWV0ZXJpemVkVHlwZUJpbmRpbmcuZW5jbG9zaW5nVHlwZSgpKTsKKwkJCQkJdmlzaXQo
dmlzaXRvciwgcGFyYW1ldGVyaXplZFR5cGVCaW5kaW5nLmFyZ3VtZW50cyk7CisJCQkJfQorCQkJ
CWJyZWFrOworCisJCQljYXNlIEJpbmRpbmcuQVJSQVlfVFlQRToKKwkJCQlBcnJheUJpbmRpbmcg
YXJyYXlCaW5kaW5nID0gKEFycmF5QmluZGluZykgdHlwZTsKKwkJCQlpZiAodmlzaXRvci52aXNp
dChhcnJheUJpbmRpbmcpKQorCQkJCQl2aXNpdCh2aXNpdG9yLCBhcnJheUJpbmRpbmcubGVhZkNv
bXBvbmVudFR5cGUpOworCQkJCWJyZWFrOworCisJCQljYXNlIEJpbmRpbmcuV0lMRENBUkRfVFlQ
RToKKwkJCWNhc2UgQmluZGluZy5JTlRFUlNFQ1RJT05fVFlQRToKKwkJICAgICAgICBXaWxkY2Fy
ZEJpbmRpbmcgd2lsZGNhcmQgPSAoV2lsZGNhcmRCaW5kaW5nKSB0eXBlOworCQkgICAgICAgIGlm
ICh2aXNpdG9yLnZpc2l0KHdpbGRjYXJkKSkgeworCQkgICAgICAgIAlpZiAod2lsZGNhcmQuYm91
bmRLaW5kICE9IFdpbGRjYXJkLlVOQk9VTkQpIHsKKwkJICAgICAgICAJCXZpc2l0KHZpc2l0b3Is
IHdpbGRjYXJkLmJvdW5kKTsKKwkJICAgICAgICAJCXZpc2l0KHZpc2l0b3IsIHdpbGRjYXJkLm90
aGVyQm91bmRzKTsKKwkJICAgICAgICAJfQorCQkgICAgICAgIH0KKwkJCQlicmVhazsKKwkJCQor
CQkJY2FzZSBCaW5kaW5nLkJBU0VfVFlQRToKKwkJCQl2aXNpdG9yLnZpc2l0KChCYXNlVHlwZUJp
bmRpbmcpIHR5cGUpOworCQkJCWJyZWFrOworCQkJCisJCQljYXNlIEJpbmRpbmcuUkFXX1RZUEU6
CisJCQkJdmlzaXRvci52aXNpdCgoUmF3VHlwZUJpbmRpbmcpIHR5cGUpOworCQkJCWJyZWFrOwor
CQkJCQorCQkJY2FzZSBCaW5kaW5nLlRZUEU6CisJCQljYXNlIEJpbmRpbmcuR0VORVJJQ19UWVBF
OgorCQkJCVJlZmVyZW5jZUJpbmRpbmcgcmVmZXJlbmNlQmluZGluZyA9IChSZWZlcmVuY2VCaW5k
aW5nKSB0eXBlOworCQkJCWlmICh2aXNpdG9yLnZpc2l0KHJlZmVyZW5jZUJpbmRpbmcpKSB7CisJ
CQkJCXZpc2l0KHZpc2l0b3IsIHJlZmVyZW5jZUJpbmRpbmcuZW5jbG9zaW5nVHlwZSgpKTsKKwkJ
CQkJdmlzaXQodmlzaXRvciwgcmVmZXJlbmNlQmluZGluZy50eXBlVmFyaWFibGVzKCkpOworCQkJ
CX0KKwkJCQlicmVhazsKKwkJCQorCQkJY2FzZSBCaW5kaW5nLklOVEVSU0VDVElPTl9DQVNUX1RZ
UEU6CisJCQkJSW50ZXJzZWN0aW9uQ2FzdFR5cGVCaW5kaW5nIGludGVyc2VjdGlvbkNhc3RUeXBl
QmluZGluZyA9IChJbnRlcnNlY3Rpb25DYXN0VHlwZUJpbmRpbmcpIHR5cGU7CisJCQkJaWYgKHZp
c2l0b3IudmlzaXQoaW50ZXJzZWN0aW9uQ2FzdFR5cGVCaW5kaW5nKSkKKwkJCQkJdmlzaXQodmlz
aXRvciwgaW50ZXJzZWN0aW9uQ2FzdFR5cGVCaW5kaW5nLmludGVyc2VjdGluZ1R5cGVzKTsKKwkJ
CQlicmVhazsKKwkJCQkKKwkJCWNhc2UgQmluZGluZy5UWVBFX1VTRToKKwkJCQl2aXNpdG9yLnZp
c2l0KChUeXBlVXNlQmluZGluZykgdHlwZSk7CisJCQkJYnJlYWs7CisJCQkJCisJCQlkZWZhdWx0
OgorCQkJCXRocm93IG5ldyBJbnRlcm5hbEVycm9yKCJVbmV4cGVjdGVkIGJpbmRpbmcgdHlwZSIp
OyAvLyROT04tTkxTLTEkCisJCX0KKwl9CisKKwlwdWJsaWMgc3RhdGljIHZvaWQgdmlzaXQoVHlw
ZUJpbmRpbmdWaXNpdG9yIHZpc2l0b3IsIFR5cGVCaW5kaW5nW10gdHlwZXMpIHsKKwkJZm9yIChp
bnQgaSA9IDAsIGxlbmd0aCA9IHR5cGVzID09IG51bGwgPyAwIDogdHlwZXMubGVuZ3RoOyBpIDwg
bGVuZ3RoOyBpKyspIHsKKwkgICAgICAgIHZpc2l0KHZpc2l0b3IsIHR5cGVzW2ldKTsKKwkgICAg
fQorCX0KK30KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlCmRpZmYgLS1naXQgYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
cHJvYmxlbS9Qcm9ibGVtUmVwb3J0ZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL1Byb2JsZW1SZXBv
cnRlci5qYXZhCmluZGV4IDY5NDZlNTYuLjU5NDE4N2MgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9i
bGVtL1Byb2JsZW1SZXBvcnRlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL1Byb2JsZW1SZXBv
cnRlci5qYXZhCkBAIC05MTE2LDQgKzkxMTYsMTMgQEAKIAkJbG9jYWwuc291cmNlU3RhcnQsCiAJ
CWxvY2FsLnNvdXJjZUVuZCk7CiB9CisKK3B1YmxpYyB2b2lkIGRlc2NyaXB0b3JIYXNJbnZpc2li
bGVUeXBlKEZ1bmN0aW9uYWxFeHByZXNzaW9uIGV4cHJlc3Npb24sIFJlZmVyZW5jZUJpbmRpbmcg
cmVmZXJlbmNlQmluZGluZykgeworCXRoaXMuaGFuZGxlKAorCQlJUHJvYmxlbS5MYW1iZGFEZXNj
cmlwdG9yTWVudGlvbnNVbm1lbnRpb25hYmxlLAorCQluZXcgU3RyaW5nW10geyBuZXcgU3RyaW5n
KHJlZmVyZW5jZUJpbmRpbmcucmVhZGFibGVOYW1lKCkpIH0sCisJCW5ldyBTdHJpbmdbXSB7IG5l
dyBTdHJpbmcocmVmZXJlbmNlQmluZGluZy5zaG9ydFJlYWRhYmxlTmFtZSgpKSB9LAorCQlleHBy
ZXNzaW9uLnNvdXJjZVN0YXJ0LAorCQlleHByZXNzaW9uLnNvdXJjZUVuZCk7Cit9CiB9CmRpZmYg
LS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9tZXNzYWdlcy5wcm9wZXJ0aWVzIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2Js
ZW0vbWVzc2FnZXMucHJvcGVydGllcwppbmRleCA0NmEwOWU5Li41NTk4OGQyIDEwMDY0NAotLS0g
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvcHJvYmxlbS9tZXNzYWdlcy5wcm9wZXJ0aWVzCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVt
L21lc3NhZ2VzLnByb3BlcnRpZXMKQEAgLTEwNCw3ICsxMDQsNyBAQAogOTYgPSBUaGUgc2VyaWFs
aXphYmxlIGNsYXNzIHswfSBkb2VzIG5vdCBkZWNsYXJlIGEgc3RhdGljIGZpbmFsIHNlcmlhbFZl
cnNpb25VSUQgZmllbGQgb2YgdHlwZSBsb25nCiA5NyA9IExhbWJkYSBleHByZXNzaW9uJ3MgcGFy
YW1ldGVyIHswfSBjYW5ub3QgcmVkZWNsYXJlIGFub3RoZXIgbG9jYWwgdmFyaWFibGUgZGVmaW5l
ZCBpbiBhbiBlbmNsb3Npbmcgc2NvcGUuIAogOTggPSBMYW1iZGEgZXhwcmVzc2lvbidzIGxvY2Fs
IHZhcmlhYmxlIHswfSBjYW5ub3QgcmVkZWNsYXJlIGFub3RoZXIgbG9jYWwgdmFyaWFibGUgZGVm
aW5lZCBpbiBhbiBlbmNsb3Npbmcgc2NvcGUuIAotCis5OSA9IFRoZSB0eXBlIHswfSBmcm9tIHRo
ZSBkZXNjcmlwdG9yIGNvbXB1dGVkIGZvciB0aGUgdGFyZ2V0IGNvbnRleHQgaXMgbm90IHZpc2li
bGUgaGVyZS4gIAogMTAwID0gVGhlIG1ldGhvZCB7MX0oezJ9KSBpcyB1bmRlZmluZWQgZm9yIHRo
ZSB0eXBlIHswfQogMTAxID0gVGhlIG1ldGhvZCB7MX0oezJ9KSBmcm9tIHRoZSB0eXBlIHswfSBp
cyBub3QgdmlzaWJsZQogMTAyID0gVGhlIG1ldGhvZCB7MX0oezJ9KSBpcyBhbWJpZ3VvdXMgZm9y
IHRoZSB0eXBlIHswfQ==
</data>

          </attachment>
      

    </bug>

</bugzilla>