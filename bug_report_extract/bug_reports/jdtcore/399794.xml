<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>399794</bug_id>
          
          <creation_ts>2013-02-02 23:28:00 -0500</creation_ts>
          <short_desc>[1.8][dom ast] Add a new node type for the compiler node ReferenceExpression</short_desc>
          <delta_ts>2013-06-19 00:31:10 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>399790</blocked>
    
    <blocked>407131</blocked>
    
    <blocked>410295</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Manoj Palat Away Until May 11 2015">manpalat</assigned_to>
          <cc>daniel.moos</cc>
    
    <cc>jarthana</cc>
    
    <cc>markus_keller</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="56807"
          type_id="1"
          status="?"
          setter="manpalat"
          requestee="jarthana"
    />
    <flag name="review"
          id="56808"
          type_id="1"
          status="+"
          setter="markus_keller"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2211417</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-02-02 23:28:04 -0500</bug_when>
    <thetext>BETA_JAVA8:

We need a DOM/AST node type that corresponds to the compiler AST node
ReferenceExpression. The interesting properties are Name/Type/Primary,
Method name, whether constructor reference or not.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2224275</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-02-28 21:10:02 -0500</bug_when>
    <thetext>Manoj, please follow up, TIA.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2228579</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-03-10 05:13:55 -0400</bug_when>
    <thetext>(In reply to comment #0)
&gt; BETA_JAVA8:
&gt; 
&gt; We need a DOM/AST node type that corresponds to the compiler AST node
&gt; ReferenceExpression. The interesting properties are Name/Type/Primary,
&gt; Method name, whether constructor reference or not.

There have been some changes on the compiler side, we now internally
represent the different forms of LHS of :: using a single abstraction
Expression. On the compiler AST side, TypeReference is an Expression,
so is SuperReference and narurally primaries are too.

Not so on the DOM side. So our options are to create multiple node types
or to represent LHS as ASTNode. I would prefer the latter with clear
documentation and throws of exceptions on constraint violations.

Markus, what would you prefer from a client&apos;s side ? TIA.

The fields from the compiler AST that would be of interest are:

        public Expression lhs;
	public TypeReference [] typeArguments;
	public char [] selector;

See that selector is set to &quot;&lt;init&gt;&quot; for constructor references. This
is fine for the compiler AST, but may need some cleaner approach for
DOM/AST.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2238214</commentid>
    <comment_count>3</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-04-01 02:14:56 -0400</bug_when>
    <thetext>Markus: I am proceeding with the LHS being ASTNode as discussed in comment 2. Let me know if you have any thoughts.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2239441</commentid>
    <comment_count>4</comment_count>
      <attachid>229309</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-04-04 03:16:58 -0400</bug_when>
    <thetext>Created attachment 229309
Proposed Patch - WIP

This a function patch in WIP stage. Code cleanup, throwing unsupported exceptions, test cases etc pending in general.

Markus, Srikanth: Any comments regarding the node structure in general? 

Specifically, the case of new as in lhs :: new is represented as Name with the typeBinding as void (since this would point to the constructor - see method binding of the same node). This I believe is not fully correct as this is new and would be a ClassInstanceCreation. However, representing new as a classInstanceCreation may be an overkill. So one option is to create another node, NewReference (extends Expression), and have the typeBinding of NewReference point to the class Type.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2239442</commentid>
    <comment_count>5</comment_count>
      <attachid>229310</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-04-04 03:19:02 -0400</bug_when>
    <thetext>Created attachment 229310
Proposed Patch - WIP - Naive for ASTViewer

This patch can be applied to ui for viewing the ReferenceExpression
(This patch is not intended to be committed - just for use for debug/viewing)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2239630</commentid>
    <comment_count>6</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-04-04 10:36:11 -0400</bug_when>
    <thetext>- The nodes should be called MethodReference and SuperMethodReference (name from the grammar; same pattern as in [Super]MethodInvocation).

- The term &quot;selector&quot; is not used in the DOM AST. Use &quot;Identifier&quot; and &quot;name&quot;, like in MethodInvocation.

- All code and Javadoc that can be copied or adapted from [Super]MethodInvocation.java should be the same as in the existing class. Compare the source files and remove all unnecessary differences.

- We generally don&apos;t use abbreviations in API names. Use &quot;expression&quot;, not &quot;lhs&quot;.

- For the last two cases in the grammar (with the &apos;new&apos; token), we need a separate AST node type. ClassInstanceCreation can&apos;t be used, since it has a mandatory type and an arguments list. Candidates for the new node name are 
NewReference or CreationReference. I prefer CreationReference, since it uses the same terminology as the existing nodes that contain the &apos;new&apos; token.

- We should also split up MethodReference into:
a) MethodReference with property &quot;expression&quot; of type Expression
b) UnboundMethodReference with property &quot;type&quot; of type Type

These cases are sufficiently different that they deserve separate AST nodes. The name &quot;UnboundMethodReference&quot; tells that in contrast to [Super]MethodReference, the method reference does _not_ bind a target expression (aka &quot;receiver&quot;). I&apos;m not completely happy with this node name, so if you have a better suggestion, please speak up.
Alternative: &quot;ExpressionMethodReference&quot; for (a) and &quot;MethodReference&quot; for (b).
(b) could also be called &quot;TypeMethodReference&quot;, but I find TypeMethod confusing.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2247883</commentid>
    <comment_count>7</comment_count>
      <attachid>230074</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-04-24 09:41:19 -0400</bug_when>
    <thetext>Created attachment 230074
Proposed Patch

Note: 
0)As per the discussions, ReferenceExpression would be represented in four formats - CreationReference, ExpressionMethodReference, SuperMethodReference and TypeMethodReference.

1) There is a single space additional in the source range for new (CreationReference). The issue appears due to an additional value in ReferenceExpression.sourceEnd and hence will be addressed separately from this bug.

2)ASTConverter functions for ReferenceExpression can be implemeneted via polymorphic functions similar to convert, but the decision to stick to the if statements due to a)style of &quot;code&quot; around and b)unused parameters would be around for different types of ReferenceExpression.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2260716</commentid>
    <comment_count>8</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-05-22 05:09:41 -0400</bug_when>
    <thetext>(In reply to comment #7)
&gt; Created attachment 230074 [details]
&gt; Proposed Patch

Comments on the patch:

1. Some more description on the new AST node would be helpful, perhaps some references from the Language Spec and elaboration on what the node represents etc. would help anyone who uses the API. This applies all new nodes.

2. NaiveASTFlattener - Looks like the code processing the type arguments can be extracted to separate method to avoid some code duplication.

3. ASTConverter#retrieveInitAndSetPositions - the -1 and the subsequent +1 can be avoided.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2260723</commentid>
    <comment_count>9</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-05-22 05:33:31 -0400</bug_when>
    <thetext>(In reply to comment #8)
&gt; Comments on the patch:
&gt; 
Jay: Thanks for the review comments.

Markus: Could you please review so that I can post a patch incorporating both of your comments together.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2269446</commentid>
    <comment_count>10</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-06-06 14:21:00 -0400</bug_when>
    <thetext>The general node structure looks good and is in line with other AST node types. It&apos;s unfortunate that we need 4 new nodes, but having nodes of type ASTNode is worse.

The new node classes need the usual polish:
- compare with a similar node type and remove all unnecessary differences
  - e.g. getNodeType0() and subtreeMatch0(..) should be final

- add &quot;(added in JLS4 API)&quot; to first sentence

- Javadoc of SuperMethodReference#typeArguments: bad formatting; sentence that doesn&apos;t start with capital letter; wrong &quot;(see constructor)&quot;

- TypeMethodReference#TYPE_PROPERTY:
  - Javadoc is wrong
  - no cycle risk here
- TypeMethodReference#setType(Type)
  - no &quot;or clears&quot;
  - @param: lowercase &quot;type&quot;

- ExpressionMethodReference#setExpression(Expression)
  - no &quot;or clears&quot;

- CreationReference
  - &apos;expression&apos; cannot be null. Fix field initialization and field/getter/setter Javadocs. Should be lazily initialized, like ClassInstanceCreation#type.

- ASTMatcher#match(TypeMethodReference, Object) has name and typeArguments swapped

- NaiveASTFlattener: Do we need all the spaces in the string literals around &quot;new&quot; and &quot;::&quot;? I think these can all be removed.

- Javadoc of ASTConverter#retrieveInitAndSetPositions(..): 1-3 problems per line

- ASTConverter#convert(ReferenceExpression):
  - name.toString() is for debugging purposes only. Use name.getIdentifier(). There&apos;s a second occurrence of name.toString() that should also be fixed.
  - remove tabs at end of lines


(In reply to comment #8)
&gt; 1. Some more description on the new AST node would be helpful, perhaps some
&gt; references from the Language Spec and elaboration on what the node
&gt; represents etc. would help anyone who uses the API. This applies all new
&gt; nodes.

At this point, there&apos;s no spec to refer to. References to the JSR would soon be out of date. IMO, the grammar is good enough for now. All I&apos;d add is @see references to the other method reference nodes.

We can add JLS references once a stable JLS8 preview is available (for all nodes).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2269451</commentid>
    <comment_count>11</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-06-06 14:23:40 -0400</bug_when>
    <thetext>When I parse this class as AST.JLS4 and then try to resolve the type binding of the malformed NullLiteral (shouldn&apos;t that also be RECOVERED?), then I get the CCE below.

package jsr335;
import java.util.ArrayList;
public class MethodReferenceBug {
    {
        System.out.println(&quot;&quot;.equals(ArrayList::new ));
    }
}

java.lang.ClassCastException: org.eclipse.jdt.internal.compiler.ast.ReferenceExpression cannot be cast to org.eclipse.jdt.internal.compiler.ast.Literal
	at org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveExpressionType(DefaultBindingResolver.java:739)
	at org.eclipse.jdt.core.dom.Expression.resolveTypeBinding(Expression.java:117)
	at org.eclipse.jdt.internal.ui.text.correction.QuickAssistProcessor.getInvertEqualsProposal(QuickAssistProcessor.java:2093)
	at org.eclipse.jdt.internal.ui.text.correction.QuickAssistProcessor.getAssists(QuickAssistProcessor.java:249)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2269677</commentid>
    <comment_count>12</comment_count>
      <attachid>232079</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-06-07 05:01:40 -0400</bug_when>
    <thetext>Created attachment 232079
Proposed Patch

Markus: Have reworked to incorporate the comments (including Jay&apos;s). Planning to release it by Monday in case you have no further comments.

Jay: Please take a quick look at the reworked patch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2270015</commentid>
    <comment_count>13</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-06-07 13:27:10 -0400</bug_when>
    <thetext>(In reply to comment #10)
&gt; - add &quot;(added in JLS4 API)&quot; to first sentence

I really meant it like that. It should look the same as all other new node types. Apart from the usual consistency argument, the goal is also that this shows up on the package summary page:
http://help.eclipse.org/juno/topic/org.eclipse.jdt.doc.isv/reference/api/org/eclipse/jdt/core/dom/package-summary.html


&gt; All I&apos;d add is @see references to the other method reference nodes.

Looking at the 4 new nodes again, I realized that these should have a common superclass MethodReference, which should:
- declare the &quot;typeArguments&quot; property, and the typeArguments() and getTypeArgumentsProperty() methods
- declare the resolveMethodBinding() method
- have @see tags that point to all 4 subclasses

See e.g. VariableDeclaration and its subclasses for how to properly implement such an abstract superclass.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2270339</commentid>
    <comment_count>14</comment_count>
      <attachid>232151</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-06-10 02:10:10 -0400</bug_when>
    <thetext>Created attachment 232151
Proposed Patch

Markus:
Reworked as per comment #13
 - Added a super class MethodReference with
   - typeArguments factory property method.
   - just one avatar of resolveMethod()
 - Formatting modifications.

Please let me know if you have further comments on the above. Planning to commit this version if there are no further comments.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2270345</commentid>
    <comment_count>15</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-06-10 02:28:18 -0400</bug_when>
    <thetext>I have no comments other than what I and Markus already mentioned. +1 if they have been taken care of.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2270709</commentid>
    <comment_count>16</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-06-10 14:11:20 -0400</bug_when>
    <thetext>Comment 11 was a real issue with the same cause as bug 403444. Fixed by extracting method ASTConverter#createFakeNullLiteral(FunctionalExpression) and adding a warning about this problem there.

Javadocs still didn&apos;t use proper English grammar (punctuation, capitalization):

- MethodReference: Javadoc should start with:
* Abstract base class of all AST node types that represent a method reference
* expression (added in JLS8 API).

The &quot; (added in JLS8 API)&quot; should be at the end of the first sentence. I also made the mistake to write JLS4 instead of JLS8.

- MethodReference#typeArguments: The full stop should be at the end of the sentence.
- MethodReference#internalTypeArgumentsFactory(..): Javadoc: *element* type
- MethodReference#internalTypeArguments2Property(): Remove &quot;2&quot; in name

- BindingResolver#resolveMethod(MethodReference): contains 3 double-spaces in front of &quot;method reference&quot;

Fixed these problems and released as http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=80351fb8a54757084b1b27c49cb8b0584bf78834

Manoj, please review again.


(In reply to comment #7)
&gt; 1) There is a single space additional in the source range for new
&gt; (CreationReference). The issue appears due to an additional value in
&gt; ReferenceExpression.sourceEnd and hence will be addressed separately from
&gt; this bug.

Please open a new bug for this or add a reference to an existing bug.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2270717</commentid>
    <comment_count>17</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-06-10 14:26:40 -0400</bug_when>
    <thetext>(In reply to comment #16)
&gt; Comment 11 was a real issue with the same cause as bug 403444. Fixed by
&gt; extracting method ASTConverter#createFakeNullLiteral(FunctionalExpression)
&gt; and adding a warning about this problem there.

 I believe Srikanth is looking into this bug 410114

&gt; The &quot; (added in JLS8 API)&quot; should be at the end of the first sentence. I
&gt; also made the mistake to write JLS4 instead of JLS8.

I should have caught/thought...


&gt; - BindingResolver#resolveMethod(MethodReference): contains 3 double-spaces
&gt; in front of &quot;method reference&quot;
&gt; 
&gt; Fixed these problems and released as
&gt; http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/
&gt; ?id=80351fb8a54757084b1b27c49cb8b0584bf78834
&gt; 
&gt; Manoj, please review again.

Thanks for the quick tat and the commit. Will review again.
&gt; 
&gt; 
&gt; (In reply to comment #7)
&gt; &gt; 1) There is a single space additional in the source range for new
&gt; &gt; (CreationReference). The issue appears due to an additional value in
&gt; &gt; ReferenceExpression.sourceEnd and hence will be addressed separately from
&gt; &gt; this bug.
&gt; 
&gt; Please open a new bug for this or add a reference to an existing bug.
This is referenced in bug 384667#comment 6</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2271717</commentid>
    <comment_count>18</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-06-12 06:01:26 -0400</bug_when>
    <thetext>*** Bug 410033 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2273320</commentid>
    <comment_count>19</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-06-17 09:54:55 -0400</bug_when>
    <thetext>ExpressionMethodReference#expression and TypeMethodReference#type were not properly initialized.

The AST#new*() APIs typically don&apos;t take arguments. I&apos;ve removed the arguments for the newly-added methods.

The structure of CreationExpression was wrong. The node in front of the &quot;::&quot; must be a Type, not an Expression. In ASTConverter#convert(ReferenceExpression), I also removed the 

    if (!name.getIdentifier().equals(&quot;&lt;init&gt;&quot;)) { //$NON-NLS-1$
        NullLiteral nullLiteral = new NullLiteral(this.ast);
        ...

, since I didn&apos;t find a scenario where this was used. If it ever needs to come back, then it should use the createFakeNullLiteral() method (and adhere to its Javadoc).

Fixed along with a few Javadoc and test fixes:
http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=f9b5a54e0afa9af686e707bcc0c484de0728c860</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2274213</commentid>
    <comment_count>20</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-06-19 00:31:10 -0400</bug_when>
    <thetext>(In reply to comment #19)

&gt; The AST#new*() APIs typically don&apos;t take arguments. I&apos;ve removed the
&gt; arguments for the newly-added methods.
&gt; 
Some of the new APIs take arguments - Ref: newQualifiedType(Type,name). I followed the above convention with the arguments to ensure that the nodes will have valid values once created.  Is it better (Maybe from the client side perspective) to have these available without arguments during creation?</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>229309</attachid>
            <date>2013-04-04 03:16:00 -0400</date>
            <delta_ts>2013-04-24 09:41:19 -0400</delta_ts>
            <desc>Proposed Patch - WIP</desc>
            <filename>399794--core--wip.patch</filename>
            <type>text/plain</type>
            <size>46246</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
ZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZhCmluZGV4IDE0MGI1NmIuLmM5NjVkMTIgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Rv
bS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YQpAQCAtNTEsNyArNTEsNyBAQAogCXN0YXRpYyB7CiAv
LwkJVEVTVFNfTlVNQkVSUyA9IG5ldyBpbnRbXSB7IDE5IH07CiAvLwkJVEVTVFNfUkFOR0UgPSBu
ZXcgaW50W10geyAxLCAtMSB9OwotLy8JCVRFU1RTX05BTUVTID0gbmV3IFN0cmluZ1tdIHsidGVz
dDAwMDEifTsKKwkJVEVTVFNfTkFNRVMgPSBuZXcgU3RyaW5nW10geyJ0ZXN0Mzk5Nzk0In07CiAJ
fQogCXB1YmxpYyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsKIAkJcmV0dXJuIGJ1aWxkTW9kZWxUZXN0
U3VpdGUoQVNUQ29udmVydGVyMThUZXN0LmNsYXNzKTsKQEAgLTE2NjIsNiArMTY2Miw1OSBAQAog
CX0KIAogCS8qKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNn
aT9pZD0zOTk3OTQKKwkgKiBSZWZlcmVuY2VFeHByZXNzaW9uIFRlc3RzCisJICogCisJICogQHRo
cm93cyBKYXZhTW9kZWxFeGNlcHRpb24KKwkgKi8KKwlwdWJsaWMgdm9pZCB0ZXN0Mzk5Nzk0KCkg
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3Jr
aW5nQ29weSgiL0NvbnZlcnRlcjE4L3NyYy90ZXN0Mzk5Nzk0L1guamF2YSIsCisJCQkJdHJ1ZS8q
IHJlc29sdmUgKi8pOworCQlTdHJpbmcgY29udGVudHMgPSAicGFja2FnZSB0ZXN0Mzk5Nzk0OyIg
KworCQkJCSJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uKjtcbiAiICsKKwkJCQkiaW50ZXJm
YWNlIEkge1xuIiArCisJCQkJIiAgICBPYmplY3QgY29weShpbnQgW10gaWEpO1xuIiArCisJCQkJ
In1cbiIgKworCQkJCSJpbnRlcmZhY2UgSiB7XG4iICsKKwkJCQkiCXZvaWQgZm9vKGludCB4KTtc
biIgKworCQkJCSJ9XG4iICsKKwkJCQkiY2xhc3MgWFgge1xuIiArCisJCQkJIglwdWJsaWMgIHZv
aWQgZm9vKGludCB4KSB7fVxuIiArCisJCQkJIn1cbiIgKworCQkJCSJwdWJsaWMgY2xhc3MgWCBl
eHRlbmRzIFhYIHtcbiIgKworCQkJCSIgICAgICAgQFN1cHByZXNzV2FybmluZ3MoXCJ1bnVzZWRc
IilcbiIgKworCQkJCSIgICAgICAgcHVibGljICB2b2lkIGJhcihTdHJpbmcgW10gYXJncykge1xu
IiArCisJCQkJIiAgICAgICAgICAgICAgICBJIGkgPSBATWFya2VyIGludCBbXTo6PFN0cmluZz5j
bG9uZTtcbiIgKworCQkJCSIgICAgICAgICAgICAgICAgSiBqID0gWS5ATWFya2VyIFogIDo6IGZv
bztcbiIgKworCQkJCSIgICAgICAgICAgICAgICAgSiBqZGFzaCA9IEBNYXJrZXIgVzxATWFya2Vy
IEludGVnZXI+IDo6IDxTdHJpbmc+IG5ldztcbiIgKworCQkJCSIgICAgICAgICAgICAgICAgWSB5
ID0gbmV3IFkoKTtcbiIgKworCQkJCSIgICAgICAgICAgICAgICAgSiBqaiA9IHkgOjogZm9vO1xu
IiArCisJCQkJIiAgICAgICAgICAgICAgICBKIGp4ID0gc3VwZXIgOjogIGZvbztcbiIgKworCQkJ
CSIgICAgICAgfVxuIiArCisJCQkJIiAgICAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbiAoU3Ry
aW5nIFtdIGFyZ3MpIHt9XG4iICsKKwkJCQkifVxuIiArCisJCQkJIlxuIiArCisJCQkJImNsYXNz
IFkge1xuIiArCisJCQkJIiAgICAgICBzdGF0aWMgY2xhc3MgWiB7XG4iICsKKwkJCQkiICAgICAg
ICAgICAgICAgcHVibGljIHN0YXRpYyB2b2lkIGZvbyhpbnQgeCkge1xuIiArCisJCQkJIiAgICAg
ICAgICAgICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludCh4KTtcbiIgKworCQkJCSIgICAgICAg
ICAgICAgICB9XG4iICsKKwkJCQkiICAgICAgIH1cbiIgKworCQkJCSIgICAgICAgcHVibGljIHZv
aWQgZm9vKGludCB4KSB7XG4iICsKKwkJCQkiICAgICAgICAgICAgICAgU3lzdGVtLm91dC5wcmlu
dCh4KTtcbiIgKworCQkJCSIgICAgICAgfVxuIiArCisJCQkJIn1cbiIgKworCQkJCSJcbiIgKwor
CQkJCSJjbGFzcyBXPFQ+IGV4dGVuZHMgWSB7XG4iICsKKwkJCQkiICAgICAgIHB1YmxpYyBXKFQg
eCkge31cbiIgKworCQkJCSJ9XG4iICsKKwkJCQkiXG4iICsKKwkJCQkiQFRhcmdldCAoRWxlbWVu
dFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJCQkiQGludGVyZmFjZSBNYXJrZXIge30iOworCQkJCisJ
CUNvbXBpbGF0aW9uVW5pdCBjdSA9IChDb21waWxhdGlvblVuaXQpIGJ1aWxkQVNUKGNvbnRlbnRz
LCB0aGlzLndvcmtpbmdDb3B5KTsKKwl9CisJLyoqCiAJICogaHR0cHM6Ly9idWdzLmVjbGlwc2Uu
b3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5OTc5MwogCSAqIAogCSAqIEB0aHJvd3MgSmF2YU1v
ZGVsRXhjZXB0aW9uCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2Rl
bC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVE1hdGNoZXJUZXN0LmphdmEg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvZG9tL0FTVE1hdGNoZXJUZXN0LmphdmEKaW5kZXggZWIwNTlhYS4uNDkzNDkyYSAx
MDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RNYXRjaGVyVGVzdC5qYXZhCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9k
b20vQVNUTWF0Y2hlclRlc3QuamF2YQpAQCAtNTAxLDYgKzUwMSw5IEBACiAJCXB1YmxpYyBib29s
ZWFuIG1hdGNoKFN1cGVyTWV0aG9kSW52b2NhdGlvbiBub2RlLCBPYmplY3Qgb3RoZXIpIHsKIAkJ
CXJldHVybiBzdGFuZGFyZEJvZHkobm9kZSwgb3RoZXIsIHRoaXMuc3VwZXJNYXRjaCA/IHN1cGVy
Lm1hdGNoKG5vZGUsIG90aGVyKSA6IGZhbHNlKTsKIAkJfQorCQlwdWJsaWMgYm9vbGVhbiBtYXRj
aChTdXBlclJlZmVyZW5jZSBub2RlLCBPYmplY3Qgb3RoZXIpIHsKKwkJCXJldHVybiBzdGFuZGFy
ZEJvZHkobm9kZSwgb3RoZXIsIHRoaXMuc3VwZXJNYXRjaCA/IHN1cGVyLm1hdGNoKG5vZGUsIG90
aGVyKSA6IGZhbHNlKTsKKwkJfQogCQlwdWJsaWMgYm9vbGVhbiBtYXRjaChTd2l0Y2hDYXNlIG5v
ZGUsIE9iamVjdCBvdGhlcikgewogCQkJcmV0dXJuIHN0YW5kYXJkQm9keShub2RlLCBvdGhlciwg
dGhpcy5zdXBlck1hdGNoID8gc3VwZXIubWF0Y2gobm9kZSwgb3RoZXIpIDogZmFsc2UpOwogCQl9
CkBAIC01NTksNiArNTYyLDkgQEAKIAkJCXJldHVybiBzdGFuZGFyZEJvZHkobm9kZSwgb3RoZXIs
IHRoaXMuc3VwZXJNYXRjaCA/IHN1cGVyLm1hdGNoKG5vZGUsIG90aGVyKSA6IGZhbHNlKTsKIAkJ
fQogCQlwdWJsaWMgYm9vbGVhbiBtYXRjaChMYW1iZGFFeHByZXNzaW9uIG5vZGUsIE9iamVjdCBv
dGhlcikgeworCQkJcmV0dXJuIHN0YW5kYXJkQm9keShub2RlLCBvdGhlciwgdGhpcy5zdXBlck1h
dGNoID8gc3VwZXIubWF0Y2gobm9kZSwgb3RoZXIpIDogZmFsc2UpOworCQl9CisJCXB1YmxpYyBi
b29sZWFuIG1hdGNoKFJlZmVyZW5jZUV4cHJlc3Npb24gbm9kZSwgT2JqZWN0IG90aGVyKSB7CiAJ
CQlyZXR1cm4gc3RhbmRhcmRCb2R5KG5vZGUsIG90aGVyLCB0aGlzLnN1cGVyTWF0Y2ggPyBzdXBl
ci5tYXRjaChub2RlLCBvdGhlcikgOiBmYWxzZSk7CiAJCX0KIAl9CkBAIC0xMTQyLDYgKzExNDgs
MTEgQEAKIAkJeDEuYXJndW1lbnRzKCkuYWRkKHRoaXMuRTIpOwogCQliYXNpY01hdGNoKHgxKTsK
IAl9CisJcHVibGljIHZvaWQgdGVzdFN1cGVyUmVmZXJlbmNlKCkgeworCQlTdXBlclJlZmVyZW5j
ZSB4MSA9IHRoaXMuYXN0Lm5ld1N1cGVyUmVmZXJlbmNlKCk7CisJCXgxLnNldFF1YWxpZmllcih0
aGlzLk4xKTsKKwkJYmFzaWNNYXRjaCh4MSk7CisJfQogCXB1YmxpYyB2b2lkIHRlc3RTd2l0Y2hD
YXNlKCkgewogCQlTd2l0Y2hDYXNlIHgxID0gdGhpcy5hc3QubmV3U3dpdGNoQ2FzZSgpOwogCQl4
MS5zZXRFeHByZXNzaW9uKHRoaXMuRTEpOwpAQCAtMTYyMiw0ICsxNjMzLDE1IEBACiAJCXgxLnNl
dEJvZHkodGhpcy5FMSk7CiAJCWJhc2ljTWF0Y2goeDEpOwogCX0KKwkKKwkvLyBodHRwczovL2J1
Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Mzk5Nzk0CisJcHVibGljIHZvaWQg
dGVzdFJlZmVyZW5jZUV4cHJlc3Npb25zMSgpIHsKKwkJaWYgKHRoaXMuYXN0LmFwaUxldmVsKCkg
PCBBU1QuSkxTOCkgeworCQkJcmV0dXJuOworCQl9CisJCVJlZmVyZW5jZUV4cHJlc3Npb24geDEg
PSB0aGlzLmFzdC5uZXdSZWZlcmVuY2VFeHByZXNzaW9uKCk7CisJCXgxLnNldExocyh0aGlzLmFz
dC5uZXdQcmltaXRpdmVUeXBlKFByaW1pdGl2ZVR5cGUuSU5UKSk7CisJCXgxLnNldE5hbWUodGhp
cy5hc3QubmV3U2ltcGxlTmFtZSgiY2xvbmUiKSk7CisJCWJhc2ljTWF0Y2goeDEpOworCX0KIH0K
ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUU3RydWN0dXJhbFByb3BlcnR5VGVzdC5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL2RvbS9BU1RTdHJ1Y3R1cmFsUHJvcGVydHlUZXN0LmphdmEKaW5kZXggZTNjMWNiMS4u
NDMzMzY0NyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RTdHJ1Y3R1cmFsUHJvcGVydHlUZXN0
LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RTdHJ1Y3R1cmFsUHJvcGVydHlUZXN0LmphdmEKQEAg
LTM1MCw3ICszNTAsNyBAQAogCQkJCS8vIG9vcHMgLSBndWVzcyB0aGF0J3Mgbm90IHZhbGlkCiAJ
CQl9CiAJCX0KLQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBsYXN0IGtub3duIHR5cGUiLCA4NiwgaGkp
OyAvLyBsYXN0IGtub3duIG9uZQorCQlhc3NlcnRFcXVhbHMoIldyb25nIGxhc3Qga25vd24gdHlw
ZSIsIDg3LCBoaSk7IC8vIGxhc3Qga25vd24gb25lCiAJCWFzc2VydEVxdWFscygiV3JvbmcgbnVt
YmVyIG9mIGRpc3RpbmN0IHR5cGVzIiwgIGhpLCBjbGFzc2VzLnNpemUoKSk7IC8vIGFsbCBjbGFz
c2VzIGFyZSBkaXN0aW5jdAogCX0KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUVmlzaXRv
clRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUVmlzaXRvclRlc3QuamF2YQppbmRleCAwMDcyZWQ4
Li42MWIyZjg1IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFZpc2l0b3JUZXN0LmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2RvbS9BU1RWaXNpdG9yVGVzdC5qYXZhCkBAIC04MzQsNyArODM0LDEzIEBACiAJ
CQlBU1RWaXNpdG9yVGVzdC50aGlzLmIuYXBwZW5kKG5vZGUuZ2V0T3BlcmF0b3IoKS50b1N0cmlu
ZygpKTsKIAkJCUFTVFZpc2l0b3JUZXN0LnRoaXMuYi5hcHBlbmQoImVQUikiKTsgLy8kTk9OLU5M
Uy0xJAogCQl9Ci0KKwkJcHVibGljIGJvb2xlYW4gdmlzaXQoUmVmZXJlbmNlRXhwcmVzc2lvbiBu
b2RlKSB7CisJCQlBU1RWaXNpdG9yVGVzdC50aGlzLmIuYXBwZW5kKCIoZVJFIik7IC8vJE5PTi1O
TFMtMSQKKwkJCXJldHVybiBpc1Zpc2l0aW5nQ2hpbGRyZW4oKTsKKwkJfQorCQlwdWJsaWMgdm9p
ZCBlbmRWaXNpdChSZWZlcmVuY2VFeHByZXNzaW9uIG5vZGUpIHsKKwkJCUFTVFZpc2l0b3JUZXN0
LnRoaXMuYi5hcHBlbmQoImVSRSkiKTsgLy8kTk9OLU5MUy0xJAorCQl9CiAJCXB1YmxpYyBib29s
ZWFuIHZpc2l0KFJldHVyblN0YXRlbWVudCBub2RlKSB7CiAJCQlBU1RWaXNpdG9yVGVzdC50aGlz
LmIuYXBwZW5kKCIoc1JUIik7IC8vJE5PTi1OTFMtMSQKIAkJCXJldHVybiBpc1Zpc2l0aW5nQ2hp
bGRyZW4oKTsKQEAgLTg4Myw2ICs4ODksMTQgQEAKIAkJfQogCQlwdWJsaWMgdm9pZCBlbmRWaXNp
dChTdXBlck1ldGhvZEludm9jYXRpb24gbm9kZSkgewogCQkJQVNUVmlzaXRvclRlc3QudGhpcy5i
LmFwcGVuZCgiZVNNKSIpOyAvLyROT04tTkxTLTEkCisJCX0KKworCQlwdWJsaWMgYm9vbGVhbiB2
aXNpdChTdXBlclJlZmVyZW5jZSBub2RlKSB7CisJCQlBU1RWaXNpdG9yVGVzdC50aGlzLmIuYXBw
ZW5kKCIoZVNSIik7IC8vJE5PTi1OTFMtMSQKKwkJCXJldHVybiBpc1Zpc2l0aW5nQ2hpbGRyZW4o
KTsKKwkJfQorCQlwdWJsaWMgdm9pZCBlbmRWaXNpdChTdXBlclJlZmVyZW5jZSBub2RlKSB7CisJ
CQlBU1RWaXNpdG9yVGVzdC50aGlzLmIuYXBwZW5kKCJlU1IpIik7IC8vJE5PTi1OTFMtMSQKIAkJ
fQogCiAJCXB1YmxpYyBib29sZWFuIHZpc2l0KFN3aXRjaENhc2Ugbm9kZSkgewpAQCAtMTkyMSw2
ICsxOTM1LDE4IEBACiAJCVN0cmluZyByZXN1bHQgPSB0aGlzLmIudG9TdHJpbmcoKTsKIAkJYXNz
ZXJ0VHJ1ZShyZXN1bHQuZXF1YWxzKCJbKGVQUisrIit0aGlzLkUxUysiKytlUFIpXSIpKTsgLy8k
Tk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCiAJfQorCXB1YmxpYyB2b2lkIHRlc3RSZWZlcmVuY2VF
eHByZXNzaW9uKCkgeworCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KQorCQkJ
cmV0dXJuOworCQlSZWZlcmVuY2VFeHByZXNzaW9uIHgxID0gdGhpcy5hc3QubmV3UmVmZXJlbmNl
RXhwcmVzc2lvbigpOworCQl4MS5zZXRMaHModGhpcy5hc3QubmV3UHJpbWl0aXZlVHlwZShQcmlt
aXRpdmVUeXBlLklOVCkpOworCQl4MS5zZXROYW1lKHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoImNs
b25lIikpOworCQlUZXN0VmlzaXRvciB2MSA9IG5ldyBUZXN0VmlzaXRvcigpOworCQl0aGlzLmIu
c2V0TGVuZ3RoKDApOworCQl4MS5hY2NlcHQodjEpOworCQlTdHJpbmcgcmVzdWx0ID0gdGhpcy5i
LnRvU3RyaW5nKCk7CisJCWFzc2VydFRydWUocmVzdWx0LmVxdWFscygiWyhlUkVbKHRQaW50aW50
dFApXVsoblNjbG9uZWNsb25lblMpXWVSRSldIikpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMt
MiQKKwl9CiAJcHVibGljIHZvaWQgdGVzdFJldHVyblN0YXRlbWVudCgpIHsKIAkJUmV0dXJuU3Rh
dGVtZW50IHgxID0gdGhpcy5hc3QubmV3UmV0dXJuU3RhdGVtZW50KCk7CiAJCXgxLnNldEV4cHJl
c3Npb24odGhpcy5FMSk7CkBAIC0xOTg4LDYgKzIwMTQsMTUgQEAKIAkJCWFzc2VydFRydWUocmVz
dWx0LmVxdWFscygiWyhlU00iK3RoaXMuTjFTK3RoaXMuUFQxUyt0aGlzLk4yUyt0aGlzLkUxUyt0
aGlzLkUyUysiZVNNKV0iKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAogCQl9CiAJfQor
CXB1YmxpYyB2b2lkIHRlc3RTdXBlclJlZmVyZW5jZSgpIHsKKwkJU3VwZXJSZWZlcmVuY2UgeDEg
PSB0aGlzLmFzdC5uZXdTdXBlclJlZmVyZW5jZSgpOworCQl4MS5zZXRRdWFsaWZpZXIodGhpcy5O
MSk7CisJCVRlc3RWaXNpdG9yIHYxID0gbmV3IFRlc3RWaXNpdG9yKCk7CisJCXRoaXMuYi5zZXRM
ZW5ndGgoMCk7CisJCXgxLmFjY2VwdCh2MSk7CisJCVN0cmluZyByZXN1bHQgPSB0aGlzLmIudG9T
dHJpbmcoKTsKKwkJYXNzZXJ0VHJ1ZShyZXN1bHQuZXF1YWxzKCJbKGVTUiIrdGhpcy5OMVMrdGhp
cy5OMlMrImVTUildIikpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwl9CiAJcHVibGlj
IHZvaWQgdGVzdFN3aXRjaENhc2UoKSB7CiAJCVN3aXRjaENhc2UgeDEgPSB0aGlzLmFzdC5uZXdT
d2l0Y2hDYXNlKCk7CiAJCXgxLnNldEV4cHJlc3Npb24odGhpcy5FMSk7CmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvYXN0L1JlZmVyZW5jZUV4cHJlc3Npb24uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvUmVmZXJlbmNl
RXhwcmVzc2lvbi5qYXZhCmluZGV4IDQyYWE1NzEuLjgzMzhiNWYgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9hc3QvUmVmZXJlbmNlRXhwcmVzc2lvbi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvUmVmZXJlbmNl
RXhwcmVzc2lvbi5qYXZhCkBAIC01Miw3ICs1Miw3IEBACiAJcHVibGljIGNoYXIgW10gc2VsZWN0
b3I7CiAJCiAJcHJpdmF0ZSBUeXBlQmluZGluZyByZWNlaXZlclR5cGU7Ci0JcHJpdmF0ZSBib29s
ZWFuIGhhdmVSZWNlaXZlcjsKKwlwdWJsaWMgYm9vbGVhbiBoYXZlUmVjZWl2ZXI7CiAJcHVibGlj
IFR5cGVCaW5kaW5nW10gcmVzb2x2ZWRUeXBlQXJndW1lbnRzOwogCXByaXZhdGUgYm9vbGVhbiB0
eXBlQXJndW1lbnRzSGF2ZUVycm9yczsKIAkKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNULmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVC5qYXZhCmluZGV4IDg3YmY0
ZTUuLmUzOTNjODkgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNs
aXBzZS9qZHQvY29yZS9kb20vQVNULmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9t
L29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1QuamF2YQpAQCAtMjA4Myw2ICsyMDgzLDE5IEBA
CiAJfQogCiAJLyoqCisJICogQ3JlYXRlcyBhbiB1bnBhcmVudGVkIHJlZmVyZW5jZSBleHByZXNz
aW9uIG5vZGUgb3duZWQgYnkgdGhpcyBBU1QuCisJICogQnkgZGVmYXVsdCwgdGhlIG5ldyByZWZl
cmVuY2UgZXhwcmVzc2lvbiBoYXMgZW1wdHkgbGhzIGFuZCByaHMuCisJICogCisJICogQHJldHVy
biBhIG5ldyB1bnBhcmVudGVkIHJlZmVyZW5jZSBleHByZXNzaW9uIG5vZGUKKwkgKiBAZXhjZXB0
aW9uIFVuc3VwcG9ydGVkT3BlcmF0aW9uRXhjZXB0aW9uIGlmIHRoaXMgb3BlcmF0aW9uIGlzIHVz
ZWQgaW4gYSBKTFMyLCBKTFMzIG9yIEpMUzQgQVNUCisJICogQHNpbmNlIDMuOQorCSAqLworCXB1
YmxpYyBSZWZlcmVuY2VFeHByZXNzaW9uIG5ld1JlZmVyZW5jZUV4cHJlc3Npb24oKSB7CisJCVJl
ZmVyZW5jZUV4cHJlc3Npb24gcmVzdWx0ID0gbmV3IFJlZmVyZW5jZUV4cHJlc3Npb24odGhpcyk7
CisJCXJldHVybiByZXN1bHQ7CisJfQorCisJLyoqCiAJICogQ3JlYXRlcyBhIG5ldyB1bnBhcmVu
dGVkIHJldHVybiBzdGF0ZW1lbnQgbm9kZSBvd25lZCBieSB0aGlzIEFTVC4KIAkgKiBCeSBkZWZh
dWx0LCB0aGUgcmV0dXJuIHN0YXRlbWVudCBoYXMgbm8gZXhwcmVzc2lvbi4KIAkgKgpAQCAtMjIx
Niw2ICsyMjI5LDE5IEBACiAJfQogCiAJLyoqCisJICogQ3JlYXRlcyBhbmQgcmV0dXJucyBhIG5l
dyB1bnBhcmVudGVkIHN1cGVyIHJlZmVyZW5jZSBub2RlCisJICogb3duZWQgYnkgdGhpcyBBU1Qu
IEJ5IGRlZmF1bHQsIHRoZSBleHByZXNzaW9uIGFuZCBmaWVsZCBhcmUgYm90aAorCSAqIHVuc3Bl
Y2lmaWVkLCBidXQgbGVnYWwsIG5hbWVzLgorCSAqCisJICogQHJldHVybiBhIG5ldyB1bnBhcmVu
dGVkIHN1cGVyIHJlZmVyZW5jZSBub2RlCisJICogQHNpbmNlIDMuOQorCSAqLworCXB1YmxpYyBT
dXBlclJlZmVyZW5jZSBuZXdTdXBlclJlZmVyZW5jZSgpIHsKKwkJU3VwZXJSZWZlcmVuY2UgcmVz
dWx0ID0gbmV3IFN1cGVyUmVmZXJlbmNlKHRoaXMpOworCQlyZXR1cm4gcmVzdWx0OworCX0KKwor
CS8qKgogCSAqIENyZWF0ZXMgYSBuZXcgdW5wYXJlbnRlZCBzd2l0Y2ggY2FzZSBzdGF0ZW1lbnQg
bm9kZSBvd25lZCBieQogCSAqIHRoaXMgQVNULiBCeSBkZWZhdWx0LCB0aGUgZXhwcmVzc2lvbiBp
cyB1bnNwZWNpZmllZCwgYnV0IGxlZ2FsLgogCSAqCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVENvbnZlcnRlci5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252
ZXJ0ZXIuamF2YQppbmRleCBkZjQzOTg3Li4yMjk0MGZjIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVENvbnZlcnRlci5qYXZh
CisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20v
QVNUQ29udmVydGVyLmphdmEKQEAgLTE3MzUsNiArMTczNSw5IEBACiAJCWlmIChleHByZXNzaW9u
IGluc3RhbmNlb2Ygb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5MYW1iZGFF
eHByZXNzaW9uKSB7CiAJCQlyZXR1cm4gY29udmVydCgob3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmFzdC5MYW1iZGFFeHByZXNzaW9uKSBleHByZXNzaW9uKTsKIAkJfQorCQlpZiAo
ZXhwcmVzc2lvbiBpbnN0YW5jZW9mIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5h
c3QuUmVmZXJlbmNlRXhwcmVzc2lvbikgeworCQkJcmV0dXJuIGNvbnZlcnQoKG9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuUmVmZXJlbmNlRXhwcmVzc2lvbikgZXhwcmVzc2lv
bik7CisJCX0KIAkJcmV0dXJuIG51bGw7CiAJfQogCkBAIC0yNTA2LDYgKzI1MDksNzIgQEAKIAkJ
CXJldHVybiBjb252ZXJ0KChvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkZp
ZWxkUmVmZXJlbmNlKSByZWZlcmVuY2UpOwogCQl9CiAJCXJldHVybiBudWxsOyAvLyBjYW5ub3Qg
YmUgcmVhY2hlZAorCX0KKworCXB1YmxpYyBFeHByZXNzaW9uIGNvbnZlcnQob3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5SZWZlcmVuY2VFeHByZXNzaW9uIHJlZmVyZW5jZSkg
eworCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwgPCBBU1QuSkxTOCkgeworCQkJaWYgKHRoaXMucmVm
ZXJlbmNlQ29udGV4dCAhPSBudWxsKSB7CisJCQkJdGhpcy5yZWZlcmVuY2VDb250ZXh0LnNldEZs
YWdzKHRoaXMucmVmZXJlbmNlQ29udGV4dC5nZXRGbGFncygpIHwgQVNUTm9kZS5NQUxGT1JNRUQp
OworCQkJfQorCQkJTnVsbExpdGVyYWwgbnVsbExpdGVyYWwgPSBuZXcgTnVsbExpdGVyYWwodGhp
cy5hc3QpOworCQkJbnVsbExpdGVyYWwuc2V0RmxhZ3MobnVsbExpdGVyYWwuZ2V0RmxhZ3MoKSB8
IEFTVE5vZGUuTUFMRk9STUVEKTsKKwkJCW51bGxMaXRlcmFsLnNldFNvdXJjZVJhbmdlKHJlZmVy
ZW5jZS5zb3VyY2VTdGFydCwgcmVmZXJlbmNlLnNvdXJjZUVuZCAtIHJlZmVyZW5jZS5zb3VyY2VT
dGFydCArIDEpOworCQkJcmV0dXJuIG51bGxMaXRlcmFsOwkJCisJCX0KKwkJZmluYWwgUmVmZXJl
bmNlRXhwcmVzc2lvbiByZWZlcmVuY2VFeHByZXNzaW9uID0gbmV3IFJlZmVyZW5jZUV4cHJlc3Np
b24odGhpcy5hc3QpOworCQlpZiAodGhpcy5yZXNvbHZlQmluZGluZ3MpIHsKKwkJCXJlY29yZE5v
ZGVzKHJlZmVyZW5jZUV4cHJlc3Npb24sIHJlZmVyZW5jZSk7CisJCX0KKwkJaWYgKHJlZmVyZW5j
ZS5saHMgaW5zdGFuY2VvZiBUeXBlUmVmZXJlbmNlKSB7CisJCQlyZWZlcmVuY2VFeHByZXNzaW9u
LnNldExocyhjb252ZXJ0VHlwZSgoVHlwZVJlZmVyZW5jZSlyZWZlcmVuY2UubGhzKSk7CisJCX0g
ZWxzZSBpZiAocmVmZXJlbmNlLmxocyBpbnN0YW5jZW9mIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb21waWxlci5hc3QuUXVhbGlmaWVkU3VwZXJSZWZlcmVuY2UpIHsKKwkJCVN1cGVyUmVmZXJl
bmNlIHN1cGVyUmVmZXJlbmNlID0gbmV3IFN1cGVyUmVmZXJlbmNlKHRoaXMuYXN0KTsKKwkJCWlm
ICh0aGlzLnJlc29sdmVCaW5kaW5ncykgeworCQkJCXJlY29yZE5vZGVzKHN1cGVyUmVmZXJlbmNl
LCByZWZlcmVuY2UubGhzKTsKKwkJCX0KKwkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5hc3QuUXVhbGlmaWVkU3VwZXJSZWZlcmVuY2UgcXVhbGlmaWVkU3VwZXJSZWZlcmVuY2Ug
PSAob3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5RdWFsaWZpZWRTdXBlclJl
ZmVyZW5jZSlyZWZlcmVuY2UubGhzOworCQkJTmFtZSBuYW1lID0gY29udmVydChxdWFsaWZpZWRT
dXBlclJlZmVyZW5jZSk7CisJCQlzdXBlclJlZmVyZW5jZS5zZXRRdWFsaWZpZXIobmFtZSk7CisJ
CQlpZiAodGhpcy5yZXNvbHZlQmluZGluZ3MpIHsKKwkJCQlyZWNvcmROb2RlcyhuYW1lLCBxdWFs
aWZpZWRTdXBlclJlZmVyZW5jZS5xdWFsaWZpY2F0aW9uKTsKKwkJCX0KKwkJCXN1cGVyUmVmZXJl
bmNlLnNldFNvdXJjZVJhbmdlKHJlZmVyZW5jZS5saHMuc291cmNlU3RhcnQsIHJlZmVyZW5jZS5s
aHMuc291cmNlRW5kIC0gcmVmZXJlbmNlLmxocy5zb3VyY2VTdGFydCArIDEpOworCQkJcmVmZXJl
bmNlRXhwcmVzc2lvbi5zZXRMaHMoc3VwZXJSZWZlcmVuY2UpOworCQl9IGVsc2UgaWYgKHJlZmVy
ZW5jZS5saHMgaW5zdGFuY2VvZiBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0
LlN1cGVyUmVmZXJlbmNlKSB7CisJCQlTdXBlclJlZmVyZW5jZSBzdXBlclJlZmVyZW5jZSA9IG5l
dyBTdXBlclJlZmVyZW5jZSh0aGlzLmFzdCk7CisJCQlpZiAodGhpcy5yZXNvbHZlQmluZGluZ3Mp
IHsKKwkJCQlyZWNvcmROb2RlcyhzdXBlclJlZmVyZW5jZSwgcmVmZXJlbmNlLmxocyk7CQkJCQor
CQkJfQorCQkJcmVmZXJlbmNlRXhwcmVzc2lvbi5zZXRMaHMoc3VwZXJSZWZlcmVuY2UpOworCQkJ
c3VwZXJSZWZlcmVuY2Uuc2V0U291cmNlUmFuZ2UocmVmZXJlbmNlLmxocy5zb3VyY2VTdGFydCwg
cmVmZXJlbmNlLmxocy5zb3VyY2VFbmQgLSByZWZlcmVuY2UubGhzLnNvdXJjZVN0YXJ0ICsgMSk7
CisJCX0gZWxzZSB7CisJCQlyZWZlcmVuY2VFeHByZXNzaW9uLnNldExocyhjb252ZXJ0KHJlZmVy
ZW5jZS5saHMpKTsJCQkKKwkJfQorCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
YXN0LlR5cGVSZWZlcmVuY2VbXSBhcmd1bWVudHMgPSByZWZlcmVuY2UudHlwZUFyZ3VtZW50czsK
KwkJaWYgKGFyZ3VtZW50cyAhPSBudWxsKSB7CisJCQlpbnQgYXJndW1lbnRzTGVuZ3RoID0gYXJn
dW1lbnRzLmxlbmd0aDsKKwkJCWZvciAoaW50IGkgPSAwOyBpIDwgYXJndW1lbnRzTGVuZ3RoOyBp
KyspIHsKKwkJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlR5cGVSZWZl
cmVuY2UgYXJndW1lbnQgPSBhcmd1bWVudHNbaV07CisJCQkJcmVmZXJlbmNlRXhwcmVzc2lvbi50
eXBlQXJndW1lbnRzKCkuYWRkKGNvbnZlcnRUeXBlKGFyZ3VtZW50KSk7CisJCQl9CisJCX0KKwkJ
CisJCWludCBzdGFydCA9IGFyZ3VtZW50cyAhPSBudWxsICYmIGFyZ3VtZW50cy5sZW5ndGggPiAw
ID8gYXJndW1lbnRzW2FyZ3VtZW50cy5sZW5ndGggLSAxXS5zb3VyY2VFbmQgKyAxIDogcmVmZXJl
bmNlLmxocy5zb3VyY2VFbmQgKyAxOworCQlmaW5hbCBTaW1wbGVOYW1lIG5hbWUgPSBuZXcgU2lt
cGxlTmFtZSh0aGlzLmFzdCk7CisJCXJldHJpZXZlSWRlbnRpZmllckFuZFNldFBvc2l0aW9ucyhz
dGFydCwgcmVmZXJlbmNlLnNvdXJjZUVuZCwgbmFtZSk7CisJCWlmIChuYW1lLmdldFN0YXJ0UG9z
aXRpb24oKSA8IHN0YXJ0KSB7Ly8gY2hlY2sgZm9yIG5ldyAKKwkJCXJldHJpZXZlSW5pdEFuZFNl
dFBvc2l0aW9ucyhzdGFydCwgcmVmZXJlbmNlLnNvdXJjZUVuZCwgbmFtZSk7CisJCQluYW1lLmlu
dGVybmFsU2V0SWRlbnRpZmllcigibmV3Iik7CisJCX0gZWxzZSB7CisJCQluYW1lLmludGVybmFs
U2V0SWRlbnRpZmllcihuZXcgU3RyaW5nKHJlZmVyZW5jZS5zZWxlY3RvcikpOworCQl9CisJCWlm
ICh0aGlzLnJlc29sdmVCaW5kaW5ncykgeworCQkJcmVjb3JkTm9kZXMobmFtZSwgcmVmZXJlbmNl
KTsKKwkJfQorCQlyZWZlcmVuY2VFeHByZXNzaW9uLnNldE5hbWUobmFtZSk7CQkKKwkJaW50IHNv
dXJjZVN0YXJ0ID0gcmVmZXJlbmNlLnNvdXJjZVN0YXJ0OyAKKwkJcmVmZXJlbmNlRXhwcmVzc2lv
bi5zZXRTb3VyY2VSYW5nZShzb3VyY2VTdGFydCwgcmVmZXJlbmNlLnNvdXJjZUVuZCAtIHNvdXJj
ZVN0YXJ0ICsgMSk7CisJCXJldHVybiByZWZlcmVuY2VFeHByZXNzaW9uOwogCX0KIAogCXB1Ymxp
YyBSZXR1cm5TdGF0ZW1lbnQgY29udmVydChvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIuYXN0LlJldHVyblN0YXRlbWVudCBzdGF0ZW1lbnQpIHsKQEAgLTQ2MTgsNiArNDY4NywyOSBA
QAogCX0KIAogCS8qKgorCSAqIHJldHJpZXZlcyB0aGUgc3RhcnQgYW5kIGFuZCBvZiBuZXcgYW5k
IHNldCB0aGUgcG9zaXRpb25zIG9mIHRoZSBuYW1lCisJICogQHBhcmFtIHN0YXJ0IC0gcG9zaXRp
b24gdG8gc3RhcnQgc2VhcmNoCisJICogQHBhcmFtIGVuZCAtIHBvc2l0aW9uIHRvIGVuZCBzZWFy
Y2gKKwkgKiBAcGFyYW0gbmFtZSAtIG9iamVjdCB3aGVyZSB0aGVzZSBwb3NpdGlvbnMgd2lsbCBi
ZSB1cGRhdGVkLgorCSAqLworCXByb3RlY3RlZCB2b2lkIHJldHJpZXZlSW5pdEFuZFNldFBvc2l0
aW9ucyhpbnQgc3RhcnQsIGludCBlbmQsIE5hbWUgbmFtZSkgeworCQl0aGlzLnNjYW5uZXIucmVz
ZXRUbyhzdGFydCwgZW5kKTsKKwkJaW50IHRva2VuOworCQl0cnkgeworCQkJd2hpbGUoKHRva2Vu
ID0gdGhpcy5zY2FubmVyLmdldE5leHRUb2tlbigpKSAhPSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5h
bWVFT0YpICB7CisJCQkJaWYgKHRva2VuID09IFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZW5ldykg
eworCQkJCQlpbnQgc3RhcnROYW1lID0gdGhpcy5zY2FubmVyLnN0YXJ0UG9zaXRpb247CisJCQkJ
CWludCBlbmROYW1lID0gdGhpcy5zY2FubmVyLmN1cnJlbnRQb3NpdGlvbiAtIDE7CisJCQkJCW5h
bWUuc2V0U291cmNlUmFuZ2Uoc3RhcnROYW1lLCBlbmROYW1lIC0gc3RhcnROYW1lICsgMSk7CisJ
CQkJCXJldHVybjsKKwkJCQl9CisJCQl9CisJCX0gY2F0Y2goSW52YWxpZElucHV0RXhjZXB0aW9u
IGUpIHsKKwkJCS8vIGlnbm9yZQorCQl9CisJfQorCisJLyoqCiAJICogVGhpcyBtZXRob2QgaXMg
dXNlZCB0byByZXRyaWV2ZSBwb3NpdGlvbiBiZWZvcmUgdGhlIG5leHQgY29tbWEgb3Igc2VtaS1j
b2xvbi4KIAkgKiBAcGFyYW0gaW5pdGlhbGl6ZXJFbmQgdGhlIGdpdmVuIGluaXRpYWxpemVyIGVu
ZCBleGNsdXNpdmUKIAkgKiBAcmV0dXJuIGludCB0aGUgcG9zaXRpb24gZm91bmQuCmRpZmYgLS1n
aXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FT
VE1hdGNoZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQv
Y29yZS9kb20vQVNUTWF0Y2hlci5qYXZhCmluZGV4IGViMTNlYzYuLjFlZjQ4MTMgMTAwNjQ0Ci0t
LSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNU
TWF0Y2hlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9q
ZHQvY29yZS9kb20vQVNUTWF0Y2hlci5qYXZhCkBAIC0xNzMwLDYgKzE3MzAsMzEgQEAKIAkgKiBv
dGhlciBvYmplY3QgaXMgYSBub2RlIG9mIHRoZSBzYW1lIHR5cGUgd2l0aCBzdHJ1Y3R1cmFsbHkg
aXNvbW9ycGhpYwogCSAqIGNoaWxkIHN1YnRyZWVzLiBTdWJjbGFzc2VzIG1heSBvdmVycmlkZSB0
aGlzIG1ldGhvZCBhcyBuZWVkZWQuCiAJICogPC9wPgorCSAqIAorCSAqIEBwYXJhbSBub2RlIHRo
ZSBub2RlCisJICogQHBhcmFtIG90aGVyIHRoZSBvdGhlciBvYmplY3QsIG9yIDxjb2RlPm51bGw8
L2NvZGU+CisJICogQHJldHVybiA8Y29kZT50cnVlPC9jb2RlPiBpZiB0aGUgc3VidHJlZSBtYXRj
aGVzLCBvcgorCSAqICAgPGNvZGU+ZmFsc2U8L2NvZGU+IGlmIHRoZXkgZG8gbm90IG1hdGNoIG9y
IHRoZSBvdGhlciBvYmplY3QgaGFzIGEKKwkgKiAgIGRpZmZlcmVudCBub2RlIHR5cGUgb3IgaXMg
PGNvZGU+bnVsbDwvY29kZT4KKwkgKiBAc2luY2UgMy45CisJICovCisJcHVibGljIGJvb2xlYW4g
bWF0Y2goUmVmZXJlbmNlRXhwcmVzc2lvbiBub2RlLCBPYmplY3Qgb3RoZXIpIHsKKwkJaWYgKCEo
b3RoZXIgaW5zdGFuY2VvZiBSZWZlcmVuY2VFeHByZXNzaW9uKSkgeworCQkJcmV0dXJuIGZhbHNl
OworCQl9CisJCVJlZmVyZW5jZUV4cHJlc3Npb24gbyA9IChSZWZlcmVuY2VFeHByZXNzaW9uKSBv
dGhlcjsKKwkJcmV0dXJuCXNhZmVTdWJ0cmVlTWF0Y2gobm9kZS5nZXRMaHMoKSwgby5nZXRMaHMo
KSkKKwkJCQkmJiBzYWZlU3VidHJlZUxpc3RNYXRjaChub2RlLnR5cGVBcmd1bWVudHMoKSwgby50
eXBlQXJndW1lbnRzKCkpCisJCQkJJiYgc2FmZVN1YnRyZWVNYXRjaChub2RlLmdldE5hbWUoKSwg
by5nZXROYW1lKCkpOworCX0KKworCS8qKgorCSAqIFJldHVybnMgd2hldGhlciB0aGUgZ2l2ZW4g
bm9kZSBhbmQgdGhlIG90aGVyIG9iamVjdCBtYXRjaC4KKwkgKiA8cD4KKwkgKiBUaGUgZGVmYXVs
dCBpbXBsZW1lbnRhdGlvbiBwcm92aWRlZCBieSB0aGlzIGNsYXNzIHRlc3RzIHdoZXRoZXIgdGhl
CisJICogb3RoZXIgb2JqZWN0IGlzIGEgbm9kZSBvZiB0aGUgc2FtZSB0eXBlIHdpdGggc3RydWN0
dXJhbGx5IGlzb21vcnBoaWMKKwkgKiBjaGlsZCBzdWJ0cmVlcy4gU3ViY2xhc3NlcyBtYXkgb3Zl
cnJpZGUgdGhpcyBtZXRob2QgYXMgbmVlZGVkLgorCSAqIDwvcD4KIAkgKgogCSAqIEBwYXJhbSBu
b2RlIHRoZSBub2RlCiAJICogQHBhcmFtIG90aGVyIHRoZSBvdGhlciBvYmplY3QsIG9yIDxjb2Rl
Pm51bGw8L2NvZGU+CkBAIC0xOTc0LDYgKzE5OTksMzAgQEAKIAkgKiBAcmV0dXJuIDxjb2RlPnRy
dWU8L2NvZGU+IGlmIHRoZSBzdWJ0cmVlIG1hdGNoZXMsIG9yCiAJICogICA8Y29kZT5mYWxzZTwv
Y29kZT4gaWYgdGhleSBkbyBub3QgbWF0Y2ggb3IgdGhlIG90aGVyIG9iamVjdCBoYXMgYQogCSAq
ICAgZGlmZmVyZW50IG5vZGUgdHlwZSBvciBpcyA8Y29kZT5udWxsPC9jb2RlPgorCSAqICAgCisJ
ICogICBAc2luY2UgMy45CisJICovCisJcHVibGljIGJvb2xlYW4gbWF0Y2goU3VwZXJSZWZlcmVu
Y2Ugbm9kZSwgT2JqZWN0IG90aGVyKSB7CisJCWlmICghKG90aGVyIGluc3RhbmNlb2YgU3VwZXJS
ZWZlcmVuY2UpKSB7CisJCQlyZXR1cm4gZmFsc2U7CisJCX0KKwkJU3VwZXJSZWZlcmVuY2UgbyA9
IChTdXBlclJlZmVyZW5jZSkgb3RoZXI7CisJCXJldHVybiAoc2FmZVN1YnRyZWVNYXRjaChub2Rl
LmdldFF1YWxpZmllcigpLCBvLmdldFF1YWxpZmllcigpKSk7CisJfQorCisJLyoqCisJICogUmV0
dXJucyB3aGV0aGVyIHRoZSBnaXZlbiBub2RlIGFuZCB0aGUgb3RoZXIgb2JqZWN0IG1hdGNoLgor
CSAqIDxwPgorCSAqIFRoZSBkZWZhdWx0IGltcGxlbWVudGF0aW9uIHByb3ZpZGVkIGJ5IHRoaXMg
Y2xhc3MgdGVzdHMgd2hldGhlciB0aGUKKwkgKiBvdGhlciBvYmplY3QgaXMgYSBub2RlIG9mIHRo
ZSBzYW1lIHR5cGUgd2l0aCBzdHJ1Y3R1cmFsbHkgaXNvbW9ycGhpYworCSAqIGNoaWxkIHN1YnRy
ZWVzLiBTdWJjbGFzc2VzIG1heSBvdmVycmlkZSB0aGlzIG1ldGhvZCBhcyBuZWVkZWQuCisJICog
PC9wPgorCSAqCisJICogQHBhcmFtIG5vZGUgdGhlIG5vZGUKKwkgKiBAcGFyYW0gb3RoZXIgdGhl
IG90aGVyIG9iamVjdCwgb3IgPGNvZGU+bnVsbDwvY29kZT4KKwkgKiBAcmV0dXJuIDxjb2RlPnRy
dWU8L2NvZGU+IGlmIHRoZSBzdWJ0cmVlIG1hdGNoZXMsIG9yCisJICogICA8Y29kZT5mYWxzZTwv
Y29kZT4gaWYgdGhleSBkbyBub3QgbWF0Y2ggb3IgdGhlIG90aGVyIG9iamVjdCBoYXMgYQorCSAq
ICAgZGlmZmVyZW50IG5vZGUgdHlwZSBvciBpcyA8Y29kZT5udWxsPC9jb2RlPgogCSAqLwogCXB1
YmxpYyBib29sZWFuIG1hdGNoKFN3aXRjaENhc2Ugbm9kZSwgT2JqZWN0IG90aGVyKSB7CiAJCWlm
ICghKG90aGVyIGluc3RhbmNlb2YgU3dpdGNoQ2FzZSkpIHsKZGlmZiAtLWdpdCBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUTm9kZS5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1ROb2Rl
LmphdmEKaW5kZXggZjdkYzkwYy4uMzZhY2UzYiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1ROb2RlLmphdmEKKysrIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1ROb2RlLmph
dmEKQEAgLTg1MSw2ICs4NTEsMjIgQEAKIAlwdWJsaWMgc3RhdGljIGZpbmFsIGludCBMQU1CREFf
RVhQUkVTU0lPTiA9IDg2OwogCiAJLyoqCisJICogTm9kZSB0eXBlIGNvbnN0YW50IGluZGljYXRp
bmcgYSBub2RlIG9mIHR5cGUKKwkgKiA8Y29kZT5SZWZlcmVuY2VFeHByZXNzaW9uPC9jb2RlPi4K
KwkgKiBAc2VlIFJlZmVyZW5jZUV4cHJlc3Npb24KKwkgKiBAc2luY2UgMy45CisJICovCisJcHVi
bGljIHN0YXRpYyBmaW5hbCBpbnQgUkVGRVJFTkNFX0VYUFJFU1NJT04gPSA4NzsKKworCS8qKgor
CSAqIE5vZGUgdHlwZSBjb25zdGFudCBpbmRpY2F0aW5nIGEgbm9kZSBvZiB0eXBlCisJICogPGNv
ZGU+U3VwZXJSZWZlcmVuY2U8L2NvZGU+LgorCSAqIEBzZWUgU3VwZXJSZWZlcmVuY2UKKwkgKiBA
c2luY2UgMy45CisJICovCisJcHVibGljIHN0YXRpYyBmaW5hbCBpbnQgU1VQRVJfUkVGRVJFTkNF
ID0gODg7CisKKwkvKioKIAkgKiBSZXR1cm5zIHRoZSBub2RlIGNsYXNzIGZvciB0aGUgY29ycmVz
cG9uZGluZyBub2RlIHR5cGUuCiAJICoKIAkgKiBAcGFyYW0gbm9kZVR5cGUgQVNUIG5vZGUgdHlw
ZQpAQCAtOTgyLDYgKzk5OCw4IEBACiAJCQkJcmV0dXJuIFF1YWxpZmllZE5hbWUuY2xhc3M7CiAJ
CQljYXNlIFFVQUxJRklFRF9UWVBFIDoKIAkJCQlyZXR1cm4gUXVhbGlmaWVkVHlwZS5jbGFzczsK
KwkJCWNhc2UgUkVGRVJFTkNFX0VYUFJFU1NJT04gOgorCQkJCXJldHVybiBSZWZlcmVuY2VFeHBy
ZXNzaW9uLmNsYXNzOwogCQkJY2FzZSBSRVRVUk5fU1RBVEVNRU5UIDoKIAkJCQlyZXR1cm4gUmV0
dXJuU3RhdGVtZW50LmNsYXNzOwogCQkJY2FzZSBTSU1QTEVfTkFNRSA6CkBAIC0xMDAwLDYgKzEw
MTgsOCBAQAogCQkJCXJldHVybiBTdXBlckZpZWxkQWNjZXNzLmNsYXNzOwogCQkJY2FzZSBTVVBF
Ul9NRVRIT0RfSU5WT0NBVElPTiA6CiAJCQkJcmV0dXJuIFN1cGVyTWV0aG9kSW52b2NhdGlvbi5j
bGFzczsKKwkJCWNhc2UgU1VQRVJfUkVGRVJFTkNFIDoKKwkJCQlyZXR1cm4gU3VwZXJSZWZlcmVu
Y2UuY2xhc3M7CiAJCQljYXNlIFNXSVRDSF9DQVNFOgogCQkJCXJldHVybiBTd2l0Y2hDYXNlLmNs
YXNzOwogCQkJY2FzZSBTV0lUQ0hfU1RBVEVNRU5UIDoKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUVmlzaXRvci5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RWaXNp
dG9yLmphdmEKaW5kZXggNDQyYzJkMi4uMGUyYTJhNyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RWaXNpdG9yLmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RW
aXNpdG9yLmphdmEKQEAgLTExODYsNiArMTE4NiwyMyBAQAogCSAqIEByZXR1cm4gPGNvZGU+dHJ1
ZTwvY29kZT4gaWYgdGhlIGNoaWxkcmVuIG9mIHRoaXMgbm9kZSBzaG91bGQgYmUKIAkgKiB2aXNp
dGVkLCBhbmQgPGNvZGU+ZmFsc2U8L2NvZGU+IGlmIHRoZSBjaGlsZHJlbiBvZiB0aGlzIG5vZGUg
c2hvdWxkCiAJICogYmUgc2tpcHBlZAorCSAqIEBzaW5jZSAzLjkKKwkgKi8KKwlwdWJsaWMgYm9v
bGVhbiB2aXNpdChSZWZlcmVuY2VFeHByZXNzaW9uIG5vZGUpIHsKKwkJcmV0dXJuIHRydWU7CisJ
fQorCisJLyoqCisJICogVmlzaXRzIHRoZSBnaXZlbiB0eXBlLXNwZWNpZmljIEFTVCBub2RlLgor
CSAqIDxwPgorCSAqIFRoZSBkZWZhdWx0IGltcGxlbWVudGF0aW9uIGRvZXMgbm90aGluZyBhbmQg
cmV0dXJuIHRydWUuCisJICogU3ViY2xhc3NlcyBtYXkgcmVpbXBsZW1lbnQuCisJICogPC9wPgor
CSAqCisJICogQHBhcmFtIG5vZGUgdGhlIG5vZGUgdG8gdmlzaXQKKwkgKiBAcmV0dXJuIDxjb2Rl
PnRydWU8L2NvZGU+IGlmIHRoZSBjaGlsZHJlbiBvZiB0aGlzIG5vZGUgc2hvdWxkIGJlCisJICog
dmlzaXRlZCwgYW5kIDxjb2RlPmZhbHNlPC9jb2RlPiBpZiB0aGUgY2hpbGRyZW4gb2YgdGhpcyBu
b2RlIHNob3VsZAorCSAqIGJlIHNraXBwZWQKIAkgKi8KIAlwdWJsaWMgYm9vbGVhbiB2aXNpdChS
ZXR1cm5TdGF0ZW1lbnQgbm9kZSkgewogCQlyZXR1cm4gdHJ1ZTsKQEAgLTEzMTksNiArMTMzNiwy
MyBAQAogCSAqIGJlIHNraXBwZWQKIAkgKi8KIAlwdWJsaWMgYm9vbGVhbiB2aXNpdChTdXBlck1l
dGhvZEludm9jYXRpb24gbm9kZSkgeworCQlyZXR1cm4gdHJ1ZTsKKwl9CisKKwkvKioKKwkgKiBW
aXNpdHMgdGhlIGdpdmVuIHR5cGUtc3BlY2lmaWMgQVNUIG5vZGUuCisJICogPHA+CisJICogVGhl
IGRlZmF1bHQgaW1wbGVtZW50YXRpb24gZG9lcyBub3RoaW5nIGFuZCByZXR1cm4gdHJ1ZS4KKwkg
KiBTdWJjbGFzc2VzIG1heSByZWltcGxlbWVudC4KKwkgKiA8L3A+CisJICoKKwkgKiBAcGFyYW0g
bm9kZSB0aGUgbm9kZSB0byB2aXNpdAorCSAqIEByZXR1cm4gPGNvZGU+dHJ1ZTwvY29kZT4gaWYg
dGhlIGNoaWxkcmVuIG9mIHRoaXMgbm9kZSBzaG91bGQgYmUKKwkgKiB2aXNpdGVkLCBhbmQgPGNv
ZGU+ZmFsc2U8L2NvZGU+IGlmIHRoZSBjaGlsZHJlbiBvZiB0aGlzIG5vZGUgc2hvdWxkCisJICog
YmUgc2tpcHBlZAorCSAqIEBzaW5jZSAzLjkKKwkgKi8KKwlwdWJsaWMgYm9vbGVhbiB2aXNpdChT
dXBlclJlZmVyZW5jZSBub2RlKSB7CiAJCXJldHVybiB0cnVlOwogCX0KIApAQCAtMjM2MCw2ICsy
Mzk0LDE5IEBACiAJICogPC9wPgogCSAqCiAJICogQHBhcmFtIG5vZGUgdGhlIG5vZGUgdG8gdmlz
aXQKKwkgKiBAc2luY2UgMy45CisJICovCisJcHVibGljIHZvaWQgZW5kVmlzaXQoUmVmZXJlbmNl
RXhwcmVzc2lvbiBub2RlKSB7CisJCS8vIGRlZmF1bHQgaW1wbGVtZW50YXRpb246IGRvIG5vdGhp
bmcKKwl9CisKKwkvKioKKwkgKiBFbmQgb2YgdmlzaXQgdGhlIGdpdmVuIHR5cGUtc3BlY2lmaWMg
QVNUIG5vZGUuCisJICogPHA+CisJICogVGhlIGRlZmF1bHQgaW1wbGVtZW50YXRpb24gZG9lcyBu
b3RoaW5nLiBTdWJjbGFzc2VzIG1heSByZWltcGxlbWVudC4KKwkgKiA8L3A+CisJICoKKwkgKiBA
cGFyYW0gbm9kZSB0aGUgbm9kZSB0byB2aXNpdAogCSAqLwogCXB1YmxpYyB2b2lkIGVuZFZpc2l0
KFJldHVyblN0YXRlbWVudCBub2RlKSB7CiAJCS8vIGRlZmF1bHQgaW1wbGVtZW50YXRpb246IGRv
IG5vdGhpbmcKQEAgLTI0NjksNiArMjUxNiwxOSBAQAogCSAqIDwvcD4KIAkgKgogCSAqIEBwYXJh
bSBub2RlIHRoZSBub2RlIHRvIHZpc2l0CisJICogQHNpbmNlIDMuOQorCSAqLworCXB1YmxpYyB2
b2lkIGVuZFZpc2l0KFN1cGVyUmVmZXJlbmNlIG5vZGUpIHsKKwkJLy8gZGVmYXVsdCBpbXBsZW1l
bnRhdGlvbjogZG8gbm90aGluZworCX0KKworCS8qKgorCSAqIEVuZCBvZiB2aXNpdCB0aGUgZ2l2
ZW4gdHlwZS1zcGVjaWZpYyBBU1Qgbm9kZS4KKwkgKiA8cD4KKwkgKiBUaGUgZGVmYXVsdCBpbXBs
ZW1lbnRhdGlvbiBkb2VzIG5vdGhpbmcuIFN1YmNsYXNzZXMgbWF5IHJlaW1wbGVtZW50LgorCSAq
IDwvcD4KKwkgKgorCSAqIEBwYXJhbSBub2RlIHRoZSBub2RlIHRvIHZpc2l0CiAJICovCiAJcHVi
bGljIHZvaWQgZW5kVmlzaXQoU3dpdGNoQ2FzZSBub2RlKSB7CiAJCS8vIGRlZmF1bHQgaW1wbGVt
ZW50YXRpb246IGRvIG5vdGhpbmcKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Rv
bS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQmluZGluZ1Jlc29sdmVyLmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0JpbmRpbmdSZXNvbHZl
ci5qYXZhCmluZGV4IDcxMjc0YTMuLmMxNWFkMmIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQmluZGluZ1Jlc29sdmVyLmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9C
aW5kaW5nUmVzb2x2ZXIuamF2YQpAQCAtNzQ2LDYgKzc0Niw0OCBAQAogCX0KIAogCS8qKgorCSAq
IFJlc29sdmVzIHRoZSBnaXZlbiBSZWZlcmVuY2UgRXhwcmVzc2lvbiBhbmQgcmV0dXJucyB0aGUg
YmluZGluZyBmb3IgaXQuCisJICogPHA+CisJICogVGhlIGltcGxlbWVudGF0aW9uIG9mIDxjb2Rl
PlJlZmVyZW5jZUV4cHJlc2lvbi5yZXNvbHZlTWV0aG9kQmluZGluZzwvY29kZT4KKwkgKiBmb3J3
YXJkcyB0byB0aGlzIG1ldGhvZC4gSG93IHRoZSBtZXRob2QgcmVzb2x2ZXMgaXMgb2Z0ZW4gYSBm
dW5jdGlvbiBvZgorCSAqIHRoZSBjb250ZXh0IGluIHdoaWNoIHRoZSBtZXRob2QgZGVjbGFyYXRp
b24gbm9kZSBpcyBlbWJlZGRlZCBhcyB3ZWxsIGFzCisJICogdGhlIG1ldGhvZCBkZWNsYXJhdGlv
biBzdWJ0cmVlIGl0c2VsZi4KKwkgKiA8L3A+CisJICogPHA+CisJICogVGhlIGRlZmF1bHQgaW1w
bGVtZW50YXRpb24gb2YgdGhpcyBtZXRob2QgcmV0dXJucyA8Y29kZT5udWxsPC9jb2RlPi4KKwkg
KiBTdWJjbGFzc2VzIG1heSByZS1pbXBsZW1lbnQuCisJICogPC9wPgorCSAqCisJICogQHBhcmFt
IHJlZmVyZW5jZSBSZWZlcmVuY2VFeHByZXNpc29uIG9mIGludGVyZXN0CisJICogQHJldHVybiB0
aGUgYmluZGluZyBmb3IgdGhlIGdpdmVuIHJlZmVyZW5jZSBleHByZXNzaW9uLCBvcgorCSAqICAg
IDxjb2RlPm51bGw8L2NvZGU+IGlmIG5vIGJpbmRpbmcgaXMgYXZhaWxhYmxlCisJICovCisJSU1l
dGhvZEJpbmRpbmcgcmVzb2x2ZU1ldGhvZChSZWZlcmVuY2VFeHByZXNzaW9uIHJlZmVyZW5jZSkg
eworCQlyZXR1cm4gbnVsbDsKKwl9CisKKy8qCSovLyoqCisJICogUmVzb2x2ZXMgdGhlIGdpdmVu
IFN1cGVyIFJlZmVyZW5jZSBhbmQgcmV0dXJucyB0aGUgYmluZGluZyBmb3IgaXQuCisJICogPHA+
CisJICogVGhlIGltcGxlbWVudGF0aW9uIG9mIDxjb2RlPlN1cGVyUmVmZXJlbmNlLnJlc29sdmVC
aW5kaW5nPC9jb2RlPgorCSAqIGZvcndhcmRzIHRvIHRoaXMgbWV0aG9kLiBIb3cgdGhlIG1ldGhv
ZCByZXNvbHZlcyBpcyBvZnRlbiBhIGZ1bmN0aW9uIG9mCisJICogdGhlIGNvbnRleHQgaW4gd2hp
Y2ggdGhlIG1ldGhvZCBkZWNsYXJhdGlvbiBub2RlIGlzIGVtYmVkZGVkIGFzIHdlbGwgYXMKKwkg
KiB0aGUgbWV0aG9kIGRlY2xhcmF0aW9uIHN1YnRyZWUgaXRzZWxmLgorCSAqIDwvcD4KKwkgKiA8
cD4KKwkgKiBUaGUgZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiBvZiB0aGlzIG1ldGhvZCByZXR1cm5z
IDxjb2RlPm51bGw8L2NvZGU+LgorCSAqIFN1YmNsYXNzZXMgbWF5IHJlLWltcGxlbWVudC4KKwkg
KiA8L3A+CisJICoKKwkgKiBAcGFyYW0gcmVmZXJlbmNlIFN1cGVyUmVmZXJlbmNlIG9mIGludGVy
ZXN0CisJICogQHJldHVybiB0aGUgYmluZGluZyBmb3IgdGhlIGdpdmVuIHN1cGVyIHJlZmVyZW5j
ZSAsIG9yCisJICogICAgPGNvZGU+bnVsbDwvY29kZT4gaWYgbm8gYmluZGluZyBpcyBhdmFpbGFi
bGUKKwkgKi8vKgorCUlUeXBlQmluZGluZyByZXNvbHZlVHlwZUJpbmRpbmcoU3VwZXJSZWZlcmVu
Y2UgcmVmZXJlbmNlKSB7CisJCXJldHVybiBudWxsOworCX0KKworKi8JLyoqCiAJICogUmVzb2x2
ZXMgdGhlIGdpdmVuIGFubm90YXRpb24gdHlwZSBkZWNsYXJhdGlvbiBhbmQgcmV0dXJucyB0aGUg
YmluZGluZwogCSAqIGZvciBpdC4KIAkgKiA8cD4KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vRGVmYXVsdEFTVFZpc2l0b3IuamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vRGVm
YXVsdEFTVFZpc2l0b3IuamF2YQppbmRleCA4NzA5Yjg2Li42NTczNTM2IDEwMDY0NAotLS0gYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0RlZmF1bHRB
U1RWaXNpdG9yLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNl
L2pkdC9jb3JlL2RvbS9EZWZhdWx0QVNUVmlzaXRvci5qYXZhCkBAIC0yMDMsNiArMjAzLDkgQEAK
IAlwdWJsaWMgdm9pZCBlbmRWaXNpdChRdWFsaWZpZWRUeXBlIG5vZGUpIHsKIAkJZW5kVmlzaXRO
b2RlKG5vZGUpOwogCX0KKwlwdWJsaWMgdm9pZCBlbmRWaXNpdChSZWZlcmVuY2VFeHByZXNzaW9u
IG5vZGUpIHsKKwkJZW5kVmlzaXROb2RlKG5vZGUpOworCX0KIAlwdWJsaWMgdm9pZCBlbmRWaXNp
dChSZXR1cm5TdGF0ZW1lbnQgbm9kZSkgewogCQllbmRWaXNpdE5vZGUobm9kZSk7CiAJfQpAQCAt
NDcwLDYgKzQ3Myw5IEBACiAJcHVibGljIGJvb2xlYW4gdmlzaXQoUXVhbGlmaWVkVHlwZSBub2Rl
KSB7CiAJCXJldHVybiB2aXNpdE5vZGUobm9kZSk7CiAJfQorCXB1YmxpYyBib29sZWFuIHZpc2l0
KFJlZmVyZW5jZUV4cHJlc3Npb24gbm9kZSkgeworCQlyZXR1cm4gdmlzaXROb2RlKG5vZGUpOwor
CX0KIAlwdWJsaWMgYm9vbGVhbiB2aXNpdChSZXR1cm5TdGF0ZW1lbnQgbm9kZSkgewogCQlyZXR1
cm4gdmlzaXROb2RlKG5vZGUpOwogCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vRGVmYXVsdEJpbmRpbmdSZXNvbHZlci5qYXZh
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9EZWZh
dWx0QmluZGluZ1Jlc29sdmVyLmphdmEKaW5kZXggZGMyYzA1Zi4uODM1ZWU3NSAxMDA2NDQKLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9EZWZh
dWx0QmluZGluZ1Jlc29sdmVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9EZWZhdWx0QmluZGluZ1Jlc29sdmVyLmphdmEKQEAgLTcw
OSw2ICs3MDksOCBAQAogCQkJCWNhc2UgQVNUTm9kZS5JTkZJWF9FWFBSRVNTSU9OIDoKIAkJCQlj
YXNlIEFTVE5vZGUuSU5TVEFOQ0VPRl9FWFBSRVNTSU9OIDoKIAkJCQljYXNlIEFTVE5vZGUuTEFN
QkRBX0VYUFJFU1NJT046CisJCQkJY2FzZSBBU1ROb2RlLlJFRkVSRU5DRV9FWFBSRVNTSU9OOgor
CQkJCWNhc2UgQVNUTm9kZS5TVVBFUl9SRUZFUkVOQ0UgOgogCQkJCWNhc2UgQVNUTm9kZS5GSUVM
RF9BQ0NFU1MgOgogCQkJCWNhc2UgQVNUTm9kZS5TVVBFUl9GSUVMRF9BQ0NFU1MgOgogCQkJCWNh
c2UgQVNUTm9kZS5BUlJBWV9BQ0NFU1MgOgpAQCAtMTE0MCwxMSArMTE0Miw1MSBAQAogCQkJSU1l
dGhvZEJpbmRpbmcgbWV0aG9kID0gZ2V0TWV0aG9kQmluZGluZyhtZW1iZXJWYWx1ZVBhaXIuYmlu
ZGluZyk7CiAJCQlpZiAobWV0aG9kID09IG51bGwpIHJldHVybiBudWxsOwogCQkJcmV0dXJuIG1l
dGhvZC5nZXRSZXR1cm5UeXBlKCk7CisJCX0gZWxzZSBpZiAobm9kZSBpbnN0YW5jZW9mIG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuUmVmZXJlbmNlRXhwcmVzc2lvbikgewor
CQkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5SZWZlcmVuY2VFeHByZXNz
aW9uIHJlZmVyZW5jZUV4cHJlc3Npb24gPSAob3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLmFzdC5SZWZlcmVuY2VFeHByZXNzaW9uKSBub2RlOworCQkJSU1ldGhvZEJpbmRpbmcgbWV0
aG9kID0gZ2V0TWV0aG9kQmluZGluZyhyZWZlcmVuY2VFeHByZXNzaW9uLmJpbmRpbmcpOworCQkJ
aWYgKG1ldGhvZCA9PSBudWxsKSByZXR1cm4gbnVsbDsKKwkJCXJldHVybiBtZXRob2QuZ2V0UmV0
dXJuVHlwZSgpOwogCQl9CiAJCXJldHVybiBudWxsOwogCX0KIAogCS8qCisJICogTWV0aG9kIGRl
Y2xhcmVkIG9uIEJpbmRpbmdSZXNvbHZlci4KKwkgKi8KKwlzeW5jaHJvbml6ZWQgSU1ldGhvZEJp
bmRpbmcgcmVzb2x2ZU1ldGhvZChSZWZlcmVuY2VFeHByZXNzaW9uIHJlZmVyZW5jZSkgeworCQlP
YmplY3Qgb2xkTm9kZSA9IHRoaXMubmV3QXN0VG9PbGRBc3QuZ2V0KHJlZmVyZW5jZSk7CisJCWlm
IChvbGROb2RlIGluc3RhbmNlb2Ygb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFz
dC5SZWZlcmVuY2VFeHByZXNzaW9uKSB7CisJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIuYXN0LlJlZmVyZW5jZUV4cHJlc3Npb24gcmVmZXJlbmNlRXhwcmVzc2lvbiA9IChvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlJlZmVyZW5jZUV4cHJlc3Npb24pIG9s
ZE5vZGU7CisJCQlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nID0gZ2V0TWV0aG9kQmluZGlu
ZyhyZWZlcmVuY2VFeHByZXNzaW9uLmJpbmRpbmcpOworCQkJaWYgKG1ldGhvZEJpbmRpbmcgPT0g
bnVsbCkgeworCQkJCXJldHVybiBudWxsOworCQkJfQorCQkJdGhpcy5iaW5kaW5nc1RvQXN0Tm9k
ZXMucHV0KG1ldGhvZEJpbmRpbmcsIHJlZmVyZW5jZSk7CisJCQlTdHJpbmcga2V5ID0gbWV0aG9k
QmluZGluZy5nZXRLZXkoKTsKKwkJCWlmIChrZXkgIT0gbnVsbCkgeworCQkJCXRoaXMuYmluZGlu
Z1RhYmxlcy5iaW5kaW5nS2V5c1RvQmluZGluZ3MucHV0KGtleSwgbWV0aG9kQmluZGluZyk7CisJ
CQl9CisJCQlyZXR1cm4gbWV0aG9kQmluZGluZzsKKwkJfQorCQlyZXR1cm4gbnVsbDsKKwl9Cisv
KgkKKwkgKiBAc2VlIEJpbmRpbmdSZXNvbHZlciNJVHlwZUJpbmRpbmcoU3VwZXJSZWZlcmVuY2Up
CisJIAorCXN5bmNocm9uaXplZCBJVHlwZUJpbmRpbmcgcmVzb2x2ZVR5cGVCaW5kaW5nKFN1cGVy
UmVmZXJlbmNlIG5vZGUpIHsKKwkJT2JqZWN0IG9sZE5vZGUgPSB0aGlzLm5ld0FzdFRvT2xkQXN0
LmdldChub2RlKTsKKwkJaWYgKG9sZE5vZGUgaW5zdGFuY2VvZiBRdWFsaWZpZWRTdXBlclJlZmVy
ZW5jZSkgeworCQkJUXVhbGlmaWVkU3VwZXJSZWZlcmVuY2UgcXVhbGlmaWVkU3VwZXJSZWZlcmVu
Y2UgPSAoUXVhbGlmaWVkU3VwZXJSZWZlcmVuY2UpIG9sZE5vZGU7CisJCQlyZXR1cm4gdGhpcy5n
ZXRUeXBlQmluZGluZyhxdWFsaWZpZWRTdXBlclJlZmVyZW5jZS5yZXNvbHZlZFR5cGUpOworCQl9
IGVsc2UgaWYgKG9sZE5vZGUgaW5zdGFuY2VvZiBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIuYXN0LlN1cGVyUmVmZXJlbmNlKSB7CisJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuYXN0LlN1cGVyUmVmZXJlbmNlIHN1cGVyUmVmZXJlbmNlID0gKG9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuU3VwZXJSZWZlcmVuY2Upb2xkTm9kZTsKKwkJCXJl
dHVybiB0aGlzLmdldFR5cGVCaW5kaW5nKHN1cGVyUmVmZXJlbmNlLnJlc29sdmVkVHlwZSk7CisJ
CX0KKwkJcmV0dXJuIG51bGw7CisJfQorCisqLwkvKgogCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBC
aW5kaW5nUmVzb2x2ZXIuCiAJICovCiAJc3luY2hyb25pemVkIElCaW5kaW5nIHJlc29sdmVOYW1l
KE5hbWUgbmFtZSkgewpAQCAtMTQwMCw2ICsxNDQyLDkgQEAKIAkJfSBlbHNlIGlmIChub2RlIGlu
c3RhbmNlb2Ygb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5NZW1iZXJWYWx1
ZVBhaXIpIHsKIAkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuTWVtYmVy
VmFsdWVQYWlyIG1lbWJlclZhbHVlUGFpciA9IChvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIuYXN0Lk1lbWJlclZhbHVlUGFpcikgbm9kZTsKIAkJCXJldHVybiBnZXRNZXRob2RCaW5k
aW5nKG1lbWJlclZhbHVlUGFpci5iaW5kaW5nKTsKKwkJfSBlbHNlIGlmIChub2RlIGluc3RhbmNl
b2Ygb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5SZWZlcmVuY2VFeHByZXNz
aW9uKSB7CisJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlJlZmVyZW5j
ZUV4cHJlc3Npb24gcmVmZXJlbmNlRXhwcmVzc2lvbiA9IChvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIuYXN0LlJlZmVyZW5jZUV4cHJlc3Npb24pIG5vZGU7CisJCQlyZXR1cm4gZ2V0
TWV0aG9kQmluZGluZyhyZWZlcmVuY2VFeHByZXNzaW9uLmJpbmRpbmcpOwogCQl9CiAJCXJldHVy
biBudWxsOwogCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNs
aXBzZS9qZHQvY29yZS9kb20vRXhwcmVzc2lvbi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUv
ZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9FeHByZXNzaW9uLmphdmEKaW5kZXggNmZkNzZm
YS4uZjdhZmRhMiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xp
cHNlL2pkdC9jb3JlL2RvbS9FeHByZXNzaW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9FeHByZXNzaW9uLmphdmEKQEAgLTQyLDkg
KzQyLDExIEBACiAgKiAgICB7QGxpbmsgUGFyZW50aGVzaXplZEV4cHJlc3Npb259LAogICogICAg
e0BsaW5rIFBvc3RmaXhFeHByZXNzaW9ufSwKICAqICAgIHtAbGluayBQcmVmaXhFeHByZXNzaW9u
fSwKKyAqICAgIHtAbGluayBSZWZlcmVuY2VFeHByZXNzaW9ufSwKICAqICAgIHtAbGluayBTdHJp
bmdMaXRlcmFsfSwKICAqICAgIHtAbGluayBTdXBlckZpZWxkQWNjZXNzfSwKICAqICAgIHtAbGlu
ayBTdXBlck1ldGhvZEludm9jYXRpb259LAorICogICAge0BsaW5rIFN1cGVyUmVmZXJlbmNlfSwK
ICAqICAgIHtAbGluayBUaGlzRXhwcmVzc2lvbn0sCiAgKiAgICB7QGxpbmsgVHlwZUxpdGVyYWx9
LAogICogICAge0BsaW5rIFZhcmlhYmxlRGVjbGFyYXRpb25FeHByZXNzaW9ufQpkaWZmIC0tZ2l0
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9SZWZl
cmVuY2VFeHByZXNzaW9uLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlw
c2UvamR0L2NvcmUvZG9tL1JlZmVyZW5jZUV4cHJlc3Npb24uamF2YQpuZXcgZmlsZSBtb2RlIDEw
MDY0NAppbmRleCAwMDAwMDAwLi44MjhhZGUwCi0tLSAvZGV2L251bGwKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9SZWZlcmVuY2VFeHByZXNz
aW9uLmphdmEKQEAgLTAsMCArMSwzMDcgQEAKKy8qKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCisgKiBD
b3B5cmlnaHQgKGMpIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBBbGwgcmln
aHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxz
CisgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1
YmxpYyBMaWNlbnNlIHYxLjAKKyAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9u
LCBhbmQgaXMgYXZhaWxhYmxlIGF0CisgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2Vw
bC12MTAuaHRtbAorICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHkt
ZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0
eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZh
bHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0
aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgorICogCisgKiBDb250cmlidXRvcnM6Cisg
KiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCisg
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKi8KK3BhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9t
OworCitpbXBvcnQgamF2YS51dGlsLkFycmF5TGlzdDsKK2ltcG9ydCBqYXZhLnV0aWwuTGlzdDsK
KworLyoqCisgKiBSZWZlcmVuY2VFeHByZXNzaW9uIEFTVCBOb2RlIFR5cGUKKyAqIAorICogPHBy
ZT4KKyAqIFJlZmVyZW5jZUV4cHJlc3Npb246CisgKiAgICAgbGhzIDo6IHR5cGVBcmd1bWVudHMg
c2VsZWN0b3IKKyAqIDwvcHJlPgorICogCisgKiBAc2luY2UgMy45CisgKiBAbm9pbnN0YW50aWF0
ZSBUaGlzIGNsYXNzIGlzIG5vdCBpbnRlbmRlZCB0byBiZSBpbnN0YW50aWF0ZWQgYnkgY2xpZW50
cworICovCitwdWJsaWMgY2xhc3MgUmVmZXJlbmNlRXhwcmVzc2lvbiBleHRlbmRzIEV4cHJlc3Np
b24geworCisJLyoqCisJICogVGhlICJsaHMiIHN0cnVjdHVyYWwgcHJvcGVydHkgb2YgdGhpcyBu
b2RlIHR5cGUgKHR5cGU6IHtAbGluayBBU1ROb2RlfSkuCisJICovCisJcHVibGljIHN0YXRpYyBm
aW5hbCBDaGlsZFByb3BlcnR5RGVzY3JpcHRvciBMSFNfUFJPUEVSVFkgPQorCQluZXcgQ2hpbGRQ
cm9wZXJ0eURlc2NyaXB0b3IoUmVmZXJlbmNlRXhwcmVzc2lvbi5jbGFzcywgImxocyIsIEFTVE5v
ZGUuY2xhc3MsIE1BTkRBVE9SWSwgQ1lDTEVfUklTSyk7IC8vJE5PTi1OTFMtMSQKKworCS8qKgor
CSAqIFRoZSAidHlwZUFyZ3VtZW50cyIgc3RydWN0dXJhbCBwcm9wZXJ0eSBvZiB0aGlzIG5vZGUg
dHlwZSAoZWxlbWVudCB0eXBlOiB7QGxpbmsgVHlwZX0pLgorCSAqLworCXB1YmxpYyBzdGF0aWMg
ZmluYWwgQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yIFRZUEVfUEFSQU1FVEVSU19QUk9QRVJU
WSA9CisJCW5ldyBDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IoUmVmZXJlbmNlRXhwcmVzc2lv
bi5jbGFzcywgInR5cGVBcmd1bWVudHMiLCBUeXBlLmNsYXNzLCBDWUNMRV9SSVNLKTsgLy8kTk9O
LU5MUy0xJAorCQorCS8qKgorCSAqIFRoZSAic2VsZWN0b3IiIHN0cnVjdHVyYWwgcHJvcGVydHkg
b2YgdGhpcyBub2RlIHR5cGUgKGNoaWxkIHR5cGU6IHtAbGluayBOYW1lfSwKKwkgKi8KKwlwdWJs
aWMgc3RhdGljIGZpbmFsIENoaWxkUHJvcGVydHlEZXNjcmlwdG9yIE5BTUVfUFJPUEVSVFkgPQor
CQluZXcgQ2hpbGRQcm9wZXJ0eURlc2NyaXB0b3IoUmVmZXJlbmNlRXhwcmVzc2lvbi5jbGFzcywg
Im5hbWUiLCBOYW1lLmNsYXNzLCBNQU5EQVRPUlksIE5PX0NZQ0xFX1JJU0spOyAvLyROT04tTkxT
LTEkCisKKwkvKioKKwkgKiBBIGxpc3Qgb2YgcHJvcGVydHkgZGVzY3JpcHRvcnMgKGVsZW1lbnQg
dHlwZToKKwkgKiB7QGxpbmsgU3RydWN0dXJhbFByb3BlcnR5RGVzY3JpcHRvcn0pLAorCSAqIG9y
IG51bGwgaWYgdW5pbml0aWFsaXplZC4KKwkgKi8KKwlwcml2YXRlIHN0YXRpYyBmaW5hbCBMaXN0
IFBST1BFUlRZX0RFU0NSSVBUT1JTXzhfMDsKKwkKKwlzdGF0aWMgeworCQlMaXN0IHByb3BlcnR5
TGlzdCA9IG5ldyBBcnJheUxpc3QoNCk7CisJCWNyZWF0ZVByb3BlcnR5TGlzdChSZWZlcmVuY2VF
eHByZXNzaW9uLmNsYXNzLCBwcm9wZXJ0eUxpc3QpOworCQlhZGRQcm9wZXJ0eShMSFNfUFJPUEVS
VFksIHByb3BlcnR5TGlzdCk7CisJCWFkZFByb3BlcnR5KFRZUEVfUEFSQU1FVEVSU19QUk9QRVJU
WSwgcHJvcGVydHlMaXN0KTsKKwkJYWRkUHJvcGVydHkoTkFNRV9QUk9QRVJUWSwgcHJvcGVydHlM
aXN0KTsKKwkJUFJPUEVSVFlfREVTQ1JJUFRPUlNfOF8wID0gcmVhcFByb3BlcnR5TGlzdChwcm9w
ZXJ0eUxpc3QpOworCX0KKwkKKwkvKioKKwkgKiBSZXR1cm5zIGEgbGlzdCBvZiBzdHJ1Y3R1cmFs
IHByb3BlcnR5IGRlc2NyaXB0b3JzIGZvciB0aGlzIG5vZGUgdHlwZS4KKwkgKiBDbGllbnRzIG11
c3Qgbm90IG1vZGlmeSB0aGUgcmVzdWx0LgorCSAqCisJICogQHBhcmFtIGFwaUxldmVsIHRoZSBB
UEkgbGV2ZWw7IG9uZSBvZiB0aGUgQVNULkpMUyogY29uc3RhbnRzCisJICogQHJldHVybiBhIGxp
c3Qgb2YgcHJvcGVydHkgZGVzY3JpcHRvcnMgKGVsZW1lbnQgdHlwZToKKwkgKiB7QGxpbmsgU3Ry
dWN0dXJhbFByb3BlcnR5RGVzY3JpcHRvcn0pCisJICovCisJcHVibGljIHN0YXRpYyBMaXN0IHBy
b3BlcnR5RGVzY3JpcHRvcnMoaW50IGFwaUxldmVsKSB7CisJCXJldHVybiBQUk9QRVJUWV9ERVND
UklQVE9SU184XzA7CisJfQorCisJLyoqCisJICogbGVmdC1oYW5kLXNpZGU6IGRlZmF1bHRzIHRv
IG51bGwuCisJICovCisJcHJpdmF0ZSBBU1ROb2RlIGxocyA9IG51bGw7CisJCisJLyoqCisJICog
VGhlIHBhcmFtZXRlciBkZWNsYXJhdGlvbnMKKwkgKiAoZWxlbWVudCB0eXBlOiB7QGxpbmsgVHlw
ZX0pLgorCSAqIERlZmF1bHRzIHRvIGFuIGVtcHR5IGxpc3QuCisJICovCisJcHJpdmF0ZSBBU1RO
b2RlLk5vZGVMaXN0IHR5cGVBcmd1bWVudHMgPQorCQluZXcgQVNUTm9kZS5Ob2RlTGlzdChUWVBF
X1BBUkFNRVRFUlNfUFJPUEVSVFkpOworCQorCS8qKgorCSAqIG5hbWUgb2YgdGhlIG1ldGhvZAor
CSAqLworCXByaXZhdGUgU2ltcGxlTmFtZSBuYW1lID0gbnVsbDsKKworCS8qKgorCSAqIENyZWF0
ZXMgYSBuZXcgQVNUIG5vZGUgZm9yIGEgUmVmZXJlbmNlRXhwcmVzc2lvbiBkZWNsYXJhdGlvbiBv
d25lZAorCSAqIGJ5IHRoZSBnaXZlbiBBU1QuCisJICogPHA+CisJICogTi5CLiBUaGlzIGNvbnN0
cnVjdG9yIGlzIHBhY2thZ2UtcHJpdmF0ZTsgYWxsIHN1YmNsYXNzZXMgbXVzdCBiZQorCSAqIGRl
Y2xhcmVkIGluIHRoZSBzYW1lIHBhY2thZ2U7IGNsaWVudHMgYXJlIHVuYWJsZSB0byBkZWNsYXJl
CisJICogYWRkaXRpb25hbCBzdWJjbGFzc2VzLgorCSAqIDwvcD4KKwkgKgorCSAqIEBwYXJhbSBh
c3QgdGhlIEFTVCB0aGF0IGlzIHRvIG93biB0aGlzIG5vZGUKKwkgKi8KKwlSZWZlcmVuY2VFeHBy
ZXNzaW9uKEFTVCBhc3QpIHsKKwkJc3VwZXIoYXN0KTsKKwkJdW5zdXBwb3J0ZWRJbjJfM180KCk7
CisJfQorCisJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCisJICogTWV0aG9kIGRl
Y2xhcmVkIG9uIEFTVE5vZGUuCisJICovCisJTGlzdCBpbnRlcm5hbFN0cnVjdHVyYWxQcm9wZXJ0
aWVzRm9yVHlwZShpbnQgYXBpTGV2ZWwpIHsKKwkJcmV0dXJuIHByb3BlcnR5RGVzY3JpcHRvcnMo
YXBpTGV2ZWwpOworCX0KKworCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQorCSAq
IE1ldGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAqLworCWZpbmFsIEFTVE5vZGUgaW50ZXJu
YWxHZXRTZXRDaGlsZFByb3BlcnR5KENoaWxkUHJvcGVydHlEZXNjcmlwdG9yIHByb3BlcnR5LCBi
b29sZWFuIGdldCwgQVNUTm9kZSBjaGlsZCkgeworCQlpZiAocHJvcGVydHkgPT0gTEhTX1BST1BF
UlRZKSB7CisJCQlpZiAoZ2V0KSB7CisJCQkJcmV0dXJuIGdldExocygpOworCQkJfSBlbHNlIHsK
KwkJCQlzZXRMaHMoY2hpbGQpOworCQkJCXJldHVybiBudWxsOworCQkJfQorCQl9CisJCWlmIChw
cm9wZXJ0eSA9PSBOQU1FX1BST1BFUlRZKSB7CisJCQlpZiAoZ2V0KSB7CisJCQkJcmV0dXJuIGdl
dE5hbWUoKTsKKwkJCX0gZWxzZSB7CisJCQkJc2V0TmFtZSgoU2ltcGxlTmFtZSljaGlsZCk7CisJ
CQkJcmV0dXJuIG51bGw7CisJCQl9CisJCX0KKwkJLy8gYWxsb3cgZGVmYXVsdCBpbXBsZW1lbnRh
dGlvbiB0byBmbGFnIHRoZSBlcnJvcgorCQlyZXR1cm4gc3VwZXIuaW50ZXJuYWxHZXRTZXRDaGls
ZFByb3BlcnR5KHByb3BlcnR5LCBnZXQsIGNoaWxkKTsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9j
IGZvciB0aGlzIG1ldGhvZCkKKwkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8K
KwlmaW5hbCBMaXN0IGludGVybmFsR2V0Q2hpbGRMaXN0UHJvcGVydHkoQ2hpbGRMaXN0UHJvcGVy
dHlEZXNjcmlwdG9yIHByb3BlcnR5KSB7CisJCWlmIChwcm9wZXJ0eSA9PSBUWVBFX1BBUkFNRVRF
UlNfUFJPUEVSVFkpIHsKKwkJCXJldHVybiB0eXBlQXJndW1lbnRzKCk7CisJCX0KKwkJLy8gYWxs
b3cgZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiB0byBmbGFnIHRoZSBlcnJvcgorCQlyZXR1cm4gc3Vw
ZXIuaW50ZXJuYWxHZXRDaGlsZExpc3RQcm9wZXJ0eShwcm9wZXJ0eSk7CisJfQorCQorCS8qIChv
bWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQorCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1RO
b2RlLgorCSAqLworCWludCBnZXROb2RlVHlwZTAoKSB7CisJCXJldHVybiBSRUZFUkVOQ0VfRVhQ
UkVTU0lPTjsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKKwkgKiBN
ZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8KKwlib29sZWFuIHN1YnRyZWVNYXRjaDAo
QVNUTWF0Y2hlciBtYXRjaGVyLCBPYmplY3Qgb3RoZXIpIHsKKwkJLy8gZGlzcGF0Y2ggdG8gY29y
cmVjdCBvdmVybG9hZGVkIG1hdGNoIG1ldGhvZAorCQlyZXR1cm4gbWF0Y2hlci5tYXRjaCh0aGlz
LCBvdGhlcik7CisJfQorCisJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCisJICog
TWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCisJICovCisJQVNUTm9kZSBjbG9uZTAoQVNUIHRh
cmdldCkgeworCQlSZWZlcmVuY2VFeHByZXNzaW9uIHJlc3VsdCA9IG5ldyBSZWZlcmVuY2VFeHBy
ZXNzaW9uKHRhcmdldCk7CisJCXJlc3VsdC5zZXRTb3VyY2VSYW5nZShnZXRTdGFydFBvc2l0aW9u
KCksIGdldExlbmd0aCgpKTsKKwkJcmVzdWx0LnNldExocyhBU1ROb2RlLmNvcHlTdWJ0cmVlKHRh
cmdldCwgZ2V0TGhzKCkpKTsKKwkJcmVzdWx0LnR5cGVBcmd1bWVudHMoKS5hZGRBbGwoQVNUTm9k
ZS5jb3B5U3VidHJlZXModGFyZ2V0LCB0eXBlQXJndW1lbnRzKCkpKTsKKwkJcmVzdWx0LnNldE5h
bWUoKFNpbXBsZU5hbWUpQVNUTm9kZS5jb3B5U3VidHJlZSh0YXJnZXQsIGdldE5hbWUoKSkpOwor
CQlyZXR1cm4gcmVzdWx0OworCX0KKworCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9k
KQorCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAqLworCXZvaWQgYWNjZXB0MChB
U1RWaXNpdG9yIHZpc2l0b3IpIHsKKwkJYm9vbGVhbiB2aXNpdENoaWxkcmVuID0gdmlzaXRvci52
aXNpdCh0aGlzKTsKKwkJaWYgKHZpc2l0Q2hpbGRyZW4pIHsKKwkJCS8vIHZpc2l0IGNoaWxkcmVu
IGluIG5vcm1hbCBsZWZ0IHRvIHJpZ2h0IHJlYWRpbmcgb3JkZXIKKwkJCWFjY2VwdENoaWxkKHZp
c2l0b3IsIGdldExocygpKTsKKwkJCWFjY2VwdENoaWxkcmVuKHZpc2l0b3IsIHRoaXMudHlwZUFy
Z3VtZW50cyk7CisJCQlhY2NlcHRDaGlsZCh2aXNpdG9yLCBnZXROYW1lKCkpOworCQl9CisJCXZp
c2l0b3IuZW5kVmlzaXQodGhpcyk7CisJfQorCisJLyoqCisJICogUmV0dXJucyB0aGUgZGVmYXVs
dCB2YWx1ZSBvZiB0aGlzIHJlZmVyZW5jZSBleHByZXNzaW9uLCBvcgorCSAqIDxjb2RlPm51bGw8
L2NvZGU+IGlmIHRoZXJlIGlzIG5vbmUuCisJICoKKwkgKiBAcmV0dXJuIHRoZSBBU1ROb2RlIG5v
ZGUsIG9yIDxjb2RlPm51bGw8L2NvZGU+IGlmIHRoZXJlIGlzIG5vbmUKKwkgKi8KKwlwdWJsaWMg
QVNUTm9kZSBnZXRMaHMoKSB7CisJCXJldHVybiB0aGlzLmxoczsKKwl9CisKKwkvKioKKwkgKiBT
ZXRzIG9yIGNsZWFycyB0aGUgbGhzIG9mIHRoaXMgcmVmZXJlbmNlIGV4cHJlc3Npb24KKwkgKgor
CSAqIEBwYXJhbSBsaHMgdGhlIEFTVE5vZGUgbm9kZSwgb3IgPGNvZGU+bnVsbDwvY29kZT4gaWYK
KwkgKiAgICB0aGVyZSBpcyBub25lCisJICogQGV4Y2VwdGlvbiBJbGxlZ2FsQXJndW1lbnRFeGNl
cHRpb24gaWY6CisJICogPHVsPgorCSAqIDxsaT50aGUgbm9kZSBiZWxvbmdzIHRvIGEgZGlmZmVy
ZW50IEFTVDwvbGk+CisJICogPGxpPnRoZSBub2RlIGFscmVhZHkgaGFzIGEgcGFyZW50PC9saT4K
KwkgKiA8bGk+YSBjeWNsZSBpbiB3b3VsZCBiZSBjcmVhdGVkPC9saT4KKwkgKiA8bGk+bm9kZSBp
cyBub3QgYW4gaW5zdGFuY2Ugb2YgYWxsb3dlZCBzZXQgb2Ygbm9kZXMuPC9saT4KKwkgKiA8L3Vs
PgorCSAqLworCXB1YmxpYyB2b2lkIHNldExocyhBU1ROb2RlIGxocykgeworCQlBU1ROb2RlIG9s
ZENoaWxkID0gdGhpcy5saHM7CisJCXByZVJlcGxhY2VDaGlsZChvbGRDaGlsZCwgbGhzLCBMSFNf
UFJPUEVSVFkpOworCQl0aGlzLmxocyA9IGxoczsKKwkJcG9zdFJlcGxhY2VDaGlsZChvbGRDaGls
ZCwgbGhzLCBMSFNfUFJPUEVSVFkpOworCX0KKworCS8qKgorCSAqIFJldHVybnMgdGhlIGxpc3Qg
b2YgdHlwZSBwYXJhbWV0ZXJzIGZvciB0aGlzIHJlZmVyZW5jZSBleHByZXNzaW9uCisJICoKKwkg
KiBAcmV0dXJuIHRoZSBsaXN0IG9mIHR5cGUgcGFyYW1ldGVycworCSAqICAgIChlbGVtZW50IHR5
cGU6IHtAbGluayBUeXBlfSkKKwkgKi8KKwlwdWJsaWMgTGlzdCB0eXBlQXJndW1lbnRzKCkgewor
CQlyZXR1cm4gdGhpcy50eXBlQXJndW1lbnRzOworCX0KKworCS8qKgorCSAqIFJldHVybnMgdGhl
IG5hbWUgaW4gdGhlIHJlZmVyZW5jZSBleHByZXNzaW9uCisJICoKKwkgKiBAcmV0dXJuIHRoZSBy
ZWZlcmVuY2UgZXhwcmVzc2lvbiBuYW1lIG5vZGUKKwkgKi8KKwlwdWJsaWMgU2ltcGxlTmFtZSBn
ZXROYW1lKCkgeworCQlpZiAodGhpcy5uYW1lID09IG51bGwpIHsKKwkJCS8vIGxhenkgaW5pdCBt
dXN0IGJlIHRocmVhZC1zYWZlIGZvciByZWFkZXJzCisJCQlzeW5jaHJvbml6ZWQgKHRoaXMpIHsK
KwkJCQlpZiAodGhpcy5uYW1lID09IG51bGwpIHsKKwkJCQkJcHJlTGF6eUluaXQoKTsKKwkJCQkJ
dGhpcy5uYW1lID0gbmV3IFNpbXBsZU5hbWUodGhpcy5hc3QpOworCQkJCQlwb3N0TGF6eUluaXQo
dGhpcy5uYW1lLCBOQU1FX1BST1BFUlRZKTsKKwkJCQl9CisJCQl9CisJCX0KKwkJcmV0dXJuIHRo
aXMubmFtZTsKKwl9CisKKwkvKioKKwkgKiBTZXRzIHRoZSBuYW1lIGluIHRoZSByZWZlcmVuY2Ug
ZXhwcmVzc2lvbgorCSAqCisJICogQHBhcmFtIG5hbWUgdGhlIG5ldyBuYW1lIAorCSAqIEBleGNl
cHRpb24gSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uIGlmOgorCSAqIDx1bD4KKwkgKiA8bGk+dGhl
IG5vZGUgYmVsb25ncyB0byBhIGRpZmZlcmVudCBBU1Q8L2xpPgorCSAqIDxsaT50aGUgbm9kZSBh
bHJlYWR5IGhhcyBhIHBhcmVudDwvbGk+CisJICogPC91bD4KKwkgKi8KKwlwdWJsaWMgdm9pZCBz
ZXROYW1lKFNpbXBsZU5hbWUgbmFtZSkgeworCQlpZiAobmFtZSA9PSBudWxsKSB7CisJCQl0aHJv
dyBuZXcgSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uKCk7CisJCX0KKwkJQVNUTm9kZSBvbGRDaGls
ZCA9IHRoaXMubmFtZTsKKwkJcHJlUmVwbGFjZUNoaWxkKG9sZENoaWxkLCBuYW1lLCBOQU1FX1BS
T1BFUlRZKTsKKwkJdGhpcy5uYW1lID0gbmFtZTsKKwkJcG9zdFJlcGxhY2VDaGlsZChvbGRDaGls
ZCwgbmFtZSwgTkFNRV9QUk9QRVJUWSk7CisJfQorCisJLyoqCisJICogUmVzb2x2ZXMgYW5kIHJl
dHVybnMgdGhlIGJpbmRpbmcgZm9yIHRoZSByZWZlcmVuY2UgZXhwcmVzc2lvbgorCSAqIDxwPgor
CSAqIE5vdGUgdGhhdCBiaW5kaW5ncyBhcmUgZ2VuZXJhbGx5IHVuYXZhaWxhYmxlIHVubGVzcyBy
ZXF1ZXN0ZWQgd2hlbiB0aGUKKwkgKiBBU1QgaXMgYmVpbmcgYnVpbHQuCisJICogPC9wPgorCSAq
CisJICogQHJldHVybiB0aGUgYmluZGluZywgb3IgPGNvZGU+bnVsbDwvY29kZT4gaWYgdGhlIGJp
bmRpbmcgY2Fubm90IGJlCisJICogICAgcmVzb2x2ZWQKKwkgKi8KKwlwdWJsaWMgSU1ldGhvZEJp
bmRpbmcgcmVzb2x2ZU1ldGhvZEJpbmRpbmcoKSB7CisJCXJldHVybiB0aGlzLmFzdC5nZXRCaW5k
aW5nUmVzb2x2ZXIoKS5yZXNvbHZlTWV0aG9kKHRoaXMpOworCX0KKworCS8qIChvbWl0IGphdmFk
b2MgZm9yIHRoaXMgbWV0aG9kKQorCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAq
LworCWludCBtZW1TaXplKCkgeworCQlyZXR1cm4gQkFTRV9OT0RFX1NJWkUgKyAzICogNDsKKwl9
CisKKwkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKKwkgKiBNZXRob2QgZGVjbGFy
ZWQgb24gQVNUTm9kZS4KKwkgKi8KKwlpbnQgdHJlZVNpemUoKSB7CisJCXJldHVybgorCQkJbWVt
U2l6ZSgpCisJCQkrICh0aGlzLmxocyA9PSBudWxsID8gMCA6IGdldExocygpLnRyZWVTaXplKCkp
CisJCQkrIHRoaXMudHlwZUFyZ3VtZW50cy5saXN0U2l6ZSgpCisJCQkrICh0aGlzLm5hbWUgPT0g
bnVsbCA/IDAgOiBnZXROYW1lKCkudHJlZVNpemUoKSk7CisJfQorCit9ClwgTm8gbmV3bGluZSBh
dCBlbmQgb2YgZmlsZQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL2RvbS9TdXBlclJlZmVyZW5jZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9TdXBlclJlZmVyZW5jZS5qYXZhCm5l
dyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLjU5MDE0MDcKLS0tIC9kZXYvbnVsbAor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1N1
cGVyUmVmZXJlbmNlLmphdmEKQEAgLTAsMCArMSwxODkgQEAKKy8qKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqCisgKiBDb3B5cmlnaHQgKGMpIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisg
KiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcg
bWF0ZXJpYWxzCisgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBF
Y2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKKyAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlz
dHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CisgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3Jn
L2xlZ2FsL2VwbC12MTAuaHRtbAorICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2Yg
YW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAq
IENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGlu
ZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBh
dGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgorICogCisgKiBDb250cmli
dXRvcnM6CisgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVu
dGF0aW9uCisgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KK3BhY2thZ2Ugb3JnLmVjbGlwc2UuamR0
LmNvcmUuZG9tOworCitpbXBvcnQgamF2YS51dGlsLkFycmF5TGlzdDsKK2ltcG9ydCBqYXZhLnV0
aWwuTGlzdDsKKworLyoqCisgKiBTdXBlclJlZmVyZW5jZSBBU1QgTm9kZSBUeXBlCisgKiAKKyAq
IDxwcmU+CisgKiBTdXBlclJlZmVyZW5jZToKKyAqICAgICAgWyBDbGFzc05hbWUgPGI+LjwvYj4g
XSA8Yj5zdXBlcjwvYj4KKyAqIDwvcHJlPgorICogCisgKiBAc2luY2UgMy45CisgKiBAbm9pbnN0
YW50aWF0ZSBUaGlzIGNsYXNzIGlzIG5vdCBpbnRlbmRlZCB0byBiZSBpbnN0YW50aWF0ZWQgYnkg
Y2xpZW50cworICovCitwdWJsaWMgY2xhc3MgU3VwZXJSZWZlcmVuY2UgZXh0ZW5kcyBFeHByZXNz
aW9uIHsKKworCS8qKgorCSAqIFRoZSAicXVhbGlmaWVyIiBzdHJ1Y3R1cmFsIHByb3BlcnR5IG9m
IHRoaXMgbm9kZSB0eXBlIChjaGlsZCB0eXBlOiB7QGxpbmsgTmFtZX0pLgorCSAqIEBzaW5jZSAz
LjAKKwkgKi8KKwlwdWJsaWMgc3RhdGljIGZpbmFsIENoaWxkUHJvcGVydHlEZXNjcmlwdG9yIFFV
QUxJRklFUl9QUk9QRVJUWSA9CisJCW5ldyBDaGlsZFByb3BlcnR5RGVzY3JpcHRvcihTdXBlclJl
ZmVyZW5jZS5jbGFzcywgInF1YWxpZmllciIsIE5hbWUuY2xhc3MsIE9QVElPTkFMLCBOT19DWUNM
RV9SSVNLKTsgLy8kTk9OLU5MUy0xJAorCisJLyoqCisJICogQSBsaXN0IG9mIHByb3BlcnR5IGRl
c2NyaXB0b3JzIChlbGVtZW50IHR5cGU6CisJICoge0BsaW5rIFN0cnVjdHVyYWxQcm9wZXJ0eURl
c2NyaXB0b3J9KSwKKwkgKiBvciBudWxsIGlmIHVuaW5pdGlhbGl6ZWQuCisJICovCisJcHJpdmF0
ZSBzdGF0aWMgZmluYWwgTGlzdCBQUk9QRVJUWV9ERVNDUklQVE9SUzsKKworCXN0YXRpYyB7CisJ
CUxpc3QgcHJvcGVydHlMaXN0ID0gbmV3IEFycmF5TGlzdCgyKTsKKwkJY3JlYXRlUHJvcGVydHlM
aXN0KFN1cGVyUmVmZXJlbmNlLmNsYXNzLCBwcm9wZXJ0eUxpc3QpOworCQlhZGRQcm9wZXJ0eShR
VUFMSUZJRVJfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CisJCVBST1BFUlRZX0RFU0NSSVBUT1JT
ID0gcmVhcFByb3BlcnR5TGlzdChwcm9wZXJ0eUxpc3QpOworCX0KKworCS8qKgorCSAqIFJldHVy
bnMgYSBsaXN0IG9mIHN0cnVjdHVyYWwgcHJvcGVydHkgZGVzY3JpcHRvcnMgZm9yIHRoaXMgbm9k
ZSB0eXBlLgorCSAqIENsaWVudHMgbXVzdCBub3QgbW9kaWZ5IHRoZSByZXN1bHQuCisJICoKKwkg
KiBAcGFyYW0gYXBpTGV2ZWwgdGhlIEFQSSBsZXZlbDsgb25lIG9mIHRoZQorCSAqIDxjb2RlPkFT
VC5KTFMqPC9jb2RlPiBjb25zdGFudHMKKwkgKiBAcmV0dXJuIGEgbGlzdCBvZiBwcm9wZXJ0eSBk
ZXNjcmlwdG9ycyAoZWxlbWVudCB0eXBlOgorCSAqIHtAbGluayBTdHJ1Y3R1cmFsUHJvcGVydHlE
ZXNjcmlwdG9yfSkKKwkgKiBAc2luY2UgMy4wCisJICovCisJcHVibGljIHN0YXRpYyBMaXN0IHBy
b3BlcnR5RGVzY3JpcHRvcnMoaW50IGFwaUxldmVsKSB7CisJCXJldHVybiBQUk9QRVJUWV9ERVND
UklQVE9SUzsKKwl9CisKKwkvKioKKwkgKiBUaGUgb3B0aW9uYWwgcXVhbGlmaWVyOyA8Y29kZT5u
dWxsPC9jb2RlPiBmb3Igbm9uZTsgZGVmYXVsdHMgdG8gbm9uZS4KKwkgKi8KKwlwcml2YXRlIE5h
bWUgb3B0aW9uYWxRdWFsaWZpZXIgPSBudWxsOworCisJLyoqCisJICogQ3JlYXRlcyBhIG5ldyB1
bnBhcmVudGVkIG5vZGUgZm9yIGEgc3VwZXIgcmVmZXJlbmNlIGV4cHJlc3Npb24gb3duZWQKKwkg
KiBieSB0aGUgZ2l2ZW4gQVNULiBCeSBkZWZhdWx0LCB0aGVyZSBpcyBubyBxdWFsaWZpZXIuCisJ
ICogPHA+CisJICogTi5CLiBUaGlzIGNvbnN0cnVjdG9yIGlzIHBhY2thZ2UtcHJpdmF0ZS4KKwkg
KiA8L3A+CisJICoKKwkgKiBAcGFyYW0gYXN0IHRoZSBBU1QgdGhhdCBpcyB0byBvd24gdGhpcyBu
b2RlCisJICovCisJU3VwZXJSZWZlcmVuY2UoQVNUIGFzdCkgeworCQlzdXBlcihhc3QpOworCQl1
bnN1cHBvcnRlZEluMl8zXzQoKTsKKwl9CisKKwlMaXN0IGludGVybmFsU3RydWN0dXJhbFByb3Bl
cnRpZXNGb3JUeXBlKGludCBhcGlMZXZlbCkgeworCQlyZXR1cm4gcHJvcGVydHlEZXNjcmlwdG9y
cyhhcGlMZXZlbCk7CisJfQorCisJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCisJ
ICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCisJICovCisJZmluYWwgQVNUTm9kZSBpbnRl
cm5hbEdldFNldENoaWxkUHJvcGVydHkoQ2hpbGRQcm9wZXJ0eURlc2NyaXB0b3IgcHJvcGVydHks
IGJvb2xlYW4gZ2V0LCBBU1ROb2RlIGNoaWxkKSB7CisJCWlmIChwcm9wZXJ0eSA9PSBRVUFMSUZJ
RVJfUFJPUEVSVFkpIHsKKwkJCWlmIChnZXQpIHsKKwkJCQlyZXR1cm4gZ2V0UXVhbGlmaWVyKCk7
CisJCQl9IGVsc2UgeworCQkJCXNldFF1YWxpZmllcigoTmFtZSkgY2hpbGQpOworCQkJCXJldHVy
biBudWxsOworCQkJfQorCQl9CisJCS8vIGFsbG93IGRlZmF1bHQgaW1wbGVtZW50YXRpb24gdG8g
ZmxhZyB0aGUgZXJyb3IKKwkJcmV0dXJuIHN1cGVyLmludGVybmFsR2V0U2V0Q2hpbGRQcm9wZXJ0
eShwcm9wZXJ0eSwgZ2V0LCBjaGlsZCk7CisJfQorCisJaW50IGdldE5vZGVUeXBlMCgpIHsKKwkJ
cmV0dXJuIFNVUEVSX1JFRkVSRU5DRTsKKwl9CisKKwlib29sZWFuIHN1YnRyZWVNYXRjaDAoQVNU
TWF0Y2hlciBtYXRjaGVyLCBPYmplY3Qgb3RoZXIpIHsKKwkJLy8gZGlzcGF0Y2ggdG8gY29ycmVj
dCBvdmVybG9hZGVkIG1hdGNoIG1ldGhvZAorCQlyZXR1cm4gbWF0Y2hlci5tYXRjaCh0aGlzLCBv
dGhlcik7CisJfQorCisJQVNUTm9kZSBjbG9uZTAoQVNUIHRhcmdldCkgeworCQlTdXBlclJlZmVy
ZW5jZSByZXN1bHQgPSBuZXcgU3VwZXJSZWZlcmVuY2UodGFyZ2V0KTsKKwkJcmVzdWx0LnNldFNv
dXJjZVJhbmdlKGdldFN0YXJ0UG9zaXRpb24oKSwgZ2V0TGVuZ3RoKCkpOworCQlyZXN1bHQuc2V0
UXVhbGlmaWVyKChOYW1lKSBBU1ROb2RlLmNvcHlTdWJ0cmVlKHRhcmdldCwgZ2V0UXVhbGlmaWVy
KCkpKTsKKwkJcmV0dXJuIHJlc3VsdDsKKwl9CisKKwl2b2lkIGFjY2VwdDAoQVNUVmlzaXRvciB2
aXNpdG9yKSB7CisJCWJvb2xlYW4gdmlzaXRDaGlsZHJlbiA9IHZpc2l0b3IudmlzaXQodGhpcyk7
CisJCWlmICh2aXNpdENoaWxkcmVuKSB7CisJCQkvLyB2aXNpdCBjaGlsZHJlbiBpbiBub3JtYWwg
bGVmdCB0byByaWdodCByZWFkaW5nIG9yZGVyCisJCQlhY2NlcHRDaGlsZCh2aXNpdG9yLCBnZXRR
dWFsaWZpZXIoKSk7CisJCX0KKwkJdmlzaXRvci5lbmRWaXNpdCh0aGlzKTsKKwl9CisKKwkvKioK
KwkgKiBSZXR1cm5zIHRoZSBxdWFsaWZpZXIgb2YgdGhpcyAic3VwZXIiIGZpZWxkIGFjY2VzcyBl
eHByZXNzaW9uLCBvcgorCSAqIDxjb2RlPm51bGw8L2NvZGU+IGlmIHRoZXJlIGlzIG5vbmUuCisJ
ICoKKwkgKiBAcmV0dXJuIHRoZSBxdWFsaWZpZXIgbmFtZSBub2RlLCBvciA8Y29kZT5udWxsPC9j
b2RlPiBpZiB0aGVyZSBpcyBub25lCisJICovCisJcHVibGljIE5hbWUgZ2V0UXVhbGlmaWVyKCkg
eworCQlyZXR1cm4gdGhpcy5vcHRpb25hbFF1YWxpZmllcjsKKwl9CisKKwkvKioKKwkgKiBTZXRz
IG9yIGNsZWFycyB0aGUgcXVhbGlmaWVyIG9mIHRoaXMgInN1cGVyIiBmaWVsZCBhY2Nlc3MgZXhw
cmVzc2lvbi4KKwkgKgorCSAqIEBwYXJhbSBuYW1lIHRoZSBxdWFsaWZpZXIgbmFtZSBub2RlLCBv
ciA8Y29kZT5udWxsPC9jb2RlPiBpZgorCSAqICAgIHRoZXJlIGlzIG5vbmUKKwkgKiBAZXhjZXB0
aW9uIElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbiBpZjoKKwkgKiA8dWw+CisJICogPGxpPnRoZSBu
b2RlIGJlbG9uZ3MgdG8gYSBkaWZmZXJlbnQgQVNUPC9saT4KKwkgKiA8bGk+dGhlIG5vZGUgYWxy
ZWFkeSBoYXMgYSBwYXJlbnQ8L2xpPgorCSAqIDwvdWw+CisJICovCisJcHVibGljIHZvaWQgc2V0
UXVhbGlmaWVyKE5hbWUgbmFtZSkgeworCQlBU1ROb2RlIG9sZENoaWxkID0gdGhpcy5vcHRpb25h
bFF1YWxpZmllcjsKKwkJcHJlUmVwbGFjZUNoaWxkKG9sZENoaWxkLCBuYW1lLCBRVUFMSUZJRVJf
UFJPUEVSVFkpOworCQl0aGlzLm9wdGlvbmFsUXVhbGlmaWVyID0gbmFtZTsKKwkJcG9zdFJlcGxh
Y2VDaGlsZChvbGRDaGlsZCwgbmFtZSwgUVVBTElGSUVSX1BST1BFUlRZKTsKKwl9CisvKgorCSov
LyoqCisJICogUmVzb2x2ZXMgYW5kIHJldHVybnMgdGhlIGJpbmRpbmcgZm9yIHRoZSBzdXBlciBy
ZWZlcmVuY2UKKwkgKiA8cD4KKwkgKiBOb3RlIHRoYXQgYmluZGluZ3MgYXJlIGdlbmVyYWxseSB1
bmF2YWlsYWJsZSB1bmxlc3MgcmVxdWVzdGVkIHdoZW4gdGhlCisJICogQVNUIGlzIGJlaW5nIGJ1
aWx0LgorCSAqIDwvcD4KKwkgKgorCSAqIEByZXR1cm4gdGhlIGJpbmRpbmcsIG9yIDxjb2RlPm51
bGw8L2NvZGU+IGlmIHRoZSBiaW5kaW5nIGNhbm5vdCBiZQorCSAqICAgIHJlc29sdmVkCisJICov
LyoKKwlwdWJsaWMgSVR5cGVCaW5kaW5nIHJlc29sdmVCaW5kaW5nKCkgeworCQlyZXR1cm4gdGhp
cy5hc3QuZ2V0QmluZGluZ1Jlc29sdmVyKCkucmVzb2x2ZVR5cGVCaW5kaW5nKHRoaXMpOworCX0K
KworKi8JLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCisJICogTWV0aG9kIGRlY2xh
cmVkIG9uIEFTVE5vZGUuCisJICovCisJaW50IG1lbVNpemUoKSB7CisJCXJldHVybiBCQVNFX05P
REVfU0laRSArIDEgKiA0OworCX0KKworCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9k
KQorCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAqLworCWludCB0cmVlU2l6ZSgp
IHsKKwkJcmV0dXJuCisJCQltZW1TaXplKCkKKwkJCSsgKHRoaXMub3B0aW9uYWxRdWFsaWZpZXIg
PT0gbnVsbCA/IDAgOiBnZXRRdWFsaWZpZXIoKS50cmVlU2l6ZSgpKTsKKwl9Cit9CmRpZmYgLS1n
aXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvZG9tL05haXZlQVNURmxhdHRlbmVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20v
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL05haXZlQVNURmxhdHRlbmVyLmphdmEK
aW5kZXggNzg4MWM3Mi4uNDczOTI5OSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
ZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9OYWl2ZUFTVEZsYXR0ZW5lci5q
YXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29yZS9kb20vTmFpdmVBU1RGbGF0dGVuZXIuamF2YQpAQCAtMTI1MCw2ICsxMjUwLDI3IEBA
CiAJfQogCiAJLyoKKwkgKiBAc2VlIEFTVFZpc2l0b3IjdmlzaXQoUmVmZXJlbmNlRXhwcmVzc2lv
bikKKwkgKi8KKwlwdWJsaWMgYm9vbGVhbiB2aXNpdChSZWZlcmVuY2VFeHByZXNzaW9uIG5vZGUp
IHsKKwkJbm9kZS5nZXRMaHMoKS5hY2NlcHQodGhpcyk7CisJCXRoaXMuYnVmZmVyLmFwcGVuZCgi
IDo6ICIpOyAvLyROT04tTkxTLTEkCisJCWlmICghbm9kZS50eXBlQXJndW1lbnRzKCkuaXNFbXB0
eSgpKSB7CisJCQl0aGlzLmJ1ZmZlci5hcHBlbmQoIjwiKTsvLyROT04tTkxTLTEkCisJCQlmb3Ig
KEl0ZXJhdG9yIGl0ID0gbm9kZS50eXBlQXJndW1lbnRzKCkuaXRlcmF0b3IoKTsgaXQuaGFzTmV4
dCgpOyApIHsKKwkJCQlUeXBlIHQgPSAoVHlwZSkgaXQubmV4dCgpOworCQkJCXQuYWNjZXB0KHRo
aXMpOworCQkJCWlmIChpdC5oYXNOZXh0KCkpIHsKKwkJCQkJdGhpcy5idWZmZXIuYXBwZW5kKCIs
Iik7Ly8kTk9OLU5MUy0xJAorCQkJCX0KKwkJCX0KKwkJCXRoaXMuYnVmZmVyLmFwcGVuZCgiPiIp
Oy8vJE5PTi1OTFMtMSQKKwkJfQorCQlub2RlLmdldE5hbWUoKS5hY2NlcHQodGhpcyk7CisJCXJl
dHVybiBmYWxzZTsKKwl9CisKKwkvKgogCSAqIEBzZWUgQVNUVmlzaXRvciN2aXNpdChSZXR1cm5T
dGF0ZW1lbnQpCiAJICovCiAJcHVibGljIGJvb2xlYW4gdmlzaXQoUmV0dXJuU3RhdGVtZW50IG5v
ZGUpIHsKQEAgLTE0MzcsNiArMTQ1OCwxOCBAQAogCX0KIAogCS8qCisJICogQHNlZSBBU1RWaXNp
dG9yI3Zpc2l0KFN1cGVyUmVmZXJlbmNlKQorCSAqLworCXB1YmxpYyBib29sZWFuIHZpc2l0KFN1
cGVyUmVmZXJlbmNlIG5vZGUpIHsKKwkJaWYgKG5vZGUuZ2V0UXVhbGlmaWVyKCkgIT0gbnVsbCkg
eworCQkJbm9kZS5nZXRRdWFsaWZpZXIoKS5hY2NlcHQodGhpcyk7CisJCQl0aGlzLmJ1ZmZlci5h
cHBlbmQoIi4iKTsvLyROT04tTkxTLTEkCisJCX0KKwkJdGhpcy5idWZmZXIuYXBwZW5kKCJzdXBl
ci4iKTsvLyROT04tTkxTLTEkCisJCXJldHVybiBmYWxzZTsKKwl9CisKKwkvKgogCSAqIEBzZWUg
QVNUVmlzaXRvciN2aXNpdChTd2l0Y2hDYXNlKQogCSAqLwogCXB1YmxpYyBib29sZWFuIHZpc2l0
KFN3aXRjaENhc2Ugbm9kZSkgew==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>229310</attachid>
            <date>2013-04-04 03:19:00 -0400</date>
            <delta_ts>2013-04-24 09:41:19 -0400</delta_ts>
            <desc>Proposed Patch - WIP - Naive for ASTViewer</desc>
            <filename>399794UIASTVIEWERNAIVECHANGESWIP.patch</filename>
            <type>text/plain</type>
            <size>1529</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5hc3R2aWV3L3NyYy9vcmcvZWNsaXBzZS9qZHQv
YXN0dmlldy92aWV3cy9BU1RWaWV3Q29udGVudFByb3ZpZGVyLmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuYXN0dmlldy9zcmMvb3JnL2VjbGlwc2UvamR0L2FzdHZpZXcvdmlld3MvQVNUVmlld0NvbnRl
bnRQcm92aWRlci5qYXZhCmluZGV4IDkyNzUyYTUuLjZjZTRiYzUgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5hc3R2aWV3L3NyYy9vcmcvZWNsaXBzZS9qZHQvYXN0dmlldy92aWV3cy9BU1RW
aWV3Q29udGVudFByb3ZpZGVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmFzdHZpZXcvc3Jj
L29yZy9lY2xpcHNlL2pkdC9hc3R2aWV3L3ZpZXdzL0FTVFZpZXdDb250ZW50UHJvdmlkZXIuamF2
YQpAQCAtNDYsNiArNDYsNyBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbS5NZXRo
b2RSZWY7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLk5hbWU7CiBpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmNvcmUuZG9tLlBhY2thZ2VEZWNsYXJhdGlvbjsKK2ltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuY29yZS5kb20uUmVmZXJlbmNlRXhwcmVzc2lvbjsKIGltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuY29yZS5kb20uU3RydWN0dXJhbFByb3BlcnR5RGVzY3JpcHRvcjsKIGltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuY29yZS5kb20uU3VwZXJDb25zdHJ1Y3Rvckludm9jYXRpb247CiBpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLlN1cGVyRmllbGRBY2Nlc3M7CkBAIC0xNDcsNyArMTQ4
LDExIEBACiAJCQl9IGVsc2UgaWYgKGV4cHJlc3Npb24gaW5zdGFuY2VvZiBMYW1iZGFFeHByZXNz
aW9uKSB7CiAJCQkJSU1ldGhvZEJpbmRpbmcgYmluZGluZz0gKChMYW1iZGFFeHByZXNzaW9uKSBl
eHByZXNzaW9uKS5yZXNvbHZlTWV0aG9kQmluZGluZygpOwogCQkJCXJlcy5hZGQoY3JlYXRlQmlu
ZGluZyhleHByZXNzaW9uLCBiaW5kaW5nKSk7CisJCQl9IGVsc2UgaWYgKGV4cHJlc3Npb24gaW5z
dGFuY2VvZiBSZWZlcmVuY2VFeHByZXNzaW9uKSB7CisJCQkJSU1ldGhvZEJpbmRpbmcgYmluZGlu
Zz0gKChSZWZlcmVuY2VFeHByZXNzaW9uKSBleHByZXNzaW9uKS5yZXNvbHZlTWV0aG9kQmluZGlu
ZygpOworCQkJCXJlcy5hZGQoY3JlYXRlQmluZGluZyhleHByZXNzaW9uLCBiaW5kaW5nKSk7CiAJ
CQl9CisKIAkJCS8vIEV4cHJlc3Npb24gYXR0cmlidXRlczoKIAkJCXJlcy5hZGQobmV3IEdlbmVy
YWxBdHRyaWJ1dGUoZXhwcmVzc2lvbiwgIkJveGluZzogIiArIGV4cHJlc3Npb24ucmVzb2x2ZUJv
eGluZygpICsgIjsgVW5ib3hpbmc6ICIgKyBleHByZXNzaW9uLnJlc29sdmVVbmJveGluZygpKSk7
IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAogCQkJcmVzLmFkZChuZXcgR2VuZXJhbEF0dHJp
YnV0ZShleHByZXNzaW9uLCAiQ29uc3RhbnRFeHByZXNzaW9uVmFsdWUiLCBleHByZXNzaW9uLnJl
c29sdmVDb25zdGFudEV4cHJlc3Npb25WYWx1ZSgpKSk7IC8vJE5PTi1OTFMtMSQ=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>230074</attachid>
            <date>2013-04-24 09:41:00 -0400</date>
            <delta_ts>2013-06-07 05:01:40 -0400</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Fix-for-Bug-399794--18dom-ast-Add-a-new-node-type-fo.patch</filename>
            <type>text/plain</type>
            <size>97972</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
ZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZhCmluZGV4IDBkZTU2ZmYuLjljNjYzMzAgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Rv
bS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YQpAQCAtMTY2Miw2ICsxNjYyLDIyNCBAQAogCX0KIAog
CS8qKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0z
OTk3OTQKKwkgKiBSZWZlcmVuY2VFeHByZXNzaW9uIEZhbWlseSBUZXN0cworCSAqIAorCSAqIEB0
aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uCisJICovCisJcHVibGljIHZvaWQgdGVzdDM5OTc5NCgp
IHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29y
a2luZ0NvcHkoIi9Db252ZXJ0ZXIxOC9zcmMvdGVzdDM5OTc5NC9YLmphdmEiLAorCQkJCXRydWUv
KiByZXNvbHZlICovKTsKKwkJU3RyaW5nIGNvbnRlbnRzID0gInBhY2thZ2UgdGVzdDM5OTc5NDsi
ICsKKwkJCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLio7XG4gIiArCisJCQkJImludGVy
ZmFjZSBJIHtcbiIgKworCQkJCSIgICAgT2JqZWN0IGNvcHkoaW50IFtdIGlhKTtcbiIgKworCQkJ
CSJ9XG4iICsKKwkJCQkiaW50ZXJmYWNlIEoge1xuIiArCisJCQkJIgl2b2lkIGZvbyhpbnQgeCk7
XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNsYXNzIFhYIHtcbiIgKworCQkJCSIJcHVibGljICB2
b2lkIGZvbyhpbnQgeCkge31cbiIgKworCQkJCSJ9XG4iICsKKwkJCQkiXG4iICsKKwkJCQkiY2xh
c3MgWSB7XG4iICsKKwkJCQkiICAgICAgIHN0YXRpYyBjbGFzcyBaIHtcbiIgKworCQkJCSIgICAg
ICAgICAgICAgICBwdWJsaWMgc3RhdGljIHZvaWQgZm9vKGludCB4KSB7XG4iICsKKwkJCQkiICAg
ICAgICAgICAgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50KHgpO1xuIiArCisJCQkJIiAgICAg
ICAgICAgICAgIH1cbiIgKworCQkJCSIgICAgICAgfVxuIiArCisJCQkJIiAgICAgICBwdWJsaWMg
dm9pZCBmb28oaW50IHgpIHtcbiIgKworCQkJCSIgICAgICAgICAgICAgICBTeXN0ZW0ub3V0LnBy
aW50KHgpO1xuIiArCisJCQkJIiAgICAgICB9XG4iICsKKwkJCQkiCQlwdWJsaWMgPFQ+IHZvaWQg
Zm9vKFQgdCl7dC5oYXNoQ29kZSgpO31cbiIgKworCQkJCSJ9XG4iICsKKwkJCQkiXG4iICsKKwkJ
CQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBYWCB7XG4iICsKKwkJCQkiICAgICAgIEBTdXBwcmVz
c1dhcm5pbmdzKFwidW51c2VkXCIpXG4iICsKKwkJCQkiICAgICAgIHB1YmxpYyAgdm9pZCBiYXIo
U3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJCSIgICAgICAgICAgICAgICAgWSB5ID0gbmV3IFko
KTtcbiIgKworCQkJCSIgICAgICAgICAgICAgICAgSSBpID0gQE1hcmtlciBpbnQgW106OjxTdHJp
bmc+Y2xvbmU7XG4iICsKKwkJCQkiICAgICAgICAgICAgICAgIEogaiA9IFkuQE1hcmtlciBaICA6
OiBmb287XG4iICsKKwkJCQkiICAgICAgICAgICAgICAgIEogajEgPSBZLkBNYXJrZXIgWiAgOjog
PFN0cmluZz4gZm9vO1xuIiArCisJCQkJIiAgICAgICAgICAgICAgICBKIGpkYXNoID0gQE1hcmtl
ciBXPEBNYXJrZXIgSW50ZWdlcj4gOjogPFN0cmluZz4gbmV3IDtcbiIgKworCQkJCSIgICAgICAg
ICAgICAgICAgSiBqaiA9IHkgOjogZm9vO1xuIiArCisJCQkJIiAgICAgICAgICAgICAgICBKIGp4
ID0gc3VwZXIgOjogIGZvbztcbiIgKworCQkJCSIJCSAJICAgICBjbGFzcyBaIHtcbiIgKworCQkJ
CSIJCQkJCXZvaWQgZm9vKCkge1xuIiArCisJCQkJIgkJCQkJCUoganogPSBYLnN1cGVyIDo6IGZv
bztcbiIgKworCQkgICAgCSIJCQkJCX1cbiIgKworCQkJCSIJCQkJfVxuIiArCQkKKwkJCQkiICAg
ICAgIH1cbiIgKworCQkJCSIgICAgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4gKFN0cmluZyBb
XSBhcmdzKSB7fVxuIiArCisJCQkJIn1cbiIgKworCQkJCSJjbGFzcyBXPFQ+IGV4dGVuZHMgWSB7
XG4iICsKKwkJCQkiICAgICAgIHB1YmxpYyBXKFQgeCkge31cbiIgKworCQkJCSJ9XG4iICsKKwkJ
CQkiXG4iICsKKwkJCQkiQFRhcmdldCAoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJCQki
QGludGVyZmFjZSBNYXJrZXIge30iOworCQkJCisJCUNvbXBpbGF0aW9uVW5pdCBjdSA9IChDb21w
aWxhdGlvblVuaXQpIGJ1aWxkQVNUKGNvbnRlbnRzLCB0aGlzLndvcmtpbmdDb3B5KTsKKwkJVHlw
ZURlY2xhcmF0aW9uIHR5cGVEZWNsYXJhdGlvbiA9IChUeXBlRGVjbGFyYXRpb24pIGdldEFTVE5v
ZGUoY3UsIDQpOworCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2QgPSB0eXBlRGVjbGFyYXRpb24u
Z2V0TWV0aG9kcygpWzBdOworCQlMaXN0IHN0YXRlbWVudHMgPSBtZXRob2QuZ2V0Qm9keSgpLnN0
YXRlbWVudHMoKTsKKwkJYXNzZXJ0VHJ1ZShzdGF0ZW1lbnRzLnNpemUoKSA9PSA4KTsKKwkJaW50
IGZDb3VudCA9IDE7CisJCQorCQkvLyB0eXBlIG1ldGhvZCByZWZlcmVuY2Ugd2l0aCBwcmltaXRp
dmUgdHlwZSB3aXRoIHR5cGUgYXJndW1lbnRzCisJCVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1l
bnQgc3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIHN0YXRlbWVudHMu
Z2V0KGZDb3VudCsrKTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IGZyYWdtZW50ID0g
KFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgc3RhdGVtZW50LmZyYWdtZW50cygpLmdldCgw
KTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gZnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsK
KwkJYXNzZXJ0VHJ1ZShleHByZXNzaW9uIGluc3RhbmNlb2YgVHlwZU1ldGhvZFJlZmVyZW5jZSk7
CisJCVR5cGVNZXRob2RSZWZlcmVuY2UgdHlwZU1ldGhvZFJlZmVyZW5jZSA9IChUeXBlTWV0aG9k
UmVmZXJlbmNlKSBleHByZXNzaW9uOworCQljaGVja1NvdXJjZVJhbmdlKHR5cGVNZXRob2RSZWZl
cmVuY2UsICJATWFya2VyIGludCBbXTo6PFN0cmluZz5jbG9uZSIsIGNvbnRlbnRzKTsKKwkJSVR5
cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gdHlwZU1ldGhvZFJlZmVyZW5jZS5yZXNvbHZlVHlwZUJp
bmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCh0eXBlQmluZGluZyk7CisJCUlNZXRob2RCaW5kaW5n
IG1ldGhvZEJpbmRpbmcgPSB0eXBlTWV0aG9kUmVmZXJlbmNlLnJlc29sdmVNZXRob2RCaW5kaW5n
KCk7CisJCWFzc2VydE5vdE51bGwobWV0aG9kQmluZGluZyk7CisJCVR5cGUgdHlwZSA9IHR5cGVN
ZXRob2RSZWZlcmVuY2UuZ2V0VHlwZSgpOworCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJATWFy
a2VyIGludCBbXSIsIGNvbnRlbnRzKTsKKwkJTGlzdCB0eXBlQXJndW1lbnRzID0gdHlwZU1ldGhv
ZFJlZmVyZW5jZS50eXBlQXJndW1lbnRzKCk7CisJCWFzc2VydFRydWUodHlwZUFyZ3VtZW50cy5z
aXplKCkgPT0gMSk7CisJCXR5cGUgPSAoVHlwZSkgdHlwZUFyZ3VtZW50cy5nZXQoMCk7CisJCWNo
ZWNrU291cmNlUmFuZ2UodHlwZSwgIlN0cmluZyIsIGNvbnRlbnRzKTsKKwkJYXNzZXJ0VHJ1ZSh0
eXBlLmlzU2ltcGxlVHlwZSgpKTsKKwkJU2ltcGxlTmFtZSBuYW1lID0gdHlwZU1ldGhvZFJlZmVy
ZW5jZS5nZXROYW1lKCk7CisJCWNoZWNrU291cmNlUmFuZ2UobmFtZSwgImNsb25lIiwgY29udGVu
dHMpOworCQl0eXBlQmluZGluZyA9IG5hbWUucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2Vy
dE5vdE51bGwodHlwZUJpbmRpbmcpOworCisJCS8vIHR5cGUgbWV0aG9kIHJlZmVyZW5jZSB3aXRo
IHF1YWxpZmllZCB0eXBlIHdpdGhvdXQgdHlwZSBhcmd1bWVudHMKKwkJc3RhdGVtZW50ID0gKFZh
cmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIHN0YXRlbWVudHMuZ2V0KGZDb3VudCsrKTsKKwkJ
ZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBzdGF0ZW1lbnQuZnJhZ21l
bnRzKCkuZ2V0KDApOworCQlleHByZXNzaW9uID0gZnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsK
KwkJYXNzZXJ0VHJ1ZShleHByZXNzaW9uIGluc3RhbmNlb2YgVHlwZU1ldGhvZFJlZmVyZW5jZSk7
CisJCXR5cGVNZXRob2RSZWZlcmVuY2UgPSAoVHlwZU1ldGhvZFJlZmVyZW5jZSkgZXhwcmVzc2lv
bjsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlTWV0aG9kUmVmZXJlbmNlLCAiWS5ATWFya2VyIFog
IDo6IGZvbyIsIGNvbnRlbnRzKTsKKwkJdHlwZUJpbmRpbmcgPSB0eXBlTWV0aG9kUmVmZXJlbmNl
LnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKHR5cGVCaW5kaW5nKTsKKwkJ
bWV0aG9kQmluZGluZyA9IHR5cGVNZXRob2RSZWZlcmVuY2UucmVzb2x2ZU1ldGhvZEJpbmRpbmco
KTsKKwkJYXNzZXJ0Tm90TnVsbChtZXRob2RCaW5kaW5nKTsKKwkJdHlwZSA9IHR5cGVNZXRob2RS
ZWZlcmVuY2UuZ2V0VHlwZSgpOworCQlhc3NlcnRUcnVlKHR5cGUuaXNRdWFsaWZpZWRUeXBlKCkp
OworCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJZLkBNYXJrZXIgWiIsIGNvbnRlbnRzKTsKKwkJ
dHlwZUFyZ3VtZW50cyA9IHR5cGVNZXRob2RSZWZlcmVuY2UudHlwZUFyZ3VtZW50cygpOworCQlh
c3NlcnRUcnVlKHR5cGVBcmd1bWVudHMuc2l6ZSgpID09IDApOworCQluYW1lID0gdHlwZU1ldGhv
ZFJlZmVyZW5jZS5nZXROYW1lKCk7CisJCWNoZWNrU291cmNlUmFuZ2UobmFtZSwgImZvbyIsIGNv
bnRlbnRzKTsKKwkJdHlwZUJpbmRpbmcgPSBuYW1lLnJlc29sdmVUeXBlQmluZGluZygpOworCQlh
c3NlcnROb3ROdWxsKHR5cGVCaW5kaW5nKTsKKworCQkvLyB0eXBlIG1ldGhvZCByZWZlcmVuY2Ug
d2l0aCBxdWFsaWZpZWQgdHlwZSB3aXRoIHR5cGUgYXJndW1lbnRzCisJCXN0YXRlbWVudCA9IChW
YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBzdGF0ZW1lbnRzLmdldChmQ291bnQrKyk7CisJ
CWZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgc3RhdGVtZW50LmZyYWdt
ZW50cygpLmdldCgwKTsKKwkJZXhwcmVzc2lvbiA9IGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7
CisJCWFzc2VydFRydWUoZXhwcmVzc2lvbiBpbnN0YW5jZW9mIFR5cGVNZXRob2RSZWZlcmVuY2Up
OworCQl0eXBlTWV0aG9kUmVmZXJlbmNlID0gKFR5cGVNZXRob2RSZWZlcmVuY2UpIGV4cHJlc3Np
b247CisJCWNoZWNrU291cmNlUmFuZ2UodHlwZU1ldGhvZFJlZmVyZW5jZSwgIlkuQE1hcmtlciBa
ICA6OiA8U3RyaW5nPiBmb28iLCBjb250ZW50cyk7CisJCXR5cGVCaW5kaW5nID0gdHlwZU1ldGhv
ZFJlZmVyZW5jZS5yZXNvbHZlVHlwZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCh0eXBlQmlu
ZGluZyk7CisJCW1ldGhvZEJpbmRpbmcgPSB0eXBlTWV0aG9kUmVmZXJlbmNlLnJlc29sdmVNZXRo
b2RCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwobWV0aG9kQmluZGluZyk7CisJCXR5cGUgPSB0
eXBlTWV0aG9kUmVmZXJlbmNlLmdldFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZSh0eXBlLmlzUXVhbGlm
aWVkVHlwZSgpKTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiWS5ATWFya2VyIFoiLCBjb250
ZW50cyk7CisJCXR5cGVBcmd1bWVudHMgPSB0eXBlTWV0aG9kUmVmZXJlbmNlLnR5cGVBcmd1bWVu
dHMoKTsKKwkJYXNzZXJ0VHJ1ZSh0eXBlQXJndW1lbnRzLnNpemUoKSA9PSAxKTsKKwkJdHlwZSA9
IChUeXBlKSB0eXBlQXJndW1lbnRzLmdldCgwKTsKKwkJYXNzZXJ0VHJ1ZSh0eXBlLmlzU2ltcGxl
VHlwZSgpKTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiU3RyaW5nIiwgY29udGVudHMpOwor
CQluYW1lID0gdHlwZU1ldGhvZFJlZmVyZW5jZS5nZXROYW1lKCk7CisJCWNoZWNrU291cmNlUmFu
Z2UobmFtZSwgImZvbyIsIGNvbnRlbnRzKTsKKwkJdHlwZUJpbmRpbmcgPSBuYW1lLnJlc29sdmVU
eXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKHR5cGVCaW5kaW5nKTsKKworCQkvLyBjcmVh
dGlvbiBtZXRob2QgcmVmZXJlbmNlCisJCXN0YXRlbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9u
U3RhdGVtZW50KSBzdGF0ZW1lbnRzLmdldChmQ291bnQrKyk7CisJCWZyYWdtZW50ID0gKFZhcmlh
YmxlRGVjbGFyYXRpb25GcmFnbWVudCkgc3RhdGVtZW50LmZyYWdtZW50cygpLmdldCgwKTsKKwkJ
ZXhwcmVzc2lvbiA9IGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CisJCWFzc2VydFRydWUoZXhw
cmVzc2lvbiBpbnN0YW5jZW9mIENyZWF0aW9uUmVmZXJlbmNlKTsKKwkJQ3JlYXRpb25SZWZlcmVu
Y2UgY3JlYXRpb25SZWZlcmVuY2UgPSAoQ3JlYXRpb25SZWZlcmVuY2UpIGV4cHJlc3Npb247CisJ
CWNoZWNrU291cmNlUmFuZ2UoY3JlYXRpb25SZWZlcmVuY2UsICJATWFya2VyIFc8QE1hcmtlciBJ
bnRlZ2VyPiA6OiA8U3RyaW5nPiBuZXcgIiwgY29udGVudHMpOworCQl0eXBlQmluZGluZyA9IGNy
ZWF0aW9uUmVmZXJlbmNlLnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKHR5
cGVCaW5kaW5nKTsKKwkJbWV0aG9kQmluZGluZyA9IGNyZWF0aW9uUmVmZXJlbmNlLnJlc29sdmVN
ZXRob2RCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwobWV0aG9kQmluZGluZyk7CisJCUV4cHJl
c3Npb24gbGhzID0gY3JlYXRpb25SZWZlcmVuY2UuZ2V0RXhwcmVzc2lvbigpOworCQljaGVja1Nv
dXJjZVJhbmdlKGxocywgIkBNYXJrZXIgVzxATWFya2VyIEludGVnZXI+ICIsIGNvbnRlbnRzKTsK
KwkJdHlwZUFyZ3VtZW50cyA9IGNyZWF0aW9uUmVmZXJlbmNlLnR5cGVBcmd1bWVudHMoKTsKKwkJ
YXNzZXJ0VHJ1ZSh0eXBlQXJndW1lbnRzLnNpemUoKSA9PSAxKTsKKwkJdHlwZSA9IChUeXBlKSB0
eXBlQXJndW1lbnRzLmdldCgwKTsKKwkJYXNzZXJ0VHJ1ZSh0eXBlLmlzU2ltcGxlVHlwZSgpKTsK
KwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiU3RyaW5nIiwgY29udGVudHMpOworCisJCS8vIGV4
cHJlc3Npb24gbWV0aG9kIHJlZmVyZW5jZQorCQlzdGF0ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJh
dGlvblN0YXRlbWVudCkgc3RhdGVtZW50cy5nZXQoZkNvdW50KyspOworCQlmcmFnbWVudCA9IChW
YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIHN0YXRlbWVudC5mcmFnbWVudHMoKS5nZXQoMCk7
CisJCWV4cHJlc3Npb24gPSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlhc3NlcnRUcnVl
KGV4cHJlc3Npb24gaW5zdGFuY2VvZiBFeHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlKTsKKwkJRXhw
cmVzc2lvbk1ldGhvZFJlZmVyZW5jZSBleHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlID0gKEV4cHJl
c3Npb25NZXRob2RSZWZlcmVuY2UpIGV4cHJlc3Npb247CisJCWNoZWNrU291cmNlUmFuZ2UoZXhw
cmVzc2lvbk1ldGhvZFJlZmVyZW5jZSwgInkgOjogZm9vIiwgY29udGVudHMpOworCQl0eXBlQmlu
ZGluZyA9IGV4cHJlc3Npb25NZXRob2RSZWZlcmVuY2UucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJ
CWFzc2VydE5vdE51bGwodHlwZUJpbmRpbmcpOworCQltZXRob2RCaW5kaW5nID0gZXhwcmVzc2lv
bk1ldGhvZFJlZmVyZW5jZS5yZXNvbHZlTWV0aG9kQmluZGluZygpOworCQlhc3NlcnROb3ROdWxs
KG1ldGhvZEJpbmRpbmcpOworCQlsaHMgPSBleHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlLmdldEV4
cHJlc3Npb24oKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShsaHMsICJ5IiwgY29udGVudHMpOworCQl0
eXBlQXJndW1lbnRzID0gZXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZS50eXBlQXJndW1lbnRzKCk7
CisJCWFzc2VydFRydWUodHlwZUFyZ3VtZW50cy5zaXplKCkgPT0gMCk7CisJCW5hbWUgPSBleHBy
ZXNzaW9uTWV0aG9kUmVmZXJlbmNlLmdldE5hbWUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShuYW1l
LCAiZm9vIiwgY29udGVudHMpOworCQl0eXBlQmluZGluZyA9IG5hbWUucmVzb2x2ZVR5cGVCaW5k
aW5nKCk7CisJCWFzc2VydE5vdE51bGwodHlwZUJpbmRpbmcpOworCisJCS8vIHN1cGVyIG1ldGhv
ZCByZWZlcmVuY2Ugd2l0aG91dCBxdWFsaWZpZXIKKwkJc3RhdGVtZW50ID0gKFZhcmlhYmxlRGVj
bGFyYXRpb25TdGF0ZW1lbnQpIHN0YXRlbWVudHMuZ2V0KGZDb3VudCsrKTsKKwkJZnJhZ21lbnQg
PSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBzdGF0ZW1lbnQuZnJhZ21lbnRzKCkuZ2V0
KDApOworCQlleHByZXNzaW9uID0gZnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKKwkJYXNzZXJ0
VHJ1ZShleHByZXNzaW9uIGluc3RhbmNlb2YgU3VwZXJNZXRob2RSZWZlcmVuY2UpOworCQlTdXBl
ck1ldGhvZFJlZmVyZW5jZSBzdXBlck1ldGhvZFJlZmVyZW5jZSA9IChTdXBlck1ldGhvZFJlZmVy
ZW5jZSkgZXhwcmVzc2lvbjsKKwkJY2hlY2tTb3VyY2VSYW5nZShzdXBlck1ldGhvZFJlZmVyZW5j
ZSwgInN1cGVyIDo6ICBmb28iLCBjb250ZW50cyk7CisJCXR5cGVCaW5kaW5nID0gc3VwZXJNZXRo
b2RSZWZlcmVuY2UucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwodHlwZUJp
bmRpbmcpOworCQltZXRob2RCaW5kaW5nID0gc3VwZXJNZXRob2RSZWZlcmVuY2UucmVzb2x2ZU1l
dGhvZEJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbChtZXRob2RCaW5kaW5nKTsKKwkJYXNzZXJ0
TnVsbChzdXBlck1ldGhvZFJlZmVyZW5jZS5nZXRRdWFsaWZpZXIoKSk7CQkKKwkJdHlwZUFyZ3Vt
ZW50cyA9IHN1cGVyTWV0aG9kUmVmZXJlbmNlLnR5cGVBcmd1bWVudHMoKTsKKwkJYXNzZXJ0VHJ1
ZSh0eXBlQXJndW1lbnRzLnNpemUoKSA9PSAwKTsKKwkJbmFtZSA9IHN1cGVyTWV0aG9kUmVmZXJl
bmNlLmdldE5hbWUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShuYW1lLCAiZm9vIiwgY29udGVudHMp
OworCQl0eXBlQmluZGluZyA9IG5hbWUucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5v
dE51bGwodHlwZUJpbmRpbmcpOworCisJCS8vIHN1cGVyIG1ldGhvZCByZWZlcmVuY2Ugd2l0aCBx
dWFsaWZpZXIKKwkJVHlwZURlY2xhcmF0aW9uU3RhdGVtZW50IHR5cGVEZWNsYXJhdGlvblN0YXRl
bWVudCA9IChUeXBlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIHN0YXRlbWVudHMuZ2V0KGZDb3VudCk7
CisJCXR5cGVEZWNsYXJhdGlvbiA9IChUeXBlRGVjbGFyYXRpb24pIHR5cGVEZWNsYXJhdGlvblN0
YXRlbWVudC5nZXREZWNsYXJhdGlvbigpOworCQltZXRob2QgPSB0eXBlRGVjbGFyYXRpb24uZ2V0
TWV0aG9kcygpWzBdOworCQlzdGF0ZW1lbnRzID0gbWV0aG9kLmdldEJvZHkoKS5zdGF0ZW1lbnRz
KCk7CisJCWFzc2VydFRydWUoc3RhdGVtZW50cy5zaXplKCkgPT0gMSk7CisJCXN0YXRlbWVudCA9
IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBzdGF0ZW1lbnRzLmdldCgwKTsKKwkJZnJh
Z21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBzdGF0ZW1lbnQuZnJhZ21lbnRz
KCkuZ2V0KDApOworCQlleHByZXNzaW9uID0gZnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKKwkJ
YXNzZXJ0VHJ1ZShleHByZXNzaW9uIGluc3RhbmNlb2YgU3VwZXJNZXRob2RSZWZlcmVuY2UpOwor
CQlzdXBlck1ldGhvZFJlZmVyZW5jZSA9IChTdXBlck1ldGhvZFJlZmVyZW5jZSkgZXhwcmVzc2lv
bjsKKwkJY2hlY2tTb3VyY2VSYW5nZShzdXBlck1ldGhvZFJlZmVyZW5jZSwgIlguc3VwZXIgOjog
Zm9vIiwgY29udGVudHMpOworCQl0eXBlQmluZGluZyA9IHN1cGVyTWV0aG9kUmVmZXJlbmNlLnJl
c29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKHR5cGVCaW5kaW5nKTsKKwkJbWV0
aG9kQmluZGluZyA9IHN1cGVyTWV0aG9kUmVmZXJlbmNlLnJlc29sdmVNZXRob2RCaW5kaW5nKCk7
CisJCWFzc2VydE5vdE51bGwobWV0aG9kQmluZGluZyk7CisJCW5hbWUgPSAoU2ltcGxlTmFtZSkg
c3VwZXJNZXRob2RSZWZlcmVuY2UuZ2V0UXVhbGlmaWVyKCk7CisJCWNoZWNrU291cmNlUmFuZ2Uo
bmFtZSwgIlgiLCBjb250ZW50cyk7CQkKKwkJdHlwZUFyZ3VtZW50cyA9IHN1cGVyTWV0aG9kUmVm
ZXJlbmNlLnR5cGVBcmd1bWVudHMoKTsKKwkJYXNzZXJ0VHJ1ZSh0eXBlQXJndW1lbnRzLnNpemUo
KSA9PSAwKTsKKwkJbmFtZSA9IHN1cGVyTWV0aG9kUmVmZXJlbmNlLmdldE5hbWUoKTsKKwkJY2hl
Y2tTb3VyY2VSYW5nZShuYW1lLCAiZm9vIiwgY29udGVudHMpOworCQl0eXBlQmluZGluZyA9IG5h
bWUucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwodHlwZUJpbmRpbmcpOwor
CQorCX0KKwkKKwkvKioKIAkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1
Zy5jZ2k/aWQ9Mzk5NzkzCiAJICogCiAJICogQHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24KZGlm
ZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUTWF0Y2hlclRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNU
TWF0Y2hlclRlc3QuamF2YQppbmRleCA0ZWM3NzU5Li42NWYyZjU0IDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvZG9tL0FTVE1hdGNoZXJUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RNYXRjaGVyVGVz
dC5qYXZhCkBAIC01MDQsNiArNTA0LDkgQEAKIAkJcHVibGljIGJvb2xlYW4gbWF0Y2goU3VwZXJN
ZXRob2RJbnZvY2F0aW9uIG5vZGUsIE9iamVjdCBvdGhlcikgewogCQkJcmV0dXJuIHN0YW5kYXJk
Qm9keShub2RlLCBvdGhlciwgdGhpcy5zdXBlck1hdGNoID8gc3VwZXIubWF0Y2gobm9kZSwgb3Ro
ZXIpIDogZmFsc2UpOwogCQl9CisJCXB1YmxpYyBib29sZWFuIG1hdGNoKFN1cGVyTWV0aG9kUmVm
ZXJlbmNlIG5vZGUsIE9iamVjdCBvdGhlcikgeworCQkJcmV0dXJuIHN0YW5kYXJkQm9keShub2Rl
LCBvdGhlciwgdGhpcy5zdXBlck1hdGNoID8gc3VwZXIubWF0Y2gobm9kZSwgb3RoZXIpIDogZmFs
c2UpOworCQl9CiAJCXB1YmxpYyBib29sZWFuIG1hdGNoKFN3aXRjaENhc2Ugbm9kZSwgT2JqZWN0
IG90aGVyKSB7CiAJCQlyZXR1cm4gc3RhbmRhcmRCb2R5KG5vZGUsIG90aGVyLCB0aGlzLnN1cGVy
TWF0Y2ggPyBzdXBlci5tYXRjaChub2RlLCBvdGhlcikgOiBmYWxzZSk7CiAJCX0KQEAgLTU2Miw2
ICs1NjUsMTUgQEAKIAkJCXJldHVybiBzdGFuZGFyZEJvZHkobm9kZSwgb3RoZXIsIHRoaXMuc3Vw
ZXJNYXRjaCA/IHN1cGVyLm1hdGNoKG5vZGUsIG90aGVyKSA6IGZhbHNlKTsKIAkJfQogCQlwdWJs
aWMgYm9vbGVhbiBtYXRjaChMYW1iZGFFeHByZXNzaW9uIG5vZGUsIE9iamVjdCBvdGhlcikgewor
CQkJcmV0dXJuIHN0YW5kYXJkQm9keShub2RlLCBvdGhlciwgdGhpcy5zdXBlck1hdGNoID8gc3Vw
ZXIubWF0Y2gobm9kZSwgb3RoZXIpIDogZmFsc2UpOworCQl9CisJCXB1YmxpYyBib29sZWFuIG1h
dGNoKENyZWF0aW9uUmVmZXJlbmNlIG5vZGUsIE9iamVjdCBvdGhlcikgeworCQkJcmV0dXJuIHN0
YW5kYXJkQm9keShub2RlLCBvdGhlciwgdGhpcy5zdXBlck1hdGNoID8gc3VwZXIubWF0Y2gobm9k
ZSwgb3RoZXIpIDogZmFsc2UpOworCQl9CisJCXB1YmxpYyBib29sZWFuIG1hdGNoKEV4cHJlc3Np
b25NZXRob2RSZWZlcmVuY2Ugbm9kZSwgT2JqZWN0IG90aGVyKSB7CisJCQlyZXR1cm4gc3RhbmRh
cmRCb2R5KG5vZGUsIG90aGVyLCB0aGlzLnN1cGVyTWF0Y2ggPyBzdXBlci5tYXRjaChub2RlLCBv
dGhlcikgOiBmYWxzZSk7CisJCX0KKwkJcHVibGljIGJvb2xlYW4gbWF0Y2goVHlwZU1ldGhvZFJl
ZmVyZW5jZSBub2RlLCBPYmplY3Qgb3RoZXIpIHsKIAkJCXJldHVybiBzdGFuZGFyZEJvZHkobm9k
ZSwgb3RoZXIsIHRoaXMuc3VwZXJNYXRjaCA/IHN1cGVyLm1hdGNoKG5vZGUsIG90aGVyKSA6IGZh
bHNlKTsKIAkJfQogCQlwdWJsaWMgYm9vbGVhbiBtYXRjaChJbnRlcnNlY3Rpb25UeXBlIG5vZGUs
IE9iamVjdCBvdGhlcikgewpAQCAtODcwLDYgKzg4MiwxNSBAQAogCQl4MS5zZXRMYWJlbCh0aGlz
Lk4xKTsKIAkJYmFzaWNNYXRjaCh4MSk7CiAJfQorCS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTk3OTQKKwlwdWJsaWMgdm9pZCB0ZXN0Q3JlYXRpb25S
ZWZlcmVuY2UoKSB7CisJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsKKwkJ
CXJldHVybjsKKwkJfQorCQlDcmVhdGlvblJlZmVyZW5jZSB4MSA9IHRoaXMuYXN0Lm5ld0NyZWF0
aW9uUmVmZXJlbmNlKHRoaXMuRTEpOworCQliYXNpY01hdGNoKHgxKTsKKwl9CisJCiAJcHVibGlj
IHZvaWQgdGVzdERvU3RhdGVtZW50KCkgewogCQlEb1N0YXRlbWVudCB4MSA9IHRoaXMuYXN0Lm5l
d0RvU3RhdGVtZW50KCk7CiAJCXgxLnNldEV4cHJlc3Npb24odGhpcy5FMSk7CkBAIC05MjUsNiAr
OTQ2LDE1IEBACiAJCXgxLmJvZHlEZWNsYXJhdGlvbnMoKS5hZGQodGhpcy5GRDIpOwogCQliYXNp
Y01hdGNoKHgxKTsKIAl9CisJLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTM5OTc5NAorCXB1YmxpYyB2b2lkIHRlc3RFeHByZXNzaW9uTWV0aG9kUmVmZXJl
bmNlKCkgeworCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQlyZXR1
cm47CisJCX0KKwkJRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZSB4MSA9IHRoaXMuYXN0Lm5ld0V4
cHJlc3Npb25NZXRob2RSZWZlcmVuY2UodGhpcy5FMSwgdGhpcy5OMSk7CisJCWJhc2ljTWF0Y2go
eDEpOworCX0KKwkKIAlwdWJsaWMgdm9pZCB0ZXN0RXhwcmVzc2lvblN0YXRlbWVudCgpIHsKIAkJ
RXhwcmVzc2lvblN0YXRlbWVudCB4MSA9IHRoaXMuYXN0Lm5ld0V4cHJlc3Npb25TdGF0ZW1lbnQo
dGhpcy5FMSk7CiAJCWJhc2ljTWF0Y2goeDEpOwpAQCAtMTE1NSw2ICsxMTg1LDE0IEBACiAJCXgx
LnNldE5hbWUodGhpcy5OMik7CiAJCXgxLmFyZ3VtZW50cygpLmFkZCh0aGlzLkUxKTsKIAkJeDEu
YXJndW1lbnRzKCkuYWRkKHRoaXMuRTIpOworCQliYXNpY01hdGNoKHgxKTsKKwl9CisJcHVibGlj
IHZvaWQgdGVzdFN1cGVyTWV0aG9kUmVmZXJlbmNlKCkgeworCQlpZiAodGhpcy5hc3QuYXBpTGV2
ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQlyZXR1cm47CisJCX0KKwkJU3VwZXJNZXRob2RSZWZlcmVu
Y2UgeDEgPSB0aGlzLmFzdC5uZXdTdXBlck1ldGhvZFJlZmVyZW5jZSh0aGlzLk4yKTsKKwkJeDEu
c2V0UXVhbGlmaWVyKHRoaXMuTjEpOwogCQliYXNpY01hdGNoKHgxKTsKIAl9CiAJcHVibGljIHZv
aWQgdGVzdFN3aXRjaENhc2UoKSB7CkBAIC0xNTg5LDYgKzE2MjcsMTUgQEAKIAkJYmFzaWNNYXRj
aCh4MSk7CiAJfQogCisJLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTM5OTc5NAorCXB1YmxpYyB2b2lkIHRlc3RUeXBlTWV0aG9kUmVmZXJlbmNlKCkgewor
CQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQlyZXR1cm47CisJCX0K
KwkJVHlwZU1ldGhvZFJlZmVyZW5jZSB4MSA9IHRoaXMuYXN0Lm5ld1R5cGVNZXRob2RSZWZlcmVu
Y2UodGhpcy5UMSwgdGhpcy5OMSk7CisJCWJhc2ljTWF0Y2goeDEpOworCX0KKwkKIAkvLyBodHRw
czovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Mzk5NzkzCiAJcHVibGlj
IHZvaWQgdGVzdExhbWJkYUV4cHJlc3Npb25zMSgpIHsKIAkJaWYgKHRoaXMuYXN0LmFwaUxldmVs
KCkgPCBBU1QuSkxTOCkgewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
bW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RTdHJ1Y3R1cmFsUHJv
cGVydHlUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFN0cnVjdHVyYWxQcm9wZXJ0eVRlc3QuamF2
YQppbmRleCBjMjM2YTBiLi4yYmY0Yjg3IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFN0cnVj
dHVyYWxQcm9wZXJ0eVRlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5t
b2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFN0cnVjdHVyYWxQcm9w
ZXJ0eVRlc3QuamF2YQpAQCAtMzI4LDcgKzMyOCw3IEBACiAJCQkJbWF4Tm9kZVR5cGUgPSA4NDsK
IAkJCQlicmVhazsKIAkJCWNhc2UgQVNULkpMUzg6Ci0JCQkJbWF4Tm9kZVR5cGUgPSA4ODsKKwkJ
CQltYXhOb2RlVHlwZSA9IDkyOwogCQkJCWJyZWFrOwogCQkJZGVmYXVsdDoKIAkJCQlmYWlsKCk7
CkBAIC0zNzIsNyArMzcyLDcgQEAKIAkJCQkvLyBvb3BzIC0gZ3Vlc3MgdGhhdCdzIG5vdCB2YWxp
ZAogCQkJfQogCQl9Ci0JCWFzc2VydEVxdWFscygiV3JvbmcgbGFzdCBrbm93biB0eXBlIiwgODgs
IGhpKTsgLy8gbGFzdCBrbm93biBvbmUKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBsYXN0IGtub3du
IHR5cGUiLCA5MiwgaGkpOyAvLyBsYXN0IGtub3duIG9uZQogCQlhc3NlcnRFcXVhbHMoIldyb25n
IG51bWJlciBvZiBkaXN0aW5jdCB0eXBlcyIsICBoaSwgY2xhc3Nlcy5zaXplKCkpOyAvLyBhbGwg
Y2xhc3NlcyBhcmUgZGlzdGluY3QKIAl9CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFRl
c3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUVGVzdC5qYXZhCmluZGV4IDUyYzhkZDIuLjZlYjMwYTkg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNU
VGVzdC5qYXZhCkBAIC04Nzg1LDYgKzg3ODUsMTAgQEAKIAkJCUFTVE5vZGUuTEFNQkRBX0VYUFJF
U1NJT04sCiAJCQlBU1ROb2RlLklOVEVSU0VDVElPTl9UWVBFLAogCQkJQVNUTm9kZS5QQUNLQUdF
X1FVQUxJRklFRF9UWVBFLAorCQkJQVNUTm9kZS5DUkVBVElPTl9SRUZFUkVOQ0UsCisJCQlBU1RO
b2RlLkVYUFJFU1NJT05fTUVUSE9EX1JFRkVSRU5DRSwKKwkJCUFTVE5vZGUuU1VQRVJfTUVUSE9E
X1JFRkVSRU5DRSwKKwkJCUFTVE5vZGUuVFlQRV9NRVRIT0RfUkVGRVJFTkNFCiAJCX07CiAJCQog
CQkvLyBhc3NlcnQgdGhhdCBub2RlVHlwZSB2YWx1ZXMgYXJlIGNvcnJlY3Q6CmRpZmYgLS1naXQg
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvZG9tL0FTVFZpc2l0b3JUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFZpc2l0b3JU
ZXN0LmphdmEKaW5kZXggZmYwZGIzYS4uNDk2MWMwOSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9B
U1RWaXNpdG9yVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVs
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUVmlzaXRvclRlc3QuamF2YQpA
QCAtNzEyLDYgKzcxMiwyMiBAQAogCQkJQVNUVmlzaXRvclRlc3QudGhpcy5iLmFwcGVuZCgiKi8p
Iik7IC8vJE5PTi1OTFMtMSQKIAkJfQogCisJCXB1YmxpYyBib29sZWFuIHZpc2l0KENyZWF0aW9u
UmVmZXJlbmNlIG5vZGUpIHsKKwkJCUFTVFZpc2l0b3JUZXN0LnRoaXMuYi5hcHBlbmQoIihlQ1Ii
KTsgLy8kTk9OLU5MUy0xJAorCQkJcmV0dXJuIGlzVmlzaXRpbmdDaGlsZHJlbigpOworCQl9CisJ
CXB1YmxpYyB2b2lkIGVuZFZpc2l0KENyZWF0aW9uUmVmZXJlbmNlIG5vZGUpIHsKKwkJCUFTVFZp
c2l0b3JUZXN0LnRoaXMuYi5hcHBlbmQoImVDUikiKTsgLy8kTk9OLU5MUy0xJAorCQl9CisKKwkJ
cHVibGljIGJvb2xlYW4gdmlzaXQoRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZSBub2RlKSB7CisJ
CQlBU1RWaXNpdG9yVGVzdC50aGlzLmIuYXBwZW5kKCIoZUVNUiIpOyAvLyROT04tTkxTLTEkCisJ
CQlyZXR1cm4gaXNWaXNpdGluZ0NoaWxkcmVuKCk7CisJCX0KKwkJcHVibGljIHZvaWQgZW5kVmlz
aXQoRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZSBub2RlKSB7CisJCQlBU1RWaXNpdG9yVGVzdC50
aGlzLmIuYXBwZW5kKCJlRU1SKSIpOyAvLyROT04tTkxTLTEkCisJCX0KKwogCQlwdWJsaWMgYm9v
bGVhbiB2aXNpdChMaW5lQ29tbWVudCBub2RlKSB7CiAJCQlBU1RWaXNpdG9yVGVzdC50aGlzLmIu
YXBwZW5kKCIoLy8iKTsgLy8kTk9OLU5MUy0xJAogCQkJcmV0dXJuIGlzVmlzaXRpbmdDaGlsZHJl
bigpOwpAQCAtODkyLDYgKzkwOCwxNCBAQAogCQkJQVNUVmlzaXRvclRlc3QudGhpcy5iLmFwcGVu
ZCgiZVNNKSIpOyAvLyROT04tTkxTLTEkCiAJCX0KIAorCQlwdWJsaWMgYm9vbGVhbiB2aXNpdChT
dXBlck1ldGhvZFJlZmVyZW5jZSBub2RlKSB7CisJCQlBU1RWaXNpdG9yVGVzdC50aGlzLmIuYXBw
ZW5kKCIoZVNNUiIpOyAvLyROT04tTkxTLTEkCisJCQlyZXR1cm4gaXNWaXNpdGluZ0NoaWxkcmVu
KCk7CisJCX0KKwkJcHVibGljIHZvaWQgZW5kVmlzaXQoU3VwZXJNZXRob2RSZWZlcmVuY2Ugbm9k
ZSkgeworCQkJQVNUVmlzaXRvclRlc3QudGhpcy5iLmFwcGVuZCgiZVNNUikiKTsgLy8kTk9OLU5M
Uy0xJAorCQl9CisKIAkJcHVibGljIGJvb2xlYW4gdmlzaXQoU3dpdGNoQ2FzZSBub2RlKSB7CiAJ
CQlBU1RWaXNpdG9yVGVzdC50aGlzLmIuYXBwZW5kKCIoc1NDIik7IC8vJE5PTi1OTFMtMSQKIAkJ
CXJldHVybiBpc1Zpc2l0aW5nQ2hpbGRyZW4oKTsKQEAgLTk2Miw2ICs5ODYsMTQgQEAKIAkJfQog
CQlwdWJsaWMgdm9pZCBlbmRWaXNpdChUeXBlTGl0ZXJhbCBub2RlKSB7CiAJCQlBU1RWaXNpdG9y
VGVzdC50aGlzLmIuYXBwZW5kKCJlVEwpIik7IC8vJE5PTi1OTFMtMSQKKwkJfQorCisJCXB1Ymxp
YyBib29sZWFuIHZpc2l0KFR5cGVNZXRob2RSZWZlcmVuY2Ugbm9kZSkgeworCQkJQVNUVmlzaXRv
clRlc3QudGhpcy5iLmFwcGVuZCgiKGVUTVIiKTsgLy8kTk9OLU5MUy0xJAorCQkJcmV0dXJuIGlz
VmlzaXRpbmdDaGlsZHJlbigpOworCQl9CisJCXB1YmxpYyB2b2lkIGVuZFZpc2l0KFR5cGVNZXRo
b2RSZWZlcmVuY2Ugbm9kZSkgeworCQkJQVNUVmlzaXRvclRlc3QudGhpcy5iLmFwcGVuZCgiZVRN
UikiKTsgLy8kTk9OLU5MUy0xJAogCQl9CiAKIAkJcHVibGljIGJvb2xlYW4gdmlzaXQoVHlwZVBh
cmFtZXRlciBub2RlKSB7CkBAIC0xNDE2LDYgKzE0NDgsMTggQEAKIAkJU3RyaW5nIHJlc3VsdCA9
IHRoaXMuYi50b1N0cmluZygpOwogCQlhc3NlcnRUcnVlKHJlc3VsdC5lcXVhbHMoIlsoc0NOIit0
aGlzLk4xUysic0NOKV0iKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAogCX0KKworCXB1
YmxpYyB2b2lkIHRlc3RDcmVhdGlvblJlZmVyZW5jZSgpIHsKKwkJaWYgKHRoaXMuYXN0LmFwaUxl
dmVsKCkgPCBBU1QuSkxTOCkKKwkJCXJldHVybjsKKwkJQ3JlYXRpb25SZWZlcmVuY2UgeDEgPSB0
aGlzLmFzdC5uZXdDcmVhdGlvblJlZmVyZW5jZSh0aGlzLkUxKTsKKwkJVGVzdFZpc2l0b3IgdjEg
PSBuZXcgVGVzdFZpc2l0b3IoKTsKKwkJdGhpcy5iLnNldExlbmd0aCgwKTsKKwkJeDEuYWNjZXB0
KHYxKTsKKwkJU3RyaW5nIHJlc3VsdCA9IHRoaXMuYi50b1N0cmluZygpOworCQlhc3NlcnRUcnVl
KHJlc3VsdC5lcXVhbHMoIlsoZUNSIit0aGlzLkUxUysiZUNSKV0iKSk7IC8vJE5PTi1OTFMtMSQg
Ly8kTk9OLU5MUy0yJAorCX0KKwogCXB1YmxpYyB2b2lkIHRlc3REb1N0YXRlbWVudCgpIHsKIAkJ
RG9TdGF0ZW1lbnQgeDEgPSB0aGlzLmFzdC5uZXdEb1N0YXRlbWVudCgpOwogCQl4MS5zZXRFeHBy
ZXNzaW9uKHRoaXMuRTEpOwpAQCAtMTQ3Niw2ICsxNTIwLDE3IEBACiAJCVN0cmluZyByZXN1bHQg
PSB0aGlzLmIudG9TdHJpbmcoKTsKIAkJYXNzZXJ0VHJ1ZShyZXN1bHQuZXF1YWxzKCJbKEVEIit0
aGlzLkpEMVMrdGhpcy5NT0QxUyt0aGlzLk1PRDJTK3RoaXMuTjFTK3RoaXMuVDFTK3RoaXMuVDJT
K3RoaXMuRUMxUyt0aGlzLkVDMlMrdGhpcy5GRDFTK3RoaXMuRkQyUysiRUQpXSIpKTsgLy8kTk9O
LU5MUy0xJCAvLyROT04tTkxTLTIkCiAJfQorCXB1YmxpYyB2b2lkIHRlc3RFeHByZXNzaW9uTWV0
aG9kUmVmZXJlbmNlKCkgeworCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KQor
CQkJcmV0dXJuOworCQlFeHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlIHgxID0gdGhpcy5hc3QubmV3
RXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZSh0aGlzLkUxLCB0aGlzLk4xKTsKKwkJVGVzdFZpc2l0
b3IgdjEgPSBuZXcgVGVzdFZpc2l0b3IoKTsKKwkJdGhpcy5iLnNldExlbmd0aCgwKTsKKwkJeDEu
YWNjZXB0KHYxKTsKKwkJU3RyaW5nIHJlc3VsdCA9IHRoaXMuYi50b1N0cmluZygpOworCQlhc3Nl
cnRUcnVlKHJlc3VsdC5lcXVhbHMoIlsoZUVNUiIrdGhpcy5FMVMrdGhpcy5OMVMrImVFTVIpXSIp
KTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJfQorCiAJcHVibGljIHZvaWQgdGVzdEV4
cHJlc3Npb25TdGF0ZW1lbnQoKSB7CiAJCUV4cHJlc3Npb25TdGF0ZW1lbnQgeDEgPSB0aGlzLmFz
dC5uZXdFeHByZXNzaW9uU3RhdGVtZW50KHRoaXMuRTEpOwogCQlUZXN0VmlzaXRvciB2MSA9IG5l
dyBUZXN0VmlzaXRvcigpOwpAQCAtMjAwOSw2ICsyMDY0LDE4IEBACiAJCQlhc3NlcnRUcnVlKHJl
c3VsdC5lcXVhbHMoIlsoZVNNIit0aGlzLk4xUyt0aGlzLlBUMVMrdGhpcy5OMlMrdGhpcy5FMVMr
dGhpcy5FMlMrImVTTSldIikpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKIAkJfQogCX0K
KwlwdWJsaWMgdm9pZCB0ZXN0U3VwZXJNZXRob2RSZWZlcmVuY2UoKSB7CisJCWlmICh0aGlzLmFz
dC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsKKwkJCXJldHVybjsKKwkJfQorCQlTdXBlck1ldGhv
ZFJlZmVyZW5jZSB4MSA9IHRoaXMuYXN0Lm5ld1N1cGVyTWV0aG9kUmVmZXJlbmNlKHRoaXMuTjIp
OworCQl4MS5zZXRRdWFsaWZpZXIodGhpcy5OMSk7CisJCVRlc3RWaXNpdG9yIHYxID0gbmV3IFRl
c3RWaXNpdG9yKCk7CisJCXRoaXMuYi5zZXRMZW5ndGgoMCk7CisJCXgxLmFjY2VwdCh2MSk7CisJ
CVN0cmluZyByZXN1bHQgPSB0aGlzLmIudG9TdHJpbmcoKTsKKwkJYXNzZXJ0VHJ1ZShyZXN1bHQu
ZXF1YWxzKCJbKGVTTVIiK3RoaXMuTjFTK3RoaXMuTjJTKyJlU01SKV0iKSk7IC8vJE5PTi1OTFMt
MSQgLy8kTk9OLU5MUy0yJAorCX0KIAlwdWJsaWMgdm9pZCB0ZXN0U3dpdGNoQ2FzZSgpIHsKIAkJ
U3dpdGNoQ2FzZSB4MSA9IHRoaXMuYXN0Lm5ld1N3aXRjaENhc2UoKTsKIAkJeDEuc2V0RXhwcmVz
c2lvbih0aGlzLkUxKTsKQEAgLTIxNTUsNiArMjIyMiwxNyBAQAogCQlTdHJpbmcgcmVzdWx0ID0g
dGhpcy5iLnRvU3RyaW5nKCk7CiAJCWFzc2VydFRydWUocmVzdWx0LmVxdWFscygiWyhlVEwiK3Ro
aXMuVDFTKyJlVEwpXSIpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCiAJfQorCXB1Ymxp
YyB2b2lkIHRlc3RUeXBlTWV0aG9kUmVmZXJlbmNlKCkgeworCQlpZiAodGhpcy5hc3QuYXBpTGV2
ZWwoKSA8IEFTVC5KTFM4KQorCQkJcmV0dXJuOworCQlUeXBlTWV0aG9kUmVmZXJlbmNlIHgxID0g
dGhpcy5hc3QubmV3VHlwZU1ldGhvZFJlZmVyZW5jZSh0aGlzLlQxLCB0aGlzLk4xKTsKKwkJVGVz
dFZpc2l0b3IgdjEgPSBuZXcgVGVzdFZpc2l0b3IoKTsKKwkJdGhpcy5iLnNldExlbmd0aCgwKTsK
KwkJeDEuYWNjZXB0KHYxKTsKKwkJU3RyaW5nIHJlc3VsdCA9IHRoaXMuYi50b1N0cmluZygpOwor
CQlhc3NlcnRUcnVlKHJlc3VsdC5lcXVhbHMoIlsoZVRNUiIrdGhpcy5UMVMrdGhpcy5OMVMrImVU
TVIpXSIpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJfQorCiAJLyoqIEBkZXByZWNh
dGVkIHVzaW5nIGRlcHJlY2F0ZWQgY29kZSAqLwogCXB1YmxpYyB2b2lkIHRlc3RTaW5nbGVWYXJp
YWJsZURlY2xhcmF0aW9uKCkgewogCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIHgxID0gdGhp
cy5hc3QubmV3U2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbigpOwpkaWZmIC0tZ2l0IGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1QuamF2YSBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNULmphdmEK
aW5kZXggMjA3ODFjMy4uNDQ1YzgwYSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
ZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVC5qYXZhCkBAIC0xMzQ2LDYg
KzEzNDYsMjAgQEAKIAl9CiAKIAkvKioKKwkgKiBDcmVhdGVzIGFuIHVucGFyZW50ZWQgY3JlYXRp
b24gcmVmZXJlbmNlIG5vZGUgb3duZWQgYnkgdGhpcyBBU1QuCisJICogCisJICogQHBhcmFtIGV4
cHJlc3Npb24gZXhwcmVzc2lvbiBmb3IgdGhlIGxlZnQgaGFuZCBzaWRlIG9mIENyZWF0aW9uUmVm
ZXJlbmNlCisJICogQHJldHVybiBhIG5ldyB1bnBhcmVudGVkIHJlZmVyZW5jZSBleHByZXNzaW9u
IG5vZGUKKwkgKiBAZXhjZXB0aW9uIFVuc3VwcG9ydGVkT3BlcmF0aW9uRXhjZXB0aW9uIGlmIHRo
aXMgb3BlcmF0aW9uIGlzIHVzZWQgaW4gYSBKTFMyLCBKTFMzIG9yIEpMUzQgQVNUCisJICogQHNp
bmNlIDMuOSBCRVRBX0pBVkE4CisJICovCisJcHVibGljIENyZWF0aW9uUmVmZXJlbmNlIG5ld0Ny
ZWF0aW9uUmVmZXJlbmNlKEV4cHJlc3Npb24gZXhwcmVzc2lvbikgeworCQlDcmVhdGlvblJlZmVy
ZW5jZSByZXN1bHQgPSBuZXcgQ3JlYXRpb25SZWZlcmVuY2UodGhpcyk7CisJCXJlc3VsdC5zZXRF
eHByZXNzaW9uKGV4cHJlc3Npb24pOworCQlyZXR1cm4gcmVzdWx0OworCX0KKworCS8qKgogCSAq
IENyZWF0ZXMgYSBuZXcgdW5wYXJlbnRlZCBkbyBzdGF0ZW1lbnQgbm9kZSBvd25lZCBieSB0aGlz
IEFTVC4KIAkgKiBCeSBkZWZhdWx0LCB0aGUgZXhwcmVzc2lvbiBpcyB1bnNwZWNpZmllZCAoYnV0
IGxlZ2FsKSwgYW5kCiAJICogdGhlIGJvZHkgc3RhdGVtZW50IGlzIGFuIGVtcHR5IGJsb2NrLgpA
QCAtMTQwOSw2ICsxNDIzLDIyIEBACiAJICovCiAJcHVibGljIEVudW1EZWNsYXJhdGlvbiBuZXdF
bnVtRGVjbGFyYXRpb24oKSB7CiAJCUVudW1EZWNsYXJhdGlvbiByZXN1bHQgPSBuZXcgRW51bURl
Y2xhcmF0aW9uKHRoaXMpOworCQlyZXR1cm4gcmVzdWx0OworCX0KKworCS8qKgorCSAqIENyZWF0
ZXMgYW4gdW5wYXJlbnRlZCBleHByZXNzaW9uIG1ldGhvZCByZWZlcmVuY2Ugbm9kZSBvd25lZCBi
eSB0aGlzIEFTVC4KKwkgKiAKKwkgKiBAcGFyYW0gZXhwcmVzc2lvbiBleHByZXNzaW9uIGZvciB0
aGUgbGVmdCBoYW5kIHNpZGUgb2YgRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZQorCSAqIEBwYXJh
bSBuYW1lIG5hbWUgb2YgdGhlIG1ldGhvZCBpbiB0aGUgRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5j
ZQorCSAqIEByZXR1cm4gYSBuZXcgdW5wYXJlbnRlZCByZWZlcmVuY2UgZXhwcmVzc2lvbiBub2Rl
CisJICogQGV4Y2VwdGlvbiBVbnN1cHBvcnRlZE9wZXJhdGlvbkV4Y2VwdGlvbiBpZiB0aGlzIG9w
ZXJhdGlvbiBpcyB1c2VkIGluIGEgSkxTMiwgSkxTMyBvciBKTFM0IEFTVAorCSAqIEBzaW5jZSAz
LjkgQkVUQV9KQVZBOAorCSAqLworCXB1YmxpYyBFeHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlIG5l
d0V4cHJlc3Npb25NZXRob2RSZWZlcmVuY2UoRXhwcmVzc2lvbiBleHByZXNzaW9uLCBTaW1wbGVO
YW1lIG5hbWUpIHsKKwkJRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZSByZXN1bHQgPSBuZXcgRXhw
cmVzc2lvbk1ldGhvZFJlZmVyZW5jZSh0aGlzKTsKKwkJcmVzdWx0LnNldEV4cHJlc3Npb24oZXhw
cmVzc2lvbik7CisJCXJlc3VsdC5zZXROYW1lKG5hbWUpOwogCQlyZXR1cm4gcmVzdWx0OwogCX0K
IApAQCAtMjI0NCw2ICsyMjc0LDIxIEBACiAJfQogCiAJLyoqCisJICogQ3JlYXRlcyBhbmQgcmV0
dXJucyBhIG5ldyB1bnBhcmVudGVkIHN1cGVyIG1ldGhvZCByZWZlcmVuY2Ugbm9kZQorCSAqIG93
bmVkIGJ5IHRoaXMgQVNULiBCeSBkZWZhdWx0LCB0aGUgZXhwcmVzc2lvbiBhbmQgZmllbGQgYXJl
IGJvdGgKKwkgKiB1bnNwZWNpZmllZCwgYnV0IGxlZ2FsLCBuYW1lcy4KKwkgKgorCSAqIEBwYXJh
bSBuYW1lIG5hbWUgb2YgdGhlIG1ldGhvZCByZWZlcmVuY2VkCisJICogQHJldHVybiBhIG5ldyB1
bnBhcmVudGVkIHN1cGVyIG1ldGhvZCByZWZlcmVuY2Ugbm9kZQorCSAqIEBzaW5jZSAzLjkgQkVU
QV9KQVZBOAorCSAqLworCXB1YmxpYyBTdXBlck1ldGhvZFJlZmVyZW5jZSBuZXdTdXBlck1ldGhv
ZFJlZmVyZW5jZShTaW1wbGVOYW1lIG5hbWUpIHsKKwkJU3VwZXJNZXRob2RSZWZlcmVuY2UgcmVz
dWx0ID0gbmV3IFN1cGVyTWV0aG9kUmVmZXJlbmNlKHRoaXMpOworCQlyZXN1bHQuc2V0TmFtZShu
YW1lKTsKKwkJcmV0dXJuIHJlc3VsdDsKKwl9CisKKwkvKioKIAkgKiBDcmVhdGVzIGEgbmV3IHVu
cGFyZW50ZWQgc3dpdGNoIGNhc2Ugc3RhdGVtZW50IG5vZGUgb3duZWQgYnkKIAkgKiB0aGlzIEFT
VC4gQnkgZGVmYXVsdCwgdGhlIGV4cHJlc3Npb24gaXMgdW5zcGVjaWZpZWQsIGJ1dCBsZWdhbC4K
IAkgKgpAQCAtMjQyNCw2ICsyNDY5LDIyIEBACiAJfQogCiAJLyoqCisJICogQ3JlYXRlcyBhbiB1
bnBhcmVudGVkIFR5cGUgbWV0aG9kIHJlZmVyZW5jZSBub2RlIG93bmVkIGJ5IHRoaXMgQVNULgor
CSAqIAorCSAqIEBwYXJhbSB0eXBlIHR5cGUgZm9yIHRoZSBsZWZ0IGhhbmQgc2lkZSBvZiBUeXBl
TWV0aG9kUmVmZXJlbmNlCisJICogQHBhcmFtIG5hbWUgbmFtZSBvZiB0aGUgbWV0aG9kIGluIHRo
ZSBUeXBlTWV0aG9kUmVmZXJlbmNlCisJICogQHJldHVybiBhIG5ldyB1bnBhcmVudGVkIHR5cGUg
bWV0aG9kIHJlZmVyZW5jZSBub2RlCisJICogQGV4Y2VwdGlvbiBVbnN1cHBvcnRlZE9wZXJhdGlv
bkV4Y2VwdGlvbiBpZiB0aGlzIG9wZXJhdGlvbiBpcyB1c2VkIGluIGEgSkxTMiwgSkxTMyBvciBK
TFM0IEFTVAorCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAorCSAqLworCXB1YmxpYyBUeXBlTWV0
aG9kUmVmZXJlbmNlIG5ld1R5cGVNZXRob2RSZWZlcmVuY2UoVHlwZSB0eXBlLCBTaW1wbGVOYW1l
IG5hbWUpIHsKKwkJVHlwZU1ldGhvZFJlZmVyZW5jZSByZXN1bHQgPSBuZXcgVHlwZU1ldGhvZFJl
ZmVyZW5jZSh0aGlzKTsKKwkJcmVzdWx0LnNldFR5cGUodHlwZSk7CisJCXJlc3VsdC5zZXROYW1l
KG5hbWUpOworCQlyZXR1cm4gcmVzdWx0OworCX0KKworCS8qKgogCSAqIENyZWF0ZXMgYW5kIHJl
dHVybnMgYSBuZXcgdW5wYXJlbnRlZCB0eXBlIHBhcmFtZXRlciB0eXBlIG5vZGUgd2l0aCBhbgog
CSAqIHVuc3BlY2lmaWVkIHR5cGUgdmFyaWFibGUgbmFtZSBhbmQgYW4gZW1wdHkgbGlzdCBvZiB0
eXBlIGJvdW5kcy4KIAkgKgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIuamF2YSBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUQ29udmVydGVyLmphdmEKaW5k
ZXggMTUxZTkxZS4uOWZlY2U2OSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9t
L29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIuamF2YQorKysgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVENvbnZlcnRlci5q
YXZhCkBAIC00NiwxMSArNDYsMTMgQEAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuYXN0LlBhcmFtZXRlcml6ZWRRdWFsaWZpZWRUeXBlUmVmZXJlbmNlOwogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuUGFyYW1ldGVyaXplZFNpbmds
ZVR5cGVSZWZlcmVuY2U7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LmFzdC5RdWFsaWZpZWRBbGxvY2F0aW9uRXhwcmVzc2lvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlF1YWxpZmllZFN1cGVyUmVmZXJlbmNlOwogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuUXVhbGlmaWVkVHlwZVJlZmVy
ZW5jZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlJlY2Vp
dmVyOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuU2luZ2xl
TmFtZVJlZmVyZW5jZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
YXN0LlNpbmdsZVR5cGVSZWZlcmVuY2U7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmFzdC5TdHJpbmdMaXRlcmFsQ29uY2F0ZW5hdGlvbjsKK2ltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlN1cGVyUmVmZXJlbmNlOwogaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuVHlwZVJlZmVyZW5jZTsKIGltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlVuaW9uVHlwZVJlZmVyZW5j
ZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LldpbGRjYXJk
OwpAQCAtMTc2MSw2ICsxNzYzLDkgQEAKIAkJaWYgKGV4cHJlc3Npb24gaW5zdGFuY2VvZiBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkxhbWJkYUV4cHJlc3Npb24pIHsKIAkJ
CXJldHVybiBjb252ZXJ0KChvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0Lkxh
bWJkYUV4cHJlc3Npb24pIGV4cHJlc3Npb24pOwogCQl9CisJCWlmIChleHByZXNzaW9uIGluc3Rh
bmNlb2Ygb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5SZWZlcmVuY2VFeHBy
ZXNzaW9uKSB7CisJCQlyZXR1cm4gY29udmVydCgob3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmFzdC5SZWZlcmVuY2VFeHByZXNzaW9uKSBleHByZXNzaW9uKTsKKwkJfQogCQlyZXR1
cm4gbnVsbDsKIAl9CiAKQEAgLTI1MzIsNiArMjUzNyw3OCBAQAogCQkJcmV0dXJuIGNvbnZlcnQo
KG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuRmllbGRSZWZlcmVuY2UpIHJl
ZmVyZW5jZSk7CiAJCX0KIAkJcmV0dXJuIG51bGw7IC8vIGNhbm5vdCBiZSByZWFjaGVkCisJfQor
CisJcHVibGljIEV4cHJlc3Npb24gY29udmVydChvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIuYXN0LlJlZmVyZW5jZUV4cHJlc3Npb24gcmVmZXJlbmNlKSB7CisJCWlmICh0aGlzLmFz
dC5hcGlMZXZlbCA8IEFTVC5KTFM4KSB7CisJCQlpZiAodGhpcy5yZWZlcmVuY2VDb250ZXh0ICE9
IG51bGwpIHsKKwkJCQl0aGlzLnJlZmVyZW5jZUNvbnRleHQuc2V0RmxhZ3ModGhpcy5yZWZlcmVu
Y2VDb250ZXh0LmdldEZsYWdzKCkgfCBBU1ROb2RlLk1BTEZPUk1FRCk7CisJCQl9CisJCQlOdWxs
TGl0ZXJhbCBudWxsTGl0ZXJhbCA9IG5ldyBOdWxsTGl0ZXJhbCh0aGlzLmFzdCk7CisJCQludWxs
TGl0ZXJhbC5zZXRGbGFncyhudWxsTGl0ZXJhbC5nZXRGbGFncygpIHwgQVNUTm9kZS5NQUxGT1JN
RUQpOworCQkJbnVsbExpdGVyYWwuc2V0U291cmNlUmFuZ2UocmVmZXJlbmNlLnNvdXJjZVN0YXJ0
LCByZWZlcmVuY2Uuc291cmNlRW5kIC0gcmVmZXJlbmNlLnNvdXJjZVN0YXJ0ICsgMSk7CisJCQly
ZXR1cm4gbnVsbExpdGVyYWw7CQkKKwkJfQorCQlFeHByZXNzaW9uIHJlc3VsdCA9IG51bGw7CisJ
CW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuRXhwcmVzc2lvbiBsaHMgPSBy
ZWZlcmVuY2UubGhzOworCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlR5
cGVSZWZlcmVuY2VbXSBhcmd1bWVudHMgPSByZWZlcmVuY2UudHlwZUFyZ3VtZW50czsKKwkJaW50
IHN0YXJ0ID0gYXJndW1lbnRzICE9IG51bGwgJiYgYXJndW1lbnRzLmxlbmd0aCA+IDAgPyBhcmd1
bWVudHNbYXJndW1lbnRzLmxlbmd0aCAtIDFdLnNvdXJjZUVuZCArIDEgOiByZWZlcmVuY2UubGhz
LnNvdXJjZUVuZCArIDE7CisJCWZpbmFsIFNpbXBsZU5hbWUgbmFtZSA9IG5ldyBTaW1wbGVOYW1l
KHRoaXMuYXN0KTsKKwkJcmV0cmlldmVJZGVudGlmaWVyQW5kU2V0UG9zaXRpb25zKHN0YXJ0LCBy
ZWZlcmVuY2Uuc291cmNlRW5kLCBuYW1lKTsKKwkJbmFtZS5pbnRlcm5hbFNldElkZW50aWZpZXIo
bmV3IFN0cmluZyhyZWZlcmVuY2Uuc2VsZWN0b3IpKTsKKwkJaWYgKHRoaXMucmVzb2x2ZUJpbmRp
bmdzKSB7CisJCQlyZWNvcmROb2RlcyhuYW1lLCByZWZlcmVuY2UpOworCQl9CQorCQlMaXN0IHR5
cGVBcmd1bWVudHMgPSBudWxsOworCQlpZiAobmFtZS5nZXRTdGFydFBvc2l0aW9uKCkgPCBzdGFy
dCkgey8vIGNoZWNrIGZvciBuZXcgCisJCQlyZXRyaWV2ZUluaXRBbmRTZXRQb3NpdGlvbnMoc3Rh
cnQsIHJlZmVyZW5jZS5zb3VyY2VFbmQsIG5hbWUpOworCQkJaWYgKCFuYW1lLnRvU3RyaW5nKCku
ZXF1YWxzKCI8aW5pdD4iKSkgeyAvLyROT04tTkxTLTEkCisJCQkJTnVsbExpdGVyYWwgbnVsbExp
dGVyYWwgPSBuZXcgTnVsbExpdGVyYWwodGhpcy5hc3QpOworCQkJCW51bGxMaXRlcmFsLnNldEZs
YWdzKG51bGxMaXRlcmFsLmdldEZsYWdzKCkgfCBBU1ROb2RlLk1BTEZPUk1FRCk7CisJCQkJcmVz
dWx0ID0gbnVsbExpdGVyYWw7CisJCQl9IGVsc2UgeworCQkJCUNyZWF0aW9uUmVmZXJlbmNlIGNy
ZWF0aW9uUmVmZXJlbmNlID0gbmV3IENyZWF0aW9uUmVmZXJlbmNlKHRoaXMuYXN0KTsKKwkJCQlj
cmVhdGlvblJlZmVyZW5jZS5zZXRFeHByZXNzaW9uKGNvbnZlcnQobGhzKSk7CisJCQkJdHlwZUFy
Z3VtZW50cyA9IGNyZWF0aW9uUmVmZXJlbmNlLnR5cGVBcmd1bWVudHMoKTsKKwkJCQlyZXN1bHQg
PSBjcmVhdGlvblJlZmVyZW5jZTsJCQkJCQorCQkJfQorCQl9IGVsc2UgaWYgKGxocyBpbnN0YW5j
ZW9mIFR5cGVSZWZlcmVuY2UpIHsKKwkJCVR5cGVNZXRob2RSZWZlcmVuY2UgdHlwZU1ldGhvZFJl
ZmVyZW5jZSA9IG5ldyBUeXBlTWV0aG9kUmVmZXJlbmNlKHRoaXMuYXN0KTsKKwkJCXR5cGVNZXRo
b2RSZWZlcmVuY2Uuc2V0VHlwZShjb252ZXJ0VHlwZSgoVHlwZVJlZmVyZW5jZSkgbGhzKSk7CisJ
CQl0eXBlTWV0aG9kUmVmZXJlbmNlLnNldE5hbWUobmFtZSk7CisJCQl0eXBlQXJndW1lbnRzID0g
dHlwZU1ldGhvZFJlZmVyZW5jZS50eXBlQXJndW1lbnRzKCk7CisJCQlyZXN1bHQgPSB0eXBlTWV0
aG9kUmVmZXJlbmNlOworCQl9IGVsc2UgaWYgKGxocyBpbnN0YW5jZW9mIFN1cGVyUmVmZXJlbmNl
KSB7CisJCQlTdXBlck1ldGhvZFJlZmVyZW5jZSBzdXBlck1ldGhvZFJlZmVyZW5jZSA9IG5ldyBT
dXBlck1ldGhvZFJlZmVyZW5jZSh0aGlzLmFzdCk7CisJCQlzdXBlck1ldGhvZFJlZmVyZW5jZS5z
ZXROYW1lKG5hbWUpOworCQkJdHlwZUFyZ3VtZW50cyA9IHN1cGVyTWV0aG9kUmVmZXJlbmNlLnR5
cGVBcmd1bWVudHMoKTsKKwkJCXJlc3VsdCA9IHN1cGVyTWV0aG9kUmVmZXJlbmNlOworCQl9IGVs
c2UgaWYgKGxocyBpbnN0YW5jZW9mIFF1YWxpZmllZFN1cGVyUmVmZXJlbmNlKSB7CisJCQlTdXBl
ck1ldGhvZFJlZmVyZW5jZSBzdXBlck1ldGhvZFJlZmVyZW5jZSA9IG5ldyBTdXBlck1ldGhvZFJl
ZmVyZW5jZSh0aGlzLmFzdCk7CisJCQlzdXBlck1ldGhvZFJlZmVyZW5jZS5zZXRRdWFsaWZpZXIo
Y29udmVydCgoUXVhbGlmaWVkU3VwZXJSZWZlcmVuY2UpbGhzKSk7CisJCQlzdXBlck1ldGhvZFJl
ZmVyZW5jZS5zZXROYW1lKG5hbWUpOworCQkJdHlwZUFyZ3VtZW50cyA9IHN1cGVyTWV0aG9kUmVm
ZXJlbmNlLnR5cGVBcmd1bWVudHMoKTsKKwkJCXJlc3VsdCA9IHN1cGVyTWV0aG9kUmVmZXJlbmNl
OworCQl9IGVsc2UgeworCQkJRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZSBleHByZXNzaW9uTWV0
aG9kUmVmZXJlbmNlID0gbmV3IEV4cHJlc3Npb25NZXRob2RSZWZlcmVuY2UodGhpcy5hc3QpOwor
CQkJZXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZS5zZXRFeHByZXNzaW9uKGNvbnZlcnQobGhzKSk7
CisJCQl0eXBlQXJndW1lbnRzID0gZXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZS50eXBlQXJndW1l
bnRzKCk7CisJCQlleHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlLnNldE5hbWUobmFtZSk7CisJCQly
ZXN1bHQgPSBleHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlOworCQl9CisJCWlmICh0eXBlQXJndW1l
bnRzICE9IG51bGwgJiYgYXJndW1lbnRzICE9IG51bGwpIHsKKwkJCWludCBhcmd1bWVudHNMZW5n
dGggPSBhcmd1bWVudHMubGVuZ3RoOworCQkJZm9yIChpbnQgaSA9IDA7IGkgPCBhcmd1bWVudHNM
ZW5ndGg7IGkrKykgeworCQkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3Qu
VHlwZVJlZmVyZW5jZSBhcmd1bWVudCA9IGFyZ3VtZW50c1tpXTsKKwkJCQl0eXBlQXJndW1lbnRz
LmFkZChjb252ZXJ0VHlwZShhcmd1bWVudCkpOworCQkJfQorCQl9CisJCWlmICh0aGlzLnJlc29s
dmVCaW5kaW5ncykgeworCQkJcmVjb3JkTm9kZXMocmVzdWx0LCByZWZlcmVuY2UpOworCQl9CisJ
CWludCBzb3VyY2VTdGFydCA9IHJlZmVyZW5jZS5zb3VyY2VTdGFydDsgCisJCXJlc3VsdC5zZXRT
b3VyY2VSYW5nZShzb3VyY2VTdGFydCwgcmVmZXJlbmNlLnNvdXJjZUVuZCAtIHNvdXJjZVN0YXJ0
ICsgMSk7CisJCXJldHVybiByZXN1bHQ7CiAJfQogCiAJcHVibGljIFJldHVyblN0YXRlbWVudCBj
b252ZXJ0KG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuUmV0dXJuU3RhdGVt
ZW50IHN0YXRlbWVudCkgewpAQCAtNDcxMiw2ICs0Nzg5LDI5IEBACiAJfQogCiAJLyoqCisJICog
cmV0cmlldmVzIHRoZSBzdGFydCBhbmQgYW5kIG9mIG5ldyBhbmQgc2V0IHRoZSBwb3NpdGlvbnMg
b2YgdGhlIG5hbWUKKwkgKiBAcGFyYW0gc3RhcnQgLSBwb3NpdGlvbiB0byBzdGFydCBzZWFyY2gK
KwkgKiBAcGFyYW0gZW5kIC0gcG9zaXRpb24gdG8gZW5kIHNlYXJjaAorCSAqIEBwYXJhbSBuYW1l
IC0gb2JqZWN0IHdoZXJlIHRoZXNlIHBvc2l0aW9ucyB3aWxsIGJlIHVwZGF0ZWQuCisJICovCisJ
cHJvdGVjdGVkIHZvaWQgcmV0cmlldmVJbml0QW5kU2V0UG9zaXRpb25zKGludCBzdGFydCwgaW50
IGVuZCwgTmFtZSBuYW1lKSB7CisJCXRoaXMuc2Nhbm5lci5yZXNldFRvKHN0YXJ0LCBlbmQpOwor
CQlpbnQgdG9rZW47CisJCXRyeSB7CisJCQl3aGlsZSgodG9rZW4gPSB0aGlzLnNjYW5uZXIuZ2V0
TmV4dFRva2VuKCkpICE9IFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUVPRikgIHsKKwkJCQlpZiAo
dG9rZW4gPT0gVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lbmV3KSB7CisJCQkJCWludCBzdGFydE5h
bWUgPSB0aGlzLnNjYW5uZXIuc3RhcnRQb3NpdGlvbjsKKwkJCQkJaW50IGVuZE5hbWUgPSB0aGlz
LnNjYW5uZXIuY3VycmVudFBvc2l0aW9uIC0gMTsKKwkJCQkJbmFtZS5zZXRTb3VyY2VSYW5nZShz
dGFydE5hbWUsIGVuZE5hbWUgLSBzdGFydE5hbWUgKyAxKTsKKwkJCQkJcmV0dXJuOworCQkJCX0K
KwkJCX0KKwkJfSBjYXRjaChJbnZhbGlkSW5wdXRFeGNlcHRpb24gZSkgeworCQkJLy8gaWdub3Jl
CisJCX0KKwl9CisKKwkvKioKIAkgKiBUaGlzIG1ldGhvZCBpcyB1c2VkIHRvIHJldHJpZXZlIHBv
c2l0aW9uIGJlZm9yZSB0aGUgbmV4dCBjb21tYSBvciBzZW1pLWNvbG9uLgogCSAqIEBwYXJhbSBp
bml0aWFsaXplckVuZCB0aGUgZ2l2ZW4gaW5pdGlhbGl6ZXIgZW5kIGV4Y2x1c2l2ZQogCSAqIEBy
ZXR1cm4gaW50IHRoZSBwb3NpdGlvbiBmb3VuZC4KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUTWF0Y2hlci5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RNYXRjaGVy
LmphdmEKaW5kZXggZDYzMTM3Mi4uMGJiMzQxNCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RNYXRjaGVyLmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RNYXRj
aGVyLmphdmEKQEAgLTcwMCw2ICs3MDAsMzEgQEAKIAkgKiBAcmV0dXJuIDxjb2RlPnRydWU8L2Nv
ZGU+IGlmIHRoZSBzdWJ0cmVlIG1hdGNoZXMsIG9yCiAJICogICA8Y29kZT5mYWxzZTwvY29kZT4g
aWYgdGhleSBkbyBub3QgbWF0Y2ggb3IgdGhlIG90aGVyIG9iamVjdCBoYXMgYQogCSAqICAgZGlm
ZmVyZW50IG5vZGUgdHlwZSBvciBpcyA8Y29kZT5udWxsPC9jb2RlPgorCSAqIEBzaW5jZSAzLjkg
QkVUQV9KQVZBOAorCSAqLworCXB1YmxpYyBib29sZWFuIG1hdGNoKENyZWF0aW9uUmVmZXJlbmNl
IG5vZGUsIE9iamVjdCBvdGhlcikgeworCQlpZiAoIShvdGhlciBpbnN0YW5jZW9mIENyZWF0aW9u
UmVmZXJlbmNlKSkgeworCQkJcmV0dXJuIGZhbHNlOworCQl9CisJCUNyZWF0aW9uUmVmZXJlbmNl
IG8gPSAoQ3JlYXRpb25SZWZlcmVuY2UpIG90aGVyOworCQlyZXR1cm4gKAorCQkJc2FmZVN1YnRy
ZWVNYXRjaChub2RlLmdldEV4cHJlc3Npb24oKSwgby5nZXRFeHByZXNzaW9uKCkpCisJCQkJJiYg
c2FmZVN1YnRyZWVMaXN0TWF0Y2gobm9kZS50eXBlQXJndW1lbnRzKCksIG8udHlwZUFyZ3VtZW50
cygpKSk7CisJfQorCisJLyoqCisJICogUmV0dXJucyB3aGV0aGVyIHRoZSBnaXZlbiBub2RlIGFu
ZCB0aGUgb3RoZXIgb2JqZWN0IG1hdGNoLgorCSAqIDxwPgorCSAqIFRoZSBkZWZhdWx0IGltcGxl
bWVudGF0aW9uIHByb3ZpZGVkIGJ5IHRoaXMgY2xhc3MgdGVzdHMgd2hldGhlciB0aGUKKwkgKiBv
dGhlciBvYmplY3QgaXMgYSBub2RlIG9mIHRoZSBzYW1lIHR5cGUgd2l0aCBzdHJ1Y3R1cmFsbHkg
aXNvbW9ycGhpYworCSAqIGNoaWxkIHN1YnRyZWVzLiBTdWJjbGFzc2VzIG1heSBvdmVycmlkZSB0
aGlzIG1ldGhvZCBhcyBuZWVkZWQuCisJICogPC9wPgorCSAqCisJICogQHBhcmFtIG5vZGUgdGhl
IG5vZGUKKwkgKiBAcGFyYW0gb3RoZXIgdGhlIG90aGVyIG9iamVjdCwgb3IgPGNvZGU+bnVsbDwv
Y29kZT4KKwkgKiBAcmV0dXJuIDxjb2RlPnRydWU8L2NvZGU+IGlmIHRoZSBzdWJ0cmVlIG1hdGNo
ZXMsIG9yCisJICogICA8Y29kZT5mYWxzZTwvY29kZT4gaWYgdGhleSBkbyBub3QgbWF0Y2ggb3Ig
dGhlIG90aGVyIG9iamVjdCBoYXMgYQorCSAqICAgZGlmZmVyZW50IG5vZGUgdHlwZSBvciBpcyA8
Y29kZT5udWxsPC9jb2RlPgogCSAqLwogCXB1YmxpYyBib29sZWFuIG1hdGNoKERvU3RhdGVtZW50
IG5vZGUsIE9iamVjdCBvdGhlcikgewogCQlpZiAoIShvdGhlciBpbnN0YW5jZW9mIERvU3RhdGVt
ZW50KSkgewpAQCAtODE3LDYgKzg0MiwzMiBAQAogCQkJCSYmIHNhZmVTdWJ0cmVlTGlzdE1hdGNo
KAogCQkJCQlub2RlLmJvZHlEZWNsYXJhdGlvbnMoKSwKIAkJCQkJby5ib2R5RGVjbGFyYXRpb25z
KCkpKTsKKwl9CisKKwkvKioKKwkgKiBSZXR1cm5zIHdoZXRoZXIgdGhlIGdpdmVuIG5vZGUgYW5k
IHRoZSBvdGhlciBvYmplY3QgbWF0Y2guCisJICogPHA+CisJICogVGhlIGRlZmF1bHQgaW1wbGVt
ZW50YXRpb24gcHJvdmlkZWQgYnkgdGhpcyBjbGFzcyB0ZXN0cyB3aGV0aGVyIHRoZQorCSAqIG90
aGVyIG9iamVjdCBpcyBhIG5vZGUgb2YgdGhlIHNhbWUgdHlwZSB3aXRoIHN0cnVjdHVyYWxseSBp
c29tb3JwaGljCisJICogY2hpbGQgc3VidHJlZXMuIFN1YmNsYXNzZXMgbWF5IG92ZXJyaWRlIHRo
aXMgbWV0aG9kIGFzIG5lZWRlZC4KKwkgKiA8L3A+CisJICoKKwkgKiBAcGFyYW0gbm9kZSB0aGUg
bm9kZQorCSAqIEBwYXJhbSBvdGhlciB0aGUgb3RoZXIgb2JqZWN0LCBvciA8Y29kZT5udWxsPC9j
b2RlPgorCSAqIEByZXR1cm4gPGNvZGU+dHJ1ZTwvY29kZT4gaWYgdGhlIHN1YnRyZWUgbWF0Y2hl
cywgb3IKKwkgKiAgIDxjb2RlPmZhbHNlPC9jb2RlPiBpZiB0aGV5IGRvIG5vdCBtYXRjaCBvciB0
aGUgb3RoZXIgb2JqZWN0IGhhcyBhCisJICogICBkaWZmZXJlbnQgbm9kZSB0eXBlIG9yIGlzIDxj
b2RlPm51bGw8L2NvZGU+CisJICogQHNpbmNlIDMuOSBCRVRBX0pBVkE4CisJICovCisJcHVibGlj
IGJvb2xlYW4gbWF0Y2goRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZSBub2RlLCBPYmplY3Qgb3Ro
ZXIpIHsKKwkJaWYgKCEob3RoZXIgaW5zdGFuY2VvZiBFeHByZXNzaW9uTWV0aG9kUmVmZXJlbmNl
KSkgeworCQkJcmV0dXJuIGZhbHNlOworCQl9CisJCUV4cHJlc3Npb25NZXRob2RSZWZlcmVuY2Ug
byA9IChFeHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlKSBvdGhlcjsKKwkJcmV0dXJuICgKKwkJCXNh
ZmVTdWJ0cmVlTWF0Y2gobm9kZS5nZXRFeHByZXNzaW9uKCksIG8uZ2V0RXhwcmVzc2lvbigpKQor
CQkJCSYmIHNhZmVTdWJ0cmVlTGlzdE1hdGNoKG5vZGUudHlwZUFyZ3VtZW50cygpLCBvLnR5cGVB
cmd1bWVudHMoKSkKKwkJCQkmJiBzYWZlU3VidHJlZU1hdGNoKG5vZGUuZ2V0TmFtZSgpLCBvLmdl
dE5hbWUoKSkpOwogCX0KIAogCS8qKgpAQCAtMjAyMiw2ICsyMDczLDMyIEBACiAJICogQHJldHVy
biA8Y29kZT50cnVlPC9jb2RlPiBpZiB0aGUgc3VidHJlZSBtYXRjaGVzLCBvcgogCSAqICAgPGNv
ZGU+ZmFsc2U8L2NvZGU+IGlmIHRoZXkgZG8gbm90IG1hdGNoIG9yIHRoZSBvdGhlciBvYmplY3Qg
aGFzIGEKIAkgKiAgIGRpZmZlcmVudCBub2RlIHR5cGUgb3IgaXMgPGNvZGU+bnVsbDwvY29kZT4K
KwkgKiAgIAorCSAqICAgQHNpbmNlIDMuOSBCRVRBX0pBVkE4CisJICovCisJcHVibGljIGJvb2xl
YW4gbWF0Y2goU3VwZXJNZXRob2RSZWZlcmVuY2Ugbm9kZSwgT2JqZWN0IG90aGVyKSB7CisJCWlm
ICghKG90aGVyIGluc3RhbmNlb2YgU3VwZXJNZXRob2RSZWZlcmVuY2UpKSB7CisJCQlyZXR1cm4g
ZmFsc2U7CisJCX0KKwkJU3VwZXJNZXRob2RSZWZlcmVuY2UgbyA9IChTdXBlck1ldGhvZFJlZmVy
ZW5jZSkgb3RoZXI7CisJCXJldHVybiAoc2FmZVN1YnRyZWVNYXRjaChub2RlLmdldFF1YWxpZmll
cigpLCBvLmdldFF1YWxpZmllcigpKQorCQkJCSYmIHNhZmVTdWJ0cmVlTGlzdE1hdGNoKG5vZGUu
dHlwZUFyZ3VtZW50cygpLCBvLnR5cGVBcmd1bWVudHMoKSkKKwkJCQkmJiBzYWZlU3VidHJlZU1h
dGNoKG5vZGUuZ2V0TmFtZSgpLCBvLmdldE5hbWUoKSkpOworCX0KKworCS8qKgorCSAqIFJldHVy
bnMgd2hldGhlciB0aGUgZ2l2ZW4gbm9kZSBhbmQgdGhlIG90aGVyIG9iamVjdCBtYXRjaC4KKwkg
KiA8cD4KKwkgKiBUaGUgZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiBwcm92aWRlZCBieSB0aGlzIGNs
YXNzIHRlc3RzIHdoZXRoZXIgdGhlCisJICogb3RoZXIgb2JqZWN0IGlzIGEgbm9kZSBvZiB0aGUg
c2FtZSB0eXBlIHdpdGggc3RydWN0dXJhbGx5IGlzb21vcnBoaWMKKwkgKiBjaGlsZCBzdWJ0cmVl
cy4gU3ViY2xhc3NlcyBtYXkgb3ZlcnJpZGUgdGhpcyBtZXRob2QgYXMgbmVlZGVkLgorCSAqIDwv
cD4KKwkgKgorCSAqIEBwYXJhbSBub2RlIHRoZSBub2RlCisJICogQHBhcmFtIG90aGVyIHRoZSBv
dGhlciBvYmplY3QsIG9yIDxjb2RlPm51bGw8L2NvZGU+CisJICogQHJldHVybiA8Y29kZT50cnVl
PC9jb2RlPiBpZiB0aGUgc3VidHJlZSBtYXRjaGVzLCBvcgorCSAqICAgPGNvZGU+ZmFsc2U8L2Nv
ZGU+IGlmIHRoZXkgZG8gbm90IG1hdGNoIG9yIHRoZSBvdGhlciBvYmplY3QgaGFzIGEKKwkgKiAg
IGRpZmZlcmVudCBub2RlIHR5cGUgb3IgaXMgPGNvZGU+bnVsbDwvY29kZT4KIAkgKi8KIAlwdWJs
aWMgYm9vbGVhbiBtYXRjaChTd2l0Y2hDYXNlIG5vZGUsIE9iamVjdCBvdGhlcikgewogCQlpZiAo
IShvdGhlciBpbnN0YW5jZW9mIFN3aXRjaENhc2UpKSB7CkBAIC0yMzA2LDYgKzIzODMsMzIgQEAK
IAkgKiBAcmV0dXJuIDxjb2RlPnRydWU8L2NvZGU+IGlmIHRoZSBzdWJ0cmVlIG1hdGNoZXMsIG9y
CiAJICogICA8Y29kZT5mYWxzZTwvY29kZT4gaWYgdGhleSBkbyBub3QgbWF0Y2ggb3IgdGhlIG90
aGVyIG9iamVjdCBoYXMgYQogCSAqICAgZGlmZmVyZW50IG5vZGUgdHlwZSBvciBpcyA8Y29kZT5u
dWxsPC9jb2RlPgorCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAorCSAqLworCXB1YmxpYyBib29s
ZWFuIG1hdGNoKFR5cGVNZXRob2RSZWZlcmVuY2Ugbm9kZSwgT2JqZWN0IG90aGVyKSB7CisJCWlm
ICghKG90aGVyIGluc3RhbmNlb2YgVHlwZU1ldGhvZFJlZmVyZW5jZSkpIHsKKwkJCXJldHVybiBm
YWxzZTsKKwkJfQorCQlUeXBlTWV0aG9kUmVmZXJlbmNlIG8gPSAoVHlwZU1ldGhvZFJlZmVyZW5j
ZSkgb3RoZXI7CisJCXJldHVybiAoCisJCQlzYWZlU3VidHJlZU1hdGNoKG5vZGUuZ2V0VHlwZSgp
LCBvLmdldFR5cGUoKSkKKwkJCQkmJiBzYWZlU3VidHJlZU1hdGNoKG5vZGUuZ2V0TmFtZSgpLCBv
LmdldE5hbWUoKSkKKwkJCQkmJiBzYWZlU3VidHJlZUxpc3RNYXRjaChub2RlLnR5cGVBcmd1bWVu
dHMoKSwgby50eXBlQXJndW1lbnRzKCkpKTsKKwl9CisKKwkvKioKKwkgKiBSZXR1cm5zIHdoZXRo
ZXIgdGhlIGdpdmVuIG5vZGUgYW5kIHRoZSBvdGhlciBvYmplY3QgbWF0Y2guCisJICogPHA+CisJ
ICogVGhlIGRlZmF1bHQgaW1wbGVtZW50YXRpb24gcHJvdmlkZWQgYnkgdGhpcyBjbGFzcyB0ZXN0
cyB3aGV0aGVyIHRoZQorCSAqIG90aGVyIG9iamVjdCBpcyBhIG5vZGUgb2YgdGhlIHNhbWUgdHlw
ZSB3aXRoIHN0cnVjdHVyYWxseSBpc29tb3JwaGljCisJICogY2hpbGQgc3VidHJlZXMuIFN1YmNs
YXNzZXMgbWF5IG92ZXJyaWRlIHRoaXMgbWV0aG9kIGFzIG5lZWRlZC4KKwkgKiA8L3A+CisJICoK
KwkgKiBAcGFyYW0gbm9kZSB0aGUgbm9kZQorCSAqIEBwYXJhbSBvdGhlciB0aGUgb3RoZXIgb2Jq
ZWN0LCBvciA8Y29kZT5udWxsPC9jb2RlPgorCSAqIEByZXR1cm4gPGNvZGU+dHJ1ZTwvY29kZT4g
aWYgdGhlIHN1YnRyZWUgbWF0Y2hlcywgb3IKKwkgKiAgIDxjb2RlPmZhbHNlPC9jb2RlPiBpZiB0
aGV5IGRvIG5vdCBtYXRjaCBvciB0aGUgb3RoZXIgb2JqZWN0IGhhcyBhCisJICogICBkaWZmZXJl
bnQgbm9kZSB0eXBlIG9yIGlzIDxjb2RlPm51bGw8L2NvZGU+CiAJICogQHNpbmNlIDMuMQogCSAq
LwogCXB1YmxpYyBib29sZWFuIG1hdGNoKFR5cGVQYXJhbWV0ZXIgbm9kZSwgT2JqZWN0IG90aGVy
KSB7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0
L2NvcmUvZG9tL0FTVE5vZGUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNs
aXBzZS9qZHQvY29yZS9kb20vQVNUTm9kZS5qYXZhCmluZGV4IDJhODc1NjEuLmIxMTFiMGUgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9k
b20vQVNUTm9kZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBz
ZS9qZHQvY29yZS9kb20vQVNUTm9kZS5qYXZhCkBAIC04NjgsNiArODY4LDM4IEBACiAJcHVibGlj
IHN0YXRpYyBmaW5hbCBpbnQgUEFDS0FHRV9RVUFMSUZJRURfVFlQRSA9IDg4OwogCiAJLyoqCisJ
ICogTm9kZSB0eXBlIGNvbnN0YW50IGluZGljYXRpbmcgYSBub2RlIG9mIHR5cGUKKwkgKiA8Y29k
ZT5DcmVhdGlvblJlZmVyZW5jZTwvY29kZT4uCisJICogQHNlZSBDcmVhdGlvblJlZmVyZW5jZQor
CSAqIEBzaW5jZSAzLjkgQkVUQV9KQVY4CisJICovCisJcHVibGljIHN0YXRpYyBmaW5hbCBpbnQg
Q1JFQVRJT05fUkVGRVJFTkNFID0gODk7CisKKwkvKioKKwkgKiBOb2RlIHR5cGUgY29uc3RhbnQg
aW5kaWNhdGluZyBhIG5vZGUgb2YgdHlwZQorCSAqIDxjb2RlPkV4cHJlc3Npb25NZXRob2RSZWZl
cmVuY2U8L2NvZGU+LgorCSAqIEBzZWUgRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZQorCSAqIEBz
aW5jZSAzLjkgQkVUQV9KQVY4CisJICovCisJcHVibGljIHN0YXRpYyBmaW5hbCBpbnQgRVhQUkVT
U0lPTl9NRVRIT0RfUkVGRVJFTkNFID0gOTA7CisKKwkvKioKKwkgKiBOb2RlIHR5cGUgY29uc3Rh
bnQgaW5kaWNhdGluZyBhIG5vZGUgb2YgdHlwZQorCSAqIDxjb2RlPlN1cGVyTWV0aGhvZFJlZmVy
ZW5jZTwvY29kZT4uCisJICogQHNlZSBTdXBlck1ldGhvZFJlZmVyZW5jZQorCSAqIEBzaW5jZSAz
LjkgQkVUQV9KQVY4CisJICovCisJcHVibGljIHN0YXRpYyBmaW5hbCBpbnQgU1VQRVJfTUVUSE9E
X1JFRkVSRU5DRSA9IDkxOworCisJLyoqCisJICogTm9kZSB0eXBlIGNvbnN0YW50IGluZGljYXRp
bmcgYSBub2RlIG9mIHR5cGUKKwkgKiA8Y29kZT5UeXBlTWV0aG9kUmVmZXJlbmNlPC9jb2RlPi4K
KwkgKiBAc2VlIFR5cGVNZXRob2RSZWZlcmVuY2UKKwkgKiBAc2luY2UgMy45IEJFVEFfSkFWOAor
CSAqLworCXB1YmxpYyBzdGF0aWMgZmluYWwgaW50IFRZUEVfTUVUSE9EX1JFRkVSRU5DRSA9IDky
OworCisJLyoqCiAJICogUmV0dXJucyB0aGUgbm9kZSBjbGFzcyBmb3IgdGhlIGNvcnJlc3BvbmRp
bmcgbm9kZSB0eXBlLgogCSAqCiAJICogQHBhcmFtIG5vZGVUeXBlIEFTVCBub2RlIHR5cGUKQEAg
LTkyMSw2ICs5NTMsOCBAQAogCQkJCXJldHVybiBDb25zdHJ1Y3Rvckludm9jYXRpb24uY2xhc3M7
CiAJCQljYXNlIENPTlRJTlVFX1NUQVRFTUVOVCA6CiAJCQkJcmV0dXJuIENvbnRpbnVlU3RhdGVt
ZW50LmNsYXNzOworCQkJY2FzZSBDUkVBVElPTl9SRUZFUkVOQ0UgOgorCQkJCXJldHVybiBDcmVh
dGlvblJlZmVyZW5jZS5jbGFzczsKIAkJCWNhc2UgVU5JT05fVFlQRSA6CiAJCQkJcmV0dXJuIFVu
aW9uVHlwZS5jbGFzczsKIAkJCWNhc2UgRE9fU1RBVEVNRU5UIDoKQEAgLTkzMyw2ICs5NjcsOCBA
QAogCQkJCXJldHVybiBFbnVtQ29uc3RhbnREZWNsYXJhdGlvbi5jbGFzczsKIAkJCWNhc2UgRU5V
TV9ERUNMQVJBVElPTiA6CiAJCQkJcmV0dXJuIEVudW1EZWNsYXJhdGlvbi5jbGFzczsKKwkJCWNh
c2UgRVhQUkVTU0lPTl9NRVRIT0RfUkVGRVJFTkNFIDoKKwkJCQlyZXR1cm4gRXhwcmVzc2lvbk1l
dGhvZFJlZmVyZW5jZS5jbGFzczsKIAkJCWNhc2UgRVhQUkVTU0lPTl9TVEFURU1FTlQgOgogCQkJ
CXJldHVybiBFeHByZXNzaW9uU3RhdGVtZW50LmNsYXNzOwogCQkJY2FzZSBFWFRSQV9ESU1FTlNJ
T046CkBAIC0xMDIxLDYgKzEwNTcsOCBAQAogCQkJCXJldHVybiBTdXBlckZpZWxkQWNjZXNzLmNs
YXNzOwogCQkJY2FzZSBTVVBFUl9NRVRIT0RfSU5WT0NBVElPTiA6CiAJCQkJcmV0dXJuIFN1cGVy
TWV0aG9kSW52b2NhdGlvbi5jbGFzczsKKwkJCWNhc2UgU1VQRVJfTUVUSE9EX1JFRkVSRU5DRSA6
CisJCQkJcmV0dXJuIFN1cGVyTWV0aG9kUmVmZXJlbmNlLmNsYXNzOwogCQkJY2FzZSBTV0lUQ0hf
Q0FTRToKIAkJCQlyZXR1cm4gU3dpdGNoQ2FzZS5jbGFzczsKIAkJCWNhc2UgU1dJVENIX1NUQVRF
TUVOVCA6CkBAIC0xMDQxLDYgKzEwNzksOCBAQAogCQkJCXJldHVybiBUeXBlRGVjbGFyYXRpb24u
Y2xhc3M7CiAJCQljYXNlIFRZUEVfREVDTEFSQVRJT05fU1RBVEVNRU5UIDoKIAkJCQlyZXR1cm4g
VHlwZURlY2xhcmF0aW9uU3RhdGVtZW50LmNsYXNzOworCQkJY2FzZSBUWVBFX01FVEhPRF9SRUZF
UkVOQ0UgOgorCQkJCXJldHVybiBUeXBlTWV0aG9kUmVmZXJlbmNlLmNsYXNzOwogCQkJY2FzZSBU
WVBFX0xJVEVSQUwgOgogCQkJCXJldHVybiBUeXBlTGl0ZXJhbC5jbGFzczsKIAkJCWNhc2UgVFlQ
RV9QQVJBTUVURVIgOgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RWaXNpdG9yLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVFZpc2l0b3IuamF2YQppbmRleCBkNTE5
ZjJhLi5lOTE5MTcyIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2NvcmUvZG9tL0FTVFZpc2l0b3IuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVFZpc2l0b3IuamF2YQpAQCAtNTM1
LDYgKzUzNSwyMyBAQAogCSAqIFZpc2l0cyB0aGUgZ2l2ZW4gdHlwZS1zcGVjaWZpYyBBU1Qgbm9k
ZS4KIAkgKiA8cD4KIAkgKiBUaGUgZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiBkb2VzIG5vdGhpbmcg
YW5kIHJldHVybiB0cnVlLgorCSAqIFN1YmNsYXNzZXMgbWF5IHJlLWltcGxlbWVudC4KKwkgKiA8
L3A+CisJICoKKwkgKiBAcGFyYW0gbm9kZSB0aGUgbm9kZSB0byB2aXNpdAorCSAqIEByZXR1cm4g
PGNvZGU+dHJ1ZTwvY29kZT4gaWYgdGhlIGNoaWxkcmVuIG9mIHRoaXMgbm9kZSBzaG91bGQgYmUK
KwkgKiB2aXNpdGVkLCBhbmQgPGNvZGU+ZmFsc2U8L2NvZGU+IGlmIHRoZSBjaGlsZHJlbiBvZiB0
aGlzIG5vZGUgc2hvdWxkCisJICogYmUgc2tpcHBlZAorCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZB
OAorCSAqLworCXB1YmxpYyBib29sZWFuIHZpc2l0KENyZWF0aW9uUmVmZXJlbmNlIG5vZGUpIHsK
KwkJcmV0dXJuIHRydWU7CisJfQorCisJLyoqCisJICogVmlzaXRzIHRoZSBnaXZlbiB0eXBlLXNw
ZWNpZmljIEFTVCBub2RlLgorCSAqIDxwPgorCSAqIFRoZSBkZWZhdWx0IGltcGxlbWVudGF0aW9u
IGRvZXMgbm90aGluZyBhbmQgcmV0dXJuIHRydWUuCiAJICogU3ViY2xhc3NlcyBtYXkgcmVpbXBs
ZW1lbnQuCiAJICogPC9wPgogCSAqCkBAIC02MTEsNiArNjI4LDIzIEBACiAJICogQHNpbmNlIDMu
MQogCSAqLwogCXB1YmxpYyBib29sZWFuIHZpc2l0KEVudW1EZWNsYXJhdGlvbiBub2RlKSB7CisJ
CXJldHVybiB0cnVlOworCX0KKworCS8qKgorCSAqIFZpc2l0cyB0aGUgZ2l2ZW4gdHlwZS1zcGVj
aWZpYyBBU1Qgbm9kZS4KKwkgKiA8cD4KKwkgKiBUaGUgZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiBk
b2VzIG5vdGhpbmcgYW5kIHJldHVybiB0cnVlLgorCSAqIFN1YmNsYXNzZXMgbWF5IHJlLWltcGxl
bWVudC4KKwkgKiA8L3A+CisJICoKKwkgKiBAcGFyYW0gbm9kZSB0aGUgbm9kZSB0byB2aXNpdAor
CSAqIEByZXR1cm4gPGNvZGU+dHJ1ZTwvY29kZT4gaWYgdGhlIGNoaWxkcmVuIG9mIHRoaXMgbm9k
ZSBzaG91bGQgYmUKKwkgKiB2aXNpdGVkLCBhbmQgPGNvZGU+ZmFsc2U8L2NvZGU+IGlmIHRoZSBj
aGlsZHJlbiBvZiB0aGlzIG5vZGUgc2hvdWxkCisJICogYmUgc2tpcHBlZAorCSAqIEBzaW5jZSAz
LjkgQkVUQV9KQVZBOAorCSAqLworCXB1YmxpYyBib29sZWFuIHZpc2l0KEV4cHJlc3Npb25NZXRo
b2RSZWZlcmVuY2Ugbm9kZSkgewogCQlyZXR1cm4gdHJ1ZTsKIAl9CiAKQEAgLTEzNjcsNiArMTQw
MSwyMyBAQAogCSAqIEByZXR1cm4gPGNvZGU+dHJ1ZTwvY29kZT4gaWYgdGhlIGNoaWxkcmVuIG9m
IHRoaXMgbm9kZSBzaG91bGQgYmUKIAkgKiB2aXNpdGVkLCBhbmQgPGNvZGU+ZmFsc2U8L2NvZGU+
IGlmIHRoZSBjaGlsZHJlbiBvZiB0aGlzIG5vZGUgc2hvdWxkCiAJICogYmUgc2tpcHBlZAorCSAq
IEBzaW5jZSAzLjkgQkVUQV9KQVZBOAorCSAqLworCXB1YmxpYyBib29sZWFuIHZpc2l0KFN1cGVy
TWV0aG9kUmVmZXJlbmNlIG5vZGUpIHsKKwkJcmV0dXJuIHRydWU7CisJfQorCisJLyoqCisJICog
VmlzaXRzIHRoZSBnaXZlbiB0eXBlLXNwZWNpZmljIEFTVCBub2RlLgorCSAqIDxwPgorCSAqIFRo
ZSBkZWZhdWx0IGltcGxlbWVudGF0aW9uIGRvZXMgbm90aGluZyBhbmQgcmV0dXJuIHRydWUuCisJ
ICogU3ViY2xhc3NlcyBtYXkgcmVpbXBsZW1lbnQuCisJICogPC9wPgorCSAqCisJICogQHBhcmFt
IG5vZGUgdGhlIG5vZGUgdG8gdmlzaXQKKwkgKiBAcmV0dXJuIDxjb2RlPnRydWU8L2NvZGU+IGlm
IHRoZSBjaGlsZHJlbiBvZiB0aGlzIG5vZGUgc2hvdWxkIGJlCisJICogdmlzaXRlZCwgYW5kIDxj
b2RlPmZhbHNlPC9jb2RlPiBpZiB0aGUgY2hpbGRyZW4gb2YgdGhpcyBub2RlIHNob3VsZAorCSAq
IGJlIHNraXBwZWQKIAkgKi8KIAlwdWJsaWMgYm9vbGVhbiB2aXNpdChTd2l0Y2hDYXNlIG5vZGUp
IHsKIAkJcmV0dXJuIHRydWU7CkBAIC0xNTMzLDYgKzE1ODQsMjQgQEAKIAkgKiBiZSBza2lwcGVk
CiAJICovCiAJcHVibGljIGJvb2xlYW4gdmlzaXQoVHlwZUxpdGVyYWwgbm9kZSkgeworCQlyZXR1
cm4gdHJ1ZTsKKwl9CisKKwkvKioKKwkgKiBWaXNpdHMgdGhlIGdpdmVuIHR5cGUtc3BlY2lmaWMg
QVNUIG5vZGUuCisJICogPHA+CisJICogVGhlIGRlZmF1bHQgaW1wbGVtZW50YXRpb24gZG9lcyBu
b3RoaW5nIGFuZCByZXR1cm4gdHJ1ZS4KKwkgKiBTdWJjbGFzc2VzIG1heSByZWltcGxlbWVudC4K
KwkgKiA8L3A+CisJICoKKwkgKiBAcGFyYW0gbm9kZSB0aGUgbm9kZSB0byB2aXNpdAorCSAqIEBy
ZXR1cm4gPGNvZGU+dHJ1ZTwvY29kZT4gaWYgdGhlIGNoaWxkcmVuIG9mIHRoaXMgbm9kZSBzaG91
bGQgYmUKKwkgKiB2aXNpdGVkLCBhbmQgPGNvZGU+ZmFsc2U8L2NvZGU+IGlmIHRoZSBjaGlsZHJl
biBvZiB0aGlzIG5vZGUgc2hvdWxkCisJICogYmUgc2tpcHBlZAorCSAqIAorCSAqIEBzaW5jZSAz
LjkgQkVUQV9KQVZBOAorCSAqLworCXB1YmxpYyBib29sZWFuIHZpc2l0KFR5cGVNZXRob2RSZWZl
cmVuY2Ugbm9kZSkgewogCQlyZXR1cm4gdHJ1ZTsKIAl9CiAKQEAgLTE5MTgsNiArMTk4NywxOSBA
QAogCSAqIDwvcD4KIAkgKgogCSAqIEBwYXJhbSBub2RlIHRoZSBub2RlIHRvIHZpc2l0CisJICog
QHNpbmNlIDMuOSBCRVRBX0pBVkE4CisJICovCisJcHVibGljIHZvaWQgZW5kVmlzaXQoQ3JlYXRp
b25SZWZlcmVuY2Ugbm9kZSkgeworCQkvLyBkZWZhdWx0IGltcGxlbWVudGF0aW9uOiBkbyBub3Ro
aW5nCisJfQorCisJLyoqCisJICogRW5kIG9mIHZpc2l0IHRoZSBnaXZlbiB0eXBlLXNwZWNpZmlj
IEFTVCBub2RlLgorCSAqIDxwPgorCSAqIFRoZSBkZWZhdWx0IGltcGxlbWVudGF0aW9uIGRvZXMg
bm90aGluZy4gU3ViY2xhc3NlcyBtYXkgcmVpbXBsZW1lbnQuCisJICogPC9wPgorCSAqCisJICog
QHBhcmFtIG5vZGUgdGhlIG5vZGUgdG8gdmlzaXQKIAkgKi8KIAlwdWJsaWMgdm9pZCBlbmRWaXNp
dChEb1N0YXRlbWVudCBub2RlKSB7CiAJCS8vIGRlZmF1bHQgaW1wbGVtZW50YXRpb246IGRvIG5v
dGhpbmcKQEAgLTE5NzEsNiArMjA1MywxOSBAQAogCSAqIEBzaW5jZSAzLjEKIAkgKi8KIAlwdWJs
aWMgdm9pZCBlbmRWaXNpdChFbnVtRGVjbGFyYXRpb24gbm9kZSkgeworCQkvLyBkZWZhdWx0IGlt
cGxlbWVudGF0aW9uOiBkbyBub3RoaW5nCisJfQorCisJLyoqCisJICogRW5kIG9mIHZpc2l0IHRo
ZSBnaXZlbiB0eXBlLXNwZWNpZmljIEFTVCBub2RlLgorCSAqIDxwPgorCSAqIFRoZSBkZWZhdWx0
IGltcGxlbWVudGF0aW9uIGRvZXMgbm90aGluZy4gU3ViY2xhc3NlcyBtYXkgcmVpbXBsZW1lbnQu
CisJICogPC9wPgorCSAqCisJICogQHBhcmFtIG5vZGUgdGhlIG5vZGUgdG8gdmlzaXQKKwkgKiBA
c2luY2UgMy45IEJFVEFfSkFWQTgKKwkgKi8KKwlwdWJsaWMgdm9pZCBlbmRWaXNpdChFeHByZXNz
aW9uTWV0aG9kUmVmZXJlbmNlIG5vZGUpIHsKIAkJLy8gZGVmYXVsdCBpbXBsZW1lbnRhdGlvbjog
ZG8gbm90aGluZwogCX0KIApAQCAtMjUxNiw2ICsyNjExLDE5IEBACiAJICogPC9wPgogCSAqCiAJ
ICogQHBhcmFtIG5vZGUgdGhlIG5vZGUgdG8gdmlzaXQKKwkgKiBAc2luY2UgMy45IEJFVEFfSkFW
QTgKKwkgKi8KKwlwdWJsaWMgdm9pZCBlbmRWaXNpdChTdXBlck1ldGhvZFJlZmVyZW5jZSBub2Rl
KSB7CisJCS8vIGRlZmF1bHQgaW1wbGVtZW50YXRpb246IGRvIG5vdGhpbmcKKwl9CisKKwkvKioK
KwkgKiBFbmQgb2YgdmlzaXQgdGhlIGdpdmVuIHR5cGUtc3BlY2lmaWMgQVNUIG5vZGUuCisJICog
PHA+CisJICogVGhlIGRlZmF1bHQgaW1wbGVtZW50YXRpb24gZG9lcyBub3RoaW5nLiBTdWJjbGFz
c2VzIG1heSByZWltcGxlbWVudC4KKwkgKiA8L3A+CisJICoKKwkgKiBAcGFyYW0gbm9kZSB0aGUg
bm9kZSB0byB2aXNpdAogCSAqLwogCXB1YmxpYyB2b2lkIGVuZFZpc2l0KFN3aXRjaENhc2Ugbm9k
ZSkgewogCQkvLyBkZWZhdWx0IGltcGxlbWVudGF0aW9uOiBkbyBub3RoaW5nCkBAIC0yNjQ5LDYg
KzI3NTcsMjAgQEAKIAkgKiA8L3A+CiAJICoKIAkgKiBAcGFyYW0gbm9kZSB0aGUgbm9kZSB0byB2
aXNpdAorCSAqIAorCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAorCSAqLworCXB1YmxpYyB2b2lk
IGVuZFZpc2l0KFR5cGVNZXRob2RSZWZlcmVuY2Ugbm9kZSkgeworCQkvLyBkZWZhdWx0IGltcGxl
bWVudGF0aW9uOiBkbyBub3RoaW5nCisJfQorCisJLyoqCisJICogRW5kIG9mIHZpc2l0IHRoZSBn
aXZlbiB0eXBlLXNwZWNpZmljIEFTVCBub2RlLgorCSAqIDxwPgorCSAqIFRoZSBkZWZhdWx0IGlt
cGxlbWVudGF0aW9uIGRvZXMgbm90aGluZy4gU3ViY2xhc3NlcyBtYXkgcmVpbXBsZW1lbnQuCisJ
ICogPC9wPgorCSAqCisJICogQHBhcmFtIG5vZGUgdGhlIG5vZGUgdG8gdmlzaXQKIAkgKiBAc2lu
Y2UgMy4xCiAJICovCiAJcHVibGljIHZvaWQgZW5kVmlzaXQoVHlwZVBhcmFtZXRlciBub2RlKSB7
CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2Nv
cmUvZG9tL0JpbmRpbmdSZXNvbHZlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9CaW5kaW5nUmVzb2x2ZXIuamF2YQppbmRleCA3MTI3NGEz
Li4wNmI5YTg5IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlw
c2UvamR0L2NvcmUvZG9tL0JpbmRpbmdSZXNvbHZlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQmluZGluZ1Jlc29sdmVyLmphdmEK
QEAgLTU2MCw2ICs1NjAsNTAgQEAKIAl9CiAKIAkvKioKKwkgKiBSZXNvbHZlcyB0aGUgZ2l2ZW4g
Y3JlYXRpb24gcmVmZXJlbmNlIGFuZCByZXR1cm5zIHRoZSBiaW5kaW5nIGZvciBpdC4KKwkgKiA8
cD4KKwkgKiBUaGUgaW1wbGVtZW50YXRpb24gb2YgPGNvZGU+Q3JlYXRpb25SZWZlcmVuY2UucmVz
b2x2ZU1ldGhvZEJpbmRpbmc8L2NvZGU+CisJICogZm9yd2FyZHMgdG8gdGhpcyBtZXRob2QuIEhv
dyB0aGUgbWV0aG9kIHJlc29sdmVzIGlzIG9mdGVuIGEgZnVuY3Rpb24gb2YKKwkgKiB0aGUgY29u
dGV4dCBpbiB3aGljaCB0aGUgY3JlYXRpb24gcmVmZXJlbmNlIG5vZGUgaXMgZW1iZWRkZWQgYXMg
d2VsbCBhcworCSAqIHRoZSBjcmVhdGlvbiByZWZlcmVuY2Ugc3VidHJlZSBpdHNlbGYuCisJICog
PC9wPgorCSAqIDxwPgorCSAqIFRoZSBkZWZhdWx0IGltcGxlbWVudGF0aW9uIG9mIHRoaXMgbWV0
aG9kIHJldHVybnMgPGNvZGU+bnVsbDwvY29kZT4uCisJICogU3ViY2xhc3NlcyBtYXkgcmVpbXBs
ZW1lbnQuCisJICogPC9wPgorCSAqCisJICogQHBhcmFtIGNyZWF0aW9uUmVmZXJlbmNlIHRoZSBj
cmVhdGlvbiByZWZlcmVuY2Ugb2YgaW50ZXJlc3QKKwkgKiBAcmV0dXJuIHRoZSBiaW5kaW5nIGZv
ciB0aGUgZ2l2ZW4gY3JlYXRpb24gcmVmZXJlbmNlLCBvcgorCSAqICAgIDxjb2RlPm51bGw8L2Nv
ZGU+IGlmIG5vIGJpbmRpbmcgaXMgYXZhaWxhYmxlCisJICogQHNpbmNlIDMuOSBCRVRBX0pBVkE4
CisJICovCisJSU1ldGhvZEJpbmRpbmcgcmVzb2x2ZU1ldGhvZChDcmVhdGlvblJlZmVyZW5jZSBj
cmVhdGlvblJlZmVyZW5jZSkgeworCQlyZXR1cm4gbnVsbDsKKwl9CisKKwkvKioKKwkgKiBSZXNv
bHZlcyB0aGUgZ2l2ZW4gZXhwcmVzc2lvbiBtZXRob2QgcmVmZXJlbmNlIGFuZCByZXR1cm5zIHRo
ZSBiaW5kaW5nIGZvciBpdC4KKwkgKiA8cD4KKwkgKiBUaGUgaW1wbGVtZW50YXRpb24gb2YgPGNv
ZGU+RXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZS5yZXNvbHZlTWV0aG9kQmluZGluZzwvY29kZT4K
KwkgKiBmb3J3YXJkcyB0byB0aGlzIG1ldGhvZC4gSG93IHRoZSBtZXRob2QgcmVzb2x2ZXMgaXMg
b2Z0ZW4gYSBmdW5jdGlvbiBvZgorCSAqIHRoZSBjb250ZXh0IGluIHdoaWNoIHRoZSBleHByZXNz
aW9uIG1ldGhvZCByZWZlcmVuY2Ugbm9kZSBpcyBlbWJlZGRlZCBhcyB3ZWxsIGFzCisJICogdGhl
IGV4cHJlc3Npb24gbWV0aG9kIHJlZmVyZW5jZSBzdWJ0cmVlIGl0c2VsZi4KKwkgKiA8L3A+CisJ
ICogPHA+CisJICogVGhlIGRlZmF1bHQgaW1wbGVtZW50YXRpb24gb2YgdGhpcyBtZXRob2QgcmV0
dXJucyA8Y29kZT5udWxsPC9jb2RlPi4KKwkgKiBTdWJjbGFzc2VzIG1heSByZWltcGxlbWVudC4K
KwkgKiA8L3A+CisJICoKKwkgKiBAcGFyYW0gbWV0aG9kUmVmZXJlbmNlIHRoZSBleHByZXNzaW9u
IG1ldGhvZCByZWZlcmVuY2Ugb2YgaW50ZXJlc3QKKwkgKiBAcmV0dXJuIHRoZSBiaW5kaW5nIGZv
ciB0aGUgZ2l2ZW4gZXhwcmVzc2lvbiBtZXRob2QgcmVmZXJlbmNlLCBvcgorCSAqICAgIDxjb2Rl
Pm51bGw8L2NvZGU+IGlmIG5vIGJpbmRpbmcgaXMgYXZhaWxhYmxlCisJICogQHNpbmNlIDMuOSBC
RVRBX0pBVkE4CisJICovCisJSU1ldGhvZEJpbmRpbmcgcmVzb2x2ZU1ldGhvZChFeHByZXNzaW9u
TWV0aG9kUmVmZXJlbmNlIG1ldGhvZFJlZmVyZW5jZSkgeworCQlyZXR1cm4gbnVsbDsKKwl9CisK
KwkvKioKIAkgKiBSZXNvbHZlcyB0aGUgZ2l2ZW4gbWV0aG9kIGRlY2xhcmF0aW9uIGFuZCByZXR1
cm5zIHRoZSBiaW5kaW5nIGZvciBpdC4KIAkgKiA8cD4KIAkgKiBUaGUgaW1wbGVtZW50YXRpb24g
b2YgPGNvZGU+TWV0aG9kRGVjbGFyYXRpb24ucmVzb2x2ZUJpbmRpbmc8L2NvZGU+CkBAIC02NDQs
NiArNjg4LDUwIEBACiAJfQogCiAJLyoqCisJICogUmVzb2x2ZXMgdGhlIGdpdmVuIHN1cGVyIG1l
dGhvZCByZWZlcmVuY2UgYW5kIHJldHVybnMgdGhlIGJpbmRpbmcgZm9yIGl0LgorCSAqIDxwPgor
CSAqIFRoZSBpbXBsZW1lbnRhdGlvbiBvZiA8Y29kZT5TdXBlck1ldGhvZFJlZmVyZW5jZS5yZXNv
bHZlTWV0aG9kQmluZGluZzwvY29kZT4KKwkgKiBmb3J3YXJkcyB0byB0aGlzIG1ldGhvZC4gSG93
IHRoZSBtZXRob2QgcmVzb2x2ZXMgaXMgb2Z0ZW4gYSBmdW5jdGlvbiBvZgorCSAqIHRoZSBjb250
ZXh0IGluIHdoaWNoIHRoZSBzdXBlciBtZXRob2QgcmVmZXJlbmNlIG5vZGUgaXMgZW1iZWRkZWQg
YXMgd2VsbCBhcworCSAqIHRoZSBzdXBlciBtZXRob2QgcmVmZXJlbmNlIHN1YnRyZWUgaXRzZWxm
LgorCSAqIDwvcD4KKwkgKiA8cD4KKwkgKiBUaGUgZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiBvZiB0
aGlzIG1ldGhvZCByZXR1cm5zIDxjb2RlPm51bGw8L2NvZGU+LgorCSAqIFN1YmNsYXNzZXMgbWF5
IHJlaW1wbGVtZW50LgorCSAqIDwvcD4KKwkgKgorCSAqIEBwYXJhbSBtZXRob2RSZWZlcmVuY2Ug
dGhlIHN1cGVyIG1ldGhvZCByZWZlcmVuY2Ugb2YgaW50ZXJlc3QKKwkgKiBAcmV0dXJuIHRoZSBi
aW5kaW5nIGZvciB0aGUgZ2l2ZW4gc3VwZXIgbWV0aG9kIHJlZmVyZW5jZSwgb3IKKwkgKiAgICA8
Y29kZT5udWxsPC9jb2RlPiBpZiBubyBiaW5kaW5nIGlzIGF2YWlsYWJsZQorCSAqIEBzaW5jZSAz
LjkgQkVUQV9KQVZBOAorCSAqLworCUlNZXRob2RCaW5kaW5nIHJlc29sdmVNZXRob2QoU3VwZXJN
ZXRob2RSZWZlcmVuY2UgbWV0aG9kUmVmZXJlbmNlKSB7CisJCXJldHVybiBudWxsOworCX0KKwor
CS8qKgorCSAqIFJlc29sdmVzIHRoZSBnaXZlbiB0eXBlIG1ldGhvZCByZWZlcmVuY2UgYW5kIHJl
dHVybnMgdGhlIGJpbmRpbmcgZm9yIGl0LgorCSAqIDxwPgorCSAqIFRoZSBpbXBsZW1lbnRhdGlv
biBvZiA8Y29kZT5UeXBlTWV0aG9kUmVmZXJlbmNlLnJlc29sdmVNZXRob2RCaW5kaW5nPC9jb2Rl
PgorCSAqIGZvcndhcmRzIHRvIHRoaXMgbWV0aG9kLiBIb3cgdGhlIG1ldGhvZCByZXNvbHZlcyBp
cyBvZnRlbiBhIGZ1bmN0aW9uIG9mCisJICogdGhlIGNvbnRleHQgaW4gd2hpY2ggdGhlIHR5cGUg
bWV0aG9kIHJlZmVyZW5jZSBub2RlIGlzIGVtYmVkZGVkIGFzIHdlbGwgYXMKKwkgKiB0aGUgdHlw
ZSBtZXRob2QgcmVmZXJlbmNlIHN1YnRyZWUgaXRzZWxmLgorCSAqIDwvcD4KKwkgKiA8cD4KKwkg
KiBUaGUgZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiBvZiB0aGlzIG1ldGhvZCByZXR1cm5zIDxjb2Rl
Pm51bGw8L2NvZGU+LgorCSAqIFN1YmNsYXNzZXMgbWF5IHJlaW1wbGVtZW50LgorCSAqIDwvcD4K
KwkgKgorCSAqIEBwYXJhbSBtZXRob2RSZWZlcmVuY2UgdGhlIHR5cGUgbWV0aG9kIHJlZmVyZW5j
ZSBvZiBpbnRlcmVzdAorCSAqIEByZXR1cm4gdGhlIGJpbmRpbmcgZm9yIHRoZSBnaXZlbiB0eXBl
IG1ldGhvZCByZWZlcmVuY2UsIG9yCisJICogICAgPGNvZGU+bnVsbDwvY29kZT4gaWYgbm8gYmlu
ZGluZyBpcyBhdmFpbGFibGUKKwkgKiBAc2luY2UgMy45IEJFVEFfSkFWQTgKKwkgKi8KKwlJTWV0
aG9kQmluZGluZyByZXNvbHZlTWV0aG9kKFR5cGVNZXRob2RSZWZlcmVuY2UgbWV0aG9kUmVmZXJl
bmNlKSB7CisJCXJldHVybiBudWxsOworCX0KKworCS8qKgogCSAqIFJlc29sdmVzIHRoZSBnaXZl
biBuYW1lIGFuZCByZXR1cm5zIHRoZSB0eXBlIGJpbmRpbmcgZm9yIGl0LgogCSAqIDxwPgogCSAq
IFRoZSBpbXBsZW1lbnRhdGlvbiBvZiA8Y29kZT5OYW1lLnJlc29sdmVCaW5kaW5nPC9jb2RlPiBm
b3J3YXJkcyB0bwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xp
cHNlL2pkdC9jb3JlL2RvbS9DcmVhdGlvblJlZmVyZW5jZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9DcmVhdGlvblJlZmVyZW5jZS5qYXZh
Cm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLjZjN2Y3MjAKLS0tIC9kZXYvbnVs
bAorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9t
L0NyZWF0aW9uUmVmZXJlbmNlLmphdmEKQEAgLTAsMCArMSwyNDkgQEAKKy8qKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqCisgKiBDb3B5cmlnaHQgKGMpIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhl
cnMuCisgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBh
bnlpbmcgbWF0ZXJpYWxzCisgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9m
IHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKKyAqIHdoaWNoIGFjY29tcGFuaWVzIHRo
aXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CisgKiBodHRwOi8vd3d3LmVjbGlw
c2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRp
b24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEph
dmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3Ig
dGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90
IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgorICogCisgKiBD
b250cmlidXRvcnM6CisgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGlt
cGxlbWVudGF0aW9uCisgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KK3BhY2thZ2Ugb3JnLmVjbGlw
c2UuamR0LmNvcmUuZG9tOworCitpbXBvcnQgamF2YS51dGlsLkFycmF5TGlzdDsKK2ltcG9ydCBq
YXZhLnV0aWwuTGlzdDsKKworLyoqCisgKiBDcmVhdGlvbiBSZWZlcmVuY2UgZXhwcmVzc2lvbiBB
U1Qgbm9kZSB0eXBlLgorICogPHByZT4KKyAqIENyZWF0aW9uUmVmZXJlbmNlOgorICogICAgIEV4
cHJlc3Npb24gPGI+Ojo8L2I+IAorICogICAgICAgICBbIDxiPiZsdDs8L2I+IFR5cGUgeyA8Yj4s
PC9iPiBUeXBlIH0gPGI+Jmd0OzwvYj4gXQorICogICAgICAgICA8Yj4gbmV3IDwvYj4KKyAqIDwv
cHJlPgorICoKKyAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAorICogQG5vaW5zdGFudGlhdGUgVGhp
cyBjbGFzcyBpcyBub3QgaW50ZW5kZWQgdG8gYmUgaW5zdGFudGlhdGVkIGJ5IGNsaWVudHMuCisg
Ki8KK3B1YmxpYyBjbGFzcyBDcmVhdGlvblJlZmVyZW5jZSBleHRlbmRzIEV4cHJlc3Npb24gewor
CisJLyoqCisJICogVGhlICJleHByZXNzaW9uIiBzdHJ1Y3R1cmFsIHByb3BlcnR5IG9mIHRoaXMg
bm9kZSB0eXBlIChjaGlsZCB0eXBlOiB7QGxpbmsgRXhwcmVzc2lvbn0pLgorCSAqLworCXB1Ymxp
YyBzdGF0aWMgZmluYWwgQ2hpbGRQcm9wZXJ0eURlc2NyaXB0b3IgRVhQUkVTU0lPTl9QUk9QRVJU
WSA9CisJCW5ldyBDaGlsZFByb3BlcnR5RGVzY3JpcHRvcihDcmVhdGlvblJlZmVyZW5jZS5jbGFz
cywgImV4cHJlc3Npb24iLCBFeHByZXNzaW9uLmNsYXNzLCBNQU5EQVRPUlksIENZQ0xFX1JJU0sp
OyAvLyROT04tTkxTLTEkCisKKwkvKioKKwkgKiBUaGUgInR5cGVBcmd1bWVudHMiIHN0cnVjdHVy
YWwgcHJvcGVydHkgb2YgdGhpcyBub2RlIHR5cGUgKGVsZW1lbnQgdHlwZToge0BsaW5rIFR5cGV9
KSAKKwkgKi8KKwlwdWJsaWMgc3RhdGljIGZpbmFsIENoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRv
ciBUWVBFX0FSR1VNRU5UU19QUk9QRVJUWSA9CisJCW5ldyBDaGlsZExpc3RQcm9wZXJ0eURlc2Ny
aXB0b3IoQ3JlYXRpb25SZWZlcmVuY2UuY2xhc3MsICJ0eXBlQXJndW1lbnRzIiwgVHlwZS5jbGFz
cywgTk9fQ1lDTEVfUklTSyk7IC8vJE5PTi1OTFMtMSQKKworCS8qKgorCSAqIEEgbGlzdCBvZiBw
cm9wZXJ0eSBkZXNjcmlwdG9ycyAoZWxlbWVudCB0eXBlOgorCSAqIHtAbGluayBTdHJ1Y3R1cmFs
UHJvcGVydHlEZXNjcmlwdG9yfSksCisJICogb3IgbnVsbCBpZiB1bmluaXRpYWxpemVkLgorCSAq
LworCXByaXZhdGUgc3RhdGljIGZpbmFsIExpc3QgUFJPUEVSVFlfREVTQ1JJUFRPUlNfOF8wOwor
CQorCXN0YXRpYyB7CisJCUxpc3QgcHJvcGVydHlMaXN0ID0gbmV3IEFycmF5TGlzdCg0KTsKKwkJ
Y3JlYXRlUHJvcGVydHlMaXN0KENyZWF0aW9uUmVmZXJlbmNlLmNsYXNzLCBwcm9wZXJ0eUxpc3Qp
OworCQlhZGRQcm9wZXJ0eShFWFBSRVNTSU9OX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOworCQlh
ZGRQcm9wZXJ0eShUWVBFX0FSR1VNRU5UU19QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKKwkJUFJP
UEVSVFlfREVTQ1JJUFRPUlNfOF8wID0gcmVhcFByb3BlcnR5TGlzdChwcm9wZXJ0eUxpc3QpOwor
CX0KKwkKKwkvKioKKwkgKiBSZXR1cm5zIGEgbGlzdCBvZiBzdHJ1Y3R1cmFsIHByb3BlcnR5IGRl
c2NyaXB0b3JzIGZvciB0aGlzIG5vZGUgdHlwZS4KKwkgKiBDbGllbnRzIG11c3Qgbm90IG1vZGlm
eSB0aGUgcmVzdWx0LgorCSAqCisJICogQHBhcmFtIGFwaUxldmVsIHRoZSBBUEkgbGV2ZWw7IG9u
ZSBvZiB0aGUgQVNULkpMUyogY29uc3RhbnRzCisJICogQHJldHVybiBhIGxpc3Qgb2YgcHJvcGVy
dHkgZGVzY3JpcHRvcnMgKGVsZW1lbnQgdHlwZToKKwkgKiB7QGxpbmsgU3RydWN0dXJhbFByb3Bl
cnR5RGVzY3JpcHRvcn0pCisJICovCisJcHVibGljIHN0YXRpYyBMaXN0IHByb3BlcnR5RGVzY3Jp
cHRvcnMoaW50IGFwaUxldmVsKSB7CisJCXJldHVybiBQUk9QRVJUWV9ERVNDUklQVE9SU184XzA7
CisJfQorCisJLyoqCisJICogVGhlIGV4cHJlc3Npb247IGRlZmF1bHRzIHRvIG51bGwuCisJICov
CisJcHJpdmF0ZSBFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBudWxsOworCisJLyoqCisJICogVGhl
IHR5cGUgYXJndW1lbnRzIChlbGVtZW50IHR5cGU6IHtAbGluayBUeXBlfSkuCisJICogRGVmYXVs
dHMgdG8gYW4gZW1wdHkgbGlzdC4KKwkgKi8KKwlwcml2YXRlIEFTVE5vZGUuTm9kZUxpc3QgdHlw
ZUFyZ3VtZW50cyA9CisJCW5ldyBBU1ROb2RlLk5vZGVMaXN0KFRZUEVfQVJHVU1FTlRTX1BST1BF
UlRZKTsKKwkKKwkvKioKKwkgKiBDcmVhdGVzIGEgbmV3IEFTVCBub2RlIGZvciBhbiBDcmVhdGlv
blJlZmVyZW5jZSBkZWNsYXJhdGlvbiBvd25lZAorCSAqIGJ5IHRoZSBnaXZlbiBBU1QuCisJICog
PHA+CisJICogTi5CLiBUaGlzIGNvbnN0cnVjdG9yIGlzIHBhY2thZ2UtcHJpdmF0ZTsgYWxsIHN1
YmNsYXNzZXMgbXVzdCBiZQorCSAqIGRlY2xhcmVkIGluIHRoZSBzYW1lIHBhY2thZ2U7IGNsaWVu
dHMgYXJlIHVuYWJsZSB0byBkZWNsYXJlCisJICogYWRkaXRpb25hbCBzdWJjbGFzc2VzLgorCSAq
IDwvcD4KKwkgKgorCSAqIEBwYXJhbSBhc3QgdGhlIEFTVCB0aGF0IGlzIHRvIG93biB0aGlzIG5v
ZGUKKwkgKi8KKwlDcmVhdGlvblJlZmVyZW5jZShBU1QgYXN0KSB7CisJCXN1cGVyKGFzdCk7CisJ
CXVuc3VwcG9ydGVkSW4yXzNfNCgpOworCX0KKworCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMg
bWV0aG9kKQorCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAqLworCWZpbmFsIExp
c3QgaW50ZXJuYWxTdHJ1Y3R1cmFsUHJvcGVydGllc0ZvclR5cGUoaW50IGFwaUxldmVsKSB7CisJ
CXJldHVybiBwcm9wZXJ0eURlc2NyaXB0b3JzKGFwaUxldmVsKTsKKwl9CisKKwkvKiAob21pdCBq
YXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKKwkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4K
KwkgKi8KKwlmaW5hbCBBU1ROb2RlIGludGVybmFsR2V0U2V0Q2hpbGRQcm9wZXJ0eShDaGlsZFBy
b3BlcnR5RGVzY3JpcHRvciBwcm9wZXJ0eSwgYm9vbGVhbiBnZXQsIEFTVE5vZGUgY2hpbGQpIHsK
KwkJaWYgKHByb3BlcnR5ID09IEVYUFJFU1NJT05fUFJPUEVSVFkpIHsKKwkJCWlmIChnZXQpIHsK
KwkJCQlyZXR1cm4gZ2V0RXhwcmVzc2lvbigpOworCQkJfSBlbHNlIHsKKwkJCQlzZXRFeHByZXNz
aW9uKChFeHByZXNzaW9uKSBjaGlsZCk7CisJCQkJcmV0dXJuIG51bGw7CisJCQl9CisJCX0KKwkJ
Ly8gYWxsb3cgZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiB0byBmbGFnIHRoZSBlcnJvcgorCQlyZXR1
cm4gc3VwZXIuaW50ZXJuYWxHZXRTZXRDaGlsZFByb3BlcnR5KHByb3BlcnR5LCBnZXQsIGNoaWxk
KTsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKKwkgKiBNZXRob2Qg
ZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8KKwlmaW5hbCBMaXN0IGludGVybmFsR2V0Q2hpbGRM
aXN0UHJvcGVydHkoQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yIHByb3BlcnR5KSB7CisJCWlm
IChwcm9wZXJ0eSA9PSBUWVBFX0FSR1VNRU5UU19QUk9QRVJUWSkgeworCQkJcmV0dXJuIHR5cGVB
cmd1bWVudHMoKTsKKwkJfQorCQkvLyBhbGxvdyBkZWZhdWx0IGltcGxlbWVudGF0aW9uIHRvIGZs
YWcgdGhlIGVycm9yCisJCXJldHVybiBzdXBlci5pbnRlcm5hbEdldENoaWxkTGlzdFByb3BlcnR5
KHByb3BlcnR5KTsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKKwkg
KiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8KKwlmaW5hbCBpbnQgZ2V0Tm9kZVR5
cGUwKCkgeworCQlyZXR1cm4gQ1JFQVRJT05fUkVGRVJFTkNFOworCX0KKworCS8qIChvbWl0IGph
dmFkb2MgZm9yIHRoaXMgbWV0aG9kKQorCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgor
CSAqLworCUFTVE5vZGUgY2xvbmUwKEFTVCB0YXJnZXQpIHsKKwkJQ3JlYXRpb25SZWZlcmVuY2Ug
cmVzdWx0ID0gbmV3IENyZWF0aW9uUmVmZXJlbmNlKHRhcmdldCk7CisJCXJlc3VsdC5zZXRTb3Vy
Y2VSYW5nZShnZXRTdGFydFBvc2l0aW9uKCksIGdldExlbmd0aCgpKTsKKwkJcmVzdWx0LnNldEV4
cHJlc3Npb24oCisJCQkoRXhwcmVzc2lvbikgQVNUTm9kZS5jb3B5U3VidHJlZSh0YXJnZXQsIGdl
dEV4cHJlc3Npb24oKSkpOworCQlyZXN1bHQudHlwZUFyZ3VtZW50cygpLmFkZEFsbChBU1ROb2Rl
LmNvcHlTdWJ0cmVlcyh0YXJnZXQsIHR5cGVBcmd1bWVudHMoKSkpOworCQlyZXR1cm4gcmVzdWx0
OworCX0KKworCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQorCSAqIE1ldGhvZCBk
ZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAqLworCWZpbmFsIGJvb2xlYW4gc3VidHJlZU1hdGNoMChB
U1RNYXRjaGVyIG1hdGNoZXIsIE9iamVjdCBvdGhlcikgeworCQkvLyBkaXNwYXRjaCB0byBjb3Jy
ZWN0IG92ZXJsb2FkZWQgbWF0Y2ggbWV0aG9kCisJCXJldHVybiBtYXRjaGVyLm1hdGNoKHRoaXMs
IG90aGVyKTsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKKwkgKiBN
ZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8KKwl2b2lkIGFjY2VwdDAoQVNUVmlzaXRv
ciB2aXNpdG9yKSB7CisJCWJvb2xlYW4gdmlzaXRDaGlsZHJlbiA9IHZpc2l0b3IudmlzaXQodGhp
cyk7CisJCWlmICh2aXNpdENoaWxkcmVuKSB7CisJCQkvLyB2aXNpdCBjaGlsZHJlbiBpbiBub3Jt
YWwgbGVmdCB0byByaWdodCByZWFkaW5nIG9yZGVyCisJCQlhY2NlcHRDaGlsZCh2aXNpdG9yLCBn
ZXRFeHByZXNzaW9uKCkpOworCQkJYWNjZXB0Q2hpbGRyZW4odmlzaXRvciwgdGhpcy50eXBlQXJn
dW1lbnRzKTsKKwkJfQorCQl2aXNpdG9yLmVuZFZpc2l0KHRoaXMpOworCX0KKworCS8qKgorCSAq
IFJldHVybnMgdGhlIGV4cHJlc3Npb24gb2YgdGhpcyBDcmVhdGlvbiBSZWZlcmVuY2UgZXhwcmVz
c2lvbiwgb3IKKwkgKiA8Y29kZT5udWxsPC9jb2RlPiBpZiB0aGVyZSBpcyBub25lLgorCSAqCisJ
ICogQHJldHVybiB0aGUgZXhwcmVzc2lvbiBub2RlLCBvciA8Y29kZT5udWxsPC9jb2RlPiBpZiB0
aGVyZSBpcyBub25lCisJICovCisJcHVibGljIEV4cHJlc3Npb24gZ2V0RXhwcmVzc2lvbigpIHsK
KwkJcmV0dXJuIHRoaXMuZXhwcmVzc2lvbjsKKwl9CisKKwkvKioKKwkgKiBTZXRzIG9yIGNsZWFy
cyB0aGUgZXhwcmVzc2lvbiBvZiB0aGlzIENyZWF0aW9uIFJlZmVyZW5jZS4KKwkgKgorCSAqIEBw
YXJhbSBleHByZXNzaW9uIHRoZSBleHByZXNzaW9uIG5vZGUsIG9yIDxjb2RlPm51bGw8L2NvZGU+
IGlmCisJICogICAgdGhlcmUgaXMgbm9uZQorCSAqIEBleGNlcHRpb24gSWxsZWdhbEFyZ3VtZW50
RXhjZXB0aW9uIGlmOgorCSAqIDx1bD4KKwkgKiA8bGk+dGhlIG5vZGUgYmVsb25ncyB0byBhIGRp
ZmZlcmVudCBBU1Q8L2xpPgorCSAqIDxsaT50aGUgbm9kZSBhbHJlYWR5IGhhcyBhIHBhcmVudDwv
bGk+CisJICogPGxpPmEgY3ljbGUgaW4gd291bGQgYmUgY3JlYXRlZDwvbGk+CisJICogPC91bD4K
KwkgKi8KKwlwdWJsaWMgdm9pZCBzZXRFeHByZXNzaW9uKEV4cHJlc3Npb24gZXhwcmVzc2lvbikg
eworCQlpZiAoZXhwcmVzc2lvbiA9PSBudWxsKSB7CisJCQl0aHJvdyBuZXcgSWxsZWdhbEFyZ3Vt
ZW50RXhjZXB0aW9uKCk7CisJCX0KKwkJQVNUTm9kZSBvbGRDaGlsZCA9IHRoaXMuZXhwcmVzc2lv
bjsKKwkJcHJlUmVwbGFjZUNoaWxkKG9sZENoaWxkLCBleHByZXNzaW9uLCBFWFBSRVNTSU9OX1BS
T1BFUlRZKTsKKwkJdGhpcy5leHByZXNzaW9uID0gZXhwcmVzc2lvbjsKKwkJcG9zdFJlcGxhY2VD
aGlsZChvbGRDaGlsZCwgZXhwcmVzc2lvbiwgRVhQUkVTU0lPTl9QUk9QRVJUWSk7CisJfQorCisJ
LyoqCisJICogUmV0dXJucyB0aGUgbGl2ZSBvcmRlcmVkIGxpc3Qgb2YgdHlwZSBhcmd1bWVudHMg
b2YgdGhpcyBDcmVhdGlvbiBSZWZlcmVuY2UuCisJICoKKwkgKiBAcmV0dXJuIHRoZSBsaXZlIGxp
c3Qgb2YgdHlwZSBhcmd1bWVudHMKKwkgKiAgICAoZWxlbWVudCB0eXBlOiB7QGxpbmsgVHlwZX0p
CisJICovCisJcHVibGljIExpc3QgdHlwZUFyZ3VtZW50cygpIHsKKwkJcmV0dXJuIHRoaXMudHlw
ZUFyZ3VtZW50czsKKwl9CisKKwkvKioKKwkgKiBSZXNvbHZlcyBhbmQgcmV0dXJucyB0aGUgYmlu
ZGluZyBmb3IgdGhlIG1ldGhvZCByZWZlcmVuY2UgYnkgdGhpcworCSAqIGV4cHJlc3Npb24uCisJ
ICogPHA+CisJICogTm90ZSB0aGF0IGJpbmRpbmdzIGFyZSBnZW5lcmFsbHkgdW5hdmFpbGFibGUg
dW5sZXNzIHJlcXVlc3RlZCB3aGVuIHRoZQorCSAqIEFTVCBpcyBiZWluZyBidWlsdC4KKwkgKiA8
L3A+CisJICoKKwkgKiBAcmV0dXJuIHRoZSBtZXRob2QgYmluZGluZywgb3IgPGNvZGU+bnVsbDwv
Y29kZT4gaWYgdGhlIGJpbmRpbmcgY2Fubm90CisJICogYmUgcmVzb2x2ZWQKKwkgKi8KKwlwdWJs
aWMgSU1ldGhvZEJpbmRpbmcgcmVzb2x2ZU1ldGhvZEJpbmRpbmcoKSB7CisJCXJldHVybiB0aGlz
LmFzdC5nZXRCaW5kaW5nUmVzb2x2ZXIoKS5yZXNvbHZlTWV0aG9kKHRoaXMpOworCX0KKworCS8q
IChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQorCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBB
U1ROb2RlLgorCSAqLworCWludCBtZW1TaXplKCkgeworCQkvLyB0cmVhdCBDb2RlIGFzIGZyZWUK
KwkJcmV0dXJuIEJBU0VfTk9ERV9TSVpFICsgMiAqIDQ7CisJfQorCisJLyogKG9taXQgamF2YWRv
YyBmb3IgdGhpcyBtZXRob2QpCisJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCisJICov
CisJaW50IHRyZWVTaXplKCkgeworCQlyZXR1cm4KKwkJCW1lbVNpemUoKQorCQkJKyAodGhpcy5l
eHByZXNzaW9uID09IG51bGwgPyAwIDogZ2V0RXhwcmVzc2lvbigpLnRyZWVTaXplKCkpCisJCQkr
ICh0aGlzLnR5cGVBcmd1bWVudHMgPT0gbnVsbCA/IDAgOiB0aGlzLnR5cGVBcmd1bWVudHMubGlz
dFNpemUoKSk7CisJfQorfQpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGUKZGlmZiAtLWdpdCBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vRGVmYXVs
dEFTVFZpc2l0b3IuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9q
ZHQvY29yZS9kb20vRGVmYXVsdEFTVFZpc2l0b3IuamF2YQppbmRleCA1MWYyYmY0Li4xZGNkNzU2
IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2Nv
cmUvZG9tL0RlZmF1bHRBU1RWaXNpdG9yLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUv
ZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9EZWZhdWx0QVNUVmlzaXRvci5qYXZhCkBAIC05
Miw2ICs5Miw5IEBACiAJcHVibGljIHZvaWQgZW5kVmlzaXQoQ29udGludWVTdGF0ZW1lbnQgbm9k
ZSkgewogCQllbmRWaXNpdE5vZGUobm9kZSk7CiAJfQorCXB1YmxpYyB2b2lkIGVuZFZpc2l0KENy
ZWF0aW9uUmVmZXJlbmNlIG5vZGUpIHsKKwkJZW5kVmlzaXROb2RlKG5vZGUpOworCX0KIAlwdWJs
aWMgdm9pZCBlbmRWaXNpdChEb1N0YXRlbWVudCBub2RlKSB7CiAJCWVuZFZpc2l0Tm9kZShub2Rl
KTsKIAl9CkBAIC0xMDUsNiArMTA4LDkgQEAKIAkJZW5kVmlzaXROb2RlKG5vZGUpOwogCX0KIAlw
dWJsaWMgdm9pZCBlbmRWaXNpdChFbnVtRGVjbGFyYXRpb24gbm9kZSkgeworCQllbmRWaXNpdE5v
ZGUobm9kZSk7CisJfQorCXB1YmxpYyB2b2lkIGVuZFZpc2l0KEV4cHJlc3Npb25NZXRob2RSZWZl
cmVuY2Ugbm9kZSkgewogCQllbmRWaXNpdE5vZGUobm9kZSk7CiAJfQogCXB1YmxpYyB2b2lkIGVu
ZFZpc2l0KEV4cHJlc3Npb25TdGF0ZW1lbnQgbm9kZSkgewpAQCAtMjM5LDcgKzI0NSw5IEBACiAJ
cHVibGljIHZvaWQgZW5kVmlzaXQoU3VwZXJNZXRob2RJbnZvY2F0aW9uIG5vZGUpIHsKIAkJZW5k
VmlzaXROb2RlKG5vZGUpOwogCX0KLQorCXB1YmxpYyB2b2lkIGVuZFZpc2l0KFN1cGVyTWV0aG9k
UmVmZXJlbmNlIG5vZGUpIHsKKwkJZW5kVmlzaXROb2RlKG5vZGUpOworCX0KIAlwdWJsaWMgdm9p
ZCBlbmRWaXNpdChTd2l0Y2hDYXNlIG5vZGUpIHsKIAkJZW5kVmlzaXROb2RlKG5vZGUpOwogCX0K
QEAgLTI3Miw2ICsyODAsOSBAQAogCQllbmRWaXNpdE5vZGUobm9kZSk7CiAJfQogCXB1YmxpYyB2
b2lkIGVuZFZpc2l0KFR5cGVMaXRlcmFsIG5vZGUpIHsKKwkJZW5kVmlzaXROb2RlKG5vZGUpOwor
CX0KKwlwdWJsaWMgdm9pZCBlbmRWaXNpdChUeXBlTWV0aG9kUmVmZXJlbmNlIG5vZGUpIHsKIAkJ
ZW5kVmlzaXROb2RlKG5vZGUpOwogCX0KIAlwdWJsaWMgdm9pZCBlbmRWaXNpdChUeXBlUGFyYW1l
dGVyIG5vZGUpIHsKQEAgLTM2Myw2ICszNzQsOSBAQAogCXB1YmxpYyBib29sZWFuIHZpc2l0KENv
bnRpbnVlU3RhdGVtZW50IG5vZGUpIHsKIAkJcmV0dXJuIHZpc2l0Tm9kZShub2RlKTsKIAl9CisJ
cHVibGljIGJvb2xlYW4gdmlzaXQoQ3JlYXRpb25SZWZlcmVuY2Ugbm9kZSkgeworCQlyZXR1cm4g
dmlzaXROb2RlKG5vZGUpOworCX0KIAlwdWJsaWMgYm9vbGVhbiB2aXNpdChEb1N0YXRlbWVudCBu
b2RlKSB7CiAJCXJldHVybiB2aXNpdE5vZGUobm9kZSk7CiAJfQpAQCAtMzc2LDYgKzM5MCw5IEBA
CiAJCXJldHVybiB2aXNpdE5vZGUobm9kZSk7CiAJfQogCXB1YmxpYyBib29sZWFuIHZpc2l0KEVu
dW1EZWNsYXJhdGlvbiBub2RlKSB7CisJCXJldHVybiB2aXNpdE5vZGUobm9kZSk7CisJfQorCXB1
YmxpYyBib29sZWFuIHZpc2l0KEV4cHJlc3Npb25NZXRob2RSZWZlcmVuY2Ugbm9kZSkgewogCQly
ZXR1cm4gdmlzaXROb2RlKG5vZGUpOwogCX0KIAlwdWJsaWMgYm9vbGVhbiB2aXNpdChFeHByZXNz
aW9uU3RhdGVtZW50IG5vZGUpIHsKQEAgLTUyMCw2ICs1MzcsMTAgQEAKIAkJcmV0dXJuIHZpc2l0
Tm9kZShub2RlKTsKIAl9CiAKKwlwdWJsaWMgYm9vbGVhbiB2aXNpdChTdXBlck1ldGhvZFJlZmVy
ZW5jZSBub2RlKSB7CisJCXJldHVybiB2aXNpdE5vZGUobm9kZSk7CisJfQorCiAJcHVibGljIGJv
b2xlYW4gdmlzaXQoU3dpdGNoQ2FzZSBub2RlKSB7CiAJCXJldHVybiB2aXNpdE5vZGUobm9kZSk7
CiAJfQpAQCAtNTY0LDYgKzU4NSwxMCBAQAogCQlyZXR1cm4gdmlzaXROb2RlKG5vZGUpOwogCX0K
IAorCXB1YmxpYyBib29sZWFuIHZpc2l0KFR5cGVNZXRob2RSZWZlcmVuY2Ugbm9kZSkgeworCQly
ZXR1cm4gdmlzaXROb2RlKG5vZGUpOworCX0KKwogCXB1YmxpYyBib29sZWFuIHZpc2l0KFR5cGVQ
YXJhbWV0ZXIgbm9kZSkgewogCQlyZXR1cm4gdmlzaXROb2RlKG5vZGUpOwogCX0KZGlmZiAtLWdp
dCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vRGVm
YXVsdEJpbmRpbmdSZXNvbHZlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL2RvbS9EZWZhdWx0QmluZGluZ1Jlc29sdmVyLmphdmEKaW5kZXggZGMy
YzA1Zi4uM2U2MTgwYiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL2RvbS9EZWZhdWx0QmluZGluZ1Jlc29sdmVyLmphdmEKKysrIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9EZWZhdWx0Qmlu
ZGluZ1Jlc29sdmVyLmphdmEKQEAgLTcwOSw2ICs3MDksMTAgQEAKIAkJCQljYXNlIEFTVE5vZGUu
SU5GSVhfRVhQUkVTU0lPTiA6CiAJCQkJY2FzZSBBU1ROb2RlLklOU1RBTkNFT0ZfRVhQUkVTU0lP
TiA6CiAJCQkJY2FzZSBBU1ROb2RlLkxBTUJEQV9FWFBSRVNTSU9OOgorCQkJCWNhc2UgQVNUTm9k
ZS5DUkVBVElPTl9SRUZFUkVOQ0U6CisJCQkJY2FzZSBBU1ROb2RlLkVYUFJFU1NJT05fTUVUSE9E
X1JFRkVSRU5DRToKKwkJCQljYXNlIEFTVE5vZGUuVFlQRV9NRVRIT0RfUkVGRVJFTkNFOgorCQkJ
CWNhc2UgQVNUTm9kZS5TVVBFUl9NRVRIT0RfUkVGRVJFTkNFIDoKIAkJCQljYXNlIEFTVE5vZGUu
RklFTERfQUNDRVNTIDoKIAkJCQljYXNlIEFTVE5vZGUuU1VQRVJfRklFTERfQUNDRVNTIDoKIAkJ
CQljYXNlIEFTVE5vZGUuQVJSQVlfQUNDRVNTIDoKQEAgLTg3NSwxNSArODc5LDM1IEBACiAJLyoK
IAkgKiBNZXRob2QgZGVjbGFyZWQgb24gQmluZGluZ1Jlc29sdmVyLgogCSAqLwotCXN5bmNocm9u
aXplZCBJTWV0aG9kQmluZGluZyByZXNvbHZlTWV0aG9kKE1ldGhvZERlY2xhcmF0aW9uIG1ldGhv
ZCkgewotCQlPYmplY3Qgb2xkTm9kZSA9IHRoaXMubmV3QXN0VG9PbGRBc3QuZ2V0KG1ldGhvZCk7
Ci0JCWlmIChvbGROb2RlIGluc3RhbmNlb2YgQWJzdHJhY3RNZXRob2REZWNsYXJhdGlvbikgewot
CQkJQWJzdHJhY3RNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiA9IChBYnN0cmFj
dE1ldGhvZERlY2xhcmF0aW9uKSBvbGROb2RlOwotCQkJSU1ldGhvZEJpbmRpbmcgbWV0aG9kQmlu
ZGluZyA9IGdldE1ldGhvZEJpbmRpbmcobWV0aG9kRGVjbGFyYXRpb24uYmluZGluZyk7CisJc3lu
Y2hyb25pemVkIElNZXRob2RCaW5kaW5nIHJlc29sdmVNZXRob2QoQ3JlYXRpb25SZWZlcmVuY2Ug
Y3JlYXRpb25SZWZlcmVuY2UpIHsKKwkJT2JqZWN0IG9sZE5vZGUgPSB0aGlzLm5ld0FzdFRvT2xk
QXN0LmdldChjcmVhdGlvblJlZmVyZW5jZSk7CisJCWlmIChvbGROb2RlIGluc3RhbmNlb2Ygb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5SZWZlcmVuY2VFeHByZXNzaW9uKSB7
CisJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlJlZmVyZW5jZUV4cHJl
c3Npb24gcmVmZXJlbmNlRXhwcmVzc2lvbiA9IChvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIuYXN0LlJlZmVyZW5jZUV4cHJlc3Npb24pIG9sZE5vZGU7CisJCQlJTWV0aG9kQmluZGlu
ZyBtZXRob2RCaW5kaW5nID0gZ2V0TWV0aG9kQmluZGluZyhyZWZlcmVuY2VFeHByZXNzaW9uLmJp
bmRpbmcpOwogCQkJaWYgKG1ldGhvZEJpbmRpbmcgPT0gbnVsbCkgewogCQkJCXJldHVybiBudWxs
OwogCQkJfQotCQkJdGhpcy5iaW5kaW5nc1RvQXN0Tm9kZXMucHV0KG1ldGhvZEJpbmRpbmcsIG1l
dGhvZCk7CisJCQl0aGlzLmJpbmRpbmdzVG9Bc3ROb2Rlcy5wdXQobWV0aG9kQmluZGluZywgY3Jl
YXRpb25SZWZlcmVuY2UpOworCQkJU3RyaW5nIGtleSA9IG1ldGhvZEJpbmRpbmcuZ2V0S2V5KCk7
CisJCQlpZiAoa2V5ICE9IG51bGwpIHsKKwkJCQl0aGlzLmJpbmRpbmdUYWJsZXMuYmluZGluZ0tl
eXNUb0JpbmRpbmdzLnB1dChrZXksIG1ldGhvZEJpbmRpbmcpOworCQkJfQorCQkJcmV0dXJuIG1l
dGhvZEJpbmRpbmc7CisJCX0KKwkJcmV0dXJuIG51bGw7CisJfQorCS8qCisJICogTWV0aG9kIGRl
Y2xhcmVkIG9uIEJpbmRpbmdSZXNvbHZlci4KKwkgKi8KKwlzeW5jaHJvbml6ZWQgSU1ldGhvZEJp
bmRpbmcgcmVzb2x2ZU1ldGhvZChFeHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlIG1ldGhvZFJlZmVy
ZW5jZSkgeworCQlPYmplY3Qgb2xkTm9kZSA9IHRoaXMubmV3QXN0VG9PbGRBc3QuZ2V0KG1ldGhv
ZFJlZmVyZW5jZSk7CisJCWlmIChvbGROb2RlIGluc3RhbmNlb2Ygb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmFzdC5SZWZlcmVuY2VFeHByZXNzaW9uKSB7CisJCQlvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlJlZmVyZW5jZUV4cHJlc3Npb24gcmVmZXJlbmNl
RXhwcmVzc2lvbiA9IChvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlJlZmVy
ZW5jZUV4cHJlc3Npb24pIG9sZE5vZGU7CisJCQlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5n
ID0gZ2V0TWV0aG9kQmluZGluZyhyZWZlcmVuY2VFeHByZXNzaW9uLmJpbmRpbmcpOworCQkJaWYg
KG1ldGhvZEJpbmRpbmcgPT0gbnVsbCkgeworCQkJCXJldHVybiBudWxsOworCQkJfQorCQkJdGhp
cy5iaW5kaW5nc1RvQXN0Tm9kZXMucHV0KG1ldGhvZEJpbmRpbmcsIG1ldGhvZFJlZmVyZW5jZSk7
CiAJCQlTdHJpbmcga2V5ID0gbWV0aG9kQmluZGluZy5nZXRLZXkoKTsKIAkJCWlmIChrZXkgIT0g
bnVsbCkgewogCQkJCXRoaXMuYmluZGluZ1RhYmxlcy5iaW5kaW5nS2V5c1RvQmluZGluZ3MucHV0
KGtleSwgbWV0aG9kQmluZGluZyk7CkBAIC05MDQsNiArOTI4LDI2IEBACiAJCQkJcmV0dXJuIG51
bGw7CiAJCQl9CiAJCQl0aGlzLmJpbmRpbmdzVG9Bc3ROb2Rlcy5wdXQobWV0aG9kQmluZGluZywg
bGFtYmRhKTsKKwkJCVN0cmluZyBrZXkgPSBtZXRob2RCaW5kaW5nLmdldEtleSgpOworCQkJaWYg
KGtleSAhPSBudWxsKSB7CisJCQkJdGhpcy5iaW5kaW5nVGFibGVzLmJpbmRpbmdLZXlzVG9CaW5k
aW5ncy5wdXQoa2V5LCBtZXRob2RCaW5kaW5nKTsKKwkJCX0KKwkJCXJldHVybiBtZXRob2RCaW5k
aW5nOworCQl9CisJCXJldHVybiBudWxsOworCX0KKwkvKgorCSAqIE1ldGhvZCBkZWNsYXJlZCBv
biBCaW5kaW5nUmVzb2x2ZXIuCisJICovCisJc3luY2hyb25pemVkIElNZXRob2RCaW5kaW5nIHJl
c29sdmVNZXRob2QoTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kKSB7CisJCU9iamVjdCBvbGROb2Rl
ID0gdGhpcy5uZXdBc3RUb09sZEFzdC5nZXQobWV0aG9kKTsKKwkJaWYgKG9sZE5vZGUgaW5zdGFu
Y2VvZiBBYnN0cmFjdE1ldGhvZERlY2xhcmF0aW9uKSB7CisJCQlBYnN0cmFjdE1ldGhvZERlY2xh
cmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKEFic3RyYWN0TWV0aG9kRGVjbGFyYXRpb24pIG9s
ZE5vZGU7CisJCQlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nID0gZ2V0TWV0aG9kQmluZGlu
ZyhtZXRob2REZWNsYXJhdGlvbi5iaW5kaW5nKTsKKwkJCWlmIChtZXRob2RCaW5kaW5nID09IG51
bGwpIHsKKwkJCQlyZXR1cm4gbnVsbDsKKwkJCX0KKwkJCXRoaXMuYmluZGluZ3NUb0FzdE5vZGVz
LnB1dChtZXRob2RCaW5kaW5nLCBtZXRob2QpOwogCQkJU3RyaW5nIGtleSA9IG1ldGhvZEJpbmRp
bmcuZ2V0S2V5KCk7CiAJCQlpZiAoa2V5ICE9IG51bGwpIHsKIAkJCQl0aGlzLmJpbmRpbmdUYWJs
ZXMuYmluZGluZ0tleXNUb0JpbmRpbmdzLnB1dChrZXksIG1ldGhvZEJpbmRpbmcpOwpAQCAtOTM0
LDcgKzk3OCw0NiBAQAogCQl9CiAJCXJldHVybiBudWxsOwogCX0KLQorCS8qCisJICogTWV0aG9k
IGRlY2xhcmVkIG9uIEJpbmRpbmdSZXNvbHZlci4KKwkgKi8KKwlzeW5jaHJvbml6ZWQgSU1ldGhv
ZEJpbmRpbmcgcmVzb2x2ZU1ldGhvZChTdXBlck1ldGhvZFJlZmVyZW5jZSBtZXRob2RSZWZlcmVu
Y2UpIHsKKwkJT2JqZWN0IG9sZE5vZGUgPSB0aGlzLm5ld0FzdFRvT2xkQXN0LmdldChtZXRob2RS
ZWZlcmVuY2UpOworCQlpZiAob2xkTm9kZSBpbnN0YW5jZW9mIG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5hc3QuUmVmZXJlbmNlRXhwcmVzc2lvbikgeworCQkJb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5SZWZlcmVuY2VFeHByZXNzaW9uIHJlZmVyZW5jZUV4
cHJlc3Npb24gPSAob3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5SZWZlcmVu
Y2VFeHByZXNzaW9uKSBvbGROb2RlOworCQkJSU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZyA9
IGdldE1ldGhvZEJpbmRpbmcocmVmZXJlbmNlRXhwcmVzc2lvbi5iaW5kaW5nKTsKKwkJCWlmICht
ZXRob2RCaW5kaW5nID09IG51bGwpIHsKKwkJCQlyZXR1cm4gbnVsbDsKKwkJCX0KKwkJCXRoaXMu
YmluZGluZ3NUb0FzdE5vZGVzLnB1dChtZXRob2RCaW5kaW5nLCBtZXRob2RSZWZlcmVuY2UpOwor
CQkJU3RyaW5nIGtleSA9IG1ldGhvZEJpbmRpbmcuZ2V0S2V5KCk7CisJCQlpZiAoa2V5ICE9IG51
bGwpIHsKKwkJCQl0aGlzLmJpbmRpbmdUYWJsZXMuYmluZGluZ0tleXNUb0JpbmRpbmdzLnB1dChr
ZXksIG1ldGhvZEJpbmRpbmcpOworCQkJfQorCQkJcmV0dXJuIG1ldGhvZEJpbmRpbmc7CisJCX0K
KwkJcmV0dXJuIG51bGw7CisJfQorCS8qCisJICogTWV0aG9kIGRlY2xhcmVkIG9uIEJpbmRpbmdS
ZXNvbHZlci4KKwkgKi8KKwlzeW5jaHJvbml6ZWQgSU1ldGhvZEJpbmRpbmcgcmVzb2x2ZU1ldGhv
ZChUeXBlTWV0aG9kUmVmZXJlbmNlIG1ldGhvZFJlZmVyZW5jZSkgeworCQlPYmplY3Qgb2xkTm9k
ZSA9IHRoaXMubmV3QXN0VG9PbGRBc3QuZ2V0KG1ldGhvZFJlZmVyZW5jZSk7CisJCWlmIChvbGRO
b2RlIGluc3RhbmNlb2Ygb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5SZWZl
cmVuY2VFeHByZXNzaW9uKSB7CisJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
YXN0LlJlZmVyZW5jZUV4cHJlc3Npb24gcmVmZXJlbmNlRXhwcmVzc2lvbiA9IChvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlJlZmVyZW5jZUV4cHJlc3Npb24pIG9sZE5vZGU7
CisJCQlJTWV0aG9kQmluZGluZyBtZXRob2RCaW5kaW5nID0gZ2V0TWV0aG9kQmluZGluZyhyZWZl
cmVuY2VFeHByZXNzaW9uLmJpbmRpbmcpOworCQkJaWYgKG1ldGhvZEJpbmRpbmcgPT0gbnVsbCkg
eworCQkJCXJldHVybiBudWxsOworCQkJfQorCQkJdGhpcy5iaW5kaW5nc1RvQXN0Tm9kZXMucHV0
KG1ldGhvZEJpbmRpbmcsIG1ldGhvZFJlZmVyZW5jZSk7CisJCQlTdHJpbmcga2V5ID0gbWV0aG9k
QmluZGluZy5nZXRLZXkoKTsKKwkJCWlmIChrZXkgIT0gbnVsbCkgeworCQkJCXRoaXMuYmluZGlu
Z1RhYmxlcy5iaW5kaW5nS2V5c1RvQmluZGluZ3MucHV0KGtleSwgbWV0aG9kQmluZGluZyk7CisJ
CQl9CisJCQlyZXR1cm4gbWV0aG9kQmluZGluZzsKKwkJfQorCQlyZXR1cm4gbnVsbDsKKwl9CiAJ
c3luY2hyb25pemVkIElUeXBlQmluZGluZyByZXNvbHZlVHlwZUJpbmRpbmdGb3JOYW1lKE5hbWUg
bmFtZSkgewogCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFTVE5vZGUg
bm9kZSA9IChvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFTVE5vZGUpIHRo
aXMubmV3QXN0VG9PbGRBc3QuZ2V0KG5hbWUpOwogCQlpbnQgaW5kZXggPSBuYW1lLmluZGV4OwpA
QCAtMTEzOCw2ICsxMjIxLDExIEBACiAJCX0gZWxzZSBpZiAobm9kZSBpbnN0YW5jZW9mIG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuTWVtYmVyVmFsdWVQYWlyKSB7CiAJCQlv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0Lk1lbWJlclZhbHVlUGFpciBtZW1i
ZXJWYWx1ZVBhaXIgPSAob3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5NZW1i
ZXJWYWx1ZVBhaXIpIG5vZGU7CiAJCQlJTWV0aG9kQmluZGluZyBtZXRob2QgPSBnZXRNZXRob2RC
aW5kaW5nKG1lbWJlclZhbHVlUGFpci5iaW5kaW5nKTsKKwkJCWlmIChtZXRob2QgPT0gbnVsbCkg
cmV0dXJuIG51bGw7CisJCQlyZXR1cm4gbWV0aG9kLmdldFJldHVyblR5cGUoKTsKKwkJfSBlbHNl
IGlmIChub2RlIGluc3RhbmNlb2Ygb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFz
dC5SZWZlcmVuY2VFeHByZXNzaW9uKSB7CisJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIuYXN0LlJlZmVyZW5jZUV4cHJlc3Npb24gcmVmZXJlbmNlRXhwcmVzc2lvbiA9IChvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlJlZmVyZW5jZUV4cHJlc3Npb24pIG5v
ZGU7CisJCQlJTWV0aG9kQmluZGluZyBtZXRob2QgPSBnZXRNZXRob2RCaW5kaW5nKHJlZmVyZW5j
ZUV4cHJlc3Npb24uYmluZGluZyk7CiAJCQlpZiAobWV0aG9kID09IG51bGwpIHJldHVybiBudWxs
OwogCQkJcmV0dXJuIG1ldGhvZC5nZXRSZXR1cm5UeXBlKCk7CiAJCX0KQEAgLTE0MDAsNiArMTQ4
OCw5IEBACiAJCX0gZWxzZSBpZiAobm9kZSBpbnN0YW5jZW9mIG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5hc3QuTWVtYmVyVmFsdWVQYWlyKSB7CiAJCQlvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29tcGlsZXIuYXN0Lk1lbWJlclZhbHVlUGFpciBtZW1iZXJWYWx1ZVBhaXIgPSAo
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5NZW1iZXJWYWx1ZVBhaXIpIG5v
ZGU7CiAJCQlyZXR1cm4gZ2V0TWV0aG9kQmluZGluZyhtZW1iZXJWYWx1ZVBhaXIuYmluZGluZyk7
CisJCX0gZWxzZSBpZiAobm9kZSBpbnN0YW5jZW9mIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5hc3QuUmVmZXJlbmNlRXhwcmVzc2lvbikgeworCQkJb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmFzdC5SZWZlcmVuY2VFeHByZXNzaW9uIHJlZmVyZW5jZUV4cHJlc3Np
b24gPSAob3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5SZWZlcmVuY2VFeHBy
ZXNzaW9uKSBub2RlOworCQkJcmV0dXJuIGdldE1ldGhvZEJpbmRpbmcocmVmZXJlbmNlRXhwcmVz
c2lvbi5iaW5kaW5nKTsKIAkJfQogCQlyZXR1cm4gbnVsbDsKIAl9CmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0V4cHJlc3Npb24u
amF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20v
RXhwcmVzc2lvbi5qYXZhCmluZGV4IDZmZDc2ZmEuLjZjN2JiYTMgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vRXhwcmVzc2lvbi5q
YXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9k
b20vRXhwcmVzc2lvbi5qYXZhCkBAIC0zMSw2ICszMSw4IEBACiAgKiAgICB7QGxpbmsgQ2hhcmFj
dGVyTGl0ZXJhbH0sCiAgKiAgICB7QGxpbmsgQ2xhc3NJbnN0YW5jZUNyZWF0aW9ufSwKICAqICAg
IHtAbGluayBDb25kaXRpb25hbEV4cHJlc3Npb259LAorICogICAge0BsaW5rIENyZWF0aW9uUmVm
ZXJlbmNlfSwKKyAqICAgIHtAbGluayBFeHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlfSwKICAqICAg
IHtAbGluayBGaWVsZEFjY2Vzc30sCiAgKiAgICB7QGxpbmsgSW5maXhFeHByZXNzaW9ufSwKICAq
ICAgIHtAbGluayBJbnN0YW5jZW9mRXhwcmVzc2lvbn0sCkBAIC00NSw4ICs0NywxMCBAQAogICog
ICAge0BsaW5rIFN0cmluZ0xpdGVyYWx9LAogICogICAge0BsaW5rIFN1cGVyRmllbGRBY2Nlc3N9
LAogICogICAge0BsaW5rIFN1cGVyTWV0aG9kSW52b2NhdGlvbn0sCisgKiAgICB7QGxpbmsgU3Vw
ZXJNZXRob2RSZWZlcmVuY2V9LAogICogICAge0BsaW5rIFRoaXNFeHByZXNzaW9ufSwKICAqICAg
IHtAbGluayBUeXBlTGl0ZXJhbH0sCisgKiAgICB7QGxpbmsgVHlwZU1ldGhvZFJlZmVyZW5jZX0s
CiAgKiAgICB7QGxpbmsgVmFyaWFibGVEZWNsYXJhdGlvbkV4cHJlc3Npb259CiAgKiA8L3ByZT4K
ICAqIDwvcD4KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBz
ZS9qZHQvY29yZS9kb20vRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZS5qYXZhIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9FeHByZXNzaW9uTWV0aG9k
UmVmZXJlbmNlLmphdmEKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMC4uZWE2NTg0
ZQotLS0gL2Rldi9udWxsCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBz
ZS9qZHQvY29yZS9kb20vRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZS5qYXZhCkBAIC0wLDAgKzEs
MzExIEBACisvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgorICogQ29weXJpZ2h0IChjKSAyMDEzIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBw
cm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscworICogYXJlIG1hZGUgYXZhaWxh
YmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCisg
KiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBh
dAorICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqCisgKiBU
aGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNpZmljYXRpb24g
ZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAoSkNQKSBhbmQg
aXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVycG9zZXMKKyAq
IG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNpZmljYXRpb24g
b2YgdGhlIEpDUC4KKyAqIAorICogQ29udHJpYnV0b3JzOgorICogICAgIElCTSBDb3Jwb3JhdGlv
biAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgorICoqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KiovCitwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbTsKKworaW1wb3J0IGphdmEudXRp
bC5BcnJheUxpc3Q7CitpbXBvcnQgamF2YS51dGlsLkxpc3Q7CisKKy8qKgorICogRXhwcmVzc2lv
biBNZXRob2QgUmVmZXJlbmNlIGV4cHJlc3Npb24gQVNUIG5vZGUgdHlwZS4KKyAqIDxwcmU+Cisg
KiBFeHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlOgorICogICAgIEV4cHJlc3Npb24gPGI+Ojo8L2I+
IAorICogICAgICAgICBbIDxiPiZsdDs8L2I+IFR5cGUgeyA8Yj4sPC9iPiBUeXBlIH0gPGI+Jmd0
OzwvYj4gXQorICogICAgICAgICBJZGVudGlmaWVyCisgKiA8L3ByZT4KKyAqCisgKiBAc2luY2Ug
My45IEJFVEFfSkFWQTgKKyAqIEBub2luc3RhbnRpYXRlIFRoaXMgY2xhc3MgaXMgbm90IGludGVu
ZGVkIHRvIGJlIGluc3RhbnRpYXRlZCBieSBjbGllbnRzLgorICovCitwdWJsaWMgY2xhc3MgRXhw
cmVzc2lvbk1ldGhvZFJlZmVyZW5jZSBleHRlbmRzIEV4cHJlc3Npb24geworCisJLyoqCisJICog
VGhlICJleHByZXNzaW9uIiBzdHJ1Y3R1cmFsIHByb3BlcnR5IG9mIHRoaXMgbm9kZSB0eXBlIChj
aGlsZCB0eXBlOiB7QGxpbmsgRXhwcmVzc2lvbn0pLgorCSAqLworCXB1YmxpYyBzdGF0aWMgZmlu
YWwgQ2hpbGRQcm9wZXJ0eURlc2NyaXB0b3IgRVhQUkVTU0lPTl9QUk9QRVJUWSA9CisJCW5ldyBD
aGlsZFByb3BlcnR5RGVzY3JpcHRvcihFeHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlLmNsYXNzLCAi
ZXhwcmVzc2lvbiIsIEV4cHJlc3Npb24uY2xhc3MsIE1BTkRBVE9SWSwgQ1lDTEVfUklTSyk7IC8v
JE5PTi1OTFMtMSQKKworCS8qKgorCSAqIFRoZSAidHlwZUFyZ3VtZW50cyIgc3RydWN0dXJhbCBw
cm9wZXJ0eSBvZiB0aGlzIG5vZGUgdHlwZSAoZWxlbWVudCB0eXBlOiB7QGxpbmsgVHlwZX0pIAor
CSAqLworCXB1YmxpYyBzdGF0aWMgZmluYWwgQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yIFRZ
UEVfQVJHVU1FTlRTX1BST1BFUlRZID0KKwkJbmV3IENoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRv
cihFeHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlLmNsYXNzLCAidHlwZUFyZ3VtZW50cyIsIFR5cGUu
Y2xhc3MsIE5PX0NZQ0xFX1JJU0spOyAvLyROT04tTkxTLTEkCisKKwkvKioKKwkgKiBUaGUgIm5h
bWUiIHN0cnVjdHVyYWwgcHJvcGVydHkgb2YgdGhpcyBub2RlIHR5cGUgKGNoaWxkIHR5cGU6IHtA
bGluayBTaW1wbGVOYW1lfS4gCisJICovCisJcHVibGljIHN0YXRpYyBmaW5hbCBDaGlsZFByb3Bl
cnR5RGVzY3JpcHRvciBOQU1FX1BST1BFUlRZID0KKwkJbmV3IENoaWxkUHJvcGVydHlEZXNjcmlw
dG9yKEV4cHJlc3Npb25NZXRob2RSZWZlcmVuY2UuY2xhc3MsICJuYW1lIiwgU2ltcGxlTmFtZS5j
bGFzcywgTUFOREFUT1JZLCBOT19DWUNMRV9SSVNLKTsgLy8kTk9OLU5MUy0xJAorCisJLyoqCisJ
ICogQSBsaXN0IG9mIHByb3BlcnR5IGRlc2NyaXB0b3JzIChlbGVtZW50IHR5cGU6CisJICoge0Bs
aW5rIFN0cnVjdHVyYWxQcm9wZXJ0eURlc2NyaXB0b3J9KSwKKwkgKiBvciBudWxsIGlmIHVuaW5p
dGlhbGl6ZWQuCisJICovCisJcHJpdmF0ZSBzdGF0aWMgZmluYWwgTGlzdCBQUk9QRVJUWV9ERVND
UklQVE9SU184XzA7CisJCisJc3RhdGljIHsKKwkJTGlzdCBwcm9wZXJ0eUxpc3QgPSBuZXcgQXJy
YXlMaXN0KDQpOworCQljcmVhdGVQcm9wZXJ0eUxpc3QoRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5j
ZS5jbGFzcywgcHJvcGVydHlMaXN0KTsKKwkJYWRkUHJvcGVydHkoRVhQUkVTU0lPTl9QUk9QRVJU
WSwgcHJvcGVydHlMaXN0KTsKKwkJYWRkUHJvcGVydHkoVFlQRV9BUkdVTUVOVFNfUFJPUEVSVFks
IHByb3BlcnR5TGlzdCk7CisJCWFkZFByb3BlcnR5KE5BTUVfUFJPUEVSVFksIHByb3BlcnR5TGlz
dCk7CisJCVBST1BFUlRZX0RFU0NSSVBUT1JTXzhfMCA9IHJlYXBQcm9wZXJ0eUxpc3QocHJvcGVy
dHlMaXN0KTsKKwl9CisJCisJLyoqCisJICogUmV0dXJucyBhIGxpc3Qgb2Ygc3RydWN0dXJhbCBw
cm9wZXJ0eSBkZXNjcmlwdG9ycyBmb3IgdGhpcyBub2RlIHR5cGUuCisJICogQ2xpZW50cyBtdXN0
IG5vdCBtb2RpZnkgdGhlIHJlc3VsdC4KKwkgKgorCSAqIEBwYXJhbSBhcGlMZXZlbCB0aGUgQVBJ
IGxldmVsOyBvbmUgb2YgdGhlIEFTVC5KTFMqIGNvbnN0YW50cworCSAqIEByZXR1cm4gYSBsaXN0
IG9mIHByb3BlcnR5IGRlc2NyaXB0b3JzIChlbGVtZW50IHR5cGU6CisJICoge0BsaW5rIFN0cnVj
dHVyYWxQcm9wZXJ0eURlc2NyaXB0b3J9KQorCSAqLworCXB1YmxpYyBzdGF0aWMgTGlzdCBwcm9w
ZXJ0eURlc2NyaXB0b3JzKGludCBhcGlMZXZlbCkgeworCQlyZXR1cm4gUFJPUEVSVFlfREVTQ1JJ
UFRPUlNfOF8wOworCX0KKworCS8qKgorCSAqIFRoZSBleHByZXNzaW9uOyBkZWZhdWx0cyB0byBu
dWxsLgorCSAqLworCXByaXZhdGUgRXhwcmVzc2lvbiBleHByZXNzaW9uID0gbnVsbDsKKworCS8q
KgorCSAqIFRoZSB0eXBlIGFyZ3VtZW50cyAoZWxlbWVudCB0eXBlOiB7QGxpbmsgVHlwZX0pLgor
CSAqIERlZmF1bHRzIHRvIGFuIGVtcHR5IGxpc3QuCisJICovCisJcHJpdmF0ZSBBU1ROb2RlLk5v
ZGVMaXN0IHR5cGVBcmd1bWVudHMgPQorCQluZXcgQVNUTm9kZS5Ob2RlTGlzdChUWVBFX0FSR1VN
RU5UU19QUk9QRVJUWSk7CisJCisJLyoqCisJICogVGhlIG1ldGhvZCBuYW1lOyBsYXppbHkgaW5p
dGlhbGl6ZWQ7IGRlZmF1bHRzIHRvIGFuIHVuc3BlY2lmaWVkLAorCSAqIGxlZ2FsIEphdmEgbWV0
aG9kIG5hbWUuCisJICovCisJcHJpdmF0ZSBTaW1wbGVOYW1lIG1ldGhvZE5hbWUgPSBudWxsOwor
CisJLyoqCisJICogQ3JlYXRlcyBhIG5ldyBBU1Qgbm9kZSBmb3IgYW4gRXhwcmVzc2lvbk1ldGhv
ZFJlZmVyZW5jZSBkZWNsYXJhdGlvbiBvd25lZAorCSAqIGJ5IHRoZSBnaXZlbiBBU1QuCisJICog
PHA+CisJICogTi5CLiBUaGlzIGNvbnN0cnVjdG9yIGlzIHBhY2thZ2UtcHJpdmF0ZTsgYWxsIHN1
YmNsYXNzZXMgbXVzdCBiZQorCSAqIGRlY2xhcmVkIGluIHRoZSBzYW1lIHBhY2thZ2U7IGNsaWVu
dHMgYXJlIHVuYWJsZSB0byBkZWNsYXJlCisJICogYWRkaXRpb25hbCBzdWJjbGFzc2VzLgorCSAq
IDwvcD4KKwkgKgorCSAqIEBwYXJhbSBhc3QgdGhlIEFTVCB0aGF0IGlzIHRvIG93biB0aGlzIG5v
ZGUKKwkgKi8KKwlFeHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlKEFTVCBhc3QpIHsKKwkJc3VwZXIo
YXN0KTsKKwkJdW5zdXBwb3J0ZWRJbjJfM180KCk7CisJfQorCisJLyogKG9taXQgamF2YWRvYyBm
b3IgdGhpcyBtZXRob2QpCisJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCisJICovCisJ
ZmluYWwgTGlzdCBpbnRlcm5hbFN0cnVjdHVyYWxQcm9wZXJ0aWVzRm9yVHlwZShpbnQgYXBpTGV2
ZWwpIHsKKwkJcmV0dXJuIHByb3BlcnR5RGVzY3JpcHRvcnMoYXBpTGV2ZWwpOworCX0KKworCS8q
IChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQorCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBB
U1ROb2RlLgorCSAqLworCWZpbmFsIEFTVE5vZGUgaW50ZXJuYWxHZXRTZXRDaGlsZFByb3BlcnR5
KENoaWxkUHJvcGVydHlEZXNjcmlwdG9yIHByb3BlcnR5LCBib29sZWFuIGdldCwgQVNUTm9kZSBj
aGlsZCkgeworCQlpZiAocHJvcGVydHkgPT0gTkFNRV9QUk9QRVJUWSkgeworCQkJaWYgKGdldCkg
eworCQkJCXJldHVybiBnZXROYW1lKCk7CisJCQl9IGVsc2UgeworCQkJCXNldE5hbWUoKFNpbXBs
ZU5hbWUpIGNoaWxkKTsKKwkJCQlyZXR1cm4gbnVsbDsKKwkJCX0KKwkJfQorCQlpZiAocHJvcGVy
dHkgPT0gRVhQUkVTU0lPTl9QUk9QRVJUWSkgeworCQkJaWYgKGdldCkgeworCQkJCXJldHVybiBn
ZXRFeHByZXNzaW9uKCk7CisJCQl9IGVsc2UgeworCQkJCXNldEV4cHJlc3Npb24oKEV4cHJlc3Np
b24pIGNoaWxkKTsKKwkJCQlyZXR1cm4gbnVsbDsKKwkJCX0KKwkJfQorCQkvLyBhbGxvdyBkZWZh
dWx0IGltcGxlbWVudGF0aW9uIHRvIGZsYWcgdGhlIGVycm9yCisJCXJldHVybiBzdXBlci5pbnRl
cm5hbEdldFNldENoaWxkUHJvcGVydHkocHJvcGVydHksIGdldCwgY2hpbGQpOworCX0KKworCS8q
IChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQorCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBB
U1ROb2RlLgorCSAqLworCWZpbmFsIExpc3QgaW50ZXJuYWxHZXRDaGlsZExpc3RQcm9wZXJ0eShD
aGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IgcHJvcGVydHkpIHsKKwkJaWYgKHByb3BlcnR5ID09
IFRZUEVfQVJHVU1FTlRTX1BST1BFUlRZKSB7CisJCQlyZXR1cm4gdHlwZUFyZ3VtZW50cygpOwor
CQl9CisJCS8vIGFsbG93IGRlZmF1bHQgaW1wbGVtZW50YXRpb24gdG8gZmxhZyB0aGUgZXJyb3IK
KwkJcmV0dXJuIHN1cGVyLmludGVybmFsR2V0Q2hpbGRMaXN0UHJvcGVydHkocHJvcGVydHkpOwor
CX0KKworCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQorCSAqIE1ldGhvZCBkZWNs
YXJlZCBvbiBBU1ROb2RlLgorCSAqLworCWZpbmFsIGludCBnZXROb2RlVHlwZTAoKSB7CisJCXJl
dHVybiBFWFBSRVNTSU9OX01FVEhPRF9SRUZFUkVOQ0U7CisJfQorCisJLyogKG9taXQgamF2YWRv
YyBmb3IgdGhpcyBtZXRob2QpCisJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCisJICov
CisJQVNUTm9kZSBjbG9uZTAoQVNUIHRhcmdldCkgeworCQlFeHByZXNzaW9uTWV0aG9kUmVmZXJl
bmNlIHJlc3VsdCA9IG5ldyBFeHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlKHRhcmdldCk7CisJCXJl
c3VsdC5zZXRTb3VyY2VSYW5nZShnZXRTdGFydFBvc2l0aW9uKCksIGdldExlbmd0aCgpKTsKKwkJ
cmVzdWx0LnNldE5hbWUoKFNpbXBsZU5hbWUpIGdldE5hbWUoKS5jbG9uZSh0YXJnZXQpKTsKKwkJ
cmVzdWx0LnNldEV4cHJlc3Npb24oCisJCQkoRXhwcmVzc2lvbikgQVNUTm9kZS5jb3B5U3VidHJl
ZSh0YXJnZXQsIGdldEV4cHJlc3Npb24oKSkpOworCQlyZXN1bHQudHlwZUFyZ3VtZW50cygpLmFk
ZEFsbChBU1ROb2RlLmNvcHlTdWJ0cmVlcyh0YXJnZXQsIHR5cGVBcmd1bWVudHMoKSkpOworCQly
ZXR1cm4gcmVzdWx0OworCX0KKworCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQor
CSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAqLworCWZpbmFsIGJvb2xlYW4gc3Vi
dHJlZU1hdGNoMChBU1RNYXRjaGVyIG1hdGNoZXIsIE9iamVjdCBvdGhlcikgeworCQkvLyBkaXNw
YXRjaCB0byBjb3JyZWN0IG92ZXJsb2FkZWQgbWF0Y2ggbWV0aG9kCisJCXJldHVybiBtYXRjaGVy
Lm1hdGNoKHRoaXMsIG90aGVyKTsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1l
dGhvZCkKKwkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8KKwl2b2lkIGFjY2Vw
dDAoQVNUVmlzaXRvciB2aXNpdG9yKSB7CisJCWJvb2xlYW4gdmlzaXRDaGlsZHJlbiA9IHZpc2l0
b3IudmlzaXQodGhpcyk7CisJCWlmICh2aXNpdENoaWxkcmVuKSB7CisJCQkvLyB2aXNpdCBjaGls
ZHJlbiBpbiBub3JtYWwgbGVmdCB0byByaWdodCByZWFkaW5nIG9yZGVyCisJCQlhY2NlcHRDaGls
ZCh2aXNpdG9yLCBnZXRFeHByZXNzaW9uKCkpOworCQkJYWNjZXB0Q2hpbGRyZW4odmlzaXRvciwg
dGhpcy50eXBlQXJndW1lbnRzKTsKKwkJCWFjY2VwdENoaWxkKHZpc2l0b3IsIGdldE5hbWUoKSk7
CisJCX0KKwkJdmlzaXRvci5lbmRWaXNpdCh0aGlzKTsKKwl9CisKKwkvKioKKwkgKiBSZXR1cm5z
IHRoZSBleHByZXNzaW9uIG9mIHRoaXMgZXhwcmVzc2lvbiBtZXRob2QgcmVmZXJlbmNlIGV4cHJl
c3Npb24KKwkgKgorCSAqIEByZXR1cm4gdGhlIGV4cHJlc3Npb24gbm9kZQorCSAqLworCXB1Ymxp
YyBFeHByZXNzaW9uIGdldEV4cHJlc3Npb24oKSB7CisJCXJldHVybiB0aGlzLmV4cHJlc3Npb247
CisJfQorCisJLyoqCisJICogU2V0cyBvciBjbGVhcnMgdGhlIGV4cHJlc3Npb24gb2YgdGhpcyBl
eHByZXNzaW9uIG1ldGhvZCByZWZlcmVuY2UuCisJICoKKwkgKiBAcGFyYW0gZXhwcmVzc2lvbiB0
aGUgZXhwcmVzc2lvbiBub2RlCisJICogQGV4Y2VwdGlvbiBJbGxlZ2FsQXJndW1lbnRFeGNlcHRp
b24gaWY6CisJICogPHVsPgorCSAqIDxsaT50aGUgbm9kZSBiZWxvbmdzIHRvIGEgZGlmZmVyZW50
IEFTVDwvbGk+CisJICogPGxpPnRoZSBub2RlIGFscmVhZHkgaGFzIGEgcGFyZW50PC9saT4KKwkg
KiA8bGk+YSBjeWNsZSBpbiB3b3VsZCBiZSBjcmVhdGVkPC9saT4KKwkgKiA8L3VsPgorCSAqLwor
CXB1YmxpYyB2b2lkIHNldEV4cHJlc3Npb24oRXhwcmVzc2lvbiBleHByZXNzaW9uKSB7CisJCWlm
IChleHByZXNzaW9uID09IG51bGwpIHsKKwkJCXRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNl
cHRpb24oKTsKKwkJfQorCQlBU1ROb2RlIG9sZENoaWxkID0gdGhpcy5leHByZXNzaW9uOworCQlw
cmVSZXBsYWNlQ2hpbGQob2xkQ2hpbGQsIGV4cHJlc3Npb24sIEVYUFJFU1NJT05fUFJPUEVSVFkp
OworCQl0aGlzLmV4cHJlc3Npb24gPSBleHByZXNzaW9uOworCQlwb3N0UmVwbGFjZUNoaWxkKG9s
ZENoaWxkLCBleHByZXNzaW9uLCBFWFBSRVNTSU9OX1BST1BFUlRZKTsKKwl9CisKKwkvKioKKwkg
KiBSZXR1cm5zIHRoZSBsaXZlIG9yZGVyZWQgbGlzdCBvZiB0eXBlIGFyZ3VtZW50cyBvZiB0aGlz
IGV4cHJlc3Npb24gbWV0aG9kIHJlZmVyZW5jZQorCSAqCisJICogQHJldHVybiB0aGUgbGl2ZSBs
aXN0IG9mIHR5cGUgYXJndW1lbnRzCisJICogICAgKGVsZW1lbnQgdHlwZToge0BsaW5rIFR5cGV9
KQorCSAqLworCXB1YmxpYyBMaXN0IHR5cGVBcmd1bWVudHMoKSB7CisJCXJldHVybiB0aGlzLnR5
cGVBcmd1bWVudHM7CisJfQorCisJLyoqCisJICogUmV0dXJucyB0aGUgbmFtZSBvZiB0aGUgbWV0
aG9kIHJlZmVyZW5jZWQgaW4gdGhpcyBleHByZXNzaW9uLgorCSAqCisJICogQHJldHVybiB0aGUg
bWV0aG9kIG5hbWUgbm9kZQorCSAqLworCXB1YmxpYyBTaW1wbGVOYW1lIGdldE5hbWUoKSB7CisJ
CWlmICh0aGlzLm1ldGhvZE5hbWUgPT0gbnVsbCkgeworCQkJLy8gbGF6eSBpbml0IG11c3QgYmUg
dGhyZWFkLXNhZmUgZm9yIHJlYWRlcnMKKwkJCXN5bmNocm9uaXplZCAodGhpcykgeworCQkJCWlm
ICh0aGlzLm1ldGhvZE5hbWUgPT0gbnVsbCkgeworCQkJCQlwcmVMYXp5SW5pdCgpOworCQkJCQl0
aGlzLm1ldGhvZE5hbWUgPSBuZXcgU2ltcGxlTmFtZSh0aGlzLmFzdCk7CisJCQkJCXBvc3RMYXp5
SW5pdCh0aGlzLm1ldGhvZE5hbWUsIE5BTUVfUFJPUEVSVFkpOworCQkJCX0KKwkJCX0KKwkJfQor
CQlyZXR1cm4gdGhpcy5tZXRob2ROYW1lOworCX0KKworCS8qKgorCSAqIFNldHMgdGhlIG5hbWUg
b2YgdGhlIG1ldGhvZCByZWZlcmVuY2VkIGluIHRoaXMgZXhwcmVzc2lvbiB0byB0aGUKKwkgKiBn
aXZlbiBuYW1lLgorCSAqCisJICogQHBhcmFtIG5hbWUgdGhlIG5ldyBtZXRob2QgbmFtZQorCSAq
IEBleGNlcHRpb24gSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uIGlmOgorCSAqIDx1bD4KKwkgKiA8
bGk+dGhlIG5vZGUgYmVsb25ncyB0byBhIGRpZmZlcmVudCBBU1Q8L2xpPgorCSAqIDxsaT50aGUg
bm9kZSBhbHJlYWR5IGhhcyBhIHBhcmVudDwvbGk+CisJICogPC91bD4KKwkgKi8KKwlwdWJsaWMg
dm9pZCBzZXROYW1lKFNpbXBsZU5hbWUgbmFtZSkgeworCQlpZiAobmFtZSA9PSBudWxsKSB7CisJ
CQl0aHJvdyBuZXcgSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uKCk7CisJCX0KKwkJQVNUTm9kZSBv
bGRDaGlsZCA9IHRoaXMubWV0aG9kTmFtZTsKKwkJcHJlUmVwbGFjZUNoaWxkKG9sZENoaWxkLCBu
YW1lLCBOQU1FX1BST1BFUlRZKTsKKwkJdGhpcy5tZXRob2ROYW1lID0gbmFtZTsKKwkJcG9zdFJl
cGxhY2VDaGlsZChvbGRDaGlsZCwgbmFtZSwgTkFNRV9QUk9QRVJUWSk7CisJfQorCisJLyoqCisJ
ICogUmVzb2x2ZXMgYW5kIHJldHVybnMgdGhlIGJpbmRpbmcgZm9yIHRoZSBtZXRob2QgcmVmZXJl
bmNlZCBieSB0aGlzCisJICogZXhwcmVzc2lvbi4KKwkgKiA8cD4KKwkgKiBOb3RlIHRoYXQgYmlu
ZGluZ3MgYXJlIGdlbmVyYWxseSB1bmF2YWlsYWJsZSB1bmxlc3MgcmVxdWVzdGVkIHdoZW4gdGhl
CisJICogQVNUIGlzIGJlaW5nIGJ1aWx0LgorCSAqIDwvcD4KKwkgKgorCSAqIEByZXR1cm4gdGhl
IG1ldGhvZCBiaW5kaW5nLCBvciA8Y29kZT5udWxsPC9jb2RlPiBpZiB0aGUgYmluZGluZyBjYW5u
b3QKKwkgKiBiZSByZXNvbHZlZAorCSAqLworCXB1YmxpYyBJTWV0aG9kQmluZGluZyByZXNvbHZl
TWV0aG9kQmluZGluZygpIHsKKwkJcmV0dXJuIHRoaXMuYXN0LmdldEJpbmRpbmdSZXNvbHZlcigp
LnJlc29sdmVNZXRob2QodGhpcyk7CisJfQorCisJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBt
ZXRob2QpCisJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCisJICovCisJaW50IG1lbVNp
emUoKSB7CisJCS8vIHRyZWF0IENvZGUgYXMgZnJlZQorCQlyZXR1cm4gQkFTRV9OT0RFX1NJWkUg
KyAzICogNDsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKKwkgKiBN
ZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8KKwlpbnQgdHJlZVNpemUoKSB7CisJCXJl
dHVybgorCQkJbWVtU2l6ZSgpCisJCQkrICh0aGlzLmV4cHJlc3Npb24gPT0gbnVsbCA/IDAgOiBn
ZXRFeHByZXNzaW9uKCkudHJlZVNpemUoKSkKKwkJCSsgKHRoaXMudHlwZUFyZ3VtZW50cyA9PSBu
dWxsID8gMCA6IHRoaXMudHlwZUFyZ3VtZW50cy5saXN0U2l6ZSgpKQorCQkJKyAodGhpcy5tZXRo
b2ROYW1lID09IG51bGwgPyAwIDogZ2V0TmFtZSgpLnRyZWVTaXplKCkpOworCX0KK30KXCBObyBu
ZXdsaW5lIGF0IGVuZCBvZiBmaWxlCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9k
b20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1N1cGVyTWV0aG9kUmVmZXJlbmNlLmphdmEgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1N1cGVyTWV0
aG9kUmVmZXJlbmNlLmphdmEKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMC4uN2Uz
NTQyYQotLS0gL2Rldi9udWxsCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNs
aXBzZS9qZHQvY29yZS9kb20vU3VwZXJNZXRob2RSZWZlcmVuY2UuamF2YQpAQCAtMCwwICsxLDMw
NSBAQAorLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKyAqIENvcHlyaWdodCAoYykgMjAxMyBJQk0g
Q29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJv
Z3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKKyAqIGFyZSBtYWRlIGF2YWlsYWJs
ZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAorICog
d2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQK
KyAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogVGhp
cyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRl
dmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlz
IG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBv
bmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9m
IHRoZSBKQ1AuCisgKiAKKyAqIENvbnRyaWJ1dG9yczoKKyAqICAgICBJQk0gQ29ycG9yYXRpb24g
LSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KKyAqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
LworcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb207CisKK2ltcG9ydCBqYXZhLnV0aWwu
QXJyYXlMaXN0OworaW1wb3J0IGphdmEudXRpbC5MaXN0OworCisvKioKKyAqIFN1cGVyTWV0aG9k
UmVmZXJlbmNlIEFTVCBOb2RlIFR5cGUKKyAqIAorICogPHByZT4KKyAqIFN1cGVyTWV0aG9kUmVm
ZXJlbmNlOgorICogICAgIFsgQ2xhc3NOYW1lIDxiPi48L2I+IF0gPGI+c3VwZXI8L2I+IDxiPjo6
PC9iPgorICogICAgICAgICBbIDxiPiZsdDs8L2I+IFR5cGUgeyA8Yj4sPC9iPiBUeXBlIH0gPGI+
Jmd0OzwvYj4gXQorICogICAgICAgICBJZGVudGlmaWVyCisgKiA8L3ByZT4KKyAqIAorICogQHNp
bmNlIDMuOSBCRVRBX0pBVkE4CisgKiBAbm9pbnN0YW50aWF0ZSBUaGlzIGNsYXNzIGlzIG5vdCBp
bnRlbmRlZCB0byBiZSBpbnN0YW50aWF0ZWQgYnkgY2xpZW50cworICovCitwdWJsaWMgY2xhc3Mg
U3VwZXJNZXRob2RSZWZlcmVuY2UgZXh0ZW5kcyBFeHByZXNzaW9uIHsKKworCS8qKgorCSAqIFRo
ZSAicXVhbGlmaWVyIiBzdHJ1Y3R1cmFsIHByb3BlcnR5IG9mIHRoaXMgbm9kZSB0eXBlIChjaGls
ZCB0eXBlOiB7QGxpbmsgTmFtZX0pLgorCSAqLworCXB1YmxpYyBzdGF0aWMgZmluYWwgQ2hpbGRQ
cm9wZXJ0eURlc2NyaXB0b3IgUVVBTElGSUVSX1BST1BFUlRZID0KKwkJbmV3IENoaWxkUHJvcGVy
dHlEZXNjcmlwdG9yKFN1cGVyTWV0aG9kUmVmZXJlbmNlLmNsYXNzLCAicXVhbGlmaWVyIiwgTmFt
ZS5jbGFzcywgT1BUSU9OQUwsIE5PX0NZQ0xFX1JJU0spOyAvLyROT04tTkxTLTEkCisKKwkvKioK
KwkgKiBUaGUgInR5cGVBcmd1bWVudHMiIHN0cnVjdHVyYWwgcHJvcGVydHkgb2YgdGhpcyBub2Rl
IHR5cGUgKGVsZW1lbnQgdHlwZToge0BsaW5rIFR5cGV9KSAoYWRkZWQgaW4gSkxTMyBBUEkpLgor
CSAqLworCXB1YmxpYyBzdGF0aWMgZmluYWwgQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yIFRZ
UEVfQVJHVU1FTlRTX1BST1BFUlRZID0KKwkJbmV3IENoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRv
cihTdXBlck1ldGhvZFJlZmVyZW5jZS5jbGFzcywgInR5cGVBcmd1bWVudHMiLCBUeXBlLmNsYXNz
LCBOT19DWUNMRV9SSVNLKTsgLy8kTk9OLU5MUy0xJAorCisJLyoqCisJICogVGhlICJuYW1lIiBz
dHJ1Y3R1cmFsIHByb3BlcnR5IG9mIHRoaXMgbm9kZSB0eXBlIChjaGlsZCB0eXBlOiB7QGxpbmsg
U2ltcGxlTmFtZX0pLgorCSAqLworCXB1YmxpYyBzdGF0aWMgZmluYWwgQ2hpbGRQcm9wZXJ0eURl
c2NyaXB0b3IgTkFNRV9QUk9QRVJUWSA9CisJCW5ldyBDaGlsZFByb3BlcnR5RGVzY3JpcHRvcihT
dXBlck1ldGhvZFJlZmVyZW5jZS5jbGFzcywgIm5hbWUiLCBTaW1wbGVOYW1lLmNsYXNzLCBNQU5E
QVRPUlksIE5PX0NZQ0xFX1JJU0spOyAvLyROT04tTkxTLTEkCisKKwkvKioKKwkgKiBBIGxpc3Qg
b2YgcHJvcGVydHkgZGVzY3JpcHRvcnMgKGVsZW1lbnQgdHlwZToKKwkgKiB7QGxpbmsgU3RydWN0
dXJhbFByb3BlcnR5RGVzY3JpcHRvcn0pLAorCSAqIG9yIG51bGwgaWYgdW5pbml0aWFsaXplZC4K
KwkgKi8KKwlwcml2YXRlIHN0YXRpYyBmaW5hbCBMaXN0IFBST1BFUlRZX0RFU0NSSVBUT1JTXzhf
MDsKKworCXN0YXRpYyB7CisJCUxpc3QgcHJvcGVydHlMaXN0ID0gbmV3IEFycmF5TGlzdCg0KTsK
KwkJY3JlYXRlUHJvcGVydHlMaXN0KFN1cGVyTWV0aG9kUmVmZXJlbmNlLmNsYXNzLCBwcm9wZXJ0
eUxpc3QpOworCQlhZGRQcm9wZXJ0eShRVUFMSUZJRVJfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7
CisJCWFkZFByb3BlcnR5KFRZUEVfQVJHVU1FTlRTX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOwor
CQlhZGRQcm9wZXJ0eShOQU1FX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOworCQlQUk9QRVJUWV9E
RVNDUklQVE9SU184XzAgPSByZWFwUHJvcGVydHlMaXN0KHByb3BlcnR5TGlzdCk7CisJfQorCisJ
LyoqCisJICogUmV0dXJucyBhIGxpc3Qgb2Ygc3RydWN0dXJhbCBwcm9wZXJ0eSBkZXNjcmlwdG9y
cyBmb3IgdGhpcyBub2RlIHR5cGUuCisJICogQ2xpZW50cyBtdXN0IG5vdCBtb2RpZnkgdGhlIHJl
c3VsdC4KKwkgKgorCSAqIEBwYXJhbSBhcGlMZXZlbCB0aGUgQVBJIGxldmVsOyBvbmUgb2YgdGhl
CisJICogPGNvZGU+QVNULkpMUyo8L2NvZGU+IGNvbnN0YW50cworCSAqIEByZXR1cm4gYSBsaXN0
IG9mIHByb3BlcnR5IGRlc2NyaXB0b3JzIChlbGVtZW50IHR5cGU6CisJICoge0BsaW5rIFN0cnVj
dHVyYWxQcm9wZXJ0eURlc2NyaXB0b3J9KQorCSAqLworCXB1YmxpYyBzdGF0aWMgTGlzdCBwcm9w
ZXJ0eURlc2NyaXB0b3JzKGludCBhcGlMZXZlbCkgeworCQlyZXR1cm4gUFJPUEVSVFlfREVTQ1JJ
UFRPUlNfOF8wOworCX0KKworCS8qKgorCSAqIFRoZSBvcHRpb25hbCBxdWFsaWZpZXI7IDxjb2Rl
Pm51bGw8L2NvZGU+IGZvciBub25lOyBkZWZhdWx0cyB0byBub25lLgorCSAqLworCXByaXZhdGUg
TmFtZSBvcHRpb25hbFF1YWxpZmllciA9IG51bGw7CisKKwkvKioKKwkgKiBUaGUgdHlwZSBhcmd1
bWVudHMgKGVsZW1lbnQgdHlwZToge0BsaW5rIFR5cGV9KS4KKwkgKiAgZGVmYXVsdHMgdG8gYW4g
ZW1wdHkgbGlzdAorCSAqIChzZWUgY29uc3RydWN0b3IpLgorCSAqLworCXByaXZhdGUgQVNUTm9k
ZS5Ob2RlTGlzdCB0eXBlQXJndW1lbnRzID0gCisJCQluZXcgQVNUTm9kZS5Ob2RlTGlzdChUWVBF
X0FSR1VNRU5UU19QUk9QRVJUWSk7CisKKwkvKioKKwkgKiBUaGUgbWV0aG9kIG5hbWU7IGxhemls
eSBpbml0aWFsaXplZDsgZGVmYXVsdHMgdG8gYSB1bnNwZWNpZmllZCwKKwkgKiBsZWdhbCBKYXZh
IG1ldGhvZCBuYW1lLgorCSAqLworCXByaXZhdGUgU2ltcGxlTmFtZSBtZXRob2ROYW1lID0gbnVs
bDsKKwkvKioKKwkgKiBDcmVhdGVzIGEgbmV3IHVucGFyZW50ZWQgbm9kZSBmb3IgYSBzdXBlciBt
ZXRob2QgcmVmZXJlbmNlIG93bmVkCisJICogYnkgdGhlIGdpdmVuIEFTVC4gQnkgZGVmYXVsdCwg
dGhlcmUgaXMgbm8gcXVhbGlmaWVyLgorCSAqIDxwPgorCSAqIE4uQi4gVGhpcyBjb25zdHJ1Y3Rv
ciBpcyBwYWNrYWdlLXByaXZhdGUuCisJICogPC9wPgorCSAqCisJICogQHBhcmFtIGFzdCB0aGUg
QVNUIHRoYXQgaXMgdG8gb3duIHRoaXMgbm9kZQorCSAqLworCVN1cGVyTWV0aG9kUmVmZXJlbmNl
KEFTVCBhc3QpIHsKKwkJc3VwZXIoYXN0KTsKKwkJdW5zdXBwb3J0ZWRJbjJfM180KCk7CisJfQor
CisJTGlzdCBpbnRlcm5hbFN0cnVjdHVyYWxQcm9wZXJ0aWVzRm9yVHlwZShpbnQgYXBpTGV2ZWwp
IHsKKwkJcmV0dXJuIHByb3BlcnR5RGVzY3JpcHRvcnMoYXBpTGV2ZWwpOworCX0KKworCS8qIChv
bWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQorCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1RO
b2RlLgorCSAqLworCWZpbmFsIEFTVE5vZGUgaW50ZXJuYWxHZXRTZXRDaGlsZFByb3BlcnR5KENo
aWxkUHJvcGVydHlEZXNjcmlwdG9yIHByb3BlcnR5LCBib29sZWFuIGdldCwgQVNUTm9kZSBjaGls
ZCkgeworCQlpZiAocHJvcGVydHkgPT0gUVVBTElGSUVSX1BST1BFUlRZKSB7CisJCQlpZiAoZ2V0
KSB7CisJCQkJcmV0dXJuIGdldFF1YWxpZmllcigpOworCQkJfSBlbHNlIHsKKwkJCQlzZXRRdWFs
aWZpZXIoKE5hbWUpIGNoaWxkKTsKKwkJCQlyZXR1cm4gbnVsbDsKKwkJCX0KKwkJfQorCQlpZiAo
cHJvcGVydHkgPT0gTkFNRV9QUk9QRVJUWSkgeworCQkJaWYgKGdldCkgeworCQkJCXJldHVybiBn
ZXROYW1lKCk7CisJCQl9IGVsc2UgeworCQkJCXNldE5hbWUoKFNpbXBsZU5hbWUpIGNoaWxkKTsK
KwkJCQlyZXR1cm4gbnVsbDsKKwkJCX0KKwkJfQorCQkvLyBhbGxvdyBkZWZhdWx0IGltcGxlbWVu
dGF0aW9uIHRvIGZsYWcgdGhlIGVycm9yCisJCXJldHVybiBzdXBlci5pbnRlcm5hbEdldFNldENo
aWxkUHJvcGVydHkocHJvcGVydHksIGdldCwgY2hpbGQpOworCX0KKworCS8qIChvbWl0IGphdmFk
b2MgZm9yIHRoaXMgbWV0aG9kKQorCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAq
LworCWZpbmFsIExpc3QgaW50ZXJuYWxHZXRDaGlsZExpc3RQcm9wZXJ0eShDaGlsZExpc3RQcm9w
ZXJ0eURlc2NyaXB0b3IgcHJvcGVydHkpIHsKKwkJaWYgKHByb3BlcnR5ID09IFRZUEVfQVJHVU1F
TlRTX1BST1BFUlRZKSB7CisJCQlyZXR1cm4gdHlwZUFyZ3VtZW50cygpOworCQl9CisJCS8vIGFs
bG93IGRlZmF1bHQgaW1wbGVtZW50YXRpb24gdG8gZmxhZyB0aGUgZXJyb3IKKwkJcmV0dXJuIHN1
cGVyLmludGVybmFsR2V0Q2hpbGRMaXN0UHJvcGVydHkocHJvcGVydHkpOworCX0KKworCS8qIChv
bWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQorCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1RO
b2RlLgorCSAqLworCWludCBnZXROb2RlVHlwZTAoKSB7CisJCXJldHVybiBTVVBFUl9NRVRIT0Rf
UkVGRVJFTkNFOworCX0KKworCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQorCSAq
IE1ldGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAqLworCUFTVE5vZGUgY2xvbmUwKEFTVCB0
YXJnZXQpIHsKKwkJU3VwZXJNZXRob2RSZWZlcmVuY2UgcmVzdWx0ID0gbmV3IFN1cGVyTWV0aG9k
UmVmZXJlbmNlKHRhcmdldCk7CisJCXJlc3VsdC5zZXRTb3VyY2VSYW5nZShnZXRTdGFydFBvc2l0
aW9uKCksIGdldExlbmd0aCgpKTsKKwkJcmVzdWx0LnNldE5hbWUoKFNpbXBsZU5hbWUpIGdldE5h
bWUoKS5jbG9uZSh0YXJnZXQpKTsKKwkJcmVzdWx0LnNldFF1YWxpZmllcigoTmFtZSkgQVNUTm9k
ZS5jb3B5U3VidHJlZSh0YXJnZXQsIGdldFF1YWxpZmllcigpKSk7CisJCXJlc3VsdC50eXBlQXJn
dW1lbnRzKCkuYWRkQWxsKEFTVE5vZGUuY29weVN1YnRyZWVzKHRhcmdldCwgdHlwZUFyZ3VtZW50
cygpKSk7CisJCXJldHVybiByZXN1bHQ7CisJfQorCisJLyogKG9taXQgamF2YWRvYyBmb3IgdGhp
cyBtZXRob2QpCisJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCisJICovCisJYm9vbGVh
biBzdWJ0cmVlTWF0Y2gwKEFTVE1hdGNoZXIgbWF0Y2hlciwgT2JqZWN0IG90aGVyKSB7CisJCS8v
IGRpc3BhdGNoIHRvIGNvcnJlY3Qgb3ZlcmxvYWRlZCBtYXRjaCBtZXRob2QKKwkJcmV0dXJuIG1h
dGNoZXIubWF0Y2godGhpcywgb3RoZXIpOworCX0KKworCS8qIChvbWl0IGphdmFkb2MgZm9yIHRo
aXMgbWV0aG9kKQorCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAqLworCXZvaWQg
YWNjZXB0MChBU1RWaXNpdG9yIHZpc2l0b3IpIHsKKwkJYm9vbGVhbiB2aXNpdENoaWxkcmVuID0g
dmlzaXRvci52aXNpdCh0aGlzKTsKKwkJaWYgKHZpc2l0Q2hpbGRyZW4pIHsKKwkJCS8vIHZpc2l0
IGNoaWxkcmVuIGluIG5vcm1hbCBsZWZ0IHRvIHJpZ2h0IHJlYWRpbmcgb3JkZXIKKwkJCWFjY2Vw
dENoaWxkKHZpc2l0b3IsIGdldFF1YWxpZmllcigpKTsKKwkJCWFjY2VwdENoaWxkcmVuKHZpc2l0
b3IsIHRoaXMudHlwZUFyZ3VtZW50cyk7CisJCQlhY2NlcHRDaGlsZCh2aXNpdG9yLCBnZXROYW1l
KCkpOworCQl9CisJCXZpc2l0b3IuZW5kVmlzaXQodGhpcyk7CisJfQorCisJLyoqCisJICogUmV0
dXJucyB0aGUgcXVhbGlmaWVyIG9mIHRoaXMgInN1cGVyIiBtZXRob2QgcmVmZXJlbmNlLCBvcgor
CSAqIDxjb2RlPm51bGw8L2NvZGU+IGlmIHRoZXJlIGlzIG5vbmUuCisJICoKKwkgKiBAcmV0dXJu
IHRoZSBxdWFsaWZpZXIgbmFtZSBub2RlLCBvciA8Y29kZT5udWxsPC9jb2RlPiBpZiB0aGVyZSBp
cyBub25lCisJICovCisJcHVibGljIE5hbWUgZ2V0UXVhbGlmaWVyKCkgeworCQlyZXR1cm4gdGhp
cy5vcHRpb25hbFF1YWxpZmllcjsKKwl9CisKKwkvKioKKwkgKiBTZXRzIG9yIGNsZWFycyB0aGUg
cXVhbGlmaWVyIG9mIHRoaXMgInN1cGVyIiBtZXRob2QgcmVmZXJlbmNlIGV4cHJlc3Npb24uCisJ
ICoKKwkgKiBAcGFyYW0gbmFtZSB0aGUgcXVhbGlmaWVyIG5hbWUgbm9kZSwgb3IgPGNvZGU+bnVs
bDwvY29kZT4gaWYKKwkgKiAgICB0aGVyZSBpcyBub25lCisJICogQGV4Y2VwdGlvbiBJbGxlZ2Fs
QXJndW1lbnRFeGNlcHRpb24gaWY6CisJICogPHVsPgorCSAqIDxsaT50aGUgbm9kZSBiZWxvbmdz
IHRvIGEgZGlmZmVyZW50IEFTVDwvbGk+CisJICogPGxpPnRoZSBub2RlIGFscmVhZHkgaGFzIGEg
cGFyZW50PC9saT4KKwkgKiA8L3VsPgorCSAqLworCXB1YmxpYyB2b2lkIHNldFF1YWxpZmllcihO
YW1lIG5hbWUpIHsKKwkJQVNUTm9kZSBvbGRDaGlsZCA9IHRoaXMub3B0aW9uYWxRdWFsaWZpZXI7
CisJCXByZVJlcGxhY2VDaGlsZChvbGRDaGlsZCwgbmFtZSwgUVVBTElGSUVSX1BST1BFUlRZKTsK
KwkJdGhpcy5vcHRpb25hbFF1YWxpZmllciA9IG5hbWU7CisJCXBvc3RSZXBsYWNlQ2hpbGQob2xk
Q2hpbGQsIG5hbWUsIFFVQUxJRklFUl9QUk9QRVJUWSk7CisJfQorCisJLyoqCisJICogUmV0dXJu
cyB0aGUgbGl2ZSBvcmRlcmVkIGxpc3Qgb2YgdHlwZSBhcmd1bWVudHMgb2YgdGhpcyBzdXBlciBt
ZXRob2QgcmVmZXJlbmNlLgorCSAqCisJICogQHJldHVybiB0aGUgbGl2ZSBsaXN0IG9mIHR5cGUg
YXJndW1lbnRzCisJICogICAgKGVsZW1lbnQgdHlwZToge0BsaW5rIFR5cGV9KQorCSAqLworCXB1
YmxpYyBMaXN0IHR5cGVBcmd1bWVudHMoKSB7CisJCXJldHVybiB0aGlzLnR5cGVBcmd1bWVudHM7
CisJfQorCisJLyoqCisJICogUmV0dXJucyB0aGUgbmFtZSBvZiB0aGUgbWV0aG9kIHJlZmVyZW5j
ZWQgaW4gdGhpcyBleHByZXNzaW9uLgorCSAqCisJICogQHJldHVybiB0aGUgbWV0aG9kIG5hbWUg
bm9kZQorCSAqLworCXB1YmxpYyBTaW1wbGVOYW1lIGdldE5hbWUoKSB7CisJCWlmICh0aGlzLm1l
dGhvZE5hbWUgPT0gbnVsbCkgeworCQkJLy8gbGF6eSBpbml0IG11c3QgYmUgdGhyZWFkLXNhZmUg
Zm9yIHJlYWRlcnMKKwkJCXN5bmNocm9uaXplZCAodGhpcykgeworCQkJCWlmICh0aGlzLm1ldGhv
ZE5hbWUgPT0gbnVsbCkgeworCQkJCQlwcmVMYXp5SW5pdCgpOworCQkJCQl0aGlzLm1ldGhvZE5h
bWUgPSBuZXcgU2ltcGxlTmFtZSh0aGlzLmFzdCk7CisJCQkJCXBvc3RMYXp5SW5pdCh0aGlzLm1l
dGhvZE5hbWUsIE5BTUVfUFJPUEVSVFkpOworCQkJCX0KKwkJCX0KKwkJfQorCQlyZXR1cm4gdGhp
cy5tZXRob2ROYW1lOworCX0KKworCS8qKgorCSAqIFNldHMgdGhlIG5hbWUgb2YgdGhlIG1ldGhv
ZCByZWZlcmVuY2VkIGluIHRoaXMgZXhwcmVzc2lvbiB0byB0aGUKKwkgKiBnaXZlbiBuYW1lLgor
CSAqCisJICogQHBhcmFtIG5hbWUgdGhlIG5ldyBtZXRob2QgbmFtZQorCSAqIEBleGNlcHRpb24g
SWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uIGlmOgorCSAqIDx1bD4KKwkgKiA8bGk+dGhlIG5vZGUg
YmVsb25ncyB0byBhIGRpZmZlcmVudCBBU1Q8L2xpPgorCSAqIDxsaT50aGUgbm9kZSBhbHJlYWR5
IGhhcyBhIHBhcmVudDwvbGk+CisJICogPC91bD4KKwkgKi8KKwlwdWJsaWMgdm9pZCBzZXROYW1l
KFNpbXBsZU5hbWUgbmFtZSkgeworCQlpZiAobmFtZSA9PSBudWxsKSB7CisJCQl0aHJvdyBuZXcg
SWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uKCk7CisJCX0KKwkJQVNUTm9kZSBvbGRDaGlsZCA9IHRo
aXMubWV0aG9kTmFtZTsKKwkJcHJlUmVwbGFjZUNoaWxkKG9sZENoaWxkLCBuYW1lLCBOQU1FX1BS
T1BFUlRZKTsKKwkJdGhpcy5tZXRob2ROYW1lID0gbmFtZTsKKwkJcG9zdFJlcGxhY2VDaGlsZChv
bGRDaGlsZCwgbmFtZSwgTkFNRV9QUk9QRVJUWSk7CisJfQorCisJLyoqCisJICogUmVzb2x2ZXMg
YW5kIHJldHVybnMgdGhlIGJpbmRpbmcgZm9yIHRoZSBtZXRob2QgcmVmZXJlbmNlZCBieSB0aGlz
CisJICogZXhwcmVzc2lvbi4KKwkgKiA8cD4KKwkgKiBOb3RlIHRoYXQgYmluZGluZ3MgYXJlIGdl
bmVyYWxseSB1bmF2YWlsYWJsZSB1bmxlc3MgcmVxdWVzdGVkIHdoZW4gdGhlCisJICogQVNUIGlz
IGJlaW5nIGJ1aWx0LgorCSAqIDwvcD4KKwkgKgorCSAqIEByZXR1cm4gdGhlIG1ldGhvZCBiaW5k
aW5nLCBvciA8Y29kZT5udWxsPC9jb2RlPiBpZiB0aGUgYmluZGluZyBjYW5ub3QKKwkgKiBiZSBy
ZXNvbHZlZAorCSAqLworCXB1YmxpYyBJTWV0aG9kQmluZGluZyByZXNvbHZlTWV0aG9kQmluZGlu
ZygpIHsKKwkJcmV0dXJuIHRoaXMuYXN0LmdldEJpbmRpbmdSZXNvbHZlcigpLnJlc29sdmVNZXRo
b2QodGhpcyk7CisJfQorCisJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCisJICog
TWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCisJICovCisJaW50IG1lbVNpemUoKSB7CisJCS8v
IHRyZWF0IENvZGUgYXMgZnJlZQorCQlyZXR1cm4gQkFTRV9OT0RFX1NJWkUgKyAzICogNDsKKwl9
CisKKwkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKKwkgKiBNZXRob2QgZGVjbGFy
ZWQgb24gQVNUTm9kZS4KKwkgKi8KKwlpbnQgdHJlZVNpemUoKSB7CisJCXJldHVybgorCQkJbWVt
U2l6ZSgpCisJCQkrICh0aGlzLm9wdGlvbmFsUXVhbGlmaWVyID09IG51bGwgPyAwIDogZ2V0UXVh
bGlmaWVyKCkudHJlZVNpemUoKSkKKwkJCSsgKHRoaXMudHlwZUFyZ3VtZW50cyA9PSBudWxsID8g
MCA6IHRoaXMudHlwZUFyZ3VtZW50cy5saXN0U2l6ZSgpKQorCQkJKyAodGhpcy5tZXRob2ROYW1l
ID09IG51bGwgPyAwIDogZ2V0TmFtZSgpLnRyZWVTaXplKCkpOworCX0KK30KXCBObyBuZXdsaW5l
IGF0IGVuZCBvZiBmaWxlCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3Jn
L2VjbGlwc2UvamR0L2NvcmUvZG9tL1R5cGVNZXRob2RSZWZlcmVuY2UuamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vVHlwZU1ldGhvZFJlZmVy
ZW5jZS5qYXZhCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLjY1NTYxNzgKLS0t
IC9kZXYvbnVsbAorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0
L2NvcmUvZG9tL1R5cGVNZXRob2RSZWZlcmVuY2UuamF2YQpAQCAtMCwwICsxLDMxMSBAQAorLyoq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioKKyAqIENvcHlyaWdodCAoYykgMjAxMyBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4KKyAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQg
dGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKKyAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0
aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAorICogd2hpY2ggYWNj
b21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKKyAqIGh0dHA6
Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogVGhpcyBpcyBhbiBp
bXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1
bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZh
aWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUg
Y29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1Au
CisgKiAKKyAqIENvbnRyaWJ1dG9yczoKKyAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFs
IEFQSSBhbmQgaW1wbGVtZW50YXRpb24KKyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLworcGFja2Fn
ZSBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb207CisKK2ltcG9ydCBqYXZhLnV0aWwuQXJyYXlMaXN0
OworaW1wb3J0IGphdmEudXRpbC5MaXN0OworCisvKioKKyAqIFR5cGUgTWV0aG9kIFJlZmVyZW5j
ZSBleHByZXNzaW9uIEFTVCBub2RlIHR5cGUuCisgKiA8cHJlPgorICogVHlwZU1ldGhvZFJlZmVy
ZW5jZToKKyAqICAgICBUeXBlIDxiPjo6PC9iPiAKKyAqICAgICAgICAgWyA8Yj4mbHQ7PC9iPiBU
eXBlIHsgPGI+LDwvYj4gVHlwZSB9IDxiPiZndDs8L2I+IF0KKyAqICAgICAgICAgSWRlbnRpZmll
cgorICogPC9wcmU+CisgKgorICogQHNpbmNlIDMuOSBCRVRBX0pBVkE4CisgKiBAbm9pbnN0YW50
aWF0ZSBUaGlzIGNsYXNzIGlzIG5vdCBpbnRlbmRlZCB0byBiZSBpbnN0YW50aWF0ZWQgYnkgY2xp
ZW50cy4KKyAqLworcHVibGljIGNsYXNzIFR5cGVNZXRob2RSZWZlcmVuY2UgZXh0ZW5kcyBFeHBy
ZXNzaW9uIHsKKworCS8qKgorCSAqIFRoZSAiZXhwcmVzc2lvbiIgc3RydWN0dXJhbCBwcm9wZXJ0
eSBvZiB0aGlzIG5vZGUgdHlwZSAoY2hpbGQgdHlwZToge0BsaW5rIEV4cHJlc3Npb259KS4KKwkg
Ki8KKwlwdWJsaWMgc3RhdGljIGZpbmFsIENoaWxkUHJvcGVydHlEZXNjcmlwdG9yIFRZUEVfUFJP
UEVSVFkgPQorCQluZXcgQ2hpbGRQcm9wZXJ0eURlc2NyaXB0b3IoVHlwZU1ldGhvZFJlZmVyZW5j
ZS5jbGFzcywgInR5cGUiLCBUeXBlLmNsYXNzLCBNQU5EQVRPUlksIENZQ0xFX1JJU0spOyAvLyRO
T04tTkxTLTEkCisKKwkvKioKKwkgKiBUaGUgInR5cGVBcmd1bWVudHMiIHN0cnVjdHVyYWwgcHJv
cGVydHkgb2YgdGhpcyBub2RlIHR5cGUgKGVsZW1lbnQgdHlwZToge0BsaW5rIFR5cGV9KSAKKwkg
Ki8KKwlwdWJsaWMgc3RhdGljIGZpbmFsIENoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBUWVBF
X0FSR1VNRU5UU19QUk9QRVJUWSA9CisJCW5ldyBDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3Io
VHlwZU1ldGhvZFJlZmVyZW5jZS5jbGFzcywgInR5cGVBcmd1bWVudHMiLCBUeXBlLmNsYXNzLCBO
T19DWUNMRV9SSVNLKTsgLy8kTk9OLU5MUy0xJAorCisJLyoqCisJICogVGhlICJuYW1lIiBzdHJ1
Y3R1cmFsIHByb3BlcnR5IG9mIHRoaXMgbm9kZSB0eXBlIChjaGlsZCB0eXBlOiB7QGxpbmsgU2lt
cGxlTmFtZX0uIAorCSAqLworCXB1YmxpYyBzdGF0aWMgZmluYWwgQ2hpbGRQcm9wZXJ0eURlc2Ny
aXB0b3IgTkFNRV9QUk9QRVJUWSA9CisJCW5ldyBDaGlsZFByb3BlcnR5RGVzY3JpcHRvcihUeXBl
TWV0aG9kUmVmZXJlbmNlLmNsYXNzLCAibmFtZSIsIFNpbXBsZU5hbWUuY2xhc3MsIE1BTkRBVE9S
WSwgTk9fQ1lDTEVfUklTSyk7IC8vJE5PTi1OTFMtMSQKKworCS8qKgorCSAqIEEgbGlzdCBvZiBw
cm9wZXJ0eSBkZXNjcmlwdG9ycyAoZWxlbWVudCB0eXBlOgorCSAqIHtAbGluayBTdHJ1Y3R1cmFs
UHJvcGVydHlEZXNjcmlwdG9yfSksCisJICogb3IgbnVsbCBpZiB1bmluaXRpYWxpemVkLgorCSAq
LworCXByaXZhdGUgc3RhdGljIGZpbmFsIExpc3QgUFJPUEVSVFlfREVTQ1JJUFRPUlNfOF8wOwor
CQorCXN0YXRpYyB7CisJCUxpc3QgcHJvcGVydHlMaXN0ID0gbmV3IEFycmF5TGlzdCg0KTsKKwkJ
Y3JlYXRlUHJvcGVydHlMaXN0KFR5cGVNZXRob2RSZWZlcmVuY2UuY2xhc3MsIHByb3BlcnR5TGlz
dCk7CisJCWFkZFByb3BlcnR5KFRZUEVfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CisJCWFkZFBy
b3BlcnR5KFRZUEVfQVJHVU1FTlRTX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOworCQlhZGRQcm9w
ZXJ0eShOQU1FX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOworCQlQUk9QRVJUWV9ERVNDUklQVE9S
U184XzAgPSByZWFwUHJvcGVydHlMaXN0KHByb3BlcnR5TGlzdCk7CisJfQorCQorCS8qKgorCSAq
IFJldHVybnMgYSBsaXN0IG9mIHN0cnVjdHVyYWwgcHJvcGVydHkgZGVzY3JpcHRvcnMgZm9yIHRo
aXMgbm9kZSB0eXBlLgorCSAqIENsaWVudHMgbXVzdCBub3QgbW9kaWZ5IHRoZSByZXN1bHQuCisJ
ICoKKwkgKiBAcGFyYW0gYXBpTGV2ZWwgdGhlIEFQSSBsZXZlbDsgb25lIG9mIHRoZSBBU1QuSkxT
KiBjb25zdGFudHMKKwkgKiBAcmV0dXJuIGEgbGlzdCBvZiBwcm9wZXJ0eSBkZXNjcmlwdG9ycyAo
ZWxlbWVudCB0eXBlOgorCSAqIHtAbGluayBTdHJ1Y3R1cmFsUHJvcGVydHlEZXNjcmlwdG9yfSkK
KwkgKi8KKwlwdWJsaWMgc3RhdGljIExpc3QgcHJvcGVydHlEZXNjcmlwdG9ycyhpbnQgYXBpTGV2
ZWwpIHsKKwkJcmV0dXJuIFBST1BFUlRZX0RFU0NSSVBUT1JTXzhfMDsKKwl9CisKKwkvKioKKwkg
KiBUaGUgdHlwZTsgZGVmYXVsdHMgdG8gbnVsbC4KKwkgKi8KKwlwcml2YXRlIFR5cGUgdHlwZSA9
IG51bGw7CisKKwkvKioKKwkgKiBUaGUgdHlwZSBhcmd1bWVudHMgKGVsZW1lbnQgdHlwZToge0Bs
aW5rIFR5cGV9KS4KKwkgKiBEZWZhdWx0cyB0byBhbiBlbXB0eSBsaXN0LgorCSAqLworCXByaXZh
dGUgQVNUTm9kZS5Ob2RlTGlzdCB0eXBlQXJndW1lbnRzID0KKwkJbmV3IEFTVE5vZGUuTm9kZUxp
c3QoVFlQRV9BUkdVTUVOVFNfUFJPUEVSVFkpOworCQorCS8qKgorCSAqIFRoZSBtZXRob2QgbmFt
ZTsgbGF6aWx5IGluaXRpYWxpemVkOyBkZWZhdWx0cyB0byBhbiB1bnNwZWNpZmllZCwKKwkgKiBs
ZWdhbCBKYXZhIG1ldGhvZCBuYW1lLgorCSAqLworCXByaXZhdGUgU2ltcGxlTmFtZSBtZXRob2RO
YW1lID0gbnVsbDsKKworCS8qKgorCSAqIENyZWF0ZXMgYSBuZXcgQVNUIG5vZGUgZm9yIGFuIFR5
cGVNZXRob2RSZWZlcmVuY2UgZGVjbGFyYXRpb24gb3duZWQKKwkgKiBieSB0aGUgZ2l2ZW4gQVNU
LgorCSAqIDxwPgorCSAqIE4uQi4gVGhpcyBjb25zdHJ1Y3RvciBpcyBwYWNrYWdlLXByaXZhdGU7
IGFsbCBzdWJjbGFzc2VzIG11c3QgYmUKKwkgKiBkZWNsYXJlZCBpbiB0aGUgc2FtZSBwYWNrYWdl
OyBjbGllbnRzIGFyZSB1bmFibGUgdG8gZGVjbGFyZQorCSAqIGFkZGl0aW9uYWwgc3ViY2xhc3Nl
cy4KKwkgKiA8L3A+CisJICoKKwkgKiBAcGFyYW0gYXN0IHRoZSBBU1QgdGhhdCBpcyB0byBvd24g
dGhpcyBub2RlCisJICovCisJVHlwZU1ldGhvZFJlZmVyZW5jZShBU1QgYXN0KSB7CisJCXN1cGVy
KGFzdCk7CisJCXVuc3VwcG9ydGVkSW4yXzNfNCgpOworCX0KKworCS8qIChvbWl0IGphdmFkb2Mg
Zm9yIHRoaXMgbWV0aG9kKQorCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAqLwor
CWZpbmFsIExpc3QgaW50ZXJuYWxTdHJ1Y3R1cmFsUHJvcGVydGllc0ZvclR5cGUoaW50IGFwaUxl
dmVsKSB7CisJCXJldHVybiBwcm9wZXJ0eURlc2NyaXB0b3JzKGFwaUxldmVsKTsKKwl9CisKKwkv
KiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKKwkgKiBNZXRob2QgZGVjbGFyZWQgb24g
QVNUTm9kZS4KKwkgKi8KKwlmaW5hbCBBU1ROb2RlIGludGVybmFsR2V0U2V0Q2hpbGRQcm9wZXJ0
eShDaGlsZFByb3BlcnR5RGVzY3JpcHRvciBwcm9wZXJ0eSwgYm9vbGVhbiBnZXQsIEFTVE5vZGUg
Y2hpbGQpIHsKKwkJaWYgKHByb3BlcnR5ID09IE5BTUVfUFJPUEVSVFkpIHsKKwkJCWlmIChnZXQp
IHsKKwkJCQlyZXR1cm4gZ2V0TmFtZSgpOworCQkJfSBlbHNlIHsKKwkJCQlzZXROYW1lKChTaW1w
bGVOYW1lKSBjaGlsZCk7CisJCQkJcmV0dXJuIG51bGw7CisJCQl9CisJCX0KKwkJaWYgKHByb3Bl
cnR5ID09IFRZUEVfUFJPUEVSVFkpIHsKKwkJCWlmIChnZXQpIHsKKwkJCQlyZXR1cm4gZ2V0VHlw
ZSgpOworCQkJfSBlbHNlIHsKKwkJCQlzZXRUeXBlKChUeXBlKSBjaGlsZCk7CisJCQkJcmV0dXJu
IG51bGw7CisJCQl9CisJCX0KKwkJLy8gYWxsb3cgZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiB0byBm
bGFnIHRoZSBlcnJvcgorCQlyZXR1cm4gc3VwZXIuaW50ZXJuYWxHZXRTZXRDaGlsZFByb3BlcnR5
KHByb3BlcnR5LCBnZXQsIGNoaWxkKTsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlz
IG1ldGhvZCkKKwkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8KKwlmaW5hbCBM
aXN0IGludGVybmFsR2V0Q2hpbGRMaXN0UHJvcGVydHkoQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlw
dG9yIHByb3BlcnR5KSB7CisJCWlmIChwcm9wZXJ0eSA9PSBUWVBFX0FSR1VNRU5UU19QUk9QRVJU
WSkgeworCQkJcmV0dXJuIHR5cGVBcmd1bWVudHMoKTsKKwkJfQorCQkvLyBhbGxvdyBkZWZhdWx0
IGltcGxlbWVudGF0aW9uIHRvIGZsYWcgdGhlIGVycm9yCisJCXJldHVybiBzdXBlci5pbnRlcm5h
bEdldENoaWxkTGlzdFByb3BlcnR5KHByb3BlcnR5KTsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9j
IGZvciB0aGlzIG1ldGhvZCkKKwkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8K
KwlmaW5hbCBpbnQgZ2V0Tm9kZVR5cGUwKCkgeworCQlyZXR1cm4gVFlQRV9NRVRIT0RfUkVGRVJF
TkNFOworCX0KKworCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQorCSAqIE1ldGhv
ZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAqLworCUFTVE5vZGUgY2xvbmUwKEFTVCB0YXJnZXQp
IHsKKwkJVHlwZU1ldGhvZFJlZmVyZW5jZSByZXN1bHQgPSBuZXcgVHlwZU1ldGhvZFJlZmVyZW5j
ZSh0YXJnZXQpOworCQlyZXN1bHQuc2V0U291cmNlUmFuZ2UoZ2V0U3RhcnRQb3NpdGlvbigpLCBn
ZXRMZW5ndGgoKSk7CisJCXJlc3VsdC5zZXROYW1lKChTaW1wbGVOYW1lKSBnZXROYW1lKCkuY2xv
bmUodGFyZ2V0KSk7CisJCXJlc3VsdC5zZXRUeXBlKAorCQkJKFR5cGUpIEFTVE5vZGUuY29weVN1
YnRyZWUodGFyZ2V0LCBnZXRUeXBlKCkpKTsKKwkJcmVzdWx0LnR5cGVBcmd1bWVudHMoKS5hZGRB
bGwoQVNUTm9kZS5jb3B5U3VidHJlZXModGFyZ2V0LCB0eXBlQXJndW1lbnRzKCkpKTsKKwkJcmV0
dXJuIHJlc3VsdDsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKKwkg
KiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8KKwlmaW5hbCBib29sZWFuIHN1YnRy
ZWVNYXRjaDAoQVNUTWF0Y2hlciBtYXRjaGVyLCBPYmplY3Qgb3RoZXIpIHsKKwkJLy8gZGlzcGF0
Y2ggdG8gY29ycmVjdCBvdmVybG9hZGVkIG1hdGNoIG1ldGhvZAorCQlyZXR1cm4gbWF0Y2hlci5t
YXRjaCh0aGlzLCBvdGhlcik7CisJfQorCisJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRo
b2QpCisJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCisJICovCisJdm9pZCBhY2NlcHQw
KEFTVFZpc2l0b3IgdmlzaXRvcikgeworCQlib29sZWFuIHZpc2l0Q2hpbGRyZW4gPSB2aXNpdG9y
LnZpc2l0KHRoaXMpOworCQlpZiAodmlzaXRDaGlsZHJlbikgeworCQkJLy8gdmlzaXQgY2hpbGRy
ZW4gaW4gbm9ybWFsIGxlZnQgdG8gcmlnaHQgcmVhZGluZyBvcmRlcgorCQkJYWNjZXB0Q2hpbGQo
dmlzaXRvciwgZ2V0VHlwZSgpKTsKKwkJCWFjY2VwdENoaWxkcmVuKHZpc2l0b3IsIHRoaXMudHlw
ZUFyZ3VtZW50cyk7CisJCQlhY2NlcHRDaGlsZCh2aXNpdG9yLCBnZXROYW1lKCkpOworCQl9CisJ
CXZpc2l0b3IuZW5kVmlzaXQodGhpcyk7CisJfQorCisJLyoqCisJICogUmV0dXJucyB0aGUgdHlw
ZSBvZiB0aGlzIHR5cGUgbWV0aG9kIHJlZmVyZW5jZSBleHByZXNzaW9uCisJICoKKwkgKiBAcmV0
dXJuIHRoZSB0eXBlIG5vZGUKKwkgKi8KKwlwdWJsaWMgVHlwZSBnZXRUeXBlKCkgeworCQlyZXR1
cm4gdGhpcy50eXBlOworCX0KKworCS8qKgorCSAqIFNldHMgb3IgY2xlYXJzIHRoZSB0eXBlIG9m
IHRoaXMgdHlwZSBtZXRob2QgcmVmZXJlbmNlLgorCSAqCisJICogQHBhcmFtIHR5cGUgdGhlIFR5
cGUgbm9kZQorCSAqIEBleGNlcHRpb24gSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uIGlmOgorCSAq
IDx1bD4KKwkgKiA8bGk+dGhlIG5vZGUgYmVsb25ncyB0byBhIGRpZmZlcmVudCBBU1Q8L2xpPgor
CSAqIDxsaT50aGUgbm9kZSBhbHJlYWR5IGhhcyBhIHBhcmVudDwvbGk+CisJICogPGxpPmEgY3lj
bGUgaW4gd291bGQgYmUgY3JlYXRlZDwvbGk+CisJICogPC91bD4KKwkgKi8KKwlwdWJsaWMgdm9p
ZCBzZXRUeXBlKFR5cGUgdHlwZSkgeworCQlpZiAodHlwZSA9PSBudWxsKSB7CisJCQl0aHJvdyBu
ZXcgSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uKCk7CisJCX0KKwkJQVNUTm9kZSBvbGRDaGlsZCA9
IHRoaXMudHlwZTsKKwkJcHJlUmVwbGFjZUNoaWxkKG9sZENoaWxkLCB0eXBlLCBUWVBFX1BST1BF
UlRZKTsKKwkJdGhpcy50eXBlID0gdHlwZTsKKwkJcG9zdFJlcGxhY2VDaGlsZChvbGRDaGlsZCwg
dHlwZSwgVFlQRV9QUk9QRVJUWSk7CisJfQorCisJLyoqCisJICogUmV0dXJucyB0aGUgbGl2ZSBv
cmRlcmVkIGxpc3Qgb2YgdHlwZSBhcmd1bWVudHMgb2YgdGhpcyB0eXBlIG1ldGhvZCByZWZlcmVu
Y2UKKwkgKgorCSAqIEByZXR1cm4gdGhlIGxpdmUgbGlzdCBvZiB0eXBlIGFyZ3VtZW50cworCSAq
ICAgIChlbGVtZW50IHR5cGU6IHtAbGluayBUeXBlfSkKKwkgKi8KKwlwdWJsaWMgTGlzdCB0eXBl
QXJndW1lbnRzKCkgeworCQlyZXR1cm4gdGhpcy50eXBlQXJndW1lbnRzOworCX0KKworCS8qKgor
CSAqIFJldHVybnMgdGhlIG5hbWUgb2YgdGhlIG1ldGhvZCByZWZlcmVuY2VkIGluIHRoaXMgZXhw
cmVzc2lvbi4KKwkgKgorCSAqIEByZXR1cm4gdGhlIG1ldGhvZCBuYW1lIG5vZGUKKwkgKi8KKwlw
dWJsaWMgU2ltcGxlTmFtZSBnZXROYW1lKCkgeworCQlpZiAodGhpcy5tZXRob2ROYW1lID09IG51
bGwpIHsKKwkJCS8vIGxhenkgaW5pdCBtdXN0IGJlIHRocmVhZC1zYWZlIGZvciByZWFkZXJzCisJ
CQlzeW5jaHJvbml6ZWQgKHRoaXMpIHsKKwkJCQlpZiAodGhpcy5tZXRob2ROYW1lID09IG51bGwp
IHsKKwkJCQkJcHJlTGF6eUluaXQoKTsKKwkJCQkJdGhpcy5tZXRob2ROYW1lID0gbmV3IFNpbXBs
ZU5hbWUodGhpcy5hc3QpOworCQkJCQlwb3N0TGF6eUluaXQodGhpcy5tZXRob2ROYW1lLCBOQU1F
X1BST1BFUlRZKTsKKwkJCQl9CisJCQl9CisJCX0KKwkJcmV0dXJuIHRoaXMubWV0aG9kTmFtZTsK
Kwl9CisKKwkvKioKKwkgKiBTZXRzIHRoZSBuYW1lIG9mIHRoZSBtZXRob2QgcmVmZXJlbmNlZCBp
biB0aGlzIGV4cHJlc3Npb24gdG8gdGhlCisJICogZ2l2ZW4gbmFtZS4KKwkgKgorCSAqIEBwYXJh
bSBuYW1lIHRoZSBuZXcgbWV0aG9kIG5hbWUKKwkgKiBAZXhjZXB0aW9uIElsbGVnYWxBcmd1bWVu
dEV4Y2VwdGlvbiBpZjoKKwkgKiA8dWw+CisJICogPGxpPnRoZSBub2RlIGJlbG9uZ3MgdG8gYSBk
aWZmZXJlbnQgQVNUPC9saT4KKwkgKiA8bGk+dGhlIG5vZGUgYWxyZWFkeSBoYXMgYSBwYXJlbnQ8
L2xpPgorCSAqIDwvdWw+CisJICovCisJcHVibGljIHZvaWQgc2V0TmFtZShTaW1wbGVOYW1lIG5h
bWUpIHsKKwkJaWYgKG5hbWUgPT0gbnVsbCkgeworCQkJdGhyb3cgbmV3IElsbGVnYWxBcmd1bWVu
dEV4Y2VwdGlvbigpOworCQl9CisJCUFTVE5vZGUgb2xkQ2hpbGQgPSB0aGlzLm1ldGhvZE5hbWU7
CisJCXByZVJlcGxhY2VDaGlsZChvbGRDaGlsZCwgbmFtZSwgTkFNRV9QUk9QRVJUWSk7CisJCXRo
aXMubWV0aG9kTmFtZSA9IG5hbWU7CisJCXBvc3RSZXBsYWNlQ2hpbGQob2xkQ2hpbGQsIG5hbWUs
IE5BTUVfUFJPUEVSVFkpOworCX0KKworCS8qKgorCSAqIFJlc29sdmVzIGFuZCByZXR1cm5zIHRo
ZSBiaW5kaW5nIGZvciB0aGUgbWV0aG9kIHJlZmVyZW5jZWQgYnkgdGhpcworCSAqIGV4cHJlc3Np
b24uCisJICogPHA+CisJICogTm90ZSB0aGF0IGJpbmRpbmdzIGFyZSBnZW5lcmFsbHkgdW5hdmFp
bGFibGUgdW5sZXNzIHJlcXVlc3RlZCB3aGVuIHRoZQorCSAqIEFTVCBpcyBiZWluZyBidWlsdC4K
KwkgKiA8L3A+CisJICoKKwkgKiBAcmV0dXJuIHRoZSBtZXRob2QgYmluZGluZywgb3IgPGNvZGU+
bnVsbDwvY29kZT4gaWYgdGhlIGJpbmRpbmcgY2Fubm90CisJICogYmUgcmVzb2x2ZWQKKwkgKi8K
KwlwdWJsaWMgSU1ldGhvZEJpbmRpbmcgcmVzb2x2ZU1ldGhvZEJpbmRpbmcoKSB7CisJCXJldHVy
biB0aGlzLmFzdC5nZXRCaW5kaW5nUmVzb2x2ZXIoKS5yZXNvbHZlTWV0aG9kKHRoaXMpOworCX0K
KworCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQorCSAqIE1ldGhvZCBkZWNsYXJl
ZCBvbiBBU1ROb2RlLgorCSAqLworCWludCBtZW1TaXplKCkgeworCQkvLyB0cmVhdCBDb2RlIGFz
IGZyZWUKKwkJcmV0dXJuIEJBU0VfTk9ERV9TSVpFICsgMyAqIDQ7CisJfQorCisJLyogKG9taXQg
amF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCisJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUu
CisJICovCisJaW50IHRyZWVTaXplKCkgeworCQlyZXR1cm4KKwkJCW1lbVNpemUoKQorCQkJKyAo
dGhpcy50eXBlID09IG51bGwgPyAwIDogZ2V0VHlwZSgpLnRyZWVTaXplKCkpCisJCQkrICh0aGlz
LnR5cGVBcmd1bWVudHMgPT0gbnVsbCA/IDAgOiB0aGlzLnR5cGVBcmd1bWVudHMubGlzdFNpemUo
KSkKKwkJCSsgKHRoaXMubWV0aG9kTmFtZSA9PSBudWxsID8gMCA6IGdldE5hbWUoKS50cmVlU2l6
ZSgpKTsKKwl9Cit9ClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmlsZQpkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9O
YWl2ZUFTVEZsYXR0ZW5lci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9OYWl2ZUFTVEZsYXR0ZW5lci5qYXZhCmluZGV4IDI3
ZmRhYjcuLjMzODVmNzcgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vTmFpdmVBU1RGbGF0dGVuZXIuamF2YQorKysg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUv
ZG9tL05haXZlQVNURmxhdHRlbmVyLmphdmEKQEAgLTU3Nyw2ICs1NzcsMjkgQEAKIAl9CiAJCiAJ
LyoKKwkgKiBAc2VlIEFTVFZpc2l0b3IjdmlzaXQoQ3JlYXRpb25SZWZlcmVuY2UpCisJICogCisJ
ICogQHNpbmNlIDMuOSBCRVRBX0pBVkE4CisJICovCisJcHVibGljIGJvb2xlYW4gdmlzaXQoQ3Jl
YXRpb25SZWZlcmVuY2Ugbm9kZSkgeworCQlub2RlLmdldEV4cHJlc3Npb24oKS5hY2NlcHQodGhp
cyk7CisJCXRoaXMuYnVmZmVyLmFwcGVuZCgiIDo6ICIpOy8vJE5PTi1OTFMtMSQKKwkJaWYgKCFu
b2RlLnR5cGVBcmd1bWVudHMoKS5pc0VtcHR5KCkpIHsKKwkJCXRoaXMuYnVmZmVyLmFwcGVuZCgn
PCcpOworCQkJZm9yIChJdGVyYXRvciBpdCA9IG5vZGUudHlwZUFyZ3VtZW50cygpLml0ZXJhdG9y
KCk7IGl0Lmhhc05leHQoKTsgKSB7CisJCQkJVHlwZSB0ID0gKFR5cGUpIGl0Lm5leHQoKTsKKwkJ
CQl0LmFjY2VwdCh0aGlzKTsKKwkJCQlpZiAoaXQuaGFzTmV4dCgpKSB7CisJCQkJCXRoaXMuYnVm
ZmVyLmFwcGVuZCgnLCcpOworCQkJCX0KKwkJCX0KKwkJCXRoaXMuYnVmZmVyLmFwcGVuZCgnPicp
OworCQl9CisJCXRoaXMuYnVmZmVyLmFwcGVuZCgiIG5ldyAiKTsvLyROT04tTkxTLTEkCisJCXJl
dHVybiBmYWxzZTsKKwl9CisKKwkvKgogCSAqIEBzZWUgQVNUVmlzaXRvciN2aXNpdChEb1N0YXRl
bWVudCkKIAkgKi8KIAlwdWJsaWMgYm9vbGVhbiB2aXNpdChEb1N0YXRlbWVudCBub2RlKSB7CkBA
IC02ODQsNiArNzA3LDI5IEBACiAJCQl9CiAJCX0KIAkJdGhpcy5idWZmZXIuYXBwZW5kKCJ9XG4i
KTsvLyROT04tTkxTLTEkCisJCXJldHVybiBmYWxzZTsKKwl9CisKKwkvKgorCSAqIEBzZWUgQVNU
VmlzaXRvciN2aXNpdChFeHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlKQorCSAqIAorCSAqIEBzaW5j
ZSAzLjkgQkVUQV9KQVZBOAorCSAqLworCXB1YmxpYyBib29sZWFuIHZpc2l0KEV4cHJlc3Npb25N
ZXRob2RSZWZlcmVuY2Ugbm9kZSkgeworCQlub2RlLmdldEV4cHJlc3Npb24oKS5hY2NlcHQodGhp
cyk7CisJCXRoaXMuYnVmZmVyLmFwcGVuZCgiIDo6ICIpOy8vJE5PTi1OTFMtMSQKKwkJaWYgKCFu
b2RlLnR5cGVBcmd1bWVudHMoKS5pc0VtcHR5KCkpIHsKKwkJCXRoaXMuYnVmZmVyLmFwcGVuZCgn
PCcpOworCQkJZm9yIChJdGVyYXRvciBpdCA9IG5vZGUudHlwZUFyZ3VtZW50cygpLml0ZXJhdG9y
KCk7IGl0Lmhhc05leHQoKTsgKSB7CisJCQkJVHlwZSB0ID0gKFR5cGUpIGl0Lm5leHQoKTsKKwkJ
CQl0LmFjY2VwdCh0aGlzKTsKKwkJCQlpZiAoaXQuaGFzTmV4dCgpKSB7CisJCQkJCXRoaXMuYnVm
ZmVyLmFwcGVuZCgnLCcpOworCQkJCX0KKwkJCX0KKwkJCXRoaXMuYnVmZmVyLmFwcGVuZCgnPicp
OworCQl9CisJCW5vZGUuZ2V0TmFtZSgpLmFjY2VwdCh0aGlzKTsKIAkJcmV0dXJuIGZhbHNlOwog
CX0KIApAQCAtMTQ3OCw2ICsxNTI0LDMyIEBACiAJfQogCiAJLyoKKwkgKiBAc2VlIEFTVFZpc2l0
b3IjdmlzaXQoU3VwZXJNZXRob2RSZWZlcmVuY2UpCisJICogCisJICogQHNpbmNlIDMuOSBCRVRB
X0pBVkE4CisJICovCisJcHVibGljIGJvb2xlYW4gdmlzaXQoU3VwZXJNZXRob2RSZWZlcmVuY2Ug
bm9kZSkgeworCQlpZiAobm9kZS5nZXRRdWFsaWZpZXIoKSAhPSBudWxsKSB7CisJCQlub2RlLmdl
dFF1YWxpZmllcigpLmFjY2VwdCh0aGlzKTsKKwkJCXRoaXMuYnVmZmVyLmFwcGVuZCgnLicpOwor
CQl9CisJCXRoaXMuYnVmZmVyLmFwcGVuZCgic3VwZXIgOjogIik7Ly8kTk9OLU5MUy0xJAorCQlp
ZiAoIW5vZGUudHlwZUFyZ3VtZW50cygpLmlzRW1wdHkoKSkgeworCQkJdGhpcy5idWZmZXIuYXBw
ZW5kKCc8Jyk7CisJCQlmb3IgKEl0ZXJhdG9yIGl0ID0gbm9kZS50eXBlQXJndW1lbnRzKCkuaXRl
cmF0b3IoKTsgaXQuaGFzTmV4dCgpOyApIHsKKwkJCQlUeXBlIHQgPSAoVHlwZSkgaXQubmV4dCgp
OworCQkJCXQuYWNjZXB0KHRoaXMpOworCQkJCWlmIChpdC5oYXNOZXh0KCkpIHsKKwkJCQkJdGhp
cy5idWZmZXIuYXBwZW5kKCcsJyk7CisJCQkJfQorCQkJfQorCQkJdGhpcy5idWZmZXIuYXBwZW5k
KCI+Iik7Ly8kTk9OLU5MUy0xJAorCQl9CisJCW5vZGUuZ2V0TmFtZSgpLmFjY2VwdCh0aGlzKTsK
KwkJcmV0dXJuIGZhbHNlOworCX0KKworCS8qCiAJICogQHNlZSBBU1RWaXNpdG9yI3Zpc2l0KFN3
aXRjaENhc2UpCiAJICovCiAJcHVibGljIGJvb2xlYW4gdmlzaXQoU3dpdGNoQ2FzZSBub2RlKSB7
CkBAIC0xNzI4LDYgKzE4MDAsMjkgQEAKIAl9CiAKIAkvKgorCSAqIEBzZWUgQVNUVmlzaXRvciN2
aXNpdChUeXBlTWV0aG9kUmVmZXJlbmNlKQorCSAqIAorCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZB
OAorCSAqLworCXB1YmxpYyBib29sZWFuIHZpc2l0KFR5cGVNZXRob2RSZWZlcmVuY2Ugbm9kZSkg
eworCQlub2RlLmdldFR5cGUoKS5hY2NlcHQodGhpcyk7CisJCXRoaXMuYnVmZmVyLmFwcGVuZCgi
IDo6ICIpOy8vJE5PTi1OTFMtMSQKKwkJaWYgKCFub2RlLnR5cGVBcmd1bWVudHMoKS5pc0VtcHR5
KCkpIHsKKwkJCXRoaXMuYnVmZmVyLmFwcGVuZCgnPCcpOworCQkJZm9yIChJdGVyYXRvciBpdCA9
IG5vZGUudHlwZUFyZ3VtZW50cygpLml0ZXJhdG9yKCk7IGl0Lmhhc05leHQoKTsgKSB7CisJCQkJ
VHlwZSB0ID0gKFR5cGUpIGl0Lm5leHQoKTsKKwkJCQl0LmFjY2VwdCh0aGlzKTsKKwkJCQlpZiAo
aXQuaGFzTmV4dCgpKSB7CisJCQkJCXRoaXMuYnVmZmVyLmFwcGVuZCgnLCcpOworCQkJCX0KKwkJ
CX0KKwkJCXRoaXMuYnVmZmVyLmFwcGVuZCgnPicpOworCQl9CisJCW5vZGUuZ2V0TmFtZSgpLmFj
Y2VwdCh0aGlzKTsKKwkJcmV0dXJuIGZhbHNlOworCX0KKworCS8qCiAJICogQHNlZSBBU1RWaXNp
dG9yI3Zpc2l0KFR5cGVQYXJhbWV0ZXIpCiAJICogQHNpbmNlIDMuMQogCSAqLw==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>232079</attachid>
            <date>2013-06-07 05:01:00 -0400</date>
            <delta_ts>2013-06-10 02:10:10 -0400</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Fix-for-Bugg-399794--18dom-ast-Add-a-new-node-type-f.patch</filename>
            <type>text/plain</type>
            <size>98136</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
ZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZhCmluZGV4IDVhMzYyNjQuLmJkNDVmMDUgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Rv
bS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YQpAQCAtMTY2Miw2ICsxNjYyLDIyNCBAQAogCX0KIAog
CS8qKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0z
OTk3OTQKKwkgKiBSZWZlcmVuY2VFeHByZXNzaW9uIEZhbWlseSBUZXN0cworCSAqIAorCSAqIEB0
aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uCisJICovCisJcHVibGljIHZvaWQgdGVzdDM5OTc5NCgp
IHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29y
a2luZ0NvcHkoIi9Db252ZXJ0ZXIxOC9zcmMvdGVzdDM5OTc5NC9YLmphdmEiLAorCQkJCXRydWUv
KiByZXNvbHZlICovKTsKKwkJU3RyaW5nIGNvbnRlbnRzID0gInBhY2thZ2UgdGVzdDM5OTc5NDsi
ICsKKwkJCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLio7XG4gIiArCisJCQkJImludGVy
ZmFjZSBJIHtcbiIgKworCQkJCSIgICAgT2JqZWN0IGNvcHkoaW50IFtdIGlhKTtcbiIgKworCQkJ
CSJ9XG4iICsKKwkJCQkiaW50ZXJmYWNlIEoge1xuIiArCisJCQkJIgl2b2lkIGZvbyhpbnQgeCk7
XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNsYXNzIFhYIHtcbiIgKworCQkJCSIJcHVibGljICB2
b2lkIGZvbyhpbnQgeCkge31cbiIgKworCQkJCSJ9XG4iICsKKwkJCQkiXG4iICsKKwkJCQkiY2xh
c3MgWSB7XG4iICsKKwkJCQkiICAgICAgIHN0YXRpYyBjbGFzcyBaIHtcbiIgKworCQkJCSIgICAg
ICAgICAgICAgICBwdWJsaWMgc3RhdGljIHZvaWQgZm9vKGludCB4KSB7XG4iICsKKwkJCQkiICAg
ICAgICAgICAgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50KHgpO1xuIiArCisJCQkJIiAgICAg
ICAgICAgICAgIH1cbiIgKworCQkJCSIgICAgICAgfVxuIiArCisJCQkJIiAgICAgICBwdWJsaWMg
dm9pZCBmb28oaW50IHgpIHtcbiIgKworCQkJCSIgICAgICAgICAgICAgICBTeXN0ZW0ub3V0LnBy
aW50KHgpO1xuIiArCisJCQkJIiAgICAgICB9XG4iICsKKwkJCQkiCQlwdWJsaWMgPFQ+IHZvaWQg
Zm9vKFQgdCl7dC5oYXNoQ29kZSgpO31cbiIgKworCQkJCSJ9XG4iICsKKwkJCQkiXG4iICsKKwkJ
CQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBYWCB7XG4iICsKKwkJCQkiICAgICAgIEBTdXBwcmVz
c1dhcm5pbmdzKFwidW51c2VkXCIpXG4iICsKKwkJCQkiICAgICAgIHB1YmxpYyAgdm9pZCBiYXIo
U3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJCSIgICAgICAgICAgICAgICAgWSB5ID0gbmV3IFko
KTtcbiIgKworCQkJCSIgICAgICAgICAgICAgICAgSSBpID0gQE1hcmtlciBpbnQgW106OjxTdHJp
bmc+Y2xvbmU7XG4iICsKKwkJCQkiICAgICAgICAgICAgICAgIEogaiA9IFkuQE1hcmtlciBaICA6
OiBmb287XG4iICsKKwkJCQkiICAgICAgICAgICAgICAgIEogajEgPSBZLkBNYXJrZXIgWiAgOjog
PFN0cmluZz4gZm9vO1xuIiArCisJCQkJIiAgICAgICAgICAgICAgICBKIGpkYXNoID0gQE1hcmtl
ciBXPEBNYXJrZXIgSW50ZWdlcj4gOjogPFN0cmluZz4gbmV3IDtcbiIgKworCQkJCSIgICAgICAg
ICAgICAgICAgSiBqaiA9IHkgOjogZm9vO1xuIiArCisJCQkJIiAgICAgICAgICAgICAgICBKIGp4
ID0gc3VwZXIgOjogIGZvbztcbiIgKworCQkJCSIJCSAJICAgICBjbGFzcyBaIHtcbiIgKworCQkJ
CSIJCQkJCXZvaWQgZm9vKCkge1xuIiArCisJCQkJIgkJCQkJCUoganogPSBYLnN1cGVyIDo6IGZv
bztcbiIgKworCQkgICAgCSIJCQkJCX1cbiIgKworCQkJCSIJCQkJfVxuIiArCQkKKwkJCQkiICAg
ICAgIH1cbiIgKworCQkJCSIgICAgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4gKFN0cmluZyBb
XSBhcmdzKSB7fVxuIiArCisJCQkJIn1cbiIgKworCQkJCSJjbGFzcyBXPFQ+IGV4dGVuZHMgWSB7
XG4iICsKKwkJCQkiICAgICAgIHB1YmxpYyBXKFQgeCkge31cbiIgKworCQkJCSJ9XG4iICsKKwkJ
CQkiXG4iICsKKwkJCQkiQFRhcmdldCAoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJCQki
QGludGVyZmFjZSBNYXJrZXIge30iOworCQkJCisJCUNvbXBpbGF0aW9uVW5pdCBjdSA9IChDb21w
aWxhdGlvblVuaXQpIGJ1aWxkQVNUKGNvbnRlbnRzLCB0aGlzLndvcmtpbmdDb3B5KTsKKwkJVHlw
ZURlY2xhcmF0aW9uIHR5cGVEZWNsYXJhdGlvbiA9IChUeXBlRGVjbGFyYXRpb24pIGdldEFTVE5v
ZGUoY3UsIDQpOworCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2QgPSB0eXBlRGVjbGFyYXRpb24u
Z2V0TWV0aG9kcygpWzBdOworCQlMaXN0IHN0YXRlbWVudHMgPSBtZXRob2QuZ2V0Qm9keSgpLnN0
YXRlbWVudHMoKTsKKwkJYXNzZXJ0VHJ1ZShzdGF0ZW1lbnRzLnNpemUoKSA9PSA4KTsKKwkJaW50
IGZDb3VudCA9IDE7CisJCQorCQkvLyB0eXBlIG1ldGhvZCByZWZlcmVuY2Ugd2l0aCBwcmltaXRp
dmUgdHlwZSB3aXRoIHR5cGUgYXJndW1lbnRzCisJCVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1l
bnQgc3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIHN0YXRlbWVudHMu
Z2V0KGZDb3VudCsrKTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IGZyYWdtZW50ID0g
KFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgc3RhdGVtZW50LmZyYWdtZW50cygpLmdldCgw
KTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gZnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsK
KwkJYXNzZXJ0VHJ1ZShleHByZXNzaW9uIGluc3RhbmNlb2YgVHlwZU1ldGhvZFJlZmVyZW5jZSk7
CisJCVR5cGVNZXRob2RSZWZlcmVuY2UgdHlwZU1ldGhvZFJlZmVyZW5jZSA9IChUeXBlTWV0aG9k
UmVmZXJlbmNlKSBleHByZXNzaW9uOworCQljaGVja1NvdXJjZVJhbmdlKHR5cGVNZXRob2RSZWZl
cmVuY2UsICJATWFya2VyIGludCBbXTo6PFN0cmluZz5jbG9uZSIsIGNvbnRlbnRzKTsKKwkJSVR5
cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gdHlwZU1ldGhvZFJlZmVyZW5jZS5yZXNvbHZlVHlwZUJp
bmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCh0eXBlQmluZGluZyk7CisJCUlNZXRob2RCaW5kaW5n
IG1ldGhvZEJpbmRpbmcgPSB0eXBlTWV0aG9kUmVmZXJlbmNlLnJlc29sdmVNZXRob2RCaW5kaW5n
KCk7CisJCWFzc2VydE5vdE51bGwobWV0aG9kQmluZGluZyk7CisJCVR5cGUgdHlwZSA9IHR5cGVN
ZXRob2RSZWZlcmVuY2UuZ2V0VHlwZSgpOworCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJATWFy
a2VyIGludCBbXSIsIGNvbnRlbnRzKTsKKwkJTGlzdCB0eXBlQXJndW1lbnRzID0gdHlwZU1ldGhv
ZFJlZmVyZW5jZS50eXBlQXJndW1lbnRzKCk7CisJCWFzc2VydFRydWUodHlwZUFyZ3VtZW50cy5z
aXplKCkgPT0gMSk7CisJCXR5cGUgPSAoVHlwZSkgdHlwZUFyZ3VtZW50cy5nZXQoMCk7CisJCWNo
ZWNrU291cmNlUmFuZ2UodHlwZSwgIlN0cmluZyIsIGNvbnRlbnRzKTsKKwkJYXNzZXJ0VHJ1ZSh0
eXBlLmlzU2ltcGxlVHlwZSgpKTsKKwkJU2ltcGxlTmFtZSBuYW1lID0gdHlwZU1ldGhvZFJlZmVy
ZW5jZS5nZXROYW1lKCk7CisJCWNoZWNrU291cmNlUmFuZ2UobmFtZSwgImNsb25lIiwgY29udGVu
dHMpOworCQl0eXBlQmluZGluZyA9IG5hbWUucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2Vy
dE5vdE51bGwodHlwZUJpbmRpbmcpOworCisJCS8vIHR5cGUgbWV0aG9kIHJlZmVyZW5jZSB3aXRo
IHF1YWxpZmllZCB0eXBlIHdpdGhvdXQgdHlwZSBhcmd1bWVudHMKKwkJc3RhdGVtZW50ID0gKFZh
cmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIHN0YXRlbWVudHMuZ2V0KGZDb3VudCsrKTsKKwkJ
ZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBzdGF0ZW1lbnQuZnJhZ21l
bnRzKCkuZ2V0KDApOworCQlleHByZXNzaW9uID0gZnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsK
KwkJYXNzZXJ0VHJ1ZShleHByZXNzaW9uIGluc3RhbmNlb2YgVHlwZU1ldGhvZFJlZmVyZW5jZSk7
CisJCXR5cGVNZXRob2RSZWZlcmVuY2UgPSAoVHlwZU1ldGhvZFJlZmVyZW5jZSkgZXhwcmVzc2lv
bjsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlTWV0aG9kUmVmZXJlbmNlLCAiWS5ATWFya2VyIFog
IDo6IGZvbyIsIGNvbnRlbnRzKTsKKwkJdHlwZUJpbmRpbmcgPSB0eXBlTWV0aG9kUmVmZXJlbmNl
LnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKHR5cGVCaW5kaW5nKTsKKwkJ
bWV0aG9kQmluZGluZyA9IHR5cGVNZXRob2RSZWZlcmVuY2UucmVzb2x2ZU1ldGhvZEJpbmRpbmco
KTsKKwkJYXNzZXJ0Tm90TnVsbChtZXRob2RCaW5kaW5nKTsKKwkJdHlwZSA9IHR5cGVNZXRob2RS
ZWZlcmVuY2UuZ2V0VHlwZSgpOworCQlhc3NlcnRUcnVlKHR5cGUuaXNRdWFsaWZpZWRUeXBlKCkp
OworCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJZLkBNYXJrZXIgWiIsIGNvbnRlbnRzKTsKKwkJ
dHlwZUFyZ3VtZW50cyA9IHR5cGVNZXRob2RSZWZlcmVuY2UudHlwZUFyZ3VtZW50cygpOworCQlh
c3NlcnRUcnVlKHR5cGVBcmd1bWVudHMuc2l6ZSgpID09IDApOworCQluYW1lID0gdHlwZU1ldGhv
ZFJlZmVyZW5jZS5nZXROYW1lKCk7CisJCWNoZWNrU291cmNlUmFuZ2UobmFtZSwgImZvbyIsIGNv
bnRlbnRzKTsKKwkJdHlwZUJpbmRpbmcgPSBuYW1lLnJlc29sdmVUeXBlQmluZGluZygpOworCQlh
c3NlcnROb3ROdWxsKHR5cGVCaW5kaW5nKTsKKworCQkvLyB0eXBlIG1ldGhvZCByZWZlcmVuY2Ug
d2l0aCBxdWFsaWZpZWQgdHlwZSB3aXRoIHR5cGUgYXJndW1lbnRzCisJCXN0YXRlbWVudCA9IChW
YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBzdGF0ZW1lbnRzLmdldChmQ291bnQrKyk7CisJ
CWZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgc3RhdGVtZW50LmZyYWdt
ZW50cygpLmdldCgwKTsKKwkJZXhwcmVzc2lvbiA9IGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7
CisJCWFzc2VydFRydWUoZXhwcmVzc2lvbiBpbnN0YW5jZW9mIFR5cGVNZXRob2RSZWZlcmVuY2Up
OworCQl0eXBlTWV0aG9kUmVmZXJlbmNlID0gKFR5cGVNZXRob2RSZWZlcmVuY2UpIGV4cHJlc3Np
b247CisJCWNoZWNrU291cmNlUmFuZ2UodHlwZU1ldGhvZFJlZmVyZW5jZSwgIlkuQE1hcmtlciBa
ICA6OiA8U3RyaW5nPiBmb28iLCBjb250ZW50cyk7CisJCXR5cGVCaW5kaW5nID0gdHlwZU1ldGhv
ZFJlZmVyZW5jZS5yZXNvbHZlVHlwZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCh0eXBlQmlu
ZGluZyk7CisJCW1ldGhvZEJpbmRpbmcgPSB0eXBlTWV0aG9kUmVmZXJlbmNlLnJlc29sdmVNZXRo
b2RCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwobWV0aG9kQmluZGluZyk7CisJCXR5cGUgPSB0
eXBlTWV0aG9kUmVmZXJlbmNlLmdldFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZSh0eXBlLmlzUXVhbGlm
aWVkVHlwZSgpKTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiWS5ATWFya2VyIFoiLCBjb250
ZW50cyk7CisJCXR5cGVBcmd1bWVudHMgPSB0eXBlTWV0aG9kUmVmZXJlbmNlLnR5cGVBcmd1bWVu
dHMoKTsKKwkJYXNzZXJ0VHJ1ZSh0eXBlQXJndW1lbnRzLnNpemUoKSA9PSAxKTsKKwkJdHlwZSA9
IChUeXBlKSB0eXBlQXJndW1lbnRzLmdldCgwKTsKKwkJYXNzZXJ0VHJ1ZSh0eXBlLmlzU2ltcGxl
VHlwZSgpKTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiU3RyaW5nIiwgY29udGVudHMpOwor
CQluYW1lID0gdHlwZU1ldGhvZFJlZmVyZW5jZS5nZXROYW1lKCk7CisJCWNoZWNrU291cmNlUmFu
Z2UobmFtZSwgImZvbyIsIGNvbnRlbnRzKTsKKwkJdHlwZUJpbmRpbmcgPSBuYW1lLnJlc29sdmVU
eXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKHR5cGVCaW5kaW5nKTsKKworCQkvLyBjcmVh
dGlvbiBtZXRob2QgcmVmZXJlbmNlCisJCXN0YXRlbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9u
U3RhdGVtZW50KSBzdGF0ZW1lbnRzLmdldChmQ291bnQrKyk7CisJCWZyYWdtZW50ID0gKFZhcmlh
YmxlRGVjbGFyYXRpb25GcmFnbWVudCkgc3RhdGVtZW50LmZyYWdtZW50cygpLmdldCgwKTsKKwkJ
ZXhwcmVzc2lvbiA9IGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CisJCWFzc2VydFRydWUoZXhw
cmVzc2lvbiBpbnN0YW5jZW9mIENyZWF0aW9uUmVmZXJlbmNlKTsKKwkJQ3JlYXRpb25SZWZlcmVu
Y2UgY3JlYXRpb25SZWZlcmVuY2UgPSAoQ3JlYXRpb25SZWZlcmVuY2UpIGV4cHJlc3Npb247CisJ
CWNoZWNrU291cmNlUmFuZ2UoY3JlYXRpb25SZWZlcmVuY2UsICJATWFya2VyIFc8QE1hcmtlciBJ
bnRlZ2VyPiA6OiA8U3RyaW5nPiBuZXcgIiwgY29udGVudHMpOworCQl0eXBlQmluZGluZyA9IGNy
ZWF0aW9uUmVmZXJlbmNlLnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKHR5
cGVCaW5kaW5nKTsKKwkJbWV0aG9kQmluZGluZyA9IGNyZWF0aW9uUmVmZXJlbmNlLnJlc29sdmVN
ZXRob2RCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwobWV0aG9kQmluZGluZyk7CisJCUV4cHJl
c3Npb24gbGhzID0gY3JlYXRpb25SZWZlcmVuY2UuZ2V0RXhwcmVzc2lvbigpOworCQljaGVja1Nv
dXJjZVJhbmdlKGxocywgIkBNYXJrZXIgVzxATWFya2VyIEludGVnZXI+ICIsIGNvbnRlbnRzKTsK
KwkJdHlwZUFyZ3VtZW50cyA9IGNyZWF0aW9uUmVmZXJlbmNlLnR5cGVBcmd1bWVudHMoKTsKKwkJ
YXNzZXJ0VHJ1ZSh0eXBlQXJndW1lbnRzLnNpemUoKSA9PSAxKTsKKwkJdHlwZSA9IChUeXBlKSB0
eXBlQXJndW1lbnRzLmdldCgwKTsKKwkJYXNzZXJ0VHJ1ZSh0eXBlLmlzU2ltcGxlVHlwZSgpKTsK
KwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiU3RyaW5nIiwgY29udGVudHMpOworCisJCS8vIGV4
cHJlc3Npb24gbWV0aG9kIHJlZmVyZW5jZQorCQlzdGF0ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJh
dGlvblN0YXRlbWVudCkgc3RhdGVtZW50cy5nZXQoZkNvdW50KyspOworCQlmcmFnbWVudCA9IChW
YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIHN0YXRlbWVudC5mcmFnbWVudHMoKS5nZXQoMCk7
CisJCWV4cHJlc3Npb24gPSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlhc3NlcnRUcnVl
KGV4cHJlc3Npb24gaW5zdGFuY2VvZiBFeHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlKTsKKwkJRXhw
cmVzc2lvbk1ldGhvZFJlZmVyZW5jZSBleHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlID0gKEV4cHJl
c3Npb25NZXRob2RSZWZlcmVuY2UpIGV4cHJlc3Npb247CisJCWNoZWNrU291cmNlUmFuZ2UoZXhw
cmVzc2lvbk1ldGhvZFJlZmVyZW5jZSwgInkgOjogZm9vIiwgY29udGVudHMpOworCQl0eXBlQmlu
ZGluZyA9IGV4cHJlc3Npb25NZXRob2RSZWZlcmVuY2UucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJ
CWFzc2VydE5vdE51bGwodHlwZUJpbmRpbmcpOworCQltZXRob2RCaW5kaW5nID0gZXhwcmVzc2lv
bk1ldGhvZFJlZmVyZW5jZS5yZXNvbHZlTWV0aG9kQmluZGluZygpOworCQlhc3NlcnROb3ROdWxs
KG1ldGhvZEJpbmRpbmcpOworCQlsaHMgPSBleHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlLmdldEV4
cHJlc3Npb24oKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShsaHMsICJ5IiwgY29udGVudHMpOworCQl0
eXBlQXJndW1lbnRzID0gZXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZS50eXBlQXJndW1lbnRzKCk7
CisJCWFzc2VydFRydWUodHlwZUFyZ3VtZW50cy5zaXplKCkgPT0gMCk7CisJCW5hbWUgPSBleHBy
ZXNzaW9uTWV0aG9kUmVmZXJlbmNlLmdldE5hbWUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShuYW1l
LCAiZm9vIiwgY29udGVudHMpOworCQl0eXBlQmluZGluZyA9IG5hbWUucmVzb2x2ZVR5cGVCaW5k
aW5nKCk7CisJCWFzc2VydE5vdE51bGwodHlwZUJpbmRpbmcpOworCisJCS8vIHN1cGVyIG1ldGhv
ZCByZWZlcmVuY2Ugd2l0aG91dCBxdWFsaWZpZXIKKwkJc3RhdGVtZW50ID0gKFZhcmlhYmxlRGVj
bGFyYXRpb25TdGF0ZW1lbnQpIHN0YXRlbWVudHMuZ2V0KGZDb3VudCsrKTsKKwkJZnJhZ21lbnQg
PSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBzdGF0ZW1lbnQuZnJhZ21lbnRzKCkuZ2V0
KDApOworCQlleHByZXNzaW9uID0gZnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKKwkJYXNzZXJ0
VHJ1ZShleHByZXNzaW9uIGluc3RhbmNlb2YgU3VwZXJNZXRob2RSZWZlcmVuY2UpOworCQlTdXBl
ck1ldGhvZFJlZmVyZW5jZSBzdXBlck1ldGhvZFJlZmVyZW5jZSA9IChTdXBlck1ldGhvZFJlZmVy
ZW5jZSkgZXhwcmVzc2lvbjsKKwkJY2hlY2tTb3VyY2VSYW5nZShzdXBlck1ldGhvZFJlZmVyZW5j
ZSwgInN1cGVyIDo6ICBmb28iLCBjb250ZW50cyk7CisJCXR5cGVCaW5kaW5nID0gc3VwZXJNZXRo
b2RSZWZlcmVuY2UucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwodHlwZUJp
bmRpbmcpOworCQltZXRob2RCaW5kaW5nID0gc3VwZXJNZXRob2RSZWZlcmVuY2UucmVzb2x2ZU1l
dGhvZEJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbChtZXRob2RCaW5kaW5nKTsKKwkJYXNzZXJ0
TnVsbChzdXBlck1ldGhvZFJlZmVyZW5jZS5nZXRRdWFsaWZpZXIoKSk7CQkKKwkJdHlwZUFyZ3Vt
ZW50cyA9IHN1cGVyTWV0aG9kUmVmZXJlbmNlLnR5cGVBcmd1bWVudHMoKTsKKwkJYXNzZXJ0VHJ1
ZSh0eXBlQXJndW1lbnRzLnNpemUoKSA9PSAwKTsKKwkJbmFtZSA9IHN1cGVyTWV0aG9kUmVmZXJl
bmNlLmdldE5hbWUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShuYW1lLCAiZm9vIiwgY29udGVudHMp
OworCQl0eXBlQmluZGluZyA9IG5hbWUucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5v
dE51bGwodHlwZUJpbmRpbmcpOworCisJCS8vIHN1cGVyIG1ldGhvZCByZWZlcmVuY2Ugd2l0aCBx
dWFsaWZpZXIKKwkJVHlwZURlY2xhcmF0aW9uU3RhdGVtZW50IHR5cGVEZWNsYXJhdGlvblN0YXRl
bWVudCA9IChUeXBlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIHN0YXRlbWVudHMuZ2V0KGZDb3VudCk7
CisJCXR5cGVEZWNsYXJhdGlvbiA9IChUeXBlRGVjbGFyYXRpb24pIHR5cGVEZWNsYXJhdGlvblN0
YXRlbWVudC5nZXREZWNsYXJhdGlvbigpOworCQltZXRob2QgPSB0eXBlRGVjbGFyYXRpb24uZ2V0
TWV0aG9kcygpWzBdOworCQlzdGF0ZW1lbnRzID0gbWV0aG9kLmdldEJvZHkoKS5zdGF0ZW1lbnRz
KCk7CisJCWFzc2VydFRydWUoc3RhdGVtZW50cy5zaXplKCkgPT0gMSk7CisJCXN0YXRlbWVudCA9
IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBzdGF0ZW1lbnRzLmdldCgwKTsKKwkJZnJh
Z21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBzdGF0ZW1lbnQuZnJhZ21lbnRz
KCkuZ2V0KDApOworCQlleHByZXNzaW9uID0gZnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKKwkJ
YXNzZXJ0VHJ1ZShleHByZXNzaW9uIGluc3RhbmNlb2YgU3VwZXJNZXRob2RSZWZlcmVuY2UpOwor
CQlzdXBlck1ldGhvZFJlZmVyZW5jZSA9IChTdXBlck1ldGhvZFJlZmVyZW5jZSkgZXhwcmVzc2lv
bjsKKwkJY2hlY2tTb3VyY2VSYW5nZShzdXBlck1ldGhvZFJlZmVyZW5jZSwgIlguc3VwZXIgOjog
Zm9vIiwgY29udGVudHMpOworCQl0eXBlQmluZGluZyA9IHN1cGVyTWV0aG9kUmVmZXJlbmNlLnJl
c29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKHR5cGVCaW5kaW5nKTsKKwkJbWV0
aG9kQmluZGluZyA9IHN1cGVyTWV0aG9kUmVmZXJlbmNlLnJlc29sdmVNZXRob2RCaW5kaW5nKCk7
CisJCWFzc2VydE5vdE51bGwobWV0aG9kQmluZGluZyk7CisJCW5hbWUgPSAoU2ltcGxlTmFtZSkg
c3VwZXJNZXRob2RSZWZlcmVuY2UuZ2V0UXVhbGlmaWVyKCk7CisJCWNoZWNrU291cmNlUmFuZ2Uo
bmFtZSwgIlgiLCBjb250ZW50cyk7CQkKKwkJdHlwZUFyZ3VtZW50cyA9IHN1cGVyTWV0aG9kUmVm
ZXJlbmNlLnR5cGVBcmd1bWVudHMoKTsKKwkJYXNzZXJ0VHJ1ZSh0eXBlQXJndW1lbnRzLnNpemUo
KSA9PSAwKTsKKwkJbmFtZSA9IHN1cGVyTWV0aG9kUmVmZXJlbmNlLmdldE5hbWUoKTsKKwkJY2hl
Y2tTb3VyY2VSYW5nZShuYW1lLCAiZm9vIiwgY29udGVudHMpOworCQl0eXBlQmluZGluZyA9IG5h
bWUucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwodHlwZUJpbmRpbmcpOwor
CQorCX0KKwkKKwkvKioKIAkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1
Zy5jZ2k/aWQ9Mzk5NzkzCiAJICogCiAJICogQHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24KZGlm
ZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUTWF0Y2hlclRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNU
TWF0Y2hlclRlc3QuamF2YQppbmRleCA0ZWM3NzU5Li42NWYyZjU0IDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvZG9tL0FTVE1hdGNoZXJUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RNYXRjaGVyVGVz
dC5qYXZhCkBAIC01MDQsNiArNTA0LDkgQEAKIAkJcHVibGljIGJvb2xlYW4gbWF0Y2goU3VwZXJN
ZXRob2RJbnZvY2F0aW9uIG5vZGUsIE9iamVjdCBvdGhlcikgewogCQkJcmV0dXJuIHN0YW5kYXJk
Qm9keShub2RlLCBvdGhlciwgdGhpcy5zdXBlck1hdGNoID8gc3VwZXIubWF0Y2gobm9kZSwgb3Ro
ZXIpIDogZmFsc2UpOwogCQl9CisJCXB1YmxpYyBib29sZWFuIG1hdGNoKFN1cGVyTWV0aG9kUmVm
ZXJlbmNlIG5vZGUsIE9iamVjdCBvdGhlcikgeworCQkJcmV0dXJuIHN0YW5kYXJkQm9keShub2Rl
LCBvdGhlciwgdGhpcy5zdXBlck1hdGNoID8gc3VwZXIubWF0Y2gobm9kZSwgb3RoZXIpIDogZmFs
c2UpOworCQl9CiAJCXB1YmxpYyBib29sZWFuIG1hdGNoKFN3aXRjaENhc2Ugbm9kZSwgT2JqZWN0
IG90aGVyKSB7CiAJCQlyZXR1cm4gc3RhbmRhcmRCb2R5KG5vZGUsIG90aGVyLCB0aGlzLnN1cGVy
TWF0Y2ggPyBzdXBlci5tYXRjaChub2RlLCBvdGhlcikgOiBmYWxzZSk7CiAJCX0KQEAgLTU2Miw2
ICs1NjUsMTUgQEAKIAkJCXJldHVybiBzdGFuZGFyZEJvZHkobm9kZSwgb3RoZXIsIHRoaXMuc3Vw
ZXJNYXRjaCA/IHN1cGVyLm1hdGNoKG5vZGUsIG90aGVyKSA6IGZhbHNlKTsKIAkJfQogCQlwdWJs
aWMgYm9vbGVhbiBtYXRjaChMYW1iZGFFeHByZXNzaW9uIG5vZGUsIE9iamVjdCBvdGhlcikgewor
CQkJcmV0dXJuIHN0YW5kYXJkQm9keShub2RlLCBvdGhlciwgdGhpcy5zdXBlck1hdGNoID8gc3Vw
ZXIubWF0Y2gobm9kZSwgb3RoZXIpIDogZmFsc2UpOworCQl9CisJCXB1YmxpYyBib29sZWFuIG1h
dGNoKENyZWF0aW9uUmVmZXJlbmNlIG5vZGUsIE9iamVjdCBvdGhlcikgeworCQkJcmV0dXJuIHN0
YW5kYXJkQm9keShub2RlLCBvdGhlciwgdGhpcy5zdXBlck1hdGNoID8gc3VwZXIubWF0Y2gobm9k
ZSwgb3RoZXIpIDogZmFsc2UpOworCQl9CisJCXB1YmxpYyBib29sZWFuIG1hdGNoKEV4cHJlc3Np
b25NZXRob2RSZWZlcmVuY2Ugbm9kZSwgT2JqZWN0IG90aGVyKSB7CisJCQlyZXR1cm4gc3RhbmRh
cmRCb2R5KG5vZGUsIG90aGVyLCB0aGlzLnN1cGVyTWF0Y2ggPyBzdXBlci5tYXRjaChub2RlLCBv
dGhlcikgOiBmYWxzZSk7CisJCX0KKwkJcHVibGljIGJvb2xlYW4gbWF0Y2goVHlwZU1ldGhvZFJl
ZmVyZW5jZSBub2RlLCBPYmplY3Qgb3RoZXIpIHsKIAkJCXJldHVybiBzdGFuZGFyZEJvZHkobm9k
ZSwgb3RoZXIsIHRoaXMuc3VwZXJNYXRjaCA/IHN1cGVyLm1hdGNoKG5vZGUsIG90aGVyKSA6IGZh
bHNlKTsKIAkJfQogCQlwdWJsaWMgYm9vbGVhbiBtYXRjaChJbnRlcnNlY3Rpb25UeXBlIG5vZGUs
IE9iamVjdCBvdGhlcikgewpAQCAtODcwLDYgKzg4MiwxNSBAQAogCQl4MS5zZXRMYWJlbCh0aGlz
Lk4xKTsKIAkJYmFzaWNNYXRjaCh4MSk7CiAJfQorCS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTk3OTQKKwlwdWJsaWMgdm9pZCB0ZXN0Q3JlYXRpb25S
ZWZlcmVuY2UoKSB7CisJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsKKwkJ
CXJldHVybjsKKwkJfQorCQlDcmVhdGlvblJlZmVyZW5jZSB4MSA9IHRoaXMuYXN0Lm5ld0NyZWF0
aW9uUmVmZXJlbmNlKHRoaXMuRTEpOworCQliYXNpY01hdGNoKHgxKTsKKwl9CisJCiAJcHVibGlj
IHZvaWQgdGVzdERvU3RhdGVtZW50KCkgewogCQlEb1N0YXRlbWVudCB4MSA9IHRoaXMuYXN0Lm5l
d0RvU3RhdGVtZW50KCk7CiAJCXgxLnNldEV4cHJlc3Npb24odGhpcy5FMSk7CkBAIC05MjUsNiAr
OTQ2LDE1IEBACiAJCXgxLmJvZHlEZWNsYXJhdGlvbnMoKS5hZGQodGhpcy5GRDIpOwogCQliYXNp
Y01hdGNoKHgxKTsKIAl9CisJLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTM5OTc5NAorCXB1YmxpYyB2b2lkIHRlc3RFeHByZXNzaW9uTWV0aG9kUmVmZXJl
bmNlKCkgeworCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQlyZXR1
cm47CisJCX0KKwkJRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZSB4MSA9IHRoaXMuYXN0Lm5ld0V4
cHJlc3Npb25NZXRob2RSZWZlcmVuY2UodGhpcy5FMSwgdGhpcy5OMSk7CisJCWJhc2ljTWF0Y2go
eDEpOworCX0KKwkKIAlwdWJsaWMgdm9pZCB0ZXN0RXhwcmVzc2lvblN0YXRlbWVudCgpIHsKIAkJ
RXhwcmVzc2lvblN0YXRlbWVudCB4MSA9IHRoaXMuYXN0Lm5ld0V4cHJlc3Npb25TdGF0ZW1lbnQo
dGhpcy5FMSk7CiAJCWJhc2ljTWF0Y2goeDEpOwpAQCAtMTE1NSw2ICsxMTg1LDE0IEBACiAJCXgx
LnNldE5hbWUodGhpcy5OMik7CiAJCXgxLmFyZ3VtZW50cygpLmFkZCh0aGlzLkUxKTsKIAkJeDEu
YXJndW1lbnRzKCkuYWRkKHRoaXMuRTIpOworCQliYXNpY01hdGNoKHgxKTsKKwl9CisJcHVibGlj
IHZvaWQgdGVzdFN1cGVyTWV0aG9kUmVmZXJlbmNlKCkgeworCQlpZiAodGhpcy5hc3QuYXBpTGV2
ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQlyZXR1cm47CisJCX0KKwkJU3VwZXJNZXRob2RSZWZlcmVu
Y2UgeDEgPSB0aGlzLmFzdC5uZXdTdXBlck1ldGhvZFJlZmVyZW5jZSh0aGlzLk4yKTsKKwkJeDEu
c2V0UXVhbGlmaWVyKHRoaXMuTjEpOwogCQliYXNpY01hdGNoKHgxKTsKIAl9CiAJcHVibGljIHZv
aWQgdGVzdFN3aXRjaENhc2UoKSB7CkBAIC0xNTg5LDYgKzE2MjcsMTUgQEAKIAkJYmFzaWNNYXRj
aCh4MSk7CiAJfQogCisJLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTM5OTc5NAorCXB1YmxpYyB2b2lkIHRlc3RUeXBlTWV0aG9kUmVmZXJlbmNlKCkgewor
CQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQlyZXR1cm47CisJCX0K
KwkJVHlwZU1ldGhvZFJlZmVyZW5jZSB4MSA9IHRoaXMuYXN0Lm5ld1R5cGVNZXRob2RSZWZlcmVu
Y2UodGhpcy5UMSwgdGhpcy5OMSk7CisJCWJhc2ljTWF0Y2goeDEpOworCX0KKwkKIAkvLyBodHRw
czovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Mzk5NzkzCiAJcHVibGlj
IHZvaWQgdGVzdExhbWJkYUV4cHJlc3Npb25zMSgpIHsKIAkJaWYgKHRoaXMuYXN0LmFwaUxldmVs
KCkgPCBBU1QuSkxTOCkgewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
bW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RTdHJ1Y3R1cmFsUHJv
cGVydHlUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFN0cnVjdHVyYWxQcm9wZXJ0eVRlc3QuamF2
YQppbmRleCBjMjM2YTBiLi4yYmY0Yjg3IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFN0cnVj
dHVyYWxQcm9wZXJ0eVRlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5t
b2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFN0cnVjdHVyYWxQcm9w
ZXJ0eVRlc3QuamF2YQpAQCAtMzI4LDcgKzMyOCw3IEBACiAJCQkJbWF4Tm9kZVR5cGUgPSA4NDsK
IAkJCQlicmVhazsKIAkJCWNhc2UgQVNULkpMUzg6Ci0JCQkJbWF4Tm9kZVR5cGUgPSA4ODsKKwkJ
CQltYXhOb2RlVHlwZSA9IDkyOwogCQkJCWJyZWFrOwogCQkJZGVmYXVsdDoKIAkJCQlmYWlsKCk7
CkBAIC0zNzIsNyArMzcyLDcgQEAKIAkJCQkvLyBvb3BzIC0gZ3Vlc3MgdGhhdCdzIG5vdCB2YWxp
ZAogCQkJfQogCQl9Ci0JCWFzc2VydEVxdWFscygiV3JvbmcgbGFzdCBrbm93biB0eXBlIiwgODgs
IGhpKTsgLy8gbGFzdCBrbm93biBvbmUKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBsYXN0IGtub3du
IHR5cGUiLCA5MiwgaGkpOyAvLyBsYXN0IGtub3duIG9uZQogCQlhc3NlcnRFcXVhbHMoIldyb25n
IG51bWJlciBvZiBkaXN0aW5jdCB0eXBlcyIsICBoaSwgY2xhc3Nlcy5zaXplKCkpOyAvLyBhbGwg
Y2xhc3NlcyBhcmUgZGlzdGluY3QKIAl9CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFRl
c3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUVGVzdC5qYXZhCmluZGV4IDUyYzhkZDIuLjZlYjMwYTkg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNU
VGVzdC5qYXZhCkBAIC04Nzg1LDYgKzg3ODUsMTAgQEAKIAkJCUFTVE5vZGUuTEFNQkRBX0VYUFJF
U1NJT04sCiAJCQlBU1ROb2RlLklOVEVSU0VDVElPTl9UWVBFLAogCQkJQVNUTm9kZS5QQUNLQUdF
X1FVQUxJRklFRF9UWVBFLAorCQkJQVNUTm9kZS5DUkVBVElPTl9SRUZFUkVOQ0UsCisJCQlBU1RO
b2RlLkVYUFJFU1NJT05fTUVUSE9EX1JFRkVSRU5DRSwKKwkJCUFTVE5vZGUuU1VQRVJfTUVUSE9E
X1JFRkVSRU5DRSwKKwkJCUFTVE5vZGUuVFlQRV9NRVRIT0RfUkVGRVJFTkNFCiAJCX07CiAJCQog
CQkvLyBhc3NlcnQgdGhhdCBub2RlVHlwZSB2YWx1ZXMgYXJlIGNvcnJlY3Q6CmRpZmYgLS1naXQg
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvZG9tL0FTVFZpc2l0b3JUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFZpc2l0b3JU
ZXN0LmphdmEKaW5kZXggZmYwZGIzYS4uNDk2MWMwOSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9B
U1RWaXNpdG9yVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVs
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUVmlzaXRvclRlc3QuamF2YQpA
QCAtNzEyLDYgKzcxMiwyMiBAQAogCQkJQVNUVmlzaXRvclRlc3QudGhpcy5iLmFwcGVuZCgiKi8p
Iik7IC8vJE5PTi1OTFMtMSQKIAkJfQogCisJCXB1YmxpYyBib29sZWFuIHZpc2l0KENyZWF0aW9u
UmVmZXJlbmNlIG5vZGUpIHsKKwkJCUFTVFZpc2l0b3JUZXN0LnRoaXMuYi5hcHBlbmQoIihlQ1Ii
KTsgLy8kTk9OLU5MUy0xJAorCQkJcmV0dXJuIGlzVmlzaXRpbmdDaGlsZHJlbigpOworCQl9CisJ
CXB1YmxpYyB2b2lkIGVuZFZpc2l0KENyZWF0aW9uUmVmZXJlbmNlIG5vZGUpIHsKKwkJCUFTVFZp
c2l0b3JUZXN0LnRoaXMuYi5hcHBlbmQoImVDUikiKTsgLy8kTk9OLU5MUy0xJAorCQl9CisKKwkJ
cHVibGljIGJvb2xlYW4gdmlzaXQoRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZSBub2RlKSB7CisJ
CQlBU1RWaXNpdG9yVGVzdC50aGlzLmIuYXBwZW5kKCIoZUVNUiIpOyAvLyROT04tTkxTLTEkCisJ
CQlyZXR1cm4gaXNWaXNpdGluZ0NoaWxkcmVuKCk7CisJCX0KKwkJcHVibGljIHZvaWQgZW5kVmlz
aXQoRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZSBub2RlKSB7CisJCQlBU1RWaXNpdG9yVGVzdC50
aGlzLmIuYXBwZW5kKCJlRU1SKSIpOyAvLyROT04tTkxTLTEkCisJCX0KKwogCQlwdWJsaWMgYm9v
bGVhbiB2aXNpdChMaW5lQ29tbWVudCBub2RlKSB7CiAJCQlBU1RWaXNpdG9yVGVzdC50aGlzLmIu
YXBwZW5kKCIoLy8iKTsgLy8kTk9OLU5MUy0xJAogCQkJcmV0dXJuIGlzVmlzaXRpbmdDaGlsZHJl
bigpOwpAQCAtODkyLDYgKzkwOCwxNCBAQAogCQkJQVNUVmlzaXRvclRlc3QudGhpcy5iLmFwcGVu
ZCgiZVNNKSIpOyAvLyROT04tTkxTLTEkCiAJCX0KIAorCQlwdWJsaWMgYm9vbGVhbiB2aXNpdChT
dXBlck1ldGhvZFJlZmVyZW5jZSBub2RlKSB7CisJCQlBU1RWaXNpdG9yVGVzdC50aGlzLmIuYXBw
ZW5kKCIoZVNNUiIpOyAvLyROT04tTkxTLTEkCisJCQlyZXR1cm4gaXNWaXNpdGluZ0NoaWxkcmVu
KCk7CisJCX0KKwkJcHVibGljIHZvaWQgZW5kVmlzaXQoU3VwZXJNZXRob2RSZWZlcmVuY2Ugbm9k
ZSkgeworCQkJQVNUVmlzaXRvclRlc3QudGhpcy5iLmFwcGVuZCgiZVNNUikiKTsgLy8kTk9OLU5M
Uy0xJAorCQl9CisKIAkJcHVibGljIGJvb2xlYW4gdmlzaXQoU3dpdGNoQ2FzZSBub2RlKSB7CiAJ
CQlBU1RWaXNpdG9yVGVzdC50aGlzLmIuYXBwZW5kKCIoc1NDIik7IC8vJE5PTi1OTFMtMSQKIAkJ
CXJldHVybiBpc1Zpc2l0aW5nQ2hpbGRyZW4oKTsKQEAgLTk2Miw2ICs5ODYsMTQgQEAKIAkJfQog
CQlwdWJsaWMgdm9pZCBlbmRWaXNpdChUeXBlTGl0ZXJhbCBub2RlKSB7CiAJCQlBU1RWaXNpdG9y
VGVzdC50aGlzLmIuYXBwZW5kKCJlVEwpIik7IC8vJE5PTi1OTFMtMSQKKwkJfQorCisJCXB1Ymxp
YyBib29sZWFuIHZpc2l0KFR5cGVNZXRob2RSZWZlcmVuY2Ugbm9kZSkgeworCQkJQVNUVmlzaXRv
clRlc3QudGhpcy5iLmFwcGVuZCgiKGVUTVIiKTsgLy8kTk9OLU5MUy0xJAorCQkJcmV0dXJuIGlz
VmlzaXRpbmdDaGlsZHJlbigpOworCQl9CisJCXB1YmxpYyB2b2lkIGVuZFZpc2l0KFR5cGVNZXRo
b2RSZWZlcmVuY2Ugbm9kZSkgeworCQkJQVNUVmlzaXRvclRlc3QudGhpcy5iLmFwcGVuZCgiZVRN
UikiKTsgLy8kTk9OLU5MUy0xJAogCQl9CiAKIAkJcHVibGljIGJvb2xlYW4gdmlzaXQoVHlwZVBh
cmFtZXRlciBub2RlKSB7CkBAIC0xNDE2LDYgKzE0NDgsMTggQEAKIAkJU3RyaW5nIHJlc3VsdCA9
IHRoaXMuYi50b1N0cmluZygpOwogCQlhc3NlcnRUcnVlKHJlc3VsdC5lcXVhbHMoIlsoc0NOIit0
aGlzLk4xUysic0NOKV0iKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAogCX0KKworCXB1
YmxpYyB2b2lkIHRlc3RDcmVhdGlvblJlZmVyZW5jZSgpIHsKKwkJaWYgKHRoaXMuYXN0LmFwaUxl
dmVsKCkgPCBBU1QuSkxTOCkKKwkJCXJldHVybjsKKwkJQ3JlYXRpb25SZWZlcmVuY2UgeDEgPSB0
aGlzLmFzdC5uZXdDcmVhdGlvblJlZmVyZW5jZSh0aGlzLkUxKTsKKwkJVGVzdFZpc2l0b3IgdjEg
PSBuZXcgVGVzdFZpc2l0b3IoKTsKKwkJdGhpcy5iLnNldExlbmd0aCgwKTsKKwkJeDEuYWNjZXB0
KHYxKTsKKwkJU3RyaW5nIHJlc3VsdCA9IHRoaXMuYi50b1N0cmluZygpOworCQlhc3NlcnRUcnVl
KHJlc3VsdC5lcXVhbHMoIlsoZUNSIit0aGlzLkUxUysiZUNSKV0iKSk7IC8vJE5PTi1OTFMtMSQg
Ly8kTk9OLU5MUy0yJAorCX0KKwogCXB1YmxpYyB2b2lkIHRlc3REb1N0YXRlbWVudCgpIHsKIAkJ
RG9TdGF0ZW1lbnQgeDEgPSB0aGlzLmFzdC5uZXdEb1N0YXRlbWVudCgpOwogCQl4MS5zZXRFeHBy
ZXNzaW9uKHRoaXMuRTEpOwpAQCAtMTQ3Niw2ICsxNTIwLDE3IEBACiAJCVN0cmluZyByZXN1bHQg
PSB0aGlzLmIudG9TdHJpbmcoKTsKIAkJYXNzZXJ0VHJ1ZShyZXN1bHQuZXF1YWxzKCJbKEVEIit0
aGlzLkpEMVMrdGhpcy5NT0QxUyt0aGlzLk1PRDJTK3RoaXMuTjFTK3RoaXMuVDFTK3RoaXMuVDJT
K3RoaXMuRUMxUyt0aGlzLkVDMlMrdGhpcy5GRDFTK3RoaXMuRkQyUysiRUQpXSIpKTsgLy8kTk9O
LU5MUy0xJCAvLyROT04tTkxTLTIkCiAJfQorCXB1YmxpYyB2b2lkIHRlc3RFeHByZXNzaW9uTWV0
aG9kUmVmZXJlbmNlKCkgeworCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KQor
CQkJcmV0dXJuOworCQlFeHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlIHgxID0gdGhpcy5hc3QubmV3
RXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZSh0aGlzLkUxLCB0aGlzLk4xKTsKKwkJVGVzdFZpc2l0
b3IgdjEgPSBuZXcgVGVzdFZpc2l0b3IoKTsKKwkJdGhpcy5iLnNldExlbmd0aCgwKTsKKwkJeDEu
YWNjZXB0KHYxKTsKKwkJU3RyaW5nIHJlc3VsdCA9IHRoaXMuYi50b1N0cmluZygpOworCQlhc3Nl
cnRUcnVlKHJlc3VsdC5lcXVhbHMoIlsoZUVNUiIrdGhpcy5FMVMrdGhpcy5OMVMrImVFTVIpXSIp
KTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJfQorCiAJcHVibGljIHZvaWQgdGVzdEV4
cHJlc3Npb25TdGF0ZW1lbnQoKSB7CiAJCUV4cHJlc3Npb25TdGF0ZW1lbnQgeDEgPSB0aGlzLmFz
dC5uZXdFeHByZXNzaW9uU3RhdGVtZW50KHRoaXMuRTEpOwogCQlUZXN0VmlzaXRvciB2MSA9IG5l
dyBUZXN0VmlzaXRvcigpOwpAQCAtMjAwOSw2ICsyMDY0LDE4IEBACiAJCQlhc3NlcnRUcnVlKHJl
c3VsdC5lcXVhbHMoIlsoZVNNIit0aGlzLk4xUyt0aGlzLlBUMVMrdGhpcy5OMlMrdGhpcy5FMVMr
dGhpcy5FMlMrImVTTSldIikpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKIAkJfQogCX0K
KwlwdWJsaWMgdm9pZCB0ZXN0U3VwZXJNZXRob2RSZWZlcmVuY2UoKSB7CisJCWlmICh0aGlzLmFz
dC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsKKwkJCXJldHVybjsKKwkJfQorCQlTdXBlck1ldGhv
ZFJlZmVyZW5jZSB4MSA9IHRoaXMuYXN0Lm5ld1N1cGVyTWV0aG9kUmVmZXJlbmNlKHRoaXMuTjIp
OworCQl4MS5zZXRRdWFsaWZpZXIodGhpcy5OMSk7CisJCVRlc3RWaXNpdG9yIHYxID0gbmV3IFRl
c3RWaXNpdG9yKCk7CisJCXRoaXMuYi5zZXRMZW5ndGgoMCk7CisJCXgxLmFjY2VwdCh2MSk7CisJ
CVN0cmluZyByZXN1bHQgPSB0aGlzLmIudG9TdHJpbmcoKTsKKwkJYXNzZXJ0VHJ1ZShyZXN1bHQu
ZXF1YWxzKCJbKGVTTVIiK3RoaXMuTjFTK3RoaXMuTjJTKyJlU01SKV0iKSk7IC8vJE5PTi1OTFMt
MSQgLy8kTk9OLU5MUy0yJAorCX0KIAlwdWJsaWMgdm9pZCB0ZXN0U3dpdGNoQ2FzZSgpIHsKIAkJ
U3dpdGNoQ2FzZSB4MSA9IHRoaXMuYXN0Lm5ld1N3aXRjaENhc2UoKTsKIAkJeDEuc2V0RXhwcmVz
c2lvbih0aGlzLkUxKTsKQEAgLTIxNTUsNiArMjIyMiwxNyBAQAogCQlTdHJpbmcgcmVzdWx0ID0g
dGhpcy5iLnRvU3RyaW5nKCk7CiAJCWFzc2VydFRydWUocmVzdWx0LmVxdWFscygiWyhlVEwiK3Ro
aXMuVDFTKyJlVEwpXSIpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCiAJfQorCXB1Ymxp
YyB2b2lkIHRlc3RUeXBlTWV0aG9kUmVmZXJlbmNlKCkgeworCQlpZiAodGhpcy5hc3QuYXBpTGV2
ZWwoKSA8IEFTVC5KTFM4KQorCQkJcmV0dXJuOworCQlUeXBlTWV0aG9kUmVmZXJlbmNlIHgxID0g
dGhpcy5hc3QubmV3VHlwZU1ldGhvZFJlZmVyZW5jZSh0aGlzLlQxLCB0aGlzLk4xKTsKKwkJVGVz
dFZpc2l0b3IgdjEgPSBuZXcgVGVzdFZpc2l0b3IoKTsKKwkJdGhpcy5iLnNldExlbmd0aCgwKTsK
KwkJeDEuYWNjZXB0KHYxKTsKKwkJU3RyaW5nIHJlc3VsdCA9IHRoaXMuYi50b1N0cmluZygpOwor
CQlhc3NlcnRUcnVlKHJlc3VsdC5lcXVhbHMoIlsoZVRNUiIrdGhpcy5UMVMrdGhpcy5OMVMrImVU
TVIpXSIpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJfQorCiAJLyoqIEBkZXByZWNh
dGVkIHVzaW5nIGRlcHJlY2F0ZWQgY29kZSAqLwogCXB1YmxpYyB2b2lkIHRlc3RTaW5nbGVWYXJp
YWJsZURlY2xhcmF0aW9uKCkgewogCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIHgxID0gdGhp
cy5hc3QubmV3U2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbigpOwpkaWZmIC0tZ2l0IGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1QuamF2YSBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNULmphdmEK
aW5kZXggNjYwMjAxZS4uODZhZTc5MSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
ZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVC5qYXZhCkBAIC0xMzQ2LDYg
KzEzNDYsMjAgQEAKIAl9CiAKIAkvKioKKwkgKiBDcmVhdGVzIGFuIHVucGFyZW50ZWQgY3JlYXRp
b24gcmVmZXJlbmNlIG5vZGUgb3duZWQgYnkgdGhpcyBBU1QuCisJICogCisJICogQHBhcmFtIGV4
cHJlc3Npb24gZXhwcmVzc2lvbiBmb3IgdGhlIGxlZnQgaGFuZCBzaWRlIG9mIENyZWF0aW9uUmVm
ZXJlbmNlCisJICogQHJldHVybiBhIG5ldyB1bnBhcmVudGVkIHJlZmVyZW5jZSBleHByZXNzaW9u
IG5vZGUKKwkgKiBAZXhjZXB0aW9uIFVuc3VwcG9ydGVkT3BlcmF0aW9uRXhjZXB0aW9uIGlmIHRo
aXMgb3BlcmF0aW9uIGlzIHVzZWQgaW4gYSBKTFMyLCBKTFMzIG9yIEpMUzQgQVNUCisJICogQHNp
bmNlIDMuOSBCRVRBX0pBVkE4CisJICovCisJcHVibGljIENyZWF0aW9uUmVmZXJlbmNlIG5ld0Ny
ZWF0aW9uUmVmZXJlbmNlKEV4cHJlc3Npb24gZXhwcmVzc2lvbikgeworCQlDcmVhdGlvblJlZmVy
ZW5jZSByZXN1bHQgPSBuZXcgQ3JlYXRpb25SZWZlcmVuY2UodGhpcyk7CisJCXJlc3VsdC5zZXRF
eHByZXNzaW9uKGV4cHJlc3Npb24pOworCQlyZXR1cm4gcmVzdWx0OworCX0KKworCS8qKgogCSAq
IENyZWF0ZXMgYSBuZXcgdW5wYXJlbnRlZCBkbyBzdGF0ZW1lbnQgbm9kZSBvd25lZCBieSB0aGlz
IEFTVC4KIAkgKiBCeSBkZWZhdWx0LCB0aGUgZXhwcmVzc2lvbiBpcyB1bnNwZWNpZmllZCAoYnV0
IGxlZ2FsKSwgYW5kCiAJICogdGhlIGJvZHkgc3RhdGVtZW50IGlzIGFuIGVtcHR5IGJsb2NrLgpA
QCAtMTQwOSw2ICsxNDIzLDIyIEBACiAJICovCiAJcHVibGljIEVudW1EZWNsYXJhdGlvbiBuZXdF
bnVtRGVjbGFyYXRpb24oKSB7CiAJCUVudW1EZWNsYXJhdGlvbiByZXN1bHQgPSBuZXcgRW51bURl
Y2xhcmF0aW9uKHRoaXMpOworCQlyZXR1cm4gcmVzdWx0OworCX0KKworCS8qKgorCSAqIENyZWF0
ZXMgYW4gdW5wYXJlbnRlZCBleHByZXNzaW9uIG1ldGhvZCByZWZlcmVuY2Ugbm9kZSBvd25lZCBi
eSB0aGlzIEFTVC4KKwkgKiAKKwkgKiBAcGFyYW0gZXhwcmVzc2lvbiBleHByZXNzaW9uIGZvciB0
aGUgbGVmdCBoYW5kIHNpZGUgb2YgRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZQorCSAqIEBwYXJh
bSBuYW1lIG5hbWUgb2YgdGhlIG1ldGhvZCBpbiB0aGUgRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5j
ZQorCSAqIEByZXR1cm4gYSBuZXcgdW5wYXJlbnRlZCByZWZlcmVuY2UgZXhwcmVzc2lvbiBub2Rl
CisJICogQGV4Y2VwdGlvbiBVbnN1cHBvcnRlZE9wZXJhdGlvbkV4Y2VwdGlvbiBpZiB0aGlzIG9w
ZXJhdGlvbiBpcyB1c2VkIGluIGEgSkxTMiwgSkxTMyBvciBKTFM0IEFTVAorCSAqIEBzaW5jZSAz
LjkgQkVUQV9KQVZBOAorCSAqLworCXB1YmxpYyBFeHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlIG5l
d0V4cHJlc3Npb25NZXRob2RSZWZlcmVuY2UoRXhwcmVzc2lvbiBleHByZXNzaW9uLCBTaW1wbGVO
YW1lIG5hbWUpIHsKKwkJRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZSByZXN1bHQgPSBuZXcgRXhw
cmVzc2lvbk1ldGhvZFJlZmVyZW5jZSh0aGlzKTsKKwkJcmVzdWx0LnNldEV4cHJlc3Npb24oZXhw
cmVzc2lvbik7CisJCXJlc3VsdC5zZXROYW1lKG5hbWUpOwogCQlyZXR1cm4gcmVzdWx0OwogCX0K
IApAQCAtMjI0NCw2ICsyMjc0LDIxIEBACiAJfQogCiAJLyoqCisJICogQ3JlYXRlcyBhbmQgcmV0
dXJucyBhIG5ldyB1bnBhcmVudGVkIHN1cGVyIG1ldGhvZCByZWZlcmVuY2Ugbm9kZQorCSAqIG93
bmVkIGJ5IHRoaXMgQVNULiBCeSBkZWZhdWx0LCB0aGUgZXhwcmVzc2lvbiBhbmQgZmllbGQgYXJl
IGJvdGgKKwkgKiB1bnNwZWNpZmllZCwgYnV0IGxlZ2FsLCBuYW1lcy4KKwkgKgorCSAqIEBwYXJh
bSBuYW1lIG5hbWUgb2YgdGhlIG1ldGhvZCByZWZlcmVuY2VkCisJICogQHJldHVybiBhIG5ldyB1
bnBhcmVudGVkIHN1cGVyIG1ldGhvZCByZWZlcmVuY2Ugbm9kZQorCSAqIEBzaW5jZSAzLjkgQkVU
QV9KQVZBOAorCSAqLworCXB1YmxpYyBTdXBlck1ldGhvZFJlZmVyZW5jZSBuZXdTdXBlck1ldGhv
ZFJlZmVyZW5jZShTaW1wbGVOYW1lIG5hbWUpIHsKKwkJU3VwZXJNZXRob2RSZWZlcmVuY2UgcmVz
dWx0ID0gbmV3IFN1cGVyTWV0aG9kUmVmZXJlbmNlKHRoaXMpOworCQlyZXN1bHQuc2V0TmFtZShu
YW1lKTsKKwkJcmV0dXJuIHJlc3VsdDsKKwl9CisKKwkvKioKIAkgKiBDcmVhdGVzIGEgbmV3IHVu
cGFyZW50ZWQgc3dpdGNoIGNhc2Ugc3RhdGVtZW50IG5vZGUgb3duZWQgYnkKIAkgKiB0aGlzIEFT
VC4gQnkgZGVmYXVsdCwgdGhlIGV4cHJlc3Npb24gaXMgdW5zcGVjaWZpZWQsIGJ1dCBsZWdhbC4K
IAkgKgpAQCAtMjQyNCw2ICsyNDY5LDIyIEBACiAJfQogCiAJLyoqCisJICogQ3JlYXRlcyBhbiB1
bnBhcmVudGVkIFR5cGUgbWV0aG9kIHJlZmVyZW5jZSBub2RlIG93bmVkIGJ5IHRoaXMgQVNULgor
CSAqIAorCSAqIEBwYXJhbSB0eXBlIHR5cGUgZm9yIHRoZSBsZWZ0IGhhbmQgc2lkZSBvZiBUeXBl
TWV0aG9kUmVmZXJlbmNlCisJICogQHBhcmFtIG5hbWUgbmFtZSBvZiB0aGUgbWV0aG9kIGluIHRo
ZSBUeXBlTWV0aG9kUmVmZXJlbmNlCisJICogQHJldHVybiBhIG5ldyB1bnBhcmVudGVkIHR5cGUg
bWV0aG9kIHJlZmVyZW5jZSBub2RlCisJICogQGV4Y2VwdGlvbiBVbnN1cHBvcnRlZE9wZXJhdGlv
bkV4Y2VwdGlvbiBpZiB0aGlzIG9wZXJhdGlvbiBpcyB1c2VkIGluIGEgSkxTMiwgSkxTMyBvciBK
TFM0IEFTVAorCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAorCSAqLworCXB1YmxpYyBUeXBlTWV0
aG9kUmVmZXJlbmNlIG5ld1R5cGVNZXRob2RSZWZlcmVuY2UoVHlwZSB0eXBlLCBTaW1wbGVOYW1l
IG5hbWUpIHsKKwkJVHlwZU1ldGhvZFJlZmVyZW5jZSByZXN1bHQgPSBuZXcgVHlwZU1ldGhvZFJl
ZmVyZW5jZSh0aGlzKTsKKwkJcmVzdWx0LnNldFR5cGUodHlwZSk7CisJCXJlc3VsdC5zZXROYW1l
KG5hbWUpOworCQlyZXR1cm4gcmVzdWx0OworCX0KKworCS8qKgogCSAqIENyZWF0ZXMgYW5kIHJl
dHVybnMgYSBuZXcgdW5wYXJlbnRlZCB0eXBlIHBhcmFtZXRlciB0eXBlIG5vZGUgd2l0aCBhbgog
CSAqIHVuc3BlY2lmaWVkIHR5cGUgdmFyaWFibGUgbmFtZSBhbmQgYW4gZW1wdHkgbGlzdCBvZiB0
eXBlIGJvdW5kcy4KIAkgKgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIuamF2YSBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUQ29udmVydGVyLmphdmEKaW5k
ZXggMmU0ODIyMS4uN2I0ZDMzMSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9t
L29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIuamF2YQorKysgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVENvbnZlcnRlci5q
YXZhCkBAIC00NiwxMSArNDYsMTMgQEAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuYXN0LlBhcmFtZXRlcml6ZWRRdWFsaWZpZWRUeXBlUmVmZXJlbmNlOwogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuUGFyYW1ldGVyaXplZFNpbmds
ZVR5cGVSZWZlcmVuY2U7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LmFzdC5RdWFsaWZpZWRBbGxvY2F0aW9uRXhwcmVzc2lvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlF1YWxpZmllZFN1cGVyUmVmZXJlbmNlOwogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuUXVhbGlmaWVkVHlwZVJlZmVy
ZW5jZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlJlY2Vp
dmVyOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuU2luZ2xl
TmFtZVJlZmVyZW5jZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
YXN0LlNpbmdsZVR5cGVSZWZlcmVuY2U7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmFzdC5TdHJpbmdMaXRlcmFsQ29uY2F0ZW5hdGlvbjsKK2ltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlN1cGVyUmVmZXJlbmNlOwogaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuVHlwZVJlZmVyZW5jZTsKIGltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlVuaW9uVHlwZVJlZmVyZW5j
ZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LldpbGRjYXJk
OwpAQCAtMTc2MSw2ICsxNzYzLDkgQEAKIAkJaWYgKGV4cHJlc3Npb24gaW5zdGFuY2VvZiBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkxhbWJkYUV4cHJlc3Npb24pIHsKIAkJ
CXJldHVybiBjb252ZXJ0KChvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0Lkxh
bWJkYUV4cHJlc3Npb24pIGV4cHJlc3Npb24pOwogCQl9CisJCWlmIChleHByZXNzaW9uIGluc3Rh
bmNlb2Ygb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5SZWZlcmVuY2VFeHBy
ZXNzaW9uKSB7CisJCQlyZXR1cm4gY29udmVydCgob3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmFzdC5SZWZlcmVuY2VFeHByZXNzaW9uKSBleHByZXNzaW9uKTsKKwkJfQogCQlyZXR1
cm4gbnVsbDsKIAl9CiAKQEAgLTI1MzIsNiArMjUzNyw3OCBAQAogCQkJcmV0dXJuIGNvbnZlcnQo
KG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuRmllbGRSZWZlcmVuY2UpIHJl
ZmVyZW5jZSk7CiAJCX0KIAkJcmV0dXJuIG51bGw7IC8vIGNhbm5vdCBiZSByZWFjaGVkCisJfQor
CisJcHVibGljIEV4cHJlc3Npb24gY29udmVydChvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIuYXN0LlJlZmVyZW5jZUV4cHJlc3Npb24gcmVmZXJlbmNlKSB7CisJCWlmICh0aGlzLmFz
dC5hcGlMZXZlbCA8IEFTVC5KTFM4KSB7CisJCQlpZiAodGhpcy5yZWZlcmVuY2VDb250ZXh0ICE9
IG51bGwpIHsKKwkJCQl0aGlzLnJlZmVyZW5jZUNvbnRleHQuc2V0RmxhZ3ModGhpcy5yZWZlcmVu
Y2VDb250ZXh0LmdldEZsYWdzKCkgfCBBU1ROb2RlLk1BTEZPUk1FRCk7CisJCQl9CisJCQlOdWxs
TGl0ZXJhbCBudWxsTGl0ZXJhbCA9IG5ldyBOdWxsTGl0ZXJhbCh0aGlzLmFzdCk7CisJCQludWxs
TGl0ZXJhbC5zZXRGbGFncyhudWxsTGl0ZXJhbC5nZXRGbGFncygpIHwgQVNUTm9kZS5NQUxGT1JN
RUQpOworCQkJbnVsbExpdGVyYWwuc2V0U291cmNlUmFuZ2UocmVmZXJlbmNlLnNvdXJjZVN0YXJ0
LCByZWZlcmVuY2Uuc291cmNlRW5kIC0gcmVmZXJlbmNlLnNvdXJjZVN0YXJ0ICsgMSk7CisJCQly
ZXR1cm4gbnVsbExpdGVyYWw7CQkKKwkJfQorCQlFeHByZXNzaW9uIHJlc3VsdCA9IG51bGw7CisJ
CW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuRXhwcmVzc2lvbiBsaHMgPSBy
ZWZlcmVuY2UubGhzOworCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlR5
cGVSZWZlcmVuY2VbXSBhcmd1bWVudHMgPSByZWZlcmVuY2UudHlwZUFyZ3VtZW50czsKKwkJaW50
IHN0YXJ0ID0gYXJndW1lbnRzICE9IG51bGwgJiYgYXJndW1lbnRzLmxlbmd0aCA+IDAgPyBhcmd1
bWVudHNbYXJndW1lbnRzLmxlbmd0aCAtIDFdLnNvdXJjZUVuZCArIDEgOiByZWZlcmVuY2UubGhz
LnNvdXJjZUVuZCArIDE7CisJCWZpbmFsIFNpbXBsZU5hbWUgbmFtZSA9IG5ldyBTaW1wbGVOYW1l
KHRoaXMuYXN0KTsKKwkJcmV0cmlldmVJZGVudGlmaWVyQW5kU2V0UG9zaXRpb25zKHN0YXJ0LCBy
ZWZlcmVuY2Uuc291cmNlRW5kLCBuYW1lKTsKKwkJbmFtZS5pbnRlcm5hbFNldElkZW50aWZpZXIo
bmV3IFN0cmluZyhyZWZlcmVuY2Uuc2VsZWN0b3IpKTsKKwkJaWYgKHRoaXMucmVzb2x2ZUJpbmRp
bmdzKSB7CisJCQlyZWNvcmROb2RlcyhuYW1lLCByZWZlcmVuY2UpOworCQl9CisJCUxpc3QgdHlw
ZUFyZ3VtZW50cyA9IG51bGw7CisJCWlmIChuYW1lLmdldFN0YXJ0UG9zaXRpb24oKSA8IHN0YXJ0
KSB7Ly8gY2hlY2sgZm9yIG5ldyAKKwkJCXJldHJpZXZlSW5pdEFuZFNldFBvc2l0aW9ucyhzdGFy
dCwgcmVmZXJlbmNlLnNvdXJjZUVuZCwgbmFtZSk7CisJCQlpZiAoIW5hbWUuZ2V0SWRlbnRpZmll
cigpLmVxdWFscygiPGluaXQ+IikpIHsgLy8kTk9OLU5MUy0xJAorCQkJCU51bGxMaXRlcmFsIG51
bGxMaXRlcmFsID0gbmV3IE51bGxMaXRlcmFsKHRoaXMuYXN0KTsKKwkJCQludWxsTGl0ZXJhbC5z
ZXRGbGFncyhudWxsTGl0ZXJhbC5nZXRGbGFncygpIHwgQVNUTm9kZS5NQUxGT1JNRUQpOworCQkJ
CXJlc3VsdCA9IG51bGxMaXRlcmFsOworCQkJfSBlbHNlIHsKKwkJCQlDcmVhdGlvblJlZmVyZW5j
ZSBjcmVhdGlvblJlZmVyZW5jZSA9IG5ldyBDcmVhdGlvblJlZmVyZW5jZSh0aGlzLmFzdCk7CisJ
CQkJY3JlYXRpb25SZWZlcmVuY2Uuc2V0RXhwcmVzc2lvbihjb252ZXJ0KGxocykpOworCQkJCXR5
cGVBcmd1bWVudHMgPSBjcmVhdGlvblJlZmVyZW5jZS50eXBlQXJndW1lbnRzKCk7CisJCQkJcmVz
dWx0ID0gY3JlYXRpb25SZWZlcmVuY2U7CisJCQl9CisJCX0gZWxzZSBpZiAobGhzIGluc3RhbmNl
b2YgVHlwZVJlZmVyZW5jZSkgeworCQkJVHlwZU1ldGhvZFJlZmVyZW5jZSB0eXBlTWV0aG9kUmVm
ZXJlbmNlID0gbmV3IFR5cGVNZXRob2RSZWZlcmVuY2UodGhpcy5hc3QpOworCQkJdHlwZU1ldGhv
ZFJlZmVyZW5jZS5zZXRUeXBlKGNvbnZlcnRUeXBlKChUeXBlUmVmZXJlbmNlKSBsaHMpKTsKKwkJ
CXR5cGVNZXRob2RSZWZlcmVuY2Uuc2V0TmFtZShuYW1lKTsKKwkJCXR5cGVBcmd1bWVudHMgPSB0
eXBlTWV0aG9kUmVmZXJlbmNlLnR5cGVBcmd1bWVudHMoKTsKKwkJCXJlc3VsdCA9IHR5cGVNZXRo
b2RSZWZlcmVuY2U7CisJCX0gZWxzZSBpZiAobGhzIGluc3RhbmNlb2YgU3VwZXJSZWZlcmVuY2Up
IHsKKwkJCVN1cGVyTWV0aG9kUmVmZXJlbmNlIHN1cGVyTWV0aG9kUmVmZXJlbmNlID0gbmV3IFN1
cGVyTWV0aG9kUmVmZXJlbmNlKHRoaXMuYXN0KTsKKwkJCXN1cGVyTWV0aG9kUmVmZXJlbmNlLnNl
dE5hbWUobmFtZSk7CisJCQl0eXBlQXJndW1lbnRzID0gc3VwZXJNZXRob2RSZWZlcmVuY2UudHlw
ZUFyZ3VtZW50cygpOworCQkJcmVzdWx0ID0gc3VwZXJNZXRob2RSZWZlcmVuY2U7CisJCX0gZWxz
ZSBpZiAobGhzIGluc3RhbmNlb2YgUXVhbGlmaWVkU3VwZXJSZWZlcmVuY2UpIHsKKwkJCVN1cGVy
TWV0aG9kUmVmZXJlbmNlIHN1cGVyTWV0aG9kUmVmZXJlbmNlID0gbmV3IFN1cGVyTWV0aG9kUmVm
ZXJlbmNlKHRoaXMuYXN0KTsKKwkJCXN1cGVyTWV0aG9kUmVmZXJlbmNlLnNldFF1YWxpZmllcihj
b252ZXJ0KChRdWFsaWZpZWRTdXBlclJlZmVyZW5jZSlsaHMpKTsKKwkJCXN1cGVyTWV0aG9kUmVm
ZXJlbmNlLnNldE5hbWUobmFtZSk7CisJCQl0eXBlQXJndW1lbnRzID0gc3VwZXJNZXRob2RSZWZl
cmVuY2UudHlwZUFyZ3VtZW50cygpOworCQkJcmVzdWx0ID0gc3VwZXJNZXRob2RSZWZlcmVuY2U7
CisJCX0gZWxzZSB7CisJCQlFeHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlIGV4cHJlc3Npb25NZXRo
b2RSZWZlcmVuY2UgPSBuZXcgRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZSh0aGlzLmFzdCk7CisJ
CQlleHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlLnNldEV4cHJlc3Npb24oY29udmVydChsaHMpKTsK
KwkJCXR5cGVBcmd1bWVudHMgPSBleHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlLnR5cGVBcmd1bWVu
dHMoKTsKKwkJCWV4cHJlc3Npb25NZXRob2RSZWZlcmVuY2Uuc2V0TmFtZShuYW1lKTsKKwkJCXJl
c3VsdCA9IGV4cHJlc3Npb25NZXRob2RSZWZlcmVuY2U7CisJCX0KKwkJaWYgKHR5cGVBcmd1bWVu
dHMgIT0gbnVsbCAmJiBhcmd1bWVudHMgIT0gbnVsbCkgeworCQkJaW50IGFyZ3VtZW50c0xlbmd0
aCA9IGFyZ3VtZW50cy5sZW5ndGg7CisJCQlmb3IgKGludCBpID0gMDsgaSA8IGFyZ3VtZW50c0xl
bmd0aDsgaSsrKSB7CisJCQkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5U
eXBlUmVmZXJlbmNlIGFyZ3VtZW50ID0gYXJndW1lbnRzW2ldOworCQkJCXR5cGVBcmd1bWVudHMu
YWRkKGNvbnZlcnRUeXBlKGFyZ3VtZW50KSk7CisJCQl9CisJCX0KKwkJaWYgKHRoaXMucmVzb2x2
ZUJpbmRpbmdzKSB7CisJCQlyZWNvcmROb2RlcyhyZXN1bHQsIHJlZmVyZW5jZSk7CisJCX0KKwkJ
aW50IHNvdXJjZVN0YXJ0ID0gcmVmZXJlbmNlLnNvdXJjZVN0YXJ0OyAKKwkJcmVzdWx0LnNldFNv
dXJjZVJhbmdlKHNvdXJjZVN0YXJ0LCByZWZlcmVuY2Uuc291cmNlRW5kIC0gc291cmNlU3RhcnQg
KyAxKTsKKwkJcmV0dXJuIHJlc3VsdDsKIAl9CiAKIAlwdWJsaWMgUmV0dXJuU3RhdGVtZW50IGNv
bnZlcnQob3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5SZXR1cm5TdGF0ZW1l
bnQgc3RhdGVtZW50KSB7CkBAIC00NzE2LDYgKzQ3OTMsMjkgQEAKIAl9CiAKIAkvKioKKwkgKiBy
ZXRyaWV2ZXMgdGhlIHN0YXJ0IGFuZCBhbmQgb2YgbmV3IGFuZCBzZXQgdGhlIHBvc2l0aW9ucyBv
ZiB0aGUgbmFtZQorCSAqIEBwYXJhbSBzdGFydCBwb3NpdGlvbiB0byBzdGFydCBzZWFyY2gKKwkg
KiBAcGFyYW0gZW5kIHBvc2l0aW9uIHRvIGVuZCBzZWFyY2gKKwkgKiBAcGFyYW0gbmFtZSBvYmpl
Y3Qgd2hlcmUgdGhlc2UgcG9zaXRpb25zIHdpbGwgYmUgdXBkYXRlZC4KKwkgKi8KKwlwcm90ZWN0
ZWQgdm9pZCByZXRyaWV2ZUluaXRBbmRTZXRQb3NpdGlvbnMoaW50IHN0YXJ0LCBpbnQgZW5kLCBO
YW1lIG5hbWUpIHsKKwkJdGhpcy5zY2FubmVyLnJlc2V0VG8oc3RhcnQsIGVuZCk7CisJCWludCB0
b2tlbjsKKwkJdHJ5IHsKKwkJCXdoaWxlKCh0b2tlbiA9IHRoaXMuc2Nhbm5lci5nZXROZXh0VG9r
ZW4oKSkgIT0gVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lRU9GKSAgeworCQkJCWlmICh0b2tlbiA9
PSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVuZXcpIHsKKwkJCQkJaW50IHN0YXJ0TmFtZSA9IHRo
aXMuc2Nhbm5lci5zdGFydFBvc2l0aW9uOworCQkJCQlpbnQgZW5kTmFtZSA9IHRoaXMuc2Nhbm5l
ci5jdXJyZW50UG9zaXRpb247CisJCQkJCW5hbWUuc2V0U291cmNlUmFuZ2Uoc3RhcnROYW1lLCBl
bmROYW1lIC0gc3RhcnROYW1lKTsKKwkJCQkJcmV0dXJuOworCQkJCX0KKwkJCX0KKwkJfSBjYXRj
aChJbnZhbGlkSW5wdXRFeGNlcHRpb24gZSkgeworCQkJLy8gaWdub3JlCisJCX0KKwl9CisKKwkv
KioKIAkgKiBUaGlzIG1ldGhvZCBpcyB1c2VkIHRvIHJldHJpZXZlIHBvc2l0aW9uIGJlZm9yZSB0
aGUgbmV4dCBjb21tYSBvciBzZW1pLWNvbG9uLgogCSAqIEBwYXJhbSBpbml0aWFsaXplckVuZCB0
aGUgZ2l2ZW4gaW5pdGlhbGl6ZXIgZW5kIGV4Y2x1c2l2ZQogCSAqIEByZXR1cm4gaW50IHRoZSBw
b3NpdGlvbiBmb3VuZC4KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcv
ZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUTWF0Y2hlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RNYXRjaGVyLmphdmEKaW5kZXggNzZh
ZDg3Yi4uMzljNjAxZSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RNYXRjaGVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RNYXRjaGVyLmphdmEKQEAgLTcw
MCw2ICs3MDAsMzEgQEAKIAkgKiBAcmV0dXJuIDxjb2RlPnRydWU8L2NvZGU+IGlmIHRoZSBzdWJ0
cmVlIG1hdGNoZXMsIG9yCiAJICogICA8Y29kZT5mYWxzZTwvY29kZT4gaWYgdGhleSBkbyBub3Qg
bWF0Y2ggb3IgdGhlIG90aGVyIG9iamVjdCBoYXMgYQogCSAqICAgZGlmZmVyZW50IG5vZGUgdHlw
ZSBvciBpcyA8Y29kZT5udWxsPC9jb2RlPgorCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAorCSAq
LworCXB1YmxpYyBib29sZWFuIG1hdGNoKENyZWF0aW9uUmVmZXJlbmNlIG5vZGUsIE9iamVjdCBv
dGhlcikgeworCQlpZiAoIShvdGhlciBpbnN0YW5jZW9mIENyZWF0aW9uUmVmZXJlbmNlKSkgewor
CQkJcmV0dXJuIGZhbHNlOworCQl9CisJCUNyZWF0aW9uUmVmZXJlbmNlIG8gPSAoQ3JlYXRpb25S
ZWZlcmVuY2UpIG90aGVyOworCQlyZXR1cm4gKAorCQkJc2FmZVN1YnRyZWVNYXRjaChub2RlLmdl
dEV4cHJlc3Npb24oKSwgby5nZXRFeHByZXNzaW9uKCkpCisJCQkJJiYgc2FmZVN1YnRyZWVMaXN0
TWF0Y2gobm9kZS50eXBlQXJndW1lbnRzKCksIG8udHlwZUFyZ3VtZW50cygpKSk7CisJfQorCisJ
LyoqCisJICogUmV0dXJucyB3aGV0aGVyIHRoZSBnaXZlbiBub2RlIGFuZCB0aGUgb3RoZXIgb2Jq
ZWN0IG1hdGNoLgorCSAqIDxwPgorCSAqIFRoZSBkZWZhdWx0IGltcGxlbWVudGF0aW9uIHByb3Zp
ZGVkIGJ5IHRoaXMgY2xhc3MgdGVzdHMgd2hldGhlciB0aGUKKwkgKiBvdGhlciBvYmplY3QgaXMg
YSBub2RlIG9mIHRoZSBzYW1lIHR5cGUgd2l0aCBzdHJ1Y3R1cmFsbHkgaXNvbW9ycGhpYworCSAq
IGNoaWxkIHN1YnRyZWVzLiBTdWJjbGFzc2VzIG1heSBvdmVycmlkZSB0aGlzIG1ldGhvZCBhcyBu
ZWVkZWQuCisJICogPC9wPgorCSAqCisJICogQHBhcmFtIG5vZGUgdGhlIG5vZGUKKwkgKiBAcGFy
YW0gb3RoZXIgdGhlIG90aGVyIG9iamVjdCwgb3IgPGNvZGU+bnVsbDwvY29kZT4KKwkgKiBAcmV0
dXJuIDxjb2RlPnRydWU8L2NvZGU+IGlmIHRoZSBzdWJ0cmVlIG1hdGNoZXMsIG9yCisJICogICA8
Y29kZT5mYWxzZTwvY29kZT4gaWYgdGhleSBkbyBub3QgbWF0Y2ggb3IgdGhlIG90aGVyIG9iamVj
dCBoYXMgYQorCSAqICAgZGlmZmVyZW50IG5vZGUgdHlwZSBvciBpcyA8Y29kZT5udWxsPC9jb2Rl
PgogCSAqLwogCXB1YmxpYyBib29sZWFuIG1hdGNoKERvU3RhdGVtZW50IG5vZGUsIE9iamVjdCBv
dGhlcikgewogCQlpZiAoIShvdGhlciBpbnN0YW5jZW9mIERvU3RhdGVtZW50KSkgewpAQCAtODE3
LDYgKzg0MiwzMiBAQAogCQkJCSYmIHNhZmVTdWJ0cmVlTGlzdE1hdGNoKAogCQkJCQlub2RlLmJv
ZHlEZWNsYXJhdGlvbnMoKSwKIAkJCQkJby5ib2R5RGVjbGFyYXRpb25zKCkpKTsKKwl9CisKKwkv
KioKKwkgKiBSZXR1cm5zIHdoZXRoZXIgdGhlIGdpdmVuIG5vZGUgYW5kIHRoZSBvdGhlciBvYmpl
Y3QgbWF0Y2guCisJICogPHA+CisJICogVGhlIGRlZmF1bHQgaW1wbGVtZW50YXRpb24gcHJvdmlk
ZWQgYnkgdGhpcyBjbGFzcyB0ZXN0cyB3aGV0aGVyIHRoZQorCSAqIG90aGVyIG9iamVjdCBpcyBh
IG5vZGUgb2YgdGhlIHNhbWUgdHlwZSB3aXRoIHN0cnVjdHVyYWxseSBpc29tb3JwaGljCisJICog
Y2hpbGQgc3VidHJlZXMuIFN1YmNsYXNzZXMgbWF5IG92ZXJyaWRlIHRoaXMgbWV0aG9kIGFzIG5l
ZWRlZC4KKwkgKiA8L3A+CisJICoKKwkgKiBAcGFyYW0gbm9kZSB0aGUgbm9kZQorCSAqIEBwYXJh
bSBvdGhlciB0aGUgb3RoZXIgb2JqZWN0LCBvciA8Y29kZT5udWxsPC9jb2RlPgorCSAqIEByZXR1
cm4gPGNvZGU+dHJ1ZTwvY29kZT4gaWYgdGhlIHN1YnRyZWUgbWF0Y2hlcywgb3IKKwkgKiAgIDxj
b2RlPmZhbHNlPC9jb2RlPiBpZiB0aGV5IGRvIG5vdCBtYXRjaCBvciB0aGUgb3RoZXIgb2JqZWN0
IGhhcyBhCisJICogICBkaWZmZXJlbnQgbm9kZSB0eXBlIG9yIGlzIDxjb2RlPm51bGw8L2NvZGU+
CisJICogQHNpbmNlIDMuOSBCRVRBX0pBVkE4CisJICovCisJcHVibGljIGJvb2xlYW4gbWF0Y2go
RXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZSBub2RlLCBPYmplY3Qgb3RoZXIpIHsKKwkJaWYgKCEo
b3RoZXIgaW5zdGFuY2VvZiBFeHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlKSkgeworCQkJcmV0dXJu
IGZhbHNlOworCQl9CisJCUV4cHJlc3Npb25NZXRob2RSZWZlcmVuY2UgbyA9IChFeHByZXNzaW9u
TWV0aG9kUmVmZXJlbmNlKSBvdGhlcjsKKwkJcmV0dXJuICgKKwkJCXNhZmVTdWJ0cmVlTWF0Y2go
bm9kZS5nZXRFeHByZXNzaW9uKCksIG8uZ2V0RXhwcmVzc2lvbigpKQorCQkJCSYmIHNhZmVTdWJ0
cmVlTGlzdE1hdGNoKG5vZGUudHlwZUFyZ3VtZW50cygpLCBvLnR5cGVBcmd1bWVudHMoKSkKKwkJ
CQkmJiBzYWZlU3VidHJlZU1hdGNoKG5vZGUuZ2V0TmFtZSgpLCBvLmdldE5hbWUoKSkpOwogCX0K
IAogCS8qKgpAQCAtMjAyMiw2ICsyMDczLDMyIEBACiAJICogQHJldHVybiA8Y29kZT50cnVlPC9j
b2RlPiBpZiB0aGUgc3VidHJlZSBtYXRjaGVzLCBvcgogCSAqICAgPGNvZGU+ZmFsc2U8L2NvZGU+
IGlmIHRoZXkgZG8gbm90IG1hdGNoIG9yIHRoZSBvdGhlciBvYmplY3QgaGFzIGEKIAkgKiAgIGRp
ZmZlcmVudCBub2RlIHR5cGUgb3IgaXMgPGNvZGU+bnVsbDwvY29kZT4KKwkgKiAgIAorCSAqICAg
QHNpbmNlIDMuOSBCRVRBX0pBVkE4CisJICovCisJcHVibGljIGJvb2xlYW4gbWF0Y2goU3VwZXJN
ZXRob2RSZWZlcmVuY2Ugbm9kZSwgT2JqZWN0IG90aGVyKSB7CisJCWlmICghKG90aGVyIGluc3Rh
bmNlb2YgU3VwZXJNZXRob2RSZWZlcmVuY2UpKSB7CisJCQlyZXR1cm4gZmFsc2U7CisJCX0KKwkJ
U3VwZXJNZXRob2RSZWZlcmVuY2UgbyA9IChTdXBlck1ldGhvZFJlZmVyZW5jZSkgb3RoZXI7CisJ
CXJldHVybiAoc2FmZVN1YnRyZWVNYXRjaChub2RlLmdldFF1YWxpZmllcigpLCBvLmdldFF1YWxp
ZmllcigpKQorCQkJCSYmIHNhZmVTdWJ0cmVlTGlzdE1hdGNoKG5vZGUudHlwZUFyZ3VtZW50cygp
LCBvLnR5cGVBcmd1bWVudHMoKSkKKwkJCQkmJiBzYWZlU3VidHJlZU1hdGNoKG5vZGUuZ2V0TmFt
ZSgpLCBvLmdldE5hbWUoKSkpOworCX0KKworCS8qKgorCSAqIFJldHVybnMgd2hldGhlciB0aGUg
Z2l2ZW4gbm9kZSBhbmQgdGhlIG90aGVyIG9iamVjdCBtYXRjaC4KKwkgKiA8cD4KKwkgKiBUaGUg
ZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiBwcm92aWRlZCBieSB0aGlzIGNsYXNzIHRlc3RzIHdoZXRo
ZXIgdGhlCisJICogb3RoZXIgb2JqZWN0IGlzIGEgbm9kZSBvZiB0aGUgc2FtZSB0eXBlIHdpdGgg
c3RydWN0dXJhbGx5IGlzb21vcnBoaWMKKwkgKiBjaGlsZCBzdWJ0cmVlcy4gU3ViY2xhc3NlcyBt
YXkgb3ZlcnJpZGUgdGhpcyBtZXRob2QgYXMgbmVlZGVkLgorCSAqIDwvcD4KKwkgKgorCSAqIEBw
YXJhbSBub2RlIHRoZSBub2RlCisJICogQHBhcmFtIG90aGVyIHRoZSBvdGhlciBvYmplY3QsIG9y
IDxjb2RlPm51bGw8L2NvZGU+CisJICogQHJldHVybiA8Y29kZT50cnVlPC9jb2RlPiBpZiB0aGUg
c3VidHJlZSBtYXRjaGVzLCBvcgorCSAqICAgPGNvZGU+ZmFsc2U8L2NvZGU+IGlmIHRoZXkgZG8g
bm90IG1hdGNoIG9yIHRoZSBvdGhlciBvYmplY3QgaGFzIGEKKwkgKiAgIGRpZmZlcmVudCBub2Rl
IHR5cGUgb3IgaXMgPGNvZGU+bnVsbDwvY29kZT4KIAkgKi8KIAlwdWJsaWMgYm9vbGVhbiBtYXRj
aChTd2l0Y2hDYXNlIG5vZGUsIE9iamVjdCBvdGhlcikgewogCQlpZiAoIShvdGhlciBpbnN0YW5j
ZW9mIFN3aXRjaENhc2UpKSB7CkBAIC0yMzA2LDYgKzIzODMsMzIgQEAKIAkgKiBAcmV0dXJuIDxj
b2RlPnRydWU8L2NvZGU+IGlmIHRoZSBzdWJ0cmVlIG1hdGNoZXMsIG9yCiAJICogICA8Y29kZT5m
YWxzZTwvY29kZT4gaWYgdGhleSBkbyBub3QgbWF0Y2ggb3IgdGhlIG90aGVyIG9iamVjdCBoYXMg
YQogCSAqICAgZGlmZmVyZW50IG5vZGUgdHlwZSBvciBpcyA8Y29kZT5udWxsPC9jb2RlPgorCSAq
IEBzaW5jZSAzLjkgQkVUQV9KQVZBOAorCSAqLworCXB1YmxpYyBib29sZWFuIG1hdGNoKFR5cGVN
ZXRob2RSZWZlcmVuY2Ugbm9kZSwgT2JqZWN0IG90aGVyKSB7CisJCWlmICghKG90aGVyIGluc3Rh
bmNlb2YgVHlwZU1ldGhvZFJlZmVyZW5jZSkpIHsKKwkJCXJldHVybiBmYWxzZTsKKwkJfQorCQlU
eXBlTWV0aG9kUmVmZXJlbmNlIG8gPSAoVHlwZU1ldGhvZFJlZmVyZW5jZSkgb3RoZXI7CisJCXJl
dHVybiAoCisJCQlzYWZlU3VidHJlZU1hdGNoKG5vZGUuZ2V0VHlwZSgpLCBvLmdldFR5cGUoKSkK
KwkJCQkmJiBzYWZlU3VidHJlZUxpc3RNYXRjaChub2RlLnR5cGVBcmd1bWVudHMoKSwgby50eXBl
QXJndW1lbnRzKCkpCisJCQkJJiYgc2FmZVN1YnRyZWVNYXRjaChub2RlLmdldE5hbWUoKSwgby5n
ZXROYW1lKCkpKTsKKwl9CisKKwkvKioKKwkgKiBSZXR1cm5zIHdoZXRoZXIgdGhlIGdpdmVuIG5v
ZGUgYW5kIHRoZSBvdGhlciBvYmplY3QgbWF0Y2guCisJICogPHA+CisJICogVGhlIGRlZmF1bHQg
aW1wbGVtZW50YXRpb24gcHJvdmlkZWQgYnkgdGhpcyBjbGFzcyB0ZXN0cyB3aGV0aGVyIHRoZQor
CSAqIG90aGVyIG9iamVjdCBpcyBhIG5vZGUgb2YgdGhlIHNhbWUgdHlwZSB3aXRoIHN0cnVjdHVy
YWxseSBpc29tb3JwaGljCisJICogY2hpbGQgc3VidHJlZXMuIFN1YmNsYXNzZXMgbWF5IG92ZXJy
aWRlIHRoaXMgbWV0aG9kIGFzIG5lZWRlZC4KKwkgKiA8L3A+CisJICoKKwkgKiBAcGFyYW0gbm9k
ZSB0aGUgbm9kZQorCSAqIEBwYXJhbSBvdGhlciB0aGUgb3RoZXIgb2JqZWN0LCBvciA8Y29kZT5u
dWxsPC9jb2RlPgorCSAqIEByZXR1cm4gPGNvZGU+dHJ1ZTwvY29kZT4gaWYgdGhlIHN1YnRyZWUg
bWF0Y2hlcywgb3IKKwkgKiAgIDxjb2RlPmZhbHNlPC9jb2RlPiBpZiB0aGV5IGRvIG5vdCBtYXRj
aCBvciB0aGUgb3RoZXIgb2JqZWN0IGhhcyBhCisJICogICBkaWZmZXJlbnQgbm9kZSB0eXBlIG9y
IGlzIDxjb2RlPm51bGw8L2NvZGU+CiAJICogQHNpbmNlIDMuMQogCSAqLwogCXB1YmxpYyBib29s
ZWFuIG1hdGNoKFR5cGVQYXJhbWV0ZXIgbm9kZSwgT2JqZWN0IG90aGVyKSB7CmRpZmYgLS1naXQg
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVE5v
ZGUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9k
b20vQVNUTm9kZS5qYXZhCmluZGV4IDZiYmE0ZjUuLjU4ODVkMzMgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUTm9kZS5qYXZh
CisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20v
QVNUTm9kZS5qYXZhCkBAIC04NjgsNiArODY4LDM4IEBACiAJcHVibGljIHN0YXRpYyBmaW5hbCBp
bnQgUEFDS0FHRV9RVUFMSUZJRURfVFlQRSA9IDg4OwogCiAJLyoqCisJICogTm9kZSB0eXBlIGNv
bnN0YW50IGluZGljYXRpbmcgYSBub2RlIG9mIHR5cGUKKwkgKiA8Y29kZT5DcmVhdGlvblJlZmVy
ZW5jZTwvY29kZT4uCisJICogQHNlZSBDcmVhdGlvblJlZmVyZW5jZQorCSAqIEBzaW5jZSAzLjkg
QkVUQV9KQVY4CisJICovCisJcHVibGljIHN0YXRpYyBmaW5hbCBpbnQgQ1JFQVRJT05fUkVGRVJF
TkNFID0gODk7CisKKwkvKioKKwkgKiBOb2RlIHR5cGUgY29uc3RhbnQgaW5kaWNhdGluZyBhIG5v
ZGUgb2YgdHlwZQorCSAqIDxjb2RlPkV4cHJlc3Npb25NZXRob2RSZWZlcmVuY2U8L2NvZGU+Lgor
CSAqIEBzZWUgRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZQorCSAqIEBzaW5jZSAzLjkgQkVUQV9K
QVY4CisJICovCisJcHVibGljIHN0YXRpYyBmaW5hbCBpbnQgRVhQUkVTU0lPTl9NRVRIT0RfUkVG
RVJFTkNFID0gOTA7CisKKwkvKioKKwkgKiBOb2RlIHR5cGUgY29uc3RhbnQgaW5kaWNhdGluZyBh
IG5vZGUgb2YgdHlwZQorCSAqIDxjb2RlPlN1cGVyTWV0aGhvZFJlZmVyZW5jZTwvY29kZT4uCisJ
ICogQHNlZSBTdXBlck1ldGhvZFJlZmVyZW5jZQorCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVY4CisJ
ICovCisJcHVibGljIHN0YXRpYyBmaW5hbCBpbnQgU1VQRVJfTUVUSE9EX1JFRkVSRU5DRSA9IDkx
OworCisJLyoqCisJICogTm9kZSB0eXBlIGNvbnN0YW50IGluZGljYXRpbmcgYSBub2RlIG9mIHR5
cGUKKwkgKiA8Y29kZT5UeXBlTWV0aG9kUmVmZXJlbmNlPC9jb2RlPi4KKwkgKiBAc2VlIFR5cGVN
ZXRob2RSZWZlcmVuY2UKKwkgKiBAc2luY2UgMy45IEJFVEFfSkFWOAorCSAqLworCXB1YmxpYyBz
dGF0aWMgZmluYWwgaW50IFRZUEVfTUVUSE9EX1JFRkVSRU5DRSA9IDkyOworCisJLyoqCiAJICog
UmV0dXJucyB0aGUgbm9kZSBjbGFzcyBmb3IgdGhlIGNvcnJlc3BvbmRpbmcgbm9kZSB0eXBlLgog
CSAqCiAJICogQHBhcmFtIG5vZGVUeXBlIEFTVCBub2RlIHR5cGUKQEAgLTkyMSw2ICs5NTMsOCBA
QAogCQkJCXJldHVybiBDb25zdHJ1Y3Rvckludm9jYXRpb24uY2xhc3M7CiAJCQljYXNlIENPTlRJ
TlVFX1NUQVRFTUVOVCA6CiAJCQkJcmV0dXJuIENvbnRpbnVlU3RhdGVtZW50LmNsYXNzOworCQkJ
Y2FzZSBDUkVBVElPTl9SRUZFUkVOQ0UgOgorCQkJCXJldHVybiBDcmVhdGlvblJlZmVyZW5jZS5j
bGFzczsKIAkJCWNhc2UgVU5JT05fVFlQRSA6CiAJCQkJcmV0dXJuIFVuaW9uVHlwZS5jbGFzczsK
IAkJCWNhc2UgRE9fU1RBVEVNRU5UIDoKQEAgLTkzMyw2ICs5NjcsOCBAQAogCQkJCXJldHVybiBF
bnVtQ29uc3RhbnREZWNsYXJhdGlvbi5jbGFzczsKIAkJCWNhc2UgRU5VTV9ERUNMQVJBVElPTiA6
CiAJCQkJcmV0dXJuIEVudW1EZWNsYXJhdGlvbi5jbGFzczsKKwkJCWNhc2UgRVhQUkVTU0lPTl9N
RVRIT0RfUkVGRVJFTkNFIDoKKwkJCQlyZXR1cm4gRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZS5j
bGFzczsKIAkJCWNhc2UgRVhQUkVTU0lPTl9TVEFURU1FTlQgOgogCQkJCXJldHVybiBFeHByZXNz
aW9uU3RhdGVtZW50LmNsYXNzOwogCQkJY2FzZSBFWFRSQV9ESU1FTlNJT046CkBAIC0xMDIxLDYg
KzEwNTcsOCBAQAogCQkJCXJldHVybiBTdXBlckZpZWxkQWNjZXNzLmNsYXNzOwogCQkJY2FzZSBT
VVBFUl9NRVRIT0RfSU5WT0NBVElPTiA6CiAJCQkJcmV0dXJuIFN1cGVyTWV0aG9kSW52b2NhdGlv
bi5jbGFzczsKKwkJCWNhc2UgU1VQRVJfTUVUSE9EX1JFRkVSRU5DRSA6CisJCQkJcmV0dXJuIFN1
cGVyTWV0aG9kUmVmZXJlbmNlLmNsYXNzOwogCQkJY2FzZSBTV0lUQ0hfQ0FTRToKIAkJCQlyZXR1
cm4gU3dpdGNoQ2FzZS5jbGFzczsKIAkJCWNhc2UgU1dJVENIX1NUQVRFTUVOVCA6CkBAIC0xMDQx
LDYgKzEwNzksOCBAQAogCQkJCXJldHVybiBUeXBlRGVjbGFyYXRpb24uY2xhc3M7CiAJCQljYXNl
IFRZUEVfREVDTEFSQVRJT05fU1RBVEVNRU5UIDoKIAkJCQlyZXR1cm4gVHlwZURlY2xhcmF0aW9u
U3RhdGVtZW50LmNsYXNzOworCQkJY2FzZSBUWVBFX01FVEhPRF9SRUZFUkVOQ0UgOgorCQkJCXJl
dHVybiBUeXBlTWV0aG9kUmVmZXJlbmNlLmNsYXNzOwogCQkJY2FzZSBUWVBFX0xJVEVSQUwgOgog
CQkJCXJldHVybiBUeXBlTGl0ZXJhbC5jbGFzczsKIAkJCWNhc2UgVFlQRV9QQVJBTUVURVIgOgpk
aWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L2RvbS9BU1RWaXNpdG9yLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlw
c2UvamR0L2NvcmUvZG9tL0FTVFZpc2l0b3IuamF2YQppbmRleCA2ODFlMzI1Li5iNGZmYmFmIDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUv
ZG9tL0FTVFZpc2l0b3IuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2NvcmUvZG9tL0FTVFZpc2l0b3IuamF2YQpAQCAtNTM1LDYgKzUzNSwyMyBAQAog
CSAqIFZpc2l0cyB0aGUgZ2l2ZW4gdHlwZS1zcGVjaWZpYyBBU1Qgbm9kZS4KIAkgKiA8cD4KIAkg
KiBUaGUgZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiBkb2VzIG5vdGhpbmcgYW5kIHJldHVybiB0cnVl
LgorCSAqIFN1YmNsYXNzZXMgbWF5IHJlLWltcGxlbWVudC4KKwkgKiA8L3A+CisJICoKKwkgKiBA
cGFyYW0gbm9kZSB0aGUgbm9kZSB0byB2aXNpdAorCSAqIEByZXR1cm4gPGNvZGU+dHJ1ZTwvY29k
ZT4gaWYgdGhlIGNoaWxkcmVuIG9mIHRoaXMgbm9kZSBzaG91bGQgYmUKKwkgKiB2aXNpdGVkLCBh
bmQgPGNvZGU+ZmFsc2U8L2NvZGU+IGlmIHRoZSBjaGlsZHJlbiBvZiB0aGlzIG5vZGUgc2hvdWxk
CisJICogYmUgc2tpcHBlZAorCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAorCSAqLworCXB1Ymxp
YyBib29sZWFuIHZpc2l0KENyZWF0aW9uUmVmZXJlbmNlIG5vZGUpIHsKKwkJcmV0dXJuIHRydWU7
CisJfQorCisJLyoqCisJICogVmlzaXRzIHRoZSBnaXZlbiB0eXBlLXNwZWNpZmljIEFTVCBub2Rl
LgorCSAqIDxwPgorCSAqIFRoZSBkZWZhdWx0IGltcGxlbWVudGF0aW9uIGRvZXMgbm90aGluZyBh
bmQgcmV0dXJuIHRydWUuCiAJICogU3ViY2xhc3NlcyBtYXkgcmVpbXBsZW1lbnQuCiAJICogPC9w
PgogCSAqCkBAIC02MTEsNiArNjI4LDIzIEBACiAJICogQHNpbmNlIDMuMQogCSAqLwogCXB1Ymxp
YyBib29sZWFuIHZpc2l0KEVudW1EZWNsYXJhdGlvbiBub2RlKSB7CisJCXJldHVybiB0cnVlOwor
CX0KKworCS8qKgorCSAqIFZpc2l0cyB0aGUgZ2l2ZW4gdHlwZS1zcGVjaWZpYyBBU1Qgbm9kZS4K
KwkgKiA8cD4KKwkgKiBUaGUgZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiBkb2VzIG5vdGhpbmcgYW5k
IHJldHVybiB0cnVlLgorCSAqIFN1YmNsYXNzZXMgbWF5IHJlLWltcGxlbWVudC4KKwkgKiA8L3A+
CisJICoKKwkgKiBAcGFyYW0gbm9kZSB0aGUgbm9kZSB0byB2aXNpdAorCSAqIEByZXR1cm4gPGNv
ZGU+dHJ1ZTwvY29kZT4gaWYgdGhlIGNoaWxkcmVuIG9mIHRoaXMgbm9kZSBzaG91bGQgYmUKKwkg
KiB2aXNpdGVkLCBhbmQgPGNvZGU+ZmFsc2U8L2NvZGU+IGlmIHRoZSBjaGlsZHJlbiBvZiB0aGlz
IG5vZGUgc2hvdWxkCisJICogYmUgc2tpcHBlZAorCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAor
CSAqLworCXB1YmxpYyBib29sZWFuIHZpc2l0KEV4cHJlc3Npb25NZXRob2RSZWZlcmVuY2Ugbm9k
ZSkgewogCQlyZXR1cm4gdHJ1ZTsKIAl9CiAKQEAgLTEzNjcsNiArMTQwMSwyMyBAQAogCSAqIEBy
ZXR1cm4gPGNvZGU+dHJ1ZTwvY29kZT4gaWYgdGhlIGNoaWxkcmVuIG9mIHRoaXMgbm9kZSBzaG91
bGQgYmUKIAkgKiB2aXNpdGVkLCBhbmQgPGNvZGU+ZmFsc2U8L2NvZGU+IGlmIHRoZSBjaGlsZHJl
biBvZiB0aGlzIG5vZGUgc2hvdWxkCiAJICogYmUgc2tpcHBlZAorCSAqIEBzaW5jZSAzLjkgQkVU
QV9KQVZBOAorCSAqLworCXB1YmxpYyBib29sZWFuIHZpc2l0KFN1cGVyTWV0aG9kUmVmZXJlbmNl
IG5vZGUpIHsKKwkJcmV0dXJuIHRydWU7CisJfQorCisJLyoqCisJICogVmlzaXRzIHRoZSBnaXZl
biB0eXBlLXNwZWNpZmljIEFTVCBub2RlLgorCSAqIDxwPgorCSAqIFRoZSBkZWZhdWx0IGltcGxl
bWVudGF0aW9uIGRvZXMgbm90aGluZyBhbmQgcmV0dXJuIHRydWUuCisJICogU3ViY2xhc3NlcyBt
YXkgcmVpbXBsZW1lbnQuCisJICogPC9wPgorCSAqCisJICogQHBhcmFtIG5vZGUgdGhlIG5vZGUg
dG8gdmlzaXQKKwkgKiBAcmV0dXJuIDxjb2RlPnRydWU8L2NvZGU+IGlmIHRoZSBjaGlsZHJlbiBv
ZiB0aGlzIG5vZGUgc2hvdWxkIGJlCisJICogdmlzaXRlZCwgYW5kIDxjb2RlPmZhbHNlPC9jb2Rl
PiBpZiB0aGUgY2hpbGRyZW4gb2YgdGhpcyBub2RlIHNob3VsZAorCSAqIGJlIHNraXBwZWQKIAkg
Ki8KIAlwdWJsaWMgYm9vbGVhbiB2aXNpdChTd2l0Y2hDYXNlIG5vZGUpIHsKIAkJcmV0dXJuIHRy
dWU7CkBAIC0xNTMzLDYgKzE1ODQsMjQgQEAKIAkgKiBiZSBza2lwcGVkCiAJICovCiAJcHVibGlj
IGJvb2xlYW4gdmlzaXQoVHlwZUxpdGVyYWwgbm9kZSkgeworCQlyZXR1cm4gdHJ1ZTsKKwl9CisK
KwkvKioKKwkgKiBWaXNpdHMgdGhlIGdpdmVuIHR5cGUtc3BlY2lmaWMgQVNUIG5vZGUuCisJICog
PHA+CisJICogVGhlIGRlZmF1bHQgaW1wbGVtZW50YXRpb24gZG9lcyBub3RoaW5nIGFuZCByZXR1
cm4gdHJ1ZS4KKwkgKiBTdWJjbGFzc2VzIG1heSByZWltcGxlbWVudC4KKwkgKiA8L3A+CisJICoK
KwkgKiBAcGFyYW0gbm9kZSB0aGUgbm9kZSB0byB2aXNpdAorCSAqIEByZXR1cm4gPGNvZGU+dHJ1
ZTwvY29kZT4gaWYgdGhlIGNoaWxkcmVuIG9mIHRoaXMgbm9kZSBzaG91bGQgYmUKKwkgKiB2aXNp
dGVkLCBhbmQgPGNvZGU+ZmFsc2U8L2NvZGU+IGlmIHRoZSBjaGlsZHJlbiBvZiB0aGlzIG5vZGUg
c2hvdWxkCisJICogYmUgc2tpcHBlZAorCSAqIAorCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAor
CSAqLworCXB1YmxpYyBib29sZWFuIHZpc2l0KFR5cGVNZXRob2RSZWZlcmVuY2Ugbm9kZSkgewog
CQlyZXR1cm4gdHJ1ZTsKIAl9CiAKQEAgLTE5MTgsNiArMTk4NywxOSBAQAogCSAqIDwvcD4KIAkg
KgogCSAqIEBwYXJhbSBub2RlIHRoZSBub2RlIHRvIHZpc2l0CisJICogQHNpbmNlIDMuOSBCRVRB
X0pBVkE4CisJICovCisJcHVibGljIHZvaWQgZW5kVmlzaXQoQ3JlYXRpb25SZWZlcmVuY2Ugbm9k
ZSkgeworCQkvLyBkZWZhdWx0IGltcGxlbWVudGF0aW9uOiBkbyBub3RoaW5nCisJfQorCisJLyoq
CisJICogRW5kIG9mIHZpc2l0IHRoZSBnaXZlbiB0eXBlLXNwZWNpZmljIEFTVCBub2RlLgorCSAq
IDxwPgorCSAqIFRoZSBkZWZhdWx0IGltcGxlbWVudGF0aW9uIGRvZXMgbm90aGluZy4gU3ViY2xh
c3NlcyBtYXkgcmVpbXBsZW1lbnQuCisJICogPC9wPgorCSAqCisJICogQHBhcmFtIG5vZGUgdGhl
IG5vZGUgdG8gdmlzaXQKIAkgKi8KIAlwdWJsaWMgdm9pZCBlbmRWaXNpdChEb1N0YXRlbWVudCBu
b2RlKSB7CiAJCS8vIGRlZmF1bHQgaW1wbGVtZW50YXRpb246IGRvIG5vdGhpbmcKQEAgLTE5NzEs
NiArMjA1MywxOSBAQAogCSAqIEBzaW5jZSAzLjEKIAkgKi8KIAlwdWJsaWMgdm9pZCBlbmRWaXNp
dChFbnVtRGVjbGFyYXRpb24gbm9kZSkgeworCQkvLyBkZWZhdWx0IGltcGxlbWVudGF0aW9uOiBk
byBub3RoaW5nCisJfQorCisJLyoqCisJICogRW5kIG9mIHZpc2l0IHRoZSBnaXZlbiB0eXBlLXNw
ZWNpZmljIEFTVCBub2RlLgorCSAqIDxwPgorCSAqIFRoZSBkZWZhdWx0IGltcGxlbWVudGF0aW9u
IGRvZXMgbm90aGluZy4gU3ViY2xhc3NlcyBtYXkgcmVpbXBsZW1lbnQuCisJICogPC9wPgorCSAq
CisJICogQHBhcmFtIG5vZGUgdGhlIG5vZGUgdG8gdmlzaXQKKwkgKiBAc2luY2UgMy45IEJFVEFf
SkFWQTgKKwkgKi8KKwlwdWJsaWMgdm9pZCBlbmRWaXNpdChFeHByZXNzaW9uTWV0aG9kUmVmZXJl
bmNlIG5vZGUpIHsKIAkJLy8gZGVmYXVsdCBpbXBsZW1lbnRhdGlvbjogZG8gbm90aGluZwogCX0K
IApAQCAtMjUxNiw2ICsyNjExLDE5IEBACiAJICogPC9wPgogCSAqCiAJICogQHBhcmFtIG5vZGUg
dGhlIG5vZGUgdG8gdmlzaXQKKwkgKiBAc2luY2UgMy45IEJFVEFfSkFWQTgKKwkgKi8KKwlwdWJs
aWMgdm9pZCBlbmRWaXNpdChTdXBlck1ldGhvZFJlZmVyZW5jZSBub2RlKSB7CisJCS8vIGRlZmF1
bHQgaW1wbGVtZW50YXRpb246IGRvIG5vdGhpbmcKKwl9CisKKwkvKioKKwkgKiBFbmQgb2Ygdmlz
aXQgdGhlIGdpdmVuIHR5cGUtc3BlY2lmaWMgQVNUIG5vZGUuCisJICogPHA+CisJICogVGhlIGRl
ZmF1bHQgaW1wbGVtZW50YXRpb24gZG9lcyBub3RoaW5nLiBTdWJjbGFzc2VzIG1heSByZWltcGxl
bWVudC4KKwkgKiA8L3A+CisJICoKKwkgKiBAcGFyYW0gbm9kZSB0aGUgbm9kZSB0byB2aXNpdAog
CSAqLwogCXB1YmxpYyB2b2lkIGVuZFZpc2l0KFN3aXRjaENhc2Ugbm9kZSkgewogCQkvLyBkZWZh
dWx0IGltcGxlbWVudGF0aW9uOiBkbyBub3RoaW5nCkBAIC0yNjQ5LDYgKzI3NTcsMjAgQEAKIAkg
KiA8L3A+CiAJICoKIAkgKiBAcGFyYW0gbm9kZSB0aGUgbm9kZSB0byB2aXNpdAorCSAqIAorCSAq
IEBzaW5jZSAzLjkgQkVUQV9KQVZBOAorCSAqLworCXB1YmxpYyB2b2lkIGVuZFZpc2l0KFR5cGVN
ZXRob2RSZWZlcmVuY2Ugbm9kZSkgeworCQkvLyBkZWZhdWx0IGltcGxlbWVudGF0aW9uOiBkbyBu
b3RoaW5nCisJfQorCisJLyoqCisJICogRW5kIG9mIHZpc2l0IHRoZSBnaXZlbiB0eXBlLXNwZWNp
ZmljIEFTVCBub2RlLgorCSAqIDxwPgorCSAqIFRoZSBkZWZhdWx0IGltcGxlbWVudGF0aW9uIGRv
ZXMgbm90aGluZy4gU3ViY2xhc3NlcyBtYXkgcmVpbXBsZW1lbnQuCisJICogPC9wPgorCSAqCisJ
ICogQHBhcmFtIG5vZGUgdGhlIG5vZGUgdG8gdmlzaXQKIAkgKiBAc2luY2UgMy4xCiAJICovCiAJ
cHVibGljIHZvaWQgZW5kVmlzaXQoVHlwZVBhcmFtZXRlciBub2RlKSB7CmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0JpbmRpbmdS
ZXNvbHZlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9j
b3JlL2RvbS9CaW5kaW5nUmVzb2x2ZXIuamF2YQppbmRleCA3MTI3NGEzLi4wNmI5YTg5IDEwMDY0
NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9t
L0JpbmRpbmdSZXNvbHZlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcv
ZWNsaXBzZS9qZHQvY29yZS9kb20vQmluZGluZ1Jlc29sdmVyLmphdmEKQEAgLTU2MCw2ICs1NjAs
NTAgQEAKIAl9CiAKIAkvKioKKwkgKiBSZXNvbHZlcyB0aGUgZ2l2ZW4gY3JlYXRpb24gcmVmZXJl
bmNlIGFuZCByZXR1cm5zIHRoZSBiaW5kaW5nIGZvciBpdC4KKwkgKiA8cD4KKwkgKiBUaGUgaW1w
bGVtZW50YXRpb24gb2YgPGNvZGU+Q3JlYXRpb25SZWZlcmVuY2UucmVzb2x2ZU1ldGhvZEJpbmRp
bmc8L2NvZGU+CisJICogZm9yd2FyZHMgdG8gdGhpcyBtZXRob2QuIEhvdyB0aGUgbWV0aG9kIHJl
c29sdmVzIGlzIG9mdGVuIGEgZnVuY3Rpb24gb2YKKwkgKiB0aGUgY29udGV4dCBpbiB3aGljaCB0
aGUgY3JlYXRpb24gcmVmZXJlbmNlIG5vZGUgaXMgZW1iZWRkZWQgYXMgd2VsbCBhcworCSAqIHRo
ZSBjcmVhdGlvbiByZWZlcmVuY2Ugc3VidHJlZSBpdHNlbGYuCisJICogPC9wPgorCSAqIDxwPgor
CSAqIFRoZSBkZWZhdWx0IGltcGxlbWVudGF0aW9uIG9mIHRoaXMgbWV0aG9kIHJldHVybnMgPGNv
ZGU+bnVsbDwvY29kZT4uCisJICogU3ViY2xhc3NlcyBtYXkgcmVpbXBsZW1lbnQuCisJICogPC9w
PgorCSAqCisJICogQHBhcmFtIGNyZWF0aW9uUmVmZXJlbmNlIHRoZSBjcmVhdGlvbiByZWZlcmVu
Y2Ugb2YgaW50ZXJlc3QKKwkgKiBAcmV0dXJuIHRoZSBiaW5kaW5nIGZvciB0aGUgZ2l2ZW4gY3Jl
YXRpb24gcmVmZXJlbmNlLCBvcgorCSAqICAgIDxjb2RlPm51bGw8L2NvZGU+IGlmIG5vIGJpbmRp
bmcgaXMgYXZhaWxhYmxlCisJICogQHNpbmNlIDMuOSBCRVRBX0pBVkE4CisJICovCisJSU1ldGhv
ZEJpbmRpbmcgcmVzb2x2ZU1ldGhvZChDcmVhdGlvblJlZmVyZW5jZSBjcmVhdGlvblJlZmVyZW5j
ZSkgeworCQlyZXR1cm4gbnVsbDsKKwl9CisKKwkvKioKKwkgKiBSZXNvbHZlcyB0aGUgZ2l2ZW4g
ZXhwcmVzc2lvbiBtZXRob2QgcmVmZXJlbmNlIGFuZCByZXR1cm5zIHRoZSBiaW5kaW5nIGZvciBp
dC4KKwkgKiA8cD4KKwkgKiBUaGUgaW1wbGVtZW50YXRpb24gb2YgPGNvZGU+RXhwcmVzc2lvbk1l
dGhvZFJlZmVyZW5jZS5yZXNvbHZlTWV0aG9kQmluZGluZzwvY29kZT4KKwkgKiBmb3J3YXJkcyB0
byB0aGlzIG1ldGhvZC4gSG93IHRoZSBtZXRob2QgcmVzb2x2ZXMgaXMgb2Z0ZW4gYSBmdW5jdGlv
biBvZgorCSAqIHRoZSBjb250ZXh0IGluIHdoaWNoIHRoZSBleHByZXNzaW9uIG1ldGhvZCByZWZl
cmVuY2Ugbm9kZSBpcyBlbWJlZGRlZCBhcyB3ZWxsIGFzCisJICogdGhlIGV4cHJlc3Npb24gbWV0
aG9kIHJlZmVyZW5jZSBzdWJ0cmVlIGl0c2VsZi4KKwkgKiA8L3A+CisJICogPHA+CisJICogVGhl
IGRlZmF1bHQgaW1wbGVtZW50YXRpb24gb2YgdGhpcyBtZXRob2QgcmV0dXJucyA8Y29kZT5udWxs
PC9jb2RlPi4KKwkgKiBTdWJjbGFzc2VzIG1heSByZWltcGxlbWVudC4KKwkgKiA8L3A+CisJICoK
KwkgKiBAcGFyYW0gbWV0aG9kUmVmZXJlbmNlIHRoZSBleHByZXNzaW9uIG1ldGhvZCByZWZlcmVu
Y2Ugb2YgaW50ZXJlc3QKKwkgKiBAcmV0dXJuIHRoZSBiaW5kaW5nIGZvciB0aGUgZ2l2ZW4gZXhw
cmVzc2lvbiBtZXRob2QgcmVmZXJlbmNlLCBvcgorCSAqICAgIDxjb2RlPm51bGw8L2NvZGU+IGlm
IG5vIGJpbmRpbmcgaXMgYXZhaWxhYmxlCisJICogQHNpbmNlIDMuOSBCRVRBX0pBVkE4CisJICov
CisJSU1ldGhvZEJpbmRpbmcgcmVzb2x2ZU1ldGhvZChFeHByZXNzaW9uTWV0aG9kUmVmZXJlbmNl
IG1ldGhvZFJlZmVyZW5jZSkgeworCQlyZXR1cm4gbnVsbDsKKwl9CisKKwkvKioKIAkgKiBSZXNv
bHZlcyB0aGUgZ2l2ZW4gbWV0aG9kIGRlY2xhcmF0aW9uIGFuZCByZXR1cm5zIHRoZSBiaW5kaW5n
IGZvciBpdC4KIAkgKiA8cD4KIAkgKiBUaGUgaW1wbGVtZW50YXRpb24gb2YgPGNvZGU+TWV0aG9k
RGVjbGFyYXRpb24ucmVzb2x2ZUJpbmRpbmc8L2NvZGU+CkBAIC02NDQsNiArNjg4LDUwIEBACiAJ
fQogCiAJLyoqCisJICogUmVzb2x2ZXMgdGhlIGdpdmVuIHN1cGVyIG1ldGhvZCByZWZlcmVuY2Ug
YW5kIHJldHVybnMgdGhlIGJpbmRpbmcgZm9yIGl0LgorCSAqIDxwPgorCSAqIFRoZSBpbXBsZW1l
bnRhdGlvbiBvZiA8Y29kZT5TdXBlck1ldGhvZFJlZmVyZW5jZS5yZXNvbHZlTWV0aG9kQmluZGlu
ZzwvY29kZT4KKwkgKiBmb3J3YXJkcyB0byB0aGlzIG1ldGhvZC4gSG93IHRoZSBtZXRob2QgcmVz
b2x2ZXMgaXMgb2Z0ZW4gYSBmdW5jdGlvbiBvZgorCSAqIHRoZSBjb250ZXh0IGluIHdoaWNoIHRo
ZSBzdXBlciBtZXRob2QgcmVmZXJlbmNlIG5vZGUgaXMgZW1iZWRkZWQgYXMgd2VsbCBhcworCSAq
IHRoZSBzdXBlciBtZXRob2QgcmVmZXJlbmNlIHN1YnRyZWUgaXRzZWxmLgorCSAqIDwvcD4KKwkg
KiA8cD4KKwkgKiBUaGUgZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiBvZiB0aGlzIG1ldGhvZCByZXR1
cm5zIDxjb2RlPm51bGw8L2NvZGU+LgorCSAqIFN1YmNsYXNzZXMgbWF5IHJlaW1wbGVtZW50Lgor
CSAqIDwvcD4KKwkgKgorCSAqIEBwYXJhbSBtZXRob2RSZWZlcmVuY2UgdGhlIHN1cGVyIG1ldGhv
ZCByZWZlcmVuY2Ugb2YgaW50ZXJlc3QKKwkgKiBAcmV0dXJuIHRoZSBiaW5kaW5nIGZvciB0aGUg
Z2l2ZW4gc3VwZXIgbWV0aG9kIHJlZmVyZW5jZSwgb3IKKwkgKiAgICA8Y29kZT5udWxsPC9jb2Rl
PiBpZiBubyBiaW5kaW5nIGlzIGF2YWlsYWJsZQorCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAor
CSAqLworCUlNZXRob2RCaW5kaW5nIHJlc29sdmVNZXRob2QoU3VwZXJNZXRob2RSZWZlcmVuY2Ug
bWV0aG9kUmVmZXJlbmNlKSB7CisJCXJldHVybiBudWxsOworCX0KKworCS8qKgorCSAqIFJlc29s
dmVzIHRoZSBnaXZlbiB0eXBlIG1ldGhvZCByZWZlcmVuY2UgYW5kIHJldHVybnMgdGhlIGJpbmRp
bmcgZm9yIGl0LgorCSAqIDxwPgorCSAqIFRoZSBpbXBsZW1lbnRhdGlvbiBvZiA8Y29kZT5UeXBl
TWV0aG9kUmVmZXJlbmNlLnJlc29sdmVNZXRob2RCaW5kaW5nPC9jb2RlPgorCSAqIGZvcndhcmRz
IHRvIHRoaXMgbWV0aG9kLiBIb3cgdGhlIG1ldGhvZCByZXNvbHZlcyBpcyBvZnRlbiBhIGZ1bmN0
aW9uIG9mCisJICogdGhlIGNvbnRleHQgaW4gd2hpY2ggdGhlIHR5cGUgbWV0aG9kIHJlZmVyZW5j
ZSBub2RlIGlzIGVtYmVkZGVkIGFzIHdlbGwgYXMKKwkgKiB0aGUgdHlwZSBtZXRob2QgcmVmZXJl
bmNlIHN1YnRyZWUgaXRzZWxmLgorCSAqIDwvcD4KKwkgKiA8cD4KKwkgKiBUaGUgZGVmYXVsdCBp
bXBsZW1lbnRhdGlvbiBvZiB0aGlzIG1ldGhvZCByZXR1cm5zIDxjb2RlPm51bGw8L2NvZGU+Lgor
CSAqIFN1YmNsYXNzZXMgbWF5IHJlaW1wbGVtZW50LgorCSAqIDwvcD4KKwkgKgorCSAqIEBwYXJh
bSBtZXRob2RSZWZlcmVuY2UgdGhlIHR5cGUgbWV0aG9kIHJlZmVyZW5jZSBvZiBpbnRlcmVzdAor
CSAqIEByZXR1cm4gdGhlIGJpbmRpbmcgZm9yIHRoZSBnaXZlbiB0eXBlIG1ldGhvZCByZWZlcmVu
Y2UsIG9yCisJICogICAgPGNvZGU+bnVsbDwvY29kZT4gaWYgbm8gYmluZGluZyBpcyBhdmFpbGFi
bGUKKwkgKiBAc2luY2UgMy45IEJFVEFfSkFWQTgKKwkgKi8KKwlJTWV0aG9kQmluZGluZyByZXNv
bHZlTWV0aG9kKFR5cGVNZXRob2RSZWZlcmVuY2UgbWV0aG9kUmVmZXJlbmNlKSB7CisJCXJldHVy
biBudWxsOworCX0KKworCS8qKgogCSAqIFJlc29sdmVzIHRoZSBnaXZlbiBuYW1lIGFuZCByZXR1
cm5zIHRoZSB0eXBlIGJpbmRpbmcgZm9yIGl0LgogCSAqIDxwPgogCSAqIFRoZSBpbXBsZW1lbnRh
dGlvbiBvZiA8Y29kZT5OYW1lLnJlc29sdmVCaW5kaW5nPC9jb2RlPiBmb3J3YXJkcyB0bwpkaWZm
IC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2Rv
bS9DcmVhdGlvblJlZmVyZW5jZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL2RvbS9DcmVhdGlvblJlZmVyZW5jZS5qYXZhCm5ldyBmaWxlIG1vZGUg
MTAwNjQ0CmluZGV4IDAwMDAwMDAuLjVkYzU5ZTcKLS0tIC9kZXYvbnVsbAorKysgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0NyZWF0aW9uUmVmZXJl
bmNlLmphdmEKQEAgLTAsMCArMSwyNjEgQEAKKy8qKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCisgKiBD
b3B5cmlnaHQgKGMpIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBBbGwgcmln
aHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxz
CisgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1
YmxpYyBMaWNlbnNlIHYxLjAKKyAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9u
LCBhbmQgaXMgYXZhaWxhYmxlIGF0CisgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2Vw
bC12MTAuaHRtbAorICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHkt
ZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0
eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZh
bHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0
aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgorICogCisgKiBDb250cmlidXRvcnM6Cisg
KiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCisg
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKi8KK3BhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9t
OworCitpbXBvcnQgamF2YS51dGlsLkFycmF5TGlzdDsKK2ltcG9ydCBqYXZhLnV0aWwuTGlzdDsK
KworLyoqCisgKiBDcmVhdGlvbiBSZWZlcmVuY2UgZXhwcmVzc2lvbiBBU1Qgbm9kZSB0eXBlLiBB
ZGRlZCBpbiBKTFM0IEFQSS4KKyAqIAorICogPHByZT4KKyAqIENyZWF0aW9uUmVmZXJlbmNlOgor
ICogICAgIEV4cHJlc3Npb24gPGI+Ojo8L2I+IAorICogICAgICAgICBbIDxiPiZsdDs8L2I+IFR5
cGUgeyA8Yj4sPC9iPiBUeXBlIH0gPGI+Jmd0OzwvYj4gXQorICogICAgICAgICA8Yj4gbmV3IDwv
Yj4KKyAqIDwvcHJlPgorICoKKyAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAorICogQG5vaW5zdGFu
dGlhdGUgVGhpcyBjbGFzcyBpcyBub3QgaW50ZW5kZWQgdG8gYmUgaW5zdGFudGlhdGVkIGJ5IGNs
aWVudHMuCisgKi8KK3B1YmxpYyBjbGFzcyBDcmVhdGlvblJlZmVyZW5jZSBleHRlbmRzIEV4cHJl
c3Npb24geworCisJLyoqCisJICogVGhlICJleHByZXNzaW9uIiBzdHJ1Y3R1cmFsIHByb3BlcnR5
IG9mIHRoaXMgbm9kZSB0eXBlIChjaGlsZCB0eXBlOiB7QGxpbmsgRXhwcmVzc2lvbn0pLgorCSAq
LworCXB1YmxpYyBzdGF0aWMgZmluYWwgQ2hpbGRQcm9wZXJ0eURlc2NyaXB0b3IgRVhQUkVTU0lP
Tl9QUk9QRVJUWSA9CisJCW5ldyBDaGlsZFByb3BlcnR5RGVzY3JpcHRvcihDcmVhdGlvblJlZmVy
ZW5jZS5jbGFzcywgImV4cHJlc3Npb24iLCBFeHByZXNzaW9uLmNsYXNzLCBNQU5EQVRPUlksIENZ
Q0xFX1JJU0spOyAvLyROT04tTkxTLTEkCisKKwkvKioKKwkgKiBUaGUgInR5cGVBcmd1bWVudHMi
IHN0cnVjdHVyYWwgcHJvcGVydHkgb2YgdGhpcyBub2RlIHR5cGUgKGVsZW1lbnQgdHlwZToge0Bs
aW5rIFR5cGV9KSAKKwkgKi8KKwlwdWJsaWMgc3RhdGljIGZpbmFsIENoaWxkTGlzdFByb3BlcnR5
RGVzY3JpcHRvciBUWVBFX0FSR1VNRU5UU19QUk9QRVJUWSA9CisJCW5ldyBDaGlsZExpc3RQcm9w
ZXJ0eURlc2NyaXB0b3IoQ3JlYXRpb25SZWZlcmVuY2UuY2xhc3MsICJ0eXBlQXJndW1lbnRzIiwg
VHlwZS5jbGFzcywgTk9fQ1lDTEVfUklTSyk7IC8vJE5PTi1OTFMtMSQKKworCS8qKgorCSAqIEEg
bGlzdCBvZiBwcm9wZXJ0eSBkZXNjcmlwdG9ycyAoZWxlbWVudCB0eXBlOgorCSAqIHtAbGluayBT
dHJ1Y3R1cmFsUHJvcGVydHlEZXNjcmlwdG9yfSksCisJICogb3IgbnVsbCBpZiB1bmluaXRpYWxp
emVkLgorCSAqLworCXByaXZhdGUgc3RhdGljIGZpbmFsIExpc3QgUFJPUEVSVFlfREVTQ1JJUFRP
UlNfOF8wOworCQorCXN0YXRpYyB7CisJCUxpc3QgcHJvcGVydHlMaXN0ID0gbmV3IEFycmF5TGlz
dCg0KTsKKwkJY3JlYXRlUHJvcGVydHlMaXN0KENyZWF0aW9uUmVmZXJlbmNlLmNsYXNzLCBwcm9w
ZXJ0eUxpc3QpOworCQlhZGRQcm9wZXJ0eShFWFBSRVNTSU9OX1BST1BFUlRZLCBwcm9wZXJ0eUxp
c3QpOworCQlhZGRQcm9wZXJ0eShUWVBFX0FSR1VNRU5UU19QUk9QRVJUWSwgcHJvcGVydHlMaXN0
KTsKKwkJUFJPUEVSVFlfREVTQ1JJUFRPUlNfOF8wID0gcmVhcFByb3BlcnR5TGlzdChwcm9wZXJ0
eUxpc3QpOworCX0KKwkKKwkvKioKKwkgKiBSZXR1cm5zIGEgbGlzdCBvZiBzdHJ1Y3R1cmFsIHBy
b3BlcnR5IGRlc2NyaXB0b3JzIGZvciB0aGlzIG5vZGUgdHlwZS4KKwkgKiBDbGllbnRzIG11c3Qg
bm90IG1vZGlmeSB0aGUgcmVzdWx0LgorCSAqCisJICogQHBhcmFtIGFwaUxldmVsIHRoZSBBUEkg
bGV2ZWw7IG9uZSBvZiB0aGUgQVNULkpMUyogY29uc3RhbnRzCisJICogQHJldHVybiBhIGxpc3Qg
b2YgcHJvcGVydHkgZGVzY3JpcHRvcnMgKGVsZW1lbnQgdHlwZToKKwkgKiB7QGxpbmsgU3RydWN0
dXJhbFByb3BlcnR5RGVzY3JpcHRvcn0pCisJICovCisJcHVibGljIHN0YXRpYyBMaXN0IHByb3Bl
cnR5RGVzY3JpcHRvcnMoaW50IGFwaUxldmVsKSB7CisJCXJldHVybiBQUk9QRVJUWV9ERVNDUklQ
VE9SU184XzA7CisJfQorCisJLyoqCisJICogVGhlIGV4cHJlc3Npb247IGxhemlseSBpbml0aWFs
aXplZDsgZGVmYXVsdHMgdG8gYW4gdW5zcGVjaWZpZWQsCisJICogbGVnYWwgZXhwcmVzc2lvbiAo
YSBzaW1wbGUgbmFtZSkuCisJICovCisJcHJpdmF0ZSBFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBu
dWxsOworCisJLyoqCisJICogVGhlIHR5cGUgYXJndW1lbnRzIChlbGVtZW50IHR5cGU6IHtAbGlu
ayBUeXBlfSkuCisJICogRGVmYXVsdHMgdG8gYW4gZW1wdHkgbGlzdC4KKwkgKi8KKwlwcml2YXRl
IEFTVE5vZGUuTm9kZUxpc3QgdHlwZUFyZ3VtZW50cyA9CisJCW5ldyBBU1ROb2RlLk5vZGVMaXN0
KFRZUEVfQVJHVU1FTlRTX1BST1BFUlRZKTsKKwkKKwkvKioKKwkgKiBDcmVhdGVzIGEgbmV3IEFT
VCBub2RlIGZvciBhbiBDcmVhdGlvblJlZmVyZW5jZSBkZWNsYXJhdGlvbiBvd25lZAorCSAqIGJ5
IHRoZSBnaXZlbiBBU1QuCisJICogPHA+CisJICogTi5CLiBUaGlzIGNvbnN0cnVjdG9yIGlzIHBh
Y2thZ2UtcHJpdmF0ZTsgYWxsIHN1YmNsYXNzZXMgbXVzdCBiZQorCSAqIGRlY2xhcmVkIGluIHRo
ZSBzYW1lIHBhY2thZ2U7IGNsaWVudHMgYXJlIHVuYWJsZSB0byBkZWNsYXJlCisJICogYWRkaXRp
b25hbCBzdWJjbGFzc2VzLgorCSAqIDwvcD4KKwkgKgorCSAqIEBwYXJhbSBhc3QgdGhlIEFTVCB0
aGF0IGlzIHRvIG93biB0aGlzIG5vZGUKKwkgKi8KKwlDcmVhdGlvblJlZmVyZW5jZShBU1QgYXN0
KSB7CisJCXN1cGVyKGFzdCk7CisJCXVuc3VwcG9ydGVkSW4yXzNfNCgpOworCX0KKworCS8qIChv
bWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQorCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1RO
b2RlLgorCSAqLworCWZpbmFsIExpc3QgaW50ZXJuYWxTdHJ1Y3R1cmFsUHJvcGVydGllc0ZvclR5
cGUoaW50IGFwaUxldmVsKSB7CisJCXJldHVybiBwcm9wZXJ0eURlc2NyaXB0b3JzKGFwaUxldmVs
KTsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKKwkgKiBNZXRob2Qg
ZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8KKwlmaW5hbCBBU1ROb2RlIGludGVybmFsR2V0U2V0
Q2hpbGRQcm9wZXJ0eShDaGlsZFByb3BlcnR5RGVzY3JpcHRvciBwcm9wZXJ0eSwgYm9vbGVhbiBn
ZXQsIEFTVE5vZGUgY2hpbGQpIHsKKwkJaWYgKHByb3BlcnR5ID09IEVYUFJFU1NJT05fUFJPUEVS
VFkpIHsKKwkJCWlmIChnZXQpIHsKKwkJCQlyZXR1cm4gZ2V0RXhwcmVzc2lvbigpOworCQkJfSBl
bHNlIHsKKwkJCQlzZXRFeHByZXNzaW9uKChFeHByZXNzaW9uKSBjaGlsZCk7CisJCQkJcmV0dXJu
IG51bGw7CisJCQl9CisJCX0KKwkJLy8gYWxsb3cgZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiB0byBm
bGFnIHRoZSBlcnJvcgorCQlyZXR1cm4gc3VwZXIuaW50ZXJuYWxHZXRTZXRDaGlsZFByb3BlcnR5
KHByb3BlcnR5LCBnZXQsIGNoaWxkKTsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlz
IG1ldGhvZCkKKwkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8KKwlmaW5hbCBM
aXN0IGludGVybmFsR2V0Q2hpbGRMaXN0UHJvcGVydHkoQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlw
dG9yIHByb3BlcnR5KSB7CisJCWlmIChwcm9wZXJ0eSA9PSBUWVBFX0FSR1VNRU5UU19QUk9QRVJU
WSkgeworCQkJcmV0dXJuIHR5cGVBcmd1bWVudHMoKTsKKwkJfQorCQkvLyBhbGxvdyBkZWZhdWx0
IGltcGxlbWVudGF0aW9uIHRvIGZsYWcgdGhlIGVycm9yCisJCXJldHVybiBzdXBlci5pbnRlcm5h
bEdldENoaWxkTGlzdFByb3BlcnR5KHByb3BlcnR5KTsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9j
IGZvciB0aGlzIG1ldGhvZCkKKwkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8K
KwlmaW5hbCBpbnQgZ2V0Tm9kZVR5cGUwKCkgeworCQlyZXR1cm4gQ1JFQVRJT05fUkVGRVJFTkNF
OworCX0KKworCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQorCSAqIE1ldGhvZCBk
ZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAqLworCUFTVE5vZGUgY2xvbmUwKEFTVCB0YXJnZXQpIHsK
KwkJQ3JlYXRpb25SZWZlcmVuY2UgcmVzdWx0ID0gbmV3IENyZWF0aW9uUmVmZXJlbmNlKHRhcmdl
dCk7CisJCXJlc3VsdC5zZXRTb3VyY2VSYW5nZShnZXRTdGFydFBvc2l0aW9uKCksIGdldExlbmd0
aCgpKTsKKwkJcmVzdWx0LnNldEV4cHJlc3Npb24oCisJCQkoRXhwcmVzc2lvbikgQVNUTm9kZS5j
b3B5U3VidHJlZSh0YXJnZXQsIGdldEV4cHJlc3Npb24oKSkpOworCQlyZXN1bHQudHlwZUFyZ3Vt
ZW50cygpLmFkZEFsbChBU1ROb2RlLmNvcHlTdWJ0cmVlcyh0YXJnZXQsIHR5cGVBcmd1bWVudHMo
KSkpOworCQlyZXR1cm4gcmVzdWx0OworCX0KKworCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMg
bWV0aG9kKQorCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAqLworCWZpbmFsIGJv
b2xlYW4gc3VidHJlZU1hdGNoMChBU1RNYXRjaGVyIG1hdGNoZXIsIE9iamVjdCBvdGhlcikgewor
CQkvLyBkaXNwYXRjaCB0byBjb3JyZWN0IG92ZXJsb2FkZWQgbWF0Y2ggbWV0aG9kCisJCXJldHVy
biBtYXRjaGVyLm1hdGNoKHRoaXMsIG90aGVyKTsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9jIGZv
ciB0aGlzIG1ldGhvZCkKKwkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8KKwl2
b2lkIGFjY2VwdDAoQVNUVmlzaXRvciB2aXNpdG9yKSB7CisJCWJvb2xlYW4gdmlzaXRDaGlsZHJl
biA9IHZpc2l0b3IudmlzaXQodGhpcyk7CisJCWlmICh2aXNpdENoaWxkcmVuKSB7CisJCQkvLyB2
aXNpdCBjaGlsZHJlbiBpbiBub3JtYWwgbGVmdCB0byByaWdodCByZWFkaW5nIG9yZGVyCisJCQlh
Y2NlcHRDaGlsZCh2aXNpdG9yLCBnZXRFeHByZXNzaW9uKCkpOworCQkJYWNjZXB0Q2hpbGRyZW4o
dmlzaXRvciwgdGhpcy50eXBlQXJndW1lbnRzKTsKKwkJfQorCQl2aXNpdG9yLmVuZFZpc2l0KHRo
aXMpOworCX0KKworCS8qKgorCSAqIFJldHVybnMgdGhlIGV4cHJlc3Npb24gb2YgdGhpcyBDcmVh
dGlvbiBSZWZlcmVuY2UgZXhwcmVzc2lvbiwgb3IKKwkgKiA8Y29kZT5udWxsPC9jb2RlPiBpZiB0
aGVyZSBpcyBub25lLgorCSAqCisJICogQHJldHVybiB0aGUgZXhwcmVzc2lvbiBub2RlLCBvciA8
Y29kZT5udWxsPC9jb2RlPiBpZiB0aGVyZSBpcyBub25lCisJICovCisJcHVibGljIEV4cHJlc3Np
b24gZ2V0RXhwcmVzc2lvbigpIHsKKwkJaWYgKHRoaXMuZXhwcmVzc2lvbiA9PSBudWxsKSB7CisJ
CQkvLyBsYXp5IGluaXQgbXVzdCBiZSB0aHJlYWQtc2FmZSBmb3IgcmVhZGVycworCQkJc3luY2hy
b25pemVkICh0aGlzKSB7CisJCQkJaWYgKHRoaXMuZXhwcmVzc2lvbiA9PSBudWxsKSB7CisJCQkJ
CXByZUxhenlJbml0KCk7CisJCQkJCXRoaXMuZXhwcmVzc2lvbiA9IG5ldyBTaW1wbGVOYW1lKHRo
aXMuYXN0KTsKKwkJCQkJcG9zdExhenlJbml0KHRoaXMuZXhwcmVzc2lvbiwgRVhQUkVTU0lPTl9Q
Uk9QRVJUWSk7CisJCQkJfQkJCQkKKwkJCX0KKwkJfQorCQlyZXR1cm4gdGhpcy5leHByZXNzaW9u
OworCX0KKworCS8qKgorCSAqIFNldHMgdGhlIGV4cHJlc3Npb24gb2YgdGhpcyBDcmVhdGlvbiBS
ZWZlcmVuY2UuCisJICoKKwkgKiBAcGFyYW0gZXhwcmVzc2lvbiB0aGUgZXhwcmVzc2lvbiBub2Rl
LCBvciA8Y29kZT5udWxsPC9jb2RlPiBpZgorCSAqICAgIHRoZXJlIGlzIG5vbmUKKwkgKiBAZXhj
ZXB0aW9uIElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbiBpZjoKKwkgKiA8dWw+CisJICogPGxpPnRo
ZSBub2RlIGJlbG9uZ3MgdG8gYSBkaWZmZXJlbnQgQVNUPC9saT4KKwkgKiA8bGk+dGhlIG5vZGUg
YWxyZWFkeSBoYXMgYSBwYXJlbnQ8L2xpPgorCSAqIDxsaT5hIGN5Y2xlIGluIHdvdWxkIGJlIGNy
ZWF0ZWQ8L2xpPgorCSAqIDwvdWw+CisJICovCisJcHVibGljIHZvaWQgc2V0RXhwcmVzc2lvbihF
eHByZXNzaW9uIGV4cHJlc3Npb24pIHsKKwkJaWYgKGV4cHJlc3Npb24gPT0gbnVsbCkgeworCQkJ
dGhyb3cgbmV3IElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbigpOworCQl9CisJCUFTVE5vZGUgb2xk
Q2hpbGQgPSB0aGlzLmV4cHJlc3Npb247CisJCXByZVJlcGxhY2VDaGlsZChvbGRDaGlsZCwgZXhw
cmVzc2lvbiwgRVhQUkVTU0lPTl9QUk9QRVJUWSk7CisJCXRoaXMuZXhwcmVzc2lvbiA9IGV4cHJl
c3Npb247CisJCXBvc3RSZXBsYWNlQ2hpbGQob2xkQ2hpbGQsIGV4cHJlc3Npb24sIEVYUFJFU1NJ
T05fUFJPUEVSVFkpOworCX0KKworCS8qKgorCSAqIFJldHVybnMgdGhlIGxpdmUgb3JkZXJlZCBs
aXN0IG9mIHR5cGUgYXJndW1lbnRzIG9mIHRoaXMgQ3JlYXRpb24gUmVmZXJlbmNlLgorCSAqCisJ
ICogQHJldHVybiB0aGUgbGl2ZSBsaXN0IG9mIHR5cGUgYXJndW1lbnRzCisJICogICAgKGVsZW1l
bnQgdHlwZToge0BsaW5rIFR5cGV9KQorCSAqLworCXB1YmxpYyBMaXN0IHR5cGVBcmd1bWVudHMo
KSB7CisJCXJldHVybiB0aGlzLnR5cGVBcmd1bWVudHM7CisJfQorCisJLyoqCisJICogUmVzb2x2
ZXMgYW5kIHJldHVybnMgdGhlIGJpbmRpbmcgZm9yIHRoZSBtZXRob2QgcmVmZXJlbmNlIGJ5IHRo
aXMKKwkgKiBleHByZXNzaW9uLgorCSAqIDxwPgorCSAqIE5vdGUgdGhhdCBiaW5kaW5ncyBhcmUg
Z2VuZXJhbGx5IHVuYXZhaWxhYmxlIHVubGVzcyByZXF1ZXN0ZWQgd2hlbiB0aGUKKwkgKiBBU1Qg
aXMgYmVpbmcgYnVpbHQuCisJICogPC9wPgorCSAqCisJICogQHJldHVybiB0aGUgbWV0aG9kIGJp
bmRpbmcsIG9yIDxjb2RlPm51bGw8L2NvZGU+IGlmIHRoZSBiaW5kaW5nIGNhbm5vdAorCSAqIGJl
IHJlc29sdmVkCisJICovCisJcHVibGljIElNZXRob2RCaW5kaW5nIHJlc29sdmVNZXRob2RCaW5k
aW5nKCkgeworCQlyZXR1cm4gdGhpcy5hc3QuZ2V0QmluZGluZ1Jlc29sdmVyKCkucmVzb2x2ZU1l
dGhvZCh0aGlzKTsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKKwkg
KiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8KKwlpbnQgbWVtU2l6ZSgpIHsKKwkJ
Ly8gdHJlYXQgQ29kZSBhcyBmcmVlCisJCXJldHVybiBCQVNFX05PREVfU0laRSArIDIgKiA0Owor
CX0KKworCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQorCSAqIE1ldGhvZCBkZWNs
YXJlZCBvbiBBU1ROb2RlLgorCSAqLworCWludCB0cmVlU2l6ZSgpIHsKKwkJcmV0dXJuCisJCQlt
ZW1TaXplKCkKKwkJCSsgKHRoaXMuZXhwcmVzc2lvbiA9PSBudWxsID8gMCA6IGdldEV4cHJlc3Np
b24oKS50cmVlU2l6ZSgpKQorCQkJKyAodGhpcy50eXBlQXJndW1lbnRzID09IG51bGwgPyAwIDog
dGhpcy50eXBlQXJndW1lbnRzLmxpc3RTaXplKCkpOworCX0KK30KXCBObyBuZXdsaW5lIGF0IGVu
ZCBvZiBmaWxlCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlw
c2UvamR0L2NvcmUvZG9tL0RlZmF1bHRBU1RWaXNpdG9yLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0RlZmF1bHRBU1RWaXNpdG9yLmphdmEK
aW5kZXggMDI5ZjNjYy4uYzhiZmZlNSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
ZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9EZWZhdWx0QVNUVmlzaXRvci5qYXZhCisrKyBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vRGVmYXVs
dEFTVFZpc2l0b3IuamF2YQpAQCAtOTIsNiArOTIsOSBAQAogCXB1YmxpYyB2b2lkIGVuZFZpc2l0
KENvbnRpbnVlU3RhdGVtZW50IG5vZGUpIHsKIAkJZW5kVmlzaXROb2RlKG5vZGUpOwogCX0KKwlw
dWJsaWMgdm9pZCBlbmRWaXNpdChDcmVhdGlvblJlZmVyZW5jZSBub2RlKSB7CisJCWVuZFZpc2l0
Tm9kZShub2RlKTsKKwl9CiAJcHVibGljIHZvaWQgZW5kVmlzaXQoRG9TdGF0ZW1lbnQgbm9kZSkg
ewogCQllbmRWaXNpdE5vZGUobm9kZSk7CiAJfQpAQCAtMTA1LDYgKzEwOCw5IEBACiAJCWVuZFZp
c2l0Tm9kZShub2RlKTsKIAl9CiAJcHVibGljIHZvaWQgZW5kVmlzaXQoRW51bURlY2xhcmF0aW9u
IG5vZGUpIHsKKwkJZW5kVmlzaXROb2RlKG5vZGUpOworCX0KKwlwdWJsaWMgdm9pZCBlbmRWaXNp
dChFeHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlIG5vZGUpIHsKIAkJZW5kVmlzaXROb2RlKG5vZGUp
OwogCX0KIAlwdWJsaWMgdm9pZCBlbmRWaXNpdChFeHByZXNzaW9uU3RhdGVtZW50IG5vZGUpIHsK
QEAgLTIzOSw3ICsyNDUsOSBAQAogCXB1YmxpYyB2b2lkIGVuZFZpc2l0KFN1cGVyTWV0aG9kSW52
b2NhdGlvbiBub2RlKSB7CiAJCWVuZFZpc2l0Tm9kZShub2RlKTsKIAl9Ci0KKwlwdWJsaWMgdm9p
ZCBlbmRWaXNpdChTdXBlck1ldGhvZFJlZmVyZW5jZSBub2RlKSB7CisJCWVuZFZpc2l0Tm9kZShu
b2RlKTsKKwl9CiAJcHVibGljIHZvaWQgZW5kVmlzaXQoU3dpdGNoQ2FzZSBub2RlKSB7CiAJCWVu
ZFZpc2l0Tm9kZShub2RlKTsKIAl9CkBAIC0yNzIsNiArMjgwLDkgQEAKIAkJZW5kVmlzaXROb2Rl
KG5vZGUpOwogCX0KIAlwdWJsaWMgdm9pZCBlbmRWaXNpdChUeXBlTGl0ZXJhbCBub2RlKSB7CisJ
CWVuZFZpc2l0Tm9kZShub2RlKTsKKwl9CisJcHVibGljIHZvaWQgZW5kVmlzaXQoVHlwZU1ldGhv
ZFJlZmVyZW5jZSBub2RlKSB7CiAJCWVuZFZpc2l0Tm9kZShub2RlKTsKIAl9CiAJcHVibGljIHZv
aWQgZW5kVmlzaXQoVHlwZVBhcmFtZXRlciBub2RlKSB7CkBAIC0zNjMsNiArMzc0LDkgQEAKIAlw
dWJsaWMgYm9vbGVhbiB2aXNpdChDb250aW51ZVN0YXRlbWVudCBub2RlKSB7CiAJCXJldHVybiB2
aXNpdE5vZGUobm9kZSk7CiAJfQorCXB1YmxpYyBib29sZWFuIHZpc2l0KENyZWF0aW9uUmVmZXJl
bmNlIG5vZGUpIHsKKwkJcmV0dXJuIHZpc2l0Tm9kZShub2RlKTsKKwl9CiAJcHVibGljIGJvb2xl
YW4gdmlzaXQoRG9TdGF0ZW1lbnQgbm9kZSkgewogCQlyZXR1cm4gdmlzaXROb2RlKG5vZGUpOwog
CX0KQEAgLTM3Niw2ICszOTAsOSBAQAogCQlyZXR1cm4gdmlzaXROb2RlKG5vZGUpOwogCX0KIAlw
dWJsaWMgYm9vbGVhbiB2aXNpdChFbnVtRGVjbGFyYXRpb24gbm9kZSkgeworCQlyZXR1cm4gdmlz
aXROb2RlKG5vZGUpOworCX0KKwlwdWJsaWMgYm9vbGVhbiB2aXNpdChFeHByZXNzaW9uTWV0aG9k
UmVmZXJlbmNlIG5vZGUpIHsKIAkJcmV0dXJuIHZpc2l0Tm9kZShub2RlKTsKIAl9CiAJcHVibGlj
IGJvb2xlYW4gdmlzaXQoRXhwcmVzc2lvblN0YXRlbWVudCBub2RlKSB7CkBAIC01MjAsNiArNTM3
LDEwIEBACiAJCXJldHVybiB2aXNpdE5vZGUobm9kZSk7CiAJfQogCisJcHVibGljIGJvb2xlYW4g
dmlzaXQoU3VwZXJNZXRob2RSZWZlcmVuY2Ugbm9kZSkgeworCQlyZXR1cm4gdmlzaXROb2RlKG5v
ZGUpOworCX0KKwogCXB1YmxpYyBib29sZWFuIHZpc2l0KFN3aXRjaENhc2Ugbm9kZSkgewogCQly
ZXR1cm4gdmlzaXROb2RlKG5vZGUpOwogCX0KQEAgLTU2NCw2ICs1ODUsMTAgQEAKIAkJcmV0dXJu
IHZpc2l0Tm9kZShub2RlKTsKIAl9CiAKKwlwdWJsaWMgYm9vbGVhbiB2aXNpdChUeXBlTWV0aG9k
UmVmZXJlbmNlIG5vZGUpIHsKKwkJcmV0dXJuIHZpc2l0Tm9kZShub2RlKTsKKwl9CisKIAlwdWJs
aWMgYm9vbGVhbiB2aXNpdChUeXBlUGFyYW1ldGVyIG5vZGUpIHsKIAkJcmV0dXJuIHZpc2l0Tm9k
ZShub2RlKTsKIAl9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2NvcmUvZG9tL0RlZmF1bHRCaW5kaW5nUmVzb2x2ZXIuamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vRGVmYXVsdEJpbmRpbmdS
ZXNvbHZlci5qYXZhCmluZGV4IDQ5ZjU4NTYuLjI4MDBhMDkgMTAwNjQ0Ci0tLSBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vRGVmYXVsdEJpbmRpbmdS
ZXNvbHZlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9q
ZHQvY29yZS9kb20vRGVmYXVsdEJpbmRpbmdSZXNvbHZlci5qYXZhCkBAIC03MDksNiArNzA5LDEw
IEBACiAJCQkJY2FzZSBBU1ROb2RlLklORklYX0VYUFJFU1NJT04gOgogCQkJCWNhc2UgQVNUTm9k
ZS5JTlNUQU5DRU9GX0VYUFJFU1NJT04gOgogCQkJCWNhc2UgQVNUTm9kZS5MQU1CREFfRVhQUkVT
U0lPTjoKKwkJCQljYXNlIEFTVE5vZGUuQ1JFQVRJT05fUkVGRVJFTkNFOgorCQkJCWNhc2UgQVNU
Tm9kZS5FWFBSRVNTSU9OX01FVEhPRF9SRUZFUkVOQ0U6CisJCQkJY2FzZSBBU1ROb2RlLlRZUEVf
TUVUSE9EX1JFRkVSRU5DRToKKwkJCQljYXNlIEFTVE5vZGUuU1VQRVJfTUVUSE9EX1JFRkVSRU5D
RSA6CiAJCQkJY2FzZSBBU1ROb2RlLkZJRUxEX0FDQ0VTUyA6CiAJCQkJY2FzZSBBU1ROb2RlLlNV
UEVSX0ZJRUxEX0FDQ0VTUyA6CiAJCQkJY2FzZSBBU1ROb2RlLkFSUkFZX0FDQ0VTUyA6CkBAIC04
NzUsMTUgKzg3OSwzNSBAQAogCS8qCiAJICogTWV0aG9kIGRlY2xhcmVkIG9uIEJpbmRpbmdSZXNv
bHZlci4KIAkgKi8KLQlzeW5jaHJvbml6ZWQgSU1ldGhvZEJpbmRpbmcgcmVzb2x2ZU1ldGhvZChN
ZXRob2REZWNsYXJhdGlvbiBtZXRob2QpIHsKLQkJT2JqZWN0IG9sZE5vZGUgPSB0aGlzLm5ld0Fz
dFRvT2xkQXN0LmdldChtZXRob2QpOwotCQlpZiAob2xkTm9kZSBpbnN0YW5jZW9mIEFic3RyYWN0
TWV0aG9kRGVjbGFyYXRpb24pIHsKLQkJCUFic3RyYWN0TWV0aG9kRGVjbGFyYXRpb24gbWV0aG9k
RGVjbGFyYXRpb24gPSAoQWJzdHJhY3RNZXRob2REZWNsYXJhdGlvbikgb2xkTm9kZTsKLQkJCUlN
ZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcgPSBnZXRNZXRob2RCaW5kaW5nKG1ldGhvZERlY2xh
cmF0aW9uLmJpbmRpbmcpOworCXN5bmNocm9uaXplZCBJTWV0aG9kQmluZGluZyByZXNvbHZlTWV0
aG9kKENyZWF0aW9uUmVmZXJlbmNlIGNyZWF0aW9uUmVmZXJlbmNlKSB7CisJCU9iamVjdCBvbGRO
b2RlID0gdGhpcy5uZXdBc3RUb09sZEFzdC5nZXQoY3JlYXRpb25SZWZlcmVuY2UpOworCQlpZiAo
b2xkTm9kZSBpbnN0YW5jZW9mIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3Qu
UmVmZXJlbmNlRXhwcmVzc2lvbikgeworCQkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBp
bGVyLmFzdC5SZWZlcmVuY2VFeHByZXNzaW9uIHJlZmVyZW5jZUV4cHJlc3Npb24gPSAob3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5SZWZlcmVuY2VFeHByZXNzaW9uKSBvbGRO
b2RlOworCQkJSU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZyA9IGdldE1ldGhvZEJpbmRpbmco
cmVmZXJlbmNlRXhwcmVzc2lvbi5iaW5kaW5nKTsKIAkJCWlmIChtZXRob2RCaW5kaW5nID09IG51
bGwpIHsKIAkJCQlyZXR1cm4gbnVsbDsKIAkJCX0KLQkJCXRoaXMuYmluZGluZ3NUb0FzdE5vZGVz
LnB1dChtZXRob2RCaW5kaW5nLCBtZXRob2QpOworCQkJdGhpcy5iaW5kaW5nc1RvQXN0Tm9kZXMu
cHV0KG1ldGhvZEJpbmRpbmcsIGNyZWF0aW9uUmVmZXJlbmNlKTsKKwkJCVN0cmluZyBrZXkgPSBt
ZXRob2RCaW5kaW5nLmdldEtleSgpOworCQkJaWYgKGtleSAhPSBudWxsKSB7CisJCQkJdGhpcy5i
aW5kaW5nVGFibGVzLmJpbmRpbmdLZXlzVG9CaW5kaW5ncy5wdXQoa2V5LCBtZXRob2RCaW5kaW5n
KTsKKwkJCX0KKwkJCXJldHVybiBtZXRob2RCaW5kaW5nOworCQl9CisJCXJldHVybiBudWxsOwor
CX0KKwkvKgorCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBCaW5kaW5nUmVzb2x2ZXIuCisJICovCisJ
c3luY2hyb25pemVkIElNZXRob2RCaW5kaW5nIHJlc29sdmVNZXRob2QoRXhwcmVzc2lvbk1ldGhv
ZFJlZmVyZW5jZSBtZXRob2RSZWZlcmVuY2UpIHsKKwkJT2JqZWN0IG9sZE5vZGUgPSB0aGlzLm5l
d0FzdFRvT2xkQXN0LmdldChtZXRob2RSZWZlcmVuY2UpOworCQlpZiAob2xkTm9kZSBpbnN0YW5j
ZW9mIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuUmVmZXJlbmNlRXhwcmVz
c2lvbikgeworCQkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5SZWZlcmVu
Y2VFeHByZXNzaW9uIHJlZmVyZW5jZUV4cHJlc3Npb24gPSAob3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmFzdC5SZWZlcmVuY2VFeHByZXNzaW9uKSBvbGROb2RlOworCQkJSU1ldGhv
ZEJpbmRpbmcgbWV0aG9kQmluZGluZyA9IGdldE1ldGhvZEJpbmRpbmcocmVmZXJlbmNlRXhwcmVz
c2lvbi5iaW5kaW5nKTsKKwkJCWlmIChtZXRob2RCaW5kaW5nID09IG51bGwpIHsKKwkJCQlyZXR1
cm4gbnVsbDsKKwkJCX0KKwkJCXRoaXMuYmluZGluZ3NUb0FzdE5vZGVzLnB1dChtZXRob2RCaW5k
aW5nLCBtZXRob2RSZWZlcmVuY2UpOwogCQkJU3RyaW5nIGtleSA9IG1ldGhvZEJpbmRpbmcuZ2V0
S2V5KCk7CiAJCQlpZiAoa2V5ICE9IG51bGwpIHsKIAkJCQl0aGlzLmJpbmRpbmdUYWJsZXMuYmlu
ZGluZ0tleXNUb0JpbmRpbmdzLnB1dChrZXksIG1ldGhvZEJpbmRpbmcpOwpAQCAtOTA0LDYgKzky
OCwyNiBAQAogCQkJCXJldHVybiBudWxsOwogCQkJfQogCQkJdGhpcy5iaW5kaW5nc1RvQXN0Tm9k
ZXMucHV0KG1ldGhvZEJpbmRpbmcsIGxhbWJkYSk7CisJCQlTdHJpbmcga2V5ID0gbWV0aG9kQmlu
ZGluZy5nZXRLZXkoKTsKKwkJCWlmIChrZXkgIT0gbnVsbCkgeworCQkJCXRoaXMuYmluZGluZ1Rh
Ymxlcy5iaW5kaW5nS2V5c1RvQmluZGluZ3MucHV0KGtleSwgbWV0aG9kQmluZGluZyk7CisJCQl9
CisJCQlyZXR1cm4gbWV0aG9kQmluZGluZzsKKwkJfQorCQlyZXR1cm4gbnVsbDsKKwl9CisJLyoK
KwkgKiBNZXRob2QgZGVjbGFyZWQgb24gQmluZGluZ1Jlc29sdmVyLgorCSAqLworCXN5bmNocm9u
aXplZCBJTWV0aG9kQmluZGluZyByZXNvbHZlTWV0aG9kKE1ldGhvZERlY2xhcmF0aW9uIG1ldGhv
ZCkgeworCQlPYmplY3Qgb2xkTm9kZSA9IHRoaXMubmV3QXN0VG9PbGRBc3QuZ2V0KG1ldGhvZCk7
CisJCWlmIChvbGROb2RlIGluc3RhbmNlb2YgQWJzdHJhY3RNZXRob2REZWNsYXJhdGlvbikgewor
CQkJQWJzdHJhY3RNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiA9IChBYnN0cmFj
dE1ldGhvZERlY2xhcmF0aW9uKSBvbGROb2RlOworCQkJSU1ldGhvZEJpbmRpbmcgbWV0aG9kQmlu
ZGluZyA9IGdldE1ldGhvZEJpbmRpbmcobWV0aG9kRGVjbGFyYXRpb24uYmluZGluZyk7CisJCQlp
ZiAobWV0aG9kQmluZGluZyA9PSBudWxsKSB7CisJCQkJcmV0dXJuIG51bGw7CisJCQl9CisJCQl0
aGlzLmJpbmRpbmdzVG9Bc3ROb2Rlcy5wdXQobWV0aG9kQmluZGluZywgbWV0aG9kKTsKIAkJCVN0
cmluZyBrZXkgPSBtZXRob2RCaW5kaW5nLmdldEtleSgpOwogCQkJaWYgKGtleSAhPSBudWxsKSB7
CiAJCQkJdGhpcy5iaW5kaW5nVGFibGVzLmJpbmRpbmdLZXlzVG9CaW5kaW5ncy5wdXQoa2V5LCBt
ZXRob2RCaW5kaW5nKTsKQEAgLTkzNCw3ICs5NzgsNDYgQEAKIAkJfQogCQlyZXR1cm4gbnVsbDsK
IAl9Ci0KKwkvKgorCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBCaW5kaW5nUmVzb2x2ZXIuCisJICov
CisJc3luY2hyb25pemVkIElNZXRob2RCaW5kaW5nIHJlc29sdmVNZXRob2QoU3VwZXJNZXRob2RS
ZWZlcmVuY2UgbWV0aG9kUmVmZXJlbmNlKSB7CisJCU9iamVjdCBvbGROb2RlID0gdGhpcy5uZXdB
c3RUb09sZEFzdC5nZXQobWV0aG9kUmVmZXJlbmNlKTsKKwkJaWYgKG9sZE5vZGUgaW5zdGFuY2Vv
ZiBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlJlZmVyZW5jZUV4cHJlc3Np
b24pIHsKKwkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuUmVmZXJlbmNl
RXhwcmVzc2lvbiByZWZlcmVuY2VFeHByZXNzaW9uID0gKG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb21waWxlci5hc3QuUmVmZXJlbmNlRXhwcmVzc2lvbikgb2xkTm9kZTsKKwkJCUlNZXRob2RC
aW5kaW5nIG1ldGhvZEJpbmRpbmcgPSBnZXRNZXRob2RCaW5kaW5nKHJlZmVyZW5jZUV4cHJlc3Np
b24uYmluZGluZyk7CisJCQlpZiAobWV0aG9kQmluZGluZyA9PSBudWxsKSB7CisJCQkJcmV0dXJu
IG51bGw7CisJCQl9CisJCQl0aGlzLmJpbmRpbmdzVG9Bc3ROb2Rlcy5wdXQobWV0aG9kQmluZGlu
ZywgbWV0aG9kUmVmZXJlbmNlKTsKKwkJCVN0cmluZyBrZXkgPSBtZXRob2RCaW5kaW5nLmdldEtl
eSgpOworCQkJaWYgKGtleSAhPSBudWxsKSB7CisJCQkJdGhpcy5iaW5kaW5nVGFibGVzLmJpbmRp
bmdLZXlzVG9CaW5kaW5ncy5wdXQoa2V5LCBtZXRob2RCaW5kaW5nKTsKKwkJCX0KKwkJCXJldHVy
biBtZXRob2RCaW5kaW5nOworCQl9CisJCXJldHVybiBudWxsOworCX0KKwkvKgorCSAqIE1ldGhv
ZCBkZWNsYXJlZCBvbiBCaW5kaW5nUmVzb2x2ZXIuCisJICovCisJc3luY2hyb25pemVkIElNZXRo
b2RCaW5kaW5nIHJlc29sdmVNZXRob2QoVHlwZU1ldGhvZFJlZmVyZW5jZSBtZXRob2RSZWZlcmVu
Y2UpIHsKKwkJT2JqZWN0IG9sZE5vZGUgPSB0aGlzLm5ld0FzdFRvT2xkQXN0LmdldChtZXRob2RS
ZWZlcmVuY2UpOworCQlpZiAob2xkTm9kZSBpbnN0YW5jZW9mIG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5hc3QuUmVmZXJlbmNlRXhwcmVzc2lvbikgeworCQkJb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5SZWZlcmVuY2VFeHByZXNzaW9uIHJlZmVyZW5jZUV4
cHJlc3Npb24gPSAob3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5SZWZlcmVu
Y2VFeHByZXNzaW9uKSBvbGROb2RlOworCQkJSU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZyA9
IGdldE1ldGhvZEJpbmRpbmcocmVmZXJlbmNlRXhwcmVzc2lvbi5iaW5kaW5nKTsKKwkJCWlmICht
ZXRob2RCaW5kaW5nID09IG51bGwpIHsKKwkJCQlyZXR1cm4gbnVsbDsKKwkJCX0KKwkJCXRoaXMu
YmluZGluZ3NUb0FzdE5vZGVzLnB1dChtZXRob2RCaW5kaW5nLCBtZXRob2RSZWZlcmVuY2UpOwor
CQkJU3RyaW5nIGtleSA9IG1ldGhvZEJpbmRpbmcuZ2V0S2V5KCk7CisJCQlpZiAoa2V5ICE9IG51
bGwpIHsKKwkJCQl0aGlzLmJpbmRpbmdUYWJsZXMuYmluZGluZ0tleXNUb0JpbmRpbmdzLnB1dChr
ZXksIG1ldGhvZEJpbmRpbmcpOworCQkJfQorCQkJcmV0dXJuIG1ldGhvZEJpbmRpbmc7CisJCX0K
KwkJcmV0dXJuIG51bGw7CisJfQogCXN5bmNocm9uaXplZCBJVHlwZUJpbmRpbmcgcmVzb2x2ZVR5
cGVCaW5kaW5nRm9yTmFtZShOYW1lIG5hbWUpIHsKIAkJb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmFzdC5BU1ROb2RlIG5vZGUgPSAob3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmFzdC5BU1ROb2RlKSB0aGlzLm5ld0FzdFRvT2xkQXN0LmdldChuYW1lKTsKIAkJaW50
IGluZGV4ID0gbmFtZS5pbmRleDsKQEAgLTExMzgsNiArMTIyMSwxMSBAQAogCQl9IGVsc2UgaWYg
KG5vZGUgaW5zdGFuY2VvZiBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0Lk1l
bWJlclZhbHVlUGFpcikgewogCQkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFz
dC5NZW1iZXJWYWx1ZVBhaXIgbWVtYmVyVmFsdWVQYWlyID0gKG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5hc3QuTWVtYmVyVmFsdWVQYWlyKSBub2RlOwogCQkJSU1ldGhvZEJpbmRp
bmcgbWV0aG9kID0gZ2V0TWV0aG9kQmluZGluZyhtZW1iZXJWYWx1ZVBhaXIuYmluZGluZyk7CisJ
CQlpZiAobWV0aG9kID09IG51bGwpIHJldHVybiBudWxsOworCQkJcmV0dXJuIG1ldGhvZC5nZXRS
ZXR1cm5UeXBlKCk7CisJCX0gZWxzZSBpZiAobm9kZSBpbnN0YW5jZW9mIG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5hc3QuUmVmZXJlbmNlRXhwcmVzc2lvbikgeworCQkJb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5SZWZlcmVuY2VFeHByZXNzaW9uIHJlZmVy
ZW5jZUV4cHJlc3Npb24gPSAob3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5S
ZWZlcmVuY2VFeHByZXNzaW9uKSBub2RlOworCQkJSU1ldGhvZEJpbmRpbmcgbWV0aG9kID0gZ2V0
TWV0aG9kQmluZGluZyhyZWZlcmVuY2VFeHByZXNzaW9uLmJpbmRpbmcpOwogCQkJaWYgKG1ldGhv
ZCA9PSBudWxsKSByZXR1cm4gbnVsbDsKIAkJCXJldHVybiBtZXRob2QuZ2V0UmV0dXJuVHlwZSgp
OwogCQl9CkBAIC0xNDAwLDYgKzE0ODgsOSBAQAogCQl9IGVsc2UgaWYgKG5vZGUgaW5zdGFuY2Vv
ZiBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0Lk1lbWJlclZhbHVlUGFpcikg
ewogCQkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5NZW1iZXJWYWx1ZVBh
aXIgbWVtYmVyVmFsdWVQYWlyID0gKG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5h
c3QuTWVtYmVyVmFsdWVQYWlyKSBub2RlOwogCQkJcmV0dXJuIGdldE1ldGhvZEJpbmRpbmcobWVt
YmVyVmFsdWVQYWlyLmJpbmRpbmcpOworCQl9IGVsc2UgaWYgKG5vZGUgaW5zdGFuY2VvZiBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlJlZmVyZW5jZUV4cHJlc3Npb24pIHsK
KwkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuUmVmZXJlbmNlRXhwcmVz
c2lvbiByZWZlcmVuY2VFeHByZXNzaW9uID0gKG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5hc3QuUmVmZXJlbmNlRXhwcmVzc2lvbikgbm9kZTsKKwkJCXJldHVybiBnZXRNZXRob2RC
aW5kaW5nKHJlZmVyZW5jZUV4cHJlc3Npb24uYmluZGluZyk7CiAJCX0KIAkJcmV0dXJuIG51bGw7
CiAJfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pk
dC9jb3JlL2RvbS9FeHByZXNzaW9uLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3Jn
L2VjbGlwc2UvamR0L2NvcmUvZG9tL0V4cHJlc3Npb24uamF2YQppbmRleCA2ZmQ3NmZhLi42Yzdi
YmEzIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0
L2NvcmUvZG9tL0V4cHJlc3Npb24uamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20v
b3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0V4cHJlc3Npb24uamF2YQpAQCAtMzEsNiArMzEsOCBA
QAogICogICAge0BsaW5rIENoYXJhY3RlckxpdGVyYWx9LAogICogICAge0BsaW5rIENsYXNzSW5z
dGFuY2VDcmVhdGlvbn0sCiAgKiAgICB7QGxpbmsgQ29uZGl0aW9uYWxFeHByZXNzaW9ufSwKKyAq
ICAgIHtAbGluayBDcmVhdGlvblJlZmVyZW5jZX0sCisgKiAgICB7QGxpbmsgRXhwcmVzc2lvbk1l
dGhvZFJlZmVyZW5jZX0sCiAgKiAgICB7QGxpbmsgRmllbGRBY2Nlc3N9LAogICogICAge0BsaW5r
IEluZml4RXhwcmVzc2lvbn0sCiAgKiAgICB7QGxpbmsgSW5zdGFuY2VvZkV4cHJlc3Npb259LApA
QCAtNDUsOCArNDcsMTAgQEAKICAqICAgIHtAbGluayBTdHJpbmdMaXRlcmFsfSwKICAqICAgIHtA
bGluayBTdXBlckZpZWxkQWNjZXNzfSwKICAqICAgIHtAbGluayBTdXBlck1ldGhvZEludm9jYXRp
b259LAorICogICAge0BsaW5rIFN1cGVyTWV0aG9kUmVmZXJlbmNlfSwKICAqICAgIHtAbGluayBU
aGlzRXhwcmVzc2lvbn0sCiAgKiAgICB7QGxpbmsgVHlwZUxpdGVyYWx9LAorICogICAge0BsaW5r
IFR5cGVNZXRob2RSZWZlcmVuY2V9LAogICogICAge0BsaW5rIFZhcmlhYmxlRGVjbGFyYXRpb25F
eHByZXNzaW9ufQogICogPC9wcmU+CiAgKiA8L3A+CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0V4cHJlc3Npb25NZXRob2RSZWZl
cmVuY2UuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29y
ZS9kb20vRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZS5qYXZhCm5ldyBmaWxlIG1vZGUgMTAwNjQ0
CmluZGV4IDAwMDAwMDAuLjFhMGU3YWYKLS0tIC9kZXYvbnVsbAorKysgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0V4cHJlc3Npb25NZXRob2RSZWZl
cmVuY2UuamF2YQpAQCAtMCwwICsxLDMxMSBAQAorLyoqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKyAq
IENvcHlyaWdodCAoYykgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIEFsbCBy
aWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlh
bHMKKyAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2Ug
UHVibGljIExpY2Vuc2UgdjEuMAorICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRp
b24sIGFuZCBpcyBhdmFpbGFibGUgYXQKKyAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwv
ZXBsLXYxMC5odG1sCisgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJs
eS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVu
aXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBl
dmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3
aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKiAKKyAqIENvbnRyaWJ1dG9yczoK
KyAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24K
KyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqLworcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS5k
b207CisKK2ltcG9ydCBqYXZhLnV0aWwuQXJyYXlMaXN0OworaW1wb3J0IGphdmEudXRpbC5MaXN0
OworCisvKioKKyAqIEV4cHJlc3Npb24gTWV0aG9kIFJlZmVyZW5jZSBleHByZXNzaW9uIEFTVCBu
b2RlIHR5cGUuIEFkZGVkIGluIEpMUzQgQVBJLgorICogPHByZT4KKyAqIEV4cHJlc3Npb25NZXRo
b2RSZWZlcmVuY2U6CisgKiAgICAgRXhwcmVzc2lvbiA8Yj46OjwvYj4gCisgKiAgICAgICAgIFsg
PGI+Jmx0OzwvYj4gVHlwZSB7IDxiPiw8L2I+IFR5cGUgfSA8Yj4mZ3Q7PC9iPiBdCisgKiAgICAg
ICAgIElkZW50aWZpZXIKKyAqIDwvcHJlPgorICoKKyAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAor
ICogQG5vaW5zdGFudGlhdGUgVGhpcyBjbGFzcyBpcyBub3QgaW50ZW5kZWQgdG8gYmUgaW5zdGFu
dGlhdGVkIGJ5IGNsaWVudHMuCisgKi8KK3B1YmxpYyBjbGFzcyBFeHByZXNzaW9uTWV0aG9kUmVm
ZXJlbmNlIGV4dGVuZHMgRXhwcmVzc2lvbiB7CisKKwkvKioKKwkgKiBUaGUgImV4cHJlc3Npb24i
IHN0cnVjdHVyYWwgcHJvcGVydHkgb2YgdGhpcyBub2RlIHR5cGUgKGNoaWxkIHR5cGU6IHtAbGlu
ayBFeHByZXNzaW9ufSkuCisJICovCisJcHVibGljIHN0YXRpYyBmaW5hbCBDaGlsZFByb3BlcnR5
RGVzY3JpcHRvciBFWFBSRVNTSU9OX1BST1BFUlRZID0KKwkJbmV3IENoaWxkUHJvcGVydHlEZXNj
cmlwdG9yKEV4cHJlc3Npb25NZXRob2RSZWZlcmVuY2UuY2xhc3MsICJleHByZXNzaW9uIiwgRXhw
cmVzc2lvbi5jbGFzcywgTUFOREFUT1JZLCBDWUNMRV9SSVNLKTsgLy8kTk9OLU5MUy0xJAorCisJ
LyoqCisJICogVGhlICJ0eXBlQXJndW1lbnRzIiBzdHJ1Y3R1cmFsIHByb3BlcnR5IG9mIHRoaXMg
bm9kZSB0eXBlIChlbGVtZW50IHR5cGU6IHtAbGluayBUeXBlfSkgCisJICovCisJcHVibGljIHN0
YXRpYyBmaW5hbCBDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IgVFlQRV9BUkdVTUVOVFNfUFJP
UEVSVFkgPQorCQluZXcgQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yKEV4cHJlc3Npb25NZXRo
b2RSZWZlcmVuY2UuY2xhc3MsICJ0eXBlQXJndW1lbnRzIiwgVHlwZS5jbGFzcywgTk9fQ1lDTEVf
UklTSyk7IC8vJE5PTi1OTFMtMSQKKworCS8qKgorCSAqIFRoZSAibmFtZSIgc3RydWN0dXJhbCBw
cm9wZXJ0eSBvZiB0aGlzIG5vZGUgdHlwZSAoY2hpbGQgdHlwZToge0BsaW5rIFNpbXBsZU5hbWV9
LiAKKwkgKi8KKwlwdWJsaWMgc3RhdGljIGZpbmFsIENoaWxkUHJvcGVydHlEZXNjcmlwdG9yIE5B
TUVfUFJPUEVSVFkgPQorCQluZXcgQ2hpbGRQcm9wZXJ0eURlc2NyaXB0b3IoRXhwcmVzc2lvbk1l
dGhvZFJlZmVyZW5jZS5jbGFzcywgIm5hbWUiLCBTaW1wbGVOYW1lLmNsYXNzLCBNQU5EQVRPUlks
IE5PX0NZQ0xFX1JJU0spOyAvLyROT04tTkxTLTEkCisKKwkvKioKKwkgKiBBIGxpc3Qgb2YgcHJv
cGVydHkgZGVzY3JpcHRvcnMgKGVsZW1lbnQgdHlwZToKKwkgKiB7QGxpbmsgU3RydWN0dXJhbFBy
b3BlcnR5RGVzY3JpcHRvcn0pLAorCSAqIG9yIG51bGwgaWYgdW5pbml0aWFsaXplZC4KKwkgKi8K
Kwlwcml2YXRlIHN0YXRpYyBmaW5hbCBMaXN0IFBST1BFUlRZX0RFU0NSSVBUT1JTXzhfMDsKKwkK
KwlzdGF0aWMgeworCQlMaXN0IHByb3BlcnR5TGlzdCA9IG5ldyBBcnJheUxpc3QoNCk7CisJCWNy
ZWF0ZVByb3BlcnR5TGlzdChFeHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlLmNsYXNzLCBwcm9wZXJ0
eUxpc3QpOworCQlhZGRQcm9wZXJ0eShFWFBSRVNTSU9OX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3Qp
OworCQlhZGRQcm9wZXJ0eShUWVBFX0FSR1VNRU5UU19QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsK
KwkJYWRkUHJvcGVydHkoTkFNRV9QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKKwkJUFJPUEVSVFlf
REVTQ1JJUFRPUlNfOF8wID0gcmVhcFByb3BlcnR5TGlzdChwcm9wZXJ0eUxpc3QpOworCX0KKwkK
KwkvKioKKwkgKiBSZXR1cm5zIGEgbGlzdCBvZiBzdHJ1Y3R1cmFsIHByb3BlcnR5IGRlc2NyaXB0
b3JzIGZvciB0aGlzIG5vZGUgdHlwZS4KKwkgKiBDbGllbnRzIG11c3Qgbm90IG1vZGlmeSB0aGUg
cmVzdWx0LgorCSAqCisJICogQHBhcmFtIGFwaUxldmVsIHRoZSBBUEkgbGV2ZWw7IG9uZSBvZiB0
aGUgQVNULkpMUyogY29uc3RhbnRzCisJICogQHJldHVybiBhIGxpc3Qgb2YgcHJvcGVydHkgZGVz
Y3JpcHRvcnMgKGVsZW1lbnQgdHlwZToKKwkgKiB7QGxpbmsgU3RydWN0dXJhbFByb3BlcnR5RGVz
Y3JpcHRvcn0pCisJICovCisJcHVibGljIHN0YXRpYyBMaXN0IHByb3BlcnR5RGVzY3JpcHRvcnMo
aW50IGFwaUxldmVsKSB7CisJCXJldHVybiBQUk9QRVJUWV9ERVNDUklQVE9SU184XzA7CisJfQor
CisJLyoqCisJICogVGhlIGV4cHJlc3Npb247IGRlZmF1bHRzIHRvIG51bGwuCisJICovCisJcHJp
dmF0ZSBFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBudWxsOworCisJLyoqCisJICogVGhlIHR5cGUg
YXJndW1lbnRzIChlbGVtZW50IHR5cGU6IHtAbGluayBUeXBlfSkuCisJICogRGVmYXVsdHMgdG8g
YW4gZW1wdHkgbGlzdC4KKwkgKi8KKwlwcml2YXRlIEFTVE5vZGUuTm9kZUxpc3QgdHlwZUFyZ3Vt
ZW50cyA9CisJCW5ldyBBU1ROb2RlLk5vZGVMaXN0KFRZUEVfQVJHVU1FTlRTX1BST1BFUlRZKTsK
KwkKKwkvKioKKwkgKiBUaGUgbWV0aG9kIG5hbWU7IGxhemlseSBpbml0aWFsaXplZDsgZGVmYXVs
dHMgdG8gYW4gdW5zcGVjaWZpZWQsCisJICogbGVnYWwgSmF2YSBtZXRob2QgbmFtZS4KKwkgKi8K
Kwlwcml2YXRlIFNpbXBsZU5hbWUgbWV0aG9kTmFtZSA9IG51bGw7CisKKwkvKioKKwkgKiBDcmVh
dGVzIGEgbmV3IEFTVCBub2RlIGZvciBhbiBFeHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlIGRlY2xh
cmF0aW9uIG93bmVkCisJICogYnkgdGhlIGdpdmVuIEFTVC4KKwkgKiA8cD4KKwkgKiBOLkIuIFRo
aXMgY29uc3RydWN0b3IgaXMgcGFja2FnZS1wcml2YXRlOyBhbGwgc3ViY2xhc3NlcyBtdXN0IGJl
CisJICogZGVjbGFyZWQgaW4gdGhlIHNhbWUgcGFja2FnZTsgY2xpZW50cyBhcmUgdW5hYmxlIHRv
IGRlY2xhcmUKKwkgKiBhZGRpdGlvbmFsIHN1YmNsYXNzZXMuCisJICogPC9wPgorCSAqCisJICog
QHBhcmFtIGFzdCB0aGUgQVNUIHRoYXQgaXMgdG8gb3duIHRoaXMgbm9kZQorCSAqLworCUV4cHJl
c3Npb25NZXRob2RSZWZlcmVuY2UoQVNUIGFzdCkgeworCQlzdXBlcihhc3QpOworCQl1bnN1cHBv
cnRlZEluMl8zXzQoKTsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkK
KwkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8KKwlmaW5hbCBMaXN0IGludGVy
bmFsU3RydWN0dXJhbFByb3BlcnRpZXNGb3JUeXBlKGludCBhcGlMZXZlbCkgeworCQlyZXR1cm4g
cHJvcGVydHlEZXNjcmlwdG9ycyhhcGlMZXZlbCk7CisJfQorCisJLyogKG9taXQgamF2YWRvYyBm
b3IgdGhpcyBtZXRob2QpCisJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCisJICovCisJ
ZmluYWwgQVNUTm9kZSBpbnRlcm5hbEdldFNldENoaWxkUHJvcGVydHkoQ2hpbGRQcm9wZXJ0eURl
c2NyaXB0b3IgcHJvcGVydHksIGJvb2xlYW4gZ2V0LCBBU1ROb2RlIGNoaWxkKSB7CisJCWlmIChw
cm9wZXJ0eSA9PSBOQU1FX1BST1BFUlRZKSB7CisJCQlpZiAoZ2V0KSB7CisJCQkJcmV0dXJuIGdl
dE5hbWUoKTsKKwkJCX0gZWxzZSB7CisJCQkJc2V0TmFtZSgoU2ltcGxlTmFtZSkgY2hpbGQpOwor
CQkJCXJldHVybiBudWxsOworCQkJfQorCQl9CisJCWlmIChwcm9wZXJ0eSA9PSBFWFBSRVNTSU9O
X1BST1BFUlRZKSB7CisJCQlpZiAoZ2V0KSB7CisJCQkJcmV0dXJuIGdldEV4cHJlc3Npb24oKTsK
KwkJCX0gZWxzZSB7CisJCQkJc2V0RXhwcmVzc2lvbigoRXhwcmVzc2lvbikgY2hpbGQpOworCQkJ
CXJldHVybiBudWxsOworCQkJfQorCQl9CisJCS8vIGFsbG93IGRlZmF1bHQgaW1wbGVtZW50YXRp
b24gdG8gZmxhZyB0aGUgZXJyb3IKKwkJcmV0dXJuIHN1cGVyLmludGVybmFsR2V0U2V0Q2hpbGRQ
cm9wZXJ0eShwcm9wZXJ0eSwgZ2V0LCBjaGlsZCk7CisJfQorCisJLyogKG9taXQgamF2YWRvYyBm
b3IgdGhpcyBtZXRob2QpCisJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCisJICovCisJ
ZmluYWwgTGlzdCBpbnRlcm5hbEdldENoaWxkTGlzdFByb3BlcnR5KENoaWxkTGlzdFByb3BlcnR5
RGVzY3JpcHRvciBwcm9wZXJ0eSkgeworCQlpZiAocHJvcGVydHkgPT0gVFlQRV9BUkdVTUVOVFNf
UFJPUEVSVFkpIHsKKwkJCXJldHVybiB0eXBlQXJndW1lbnRzKCk7CisJCX0KKwkJLy8gYWxsb3cg
ZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiB0byBmbGFnIHRoZSBlcnJvcgorCQlyZXR1cm4gc3VwZXIu
aW50ZXJuYWxHZXRDaGlsZExpc3RQcm9wZXJ0eShwcm9wZXJ0eSk7CisJfQorCisJLyogKG9taXQg
amF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCisJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUu
CisJICovCisJZmluYWwgaW50IGdldE5vZGVUeXBlMCgpIHsKKwkJcmV0dXJuIEVYUFJFU1NJT05f
TUVUSE9EX1JFRkVSRU5DRTsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhv
ZCkKKwkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8KKwlBU1ROb2RlIGNsb25l
MChBU1QgdGFyZ2V0KSB7CisJCUV4cHJlc3Npb25NZXRob2RSZWZlcmVuY2UgcmVzdWx0ID0gbmV3
IEV4cHJlc3Npb25NZXRob2RSZWZlcmVuY2UodGFyZ2V0KTsKKwkJcmVzdWx0LnNldFNvdXJjZVJh
bmdlKGdldFN0YXJ0UG9zaXRpb24oKSwgZ2V0TGVuZ3RoKCkpOworCQlyZXN1bHQuc2V0TmFtZSgo
U2ltcGxlTmFtZSkgZ2V0TmFtZSgpLmNsb25lKHRhcmdldCkpOworCQlyZXN1bHQuc2V0RXhwcmVz
c2lvbigKKwkJCShFeHByZXNzaW9uKSBBU1ROb2RlLmNvcHlTdWJ0cmVlKHRhcmdldCwgZ2V0RXhw
cmVzc2lvbigpKSk7CisJCXJlc3VsdC50eXBlQXJndW1lbnRzKCkuYWRkQWxsKEFTVE5vZGUuY29w
eVN1YnRyZWVzKHRhcmdldCwgdHlwZUFyZ3VtZW50cygpKSk7CisJCXJldHVybiByZXN1bHQ7CisJ
fQorCisJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCisJICogTWV0aG9kIGRlY2xh
cmVkIG9uIEFTVE5vZGUuCisJICovCisJZmluYWwgYm9vbGVhbiBzdWJ0cmVlTWF0Y2gwKEFTVE1h
dGNoZXIgbWF0Y2hlciwgT2JqZWN0IG90aGVyKSB7CisJCS8vIGRpc3BhdGNoIHRvIGNvcnJlY3Qg
b3ZlcmxvYWRlZCBtYXRjaCBtZXRob2QKKwkJcmV0dXJuIG1hdGNoZXIubWF0Y2godGhpcywgb3Ro
ZXIpOworCX0KKworCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQorCSAqIE1ldGhv
ZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAqLworCXZvaWQgYWNjZXB0MChBU1RWaXNpdG9yIHZp
c2l0b3IpIHsKKwkJYm9vbGVhbiB2aXNpdENoaWxkcmVuID0gdmlzaXRvci52aXNpdCh0aGlzKTsK
KwkJaWYgKHZpc2l0Q2hpbGRyZW4pIHsKKwkJCS8vIHZpc2l0IGNoaWxkcmVuIGluIG5vcm1hbCBs
ZWZ0IHRvIHJpZ2h0IHJlYWRpbmcgb3JkZXIKKwkJCWFjY2VwdENoaWxkKHZpc2l0b3IsIGdldEV4
cHJlc3Npb24oKSk7CisJCQlhY2NlcHRDaGlsZHJlbih2aXNpdG9yLCB0aGlzLnR5cGVBcmd1bWVu
dHMpOworCQkJYWNjZXB0Q2hpbGQodmlzaXRvciwgZ2V0TmFtZSgpKTsKKwkJfQorCQl2aXNpdG9y
LmVuZFZpc2l0KHRoaXMpOworCX0KKworCS8qKgorCSAqIFJldHVybnMgdGhlIGV4cHJlc3Npb24g
b2YgdGhpcyBleHByZXNzaW9uIG1ldGhvZCByZWZlcmVuY2UgZXhwcmVzc2lvbgorCSAqCisJICog
QHJldHVybiB0aGUgZXhwcmVzc2lvbiBub2RlCisJICovCisJcHVibGljIEV4cHJlc3Npb24gZ2V0
RXhwcmVzc2lvbigpIHsKKwkJcmV0dXJuIHRoaXMuZXhwcmVzc2lvbjsKKwl9CisKKwkvKioKKwkg
KiBTZXRzIHRoZSBleHByZXNzaW9uIG9mIHRoaXMgZXhwcmVzc2lvbiBtZXRob2QgcmVmZXJlbmNl
LgorCSAqCisJICogQHBhcmFtIGV4cHJlc3Npb24gdGhlIGV4cHJlc3Npb24gbm9kZQorCSAqIEBl
eGNlcHRpb24gSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uIGlmOgorCSAqIDx1bD4KKwkgKiA8bGk+
dGhlIG5vZGUgYmVsb25ncyB0byBhIGRpZmZlcmVudCBBU1Q8L2xpPgorCSAqIDxsaT50aGUgbm9k
ZSBhbHJlYWR5IGhhcyBhIHBhcmVudDwvbGk+CisJICogPGxpPmEgY3ljbGUgaW4gd291bGQgYmUg
Y3JlYXRlZDwvbGk+CisJICogPC91bD4KKwkgKi8KKwlwdWJsaWMgdm9pZCBzZXRFeHByZXNzaW9u
KEV4cHJlc3Npb24gZXhwcmVzc2lvbikgeworCQlpZiAoZXhwcmVzc2lvbiA9PSBudWxsKSB7CisJ
CQl0aHJvdyBuZXcgSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uKCk7CisJCX0KKwkJQVNUTm9kZSBv
bGRDaGlsZCA9IHRoaXMuZXhwcmVzc2lvbjsKKwkJcHJlUmVwbGFjZUNoaWxkKG9sZENoaWxkLCBl
eHByZXNzaW9uLCBFWFBSRVNTSU9OX1BST1BFUlRZKTsKKwkJdGhpcy5leHByZXNzaW9uID0gZXhw
cmVzc2lvbjsKKwkJcG9zdFJlcGxhY2VDaGlsZChvbGRDaGlsZCwgZXhwcmVzc2lvbiwgRVhQUkVT
U0lPTl9QUk9QRVJUWSk7CisJfQorCisJLyoqCisJICogUmV0dXJucyB0aGUgbGl2ZSBvcmRlcmVk
IGxpc3Qgb2YgdHlwZSBhcmd1bWVudHMgb2YgdGhpcyBleHByZXNzaW9uIG1ldGhvZCByZWZlcmVu
Y2UKKwkgKgorCSAqIEByZXR1cm4gdGhlIGxpdmUgbGlzdCBvZiB0eXBlIGFyZ3VtZW50cworCSAq
ICAgIChlbGVtZW50IHR5cGU6IHtAbGluayBUeXBlfSkKKwkgKi8KKwlwdWJsaWMgTGlzdCB0eXBl
QXJndW1lbnRzKCkgeworCQlyZXR1cm4gdGhpcy50eXBlQXJndW1lbnRzOworCX0KKworCS8qKgor
CSAqIFJldHVybnMgdGhlIG5hbWUgb2YgdGhlIG1ldGhvZCByZWZlcmVuY2VkIGluIHRoaXMgZXhw
cmVzc2lvbi4KKwkgKgorCSAqIEByZXR1cm4gdGhlIG1ldGhvZCBuYW1lIG5vZGUKKwkgKi8KKwlw
dWJsaWMgU2ltcGxlTmFtZSBnZXROYW1lKCkgeworCQlpZiAodGhpcy5tZXRob2ROYW1lID09IG51
bGwpIHsKKwkJCS8vIGxhenkgaW5pdCBtdXN0IGJlIHRocmVhZC1zYWZlIGZvciByZWFkZXJzCisJ
CQlzeW5jaHJvbml6ZWQgKHRoaXMpIHsKKwkJCQlpZiAodGhpcy5tZXRob2ROYW1lID09IG51bGwp
IHsKKwkJCQkJcHJlTGF6eUluaXQoKTsKKwkJCQkJdGhpcy5tZXRob2ROYW1lID0gbmV3IFNpbXBs
ZU5hbWUodGhpcy5hc3QpOworCQkJCQlwb3N0TGF6eUluaXQodGhpcy5tZXRob2ROYW1lLCBOQU1F
X1BST1BFUlRZKTsKKwkJCQl9CisJCQl9CisJCX0KKwkJcmV0dXJuIHRoaXMubWV0aG9kTmFtZTsK
Kwl9CisKKwkvKioKKwkgKiBTZXRzIHRoZSBuYW1lIG9mIHRoZSBtZXRob2QgcmVmZXJlbmNlZCBp
biB0aGlzIGV4cHJlc3Npb24gdG8gdGhlCisJICogZ2l2ZW4gbmFtZS4KKwkgKgorCSAqIEBwYXJh
bSBuYW1lIHRoZSBuZXcgbWV0aG9kIG5hbWUKKwkgKiBAZXhjZXB0aW9uIElsbGVnYWxBcmd1bWVu
dEV4Y2VwdGlvbiBpZjoKKwkgKiA8dWw+CisJICogPGxpPnRoZSBub2RlIGJlbG9uZ3MgdG8gYSBk
aWZmZXJlbnQgQVNUPC9saT4KKwkgKiA8bGk+dGhlIG5vZGUgYWxyZWFkeSBoYXMgYSBwYXJlbnQ8
L2xpPgorCSAqIDwvdWw+CisJICovCisJcHVibGljIHZvaWQgc2V0TmFtZShTaW1wbGVOYW1lIG5h
bWUpIHsKKwkJaWYgKG5hbWUgPT0gbnVsbCkgeworCQkJdGhyb3cgbmV3IElsbGVnYWxBcmd1bWVu
dEV4Y2VwdGlvbigpOworCQl9CisJCUFTVE5vZGUgb2xkQ2hpbGQgPSB0aGlzLm1ldGhvZE5hbWU7
CisJCXByZVJlcGxhY2VDaGlsZChvbGRDaGlsZCwgbmFtZSwgTkFNRV9QUk9QRVJUWSk7CisJCXRo
aXMubWV0aG9kTmFtZSA9IG5hbWU7CisJCXBvc3RSZXBsYWNlQ2hpbGQob2xkQ2hpbGQsIG5hbWUs
IE5BTUVfUFJPUEVSVFkpOworCX0KKworCS8qKgorCSAqIFJlc29sdmVzIGFuZCByZXR1cm5zIHRo
ZSBiaW5kaW5nIGZvciB0aGUgbWV0aG9kIHJlZmVyZW5jZWQgYnkgdGhpcworCSAqIGV4cHJlc3Np
b24uCisJICogPHA+CisJICogTm90ZSB0aGF0IGJpbmRpbmdzIGFyZSBnZW5lcmFsbHkgdW5hdmFp
bGFibGUgdW5sZXNzIHJlcXVlc3RlZCB3aGVuIHRoZQorCSAqIEFTVCBpcyBiZWluZyBidWlsdC4K
KwkgKiA8L3A+CisJICoKKwkgKiBAcmV0dXJuIHRoZSBtZXRob2QgYmluZGluZywgb3IgPGNvZGU+
bnVsbDwvY29kZT4gaWYgdGhlIGJpbmRpbmcgY2Fubm90CisJICogYmUgcmVzb2x2ZWQKKwkgKi8K
KwlwdWJsaWMgSU1ldGhvZEJpbmRpbmcgcmVzb2x2ZU1ldGhvZEJpbmRpbmcoKSB7CisJCXJldHVy
biB0aGlzLmFzdC5nZXRCaW5kaW5nUmVzb2x2ZXIoKS5yZXNvbHZlTWV0aG9kKHRoaXMpOworCX0K
KworCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQorCSAqIE1ldGhvZCBkZWNsYXJl
ZCBvbiBBU1ROb2RlLgorCSAqLworCWludCBtZW1TaXplKCkgeworCQkvLyB0cmVhdCBDb2RlIGFz
IGZyZWUKKwkJcmV0dXJuIEJBU0VfTk9ERV9TSVpFICsgMyAqIDQ7CisJfQorCisJLyogKG9taXQg
amF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCisJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUu
CisJICovCisJaW50IHRyZWVTaXplKCkgeworCQlyZXR1cm4KKwkJCW1lbVNpemUoKQorCQkJKyAo
dGhpcy5leHByZXNzaW9uID09IG51bGwgPyAwIDogZ2V0RXhwcmVzc2lvbigpLnRyZWVTaXplKCkp
CisJCQkrICh0aGlzLnR5cGVBcmd1bWVudHMgPT0gbnVsbCA/IDAgOiB0aGlzLnR5cGVBcmd1bWVu
dHMubGlzdFNpemUoKSkKKwkJCSsgKHRoaXMubWV0aG9kTmFtZSA9PSBudWxsID8gMCA6IGdldE5h
bWUoKS50cmVlU2l6ZSgpKTsKKwl9Cit9ClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmlsZQpkaWZm
IC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2Rv
bS9TdXBlck1ldGhvZFJlZmVyZW5jZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9TdXBlck1ldGhvZFJlZmVyZW5jZS5qYXZhCm5ldyBmaWxl
IG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLjNjMTM1NmYKLS0tIC9kZXYvbnVsbAorKysgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1N1cGVyTWV0
aG9kUmVmZXJlbmNlLmphdmEKQEAgLTAsMCArMSwzMDUgQEAKKy8qKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqCisgKiBDb3B5cmlnaHQgKGMpIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisg
KiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcg
bWF0ZXJpYWxzCisgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBF
Y2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKKyAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlz
dHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CisgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3Jn
L2xlZ2FsL2VwbC12MTAuaHRtbAorICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2Yg
YW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAq
IENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGlu
ZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBh
dGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgorICogCisgKiBDb250cmli
dXRvcnM6CisgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVu
dGF0aW9uCisgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KK3BhY2thZ2Ugb3JnLmVjbGlwc2UuamR0
LmNvcmUuZG9tOworCitpbXBvcnQgamF2YS51dGlsLkFycmF5TGlzdDsKK2ltcG9ydCBqYXZhLnV0
aWwuTGlzdDsKKworLyoqCisgKiBTdXBlck1ldGhvZFJlZmVyZW5jZSBBU1QgTm9kZSBUeXBlLiBB
ZGRlZCBpbiBKTFM0IEFQSS4KKyAqIAorICogPHByZT4KKyAqIFN1cGVyTWV0aG9kUmVmZXJlbmNl
OgorICogICAgIFsgQ2xhc3NOYW1lIDxiPi48L2I+IF0gPGI+c3VwZXI8L2I+IDxiPjo6PC9iPgor
ICogICAgICAgICBbIDxiPiZsdDs8L2I+IFR5cGUgeyA8Yj4sPC9iPiBUeXBlIH0gPGI+Jmd0Ozwv
Yj4gXQorICogICAgICAgICBJZGVudGlmaWVyCisgKiA8L3ByZT4KKyAqIAorICogQHNpbmNlIDMu
OSBCRVRBX0pBVkE4CisgKiBAbm9pbnN0YW50aWF0ZSBUaGlzIGNsYXNzIGlzIG5vdCBpbnRlbmRl
ZCB0byBiZSBpbnN0YW50aWF0ZWQgYnkgY2xpZW50cworICovCitwdWJsaWMgY2xhc3MgU3VwZXJN
ZXRob2RSZWZlcmVuY2UgZXh0ZW5kcyBFeHByZXNzaW9uIHsKKworCS8qKgorCSAqIFRoZSAicXVh
bGlmaWVyIiBzdHJ1Y3R1cmFsIHByb3BlcnR5IG9mIHRoaXMgbm9kZSB0eXBlIChjaGlsZCB0eXBl
OiB7QGxpbmsgTmFtZX0pLgorCSAqLworCXB1YmxpYyBzdGF0aWMgZmluYWwgQ2hpbGRQcm9wZXJ0
eURlc2NyaXB0b3IgUVVBTElGSUVSX1BST1BFUlRZID0KKwkJbmV3IENoaWxkUHJvcGVydHlEZXNj
cmlwdG9yKFN1cGVyTWV0aG9kUmVmZXJlbmNlLmNsYXNzLCAicXVhbGlmaWVyIiwgTmFtZS5jbGFz
cywgT1BUSU9OQUwsIE5PX0NZQ0xFX1JJU0spOyAvLyROT04tTkxTLTEkCisKKwkvKioKKwkgKiBU
aGUgInR5cGVBcmd1bWVudHMiIHN0cnVjdHVyYWwgcHJvcGVydHkgb2YgdGhpcyBub2RlIHR5cGUg
KGVsZW1lbnQgdHlwZToge0BsaW5rIFR5cGV9KSAoYWRkZWQgaW4gSkxTMyBBUEkpLgorCSAqLwor
CXB1YmxpYyBzdGF0aWMgZmluYWwgQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yIFRZUEVfQVJH
VU1FTlRTX1BST1BFUlRZID0KKwkJbmV3IENoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvcihTdXBl
ck1ldGhvZFJlZmVyZW5jZS5jbGFzcywgInR5cGVBcmd1bWVudHMiLCBUeXBlLmNsYXNzLCBOT19D
WUNMRV9SSVNLKTsgLy8kTk9OLU5MUy0xJAorCisJLyoqCisJICogVGhlICJuYW1lIiBzdHJ1Y3R1
cmFsIHByb3BlcnR5IG9mIHRoaXMgbm9kZSB0eXBlIChjaGlsZCB0eXBlOiB7QGxpbmsgU2ltcGxl
TmFtZX0pLgorCSAqLworCXB1YmxpYyBzdGF0aWMgZmluYWwgQ2hpbGRQcm9wZXJ0eURlc2NyaXB0
b3IgTkFNRV9QUk9QRVJUWSA9CisJCW5ldyBDaGlsZFByb3BlcnR5RGVzY3JpcHRvcihTdXBlck1l
dGhvZFJlZmVyZW5jZS5jbGFzcywgIm5hbWUiLCBTaW1wbGVOYW1lLmNsYXNzLCBNQU5EQVRPUlks
IE5PX0NZQ0xFX1JJU0spOyAvLyROT04tTkxTLTEkCisKKwkvKioKKwkgKiBBIGxpc3Qgb2YgcHJv
cGVydHkgZGVzY3JpcHRvcnMgKGVsZW1lbnQgdHlwZToKKwkgKiB7QGxpbmsgU3RydWN0dXJhbFBy
b3BlcnR5RGVzY3JpcHRvcn0pLAorCSAqIG9yIG51bGwgaWYgdW5pbml0aWFsaXplZC4KKwkgKi8K
Kwlwcml2YXRlIHN0YXRpYyBmaW5hbCBMaXN0IFBST1BFUlRZX0RFU0NSSVBUT1JTXzhfMDsKKwor
CXN0YXRpYyB7CisJCUxpc3QgcHJvcGVydHlMaXN0ID0gbmV3IEFycmF5TGlzdCg0KTsKKwkJY3Jl
YXRlUHJvcGVydHlMaXN0KFN1cGVyTWV0aG9kUmVmZXJlbmNlLmNsYXNzLCBwcm9wZXJ0eUxpc3Qp
OworCQlhZGRQcm9wZXJ0eShRVUFMSUZJRVJfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CisJCWFk
ZFByb3BlcnR5KFRZUEVfQVJHVU1FTlRTX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOworCQlhZGRQ
cm9wZXJ0eShOQU1FX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOworCQlQUk9QRVJUWV9ERVNDUklQ
VE9SU184XzAgPSByZWFwUHJvcGVydHlMaXN0KHByb3BlcnR5TGlzdCk7CisJfQorCisJLyoqCisJ
ICogUmV0dXJucyBhIGxpc3Qgb2Ygc3RydWN0dXJhbCBwcm9wZXJ0eSBkZXNjcmlwdG9ycyBmb3Ig
dGhpcyBub2RlIHR5cGUuCisJICogQ2xpZW50cyBtdXN0IG5vdCBtb2RpZnkgdGhlIHJlc3VsdC4K
KwkgKgorCSAqIEBwYXJhbSBhcGlMZXZlbCB0aGUgQVBJIGxldmVsOyBvbmUgb2YgdGhlCisJICog
PGNvZGU+QVNULkpMUyo8L2NvZGU+IGNvbnN0YW50cworCSAqIEByZXR1cm4gYSBsaXN0IG9mIHBy
b3BlcnR5IGRlc2NyaXB0b3JzIChlbGVtZW50IHR5cGU6CisJICoge0BsaW5rIFN0cnVjdHVyYWxQ
cm9wZXJ0eURlc2NyaXB0b3J9KQorCSAqLworCXB1YmxpYyBzdGF0aWMgTGlzdCBwcm9wZXJ0eURl
c2NyaXB0b3JzKGludCBhcGlMZXZlbCkgeworCQlyZXR1cm4gUFJPUEVSVFlfREVTQ1JJUFRPUlNf
OF8wOworCX0KKworCS8qKgorCSAqIFRoZSBvcHRpb25hbCBxdWFsaWZpZXI7IDxjb2RlPm51bGw8
L2NvZGU+IGZvciBub25lOyBkZWZhdWx0cyB0byBub25lLgorCSAqLworCXByaXZhdGUgTmFtZSBv
cHRpb25hbFF1YWxpZmllciA9IG51bGw7CisKKwkvKioKKwkgKiBUaGUgdHlwZSBhcmd1bWVudHMg
KGVsZW1lbnQgdHlwZToge0BsaW5rIFR5cGV9KTsgZGVmYXVsdHMgdG8gYW4gZW1wdHkgbGlzdC4K
KwkgKi8KKwlwcml2YXRlIEFTVE5vZGUuTm9kZUxpc3QgdHlwZUFyZ3VtZW50cyA9IAorCQkJbmV3
IEFTVE5vZGUuTm9kZUxpc3QoVFlQRV9BUkdVTUVOVFNfUFJPUEVSVFkpOworCisJLyoqCisJICog
VGhlIG1ldGhvZCBuYW1lOyBsYXppbHkgaW5pdGlhbGl6ZWQ7IGRlZmF1bHRzIHRvIGEgdW5zcGVj
aWZpZWQsCisJICogbGVnYWwgSmF2YSBtZXRob2QgbmFtZS4KKwkgKi8KKwlwcml2YXRlIFNpbXBs
ZU5hbWUgbWV0aG9kTmFtZSA9IG51bGw7CisJLyoqCisJICogQ3JlYXRlcyBhIG5ldyBBU1QgIG5v
ZGUgZm9yIGEgc3VwZXIgbWV0aG9kIHJlZmVyZW5jZSBvd25lZAorCSAqIGJ5IHRoZSBnaXZlbiBB
U1QuIEJ5IGRlZmF1bHQsIHRoZXJlIGlzIG5vIHF1YWxpZmllci4KKwkgKiA8cD4KKwkgKiBOLkIu
IFRoaXMgY29uc3RydWN0b3IgaXMgcGFja2FnZS1wcml2YXRlOyBhbGwgc3ViY2xhc3NlcyBtdXN0
IGJlCisJICogZGVjbGFyZWQgaW4gdGhlIHNhbWUgcGFja2FnZTsgY2xpZW50cyBhcmUgdW5hYmxl
IHRvIGRlY2xhcmUKKwkgKiBhZGRpdGlvbmFsIHN1YmNsYXNzZXMuCisJICogPC9wPgorCSAqCisJ
ICogQHBhcmFtIGFzdCB0aGUgQVNUIHRoYXQgaXMgdG8gb3duIHRoaXMgbm9kZQorCSAqLworCVN1
cGVyTWV0aG9kUmVmZXJlbmNlKEFTVCBhc3QpIHsKKwkJc3VwZXIoYXN0KTsKKwkJdW5zdXBwb3J0
ZWRJbjJfM180KCk7CisJfQorCisJTGlzdCBpbnRlcm5hbFN0cnVjdHVyYWxQcm9wZXJ0aWVzRm9y
VHlwZShpbnQgYXBpTGV2ZWwpIHsKKwkJcmV0dXJuIHByb3BlcnR5RGVzY3JpcHRvcnMoYXBpTGV2
ZWwpOworCX0KKworCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQorCSAqIE1ldGhv
ZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAqLworCWZpbmFsIEFTVE5vZGUgaW50ZXJuYWxHZXRT
ZXRDaGlsZFByb3BlcnR5KENoaWxkUHJvcGVydHlEZXNjcmlwdG9yIHByb3BlcnR5LCBib29sZWFu
IGdldCwgQVNUTm9kZSBjaGlsZCkgeworCQlpZiAocHJvcGVydHkgPT0gUVVBTElGSUVSX1BST1BF
UlRZKSB7CisJCQlpZiAoZ2V0KSB7CisJCQkJcmV0dXJuIGdldFF1YWxpZmllcigpOworCQkJfSBl
bHNlIHsKKwkJCQlzZXRRdWFsaWZpZXIoKE5hbWUpIGNoaWxkKTsKKwkJCQlyZXR1cm4gbnVsbDsK
KwkJCX0KKwkJfQorCQlpZiAocHJvcGVydHkgPT0gTkFNRV9QUk9QRVJUWSkgeworCQkJaWYgKGdl
dCkgeworCQkJCXJldHVybiBnZXROYW1lKCk7CisJCQl9IGVsc2UgeworCQkJCXNldE5hbWUoKFNp
bXBsZU5hbWUpIGNoaWxkKTsKKwkJCQlyZXR1cm4gbnVsbDsKKwkJCX0KKwkJfQorCQkvLyBhbGxv
dyBkZWZhdWx0IGltcGxlbWVudGF0aW9uIHRvIGZsYWcgdGhlIGVycm9yCisJCXJldHVybiBzdXBl
ci5pbnRlcm5hbEdldFNldENoaWxkUHJvcGVydHkocHJvcGVydHksIGdldCwgY2hpbGQpOworCX0K
KworCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQorCSAqIE1ldGhvZCBkZWNsYXJl
ZCBvbiBBU1ROb2RlLgorCSAqLworCWZpbmFsIExpc3QgaW50ZXJuYWxHZXRDaGlsZExpc3RQcm9w
ZXJ0eShDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IgcHJvcGVydHkpIHsKKwkJaWYgKHByb3Bl
cnR5ID09IFRZUEVfQVJHVU1FTlRTX1BST1BFUlRZKSB7CisJCQlyZXR1cm4gdHlwZUFyZ3VtZW50
cygpOworCQl9CisJCS8vIGFsbG93IGRlZmF1bHQgaW1wbGVtZW50YXRpb24gdG8gZmxhZyB0aGUg
ZXJyb3IKKwkJcmV0dXJuIHN1cGVyLmludGVybmFsR2V0Q2hpbGRMaXN0UHJvcGVydHkocHJvcGVy
dHkpOworCX0KKworCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQorCSAqIE1ldGhv
ZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAqLworCWZpbmFsIGludCBnZXROb2RlVHlwZTAoKSB7
CisJCXJldHVybiBTVVBFUl9NRVRIT0RfUkVGRVJFTkNFOworCX0KKworCS8qIChvbWl0IGphdmFk
b2MgZm9yIHRoaXMgbWV0aG9kKQorCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAq
LworCUFTVE5vZGUgY2xvbmUwKEFTVCB0YXJnZXQpIHsKKwkJU3VwZXJNZXRob2RSZWZlcmVuY2Ug
cmVzdWx0ID0gbmV3IFN1cGVyTWV0aG9kUmVmZXJlbmNlKHRhcmdldCk7CisJCXJlc3VsdC5zZXRT
b3VyY2VSYW5nZShnZXRTdGFydFBvc2l0aW9uKCksIGdldExlbmd0aCgpKTsKKwkJcmVzdWx0LnNl
dE5hbWUoKFNpbXBsZU5hbWUpIGdldE5hbWUoKS5jbG9uZSh0YXJnZXQpKTsKKwkJcmVzdWx0LnNl
dFF1YWxpZmllcigoTmFtZSkgQVNUTm9kZS5jb3B5U3VidHJlZSh0YXJnZXQsIGdldFF1YWxpZmll
cigpKSk7CisJCXJlc3VsdC50eXBlQXJndW1lbnRzKCkuYWRkQWxsKEFTVE5vZGUuY29weVN1YnRy
ZWVzKHRhcmdldCwgdHlwZUFyZ3VtZW50cygpKSk7CisJCXJldHVybiByZXN1bHQ7CisJfQorCisJ
LyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCisJICogTWV0aG9kIGRlY2xhcmVkIG9u
IEFTVE5vZGUuCisJICovCisJZmluYWwgYm9vbGVhbiBzdWJ0cmVlTWF0Y2gwKEFTVE1hdGNoZXIg
bWF0Y2hlciwgT2JqZWN0IG90aGVyKSB7CisJCS8vIGRpc3BhdGNoIHRvIGNvcnJlY3Qgb3Zlcmxv
YWRlZCBtYXRjaCBtZXRob2QKKwkJcmV0dXJuIG1hdGNoZXIubWF0Y2godGhpcywgb3RoZXIpOwor
CX0KKworCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQorCSAqIE1ldGhvZCBkZWNs
YXJlZCBvbiBBU1ROb2RlLgorCSAqLworCXZvaWQgYWNjZXB0MChBU1RWaXNpdG9yIHZpc2l0b3Ip
IHsKKwkJYm9vbGVhbiB2aXNpdENoaWxkcmVuID0gdmlzaXRvci52aXNpdCh0aGlzKTsKKwkJaWYg
KHZpc2l0Q2hpbGRyZW4pIHsKKwkJCS8vIHZpc2l0IGNoaWxkcmVuIGluIG5vcm1hbCBsZWZ0IHRv
IHJpZ2h0IHJlYWRpbmcgb3JkZXIKKwkJCWFjY2VwdENoaWxkKHZpc2l0b3IsIGdldFF1YWxpZmll
cigpKTsKKwkJCWFjY2VwdENoaWxkcmVuKHZpc2l0b3IsIHRoaXMudHlwZUFyZ3VtZW50cyk7CisJ
CQlhY2NlcHRDaGlsZCh2aXNpdG9yLCBnZXROYW1lKCkpOworCQl9CisJCXZpc2l0b3IuZW5kVmlz
aXQodGhpcyk7CisJfQorCisJLyoqCisJICogUmV0dXJucyB0aGUgcXVhbGlmaWVyIG9mIHRoaXMg
InN1cGVyIiBtZXRob2QgcmVmZXJlbmNlLCBvcgorCSAqIDxjb2RlPm51bGw8L2NvZGU+IGlmIHRo
ZXJlIGlzIG5vbmUuCisJICoKKwkgKiBAcmV0dXJuIHRoZSBxdWFsaWZpZXIgbmFtZSBub2RlLCBv
ciA8Y29kZT5udWxsPC9jb2RlPiBpZiB0aGVyZSBpcyBub25lCisJICovCisJcHVibGljIE5hbWUg
Z2V0UXVhbGlmaWVyKCkgeworCQlyZXR1cm4gdGhpcy5vcHRpb25hbFF1YWxpZmllcjsKKwl9CisK
KwkvKioKKwkgKiBTZXRzIHRoZSBxdWFsaWZpZXIgb2YgdGhpcyAic3VwZXIiIG1ldGhvZCByZWZl
cmVuY2UgZXhwcmVzc2lvbi4KKwkgKgorCSAqIEBwYXJhbSBuYW1lIHRoZSBxdWFsaWZpZXIgbmFt
ZSBub2RlLCBvciA8Y29kZT5udWxsPC9jb2RlPiBpZgorCSAqICAgIHRoZXJlIGlzIG5vbmUKKwkg
KiBAZXhjZXB0aW9uIElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbiBpZjoKKwkgKiA8dWw+CisJICog
PGxpPnRoZSBub2RlIGJlbG9uZ3MgdG8gYSBkaWZmZXJlbnQgQVNUPC9saT4KKwkgKiA8bGk+dGhl
IG5vZGUgYWxyZWFkeSBoYXMgYSBwYXJlbnQ8L2xpPgorCSAqIDwvdWw+CisJICovCisJcHVibGlj
IHZvaWQgc2V0UXVhbGlmaWVyKE5hbWUgbmFtZSkgeworCQlBU1ROb2RlIG9sZENoaWxkID0gdGhp
cy5vcHRpb25hbFF1YWxpZmllcjsKKwkJcHJlUmVwbGFjZUNoaWxkKG9sZENoaWxkLCBuYW1lLCBR
VUFMSUZJRVJfUFJPUEVSVFkpOworCQl0aGlzLm9wdGlvbmFsUXVhbGlmaWVyID0gbmFtZTsKKwkJ
cG9zdFJlcGxhY2VDaGlsZChvbGRDaGlsZCwgbmFtZSwgUVVBTElGSUVSX1BST1BFUlRZKTsKKwl9
CisKKwkvKioKKwkgKiBSZXR1cm5zIHRoZSBsaXZlIG9yZGVyZWQgbGlzdCBvZiB0eXBlIGFyZ3Vt
ZW50cyBvZiB0aGlzIHN1cGVyIG1ldGhvZCByZWZlcmVuY2UuCisJICoKKwkgKiBAcmV0dXJuIHRo
ZSBsaXZlIGxpc3Qgb2YgdHlwZSBhcmd1bWVudHMKKwkgKiAgICAoZWxlbWVudCB0eXBlOiB7QGxp
bmsgVHlwZX0pCisJICovCisJcHVibGljIExpc3QgdHlwZUFyZ3VtZW50cygpIHsKKwkJcmV0dXJu
IHRoaXMudHlwZUFyZ3VtZW50czsKKwl9CisKKwkvKioKKwkgKiBSZXR1cm5zIHRoZSBuYW1lIG9m
IHRoZSBtZXRob2QgcmVmZXJlbmNlZCBpbiB0aGlzIGV4cHJlc3Npb24uCisJICoKKwkgKiBAcmV0
dXJuIHRoZSBtZXRob2QgbmFtZSBub2RlCisJICovCisJcHVibGljIFNpbXBsZU5hbWUgZ2V0TmFt
ZSgpIHsKKwkJaWYgKHRoaXMubWV0aG9kTmFtZSA9PSBudWxsKSB7CisJCQkvLyBsYXp5IGluaXQg
bXVzdCBiZSB0aHJlYWQtc2FmZSBmb3IgcmVhZGVycworCQkJc3luY2hyb25pemVkICh0aGlzKSB7
CisJCQkJaWYgKHRoaXMubWV0aG9kTmFtZSA9PSBudWxsKSB7CisJCQkJCXByZUxhenlJbml0KCk7
CisJCQkJCXRoaXMubWV0aG9kTmFtZSA9IG5ldyBTaW1wbGVOYW1lKHRoaXMuYXN0KTsKKwkJCQkJ
cG9zdExhenlJbml0KHRoaXMubWV0aG9kTmFtZSwgTkFNRV9QUk9QRVJUWSk7CisJCQkJfQorCQkJ
fQorCQl9CisJCXJldHVybiB0aGlzLm1ldGhvZE5hbWU7CisJfQorCisJLyoqCisJICogU2V0cyB0
aGUgbmFtZSBvZiB0aGUgbWV0aG9kIHJlZmVyZW5jZWQgaW4gdGhpcyBleHByZXNzaW9uIHRvIHRo
ZQorCSAqIGdpdmVuIG5hbWUuCisJICoKKwkgKiBAcGFyYW0gbmFtZSB0aGUgbmV3IG1ldGhvZCBu
YW1lCisJICogQGV4Y2VwdGlvbiBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24gaWY6CisJICogPHVs
PgorCSAqIDxsaT50aGUgbm9kZSBiZWxvbmdzIHRvIGEgZGlmZmVyZW50IEFTVDwvbGk+CisJICog
PGxpPnRoZSBub2RlIGFscmVhZHkgaGFzIGEgcGFyZW50PC9saT4KKwkgKiA8L3VsPgorCSAqLwor
CXB1YmxpYyB2b2lkIHNldE5hbWUoU2ltcGxlTmFtZSBuYW1lKSB7CisJCWlmIChuYW1lID09IG51
bGwpIHsKKwkJCXRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oKTsKKwkJfQorCQlB
U1ROb2RlIG9sZENoaWxkID0gdGhpcy5tZXRob2ROYW1lOworCQlwcmVSZXBsYWNlQ2hpbGQob2xk
Q2hpbGQsIG5hbWUsIE5BTUVfUFJPUEVSVFkpOworCQl0aGlzLm1ldGhvZE5hbWUgPSBuYW1lOwor
CQlwb3N0UmVwbGFjZUNoaWxkKG9sZENoaWxkLCBuYW1lLCBOQU1FX1BST1BFUlRZKTsKKwl9CisK
KwkvKioKKwkgKiBSZXNvbHZlcyBhbmQgcmV0dXJucyB0aGUgYmluZGluZyBmb3IgdGhlIG1ldGhv
ZCByZWZlcmVuY2VkIGJ5IHRoaXMKKwkgKiBleHByZXNzaW9uLgorCSAqIDxwPgorCSAqIE5vdGUg
dGhhdCBiaW5kaW5ncyBhcmUgZ2VuZXJhbGx5IHVuYXZhaWxhYmxlIHVubGVzcyByZXF1ZXN0ZWQg
d2hlbiB0aGUKKwkgKiBBU1QgaXMgYmVpbmcgYnVpbHQuCisJICogPC9wPgorCSAqCisJICogQHJl
dHVybiB0aGUgbWV0aG9kIGJpbmRpbmcsIG9yIDxjb2RlPm51bGw8L2NvZGU+IGlmIHRoZSBiaW5k
aW5nIGNhbm5vdAorCSAqIGJlIHJlc29sdmVkCisJICovCisJcHVibGljIElNZXRob2RCaW5kaW5n
IHJlc29sdmVNZXRob2RCaW5kaW5nKCkgeworCQlyZXR1cm4gdGhpcy5hc3QuZ2V0QmluZGluZ1Jl
c29sdmVyKCkucmVzb2x2ZU1ldGhvZCh0aGlzKTsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9jIGZv
ciB0aGlzIG1ldGhvZCkKKwkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8KKwlp
bnQgbWVtU2l6ZSgpIHsKKwkJLy8gdHJlYXQgQ29kZSBhcyBmcmVlCisJCXJldHVybiBCQVNFX05P
REVfU0laRSArIDMgKiA0OworCX0KKworCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9k
KQorCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAqLworCWludCB0cmVlU2l6ZSgp
IHsKKwkJcmV0dXJuCisJCQltZW1TaXplKCkKKwkJCSsgKHRoaXMub3B0aW9uYWxRdWFsaWZpZXIg
PT0gbnVsbCA/IDAgOiBnZXRRdWFsaWZpZXIoKS50cmVlU2l6ZSgpKQorCQkJKyAodGhpcy50eXBl
QXJndW1lbnRzID09IG51bGwgPyAwIDogdGhpcy50eXBlQXJndW1lbnRzLmxpc3RTaXplKCkpCisJ
CQkrICh0aGlzLm1ldGhvZE5hbWUgPT0gbnVsbCA/IDAgOiBnZXROYW1lKCkudHJlZVNpemUoKSk7
CisJfQorfQpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGUKZGlmZiAtLWdpdCBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vVHlwZU1ldGhvZFJlZmVy
ZW5jZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L2RvbS9UeXBlTWV0aG9kUmVmZXJlbmNlLmphdmEKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXgg
MDAwMDAwMC4uMTIyMTNlYgotLS0gL2Rldi9udWxsCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vVHlwZU1ldGhvZFJlZmVyZW5jZS5qYXZhCkBA
IC0wLDAgKzEsMzExIEBACisvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgorICogQ29weXJpZ2h0IChj
KSAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQWxsIHJpZ2h0cyByZXNlcnZl
ZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscworICogYXJlIG1h
ZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5z
ZSB2MS4wCisgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2
YWlsYWJsZSBhdAorICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwK
KyAqCisgKiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIGFuIGVhcmx5LWRyYWZ0IHNwZWNp
ZmljYXRpb24gZGV2ZWxvcGVkIHVuZGVyIHRoZSBKYXZhCisgKiBDb21tdW5pdHkgUHJvY2VzcyAo
SkNQKSBhbmQgaXMgbWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgYW5kIGV2YWx1YXRpb24gcHVy
cG9zZXMKKyAqIG9ubHkuIFRoZSBjb2RlIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYW55IHNwZWNp
ZmljYXRpb24gb2YgdGhlIEpDUC4KKyAqIAorICogQ29udHJpYnV0b3JzOgorICogICAgIElCTSBD
b3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgorICoqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKiovCitwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLmRvbTsKKworaW1wb3J0
IGphdmEudXRpbC5BcnJheUxpc3Q7CitpbXBvcnQgamF2YS51dGlsLkxpc3Q7CisKKy8qKgorICog
VHlwZSBNZXRob2QgUmVmZXJlbmNlIGV4cHJlc3Npb24gQVNUIG5vZGUgdHlwZS4gQWRkZWQgaW4g
SkxTNCBBUEkuCisgKiA8cHJlPgorICogVHlwZU1ldGhvZFJlZmVyZW5jZToKKyAqICAgICBUeXBl
IDxiPjo6PC9iPiAKKyAqICAgICAgICAgWyA8Yj4mbHQ7PC9iPiBUeXBlIHsgPGI+LDwvYj4gVHlw
ZSB9IDxiPiZndDs8L2I+IF0KKyAqICAgICAgICAgSWRlbnRpZmllcgorICogPC9wcmU+CisgKgor
ICogQHNpbmNlIDMuOSBCRVRBX0pBVkE4CisgKiBAbm9pbnN0YW50aWF0ZSBUaGlzIGNsYXNzIGlz
IG5vdCBpbnRlbmRlZCB0byBiZSBpbnN0YW50aWF0ZWQgYnkgY2xpZW50cy4KKyAqLworcHVibGlj
IGNsYXNzIFR5cGVNZXRob2RSZWZlcmVuY2UgZXh0ZW5kcyBFeHByZXNzaW9uIHsKKworCS8qKgor
CSAqIFRoZSAidHlwZSIgc3RydWN0dXJhbCBwcm9wZXJ0eSBvZiB0aGlzIG5vZGUgdHlwZSAoY2hp
bGQgdHlwZToge0BsaW5rIFR5cGV9KS4KKwkgKi8KKwlwdWJsaWMgc3RhdGljIGZpbmFsIENoaWxk
UHJvcGVydHlEZXNjcmlwdG9yIFRZUEVfUFJPUEVSVFkgPQorCQluZXcgQ2hpbGRQcm9wZXJ0eURl
c2NyaXB0b3IoVHlwZU1ldGhvZFJlZmVyZW5jZS5jbGFzcywgInR5cGUiLCBUeXBlLmNsYXNzLCBN
QU5EQVRPUlksIE5PX0NZQ0xFX1JJU0spOyAvLyROT04tTkxTLTEkCisKKwkvKioKKwkgKiBUaGUg
InR5cGVBcmd1bWVudHMiIHN0cnVjdHVyYWwgcHJvcGVydHkgb2YgdGhpcyBub2RlIHR5cGUgKGVs
ZW1lbnQgdHlwZToge0BsaW5rIFR5cGV9KSAKKwkgKi8KKwlwdWJsaWMgc3RhdGljIGZpbmFsIENo
aWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBUWVBFX0FSR1VNRU5UU19QUk9QRVJUWSA9CisJCW5l
dyBDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IoVHlwZU1ldGhvZFJlZmVyZW5jZS5jbGFzcywg
InR5cGVBcmd1bWVudHMiLCBUeXBlLmNsYXNzLCBOT19DWUNMRV9SSVNLKTsgLy8kTk9OLU5MUy0x
JAorCisJLyoqCisJICogVGhlICJuYW1lIiBzdHJ1Y3R1cmFsIHByb3BlcnR5IG9mIHRoaXMgbm9k
ZSB0eXBlIChjaGlsZCB0eXBlOiB7QGxpbmsgU2ltcGxlTmFtZX0uIAorCSAqLworCXB1YmxpYyBz
dGF0aWMgZmluYWwgQ2hpbGRQcm9wZXJ0eURlc2NyaXB0b3IgTkFNRV9QUk9QRVJUWSA9CisJCW5l
dyBDaGlsZFByb3BlcnR5RGVzY3JpcHRvcihUeXBlTWV0aG9kUmVmZXJlbmNlLmNsYXNzLCAibmFt
ZSIsIFNpbXBsZU5hbWUuY2xhc3MsIE1BTkRBVE9SWSwgTk9fQ1lDTEVfUklTSyk7IC8vJE5PTi1O
TFMtMSQKKworCS8qKgorCSAqIEEgbGlzdCBvZiBwcm9wZXJ0eSBkZXNjcmlwdG9ycyAoZWxlbWVu
dCB0eXBlOgorCSAqIHtAbGluayBTdHJ1Y3R1cmFsUHJvcGVydHlEZXNjcmlwdG9yfSksCisJICog
b3IgbnVsbCBpZiB1bmluaXRpYWxpemVkLgorCSAqLworCXByaXZhdGUgc3RhdGljIGZpbmFsIExp
c3QgUFJPUEVSVFlfREVTQ1JJUFRPUlNfOF8wOworCQorCXN0YXRpYyB7CisJCUxpc3QgcHJvcGVy
dHlMaXN0ID0gbmV3IEFycmF5TGlzdCg0KTsKKwkJY3JlYXRlUHJvcGVydHlMaXN0KFR5cGVNZXRo
b2RSZWZlcmVuY2UuY2xhc3MsIHByb3BlcnR5TGlzdCk7CisJCWFkZFByb3BlcnR5KFRZUEVfUFJP
UEVSVFksIHByb3BlcnR5TGlzdCk7CisJCWFkZFByb3BlcnR5KFRZUEVfQVJHVU1FTlRTX1BST1BF
UlRZLCBwcm9wZXJ0eUxpc3QpOworCQlhZGRQcm9wZXJ0eShOQU1FX1BST1BFUlRZLCBwcm9wZXJ0
eUxpc3QpOworCQlQUk9QRVJUWV9ERVNDUklQVE9SU184XzAgPSByZWFwUHJvcGVydHlMaXN0KHBy
b3BlcnR5TGlzdCk7CisJfQorCQorCS8qKgorCSAqIFJldHVybnMgYSBsaXN0IG9mIHN0cnVjdHVy
YWwgcHJvcGVydHkgZGVzY3JpcHRvcnMgZm9yIHRoaXMgbm9kZSB0eXBlLgorCSAqIENsaWVudHMg
bXVzdCBub3QgbW9kaWZ5IHRoZSByZXN1bHQuCisJICoKKwkgKiBAcGFyYW0gYXBpTGV2ZWwgdGhl
IEFQSSBsZXZlbDsgb25lIG9mIHRoZSBBU1QuSkxTKiBjb25zdGFudHMKKwkgKiBAcmV0dXJuIGEg
bGlzdCBvZiBwcm9wZXJ0eSBkZXNjcmlwdG9ycyAoZWxlbWVudCB0eXBlOgorCSAqIHtAbGluayBT
dHJ1Y3R1cmFsUHJvcGVydHlEZXNjcmlwdG9yfSkKKwkgKi8KKwlwdWJsaWMgc3RhdGljIExpc3Qg
cHJvcGVydHlEZXNjcmlwdG9ycyhpbnQgYXBpTGV2ZWwpIHsKKwkJcmV0dXJuIFBST1BFUlRZX0RF
U0NSSVBUT1JTXzhfMDsKKwl9CisKKwkvKioKKwkgKiBUaGUgdHlwZTsgZGVmYXVsdHMgdG8gbnVs
bC4KKwkgKi8KKwlwcml2YXRlIFR5cGUgdHlwZSA9IG51bGw7CisKKwkvKioKKwkgKiBUaGUgdHlw
ZSBhcmd1bWVudHMgKGVsZW1lbnQgdHlwZToge0BsaW5rIFR5cGV9KS4KKwkgKiBEZWZhdWx0cyB0
byBhbiBlbXB0eSBsaXN0LgorCSAqLworCXByaXZhdGUgQVNUTm9kZS5Ob2RlTGlzdCB0eXBlQXJn
dW1lbnRzID0KKwkJbmV3IEFTVE5vZGUuTm9kZUxpc3QoVFlQRV9BUkdVTUVOVFNfUFJPUEVSVFkp
OworCQorCS8qKgorCSAqIFRoZSBtZXRob2QgbmFtZTsgbGF6aWx5IGluaXRpYWxpemVkOyBkZWZh
dWx0cyB0byBhbiB1bnNwZWNpZmllZCwKKwkgKiBsZWdhbCBKYXZhIG1ldGhvZCBuYW1lLgorCSAq
LworCXByaXZhdGUgU2ltcGxlTmFtZSBtZXRob2ROYW1lID0gbnVsbDsKKworCS8qKgorCSAqIENy
ZWF0ZXMgYSBuZXcgQVNUIG5vZGUgZm9yIGFuIFR5cGVNZXRob2RSZWZlcmVuY2UgZGVjbGFyYXRp
b24gb3duZWQKKwkgKiBieSB0aGUgZ2l2ZW4gQVNULgorCSAqIDxwPgorCSAqIE4uQi4gVGhpcyBj
b25zdHJ1Y3RvciBpcyBwYWNrYWdlLXByaXZhdGU7IGFsbCBzdWJjbGFzc2VzIG11c3QgYmUKKwkg
KiBkZWNsYXJlZCBpbiB0aGUgc2FtZSBwYWNrYWdlOyBjbGllbnRzIGFyZSB1bmFibGUgdG8gZGVj
bGFyZQorCSAqIGFkZGl0aW9uYWwgc3ViY2xhc3Nlcy4KKwkgKiA8L3A+CisJICoKKwkgKiBAcGFy
YW0gYXN0IHRoZSBBU1QgdGhhdCBpcyB0byBvd24gdGhpcyBub2RlCisJICovCisJVHlwZU1ldGhv
ZFJlZmVyZW5jZShBU1QgYXN0KSB7CisJCXN1cGVyKGFzdCk7CisJCXVuc3VwcG9ydGVkSW4yXzNf
NCgpOworCX0KKworCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQorCSAqIE1ldGhv
ZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAqLworCWZpbmFsIExpc3QgaW50ZXJuYWxTdHJ1Y3R1
cmFsUHJvcGVydGllc0ZvclR5cGUoaW50IGFwaUxldmVsKSB7CisJCXJldHVybiBwcm9wZXJ0eURl
c2NyaXB0b3JzKGFwaUxldmVsKTsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1l
dGhvZCkKKwkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8KKwlmaW5hbCBBU1RO
b2RlIGludGVybmFsR2V0U2V0Q2hpbGRQcm9wZXJ0eShDaGlsZFByb3BlcnR5RGVzY3JpcHRvciBw
cm9wZXJ0eSwgYm9vbGVhbiBnZXQsIEFTVE5vZGUgY2hpbGQpIHsKKwkJaWYgKHByb3BlcnR5ID09
IE5BTUVfUFJPUEVSVFkpIHsKKwkJCWlmIChnZXQpIHsKKwkJCQlyZXR1cm4gZ2V0TmFtZSgpOwor
CQkJfSBlbHNlIHsKKwkJCQlzZXROYW1lKChTaW1wbGVOYW1lKSBjaGlsZCk7CisJCQkJcmV0dXJu
IG51bGw7CisJCQl9CisJCX0KKwkJaWYgKHByb3BlcnR5ID09IFRZUEVfUFJPUEVSVFkpIHsKKwkJ
CWlmIChnZXQpIHsKKwkJCQlyZXR1cm4gZ2V0VHlwZSgpOworCQkJfSBlbHNlIHsKKwkJCQlzZXRU
eXBlKChUeXBlKSBjaGlsZCk7CisJCQkJcmV0dXJuIG51bGw7CisJCQl9CisJCX0KKwkJLy8gYWxs
b3cgZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiB0byBmbGFnIHRoZSBlcnJvcgorCQlyZXR1cm4gc3Vw
ZXIuaW50ZXJuYWxHZXRTZXRDaGlsZFByb3BlcnR5KHByb3BlcnR5LCBnZXQsIGNoaWxkKTsKKwl9
CisKKwkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKKwkgKiBNZXRob2QgZGVjbGFy
ZWQgb24gQVNUTm9kZS4KKwkgKi8KKwlmaW5hbCBMaXN0IGludGVybmFsR2V0Q2hpbGRMaXN0UHJv
cGVydHkoQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yIHByb3BlcnR5KSB7CisJCWlmIChwcm9w
ZXJ0eSA9PSBUWVBFX0FSR1VNRU5UU19QUk9QRVJUWSkgeworCQkJcmV0dXJuIHR5cGVBcmd1bWVu
dHMoKTsKKwkJfQorCQkvLyBhbGxvdyBkZWZhdWx0IGltcGxlbWVudGF0aW9uIHRvIGZsYWcgdGhl
IGVycm9yCisJCXJldHVybiBzdXBlci5pbnRlcm5hbEdldENoaWxkTGlzdFByb3BlcnR5KHByb3Bl
cnR5KTsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKKwkgKiBNZXRo
b2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8KKwlmaW5hbCBpbnQgZ2V0Tm9kZVR5cGUwKCkg
eworCQlyZXR1cm4gVFlQRV9NRVRIT0RfUkVGRVJFTkNFOworCX0KKworCS8qIChvbWl0IGphdmFk
b2MgZm9yIHRoaXMgbWV0aG9kKQorCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAq
LworCUFTVE5vZGUgY2xvbmUwKEFTVCB0YXJnZXQpIHsKKwkJVHlwZU1ldGhvZFJlZmVyZW5jZSBy
ZXN1bHQgPSBuZXcgVHlwZU1ldGhvZFJlZmVyZW5jZSh0YXJnZXQpOworCQlyZXN1bHQuc2V0U291
cmNlUmFuZ2UoZ2V0U3RhcnRQb3NpdGlvbigpLCBnZXRMZW5ndGgoKSk7CisJCXJlc3VsdC5zZXRO
YW1lKChTaW1wbGVOYW1lKSBnZXROYW1lKCkuY2xvbmUodGFyZ2V0KSk7CisJCXJlc3VsdC5zZXRU
eXBlKAorCQkJKFR5cGUpIEFTVE5vZGUuY29weVN1YnRyZWUodGFyZ2V0LCBnZXRUeXBlKCkpKTsK
KwkJcmVzdWx0LnR5cGVBcmd1bWVudHMoKS5hZGRBbGwoQVNUTm9kZS5jb3B5U3VidHJlZXModGFy
Z2V0LCB0eXBlQXJndW1lbnRzKCkpKTsKKwkJcmV0dXJuIHJlc3VsdDsKKwl9CisKKwkvKiAob21p
dCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKKwkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9k
ZS4KKwkgKi8KKwlmaW5hbCBib29sZWFuIHN1YnRyZWVNYXRjaDAoQVNUTWF0Y2hlciBtYXRjaGVy
LCBPYmplY3Qgb3RoZXIpIHsKKwkJLy8gZGlzcGF0Y2ggdG8gY29ycmVjdCBvdmVybG9hZGVkIG1h
dGNoIG1ldGhvZAorCQlyZXR1cm4gbWF0Y2hlci5tYXRjaCh0aGlzLCBvdGhlcik7CisJfQorCisJ
LyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCisJICogTWV0aG9kIGRlY2xhcmVkIG9u
IEFTVE5vZGUuCisJICovCisJdm9pZCBhY2NlcHQwKEFTVFZpc2l0b3IgdmlzaXRvcikgeworCQli
b29sZWFuIHZpc2l0Q2hpbGRyZW4gPSB2aXNpdG9yLnZpc2l0KHRoaXMpOworCQlpZiAodmlzaXRD
aGlsZHJlbikgeworCQkJLy8gdmlzaXQgY2hpbGRyZW4gaW4gbm9ybWFsIGxlZnQgdG8gcmlnaHQg
cmVhZGluZyBvcmRlcgorCQkJYWNjZXB0Q2hpbGQodmlzaXRvciwgZ2V0VHlwZSgpKTsKKwkJCWFj
Y2VwdENoaWxkcmVuKHZpc2l0b3IsIHRoaXMudHlwZUFyZ3VtZW50cyk7CisJCQlhY2NlcHRDaGls
ZCh2aXNpdG9yLCBnZXROYW1lKCkpOworCQl9CisJCXZpc2l0b3IuZW5kVmlzaXQodGhpcyk7CisJ
fQorCisJLyoqCisJICogUmV0dXJucyB0aGUgdHlwZSBvZiB0aGlzIHR5cGUgbWV0aG9kIHJlZmVy
ZW5jZSBleHByZXNzaW9uCisJICoKKwkgKiBAcmV0dXJuIHRoZSB0eXBlIG5vZGUKKwkgKi8KKwlw
dWJsaWMgVHlwZSBnZXRUeXBlKCkgeworCQlyZXR1cm4gdGhpcy50eXBlOworCX0KKworCS8qKgor
CSAqIFNldHMgdGhlIHR5cGUgb2YgdGhpcyB0eXBlIG1ldGhvZCByZWZlcmVuY2UuCisJICoKKwkg
KiBAcGFyYW0gdHlwZSB0eXBlIG9mIHRoaXMgbWV0aG9kIHJlZmVyZW5jZQorCSAqIEBleGNlcHRp
b24gSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uIGlmOgorCSAqIDx1bD4KKwkgKiA8bGk+dGhlIG5v
ZGUgYmVsb25ncyB0byBhIGRpZmZlcmVudCBBU1Q8L2xpPgorCSAqIDxsaT50aGUgbm9kZSBhbHJl
YWR5IGhhcyBhIHBhcmVudDwvbGk+CisJICogPGxpPmEgY3ljbGUgaW4gd291bGQgYmUgY3JlYXRl
ZDwvbGk+CisJICogPC91bD4KKwkgKi8KKwlwdWJsaWMgdm9pZCBzZXRUeXBlKFR5cGUgdHlwZSkg
eworCQlpZiAodHlwZSA9PSBudWxsKSB7CisJCQl0aHJvdyBuZXcgSWxsZWdhbEFyZ3VtZW50RXhj
ZXB0aW9uKCk7CisJCX0KKwkJQVNUTm9kZSBvbGRDaGlsZCA9IHRoaXMudHlwZTsKKwkJcHJlUmVw
bGFjZUNoaWxkKG9sZENoaWxkLCB0eXBlLCBUWVBFX1BST1BFUlRZKTsKKwkJdGhpcy50eXBlID0g
dHlwZTsKKwkJcG9zdFJlcGxhY2VDaGlsZChvbGRDaGlsZCwgdHlwZSwgVFlQRV9QUk9QRVJUWSk7
CisJfQorCisJLyoqCisJICogUmV0dXJucyB0aGUgbGl2ZSBvcmRlcmVkIGxpc3Qgb2YgdHlwZSBh
cmd1bWVudHMgb2YgdGhpcyB0eXBlIG1ldGhvZCByZWZlcmVuY2UKKwkgKgorCSAqIEByZXR1cm4g
dGhlIGxpdmUgbGlzdCBvZiB0eXBlIGFyZ3VtZW50cworCSAqICAgIChlbGVtZW50IHR5cGU6IHtA
bGluayBUeXBlfSkKKwkgKi8KKwlwdWJsaWMgTGlzdCB0eXBlQXJndW1lbnRzKCkgeworCQlyZXR1
cm4gdGhpcy50eXBlQXJndW1lbnRzOworCX0KKworCS8qKgorCSAqIFJldHVybnMgdGhlIG5hbWUg
b2YgdGhlIG1ldGhvZCByZWZlcmVuY2VkIGluIHRoaXMgZXhwcmVzc2lvbi4KKwkgKgorCSAqIEBy
ZXR1cm4gdGhlIG1ldGhvZCBuYW1lIG5vZGUKKwkgKi8KKwlwdWJsaWMgU2ltcGxlTmFtZSBnZXRO
YW1lKCkgeworCQlpZiAodGhpcy5tZXRob2ROYW1lID09IG51bGwpIHsKKwkJCS8vIGxhenkgaW5p
dCBtdXN0IGJlIHRocmVhZC1zYWZlIGZvciByZWFkZXJzCisJCQlzeW5jaHJvbml6ZWQgKHRoaXMp
IHsKKwkJCQlpZiAodGhpcy5tZXRob2ROYW1lID09IG51bGwpIHsKKwkJCQkJcHJlTGF6eUluaXQo
KTsKKwkJCQkJdGhpcy5tZXRob2ROYW1lID0gbmV3IFNpbXBsZU5hbWUodGhpcy5hc3QpOworCQkJ
CQlwb3N0TGF6eUluaXQodGhpcy5tZXRob2ROYW1lLCBOQU1FX1BST1BFUlRZKTsKKwkJCQl9CisJ
CQl9CisJCX0KKwkJcmV0dXJuIHRoaXMubWV0aG9kTmFtZTsKKwl9CisKKwkvKioKKwkgKiBTZXRz
IHRoZSBuYW1lIG9mIHRoZSBtZXRob2QgcmVmZXJlbmNlZCBpbiB0aGlzIGV4cHJlc3Npb24gdG8g
dGhlCisJICogZ2l2ZW4gbmFtZS4KKwkgKgorCSAqIEBwYXJhbSBuYW1lIHRoZSBuZXcgbWV0aG9k
IG5hbWUKKwkgKiBAZXhjZXB0aW9uIElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbiBpZjoKKwkgKiA8
dWw+CisJICogPGxpPnRoZSBub2RlIGJlbG9uZ3MgdG8gYSBkaWZmZXJlbnQgQVNUPC9saT4KKwkg
KiA8bGk+dGhlIG5vZGUgYWxyZWFkeSBoYXMgYSBwYXJlbnQ8L2xpPgorCSAqIDwvdWw+CisJICov
CisJcHVibGljIHZvaWQgc2V0TmFtZShTaW1wbGVOYW1lIG5hbWUpIHsKKwkJaWYgKG5hbWUgPT0g
bnVsbCkgeworCQkJdGhyb3cgbmV3IElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbigpOworCQl9CisJ
CUFTVE5vZGUgb2xkQ2hpbGQgPSB0aGlzLm1ldGhvZE5hbWU7CisJCXByZVJlcGxhY2VDaGlsZChv
bGRDaGlsZCwgbmFtZSwgTkFNRV9QUk9QRVJUWSk7CisJCXRoaXMubWV0aG9kTmFtZSA9IG5hbWU7
CisJCXBvc3RSZXBsYWNlQ2hpbGQob2xkQ2hpbGQsIG5hbWUsIE5BTUVfUFJPUEVSVFkpOworCX0K
KworCS8qKgorCSAqIFJlc29sdmVzIGFuZCByZXR1cm5zIHRoZSBiaW5kaW5nIGZvciB0aGUgbWV0
aG9kIHJlZmVyZW5jZWQgYnkgdGhpcworCSAqIGV4cHJlc3Npb24uCisJICogPHA+CisJICogTm90
ZSB0aGF0IGJpbmRpbmdzIGFyZSBnZW5lcmFsbHkgdW5hdmFpbGFibGUgdW5sZXNzIHJlcXVlc3Rl
ZCB3aGVuIHRoZQorCSAqIEFTVCBpcyBiZWluZyBidWlsdC4KKwkgKiA8L3A+CisJICoKKwkgKiBA
cmV0dXJuIHRoZSBtZXRob2QgYmluZGluZywgb3IgPGNvZGU+bnVsbDwvY29kZT4gaWYgdGhlIGJp
bmRpbmcgY2Fubm90CisJICogYmUgcmVzb2x2ZWQKKwkgKi8KKwlwdWJsaWMgSU1ldGhvZEJpbmRp
bmcgcmVzb2x2ZU1ldGhvZEJpbmRpbmcoKSB7CisJCXJldHVybiB0aGlzLmFzdC5nZXRCaW5kaW5n
UmVzb2x2ZXIoKS5yZXNvbHZlTWV0aG9kKHRoaXMpOworCX0KKworCS8qIChvbWl0IGphdmFkb2Mg
Zm9yIHRoaXMgbWV0aG9kKQorCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAqLwor
CWludCBtZW1TaXplKCkgeworCQkvLyB0cmVhdCBDb2RlIGFzIGZyZWUKKwkJcmV0dXJuIEJBU0Vf
Tk9ERV9TSVpFICsgMyAqIDQ7CisJfQorCisJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRo
b2QpCisJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCisJICovCisJaW50IHRyZWVTaXpl
KCkgeworCQlyZXR1cm4KKwkJCW1lbVNpemUoKQorCQkJKyAodGhpcy50eXBlID09IG51bGwgPyAw
IDogZ2V0VHlwZSgpLnRyZWVTaXplKCkpCisJCQkrICh0aGlzLnR5cGVBcmd1bWVudHMgPT0gbnVs
bCA/IDAgOiB0aGlzLnR5cGVBcmd1bWVudHMubGlzdFNpemUoKSkKKwkJCSsgKHRoaXMubWV0aG9k
TmFtZSA9PSBudWxsID8gMCA6IGdldE5hbWUoKS50cmVlU2l6ZSgpKTsKKwl9Cit9ClwgTm8gbmV3
bGluZSBhdCBlbmQgb2YgZmlsZQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9t
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9OYWl2ZUFTVEZsYXR0ZW5lci5qYXZh
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3Jl
L2RvbS9OYWl2ZUFTVEZsYXR0ZW5lci5qYXZhCmluZGV4IGVjZDgyZGEuLjNjM2FhN2EgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29yZS9kb20vTmFpdmVBU1RGbGF0dGVuZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL05haXZlQVNURmxhdHRlbmVy
LmphdmEKQEAgLTIwMiw2ICsyMDIsMjcgQEAKIAkJfQogCX0KIAorCS8qKgorCSAqIHJlZmVyZW5j
ZSBub2RlIGhlbHBlciBmdW5jdGlvbiB0aGF0IGlzIGNvbW1vbiB0byBhbGwKKwkgKiB0aGUgZGlm
ZmVyZW5jZSByZWZlcmVuY2Ugbm9kZXMuCisJICogCisJICogQHBhcmFtIHR5cGVBcmd1bWVudHMg
bGlzdCBvZiB0eXBlIGFyZ3VtZW50cyAKKwkgKi8KKwlwcml2YXRlIHZvaWQgdmlzaXRSZWZlcmVu
Y2VUeXBlQXJndW1lbnRzKExpc3QgdHlwZUFyZ3VtZW50cykgeworCQl0aGlzLmJ1ZmZlci5hcHBl
bmQoIjo6Iik7Ly8kTk9OLU5MUy0xJAorCQlpZiAoIXR5cGVBcmd1bWVudHMuaXNFbXB0eSgpKSB7
CisJCQl0aGlzLmJ1ZmZlci5hcHBlbmQoJzwnKTsKKwkJCWZvciAoSXRlcmF0b3IgaXQgPSB0eXBl
QXJndW1lbnRzLml0ZXJhdG9yKCk7IGl0Lmhhc05leHQoKTsgKSB7CisJCQkJVHlwZSB0ID0gKFR5
cGUpIGl0Lm5leHQoKTsKKwkJCQl0LmFjY2VwdCh0aGlzKTsKKwkJCQlpZiAoaXQuaGFzTmV4dCgp
KSB7CisJCQkJCXRoaXMuYnVmZmVyLmFwcGVuZCgnLCcpOworCQkJCX0KKwkJCX0KKwkJCXRoaXMu
YnVmZmVyLmFwcGVuZCgnPicpOworCQl9CisJfQorCQogCXByaXZhdGUgdm9pZCB2aXNpdFR5cGVB
bm5vdGF0aW9ucyhBbm5vdGF0YWJsZVR5cGUgbm9kZSkgewogCQlpZiAobm9kZS5nZXRBU1QoKS5h
cGlMZXZlbCgpID49IEFTVC5KTFM4KSB7CiAJCQl2aXNpdEFubm90YXRpb25zTGlzdChub2RlLmFu
bm90YXRpb25zKCkpOwpAQCAtNTc2LDcgKzU5NywxOSBAQAogCQl0aGlzLmJ1ZmZlci5hcHBlbmQo
IjtcbiIpOy8vJE5PTi1OTFMtMSQKIAkJcmV0dXJuIGZhbHNlOwogCX0KLQkKKworCS8qCisJICog
QHNlZSBBU1RWaXNpdG9yI3Zpc2l0KENyZWF0aW9uUmVmZXJlbmNlKQorCSAqIAorCSAqIEBzaW5j
ZSAzLjkgQkVUQV9KQVZBOAorCSAqLworCXB1YmxpYyBib29sZWFuIHZpc2l0KENyZWF0aW9uUmVm
ZXJlbmNlIG5vZGUpIHsKKwkJbm9kZS5nZXRFeHByZXNzaW9uKCkuYWNjZXB0KHRoaXMpOworCQl2
aXNpdFJlZmVyZW5jZVR5cGVBcmd1bWVudHMobm9kZS50eXBlQXJndW1lbnRzKCkpOworCQl0aGlz
LmJ1ZmZlci5hcHBlbmQoIm5ldyIpOy8vJE5PTi1OTFMtMSQKKwkJcmV0dXJuIGZhbHNlOworCX0K
KwogCS8qCiAJICogQHNlZSBBU1RWaXNpdG9yI3Zpc2l0KERvU3RhdGVtZW50KQogCSAqLwpAQCAt
Njg3LDYgKzcyMCwxOCBAQAogCQl0aGlzLmJ1ZmZlci5hcHBlbmQoIn1cbiIpOy8vJE5PTi1OTFMt
MSQKIAkJcmV0dXJuIGZhbHNlOwogCX0KKworCS8qCisJICogQHNlZSBBU1RWaXNpdG9yI3Zpc2l0
KEV4cHJlc3Npb25NZXRob2RSZWZlcmVuY2UpCisJICogCisJICogQHNpbmNlIDMuOSBCRVRBX0pB
VkE4CisJICovCisJcHVibGljIGJvb2xlYW4gdmlzaXQoRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5j
ZSBub2RlKSB7CisJCW5vZGUuZ2V0RXhwcmVzc2lvbigpLmFjY2VwdCh0aGlzKTsKKwkJdmlzaXRS
ZWZlcmVuY2VUeXBlQXJndW1lbnRzKG5vZGUudHlwZUFyZ3VtZW50cygpKTsKKwkJbm9kZS5nZXRO
YW1lKCkuYWNjZXB0KHRoaXMpOworCQlyZXR1cm4gZmFsc2U7CisJfQkKIAogCS8qCiAJICogQHNl
ZSBBU1RWaXNpdG9yI3Zpc2l0KEV4cHJlc3Npb25TdGF0ZW1lbnQpCkBAIC0xNDc5LDYgKzE1MjQs
MjIgQEAKIAl9CiAKIAkvKgorCSAqIEBzZWUgQVNUVmlzaXRvciN2aXNpdChTdXBlck1ldGhvZFJl
ZmVyZW5jZSkKKwkgKiAKKwkgKiBAc2luY2UgMy45IEJFVEFfSkFWQTgKKwkgKi8KKwlwdWJsaWMg
Ym9vbGVhbiB2aXNpdChTdXBlck1ldGhvZFJlZmVyZW5jZSBub2RlKSB7CisJCWlmIChub2RlLmdl
dFF1YWxpZmllcigpICE9IG51bGwpIHsKKwkJCW5vZGUuZ2V0UXVhbGlmaWVyKCkuYWNjZXB0KHRo
aXMpOworCQkJdGhpcy5idWZmZXIuYXBwZW5kKCcuJyk7CisJCX0KKwkJdGhpcy5idWZmZXIuYXBw
ZW5kKCJzdXBlciIpOy8vJE5PTi1OTFMtMSQKKwkJdmlzaXRSZWZlcmVuY2VUeXBlQXJndW1lbnRz
KG5vZGUudHlwZUFyZ3VtZW50cygpKTsKKwkJbm9kZS5nZXROYW1lKCkuYWNjZXB0KHRoaXMpOwor
CQlyZXR1cm4gZmFsc2U7CisJfQorCisJLyoKIAkgKiBAc2VlIEFTVFZpc2l0b3IjdmlzaXQoU3dp
dGNoQ2FzZSkKIAkgKi8KIAlwdWJsaWMgYm9vbGVhbiB2aXNpdChTd2l0Y2hDYXNlIG5vZGUpIHsK
QEAgLTE3MzUsNiArMTc5NiwxOCBAQAogCX0KIAogCS8qCisJICogQHNlZSBBU1RWaXNpdG9yI3Zp
c2l0KFR5cGVNZXRob2RSZWZlcmVuY2UpCisJICogCisJICogQHNpbmNlIDMuOSBCRVRBX0pBVkE4
CisJICovCisJcHVibGljIGJvb2xlYW4gdmlzaXQoVHlwZU1ldGhvZFJlZmVyZW5jZSBub2RlKSB7
CisJCW5vZGUuZ2V0VHlwZSgpLmFjY2VwdCh0aGlzKTsKKwkJdmlzaXRSZWZlcmVuY2VUeXBlQXJn
dW1lbnRzKG5vZGUudHlwZUFyZ3VtZW50cygpKTsKKwkJbm9kZS5nZXROYW1lKCkuYWNjZXB0KHRo
aXMpOworCQlyZXR1cm4gZmFsc2U7CisJfQorCisJLyoKIAkgKiBAc2VlIEFTVFZpc2l0b3Ijdmlz
aXQoVHlwZVBhcmFtZXRlcikKIAkgKiBAc2luY2UgMy4xCiAJICov
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>232151</attachid>
            <date>2013-06-10 02:10:00 -0400</date>
            <delta_ts>2013-06-10 02:10:10 -0400</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Fix-for-Bug-399794--18dom-ast-Add-a-new-node-type-fo.patch</filename>
            <type>text/plain</type>
            <size>96165</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
ZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZhCmluZGV4IDVhMzYyNjQuLmJkNDVmMDUgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Rv
bS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YQpAQCAtMTY2Miw2ICsxNjYyLDIyNCBAQAogCX0KIAog
CS8qKgorCSAqIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0z
OTk3OTQKKwkgKiBSZWZlcmVuY2VFeHByZXNzaW9uIEZhbWlseSBUZXN0cworCSAqIAorCSAqIEB0
aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uCisJICovCisJcHVibGljIHZvaWQgdGVzdDM5OTc5NCgp
IHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aGlzLndvcmtpbmdDb3B5ID0gZ2V0V29y
a2luZ0NvcHkoIi9Db252ZXJ0ZXIxOC9zcmMvdGVzdDM5OTc5NC9YLmphdmEiLAorCQkJCXRydWUv
KiByZXNvbHZlICovKTsKKwkJU3RyaW5nIGNvbnRlbnRzID0gInBhY2thZ2UgdGVzdDM5OTc5NDsi
ICsKKwkJCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLio7XG4gIiArCisJCQkJImludGVy
ZmFjZSBJIHtcbiIgKworCQkJCSIgICAgT2JqZWN0IGNvcHkoaW50IFtdIGlhKTtcbiIgKworCQkJ
CSJ9XG4iICsKKwkJCQkiaW50ZXJmYWNlIEoge1xuIiArCisJCQkJIgl2b2lkIGZvbyhpbnQgeCk7
XG4iICsKKwkJCQkifVxuIiArCisJCQkJImNsYXNzIFhYIHtcbiIgKworCQkJCSIJcHVibGljICB2
b2lkIGZvbyhpbnQgeCkge31cbiIgKworCQkJCSJ9XG4iICsKKwkJCQkiXG4iICsKKwkJCQkiY2xh
c3MgWSB7XG4iICsKKwkJCQkiICAgICAgIHN0YXRpYyBjbGFzcyBaIHtcbiIgKworCQkJCSIgICAg
ICAgICAgICAgICBwdWJsaWMgc3RhdGljIHZvaWQgZm9vKGludCB4KSB7XG4iICsKKwkJCQkiICAg
ICAgICAgICAgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50KHgpO1xuIiArCisJCQkJIiAgICAg
ICAgICAgICAgIH1cbiIgKworCQkJCSIgICAgICAgfVxuIiArCisJCQkJIiAgICAgICBwdWJsaWMg
dm9pZCBmb28oaW50IHgpIHtcbiIgKworCQkJCSIgICAgICAgICAgICAgICBTeXN0ZW0ub3V0LnBy
aW50KHgpO1xuIiArCisJCQkJIiAgICAgICB9XG4iICsKKwkJCQkiCQlwdWJsaWMgPFQ+IHZvaWQg
Zm9vKFQgdCl7dC5oYXNoQ29kZSgpO31cbiIgKworCQkJCSJ9XG4iICsKKwkJCQkiXG4iICsKKwkJ
CQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBYWCB7XG4iICsKKwkJCQkiICAgICAgIEBTdXBwcmVz
c1dhcm5pbmdzKFwidW51c2VkXCIpXG4iICsKKwkJCQkiICAgICAgIHB1YmxpYyAgdm9pZCBiYXIo
U3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJCSIgICAgICAgICAgICAgICAgWSB5ID0gbmV3IFko
KTtcbiIgKworCQkJCSIgICAgICAgICAgICAgICAgSSBpID0gQE1hcmtlciBpbnQgW106OjxTdHJp
bmc+Y2xvbmU7XG4iICsKKwkJCQkiICAgICAgICAgICAgICAgIEogaiA9IFkuQE1hcmtlciBaICA6
OiBmb287XG4iICsKKwkJCQkiICAgICAgICAgICAgICAgIEogajEgPSBZLkBNYXJrZXIgWiAgOjog
PFN0cmluZz4gZm9vO1xuIiArCisJCQkJIiAgICAgICAgICAgICAgICBKIGpkYXNoID0gQE1hcmtl
ciBXPEBNYXJrZXIgSW50ZWdlcj4gOjogPFN0cmluZz4gbmV3IDtcbiIgKworCQkJCSIgICAgICAg
ICAgICAgICAgSiBqaiA9IHkgOjogZm9vO1xuIiArCisJCQkJIiAgICAgICAgICAgICAgICBKIGp4
ID0gc3VwZXIgOjogIGZvbztcbiIgKworCQkJCSIJCSAJICAgICBjbGFzcyBaIHtcbiIgKworCQkJ
CSIJCQkJCXZvaWQgZm9vKCkge1xuIiArCisJCQkJIgkJCQkJCUoganogPSBYLnN1cGVyIDo6IGZv
bztcbiIgKworCQkgICAgCSIJCQkJCX1cbiIgKworCQkJCSIJCQkJfVxuIiArCQkKKwkJCQkiICAg
ICAgIH1cbiIgKworCQkJCSIgICAgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4gKFN0cmluZyBb
XSBhcmdzKSB7fVxuIiArCisJCQkJIn1cbiIgKworCQkJCSJjbGFzcyBXPFQ+IGV4dGVuZHMgWSB7
XG4iICsKKwkJCQkiICAgICAgIHB1YmxpYyBXKFQgeCkge31cbiIgKworCQkJCSJ9XG4iICsKKwkJ
CQkiXG4iICsKKwkJCQkiQFRhcmdldCAoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJCQki
QGludGVyZmFjZSBNYXJrZXIge30iOworCQkJCisJCUNvbXBpbGF0aW9uVW5pdCBjdSA9IChDb21w
aWxhdGlvblVuaXQpIGJ1aWxkQVNUKGNvbnRlbnRzLCB0aGlzLndvcmtpbmdDb3B5KTsKKwkJVHlw
ZURlY2xhcmF0aW9uIHR5cGVEZWNsYXJhdGlvbiA9IChUeXBlRGVjbGFyYXRpb24pIGdldEFTVE5v
ZGUoY3UsIDQpOworCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2QgPSB0eXBlRGVjbGFyYXRpb24u
Z2V0TWV0aG9kcygpWzBdOworCQlMaXN0IHN0YXRlbWVudHMgPSBtZXRob2QuZ2V0Qm9keSgpLnN0
YXRlbWVudHMoKTsKKwkJYXNzZXJ0VHJ1ZShzdGF0ZW1lbnRzLnNpemUoKSA9PSA4KTsKKwkJaW50
IGZDb3VudCA9IDE7CisJCQorCQkvLyB0eXBlIG1ldGhvZCByZWZlcmVuY2Ugd2l0aCBwcmltaXRp
dmUgdHlwZSB3aXRoIHR5cGUgYXJndW1lbnRzCisJCVZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1l
bnQgc3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIHN0YXRlbWVudHMu
Z2V0KGZDb3VudCsrKTsKKwkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IGZyYWdtZW50ID0g
KFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgc3RhdGVtZW50LmZyYWdtZW50cygpLmdldCgw
KTsKKwkJRXhwcmVzc2lvbiBleHByZXNzaW9uID0gZnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsK
KwkJYXNzZXJ0VHJ1ZShleHByZXNzaW9uIGluc3RhbmNlb2YgVHlwZU1ldGhvZFJlZmVyZW5jZSk7
CisJCVR5cGVNZXRob2RSZWZlcmVuY2UgdHlwZU1ldGhvZFJlZmVyZW5jZSA9IChUeXBlTWV0aG9k
UmVmZXJlbmNlKSBleHByZXNzaW9uOworCQljaGVja1NvdXJjZVJhbmdlKHR5cGVNZXRob2RSZWZl
cmVuY2UsICJATWFya2VyIGludCBbXTo6PFN0cmluZz5jbG9uZSIsIGNvbnRlbnRzKTsKKwkJSVR5
cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gdHlwZU1ldGhvZFJlZmVyZW5jZS5yZXNvbHZlVHlwZUJp
bmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCh0eXBlQmluZGluZyk7CisJCUlNZXRob2RCaW5kaW5n
IG1ldGhvZEJpbmRpbmcgPSB0eXBlTWV0aG9kUmVmZXJlbmNlLnJlc29sdmVNZXRob2RCaW5kaW5n
KCk7CisJCWFzc2VydE5vdE51bGwobWV0aG9kQmluZGluZyk7CisJCVR5cGUgdHlwZSA9IHR5cGVN
ZXRob2RSZWZlcmVuY2UuZ2V0VHlwZSgpOworCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJATWFy
a2VyIGludCBbXSIsIGNvbnRlbnRzKTsKKwkJTGlzdCB0eXBlQXJndW1lbnRzID0gdHlwZU1ldGhv
ZFJlZmVyZW5jZS50eXBlQXJndW1lbnRzKCk7CisJCWFzc2VydFRydWUodHlwZUFyZ3VtZW50cy5z
aXplKCkgPT0gMSk7CisJCXR5cGUgPSAoVHlwZSkgdHlwZUFyZ3VtZW50cy5nZXQoMCk7CisJCWNo
ZWNrU291cmNlUmFuZ2UodHlwZSwgIlN0cmluZyIsIGNvbnRlbnRzKTsKKwkJYXNzZXJ0VHJ1ZSh0
eXBlLmlzU2ltcGxlVHlwZSgpKTsKKwkJU2ltcGxlTmFtZSBuYW1lID0gdHlwZU1ldGhvZFJlZmVy
ZW5jZS5nZXROYW1lKCk7CisJCWNoZWNrU291cmNlUmFuZ2UobmFtZSwgImNsb25lIiwgY29udGVu
dHMpOworCQl0eXBlQmluZGluZyA9IG5hbWUucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2Vy
dE5vdE51bGwodHlwZUJpbmRpbmcpOworCisJCS8vIHR5cGUgbWV0aG9kIHJlZmVyZW5jZSB3aXRo
IHF1YWxpZmllZCB0eXBlIHdpdGhvdXQgdHlwZSBhcmd1bWVudHMKKwkJc3RhdGVtZW50ID0gKFZh
cmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIHN0YXRlbWVudHMuZ2V0KGZDb3VudCsrKTsKKwkJ
ZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBzdGF0ZW1lbnQuZnJhZ21l
bnRzKCkuZ2V0KDApOworCQlleHByZXNzaW9uID0gZnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsK
KwkJYXNzZXJ0VHJ1ZShleHByZXNzaW9uIGluc3RhbmNlb2YgVHlwZU1ldGhvZFJlZmVyZW5jZSk7
CisJCXR5cGVNZXRob2RSZWZlcmVuY2UgPSAoVHlwZU1ldGhvZFJlZmVyZW5jZSkgZXhwcmVzc2lv
bjsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlTWV0aG9kUmVmZXJlbmNlLCAiWS5ATWFya2VyIFog
IDo6IGZvbyIsIGNvbnRlbnRzKTsKKwkJdHlwZUJpbmRpbmcgPSB0eXBlTWV0aG9kUmVmZXJlbmNl
LnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKHR5cGVCaW5kaW5nKTsKKwkJ
bWV0aG9kQmluZGluZyA9IHR5cGVNZXRob2RSZWZlcmVuY2UucmVzb2x2ZU1ldGhvZEJpbmRpbmco
KTsKKwkJYXNzZXJ0Tm90TnVsbChtZXRob2RCaW5kaW5nKTsKKwkJdHlwZSA9IHR5cGVNZXRob2RS
ZWZlcmVuY2UuZ2V0VHlwZSgpOworCQlhc3NlcnRUcnVlKHR5cGUuaXNRdWFsaWZpZWRUeXBlKCkp
OworCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJZLkBNYXJrZXIgWiIsIGNvbnRlbnRzKTsKKwkJ
dHlwZUFyZ3VtZW50cyA9IHR5cGVNZXRob2RSZWZlcmVuY2UudHlwZUFyZ3VtZW50cygpOworCQlh
c3NlcnRUcnVlKHR5cGVBcmd1bWVudHMuc2l6ZSgpID09IDApOworCQluYW1lID0gdHlwZU1ldGhv
ZFJlZmVyZW5jZS5nZXROYW1lKCk7CisJCWNoZWNrU291cmNlUmFuZ2UobmFtZSwgImZvbyIsIGNv
bnRlbnRzKTsKKwkJdHlwZUJpbmRpbmcgPSBuYW1lLnJlc29sdmVUeXBlQmluZGluZygpOworCQlh
c3NlcnROb3ROdWxsKHR5cGVCaW5kaW5nKTsKKworCQkvLyB0eXBlIG1ldGhvZCByZWZlcmVuY2Ug
d2l0aCBxdWFsaWZpZWQgdHlwZSB3aXRoIHR5cGUgYXJndW1lbnRzCisJCXN0YXRlbWVudCA9IChW
YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBzdGF0ZW1lbnRzLmdldChmQ291bnQrKyk7CisJ
CWZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgc3RhdGVtZW50LmZyYWdt
ZW50cygpLmdldCgwKTsKKwkJZXhwcmVzc2lvbiA9IGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7
CisJCWFzc2VydFRydWUoZXhwcmVzc2lvbiBpbnN0YW5jZW9mIFR5cGVNZXRob2RSZWZlcmVuY2Up
OworCQl0eXBlTWV0aG9kUmVmZXJlbmNlID0gKFR5cGVNZXRob2RSZWZlcmVuY2UpIGV4cHJlc3Np
b247CisJCWNoZWNrU291cmNlUmFuZ2UodHlwZU1ldGhvZFJlZmVyZW5jZSwgIlkuQE1hcmtlciBa
ICA6OiA8U3RyaW5nPiBmb28iLCBjb250ZW50cyk7CisJCXR5cGVCaW5kaW5nID0gdHlwZU1ldGhv
ZFJlZmVyZW5jZS5yZXNvbHZlVHlwZUJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbCh0eXBlQmlu
ZGluZyk7CisJCW1ldGhvZEJpbmRpbmcgPSB0eXBlTWV0aG9kUmVmZXJlbmNlLnJlc29sdmVNZXRo
b2RCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwobWV0aG9kQmluZGluZyk7CisJCXR5cGUgPSB0
eXBlTWV0aG9kUmVmZXJlbmNlLmdldFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZSh0eXBlLmlzUXVhbGlm
aWVkVHlwZSgpKTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiWS5ATWFya2VyIFoiLCBjb250
ZW50cyk7CisJCXR5cGVBcmd1bWVudHMgPSB0eXBlTWV0aG9kUmVmZXJlbmNlLnR5cGVBcmd1bWVu
dHMoKTsKKwkJYXNzZXJ0VHJ1ZSh0eXBlQXJndW1lbnRzLnNpemUoKSA9PSAxKTsKKwkJdHlwZSA9
IChUeXBlKSB0eXBlQXJndW1lbnRzLmdldCgwKTsKKwkJYXNzZXJ0VHJ1ZSh0eXBlLmlzU2ltcGxl
VHlwZSgpKTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiU3RyaW5nIiwgY29udGVudHMpOwor
CQluYW1lID0gdHlwZU1ldGhvZFJlZmVyZW5jZS5nZXROYW1lKCk7CisJCWNoZWNrU291cmNlUmFu
Z2UobmFtZSwgImZvbyIsIGNvbnRlbnRzKTsKKwkJdHlwZUJpbmRpbmcgPSBuYW1lLnJlc29sdmVU
eXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKHR5cGVCaW5kaW5nKTsKKworCQkvLyBjcmVh
dGlvbiBtZXRob2QgcmVmZXJlbmNlCisJCXN0YXRlbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9u
U3RhdGVtZW50KSBzdGF0ZW1lbnRzLmdldChmQ291bnQrKyk7CisJCWZyYWdtZW50ID0gKFZhcmlh
YmxlRGVjbGFyYXRpb25GcmFnbWVudCkgc3RhdGVtZW50LmZyYWdtZW50cygpLmdldCgwKTsKKwkJ
ZXhwcmVzc2lvbiA9IGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CisJCWFzc2VydFRydWUoZXhw
cmVzc2lvbiBpbnN0YW5jZW9mIENyZWF0aW9uUmVmZXJlbmNlKTsKKwkJQ3JlYXRpb25SZWZlcmVu
Y2UgY3JlYXRpb25SZWZlcmVuY2UgPSAoQ3JlYXRpb25SZWZlcmVuY2UpIGV4cHJlc3Npb247CisJ
CWNoZWNrU291cmNlUmFuZ2UoY3JlYXRpb25SZWZlcmVuY2UsICJATWFya2VyIFc8QE1hcmtlciBJ
bnRlZ2VyPiA6OiA8U3RyaW5nPiBuZXcgIiwgY29udGVudHMpOworCQl0eXBlQmluZGluZyA9IGNy
ZWF0aW9uUmVmZXJlbmNlLnJlc29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKHR5
cGVCaW5kaW5nKTsKKwkJbWV0aG9kQmluZGluZyA9IGNyZWF0aW9uUmVmZXJlbmNlLnJlc29sdmVN
ZXRob2RCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwobWV0aG9kQmluZGluZyk7CisJCUV4cHJl
c3Npb24gbGhzID0gY3JlYXRpb25SZWZlcmVuY2UuZ2V0RXhwcmVzc2lvbigpOworCQljaGVja1Nv
dXJjZVJhbmdlKGxocywgIkBNYXJrZXIgVzxATWFya2VyIEludGVnZXI+ICIsIGNvbnRlbnRzKTsK
KwkJdHlwZUFyZ3VtZW50cyA9IGNyZWF0aW9uUmVmZXJlbmNlLnR5cGVBcmd1bWVudHMoKTsKKwkJ
YXNzZXJ0VHJ1ZSh0eXBlQXJndW1lbnRzLnNpemUoKSA9PSAxKTsKKwkJdHlwZSA9IChUeXBlKSB0
eXBlQXJndW1lbnRzLmdldCgwKTsKKwkJYXNzZXJ0VHJ1ZSh0eXBlLmlzU2ltcGxlVHlwZSgpKTsK
KwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiU3RyaW5nIiwgY29udGVudHMpOworCisJCS8vIGV4
cHJlc3Npb24gbWV0aG9kIHJlZmVyZW5jZQorCQlzdGF0ZW1lbnQgPSAoVmFyaWFibGVEZWNsYXJh
dGlvblN0YXRlbWVudCkgc3RhdGVtZW50cy5nZXQoZkNvdW50KyspOworCQlmcmFnbWVudCA9IChW
YXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIHN0YXRlbWVudC5mcmFnbWVudHMoKS5nZXQoMCk7
CisJCWV4cHJlc3Npb24gPSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlhc3NlcnRUcnVl
KGV4cHJlc3Npb24gaW5zdGFuY2VvZiBFeHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlKTsKKwkJRXhw
cmVzc2lvbk1ldGhvZFJlZmVyZW5jZSBleHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlID0gKEV4cHJl
c3Npb25NZXRob2RSZWZlcmVuY2UpIGV4cHJlc3Npb247CisJCWNoZWNrU291cmNlUmFuZ2UoZXhw
cmVzc2lvbk1ldGhvZFJlZmVyZW5jZSwgInkgOjogZm9vIiwgY29udGVudHMpOworCQl0eXBlQmlu
ZGluZyA9IGV4cHJlc3Npb25NZXRob2RSZWZlcmVuY2UucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJ
CWFzc2VydE5vdE51bGwodHlwZUJpbmRpbmcpOworCQltZXRob2RCaW5kaW5nID0gZXhwcmVzc2lv
bk1ldGhvZFJlZmVyZW5jZS5yZXNvbHZlTWV0aG9kQmluZGluZygpOworCQlhc3NlcnROb3ROdWxs
KG1ldGhvZEJpbmRpbmcpOworCQlsaHMgPSBleHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlLmdldEV4
cHJlc3Npb24oKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShsaHMsICJ5IiwgY29udGVudHMpOworCQl0
eXBlQXJndW1lbnRzID0gZXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZS50eXBlQXJndW1lbnRzKCk7
CisJCWFzc2VydFRydWUodHlwZUFyZ3VtZW50cy5zaXplKCkgPT0gMCk7CisJCW5hbWUgPSBleHBy
ZXNzaW9uTWV0aG9kUmVmZXJlbmNlLmdldE5hbWUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShuYW1l
LCAiZm9vIiwgY29udGVudHMpOworCQl0eXBlQmluZGluZyA9IG5hbWUucmVzb2x2ZVR5cGVCaW5k
aW5nKCk7CisJCWFzc2VydE5vdE51bGwodHlwZUJpbmRpbmcpOworCisJCS8vIHN1cGVyIG1ldGhv
ZCByZWZlcmVuY2Ugd2l0aG91dCBxdWFsaWZpZXIKKwkJc3RhdGVtZW50ID0gKFZhcmlhYmxlRGVj
bGFyYXRpb25TdGF0ZW1lbnQpIHN0YXRlbWVudHMuZ2V0KGZDb3VudCsrKTsKKwkJZnJhZ21lbnQg
PSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBzdGF0ZW1lbnQuZnJhZ21lbnRzKCkuZ2V0
KDApOworCQlleHByZXNzaW9uID0gZnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKKwkJYXNzZXJ0
VHJ1ZShleHByZXNzaW9uIGluc3RhbmNlb2YgU3VwZXJNZXRob2RSZWZlcmVuY2UpOworCQlTdXBl
ck1ldGhvZFJlZmVyZW5jZSBzdXBlck1ldGhvZFJlZmVyZW5jZSA9IChTdXBlck1ldGhvZFJlZmVy
ZW5jZSkgZXhwcmVzc2lvbjsKKwkJY2hlY2tTb3VyY2VSYW5nZShzdXBlck1ldGhvZFJlZmVyZW5j
ZSwgInN1cGVyIDo6ICBmb28iLCBjb250ZW50cyk7CisJCXR5cGVCaW5kaW5nID0gc3VwZXJNZXRo
b2RSZWZlcmVuY2UucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwodHlwZUJp
bmRpbmcpOworCQltZXRob2RCaW5kaW5nID0gc3VwZXJNZXRob2RSZWZlcmVuY2UucmVzb2x2ZU1l
dGhvZEJpbmRpbmcoKTsKKwkJYXNzZXJ0Tm90TnVsbChtZXRob2RCaW5kaW5nKTsKKwkJYXNzZXJ0
TnVsbChzdXBlck1ldGhvZFJlZmVyZW5jZS5nZXRRdWFsaWZpZXIoKSk7CQkKKwkJdHlwZUFyZ3Vt
ZW50cyA9IHN1cGVyTWV0aG9kUmVmZXJlbmNlLnR5cGVBcmd1bWVudHMoKTsKKwkJYXNzZXJ0VHJ1
ZSh0eXBlQXJndW1lbnRzLnNpemUoKSA9PSAwKTsKKwkJbmFtZSA9IHN1cGVyTWV0aG9kUmVmZXJl
bmNlLmdldE5hbWUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShuYW1lLCAiZm9vIiwgY29udGVudHMp
OworCQl0eXBlQmluZGluZyA9IG5hbWUucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5v
dE51bGwodHlwZUJpbmRpbmcpOworCisJCS8vIHN1cGVyIG1ldGhvZCByZWZlcmVuY2Ugd2l0aCBx
dWFsaWZpZXIKKwkJVHlwZURlY2xhcmF0aW9uU3RhdGVtZW50IHR5cGVEZWNsYXJhdGlvblN0YXRl
bWVudCA9IChUeXBlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIHN0YXRlbWVudHMuZ2V0KGZDb3VudCk7
CisJCXR5cGVEZWNsYXJhdGlvbiA9IChUeXBlRGVjbGFyYXRpb24pIHR5cGVEZWNsYXJhdGlvblN0
YXRlbWVudC5nZXREZWNsYXJhdGlvbigpOworCQltZXRob2QgPSB0eXBlRGVjbGFyYXRpb24uZ2V0
TWV0aG9kcygpWzBdOworCQlzdGF0ZW1lbnRzID0gbWV0aG9kLmdldEJvZHkoKS5zdGF0ZW1lbnRz
KCk7CisJCWFzc2VydFRydWUoc3RhdGVtZW50cy5zaXplKCkgPT0gMSk7CisJCXN0YXRlbWVudCA9
IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBzdGF0ZW1lbnRzLmdldCgwKTsKKwkJZnJh
Z21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBzdGF0ZW1lbnQuZnJhZ21lbnRz
KCkuZ2V0KDApOworCQlleHByZXNzaW9uID0gZnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKKwkJ
YXNzZXJ0VHJ1ZShleHByZXNzaW9uIGluc3RhbmNlb2YgU3VwZXJNZXRob2RSZWZlcmVuY2UpOwor
CQlzdXBlck1ldGhvZFJlZmVyZW5jZSA9IChTdXBlck1ldGhvZFJlZmVyZW5jZSkgZXhwcmVzc2lv
bjsKKwkJY2hlY2tTb3VyY2VSYW5nZShzdXBlck1ldGhvZFJlZmVyZW5jZSwgIlguc3VwZXIgOjog
Zm9vIiwgY29udGVudHMpOworCQl0eXBlQmluZGluZyA9IHN1cGVyTWV0aG9kUmVmZXJlbmNlLnJl
c29sdmVUeXBlQmluZGluZygpOworCQlhc3NlcnROb3ROdWxsKHR5cGVCaW5kaW5nKTsKKwkJbWV0
aG9kQmluZGluZyA9IHN1cGVyTWV0aG9kUmVmZXJlbmNlLnJlc29sdmVNZXRob2RCaW5kaW5nKCk7
CisJCWFzc2VydE5vdE51bGwobWV0aG9kQmluZGluZyk7CisJCW5hbWUgPSAoU2ltcGxlTmFtZSkg
c3VwZXJNZXRob2RSZWZlcmVuY2UuZ2V0UXVhbGlmaWVyKCk7CisJCWNoZWNrU291cmNlUmFuZ2Uo
bmFtZSwgIlgiLCBjb250ZW50cyk7CQkKKwkJdHlwZUFyZ3VtZW50cyA9IHN1cGVyTWV0aG9kUmVm
ZXJlbmNlLnR5cGVBcmd1bWVudHMoKTsKKwkJYXNzZXJ0VHJ1ZSh0eXBlQXJndW1lbnRzLnNpemUo
KSA9PSAwKTsKKwkJbmFtZSA9IHN1cGVyTWV0aG9kUmVmZXJlbmNlLmdldE5hbWUoKTsKKwkJY2hl
Y2tTb3VyY2VSYW5nZShuYW1lLCAiZm9vIiwgY29udGVudHMpOworCQl0eXBlQmluZGluZyA9IG5h
bWUucmVzb2x2ZVR5cGVCaW5kaW5nKCk7CisJCWFzc2VydE5vdE51bGwodHlwZUJpbmRpbmcpOwor
CQorCX0KKwkKKwkvKioKIAkgKiBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1
Zy5jZ2k/aWQ9Mzk5NzkzCiAJICogCiAJICogQHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24KZGlm
ZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUTWF0Y2hlclRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNU
TWF0Y2hlclRlc3QuamF2YQppbmRleCA0ZWM3NzU5Li42NWYyZjU0IDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvZG9tL0FTVE1hdGNoZXJUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RNYXRjaGVyVGVz
dC5qYXZhCkBAIC01MDQsNiArNTA0LDkgQEAKIAkJcHVibGljIGJvb2xlYW4gbWF0Y2goU3VwZXJN
ZXRob2RJbnZvY2F0aW9uIG5vZGUsIE9iamVjdCBvdGhlcikgewogCQkJcmV0dXJuIHN0YW5kYXJk
Qm9keShub2RlLCBvdGhlciwgdGhpcy5zdXBlck1hdGNoID8gc3VwZXIubWF0Y2gobm9kZSwgb3Ro
ZXIpIDogZmFsc2UpOwogCQl9CisJCXB1YmxpYyBib29sZWFuIG1hdGNoKFN1cGVyTWV0aG9kUmVm
ZXJlbmNlIG5vZGUsIE9iamVjdCBvdGhlcikgeworCQkJcmV0dXJuIHN0YW5kYXJkQm9keShub2Rl
LCBvdGhlciwgdGhpcy5zdXBlck1hdGNoID8gc3VwZXIubWF0Y2gobm9kZSwgb3RoZXIpIDogZmFs
c2UpOworCQl9CiAJCXB1YmxpYyBib29sZWFuIG1hdGNoKFN3aXRjaENhc2Ugbm9kZSwgT2JqZWN0
IG90aGVyKSB7CiAJCQlyZXR1cm4gc3RhbmRhcmRCb2R5KG5vZGUsIG90aGVyLCB0aGlzLnN1cGVy
TWF0Y2ggPyBzdXBlci5tYXRjaChub2RlLCBvdGhlcikgOiBmYWxzZSk7CiAJCX0KQEAgLTU2Miw2
ICs1NjUsMTUgQEAKIAkJCXJldHVybiBzdGFuZGFyZEJvZHkobm9kZSwgb3RoZXIsIHRoaXMuc3Vw
ZXJNYXRjaCA/IHN1cGVyLm1hdGNoKG5vZGUsIG90aGVyKSA6IGZhbHNlKTsKIAkJfQogCQlwdWJs
aWMgYm9vbGVhbiBtYXRjaChMYW1iZGFFeHByZXNzaW9uIG5vZGUsIE9iamVjdCBvdGhlcikgewor
CQkJcmV0dXJuIHN0YW5kYXJkQm9keShub2RlLCBvdGhlciwgdGhpcy5zdXBlck1hdGNoID8gc3Vw
ZXIubWF0Y2gobm9kZSwgb3RoZXIpIDogZmFsc2UpOworCQl9CisJCXB1YmxpYyBib29sZWFuIG1h
dGNoKENyZWF0aW9uUmVmZXJlbmNlIG5vZGUsIE9iamVjdCBvdGhlcikgeworCQkJcmV0dXJuIHN0
YW5kYXJkQm9keShub2RlLCBvdGhlciwgdGhpcy5zdXBlck1hdGNoID8gc3VwZXIubWF0Y2gobm9k
ZSwgb3RoZXIpIDogZmFsc2UpOworCQl9CisJCXB1YmxpYyBib29sZWFuIG1hdGNoKEV4cHJlc3Np
b25NZXRob2RSZWZlcmVuY2Ugbm9kZSwgT2JqZWN0IG90aGVyKSB7CisJCQlyZXR1cm4gc3RhbmRh
cmRCb2R5KG5vZGUsIG90aGVyLCB0aGlzLnN1cGVyTWF0Y2ggPyBzdXBlci5tYXRjaChub2RlLCBv
dGhlcikgOiBmYWxzZSk7CisJCX0KKwkJcHVibGljIGJvb2xlYW4gbWF0Y2goVHlwZU1ldGhvZFJl
ZmVyZW5jZSBub2RlLCBPYmplY3Qgb3RoZXIpIHsKIAkJCXJldHVybiBzdGFuZGFyZEJvZHkobm9k
ZSwgb3RoZXIsIHRoaXMuc3VwZXJNYXRjaCA/IHN1cGVyLm1hdGNoKG5vZGUsIG90aGVyKSA6IGZh
bHNlKTsKIAkJfQogCQlwdWJsaWMgYm9vbGVhbiBtYXRjaChJbnRlcnNlY3Rpb25UeXBlIG5vZGUs
IE9iamVjdCBvdGhlcikgewpAQCAtODcwLDYgKzg4MiwxNSBAQAogCQl4MS5zZXRMYWJlbCh0aGlz
Lk4xKTsKIAkJYmFzaWNNYXRjaCh4MSk7CiAJfQorCS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zOTk3OTQKKwlwdWJsaWMgdm9pZCB0ZXN0Q3JlYXRpb25S
ZWZlcmVuY2UoKSB7CisJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsKKwkJ
CXJldHVybjsKKwkJfQorCQlDcmVhdGlvblJlZmVyZW5jZSB4MSA9IHRoaXMuYXN0Lm5ld0NyZWF0
aW9uUmVmZXJlbmNlKHRoaXMuRTEpOworCQliYXNpY01hdGNoKHgxKTsKKwl9CisJCiAJcHVibGlj
IHZvaWQgdGVzdERvU3RhdGVtZW50KCkgewogCQlEb1N0YXRlbWVudCB4MSA9IHRoaXMuYXN0Lm5l
d0RvU3RhdGVtZW50KCk7CiAJCXgxLnNldEV4cHJlc3Npb24odGhpcy5FMSk7CkBAIC05MjUsNiAr
OTQ2LDE1IEBACiAJCXgxLmJvZHlEZWNsYXJhdGlvbnMoKS5hZGQodGhpcy5GRDIpOwogCQliYXNp
Y01hdGNoKHgxKTsKIAl9CisJLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTM5OTc5NAorCXB1YmxpYyB2b2lkIHRlc3RFeHByZXNzaW9uTWV0aG9kUmVmZXJl
bmNlKCkgeworCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQlyZXR1
cm47CisJCX0KKwkJRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZSB4MSA9IHRoaXMuYXN0Lm5ld0V4
cHJlc3Npb25NZXRob2RSZWZlcmVuY2UodGhpcy5FMSwgdGhpcy5OMSk7CisJCWJhc2ljTWF0Y2go
eDEpOworCX0KKwkKIAlwdWJsaWMgdm9pZCB0ZXN0RXhwcmVzc2lvblN0YXRlbWVudCgpIHsKIAkJ
RXhwcmVzc2lvblN0YXRlbWVudCB4MSA9IHRoaXMuYXN0Lm5ld0V4cHJlc3Npb25TdGF0ZW1lbnQo
dGhpcy5FMSk7CiAJCWJhc2ljTWF0Y2goeDEpOwpAQCAtMTE1NSw2ICsxMTg1LDE0IEBACiAJCXgx
LnNldE5hbWUodGhpcy5OMik7CiAJCXgxLmFyZ3VtZW50cygpLmFkZCh0aGlzLkUxKTsKIAkJeDEu
YXJndW1lbnRzKCkuYWRkKHRoaXMuRTIpOworCQliYXNpY01hdGNoKHgxKTsKKwl9CisJcHVibGlj
IHZvaWQgdGVzdFN1cGVyTWV0aG9kUmVmZXJlbmNlKCkgeworCQlpZiAodGhpcy5hc3QuYXBpTGV2
ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQlyZXR1cm47CisJCX0KKwkJU3VwZXJNZXRob2RSZWZlcmVu
Y2UgeDEgPSB0aGlzLmFzdC5uZXdTdXBlck1ldGhvZFJlZmVyZW5jZSh0aGlzLk4yKTsKKwkJeDEu
c2V0UXVhbGlmaWVyKHRoaXMuTjEpOwogCQliYXNpY01hdGNoKHgxKTsKIAl9CiAJcHVibGljIHZv
aWQgdGVzdFN3aXRjaENhc2UoKSB7CkBAIC0xNTg5LDYgKzE2MjcsMTUgQEAKIAkJYmFzaWNNYXRj
aCh4MSk7CiAJfQogCisJLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTM5OTc5NAorCXB1YmxpYyB2b2lkIHRlc3RUeXBlTWV0aG9kUmVmZXJlbmNlKCkgewor
CQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQlyZXR1cm47CisJCX0K
KwkJVHlwZU1ldGhvZFJlZmVyZW5jZSB4MSA9IHRoaXMuYXN0Lm5ld1R5cGVNZXRob2RSZWZlcmVu
Y2UodGhpcy5UMSwgdGhpcy5OMSk7CisJCWJhc2ljTWF0Y2goeDEpOworCX0KKwkKIAkvLyBodHRw
czovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9Mzk5NzkzCiAJcHVibGlj
IHZvaWQgdGVzdExhbWJkYUV4cHJlc3Npb25zMSgpIHsKIAkJaWYgKHRoaXMuYXN0LmFwaUxldmVs
KCkgPCBBU1QuSkxTOCkgewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
bW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RTdHJ1Y3R1cmFsUHJv
cGVydHlUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFN0cnVjdHVyYWxQcm9wZXJ0eVRlc3QuamF2
YQppbmRleCBjMjM2YTBiLi4yYmY0Yjg3IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFN0cnVj
dHVyYWxQcm9wZXJ0eVRlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5t
b2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFN0cnVjdHVyYWxQcm9w
ZXJ0eVRlc3QuamF2YQpAQCAtMzI4LDcgKzMyOCw3IEBACiAJCQkJbWF4Tm9kZVR5cGUgPSA4NDsK
IAkJCQlicmVhazsKIAkJCWNhc2UgQVNULkpMUzg6Ci0JCQkJbWF4Tm9kZVR5cGUgPSA4ODsKKwkJ
CQltYXhOb2RlVHlwZSA9IDkyOwogCQkJCWJyZWFrOwogCQkJZGVmYXVsdDoKIAkJCQlmYWlsKCk7
CkBAIC0zNzIsNyArMzcyLDcgQEAKIAkJCQkvLyBvb3BzIC0gZ3Vlc3MgdGhhdCdzIG5vdCB2YWxp
ZAogCQkJfQogCQl9Ci0JCWFzc2VydEVxdWFscygiV3JvbmcgbGFzdCBrbm93biB0eXBlIiwgODgs
IGhpKTsgLy8gbGFzdCBrbm93biBvbmUKKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBsYXN0IGtub3du
IHR5cGUiLCA5MiwgaGkpOyAvLyBsYXN0IGtub3duIG9uZQogCQlhc3NlcnRFcXVhbHMoIldyb25n
IG51bWJlciBvZiBkaXN0aW5jdCB0eXBlcyIsICBoaSwgY2xhc3Nlcy5zaXplKCkpOyAvLyBhbGwg
Y2xhc3NlcyBhcmUgZGlzdGluY3QKIAl9CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFRl
c3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUVGVzdC5qYXZhCmluZGV4IDUyYzhkZDIuLjZlYjMwYTkg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNU
VGVzdC5qYXZhCkBAIC04Nzg1LDYgKzg3ODUsMTAgQEAKIAkJCUFTVE5vZGUuTEFNQkRBX0VYUFJF
U1NJT04sCiAJCQlBU1ROb2RlLklOVEVSU0VDVElPTl9UWVBFLAogCQkJQVNUTm9kZS5QQUNLQUdF
X1FVQUxJRklFRF9UWVBFLAorCQkJQVNUTm9kZS5DUkVBVElPTl9SRUZFUkVOQ0UsCisJCQlBU1RO
b2RlLkVYUFJFU1NJT05fTUVUSE9EX1JFRkVSRU5DRSwKKwkJCUFTVE5vZGUuU1VQRVJfTUVUSE9E
X1JFRkVSRU5DRSwKKwkJCUFTVE5vZGUuVFlQRV9NRVRIT0RfUkVGRVJFTkNFCiAJCX07CiAJCQog
CQkvLyBhc3NlcnQgdGhhdCBub2RlVHlwZSB2YWx1ZXMgYXJlIGNvcnJlY3Q6CmRpZmYgLS1naXQg
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvZG9tL0FTVFZpc2l0b3JUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFZpc2l0b3JU
ZXN0LmphdmEKaW5kZXggZmYwZGIzYS4uNDk2MWMwOSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9B
U1RWaXNpdG9yVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVs
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUVmlzaXRvclRlc3QuamF2YQpA
QCAtNzEyLDYgKzcxMiwyMiBAQAogCQkJQVNUVmlzaXRvclRlc3QudGhpcy5iLmFwcGVuZCgiKi8p
Iik7IC8vJE5PTi1OTFMtMSQKIAkJfQogCisJCXB1YmxpYyBib29sZWFuIHZpc2l0KENyZWF0aW9u
UmVmZXJlbmNlIG5vZGUpIHsKKwkJCUFTVFZpc2l0b3JUZXN0LnRoaXMuYi5hcHBlbmQoIihlQ1Ii
KTsgLy8kTk9OLU5MUy0xJAorCQkJcmV0dXJuIGlzVmlzaXRpbmdDaGlsZHJlbigpOworCQl9CisJ
CXB1YmxpYyB2b2lkIGVuZFZpc2l0KENyZWF0aW9uUmVmZXJlbmNlIG5vZGUpIHsKKwkJCUFTVFZp
c2l0b3JUZXN0LnRoaXMuYi5hcHBlbmQoImVDUikiKTsgLy8kTk9OLU5MUy0xJAorCQl9CisKKwkJ
cHVibGljIGJvb2xlYW4gdmlzaXQoRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZSBub2RlKSB7CisJ
CQlBU1RWaXNpdG9yVGVzdC50aGlzLmIuYXBwZW5kKCIoZUVNUiIpOyAvLyROT04tTkxTLTEkCisJ
CQlyZXR1cm4gaXNWaXNpdGluZ0NoaWxkcmVuKCk7CisJCX0KKwkJcHVibGljIHZvaWQgZW5kVmlz
aXQoRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZSBub2RlKSB7CisJCQlBU1RWaXNpdG9yVGVzdC50
aGlzLmIuYXBwZW5kKCJlRU1SKSIpOyAvLyROT04tTkxTLTEkCisJCX0KKwogCQlwdWJsaWMgYm9v
bGVhbiB2aXNpdChMaW5lQ29tbWVudCBub2RlKSB7CiAJCQlBU1RWaXNpdG9yVGVzdC50aGlzLmIu
YXBwZW5kKCIoLy8iKTsgLy8kTk9OLU5MUy0xJAogCQkJcmV0dXJuIGlzVmlzaXRpbmdDaGlsZHJl
bigpOwpAQCAtODkyLDYgKzkwOCwxNCBAQAogCQkJQVNUVmlzaXRvclRlc3QudGhpcy5iLmFwcGVu
ZCgiZVNNKSIpOyAvLyROT04tTkxTLTEkCiAJCX0KIAorCQlwdWJsaWMgYm9vbGVhbiB2aXNpdChT
dXBlck1ldGhvZFJlZmVyZW5jZSBub2RlKSB7CisJCQlBU1RWaXNpdG9yVGVzdC50aGlzLmIuYXBw
ZW5kKCIoZVNNUiIpOyAvLyROT04tTkxTLTEkCisJCQlyZXR1cm4gaXNWaXNpdGluZ0NoaWxkcmVu
KCk7CisJCX0KKwkJcHVibGljIHZvaWQgZW5kVmlzaXQoU3VwZXJNZXRob2RSZWZlcmVuY2Ugbm9k
ZSkgeworCQkJQVNUVmlzaXRvclRlc3QudGhpcy5iLmFwcGVuZCgiZVNNUikiKTsgLy8kTk9OLU5M
Uy0xJAorCQl9CisKIAkJcHVibGljIGJvb2xlYW4gdmlzaXQoU3dpdGNoQ2FzZSBub2RlKSB7CiAJ
CQlBU1RWaXNpdG9yVGVzdC50aGlzLmIuYXBwZW5kKCIoc1NDIik7IC8vJE5PTi1OTFMtMSQKIAkJ
CXJldHVybiBpc1Zpc2l0aW5nQ2hpbGRyZW4oKTsKQEAgLTk2Miw2ICs5ODYsMTQgQEAKIAkJfQog
CQlwdWJsaWMgdm9pZCBlbmRWaXNpdChUeXBlTGl0ZXJhbCBub2RlKSB7CiAJCQlBU1RWaXNpdG9y
VGVzdC50aGlzLmIuYXBwZW5kKCJlVEwpIik7IC8vJE5PTi1OTFMtMSQKKwkJfQorCisJCXB1Ymxp
YyBib29sZWFuIHZpc2l0KFR5cGVNZXRob2RSZWZlcmVuY2Ugbm9kZSkgeworCQkJQVNUVmlzaXRv
clRlc3QudGhpcy5iLmFwcGVuZCgiKGVUTVIiKTsgLy8kTk9OLU5MUy0xJAorCQkJcmV0dXJuIGlz
VmlzaXRpbmdDaGlsZHJlbigpOworCQl9CisJCXB1YmxpYyB2b2lkIGVuZFZpc2l0KFR5cGVNZXRo
b2RSZWZlcmVuY2Ugbm9kZSkgeworCQkJQVNUVmlzaXRvclRlc3QudGhpcy5iLmFwcGVuZCgiZVRN
UikiKTsgLy8kTk9OLU5MUy0xJAogCQl9CiAKIAkJcHVibGljIGJvb2xlYW4gdmlzaXQoVHlwZVBh
cmFtZXRlciBub2RlKSB7CkBAIC0xNDE2LDYgKzE0NDgsMTggQEAKIAkJU3RyaW5nIHJlc3VsdCA9
IHRoaXMuYi50b1N0cmluZygpOwogCQlhc3NlcnRUcnVlKHJlc3VsdC5lcXVhbHMoIlsoc0NOIit0
aGlzLk4xUysic0NOKV0iKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAogCX0KKworCXB1
YmxpYyB2b2lkIHRlc3RDcmVhdGlvblJlZmVyZW5jZSgpIHsKKwkJaWYgKHRoaXMuYXN0LmFwaUxl
dmVsKCkgPCBBU1QuSkxTOCkKKwkJCXJldHVybjsKKwkJQ3JlYXRpb25SZWZlcmVuY2UgeDEgPSB0
aGlzLmFzdC5uZXdDcmVhdGlvblJlZmVyZW5jZSh0aGlzLkUxKTsKKwkJVGVzdFZpc2l0b3IgdjEg
PSBuZXcgVGVzdFZpc2l0b3IoKTsKKwkJdGhpcy5iLnNldExlbmd0aCgwKTsKKwkJeDEuYWNjZXB0
KHYxKTsKKwkJU3RyaW5nIHJlc3VsdCA9IHRoaXMuYi50b1N0cmluZygpOworCQlhc3NlcnRUcnVl
KHJlc3VsdC5lcXVhbHMoIlsoZUNSIit0aGlzLkUxUysiZUNSKV0iKSk7IC8vJE5PTi1OTFMtMSQg
Ly8kTk9OLU5MUy0yJAorCX0KKwogCXB1YmxpYyB2b2lkIHRlc3REb1N0YXRlbWVudCgpIHsKIAkJ
RG9TdGF0ZW1lbnQgeDEgPSB0aGlzLmFzdC5uZXdEb1N0YXRlbWVudCgpOwogCQl4MS5zZXRFeHBy
ZXNzaW9uKHRoaXMuRTEpOwpAQCAtMTQ3Niw2ICsxNTIwLDE3IEBACiAJCVN0cmluZyByZXN1bHQg
PSB0aGlzLmIudG9TdHJpbmcoKTsKIAkJYXNzZXJ0VHJ1ZShyZXN1bHQuZXF1YWxzKCJbKEVEIit0
aGlzLkpEMVMrdGhpcy5NT0QxUyt0aGlzLk1PRDJTK3RoaXMuTjFTK3RoaXMuVDFTK3RoaXMuVDJT
K3RoaXMuRUMxUyt0aGlzLkVDMlMrdGhpcy5GRDFTK3RoaXMuRkQyUysiRUQpXSIpKTsgLy8kTk9O
LU5MUy0xJCAvLyROT04tTkxTLTIkCiAJfQorCXB1YmxpYyB2b2lkIHRlc3RFeHByZXNzaW9uTWV0
aG9kUmVmZXJlbmNlKCkgeworCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KQor
CQkJcmV0dXJuOworCQlFeHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlIHgxID0gdGhpcy5hc3QubmV3
RXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZSh0aGlzLkUxLCB0aGlzLk4xKTsKKwkJVGVzdFZpc2l0
b3IgdjEgPSBuZXcgVGVzdFZpc2l0b3IoKTsKKwkJdGhpcy5iLnNldExlbmd0aCgwKTsKKwkJeDEu
YWNjZXB0KHYxKTsKKwkJU3RyaW5nIHJlc3VsdCA9IHRoaXMuYi50b1N0cmluZygpOworCQlhc3Nl
cnRUcnVlKHJlc3VsdC5lcXVhbHMoIlsoZUVNUiIrdGhpcy5FMVMrdGhpcy5OMVMrImVFTVIpXSIp
KTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJfQorCiAJcHVibGljIHZvaWQgdGVzdEV4
cHJlc3Npb25TdGF0ZW1lbnQoKSB7CiAJCUV4cHJlc3Npb25TdGF0ZW1lbnQgeDEgPSB0aGlzLmFz
dC5uZXdFeHByZXNzaW9uU3RhdGVtZW50KHRoaXMuRTEpOwogCQlUZXN0VmlzaXRvciB2MSA9IG5l
dyBUZXN0VmlzaXRvcigpOwpAQCAtMjAwOSw2ICsyMDY0LDE4IEBACiAJCQlhc3NlcnRUcnVlKHJl
c3VsdC5lcXVhbHMoIlsoZVNNIit0aGlzLk4xUyt0aGlzLlBUMVMrdGhpcy5OMlMrdGhpcy5FMVMr
dGhpcy5FMlMrImVTTSldIikpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKIAkJfQogCX0K
KwlwdWJsaWMgdm9pZCB0ZXN0U3VwZXJNZXRob2RSZWZlcmVuY2UoKSB7CisJCWlmICh0aGlzLmFz
dC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsKKwkJCXJldHVybjsKKwkJfQorCQlTdXBlck1ldGhv
ZFJlZmVyZW5jZSB4MSA9IHRoaXMuYXN0Lm5ld1N1cGVyTWV0aG9kUmVmZXJlbmNlKHRoaXMuTjIp
OworCQl4MS5zZXRRdWFsaWZpZXIodGhpcy5OMSk7CisJCVRlc3RWaXNpdG9yIHYxID0gbmV3IFRl
c3RWaXNpdG9yKCk7CisJCXRoaXMuYi5zZXRMZW5ndGgoMCk7CisJCXgxLmFjY2VwdCh2MSk7CisJ
CVN0cmluZyByZXN1bHQgPSB0aGlzLmIudG9TdHJpbmcoKTsKKwkJYXNzZXJ0VHJ1ZShyZXN1bHQu
ZXF1YWxzKCJbKGVTTVIiK3RoaXMuTjFTK3RoaXMuTjJTKyJlU01SKV0iKSk7IC8vJE5PTi1OTFMt
MSQgLy8kTk9OLU5MUy0yJAorCX0KIAlwdWJsaWMgdm9pZCB0ZXN0U3dpdGNoQ2FzZSgpIHsKIAkJ
U3dpdGNoQ2FzZSB4MSA9IHRoaXMuYXN0Lm5ld1N3aXRjaENhc2UoKTsKIAkJeDEuc2V0RXhwcmVz
c2lvbih0aGlzLkUxKTsKQEAgLTIxNTUsNiArMjIyMiwxNyBAQAogCQlTdHJpbmcgcmVzdWx0ID0g
dGhpcy5iLnRvU3RyaW5nKCk7CiAJCWFzc2VydFRydWUocmVzdWx0LmVxdWFscygiWyhlVEwiK3Ro
aXMuVDFTKyJlVEwpXSIpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCiAJfQorCXB1Ymxp
YyB2b2lkIHRlc3RUeXBlTWV0aG9kUmVmZXJlbmNlKCkgeworCQlpZiAodGhpcy5hc3QuYXBpTGV2
ZWwoKSA8IEFTVC5KTFM4KQorCQkJcmV0dXJuOworCQlUeXBlTWV0aG9kUmVmZXJlbmNlIHgxID0g
dGhpcy5hc3QubmV3VHlwZU1ldGhvZFJlZmVyZW5jZSh0aGlzLlQxLCB0aGlzLk4xKTsKKwkJVGVz
dFZpc2l0b3IgdjEgPSBuZXcgVGVzdFZpc2l0b3IoKTsKKwkJdGhpcy5iLnNldExlbmd0aCgwKTsK
KwkJeDEuYWNjZXB0KHYxKTsKKwkJU3RyaW5nIHJlc3VsdCA9IHRoaXMuYi50b1N0cmluZygpOwor
CQlhc3NlcnRUcnVlKHJlc3VsdC5lcXVhbHMoIlsoZVRNUiIrdGhpcy5UMVMrdGhpcy5OMVMrImVU
TVIpXSIpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJfQorCiAJLyoqIEBkZXByZWNh
dGVkIHVzaW5nIGRlcHJlY2F0ZWQgY29kZSAqLwogCXB1YmxpYyB2b2lkIHRlc3RTaW5nbGVWYXJp
YWJsZURlY2xhcmF0aW9uKCkgewogCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIHgxID0gdGhp
cy5hc3QubmV3U2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbigpOwpkaWZmIC0tZ2l0IGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1QuamF2YSBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNULmphdmEK
aW5kZXggNjYwMjAxZS4uODZhZTc5MSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
ZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVC5qYXZhCkBAIC0xMzQ2LDYg
KzEzNDYsMjAgQEAKIAl9CiAKIAkvKioKKwkgKiBDcmVhdGVzIGFuIHVucGFyZW50ZWQgY3JlYXRp
b24gcmVmZXJlbmNlIG5vZGUgb3duZWQgYnkgdGhpcyBBU1QuCisJICogCisJICogQHBhcmFtIGV4
cHJlc3Npb24gZXhwcmVzc2lvbiBmb3IgdGhlIGxlZnQgaGFuZCBzaWRlIG9mIENyZWF0aW9uUmVm
ZXJlbmNlCisJICogQHJldHVybiBhIG5ldyB1bnBhcmVudGVkIHJlZmVyZW5jZSBleHByZXNzaW9u
IG5vZGUKKwkgKiBAZXhjZXB0aW9uIFVuc3VwcG9ydGVkT3BlcmF0aW9uRXhjZXB0aW9uIGlmIHRo
aXMgb3BlcmF0aW9uIGlzIHVzZWQgaW4gYSBKTFMyLCBKTFMzIG9yIEpMUzQgQVNUCisJICogQHNp
bmNlIDMuOSBCRVRBX0pBVkE4CisJICovCisJcHVibGljIENyZWF0aW9uUmVmZXJlbmNlIG5ld0Ny
ZWF0aW9uUmVmZXJlbmNlKEV4cHJlc3Npb24gZXhwcmVzc2lvbikgeworCQlDcmVhdGlvblJlZmVy
ZW5jZSByZXN1bHQgPSBuZXcgQ3JlYXRpb25SZWZlcmVuY2UodGhpcyk7CisJCXJlc3VsdC5zZXRF
eHByZXNzaW9uKGV4cHJlc3Npb24pOworCQlyZXR1cm4gcmVzdWx0OworCX0KKworCS8qKgogCSAq
IENyZWF0ZXMgYSBuZXcgdW5wYXJlbnRlZCBkbyBzdGF0ZW1lbnQgbm9kZSBvd25lZCBieSB0aGlz
IEFTVC4KIAkgKiBCeSBkZWZhdWx0LCB0aGUgZXhwcmVzc2lvbiBpcyB1bnNwZWNpZmllZCAoYnV0
IGxlZ2FsKSwgYW5kCiAJICogdGhlIGJvZHkgc3RhdGVtZW50IGlzIGFuIGVtcHR5IGJsb2NrLgpA
QCAtMTQwOSw2ICsxNDIzLDIyIEBACiAJICovCiAJcHVibGljIEVudW1EZWNsYXJhdGlvbiBuZXdF
bnVtRGVjbGFyYXRpb24oKSB7CiAJCUVudW1EZWNsYXJhdGlvbiByZXN1bHQgPSBuZXcgRW51bURl
Y2xhcmF0aW9uKHRoaXMpOworCQlyZXR1cm4gcmVzdWx0OworCX0KKworCS8qKgorCSAqIENyZWF0
ZXMgYW4gdW5wYXJlbnRlZCBleHByZXNzaW9uIG1ldGhvZCByZWZlcmVuY2Ugbm9kZSBvd25lZCBi
eSB0aGlzIEFTVC4KKwkgKiAKKwkgKiBAcGFyYW0gZXhwcmVzc2lvbiBleHByZXNzaW9uIGZvciB0
aGUgbGVmdCBoYW5kIHNpZGUgb2YgRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZQorCSAqIEBwYXJh
bSBuYW1lIG5hbWUgb2YgdGhlIG1ldGhvZCBpbiB0aGUgRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5j
ZQorCSAqIEByZXR1cm4gYSBuZXcgdW5wYXJlbnRlZCByZWZlcmVuY2UgZXhwcmVzc2lvbiBub2Rl
CisJICogQGV4Y2VwdGlvbiBVbnN1cHBvcnRlZE9wZXJhdGlvbkV4Y2VwdGlvbiBpZiB0aGlzIG9w
ZXJhdGlvbiBpcyB1c2VkIGluIGEgSkxTMiwgSkxTMyBvciBKTFM0IEFTVAorCSAqIEBzaW5jZSAz
LjkgQkVUQV9KQVZBOAorCSAqLworCXB1YmxpYyBFeHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlIG5l
d0V4cHJlc3Npb25NZXRob2RSZWZlcmVuY2UoRXhwcmVzc2lvbiBleHByZXNzaW9uLCBTaW1wbGVO
YW1lIG5hbWUpIHsKKwkJRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZSByZXN1bHQgPSBuZXcgRXhw
cmVzc2lvbk1ldGhvZFJlZmVyZW5jZSh0aGlzKTsKKwkJcmVzdWx0LnNldEV4cHJlc3Npb24oZXhw
cmVzc2lvbik7CisJCXJlc3VsdC5zZXROYW1lKG5hbWUpOwogCQlyZXR1cm4gcmVzdWx0OwogCX0K
IApAQCAtMjI0NCw2ICsyMjc0LDIxIEBACiAJfQogCiAJLyoqCisJICogQ3JlYXRlcyBhbmQgcmV0
dXJucyBhIG5ldyB1bnBhcmVudGVkIHN1cGVyIG1ldGhvZCByZWZlcmVuY2Ugbm9kZQorCSAqIG93
bmVkIGJ5IHRoaXMgQVNULiBCeSBkZWZhdWx0LCB0aGUgZXhwcmVzc2lvbiBhbmQgZmllbGQgYXJl
IGJvdGgKKwkgKiB1bnNwZWNpZmllZCwgYnV0IGxlZ2FsLCBuYW1lcy4KKwkgKgorCSAqIEBwYXJh
bSBuYW1lIG5hbWUgb2YgdGhlIG1ldGhvZCByZWZlcmVuY2VkCisJICogQHJldHVybiBhIG5ldyB1
bnBhcmVudGVkIHN1cGVyIG1ldGhvZCByZWZlcmVuY2Ugbm9kZQorCSAqIEBzaW5jZSAzLjkgQkVU
QV9KQVZBOAorCSAqLworCXB1YmxpYyBTdXBlck1ldGhvZFJlZmVyZW5jZSBuZXdTdXBlck1ldGhv
ZFJlZmVyZW5jZShTaW1wbGVOYW1lIG5hbWUpIHsKKwkJU3VwZXJNZXRob2RSZWZlcmVuY2UgcmVz
dWx0ID0gbmV3IFN1cGVyTWV0aG9kUmVmZXJlbmNlKHRoaXMpOworCQlyZXN1bHQuc2V0TmFtZShu
YW1lKTsKKwkJcmV0dXJuIHJlc3VsdDsKKwl9CisKKwkvKioKIAkgKiBDcmVhdGVzIGEgbmV3IHVu
cGFyZW50ZWQgc3dpdGNoIGNhc2Ugc3RhdGVtZW50IG5vZGUgb3duZWQgYnkKIAkgKiB0aGlzIEFT
VC4gQnkgZGVmYXVsdCwgdGhlIGV4cHJlc3Npb24gaXMgdW5zcGVjaWZpZWQsIGJ1dCBsZWdhbC4K
IAkgKgpAQCAtMjQyNCw2ICsyNDY5LDIyIEBACiAJfQogCiAJLyoqCisJICogQ3JlYXRlcyBhbiB1
bnBhcmVudGVkIFR5cGUgbWV0aG9kIHJlZmVyZW5jZSBub2RlIG93bmVkIGJ5IHRoaXMgQVNULgor
CSAqIAorCSAqIEBwYXJhbSB0eXBlIHR5cGUgZm9yIHRoZSBsZWZ0IGhhbmQgc2lkZSBvZiBUeXBl
TWV0aG9kUmVmZXJlbmNlCisJICogQHBhcmFtIG5hbWUgbmFtZSBvZiB0aGUgbWV0aG9kIGluIHRo
ZSBUeXBlTWV0aG9kUmVmZXJlbmNlCisJICogQHJldHVybiBhIG5ldyB1bnBhcmVudGVkIHR5cGUg
bWV0aG9kIHJlZmVyZW5jZSBub2RlCisJICogQGV4Y2VwdGlvbiBVbnN1cHBvcnRlZE9wZXJhdGlv
bkV4Y2VwdGlvbiBpZiB0aGlzIG9wZXJhdGlvbiBpcyB1c2VkIGluIGEgSkxTMiwgSkxTMyBvciBK
TFM0IEFTVAorCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAorCSAqLworCXB1YmxpYyBUeXBlTWV0
aG9kUmVmZXJlbmNlIG5ld1R5cGVNZXRob2RSZWZlcmVuY2UoVHlwZSB0eXBlLCBTaW1wbGVOYW1l
IG5hbWUpIHsKKwkJVHlwZU1ldGhvZFJlZmVyZW5jZSByZXN1bHQgPSBuZXcgVHlwZU1ldGhvZFJl
ZmVyZW5jZSh0aGlzKTsKKwkJcmVzdWx0LnNldFR5cGUodHlwZSk7CisJCXJlc3VsdC5zZXROYW1l
KG5hbWUpOworCQlyZXR1cm4gcmVzdWx0OworCX0KKworCS8qKgogCSAqIENyZWF0ZXMgYW5kIHJl
dHVybnMgYSBuZXcgdW5wYXJlbnRlZCB0eXBlIHBhcmFtZXRlciB0eXBlIG5vZGUgd2l0aCBhbgog
CSAqIHVuc3BlY2lmaWVkIHR5cGUgdmFyaWFibGUgbmFtZSBhbmQgYW4gZW1wdHkgbGlzdCBvZiB0
eXBlIGJvdW5kcy4KIAkgKgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIuamF2YSBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUQ29udmVydGVyLmphdmEKaW5k
ZXggMmU0ODIyMS4uN2I0ZDMzMSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9t
L29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIuamF2YQorKysgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVENvbnZlcnRlci5q
YXZhCkBAIC00NiwxMSArNDYsMTMgQEAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuYXN0LlBhcmFtZXRlcml6ZWRRdWFsaWZpZWRUeXBlUmVmZXJlbmNlOwogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuUGFyYW1ldGVyaXplZFNpbmds
ZVR5cGVSZWZlcmVuY2U7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LmFzdC5RdWFsaWZpZWRBbGxvY2F0aW9uRXhwcmVzc2lvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlF1YWxpZmllZFN1cGVyUmVmZXJlbmNlOwogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuUXVhbGlmaWVkVHlwZVJlZmVy
ZW5jZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlJlY2Vp
dmVyOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuU2luZ2xl
TmFtZVJlZmVyZW5jZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
YXN0LlNpbmdsZVR5cGVSZWZlcmVuY2U7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmFzdC5TdHJpbmdMaXRlcmFsQ29uY2F0ZW5hdGlvbjsKK2ltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlN1cGVyUmVmZXJlbmNlOwogaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuVHlwZVJlZmVyZW5jZTsKIGltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlVuaW9uVHlwZVJlZmVyZW5j
ZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LldpbGRjYXJk
OwpAQCAtMTc2MSw2ICsxNzYzLDkgQEAKIAkJaWYgKGV4cHJlc3Npb24gaW5zdGFuY2VvZiBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkxhbWJkYUV4cHJlc3Npb24pIHsKIAkJ
CXJldHVybiBjb252ZXJ0KChvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0Lkxh
bWJkYUV4cHJlc3Npb24pIGV4cHJlc3Npb24pOwogCQl9CisJCWlmIChleHByZXNzaW9uIGluc3Rh
bmNlb2Ygb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5SZWZlcmVuY2VFeHBy
ZXNzaW9uKSB7CisJCQlyZXR1cm4gY29udmVydCgob3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmFzdC5SZWZlcmVuY2VFeHByZXNzaW9uKSBleHByZXNzaW9uKTsKKwkJfQogCQlyZXR1
cm4gbnVsbDsKIAl9CiAKQEAgLTI1MzIsNiArMjUzNyw3OCBAQAogCQkJcmV0dXJuIGNvbnZlcnQo
KG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuRmllbGRSZWZlcmVuY2UpIHJl
ZmVyZW5jZSk7CiAJCX0KIAkJcmV0dXJuIG51bGw7IC8vIGNhbm5vdCBiZSByZWFjaGVkCisJfQor
CisJcHVibGljIEV4cHJlc3Npb24gY29udmVydChvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIuYXN0LlJlZmVyZW5jZUV4cHJlc3Npb24gcmVmZXJlbmNlKSB7CisJCWlmICh0aGlzLmFz
dC5hcGlMZXZlbCA8IEFTVC5KTFM4KSB7CisJCQlpZiAodGhpcy5yZWZlcmVuY2VDb250ZXh0ICE9
IG51bGwpIHsKKwkJCQl0aGlzLnJlZmVyZW5jZUNvbnRleHQuc2V0RmxhZ3ModGhpcy5yZWZlcmVu
Y2VDb250ZXh0LmdldEZsYWdzKCkgfCBBU1ROb2RlLk1BTEZPUk1FRCk7CisJCQl9CisJCQlOdWxs
TGl0ZXJhbCBudWxsTGl0ZXJhbCA9IG5ldyBOdWxsTGl0ZXJhbCh0aGlzLmFzdCk7CisJCQludWxs
TGl0ZXJhbC5zZXRGbGFncyhudWxsTGl0ZXJhbC5nZXRGbGFncygpIHwgQVNUTm9kZS5NQUxGT1JN
RUQpOworCQkJbnVsbExpdGVyYWwuc2V0U291cmNlUmFuZ2UocmVmZXJlbmNlLnNvdXJjZVN0YXJ0
LCByZWZlcmVuY2Uuc291cmNlRW5kIC0gcmVmZXJlbmNlLnNvdXJjZVN0YXJ0ICsgMSk7CisJCQly
ZXR1cm4gbnVsbExpdGVyYWw7CQkKKwkJfQorCQlFeHByZXNzaW9uIHJlc3VsdCA9IG51bGw7CisJ
CW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuRXhwcmVzc2lvbiBsaHMgPSBy
ZWZlcmVuY2UubGhzOworCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlR5
cGVSZWZlcmVuY2VbXSBhcmd1bWVudHMgPSByZWZlcmVuY2UudHlwZUFyZ3VtZW50czsKKwkJaW50
IHN0YXJ0ID0gYXJndW1lbnRzICE9IG51bGwgJiYgYXJndW1lbnRzLmxlbmd0aCA+IDAgPyBhcmd1
bWVudHNbYXJndW1lbnRzLmxlbmd0aCAtIDFdLnNvdXJjZUVuZCArIDEgOiByZWZlcmVuY2UubGhz
LnNvdXJjZUVuZCArIDE7CisJCWZpbmFsIFNpbXBsZU5hbWUgbmFtZSA9IG5ldyBTaW1wbGVOYW1l
KHRoaXMuYXN0KTsKKwkJcmV0cmlldmVJZGVudGlmaWVyQW5kU2V0UG9zaXRpb25zKHN0YXJ0LCBy
ZWZlcmVuY2Uuc291cmNlRW5kLCBuYW1lKTsKKwkJbmFtZS5pbnRlcm5hbFNldElkZW50aWZpZXIo
bmV3IFN0cmluZyhyZWZlcmVuY2Uuc2VsZWN0b3IpKTsKKwkJaWYgKHRoaXMucmVzb2x2ZUJpbmRp
bmdzKSB7CisJCQlyZWNvcmROb2RlcyhuYW1lLCByZWZlcmVuY2UpOworCQl9CisJCUxpc3QgdHlw
ZUFyZ3VtZW50cyA9IG51bGw7CisJCWlmIChuYW1lLmdldFN0YXJ0UG9zaXRpb24oKSA8IHN0YXJ0
KSB7Ly8gY2hlY2sgZm9yIG5ldyAKKwkJCXJldHJpZXZlSW5pdEFuZFNldFBvc2l0aW9ucyhzdGFy
dCwgcmVmZXJlbmNlLnNvdXJjZUVuZCwgbmFtZSk7CisJCQlpZiAoIW5hbWUuZ2V0SWRlbnRpZmll
cigpLmVxdWFscygiPGluaXQ+IikpIHsgLy8kTk9OLU5MUy0xJAorCQkJCU51bGxMaXRlcmFsIG51
bGxMaXRlcmFsID0gbmV3IE51bGxMaXRlcmFsKHRoaXMuYXN0KTsKKwkJCQludWxsTGl0ZXJhbC5z
ZXRGbGFncyhudWxsTGl0ZXJhbC5nZXRGbGFncygpIHwgQVNUTm9kZS5NQUxGT1JNRUQpOworCQkJ
CXJlc3VsdCA9IG51bGxMaXRlcmFsOworCQkJfSBlbHNlIHsKKwkJCQlDcmVhdGlvblJlZmVyZW5j
ZSBjcmVhdGlvblJlZmVyZW5jZSA9IG5ldyBDcmVhdGlvblJlZmVyZW5jZSh0aGlzLmFzdCk7CisJ
CQkJY3JlYXRpb25SZWZlcmVuY2Uuc2V0RXhwcmVzc2lvbihjb252ZXJ0KGxocykpOworCQkJCXR5
cGVBcmd1bWVudHMgPSBjcmVhdGlvblJlZmVyZW5jZS50eXBlQXJndW1lbnRzKCk7CisJCQkJcmVz
dWx0ID0gY3JlYXRpb25SZWZlcmVuY2U7CisJCQl9CisJCX0gZWxzZSBpZiAobGhzIGluc3RhbmNl
b2YgVHlwZVJlZmVyZW5jZSkgeworCQkJVHlwZU1ldGhvZFJlZmVyZW5jZSB0eXBlTWV0aG9kUmVm
ZXJlbmNlID0gbmV3IFR5cGVNZXRob2RSZWZlcmVuY2UodGhpcy5hc3QpOworCQkJdHlwZU1ldGhv
ZFJlZmVyZW5jZS5zZXRUeXBlKGNvbnZlcnRUeXBlKChUeXBlUmVmZXJlbmNlKSBsaHMpKTsKKwkJ
CXR5cGVNZXRob2RSZWZlcmVuY2Uuc2V0TmFtZShuYW1lKTsKKwkJCXR5cGVBcmd1bWVudHMgPSB0
eXBlTWV0aG9kUmVmZXJlbmNlLnR5cGVBcmd1bWVudHMoKTsKKwkJCXJlc3VsdCA9IHR5cGVNZXRo
b2RSZWZlcmVuY2U7CisJCX0gZWxzZSBpZiAobGhzIGluc3RhbmNlb2YgU3VwZXJSZWZlcmVuY2Up
IHsKKwkJCVN1cGVyTWV0aG9kUmVmZXJlbmNlIHN1cGVyTWV0aG9kUmVmZXJlbmNlID0gbmV3IFN1
cGVyTWV0aG9kUmVmZXJlbmNlKHRoaXMuYXN0KTsKKwkJCXN1cGVyTWV0aG9kUmVmZXJlbmNlLnNl
dE5hbWUobmFtZSk7CisJCQl0eXBlQXJndW1lbnRzID0gc3VwZXJNZXRob2RSZWZlcmVuY2UudHlw
ZUFyZ3VtZW50cygpOworCQkJcmVzdWx0ID0gc3VwZXJNZXRob2RSZWZlcmVuY2U7CisJCX0gZWxz
ZSBpZiAobGhzIGluc3RhbmNlb2YgUXVhbGlmaWVkU3VwZXJSZWZlcmVuY2UpIHsKKwkJCVN1cGVy
TWV0aG9kUmVmZXJlbmNlIHN1cGVyTWV0aG9kUmVmZXJlbmNlID0gbmV3IFN1cGVyTWV0aG9kUmVm
ZXJlbmNlKHRoaXMuYXN0KTsKKwkJCXN1cGVyTWV0aG9kUmVmZXJlbmNlLnNldFF1YWxpZmllcihj
b252ZXJ0KChRdWFsaWZpZWRTdXBlclJlZmVyZW5jZSlsaHMpKTsKKwkJCXN1cGVyTWV0aG9kUmVm
ZXJlbmNlLnNldE5hbWUobmFtZSk7CisJCQl0eXBlQXJndW1lbnRzID0gc3VwZXJNZXRob2RSZWZl
cmVuY2UudHlwZUFyZ3VtZW50cygpOworCQkJcmVzdWx0ID0gc3VwZXJNZXRob2RSZWZlcmVuY2U7
CisJCX0gZWxzZSB7CisJCQlFeHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlIGV4cHJlc3Npb25NZXRo
b2RSZWZlcmVuY2UgPSBuZXcgRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZSh0aGlzLmFzdCk7CisJ
CQlleHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlLnNldEV4cHJlc3Npb24oY29udmVydChsaHMpKTsK
KwkJCXR5cGVBcmd1bWVudHMgPSBleHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlLnR5cGVBcmd1bWVu
dHMoKTsKKwkJCWV4cHJlc3Npb25NZXRob2RSZWZlcmVuY2Uuc2V0TmFtZShuYW1lKTsKKwkJCXJl
c3VsdCA9IGV4cHJlc3Npb25NZXRob2RSZWZlcmVuY2U7CisJCX0KKwkJaWYgKHR5cGVBcmd1bWVu
dHMgIT0gbnVsbCAmJiBhcmd1bWVudHMgIT0gbnVsbCkgeworCQkJaW50IGFyZ3VtZW50c0xlbmd0
aCA9IGFyZ3VtZW50cy5sZW5ndGg7CisJCQlmb3IgKGludCBpID0gMDsgaSA8IGFyZ3VtZW50c0xl
bmd0aDsgaSsrKSB7CisJCQkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5U
eXBlUmVmZXJlbmNlIGFyZ3VtZW50ID0gYXJndW1lbnRzW2ldOworCQkJCXR5cGVBcmd1bWVudHMu
YWRkKGNvbnZlcnRUeXBlKGFyZ3VtZW50KSk7CisJCQl9CisJCX0KKwkJaWYgKHRoaXMucmVzb2x2
ZUJpbmRpbmdzKSB7CisJCQlyZWNvcmROb2RlcyhyZXN1bHQsIHJlZmVyZW5jZSk7CisJCX0KKwkJ
aW50IHNvdXJjZVN0YXJ0ID0gcmVmZXJlbmNlLnNvdXJjZVN0YXJ0OyAKKwkJcmVzdWx0LnNldFNv
dXJjZVJhbmdlKHNvdXJjZVN0YXJ0LCByZWZlcmVuY2Uuc291cmNlRW5kIC0gc291cmNlU3RhcnQg
KyAxKTsKKwkJcmV0dXJuIHJlc3VsdDsKIAl9CiAKIAlwdWJsaWMgUmV0dXJuU3RhdGVtZW50IGNv
bnZlcnQob3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5SZXR1cm5TdGF0ZW1l
bnQgc3RhdGVtZW50KSB7CkBAIC00NzE2LDYgKzQ3OTMsMjkgQEAKIAl9CiAKIAkvKioKKwkgKiBy
ZXRyaWV2ZXMgdGhlIHN0YXJ0IGFuZCBhbmQgb2YgbmV3IGFuZCBzZXQgdGhlIHBvc2l0aW9ucyBv
ZiB0aGUgbmFtZQorCSAqIEBwYXJhbSBzdGFydCBwb3NpdGlvbiB0byBzdGFydCBzZWFyY2gKKwkg
KiBAcGFyYW0gZW5kIHBvc2l0aW9uIHRvIGVuZCBzZWFyY2gKKwkgKiBAcGFyYW0gbmFtZSBvYmpl
Y3Qgd2hlcmUgdGhlc2UgcG9zaXRpb25zIHdpbGwgYmUgdXBkYXRlZC4KKwkgKi8KKwlwcm90ZWN0
ZWQgdm9pZCByZXRyaWV2ZUluaXRBbmRTZXRQb3NpdGlvbnMoaW50IHN0YXJ0LCBpbnQgZW5kLCBO
YW1lIG5hbWUpIHsKKwkJdGhpcy5zY2FubmVyLnJlc2V0VG8oc3RhcnQsIGVuZCk7CisJCWludCB0
b2tlbjsKKwkJdHJ5IHsKKwkJCXdoaWxlKCh0b2tlbiA9IHRoaXMuc2Nhbm5lci5nZXROZXh0VG9r
ZW4oKSkgIT0gVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lRU9GKSAgeworCQkJCWlmICh0b2tlbiA9
PSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVuZXcpIHsKKwkJCQkJaW50IHN0YXJ0TmFtZSA9IHRo
aXMuc2Nhbm5lci5zdGFydFBvc2l0aW9uOworCQkJCQlpbnQgZW5kTmFtZSA9IHRoaXMuc2Nhbm5l
ci5jdXJyZW50UG9zaXRpb247CisJCQkJCW5hbWUuc2V0U291cmNlUmFuZ2Uoc3RhcnROYW1lLCBl
bmROYW1lIC0gc3RhcnROYW1lKTsKKwkJCQkJcmV0dXJuOworCQkJCX0KKwkJCX0KKwkJfSBjYXRj
aChJbnZhbGlkSW5wdXRFeGNlcHRpb24gZSkgeworCQkJLy8gaWdub3JlCisJCX0KKwl9CisKKwkv
KioKIAkgKiBUaGlzIG1ldGhvZCBpcyB1c2VkIHRvIHJldHJpZXZlIHBvc2l0aW9uIGJlZm9yZSB0
aGUgbmV4dCBjb21tYSBvciBzZW1pLWNvbG9uLgogCSAqIEBwYXJhbSBpbml0aWFsaXplckVuZCB0
aGUgZ2l2ZW4gaW5pdGlhbGl6ZXIgZW5kIGV4Y2x1c2l2ZQogCSAqIEByZXR1cm4gaW50IHRoZSBw
b3NpdGlvbiBmb3VuZC4KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcv
ZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUTWF0Y2hlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RNYXRjaGVyLmphdmEKaW5kZXggNzZh
ZDg3Yi4uMzljNjAxZSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RNYXRjaGVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RNYXRjaGVyLmphdmEKQEAgLTcw
MCw2ICs3MDAsMzEgQEAKIAkgKiBAcmV0dXJuIDxjb2RlPnRydWU8L2NvZGU+IGlmIHRoZSBzdWJ0
cmVlIG1hdGNoZXMsIG9yCiAJICogICA8Y29kZT5mYWxzZTwvY29kZT4gaWYgdGhleSBkbyBub3Qg
bWF0Y2ggb3IgdGhlIG90aGVyIG9iamVjdCBoYXMgYQogCSAqICAgZGlmZmVyZW50IG5vZGUgdHlw
ZSBvciBpcyA8Y29kZT5udWxsPC9jb2RlPgorCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAorCSAq
LworCXB1YmxpYyBib29sZWFuIG1hdGNoKENyZWF0aW9uUmVmZXJlbmNlIG5vZGUsIE9iamVjdCBv
dGhlcikgeworCQlpZiAoIShvdGhlciBpbnN0YW5jZW9mIENyZWF0aW9uUmVmZXJlbmNlKSkgewor
CQkJcmV0dXJuIGZhbHNlOworCQl9CisJCUNyZWF0aW9uUmVmZXJlbmNlIG8gPSAoQ3JlYXRpb25S
ZWZlcmVuY2UpIG90aGVyOworCQlyZXR1cm4gKAorCQkJc2FmZVN1YnRyZWVNYXRjaChub2RlLmdl
dEV4cHJlc3Npb24oKSwgby5nZXRFeHByZXNzaW9uKCkpCisJCQkJJiYgc2FmZVN1YnRyZWVMaXN0
TWF0Y2gobm9kZS50eXBlQXJndW1lbnRzKCksIG8udHlwZUFyZ3VtZW50cygpKSk7CisJfQorCisJ
LyoqCisJICogUmV0dXJucyB3aGV0aGVyIHRoZSBnaXZlbiBub2RlIGFuZCB0aGUgb3RoZXIgb2Jq
ZWN0IG1hdGNoLgorCSAqIDxwPgorCSAqIFRoZSBkZWZhdWx0IGltcGxlbWVudGF0aW9uIHByb3Zp
ZGVkIGJ5IHRoaXMgY2xhc3MgdGVzdHMgd2hldGhlciB0aGUKKwkgKiBvdGhlciBvYmplY3QgaXMg
YSBub2RlIG9mIHRoZSBzYW1lIHR5cGUgd2l0aCBzdHJ1Y3R1cmFsbHkgaXNvbW9ycGhpYworCSAq
IGNoaWxkIHN1YnRyZWVzLiBTdWJjbGFzc2VzIG1heSBvdmVycmlkZSB0aGlzIG1ldGhvZCBhcyBu
ZWVkZWQuCisJICogPC9wPgorCSAqCisJICogQHBhcmFtIG5vZGUgdGhlIG5vZGUKKwkgKiBAcGFy
YW0gb3RoZXIgdGhlIG90aGVyIG9iamVjdCwgb3IgPGNvZGU+bnVsbDwvY29kZT4KKwkgKiBAcmV0
dXJuIDxjb2RlPnRydWU8L2NvZGU+IGlmIHRoZSBzdWJ0cmVlIG1hdGNoZXMsIG9yCisJICogICA8
Y29kZT5mYWxzZTwvY29kZT4gaWYgdGhleSBkbyBub3QgbWF0Y2ggb3IgdGhlIG90aGVyIG9iamVj
dCBoYXMgYQorCSAqICAgZGlmZmVyZW50IG5vZGUgdHlwZSBvciBpcyA8Y29kZT5udWxsPC9jb2Rl
PgogCSAqLwogCXB1YmxpYyBib29sZWFuIG1hdGNoKERvU3RhdGVtZW50IG5vZGUsIE9iamVjdCBv
dGhlcikgewogCQlpZiAoIShvdGhlciBpbnN0YW5jZW9mIERvU3RhdGVtZW50KSkgewpAQCAtODE3
LDYgKzg0MiwzMiBAQAogCQkJCSYmIHNhZmVTdWJ0cmVlTGlzdE1hdGNoKAogCQkJCQlub2RlLmJv
ZHlEZWNsYXJhdGlvbnMoKSwKIAkJCQkJby5ib2R5RGVjbGFyYXRpb25zKCkpKTsKKwl9CisKKwkv
KioKKwkgKiBSZXR1cm5zIHdoZXRoZXIgdGhlIGdpdmVuIG5vZGUgYW5kIHRoZSBvdGhlciBvYmpl
Y3QgbWF0Y2guCisJICogPHA+CisJICogVGhlIGRlZmF1bHQgaW1wbGVtZW50YXRpb24gcHJvdmlk
ZWQgYnkgdGhpcyBjbGFzcyB0ZXN0cyB3aGV0aGVyIHRoZQorCSAqIG90aGVyIG9iamVjdCBpcyBh
IG5vZGUgb2YgdGhlIHNhbWUgdHlwZSB3aXRoIHN0cnVjdHVyYWxseSBpc29tb3JwaGljCisJICog
Y2hpbGQgc3VidHJlZXMuIFN1YmNsYXNzZXMgbWF5IG92ZXJyaWRlIHRoaXMgbWV0aG9kIGFzIG5l
ZWRlZC4KKwkgKiA8L3A+CisJICoKKwkgKiBAcGFyYW0gbm9kZSB0aGUgbm9kZQorCSAqIEBwYXJh
bSBvdGhlciB0aGUgb3RoZXIgb2JqZWN0LCBvciA8Y29kZT5udWxsPC9jb2RlPgorCSAqIEByZXR1
cm4gPGNvZGU+dHJ1ZTwvY29kZT4gaWYgdGhlIHN1YnRyZWUgbWF0Y2hlcywgb3IKKwkgKiAgIDxj
b2RlPmZhbHNlPC9jb2RlPiBpZiB0aGV5IGRvIG5vdCBtYXRjaCBvciB0aGUgb3RoZXIgb2JqZWN0
IGhhcyBhCisJICogICBkaWZmZXJlbnQgbm9kZSB0eXBlIG9yIGlzIDxjb2RlPm51bGw8L2NvZGU+
CisJICogQHNpbmNlIDMuOSBCRVRBX0pBVkE4CisJICovCisJcHVibGljIGJvb2xlYW4gbWF0Y2go
RXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZSBub2RlLCBPYmplY3Qgb3RoZXIpIHsKKwkJaWYgKCEo
b3RoZXIgaW5zdGFuY2VvZiBFeHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlKSkgeworCQkJcmV0dXJu
IGZhbHNlOworCQl9CisJCUV4cHJlc3Npb25NZXRob2RSZWZlcmVuY2UgbyA9IChFeHByZXNzaW9u
TWV0aG9kUmVmZXJlbmNlKSBvdGhlcjsKKwkJcmV0dXJuICgKKwkJCXNhZmVTdWJ0cmVlTWF0Y2go
bm9kZS5nZXRFeHByZXNzaW9uKCksIG8uZ2V0RXhwcmVzc2lvbigpKQorCQkJCSYmIHNhZmVTdWJ0
cmVlTGlzdE1hdGNoKG5vZGUudHlwZUFyZ3VtZW50cygpLCBvLnR5cGVBcmd1bWVudHMoKSkKKwkJ
CQkmJiBzYWZlU3VidHJlZU1hdGNoKG5vZGUuZ2V0TmFtZSgpLCBvLmdldE5hbWUoKSkpOwogCX0K
IAogCS8qKgpAQCAtMjAyMiw2ICsyMDczLDMyIEBACiAJICogQHJldHVybiA8Y29kZT50cnVlPC9j
b2RlPiBpZiB0aGUgc3VidHJlZSBtYXRjaGVzLCBvcgogCSAqICAgPGNvZGU+ZmFsc2U8L2NvZGU+
IGlmIHRoZXkgZG8gbm90IG1hdGNoIG9yIHRoZSBvdGhlciBvYmplY3QgaGFzIGEKIAkgKiAgIGRp
ZmZlcmVudCBub2RlIHR5cGUgb3IgaXMgPGNvZGU+bnVsbDwvY29kZT4KKwkgKiAgIAorCSAqICAg
QHNpbmNlIDMuOSBCRVRBX0pBVkE4CisJICovCisJcHVibGljIGJvb2xlYW4gbWF0Y2goU3VwZXJN
ZXRob2RSZWZlcmVuY2Ugbm9kZSwgT2JqZWN0IG90aGVyKSB7CisJCWlmICghKG90aGVyIGluc3Rh
bmNlb2YgU3VwZXJNZXRob2RSZWZlcmVuY2UpKSB7CisJCQlyZXR1cm4gZmFsc2U7CisJCX0KKwkJ
U3VwZXJNZXRob2RSZWZlcmVuY2UgbyA9IChTdXBlck1ldGhvZFJlZmVyZW5jZSkgb3RoZXI7CisJ
CXJldHVybiAoc2FmZVN1YnRyZWVNYXRjaChub2RlLmdldFF1YWxpZmllcigpLCBvLmdldFF1YWxp
ZmllcigpKQorCQkJCSYmIHNhZmVTdWJ0cmVlTGlzdE1hdGNoKG5vZGUudHlwZUFyZ3VtZW50cygp
LCBvLnR5cGVBcmd1bWVudHMoKSkKKwkJCQkmJiBzYWZlU3VidHJlZU1hdGNoKG5vZGUuZ2V0TmFt
ZSgpLCBvLmdldE5hbWUoKSkpOworCX0KKworCS8qKgorCSAqIFJldHVybnMgd2hldGhlciB0aGUg
Z2l2ZW4gbm9kZSBhbmQgdGhlIG90aGVyIG9iamVjdCBtYXRjaC4KKwkgKiA8cD4KKwkgKiBUaGUg
ZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiBwcm92aWRlZCBieSB0aGlzIGNsYXNzIHRlc3RzIHdoZXRo
ZXIgdGhlCisJICogb3RoZXIgb2JqZWN0IGlzIGEgbm9kZSBvZiB0aGUgc2FtZSB0eXBlIHdpdGgg
c3RydWN0dXJhbGx5IGlzb21vcnBoaWMKKwkgKiBjaGlsZCBzdWJ0cmVlcy4gU3ViY2xhc3NlcyBt
YXkgb3ZlcnJpZGUgdGhpcyBtZXRob2QgYXMgbmVlZGVkLgorCSAqIDwvcD4KKwkgKgorCSAqIEBw
YXJhbSBub2RlIHRoZSBub2RlCisJICogQHBhcmFtIG90aGVyIHRoZSBvdGhlciBvYmplY3QsIG9y
IDxjb2RlPm51bGw8L2NvZGU+CisJICogQHJldHVybiA8Y29kZT50cnVlPC9jb2RlPiBpZiB0aGUg
c3VidHJlZSBtYXRjaGVzLCBvcgorCSAqICAgPGNvZGU+ZmFsc2U8L2NvZGU+IGlmIHRoZXkgZG8g
bm90IG1hdGNoIG9yIHRoZSBvdGhlciBvYmplY3QgaGFzIGEKKwkgKiAgIGRpZmZlcmVudCBub2Rl
IHR5cGUgb3IgaXMgPGNvZGU+bnVsbDwvY29kZT4KIAkgKi8KIAlwdWJsaWMgYm9vbGVhbiBtYXRj
aChTd2l0Y2hDYXNlIG5vZGUsIE9iamVjdCBvdGhlcikgewogCQlpZiAoIShvdGhlciBpbnN0YW5j
ZW9mIFN3aXRjaENhc2UpKSB7CkBAIC0yMzA2LDYgKzIzODMsMzIgQEAKIAkgKiBAcmV0dXJuIDxj
b2RlPnRydWU8L2NvZGU+IGlmIHRoZSBzdWJ0cmVlIG1hdGNoZXMsIG9yCiAJICogICA8Y29kZT5m
YWxzZTwvY29kZT4gaWYgdGhleSBkbyBub3QgbWF0Y2ggb3IgdGhlIG90aGVyIG9iamVjdCBoYXMg
YQogCSAqICAgZGlmZmVyZW50IG5vZGUgdHlwZSBvciBpcyA8Y29kZT5udWxsPC9jb2RlPgorCSAq
IEBzaW5jZSAzLjkgQkVUQV9KQVZBOAorCSAqLworCXB1YmxpYyBib29sZWFuIG1hdGNoKFR5cGVN
ZXRob2RSZWZlcmVuY2Ugbm9kZSwgT2JqZWN0IG90aGVyKSB7CisJCWlmICghKG90aGVyIGluc3Rh
bmNlb2YgVHlwZU1ldGhvZFJlZmVyZW5jZSkpIHsKKwkJCXJldHVybiBmYWxzZTsKKwkJfQorCQlU
eXBlTWV0aG9kUmVmZXJlbmNlIG8gPSAoVHlwZU1ldGhvZFJlZmVyZW5jZSkgb3RoZXI7CisJCXJl
dHVybiAoCisJCQlzYWZlU3VidHJlZU1hdGNoKG5vZGUuZ2V0VHlwZSgpLCBvLmdldFR5cGUoKSkK
KwkJCQkmJiBzYWZlU3VidHJlZUxpc3RNYXRjaChub2RlLnR5cGVBcmd1bWVudHMoKSwgby50eXBl
QXJndW1lbnRzKCkpCisJCQkJJiYgc2FmZVN1YnRyZWVNYXRjaChub2RlLmdldE5hbWUoKSwgby5n
ZXROYW1lKCkpKTsKKwl9CisKKwkvKioKKwkgKiBSZXR1cm5zIHdoZXRoZXIgdGhlIGdpdmVuIG5v
ZGUgYW5kIHRoZSBvdGhlciBvYmplY3QgbWF0Y2guCisJICogPHA+CisJICogVGhlIGRlZmF1bHQg
aW1wbGVtZW50YXRpb24gcHJvdmlkZWQgYnkgdGhpcyBjbGFzcyB0ZXN0cyB3aGV0aGVyIHRoZQor
CSAqIG90aGVyIG9iamVjdCBpcyBhIG5vZGUgb2YgdGhlIHNhbWUgdHlwZSB3aXRoIHN0cnVjdHVy
YWxseSBpc29tb3JwaGljCisJICogY2hpbGQgc3VidHJlZXMuIFN1YmNsYXNzZXMgbWF5IG92ZXJy
aWRlIHRoaXMgbWV0aG9kIGFzIG5lZWRlZC4KKwkgKiA8L3A+CisJICoKKwkgKiBAcGFyYW0gbm9k
ZSB0aGUgbm9kZQorCSAqIEBwYXJhbSBvdGhlciB0aGUgb3RoZXIgb2JqZWN0LCBvciA8Y29kZT5u
dWxsPC9jb2RlPgorCSAqIEByZXR1cm4gPGNvZGU+dHJ1ZTwvY29kZT4gaWYgdGhlIHN1YnRyZWUg
bWF0Y2hlcywgb3IKKwkgKiAgIDxjb2RlPmZhbHNlPC9jb2RlPiBpZiB0aGV5IGRvIG5vdCBtYXRj
aCBvciB0aGUgb3RoZXIgb2JqZWN0IGhhcyBhCisJICogICBkaWZmZXJlbnQgbm9kZSB0eXBlIG9y
IGlzIDxjb2RlPm51bGw8L2NvZGU+CiAJICogQHNpbmNlIDMuMQogCSAqLwogCXB1YmxpYyBib29s
ZWFuIG1hdGNoKFR5cGVQYXJhbWV0ZXIgbm9kZSwgT2JqZWN0IG90aGVyKSB7CmRpZmYgLS1naXQg
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVE5v
ZGUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9k
b20vQVNUTm9kZS5qYXZhCmluZGV4IDZiYmE0ZjUuLjU4ODVkMzMgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUTm9kZS5qYXZh
CisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20v
QVNUTm9kZS5qYXZhCkBAIC04NjgsNiArODY4LDM4IEBACiAJcHVibGljIHN0YXRpYyBmaW5hbCBp
bnQgUEFDS0FHRV9RVUFMSUZJRURfVFlQRSA9IDg4OwogCiAJLyoqCisJICogTm9kZSB0eXBlIGNv
bnN0YW50IGluZGljYXRpbmcgYSBub2RlIG9mIHR5cGUKKwkgKiA8Y29kZT5DcmVhdGlvblJlZmVy
ZW5jZTwvY29kZT4uCisJICogQHNlZSBDcmVhdGlvblJlZmVyZW5jZQorCSAqIEBzaW5jZSAzLjkg
QkVUQV9KQVY4CisJICovCisJcHVibGljIHN0YXRpYyBmaW5hbCBpbnQgQ1JFQVRJT05fUkVGRVJF
TkNFID0gODk7CisKKwkvKioKKwkgKiBOb2RlIHR5cGUgY29uc3RhbnQgaW5kaWNhdGluZyBhIG5v
ZGUgb2YgdHlwZQorCSAqIDxjb2RlPkV4cHJlc3Npb25NZXRob2RSZWZlcmVuY2U8L2NvZGU+Lgor
CSAqIEBzZWUgRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZQorCSAqIEBzaW5jZSAzLjkgQkVUQV9K
QVY4CisJICovCisJcHVibGljIHN0YXRpYyBmaW5hbCBpbnQgRVhQUkVTU0lPTl9NRVRIT0RfUkVG
RVJFTkNFID0gOTA7CisKKwkvKioKKwkgKiBOb2RlIHR5cGUgY29uc3RhbnQgaW5kaWNhdGluZyBh
IG5vZGUgb2YgdHlwZQorCSAqIDxjb2RlPlN1cGVyTWV0aGhvZFJlZmVyZW5jZTwvY29kZT4uCisJ
ICogQHNlZSBTdXBlck1ldGhvZFJlZmVyZW5jZQorCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVY4CisJ
ICovCisJcHVibGljIHN0YXRpYyBmaW5hbCBpbnQgU1VQRVJfTUVUSE9EX1JFRkVSRU5DRSA9IDkx
OworCisJLyoqCisJICogTm9kZSB0eXBlIGNvbnN0YW50IGluZGljYXRpbmcgYSBub2RlIG9mIHR5
cGUKKwkgKiA8Y29kZT5UeXBlTWV0aG9kUmVmZXJlbmNlPC9jb2RlPi4KKwkgKiBAc2VlIFR5cGVN
ZXRob2RSZWZlcmVuY2UKKwkgKiBAc2luY2UgMy45IEJFVEFfSkFWOAorCSAqLworCXB1YmxpYyBz
dGF0aWMgZmluYWwgaW50IFRZUEVfTUVUSE9EX1JFRkVSRU5DRSA9IDkyOworCisJLyoqCiAJICog
UmV0dXJucyB0aGUgbm9kZSBjbGFzcyBmb3IgdGhlIGNvcnJlc3BvbmRpbmcgbm9kZSB0eXBlLgog
CSAqCiAJICogQHBhcmFtIG5vZGVUeXBlIEFTVCBub2RlIHR5cGUKQEAgLTkyMSw2ICs5NTMsOCBA
QAogCQkJCXJldHVybiBDb25zdHJ1Y3Rvckludm9jYXRpb24uY2xhc3M7CiAJCQljYXNlIENPTlRJ
TlVFX1NUQVRFTUVOVCA6CiAJCQkJcmV0dXJuIENvbnRpbnVlU3RhdGVtZW50LmNsYXNzOworCQkJ
Y2FzZSBDUkVBVElPTl9SRUZFUkVOQ0UgOgorCQkJCXJldHVybiBDcmVhdGlvblJlZmVyZW5jZS5j
bGFzczsKIAkJCWNhc2UgVU5JT05fVFlQRSA6CiAJCQkJcmV0dXJuIFVuaW9uVHlwZS5jbGFzczsK
IAkJCWNhc2UgRE9fU1RBVEVNRU5UIDoKQEAgLTkzMyw2ICs5NjcsOCBAQAogCQkJCXJldHVybiBF
bnVtQ29uc3RhbnREZWNsYXJhdGlvbi5jbGFzczsKIAkJCWNhc2UgRU5VTV9ERUNMQVJBVElPTiA6
CiAJCQkJcmV0dXJuIEVudW1EZWNsYXJhdGlvbi5jbGFzczsKKwkJCWNhc2UgRVhQUkVTU0lPTl9N
RVRIT0RfUkVGRVJFTkNFIDoKKwkJCQlyZXR1cm4gRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZS5j
bGFzczsKIAkJCWNhc2UgRVhQUkVTU0lPTl9TVEFURU1FTlQgOgogCQkJCXJldHVybiBFeHByZXNz
aW9uU3RhdGVtZW50LmNsYXNzOwogCQkJY2FzZSBFWFRSQV9ESU1FTlNJT046CkBAIC0xMDIxLDYg
KzEwNTcsOCBAQAogCQkJCXJldHVybiBTdXBlckZpZWxkQWNjZXNzLmNsYXNzOwogCQkJY2FzZSBT
VVBFUl9NRVRIT0RfSU5WT0NBVElPTiA6CiAJCQkJcmV0dXJuIFN1cGVyTWV0aG9kSW52b2NhdGlv
bi5jbGFzczsKKwkJCWNhc2UgU1VQRVJfTUVUSE9EX1JFRkVSRU5DRSA6CisJCQkJcmV0dXJuIFN1
cGVyTWV0aG9kUmVmZXJlbmNlLmNsYXNzOwogCQkJY2FzZSBTV0lUQ0hfQ0FTRToKIAkJCQlyZXR1
cm4gU3dpdGNoQ2FzZS5jbGFzczsKIAkJCWNhc2UgU1dJVENIX1NUQVRFTUVOVCA6CkBAIC0xMDQx
LDYgKzEwNzksOCBAQAogCQkJCXJldHVybiBUeXBlRGVjbGFyYXRpb24uY2xhc3M7CiAJCQljYXNl
IFRZUEVfREVDTEFSQVRJT05fU1RBVEVNRU5UIDoKIAkJCQlyZXR1cm4gVHlwZURlY2xhcmF0aW9u
U3RhdGVtZW50LmNsYXNzOworCQkJY2FzZSBUWVBFX01FVEhPRF9SRUZFUkVOQ0UgOgorCQkJCXJl
dHVybiBUeXBlTWV0aG9kUmVmZXJlbmNlLmNsYXNzOwogCQkJY2FzZSBUWVBFX0xJVEVSQUwgOgog
CQkJCXJldHVybiBUeXBlTGl0ZXJhbC5jbGFzczsKIAkJCWNhc2UgVFlQRV9QQVJBTUVURVIgOgpk
aWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L2RvbS9BU1RWaXNpdG9yLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlw
c2UvamR0L2NvcmUvZG9tL0FTVFZpc2l0b3IuamF2YQppbmRleCA2ODFlMzI1Li5iNGZmYmFmIDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUv
ZG9tL0FTVFZpc2l0b3IuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2NvcmUvZG9tL0FTVFZpc2l0b3IuamF2YQpAQCAtNTM1LDYgKzUzNSwyMyBAQAog
CSAqIFZpc2l0cyB0aGUgZ2l2ZW4gdHlwZS1zcGVjaWZpYyBBU1Qgbm9kZS4KIAkgKiA8cD4KIAkg
KiBUaGUgZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiBkb2VzIG5vdGhpbmcgYW5kIHJldHVybiB0cnVl
LgorCSAqIFN1YmNsYXNzZXMgbWF5IHJlLWltcGxlbWVudC4KKwkgKiA8L3A+CisJICoKKwkgKiBA
cGFyYW0gbm9kZSB0aGUgbm9kZSB0byB2aXNpdAorCSAqIEByZXR1cm4gPGNvZGU+dHJ1ZTwvY29k
ZT4gaWYgdGhlIGNoaWxkcmVuIG9mIHRoaXMgbm9kZSBzaG91bGQgYmUKKwkgKiB2aXNpdGVkLCBh
bmQgPGNvZGU+ZmFsc2U8L2NvZGU+IGlmIHRoZSBjaGlsZHJlbiBvZiB0aGlzIG5vZGUgc2hvdWxk
CisJICogYmUgc2tpcHBlZAorCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAorCSAqLworCXB1Ymxp
YyBib29sZWFuIHZpc2l0KENyZWF0aW9uUmVmZXJlbmNlIG5vZGUpIHsKKwkJcmV0dXJuIHRydWU7
CisJfQorCisJLyoqCisJICogVmlzaXRzIHRoZSBnaXZlbiB0eXBlLXNwZWNpZmljIEFTVCBub2Rl
LgorCSAqIDxwPgorCSAqIFRoZSBkZWZhdWx0IGltcGxlbWVudGF0aW9uIGRvZXMgbm90aGluZyBh
bmQgcmV0dXJuIHRydWUuCiAJICogU3ViY2xhc3NlcyBtYXkgcmVpbXBsZW1lbnQuCiAJICogPC9w
PgogCSAqCkBAIC02MTEsNiArNjI4LDIzIEBACiAJICogQHNpbmNlIDMuMQogCSAqLwogCXB1Ymxp
YyBib29sZWFuIHZpc2l0KEVudW1EZWNsYXJhdGlvbiBub2RlKSB7CisJCXJldHVybiB0cnVlOwor
CX0KKworCS8qKgorCSAqIFZpc2l0cyB0aGUgZ2l2ZW4gdHlwZS1zcGVjaWZpYyBBU1Qgbm9kZS4K
KwkgKiA8cD4KKwkgKiBUaGUgZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiBkb2VzIG5vdGhpbmcgYW5k
IHJldHVybiB0cnVlLgorCSAqIFN1YmNsYXNzZXMgbWF5IHJlLWltcGxlbWVudC4KKwkgKiA8L3A+
CisJICoKKwkgKiBAcGFyYW0gbm9kZSB0aGUgbm9kZSB0byB2aXNpdAorCSAqIEByZXR1cm4gPGNv
ZGU+dHJ1ZTwvY29kZT4gaWYgdGhlIGNoaWxkcmVuIG9mIHRoaXMgbm9kZSBzaG91bGQgYmUKKwkg
KiB2aXNpdGVkLCBhbmQgPGNvZGU+ZmFsc2U8L2NvZGU+IGlmIHRoZSBjaGlsZHJlbiBvZiB0aGlz
IG5vZGUgc2hvdWxkCisJICogYmUgc2tpcHBlZAorCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAor
CSAqLworCXB1YmxpYyBib29sZWFuIHZpc2l0KEV4cHJlc3Npb25NZXRob2RSZWZlcmVuY2Ugbm9k
ZSkgewogCQlyZXR1cm4gdHJ1ZTsKIAl9CiAKQEAgLTEzNjcsNiArMTQwMSwyMyBAQAogCSAqIEBy
ZXR1cm4gPGNvZGU+dHJ1ZTwvY29kZT4gaWYgdGhlIGNoaWxkcmVuIG9mIHRoaXMgbm9kZSBzaG91
bGQgYmUKIAkgKiB2aXNpdGVkLCBhbmQgPGNvZGU+ZmFsc2U8L2NvZGU+IGlmIHRoZSBjaGlsZHJl
biBvZiB0aGlzIG5vZGUgc2hvdWxkCiAJICogYmUgc2tpcHBlZAorCSAqIEBzaW5jZSAzLjkgQkVU
QV9KQVZBOAorCSAqLworCXB1YmxpYyBib29sZWFuIHZpc2l0KFN1cGVyTWV0aG9kUmVmZXJlbmNl
IG5vZGUpIHsKKwkJcmV0dXJuIHRydWU7CisJfQorCisJLyoqCisJICogVmlzaXRzIHRoZSBnaXZl
biB0eXBlLXNwZWNpZmljIEFTVCBub2RlLgorCSAqIDxwPgorCSAqIFRoZSBkZWZhdWx0IGltcGxl
bWVudGF0aW9uIGRvZXMgbm90aGluZyBhbmQgcmV0dXJuIHRydWUuCisJICogU3ViY2xhc3NlcyBt
YXkgcmVpbXBsZW1lbnQuCisJICogPC9wPgorCSAqCisJICogQHBhcmFtIG5vZGUgdGhlIG5vZGUg
dG8gdmlzaXQKKwkgKiBAcmV0dXJuIDxjb2RlPnRydWU8L2NvZGU+IGlmIHRoZSBjaGlsZHJlbiBv
ZiB0aGlzIG5vZGUgc2hvdWxkIGJlCisJICogdmlzaXRlZCwgYW5kIDxjb2RlPmZhbHNlPC9jb2Rl
PiBpZiB0aGUgY2hpbGRyZW4gb2YgdGhpcyBub2RlIHNob3VsZAorCSAqIGJlIHNraXBwZWQKIAkg
Ki8KIAlwdWJsaWMgYm9vbGVhbiB2aXNpdChTd2l0Y2hDYXNlIG5vZGUpIHsKIAkJcmV0dXJuIHRy
dWU7CkBAIC0xNTMzLDYgKzE1ODQsMjQgQEAKIAkgKiBiZSBza2lwcGVkCiAJICovCiAJcHVibGlj
IGJvb2xlYW4gdmlzaXQoVHlwZUxpdGVyYWwgbm9kZSkgeworCQlyZXR1cm4gdHJ1ZTsKKwl9CisK
KwkvKioKKwkgKiBWaXNpdHMgdGhlIGdpdmVuIHR5cGUtc3BlY2lmaWMgQVNUIG5vZGUuCisJICog
PHA+CisJICogVGhlIGRlZmF1bHQgaW1wbGVtZW50YXRpb24gZG9lcyBub3RoaW5nIGFuZCByZXR1
cm4gdHJ1ZS4KKwkgKiBTdWJjbGFzc2VzIG1heSByZWltcGxlbWVudC4KKwkgKiA8L3A+CisJICoK
KwkgKiBAcGFyYW0gbm9kZSB0aGUgbm9kZSB0byB2aXNpdAorCSAqIEByZXR1cm4gPGNvZGU+dHJ1
ZTwvY29kZT4gaWYgdGhlIGNoaWxkcmVuIG9mIHRoaXMgbm9kZSBzaG91bGQgYmUKKwkgKiB2aXNp
dGVkLCBhbmQgPGNvZGU+ZmFsc2U8L2NvZGU+IGlmIHRoZSBjaGlsZHJlbiBvZiB0aGlzIG5vZGUg
c2hvdWxkCisJICogYmUgc2tpcHBlZAorCSAqIAorCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAor
CSAqLworCXB1YmxpYyBib29sZWFuIHZpc2l0KFR5cGVNZXRob2RSZWZlcmVuY2Ugbm9kZSkgewog
CQlyZXR1cm4gdHJ1ZTsKIAl9CiAKQEAgLTE5MTgsNiArMTk4NywxOSBAQAogCSAqIDwvcD4KIAkg
KgogCSAqIEBwYXJhbSBub2RlIHRoZSBub2RlIHRvIHZpc2l0CisJICogQHNpbmNlIDMuOSBCRVRB
X0pBVkE4CisJICovCisJcHVibGljIHZvaWQgZW5kVmlzaXQoQ3JlYXRpb25SZWZlcmVuY2Ugbm9k
ZSkgeworCQkvLyBkZWZhdWx0IGltcGxlbWVudGF0aW9uOiBkbyBub3RoaW5nCisJfQorCisJLyoq
CisJICogRW5kIG9mIHZpc2l0IHRoZSBnaXZlbiB0eXBlLXNwZWNpZmljIEFTVCBub2RlLgorCSAq
IDxwPgorCSAqIFRoZSBkZWZhdWx0IGltcGxlbWVudGF0aW9uIGRvZXMgbm90aGluZy4gU3ViY2xh
c3NlcyBtYXkgcmVpbXBsZW1lbnQuCisJICogPC9wPgorCSAqCisJICogQHBhcmFtIG5vZGUgdGhl
IG5vZGUgdG8gdmlzaXQKIAkgKi8KIAlwdWJsaWMgdm9pZCBlbmRWaXNpdChEb1N0YXRlbWVudCBu
b2RlKSB7CiAJCS8vIGRlZmF1bHQgaW1wbGVtZW50YXRpb246IGRvIG5vdGhpbmcKQEAgLTE5NzEs
NiArMjA1MywxOSBAQAogCSAqIEBzaW5jZSAzLjEKIAkgKi8KIAlwdWJsaWMgdm9pZCBlbmRWaXNp
dChFbnVtRGVjbGFyYXRpb24gbm9kZSkgeworCQkvLyBkZWZhdWx0IGltcGxlbWVudGF0aW9uOiBk
byBub3RoaW5nCisJfQorCisJLyoqCisJICogRW5kIG9mIHZpc2l0IHRoZSBnaXZlbiB0eXBlLXNw
ZWNpZmljIEFTVCBub2RlLgorCSAqIDxwPgorCSAqIFRoZSBkZWZhdWx0IGltcGxlbWVudGF0aW9u
IGRvZXMgbm90aGluZy4gU3ViY2xhc3NlcyBtYXkgcmVpbXBsZW1lbnQuCisJICogPC9wPgorCSAq
CisJICogQHBhcmFtIG5vZGUgdGhlIG5vZGUgdG8gdmlzaXQKKwkgKiBAc2luY2UgMy45IEJFVEFf
SkFWQTgKKwkgKi8KKwlwdWJsaWMgdm9pZCBlbmRWaXNpdChFeHByZXNzaW9uTWV0aG9kUmVmZXJl
bmNlIG5vZGUpIHsKIAkJLy8gZGVmYXVsdCBpbXBsZW1lbnRhdGlvbjogZG8gbm90aGluZwogCX0K
IApAQCAtMjUxNiw2ICsyNjExLDE5IEBACiAJICogPC9wPgogCSAqCiAJICogQHBhcmFtIG5vZGUg
dGhlIG5vZGUgdG8gdmlzaXQKKwkgKiBAc2luY2UgMy45IEJFVEFfSkFWQTgKKwkgKi8KKwlwdWJs
aWMgdm9pZCBlbmRWaXNpdChTdXBlck1ldGhvZFJlZmVyZW5jZSBub2RlKSB7CisJCS8vIGRlZmF1
bHQgaW1wbGVtZW50YXRpb246IGRvIG5vdGhpbmcKKwl9CisKKwkvKioKKwkgKiBFbmQgb2Ygdmlz
aXQgdGhlIGdpdmVuIHR5cGUtc3BlY2lmaWMgQVNUIG5vZGUuCisJICogPHA+CisJICogVGhlIGRl
ZmF1bHQgaW1wbGVtZW50YXRpb24gZG9lcyBub3RoaW5nLiBTdWJjbGFzc2VzIG1heSByZWltcGxl
bWVudC4KKwkgKiA8L3A+CisJICoKKwkgKiBAcGFyYW0gbm9kZSB0aGUgbm9kZSB0byB2aXNpdAog
CSAqLwogCXB1YmxpYyB2b2lkIGVuZFZpc2l0KFN3aXRjaENhc2Ugbm9kZSkgewogCQkvLyBkZWZh
dWx0IGltcGxlbWVudGF0aW9uOiBkbyBub3RoaW5nCkBAIC0yNjQ5LDYgKzI3NTcsMjAgQEAKIAkg
KiA8L3A+CiAJICoKIAkgKiBAcGFyYW0gbm9kZSB0aGUgbm9kZSB0byB2aXNpdAorCSAqIAorCSAq
IEBzaW5jZSAzLjkgQkVUQV9KQVZBOAorCSAqLworCXB1YmxpYyB2b2lkIGVuZFZpc2l0KFR5cGVN
ZXRob2RSZWZlcmVuY2Ugbm9kZSkgeworCQkvLyBkZWZhdWx0IGltcGxlbWVudGF0aW9uOiBkbyBu
b3RoaW5nCisJfQorCisJLyoqCisJICogRW5kIG9mIHZpc2l0IHRoZSBnaXZlbiB0eXBlLXNwZWNp
ZmljIEFTVCBub2RlLgorCSAqIDxwPgorCSAqIFRoZSBkZWZhdWx0IGltcGxlbWVudGF0aW9uIGRv
ZXMgbm90aGluZy4gU3ViY2xhc3NlcyBtYXkgcmVpbXBsZW1lbnQuCisJICogPC9wPgorCSAqCisJ
ICogQHBhcmFtIG5vZGUgdGhlIG5vZGUgdG8gdmlzaXQKIAkgKiBAc2luY2UgMy4xCiAJICovCiAJ
cHVibGljIHZvaWQgZW5kVmlzaXQoVHlwZVBhcmFtZXRlciBub2RlKSB7CmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0JpbmRpbmdS
ZXNvbHZlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9j
b3JlL2RvbS9CaW5kaW5nUmVzb2x2ZXIuamF2YQppbmRleCA3MTI3NGEzLi5kZTc5YTRjIDEwMDY0
NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9t
L0JpbmRpbmdSZXNvbHZlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcv
ZWNsaXBzZS9qZHQvY29yZS9kb20vQmluZGluZ1Jlc29sdmVyLmphdmEKQEAgLTU4MSw2ICs1ODEs
MjggQEAKIAl9CiAKIAkvKioKKwkgKiBSZXNvbHZlcyB0aGUgZ2l2ZW4gIG1ldGhvZCByZWZlcmVu
Y2UgYW5kIHJldHVybnMgdGhlIGJpbmRpbmcgZm9yIGl0LgorCSAqIDxwPgorCSAqIFRoZSBpbXBs
ZW1lbnRhdGlvbiBvZiA8Y29kZT5NZXRob2RSZWZlcmVuY2UucmVzb2x2ZU1ldGhvZEJpbmRpbmc8
L2NvZGU+CisJICogZm9yd2FyZHMgdG8gdGhpcyBtZXRob2QuIEhvdyB0aGUgbWV0aG9kIHJlc29s
dmVzIGlzIG9mdGVuIGEgZnVuY3Rpb24gb2YKKwkgKiB0aGUgY29udGV4dCBpbiB3aGljaCB0aGUg
bWV0aG9kIHJlZmVyZW5jZSBub2RlIGlzIGVtYmVkZGVkIGFzIHdlbGwgYXMKKwkgKiB0aGUgbWV0
aG9kIHJlZmVyZW5jZSBzdWJ0cmVlIGl0c2VsZi4KKwkgKiA8L3A+CisJICogPHA+CisJICogVGhl
IGRlZmF1bHQgaW1wbGVtZW50YXRpb24gb2YgdGhpcyBtZXRob2QgcmV0dXJucyA8Y29kZT5udWxs
PC9jb2RlPi4KKwkgKiBTdWJjbGFzc2VzIG1heSByZWltcGxlbWVudC4KKwkgKiA8L3A+CisJICoK
KwkgKiBAcGFyYW0gbWV0aG9kUmVmZXJlbmNlIHRoZSAgbWV0aG9kIHJlZmVyZW5jZSBvZiBpbnRl
cmVzdAorCSAqIEByZXR1cm4gdGhlIGJpbmRpbmcgZm9yIHRoZSBnaXZlbiAgbWV0aG9kIHJlZmVy
ZW5jZSwgb3IKKwkgKiAgICA8Y29kZT5udWxsPC9jb2RlPiBpZiBubyBiaW5kaW5nIGlzIGF2YWls
YWJsZQorCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAorCSAqLworCUlNZXRob2RCaW5kaW5nIHJl
c29sdmVNZXRob2QoTWV0aG9kUmVmZXJlbmNlIG1ldGhvZFJlZmVyZW5jZSkgeworCQlyZXR1cm4g
bnVsbDsKKwl9CisKKwkvKioKIAkgKiBSZXNvbHZlcyB0aGUgZ2l2ZW4gTGFtYmRhIEV4cHJlc3Np
b24gYW5kIHJldHVybnMgdGhlIGJpbmRpbmcgZm9yIGl0LgogCSAqIDxwPgogCSAqIFRoZSBpbXBs
ZW1lbnRhdGlvbiBvZiA8Y29kZT5MYW1iZGFFeHByZXNzaW9uLnJlc29sdmVNZXRob2RCaW5kaW5n
PC9jb2RlPgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNl
L2pkdC9jb3JlL2RvbS9DcmVhdGlvblJlZmVyZW5jZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9DcmVhdGlvblJlZmVyZW5jZS5qYXZhCm5l
dyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLjdlMjc2MTkKLS0tIC9kZXYvbnVsbAor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0Ny
ZWF0aW9uUmVmZXJlbmNlLmphdmEKQEAgLTAsMCArMSwyNjEgQEAKKy8qKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqCisgKiBDb3B5cmlnaHQgKGMpIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMu
CisgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlp
bmcgbWF0ZXJpYWxzCisgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRo
ZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKKyAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMg
ZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CisgKiBodHRwOi8vd3d3LmVjbGlwc2Uu
b3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24g
b2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEK
KyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVz
dGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNv
bXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgorICogCisgKiBDb250
cmlidXRvcnM6CisgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxl
bWVudGF0aW9uCisgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KK3BhY2thZ2Ugb3JnLmVjbGlwc2Uu
amR0LmNvcmUuZG9tOworCitpbXBvcnQgamF2YS51dGlsLkFycmF5TGlzdDsKK2ltcG9ydCBqYXZh
LnV0aWwuTGlzdDsKKworLyoqCisgKiBDcmVhdGlvbiBSZWZlcmVuY2UgKEFkZGVkIGluIEpMUzQg
QVBJKSBleHByZXNzaW9uIEFTVCBub2RlIHR5cGUuCisgKiAKKyAqIDxwcmU+CisgKiBDcmVhdGlv
blJlZmVyZW5jZToKKyAqICAgICBFeHByZXNzaW9uIDxiPjo6PC9iPiAKKyAqICAgICAgICAgWyA8
Yj4mbHQ7PC9iPiBUeXBlIHsgPGI+LDwvYj4gVHlwZSB9IDxiPiZndDs8L2I+IF0KKyAqICAgICAg
ICAgPGI+IG5ldyA8L2I+CisgKiA8L3ByZT4KKyAqCisgKiBAc2luY2UgMy45IEJFVEFfSkFWQTgK
KyAqIEBub2luc3RhbnRpYXRlIFRoaXMgY2xhc3MgaXMgbm90IGludGVuZGVkIHRvIGJlIGluc3Rh
bnRpYXRlZCBieSBjbGllbnRzLgorICovCitwdWJsaWMgY2xhc3MgQ3JlYXRpb25SZWZlcmVuY2Ug
ZXh0ZW5kcyBNZXRob2RSZWZlcmVuY2UgeworCisJLyoqCisJICogVGhlICJleHByZXNzaW9uIiBz
dHJ1Y3R1cmFsIHByb3BlcnR5IG9mIHRoaXMgbm9kZSB0eXBlIChjaGlsZCB0eXBlOiB7QGxpbmsg
RXhwcmVzc2lvbn0pLgorCSAqLworCXB1YmxpYyBzdGF0aWMgZmluYWwgQ2hpbGRQcm9wZXJ0eURl
c2NyaXB0b3IgRVhQUkVTU0lPTl9QUk9QRVJUWSA9CisJCW5ldyBDaGlsZFByb3BlcnR5RGVzY3Jp
cHRvcihDcmVhdGlvblJlZmVyZW5jZS5jbGFzcywgImV4cHJlc3Npb24iLCBFeHByZXNzaW9uLmNs
YXNzLCBNQU5EQVRPUlksIENZQ0xFX1JJU0spOyAvLyROT04tTkxTLTEkCisKKwkvKioKKwkgKiBU
aGUgInR5cGVBcmd1bWVudHMiIHN0cnVjdHVyYWwgcHJvcGVydHkgb2YgdGhpcyBub2RlIHR5cGUg
KGVsZW1lbnQgdHlwZToge0BsaW5rIFR5cGV9KSAKKwkgKi8KKwlwdWJsaWMgc3RhdGljIGZpbmFs
IENoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBUWVBFX0FSR1VNRU5UU19QUk9QRVJUWSA9CisJ
CWludGVybmFsVHlwZUFyZ3VtZW50c0ZhY3RvcnkoQ3JlYXRpb25SZWZlcmVuY2UuY2xhc3MpOwor
CisJLyoqCisJICogQSBsaXN0IG9mIHByb3BlcnR5IGRlc2NyaXB0b3JzIChlbGVtZW50IHR5cGU6
CisJICoge0BsaW5rIFN0cnVjdHVyYWxQcm9wZXJ0eURlc2NyaXB0b3J9KSwKKwkgKiBvciBudWxs
IGlmIHVuaW5pdGlhbGl6ZWQuCisJICovCisJcHJpdmF0ZSBzdGF0aWMgZmluYWwgTGlzdCBQUk9Q
RVJUWV9ERVNDUklQVE9SU184XzA7CisKKwlzdGF0aWMgeworCQlMaXN0IHByb3BlcnR5TGlzdCA9
IG5ldyBBcnJheUxpc3QoNCk7CisJCWNyZWF0ZVByb3BlcnR5TGlzdChDcmVhdGlvblJlZmVyZW5j
ZS5jbGFzcywgcHJvcGVydHlMaXN0KTsKKwkJYWRkUHJvcGVydHkoRVhQUkVTU0lPTl9QUk9QRVJU
WSwgcHJvcGVydHlMaXN0KTsKKwkJYWRkUHJvcGVydHkoVFlQRV9BUkdVTUVOVFNfUFJPUEVSVFks
IHByb3BlcnR5TGlzdCk7CisJCVBST1BFUlRZX0RFU0NSSVBUT1JTXzhfMCA9IHJlYXBQcm9wZXJ0
eUxpc3QocHJvcGVydHlMaXN0KTsKKwl9CisKKwkvKioKKwkgKiBSZXR1cm5zIGEgbGlzdCBvZiBz
dHJ1Y3R1cmFsIHByb3BlcnR5IGRlc2NyaXB0b3JzIGZvciB0aGlzIG5vZGUgdHlwZS4KKwkgKiBD
bGllbnRzIG11c3Qgbm90IG1vZGlmeSB0aGUgcmVzdWx0LgorCSAqCisJICogQHBhcmFtIGFwaUxl
dmVsIHRoZSBBUEkgbGV2ZWw7IG9uZSBvZiB0aGUgQVNULkpMUyogY29uc3RhbnRzCisJICogQHJl
dHVybiBhIGxpc3Qgb2YgcHJvcGVydHkgZGVzY3JpcHRvcnMgKGVsZW1lbnQgdHlwZToKKwkgKiB7
QGxpbmsgU3RydWN0dXJhbFByb3BlcnR5RGVzY3JpcHRvcn0pCisJICovCisJcHVibGljIHN0YXRp
YyBMaXN0IHByb3BlcnR5RGVzY3JpcHRvcnMoaW50IGFwaUxldmVsKSB7CisJCXJldHVybiBQUk9Q
RVJUWV9ERVNDUklQVE9SU184XzA7CisJfQorCisJLyoqCisJICogVGhlIGV4cHJlc3Npb247IGxh
emlseSBpbml0aWFsaXplZDsgZGVmYXVsdHMgdG8gYW4gdW5zcGVjaWZpZWQsCisJICogbGVnYWwg
ZXhwcmVzc2lvbiAoYSBzaW1wbGUgbmFtZSkuCisJICovCisJcHJpdmF0ZSBFeHByZXNzaW9uIGV4
cHJlc3Npb24gPSBudWxsOworCisJLyoqCisJICogQ3JlYXRlcyBhIG5ldyBBU1Qgbm9kZSBmb3Ig
YW4gQ3JlYXRpb25SZWZlcmVuY2UgZGVjbGFyYXRpb24gb3duZWQKKwkgKiBieSB0aGUgZ2l2ZW4g
QVNULgorCSAqIDxwPgorCSAqIE4uQi4gVGhpcyBjb25zdHJ1Y3RvciBpcyBwYWNrYWdlLXByaXZh
dGU7IGFsbCBzdWJjbGFzc2VzIG11c3QgYmUKKwkgKiBkZWNsYXJlZCBpbiB0aGUgc2FtZSBwYWNr
YWdlOyBjbGllbnRzIGFyZSB1bmFibGUgdG8gZGVjbGFyZQorCSAqIGFkZGl0aW9uYWwgc3ViY2xh
c3Nlcy4KKwkgKiA8L3A+CisJICoKKwkgKiBAcGFyYW0gYXN0IHRoZSBBU1QgdGhhdCBpcyB0byBv
d24gdGhpcyBub2RlCisJICovCisJQ3JlYXRpb25SZWZlcmVuY2UoQVNUIGFzdCkgeworCQlzdXBl
cihhc3QpOworCQl1bnN1cHBvcnRlZEluMl8zXzQoKTsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9j
IGZvciB0aGlzIG1ldGhvZCkKKwkgKiBNZXRob2QgZGVjbGFyZWQgb24gTWV0aG9kUmVmZXJlbmNl
LgorCSAqLworCUNoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBpbnRlcm5hbFR5cGVBcmd1bWVu
dHMyUHJvcGVydHkoKSB7CisJCXJldHVybiBUWVBFX0FSR1VNRU5UU19QUk9QRVJUWTsKKwl9CisK
KwkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKKwkgKiBNZXRob2QgZGVjbGFyZWQg
b24gQVNUTm9kZS4KKwkgKi8KKwlmaW5hbCBMaXN0IGludGVybmFsU3RydWN0dXJhbFByb3BlcnRp
ZXNGb3JUeXBlKGludCBhcGlMZXZlbCkgeworCQlyZXR1cm4gcHJvcGVydHlEZXNjcmlwdG9ycyhh
cGlMZXZlbCk7CisJfQorCisJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCisJICog
TWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCisJICovCisJZmluYWwgQVNUTm9kZSBpbnRlcm5h
bEdldFNldENoaWxkUHJvcGVydHkoQ2hpbGRQcm9wZXJ0eURlc2NyaXB0b3IgcHJvcGVydHksIGJv
b2xlYW4gZ2V0LCBBU1ROb2RlIGNoaWxkKSB7CisJCWlmIChwcm9wZXJ0eSA9PSBFWFBSRVNTSU9O
X1BST1BFUlRZKSB7CisJCQlpZiAoZ2V0KSB7CisJCQkJcmV0dXJuIGdldEV4cHJlc3Npb24oKTsK
KwkJCX0gZWxzZSB7CisJCQkJc2V0RXhwcmVzc2lvbigoRXhwcmVzc2lvbikgY2hpbGQpOworCQkJ
CXJldHVybiBudWxsOworCQkJfQorCQl9CisJCS8vIGFsbG93IGRlZmF1bHQgaW1wbGVtZW50YXRp
b24gdG8gZmxhZyB0aGUgZXJyb3IKKwkJcmV0dXJuIHN1cGVyLmludGVybmFsR2V0U2V0Q2hpbGRQ
cm9wZXJ0eShwcm9wZXJ0eSwgZ2V0LCBjaGlsZCk7CisJfQorCisJLyogKG9taXQgamF2YWRvYyBm
b3IgdGhpcyBtZXRob2QpCisJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCisJICovCisJ
ZmluYWwgTGlzdCBpbnRlcm5hbEdldENoaWxkTGlzdFByb3BlcnR5KENoaWxkTGlzdFByb3BlcnR5
RGVzY3JpcHRvciBwcm9wZXJ0eSkgeworCQlpZiAocHJvcGVydHkgPT0gVFlQRV9BUkdVTUVOVFNf
UFJPUEVSVFkpIHsKKwkJCXJldHVybiB0eXBlQXJndW1lbnRzKCk7CisJCX0KKwkJLy8gYWxsb3cg
ZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiB0byBmbGFnIHRoZSBlcnJvcgorCQlyZXR1cm4gc3VwZXIu
aW50ZXJuYWxHZXRDaGlsZExpc3RQcm9wZXJ0eShwcm9wZXJ0eSk7CisJfQorCisJLyogKG9taXQg
amF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCisJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUu
CisJICovCisJZmluYWwgaW50IGdldE5vZGVUeXBlMCgpIHsKKwkJcmV0dXJuIENSRUFUSU9OX1JF
RkVSRU5DRTsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKKwkgKiBN
ZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8KKwlBU1ROb2RlIGNsb25lMChBU1QgdGFy
Z2V0KSB7CisJCUNyZWF0aW9uUmVmZXJlbmNlIHJlc3VsdCA9IG5ldyBDcmVhdGlvblJlZmVyZW5j
ZSh0YXJnZXQpOworCQlyZXN1bHQuc2V0U291cmNlUmFuZ2UoZ2V0U3RhcnRQb3NpdGlvbigpLCBn
ZXRMZW5ndGgoKSk7CisJCXJlc3VsdC5zZXRFeHByZXNzaW9uKAorCQkJKEV4cHJlc3Npb24pIEFT
VE5vZGUuY29weVN1YnRyZWUodGFyZ2V0LCBnZXRFeHByZXNzaW9uKCkpKTsKKwkJcmVzdWx0LnR5
cGVBcmd1bWVudHMoKS5hZGRBbGwoQVNUTm9kZS5jb3B5U3VidHJlZXModGFyZ2V0LCB0eXBlQXJn
dW1lbnRzKCkpKTsKKwkJcmV0dXJuIHJlc3VsdDsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9jIGZv
ciB0aGlzIG1ldGhvZCkKKwkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8KKwlm
aW5hbCBib29sZWFuIHN1YnRyZWVNYXRjaDAoQVNUTWF0Y2hlciBtYXRjaGVyLCBPYmplY3Qgb3Ro
ZXIpIHsKKwkJLy8gZGlzcGF0Y2ggdG8gY29ycmVjdCBvdmVybG9hZGVkIG1hdGNoIG1ldGhvZAor
CQlyZXR1cm4gbWF0Y2hlci5tYXRjaCh0aGlzLCBvdGhlcik7CisJfQorCisJLyogKG9taXQgamF2
YWRvYyBmb3IgdGhpcyBtZXRob2QpCisJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCisJ
ICovCisJdm9pZCBhY2NlcHQwKEFTVFZpc2l0b3IgdmlzaXRvcikgeworCQlib29sZWFuIHZpc2l0
Q2hpbGRyZW4gPSB2aXNpdG9yLnZpc2l0KHRoaXMpOworCQlpZiAodmlzaXRDaGlsZHJlbikgewor
CQkJLy8gdmlzaXQgY2hpbGRyZW4gaW4gbm9ybWFsIGxlZnQgdG8gcmlnaHQgcmVhZGluZyBvcmRl
cgorCQkJYWNjZXB0Q2hpbGQodmlzaXRvciwgZ2V0RXhwcmVzc2lvbigpKTsKKwkJCWFjY2VwdENo
aWxkcmVuKHZpc2l0b3IsIHRoaXMudHlwZUFyZ3VtZW50cyk7CisJCX0KKwkJdmlzaXRvci5lbmRW
aXNpdCh0aGlzKTsKKwl9CisKKwkvKioKKwkgKiBSZXR1cm5zIHRoZSBleHByZXNzaW9uIG9mIHRo
aXMgQ3JlYXRpb24gUmVmZXJlbmNlIGV4cHJlc3Npb24sIG9yCisJICogPGNvZGU+bnVsbDwvY29k
ZT4gaWYgdGhlcmUgaXMgbm9uZS4KKwkgKgorCSAqIEByZXR1cm4gdGhlIGV4cHJlc3Npb24gbm9k
ZSwgb3IgPGNvZGU+bnVsbDwvY29kZT4gaWYgdGhlcmUgaXMgbm9uZQorCSAqLworCXB1YmxpYyBF
eHByZXNzaW9uIGdldEV4cHJlc3Npb24oKSB7CisJCWlmICh0aGlzLmV4cHJlc3Npb24gPT0gbnVs
bCkgeworCQkJLy8gbGF6eSBpbml0IG11c3QgYmUgdGhyZWFkLXNhZmUgZm9yIHJlYWRlcnMKKwkJ
CXN5bmNocm9uaXplZCAodGhpcykgeworCQkJCWlmICh0aGlzLmV4cHJlc3Npb24gPT0gbnVsbCkg
eworCQkJCQlwcmVMYXp5SW5pdCgpOworCQkJCQl0aGlzLmV4cHJlc3Npb24gPSBuZXcgU2ltcGxl
TmFtZSh0aGlzLmFzdCk7CisJCQkJCXBvc3RMYXp5SW5pdCh0aGlzLmV4cHJlc3Npb24sIEVYUFJF
U1NJT05fUFJPUEVSVFkpOworCQkJCX0JCQkJCisJCQl9CisJCX0KKwkJcmV0dXJuIHRoaXMuZXhw
cmVzc2lvbjsKKwl9CisKKwkvKioKKwkgKiBTZXRzIHRoZSBleHByZXNzaW9uIG9mIHRoaXMgQ3Jl
YXRpb24gUmVmZXJlbmNlLgorCSAqCisJICogQHBhcmFtIGV4cHJlc3Npb24gdGhlIGV4cHJlc3Np
b24gbm9kZSwgb3IgPGNvZGU+bnVsbDwvY29kZT4gaWYKKwkgKiAgICB0aGVyZSBpcyBub25lCisJ
ICogQGV4Y2VwdGlvbiBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24gaWY6CisJICogPHVsPgorCSAq
IDxsaT50aGUgbm9kZSBiZWxvbmdzIHRvIGEgZGlmZmVyZW50IEFTVDwvbGk+CisJICogPGxpPnRo
ZSBub2RlIGFscmVhZHkgaGFzIGEgcGFyZW50PC9saT4KKwkgKiA8bGk+YSBjeWNsZSBpbiB3b3Vs
ZCBiZSBjcmVhdGVkPC9saT4KKwkgKiA8L3VsPgorCSAqLworCXB1YmxpYyB2b2lkIHNldEV4cHJl
c3Npb24oRXhwcmVzc2lvbiBleHByZXNzaW9uKSB7CisJCWlmIChleHByZXNzaW9uID09IG51bGwp
IHsKKwkJCXRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oKTsKKwkJfQorCQlBU1RO
b2RlIG9sZENoaWxkID0gdGhpcy5leHByZXNzaW9uOworCQlwcmVSZXBsYWNlQ2hpbGQob2xkQ2hp
bGQsIGV4cHJlc3Npb24sIEVYUFJFU1NJT05fUFJPUEVSVFkpOworCQl0aGlzLmV4cHJlc3Npb24g
PSBleHByZXNzaW9uOworCQlwb3N0UmVwbGFjZUNoaWxkKG9sZENoaWxkLCBleHByZXNzaW9uLCBF
WFBSRVNTSU9OX1BST1BFUlRZKTsKKwl9CisKKwkvKioKKwkgKiBSZXR1cm5zIHRoZSBsaXZlIG9y
ZGVyZWQgbGlzdCBvZiB0eXBlIGFyZ3VtZW50cyBvZiB0aGlzIENyZWF0aW9uIFJlZmVyZW5jZS4K
KwkgKgorCSAqIEByZXR1cm4gdGhlIGxpdmUgbGlzdCBvZiB0eXBlIGFyZ3VtZW50cworCSAqICAg
IChlbGVtZW50IHR5cGU6IHtAbGluayBUeXBlfSkKKwkgKi8KKwlwdWJsaWMgTGlzdCB0eXBlQXJn
dW1lbnRzKCkgeworCQlyZXR1cm4gdGhpcy50eXBlQXJndW1lbnRzOworCX0KKworCS8qKgorCSAq
IFJlc29sdmVzIGFuZCByZXR1cm5zIHRoZSBiaW5kaW5nIGZvciB0aGUgbWV0aG9kIHJlZmVyZW5j
ZSBieSB0aGlzCisJICogZXhwcmVzc2lvbi4KKwkgKiA8cD4KKwkgKiBOb3RlIHRoYXQgYmluZGlu
Z3MgYXJlIGdlbmVyYWxseSB1bmF2YWlsYWJsZSB1bmxlc3MgcmVxdWVzdGVkIHdoZW4gdGhlCisJ
ICogQVNUIGlzIGJlaW5nIGJ1aWx0LgorCSAqIDwvcD4KKwkgKgorCSAqIEByZXR1cm4gdGhlIG1l
dGhvZCBiaW5kaW5nLCBvciA8Y29kZT5udWxsPC9jb2RlPiBpZiB0aGUgYmluZGluZyBjYW5ub3QK
KwkgKiBiZSByZXNvbHZlZAorCSAqLworCXB1YmxpYyBJTWV0aG9kQmluZGluZyByZXNvbHZlTWV0
aG9kQmluZGluZygpIHsKKwkJcmV0dXJuIHRoaXMuYXN0LmdldEJpbmRpbmdSZXNvbHZlcigpLnJl
c29sdmVNZXRob2QodGhpcyk7CisJfQorCisJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRo
b2QpCisJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCisJICovCisJaW50IG1lbVNpemUo
KSB7CisJCS8vIHRyZWF0IENvZGUgYXMgZnJlZQorCQlyZXR1cm4gQkFTRV9OT0RFX1NJWkUgKyAy
ICogNDsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKKwkgKiBNZXRo
b2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8KKwlpbnQgdHJlZVNpemUoKSB7CisJCXJldHVy
bgorCQkJbWVtU2l6ZSgpCisJCQkrICh0aGlzLmV4cHJlc3Npb24gPT0gbnVsbCA/IDAgOiBnZXRF
eHByZXNzaW9uKCkudHJlZVNpemUoKSkKKwkJCSsgKHRoaXMudHlwZUFyZ3VtZW50cyA9PSBudWxs
ID8gMCA6IHRoaXMudHlwZUFyZ3VtZW50cy5saXN0U2l6ZSgpKTsKKwl9Cit9ClwgTm8gbmV3bGlu
ZSBhdCBlbmQgb2YgZmlsZQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9EZWZhdWx0QVNUVmlzaXRvci5qYXZhIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9EZWZhdWx0QVNUVmlzaXRv
ci5qYXZhCmluZGV4IDAyOWYzY2MuLmM4YmZmZTUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vRGVmYXVsdEFTVFZpc2l0b3IuamF2
YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9t
L0RlZmF1bHRBU1RWaXNpdG9yLmphdmEKQEAgLTkyLDYgKzkyLDkgQEAKIAlwdWJsaWMgdm9pZCBl
bmRWaXNpdChDb250aW51ZVN0YXRlbWVudCBub2RlKSB7CiAJCWVuZFZpc2l0Tm9kZShub2RlKTsK
IAl9CisJcHVibGljIHZvaWQgZW5kVmlzaXQoQ3JlYXRpb25SZWZlcmVuY2Ugbm9kZSkgeworCQll
bmRWaXNpdE5vZGUobm9kZSk7CisJfQogCXB1YmxpYyB2b2lkIGVuZFZpc2l0KERvU3RhdGVtZW50
IG5vZGUpIHsKIAkJZW5kVmlzaXROb2RlKG5vZGUpOwogCX0KQEAgLTEwNSw2ICsxMDgsOSBAQAog
CQllbmRWaXNpdE5vZGUobm9kZSk7CiAJfQogCXB1YmxpYyB2b2lkIGVuZFZpc2l0KEVudW1EZWNs
YXJhdGlvbiBub2RlKSB7CisJCWVuZFZpc2l0Tm9kZShub2RlKTsKKwl9CisJcHVibGljIHZvaWQg
ZW5kVmlzaXQoRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZSBub2RlKSB7CiAJCWVuZFZpc2l0Tm9k
ZShub2RlKTsKIAl9CiAJcHVibGljIHZvaWQgZW5kVmlzaXQoRXhwcmVzc2lvblN0YXRlbWVudCBu
b2RlKSB7CkBAIC0yMzksNyArMjQ1LDkgQEAKIAlwdWJsaWMgdm9pZCBlbmRWaXNpdChTdXBlck1l
dGhvZEludm9jYXRpb24gbm9kZSkgewogCQllbmRWaXNpdE5vZGUobm9kZSk7CiAJfQotCisJcHVi
bGljIHZvaWQgZW5kVmlzaXQoU3VwZXJNZXRob2RSZWZlcmVuY2Ugbm9kZSkgeworCQllbmRWaXNp
dE5vZGUobm9kZSk7CisJfQogCXB1YmxpYyB2b2lkIGVuZFZpc2l0KFN3aXRjaENhc2Ugbm9kZSkg
ewogCQllbmRWaXNpdE5vZGUobm9kZSk7CiAJfQpAQCAtMjcyLDYgKzI4MCw5IEBACiAJCWVuZFZp
c2l0Tm9kZShub2RlKTsKIAl9CiAJcHVibGljIHZvaWQgZW5kVmlzaXQoVHlwZUxpdGVyYWwgbm9k
ZSkgeworCQllbmRWaXNpdE5vZGUobm9kZSk7CisJfQorCXB1YmxpYyB2b2lkIGVuZFZpc2l0KFR5
cGVNZXRob2RSZWZlcmVuY2Ugbm9kZSkgewogCQllbmRWaXNpdE5vZGUobm9kZSk7CiAJfQogCXB1
YmxpYyB2b2lkIGVuZFZpc2l0KFR5cGVQYXJhbWV0ZXIgbm9kZSkgewpAQCAtMzYzLDYgKzM3NCw5
IEBACiAJcHVibGljIGJvb2xlYW4gdmlzaXQoQ29udGludWVTdGF0ZW1lbnQgbm9kZSkgewogCQly
ZXR1cm4gdmlzaXROb2RlKG5vZGUpOwogCX0KKwlwdWJsaWMgYm9vbGVhbiB2aXNpdChDcmVhdGlv
blJlZmVyZW5jZSBub2RlKSB7CisJCXJldHVybiB2aXNpdE5vZGUobm9kZSk7CisJfQogCXB1Ymxp
YyBib29sZWFuIHZpc2l0KERvU3RhdGVtZW50IG5vZGUpIHsKIAkJcmV0dXJuIHZpc2l0Tm9kZShu
b2RlKTsKIAl9CkBAIC0zNzYsNiArMzkwLDkgQEAKIAkJcmV0dXJuIHZpc2l0Tm9kZShub2RlKTsK
IAl9CiAJcHVibGljIGJvb2xlYW4gdmlzaXQoRW51bURlY2xhcmF0aW9uIG5vZGUpIHsKKwkJcmV0
dXJuIHZpc2l0Tm9kZShub2RlKTsKKwl9CisJcHVibGljIGJvb2xlYW4gdmlzaXQoRXhwcmVzc2lv
bk1ldGhvZFJlZmVyZW5jZSBub2RlKSB7CiAJCXJldHVybiB2aXNpdE5vZGUobm9kZSk7CiAJfQog
CXB1YmxpYyBib29sZWFuIHZpc2l0KEV4cHJlc3Npb25TdGF0ZW1lbnQgbm9kZSkgewpAQCAtNTIw
LDYgKzUzNywxMCBAQAogCQlyZXR1cm4gdmlzaXROb2RlKG5vZGUpOwogCX0KIAorCXB1YmxpYyBi
b29sZWFuIHZpc2l0KFN1cGVyTWV0aG9kUmVmZXJlbmNlIG5vZGUpIHsKKwkJcmV0dXJuIHZpc2l0
Tm9kZShub2RlKTsKKwl9CisKIAlwdWJsaWMgYm9vbGVhbiB2aXNpdChTd2l0Y2hDYXNlIG5vZGUp
IHsKIAkJcmV0dXJuIHZpc2l0Tm9kZShub2RlKTsKIAl9CkBAIC01NjQsNiArNTg1LDEwIEBACiAJ
CXJldHVybiB2aXNpdE5vZGUobm9kZSk7CiAJfQogCisJcHVibGljIGJvb2xlYW4gdmlzaXQoVHlw
ZU1ldGhvZFJlZmVyZW5jZSBub2RlKSB7CisJCXJldHVybiB2aXNpdE5vZGUobm9kZSk7CisJfQor
CiAJcHVibGljIGJvb2xlYW4gdmlzaXQoVHlwZVBhcmFtZXRlciBub2RlKSB7CiAJCXJldHVybiB2
aXNpdE5vZGUobm9kZSk7CiAJfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9t
L29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9EZWZhdWx0QmluZGluZ1Jlc29sdmVyLmphdmEgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0RlZmF1bHRC
aW5kaW5nUmVzb2x2ZXIuamF2YQppbmRleCA0OWY1ODU2Li40ZjI2NmExIDEwMDY0NAotLS0gYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0RlZmF1bHRC
aW5kaW5nUmVzb2x2ZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2NvcmUvZG9tL0RlZmF1bHRCaW5kaW5nUmVzb2x2ZXIuamF2YQpAQCAtNzA5LDYg
KzcwOSwxMCBAQAogCQkJCWNhc2UgQVNUTm9kZS5JTkZJWF9FWFBSRVNTSU9OIDoKIAkJCQljYXNl
IEFTVE5vZGUuSU5TVEFOQ0VPRl9FWFBSRVNTSU9OIDoKIAkJCQljYXNlIEFTVE5vZGUuTEFNQkRB
X0VYUFJFU1NJT046CisJCQkJY2FzZSBBU1ROb2RlLkNSRUFUSU9OX1JFRkVSRU5DRToKKwkJCQlj
YXNlIEFTVE5vZGUuRVhQUkVTU0lPTl9NRVRIT0RfUkVGRVJFTkNFOgorCQkJCWNhc2UgQVNUTm9k
ZS5UWVBFX01FVEhPRF9SRUZFUkVOQ0U6CisJCQkJY2FzZSBBU1ROb2RlLlNVUEVSX01FVEhPRF9S
RUZFUkVOQ0UgOgogCQkJCWNhc2UgQVNUTm9kZS5GSUVMRF9BQ0NFU1MgOgogCQkJCWNhc2UgQVNU
Tm9kZS5TVVBFUl9GSUVMRF9BQ0NFU1MgOgogCQkJCWNhc2UgQVNUTm9kZS5BUlJBWV9BQ0NFU1Mg
OgpAQCAtODc1LDI2ICs4NzksNiBAQAogCS8qCiAJICogTWV0aG9kIGRlY2xhcmVkIG9uIEJpbmRp
bmdSZXNvbHZlci4KIAkgKi8KLQlzeW5jaHJvbml6ZWQgSU1ldGhvZEJpbmRpbmcgcmVzb2x2ZU1l
dGhvZChNZXRob2REZWNsYXJhdGlvbiBtZXRob2QpIHsKLQkJT2JqZWN0IG9sZE5vZGUgPSB0aGlz
Lm5ld0FzdFRvT2xkQXN0LmdldChtZXRob2QpOwotCQlpZiAob2xkTm9kZSBpbnN0YW5jZW9mIEFi
c3RyYWN0TWV0aG9kRGVjbGFyYXRpb24pIHsKLQkJCUFic3RyYWN0TWV0aG9kRGVjbGFyYXRpb24g
bWV0aG9kRGVjbGFyYXRpb24gPSAoQWJzdHJhY3RNZXRob2REZWNsYXJhdGlvbikgb2xkTm9kZTsK
LQkJCUlNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRpbmcgPSBnZXRNZXRob2RCaW5kaW5nKG1ldGhv
ZERlY2xhcmF0aW9uLmJpbmRpbmcpOwotCQkJaWYgKG1ldGhvZEJpbmRpbmcgPT0gbnVsbCkgewot
CQkJCXJldHVybiBudWxsOwotCQkJfQotCQkJdGhpcy5iaW5kaW5nc1RvQXN0Tm9kZXMucHV0KG1l
dGhvZEJpbmRpbmcsIG1ldGhvZCk7Ci0JCQlTdHJpbmcga2V5ID0gbWV0aG9kQmluZGluZy5nZXRL
ZXkoKTsKLQkJCWlmIChrZXkgIT0gbnVsbCkgewotCQkJCXRoaXMuYmluZGluZ1RhYmxlcy5iaW5k
aW5nS2V5c1RvQmluZGluZ3MucHV0KGtleSwgbWV0aG9kQmluZGluZyk7Ci0JCQl9Ci0JCQlyZXR1
cm4gbWV0aG9kQmluZGluZzsKLQkJfQotCQlyZXR1cm4gbnVsbDsKLQl9Ci0JLyoKLQkgKiBNZXRo
b2QgZGVjbGFyZWQgb24gQmluZGluZ1Jlc29sdmVyLgotCSAqLwogCXN5bmNocm9uaXplZCBJTWV0
aG9kQmluZGluZyByZXNvbHZlTWV0aG9kKExhbWJkYUV4cHJlc3Npb24gbGFtYmRhKSB7CiAJCU9i
amVjdCBvbGROb2RlID0gdGhpcy5uZXdBc3RUb09sZEFzdC5nZXQobGFtYmRhKTsKIAkJaWYgKG9s
ZE5vZGUgaW5zdGFuY2VvZiBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0Lkxh
bWJkYUV4cHJlc3Npb24pIHsKQEAgLTkxMiw2ICs4OTYsMjYgQEAKIAkJfQogCQlyZXR1cm4gbnVs
bDsKIAl9CisJLyoKKwkgKiBNZXRob2QgZGVjbGFyZWQgb24gQmluZGluZ1Jlc29sdmVyLgorCSAq
LworCXN5bmNocm9uaXplZCBJTWV0aG9kQmluZGluZyByZXNvbHZlTWV0aG9kKE1ldGhvZERlY2xh
cmF0aW9uIG1ldGhvZCkgeworCQlPYmplY3Qgb2xkTm9kZSA9IHRoaXMubmV3QXN0VG9PbGRBc3Qu
Z2V0KG1ldGhvZCk7CisJCWlmIChvbGROb2RlIGluc3RhbmNlb2YgQWJzdHJhY3RNZXRob2REZWNs
YXJhdGlvbikgeworCQkJQWJzdHJhY3RNZXRob2REZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlv
biA9IChBYnN0cmFjdE1ldGhvZERlY2xhcmF0aW9uKSBvbGROb2RlOworCQkJSU1ldGhvZEJpbmRp
bmcgbWV0aG9kQmluZGluZyA9IGdldE1ldGhvZEJpbmRpbmcobWV0aG9kRGVjbGFyYXRpb24uYmlu
ZGluZyk7CisJCQlpZiAobWV0aG9kQmluZGluZyA9PSBudWxsKSB7CisJCQkJcmV0dXJuIG51bGw7
CisJCQl9CisJCQl0aGlzLmJpbmRpbmdzVG9Bc3ROb2Rlcy5wdXQobWV0aG9kQmluZGluZywgbWV0
aG9kKTsKKwkJCVN0cmluZyBrZXkgPSBtZXRob2RCaW5kaW5nLmdldEtleSgpOworCQkJaWYgKGtl
eSAhPSBudWxsKSB7CisJCQkJdGhpcy5iaW5kaW5nVGFibGVzLmJpbmRpbmdLZXlzVG9CaW5kaW5n
cy5wdXQoa2V5LCBtZXRob2RCaW5kaW5nKTsKKwkJCX0KKwkJCXJldHVybiBtZXRob2RCaW5kaW5n
OworCQl9CisJCXJldHVybiBudWxsOworCX0KIC8qCiAJICogTWV0aG9kIGRlY2xhcmVkIG9uIEJp
bmRpbmdSZXNvbHZlci4KIAkgKi8KQEAgLTkyMCw2ICs5MjQsMjYgQEAKIAkJaWYgKG9sZE5vZGUg
aW5zdGFuY2VvZiBNZXNzYWdlU2VuZCkgewogCQkJTWVzc2FnZVNlbmQgbWVzc2FnZVNlbmQgPSAo
TWVzc2FnZVNlbmQpIG9sZE5vZGU7CiAJCQlyZXR1cm4gZ2V0TWV0aG9kQmluZGluZyhtZXNzYWdl
U2VuZC5iaW5kaW5nKTsKKwkJfQorCQlyZXR1cm4gbnVsbDsKKwl9CisJLyoKKwkgKiBNZXRob2Qg
ZGVjbGFyZWQgb24gQmluZGluZ1Jlc29sdmVyLgorCSAqLworCXN5bmNocm9uaXplZCBJTWV0aG9k
QmluZGluZyByZXNvbHZlTWV0aG9kKE1ldGhvZFJlZmVyZW5jZSBtZXRob2RSZWZlcmVuY2UpIHsK
KwkJT2JqZWN0IG9sZE5vZGUgPSB0aGlzLm5ld0FzdFRvT2xkQXN0LmdldChtZXRob2RSZWZlcmVu
Y2UpOworCQlpZiAob2xkTm9kZSBpbnN0YW5jZW9mIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5hc3QuUmVmZXJlbmNlRXhwcmVzc2lvbikgeworCQkJb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmFzdC5SZWZlcmVuY2VFeHByZXNzaW9uIHJlZmVyZW5jZUV4cHJlc3Np
b24gPSAob3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5SZWZlcmVuY2VFeHBy
ZXNzaW9uKSBvbGROb2RlOworCQkJSU1ldGhvZEJpbmRpbmcgbWV0aG9kQmluZGluZyA9IGdldE1l
dGhvZEJpbmRpbmcocmVmZXJlbmNlRXhwcmVzc2lvbi5iaW5kaW5nKTsKKwkJCWlmIChtZXRob2RC
aW5kaW5nID09IG51bGwpIHsKKwkJCQlyZXR1cm4gbnVsbDsKKwkJCX0KKwkJCXRoaXMuYmluZGlu
Z3NUb0FzdE5vZGVzLnB1dChtZXRob2RCaW5kaW5nLCBtZXRob2RSZWZlcmVuY2UpOworCQkJU3Ry
aW5nIGtleSA9IG1ldGhvZEJpbmRpbmcuZ2V0S2V5KCk7CisJCQlpZiAoa2V5ICE9IG51bGwpIHsK
KwkJCQl0aGlzLmJpbmRpbmdUYWJsZXMuYmluZGluZ0tleXNUb0JpbmRpbmdzLnB1dChrZXksIG1l
dGhvZEJpbmRpbmcpOworCQkJfQorCQkJcmV0dXJuIG1ldGhvZEJpbmRpbmc7CiAJCX0KIAkJcmV0
dXJuIG51bGw7CiAJfQpAQCAtMTEzOCw2ICsxMTYyLDExIEBACiAJCX0gZWxzZSBpZiAobm9kZSBp
bnN0YW5jZW9mIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuTWVtYmVyVmFs
dWVQYWlyKSB7CiAJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0Lk1lbWJl
clZhbHVlUGFpciBtZW1iZXJWYWx1ZVBhaXIgPSAob3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmFzdC5NZW1iZXJWYWx1ZVBhaXIpIG5vZGU7CiAJCQlJTWV0aG9kQmluZGluZyBtZXRo
b2QgPSBnZXRNZXRob2RCaW5kaW5nKG1lbWJlclZhbHVlUGFpci5iaW5kaW5nKTsKKwkJCWlmICht
ZXRob2QgPT0gbnVsbCkgcmV0dXJuIG51bGw7CisJCQlyZXR1cm4gbWV0aG9kLmdldFJldHVyblR5
cGUoKTsKKwkJfSBlbHNlIGlmIChub2RlIGluc3RhbmNlb2Ygb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmFzdC5SZWZlcmVuY2VFeHByZXNzaW9uKSB7CisJCQlvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlJlZmVyZW5jZUV4cHJlc3Npb24gcmVmZXJlbmNlRXhw
cmVzc2lvbiA9IChvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlJlZmVyZW5j
ZUV4cHJlc3Npb24pIG5vZGU7CisJCQlJTWV0aG9kQmluZGluZyBtZXRob2QgPSBnZXRNZXRob2RC
aW5kaW5nKHJlZmVyZW5jZUV4cHJlc3Npb24uYmluZGluZyk7CiAJCQlpZiAobWV0aG9kID09IG51
bGwpIHJldHVybiBudWxsOwogCQkJcmV0dXJuIG1ldGhvZC5nZXRSZXR1cm5UeXBlKCk7CiAJCX0K
QEAgLTE0MDAsNiArMTQyOSw5IEBACiAJCX0gZWxzZSBpZiAobm9kZSBpbnN0YW5jZW9mIG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuTWVtYmVyVmFsdWVQYWlyKSB7CiAJCQlv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0Lk1lbWJlclZhbHVlUGFpciBtZW1i
ZXJWYWx1ZVBhaXIgPSAob3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5NZW1i
ZXJWYWx1ZVBhaXIpIG5vZGU7CiAJCQlyZXR1cm4gZ2V0TWV0aG9kQmluZGluZyhtZW1iZXJWYWx1
ZVBhaXIuYmluZGluZyk7CisJCX0gZWxzZSBpZiAobm9kZSBpbnN0YW5jZW9mIG9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuUmVmZXJlbmNlRXhwcmVzc2lvbikgeworCQkJb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5SZWZlcmVuY2VFeHByZXNzaW9uIHJl
ZmVyZW5jZUV4cHJlc3Npb24gPSAob3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFz
dC5SZWZlcmVuY2VFeHByZXNzaW9uKSBub2RlOworCQkJcmV0dXJuIGdldE1ldGhvZEJpbmRpbmco
cmVmZXJlbmNlRXhwcmVzc2lvbi5iaW5kaW5nKTsKIAkJfQogCQlyZXR1cm4gbnVsbDsKIAl9CmRp
ZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUv
ZG9tL0V4cHJlc3Npb24uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBz
ZS9qZHQvY29yZS9kb20vRXhwcmVzc2lvbi5qYXZhCmluZGV4IDZmZDc2ZmEuLmE1YjZkYWIgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9k
b20vRXhwcmVzc2lvbi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNs
aXBzZS9qZHQvY29yZS9kb20vRXhwcmVzc2lvbi5qYXZhCkBAIC0zMSwxMSArMzEsMTQgQEAKICAq
ICAgIHtAbGluayBDaGFyYWN0ZXJMaXRlcmFsfSwKICAqICAgIHtAbGluayBDbGFzc0luc3RhbmNl
Q3JlYXRpb259LAogICogICAge0BsaW5rIENvbmRpdGlvbmFsRXhwcmVzc2lvbn0sCisgKiAgICB7
QGxpbmsgQ3JlYXRpb25SZWZlcmVuY2V9LAorICogICAge0BsaW5rIEV4cHJlc3Npb25NZXRob2RS
ZWZlcmVuY2V9LAogICogICAge0BsaW5rIEZpZWxkQWNjZXNzfSwKICAqICAgIHtAbGluayBJbmZp
eEV4cHJlc3Npb259LAogICogICAge0BsaW5rIEluc3RhbmNlb2ZFeHByZXNzaW9ufSwKICAqICAg
IHtAbGluayBMYW1iZGFFeHByZXNzaW9ufSwKICAqICAgIHtAbGluayBNZXRob2RJbnZvY2F0aW9u
fSwKKyAqICAgIHtAbGluayBNZXRob2RSZWZlcmVuY2V9LAogICogICAge0BsaW5rIE5hbWV9LAog
ICogICAge0BsaW5rIE51bGxMaXRlcmFsfSwKICAqICAgIHtAbGluayBOdW1iZXJMaXRlcmFsfSwK
QEAgLTQ1LDggKzQ4LDEwIEBACiAgKiAgICB7QGxpbmsgU3RyaW5nTGl0ZXJhbH0sCiAgKiAgICB7
QGxpbmsgU3VwZXJGaWVsZEFjY2Vzc30sCiAgKiAgICB7QGxpbmsgU3VwZXJNZXRob2RJbnZvY2F0
aW9ufSwKKyAqICAgIHtAbGluayBTdXBlck1ldGhvZFJlZmVyZW5jZX0sCiAgKiAgICB7QGxpbmsg
VGhpc0V4cHJlc3Npb259LAogICogICAge0BsaW5rIFR5cGVMaXRlcmFsfSwKKyAqICAgIHtAbGlu
ayBUeXBlTWV0aG9kUmVmZXJlbmNlfSwKICAqICAgIHtAbGluayBWYXJpYWJsZURlY2xhcmF0aW9u
RXhwcmVzc2lvbn0KICAqIDwvcHJlPgogICogPC9wPgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9FeHByZXNzaW9uTWV0aG9kUmVm
ZXJlbmNlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2Nv
cmUvZG9tL0V4cHJlc3Npb25NZXRob2RSZWZlcmVuY2UuamF2YQpuZXcgZmlsZSBtb2RlIDEwMDY0
NAppbmRleCAwMDAwMDAwLi5lMmM1N2QwCi0tLSAvZGV2L251bGwKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9FeHByZXNzaW9uTWV0aG9kUmVm
ZXJlbmNlLmphdmEKQEAgLTAsMCArMSwyOTYgQEAKKy8qKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCisg
KiBDb3B5cmlnaHQgKGMpIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBBbGwg
cmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJp
YWxzCisgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNl
IFB1YmxpYyBMaWNlbnNlIHYxLjAKKyAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0
aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CisgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2Fs
L2VwbC12MTAuaHRtbAorICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFy
bHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11
bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQg
ZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUg
d2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgorICogCisgKiBDb250cmlidXRvcnM6
CisgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9u
CisgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKi8KK3BhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmNvcmUu
ZG9tOworCitpbXBvcnQgamF2YS51dGlsLkFycmF5TGlzdDsKK2ltcG9ydCBqYXZhLnV0aWwuTGlz
dDsKKworLyoqCisgKiBFeHByZXNzaW9uIE1ldGhvZCBSZWZlcmVuY2UgKEFkZGVkIGluIEpMUzQg
QVBJKSBleHByZXNzaW9uIEFTVCBub2RlIHR5cGUuCisgKiA8cHJlPgorICogRXhwcmVzc2lvbk1l
dGhvZFJlZmVyZW5jZToKKyAqICAgICBFeHByZXNzaW9uIDxiPjo6PC9iPiAKKyAqICAgICAgICAg
WyA8Yj4mbHQ7PC9iPiBUeXBlIHsgPGI+LDwvYj4gVHlwZSB9IDxiPiZndDs8L2I+IF0KKyAqICAg
ICAgICAgSWRlbnRpZmllcgorICogPC9wcmU+CisgKgorICogQHNpbmNlIDMuOSBCRVRBX0pBVkE4
CisgKiBAbm9pbnN0YW50aWF0ZSBUaGlzIGNsYXNzIGlzIG5vdCBpbnRlbmRlZCB0byBiZSBpbnN0
YW50aWF0ZWQgYnkgY2xpZW50cy4KKyAqLworcHVibGljIGNsYXNzIEV4cHJlc3Npb25NZXRob2RS
ZWZlcmVuY2UgZXh0ZW5kcyBNZXRob2RSZWZlcmVuY2UgeworCisJLyoqCisJICogVGhlICJleHBy
ZXNzaW9uIiBzdHJ1Y3R1cmFsIHByb3BlcnR5IG9mIHRoaXMgbm9kZSB0eXBlIChjaGlsZCB0eXBl
OiB7QGxpbmsgRXhwcmVzc2lvbn0pLgorCSAqLworCXB1YmxpYyBzdGF0aWMgZmluYWwgQ2hpbGRQ
cm9wZXJ0eURlc2NyaXB0b3IgRVhQUkVTU0lPTl9QUk9QRVJUWSA9CisJCW5ldyBDaGlsZFByb3Bl
cnR5RGVzY3JpcHRvcihFeHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlLmNsYXNzLCAiZXhwcmVzc2lv
biIsIEV4cHJlc3Npb24uY2xhc3MsIE1BTkRBVE9SWSwgQ1lDTEVfUklTSyk7IC8vJE5PTi1OTFMt
MSQKKworCS8qKgorCSAqIFRoZSAidHlwZUFyZ3VtZW50cyIgc3RydWN0dXJhbCBwcm9wZXJ0eSBv
ZiB0aGlzIG5vZGUgdHlwZSAoZWxlbWVudCB0eXBlOiB7QGxpbmsgVHlwZX0pIAorCSAqLworCXB1
YmxpYyBzdGF0aWMgZmluYWwgQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yIFRZUEVfQVJHVU1F
TlRTX1BST1BFUlRZID0KKwkJaW50ZXJuYWxUeXBlQXJndW1lbnRzRmFjdG9yeShFeHByZXNzaW9u
TWV0aG9kUmVmZXJlbmNlLmNsYXNzKTsKKworCS8qKgorCSAqIFRoZSAibmFtZSIgc3RydWN0dXJh
bCBwcm9wZXJ0eSBvZiB0aGlzIG5vZGUgdHlwZSAoY2hpbGQgdHlwZToge0BsaW5rIFNpbXBsZU5h
bWV9LiAKKwkgKi8KKwlwdWJsaWMgc3RhdGljIGZpbmFsIENoaWxkUHJvcGVydHlEZXNjcmlwdG9y
IE5BTUVfUFJPUEVSVFkgPQorCQluZXcgQ2hpbGRQcm9wZXJ0eURlc2NyaXB0b3IoRXhwcmVzc2lv
bk1ldGhvZFJlZmVyZW5jZS5jbGFzcywgIm5hbWUiLCBTaW1wbGVOYW1lLmNsYXNzLCBNQU5EQVRP
UlksIE5PX0NZQ0xFX1JJU0spOyAvLyROT04tTkxTLTEkCisKKwkvKioKKwkgKiBBIGxpc3Qgb2Yg
cHJvcGVydHkgZGVzY3JpcHRvcnMgKGVsZW1lbnQgdHlwZToKKwkgKiB7QGxpbmsgU3RydWN0dXJh
bFByb3BlcnR5RGVzY3JpcHRvcn0pLAorCSAqIG9yIG51bGwgaWYgdW5pbml0aWFsaXplZC4KKwkg
Ki8KKwlwcml2YXRlIHN0YXRpYyBmaW5hbCBMaXN0IFBST1BFUlRZX0RFU0NSSVBUT1JTXzhfMDsK
KworCXN0YXRpYyB7CisJCUxpc3QgcHJvcGVydHlMaXN0ID0gbmV3IEFycmF5TGlzdCg0KTsKKwkJ
Y3JlYXRlUHJvcGVydHlMaXN0KEV4cHJlc3Npb25NZXRob2RSZWZlcmVuY2UuY2xhc3MsIHByb3Bl
cnR5TGlzdCk7CisJCWFkZFByb3BlcnR5KEVYUFJFU1NJT05fUFJPUEVSVFksIHByb3BlcnR5TGlz
dCk7CisJCWFkZFByb3BlcnR5KFRZUEVfQVJHVU1FTlRTX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3Qp
OworCQlhZGRQcm9wZXJ0eShOQU1FX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOworCQlQUk9QRVJU
WV9ERVNDUklQVE9SU184XzAgPSByZWFwUHJvcGVydHlMaXN0KHByb3BlcnR5TGlzdCk7CisJfQor
CisJLyoqCisJICogUmV0dXJucyBhIGxpc3Qgb2Ygc3RydWN0dXJhbCBwcm9wZXJ0eSBkZXNjcmlw
dG9ycyBmb3IgdGhpcyBub2RlIHR5cGUuCisJICogQ2xpZW50cyBtdXN0IG5vdCBtb2RpZnkgdGhl
IHJlc3VsdC4KKwkgKgorCSAqIEBwYXJhbSBhcGlMZXZlbCB0aGUgQVBJIGxldmVsOyBvbmUgb2Yg
dGhlIEFTVC5KTFMqIGNvbnN0YW50cworCSAqIEByZXR1cm4gYSBsaXN0IG9mIHByb3BlcnR5IGRl
c2NyaXB0b3JzIChlbGVtZW50IHR5cGU6CisJICoge0BsaW5rIFN0cnVjdHVyYWxQcm9wZXJ0eURl
c2NyaXB0b3J9KQorCSAqLworCXB1YmxpYyBzdGF0aWMgTGlzdCBwcm9wZXJ0eURlc2NyaXB0b3Jz
KGludCBhcGlMZXZlbCkgeworCQlyZXR1cm4gUFJPUEVSVFlfREVTQ1JJUFRPUlNfOF8wOworCX0K
KworCS8qKgorCSAqIFRoZSBleHByZXNzaW9uOyBkZWZhdWx0cyB0byBudWxsLgorCSAqLworCXBy
aXZhdGUgRXhwcmVzc2lvbiBleHByZXNzaW9uID0gbnVsbDsKKworCS8qKgorCSAqIFRoZSBtZXRo
b2QgbmFtZTsgbGF6aWx5IGluaXRpYWxpemVkOyBkZWZhdWx0cyB0byBhbiB1bnNwZWNpZmllZCwK
KwkgKiBsZWdhbCBKYXZhIG1ldGhvZCBuYW1lLgorCSAqLworCXByaXZhdGUgU2ltcGxlTmFtZSBt
ZXRob2ROYW1lID0gbnVsbDsKKworCS8qKgorCSAqIENyZWF0ZXMgYSBuZXcgQVNUIG5vZGUgZm9y
IGFuIEV4cHJlc3Npb25NZXRob2RSZWZlcmVuY2UgZGVjbGFyYXRpb24gb3duZWQKKwkgKiBieSB0
aGUgZ2l2ZW4gQVNULgorCSAqIDxwPgorCSAqIE4uQi4gVGhpcyBjb25zdHJ1Y3RvciBpcyBwYWNr
YWdlLXByaXZhdGU7IGFsbCBzdWJjbGFzc2VzIG11c3QgYmUKKwkgKiBkZWNsYXJlZCBpbiB0aGUg
c2FtZSBwYWNrYWdlOyBjbGllbnRzIGFyZSB1bmFibGUgdG8gZGVjbGFyZQorCSAqIGFkZGl0aW9u
YWwgc3ViY2xhc3Nlcy4KKwkgKiA8L3A+CisJICoKKwkgKiBAcGFyYW0gYXN0IHRoZSBBU1QgdGhh
dCBpcyB0byBvd24gdGhpcyBub2RlCisJICovCisJRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZShB
U1QgYXN0KSB7CisJCXN1cGVyKGFzdCk7CisJCXVuc3VwcG9ydGVkSW4yXzNfNCgpOworCX0KKwor
CS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQorCSAqIE1ldGhvZCBkZWNsYXJlZCBv
biBNZXRob2RSZWZlcmVuY2UuCisJICovCisJQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yIGlu
dGVybmFsVHlwZUFyZ3VtZW50czJQcm9wZXJ0eSgpIHsKKwkJcmV0dXJuIFRZUEVfQVJHVU1FTlRT
X1BST1BFUlRZOworCX0KKworCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQorCSAq
IE1ldGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAqLworCWZpbmFsIExpc3QgaW50ZXJuYWxT
dHJ1Y3R1cmFsUHJvcGVydGllc0ZvclR5cGUoaW50IGFwaUxldmVsKSB7CisJCXJldHVybiBwcm9w
ZXJ0eURlc2NyaXB0b3JzKGFwaUxldmVsKTsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9jIGZvciB0
aGlzIG1ldGhvZCkKKwkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8KKwlmaW5h
bCBBU1ROb2RlIGludGVybmFsR2V0U2V0Q2hpbGRQcm9wZXJ0eShDaGlsZFByb3BlcnR5RGVzY3Jp
cHRvciBwcm9wZXJ0eSwgYm9vbGVhbiBnZXQsIEFTVE5vZGUgY2hpbGQpIHsKKwkJaWYgKHByb3Bl
cnR5ID09IE5BTUVfUFJPUEVSVFkpIHsKKwkJCWlmIChnZXQpIHsKKwkJCQlyZXR1cm4gZ2V0TmFt
ZSgpOworCQkJfSBlbHNlIHsKKwkJCQlzZXROYW1lKChTaW1wbGVOYW1lKSBjaGlsZCk7CisJCQkJ
cmV0dXJuIG51bGw7CisJCQl9CisJCX0KKwkJaWYgKHByb3BlcnR5ID09IEVYUFJFU1NJT05fUFJP
UEVSVFkpIHsKKwkJCWlmIChnZXQpIHsKKwkJCQlyZXR1cm4gZ2V0RXhwcmVzc2lvbigpOworCQkJ
fSBlbHNlIHsKKwkJCQlzZXRFeHByZXNzaW9uKChFeHByZXNzaW9uKSBjaGlsZCk7CisJCQkJcmV0
dXJuIG51bGw7CisJCQl9CisJCX0KKwkJLy8gYWxsb3cgZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiB0
byBmbGFnIHRoZSBlcnJvcgorCQlyZXR1cm4gc3VwZXIuaW50ZXJuYWxHZXRTZXRDaGlsZFByb3Bl
cnR5KHByb3BlcnR5LCBnZXQsIGNoaWxkKTsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9jIGZvciB0
aGlzIG1ldGhvZCkKKwkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8KKwlmaW5h
bCBMaXN0IGludGVybmFsR2V0Q2hpbGRMaXN0UHJvcGVydHkoQ2hpbGRMaXN0UHJvcGVydHlEZXNj
cmlwdG9yIHByb3BlcnR5KSB7CisJCWlmIChwcm9wZXJ0eSA9PSBUWVBFX0FSR1VNRU5UU19QUk9Q
RVJUWSkgeworCQkJcmV0dXJuIHR5cGVBcmd1bWVudHMoKTsKKwkJfQorCQkvLyBhbGxvdyBkZWZh
dWx0IGltcGxlbWVudGF0aW9uIHRvIGZsYWcgdGhlIGVycm9yCisJCXJldHVybiBzdXBlci5pbnRl
cm5hbEdldENoaWxkTGlzdFByb3BlcnR5KHByb3BlcnR5KTsKKwl9CisKKwkvKiAob21pdCBqYXZh
ZG9jIGZvciB0aGlzIG1ldGhvZCkKKwkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkg
Ki8KKwlmaW5hbCBpbnQgZ2V0Tm9kZVR5cGUwKCkgeworCQlyZXR1cm4gRVhQUkVTU0lPTl9NRVRI
T0RfUkVGRVJFTkNFOworCX0KKworCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQor
CSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAqLworCUFTVE5vZGUgY2xvbmUwKEFT
VCB0YXJnZXQpIHsKKwkJRXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZSByZXN1bHQgPSBuZXcgRXhw
cmVzc2lvbk1ldGhvZFJlZmVyZW5jZSh0YXJnZXQpOworCQlyZXN1bHQuc2V0U291cmNlUmFuZ2Uo
Z2V0U3RhcnRQb3NpdGlvbigpLCBnZXRMZW5ndGgoKSk7CisJCXJlc3VsdC5zZXROYW1lKChTaW1w
bGVOYW1lKSBnZXROYW1lKCkuY2xvbmUodGFyZ2V0KSk7CisJCXJlc3VsdC5zZXRFeHByZXNzaW9u
KAorCQkJKEV4cHJlc3Npb24pIEFTVE5vZGUuY29weVN1YnRyZWUodGFyZ2V0LCBnZXRFeHByZXNz
aW9uKCkpKTsKKwkJcmVzdWx0LnR5cGVBcmd1bWVudHMoKS5hZGRBbGwoQVNUTm9kZS5jb3B5U3Vi
dHJlZXModGFyZ2V0LCB0eXBlQXJndW1lbnRzKCkpKTsKKwkJcmV0dXJuIHJlc3VsdDsKKwl9CisK
KwkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKKwkgKiBNZXRob2QgZGVjbGFyZWQg
b24gQVNUTm9kZS4KKwkgKi8KKwlmaW5hbCBib29sZWFuIHN1YnRyZWVNYXRjaDAoQVNUTWF0Y2hl
ciBtYXRjaGVyLCBPYmplY3Qgb3RoZXIpIHsKKwkJLy8gZGlzcGF0Y2ggdG8gY29ycmVjdCBvdmVy
bG9hZGVkIG1hdGNoIG1ldGhvZAorCQlyZXR1cm4gbWF0Y2hlci5tYXRjaCh0aGlzLCBvdGhlcik7
CisJfQorCisJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCisJICogTWV0aG9kIGRl
Y2xhcmVkIG9uIEFTVE5vZGUuCisJICovCisJdm9pZCBhY2NlcHQwKEFTVFZpc2l0b3IgdmlzaXRv
cikgeworCQlib29sZWFuIHZpc2l0Q2hpbGRyZW4gPSB2aXNpdG9yLnZpc2l0KHRoaXMpOworCQlp
ZiAodmlzaXRDaGlsZHJlbikgeworCQkJLy8gdmlzaXQgY2hpbGRyZW4gaW4gbm9ybWFsIGxlZnQg
dG8gcmlnaHQgcmVhZGluZyBvcmRlcgorCQkJYWNjZXB0Q2hpbGQodmlzaXRvciwgZ2V0RXhwcmVz
c2lvbigpKTsKKwkJCWFjY2VwdENoaWxkcmVuKHZpc2l0b3IsIHRoaXMudHlwZUFyZ3VtZW50cyk7
CisJCQlhY2NlcHRDaGlsZCh2aXNpdG9yLCBnZXROYW1lKCkpOworCQl9CisJCXZpc2l0b3IuZW5k
VmlzaXQodGhpcyk7CisJfQorCisJLyoqCisJICogUmV0dXJucyB0aGUgZXhwcmVzc2lvbiBvZiB0
aGlzIGV4cHJlc3Npb24gbWV0aG9kIHJlZmVyZW5jZSBleHByZXNzaW9uCisJICoKKwkgKiBAcmV0
dXJuIHRoZSBleHByZXNzaW9uIG5vZGUKKwkgKi8KKwlwdWJsaWMgRXhwcmVzc2lvbiBnZXRFeHBy
ZXNzaW9uKCkgeworCQlyZXR1cm4gdGhpcy5leHByZXNzaW9uOworCX0KKworCS8qKgorCSAqIFNl
dHMgdGhlIGV4cHJlc3Npb24gb2YgdGhpcyBleHByZXNzaW9uIG1ldGhvZCByZWZlcmVuY2UuCisJ
ICoKKwkgKiBAcGFyYW0gZXhwcmVzc2lvbiB0aGUgZXhwcmVzc2lvbiBub2RlCisJICogQGV4Y2Vw
dGlvbiBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24gaWY6CisJICogPHVsPgorCSAqIDxsaT50aGUg
bm9kZSBiZWxvbmdzIHRvIGEgZGlmZmVyZW50IEFTVDwvbGk+CisJICogPGxpPnRoZSBub2RlIGFs
cmVhZHkgaGFzIGEgcGFyZW50PC9saT4KKwkgKiA8bGk+YSBjeWNsZSBpbiB3b3VsZCBiZSBjcmVh
dGVkPC9saT4KKwkgKiA8L3VsPgorCSAqLworCXB1YmxpYyB2b2lkIHNldEV4cHJlc3Npb24oRXhw
cmVzc2lvbiBleHByZXNzaW9uKSB7CisJCWlmIChleHByZXNzaW9uID09IG51bGwpIHsKKwkJCXRo
cm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oKTsKKwkJfQorCQlBU1ROb2RlIG9sZENo
aWxkID0gdGhpcy5leHByZXNzaW9uOworCQlwcmVSZXBsYWNlQ2hpbGQob2xkQ2hpbGQsIGV4cHJl
c3Npb24sIEVYUFJFU1NJT05fUFJPUEVSVFkpOworCQl0aGlzLmV4cHJlc3Npb24gPSBleHByZXNz
aW9uOworCQlwb3N0UmVwbGFjZUNoaWxkKG9sZENoaWxkLCBleHByZXNzaW9uLCBFWFBSRVNTSU9O
X1BST1BFUlRZKTsKKwl9CisKKwkvKioKKwkgKiBSZXR1cm5zIHRoZSBsaXZlIG9yZGVyZWQgbGlz
dCBvZiB0eXBlIGFyZ3VtZW50cyBvZiB0aGlzIGV4cHJlc3Npb24gbWV0aG9kIHJlZmVyZW5jZQor
CSAqCisJICogQHJldHVybiB0aGUgbGl2ZSBsaXN0IG9mIHR5cGUgYXJndW1lbnRzCisJICogICAg
KGVsZW1lbnQgdHlwZToge0BsaW5rIFR5cGV9KQorCSAqLworCXB1YmxpYyBMaXN0IHR5cGVBcmd1
bWVudHMoKSB7CisJCXJldHVybiB0aGlzLnR5cGVBcmd1bWVudHM7CisJfQorCisJLyoqCisJICog
UmV0dXJucyB0aGUgbmFtZSBvZiB0aGUgbWV0aG9kIHJlZmVyZW5jZWQgaW4gdGhpcyBleHByZXNz
aW9uLgorCSAqCisJICogQHJldHVybiB0aGUgbWV0aG9kIG5hbWUgbm9kZQorCSAqLworCXB1Ymxp
YyBTaW1wbGVOYW1lIGdldE5hbWUoKSB7CisJCWlmICh0aGlzLm1ldGhvZE5hbWUgPT0gbnVsbCkg
eworCQkJLy8gbGF6eSBpbml0IG11c3QgYmUgdGhyZWFkLXNhZmUgZm9yIHJlYWRlcnMKKwkJCXN5
bmNocm9uaXplZCAodGhpcykgeworCQkJCWlmICh0aGlzLm1ldGhvZE5hbWUgPT0gbnVsbCkgewor
CQkJCQlwcmVMYXp5SW5pdCgpOworCQkJCQl0aGlzLm1ldGhvZE5hbWUgPSBuZXcgU2ltcGxlTmFt
ZSh0aGlzLmFzdCk7CisJCQkJCXBvc3RMYXp5SW5pdCh0aGlzLm1ldGhvZE5hbWUsIE5BTUVfUFJP
UEVSVFkpOworCQkJCX0KKwkJCX0KKwkJfQorCQlyZXR1cm4gdGhpcy5tZXRob2ROYW1lOworCX0K
KworCS8qKgorCSAqIFNldHMgdGhlIG5hbWUgb2YgdGhlIG1ldGhvZCByZWZlcmVuY2VkIGluIHRo
aXMgZXhwcmVzc2lvbiB0byB0aGUKKwkgKiBnaXZlbiBuYW1lLgorCSAqCisJICogQHBhcmFtIG5h
bWUgdGhlIG5ldyBtZXRob2QgbmFtZQorCSAqIEBleGNlcHRpb24gSWxsZWdhbEFyZ3VtZW50RXhj
ZXB0aW9uIGlmOgorCSAqIDx1bD4KKwkgKiA8bGk+dGhlIG5vZGUgYmVsb25ncyB0byBhIGRpZmZl
cmVudCBBU1Q8L2xpPgorCSAqIDxsaT50aGUgbm9kZSBhbHJlYWR5IGhhcyBhIHBhcmVudDwvbGk+
CisJICogPC91bD4KKwkgKi8KKwlwdWJsaWMgdm9pZCBzZXROYW1lKFNpbXBsZU5hbWUgbmFtZSkg
eworCQlpZiAobmFtZSA9PSBudWxsKSB7CisJCQl0aHJvdyBuZXcgSWxsZWdhbEFyZ3VtZW50RXhj
ZXB0aW9uKCk7CisJCX0KKwkJQVNUTm9kZSBvbGRDaGlsZCA9IHRoaXMubWV0aG9kTmFtZTsKKwkJ
cHJlUmVwbGFjZUNoaWxkKG9sZENoaWxkLCBuYW1lLCBOQU1FX1BST1BFUlRZKTsKKwkJdGhpcy5t
ZXRob2ROYW1lID0gbmFtZTsKKwkJcG9zdFJlcGxhY2VDaGlsZChvbGRDaGlsZCwgbmFtZSwgTkFN
RV9QUk9QRVJUWSk7CisJfQorCisJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCisJ
ICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCisJICovCisJaW50IG1lbVNpemUoKSB7CisJ
CS8vIHRyZWF0IENvZGUgYXMgZnJlZQorCQlyZXR1cm4gQkFTRV9OT0RFX1NJWkUgKyAzICogNDsK
Kwl9CisKKwkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKKwkgKiBNZXRob2QgZGVj
bGFyZWQgb24gQVNUTm9kZS4KKwkgKi8KKwlpbnQgdHJlZVNpemUoKSB7CisJCXJldHVybgorCQkJ
bWVtU2l6ZSgpCisJCQkrICh0aGlzLmV4cHJlc3Npb24gPT0gbnVsbCA/IDAgOiBnZXRFeHByZXNz
aW9uKCkudHJlZVNpemUoKSkKKwkJCSsgKHRoaXMudHlwZUFyZ3VtZW50cyA9PSBudWxsID8gMCA6
IHRoaXMudHlwZUFyZ3VtZW50cy5saXN0U2l6ZSgpKQorCQkJKyAodGhpcy5tZXRob2ROYW1lID09
IG51bGwgPyAwIDogZ2V0TmFtZSgpLnRyZWVTaXplKCkpOworCX0KK30KXCBObyBuZXdsaW5lIGF0
IGVuZCBvZiBmaWxlCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2NvcmUvZG9tL01ldGhvZFJlZmVyZW5jZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9NZXRob2RSZWZlcmVuY2UuamF2YQpu
ZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwLi44OWMyYmQ5Ci0tLSAvZGV2L251bGwK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9N
ZXRob2RSZWZlcmVuY2UuamF2YQpAQCAtMCwwICsxLDExMCBAQAorLyoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioKKyAqIENvcHlyaWdodCAoYykgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
KyAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWlu
ZyBtYXRlcmlhbHMKKyAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhl
IEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAorICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBk
aXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKKyAqIGh0dHA6Ly93d3cuZWNsaXBzZS5v
cmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBv
ZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQor
ICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0
aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29t
cGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKiAKKyAqIENvbnRy
aWJ1dG9yczoKKyAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVt
ZW50YXRpb24KKyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLworcGFja2FnZSBvcmcuZWNsaXBzZS5q
ZHQuY29yZS5kb207CisKK2ltcG9ydCBqYXZhLnV0aWwuTGlzdDsKKworLyoqCisgKiBNZXRob2RS
ZWZlcmVuY2UgKEFkZGVkIGluIEpMUzQgQVBJKSBBYnN0cmFjdCBiYXNlIGNsYXNzIG9mIGFsbCBB
U1Qgbm9kZSB0eXBlcyB0aGF0IGRlY2xhcmUgYSByZWZlcmVuY2UgZXhwcmVzc2lvbi4KKyAqIDxw
PgorICogPHByZT4KKyAqIE1ldGhvZFJlZmVyZW5jZToKKyAqICAgIENyZWF0aW9uUmVmZXJlbmNl
CisgKiAgICBFeHByZXNzaW9uTWV0aG9kUmVmZXJlbmNlCisgKiAgICBTdXBlck1ldGhvZFJlZmVy
ZW5jZQorICogICAgVHlwZU1ldGhvZFJlZmVyZW5jZQorICogPC9wcmU+CisgKiA8L3A+CisgKgor
ICogQHNlZSBDcmVhdGlvblJlZmVyZW5jZQorICogQHNlZSBFeHByZXNzaW9uTWV0aG9kUmVmZXJl
bmNlCisgKiBAc2VlIFN1cGVyTWV0aG9kUmVmZXJlbmNlCisgKiBAc2VlIFR5cGVNZXRob2RSZWZl
cmVuY2UKKyAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAorICovCitwdWJsaWMgYWJzdHJhY3QgY2xh
c3MgTWV0aG9kUmVmZXJlbmNlIGV4dGVuZHMgRXhwcmVzc2lvbiB7CisKKwkvKioKKwkgKiBUaGUg
dHlwZSBhcmd1bWVudHMgKGVsZW1lbnQgdHlwZToge0BsaW5rIFR5cGV9KS4KKwkgKiBEZWZhdWx0
cyB0byBhbiBlbXB0eSBsaXN0LiAoc2VlIGNvbnN0cnVjdG9yKQorCSAqLworCUFTVE5vZGUuTm9k
ZUxpc3QgdHlwZUFyZ3VtZW50cyA9IG51bGw7CisKKwkvKioKKwkgKiBDcmVhdGVzIGFuZCByZXR1
cm5zIGEgc3RydWN0dXJhbCBwcm9wZXJ0eSBkZXNjcmlwdG9yIGZvciB0aGUgInR5cGVBcmd1bWVu
dHMiIAorCSAqIHByb3BlcnR5IGRlY2xhcmVkIG9uIHRoZSBnaXZlbiBjb25jcmV0ZSBub2RlIHR5
cGUgKGNoaWxkIHR5cGU6IHtAbGluayBUeXBlfSkuCisJICogCisJICogQHJldHVybiB0aGUgcHJv
cGVydHkgZGVzY3JpcHRvcgorCSAqLworCXN0YXRpYyBmaW5hbCBDaGlsZExpc3RQcm9wZXJ0eURl
c2NyaXB0b3IgaW50ZXJuYWxUeXBlQXJndW1lbnRzRmFjdG9yeShDbGFzcyBub2RlQ2xhc3MpIHsK
KwkJcmV0dXJuIG5ldyBDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3Iobm9kZUNsYXNzLCAidHlw
ZUFyZ3VtZW50cyIsIFR5cGUuY2xhc3MsIE5PX0NZQ0xFX1JJU0spOyAvLyROT04tTkxTLTEkCisJ
fQorCisJLyoqCisJICogUmV0dXJucyB0aGUgc3RydWN0dXJhbCBwcm9wZXJ0eSBkZXNjcmlwdG9y
IGZvciB0aGUgInR5cGVBcmd1bWVudHMiIHByb3BlcnR5CisJICogb2YgdGhpcyBub2RlIChlbGVt
ZW50IHR5cGU6IHtAbGluayBUeXBlfSkuCisJICoKKwkgKiBAcmV0dXJuIHRoZSBwcm9wZXJ0eSBk
ZXNjcmlwdG9yCisJICovCisJYWJzdHJhY3QgQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yIGlu
dGVybmFsVHlwZUFyZ3VtZW50czJQcm9wZXJ0eSgpOworCisJLyoqCisJICogUmV0dXJucyB0aGUg
c3RydWN0dXJhbCBwcm9wZXJ0eSBkZXNjcmlwdG9yIGZvciB0aGUgInR5cGVBcmd1bWVudHMiIHBy
b3BlcnR5CisJICogb2YgdGhpcyBub2RlIChlbGVtZW50IHR5cGU6IHtAbGluayBUeXBlfSkuCisJ
ICoKKwkgKiBAcmV0dXJuIHRoZSBwcm9wZXJ0eSBkZXNjcmlwdG9yCisJICovCisJcHVibGljIGZp
bmFsIENoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBnZXRUeXBlQXJndW1lbnRzUHJvcGVydHko
KSB7CisJCXJldHVybiBpbnRlcm5hbFR5cGVBcmd1bWVudHMyUHJvcGVydHkoKTsKKwl9CisKKwkv
KioKKwkgKiBDcmVhdGVzIGEgbmV3IEFTVCBub2RlIGZvciBhIG1ldGhvZCByZWZlcmVuY2Ugb3du
ZWQgYnkgdGhlIGdpdmVuIEFTVC4KKwkgKiA8cD4KKwkgKiBOLkIuIFRoaXMgY29uc3RydWN0b3Ig
aXMgcGFja2FnZS1wcml2YXRlLgorCSAqIDwvcD4KKwkgKgorCSAqIEBwYXJhbSBhc3QgdGhlIEFT
VCB0aGF0IGlzIHRvIG93biB0aGlzIG5vZGUKKwkgKi8KKwlNZXRob2RSZWZlcmVuY2UoQVNUIGFz
dCkgeworCQlzdXBlcihhc3QpOworCQl0aGlzLnR5cGVBcmd1bWVudHMgPSBuZXcgQVNUTm9kZS5O
b2RlTGlzdChnZXRUeXBlQXJndW1lbnRzUHJvcGVydHkoKSk7CisJfQorCisJLyoqCisJICogUmV0
dXJucyB0aGUgbGl2ZSBvcmRlcmVkIGxpc3Qgb2YgdHlwZSBhcmd1bWVudHMgb2YgdGhpcyBNZXRo
b2QgUmVmZXJlbmNlLgorCSAqCisJICogQHJldHVybiB0aGUgbGl2ZSBsaXN0IG9mIHR5cGUgYXJn
dW1lbnRzCisJICogICAgKGVsZW1lbnQgdHlwZToge0BsaW5rIFR5cGV9KQorCSAqLworCXB1Ymxp
YyBMaXN0IHR5cGVBcmd1bWVudHMoKSB7CisJCXJldHVybiB0aGlzLnR5cGVBcmd1bWVudHM7CisJ
fQorCisJLyoqCisJICogUmVzb2x2ZXMgYW5kIHJldHVybnMgdGhlIGJpbmRpbmcgZm9yIHRoZSBt
ZXRob2QgcmVmZXJlbmNlIGJ5IHRoaXMKKwkgKiBleHByZXNzaW9uLgorCSAqIDxwPgorCSAqIE5v
dGUgdGhhdCBiaW5kaW5ncyBhcmUgZ2VuZXJhbGx5IHVuYXZhaWxhYmxlIHVubGVzcyByZXF1ZXN0
ZWQgd2hlbiB0aGUKKwkgKiBBU1QgaXMgYmVpbmcgYnVpbHQuCisJICogPC9wPgorCSAqCisJICog
QHJldHVybiB0aGUgbWV0aG9kIGJpbmRpbmcsIG9yIDxjb2RlPm51bGw8L2NvZGU+IGlmIHRoZSBi
aW5kaW5nIGNhbm5vdAorCSAqIGJlIHJlc29sdmVkCisJICovCisJcHVibGljIElNZXRob2RCaW5k
aW5nIHJlc29sdmVNZXRob2RCaW5kaW5nKCkgeworCQlyZXR1cm4gdGhpcy5hc3QuZ2V0QmluZGlu
Z1Jlc29sdmVyKCkucmVzb2x2ZU1ldGhvZCh0aGlzKTsKKwl9Cit9CmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1N1cGVyTWV0aG9k
UmVmZXJlbmNlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0
L2NvcmUvZG9tL1N1cGVyTWV0aG9kUmVmZXJlbmNlLmphdmEKbmV3IGZpbGUgbW9kZSAxMDA2NDQK
aW5kZXggMDAwMDAwMC4uMzFkZGI5ZAotLS0gL2Rldi9udWxsCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vU3VwZXJNZXRob2RSZWZlcmVuY2Uu
amF2YQpAQCAtMCwwICsxLDI5MSBAQAorLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKyAqIENvcHly
aWdodCAoYykgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIEFsbCByaWdodHMg
cmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKKyAq
IGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGlj
IExpY2Vuc2UgdjEuMAorICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFu
ZCBpcyBhdmFpbGFibGUgYXQKKyAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYx
MC5odG1sCisgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFm
dCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFBy
b2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0
aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFu
eSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKiAKKyAqIENvbnRyaWJ1dG9yczoKKyAqICAg
ICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KKyAqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqLworcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb207CisK
K2ltcG9ydCBqYXZhLnV0aWwuQXJyYXlMaXN0OworaW1wb3J0IGphdmEudXRpbC5MaXN0OworCisv
KioKKyAqIFN1cGVyTWV0aG9kUmVmZXJlbmNlIChBZGRlZCBpbiBKTFM0IEFQSSkgQVNUIE5vZGUg
VHlwZS4KKyAqIAorICogPHByZT4KKyAqIFN1cGVyTWV0aG9kUmVmZXJlbmNlOgorICogICAgIFsg
Q2xhc3NOYW1lIDxiPi48L2I+IF0gPGI+c3VwZXI8L2I+IDxiPjo6PC9iPgorICogICAgICAgICBb
IDxiPiZsdDs8L2I+IFR5cGUgeyA8Yj4sPC9iPiBUeXBlIH0gPGI+Jmd0OzwvYj4gXQorICogICAg
ICAgICBJZGVudGlmaWVyCisgKiA8L3ByZT4KKyAqIAorICogQHNpbmNlIDMuOSBCRVRBX0pBVkE4
CisgKiBAbm9pbnN0YW50aWF0ZSBUaGlzIGNsYXNzIGlzIG5vdCBpbnRlbmRlZCB0byBiZSBpbnN0
YW50aWF0ZWQgYnkgY2xpZW50cworICovCitwdWJsaWMgY2xhc3MgU3VwZXJNZXRob2RSZWZlcmVu
Y2UgZXh0ZW5kcyBNZXRob2RSZWZlcmVuY2UgeworCisJLyoqCisJICogVGhlICJxdWFsaWZpZXIi
IHN0cnVjdHVyYWwgcHJvcGVydHkgb2YgdGhpcyBub2RlIHR5cGUgKGNoaWxkIHR5cGU6IHtAbGlu
ayBOYW1lfSkuCisJICovCisJcHVibGljIHN0YXRpYyBmaW5hbCBDaGlsZFByb3BlcnR5RGVzY3Jp
cHRvciBRVUFMSUZJRVJfUFJPUEVSVFkgPQorCQluZXcgQ2hpbGRQcm9wZXJ0eURlc2NyaXB0b3Io
U3VwZXJNZXRob2RSZWZlcmVuY2UuY2xhc3MsICJxdWFsaWZpZXIiLCBOYW1lLmNsYXNzLCBPUFRJ
T05BTCwgTk9fQ1lDTEVfUklTSyk7IC8vJE5PTi1OTFMtMSQKKworCS8qKgorCSAqIFRoZSAidHlw
ZUFyZ3VtZW50cyIgc3RydWN0dXJhbCBwcm9wZXJ0eSBvZiB0aGlzIG5vZGUgdHlwZSAoZWxlbWVu
dCB0eXBlOiB7QGxpbmsgVHlwZX0pIAorCSAqLworCXB1YmxpYyBzdGF0aWMgZmluYWwgQ2hpbGRM
aXN0UHJvcGVydHlEZXNjcmlwdG9yIFRZUEVfQVJHVU1FTlRTX1BST1BFUlRZID0KKwkJaW50ZXJu
YWxUeXBlQXJndW1lbnRzRmFjdG9yeShTdXBlck1ldGhvZFJlZmVyZW5jZS5jbGFzcyk7CisKKwkv
KioKKwkgKiBUaGUgIm5hbWUiIHN0cnVjdHVyYWwgcHJvcGVydHkgb2YgdGhpcyBub2RlIHR5cGUg
KGNoaWxkIHR5cGU6IHtAbGluayBTaW1wbGVOYW1lfSkuCisJICovCisJcHVibGljIHN0YXRpYyBm
aW5hbCBDaGlsZFByb3BlcnR5RGVzY3JpcHRvciBOQU1FX1BST1BFUlRZID0KKwkJbmV3IENoaWxk
UHJvcGVydHlEZXNjcmlwdG9yKFN1cGVyTWV0aG9kUmVmZXJlbmNlLmNsYXNzLCAibmFtZSIsIFNp
bXBsZU5hbWUuY2xhc3MsIE1BTkRBVE9SWSwgTk9fQ1lDTEVfUklTSyk7IC8vJE5PTi1OTFMtMSQK
KworCS8qKgorCSAqIEEgbGlzdCBvZiBwcm9wZXJ0eSBkZXNjcmlwdG9ycyAoZWxlbWVudCB0eXBl
OgorCSAqIHtAbGluayBTdHJ1Y3R1cmFsUHJvcGVydHlEZXNjcmlwdG9yfSksCisJICogb3IgbnVs
bCBpZiB1bmluaXRpYWxpemVkLgorCSAqLworCXByaXZhdGUgc3RhdGljIGZpbmFsIExpc3QgUFJP
UEVSVFlfREVTQ1JJUFRPUlNfOF8wOworCisJc3RhdGljIHsKKwkJTGlzdCBwcm9wZXJ0eUxpc3Qg
PSBuZXcgQXJyYXlMaXN0KDQpOworCQljcmVhdGVQcm9wZXJ0eUxpc3QoU3VwZXJNZXRob2RSZWZl
cmVuY2UuY2xhc3MsIHByb3BlcnR5TGlzdCk7CisJCWFkZFByb3BlcnR5KFFVQUxJRklFUl9QUk9Q
RVJUWSwgcHJvcGVydHlMaXN0KTsKKwkJYWRkUHJvcGVydHkoVFlQRV9BUkdVTUVOVFNfUFJPUEVS
VFksIHByb3BlcnR5TGlzdCk7CisJCWFkZFByb3BlcnR5KE5BTUVfUFJPUEVSVFksIHByb3BlcnR5
TGlzdCk7CisJCVBST1BFUlRZX0RFU0NSSVBUT1JTXzhfMCA9IHJlYXBQcm9wZXJ0eUxpc3QocHJv
cGVydHlMaXN0KTsKKwl9CisKKwkvKioKKwkgKiBSZXR1cm5zIGEgbGlzdCBvZiBzdHJ1Y3R1cmFs
IHByb3BlcnR5IGRlc2NyaXB0b3JzIGZvciB0aGlzIG5vZGUgdHlwZS4KKwkgKiBDbGllbnRzIG11
c3Qgbm90IG1vZGlmeSB0aGUgcmVzdWx0LgorCSAqCisJICogQHBhcmFtIGFwaUxldmVsIHRoZSBB
UEkgbGV2ZWw7IG9uZSBvZiB0aGUKKwkgKiA8Y29kZT5BU1QuSkxTKjwvY29kZT4gY29uc3RhbnRz
CisJICogQHJldHVybiBhIGxpc3Qgb2YgcHJvcGVydHkgZGVzY3JpcHRvcnMgKGVsZW1lbnQgdHlw
ZToKKwkgKiB7QGxpbmsgU3RydWN0dXJhbFByb3BlcnR5RGVzY3JpcHRvcn0pCisJICovCisJcHVi
bGljIHN0YXRpYyBMaXN0IHByb3BlcnR5RGVzY3JpcHRvcnMoaW50IGFwaUxldmVsKSB7CisJCXJl
dHVybiBQUk9QRVJUWV9ERVNDUklQVE9SU184XzA7CisJfQorCisJLyoqCisJICogVGhlIG9wdGlv
bmFsIHF1YWxpZmllcjsgPGNvZGU+bnVsbDwvY29kZT4gZm9yIG5vbmU7IGRlZmF1bHRzIHRvIG5v
bmUuCisJICovCisJcHJpdmF0ZSBOYW1lIG9wdGlvbmFsUXVhbGlmaWVyID0gbnVsbDsKKworCS8q
KgorCSAqIFRoZSBtZXRob2QgbmFtZTsgbGF6aWx5IGluaXRpYWxpemVkOyBkZWZhdWx0cyB0byBh
IHVuc3BlY2lmaWVkLAorCSAqIGxlZ2FsIEphdmEgbWV0aG9kIG5hbWUuCisJICovCisJcHJpdmF0
ZSBTaW1wbGVOYW1lIG1ldGhvZE5hbWUgPSBudWxsOworCS8qKgorCSAqIENyZWF0ZXMgYSBuZXcg
QVNUICBub2RlIGZvciBhIHN1cGVyIG1ldGhvZCByZWZlcmVuY2Ugb3duZWQKKwkgKiBieSB0aGUg
Z2l2ZW4gQVNULiBCeSBkZWZhdWx0LCB0aGVyZSBpcyBubyBxdWFsaWZpZXIuCisJICogPHA+CisJ
ICogTi5CLiBUaGlzIGNvbnN0cnVjdG9yIGlzIHBhY2thZ2UtcHJpdmF0ZTsgYWxsIHN1YmNsYXNz
ZXMgbXVzdCBiZQorCSAqIGRlY2xhcmVkIGluIHRoZSBzYW1lIHBhY2thZ2U7IGNsaWVudHMgYXJl
IHVuYWJsZSB0byBkZWNsYXJlCisJICogYWRkaXRpb25hbCBzdWJjbGFzc2VzLgorCSAqIDwvcD4K
KwkgKgorCSAqIEBwYXJhbSBhc3QgdGhlIEFTVCB0aGF0IGlzIHRvIG93biB0aGlzIG5vZGUKKwkg
Ki8KKwlTdXBlck1ldGhvZFJlZmVyZW5jZShBU1QgYXN0KSB7CisJCXN1cGVyKGFzdCk7CisJCXVu
c3VwcG9ydGVkSW4yXzNfNCgpOworCX0KKworCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0
aG9kKQorCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBNZXRob2RSZWZlcmVuY2UuCisJICovCisJQ2hp
bGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yIGludGVybmFsVHlwZUFyZ3VtZW50czJQcm9wZXJ0eSgp
IHsKKwkJcmV0dXJuIFRZUEVfQVJHVU1FTlRTX1BST1BFUlRZOworCX0KKworCUxpc3QgaW50ZXJu
YWxTdHJ1Y3R1cmFsUHJvcGVydGllc0ZvclR5cGUoaW50IGFwaUxldmVsKSB7CisJCXJldHVybiBw
cm9wZXJ0eURlc2NyaXB0b3JzKGFwaUxldmVsKTsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9jIGZv
ciB0aGlzIG1ldGhvZCkKKwkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8KKwlm
aW5hbCBBU1ROb2RlIGludGVybmFsR2V0U2V0Q2hpbGRQcm9wZXJ0eShDaGlsZFByb3BlcnR5RGVz
Y3JpcHRvciBwcm9wZXJ0eSwgYm9vbGVhbiBnZXQsIEFTVE5vZGUgY2hpbGQpIHsKKwkJaWYgKHBy
b3BlcnR5ID09IFFVQUxJRklFUl9QUk9QRVJUWSkgeworCQkJaWYgKGdldCkgeworCQkJCXJldHVy
biBnZXRRdWFsaWZpZXIoKTsKKwkJCX0gZWxzZSB7CisJCQkJc2V0UXVhbGlmaWVyKChOYW1lKSBj
aGlsZCk7CisJCQkJcmV0dXJuIG51bGw7CisJCQl9CisJCX0KKwkJaWYgKHByb3BlcnR5ID09IE5B
TUVfUFJPUEVSVFkpIHsKKwkJCWlmIChnZXQpIHsKKwkJCQlyZXR1cm4gZ2V0TmFtZSgpOworCQkJ
fSBlbHNlIHsKKwkJCQlzZXROYW1lKChTaW1wbGVOYW1lKSBjaGlsZCk7CisJCQkJcmV0dXJuIG51
bGw7CisJCQl9CisJCX0KKwkJLy8gYWxsb3cgZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiB0byBmbGFn
IHRoZSBlcnJvcgorCQlyZXR1cm4gc3VwZXIuaW50ZXJuYWxHZXRTZXRDaGlsZFByb3BlcnR5KHBy
b3BlcnR5LCBnZXQsIGNoaWxkKTsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1l
dGhvZCkKKwkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8KKwlmaW5hbCBMaXN0
IGludGVybmFsR2V0Q2hpbGRMaXN0UHJvcGVydHkoQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9y
IHByb3BlcnR5KSB7CisJCWlmIChwcm9wZXJ0eSA9PSBUWVBFX0FSR1VNRU5UU19QUk9QRVJUWSkg
eworCQkJcmV0dXJuIHR5cGVBcmd1bWVudHMoKTsKKwkJfQorCQkvLyBhbGxvdyBkZWZhdWx0IGlt
cGxlbWVudGF0aW9uIHRvIGZsYWcgdGhlIGVycm9yCisJCXJldHVybiBzdXBlci5pbnRlcm5hbEdl
dENoaWxkTGlzdFByb3BlcnR5KHByb3BlcnR5KTsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9jIGZv
ciB0aGlzIG1ldGhvZCkKKwkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8KKwlm
aW5hbCBpbnQgZ2V0Tm9kZVR5cGUwKCkgeworCQlyZXR1cm4gU1VQRVJfTUVUSE9EX1JFRkVSRU5D
RTsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKKwkgKiBNZXRob2Qg
ZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8KKwlBU1ROb2RlIGNsb25lMChBU1QgdGFyZ2V0KSB7
CisJCVN1cGVyTWV0aG9kUmVmZXJlbmNlIHJlc3VsdCA9IG5ldyBTdXBlck1ldGhvZFJlZmVyZW5j
ZSh0YXJnZXQpOworCQlyZXN1bHQuc2V0U291cmNlUmFuZ2UoZ2V0U3RhcnRQb3NpdGlvbigpLCBn
ZXRMZW5ndGgoKSk7CisJCXJlc3VsdC5zZXROYW1lKChTaW1wbGVOYW1lKSBnZXROYW1lKCkuY2xv
bmUodGFyZ2V0KSk7CisJCXJlc3VsdC5zZXRRdWFsaWZpZXIoKE5hbWUpIEFTVE5vZGUuY29weVN1
YnRyZWUodGFyZ2V0LCBnZXRRdWFsaWZpZXIoKSkpOworCQlyZXN1bHQudHlwZUFyZ3VtZW50cygp
LmFkZEFsbChBU1ROb2RlLmNvcHlTdWJ0cmVlcyh0YXJnZXQsIHR5cGVBcmd1bWVudHMoKSkpOwor
CQlyZXR1cm4gcmVzdWx0OworCX0KKworCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9k
KQorCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAqLworCWZpbmFsIGJvb2xlYW4g
c3VidHJlZU1hdGNoMChBU1RNYXRjaGVyIG1hdGNoZXIsIE9iamVjdCBvdGhlcikgeworCQkvLyBk
aXNwYXRjaCB0byBjb3JyZWN0IG92ZXJsb2FkZWQgbWF0Y2ggbWV0aG9kCisJCXJldHVybiBtYXRj
aGVyLm1hdGNoKHRoaXMsIG90aGVyKTsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlz
IG1ldGhvZCkKKwkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8KKwl2b2lkIGFj
Y2VwdDAoQVNUVmlzaXRvciB2aXNpdG9yKSB7CisJCWJvb2xlYW4gdmlzaXRDaGlsZHJlbiA9IHZp
c2l0b3IudmlzaXQodGhpcyk7CisJCWlmICh2aXNpdENoaWxkcmVuKSB7CisJCQkvLyB2aXNpdCBj
aGlsZHJlbiBpbiBub3JtYWwgbGVmdCB0byByaWdodCByZWFkaW5nIG9yZGVyCisJCQlhY2NlcHRD
aGlsZCh2aXNpdG9yLCBnZXRRdWFsaWZpZXIoKSk7CisJCQlhY2NlcHRDaGlsZHJlbih2aXNpdG9y
LCB0aGlzLnR5cGVBcmd1bWVudHMpOworCQkJYWNjZXB0Q2hpbGQodmlzaXRvciwgZ2V0TmFtZSgp
KTsKKwkJfQorCQl2aXNpdG9yLmVuZFZpc2l0KHRoaXMpOworCX0KKworCS8qKgorCSAqIFJldHVy
bnMgdGhlIHF1YWxpZmllciBvZiB0aGlzICJzdXBlciIgbWV0aG9kIHJlZmVyZW5jZSwgb3IKKwkg
KiA8Y29kZT5udWxsPC9jb2RlPiBpZiB0aGVyZSBpcyBub25lLgorCSAqCisJICogQHJldHVybiB0
aGUgcXVhbGlmaWVyIG5hbWUgbm9kZSwgb3IgPGNvZGU+bnVsbDwvY29kZT4gaWYgdGhlcmUgaXMg
bm9uZQorCSAqLworCXB1YmxpYyBOYW1lIGdldFF1YWxpZmllcigpIHsKKwkJcmV0dXJuIHRoaXMu
b3B0aW9uYWxRdWFsaWZpZXI7CisJfQorCisJLyoqCisJICogU2V0cyB0aGUgcXVhbGlmaWVyIG9m
IHRoaXMgInN1cGVyIiBtZXRob2QgcmVmZXJlbmNlIGV4cHJlc3Npb24uCisJICoKKwkgKiBAcGFy
YW0gbmFtZSB0aGUgcXVhbGlmaWVyIG5hbWUgbm9kZSwgb3IgPGNvZGU+bnVsbDwvY29kZT4gaWYK
KwkgKiAgICB0aGVyZSBpcyBub25lCisJICogQGV4Y2VwdGlvbiBJbGxlZ2FsQXJndW1lbnRFeGNl
cHRpb24gaWY6CisJICogPHVsPgorCSAqIDxsaT50aGUgbm9kZSBiZWxvbmdzIHRvIGEgZGlmZmVy
ZW50IEFTVDwvbGk+CisJICogPGxpPnRoZSBub2RlIGFscmVhZHkgaGFzIGEgcGFyZW50PC9saT4K
KwkgKiA8L3VsPgorCSAqLworCXB1YmxpYyB2b2lkIHNldFF1YWxpZmllcihOYW1lIG5hbWUpIHsK
KwkJQVNUTm9kZSBvbGRDaGlsZCA9IHRoaXMub3B0aW9uYWxRdWFsaWZpZXI7CisJCXByZVJlcGxh
Y2VDaGlsZChvbGRDaGlsZCwgbmFtZSwgUVVBTElGSUVSX1BST1BFUlRZKTsKKwkJdGhpcy5vcHRp
b25hbFF1YWxpZmllciA9IG5hbWU7CisJCXBvc3RSZXBsYWNlQ2hpbGQob2xkQ2hpbGQsIG5hbWUs
IFFVQUxJRklFUl9QUk9QRVJUWSk7CisJfQorCisJLyoqCisJICogUmV0dXJucyB0aGUgbGl2ZSBv
cmRlcmVkIGxpc3Qgb2YgdHlwZSBhcmd1bWVudHMgb2YgdGhpcyBzdXBlciBtZXRob2QgcmVmZXJl
bmNlLgorCSAqCisJICogQHJldHVybiB0aGUgbGl2ZSBsaXN0IG9mIHR5cGUgYXJndW1lbnRzCisJ
ICogICAgKGVsZW1lbnQgdHlwZToge0BsaW5rIFR5cGV9KQorCSAqLworCXB1YmxpYyBMaXN0IHR5
cGVBcmd1bWVudHMoKSB7CisJCXJldHVybiB0aGlzLnR5cGVBcmd1bWVudHM7CisJfQorCisJLyoq
CisJICogUmV0dXJucyB0aGUgbmFtZSBvZiB0aGUgbWV0aG9kIHJlZmVyZW5jZWQgaW4gdGhpcyBl
eHByZXNzaW9uLgorCSAqCisJICogQHJldHVybiB0aGUgbWV0aG9kIG5hbWUgbm9kZQorCSAqLwor
CXB1YmxpYyBTaW1wbGVOYW1lIGdldE5hbWUoKSB7CisJCWlmICh0aGlzLm1ldGhvZE5hbWUgPT0g
bnVsbCkgeworCQkJLy8gbGF6eSBpbml0IG11c3QgYmUgdGhyZWFkLXNhZmUgZm9yIHJlYWRlcnMK
KwkJCXN5bmNocm9uaXplZCAodGhpcykgeworCQkJCWlmICh0aGlzLm1ldGhvZE5hbWUgPT0gbnVs
bCkgeworCQkJCQlwcmVMYXp5SW5pdCgpOworCQkJCQl0aGlzLm1ldGhvZE5hbWUgPSBuZXcgU2lt
cGxlTmFtZSh0aGlzLmFzdCk7CisJCQkJCXBvc3RMYXp5SW5pdCh0aGlzLm1ldGhvZE5hbWUsIE5B
TUVfUFJPUEVSVFkpOworCQkJCX0KKwkJCX0KKwkJfQorCQlyZXR1cm4gdGhpcy5tZXRob2ROYW1l
OworCX0KKworCS8qKgorCSAqIFNldHMgdGhlIG5hbWUgb2YgdGhlIG1ldGhvZCByZWZlcmVuY2Vk
IGluIHRoaXMgZXhwcmVzc2lvbiB0byB0aGUKKwkgKiBnaXZlbiBuYW1lLgorCSAqCisJICogQHBh
cmFtIG5hbWUgdGhlIG5ldyBtZXRob2QgbmFtZQorCSAqIEBleGNlcHRpb24gSWxsZWdhbEFyZ3Vt
ZW50RXhjZXB0aW9uIGlmOgorCSAqIDx1bD4KKwkgKiA8bGk+dGhlIG5vZGUgYmVsb25ncyB0byBh
IGRpZmZlcmVudCBBU1Q8L2xpPgorCSAqIDxsaT50aGUgbm9kZSBhbHJlYWR5IGhhcyBhIHBhcmVu
dDwvbGk+CisJICogPC91bD4KKwkgKi8KKwlwdWJsaWMgdm9pZCBzZXROYW1lKFNpbXBsZU5hbWUg
bmFtZSkgeworCQlpZiAobmFtZSA9PSBudWxsKSB7CisJCQl0aHJvdyBuZXcgSWxsZWdhbEFyZ3Vt
ZW50RXhjZXB0aW9uKCk7CisJCX0KKwkJQVNUTm9kZSBvbGRDaGlsZCA9IHRoaXMubWV0aG9kTmFt
ZTsKKwkJcHJlUmVwbGFjZUNoaWxkKG9sZENoaWxkLCBuYW1lLCBOQU1FX1BST1BFUlRZKTsKKwkJ
dGhpcy5tZXRob2ROYW1lID0gbmFtZTsKKwkJcG9zdFJlcGxhY2VDaGlsZChvbGRDaGlsZCwgbmFt
ZSwgTkFNRV9QUk9QRVJUWSk7CisJfQorCisJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRo
b2QpCisJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCisJICovCisJaW50IG1lbVNpemUo
KSB7CisJCS8vIHRyZWF0IENvZGUgYXMgZnJlZQorCQlyZXR1cm4gQkFTRV9OT0RFX1NJWkUgKyAz
ICogNDsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKKwkgKiBNZXRo
b2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8KKwlpbnQgdHJlZVNpemUoKSB7CisJCXJldHVy
bgorCQkJbWVtU2l6ZSgpCisJCQkrICh0aGlzLm9wdGlvbmFsUXVhbGlmaWVyID09IG51bGwgPyAw
IDogZ2V0UXVhbGlmaWVyKCkudHJlZVNpemUoKSkKKwkJCSsgKHRoaXMudHlwZUFyZ3VtZW50cyA9
PSBudWxsID8gMCA6IHRoaXMudHlwZUFyZ3VtZW50cy5saXN0U2l6ZSgpKQorCQkJKyAodGhpcy5t
ZXRob2ROYW1lID09IG51bGwgPyAwIDogZ2V0TmFtZSgpLnRyZWVTaXplKCkpOworCX0KK30KXCBO
byBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL1R5cGVNZXRob2RSZWZlcmVuY2UuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vVHlwZU1l
dGhvZFJlZmVyZW5jZS5qYXZhCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLjgz
MWQyYWUKLS0tIC9kZXYvbnVsbAorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2NvcmUvZG9tL1R5cGVNZXRob2RSZWZlcmVuY2UuamF2YQpAQCAtMCwwICsxLDMx
MSBAQAorLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKyAqIENvcHlyaWdodCAoYykgMjAxMyBJQk0g
Q29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJv
Z3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKKyAqIGFyZSBtYWRlIGF2YWlsYWJs
ZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAorICog
d2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQK
KyAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogVGhp
cyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRl
dmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlz
IG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBv
bmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9m
IHRoZSBKQ1AuCisgKiAKKyAqIENvbnRyaWJ1dG9yczoKKyAqICAgICBJQk0gQ29ycG9yYXRpb24g
LSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KKyAqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
LworcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS5kb207CisKK2ltcG9ydCBqYXZhLnV0aWwu
QXJyYXlMaXN0OworaW1wb3J0IGphdmEudXRpbC5MaXN0OworCisvKioKKyAqIFR5cGUgTWV0aG9k
IFJlZmVyZW5jZSAoQWRkZWQgaW4gSkxTNCBBUEkpIGV4cHJlc3Npb24gQVNUIG5vZGUgdHlwZS4K
KyAqIDxwcmU+CisgKiBUeXBlTWV0aG9kUmVmZXJlbmNlOgorICogICAgIFR5cGUgPGI+Ojo8L2I+
IAorICogICAgICAgICBbIDxiPiZsdDs8L2I+IFR5cGUgeyA8Yj4sPC9iPiBUeXBlIH0gPGI+Jmd0
OzwvYj4gXQorICogICAgICAgICBJZGVudGlmaWVyCisgKiA8L3ByZT4KKyAqCisgKiBAc2luY2Ug
My45IEJFVEFfSkFWQTgKKyAqIEBub2luc3RhbnRpYXRlIFRoaXMgY2xhc3MgaXMgbm90IGludGVu
ZGVkIHRvIGJlIGluc3RhbnRpYXRlZCBieSBjbGllbnRzLgorICovCitwdWJsaWMgY2xhc3MgVHlw
ZU1ldGhvZFJlZmVyZW5jZSBleHRlbmRzIE1ldGhvZFJlZmVyZW5jZSB7CisKKwkvKioKKwkgKiBU
aGUgInR5cGUiIHN0cnVjdHVyYWwgcHJvcGVydHkgb2YgdGhpcyBub2RlIHR5cGUgKGNoaWxkIHR5
cGU6IHtAbGluayBUeXBlfSkuCisJICovCisJcHVibGljIHN0YXRpYyBmaW5hbCBDaGlsZFByb3Bl
cnR5RGVzY3JpcHRvciBUWVBFX1BST1BFUlRZID0KKwkJbmV3IENoaWxkUHJvcGVydHlEZXNjcmlw
dG9yKFR5cGVNZXRob2RSZWZlcmVuY2UuY2xhc3MsICJ0eXBlIiwgVHlwZS5jbGFzcywgTUFOREFU
T1JZLCBOT19DWUNMRV9SSVNLKTsgLy8kTk9OLU5MUy0xJAorCisJLyoqCisJICogVGhlICJ0eXBl
QXJndW1lbnRzIiBzdHJ1Y3R1cmFsIHByb3BlcnR5IG9mIHRoaXMgbm9kZSB0eXBlIChlbGVtZW50
IHR5cGU6IHtAbGluayBUeXBlfSkgCisJICovCisJcHVibGljIHN0YXRpYyBmaW5hbCBDaGlsZExp
c3RQcm9wZXJ0eURlc2NyaXB0b3IgVFlQRV9BUkdVTUVOVFNfUFJPUEVSVFkgPQorCQlpbnRlcm5h
bFR5cGVBcmd1bWVudHNGYWN0b3J5KFR5cGVNZXRob2RSZWZlcmVuY2UuY2xhc3MpOworCisJLyoq
CisJICogVGhlICJuYW1lIiBzdHJ1Y3R1cmFsIHByb3BlcnR5IG9mIHRoaXMgbm9kZSB0eXBlIChj
aGlsZCB0eXBlOiB7QGxpbmsgU2ltcGxlTmFtZX0uIAorCSAqLworCXB1YmxpYyBzdGF0aWMgZmlu
YWwgQ2hpbGRQcm9wZXJ0eURlc2NyaXB0b3IgTkFNRV9QUk9QRVJUWSA9CisJCW5ldyBDaGlsZFBy
b3BlcnR5RGVzY3JpcHRvcihUeXBlTWV0aG9kUmVmZXJlbmNlLmNsYXNzLCAibmFtZSIsIFNpbXBs
ZU5hbWUuY2xhc3MsIE1BTkRBVE9SWSwgTk9fQ1lDTEVfUklTSyk7IC8vJE5PTi1OTFMtMSQKKwor
CS8qKgorCSAqIEEgbGlzdCBvZiBwcm9wZXJ0eSBkZXNjcmlwdG9ycyAoZWxlbWVudCB0eXBlOgor
CSAqIHtAbGluayBTdHJ1Y3R1cmFsUHJvcGVydHlEZXNjcmlwdG9yfSksCisJICogb3IgbnVsbCBp
ZiB1bmluaXRpYWxpemVkLgorCSAqLworCXByaXZhdGUgc3RhdGljIGZpbmFsIExpc3QgUFJPUEVS
VFlfREVTQ1JJUFRPUlNfOF8wOworCQorCXN0YXRpYyB7CisJCUxpc3QgcHJvcGVydHlMaXN0ID0g
bmV3IEFycmF5TGlzdCg0KTsKKwkJY3JlYXRlUHJvcGVydHlMaXN0KFR5cGVNZXRob2RSZWZlcmVu
Y2UuY2xhc3MsIHByb3BlcnR5TGlzdCk7CisJCWFkZFByb3BlcnR5KFRZUEVfUFJPUEVSVFksIHBy
b3BlcnR5TGlzdCk7CisJCWFkZFByb3BlcnR5KFRZUEVfQVJHVU1FTlRTX1BST1BFUlRZLCBwcm9w
ZXJ0eUxpc3QpOworCQlhZGRQcm9wZXJ0eShOQU1FX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOwor
CQlQUk9QRVJUWV9ERVNDUklQVE9SU184XzAgPSByZWFwUHJvcGVydHlMaXN0KHByb3BlcnR5TGlz
dCk7CisJfQorCisJLyoqCisJICogUmV0dXJucyBhIGxpc3Qgb2Ygc3RydWN0dXJhbCBwcm9wZXJ0
eSBkZXNjcmlwdG9ycyBmb3IgdGhpcyBub2RlIHR5cGUuCisJICogQ2xpZW50cyBtdXN0IG5vdCBt
b2RpZnkgdGhlIHJlc3VsdC4KKwkgKgorCSAqIEBwYXJhbSBhcGlMZXZlbCB0aGUgQVBJIGxldmVs
OyBvbmUgb2YgdGhlIEFTVC5KTFMqIGNvbnN0YW50cworCSAqIEByZXR1cm4gYSBsaXN0IG9mIHBy
b3BlcnR5IGRlc2NyaXB0b3JzIChlbGVtZW50IHR5cGU6CisJICoge0BsaW5rIFN0cnVjdHVyYWxQ
cm9wZXJ0eURlc2NyaXB0b3J9KQorCSAqLworCXB1YmxpYyBzdGF0aWMgTGlzdCBwcm9wZXJ0eURl
c2NyaXB0b3JzKGludCBhcGlMZXZlbCkgeworCQlyZXR1cm4gUFJPUEVSVFlfREVTQ1JJUFRPUlNf
OF8wOworCX0KKworCS8qKgorCSAqIFRoZSB0eXBlOyBkZWZhdWx0cyB0byBudWxsLgorCSAqLwor
CXByaXZhdGUgVHlwZSB0eXBlID0gbnVsbDsKKwkKKwkvKioKKwkgKiBUaGUgbWV0aG9kIG5hbWU7
IGxhemlseSBpbml0aWFsaXplZDsgZGVmYXVsdHMgdG8gYW4gdW5zcGVjaWZpZWQsCisJICogbGVn
YWwgSmF2YSBtZXRob2QgbmFtZS4KKwkgKi8KKwlwcml2YXRlIFNpbXBsZU5hbWUgbWV0aG9kTmFt
ZSA9IG51bGw7CisKKwkvKioKKwkgKiBDcmVhdGVzIGEgbmV3IEFTVCBub2RlIGZvciBhbiBUeXBl
TWV0aG9kUmVmZXJlbmNlIGRlY2xhcmF0aW9uIG93bmVkCisJICogYnkgdGhlIGdpdmVuIEFTVC4K
KwkgKiA8cD4KKwkgKiBOLkIuIFRoaXMgY29uc3RydWN0b3IgaXMgcGFja2FnZS1wcml2YXRlOyBh
bGwgc3ViY2xhc3NlcyBtdXN0IGJlCisJICogZGVjbGFyZWQgaW4gdGhlIHNhbWUgcGFja2FnZTsg
Y2xpZW50cyBhcmUgdW5hYmxlIHRvIGRlY2xhcmUKKwkgKiBhZGRpdGlvbmFsIHN1YmNsYXNzZXMu
CisJICogPC9wPgorCSAqCisJICogQHBhcmFtIGFzdCB0aGUgQVNUIHRoYXQgaXMgdG8gb3duIHRo
aXMgbm9kZQorCSAqLworCVR5cGVNZXRob2RSZWZlcmVuY2UoQVNUIGFzdCkgeworCQlzdXBlcihh
c3QpOworCQl1bnN1cHBvcnRlZEluMl8zXzQoKTsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9jIGZv
ciB0aGlzIG1ldGhvZCkKKwkgKiBNZXRob2QgZGVjbGFyZWQgb24gTWV0aG9kUmVmZXJlbmNlLgor
CSAqLworCUNoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBpbnRlcm5hbFR5cGVBcmd1bWVudHMy
UHJvcGVydHkoKSB7CisJCXJldHVybiBUWVBFX0FSR1VNRU5UU19QUk9QRVJUWTsKKwl9CisKKwkv
KiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKKwkgKiBNZXRob2QgZGVjbGFyZWQgb24g
QVNUTm9kZS4KKwkgKi8KKwlmaW5hbCBMaXN0IGludGVybmFsU3RydWN0dXJhbFByb3BlcnRpZXNG
b3JUeXBlKGludCBhcGlMZXZlbCkgeworCQlyZXR1cm4gcHJvcGVydHlEZXNjcmlwdG9ycyhhcGlM
ZXZlbCk7CisJfQorCisJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCisJICogTWV0
aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCisJICovCisJZmluYWwgQVNUTm9kZSBpbnRlcm5hbEdl
dFNldENoaWxkUHJvcGVydHkoQ2hpbGRQcm9wZXJ0eURlc2NyaXB0b3IgcHJvcGVydHksIGJvb2xl
YW4gZ2V0LCBBU1ROb2RlIGNoaWxkKSB7CisJCWlmIChwcm9wZXJ0eSA9PSBOQU1FX1BST1BFUlRZ
KSB7CisJCQlpZiAoZ2V0KSB7CisJCQkJcmV0dXJuIGdldE5hbWUoKTsKKwkJCX0gZWxzZSB7CisJ
CQkJc2V0TmFtZSgoU2ltcGxlTmFtZSkgY2hpbGQpOworCQkJCXJldHVybiBudWxsOworCQkJfQor
CQl9CisJCWlmIChwcm9wZXJ0eSA9PSBUWVBFX1BST1BFUlRZKSB7CisJCQlpZiAoZ2V0KSB7CisJ
CQkJcmV0dXJuIGdldFR5cGUoKTsKKwkJCX0gZWxzZSB7CisJCQkJc2V0VHlwZSgoVHlwZSkgY2hp
bGQpOworCQkJCXJldHVybiBudWxsOworCQkJfQorCQl9CisJCS8vIGFsbG93IGRlZmF1bHQgaW1w
bGVtZW50YXRpb24gdG8gZmxhZyB0aGUgZXJyb3IKKwkJcmV0dXJuIHN1cGVyLmludGVybmFsR2V0
U2V0Q2hpbGRQcm9wZXJ0eShwcm9wZXJ0eSwgZ2V0LCBjaGlsZCk7CisJfQorCisJLyogKG9taXQg
amF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCisJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUu
CisJICovCisJZmluYWwgTGlzdCBpbnRlcm5hbEdldENoaWxkTGlzdFByb3BlcnR5KENoaWxkTGlz
dFByb3BlcnR5RGVzY3JpcHRvciBwcm9wZXJ0eSkgeworCQlpZiAocHJvcGVydHkgPT0gVFlQRV9B
UkdVTUVOVFNfUFJPUEVSVFkpIHsKKwkJCXJldHVybiB0eXBlQXJndW1lbnRzKCk7CisJCX0KKwkJ
Ly8gYWxsb3cgZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiB0byBmbGFnIHRoZSBlcnJvcgorCQlyZXR1
cm4gc3VwZXIuaW50ZXJuYWxHZXRDaGlsZExpc3RQcm9wZXJ0eShwcm9wZXJ0eSk7CisJfQorCisJ
LyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCisJICogTWV0aG9kIGRlY2xhcmVkIG9u
IEFTVE5vZGUuCisJICovCisJZmluYWwgaW50IGdldE5vZGVUeXBlMCgpIHsKKwkJcmV0dXJuIFRZ
UEVfTUVUSE9EX1JFRkVSRU5DRTsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1l
dGhvZCkKKwkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8KKwlBU1ROb2RlIGNs
b25lMChBU1QgdGFyZ2V0KSB7CisJCVR5cGVNZXRob2RSZWZlcmVuY2UgcmVzdWx0ID0gbmV3IFR5
cGVNZXRob2RSZWZlcmVuY2UodGFyZ2V0KTsKKwkJcmVzdWx0LnNldFNvdXJjZVJhbmdlKGdldFN0
YXJ0UG9zaXRpb24oKSwgZ2V0TGVuZ3RoKCkpOworCQlyZXN1bHQuc2V0TmFtZSgoU2ltcGxlTmFt
ZSkgZ2V0TmFtZSgpLmNsb25lKHRhcmdldCkpOworCQlyZXN1bHQuc2V0VHlwZSgKKwkJCShUeXBl
KSBBU1ROb2RlLmNvcHlTdWJ0cmVlKHRhcmdldCwgZ2V0VHlwZSgpKSk7CisJCXJlc3VsdC50eXBl
QXJndW1lbnRzKCkuYWRkQWxsKEFTVE5vZGUuY29weVN1YnRyZWVzKHRhcmdldCwgdHlwZUFyZ3Vt
ZW50cygpKSk7CisJCXJldHVybiByZXN1bHQ7CisJfQorCisJLyogKG9taXQgamF2YWRvYyBmb3Ig
dGhpcyBtZXRob2QpCisJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCisJICovCisJZmlu
YWwgYm9vbGVhbiBzdWJ0cmVlTWF0Y2gwKEFTVE1hdGNoZXIgbWF0Y2hlciwgT2JqZWN0IG90aGVy
KSB7CisJCS8vIGRpc3BhdGNoIHRvIGNvcnJlY3Qgb3ZlcmxvYWRlZCBtYXRjaCBtZXRob2QKKwkJ
cmV0dXJuIG1hdGNoZXIubWF0Y2godGhpcywgb3RoZXIpOworCX0KKworCS8qIChvbWl0IGphdmFk
b2MgZm9yIHRoaXMgbWV0aG9kKQorCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAq
LworCXZvaWQgYWNjZXB0MChBU1RWaXNpdG9yIHZpc2l0b3IpIHsKKwkJYm9vbGVhbiB2aXNpdENo
aWxkcmVuID0gdmlzaXRvci52aXNpdCh0aGlzKTsKKwkJaWYgKHZpc2l0Q2hpbGRyZW4pIHsKKwkJ
CS8vIHZpc2l0IGNoaWxkcmVuIGluIG5vcm1hbCBsZWZ0IHRvIHJpZ2h0IHJlYWRpbmcgb3JkZXIK
KwkJCWFjY2VwdENoaWxkKHZpc2l0b3IsIGdldFR5cGUoKSk7CisJCQlhY2NlcHRDaGlsZHJlbih2
aXNpdG9yLCB0aGlzLnR5cGVBcmd1bWVudHMpOworCQkJYWNjZXB0Q2hpbGQodmlzaXRvciwgZ2V0
TmFtZSgpKTsKKwkJfQorCQl2aXNpdG9yLmVuZFZpc2l0KHRoaXMpOworCX0KKworCS8qKgorCSAq
IFJldHVybnMgdGhlIHR5cGUgb2YgdGhpcyB0eXBlIG1ldGhvZCByZWZlcmVuY2UgZXhwcmVzc2lv
bgorCSAqCisJICogQHJldHVybiB0aGUgdHlwZSBub2RlCisJICovCisJcHVibGljIFR5cGUgZ2V0
VHlwZSgpIHsKKwkJcmV0dXJuIHRoaXMudHlwZTsKKwl9CisKKwkvKioKKwkgKiBTZXRzIHRoZSB0
eXBlIG9mIHRoaXMgdHlwZSBtZXRob2QgcmVmZXJlbmNlLgorCSAqCisJICogQHBhcmFtIHR5cGUg
dHlwZSBvZiB0aGlzIG1ldGhvZCByZWZlcmVuY2UKKwkgKiBAZXhjZXB0aW9uIElsbGVnYWxBcmd1
bWVudEV4Y2VwdGlvbiBpZjoKKwkgKiA8dWw+CisJICogPGxpPnRoZSBub2RlIGJlbG9uZ3MgdG8g
YSBkaWZmZXJlbnQgQVNUPC9saT4KKwkgKiA8bGk+dGhlIG5vZGUgYWxyZWFkeSBoYXMgYSBwYXJl
bnQ8L2xpPgorCSAqIDxsaT5hIGN5Y2xlIGluIHdvdWxkIGJlIGNyZWF0ZWQ8L2xpPgorCSAqIDwv
dWw+CisJICovCisJcHVibGljIHZvaWQgc2V0VHlwZShUeXBlIHR5cGUpIHsKKwkJaWYgKHR5cGUg
PT0gbnVsbCkgeworCQkJdGhyb3cgbmV3IElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbigpOworCQl9
CisJCUFTVE5vZGUgb2xkQ2hpbGQgPSB0aGlzLnR5cGU7CisJCXByZVJlcGxhY2VDaGlsZChvbGRD
aGlsZCwgdHlwZSwgVFlQRV9QUk9QRVJUWSk7CisJCXRoaXMudHlwZSA9IHR5cGU7CisJCXBvc3RS
ZXBsYWNlQ2hpbGQob2xkQ2hpbGQsIHR5cGUsIFRZUEVfUFJPUEVSVFkpOworCX0KKworCS8qKgor
CSAqIFJldHVybnMgdGhlIGxpdmUgb3JkZXJlZCBsaXN0IG9mIHR5cGUgYXJndW1lbnRzIG9mIHRo
aXMgdHlwZSBtZXRob2QgcmVmZXJlbmNlCisJICoKKwkgKiBAcmV0dXJuIHRoZSBsaXZlIGxpc3Qg
b2YgdHlwZSBhcmd1bWVudHMKKwkgKiAgICAoZWxlbWVudCB0eXBlOiB7QGxpbmsgVHlwZX0pCisJ
ICovCisJcHVibGljIExpc3QgdHlwZUFyZ3VtZW50cygpIHsKKwkJcmV0dXJuIHRoaXMudHlwZUFy
Z3VtZW50czsKKwl9CisKKwkvKioKKwkgKiBSZXR1cm5zIHRoZSBuYW1lIG9mIHRoZSBtZXRob2Qg
cmVmZXJlbmNlZCBpbiB0aGlzIGV4cHJlc3Npb24uCisJICoKKwkgKiBAcmV0dXJuIHRoZSBtZXRo
b2QgbmFtZSBub2RlCisJICovCisJcHVibGljIFNpbXBsZU5hbWUgZ2V0TmFtZSgpIHsKKwkJaWYg
KHRoaXMubWV0aG9kTmFtZSA9PSBudWxsKSB7CisJCQkvLyBsYXp5IGluaXQgbXVzdCBiZSB0aHJl
YWQtc2FmZSBmb3IgcmVhZGVycworCQkJc3luY2hyb25pemVkICh0aGlzKSB7CisJCQkJaWYgKHRo
aXMubWV0aG9kTmFtZSA9PSBudWxsKSB7CisJCQkJCXByZUxhenlJbml0KCk7CisJCQkJCXRoaXMu
bWV0aG9kTmFtZSA9IG5ldyBTaW1wbGVOYW1lKHRoaXMuYXN0KTsKKwkJCQkJcG9zdExhenlJbml0
KHRoaXMubWV0aG9kTmFtZSwgTkFNRV9QUk9QRVJUWSk7CisJCQkJfQorCQkJfQorCQl9CisJCXJl
dHVybiB0aGlzLm1ldGhvZE5hbWU7CisJfQorCisJLyoqCisJICogU2V0cyB0aGUgbmFtZSBvZiB0
aGUgbWV0aG9kIHJlZmVyZW5jZWQgaW4gdGhpcyBleHByZXNzaW9uIHRvIHRoZQorCSAqIGdpdmVu
IG5hbWUuCisJICoKKwkgKiBAcGFyYW0gbmFtZSB0aGUgbmV3IG1ldGhvZCBuYW1lCisJICogQGV4
Y2VwdGlvbiBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24gaWY6CisJICogPHVsPgorCSAqIDxsaT50
aGUgbm9kZSBiZWxvbmdzIHRvIGEgZGlmZmVyZW50IEFTVDwvbGk+CisJICogPGxpPnRoZSBub2Rl
IGFscmVhZHkgaGFzIGEgcGFyZW50PC9saT4KKwkgKiA8L3VsPgorCSAqLworCXB1YmxpYyB2b2lk
IHNldE5hbWUoU2ltcGxlTmFtZSBuYW1lKSB7CisJCWlmIChuYW1lID09IG51bGwpIHsKKwkJCXRo
cm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oKTsKKwkJfQorCQlBU1ROb2RlIG9sZENo
aWxkID0gdGhpcy5tZXRob2ROYW1lOworCQlwcmVSZXBsYWNlQ2hpbGQob2xkQ2hpbGQsIG5hbWUs
IE5BTUVfUFJPUEVSVFkpOworCQl0aGlzLm1ldGhvZE5hbWUgPSBuYW1lOworCQlwb3N0UmVwbGFj
ZUNoaWxkKG9sZENoaWxkLCBuYW1lLCBOQU1FX1BST1BFUlRZKTsKKwl9CisKKwkvKioKKwkgKiBS
ZXNvbHZlcyBhbmQgcmV0dXJucyB0aGUgYmluZGluZyBmb3IgdGhlIG1ldGhvZCByZWZlcmVuY2Vk
IGJ5IHRoaXMKKwkgKiBleHByZXNzaW9uLgorCSAqIDxwPgorCSAqIE5vdGUgdGhhdCBiaW5kaW5n
cyBhcmUgZ2VuZXJhbGx5IHVuYXZhaWxhYmxlIHVubGVzcyByZXF1ZXN0ZWQgd2hlbiB0aGUKKwkg
KiBBU1QgaXMgYmVpbmcgYnVpbHQuCisJICogPC9wPgorCSAqCisJICogQHJldHVybiB0aGUgbWV0
aG9kIGJpbmRpbmcsIG9yIDxjb2RlPm51bGw8L2NvZGU+IGlmIHRoZSBiaW5kaW5nIGNhbm5vdAor
CSAqIGJlIHJlc29sdmVkCisJICovCisJcHVibGljIElNZXRob2RCaW5kaW5nIHJlc29sdmVNZXRo
b2RCaW5kaW5nKCkgeworCQlyZXR1cm4gdGhpcy5hc3QuZ2V0QmluZGluZ1Jlc29sdmVyKCkucmVz
b2x2ZU1ldGhvZCh0aGlzKTsKKwl9CisKKwkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhv
ZCkKKwkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KKwkgKi8KKwlpbnQgbWVtU2l6ZSgp
IHsKKwkJLy8gdHJlYXQgQ29kZSBhcyBmcmVlCisJCXJldHVybiBCQVNFX05PREVfU0laRSArIDMg
KiA0OworCX0KKworCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQorCSAqIE1ldGhv
ZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgorCSAqLworCWludCB0cmVlU2l6ZSgpIHsKKwkJcmV0dXJu
CisJCQltZW1TaXplKCkKKwkJCSsgKHRoaXMudHlwZSA9PSBudWxsID8gMCA6IGdldFR5cGUoKS50
cmVlU2l6ZSgpKQorCQkJKyAodGhpcy50eXBlQXJndW1lbnRzID09IG51bGwgPyAwIDogdGhpcy50
eXBlQXJndW1lbnRzLmxpc3RTaXplKCkpCisJCQkrICh0aGlzLm1ldGhvZE5hbWUgPT0gbnVsbCA/
IDAgOiBnZXROYW1lKCkudHJlZVNpemUoKSk7CisJfQorfQpcIE5vIG5ld2xpbmUgYXQgZW5kIG9m
IGZpbGUKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29yZS9kb20vTmFpdmVBU1RGbGF0dGVuZXIuamF2YSBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vTmFpdmVBU1RG
bGF0dGVuZXIuamF2YQppbmRleCBlY2Q4MmRhLi5jZjA1NjNjIDEwMDY0NAotLS0gYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL05haXZl
QVNURmxhdHRlbmVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9OYWl2ZUFTVEZsYXR0ZW5lci5qYXZhCkBAIC0yMDIs
NiArMjAyLDI3IEBACiAJCX0KIAl9CiAKKwkvKioKKwkgKiByZWZlcmVuY2Ugbm9kZSBoZWxwZXIg
ZnVuY3Rpb24gdGhhdCBpcyBjb21tb24gdG8gYWxsCisJICogdGhlIGRpZmZlcmVuY2UgcmVmZXJl
bmNlIG5vZGVzLgorCSAqIAorCSAqIEBwYXJhbSB0eXBlQXJndW1lbnRzIGxpc3Qgb2YgdHlwZSBh
cmd1bWVudHMgCisJICovCisJcHJpdmF0ZSB2b2lkIHZpc2l0UmVmZXJlbmNlVHlwZUFyZ3VtZW50
cyhMaXN0IHR5cGVBcmd1bWVudHMpIHsKKwkJdGhpcy5idWZmZXIuYXBwZW5kKCI6OiIpOy8vJE5P
Ti1OTFMtMSQKKwkJaWYgKCF0eXBlQXJndW1lbnRzLmlzRW1wdHkoKSkgeworCQkJdGhpcy5idWZm
ZXIuYXBwZW5kKCc8Jyk7CisJCQlmb3IgKEl0ZXJhdG9yIGl0ID0gdHlwZUFyZ3VtZW50cy5pdGVy
YXRvcigpOyBpdC5oYXNOZXh0KCk7ICkgeworCQkJCVR5cGUgdCA9IChUeXBlKSBpdC5uZXh0KCk7
CisJCQkJdC5hY2NlcHQodGhpcyk7CisJCQkJaWYgKGl0Lmhhc05leHQoKSkgeworCQkJCQl0aGlz
LmJ1ZmZlci5hcHBlbmQoJywnKTsKKwkJCQl9CisJCQl9CisJCQl0aGlzLmJ1ZmZlci5hcHBlbmQo
Jz4nKTsKKwkJfQorCX0KKwkKIAlwcml2YXRlIHZvaWQgdmlzaXRUeXBlQW5ub3RhdGlvbnMoQW5u
b3RhdGFibGVUeXBlIG5vZGUpIHsKIAkJaWYgKG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA+PSBB
U1QuSkxTOCkgewogCQkJdmlzaXRBbm5vdGF0aW9uc0xpc3Qobm9kZS5hbm5vdGF0aW9ucygpKTsK
QEAgLTU3OCw2ICs1OTksMTggQEAKIAl9CiAJCiAJLyoKKwkgKiBAc2VlIEFTVFZpc2l0b3Ijdmlz
aXQoQ3JlYXRpb25SZWZlcmVuY2UpCisJICogCisJICogQHNpbmNlIDMuOSBCRVRBX0pBVkE4CisJ
ICovCisJcHVibGljIGJvb2xlYW4gdmlzaXQoQ3JlYXRpb25SZWZlcmVuY2Ugbm9kZSkgeworCQlu
b2RlLmdldEV4cHJlc3Npb24oKS5hY2NlcHQodGhpcyk7CisJCXZpc2l0UmVmZXJlbmNlVHlwZUFy
Z3VtZW50cyhub2RlLnR5cGVBcmd1bWVudHMoKSk7CisJCXRoaXMuYnVmZmVyLmFwcGVuZCgibmV3
Iik7Ly8kTk9OLU5MUy0xJAorCQlyZXR1cm4gZmFsc2U7CisJfQorCisJLyoKIAkgKiBAc2VlIEFT
VFZpc2l0b3IjdmlzaXQoRG9TdGF0ZW1lbnQpCiAJICovCiAJcHVibGljIGJvb2xlYW4gdmlzaXQo
RG9TdGF0ZW1lbnQgbm9kZSkgewpAQCAtNjg3LDYgKzcyMCwxOCBAQAogCQl0aGlzLmJ1ZmZlci5h
cHBlbmQoIn1cbiIpOy8vJE5PTi1OTFMtMSQKIAkJcmV0dXJuIGZhbHNlOwogCX0KKworCS8qCisJ
ICogQHNlZSBBU1RWaXNpdG9yI3Zpc2l0KEV4cHJlc3Npb25NZXRob2RSZWZlcmVuY2UpCisJICog
CisJICogQHNpbmNlIDMuOSBCRVRBX0pBVkE4CisJICovCisJcHVibGljIGJvb2xlYW4gdmlzaXQo
RXhwcmVzc2lvbk1ldGhvZFJlZmVyZW5jZSBub2RlKSB7CisJCW5vZGUuZ2V0RXhwcmVzc2lvbigp
LmFjY2VwdCh0aGlzKTsKKwkJdmlzaXRSZWZlcmVuY2VUeXBlQXJndW1lbnRzKG5vZGUudHlwZUFy
Z3VtZW50cygpKTsKKwkJbm9kZS5nZXROYW1lKCkuYWNjZXB0KHRoaXMpOworCQlyZXR1cm4gZmFs
c2U7CisJfQkKIAogCS8qCiAJICogQHNlZSBBU1RWaXNpdG9yI3Zpc2l0KEV4cHJlc3Npb25TdGF0
ZW1lbnQpCkBAIC0xNDc5LDYgKzE1MjQsMjIgQEAKIAl9CiAKIAkvKgorCSAqIEBzZWUgQVNUVmlz
aXRvciN2aXNpdChTdXBlck1ldGhvZFJlZmVyZW5jZSkKKwkgKiAKKwkgKiBAc2luY2UgMy45IEJF
VEFfSkFWQTgKKwkgKi8KKwlwdWJsaWMgYm9vbGVhbiB2aXNpdChTdXBlck1ldGhvZFJlZmVyZW5j
ZSBub2RlKSB7CisJCWlmIChub2RlLmdldFF1YWxpZmllcigpICE9IG51bGwpIHsKKwkJCW5vZGUu
Z2V0UXVhbGlmaWVyKCkuYWNjZXB0KHRoaXMpOworCQkJdGhpcy5idWZmZXIuYXBwZW5kKCcuJyk7
CisJCX0KKwkJdGhpcy5idWZmZXIuYXBwZW5kKCJzdXBlciIpOy8vJE5PTi1OTFMtMSQKKwkJdmlz
aXRSZWZlcmVuY2VUeXBlQXJndW1lbnRzKG5vZGUudHlwZUFyZ3VtZW50cygpKTsKKwkJbm9kZS5n
ZXROYW1lKCkuYWNjZXB0KHRoaXMpOworCQlyZXR1cm4gZmFsc2U7CisJfQorCisJLyoKIAkgKiBA
c2VlIEFTVFZpc2l0b3IjdmlzaXQoU3dpdGNoQ2FzZSkKIAkgKi8KIAlwdWJsaWMgYm9vbGVhbiB2
aXNpdChTd2l0Y2hDYXNlIG5vZGUpIHsKQEAgLTE3MzUsNiArMTc5NiwxOCBAQAogCX0KIAogCS8q
CisJICogQHNlZSBBU1RWaXNpdG9yI3Zpc2l0KFR5cGVNZXRob2RSZWZlcmVuY2UpCisJICogCisJ
ICogQHNpbmNlIDMuOSBCRVRBX0pBVkE4CisJICovCisJcHVibGljIGJvb2xlYW4gdmlzaXQoVHlw
ZU1ldGhvZFJlZmVyZW5jZSBub2RlKSB7CisJCW5vZGUuZ2V0VHlwZSgpLmFjY2VwdCh0aGlzKTsK
KwkJdmlzaXRSZWZlcmVuY2VUeXBlQXJndW1lbnRzKG5vZGUudHlwZUFyZ3VtZW50cygpKTsKKwkJ
bm9kZS5nZXROYW1lKCkuYWNjZXB0KHRoaXMpOworCQlyZXR1cm4gZmFsc2U7CisJfQorCisJLyoK
IAkgKiBAc2VlIEFTVFZpc2l0b3IjdmlzaXQoVHlwZVBhcmFtZXRlcikKIAkgKiBAc2luY2UgMy4x
CiAJICov
</data>

          </attachment>
      

    </bug>

</bugzilla>