<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>433404</bug_id>
          
          <creation_ts>2014-04-24 08:52:00 -0400</creation_ts>
          <short_desc>[1.8] ICompilationUnit#findElements(IJavaElement) doesn&apos;t find LambdaExpression IType</short_desc>
          <delta_ts>2015-02-02 23:50:24 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>4.5 M5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Markus Keller">markus_keller</reporter>
          <assigned_to name="Jay Arthanareeswaran">jarthana</assigned_to>
          <cc>jarthana</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2392486</commentid>
    <comment_count>0</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-04-24 08:52:07 -0400</bug_when>
    <thetext>org.eclipse.jdt.internal.core.CompilationUnit#findElements(IJavaElement) doesn&apos;t find the corresponding element for a LambdaExpression.

The problem is that it calls Member#getType(String, int), which doesn&apos;t work for LambdaExpressions and returns a nonexistent SourceType. This eventually caused the NPE in bug 433373.

In that specific situation, the fix for bug 433373 will hide this problem.

Nevertheless, for 4.5, the findElements API should specify that it can&apos;t be used to find ITypes whose #isLambda() returns true, and the implementation should return null. It should also specify that it returns null for an ILocalVariable.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2513306</commentid>
    <comment_count>1</comment_count>
      <attachid>250447</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2015-02-02 11:40:40 -0500</bug_when>
    <thetext>Created attachment 250447
Doc change + code fix

Includes the documentation change + code fix with test.

Markus/Noopur, please let me know if any UI tests need to be run/adjusted before releasing.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2513429</commentid>
    <comment_count>2</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2015-02-02 23:50:24 -0500</bug_when>
    <thetext>Released in master after removing reference to non public type LambdaExpression in the new Javadoc. Commit is here:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=d32d841c2eb6f8ce13caef29b10e91882a28b77e</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>250447</attachid>
            <date>2015-02-02 11:40:00 -0500</date>
            <delta_ts>2015-02-02 11:40:40 -0500</delta_ts>
            <desc>Doc change + code fix</desc>
            <filename>Bug-433404.patch</filename>
            <type>text/plain</type>
            <size>4903</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9UeXBlUmVzb2x2ZVRlc3RzLmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
bW9kZWwvVHlwZVJlc29sdmVUZXN0cy5qYXZhCmluZGV4IGJlNzJlYmIuLmI3NjI3NjUgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9tb2RlbC9UeXBlUmVzb2x2ZVRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21v
ZGVsL1R5cGVSZXNvbHZlVGVzdHMuamF2YQpAQCAtMSw0ICsxLDQgQEAKIC8qKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFu
ZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTUgSUJNIENvcnBvcmF0aW9uIGFu
ZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBh
Y2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRl
cm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKQEAgLTM2LDQgKzM2LDYgQEAK
IGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy51dGlsLlV0aWw7CiBpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuSmF2YVByb2plY3Q7CitpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvcmUuTGFtYmRhRXhwcmVzc2lvbjsKK2ltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29yZS5MYW1iZGFNZXRob2Q7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvcmUuTG9jYWxWYXJpYWJsZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29yZS5OYW1lTG9va3VwOwpAQCAtMTAxMiwzICsxMDE0LDM0IEBACiAJfQogfQorLy8g
aHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQzMzQwNAorcHVi
bGljIHZvaWQgdGVzdDQzMzQwNCgpIHRocm93cyBDb3JlRXhjZXB0aW9uLCBJT0V4Y2VwdGlvbiB7
CisJdHJ5IHsKKwkJY3JlYXRlSmF2YVByb2plY3QoIlAiLCBuZXcgU3RyaW5nW10geyJzcmMifSwg
bmV3IFN0cmluZ1tdIHsiSkNMMTVfTElCIn0sICJiaW4iLCAiMS41Iik7CisJCVN0cmluZyBzb3Vy
Y2UgPSAicGFja2FnZSBwO1xuIiAgKworCQkJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgICsKKwkJ
CQkJCSIgCUZJIGZpID0gKGlfKSAtPiB7IHJldHVybiAwO307XG4iICsKKwkJCQkJCSJ9XG4iICsK
KwkJCQkJCSJpbnRlcmZhY2UgRkkge1xuIiArCisJCQkJCQkiCXB1YmxpYyBpbnQgZm9vKGludCBp
KTtcbiIgKworCQkJCQkJIn1cbiI7CisJCWNyZWF0ZUZvbGRlcigiL1Avc3JjL3AiKTsKKwkJY3Jl
YXRlRmlsZSgiL1Avc3JjL3AvWC5qYXZhIiwgc291cmNlKTsKKwkJd2FpdEZvckF1dG9CdWlsZCgp
OworCisJCUlDb21waWxhdGlvblVuaXQgdW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiL1Avc3Jj
L3AvWC5qYXZhIik7CisJCVN0cmluZyBsYW1iZGFTdHJpbmcgPSAiaV8iOworCQlJSmF2YUVsZW1l
bnRbXSBlbGVtZW50cyA9IHVuaXQuY29kZVNlbGVjdChzb3VyY2UuaW5kZXhPZihsYW1iZGFTdHJp
bmcpLCBsYW1iZGFTdHJpbmcubGVuZ3RoKCkpOworCQlhc3NlcnRFcXVhbHMoIkFycmF5IHNpemUg
c2hvdWxkIGJlIDEiLCAxLCBlbGVtZW50cy5sZW5ndGgpOworCQlJTG9jYWxWYXJpYWJsZSB2YXJp
YWJsZSA9IChJTG9jYWxWYXJpYWJsZSkgZWxlbWVudHNbMF07CisJCWVsZW1lbnRzID0gdW5pdC5m
aW5kRWxlbWVudHModmFyaWFibGUpOworCQlhc3NlcnROdWxsKCJTaG91bGQgYmUgbnVsbCIsIGVs
ZW1lbnRzKTsKKwkJTGFtYmRhTWV0aG9kIG1ldGhvZCA9IChMYW1iZGFNZXRob2QpIHZhcmlhYmxl
LmdldFBhcmVudCgpOworCQlMYW1iZGFFeHByZXNzaW9uIGxhbWJkYSA9IChMYW1iZGFFeHByZXNz
aW9uKSBtZXRob2QuZ2V0UGFyZW50KCk7CisJCWFzc2VydFRydWUoIlNob3VsZCBiZSBhIGxhbWJk
YSIsIGxhbWJkYS5pc0xhbWJkYSgpKTsKKwkJZWxlbWVudHMgPSB1bml0LmZpbmRFbGVtZW50cyhs
YW1iZGEpOworCQlhc3NlcnROdWxsKCJTaG91bGQgYmUgbnVsbCIsIGVsZW1lbnRzKTsKKwl9IGZp
bmFsbHkgeworCQlkZWxldGVQcm9qZWN0KCJQIik7CisJfQorfQogfQpkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2NvcmUvSUNvbXBpbGF0aW9u
VW5pdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvSUNvbXBpbGF0aW9uVW5pdC5qYXZhCmluZGV4IDMxYmY5ZWYuLjE4ODIxNzAgMTAwNjQ0Ci0t
LSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9jb3JlL0lDb21w
aWxhdGlvblVuaXQuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNs
aXBzZS9qZHQvY29yZS9JQ29tcGlsYXRpb25Vbml0LmphdmEKQEAgLTEsNCArMSw0IEBACiAvKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDE0IElCTSBDb3Jw
b3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDE1IElCTSBDb3Jw
b3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFt
IGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVu
ZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCkBAIC0xNyw0
ICsxNyw1IEBACiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuZG9tLkFTVDsKIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuY29yZS5kb20uSUJpbmRpbmc7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvcmUuTGFtYmRhRXhwcmVzc2lvbjsKIGltcG9ydCBvcmcuZWNsaXBzZS50ZXh0
LmVkaXRzLlRleHRFZGl0OwogaW1wb3J0IG9yZy5lY2xpcHNlLnRleHQuZWRpdHMuVW5kb0VkaXQ7
CkBAIC0zMzQsNiArMzM1LDEwIEBACiAgKiA8bGk+QSBleGlzdHMuCiAgKiA8L3VsPgotICogUmV0
dXJucyA8Y29kZT5udWxsPC9jb2RlPiBpZiBubyBzdWNoIGphdmEgZWxlbWVudHMgY2FuIGJlIGZv
dW5kCi0gKiBvciBpZiB0aGUgZ2l2ZW4gZWxlbWVudCBpcyBub3QgaW5jbHVkZWQgaW4gYSBjb21w
aWxhdGlvbiB1bml0LgorICogUmV0dXJucyA8Y29kZT5udWxsPC9jb2RlPiBmb3IgdGhlIGZvbGxv
d2luZyBjYXNlczoKKyAqIDx1bD4KKyAqIDxsaT5pZiBubyBzdWNoIGphdmEgZWxlbWVudHMgY2Fu
IGJlIGZvdW5kIG9yIGlmIHRoZSBnaXZlbiBlbGVtZW50IGlzIG5vdCBpbmNsdWRlZCBpbiBhIGNv
bXBpbGF0aW9uIHVuaXQ8L2xpPgorICogPGxpPnRoZSBlbGVtZW50IGlzIGEge0BsaW5rIExhbWJk
YUV4cHJlc3Npb259LCBpLmUuIGNhbGxpbmcge0BsaW5rIElUeXBlI2lzTGFtYmRhKCl9IHJldHVy
bnMgdHJ1ZTwvbGk+CisgKiA8bGk+dGhlIGVsZW1lbnQgaXMgYW4ge0BsaW5rIElMb2NhbFZhcmlh
YmxlfTwvbGk+CisgKiA8L3VsPgogICoKICAqIEBwYXJhbSBlbGVtZW50IHRoZSBnaXZlbiBlbGVt
ZW50CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29yZS9Db21waWxhdGlvblVuaXQuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0NvbXBpbGF0aW9uVW5pdC5q
YXZhCmluZGV4IGEzZTdjOTAuLmQ1OGY1MjEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0NvbXBpbGF0aW9uVW5pdC5q
YXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL0NvbXBpbGF0aW9uVW5pdC5qYXZhCkBAIC0xLDQgKzEsNCBAQAogLyoqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxNSBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQg
dGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0
aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMApAQCAtNTA2LDQgKzUw
Niw3IEBACiAgKi8KIHB1YmxpYyBJSmF2YUVsZW1lbnRbXSBmaW5kRWxlbWVudHMoSUphdmFFbGVt
ZW50IGVsZW1lbnQpIHsKKwlpZiAoZWxlbWVudCBpbnN0YW5jZW9mIElUeXBlICYmICgoSVR5cGUp
IGVsZW1lbnQpLmlzTGFtYmRhKCkpIHsKKwkJcmV0dXJuIG51bGw7CisJfQogCUFycmF5TGlzdCBj
aGlsZHJlbiA9IG5ldyBBcnJheUxpc3QoKTsKIAl3aGlsZSAoZWxlbWVudCAhPSBudWxsICYmIGVs
ZW1lbnQuZ2V0RWxlbWVudFR5cGUoKSAhPSBJSmF2YUVsZW1lbnQuQ09NUElMQVRJT05fVU5JVCkg
ew==
</data>

          </attachment>
      

    </bug>

</bugzilla>