<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>401017</bug_id>
          
          <creation_ts>2013-02-17 13:53:00 -0500</creation_ts>
          <short_desc>[compiler][null] casted reference to @Nullable field lacks a warning</short_desc>
          <delta_ts>2013-03-12 01:52:42 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.3 M6</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Stephan Herrmann">stephan.herrmann</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2217794</commentid>
    <comment_count>0</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-02-17 13:53:48 -0500</bug_when>
    <thetext>From bug 378724 comment 15:

----
Cast obscures nullness of a field:

class NPEonCast {

    @Nullable
    private Object nullable;

    public void test() {
        if (nullable instanceof Number) {
            ((Number)nullable).intValue(); // A
        }
        if (nullable != null) {
            nullable.toString(); // B
        }
        nullable.toString(); // C
    }

}

Error missing for A (while correct for B and C)
----

While the result would be correct when syntactic analysis for fields is enabled (because the instanceof provides protection), without syntactic analysis we should see a warning, which we don&apos;t.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2218137</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-02-18 09:45:54 -0500</bug_when>
    <thetext>Trivial fix has been released for 4.3 M6 via commit 78e5ed0e34672db495ea2a17471c36349086fcd0</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2229296</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-03-12 01:52:42 -0400</bug_when>
    <thetext>Verified for 4.3 M6 using Build id: I20130310-2000</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>