<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>424712</bug_id>
          
          <creation_ts>2013-12-28 05:25:00 -0500</creation_ts>
          <short_desc>[1.8][compiler] NPE in TypeBinding.isProvablyDistinctTypeArgument</short_desc>
          <delta_ts>2014-11-08 08:36:37 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>424053</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Andrey Loskutov">loskutov</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>shankhba</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2345067</commentid>
    <comment_count>0</comment_count>
    <who name="Andrey Loskutov">loskutov</who>
    <bug_when>2013-12-28 05:25:52 -0500</bug_when>
    <thetext>Using Eclipse Java Development Tools Patch for Java 8 Support (BETA) 1.0.0.v20131228-0104_BETA_JAVA8

Steps to reproduce:
Open java.util.stream.SortedOps from 1.8 JDK in Java Editor (via &quot;Open Type&quot;).

Error appear in the error log view:

eclipse.buildId=4.3.0.M20130911-1000
java.version=1.7.0_45
java.vendor=Oracle Corporation
BootLoader constants: OS=linux, ARCH=x86_64, WS=gtk, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.standard.product -showLocation
Command-line arguments:  -os linux -ws gtk -arch x86_64 -product org.eclipse.epp.package.standard.product -showLocation

Error
Sat Dec 28 11:20:14 CET 2013
Error in JDT Core during AST creation

java.lang.NullPointerException
	at org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isProvablyDistinctTypeArgument(TypeBinding.java:934)
	at org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isProvablyDistinct(TypeBinding.java:782)
	at org.eclipse.jdt.internal.compiler.ast.CastExpression.checkUnsafeCast(CastExpression.java:333)
	at org.eclipse.jdt.internal.compiler.ast.Expression.checkCastTypesCompatibility(Expression.java:415)
	at org.eclipse.jdt.internal.compiler.ast.CastExpression.resolveType(CastExpression.java:546)
	at org.eclipse.jdt.internal.compiler.ast.Assignment.resolveType(Assignment.java:203)
	at org.eclipse.jdt.internal.compiler.ast.Expression.resolve(Expression.java:1016)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements(AbstractMethodDeclaration.java:620)
	at org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.resolveStatements(ConstructorDeclaration.java:572)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:531)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1209)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1310)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1108)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1319)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:570)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1207)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:692)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1186)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:548)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:541)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:484)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:132)
	at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor$1.run(ClassFileEditor.java:710)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2345555</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-02 21:54:38 -0500</bug_when>
    <thetext>We lookup .wildcard of CaptureBinding18.

Can we devise a preemptive search of such problem spots ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2346332</commentid>
    <comment_count>2</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-01-07 03:22:42 -0500</bug_when>
    <thetext>Test Case:

import java.util.Collection;
import java.util.function.Supplier;
import java.util.Set;

public class X {
    public static &lt;T, SOURCE extends Collection&lt;T&gt;, DEST extends Collection&lt;T&gt;&gt;
        DEST foo(SOURCE sourceCollection, DEST collectionFactory) {
            return null;
    }  
    
    public static void main(String... args) {
        Set&lt;Y&gt; rosterSet = (Set&lt;Y&gt;) foo(null, Set::new);
    }
}

--------------------------------------------------------------------------

Call Stack:

java.lang.NullPointerException
        at org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isProvablyDistinctTypeArgument(TypeBinding.java:934)
        at org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isProvablyDistinct(TypeBinding.java:782)
        at org.eclipse.jdt.internal.compiler.ast.CastExpression.checkUnsafeCast(CastExpression.java:332)
        at org.eclipse.jdt.internal.compiler.ast.Expression.checkCastTypesCompatibility(Expression.java:420)
        at org.eclipse.jdt.internal.compiler.ast.Expression.checkCastTypesCompatibility(Expression.java:369)
        at org.eclipse.jdt.internal.compiler.ast.CastExpression.resolveType(CastExpression.java:546)
        at org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.resolve(LocalDeclaration.java:244)
        at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements(AbstractMethodDeclaration.java:620)
        at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements(MethodDeclaration.java:303)
        at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:531)
        at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1211)
        at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1321)
        at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:570)
        at org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:770)
        at org.eclipse.jdt.internal.compiler.ProcessTaskManager.run(ProcessTaskManager.java:137)
        at java.lang.Thread.run(Thread.java:744)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2346741</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-07 22:03:08 -0500</bug_when>
    <thetext>Good news, on branch head this is not reproducible anymore. Though I see
Y cannot be resolved error appearing twice.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2347403</commentid>
    <comment_count>4</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-01-09 07:16:32 -0500</bug_when>
    <thetext>Status:

Passing test added for example from comment 2.
(Reporting two errors, against the two unresolved references to Y).

Filed bug 425183 for the general topic of making CaptureBinding18 safe as requested in comment 1.

Reproduced the initial problem from comment 0 by:

import java.util.Comparator;

public class X {
    &lt;T&gt; void test() {
        Comparator&lt;? super T&gt; comparator = (Comparator&lt;? super T&gt;) Comparator.naturalOrder();
    }
}

Investigating.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2347421</commentid>
    <comment_count>5</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-01-09 08:03:07 -0500</bug_when>
    <thetext>Tests (one passing; one disabled) released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=9d104d945debc84d285485abce2b81da74ac98c5</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2348422</commentid>
    <comment_count>6</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-01-10 16:51:09 -0500</bug_when>
    <thetext>I&apos;ve inspected all usages of CaptureBinding.wildcard.

The most relevant ones are in TypeBinding (two methods), for which I added corresponding behavior to handle CaptureBinding18 (without a wildcard).

Most other usages already cope with null in .wildcard.

Only remaining: usages inside class CaptureBinding itself, to be handled via bug 425183.

Test enabled and fixes released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=a02dc2635b15c289c546ca96a49f66d7180ade17</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2479255</commentid>
    <comment_count>7</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-11-08 04:01:46 -0500</bug_when>
    <thetext>Is this fixed in 4.4 M4 and not in 4.5 M4 ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2479344</commentid>
    <comment_count>8</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-11-08 08:36:37 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #7)
&gt; Is this fixed in 4.4 M4 and not in 4.5 M4 ?

Neither, but BETA J8.

Not sure why Shankha changed it to 4.5 M4 - restoring original value.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>