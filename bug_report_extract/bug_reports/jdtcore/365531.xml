<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>365531</bug_id>
          
          <creation_ts>2011-12-04 15:11:00 -0500</creation_ts>
          <short_desc>[compiler][null] investigate alternative strategy for internally encoding nullness defaults</short_desc>
          <delta_ts>2012-03-12 05:47:04 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.8</version>
          <rep_platform>Other</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.8 M6</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Stephan Herrmann">stephan.herrmann</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>amj87.iitr</cc>
    
    <cc>daniel_megert</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2035419</commentid>
    <comment_count>0</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-12-04 15:11:32 -0500</bug_when>
    <thetext>Bug 186342 comment 179 contains an experiment in avoiding type bindings
for encoding nullness defaults, but using a bit-based strategy.
Post 3.8 M4 we should investigate if this could yield better code
(ITO structure, memory footprint).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2053176</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-19 16:02:42 -0500</bug_when>
    <thetext>Awaiting an agreement in bug 366063 for which this could help internally.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2058465</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-01-31 04:03:03 -0500</bug_when>
    <thetext>Does this become a NOP if we stop emitting synthetic annotations as per
my understanding of where https://bugs.eclipse.org/bugs/show_bug.cgi?id=366063
is headed ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2058481</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-31 04:44:30 -0500</bug_when>
    <thetext>(In reply to comment #2)
&gt; Does this become a NOP if we stop emitting synthetic annotations as per
&gt; my understanding of where https://bugs.eclipse.org/bugs/show_bug.cgi?id=366063
&gt; is headed ?

No, technically both bugs converge to one big refactoring, were both sides support each other.

In the current implementation, just stopping to emit synth annotations would render any nullness defaults effectless.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2065688</commentid>
    <comment_count>4</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-02-14 13:48:30 -0500</bug_when>
    <thetext>Resolved for 3.8 M6 via commit 4817a4bde9db799e7a793068d64037f59bfa521f

Along with the purely internal change of representations this patch establishes the following behavioral changes:
- Previously when seeing @NonNullByDefault we looked up the binding for the configured nonnull annotation, and if that could not be found we flagged:
    Buildpath problem: the type in.valid, which is configured as a null annotation type, cannot be resolved
  This lookup is no longer necessary and hence the error is no longer reported (which obsoletes half of the tests in NullAnnotationModelTests)
- We no longer generate those synthetic annotations into the byte code (see also bug 366063), which means the global default no longer works for binary class files.

More to follow in bug 366063

Can anyone recommend how I should document the removal of an IProblem that was introduced in 3.8 M4? Edit the previous entry in the build notes? Add a new entry? Any other doc location to update?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2069865</commentid>
    <comment_count>5</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-02-23 05:31:28 -0500</bug_when>
    <thetext>*** Bug 371359 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2078578</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-03-12 05:47:04 -0400</bug_when>
    <thetext>Verified for 3.8 M6 using Build id: I20120306-0800</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>