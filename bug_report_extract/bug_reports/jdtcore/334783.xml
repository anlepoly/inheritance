<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>334783</bug_id>
          
          <creation_ts>2011-01-19 09:01:00 -0500</creation_ts>
          <short_desc>[API] Add new API to ease the retrieval of the parameter annotations for an IMethod</short_desc>
          <delta_ts>2011-05-03 04:45:40 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.7</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.7 M6</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Olivier Thomann">Olivier_Thomann</reporter>
          <assigned_to name="Olivier Thomann">Olivier_Thomann</assigned_to>
          <cc>bensonn</cc>
    
    <cc>daniel_megert</cc>
    
    <cc>jarthana</cc>
    
    <cc>ktsao</cc>
    
    <cc>markus_keller</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="39413"
          type_id="1"
          status="+"
          setter="markus_keller"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1869223</commentid>
    <comment_count>0</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-01-19 09:01:23 -0500</bug_when>
    <thetext>Follow up of bug 333919.
See bug 333919 comment 2 and bug 333919 comment 3.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1869224</commentid>
    <comment_count>1</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-01-19 09:01:38 -0500</bug_when>
    <thetext>Jay, please investigate.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1871381</commentid>
    <comment_count>2</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2011-01-23 22:42:22 -0500</bug_when>
    <thetext>In the case of binary method, it seems fairly straight forward since IBinaryMethod#getParameterAnnotations already have the required implementation and can be used in the new API implementation. But for source types, it might require some additional work. Looking at what can be done.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1879768</commentid>
    <comment_count>3</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2011-02-08 08:46:30 -0500</bug_when>
    <thetext>A general &quot;ILocalVariable[] getParameters()&quot; in IMethod also wouldn&apos;t hurt.
We already have an analogous &quot;ITypeParameter[] getTypeParameters()&quot;.

However, I don&apos;t have a concrete use case for the additional information (source ranges, flags) right now, so a specialized API is also OK for me if the general getParameters() is too costly.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1880495</commentid>
    <comment_count>4</comment_count>
      <attachid>188592</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2011-02-09 10:16:01 -0500</bug_when>
    <thetext>Created attachment 188592
Draft patch

API added in IMethod. The patch also contains the implementation + tests. Will update after running all existing tests.

---------
/**
 * Returns an array of annotations for the parameter at the given index.
 * 
 * @param index the index or order of the method parameter.
 * @return the array of annotations for the specified parameter
 * @throws JavaModelException
 * @since 3.7
 */
IAnnotation[] getParameterAnnotations(int index) throws JavaModelException;
----------------

I don&apos;t know if it would be better if the API returns all annotations instead of a specific parameter&apos;s. Markus/Olivier, what do you think?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1880544</commentid>
    <comment_count>5</comment_count>
      <attachid>188599</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2011-02-09 11:31:14 -0500</bug_when>
    <thetext>Created attachment 188599
Updated patch

The previous patch had a bug. This one fixes it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1880602</commentid>
    <comment_count>6</comment_count>
      <attachid>188610</attachid>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2011-02-09 13:16:42 -0500</bug_when>
    <thetext>Created attachment 188610
Hack for JavaElement view

I quickly tested the updated patch by hacking the JavaElement view [1]. With the hack, annotations show up as children of PARAMETER NAMES.

I saw that most of the queries don&apos;t work and the annotation element does not exist. Furthermore, the API with the index parameter looks odd. No other IJavaElement has such an API.

Is there anything speaking against &quot;ILocalVariable[] getParameters()&quot;? You have to create the ILocalVariables anyway because they are the parents of the annotations. And this API would perfectly fit the existing story.


[1] repo:   :pserver:anonymous@dev.eclipse.org:/cvsroot/eclipse
    module: jdt-ui-home/plugins/org.eclipse.jdt.jeview</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1880826</commentid>
    <comment_count>7</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2011-02-10 00:07:40 -0500</bug_when>
    <thetext>(In reply to comment #6)
&gt; Is there anything speaking against &quot;ILocalVariable[] getParameters()&quot;? 

I was wary of making ILocalVariable part of an API since ILocalVariable has been labeled as pseudo-element as per the API doc.

&quot;In particular such a pseudo-element should not be used as a handle. For example its name range won&apos;t be updated if the underlying source changes.&quot;

Looking at the code, we don&apos;t seem to bother about local variables being part of the element hierarchy. But if we intend to make it part of an API, we will have to fix that.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1880828</commentid>
    <comment_count>8</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2011-02-10 00:25:50 -0500</bug_when>
    <thetext>Or how about the API just returning an array of strings, just like IMethod#getParameterNames and IMethod#getParameterTypes?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1880971</commentid>
    <comment_count>9</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2011-02-10 05:50:24 -0500</bug_when>
    <thetext>&gt; Looking at the code, we don&apos;t seem to bother about local variables being part
&gt; of the element hierarchy. But if we intend to make it part of an API, we will
&gt; have to fix that.

Definitely no. Just look at IMethod#getTypeParameters() an make it analogous. In hindsight, IParent#getChildren() was not a great API, since clients (e.g. UI) tend to rely on the current set of children, and not all clients deal gracefully with new elements added to the children. That&apos;s why we didn&apos;t extend the getChildren() in the past, but added separate queries for new kinds of children.

&gt; Or how about the API just returning an array of strings, just like
&gt; IMethod#getParameterNames and IMethod#getParameterTypes?

Why do you think clients are only interested in the annotation names but not in the member-value pairs (or the source positions)?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1881765</commentid>
    <comment_count>10</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-02-11 10:37:54 -0500</bug_when>
    <thetext>As Markus, I agree that this API should retrieve the full flavor annotations. Not just the names.
We need the equivalent of ((IAnnotatable)method).getAnnotations(), but in a way that makes it easier to be retrieved than using the workaround suggested in bug 333919 comment 2.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1882961</commentid>
    <comment_count>11</comment_count>
      <attachid>188895</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2011-02-14 07:40:16 -0500</bug_when>
    <thetext>Created attachment 188895
Modified patch

This patch seem to be better. The parameter name, when selected in the editor, appears as a LocalVariable in the JavaElements view. And the annotations do appear under parameter names. I am not sure what queries I need to test here. The patch also includes the modified hack to org.eclipse.jdt.jeview.views.JavaElement.

Markus, please let me what other tests I can use to check the  completeness of the fix. As for your request for API returning ILocalVariable themselves, I feel it might involve more effort.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1884273</commentid>
    <comment_count>12</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-02-16 11:01:47 -0500</bug_when>
    <thetext>I found several issues with the patch in binary mode. I am looking at it.
Jay, I&apos;ll ask you to review a patch later today or tomorrow.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1884450</commentid>
    <comment_count>13</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2011-02-16 14:35:23 -0500</bug_when>
    <thetext>(In reply to comment #11)
&gt; As for your request for API returning ILocalVariable themselves, I
&gt; feel it might involve more effort.

I don&apos;t understand that. You need to have fully resolved ILocalVariables anyway, since these are the parent elements of the annotations. So I don&apos;t see the additional effort. On the other hand, an API that can return IAnnotations but does not give direct access to all parameter ILocalVariables looks pretty lame.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1884465</commentid>
    <comment_count>14</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-02-16 14:59:34 -0500</bug_when>
    <thetext>(In reply to comment #13)
&gt; I don&apos;t understand that. You need to have fully resolved ILocalVariables
&gt; anyway, since these are the parent elements of the annotations. So I don&apos;t see
&gt; the additional effort. On the other hand, an API that can return IAnnotations
&gt; but does not give direct access to all parameter ILocalVariables looks pretty
&gt; lame.
BinaryMethod don&apos;t have ILocalVariables. So I don&apos;t think how we can have an API that is exposing ILocalVariable on IMethod that would work for source and binary methods.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1884481</commentid>
    <comment_count>15</comment_count>
      <attachid>189128</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-02-16 15:29:04 -0500</bug_when>
    <thetext>Created attachment 189128
Proposed fix + regression tests

I haven&apos;t checked the way it works with the ASTView, but regression tests look good.

I also believe that for consistency with other methods defined on IMethod an empty array should be returned when the method has no parameters.

Jay, please review the changes.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1884788</commentid>
    <comment_count>16</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2011-02-17 07:04:49 -0500</bug_when>
    <thetext>&gt; Markus, please let me what other tests I can use to check the  completeness of
the fix.

Focus the JavaElement View on the local variable (using first toolbar button). Then navigate down to the annotation and up to the method and compare the annotations on the local var with the annotations from the new API:
- select two items and choose context menu &gt; Compare with Each Other...
- compare their children
- compare the info in the Properties view</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1884837</commentid>
    <comment_count>17</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2011-02-17 08:26:13 -0500</bug_when>
    <thetext>&gt; BinaryMethod don&apos;t have ILocalVariables

Only BinaryMethods without source attachments. A problem that is bleeding through in the last patch is that the parent element of a parameter annotation in a BinaryMethod is the BinaryMethod, not the local variable.

This contradicts the general contract of getParent(), and it is inconsistent with the correct parent I see when I look at the annotations of an ILocalVariable from a BinaryMethod with source attachment).


[This is hopefully obsolete now:] I checked the new proposed API for consistency with other APIs, and I didn&apos;t find any other jdt.core APIs which return a [][] (except for char[][]). If for any reason we need to go with the getParameterAnnotations() API, then the indexed API would be better, since it would match IMethodBinding#getParameterAnnotations(int).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1884862</commentid>
    <comment_count>18</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-02-17 08:52:28 -0500</bug_when>
    <thetext>(In reply to comment #17)
&gt; Only BinaryMethods without source attachments. A problem that is bleeding
&gt; through in the last patch is that the parent element of a parameter annotation
&gt; in a BinaryMethod is the BinaryMethod, not the local variable.
I don&apos;t see how we can come up with an API that would be different if the binary methods has source attachment or not.

&gt; This contradicts the general contract of getParent(), and it is inconsistent
&gt; with the correct parent I see when I look at the annotations of an
&gt; ILocalVariable from a BinaryMethod with source attachment).
Please let me know how you do this.

&gt; [This is hopefully obsolete now:] I checked the new proposed API for
&gt; consistency with other APIs, and I didn&apos;t find any other jdt.core APIs which
&gt; return a [][] (except for char[][]). If for any reason we need to go with the
&gt; getParameterAnnotations() API, then the indexed API would be better, since it
&gt; would match IMethodBinding#getParameterAnnotations(int).
All methods to retrieve annotations right now are returning empty arrays. In this case we should go with the indexed version. At least it would be consistent for both types of methods: source and binary.

What would be an API that returns local variables for binary methods without source attachment ?
Before we do more work on this, we need to agree on the API contract, otherwise it is a waste of time.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1884881</commentid>
    <comment_count>19</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2011-02-17 09:07:01 -0500</bug_when>
    <thetext>(In reply to comment #18)
&gt; &gt; This contradicts the general contract of getParent(), and it is inconsistent
&gt; &gt; with the correct parent I see when I look at the annotations of an
&gt; &gt; ILocalVariable from a BinaryMethod with source attachment).
&gt; Please let me know how you do this.

- have the JavaElement view installed
- open a binary class with source attachments and select the name of an annotated parameter
- open the JavaElement view
- click the leftmost view toolbar button (codeSelect)
- expand the ANNOTATIONS node and check the children of the first annotation</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1884888</commentid>
    <comment_count>20</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2011-02-17 09:13:09 -0500</bug_when>
    <thetext>&gt; What would be an API that returns local variables for binary methods without
&gt; source attachment ?

See comment 3. Like for ITypeParameters of binary members without source attachments, the source range and name range would of course be invalid, and getFlags() can probably not return &quot;final&quot; if source is not available.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1884913</commentid>
    <comment_count>21</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-02-17 09:47:45 -0500</bug_when>
    <thetext>(In reply to comment #20)
&gt; - have the JavaElement view installed
&gt; - open a binary class with source attachments and select the name of an
&gt; annotated parameter
&gt; - open the JavaElement view
&gt; - click the leftmost view toolbar button (codeSelect)
&gt; - expand the ANNOTATIONS node and check the children of the first annotation
This is the local variable defined by the SelectionEngine. I&apos;ll see how I can &quot;insert&quot; such local variables inside the current patch.
When using directly the IMethod, a binary method doesn&apos;t use its source attachment to return parameter annotations.
I&apos;ll see what I can do.

But as you say, the modifiers/positions of this local variable would be wrong for a binary method even if there is a source attachment.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1884957</commentid>
    <comment_count>22</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2011-02-17 10:24:20 -0500</bug_when>
    <thetext>(In reply to comment #21)
&gt; But as you say, the modifiers/positions of this local variable would be wrong
&gt; for a binary method even if there is a source attachment.

I only said the ranges can&apos;t be available if there&apos;s no source. If source is available, the similar IType#getTypeParameters() resolves correct name/source ranges, but the bounds are from the class file. I would expect the same from ILocalVariable (ranges from source, but flags and annotations from class file).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1884962</commentid>
    <comment_count>23</comment_count>
      <attachid>189195</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-02-17 10:29:47 -0500</bug_when>
    <thetext>Created attachment 189195
Proposed fix + regression tests

new patch that defines the following API:
ILocalVariable[] getParameters() on org.eclipse.jdt.core.IMethod.

Markus, let me know if this meets all your criteria.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1884963</commentid>
    <comment_count>24</comment_count>
      <attachid>189196</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-02-17 10:30:43 -0500</bug_when>
    <thetext>Created attachment 189196
Proposed change for JavaElementView code

Updated change to match the new API.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1884977</commentid>
    <comment_count>25</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-02-17 10:44:56 -0500</bug_when>
    <thetext>(In reply to comment #22)
&gt; I only said the ranges can&apos;t be available if there&apos;s no source. If source is
&gt; available, the similar IType#getTypeParameters() resolves correct name/source
&gt; ranges, but the bounds are from the class file. I would expect the same from
&gt; ILocalVariable (ranges from source, but flags and annotations from class file).
This only works if the corresponding elements exists in the model. By definition this is not true for local variable element.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1885004</commentid>
    <comment_count>26</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2011-02-17 11:17:03 -0500</bug_when>
    <thetext>(In reply to comment #24)
Looks pretty good.

Apart from the missing source ranges in binaries with source, I found a problem with the following path in the JE view: BinaryMethod -&gt; PARAMETERS -&gt; LocalVariable -&gt; ANNOTATIONS -&gt; Annotation -&gt; PARENT:
The parent is the BinaryMethod, but it should be the LocalVariable.

Looks like the problem is that BinaryMethod#getAnnotations(..) calls Util.getAnnotation(this, ...), but it should pass the new local variable instead of &apos;this&apos;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1885026</commentid>
    <comment_count>27</comment_count>
      <attachid>189202</attachid>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2011-02-17 11:32:05 -0500</bug_when>
    <thetext>Created attachment 189202
Updated patch for JavaElement View

Source methods are good. For binary methods with source,
getParameters()[0].getFlags() does not include &quot;final&quot;, but the element from codeSelect also extracts this from source.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1885221</commentid>
    <comment_count>28</comment_count>
      <attachid>189233</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-02-17 17:07:46 -0500</bug_when>
    <thetext>Created attachment 189233
Proposed fix + regression tests

I think this patch handles all remaining issues.
Local variables from binary with source attachment has source range, name ranges and flags.
Markus, please give it a try. If ok, I&apos;ll release tomorrow.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1885583</commentid>
    <comment_count>29</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2011-02-18 10:19:54 -0500</bug_when>
    <thetext>Parent chains are good now and parameters in binaries with source also have correct source ranges. Only the annotations on such parameters are still missing their source range.

I saw that the annotation offsets are already available in SourceMapper#enterAbstractMethod(MethodInfo) in methodInfo.annotations. They should also be stored and later returned in SourceMapper#get*Range(..).

Copy/paste error in SourceMapper#enterAbstractMethod(MethodInfo): Second
&quot;// type parameters&quot; comment is wrong.

The new constructor of LocalVariable is a bit strange, since the only possible argument to the &quot;IAnnotation[] annotations&quot; parameter is Annotation.NO_ANNOTATIONS. I would remove the new constructor and just use the old one (with &quot;null&quot; as argument).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1885888</commentid>
    <comment_count>30</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-02-18 17:23:32 -0500</bug_when>
    <thetext>(In reply to comment #29)
&gt; The new constructor of LocalVariable is a bit strange, since the only possible
&gt; argument to the &quot;IAnnotation[] annotations&quot; parameter is
&gt; Annotation.NO_ANNOTATIONS. I would remove the new constructor and just use the
&gt; old one (with &quot;null&quot; as argument).
Passing null will require another method call to convert it to Annotation.NO_ANNOTATIONS. So I plan to keep the new constructor.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1886188</commentid>
    <comment_count>31</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2011-02-20 17:20:40 -0500</bug_when>
    <thetext>Olivier showed me that existing binary annotations (on method declaration) also don&apos;t have any positions, so I don&apos;t think this is an important feature any more. Feel free to forget this request or move it to RESOLVED/LATER.

Go for the last patch, although I would still remove the second LocalVariable constructor to make the code more readable, unless we have numbers that prove the performance impact. I&apos;d say a decent JIT should inline that method invocation anyway.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1886215</commentid>
    <comment_count>32</comment_count>
      <attachid>189390</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-02-20 19:55:01 -0500</bug_when>
    <thetext>Created attachment 189390
Proposed fix + regression tests</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1886216</commentid>
    <comment_count>33</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-02-20 19:55:24 -0500</bug_when>
    <thetext>Released for 3.7M6.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1895135</commentid>
    <comment_count>34</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2011-03-08 12:12:35 -0500</bug_when>
    <thetext>Verified for 3.7M6 using build I20110307-0800.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1922718</commentid>
    <comment_count>35</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-05-03 04:45:40 -0400</bug_when>
    <thetext>Reverified for 3.7 RC0 using Build id: I20110428-0848</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>188592</attachid>
            <date>2011-02-09 10:16:00 -0500</date>
            <delta_ts>2011-02-09 11:31:14 -0500</delta_ts>
            <desc>Draft patch</desc>
            <filename>bug_334783.txt</filename>
            <type>text/plain</type>
            <size>12651</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvY29yZS9JTWV0aG9kLmphdmENCj09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVs
L29yZy9lY2xpcHNlL2pkdC9jb3JlL0lNZXRob2QuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9u
IDEuMzMNCmRpZmYgLXUgLXIxLjMzIElNZXRob2QuamF2YQ0KLS0tIG1vZGVsL29yZy9lY2xpcHNl
L2pkdC9jb3JlL0lNZXRob2QuamF2YQkyMyBBcHIgMjAxMCAxMzoxMTowNSAtMDAwMAkxLjMzDQor
KysgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2NvcmUvSU1ldGhvZC5qYXZhCTkgRmViIDIwMTEgMTU6
MDg6MjAgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQot
ICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEwIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0K
KyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4N
CiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlp
bmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0
aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhp
cyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC0xMDAsNiArMTAwLDE2IEBA
DQogICogQHJldHVybiB0aGUgbnVtYmVyIG9mIHBhcmFtZXRlcnMgb2YgdGhpcyBtZXRob2QNCiAg
Ki8NCiBpbnQgZ2V0TnVtYmVyT2ZQYXJhbWV0ZXJzKCk7DQorDQorLyoqDQorICogUmV0dXJucyBh
biBhcnJheSBvZiBhbm5vdGF0aW9ucyBmb3IgdGhlIHBhcmFtZXRlciBhdCB0aGUgZ2l2ZW4gaW5k
ZXguDQorICogDQorICogQHBhcmFtIGluZGV4IHRoZSBpbmRleCBvciBvcmRlciBvZiB0aGUgbWV0
aG9kIHBhcmFtZXRlci4NCisgKiBAcmV0dXJuIHRoZSBhcnJheSBvZiBhbm5vdGF0aW9ucyBmb3Ig
dGhlIHNwZWNpZmllZCBwYXJhbWV0ZXINCisgKiBAdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbg0K
KyAqIEBzaW5jZSAzLjcNCisgKi8NCitJQW5ub3RhdGlvbltdIGdldFBhcmFtZXRlckFubm90YXRp
b25zKGludCBpbmRleCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbjsNCiAvKioNCiAgKiBSZXR1
cm5zIHRoZSBiaW5kaW5nIGtleSBmb3IgdGhpcyBtZXRob2Qgb25seSBpZiB0aGUgZ2l2ZW4gbWV0
aG9kIGlzIHtAbGluayAjaXNSZXNvbHZlZCgpIHJlc29sdmVkfS4NCiAgKiBBIGJpbmRpbmcga2V5
IGlzIGEga2V5IHRoYXQgdW5pcXVlbHkgaWRlbnRpZmllcyB0aGlzIG1ldGhvZC4gSXQgYWxsb3dz
IGFjY2Vzcw0KSW5kZXg6IG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0JpbmFy
eU1ldGhvZC5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9CaW5h
cnlNZXRob2QuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTExDQpkaWZmIC11IC1yMS4x
MTEgQmluYXJ5TWV0aG9kLmphdmENCi0tLSBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29yZS9CaW5hcnlNZXRob2QuamF2YQkyMCBKYW4gMjAxMSAwMjoyODo0MyAtMDAwMAkxLjExMQ0K
KysrIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0JpbmFyeU1ldGhvZC5qYXZh
CTkgRmViIDIwMTEgMTU6MDg6MjAgLTAwMDANCkBAIC02MSw2ICs2MSwxNSBAQA0KIAlJQmluYXJ5
QW5ub3RhdGlvbltdIGJpbmFyeUFubm90YXRpb25zID0gaW5mby5nZXRBbm5vdGF0aW9ucygpOw0K
IAlyZXR1cm4gZ2V0QW5ub3RhdGlvbnMoYmluYXJ5QW5ub3RhdGlvbnMsIGluZm8uZ2V0VGFnQml0
cygpKTsNCiB9DQorLyoqDQorICogQHNlZSBJTWV0aG9kI2dldFBhcmFtZXRlckFubm90YXRpb25z
KGludCkNCisgKi8NCitwdWJsaWMgSUFubm90YXRpb25bXSBnZXRQYXJhbWV0ZXJBbm5vdGF0aW9u
cyhpbnQgaW5kZXgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gew0KKwlJQmluYXJ5TWV0aG9k
IGluZm8gPSAoSUJpbmFyeU1ldGhvZCkgZ2V0RWxlbWVudEluZm8oKTsNCisJSUJpbmFyeUFubm90
YXRpb25bXSBiaW5hcnlBbm5vdGF0aW9ucyA9IGluZm8uZ2V0UGFyYW1ldGVyQW5ub3RhdGlvbnMo
aW5kZXgpOw0KKwlyZXR1cm4gZ2V0QW5ub3RhdGlvbnMoYmluYXJ5QW5ub3RhdGlvbnMsIGluZm8u
Z2V0VGFnQml0cygpKTsNCit9DQorDQogcHVibGljIElNZW1iZXJWYWx1ZVBhaXIgZ2V0RGVmYXVs
dFZhbHVlKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7DQogCUlCaW5hcnlNZXRob2QgaW5m
byA9IChJQmluYXJ5TWV0aG9kKSBnZXRFbGVtZW50SW5mbygpOw0KIAlPYmplY3QgZGVmYXVsdFZh
bHVlID0gaW5mby5nZXREZWZhdWx0VmFsdWUoKTsNCkluZGV4OiBtb2RlbC9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29yZS9Db21waWxhdGlvblVuaXRTdHJ1Y3R1cmVSZXF1ZXN0b3IuamF2YQ0K
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNv
cmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvQ29tcGlsYXRpb25Vbml0U3Ry
dWN0dXJlUmVxdWVzdG9yLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjg3DQpkaWZmIC11
IC1yMS44NyBDb21waWxhdGlvblVuaXRTdHJ1Y3R1cmVSZXF1ZXN0b3IuamF2YQ0KLS0tIG1vZGVs
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0NvbXBpbGF0aW9uVW5pdFN0cnVjdHVyZVJl
cXVlc3Rvci5qYXZhCTI4IEp1bCAyMDEwIDE2OjE3OjAxIC0wMDAwCTEuODcNCisrKyBtb2RlbC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Db21waWxhdGlvblVuaXRTdHJ1Y3R1cmVSZXF1
ZXN0b3IuamF2YQk5IEZlYiAyMDExIDE1OjA4OjIwIC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAv
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMCBJQk0g
Q29ycG9yYXRpb24gYW5kIG90aGVycy4NCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJN
IENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBw
cm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWls
YWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0K
ICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxl
IGF0DQpAQCAtMjIsNiArMjIsNyBAQA0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21w
aWxlci5DaGFyT3BlcmF0aW9uOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxl
ci5JUHJvYmxlbTsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLklT
b3VyY2VFbGVtZW50UmVxdWVzdG9yOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuYXN0LkFyZ3VtZW50Ow0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuYXN0LkFycmF5SW5pdGlhbGl6ZXI7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb21waWxlci5hc3QuQ2xhc3NMaXRlcmFsQWNjZXNzOw0KIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkV4cHJlc3Npb247DQpAQCAtNDI3LDggKzQy
OCw0NCBAQA0KIAkJCWFjY2VwdEFubm90YXRpb24oYW5ub3RhdGlvbiwgaW5mbywgaGFuZGxlKTsN
CiAJCX0NCiAJfQ0KKwkvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9MzM0NzgzDQorCS8vIFByb2Nlc3MgdGhlIHBhcmFtZXRlciBhbm5vdGF0aW9ucyBmcm9t
IHRoZSBhcmd1bWVudHMNCisJaWYgKG1ldGhvZEluZm8ubm9kZSAhPSBudWxsICYmIG1ldGhvZElu
Zm8ubm9kZS5hcmd1bWVudHMgIT0gbnVsbCkgew0KKwkJaW5mby5wYXJhbUFubm90YXRpb25zID0g
YWNjZXB0UGFyYW1Bbm5vdGF0aW9ucyhtZXRob2RJbmZvLm5vZGUuYXJndW1lbnRzLCBoYW5kbGUs
IG1ldGhvZEluZm8pOw0KKwl9DQogCXJldHVybiBpbmZvOw0KIH0NCitwcml2YXRlIEFubm90YXRp
b25bXVtdIGFjY2VwdFBhcmFtQW5ub3RhdGlvbnMoQXJndW1lbnRbXSBhcmd1bWVudHMsIEphdmFF
bGVtZW50IG1ldGhvZEhhbmRsZSwgTWV0aG9kSW5mbyBtZXRob2RJbmZvKSB7DQorCUFubm90YXRp
b25bXVtdIHBhcmFtQW5ub3RhdGlvbnMgPSBuZXcgQW5ub3RhdGlvblttZXRob2RJbmZvLm5vZGUu
YXJndW1lbnRzLmxlbmd0aF1bXTsNCisJDQorCWZvcihpbnQgaSA9IDA7IGkgPCBtZXRob2RJbmZv
Lm5vZGUuYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7DQorCQlBcmd1bWVudCBhcmd1bWVudCA9IG1l
dGhvZEluZm8ubm9kZS5hcmd1bWVudHNbaV07DQorCQlpZiAobWV0aG9kSW5mby5ub2RlLmFyZ3Vt
ZW50c1tpXS5hbm5vdGF0aW9ucyAhPSBudWxsKSB7DQorCQkJcGFyYW1Bbm5vdGF0aW9uc1tpXSA9
IG5ldyBBbm5vdGF0aW9uW2FyZ3VtZW50LmFubm90YXRpb25zLmxlbmd0aF07DQorCQkJZm9yIChp
bnQgIGogPSAwOyBqIDwgYXJndW1lbnQuYW5ub3RhdGlvbnMubGVuZ3RoOyBqKysgKSB7DQorCQkJ
CW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQW5ub3RhdGlvbiBhbm5vdGF0
aW9uID0gYXJndW1lbnQuYW5ub3RhdGlvbnNbaV07DQorCQkJCQ0KKwkJCQlTdHJpbmcgbmFtZVN0
cmluZyA9IG5ldyBTdHJpbmcoQ2hhck9wZXJhdGlvbi5jb25jYXRXaXRoKGFubm90YXRpb24udHlw
ZS5nZXRUeXBlTmFtZSgpLCAnLicpKTsNCisJCQkJTG9jYWxWYXJpYWJsZSBsb2NhbFZhciA9IG51
bGw7DQorCQkJCVN0cmluZyBwYXJhbVR5cGVTaWcgPSBKYXZhTW9kZWxNYW5hZ2VyLmdldEphdmFN
b2RlbE1hbmFnZXIoKS5pbnRlcm4oU2lnbmF0dXJlLmNyZWF0ZVR5cGVTaWduYXR1cmUobWV0aG9k
SW5mby5wYXJhbWV0ZXJUeXBlc1tpXSwgZmFsc2UpKTsNCisJCQkJLy8gQ3JlYXRlIGEgSUxvY2Fs
VmFyaWFibGUgb24gdGhlIGZseSB3aXRoIGFscmVhZHkgZ2l2ZW4gaW5mb3JtYXRpb24gYXMgdGhp
cyBpcyBhIHBzZXVkby1lbGVtZW50IGFueXdheS4NCisJCQkJbG9jYWxWYXIgPSBuZXcgTG9jYWxW
YXJpYWJsZSgNCisJCQkJCQltZXRob2RIYW5kbGUsDQorCQkJCQkJbmV3IFN0cmluZyhhcmd1bWVu
dC5uYW1lKSwNCisJCQkJCQlhcmd1bWVudC5kZWNsYXJhdGlvblNvdXJjZVN0YXJ0LA0KKwkJCQkJ
CWFyZ3VtZW50LiBkZWNsYXJhdGlvblNvdXJjZUVuZCwNCisJCQkJCQlhcmd1bWVudC5zb3VyY2VT
dGFydCwNCisJCQkJCQlhcmd1bWVudC5zb3VyY2VFbmQsDQorCQkJCQkJcGFyYW1UeXBlU2lnLA0K
KwkJCQkJCWFyZ3VtZW50LmFubm90YXRpb25zLA0KKwkJCQkJCWFyZ3VtZW50Lm1vZGlmaWVycywg
DQorCQkJCQkJdHJ1ZSk7DQorCQkJCXBhcmFtQW5ub3RhdGlvbnNbaV1bal0gPSBjcmVhdGVBbm5v
dGF0aW9uKGxvY2FsVmFyLCBuYW1lU3RyaW5nKTsgDQorCQkJfQ0KKwkJfQ0KKwl9DQorCXJldHVy
biBwYXJhbUFubm90YXRpb25zOw0KK30NCiAvKioNCiAgKiBAc2VlIElTb3VyY2VFbGVtZW50UmVx
dWVzdG9yDQogICovDQpJbmRleDogbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUv
U291cmNlTWV0aG9kLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNl
L29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3Jl
L1NvdXJjZU1ldGhvZC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS42OA0KZGlmZiAtdSAt
cjEuNjggU291cmNlTWV0aG9kLmphdmENCi0tLSBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29yZS9Tb3VyY2VNZXRob2QuamF2YQkyNyBKdW4gMjAwOCAxNjowMzo1MSAtMDAwMAkxLjY4
DQorKysgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvU291cmNlTWV0aG9kLmph
dmEJOSBGZWIgMjAxMSAxNTowODoyMCAtMDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMDggSUJNIENvcnBvcmF0
aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3Jh
dGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBh
bmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5k
ZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGlj
aCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAg
LTMxNiw0ICszMTYsMTIgQEANCiAJCWJ1ZmZlci5hcHBlbmQodGhpcy5vY2N1cnJlbmNlQ291bnQp
Ow0KIAl9DQogfQ0KKy8qKg0KKyAqIEBzZWUgSU1ldGhvZCNnZXRQYXJhbWV0ZXJBbm5vdGF0aW9u
cyhpbnQpDQorICovDQorcHVibGljIElBbm5vdGF0aW9uW10gZ2V0UGFyYW1ldGVyQW5ub3RhdGlv
bnMoaW50IGluZGV4KSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsNCisJT2JqZWN0IG9iamVj
dCA9IGdldEVsZW1lbnRJbmZvKCk7DQorCUlBbm5vdGF0aW9uW10gcGFyYW1Bbm5vdHMgPSAoKFNv
dXJjZU1ldGhvZEluZm8pIG9iamVjdCkuZ2V0UGFyYW1Bbm5vdGF0aW9ucyhpbmRleCk7DQorCXJl
dHVybiBwYXJhbUFubm90czsNCit9DQogfQ0KSW5kZXg6IG1vZGVsL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb3JlL1NvdXJjZU1ldGhvZEVsZW1lbnRJbmZvLmphdmENCj09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJD
UyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL1NvdXJjZU1ldGhvZEVsZW1lbnRJbmZvLmphdmEsdg0K
cmV0cmlldmluZyByZXZpc2lvbiAxLjIyDQpkaWZmIC11IC1yMS4yMiBTb3VyY2VNZXRob2RFbGVt
ZW50SW5mby5qYXZhDQotLS0gbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvU291
cmNlTWV0aG9kRWxlbWVudEluZm8uamF2YQkyNyBKdW4gMjAwOCAxNjowMzo1MCAtMDAwMAkxLjIy
DQorKysgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvU291cmNlTWV0aG9kRWxl
bWVudEluZm8uamF2YQk5IEZlYiAyMDExIDE1OjA4OjIwIC0wMDAwDQpAQCAtMSw1ICsxLDUgQEAN
CiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAwOCBJ
Qk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEg
SUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhp
cyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2
YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEu
MA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxh
YmxlIGF0DQpAQCAtMzgsNyArMzgsMTUgQEANCiAJICogRm9yIGV4YW1wbGUsIEhhc2h0YWJsZSBv
ciBqYXZhLnV0aWwuSGFzaHRhYmxlLg0KIAkgKi8NCiAJcHJvdGVjdGVkIGNoYXJbXVtdIGV4Y2Vw
dGlvblR5cGVzOw0KKwkNCisJLyoqDQorCSAqIEFycmF5IG9mIGFubm90YXRpb25zIGlmIGFueSBh
c3NvY2lhdGVkIHdpdGggdGhlIHBhcmFtZXRlcnMgb2YgdGhpcyBtZXRob2QuDQorCSAqLw0KKwlw
cm90ZWN0ZWQgQW5ub3RhdGlvbltdW10gcGFyYW1Bbm5vdGF0aW9uczsNCiANCisJcHVibGljIElB
bm5vdGF0aW9uW10gZ2V0UGFyYW1Bbm5vdGF0aW9ucyhpbnQgaW5kZXgpIHsNCisJCXJldHVybiB0
aGlzLnBhcmFtQW5ub3RhdGlvbnNbaW5kZXhdOw0KKwl9DQogCS8qDQogCSAqIFRoZSB0eXBlIHBh
cmFtZXRlcnMgb2YgdGhpcyBzb3VyY2UgdHlwZS4gRW1wdHkgaWYgbm9uZS4NCiAJICovDQojUCBv
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbA0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9tb2RlbC9UeXBlUmVzb2x2ZVRlc3RzLmphdmENCj09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJD
UyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVs
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9UeXBlUmVzb2x2ZVRlc3RzLmph
dmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjE0DQpkaWZmIC11IC1yMS4xNCBUeXBlUmVzb2x2
ZVRlc3RzLmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvVHlw
ZVJlc29sdmVUZXN0cy5qYXZhCTI3IEp1biAyMDA4IDE2OjAyOjQwIC0wMDAwCTEuMTQNCisrKyBz
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvVHlwZVJlc29sdmVUZXN0cy5qYXZh
CTkgRmViIDIwMTEgMTU6MDg6MjIgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDA4IElCTSBDb3Jwb3JhdGlv
biBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5k
IHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVy
IHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2gg
YWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC0x
MCw5ICsxMCwxMiBAQA0KICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KIHBhY2thZ2Ugb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWw7DQogDQoraW1wb3J0IGphdmEuaW8uSU9FeGNlcHRp
b247DQorDQogaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5Db3JlRXhjZXB0aW9uOw0K
IGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS4qOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy51dGlsLlV0aWw7DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b3JlLkxvY2FsVmFyaWFibGU7DQogDQogaW1wb3J0IGp1bml0LmZyYW1ld29yay5UZXN0Ow0KIA0K
QEAgLTI5OSw0ICszMDIsNzEgQEANCiAJCSJwNC5BLklubmVyIiwNCiAJCXR5cGVzKTsNCiB9DQor
LyoqDQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTMzNDc4MyINCisgKi8NCitwdWJsaWMgdm9pZCB0ZXN0UGFyYW1Bbm5vdGF0aW9ucygpIHRo
cm93cyBDb3JlRXhjZXB0aW9uIHsNCisJdHJ5IHsNCisJCWNyZWF0ZUphdmFQcm9qZWN0KCJQIiwg
bmV3IFN0cmluZ1tdIHsic3JjIn0sIG5ldyBTdHJpbmdbXSB7IkpDTDE1X0xJQiJ9LCAiYmluIiwg
IjEuNSIpOw0KKwkJU3RyaW5nIHNvdXJjZSA9ICJwYWNrYWdlIHA7IiArDQorCQkJCSJwdWJsaWMg
Y2xhc3MgWDxUPiB7XG4iICsNCisJCQkJIiAgWDxTdHJpbmc+IGZpZWxkO1xuIiArDQorCQkJCSIJ
QEluamVjdCAiICsNCisJCQkJIglwdWJsaWMgdm9pZCBUZXN0KEBEZWZhdWx0IFN0cmluZyBwcm9j
ZXNzb3IpIHt9IiArDQorCQkJCSJ9IiArDQorCQkJCSJAaW50ZXJmYWNlIEluamVjdHtcbiIgKw0K
KwkJCQkifSIgKw0KKwkJCQkiQGludGVyZmFjZSBEZWZhdWx0e1xuIiArDQorCQkJCSJ9IjsNCisJ
CWNyZWF0ZUZvbGRlcigiL1Avc3JjL3AiKTsNCisJCWNyZWF0ZUZpbGUoDQorCQkJIi9QL3NyYy9w
L1guamF2YSIsDQorCQkJc291cmNlDQorCQkpOw0KKwkJd2FpdEZvckF1dG9CdWlsZCgpOw0KKwkJ
DQorCQlJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIi9QL3NyYy9w
L1guamF2YSIpOyANCisJCUlKYXZhRWxlbWVudFtdIHZhcmlhYmxlID0gKChJQ29kZUFzc2lzdCkg
dW5pdCkuY29kZVNlbGVjdChzb3VyY2UuaW5kZXhPZigicHJvY2Vzc29yIiksICJwcm9jZXNzb3Ii
Lmxlbmd0aCgpKTsNCisNCisJCWFzc2VydEVxdWFscygxLCB2YXJpYWJsZS5sZW5ndGgpOw0KKwkJ
U3RyaW5nIGFubm90YXRpb25TdHJpbmcgPSAiQERlZmF1bHQgKG5vdCBvcGVuKSBbaW4gcHJvY2Vz
c29yIFtpbiBUZXN0KFN0cmluZykgW2luIFggW2luIFguamF2YSBbaW4gcCBbaW4gc3JjIFtpbiBQ
XV1dXV1dXSI7DQorCQlhc3NlcnRFcXVhbHMoYW5ub3RhdGlvblN0cmluZywgKChMb2NhbFZhcmlh
YmxlKXZhcmlhYmxlWzBdKS5nZXRBbm5vdGF0aW9ucygpWzBdLnRvU3RyaW5nKCkpOw0KKwkJSVR5
cGUgdHlwZSA9IHVuaXQuZ2V0VHlwZSgiWCIpOw0KKwkJDQorCQlJTWV0aG9kIG1ldGhvZCA9IHR5
cGUuZ2V0TWV0aG9kcygpWzBdOw0KKwkJYXNzZXJ0RXF1YWxzKGFubm90YXRpb25TdHJpbmcsIG1l
dGhvZC5nZXRQYXJhbWV0ZXJBbm5vdGF0aW9ucygwKVswXS50b1N0cmluZygpKTsNCisJfSBmaW5h
bGx5IHsNCisJCWRlbGV0ZVByb2plY3QoIlAiKTsNCisJfQ0KK30NCisvKioNCisgKiBAc2VlICJo
dHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzM0NzgzIg0KKyAq
Lw0KK3B1YmxpYyB2b2lkIHRlc3RQYXJhbUFubm90YXRpb25zMigpIHRocm93cyBDb3JlRXhjZXB0
aW9uLCBJT0V4Y2VwdGlvbiB7DQorCXRyeSB7DQorCQlJSmF2YVByb2plY3QgcHJvamVjdCA9IGNy
ZWF0ZUphdmFQcm9qZWN0KCJQIiwgbmV3IFN0cmluZ1tdIHsic3JjIn0sIG5ldyBTdHJpbmdbXSB7
IkpDTDE1X0xJQiJ9LCAiYmluIiwgIjEuNSIpOw0KKwkJU3RyaW5nW10gcGF0aEFuZENvbnRlbnRz
ID0gbmV3IFN0cmluZ1tdeyJwL1guamF2YSIsDQorCQkJCSJwYWNrYWdlIHA7IiArDQorCQkJCSJw
dWJsaWMgY2xhc3MgWDxUPiB7XG4iICsNCisJCQkJIiAgWDxTdHJpbmc+IGZpZWxkO1xuIiArDQor
CQkJCSIJQEluamVjdCAiICsNCisJCQkJIglwdWJsaWMgdm9pZCBUZXN0KEBEZWZhdWx0IFN0cmlu
ZyBwcm9jZXNzb3IpIHt9IiArDQorCQkJCSJ9IiArDQorCQkJCSJAaW50ZXJmYWNlIEluamVjdHtc
biIgKw0KKwkJCQkifSIgKw0KKwkJCQkiQGludGVyZmFjZSBEZWZhdWx0e1xuIiArDQorCQkJCSJ9
In07DQorCQlhZGRMaWJyYXJ5KHByb2plY3QsICJsaWIzMzQ3ODMuamFyIiwgImxpYnNyYy56aXAi
LCBwYXRoQW5kQ29udGVudHMsIEphdmFDb3JlLlZFUlNJT05fMV81KTsNCisJCQ0KKwkJd2FpdEZv
ckF1dG9CdWlsZCgpOw0KKwkJSVBhY2thZ2VGcmFnbWVudFJvb3Qgcm9vdCA9IHByb2plY3QuZ2V0
UGFja2FnZUZyYWdtZW50Um9vdChnZXRGaWxlKCIvUC9saWIzMzQ3ODMuamFyIikpOw0KKwkJSVR5
cGUgdHlwZSA9IHJvb3QuZ2V0UGFja2FnZUZyYWdtZW50KCJwIikuZ2V0Q2xhc3NGaWxlKCJYLmNs
YXNzIikuZ2V0VHlwZSgpOw0KKwkJU3RyaW5nIGFubm90YXRpb25TdHJpbmcgPSAiQHAuRGVmYXVs
dCAobm90IG9wZW4pIFtpbiBUZXN0KGphdmEubGFuZy5TdHJpbmcpIFtpbiBYIFtpbiBYLmNsYXNz
IFtpbiBwIFtpbiBsaWIzMzQ3ODMuamFyIFtpbiBQXV1dXV1dIjsNCisJCQ0KKwkJSU1ldGhvZCBt
ZXRob2QgPSB0eXBlLmdldE1ldGhvZHMoKVsxXTsNCisJCWFzc2VydEVxdWFscyhhbm5vdGF0aW9u
U3RyaW5nLCBtZXRob2QuZ2V0UGFyYW1ldGVyQW5ub3RhdGlvbnMoMClbMF0udG9TdHJpbmcoKSk7
DQorCX0gZmluYWxseSB7DQorCQlkZWxldGVQcm9qZWN0KCJQIik7DQorCX0NCit9DQogfQ0K
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>188599</attachid>
            <date>2011-02-09 11:31:00 -0500</date>
            <delta_ts>2011-02-14 07:40:16 -0500</delta_ts>
            <desc>Updated patch</desc>
            <filename>bug_334783.txt</filename>
            <type>text/plain</type>
            <size>12652</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvY29yZS9JTWV0aG9kLmphdmENCj09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVs
L29yZy9lY2xpcHNlL2pkdC9jb3JlL0lNZXRob2QuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9u
IDEuMzMNCmRpZmYgLXUgLXIxLjMzIElNZXRob2QuamF2YQ0KLS0tIG1vZGVsL29yZy9lY2xpcHNl
L2pkdC9jb3JlL0lNZXRob2QuamF2YQkyMyBBcHIgMjAxMCAxMzoxMTowNSAtMDAwMAkxLjMzDQor
KysgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2NvcmUvSU1ldGhvZC5qYXZhCTkgRmViIDIwMTEgMTY6
Mjg6NTMgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQot
ICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEwIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0K
KyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4N
CiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlp
bmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0
aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhp
cyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC0xMDAsNiArMTAwLDE2IEBA
DQogICogQHJldHVybiB0aGUgbnVtYmVyIG9mIHBhcmFtZXRlcnMgb2YgdGhpcyBtZXRob2QNCiAg
Ki8NCiBpbnQgZ2V0TnVtYmVyT2ZQYXJhbWV0ZXJzKCk7DQorDQorLyoqDQorICogUmV0dXJucyB0
aGUgYXJyYXkgb2YgYW5ub3RhdGlvbnMgZm9yIHRoZSBwYXJhbWV0ZXIgYXQgdGhlIGdpdmVuIGlu
ZGV4Lg0KKyAqIA0KKyAqIEBwYXJhbSBpbmRleCB0aGUgaW5kZXggb3Igb3JkZXIgb2YgdGhlIG1l
dGhvZCBwYXJhbWV0ZXIuDQorICogQHJldHVybiB0aGUgYXJyYXkgb2YgYW5ub3RhdGlvbnMgZm9y
IHRoZSBzcGVjaWZpZWQgcGFyYW1ldGVyDQorICogQHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24N
CisgKiBAc2luY2UgMy43DQorICovDQorSUFubm90YXRpb25bXSBnZXRQYXJhbWV0ZXJBbm5vdGF0
aW9ucyhpbnQgaW5kZXgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb247DQogLyoqDQogICogUmV0
dXJucyB0aGUgYmluZGluZyBrZXkgZm9yIHRoaXMgbWV0aG9kIG9ubHkgaWYgdGhlIGdpdmVuIG1l
dGhvZCBpcyB7QGxpbmsgI2lzUmVzb2x2ZWQoKSByZXNvbHZlZH0uDQogICogQSBiaW5kaW5nIGtl
eSBpcyBhIGtleSB0aGF0IHVuaXF1ZWx5IGlkZW50aWZpZXMgdGhpcyBtZXRob2QuIEl0IGFsbG93
cyBhY2Nlc3MNCkluZGV4OiBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9CaW5h
cnlNZXRob2QuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvQmlu
YXJ5TWV0aG9kLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjExMQ0KZGlmZiAtdSAtcjEu
MTExIEJpbmFyeU1ldGhvZC5qYXZhDQotLS0gbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvcmUvQmluYXJ5TWV0aG9kLmphdmEJMjAgSmFuIDIwMTEgMDI6Mjg6NDMgLTAwMDAJMS4xMTEN
CisrKyBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9CaW5hcnlNZXRob2QuamF2
YQk5IEZlYiAyMDExIDE2OjI4OjUzIC0wMDAwDQpAQCAtNjEsNiArNjEsMTUgQEANCiAJSUJpbmFy
eUFubm90YXRpb25bXSBiaW5hcnlBbm5vdGF0aW9ucyA9IGluZm8uZ2V0QW5ub3RhdGlvbnMoKTsN
CiAJcmV0dXJuIGdldEFubm90YXRpb25zKGJpbmFyeUFubm90YXRpb25zLCBpbmZvLmdldFRhZ0Jp
dHMoKSk7DQogfQ0KKy8qKg0KKyAqIEBzZWUgSU1ldGhvZCNnZXRQYXJhbWV0ZXJBbm5vdGF0aW9u
cyhpbnQpDQorICovDQorcHVibGljIElBbm5vdGF0aW9uW10gZ2V0UGFyYW1ldGVyQW5ub3RhdGlv
bnMoaW50IGluZGV4KSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsNCisJSUJpbmFyeU1ldGhv
ZCBpbmZvID0gKElCaW5hcnlNZXRob2QpIGdldEVsZW1lbnRJbmZvKCk7DQorCUlCaW5hcnlBbm5v
dGF0aW9uW10gYmluYXJ5QW5ub3RhdGlvbnMgPSBpbmZvLmdldFBhcmFtZXRlckFubm90YXRpb25z
KGluZGV4KTsNCisJcmV0dXJuIGdldEFubm90YXRpb25zKGJpbmFyeUFubm90YXRpb25zLCBpbmZv
LmdldFRhZ0JpdHMoKSk7DQorfQ0KKw0KIHB1YmxpYyBJTWVtYmVyVmFsdWVQYWlyIGdldERlZmF1
bHRWYWx1ZSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gew0KIAlJQmluYXJ5TWV0aG9kIGlu
Zm8gPSAoSUJpbmFyeU1ldGhvZCkgZ2V0RWxlbWVudEluZm8oKTsNCiAJT2JqZWN0IGRlZmF1bHRW
YWx1ZSA9IGluZm8uZ2V0RGVmYXVsdFZhbHVlKCk7DQpJbmRleDogbW9kZWwvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvcmUvQ29tcGlsYXRpb25Vbml0U3RydWN0dXJlUmVxdWVzdG9yLmphdmEN
Cj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5j
b3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0NvbXBpbGF0aW9uVW5pdFN0
cnVjdHVyZVJlcXVlc3Rvci5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS44Nw0KZGlmZiAt
dSAtcjEuODcgQ29tcGlsYXRpb25Vbml0U3RydWN0dXJlUmVxdWVzdG9yLmphdmENCi0tLSBtb2Rl
bC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Db21waWxhdGlvblVuaXRTdHJ1Y3R1cmVS
ZXF1ZXN0b3IuamF2YQkyOCBKdWwgMjAxMCAxNjoxNzowMSAtMDAwMAkxLjg3DQorKysgbW9kZWwv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvQ29tcGlsYXRpb25Vbml0U3RydWN0dXJlUmVx
dWVzdG9yLmphdmEJOSBGZWIgMjAxMSAxNjoyODo1MyAtMDAwMA0KQEAgLTEsNSArMSw1IEBADQog
LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJN
IENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMg
cHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFp
bGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAN
CiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJs
ZSBhdA0KQEAgLTIyLDYgKzIyLDcgQEANCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuY29t
cGlsZXIuQ2hhck9wZXJhdGlvbjsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGls
ZXIuSVByb2JsZW07DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5J
U291cmNlRWxlbWVudFJlcXVlc3RvcjsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmFzdC5Bcmd1bWVudDsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmFzdC5BcnJheUluaXRpYWxpemVyOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29tcGlsZXIuYXN0LkNsYXNzTGl0ZXJhbEFjY2VzczsNCiBpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5FeHByZXNzaW9uOw0KQEAgLTQyNyw4ICs0
MjgsNDQgQEANCiAJCQlhY2NlcHRBbm5vdGF0aW9uKGFubm90YXRpb24sIGluZm8sIGhhbmRsZSk7
DQogCQl9DQogCX0NCisJLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTMzNDc4Mw0KKwkvLyBQcm9jZXNzIHRoZSBwYXJhbWV0ZXIgYW5ub3RhdGlvbnMgZnJv
bSB0aGUgYXJndW1lbnRzDQorCWlmIChtZXRob2RJbmZvLm5vZGUgIT0gbnVsbCAmJiBtZXRob2RJ
bmZvLm5vZGUuYXJndW1lbnRzICE9IG51bGwpIHsNCisJCWluZm8ucGFyYW1Bbm5vdGF0aW9ucyA9
IGFjY2VwdFBhcmFtQW5ub3RhdGlvbnMobWV0aG9kSW5mby5ub2RlLmFyZ3VtZW50cywgaGFuZGxl
LCBtZXRob2RJbmZvKTsNCisJfQ0KIAlyZXR1cm4gaW5mbzsNCiB9DQorcHJpdmF0ZSBBbm5vdGF0
aW9uW11bXSBhY2NlcHRQYXJhbUFubm90YXRpb25zKEFyZ3VtZW50W10gYXJndW1lbnRzLCBKYXZh
RWxlbWVudCBtZXRob2RIYW5kbGUsIE1ldGhvZEluZm8gbWV0aG9kSW5mbykgew0KKwlBbm5vdGF0
aW9uW11bXSBwYXJhbUFubm90YXRpb25zID0gbmV3IEFubm90YXRpb25bbWV0aG9kSW5mby5ub2Rl
LmFyZ3VtZW50cy5sZW5ndGhdW107DQorCQ0KKwlmb3IoaW50IGkgPSAwOyBpIDwgbWV0aG9kSW5m
by5ub2RlLmFyZ3VtZW50cy5sZW5ndGg7IGkrKykgew0KKwkJQXJndW1lbnQgYXJndW1lbnQgPSBt
ZXRob2RJbmZvLm5vZGUuYXJndW1lbnRzW2ldOw0KKwkJaWYgKG1ldGhvZEluZm8ubm9kZS5hcmd1
bWVudHNbaV0uYW5ub3RhdGlvbnMgIT0gbnVsbCkgew0KKwkJCXBhcmFtQW5ub3RhdGlvbnNbaV0g
PSBuZXcgQW5ub3RhdGlvblthcmd1bWVudC5hbm5vdGF0aW9ucy5sZW5ndGhdOw0KKwkJCWZvciAo
aW50ICBqID0gMDsgaiA8IGFyZ3VtZW50LmFubm90YXRpb25zLmxlbmd0aDsgaisrICkgew0KKwkJ
CQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFubm90YXRpb24gYW5ub3Rh
dGlvbiA9IGFyZ3VtZW50LmFubm90YXRpb25zW2pdOw0KKwkJCQkNCisJCQkJU3RyaW5nIG5hbWVT
dHJpbmcgPSBuZXcgU3RyaW5nKENoYXJPcGVyYXRpb24uY29uY2F0V2l0aChhbm5vdGF0aW9uLnR5
cGUuZ2V0VHlwZU5hbWUoKSwgJy4nKSk7DQorCQkJCUxvY2FsVmFyaWFibGUgbG9jYWxWYXIgPSBu
dWxsOw0KKwkJCQlTdHJpbmcgcGFyYW1UeXBlU2lnID0gSmF2YU1vZGVsTWFuYWdlci5nZXRKYXZh
TW9kZWxNYW5hZ2VyKCkuaW50ZXJuKFNpZ25hdHVyZS5jcmVhdGVUeXBlU2lnbmF0dXJlKG1ldGhv
ZEluZm8ucGFyYW1ldGVyVHlwZXNbaV0sIGZhbHNlKSk7DQorCQkJCS8vIENyZWF0ZSBhIElMb2Nh
bFZhcmlhYmxlIG9uIHRoZSBmbHkgd2l0aCBhbHJlYWR5IGdpdmVuIGluZm9ybWF0aW9uIGFzIHRo
aXMgaXMgYSBwc2V1ZG8tZWxlbWVudCBhbnl3YXkuDQorCQkJCWxvY2FsVmFyID0gbmV3IExvY2Fs
VmFyaWFibGUoDQorCQkJCQkJbWV0aG9kSGFuZGxlLA0KKwkJCQkJCW5ldyBTdHJpbmcoYXJndW1l
bnQubmFtZSksDQorCQkJCQkJYXJndW1lbnQuZGVjbGFyYXRpb25Tb3VyY2VTdGFydCwNCisJCQkJ
CQlhcmd1bWVudC4gZGVjbGFyYXRpb25Tb3VyY2VFbmQsDQorCQkJCQkJYXJndW1lbnQuc291cmNl
U3RhcnQsDQorCQkJCQkJYXJndW1lbnQuc291cmNlRW5kLA0KKwkJCQkJCXBhcmFtVHlwZVNpZywN
CisJCQkJCQlhcmd1bWVudC5hbm5vdGF0aW9ucywNCisJCQkJCQlhcmd1bWVudC5tb2RpZmllcnMs
IA0KKwkJCQkJCXRydWUpOw0KKwkJCQlwYXJhbUFubm90YXRpb25zW2ldW2pdID0gY3JlYXRlQW5u
b3RhdGlvbihsb2NhbFZhciwgbmFtZVN0cmluZyk7IA0KKwkJCX0NCisJCX0NCisJfQ0KKwlyZXR1
cm4gcGFyYW1Bbm5vdGF0aW9uczsNCit9DQogLyoqDQogICogQHNlZSBJU291cmNlRWxlbWVudFJl
cXVlc3Rvcg0KICAqLw0KSW5kZXg6IG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3Jl
L1NvdXJjZU1ldGhvZC5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBz
ZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29y
ZS9Tb3VyY2VNZXRob2QuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNjgNCmRpZmYgLXUg
LXIxLjY4IFNvdXJjZU1ldGhvZC5qYXZhDQotLS0gbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvcmUvU291cmNlTWV0aG9kLmphdmEJMjcgSnVuIDIwMDggMTY6MDM6NTEgLTAwMDAJMS42
OA0KKysrIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL1NvdXJjZU1ldGhvZC5q
YXZhCTkgRmViIDIwMTEgMTY6Mjg6NTMgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDA4IElCTSBDb3Jwb3Jh
dGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9y
YXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0g
YW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVu
ZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hp
Y2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBA
IC0zMTYsNCArMzE2LDEyIEBADQogCQlidWZmZXIuYXBwZW5kKHRoaXMub2NjdXJyZW5jZUNvdW50
KTsNCiAJfQ0KIH0NCisvKioNCisgKiBAc2VlIElNZXRob2QjZ2V0UGFyYW1ldGVyQW5ub3RhdGlv
bnMoaW50KQ0KKyAqLw0KK3B1YmxpYyBJQW5ub3RhdGlvbltdIGdldFBhcmFtZXRlckFubm90YXRp
b25zKGludCBpbmRleCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7DQorCU9iamVjdCBvYmpl
Y3QgPSBnZXRFbGVtZW50SW5mbygpOw0KKwlJQW5ub3RhdGlvbltdIHBhcmFtQW5ub3RzID0gKChT
b3VyY2VNZXRob2RJbmZvKSBvYmplY3QpLmdldFBhcmFtQW5ub3RhdGlvbnMoaW5kZXgpOw0KKwly
ZXR1cm4gcGFyYW1Bbm5vdHM7DQorfQ0KIH0NCkluZGV4OiBtb2RlbC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29yZS9Tb3VyY2VNZXRob2RFbGVtZW50SW5mby5qYXZhDQo9PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpS
Q1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Tb3VyY2VNZXRob2RFbGVtZW50SW5mby5qYXZhLHYN
CnJldHJpZXZpbmcgcmV2aXNpb24gMS4yMg0KZGlmZiAtdSAtcjEuMjIgU291cmNlTWV0aG9kRWxl
bWVudEluZm8uamF2YQ0KLS0tIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL1Nv
dXJjZU1ldGhvZEVsZW1lbnRJbmZvLmphdmEJMjcgSnVuIDIwMDggMTY6MDM6NTAgLTAwMDAJMS4y
Mg0KKysrIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL1NvdXJjZU1ldGhvZEVs
ZW1lbnRJbmZvLmphdmEJOSBGZWIgMjAxMSAxNjoyODo1MyAtMDAwMA0KQEAgLTEsNSArMSw1IEBA
DQogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMDgg
SUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEx
IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRo
aXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBh
dmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYx
LjANCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWls
YWJsZSBhdA0KQEAgLTM4LDcgKzM4LDE1IEBADQogCSAqIEZvciBleGFtcGxlLCBIYXNodGFibGUg
b3IgamF2YS51dGlsLkhhc2h0YWJsZS4NCiAJICovDQogCXByb3RlY3RlZCBjaGFyW11bXSBleGNl
cHRpb25UeXBlczsNCisJDQorCS8qKg0KKwkgKiBBcnJheSBvZiBhbm5vdGF0aW9ucyBpZiBhbnkg
YXNzb2NpYXRlZCB3aXRoIHRoZSBwYXJhbWV0ZXJzIG9mIHRoaXMgbWV0aG9kLg0KKwkgKi8NCisJ
cHJvdGVjdGVkIEFubm90YXRpb25bXVtdIHBhcmFtQW5ub3RhdGlvbnM7DQogDQorCXB1YmxpYyBJ
QW5ub3RhdGlvbltdIGdldFBhcmFtQW5ub3RhdGlvbnMoaW50IGluZGV4KSB7DQorCQlyZXR1cm4g
dGhpcy5wYXJhbUFubm90YXRpb25zW2luZGV4XTsNCisJfQ0KIAkvKg0KIAkgKiBUaGUgdHlwZSBw
YXJhbWV0ZXJzIG9mIHRoaXMgc291cmNlIHR5cGUuIEVtcHR5IGlmIG5vbmUuDQogCSAqLw0KI1Ag
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwNCkluZGV4OiBzcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvbW9kZWwvVHlwZVJlc29sdmVUZXN0cy5qYXZhDQo9PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpS
Q1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2Rl
bC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvVHlwZVJlc29sdmVUZXN0cy5q
YXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4xNA0KZGlmZiAtdSAtcjEuMTQgVHlwZVJlc29s
dmVUZXN0cy5qYXZhDQotLS0gc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL1R5
cGVSZXNvbHZlVGVzdHMuamF2YQkyNyBKdW4gMjAwOCAxNjowMjo0MCAtMDAwMAkxLjE0DQorKysg
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL1R5cGVSZXNvbHZlVGVzdHMuamF2
YQk5IEZlYiAyMDExIDE2OjI4OjU1IC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAwOCBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4NCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0
aW9uIGFuZCBvdGhlcnMuDQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFu
ZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRl
ciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNo
IGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAt
MTAsOSArMTAsMTIgQEANCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCiBwYWNrYWdlIG9yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsOw0KIA0KK2ltcG9ydCBqYXZhLmlvLklPRXhjZXB0
aW9uOw0KKw0KIGltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuQ29yZUV4Y2VwdGlvbjsN
CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuKjsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMudXRpbC5VdGlsOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29yZS5Mb2NhbFZhcmlhYmxlOw0KIA0KIGltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdDsNCiAN
CkBAIC0yOTksNCArMzAyLDcxIEBADQogCQkicDQuQS5Jbm5lciIsDQogCQl0eXBlcyk7DQogfQ0K
Ky8qKg0KKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNn
aT9pZD0zMzQ3ODMiDQorICovDQorcHVibGljIHZvaWQgdGVzdFBhcmFtQW5ub3RhdGlvbnMoKSB0
aHJvd3MgQ29yZUV4Y2VwdGlvbiB7DQorCXRyeSB7DQorCQljcmVhdGVKYXZhUHJvamVjdCgiUCIs
IG5ldyBTdHJpbmdbXSB7InNyYyJ9LCBuZXcgU3RyaW5nW10geyJKQ0wxNV9MSUIifSwgImJpbiIs
ICIxLjUiKTsNCisJCVN0cmluZyBzb3VyY2UgPSAicGFja2FnZSBwOyIgKw0KKwkJCQkicHVibGlj
IGNsYXNzIFg8VD4ge1xuIiArDQorCQkJCSIgIFg8U3RyaW5nPiBmaWVsZDtcbiIgKw0KKwkJCQki
CUBJbmplY3QgIiArDQorCQkJCSIJcHVibGljIHZvaWQgVGVzdChARGVmYXVsdCBTdHJpbmcgcHJv
Y2Vzc29yKSB7fSIgKw0KKwkJCQkifSIgKw0KKwkJCQkiQGludGVyZmFjZSBJbmplY3R7XG4iICsN
CisJCQkJIn0iICsNCisJCQkJIkBpbnRlcmZhY2UgRGVmYXVsdHtcbiIgKw0KKwkJCQkifSI7DQor
CQljcmVhdGVGb2xkZXIoIi9QL3NyYy9wIik7DQorCQljcmVhdGVGaWxlKA0KKwkJCSIvUC9zcmMv
cC9YLmphdmEiLA0KKwkJCXNvdXJjZQ0KKwkJKTsNCisJCXdhaXRGb3JBdXRvQnVpbGQoKTsNCisJ
CQ0KKwkJSUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCIvUC9zcmMv
cC9YLmphdmEiKTsgDQorCQlJSmF2YUVsZW1lbnRbXSB2YXJpYWJsZSA9ICgoSUNvZGVBc3Npc3Qp
IHVuaXQpLmNvZGVTZWxlY3Qoc291cmNlLmluZGV4T2YoInByb2Nlc3NvciIpLCAicHJvY2Vzc29y
Ii5sZW5ndGgoKSk7DQorDQorCQlhc3NlcnRFcXVhbHMoMSwgdmFyaWFibGUubGVuZ3RoKTsNCisJ
CVN0cmluZyBhbm5vdGF0aW9uU3RyaW5nID0gIkBEZWZhdWx0IChub3Qgb3BlbikgW2luIHByb2Nl
c3NvciBbaW4gVGVzdChTdHJpbmcpIFtpbiBYIFtpbiBYLmphdmEgW2luIHAgW2luIHNyYyBbaW4g
UF1dXV1dXV0iOw0KKwkJYXNzZXJ0RXF1YWxzKGFubm90YXRpb25TdHJpbmcsICgoTG9jYWxWYXJp
YWJsZSl2YXJpYWJsZVswXSkuZ2V0QW5ub3RhdGlvbnMoKVswXS50b1N0cmluZygpKTsNCisJCUlU
eXBlIHR5cGUgPSB1bml0LmdldFR5cGUoIlgiKTsNCisJCQ0KKwkJSU1ldGhvZCBtZXRob2QgPSB0
eXBlLmdldE1ldGhvZHMoKVswXTsNCisJCWFzc2VydEVxdWFscyhhbm5vdGF0aW9uU3RyaW5nLCBt
ZXRob2QuZ2V0UGFyYW1ldGVyQW5ub3RhdGlvbnMoMClbMF0udG9TdHJpbmcoKSk7DQorCX0gZmlu
YWxseSB7DQorCQlkZWxldGVQcm9qZWN0KCJQIik7DQorCX0NCit9DQorLyoqDQorICogQHNlZSAi
aHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMzNDc4MyINCisg
Ki8NCitwdWJsaWMgdm9pZCB0ZXN0UGFyYW1Bbm5vdGF0aW9uczIoKSB0aHJvd3MgQ29yZUV4Y2Vw
dGlvbiwgSU9FeGNlcHRpb24gew0KKwl0cnkgew0KKwkJSUphdmFQcm9qZWN0IHByb2plY3QgPSBj
cmVhdGVKYXZhUHJvamVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7InNyYyJ9LCBuZXcgU3RyaW5nW10g
eyJKQ0wxNV9MSUIifSwgImJpbiIsICIxLjUiKTsNCisJCVN0cmluZ1tdIHBhdGhBbmRDb250ZW50
cyA9IG5ldyBTdHJpbmdbXXsicC9YLmphdmEiLA0KKwkJCQkicGFja2FnZSBwOyIgKw0KKwkJCQki
cHVibGljIGNsYXNzIFg8VD4ge1xuIiArDQorCQkJCSIgIFg8U3RyaW5nPiBmaWVsZDtcbiIgKw0K
KwkJCQkiCUBJbmplY3QgIiArDQorCQkJCSIJcHVibGljIHZvaWQgVGVzdChARGVmYXVsdCBTdHJp
bmcgcHJvY2Vzc29yKSB7fSIgKw0KKwkJCQkifSIgKw0KKwkJCQkiQGludGVyZmFjZSBJbmplY3R7
XG4iICsNCisJCQkJIn0iICsNCisJCQkJIkBpbnRlcmZhY2UgRGVmYXVsdHtcbiIgKw0KKwkJCQki
fSJ9Ow0KKwkJYWRkTGlicmFyeShwcm9qZWN0LCAibGliMzM0NzgzLmphciIsICJsaWJzcmMuemlw
IiwgcGF0aEFuZENvbnRlbnRzLCBKYXZhQ29yZS5WRVJTSU9OXzFfNSk7DQorCQkNCisJCXdhaXRG
b3JBdXRvQnVpbGQoKTsNCisJCUlQYWNrYWdlRnJhZ21lbnRSb290IHJvb3QgPSBwcm9qZWN0Lmdl
dFBhY2thZ2VGcmFnbWVudFJvb3QoZ2V0RmlsZSgiL1AvbGliMzM0NzgzLmphciIpKTsNCisJCUlU
eXBlIHR5cGUgPSByb290LmdldFBhY2thZ2VGcmFnbWVudCgicCIpLmdldENsYXNzRmlsZSgiWC5j
bGFzcyIpLmdldFR5cGUoKTsNCisJCVN0cmluZyBhbm5vdGF0aW9uU3RyaW5nID0gIkBwLkRlZmF1
bHQgKG5vdCBvcGVuKSBbaW4gVGVzdChqYXZhLmxhbmcuU3RyaW5nKSBbaW4gWCBbaW4gWC5jbGFz
cyBbaW4gcCBbaW4gbGliMzM0NzgzLmphciBbaW4gUF1dXV1dXSI7DQorCQkNCisJCUlNZXRob2Qg
bWV0aG9kID0gdHlwZS5nZXRNZXRob2RzKClbMV07DQorCQlhc3NlcnRFcXVhbHMoYW5ub3RhdGlv
blN0cmluZywgbWV0aG9kLmdldFBhcmFtZXRlckFubm90YXRpb25zKDApWzBdLnRvU3RyaW5nKCkp
Ow0KKwl9IGZpbmFsbHkgew0KKwkJZGVsZXRlUHJvamVjdCgiUCIpOw0KKwl9DQorfQ0KIH0NCg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>188610</attachid>
            <date>2011-02-09 13:16:00 -0500</date>
            <delta_ts>2011-02-17 10:30:43 -0500</delta_ts>
            <desc>Hack for JavaElement view</desc>
            <filename>patch.txt</filename>
            <type>text/plain</type>
            <size>1873</size>
            <attacher name="Markus Keller">markus_keller</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0Lmpldmll
dw0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9qZHQvamV2aWV3L3ZpZXdzL0phdmFFbGVtZW50Lmph
dmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL2pkdC11aS1ob21lL3Bs
dWdpbnMvb3JnLmVjbGlwc2UuamR0Lmpldmlldy9zcmMvb3JnL2VjbGlwc2UvamR0L2pldmlldy92
aWV3cy9KYXZhRWxlbWVudC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4xNg0KZGlmZiAt
dSAtcjEuMTYgSmF2YUVsZW1lbnQuamF2YQ0KLS0tIHNyYy9vcmcvZWNsaXBzZS9qZHQvamV2aWV3
L3ZpZXdzL0phdmFFbGVtZW50LmphdmEJOCBNYXIgMjAxMCAxNjoyODo1NSAtMDAwMAkxLjE2DQor
Kysgc3JjL29yZy9lY2xpcHNlL2pkdC9qZXZpZXcvdmlld3MvSmF2YUVsZW1lbnQuamF2YQk5IEZl
YiAyMDExIDE4OjA3OjEwIC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwNSwgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4NCisgKiBDb3B5cmlnaHQgKGMpIDIwMDUsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFu
ZCBvdGhlcnMuDQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUg
YWNjb21wYW55aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUg
dGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29t
cGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtNDg2LDcg
KzQ4NiwyMiBAQA0KIAkJcmVzdWx0LmFkZChuZXcgSmF2YUVsZW1lbnRDaGlsZHJlblByb3BlcnR5
KHRoaXMsICJQQVJBTUVURVIgTkFNRVMiKSB7DQogCQkJQE92ZXJyaWRlDQogCQkJcHJvdGVjdGVk
IEpFQXR0cmlidXRlW10gY29tcHV0ZUNoaWxkcmVuKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlv
biB7DQotCQkJCXJldHVybiBjcmVhdGVTdHJpbmdzKHRoaXMsIG1ldGhvZC5nZXRQYXJhbWV0ZXJO
YW1lcygpKTsNCisJCQkJU3RyaW5nW10gc3RyaW5ncyA9IG1ldGhvZC5nZXRQYXJhbWV0ZXJOYW1l
cygpOw0KKwkJCQlKRUF0dHJpYnV0ZVtdIGNoaWxkcmVuPSBuZXcgSkVBdHRyaWJ1dGVbc3RyaW5n
cy5sZW5ndGhdOw0KKwkJCQlmb3IgKGludCBpPSAwOyBpIDwgc3RyaW5ncy5sZW5ndGg7IGkrKykg
ew0KKwkJCQkJZmluYWwgaW50IGluZGV4PSBpOw0KKwkJCQkJY2hpbGRyZW5baV09IG5ldyBKYXZh
RWxlbWVudFByb3BlcnR5KHRoaXMsIG51bGwsIHN0cmluZ3NbaV0pIHsNCisJCQkJCQlAT3ZlcnJp
ZGUNCisJCQkJCQlwdWJsaWMgSkVBdHRyaWJ1dGVbXSBnZXRDaGlsZHJlbigpIHsNCisJCQkJCQkJ
dHJ5IHsNCisJCQkJCQkJCXJldHVybiBjcmVhdGVKYXZhRWxlbWVudHModGhpcywgbWV0aG9kLmdl
dFBhcmFtZXRlckFubm90YXRpb25zKGluZGV4KSk7DQorCQkJCQkJCX0gY2F0Y2ggKEV4Y2VwdGlv
biBlKSB7DQorCQkJCQkJCQlyZXR1cm4gbmV3IEpFQXR0cmlidXRlW10ge25ldyBFcnJvcih0aGlz
LCAiIiwgZSl9Ow0KKwkJCQkJCQl9DQorCQkJCQkJfQ0KKwkJCQkJfTsNCisJCQkJfQ0KKwkJCQly
ZXR1cm4gY2hpbGRyZW47DQogCQkJfQ0KIAkJfSk7DQogCQlyZXN1bHQuYWRkKG5ldyBKYXZhRWxl
bWVudENoaWxkcmVuUHJvcGVydHkodGhpcywgIlBBUkFNRVRFUiBUWVBFUyIpIHsNCg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>188895</attachid>
            <date>2011-02-14 07:40:00 -0500</date>
            <delta_ts>2011-02-17 10:29:47 -0500</delta_ts>
            <desc>Modified patch</desc>
            <filename>bug_334783_markus.txt</filename>
            <type>text/plain</type>
            <size>16820</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvY29yZS9JTWV0aG9kLmphdmENCj09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVs
L29yZy9lY2xpcHNlL2pkdC9jb3JlL0lNZXRob2QuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9u
IDEuMzMNCmRpZmYgLXUgLXIxLjMzIElNZXRob2QuamF2YQ0KLS0tIG1vZGVsL29yZy9lY2xpcHNl
L2pkdC9jb3JlL0lNZXRob2QuamF2YQkyMyBBcHIgMjAxMCAxMzoxMTowNSAtMDAwMAkxLjMzDQor
KysgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2NvcmUvSU1ldGhvZC5qYXZhCTE0IEZlYiAyMDExIDEy
OjE3OjIxIC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0K
LSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4N
CisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMu
DQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55
aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2Yg
dGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRo
aXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtMTAwLDYgKzEwMCwxNyBA
QA0KICAqIEByZXR1cm4gdGhlIG51bWJlciBvZiBwYXJhbWV0ZXJzIG9mIHRoaXMgbWV0aG9kDQog
ICovDQogaW50IGdldE51bWJlck9mUGFyYW1ldGVycygpOw0KKw0KKy8qKg0KKyAqIFJldHVybnMg
YSB0d28tZGltZW5zaW9uYWwgYXJyYXkgb2YgYW5ub3RhdGlvbnMgZm9yIHRoaXMgbWV0aG9kJ3Mg
cGFyYW1ldGVycy4gSWYgdGhlDQorICogbnVtYmVyIG9mIHBhcmFtZXRlcnMgaXMgemVybywgPGNv
ZGU+bnVsbDwvY29kZT4gaXMgcmV0dXJuZWQuDQorICogDQorICogQHJldHVybiB0aGUgYXJyYXkg
b2YgYW5ub3RhdGlvbnMgZm9yIHRoZSBzcGVjaWZpZWQgcGFyYW1ldGVyDQorICogQHRocm93cyBK
YXZhTW9kZWxFeGNlcHRpb24NCisgKiBAc2luY2UgMy43DQorICovDQorSUFubm90YXRpb25bXVtd
IGdldFBhcmFtZXRlckFubm90YXRpb25zKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbjsNCisN
CiAvKioNCiAgKiBSZXR1cm5zIHRoZSBiaW5kaW5nIGtleSBmb3IgdGhpcyBtZXRob2Qgb25seSBp
ZiB0aGUgZ2l2ZW4gbWV0aG9kIGlzIHtAbGluayAjaXNSZXNvbHZlZCgpIHJlc29sdmVkfS4NCiAg
KiBBIGJpbmRpbmcga2V5IGlzIGEga2V5IHRoYXQgdW5pcXVlbHkgaWRlbnRpZmllcyB0aGlzIG1l
dGhvZC4gSXQgYWxsb3dzIGFjY2Vzcw0KSW5kZXg6IG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL0JpbmFyeU1ldGhvZC5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jv
b3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29yZS9CaW5hcnlNZXRob2QuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTEx
DQpkaWZmIC11IC1yMS4xMTEgQmluYXJ5TWV0aG9kLmphdmENCi0tLSBtb2RlbC9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29yZS9CaW5hcnlNZXRob2QuamF2YQkyMCBKYW4gMjAxMSAwMjoyODo0
MyAtMDAwMAkxLjExMQ0KKysrIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0Jp
bmFyeU1ldGhvZC5qYXZhCTE0IEZlYiAyMDExIDEyOjE3OjIxIC0wMDAwDQpAQCAtMTEsNyArMTEs
MTUgQEANCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlOw0KIA0KIGltcG9y
dCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuSVByb2dyZXNzTW9uaXRvcjsNCi1pbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmNvcmUuKjsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuRmxhZ3M7
DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklBbm5vdGF0aW9uOw0KK2ltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuY29yZS5JTWVtYmVyVmFsdWVQYWlyOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuY29yZS5JTWV0aG9kOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JVHlwZTsNCitp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSVR5cGVQYXJhbWV0ZXI7DQoraW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5jb3JlLkphdmFDb3JlOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5K
YXZhTW9kZWxFeGNlcHRpb247DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLlNpZ25hdHVy
ZTsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIuQ2hhck9wZXJhdGlvbjsN
CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNsYXNzZm10LkNsYXNz
RmlsZUNvbnN0YW50czsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LmVudi5JQmluYXJ5QW5ub3RhdGlvbjsNCkBAIC02MSw2ICs2OSwxOSBAQA0KIAlJQmluYXJ5QW5u
b3RhdGlvbltdIGJpbmFyeUFubm90YXRpb25zID0gaW5mby5nZXRBbm5vdGF0aW9ucygpOw0KIAly
ZXR1cm4gZ2V0QW5ub3RhdGlvbnMoYmluYXJ5QW5ub3RhdGlvbnMsIGluZm8uZ2V0VGFnQml0cygp
KTsNCiB9DQorLyoqDQorICogQHNlZSBJTWV0aG9kI2dldFBhcmFtZXRlckFubm90YXRpb25zKCkN
CisgKi8NCitwdWJsaWMgSUFubm90YXRpb25bXVtdIGdldFBhcmFtZXRlckFubm90YXRpb25zKCkg
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7DQorCUlCaW5hcnlNZXRob2QgaW5mbyA9IChJQmlu
YXJ5TWV0aG9kKSBnZXRFbGVtZW50SW5mbygpOw0KKwlpZiAodGhpcy5wYXJhbWV0ZXJUeXBlcy5s
ZW5ndGggPT0gMCkgcmV0dXJuIG51bGw7DQorCUlBbm5vdGF0aW9uW11bXSBhbm5vdGF0aW9ucyA9
IG5ldyBJQW5ub3RhdGlvblt0aGlzLnBhcmFtZXRlclR5cGVzLmxlbmd0aF1bXTsNCisJZm9yIChp
bnQgaT0wOyBpIDwgdGhpcy5wYXJhbWV0ZXJUeXBlcy5sZW5ndGg7IGkrKykgew0KKwkJYW5ub3Rh
dGlvbnNbaV0gPSBnZXRBbm5vdGF0aW9ucyhpbmZvLmdldFBhcmFtZXRlckFubm90YXRpb25zKGkp
LCBpbmZvLmdldFRhZ0JpdHMoKSk7DQorCX0NCisJcmV0dXJuIGFubm90YXRpb25zOw0KK30NCisN
CiBwdWJsaWMgSU1lbWJlclZhbHVlUGFpciBnZXREZWZhdWx0VmFsdWUoKSB0aHJvd3MgSmF2YU1v
ZGVsRXhjZXB0aW9uIHsNCiAJSUJpbmFyeU1ldGhvZCBpbmZvID0gKElCaW5hcnlNZXRob2QpIGdl
dEVsZW1lbnRJbmZvKCk7DQogCU9iamVjdCBkZWZhdWx0VmFsdWUgPSBpbmZvLmdldERlZmF1bHRW
YWx1ZSgpOw0KSW5kZXg6IG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0NvbXBp
bGF0aW9uVW5pdFN0cnVjdHVyZVJlcXVlc3Rvci5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTog
L2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29yZS9Db21waWxhdGlvblVuaXRTdHJ1Y3R1cmVSZXF1ZXN0b3IuamF2YSx2
DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuODcNCmRpZmYgLXUgLXIxLjg3IENvbXBpbGF0aW9uVW5p
dFN0cnVjdHVyZVJlcXVlc3Rvci5qYXZhDQotLS0gbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvcmUvQ29tcGlsYXRpb25Vbml0U3RydWN0dXJlUmVxdWVzdG9yLmphdmEJMjggSnVsIDIw
MTAgMTY6MTc6MDEgLTAwMDAJMS44Nw0KKysrIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb3JlL0NvbXBpbGF0aW9uVW5pdFN0cnVjdHVyZVJlcXVlc3Rvci5qYXZhCTE0IEZlYiAyMDEx
IDEyOjE3OjIxIC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
Kg0KLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVy
cy4NCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhl
cnMuDQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21w
YW55aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMg
b2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVz
IHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtMjIsNiArMjIsNyBA
QA0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5DaGFyT3BlcmF0aW9uOw0K
IGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5JUHJvYmxlbTsNCiBpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLklTb3VyY2VFbGVtZW50UmVxdWVzdG9y
Ow0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFyZ3VtZW50
Ow0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFycmF5SW5p
dGlhbGl6ZXI7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3Qu
Q2xhc3NMaXRlcmFsQWNjZXNzOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIuYXN0LkV4cHJlc3Npb247DQpAQCAtNDI3LDggKzQyOCw1NSBAQA0KIAkJCWFjY2VwdEFu
bm90YXRpb24oYW5ub3RhdGlvbiwgaW5mbywgaGFuZGxlKTsNCiAJCX0NCiAJfQ0KKwkvLyBodHRw
czovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzM0NzgzDQorCS8vIFBy
b2Nlc3MgdGhlIHBhcmFtZXRlciBhbm5vdGF0aW9ucyBmcm9tIHRoZSBhcmd1bWVudHMNCisJaWYg
KG1ldGhvZEluZm8ubm9kZSAhPSBudWxsICYmIG1ldGhvZEluZm8ubm9kZS5hcmd1bWVudHMgIT0g
bnVsbCkgew0KKwkJaW5mby5hcmd1bWVudHMgPSBhY2NlcHRNZXRob2RQYXJhbWV0ZXJzKG1ldGhv
ZEluZm8ubm9kZS5hcmd1bWVudHMsIGhhbmRsZSwgbWV0aG9kSW5mbyk7DQorCX0NCiAJcmV0dXJu
IGluZm87DQogfQ0KK3ByaXZhdGUgTG9jYWxWYXJpYWJsZVtdIGFjY2VwdE1ldGhvZFBhcmFtZXRl
cnMoQXJndW1lbnRbXSBhcmd1bWVudHMsIEphdmFFbGVtZW50IG1ldGhvZEhhbmRsZSwgTWV0aG9k
SW5mbyBtZXRob2RJbmZvKSB7DQorCWlmIChhcmd1bWVudHMgPT0gbnVsbCkgcmV0dXJuIG51bGw7
DQorCUxvY2FsVmFyaWFibGVbXSByZXN1bHQgPSBuZXcgTG9jYWxWYXJpYWJsZVthcmd1bWVudHMu
bGVuZ3RoXTsNCisJQW5ub3RhdGlvbltdW10gcGFyYW1Bbm5vdGF0aW9ucyA9IG5ldyBBbm5vdGF0
aW9uW2FyZ3VtZW50cy5sZW5ndGhdW107DQorCWZvcihpbnQgaSA9IDA7IGkgPCBhcmd1bWVudHMu
bGVuZ3RoOyBpKyspIHsNCisJCUFyZ3VtZW50IGFyZ3VtZW50ID0gYXJndW1lbnRzW2ldOw0KKwkJ
TG9jYWxWYXJpYWJsZUluZm8gYXJndW1lbnRJbmZvID0gbmV3IExvY2FsVmFyaWFibGVJbmZvKCk7
DQorCQlMb2NhbFZhcmlhYmxlSW5mbyBsb2NhbFZhckluZm8gPSBuZXcgTG9jYWxWYXJpYWJsZUlu
Zm8oKTsNCisJCWxvY2FsVmFySW5mby5zb3VyY2VSYW5nZVN0YXJ0ID0gYXJndW1lbnQuZGVjbGFy
YXRpb25Tb3VyY2VTdGFydDsNCisJCWxvY2FsVmFySW5mby5zb3VyY2VSYW5nZUVuZCA9IGFyZ3Vt
ZW50LmRlY2xhcmF0aW9uU291cmNlU3RhcnQ7DQorCQlsb2NhbFZhckluZm8ubmFtZVN0YXJ0ID0g
YXJndW1lbnQuc291cmNlU3RhcnQ7DQorCQlsb2NhbFZhckluZm8ubmFtZUVuZCA9IGFyZ3VtZW50
LnNvdXJjZUVuZDsNCisJCWxvY2FsVmFySW5mby5pc1BhcmFtZXRlciA9IHRydWU7DQorCQkNCisJ
CVN0cmluZyBwYXJhbVR5cGVTaWcgPSBKYXZhTW9kZWxNYW5hZ2VyLmdldEphdmFNb2RlbE1hbmFn
ZXIoKS5pbnRlcm4oU2lnbmF0dXJlLmNyZWF0ZVR5cGVTaWduYXR1cmUobWV0aG9kSW5mby5wYXJh
bWV0ZXJUeXBlc1tpXSwgZmFsc2UpKTsNCisJCXJlc3VsdFtpXSA9IG5ldyBMb2NhbFZhcmlhYmxl
KA0KKwkJCQltZXRob2RIYW5kbGUsDQorCQkJCW5ldyBTdHJpbmcoYXJndW1lbnQubmFtZSksDQor
CQkJCWFyZ3VtZW50LmRlY2xhcmF0aW9uU291cmNlU3RhcnQsDQorCQkJCWFyZ3VtZW50LiBkZWNs
YXJhdGlvblNvdXJjZUVuZCwNCisJCQkJYXJndW1lbnQuc291cmNlU3RhcnQsDQorCQkJCWFyZ3Vt
ZW50LnNvdXJjZUVuZCwNCisJCQkJcGFyYW1UeXBlU2lnLA0KKwkJCQlhcmd1bWVudC5hbm5vdGF0
aW9ucywNCisJCQkJYXJndW1lbnQubW9kaWZpZXJzLCANCisJCQkJdHJ1ZSk7DQorCQl0aGlzLm5l
d0VsZW1lbnRzLnB1dChyZXN1bHRbaV0sIGFyZ3VtZW50SW5mbyk7DQorCQl0aGlzLmluZm9TdGFj
ay5wdXNoKGFyZ3VtZW50SW5mbyk7DQorCQl0aGlzLmhhbmRsZVN0YWNrLnB1c2gocmVzdWx0W2ld
KTsNCisJCWlmIChhcmd1bWVudC5hbm5vdGF0aW9ucyAhPSBudWxsKSB7DQorCQkJcGFyYW1Bbm5v
dGF0aW9uc1tpXSA9IG5ldyBBbm5vdGF0aW9uW2FyZ3VtZW50LmFubm90YXRpb25zLmxlbmd0aF07
DQorCQkJZm9yIChpbnQgIGogPSAwOyBqIDwgYXJndW1lbnQuYW5ub3RhdGlvbnMubGVuZ3RoOyBq
KysgKSB7DQorCQkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQW5ub3Rh
dGlvbiBhbm5vdGF0aW9uID0gYXJndW1lbnQuYW5ub3RhdGlvbnNbal07DQorCQkJCWFjY2VwdEFu
bm90YXRpb24oYW5ub3RhdGlvbiwgbG9jYWxWYXJJbmZvLCByZXN1bHRbaV0pOw0KKwkJCX0NCisJ
CX0NCisJCXRoaXMuaW5mb1N0YWNrLnBvcCgpOw0KKwkJdGhpcy5oYW5kbGVTdGFjay5wb3AoKTsN
CisJfQ0KKwlyZXR1cm4gcmVzdWx0Ow0KK30NCisNCiAvKioNCiAgKiBAc2VlIElTb3VyY2VFbGVt
ZW50UmVxdWVzdG9yDQogICovDQpJbmRleDogbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvcmUvTG9jYWxWYXJpYWJsZUluZm8uamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IG1vZGVs
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0xvY2FsVmFyaWFibGVJbmZvLmphdmENCmRp
ZmYgLU4gbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvTG9jYWxWYXJpYWJsZUlu
Zm8uamF2YQ0KLS0tIC9kZXYvbnVsbAkxIEphbiAxOTcwIDAwOjAwOjAwIC0wMDAwDQorKysgbW9k
ZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvTG9jYWxWYXJpYWJsZUluZm8uamF2YQkx
IEphbiAxOTcwIDAwOjAwOjAwIC0wMDAwDQpAQCAtMCwwICsxLDkgQEANCitwYWNrYWdlIG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlOw0KKw0KK3B1YmxpYyBjbGFzcyBMb2NhbFZhcmlhYmxl
SW5mbyBleHRlbmRzIEFubm90YXRhYmxlSW5mbyB7DQorDQorCS8qDQorCSAqIE1lbnRpb25zIHdo
ZXRoZXIgb3Igbm90IHRoaXMgbG9jYWwgdmFyaWFibGUgaXMgYSBtZXRob2QgcGFyYW1ldGVyLg0K
KwkgKi8NCisJcHVibGljIGJvb2xlYW4gaXNQYXJhbWV0ZXI7DQorfQ0KSW5kZXg6IG1vZGVsL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL1NvdXJjZU1ldGhvZC5qYXZhDQo9PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Tb3VyY2VNZXRob2QuamF2YSx2DQpyZXRyaWV2
aW5nIHJldmlzaW9uIDEuNjgNCmRpZmYgLXUgLXIxLjY4IFNvdXJjZU1ldGhvZC5qYXZhDQotLS0g
bW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvU291cmNlTWV0aG9kLmphdmEJMjcg
SnVuIDIwMDggMTY6MDM6NTEgLTAwMDAJMS42OA0KKysrIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb3JlL1NvdXJjZU1ldGhvZC5qYXZhCTE0IEZlYiAyMDExIDEyOjE3OjI1IC0wMDAw
DQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdo
dCAoYykgMjAwMCwgMjAwOCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCisgKiBDb3B5cmln
aHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQogICogQWxsIHJp
Z2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFs
cw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2Ug
UHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0
aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtMTM1LDYgKzEzNSwyMCBAQA0KIAlyZXR1cm4g
aW5mby50eXBlUGFyYW1ldGVyczsNCiB9DQogDQorcHVibGljIElBbm5vdGF0aW9uW11bXSBnZXRQ
YXJhbWV0ZXJBbm5vdGF0aW9ucygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gew0KKwlJTG9j
YWxWYXJpYWJsZVtdIGFyZ3VtZW50cyA9ICgoU291cmNlTWV0aG9kRWxlbWVudEluZm8pIGdldEVs
ZW1lbnRJbmZvKCkpLmFyZ3VtZW50czsNCisJaWYgKGFyZ3VtZW50cyA9PSBudWxsKSByZXR1cm4g
bnVsbDsNCisJSUFubm90YXRpb25bXVtdIGFubm90YXRpb25zID0gbmV3IElBbm5vdGF0aW9uW2Fy
Z3VtZW50cy5sZW5ndGhdW107DQorCWZvciAoaW50IGk9MDsgaSA8YXJndW1lbnRzLmxlbmd0aDsg
aSsrKSB7DQorCQlMb2NhbFZhcmlhYmxlIGFyZ3VtZW50ID0gKExvY2FsVmFyaWFibGUpIGFyZ3Vt
ZW50c1tpXTsNCisJCWFubm90YXRpb25zW2ldID0gbmV3IEFubm90YXRpb25bYXJndW1lbnQuYW5u
b3RhdGlvbnMubGVuZ3RoXTsNCisJCWZvciAoaW50IGo9MDsgaiA8IGFyZ3VtZW50LmFubm90YXRp
b25zLmxlbmd0aDsgaisrKSB7DQorCQkJYW5ub3RhdGlvbnNbaV1bal0gPSBhcmd1bWVudC5hbm5v
dGF0aW9uc1tqXTsNCisJCX0NCisJfQ0KKwlyZXR1cm4gYW5ub3RhdGlvbnM7DQorfQ0KKw0KIC8q
Kg0KICAqIEBzZWUgSU1ldGhvZCNnZXRUeXBlUGFyYW1ldGVyU2lnbmF0dXJlcygpDQogICogQHNp
bmNlIDMuMA0KSW5kZXg6IG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL1NvdXJj
ZU1ldGhvZEVsZW1lbnRJbmZvLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9l
Y2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb3JlL1NvdXJjZU1ldGhvZEVsZW1lbnRJbmZvLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lv
biAxLjIyDQpkaWZmIC11IC1yMS4yMiBTb3VyY2VNZXRob2RFbGVtZW50SW5mby5qYXZhDQotLS0g
bW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvU291cmNlTWV0aG9kRWxlbWVudElu
Zm8uamF2YQkyNyBKdW4gMjAwOCAxNjowMzo1MCAtMDAwMAkxLjIyDQorKysgbW9kZWwvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvcmUvU291cmNlTWV0aG9kRWxlbWVudEluZm8uamF2YQkxNCBG
ZWIgMjAxMSAxMjoxNzoyNSAtMDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMDggSUJNIENvcnBvcmF0aW9uIGFu
ZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhl
IGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhl
IHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2Nv
bXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTM4LDYg
KzM4LDggQEANCiAJICogRm9yIGV4YW1wbGUsIEhhc2h0YWJsZSBvciBqYXZhLnV0aWwuSGFzaHRh
YmxlLg0KIAkgKi8NCiAJcHJvdGVjdGVkIGNoYXJbXVtdIGV4Y2VwdGlvblR5cGVzOw0KKwkNCisJ
cHJvdGVjdGVkIElMb2NhbFZhcmlhYmxlW10gYXJndW1lbnRzOw0KIA0KIAkvKg0KIAkgKiBUaGUg
dHlwZSBwYXJhbWV0ZXJzIG9mIHRoaXMgc291cmNlIHR5cGUuIEVtcHR5IGlmIG5vbmUuDQojUCBv
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbA0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9tb2RlbC9UeXBlUmVzb2x2ZVRlc3RzLmphdmENCj09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJD
UyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVs
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9UeXBlUmVzb2x2ZVRlc3RzLmph
dmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjE0DQpkaWZmIC11IC1yMS4xNCBUeXBlUmVzb2x2
ZVRlc3RzLmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvVHlw
ZVJlc29sdmVUZXN0cy5qYXZhCTI3IEp1biAyMDA4IDE2OjAyOjQwIC0wMDAwCTEuMTQNCisrKyBz
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvVHlwZVJlc29sdmVUZXN0cy5qYXZh
CTE0IEZlYiAyMDExIDEyOjE3OjI3IC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAwOCBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4NCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0
aW9uIGFuZCBvdGhlcnMuDQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFu
ZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRl
ciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNo
IGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAt
MTAsOSArMTAsMTIgQEANCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCiBwYWNrYWdlIG9yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsOw0KIA0KK2ltcG9ydCBqYXZhLmlvLklPRXhjZXB0
aW9uOw0KKw0KIGltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuQ29yZUV4Y2VwdGlvbjsN
CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuKjsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMudXRpbC5VdGlsOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29yZS5Mb2NhbFZhcmlhYmxlOw0KIA0KIGltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdDsNCiAN
CkBAIC05NSw3ICs5OCw3IEBADQogfQ0KIAlzdGF0aWMgew0KIC8vCQlURVNUU19OVU1CRVJTID0g
bmV3IGludFtdIHsgMTgyLCAxODMgfTsNCi0vLwkJVEVTVFNfTkFNRVMgPSBuZXcgU3RyaW5nW10g
eyJ0ZXN0MDE3NyJ9Ow0KKy8vCQlURVNUU19OQU1FUyA9IG5ldyBTdHJpbmdbXSB7InRlc3RQYXJh
bUFubm90YXRpb25zMiJ9Ow0KIAl9DQogCXB1YmxpYyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsNCiAJ
CXJldHVybiBidWlsZE1vZGVsVGVzdFN1aXRlKFR5cGVSZXNvbHZlVGVzdHMuY2xhc3MpOw0KQEAg
LTI5OSw0ICszMDIsNzEgQEANCiAJCSJwNC5BLklubmVyIiwNCiAJCXR5cGVzKTsNCiB9DQorLyoq
DQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lk
PTMzNDc4MyINCisgKi8NCitwdWJsaWMgdm9pZCB0ZXN0UGFyYW1Bbm5vdGF0aW9ucygpIHRocm93
cyBDb3JlRXhjZXB0aW9uIHsNCisJdHJ5IHsNCisJCWNyZWF0ZUphdmFQcm9qZWN0KCJQIiwgbmV3
IFN0cmluZ1tdIHsic3JjIn0sIG5ldyBTdHJpbmdbXSB7IkpDTDE1X0xJQiJ9LCAiYmluIiwgIjEu
NSIpOw0KKwkJU3RyaW5nIHNvdXJjZSA9ICJwYWNrYWdlIHA7IiArDQorCQkJCSJwdWJsaWMgY2xh
c3MgWDxUPiB7XG4iICsNCisJCQkJIiAgWDxTdHJpbmc+IGZpZWxkO1xuIiArDQorCQkJCSIJQElu
amVjdCAiICsNCisJCQkJIglwdWJsaWMgdm9pZCBUZXN0KEBEZWZhdWx0IFN0cmluZyBwcm9jZXNz
b3IpIHt9IiArDQorCQkJCSJ9IiArDQorCQkJCSJAaW50ZXJmYWNlIEluamVjdHtcbiIgKw0KKwkJ
CQkifSIgKw0KKwkJCQkiQGludGVyZmFjZSBEZWZhdWx0e1xuIiArDQorCQkJCSJ9IjsNCisJCWNy
ZWF0ZUZvbGRlcigiL1Avc3JjL3AiKTsNCisJCWNyZWF0ZUZpbGUoDQorCQkJIi9QL3NyYy9wL1gu
amF2YSIsDQorCQkJc291cmNlDQorCQkpOw0KKwkJd2FpdEZvckF1dG9CdWlsZCgpOw0KKwkJDQor
CQlJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIi9QL3NyYy9wL1gu
amF2YSIpOyANCisJCUlKYXZhRWxlbWVudFtdIHZhcmlhYmxlID0gKChJQ29kZUFzc2lzdCkgdW5p
dCkuY29kZVNlbGVjdChzb3VyY2UuaW5kZXhPZigicHJvY2Vzc29yIiksICJwcm9jZXNzb3IiLmxl
bmd0aCgpKTsNCisNCisJCWFzc2VydEVxdWFscygxLCB2YXJpYWJsZS5sZW5ndGgpOw0KKwkJU3Ry
aW5nIGFubm90YXRpb25TdHJpbmcgPSAiQERlZmF1bHQgW2luIHByb2Nlc3NvciBbaW4gVGVzdChT
dHJpbmcpIFtpbiBYIFtpbiBYLmphdmEgW2luIHAgW2luIHNyYyBbaW4gUF1dXV1dXV0iOw0KKwkJ
YXNzZXJ0RXF1YWxzKGFubm90YXRpb25TdHJpbmcsICgoTG9jYWxWYXJpYWJsZSl2YXJpYWJsZVsw
XSkuZ2V0QW5ub3RhdGlvbnMoKVswXS50b1N0cmluZygpKTsNCisJCUlUeXBlIHR5cGUgPSB1bml0
LmdldFR5cGUoIlgiKTsNCisJCQ0KKwkJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhvZHMo
KVswXTsNCisJCWFzc2VydEVxdWFscyhhbm5vdGF0aW9uU3RyaW5nLCBtZXRob2QuZ2V0UGFyYW1l
dGVyQW5ub3RhdGlvbnMoKVswXVswXS50b1N0cmluZygpKTsNCisJfSBmaW5hbGx5IHsNCisJCWRl
bGV0ZVByb2plY3QoIlAiKTsNCisJfQ0KK30NCisvKioNCisgKiBAc2VlICJodHRwczovL2J1Z3Mu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzM0NzgzIg0KKyAqLw0KK3B1YmxpYyB2
b2lkIHRlc3RQYXJhbUFubm90YXRpb25zMigpIHRocm93cyBDb3JlRXhjZXB0aW9uLCBJT0V4Y2Vw
dGlvbiB7DQorCXRyeSB7DQorCQlJSmF2YVByb2plY3QgcHJvamVjdCA9IGNyZWF0ZUphdmFQcm9q
ZWN0KCJQIiwgbmV3IFN0cmluZ1tdIHsic3JjIn0sIG5ldyBTdHJpbmdbXSB7IkpDTDE1X0xJQiJ9
LCAiYmluIiwgIjEuNSIpOw0KKwkJU3RyaW5nW10gcGF0aEFuZENvbnRlbnRzID0gbmV3IFN0cmlu
Z1tdeyJwL1guamF2YSIsDQorCQkJCSJwYWNrYWdlIHA7IiArDQorCQkJCSJwdWJsaWMgY2xhc3Mg
WDxUPiB7XG4iICsNCisJCQkJIiAgWDxTdHJpbmc+IGZpZWxkO1xuIiArDQorCQkJCSIJQEluamVj
dCAiICsNCisJCQkJIglwdWJsaWMgdm9pZCBUZXN0KEBEZWZhdWx0IFN0cmluZyBwcm9jZXNzb3Ip
IHt9IiArDQorCQkJCSJ9IiArDQorCQkJCSJAaW50ZXJmYWNlIEluamVjdHtcbiIgKw0KKwkJCQki
fSIgKw0KKwkJCQkiQGludGVyZmFjZSBEZWZhdWx0e1xuIiArDQorCQkJCSJ9In07DQorCQlhZGRM
aWJyYXJ5KHByb2plY3QsICJsaWIzMzQ3ODMuamFyIiwgImxpYnNyYy56aXAiLCBwYXRoQW5kQ29u
dGVudHMsIEphdmFDb3JlLlZFUlNJT05fMV81KTsNCisJCQ0KKwkJd2FpdEZvckF1dG9CdWlsZCgp
Ow0KKwkJSVBhY2thZ2VGcmFnbWVudFJvb3Qgcm9vdCA9IHByb2plY3QuZ2V0UGFja2FnZUZyYWdt
ZW50Um9vdChnZXRGaWxlKCIvUC9saWIzMzQ3ODMuamFyIikpOw0KKwkJSVR5cGUgdHlwZSA9IHJv
b3QuZ2V0UGFja2FnZUZyYWdtZW50KCJwIikuZ2V0Q2xhc3NGaWxlKCJYLmNsYXNzIikuZ2V0VHlw
ZSgpOw0KKwkJU3RyaW5nIGFubm90YXRpb25TdHJpbmcgPSAiQHAuRGVmYXVsdCAobm90IG9wZW4p
IFtpbiBUZXN0KGphdmEubGFuZy5TdHJpbmcpIFtpbiBYIFtpbiBYLmNsYXNzIFtpbiBwIFtpbiBs
aWIzMzQ3ODMuamFyIFtpbiBQXV1dXV1dIjsNCisJCQ0KKwkJSU1ldGhvZCBtZXRob2QgPSB0eXBl
LmdldE1ldGhvZHMoKVsxXTsNCisJCWFzc2VydEVxdWFscyhhbm5vdGF0aW9uU3RyaW5nLCBtZXRo
b2QuZ2V0UGFyYW1ldGVyQW5ub3RhdGlvbnMoKVswXVswXS50b1N0cmluZygpKTsNCisJfSBmaW5h
bGx5IHsNCisJCWRlbGV0ZVByb2plY3QoIlAiKTsNCisJfQ0KK30NCiB9DQojUCBvcmcuZWNsaXBz
ZS5qZHQuamV2aWV3DQpJbmRleDogc3JjL29yZy9lY2xpcHNlL2pkdC9qZXZpZXcvdmlld3MvSmF2
YUVsZW1lbnQuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2UvamR0
LXVpLWhvbWUvcGx1Z2lucy9vcmcuZWNsaXBzZS5qZHQuamV2aWV3L3NyYy9vcmcvZWNsaXBzZS9q
ZHQvamV2aWV3L3ZpZXdzL0phdmFFbGVtZW50LmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAx
LjE2DQpkaWZmIC11IC1yMS4xNiBKYXZhRWxlbWVudC5qYXZhDQotLS0gc3JjL29yZy9lY2xpcHNl
L2pkdC9qZXZpZXcvdmlld3MvSmF2YUVsZW1lbnQuamF2YQk4IE1hciAyMDEwIDE2OjI4OjU1IC0w
MDAwCTEuMTYNCisrKyBzcmMvb3JnL2VjbGlwc2UvamR0L2pldmlldy92aWV3cy9KYXZhRWxlbWVu
dC5qYXZhCTE0IEZlYiAyMDExIDEyOjE3OjMwIC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwNSwgMjAxMCBJQk0gQ29y
cG9yYXRpb24gYW5kIG90aGVycy4NCisgKiBDb3B5cmlnaHQgKGMpIDIwMDUsIDIwMTEgSUJNIENv
cnBvcmF0aW9uIGFuZCBvdGhlcnMuDQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9n
cmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJs
ZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAq
IHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0
DQpAQCAtNDg2LDcgKzQ4NiwyMyBAQA0KIAkJcmVzdWx0LmFkZChuZXcgSmF2YUVsZW1lbnRDaGls
ZHJlblByb3BlcnR5KHRoaXMsICJQQVJBTUVURVIgTkFNRVMiKSB7DQogCQkJQE92ZXJyaWRlDQog
CQkJcHJvdGVjdGVkIEpFQXR0cmlidXRlW10gY29tcHV0ZUNoaWxkcmVuKCkgdGhyb3dzIEphdmFN
b2RlbEV4Y2VwdGlvbiB7DQotCQkJCXJldHVybiBjcmVhdGVTdHJpbmdzKHRoaXMsIG1ldGhvZC5n
ZXRQYXJhbWV0ZXJOYW1lcygpKTsNCisJCQkJU3RyaW5nW10gc3RyaW5ncyA9IG1ldGhvZC5nZXRQ
YXJhbWV0ZXJOYW1lcygpOw0KKwkJCQlKRUF0dHJpYnV0ZVtdIGNoaWxkcmVuPSBuZXcgSkVBdHRy
aWJ1dGVbc3RyaW5ncy5sZW5ndGhdOw0KKwkJCQlmb3IgKGludCBpPSAwOyBpIDwgc3RyaW5ncy5s
ZW5ndGg7IGkrKykgew0KKwkJCQkJZmluYWwgaW50IGluZGV4PSBpOw0KKwkJCQkJZmluYWwgSUFu
bm90YXRpb25bXVtdIGFubm90YXRpb25zID0gbWV0aG9kLmdldFBhcmFtZXRlckFubm90YXRpb25z
KCk7DQorCQkJCQljaGlsZHJlbltpXT0gbmV3IEphdmFFbGVtZW50UHJvcGVydHkodGhpcywgbnVs
bCwgc3RyaW5nc1tpXSkgew0KKwkJCQkJCUBPdmVycmlkZQ0KKwkJCQkJCXB1YmxpYyBKRUF0dHJp
YnV0ZVtdIGdldENoaWxkcmVuKCkgew0KKwkJCQkJCQl0cnkgew0KKwkJCQkJCQkJcmV0dXJuIGNy
ZWF0ZUphdmFFbGVtZW50cyh0aGlzLCBhbm5vdGF0aW9uc1tpbmRleF0pOw0KKwkJCQkJCQl9IGNh
dGNoIChFeGNlcHRpb24gZSkgew0KKwkJCQkJCQkJcmV0dXJuIG5ldyBKRUF0dHJpYnV0ZVtdIHtu
ZXcgRXJyb3IodGhpcywgIiIsIGUpfTsNCisJCQkJCQkJfQ0KKwkJCQkJCX0NCisJCQkJCX07DQor
CQkJCX0NCisJCQkJcmV0dXJuIGNoaWxkcmVuOw0KIAkJCX0NCiAJCX0pOw0KIAkJcmVzdWx0LmFk
ZChuZXcgSmF2YUVsZW1lbnRDaGlsZHJlblByb3BlcnR5KHRoaXMsICJQQVJBTUVURVIgVFlQRVMi
KSB7DQo=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>189128</attachid>
            <date>2011-02-16 15:29:00 -0500</date>
            <delta_ts>2011-02-17 10:29:47 -0500</delta_ts>
            <desc>Proposed fix + regression tests</desc>
            <filename>patch_334783.txt</filename>
            <type>text/plain</type>
            <size>47887</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvY29yZS9JTWV0aG9kLmphdmENCj09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVs
L29yZy9lY2xpcHNlL2pkdC9jb3JlL0lNZXRob2QuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9u
IDEuMzMNCmRpZmYgLXUgLXIxLjMzIElNZXRob2QuamF2YQ0KLS0tIG1vZGVsL29yZy9lY2xpcHNl
L2pkdC9jb3JlL0lNZXRob2QuamF2YQkyMyBBcHIgMjAxMCAxMzoxMTowNSAtMDAwMAkxLjMzDQor
KysgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2NvcmUvSU1ldGhvZC5qYXZhCTE2IEZlYiAyMDExIDIw
OjI2OjUxIC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0K
LSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4N
CisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMu
DQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55
aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2Yg
dGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRo
aXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtMTAwLDYgKzEwMCwxOCBA
QA0KICAqIEByZXR1cm4gdGhlIG51bWJlciBvZiBwYXJhbWV0ZXJzIG9mIHRoaXMgbWV0aG9kDQog
ICovDQogaW50IGdldE51bWJlck9mUGFyYW1ldGVycygpOw0KKw0KKy8qKg0KKyAqIFJldHVybnMg
YSB0d28tZGltZW5zaW9uYWwgYXJyYXkgb2YgYW5ub3RhdGlvbnMgZm9yIHRoaXMgbWV0aG9kJ3Mg
cGFyYW1ldGVycy4NCisgKiA8cD5BbiBlbXB0eSBhcnJheSBpcyByZXR1cm5lZCwgaWYgdGhlIG1l
dGhvZCBoYXMgbm8gcGFyYW1ldGVycy48L3A+DQorICogPHA+SWYgYSBzcGVjaWZpYyBwYXJhbWV0
ZXIgaGFzIG5vIGFubm90YXRpb25zLCBhbiBlbXB0eSBhcnJheSBpcyByZXR1cm5lZC48L3A+DQor
ICogDQorICogQHJldHVybiB0aGUgYXJyYXkgb2YgYW5ub3RhdGlvbnMgZm9yIHRoZSBzcGVjaWZp
ZWQgcGFyYW1ldGVyDQorICogQHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24NCisgKiBAc2luY2Ug
My43DQorICovDQorSUFubm90YXRpb25bXVtdIGdldFBhcmFtZXRlckFubm90YXRpb25zKCkgdGhy
b3dzIEphdmFNb2RlbEV4Y2VwdGlvbjsNCisNCiAvKioNCiAgKiBSZXR1cm5zIHRoZSBiaW5kaW5n
IGtleSBmb3IgdGhpcyBtZXRob2Qgb25seSBpZiB0aGUgZ2l2ZW4gbWV0aG9kIGlzIHtAbGluayAj
aXNSZXNvbHZlZCgpIHJlc29sdmVkfS4NCiAgKiBBIGJpbmRpbmcga2V5IGlzIGEga2V5IHRoYXQg
dW5pcXVlbHkgaWRlbnRpZmllcyB0aGlzIG1ldGhvZC4gSXQgYWxsb3dzIGFjY2Vzcw0KSW5kZXg6
IG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0Fubm90YXRpb24uamF2YQ0KPT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUv
bW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvQW5ub3RhdGlvbi5qYXZhLHYNCnJl
dHJpZXZpbmcgcmV2aXNpb24gMS43DQpkaWZmIC11IC1yMS43IEFubm90YXRpb24uamF2YQ0KLS0t
IG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0Fubm90YXRpb24uamF2YQk4IEp1
bCAyMDA5IDA2OjMyOjMzIC0wMDAwCTEuNw0KKysrIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL0Fubm90YXRpb24uamF2YQkxNiBGZWIgMjAxMSAyMDoyNjo1MSAtMDAwMA0KQEAg
LTEsNSArMSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMp
IDIwMDAsIDIwMDkgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChj
KSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMg
cmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAg
KiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1Ymxp
YyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwg
YW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTE3LDYgKzE3LDcgQEANCiBpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmNvcmUuSVNvdXJjZVJhbmdlOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5K
YXZhTW9kZWxFeGNlcHRpb247DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLlNvdXJjZVJh
bmdlOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5DaGFyT3BlcmF0aW9u
Ow0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LklCaW5hcnlB
bm5vdGF0aW9uOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52
LklCaW5hcnlFbGVtZW50VmFsdWVQYWlyOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29yZS51dGlsLlV0aWw7DQpAQCAtMjQsMTkgKzI1LDI3IEBADQogcHVibGljIGNsYXNzIEFu
bm90YXRpb24gZXh0ZW5kcyBTb3VyY2VSZWZFbGVtZW50IGltcGxlbWVudHMgSUFubm90YXRpb24g
ew0KIA0KIAlwdWJsaWMgc3RhdGljIGZpbmFsIElBbm5vdGF0aW9uW10gTk9fQU5OT1RBVElPTlMg
PSBuZXcgSUFubm90YXRpb25bMF07DQorCXB1YmxpYyBzdGF0aWMgZmluYWwgSUFubm90YXRpb25b
XVtdIE5PX1BBUkFNRVRFUl9BTk5PVEFUSU9OUyA9IG5ldyBJQW5ub3RhdGlvblswXVswXTsNCiAJ
cHVibGljIHN0YXRpYyBmaW5hbCBJTWVtYmVyVmFsdWVQYWlyW10gTk9fTUVNQkVSX1ZBTFVFX1BB
SVJTID0gbmV3IElNZW1iZXJWYWx1ZVBhaXJbMF07DQogDQogCXByb3RlY3RlZCBTdHJpbmcgbmFt
ZTsNCiAJLy8gcmVxdWlyZSB0byBkaXN0aW5ndWlzaCBzYW1lIGFubm90YXRpb25zIGluIGRpZmZl
cmVudCBtZW1iZXIgdmFsdWUgcGFpcnMNCiAJcHJvdGVjdGVkIFN0cmluZyBtZW1iZXJWYWx1ZVBh
aXJOYW1lOw0KIA0KKwlwcm90ZWN0ZWQgY2hhcltdIGFyZ3VtZW50TmFtZTsNCisNCiAJcHVibGlj
IEFubm90YXRpb24oSmF2YUVsZW1lbnQgcGFyZW50LCBTdHJpbmcgbmFtZSkgew0KIAkJdGhpcyhw
YXJlbnQsIG5hbWUsIG51bGwpOw0KIAl9DQogDQogCXB1YmxpYyBBbm5vdGF0aW9uKEphdmFFbGVt
ZW50IHBhcmVudCwgU3RyaW5nIG5hbWUsIFN0cmluZyBtZW1iZXJWYWx1ZVBhaXJOYW1lKSB7DQor
CQl0aGlzKHBhcmVudCwgbnVsbCwgbmFtZSwgbWVtYmVyVmFsdWVQYWlyTmFtZSk7DQorCX0NCisN
CisJcHVibGljIEFubm90YXRpb24oSmF2YUVsZW1lbnQgcGFyZW50LCBjaGFyW10gYXJndW1lbnRO
YW1lLCBTdHJpbmcgbmFtZSwgU3RyaW5nIG1lbWJlclZhbHVlUGFpck5hbWUpIHsNCiAJCXN1cGVy
KHBhcmVudCk7DQogCQl0aGlzLm5hbWUgPSBuYW1lOw0KKwkJdGhpcy5hcmd1bWVudE5hbWUgPSBh
cmd1bWVudE5hbWU7DQogCQl0aGlzLm1lbWJlclZhbHVlUGFpck5hbWUgPSBtZW1iZXJWYWx1ZVBh
aXJOYW1lOw0KIAl9DQogDQpAQCAtNDUsNiArNTQsMTMgQEANCiAJCQlyZXR1cm4gZmFsc2U7DQog
CQl9DQogCQlBbm5vdGF0aW9uIG90aGVyID0gKEFubm90YXRpb24pIG87DQorCQlpZiAodGhpcy5h
cmd1bWVudE5hbWUgPT0gbnVsbCkgew0KKwkJCWlmIChvdGhlci5hcmd1bWVudE5hbWUgIT0gbnVs
bCkgew0KKwkJCQlyZXR1cm4gZmFsc2U7DQorCQkJfQ0KKwkJfSBlbHNlIGlmICghQ2hhck9wZXJh
dGlvbi5lcXVhbHModGhpcy5hcmd1bWVudE5hbWUsIG90aGVyLmFyZ3VtZW50TmFtZSkpIHsNCisJ
CQlyZXR1cm4gZmFsc2U7DQorCQl9DQogCQlpZiAodGhpcy5tZW1iZXJWYWx1ZVBhaXJOYW1lID09
IG51bGwpIHsNCiAJCQlpZiAob3RoZXIubWVtYmVyVmFsdWVQYWlyTmFtZSAhPSBudWxsKQ0KIAkJ
CQlyZXR1cm4gZmFsc2U7DQpAQCAtMTI5LDYgKzE0NSw3IEBADQogCQlmaW5hbCBpbnQgcHJpbWUg
PSAzMTsNCiAJCWludCByZXN1bHQgPSBzdXBlci5oYXNoQ29kZSgpOw0KIAkJcmVzdWx0ID0gcHJp
bWUgKiByZXN1bHQgKyAoKHRoaXMubWVtYmVyVmFsdWVQYWlyTmFtZSA9PSBudWxsKSA/IDAgOiB0
aGlzLm1lbWJlclZhbHVlUGFpck5hbWUuaGFzaENvZGUoKSk7DQorCQlyZXN1bHQgPSBwcmltZSAq
IHJlc3VsdCArICgodGhpcy5hcmd1bWVudE5hbWUgPT0gbnVsbCkgPyAwIDogQ2hhck9wZXJhdGlv
bi5oYXNoQ29kZSh0aGlzLmFyZ3VtZW50TmFtZSkpOw0KIAkJcmVzdWx0ID0gcHJpbWUgKiByZXN1
bHQgKyB0aGlzLm5hbWUuaGFzaENvZGUoKTsNCiAJCXJldHVybiByZXN1bHQ7DQogCX0NCkluZGV4
OiBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9CaW5hcnlNZW1iZXIuamF2YQ0K
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNv
cmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvQmluYXJ5TWVtYmVyLmphdmEs
dg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjM2DQpkaWZmIC11IC1yMS4zNiBCaW5hcnlNZW1iZXIu
amF2YQ0KLS0tIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0JpbmFyeU1lbWJl
ci5qYXZhCTI4IEFwciAyMDA5IDE2OjUzOjAxIC0wMDAwCTEuMzYNCisrKyBtb2RlbC9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29yZS9CaW5hcnlNZW1iZXIuamF2YQkxNiBGZWIgMjAxMSAyMDoy
Njo1MSAtMDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0g
KiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMDkgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQor
ICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0K
ICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWlu
ZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRo
ZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlz
IGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTQ3LDkgKzQ3LDEzIEBADQog
CQlyZXR1cm4gc3RhbmRhcmRBbm5vdGF0aW9uczsNCiAJaW50IGxlbmd0aCA9IGJpbmFyeUFubm90
YXRpb25zLmxlbmd0aDsNCiAJaW50IHN0YW5kYXJkTGVuZ3RoID0gc3RhbmRhcmRBbm5vdGF0aW9u
cy5sZW5ndGg7DQotCUlBbm5vdGF0aW9uW10gYW5ub3RhdGlvbnMgPSBuZXcgSUFubm90YXRpb25b
bGVuZ3RoICsgc3RhbmRhcmRMZW5ndGhdOw0KKwlpbnQgZnVsbExlbmd0aCA9IGxlbmd0aCArIHN0
YW5kYXJkTGVuZ3RoOw0KKwlpZiAoZnVsbExlbmd0aCA9PSAwKSB7DQorCQlyZXR1cm4gQW5ub3Rh
dGlvbi5OT19BTk5PVEFUSU9OUzsNCisJfQ0KKwlJQW5ub3RhdGlvbltdIGFubm90YXRpb25zID0g
bmV3IElBbm5vdGF0aW9uW2Z1bGxMZW5ndGhdOw0KIAlmb3IgKGludCBpID0gMDsgaSA8IGxlbmd0
aDsgaSsrKSB7DQotCQlhbm5vdGF0aW9uc1tpXSA9IFV0aWwuZ2V0QW5ub3RhdGlvbih0aGlzLCBi
aW5hcnlBbm5vdGF0aW9uc1tpXSwgbnVsbCk7DQorCQlhbm5vdGF0aW9uc1tpXSA9IFV0aWwuZ2V0
QW5ub3RhdGlvbih0aGlzLCBudWxsLCBiaW5hcnlBbm5vdGF0aW9uc1tpXSwgbnVsbCk7DQogCX0N
CiAJU3lzdGVtLmFycmF5Y29weShzdGFuZGFyZEFubm90YXRpb25zLCAwLCBhbm5vdGF0aW9ucywg
bGVuZ3RoLCBzdGFuZGFyZExlbmd0aCk7DQogCXJldHVybiBhbm5vdGF0aW9uczsNCkBAIC01Nyw3
ICs2MSw3IEBADQogcHJpdmF0ZSBJQW5ub3RhdGlvbiBnZXRBbm5vdGF0aW9uKGNoYXJbXVtdIGFu
bm90YXRpb25OYW1lKSB7DQogCXJldHVybiBuZXcgQW5ub3RhdGlvbih0aGlzLCBuZXcgU3RyaW5n
KENoYXJPcGVyYXRpb24uY29uY2F0V2l0aChhbm5vdGF0aW9uTmFtZSwgJy4nKSkpOw0KIH0NCi1w
cml2YXRlIElBbm5vdGF0aW9uW10gZ2V0U3RhbmRhcmRBbm5vdGF0aW9ucyhsb25nIHRhZ0JpdHMp
IHsNCitwcm90ZWN0ZWQgSUFubm90YXRpb25bXSBnZXRTdGFuZGFyZEFubm90YXRpb25zKGxvbmcg
dGFnQml0cykgew0KIAlpZiAoKHRhZ0JpdHMgJiBUYWdCaXRzLkFsbFN0YW5kYXJkQW5ub3RhdGlv
bnNNYXNrKSA9PSAwKQ0KIAkJcmV0dXJuIEFubm90YXRpb24uTk9fQU5OT1RBVElPTlM7DQogCUFy
cmF5TGlzdCBhbm5vdGF0aW9ucyA9IG5ldyBBcnJheUxpc3QoKTsNCkluZGV4OiBtb2RlbC9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9CaW5hcnlNZXRob2QuamF2YQ0KPT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0K
UkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvQmluYXJ5TWV0aG9kLmphdmEsdg0KcmV0cmlldmlu
ZyByZXZpc2lvbiAxLjExMQ0KZGlmZiAtdSAtcjEuMTExIEJpbmFyeU1ldGhvZC5qYXZhDQotLS0g
bW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvQmluYXJ5TWV0aG9kLmphdmEJMjAg
SmFuIDIwMTEgMDI6Mjg6NDMgLTAwMDAJMS4xMTENCisrKyBtb2RlbC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29yZS9CaW5hcnlNZXRob2QuamF2YQkxNiBGZWIgMjAxMSAyMDoyNjo1MSAtMDAw
MA0KQEAgLTExLDcgKzExLDE1IEBADQogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29yZTsNCiANCiBpbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLklQcm9ncmVzc01vbml0
b3I7DQotaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLio7DQoraW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5jb3JlLkZsYWdzOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JQW5ub3RhdGlv
bjsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSU1lbWJlclZhbHVlUGFpcjsNCitpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSU1ldGhvZDsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmNvcmUuSVR5cGU7DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklUeXBlUGFyYW1ldGVy
Ow0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5KYXZhQ29yZTsNCitpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmNvcmUuSmF2YU1vZGVsRXhjZXB0aW9uOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuY29yZS5TaWduYXR1cmU7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVy
LkNoYXJPcGVyYXRpb247DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci5jbGFzc2ZtdC5DbGFzc0ZpbGVDb25zdGFudHM7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb21waWxlci5lbnYuSUJpbmFyeUFubm90YXRpb247DQpAQCAtNjEsNiArNjksNDEg
QEANCiAJSUJpbmFyeUFubm90YXRpb25bXSBiaW5hcnlBbm5vdGF0aW9ucyA9IGluZm8uZ2V0QW5u
b3RhdGlvbnMoKTsNCiAJcmV0dXJuIGdldEFubm90YXRpb25zKGJpbmFyeUFubm90YXRpb25zLCBp
bmZvLmdldFRhZ0JpdHMoKSk7DQogfQ0KKy8qKg0KKyAqIEBzZWUgSU1ldGhvZCNnZXRQYXJhbWV0
ZXJBbm5vdGF0aW9ucygpDQorICovDQorcHVibGljIElBbm5vdGF0aW9uW11bXSBnZXRQYXJhbWV0
ZXJBbm5vdGF0aW9ucygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gew0KKwlJQmluYXJ5TWV0
aG9kIGluZm8gPSAoSUJpbmFyeU1ldGhvZCkgZ2V0RWxlbWVudEluZm8oKTsNCisJaW50IGxlbmd0
aCA9IHRoaXMucGFyYW1ldGVyVHlwZXMubGVuZ3RoOw0KKwlpZiAobGVuZ3RoID09IDApIHsNCisJ
CXJldHVybiBBbm5vdGF0aW9uLk5PX1BBUkFNRVRFUl9BTk5PVEFUSU9OUzsNCisJfQ0KKwlJQW5u
b3RhdGlvbltdW10gYW5ub3RhdGlvbnMgPSBuZXcgSUFubm90YXRpb25bbGVuZ3RoXVtdOw0KKwlj
aGFyW11bXSBhcmd1bWVudE5hbWVzID0gaW5mby5nZXRBcmd1bWVudE5hbWVzKCk7DQorCWlmIChh
cmd1bWVudE5hbWVzID09IG51bGwgfHwgYXJndW1lbnROYW1lcy5sZW5ndGggPCBsZW5ndGgpIHsN
CisJCWFyZ3VtZW50TmFtZXMgPSBuZXcgY2hhcltsZW5ndGhdW107DQorCQlmb3IgKGludCBqID0g
MDsgaiA8IGxlbmd0aDsgaisrKSB7DQorCQkJYXJndW1lbnROYW1lc1tqXSA9ICgiYXJnIiArIGop
LnRvQ2hhckFycmF5KCk7IC8vJE5PTi1OTFMtMSQNCisJCX0NCisJfQ0KKwlmb3IgKGludCBpPSAw
OyBpIDwgbGVuZ3RoOyBpKyspIHsNCisJCWFubm90YXRpb25zW2ldID0gZ2V0QW5ub3RhdGlvbnMo
YXJndW1lbnROYW1lc1tpXSwgaW5mby5nZXRQYXJhbWV0ZXJBbm5vdGF0aW9ucyhpKSwgaW5mby5n
ZXRUYWdCaXRzKCkpOw0KKwl9DQorCXJldHVybiBhbm5vdGF0aW9uczsNCit9DQorcHJpdmF0ZSBJ
QW5ub3RhdGlvbltdIGdldEFubm90YXRpb25zKGNoYXJbXSBhcmd1bWVudE5hbWUsIElCaW5hcnlB
bm5vdGF0aW9uW10gYmluYXJ5QW5ub3RhdGlvbnMsIGxvbmcgdGFnQml0cykgew0KKwlJQW5ub3Rh
dGlvbltdIHN0YW5kYXJkQW5ub3RhdGlvbnMgPSBnZXRTdGFuZGFyZEFubm90YXRpb25zKHRhZ0Jp
dHMpOw0KKwlpZiAoYmluYXJ5QW5ub3RhdGlvbnMgPT0gbnVsbCkNCisJCXJldHVybiBzdGFuZGFy
ZEFubm90YXRpb25zOw0KKwlpbnQgbGVuZ3RoID0gYmluYXJ5QW5ub3RhdGlvbnMubGVuZ3RoOw0K
KwlpbnQgc3RhbmRhcmRMZW5ndGggPSBzdGFuZGFyZEFubm90YXRpb25zLmxlbmd0aDsNCisJSUFu
bm90YXRpb25bXSBhbm5vdGF0aW9ucyA9IG5ldyBJQW5ub3RhdGlvbltsZW5ndGggKyBzdGFuZGFy
ZExlbmd0aF07DQorCWZvciAoaW50IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHsNCisJCWFubm90
YXRpb25zW2ldID0gVXRpbC5nZXRBbm5vdGF0aW9uKHRoaXMsIGFyZ3VtZW50TmFtZSwgYmluYXJ5
QW5ub3RhdGlvbnNbaV0sIG51bGwpOw0KKwl9DQorCVN5c3RlbS5hcnJheWNvcHkoc3RhbmRhcmRB
bm5vdGF0aW9ucywgMCwgYW5ub3RhdGlvbnMsIGxlbmd0aCwgc3RhbmRhcmRMZW5ndGgpOw0KKwly
ZXR1cm4gYW5ub3RhdGlvbnM7DQorfQ0KIHB1YmxpYyBJTWVtYmVyVmFsdWVQYWlyIGdldERlZmF1
bHRWYWx1ZSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gew0KIAlJQmluYXJ5TWV0aG9kIGlu
Zm8gPSAoSUJpbmFyeU1ldGhvZCkgZ2V0RWxlbWVudEluZm8oKTsNCiAJT2JqZWN0IGRlZmF1bHRW
YWx1ZSA9IGluZm8uZ2V0RGVmYXVsdFZhbHVlKCk7DQpJbmRleDogbW9kZWwvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvcmUvQ2xhc3NGaWxlSW5mby5qYXZhDQo9PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmls
ZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29yZS9DbGFzc0ZpbGVJbmZvLmphdmEsdg0KcmV0cmlldmluZyByZXZp
c2lvbiAxLjQ5DQpkaWZmIC11IC1yMS40OSBDbGFzc0ZpbGVJbmZvLmphdmENCi0tLSBtb2RlbC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9DbGFzc0ZpbGVJbmZvLmphdmEJMyBTZXAgMjAx
MCAxNToyMDowMyAtMDAwMAkxLjQ5DQorKysgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvcmUvQ2xhc3NGaWxlSW5mby5qYXZhCTE2IEZlYiAyMDExIDIwOjI2OjUxIC0wMDAwDQpAQCAt
MSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykg
MjAwMCwgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCisgKiBDb3B5cmlnaHQgKGMp
IDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQogICogQWxsIHJpZ2h0cyBy
ZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0KICAq
IGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGlj
IExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBh
bmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtNDEsMjUgKzQxLDI4IEBADQogCSAqLw0KIAlwcm90ZWN0
ZWQgSVR5cGVQYXJhbWV0ZXJbXSB0eXBlUGFyYW1ldGVyczsNCiANCitwcml2YXRlIHZvaWQgZ2Vu
ZXJhdGVBbm5vdGF0aW9uc0luZm9zKEJpbmFyeU1lbWJlciBtZW1iZXIsIElCaW5hcnlBbm5vdGF0
aW9uW10gYmluYXJ5QW5ub3RhdGlvbnMsIGxvbmcgdGFnQml0cywgSGFzaE1hcCBuZXdFbGVtZW50
cykgew0KKwlnZW5lcmF0ZUFubm90YXRpb25zSW5mb3MobWVtYmVyLCBudWxsLCBiaW5hcnlBbm5v
dGF0aW9ucywgdGFnQml0cywgbmV3RWxlbWVudHMpOw0KK30NCiAvKioNCiAgKiBDcmVhdGVzIHRo
ZSBoYW5kbGVzIGFuZCBpbmZvcyBmb3IgdGhlIGFubm90YXRpb25zIG9mIHRoZSBnaXZlbiBiaW5h
cnkgbWVtYmVyLg0KICAqIEFkZHMgbmV3IGhhbmRsZXMgdG8gdGhlIGdpdmVuIHZlY3Rvci4NCiAg
Ki8NCi1wcml2YXRlIHZvaWQgZ2VuZXJhdGVBbm5vdGF0aW9uc0luZm9zKEJpbmFyeU1lbWJlciBt
ZW1iZXIsIElCaW5hcnlBbm5vdGF0aW9uW10gYmluYXJ5QW5ub3RhdGlvbnMsIGxvbmcgdGFnQml0
cywgSGFzaE1hcCBuZXdFbGVtZW50cykgew0KK3ByaXZhdGUgdm9pZCBnZW5lcmF0ZUFubm90YXRp
b25zSW5mb3MoQmluYXJ5TWVtYmVyIG1lbWJlciwgY2hhcltdIHBhcmFtZXRlck5hbWUsIElCaW5h
cnlBbm5vdGF0aW9uW10gYmluYXJ5QW5ub3RhdGlvbnMsIGxvbmcgdGFnQml0cywgSGFzaE1hcCBu
ZXdFbGVtZW50cykgew0KIAlpZiAoYmluYXJ5QW5ub3RhdGlvbnMgIT0gbnVsbCkgew0KIAkJZm9y
IChpbnQgaSA9IDAsIGxlbmd0aCA9IGJpbmFyeUFubm90YXRpb25zLmxlbmd0aDsgaSA8IGxlbmd0
aDsgaSsrKSB7DQogCQkJSUJpbmFyeUFubm90YXRpb24gYW5ub3RhdGlvbkluZm8gPSBiaW5hcnlB
bm5vdGF0aW9uc1tpXTsNCi0JCQlnZW5lcmF0ZUFubm90YXRpb25JbmZvKG1lbWJlciwgbmV3RWxl
bWVudHMsIGFubm90YXRpb25JbmZvKTsNCisJCQlnZW5lcmF0ZUFubm90YXRpb25JbmZvKG1lbWJl
ciwgcGFyYW1ldGVyTmFtZSwgbmV3RWxlbWVudHMsIGFubm90YXRpb25JbmZvLCBudWxsKTsNCiAJ
CX0NCiAJfQ0KLQlnZW5lcmF0ZVN0YW5kYXJkQW5ub3RhdGlvbnNJbmZvcyhtZW1iZXIsIHRhZ0Jp
dHMsIG5ld0VsZW1lbnRzKTsNCi19DQotcHJpdmF0ZSB2b2lkIGdlbmVyYXRlQW5ub3RhdGlvbklu
Zm8oSmF2YUVsZW1lbnQgcGFyZW50LCBIYXNoTWFwIG5ld0VsZW1lbnRzLCBJQmluYXJ5QW5ub3Rh
dGlvbiBhbm5vdGF0aW9uSW5mbykgew0KLQlnZW5lcmF0ZUFubm90YXRpb25JbmZvKHBhcmVudCwg
bmV3RWxlbWVudHMsIGFubm90YXRpb25JbmZvLCBudWxsKTsNCisJZ2VuZXJhdGVTdGFuZGFyZEFu
bm90YXRpb25zSW5mb3MobWVtYmVyLCBwYXJhbWV0ZXJOYW1lLCB0YWdCaXRzLCBuZXdFbGVtZW50
cyk7DQogfQ0KIHByaXZhdGUgdm9pZCBnZW5lcmF0ZUFubm90YXRpb25JbmZvKEphdmFFbGVtZW50
IHBhcmVudCwgSGFzaE1hcCBuZXdFbGVtZW50cywgSUJpbmFyeUFubm90YXRpb24gYW5ub3RhdGlv
bkluZm8sIFN0cmluZyBtZW1iZXJWYWx1ZVBhaXJOYW1lKSB7DQorCWdlbmVyYXRlQW5ub3RhdGlv
bkluZm8ocGFyZW50LCBudWxsLCBuZXdFbGVtZW50cywgYW5ub3RhdGlvbkluZm8sIG1lbWJlclZh
bHVlUGFpck5hbWUpOw0KK30NCitwcml2YXRlIHZvaWQgZ2VuZXJhdGVBbm5vdGF0aW9uSW5mbyhK
YXZhRWxlbWVudCBwYXJlbnQsIGNoYXJbXSBwYXJhbWV0ZXJOYW1lLCBIYXNoTWFwIG5ld0VsZW1l
bnRzLCBJQmluYXJ5QW5ub3RhdGlvbiBhbm5vdGF0aW9uSW5mbywgU3RyaW5nIG1lbWJlclZhbHVl
UGFpck5hbWUpIHsNCiAJY2hhcltdIHR5cGVOYW1lID0gb3JnLmVjbGlwc2UuamR0LmNvcmUuU2ln
bmF0dXJlLnRvQ2hhckFycmF5KENoYXJPcGVyYXRpb24ucmVwbGFjZU9uQ29weShhbm5vdGF0aW9u
SW5mby5nZXRUeXBlTmFtZSgpLCAnLycsICcuJykpOw0KLQlBbm5vdGF0aW9uIGFubm90YXRpb24g
PSBuZXcgQW5ub3RhdGlvbihwYXJlbnQsIG5ldyBTdHJpbmcodHlwZU5hbWUpLCBtZW1iZXJWYWx1
ZVBhaXJOYW1lKTsNCisJQW5ub3RhdGlvbiBhbm5vdGF0aW9uID0gbmV3IEFubm90YXRpb24ocGFy
ZW50LCBwYXJhbWV0ZXJOYW1lLCBuZXcgU3RyaW5nKHR5cGVOYW1lKSwgbWVtYmVyVmFsdWVQYWly
TmFtZSk7DQogCXdoaWxlIChuZXdFbGVtZW50cy5jb250YWluc0tleShhbm5vdGF0aW9uKSkgew0K
IAkJYW5ub3RhdGlvbi5vY2N1cnJlbmNlQ291bnQrKzsNCiAJfQ0KQEAgLTgxLDcgKzg0LDcgQEAN
CiAJCX0NCiAJfQ0KIH0NCi1wcml2YXRlIHZvaWQgZ2VuZXJhdGVTdGFuZGFyZEFubm90YXRpb25z
SW5mb3MoQmluYXJ5TWVtYmVyIG1lbWJlciwgbG9uZyB0YWdCaXRzLCBIYXNoTWFwIG5ld0VsZW1l
bnRzKSB7DQorcHJpdmF0ZSB2b2lkIGdlbmVyYXRlU3RhbmRhcmRBbm5vdGF0aW9uc0luZm9zKEJp
bmFyeU1lbWJlciBtZW1iZXIsIGNoYXJbXSBwYXJhbWV0ZXJOYW1lLCBsb25nIHRhZ0JpdHMsIEhh
c2hNYXAgbmV3RWxlbWVudHMpIHsNCiAJaWYgKCh0YWdCaXRzICYgVGFnQml0cy5BbGxTdGFuZGFy
ZEFubm90YXRpb25zTWFzaykgPT0gMCkNCiAJCXJldHVybjsNCiAJaWYgKCh0YWdCaXRzICYgVGFn
Qml0cy5Bbm5vdGF0aW9uVGFyZ2V0TUFTSykgIT0gMCkgew0KQEAgLTI2OCw3ICsyNzEsNyBAQA0K
IAkJCQlmaW5hbCBTdHJpbmdbXSBwYXJhbWV0ZXJUeXBlcyA9IFNpZ25hdHVyZS5nZXRQYXJhbWV0
ZXJUeXBlcyhuZXcgU3RyaW5nKGRlc2NyaXB0b3IpKTsNCiAJCQkJcE5hbWVzWzBdID0gcGFyYW1l
dGVyVHlwZXNbMF07DQogCQkJfQ0KLQkJfWNhdGNoIChJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24g
ZSkgew0KKwkJfSBjYXRjaCAoSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uIGUpIHsNCiAJCQkvLyBw
cm90ZWN0IGFnYWluc3QgbWFsZm9ybWVkIC5jbGFzcyBmaWxlIChlLmcuIGNvbS9zdW4vY3J5cHRv
L3Byb3ZpZGVyL1N1bkpDRV9iLmNsYXNzIGhhcyBhICdhJyBnZW5lcmljIHNpZ25hdHVyZSkNCiAJ
CQlzaWduYXR1cmUgPSBtZXRob2RJbmZvLmdldE1ldGhvZERlc2NyaXB0b3IoKTsNCiAJCQlwTmFt
ZXMgPSBTaWduYXR1cmUuZ2V0UGFyYW1ldGVyVHlwZXMobmV3IFN0cmluZyhzaWduYXR1cmUpKTsN
CkBAIC0yOTAsMTMgKzI5MywyNyBAQA0KIAkJQmluYXJ5TWV0aG9kIG1ldGhvZCA9IG5ldyBCaW5h
cnlNZXRob2QoKEphdmFFbGVtZW50KXR5cGUsIHNlbGVjdG9yLCBwTmFtZXMpOw0KIAkJY2hpbGRy
ZW5IYW5kbGVzLmFkZChtZXRob2QpOw0KIA0KLQkJLy8gZW5zdXJlIHRoYXQgMiBiaW5hcnkgbWV0
aG9kcyB3aXRoIHRoZSBzYW1lIHNpZ25hdHVyZSBidXQgd2l0aCBkaWZmZXJlbnQgcmV0dXJuIHR5
cGVzIGhhdmUgZGlmZmVyZW50IG9jY3VyZW5jZSBjb3VudHMuDQorCQkvLyBlbnN1cmUgdGhhdCAy
IGJpbmFyeSBtZXRob2RzIHdpdGggdGhlIHNhbWUgc2lnbmF0dXJlIGJ1dCB3aXRoIGRpZmZlcmVu
dCByZXR1cm4gdHlwZXMgaGF2ZSBkaWZmZXJlbnQgb2NjdXJyZW5jZSBjb3VudHMuDQogCQkvLyAo
Y2FzZSBvZiBicmlkZ2UgbWV0aG9kcyBpbiAxLjUpDQogCQl3aGlsZSAobmV3RWxlbWVudHMuY29u
dGFpbnNLZXkobWV0aG9kKSkNCiAJCQltZXRob2Qub2NjdXJyZW5jZUNvdW50Kys7DQogDQogCQlu
ZXdFbGVtZW50cy5wdXQobWV0aG9kLCBtZXRob2RJbmZvKTsNCiANCisJCWludCBtYXggPSBwTmFt
ZXMubGVuZ3RoOw0KKwkJY2hhcltdW10gYXJndW1lbnROYW1lcyA9IG1ldGhvZEluZm8uZ2V0QXJn
dW1lbnROYW1lcygpOw0KKwkJaWYgKGFyZ3VtZW50TmFtZXMgPT0gbnVsbCB8fCBhcmd1bWVudE5h
bWVzLmxlbmd0aCA8IG1heCkgew0KKwkJCWFyZ3VtZW50TmFtZXMgPSBuZXcgY2hhclttYXhdW107
DQorCQkJZm9yIChpbnQgaiA9IDA7IGogPCBtYXg7IGorKykgew0KKwkJCQlhcmd1bWVudE5hbWVz
W2pdID0gKCJhcmciICsgaikudG9DaGFyQXJyYXkoKTsgLy8kTk9OLU5MUy0xJA0KKwkJCX0NCisJ
CX0NCisJCWZvciAoaW50IGogPSAwOyBqIDwgbWF4OyBqKyspIHsNCisJCQlJQmluYXJ5QW5ub3Rh
dGlvbltdIHBhcmFtZXRlckFubm90YXRpb25zID0gbWV0aG9kSW5mby5nZXRQYXJhbWV0ZXJBbm5v
dGF0aW9ucyhqKTsNCisJCQlpZiAocGFyYW1ldGVyQW5ub3RhdGlvbnMgIT0gbnVsbCkgew0KKwkJ
CQlnZW5lcmF0ZUFubm90YXRpb25zSW5mb3MobWV0aG9kLCBhcmd1bWVudE5hbWVzW2pdLCBwYXJh
bWV0ZXJBbm5vdGF0aW9ucywgbWV0aG9kSW5mby5nZXRUYWdCaXRzKCksIG5ld0VsZW1lbnRzKTsN
CisJCQl9DQorCQl9DQogCQlnZW5lcmF0ZVR5cGVQYXJhbWV0ZXJJbmZvcyhtZXRob2QsIHNpZ25h
dHVyZSwgbmV3RWxlbWVudHMsIHR5cGVQYXJhbWV0ZXJIYW5kbGVzKTsNCiAJCWdlbmVyYXRlQW5u
b3RhdGlvbnNJbmZvcyhtZXRob2QsIG1ldGhvZEluZm8uZ2V0QW5ub3RhdGlvbnMoKSwgbWV0aG9k
SW5mby5nZXRUYWdCaXRzKCksIG5ld0VsZW1lbnRzKTsNCiAJCU9iamVjdCBkZWZhdWx0VmFsdWUg
PSBtZXRob2RJbmZvLmdldERlZmF1bHRWYWx1ZSgpOw0KSW5kZXg6IG1vZGVsL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL0NvbXBpbGF0aW9uVW5pdFN0cnVjdHVyZVJlcXVlc3Rvci5qYXZh
DQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Db21waWxhdGlvblVuaXRT
dHJ1Y3R1cmVSZXF1ZXN0b3IuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuODcNCmRpZmYg
LXUgLXIxLjg3IENvbXBpbGF0aW9uVW5pdFN0cnVjdHVyZVJlcXVlc3Rvci5qYXZhDQotLS0gbW9k
ZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvQ29tcGlsYXRpb25Vbml0U3RydWN0dXJl
UmVxdWVzdG9yLmphdmEJMjggSnVsIDIwMTAgMTY6MTc6MDEgLTAwMDAJMS44Nw0KKysrIG1vZGVs
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0NvbXBpbGF0aW9uVW5pdFN0cnVjdHVyZVJl
cXVlc3Rvci5qYXZhCTE2IEZlYiAyMDExIDIwOjI2OjUxIC0wMDAwDQpAQCAtMSw1ICsxLDUgQEAN
CiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMCBJ
Qk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEg
SUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhp
cyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2
YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEu
MA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxh
YmxlIGF0DQpAQCAtMTcsMTEgKzE3LDE5IEBADQogaW1wb3J0IGphdmEudXRpbC5TdGFjazsNCiAN
CiBpbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLkFzc2VydDsNCi1pbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmNvcmUuKjsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuRmxhZ3M7DQor
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklBbm5vdGF0aW9uOw0KK2ltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuY29yZS5JQ29tcGlsYXRpb25Vbml0Ow0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
Y29yZS5JSmF2YUVsZW1lbnQ7DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklNZW1iZXJW
YWx1ZVBhaXI7DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklUeXBlUGFyYW1ldGVyOw0K
K2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5TaWduYXR1cmU7DQogaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5jb3JlLmNvbXBpbGVyLkNhdGVnb3JpemVkUHJvYmxlbTsNCiBpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmNvcmUuY29tcGlsZXIuQ2hhck9wZXJhdGlvbjsNCiBpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmNvcmUuY29tcGlsZXIuSVByb2JsZW07DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb21waWxlci5JU291cmNlRWxlbWVudFJlcXVlc3RvcjsNCitpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5BU1ROb2RlOw0KK2ltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFyZ3VtZW50Ow0KIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFycmF5SW5pdGlhbGl6ZXI7DQogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQ2xhc3NMaXRlcmFsQWNjZXNz
Ow0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkV4cHJlc3Np
b247DQpAQCAtMzksNyArNDcsNiBAQA0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIudXRpbC5IYXNodGFibGVPZk9iamVjdFRvSW50Ow0KIGltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29yZS51dGlsLlJlZmVyZW5jZUluZm9BZGFwdGVyOw0KIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS51dGlsLlV0aWw7DQotaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQVNUTm9kZTsNCiAvKioNCiAgKiBBIHJlcXVl
c3RvciBmb3IgdGhlIGZ1enp5IHBhcnNlciwgdXNlZCB0byBjb21wdXRlIHRoZSBjaGlsZHJlbiBv
ZiBhbiBJQ29tcGlsYXRpb25Vbml0Lg0KICAqLw0KQEAgLTQyNyw4ICs0MzQsNTMgQEANCiAJCQlh
Y2NlcHRBbm5vdGF0aW9uKGFubm90YXRpb24sIGluZm8sIGhhbmRsZSk7DQogCQl9DQogCX0NCisJ
Ly8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMzNDc4Mw0K
KwkvLyBQcm9jZXNzIHRoZSBwYXJhbWV0ZXIgYW5ub3RhdGlvbnMgZnJvbSB0aGUgYXJndW1lbnRz
DQorCWlmIChtZXRob2RJbmZvLm5vZGUgIT0gbnVsbCAmJiBtZXRob2RJbmZvLm5vZGUuYXJndW1l
bnRzICE9IG51bGwpIHsNCisJCWluZm8uYXJndW1lbnRzID0gYWNjZXB0TWV0aG9kUGFyYW1ldGVy
cyhtZXRob2RJbmZvLm5vZGUuYXJndW1lbnRzLCBoYW5kbGUsIG1ldGhvZEluZm8pOw0KKwl9DQog
CXJldHVybiBpbmZvOw0KIH0NCitwcml2YXRlIExvY2FsVmFyaWFibGVbXSBhY2NlcHRNZXRob2RQ
YXJhbWV0ZXJzKEFyZ3VtZW50W10gYXJndW1lbnRzLCBKYXZhRWxlbWVudCBtZXRob2RIYW5kbGUs
IE1ldGhvZEluZm8gbWV0aG9kSW5mbykgew0KKwlpZiAoYXJndW1lbnRzID09IG51bGwpIHJldHVy
biBudWxsOw0KKwlMb2NhbFZhcmlhYmxlW10gcmVzdWx0ID0gbmV3IExvY2FsVmFyaWFibGVbYXJn
dW1lbnRzLmxlbmd0aF07DQorCUFubm90YXRpb25bXVtdIHBhcmFtQW5ub3RhdGlvbnMgPSBuZXcg
QW5ub3RhdGlvblthcmd1bWVudHMubGVuZ3RoXVtdOw0KKwlmb3IoaW50IGkgPSAwOyBpIDwgYXJn
dW1lbnRzLmxlbmd0aDsgaSsrKSB7DQorCQlBcmd1bWVudCBhcmd1bWVudCA9IGFyZ3VtZW50c1tp
XTsNCisJCUFubm90YXRhYmxlSW5mbyBsb2NhbFZhckluZm8gPSBuZXcgQW5ub3RhdGFibGVJbmZv
KCk7DQorCQlsb2NhbFZhckluZm8uc2V0U291cmNlUmFuZ2VTdGFydChhcmd1bWVudC5kZWNsYXJh
dGlvblNvdXJjZVN0YXJ0KTsNCisJCWxvY2FsVmFySW5mby5zZXRTb3VyY2VSYW5nZUVuZChhcmd1
bWVudC5kZWNsYXJhdGlvblNvdXJjZVN0YXJ0KTsNCisJCWxvY2FsVmFySW5mby5zZXROYW1lU291
cmNlU3RhcnQoYXJndW1lbnQuc291cmNlU3RhcnQpOw0KKwkJbG9jYWxWYXJJbmZvLnNldE5hbWVT
b3VyY2VFbmQoYXJndW1lbnQuc291cmNlRW5kKTsNCisJCQ0KKwkJU3RyaW5nIHBhcmFtVHlwZVNp
ZyA9IEphdmFNb2RlbE1hbmFnZXIuZ2V0SmF2YU1vZGVsTWFuYWdlcigpLmludGVybihTaWduYXR1
cmUuY3JlYXRlVHlwZVNpZ25hdHVyZShtZXRob2RJbmZvLnBhcmFtZXRlclR5cGVzW2ldLCBmYWxz
ZSkpOw0KKwkJcmVzdWx0W2ldID0gbmV3IExvY2FsVmFyaWFibGUoDQorCQkJCW1ldGhvZEhhbmRs
ZSwNCisJCQkJbmV3IFN0cmluZyhhcmd1bWVudC5uYW1lKSwNCisJCQkJYXJndW1lbnQuZGVjbGFy
YXRpb25Tb3VyY2VTdGFydCwNCisJCQkJYXJndW1lbnQuIGRlY2xhcmF0aW9uU291cmNlRW5kLA0K
KwkJCQlhcmd1bWVudC5zb3VyY2VTdGFydCwNCisJCQkJYXJndW1lbnQuc291cmNlRW5kLA0KKwkJ
CQlwYXJhbVR5cGVTaWcsDQorCQkJCWFyZ3VtZW50LmFubm90YXRpb25zLA0KKwkJCQlhcmd1bWVu
dC5tb2RpZmllcnMsIA0KKwkJCQl0cnVlKTsNCisJCXRoaXMubmV3RWxlbWVudHMucHV0KHJlc3Vs
dFtpXSwgbG9jYWxWYXJJbmZvKTsNCisJCXRoaXMuaW5mb1N0YWNrLnB1c2gobG9jYWxWYXJJbmZv
KTsNCisJCXRoaXMuaGFuZGxlU3RhY2sucHVzaChyZXN1bHRbaV0pOw0KKwkJaWYgKGFyZ3VtZW50
LmFubm90YXRpb25zICE9IG51bGwpIHsNCisJCQlwYXJhbUFubm90YXRpb25zW2ldID0gbmV3IEFu
bm90YXRpb25bYXJndW1lbnQuYW5ub3RhdGlvbnMubGVuZ3RoXTsNCisJCQlmb3IgKGludCAgaiA9
IDA7IGogPCBhcmd1bWVudC5hbm5vdGF0aW9ucy5sZW5ndGg7IGorKyApIHsNCisJCQkJb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uIGFubm90YXRpb24gPSBh
cmd1bWVudC5hbm5vdGF0aW9uc1tqXTsNCisJCQkJYWNjZXB0QW5ub3RhdGlvbihhbm5vdGF0aW9u
LCBsb2NhbFZhckluZm8sIHJlc3VsdFtpXSk7DQorCQkJfQ0KKwkJfQ0KKwkJdGhpcy5pbmZvU3Rh
Y2sucG9wKCk7DQorCQl0aGlzLmhhbmRsZVN0YWNrLnBvcCgpOw0KKwl9DQorCXJldHVybiByZXN1
bHQ7DQorfQ0KKw0KIC8qKg0KICAqIEBzZWUgSVNvdXJjZUVsZW1lbnRSZXF1ZXN0b3INCiAgKi8N
CkluZGV4OiBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Tb3VyY2VNZXRob2Qu
amF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvU291cmNlTWV0aG9k
LmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjY4DQpkaWZmIC11IC1yMS42OCBTb3VyY2VN
ZXRob2QuamF2YQ0KLS0tIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL1NvdXJj
ZU1ldGhvZC5qYXZhCTI3IEp1biAyMDA4IDE2OjAzOjUxIC0wMDAwCTEuNjgNCisrKyBtb2RlbC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Tb3VyY2VNZXRob2QuamF2YQkxNiBGZWIgMjAx
MSAyMDoyNjo1MSAtMDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMDggSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhl
cnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29t
cGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1z
IG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmll
cyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTEzNSw2ICsxMzUs
MjEgQEANCiAJcmV0dXJuIGluZm8udHlwZVBhcmFtZXRlcnM7DQogfQ0KIA0KK3B1YmxpYyBJQW5u
b3RhdGlvbltdW10gZ2V0UGFyYW1ldGVyQW5ub3RhdGlvbnMoKSB0aHJvd3MgSmF2YU1vZGVsRXhj
ZXB0aW9uIHsNCisJSUxvY2FsVmFyaWFibGVbXSBhcmd1bWVudHMgPSAoKFNvdXJjZU1ldGhvZEVs
ZW1lbnRJbmZvKSBnZXRFbGVtZW50SW5mbygpKS5hcmd1bWVudHM7DQorCWlmIChhcmd1bWVudHMg
PT0gbnVsbCkNCisJCXJldHVybiBBbm5vdGF0aW9uLk5PX1BBUkFNRVRFUl9BTk5PVEFUSU9OUzsN
CisJSUFubm90YXRpb25bXVtdIGFubm90YXRpb25zID0gbmV3IElBbm5vdGF0aW9uW2FyZ3VtZW50
cy5sZW5ndGhdW107DQorCWZvciAoaW50IGk9MDsgaSA8YXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7
DQorCQlMb2NhbFZhcmlhYmxlIGFyZ3VtZW50ID0gKExvY2FsVmFyaWFibGUpIGFyZ3VtZW50c1tp
XTsNCisJCWFubm90YXRpb25zW2ldID0gbmV3IEFubm90YXRpb25bYXJndW1lbnQuYW5ub3RhdGlv
bnMubGVuZ3RoXTsNCisJCWZvciAoaW50IGo9MDsgaiA8IGFyZ3VtZW50LmFubm90YXRpb25zLmxl
bmd0aDsgaisrKSB7DQorCQkJYW5ub3RhdGlvbnNbaV1bal0gPSBhcmd1bWVudC5hbm5vdGF0aW9u
c1tqXTsNCisJCX0NCisJfQ0KKwlyZXR1cm4gYW5ub3RhdGlvbnM7DQorfQ0KKw0KIC8qKg0KICAq
IEBzZWUgSU1ldGhvZCNnZXRUeXBlUGFyYW1ldGVyU2lnbmF0dXJlcygpDQogICogQHNpbmNlIDMu
MA0KSW5kZXg6IG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL1NvdXJjZU1ldGhv
ZEVsZW1lbnRJbmZvLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNl
L29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3Jl
L1NvdXJjZU1ldGhvZEVsZW1lbnRJbmZvLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjIy
DQpkaWZmIC11IC1yMS4yMiBTb3VyY2VNZXRob2RFbGVtZW50SW5mby5qYXZhDQotLS0gbW9kZWwv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvU291cmNlTWV0aG9kRWxlbWVudEluZm8uamF2
YQkyNyBKdW4gMjAwOCAxNjowMzo1MCAtMDAwMAkxLjIyDQorKysgbW9kZWwvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvcmUvU291cmNlTWV0aG9kRWxlbWVudEluZm8uamF2YQkxNiBGZWIgMjAx
MSAyMDoyNjo1MSAtMDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMDggSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhl
cnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29t
cGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1z
IG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmll
cyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTM4LDYgKzM4LDgg
QEANCiAJICogRm9yIGV4YW1wbGUsIEhhc2h0YWJsZSBvciBqYXZhLnV0aWwuSGFzaHRhYmxlLg0K
IAkgKi8NCiAJcHJvdGVjdGVkIGNoYXJbXVtdIGV4Y2VwdGlvblR5cGVzOw0KKwkNCisJcHJvdGVj
dGVkIElMb2NhbFZhcmlhYmxlW10gYXJndW1lbnRzOw0KIA0KIAkvKg0KIAkgKiBUaGUgdHlwZSBw
YXJhbWV0ZXJzIG9mIHRoaXMgc291cmNlIHR5cGUuIEVtcHR5IGlmIG5vbmUuDQpJbmRleDogbW9k
ZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvdXRpbC9VdGlsLmphdmENCj09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVs
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3V0aWwvVXRpbC5qYXZhLHYNCnJldHJpZXZp
bmcgcmV2aXNpb24gMS4xNDUNCmRpZmYgLXUgLXIxLjE0NSBVdGlsLmphdmENCi0tLSBtb2RlbC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS91dGlsL1V0aWwuamF2YQk2IEphbiAyMDExIDEz
OjQzOjU3IC0wMDAwCTEuMTQ1DQorKysgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvdXRpbC9VdGlsLmphdmEJMTYgRmViIDIwMTEgMjA6MjY6NTEgLTAwMDANCkBAIC0zMTM1LDkg
KzMxMzUsOSBAQA0KIAkJfQ0KIAkJcmV0dXJuIHR5cGVBcmd1bWVudHM7DQogCX0NCi0JcHVibGlj
IHN0YXRpYyBJQW5ub3RhdGlvbiBnZXRBbm5vdGF0aW9uKEphdmFFbGVtZW50IHBhcmVudCwgSUJp
bmFyeUFubm90YXRpb24gYmluYXJ5QW5ub3RhdGlvbiwgU3RyaW5nIG1lbWJlclZhbHVlUGFpck5h
bWUpIHsNCisJcHVibGljIHN0YXRpYyBJQW5ub3RhdGlvbiBnZXRBbm5vdGF0aW9uKEphdmFFbGVt
ZW50IHBhcmVudCwgY2hhcltdIGFyZ3VtZW50TmFtZSwgSUJpbmFyeUFubm90YXRpb24gYmluYXJ5
QW5ub3RhdGlvbiwgU3RyaW5nIG1lbWJlclZhbHVlUGFpck5hbWUpIHsNCiAJCWNoYXJbXSB0eXBl
TmFtZSA9IG9yZy5lY2xpcHNlLmpkdC5jb3JlLlNpZ25hdHVyZS50b0NoYXJBcnJheShDaGFyT3Bl
cmF0aW9uLnJlcGxhY2VPbkNvcHkoYmluYXJ5QW5ub3RhdGlvbi5nZXRUeXBlTmFtZSgpLCAnLycs
ICcuJykpOw0KLQkJcmV0dXJuIG5ldyBBbm5vdGF0aW9uKHBhcmVudCwgbmV3IFN0cmluZyh0eXBl
TmFtZSksIG1lbWJlclZhbHVlUGFpck5hbWUpOw0KKwkJcmV0dXJuIG5ldyBBbm5vdGF0aW9uKHBh
cmVudCwgYXJndW1lbnROYW1lLCBuZXcgU3RyaW5nKHR5cGVOYW1lKSwgbWVtYmVyVmFsdWVQYWly
TmFtZSk7DQogCX0NCiAJDQogCXB1YmxpYyBzdGF0aWMgT2JqZWN0IGdldEFubm90YXRpb25NZW1i
ZXJWYWx1ZShKYXZhRWxlbWVudCBwYXJlbnQsIE1lbWJlclZhbHVlUGFpciBtZW1iZXJWYWx1ZVBh
aXIsIE9iamVjdCBiaW5hcnlWYWx1ZSkgew0KQEAgLTMxNDUsNyArMzE0NSw3IEBADQogCQkJcmV0
dXJuIGdldEFubm90YXRpb25NZW1iZXJWYWx1ZShtZW1iZXJWYWx1ZVBhaXIsIChDb25zdGFudCkg
YmluYXJ5VmFsdWUpOw0KIAkJfSBlbHNlIGlmIChiaW5hcnlWYWx1ZSBpbnN0YW5jZW9mIElCaW5h
cnlBbm5vdGF0aW9uKSB7DQogCQkJbWVtYmVyVmFsdWVQYWlyLnZhbHVlS2luZCA9IElNZW1iZXJW
YWx1ZVBhaXIuS19BTk5PVEFUSU9OOw0KLQkJCXJldHVybiBnZXRBbm5vdGF0aW9uKHBhcmVudCwg
KElCaW5hcnlBbm5vdGF0aW9uKSBiaW5hcnlWYWx1ZSwgbWVtYmVyVmFsdWVQYWlyLmdldE1lbWJl
ck5hbWUoKSk7DQorCQkJcmV0dXJuIGdldEFubm90YXRpb24ocGFyZW50LCBudWxsLCAoSUJpbmFy
eUFubm90YXRpb24pIGJpbmFyeVZhbHVlLCBtZW1iZXJWYWx1ZVBhaXIuZ2V0TWVtYmVyTmFtZSgp
KTsNCiAJCX0gZWxzZSBpZiAoYmluYXJ5VmFsdWUgaW5zdGFuY2VvZiBDbGFzc1NpZ25hdHVyZSkg
ew0KIAkJCW1lbWJlclZhbHVlUGFpci52YWx1ZUtpbmQgPSBJTWVtYmVyVmFsdWVQYWlyLktfQ0xB
U1M7DQogCQkJY2hhcltdIGNsYXNzTmFtZSA9IFNpZ25hdHVyZS50b0NoYXJBcnJheShDaGFyT3Bl
cmF0aW9uLnJlcGxhY2VPbkNvcHkoKChDbGFzc1NpZ25hdHVyZSkgYmluYXJ5VmFsdWUpLmdldFR5
cGVOYW1lKCksICcvJywgJy4nKSk7DQojUCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21w
aWxlcg0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy91dGlsL1V0aWwuamF2
YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3V0aWwv
VXRpbC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS44Mg0KZGlmZiAtdSAtcjEuODIgVXRp
bC5qYXZhDQotLS0gc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3V0aWwvVXRpbC5qYXZh
CTI1IE9jdCAyMDEwIDEwOjMwOjE1IC0wMDAwCTEuODINCisrKyBzcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvdXRpbC9VdGlsLmphdmEJMTYgRmViIDIwMTEgMjA6MjY6NTEgLTAwMDANCkBA
IC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChj
KSAyMDAwLCAyMDEwIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAo
YykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRz
IHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQog
ICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJs
aWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24s
IGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC0zODIsNyArMzgyLDkgQEANCiB9DQogcHVibGljIHN0
YXRpYyB2b2lkIGNyZWF0ZUphcihTdHJpbmdbXSBqYXZhUGF0aHNBbmRDb250ZW50cywgU3RyaW5n
W10gZXh0cmFQYXRoc0FuZENvbnRlbnRzLCBTdHJpbmcgamFyUGF0aCwgU3RyaW5nW10gY2xhc3Nw
YXRoLCBTdHJpbmcgY29tcGxpYW5jZSwgTWFwIG9wdGlvbnMpIHRocm93cyBJT0V4Y2VwdGlvbiB7
DQogCU1hcCBjb21waWxlT3B0aW9ucyA9IGdldENvbXBpbGVPcHRpb25zKGNvbXBsaWFuY2UpOw0K
LQljb21waWxlT3B0aW9ucy5wdXRBbGwob3B0aW9ucyk7DQorCWlmIChvcHRpb25zICE9IG51bGwp
IHsNCisJCWNvbXBpbGVPcHRpb25zLnB1dEFsbChvcHRpb25zKTsNCisJfQ0KIAljcmVhdGVKYXIo
amF2YVBhdGhzQW5kQ29udGVudHMsIGV4dHJhUGF0aHNBbmRDb250ZW50cywgY29tcGlsZU9wdGlv
bnMsIGNsYXNzcGF0aCwgamFyUGF0aCk7DQogfQ0KIHB1YmxpYyBzdGF0aWMgdm9pZCBjcmVhdGVT
b3VyY2VaaXAoU3RyaW5nW10gcGF0aHNBbmRDb250ZW50cywgU3RyaW5nIHppcFBhdGgpIHRocm93
cyBJT0V4Y2VwdGlvbiB7DQojUCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbA0KSW5k
ZXg6IHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9BYnN0cmFjdEphdmFNb2Rl
bFRlc3RzLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9tb2RlbC9BYnN0cmFjdEphdmFNb2RlbFRlc3RzLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lv
biAxLjI0Mg0KZGlmZiAtdSAtcjEuMjQyIEFic3RyYWN0SmF2YU1vZGVsVGVzdHMuamF2YQ0KLS0t
IHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9BYnN0cmFjdEphdmFNb2RlbFRl
c3RzLmphdmEJNiBPY3QgMjAxMCAxNzozMjozMCAtMDAwMAkxLjI0Mg0KKysrIHNyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9BYnN0cmFjdEphdmFNb2RlbFRlc3RzLmphdmEJMTYg
RmViIDIwMTEgMjA6MjY6NTEgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEwIElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24g
YW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRo
ZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRo
ZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNj
b21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC00MDIs
MTYgKzQwMiwyOCBAQA0KIAkJYWRkTGlicmFyeUVudHJ5KGphdmFQcm9qZWN0LCBuZXcgUGF0aChq
YXJQYXRoKSwgdHJ1ZS8qZXhwb3J0ZWQqLyk7DQogCX0NCiAJcHJvdGVjdGVkIHZvaWQgYWRkTGli
cmFyeShTdHJpbmcgamFyTmFtZSwgU3RyaW5nIHNvdXJjZVppcE5hbWUsIFN0cmluZ1tdIHBhdGhB
bmRDb250ZW50cywgU3RyaW5nIGNvbXBsaWFuY2UpIHRocm93cyBDb3JlRXhjZXB0aW9uLCBJT0V4
Y2VwdGlvbiB7DQotCQlhZGRMaWJyYXJ5KHRoaXMuY3VycmVudFByb2plY3QsIGphck5hbWUsIHNv
dXJjZVppcE5hbWUsIHBhdGhBbmRDb250ZW50cywgbnVsbC8qbm8gbm9uLUphdmEgcmVzb3VyY2Vz
Ki8sIG51bGwsIG51bGwsIGNvbXBsaWFuY2UpOw0KKwkJYWRkTGlicmFyeSh0aGlzLmN1cnJlbnRQ
cm9qZWN0LCBqYXJOYW1lLCBzb3VyY2VaaXBOYW1lLCBwYXRoQW5kQ29udGVudHMsIG51bGwvKm5v
IG5vbi1KYXZhIHJlc291cmNlcyovLCBudWxsLCBudWxsLCBjb21wbGlhbmNlLCBudWxsKTsNCisJ
fQ0KKwlwcm90ZWN0ZWQgdm9pZCBhZGRMaWJyYXJ5KElKYXZhUHJvamVjdCBqYXZhUHJvamVjdCwg
U3RyaW5nIGphck5hbWUsIFN0cmluZyBzb3VyY2VaaXBOYW1lLCBTdHJpbmdbXSBwYXRoQW5kQ29u
dGVudHMsIFN0cmluZyBjb21wbGlhbmNlLCBNYXAgb3B0aW9ucykgdGhyb3dzIENvcmVFeGNlcHRp
b24sIElPRXhjZXB0aW9uIHsNCisJCWFkZExpYnJhcnkoamF2YVByb2plY3QsIGphck5hbWUsIHNv
dXJjZVppcE5hbWUsIHBhdGhBbmRDb250ZW50cywgbnVsbC8qbm8gbm9uLUphdmEgcmVzb3VyY2Vz
Ki8sIG51bGwsIG51bGwsIGNvbXBsaWFuY2UsIG9wdGlvbnMpOw0KIAl9DQogCXByb3RlY3RlZCB2
b2lkIGFkZExpYnJhcnkoSUphdmFQcm9qZWN0IGphdmFQcm9qZWN0LCBTdHJpbmcgamFyTmFtZSwg
U3RyaW5nIHNvdXJjZVppcE5hbWUsIFN0cmluZ1tdIHBhdGhBbmRDb250ZW50cywgU3RyaW5nIGNv
bXBsaWFuY2UpIHRocm93cyBDb3JlRXhjZXB0aW9uLCBJT0V4Y2VwdGlvbiB7DQotCQlhZGRMaWJy
YXJ5KGphdmFQcm9qZWN0LCBqYXJOYW1lLCBzb3VyY2VaaXBOYW1lLCBwYXRoQW5kQ29udGVudHMs
IG51bGwvKm5vIG5vbi1KYXZhIHJlc291cmNlcyovLCBudWxsLCBudWxsLCBjb21wbGlhbmNlKTsN
CisJCWFkZExpYnJhcnkoamF2YVByb2plY3QsIGphck5hbWUsIHNvdXJjZVppcE5hbWUsIHBhdGhB
bmRDb250ZW50cywgbnVsbC8qbm8gbm9uLUphdmEgcmVzb3VyY2VzKi8sIG51bGwsIG51bGwsIGNv
bXBsaWFuY2UsIG51bGwpOw0KIAl9DQogCXByb3RlY3RlZCB2b2lkIGFkZExpYnJhcnkoSUphdmFQ
cm9qZWN0IGphdmFQcm9qZWN0LCBTdHJpbmcgamFyTmFtZSwgU3RyaW5nIHNvdXJjZVppcE5hbWUs
IFN0cmluZ1tdIHBhdGhBbmRDb250ZW50cywgU3RyaW5nW10gbm9uSmF2YVJlc291cmNlcywgU3Ry
aW5nIGNvbXBsaWFuY2UpIHRocm93cyBDb3JlRXhjZXB0aW9uLCBJT0V4Y2VwdGlvbiB7DQotCQlh
ZGRMaWJyYXJ5KGphdmFQcm9qZWN0LCBqYXJOYW1lLCBzb3VyY2VaaXBOYW1lLCBwYXRoQW5kQ29u
dGVudHMsIG5vbkphdmFSZXNvdXJjZXMsIG51bGwsIG51bGwsIGNvbXBsaWFuY2UpOw0KKwkJYWRk
TGlicmFyeShqYXZhUHJvamVjdCwgamFyTmFtZSwgc291cmNlWmlwTmFtZSwgcGF0aEFuZENvbnRl
bnRzLCBub25KYXZhUmVzb3VyY2VzLCBudWxsLCBudWxsLCBjb21wbGlhbmNlLCBudWxsKTsNCiAJ
fQ0KLQlwcm90ZWN0ZWQgdm9pZCBhZGRMaWJyYXJ5KElKYXZhUHJvamVjdCBqYXZhUHJvamVjdCwg
U3RyaW5nIGphck5hbWUsIFN0cmluZyBzb3VyY2VaaXBOYW1lLCBTdHJpbmdbXSBwYXRoQW5kQ29u
dGVudHMsIFN0cmluZ1tdIG5vbkphdmFSZXNvdXJjZXMsIFN0cmluZ1tdIGxpYnJhcmllc0luY2x1
c2lvblBhdHRlcm5zLCBTdHJpbmdbXSBsaWJyYXJpZXNFeGNsdXNpb25QYXR0ZXJucywgU3RyaW5n
IGNvbXBsaWFuY2UpIHRocm93cyBDb3JlRXhjZXB0aW9uLCBJT0V4Y2VwdGlvbiB7DQotCQlJUHJv
amVjdCBwcm9qZWN0ID0gY3JlYXRlTGlicmFyeShqYXZhUHJvamVjdCwgamFyTmFtZSwgc291cmNl
WmlwTmFtZSwgcGF0aEFuZENvbnRlbnRzLCBub25KYXZhUmVzb3VyY2VzLCBjb21wbGlhbmNlKTsN
CisJcHJvdGVjdGVkIHZvaWQgYWRkTGlicmFyeSgNCisJCQlJSmF2YVByb2plY3QgamF2YVByb2pl
Y3QsDQorCQkJU3RyaW5nIGphck5hbWUsDQorCQkJU3RyaW5nIHNvdXJjZVppcE5hbWUsDQorCQkJ
U3RyaW5nW10gcGF0aEFuZENvbnRlbnRzLA0KKwkJCVN0cmluZ1tdIG5vbkphdmFSZXNvdXJjZXMs
DQorCQkJU3RyaW5nW10gbGlicmFyaWVzSW5jbHVzaW9uUGF0dGVybnMsDQorCQkJU3RyaW5nW10g
bGlicmFyaWVzRXhjbHVzaW9uUGF0dGVybnMsDQorCQkJU3RyaW5nIGNvbXBsaWFuY2UsDQorCQkJ
TWFwIG9wdGlvbnMpIHRocm93cyBDb3JlRXhjZXB0aW9uLCBJT0V4Y2VwdGlvbiB7DQorCQlJUHJv
amVjdCBwcm9qZWN0ID0gY3JlYXRlTGlicmFyeShqYXZhUHJvamVjdCwgamFyTmFtZSwgc291cmNl
WmlwTmFtZSwgcGF0aEFuZENvbnRlbnRzLCBub25KYXZhUmVzb3VyY2VzLCBjb21wbGlhbmNlLCBv
cHRpb25zKTsNCiAJCVN0cmluZyBwcm9qZWN0UGF0aCA9ICcvJyArIHByb2plY3QuZ2V0TmFtZSgp
ICsgJy8nOw0KIAkJYWRkTGlicmFyeUVudHJ5KA0KIAkJCWphdmFQcm9qZWN0LA0KQEAgLTQyMywx
MyArNDM1LDI5IEBADQogCQkJdHJ1ZQ0KIAkJKTsNCiAJfQ0KLQ0KLQlwcm90ZWN0ZWQgSVByb2pl
Y3QgY3JlYXRlTGlicmFyeShJSmF2YVByb2plY3QgamF2YVByb2plY3QsIFN0cmluZyBqYXJOYW1l
LCBTdHJpbmcgc291cmNlWmlwTmFtZSwgU3RyaW5nW10gcGF0aEFuZENvbnRlbnRzLCBTdHJpbmdb
XSBub25KYXZhUmVzb3VyY2VzLCBTdHJpbmcgY29tcGxpYW5jZSkgdGhyb3dzIElPRXhjZXB0aW9u
LCBDb3JlRXhjZXB0aW9uIHsNCisJcHJvdGVjdGVkIElQcm9qZWN0IGNyZWF0ZUxpYnJhcnkoDQor
CQkJSUphdmFQcm9qZWN0IGphdmFQcm9qZWN0LA0KKwkJCVN0cmluZyBqYXJOYW1lLA0KKwkJCVN0
cmluZyBzb3VyY2VaaXBOYW1lLA0KKwkJCVN0cmluZ1tdIHBhdGhBbmRDb250ZW50cywNCisJCQlT
dHJpbmdbXSBub25KYXZhUmVzb3VyY2VzLA0KKwkJCVN0cmluZyBjb21wbGlhbmNlKSB0aHJvd3Mg
SU9FeGNlcHRpb24sIENvcmVFeGNlcHRpb24gew0KKwkJcmV0dXJuIGNyZWF0ZUxpYnJhcnkoamF2
YVByb2plY3QsIGphck5hbWUsIHNvdXJjZVppcE5hbWUsIHBhdGhBbmRDb250ZW50cywgbm9uSmF2
YVJlc291cmNlcywgY29tcGxpYW5jZSwgbnVsbCk7DQorCX0NCisNCisJcHJvdGVjdGVkIElQcm9q
ZWN0IGNyZWF0ZUxpYnJhcnkoDQorCQkJSUphdmFQcm9qZWN0IGphdmFQcm9qZWN0LA0KKwkJCVN0
cmluZyBqYXJOYW1lLA0KKwkJCVN0cmluZyBzb3VyY2VaaXBOYW1lLA0KKwkJCVN0cmluZ1tdIHBh
dGhBbmRDb250ZW50cywNCisJCQlTdHJpbmdbXSBub25KYXZhUmVzb3VyY2VzLA0KKwkJCVN0cmlu
ZyBjb21wbGlhbmNlLA0KKwkJCU1hcCBvcHRpb25zKSB0aHJvd3MgSU9FeGNlcHRpb24sIENvcmVF
eGNlcHRpb24gew0KIAkJSVByb2plY3QgcHJvamVjdCA9IGphdmFQcm9qZWN0LmdldFByb2plY3Qo
KTsNCiAJCVN0cmluZyBwcm9qZWN0TG9jYXRpb24gPSBwcm9qZWN0LmdldExvY2F0aW9uKCkudG9P
U1N0cmluZygpOw0KIAkJU3RyaW5nIGphclBhdGggPSBwcm9qZWN0TG9jYXRpb24gKyBGaWxlLnNl
cGFyYXRvciArIGphck5hbWU7DQogCQlTdHJpbmdbXSBjbGFzcGF0aCA9IGdldDE1TGlicmFyeUlm
TmVlZGVkKGNvbXBsaWFuY2UpOw0KLQkJb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMudXRpbC5V
dGlsLmNyZWF0ZUphcihwYXRoQW5kQ29udGVudHMsIG5vbkphdmFSZXNvdXJjZXMsIGphclBhdGgs
IGNsYXNwYXRoLCBjb21wbGlhbmNlKTsNCisJCW9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLnV0
aWwuVXRpbC5jcmVhdGVKYXIocGF0aEFuZENvbnRlbnRzLCBub25KYXZhUmVzb3VyY2VzLCBqYXJQ
YXRoLCBjbGFzcGF0aCwgY29tcGxpYW5jZSwgb3B0aW9ucyk7DQogCQlpZiAocGF0aEFuZENvbnRl
bnRzICE9IG51bGwgJiYgcGF0aEFuZENvbnRlbnRzLmxlbmd0aCAhPSAwKSB7DQogCQkJU3RyaW5n
IHNvdXJjZVppcFBhdGggPSBwcm9qZWN0TG9jYXRpb24gKyBGaWxlLnNlcGFyYXRvciArIHNvdXJj
ZVppcE5hbWU7DQogCQkJb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMudXRpbC5VdGlsLmNyZWF0
ZVNvdXJjZVppcChwYXRoQW5kQ29udGVudHMsIHNvdXJjZVppcFBhdGgpOw0KQEAgLTExNTksNiAr
MTE4NywxMCBAQA0KIAkJb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMudXRpbC5VdGlsLmNyZWF0
ZUphcihqYXZhUGF0aHNBbmRDb250ZW50cywgbnVsbCxqYXJQYXRoLCBjbGFzc3BhdGgsIGNvbXBs
aWFuY2UpOw0KIAl9DQogDQorCXByb3RlY3RlZCB2b2lkIGNyZWF0ZUphcihTdHJpbmdbXSBqYXZh
UGF0aHNBbmRDb250ZW50cywgU3RyaW5nIGphclBhdGgsIFN0cmluZ1tdIGNsYXNzcGF0aCwgU3Ry
aW5nIGNvbXBsaWFuY2UsIE1hcCBvcHRpb25zKSB0aHJvd3MgSU9FeGNlcHRpb24gew0KKwkJb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMudXRpbC5VdGlsLmNyZWF0ZUphcihqYXZhUGF0aHNBbmRD
b250ZW50cywgbnVsbCwgamFyUGF0aCwgY2xhc3NwYXRoLCBjb21wbGlhbmNlLCBvcHRpb25zKTsN
CisJfQ0KKwkNCiAJLyoNCiAJfQ0KIAkgKiBDcmVhdGVzIGEgSmF2YSBwcm9qZWN0IHdoZXJlIHBy
aj1zcmM9YmluIGFuZCB3aXRoIEpDTF9MSUIgb24gaXRzIGNsYXNzcGF0aC4NCkluZGV4OiBzcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvUmVjb25jaWxlclRlc3RzLmphdmENCj09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9SZWNvbmNp
bGVyVGVzdHMuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTY0DQpkaWZmIC11IC1yMS4x
NjQgUmVjb25jaWxlclRlc3RzLmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvbW9kZWwvUmVjb25jaWxlclRlc3RzLmphdmEJMyBEZWMgMjAxMCAwODo0NDozMSAtMDAwMAkx
LjE2NA0KKysrIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9SZWNvbmNpbGVy
VGVzdHMuamF2YQkxNiBGZWIgMjAxMSAyMDoyNjo1MiAtMDAwMA0KQEAgLTEsNSArMSw1IEBADQog
LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJN
IENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMg
cHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFp
bGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAN
CiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJs
ZSBhdA0KQEAgLTM1Niw3ICszNTYsOCBAQA0KIAkJCQkiKiovKiINCiAJCQl9LA0KIAkJCW51bGws
IA0KLQkJCSIxLjQiDQorCQkJIjEuNCIsDQorCQkJbnVsbA0KIAkJKTsNCiAJCWNyZWF0ZUphdmFQ
cm9qZWN0KCJQMiIsIG5ldyBTdHJpbmdbXSB7InNyYyJ9LCBuZXcgU3RyaW5nW10geyJKQ0xfTElC
In0sIG5ldyBTdHJpbmdbXSB7Ii9QMSJ9LCAiYmluIik7DQogCQlzZXRVcFdvcmtpbmdDb3B5KCIv
UDIvc3JjL1kuamF2YSIsICJwdWJsaWMgY2xhc3MgWSBleHRlbmRzIHAuWCB7fSIpOw0KSW5kZXg6
IHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9UeXBlUmVzb2x2ZVRlc3RzLmph
dmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9U
eXBlUmVzb2x2ZVRlc3RzLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjE0DQpkaWZmIC11
IC1yMS4xNCBUeXBlUmVzb2x2ZVRlc3RzLmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvbW9kZWwvVHlwZVJlc29sdmVUZXN0cy5qYXZhCTI3IEp1biAyMDA4IDE2OjAyOjQw
IC0wMDAwCTEuMTQNCisrKyBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvVHlw
ZVJlc29sdmVUZXN0cy5qYXZhCTE2IEZlYiAyMDExIDIwOjI2OjUyIC0wMDAwDQpAQCAtMSw1ICsx
LDUgQEANCiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwMCwg
MjAwOCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAs
IDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQogICogQWxsIHJpZ2h0cyByZXNlcnZl
ZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0KICAqIGFyZSBt
YWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vu
c2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMg
YXZhaWxhYmxlIGF0DQpAQCAtMTAsOSArMTAsMTQgQEANCiAgKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
Ki8NCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsOw0KIA0KK2ltcG9y
dCBqYXZhLmlvLklPRXhjZXB0aW9uOw0KK2ltcG9ydCBqYXZhLnV0aWwuSGFzaE1hcDsNCitpbXBv
cnQgamF2YS51dGlsLk1hcDsNCisNCiBpbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLkNv
cmVFeGNlcHRpb247DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLio7DQogaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLnV0aWwuVXRpbDsNCitpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvcmUuTG9jYWxWYXJpYWJsZTsNCiANCiBpbXBvcnQganVuaXQuZnJhbWV3
b3JrLlRlc3Q7DQogDQpAQCAtOTUsNyArMTAwLDcgQEANCiB9DQogCXN0YXRpYyB7DQogLy8JCVRF
U1RTX05VTUJFUlMgPSBuZXcgaW50W10geyAxODIsIDE4MyB9Ow0KLS8vCQlURVNUU19OQU1FUyA9
IG5ldyBTdHJpbmdbXSB7InRlc3QwMTc3In07DQorLy8JCVRFU1RTX05BTUVTID0gbmV3IFN0cmlu
Z1tdIHsgInRlc3RQYXJhbUFubm90YXRpb25zNSIgfTsNCiAJfQ0KIAlwdWJsaWMgc3RhdGljIFRl
c3Qgc3VpdGUoKSB7DQogCQlyZXR1cm4gYnVpbGRNb2RlbFRlc3RTdWl0ZShUeXBlUmVzb2x2ZVRl
c3RzLmNsYXNzKTsNCkBAIC0yOTksNCArMzA0LDMxMCBAQA0KIAkJInA0LkEuSW5uZXIiLA0KIAkJ
dHlwZXMpOw0KIH0NCisvKioNCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9MzM0NzgzIg0KKyAqLw0KK3B1YmxpYyB2b2lkIHRlc3RQYXJhbUFu
bm90YXRpb25zKCkgdGhyb3dzIENvcmVFeGNlcHRpb24gew0KKwl0cnkgew0KKwkJY3JlYXRlSmF2
YVByb2plY3QoIlAiLCBuZXcgU3RyaW5nW10geyJzcmMifSwgbmV3IFN0cmluZ1tdIHsiSkNMMTVf
TElCIn0sICJiaW4iLCAiMS41Iik7DQorCQlTdHJpbmcgc291cmNlID0gInBhY2thZ2UgcDsiICsN
CisJCQkJInB1YmxpYyBjbGFzcyBYPFQ+IHtcbiIgKw0KKwkJCQkiICBYPFN0cmluZz4gZmllbGQ7
XG4iICsNCisJCQkJIglASW5qZWN0ICIgKw0KKwkJCQkiCXB1YmxpYyB2b2lkIFRlc3QoQERlZmF1
bHQgU3RyaW5nIHByb2Nlc3Nvcikge30iICsNCisJCQkJIn0iICsNCisJCQkJIkBpbnRlcmZhY2Ug
SW5qZWN0e1xuIiArDQorCQkJCSJ9IiArDQorCQkJCSJAaW50ZXJmYWNlIERlZmF1bHR7XG4iICsN
CisJCQkJIn0iOw0KKwkJY3JlYXRlRm9sZGVyKCIvUC9zcmMvcCIpOw0KKwkJY3JlYXRlRmlsZSgN
CisJCQkiL1Avc3JjL3AvWC5qYXZhIiwNCisJCQlzb3VyY2UNCisJCSk7DQorCQl3YWl0Rm9yQXV0
b0J1aWxkKCk7DQorCQkNCisJCUlDb21waWxhdGlvblVuaXQgdW5pdCA9IGdldENvbXBpbGF0aW9u
VW5pdCgiL1Avc3JjL3AvWC5qYXZhIik7IA0KKwkJSUphdmFFbGVtZW50W10gdmFyaWFibGUgPSAo
KElDb2RlQXNzaXN0KSB1bml0KS5jb2RlU2VsZWN0KHNvdXJjZS5pbmRleE9mKCJwcm9jZXNzb3Ii
KSwgInByb2Nlc3NvciIubGVuZ3RoKCkpOw0KKw0KKwkJYXNzZXJ0RXF1YWxzKDEsIHZhcmlhYmxl
Lmxlbmd0aCk7DQorCQlTdHJpbmcgYW5ub3RhdGlvblN0cmluZyA9ICJARGVmYXVsdCBbaW4gcHJv
Y2Vzc29yIFtpbiBUZXN0KFN0cmluZykgW2luIFggW2luIFguamF2YSBbaW4gcCBbaW4gc3JjIFtp
biBQXV1dXV1dXSI7DQorCQlhc3NlcnRFcXVhbHMoYW5ub3RhdGlvblN0cmluZywgKChMb2NhbFZh
cmlhYmxlKXZhcmlhYmxlWzBdKS5nZXRBbm5vdGF0aW9ucygpWzBdLnRvU3RyaW5nKCkpOw0KKwkJ
SVR5cGUgdHlwZSA9IHVuaXQuZ2V0VHlwZSgiWCIpOw0KKwkJDQorCQlJTWV0aG9kIG1ldGhvZCA9
IHR5cGUuZ2V0TWV0aG9kcygpWzBdOw0KKwkJYXNzZXJ0RXF1YWxzKGFubm90YXRpb25TdHJpbmcs
IG1ldGhvZC5nZXRQYXJhbWV0ZXJBbm5vdGF0aW9ucygpWzBdWzBdLnRvU3RyaW5nKCkpOw0KKwl9
IGZpbmFsbHkgew0KKwkJZGVsZXRlUHJvamVjdCgiUCIpOw0KKwl9DQorfQ0KKy8qKg0KKyAqIEBz
ZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMzQ3ODMi
DQorICovDQorcHVibGljIHZvaWQgdGVzdFBhcmFtQW5ub3RhdGlvbnMyKCkgdGhyb3dzIENvcmVF
eGNlcHRpb24sIElPRXhjZXB0aW9uIHsNCisJdHJ5IHsNCisJCUlKYXZhUHJvamVjdCBwcm9qZWN0
ID0gY3JlYXRlSmF2YVByb2plY3QoIlAiLCBuZXcgU3RyaW5nW10geyJzcmMifSwgbmV3IFN0cmlu
Z1tdIHsiSkNMMTVfTElCIn0sICJiaW4iLCAiMS41Iik7DQorCQlTdHJpbmdbXSBwYXRoQW5kQ29u
dGVudHMgPSBuZXcgU3RyaW5nW117InAvWC5qYXZhIiwNCisJCQkJInBhY2thZ2UgcDsiICsNCisJ
CQkJInB1YmxpYyBjbGFzcyBYPFQ+IHtcbiIgKw0KKwkJCQkiICBYPFN0cmluZz4gZmllbGQ7XG4i
ICsNCisJCQkJIglASW5qZWN0ICIgKw0KKwkJCQkiCXB1YmxpYyB2b2lkIFRlc3QoQERlZmF1bHQg
U3RyaW5nIHByb2Nlc3Nvcikge30iICsNCisJCQkJIn0iICsNCisJCQkJIkBpbnRlcmZhY2UgSW5q
ZWN0e1xuIiArDQorCQkJCSJ9IiArDQorCQkJCSJAaW50ZXJmYWNlIERlZmF1bHR7XG4iICsNCisJ
CQkJIn0ifTsNCisJCWFkZExpYnJhcnkocHJvamVjdCwgImxpYjMzNDc4My5qYXIiLCAibGlic3Jj
LnppcCIsIHBhdGhBbmRDb250ZW50cywgSmF2YUNvcmUuVkVSU0lPTl8xXzUpOw0KKwkJDQorCQl3
YWl0Rm9yQXV0b0J1aWxkKCk7DQorCQlJUGFja2FnZUZyYWdtZW50Um9vdCByb290ID0gcHJvamVj
dC5nZXRQYWNrYWdlRnJhZ21lbnRSb290KGdldEZpbGUoIi9QL2xpYjMzNDc4My5qYXIiKSk7DQor
CQlJVHlwZSB0eXBlID0gcm9vdC5nZXRQYWNrYWdlRnJhZ21lbnQoInAiKS5nZXRDbGFzc0ZpbGUo
IlguY2xhc3MiKS5nZXRUeXBlKCk7DQorCQlTdHJpbmcgYW5ub3RhdGlvblN0cmluZyA9ICJAcC5E
ZWZhdWx0IFtpbiBUZXN0KGphdmEubGFuZy5TdHJpbmcpIFtpbiBYIFtpbiBYLmNsYXNzIFtpbiBw
IFtpbiBsaWIzMzQ3ODMuamFyIFtpbiBQXV1dXV1dIjsNCisJCQ0KKwkJSU1ldGhvZCBtZXRob2Qg
PSB0eXBlLmdldE1ldGhvZHMoKVsxXTsNCisJCWFzc2VydEVxdWFscyhhbm5vdGF0aW9uU3RyaW5n
LCBtZXRob2QuZ2V0UGFyYW1ldGVyQW5ub3RhdGlvbnMoKVswXVswXS50b1N0cmluZygpKTsNCisJ
fSBmaW5hbGx5IHsNCisJCWRlbGV0ZVByb2plY3QoIlAiKTsNCisJfQ0KK30NCisvKioNCisgKiBA
c2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzM0Nzgz
Ig0KKyAqLw0KK3B1YmxpYyB2b2lkIHRlc3RQYXJhbUFubm90YXRpb25zMygpIHRocm93cyBDb3Jl
RXhjZXB0aW9uIHsNCisJdHJ5IHsNCisJCWNyZWF0ZUphdmFQcm9qZWN0KCJQIiwgbmV3IFN0cmlu
Z1tdIHsic3JjIn0sIG5ldyBTdHJpbmdbXSB7IkpDTDE1X0xJQiJ9LCAiYmluIiwgIjEuNSIpOw0K
KwkJU3RyaW5nIHNvdXJjZSA9ICJwYWNrYWdlIHA7IiArDQorCQkJCSJwdWJsaWMgY2xhc3MgWDxU
PiB7XG4iICsNCisJCQkJIiAgWDxTdHJpbmc+IGZpZWxkO1xuIiArDQorCQkJCSIJQEluamVjdFxu
IiArDQorCQkJCSIJcHVibGljIHZvaWQgVGVzdChpbnQgaSwgQERlZmF1bHQgQE1hcmtlcihpZD0x
KSBTdHJpbmcgcHJvY2Vzc29yLCBpbnQgaykge31cbiIgKw0KKwkJCQkifVxuIiArDQorCQkJCSJA
aW50ZXJmYWNlIEluamVjdHtcbiIgKw0KKwkJCQkifVxuIiArDQorCQkJCSJAaW50ZXJmYWNlIE1h
cmtlciB7XG4iICsNCisJCQkJIglpbnQgaWQoKSBkZWZhdWx0IDA7XG4iICsNCisJCQkJIn1cbiIg
Kw0KKwkJCQkiQGludGVyZmFjZSBEZWZhdWx0e1xuIiArDQorCQkJCSJ9IjsNCisJCWNyZWF0ZUZv
bGRlcigiL1Avc3JjL3AiKTsNCisJCWNyZWF0ZUZpbGUoDQorCQkJIi9QL3NyYy9wL1guamF2YSIs
DQorCQkJc291cmNlDQorCQkpOw0KKwkJd2FpdEZvckF1dG9CdWlsZCgpOw0KKwkJDQorCQlJQ29t
cGlsYXRpb25Vbml0IHVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIi9QL3NyYy9wL1guamF2YSIp
OyANCisJCUlKYXZhRWxlbWVudFtdIHZhcmlhYmxlID0gKChJQ29kZUFzc2lzdCkgdW5pdCkuY29k
ZVNlbGVjdChzb3VyY2UuaW5kZXhPZigicHJvY2Vzc29yIiksICJwcm9jZXNzb3IiLmxlbmd0aCgp
KTsNCisNCisJCWFzc2VydEVxdWFscygxLCB2YXJpYWJsZS5sZW5ndGgpOw0KKwkJU3RyaW5nIGFu
bm90YXRpb25TdHJpbmcxID0gIkBEZWZhdWx0IFtpbiBwcm9jZXNzb3IgW2luIFRlc3QoaW50LCBT
dHJpbmcsIGludCkgW2luIFggW2luIFguamF2YSBbaW4gcCBbaW4gc3JjIFtpbiBQXV1dXV1dXSI7
DQorCQlTdHJpbmcgYW5ub3RhdGlvblN0cmluZzIgPSAiQE1hcmtlciBbaW4gcHJvY2Vzc29yIFtp
biBUZXN0KGludCwgU3RyaW5nLCBpbnQpIFtpbiBYIFtpbiBYLmphdmEgW2luIHAgW2luIHNyYyBb
aW4gUF1dXV1dXV0iOw0KKwkJYXNzZXJ0RXF1YWxzKGFubm90YXRpb25TdHJpbmcxLCAoKExvY2Fs
VmFyaWFibGUpdmFyaWFibGVbMF0pLmdldEFubm90YXRpb25zKClbMF0udG9TdHJpbmcoKSk7DQor
CQlJVHlwZSB0eXBlID0gdW5pdC5nZXRUeXBlKCJYIik7DQorCQkNCisJCUlNZXRob2QgbWV0aG9k
ID0gdHlwZS5nZXRNZXRob2RzKClbMF07DQorCQlJQW5ub3RhdGlvbltdW10gcGFyYW1ldGVyQW5u
b3RhdGlvbnMgPSBtZXRob2QuZ2V0UGFyYW1ldGVyQW5ub3RhdGlvbnMoKTsNCisJCWFzc2VydEVx
dWFscygiV3JvbmcgbGVuZ3RoIiwgMiwgcGFyYW1ldGVyQW5ub3RhdGlvbnNbMV0ubGVuZ3RoKTsN
CisJCWFzc2VydEVxdWFscyhhbm5vdGF0aW9uU3RyaW5nMSwgcGFyYW1ldGVyQW5ub3RhdGlvbnNb
MV1bMF0udG9TdHJpbmcoKSk7DQorCQlJQW5ub3RhdGlvbiBpQW5ub3RhdGlvbiA9IHBhcmFtZXRl
ckFubm90YXRpb25zWzFdWzFdOw0KKwkJYXNzZXJ0RXF1YWxzKGFubm90YXRpb25TdHJpbmcyLCBp
QW5ub3RhdGlvbi50b1N0cmluZygpKTsNCisJCUlNZW1iZXJWYWx1ZVBhaXJbXSBtZW1iZXJWYWx1
ZVBhaXJzID0gaUFubm90YXRpb24uZ2V0TWVtYmVyVmFsdWVQYWlycygpOw0KKwkJYXNzZXJ0RXF1
YWxzKCJXcm9uZyBudW1iZXIgb2YgcGFpcnMiLCAxLCBtZW1iZXJWYWx1ZVBhaXJzLmxlbmd0aCk7
DQorCQlTdHJpbmdCdWZmZXIgb3V0cHV0ID0gbmV3IFN0cmluZ0J1ZmZlcigpOw0KKwkJb3V0cHV0
LmFwcGVuZChtZW1iZXJWYWx1ZVBhaXJzWzBdLmdldE1lbWJlck5hbWUoKSk7DQorCQlvdXRwdXQu
YXBwZW5kKCcgJyk7DQorCQlvdXRwdXQuYXBwZW5kKG1lbWJlclZhbHVlUGFpcnNbMF0uZ2V0VmFs
dWUoKSk7DQorCQlhc3NlcnRFcXVhbHMoIldyb25nIHZhbHVlIiwgImlkIDEiLCBTdHJpbmcudmFs
dWVPZihvdXRwdXQpKTsNCisJCWFzc2VydEVxdWFscygiV3JvbmcgbGVuZ3RoIiwgMCwgcGFyYW1l
dGVyQW5ub3RhdGlvbnNbMF0ubGVuZ3RoKTsNCisJCWFzc2VydEVxdWFscygiV3JvbmcgbGVuZ3Ro
IiwgMCwgcGFyYW1ldGVyQW5ub3RhdGlvbnNbMl0ubGVuZ3RoKTsNCisJfSBmaW5hbGx5IHsNCisJ
CWRlbGV0ZVByb2plY3QoIlAiKTsNCisJfQ0KK30NCisvKioNCisgKiBAc2VlICJodHRwczovL2J1
Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzM0NzgzIg0KKyAqLw0KK3B1Ymxp
YyB2b2lkIHRlc3RQYXJhbUFubm90YXRpb25zNCgpIHRocm93cyBDb3JlRXhjZXB0aW9uLCBJT0V4
Y2VwdGlvbiB7DQorCXRyeSB7DQorCQlJSmF2YVByb2plY3QgcHJvamVjdCA9IGNyZWF0ZUphdmFQ
cm9qZWN0KCJQIiwgbmV3IFN0cmluZ1tdIHsic3JjIn0sIG5ldyBTdHJpbmdbXSB7IkpDTDE1X0xJ
QiJ9LCAiYmluIiwgIjEuNSIpOw0KKwkJU3RyaW5nW10gcGF0aEFuZENvbnRlbnRzID0gbmV3IFN0
cmluZ1tdeyJwL1guamF2YSIsDQorCQkJCSJwYWNrYWdlIHA7IiArDQorCQkJCSJwdWJsaWMgY2xh
c3MgWDxUPiB7XG4iICsNCisJCQkJIiAgWDxTdHJpbmc+IGZpZWxkO1xuIiArDQorCQkJCSIJQElu
amVjdCBATWFya2VyKGlkPTMpIiArDQorCQkJCSIJcHVibGljIHZvaWQgVGVzdChpbnQgaSwgQERl
ZmF1bHQgQE1hcmtlcihpZD0xKSBTdHJpbmcgcHJvY2Vzc29yLCBpbnQgaykge30iICsNCisJCQkJ
In0iLA0KKwkJCQkicC9JbmplY3QuamF2YSIsDQorCQkJCSJwYWNrYWdlIHA7XG4iKw0KKwkJCQki
cHVibGljIEBpbnRlcmZhY2UgSW5qZWN0e1xuIiArDQorCQkJCSJ9IiwNCisJCQkJInAvTWFya2Vy
LmphdmEiLA0KKwkJCQkicGFja2FnZSBwO1xuIiArDQorCQkJCSJwdWJsaWMgQGludGVyZmFjZSBN
YXJrZXIge1xuIiArDQorCQkJCSIJaW50IGlkKCkgZGVmYXVsdCAwO1xuIiArDQorCQkJCSJ9IiwN
CisJCQkJInAvRGVmYXVsdC5qYXZhIiwNCisJCQkJInBhY2thZ2UgcDtcbiIgKw0KKwkJCQkicHVi
bGljIEBpbnRlcmZhY2UgRGVmYXVsdHtcbiIgKw0KKwkJCQkifSJ9Ow0KKwkJYWRkTGlicmFyeShw
cm9qZWN0LCAibGliMzM0NzgzXzIuamFyIiwgImxpYjMzNDc4M18yc3JjLnppcCIsIHBhdGhBbmRD
b250ZW50cywgSmF2YUNvcmUuVkVSU0lPTl8xXzUpOw0KKwkJDQorCQl3YWl0Rm9yQXV0b0J1aWxk
KCk7DQorCQlJUGFja2FnZUZyYWdtZW50Um9vdCByb290ID0gcHJvamVjdC5nZXRQYWNrYWdlRnJh
Z21lbnRSb290KGdldEZpbGUoIi9QL2xpYjMzNDc4M18yLmphciIpKTsNCisJCUlUeXBlIHR5cGUg
PSByb290LmdldFBhY2thZ2VGcmFnbWVudCgicCIpLmdldENsYXNzRmlsZSgiWC5jbGFzcyIpLmdl
dFR5cGUoKTsNCisJCVN0cmluZyBhbm5vdGF0aW9uU3RyaW5nMSA9ICJAcC5EZWZhdWx0IFtpbiBU
ZXN0KGludCwgamF2YS5sYW5nLlN0cmluZywgaW50KSBbaW4gWCBbaW4gWC5jbGFzcyBbaW4gcCBb
aW4gbGliMzM0NzgzXzIuamFyIFtpbiBQXV1dXV1dIjsNCisJCVN0cmluZyBhbm5vdGF0aW9uU3Ry
aW5nMiA9ICJAcC5NYXJrZXIgW2luIFRlc3QoaW50LCBqYXZhLmxhbmcuU3RyaW5nLCBpbnQpIFtp
biBYIFtpbiBYLmNsYXNzIFtpbiBwIFtpbiBsaWIzMzQ3ODNfMi5qYXIgW2luIFBdXV1dXV0iOw0K
KwkJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhvZHMoKVsxXTsNCisJCUlBbm5vdGF0aW9u
W10gYW5ub3RhdGlvbnMgPSBtZXRob2QuZ2V0QW5ub3RhdGlvbnMoKTsNCisJCWFzc2VydEVxdWFs
cygiV3JvbmcgbGVuZ3RoIiwgMiwgYW5ub3RhdGlvbnMubGVuZ3RoKTsNCisJCWFzc2VydEVxdWFs
cygiQHAuSW5qZWN0IFtpbiBUZXN0KGludCwgamF2YS5sYW5nLlN0cmluZywgaW50KSBbaW4gWCBb
aW4gWC5jbGFzcyBbaW4gcCBbaW4gbGliMzM0NzgzXzIuamFyIFtpbiBQXV1dXV1dIiwgYW5ub3Rh
dGlvbnNbMF0udG9TdHJpbmcoKSk7DQorCQlJQW5ub3RhdGlvbiBhbm5vdGF0aW9uID0gYW5ub3Rh
dGlvbnNbMV07DQorCQlhc3NlcnRFcXVhbHMoIkBwLk1hcmtlciBbaW4gVGVzdChpbnQsIGphdmEu
bGFuZy5TdHJpbmcsIGludCkgW2luIFggW2luIFguY2xhc3MgW2luIHAgW2luIGxpYjMzNDc4M18y
LmphciBbaW4gUF1dXV1dXSIsIGFubm90YXRpb24udG9TdHJpbmcoKSk7DQorCQlJTWVtYmVyVmFs
dWVQYWlyW10gbWVtYmVyVmFsdWVQYWlycyA9IGFubm90YXRpb24uZ2V0TWVtYmVyVmFsdWVQYWly
cygpOw0KKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgcGFpcnMiLCAxLCBtZW1iZXJW
YWx1ZVBhaXJzLmxlbmd0aCk7DQorCQlTdHJpbmdCdWZmZXIgb3V0cHV0ID0gbmV3IFN0cmluZ0J1
ZmZlcigpOw0KKwkJb3V0cHV0LmFwcGVuZChtZW1iZXJWYWx1ZVBhaXJzWzBdLmdldE1lbWJlck5h
bWUoKSk7DQorCQlvdXRwdXQuYXBwZW5kKCcgJyk7DQorCQlvdXRwdXQuYXBwZW5kKG1lbWJlclZh
bHVlUGFpcnNbMF0uZ2V0VmFsdWUoKSk7DQorCQlhc3NlcnRFcXVhbHMoIldyb25nIHZhbHVlIiwg
ImlkIDMiLCBTdHJpbmcudmFsdWVPZihvdXRwdXQpKTsNCisJCUlBbm5vdGF0aW9uW11bXSBwYXJh
bWV0ZXJBbm5vdGF0aW9ucyA9IG1ldGhvZC5nZXRQYXJhbWV0ZXJBbm5vdGF0aW9ucygpOw0KKwkJ
YXNzZXJ0RXF1YWxzKCJXcm9uZyBsZW5ndGgiLCAyLCBwYXJhbWV0ZXJBbm5vdGF0aW9uc1sxXS5s
ZW5ndGgpOw0KKwkJYXNzZXJ0RXF1YWxzKGFubm90YXRpb25TdHJpbmcxLCBwYXJhbWV0ZXJBbm5v
dGF0aW9uc1sxXVswXS50b1N0cmluZygpKTsNCisJCWFubm90YXRpb24gPSBwYXJhbWV0ZXJBbm5v
dGF0aW9uc1sxXVsxXTsNCisJCWFzc2VydEVxdWFscyhhbm5vdGF0aW9uU3RyaW5nMiwgYW5ub3Rh
dGlvbi50b1N0cmluZygpKTsNCisJCW1lbWJlclZhbHVlUGFpcnMgPSBhbm5vdGF0aW9uLmdldE1l
bWJlclZhbHVlUGFpcnMoKTsNCisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHBhaXJz
IiwgMSwgbWVtYmVyVmFsdWVQYWlycy5sZW5ndGgpOw0KKwkJb3V0cHV0ID0gbmV3IFN0cmluZ0J1
ZmZlcigpOw0KKwkJb3V0cHV0LmFwcGVuZChtZW1iZXJWYWx1ZVBhaXJzWzBdLmdldE1lbWJlck5h
bWUoKSk7DQorCQlvdXRwdXQuYXBwZW5kKCcgJyk7DQorCQlvdXRwdXQuYXBwZW5kKG1lbWJlclZh
bHVlUGFpcnNbMF0uZ2V0VmFsdWUoKSk7DQorCQlhc3NlcnRFcXVhbHMoIldyb25nIHZhbHVlIiwg
ImlkIDEiLCBTdHJpbmcudmFsdWVPZihvdXRwdXQpKTsNCisJCWFzc2VydEVxdWFscygiV3Jvbmcg
bGVuZ3RoIiwgMCwgcGFyYW1ldGVyQW5ub3RhdGlvbnNbMF0ubGVuZ3RoKTsNCisJCWFzc2VydEVx
dWFscygiV3JvbmcgbGVuZ3RoIiwgMCwgcGFyYW1ldGVyQW5ub3RhdGlvbnNbMl0ubGVuZ3RoKTsN
CisJfSBmaW5hbGx5IHsNCisJCWRlbGV0ZVByb2plY3QoIlAiKTsNCisJfQ0KK30NCisvKioNCisg
KiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzM0
NzgzIg0KKyAqLw0KK3B1YmxpYyB2b2lkIHRlc3RQYXJhbUFubm90YXRpb25zNSgpIHRocm93cyBD
b3JlRXhjZXB0aW9uLCBJT0V4Y2VwdGlvbiB7DQorCXRyeSB7DQorCQlJSmF2YVByb2plY3QgcHJv
amVjdCA9IGNyZWF0ZUphdmFQcm9qZWN0KCJQIiwgbmV3IFN0cmluZ1tdIHsic3JjIn0sIG5ldyBT
dHJpbmdbXSB7IkpDTDE1X0xJQiJ9LCAiYmluIiwgIjEuNSIpOw0KKwkJU3RyaW5nW10gcGF0aEFu
ZENvbnRlbnRzID0gbmV3IFN0cmluZ1tdeyJwL1guamF2YSIsDQorCQkJCSJwYWNrYWdlIHA7IiAr
DQorCQkJCSJwdWJsaWMgY2xhc3MgWDxUPiB7XG4iICsNCisJCQkJIiAgWDxTdHJpbmc+IGZpZWxk
O1xuIiArDQorCQkJCSIJQEluamVjdCBATWFya2VyKGlkPTMpIiArDQorCQkJCSIJcHVibGljIHZv
aWQgVGVzdChpbnQgaSwgQERlZmF1bHQgQE1hcmtlcihpZD0xKSBTdHJpbmcgcHJvY2Vzc29yLCBp
bnQgaykge30iICsNCisJCQkJIn0iLA0KKwkJCQkicC9JbmplY3QuamF2YSIsDQorCQkJCSJwYWNr
YWdlIHA7XG4iKw0KKwkJCQkicHVibGljIEBpbnRlcmZhY2UgSW5qZWN0e1xuIiArDQorCQkJCSJ9
IiwNCisJCQkJInAvTWFya2VyLmphdmEiLA0KKwkJCQkicGFja2FnZSBwO1xuIiArDQorCQkJCSJw
dWJsaWMgQGludGVyZmFjZSBNYXJrZXIge1xuIiArDQorCQkJCSIJaW50IGlkKCkgZGVmYXVsdCAw
O1xuIiArDQorCQkJCSJ9IiwNCisJCQkJInAvRGVmYXVsdC5qYXZhIiwNCisJCQkJInBhY2thZ2Ug
cDtcbiIgKw0KKwkJCQkicHVibGljIEBpbnRlcmZhY2UgRGVmYXVsdHtcbiIgKw0KKwkJCQkifSJ9
Ow0KKwkJTWFwIG9wdGlvbnMgPSBuZXcgSGFzaE1hcCgpOw0KKwkJb3B0aW9ucy5wdXQoSmF2YUNv
cmUuQ09NUElMRVJfTE9DQUxfVkFSSUFCTEVfQVRUUiwgSmF2YUNvcmUuRE9fTk9UX0dFTkVSQVRF
KTsNCisJCWFkZExpYnJhcnkocHJvamVjdCwgImxpYjMzNDc4M18zLmphciIsICJsaWIzMzQ3ODNf
M3NyYy56aXAiLCBwYXRoQW5kQ29udGVudHMsIEphdmFDb3JlLlZFUlNJT05fMV81LCBvcHRpb25z
KTsNCisJCQ0KKwkJd2FpdEZvckF1dG9CdWlsZCgpOw0KKwkJSVBhY2thZ2VGcmFnbWVudFJvb3Qg
cm9vdCA9IHByb2plY3QuZ2V0UGFja2FnZUZyYWdtZW50Um9vdChnZXRGaWxlKCIvUC9saWIzMzQ3
ODNfMy5qYXIiKSk7DQorCQlJVHlwZSB0eXBlID0gcm9vdC5nZXRQYWNrYWdlRnJhZ21lbnQoInAi
KS5nZXRDbGFzc0ZpbGUoIlguY2xhc3MiKS5nZXRUeXBlKCk7DQorCQlTdHJpbmcgYW5ub3RhdGlv
blN0cmluZzEgPSAiQHAuRGVmYXVsdCBbaW4gVGVzdChpbnQsIGphdmEubGFuZy5TdHJpbmcsIGlu
dCkgW2luIFggW2luIFguY2xhc3MgW2luIHAgW2luIGxpYjMzNDc4M18zLmphciBbaW4gUF1dXV1d
XSI7DQorCQlTdHJpbmcgYW5ub3RhdGlvblN0cmluZzIgPSAiQHAuTWFya2VyIFtpbiBUZXN0KGlu
dCwgamF2YS5sYW5nLlN0cmluZywgaW50KSBbaW4gWCBbaW4gWC5jbGFzcyBbaW4gcCBbaW4gbGli
MzM0NzgzXzMuamFyIFtpbiBQXV1dXV1dIjsNCisJCUlNZXRob2QgbWV0aG9kID0gdHlwZS5nZXRN
ZXRob2RzKClbMV07DQorCQlJQW5ub3RhdGlvbltdIGFubm90YXRpb25zID0gbWV0aG9kLmdldEFu
bm90YXRpb25zKCk7DQorCQlhc3NlcnRFcXVhbHMoIldyb25nIGxlbmd0aCIsIDIsIGFubm90YXRp
b25zLmxlbmd0aCk7DQorCQlhc3NlcnRFcXVhbHMoIkBwLkluamVjdCBbaW4gVGVzdChpbnQsIGph
dmEubGFuZy5TdHJpbmcsIGludCkgW2luIFggW2luIFguY2xhc3MgW2luIHAgW2luIGxpYjMzNDc4
M18zLmphciBbaW4gUF1dXV1dXSIsIGFubm90YXRpb25zWzBdLnRvU3RyaW5nKCkpOw0KKwkJSUFu
bm90YXRpb24gYW5ub3RhdGlvbiA9IGFubm90YXRpb25zWzFdOw0KKwkJYXNzZXJ0RXF1YWxzKCJA
cC5NYXJrZXIgW2luIFRlc3QoaW50LCBqYXZhLmxhbmcuU3RyaW5nLCBpbnQpIFtpbiBYIFtpbiBY
LmNsYXNzIFtpbiBwIFtpbiBsaWIzMzQ3ODNfMy5qYXIgW2luIFBdXV1dXV0iLCBhbm5vdGF0aW9u
LnRvU3RyaW5nKCkpOw0KKwkJSU1lbWJlclZhbHVlUGFpcltdIG1lbWJlclZhbHVlUGFpcnMgPSBh
bm5vdGF0aW9uLmdldE1lbWJlclZhbHVlUGFpcnMoKTsNCisJCWFzc2VydEVxdWFscygiV3Jvbmcg
bnVtYmVyIG9mIHBhaXJzIiwgMSwgbWVtYmVyVmFsdWVQYWlycy5sZW5ndGgpOw0KKwkJU3RyaW5n
QnVmZmVyIG91dHB1dCA9IG5ldyBTdHJpbmdCdWZmZXIoKTsNCisJCW91dHB1dC5hcHBlbmQobWVt
YmVyVmFsdWVQYWlyc1swXS5nZXRNZW1iZXJOYW1lKCkpOw0KKwkJb3V0cHV0LmFwcGVuZCgnICcp
Ow0KKwkJb3V0cHV0LmFwcGVuZChtZW1iZXJWYWx1ZVBhaXJzWzBdLmdldFZhbHVlKCkpOw0KKwkJ
YXNzZXJ0RXF1YWxzKCJXcm9uZyB2YWx1ZSIsICJpZCAzIiwgU3RyaW5nLnZhbHVlT2Yob3V0cHV0
KSk7DQorCQlJQW5ub3RhdGlvbltdW10gcGFyYW1ldGVyQW5ub3RhdGlvbnMgPSBtZXRob2QuZ2V0
UGFyYW1ldGVyQW5ub3RhdGlvbnMoKTsNCisJCWFzc2VydEVxdWFscygiV3JvbmcgbGVuZ3RoIiwg
MiwgcGFyYW1ldGVyQW5ub3RhdGlvbnNbMV0ubGVuZ3RoKTsNCisJCWFzc2VydEVxdWFscyhhbm5v
dGF0aW9uU3RyaW5nMSwgcGFyYW1ldGVyQW5ub3RhdGlvbnNbMV1bMF0udG9TdHJpbmcoKSk7DQor
CQlhbm5vdGF0aW9uID0gcGFyYW1ldGVyQW5ub3RhdGlvbnNbMV1bMV07DQorCQlhc3NlcnRFcXVh
bHMoYW5ub3RhdGlvblN0cmluZzIsIGFubm90YXRpb24udG9TdHJpbmcoKSk7DQorCQltZW1iZXJW
YWx1ZVBhaXJzID0gYW5ub3RhdGlvbi5nZXRNZW1iZXJWYWx1ZVBhaXJzKCk7DQorCQlhc3NlcnRF
cXVhbHMoIldyb25nIG51bWJlciBvZiBwYWlycyIsIDEsIG1lbWJlclZhbHVlUGFpcnMubGVuZ3Ro
KTsNCisJCW91dHB1dCA9IG5ldyBTdHJpbmdCdWZmZXIoKTsNCisJCW91dHB1dC5hcHBlbmQobWVt
YmVyVmFsdWVQYWlyc1swXS5nZXRNZW1iZXJOYW1lKCkpOw0KKwkJb3V0cHV0LmFwcGVuZCgnICcp
Ow0KKwkJb3V0cHV0LmFwcGVuZChtZW1iZXJWYWx1ZVBhaXJzWzBdLmdldFZhbHVlKCkpOw0KKwkJ
YXNzZXJ0RXF1YWxzKCJXcm9uZyB2YWx1ZSIsICJpZCAxIiwgU3RyaW5nLnZhbHVlT2Yob3V0cHV0
KSk7DQorCQlhc3NlcnRFcXVhbHMoIldyb25nIGxlbmd0aCIsIDAsIHBhcmFtZXRlckFubm90YXRp
b25zWzBdLmxlbmd0aCk7DQorCQlhc3NlcnRFcXVhbHMoIldyb25nIGxlbmd0aCIsIDAsIHBhcmFt
ZXRlckFubm90YXRpb25zWzJdLmxlbmd0aCk7DQorCX0gZmluYWxseSB7DQorCQlkZWxldGVQcm9q
ZWN0KCJQIik7DQorCX0NCit9DQorLyoqDQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uu
b3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMzNDc4MyINCisgKi8NCitwdWJsaWMgdm9pZCB0ZXN0
UGFyYW1Bbm5vdGF0aW9uczYoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7DQorCXRyeSB7DQorCQlj
cmVhdGVKYXZhUHJvamVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7InNyYyJ9LCBuZXcgU3RyaW5nW10g
eyJKQ0wxNV9MSUIifSwgImJpbiIsICIxLjUiKTsNCisJCVN0cmluZyBzb3VyY2UgPSAicGFja2Fn
ZSBwOyIgKw0KKwkJCQkicHVibGljIGNsYXNzIFg8VD4ge1xuIiArDQorCQkJCSIgIFg8U3RyaW5n
PiBmaWVsZDtcbiIgKw0KKwkJCQkiCXB1YmxpYyB2b2lkIFRlc3QoKSB7fSIgKw0KKwkJCQkifSI7
DQorCQljcmVhdGVGb2xkZXIoIi9QL3NyYy9wIik7DQorCQljcmVhdGVGaWxlKA0KKwkJCSIvUC9z
cmMvcC9YLmphdmEiLA0KKwkJCXNvdXJjZQ0KKwkJKTsNCisJCXdhaXRGb3JBdXRvQnVpbGQoKTsN
CisJCQ0KKwkJSUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCIvUC9z
cmMvcC9YLmphdmEiKTsgDQorCQlJVHlwZSB0eXBlID0gdW5pdC5nZXRUeXBlKCJYIik7DQorCQlJ
TWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kcygpWzBdOw0KKwkJSUFubm90YXRpb25bXVtd
IHBhcmFtZXRlckFubm90YXRpb25zID0gbWV0aG9kLmdldFBhcmFtZXRlckFubm90YXRpb25zKCk7
DQorCQlhc3NlcnROb3ROdWxsKHBhcmFtZXRlckFubm90YXRpb25zKTsNCisJCWFzc2VydEVxdWFs
cygiV3JvbmcgbGVuZ3RoIiwgMCwgcGFyYW1ldGVyQW5ub3RhdGlvbnMubGVuZ3RoKTsNCisJfSBm
aW5hbGx5IHsNCisJCWRlbGV0ZVByb2plY3QoIlAiKTsNCisJfQ0KK30NCisvKioNCisgKiBAc2Vl
ICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzM0NzgzIg0K
KyAqLw0KK3B1YmxpYyB2b2lkIHRlc3RQYXJhbUFubm90YXRpb25zNygpIHRocm93cyBDb3JlRXhj
ZXB0aW9uLCBJT0V4Y2VwdGlvbiB7DQorCXRyeSB7DQorCQlJSmF2YVByb2plY3QgcHJvamVjdCA9
IGNyZWF0ZUphdmFQcm9qZWN0KCJQIiwgbmV3IFN0cmluZ1tdIHsic3JjIn0sIG5ldyBTdHJpbmdb
XSB7IkpDTDE1X0xJQiJ9LCAiYmluIiwgIjEuNSIpOw0KKwkJU3RyaW5nW10gcGF0aEFuZENvbnRl
bnRzID0gbmV3IFN0cmluZ1tdeyJwL1guamF2YSIsDQorCQkJCSJwYWNrYWdlIHA7IiArDQorCQkJ
CSJwdWJsaWMgY2xhc3MgWDxUPiB7XG4iICsNCisJCQkJIiAgWDxTdHJpbmc+IGZpZWxkO1xuIiAr
DQorCQkJCSIJcHVibGljIHZvaWQgVGVzdCgpIHt9IiArDQorCQkJCSJ9Ig0KKwkJfTsNCisJCWFk
ZExpYnJhcnkocHJvamVjdCwgImxpYjMzNDc4My5qYXIiLCAibGlic3JjLnppcCIsIHBhdGhBbmRD
b250ZW50cywgSmF2YUNvcmUuVkVSU0lPTl8xXzUpOw0KKwkJDQorCQl3YWl0Rm9yQXV0b0J1aWxk
KCk7DQorCQlJUGFja2FnZUZyYWdtZW50Um9vdCByb290ID0gcHJvamVjdC5nZXRQYWNrYWdlRnJh
Z21lbnRSb290KGdldEZpbGUoIi9QL2xpYjMzNDc4My5qYXIiKSk7DQorCQlJVHlwZSB0eXBlID0g
cm9vdC5nZXRQYWNrYWdlRnJhZ21lbnQoInAiKS5nZXRDbGFzc0ZpbGUoIlguY2xhc3MiKS5nZXRU
eXBlKCk7DQorCQkNCisJCUlNZXRob2QgbWV0aG9kID0gdHlwZS5nZXRNZXRob2RzKClbMV07DQor
CQlJQW5ub3RhdGlvbltdW10gcGFyYW1ldGVyQW5ub3RhdGlvbnMgPSBtZXRob2QuZ2V0UGFyYW1l
dGVyQW5ub3RhdGlvbnMoKTsNCisJCWFzc2VydE5vdE51bGwocGFyYW1ldGVyQW5ub3RhdGlvbnMp
Ow0KKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBsZW5ndGgiLCAwLCBwYXJhbWV0ZXJBbm5vdGF0aW9u
cy5sZW5ndGgpOw0KKwl9IGZpbmFsbHkgew0KKwkJZGVsZXRlUHJvamVjdCgiUCIpOw0KKwl9DQor
fQ0KIH0NCg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>189195</attachid>
            <date>2011-02-17 10:29:00 -0500</date>
            <delta_ts>2011-02-17 17:07:46 -0500</delta_ts>
            <desc>Proposed fix + regression tests</desc>
            <filename>patch_334783_2.txt</filename>
            <type>text/plain</type>
            <size>56480</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvY29yZS9JTWV0aG9kLmphdmENCj09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVs
L29yZy9lY2xpcHNlL2pkdC9jb3JlL0lNZXRob2QuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9u
IDEuMzMNCmRpZmYgLXUgLXIxLjMzIElNZXRob2QuamF2YQ0KLS0tIG1vZGVsL29yZy9lY2xpcHNl
L2pkdC9jb3JlL0lNZXRob2QuamF2YQkyMyBBcHIgMjAxMCAxMzoxMTowNSAtMDAwMAkxLjMzDQor
KysgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2NvcmUvSU1ldGhvZC5qYXZhCTE3IEZlYiAyMDExIDE1
OjI4OjE4IC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0K
LSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4N
CisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMu
DQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55
aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2Yg
dGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRo
aXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtMTAwLDYgKzEwMCwxOSBA
QA0KICAqIEByZXR1cm4gdGhlIG51bWJlciBvZiBwYXJhbWV0ZXJzIG9mIHRoaXMgbWV0aG9kDQog
ICovDQogaW50IGdldE51bWJlck9mUGFyYW1ldGVycygpOw0KKw0KKy8qKg0KKyAqIFJldHVybnMg
dGhlIHBhcmFtZXRlcnMgb2YgdGhpcyBtZXRob2QuDQorICogPHA+QW4gZW1wdHkgYXJyYXkgaXMg
cmV0dXJuZWQsIGlmIHRoZSBtZXRob2QgaGFzIG5vIHBhcmFtZXRlcnMuPC9wPg0KKyAqIDxwPklm
IHRoZSBtZXRob2QgZG9lcyBub3QgY29tZSBmcm9tIHNvdXJjZSwgdGhlIHBvc2l0aW9ucyBhbmQg
dGhlIGZsYWcgb2YgdGhlIHBhcmFtZXRlcnMgYXJlIGlycmVsZXZhbnQuDQorICogVGhlc2UgbG9j
YWwgdmFyaWFibGVzIGNhbiBiZSB1c2VkIHRvIHJldHJpZXZlIHRoZSBwYXJhbWV0ZXIgYW5ub3Rh
dGlvbnMuPC9wPg0KKyAqIA0KKyAqIEByZXR1cm4gdGhlIGFycmF5IG9mIGFubm90YXRpb25zIGZv
ciB0aGUgc3BlY2lmaWVkIHBhcmFtZXRlcg0KKyAqIEB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
DQorICogQHNpbmNlIDMuNw0KKyAqLw0KK0lMb2NhbFZhcmlhYmxlW10gZ2V0UGFyYW1ldGVycygp
IHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb247DQorDQogLyoqDQogICogUmV0dXJucyB0aGUgYmlu
ZGluZyBrZXkgZm9yIHRoaXMgbWV0aG9kIG9ubHkgaWYgdGhlIGdpdmVuIG1ldGhvZCBpcyB7QGxp
bmsgI2lzUmVzb2x2ZWQoKSByZXNvbHZlZH0uDQogICogQSBiaW5kaW5nIGtleSBpcyBhIGtleSB0
aGF0IHVuaXF1ZWx5IGlkZW50aWZpZXMgdGhpcyBtZXRob2QuIEl0IGFsbG93cyBhY2Nlc3MNCklu
ZGV4OiBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Bbm5vdGF0aW9uLmphdmEN
Cj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5j
b3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0Fubm90YXRpb24uamF2YSx2
DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNw0KZGlmZiAtdSAtcjEuNyBBbm5vdGF0aW9uLmphdmEN
Ci0tLSBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Bbm5vdGF0aW9uLmphdmEJ
OCBKdWwgMjAwOSAwNjozMjozMyAtMDAwMAkxLjcNCisrKyBtb2RlbC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29yZS9Bbm5vdGF0aW9uLmphdmEJMTcgRmViIDIwMTEgMTU6Mjg6MTggLTAwMDAN
CkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0
IChjKSAyMDAwLCAyMDA5IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdo
dCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmln
aHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxz
DQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQ
dWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRp
b24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC0xNyw2ICsxNyw3IEBADQogaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5jb3JlLklTb3VyY2VSYW5nZTsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNv
cmUuSmF2YU1vZGVsRXhjZXB0aW9uOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5Tb3Vy
Y2VSYW5nZTsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIuQ2hhck9wZXJh
dGlvbjsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5JQmlu
YXJ5QW5ub3RhdGlvbjsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LmVudi5JQmluYXJ5RWxlbWVudFZhbHVlUGFpcjsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvcmUudXRpbC5VdGlsOw0KQEAgLTMwLDEzICszMSwyMCBAQA0KIAkvLyByZXF1aXJl
IHRvIGRpc3Rpbmd1aXNoIHNhbWUgYW5ub3RhdGlvbnMgaW4gZGlmZmVyZW50IG1lbWJlciB2YWx1
ZSBwYWlycw0KIAlwcm90ZWN0ZWQgU3RyaW5nIG1lbWJlclZhbHVlUGFpck5hbWU7DQogDQorCXBy
b3RlY3RlZCBjaGFyW10gYXJndW1lbnROYW1lOw0KKw0KIAlwdWJsaWMgQW5ub3RhdGlvbihKYXZh
RWxlbWVudCBwYXJlbnQsIFN0cmluZyBuYW1lKSB7DQogCQl0aGlzKHBhcmVudCwgbmFtZSwgbnVs
bCk7DQogCX0NCiANCiAJcHVibGljIEFubm90YXRpb24oSmF2YUVsZW1lbnQgcGFyZW50LCBTdHJp
bmcgbmFtZSwgU3RyaW5nIG1lbWJlclZhbHVlUGFpck5hbWUpIHsNCisJCXRoaXMocGFyZW50LCBu
dWxsLCBuYW1lLCBtZW1iZXJWYWx1ZVBhaXJOYW1lKTsNCisJfQ0KKw0KKwlwdWJsaWMgQW5ub3Rh
dGlvbihKYXZhRWxlbWVudCBwYXJlbnQsIGNoYXJbXSBhcmd1bWVudE5hbWUsIFN0cmluZyBuYW1l
LCBTdHJpbmcgbWVtYmVyVmFsdWVQYWlyTmFtZSkgew0KIAkJc3VwZXIocGFyZW50KTsNCiAJCXRo
aXMubmFtZSA9IG5hbWU7DQorCQl0aGlzLmFyZ3VtZW50TmFtZSA9IGFyZ3VtZW50TmFtZTsNCiAJ
CXRoaXMubWVtYmVyVmFsdWVQYWlyTmFtZSA9IG1lbWJlclZhbHVlUGFpck5hbWU7DQogCX0NCiAN
CkBAIC00NSw2ICs1MywxMyBAQA0KIAkJCXJldHVybiBmYWxzZTsNCiAJCX0NCiAJCUFubm90YXRp
b24gb3RoZXIgPSAoQW5ub3RhdGlvbikgbzsNCisJCWlmICh0aGlzLmFyZ3VtZW50TmFtZSA9PSBu
dWxsKSB7DQorCQkJaWYgKG90aGVyLmFyZ3VtZW50TmFtZSAhPSBudWxsKSB7DQorCQkJCXJldHVy
biBmYWxzZTsNCisJCQl9DQorCQl9IGVsc2UgaWYgKCFDaGFyT3BlcmF0aW9uLmVxdWFscyh0aGlz
LmFyZ3VtZW50TmFtZSwgb3RoZXIuYXJndW1lbnROYW1lKSkgew0KKwkJCXJldHVybiBmYWxzZTsN
CisJCX0NCiAJCWlmICh0aGlzLm1lbWJlclZhbHVlUGFpck5hbWUgPT0gbnVsbCkgew0KIAkJCWlm
IChvdGhlci5tZW1iZXJWYWx1ZVBhaXJOYW1lICE9IG51bGwpDQogCQkJCXJldHVybiBmYWxzZTsN
CkBAIC0xMjksNiArMTQ0LDcgQEANCiAJCWZpbmFsIGludCBwcmltZSA9IDMxOw0KIAkJaW50IHJl
c3VsdCA9IHN1cGVyLmhhc2hDb2RlKCk7DQogCQlyZXN1bHQgPSBwcmltZSAqIHJlc3VsdCArICgo
dGhpcy5tZW1iZXJWYWx1ZVBhaXJOYW1lID09IG51bGwpID8gMCA6IHRoaXMubWVtYmVyVmFsdWVQ
YWlyTmFtZS5oYXNoQ29kZSgpKTsNCisJCXJlc3VsdCA9IHByaW1lICogcmVzdWx0ICsgKCh0aGlz
LmFyZ3VtZW50TmFtZSA9PSBudWxsKSA/IDAgOiBDaGFyT3BlcmF0aW9uLmhhc2hDb2RlKHRoaXMu
YXJndW1lbnROYW1lKSk7DQogCQlyZXN1bHQgPSBwcmltZSAqIHJlc3VsdCArIHRoaXMubmFtZS5o
YXNoQ29kZSgpOw0KIAkJcmV0dXJuIHJlc3VsdDsNCiAJfQ0KSW5kZXg6IG1vZGVsL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb3JlL0JpbmFyeU1lbWJlci5qYXZhDQo9PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1Mg
ZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29yZS9CaW5hcnlNZW1iZXIuamF2YSx2DQpyZXRyaWV2aW5nIHJl
dmlzaW9uIDEuMzYNCmRpZmYgLXUgLXIxLjM2IEJpbmFyeU1lbWJlci5qYXZhDQotLS0gbW9kZWwv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvQmluYXJ5TWVtYmVyLmphdmEJMjggQXByIDIw
MDkgMTY6NTM6MDEgLTAwMDAJMS4zNg0KKysrIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb3JlL0JpbmFyeU1lbWJlci5qYXZhCTE3IEZlYiAyMDExIDE1OjI4OjE4IC0wMDAwDQpAQCAt
MSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykg
MjAwMCwgMjAwOSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCisgKiBDb3B5cmlnaHQgKGMp
IDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQogICogQWxsIHJpZ2h0cyBy
ZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0KICAq
IGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGlj
IExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBh
bmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtNDcsOSArNDcsMTMgQEANCiAJCXJldHVybiBzdGFuZGFy
ZEFubm90YXRpb25zOw0KIAlpbnQgbGVuZ3RoID0gYmluYXJ5QW5ub3RhdGlvbnMubGVuZ3RoOw0K
IAlpbnQgc3RhbmRhcmRMZW5ndGggPSBzdGFuZGFyZEFubm90YXRpb25zLmxlbmd0aDsNCi0JSUFu
bm90YXRpb25bXSBhbm5vdGF0aW9ucyA9IG5ldyBJQW5ub3RhdGlvbltsZW5ndGggKyBzdGFuZGFy
ZExlbmd0aF07DQorCWludCBmdWxsTGVuZ3RoID0gbGVuZ3RoICsgc3RhbmRhcmRMZW5ndGg7DQor
CWlmIChmdWxsTGVuZ3RoID09IDApIHsNCisJCXJldHVybiBBbm5vdGF0aW9uLk5PX0FOTk9UQVRJ
T05TOw0KKwl9DQorCUlBbm5vdGF0aW9uW10gYW5ub3RhdGlvbnMgPSBuZXcgSUFubm90YXRpb25b
ZnVsbExlbmd0aF07DQogCWZvciAoaW50IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHsNCi0JCWFu
bm90YXRpb25zW2ldID0gVXRpbC5nZXRBbm5vdGF0aW9uKHRoaXMsIGJpbmFyeUFubm90YXRpb25z
W2ldLCBudWxsKTsNCisJCWFubm90YXRpb25zW2ldID0gVXRpbC5nZXRBbm5vdGF0aW9uKHRoaXMs
IG51bGwsIGJpbmFyeUFubm90YXRpb25zW2ldLCBudWxsKTsNCiAJfQ0KIAlTeXN0ZW0uYXJyYXlj
b3B5KHN0YW5kYXJkQW5ub3RhdGlvbnMsIDAsIGFubm90YXRpb25zLCBsZW5ndGgsIHN0YW5kYXJk
TGVuZ3RoKTsNCiAJcmV0dXJuIGFubm90YXRpb25zOw0KQEAgLTU3LDcgKzYxLDcgQEANCiBwcml2
YXRlIElBbm5vdGF0aW9uIGdldEFubm90YXRpb24oY2hhcltdW10gYW5ub3RhdGlvbk5hbWUpIHsN
CiAJcmV0dXJuIG5ldyBBbm5vdGF0aW9uKHRoaXMsIG5ldyBTdHJpbmcoQ2hhck9wZXJhdGlvbi5j
b25jYXRXaXRoKGFubm90YXRpb25OYW1lLCAnLicpKSk7DQogfQ0KLXByaXZhdGUgSUFubm90YXRp
b25bXSBnZXRTdGFuZGFyZEFubm90YXRpb25zKGxvbmcgdGFnQml0cykgew0KK3Byb3RlY3RlZCBJ
QW5ub3RhdGlvbltdIGdldFN0YW5kYXJkQW5ub3RhdGlvbnMobG9uZyB0YWdCaXRzKSB7DQogCWlm
ICgodGFnQml0cyAmIFRhZ0JpdHMuQWxsU3RhbmRhcmRBbm5vdGF0aW9uc01hc2spID09IDApDQog
CQlyZXR1cm4gQW5ub3RhdGlvbi5OT19BTk5PVEFUSU9OUzsNCiAJQXJyYXlMaXN0IGFubm90YXRp
b25zID0gbmV3IEFycmF5TGlzdCgpOw0KSW5kZXg6IG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL0JpbmFyeU1ldGhvZC5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jv
b3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29yZS9CaW5hcnlNZXRob2QuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTEx
DQpkaWZmIC11IC1yMS4xMTEgQmluYXJ5TWV0aG9kLmphdmENCi0tLSBtb2RlbC9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29yZS9CaW5hcnlNZXRob2QuamF2YQkyMCBKYW4gMjAxMSAwMjoyODo0
MyAtMDAwMAkxLjExMQ0KKysrIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0Jp
bmFyeU1ldGhvZC5qYXZhCTE3IEZlYiAyMDExIDE1OjI4OjE4IC0wMDAwDQpAQCAtMTEsNyArMTEs
MTYgQEANCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlOw0KIA0KIGltcG9y
dCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuSVByb2dyZXNzTW9uaXRvcjsNCi1pbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmNvcmUuKjsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuRmxhZ3M7
DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklBbm5vdGF0aW9uOw0KK2ltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuY29yZS5JTG9jYWxWYXJpYWJsZTsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmNvcmUuSU1lbWJlclZhbHVlUGFpcjsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSU1l
dGhvZDsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSVR5cGU7DQoraW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5jb3JlLklUeXBlUGFyYW1ldGVyOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
Y29yZS5KYXZhQ29yZTsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSmF2YU1vZGVsRXhj
ZXB0aW9uOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5TaWduYXR1cmU7DQogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLkNoYXJPcGVyYXRpb247DQogaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jbGFzc2ZtdC5DbGFzc0ZpbGVDb25zdGFu
dHM7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuSUJpbmFy
eUFubm90YXRpb247DQpAQCAtNjEsNiArNzAsNDggQEANCiAJSUJpbmFyeUFubm90YXRpb25bXSBi
aW5hcnlBbm5vdGF0aW9ucyA9IGluZm8uZ2V0QW5ub3RhdGlvbnMoKTsNCiAJcmV0dXJuIGdldEFu
bm90YXRpb25zKGJpbmFyeUFubm90YXRpb25zLCBpbmZvLmdldFRhZ0JpdHMoKSk7DQogfQ0KK3B1
YmxpYyBJTG9jYWxWYXJpYWJsZVtdIGdldFBhcmFtZXRlcnMoKSB0aHJvd3MgSmF2YU1vZGVsRXhj
ZXB0aW9uIHsNCisJSUJpbmFyeU1ldGhvZCBpbmZvID0gKElCaW5hcnlNZXRob2QpIGdldEVsZW1l
bnRJbmZvKCk7DQorCWludCBsZW5ndGggPSB0aGlzLnBhcmFtZXRlclR5cGVzLmxlbmd0aDsNCisJ
aWYgKGxlbmd0aCA9PSAwKSB7DQorCQlyZXR1cm4gTG9jYWxWYXJpYWJsZS5OT19MT0NBTF9WQVJJ
QUJMRVM7DQorCX0NCisJSUxvY2FsVmFyaWFibGVbXSBsb2NhbFZhcmlhYmxlcyA9IG5ldyBJTG9j
YWxWYXJpYWJsZVtsZW5ndGhdOw0KKwljaGFyW11bXSBhcmd1bWVudE5hbWVzID0gaW5mby5nZXRB
cmd1bWVudE5hbWVzKCk7DQorCWlmIChhcmd1bWVudE5hbWVzID09IG51bGwgfHwgYXJndW1lbnRO
YW1lcy5sZW5ndGggPCBsZW5ndGgpIHsNCisJCWFyZ3VtZW50TmFtZXMgPSBuZXcgY2hhcltsZW5n
dGhdW107DQorCQlmb3IgKGludCBqID0gMDsgaiA8IGxlbmd0aDsgaisrKSB7DQorCQkJYXJndW1l
bnROYW1lc1tqXSA9ICgiYXJnIiArIGopLnRvQ2hhckFycmF5KCk7IC8vJE5PTi1OTFMtMSQNCisJ
CX0NCisJfQ0KKwlmb3IgKGludCBpPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHsNCisJCWxvY2FsVmFy
aWFibGVzW2ldID0gbmV3IExvY2FsVmFyaWFibGUoDQorCQkJCXRoaXMsDQorCQkJCW5ldyBTdHJp
bmcoYXJndW1lbnROYW1lc1tpXSksDQorCQkJCS0xLA0KKwkJCQktMSwNCisJCQkJLTEsDQorCQkJ
CS0xLA0KKwkJCQl0aGlzLnBhcmFtZXRlclR5cGVzW2ldLA0KKwkJCQlnZXRBbm5vdGF0aW9ucyhh
cmd1bWVudE5hbWVzW2ldLCBpbmZvLmdldFBhcmFtZXRlckFubm90YXRpb25zKGkpLCBpbmZvLmdl
dFRhZ0JpdHMoKSksDQorCQkJCTAsDQorCQkJCXRydWUpOw0KKwl9DQorCXJldHVybiBsb2NhbFZh
cmlhYmxlczsNCit9DQorcHJpdmF0ZSBJQW5ub3RhdGlvbltdIGdldEFubm90YXRpb25zKGNoYXJb
XSBhcmd1bWVudE5hbWUsIElCaW5hcnlBbm5vdGF0aW9uW10gYmluYXJ5QW5ub3RhdGlvbnMsIGxv
bmcgdGFnQml0cykgew0KKwlJQW5ub3RhdGlvbltdIHN0YW5kYXJkQW5ub3RhdGlvbnMgPSBnZXRT
dGFuZGFyZEFubm90YXRpb25zKHRhZ0JpdHMpOw0KKwlpZiAoYmluYXJ5QW5ub3RhdGlvbnMgPT0g
bnVsbCkNCisJCXJldHVybiBzdGFuZGFyZEFubm90YXRpb25zOw0KKwlpbnQgbGVuZ3RoID0gYmlu
YXJ5QW5ub3RhdGlvbnMubGVuZ3RoOw0KKwlpbnQgc3RhbmRhcmRMZW5ndGggPSBzdGFuZGFyZEFu
bm90YXRpb25zLmxlbmd0aDsNCisJSUFubm90YXRpb25bXSBhbm5vdGF0aW9ucyA9IG5ldyBJQW5u
b3RhdGlvbltsZW5ndGggKyBzdGFuZGFyZExlbmd0aF07DQorCWZvciAoaW50IGkgPSAwOyBpIDwg
bGVuZ3RoOyBpKyspIHsNCisJCWFubm90YXRpb25zW2ldID0gVXRpbC5nZXRBbm5vdGF0aW9uKHRo
aXMsIGFyZ3VtZW50TmFtZSwgYmluYXJ5QW5ub3RhdGlvbnNbaV0sIG51bGwpOw0KKwl9DQorCVN5
c3RlbS5hcnJheWNvcHkoc3RhbmRhcmRBbm5vdGF0aW9ucywgMCwgYW5ub3RhdGlvbnMsIGxlbmd0
aCwgc3RhbmRhcmRMZW5ndGgpOw0KKwlyZXR1cm4gYW5ub3RhdGlvbnM7DQorfQ0KIHB1YmxpYyBJ
TWVtYmVyVmFsdWVQYWlyIGdldERlZmF1bHRWYWx1ZSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRp
b24gew0KIAlJQmluYXJ5TWV0aG9kIGluZm8gPSAoSUJpbmFyeU1ldGhvZCkgZ2V0RWxlbWVudElu
Zm8oKTsNCiAJT2JqZWN0IGRlZmF1bHRWYWx1ZSA9IGluZm8uZ2V0RGVmYXVsdFZhbHVlKCk7DQpJ
bmRleDogbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvQ2xhc3NGaWxlSW5mby5q
YXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9DbGFzc0ZpbGVJbmZv
LmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjQ5DQpkaWZmIC11IC1yMS40OSBDbGFzc0Zp
bGVJbmZvLmphdmENCi0tLSBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9DbGFz
c0ZpbGVJbmZvLmphdmEJMyBTZXAgMjAxMCAxNToyMDowMyAtMDAwMAkxLjQ5DQorKysgbW9kZWwv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvQ2xhc3NGaWxlSW5mby5qYXZhCTE3IEZlYiAy
MDExIDE1OjI4OjE4IC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90
aGVycy4NCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBv
dGhlcnMuDQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNj
b21wYW55aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVy
bXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFu
aWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtNDEsMjUgKzQx
LDI4IEBADQogCSAqLw0KIAlwcm90ZWN0ZWQgSVR5cGVQYXJhbWV0ZXJbXSB0eXBlUGFyYW1ldGVy
czsNCiANCitwcml2YXRlIHZvaWQgZ2VuZXJhdGVBbm5vdGF0aW9uc0luZm9zKEJpbmFyeU1lbWJl
ciBtZW1iZXIsIElCaW5hcnlBbm5vdGF0aW9uW10gYmluYXJ5QW5ub3RhdGlvbnMsIGxvbmcgdGFn
Qml0cywgSGFzaE1hcCBuZXdFbGVtZW50cykgew0KKwlnZW5lcmF0ZUFubm90YXRpb25zSW5mb3Mo
bWVtYmVyLCBudWxsLCBiaW5hcnlBbm5vdGF0aW9ucywgdGFnQml0cywgbmV3RWxlbWVudHMpOw0K
K30NCiAvKioNCiAgKiBDcmVhdGVzIHRoZSBoYW5kbGVzIGFuZCBpbmZvcyBmb3IgdGhlIGFubm90
YXRpb25zIG9mIHRoZSBnaXZlbiBiaW5hcnkgbWVtYmVyLg0KICAqIEFkZHMgbmV3IGhhbmRsZXMg
dG8gdGhlIGdpdmVuIHZlY3Rvci4NCiAgKi8NCi1wcml2YXRlIHZvaWQgZ2VuZXJhdGVBbm5vdGF0
aW9uc0luZm9zKEJpbmFyeU1lbWJlciBtZW1iZXIsIElCaW5hcnlBbm5vdGF0aW9uW10gYmluYXJ5
QW5ub3RhdGlvbnMsIGxvbmcgdGFnQml0cywgSGFzaE1hcCBuZXdFbGVtZW50cykgew0KK3ByaXZh
dGUgdm9pZCBnZW5lcmF0ZUFubm90YXRpb25zSW5mb3MoQmluYXJ5TWVtYmVyIG1lbWJlciwgY2hh
cltdIHBhcmFtZXRlck5hbWUsIElCaW5hcnlBbm5vdGF0aW9uW10gYmluYXJ5QW5ub3RhdGlvbnMs
IGxvbmcgdGFnQml0cywgSGFzaE1hcCBuZXdFbGVtZW50cykgew0KIAlpZiAoYmluYXJ5QW5ub3Rh
dGlvbnMgIT0gbnVsbCkgew0KIAkJZm9yIChpbnQgaSA9IDAsIGxlbmd0aCA9IGJpbmFyeUFubm90
YXRpb25zLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7DQogCQkJSUJpbmFyeUFubm90YXRpb24g
YW5ub3RhdGlvbkluZm8gPSBiaW5hcnlBbm5vdGF0aW9uc1tpXTsNCi0JCQlnZW5lcmF0ZUFubm90
YXRpb25JbmZvKG1lbWJlciwgbmV3RWxlbWVudHMsIGFubm90YXRpb25JbmZvKTsNCisJCQlnZW5l
cmF0ZUFubm90YXRpb25JbmZvKG1lbWJlciwgcGFyYW1ldGVyTmFtZSwgbmV3RWxlbWVudHMsIGFu
bm90YXRpb25JbmZvLCBudWxsKTsNCiAJCX0NCiAJfQ0KLQlnZW5lcmF0ZVN0YW5kYXJkQW5ub3Rh
dGlvbnNJbmZvcyhtZW1iZXIsIHRhZ0JpdHMsIG5ld0VsZW1lbnRzKTsNCi19DQotcHJpdmF0ZSB2
b2lkIGdlbmVyYXRlQW5ub3RhdGlvbkluZm8oSmF2YUVsZW1lbnQgcGFyZW50LCBIYXNoTWFwIG5l
d0VsZW1lbnRzLCBJQmluYXJ5QW5ub3RhdGlvbiBhbm5vdGF0aW9uSW5mbykgew0KLQlnZW5lcmF0
ZUFubm90YXRpb25JbmZvKHBhcmVudCwgbmV3RWxlbWVudHMsIGFubm90YXRpb25JbmZvLCBudWxs
KTsNCisJZ2VuZXJhdGVTdGFuZGFyZEFubm90YXRpb25zSW5mb3MobWVtYmVyLCBwYXJhbWV0ZXJO
YW1lLCB0YWdCaXRzLCBuZXdFbGVtZW50cyk7DQogfQ0KIHByaXZhdGUgdm9pZCBnZW5lcmF0ZUFu
bm90YXRpb25JbmZvKEphdmFFbGVtZW50IHBhcmVudCwgSGFzaE1hcCBuZXdFbGVtZW50cywgSUJp
bmFyeUFubm90YXRpb24gYW5ub3RhdGlvbkluZm8sIFN0cmluZyBtZW1iZXJWYWx1ZVBhaXJOYW1l
KSB7DQorCWdlbmVyYXRlQW5ub3RhdGlvbkluZm8ocGFyZW50LCBudWxsLCBuZXdFbGVtZW50cywg
YW5ub3RhdGlvbkluZm8sIG1lbWJlclZhbHVlUGFpck5hbWUpOw0KK30NCitwcml2YXRlIHZvaWQg
Z2VuZXJhdGVBbm5vdGF0aW9uSW5mbyhKYXZhRWxlbWVudCBwYXJlbnQsIGNoYXJbXSBwYXJhbWV0
ZXJOYW1lLCBIYXNoTWFwIG5ld0VsZW1lbnRzLCBJQmluYXJ5QW5ub3RhdGlvbiBhbm5vdGF0aW9u
SW5mbywgU3RyaW5nIG1lbWJlclZhbHVlUGFpck5hbWUpIHsNCiAJY2hhcltdIHR5cGVOYW1lID0g
b3JnLmVjbGlwc2UuamR0LmNvcmUuU2lnbmF0dXJlLnRvQ2hhckFycmF5KENoYXJPcGVyYXRpb24u
cmVwbGFjZU9uQ29weShhbm5vdGF0aW9uSW5mby5nZXRUeXBlTmFtZSgpLCAnLycsICcuJykpOw0K
LQlBbm5vdGF0aW9uIGFubm90YXRpb24gPSBuZXcgQW5ub3RhdGlvbihwYXJlbnQsIG5ldyBTdHJp
bmcodHlwZU5hbWUpLCBtZW1iZXJWYWx1ZVBhaXJOYW1lKTsNCisJQW5ub3RhdGlvbiBhbm5vdGF0
aW9uID0gbmV3IEFubm90YXRpb24ocGFyZW50LCBwYXJhbWV0ZXJOYW1lLCBuZXcgU3RyaW5nKHR5
cGVOYW1lKSwgbWVtYmVyVmFsdWVQYWlyTmFtZSk7DQogCXdoaWxlIChuZXdFbGVtZW50cy5jb250
YWluc0tleShhbm5vdGF0aW9uKSkgew0KIAkJYW5ub3RhdGlvbi5vY2N1cnJlbmNlQ291bnQrKzsN
CiAJfQ0KQEAgLTgxLDcgKzg0LDcgQEANCiAJCX0NCiAJfQ0KIH0NCi1wcml2YXRlIHZvaWQgZ2Vu
ZXJhdGVTdGFuZGFyZEFubm90YXRpb25zSW5mb3MoQmluYXJ5TWVtYmVyIG1lbWJlciwgbG9uZyB0
YWdCaXRzLCBIYXNoTWFwIG5ld0VsZW1lbnRzKSB7DQorcHJpdmF0ZSB2b2lkIGdlbmVyYXRlU3Rh
bmRhcmRBbm5vdGF0aW9uc0luZm9zKEJpbmFyeU1lbWJlciBtZW1iZXIsIGNoYXJbXSBwYXJhbWV0
ZXJOYW1lLCBsb25nIHRhZ0JpdHMsIEhhc2hNYXAgbmV3RWxlbWVudHMpIHsNCiAJaWYgKCh0YWdC
aXRzICYgVGFnQml0cy5BbGxTdGFuZGFyZEFubm90YXRpb25zTWFzaykgPT0gMCkNCiAJCXJldHVy
bjsNCiAJaWYgKCh0YWdCaXRzICYgVGFnQml0cy5Bbm5vdGF0aW9uVGFyZ2V0TUFTSykgIT0gMCkg
ew0KQEAgLTI2OCw3ICsyNzEsNyBAQA0KIAkJCQlmaW5hbCBTdHJpbmdbXSBwYXJhbWV0ZXJUeXBl
cyA9IFNpZ25hdHVyZS5nZXRQYXJhbWV0ZXJUeXBlcyhuZXcgU3RyaW5nKGRlc2NyaXB0b3IpKTsN
CiAJCQkJcE5hbWVzWzBdID0gcGFyYW1ldGVyVHlwZXNbMF07DQogCQkJfQ0KLQkJfWNhdGNoIChJ
bGxlZ2FsQXJndW1lbnRFeGNlcHRpb24gZSkgew0KKwkJfSBjYXRjaCAoSWxsZWdhbEFyZ3VtZW50
RXhjZXB0aW9uIGUpIHsNCiAJCQkvLyBwcm90ZWN0IGFnYWluc3QgbWFsZm9ybWVkIC5jbGFzcyBm
aWxlIChlLmcuIGNvbS9zdW4vY3J5cHRvL3Byb3ZpZGVyL1N1bkpDRV9iLmNsYXNzIGhhcyBhICdh
JyBnZW5lcmljIHNpZ25hdHVyZSkNCiAJCQlzaWduYXR1cmUgPSBtZXRob2RJbmZvLmdldE1ldGhv
ZERlc2NyaXB0b3IoKTsNCiAJCQlwTmFtZXMgPSBTaWduYXR1cmUuZ2V0UGFyYW1ldGVyVHlwZXMo
bmV3IFN0cmluZyhzaWduYXR1cmUpKTsNCkBAIC0yOTAsMTMgKzI5MywyNyBAQA0KIAkJQmluYXJ5
TWV0aG9kIG1ldGhvZCA9IG5ldyBCaW5hcnlNZXRob2QoKEphdmFFbGVtZW50KXR5cGUsIHNlbGVj
dG9yLCBwTmFtZXMpOw0KIAkJY2hpbGRyZW5IYW5kbGVzLmFkZChtZXRob2QpOw0KIA0KLQkJLy8g
ZW5zdXJlIHRoYXQgMiBiaW5hcnkgbWV0aG9kcyB3aXRoIHRoZSBzYW1lIHNpZ25hdHVyZSBidXQg
d2l0aCBkaWZmZXJlbnQgcmV0dXJuIHR5cGVzIGhhdmUgZGlmZmVyZW50IG9jY3VyZW5jZSBjb3Vu
dHMuDQorCQkvLyBlbnN1cmUgdGhhdCAyIGJpbmFyeSBtZXRob2RzIHdpdGggdGhlIHNhbWUgc2ln
bmF0dXJlIGJ1dCB3aXRoIGRpZmZlcmVudCByZXR1cm4gdHlwZXMgaGF2ZSBkaWZmZXJlbnQgb2Nj
dXJyZW5jZSBjb3VudHMuDQogCQkvLyAoY2FzZSBvZiBicmlkZ2UgbWV0aG9kcyBpbiAxLjUpDQog
CQl3aGlsZSAobmV3RWxlbWVudHMuY29udGFpbnNLZXkobWV0aG9kKSkNCiAJCQltZXRob2Qub2Nj
dXJyZW5jZUNvdW50Kys7DQogDQogCQluZXdFbGVtZW50cy5wdXQobWV0aG9kLCBtZXRob2RJbmZv
KTsNCiANCisJCWludCBtYXggPSBwTmFtZXMubGVuZ3RoOw0KKwkJY2hhcltdW10gYXJndW1lbnRO
YW1lcyA9IG1ldGhvZEluZm8uZ2V0QXJndW1lbnROYW1lcygpOw0KKwkJaWYgKGFyZ3VtZW50TmFt
ZXMgPT0gbnVsbCB8fCBhcmd1bWVudE5hbWVzLmxlbmd0aCA8IG1heCkgew0KKwkJCWFyZ3VtZW50
TmFtZXMgPSBuZXcgY2hhclttYXhdW107DQorCQkJZm9yIChpbnQgaiA9IDA7IGogPCBtYXg7IGor
Kykgew0KKwkJCQlhcmd1bWVudE5hbWVzW2pdID0gKCJhcmciICsgaikudG9DaGFyQXJyYXkoKTsg
Ly8kTk9OLU5MUy0xJA0KKwkJCX0NCisJCX0NCisJCWZvciAoaW50IGogPSAwOyBqIDwgbWF4OyBq
KyspIHsNCisJCQlJQmluYXJ5QW5ub3RhdGlvbltdIHBhcmFtZXRlckFubm90YXRpb25zID0gbWV0
aG9kSW5mby5nZXRQYXJhbWV0ZXJBbm5vdGF0aW9ucyhqKTsNCisJCQlpZiAocGFyYW1ldGVyQW5u
b3RhdGlvbnMgIT0gbnVsbCkgew0KKwkJCQlnZW5lcmF0ZUFubm90YXRpb25zSW5mb3MobWV0aG9k
LCBhcmd1bWVudE5hbWVzW2pdLCBwYXJhbWV0ZXJBbm5vdGF0aW9ucywgbWV0aG9kSW5mby5nZXRU
YWdCaXRzKCksIG5ld0VsZW1lbnRzKTsNCisJCQl9DQorCQl9DQogCQlnZW5lcmF0ZVR5cGVQYXJh
bWV0ZXJJbmZvcyhtZXRob2QsIHNpZ25hdHVyZSwgbmV3RWxlbWVudHMsIHR5cGVQYXJhbWV0ZXJI
YW5kbGVzKTsNCiAJCWdlbmVyYXRlQW5ub3RhdGlvbnNJbmZvcyhtZXRob2QsIG1ldGhvZEluZm8u
Z2V0QW5ub3RhdGlvbnMoKSwgbWV0aG9kSW5mby5nZXRUYWdCaXRzKCksIG5ld0VsZW1lbnRzKTsN
CiAJCU9iamVjdCBkZWZhdWx0VmFsdWUgPSBtZXRob2RJbmZvLmdldERlZmF1bHRWYWx1ZSgpOw0K
SW5kZXg6IG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0NvbXBpbGF0aW9uVW5p
dFN0cnVjdHVyZVJlcXVlc3Rvci5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3Qv
ZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29yZS9Db21waWxhdGlvblVuaXRTdHJ1Y3R1cmVSZXF1ZXN0b3IuamF2YSx2DQpyZXRyaWV2
aW5nIHJldmlzaW9uIDEuODcNCmRpZmYgLXUgLXIxLjg3IENvbXBpbGF0aW9uVW5pdFN0cnVjdHVy
ZVJlcXVlc3Rvci5qYXZhDQotLS0gbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUv
Q29tcGlsYXRpb25Vbml0U3RydWN0dXJlUmVxdWVzdG9yLmphdmEJMjggSnVsIDIwMTAgMTY6MTc6
MDEgLTAwMDAJMS44Nw0KKysrIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0Nv
bXBpbGF0aW9uVW5pdFN0cnVjdHVyZVJlcXVlc3Rvci5qYXZhCTE3IEZlYiAyMDExIDE1OjI4OjE4
IC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLSAqIENv
cHlyaWdodCAoYykgMjAwMCwgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCisgKiBD
b3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQogICog
QWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1h
dGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVj
bGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlz
dHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtMTcsMTEgKzE3LDE5IEBADQogaW1w
b3J0IGphdmEudXRpbC5TdGFjazsNCiANCiBpbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1l
LkFzc2VydDsNCi1pbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuKjsNCitpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmNvcmUuRmxhZ3M7DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklBbm5v
dGF0aW9uOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JQ29tcGlsYXRpb25Vbml0Ow0K
K2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JSmF2YUVsZW1lbnQ7DQoraW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5jb3JlLklNZW1iZXJWYWx1ZVBhaXI7DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5jb3JlLklUeXBlUGFyYW1ldGVyOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5TaWdu
YXR1cmU7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLkNhdGVnb3JpemVk
UHJvYmxlbTsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIuQ2hhck9wZXJh
dGlvbjsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIuSVByb2JsZW07DQog
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5JU291cmNlRWxlbWVudFJl
cXVlc3RvcjsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5B
U1ROb2RlOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFy
Z3VtZW50Ow0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFy
cmF5SW5pdGlhbGl6ZXI7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci5hc3QuQ2xhc3NMaXRlcmFsQWNjZXNzOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIuYXN0LkV4cHJlc3Npb247DQpAQCAtMzksNyArNDcsNiBAQA0KIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIudXRpbC5IYXNodGFibGVPZk9iamVjdFRv
SW50Ow0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS51dGlsLlJlZmVyZW5j
ZUluZm9BZGFwdGVyOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS51dGls
LlV0aWw7DQotaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQVNU
Tm9kZTsNCiAvKioNCiAgKiBBIHJlcXVlc3RvciBmb3IgdGhlIGZ1enp5IHBhcnNlciwgdXNlZCB0
byBjb21wdXRlIHRoZSBjaGlsZHJlbiBvZiBhbiBJQ29tcGlsYXRpb25Vbml0Lg0KICAqLw0KQEAg
LTQyNyw4ICs0MzQsNTMgQEANCiAJCQlhY2NlcHRBbm5vdGF0aW9uKGFubm90YXRpb24sIGluZm8s
IGhhbmRsZSk7DQogCQl9DQogCX0NCisJLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mv
c2hvd19idWcuY2dpP2lkPTMzNDc4Mw0KKwkvLyBQcm9jZXNzIHRoZSBwYXJhbWV0ZXIgYW5ub3Rh
dGlvbnMgZnJvbSB0aGUgYXJndW1lbnRzDQorCWlmIChtZXRob2RJbmZvLm5vZGUgIT0gbnVsbCAm
JiBtZXRob2RJbmZvLm5vZGUuYXJndW1lbnRzICE9IG51bGwpIHsNCisJCWluZm8uYXJndW1lbnRz
ID0gYWNjZXB0TWV0aG9kUGFyYW1ldGVycyhtZXRob2RJbmZvLm5vZGUuYXJndW1lbnRzLCBoYW5k
bGUsIG1ldGhvZEluZm8pOw0KKwl9DQogCXJldHVybiBpbmZvOw0KIH0NCitwcml2YXRlIExvY2Fs
VmFyaWFibGVbXSBhY2NlcHRNZXRob2RQYXJhbWV0ZXJzKEFyZ3VtZW50W10gYXJndW1lbnRzLCBK
YXZhRWxlbWVudCBtZXRob2RIYW5kbGUsIE1ldGhvZEluZm8gbWV0aG9kSW5mbykgew0KKwlpZiAo
YXJndW1lbnRzID09IG51bGwpIHJldHVybiBudWxsOw0KKwlMb2NhbFZhcmlhYmxlW10gcmVzdWx0
ID0gbmV3IExvY2FsVmFyaWFibGVbYXJndW1lbnRzLmxlbmd0aF07DQorCUFubm90YXRpb25bXVtd
IHBhcmFtQW5ub3RhdGlvbnMgPSBuZXcgQW5ub3RhdGlvblthcmd1bWVudHMubGVuZ3RoXVtdOw0K
Kwlmb3IoaW50IGkgPSAwOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7DQorCQlBcmd1bWVu
dCBhcmd1bWVudCA9IGFyZ3VtZW50c1tpXTsNCisJCUFubm90YXRhYmxlSW5mbyBsb2NhbFZhcklu
Zm8gPSBuZXcgQW5ub3RhdGFibGVJbmZvKCk7DQorCQlsb2NhbFZhckluZm8uc2V0U291cmNlUmFu
Z2VTdGFydChhcmd1bWVudC5kZWNsYXJhdGlvblNvdXJjZVN0YXJ0KTsNCisJCWxvY2FsVmFySW5m
by5zZXRTb3VyY2VSYW5nZUVuZChhcmd1bWVudC5kZWNsYXJhdGlvblNvdXJjZVN0YXJ0KTsNCisJ
CWxvY2FsVmFySW5mby5zZXROYW1lU291cmNlU3RhcnQoYXJndW1lbnQuc291cmNlU3RhcnQpOw0K
KwkJbG9jYWxWYXJJbmZvLnNldE5hbWVTb3VyY2VFbmQoYXJndW1lbnQuc291cmNlRW5kKTsNCisJ
CQ0KKwkJU3RyaW5nIHBhcmFtVHlwZVNpZyA9IEphdmFNb2RlbE1hbmFnZXIuZ2V0SmF2YU1vZGVs
TWFuYWdlcigpLmludGVybihTaWduYXR1cmUuY3JlYXRlVHlwZVNpZ25hdHVyZShtZXRob2RJbmZv
LnBhcmFtZXRlclR5cGVzW2ldLCBmYWxzZSkpOw0KKwkJcmVzdWx0W2ldID0gbmV3IExvY2FsVmFy
aWFibGUoDQorCQkJCW1ldGhvZEhhbmRsZSwNCisJCQkJbmV3IFN0cmluZyhhcmd1bWVudC5uYW1l
KSwNCisJCQkJYXJndW1lbnQuZGVjbGFyYXRpb25Tb3VyY2VTdGFydCwNCisJCQkJYXJndW1lbnQu
IGRlY2xhcmF0aW9uU291cmNlRW5kLA0KKwkJCQlhcmd1bWVudC5zb3VyY2VTdGFydCwNCisJCQkJ
YXJndW1lbnQuc291cmNlRW5kLA0KKwkJCQlwYXJhbVR5cGVTaWcsDQorCQkJCWFyZ3VtZW50LmFu
bm90YXRpb25zLA0KKwkJCQlhcmd1bWVudC5tb2RpZmllcnMsIA0KKwkJCQl0cnVlKTsNCisJCXRo
aXMubmV3RWxlbWVudHMucHV0KHJlc3VsdFtpXSwgbG9jYWxWYXJJbmZvKTsNCisJCXRoaXMuaW5m
b1N0YWNrLnB1c2gobG9jYWxWYXJJbmZvKTsNCisJCXRoaXMuaGFuZGxlU3RhY2sucHVzaChyZXN1
bHRbaV0pOw0KKwkJaWYgKGFyZ3VtZW50LmFubm90YXRpb25zICE9IG51bGwpIHsNCisJCQlwYXJh
bUFubm90YXRpb25zW2ldID0gbmV3IEFubm90YXRpb25bYXJndW1lbnQuYW5ub3RhdGlvbnMubGVu
Z3RoXTsNCisJCQlmb3IgKGludCAgaiA9IDA7IGogPCBhcmd1bWVudC5hbm5vdGF0aW9ucy5sZW5n
dGg7IGorKyApIHsNCisJCQkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5B
bm5vdGF0aW9uIGFubm90YXRpb24gPSBhcmd1bWVudC5hbm5vdGF0aW9uc1tqXTsNCisJCQkJYWNj
ZXB0QW5ub3RhdGlvbihhbm5vdGF0aW9uLCBsb2NhbFZhckluZm8sIHJlc3VsdFtpXSk7DQorCQkJ
fQ0KKwkJfQ0KKwkJdGhpcy5pbmZvU3RhY2sucG9wKCk7DQorCQl0aGlzLmhhbmRsZVN0YWNrLnBv
cCgpOw0KKwl9DQorCXJldHVybiByZXN1bHQ7DQorfQ0KKw0KIC8qKg0KICAqIEBzZWUgSVNvdXJj
ZUVsZW1lbnRSZXF1ZXN0b3INCiAgKi8NCkluZGV4OiBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29yZS9Mb2NhbFZhcmlhYmxlLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zz
cm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb3JlL0xvY2FsVmFyaWFibGUuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEu
MzENCmRpZmYgLXUgLXIxLjMxIExvY2FsVmFyaWFibGUuamF2YQ0KLS0tIG1vZGVsL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb3JlL0xvY2FsVmFyaWFibGUuamF2YQk3IFNlcCAyMDEwIDE5OjE0
OjI2IC0wMDAwCTEuMzENCisrKyBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9M
b2NhbFZhcmlhYmxlLmphdmEJMTcgRmViIDIwMTEgMTU6Mjg6MTggLTAwMDANCkBAIC0xLDUgKzEs
NSBAQA0KIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAy
MDEwIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwg
MjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVk
LiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1h
ZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5z
ZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBh
dmFpbGFibGUgYXQNCkBAIC0zNCw2ICszNCw4IEBADQogDQogcHVibGljIGNsYXNzIExvY2FsVmFy
aWFibGUgZXh0ZW5kcyBTb3VyY2VSZWZFbGVtZW50IGltcGxlbWVudHMgSUxvY2FsVmFyaWFibGUg
ew0KIA0KKwlwdWJsaWMgc3RhdGljIGZpbmFsIElMb2NhbFZhcmlhYmxlW10gTk9fTE9DQUxfVkFS
SUFCTEVTID0gbmV3IElMb2NhbFZhcmlhYmxlWzBdOw0KKwkNCiAJU3RyaW5nIG5hbWU7DQogCXB1
YmxpYyBpbnQgZGVjbGFyYXRpb25Tb3VyY2VTdGFydCwgZGVjbGFyYXRpb25Tb3VyY2VFbmQ7DQog
CXB1YmxpYyBpbnQgbmFtZVN0YXJ0LCBuYW1lRW5kOw0KQEAgLTY2LDYgKzY4LDMwIEBADQogCQl0
aGlzLmlzUGFyYW1ldGVyID0gaXNQYXJhbWV0ZXI7DQogCX0NCiANCisJcHVibGljIExvY2FsVmFy
aWFibGUoDQorCQkJSmF2YUVsZW1lbnQgcGFyZW50LA0KKwkJCVN0cmluZyBuYW1lLA0KKwkJCWlu
dCBkZWNsYXJhdGlvblNvdXJjZVN0YXJ0LA0KKwkJCWludCBkZWNsYXJhdGlvblNvdXJjZUVuZCwN
CisJCQlpbnQgbmFtZVN0YXJ0LA0KKwkJCWludCBuYW1lRW5kLA0KKwkJCVN0cmluZyB0eXBlU2ln
bmF0dXJlLA0KKwkJCUlBbm5vdGF0aW9uW10gYW5ub3RhdGlvbnMsDQorCQkJaW50IGZsYWdzLA0K
KwkJCWJvb2xlYW4gaXNQYXJhbWV0ZXIpIHsNCisNCisJCXN1cGVyKHBhcmVudCk7DQorCQl0aGlz
Lm5hbWUgPSBuYW1lOw0KKwkJdGhpcy5kZWNsYXJhdGlvblNvdXJjZVN0YXJ0ID0gZGVjbGFyYXRp
b25Tb3VyY2VTdGFydDsNCisJCXRoaXMuZGVjbGFyYXRpb25Tb3VyY2VFbmQgPSBkZWNsYXJhdGlv
blNvdXJjZUVuZDsNCisJCXRoaXMubmFtZVN0YXJ0ID0gbmFtZVN0YXJ0Ow0KKwkJdGhpcy5uYW1l
RW5kID0gbmFtZUVuZDsNCisJCXRoaXMudHlwZVNpZ25hdHVyZSA9IHR5cGVTaWduYXR1cmU7DQor
CQl0aGlzLmFubm90YXRpb25zID0gYW5ub3RhdGlvbnM7DQorCQl0aGlzLmZsYWdzID0gZmxhZ3M7
DQorCQl0aGlzLmlzUGFyYW1ldGVyID0gaXNQYXJhbWV0ZXI7DQorCX0NCisNCiAJcHJvdGVjdGVk
IHZvaWQgY2xvc2luZyhPYmplY3QgaW5mbykgew0KIAkJLy8gYSBsb2NhbCB2YXJpYWJsZSBoYXMg
bm8gaW5mbw0KIAl9DQpJbmRleDogbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUv
TWVtYmVyLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL01lbWJl
ci5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS41NQ0KZGlmZiAtdSAtcjEuNTUgTWVtYmVy
LmphdmENCi0tLSBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9NZW1iZXIuamF2
YQkyNCBOb3YgMjAxMCAwMTozMzoyOCAtMDAwMAkxLjU1DQorKysgbW9kZWwvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvcmUvTWVtYmVyLmphdmEJMTcgRmViIDIwMTEgMTU6Mjg6MTggLTAwMDAN
CkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0
IChjKSAyMDAwLCAyMDEwIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdo
dCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmln
aHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxz
DQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQ
dWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRp
b24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC0yMjEsNyArMjIxLDcgQEANCiAJCQltZW1lbnRv
Lm5leHRUb2tlbigpOyAvLyBKRU1fQ09VTlQNCiAJCQlpZiAoIW1lbWVudG8uaGFzTW9yZVRva2Vu
cygpKSByZXR1cm4gdGhpczsNCiAJCQlib29sZWFuIGlzUGFyYW1ldGVyID0gQm9vbGVhbi52YWx1
ZU9mKG1lbWVudG8ubmV4dFRva2VuKCkpLmJvb2xlYW5WYWx1ZSgpOw0KLQkJCXJldHVybiBuZXcg
TG9jYWxWYXJpYWJsZSh0aGlzLCB2YXJOYW1lLCBkZWNsYXJhdGlvblN0YXJ0LCBkZWNsYXJhdGlv
bkVuZCwgbmFtZVN0YXJ0LCBuYW1lRW5kLCB0eXBlU2lnbmF0dXJlLCBudWxsLCBmbGFncywgaXNQ
YXJhbWV0ZXIpOw0KKwkJCXJldHVybiBuZXcgTG9jYWxWYXJpYWJsZSh0aGlzLCB2YXJOYW1lLCBk
ZWNsYXJhdGlvblN0YXJ0LCBkZWNsYXJhdGlvbkVuZCwgbmFtZVN0YXJ0LCBuYW1lRW5kLCB0eXBl
U2lnbmF0dXJlLCBBbm5vdGF0aW9uLk5PX0FOTk9UQVRJT05TLCBmbGFncywgaXNQYXJhbWV0ZXIp
Ow0KIAkJY2FzZSBKRU1fVFlQRV9QQVJBTUVURVI6DQogCQkJaWYgKCFtZW1lbnRvLmhhc01vcmVU
b2tlbnMoKSkgcmV0dXJuIHRoaXM7DQogCQkJU3RyaW5nIHR5cGVQYXJhbWV0ZXJOYW1lID0gbWVt
ZW50by5uZXh0VG9rZW4oKTsNCkluZGV4OiBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29yZS9Tb3VyY2VNZXRob2QuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2Vj
bGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvcmUvU291cmNlTWV0aG9kLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjY4DQpkaWZm
IC11IC1yMS42OCBTb3VyY2VNZXRob2QuamF2YQ0KLS0tIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb3JlL1NvdXJjZU1ldGhvZC5qYXZhCTI3IEp1biAyMDA4IDE2OjAzOjUxIC0wMDAw
CTEuNjgNCisrKyBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Tb3VyY2VNZXRo
b2QuamF2YQkxNyBGZWIgMjAxMSAxNToyODoxOCAtMDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMDggSUJNIENv
cnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJv
Z3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFi
bGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAg
KiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBh
dA0KQEAgLTEzNCw3ICsxMzQsMTIgQEANCiAJU291cmNlTWV0aG9kRWxlbWVudEluZm8gaW5mbyA9
IChTb3VyY2VNZXRob2RFbGVtZW50SW5mbykgZ2V0RWxlbWVudEluZm8oKTsNCiAJcmV0dXJuIGlu
Zm8udHlwZVBhcmFtZXRlcnM7DQogfQ0KLQ0KK3B1YmxpYyBJTG9jYWxWYXJpYWJsZVtdIGdldFBh
cmFtZXRlcnMoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsNCisJSUxvY2FsVmFyaWFibGVb
XSBhcmd1bWVudHMgPSAoKFNvdXJjZU1ldGhvZEVsZW1lbnRJbmZvKSBnZXRFbGVtZW50SW5mbygp
KS5hcmd1bWVudHM7DQorCWlmIChhcmd1bWVudHMgPT0gbnVsbCkNCisJCXJldHVybiBMb2NhbFZh
cmlhYmxlLk5PX0xPQ0FMX1ZBUklBQkxFUzsNCisJcmV0dXJuIGFyZ3VtZW50czsNCit9DQogLyoq
DQogICogQHNlZSBJTWV0aG9kI2dldFR5cGVQYXJhbWV0ZXJTaWduYXR1cmVzKCkNCiAgKiBAc2lu
Y2UgMy4wDQpJbmRleDogbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvU291cmNl
TWV0aG9kRWxlbWVudEluZm8uamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2Vj
bGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvcmUvU291cmNlTWV0aG9kRWxlbWVudEluZm8uamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9u
IDEuMjINCmRpZmYgLXUgLXIxLjIyIFNvdXJjZU1ldGhvZEVsZW1lbnRJbmZvLmphdmENCi0tLSBt
b2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Tb3VyY2VNZXRob2RFbGVtZW50SW5m
by5qYXZhCTI3IEp1biAyMDA4IDE2OjAzOjUwIC0wMDAwCTEuMjINCisrKyBtb2RlbC9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Tb3VyY2VNZXRob2RFbGVtZW50SW5mby5qYXZhCTE3IEZl
YiAyMDExIDE1OjI4OjE4IC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAwOCBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4NCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFu
ZCBvdGhlcnMuDQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUg
YWNjb21wYW55aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUg
dGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29t
cGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtMzgsNiAr
MzgsOCBAQA0KIAkgKiBGb3IgZXhhbXBsZSwgSGFzaHRhYmxlIG9yIGphdmEudXRpbC5IYXNodGFi
bGUuDQogCSAqLw0KIAlwcm90ZWN0ZWQgY2hhcltdW10gZXhjZXB0aW9uVHlwZXM7DQorCQ0KKwlw
cm90ZWN0ZWQgSUxvY2FsVmFyaWFibGVbXSBhcmd1bWVudHM7DQogDQogCS8qDQogCSAqIFRoZSB0
eXBlIHBhcmFtZXRlcnMgb2YgdGhpcyBzb3VyY2UgdHlwZS4gRW1wdHkgaWYgbm9uZS4NCkluZGV4
OiBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS91dGlsL1V0aWwuamF2YQ0KPT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUv
bW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvdXRpbC9VdGlsLmphdmEsdg0KcmV0
cmlldmluZyByZXZpc2lvbiAxLjE0NQ0KZGlmZiAtdSAtcjEuMTQ1IFV0aWwuamF2YQ0KLS0tIG1v
ZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3V0aWwvVXRpbC5qYXZhCTYgSmFuIDIw
MTEgMTM6NDM6NTcgLTAwMDAJMS4xNDUNCisrKyBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29yZS91dGlsL1V0aWwuamF2YQkxNyBGZWIgMjAxMSAxNToyODoxOCAtMDAwMA0KQEAgLTMx
MzUsOSArMzEzNSw5IEBADQogCQl9DQogCQlyZXR1cm4gdHlwZUFyZ3VtZW50czsNCiAJfQ0KLQlw
dWJsaWMgc3RhdGljIElBbm5vdGF0aW9uIGdldEFubm90YXRpb24oSmF2YUVsZW1lbnQgcGFyZW50
LCBJQmluYXJ5QW5ub3RhdGlvbiBiaW5hcnlBbm5vdGF0aW9uLCBTdHJpbmcgbWVtYmVyVmFsdWVQ
YWlyTmFtZSkgew0KKwlwdWJsaWMgc3RhdGljIElBbm5vdGF0aW9uIGdldEFubm90YXRpb24oSmF2
YUVsZW1lbnQgcGFyZW50LCBjaGFyW10gYXJndW1lbnROYW1lLCBJQmluYXJ5QW5ub3RhdGlvbiBi
aW5hcnlBbm5vdGF0aW9uLCBTdHJpbmcgbWVtYmVyVmFsdWVQYWlyTmFtZSkgew0KIAkJY2hhcltd
IHR5cGVOYW1lID0gb3JnLmVjbGlwc2UuamR0LmNvcmUuU2lnbmF0dXJlLnRvQ2hhckFycmF5KENo
YXJPcGVyYXRpb24ucmVwbGFjZU9uQ29weShiaW5hcnlBbm5vdGF0aW9uLmdldFR5cGVOYW1lKCks
ICcvJywgJy4nKSk7DQotCQlyZXR1cm4gbmV3IEFubm90YXRpb24ocGFyZW50LCBuZXcgU3RyaW5n
KHR5cGVOYW1lKSwgbWVtYmVyVmFsdWVQYWlyTmFtZSk7DQorCQlyZXR1cm4gbmV3IEFubm90YXRp
b24ocGFyZW50LCBhcmd1bWVudE5hbWUsIG5ldyBTdHJpbmcodHlwZU5hbWUpLCBtZW1iZXJWYWx1
ZVBhaXJOYW1lKTsNCiAJfQ0KIAkNCiAJcHVibGljIHN0YXRpYyBPYmplY3QgZ2V0QW5ub3RhdGlv
bk1lbWJlclZhbHVlKEphdmFFbGVtZW50IHBhcmVudCwgTWVtYmVyVmFsdWVQYWlyIG1lbWJlclZh
bHVlUGFpciwgT2JqZWN0IGJpbmFyeVZhbHVlKSB7DQpAQCAtMzE0NSw3ICszMTQ1LDcgQEANCiAJ
CQlyZXR1cm4gZ2V0QW5ub3RhdGlvbk1lbWJlclZhbHVlKG1lbWJlclZhbHVlUGFpciwgKENvbnN0
YW50KSBiaW5hcnlWYWx1ZSk7DQogCQl9IGVsc2UgaWYgKGJpbmFyeVZhbHVlIGluc3RhbmNlb2Yg
SUJpbmFyeUFubm90YXRpb24pIHsNCiAJCQltZW1iZXJWYWx1ZVBhaXIudmFsdWVLaW5kID0gSU1l
bWJlclZhbHVlUGFpci5LX0FOTk9UQVRJT047DQotCQkJcmV0dXJuIGdldEFubm90YXRpb24ocGFy
ZW50LCAoSUJpbmFyeUFubm90YXRpb24pIGJpbmFyeVZhbHVlLCBtZW1iZXJWYWx1ZVBhaXIuZ2V0
TWVtYmVyTmFtZSgpKTsNCisJCQlyZXR1cm4gZ2V0QW5ub3RhdGlvbihwYXJlbnQsIG51bGwsIChJ
QmluYXJ5QW5ub3RhdGlvbikgYmluYXJ5VmFsdWUsIG1lbWJlclZhbHVlUGFpci5nZXRNZW1iZXJO
YW1lKCkpOw0KIAkJfSBlbHNlIGlmIChiaW5hcnlWYWx1ZSBpbnN0YW5jZW9mIENsYXNzU2lnbmF0
dXJlKSB7DQogCQkJbWVtYmVyVmFsdWVQYWlyLnZhbHVlS2luZCA9IElNZW1iZXJWYWx1ZVBhaXIu
S19DTEFTUzsNCiAJCQljaGFyW10gY2xhc3NOYW1lID0gU2lnbmF0dXJlLnRvQ2hhckFycmF5KENo
YXJPcGVyYXRpb24ucmVwbGFjZU9uQ29weSgoKENsYXNzU2lnbmF0dXJlKSBiaW5hcnlWYWx1ZSku
Z2V0VHlwZU5hbWUoKSwgJy8nLCAnLicpKTsNCiNQIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3Rz
LmNvbXBpbGVyDQpJbmRleDogc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3V0aWwvVXRp
bC5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
dXRpbC9VdGlsLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjgyDQpkaWZmIC11IC1yMS44
MiBVdGlsLmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvdXRpbC9VdGls
LmphdmEJMjUgT2N0IDIwMTAgMTA6MzA6MTUgLTAwMDAJMS44Mg0KKysrIHNyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy91dGlsL1V0aWwuamF2YQkxNyBGZWIgMjAxMSAxNToyODoxOSAtMDAw
MA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmln
aHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCBy
aWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlh
bHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNl
IFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1
dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTM4Miw3ICszODIsOSBAQA0KIH0NCiBwdWJs
aWMgc3RhdGljIHZvaWQgY3JlYXRlSmFyKFN0cmluZ1tdIGphdmFQYXRoc0FuZENvbnRlbnRzLCBT
dHJpbmdbXSBleHRyYVBhdGhzQW5kQ29udGVudHMsIFN0cmluZyBqYXJQYXRoLCBTdHJpbmdbXSBj
bGFzc3BhdGgsIFN0cmluZyBjb21wbGlhbmNlLCBNYXAgb3B0aW9ucykgdGhyb3dzIElPRXhjZXB0
aW9uIHsNCiAJTWFwIGNvbXBpbGVPcHRpb25zID0gZ2V0Q29tcGlsZU9wdGlvbnMoY29tcGxpYW5j
ZSk7DQotCWNvbXBpbGVPcHRpb25zLnB1dEFsbChvcHRpb25zKTsNCisJaWYgKG9wdGlvbnMgIT0g
bnVsbCkgew0KKwkJY29tcGlsZU9wdGlvbnMucHV0QWxsKG9wdGlvbnMpOw0KKwl9DQogCWNyZWF0
ZUphcihqYXZhUGF0aHNBbmRDb250ZW50cywgZXh0cmFQYXRoc0FuZENvbnRlbnRzLCBjb21waWxl
T3B0aW9ucywgY2xhc3NwYXRoLCBqYXJQYXRoKTsNCiB9DQogcHVibGljIHN0YXRpYyB2b2lkIGNy
ZWF0ZVNvdXJjZVppcChTdHJpbmdbXSBwYXRoc0FuZENvbnRlbnRzLCBTdHJpbmcgemlwUGF0aCkg
dGhyb3dzIElPRXhjZXB0aW9uIHsNCiNQIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVs
DQpJbmRleDogc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0Fic3RyYWN0SmF2
YU1vZGVsVGVzdHMuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL21vZGVsL0Fic3RyYWN0SmF2YU1vZGVsVGVzdHMuamF2YSx2DQpyZXRyaWV2aW5nIHJl
dmlzaW9uIDEuMjQyDQpkaWZmIC11IC1yMS4yNDIgQWJzdHJhY3RKYXZhTW9kZWxUZXN0cy5qYXZh
DQotLS0gc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0Fic3RyYWN0SmF2YU1v
ZGVsVGVzdHMuamF2YQk2IE9jdCAyMDEwIDE3OjMyOjMwIC0wMDAwCTEuMjQyDQorKysgc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0Fic3RyYWN0SmF2YU1vZGVsVGVzdHMuamF2
YQkxNyBGZWIgMjAxMSAxNToyODoxOSAtMDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBvcmF0
aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3Jh
dGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBh
bmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5k
ZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGlj
aCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAg
LTQwMiwxNiArNDAyLDI4IEBADQogCQlhZGRMaWJyYXJ5RW50cnkoamF2YVByb2plY3QsIG5ldyBQ
YXRoKGphclBhdGgpLCB0cnVlLypleHBvcnRlZCovKTsNCiAJfQ0KIAlwcm90ZWN0ZWQgdm9pZCBh
ZGRMaWJyYXJ5KFN0cmluZyBqYXJOYW1lLCBTdHJpbmcgc291cmNlWmlwTmFtZSwgU3RyaW5nW10g
cGF0aEFuZENvbnRlbnRzLCBTdHJpbmcgY29tcGxpYW5jZSkgdGhyb3dzIENvcmVFeGNlcHRpb24s
IElPRXhjZXB0aW9uIHsNCi0JCWFkZExpYnJhcnkodGhpcy5jdXJyZW50UHJvamVjdCwgamFyTmFt
ZSwgc291cmNlWmlwTmFtZSwgcGF0aEFuZENvbnRlbnRzLCBudWxsLypubyBub24tSmF2YSByZXNv
dXJjZXMqLywgbnVsbCwgbnVsbCwgY29tcGxpYW5jZSk7DQorCQlhZGRMaWJyYXJ5KHRoaXMuY3Vy
cmVudFByb2plY3QsIGphck5hbWUsIHNvdXJjZVppcE5hbWUsIHBhdGhBbmRDb250ZW50cywgbnVs
bC8qbm8gbm9uLUphdmEgcmVzb3VyY2VzKi8sIG51bGwsIG51bGwsIGNvbXBsaWFuY2UsIG51bGwp
Ow0KKwl9DQorCXByb3RlY3RlZCB2b2lkIGFkZExpYnJhcnkoSUphdmFQcm9qZWN0IGphdmFQcm9q
ZWN0LCBTdHJpbmcgamFyTmFtZSwgU3RyaW5nIHNvdXJjZVppcE5hbWUsIFN0cmluZ1tdIHBhdGhB
bmRDb250ZW50cywgU3RyaW5nIGNvbXBsaWFuY2UsIE1hcCBvcHRpb25zKSB0aHJvd3MgQ29yZUV4
Y2VwdGlvbiwgSU9FeGNlcHRpb24gew0KKwkJYWRkTGlicmFyeShqYXZhUHJvamVjdCwgamFyTmFt
ZSwgc291cmNlWmlwTmFtZSwgcGF0aEFuZENvbnRlbnRzLCBudWxsLypubyBub24tSmF2YSByZXNv
dXJjZXMqLywgbnVsbCwgbnVsbCwgY29tcGxpYW5jZSwgb3B0aW9ucyk7DQogCX0NCiAJcHJvdGVj
dGVkIHZvaWQgYWRkTGlicmFyeShJSmF2YVByb2plY3QgamF2YVByb2plY3QsIFN0cmluZyBqYXJO
YW1lLCBTdHJpbmcgc291cmNlWmlwTmFtZSwgU3RyaW5nW10gcGF0aEFuZENvbnRlbnRzLCBTdHJp
bmcgY29tcGxpYW5jZSkgdGhyb3dzIENvcmVFeGNlcHRpb24sIElPRXhjZXB0aW9uIHsNCi0JCWFk
ZExpYnJhcnkoamF2YVByb2plY3QsIGphck5hbWUsIHNvdXJjZVppcE5hbWUsIHBhdGhBbmRDb250
ZW50cywgbnVsbC8qbm8gbm9uLUphdmEgcmVzb3VyY2VzKi8sIG51bGwsIG51bGwsIGNvbXBsaWFu
Y2UpOw0KKwkJYWRkTGlicmFyeShqYXZhUHJvamVjdCwgamFyTmFtZSwgc291cmNlWmlwTmFtZSwg
cGF0aEFuZENvbnRlbnRzLCBudWxsLypubyBub24tSmF2YSByZXNvdXJjZXMqLywgbnVsbCwgbnVs
bCwgY29tcGxpYW5jZSwgbnVsbCk7DQogCX0NCiAJcHJvdGVjdGVkIHZvaWQgYWRkTGlicmFyeShJ
SmF2YVByb2plY3QgamF2YVByb2plY3QsIFN0cmluZyBqYXJOYW1lLCBTdHJpbmcgc291cmNlWmlw
TmFtZSwgU3RyaW5nW10gcGF0aEFuZENvbnRlbnRzLCBTdHJpbmdbXSBub25KYXZhUmVzb3VyY2Vz
LCBTdHJpbmcgY29tcGxpYW5jZSkgdGhyb3dzIENvcmVFeGNlcHRpb24sIElPRXhjZXB0aW9uIHsN
Ci0JCWFkZExpYnJhcnkoamF2YVByb2plY3QsIGphck5hbWUsIHNvdXJjZVppcE5hbWUsIHBhdGhB
bmRDb250ZW50cywgbm9uSmF2YVJlc291cmNlcywgbnVsbCwgbnVsbCwgY29tcGxpYW5jZSk7DQor
CQlhZGRMaWJyYXJ5KGphdmFQcm9qZWN0LCBqYXJOYW1lLCBzb3VyY2VaaXBOYW1lLCBwYXRoQW5k
Q29udGVudHMsIG5vbkphdmFSZXNvdXJjZXMsIG51bGwsIG51bGwsIGNvbXBsaWFuY2UsIG51bGwp
Ow0KIAl9DQotCXByb3RlY3RlZCB2b2lkIGFkZExpYnJhcnkoSUphdmFQcm9qZWN0IGphdmFQcm9q
ZWN0LCBTdHJpbmcgamFyTmFtZSwgU3RyaW5nIHNvdXJjZVppcE5hbWUsIFN0cmluZ1tdIHBhdGhB
bmRDb250ZW50cywgU3RyaW5nW10gbm9uSmF2YVJlc291cmNlcywgU3RyaW5nW10gbGlicmFyaWVz
SW5jbHVzaW9uUGF0dGVybnMsIFN0cmluZ1tdIGxpYnJhcmllc0V4Y2x1c2lvblBhdHRlcm5zLCBT
dHJpbmcgY29tcGxpYW5jZSkgdGhyb3dzIENvcmVFeGNlcHRpb24sIElPRXhjZXB0aW9uIHsNCi0J
CUlQcm9qZWN0IHByb2plY3QgPSBjcmVhdGVMaWJyYXJ5KGphdmFQcm9qZWN0LCBqYXJOYW1lLCBz
b3VyY2VaaXBOYW1lLCBwYXRoQW5kQ29udGVudHMsIG5vbkphdmFSZXNvdXJjZXMsIGNvbXBsaWFu
Y2UpOw0KKwlwcm90ZWN0ZWQgdm9pZCBhZGRMaWJyYXJ5KA0KKwkJCUlKYXZhUHJvamVjdCBqYXZh
UHJvamVjdCwNCisJCQlTdHJpbmcgamFyTmFtZSwNCisJCQlTdHJpbmcgc291cmNlWmlwTmFtZSwN
CisJCQlTdHJpbmdbXSBwYXRoQW5kQ29udGVudHMsDQorCQkJU3RyaW5nW10gbm9uSmF2YVJlc291
cmNlcywNCisJCQlTdHJpbmdbXSBsaWJyYXJpZXNJbmNsdXNpb25QYXR0ZXJucywNCisJCQlTdHJp
bmdbXSBsaWJyYXJpZXNFeGNsdXNpb25QYXR0ZXJucywNCisJCQlTdHJpbmcgY29tcGxpYW5jZSwN
CisJCQlNYXAgb3B0aW9ucykgdGhyb3dzIENvcmVFeGNlcHRpb24sIElPRXhjZXB0aW9uIHsNCisJ
CUlQcm9qZWN0IHByb2plY3QgPSBjcmVhdGVMaWJyYXJ5KGphdmFQcm9qZWN0LCBqYXJOYW1lLCBz
b3VyY2VaaXBOYW1lLCBwYXRoQW5kQ29udGVudHMsIG5vbkphdmFSZXNvdXJjZXMsIGNvbXBsaWFu
Y2UsIG9wdGlvbnMpOw0KIAkJU3RyaW5nIHByb2plY3RQYXRoID0gJy8nICsgcHJvamVjdC5nZXRO
YW1lKCkgKyAnLyc7DQogCQlhZGRMaWJyYXJ5RW50cnkoDQogCQkJamF2YVByb2plY3QsDQpAQCAt
NDIzLDEzICs0MzUsMjkgQEANCiAJCQl0cnVlDQogCQkpOw0KIAl9DQotDQotCXByb3RlY3RlZCBJ
UHJvamVjdCBjcmVhdGVMaWJyYXJ5KElKYXZhUHJvamVjdCBqYXZhUHJvamVjdCwgU3RyaW5nIGph
ck5hbWUsIFN0cmluZyBzb3VyY2VaaXBOYW1lLCBTdHJpbmdbXSBwYXRoQW5kQ29udGVudHMsIFN0
cmluZ1tdIG5vbkphdmFSZXNvdXJjZXMsIFN0cmluZyBjb21wbGlhbmNlKSB0aHJvd3MgSU9FeGNl
cHRpb24sIENvcmVFeGNlcHRpb24gew0KKwlwcm90ZWN0ZWQgSVByb2plY3QgY3JlYXRlTGlicmFy
eSgNCisJCQlJSmF2YVByb2plY3QgamF2YVByb2plY3QsDQorCQkJU3RyaW5nIGphck5hbWUsDQor
CQkJU3RyaW5nIHNvdXJjZVppcE5hbWUsDQorCQkJU3RyaW5nW10gcGF0aEFuZENvbnRlbnRzLA0K
KwkJCVN0cmluZ1tdIG5vbkphdmFSZXNvdXJjZXMsDQorCQkJU3RyaW5nIGNvbXBsaWFuY2UpIHRo
cm93cyBJT0V4Y2VwdGlvbiwgQ29yZUV4Y2VwdGlvbiB7DQorCQlyZXR1cm4gY3JlYXRlTGlicmFy
eShqYXZhUHJvamVjdCwgamFyTmFtZSwgc291cmNlWmlwTmFtZSwgcGF0aEFuZENvbnRlbnRzLCBu
b25KYXZhUmVzb3VyY2VzLCBjb21wbGlhbmNlLCBudWxsKTsNCisJfQ0KKw0KKwlwcm90ZWN0ZWQg
SVByb2plY3QgY3JlYXRlTGlicmFyeSgNCisJCQlJSmF2YVByb2plY3QgamF2YVByb2plY3QsDQor
CQkJU3RyaW5nIGphck5hbWUsDQorCQkJU3RyaW5nIHNvdXJjZVppcE5hbWUsDQorCQkJU3RyaW5n
W10gcGF0aEFuZENvbnRlbnRzLA0KKwkJCVN0cmluZ1tdIG5vbkphdmFSZXNvdXJjZXMsDQorCQkJ
U3RyaW5nIGNvbXBsaWFuY2UsDQorCQkJTWFwIG9wdGlvbnMpIHRocm93cyBJT0V4Y2VwdGlvbiwg
Q29yZUV4Y2VwdGlvbiB7DQogCQlJUHJvamVjdCBwcm9qZWN0ID0gamF2YVByb2plY3QuZ2V0UHJv
amVjdCgpOw0KIAkJU3RyaW5nIHByb2plY3RMb2NhdGlvbiA9IHByb2plY3QuZ2V0TG9jYXRpb24o
KS50b09TU3RyaW5nKCk7DQogCQlTdHJpbmcgamFyUGF0aCA9IHByb2plY3RMb2NhdGlvbiArIEZp
bGUuc2VwYXJhdG9yICsgamFyTmFtZTsNCiAJCVN0cmluZ1tdIGNsYXNwYXRoID0gZ2V0MTVMaWJy
YXJ5SWZOZWVkZWQoY29tcGxpYW5jZSk7DQotCQlvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy51
dGlsLlV0aWwuY3JlYXRlSmFyKHBhdGhBbmRDb250ZW50cywgbm9uSmF2YVJlc291cmNlcywgamFy
UGF0aCwgY2xhc3BhdGgsIGNvbXBsaWFuY2UpOw0KKwkJb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMudXRpbC5VdGlsLmNyZWF0ZUphcihwYXRoQW5kQ29udGVudHMsIG5vbkphdmFSZXNvdXJjZXMs
IGphclBhdGgsIGNsYXNwYXRoLCBjb21wbGlhbmNlLCBvcHRpb25zKTsNCiAJCWlmIChwYXRoQW5k
Q29udGVudHMgIT0gbnVsbCAmJiBwYXRoQW5kQ29udGVudHMubGVuZ3RoICE9IDApIHsNCiAJCQlT
dHJpbmcgc291cmNlWmlwUGF0aCA9IHByb2plY3RMb2NhdGlvbiArIEZpbGUuc2VwYXJhdG9yICsg
c291cmNlWmlwTmFtZTsNCiAJCQlvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy51dGlsLlV0aWwu
Y3JlYXRlU291cmNlWmlwKHBhdGhBbmRDb250ZW50cywgc291cmNlWmlwUGF0aCk7DQpAQCAtMTE1
OSw2ICsxMTg3LDEwIEBADQogCQlvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy51dGlsLlV0aWwu
Y3JlYXRlSmFyKGphdmFQYXRoc0FuZENvbnRlbnRzLCBudWxsLGphclBhdGgsIGNsYXNzcGF0aCwg
Y29tcGxpYW5jZSk7DQogCX0NCiANCisJcHJvdGVjdGVkIHZvaWQgY3JlYXRlSmFyKFN0cmluZ1td
IGphdmFQYXRoc0FuZENvbnRlbnRzLCBTdHJpbmcgamFyUGF0aCwgU3RyaW5nW10gY2xhc3NwYXRo
LCBTdHJpbmcgY29tcGxpYW5jZSwgTWFwIG9wdGlvbnMpIHRocm93cyBJT0V4Y2VwdGlvbiB7DQor
CQlvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy51dGlsLlV0aWwuY3JlYXRlSmFyKGphdmFQYXRo
c0FuZENvbnRlbnRzLCBudWxsLCBqYXJQYXRoLCBjbGFzc3BhdGgsIGNvbXBsaWFuY2UsIG9wdGlv
bnMpOw0KKwl9DQorCQ0KIAkvKg0KIAl9DQogCSAqIENyZWF0ZXMgYSBKYXZhIHByb2plY3Qgd2hl
cmUgcHJqPXNyYz1iaW4gYW5kIHdpdGggSkNMX0xJQiBvbiBpdHMgY2xhc3NwYXRoLg0KSW5kZXg6
IHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9NZW1lbnRvVGVzdHMuamF2YQ0K
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL01lbWVu
dG9UZXN0cy5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4zMA0KZGlmZiAtdSAtcjEuMzAg
TWVtZW50b1Rlc3RzLmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9k
ZWwvTWVtZW50b1Rlc3RzLmphdmEJMjIgRGVjIDIwMTAgMDU6NTY6NTYgLTAwMDAJMS4zMA0KKysr
IHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9NZW1lbnRvVGVzdHMuamF2YQkx
NyBGZWIgMjAxMSAxNToyODoxOSAtMDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBvcmF0aW9u
IGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlv
biBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQg
dGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIg
dGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBh
Y2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTE3
LDYgKzE3LDcgQEANCiBpbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLlBhdGg7DQogaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLio7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLnV0aWwuVXRpbDsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUu
QW5ub3RhdGlvbjsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuSmF2YUVs
ZW1lbnQ7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkxvY2FsVmFyaWFi
bGU7DQogDQpAQCAtNDg2LDcgKzQ4Nyw3IEBADQogCUlUeXBlIHR5cGUgPSBnZXRDb21waWxhdGlv
blVuaXQoIi9QL3NyYy9wL1guamF2YSIpLmdldFR5cGUoIlgiKTsNCiAJSU1ldGhvZCBtZXRob2Qg
PSB0eXBlLmdldE1ldGhvZCgiZm9vIiwgbmV3IFN0cmluZ1tde30pOw0KIA0KLQlJTG9jYWxWYXJp
YWJsZSBsb2NhbFZhciA9IG5ldyBMb2NhbFZhcmlhYmxlKChKYXZhRWxlbWVudCltZXRob2QsICJ2
YXIiLCAxLCAyLCAzLCA0LCAiWiIsIG51bGwsIDAsIHRydWUpOw0KKwlJTG9jYWxWYXJpYWJsZSBs
b2NhbFZhciA9IG5ldyBMb2NhbFZhcmlhYmxlKChKYXZhRWxlbWVudCltZXRob2QsICJ2YXIiLCAx
LCAyLCAzLCA0LCAiWiIsIEFubm90YXRpb24uTk9fQU5OT1RBVElPTlMsIDAsIHRydWUpOw0KIAlh
c3NlcnRNZW1lbnRvKA0KIAkJIj1QL3NyYzxwe1guamF2YVtYfmZvb0B2YXIhMSEyITMhNCFaITAh
dHJ1ZSIsDQogCQlsb2NhbFZhcik7DQpAQCAtNDk4LDcgKzQ5OSw3IEBADQogCUlUeXBlIHR5cGUg
PSBnZXRDbGFzc0ZpbGUoIi9QL3NyYy9wL1guY2xhc3MiKS5nZXRUeXBlKCk7DQogCUlNZXRob2Qg
bWV0aG9kID0gdHlwZS5nZXRNZXRob2QoImZvbyIsIG5ldyBTdHJpbmdbXXsiSSJ9KTsNCiANCi0J
SUxvY2FsVmFyaWFibGUgbG9jYWxWYXIgPSBuZXcgTG9jYWxWYXJpYWJsZSgoSmF2YUVsZW1lbnQp
bWV0aG9kLCAidmFyIiwgMSwgMiwgMywgNCwgIloiLCBudWxsLDAsIGZhbHNlKTsNCisJSUxvY2Fs
VmFyaWFibGUgbG9jYWxWYXIgPSBuZXcgTG9jYWxWYXJpYWJsZSgoSmF2YUVsZW1lbnQpbWV0aG9k
LCAidmFyIiwgMSwgMiwgMywgNCwgIloiLCBBbm5vdGF0aW9uLk5PX0FOTk9UQVRJT05TLDAsIGZh
bHNlKTsNCiAJYXNzZXJ0TWVtZW50bygNCiAJCSI9UC9zcmM8cChYLmNsYXNzW1h+Zm9vfklAdmFy
ITEhMiEzITQhWiEwIWZhbHNlIiwNCiAJCWxvY2FsVmFyKTsNCkBAIC01MTAsNyArNTExLDcgQEAN
CiAJSVR5cGUgdHlwZSA9IGdldENvbXBpbGF0aW9uVW5pdCgiL1Avc3JjL3AvWC5qYXZhIikuZ2V0
VHlwZSgiWCIpOw0KIAlJSW5pdGlhbGl6ZXIgaW5pdGlhbGl6ZXIgPSB0eXBlLmdldEluaXRpYWxp
emVyKDEpOw0KIA0KLQlJTG9jYWxWYXJpYWJsZSBsb2NhbFZhciA9IG5ldyBMb2NhbFZhcmlhYmxl
KChKYXZhRWxlbWVudClpbml0aWFsaXplciwgInZhciIsIDEsIDIsIDMsIDQsICJaIiwgbnVsbCwg
MCwgZmFsc2UpOw0KKwlJTG9jYWxWYXJpYWJsZSBsb2NhbFZhciA9IG5ldyBMb2NhbFZhcmlhYmxl
KChKYXZhRWxlbWVudClpbml0aWFsaXplciwgInZhciIsIDEsIDIsIDMsIDQsICJaIiwgQW5ub3Rh
dGlvbi5OT19BTk5PVEFUSU9OUywgMCwgZmFsc2UpOw0KIAlhc3NlcnRNZW1lbnRvKA0KIAkJIj1Q
L3NyYzxwe1guamF2YVtYfDFAdmFyITEhMiEzITQhWiEwIWZhbHNlIiwNCiAJCWxvY2FsVmFyKTsN
CkluZGV4OiBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvUmVjb25jaWxlclRl
c3RzLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9t
b2RlbC9SZWNvbmNpbGVyVGVzdHMuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTY0DQpk
aWZmIC11IC1yMS4xNjQgUmVjb25jaWxlclRlc3RzLmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvbW9kZWwvUmVjb25jaWxlclRlc3RzLmphdmEJMyBEZWMgMjAxMCAwODo0
NDozMSAtMDAwMAkxLjE2NA0KKysrIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2Rl
bC9SZWNvbmNpbGVyVGVzdHMuamF2YQkxNyBGZWIgMjAxMSAxNToyODoxOSAtMDAwMA0KQEAgLTEs
NSArMSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIw
MDAsIDIwMTAgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAy
MDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVz
ZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBh
cmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBM
aWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5k
IGlzIGF2YWlsYWJsZSBhdA0KQEAgLTM1Niw3ICszNTYsOCBAQA0KIAkJCQkiKiovKiINCiAJCQl9
LA0KIAkJCW51bGwsIA0KLQkJCSIxLjQiDQorCQkJIjEuNCIsDQorCQkJbnVsbA0KIAkJKTsNCiAJ
CWNyZWF0ZUphdmFQcm9qZWN0KCJQMiIsIG5ldyBTdHJpbmdbXSB7InNyYyJ9LCBuZXcgU3RyaW5n
W10geyJKQ0xfTElCIn0sIG5ldyBTdHJpbmdbXSB7Ii9QMSJ9LCAiYmluIik7DQogCQlzZXRVcFdv
cmtpbmdDb3B5KCIvUDIvc3JjL1kuamF2YSIsICJwdWJsaWMgY2xhc3MgWSBleHRlbmRzIHAuWCB7
fSIpOw0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9TZWFyY2hU
ZXN0cy5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
bW9kZWwvU2VhcmNoVGVzdHMuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNTQNCmRpZmYg
LXUgLXIxLjU0IFNlYXJjaFRlc3RzLmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvbW9kZWwvU2VhcmNoVGVzdHMuamF2YQkxNCBKYW4gMjAxMSAxNzowMjoyMiAtMDAwMAkx
LjU0DQorKysgc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL1NlYXJjaFRlc3Rz
LmphdmEJMTcgRmViIDIwMTEgMTU6Mjg6MTkgLTAwMDANCkBAIC0yMyw2ICsyMyw3IEBADQogaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnNlYXJjaC4qOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5tb2RlbC5TZW1hcGhvcmUuVGltZU91dEV4Y2VwdGlvbjsNCiBpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMudXRpbC5VdGlsOw0KK2ltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29yZS5Bbm5vdGF0aW9uOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29yZS5KYXZhRWxlbWVudDsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvcmUuSmF2YU1vZGVsTWFuYWdlcjsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvcmUuTG9jYWxWYXJpYWJsZTsNCkBAIC05MTMsNyArOTE0LDE3IEBADQogICogVGVzdCBM
b2NhbFZhckRlY2xhcmF0aW9uUGF0dGVybiBjcmVhdGlvbg0KICAqLw0KIHB1YmxpYyB2b2lkIHRl
c3RTZWFyY2hQYXR0ZXJuQ3JlYXRpb24zMCgpIHsNCi0JSUxvY2FsVmFyaWFibGUgbG9jYWxWYXIg
PSBuZXcgTG9jYWxWYXJpYWJsZSgoSmF2YUVsZW1lbnQpZ2V0Q29tcGlsYXRpb25Vbml0KCIvUC9Y
LmphdmEiKS5nZXRUeXBlKCJYIikuZ2V0TWV0aG9kKCJmb28iLCBuZXcgU3RyaW5nWzBdKSwgICJ2
YXIiLCAxLCAyLCAzLCA0LCAiWiIsIG51bGwsIDAsIGZhbHNlKTsNCisJSUxvY2FsVmFyaWFibGUg
bG9jYWxWYXIgPSBuZXcgTG9jYWxWYXJpYWJsZSgNCisJCQkoSmF2YUVsZW1lbnQpZ2V0Q29tcGls
YXRpb25Vbml0KCIvUC9YLmphdmEiKS5nZXRUeXBlKCJYIikuZ2V0TWV0aG9kKCJmb28iLCBuZXcg
U3RyaW5nWzBdKSwNCisJCQkidmFyIiwNCisJCQkxLA0KKwkJCTIsDQorCQkJMywNCisJCQk0LA0K
KwkJCSJaIiwNCisJCQlBbm5vdGF0aW9uLk5PX0FOTk9UQVRJT05TLA0KKwkJCTAsDQorCQkJZmFs
c2UpOw0KIAlTZWFyY2hQYXR0ZXJuIHNlYXJjaFBhdHRlcm4gPSBjcmVhdGVQYXR0ZXJuKA0KIAkJ
CWxvY2FsVmFyLA0KIAkJCUlKYXZhU2VhcmNoQ29uc3RhbnRzLkRFQ0xBUkFUSU9OUyk7DQpAQCAt
OTI3LDcgKzkzOCwxNyBAQA0KICAqIFRlc3QgTG9jYWxWYXJSZWZlcmVuY2VQYXR0ZXJuIGNyZWF0
aW9uDQogICovDQogcHVibGljIHZvaWQgdGVzdFNlYXJjaFBhdHRlcm5DcmVhdGlvbjMxKCkgew0K
LQlJTG9jYWxWYXJpYWJsZSBsb2NhbFZhciA9IG5ldyBMb2NhbFZhcmlhYmxlKChKYXZhRWxlbWVu
dClnZXRDb21waWxhdGlvblVuaXQoIi9QL1guamF2YSIpLmdldFR5cGUoIlgiKS5nZXRNZXRob2Qo
ImZvbyIsIG5ldyBTdHJpbmdbMF0pLCAgInZhciIsIDEsIDIsIDMsIDQsICJaIiwgbnVsbCwgMCwg
ZmFsc2UpOw0KKwlJTG9jYWxWYXJpYWJsZSBsb2NhbFZhciA9IG5ldyBMb2NhbFZhcmlhYmxlKA0K
KwkJCShKYXZhRWxlbWVudClnZXRDb21waWxhdGlvblVuaXQoIi9QL1guamF2YSIpLmdldFR5cGUo
IlgiKS5nZXRNZXRob2QoImZvbyIsIG5ldyBTdHJpbmdbMF0pLA0KKwkJCSJ2YXIiLA0KKwkJCTEs
DQorCQkJMiwNCisJCQkzLA0KKwkJCTQsDQorCQkJIloiLA0KKwkJCUFubm90YXRpb24uTk9fQU5O
T1RBVElPTlMsDQorCQkJMCwNCisJCQlmYWxzZSk7DQogCVNlYXJjaFBhdHRlcm4gc2VhcmNoUGF0
dGVybiA9IGNyZWF0ZVBhdHRlcm4oDQogCQkJbG9jYWxWYXIsDQogCQkJSUphdmFTZWFyY2hDb25z
dGFudHMuUkVGRVJFTkNFUyk7DQpAQCAtOTQxLDcgKzk2MiwxNyBAQA0KICAqIFRlc3QgTG9jYWxW
YXJDb21iaW5lZFBhdHRlcm4gY3JlYXRpb24NCiAgKi8NCiBwdWJsaWMgdm9pZCB0ZXN0U2VhcmNo
UGF0dGVybkNyZWF0aW9uMzIoKSB7DQotCUlMb2NhbFZhcmlhYmxlIGxvY2FsVmFyID0gbmV3IExv
Y2FsVmFyaWFibGUoKEphdmFFbGVtZW50KWdldENvbXBpbGF0aW9uVW5pdCgiL1AvWC5qYXZhIiku
Z2V0VHlwZSgiWCIpLmdldE1ldGhvZCgiZm9vIiwgbmV3IFN0cmluZ1swXSksICAidmFyIiwgMSwg
MiwgMywgNCwgIloiLCBudWxsLCAwLCBmYWxzZSk7DQorCUlMb2NhbFZhcmlhYmxlIGxvY2FsVmFy
ID0gbmV3IExvY2FsVmFyaWFibGUoDQorCQkJKEphdmFFbGVtZW50KWdldENvbXBpbGF0aW9uVW5p
dCgiL1AvWC5qYXZhIikuZ2V0VHlwZSgiWCIpLmdldE1ldGhvZCgiZm9vIiwgbmV3IFN0cmluZ1sw
XSksDQorCQkJInZhciIsDQorCQkJMSwNCisJCQkyLA0KKwkJCTMsDQorCQkJNCwNCisJCQkiWiIs
DQorCQkJQW5ub3RhdGlvbi5OT19BTk5PVEFUSU9OUywNCisJCQkwLA0KKwkJCWZhbHNlKTsNCiAJ
U2VhcmNoUGF0dGVybiBzZWFyY2hQYXR0ZXJuID0gY3JlYXRlUGF0dGVybigNCiAJCQlsb2NhbFZh
ciwNCiAJCQlJSmF2YVNlYXJjaENvbnN0YW50cy5BTExfT0NDVVJSRU5DRVMpOw0KSW5kZXg6IHNy
Yy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9UeXBlUmVzb2x2ZVRlc3RzLmphdmEN
Cj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9UeXBl
UmVzb2x2ZVRlc3RzLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjE0DQpkaWZmIC11IC1y
MS4xNCBUeXBlUmVzb2x2ZVRlc3RzLmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvbW9kZWwvVHlwZVJlc29sdmVUZXN0cy5qYXZhCTI3IEp1biAyMDA4IDE2OjAyOjQwIC0w
MDAwCTEuMTQNCisrKyBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvVHlwZVJl
c29sdmVUZXN0cy5qYXZhCTE3IEZlYiAyMDExIDE1OjI4OjE5IC0wMDAwDQpAQCAtMSw1ICsxLDUg
QEANCiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAw
OCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIw
MTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4g
VGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRl
IGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2Ug
djEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZh
aWxhYmxlIGF0DQpAQCAtMTAsOSArMTAsMTQgQEANCiAgKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8N
CiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsOw0KIA0KK2ltcG9ydCBq
YXZhLmlvLklPRXhjZXB0aW9uOw0KK2ltcG9ydCBqYXZhLnV0aWwuSGFzaE1hcDsNCitpbXBvcnQg
amF2YS51dGlsLk1hcDsNCisNCiBpbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLkNvcmVF
eGNlcHRpb247DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLio7DQogaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLnV0aWwuVXRpbDsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvcmUuTG9jYWxWYXJpYWJsZTsNCiANCiBpbXBvcnQganVuaXQuZnJhbWV3b3Jr
LlRlc3Q7DQogDQpAQCAtOTUsNyArMTAwLDcgQEANCiB9DQogCXN0YXRpYyB7DQogLy8JCVRFU1RT
X05VTUJFUlMgPSBuZXcgaW50W10geyAxODIsIDE4MyB9Ow0KLS8vCQlURVNUU19OQU1FUyA9IG5l
dyBTdHJpbmdbXSB7InRlc3QwMTc3In07DQorLy8JCVRFU1RTX05BTUVTID0gbmV3IFN0cmluZ1td
IHsgInRlc3RQYXJhbUFubm90YXRpb25zNSIgfTsNCiAJfQ0KIAlwdWJsaWMgc3RhdGljIFRlc3Qg
c3VpdGUoKSB7DQogCQlyZXR1cm4gYnVpbGRNb2RlbFRlc3RTdWl0ZShUeXBlUmVzb2x2ZVRlc3Rz
LmNsYXNzKTsNCkBAIC0yOTksNCArMzA0LDMxMCBAQA0KIAkJInA0LkEuSW5uZXIiLA0KIAkJdHlw
ZXMpOw0KIH0NCisvKioNCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9z
aG93X2J1Zy5jZ2k/aWQ9MzM0NzgzIg0KKyAqLw0KK3B1YmxpYyB2b2lkIHRlc3RQYXJhbUFubm90
YXRpb25zKCkgdGhyb3dzIENvcmVFeGNlcHRpb24gew0KKwl0cnkgew0KKwkJY3JlYXRlSmF2YVBy
b2plY3QoIlAiLCBuZXcgU3RyaW5nW10geyJzcmMifSwgbmV3IFN0cmluZ1tdIHsiSkNMMTVfTElC
In0sICJiaW4iLCAiMS41Iik7DQorCQlTdHJpbmcgc291cmNlID0gInBhY2thZ2UgcDtcbiIgKw0K
KwkJCQkicHVibGljIGNsYXNzIFg8VD4ge1xuIiArDQorCQkJCSIgIFg8U3RyaW5nPiBmaWVsZDtc
biIgKw0KKwkJCQkiCUBJbmplY3RcbiIgKw0KKwkJCQkiCXB1YmxpYyB2b2lkIFRlc3QoQERlZmF1
bHQgU3RyaW5nIHByb2Nlc3Nvcikge31cbiIgKw0KKwkJCQkifSIgKw0KKwkJCQkiQGludGVyZmFj
ZSBJbmplY3R7XG4iICsNCisJCQkJIn0iICsNCisJCQkJIkBpbnRlcmZhY2UgRGVmYXVsdHtcbiIg
Kw0KKwkJCQkifSI7DQorCQljcmVhdGVGb2xkZXIoIi9QL3NyYy9wIik7DQorCQljcmVhdGVGaWxl
KA0KKwkJCSIvUC9zcmMvcC9YLmphdmEiLA0KKwkJCXNvdXJjZQ0KKwkJKTsNCisJCXdhaXRGb3JB
dXRvQnVpbGQoKTsNCisJCQ0KKwkJSUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gZ2V0Q29tcGlsYXRp
b25Vbml0KCIvUC9zcmMvcC9YLmphdmEiKTsgDQorCQlJSmF2YUVsZW1lbnRbXSB2YXJpYWJsZSA9
ICgoSUNvZGVBc3Npc3QpIHVuaXQpLmNvZGVTZWxlY3Qoc291cmNlLmluZGV4T2YoInByb2Nlc3Nv
ciIpLCAicHJvY2Vzc29yIi5sZW5ndGgoKSk7DQorDQorCQlhc3NlcnRFcXVhbHMoMSwgdmFyaWFi
bGUubGVuZ3RoKTsNCisJCVN0cmluZyBhbm5vdGF0aW9uU3RyaW5nID0gIkBEZWZhdWx0IFtpbiBw
cm9jZXNzb3IgW2luIFRlc3QoU3RyaW5nKSBbaW4gWCBbaW4gWC5qYXZhIFtpbiBwIFtpbiBzcmMg
W2luIFBdXV1dXV1dIjsNCisJCWFzc2VydEVxdWFscyhhbm5vdGF0aW9uU3RyaW5nLCAoKExvY2Fs
VmFyaWFibGUpdmFyaWFibGVbMF0pLmdldEFubm90YXRpb25zKClbMF0udG9TdHJpbmcoKSk7DQor
CQlJVHlwZSB0eXBlID0gdW5pdC5nZXRUeXBlKCJYIik7DQorCQkNCisJCUlNZXRob2QgbWV0aG9k
ID0gdHlwZS5nZXRNZXRob2RzKClbMF07DQorCQlhc3NlcnRFcXVhbHMoYW5ub3RhdGlvblN0cmlu
ZywgbWV0aG9kLmdldFBhcmFtZXRlcnMoKVswXS5nZXRBbm5vdGF0aW9ucygpWzBdLnRvU3RyaW5n
KCkpOw0KKwl9IGZpbmFsbHkgew0KKwkJZGVsZXRlUHJvamVjdCgiUCIpOw0KKwl9DQorfQ0KKy8q
Kg0KKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9p
ZD0zMzQ3ODMiDQorICovDQorcHVibGljIHZvaWQgdGVzdFBhcmFtQW5ub3RhdGlvbnMyKCkgdGhy
b3dzIENvcmVFeGNlcHRpb24sIElPRXhjZXB0aW9uIHsNCisJdHJ5IHsNCisJCUlKYXZhUHJvamVj
dCBwcm9qZWN0ID0gY3JlYXRlSmF2YVByb2plY3QoIlAiLCBuZXcgU3RyaW5nW10geyJzcmMifSwg
bmV3IFN0cmluZ1tdIHsiSkNMMTVfTElCIn0sICJiaW4iLCAiMS41Iik7DQorCQlTdHJpbmdbXSBw
YXRoQW5kQ29udGVudHMgPSBuZXcgU3RyaW5nW117InAvWC5qYXZhIiwNCisJCQkJInBhY2thZ2Ug
cDtcbiIgKw0KKwkJCQkicHVibGljIGNsYXNzIFg8VD4ge1xuIiArDQorCQkJCSIgIFg8U3RyaW5n
PiBmaWVsZDtcbiIgKw0KKwkJCQkiCUBJbmplY3RcbiIgKw0KKwkJCQkiCXB1YmxpYyB2b2lkIFRl
c3QoQERlZmF1bHQgU3RyaW5nIHByb2Nlc3Nvcikge31cbiIgKw0KKwkJCQkifSIgKw0KKwkJCQki
QGludGVyZmFjZSBJbmplY3R7XG4iICsNCisJCQkJIn0iICsNCisJCQkJIkBpbnRlcmZhY2UgRGVm
YXVsdHtcbiIgKw0KKwkJCQkifSJ9Ow0KKwkJYWRkTGlicmFyeShwcm9qZWN0LCAibGliMzM0Nzgz
LmphciIsICJsaWJzcmMuemlwIiwgcGF0aEFuZENvbnRlbnRzLCBKYXZhQ29yZS5WRVJTSU9OXzFf
NSk7DQorCQkNCisJCXdhaXRGb3JBdXRvQnVpbGQoKTsNCisJCUlQYWNrYWdlRnJhZ21lbnRSb290
IHJvb3QgPSBwcm9qZWN0LmdldFBhY2thZ2VGcmFnbWVudFJvb3QoZ2V0RmlsZSgiL1AvbGliMzM0
NzgzLmphciIpKTsNCisJCUlUeXBlIHR5cGUgPSByb290LmdldFBhY2thZ2VGcmFnbWVudCgicCIp
LmdldENsYXNzRmlsZSgiWC5jbGFzcyIpLmdldFR5cGUoKTsNCisJCVN0cmluZyBhbm5vdGF0aW9u
U3RyaW5nID0gIkBwLkRlZmF1bHQgW2luIFRlc3QoamF2YS5sYW5nLlN0cmluZykgW2luIFggW2lu
IFguY2xhc3MgW2luIHAgW2luIGxpYjMzNDc4My5qYXIgW2luIFBdXV1dXV0iOw0KKwkJDQorCQlJ
TWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kcygpWzFdOw0KKwkJYXNzZXJ0RXF1YWxzKGFu
bm90YXRpb25TdHJpbmcsIG1ldGhvZC5nZXRQYXJhbWV0ZXJzKClbMF0uZ2V0QW5ub3RhdGlvbnMo
KVswXS50b1N0cmluZygpKTsNCisJfSBmaW5hbGx5IHsNCisJCWRlbGV0ZVByb2plY3QoIlAiKTsN
CisJfQ0KK30NCisvKioNCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9z
aG93X2J1Zy5jZ2k/aWQ9MzM0NzgzIg0KKyAqLw0KK3B1YmxpYyB2b2lkIHRlc3RQYXJhbUFubm90
YXRpb25zMygpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsNCisJdHJ5IHsNCisJCWNyZWF0ZUphdmFQ
cm9qZWN0KCJQIiwgbmV3IFN0cmluZ1tdIHsic3JjIn0sIG5ldyBTdHJpbmdbXSB7IkpDTDE1X0xJ
QiJ9LCAiYmluIiwgIjEuNSIpOw0KKwkJU3RyaW5nIHNvdXJjZSA9ICJwYWNrYWdlIHA7XG4iICsN
CisJCQkJInB1YmxpYyBjbGFzcyBYPFQ+IHtcbiIgKw0KKwkJCQkiICBYPFN0cmluZz4gZmllbGQ7
XG4iICsNCisJCQkJIglASW5qZWN0XG4iICsNCisJCQkJIglwdWJsaWMgdm9pZCBUZXN0KGludCBp
LCBARGVmYXVsdCBATWFya2VyKGlkPTEpIFN0cmluZyBwcm9jZXNzb3IsIGludCBrKSB7fVxuIiAr
DQorCQkJCSJ9XG4iICsNCisJCQkJIkBpbnRlcmZhY2UgSW5qZWN0e1xuIiArDQorCQkJCSJ9XG4i
ICsNCisJCQkJIkBpbnRlcmZhY2UgTWFya2VyIHtcbiIgKw0KKwkJCQkiCWludCBpZCgpIGRlZmF1
bHQgMDtcbiIgKw0KKwkJCQkifVxuIiArDQorCQkJCSJAaW50ZXJmYWNlIERlZmF1bHR7XG4iICsN
CisJCQkJIn0iOw0KKwkJY3JlYXRlRm9sZGVyKCIvUC9zcmMvcCIpOw0KKwkJY3JlYXRlRmlsZSgN
CisJCQkiL1Avc3JjL3AvWC5qYXZhIiwNCisJCQlzb3VyY2UNCisJCSk7DQorCQl3YWl0Rm9yQXV0
b0J1aWxkKCk7DQorCQkNCisJCUlDb21waWxhdGlvblVuaXQgdW5pdCA9IGdldENvbXBpbGF0aW9u
VW5pdCgiL1Avc3JjL3AvWC5qYXZhIik7IA0KKwkJSUphdmFFbGVtZW50W10gdmFyaWFibGUgPSAo
KElDb2RlQXNzaXN0KSB1bml0KS5jb2RlU2VsZWN0KHNvdXJjZS5pbmRleE9mKCJwcm9jZXNzb3Ii
KSwgInByb2Nlc3NvciIubGVuZ3RoKCkpOw0KKw0KKwkJYXNzZXJ0RXF1YWxzKDEsIHZhcmlhYmxl
Lmxlbmd0aCk7DQorCQlTdHJpbmcgYW5ub3RhdGlvblN0cmluZzEgPSAiQERlZmF1bHQgW2luIHBy
b2Nlc3NvciBbaW4gVGVzdChpbnQsIFN0cmluZywgaW50KSBbaW4gWCBbaW4gWC5qYXZhIFtpbiBw
IFtpbiBzcmMgW2luIFBdXV1dXV1dIjsNCisJCVN0cmluZyBhbm5vdGF0aW9uU3RyaW5nMiA9ICJA
TWFya2VyIFtpbiBwcm9jZXNzb3IgW2luIFRlc3QoaW50LCBTdHJpbmcsIGludCkgW2luIFggW2lu
IFguamF2YSBbaW4gcCBbaW4gc3JjIFtpbiBQXV1dXV1dXSI7DQorCQlhc3NlcnRFcXVhbHMoYW5u
b3RhdGlvblN0cmluZzEsICgoTG9jYWxWYXJpYWJsZSl2YXJpYWJsZVswXSkuZ2V0QW5ub3RhdGlv
bnMoKVswXS50b1N0cmluZygpKTsNCisJCUlUeXBlIHR5cGUgPSB1bml0LmdldFR5cGUoIlgiKTsN
CisJCQ0KKwkJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhvZHMoKVswXTsNCisJCUlBbm5v
dGF0aW9uW10gcGFyYW1ldGVyQW5ub3RhdGlvbnMgPSBtZXRob2QuZ2V0UGFyYW1ldGVycygpWzFd
LmdldEFubm90YXRpb25zKCk7DQorCQlhc3NlcnRFcXVhbHMoIldyb25nIGxlbmd0aCIsIDIsIHBh
cmFtZXRlckFubm90YXRpb25zLmxlbmd0aCk7DQorCQlhc3NlcnRFcXVhbHMoYW5ub3RhdGlvblN0
cmluZzEsIHBhcmFtZXRlckFubm90YXRpb25zWzBdLnRvU3RyaW5nKCkpOw0KKwkJSUFubm90YXRp
b24gaUFubm90YXRpb24gPSBwYXJhbWV0ZXJBbm5vdGF0aW9uc1sxXTsNCisJCWFzc2VydEVxdWFs
cyhhbm5vdGF0aW9uU3RyaW5nMiwgaUFubm90YXRpb24udG9TdHJpbmcoKSk7DQorCQlJTWVtYmVy
VmFsdWVQYWlyW10gbWVtYmVyVmFsdWVQYWlycyA9IGlBbm5vdGF0aW9uLmdldE1lbWJlclZhbHVl
UGFpcnMoKTsNCisJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHBhaXJzIiwgMSwgbWVt
YmVyVmFsdWVQYWlycy5sZW5ndGgpOw0KKwkJU3RyaW5nQnVmZmVyIG91dHB1dCA9IG5ldyBTdHJp
bmdCdWZmZXIoKTsNCisJCW91dHB1dC5hcHBlbmQobWVtYmVyVmFsdWVQYWlyc1swXS5nZXRNZW1i
ZXJOYW1lKCkpOw0KKwkJb3V0cHV0LmFwcGVuZCgnICcpOw0KKwkJb3V0cHV0LmFwcGVuZChtZW1i
ZXJWYWx1ZVBhaXJzWzBdLmdldFZhbHVlKCkpOw0KKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB2YWx1
ZSIsICJpZCAxIiwgU3RyaW5nLnZhbHVlT2Yob3V0cHV0KSk7DQorCQlhc3NlcnRFcXVhbHMoIldy
b25nIGxlbmd0aCIsIDAsIG1ldGhvZC5nZXRQYXJhbWV0ZXJzKClbMF0uZ2V0QW5ub3RhdGlvbnMo
KS5sZW5ndGgpOw0KKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBsZW5ndGgiLCAwLCBtZXRob2QuZ2V0
UGFyYW1ldGVycygpWzJdLmdldEFubm90YXRpb25zKCkubGVuZ3RoKTsNCisJfSBmaW5hbGx5IHsN
CisJCWRlbGV0ZVByb2plY3QoIlAiKTsNCisJfQ0KK30NCisvKioNCisgKiBAc2VlICJodHRwczov
L2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzM0NzgzIg0KKyAqLw0KK3B1
YmxpYyB2b2lkIHRlc3RQYXJhbUFubm90YXRpb25zNCgpIHRocm93cyBDb3JlRXhjZXB0aW9uLCBJ
T0V4Y2VwdGlvbiB7DQorCXRyeSB7DQorCQlJSmF2YVByb2plY3QgcHJvamVjdCA9IGNyZWF0ZUph
dmFQcm9qZWN0KCJQIiwgbmV3IFN0cmluZ1tdIHsic3JjIn0sIG5ldyBTdHJpbmdbXSB7IkpDTDE1
X0xJQiJ9LCAiYmluIiwgIjEuNSIpOw0KKwkJU3RyaW5nW10gcGF0aEFuZENvbnRlbnRzID0gbmV3
IFN0cmluZ1tdeyJwL1guamF2YSIsDQorCQkJCSJwYWNrYWdlIHA7XG4iICsNCisJCQkJInB1Ymxp
YyBjbGFzcyBYPFQ+IHtcbiIgKw0KKwkJCQkiICBYPFN0cmluZz4gZmllbGQ7XG4iICsNCisJCQkJ
IglASW5qZWN0IEBNYXJrZXIoaWQ9MylcbiIgKw0KKwkJCQkiCXB1YmxpYyB2b2lkIFRlc3QoaW50
IGksIEBEZWZhdWx0IEBNYXJrZXIoaWQ9MSkgU3RyaW5nIHByb2Nlc3NvciwgaW50IGspIHt9XG4i
ICsNCisJCQkJIn0iLA0KKwkJCQkicC9JbmplY3QuamF2YSIsDQorCQkJCSJwYWNrYWdlIHA7XG4i
Kw0KKwkJCQkicHVibGljIEBpbnRlcmZhY2UgSW5qZWN0e1xuIiArDQorCQkJCSJ9IiwNCisJCQkJ
InAvTWFya2VyLmphdmEiLA0KKwkJCQkicGFja2FnZSBwO1xuIiArDQorCQkJCSJwdWJsaWMgQGlu
dGVyZmFjZSBNYXJrZXIge1xuIiArDQorCQkJCSIJaW50IGlkKCkgZGVmYXVsdCAwO1xuIiArDQor
CQkJCSJ9IiwNCisJCQkJInAvRGVmYXVsdC5qYXZhIiwNCisJCQkJInBhY2thZ2UgcDtcbiIgKw0K
KwkJCQkicHVibGljIEBpbnRlcmZhY2UgRGVmYXVsdHtcbiIgKw0KKwkJCQkifSJ9Ow0KKwkJYWRk
TGlicmFyeShwcm9qZWN0LCAibGliMzM0NzgzXzIuamFyIiwgImxpYjMzNDc4M18yc3JjLnppcCIs
IHBhdGhBbmRDb250ZW50cywgSmF2YUNvcmUuVkVSU0lPTl8xXzUpOw0KKwkJDQorCQl3YWl0Rm9y
QXV0b0J1aWxkKCk7DQorCQlJUGFja2FnZUZyYWdtZW50Um9vdCByb290ID0gcHJvamVjdC5nZXRQ
YWNrYWdlRnJhZ21lbnRSb290KGdldEZpbGUoIi9QL2xpYjMzNDc4M18yLmphciIpKTsNCisJCUlU
eXBlIHR5cGUgPSByb290LmdldFBhY2thZ2VGcmFnbWVudCgicCIpLmdldENsYXNzRmlsZSgiWC5j
bGFzcyIpLmdldFR5cGUoKTsNCisJCVN0cmluZyBhbm5vdGF0aW9uU3RyaW5nMSA9ICJAcC5EZWZh
dWx0IFtpbiBUZXN0KGludCwgamF2YS5sYW5nLlN0cmluZywgaW50KSBbaW4gWCBbaW4gWC5jbGFz
cyBbaW4gcCBbaW4gbGliMzM0NzgzXzIuamFyIFtpbiBQXV1dXV1dIjsNCisJCVN0cmluZyBhbm5v
dGF0aW9uU3RyaW5nMiA9ICJAcC5NYXJrZXIgW2luIFRlc3QoaW50LCBqYXZhLmxhbmcuU3RyaW5n
LCBpbnQpIFtpbiBYIFtpbiBYLmNsYXNzIFtpbiBwIFtpbiBsaWIzMzQ3ODNfMi5qYXIgW2luIFBd
XV1dXV0iOw0KKwkJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhvZHMoKVsxXTsNCisJCUlB
bm5vdGF0aW9uW10gYW5ub3RhdGlvbnMgPSBtZXRob2QuZ2V0QW5ub3RhdGlvbnMoKTsNCisJCWFz
c2VydEVxdWFscygiV3JvbmcgbGVuZ3RoIiwgMiwgYW5ub3RhdGlvbnMubGVuZ3RoKTsNCisJCWFz
c2VydEVxdWFscygiQHAuSW5qZWN0IFtpbiBUZXN0KGludCwgamF2YS5sYW5nLlN0cmluZywgaW50
KSBbaW4gWCBbaW4gWC5jbGFzcyBbaW4gcCBbaW4gbGliMzM0NzgzXzIuamFyIFtpbiBQXV1dXV1d
IiwgYW5ub3RhdGlvbnNbMF0udG9TdHJpbmcoKSk7DQorCQlJQW5ub3RhdGlvbiBhbm5vdGF0aW9u
ID0gYW5ub3RhdGlvbnNbMV07DQorCQlhc3NlcnRFcXVhbHMoIkBwLk1hcmtlciBbaW4gVGVzdChp
bnQsIGphdmEubGFuZy5TdHJpbmcsIGludCkgW2luIFggW2luIFguY2xhc3MgW2luIHAgW2luIGxp
YjMzNDc4M18yLmphciBbaW4gUF1dXV1dXSIsIGFubm90YXRpb24udG9TdHJpbmcoKSk7DQorCQlJ
TWVtYmVyVmFsdWVQYWlyW10gbWVtYmVyVmFsdWVQYWlycyA9IGFubm90YXRpb24uZ2V0TWVtYmVy
VmFsdWVQYWlycygpOw0KKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgcGFpcnMiLCAx
LCBtZW1iZXJWYWx1ZVBhaXJzLmxlbmd0aCk7DQorCQlTdHJpbmdCdWZmZXIgb3V0cHV0ID0gbmV3
IFN0cmluZ0J1ZmZlcigpOw0KKwkJb3V0cHV0LmFwcGVuZChtZW1iZXJWYWx1ZVBhaXJzWzBdLmdl
dE1lbWJlck5hbWUoKSk7DQorCQlvdXRwdXQuYXBwZW5kKCcgJyk7DQorCQlvdXRwdXQuYXBwZW5k
KG1lbWJlclZhbHVlUGFpcnNbMF0uZ2V0VmFsdWUoKSk7DQorCQlhc3NlcnRFcXVhbHMoIldyb25n
IHZhbHVlIiwgImlkIDMiLCBTdHJpbmcudmFsdWVPZihvdXRwdXQpKTsNCisJCUlBbm5vdGF0aW9u
W10gcGFyYW1ldGVyQW5ub3RhdGlvbnMgPSBtZXRob2QuZ2V0UGFyYW1ldGVycygpWzFdLmdldEFu
bm90YXRpb25zKCk7DQorCQlhc3NlcnRFcXVhbHMoIldyb25nIGxlbmd0aCIsIDIsIHBhcmFtZXRl
ckFubm90YXRpb25zLmxlbmd0aCk7DQorCQlhc3NlcnRFcXVhbHMoYW5ub3RhdGlvblN0cmluZzEs
IHBhcmFtZXRlckFubm90YXRpb25zWzBdLnRvU3RyaW5nKCkpOw0KKwkJYW5ub3RhdGlvbiA9IHBh
cmFtZXRlckFubm90YXRpb25zWzFdOw0KKwkJYXNzZXJ0RXF1YWxzKGFubm90YXRpb25TdHJpbmcy
LCBhbm5vdGF0aW9uLnRvU3RyaW5nKCkpOw0KKwkJbWVtYmVyVmFsdWVQYWlycyA9IGFubm90YXRp
b24uZ2V0TWVtYmVyVmFsdWVQYWlycygpOw0KKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIg
b2YgcGFpcnMiLCAxLCBtZW1iZXJWYWx1ZVBhaXJzLmxlbmd0aCk7DQorCQlvdXRwdXQgPSBuZXcg
U3RyaW5nQnVmZmVyKCk7DQorCQlvdXRwdXQuYXBwZW5kKG1lbWJlclZhbHVlUGFpcnNbMF0uZ2V0
TWVtYmVyTmFtZSgpKTsNCisJCW91dHB1dC5hcHBlbmQoJyAnKTsNCisJCW91dHB1dC5hcHBlbmQo
bWVtYmVyVmFsdWVQYWlyc1swXS5nZXRWYWx1ZSgpKTsNCisJCWFzc2VydEVxdWFscygiV3Jvbmcg
dmFsdWUiLCAiaWQgMSIsIFN0cmluZy52YWx1ZU9mKG91dHB1dCkpOw0KKwkJYXNzZXJ0RXF1YWxz
KCJXcm9uZyBsZW5ndGgiLCAwLCBtZXRob2QuZ2V0UGFyYW1ldGVycygpWzBdLmdldEFubm90YXRp
b25zKCkubGVuZ3RoKTsNCisJCWFzc2VydEVxdWFscygiV3JvbmcgbGVuZ3RoIiwgMCwgbWV0aG9k
LmdldFBhcmFtZXRlcnMoKVsyXS5nZXRBbm5vdGF0aW9ucygpLmxlbmd0aCk7DQorCX0gZmluYWxs
eSB7DQorCQlkZWxldGVQcm9qZWN0KCJQIik7DQorCX0NCit9DQorLyoqDQorICogQHNlZSAiaHR0
cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMzNDc4MyINCisgKi8N
CitwdWJsaWMgdm9pZCB0ZXN0UGFyYW1Bbm5vdGF0aW9uczUoKSB0aHJvd3MgQ29yZUV4Y2VwdGlv
biwgSU9FeGNlcHRpb24gew0KKwl0cnkgew0KKwkJSUphdmFQcm9qZWN0IHByb2plY3QgPSBjcmVh
dGVKYXZhUHJvamVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7InNyYyJ9LCBuZXcgU3RyaW5nW10geyJK
Q0wxNV9MSUIifSwgImJpbiIsICIxLjUiKTsNCisJCVN0cmluZ1tdIHBhdGhBbmRDb250ZW50cyA9
IG5ldyBTdHJpbmdbXXsicC9YLmphdmEiLA0KKwkJCQkicGFja2FnZSBwO1xuIiArDQorCQkJCSJw
dWJsaWMgY2xhc3MgWDxUPiB7XG4iICsNCisJCQkJIiAgWDxTdHJpbmc+IGZpZWxkO1xuIiArDQor
CQkJCSIJQEluamVjdCBATWFya2VyKGlkPTMpXG4iICsNCisJCQkJIglwdWJsaWMgdm9pZCBUZXN0
KGludCBpLCBARGVmYXVsdCBATWFya2VyKGlkPTEpIFN0cmluZyBwcm9jZXNzb3IsIGludCBrKSB7
fVxuIiArDQorCQkJCSJ9IiwNCisJCQkJInAvSW5qZWN0LmphdmEiLA0KKwkJCQkicGFja2FnZSBw
O1xuIisNCisJCQkJInB1YmxpYyBAaW50ZXJmYWNlIEluamVjdHtcbiIgKw0KKwkJCQkifSIsDQor
CQkJCSJwL01hcmtlci5qYXZhIiwNCisJCQkJInBhY2thZ2UgcDtcbiIgKw0KKwkJCQkicHVibGlj
IEBpbnRlcmZhY2UgTWFya2VyIHtcbiIgKw0KKwkJCQkiCWludCBpZCgpIGRlZmF1bHQgMDtcbiIg
Kw0KKwkJCQkifSIsDQorCQkJCSJwL0RlZmF1bHQuamF2YSIsDQorCQkJCSJwYWNrYWdlIHA7XG4i
ICsNCisJCQkJInB1YmxpYyBAaW50ZXJmYWNlIERlZmF1bHR7XG4iICsNCisJCQkJIn0ifTsNCisJ
CU1hcCBvcHRpb25zID0gbmV3IEhhc2hNYXAoKTsNCisJCW9wdGlvbnMucHV0KEphdmFDb3JlLkNP
TVBJTEVSX0xPQ0FMX1ZBUklBQkxFX0FUVFIsIEphdmFDb3JlLkRPX05PVF9HRU5FUkFURSk7DQor
CQlhZGRMaWJyYXJ5KHByb2plY3QsICJsaWIzMzQ3ODNfMy5qYXIiLCAibGliMzM0NzgzXzNzcmMu
emlwIiwgcGF0aEFuZENvbnRlbnRzLCBKYXZhQ29yZS5WRVJTSU9OXzFfNSwgb3B0aW9ucyk7DQor
CQkNCisJCXdhaXRGb3JBdXRvQnVpbGQoKTsNCisJCUlQYWNrYWdlRnJhZ21lbnRSb290IHJvb3Qg
PSBwcm9qZWN0LmdldFBhY2thZ2VGcmFnbWVudFJvb3QoZ2V0RmlsZSgiL1AvbGliMzM0NzgzXzMu
amFyIikpOw0KKwkJSVR5cGUgdHlwZSA9IHJvb3QuZ2V0UGFja2FnZUZyYWdtZW50KCJwIikuZ2V0
Q2xhc3NGaWxlKCJYLmNsYXNzIikuZ2V0VHlwZSgpOw0KKwkJU3RyaW5nIGFubm90YXRpb25TdHJp
bmcxID0gIkBwLkRlZmF1bHQgW2luIFRlc3QoaW50LCBqYXZhLmxhbmcuU3RyaW5nLCBpbnQpIFtp
biBYIFtpbiBYLmNsYXNzIFtpbiBwIFtpbiBsaWIzMzQ3ODNfMy5qYXIgW2luIFBdXV1dXV0iOw0K
KwkJU3RyaW5nIGFubm90YXRpb25TdHJpbmcyID0gIkBwLk1hcmtlciBbaW4gVGVzdChpbnQsIGph
dmEubGFuZy5TdHJpbmcsIGludCkgW2luIFggW2luIFguY2xhc3MgW2luIHAgW2luIGxpYjMzNDc4
M18zLmphciBbaW4gUF1dXV1dXSI7DQorCQlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9k
cygpWzFdOw0KKwkJSUFubm90YXRpb25bXSBhbm5vdGF0aW9ucyA9IG1ldGhvZC5nZXRBbm5vdGF0
aW9ucygpOw0KKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBsZW5ndGgiLCAyLCBhbm5vdGF0aW9ucy5s
ZW5ndGgpOw0KKwkJYXNzZXJ0RXF1YWxzKCJAcC5JbmplY3QgW2luIFRlc3QoaW50LCBqYXZhLmxh
bmcuU3RyaW5nLCBpbnQpIFtpbiBYIFtpbiBYLmNsYXNzIFtpbiBwIFtpbiBsaWIzMzQ3ODNfMy5q
YXIgW2luIFBdXV1dXV0iLCBhbm5vdGF0aW9uc1swXS50b1N0cmluZygpKTsNCisJCUlBbm5vdGF0
aW9uIGFubm90YXRpb24gPSBhbm5vdGF0aW9uc1sxXTsNCisJCWFzc2VydEVxdWFscygiQHAuTWFy
a2VyIFtpbiBUZXN0KGludCwgamF2YS5sYW5nLlN0cmluZywgaW50KSBbaW4gWCBbaW4gWC5jbGFz
cyBbaW4gcCBbaW4gbGliMzM0NzgzXzMuamFyIFtpbiBQXV1dXV1dIiwgYW5ub3RhdGlvbi50b1N0
cmluZygpKTsNCisJCUlNZW1iZXJWYWx1ZVBhaXJbXSBtZW1iZXJWYWx1ZVBhaXJzID0gYW5ub3Rh
dGlvbi5nZXRNZW1iZXJWYWx1ZVBhaXJzKCk7DQorCQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJl
ciBvZiBwYWlycyIsIDEsIG1lbWJlclZhbHVlUGFpcnMubGVuZ3RoKTsNCisJCVN0cmluZ0J1ZmZl
ciBvdXRwdXQgPSBuZXcgU3RyaW5nQnVmZmVyKCk7DQorCQlvdXRwdXQuYXBwZW5kKG1lbWJlclZh
bHVlUGFpcnNbMF0uZ2V0TWVtYmVyTmFtZSgpKTsNCisJCW91dHB1dC5hcHBlbmQoJyAnKTsNCisJ
CW91dHB1dC5hcHBlbmQobWVtYmVyVmFsdWVQYWlyc1swXS5nZXRWYWx1ZSgpKTsNCisJCWFzc2Vy
dEVxdWFscygiV3JvbmcgdmFsdWUiLCAiaWQgMyIsIFN0cmluZy52YWx1ZU9mKG91dHB1dCkpOw0K
KwkJSUFubm90YXRpb25bXSBwYXJhbWV0ZXJBbm5vdGF0aW9ucyA9IG1ldGhvZC5nZXRQYXJhbWV0
ZXJzKClbMV0uZ2V0QW5ub3RhdGlvbnMoKTsNCisJCWFzc2VydEVxdWFscygiV3JvbmcgbGVuZ3Ro
IiwgMiwgcGFyYW1ldGVyQW5ub3RhdGlvbnMubGVuZ3RoKTsNCisJCWFzc2VydEVxdWFscyhhbm5v
dGF0aW9uU3RyaW5nMSwgcGFyYW1ldGVyQW5ub3RhdGlvbnNbMF0udG9TdHJpbmcoKSk7DQorCQlh
bm5vdGF0aW9uID0gcGFyYW1ldGVyQW5ub3RhdGlvbnNbMV07DQorCQlhc3NlcnRFcXVhbHMoYW5u
b3RhdGlvblN0cmluZzIsIGFubm90YXRpb24udG9TdHJpbmcoKSk7DQorCQltZW1iZXJWYWx1ZVBh
aXJzID0gYW5ub3RhdGlvbi5nZXRNZW1iZXJWYWx1ZVBhaXJzKCk7DQorCQlhc3NlcnRFcXVhbHMo
Ildyb25nIG51bWJlciBvZiBwYWlycyIsIDEsIG1lbWJlclZhbHVlUGFpcnMubGVuZ3RoKTsNCisJ
CW91dHB1dCA9IG5ldyBTdHJpbmdCdWZmZXIoKTsNCisJCW91dHB1dC5hcHBlbmQobWVtYmVyVmFs
dWVQYWlyc1swXS5nZXRNZW1iZXJOYW1lKCkpOw0KKwkJb3V0cHV0LmFwcGVuZCgnICcpOw0KKwkJ
b3V0cHV0LmFwcGVuZChtZW1iZXJWYWx1ZVBhaXJzWzBdLmdldFZhbHVlKCkpOw0KKwkJYXNzZXJ0
RXF1YWxzKCJXcm9uZyB2YWx1ZSIsICJpZCAxIiwgU3RyaW5nLnZhbHVlT2Yob3V0cHV0KSk7DQor
CQlhc3NlcnRFcXVhbHMoIldyb25nIGxlbmd0aCIsIDAsIG1ldGhvZC5nZXRQYXJhbWV0ZXJzKClb
MF0uZ2V0QW5ub3RhdGlvbnMoKS5sZW5ndGgpOw0KKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBsZW5n
dGgiLCAwLCBtZXRob2QuZ2V0UGFyYW1ldGVycygpWzJdLmdldEFubm90YXRpb25zKCkubGVuZ3Ro
KTsNCisJfSBmaW5hbGx5IHsNCisJCWRlbGV0ZVByb2plY3QoIlAiKTsNCisJfQ0KK30NCisvKioN
CisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
MzM0NzgzIg0KKyAqLw0KK3B1YmxpYyB2b2lkIHRlc3RQYXJhbUFubm90YXRpb25zNigpIHRocm93
cyBDb3JlRXhjZXB0aW9uIHsNCisJdHJ5IHsNCisJCWNyZWF0ZUphdmFQcm9qZWN0KCJQIiwgbmV3
IFN0cmluZ1tdIHsic3JjIn0sIG5ldyBTdHJpbmdbXSB7IkpDTDE1X0xJQiJ9LCAiYmluIiwgIjEu
NSIpOw0KKwkJU3RyaW5nIHNvdXJjZSA9ICJwYWNrYWdlIHA7XG4iICsNCisJCQkJInB1YmxpYyBj
bGFzcyBYPFQ+IHtcbiIgKw0KKwkJCQkiICBYPFN0cmluZz4gZmllbGQ7XG4iICsNCisJCQkJIglw
dWJsaWMgdm9pZCBUZXN0KCkge31cbiIgKw0KKwkJCQkifSI7DQorCQljcmVhdGVGb2xkZXIoIi9Q
L3NyYy9wIik7DQorCQljcmVhdGVGaWxlKA0KKwkJCSIvUC9zcmMvcC9YLmphdmEiLA0KKwkJCXNv
dXJjZQ0KKwkJKTsNCisJCXdhaXRGb3JBdXRvQnVpbGQoKTsNCisJCQ0KKwkJSUNvbXBpbGF0aW9u
VW5pdCB1bml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCIvUC9zcmMvcC9YLmphdmEiKTsgDQorCQlJ
VHlwZSB0eXBlID0gdW5pdC5nZXRUeXBlKCJYIik7DQorCQlJTWV0aG9kIG1ldGhvZCA9IHR5cGUu
Z2V0TWV0aG9kcygpWzBdOw0KKwkJSUxvY2FsVmFyaWFibGVbXSBsb2NhbFZhcmlhYmxlcyA9IG1l
dGhvZC5nZXRQYXJhbWV0ZXJzKCk7DQorCQlhc3NlcnROb3ROdWxsKGxvY2FsVmFyaWFibGVzKTsN
CisJCWFzc2VydEVxdWFscygiV3JvbmcgbGVuZ3RoIiwgMCwgbG9jYWxWYXJpYWJsZXMubGVuZ3Ro
KTsNCisJfSBmaW5hbGx5IHsNCisJCWRlbGV0ZVByb2plY3QoIlAiKTsNCisJfQ0KK30NCisvKioN
CisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
MzM0NzgzIg0KKyAqLw0KK3B1YmxpYyB2b2lkIHRlc3RQYXJhbUFubm90YXRpb25zNygpIHRocm93
cyBDb3JlRXhjZXB0aW9uLCBJT0V4Y2VwdGlvbiB7DQorCXRyeSB7DQorCQlJSmF2YVByb2plY3Qg
cHJvamVjdCA9IGNyZWF0ZUphdmFQcm9qZWN0KCJQIiwgbmV3IFN0cmluZ1tdIHsic3JjIn0sIG5l
dyBTdHJpbmdbXSB7IkpDTDE1X0xJQiJ9LCAiYmluIiwgIjEuNSIpOw0KKwkJU3RyaW5nW10gcGF0
aEFuZENvbnRlbnRzID0gbmV3IFN0cmluZ1tdeyJwL1guamF2YSIsDQorCQkJCSJwYWNrYWdlIHA7
XG4iICsNCisJCQkJInB1YmxpYyBjbGFzcyBYPFQ+IHtcbiIgKw0KKwkJCQkiICBYPFN0cmluZz4g
ZmllbGQ7XG4iICsNCisJCQkJIglwdWJsaWMgdm9pZCBUZXN0KCkge31cbiIgKw0KKwkJCQkifSIN
CisJCX07DQorCQlhZGRMaWJyYXJ5KHByb2plY3QsICJsaWIzMzQ3ODMuamFyIiwgImxpYnNyYy56
aXAiLCBwYXRoQW5kQ29udGVudHMsIEphdmFDb3JlLlZFUlNJT05fMV81KTsNCisJCQ0KKwkJd2Fp
dEZvckF1dG9CdWlsZCgpOw0KKwkJSVBhY2thZ2VGcmFnbWVudFJvb3Qgcm9vdCA9IHByb2plY3Qu
Z2V0UGFja2FnZUZyYWdtZW50Um9vdChnZXRGaWxlKCIvUC9saWIzMzQ3ODMuamFyIikpOw0KKwkJ
SVR5cGUgdHlwZSA9IHJvb3QuZ2V0UGFja2FnZUZyYWdtZW50KCJwIikuZ2V0Q2xhc3NGaWxlKCJY
LmNsYXNzIikuZ2V0VHlwZSgpOw0KKwkJDQorCQlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0
aG9kcygpWzFdOw0KKwkJSUxvY2FsVmFyaWFibGVbXSBsb2NhbFZhcmlhYmxlcyA9IG1ldGhvZC5n
ZXRQYXJhbWV0ZXJzKCk7DQorCQlhc3NlcnROb3ROdWxsKGxvY2FsVmFyaWFibGVzKTsNCisJCWFz
c2VydEVxdWFscygiV3JvbmcgbGVuZ3RoIiwgMCwgbG9jYWxWYXJpYWJsZXMubGVuZ3RoKTsNCisJ
fSBmaW5hbGx5IHsNCisJCWRlbGV0ZVByb2plY3QoIlAiKTsNCisJfQ0KK30NCiB9DQo=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>189196</attachid>
            <date>2011-02-17 10:30:00 -0500</date>
            <delta_ts>2011-02-17 11:32:05 -0500</delta_ts>
            <desc>Proposed change for JavaElementView code</desc>
            <filename>patch_334783_elementview.txt</filename>
            <type>text/plain</type>
            <size>2370</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0Lmpldmll
dw0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9qZHQvamV2aWV3L3Byb3BlcnRpZXMvTWFya2VyUHJv
cGVydGllcy5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9qZHQt
dWktaG9tZS9wbHVnaW5zL29yZy5lY2xpcHNlLmpkdC5qZXZpZXcvc3JjL29yZy9lY2xpcHNlL2pk
dC9qZXZpZXcvcHJvcGVydGllcy9NYXJrZXJQcm9wZXJ0aWVzLmphdmEsdg0KcmV0cmlldmluZyBy
ZXZpc2lvbiAxLjQNCmRpZmYgLXUgLXIxLjQgTWFya2VyUHJvcGVydGllcy5qYXZhDQotLS0gc3Jj
L29yZy9lY2xpcHNlL2pkdC9qZXZpZXcvcHJvcGVydGllcy9NYXJrZXJQcm9wZXJ0aWVzLmphdmEJ
MTcgSnVuIDIwMDkgMTI6MDI6MzEgLTAwMDAJMS40DQorKysgc3JjL29yZy9lY2xpcHNlL2pkdC9q
ZXZpZXcvcHJvcGVydGllcy9NYXJrZXJQcm9wZXJ0aWVzLmphdmEJMTcgRmViIDIwMTEgMTU6MzA6
MDQgLTAwMDANCkBAIC00NSw3ICs0NSw2IEBADQogCQlNYXA8U3RyaW5nLCBPYmplY3Q+IGF0dHJp
YnV0ZXM9IG51bGw7DQogCQlib29sZWFuIGlzSmF2YU1hcmtlcj0gZmFsc2U7DQogCQl0cnkgew0K
LQkJCUBTdXBwcmVzc1dhcm5pbmdzKCJ1bmNoZWNrZWQiKQ0KIAkJCU1hcDxTdHJpbmcsIE9iamVj
dD4gdW5jaGVja2VkQXR0cmlidXRlcz0gZk1hcmtlci5nZXRBdHRyaWJ1dGVzKCk7DQogCQkJYXR0
cmlidXRlcz0gdW5jaGVja2VkQXR0cmlidXRlczsNCiAJCQlpc0phdmFNYXJrZXI9IElKYXZhTW9k
ZWxNYXJrZXIuSkFWQV9NT0RFTF9QUk9CTEVNX01BUktFUi5lcXVhbHMoZk1hcmtlci5nZXRUeXBl
KCkpOw0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9qZHQvamV2aWV3L3ZpZXdzL0phdmFFbGVtZW50
LmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL2pkdC11aS1ob21l
L3BsdWdpbnMvb3JnLmVjbGlwc2UuamR0Lmpldmlldy9zcmMvb3JnL2VjbGlwc2UvamR0L2pldmll
dy92aWV3cy9KYXZhRWxlbWVudC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4xNg0KZGlm
ZiAtdSAtcjEuMTYgSmF2YUVsZW1lbnQuamF2YQ0KLS0tIHNyYy9vcmcvZWNsaXBzZS9qZHQvamV2
aWV3L3ZpZXdzL0phdmFFbGVtZW50LmphdmEJOCBNYXIgMjAxMCAxNjoyODo1NSAtMDAwMAkxLjE2
DQorKysgc3JjL29yZy9lY2xpcHNlL2pkdC9qZXZpZXcvdmlld3MvSmF2YUVsZW1lbnQuamF2YQkx
NyBGZWIgMjAxMSAxNTozMDowNCAtMDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDUsIDIwMTAgSUJNIENvcnBvcmF0aW9u
IGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAyMDA1LCAyMDExIElCTSBDb3Jwb3JhdGlv
biBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQg
dGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIg
dGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBh
Y2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTQ4
MywxMCArNDgzLDEwIEBADQogCQkJCXJldHVybiBjcmVhdGVTdHJpbmdzKHRoaXMsIG1ldGhvZC5n
ZXRFeGNlcHRpb25UeXBlcygpKTsNCiAJCQl9DQogCQl9KTsNCi0JCXJlc3VsdC5hZGQobmV3IEph
dmFFbGVtZW50Q2hpbGRyZW5Qcm9wZXJ0eSh0aGlzLCAiUEFSQU1FVEVSIE5BTUVTIikgew0KKwkJ
cmVzdWx0LmFkZChuZXcgSmF2YUVsZW1lbnRDaGlsZHJlblByb3BlcnR5KHRoaXMsICJMT0NBTCBW
QVJJQUJMRVMiKSB7DQogCQkJQE92ZXJyaWRlDQogCQkJcHJvdGVjdGVkIEpFQXR0cmlidXRlW10g
Y29tcHV0ZUNoaWxkcmVuKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7DQotCQkJCXJldHVy
biBjcmVhdGVTdHJpbmdzKHRoaXMsIG1ldGhvZC5nZXRQYXJhbWV0ZXJOYW1lcygpKTsNCisJCQkJ
cmV0dXJuIGNyZWF0ZUphdmFFbGVtZW50cyh0aGlzLCBtZXRob2QuZ2V0UGFyYW1ldGVycygpKTsN
CiAJCQl9DQogCQl9KTsNCiAJCXJlc3VsdC5hZGQobmV3IEphdmFFbGVtZW50Q2hpbGRyZW5Qcm9w
ZXJ0eSh0aGlzLCAiUEFSQU1FVEVSIFRZUEVTIikgew0K
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>189202</attachid>
            <date>2011-02-17 11:32:00 -0500</date>
            <delta_ts>2011-02-17 11:32:05 -0500</delta_ts>
            <desc>Updated patch for JavaElement View</desc>
            <filename>patch.txt</filename>
            <type>text/plain</type>
            <size>4915</size>
            <attacher name="Markus Keller">markus_keller</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0Lmpldmll
dw0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9qZHQvamV2aWV3L3Byb3BlcnRpZXMvSmF2YUVsZW1l
bnRQcm9wZXJ0aWVzLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNl
L2pkdC11aS1ob21lL3BsdWdpbnMvb3JnLmVjbGlwc2UuamR0Lmpldmlldy9zcmMvb3JnL2VjbGlw
c2UvamR0L2pldmlldy9wcm9wZXJ0aWVzL0phdmFFbGVtZW50UHJvcGVydGllcy5qYXZhLHYNCnJl
dHJpZXZpbmcgcmV2aXNpb24gMS4xMQ0KZGlmZiAtdSAtcjEuMTEgSmF2YUVsZW1lbnRQcm9wZXJ0
aWVzLmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvamR0L2pldmlldy9wcm9wZXJ0aWVzL0phdmFF
bGVtZW50UHJvcGVydGllcy5qYXZhCTggTWFyIDIwMTAgMTY6Mjg6NTUgLTAwMDAJMS4xMQ0KKysr
IHNyYy9vcmcvZWNsaXBzZS9qZHQvamV2aWV3L3Byb3BlcnRpZXMvSmF2YUVsZW1lbnRQcm9wZXJ0
aWVzLmphdmEJMTcgRmViIDIwMTEgMTY6MjA6MTAgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8q
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDA1LCAyMDEwIElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwNSwgMjAxMSBJQk0g
Q29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHBy
b2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxh
YmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQog
ICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUg
YXQNCkBAIC0xMDQsNyArMTA0LDcgQEANCiAJCWFkZEFubm90YXRpb25Qcm9wZXJ0aWVzKCk7DQog
CQlhZGRQYWNrYWdlRnJhZ21lbnRQcm9wZXJ0aWVzKCk7DQogCQlhZGRQYWNrYWdlRnJhZ21lbnRS
b290UHJvcGVydGllcygpOw0KLQkJYWRkVHlwZVBhcmFtbWV0ZXJQcm9wZXJ0aWVzKCk7DQorCQlh
ZGRUeXBlUGFyYW1ldGVyUHJvcGVydGllcygpOw0KIAkJYWRkUGFyZW50UHJvcGVydGllcygpOw0K
IAkJYWRkU291cmNlUmVmZXJlbmNlUHJvcGVydGllcygpOw0KIAkJYWRkT3BlbmFibGVQcm9wZXJ0
aWVzKCk7DQpAQCAtMjI3LDYgKzIyNywxNiBAQA0KIAkJCQlyZXR1cm4gKChJTG9jYWxWYXJpYWJs
ZSkgZWxlbWVudCkuZ2V0VHlwZVNpZ25hdHVyZSgpOw0KIAkJCX0NCiAJCX0pOw0KKwkJYWRkUHJv
cGVydHkobmV3IFByb3BlcnR5KElMb2NhbFZhcmlhYmxlLmNsYXNzLCAiZmxhZ3MiKSB7DQorCQkJ
QE92ZXJyaWRlIHB1YmxpYyBPYmplY3QgY29tcHV0ZShJSmF2YUVsZW1lbnQgZWxlbWVudCkgew0K
KwkJCQlyZXR1cm4gZ2V0RmxhZ3NTdHJpbmcoKChJTG9jYWxWYXJpYWJsZSkgZWxlbWVudCkuZ2V0
RmxhZ3MoKSwgZWxlbWVudC5nZXRDbGFzcygpKTsNCisJCQl9DQorCQl9KTsNCisJCWFkZFByb3Bl
cnR5KG5ldyBQcm9wZXJ0eShJTG9jYWxWYXJpYWJsZS5jbGFzcywgImlzUGFyYW1ldGVyIikgew0K
KwkJCUBPdmVycmlkZSBwdWJsaWMgT2JqZWN0IGNvbXB1dGUoSUphdmFFbGVtZW50IGVsZW1lbnQp
IHsNCisJCQkJcmV0dXJuICgoSUxvY2FsVmFyaWFibGUpIGVsZW1lbnQpLmlzUGFyYW1ldGVyKCk7
DQorCQkJfQ0KKwkJfSk7DQogCX0NCiANCiAJcHJpdmF0ZSBzdGF0aWMgdm9pZCBhZGRBbm5vdGF0
aW9uUHJvcGVydGllcygpIHsNCkBAIC00NjksNyArNDc5LDcgQEANCiAJCX0pOw0KIAl9DQogDQot
CXByaXZhdGUgc3RhdGljIHZvaWQgYWRkVHlwZVBhcmFtbWV0ZXJQcm9wZXJ0aWVzKCkgew0KKwlw
cml2YXRlIHN0YXRpYyB2b2lkIGFkZFR5cGVQYXJhbWV0ZXJQcm9wZXJ0aWVzKCkgew0KIAkJYWRk
UHJvcGVydHkobmV3IFByb3BlcnR5KElUeXBlUGFyYW1ldGVyLmNsYXNzLCAibmFtZVJhbmdlIikg
ew0KIAkJCUBPdmVycmlkZSBwdWJsaWMgT2JqZWN0IGNvbXB1dGUoSUphdmFFbGVtZW50IGVsZW1l
bnQpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gew0KIAkJCQlyZXR1cm4gZ2V0U291cmNlUmFu
Z2VTdHJpbmcoKChJVHlwZVBhcmFtZXRlcikgZWxlbWVudCkuZ2V0TmFtZVJhbmdlKCkpOw0KSW5k
ZXg6IHNyYy9vcmcvZWNsaXBzZS9qZHQvamV2aWV3L3ZpZXdzL0phdmFFbGVtZW50LmphdmENCj09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL2pkdC11aS1ob21lL3BsdWdpbnMv
b3JnLmVjbGlwc2UuamR0Lmpldmlldy9zcmMvb3JnL2VjbGlwc2UvamR0L2pldmlldy92aWV3cy9K
YXZhRWxlbWVudC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4xNg0KZGlmZiAtdSAtcjEu
MTYgSmF2YUVsZW1lbnQuamF2YQ0KLS0tIHNyYy9vcmcvZWNsaXBzZS9qZHQvamV2aWV3L3ZpZXdz
L0phdmFFbGVtZW50LmphdmEJOCBNYXIgMjAxMCAxNjoyODo1NSAtMDAwMAkxLjE2DQorKysgc3Jj
L29yZy9lY2xpcHNlL2pkdC9qZXZpZXcvdmlld3MvSmF2YUVsZW1lbnQuamF2YQkxNyBGZWIgMjAx
MSAxNjoyMDoxMCAtMDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDUsIDIwMTAgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhl
cnMuDQorICogQ29weXJpZ2h0IChjKSAyMDA1LCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29t
cGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1z
IG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmll
cyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTI4LDYgKzI4LDcg
QEANCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUphdmFFbGVtZW50Ow0KIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuY29yZS5JSmF2YU1vZGVsOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
Y29yZS5JSmF2YVByb2plY3Q7DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklMb2NhbFZh
cmlhYmxlOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JTWVtYmVyOw0KIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuY29yZS5JTWVtYmVyVmFsdWVQYWlyOw0KIGltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuY29yZS5JTWV0aG9kOw0KQEAgLTE3MCw2ICsxNzEsOCBAQA0KIAkJDQogCQlpZiAoZkph
dmFFbGVtZW50IGluc3RhbmNlb2YgSVR5cGVQYXJhbWV0ZXIpDQogCQkJYWRkVHlwZVBhcmFtZXRl
ckNoaWxkcmVuKHJlc3VsdCwgKElUeXBlUGFyYW1ldGVyKSBmSmF2YUVsZW1lbnQpOw0KKwkJaWYg
KGZKYXZhRWxlbWVudCBpbnN0YW5jZW9mIElMb2NhbFZhcmlhYmxlKQ0KKwkJCWFkZExvY2FsVmFy
aWFibGVDaGlsZHJlbihyZXN1bHQsIChJTG9jYWxWYXJpYWJsZSkgZkphdmFFbGVtZW50KTsNCiAJ
CQ0KIAkJaWYgKGZKYXZhRWxlbWVudCBpbnN0YW5jZW9mIElBbm5vdGF0aW9uKQ0KIAkJCWFkZEFu
bm90YXRpb25DaGlsZHJlbihyZXN1bHQsIChJQW5ub3RhdGlvbikgZkphdmFFbGVtZW50KTsNCkBA
IC00ODMsNiArNDg2LDEyIEBADQogCQkJCXJldHVybiBjcmVhdGVTdHJpbmdzKHRoaXMsIG1ldGhv
ZC5nZXRFeGNlcHRpb25UeXBlcygpKTsNCiAJCQl9DQogCQl9KTsNCisJCXJlc3VsdC5hZGQobmV3
IEphdmFFbGVtZW50Q2hpbGRyZW5Qcm9wZXJ0eSh0aGlzLCAiUEFSQU1FVEVSUyIpIHsNCisJCQlA
T3ZlcnJpZGUNCisJCQlwcm90ZWN0ZWQgSkVBdHRyaWJ1dGVbXSBjb21wdXRlQ2hpbGRyZW4oKSB0
aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsNCisJCQkJcmV0dXJuIGNyZWF0ZUphdmFFbGVtZW50
cyh0aGlzLCBtZXRob2QuZ2V0UGFyYW1ldGVycygpKTsNCisJCQl9DQorCQl9KTsNCiAJCXJlc3Vs
dC5hZGQobmV3IEphdmFFbGVtZW50Q2hpbGRyZW5Qcm9wZXJ0eSh0aGlzLCAiUEFSQU1FVEVSIE5B
TUVTIikgew0KIAkJCUBPdmVycmlkZQ0KIAkJCXByb3RlY3RlZCBKRUF0dHJpYnV0ZVtdIGNvbXB1
dGVDaGlsZHJlbigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gew0KQEAgLTUzMCw2ICs1Mzks
MTEgQEANCiAJCX0pOw0KIAl9DQogCQ0KKwlwcml2YXRlIHZvaWQgYWRkTG9jYWxWYXJpYWJsZUNo
aWxkcmVuKEFycmF5TGlzdDxKRUF0dHJpYnV0ZT4gcmVzdWx0LCBmaW5hbCBJTG9jYWxWYXJpYWJs
ZSBsb2NhbFZhcmlhYmxlKSB7DQorCQlyZXN1bHQuYWRkKG5ldyBKYXZhRWxlbWVudCh0aGlzLCAi
REVDTEFSSU5HIE1FTUJFUiIsIGxvY2FsVmFyaWFibGUuZ2V0RGVjbGFyaW5nTWVtYmVyKCkpKTsN
CisJCXJlc3VsdC5hZGQobmV3IEphdmFFbGVtZW50KHRoaXMsICJUWVBFIFJPT1QiLCBsb2NhbFZh
cmlhYmxlLmdldFR5cGVSb290KCkpKTsNCisJfQ0KKwkNCiAJc3RhdGljIEphdmFFbGVtZW50W10g
Y3JlYXRlSmF2YUVsZW1lbnRzKEpFQXR0cmlidXRlIHBhcmVudCwgT2JqZWN0W10gamF2YUVsZW1l
bnRzKSB7DQogCQlKYXZhRWxlbWVudFtdIGplQ2hpbGRyZW49IG5ldyBKYXZhRWxlbWVudFtqYXZh
RWxlbWVudHMubGVuZ3RoXTsNCiAJCWZvciAoaW50IGk9IDA7IGkgPCBqYXZhRWxlbWVudHMubGVu
Z3RoOyBpKyspIHsNCg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>189233</attachid>
            <date>2011-02-17 17:07:00 -0500</date>
            <delta_ts>2011-02-20 19:55:01 -0500</delta_ts>
            <desc>Proposed fix + regression tests</desc>
            <filename>patch_334783_3.txt</filename>
            <type>text/plain</type>
            <size>74246</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvY29yZS9JTWV0aG9kLmphdmENCj09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVs
L29yZy9lY2xpcHNlL2pkdC9jb3JlL0lNZXRob2QuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9u
IDEuMzMNCmRpZmYgLXUgLXIxLjMzIElNZXRob2QuamF2YQ0KLS0tIG1vZGVsL29yZy9lY2xpcHNl
L2pkdC9jb3JlL0lNZXRob2QuamF2YQkyMyBBcHIgMjAxMCAxMzoxMTowNSAtMDAwMAkxLjMzDQor
KysgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2NvcmUvSU1ldGhvZC5qYXZhCTE3IEZlYiAyMDExIDIy
OjA1OjU3IC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0K
LSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4N
CisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMu
DQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55
aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2Yg
dGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRo
aXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtMTAwLDYgKzEwMCwyMSBA
QA0KICAqIEByZXR1cm4gdGhlIG51bWJlciBvZiBwYXJhbWV0ZXJzIG9mIHRoaXMgbWV0aG9kDQog
ICovDQogaW50IGdldE51bWJlck9mUGFyYW1ldGVycygpOw0KKw0KKy8qKg0KKyAqIFJldHVybnMg
dGhlIHBhcmFtZXRlcnMgb2YgdGhpcyBtZXRob2QuDQorICogPHA+QW4gZW1wdHkgYXJyYXkgaXMg
cmV0dXJuZWQsIGlmIHRoZSBtZXRob2QgaGFzIG5vIHBhcmFtZXRlcnMuPC9wPg0KKyAqIDxwPkZv
ciBiaW5hcnkgdHlwZXMsIGFzc29jaWF0ZWQgc291cmNlIGlzIHVzZWQgdG8gcmV0cmlldmUgdGhl
IHtAbGluayBJTG9jYWxWYXJpYWJsZSNnZXROYW1lUmFuZ2UoKSBuYW1lIHJhbmdlfSwNCisgKiB7
QGxpbmsgSUxvY2FsVmFyaWFibGUjZ2V0U291cmNlUmFuZ2UoKSBzb3VyY2UgcmFuZ2V9IGFuZCB0
aGUge0BsaW5rIElMb2NhbFZhcmlhYmxlI2dldEZsYWdzKCkgZmxhZ3N9LjwvcD4NCisgKiA8cD5U
aGVzZSBsb2NhbCB2YXJpYWJsZXMgY2FuIGJlIHVzZWQgdG8gcmV0cmlldmUgdGhlIHtAbGluayBJ
TG9jYWxWYXJpYWJsZSNnZXRBbm5vdGF0aW9ucygpIHBhcmFtZXRlciBhbm5vdGF0aW9uc30uPC9w
Pg0KKyAqIA0KKyAqIEByZXR1cm4gdGhlIHBhcmFtZXRlcnMgb2YgdGhpcyBtZXRob2QNCisgKiBA
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiBpZiB0aGlzIGVsZW1lbnQgZG9lcyBub3QgZXhpc3Qg
b3IgaWYgYW4NCisgKiAgICAgIGV4Y2VwdGlvbiBvY2N1cnMgd2hpbGUgYWNjZXNzaW5nIGl0cyBj
b3JyZXNwb25kaW5nIHJlc291cmNlLg0KKyAqIEBzaW5jZSAzLjcNCisgKi8NCitJTG9jYWxWYXJp
YWJsZVtdIGdldFBhcmFtZXRlcnMoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uOw0KKw0KIC8q
Kg0KICAqIFJldHVybnMgdGhlIGJpbmRpbmcga2V5IGZvciB0aGlzIG1ldGhvZCBvbmx5IGlmIHRo
ZSBnaXZlbiBtZXRob2QgaXMge0BsaW5rICNpc1Jlc29sdmVkKCkgcmVzb2x2ZWR9Lg0KICAqIEEg
YmluZGluZyBrZXkgaXMgYSBrZXkgdGhhdCB1bmlxdWVseSBpZGVudGlmaWVzIHRoaXMgbWV0aG9k
LiBJdCBhbGxvd3MgYWNjZXNzDQpJbmRleDogbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL0lTb3VyY2VFbGVtZW50UmVxdWVzdG9yLmphdmENCj09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBm
aWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9JU291cmNlRWxlbWVudFJlcXVlc3Rvci5qYXZhLHYN
CnJldHJpZXZpbmcgcmV2aXNpb24gMS4yNg0KZGlmZiAtdSAtcjEuMjYgSVNvdXJjZUVsZW1lbnRS
ZXF1ZXN0b3IuamF2YQ0KLS0tIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9JU291cmNlRWxlbWVudFJlcXVlc3Rvci5qYXZhCTI4IEp1bCAyMDEwIDE2OjE3OjAzIC0wMDAw
CTEuMjYNCisrKyBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvSVNvdXJj
ZUVsZW1lbnRSZXF1ZXN0b3IuamF2YQkxNyBGZWIgMjAxMSAyMjowNTo1NyAtMDAwMA0KQEAgLTEs
NSArMSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIw
MDAsIDIwMTAgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAy
MDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVz
ZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBh
cmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBM
aWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5k
IGlzIGF2YWlsYWJsZSBhdA0KQEAgLTkyLDggKzkyLDE3IEBADQogCQlwdWJsaWMgaW50IGRlY2xh
cmluZ1R5cGVNb2RpZmllcnM7DQogCQlwdWJsaWMgaW50IGV4dHJhRmxhZ3M7DQogCQlwdWJsaWMg
QWJzdHJhY3RNZXRob2REZWNsYXJhdGlvbiBub2RlOw0KKwkJcHVibGljIFBhcmFtZXRlckluZm9b
XSBwYXJhbWV0ZXJJbmZvczsNCiAJfQ0KIA0KKwlwdWJsaWMgc3RhdGljIGNsYXNzIFBhcmFtZXRl
ckluZm8gew0KKwkJcHVibGljIGludCBtb2RpZmllcnM7DQorCQlwdWJsaWMgaW50IGRlY2xhcmF0
aW9uU3RhcnQ7DQorCQlwdWJsaWMgaW50IGRlY2xhcmF0aW9uRW5kOw0KKwkJcHVibGljIGludCBu
YW1lU291cmNlU3RhcnQ7DQorCQlwdWJsaWMgaW50IG5hbWVTb3VyY2VFbmQ7DQorCQlwdWJsaWMg
Y2hhcltdIG5hbWU7DQorCX0NCiAJcHVibGljIHN0YXRpYyBjbGFzcyBGaWVsZEluZm8gew0KIAkJ
cHVibGljIGludCBkZWNsYXJhdGlvblN0YXJ0Ow0KIAkJcHVibGljIGludCBtb2RpZmllcnM7DQpJ
bmRleDogbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL1NvdXJjZUVsZW1l
bnROb3RpZmllci5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvU291cmNlRWxlbWVudE5vdGlmaWVyLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjcN
CmRpZmYgLXUgLXIxLjcgU291cmNlRWxlbWVudE5vdGlmaWVyLmphdmENCi0tLSBtb2RlbC9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvU291cmNlRWxlbWVudE5vdGlmaWVyLmphdmEJ
MjggSnVsIDIwMTAgMTY6MTc6MDMgLTAwMDAJMS43DQorKysgbW9kZWwvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL1NvdXJjZUVsZW1lbnROb3RpZmllci5qYXZhCTE3IEZlYiAyMDEx
IDIyOjA1OjU3IC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
Kg0KLSAqIENvcHlyaWdodCAoYykgMjAwOCwgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVy
cy4NCisgKiBDb3B5cmlnaHQgKGMpIDIwMDgsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhl
cnMuDQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21w
YW55aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMg
b2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVz
IHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtMTQsNiArMTQsNyBA
QA0KIGltcG9ydCBqYXZhLnV0aWwuTWFwOw0KIA0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29y
ZS5jb21waWxlci5DaGFyT3BlcmF0aW9uOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIuSVNvdXJjZUVsZW1lbnRSZXF1ZXN0b3IuUGFyYW1ldGVySW5mbzsNCiBpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLklTb3VyY2VFbGVtZW50UmVxdWVz
dG9yLlR5cGVQYXJhbWV0ZXJJbmZvOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuYXN0LkFTVE5vZGU7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5hc3QuQWJzdHJhY3RNZXRob2REZWNsYXJhdGlvbjsNCkBAIC0xMDMsMTYgKzEwNCwy
NyBAQA0KIAl0aGlzLnN1cGVyVHlwZU5hbWVzID0gbmV3IGNoYXJbNF1bXTsNCiAJdGhpcy5uZXN0
ZWRUeXBlSW5kZXggPSAwOw0KIH0NCi1wcm90ZWN0ZWQgY2hhcltdW11bXSBnZXRBcmd1bWVudHMo
QXJndW1lbnRbXSBhcmd1bWVudHMpIHsNCitwcm90ZWN0ZWQgT2JqZWN0W11bXSBnZXRBcmd1bWVu
dEluZm9zKEFyZ3VtZW50W10gYXJndW1lbnRzKSB7DQogCWludCBhcmd1bWVudExlbmd0aCA9IGFy
Z3VtZW50cy5sZW5ndGg7DQogCWNoYXJbXVtdIGFyZ3VtZW50VHlwZXMgPSBuZXcgY2hhclthcmd1
bWVudExlbmd0aF1bXTsNCiAJY2hhcltdW10gYXJndW1lbnROYW1lcyA9IG5ldyBjaGFyW2FyZ3Vt
ZW50TGVuZ3RoXVtdOw0KKwlQYXJhbWV0ZXJJbmZvW10gcGFyYW1ldGVySW5mb3MgPSBuZXcgUGFy
YW1ldGVySW5mb1thcmd1bWVudExlbmd0aF07DQogCWZvciAoaW50IGkgPSAwOyBpIDwgYXJndW1l
bnRMZW5ndGg7IGkrKykgew0KLQkJYXJndW1lbnRUeXBlc1tpXSA9IENoYXJPcGVyYXRpb24uY29u
Y2F0V2l0aChhcmd1bWVudHNbaV0udHlwZS5nZXRQYXJhbWV0ZXJpemVkVHlwZU5hbWUoKSwgJy4n
KTsNCi0JCWFyZ3VtZW50TmFtZXNbaV0gPSBhcmd1bWVudHNbaV0ubmFtZTsNCisJCUFyZ3VtZW50
IGFyZ3VtZW50ID0gYXJndW1lbnRzW2ldOw0KKwkJYXJndW1lbnRUeXBlc1tpXSA9IENoYXJPcGVy
YXRpb24uY29uY2F0V2l0aChhcmd1bWVudC50eXBlLmdldFBhcmFtZXRlcml6ZWRUeXBlTmFtZSgp
LCAnLicpOw0KKwkJY2hhcltdIG5hbWUgPSBhcmd1bWVudC5uYW1lOw0KKwkJYXJndW1lbnROYW1l
c1tpXSA9IG5hbWU7DQorCQlQYXJhbWV0ZXJJbmZvIHBhcmFtZXRlckluZm8gPSBuZXcgUGFyYW1l
dGVySW5mbygpOw0KKwkJcGFyYW1ldGVySW5mby5kZWNsYXJhdGlvblN0YXJ0ID0gYXJndW1lbnQu
ZGVjbGFyYXRpb25Tb3VyY2VTdGFydDsNCisJCXBhcmFtZXRlckluZm8uZGVjbGFyYXRpb25FbmQg
PSBhcmd1bWVudC5kZWNsYXJhdGlvblNvdXJjZUVuZDsNCisJCXBhcmFtZXRlckluZm8ubmFtZVNv
dXJjZVN0YXJ0ID0gYXJndW1lbnQuc291cmNlU3RhcnQ7DQorCQlwYXJhbWV0ZXJJbmZvLm5hbWVT
b3VyY2VFbmQgPSBhcmd1bWVudC5zb3VyY2VFbmQ7DQorCQlwYXJhbWV0ZXJJbmZvLm1vZGlmaWVy
cyA9IGFyZ3VtZW50Lm1vZGlmaWVyczsNCisJCXBhcmFtZXRlckluZm8ubmFtZSA9IG5hbWU7DQor
CQlwYXJhbWV0ZXJJbmZvc1tpXSA9IHBhcmFtZXRlckluZm87DQogCX0NCiANCi0JcmV0dXJuIG5l
dyBjaGFyW11bXVtdIHthcmd1bWVudFR5cGVzLCBhcmd1bWVudE5hbWVzfTsNCisJcmV0dXJuIG5l
dyBPYmplY3RbXVtdIHsgcGFyYW1ldGVySW5mb3MsIG5ldyBjaGFyW11bXVtdIHsgYXJndW1lbnRU
eXBlcywgYXJndW1lbnROYW1lcyB9IH07DQogfQ0KIHByb3RlY3RlZCBjaGFyW11bXSBnZXRJbnRl
cmZhY2VOYW1lcyhUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uKSB7DQogCWNoYXJbXVtd
IGludGVyZmFjZU5hbWVzID0gbnVsbDsNCkBAIC0yNTYsMTAgKzI2OCwxMiBAQA0KIAljaGFyW11b
XSBhcmd1bWVudE5hbWVzID0gbnVsbDsNCiAJYm9vbGVhbiBpc1ZhckFyZ3MgPSBmYWxzZTsNCiAJ
QXJndW1lbnRbXSBhcmd1bWVudHMgPSBtZXRob2REZWNsYXJhdGlvbi5hcmd1bWVudHM7DQorCVBh
cmFtZXRlckluZm9bXSBwYXJhbWV0ZXJJbmZvcyA9IG51bGw7IA0KIAlpZiAoYXJndW1lbnRzICE9
IG51bGwpIHsNCi0JCWNoYXJbXVtdW10gYXJndW1lbnRUeXBlc0FuZE5hbWVzID0gZ2V0QXJndW1l
bnRzKGFyZ3VtZW50cyk7DQotCQlhcmd1bWVudFR5cGVzID0gYXJndW1lbnRUeXBlc0FuZE5hbWVz
WzBdOw0KLQkJYXJndW1lbnROYW1lcyA9IGFyZ3VtZW50VHlwZXNBbmROYW1lc1sxXTsNCisJCU9i
amVjdFtdW10gYXJndW1lbnRJbmZvcyA9IGdldEFyZ3VtZW50SW5mb3MoYXJndW1lbnRzKTsNCisJ
CXBhcmFtZXRlckluZm9zID0gKFBhcmFtZXRlckluZm9bXSkgYXJndW1lbnRJbmZvc1swXTsNCisJ
CWFyZ3VtZW50VHlwZXMgPSAoY2hhcltdW10pIGFyZ3VtZW50SW5mb3NbMV1bMF07DQorCQlhcmd1
bWVudE5hbWVzID0gKGNoYXJbXVtdKSBhcmd1bWVudEluZm9zWzFdWzFdOw0KIA0KIAkJaXNWYXJB
cmdzID0gYXJndW1lbnRzW2FyZ3VtZW50cy5sZW5ndGgtMV0uaXNWYXJBcmdzKCk7DQogCX0NCkBA
IC0yODcsNiArMzAxLDcgQEANCiAJCQltZXRob2RJbmZvLnBhcmFtZXRlck5hbWVzID0gYXJndW1l
bnROYW1lczsNCiAJCQltZXRob2RJbmZvLmV4Y2VwdGlvblR5cGVzID0gdGhyb3duRXhjZXB0aW9u
VHlwZXM7DQogCQkJbWV0aG9kSW5mby50eXBlUGFyYW1ldGVycyA9IGdldFR5cGVQYXJhbWV0ZXJJ
bmZvcyhtZXRob2REZWNsYXJhdGlvbi50eXBlUGFyYW1ldGVycygpKTsNCisJCQltZXRob2RJbmZv
LnBhcmFtZXRlckluZm9zID0gcGFyYW1ldGVySW5mb3M7DQogCQkJbWV0aG9kSW5mby5jYXRlZ29y
aWVzID0gKGNoYXJbXVtdKSB0aGlzLm5vZGVzVG9DYXRlZ29yaWVzLmdldChtZXRob2REZWNsYXJh
dGlvbik7DQogCQkJbWV0aG9kSW5mby5hbm5vdGF0aW9ucyA9IG1ldGhvZERlY2xhcmF0aW9uLmFu
bm90YXRpb25zOw0KIAkJCW1ldGhvZEluZm8uZGVjbGFyaW5nUGFja2FnZU5hbWUgPSBjdXJyZW50
UGFja2FnZSA9PSBudWxsID8gQ2hhck9wZXJhdGlvbi5OT19DSEFSIDogQ2hhck9wZXJhdGlvbi5j
b25jYXRXaXRoKGN1cnJlbnRQYWNrYWdlLnRva2VucywgJy4nKTsNCkBAIC0zNDYsNiArMzYxLDcg
QEANCiAJCW1ldGhvZEluZm8ucGFyYW1ldGVyTmFtZXMgPSBhcmd1bWVudE5hbWVzOw0KIAkJbWV0
aG9kSW5mby5leGNlcHRpb25UeXBlcyA9IHRocm93bkV4Y2VwdGlvblR5cGVzOw0KIAkJbWV0aG9k
SW5mby50eXBlUGFyYW1ldGVycyA9IGdldFR5cGVQYXJhbWV0ZXJJbmZvcyhtZXRob2REZWNsYXJh
dGlvbi50eXBlUGFyYW1ldGVycygpKTsNCisJCW1ldGhvZEluZm8ucGFyYW1ldGVySW5mb3MgPSBw
YXJhbWV0ZXJJbmZvczsNCiAJCW1ldGhvZEluZm8uY2F0ZWdvcmllcyA9IChjaGFyW11bXSkgdGhp
cy5ub2Rlc1RvQ2F0ZWdvcmllcy5nZXQobWV0aG9kRGVjbGFyYXRpb24pOw0KIAkJbWV0aG9kSW5m
by5hbm5vdGF0aW9ucyA9IG1ldGhvZERlY2xhcmF0aW9uLmFubm90YXRpb25zOw0KIAkJbWV0aG9k
SW5mby5ub2RlID0gbWV0aG9kRGVjbGFyYXRpb247DQpJbmRleDogbW9kZWwvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvcmUvQmluYXJ5TWVtYmVyLmphdmENCj09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxl
OiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL0JpbmFyeU1lbWJlci5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNp
b24gMS4zNg0KZGlmZiAtdSAtcjEuMzYgQmluYXJ5TWVtYmVyLmphdmENCi0tLSBtb2RlbC9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9CaW5hcnlNZW1iZXIuamF2YQkyOCBBcHIgMjAwOSAx
Njo1MzowMSAtMDAwMAkxLjM2DQorKysgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvQmluYXJ5TWVtYmVyLmphdmEJMTcgRmViIDIwMTEgMjI6MDU6NTcgLTAwMDANCkBAIC0xLDUg
KzEsNSBAQA0KIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDA5IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAw
MCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2Vy
dmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJl
IG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGlj
ZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBp
cyBhdmFpbGFibGUgYXQNCkBAIC00Nyw3ICs0NywxMSBAQA0KIAkJcmV0dXJuIHN0YW5kYXJkQW5u
b3RhdGlvbnM7DQogCWludCBsZW5ndGggPSBiaW5hcnlBbm5vdGF0aW9ucy5sZW5ndGg7DQogCWlu
dCBzdGFuZGFyZExlbmd0aCA9IHN0YW5kYXJkQW5ub3RhdGlvbnMubGVuZ3RoOw0KLQlJQW5ub3Rh
dGlvbltdIGFubm90YXRpb25zID0gbmV3IElBbm5vdGF0aW9uW2xlbmd0aCArIHN0YW5kYXJkTGVu
Z3RoXTsNCisJaW50IGZ1bGxMZW5ndGggPSBsZW5ndGggKyBzdGFuZGFyZExlbmd0aDsNCisJaWYg
KGZ1bGxMZW5ndGggPT0gMCkgew0KKwkJcmV0dXJuIEFubm90YXRpb24uTk9fQU5OT1RBVElPTlM7
DQorCX0NCisJSUFubm90YXRpb25bXSBhbm5vdGF0aW9ucyA9IG5ldyBJQW5ub3RhdGlvbltmdWxs
TGVuZ3RoXTsNCiAJZm9yIChpbnQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgew0KIAkJYW5ub3Rh
dGlvbnNbaV0gPSBVdGlsLmdldEFubm90YXRpb24odGhpcywgYmluYXJ5QW5ub3RhdGlvbnNbaV0s
IG51bGwpOw0KIAl9DQpAQCAtNTcsNyArNjEsNyBAQA0KIHByaXZhdGUgSUFubm90YXRpb24gZ2V0
QW5ub3RhdGlvbihjaGFyW11bXSBhbm5vdGF0aW9uTmFtZSkgew0KIAlyZXR1cm4gbmV3IEFubm90
YXRpb24odGhpcywgbmV3IFN0cmluZyhDaGFyT3BlcmF0aW9uLmNvbmNhdFdpdGgoYW5ub3RhdGlv
bk5hbWUsICcuJykpKTsNCiB9DQotcHJpdmF0ZSBJQW5ub3RhdGlvbltdIGdldFN0YW5kYXJkQW5u
b3RhdGlvbnMobG9uZyB0YWdCaXRzKSB7DQorcHJvdGVjdGVkIElBbm5vdGF0aW9uW10gZ2V0U3Rh
bmRhcmRBbm5vdGF0aW9ucyhsb25nIHRhZ0JpdHMpIHsNCiAJaWYgKCh0YWdCaXRzICYgVGFnQml0
cy5BbGxTdGFuZGFyZEFubm90YXRpb25zTWFzaykgPT0gMCkNCiAJCXJldHVybiBBbm5vdGF0aW9u
Lk5PX0FOTk9UQVRJT05TOw0KIAlBcnJheUxpc3QgYW5ub3RhdGlvbnMgPSBuZXcgQXJyYXlMaXN0
KCk7DQpJbmRleDogbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvQmluYXJ5TWV0
aG9kLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xp
cHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0JpbmFyeU1l
dGhvZC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4xMTENCmRpZmYgLXUgLXIxLjExMSBC
aW5hcnlNZXRob2QuamF2YQ0KLS0tIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3Jl
L0JpbmFyeU1ldGhvZC5qYXZhCTIwIEphbiAyMDExIDAyOjI4OjQzIC0wMDAwCTEuMTExDQorKysg
bW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvQmluYXJ5TWV0aG9kLmphdmEJMTcg
RmViIDIwMTEgMjI6MDU6NTcgLTAwMDANCkBAIC0xMSw3ICsxMSwxNiBAQA0KIHBhY2thZ2Ugb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvcmU7DQogDQogaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUu
cnVudGltZS5JUHJvZ3Jlc3NNb25pdG9yOw0KLWltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS4q
Ow0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5GbGFnczsNCitpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmNvcmUuSUFubm90YXRpb247DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklM
b2NhbFZhcmlhYmxlOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JTWVtYmVyVmFsdWVQ
YWlyOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JTWV0aG9kOw0KK2ltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuY29yZS5JVHlwZTsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSVR5
cGVQYXJhbWV0ZXI7DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLkphdmFDb3JlOw0KK2lt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5KYXZhTW9kZWxFeGNlcHRpb247DQoraW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5jb3JlLlNpZ25hdHVyZTsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNv
cmUuY29tcGlsZXIuQ2hhck9wZXJhdGlvbjsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmNsYXNzZm10LkNsYXNzRmlsZUNvbnN0YW50czsNCiBpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5JQmluYXJ5QW5ub3RhdGlvbjsNCkBAIC02
MSw2ICs3MCw1MSBAQA0KIAlJQmluYXJ5QW5ub3RhdGlvbltdIGJpbmFyeUFubm90YXRpb25zID0g
aW5mby5nZXRBbm5vdGF0aW9ucygpOw0KIAlyZXR1cm4gZ2V0QW5ub3RhdGlvbnMoYmluYXJ5QW5u
b3RhdGlvbnMsIGluZm8uZ2V0VGFnQml0cygpKTsNCiB9DQorcHVibGljIElMb2NhbFZhcmlhYmxl
W10gZ2V0UGFyYW1ldGVycygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gew0KKwlJQmluYXJ5
TWV0aG9kIGluZm8gPSAoSUJpbmFyeU1ldGhvZCkgZ2V0RWxlbWVudEluZm8oKTsNCisJaW50IGxl
bmd0aCA9IHRoaXMucGFyYW1ldGVyVHlwZXMubGVuZ3RoOw0KKwlpZiAobGVuZ3RoID09IDApIHsN
CisJCXJldHVybiBMb2NhbFZhcmlhYmxlLk5PX0xPQ0FMX1ZBUklBQkxFUzsNCisJfQ0KKwlJTG9j
YWxWYXJpYWJsZVtdIGxvY2FsVmFyaWFibGVzID0gbmV3IElMb2NhbFZhcmlhYmxlW2xlbmd0aF07
DQorCWNoYXJbXVtdIGFyZ3VtZW50TmFtZXMgPSBpbmZvLmdldEFyZ3VtZW50TmFtZXMoKTsNCisJ
aWYgKGFyZ3VtZW50TmFtZXMgPT0gbnVsbCB8fCBhcmd1bWVudE5hbWVzLmxlbmd0aCA8IGxlbmd0
aCkgew0KKwkJYXJndW1lbnROYW1lcyA9IG5ldyBjaGFyW2xlbmd0aF1bXTsNCisJCWZvciAoaW50
IGogPSAwOyBqIDwgbGVuZ3RoOyBqKyspIHsNCisJCQlhcmd1bWVudE5hbWVzW2pdID0gKCJhcmci
ICsgaikudG9DaGFyQXJyYXkoKTsgLy8kTk9OLU5MUy0xJA0KKwkJfQ0KKwl9DQorCWZvciAoaW50
IGk9IDA7IGkgPCBsZW5ndGg7IGkrKykgew0KKwkJTG9jYWxWYXJpYWJsZSBsb2NhbFZhcmlhYmxl
ID0gbmV3IExvY2FsVmFyaWFibGUoDQorCQkJCXRoaXMsDQorCQkJCW5ldyBTdHJpbmcoYXJndW1l
bnROYW1lc1tpXSksDQorCQkJCTAsDQorCQkJCS0xLA0KKwkJCQkwLA0KKwkJCQktMSwNCisJCQkJ
dGhpcy5wYXJhbWV0ZXJUeXBlc1tpXSwNCisJCQkJQW5ub3RhdGlvbi5OT19BTk5PVEFUSU9OUywN
CisJCQkJLTEsDQorCQkJCXRydWUpOw0KKwkJbG9jYWxWYXJpYWJsZXNbaV0gPSBsb2NhbFZhcmlh
YmxlOw0KKwkJSUFubm90YXRpb25bXSBhbm5vdGF0aW9ucyA9IGdldEFubm90YXRpb25zKGxvY2Fs
VmFyaWFibGUsIGluZm8uZ2V0UGFyYW1ldGVyQW5ub3RhdGlvbnMoaSksIGluZm8uZ2V0VGFnQml0
cygpKTsNCisJCWxvY2FsVmFyaWFibGUuYW5ub3RhdGlvbnMgPSBhbm5vdGF0aW9uczsNCisJfQ0K
KwlyZXR1cm4gbG9jYWxWYXJpYWJsZXM7DQorfQ0KK3ByaXZhdGUgSUFubm90YXRpb25bXSBnZXRB
bm5vdGF0aW9ucyhKYXZhRWxlbWVudCBhbm5vdGF0aW9uUGFyZW50LCBJQmluYXJ5QW5ub3RhdGlv
bltdIGJpbmFyeUFubm90YXRpb25zLCBsb25nIHRhZ0JpdHMpIHsNCisJSUFubm90YXRpb25bXSBz
dGFuZGFyZEFubm90YXRpb25zID0gZ2V0U3RhbmRhcmRBbm5vdGF0aW9ucyh0YWdCaXRzKTsNCisJ
aWYgKGJpbmFyeUFubm90YXRpb25zID09IG51bGwpDQorCQlyZXR1cm4gc3RhbmRhcmRBbm5vdGF0
aW9uczsNCisJaW50IGxlbmd0aCA9IGJpbmFyeUFubm90YXRpb25zLmxlbmd0aDsNCisJaW50IHN0
YW5kYXJkTGVuZ3RoID0gc3RhbmRhcmRBbm5vdGF0aW9ucy5sZW5ndGg7DQorCUlBbm5vdGF0aW9u
W10gYW5ub3RhdGlvbnMgPSBuZXcgSUFubm90YXRpb25bbGVuZ3RoICsgc3RhbmRhcmRMZW5ndGhd
Ow0KKwlmb3IgKGludCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7DQorCQlhbm5vdGF0aW9uc1tp
XSA9IFV0aWwuZ2V0QW5ub3RhdGlvbihhbm5vdGF0aW9uUGFyZW50LCBiaW5hcnlBbm5vdGF0aW9u
c1tpXSwgbnVsbCk7DQorCX0NCisJU3lzdGVtLmFycmF5Y29weShzdGFuZGFyZEFubm90YXRpb25z
LCAwLCBhbm5vdGF0aW9ucywgbGVuZ3RoLCBzdGFuZGFyZExlbmd0aCk7DQorCXJldHVybiBhbm5v
dGF0aW9uczsNCit9DQogcHVibGljIElNZW1iZXJWYWx1ZVBhaXIgZ2V0RGVmYXVsdFZhbHVlKCkg
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7DQogCUlCaW5hcnlNZXRob2QgaW5mbyA9IChJQmlu
YXJ5TWV0aG9kKSBnZXRFbGVtZW50SW5mbygpOw0KIAlPYmplY3QgZGVmYXVsdFZhbHVlID0gaW5m
by5nZXREZWZhdWx0VmFsdWUoKTsNCkluZGV4OiBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29yZS9DbGFzc0ZpbGVJbmZvLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9v
dC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL0NsYXNzRmlsZUluZm8uamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNDkN
CmRpZmYgLXUgLXIxLjQ5IENsYXNzRmlsZUluZm8uamF2YQ0KLS0tIG1vZGVsL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL0NsYXNzRmlsZUluZm8uamF2YQkzIFNlcCAyMDEwIDE1OjIwOjAz
IC0wMDAwCTEuNDkNCisrKyBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9DbGFz
c0ZpbGVJbmZvLmphdmEJMTcgRmViIDIwMTEgMjI6MDU6NTggLTAwMDANCkBAIC0xLDUgKzEsNSBA
QA0KIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEw
IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAx
MSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBU
aGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUg
YXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2
MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFp
bGFibGUgYXQNCkBAIC00MSwyMyArNDEsMjYgQEANCiAJICovDQogCXByb3RlY3RlZCBJVHlwZVBh
cmFtZXRlcltdIHR5cGVQYXJhbWV0ZXJzOw0KIA0KK3ByaXZhdGUgdm9pZCBnZW5lcmF0ZUFubm90
YXRpb25zSW5mb3MoSmF2YUVsZW1lbnQgbWVtYmVyLCBJQmluYXJ5QW5ub3RhdGlvbltdIGJpbmFy
eUFubm90YXRpb25zLCBsb25nIHRhZ0JpdHMsIEhhc2hNYXAgbmV3RWxlbWVudHMpIHsNCisJZ2Vu
ZXJhdGVBbm5vdGF0aW9uc0luZm9zKG1lbWJlciwgbnVsbCwgYmluYXJ5QW5ub3RhdGlvbnMsIHRh
Z0JpdHMsIG5ld0VsZW1lbnRzKTsNCit9DQogLyoqDQogICogQ3JlYXRlcyB0aGUgaGFuZGxlcyBh
bmQgaW5mb3MgZm9yIHRoZSBhbm5vdGF0aW9ucyBvZiB0aGUgZ2l2ZW4gYmluYXJ5IG1lbWJlci4N
CiAgKiBBZGRzIG5ldyBoYW5kbGVzIHRvIHRoZSBnaXZlbiB2ZWN0b3IuDQogICovDQotcHJpdmF0
ZSB2b2lkIGdlbmVyYXRlQW5ub3RhdGlvbnNJbmZvcyhCaW5hcnlNZW1iZXIgbWVtYmVyLCBJQmlu
YXJ5QW5ub3RhdGlvbltdIGJpbmFyeUFubm90YXRpb25zLCBsb25nIHRhZ0JpdHMsIEhhc2hNYXAg
bmV3RWxlbWVudHMpIHsNCitwcml2YXRlIHZvaWQgZ2VuZXJhdGVBbm5vdGF0aW9uc0luZm9zKEph
dmFFbGVtZW50IG1lbWJlciwgY2hhcltdIHBhcmFtZXRlck5hbWUsIElCaW5hcnlBbm5vdGF0aW9u
W10gYmluYXJ5QW5ub3RhdGlvbnMsIGxvbmcgdGFnQml0cywgSGFzaE1hcCBuZXdFbGVtZW50cykg
ew0KIAlpZiAoYmluYXJ5QW5ub3RhdGlvbnMgIT0gbnVsbCkgew0KIAkJZm9yIChpbnQgaSA9IDAs
IGxlbmd0aCA9IGJpbmFyeUFubm90YXRpb25zLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7DQog
CQkJSUJpbmFyeUFubm90YXRpb24gYW5ub3RhdGlvbkluZm8gPSBiaW5hcnlBbm5vdGF0aW9uc1tp
XTsNCi0JCQlnZW5lcmF0ZUFubm90YXRpb25JbmZvKG1lbWJlciwgbmV3RWxlbWVudHMsIGFubm90
YXRpb25JbmZvKTsNCisJCQlnZW5lcmF0ZUFubm90YXRpb25JbmZvKG1lbWJlciwgcGFyYW1ldGVy
TmFtZSwgbmV3RWxlbWVudHMsIGFubm90YXRpb25JbmZvLCBudWxsKTsNCiAJCX0NCiAJfQ0KLQln
ZW5lcmF0ZVN0YW5kYXJkQW5ub3RhdGlvbnNJbmZvcyhtZW1iZXIsIHRhZ0JpdHMsIG5ld0VsZW1l
bnRzKTsNCi19DQotcHJpdmF0ZSB2b2lkIGdlbmVyYXRlQW5ub3RhdGlvbkluZm8oSmF2YUVsZW1l
bnQgcGFyZW50LCBIYXNoTWFwIG5ld0VsZW1lbnRzLCBJQmluYXJ5QW5ub3RhdGlvbiBhbm5vdGF0
aW9uSW5mbykgew0KLQlnZW5lcmF0ZUFubm90YXRpb25JbmZvKHBhcmVudCwgbmV3RWxlbWVudHMs
IGFubm90YXRpb25JbmZvLCBudWxsKTsNCisJZ2VuZXJhdGVTdGFuZGFyZEFubm90YXRpb25zSW5m
b3MobWVtYmVyLCBwYXJhbWV0ZXJOYW1lLCB0YWdCaXRzLCBuZXdFbGVtZW50cyk7DQogfQ0KIHBy
aXZhdGUgdm9pZCBnZW5lcmF0ZUFubm90YXRpb25JbmZvKEphdmFFbGVtZW50IHBhcmVudCwgSGFz
aE1hcCBuZXdFbGVtZW50cywgSUJpbmFyeUFubm90YXRpb24gYW5ub3RhdGlvbkluZm8sIFN0cmlu
ZyBtZW1iZXJWYWx1ZVBhaXJOYW1lKSB7DQorCWdlbmVyYXRlQW5ub3RhdGlvbkluZm8ocGFyZW50
LCBudWxsLCBuZXdFbGVtZW50cywgYW5ub3RhdGlvbkluZm8sIG1lbWJlclZhbHVlUGFpck5hbWUp
Ow0KK30NCitwcml2YXRlIHZvaWQgZ2VuZXJhdGVBbm5vdGF0aW9uSW5mbyhKYXZhRWxlbWVudCBw
YXJlbnQsIGNoYXJbXSBwYXJhbWV0ZXJOYW1lLCBIYXNoTWFwIG5ld0VsZW1lbnRzLCBJQmluYXJ5
QW5ub3RhdGlvbiBhbm5vdGF0aW9uSW5mbywgU3RyaW5nIG1lbWJlclZhbHVlUGFpck5hbWUpIHsN
CiAJY2hhcltdIHR5cGVOYW1lID0gb3JnLmVjbGlwc2UuamR0LmNvcmUuU2lnbmF0dXJlLnRvQ2hh
ckFycmF5KENoYXJPcGVyYXRpb24ucmVwbGFjZU9uQ29weShhbm5vdGF0aW9uSW5mby5nZXRUeXBl
TmFtZSgpLCAnLycsICcuJykpOw0KIAlBbm5vdGF0aW9uIGFubm90YXRpb24gPSBuZXcgQW5ub3Rh
dGlvbihwYXJlbnQsIG5ldyBTdHJpbmcodHlwZU5hbWUpLCBtZW1iZXJWYWx1ZVBhaXJOYW1lKTsN
CiAJd2hpbGUgKG5ld0VsZW1lbnRzLmNvbnRhaW5zS2V5KGFubm90YXRpb24pKSB7DQpAQCAtODEs
MjkgKzg0LDI5IEBADQogCQl9DQogCX0NCiB9DQotcHJpdmF0ZSB2b2lkIGdlbmVyYXRlU3RhbmRh
cmRBbm5vdGF0aW9uc0luZm9zKEJpbmFyeU1lbWJlciBtZW1iZXIsIGxvbmcgdGFnQml0cywgSGFz
aE1hcCBuZXdFbGVtZW50cykgew0KK3ByaXZhdGUgdm9pZCBnZW5lcmF0ZVN0YW5kYXJkQW5ub3Rh
dGlvbnNJbmZvcyhKYXZhRWxlbWVudCBqYXZhRWxlbWVudCwgY2hhcltdIHBhcmFtZXRlck5hbWUs
IGxvbmcgdGFnQml0cywgSGFzaE1hcCBuZXdFbGVtZW50cykgew0KIAlpZiAoKHRhZ0JpdHMgJiBU
YWdCaXRzLkFsbFN0YW5kYXJkQW5ub3RhdGlvbnNNYXNrKSA9PSAwKQ0KIAkJcmV0dXJuOw0KIAlp
ZiAoKHRhZ0JpdHMgJiBUYWdCaXRzLkFubm90YXRpb25UYXJnZXRNQVNLKSAhPSAwKSB7DQotCQln
ZW5lcmF0ZVN0YW5kYXJkQW5ub3RhdGlvbihtZW1iZXIsIFR5cGVDb25zdGFudHMuSkFWQV9MQU5H
X0FOTk9UQVRJT05fVEFSR0VULCBnZXRUYXJnZXRFbGVtZW50VHlwZXModGFnQml0cyksIG5ld0Vs
ZW1lbnRzKTsNCisJCWdlbmVyYXRlU3RhbmRhcmRBbm5vdGF0aW9uKGphdmFFbGVtZW50LCBUeXBl
Q29uc3RhbnRzLkpBVkFfTEFOR19BTk5PVEFUSU9OX1RBUkdFVCwgZ2V0VGFyZ2V0RWxlbWVudFR5
cGVzKHRhZ0JpdHMpLCBuZXdFbGVtZW50cyk7DQogCX0NCiAJaWYgKCh0YWdCaXRzICYgVGFnQml0
cy5Bbm5vdGF0aW9uUmV0ZW50aW9uTUFTSykgIT0gMCkgew0KLQkJZ2VuZXJhdGVTdGFuZGFyZEFu
bm90YXRpb24obWVtYmVyLCBUeXBlQ29uc3RhbnRzLkpBVkFfTEFOR19BTk5PVEFUSU9OX1JFVEVO
VElPTiwgZ2V0UmV0ZW50aW9uUG9saWN5KHRhZ0JpdHMpLCBuZXdFbGVtZW50cyk7DQorCQlnZW5l
cmF0ZVN0YW5kYXJkQW5ub3RhdGlvbihqYXZhRWxlbWVudCwgVHlwZUNvbnN0YW50cy5KQVZBX0xB
TkdfQU5OT1RBVElPTl9SRVRFTlRJT04sIGdldFJldGVudGlvblBvbGljeSh0YWdCaXRzKSwgbmV3
RWxlbWVudHMpOw0KIAl9DQogCWlmICgodGFnQml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlvbkRlcHJl
Y2F0ZWQpICE9IDApIHsNCi0JCWdlbmVyYXRlU3RhbmRhcmRBbm5vdGF0aW9uKG1lbWJlciwgVHlw
ZUNvbnN0YW50cy5KQVZBX0xBTkdfREVQUkVDQVRFRCwgQW5ub3RhdGlvbi5OT19NRU1CRVJfVkFM
VUVfUEFJUlMsIG5ld0VsZW1lbnRzKTsNCisJCWdlbmVyYXRlU3RhbmRhcmRBbm5vdGF0aW9uKGph
dmFFbGVtZW50LCBUeXBlQ29uc3RhbnRzLkpBVkFfTEFOR19ERVBSRUNBVEVELCBBbm5vdGF0aW9u
Lk5PX01FTUJFUl9WQUxVRV9QQUlSUywgbmV3RWxlbWVudHMpOw0KIAl9DQogCWlmICgodGFnQml0
cyAmIFRhZ0JpdHMuQW5ub3RhdGlvbkRvY3VtZW50ZWQpICE9IDApIHsNCi0JCWdlbmVyYXRlU3Rh
bmRhcmRBbm5vdGF0aW9uKG1lbWJlciwgVHlwZUNvbnN0YW50cy5KQVZBX0xBTkdfQU5OT1RBVElP
Tl9ET0NVTUVOVEVELCBBbm5vdGF0aW9uLk5PX01FTUJFUl9WQUxVRV9QQUlSUywgbmV3RWxlbWVu
dHMpOw0KKwkJZ2VuZXJhdGVTdGFuZGFyZEFubm90YXRpb24oamF2YUVsZW1lbnQsIFR5cGVDb25z
dGFudHMuSkFWQV9MQU5HX0FOTk9UQVRJT05fRE9DVU1FTlRFRCwgQW5ub3RhdGlvbi5OT19NRU1C
RVJfVkFMVUVfUEFJUlMsIG5ld0VsZW1lbnRzKTsNCiAJfQ0KIAlpZiAoKHRhZ0JpdHMgJiBUYWdC
aXRzLkFubm90YXRpb25Jbmhlcml0ZWQpICE9IDApIHsNCi0JCWdlbmVyYXRlU3RhbmRhcmRBbm5v
dGF0aW9uKG1lbWJlciwgVHlwZUNvbnN0YW50cy5KQVZBX0xBTkdfQU5OT1RBVElPTl9JTkhFUklU
RUQsIEFubm90YXRpb24uTk9fTUVNQkVSX1ZBTFVFX1BBSVJTLCBuZXdFbGVtZW50cyk7DQorCQln
ZW5lcmF0ZVN0YW5kYXJkQW5ub3RhdGlvbihqYXZhRWxlbWVudCwgVHlwZUNvbnN0YW50cy5KQVZB
X0xBTkdfQU5OT1RBVElPTl9JTkhFUklURUQsIEFubm90YXRpb24uTk9fTUVNQkVSX1ZBTFVFX1BB
SVJTLCBuZXdFbGVtZW50cyk7DQogCX0NCiAJLy8gbm90ZSB0aGF0IEpBVkFfTEFOR19TVVBQUkVT
U1dBUk5JTkdTIGFuZCBKQVZBX0xBTkdfT1ZFUlJJREUgY2Fubm90IGFwcGVhciBpbiBiaW5hcmll
cw0KIH0NCiANCi1wcml2YXRlIHZvaWQgZ2VuZXJhdGVTdGFuZGFyZEFubm90YXRpb24oQmluYXJ5
TWVtYmVyIG1lbWJlciwgY2hhcltdW10gdHlwZU5hbWUsIElNZW1iZXJWYWx1ZVBhaXJbXSBtZW1i
ZXJzLCBIYXNoTWFwIG5ld0VsZW1lbnRzKSB7DQotCUlBbm5vdGF0aW9uIGFubm90YXRpb24gPSBu
ZXcgQW5ub3RhdGlvbihtZW1iZXIsIG5ldyBTdHJpbmcoQ2hhck9wZXJhdGlvbi5jb25jYXRXaXRo
KHR5cGVOYW1lLCAnLicpKSk7DQorcHJpdmF0ZSB2b2lkIGdlbmVyYXRlU3RhbmRhcmRBbm5vdGF0
aW9uKEphdmFFbGVtZW50IGphdmFFbGVtZW50LCBjaGFyW11bXSB0eXBlTmFtZSwgSU1lbWJlclZh
bHVlUGFpcltdIG1lbWJlcnMsIEhhc2hNYXAgbmV3RWxlbWVudHMpIHsNCisJSUFubm90YXRpb24g
YW5ub3RhdGlvbiA9IG5ldyBBbm5vdGF0aW9uKGphdmFFbGVtZW50LCBuZXcgU3RyaW5nKENoYXJP
cGVyYXRpb24uY29uY2F0V2l0aCh0eXBlTmFtZSwgJy4nKSkpOw0KIAlBbm5vdGF0aW9uSW5mbyBh
bm5vdGF0aW9uSW5mbyA9IG5ldyBBbm5vdGF0aW9uSW5mbygpOw0KIAlhbm5vdGF0aW9uSW5mby5t
ZW1iZXJzID0gbWVtYmVyczsNCiAJbmV3RWxlbWVudHMucHV0KGFubm90YXRpb24sIGFubm90YXRp
b25JbmZvKTsNCkBAIC0yNjgsNyArMjcxLDcgQEANCiAJCQkJZmluYWwgU3RyaW5nW10gcGFyYW1l
dGVyVHlwZXMgPSBTaWduYXR1cmUuZ2V0UGFyYW1ldGVyVHlwZXMobmV3IFN0cmluZyhkZXNjcmlw
dG9yKSk7DQogCQkJCXBOYW1lc1swXSA9IHBhcmFtZXRlclR5cGVzWzBdOw0KIAkJCX0NCi0JCX1j
YXRjaCAoSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uIGUpIHsNCisJCX0gY2F0Y2ggKElsbGVnYWxB
cmd1bWVudEV4Y2VwdGlvbiBlKSB7DQogCQkJLy8gcHJvdGVjdCBhZ2FpbnN0IG1hbGZvcm1lZCAu
Y2xhc3MgZmlsZSAoZS5nLiBjb20vc3VuL2NyeXB0by9wcm92aWRlci9TdW5KQ0VfYi5jbGFzcyBo
YXMgYSAnYScgZ2VuZXJpYyBzaWduYXR1cmUpDQogCQkJc2lnbmF0dXJlID0gbWV0aG9kSW5mby5n
ZXRNZXRob2REZXNjcmlwdG9yKCk7DQogCQkJcE5hbWVzID0gU2lnbmF0dXJlLmdldFBhcmFtZXRl
clR5cGVzKG5ldyBTdHJpbmcoc2lnbmF0dXJlKSk7DQpAQCAtMjkwLDEzICsyOTMsMzggQEANCiAJ
CUJpbmFyeU1ldGhvZCBtZXRob2QgPSBuZXcgQmluYXJ5TWV0aG9kKChKYXZhRWxlbWVudCl0eXBl
LCBzZWxlY3RvciwgcE5hbWVzKTsNCiAJCWNoaWxkcmVuSGFuZGxlcy5hZGQobWV0aG9kKTsNCiAN
Ci0JCS8vIGVuc3VyZSB0aGF0IDIgYmluYXJ5IG1ldGhvZHMgd2l0aCB0aGUgc2FtZSBzaWduYXR1
cmUgYnV0IHdpdGggZGlmZmVyZW50IHJldHVybiB0eXBlcyBoYXZlIGRpZmZlcmVudCBvY2N1cmVu
Y2UgY291bnRzLg0KKwkJLy8gZW5zdXJlIHRoYXQgMiBiaW5hcnkgbWV0aG9kcyB3aXRoIHRoZSBz
YW1lIHNpZ25hdHVyZSBidXQgd2l0aCBkaWZmZXJlbnQgcmV0dXJuIHR5cGVzIGhhdmUgZGlmZmVy
ZW50IG9jY3VycmVuY2UgY291bnRzLg0KIAkJLy8gKGNhc2Ugb2YgYnJpZGdlIG1ldGhvZHMgaW4g
MS41KQ0KIAkJd2hpbGUgKG5ld0VsZW1lbnRzLmNvbnRhaW5zS2V5KG1ldGhvZCkpDQogCQkJbWV0
aG9kLm9jY3VycmVuY2VDb3VudCsrOw0KIA0KIAkJbmV3RWxlbWVudHMucHV0KG1ldGhvZCwgbWV0
aG9kSW5mbyk7DQogDQorCQlpbnQgbWF4ID0gcE5hbWVzLmxlbmd0aDsNCisJCWNoYXJbXVtdIGFy
Z3VtZW50TmFtZXMgPSBtZXRob2RJbmZvLmdldEFyZ3VtZW50TmFtZXMoKTsNCisJCWlmIChhcmd1
bWVudE5hbWVzID09IG51bGwgfHwgYXJndW1lbnROYW1lcy5sZW5ndGggPCBtYXgpIHsNCisJCQlh
cmd1bWVudE5hbWVzID0gbmV3IGNoYXJbbWF4XVtdOw0KKwkJCWZvciAoaW50IGogPSAwOyBqIDwg
bWF4OyBqKyspIHsNCisJCQkJYXJndW1lbnROYW1lc1tqXSA9ICgiYXJnIiArIGopLnRvQ2hhckFy
cmF5KCk7IC8vJE5PTi1OTFMtMSQNCisJCQl9DQorCQl9DQorCQlmb3IgKGludCBqID0gMDsgaiA8
IG1heDsgaisrKSB7DQorCQkJSUJpbmFyeUFubm90YXRpb25bXSBwYXJhbWV0ZXJBbm5vdGF0aW9u
cyA9IG1ldGhvZEluZm8uZ2V0UGFyYW1ldGVyQW5ub3RhdGlvbnMoaik7DQorCQkJaWYgKHBhcmFt
ZXRlckFubm90YXRpb25zICE9IG51bGwpIHsNCisJCQkJTG9jYWxWYXJpYWJsZSBsb2NhbFZhcmlh
YmxlID0gbmV3IExvY2FsVmFyaWFibGUoDQorCQkJCQkJbWV0aG9kLA0KKwkJCQkJCW5ldyBTdHJp
bmcoYXJndW1lbnROYW1lc1tqXSksDQorCQkJCQkJMCwNCisJCQkJCQktMSwNCisJCQkJCQkwLA0K
KwkJCQkJCS0xLA0KKwkJCQkJCW1ldGhvZC5wYXJhbWV0ZXJUeXBlc1tqXSwNCisJCQkJCQlBbm5v
dGF0aW9uLk5PX0FOTk9UQVRJT05TLA0KKwkJCQkJCS0xLA0KKwkJCQkJCXRydWUpOw0KKwkJCQln
ZW5lcmF0ZUFubm90YXRpb25zSW5mb3MobG9jYWxWYXJpYWJsZSwgYXJndW1lbnROYW1lc1tqXSwg
cGFyYW1ldGVyQW5ub3RhdGlvbnMsIG1ldGhvZEluZm8uZ2V0VGFnQml0cygpLCBuZXdFbGVtZW50
cyk7DQorCQkJfQ0KKwkJfQ0KIAkJZ2VuZXJhdGVUeXBlUGFyYW1ldGVySW5mb3MobWV0aG9kLCBz
aWduYXR1cmUsIG5ld0VsZW1lbnRzLCB0eXBlUGFyYW1ldGVySGFuZGxlcyk7DQogCQlnZW5lcmF0
ZUFubm90YXRpb25zSW5mb3MobWV0aG9kLCBtZXRob2RJbmZvLmdldEFubm90YXRpb25zKCksIG1l
dGhvZEluZm8uZ2V0VGFnQml0cygpLCBuZXdFbGVtZW50cyk7DQogCQlPYmplY3QgZGVmYXVsdFZh
bHVlID0gbWV0aG9kSW5mby5nZXREZWZhdWx0VmFsdWUoKTsNCkluZGV4OiBtb2RlbC9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Db21waWxhdGlvblVuaXRTdHJ1Y3R1cmVSZXF1ZXN0b3Iu
amF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvQ29tcGlsYXRpb25V
bml0U3RydWN0dXJlUmVxdWVzdG9yLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjg3DQpk
aWZmIC11IC1yMS44NyBDb21waWxhdGlvblVuaXRTdHJ1Y3R1cmVSZXF1ZXN0b3IuamF2YQ0KLS0t
IG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0NvbXBpbGF0aW9uVW5pdFN0cnVj
dHVyZVJlcXVlc3Rvci5qYXZhCTI4IEp1bCAyMDEwIDE2OjE3OjAxIC0wMDAwCTEuODcNCisrKyBt
b2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Db21waWxhdGlvblVuaXRTdHJ1Y3R1
cmVSZXF1ZXN0b3IuamF2YQkxNyBGZWIgMjAxMSAyMjowNTo1OCAtMDAwMA0KQEAgLTEsNSArMSw1
IEBADQogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIw
MTAgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAwLCAy
MDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQu
IFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFk
ZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNl
IHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2
YWlsYWJsZSBhdA0KQEAgLTE3LDExICsxNywxOSBAQA0KIGltcG9ydCBqYXZhLnV0aWwuU3RhY2s7
DQogDQogaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5Bc3NlcnQ7DQotaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5jb3JlLio7DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLkZsYWdz
Ow0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JQW5ub3RhdGlvbjsNCitpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmNvcmUuSUNvbXBpbGF0aW9uVW5pdDsNCitpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmNvcmUuSUphdmFFbGVtZW50Ow0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JTWVt
YmVyVmFsdWVQYWlyOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JVHlwZVBhcmFtZXRl
cjsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuU2lnbmF0dXJlOw0KIGltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5DYXRlZ29yaXplZFByb2JsZW07DQogaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLkNoYXJPcGVyYXRpb247DQogaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLklQcm9ibGVtOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIuSVNvdXJjZUVsZW1lbnRSZXF1ZXN0b3I7DQoraW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQVNUTm9kZTsNCitpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bcmd1bWVudDsNCiBpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5BcnJheUluaXRpYWxpemVyOw0KIGlt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkNsYXNzTGl0ZXJhbEFj
Y2VzczsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5FeHBy
ZXNzaW9uOw0KQEAgLTM5LDcgKzQ3LDYgQEANCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLnV0aWwuSGFzaHRhYmxlT2ZPYmplY3RUb0ludDsNCiBpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvcmUudXRpbC5SZWZlcmVuY2VJbmZvQWRhcHRlcjsNCiBpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUudXRpbC5VdGlsOw0KLWltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFTVE5vZGU7DQogLyoqDQogICogQSBy
ZXF1ZXN0b3IgZm9yIHRoZSBmdXp6eSBwYXJzZXIsIHVzZWQgdG8gY29tcHV0ZSB0aGUgY2hpbGRy
ZW4gb2YgYW4gSUNvbXBpbGF0aW9uVW5pdC4NCiAgKi8NCkBAIC00MjcsOCArNDM0LDUzIEBADQog
CQkJYWNjZXB0QW5ub3RhdGlvbihhbm5vdGF0aW9uLCBpbmZvLCBoYW5kbGUpOw0KIAkJfQ0KIAl9
DQorCS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMzQ3
ODMNCisJLy8gUHJvY2VzcyB0aGUgcGFyYW1ldGVyIGFubm90YXRpb25zIGZyb20gdGhlIGFyZ3Vt
ZW50cw0KKwlpZiAobWV0aG9kSW5mby5ub2RlICE9IG51bGwgJiYgbWV0aG9kSW5mby5ub2RlLmFy
Z3VtZW50cyAhPSBudWxsKSB7DQorCQlpbmZvLmFyZ3VtZW50cyA9IGFjY2VwdE1ldGhvZFBhcmFt
ZXRlcnMobWV0aG9kSW5mby5ub2RlLmFyZ3VtZW50cywgaGFuZGxlLCBtZXRob2RJbmZvKTsNCisJ
fQ0KIAlyZXR1cm4gaW5mbzsNCiB9DQorcHJpdmF0ZSBMb2NhbFZhcmlhYmxlW10gYWNjZXB0TWV0
aG9kUGFyYW1ldGVycyhBcmd1bWVudFtdIGFyZ3VtZW50cywgSmF2YUVsZW1lbnQgbWV0aG9kSGFu
ZGxlLCBNZXRob2RJbmZvIG1ldGhvZEluZm8pIHsNCisJaWYgKGFyZ3VtZW50cyA9PSBudWxsKSBy
ZXR1cm4gbnVsbDsNCisJTG9jYWxWYXJpYWJsZVtdIHJlc3VsdCA9IG5ldyBMb2NhbFZhcmlhYmxl
W2FyZ3VtZW50cy5sZW5ndGhdOw0KKwlBbm5vdGF0aW9uW11bXSBwYXJhbUFubm90YXRpb25zID0g
bmV3IEFubm90YXRpb25bYXJndW1lbnRzLmxlbmd0aF1bXTsNCisJZm9yKGludCBpID0gMDsgaSA8
IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgew0KKwkJQXJndW1lbnQgYXJndW1lbnQgPSBhcmd1bWVu
dHNbaV07DQorCQlBbm5vdGF0YWJsZUluZm8gbG9jYWxWYXJJbmZvID0gbmV3IEFubm90YXRhYmxl
SW5mbygpOw0KKwkJbG9jYWxWYXJJbmZvLnNldFNvdXJjZVJhbmdlU3RhcnQoYXJndW1lbnQuZGVj
bGFyYXRpb25Tb3VyY2VTdGFydCk7DQorCQlsb2NhbFZhckluZm8uc2V0U291cmNlUmFuZ2VFbmQo
YXJndW1lbnQuZGVjbGFyYXRpb25Tb3VyY2VTdGFydCk7DQorCQlsb2NhbFZhckluZm8uc2V0TmFt
ZVNvdXJjZVN0YXJ0KGFyZ3VtZW50LnNvdXJjZVN0YXJ0KTsNCisJCWxvY2FsVmFySW5mby5zZXRO
YW1lU291cmNlRW5kKGFyZ3VtZW50LnNvdXJjZUVuZCk7DQorCQkNCisJCVN0cmluZyBwYXJhbVR5
cGVTaWcgPSBKYXZhTW9kZWxNYW5hZ2VyLmdldEphdmFNb2RlbE1hbmFnZXIoKS5pbnRlcm4oU2ln
bmF0dXJlLmNyZWF0ZVR5cGVTaWduYXR1cmUobWV0aG9kSW5mby5wYXJhbWV0ZXJUeXBlc1tpXSwg
ZmFsc2UpKTsNCisJCXJlc3VsdFtpXSA9IG5ldyBMb2NhbFZhcmlhYmxlKA0KKwkJCQltZXRob2RI
YW5kbGUsDQorCQkJCW5ldyBTdHJpbmcoYXJndW1lbnQubmFtZSksDQorCQkJCWFyZ3VtZW50LmRl
Y2xhcmF0aW9uU291cmNlU3RhcnQsDQorCQkJCWFyZ3VtZW50LmRlY2xhcmF0aW9uU291cmNlRW5k
LA0KKwkJCQlhcmd1bWVudC5zb3VyY2VTdGFydCwNCisJCQkJYXJndW1lbnQuc291cmNlRW5kLA0K
KwkJCQlwYXJhbVR5cGVTaWcsDQorCQkJCWFyZ3VtZW50LmFubm90YXRpb25zLA0KKwkJCQlhcmd1
bWVudC5tb2RpZmllcnMsIA0KKwkJCQl0cnVlKTsNCisJCXRoaXMubmV3RWxlbWVudHMucHV0KHJl
c3VsdFtpXSwgbG9jYWxWYXJJbmZvKTsNCisJCXRoaXMuaW5mb1N0YWNrLnB1c2gobG9jYWxWYXJJ
bmZvKTsNCisJCXRoaXMuaGFuZGxlU3RhY2sucHVzaChyZXN1bHRbaV0pOw0KKwkJaWYgKGFyZ3Vt
ZW50LmFubm90YXRpb25zICE9IG51bGwpIHsNCisJCQlwYXJhbUFubm90YXRpb25zW2ldID0gbmV3
IEFubm90YXRpb25bYXJndW1lbnQuYW5ub3RhdGlvbnMubGVuZ3RoXTsNCisJCQlmb3IgKGludCAg
aiA9IDA7IGogPCBhcmd1bWVudC5hbm5vdGF0aW9ucy5sZW5ndGg7IGorKyApIHsNCisJCQkJb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uIGFubm90YXRpb24g
PSBhcmd1bWVudC5hbm5vdGF0aW9uc1tqXTsNCisJCQkJYWNjZXB0QW5ub3RhdGlvbihhbm5vdGF0
aW9uLCBsb2NhbFZhckluZm8sIHJlc3VsdFtpXSk7DQorCQkJfQ0KKwkJfQ0KKwkJdGhpcy5pbmZv
U3RhY2sucG9wKCk7DQorCQl0aGlzLmhhbmRsZVN0YWNrLnBvcCgpOw0KKwl9DQorCXJldHVybiBy
ZXN1bHQ7DQorfQ0KKw0KIC8qKg0KICAqIEBzZWUgSVNvdXJjZUVsZW1lbnRSZXF1ZXN0b3INCiAg
Ki8NCkluZGV4OiBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Mb2NhbFZhcmlh
YmxlLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xp
cHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0xvY2FsVmFy
aWFibGUuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMzENCmRpZmYgLXUgLXIxLjMxIExv
Y2FsVmFyaWFibGUuamF2YQ0KLS0tIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3Jl
L0xvY2FsVmFyaWFibGUuamF2YQk3IFNlcCAyMDEwIDE5OjE0OjI2IC0wMDAwCTEuMzENCisrKyBt
b2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Mb2NhbFZhcmlhYmxlLmphdmEJMTcg
RmViIDIwMTEgMjI6MDU6NTggLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEwIElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24g
YW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRo
ZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRo
ZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNj
b21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC0zNCw2
ICszNCw4IEBADQogDQogcHVibGljIGNsYXNzIExvY2FsVmFyaWFibGUgZXh0ZW5kcyBTb3VyY2VS
ZWZFbGVtZW50IGltcGxlbWVudHMgSUxvY2FsVmFyaWFibGUgew0KIA0KKwlwdWJsaWMgc3RhdGlj
IGZpbmFsIElMb2NhbFZhcmlhYmxlW10gTk9fTE9DQUxfVkFSSUFCTEVTID0gbmV3IElMb2NhbFZh
cmlhYmxlWzBdOw0KKwkNCiAJU3RyaW5nIG5hbWU7DQogCXB1YmxpYyBpbnQgZGVjbGFyYXRpb25T
b3VyY2VTdGFydCwgZGVjbGFyYXRpb25Tb3VyY2VFbmQ7DQogCXB1YmxpYyBpbnQgbmFtZVN0YXJ0
LCBuYW1lRW5kOw0KQEAgLTY2LDYgKzY4LDMwIEBADQogCQl0aGlzLmlzUGFyYW1ldGVyID0gaXNQ
YXJhbWV0ZXI7DQogCX0NCiANCisJcHVibGljIExvY2FsVmFyaWFibGUoDQorCQkJSmF2YUVsZW1l
bnQgcGFyZW50LA0KKwkJCVN0cmluZyBuYW1lLA0KKwkJCWludCBkZWNsYXJhdGlvblNvdXJjZVN0
YXJ0LA0KKwkJCWludCBkZWNsYXJhdGlvblNvdXJjZUVuZCwNCisJCQlpbnQgbmFtZVN0YXJ0LA0K
KwkJCWludCBuYW1lRW5kLA0KKwkJCVN0cmluZyB0eXBlU2lnbmF0dXJlLA0KKwkJCUlBbm5vdGF0
aW9uW10gYW5ub3RhdGlvbnMsDQorCQkJaW50IGZsYWdzLA0KKwkJCWJvb2xlYW4gaXNQYXJhbWV0
ZXIpIHsNCisNCisJCXN1cGVyKHBhcmVudCk7DQorCQl0aGlzLm5hbWUgPSBuYW1lOw0KKwkJdGhp
cy5kZWNsYXJhdGlvblNvdXJjZVN0YXJ0ID0gZGVjbGFyYXRpb25Tb3VyY2VTdGFydDsNCisJCXRo
aXMuZGVjbGFyYXRpb25Tb3VyY2VFbmQgPSBkZWNsYXJhdGlvblNvdXJjZUVuZDsNCisJCXRoaXMu
bmFtZVN0YXJ0ID0gbmFtZVN0YXJ0Ow0KKwkJdGhpcy5uYW1lRW5kID0gbmFtZUVuZDsNCisJCXRo
aXMudHlwZVNpZ25hdHVyZSA9IHR5cGVTaWduYXR1cmU7DQorCQl0aGlzLmFubm90YXRpb25zID0g
YW5ub3RhdGlvbnM7DQorCQl0aGlzLmZsYWdzID0gZmxhZ3M7DQorCQl0aGlzLmlzUGFyYW1ldGVy
ID0gaXNQYXJhbWV0ZXI7DQorCX0NCisNCiAJcHJvdGVjdGVkIHZvaWQgY2xvc2luZyhPYmplY3Qg
aW5mbykgew0KIAkJLy8gYSBsb2NhbCB2YXJpYWJsZSBoYXMgbm8gaW5mbw0KIAl9DQpAQCAtMjg4
LDEwICszMTQsNTkgQEANCiAJICogQHNpbmNlIDMuNw0KIAkgKi8NCiAJcHVibGljIGludCBnZXRG
bGFncygpIHsNCisJCWlmICh0aGlzLmZsYWdzID09IC0xKSB7DQorCQkJU291cmNlTWFwcGVyIG1h
cHBlcj0gZ2V0U291cmNlTWFwcGVyKCk7DQorCQkJaWYgKG1hcHBlciAhPSBudWxsKSB7DQorCQkJ
CXRyeSB7DQorCQkJCQkvLyBlbnN1cmUgdGhlIGNsYXNzIGZpbGUncyBidWZmZXIgaXMgb3BlbiBz
byB0aGF0IHNvdXJjZSByYW5nZXMgYXJlIGNvbXB1dGVkDQorCQkJCQlDbGFzc0ZpbGUgY2xhc3NG
aWxlID0gKENsYXNzRmlsZSlnZXRDbGFzc0ZpbGUoKTsNCisJCQkJCWlmIChjbGFzc0ZpbGUgIT0g
bnVsbCkgew0KKwkJCQkJCWNsYXNzRmlsZS5nZXRCdWZmZXIoKTsNCisJCQkJCQlyZXR1cm4gbWFw
cGVyLmdldEZsYWdzKHRoaXMpOw0KKwkJCQkJfQ0KKwkJCQl9IGNhdGNoKEphdmFNb2RlbEV4Y2Vw
dGlvbiBlKSB7DQorCQkJCQkvLyBpZ25vcmUNCisJCQkJfQ0KKwkJCX0NCisJCQlyZXR1cm4gMDsN
CisJCX0NCiAJCXJldHVybiB0aGlzLmZsYWdzOw0KIAl9DQogDQorCS8qKg0KKwkgKiBAc2VlIElN
ZW1iZXIjZ2V0Q2xhc3NGaWxlKCkNCisJICovDQorCXB1YmxpYyBJQ2xhc3NGaWxlIGdldENsYXNz
RmlsZSgpIHsNCisJCUlKYXZhRWxlbWVudCBlbGVtZW50ID0gZ2V0UGFyZW50KCk7DQorCQl3aGls
ZSAoZWxlbWVudCBpbnN0YW5jZW9mIElNZW1iZXIpIHsNCisJCQllbGVtZW50PSBlbGVtZW50Lmdl
dFBhcmVudCgpOw0KKwkJfQ0KKwkJaWYgKGVsZW1lbnQgaW5zdGFuY2VvZiBJQ2xhc3NGaWxlKSB7
DQorCQkJcmV0dXJuIChJQ2xhc3NGaWxlKSBlbGVtZW50Ow0KKwkJfQ0KKwkJcmV0dXJuIG51bGw7
DQorCX0NCisJLyoqDQorCSAqIHtAaW5oZXJpdERvY30NCisJICogQHNpbmNlIDMuNw0KKwkgKi8N
CiAJcHVibGljIElTb3VyY2VSYW5nZSBnZXROYW1lUmFuZ2UoKSB7DQorCQlpZiAodGhpcy5uYW1l
RW5kID09IC0xKSB7DQorCQkJU291cmNlTWFwcGVyIG1hcHBlcj0gZ2V0U291cmNlTWFwcGVyKCk7
DQorCQkJaWYgKG1hcHBlciAhPSBudWxsKSB7DQorCQkJCXRyeSB7DQorCQkJCQkvLyBlbnN1cmUg
dGhlIGNsYXNzIGZpbGUncyBidWZmZXIgaXMgb3BlbiBzbyB0aGF0IHNvdXJjZSByYW5nZXMgYXJl
IGNvbXB1dGVkDQorCQkJCQlDbGFzc0ZpbGUgY2xhc3NGaWxlID0gKENsYXNzRmlsZSlnZXRDbGFz
c0ZpbGUoKTsNCisJCQkJCWlmIChjbGFzc0ZpbGUgIT0gbnVsbCkgew0KKwkJCQkJCWNsYXNzRmls
ZS5nZXRCdWZmZXIoKTsNCisJCQkJCQlyZXR1cm4gbWFwcGVyLmdldE5hbWVSYW5nZSh0aGlzKTsN
CisJCQkJCX0NCisJCQkJfSBjYXRjaChKYXZhTW9kZWxFeGNlcHRpb24gZSkgew0KKwkJCQkJLy8g
aWdub3JlDQorCQkJCX0NCisJCQl9DQorCQkJcmV0dXJuIFNvdXJjZU1hcHBlci5VTktOT1dOX1JB
TkdFOw0KKwkJfQ0KIAkJcmV0dXJuIG5ldyBTb3VyY2VSYW5nZSh0aGlzLm5hbWVTdGFydCwgdGhp
cy5uYW1lRW5kLXRoaXMubmFtZVN0YXJ0KzEpOw0KIAl9DQogDQpAQCAtMzI2LDkgKzQwMSwyMiBA
QA0KIAl9DQogDQogCS8qKg0KLQkgKiBAc2VlIElTb3VyY2VSZWZlcmVuY2UNCisJICoge0Bpbmhl
cml0RG9jfQ0KKwkgKiBAc2luY2UgMy43DQogCSAqLw0KLQlwdWJsaWMgSVNvdXJjZVJhbmdlIGdl
dFNvdXJjZVJhbmdlKCkgew0KKwlwdWJsaWMgSVNvdXJjZVJhbmdlIGdldFNvdXJjZVJhbmdlKCkg
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7DQorCQlpZiAodGhpcy5kZWNsYXJhdGlvblNvdXJj
ZUVuZCA9PSAtMSkgew0KKwkJCVNvdXJjZU1hcHBlciBtYXBwZXI9IGdldFNvdXJjZU1hcHBlcigp
Ow0KKwkJCWlmIChtYXBwZXIgIT0gbnVsbCkgew0KKwkJCQkvLyBlbnN1cmUgdGhlIGNsYXNzIGZp
bGUncyBidWZmZXIgaXMgb3BlbiBzbyB0aGF0IHNvdXJjZSByYW5nZXMgYXJlIGNvbXB1dGVkDQor
CQkJCUNsYXNzRmlsZSBjbGFzc0ZpbGUgPSAoQ2xhc3NGaWxlKWdldENsYXNzRmlsZSgpOw0KKwkJ
CQlpZiAoY2xhc3NGaWxlICE9IG51bGwpIHsNCisJCQkJCWNsYXNzRmlsZS5nZXRCdWZmZXIoKTsN
CisJCQkJCXJldHVybiBtYXBwZXIuZ2V0U291cmNlUmFuZ2UodGhpcyk7DQorCQkJCX0NCisJCQl9
DQorCQkJcmV0dXJuIFNvdXJjZU1hcHBlci5VTktOT1dOX1JBTkdFOw0KKwkJfQ0KIAkJcmV0dXJu
IG5ldyBTb3VyY2VSYW5nZSh0aGlzLmRlY2xhcmF0aW9uU291cmNlU3RhcnQsIHRoaXMuZGVjbGFy
YXRpb25Tb3VyY2VFbmQtdGhpcy5kZWNsYXJhdGlvblNvdXJjZVN0YXJ0KzEpOw0KIAl9DQogDQpJ
bmRleDogbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvTWVtYmVyLmphdmENCj09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL01lbWJlci5qYXZhLHYNCnJldHJp
ZXZpbmcgcmV2aXNpb24gMS41NQ0KZGlmZiAtdSAtcjEuNTUgTWVtYmVyLmphdmENCi0tLSBtb2Rl
bC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9NZW1iZXIuamF2YQkyNCBOb3YgMjAxMCAw
MTozMzoyOCAtMDAwMAkxLjU1DQorKysgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvTWVtYmVyLmphdmEJMTcgRmViIDIwMTEgMjI6MDU6NTggLTAwMDANCkBAIC0xLDUgKzEsNSBA
QA0KIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEw
IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAx
MSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBU
aGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUg
YXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2
MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFp
bGFibGUgYXQNCkBAIC0yMjEsNyArMjIxLDcgQEANCiAJCQltZW1lbnRvLm5leHRUb2tlbigpOyAv
LyBKRU1fQ09VTlQNCiAJCQlpZiAoIW1lbWVudG8uaGFzTW9yZVRva2VucygpKSByZXR1cm4gdGhp
czsNCiAJCQlib29sZWFuIGlzUGFyYW1ldGVyID0gQm9vbGVhbi52YWx1ZU9mKG1lbWVudG8ubmV4
dFRva2VuKCkpLmJvb2xlYW5WYWx1ZSgpOw0KLQkJCXJldHVybiBuZXcgTG9jYWxWYXJpYWJsZSh0
aGlzLCB2YXJOYW1lLCBkZWNsYXJhdGlvblN0YXJ0LCBkZWNsYXJhdGlvbkVuZCwgbmFtZVN0YXJ0
LCBuYW1lRW5kLCB0eXBlU2lnbmF0dXJlLCBudWxsLCBmbGFncywgaXNQYXJhbWV0ZXIpOw0KKwkJ
CXJldHVybiBuZXcgTG9jYWxWYXJpYWJsZSh0aGlzLCB2YXJOYW1lLCBkZWNsYXJhdGlvblN0YXJ0
LCBkZWNsYXJhdGlvbkVuZCwgbmFtZVN0YXJ0LCBuYW1lRW5kLCB0eXBlU2lnbmF0dXJlLCBBbm5v
dGF0aW9uLk5PX0FOTk9UQVRJT05TLCBmbGFncywgaXNQYXJhbWV0ZXIpOw0KIAkJY2FzZSBKRU1f
VFlQRV9QQVJBTUVURVI6DQogCQkJaWYgKCFtZW1lbnRvLmhhc01vcmVUb2tlbnMoKSkgcmV0dXJu
IHRoaXM7DQogCQkJU3RyaW5nIHR5cGVQYXJhbWV0ZXJOYW1lID0gbWVtZW50by5uZXh0VG9rZW4o
KTsNCkluZGV4OiBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Tb3VyY2VNYXBw
ZXIuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlw
c2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvU291cmNlTWFw
cGVyLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjE1MQ0KZGlmZiAtdSAtcjEuMTUxIFNv
dXJjZU1hcHBlci5qYXZhDQotLS0gbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUv
U291cmNlTWFwcGVyLmphdmEJMjIgT2N0IDIwMTAgMTA6NDg6MTAgLTAwMDAJMS4xNTENCisrKyBt
b2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Tb3VyY2VNYXBwZXIuamF2YQkxNyBG
ZWIgMjAxMSAyMjowNTo1OCAtMDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBvcmF0aW9uIGFu
ZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhl
IGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhl
IHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2Nv
bXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTc2LDYg
Kzc2LDY2IEBADQogCWV4dGVuZHMgUmVmZXJlbmNlSW5mb0FkYXB0ZXINCiAJaW1wbGVtZW50cyBJ
U291cmNlRWxlbWVudFJlcXVlc3RvciwgU3VmZml4Q29uc3RhbnRzIHsNCiANCisJcHVibGljIHN0
YXRpYyBjbGFzcyBMb2NhbFZhcmlhYmxlRWxlbWVudEtleSB7DQorCQlTdHJpbmcgcGFyZW50Ow0K
KwkJU3RyaW5nIG5hbWU7DQorCQkNCisJCXB1YmxpYyBMb2NhbFZhcmlhYmxlRWxlbWVudEtleShJ
SmF2YUVsZW1lbnQgbWV0aG9kLCBTdHJpbmcgbmFtZSkgew0KKwkJCVN0cmluZ0J1ZmZlciBidWZm
ZXIgPSBuZXcgU3RyaW5nQnVmZmVyKCk7DQorCQkJYnVmZmVyDQorCQkJCS5hcHBlbmQobWV0aG9k
LmdldFBhcmVudCgpLmdldEhhbmRsZUlkZW50aWZpZXIoKSkNCisJCQkJLmFwcGVuZCgnIycpDQor
CQkJCS5hcHBlbmQobWV0aG9kLmdldEVsZW1lbnROYW1lKCkpDQorCQkJCS5hcHBlbmQoJygnKTsN
CisJCQlpZiAobWV0aG9kLmdldEVsZW1lbnRUeXBlKCkgPT0gSUphdmFFbGVtZW50Lk1FVEhPRCkg
ew0KKwkJCQlTdHJpbmdbXSBwYXJhbWV0ZXJUeXBlcyA9ICgoSU1ldGhvZCkgbWV0aG9kKS5nZXRQ
YXJhbWV0ZXJUeXBlcygpOw0KKwkJCQlmb3IgKGludCBpID0gMCwgbWF4ID0gcGFyYW1ldGVyVHlw
ZXMubGVuZ3RoOyBpIDwgbWF4OyBpKyspIHsNCisJCQkJCWlmIChpID4gMCkgew0KKwkJCQkJCWJ1
ZmZlci5hcHBlbmQoJywnKTsNCisJCQkJCX0NCisJCQkJCWJ1ZmZlci5hcHBlbmQoU2lnbmF0dXJl
LmdldFNpZ25hdHVyZVNpbXBsZU5hbWUocGFyYW1ldGVyVHlwZXNbaV0pKTsNCisJCQkJfQ0KKwkJ
CX0NCisJCQlidWZmZXIuYXBwZW5kKCcpJyk7DQorCQkJdGhpcy5wYXJlbnQgPSBTdHJpbmcudmFs
dWVPZihidWZmZXIpOw0KKwkJCXRoaXMubmFtZSA9IG5hbWU7DQorCQl9DQorDQorCQlwdWJsaWMg
aW50IGhhc2hDb2RlKCkgew0KKwkJCWZpbmFsIGludCBwcmltZSA9IDMxOw0KKwkJCWludCByZXN1
bHQgPSAxOw0KKwkJCXJlc3VsdCA9IHByaW1lICogcmVzdWx0ICsgKCh0aGlzLm5hbWUgPT0gbnVs
bCkgPyAwIDogdGhpcy5uYW1lLmhhc2hDb2RlKCkpOw0KKwkJCXJlc3VsdCA9IHByaW1lICogcmVz
dWx0ICsgKCh0aGlzLnBhcmVudCA9PSBudWxsKSA/IDAgOiB0aGlzLnBhcmVudC5oYXNoQ29kZSgp
KTsNCisJCQlyZXR1cm4gcmVzdWx0Ow0KKwkJfQ0KKw0KKwkJcHVibGljIGJvb2xlYW4gZXF1YWxz
KE9iamVjdCBvYmopIHsNCisJCQlpZiAodGhpcyA9PSBvYmopDQorCQkJCXJldHVybiB0cnVlOw0K
KwkJCWlmIChvYmogPT0gbnVsbCkNCisJCQkJcmV0dXJuIGZhbHNlOw0KKwkJCWlmIChnZXRDbGFz
cygpICE9IG9iai5nZXRDbGFzcygpKQ0KKwkJCQlyZXR1cm4gZmFsc2U7DQorCQkJTG9jYWxWYXJp
YWJsZUVsZW1lbnRLZXkgb3RoZXIgPSAoTG9jYWxWYXJpYWJsZUVsZW1lbnRLZXkpIG9iajsNCisJ
CQlpZiAodGhpcy5uYW1lID09IG51bGwpIHsNCisJCQkJaWYgKG90aGVyLm5hbWUgIT0gbnVsbCkN
CisJCQkJCXJldHVybiBmYWxzZTsNCisJCQl9IGVsc2UgaWYgKCF0aGlzLm5hbWUuZXF1YWxzKG90
aGVyLm5hbWUpKQ0KKwkJCQlyZXR1cm4gZmFsc2U7DQorCQkJaWYgKHRoaXMucGFyZW50ID09IG51
bGwpIHsNCisJCQkJaWYgKG90aGVyLnBhcmVudCAhPSBudWxsKQ0KKwkJCQkJcmV0dXJuIGZhbHNl
Ow0KKwkJCX0gZWxzZSBpZiAoIXRoaXMucGFyZW50LmVxdWFscyhvdGhlci5wYXJlbnQpKQ0KKwkJ
CQlyZXR1cm4gZmFsc2U7DQorCQkJcmV0dXJuIHRydWU7DQorCQl9DQorCQlwdWJsaWMgU3RyaW5n
IHRvU3RyaW5nKCkgew0KKwkJCVN0cmluZ0J1ZmZlciBidWZmZXIgPSBuZXcgU3RyaW5nQnVmZmVy
KCk7DQorCQkJYnVmZmVyLmFwcGVuZCgnKCcpLmFwcGVuZCh0aGlzLnBhcmVudCkuYXBwZW5kKCcu
JykuYXBwZW5kKHRoaXMubmFtZSkuYXBwZW5kKCcpJyk7DQorCQkJcmV0dXJuIFN0cmluZy52YWx1
ZU9mKGJ1ZmZlcik7DQorCQl9DQorCX0NCisNCiAJcHVibGljIHN0YXRpYyBib29sZWFuIFZFUkJP
U0UgPSBmYWxzZTsNCiAJLyoqDQogCSAqIFNwZWNpZmllcyB0aGUgbG9jYXRpb24gb2YgdGhlIHBh
Y2thZ2UgZnJhZ21lbnQgcm9vdHMgd2l0aGluDQpAQCAtMTE5LDYgKzE3OSwxNiBAQA0KIAkgKi8N
CiAJcHJvdGVjdGVkIEhhc2hNYXAgY2F0ZWdvcmllczsNCiANCisJLyoqDQorCSAqIFRhYmxlIHRo
YXQgY29udGFpbnMgYWxsIHNvdXJjZSByYW5nZXMgZm9yIGxvY2FsIHZhcmlhYmxlcy4NCisJICog
S2V5cyBhcmUgdGhlIHNwZWNpYWwgbG9jYWwgdmFyaWFibGUgZWxlbWVudHMsIGVudHJpZXMgYXJl
IDxjb2RlPmNoYXJbXVtdPC9jb2RlPi4NCisJICovDQorCXByb3RlY3RlZCBIYXNoTWFwIHBhcmFt
ZXRlcnNSYW5nZXM7DQorCQ0KKwkvKioNCisJICogU2V0IHRoYXQgY29udGFpbnMgYWxsIGZpbmFs
IGxvY2FsIHZhcmlhYmxlcy4NCisJICovDQorCXByb3RlY3RlZCBIYXNoU2V0IGZpbmFsUGFyYW1l
dGVyczsNCiANCiAJLyoqDQogCSAqIFRoZSB1bmtub3duIHNvdXJjZSByYW5nZSB7LTEsIDB9DQpA
QCAtMjA5LDYgKzI3OSw3IEBADQogCQl9DQogCQl0aGlzLnNvdXJjZVBhdGggPSBzb3VyY2VQYXRo
Ow0KIAkJdGhpcy5zb3VyY2VSYW5nZXMgPSBuZXcgSGFzaE1hcCgpOw0KKwkJdGhpcy5wYXJhbWV0
ZXJzUmFuZ2VzID0gbmV3IEhhc2hNYXAoKTsNCiAJCXRoaXMucGFyYW1ldGVyTmFtZXMgPSBuZXcg
SGFzaE1hcCgpOw0KIAkJdGhpcy5pbXBvcnRzVGFibGUgPSBuZXcgSGFzaE1hcCgpOw0KIAkJdGhp
cy5pbXBvcnRzQ291bnRlclRhYmxlID0gbmV3IEhhc2hNYXAoKTsNCkBAIC0yODgsNiArMzU5LDgg
QEANCiAJcHVibGljIHZvaWQgY2xvc2UoKSB7DQogCQl0aGlzLnNvdXJjZVJhbmdlcyA9IG51bGw7
DQogCQl0aGlzLnBhcmFtZXRlck5hbWVzID0gbnVsbDsNCisJCXRoaXMucGFyYW1ldGVyc1Jhbmdl
cyA9IG51bGw7DQorCQl0aGlzLmZpbmFsUGFyYW1ldGVycyA9IG51bGw7DQogCX0NCiANCiAJLyoq
DQpAQCAtNzUxLDYgKzgyNCwzMCBAQA0KIAkJCQkJCQl0eXBlUGFyYW1ldGVySW5mby5uYW1lU291
cmNlRW5kIC0gdHlwZVBhcmFtZXRlckluZm8ubmFtZVNvdXJjZVN0YXJ0ICsgMSkpOw0KIAkJCQl9
DQogCQkJfQ0KKwkJCS8vIHR5cGUgcGFyYW1ldGVycw0KKwkJCWlmIChtZXRob2RJbmZvLnBhcmFt
ZXRlckluZm9zICE9IG51bGwpIHsNCisJCQkJZm9yIChpbnQgaSA9IDAsIGxlbmd0aCA9IG1ldGhv
ZEluZm8ucGFyYW1ldGVySW5mb3MubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHsNCisJCQkJCVBh
cmFtZXRlckluZm8gcGFyYW1ldGVySW5mbyA9IG1ldGhvZEluZm8ucGFyYW1ldGVySW5mb3NbaV07
DQorCQkJCQlMb2NhbFZhcmlhYmxlRWxlbWVudEtleSBrZXkgPSBuZXcgTG9jYWxWYXJpYWJsZUVs
ZW1lbnRLZXkobWV0aG9kLCBuZXcgU3RyaW5nKHBhcmFtZXRlckluZm8ubmFtZSkpOw0KKwkJCQkJ
U291cmNlUmFuZ2VbXSBhbGxSYW5nZXMgPSBuZXcgU291cmNlUmFuZ2VbXSB7DQorCQkJCQkJbmV3
IFNvdXJjZVJhbmdlKA0KKwkJCQkJCQlwYXJhbWV0ZXJJbmZvLmRlY2xhcmF0aW9uU3RhcnQsDQor
CQkJCQkJCXBhcmFtZXRlckluZm8uZGVjbGFyYXRpb25FbmQgLSBwYXJhbWV0ZXJJbmZvLmRlY2xh
cmF0aW9uU3RhcnQgKyAxKSwNCisJCQkJCQluZXcgU291cmNlUmFuZ2UoDQorCQkJCQkJCXBhcmFt
ZXRlckluZm8ubmFtZVNvdXJjZVN0YXJ0LA0KKwkJCQkJCQlwYXJhbWV0ZXJJbmZvLm5hbWVTb3Vy
Y2VFbmQgLSBwYXJhbWV0ZXJJbmZvLm5hbWVTb3VyY2VTdGFydCArIDEpDQorCQkJCQl9Ow0KKwkJ
CQkJdGhpcy5wYXJhbWV0ZXJzUmFuZ2VzLnB1dCgNCisJCQkJCQlrZXksDQorCQkJCQkJYWxsUmFu
Z2VzKTsNCisJCQkJCWlmIChwYXJhbWV0ZXJJbmZvLm1vZGlmaWVycyAhPSAwKSB7DQorCQkJCQkJ
aWYgKHRoaXMuZmluYWxQYXJhbWV0ZXJzID09IG51bGwpIHsNCisJCQkJCQkJdGhpcy5maW5hbFBh
cmFtZXRlcnMgPSBuZXcgSGFzaFNldCgpOw0KKwkJCQkJCX0NCisJCQkJCQl0aGlzLmZpbmFsUGFy
YW1ldGVycy5hZGQoa2V5KTsNCisJCQkJCX0NCisJCQkJfQ0KKwkJCX0NCiANCiAJCQkvLyBjYXRl
Z29yaWVzDQogCQkJYWRkQ2F0ZWdvcmllcyhtZXRob2QsIG1ldGhvZEluZm8uY2F0ZWdvcmllcyk7
DQpAQCAtOTU5LDYgKzEwNTYsMTYgQEANCiAJfQ0KIA0KIA0KKwlwdWJsaWMgaW50IGdldEZsYWdz
KElKYXZhRWxlbWVudCBlbGVtZW50KSB7DQorCQlzd2l0Y2goZWxlbWVudC5nZXRFbGVtZW50VHlw
ZSgpKSB7DQorCQkJY2FzZSBJSmF2YUVsZW1lbnQuTE9DQUxfVkFSSUFCTEUgOg0KKwkJCQlMb2Nh
bFZhcmlhYmxlRWxlbWVudEtleSBrZXkgPSBuZXcgTG9jYWxWYXJpYWJsZUVsZW1lbnRLZXkoZWxl
bWVudC5nZXRQYXJlbnQoKSwgZWxlbWVudC5nZXRFbGVtZW50TmFtZSgpKTsNCisJCQkJaWYgKHRo
aXMuZmluYWxQYXJhbWV0ZXJzICE9IG51bGwgJiYgdGhpcy5maW5hbFBhcmFtZXRlcnMuY29udGFp
bnMoa2V5KSkgew0KKwkJCQkJcmV0dXJuIEZsYWdzLkFjY0ZpbmFsOw0KKwkJCQl9DQorCQl9DQor
CQlyZXR1cm4gMDsNCisJfQ0KIA0KIAkvKioNCiAJICogUmV0dXJucyB0aGUgU291cmNlUmFuZ2Ug
Zm9yIHRoZSBuYW1lIG9mIHRoZSBnaXZlbiBlbGVtZW50LCBvcg0KQEAgLTk5MCw2ICsxMDk3LDE1
IEBADQogCQkJCQkJZWxlbWVudCA9IG1ldGhvZC5nZXRUeXBlUGFyYW1ldGVyKGVsZW1lbnQuZ2V0
RWxlbWVudE5hbWUoKSk7DQogCQkJCQl9DQogCQkJCX0NCisJCQkJYnJlYWs7DQorCQkJY2FzZSBJ
SmF2YUVsZW1lbnQuTE9DQUxfVkFSSUFCTEUgOg0KKwkJCQlMb2NhbFZhcmlhYmxlRWxlbWVudEtl
eSBrZXkgPSBuZXcgTG9jYWxWYXJpYWJsZUVsZW1lbnRLZXkoZWxlbWVudC5nZXRQYXJlbnQoKSwg
ZWxlbWVudC5nZXRFbGVtZW50TmFtZSgpKTsNCisJCQkJU291cmNlUmFuZ2VbXSByYW5nZXMgPSAo
U291cmNlUmFuZ2VbXSkgdGhpcy5wYXJhbWV0ZXJzUmFuZ2VzLmdldChrZXkpOw0KKwkJCQlpZiAo
cmFuZ2VzID09IG51bGwpIHsNCisJCQkJCXJldHVybiBVTktOT1dOX1JBTkdFOw0KKwkJCQl9IGVs
c2Ugew0KKwkJCQkJcmV0dXJuIHJhbmdlc1sxXTsNCisJCQkJfQ0KIAkJfQ0KIAkJU291cmNlUmFu
Z2VbXSByYW5nZXMgPSAoU291cmNlUmFuZ2VbXSkgdGhpcy5zb3VyY2VSYW5nZXMuZ2V0KGVsZW1l
bnQpOw0KIAkJaWYgKHJhbmdlcyA9PSBudWxsKSB7DQpAQCAtMTA1MCw2ICsxMTY2LDE1IEBADQog
CQkJCQkJZWxlbWVudCA9IG1ldGhvZC5nZXRUeXBlUGFyYW1ldGVyKGVsZW1lbnQuZ2V0RWxlbWVu
dE5hbWUoKSk7DQogCQkJCQl9DQogCQkJCX0NCisJCQkJYnJlYWs7DQorCQkJY2FzZSBJSmF2YUVs
ZW1lbnQuTE9DQUxfVkFSSUFCTEUgOg0KKwkJCQlMb2NhbFZhcmlhYmxlRWxlbWVudEtleSBrZXkg
PSBuZXcgTG9jYWxWYXJpYWJsZUVsZW1lbnRLZXkoZWxlbWVudC5nZXRQYXJlbnQoKSwgZWxlbWVu
dC5nZXRFbGVtZW50TmFtZSgpKTsNCisJCQkJU291cmNlUmFuZ2VbXSByYW5nZXMgPSAoU291cmNl
UmFuZ2VbXSkgdGhpcy5wYXJhbWV0ZXJzUmFuZ2VzLmdldChrZXkpOw0KKwkJCQlpZiAocmFuZ2Vz
ID09IG51bGwpIHsNCisJCQkJCXJldHVybiBVTktOT1dOX1JBTkdFOw0KKwkJCQl9IGVsc2Ugew0K
KwkJCQkJcmV0dXJuIHJhbmdlc1swXTsNCisJCQkJfQ0KIAkJfQ0KIAkJU291cmNlUmFuZ2VbXSBy
YW5nZXMgPSAoU291cmNlUmFuZ2VbXSkgdGhpcy5zb3VyY2VSYW5nZXMuZ2V0KGVsZW1lbnQpOw0K
IAkJaWYgKHJhbmdlcyA9PSBudWxsKSB7DQpJbmRleDogbW9kZWwvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvcmUvU291cmNlTWV0aG9kLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zz
cm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb3JlL1NvdXJjZU1ldGhvZC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS42
OA0KZGlmZiAtdSAtcjEuNjggU291cmNlTWV0aG9kLmphdmENCi0tLSBtb2RlbC9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29yZS9Tb3VyY2VNZXRob2QuamF2YQkyNyBKdW4gMjAwOCAxNjowMzo1
MSAtMDAwMAkxLjY4DQorKysgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvU291
cmNlTWV0aG9kLmphdmEJMTcgRmViIDIwMTEgMjI6MDU6NTggLTAwMDANCkBAIC0xLDUgKzEsNSBA
QA0KIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDA4
IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAx
MSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBU
aGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUg
YXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2
MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFp
bGFibGUgYXQNCkBAIC0xMzQsNyArMTM0LDEyIEBADQogCVNvdXJjZU1ldGhvZEVsZW1lbnRJbmZv
IGluZm8gPSAoU291cmNlTWV0aG9kRWxlbWVudEluZm8pIGdldEVsZW1lbnRJbmZvKCk7DQogCXJl
dHVybiBpbmZvLnR5cGVQYXJhbWV0ZXJzOw0KIH0NCi0NCitwdWJsaWMgSUxvY2FsVmFyaWFibGVb
XSBnZXRQYXJhbWV0ZXJzKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7DQorCUlMb2NhbFZh
cmlhYmxlW10gYXJndW1lbnRzID0gKChTb3VyY2VNZXRob2RFbGVtZW50SW5mbykgZ2V0RWxlbWVu
dEluZm8oKSkuYXJndW1lbnRzOw0KKwlpZiAoYXJndW1lbnRzID09IG51bGwpDQorCQlyZXR1cm4g
TG9jYWxWYXJpYWJsZS5OT19MT0NBTF9WQVJJQUJMRVM7DQorCXJldHVybiBhcmd1bWVudHM7DQor
fQ0KIC8qKg0KICAqIEBzZWUgSU1ldGhvZCNnZXRUeXBlUGFyYW1ldGVyU2lnbmF0dXJlcygpDQog
ICogQHNpbmNlIDMuMA0KSW5kZXg6IG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3Jl
L1NvdXJjZU1ldGhvZEVsZW1lbnRJbmZvLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zz
cm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb3JlL1NvdXJjZU1ldGhvZEVsZW1lbnRJbmZvLmphdmEsdg0KcmV0cmlldmluZyBy
ZXZpc2lvbiAxLjIyDQpkaWZmIC11IC1yMS4yMiBTb3VyY2VNZXRob2RFbGVtZW50SW5mby5qYXZh
DQotLS0gbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvU291cmNlTWV0aG9kRWxl
bWVudEluZm8uamF2YQkyNyBKdW4gMjAwOCAxNjowMzo1MCAtMDAwMAkxLjIyDQorKysgbW9kZWwv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvU291cmNlTWV0aG9kRWxlbWVudEluZm8uamF2
YQkxNyBGZWIgMjAxMSAyMjowNTo1OCAtMDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMDggSUJNIENvcnBvcmF0
aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3Jh
dGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBh
bmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5k
ZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGlj
aCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAg
LTM4LDYgKzM4LDggQEANCiAJICogRm9yIGV4YW1wbGUsIEhhc2h0YWJsZSBvciBqYXZhLnV0aWwu
SGFzaHRhYmxlLg0KIAkgKi8NCiAJcHJvdGVjdGVkIGNoYXJbXVtdIGV4Y2VwdGlvblR5cGVzOw0K
KwkNCisJcHJvdGVjdGVkIElMb2NhbFZhcmlhYmxlW10gYXJndW1lbnRzOw0KIA0KIAkvKg0KIAkg
KiBUaGUgdHlwZSBwYXJhbWV0ZXJzIG9mIHRoaXMgc291cmNlIHR5cGUuIEVtcHR5IGlmIG5vbmUu
DQojUCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlcg0KSW5kZXg6IHNyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy91dGlsL1V0aWwuamF2YQ0KPT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZp
bGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIv
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3V0aWwvVXRpbC5qYXZhLHYNCnJldHJpZXZp
bmcgcmV2aXNpb24gMS44Mg0KZGlmZiAtdSAtcjEuODIgVXRpbC5qYXZhDQotLS0gc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3V0aWwvVXRpbC5qYXZhCTI1IE9jdCAyMDEwIDEwOjMwOjE1
IC0wMDAwCTEuODINCisrKyBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvdXRpbC9VdGls
LmphdmEJMTcgRmViIDIwMTEgMjI6MDU6NTkgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEwIElCTSBDb3Jw
b3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29y
cG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dy
YW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxl
IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICog
d2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQN
CkBAIC0zODIsNyArMzgyLDkgQEANCiB9DQogcHVibGljIHN0YXRpYyB2b2lkIGNyZWF0ZUphcihT
dHJpbmdbXSBqYXZhUGF0aHNBbmRDb250ZW50cywgU3RyaW5nW10gZXh0cmFQYXRoc0FuZENvbnRl
bnRzLCBTdHJpbmcgamFyUGF0aCwgU3RyaW5nW10gY2xhc3NwYXRoLCBTdHJpbmcgY29tcGxpYW5j
ZSwgTWFwIG9wdGlvbnMpIHRocm93cyBJT0V4Y2VwdGlvbiB7DQogCU1hcCBjb21waWxlT3B0aW9u
cyA9IGdldENvbXBpbGVPcHRpb25zKGNvbXBsaWFuY2UpOw0KLQljb21waWxlT3B0aW9ucy5wdXRB
bGwob3B0aW9ucyk7DQorCWlmIChvcHRpb25zICE9IG51bGwpIHsNCisJCWNvbXBpbGVPcHRpb25z
LnB1dEFsbChvcHRpb25zKTsNCisJfQ0KIAljcmVhdGVKYXIoamF2YVBhdGhzQW5kQ29udGVudHMs
IGV4dHJhUGF0aHNBbmRDb250ZW50cywgY29tcGlsZU9wdGlvbnMsIGNsYXNzcGF0aCwgamFyUGF0
aCk7DQogfQ0KIHB1YmxpYyBzdGF0aWMgdm9pZCBjcmVhdGVTb3VyY2VaaXAoU3RyaW5nW10gcGF0
aHNBbmRDb250ZW50cywgU3RyaW5nIHppcFBhdGgpIHRocm93cyBJT0V4Y2VwdGlvbiB7DQojUCBv
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbA0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9tb2RlbC9BYnN0cmFjdEphdmFNb2RlbFRlc3RzLmphdmENCj09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3Rz
Lm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9BYnN0cmFjdEphdmFN
b2RlbFRlc3RzLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjI0Mg0KZGlmZiAtdSAtcjEu
MjQyIEFic3RyYWN0SmF2YU1vZGVsVGVzdHMuamF2YQ0KLS0tIHNyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9tb2RlbC9BYnN0cmFjdEphdmFNb2RlbFRlc3RzLmphdmEJNiBPY3QgMjAxMCAx
NzozMjozMCAtMDAwMAkxLjI0Mg0KKysrIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9t
b2RlbC9BYnN0cmFjdEphdmFNb2RlbFRlc3RzLmphdmEJMTcgRmViIDIwMTEgMjI6MDY6MDAgLTAw
MDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDEwIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHly
aWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwg
cmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJp
YWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBz
ZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmli
dXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC00MDIsMTYgKzQwMiwyOCBAQA0KIAkJYWRk
TGlicmFyeUVudHJ5KGphdmFQcm9qZWN0LCBuZXcgUGF0aChqYXJQYXRoKSwgdHJ1ZS8qZXhwb3J0
ZWQqLyk7DQogCX0NCiAJcHJvdGVjdGVkIHZvaWQgYWRkTGlicmFyeShTdHJpbmcgamFyTmFtZSwg
U3RyaW5nIHNvdXJjZVppcE5hbWUsIFN0cmluZ1tdIHBhdGhBbmRDb250ZW50cywgU3RyaW5nIGNv
bXBsaWFuY2UpIHRocm93cyBDb3JlRXhjZXB0aW9uLCBJT0V4Y2VwdGlvbiB7DQotCQlhZGRMaWJy
YXJ5KHRoaXMuY3VycmVudFByb2plY3QsIGphck5hbWUsIHNvdXJjZVppcE5hbWUsIHBhdGhBbmRD
b250ZW50cywgbnVsbC8qbm8gbm9uLUphdmEgcmVzb3VyY2VzKi8sIG51bGwsIG51bGwsIGNvbXBs
aWFuY2UpOw0KKwkJYWRkTGlicmFyeSh0aGlzLmN1cnJlbnRQcm9qZWN0LCBqYXJOYW1lLCBzb3Vy
Y2VaaXBOYW1lLCBwYXRoQW5kQ29udGVudHMsIG51bGwvKm5vIG5vbi1KYXZhIHJlc291cmNlcyov
LCBudWxsLCBudWxsLCBjb21wbGlhbmNlLCBudWxsKTsNCisJfQ0KKwlwcm90ZWN0ZWQgdm9pZCBh
ZGRMaWJyYXJ5KElKYXZhUHJvamVjdCBqYXZhUHJvamVjdCwgU3RyaW5nIGphck5hbWUsIFN0cmlu
ZyBzb3VyY2VaaXBOYW1lLCBTdHJpbmdbXSBwYXRoQW5kQ29udGVudHMsIFN0cmluZyBjb21wbGlh
bmNlLCBNYXAgb3B0aW9ucykgdGhyb3dzIENvcmVFeGNlcHRpb24sIElPRXhjZXB0aW9uIHsNCisJ
CWFkZExpYnJhcnkoamF2YVByb2plY3QsIGphck5hbWUsIHNvdXJjZVppcE5hbWUsIHBhdGhBbmRD
b250ZW50cywgbnVsbC8qbm8gbm9uLUphdmEgcmVzb3VyY2VzKi8sIG51bGwsIG51bGwsIGNvbXBs
aWFuY2UsIG9wdGlvbnMpOw0KIAl9DQogCXByb3RlY3RlZCB2b2lkIGFkZExpYnJhcnkoSUphdmFQ
cm9qZWN0IGphdmFQcm9qZWN0LCBTdHJpbmcgamFyTmFtZSwgU3RyaW5nIHNvdXJjZVppcE5hbWUs
IFN0cmluZ1tdIHBhdGhBbmRDb250ZW50cywgU3RyaW5nIGNvbXBsaWFuY2UpIHRocm93cyBDb3Jl
RXhjZXB0aW9uLCBJT0V4Y2VwdGlvbiB7DQotCQlhZGRMaWJyYXJ5KGphdmFQcm9qZWN0LCBqYXJO
YW1lLCBzb3VyY2VaaXBOYW1lLCBwYXRoQW5kQ29udGVudHMsIG51bGwvKm5vIG5vbi1KYXZhIHJl
c291cmNlcyovLCBudWxsLCBudWxsLCBjb21wbGlhbmNlKTsNCisJCWFkZExpYnJhcnkoamF2YVBy
b2plY3QsIGphck5hbWUsIHNvdXJjZVppcE5hbWUsIHBhdGhBbmRDb250ZW50cywgbnVsbC8qbm8g
bm9uLUphdmEgcmVzb3VyY2VzKi8sIG51bGwsIG51bGwsIGNvbXBsaWFuY2UsIG51bGwpOw0KIAl9
DQogCXByb3RlY3RlZCB2b2lkIGFkZExpYnJhcnkoSUphdmFQcm9qZWN0IGphdmFQcm9qZWN0LCBT
dHJpbmcgamFyTmFtZSwgU3RyaW5nIHNvdXJjZVppcE5hbWUsIFN0cmluZ1tdIHBhdGhBbmRDb250
ZW50cywgU3RyaW5nW10gbm9uSmF2YVJlc291cmNlcywgU3RyaW5nIGNvbXBsaWFuY2UpIHRocm93
cyBDb3JlRXhjZXB0aW9uLCBJT0V4Y2VwdGlvbiB7DQotCQlhZGRMaWJyYXJ5KGphdmFQcm9qZWN0
LCBqYXJOYW1lLCBzb3VyY2VaaXBOYW1lLCBwYXRoQW5kQ29udGVudHMsIG5vbkphdmFSZXNvdXJj
ZXMsIG51bGwsIG51bGwsIGNvbXBsaWFuY2UpOw0KKwkJYWRkTGlicmFyeShqYXZhUHJvamVjdCwg
amFyTmFtZSwgc291cmNlWmlwTmFtZSwgcGF0aEFuZENvbnRlbnRzLCBub25KYXZhUmVzb3VyY2Vz
LCBudWxsLCBudWxsLCBjb21wbGlhbmNlLCBudWxsKTsNCiAJfQ0KLQlwcm90ZWN0ZWQgdm9pZCBh
ZGRMaWJyYXJ5KElKYXZhUHJvamVjdCBqYXZhUHJvamVjdCwgU3RyaW5nIGphck5hbWUsIFN0cmlu
ZyBzb3VyY2VaaXBOYW1lLCBTdHJpbmdbXSBwYXRoQW5kQ29udGVudHMsIFN0cmluZ1tdIG5vbkph
dmFSZXNvdXJjZXMsIFN0cmluZ1tdIGxpYnJhcmllc0luY2x1c2lvblBhdHRlcm5zLCBTdHJpbmdb
XSBsaWJyYXJpZXNFeGNsdXNpb25QYXR0ZXJucywgU3RyaW5nIGNvbXBsaWFuY2UpIHRocm93cyBD
b3JlRXhjZXB0aW9uLCBJT0V4Y2VwdGlvbiB7DQotCQlJUHJvamVjdCBwcm9qZWN0ID0gY3JlYXRl
TGlicmFyeShqYXZhUHJvamVjdCwgamFyTmFtZSwgc291cmNlWmlwTmFtZSwgcGF0aEFuZENvbnRl
bnRzLCBub25KYXZhUmVzb3VyY2VzLCBjb21wbGlhbmNlKTsNCisJcHJvdGVjdGVkIHZvaWQgYWRk
TGlicmFyeSgNCisJCQlJSmF2YVByb2plY3QgamF2YVByb2plY3QsDQorCQkJU3RyaW5nIGphck5h
bWUsDQorCQkJU3RyaW5nIHNvdXJjZVppcE5hbWUsDQorCQkJU3RyaW5nW10gcGF0aEFuZENvbnRl
bnRzLA0KKwkJCVN0cmluZ1tdIG5vbkphdmFSZXNvdXJjZXMsDQorCQkJU3RyaW5nW10gbGlicmFy
aWVzSW5jbHVzaW9uUGF0dGVybnMsDQorCQkJU3RyaW5nW10gbGlicmFyaWVzRXhjbHVzaW9uUGF0
dGVybnMsDQorCQkJU3RyaW5nIGNvbXBsaWFuY2UsDQorCQkJTWFwIG9wdGlvbnMpIHRocm93cyBD
b3JlRXhjZXB0aW9uLCBJT0V4Y2VwdGlvbiB7DQorCQlJUHJvamVjdCBwcm9qZWN0ID0gY3JlYXRl
TGlicmFyeShqYXZhUHJvamVjdCwgamFyTmFtZSwgc291cmNlWmlwTmFtZSwgcGF0aEFuZENvbnRl
bnRzLCBub25KYXZhUmVzb3VyY2VzLCBjb21wbGlhbmNlLCBvcHRpb25zKTsNCiAJCVN0cmluZyBw
cm9qZWN0UGF0aCA9ICcvJyArIHByb2plY3QuZ2V0TmFtZSgpICsgJy8nOw0KIAkJYWRkTGlicmFy
eUVudHJ5KA0KIAkJCWphdmFQcm9qZWN0LA0KQEAgLTQyMywxMyArNDM1LDI5IEBADQogCQkJdHJ1
ZQ0KIAkJKTsNCiAJfQ0KLQ0KLQlwcm90ZWN0ZWQgSVByb2plY3QgY3JlYXRlTGlicmFyeShJSmF2
YVByb2plY3QgamF2YVByb2plY3QsIFN0cmluZyBqYXJOYW1lLCBTdHJpbmcgc291cmNlWmlwTmFt
ZSwgU3RyaW5nW10gcGF0aEFuZENvbnRlbnRzLCBTdHJpbmdbXSBub25KYXZhUmVzb3VyY2VzLCBT
dHJpbmcgY29tcGxpYW5jZSkgdGhyb3dzIElPRXhjZXB0aW9uLCBDb3JlRXhjZXB0aW9uIHsNCisJ
cHJvdGVjdGVkIElQcm9qZWN0IGNyZWF0ZUxpYnJhcnkoDQorCQkJSUphdmFQcm9qZWN0IGphdmFQ
cm9qZWN0LA0KKwkJCVN0cmluZyBqYXJOYW1lLA0KKwkJCVN0cmluZyBzb3VyY2VaaXBOYW1lLA0K
KwkJCVN0cmluZ1tdIHBhdGhBbmRDb250ZW50cywNCisJCQlTdHJpbmdbXSBub25KYXZhUmVzb3Vy
Y2VzLA0KKwkJCVN0cmluZyBjb21wbGlhbmNlKSB0aHJvd3MgSU9FeGNlcHRpb24sIENvcmVFeGNl
cHRpb24gew0KKwkJcmV0dXJuIGNyZWF0ZUxpYnJhcnkoamF2YVByb2plY3QsIGphck5hbWUsIHNv
dXJjZVppcE5hbWUsIHBhdGhBbmRDb250ZW50cywgbm9uSmF2YVJlc291cmNlcywgY29tcGxpYW5j
ZSwgbnVsbCk7DQorCX0NCisNCisJcHJvdGVjdGVkIElQcm9qZWN0IGNyZWF0ZUxpYnJhcnkoDQor
CQkJSUphdmFQcm9qZWN0IGphdmFQcm9qZWN0LA0KKwkJCVN0cmluZyBqYXJOYW1lLA0KKwkJCVN0
cmluZyBzb3VyY2VaaXBOYW1lLA0KKwkJCVN0cmluZ1tdIHBhdGhBbmRDb250ZW50cywNCisJCQlT
dHJpbmdbXSBub25KYXZhUmVzb3VyY2VzLA0KKwkJCVN0cmluZyBjb21wbGlhbmNlLA0KKwkJCU1h
cCBvcHRpb25zKSB0aHJvd3MgSU9FeGNlcHRpb24sIENvcmVFeGNlcHRpb24gew0KIAkJSVByb2pl
Y3QgcHJvamVjdCA9IGphdmFQcm9qZWN0LmdldFByb2plY3QoKTsNCiAJCVN0cmluZyBwcm9qZWN0
TG9jYXRpb24gPSBwcm9qZWN0LmdldExvY2F0aW9uKCkudG9PU1N0cmluZygpOw0KIAkJU3RyaW5n
IGphclBhdGggPSBwcm9qZWN0TG9jYXRpb24gKyBGaWxlLnNlcGFyYXRvciArIGphck5hbWU7DQog
CQlTdHJpbmdbXSBjbGFzcGF0aCA9IGdldDE1TGlicmFyeUlmTmVlZGVkKGNvbXBsaWFuY2UpOw0K
LQkJb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMudXRpbC5VdGlsLmNyZWF0ZUphcihwYXRoQW5k
Q29udGVudHMsIG5vbkphdmFSZXNvdXJjZXMsIGphclBhdGgsIGNsYXNwYXRoLCBjb21wbGlhbmNl
KTsNCisJCW9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLnV0aWwuVXRpbC5jcmVhdGVKYXIocGF0
aEFuZENvbnRlbnRzLCBub25KYXZhUmVzb3VyY2VzLCBqYXJQYXRoLCBjbGFzcGF0aCwgY29tcGxp
YW5jZSwgb3B0aW9ucyk7DQogCQlpZiAocGF0aEFuZENvbnRlbnRzICE9IG51bGwgJiYgcGF0aEFu
ZENvbnRlbnRzLmxlbmd0aCAhPSAwKSB7DQogCQkJU3RyaW5nIHNvdXJjZVppcFBhdGggPSBwcm9q
ZWN0TG9jYXRpb24gKyBGaWxlLnNlcGFyYXRvciArIHNvdXJjZVppcE5hbWU7DQogCQkJb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMudXRpbC5VdGlsLmNyZWF0ZVNvdXJjZVppcChwYXRoQW5kQ29u
dGVudHMsIHNvdXJjZVppcFBhdGgpOw0KQEAgLTExNTksNiArMTE4NywxMCBAQA0KIAkJb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMudXRpbC5VdGlsLmNyZWF0ZUphcihqYXZhUGF0aHNBbmRDb250
ZW50cywgbnVsbCxqYXJQYXRoLCBjbGFzc3BhdGgsIGNvbXBsaWFuY2UpOw0KIAl9DQogDQorCXBy
b3RlY3RlZCB2b2lkIGNyZWF0ZUphcihTdHJpbmdbXSBqYXZhUGF0aHNBbmRDb250ZW50cywgU3Ry
aW5nIGphclBhdGgsIFN0cmluZ1tdIGNsYXNzcGF0aCwgU3RyaW5nIGNvbXBsaWFuY2UsIE1hcCBv
cHRpb25zKSB0aHJvd3MgSU9FeGNlcHRpb24gew0KKwkJb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMudXRpbC5VdGlsLmNyZWF0ZUphcihqYXZhUGF0aHNBbmRDb250ZW50cywgbnVsbCwgamFyUGF0
aCwgY2xhc3NwYXRoLCBjb21wbGlhbmNlLCBvcHRpb25zKTsNCisJfQ0KKwkNCiAJLyoNCiAJfQ0K
IAkgKiBDcmVhdGVzIGEgSmF2YSBwcm9qZWN0IHdoZXJlIHByaj1zcmM9YmluIGFuZCB3aXRoIEpD
TF9MSUIgb24gaXRzIGNsYXNzcGF0aC4NCkluZGV4OiBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvbW9kZWwvTWVtZW50b1Rlc3RzLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zz
cm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9NZW1lbnRvVGVzdHMuamF2YSx2DQpyZXRyaWV2aW5n
IHJldmlzaW9uIDEuMzANCmRpZmYgLXUgLXIxLjMwIE1lbWVudG9UZXN0cy5qYXZhDQotLS0gc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL01lbWVudG9UZXN0cy5qYXZhCTIyIERl
YyAyMDEwIDA1OjU2OjU2IC0wMDAwCTEuMzANCisrKyBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvbW9kZWwvTWVtZW50b1Rlc3RzLmphdmEJMTcgRmViIDIwMTEgMjI6MDY6MDEgLTAwMDAN
CkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0
IChjKSAyMDAwLCAyMDEwIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdo
dCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmln
aHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxz
DQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQ
dWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRp
b24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC0xNyw2ICsxNyw3IEBADQogaW1wb3J0IG9yZy5l
Y2xpcHNlLmNvcmUucnVudGltZS5QYXRoOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS4q
Ow0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy51dGlsLlV0aWw7DQoraW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkFubm90YXRpb247DQogaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkphdmFFbGVtZW50Ow0KIGltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29yZS5Mb2NhbFZhcmlhYmxlOw0KIA0KQEAgLTQ4Niw3ICs0ODcsNyBA
QA0KIAlJVHlwZSB0eXBlID0gZ2V0Q29tcGlsYXRpb25Vbml0KCIvUC9zcmMvcC9YLmphdmEiKS5n
ZXRUeXBlKCJYIik7DQogCUlNZXRob2QgbWV0aG9kID0gdHlwZS5nZXRNZXRob2QoImZvbyIsIG5l
dyBTdHJpbmdbXXt9KTsNCiANCi0JSUxvY2FsVmFyaWFibGUgbG9jYWxWYXIgPSBuZXcgTG9jYWxW
YXJpYWJsZSgoSmF2YUVsZW1lbnQpbWV0aG9kLCAidmFyIiwgMSwgMiwgMywgNCwgIloiLCBudWxs
LCAwLCB0cnVlKTsNCisJSUxvY2FsVmFyaWFibGUgbG9jYWxWYXIgPSBuZXcgTG9jYWxWYXJpYWJs
ZSgoSmF2YUVsZW1lbnQpbWV0aG9kLCAidmFyIiwgMSwgMiwgMywgNCwgIloiLCBBbm5vdGF0aW9u
Lk5PX0FOTk9UQVRJT05TLCAwLCB0cnVlKTsNCiAJYXNzZXJ0TWVtZW50bygNCiAJCSI9UC9zcmM8
cHtYLmphdmFbWH5mb29AdmFyITEhMiEzITQhWiEwIXRydWUiLA0KIAkJbG9jYWxWYXIpOw0KQEAg
LTQ5OCw3ICs0OTksNyBAQA0KIAlJVHlwZSB0eXBlID0gZ2V0Q2xhc3NGaWxlKCIvUC9zcmMvcC9Y
LmNsYXNzIikuZ2V0VHlwZSgpOw0KIAlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kKCJm
b28iLCBuZXcgU3RyaW5nW117IkkifSk7DQogDQotCUlMb2NhbFZhcmlhYmxlIGxvY2FsVmFyID0g
bmV3IExvY2FsVmFyaWFibGUoKEphdmFFbGVtZW50KW1ldGhvZCwgInZhciIsIDEsIDIsIDMsIDQs
ICJaIiwgbnVsbCwwLCBmYWxzZSk7DQorCUlMb2NhbFZhcmlhYmxlIGxvY2FsVmFyID0gbmV3IExv
Y2FsVmFyaWFibGUoKEphdmFFbGVtZW50KW1ldGhvZCwgInZhciIsIDEsIDIsIDMsIDQsICJaIiwg
QW5ub3RhdGlvbi5OT19BTk5PVEFUSU9OUywwLCBmYWxzZSk7DQogCWFzc2VydE1lbWVudG8oDQog
CQkiPVAvc3JjPHAoWC5jbGFzc1tYfmZvb35JQHZhciExITIhMyE0IVohMCFmYWxzZSIsDQogCQls
b2NhbFZhcik7DQpAQCAtNTEwLDcgKzUxMSw3IEBADQogCUlUeXBlIHR5cGUgPSBnZXRDb21waWxh
dGlvblVuaXQoIi9QL3NyYy9wL1guamF2YSIpLmdldFR5cGUoIlgiKTsNCiAJSUluaXRpYWxpemVy
IGluaXRpYWxpemVyID0gdHlwZS5nZXRJbml0aWFsaXplcigxKTsNCiANCi0JSUxvY2FsVmFyaWFi
bGUgbG9jYWxWYXIgPSBuZXcgTG9jYWxWYXJpYWJsZSgoSmF2YUVsZW1lbnQpaW5pdGlhbGl6ZXIs
ICJ2YXIiLCAxLCAyLCAzLCA0LCAiWiIsIG51bGwsIDAsIGZhbHNlKTsNCisJSUxvY2FsVmFyaWFi
bGUgbG9jYWxWYXIgPSBuZXcgTG9jYWxWYXJpYWJsZSgoSmF2YUVsZW1lbnQpaW5pdGlhbGl6ZXIs
ICJ2YXIiLCAxLCAyLCAzLCA0LCAiWiIsIEFubm90YXRpb24uTk9fQU5OT1RBVElPTlMsIDAsIGZh
bHNlKTsNCiAJYXNzZXJ0TWVtZW50bygNCiAJCSI9UC9zcmM8cHtYLmphdmFbWHwxQHZhciExITIh
MyE0IVohMCFmYWxzZSIsDQogCQlsb2NhbFZhcik7DQpJbmRleDogc3JjL29yZy9lY2xpcHNlL2pk
dC9jb3JlL3Rlc3RzL21vZGVsL1JlY29uY2lsZXJUZXN0cy5qYXZhDQo9PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1Mg
ZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvUmVjb25jaWxlclRlc3RzLmphdmEs
dg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjE2NA0KZGlmZiAtdSAtcjEuMTY0IFJlY29uY2lsZXJU
ZXN0cy5qYXZhDQotLS0gc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL1JlY29u
Y2lsZXJUZXN0cy5qYXZhCTMgRGVjIDIwMTAgMDg6NDQ6MzEgLTAwMDAJMS4xNjQNCisrKyBzcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvUmVjb25jaWxlclRlc3RzLmphdmEJMTcg
RmViIDIwMTEgMjI6MDY6MDIgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEwIElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24g
YW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRo
ZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRo
ZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNj
b21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC0zNTYs
NyArMzU2LDggQEANCiAJCQkJIioqLyoiDQogCQkJfSwNCiAJCQludWxsLCANCi0JCQkiMS40Ig0K
KwkJCSIxLjQiLA0KKwkJCW51bGwNCiAJCSk7DQogCQljcmVhdGVKYXZhUHJvamVjdCgiUDIiLCBu
ZXcgU3RyaW5nW10geyJzcmMifSwgbmV3IFN0cmluZ1tdIHsiSkNMX0xJQiJ9LCBuZXcgU3RyaW5n
W10geyIvUDEifSwgImJpbiIpOw0KIAkJc2V0VXBXb3JraW5nQ29weSgiL1AyL3NyYy9ZLmphdmEi
LCAicHVibGljIGNsYXNzIFkgZXh0ZW5kcyBwLlgge30iKTsNCkluZGV4OiBzcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvU2VhcmNoVGVzdHMuamF2YQ0KPT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNT
IGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwv
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL1NlYXJjaFRlc3RzLmphdmEsdg0K
cmV0cmlldmluZyByZXZpc2lvbiAxLjU0DQpkaWZmIC11IC1yMS41NCBTZWFyY2hUZXN0cy5qYXZh
DQotLS0gc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL1NlYXJjaFRlc3RzLmph
dmEJMTQgSmFuIDIwMTEgMTc6MDI6MjIgLTAwMDAJMS41NA0KKysrIHNyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9tb2RlbC9TZWFyY2hUZXN0cy5qYXZhCTE3IEZlYiAyMDExIDIyOjA2OjAy
IC0wMDAwDQpAQCAtMjMsNiArMjMsNyBAQA0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5z
ZWFyY2guKjsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwuU2VtYXBo
b3JlLlRpbWVPdXRFeGNlcHRpb247DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3Rz
LnV0aWwuVXRpbDsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuQW5ub3Rh
dGlvbjsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuSmF2YUVsZW1lbnQ7
DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkphdmFNb2RlbE1hbmFnZXI7
DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkxvY2FsVmFyaWFibGU7DQpA
QCAtOTEzLDcgKzkxNCwxNyBAQA0KICAqIFRlc3QgTG9jYWxWYXJEZWNsYXJhdGlvblBhdHRlcm4g
Y3JlYXRpb24NCiAgKi8NCiBwdWJsaWMgdm9pZCB0ZXN0U2VhcmNoUGF0dGVybkNyZWF0aW9uMzAo
KSB7DQotCUlMb2NhbFZhcmlhYmxlIGxvY2FsVmFyID0gbmV3IExvY2FsVmFyaWFibGUoKEphdmFF
bGVtZW50KWdldENvbXBpbGF0aW9uVW5pdCgiL1AvWC5qYXZhIikuZ2V0VHlwZSgiWCIpLmdldE1l
dGhvZCgiZm9vIiwgbmV3IFN0cmluZ1swXSksICAidmFyIiwgMSwgMiwgMywgNCwgIloiLCBudWxs
LCAwLCBmYWxzZSk7DQorCUlMb2NhbFZhcmlhYmxlIGxvY2FsVmFyID0gbmV3IExvY2FsVmFyaWFi
bGUoDQorCQkJKEphdmFFbGVtZW50KWdldENvbXBpbGF0aW9uVW5pdCgiL1AvWC5qYXZhIikuZ2V0
VHlwZSgiWCIpLmdldE1ldGhvZCgiZm9vIiwgbmV3IFN0cmluZ1swXSksDQorCQkJInZhciIsDQor
CQkJMSwNCisJCQkyLA0KKwkJCTMsDQorCQkJNCwNCisJCQkiWiIsDQorCQkJQW5ub3RhdGlvbi5O
T19BTk5PVEFUSU9OUywNCisJCQkwLA0KKwkJCWZhbHNlKTsNCiAJU2VhcmNoUGF0dGVybiBzZWFy
Y2hQYXR0ZXJuID0gY3JlYXRlUGF0dGVybigNCiAJCQlsb2NhbFZhciwNCiAJCQlJSmF2YVNlYXJj
aENvbnN0YW50cy5ERUNMQVJBVElPTlMpOw0KQEAgLTkyNyw3ICs5MzgsMTcgQEANCiAgKiBUZXN0
IExvY2FsVmFyUmVmZXJlbmNlUGF0dGVybiBjcmVhdGlvbg0KICAqLw0KIHB1YmxpYyB2b2lkIHRl
c3RTZWFyY2hQYXR0ZXJuQ3JlYXRpb24zMSgpIHsNCi0JSUxvY2FsVmFyaWFibGUgbG9jYWxWYXIg
PSBuZXcgTG9jYWxWYXJpYWJsZSgoSmF2YUVsZW1lbnQpZ2V0Q29tcGlsYXRpb25Vbml0KCIvUC9Y
LmphdmEiKS5nZXRUeXBlKCJYIikuZ2V0TWV0aG9kKCJmb28iLCBuZXcgU3RyaW5nWzBdKSwgICJ2
YXIiLCAxLCAyLCAzLCA0LCAiWiIsIG51bGwsIDAsIGZhbHNlKTsNCisJSUxvY2FsVmFyaWFibGUg
bG9jYWxWYXIgPSBuZXcgTG9jYWxWYXJpYWJsZSgNCisJCQkoSmF2YUVsZW1lbnQpZ2V0Q29tcGls
YXRpb25Vbml0KCIvUC9YLmphdmEiKS5nZXRUeXBlKCJYIikuZ2V0TWV0aG9kKCJmb28iLCBuZXcg
U3RyaW5nWzBdKSwNCisJCQkidmFyIiwNCisJCQkxLA0KKwkJCTIsDQorCQkJMywNCisJCQk0LA0K
KwkJCSJaIiwNCisJCQlBbm5vdGF0aW9uLk5PX0FOTk9UQVRJT05TLA0KKwkJCTAsDQorCQkJZmFs
c2UpOw0KIAlTZWFyY2hQYXR0ZXJuIHNlYXJjaFBhdHRlcm4gPSBjcmVhdGVQYXR0ZXJuKA0KIAkJ
CWxvY2FsVmFyLA0KIAkJCUlKYXZhU2VhcmNoQ29uc3RhbnRzLlJFRkVSRU5DRVMpOw0KQEAgLTk0
MSw3ICs5NjIsMTcgQEANCiAgKiBUZXN0IExvY2FsVmFyQ29tYmluZWRQYXR0ZXJuIGNyZWF0aW9u
DQogICovDQogcHVibGljIHZvaWQgdGVzdFNlYXJjaFBhdHRlcm5DcmVhdGlvbjMyKCkgew0KLQlJ
TG9jYWxWYXJpYWJsZSBsb2NhbFZhciA9IG5ldyBMb2NhbFZhcmlhYmxlKChKYXZhRWxlbWVudCln
ZXRDb21waWxhdGlvblVuaXQoIi9QL1guamF2YSIpLmdldFR5cGUoIlgiKS5nZXRNZXRob2QoImZv
byIsIG5ldyBTdHJpbmdbMF0pLCAgInZhciIsIDEsIDIsIDMsIDQsICJaIiwgbnVsbCwgMCwgZmFs
c2UpOw0KKwlJTG9jYWxWYXJpYWJsZSBsb2NhbFZhciA9IG5ldyBMb2NhbFZhcmlhYmxlKA0KKwkJ
CShKYXZhRWxlbWVudClnZXRDb21waWxhdGlvblVuaXQoIi9QL1guamF2YSIpLmdldFR5cGUoIlgi
KS5nZXRNZXRob2QoImZvbyIsIG5ldyBTdHJpbmdbMF0pLA0KKwkJCSJ2YXIiLA0KKwkJCTEsDQor
CQkJMiwNCisJCQkzLA0KKwkJCTQsDQorCQkJIloiLA0KKwkJCUFubm90YXRpb24uTk9fQU5OT1RB
VElPTlMsDQorCQkJMCwNCisJCQlmYWxzZSk7DQogCVNlYXJjaFBhdHRlcm4gc2VhcmNoUGF0dGVy
biA9IGNyZWF0ZVBhdHRlcm4oDQogCQkJbG9jYWxWYXIsDQogCQkJSUphdmFTZWFyY2hDb25zdGFu
dHMuQUxMX09DQ1VSUkVOQ0VTKTsNCkluZGV4OiBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvbW9kZWwvVHlwZVJlc29sdmVUZXN0cy5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2
c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvVHlwZVJlc29sdmVUZXN0cy5qYXZhLHYNCnJldHJp
ZXZpbmcgcmV2aXNpb24gMS4xNA0KZGlmZiAtdSAtcjEuMTQgVHlwZVJlc29sdmVUZXN0cy5qYXZh
DQotLS0gc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL1R5cGVSZXNvbHZlVGVz
dHMuamF2YQkyNyBKdW4gMjAwOCAxNjowMjo0MCAtMDAwMAkxLjE0DQorKysgc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL1R5cGVSZXNvbHZlVGVzdHMuamF2YQkxNyBGZWIgMjAx
MSAyMjowNjowMiAtMDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMDggSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhl
cnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29t
cGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1z
IG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmll
cyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTEwLDEyICsxMCwz
MCBAQA0KICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMubW9kZWw7DQogDQotaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5D
b3JlRXhjZXB0aW9uOw0KLWltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS4qOw0KLWltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy51dGlsLlV0aWw7DQoraW1wb3J0IGphdmEuaW8uSU9F
eGNlcHRpb247DQoraW1wb3J0IGphdmEudXRpbC5IYXNoTWFwOw0KK2ltcG9ydCBqYXZhLnV0aWwu
TWFwOw0KIA0KIGltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdDsNCiANCitpbXBvcnQgb3JnLmVj
bGlwc2UuY29yZS5ydW50aW1lLkNvcmVFeGNlcHRpb247DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5jb3JlLkZsYWdzOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JQW5ub3RhdGlvbjsN
CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUNvZGVBc3Npc3Q7DQoraW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5jb3JlLklDb21waWxhdGlvblVuaXQ7DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5jb3JlLklKYXZhRWxlbWVudDsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUphdmFQ
cm9qZWN0Ow0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JTG9jYWxWYXJpYWJsZTsNCitp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSU1lbWJlclZhbHVlUGFpcjsNCitpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmNvcmUuSU1ldGhvZDsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUu
SVBhY2thZ2VGcmFnbWVudFJvb3Q7DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklTb3Vy
Y2VSYW5nZTsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSVR5cGU7DQoraW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5jb3JlLkphdmFDb3JlOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29y
ZS5KYXZhTW9kZWxFeGNlcHRpb247DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3Rz
LnV0aWwuVXRpbDsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuTG9jYWxW
YXJpYWJsZTsNCisNCiBwdWJsaWMgY2xhc3MgVHlwZVJlc29sdmVUZXN0cyBleHRlbmRzIE1vZGlm
eWluZ1Jlc291cmNlVGVzdHMgew0KIAlJQ29tcGlsYXRpb25Vbml0IGN1Ow0KIHB1YmxpYyBUeXBl
UmVzb2x2ZVRlc3RzKFN0cmluZyBuYW1lKSB7DQpAQCAtOTUsNyArMTEzLDcgQEANCiB9DQogCXN0
YXRpYyB7DQogLy8JCVRFU1RTX05VTUJFUlMgPSBuZXcgaW50W10geyAxODIsIDE4MyB9Ow0KLS8v
CQlURVNUU19OQU1FUyA9IG5ldyBTdHJpbmdbXSB7InRlc3QwMTc3In07DQorLy8JCVRFU1RTX05B
TUVTID0gbmV3IFN0cmluZ1tdIHsgInRlc3RQYXJhbUFubm90YXRpb25zNCIgfTsNCiAJfQ0KIAlw
dWJsaWMgc3RhdGljIFRlc3Qgc3VpdGUoKSB7DQogCQlyZXR1cm4gYnVpbGRNb2RlbFRlc3RTdWl0
ZShUeXBlUmVzb2x2ZVRlc3RzLmNsYXNzKTsNCkBAIC0yOTksNCArMzE3LDM4NyBAQA0KIAkJInA0
LkEuSW5uZXIiLA0KIAkJdHlwZXMpOw0KIH0NCisvKioNCisgKiBAc2VlICJodHRwczovL2J1Z3Mu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzM0NzgzIg0KKyAqLw0KK3B1YmxpYyB2
b2lkIHRlc3RQYXJhbUFubm90YXRpb25zKCkgdGhyb3dzIENvcmVFeGNlcHRpb24gew0KKwl0cnkg
ew0KKwkJY3JlYXRlSmF2YVByb2plY3QoIlAiLCBuZXcgU3RyaW5nW10geyJzcmMifSwgbmV3IFN0
cmluZ1tdIHsiSkNMMTVfTElCIn0sICJiaW4iLCAiMS41Iik7DQorCQlTdHJpbmcgc291cmNlID0g
InBhY2thZ2UgcDtcbiIgKw0KKwkJCQkicHVibGljIGNsYXNzIFg8VD4ge1xuIiArDQorCQkJCSIJ
WDxTdHJpbmc+IGZpZWxkO1xuIiArDQorCQkJCSIJQEluamVjdFxuIiArDQorCQkJCSIJcHVibGlj
IHZvaWQgVGVzdChARGVmYXVsdCBTdHJpbmcgcHJvY2Vzc29yKSB7fVxuIiArDQorCQkJCSJ9IiAr
DQorCQkJCSJAaW50ZXJmYWNlIEluamVjdHtcbiIgKw0KKwkJCQkifSIgKw0KKwkJCQkiQGludGVy
ZmFjZSBEZWZhdWx0e1xuIiArDQorCQkJCSJ9IjsNCisJCWNyZWF0ZUZvbGRlcigiL1Avc3JjL3Ai
KTsNCisJCWNyZWF0ZUZpbGUoDQorCQkJIi9QL3NyYy9wL1guamF2YSIsDQorCQkJc291cmNlDQor
CQkpOw0KKwkJd2FpdEZvckF1dG9CdWlsZCgpOw0KKwkJDQorCQlJQ29tcGlsYXRpb25Vbml0IHVu
aXQgPSBnZXRDb21waWxhdGlvblVuaXQoIi9QL3NyYy9wL1guamF2YSIpOyANCisJCUlKYXZhRWxl
bWVudFtdIHZhcmlhYmxlID0gKChJQ29kZUFzc2lzdCkgdW5pdCkuY29kZVNlbGVjdChzb3VyY2Uu
aW5kZXhPZigicHJvY2Vzc29yIiksICJwcm9jZXNzb3IiLmxlbmd0aCgpKTsNCisNCisJCWFzc2Vy
dEVxdWFscygxLCB2YXJpYWJsZS5sZW5ndGgpOw0KKwkJU3RyaW5nIGFubm90YXRpb25TdHJpbmcg
PSAiQERlZmF1bHQgW2luIHByb2Nlc3NvciBbaW4gVGVzdChTdHJpbmcpIFtpbiBYIFtpbiBYLmph
dmEgW2luIHAgW2luIHNyYyBbaW4gUF1dXV1dXV0iOw0KKwkJYXNzZXJ0RXF1YWxzKGFubm90YXRp
b25TdHJpbmcsICgoTG9jYWxWYXJpYWJsZSl2YXJpYWJsZVswXSkuZ2V0QW5ub3RhdGlvbnMoKVsw
XS50b1N0cmluZygpKTsNCisJCUlUeXBlIHR5cGUgPSB1bml0LmdldFR5cGUoIlgiKTsNCisJCQ0K
KwkJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhvZHMoKVswXTsNCisJCWFzc2VydEVxdWFs
cyhhbm5vdGF0aW9uU3RyaW5nLCBtZXRob2QuZ2V0UGFyYW1ldGVycygpWzBdLmdldEFubm90YXRp
b25zKClbMF0udG9TdHJpbmcoKSk7DQorCX0gZmluYWxseSB7DQorCQlkZWxldGVQcm9qZWN0KCJQ
Iik7DQorCX0NCit9DQorLyoqDQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1
Z3Mvc2hvd19idWcuY2dpP2lkPTMzNDc4MyINCisgKi8NCitwdWJsaWMgdm9pZCB0ZXN0UGFyYW1B
bm5vdGF0aW9uczIoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiwgSU9FeGNlcHRpb24gew0KKwl0cnkg
ew0KKwkJSUphdmFQcm9qZWN0IHByb2plY3QgPSBjcmVhdGVKYXZhUHJvamVjdCgiUCIsIG5ldyBT
dHJpbmdbXSB7InNyYyJ9LCBuZXcgU3RyaW5nW10geyJKQ0wxNV9MSUIifSwgImJpbiIsICIxLjUi
KTsNCisJCVN0cmluZ1tdIHBhdGhBbmRDb250ZW50cyA9IG5ldyBTdHJpbmdbXXsicC9YLmphdmEi
LA0KKwkJCQkicGFja2FnZSBwO1xuIiArDQorCQkJCSJwdWJsaWMgY2xhc3MgWDxUPiB7XG4iICsN
CisJCQkJIglYPFN0cmluZz4gZmllbGQ7XG4iICsNCisJCQkJIglASW5qZWN0XG4iICsNCisJCQkJ
IglwdWJsaWMgdm9pZCBUZXN0KEBEZWZhdWx0IFN0cmluZyBwcm9jZXNzb3IpIHt9XG4iICsNCisJ
CQkJIn0iICsNCisJCQkJIkBpbnRlcmZhY2UgSW5qZWN0e1xuIiArDQorCQkJCSJ9IiArDQorCQkJ
CSJAaW50ZXJmYWNlIERlZmF1bHR7XG4iICsNCisJCQkJIn0ifTsNCisJCWFkZExpYnJhcnkocHJv
amVjdCwgImxpYjMzNDc4My5qYXIiLCAibGlic3JjLnppcCIsIHBhdGhBbmRDb250ZW50cywgSmF2
YUNvcmUuVkVSU0lPTl8xXzUpOw0KKwkJDQorCQl3YWl0Rm9yQXV0b0J1aWxkKCk7DQorCQlJUGFj
a2FnZUZyYWdtZW50Um9vdCByb290ID0gcHJvamVjdC5nZXRQYWNrYWdlRnJhZ21lbnRSb290KGdl
dEZpbGUoIi9QL2xpYjMzNDc4My5qYXIiKSk7DQorCQlJVHlwZSB0eXBlID0gcm9vdC5nZXRQYWNr
YWdlRnJhZ21lbnQoInAiKS5nZXRDbGFzc0ZpbGUoIlguY2xhc3MiKS5nZXRUeXBlKCk7DQorCQlT
dHJpbmcgYW5ub3RhdGlvblN0cmluZyA9ICJAcC5EZWZhdWx0IFtpbiBwcm9jZXNzb3IgW2luIFRl
c3QoamF2YS5sYW5nLlN0cmluZykgW2luIFggW2luIFguY2xhc3MgW2luIHAgW2luIGxpYjMzNDc4
My5qYXIgW2luIFBdXV1dXV1dIjsNCisJCQ0KKwkJSU1ldGhvZCBtZXRob2QgPSB0eXBlLmdldE1l
dGhvZHMoKVsxXTsNCisJCWFzc2VydEVxdWFscyhhbm5vdGF0aW9uU3RyaW5nLCBtZXRob2QuZ2V0
UGFyYW1ldGVycygpWzBdLmdldEFubm90YXRpb25zKClbMF0udG9TdHJpbmcoKSk7DQorCX0gZmlu
YWxseSB7DQorCQlkZWxldGVQcm9qZWN0KCJQIik7DQorCX0NCit9DQorLyoqDQorICogQHNlZSAi
aHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMzNDc4MyINCisg
Ki8NCitwdWJsaWMgdm9pZCB0ZXN0UGFyYW1Bbm5vdGF0aW9uczMoKSB0aHJvd3MgQ29yZUV4Y2Vw
dGlvbiB7DQorCXRyeSB7DQorCQljcmVhdGVKYXZhUHJvamVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7
InNyYyJ9LCBuZXcgU3RyaW5nW10geyJKQ0wxNV9MSUIifSwgImJpbiIsICIxLjUiKTsNCisJCVN0
cmluZyBzb3VyY2UgPSAicGFja2FnZSBwO1xuIiArDQorCQkJCSJwdWJsaWMgY2xhc3MgWDxUPiB7
XG4iICsNCisJCQkJIglYPFN0cmluZz4gZmllbGQ7XG4iICsNCisJCQkJIglASW5qZWN0XG4iICsN
CisJCQkJIglwdWJsaWMgdm9pZCBUZXN0KGludCBpLCBARGVmYXVsdCBATWFya2VyKGlkPTEpIFN0
cmluZyBwcm9jZXNzb3IsIGludCBrKSB7fVxuIiArDQorCQkJCSJ9XG4iICsNCisJCQkJIkBpbnRl
cmZhY2UgSW5qZWN0e1xuIiArDQorCQkJCSJ9XG4iICsNCisJCQkJIkBpbnRlcmZhY2UgTWFya2Vy
IHtcbiIgKw0KKwkJCQkiCWludCBpZCgpIGRlZmF1bHQgMDtcbiIgKw0KKwkJCQkifVxuIiArDQor
CQkJCSJAaW50ZXJmYWNlIERlZmF1bHR7XG4iICsNCisJCQkJIn0iOw0KKwkJY3JlYXRlRm9sZGVy
KCIvUC9zcmMvcCIpOw0KKwkJY3JlYXRlRmlsZSgNCisJCQkiL1Avc3JjL3AvWC5qYXZhIiwNCisJ
CQlzb3VyY2UNCisJCSk7DQorCQl3YWl0Rm9yQXV0b0J1aWxkKCk7DQorCQkNCisJCUlDb21waWxh
dGlvblVuaXQgdW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiL1Avc3JjL3AvWC5qYXZhIik7IA0K
KwkJSUphdmFFbGVtZW50W10gdmFyaWFibGUgPSAoKElDb2RlQXNzaXN0KSB1bml0KS5jb2RlU2Vs
ZWN0KHNvdXJjZS5pbmRleE9mKCJwcm9jZXNzb3IiKSwgInByb2Nlc3NvciIubGVuZ3RoKCkpOw0K
Kw0KKwkJYXNzZXJ0RXF1YWxzKDEsIHZhcmlhYmxlLmxlbmd0aCk7DQorCQlTdHJpbmcgYW5ub3Rh
dGlvblN0cmluZzEgPSAiQERlZmF1bHQgW2luIHByb2Nlc3NvciBbaW4gVGVzdChpbnQsIFN0cmlu
ZywgaW50KSBbaW4gWCBbaW4gWC5qYXZhIFtpbiBwIFtpbiBzcmMgW2luIFBdXV1dXV1dIjsNCisJ
CVN0cmluZyBhbm5vdGF0aW9uU3RyaW5nMiA9ICJATWFya2VyIFtpbiBwcm9jZXNzb3IgW2luIFRl
c3QoaW50LCBTdHJpbmcsIGludCkgW2luIFggW2luIFguamF2YSBbaW4gcCBbaW4gc3JjIFtpbiBQ
XV1dXV1dXSI7DQorCQlhc3NlcnRFcXVhbHMoYW5ub3RhdGlvblN0cmluZzEsICgoTG9jYWxWYXJp
YWJsZSl2YXJpYWJsZVswXSkuZ2V0QW5ub3RhdGlvbnMoKVswXS50b1N0cmluZygpKTsNCisJCUlU
eXBlIHR5cGUgPSB1bml0LmdldFR5cGUoIlgiKTsNCisJCQ0KKwkJSU1ldGhvZCBtZXRob2QgPSB0
eXBlLmdldE1ldGhvZHMoKVswXTsNCisJCUlBbm5vdGF0aW9uW10gcGFyYW1ldGVyQW5ub3RhdGlv
bnMgPSBtZXRob2QuZ2V0UGFyYW1ldGVycygpWzFdLmdldEFubm90YXRpb25zKCk7DQorCQlhc3Nl
cnRFcXVhbHMoIldyb25nIGxlbmd0aCIsIDIsIHBhcmFtZXRlckFubm90YXRpb25zLmxlbmd0aCk7
DQorCQlhc3NlcnRFcXVhbHMoYW5ub3RhdGlvblN0cmluZzEsIHBhcmFtZXRlckFubm90YXRpb25z
WzBdLnRvU3RyaW5nKCkpOw0KKwkJSUFubm90YXRpb24gaUFubm90YXRpb24gPSBwYXJhbWV0ZXJB
bm5vdGF0aW9uc1sxXTsNCisJCWFzc2VydEVxdWFscyhhbm5vdGF0aW9uU3RyaW5nMiwgaUFubm90
YXRpb24udG9TdHJpbmcoKSk7DQorCQlJTWVtYmVyVmFsdWVQYWlyW10gbWVtYmVyVmFsdWVQYWly
cyA9IGlBbm5vdGF0aW9uLmdldE1lbWJlclZhbHVlUGFpcnMoKTsNCisJCWFzc2VydEVxdWFscygi
V3JvbmcgbnVtYmVyIG9mIHBhaXJzIiwgMSwgbWVtYmVyVmFsdWVQYWlycy5sZW5ndGgpOw0KKwkJ
U3RyaW5nQnVmZmVyIG91dHB1dCA9IG5ldyBTdHJpbmdCdWZmZXIoKTsNCisJCW91dHB1dC5hcHBl
bmQobWVtYmVyVmFsdWVQYWlyc1swXS5nZXRNZW1iZXJOYW1lKCkpOw0KKwkJb3V0cHV0LmFwcGVu
ZCgnICcpOw0KKwkJb3V0cHV0LmFwcGVuZChtZW1iZXJWYWx1ZVBhaXJzWzBdLmdldFZhbHVlKCkp
Ow0KKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB2YWx1ZSIsICJpZCAxIiwgU3RyaW5nLnZhbHVlT2Yo
b3V0cHV0KSk7DQorCQlhc3NlcnRFcXVhbHMoIldyb25nIGxlbmd0aCIsIDAsIG1ldGhvZC5nZXRQ
YXJhbWV0ZXJzKClbMF0uZ2V0QW5ub3RhdGlvbnMoKS5sZW5ndGgpOw0KKwkJYXNzZXJ0RXF1YWxz
KCJXcm9uZyBsZW5ndGgiLCAwLCBtZXRob2QuZ2V0UGFyYW1ldGVycygpWzJdLmdldEFubm90YXRp
b25zKCkubGVuZ3RoKTsNCisJfSBmaW5hbGx5IHsNCisJCWRlbGV0ZVByb2plY3QoIlAiKTsNCisJ
fQ0KK30NCisvKioNCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93
X2J1Zy5jZ2k/aWQ9MzM0NzgzIg0KKyAqLw0KK3B1YmxpYyB2b2lkIHRlc3RQYXJhbUFubm90YXRp
b25zNCgpIHRocm93cyBDb3JlRXhjZXB0aW9uLCBJT0V4Y2VwdGlvbiB7DQorCXRyeSB7DQorCQlJ
SmF2YVByb2plY3QgcHJvamVjdCA9IGNyZWF0ZUphdmFQcm9qZWN0KCJQIiwgbmV3IFN0cmluZ1td
IHsic3JjIn0sIG5ldyBTdHJpbmdbXSB7IkpDTDE1X0xJQiJ9LCAiYmluIiwgIjEuNSIpOw0KKwkJ
U3RyaW5nIHNvdXJjZVggPQ0KKwkJCQkicGFja2FnZSBwO1xuIiArDQorCQkJCSJwdWJsaWMgY2xh
c3MgWDxUPiB7XG4iICsNCisJCQkJIglYPFN0cmluZz4gZmllbGQ7XG4iICsNCisJCQkJIglASW5q
ZWN0IEBNYXJrZXIoaWQ9MylcbiIgKw0KKwkJCQkiCXB1YmxpYyB2b2lkIFRlc3QoZmluYWwgaW50
IGksIEBEZWZhdWx0IGZpbmFsIEBNYXJrZXIoaWQ9MSkgU3RyaW5nIHByb2Nlc3NvciwgaW50IGsp
IHt9XG4iICsNCisJCQkJIn0iOw0KKwkJU3RyaW5nW10gcGF0aEFuZENvbnRlbnRzID0gbmV3IFN0
cmluZ1tdeyJwL1guamF2YSIsDQorCQkJCXNvdXJjZVgsDQorCQkJCSJwL0luamVjdC5qYXZhIiwN
CisJCQkJInBhY2thZ2UgcDtcbiIrDQorCQkJCSJwdWJsaWMgQGludGVyZmFjZSBJbmplY3R7XG4i
ICsNCisJCQkJIn0iLA0KKwkJCQkicC9NYXJrZXIuamF2YSIsDQorCQkJCSJwYWNrYWdlIHA7XG4i
ICsNCisJCQkJInB1YmxpYyBAaW50ZXJmYWNlIE1hcmtlciB7XG4iICsNCisJCQkJIglpbnQgaWQo
KSBkZWZhdWx0IDA7XG4iICsNCisJCQkJIn0iLA0KKwkJCQkicC9EZWZhdWx0LmphdmEiLA0KKwkJ
CQkicGFja2FnZSBwO1xuIiArDQorCQkJCSJwdWJsaWMgQGludGVyZmFjZSBEZWZhdWx0e1xuIiAr
DQorCQkJCSJ9In07DQorCQlhZGRMaWJyYXJ5KHByb2plY3QsICJsaWIzMzQ3ODNfMi5qYXIiLCAi
bGliMzM0NzgzXzJzcmMuemlwIiwgcGF0aEFuZENvbnRlbnRzLCBKYXZhQ29yZS5WRVJTSU9OXzFf
NSk7DQorCQkNCisJCXdhaXRGb3JBdXRvQnVpbGQoKTsNCisJCUlQYWNrYWdlRnJhZ21lbnRSb290
IHJvb3QgPSBwcm9qZWN0LmdldFBhY2thZ2VGcmFnbWVudFJvb3QoZ2V0RmlsZSgiL1AvbGliMzM0
NzgzXzIuamFyIikpOw0KKwkJSVR5cGUgdHlwZSA9IHJvb3QuZ2V0UGFja2FnZUZyYWdtZW50KCJw
IikuZ2V0Q2xhc3NGaWxlKCJYLmNsYXNzIikuZ2V0VHlwZSgpOw0KKwkJU3RyaW5nIGFubm90YXRp
b25TdHJpbmcxID0gIkBwLkRlZmF1bHQgW2luIHByb2Nlc3NvciBbaW4gVGVzdChpbnQsIGphdmEu
bGFuZy5TdHJpbmcsIGludCkgW2luIFggW2luIFguY2xhc3MgW2luIHAgW2luIGxpYjMzNDc4M18y
LmphciBbaW4gUF1dXV1dXV0iOw0KKwkJU3RyaW5nIGFubm90YXRpb25TdHJpbmcyID0gIkBwLk1h
cmtlciBbaW4gcHJvY2Vzc29yIFtpbiBUZXN0KGludCwgamF2YS5sYW5nLlN0cmluZywgaW50KSBb
aW4gWCBbaW4gWC5jbGFzcyBbaW4gcCBbaW4gbGliMzM0NzgzXzIuamFyIFtpbiBQXV1dXV1dXSI7
DQorCQlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kcygpWzFdOw0KKwkJSUFubm90YXRp
b25bXSBhbm5vdGF0aW9ucyA9IG1ldGhvZC5nZXRBbm5vdGF0aW9ucygpOw0KKwkJYXNzZXJ0RXF1
YWxzKCJXcm9uZyBsZW5ndGgiLCAyLCBhbm5vdGF0aW9ucy5sZW5ndGgpOw0KKwkJYXNzZXJ0RXF1
YWxzKCJAcC5JbmplY3QgW2luIFRlc3QoaW50LCBqYXZhLmxhbmcuU3RyaW5nLCBpbnQpIFtpbiBY
IFtpbiBYLmNsYXNzIFtpbiBwIFtpbiBsaWIzMzQ3ODNfMi5qYXIgW2luIFBdXV1dXV0iLCBhbm5v
dGF0aW9uc1swXS50b1N0cmluZygpKTsNCisJCUlBbm5vdGF0aW9uIGFubm90YXRpb24gPSBhbm5v
dGF0aW9uc1sxXTsNCisJCWFzc2VydEVxdWFscygiQHAuTWFya2VyIFtpbiBUZXN0KGludCwgamF2
YS5sYW5nLlN0cmluZywgaW50KSBbaW4gWCBbaW4gWC5jbGFzcyBbaW4gcCBbaW4gbGliMzM0Nzgz
XzIuamFyIFtpbiBQXV1dXV1dIiwgYW5ub3RhdGlvbi50b1N0cmluZygpKTsNCisJCUlNZW1iZXJW
YWx1ZVBhaXJbXSBtZW1iZXJWYWx1ZVBhaXJzID0gYW5ub3RhdGlvbi5nZXRNZW1iZXJWYWx1ZVBh
aXJzKCk7DQorCQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBwYWlycyIsIDEsIG1lbWJl
clZhbHVlUGFpcnMubGVuZ3RoKTsNCisJCVN0cmluZ0J1ZmZlciBvdXRwdXQgPSBuZXcgU3RyaW5n
QnVmZmVyKCk7DQorCQlvdXRwdXQuYXBwZW5kKG1lbWJlclZhbHVlUGFpcnNbMF0uZ2V0TWVtYmVy
TmFtZSgpKTsNCisJCW91dHB1dC5hcHBlbmQoJyAnKTsNCisJCW91dHB1dC5hcHBlbmQobWVtYmVy
VmFsdWVQYWlyc1swXS5nZXRWYWx1ZSgpKTsNCisJCWFzc2VydEVxdWFscygiV3JvbmcgdmFsdWUi
LCAiaWQgMyIsIFN0cmluZy52YWx1ZU9mKG91dHB1dCkpOw0KKwkJSUxvY2FsVmFyaWFibGUgbG9j
YWxWYXJpYWJsZSA9IG1ldGhvZC5nZXRQYXJhbWV0ZXJzKClbMV07DQorCQlJU291cmNlUmFuZ2Ug
c291cmNlUmFuZ2UgPSBsb2NhbFZhcmlhYmxlLmdldFNvdXJjZVJhbmdlKCk7DQorCQlTdHJpbmcg
bG9jYWxTb3VyY2UgPSBzb3VyY2VYLnN1YnN0cmluZygNCisJCQkJc291cmNlUmFuZ2UuZ2V0T2Zm
c2V0KCksDQorCQkJCXNvdXJjZVJhbmdlLmdldE9mZnNldCgpICsgc291cmNlUmFuZ2UuZ2V0TGVu
Z3RoKCkpOw0KKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBzb3VyY2UiLCAiQERlZmF1bHQgZmluYWwg
QE1hcmtlcihpZD0xKSBTdHJpbmcgcHJvY2Vzc29yIiwgbG9jYWxTb3VyY2UpOw0KKwkJYXNzZXJ0
VHJ1ZSgiV3JvbmcgbW9kaWZpZXJzIiwgRmxhZ3MuaXNGaW5hbChsb2NhbFZhcmlhYmxlLmdldEZs
YWdzKCkpKTsNCisJCUlBbm5vdGF0aW9uW10gcGFyYW1ldGVyQW5ub3RhdGlvbnMgPSBsb2NhbFZh
cmlhYmxlLmdldEFubm90YXRpb25zKCk7DQorCQlhc3NlcnRFcXVhbHMoIldyb25nIGxlbmd0aCIs
IDIsIHBhcmFtZXRlckFubm90YXRpb25zLmxlbmd0aCk7DQorCQlhc3NlcnRFcXVhbHMoYW5ub3Rh
dGlvblN0cmluZzEsIHBhcmFtZXRlckFubm90YXRpb25zWzBdLnRvU3RyaW5nKCkpOw0KKwkJYW5u
b3RhdGlvbiA9IHBhcmFtZXRlckFubm90YXRpb25zWzFdOw0KKwkJYXNzZXJ0RXF1YWxzKGFubm90
YXRpb25TdHJpbmcyLCBhbm5vdGF0aW9uLnRvU3RyaW5nKCkpOw0KKwkJbWVtYmVyVmFsdWVQYWly
cyA9IGFubm90YXRpb24uZ2V0TWVtYmVyVmFsdWVQYWlycygpOw0KKwkJYXNzZXJ0RXF1YWxzKCJX
cm9uZyBudW1iZXIgb2YgcGFpcnMiLCAxLCBtZW1iZXJWYWx1ZVBhaXJzLmxlbmd0aCk7DQorCQlv
dXRwdXQgPSBuZXcgU3RyaW5nQnVmZmVyKCk7DQorCQlvdXRwdXQuYXBwZW5kKG1lbWJlclZhbHVl
UGFpcnNbMF0uZ2V0TWVtYmVyTmFtZSgpKTsNCisJCW91dHB1dC5hcHBlbmQoJyAnKTsNCisJCW91
dHB1dC5hcHBlbmQobWVtYmVyVmFsdWVQYWlyc1swXS5nZXRWYWx1ZSgpKTsNCisJCWFzc2VydEVx
dWFscygiV3JvbmcgdmFsdWUiLCAiaWQgMSIsIFN0cmluZy52YWx1ZU9mKG91dHB1dCkpOw0KKwkJ
bG9jYWxWYXJpYWJsZSA9IG1ldGhvZC5nZXRQYXJhbWV0ZXJzKClbMF07DQorCQlhc3NlcnRFcXVh
bHMoIldyb25nIGxlbmd0aCIsIDAsIGxvY2FsVmFyaWFibGUuZ2V0QW5ub3RhdGlvbnMoKS5sZW5n
dGgpOw0KKwkJYXNzZXJ0VHJ1ZSgiV3JvbmcgbW9kaWZpZXJzIiwgRmxhZ3MuaXNGaW5hbChsb2Nh
bFZhcmlhYmxlLmdldEZsYWdzKCkpKTsNCisJCWFzc2VydEVxdWFscygiV3JvbmcgbGVuZ3RoIiwg
MCwgbWV0aG9kLmdldFBhcmFtZXRlcnMoKVsyXS5nZXRBbm5vdGF0aW9ucygpLmxlbmd0aCk7DQor
CX0gZmluYWxseSB7DQorCQlkZWxldGVQcm9qZWN0KCJQIik7DQorCX0NCit9DQorLyoqDQorICog
QHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMzNDc4
MyINCisgKi8NCitwdWJsaWMgdm9pZCB0ZXN0UGFyYW1Bbm5vdGF0aW9uczUoKSB0aHJvd3MgQ29y
ZUV4Y2VwdGlvbiwgSU9FeGNlcHRpb24gew0KKwl0cnkgew0KKwkJSUphdmFQcm9qZWN0IHByb2pl
Y3QgPSBjcmVhdGVKYXZhUHJvamVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7InNyYyJ9LCBuZXcgU3Ry
aW5nW10geyJKQ0wxNV9MSUIifSwgImJpbiIsICIxLjUiKTsNCisJCVN0cmluZ1tdIHBhdGhBbmRD
b250ZW50cyA9IG5ldyBTdHJpbmdbXXsicC9YLmphdmEiLA0KKwkJCQkicGFja2FnZSBwO1xuIiAr
DQorCQkJCSJwdWJsaWMgY2xhc3MgWDxUPiB7XG4iICsNCisJCQkJIglYPFN0cmluZz4gZmllbGQ7
XG4iICsNCisJCQkJIglASW5qZWN0IEBNYXJrZXIoaWQ9MylcbiIgKw0KKwkJCQkiCXB1YmxpYyB2
b2lkIFRlc3QoaW50IGksIEBEZWZhdWx0IEBNYXJrZXIoaWQ9MSkgU3RyaW5nIHByb2Nlc3Nvciwg
aW50IGspIHt9XG4iICsNCisJCQkJIn0iLA0KKwkJCQkicC9JbmplY3QuamF2YSIsDQorCQkJCSJw
YWNrYWdlIHA7XG4iKw0KKwkJCQkicHVibGljIEBpbnRlcmZhY2UgSW5qZWN0e1xuIiArDQorCQkJ
CSJ9IiwNCisJCQkJInAvTWFya2VyLmphdmEiLA0KKwkJCQkicGFja2FnZSBwO1xuIiArDQorCQkJ
CSJwdWJsaWMgQGludGVyZmFjZSBNYXJrZXIge1xuIiArDQorCQkJCSIJaW50IGlkKCkgZGVmYXVs
dCAwO1xuIiArDQorCQkJCSJ9IiwNCisJCQkJInAvRGVmYXVsdC5qYXZhIiwNCisJCQkJInBhY2th
Z2UgcDtcbiIgKw0KKwkJCQkicHVibGljIEBpbnRlcmZhY2UgRGVmYXVsdHtcbiIgKw0KKwkJCQki
fSJ9Ow0KKwkJTWFwIG9wdGlvbnMgPSBuZXcgSGFzaE1hcCgpOw0KKwkJb3B0aW9ucy5wdXQoSmF2
YUNvcmUuQ09NUElMRVJfTE9DQUxfVkFSSUFCTEVfQVRUUiwgSmF2YUNvcmUuRE9fTk9UX0dFTkVS
QVRFKTsNCisJCWFkZExpYnJhcnkocHJvamVjdCwgImxpYjMzNDc4M18zLmphciIsICJsaWIzMzQ3
ODNfM3NyYy56aXAiLCBwYXRoQW5kQ29udGVudHMsIEphdmFDb3JlLlZFUlNJT05fMV81LCBvcHRp
b25zKTsNCisJCQ0KKwkJd2FpdEZvckF1dG9CdWlsZCgpOw0KKwkJSVBhY2thZ2VGcmFnbWVudFJv
b3Qgcm9vdCA9IHByb2plY3QuZ2V0UGFja2FnZUZyYWdtZW50Um9vdChnZXRGaWxlKCIvUC9saWIz
MzQ3ODNfMy5qYXIiKSk7DQorCQlJVHlwZSB0eXBlID0gcm9vdC5nZXRQYWNrYWdlRnJhZ21lbnQo
InAiKS5nZXRDbGFzc0ZpbGUoIlguY2xhc3MiKS5nZXRUeXBlKCk7DQorCQlTdHJpbmcgYW5ub3Rh
dGlvblN0cmluZzEgPSAiQHAuRGVmYXVsdCBbaW4gYXJnMSBbaW4gVGVzdChpbnQsIGphdmEubGFu
Zy5TdHJpbmcsIGludCkgW2luIFggW2luIFguY2xhc3MgW2luIHAgW2luIGxpYjMzNDc4M18zLmph
ciBbaW4gUF1dXV1dXV0iOw0KKwkJU3RyaW5nIGFubm90YXRpb25TdHJpbmcyID0gIkBwLk1hcmtl
ciBbaW4gYXJnMSBbaW4gVGVzdChpbnQsIGphdmEubGFuZy5TdHJpbmcsIGludCkgW2luIFggW2lu
IFguY2xhc3MgW2luIHAgW2luIGxpYjMzNDc4M18zLmphciBbaW4gUF1dXV1dXV0iOw0KKwkJSU1l
dGhvZCBtZXRob2QgPSB0eXBlLmdldE1ldGhvZHMoKVsxXTsNCisJCUlBbm5vdGF0aW9uW10gYW5u
b3RhdGlvbnMgPSBtZXRob2QuZ2V0QW5ub3RhdGlvbnMoKTsNCisJCWFzc2VydEVxdWFscygiV3Jv
bmcgbGVuZ3RoIiwgMiwgYW5ub3RhdGlvbnMubGVuZ3RoKTsNCisJCWFzc2VydEVxdWFscygiQHAu
SW5qZWN0IFtpbiBUZXN0KGludCwgamF2YS5sYW5nLlN0cmluZywgaW50KSBbaW4gWCBbaW4gWC5j
bGFzcyBbaW4gcCBbaW4gbGliMzM0NzgzXzMuamFyIFtpbiBQXV1dXV1dIiwgYW5ub3RhdGlvbnNb
MF0udG9TdHJpbmcoKSk7DQorCQlJQW5ub3RhdGlvbiBhbm5vdGF0aW9uID0gYW5ub3RhdGlvbnNb
MV07DQorCQlhc3NlcnRFcXVhbHMoIkBwLk1hcmtlciBbaW4gVGVzdChpbnQsIGphdmEubGFuZy5T
dHJpbmcsIGludCkgW2luIFggW2luIFguY2xhc3MgW2luIHAgW2luIGxpYjMzNDc4M18zLmphciBb
aW4gUF1dXV1dXSIsIGFubm90YXRpb24udG9TdHJpbmcoKSk7DQorCQlJTWVtYmVyVmFsdWVQYWly
W10gbWVtYmVyVmFsdWVQYWlycyA9IGFubm90YXRpb24uZ2V0TWVtYmVyVmFsdWVQYWlycygpOw0K
KwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgcGFpcnMiLCAxLCBtZW1iZXJWYWx1ZVBh
aXJzLmxlbmd0aCk7DQorCQlTdHJpbmdCdWZmZXIgb3V0cHV0ID0gbmV3IFN0cmluZ0J1ZmZlcigp
Ow0KKwkJb3V0cHV0LmFwcGVuZChtZW1iZXJWYWx1ZVBhaXJzWzBdLmdldE1lbWJlck5hbWUoKSk7
DQorCQlvdXRwdXQuYXBwZW5kKCcgJyk7DQorCQlvdXRwdXQuYXBwZW5kKG1lbWJlclZhbHVlUGFp
cnNbMF0uZ2V0VmFsdWUoKSk7DQorCQlhc3NlcnRFcXVhbHMoIldyb25nIHZhbHVlIiwgImlkIDMi
LCBTdHJpbmcudmFsdWVPZihvdXRwdXQpKTsNCisJCUlBbm5vdGF0aW9uW10gcGFyYW1ldGVyQW5u
b3RhdGlvbnMgPSBtZXRob2QuZ2V0UGFyYW1ldGVycygpWzFdLmdldEFubm90YXRpb25zKCk7DQor
CQlhc3NlcnRFcXVhbHMoIldyb25nIGxlbmd0aCIsIDIsIHBhcmFtZXRlckFubm90YXRpb25zLmxl
bmd0aCk7DQorCQlhc3NlcnRFcXVhbHMoYW5ub3RhdGlvblN0cmluZzEsIHBhcmFtZXRlckFubm90
YXRpb25zWzBdLnRvU3RyaW5nKCkpOw0KKwkJYW5ub3RhdGlvbiA9IHBhcmFtZXRlckFubm90YXRp
b25zWzFdOw0KKwkJYXNzZXJ0RXF1YWxzKGFubm90YXRpb25TdHJpbmcyLCBhbm5vdGF0aW9uLnRv
U3RyaW5nKCkpOw0KKwkJbWVtYmVyVmFsdWVQYWlycyA9IGFubm90YXRpb24uZ2V0TWVtYmVyVmFs
dWVQYWlycygpOw0KKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgcGFpcnMiLCAxLCBt
ZW1iZXJWYWx1ZVBhaXJzLmxlbmd0aCk7DQorCQlvdXRwdXQgPSBuZXcgU3RyaW5nQnVmZmVyKCk7
DQorCQlvdXRwdXQuYXBwZW5kKG1lbWJlclZhbHVlUGFpcnNbMF0uZ2V0TWVtYmVyTmFtZSgpKTsN
CisJCW91dHB1dC5hcHBlbmQoJyAnKTsNCisJCW91dHB1dC5hcHBlbmQobWVtYmVyVmFsdWVQYWly
c1swXS5nZXRWYWx1ZSgpKTsNCisJCWFzc2VydEVxdWFscygiV3JvbmcgdmFsdWUiLCAiaWQgMSIs
IFN0cmluZy52YWx1ZU9mKG91dHB1dCkpOw0KKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBsZW5ndGgi
LCAwLCBtZXRob2QuZ2V0UGFyYW1ldGVycygpWzBdLmdldEFubm90YXRpb25zKCkubGVuZ3RoKTsN
CisJCWFzc2VydEVxdWFscygiV3JvbmcgbGVuZ3RoIiwgMCwgbWV0aG9kLmdldFBhcmFtZXRlcnMo
KVsyXS5nZXRBbm5vdGF0aW9ucygpLmxlbmd0aCk7DQorCX0gZmluYWxseSB7DQorCQlkZWxldGVQ
cm9qZWN0KCJQIik7DQorCX0NCit9DQorLyoqDQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMzNDc4MyINCisgKi8NCitwdWJsaWMgdm9pZCB0
ZXN0UGFyYW1Bbm5vdGF0aW9uczYoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7DQorCXRyeSB7DQor
CQljcmVhdGVKYXZhUHJvamVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7InNyYyJ9LCBuZXcgU3RyaW5n
W10geyJKQ0wxNV9MSUIifSwgImJpbiIsICIxLjUiKTsNCisJCVN0cmluZyBzb3VyY2UgPSAicGFj
a2FnZSBwO1xuIiArDQorCQkJCSJwdWJsaWMgY2xhc3MgWDxUPiB7XG4iICsNCisJCQkJIglYPFN0
cmluZz4gZmllbGQ7XG4iICsNCisJCQkJIglwdWJsaWMgdm9pZCBUZXN0KCkge31cbiIgKw0KKwkJ
CQkifSI7DQorCQljcmVhdGVGb2xkZXIoIi9QL3NyYy9wIik7DQorCQljcmVhdGVGaWxlKA0KKwkJ
CSIvUC9zcmMvcC9YLmphdmEiLA0KKwkJCXNvdXJjZQ0KKwkJKTsNCisJCXdhaXRGb3JBdXRvQnVp
bGQoKTsNCisJCQ0KKwkJSUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0
KCIvUC9zcmMvcC9YLmphdmEiKTsgDQorCQlJVHlwZSB0eXBlID0gdW5pdC5nZXRUeXBlKCJYIik7
DQorCQlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kcygpWzBdOw0KKwkJSUxvY2FsVmFy
aWFibGVbXSBsb2NhbFZhcmlhYmxlcyA9IG1ldGhvZC5nZXRQYXJhbWV0ZXJzKCk7DQorCQlhc3Nl
cnROb3ROdWxsKGxvY2FsVmFyaWFibGVzKTsNCisJCWFzc2VydEVxdWFscygiV3JvbmcgbGVuZ3Ro
IiwgMCwgbG9jYWxWYXJpYWJsZXMubGVuZ3RoKTsNCisJfSBmaW5hbGx5IHsNCisJCWRlbGV0ZVBy
b2plY3QoIlAiKTsNCisJfQ0KK30NCisvKioNCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzM0NzgzIg0KKyAqLw0KK3B1YmxpYyB2b2lkIHRl
c3RQYXJhbUFubm90YXRpb25zNygpIHRocm93cyBDb3JlRXhjZXB0aW9uLCBJT0V4Y2VwdGlvbiB7
DQorCXRyeSB7DQorCQlJSmF2YVByb2plY3QgcHJvamVjdCA9IGNyZWF0ZUphdmFQcm9qZWN0KCJQ
IiwgbmV3IFN0cmluZ1tdIHsic3JjIn0sIG5ldyBTdHJpbmdbXSB7IkpDTDE1X0xJQiJ9LCAiYmlu
IiwgIjEuNSIpOw0KKwkJU3RyaW5nW10gcGF0aEFuZENvbnRlbnRzID0gbmV3IFN0cmluZ1tdeyJw
L1guamF2YSIsDQorCQkJCSJwYWNrYWdlIHA7XG4iICsNCisJCQkJInB1YmxpYyBjbGFzcyBYPFQ+
IHtcbiIgKw0KKwkJCQkiCVg8U3RyaW5nPiBmaWVsZDtcbiIgKw0KKwkJCQkiCXB1YmxpYyB2b2lk
IFRlc3QoKSB7fVxuIiArDQorCQkJCSJ9Ig0KKwkJfTsNCisJCWFkZExpYnJhcnkocHJvamVjdCwg
ImxpYjMzNDc4My5qYXIiLCAibGlic3JjLnppcCIsIHBhdGhBbmRDb250ZW50cywgSmF2YUNvcmUu
VkVSU0lPTl8xXzUpOw0KKwkJDQorCQl3YWl0Rm9yQXV0b0J1aWxkKCk7DQorCQlJUGFja2FnZUZy
YWdtZW50Um9vdCByb290ID0gcHJvamVjdC5nZXRQYWNrYWdlRnJhZ21lbnRSb290KGdldEZpbGUo
Ii9QL2xpYjMzNDc4My5qYXIiKSk7DQorCQlJVHlwZSB0eXBlID0gcm9vdC5nZXRQYWNrYWdlRnJh
Z21lbnQoInAiKS5nZXRDbGFzc0ZpbGUoIlguY2xhc3MiKS5nZXRUeXBlKCk7DQorCQkNCisJCUlN
ZXRob2QgbWV0aG9kID0gdHlwZS5nZXRNZXRob2RzKClbMV07DQorCQlJTG9jYWxWYXJpYWJsZVtd
IGxvY2FsVmFyaWFibGVzID0gbWV0aG9kLmdldFBhcmFtZXRlcnMoKTsNCisJCWFzc2VydE5vdE51
bGwobG9jYWxWYXJpYWJsZXMpOw0KKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBsZW5ndGgiLCAwLCBs
b2NhbFZhcmlhYmxlcy5sZW5ndGgpOw0KKwl9IGZpbmFsbHkgew0KKwkJZGVsZXRlUHJvamVjdCgi
UCIpOw0KKwl9DQorfQ0KKy8qKg0KKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD0zMzQ3ODMiDQorICovDQorcHVibGljIHZvaWQgdGVzdFBhcmFt
QW5ub3RhdGlvbnM4KCkgdGhyb3dzIENvcmVFeGNlcHRpb24sIElPRXhjZXB0aW9uIHsNCisJdHJ5
IHsNCisJCUlKYXZhUHJvamVjdCBwcm9qZWN0ID0gY3JlYXRlSmF2YVByb2plY3QoIlAiLCBuZXcg
U3RyaW5nW10geyJzcmMifSwgbmV3IFN0cmluZ1tdIHsiSkNMMTVfTElCIn0sICJiaW4iLCAiMS41
Iik7DQorCQlTdHJpbmdbXSBwYXRoQW5kQ29udGVudHMgPSBuZXcgU3RyaW5nW117InAvWC5qYXZh
IiwNCisJCQkJInBhY2thZ2UgcDtcbiIgKw0KKwkJCQkicHVibGljIGNsYXNzIFg8VD4ge1xuIiAr
DQorCQkJCSIJWDxTdHJpbmc+IGZpZWxkO1xuIiArDQorCQkJCSIJQEluamVjdCBATWFya2VyKGlk
PTMpXG4iICsNCisJCQkJIglwdWJsaWMgWChpbnQgaSwgQERlZmF1bHQgQE1hcmtlcihpZD0xKSBT
dHJpbmcgcHJvY2Vzc29yLCBpbnQgaykge31cbiIgKw0KKwkJCQkifSIsDQorCQkJCSJwL0luamVj
dC5qYXZhIiwNCisJCQkJInBhY2thZ2UgcDtcbiIrDQorCQkJCSJwdWJsaWMgQGludGVyZmFjZSBJ
bmplY3R7XG4iICsNCisJCQkJIn0iLA0KKwkJCQkicC9NYXJrZXIuamF2YSIsDQorCQkJCSJwYWNr
YWdlIHA7XG4iICsNCisJCQkJInB1YmxpYyBAaW50ZXJmYWNlIE1hcmtlciB7XG4iICsNCisJCQkJ
IglpbnQgaWQoKSBkZWZhdWx0IDA7XG4iICsNCisJCQkJIn0iLA0KKwkJCQkicC9EZWZhdWx0Lmph
dmEiLA0KKwkJCQkicGFja2FnZSBwO1xuIiArDQorCQkJCSJwdWJsaWMgQGludGVyZmFjZSBEZWZh
dWx0e1xuIiArDQorCQkJCSJ9In07DQorCQlNYXAgb3B0aW9ucyA9IG5ldyBIYXNoTWFwKCk7DQor
CQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9MT0NBTF9WQVJJQUJMRV9BVFRSLCBKYXZh
Q29yZS5ET19OT1RfR0VORVJBVEUpOw0KKwkJYWRkTGlicmFyeShwcm9qZWN0LCAibGliMzM0Nzgz
XzMuamFyIiwgImxpYjMzNDc4M18zc3JjLnppcCIsIHBhdGhBbmRDb250ZW50cywgSmF2YUNvcmUu
VkVSU0lPTl8xXzUsIG9wdGlvbnMpOw0KKwkJDQorCQl3YWl0Rm9yQXV0b0J1aWxkKCk7DQorCQlJ
UGFja2FnZUZyYWdtZW50Um9vdCByb290ID0gcHJvamVjdC5nZXRQYWNrYWdlRnJhZ21lbnRSb290
KGdldEZpbGUoIi9QL2xpYjMzNDc4M18zLmphciIpKTsNCisJCUlUeXBlIHR5cGUgPSByb290Lmdl
dFBhY2thZ2VGcmFnbWVudCgicCIpLmdldENsYXNzRmlsZSgiWC5jbGFzcyIpLmdldFR5cGUoKTsN
CisJCVN0cmluZyBhbm5vdGF0aW9uU3RyaW5nMSA9ICJAcC5EZWZhdWx0IFtpbiBhcmcxIFtpbiBY
KGludCwgamF2YS5sYW5nLlN0cmluZywgaW50KSBbaW4gWCBbaW4gWC5jbGFzcyBbaW4gcCBbaW4g
bGliMzM0NzgzXzMuamFyIFtpbiBQXV1dXV1dXSI7DQorCQlTdHJpbmcgYW5ub3RhdGlvblN0cmlu
ZzIgPSAiQHAuTWFya2VyIFtpbiBhcmcxIFtpbiBYKGludCwgamF2YS5sYW5nLlN0cmluZywgaW50
KSBbaW4gWCBbaW4gWC5jbGFzcyBbaW4gcCBbaW4gbGliMzM0NzgzXzMuamFyIFtpbiBQXV1dXV1d
XSI7DQorCQlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kcygpWzBdOw0KKwkJSUFubm90
YXRpb25bXSBhbm5vdGF0aW9ucyA9IG1ldGhvZC5nZXRBbm5vdGF0aW9ucygpOw0KKwkJYXNzZXJ0
RXF1YWxzKCJXcm9uZyBsZW5ndGgiLCAyLCBhbm5vdGF0aW9ucy5sZW5ndGgpOw0KKwkJYXNzZXJ0
RXF1YWxzKCJAcC5JbmplY3QgW2luIFgoaW50LCBqYXZhLmxhbmcuU3RyaW5nLCBpbnQpIFtpbiBY
IFtpbiBYLmNsYXNzIFtpbiBwIFtpbiBsaWIzMzQ3ODNfMy5qYXIgW2luIFBdXV1dXV0iLCBhbm5v
dGF0aW9uc1swXS50b1N0cmluZygpKTsNCisJCUlBbm5vdGF0aW9uIGFubm90YXRpb24gPSBhbm5v
dGF0aW9uc1sxXTsNCisJCWFzc2VydEVxdWFscygiQHAuTWFya2VyIFtpbiBYKGludCwgamF2YS5s
YW5nLlN0cmluZywgaW50KSBbaW4gWCBbaW4gWC5jbGFzcyBbaW4gcCBbaW4gbGliMzM0NzgzXzMu
amFyIFtpbiBQXV1dXV1dIiwgYW5ub3RhdGlvbi50b1N0cmluZygpKTsNCisJCUlNZW1iZXJWYWx1
ZVBhaXJbXSBtZW1iZXJWYWx1ZVBhaXJzID0gYW5ub3RhdGlvbi5nZXRNZW1iZXJWYWx1ZVBhaXJz
KCk7DQorCQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBwYWlycyIsIDEsIG1lbWJlclZh
bHVlUGFpcnMubGVuZ3RoKTsNCisJCVN0cmluZ0J1ZmZlciBvdXRwdXQgPSBuZXcgU3RyaW5nQnVm
ZmVyKCk7DQorCQlvdXRwdXQuYXBwZW5kKG1lbWJlclZhbHVlUGFpcnNbMF0uZ2V0TWVtYmVyTmFt
ZSgpKTsNCisJCW91dHB1dC5hcHBlbmQoJyAnKTsNCisJCW91dHB1dC5hcHBlbmQobWVtYmVyVmFs
dWVQYWlyc1swXS5nZXRWYWx1ZSgpKTsNCisJCWFzc2VydEVxdWFscygiV3JvbmcgdmFsdWUiLCAi
aWQgMyIsIFN0cmluZy52YWx1ZU9mKG91dHB1dCkpOw0KKwkJSUFubm90YXRpb25bXSBwYXJhbWV0
ZXJBbm5vdGF0aW9ucyA9IG1ldGhvZC5nZXRQYXJhbWV0ZXJzKClbMV0uZ2V0QW5ub3RhdGlvbnMo
KTsNCisJCWFzc2VydEVxdWFscygiV3JvbmcgbGVuZ3RoIiwgMiwgcGFyYW1ldGVyQW5ub3RhdGlv
bnMubGVuZ3RoKTsNCisJCWFzc2VydEVxdWFscyhhbm5vdGF0aW9uU3RyaW5nMSwgcGFyYW1ldGVy
QW5ub3RhdGlvbnNbMF0udG9TdHJpbmcoKSk7DQorCQlhbm5vdGF0aW9uID0gcGFyYW1ldGVyQW5u
b3RhdGlvbnNbMV07DQorCQlhc3NlcnRFcXVhbHMoYW5ub3RhdGlvblN0cmluZzIsIGFubm90YXRp
b24udG9TdHJpbmcoKSk7DQorCQltZW1iZXJWYWx1ZVBhaXJzID0gYW5ub3RhdGlvbi5nZXRNZW1i
ZXJWYWx1ZVBhaXJzKCk7DQorCQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBwYWlycyIs
IDEsIG1lbWJlclZhbHVlUGFpcnMubGVuZ3RoKTsNCisJCW91dHB1dCA9IG5ldyBTdHJpbmdCdWZm
ZXIoKTsNCisJCW91dHB1dC5hcHBlbmQobWVtYmVyVmFsdWVQYWlyc1swXS5nZXRNZW1iZXJOYW1l
KCkpOw0KKwkJb3V0cHV0LmFwcGVuZCgnICcpOw0KKwkJb3V0cHV0LmFwcGVuZChtZW1iZXJWYWx1
ZVBhaXJzWzBdLmdldFZhbHVlKCkpOw0KKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB2YWx1ZSIsICJp
ZCAxIiwgU3RyaW5nLnZhbHVlT2Yob3V0cHV0KSk7DQorCQlhc3NlcnRFcXVhbHMoIldyb25nIGxl
bmd0aCIsIDAsIG1ldGhvZC5nZXRQYXJhbWV0ZXJzKClbMF0uZ2V0QW5ub3RhdGlvbnMoKS5sZW5n
dGgpOw0KKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBsZW5ndGgiLCAwLCBtZXRob2QuZ2V0UGFyYW1l
dGVycygpWzJdLmdldEFubm90YXRpb25zKCkubGVuZ3RoKTsNCisJfSBmaW5hbGx5IHsNCisJCWRl
bGV0ZVByb2plY3QoIlAiKTsNCisJfQ0KK30NCiB9DQo=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>189390</attachid>
            <date>2011-02-20 19:55:00 -0500</date>
            <delta_ts>2011-02-20 19:55:01 -0500</delta_ts>
            <desc>Proposed fix + regression tests</desc>
            <filename>patch_334783_3.txt</filename>
            <type>text/plain</type>
            <size>66475</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvY29yZS9JTWV0aG9kLmphdmENCj09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVs
L29yZy9lY2xpcHNlL2pkdC9jb3JlL0lNZXRob2QuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9u
IDEuMzMNCmRpZmYgLXUgLXIxLjMzIElNZXRob2QuamF2YQ0KLS0tIG1vZGVsL29yZy9lY2xpcHNl
L2pkdC9jb3JlL0lNZXRob2QuamF2YQkyMyBBcHIgMjAxMCAxMzoxMTowNSAtMDAwMAkxLjMzDQor
KysgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2NvcmUvSU1ldGhvZC5qYXZhCTIwIEZlYiAyMDExIDIy
OjI2OjQxIC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0K
LSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4N
CisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMu
DQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55
aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2Yg
dGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRo
aXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtMTAwLDYgKzEwMCwyMSBA
QA0KICAqIEByZXR1cm4gdGhlIG51bWJlciBvZiBwYXJhbWV0ZXJzIG9mIHRoaXMgbWV0aG9kDQog
ICovDQogaW50IGdldE51bWJlck9mUGFyYW1ldGVycygpOw0KKw0KKy8qKg0KKyAqIFJldHVybnMg
dGhlIHBhcmFtZXRlcnMgb2YgdGhpcyBtZXRob2QuDQorICogPHA+QW4gZW1wdHkgYXJyYXkgaXMg
cmV0dXJuZWQsIGlmIHRoZSBtZXRob2QgaGFzIG5vIHBhcmFtZXRlcnMuPC9wPg0KKyAqIDxwPkZv
ciBiaW5hcnkgdHlwZXMsIGFzc29jaWF0ZWQgc291cmNlIGlzIHVzZWQgdG8gcmV0cmlldmUgdGhl
IHtAbGluayBJTG9jYWxWYXJpYWJsZSNnZXROYW1lUmFuZ2UoKSBuYW1lIHJhbmdlfSwNCisgKiB7
QGxpbmsgSUxvY2FsVmFyaWFibGUjZ2V0U291cmNlUmFuZ2UoKSBzb3VyY2UgcmFuZ2V9IGFuZCB0
aGUge0BsaW5rIElMb2NhbFZhcmlhYmxlI2dldEZsYWdzKCkgZmxhZ3N9LjwvcD4NCisgKiA8cD5U
aGVzZSBsb2NhbCB2YXJpYWJsZXMgY2FuIGJlIHVzZWQgdG8gcmV0cmlldmUgdGhlIHtAbGluayBJ
TG9jYWxWYXJpYWJsZSNnZXRBbm5vdGF0aW9ucygpIHBhcmFtZXRlciBhbm5vdGF0aW9uc30uPC9w
Pg0KKyAqIA0KKyAqIEByZXR1cm4gdGhlIHBhcmFtZXRlcnMgb2YgdGhpcyBtZXRob2QNCisgKiBA
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiBpZiB0aGlzIGVsZW1lbnQgZG9lcyBub3QgZXhpc3Qg
b3IgaWYgYW4NCisgKiAgICAgIGV4Y2VwdGlvbiBvY2N1cnMgd2hpbGUgYWNjZXNzaW5nIGl0cyBj
b3JyZXNwb25kaW5nIHJlc291cmNlLg0KKyAqIEBzaW5jZSAzLjcNCisgKi8NCitJTG9jYWxWYXJp
YWJsZVtdIGdldFBhcmFtZXRlcnMoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uOw0KKw0KIC8q
Kg0KICAqIFJldHVybnMgdGhlIGJpbmRpbmcga2V5IGZvciB0aGlzIG1ldGhvZCBvbmx5IGlmIHRo
ZSBnaXZlbiBtZXRob2QgaXMge0BsaW5rICNpc1Jlc29sdmVkKCkgcmVzb2x2ZWR9Lg0KICAqIEEg
YmluZGluZyBrZXkgaXMgYSBrZXkgdGhhdCB1bmlxdWVseSBpZGVudGlmaWVzIHRoaXMgbWV0aG9k
LiBJdCBhbGxvd3MgYWNjZXNzDQpJbmRleDogbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL0lTb3VyY2VFbGVtZW50UmVxdWVzdG9yLmphdmENCj09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBm
aWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9JU291cmNlRWxlbWVudFJlcXVlc3Rvci5qYXZhLHYN
CnJldHJpZXZpbmcgcmV2aXNpb24gMS4yNg0KZGlmZiAtdSAtcjEuMjYgSVNvdXJjZUVsZW1lbnRS
ZXF1ZXN0b3IuamF2YQ0KLS0tIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9JU291cmNlRWxlbWVudFJlcXVlc3Rvci5qYXZhCTI4IEp1bCAyMDEwIDE2OjE3OjAzIC0wMDAw
CTEuMjYNCisrKyBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvSVNvdXJj
ZUVsZW1lbnRSZXF1ZXN0b3IuamF2YQkyMCBGZWIgMjAxMSAyMjoyNjo0MSAtMDAwMA0KQEAgLTEs
NSArMSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIw
MDAsIDIwMTAgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAy
MDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVz
ZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBh
cmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBM
aWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5k
IGlzIGF2YWlsYWJsZSBhdA0KQEAgLTkyLDggKzkyLDE3IEBADQogCQlwdWJsaWMgaW50IGRlY2xh
cmluZ1R5cGVNb2RpZmllcnM7DQogCQlwdWJsaWMgaW50IGV4dHJhRmxhZ3M7DQogCQlwdWJsaWMg
QWJzdHJhY3RNZXRob2REZWNsYXJhdGlvbiBub2RlOw0KKwkJcHVibGljIFBhcmFtZXRlckluZm9b
XSBwYXJhbWV0ZXJJbmZvczsNCiAJfQ0KIA0KKwlwdWJsaWMgc3RhdGljIGNsYXNzIFBhcmFtZXRl
ckluZm8gew0KKwkJcHVibGljIGludCBtb2RpZmllcnM7DQorCQlwdWJsaWMgaW50IGRlY2xhcmF0
aW9uU3RhcnQ7DQorCQlwdWJsaWMgaW50IGRlY2xhcmF0aW9uRW5kOw0KKwkJcHVibGljIGludCBu
YW1lU291cmNlU3RhcnQ7DQorCQlwdWJsaWMgaW50IG5hbWVTb3VyY2VFbmQ7DQorCQlwdWJsaWMg
Y2hhcltdIG5hbWU7DQorCX0NCiAJcHVibGljIHN0YXRpYyBjbGFzcyBGaWVsZEluZm8gew0KIAkJ
cHVibGljIGludCBkZWNsYXJhdGlvblN0YXJ0Ow0KIAkJcHVibGljIGludCBtb2RpZmllcnM7DQpJ
bmRleDogbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL1NvdXJjZUVsZW1l
bnROb3RpZmllci5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvU291cmNlRWxlbWVudE5vdGlmaWVyLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjcN
CmRpZmYgLXUgLXIxLjcgU291cmNlRWxlbWVudE5vdGlmaWVyLmphdmENCi0tLSBtb2RlbC9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvU291cmNlRWxlbWVudE5vdGlmaWVyLmphdmEJ
MjggSnVsIDIwMTAgMTY6MTc6MDMgLTAwMDAJMS43DQorKysgbW9kZWwvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL1NvdXJjZUVsZW1lbnROb3RpZmllci5qYXZhCTIwIEZlYiAyMDEx
IDIyOjI2OjQxIC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
Kg0KLSAqIENvcHlyaWdodCAoYykgMjAwOCwgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVy
cy4NCisgKiBDb3B5cmlnaHQgKGMpIDIwMDgsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhl
cnMuDQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21w
YW55aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMg
b2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVz
IHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtMTQsNiArMTQsNyBA
QA0KIGltcG9ydCBqYXZhLnV0aWwuTWFwOw0KIA0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29y
ZS5jb21waWxlci5DaGFyT3BlcmF0aW9uOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIuSVNvdXJjZUVsZW1lbnRSZXF1ZXN0b3IuUGFyYW1ldGVySW5mbzsNCiBpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLklTb3VyY2VFbGVtZW50UmVxdWVz
dG9yLlR5cGVQYXJhbWV0ZXJJbmZvOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuYXN0LkFTVE5vZGU7DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5hc3QuQWJzdHJhY3RNZXRob2REZWNsYXJhdGlvbjsNCkBAIC0xMDMsMTYgKzEwNCwy
NyBAQA0KIAl0aGlzLnN1cGVyVHlwZU5hbWVzID0gbmV3IGNoYXJbNF1bXTsNCiAJdGhpcy5uZXN0
ZWRUeXBlSW5kZXggPSAwOw0KIH0NCi1wcm90ZWN0ZWQgY2hhcltdW11bXSBnZXRBcmd1bWVudHMo
QXJndW1lbnRbXSBhcmd1bWVudHMpIHsNCitwcm90ZWN0ZWQgT2JqZWN0W11bXSBnZXRBcmd1bWVu
dEluZm9zKEFyZ3VtZW50W10gYXJndW1lbnRzKSB7DQogCWludCBhcmd1bWVudExlbmd0aCA9IGFy
Z3VtZW50cy5sZW5ndGg7DQogCWNoYXJbXVtdIGFyZ3VtZW50VHlwZXMgPSBuZXcgY2hhclthcmd1
bWVudExlbmd0aF1bXTsNCiAJY2hhcltdW10gYXJndW1lbnROYW1lcyA9IG5ldyBjaGFyW2FyZ3Vt
ZW50TGVuZ3RoXVtdOw0KKwlQYXJhbWV0ZXJJbmZvW10gcGFyYW1ldGVySW5mb3MgPSBuZXcgUGFy
YW1ldGVySW5mb1thcmd1bWVudExlbmd0aF07DQogCWZvciAoaW50IGkgPSAwOyBpIDwgYXJndW1l
bnRMZW5ndGg7IGkrKykgew0KLQkJYXJndW1lbnRUeXBlc1tpXSA9IENoYXJPcGVyYXRpb24uY29u
Y2F0V2l0aChhcmd1bWVudHNbaV0udHlwZS5nZXRQYXJhbWV0ZXJpemVkVHlwZU5hbWUoKSwgJy4n
KTsNCi0JCWFyZ3VtZW50TmFtZXNbaV0gPSBhcmd1bWVudHNbaV0ubmFtZTsNCisJCUFyZ3VtZW50
IGFyZ3VtZW50ID0gYXJndW1lbnRzW2ldOw0KKwkJYXJndW1lbnRUeXBlc1tpXSA9IENoYXJPcGVy
YXRpb24uY29uY2F0V2l0aChhcmd1bWVudC50eXBlLmdldFBhcmFtZXRlcml6ZWRUeXBlTmFtZSgp
LCAnLicpOw0KKwkJY2hhcltdIG5hbWUgPSBhcmd1bWVudC5uYW1lOw0KKwkJYXJndW1lbnROYW1l
c1tpXSA9IG5hbWU7DQorCQlQYXJhbWV0ZXJJbmZvIHBhcmFtZXRlckluZm8gPSBuZXcgUGFyYW1l
dGVySW5mbygpOw0KKwkJcGFyYW1ldGVySW5mby5kZWNsYXJhdGlvblN0YXJ0ID0gYXJndW1lbnQu
ZGVjbGFyYXRpb25Tb3VyY2VTdGFydDsNCisJCXBhcmFtZXRlckluZm8uZGVjbGFyYXRpb25FbmQg
PSBhcmd1bWVudC5kZWNsYXJhdGlvblNvdXJjZUVuZDsNCisJCXBhcmFtZXRlckluZm8ubmFtZVNv
dXJjZVN0YXJ0ID0gYXJndW1lbnQuc291cmNlU3RhcnQ7DQorCQlwYXJhbWV0ZXJJbmZvLm5hbWVT
b3VyY2VFbmQgPSBhcmd1bWVudC5zb3VyY2VFbmQ7DQorCQlwYXJhbWV0ZXJJbmZvLm1vZGlmaWVy
cyA9IGFyZ3VtZW50Lm1vZGlmaWVyczsNCisJCXBhcmFtZXRlckluZm8ubmFtZSA9IG5hbWU7DQor
CQlwYXJhbWV0ZXJJbmZvc1tpXSA9IHBhcmFtZXRlckluZm87DQogCX0NCiANCi0JcmV0dXJuIG5l
dyBjaGFyW11bXVtdIHthcmd1bWVudFR5cGVzLCBhcmd1bWVudE5hbWVzfTsNCisJcmV0dXJuIG5l
dyBPYmplY3RbXVtdIHsgcGFyYW1ldGVySW5mb3MsIG5ldyBjaGFyW11bXVtdIHsgYXJndW1lbnRU
eXBlcywgYXJndW1lbnROYW1lcyB9IH07DQogfQ0KIHByb3RlY3RlZCBjaGFyW11bXSBnZXRJbnRl
cmZhY2VOYW1lcyhUeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uKSB7DQogCWNoYXJbXVtd
IGludGVyZmFjZU5hbWVzID0gbnVsbDsNCkBAIC0yNTYsMTAgKzI2OCwxMiBAQA0KIAljaGFyW11b
XSBhcmd1bWVudE5hbWVzID0gbnVsbDsNCiAJYm9vbGVhbiBpc1ZhckFyZ3MgPSBmYWxzZTsNCiAJ
QXJndW1lbnRbXSBhcmd1bWVudHMgPSBtZXRob2REZWNsYXJhdGlvbi5hcmd1bWVudHM7DQorCVBh
cmFtZXRlckluZm9bXSBwYXJhbWV0ZXJJbmZvcyA9IG51bGw7IA0KIAlpZiAoYXJndW1lbnRzICE9
IG51bGwpIHsNCi0JCWNoYXJbXVtdW10gYXJndW1lbnRUeXBlc0FuZE5hbWVzID0gZ2V0QXJndW1l
bnRzKGFyZ3VtZW50cyk7DQotCQlhcmd1bWVudFR5cGVzID0gYXJndW1lbnRUeXBlc0FuZE5hbWVz
WzBdOw0KLQkJYXJndW1lbnROYW1lcyA9IGFyZ3VtZW50VHlwZXNBbmROYW1lc1sxXTsNCisJCU9i
amVjdFtdW10gYXJndW1lbnRJbmZvcyA9IGdldEFyZ3VtZW50SW5mb3MoYXJndW1lbnRzKTsNCisJ
CXBhcmFtZXRlckluZm9zID0gKFBhcmFtZXRlckluZm9bXSkgYXJndW1lbnRJbmZvc1swXTsNCisJ
CWFyZ3VtZW50VHlwZXMgPSAoY2hhcltdW10pIGFyZ3VtZW50SW5mb3NbMV1bMF07DQorCQlhcmd1
bWVudE5hbWVzID0gKGNoYXJbXVtdKSBhcmd1bWVudEluZm9zWzFdWzFdOw0KIA0KIAkJaXNWYXJB
cmdzID0gYXJndW1lbnRzW2FyZ3VtZW50cy5sZW5ndGgtMV0uaXNWYXJBcmdzKCk7DQogCX0NCkBA
IC0yODcsNiArMzAxLDcgQEANCiAJCQltZXRob2RJbmZvLnBhcmFtZXRlck5hbWVzID0gYXJndW1l
bnROYW1lczsNCiAJCQltZXRob2RJbmZvLmV4Y2VwdGlvblR5cGVzID0gdGhyb3duRXhjZXB0aW9u
VHlwZXM7DQogCQkJbWV0aG9kSW5mby50eXBlUGFyYW1ldGVycyA9IGdldFR5cGVQYXJhbWV0ZXJJ
bmZvcyhtZXRob2REZWNsYXJhdGlvbi50eXBlUGFyYW1ldGVycygpKTsNCisJCQltZXRob2RJbmZv
LnBhcmFtZXRlckluZm9zID0gcGFyYW1ldGVySW5mb3M7DQogCQkJbWV0aG9kSW5mby5jYXRlZ29y
aWVzID0gKGNoYXJbXVtdKSB0aGlzLm5vZGVzVG9DYXRlZ29yaWVzLmdldChtZXRob2REZWNsYXJh
dGlvbik7DQogCQkJbWV0aG9kSW5mby5hbm5vdGF0aW9ucyA9IG1ldGhvZERlY2xhcmF0aW9uLmFu
bm90YXRpb25zOw0KIAkJCW1ldGhvZEluZm8uZGVjbGFyaW5nUGFja2FnZU5hbWUgPSBjdXJyZW50
UGFja2FnZSA9PSBudWxsID8gQ2hhck9wZXJhdGlvbi5OT19DSEFSIDogQ2hhck9wZXJhdGlvbi5j
b25jYXRXaXRoKGN1cnJlbnRQYWNrYWdlLnRva2VucywgJy4nKTsNCkBAIC0zNDYsNiArMzYxLDcg
QEANCiAJCW1ldGhvZEluZm8ucGFyYW1ldGVyTmFtZXMgPSBhcmd1bWVudE5hbWVzOw0KIAkJbWV0
aG9kSW5mby5leGNlcHRpb25UeXBlcyA9IHRocm93bkV4Y2VwdGlvblR5cGVzOw0KIAkJbWV0aG9k
SW5mby50eXBlUGFyYW1ldGVycyA9IGdldFR5cGVQYXJhbWV0ZXJJbmZvcyhtZXRob2REZWNsYXJh
dGlvbi50eXBlUGFyYW1ldGVycygpKTsNCisJCW1ldGhvZEluZm8ucGFyYW1ldGVySW5mb3MgPSBw
YXJhbWV0ZXJJbmZvczsNCiAJCW1ldGhvZEluZm8uY2F0ZWdvcmllcyA9IChjaGFyW11bXSkgdGhp
cy5ub2Rlc1RvQ2F0ZWdvcmllcy5nZXQobWV0aG9kRGVjbGFyYXRpb24pOw0KIAkJbWV0aG9kSW5m
by5hbm5vdGF0aW9ucyA9IG1ldGhvZERlY2xhcmF0aW9uLmFubm90YXRpb25zOw0KIAkJbWV0aG9k
SW5mby5ub2RlID0gbWV0aG9kRGVjbGFyYXRpb247DQpJbmRleDogbW9kZWwvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvcmUvQmluYXJ5TWVtYmVyLmphdmENCj09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxl
OiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL0JpbmFyeU1lbWJlci5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNp
b24gMS4zNg0KZGlmZiAtdSAtcjEuMzYgQmluYXJ5TWVtYmVyLmphdmENCi0tLSBtb2RlbC9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9CaW5hcnlNZW1iZXIuamF2YQkyOCBBcHIgMjAwOSAx
Njo1MzowMSAtMDAwMAkxLjM2DQorKysgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvQmluYXJ5TWVtYmVyLmphdmEJMjAgRmViIDIwMTEgMjI6MjY6NDEgLTAwMDANCkBAIC0xLDUg
KzEsNSBAQA0KIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDA5IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAw
MCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2Vy
dmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJl
IG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGlj
ZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBp
cyBhdmFpbGFibGUgYXQNCkBAIC00Nyw3ICs0NywxMSBAQA0KIAkJcmV0dXJuIHN0YW5kYXJkQW5u
b3RhdGlvbnM7DQogCWludCBsZW5ndGggPSBiaW5hcnlBbm5vdGF0aW9ucy5sZW5ndGg7DQogCWlu
dCBzdGFuZGFyZExlbmd0aCA9IHN0YW5kYXJkQW5ub3RhdGlvbnMubGVuZ3RoOw0KLQlJQW5ub3Rh
dGlvbltdIGFubm90YXRpb25zID0gbmV3IElBbm5vdGF0aW9uW2xlbmd0aCArIHN0YW5kYXJkTGVu
Z3RoXTsNCisJaW50IGZ1bGxMZW5ndGggPSBsZW5ndGggKyBzdGFuZGFyZExlbmd0aDsNCisJaWYg
KGZ1bGxMZW5ndGggPT0gMCkgew0KKwkJcmV0dXJuIEFubm90YXRpb24uTk9fQU5OT1RBVElPTlM7
DQorCX0NCisJSUFubm90YXRpb25bXSBhbm5vdGF0aW9ucyA9IG5ldyBJQW5ub3RhdGlvbltmdWxs
TGVuZ3RoXTsNCiAJZm9yIChpbnQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgew0KIAkJYW5ub3Rh
dGlvbnNbaV0gPSBVdGlsLmdldEFubm90YXRpb24odGhpcywgYmluYXJ5QW5ub3RhdGlvbnNbaV0s
IG51bGwpOw0KIAl9DQpAQCAtNTcsNyArNjEsNyBAQA0KIHByaXZhdGUgSUFubm90YXRpb24gZ2V0
QW5ub3RhdGlvbihjaGFyW11bXSBhbm5vdGF0aW9uTmFtZSkgew0KIAlyZXR1cm4gbmV3IEFubm90
YXRpb24odGhpcywgbmV3IFN0cmluZyhDaGFyT3BlcmF0aW9uLmNvbmNhdFdpdGgoYW5ub3RhdGlv
bk5hbWUsICcuJykpKTsNCiB9DQotcHJpdmF0ZSBJQW5ub3RhdGlvbltdIGdldFN0YW5kYXJkQW5u
b3RhdGlvbnMobG9uZyB0YWdCaXRzKSB7DQorcHJvdGVjdGVkIElBbm5vdGF0aW9uW10gZ2V0U3Rh
bmRhcmRBbm5vdGF0aW9ucyhsb25nIHRhZ0JpdHMpIHsNCiAJaWYgKCh0YWdCaXRzICYgVGFnQml0
cy5BbGxTdGFuZGFyZEFubm90YXRpb25zTWFzaykgPT0gMCkNCiAJCXJldHVybiBBbm5vdGF0aW9u
Lk5PX0FOTk9UQVRJT05TOw0KIAlBcnJheUxpc3QgYW5ub3RhdGlvbnMgPSBuZXcgQXJyYXlMaXN0
KCk7DQpJbmRleDogbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvQmluYXJ5TWV0
aG9kLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xp
cHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0JpbmFyeU1l
dGhvZC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4xMTENCmRpZmYgLXUgLXIxLjExMSBC
aW5hcnlNZXRob2QuamF2YQ0KLS0tIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3Jl
L0JpbmFyeU1ldGhvZC5qYXZhCTIwIEphbiAyMDExIDAyOjI4OjQzIC0wMDAwCTEuMTExDQorKysg
bW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvQmluYXJ5TWV0aG9kLmphdmEJMjAg
RmViIDIwMTEgMjI6MjY6NDEgLTAwMDANCkBAIC0xMSw3ICsxMSwxNiBAQA0KIHBhY2thZ2Ugb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvcmU7DQogDQogaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUu
cnVudGltZS5JUHJvZ3Jlc3NNb25pdG9yOw0KLWltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS4q
Ow0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5GbGFnczsNCitpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmNvcmUuSUFubm90YXRpb247DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklM
b2NhbFZhcmlhYmxlOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JTWVtYmVyVmFsdWVQ
YWlyOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JTWV0aG9kOw0KK2ltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuY29yZS5JVHlwZTsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSVR5
cGVQYXJhbWV0ZXI7DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLkphdmFDb3JlOw0KK2lt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5KYXZhTW9kZWxFeGNlcHRpb247DQoraW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5jb3JlLlNpZ25hdHVyZTsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNv
cmUuY29tcGlsZXIuQ2hhck9wZXJhdGlvbjsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmNsYXNzZm10LkNsYXNzRmlsZUNvbnN0YW50czsNCiBpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVudi5JQmluYXJ5QW5ub3RhdGlvbjsNCkBAIC02
MSw2ICs3MCw1MSBAQA0KIAlJQmluYXJ5QW5ub3RhdGlvbltdIGJpbmFyeUFubm90YXRpb25zID0g
aW5mby5nZXRBbm5vdGF0aW9ucygpOw0KIAlyZXR1cm4gZ2V0QW5ub3RhdGlvbnMoYmluYXJ5QW5u
b3RhdGlvbnMsIGluZm8uZ2V0VGFnQml0cygpKTsNCiB9DQorcHVibGljIElMb2NhbFZhcmlhYmxl
W10gZ2V0UGFyYW1ldGVycygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gew0KKwlJQmluYXJ5
TWV0aG9kIGluZm8gPSAoSUJpbmFyeU1ldGhvZCkgZ2V0RWxlbWVudEluZm8oKTsNCisJaW50IGxl
bmd0aCA9IHRoaXMucGFyYW1ldGVyVHlwZXMubGVuZ3RoOw0KKwlpZiAobGVuZ3RoID09IDApIHsN
CisJCXJldHVybiBMb2NhbFZhcmlhYmxlLk5PX0xPQ0FMX1ZBUklBQkxFUzsNCisJfQ0KKwlJTG9j
YWxWYXJpYWJsZVtdIGxvY2FsVmFyaWFibGVzID0gbmV3IElMb2NhbFZhcmlhYmxlW2xlbmd0aF07
DQorCWNoYXJbXVtdIGFyZ3VtZW50TmFtZXMgPSBpbmZvLmdldEFyZ3VtZW50TmFtZXMoKTsNCisJ
aWYgKGFyZ3VtZW50TmFtZXMgPT0gbnVsbCB8fCBhcmd1bWVudE5hbWVzLmxlbmd0aCA8IGxlbmd0
aCkgew0KKwkJYXJndW1lbnROYW1lcyA9IG5ldyBjaGFyW2xlbmd0aF1bXTsNCisJCWZvciAoaW50
IGogPSAwOyBqIDwgbGVuZ3RoOyBqKyspIHsNCisJCQlhcmd1bWVudE5hbWVzW2pdID0gKCJhcmci
ICsgaikudG9DaGFyQXJyYXkoKTsgLy8kTk9OLU5MUy0xJA0KKwkJfQ0KKwl9DQorCWZvciAoaW50
IGk9IDA7IGkgPCBsZW5ndGg7IGkrKykgew0KKwkJTG9jYWxWYXJpYWJsZSBsb2NhbFZhcmlhYmxl
ID0gbmV3IExvY2FsVmFyaWFibGUoDQorCQkJCXRoaXMsDQorCQkJCW5ldyBTdHJpbmcoYXJndW1l
bnROYW1lc1tpXSksDQorCQkJCTAsDQorCQkJCS0xLA0KKwkJCQkwLA0KKwkJCQktMSwNCisJCQkJ
dGhpcy5wYXJhbWV0ZXJUeXBlc1tpXSwNCisJCQkJbnVsbCwNCisJCQkJLTEsDQorCQkJCXRydWUp
Ow0KKwkJbG9jYWxWYXJpYWJsZXNbaV0gPSBsb2NhbFZhcmlhYmxlOw0KKwkJSUFubm90YXRpb25b
XSBhbm5vdGF0aW9ucyA9IGdldEFubm90YXRpb25zKGxvY2FsVmFyaWFibGUsIGluZm8uZ2V0UGFy
YW1ldGVyQW5ub3RhdGlvbnMoaSksIGluZm8uZ2V0VGFnQml0cygpKTsNCisJCWxvY2FsVmFyaWFi
bGUuYW5ub3RhdGlvbnMgPSBhbm5vdGF0aW9uczsNCisJfQ0KKwlyZXR1cm4gbG9jYWxWYXJpYWJs
ZXM7DQorfQ0KK3ByaXZhdGUgSUFubm90YXRpb25bXSBnZXRBbm5vdGF0aW9ucyhKYXZhRWxlbWVu
dCBhbm5vdGF0aW9uUGFyZW50LCBJQmluYXJ5QW5ub3RhdGlvbltdIGJpbmFyeUFubm90YXRpb25z
LCBsb25nIHRhZ0JpdHMpIHsNCisJSUFubm90YXRpb25bXSBzdGFuZGFyZEFubm90YXRpb25zID0g
Z2V0U3RhbmRhcmRBbm5vdGF0aW9ucyh0YWdCaXRzKTsNCisJaWYgKGJpbmFyeUFubm90YXRpb25z
ID09IG51bGwpDQorCQlyZXR1cm4gc3RhbmRhcmRBbm5vdGF0aW9uczsNCisJaW50IGxlbmd0aCA9
IGJpbmFyeUFubm90YXRpb25zLmxlbmd0aDsNCisJaW50IHN0YW5kYXJkTGVuZ3RoID0gc3RhbmRh
cmRBbm5vdGF0aW9ucy5sZW5ndGg7DQorCUlBbm5vdGF0aW9uW10gYW5ub3RhdGlvbnMgPSBuZXcg
SUFubm90YXRpb25bbGVuZ3RoICsgc3RhbmRhcmRMZW5ndGhdOw0KKwlmb3IgKGludCBpID0gMDsg
aSA8IGxlbmd0aDsgaSsrKSB7DQorCQlhbm5vdGF0aW9uc1tpXSA9IFV0aWwuZ2V0QW5ub3RhdGlv
bihhbm5vdGF0aW9uUGFyZW50LCBiaW5hcnlBbm5vdGF0aW9uc1tpXSwgbnVsbCk7DQorCX0NCisJ
U3lzdGVtLmFycmF5Y29weShzdGFuZGFyZEFubm90YXRpb25zLCAwLCBhbm5vdGF0aW9ucywgbGVu
Z3RoLCBzdGFuZGFyZExlbmd0aCk7DQorCXJldHVybiBhbm5vdGF0aW9uczsNCit9DQogcHVibGlj
IElNZW1iZXJWYWx1ZVBhaXIgZ2V0RGVmYXVsdFZhbHVlKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2Vw
dGlvbiB7DQogCUlCaW5hcnlNZXRob2QgaW5mbyA9IChJQmluYXJ5TWV0aG9kKSBnZXRFbGVtZW50
SW5mbygpOw0KIAlPYmplY3QgZGVmYXVsdFZhbHVlID0gaW5mby5nZXREZWZhdWx0VmFsdWUoKTsN
CkluZGV4OiBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9DbGFzc0ZpbGVJbmZv
LmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNl
LmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0NsYXNzRmlsZUlu
Zm8uamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNDkNCmRpZmYgLXUgLXIxLjQ5IENsYXNz
RmlsZUluZm8uamF2YQ0KLS0tIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0Ns
YXNzRmlsZUluZm8uamF2YQkzIFNlcCAyMDEwIDE1OjIwOjAzIC0wMDAwCTEuNDkNCisrKyBtb2Rl
bC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9DbGFzc0ZpbGVJbmZvLmphdmEJMjAgRmVi
IDIwMTEgMjI6MjY6NDEgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEwIElCTSBDb3Jwb3JhdGlvbiBhbmQg
b3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBh
Y2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0
ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21w
YW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC00MSwyMyAr
NDEsMjYgQEANCiAJICovDQogCXByb3RlY3RlZCBJVHlwZVBhcmFtZXRlcltdIHR5cGVQYXJhbWV0
ZXJzOw0KIA0KK3ByaXZhdGUgdm9pZCBnZW5lcmF0ZUFubm90YXRpb25zSW5mb3MoSmF2YUVsZW1l
bnQgbWVtYmVyLCBJQmluYXJ5QW5ub3RhdGlvbltdIGJpbmFyeUFubm90YXRpb25zLCBsb25nIHRh
Z0JpdHMsIEhhc2hNYXAgbmV3RWxlbWVudHMpIHsNCisJZ2VuZXJhdGVBbm5vdGF0aW9uc0luZm9z
KG1lbWJlciwgbnVsbCwgYmluYXJ5QW5ub3RhdGlvbnMsIHRhZ0JpdHMsIG5ld0VsZW1lbnRzKTsN
Cit9DQogLyoqDQogICogQ3JlYXRlcyB0aGUgaGFuZGxlcyBhbmQgaW5mb3MgZm9yIHRoZSBhbm5v
dGF0aW9ucyBvZiB0aGUgZ2l2ZW4gYmluYXJ5IG1lbWJlci4NCiAgKiBBZGRzIG5ldyBoYW5kbGVz
IHRvIHRoZSBnaXZlbiB2ZWN0b3IuDQogICovDQotcHJpdmF0ZSB2b2lkIGdlbmVyYXRlQW5ub3Rh
dGlvbnNJbmZvcyhCaW5hcnlNZW1iZXIgbWVtYmVyLCBJQmluYXJ5QW5ub3RhdGlvbltdIGJpbmFy
eUFubm90YXRpb25zLCBsb25nIHRhZ0JpdHMsIEhhc2hNYXAgbmV3RWxlbWVudHMpIHsNCitwcml2
YXRlIHZvaWQgZ2VuZXJhdGVBbm5vdGF0aW9uc0luZm9zKEphdmFFbGVtZW50IG1lbWJlciwgY2hh
cltdIHBhcmFtZXRlck5hbWUsIElCaW5hcnlBbm5vdGF0aW9uW10gYmluYXJ5QW5ub3RhdGlvbnMs
IGxvbmcgdGFnQml0cywgSGFzaE1hcCBuZXdFbGVtZW50cykgew0KIAlpZiAoYmluYXJ5QW5ub3Rh
dGlvbnMgIT0gbnVsbCkgew0KIAkJZm9yIChpbnQgaSA9IDAsIGxlbmd0aCA9IGJpbmFyeUFubm90
YXRpb25zLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7DQogCQkJSUJpbmFyeUFubm90YXRpb24g
YW5ub3RhdGlvbkluZm8gPSBiaW5hcnlBbm5vdGF0aW9uc1tpXTsNCi0JCQlnZW5lcmF0ZUFubm90
YXRpb25JbmZvKG1lbWJlciwgbmV3RWxlbWVudHMsIGFubm90YXRpb25JbmZvKTsNCisJCQlnZW5l
cmF0ZUFubm90YXRpb25JbmZvKG1lbWJlciwgcGFyYW1ldGVyTmFtZSwgbmV3RWxlbWVudHMsIGFu
bm90YXRpb25JbmZvLCBudWxsKTsNCiAJCX0NCiAJfQ0KLQlnZW5lcmF0ZVN0YW5kYXJkQW5ub3Rh
dGlvbnNJbmZvcyhtZW1iZXIsIHRhZ0JpdHMsIG5ld0VsZW1lbnRzKTsNCi19DQotcHJpdmF0ZSB2
b2lkIGdlbmVyYXRlQW5ub3RhdGlvbkluZm8oSmF2YUVsZW1lbnQgcGFyZW50LCBIYXNoTWFwIG5l
d0VsZW1lbnRzLCBJQmluYXJ5QW5ub3RhdGlvbiBhbm5vdGF0aW9uSW5mbykgew0KLQlnZW5lcmF0
ZUFubm90YXRpb25JbmZvKHBhcmVudCwgbmV3RWxlbWVudHMsIGFubm90YXRpb25JbmZvLCBudWxs
KTsNCisJZ2VuZXJhdGVTdGFuZGFyZEFubm90YXRpb25zSW5mb3MobWVtYmVyLCBwYXJhbWV0ZXJO
YW1lLCB0YWdCaXRzLCBuZXdFbGVtZW50cyk7DQogfQ0KIHByaXZhdGUgdm9pZCBnZW5lcmF0ZUFu
bm90YXRpb25JbmZvKEphdmFFbGVtZW50IHBhcmVudCwgSGFzaE1hcCBuZXdFbGVtZW50cywgSUJp
bmFyeUFubm90YXRpb24gYW5ub3RhdGlvbkluZm8sIFN0cmluZyBtZW1iZXJWYWx1ZVBhaXJOYW1l
KSB7DQorCWdlbmVyYXRlQW5ub3RhdGlvbkluZm8ocGFyZW50LCBudWxsLCBuZXdFbGVtZW50cywg
YW5ub3RhdGlvbkluZm8sIG1lbWJlclZhbHVlUGFpck5hbWUpOw0KK30NCitwcml2YXRlIHZvaWQg
Z2VuZXJhdGVBbm5vdGF0aW9uSW5mbyhKYXZhRWxlbWVudCBwYXJlbnQsIGNoYXJbXSBwYXJhbWV0
ZXJOYW1lLCBIYXNoTWFwIG5ld0VsZW1lbnRzLCBJQmluYXJ5QW5ub3RhdGlvbiBhbm5vdGF0aW9u
SW5mbywgU3RyaW5nIG1lbWJlclZhbHVlUGFpck5hbWUpIHsNCiAJY2hhcltdIHR5cGVOYW1lID0g
b3JnLmVjbGlwc2UuamR0LmNvcmUuU2lnbmF0dXJlLnRvQ2hhckFycmF5KENoYXJPcGVyYXRpb24u
cmVwbGFjZU9uQ29weShhbm5vdGF0aW9uSW5mby5nZXRUeXBlTmFtZSgpLCAnLycsICcuJykpOw0K
IAlBbm5vdGF0aW9uIGFubm90YXRpb24gPSBuZXcgQW5ub3RhdGlvbihwYXJlbnQsIG5ldyBTdHJp
bmcodHlwZU5hbWUpLCBtZW1iZXJWYWx1ZVBhaXJOYW1lKTsNCiAJd2hpbGUgKG5ld0VsZW1lbnRz
LmNvbnRhaW5zS2V5KGFubm90YXRpb24pKSB7DQpAQCAtODEsMjkgKzg0LDI5IEBADQogCQl9DQog
CX0NCiB9DQotcHJpdmF0ZSB2b2lkIGdlbmVyYXRlU3RhbmRhcmRBbm5vdGF0aW9uc0luZm9zKEJp
bmFyeU1lbWJlciBtZW1iZXIsIGxvbmcgdGFnQml0cywgSGFzaE1hcCBuZXdFbGVtZW50cykgew0K
K3ByaXZhdGUgdm9pZCBnZW5lcmF0ZVN0YW5kYXJkQW5ub3RhdGlvbnNJbmZvcyhKYXZhRWxlbWVu
dCBqYXZhRWxlbWVudCwgY2hhcltdIHBhcmFtZXRlck5hbWUsIGxvbmcgdGFnQml0cywgSGFzaE1h
cCBuZXdFbGVtZW50cykgew0KIAlpZiAoKHRhZ0JpdHMgJiBUYWdCaXRzLkFsbFN0YW5kYXJkQW5u
b3RhdGlvbnNNYXNrKSA9PSAwKQ0KIAkJcmV0dXJuOw0KIAlpZiAoKHRhZ0JpdHMgJiBUYWdCaXRz
LkFubm90YXRpb25UYXJnZXRNQVNLKSAhPSAwKSB7DQotCQlnZW5lcmF0ZVN0YW5kYXJkQW5ub3Rh
dGlvbihtZW1iZXIsIFR5cGVDb25zdGFudHMuSkFWQV9MQU5HX0FOTk9UQVRJT05fVEFSR0VULCBn
ZXRUYXJnZXRFbGVtZW50VHlwZXModGFnQml0cyksIG5ld0VsZW1lbnRzKTsNCisJCWdlbmVyYXRl
U3RhbmRhcmRBbm5vdGF0aW9uKGphdmFFbGVtZW50LCBUeXBlQ29uc3RhbnRzLkpBVkFfTEFOR19B
Tk5PVEFUSU9OX1RBUkdFVCwgZ2V0VGFyZ2V0RWxlbWVudFR5cGVzKHRhZ0JpdHMpLCBuZXdFbGVt
ZW50cyk7DQogCX0NCiAJaWYgKCh0YWdCaXRzICYgVGFnQml0cy5Bbm5vdGF0aW9uUmV0ZW50aW9u
TUFTSykgIT0gMCkgew0KLQkJZ2VuZXJhdGVTdGFuZGFyZEFubm90YXRpb24obWVtYmVyLCBUeXBl
Q29uc3RhbnRzLkpBVkFfTEFOR19BTk5PVEFUSU9OX1JFVEVOVElPTiwgZ2V0UmV0ZW50aW9uUG9s
aWN5KHRhZ0JpdHMpLCBuZXdFbGVtZW50cyk7DQorCQlnZW5lcmF0ZVN0YW5kYXJkQW5ub3RhdGlv
bihqYXZhRWxlbWVudCwgVHlwZUNvbnN0YW50cy5KQVZBX0xBTkdfQU5OT1RBVElPTl9SRVRFTlRJ
T04sIGdldFJldGVudGlvblBvbGljeSh0YWdCaXRzKSwgbmV3RWxlbWVudHMpOw0KIAl9DQogCWlm
ICgodGFnQml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlvbkRlcHJlY2F0ZWQpICE9IDApIHsNCi0JCWdl
bmVyYXRlU3RhbmRhcmRBbm5vdGF0aW9uKG1lbWJlciwgVHlwZUNvbnN0YW50cy5KQVZBX0xBTkdf
REVQUkVDQVRFRCwgQW5ub3RhdGlvbi5OT19NRU1CRVJfVkFMVUVfUEFJUlMsIG5ld0VsZW1lbnRz
KTsNCisJCWdlbmVyYXRlU3RhbmRhcmRBbm5vdGF0aW9uKGphdmFFbGVtZW50LCBUeXBlQ29uc3Rh
bnRzLkpBVkFfTEFOR19ERVBSRUNBVEVELCBBbm5vdGF0aW9uLk5PX01FTUJFUl9WQUxVRV9QQUlS
UywgbmV3RWxlbWVudHMpOw0KIAl9DQogCWlmICgodGFnQml0cyAmIFRhZ0JpdHMuQW5ub3RhdGlv
bkRvY3VtZW50ZWQpICE9IDApIHsNCi0JCWdlbmVyYXRlU3RhbmRhcmRBbm5vdGF0aW9uKG1lbWJl
ciwgVHlwZUNvbnN0YW50cy5KQVZBX0xBTkdfQU5OT1RBVElPTl9ET0NVTUVOVEVELCBBbm5vdGF0
aW9uLk5PX01FTUJFUl9WQUxVRV9QQUlSUywgbmV3RWxlbWVudHMpOw0KKwkJZ2VuZXJhdGVTdGFu
ZGFyZEFubm90YXRpb24oamF2YUVsZW1lbnQsIFR5cGVDb25zdGFudHMuSkFWQV9MQU5HX0FOTk9U
QVRJT05fRE9DVU1FTlRFRCwgQW5ub3RhdGlvbi5OT19NRU1CRVJfVkFMVUVfUEFJUlMsIG5ld0Vs
ZW1lbnRzKTsNCiAJfQ0KIAlpZiAoKHRhZ0JpdHMgJiBUYWdCaXRzLkFubm90YXRpb25Jbmhlcml0
ZWQpICE9IDApIHsNCi0JCWdlbmVyYXRlU3RhbmRhcmRBbm5vdGF0aW9uKG1lbWJlciwgVHlwZUNv
bnN0YW50cy5KQVZBX0xBTkdfQU5OT1RBVElPTl9JTkhFUklURUQsIEFubm90YXRpb24uTk9fTUVN
QkVSX1ZBTFVFX1BBSVJTLCBuZXdFbGVtZW50cyk7DQorCQlnZW5lcmF0ZVN0YW5kYXJkQW5ub3Rh
dGlvbihqYXZhRWxlbWVudCwgVHlwZUNvbnN0YW50cy5KQVZBX0xBTkdfQU5OT1RBVElPTl9JTkhF
UklURUQsIEFubm90YXRpb24uTk9fTUVNQkVSX1ZBTFVFX1BBSVJTLCBuZXdFbGVtZW50cyk7DQog
CX0NCiAJLy8gbm90ZSB0aGF0IEpBVkFfTEFOR19TVVBQUkVTU1dBUk5JTkdTIGFuZCBKQVZBX0xB
TkdfT1ZFUlJJREUgY2Fubm90IGFwcGVhciBpbiBiaW5hcmllcw0KIH0NCiANCi1wcml2YXRlIHZv
aWQgZ2VuZXJhdGVTdGFuZGFyZEFubm90YXRpb24oQmluYXJ5TWVtYmVyIG1lbWJlciwgY2hhcltd
W10gdHlwZU5hbWUsIElNZW1iZXJWYWx1ZVBhaXJbXSBtZW1iZXJzLCBIYXNoTWFwIG5ld0VsZW1l
bnRzKSB7DQotCUlBbm5vdGF0aW9uIGFubm90YXRpb24gPSBuZXcgQW5ub3RhdGlvbihtZW1iZXIs
IG5ldyBTdHJpbmcoQ2hhck9wZXJhdGlvbi5jb25jYXRXaXRoKHR5cGVOYW1lLCAnLicpKSk7DQor
cHJpdmF0ZSB2b2lkIGdlbmVyYXRlU3RhbmRhcmRBbm5vdGF0aW9uKEphdmFFbGVtZW50IGphdmFF
bGVtZW50LCBjaGFyW11bXSB0eXBlTmFtZSwgSU1lbWJlclZhbHVlUGFpcltdIG1lbWJlcnMsIEhh
c2hNYXAgbmV3RWxlbWVudHMpIHsNCisJSUFubm90YXRpb24gYW5ub3RhdGlvbiA9IG5ldyBBbm5v
dGF0aW9uKGphdmFFbGVtZW50LCBuZXcgU3RyaW5nKENoYXJPcGVyYXRpb24uY29uY2F0V2l0aCh0
eXBlTmFtZSwgJy4nKSkpOw0KIAlBbm5vdGF0aW9uSW5mbyBhbm5vdGF0aW9uSW5mbyA9IG5ldyBB
bm5vdGF0aW9uSW5mbygpOw0KIAlhbm5vdGF0aW9uSW5mby5tZW1iZXJzID0gbWVtYmVyczsNCiAJ
bmV3RWxlbWVudHMucHV0KGFubm90YXRpb24sIGFubm90YXRpb25JbmZvKTsNCkBAIC0yNjgsNyAr
MjcxLDcgQEANCiAJCQkJZmluYWwgU3RyaW5nW10gcGFyYW1ldGVyVHlwZXMgPSBTaWduYXR1cmUu
Z2V0UGFyYW1ldGVyVHlwZXMobmV3IFN0cmluZyhkZXNjcmlwdG9yKSk7DQogCQkJCXBOYW1lc1sw
XSA9IHBhcmFtZXRlclR5cGVzWzBdOw0KIAkJCX0NCi0JCX1jYXRjaCAoSWxsZWdhbEFyZ3VtZW50
RXhjZXB0aW9uIGUpIHsNCisJCX0gY2F0Y2ggKElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbiBlKSB7
DQogCQkJLy8gcHJvdGVjdCBhZ2FpbnN0IG1hbGZvcm1lZCAuY2xhc3MgZmlsZSAoZS5nLiBjb20v
c3VuL2NyeXB0by9wcm92aWRlci9TdW5KQ0VfYi5jbGFzcyBoYXMgYSAnYScgZ2VuZXJpYyBzaWdu
YXR1cmUpDQogCQkJc2lnbmF0dXJlID0gbWV0aG9kSW5mby5nZXRNZXRob2REZXNjcmlwdG9yKCk7
DQogCQkJcE5hbWVzID0gU2lnbmF0dXJlLmdldFBhcmFtZXRlclR5cGVzKG5ldyBTdHJpbmcoc2ln
bmF0dXJlKSk7DQpAQCAtMjkwLDEzICsyOTMsMzggQEANCiAJCUJpbmFyeU1ldGhvZCBtZXRob2Qg
PSBuZXcgQmluYXJ5TWV0aG9kKChKYXZhRWxlbWVudCl0eXBlLCBzZWxlY3RvciwgcE5hbWVzKTsN
CiAJCWNoaWxkcmVuSGFuZGxlcy5hZGQobWV0aG9kKTsNCiANCi0JCS8vIGVuc3VyZSB0aGF0IDIg
YmluYXJ5IG1ldGhvZHMgd2l0aCB0aGUgc2FtZSBzaWduYXR1cmUgYnV0IHdpdGggZGlmZmVyZW50
IHJldHVybiB0eXBlcyBoYXZlIGRpZmZlcmVudCBvY2N1cmVuY2UgY291bnRzLg0KKwkJLy8gZW5z
dXJlIHRoYXQgMiBiaW5hcnkgbWV0aG9kcyB3aXRoIHRoZSBzYW1lIHNpZ25hdHVyZSBidXQgd2l0
aCBkaWZmZXJlbnQgcmV0dXJuIHR5cGVzIGhhdmUgZGlmZmVyZW50IG9jY3VycmVuY2UgY291bnRz
Lg0KIAkJLy8gKGNhc2Ugb2YgYnJpZGdlIG1ldGhvZHMgaW4gMS41KQ0KIAkJd2hpbGUgKG5ld0Vs
ZW1lbnRzLmNvbnRhaW5zS2V5KG1ldGhvZCkpDQogCQkJbWV0aG9kLm9jY3VycmVuY2VDb3VudCsr
Ow0KIA0KIAkJbmV3RWxlbWVudHMucHV0KG1ldGhvZCwgbWV0aG9kSW5mbyk7DQogDQorCQlpbnQg
bWF4ID0gcE5hbWVzLmxlbmd0aDsNCisJCWNoYXJbXVtdIGFyZ3VtZW50TmFtZXMgPSBtZXRob2RJ
bmZvLmdldEFyZ3VtZW50TmFtZXMoKTsNCisJCWlmIChhcmd1bWVudE5hbWVzID09IG51bGwgfHwg
YXJndW1lbnROYW1lcy5sZW5ndGggPCBtYXgpIHsNCisJCQlhcmd1bWVudE5hbWVzID0gbmV3IGNo
YXJbbWF4XVtdOw0KKwkJCWZvciAoaW50IGogPSAwOyBqIDwgbWF4OyBqKyspIHsNCisJCQkJYXJn
dW1lbnROYW1lc1tqXSA9ICgiYXJnIiArIGopLnRvQ2hhckFycmF5KCk7IC8vJE5PTi1OTFMtMSQN
CisJCQl9DQorCQl9DQorCQlmb3IgKGludCBqID0gMDsgaiA8IG1heDsgaisrKSB7DQorCQkJSUJp
bmFyeUFubm90YXRpb25bXSBwYXJhbWV0ZXJBbm5vdGF0aW9ucyA9IG1ldGhvZEluZm8uZ2V0UGFy
YW1ldGVyQW5ub3RhdGlvbnMoaik7DQorCQkJaWYgKHBhcmFtZXRlckFubm90YXRpb25zICE9IG51
bGwpIHsNCisJCQkJTG9jYWxWYXJpYWJsZSBsb2NhbFZhcmlhYmxlID0gbmV3IExvY2FsVmFyaWFi
bGUoDQorCQkJCQkJbWV0aG9kLA0KKwkJCQkJCW5ldyBTdHJpbmcoYXJndW1lbnROYW1lc1tqXSks
DQorCQkJCQkJMCwNCisJCQkJCQktMSwNCisJCQkJCQkwLA0KKwkJCQkJCS0xLA0KKwkJCQkJCW1l
dGhvZC5wYXJhbWV0ZXJUeXBlc1tqXSwNCisJCQkJCQludWxsLA0KKwkJCQkJCS0xLA0KKwkJCQkJ
CXRydWUpOw0KKwkJCQlnZW5lcmF0ZUFubm90YXRpb25zSW5mb3MobG9jYWxWYXJpYWJsZSwgYXJn
dW1lbnROYW1lc1tqXSwgcGFyYW1ldGVyQW5ub3RhdGlvbnMsIG1ldGhvZEluZm8uZ2V0VGFnQml0
cygpLCBuZXdFbGVtZW50cyk7DQorCQkJfQ0KKwkJfQ0KIAkJZ2VuZXJhdGVUeXBlUGFyYW1ldGVy
SW5mb3MobWV0aG9kLCBzaWduYXR1cmUsIG5ld0VsZW1lbnRzLCB0eXBlUGFyYW1ldGVySGFuZGxl
cyk7DQogCQlnZW5lcmF0ZUFubm90YXRpb25zSW5mb3MobWV0aG9kLCBtZXRob2RJbmZvLmdldEFu
bm90YXRpb25zKCksIG1ldGhvZEluZm8uZ2V0VGFnQml0cygpLCBuZXdFbGVtZW50cyk7DQogCQlP
YmplY3QgZGVmYXVsdFZhbHVlID0gbWV0aG9kSW5mby5nZXREZWZhdWx0VmFsdWUoKTsNCkluZGV4
OiBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Db21waWxhdGlvblVuaXRTdHJ1
Y3R1cmVSZXF1ZXN0b3IuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlw
c2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvQ29tcGlsYXRpb25Vbml0U3RydWN0dXJlUmVxdWVzdG9yLmphdmEsdg0KcmV0cmlldmluZyBy
ZXZpc2lvbiAxLjg3DQpkaWZmIC11IC1yMS44NyBDb21waWxhdGlvblVuaXRTdHJ1Y3R1cmVSZXF1
ZXN0b3IuamF2YQ0KLS0tIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL0NvbXBp
bGF0aW9uVW5pdFN0cnVjdHVyZVJlcXVlc3Rvci5qYXZhCTI4IEp1bCAyMDEwIDE2OjE3OjAxIC0w
MDAwCTEuODcNCisrKyBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Db21waWxh
dGlvblVuaXRTdHJ1Y3R1cmVSZXF1ZXN0b3IuamF2YQkyMCBGZWIgMjAxMSAyMjoyNjo0MSAtMDAw
MA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmln
aHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCBy
aWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlh
bHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNl
IFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1
dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTE3LDExICsxNywxOSBAQA0KIGltcG9ydCBq
YXZhLnV0aWwuU3RhY2s7DQogDQogaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5Bc3Nl
cnQ7DQotaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLio7DQoraW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5jb3JlLkZsYWdzOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JQW5ub3RhdGlv
bjsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUNvbXBpbGF0aW9uVW5pdDsNCitpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUphdmFFbGVtZW50Ow0KK2ltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuY29yZS5JTWVtYmVyVmFsdWVQYWlyOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29y
ZS5JVHlwZVBhcmFtZXRlcjsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuU2lnbmF0dXJl
Ow0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5DYXRlZ29yaXplZFByb2Js
ZW07DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLkNoYXJPcGVyYXRpb247
DQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLklQcm9ibGVtOw0KIGltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuSVNvdXJjZUVsZW1lbnRSZXF1ZXN0
b3I7DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQVNUTm9k
ZTsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bcmd1bWVu
dDsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5BcnJheUlu
aXRpYWxpemVyOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0
LkNsYXNzTGl0ZXJhbEFjY2VzczsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmFzdC5FeHByZXNzaW9uOw0KQEAgLTM5LDcgKzQ3LDYgQEANCiBpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnV0aWwuSGFzaHRhYmxlT2ZPYmplY3RUb0ludDsN
CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUudXRpbC5SZWZlcmVuY2VJbmZv
QWRhcHRlcjsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUudXRpbC5VdGls
Ow0KLWltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFTVE5vZGU7
DQogLyoqDQogICogQSByZXF1ZXN0b3IgZm9yIHRoZSBmdXp6eSBwYXJzZXIsIHVzZWQgdG8gY29t
cHV0ZSB0aGUgY2hpbGRyZW4gb2YgYW4gSUNvbXBpbGF0aW9uVW5pdC4NCiAgKi8NCkBAIC00Mjcs
OCArNDM0LDUzIEBADQogCQkJYWNjZXB0QW5ub3RhdGlvbihhbm5vdGF0aW9uLCBpbmZvLCBoYW5k
bGUpOw0KIAkJfQ0KIAl9DQorCS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3df
YnVnLmNnaT9pZD0zMzQ3ODMNCisJLy8gUHJvY2VzcyB0aGUgcGFyYW1ldGVyIGFubm90YXRpb25z
IGZyb20gdGhlIGFyZ3VtZW50cw0KKwlpZiAobWV0aG9kSW5mby5ub2RlICE9IG51bGwgJiYgbWV0
aG9kSW5mby5ub2RlLmFyZ3VtZW50cyAhPSBudWxsKSB7DQorCQlpbmZvLmFyZ3VtZW50cyA9IGFj
Y2VwdE1ldGhvZFBhcmFtZXRlcnMobWV0aG9kSW5mby5ub2RlLmFyZ3VtZW50cywgaGFuZGxlLCBt
ZXRob2RJbmZvKTsNCisJfQ0KIAlyZXR1cm4gaW5mbzsNCiB9DQorcHJpdmF0ZSBMb2NhbFZhcmlh
YmxlW10gYWNjZXB0TWV0aG9kUGFyYW1ldGVycyhBcmd1bWVudFtdIGFyZ3VtZW50cywgSmF2YUVs
ZW1lbnQgbWV0aG9kSGFuZGxlLCBNZXRob2RJbmZvIG1ldGhvZEluZm8pIHsNCisJaWYgKGFyZ3Vt
ZW50cyA9PSBudWxsKSByZXR1cm4gbnVsbDsNCisJTG9jYWxWYXJpYWJsZVtdIHJlc3VsdCA9IG5l
dyBMb2NhbFZhcmlhYmxlW2FyZ3VtZW50cy5sZW5ndGhdOw0KKwlBbm5vdGF0aW9uW11bXSBwYXJh
bUFubm90YXRpb25zID0gbmV3IEFubm90YXRpb25bYXJndW1lbnRzLmxlbmd0aF1bXTsNCisJZm9y
KGludCBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgew0KKwkJQXJndW1lbnQgYXJn
dW1lbnQgPSBhcmd1bWVudHNbaV07DQorCQlBbm5vdGF0YWJsZUluZm8gbG9jYWxWYXJJbmZvID0g
bmV3IEFubm90YXRhYmxlSW5mbygpOw0KKwkJbG9jYWxWYXJJbmZvLnNldFNvdXJjZVJhbmdlU3Rh
cnQoYXJndW1lbnQuZGVjbGFyYXRpb25Tb3VyY2VTdGFydCk7DQorCQlsb2NhbFZhckluZm8uc2V0
U291cmNlUmFuZ2VFbmQoYXJndW1lbnQuZGVjbGFyYXRpb25Tb3VyY2VTdGFydCk7DQorCQlsb2Nh
bFZhckluZm8uc2V0TmFtZVNvdXJjZVN0YXJ0KGFyZ3VtZW50LnNvdXJjZVN0YXJ0KTsNCisJCWxv
Y2FsVmFySW5mby5zZXROYW1lU291cmNlRW5kKGFyZ3VtZW50LnNvdXJjZUVuZCk7DQorCQkNCisJ
CVN0cmluZyBwYXJhbVR5cGVTaWcgPSBKYXZhTW9kZWxNYW5hZ2VyLmdldEphdmFNb2RlbE1hbmFn
ZXIoKS5pbnRlcm4oU2lnbmF0dXJlLmNyZWF0ZVR5cGVTaWduYXR1cmUobWV0aG9kSW5mby5wYXJh
bWV0ZXJUeXBlc1tpXSwgZmFsc2UpKTsNCisJCXJlc3VsdFtpXSA9IG5ldyBMb2NhbFZhcmlhYmxl
KA0KKwkJCQltZXRob2RIYW5kbGUsDQorCQkJCW5ldyBTdHJpbmcoYXJndW1lbnQubmFtZSksDQor
CQkJCWFyZ3VtZW50LmRlY2xhcmF0aW9uU291cmNlU3RhcnQsDQorCQkJCWFyZ3VtZW50LmRlY2xh
cmF0aW9uU291cmNlRW5kLA0KKwkJCQlhcmd1bWVudC5zb3VyY2VTdGFydCwNCisJCQkJYXJndW1l
bnQuc291cmNlRW5kLA0KKwkJCQlwYXJhbVR5cGVTaWcsDQorCQkJCWFyZ3VtZW50LmFubm90YXRp
b25zLA0KKwkJCQlhcmd1bWVudC5tb2RpZmllcnMsIA0KKwkJCQl0cnVlKTsNCisJCXRoaXMubmV3
RWxlbWVudHMucHV0KHJlc3VsdFtpXSwgbG9jYWxWYXJJbmZvKTsNCisJCXRoaXMuaW5mb1N0YWNr
LnB1c2gobG9jYWxWYXJJbmZvKTsNCisJCXRoaXMuaGFuZGxlU3RhY2sucHVzaChyZXN1bHRbaV0p
Ow0KKwkJaWYgKGFyZ3VtZW50LmFubm90YXRpb25zICE9IG51bGwpIHsNCisJCQlwYXJhbUFubm90
YXRpb25zW2ldID0gbmV3IEFubm90YXRpb25bYXJndW1lbnQuYW5ub3RhdGlvbnMubGVuZ3RoXTsN
CisJCQlmb3IgKGludCAgaiA9IDA7IGogPCBhcmd1bWVudC5hbm5vdGF0aW9ucy5sZW5ndGg7IGor
KyApIHsNCisJCQkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0
aW9uIGFubm90YXRpb24gPSBhcmd1bWVudC5hbm5vdGF0aW9uc1tqXTsNCisJCQkJYWNjZXB0QW5u
b3RhdGlvbihhbm5vdGF0aW9uLCBsb2NhbFZhckluZm8sIHJlc3VsdFtpXSk7DQorCQkJfQ0KKwkJ
fQ0KKwkJdGhpcy5pbmZvU3RhY2sucG9wKCk7DQorCQl0aGlzLmhhbmRsZVN0YWNrLnBvcCgpOw0K
Kwl9DQorCXJldHVybiByZXN1bHQ7DQorfQ0KKw0KIC8qKg0KICAqIEBzZWUgSVNvdXJjZUVsZW1l
bnRSZXF1ZXN0b3INCiAgKi8NCkluZGV4OiBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29yZS9Mb2NhbFZhcmlhYmxlLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9l
Y2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb3JlL0xvY2FsVmFyaWFibGUuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMzENCmRp
ZmYgLXUgLXIxLjMxIExvY2FsVmFyaWFibGUuamF2YQ0KLS0tIG1vZGVsL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb3JlL0xvY2FsVmFyaWFibGUuamF2YQk3IFNlcCAyMDEwIDE5OjE0OjI2IC0w
MDAwCTEuMzENCisrKyBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Mb2NhbFZh
cmlhYmxlLmphdmEJMjAgRmViIDIwMTEgMjI6MjY6NDIgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0K
IC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEwIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJ
Qk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlz
IHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZh
aWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4w
DQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFi
bGUgYXQNCkBAIC0zNCw2ICszNCw4IEBADQogDQogcHVibGljIGNsYXNzIExvY2FsVmFyaWFibGUg
ZXh0ZW5kcyBTb3VyY2VSZWZFbGVtZW50IGltcGxlbWVudHMgSUxvY2FsVmFyaWFibGUgew0KIA0K
KwlwdWJsaWMgc3RhdGljIGZpbmFsIElMb2NhbFZhcmlhYmxlW10gTk9fTE9DQUxfVkFSSUFCTEVT
ID0gbmV3IElMb2NhbFZhcmlhYmxlWzBdOw0KKwkNCiAJU3RyaW5nIG5hbWU7DQogCXB1YmxpYyBp
bnQgZGVjbGFyYXRpb25Tb3VyY2VTdGFydCwgZGVjbGFyYXRpb25Tb3VyY2VFbmQ7DQogCXB1Ymxp
YyBpbnQgbmFtZVN0YXJ0LCBuYW1lRW5kOw0KQEAgLTI4OCwxMCArMjkwLDU5IEBADQogCSAqIEBz
aW5jZSAzLjcNCiAJICovDQogCXB1YmxpYyBpbnQgZ2V0RmxhZ3MoKSB7DQorCQlpZiAodGhpcy5m
bGFncyA9PSAtMSkgew0KKwkJCVNvdXJjZU1hcHBlciBtYXBwZXI9IGdldFNvdXJjZU1hcHBlcigp
Ow0KKwkJCWlmIChtYXBwZXIgIT0gbnVsbCkgew0KKwkJCQl0cnkgew0KKwkJCQkJLy8gZW5zdXJl
IHRoZSBjbGFzcyBmaWxlJ3MgYnVmZmVyIGlzIG9wZW4gc28gdGhhdCBzb3VyY2UgcmFuZ2VzIGFy
ZSBjb21wdXRlZA0KKwkJCQkJQ2xhc3NGaWxlIGNsYXNzRmlsZSA9IChDbGFzc0ZpbGUpZ2V0Q2xh
c3NGaWxlKCk7DQorCQkJCQlpZiAoY2xhc3NGaWxlICE9IG51bGwpIHsNCisJCQkJCQljbGFzc0Zp
bGUuZ2V0QnVmZmVyKCk7DQorCQkJCQkJcmV0dXJuIG1hcHBlci5nZXRGbGFncyh0aGlzKTsNCisJ
CQkJCX0NCisJCQkJfSBjYXRjaChKYXZhTW9kZWxFeGNlcHRpb24gZSkgew0KKwkJCQkJLy8gaWdu
b3JlDQorCQkJCX0NCisJCQl9DQorCQkJcmV0dXJuIDA7DQorCQl9DQogCQlyZXR1cm4gdGhpcy5m
bGFnczsNCiAJfQ0KIA0KKwkvKioNCisJICogQHNlZSBJTWVtYmVyI2dldENsYXNzRmlsZSgpDQor
CSAqLw0KKwlwdWJsaWMgSUNsYXNzRmlsZSBnZXRDbGFzc0ZpbGUoKSB7DQorCQlJSmF2YUVsZW1l
bnQgZWxlbWVudCA9IGdldFBhcmVudCgpOw0KKwkJd2hpbGUgKGVsZW1lbnQgaW5zdGFuY2VvZiBJ
TWVtYmVyKSB7DQorCQkJZWxlbWVudD0gZWxlbWVudC5nZXRQYXJlbnQoKTsNCisJCX0NCisJCWlm
IChlbGVtZW50IGluc3RhbmNlb2YgSUNsYXNzRmlsZSkgew0KKwkJCXJldHVybiAoSUNsYXNzRmls
ZSkgZWxlbWVudDsNCisJCX0NCisJCXJldHVybiBudWxsOw0KKwl9DQorCS8qKg0KKwkgKiB7QGlu
aGVyaXREb2N9DQorCSAqIEBzaW5jZSAzLjcNCisJICovDQogCXB1YmxpYyBJU291cmNlUmFuZ2Ug
Z2V0TmFtZVJhbmdlKCkgew0KKwkJaWYgKHRoaXMubmFtZUVuZCA9PSAtMSkgew0KKwkJCVNvdXJj
ZU1hcHBlciBtYXBwZXI9IGdldFNvdXJjZU1hcHBlcigpOw0KKwkJCWlmIChtYXBwZXIgIT0gbnVs
bCkgew0KKwkJCQl0cnkgew0KKwkJCQkJLy8gZW5zdXJlIHRoZSBjbGFzcyBmaWxlJ3MgYnVmZmVy
IGlzIG9wZW4gc28gdGhhdCBzb3VyY2UgcmFuZ2VzIGFyZSBjb21wdXRlZA0KKwkJCQkJQ2xhc3NG
aWxlIGNsYXNzRmlsZSA9IChDbGFzc0ZpbGUpZ2V0Q2xhc3NGaWxlKCk7DQorCQkJCQlpZiAoY2xh
c3NGaWxlICE9IG51bGwpIHsNCisJCQkJCQljbGFzc0ZpbGUuZ2V0QnVmZmVyKCk7DQorCQkJCQkJ
cmV0dXJuIG1hcHBlci5nZXROYW1lUmFuZ2UodGhpcyk7DQorCQkJCQl9DQorCQkJCX0gY2F0Y2go
SmF2YU1vZGVsRXhjZXB0aW9uIGUpIHsNCisJCQkJCS8vIGlnbm9yZQ0KKwkJCQl9DQorCQkJfQ0K
KwkJCXJldHVybiBTb3VyY2VNYXBwZXIuVU5LTk9XTl9SQU5HRTsNCisJCX0NCiAJCXJldHVybiBu
ZXcgU291cmNlUmFuZ2UodGhpcy5uYW1lU3RhcnQsIHRoaXMubmFtZUVuZC10aGlzLm5hbWVTdGFy
dCsxKTsNCiAJfQ0KIA0KQEAgLTMyNiw5ICszNzcsMjIgQEANCiAJfQ0KIA0KIAkvKioNCi0JICog
QHNlZSBJU291cmNlUmVmZXJlbmNlDQorCSAqIHtAaW5oZXJpdERvY30NCisJICogQHNpbmNlIDMu
Nw0KIAkgKi8NCi0JcHVibGljIElTb3VyY2VSYW5nZSBnZXRTb3VyY2VSYW5nZSgpIHsNCisJcHVi
bGljIElTb3VyY2VSYW5nZSBnZXRTb3VyY2VSYW5nZSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRp
b24gew0KKwkJaWYgKHRoaXMuZGVjbGFyYXRpb25Tb3VyY2VFbmQgPT0gLTEpIHsNCisJCQlTb3Vy
Y2VNYXBwZXIgbWFwcGVyPSBnZXRTb3VyY2VNYXBwZXIoKTsNCisJCQlpZiAobWFwcGVyICE9IG51
bGwpIHsNCisJCQkJLy8gZW5zdXJlIHRoZSBjbGFzcyBmaWxlJ3MgYnVmZmVyIGlzIG9wZW4gc28g
dGhhdCBzb3VyY2UgcmFuZ2VzIGFyZSBjb21wdXRlZA0KKwkJCQlDbGFzc0ZpbGUgY2xhc3NGaWxl
ID0gKENsYXNzRmlsZSlnZXRDbGFzc0ZpbGUoKTsNCisJCQkJaWYgKGNsYXNzRmlsZSAhPSBudWxs
KSB7DQorCQkJCQljbGFzc0ZpbGUuZ2V0QnVmZmVyKCk7DQorCQkJCQlyZXR1cm4gbWFwcGVyLmdl
dFNvdXJjZVJhbmdlKHRoaXMpOw0KKwkJCQl9DQorCQkJfQ0KKwkJCXJldHVybiBTb3VyY2VNYXBw
ZXIuVU5LTk9XTl9SQU5HRTsNCisJCX0NCiAJCXJldHVybiBuZXcgU291cmNlUmFuZ2UodGhpcy5k
ZWNsYXJhdGlvblNvdXJjZVN0YXJ0LCB0aGlzLmRlY2xhcmF0aW9uU291cmNlRW5kLXRoaXMuZGVj
bGFyYXRpb25Tb3VyY2VTdGFydCsxKTsNCiAJfQ0KIA0KSW5kZXg6IG1vZGVsL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL1NvdXJjZU1hcHBlci5qYXZhDQo9PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmls
ZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29yZS9Tb3VyY2VNYXBwZXIuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlz
aW9uIDEuMTUxDQpkaWZmIC11IC1yMS4xNTEgU291cmNlTWFwcGVyLmphdmENCi0tLSBtb2RlbC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Tb3VyY2VNYXBwZXIuamF2YQkyMiBPY3QgMjAx
MCAxMDo0ODoxMCAtMDAwMAkxLjE1MQ0KKysrIG1vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb3JlL1NvdXJjZU1hcHBlci5qYXZhCTIwIEZlYiAyMDExIDIyOjI2OjQyIC0wMDAwDQpAQCAt
MSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykg
MjAwMCwgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCisgKiBDb3B5cmlnaHQgKGMp
IDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQogICogQWxsIHJpZ2h0cyBy
ZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0KICAq
IGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGlj
IExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBh
bmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtNzYsNiArNzYsNjYgQEANCiAJZXh0ZW5kcyBSZWZlcmVu
Y2VJbmZvQWRhcHRlcg0KIAlpbXBsZW1lbnRzIElTb3VyY2VFbGVtZW50UmVxdWVzdG9yLCBTdWZm
aXhDb25zdGFudHMgew0KIA0KKwlwdWJsaWMgc3RhdGljIGNsYXNzIExvY2FsVmFyaWFibGVFbGVt
ZW50S2V5IHsNCisJCVN0cmluZyBwYXJlbnQ7DQorCQlTdHJpbmcgbmFtZTsNCisJCQ0KKwkJcHVi
bGljIExvY2FsVmFyaWFibGVFbGVtZW50S2V5KElKYXZhRWxlbWVudCBtZXRob2QsIFN0cmluZyBu
YW1lKSB7DQorCQkJU3RyaW5nQnVmZmVyIGJ1ZmZlciA9IG5ldyBTdHJpbmdCdWZmZXIoKTsNCisJ
CQlidWZmZXINCisJCQkJLmFwcGVuZChtZXRob2QuZ2V0UGFyZW50KCkuZ2V0SGFuZGxlSWRlbnRp
ZmllcigpKQ0KKwkJCQkuYXBwZW5kKCcjJykNCisJCQkJLmFwcGVuZChtZXRob2QuZ2V0RWxlbWVu
dE5hbWUoKSkNCisJCQkJLmFwcGVuZCgnKCcpOw0KKwkJCWlmIChtZXRob2QuZ2V0RWxlbWVudFR5
cGUoKSA9PSBJSmF2YUVsZW1lbnQuTUVUSE9EKSB7DQorCQkJCVN0cmluZ1tdIHBhcmFtZXRlclR5
cGVzID0gKChJTWV0aG9kKSBtZXRob2QpLmdldFBhcmFtZXRlclR5cGVzKCk7DQorCQkJCWZvciAo
aW50IGkgPSAwLCBtYXggPSBwYXJhbWV0ZXJUeXBlcy5sZW5ndGg7IGkgPCBtYXg7IGkrKykgew0K
KwkJCQkJaWYgKGkgPiAwKSB7DQorCQkJCQkJYnVmZmVyLmFwcGVuZCgnLCcpOw0KKwkJCQkJfQ0K
KwkJCQkJYnVmZmVyLmFwcGVuZChTaWduYXR1cmUuZ2V0U2lnbmF0dXJlU2ltcGxlTmFtZShwYXJh
bWV0ZXJUeXBlc1tpXSkpOw0KKwkJCQl9DQorCQkJfQ0KKwkJCWJ1ZmZlci5hcHBlbmQoJyknKTsN
CisJCQl0aGlzLnBhcmVudCA9IFN0cmluZy52YWx1ZU9mKGJ1ZmZlcik7DQorCQkJdGhpcy5uYW1l
ID0gbmFtZTsNCisJCX0NCisNCisJCXB1YmxpYyBpbnQgaGFzaENvZGUoKSB7DQorCQkJZmluYWwg
aW50IHByaW1lID0gMzE7DQorCQkJaW50IHJlc3VsdCA9IDE7DQorCQkJcmVzdWx0ID0gcHJpbWUg
KiByZXN1bHQgKyAoKHRoaXMubmFtZSA9PSBudWxsKSA/IDAgOiB0aGlzLm5hbWUuaGFzaENvZGUo
KSk7DQorCQkJcmVzdWx0ID0gcHJpbWUgKiByZXN1bHQgKyAoKHRoaXMucGFyZW50ID09IG51bGwp
ID8gMCA6IHRoaXMucGFyZW50Lmhhc2hDb2RlKCkpOw0KKwkJCXJldHVybiByZXN1bHQ7DQorCQl9
DQorDQorCQlwdWJsaWMgYm9vbGVhbiBlcXVhbHMoT2JqZWN0IG9iaikgew0KKwkJCWlmICh0aGlz
ID09IG9iaikNCisJCQkJcmV0dXJuIHRydWU7DQorCQkJaWYgKG9iaiA9PSBudWxsKQ0KKwkJCQly
ZXR1cm4gZmFsc2U7DQorCQkJaWYgKGdldENsYXNzKCkgIT0gb2JqLmdldENsYXNzKCkpDQorCQkJ
CXJldHVybiBmYWxzZTsNCisJCQlMb2NhbFZhcmlhYmxlRWxlbWVudEtleSBvdGhlciA9IChMb2Nh
bFZhcmlhYmxlRWxlbWVudEtleSkgb2JqOw0KKwkJCWlmICh0aGlzLm5hbWUgPT0gbnVsbCkgew0K
KwkJCQlpZiAob3RoZXIubmFtZSAhPSBudWxsKQ0KKwkJCQkJcmV0dXJuIGZhbHNlOw0KKwkJCX0g
ZWxzZSBpZiAoIXRoaXMubmFtZS5lcXVhbHMob3RoZXIubmFtZSkpDQorCQkJCXJldHVybiBmYWxz
ZTsNCisJCQlpZiAodGhpcy5wYXJlbnQgPT0gbnVsbCkgew0KKwkJCQlpZiAob3RoZXIucGFyZW50
ICE9IG51bGwpDQorCQkJCQlyZXR1cm4gZmFsc2U7DQorCQkJfSBlbHNlIGlmICghdGhpcy5wYXJl
bnQuZXF1YWxzKG90aGVyLnBhcmVudCkpDQorCQkJCXJldHVybiBmYWxzZTsNCisJCQlyZXR1cm4g
dHJ1ZTsNCisJCX0NCisJCXB1YmxpYyBTdHJpbmcgdG9TdHJpbmcoKSB7DQorCQkJU3RyaW5nQnVm
ZmVyIGJ1ZmZlciA9IG5ldyBTdHJpbmdCdWZmZXIoKTsNCisJCQlidWZmZXIuYXBwZW5kKCcoJyku
YXBwZW5kKHRoaXMucGFyZW50KS5hcHBlbmQoJy4nKS5hcHBlbmQodGhpcy5uYW1lKS5hcHBlbmQo
JyknKTsNCisJCQlyZXR1cm4gU3RyaW5nLnZhbHVlT2YoYnVmZmVyKTsNCisJCX0NCisJfQ0KKw0K
IAlwdWJsaWMgc3RhdGljIGJvb2xlYW4gVkVSQk9TRSA9IGZhbHNlOw0KIAkvKioNCiAJICogU3Bl
Y2lmaWVzIHRoZSBsb2NhdGlvbiBvZiB0aGUgcGFja2FnZSBmcmFnbWVudCByb290cyB3aXRoaW4N
CkBAIC0xMTksNiArMTc5LDE2IEBADQogCSAqLw0KIAlwcm90ZWN0ZWQgSGFzaE1hcCBjYXRlZ29y
aWVzOw0KIA0KKwkvKioNCisJICogVGFibGUgdGhhdCBjb250YWlucyBhbGwgc291cmNlIHJhbmdl
cyBmb3IgbG9jYWwgdmFyaWFibGVzLg0KKwkgKiBLZXlzIGFyZSB0aGUgc3BlY2lhbCBsb2NhbCB2
YXJpYWJsZSBlbGVtZW50cywgZW50cmllcyBhcmUgPGNvZGU+Y2hhcltdW108L2NvZGU+Lg0KKwkg
Ki8NCisJcHJvdGVjdGVkIEhhc2hNYXAgcGFyYW1ldGVyc1JhbmdlczsNCisJDQorCS8qKg0KKwkg
KiBTZXQgdGhhdCBjb250YWlucyBhbGwgZmluYWwgbG9jYWwgdmFyaWFibGVzLg0KKwkgKi8NCisJ
cHJvdGVjdGVkIEhhc2hTZXQgZmluYWxQYXJhbWV0ZXJzOw0KIA0KIAkvKioNCiAJICogVGhlIHVu
a25vd24gc291cmNlIHJhbmdlIHstMSwgMH0NCkBAIC0yMDksNiArMjc5LDcgQEANCiAJCX0NCiAJ
CXRoaXMuc291cmNlUGF0aCA9IHNvdXJjZVBhdGg7DQogCQl0aGlzLnNvdXJjZVJhbmdlcyA9IG5l
dyBIYXNoTWFwKCk7DQorCQl0aGlzLnBhcmFtZXRlcnNSYW5nZXMgPSBuZXcgSGFzaE1hcCgpOw0K
IAkJdGhpcy5wYXJhbWV0ZXJOYW1lcyA9IG5ldyBIYXNoTWFwKCk7DQogCQl0aGlzLmltcG9ydHNU
YWJsZSA9IG5ldyBIYXNoTWFwKCk7DQogCQl0aGlzLmltcG9ydHNDb3VudGVyVGFibGUgPSBuZXcg
SGFzaE1hcCgpOw0KQEAgLTI4OCw2ICszNTksOCBAQA0KIAlwdWJsaWMgdm9pZCBjbG9zZSgpIHsN
CiAJCXRoaXMuc291cmNlUmFuZ2VzID0gbnVsbDsNCiAJCXRoaXMucGFyYW1ldGVyTmFtZXMgPSBu
dWxsOw0KKwkJdGhpcy5wYXJhbWV0ZXJzUmFuZ2VzID0gbnVsbDsNCisJCXRoaXMuZmluYWxQYXJh
bWV0ZXJzID0gbnVsbDsNCiAJfQ0KIA0KIAkvKioNCkBAIC03NTEsNiArODI0LDMwIEBADQogCQkJ
CQkJCXR5cGVQYXJhbWV0ZXJJbmZvLm5hbWVTb3VyY2VFbmQgLSB0eXBlUGFyYW1ldGVySW5mby5u
YW1lU291cmNlU3RhcnQgKyAxKSk7DQogCQkJCX0NCiAJCQl9DQorCQkJLy8gcGFyYW1ldGVycyBp
bmZvcw0KKwkJCWlmIChtZXRob2RJbmZvLnBhcmFtZXRlckluZm9zICE9IG51bGwpIHsNCisJCQkJ
Zm9yIChpbnQgaSA9IDAsIGxlbmd0aCA9IG1ldGhvZEluZm8ucGFyYW1ldGVySW5mb3MubGVuZ3Ro
OyBpIDwgbGVuZ3RoOyBpKyspIHsNCisJCQkJCVBhcmFtZXRlckluZm8gcGFyYW1ldGVySW5mbyA9
IG1ldGhvZEluZm8ucGFyYW1ldGVySW5mb3NbaV07DQorCQkJCQlMb2NhbFZhcmlhYmxlRWxlbWVu
dEtleSBrZXkgPSBuZXcgTG9jYWxWYXJpYWJsZUVsZW1lbnRLZXkobWV0aG9kLCBuZXcgU3RyaW5n
KHBhcmFtZXRlckluZm8ubmFtZSkpOw0KKwkJCQkJU291cmNlUmFuZ2VbXSBhbGxSYW5nZXMgPSBu
ZXcgU291cmNlUmFuZ2VbXSB7DQorCQkJCQkJbmV3IFNvdXJjZVJhbmdlKA0KKwkJCQkJCQlwYXJh
bWV0ZXJJbmZvLmRlY2xhcmF0aW9uU3RhcnQsDQorCQkJCQkJCXBhcmFtZXRlckluZm8uZGVjbGFy
YXRpb25FbmQgLSBwYXJhbWV0ZXJJbmZvLmRlY2xhcmF0aW9uU3RhcnQgKyAxKSwNCisJCQkJCQlu
ZXcgU291cmNlUmFuZ2UoDQorCQkJCQkJCXBhcmFtZXRlckluZm8ubmFtZVNvdXJjZVN0YXJ0LA0K
KwkJCQkJCQlwYXJhbWV0ZXJJbmZvLm5hbWVTb3VyY2VFbmQgLSBwYXJhbWV0ZXJJbmZvLm5hbWVT
b3VyY2VTdGFydCArIDEpDQorCQkJCQl9Ow0KKwkJCQkJdGhpcy5wYXJhbWV0ZXJzUmFuZ2VzLnB1
dCgNCisJCQkJCQlrZXksDQorCQkJCQkJYWxsUmFuZ2VzKTsNCisJCQkJCWlmIChwYXJhbWV0ZXJJ
bmZvLm1vZGlmaWVycyAhPSAwKSB7DQorCQkJCQkJaWYgKHRoaXMuZmluYWxQYXJhbWV0ZXJzID09
IG51bGwpIHsNCisJCQkJCQkJdGhpcy5maW5hbFBhcmFtZXRlcnMgPSBuZXcgSGFzaFNldCgpOw0K
KwkJCQkJCX0NCisJCQkJCQl0aGlzLmZpbmFsUGFyYW1ldGVycy5hZGQoa2V5KTsNCisJCQkJCX0N
CisJCQkJfQ0KKwkJCX0NCiANCiAJCQkvLyBjYXRlZ29yaWVzDQogCQkJYWRkQ2F0ZWdvcmllcyht
ZXRob2QsIG1ldGhvZEluZm8uY2F0ZWdvcmllcyk7DQpAQCAtOTU5LDYgKzEwNTYsMTYgQEANCiAJ
fQ0KIA0KIA0KKwlwdWJsaWMgaW50IGdldEZsYWdzKElKYXZhRWxlbWVudCBlbGVtZW50KSB7DQor
CQlzd2l0Y2goZWxlbWVudC5nZXRFbGVtZW50VHlwZSgpKSB7DQorCQkJY2FzZSBJSmF2YUVsZW1l
bnQuTE9DQUxfVkFSSUFCTEUgOg0KKwkJCQlMb2NhbFZhcmlhYmxlRWxlbWVudEtleSBrZXkgPSBu
ZXcgTG9jYWxWYXJpYWJsZUVsZW1lbnRLZXkoZWxlbWVudC5nZXRQYXJlbnQoKSwgZWxlbWVudC5n
ZXRFbGVtZW50TmFtZSgpKTsNCisJCQkJaWYgKHRoaXMuZmluYWxQYXJhbWV0ZXJzICE9IG51bGwg
JiYgdGhpcy5maW5hbFBhcmFtZXRlcnMuY29udGFpbnMoa2V5KSkgew0KKwkJCQkJcmV0dXJuIEZs
YWdzLkFjY0ZpbmFsOw0KKwkJCQl9DQorCQl9DQorCQlyZXR1cm4gMDsNCisJfQ0KIA0KIAkvKioN
CiAJICogUmV0dXJucyB0aGUgU291cmNlUmFuZ2UgZm9yIHRoZSBuYW1lIG9mIHRoZSBnaXZlbiBl
bGVtZW50LCBvcg0KQEAgLTk5MCw2ICsxMDk3LDE1IEBADQogCQkJCQkJZWxlbWVudCA9IG1ldGhv
ZC5nZXRUeXBlUGFyYW1ldGVyKGVsZW1lbnQuZ2V0RWxlbWVudE5hbWUoKSk7DQogCQkJCQl9DQog
CQkJCX0NCisJCQkJYnJlYWs7DQorCQkJY2FzZSBJSmF2YUVsZW1lbnQuTE9DQUxfVkFSSUFCTEUg
Og0KKwkJCQlMb2NhbFZhcmlhYmxlRWxlbWVudEtleSBrZXkgPSBuZXcgTG9jYWxWYXJpYWJsZUVs
ZW1lbnRLZXkoZWxlbWVudC5nZXRQYXJlbnQoKSwgZWxlbWVudC5nZXRFbGVtZW50TmFtZSgpKTsN
CisJCQkJU291cmNlUmFuZ2VbXSByYW5nZXMgPSAoU291cmNlUmFuZ2VbXSkgdGhpcy5wYXJhbWV0
ZXJzUmFuZ2VzLmdldChrZXkpOw0KKwkJCQlpZiAocmFuZ2VzID09IG51bGwpIHsNCisJCQkJCXJl
dHVybiBVTktOT1dOX1JBTkdFOw0KKwkJCQl9IGVsc2Ugew0KKwkJCQkJcmV0dXJuIHJhbmdlc1sx
XTsNCisJCQkJfQ0KIAkJfQ0KIAkJU291cmNlUmFuZ2VbXSByYW5nZXMgPSAoU291cmNlUmFuZ2Vb
XSkgdGhpcy5zb3VyY2VSYW5nZXMuZ2V0KGVsZW1lbnQpOw0KIAkJaWYgKHJhbmdlcyA9PSBudWxs
KSB7DQpAQCAtMTA1MCw2ICsxMTY2LDE1IEBADQogCQkJCQkJZWxlbWVudCA9IG1ldGhvZC5nZXRU
eXBlUGFyYW1ldGVyKGVsZW1lbnQuZ2V0RWxlbWVudE5hbWUoKSk7DQogCQkJCQl9DQogCQkJCX0N
CisJCQkJYnJlYWs7DQorCQkJY2FzZSBJSmF2YUVsZW1lbnQuTE9DQUxfVkFSSUFCTEUgOg0KKwkJ
CQlMb2NhbFZhcmlhYmxlRWxlbWVudEtleSBrZXkgPSBuZXcgTG9jYWxWYXJpYWJsZUVsZW1lbnRL
ZXkoZWxlbWVudC5nZXRQYXJlbnQoKSwgZWxlbWVudC5nZXRFbGVtZW50TmFtZSgpKTsNCisJCQkJ
U291cmNlUmFuZ2VbXSByYW5nZXMgPSAoU291cmNlUmFuZ2VbXSkgdGhpcy5wYXJhbWV0ZXJzUmFu
Z2VzLmdldChrZXkpOw0KKwkJCQlpZiAocmFuZ2VzID09IG51bGwpIHsNCisJCQkJCXJldHVybiBV
TktOT1dOX1JBTkdFOw0KKwkJCQl9IGVsc2Ugew0KKwkJCQkJcmV0dXJuIHJhbmdlc1swXTsNCisJ
CQkJfQ0KIAkJfQ0KIAkJU291cmNlUmFuZ2VbXSByYW5nZXMgPSAoU291cmNlUmFuZ2VbXSkgdGhp
cy5zb3VyY2VSYW5nZXMuZ2V0KGVsZW1lbnQpOw0KIAkJaWYgKHJhbmdlcyA9PSBudWxsKSB7DQpJ
bmRleDogbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvU291cmNlTWV0aG9kLmph
dmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpk
dC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL1NvdXJjZU1ldGhvZC5q
YXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS42OA0KZGlmZiAtdSAtcjEuNjggU291cmNlTWV0
aG9kLmphdmENCi0tLSBtb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9Tb3VyY2VN
ZXRob2QuamF2YQkyNyBKdW4gMjAwOCAxNjowMzo1MSAtMDAwMAkxLjY4DQorKysgbW9kZWwvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvU291cmNlTWV0aG9kLmphdmEJMjAgRmViIDIwMTEg
MjI6MjY6NDIgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
DQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDA4IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJz
Lg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVy
cy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBh
bnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBv
ZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMg
dGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC0xMzQsNyArMTM0LDEy
IEBADQogCVNvdXJjZU1ldGhvZEVsZW1lbnRJbmZvIGluZm8gPSAoU291cmNlTWV0aG9kRWxlbWVu
dEluZm8pIGdldEVsZW1lbnRJbmZvKCk7DQogCXJldHVybiBpbmZvLnR5cGVQYXJhbWV0ZXJzOw0K
IH0NCi0NCitwdWJsaWMgSUxvY2FsVmFyaWFibGVbXSBnZXRQYXJhbWV0ZXJzKCkgdGhyb3dzIEph
dmFNb2RlbEV4Y2VwdGlvbiB7DQorCUlMb2NhbFZhcmlhYmxlW10gYXJndW1lbnRzID0gKChTb3Vy
Y2VNZXRob2RFbGVtZW50SW5mbykgZ2V0RWxlbWVudEluZm8oKSkuYXJndW1lbnRzOw0KKwlpZiAo
YXJndW1lbnRzID09IG51bGwpDQorCQlyZXR1cm4gTG9jYWxWYXJpYWJsZS5OT19MT0NBTF9WQVJJ
QUJMRVM7DQorCXJldHVybiBhcmd1bWVudHM7DQorfQ0KIC8qKg0KICAqIEBzZWUgSU1ldGhvZCNn
ZXRUeXBlUGFyYW1ldGVyU2lnbmF0dXJlcygpDQogICogQHNpbmNlIDMuMA0KSW5kZXg6IG1vZGVs
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL1NvdXJjZU1ldGhvZEVsZW1lbnRJbmZvLmph
dmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpk
dC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL1NvdXJjZU1ldGhvZEVs
ZW1lbnRJbmZvLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjIyDQpkaWZmIC11IC1yMS4y
MiBTb3VyY2VNZXRob2RFbGVtZW50SW5mby5qYXZhDQotLS0gbW9kZWwvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvcmUvU291cmNlTWV0aG9kRWxlbWVudEluZm8uamF2YQkyNyBKdW4gMjAwOCAx
NjowMzo1MCAtMDAwMAkxLjIyDQorKysgbW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
cmUvU291cmNlTWV0aG9kRWxlbWVudEluZm8uamF2YQkyMCBGZWIgMjAxMSAyMjoyNjo0MiAtMDAw
MA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmln
aHQgKGMpIDIwMDAsIDIwMDggSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCBy
aWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlh
bHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNl
IFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1
dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTM4LDYgKzM4LDggQEANCiAJICogRm9yIGV4
YW1wbGUsIEhhc2h0YWJsZSBvciBqYXZhLnV0aWwuSGFzaHRhYmxlLg0KIAkgKi8NCiAJcHJvdGVj
dGVkIGNoYXJbXVtdIGV4Y2VwdGlvblR5cGVzOw0KKwkNCisJcHJvdGVjdGVkIElMb2NhbFZhcmlh
YmxlW10gYXJndW1lbnRzOw0KIA0KIAkvKg0KIAkgKiBUaGUgdHlwZSBwYXJhbWV0ZXJzIG9mIHRo
aXMgc291cmNlIHR5cGUuIEVtcHR5IGlmIG5vbmUuDQojUCBvcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5jb21waWxlcg0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy91dGls
L1V0aWwuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL3V0aWwvVXRpbC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS44Mg0KZGlmZiAtdSAt
cjEuODIgVXRpbC5qYXZhDQotLS0gc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3V0aWwv
VXRpbC5qYXZhCTI1IE9jdCAyMDEwIDEwOjMwOjE1IC0wMDAwCTEuODINCisrKyBzcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvdXRpbC9VdGlsLmphdmEJMjAgRmViIDIwMTEgMjI6MjY6NDMg
LTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29w
eXJpZ2h0IChjKSAyMDAwLCAyMDEwIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENv
cHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBB
bGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0
ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNs
aXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0
cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC0zODIsNyArMzgyLDkgQEANCiB9DQog
cHVibGljIHN0YXRpYyB2b2lkIGNyZWF0ZUphcihTdHJpbmdbXSBqYXZhUGF0aHNBbmRDb250ZW50
cywgU3RyaW5nW10gZXh0cmFQYXRoc0FuZENvbnRlbnRzLCBTdHJpbmcgamFyUGF0aCwgU3RyaW5n
W10gY2xhc3NwYXRoLCBTdHJpbmcgY29tcGxpYW5jZSwgTWFwIG9wdGlvbnMpIHRocm93cyBJT0V4
Y2VwdGlvbiB7DQogCU1hcCBjb21waWxlT3B0aW9ucyA9IGdldENvbXBpbGVPcHRpb25zKGNvbXBs
aWFuY2UpOw0KLQljb21waWxlT3B0aW9ucy5wdXRBbGwob3B0aW9ucyk7DQorCWlmIChvcHRpb25z
ICE9IG51bGwpIHsNCisJCWNvbXBpbGVPcHRpb25zLnB1dEFsbChvcHRpb25zKTsNCisJfQ0KIAlj
cmVhdGVKYXIoamF2YVBhdGhzQW5kQ29udGVudHMsIGV4dHJhUGF0aHNBbmRDb250ZW50cywgY29t
cGlsZU9wdGlvbnMsIGNsYXNzcGF0aCwgamFyUGF0aCk7DQogfQ0KIHB1YmxpYyBzdGF0aWMgdm9p
ZCBjcmVhdGVTb3VyY2VaaXAoU3RyaW5nW10gcGF0aHNBbmRDb250ZW50cywgU3RyaW5nIHppcFBh
dGgpIHRocm93cyBJT0V4Y2VwdGlvbiB7DQojUCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5t
b2RlbA0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9BYnN0cmFj
dEphdmFNb2RlbFRlc3RzLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xp
cHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9tb2RlbC9BYnN0cmFjdEphdmFNb2RlbFRlc3RzLmphdmEsdg0KcmV0cmlldmlu
ZyByZXZpc2lvbiAxLjI0Mg0KZGlmZiAtdSAtcjEuMjQyIEFic3RyYWN0SmF2YU1vZGVsVGVzdHMu
amF2YQ0KLS0tIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9BYnN0cmFjdEph
dmFNb2RlbFRlc3RzLmphdmEJNiBPY3QgMjAxMCAxNzozMjozMCAtMDAwMAkxLjI0Mg0KKysrIHNy
Yy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9BYnN0cmFjdEphdmFNb2RlbFRlc3Rz
LmphdmEJMjAgRmViIDIwMTEgMjI6MjY6NDUgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEwIElCTSBDb3Jw
b3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29y
cG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dy
YW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxl
IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICog
d2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQN
CkBAIC00MDIsMTYgKzQwMiwyOCBAQA0KIAkJYWRkTGlicmFyeUVudHJ5KGphdmFQcm9qZWN0LCBu
ZXcgUGF0aChqYXJQYXRoKSwgdHJ1ZS8qZXhwb3J0ZWQqLyk7DQogCX0NCiAJcHJvdGVjdGVkIHZv
aWQgYWRkTGlicmFyeShTdHJpbmcgamFyTmFtZSwgU3RyaW5nIHNvdXJjZVppcE5hbWUsIFN0cmlu
Z1tdIHBhdGhBbmRDb250ZW50cywgU3RyaW5nIGNvbXBsaWFuY2UpIHRocm93cyBDb3JlRXhjZXB0
aW9uLCBJT0V4Y2VwdGlvbiB7DQotCQlhZGRMaWJyYXJ5KHRoaXMuY3VycmVudFByb2plY3QsIGph
ck5hbWUsIHNvdXJjZVppcE5hbWUsIHBhdGhBbmRDb250ZW50cywgbnVsbC8qbm8gbm9uLUphdmEg
cmVzb3VyY2VzKi8sIG51bGwsIG51bGwsIGNvbXBsaWFuY2UpOw0KKwkJYWRkTGlicmFyeSh0aGlz
LmN1cnJlbnRQcm9qZWN0LCBqYXJOYW1lLCBzb3VyY2VaaXBOYW1lLCBwYXRoQW5kQ29udGVudHMs
IG51bGwvKm5vIG5vbi1KYXZhIHJlc291cmNlcyovLCBudWxsLCBudWxsLCBjb21wbGlhbmNlLCBu
dWxsKTsNCisJfQ0KKwlwcm90ZWN0ZWQgdm9pZCBhZGRMaWJyYXJ5KElKYXZhUHJvamVjdCBqYXZh
UHJvamVjdCwgU3RyaW5nIGphck5hbWUsIFN0cmluZyBzb3VyY2VaaXBOYW1lLCBTdHJpbmdbXSBw
YXRoQW5kQ29udGVudHMsIFN0cmluZyBjb21wbGlhbmNlLCBNYXAgb3B0aW9ucykgdGhyb3dzIENv
cmVFeGNlcHRpb24sIElPRXhjZXB0aW9uIHsNCisJCWFkZExpYnJhcnkoamF2YVByb2plY3QsIGph
ck5hbWUsIHNvdXJjZVppcE5hbWUsIHBhdGhBbmRDb250ZW50cywgbnVsbC8qbm8gbm9uLUphdmEg
cmVzb3VyY2VzKi8sIG51bGwsIG51bGwsIGNvbXBsaWFuY2UsIG9wdGlvbnMpOw0KIAl9DQogCXBy
b3RlY3RlZCB2b2lkIGFkZExpYnJhcnkoSUphdmFQcm9qZWN0IGphdmFQcm9qZWN0LCBTdHJpbmcg
amFyTmFtZSwgU3RyaW5nIHNvdXJjZVppcE5hbWUsIFN0cmluZ1tdIHBhdGhBbmRDb250ZW50cywg
U3RyaW5nIGNvbXBsaWFuY2UpIHRocm93cyBDb3JlRXhjZXB0aW9uLCBJT0V4Y2VwdGlvbiB7DQot
CQlhZGRMaWJyYXJ5KGphdmFQcm9qZWN0LCBqYXJOYW1lLCBzb3VyY2VaaXBOYW1lLCBwYXRoQW5k
Q29udGVudHMsIG51bGwvKm5vIG5vbi1KYXZhIHJlc291cmNlcyovLCBudWxsLCBudWxsLCBjb21w
bGlhbmNlKTsNCisJCWFkZExpYnJhcnkoamF2YVByb2plY3QsIGphck5hbWUsIHNvdXJjZVppcE5h
bWUsIHBhdGhBbmRDb250ZW50cywgbnVsbC8qbm8gbm9uLUphdmEgcmVzb3VyY2VzKi8sIG51bGws
IG51bGwsIGNvbXBsaWFuY2UsIG51bGwpOw0KIAl9DQogCXByb3RlY3RlZCB2b2lkIGFkZExpYnJh
cnkoSUphdmFQcm9qZWN0IGphdmFQcm9qZWN0LCBTdHJpbmcgamFyTmFtZSwgU3RyaW5nIHNvdXJj
ZVppcE5hbWUsIFN0cmluZ1tdIHBhdGhBbmRDb250ZW50cywgU3RyaW5nW10gbm9uSmF2YVJlc291
cmNlcywgU3RyaW5nIGNvbXBsaWFuY2UpIHRocm93cyBDb3JlRXhjZXB0aW9uLCBJT0V4Y2VwdGlv
biB7DQotCQlhZGRMaWJyYXJ5KGphdmFQcm9qZWN0LCBqYXJOYW1lLCBzb3VyY2VaaXBOYW1lLCBw
YXRoQW5kQ29udGVudHMsIG5vbkphdmFSZXNvdXJjZXMsIG51bGwsIG51bGwsIGNvbXBsaWFuY2Up
Ow0KKwkJYWRkTGlicmFyeShqYXZhUHJvamVjdCwgamFyTmFtZSwgc291cmNlWmlwTmFtZSwgcGF0
aEFuZENvbnRlbnRzLCBub25KYXZhUmVzb3VyY2VzLCBudWxsLCBudWxsLCBjb21wbGlhbmNlLCBu
dWxsKTsNCiAJfQ0KLQlwcm90ZWN0ZWQgdm9pZCBhZGRMaWJyYXJ5KElKYXZhUHJvamVjdCBqYXZh
UHJvamVjdCwgU3RyaW5nIGphck5hbWUsIFN0cmluZyBzb3VyY2VaaXBOYW1lLCBTdHJpbmdbXSBw
YXRoQW5kQ29udGVudHMsIFN0cmluZ1tdIG5vbkphdmFSZXNvdXJjZXMsIFN0cmluZ1tdIGxpYnJh
cmllc0luY2x1c2lvblBhdHRlcm5zLCBTdHJpbmdbXSBsaWJyYXJpZXNFeGNsdXNpb25QYXR0ZXJu
cywgU3RyaW5nIGNvbXBsaWFuY2UpIHRocm93cyBDb3JlRXhjZXB0aW9uLCBJT0V4Y2VwdGlvbiB7
DQotCQlJUHJvamVjdCBwcm9qZWN0ID0gY3JlYXRlTGlicmFyeShqYXZhUHJvamVjdCwgamFyTmFt
ZSwgc291cmNlWmlwTmFtZSwgcGF0aEFuZENvbnRlbnRzLCBub25KYXZhUmVzb3VyY2VzLCBjb21w
bGlhbmNlKTsNCisJcHJvdGVjdGVkIHZvaWQgYWRkTGlicmFyeSgNCisJCQlJSmF2YVByb2plY3Qg
amF2YVByb2plY3QsDQorCQkJU3RyaW5nIGphck5hbWUsDQorCQkJU3RyaW5nIHNvdXJjZVppcE5h
bWUsDQorCQkJU3RyaW5nW10gcGF0aEFuZENvbnRlbnRzLA0KKwkJCVN0cmluZ1tdIG5vbkphdmFS
ZXNvdXJjZXMsDQorCQkJU3RyaW5nW10gbGlicmFyaWVzSW5jbHVzaW9uUGF0dGVybnMsDQorCQkJ
U3RyaW5nW10gbGlicmFyaWVzRXhjbHVzaW9uUGF0dGVybnMsDQorCQkJU3RyaW5nIGNvbXBsaWFu
Y2UsDQorCQkJTWFwIG9wdGlvbnMpIHRocm93cyBDb3JlRXhjZXB0aW9uLCBJT0V4Y2VwdGlvbiB7
DQorCQlJUHJvamVjdCBwcm9qZWN0ID0gY3JlYXRlTGlicmFyeShqYXZhUHJvamVjdCwgamFyTmFt
ZSwgc291cmNlWmlwTmFtZSwgcGF0aEFuZENvbnRlbnRzLCBub25KYXZhUmVzb3VyY2VzLCBjb21w
bGlhbmNlLCBvcHRpb25zKTsNCiAJCVN0cmluZyBwcm9qZWN0UGF0aCA9ICcvJyArIHByb2plY3Qu
Z2V0TmFtZSgpICsgJy8nOw0KIAkJYWRkTGlicmFyeUVudHJ5KA0KIAkJCWphdmFQcm9qZWN0LA0K
QEAgLTQyMywxMyArNDM1LDI5IEBADQogCQkJdHJ1ZQ0KIAkJKTsNCiAJfQ0KLQ0KLQlwcm90ZWN0
ZWQgSVByb2plY3QgY3JlYXRlTGlicmFyeShJSmF2YVByb2plY3QgamF2YVByb2plY3QsIFN0cmlu
ZyBqYXJOYW1lLCBTdHJpbmcgc291cmNlWmlwTmFtZSwgU3RyaW5nW10gcGF0aEFuZENvbnRlbnRz
LCBTdHJpbmdbXSBub25KYXZhUmVzb3VyY2VzLCBTdHJpbmcgY29tcGxpYW5jZSkgdGhyb3dzIElP
RXhjZXB0aW9uLCBDb3JlRXhjZXB0aW9uIHsNCisJcHJvdGVjdGVkIElQcm9qZWN0IGNyZWF0ZUxp
YnJhcnkoDQorCQkJSUphdmFQcm9qZWN0IGphdmFQcm9qZWN0LA0KKwkJCVN0cmluZyBqYXJOYW1l
LA0KKwkJCVN0cmluZyBzb3VyY2VaaXBOYW1lLA0KKwkJCVN0cmluZ1tdIHBhdGhBbmRDb250ZW50
cywNCisJCQlTdHJpbmdbXSBub25KYXZhUmVzb3VyY2VzLA0KKwkJCVN0cmluZyBjb21wbGlhbmNl
KSB0aHJvd3MgSU9FeGNlcHRpb24sIENvcmVFeGNlcHRpb24gew0KKwkJcmV0dXJuIGNyZWF0ZUxp
YnJhcnkoamF2YVByb2plY3QsIGphck5hbWUsIHNvdXJjZVppcE5hbWUsIHBhdGhBbmRDb250ZW50
cywgbm9uSmF2YVJlc291cmNlcywgY29tcGxpYW5jZSwgbnVsbCk7DQorCX0NCisNCisJcHJvdGVj
dGVkIElQcm9qZWN0IGNyZWF0ZUxpYnJhcnkoDQorCQkJSUphdmFQcm9qZWN0IGphdmFQcm9qZWN0
LA0KKwkJCVN0cmluZyBqYXJOYW1lLA0KKwkJCVN0cmluZyBzb3VyY2VaaXBOYW1lLA0KKwkJCVN0
cmluZ1tdIHBhdGhBbmRDb250ZW50cywNCisJCQlTdHJpbmdbXSBub25KYXZhUmVzb3VyY2VzLA0K
KwkJCVN0cmluZyBjb21wbGlhbmNlLA0KKwkJCU1hcCBvcHRpb25zKSB0aHJvd3MgSU9FeGNlcHRp
b24sIENvcmVFeGNlcHRpb24gew0KIAkJSVByb2plY3QgcHJvamVjdCA9IGphdmFQcm9qZWN0Lmdl
dFByb2plY3QoKTsNCiAJCVN0cmluZyBwcm9qZWN0TG9jYXRpb24gPSBwcm9qZWN0LmdldExvY2F0
aW9uKCkudG9PU1N0cmluZygpOw0KIAkJU3RyaW5nIGphclBhdGggPSBwcm9qZWN0TG9jYXRpb24g
KyBGaWxlLnNlcGFyYXRvciArIGphck5hbWU7DQogCQlTdHJpbmdbXSBjbGFzcGF0aCA9IGdldDE1
TGlicmFyeUlmTmVlZGVkKGNvbXBsaWFuY2UpOw0KLQkJb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMudXRpbC5VdGlsLmNyZWF0ZUphcihwYXRoQW5kQ29udGVudHMsIG5vbkphdmFSZXNvdXJjZXMs
IGphclBhdGgsIGNsYXNwYXRoLCBjb21wbGlhbmNlKTsNCisJCW9yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLnV0aWwuVXRpbC5jcmVhdGVKYXIocGF0aEFuZENvbnRlbnRzLCBub25KYXZhUmVzb3Vy
Y2VzLCBqYXJQYXRoLCBjbGFzcGF0aCwgY29tcGxpYW5jZSwgb3B0aW9ucyk7DQogCQlpZiAocGF0
aEFuZENvbnRlbnRzICE9IG51bGwgJiYgcGF0aEFuZENvbnRlbnRzLmxlbmd0aCAhPSAwKSB7DQog
CQkJU3RyaW5nIHNvdXJjZVppcFBhdGggPSBwcm9qZWN0TG9jYXRpb24gKyBGaWxlLnNlcGFyYXRv
ciArIHNvdXJjZVppcE5hbWU7DQogCQkJb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMudXRpbC5V
dGlsLmNyZWF0ZVNvdXJjZVppcChwYXRoQW5kQ29udGVudHMsIHNvdXJjZVppcFBhdGgpOw0KQEAg
LTExNTksNiArMTE4NywxMCBAQA0KIAkJb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMudXRpbC5V
dGlsLmNyZWF0ZUphcihqYXZhUGF0aHNBbmRDb250ZW50cywgbnVsbCxqYXJQYXRoLCBjbGFzc3Bh
dGgsIGNvbXBsaWFuY2UpOw0KIAl9DQogDQorCXByb3RlY3RlZCB2b2lkIGNyZWF0ZUphcihTdHJp
bmdbXSBqYXZhUGF0aHNBbmRDb250ZW50cywgU3RyaW5nIGphclBhdGgsIFN0cmluZ1tdIGNsYXNz
cGF0aCwgU3RyaW5nIGNvbXBsaWFuY2UsIE1hcCBvcHRpb25zKSB0aHJvd3MgSU9FeGNlcHRpb24g
ew0KKwkJb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMudXRpbC5VdGlsLmNyZWF0ZUphcihqYXZh
UGF0aHNBbmRDb250ZW50cywgbnVsbCwgamFyUGF0aCwgY2xhc3NwYXRoLCBjb21wbGlhbmNlLCBv
cHRpb25zKTsNCisJfQ0KKwkNCiAJLyoNCiAJfQ0KIAkgKiBDcmVhdGVzIGEgSmF2YSBwcm9qZWN0
IHdoZXJlIHByaj1zcmM9YmluIGFuZCB3aXRoIEpDTF9MSUIgb24gaXRzIGNsYXNzcGF0aC4NCklu
ZGV4OiBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvUmVjb25jaWxlclRlc3Rz
LmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2Rl
bC9SZWNvbmNpbGVyVGVzdHMuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTY0DQpkaWZm
IC11IC1yMS4xNjQgUmVjb25jaWxlclRlc3RzLmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvbW9kZWwvUmVjb25jaWxlclRlc3RzLmphdmEJMyBEZWMgMjAxMCAwODo0NDoz
MSAtMDAwMAkxLjE2NA0KKysrIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9S
ZWNvbmNpbGVyVGVzdHMuamF2YQkyMCBGZWIgMjAxMSAyMjoyNjo0NiAtMDAwMA0KQEAgLTEsNSAr
MSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAs
IDIwMTAgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2
ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUg
bWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNl
bnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlz
IGF2YWlsYWJsZSBhdA0KQEAgLTM1Niw3ICszNTYsOCBAQA0KIAkJCQkiKiovKiINCiAJCQl9LA0K
IAkJCW51bGwsIA0KLQkJCSIxLjQiDQorCQkJIjEuNCIsDQorCQkJbnVsbA0KIAkJKTsNCiAJCWNy
ZWF0ZUphdmFQcm9qZWN0KCJQMiIsIG5ldyBTdHJpbmdbXSB7InNyYyJ9LCBuZXcgU3RyaW5nW10g
eyJKQ0xfTElCIn0sIG5ldyBTdHJpbmdbXSB7Ii9QMSJ9LCAiYmluIik7DQogCQlzZXRVcFdvcmtp
bmdDb3B5KCIvUDIvc3JjL1kuamF2YSIsICJwdWJsaWMgY2xhc3MgWSBleHRlbmRzIHAuWCB7fSIp
Ow0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9UeXBlUmVzb2x2
ZVRlc3RzLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9tb2RlbC9UeXBlUmVzb2x2ZVRlc3RzLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjE0
DQpkaWZmIC11IC1yMS4xNCBUeXBlUmVzb2x2ZVRlc3RzLmphdmENCi0tLSBzcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvVHlwZVJlc29sdmVUZXN0cy5qYXZhCTI3IEp1biAyMDA4
IDE2OjAyOjQwIC0wMDAwCTEuMTQNCisrKyBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
bW9kZWwvVHlwZVJlc29sdmVUZXN0cy5qYXZhCTIwIEZlYiAyMDExIDIyOjI2OjQ2IC0wMDAwDQpA
QCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAo
YykgMjAwMCwgMjAwOCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCisgKiBDb3B5cmlnaHQg
KGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQogICogQWxsIHJpZ2h0
cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0K
ICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVi
bGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9u
LCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtMTAsMTIgKzEwLDMwIEBADQogICoqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKiovDQogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbDsN
CiANCi1pbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLkNvcmVFeGNlcHRpb247DQotaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLio7DQotaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLnV0aWwuVXRpbDsNCitpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjsNCitpbXBvcnQg
amF2YS51dGlsLkhhc2hNYXA7DQoraW1wb3J0IGphdmEudXRpbC5NYXA7DQogDQogaW1wb3J0IGp1
bml0LmZyYW1ld29yay5UZXN0Ow0KIA0KK2ltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUu
Q29yZUV4Y2VwdGlvbjsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuRmxhZ3M7DQoraW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklBbm5vdGF0aW9uOw0KK2ltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuY29yZS5JQ29kZUFzc2lzdDsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUNv
bXBpbGF0aW9uVW5pdDsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUphdmFFbGVtZW50
Ow0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JSmF2YVByb2plY3Q7DQoraW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5jb3JlLklMb2NhbFZhcmlhYmxlOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuY29yZS5JTWVtYmVyVmFsdWVQYWlyOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5J
TWV0aG9kOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JUGFja2FnZUZyYWdtZW50Um9v
dDsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSVNvdXJjZVJhbmdlOw0KK2ltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuY29yZS5JVHlwZTsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUu
SmF2YUNvcmU7DQoraW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLkphdmFNb2RlbEV4Y2VwdGlv
bjsNCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMudXRpbC5VdGlsOw0KK2ltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5Mb2NhbFZhcmlhYmxlOw0KKw0KIHB1Ymxp
YyBjbGFzcyBUeXBlUmVzb2x2ZVRlc3RzIGV4dGVuZHMgTW9kaWZ5aW5nUmVzb3VyY2VUZXN0cyB7
DQogCUlDb21waWxhdGlvblVuaXQgY3U7DQogcHVibGljIFR5cGVSZXNvbHZlVGVzdHMoU3RyaW5n
IG5hbWUpIHsNCkBAIC05NSw3ICsxMTMsNyBAQA0KIH0NCiAJc3RhdGljIHsNCiAvLwkJVEVTVFNf
TlVNQkVSUyA9IG5ldyBpbnRbXSB7IDE4MiwgMTgzIH07DQotLy8JCVRFU1RTX05BTUVTID0gbmV3
IFN0cmluZ1tdIHsidGVzdDAxNzcifTsNCisvLwkJVEVTVFNfTkFNRVMgPSBuZXcgU3RyaW5nW10g
eyAidGVzdFBhcmFtQW5ub3RhdGlvbnM0IiB9Ow0KIAl9DQogCXB1YmxpYyBzdGF0aWMgVGVzdCBz
dWl0ZSgpIHsNCiAJCXJldHVybiBidWlsZE1vZGVsVGVzdFN1aXRlKFR5cGVSZXNvbHZlVGVzdHMu
Y2xhc3MpOw0KQEAgLTI5OSw0ICszMTcsMzg3IEBADQogCQkicDQuQS5Jbm5lciIsDQogCQl0eXBl
cyk7DQogfQ0KKy8qKg0KKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3No
b3dfYnVnLmNnaT9pZD0zMzQ3ODMiDQorICovDQorcHVibGljIHZvaWQgdGVzdFBhcmFtQW5ub3Rh
dGlvbnMoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7DQorCXRyeSB7DQorCQljcmVhdGVKYXZhUHJv
amVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7InNyYyJ9LCBuZXcgU3RyaW5nW10geyJKQ0wxNV9MSUIi
fSwgImJpbiIsICIxLjUiKTsNCisJCVN0cmluZyBzb3VyY2UgPSAicGFja2FnZSBwO1xuIiArDQor
CQkJCSJwdWJsaWMgY2xhc3MgWDxUPiB7XG4iICsNCisJCQkJIglYPFN0cmluZz4gZmllbGQ7XG4i
ICsNCisJCQkJIglASW5qZWN0XG4iICsNCisJCQkJIglwdWJsaWMgdm9pZCBUZXN0KEBEZWZhdWx0
IFN0cmluZyBwcm9jZXNzb3IpIHt9XG4iICsNCisJCQkJIn0iICsNCisJCQkJIkBpbnRlcmZhY2Ug
SW5qZWN0e1xuIiArDQorCQkJCSJ9IiArDQorCQkJCSJAaW50ZXJmYWNlIERlZmF1bHR7XG4iICsN
CisJCQkJIn0iOw0KKwkJY3JlYXRlRm9sZGVyKCIvUC9zcmMvcCIpOw0KKwkJY3JlYXRlRmlsZSgN
CisJCQkiL1Avc3JjL3AvWC5qYXZhIiwNCisJCQlzb3VyY2UNCisJCSk7DQorCQl3YWl0Rm9yQXV0
b0J1aWxkKCk7DQorCQkNCisJCUlDb21waWxhdGlvblVuaXQgdW5pdCA9IGdldENvbXBpbGF0aW9u
VW5pdCgiL1Avc3JjL3AvWC5qYXZhIik7IA0KKwkJSUphdmFFbGVtZW50W10gdmFyaWFibGUgPSAo
KElDb2RlQXNzaXN0KSB1bml0KS5jb2RlU2VsZWN0KHNvdXJjZS5pbmRleE9mKCJwcm9jZXNzb3Ii
KSwgInByb2Nlc3NvciIubGVuZ3RoKCkpOw0KKw0KKwkJYXNzZXJ0RXF1YWxzKDEsIHZhcmlhYmxl
Lmxlbmd0aCk7DQorCQlTdHJpbmcgYW5ub3RhdGlvblN0cmluZyA9ICJARGVmYXVsdCBbaW4gcHJv
Y2Vzc29yIFtpbiBUZXN0KFN0cmluZykgW2luIFggW2luIFguamF2YSBbaW4gcCBbaW4gc3JjIFtp
biBQXV1dXV1dXSI7DQorCQlhc3NlcnRFcXVhbHMoYW5ub3RhdGlvblN0cmluZywgKChMb2NhbFZh
cmlhYmxlKXZhcmlhYmxlWzBdKS5nZXRBbm5vdGF0aW9ucygpWzBdLnRvU3RyaW5nKCkpOw0KKwkJ
SVR5cGUgdHlwZSA9IHVuaXQuZ2V0VHlwZSgiWCIpOw0KKwkJDQorCQlJTWV0aG9kIG1ldGhvZCA9
IHR5cGUuZ2V0TWV0aG9kcygpWzBdOw0KKwkJYXNzZXJ0RXF1YWxzKGFubm90YXRpb25TdHJpbmcs
IG1ldGhvZC5nZXRQYXJhbWV0ZXJzKClbMF0uZ2V0QW5ub3RhdGlvbnMoKVswXS50b1N0cmluZygp
KTsNCisJfSBmaW5hbGx5IHsNCisJCWRlbGV0ZVByb2plY3QoIlAiKTsNCisJfQ0KK30NCisvKioN
CisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9
MzM0NzgzIg0KKyAqLw0KK3B1YmxpYyB2b2lkIHRlc3RQYXJhbUFubm90YXRpb25zMigpIHRocm93
cyBDb3JlRXhjZXB0aW9uLCBJT0V4Y2VwdGlvbiB7DQorCXRyeSB7DQorCQlJSmF2YVByb2plY3Qg
cHJvamVjdCA9IGNyZWF0ZUphdmFQcm9qZWN0KCJQIiwgbmV3IFN0cmluZ1tdIHsic3JjIn0sIG5l
dyBTdHJpbmdbXSB7IkpDTDE1X0xJQiJ9LCAiYmluIiwgIjEuNSIpOw0KKwkJU3RyaW5nW10gcGF0
aEFuZENvbnRlbnRzID0gbmV3IFN0cmluZ1tdeyJwL1guamF2YSIsDQorCQkJCSJwYWNrYWdlIHA7
XG4iICsNCisJCQkJInB1YmxpYyBjbGFzcyBYPFQ+IHtcbiIgKw0KKwkJCQkiCVg8U3RyaW5nPiBm
aWVsZDtcbiIgKw0KKwkJCQkiCUBJbmplY3RcbiIgKw0KKwkJCQkiCXB1YmxpYyB2b2lkIFRlc3Qo
QERlZmF1bHQgU3RyaW5nIHByb2Nlc3Nvcikge31cbiIgKw0KKwkJCQkifSIgKw0KKwkJCQkiQGlu
dGVyZmFjZSBJbmplY3R7XG4iICsNCisJCQkJIn0iICsNCisJCQkJIkBpbnRlcmZhY2UgRGVmYXVs
dHtcbiIgKw0KKwkJCQkifSJ9Ow0KKwkJYWRkTGlicmFyeShwcm9qZWN0LCAibGliMzM0NzgzLmph
ciIsICJsaWJzcmMuemlwIiwgcGF0aEFuZENvbnRlbnRzLCBKYXZhQ29yZS5WRVJTSU9OXzFfNSk7
DQorCQkNCisJCXdhaXRGb3JBdXRvQnVpbGQoKTsNCisJCUlQYWNrYWdlRnJhZ21lbnRSb290IHJv
b3QgPSBwcm9qZWN0LmdldFBhY2thZ2VGcmFnbWVudFJvb3QoZ2V0RmlsZSgiL1AvbGliMzM0Nzgz
LmphciIpKTsNCisJCUlUeXBlIHR5cGUgPSByb290LmdldFBhY2thZ2VGcmFnbWVudCgicCIpLmdl
dENsYXNzRmlsZSgiWC5jbGFzcyIpLmdldFR5cGUoKTsNCisJCVN0cmluZyBhbm5vdGF0aW9uU3Ry
aW5nID0gIkBwLkRlZmF1bHQgW2luIHByb2Nlc3NvciBbaW4gVGVzdChqYXZhLmxhbmcuU3RyaW5n
KSBbaW4gWCBbaW4gWC5jbGFzcyBbaW4gcCBbaW4gbGliMzM0NzgzLmphciBbaW4gUF1dXV1dXV0i
Ow0KKwkJDQorCQlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kcygpWzFdOw0KKwkJYXNz
ZXJ0RXF1YWxzKGFubm90YXRpb25TdHJpbmcsIG1ldGhvZC5nZXRQYXJhbWV0ZXJzKClbMF0uZ2V0
QW5ub3RhdGlvbnMoKVswXS50b1N0cmluZygpKTsNCisJfSBmaW5hbGx5IHsNCisJCWRlbGV0ZVBy
b2plY3QoIlAiKTsNCisJfQ0KK30NCisvKioNCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzM0NzgzIg0KKyAqLw0KK3B1YmxpYyB2b2lkIHRl
c3RQYXJhbUFubm90YXRpb25zMygpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsNCisJdHJ5IHsNCisJ
CWNyZWF0ZUphdmFQcm9qZWN0KCJQIiwgbmV3IFN0cmluZ1tdIHsic3JjIn0sIG5ldyBTdHJpbmdb
XSB7IkpDTDE1X0xJQiJ9LCAiYmluIiwgIjEuNSIpOw0KKwkJU3RyaW5nIHNvdXJjZSA9ICJwYWNr
YWdlIHA7XG4iICsNCisJCQkJInB1YmxpYyBjbGFzcyBYPFQ+IHtcbiIgKw0KKwkJCQkiCVg8U3Ry
aW5nPiBmaWVsZDtcbiIgKw0KKwkJCQkiCUBJbmplY3RcbiIgKw0KKwkJCQkiCXB1YmxpYyB2b2lk
IFRlc3QoaW50IGksIEBEZWZhdWx0IEBNYXJrZXIoaWQ9MSkgU3RyaW5nIHByb2Nlc3NvciwgaW50
IGspIHt9XG4iICsNCisJCQkJIn1cbiIgKw0KKwkJCQkiQGludGVyZmFjZSBJbmplY3R7XG4iICsN
CisJCQkJIn1cbiIgKw0KKwkJCQkiQGludGVyZmFjZSBNYXJrZXIge1xuIiArDQorCQkJCSIJaW50
IGlkKCkgZGVmYXVsdCAwO1xuIiArDQorCQkJCSJ9XG4iICsNCisJCQkJIkBpbnRlcmZhY2UgRGVm
YXVsdHtcbiIgKw0KKwkJCQkifSI7DQorCQljcmVhdGVGb2xkZXIoIi9QL3NyYy9wIik7DQorCQlj
cmVhdGVGaWxlKA0KKwkJCSIvUC9zcmMvcC9YLmphdmEiLA0KKwkJCXNvdXJjZQ0KKwkJKTsNCisJ
CXdhaXRGb3JBdXRvQnVpbGQoKTsNCisJCQ0KKwkJSUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gZ2V0
Q29tcGlsYXRpb25Vbml0KCIvUC9zcmMvcC9YLmphdmEiKTsgDQorCQlJSmF2YUVsZW1lbnRbXSB2
YXJpYWJsZSA9ICgoSUNvZGVBc3Npc3QpIHVuaXQpLmNvZGVTZWxlY3Qoc291cmNlLmluZGV4T2Yo
InByb2Nlc3NvciIpLCAicHJvY2Vzc29yIi5sZW5ndGgoKSk7DQorDQorCQlhc3NlcnRFcXVhbHMo
MSwgdmFyaWFibGUubGVuZ3RoKTsNCisJCVN0cmluZyBhbm5vdGF0aW9uU3RyaW5nMSA9ICJARGVm
YXVsdCBbaW4gcHJvY2Vzc29yIFtpbiBUZXN0KGludCwgU3RyaW5nLCBpbnQpIFtpbiBYIFtpbiBY
LmphdmEgW2luIHAgW2luIHNyYyBbaW4gUF1dXV1dXV0iOw0KKwkJU3RyaW5nIGFubm90YXRpb25T
dHJpbmcyID0gIkBNYXJrZXIgW2luIHByb2Nlc3NvciBbaW4gVGVzdChpbnQsIFN0cmluZywgaW50
KSBbaW4gWCBbaW4gWC5qYXZhIFtpbiBwIFtpbiBzcmMgW2luIFBdXV1dXV1dIjsNCisJCWFzc2Vy
dEVxdWFscyhhbm5vdGF0aW9uU3RyaW5nMSwgKChMb2NhbFZhcmlhYmxlKXZhcmlhYmxlWzBdKS5n
ZXRBbm5vdGF0aW9ucygpWzBdLnRvU3RyaW5nKCkpOw0KKwkJSVR5cGUgdHlwZSA9IHVuaXQuZ2V0
VHlwZSgiWCIpOw0KKwkJDQorCQlJTWV0aG9kIG1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9kcygpWzBd
Ow0KKwkJSUFubm90YXRpb25bXSBwYXJhbWV0ZXJBbm5vdGF0aW9ucyA9IG1ldGhvZC5nZXRQYXJh
bWV0ZXJzKClbMV0uZ2V0QW5ub3RhdGlvbnMoKTsNCisJCWFzc2VydEVxdWFscygiV3JvbmcgbGVu
Z3RoIiwgMiwgcGFyYW1ldGVyQW5ub3RhdGlvbnMubGVuZ3RoKTsNCisJCWFzc2VydEVxdWFscyhh
bm5vdGF0aW9uU3RyaW5nMSwgcGFyYW1ldGVyQW5ub3RhdGlvbnNbMF0udG9TdHJpbmcoKSk7DQor
CQlJQW5ub3RhdGlvbiBpQW5ub3RhdGlvbiA9IHBhcmFtZXRlckFubm90YXRpb25zWzFdOw0KKwkJ
YXNzZXJ0RXF1YWxzKGFubm90YXRpb25TdHJpbmcyLCBpQW5ub3RhdGlvbi50b1N0cmluZygpKTsN
CisJCUlNZW1iZXJWYWx1ZVBhaXJbXSBtZW1iZXJWYWx1ZVBhaXJzID0gaUFubm90YXRpb24uZ2V0
TWVtYmVyVmFsdWVQYWlycygpOw0KKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgcGFp
cnMiLCAxLCBtZW1iZXJWYWx1ZVBhaXJzLmxlbmd0aCk7DQorCQlTdHJpbmdCdWZmZXIgb3V0cHV0
ID0gbmV3IFN0cmluZ0J1ZmZlcigpOw0KKwkJb3V0cHV0LmFwcGVuZChtZW1iZXJWYWx1ZVBhaXJz
WzBdLmdldE1lbWJlck5hbWUoKSk7DQorCQlvdXRwdXQuYXBwZW5kKCcgJyk7DQorCQlvdXRwdXQu
YXBwZW5kKG1lbWJlclZhbHVlUGFpcnNbMF0uZ2V0VmFsdWUoKSk7DQorCQlhc3NlcnRFcXVhbHMo
Ildyb25nIHZhbHVlIiwgImlkIDEiLCBTdHJpbmcudmFsdWVPZihvdXRwdXQpKTsNCisJCWFzc2Vy
dEVxdWFscygiV3JvbmcgbGVuZ3RoIiwgMCwgbWV0aG9kLmdldFBhcmFtZXRlcnMoKVswXS5nZXRB
bm5vdGF0aW9ucygpLmxlbmd0aCk7DQorCQlhc3NlcnRFcXVhbHMoIldyb25nIGxlbmd0aCIsIDAs
IG1ldGhvZC5nZXRQYXJhbWV0ZXJzKClbMl0uZ2V0QW5ub3RhdGlvbnMoKS5sZW5ndGgpOw0KKwl9
IGZpbmFsbHkgew0KKwkJZGVsZXRlUHJvamVjdCgiUCIpOw0KKwl9DQorfQ0KKy8qKg0KKyAqIEBz
ZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMzQ3ODMi
DQorICovDQorcHVibGljIHZvaWQgdGVzdFBhcmFtQW5ub3RhdGlvbnM0KCkgdGhyb3dzIENvcmVF
eGNlcHRpb24sIElPRXhjZXB0aW9uIHsNCisJdHJ5IHsNCisJCUlKYXZhUHJvamVjdCBwcm9qZWN0
ID0gY3JlYXRlSmF2YVByb2plY3QoIlAiLCBuZXcgU3RyaW5nW10geyJzcmMifSwgbmV3IFN0cmlu
Z1tdIHsiSkNMMTVfTElCIn0sICJiaW4iLCAiMS41Iik7DQorCQlTdHJpbmcgc291cmNlWCA9DQor
CQkJCSJwYWNrYWdlIHA7XG4iICsNCisJCQkJInB1YmxpYyBjbGFzcyBYPFQ+IHtcbiIgKw0KKwkJ
CQkiCVg8U3RyaW5nPiBmaWVsZDtcbiIgKw0KKwkJCQkiCUBJbmplY3QgQE1hcmtlcihpZD0zKVxu
IiArDQorCQkJCSIJcHVibGljIHZvaWQgVGVzdChmaW5hbCBpbnQgaSwgQERlZmF1bHQgZmluYWwg
QE1hcmtlcihpZD0xKSBTdHJpbmcgcHJvY2Vzc29yLCBpbnQgaykge31cbiIgKw0KKwkJCQkifSI7
DQorCQlTdHJpbmdbXSBwYXRoQW5kQ29udGVudHMgPSBuZXcgU3RyaW5nW117InAvWC5qYXZhIiwN
CisJCQkJc291cmNlWCwNCisJCQkJInAvSW5qZWN0LmphdmEiLA0KKwkJCQkicGFja2FnZSBwO1xu
IisNCisJCQkJInB1YmxpYyBAaW50ZXJmYWNlIEluamVjdHtcbiIgKw0KKwkJCQkifSIsDQorCQkJ
CSJwL01hcmtlci5qYXZhIiwNCisJCQkJInBhY2thZ2UgcDtcbiIgKw0KKwkJCQkicHVibGljIEBp
bnRlcmZhY2UgTWFya2VyIHtcbiIgKw0KKwkJCQkiCWludCBpZCgpIGRlZmF1bHQgMDtcbiIgKw0K
KwkJCQkifSIsDQorCQkJCSJwL0RlZmF1bHQuamF2YSIsDQorCQkJCSJwYWNrYWdlIHA7XG4iICsN
CisJCQkJInB1YmxpYyBAaW50ZXJmYWNlIERlZmF1bHR7XG4iICsNCisJCQkJIn0ifTsNCisJCWFk
ZExpYnJhcnkocHJvamVjdCwgImxpYjMzNDc4M18yLmphciIsICJsaWIzMzQ3ODNfMnNyYy56aXAi
LCBwYXRoQW5kQ29udGVudHMsIEphdmFDb3JlLlZFUlNJT05fMV81KTsNCisJCQ0KKwkJd2FpdEZv
ckF1dG9CdWlsZCgpOw0KKwkJSVBhY2thZ2VGcmFnbWVudFJvb3Qgcm9vdCA9IHByb2plY3QuZ2V0
UGFja2FnZUZyYWdtZW50Um9vdChnZXRGaWxlKCIvUC9saWIzMzQ3ODNfMi5qYXIiKSk7DQorCQlJ
VHlwZSB0eXBlID0gcm9vdC5nZXRQYWNrYWdlRnJhZ21lbnQoInAiKS5nZXRDbGFzc0ZpbGUoIlgu
Y2xhc3MiKS5nZXRUeXBlKCk7DQorCQlTdHJpbmcgYW5ub3RhdGlvblN0cmluZzEgPSAiQHAuRGVm
YXVsdCBbaW4gcHJvY2Vzc29yIFtpbiBUZXN0KGludCwgamF2YS5sYW5nLlN0cmluZywgaW50KSBb
aW4gWCBbaW4gWC5jbGFzcyBbaW4gcCBbaW4gbGliMzM0NzgzXzIuamFyIFtpbiBQXV1dXV1dXSI7
DQorCQlTdHJpbmcgYW5ub3RhdGlvblN0cmluZzIgPSAiQHAuTWFya2VyIFtpbiBwcm9jZXNzb3Ig
W2luIFRlc3QoaW50LCBqYXZhLmxhbmcuU3RyaW5nLCBpbnQpIFtpbiBYIFtpbiBYLmNsYXNzIFtp
biBwIFtpbiBsaWIzMzQ3ODNfMi5qYXIgW2luIFBdXV1dXV1dIjsNCisJCUlNZXRob2QgbWV0aG9k
ID0gdHlwZS5nZXRNZXRob2RzKClbMV07DQorCQlJQW5ub3RhdGlvbltdIGFubm90YXRpb25zID0g
bWV0aG9kLmdldEFubm90YXRpb25zKCk7DQorCQlhc3NlcnRFcXVhbHMoIldyb25nIGxlbmd0aCIs
IDIsIGFubm90YXRpb25zLmxlbmd0aCk7DQorCQlhc3NlcnRFcXVhbHMoIkBwLkluamVjdCBbaW4g
VGVzdChpbnQsIGphdmEubGFuZy5TdHJpbmcsIGludCkgW2luIFggW2luIFguY2xhc3MgW2luIHAg
W2luIGxpYjMzNDc4M18yLmphciBbaW4gUF1dXV1dXSIsIGFubm90YXRpb25zWzBdLnRvU3RyaW5n
KCkpOw0KKwkJSUFubm90YXRpb24gYW5ub3RhdGlvbiA9IGFubm90YXRpb25zWzFdOw0KKwkJYXNz
ZXJ0RXF1YWxzKCJAcC5NYXJrZXIgW2luIFRlc3QoaW50LCBqYXZhLmxhbmcuU3RyaW5nLCBpbnQp
IFtpbiBYIFtpbiBYLmNsYXNzIFtpbiBwIFtpbiBsaWIzMzQ3ODNfMi5qYXIgW2luIFBdXV1dXV0i
LCBhbm5vdGF0aW9uLnRvU3RyaW5nKCkpOw0KKwkJSU1lbWJlclZhbHVlUGFpcltdIG1lbWJlclZh
bHVlUGFpcnMgPSBhbm5vdGF0aW9uLmdldE1lbWJlclZhbHVlUGFpcnMoKTsNCisJCWFzc2VydEVx
dWFscygiV3JvbmcgbnVtYmVyIG9mIHBhaXJzIiwgMSwgbWVtYmVyVmFsdWVQYWlycy5sZW5ndGgp
Ow0KKwkJU3RyaW5nQnVmZmVyIG91dHB1dCA9IG5ldyBTdHJpbmdCdWZmZXIoKTsNCisJCW91dHB1
dC5hcHBlbmQobWVtYmVyVmFsdWVQYWlyc1swXS5nZXRNZW1iZXJOYW1lKCkpOw0KKwkJb3V0cHV0
LmFwcGVuZCgnICcpOw0KKwkJb3V0cHV0LmFwcGVuZChtZW1iZXJWYWx1ZVBhaXJzWzBdLmdldFZh
bHVlKCkpOw0KKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB2YWx1ZSIsICJpZCAzIiwgU3RyaW5nLnZh
bHVlT2Yob3V0cHV0KSk7DQorCQlJTG9jYWxWYXJpYWJsZSBsb2NhbFZhcmlhYmxlID0gbWV0aG9k
LmdldFBhcmFtZXRlcnMoKVsxXTsNCisJCUlTb3VyY2VSYW5nZSBzb3VyY2VSYW5nZSA9IGxvY2Fs
VmFyaWFibGUuZ2V0U291cmNlUmFuZ2UoKTsNCisJCVN0cmluZyBsb2NhbFNvdXJjZSA9IHNvdXJj
ZVguc3Vic3RyaW5nKA0KKwkJCQlzb3VyY2VSYW5nZS5nZXRPZmZzZXQoKSwNCisJCQkJc291cmNl
UmFuZ2UuZ2V0T2Zmc2V0KCkgKyBzb3VyY2VSYW5nZS5nZXRMZW5ndGgoKSk7DQorCQlhc3NlcnRF
cXVhbHMoIldyb25nIHNvdXJjZSIsICJARGVmYXVsdCBmaW5hbCBATWFya2VyKGlkPTEpIFN0cmlu
ZyBwcm9jZXNzb3IiLCBsb2NhbFNvdXJjZSk7DQorCQlhc3NlcnRUcnVlKCJXcm9uZyBtb2RpZmll
cnMiLCBGbGFncy5pc0ZpbmFsKGxvY2FsVmFyaWFibGUuZ2V0RmxhZ3MoKSkpOw0KKwkJSUFubm90
YXRpb25bXSBwYXJhbWV0ZXJBbm5vdGF0aW9ucyA9IGxvY2FsVmFyaWFibGUuZ2V0QW5ub3RhdGlv
bnMoKTsNCisJCWFzc2VydEVxdWFscygiV3JvbmcgbGVuZ3RoIiwgMiwgcGFyYW1ldGVyQW5ub3Rh
dGlvbnMubGVuZ3RoKTsNCisJCWFzc2VydEVxdWFscyhhbm5vdGF0aW9uU3RyaW5nMSwgcGFyYW1l
dGVyQW5ub3RhdGlvbnNbMF0udG9TdHJpbmcoKSk7DQorCQlhbm5vdGF0aW9uID0gcGFyYW1ldGVy
QW5ub3RhdGlvbnNbMV07DQorCQlhc3NlcnRFcXVhbHMoYW5ub3RhdGlvblN0cmluZzIsIGFubm90
YXRpb24udG9TdHJpbmcoKSk7DQorCQltZW1iZXJWYWx1ZVBhaXJzID0gYW5ub3RhdGlvbi5nZXRN
ZW1iZXJWYWx1ZVBhaXJzKCk7DQorCQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBwYWly
cyIsIDEsIG1lbWJlclZhbHVlUGFpcnMubGVuZ3RoKTsNCisJCW91dHB1dCA9IG5ldyBTdHJpbmdC
dWZmZXIoKTsNCisJCW91dHB1dC5hcHBlbmQobWVtYmVyVmFsdWVQYWlyc1swXS5nZXRNZW1iZXJO
YW1lKCkpOw0KKwkJb3V0cHV0LmFwcGVuZCgnICcpOw0KKwkJb3V0cHV0LmFwcGVuZChtZW1iZXJW
YWx1ZVBhaXJzWzBdLmdldFZhbHVlKCkpOw0KKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB2YWx1ZSIs
ICJpZCAxIiwgU3RyaW5nLnZhbHVlT2Yob3V0cHV0KSk7DQorCQlsb2NhbFZhcmlhYmxlID0gbWV0
aG9kLmdldFBhcmFtZXRlcnMoKVswXTsNCisJCWFzc2VydEVxdWFscygiV3JvbmcgbGVuZ3RoIiwg
MCwgbG9jYWxWYXJpYWJsZS5nZXRBbm5vdGF0aW9ucygpLmxlbmd0aCk7DQorCQlhc3NlcnRUcnVl
KCJXcm9uZyBtb2RpZmllcnMiLCBGbGFncy5pc0ZpbmFsKGxvY2FsVmFyaWFibGUuZ2V0RmxhZ3Mo
KSkpOw0KKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBsZW5ndGgiLCAwLCBtZXRob2QuZ2V0UGFyYW1l
dGVycygpWzJdLmdldEFubm90YXRpb25zKCkubGVuZ3RoKTsNCisJfSBmaW5hbGx5IHsNCisJCWRl
bGV0ZVByb2plY3QoIlAiKTsNCisJfQ0KK30NCisvKioNCisgKiBAc2VlICJodHRwczovL2J1Z3Mu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzM0NzgzIg0KKyAqLw0KK3B1YmxpYyB2
b2lkIHRlc3RQYXJhbUFubm90YXRpb25zNSgpIHRocm93cyBDb3JlRXhjZXB0aW9uLCBJT0V4Y2Vw
dGlvbiB7DQorCXRyeSB7DQorCQlJSmF2YVByb2plY3QgcHJvamVjdCA9IGNyZWF0ZUphdmFQcm9q
ZWN0KCJQIiwgbmV3IFN0cmluZ1tdIHsic3JjIn0sIG5ldyBTdHJpbmdbXSB7IkpDTDE1X0xJQiJ9
LCAiYmluIiwgIjEuNSIpOw0KKwkJU3RyaW5nW10gcGF0aEFuZENvbnRlbnRzID0gbmV3IFN0cmlu
Z1tdeyJwL1guamF2YSIsDQorCQkJCSJwYWNrYWdlIHA7XG4iICsNCisJCQkJInB1YmxpYyBjbGFz
cyBYPFQ+IHtcbiIgKw0KKwkJCQkiCVg8U3RyaW5nPiBmaWVsZDtcbiIgKw0KKwkJCQkiCUBJbmpl
Y3QgQE1hcmtlcihpZD0zKVxuIiArDQorCQkJCSIJcHVibGljIHZvaWQgVGVzdChpbnQgaSwgQERl
ZmF1bHQgQE1hcmtlcihpZD0xKSBTdHJpbmcgcHJvY2Vzc29yLCBpbnQgaykge31cbiIgKw0KKwkJ
CQkifSIsDQorCQkJCSJwL0luamVjdC5qYXZhIiwNCisJCQkJInBhY2thZ2UgcDtcbiIrDQorCQkJ
CSJwdWJsaWMgQGludGVyZmFjZSBJbmplY3R7XG4iICsNCisJCQkJIn0iLA0KKwkJCQkicC9NYXJr
ZXIuamF2YSIsDQorCQkJCSJwYWNrYWdlIHA7XG4iICsNCisJCQkJInB1YmxpYyBAaW50ZXJmYWNl
IE1hcmtlciB7XG4iICsNCisJCQkJIglpbnQgaWQoKSBkZWZhdWx0IDA7XG4iICsNCisJCQkJIn0i
LA0KKwkJCQkicC9EZWZhdWx0LmphdmEiLA0KKwkJCQkicGFja2FnZSBwO1xuIiArDQorCQkJCSJw
dWJsaWMgQGludGVyZmFjZSBEZWZhdWx0e1xuIiArDQorCQkJCSJ9In07DQorCQlNYXAgb3B0aW9u
cyA9IG5ldyBIYXNoTWFwKCk7DQorCQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9MT0NB
TF9WQVJJQUJMRV9BVFRSLCBKYXZhQ29yZS5ET19OT1RfR0VORVJBVEUpOw0KKwkJYWRkTGlicmFy
eShwcm9qZWN0LCAibGliMzM0NzgzXzMuamFyIiwgImxpYjMzNDc4M18zc3JjLnppcCIsIHBhdGhB
bmRDb250ZW50cywgSmF2YUNvcmUuVkVSU0lPTl8xXzUsIG9wdGlvbnMpOw0KKwkJDQorCQl3YWl0
Rm9yQXV0b0J1aWxkKCk7DQorCQlJUGFja2FnZUZyYWdtZW50Um9vdCByb290ID0gcHJvamVjdC5n
ZXRQYWNrYWdlRnJhZ21lbnRSb290KGdldEZpbGUoIi9QL2xpYjMzNDc4M18zLmphciIpKTsNCisJ
CUlUeXBlIHR5cGUgPSByb290LmdldFBhY2thZ2VGcmFnbWVudCgicCIpLmdldENsYXNzRmlsZSgi
WC5jbGFzcyIpLmdldFR5cGUoKTsNCisJCVN0cmluZyBhbm5vdGF0aW9uU3RyaW5nMSA9ICJAcC5E
ZWZhdWx0IFtpbiBhcmcxIFtpbiBUZXN0KGludCwgamF2YS5sYW5nLlN0cmluZywgaW50KSBbaW4g
WCBbaW4gWC5jbGFzcyBbaW4gcCBbaW4gbGliMzM0NzgzXzMuamFyIFtpbiBQXV1dXV1dXSI7DQor
CQlTdHJpbmcgYW5ub3RhdGlvblN0cmluZzIgPSAiQHAuTWFya2VyIFtpbiBhcmcxIFtpbiBUZXN0
KGludCwgamF2YS5sYW5nLlN0cmluZywgaW50KSBbaW4gWCBbaW4gWC5jbGFzcyBbaW4gcCBbaW4g
bGliMzM0NzgzXzMuamFyIFtpbiBQXV1dXV1dXSI7DQorCQlJTWV0aG9kIG1ldGhvZCA9IHR5cGUu
Z2V0TWV0aG9kcygpWzFdOw0KKwkJSUFubm90YXRpb25bXSBhbm5vdGF0aW9ucyA9IG1ldGhvZC5n
ZXRBbm5vdGF0aW9ucygpOw0KKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBsZW5ndGgiLCAyLCBhbm5v
dGF0aW9ucy5sZW5ndGgpOw0KKwkJYXNzZXJ0RXF1YWxzKCJAcC5JbmplY3QgW2luIFRlc3QoaW50
LCBqYXZhLmxhbmcuU3RyaW5nLCBpbnQpIFtpbiBYIFtpbiBYLmNsYXNzIFtpbiBwIFtpbiBsaWIz
MzQ3ODNfMy5qYXIgW2luIFBdXV1dXV0iLCBhbm5vdGF0aW9uc1swXS50b1N0cmluZygpKTsNCisJ
CUlBbm5vdGF0aW9uIGFubm90YXRpb24gPSBhbm5vdGF0aW9uc1sxXTsNCisJCWFzc2VydEVxdWFs
cygiQHAuTWFya2VyIFtpbiBUZXN0KGludCwgamF2YS5sYW5nLlN0cmluZywgaW50KSBbaW4gWCBb
aW4gWC5jbGFzcyBbaW4gcCBbaW4gbGliMzM0NzgzXzMuamFyIFtpbiBQXV1dXV1dIiwgYW5ub3Rh
dGlvbi50b1N0cmluZygpKTsNCisJCUlNZW1iZXJWYWx1ZVBhaXJbXSBtZW1iZXJWYWx1ZVBhaXJz
ID0gYW5ub3RhdGlvbi5nZXRNZW1iZXJWYWx1ZVBhaXJzKCk7DQorCQlhc3NlcnRFcXVhbHMoIldy
b25nIG51bWJlciBvZiBwYWlycyIsIDEsIG1lbWJlclZhbHVlUGFpcnMubGVuZ3RoKTsNCisJCVN0
cmluZ0J1ZmZlciBvdXRwdXQgPSBuZXcgU3RyaW5nQnVmZmVyKCk7DQorCQlvdXRwdXQuYXBwZW5k
KG1lbWJlclZhbHVlUGFpcnNbMF0uZ2V0TWVtYmVyTmFtZSgpKTsNCisJCW91dHB1dC5hcHBlbmQo
JyAnKTsNCisJCW91dHB1dC5hcHBlbmQobWVtYmVyVmFsdWVQYWlyc1swXS5nZXRWYWx1ZSgpKTsN
CisJCWFzc2VydEVxdWFscygiV3JvbmcgdmFsdWUiLCAiaWQgMyIsIFN0cmluZy52YWx1ZU9mKG91
dHB1dCkpOw0KKwkJSUFubm90YXRpb25bXSBwYXJhbWV0ZXJBbm5vdGF0aW9ucyA9IG1ldGhvZC5n
ZXRQYXJhbWV0ZXJzKClbMV0uZ2V0QW5ub3RhdGlvbnMoKTsNCisJCWFzc2VydEVxdWFscygiV3Jv
bmcgbGVuZ3RoIiwgMiwgcGFyYW1ldGVyQW5ub3RhdGlvbnMubGVuZ3RoKTsNCisJCWFzc2VydEVx
dWFscyhhbm5vdGF0aW9uU3RyaW5nMSwgcGFyYW1ldGVyQW5ub3RhdGlvbnNbMF0udG9TdHJpbmco
KSk7DQorCQlhbm5vdGF0aW9uID0gcGFyYW1ldGVyQW5ub3RhdGlvbnNbMV07DQorCQlhc3NlcnRF
cXVhbHMoYW5ub3RhdGlvblN0cmluZzIsIGFubm90YXRpb24udG9TdHJpbmcoKSk7DQorCQltZW1i
ZXJWYWx1ZVBhaXJzID0gYW5ub3RhdGlvbi5nZXRNZW1iZXJWYWx1ZVBhaXJzKCk7DQorCQlhc3Nl
cnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBwYWlycyIsIDEsIG1lbWJlclZhbHVlUGFpcnMubGVu
Z3RoKTsNCisJCW91dHB1dCA9IG5ldyBTdHJpbmdCdWZmZXIoKTsNCisJCW91dHB1dC5hcHBlbmQo
bWVtYmVyVmFsdWVQYWlyc1swXS5nZXRNZW1iZXJOYW1lKCkpOw0KKwkJb3V0cHV0LmFwcGVuZCgn
ICcpOw0KKwkJb3V0cHV0LmFwcGVuZChtZW1iZXJWYWx1ZVBhaXJzWzBdLmdldFZhbHVlKCkpOw0K
KwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB2YWx1ZSIsICJpZCAxIiwgU3RyaW5nLnZhbHVlT2Yob3V0
cHV0KSk7DQorCQlhc3NlcnRFcXVhbHMoIldyb25nIGxlbmd0aCIsIDAsIG1ldGhvZC5nZXRQYXJh
bWV0ZXJzKClbMF0uZ2V0QW5ub3RhdGlvbnMoKS5sZW5ndGgpOw0KKwkJYXNzZXJ0RXF1YWxzKCJX
cm9uZyBsZW5ndGgiLCAwLCBtZXRob2QuZ2V0UGFyYW1ldGVycygpWzJdLmdldEFubm90YXRpb25z
KCkubGVuZ3RoKTsNCisJfSBmaW5hbGx5IHsNCisJCWRlbGV0ZVByb2plY3QoIlAiKTsNCisJfQ0K
K30NCisvKioNCisgKiBAc2VlICJodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1
Zy5jZ2k/aWQ9MzM0NzgzIg0KKyAqLw0KK3B1YmxpYyB2b2lkIHRlc3RQYXJhbUFubm90YXRpb25z
NigpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsNCisJdHJ5IHsNCisJCWNyZWF0ZUphdmFQcm9qZWN0
KCJQIiwgbmV3IFN0cmluZ1tdIHsic3JjIn0sIG5ldyBTdHJpbmdbXSB7IkpDTDE1X0xJQiJ9LCAi
YmluIiwgIjEuNSIpOw0KKwkJU3RyaW5nIHNvdXJjZSA9ICJwYWNrYWdlIHA7XG4iICsNCisJCQkJ
InB1YmxpYyBjbGFzcyBYPFQ+IHtcbiIgKw0KKwkJCQkiCVg8U3RyaW5nPiBmaWVsZDtcbiIgKw0K
KwkJCQkiCXB1YmxpYyB2b2lkIFRlc3QoKSB7fVxuIiArDQorCQkJCSJ9IjsNCisJCWNyZWF0ZUZv
bGRlcigiL1Avc3JjL3AiKTsNCisJCWNyZWF0ZUZpbGUoDQorCQkJIi9QL3NyYy9wL1guamF2YSIs
DQorCQkJc291cmNlDQorCQkpOw0KKwkJd2FpdEZvckF1dG9CdWlsZCgpOw0KKwkJDQorCQlJQ29t
cGlsYXRpb25Vbml0IHVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIi9QL3NyYy9wL1guamF2YSIp
OyANCisJCUlUeXBlIHR5cGUgPSB1bml0LmdldFR5cGUoIlgiKTsNCisJCUlNZXRob2QgbWV0aG9k
ID0gdHlwZS5nZXRNZXRob2RzKClbMF07DQorCQlJTG9jYWxWYXJpYWJsZVtdIGxvY2FsVmFyaWFi
bGVzID0gbWV0aG9kLmdldFBhcmFtZXRlcnMoKTsNCisJCWFzc2VydE5vdE51bGwobG9jYWxWYXJp
YWJsZXMpOw0KKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBsZW5ndGgiLCAwLCBsb2NhbFZhcmlhYmxl
cy5sZW5ndGgpOw0KKwl9IGZpbmFsbHkgew0KKwkJZGVsZXRlUHJvamVjdCgiUCIpOw0KKwl9DQor
fQ0KKy8qKg0KKyAqIEBzZWUgImh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVn
LmNnaT9pZD0zMzQ3ODMiDQorICovDQorcHVibGljIHZvaWQgdGVzdFBhcmFtQW5ub3RhdGlvbnM3
KCkgdGhyb3dzIENvcmVFeGNlcHRpb24sIElPRXhjZXB0aW9uIHsNCisJdHJ5IHsNCisJCUlKYXZh
UHJvamVjdCBwcm9qZWN0ID0gY3JlYXRlSmF2YVByb2plY3QoIlAiLCBuZXcgU3RyaW5nW10geyJz
cmMifSwgbmV3IFN0cmluZ1tdIHsiSkNMMTVfTElCIn0sICJiaW4iLCAiMS41Iik7DQorCQlTdHJp
bmdbXSBwYXRoQW5kQ29udGVudHMgPSBuZXcgU3RyaW5nW117InAvWC5qYXZhIiwNCisJCQkJInBh
Y2thZ2UgcDtcbiIgKw0KKwkJCQkicHVibGljIGNsYXNzIFg8VD4ge1xuIiArDQorCQkJCSIJWDxT
dHJpbmc+IGZpZWxkO1xuIiArDQorCQkJCSIJcHVibGljIHZvaWQgVGVzdCgpIHt9XG4iICsNCisJ
CQkJIn0iDQorCQl9Ow0KKwkJYWRkTGlicmFyeShwcm9qZWN0LCAibGliMzM0NzgzLmphciIsICJs
aWJzcmMuemlwIiwgcGF0aEFuZENvbnRlbnRzLCBKYXZhQ29yZS5WRVJTSU9OXzFfNSk7DQorCQkN
CisJCXdhaXRGb3JBdXRvQnVpbGQoKTsNCisJCUlQYWNrYWdlRnJhZ21lbnRSb290IHJvb3QgPSBw
cm9qZWN0LmdldFBhY2thZ2VGcmFnbWVudFJvb3QoZ2V0RmlsZSgiL1AvbGliMzM0NzgzLmphciIp
KTsNCisJCUlUeXBlIHR5cGUgPSByb290LmdldFBhY2thZ2VGcmFnbWVudCgicCIpLmdldENsYXNz
RmlsZSgiWC5jbGFzcyIpLmdldFR5cGUoKTsNCisJCQ0KKwkJSU1ldGhvZCBtZXRob2QgPSB0eXBl
LmdldE1ldGhvZHMoKVsxXTsNCisJCUlMb2NhbFZhcmlhYmxlW10gbG9jYWxWYXJpYWJsZXMgPSBt
ZXRob2QuZ2V0UGFyYW1ldGVycygpOw0KKwkJYXNzZXJ0Tm90TnVsbChsb2NhbFZhcmlhYmxlcyk7
DQorCQlhc3NlcnRFcXVhbHMoIldyb25nIGxlbmd0aCIsIDAsIGxvY2FsVmFyaWFibGVzLmxlbmd0
aCk7DQorCX0gZmluYWxseSB7DQorCQlkZWxldGVQcm9qZWN0KCJQIik7DQorCX0NCit9DQorLyoq
DQorICogQHNlZSAiaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lk
PTMzNDc4MyINCisgKi8NCitwdWJsaWMgdm9pZCB0ZXN0UGFyYW1Bbm5vdGF0aW9uczgoKSB0aHJv
d3MgQ29yZUV4Y2VwdGlvbiwgSU9FeGNlcHRpb24gew0KKwl0cnkgew0KKwkJSUphdmFQcm9qZWN0
IHByb2plY3QgPSBjcmVhdGVKYXZhUHJvamVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7InNyYyJ9LCBu
ZXcgU3RyaW5nW10geyJKQ0wxNV9MSUIifSwgImJpbiIsICIxLjUiKTsNCisJCVN0cmluZ1tdIHBh
dGhBbmRDb250ZW50cyA9IG5ldyBTdHJpbmdbXXsicC9YLmphdmEiLA0KKwkJCQkicGFja2FnZSBw
O1xuIiArDQorCQkJCSJwdWJsaWMgY2xhc3MgWDxUPiB7XG4iICsNCisJCQkJIglYPFN0cmluZz4g
ZmllbGQ7XG4iICsNCisJCQkJIglASW5qZWN0IEBNYXJrZXIoaWQ9MylcbiIgKw0KKwkJCQkiCXB1
YmxpYyBYKGludCBpLCBARGVmYXVsdCBATWFya2VyKGlkPTEpIFN0cmluZyBwcm9jZXNzb3IsIGlu
dCBrKSB7fVxuIiArDQorCQkJCSJ9IiwNCisJCQkJInAvSW5qZWN0LmphdmEiLA0KKwkJCQkicGFj
a2FnZSBwO1xuIisNCisJCQkJInB1YmxpYyBAaW50ZXJmYWNlIEluamVjdHtcbiIgKw0KKwkJCQki
fSIsDQorCQkJCSJwL01hcmtlci5qYXZhIiwNCisJCQkJInBhY2thZ2UgcDtcbiIgKw0KKwkJCQki
cHVibGljIEBpbnRlcmZhY2UgTWFya2VyIHtcbiIgKw0KKwkJCQkiCWludCBpZCgpIGRlZmF1bHQg
MDtcbiIgKw0KKwkJCQkifSIsDQorCQkJCSJwL0RlZmF1bHQuamF2YSIsDQorCQkJCSJwYWNrYWdl
IHA7XG4iICsNCisJCQkJInB1YmxpYyBAaW50ZXJmYWNlIERlZmF1bHR7XG4iICsNCisJCQkJIn0i
fTsNCisJCU1hcCBvcHRpb25zID0gbmV3IEhhc2hNYXAoKTsNCisJCW9wdGlvbnMucHV0KEphdmFD
b3JlLkNPTVBJTEVSX0xPQ0FMX1ZBUklBQkxFX0FUVFIsIEphdmFDb3JlLkRPX05PVF9HRU5FUkFU
RSk7DQorCQlhZGRMaWJyYXJ5KHByb2plY3QsICJsaWIzMzQ3ODNfMy5qYXIiLCAibGliMzM0Nzgz
XzNzcmMuemlwIiwgcGF0aEFuZENvbnRlbnRzLCBKYXZhQ29yZS5WRVJTSU9OXzFfNSwgb3B0aW9u
cyk7DQorCQkNCisJCXdhaXRGb3JBdXRvQnVpbGQoKTsNCisJCUlQYWNrYWdlRnJhZ21lbnRSb290
IHJvb3QgPSBwcm9qZWN0LmdldFBhY2thZ2VGcmFnbWVudFJvb3QoZ2V0RmlsZSgiL1AvbGliMzM0
NzgzXzMuamFyIikpOw0KKwkJSVR5cGUgdHlwZSA9IHJvb3QuZ2V0UGFja2FnZUZyYWdtZW50KCJw
IikuZ2V0Q2xhc3NGaWxlKCJYLmNsYXNzIikuZ2V0VHlwZSgpOw0KKwkJU3RyaW5nIGFubm90YXRp
b25TdHJpbmcxID0gIkBwLkRlZmF1bHQgW2luIGFyZzEgW2luIFgoaW50LCBqYXZhLmxhbmcuU3Ry
aW5nLCBpbnQpIFtpbiBYIFtpbiBYLmNsYXNzIFtpbiBwIFtpbiBsaWIzMzQ3ODNfMy5qYXIgW2lu
IFBdXV1dXV1dIjsNCisJCVN0cmluZyBhbm5vdGF0aW9uU3RyaW5nMiA9ICJAcC5NYXJrZXIgW2lu
IGFyZzEgW2luIFgoaW50LCBqYXZhLmxhbmcuU3RyaW5nLCBpbnQpIFtpbiBYIFtpbiBYLmNsYXNz
IFtpbiBwIFtpbiBsaWIzMzQ3ODNfMy5qYXIgW2luIFBdXV1dXV1dIjsNCisJCUlNZXRob2QgbWV0
aG9kID0gdHlwZS5nZXRNZXRob2RzKClbMF07DQorCQlJQW5ub3RhdGlvbltdIGFubm90YXRpb25z
ID0gbWV0aG9kLmdldEFubm90YXRpb25zKCk7DQorCQlhc3NlcnRFcXVhbHMoIldyb25nIGxlbmd0
aCIsIDIsIGFubm90YXRpb25zLmxlbmd0aCk7DQorCQlhc3NlcnRFcXVhbHMoIkBwLkluamVjdCBb
aW4gWChpbnQsIGphdmEubGFuZy5TdHJpbmcsIGludCkgW2luIFggW2luIFguY2xhc3MgW2luIHAg
W2luIGxpYjMzNDc4M18zLmphciBbaW4gUF1dXV1dXSIsIGFubm90YXRpb25zWzBdLnRvU3RyaW5n
KCkpOw0KKwkJSUFubm90YXRpb24gYW5ub3RhdGlvbiA9IGFubm90YXRpb25zWzFdOw0KKwkJYXNz
ZXJ0RXF1YWxzKCJAcC5NYXJrZXIgW2luIFgoaW50LCBqYXZhLmxhbmcuU3RyaW5nLCBpbnQpIFtp
biBYIFtpbiBYLmNsYXNzIFtpbiBwIFtpbiBsaWIzMzQ3ODNfMy5qYXIgW2luIFBdXV1dXV0iLCBh
bm5vdGF0aW9uLnRvU3RyaW5nKCkpOw0KKwkJSU1lbWJlclZhbHVlUGFpcltdIG1lbWJlclZhbHVl
UGFpcnMgPSBhbm5vdGF0aW9uLmdldE1lbWJlclZhbHVlUGFpcnMoKTsNCisJCWFzc2VydEVxdWFs
cygiV3JvbmcgbnVtYmVyIG9mIHBhaXJzIiwgMSwgbWVtYmVyVmFsdWVQYWlycy5sZW5ndGgpOw0K
KwkJU3RyaW5nQnVmZmVyIG91dHB1dCA9IG5ldyBTdHJpbmdCdWZmZXIoKTsNCisJCW91dHB1dC5h
cHBlbmQobWVtYmVyVmFsdWVQYWlyc1swXS5nZXRNZW1iZXJOYW1lKCkpOw0KKwkJb3V0cHV0LmFw
cGVuZCgnICcpOw0KKwkJb3V0cHV0LmFwcGVuZChtZW1iZXJWYWx1ZVBhaXJzWzBdLmdldFZhbHVl
KCkpOw0KKwkJYXNzZXJ0RXF1YWxzKCJXcm9uZyB2YWx1ZSIsICJpZCAzIiwgU3RyaW5nLnZhbHVl
T2Yob3V0cHV0KSk7DQorCQlJQW5ub3RhdGlvbltdIHBhcmFtZXRlckFubm90YXRpb25zID0gbWV0
aG9kLmdldFBhcmFtZXRlcnMoKVsxXS5nZXRBbm5vdGF0aW9ucygpOw0KKwkJYXNzZXJ0RXF1YWxz
KCJXcm9uZyBsZW5ndGgiLCAyLCBwYXJhbWV0ZXJBbm5vdGF0aW9ucy5sZW5ndGgpOw0KKwkJYXNz
ZXJ0RXF1YWxzKGFubm90YXRpb25TdHJpbmcxLCBwYXJhbWV0ZXJBbm5vdGF0aW9uc1swXS50b1N0
cmluZygpKTsNCisJCWFubm90YXRpb24gPSBwYXJhbWV0ZXJBbm5vdGF0aW9uc1sxXTsNCisJCWFz
c2VydEVxdWFscyhhbm5vdGF0aW9uU3RyaW5nMiwgYW5ub3RhdGlvbi50b1N0cmluZygpKTsNCisJ
CW1lbWJlclZhbHVlUGFpcnMgPSBhbm5vdGF0aW9uLmdldE1lbWJlclZhbHVlUGFpcnMoKTsNCisJ
CWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHBhaXJzIiwgMSwgbWVtYmVyVmFsdWVQYWly
cy5sZW5ndGgpOw0KKwkJb3V0cHV0ID0gbmV3IFN0cmluZ0J1ZmZlcigpOw0KKwkJb3V0cHV0LmFw
cGVuZChtZW1iZXJWYWx1ZVBhaXJzWzBdLmdldE1lbWJlck5hbWUoKSk7DQorCQlvdXRwdXQuYXBw
ZW5kKCcgJyk7DQorCQlvdXRwdXQuYXBwZW5kKG1lbWJlclZhbHVlUGFpcnNbMF0uZ2V0VmFsdWUo
KSk7DQorCQlhc3NlcnRFcXVhbHMoIldyb25nIHZhbHVlIiwgImlkIDEiLCBTdHJpbmcudmFsdWVP
ZihvdXRwdXQpKTsNCisJCWFzc2VydEVxdWFscygiV3JvbmcgbGVuZ3RoIiwgMCwgbWV0aG9kLmdl
dFBhcmFtZXRlcnMoKVswXS5nZXRBbm5vdGF0aW9ucygpLmxlbmd0aCk7DQorCQlhc3NlcnRFcXVh
bHMoIldyb25nIGxlbmd0aCIsIDAsIG1ldGhvZC5nZXRQYXJhbWV0ZXJzKClbMl0uZ2V0QW5ub3Rh
dGlvbnMoKS5sZW5ndGgpOw0KKwl9IGZpbmFsbHkgew0KKwkJZGVsZXRlUHJvamVjdCgiUCIpOw0K
Kwl9DQorfQ0KIH0NCg==
</data>

          </attachment>
      

    </bug>

</bugzilla>