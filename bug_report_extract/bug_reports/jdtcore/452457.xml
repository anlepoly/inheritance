<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>452457</bug_id>
          
          <creation_ts>2014-11-20 05:28:00 -0500</creation_ts>
          <short_desc>Long running performance tests don&apos;t run on baseline (4.4)</short_desc>
          <delta_ts>2015-01-05 16:58:57 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.5 M4</target_milestone>
          
          <blocked>452336</blocked>
    
    <blocked>453253</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="David Williams">david_williams</reporter>
          <assigned_to name="Jay Arthanareeswaran">jarthana</assigned_to>
          <cc>jarthana</cc>
    
    <cc>markus_keller</cc>
    
    <cc>noopur_gupta</cc>
    
    <cc>stephan.herrmann</cc>
    
    <cc>Vikas.Chandra</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2486241</commentid>
    <comment_count>0</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2014-11-20 05:28:57 -0500</bug_when>
    <thetext>+++ This bug was initially created as a clone of Bug #452336 +++

I&apos;ve studied the logs in bug 452336 and can summarize the issue below. It primarily comes down to several &quot;prereq&quot; ranges in jdt test bundles ... both Core, and UI ... being &quot;too tight&quot; to install into 4.4. 

To explain the &quot;big picture&quot;, what we are trying to do is run the &quot;4.5 performance unit tests, compiled against 4.5, but ran against 4.4, as &quot;the baseline measurements&quot;. 

The &quot;long running&quot; set of performance tests consist of 5 suites, and 4 of them will not install into 4.4 due to &quot;tight prereq ranges&quot; in the 4.5 stream. 
They are probably correct, in the &quot;pure&quot; sense of semantic versioning -- I&apos;m assuming they were &quot;tighten up for a reason? --  BUT ... I&apos;m not sure we need them to be &quot;exactly right&quot; for test bundles (for several reasons) and the issue mostly comes down to if we did &quot;loosen the range&quot; would the test still (mostly) run? Or would they be &quot;completely broken at runtime time&quot; due to changes between 4.4 and 4.5? 



This effects the follwing 4 test suites: 

org.eclipse.jdt.core.tests.performance
org.eclipse.jdt.text.tests
org.eclipse.jdt.ui.tests.refactoring
org.eclipse.pde.api.tools.tests

When trying to install them into 4.4, to test them, the p2 operation fails with the error: 

&quot;Cannot complete the install because one or more required items could not be found.&quot;

The following give a little more detail, and a specific proposed &quot;fix&quot; marked with &quot;**&quot;. 

= = = = = 

Software being installed: JDT Core Performance Tests 3.9.4.v20141105-1025 (org.eclipse.jdt.core.tests.performance 3.9.4.v20141105-1025)
Missing requirement: Java Compiler Tests 3.11.0.v20141116-0700 (org.eclipse.jdt.core.tests.compiler 3.11.0.v20141116-0700) 
   requires &apos;bundle org.eclipse.jdt.core [3.11.0,4.0.0)&apos; but it could not be found

** Can org.eclipse.jdt.core.tests.compiler be changed to &quot;prereq&quot; org.eclipse.jdt.core [3.10.0,4.0.0) instead of [3.11.0,4.0.0)?

= = = = 

Software being installed: JDT Text Test Plug-in 3.10.100.v20141113-1557 (org.eclipse.jdt.text.tests 3.10.100.v20141113-1557)
Missing requirement: Java Test Plug-in 3.10.100.v20141114-1947 (org.eclipse.jdt.ui.tests 3.10.100.v20141114-1947) 
   requires &apos;bundle org.eclipse.jdt.ui [3.10.100,4.0.0)&apos; but it could not be found

** Can org.eclipse.jdt.ui.tests be change to &quot;prereq&quot; org.eclipse.jdt.ui [3.10.1,4.0.0) instead of [3.10.100,4.0.0)?

= = = = 

Software being installed: Refactoring Tests Plug-in 3.10.100.v20141113-1557 (org.eclipse.jdt.ui.tests.refactoring 3.10.100.v20141113-1557)
Missing requirement: Refactoring Tests Plug-in 3.10.100.v20141113-1557 (org.eclipse.jdt.ui.tests.refactoring 3.10.100.v20141113-1557) 
   requires &apos;bundle org.eclipse.jdt.ui [3.10.100,4.0.0)&apos; but it could not be found

** Can org.eclipse.jdt.ui.tests.refactoring be change to &quot;prereq&quot; org.eclipse.jdt.ui [3.10.1,4.0.0) instead of [3.10.100,4.0.0)? 

= = = = 

Software being installed: API Tools Tests 1.0.500.v20140811-1958 (org.eclipse.pde.api.tools.tests 1.0.500.v20140811-1958)
Missing requirement: Java Compiler Tests 3.11.0.v20141116-0700 (org.eclipse.jdt.core.tests.compiler 3.11.0.v20141116-0700) 
   requires &apos;bundle org.eclipse.jdt.core [3.11.0,4.0.0)&apos; but it could not be found

** Can org.eclipse.jdt.core.tests.compiler be changed to &quot;prereq&quot; org.eclipse.jdt.core [3.10.0,4.0.0) instead of [3.11.0,4.0.0)?

= = = =</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2486254</commentid>
    <comment_count>1</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2014-11-20 05:34:12 -0500</bug_when>
    <thetext>If it would help, I can try making the changes on my local test machine and &quot;give the tests a try&quot; to see how many unit tests pass, or break, due to &quot;incompatible changes&quot; but a) will take a long time to finish :) and b) if you already know of some reason why this won&apos;t work, then we&apos;ll have to think of something else. 

(And, as far as I know, once the 3 test bundles are &quot;adjusted&quot;, then p2 might still fail based on some other constraint?)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2486798</commentid>
    <comment_count>2</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2014-11-21 00:06:19 -0500</bug_when>
    <thetext>(In reply to David Williams from comment #1)
&gt; If it would help, I can try making the changes on my local test machine and
&gt; &quot;give the tests a try&quot; to see how many unit tests pass, or break, due to
&gt; &quot;incompatible changes&quot; ...

I am surprised I am not able to do this. A bit confused by it. 
But, I do change it in my local mirror of our (your) git repo, make the change, but it seems to get &quot;changed back&quot; during the build? Is there something wrong with my local test build? Or do you have some special script that goes through and updates some minimum required ranges?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2487782</commentid>
    <comment_count>3</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-11-24 01:24:17 -0500</bug_when>
    <thetext>(In reply to David Williams from comment #2)
&gt; I am surprised I am not able to do this. A bit confused by it. 
&gt; But, I do change it in my local mirror of our (your) git repo, make the
&gt; change, but it seems to get &quot;changed back&quot; during the build? Is there
&gt; something wrong with my local test build? Or do you have some special script
&gt; that goes through and updates some minimum required ranges?

Not to my knowledge. I will take a look.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2487787</commentid>
    <comment_count>4</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-11-24 01:27:58 -0500</bug_when>
    <thetext>This bug also covers the JDT UI performance tests.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2487801</commentid>
    <comment_count>5</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-11-24 01:44:54 -0500</bug_when>
    <thetext>I don&apos;t recall the history/reasoning, but this version change in org.eclipse.jdt.core.tests.compiler was made as part of fix to bug 438961.

Perhaps Markus can throw some light on this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2488374</commentid>
    <comment_count>6</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2014-11-24 13:25:55 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #5)
&gt; I don&apos;t recall the history/reasoning, but this version change in
&gt; org.eclipse.jdt.core.tests.compiler was made as part of fix to bug 438961.
&gt; 
&gt; Perhaps Markus can throw some light on this.

Just to document it, it appears part of the issue in bug 438961 was that it was  using &quot;old stuff&quot; from &quot;the wrong repo&quot;. 

Since then, the &quot;build-one-bundle&quot; repo has changed to be 4.5-N-builds (instead of 4.5-I-builds as in to solution to bug bug 438961). That should help reduce the danger of getting &quot;old versions&quot; even further. 

But, no where is the following change explained:  

- org.eclipse.jdt.core;bundle-version=&quot;[3.7.0,4.0.0)&quot;,
+ org.eclipse.jdt.core;bundle-version=&quot;[3.11.0,4.0.0)&quot;,

And that&apos;s the current one that prevents Mars tests from running on Luna. I would have to be &quot;backed off&quot; to [3.10.0,4.0.0) to work on both. I think there is little danger in doing so, since we have a lot of control over &quot;what pre-reqs are present&quot; -- especially for production builds. 

Still not sure why my attempt to change this on my &quot;mirrored system&quot; didn&apos;t work ... but ... that&apos;s rather complicated to begin with, and probably should do some &quot;mass refreshes&quot; to make sure all is correct (locally). 

In the mean time, IMHO, it is safe for you to change to the &quot;test compiler&quot; to pre-req [3.10.0,4.0.0) of jdt.core. Same for org.eclipse.pde.api.tools.tests. 

And, I say this from a &quot;build&quot; point of view. I do not know if the tests will run on Luna, or not ... in theory there might have been &quot;big changes&quot; such that the Marks test compiler and api.tools will still no &quot;run well&quot; on the 3.10 version. I&apos;ve just not looked.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2488515</commentid>
    <comment_count>7</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-11-24 22:07:42 -0500</bug_when>
    <thetext>(In reply to David Williams from comment #6)
&gt; In the mean time, IMHO, it is safe for you to change to the &quot;test compiler&quot;
&gt; to pre-req [3.10.0,4.0.0) of jdt.core. Same for
&gt; org.eclipse.pde.api.tools.tests. 

Copying Vikas for the PDE part

&gt; And, I say this from a &quot;build&quot; point of view. I do not know if the tests
&gt; will run on Luna, or not ... in theory there might have been &quot;big changes&quot;
&gt; such that the Marks test compiler and api.tools will still no &quot;run well&quot; on
&gt; the 3.10 version. I&apos;ve just not looked.

No, the compiler tests heavily depend on the correct version of bundle. But then this is how it&apos;s been always. So, as you said, no harm in trying this out.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2488579</commentid>
    <comment_count>8</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-11-25 01:29:49 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #7)
&gt; No, the compiler tests heavily depend on the correct version of bundle. But
&gt; then this is how it&apos;s been always. So, as you said, no harm in trying this
&gt; out.

Would like to clarify. What I meant was, if I were to run the compiler tests from 3.11 with jdt.core bundle version 3.10, there would be failures. But we don&apos;t do this normally.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2488581</commentid>
    <comment_count>9</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-11-25 01:45:16 -0500</bug_when>
    <thetext>Pushed the JDT core part here:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=aa31bdb20caf5c6896cc5b62e062fcac0d4e30fc</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2488702</commentid>
    <comment_count>10</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2014-11-25 05:25:25 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #8)
&gt; (In reply to Jayaprakash Arthanareeswaran from comment #7)
&gt; &gt; No, the compiler tests heavily depend on the correct version of bundle. But
&gt; &gt; then this is how it&apos;s been always. So, as you said, no harm in trying this
&gt; &gt; out.
&gt; 
&gt; Would like to clarify. What I meant was, if I were to run the compiler tests
&gt; from 3.11 with jdt.core bundle version 3.10, there would be failures. But we
&gt; don&apos;t do this normally.

Correct, and this change won&apos;t effect &quot;unit tests&quot; at all, on either stream. 

My hope was ... maybe naively ... that the &quot;performance unit tests&quot; from Mars, could run against 3.10 -- or, at least some subset of them -- and then we could have a &quot;baseline&quot; to compare to &quot;current&quot; results. 

If that is not the case ... (say, for example, none of them run) ... then, I&apos;m not sure how to get baseline measurements for JDT core.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2488712</commentid>
    <comment_count>11</comment_count>
    <who name="Vikas Chandra">Vikas.Chandra</who>
    <bug_when>2014-11-25 05:37:42 -0500</bug_when>
    <thetext>I dont see org.eclipse.jdt.core;bundle-version=&quot;[3.11.0,4.0.0) for PDE.

I think the fix to jdt could fix pde also.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2488714</commentid>
    <comment_count>12</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-11-25 05:39:22 -0500</bug_when>
    <thetext>(In reply to Vikas Chandra from comment #11)
&gt; I dont see org.eclipse.jdt.core;bundle-version=&quot;[3.11.0,4.0.0) for PDE.
&gt; 
&gt; I think the fix to jdt could fix pde also.

Sorry, my bad. My changes are enough to cover PDE too.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2488722</commentid>
    <comment_count>13</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2014-11-25 05:45:59 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #12)
&gt; (In reply to Vikas Chandra from comment #11)
&gt; &gt; I dont see org.eclipse.jdt.core;bundle-version=&quot;[3.11.0,4.0.0) for PDE.
&gt; &gt; 
&gt; &gt; I think the fix to jdt could fix pde also.
&gt; 
&gt; Sorry, my bad. My changes are enough to cover PDE too.

No, no, my bad. :) 

It appears the p2 error messages are &quot;over specific&quot;, unless you read them real closely. 

Software being installed: API Tools Tests 1.0.500.v20140811-1958 (org.eclipse.pde.api.tools.tests 1.0.500.v20140811-1958)
Missing requirement: Java Compiler Tests 3.11.0.v20141116-0700 (org.eclipse.jdt.core.tests.compiler 3.11.0.v20141116-0700) 
   requires &apos;bundle org.eclipse.jdt.core [3.11.0,4.0.0)&apos; but it could not be found

Perhaps, even if changing the pre-req for org.eclipse.jdt.core.tests.compiler
does not help jdt.core get a baseline ... it might help some of these other components!?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2488960</commentid>
    <comment_count>14</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2014-11-25 15:25:44 -0500</bug_when>
    <thetext>Thanks for getting this change in, before the I-build. 
So far, at least the director is able to &quot;install the tests&quot; into 4.4. 

https://hudson.eclipse.org/perftests/view/Eclipse%20and%20Equinox/job/ep45ILR-perf-lin64-baseline/ws/workarea/I20141125-0800/eclipse-testing/directorLogs/

It will be a while before we know if any of the tests *run* .... but, just wanted to share this &quot;good news&quot; that there was not any subsequent &quot;install blockages&quot; after this one was fixed. 

I think we can count this specific jdt bugilla fixed, and will open new ones, if other issues found. 

Thanks again,</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2489031</commentid>
    <comment_count>15</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2014-11-25 17:38:39 -0500</bug_when>
    <thetext>I forgot the &quot;UI&quot; tests need to be fixed, so opened bug 453253 for those. 

But, more good news! ... It appears the &quot;core baseline&quot; did run without error! ... 63 tests ... so that&apos;s at least a start! 

This may not be seen on &quot;download pages&quot; yet, but can be seen on Hudson where they run: 

https://hudson.eclipse.org/perftests/job/ep45ILR-perf-lin64-baseline/3/artifact/workarea/I20141125-0800/eclipse-testing/results/html/org.eclipse.jdt.core.tests.performance_linux.gtk.x86_64_8.0.html</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2489071</commentid>
    <comment_count>16</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2014-11-26 00:05:08 -0500</bug_when>
    <thetext>(In reply to David Williams from comment #15)
&gt; I forgot the &quot;UI&quot; tests need to be fixed, ...

And, worse, I had the &quot;current build&quot; mis-configured, so the data was not saved correctly for &quot;the current build&quot;. Details in bug 452336. I will try re-running that job.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>