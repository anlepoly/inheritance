<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>412664</bug_id>
          
          <creation_ts>2013-07-10 07:06:00 -0400</creation_ts>
          <short_desc>Tests including directly NULL character</short_desc>
          <delta_ts>2015-01-05 17:16:22 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.4 M1</target_milestone>
          
          <blocked>410154</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Mickael Istria">mistria</reporter>
          <assigned_to name="Mickael Istria">mistria</assigned_to>
          <cc>anchakrk</cc>
    
    <cc>daniel_megert</cc>
    
    <cc>jarthana</cc>
    
    <cc>manpalat</cc>
    
    <cc>markus_keller</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2282692</commentid>
    <comment_count>0</comment_count>
    <who name="Mickael Istria">mistria</who>
    <bug_when>2013-07-10 07:06:41 -0400</bug_when>
    <thetext>Tests in MatchingRegionsTest directly include the NULL character (0) which causes issues with other programs reading the source (mainly those implemeted in C and family where \0 is the end-of-string character). This includes CGit and PostgreSQL.

Discussion started here: http://dev.eclipse.org/mhonarc/lists/platform-dev/msg00964.html</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2282700</commentid>
    <comment_count>1</comment_count>
    <who name="Mickael Istria">mistria</who>
    <bug_when>2013-07-10 07:24:03 -0400</bug_when>
    <thetext>Here is a Gerrit patch: https://git.eclipse.org/r/#/c/14438/
Unfortunately, Git thinks this file is binary (could be an issue with file encoding), so the diff doesn&apos;t appear...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2282716</commentid>
    <comment_count>2</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-07-10 08:15:27 -0400</bug_when>
    <thetext>I can confirm that all relevant tests pass with this change. Released it via commit:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=b59f8eb9de3712e3f20399b74f56ab5505001505</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2282793</commentid>
    <comment_count>3</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-07-10 10:43:07 -0400</bug_when>
    <thetext>I agree that the null characters are not too helpful in MatchingRegionsTest.java.

Mickael, I assume you also filed bugs for the broken tools that cannot handle .java files that contain a NUL character, right? Git and EGit don&apos;t have a problem with such files (except that some features like diff or merge may surprise the unsuspecting user, since the files are treated as binary).


The &quot;fix&quot; removed an interesting corner case from the test suite (compiling and running a valid source file that contains a NUL character). Luckily, we still have org.eclipse.jdt.core.tests.compiler.regression.SwitchTest#testDuplicateHashCode() that performs this test, but this only runs on Java 7 and greater.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2282949</commentid>
    <comment_count>4</comment_count>
    <who name="Mickael Istria">mistria</who>
    <bug_when>2013-07-10 11:30:26 -0400</bug_when>
    <thetext>(In reply to comment #3)
&gt; Mickael, I assume you also filed bugs for the broken tools that cannot
&gt; handle .java files that contain a NUL character, right? Git and EGit don&apos;t
&gt; have a problem with such files (except that some features like diff or merge
&gt; may surprise the unsuspecting user, since the files are treated as binary).

Actually, I didn&apos;t even try. I guess the answer would be &apos;\0&apos; is the end-of-string in C and C++, that&apos;s not something we can change, deal with it.

As for files treated as binary, I&apos;m not yet sure it&apos;s related to the presence of \0. It might be simply because of file encoding, as concluded by many discussions on the web.
 
 &gt; The &quot;fix&quot; removed an interesting corner case from the test suite (compiling
&gt; and running a valid source file that contains a NUL character).

That&apos;s right, I didn&apos;t even think about it.
However, is the fact of compiling the org.eclipse.jdt.core.tests.model sources an actual test for JDT compiler? I thought that test projects inside JDT test bundles were actually dedicated to test the compilation itself, and then that those sources would be treated like resources, and not test.
I&apos;m saying that because Sonar will probably want to put all sources into the database, but not resources. So I&apos;d be glad to know that there is no other source containing a \0 (but I wouldn&apos;t care for resources).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2282984</commentid>
    <comment_count>5</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-07-10 12:44:30 -0400</bug_when>
    <thetext>&gt; However, is the fact of compiling the org.eclipse.jdt.core.tests.model
&gt; sources an actual test for JDT compiler?

You&apos;re right, it&apos;s not a proper test. But if the compiler or the VM blew up with this, then we would have noticed it in the build or in the test run.

In my workspace (most of the SDK in source, but not all tests), this is the only occurrence I found.

You can use the Eclipse File Search with regex &quot;(?-m)^[^\u0000]*+\u0000&quot; in common text files (e.g.: *.htm, *.html, *.ini, *.java, *.log, *.options, *.prefs, *.properties, *.txt, *.xhtml, *.xml, *.xsl).
Caveats:
- you have to use explicit extensions, since file name pattern &quot;*&quot; already skips &quot;binary&quot; files that contain a NUL
- don&apos;t just search for &quot;\u0000&quot;, since that would explode the Search view (esp. in &quot;Show as Tree&quot; mode)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2291734</commentid>
    <comment_count>6</comment_count>
    <who name="ANIRBAN CHAKRABORTY">anchakrk</who>
    <bug_when>2013-08-06 04:53:41 -0400</bug_when>
    <thetext>Verified for I20130805-0800</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2291793</commentid>
    <comment_count>7</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-08-06 07:23:59 -0400</bug_when>
    <thetext>(In reply to comment #6)
&gt; Verified for I20130805-0800
ie Eclipse Luna 4.4 M1</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>