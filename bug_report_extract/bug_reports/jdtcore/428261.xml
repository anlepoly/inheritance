<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>428261</bug_id>
          
          <creation_ts>2014-02-15 13:14:00 -0500</creation_ts>
          <short_desc>[1.8][compiler] Incorrect error: No enclosing instance of the type X is accessible in scope</short_desc>
          <delta_ts>2014-02-21 03:31:58 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>427787</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>noopur_gupta</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2363809</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-15 13:14:17 -0500</bug_when>
    <thetext>The following program should compile, but is presently rejected:

// --
interface I {
	X foo(int a);
}

public class X {
	public static void main(String[] args) {
		String s = &quot;Blah&quot;;
		class Local extends X {
			Local(int a) {
				System.out.println(a);
				System.out.println(s);
			}
		}
		I i = Local::new; // Incorrect error here.
                i.foo(10);
	}
}

Point is Local being in static context, does not have an enclosing instance.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2363810</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-15 13:16:37 -0500</bug_when>
    <thetext>See that javac 8b129 rejects this program incorrectly:

interface I {
	X foo(int a);
}

public class X {
	public void main(String[] args) {
		class Local extends X {
			Local(int a) {
				System.out.println(a);
			}
		}
		I i = Local::new;
        i.foo(10);
	}
}

as there being no suitable enclosing instance.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2364568</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-17 16:20:44 -0500</bug_when>
    <thetext>This required special treatment - when the local type captures outer
locals, the situation gets tricky: the captured outer locals come *after*
the functional interface parameters and there is no way the meta factory
can handle that case.

So I arranged to generate code for the method reference by treating it as
an implicit lambda expression.

Fix and tests here: 

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=d7bf97b0906e6821b36f900e536d18f1ccdddff2</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2366528</commentid>
    <comment_count>3</comment_count>
    <who name="Noopur Gupta">noopur_gupta</who>
    <bug_when>2014-02-21 03:31:58 -0500</bug_when>
    <thetext>Verified as working for Eclipse + Java 8 RC1 using Kepler SR2(RC4) +   
Eclipse Java Development Tools Patch for Java 8 Support (BETA)	
1.0.0.v20140220-2054</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>