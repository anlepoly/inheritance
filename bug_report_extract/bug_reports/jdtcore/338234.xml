<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>338234</bug_id>
          
          <creation_ts>2011-02-25 10:43:00 -0500</creation_ts>
          <short_desc>[compiler] Missing warning for uninitialized variable in dead code</short_desc>
          <delta_ts>2011-05-03 16:39:12 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.7</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>blocker</bug_severity>
          <target_milestone>3.7 M6</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Ayushman Jain">amj87.iitr</reporter>
          <assigned_to name="Ayushman Jain">amj87.iitr</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>Olivier_Thomann</cc>
    
    <cc>satyam.kandula</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="39553"
          type_id="1"
          status="+"
          setter="stephan.herrmann"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1889258</commentid>
    <comment_count>0</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-02-25 10:43:56 -0500</bug_when>
    <thetext>Found this while playing around with a particular test case. In the following snippet:

public static void main(String[] args) {
	int i;
	String str = null;
	if (str != null)
		i++;    
}

we don&apos;t warn &quot;variable i may not have been initialized&quot; on i++, while javac does.

On investigating, I found that this is because all uninitialized warnings in unreachable code are suppressed in org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isDefinitelyAssigned(LocalVariableBinding).

This is clearly wrong, because deadcode is an ecj-specific feature and javac will always raise the uninitialized warning in such scenarios.

We should make sure this warning is not suppressed in code which is flagged as UNREACHABLE because of being analysed as dead code by ecj, but is suppressed in those cases that are analysed as unreachable as mandated by the JLS.
Sigh!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1889264</commentid>
    <comment_count>1</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-02-25 10:49:10 -0500</bug_when>
    <thetext>This is against the JLS. This is serious and should be fixed asap.
null analysis should not hide any errors that are mandatory from the JLS.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1889268</commentid>
    <comment_count>2</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-02-25 10:51:55 -0500</bug_when>
    <thetext>This is related to what was done in bug 166641.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1889285</commentid>
    <comment_count>3</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-02-25 11:06:10 -0500</bug_when>
    <thetext>(In reply to comment #2)
&gt; This is related to what was done in bug 166641.

Not exactly, i saw the patch attached there and it seems we were always hiding that warning for unreachable code. With that bug fix, Maxime only &apos;unlocked&apos; this warning for cases where the declaration itself was inside unreachable code</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1889287</commentid>
    <comment_count>4</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-02-25 11:10:14 -0500</bug_when>
    <thetext>The bad news is, we need to still make sure that in the following case, even though i++ occurs in deadcode, we still cannot raise the uninitialized warning

public static void main(String[] args) {
		int i;
		l : {
			if (false)
				break l;     
			return;
		}
		i++;      
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1889333</commentid>
    <comment_count>5</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-02-25 11:54:51 -0500</bug_when>
    <thetext>This is a regression over 3.5.2. This is a must fix for 3.7M6.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1889374</commentid>
    <comment_count>6</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-02-25 12:30:32 -0500</bug_when>
    <thetext>(In reply to comment #5)
&gt; This is a regression over 3.5.2. This is a must fix for 3.7M6.

This was introduced by the fix for bug 293917.
Commenting line 624 in FlowContext (HEAD) makes the required warning re-appear.

I&apos;m doing some background research on this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1889377</commentid>
    <comment_count>7</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-02-25 12:34:11 -0500</bug_when>
    <thetext>(In reply to comment #6)
&gt; This was introduced by the fix for bug 293917.
&gt; Commenting line 624 in FlowContext (HEAD) makes the required warning re-appear.
Yes, we agree on that. I got to the same conclusion :-).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1889927</commentid>
    <comment_count>8</comment_count>
      <attachid>189898</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-02-27 13:39:13 -0500</bug_when>
    <thetext>Created attachment 189898
sketch towards a possible solution

This sketch introduces a fresh new tagBit (UNREACHABLE_BY_NULLANALYSIS)
to signal when null analysis finds that a branch is unreachable.
The trick is: the normal analysis completely ignores this bit,
only during UnconditionalFlowInfo.mergedWith(..) do I check for this
bit to avoid merging-in irrelevant null info.

The sketch is still incomplete, it causes a few relevant regressions in
NullReferenceTests, but it already fixes the issue at hand.

It also causes many of the dead code warnings introduced in bug 293917
to disappear again. Is that good or bad?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1890122</commentid>
    <comment_count>9</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-02-28 05:09:50 -0500</bug_when>
    <thetext>(In reply to comment #8)
&gt; Created attachment 189898 [details] [diff]
&gt; sketch towards a possible solution

I think the approach of having a separate bit for &quot;dead code&quot; is the best option we have here.

I&apos;ll look into how we can still keep the current good dead code analysis intact while still using this approach.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1890226</commentid>
    <comment_count>10</comment_count>
      <attachid>189936</attachid>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-02-28 07:35:54 -0500</bug_when>
    <thetext>Created attachment 189936
proposed fix v1.0

This follows from the above patch, to make sure we separate the unreachability due to null analysis from that of the assignment analysis, and still keep the deadcode analysis untouched. All NullRefTests pass. Yet to run the complete suite.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1890246</commentid>
    <comment_count>11</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-02-28 08:13:04 -0500</bug_when>
    <thetext>(In reply to comment #10)
&gt; Created attachment 189936 [details]
&gt; proposed fix v1.0
&gt; 
&gt; [...] All NullRefTests pass. [...]

Congrats!

Quick questions: do we really *want* the dead code warnings after we already
signal a redundant check? How does your patch affect optimization?

I assume sub-classes of FlowContext should be changed, too?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1890273</commentid>
    <comment_count>12</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-02-28 08:50:27 -0500</bug_when>
    <thetext>(In reply to comment #11)
&gt; (In reply to comment #10)
&gt; &gt; Created attachment 189936 [details] [diff] [details]
&gt; &gt; proposed fix v1.0

&gt; Quick questions: do we really *want* the dead code warnings after we already
&gt; signal a redundant check? 
I would say yes because its an existing feature, and it should either be completely removed or be consistent across all cases. With just the patch in comment 8, we report dead code warnings in fewer cases, but we still do report it in some cases. This ambiguity is not good.

&gt;How does your patch affect optimization?
It doesn&apos;t touch optimization at all. I plan to handle that separately for bug 326950, using the same new bit we&apos;re introducing here. The only place that&apos;ll need to change will be the Statement#complainIfUnreachable() method, where we&apos;ll make sure we dont reset the IsReachable bit when only UNREACHABLE_BY_NULLANALYSIS is set.

&gt; I assume sub-classes of FlowContext should be changed, too?
Yup!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1890543</commentid>
    <comment_count>13</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-02-28 12:33:46 -0500</bug_when>
    <thetext>Another case to be covered is for fields:
public class X {
   public final int fi;
	{
		    int i;
		    String str = null;
		    if (str != null)
		        i = fi;    
	}
}

Here javac gives 2 errors:

variable fi might not have been initialized
                        i = fi;
                            ^
variable fi might not have been initialized
public class Wtf {
       ^
2 errors

while ecj only gives 1. (for the class and not for the assignment).

Anyway, this is trivial and the fix for isDefinitelyAssigned(LocalVariableBinding) needs to be extended to isDefinitelyAssigned(FieldBinding)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1891067</commentid>
    <comment_count>14</comment_count>
      <attachid>190035</attachid>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-03-01 08:37:46 -0500</bug_when>
    <thetext>Created attachment 190035
proposed fix v2.0 + tests

This patch creates a new bit in FlowInfo, UNREACHABLE_OR_DEAD in addition to UNREACHABLE_BY_NULLANALYSIS, so that the bit UNREACHABLE can be defined as 
UNREACHABLE = UNREACHABLE_OR_DEAD | UNREACHABLE_BY_NULLANALYSIS.

This is done so that at all places where we currently check for UNREACHABLE to be set we don&apos;t have to check for UNREACHABLE|UNREACHABLE_BY_NULLANALYSIS instead.

The patch also extends the fix to FinallyFlowContext and LoopingFlowContext. In the isDefinitelyAssigned(..) methods, we now make sure we only skip the warning if the UNREACHABLE flag is set, but not because of null analysis.
All tests pass.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1891068</commentid>
    <comment_count>15</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-03-01 08:38:27 -0500</bug_when>
    <thetext>Stephan, can you please do a final review? Thanks!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1891069</commentid>
    <comment_count>16</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-03-01 08:40:06 -0500</bug_when>
    <thetext>Small typo in the doc of FlowInfo.reachMode(). Will correct it when the patch is reviewed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1891162</commentid>
    <comment_count>17</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-03-01 10:39:09 -0500</bug_when>
    <thetext>The test org.eclipse.jdt.core.tests.compiler.regression.NullReferenceTest.testBug338234() needs to be updated.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1891317</commentid>
    <comment_count>18</comment_count>
      <attachid>190073</attachid>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-03-01 13:46:00 -0500</bug_when>
    <thetext>Created attachment 190073
proposed fix v2.0 + tests updated

Same patch with changes mentioned above.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1892414</commentid>
    <comment_count>19</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-03-03 05:39:27 -0500</bug_when>
    <thetext>(In reply to comment #18)
&gt; Created attachment 190073 [details]
&gt; proposed fix v2.0 + tests updated
&gt; 
&gt; Same patch with changes mentioned above.

I&apos;m now looking into this.

BTW, I can&apos;t directly use your patch with the Apply Patch wizard.
Maybe you missed to set patch root to &quot;Workspace&quot;?
(no need to create a new patch, though).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1892442</commentid>
    <comment_count>20</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-03-03 06:57:48 -0500</bug_when>
    <thetext>I believe we have a viable solution here, yet I&apos;d like to take a minute
to improve the comprehensibility.

The comment explaining UNREACHABLE_OR_DEAD doesn&apos;t seem to match the usage
of this flag: &quot;unreachable code as defined in the language spec&quot;.
The JLS explicitely excludes &quot;if (false) { x=3; }&quot; from recognition of 
unreachable code. Furthermore, for loop conditions the JLS only considers 
the constants true/false, not optimized booleans.
I believe, the representation of JLS-unreachable in our code is 
FlowInfo.DEAD_END. Our UNREACHABLE flag already includes optional compiler
specific analysis.

All clients calling flowInfo.setReachMode(UNREACHABLE) now implicitly set
(UNREACHABLE_OR_DEAD|UNREACHABLE_BY_NULLANALYSIS), which isn&apos;t quite the
intention, I believe. This only works because of the two flags only three
combinations are actually used:
  0 = REACHABLE
  4 = UNREACHABLE_BY_NULLANALYSIS
  5 = UNREACHABLE_OR_DEAD|UNREACHABLE_BY_NULLANALYSIS
I don&apos;t think 1 (UNREACHABLE_OR_DEAD) is ever used in isolation, right?
And more specifically, no code checks for
  (tagBits &amp; UNREACHABLE) == UNREACHABLE_OR_DEAD

To challenge my understanding I made a quick experiment: replace all
occurrences of setReachMode(UNREACHABLE) with 
setReachMode(UNREACHABLE_OR_DEAD). Still NullReferenceTests and FlowInfoTests
pass 100%. After this replacement we use these combinations:
  0 = REACHABLE
  1 = UNREACHABLE_OR_DEAD
  4 = UNREACHABLE_BY_NULLANALYSIS
i.e., we never set both flags at the same time, but use the combined
UNREACHABLE only for tests. To me this looks cleaner. 

Two further adjustments are required to make the above statement fully true:
Both implementations of setReachMode currently contain this line
  this.tagBits |= UNREACHABLE;
which I&apos;d change to
  this.tagBits |= reachMode;

I think our future selves working on future changes will prefer the 0 1 4
encoding over the 0 4 5 one, what do you think?

BTW: I&apos;d also move NULL_FLAG_MASK to some higher value so we can use
subsequent bits 0 1 2.


Some more cosmetic points:
 - indentation in UnconditionalFlowInfo.mergedWith 
   (sorry, that&apos;s from my minimal-changing sketch)
 - update doc comment of setReachMode()
 - also the comment of reachMode() should mention the new flags, no?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1892449</commentid>
    <comment_count>21</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-03-03 07:18:19 -0500</bug_when>
    <thetext>Thanks Stephan for reviewing!

(In reply to comment #20)
&gt; I believe we have a viable solution here, yet I&apos;d like to take a minute
&gt; to improve the comprehensibility.
&gt; This only works because of the two flags only three
&gt; combinations are actually used:
&gt;   0 = REACHABLE
&gt;   4 = UNREACHABLE_BY_NULLANALYSIS
&gt;   5 = UNREACHABLE_OR_DEAD|UNREACHABLE_BY_NULLANALYSIS
&gt; I don&apos;t think 1 (UNREACHABLE_OR_DEAD) is ever used in isolation, right?
Yes, you&apos;re right. Either both or only UNREACHABLE_BY_NULL analysis is set at any point. 

&gt; And more specifically, no code checks for
&gt;   (tagBits &amp; UNREACHABLE) == UNREACHABLE_OR_DEAD
Not in this patch, but the patch in bug 326950 does.

&gt;   0 = REACHABLE
&gt;   1 = UNREACHABLE_OR_DEAD
&gt;   4 = UNREACHABLE_BY_NULLANALYSIS
&gt; i.e., we never set both flags at the same time, but use the combined
&gt; UNREACHABLE only for tests. To me this looks cleaner. 
Ok. This can be done.

&gt; BTW: I&apos;d also move NULL_FLAG_MASK to some higher value so we can use
&gt; subsequent bits 0 1 2.

&gt; Some more cosmetic points:
I&apos;ll take care of these</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1892745</commentid>
    <comment_count>22</comment_count>
      <attachid>190298</attachid>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-03-03 13:28:56 -0500</bug_when>
    <thetext>Created attachment 190298
proposed fix v2.1 + tests

Conceptually same fix with the bits changed as suggested above. Also, UnconditionalFlowInfo.mergedWith() doesnt require any change now, because the UNREACHABLE bit is already checked in the starting of the method for both flow infos.

Stephan, can you give it a final once over and i&apos;ll release it. Thanks!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1892804</commentid>
    <comment_count>23</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-03-03 15:28:05 -0500</bug_when>
    <thetext>(In reply to comment #22)
&gt; Created attachment 190298 [details]
&gt; proposed fix v2.1 + tests
&gt; 
&gt; Conceptually same fix with the bits changed as suggested above.

Looks good now, but ...

&gt; Also,
&gt; UnconditionalFlowInfo.mergedWith() doesnt require any change now, because the
&gt; UNREACHABLE bit is already checked in the starting of the method for both flow
&gt; infos.

I disagree. Try this:

    void foo(boolean b) {
        int i;
        String str = null;
        if (b) {
            if (str == null)
                return;
        } else {
            i = 2;
        } // &lt;- watch this merge of branches!
        i++;
    }

Do you see the warning &quot;The local variable i may not have been initialized&quot;?
Shouldn&apos;t we?

I believe an updated version of the change in mergedWith() is required 
in order to achieve this, no?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1892816</commentid>
    <comment_count>24</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-03-03 15:41:57 -0500</bug_when>
    <thetext>(In reply to comment #23)
&gt; Do you see the warning &quot;The local variable i may not have been initialized&quot;?
&gt; Shouldn&apos;t we?
Yes, we must report an error in this case.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1893079</commentid>
    <comment_count>25</comment_count>
      <attachid>190355</attachid>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-03-04 02:36:37 -0500</bug_when>
    <thetext>Created attachment 190355
proposed fix v2.2 + tests

Same fix with correction in mergedWith(..) method.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1893109</commentid>
    <comment_count>26</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-03-04 03:29:03 -0500</bug_when>
    <thetext>I agree with the last patch. 
+1</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1893196</commentid>
    <comment_count>27</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-03-04 07:42:34 -0500</bug_when>
    <thetext>Released in HEAD for 3.7M6</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1894762</commentid>
    <comment_count>28</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2011-03-08 04:18:51 -0500</bug_when>
    <thetext>Verified for 3.7M6 using build I20110307-0800</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1923290</commentid>
    <comment_count>29</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-05-03 16:39:12 -0400</bug_when>
    <thetext>Verified for 3.7RC0 using I20110501-0200 (4.1 I-build)</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>189898</attachid>
            <date>2011-02-27 13:39:00 -0500</date>
            <delta_ts>2011-02-28 07:35:54 -0500</delta_ts>
            <desc>sketch towards a possible solution</desc>
            <filename>Bug_338234_sketch.patch</filename>
            <type>text/plain</type>
            <size>7883</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMAojUCBvcmcuZWNsaXBzZS5qZHQuY29yZQpJ
bmRleDogY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvRmxv
d0NvbnRleHQuamF2YQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09ClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9mbG93L0Zsb3dDb250ZXh0LmphdmEsdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNjgKZGlmZiAt
dSAtcjEuNjggRmxvd0NvbnRleHQuamF2YQotLS0gY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2Zsb3cvRmxvd0NvbnRleHQuamF2YQkxIFNlcCAyMDEwIDE1OjQ5OjU3
IC0wMDAwCTEuNjgKKysrIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9mbG93L0Zsb3dDb250ZXh0LmphdmEJMjcgRmViIDIwMTEgMTg6MzE6MjEgLTAwMDAKQEAgLTEs
NSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDEwIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZl
ZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1h
ZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5z
ZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2
YWlsYWJsZSBhdApAQCAtNTY1LDcgKzU2NSw3IEBACiAgKi8KIHB1YmxpYyB2b2lkIHJlY29yZFVz
aW5nTnVsbFJlZmVyZW5jZShTY29wZSBzY29wZSwgTG9jYWxWYXJpYWJsZUJpbmRpbmcgbG9jYWws
CiAJCUV4cHJlc3Npb24gcmVmZXJlbmNlLCBpbnQgY2hlY2tUeXBlLCBGbG93SW5mbyBmbG93SW5m
bykgewotCWlmICgoZmxvd0luZm8udGFnQml0cyAmIEZsb3dJbmZvLlVOUkVBQ0hBQkxFKSAhPSAw
IHx8CisJaWYgKChmbG93SW5mby50YWdCaXRzICYgKEZsb3dJbmZvLlVOUkVBQ0hBQkxFfEZsb3dJ
bmZvLlVOUkVBQ0hBQkxFX0JZX05VTExBTkFMWVNJUykpICE9IDAgfHwKIAkJCWZsb3dJbmZvLmlz
RGVmaW5pdGVseVVua25vd24obG9jYWwpKSB7CiAJCXJldHVybjsKIAl9CkBAIC01NzgsMTQgKzU3
OCwxNCBAQAogCQkJCQkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkubG9jYWxWYXJpYWJsZVJlZHVu
ZGFudENoZWNrT25Ob25OdWxsKGxvY2FsLCByZWZlcmVuY2UpOwogCQkJCQl9CiAJCQkJCWlmICgh
Zmxvd0luZm8uaXNNYXJrZWRBc051bGxPck5vbk51bGxJbkFzc2VydEV4cHJlc3Npb24obG9jYWwp
KSB7Ci0JCQkJCQlmbG93SW5mby5pbml0c1doZW5GYWxzZSgpLnNldFJlYWNoTW9kZShGbG93SW5m
by5VTlJFQUNIQUJMRSk7CisJCQkJCQlmbG93SW5mby5pbml0c1doZW5GYWxzZSgpLnNldFJlYWNo
TW9kZShGbG93SW5mby5VTlJFQUNIQUJMRV9CWV9OVUxMQU5BTFlTSVMpOwogCQkJCQl9CiAJCQkJ
fSBlbHNlIHsKIAkJCQkJaWYgKCh0aGlzLnRhZ0JpdHMgJiBGbG93Q29udGV4dC5ISURFX05VTExf
Q09NUEFSSVNPTl9XQVJOSU5HKSA9PSAwKSB7CiAJCQkJCQlzY29wZS5wcm9ibGVtUmVwb3J0ZXIo
KS5sb2NhbFZhcmlhYmxlTm9uTnVsbENvbXBhcmVkVG9OdWxsKGxvY2FsLCByZWZlcmVuY2UpOwog
CQkJCQl9CiAJCQkJCWlmICghZmxvd0luZm8uaXNNYXJrZWRBc051bGxPck5vbk51bGxJbkFzc2Vy
dEV4cHJlc3Npb24obG9jYWwpKSB7Ci0JCQkJCQlmbG93SW5mby5pbml0c1doZW5UcnVlKCkuc2V0
UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFKTsKKwkJCQkJCWZsb3dJbmZvLmluaXRzV2hl
blRydWUoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEVfQllfTlVMTEFOQUxZU0lT
KTsKIAkJCQkJfQogCQkJCX0KIAkJCQlyZXR1cm47CkBAIC02MDksNyArNjA5LDcgQEAKIAkJCQkJ
CQlzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5sb2NhbFZhcmlhYmxlUmVkdW5kYW50Q2hlY2tPbk51
bGwobG9jYWwsIHJlZmVyZW5jZSk7CiAJCQkJCQl9CiAJCQkJCQlpZiAoIWZsb3dJbmZvLmlzTWFy
a2VkQXNOdWxsT3JOb25OdWxsSW5Bc3NlcnRFeHByZXNzaW9uKGxvY2FsKSkgewotCQkJCQkJCWZs
b3dJbmZvLmluaXRzV2hlbkZhbHNlKCkuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxF
KTsKKwkJCQkJCQlmbG93SW5mby5pbml0c1doZW5GYWxzZSgpLnNldFJlYWNoTW9kZShGbG93SW5m
by5VTlJFQUNIQUJMRV9CWV9OVUxMQU5BTFlTSVMpOwogCQkJCQkJfQogCQkJCQkJcmV0dXJuOwog
CQkJCQljYXNlIEZsb3dDb250ZXh0LklOX0NPTVBBUklTT05fTk9OX05VTEw6CkBAIC02MjEsNyAr
NjIxLDcgQEAKIAkJCQkJCQlzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5sb2NhbFZhcmlhYmxlTnVs
bENvbXBhcmVkVG9Ob25OdWxsKGxvY2FsLCByZWZlcmVuY2UpOwogCQkJCQkJfQogCQkJCQkJaWYg
KCFmbG93SW5mby5pc01hcmtlZEFzTnVsbE9yTm9uTnVsbEluQXNzZXJ0RXhwcmVzc2lvbihsb2Nh
bCkpIHsKLQkJCQkJCQlmbG93SW5mby5pbml0c1doZW5UcnVlKCkuc2V0UmVhY2hNb2RlKEZsb3dJ
bmZvLlVOUkVBQ0hBQkxFKTsKKwkJCQkJCQlmbG93SW5mby5pbml0c1doZW5UcnVlKCkuc2V0UmVh
Y2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFX0JZX05VTExBTkFMWVNJUyk7CiAJCQkJCQl9CiAJ
CQkJCQlyZXR1cm47CiAJCQkJCWNhc2UgRmxvd0NvbnRleHQuSU5fQVNTSUdOTUVOVDoKSW5kZXg6
IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L0Zsb3dJbmZv
LmphdmEKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxvdy9G
bG93SW5mby5qYXZhLHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjQ1CmRpZmYgLXUgLXIxLjQ1IEZs
b3dJbmZvLmphdmEKLS0tIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9mbG93L0Zsb3dJbmZvLmphdmEJMTYgRGVjIDIwMTAgMTM6MDI6MzAgLTAwMDAJMS40NQorKysg
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvRmxvd0luZm8u
amF2YQkyNyBGZWIgMjAxMSAxODozMToyMSAtMDAwMApAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBvcmF0
aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0
aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5k
IHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIg
dGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFj
Y29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0yNCw2
ICsyNCw4IEBACiAJcHVibGljIGZpbmFsIHN0YXRpYyBpbnQgUkVBQ0hBQkxFID0gMDsKIAlwdWJs
aWMgZmluYWwgc3RhdGljIGludCBVTlJFQUNIQUJMRSA9IDE7CiAJcHVibGljIGZpbmFsIHN0YXRp
YyBpbnQgTlVMTF9GTEFHX01BU0sgPSAyOworCXB1YmxpYyBzdGF0aWMgZmluYWwgaW50IFVOUkVB
Q0hBQkxFX0JZX05VTExBTkFMWVNJUyA9IDQ7CisJCiAKIAlwdWJsaWMgZmluYWwgc3RhdGljIGlu
dCBVTktOT1dOID0gMTsKIAlwdWJsaWMgZmluYWwgc3RhdGljIGludCBOVUxMID0gMjsKSW5kZXg6
IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L1VuY29uZGl0
aW9uYWxGbG93SW5mby5qYXZhCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2Zsb3cvVW5jb25kaXRpb25hbEZsb3dJbmZvLmphdmEsdgpyZXRyaWV2aW5nIHJldmlz
aW9uIDEuNzIKZGlmZiAtdSAtcjEuNzIgVW5jb25kaXRpb25hbEZsb3dJbmZvLmphdmEKLS0tIGNv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L1VuY29uZGl0aW9u
YWxGbG93SW5mby5qYXZhCTE5IEphbiAyMDExIDA1OjI5OjU0IC0wMDAwCTEuNzIKKysrIGNvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L1VuY29uZGl0aW9uYWxG
bG93SW5mby5qYXZhCTI3IEZlYiAyMDExIDE4OjMxOjIzIC0wMDAwCkBAIC0xNTYzLDYgKzE1NjMs
MTcgQEAKIAkJbmExLCBuYTIsIG5hMywgbmE0LAogCQluYjEsIG5iMiwgbmIzLCBuYjQsCiAJCWIx
LCBiMiwgYjMsIGI0OworICBpZiAoKG90aGVySW5pdHMudGFnQml0cyAmIEZsb3dJbmZvLlVOUkVB
Q0hBQkxFX0JZX05VTExBTkFMWVNJUykgIT0gMCkgeworCSAgb3RoZXJIYXNOdWxscyA9IGZhbHNl
OyAvLyBza2lwIG1lcmdpbmcsIG90aGVySW5pdHMgaXMgdW5yZWFjaGFibGUgYnkgbnVsbCBhbmFs
eXNpcworICB9IGVsc2UgeworCWlmICgodGhpcy50YWdCaXRzICYgRmxvd0luZm8uVU5SRUFDSEFC
TEVfQllfTlVMTEFOQUxZU0lTKSAhPSAwKSB7IC8vIGRpcmVjdGx5IGNvcHkgaWYgdGhpcyBpcyB1
bnJlYWNoYWJsZSBieSBudWxsIGFuYWx5c2lzCisJCXRoaXMubnVsbEJpdDEgPSBvdGhlckluaXRz
Lm51bGxCaXQxOworCQl0aGlzLm51bGxCaXQyID0gb3RoZXJJbml0cy5udWxsQml0MjsKKwkJdGhp
cy5udWxsQml0MyA9IG90aGVySW5pdHMubnVsbEJpdDM7CisJCXRoaXMubnVsbEJpdDQgPSBvdGhl
ckluaXRzLm51bGxCaXQ0OworCQl0aGlzSGFkTnVsbHMgPSBmYWxzZTsKKwkJdGhpc0hhc051bGxz
ID0gb3RoZXJIYXNOdWxsczsKKwl9IGVsc2UKIAlpZiAodGhpc0hhZE51bGxzKSB7CiAgICAgCWlm
IChvdGhlckhhc051bGxzKSB7CiAgICAgCQl0aGlzLm51bGxCaXQxID0gKGEyID0gdGhpcy5udWxs
Qml0MikgJiAoYTMgPSB0aGlzLm51bGxCaXQzKQpAQCAtMTYzNiw2ICsxNjQ3LDcgQEAKICAgICAJ
CXRoaXMubnVsbEJpdDMgIT0gMCB8fAogICAgIAkJdGhpcy5udWxsQml0NCAhPSAwOwogCX0KKyAg
fQogCiAJLy8gdHJlYXRpbmcgZXh0cmEgc3RvcmFnZQogCWlmICh0aGlzLmV4dHJhICE9IG51bGwg
fHwgb3RoZXJJbml0cy5leHRyYSAhPSBudWxsKSB7CkBAIC0xODU4LDYgKzE4NzAsOCBAQAogCX0J
CiAJaWYgKHJlYWNoTW9kZSA9PSBSRUFDSEFCTEUgKSB7CiAJCXRoaXMudGFnQml0cyAmPSB+VU5S
RUFDSEFCTEU7CisJfSBlbHNlIGlmIChyZWFjaE1vZGUgPT0gVU5SRUFDSEFCTEVfQllfTlVMTEFO
QUxZU0lTKSB7CisJCXRoaXMudGFnQml0cyB8PSBVTlJFQUNIQUJMRV9CWV9OVUxMQU5BTFlTSVM7
IC8vIGRvbid0IGludGVyZmVyZSB3aXRoIGRlZmluaXRlIGFzc2lnbm1lbnQgYW5hbHlzaXMKIAl9
IGVsc2UgewogCQlpZiAoKHRoaXMudGFnQml0cyAmIFVOUkVBQ0hBQkxFKSA9PSAwKSB7CiAJCQkv
LyByZXNldCBvcHRpb25hbCBpbml0cyB3aGVuIGJlY29taW5nIHVucmVhY2hhYmxlCiNQIG9yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyCkluZGV4OiBzcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9GbG93QW5hbHlzaXNUZXN0LmphdmEKPT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVn
cmVzc2lvbi9GbG93QW5hbHlzaXNUZXN0LmphdmEsdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNDYK
ZGlmZiAtdSAtcjEuNDYgRmxvd0FuYWx5c2lzVGVzdC5qYXZhCi0tLSBzcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9GbG93QW5hbHlzaXNUZXN0LmphdmEJ
MSBTZXAgMjAxMCAxNTo0OTozMCAtMDAwMAkxLjQ2CisrKyBzcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9GbG93QW5hbHlzaXNUZXN0LmphdmEJMjcgRmVi
IDIwMTEgMTg6MzE6MjcgLTAwMDAKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKgotICogQ29weXJpZ2h0IChjKSAyMDA1LCAyMDEwIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDA1LCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21w
YW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBv
ZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0
aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtMjksNyArMjksOSBAQAog
cHVibGljIGNsYXNzIEZsb3dBbmFseXNpc1Rlc3QgZXh0ZW5kcyBBYnN0cmFjdFJlZ3Jlc3Npb25U
ZXN0IHsKIHN0YXRpYyB7CiAvLwlURVNUU19OVU1CRVJTID0gbmV3IGludFtdIHsgNjkgfTsKKwlU
RVNUU19OQU1FUyA9IG5ldyBTdHJpbmdbXSB7ICJ0ZXN0QnVnMzM4MjM0IiB9OwogfQorCiBwdWJs
aWMgRmxvd0FuYWx5c2lzVGVzdChTdHJpbmcgbmFtZSkgewogCXN1cGVyKG5hbWUpOwogfQpAQCAt
MjI0Niw2ICsyMjQ4LDI3IEBACiAJCSJEZWFkIGNvZGVcbiIgKyAKIAkJIi0tLS0tLS0tLS1cbiIp
OwogfQorCitwdWJsaWMgdm9pZCB0ZXN0QnVnMzM4MjM0KCkgeworCXJ1bk5lZ2F0aXZlVGVzdCgK
KwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIg
KworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iICsg
CisJCQkiICAgICAgICBpbnQgaTtcbiIgKyAKKwkJCSIgICAgICAgIFN0cmluZyBzdHIgPSBudWxs
O1xuIiArIAorCQkJIiAgICAgICAgaWYgKHN0ciAhPSBudWxsKVxuIiArIAorCQkJIiAgICAgICAg
ICAgIGkrKzsgICAgXG4iICsgCisJCQkiICAgIH1cbiIgKyAKKwkJCSJ9XG4iCisJCX0sCisJCSIt
LS0tLS0tLS0tXG4iICsgCisJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNilcbiIgKyAK
KwkJIglpKys7ICAgIFxuIiArIAorCQkiCV5cbiIgKyAKKwkJIlRoZSBsb2NhbCB2YXJpYWJsZSBp
IG1heSBub3QgaGF2ZSBiZWVuIGluaXRpYWxpemVkXG4iICsgCisJCSItLS0tLS0tLS0tXG4iKTsK
K30KIHB1YmxpYyBzdGF0aWMgQ2xhc3MgdGVzdENsYXNzKCkgewogCXJldHVybiBGbG93QW5hbHlz
aXNUZXN0LmNsYXNzOwogfQo=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>189936</attachid>
            <date>2011-02-28 07:35:00 -0500</date>
            <delta_ts>2011-03-01 08:37:46 -0500</delta_ts>
            <desc>proposed fix v1.0</desc>
            <filename>patch338234.txt</filename>
            <type>text/plain</type>
            <size>21380</size>
            <attacher name="Ayushman Jain">amj87.iitr</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Js
b2NrLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9h
c3QvQmxvY2suamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNDMNCmRpZmYgLXUgLXIxLjQz
IEJsb2NrLmphdmENCi0tLSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L0Jsb2NrLmphdmEJMTQgT2N0IDIwMDkgMTg6MDg6MzcgLTAwMDAJMS40Mw0KKysrIGNv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQmxvY2suamF2YQky
OCBGZWIgMjAxMSAxMjozMjowMiAtMDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMDkgSUJNIENvcnBvcmF0aW9u
IGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlv
biBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQg
dGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIg
dGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBh
Y2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTI5
LDcgKzI5LDcgQEANCiBwdWJsaWMgRmxvd0luZm8gYW5hbHlzZUNvZGUoQmxvY2tTY29wZSBjdXJy
ZW50U2NvcGUsIEZsb3dDb250ZXh0IGZsb3dDb250ZXh0LCBGbG93SW5mbyBmbG93SW5mbykgew0K
IAkvLyBlbXB0eSBibG9jaw0KIAlpZiAodGhpcy5zdGF0ZW1lbnRzID09IG51bGwpCXJldHVybiBm
bG93SW5mbzsNCi0JaW50IGNvbXBsYWludExldmVsID0gKGZsb3dJbmZvLnJlYWNoTW9kZSgpICYg
Rmxvd0luZm8uVU5SRUFDSEFCTEUpICE9IDAgPyBTdGF0ZW1lbnQuQ09NUExBSU5FRF9GQUtFX1JF
QUNIQUJMRSA6IFN0YXRlbWVudC5OT1RfQ09NUExBSU5FRDsNCisJaW50IGNvbXBsYWludExldmVs
ID0gKGZsb3dJbmZvLnJlYWNoTW9kZSgpICYgKEZsb3dJbmZvLlVOUkVBQ0hBQkxFfEZsb3dJbmZv
LlVOUkVBQ0hBQkxFX0JZX05VTExBTkFMWVNJUykpICE9IDAgPyBTdGF0ZW1lbnQuQ09NUExBSU5F
RF9GQUtFX1JFQUNIQUJMRSA6IFN0YXRlbWVudC5OT1RfQ09NUExBSU5FRDsNCiAJZm9yIChpbnQg
aSA9IDAsIG1heCA9IHRoaXMuc3RhdGVtZW50cy5sZW5ndGg7IGkgPCBtYXg7IGkrKykgew0KIAkJ
U3RhdGVtZW50IHN0YXQgPSB0aGlzLnN0YXRlbWVudHNbaV07DQogCQlpZiAoKGNvbXBsYWludExl
dmVsID0gc3RhdC5jb21wbGFpbklmVW5yZWFjaGFibGUoZmxvd0luZm8sIHRoaXMuc2NvcGUsIGNv
bXBsYWludExldmVsKSkgPCBTdGF0ZW1lbnQuQ09NUExBSU5FRF9VTlJFQUNIQUJMRSkgew0KSW5k
ZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQ29uZGl0
aW9uYWxFeHByZXNzaW9uLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xp
cHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9hc3QvQ29uZGl0aW9uYWxFeHByZXNzaW9uLmphdmEsdg0KcmV0cmlldmluZyBy
ZXZpc2lvbiAxLjk4DQpkaWZmIC11IC1yMS45OCBDb25kaXRpb25hbEV4cHJlc3Npb24uamF2YQ0K
LS0tIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQ29uZGl0
aW9uYWxFeHByZXNzaW9uLmphdmEJMTQgSmFuIDIwMTEgMTc6MDI6MjQgLTAwMDAJMS45OA0KKysr
IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQ29uZGl0aW9u
YWxFeHByZXNzaW9uLmphdmEJMjggRmViIDIwMTEgMTI6MzI6MDIgLTAwMDANCkBAIC00Myw3ICs0
Myw3IEBADQogDQogcHVibGljIEZsb3dJbmZvIGFuYWx5c2VDb2RlKEJsb2NrU2NvcGUgY3VycmVu
dFNjb3BlLCBGbG93Q29udGV4dCBmbG93Q29udGV4dCwNCiAJCQlGbG93SW5mbyBmbG93SW5mbykg
ew0KLQkJaW50IGluaXRpYWxDb21wbGFpbnRMZXZlbCA9IChmbG93SW5mby5yZWFjaE1vZGUoKSAm
IEZsb3dJbmZvLlVOUkVBQ0hBQkxFKSAhPSAwID8gU3RhdGVtZW50LkNPTVBMQUlORURfRkFLRV9S
RUFDSEFCTEUgOiBTdGF0ZW1lbnQuTk9UX0NPTVBMQUlORUQ7DQorCQlpbnQgaW5pdGlhbENvbXBs
YWludExldmVsID0gKGZsb3dJbmZvLnJlYWNoTW9kZSgpICYgKEZsb3dJbmZvLlVOUkVBQ0hBQkxF
fEZsb3dJbmZvLlVOUkVBQ0hBQkxFX0JZX05VTExBTkFMWVNJUykpICE9IDAgPyBTdGF0ZW1lbnQu
Q09NUExBSU5FRF9GQUtFX1JFQUNIQUJMRSA6IFN0YXRlbWVudC5OT1RfQ09NUExBSU5FRDsNCiAJ
CUNvbnN0YW50IGNzdCA9IHRoaXMuY29uZGl0aW9uLm9wdGltaXplZEJvb2xlYW5Db25zdGFudCgp
Ow0KIAkJYm9vbGVhbiBpc0NvbmRpdGlvbk9wdGltaXplZFRydWUgPSBjc3QgIT0gQ29uc3RhbnQu
Tm90QUNvbnN0YW50ICYmIGNzdC5ib29sZWFuVmFsdWUoKSA9PSB0cnVlOw0KIAkJYm9vbGVhbiBp
c0NvbmRpdGlvbk9wdGltaXplZEZhbHNlID0gY3N0ICE9IENvbnN0YW50Lk5vdEFDb25zdGFudCAm
JiBjc3QuYm9vbGVhblZhbHVlKCkgPT0gZmFsc2U7DQpJbmRleDogY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Gb3JTdGF0ZW1lbnQuamF2YQ0KPT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Gb3JTdGF0ZW1lbnQuamF2
YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNjkNCmRpZmYgLXUgLXIxLjY5IEZvclN0YXRlbWVu
dC5qYXZhDQotLS0gY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Fz
dC9Gb3JTdGF0ZW1lbnQuamF2YQkyMyBBdWcgMjAxMCAwODo0MToyNSAtMDAwMAkxLjY5DQorKysg
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Gb3JTdGF0ZW1l
bnQuamF2YQkyOCBGZWIgMjAxMSAxMjozMjowMiAtMDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENv
cnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJv
Z3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFi
bGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAg
KiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBh
dA0KQEAgLTYyLDcgKzYyLDcgQEANCiAJcHVibGljIEZsb3dJbmZvIGFuYWx5c2VDb2RlKEJsb2Nr
U2NvcGUgY3VycmVudFNjb3BlLCBGbG93Q29udGV4dCBmbG93Q29udGV4dCwgRmxvd0luZm8gZmxv
d0luZm8pIHsNCiAJCXRoaXMuYnJlYWtMYWJlbCA9IG5ldyBCcmFuY2hMYWJlbCgpOw0KIAkJdGhp
cy5jb250aW51ZUxhYmVsID0gbmV3IEJyYW5jaExhYmVsKCk7DQotCQlpbnQgaW5pdGlhbENvbXBs
YWludExldmVsID0gKGZsb3dJbmZvLnJlYWNoTW9kZSgpICYgRmxvd0luZm8uVU5SRUFDSEFCTEUp
ICE9IDAgPyBTdGF0ZW1lbnQuQ09NUExBSU5FRF9GQUtFX1JFQUNIQUJMRSA6IFN0YXRlbWVudC5O
T1RfQ09NUExBSU5FRDsNCisJCWludCBpbml0aWFsQ29tcGxhaW50TGV2ZWwgPSAoZmxvd0luZm8u
cmVhY2hNb2RlKCkgJiAoRmxvd0luZm8uVU5SRUFDSEFCTEV8Rmxvd0luZm8uVU5SRUFDSEFCTEVf
QllfTlVMTEFOQUxZU0lTKSkgIT0gMCA/IFN0YXRlbWVudC5DT01QTEFJTkVEX0ZBS0VfUkVBQ0hB
QkxFIDogU3RhdGVtZW50Lk5PVF9DT01QTEFJTkVEOw0KIA0KIAkJLy8gcHJvY2VzcyB0aGUgaW5p
dGlhbGl6YXRpb25zDQogCQlpZiAodGhpcy5pbml0aWFsaXphdGlvbnMgIT0gbnVsbCkgew0KSW5k
ZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvRm9yZWFj
aFN0YXRlbWVudC5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvYXN0L0ZvcmVhY2hTdGF0ZW1lbnQuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEu
NjQNCmRpZmYgLXUgLXIxLjY0IEZvcmVhY2hTdGF0ZW1lbnQuamF2YQ0KLS0tIGNvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvRm9yZWFjaFN0YXRlbWVudC5qYXZh
CTkgQXVnIDIwMTAgMDQ6MDk6NDEgLTAwMDAJMS42NA0KKysrIGNvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvRm9yZWFjaFN0YXRlbWVudC5qYXZhCTI4IEZlYiAy
MDExIDEyOjMyOjAyIC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90
aGVycy4NCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBv
dGhlcnMuDQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNj
b21wYW55aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVy
bXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFu
aWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtNzYsNyArNzYs
NyBAQA0KIAkJLy8gaW5pdGlhbGl6ZSBicmVhayBhbmQgY29udGludWUgbGFiZWxzDQogCQl0aGlz
LmJyZWFrTGFiZWwgPSBuZXcgQnJhbmNoTGFiZWwoKTsNCiAJCXRoaXMuY29udGludWVMYWJlbCA9
IG5ldyBCcmFuY2hMYWJlbCgpOw0KLQkJaW50IGluaXRpYWxDb21wbGFpbnRMZXZlbCA9IChmbG93
SW5mby5yZWFjaE1vZGUoKSAmIEZsb3dJbmZvLlVOUkVBQ0hBQkxFKSAhPSAwID8gU3RhdGVtZW50
LkNPTVBMQUlORURfRkFLRV9SRUFDSEFCTEUgOiBTdGF0ZW1lbnQuTk9UX0NPTVBMQUlORUQ7DQor
CQlpbnQgaW5pdGlhbENvbXBsYWludExldmVsID0gKGZsb3dJbmZvLnJlYWNoTW9kZSgpICYgKEZs
b3dJbmZvLlVOUkVBQ0hBQkxFfEZsb3dJbmZvLlVOUkVBQ0hBQkxFX0JZX05VTExBTkFMWVNJUykp
ICE9IDAgPyBTdGF0ZW1lbnQuQ09NUExBSU5FRF9GQUtFX1JFQUNIQUJMRSA6IFN0YXRlbWVudC5O
T1RfQ09NUExBSU5FRDsNCiANCiAJCS8vIHByb2Nlc3MgdGhlIGVsZW1lbnQgdmFyaWFibGUgYW5k
IGNvbGxlY3Rpb24NCiAJCXRoaXMuY29sbGVjdGlvbi5jaGVja05QRShjdXJyZW50U2NvcGUsIGZs
b3dDb250ZXh0LCBmbG93SW5mbyk7DQpJbmRleDogY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2FzdC9JZlN0YXRlbWVudC5qYXZhDQo9PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmls
ZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0lmU3RhdGVtZW50LmphdmEsdg0KcmV0cmll
dmluZyByZXZpc2lvbiAxLjY5DQpkaWZmIC11IC1yMS42OSBJZlN0YXRlbWVudC5qYXZhDQotLS0g
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9JZlN0YXRlbWVu
dC5qYXZhCTEyIEF1ZyAyMDEwIDE2OjU4OjI4IC0wMDAwCTEuNjkNCisrKyBjb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0lmU3RhdGVtZW50LmphdmEJMjggRmVi
IDIwMTEgMTI6MzI6MDIgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEwIElCTSBDb3Jwb3JhdGlvbiBhbmQg
b3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBh
Y2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0
ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21w
YW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC01NSw3ICs1
NSw3IEBADQogcHVibGljIEZsb3dJbmZvIGFuYWx5c2VDb2RlKEJsb2NrU2NvcGUgY3VycmVudFNj
b3BlLCBGbG93Q29udGV4dCBmbG93Q29udGV4dCwgRmxvd0luZm8gZmxvd0luZm8pIHsNCiAJLy8g
cHJvY2VzcyB0aGUgY29uZGl0aW9uDQogCUZsb3dJbmZvIGNvbmRpdGlvbkZsb3dJbmZvID0gdGhp
cy5jb25kaXRpb24uYW5hbHlzZUNvZGUoY3VycmVudFNjb3BlLCBmbG93Q29udGV4dCwgZmxvd0lu
Zm8pOw0KLQlpbnQgaW5pdGlhbENvbXBsYWludExldmVsID0gKGZsb3dJbmZvLnJlYWNoTW9kZSgp
ICYgRmxvd0luZm8uVU5SRUFDSEFCTEUpICE9IDAgPyBTdGF0ZW1lbnQuQ09NUExBSU5FRF9GQUtF
X1JFQUNIQUJMRSA6IFN0YXRlbWVudC5OT1RfQ09NUExBSU5FRDsNCisJaW50IGluaXRpYWxDb21w
bGFpbnRMZXZlbCA9IChmbG93SW5mby5yZWFjaE1vZGUoKSAmIChGbG93SW5mby5VTlJFQUNIQUJM
RXxGbG93SW5mby5VTlJFQUNIQUJMRV9CWV9OVUxMQU5BTFlTSVMpKSAhPSAwID8gU3RhdGVtZW50
LkNPTVBMQUlORURfRkFLRV9SRUFDSEFCTEUgOiBTdGF0ZW1lbnQuTk9UX0NPTVBMQUlORUQ7DQog
DQogCUNvbnN0YW50IGNzdCA9IHRoaXMuY29uZGl0aW9uLm9wdGltaXplZEJvb2xlYW5Db25zdGFu
dCgpOw0KIAlpZiAoKHRoaXMuY29uZGl0aW9uLmltcGxpY2l0Q29udmVyc2lvbiAmIFR5cGVJZHMu
VU5CT1hJTkcpICE9IDApIHsNCkBAIC03MywxMyArNzMsMTMgQEANCiAJaWYgKGlzQ29uZGl0aW9u
T3B0aW1pemVkVHJ1ZSkgew0KIAkJZWxzZUZsb3dJbmZvLnNldFJlYWNoTW9kZShGbG93SW5mby5V
TlJFQUNIQUJMRSk7DQogCX0NCi0JaWYgKCgoZmxvd0luZm8udGFnQml0cyAmIEZsb3dJbmZvLlVO
UkVBQ0hBQkxFKSA9PSAwKSAmJiANCi0JCQkoKHRoZW5GbG93SW5mby50YWdCaXRzICYgRmxvd0lu
Zm8uVU5SRUFDSEFCTEUpICE9IDApKSB7DQorCWlmICgoKGZsb3dJbmZvLnRhZ0JpdHMgJiAoRmxv
d0luZm8uVU5SRUFDSEFCTEV8Rmxvd0luZm8uVU5SRUFDSEFCTEVfQllfTlVMTEFOQUxZU0lTKSkg
PT0gMCkgJiYgDQorCQkJKCh0aGVuRmxvd0luZm8udGFnQml0cyAmIChGbG93SW5mby5VTlJFQUNI
QUJMRXxGbG93SW5mby5VTlJFQUNIQUJMRV9CWV9OVUxMQU5BTFlTSVMpKSAhPSAwKSkgew0KIAkJ
Ly8gTWFyayB0aGVuIGJsb2NrIGFzIHVucmVhY2hhYmxlDQogCQkvLyBObyBuZWVkIGlmIHRoZSB3
aG9sZSBpZi1lbHNlIGNvbnN0cnVjdCBpdHNlbGYgbGllcyBpbiB1bnJlYWNoYWJsZSBjb2RlDQog
CQl0aGlzLmJpdHMgfD0gQVNUTm9kZS5Jc1RoZW5TdGF0ZW1lbnRVbnJlYWNoYWJsZTsNCi0JfSBl
bHNlIGlmICgoKGZsb3dJbmZvLnRhZ0JpdHMgJiBGbG93SW5mby5VTlJFQUNIQUJMRSkgPT0gMCkg
JiYNCi0JCQkoKGVsc2VGbG93SW5mby50YWdCaXRzICYgRmxvd0luZm8uVU5SRUFDSEFCTEUpICE9
IDApKSB7DQorCX0gZWxzZSBpZiAoKChmbG93SW5mby50YWdCaXRzICYgKEZsb3dJbmZvLlVOUkVB
Q0hBQkxFfEZsb3dJbmZvLlVOUkVBQ0hBQkxFX0JZX05VTExBTkFMWVNJUykpID09IDApICYmDQor
CQkJKChlbHNlRmxvd0luZm8udGFnQml0cyAmIChGbG93SW5mby5VTlJFQUNIQUJMRXxGbG93SW5m
by5VTlJFQUNIQUJMRV9CWV9OVUxMQU5BTFlTSVMpKSAhPSAwKSkgew0KIAkJLy8gTWFyayBlbHNl
IGJsb2NrIGFzIHVucmVhY2hhYmxlDQogCQkvLyBObyBuZWVkIGlmIHRoZSB3aG9sZSBpZi1lbHNl
IGNvbnN0cnVjdCBpdHNlbGYgbGllcyBpbiB1bnJlYWNoYWJsZSBjb2RlDQogCQl0aGlzLmJpdHMg
fD0gQVNUTm9kZS5Jc0Vsc2VTdGF0ZW1lbnRVbnJlYWNoYWJsZTsNCkluZGV4OiBjb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L01ldGhvZERlY2xhcmF0aW9uLmph
dmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTWV0
aG9kRGVjbGFyYXRpb24uamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNzkNCmRpZmYgLXUg
LXIxLjc5IE1ldGhvZERlY2xhcmF0aW9uLmphdmENCi0tLSBjb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L01ldGhvZERlY2xhcmF0aW9uLmphdmEJMTYgSmFuIDIw
MTEgMjI6NDM6MjEgLTAwMDAJMS43OQ0KKysrIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9hc3QvTWV0aG9kRGVjbGFyYXRpb24uamF2YQkyOCBGZWIgMjAxMSAxMjoz
MjowMiAtMDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0g
KiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQor
ICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0K
ICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWlu
ZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRo
ZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlz
IGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTk3LDcgKzk3LDcgQEANCiAJ
CQl9DQogCQkJLy8gcHJvcGFnYXRlIHRvIHN0YXRlbWVudHMNCiAJCQlpZiAodGhpcy5zdGF0ZW1l
bnRzICE9IG51bGwpIHsNCi0JCQkJaW50IGNvbXBsYWludExldmVsID0gKGZsb3dJbmZvLnJlYWNo
TW9kZSgpICYgRmxvd0luZm8uVU5SRUFDSEFCTEUpID09IDAgPyBTdGF0ZW1lbnQuTk9UX0NPTVBM
QUlORUQgOiBTdGF0ZW1lbnQuQ09NUExBSU5FRF9GQUtFX1JFQUNIQUJMRTsNCisJCQkJaW50IGNv
bXBsYWludExldmVsID0gKGZsb3dJbmZvLnJlYWNoTW9kZSgpICYgKEZsb3dJbmZvLlVOUkVBQ0hB
QkxFfEZsb3dJbmZvLlVOUkVBQ0hBQkxFX0JZX05VTExBTkFMWVNJUykpID09IDAgPyBTdGF0ZW1l
bnQuTk9UX0NPTVBMQUlORUQgOiBTdGF0ZW1lbnQuQ09NUExBSU5FRF9GQUtFX1JFQUNIQUJMRTsN
CiAJCQkJZm9yIChpbnQgaSA9IDAsIGNvdW50ID0gdGhpcy5zdGF0ZW1lbnRzLmxlbmd0aDsgaSA8
IGNvdW50OyBpKyspIHsNCiAJCQkJCVN0YXRlbWVudCBzdGF0ID0gdGhpcy5zdGF0ZW1lbnRzW2ld
Ow0KIAkJCQkJaWYgKChjb21wbGFpbnRMZXZlbCA9IHN0YXQuY29tcGxhaW5JZlVucmVhY2hhYmxl
KGZsb3dJbmZvLCB0aGlzLnNjb3BlLCBjb21wbGFpbnRMZXZlbCkpIDwgU3RhdGVtZW50LkNPTVBM
QUlORURfVU5SRUFDSEFCTEUpIHsNCkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvYXN0L1N0YXRlbWVudC5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTog
L2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1N0YXRlbWVudC5qYXZhLHYNCnJldHJpZXZpbmcg
cmV2aXNpb24gMS41MQ0KZGlmZiAtdSAtcjEuNTEgU3RhdGVtZW50LmphdmENCi0tLSBjb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1N0YXRlbWVudC5qYXZhCTIy
IEphbiAyMDExIDIzOjM5OjI1IC0wMDAwCTEuNTENCisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1N0YXRlbWVudC5qYXZhCTI4IEZlYiAyMDExIDEyOjMy
OjAyIC0wMDAwDQpAQCAtNzEsNyArNzEsNyBAQA0KIC8vIFJlcG9ydCBhbiBlcnJvciBpZiBuZWNl
c3NhcnkgKGlmIGV2ZW4gbW9yZSB1bnJlYWNoYWJsZSB0aGFuIHByZXZpb3VzbHkgcmVwb3J0ZWQN
CiAvLyBjb21wbGFpbnRMZXZlbCA9IDAgaWYgd2FzIHJlYWNoYWJsZSB1cCB1bnRpbCBub3csIDEg
aWYgZmFrZSByZWFjaGFibGUgKGRlYWRjb2RlKSwgMiBpZiBmYXRhbCB1bnJlYWNoYWJsZSAoZXJy
b3IpDQogcHVibGljIGludCBjb21wbGFpbklmVW5yZWFjaGFibGUoRmxvd0luZm8gZmxvd0luZm8s
IEJsb2NrU2NvcGUgc2NvcGUsIGludCBwcmV2aW91c0NvbXBsYWludExldmVsKSB7DQotCWlmICgo
Zmxvd0luZm8ucmVhY2hNb2RlKCkgJiBGbG93SW5mby5VTlJFQUNIQUJMRSkgIT0gMCkgew0KKwlp
ZiAoKGZsb3dJbmZvLnJlYWNoTW9kZSgpICYgKEZsb3dJbmZvLlVOUkVBQ0hBQkxFfEZsb3dJbmZv
LlVOUkVBQ0hBQkxFX0JZX05VTExBTkFMWVNJUykpICE9IDApIHsNCiAJCXRoaXMuYml0cyAmPSB+
QVNUTm9kZS5Jc1JlYWNoYWJsZTsNCiAJCWlmIChmbG93SW5mbyA9PSBGbG93SW5mby5ERUFEX0VO
RCkgew0KIAkJCWlmIChwcmV2aW91c0NvbXBsYWludExldmVsIDwgQ09NUExBSU5FRF9VTlJFQUNI
QUJMRSkgew0KSW5kZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9hc3QvU3dpdGNoU3RhdGVtZW50LmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9v
dC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9hc3QvU3dpdGNoU3RhdGVtZW50LmphdmEsdg0KcmV0cmlldmluZyBy
ZXZpc2lvbiAxLjc5DQpkaWZmIC11IC1yMS43OSBTd2l0Y2hTdGF0ZW1lbnQuamF2YQ0KLS0tIGNv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvU3dpdGNoU3RhdGVt
ZW50LmphdmEJMTIgQXVnIDIwMTAgMTY6NTg6MjggLTAwMDAJMS43OQ0KKysrIGNvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvU3dpdGNoU3RhdGVtZW50LmphdmEJ
MjggRmViIDIwMTEgMTI6MzI6MDIgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEwIElCTSBDb3Jwb3JhdGlv
biBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5k
IHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVy
IHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2gg
YWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC02
MSw3ICs2MSw3IEBADQogCQkJdGhpcy5wcmVTd2l0Y2hJbml0U3RhdGVJbmRleCA9IGN1cnJlbnRT
Y29wZS5tZXRob2RTY29wZSgpLnJlY29yZEluaXRpYWxpemF0aW9uU3RhdGVzKGZsb3dJbmZvKTsN
CiAJCQlpbnQgY2FzZUluZGV4ID0gMDsNCiAJCQlpZiAodGhpcy5zdGF0ZW1lbnRzICE9IG51bGwp
IHsNCi0JCQkJaW50IGluaXRpYWxDb21wbGFpbnRMZXZlbCA9IChmbG93SW5mby5yZWFjaE1vZGUo
KSAmIEZsb3dJbmZvLlVOUkVBQ0hBQkxFKSAhPSAwID8gU3RhdGVtZW50LkNPTVBMQUlORURfRkFL
RV9SRUFDSEFCTEUgOiBTdGF0ZW1lbnQuTk9UX0NPTVBMQUlORUQ7DQorCQkJCWludCBpbml0aWFs
Q29tcGxhaW50TGV2ZWwgPSAoZmxvd0luZm8ucmVhY2hNb2RlKCkgJiAoRmxvd0luZm8uVU5SRUFD
SEFCTEV8Rmxvd0luZm8uVU5SRUFDSEFCTEVfQllfTlVMTEFOQUxZU0lTKSkgIT0gMCA/IFN0YXRl
bWVudC5DT01QTEFJTkVEX0ZBS0VfUkVBQ0hBQkxFIDogU3RhdGVtZW50Lk5PVF9DT01QTEFJTkVE
Ow0KIAkJCQlpbnQgY29tcGxhaW50TGV2ZWwgPSBpbml0aWFsQ29tcGxhaW50TGV2ZWw7DQogCQkJ
CWludCBmYWxsVGhyb3VnaFN0YXRlID0gQ0FTRTsNCiAJCQkJZm9yIChpbnQgaSA9IDAsIG1heCA9
IHRoaXMuc3RhdGVtZW50cy5sZW5ndGg7IGkgPCBtYXg7IGkrKykgew0KSW5kZXg6IGNvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvV2hpbGVTdGF0ZW1lbnQuamF2
YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9XaGls
ZVN0YXRlbWVudC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS42Ng0KZGlmZiAtdSAtcjEu
NjYgV2hpbGVTdGF0ZW1lbnQuamF2YQ0KLS0tIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9hc3QvV2hpbGVTdGF0ZW1lbnQuamF2YQkyMyBBdWcgMjAxMCAwODo0MToy
NSAtMDAwMAkxLjY2DQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2FzdC9XaGlsZVN0YXRlbWVudC5qYXZhCTI4IEZlYiAyMDExIDEyOjMyOjAzIC0wMDAwDQpA
QCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAo
YykgMjAwMCwgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCisgKiBDb3B5cmlnaHQg
KGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQogICogQWxsIHJpZ2h0
cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0K
ICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVi
bGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9u
LCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtNDEsNyArNDEsNyBAQA0KIA0KIAkJdGhpcy5icmVh
a0xhYmVsID0gbmV3IEJyYW5jaExhYmVsKCk7DQogCQl0aGlzLmNvbnRpbnVlTGFiZWwgPSBuZXcg
QnJhbmNoTGFiZWwoKTsNCi0JCWludCBpbml0aWFsQ29tcGxhaW50TGV2ZWwgPSAoZmxvd0luZm8u
cmVhY2hNb2RlKCkgJiBGbG93SW5mby5VTlJFQUNIQUJMRSkgIT0gMCA/IFN0YXRlbWVudC5DT01Q
TEFJTkVEX0ZBS0VfUkVBQ0hBQkxFIDogU3RhdGVtZW50Lk5PVF9DT01QTEFJTkVEOw0KKwkJaW50
IGluaXRpYWxDb21wbGFpbnRMZXZlbCA9IChmbG93SW5mby5yZWFjaE1vZGUoKSAmIChGbG93SW5m
by5VTlJFQUNIQUJMRXxGbG93SW5mby5VTlJFQUNIQUJMRV9CWV9OVUxMQU5BTFlTSVMpKSAhPSAw
ID8gU3RhdGVtZW50LkNPTVBMQUlORURfRkFLRV9SRUFDSEFCTEUgOiBTdGF0ZW1lbnQuTk9UX0NP
TVBMQUlORUQ7DQogDQogCQlDb25zdGFudCBjc3QgPSB0aGlzLmNvbmRpdGlvbi5jb25zdGFudDsN
CiAJCWJvb2xlYW4gaXNDb25kaXRpb25UcnVlID0gY3N0ICE9IENvbnN0YW50Lk5vdEFDb25zdGFu
dCAmJiBjc3QuYm9vbGVhblZhbHVlKCkgPT0gdHJ1ZTsNCkluZGV4OiBjb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxvdy9GbG93Q29udGV4dC5qYXZhDQo9PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxvdy9GbG93Q29udGV4dC5q
YXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS42OA0KZGlmZiAtdSAtcjEuNjggRmxvd0NvbnRl
eHQuamF2YQ0KLS0tIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9m
bG93L0Zsb3dDb250ZXh0LmphdmEJMSBTZXAgMjAxMCAxNTo0OTo1NyAtMDAwMAkxLjY4DQorKysg
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvRmxvd0NvbnRl
eHQuamF2YQkyOCBGZWIgMjAxMSAxMjozMjowMyAtMDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENv
cnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJv
Z3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFi
bGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAg
KiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBh
dA0KQEAgLTU2NSw3ICs1NjUsNyBAQA0KICAqLw0KIHB1YmxpYyB2b2lkIHJlY29yZFVzaW5nTnVs
bFJlZmVyZW5jZShTY29wZSBzY29wZSwgTG9jYWxWYXJpYWJsZUJpbmRpbmcgbG9jYWwsDQogCQlF
eHByZXNzaW9uIHJlZmVyZW5jZSwgaW50IGNoZWNrVHlwZSwgRmxvd0luZm8gZmxvd0luZm8pIHsN
Ci0JaWYgKChmbG93SW5mby50YWdCaXRzICYgRmxvd0luZm8uVU5SRUFDSEFCTEUpICE9IDAgfHwN
CisJaWYgKChmbG93SW5mby50YWdCaXRzICYgKEZsb3dJbmZvLlVOUkVBQ0hBQkxFfEZsb3dJbmZv
LlVOUkVBQ0hBQkxFX0JZX05VTExBTkFMWVNJUykpICE9IDAgfHwNCiAJCQlmbG93SW5mby5pc0Rl
ZmluaXRlbHlVbmtub3duKGxvY2FsKSkgew0KIAkJcmV0dXJuOw0KIAl9DQpAQCAtNTc4LDE0ICs1
NzgsMTQgQEANCiAJCQkJCQlzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5sb2NhbFZhcmlhYmxlUmVk
dW5kYW50Q2hlY2tPbk5vbk51bGwobG9jYWwsIHJlZmVyZW5jZSk7DQogCQkJCQl9DQogCQkJCQlp
ZiAoIWZsb3dJbmZvLmlzTWFya2VkQXNOdWxsT3JOb25OdWxsSW5Bc3NlcnRFeHByZXNzaW9uKGxv
Y2FsKSkgew0KLQkJCQkJCWZsb3dJbmZvLmluaXRzV2hlbkZhbHNlKCkuc2V0UmVhY2hNb2RlKEZs
b3dJbmZvLlVOUkVBQ0hBQkxFKTsNCisJCQkJCQlmbG93SW5mby5pbml0c1doZW5GYWxzZSgpLnNl
dFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRV9CWV9OVUxMQU5BTFlTSVMpOw0KIAkJCQkJ
fQ0KIAkJCQl9IGVsc2Ugew0KIAkJCQkJaWYgKCh0aGlzLnRhZ0JpdHMgJiBGbG93Q29udGV4dC5I
SURFX05VTExfQ09NUEFSSVNPTl9XQVJOSU5HKSA9PSAwKSB7DQogCQkJCQkJc2NvcGUucHJvYmxl
bVJlcG9ydGVyKCkubG9jYWxWYXJpYWJsZU5vbk51bGxDb21wYXJlZFRvTnVsbChsb2NhbCwgcmVm
ZXJlbmNlKTsNCiAJCQkJCX0NCiAJCQkJCWlmICghZmxvd0luZm8uaXNNYXJrZWRBc051bGxPck5v
bk51bGxJbkFzc2VydEV4cHJlc3Npb24obG9jYWwpKSB7DQotCQkJCQkJZmxvd0luZm8uaW5pdHNX
aGVuVHJ1ZSgpLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRSk7DQorCQkJCQkJZmxv
d0luZm8uaW5pdHNXaGVuVHJ1ZSgpLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRV9C
WV9OVUxMQU5BTFlTSVMpOw0KIAkJCQkJfQ0KIAkJCQl9DQogCQkJCXJldHVybjsNCkBAIC02MDks
NyArNjA5LDcgQEANCiAJCQkJCQkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkubG9jYWxWYXJpYWJs
ZVJlZHVuZGFudENoZWNrT25OdWxsKGxvY2FsLCByZWZlcmVuY2UpOw0KIAkJCQkJCX0NCiAJCQkJ
CQlpZiAoIWZsb3dJbmZvLmlzTWFya2VkQXNOdWxsT3JOb25OdWxsSW5Bc3NlcnRFeHByZXNzaW9u
KGxvY2FsKSkgew0KLQkJCQkJCQlmbG93SW5mby5pbml0c1doZW5GYWxzZSgpLnNldFJlYWNoTW9k
ZShGbG93SW5mby5VTlJFQUNIQUJMRSk7DQorCQkJCQkJCWZsb3dJbmZvLmluaXRzV2hlbkZhbHNl
KCkuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFX0JZX05VTExBTkFMWVNJUyk7DQog
CQkJCQkJfQ0KIAkJCQkJCXJldHVybjsNCiAJCQkJCWNhc2UgRmxvd0NvbnRleHQuSU5fQ09NUEFS
SVNPTl9OT05fTlVMTDoNCkBAIC02MjEsNyArNjIxLDcgQEANCiAJCQkJCQkJc2NvcGUucHJvYmxl
bVJlcG9ydGVyKCkubG9jYWxWYXJpYWJsZU51bGxDb21wYXJlZFRvTm9uTnVsbChsb2NhbCwgcmVm
ZXJlbmNlKTsNCiAJCQkJCQl9DQogCQkJCQkJaWYgKCFmbG93SW5mby5pc01hcmtlZEFzTnVsbE9y
Tm9uTnVsbEluQXNzZXJ0RXhwcmVzc2lvbihsb2NhbCkpIHsNCi0JCQkJCQkJZmxvd0luZm8uaW5p
dHNXaGVuVHJ1ZSgpLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRSk7DQorCQkJCQkJ
CWZsb3dJbmZvLmluaXRzV2hlblRydWUoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFC
TEVfQllfTlVMTEFOQUxZU0lTKTsNCiAJCQkJCQl9DQogCQkJCQkJcmV0dXJuOw0KIAkJCQkJY2Fz
ZSBGbG93Q29udGV4dC5JTl9BU1NJR05NRU5UOg0KSW5kZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L0Zsb3dJbmZvLmphdmENCj09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJD
UyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L0Zsb3dJbmZvLmphdmEsdg0KcmV0
cmlldmluZyByZXZpc2lvbiAxLjQ1DQpkaWZmIC11IC1yMS40NSBGbG93SW5mby5qYXZhDQotLS0g
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvRmxvd0luZm8u
amF2YQkxNiBEZWMgMjAxMCAxMzowMjozMCAtMDAwMAkxLjQ1DQorKysgY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvRmxvd0luZm8uamF2YQkyOCBGZWIgMjAx
MSAxMjozMjowMyAtMDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhl
cnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29t
cGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1z
IG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmll
cyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTI0LDYgKzI0LDgg
QEANCiAJcHVibGljIGZpbmFsIHN0YXRpYyBpbnQgUkVBQ0hBQkxFID0gMDsNCiAJcHVibGljIGZp
bmFsIHN0YXRpYyBpbnQgVU5SRUFDSEFCTEUgPSAxOw0KIAlwdWJsaWMgZmluYWwgc3RhdGljIGlu
dCBOVUxMX0ZMQUdfTUFTSyA9IDI7DQorCXB1YmxpYyBzdGF0aWMgZmluYWwgaW50IFVOUkVBQ0hB
QkxFX0JZX05VTExBTkFMWVNJUyA9IDQ7DQorCQ0KIA0KIAlwdWJsaWMgZmluYWwgc3RhdGljIGlu
dCBVTktOT1dOID0gMTsNCiAJcHVibGljIGZpbmFsIHN0YXRpYyBpbnQgTlVMTCA9IDI7DQpAQCAt
NDU2LDEzICs0NTgsMTMgQEANCiB9DQogDQogLyoqDQotICogUmV0dXJuIFJFQUNIQUJMRSBpZiB0
aGlzIGZsb3cgaW5mbyBpcyByZWFjaGFibGUsIFVOUkVBQ0hBQkxFDQorICogUmV0dXJuIFJFQUNI
QUJMRSBpZiB0aGlzIGZsb3cgaW5mbyBpcyByZWFjaGFibGUsIFVOUkVBQ0hBQkxFfFVOUkVBQ0hB
QkxFX0JZX05VTExBTkFMWVNJUw0KICAqIGVsc2UuDQotICogQHJldHVybiBSRUFDSEFCTEUgaWYg
dGhpcyBmbG93IGluZm8gaXMgcmVhY2hhYmxlLCBVTlJFQUNIQUJMRQ0KKyAqIEByZXR1cm4gUkVB
Q0hBQkxFIGlmIHRoaXMgZmxvdyBpbmZvIGlzIHJlYWNoYWJsZSwgVU5SRUFDSEFCTEV8VU5SRUFD
SEFCTEVfQllfTlVMTEFOQUxZU0lTDQogICogICAgICAgICBlbHNlDQogICovDQogcHVibGljIGlu
dCByZWFjaE1vZGUoKSB7DQotCXJldHVybiB0aGlzLnRhZ0JpdHMgJiBVTlJFQUNIQUJMRTsNCisJ
cmV0dXJuIHRoaXMudGFnQml0cyAmIChVTlJFQUNIQUJMRXxVTlJFQUNIQUJMRV9CWV9OVUxMQU5B
TFlTSVMpOw0KIH0NCiANCiAvKioNCkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvZmxvdy9VbmNvbmRpdGlvbmFsRmxvd0luZm8uamF2YQ0KPT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvVW5jb25kaXRpb25hbEZs
b3dJbmZvLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjcyDQpkaWZmIC11IC1yMS43MiBV
bmNvbmRpdGlvbmFsRmxvd0luZm8uamF2YQ0KLS0tIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9mbG93L1VuY29uZGl0aW9uYWxGbG93SW5mby5qYXZhCTE5IEphbiAy
MDExIDA1OjI5OjU0IC0wMDAwCTEuNzINCisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvZmxvdy9VbmNvbmRpdGlvbmFsRmxvd0luZm8uamF2YQkyOCBGZWIgMjAx
MSAxMjozMjowMyAtMDAwMA0KQEAgLTE1NjMsNiArMTU2MywxNyBAQA0KIAkJbmExLCBuYTIsIG5h
MywgbmE0LA0KIAkJbmIxLCBuYjIsIG5iMywgbmI0LA0KIAkJYjEsIGIyLCBiMywgYjQ7DQorICBp
ZiAoKG90aGVySW5pdHMudGFnQml0cyAmIEZsb3dJbmZvLlVOUkVBQ0hBQkxFX0JZX05VTExBTkFM
WVNJUykgIT0gMCkgew0KKwkgIG90aGVySGFzTnVsbHMgPSBmYWxzZTsgLy8gc2tpcCBtZXJnaW5n
LCBvdGhlckluaXRzIGlzIHVucmVhY2hhYmxlIGJ5IG51bGwgYW5hbHlzaXMNCisgIH0gZWxzZSB7
DQorCWlmICgodGhpcy50YWdCaXRzICYgRmxvd0luZm8uVU5SRUFDSEFCTEVfQllfTlVMTEFOQUxZ
U0lTKSAhPSAwKSB7IC8vIGRpcmVjdGx5IGNvcHkgaWYgdGhpcyBpcyB1bnJlYWNoYWJsZSBieSBu
dWxsIGFuYWx5c2lzDQorCQl0aGlzLm51bGxCaXQxID0gb3RoZXJJbml0cy5udWxsQml0MTsNCisJ
CXRoaXMubnVsbEJpdDIgPSBvdGhlckluaXRzLm51bGxCaXQyOw0KKwkJdGhpcy5udWxsQml0MyA9
IG90aGVySW5pdHMubnVsbEJpdDM7DQorCQl0aGlzLm51bGxCaXQ0ID0gb3RoZXJJbml0cy5udWxs
Qml0NDsNCisJCXRoaXNIYWROdWxscyA9IGZhbHNlOw0KKwkJdGhpc0hhc051bGxzID0gb3RoZXJI
YXNOdWxsczsNCisJfSBlbHNlDQogCWlmICh0aGlzSGFkTnVsbHMpIHsNCiAgICAgCWlmIChvdGhl
ckhhc051bGxzKSB7DQogICAgIAkJdGhpcy5udWxsQml0MSA9IChhMiA9IHRoaXMubnVsbEJpdDIp
ICYgKGEzID0gdGhpcy5udWxsQml0MykNCkBAIC0xNjM2LDYgKzE2NDcsNyBAQA0KICAgICAJCXRo
aXMubnVsbEJpdDMgIT0gMCB8fA0KICAgICAJCXRoaXMubnVsbEJpdDQgIT0gMDsNCiAJfQ0KKyAg
fQ0KIA0KIAkvLyB0cmVhdGluZyBleHRyYSBzdG9yYWdlDQogCWlmICh0aGlzLmV4dHJhICE9IG51
bGwgfHwgb3RoZXJJbml0cy5leHRyYSAhPSBudWxsKSB7DQpAQCAtMTg1OCw2ICsxODcwLDggQEAN
CiAJfQkNCiAJaWYgKHJlYWNoTW9kZSA9PSBSRUFDSEFCTEUgKSB7DQogCQl0aGlzLnRhZ0JpdHMg
Jj0gflVOUkVBQ0hBQkxFOw0KKwl9IGVsc2UgaWYgKHJlYWNoTW9kZSA9PSBVTlJFQUNIQUJMRV9C
WV9OVUxMQU5BTFlTSVMpIHsNCisJCXRoaXMudGFnQml0cyB8PSBVTlJFQUNIQUJMRV9CWV9OVUxM
QU5BTFlTSVM7IC8vIGRvbid0IGludGVyZmVyZSB3aXRoIGRlZmluaXRlIGFzc2lnbm1lbnQgYW5h
bHlzaXMNCiAJfSBlbHNlIHsNCiAJCWlmICgodGhpcy50YWdCaXRzICYgVU5SRUFDSEFCTEUpID09
IDApIHsNCiAJCQkvLyByZXNldCBvcHRpb25hbCBpbml0cyB3aGVuIGJlY29taW5nIHVucmVhY2hh
YmxlDQo=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>190035</attachid>
            <date>2011-03-01 08:37:00 -0500</date>
            <delta_ts>2011-03-01 13:46:00 -0500</delta_ts>
            <desc>proposed fix v2.0 + tests</desc>
            <filename>patch338234_v21.txt</filename>
            <type>text/plain</type>
            <size>20278</size>
            <attacher name="Ayushman Jain">amj87.iitr</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxvdy9G
aW5hbGx5Rmxvd0NvbnRleHQuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2Vj
bGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2Zsb3cvRmluYWxseUZsb3dDb250ZXh0LmphdmEsdg0KcmV0cmlldmluZyBy
ZXZpc2lvbiAxLjM1DQpkaWZmIC11IC1yMS4zNSBGaW5hbGx5Rmxvd0NvbnRleHQuamF2YQ0KLS0t
IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L0ZpbmFsbHlG
bG93Q29udGV4dC5qYXZhCTI1IEZlYiAyMDEwIDE1OjI3OjAwIC0wMDAwCTEuMzUNCisrKyBjb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxvdy9GaW5hbGx5Rmxvd0Nv
bnRleHQuamF2YQkxIE1hciAyMDExIDEzOjMyOjQ5IC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAv
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMCBJQk0g
Q29ycG9yYXRpb24gYW5kIG90aGVycy4NCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJN
IENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBw
cm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWls
YWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0K
ICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxl
IGF0DQpAQCAtMjI5LDE0ICsyMjksMTQgQEANCiAJCQkJCQkJCQlzY29wZS5wcm9ibGVtUmVwb3J0
ZXIoKS5sb2NhbFZhcmlhYmxlUmVkdW5kYW50Q2hlY2tPbk5vbk51bGwobG9jYWwsIHJlZmVyZW5j
ZSk7DQogCQkJCQkJCQl9DQogCQkJCQkJCQlpZiAoIWZsb3dJbmZvLmlzTWFya2VkQXNOdWxsT3JO
b25OdWxsSW5Bc3NlcnRFeHByZXNzaW9uKGxvY2FsKSkgew0KLQkJCQkJCQkJCWZsb3dJbmZvLmlu
aXRzV2hlbkZhbHNlKCkuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFKTsNCisJCQkJ
CQkJCQlmbG93SW5mby5pbml0c1doZW5GYWxzZSgpLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJF
QUNIQUJMRV9CWV9OVUxMQU5BTFlTSVMpOw0KIAkJCQkJCQkJfQ0KIAkJCQkJCQl9IGVsc2UgaWYg
KGNoZWNrVHlwZSA9PSAoQ0FOX09OTFlfTlVMTF9OT05fTlVMTCB8IElOX0NPTVBBUklTT05fTlVM
TCkpIHsNCiAJCQkJCQkJCWlmICgodGhpcy50YWdCaXRzICYgRmxvd0NvbnRleHQuSElERV9OVUxM
X0NPTVBBUklTT05fV0FSTklORykgPT0gMCkgew0KIAkJCQkJCQkJCXNjb3BlLnByb2JsZW1SZXBv
cnRlcigpLmxvY2FsVmFyaWFibGVOb25OdWxsQ29tcGFyZWRUb051bGwobG9jYWwsIHJlZmVyZW5j
ZSk7DQogCQkJCQkJCQl9DQogCQkJCQkJCQlpZiAoIWZsb3dJbmZvLmlzTWFya2VkQXNOdWxsT3JO
b25OdWxsSW5Bc3NlcnRFeHByZXNzaW9uKGxvY2FsKSkgew0KLQkJCQkJCQkJCWZsb3dJbmZvLmlu
aXRzV2hlblRydWUoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEUpOw0KKwkJCQkJ
CQkJCWZsb3dJbmZvLmluaXRzV2hlblRydWUoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFD
SEFCTEVfQllfTlVMTEFOQUxZU0lTKTsNCiAJCQkJCQkJCX0NCiAJCQkJCQkJfQ0KIAkJCQkJCQly
ZXR1cm47DQpAQCAtMjUyLDcgKzI1Miw3IEBADQogCQkJCQkJCQkJCXNjb3BlLnByb2JsZW1SZXBv
cnRlcigpLmxvY2FsVmFyaWFibGVSZWR1bmRhbnRDaGVja09uTnVsbChsb2NhbCwgcmVmZXJlbmNl
KTsNCiAJCQkJCQkJCQl9DQogCQkJCQkJCQkJaWYgKCFmbG93SW5mby5pc01hcmtlZEFzTnVsbE9y
Tm9uTnVsbEluQXNzZXJ0RXhwcmVzc2lvbihsb2NhbCkpIHsNCi0JCQkJCQkJCQkJZmxvd0luZm8u
aW5pdHNXaGVuRmFsc2UoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEUpOw0KKwkJ
CQkJCQkJCQlmbG93SW5mby5pbml0c1doZW5GYWxzZSgpLnNldFJlYWNoTW9kZShGbG93SW5mby5V
TlJFQUNIQUJMRV9CWV9OVUxMQU5BTFlTSVMpOw0KIAkJCQkJCQkJCX0NCiAJCQkJCQkJCQlyZXR1
cm47DQogCQkJCQkJCQljYXNlIEZsb3dDb250ZXh0LklOX0NPTVBBUklTT05fTk9OX05VTEw6DQpA
QCAtMjY0LDcgKzI2NCw3IEBADQogCQkJCQkJCQkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmxv
Y2FsVmFyaWFibGVOdWxsQ29tcGFyZWRUb05vbk51bGwobG9jYWwsIHJlZmVyZW5jZSk7DQogCQkJ
CQkJCQkJfQ0KIAkJCQkJCQkJCWlmICghZmxvd0luZm8uaXNNYXJrZWRBc051bGxPck5vbk51bGxJ
bkFzc2VydEV4cHJlc3Npb24obG9jYWwpKSB7DQotCQkJCQkJCQkJCWZsb3dJbmZvLmluaXRzV2hl
blRydWUoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEUpOw0KKwkJCQkJCQkJCQlm
bG93SW5mby5pbml0c1doZW5UcnVlKCkuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxF
X0JZX05VTExBTkFMWVNJUyk7DQogCQkJCQkJCQkJfQ0KIAkJCQkJCQkJCXJldHVybjsNCiAJCQkJ
CQkJCWNhc2UgRmxvd0NvbnRleHQuSU5fQVNTSUdOTUVOVDoNCkBAIC0zMTQsMTQgKzMxNCwxNCBA
QA0KIAkJCQkJCQkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmxvY2FsVmFyaWFibGVSZWR1bmRh
bnRDaGVja09uTm9uTnVsbChsb2NhbCwgcmVmZXJlbmNlKTsNCiAJCQkJCQkJCX0NCiAJCQkJCQkJ
CWlmICghZmxvd0luZm8uaXNNYXJrZWRBc051bGxPck5vbk51bGxJbkFzc2VydEV4cHJlc3Npb24o
bG9jYWwpKSB7DQotCQkJCQkJCQkJZmxvd0luZm8uaW5pdHNXaGVuRmFsc2UoKS5zZXRSZWFjaE1v
ZGUoRmxvd0luZm8uVU5SRUFDSEFCTEUpOw0KKwkJCQkJCQkJCWZsb3dJbmZvLmluaXRzV2hlbkZh
bHNlKCkuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFX0JZX05VTExBTkFMWVNJUyk7
DQogCQkJCQkJCQl9DQogCQkJCQkJCX0gZWxzZSB7DQogCQkJCQkJCQlpZiAoKHRoaXMudGFnQml0
cyAmIEZsb3dDb250ZXh0LkhJREVfTlVMTF9DT01QQVJJU09OX1dBUk5JTkcpID09IDApIHsNCiAJ
CQkJCQkJCQlzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5sb2NhbFZhcmlhYmxlTm9uTnVsbENvbXBh
cmVkVG9OdWxsKGxvY2FsLCByZWZlcmVuY2UpOw0KIAkJCQkJCQkJfQ0KIAkJCQkJCQkJaWYgKCFm
bG93SW5mby5pc01hcmtlZEFzTnVsbE9yTm9uTnVsbEluQXNzZXJ0RXhwcmVzc2lvbihsb2NhbCkp
IHsNCi0JCQkJCQkJCQlmbG93SW5mby5pbml0c1doZW5UcnVlKCkuc2V0UmVhY2hNb2RlKEZsb3dJ
bmZvLlVOUkVBQ0hBQkxFKTsNCisJCQkJCQkJCQlmbG93SW5mby5pbml0c1doZW5UcnVlKCkuc2V0
UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFX0JZX05VTExBTkFMWVNJUyk7DQogCQkJCQkJ
CQl9DQogCQkJCQkJCX0NCiAJCQkJCQkJcmV0dXJuOw0KQEAgLTM0Miw3ICszNDIsNyBAQA0KIAkJ
CQkJCQkJCQlzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5sb2NhbFZhcmlhYmxlUmVkdW5kYW50Q2hl
Y2tPbk51bGwobG9jYWwsIHJlZmVyZW5jZSk7DQogCQkJCQkJCQkJfQ0KIAkJCQkJCQkJCWlmICgh
Zmxvd0luZm8uaXNNYXJrZWRBc051bGxPck5vbk51bGxJbkFzc2VydEV4cHJlc3Npb24obG9jYWwp
KSB7DQotCQkJCQkJCQkJCWZsb3dJbmZvLmluaXRzV2hlbkZhbHNlKCkuc2V0UmVhY2hNb2RlKEZs
b3dJbmZvLlVOUkVBQ0hBQkxFKTsNCisJCQkJCQkJCQkJZmxvd0luZm8uaW5pdHNXaGVuRmFsc2Uo
KS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEVfQllfTlVMTEFOQUxZU0lTKTsNCiAJ
CQkJCQkJCQl9DQogCQkJCQkJCQkJcmV0dXJuOw0KIAkJCQkJCQkJY2FzZSBGbG93Q29udGV4dC5J
Tl9DT01QQVJJU09OX05PTl9OVUxMOg0KQEAgLTM1NCw3ICszNTQsNyBAQA0KIAkJCQkJCQkJCQlz
Y29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5sb2NhbFZhcmlhYmxlTnVsbENvbXBhcmVkVG9Ob25OdWxs
KGxvY2FsLCByZWZlcmVuY2UpOw0KIAkJCQkJCQkJCX0NCiAJCQkJCQkJCQlpZiAoIWZsb3dJbmZv
LmlzTWFya2VkQXNOdWxsT3JOb25OdWxsSW5Bc3NlcnRFeHByZXNzaW9uKGxvY2FsKSkgew0KLQkJ
CQkJCQkJCQlmbG93SW5mby5pbml0c1doZW5UcnVlKCkuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVO
UkVBQ0hBQkxFKTsNCisJCQkJCQkJCQkJZmxvd0luZm8uaW5pdHNXaGVuVHJ1ZSgpLnNldFJlYWNo
TW9kZShGbG93SW5mby5VTlJFQUNIQUJMRV9CWV9OVUxMQU5BTFlTSVMpOw0KIAkJCQkJCQkJCX0N
CiAJCQkJCQkJCQlyZXR1cm47DQogCQkJCQkJCQljYXNlIEZsb3dDb250ZXh0LklOX0FTU0lHTk1F
TlQ6DQpJbmRleDogY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zs
b3cvRmxvd0NvbnRleHQuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlw
c2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2Zsb3cvRmxvd0NvbnRleHQuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEu
NjgNCmRpZmYgLXUgLXIxLjY4IEZsb3dDb250ZXh0LmphdmENCi0tLSBjb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxvdy9GbG93Q29udGV4dC5qYXZhCTEgU2VwIDIw
MTAgMTU6NDk6NTcgLTAwMDAJMS42OA0KKysrIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9mbG93L0Zsb3dDb250ZXh0LmphdmEJMSBNYXIgMjAxMSAxMzozMjo0OSAt
MDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5
cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29w
eXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFs
bCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRl
cmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xp
cHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3Ry
aWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTU3OCwxNCArNTc4LDE0IEBADQogCQkJ
CQkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkubG9jYWxWYXJpYWJsZVJlZHVuZGFudENoZWNrT25O
b25OdWxsKGxvY2FsLCByZWZlcmVuY2UpOw0KIAkJCQkJfQ0KIAkJCQkJaWYgKCFmbG93SW5mby5p
c01hcmtlZEFzTnVsbE9yTm9uTnVsbEluQXNzZXJ0RXhwcmVzc2lvbihsb2NhbCkpIHsNCi0JCQkJ
CQlmbG93SW5mby5pbml0c1doZW5GYWxzZSgpLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNI
QUJMRSk7DQorCQkJCQkJZmxvd0luZm8uaW5pdHNXaGVuRmFsc2UoKS5zZXRSZWFjaE1vZGUoRmxv
d0luZm8uVU5SRUFDSEFCTEVfQllfTlVMTEFOQUxZU0lTKTsNCiAJCQkJCX0NCiAJCQkJfSBlbHNl
IHsNCiAJCQkJCWlmICgodGhpcy50YWdCaXRzICYgRmxvd0NvbnRleHQuSElERV9OVUxMX0NPTVBB
UklTT05fV0FSTklORykgPT0gMCkgew0KIAkJCQkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmxv
Y2FsVmFyaWFibGVOb25OdWxsQ29tcGFyZWRUb051bGwobG9jYWwsIHJlZmVyZW5jZSk7DQogCQkJ
CQl9DQogCQkJCQlpZiAoIWZsb3dJbmZvLmlzTWFya2VkQXNOdWxsT3JOb25OdWxsSW5Bc3NlcnRF
eHByZXNzaW9uKGxvY2FsKSkgew0KLQkJCQkJCWZsb3dJbmZvLmluaXRzV2hlblRydWUoKS5zZXRS
ZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEUpOw0KKwkJCQkJCWZsb3dJbmZvLmluaXRzV2hl
blRydWUoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEVfQllfTlVMTEFOQUxZU0lT
KTsNCiAJCQkJCX0NCiAJCQkJfQ0KIAkJCQlyZXR1cm47DQpAQCAtNjA5LDcgKzYwOSw3IEBADQog
CQkJCQkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmxvY2FsVmFyaWFibGVSZWR1bmRhbnRDaGVj
a09uTnVsbChsb2NhbCwgcmVmZXJlbmNlKTsNCiAJCQkJCQl9DQogCQkJCQkJaWYgKCFmbG93SW5m
by5pc01hcmtlZEFzTnVsbE9yTm9uTnVsbEluQXNzZXJ0RXhwcmVzc2lvbihsb2NhbCkpIHsNCi0J
CQkJCQkJZmxvd0luZm8uaW5pdHNXaGVuRmFsc2UoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5S
RUFDSEFCTEUpOw0KKwkJCQkJCQlmbG93SW5mby5pbml0c1doZW5GYWxzZSgpLnNldFJlYWNoTW9k
ZShGbG93SW5mby5VTlJFQUNIQUJMRV9CWV9OVUxMQU5BTFlTSVMpOw0KIAkJCQkJCX0NCiAJCQkJ
CQlyZXR1cm47DQogCQkJCQljYXNlIEZsb3dDb250ZXh0LklOX0NPTVBBUklTT05fTk9OX05VTEw6
DQpAQCAtNjIxLDcgKzYyMSw3IEBADQogCQkJCQkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmxv
Y2FsVmFyaWFibGVOdWxsQ29tcGFyZWRUb05vbk51bGwobG9jYWwsIHJlZmVyZW5jZSk7DQogCQkJ
CQkJfQ0KIAkJCQkJCWlmICghZmxvd0luZm8uaXNNYXJrZWRBc051bGxPck5vbk51bGxJbkFzc2Vy
dEV4cHJlc3Npb24obG9jYWwpKSB7DQotCQkJCQkJCWZsb3dJbmZvLmluaXRzV2hlblRydWUoKS5z
ZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEUpOw0KKwkJCQkJCQlmbG93SW5mby5pbml0
c1doZW5UcnVlKCkuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFX0JZX05VTExBTkFM
WVNJUyk7DQogCQkJCQkJfQ0KIAkJCQkJCXJldHVybjsNCiAJCQkJCWNhc2UgRmxvd0NvbnRleHQu
SU5fQVNTSUdOTUVOVDoNCkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvZmxvdy9GbG93SW5mby5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jv
b3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvZmxvdy9GbG93SW5mby5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNp
b24gMS40NQ0KZGlmZiAtdSAtcjEuNDUgRmxvd0luZm8uamF2YQ0KLS0tIGNvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L0Zsb3dJbmZvLmphdmEJMTYgRGVjIDIw
MTAgMTM6MDI6MzAgLTAwMDAJMS40NQ0KKysrIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9mbG93L0Zsb3dJbmZvLmphdmEJMSBNYXIgMjAxMSAxMzozMjo0OSAtMDAw
MA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmln
aHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCBy
aWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlh
bHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNl
IFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1
dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTIyLDggKzIyLDIzIEBADQogDQogCXB1Ymxp
YyBpbnQgdGFnQml0czsgLy8gUkVBQ0hBQkxFIGJ5IGRlZmF1bHQNCiAJcHVibGljIGZpbmFsIHN0
YXRpYyBpbnQgUkVBQ0hBQkxFID0gMDsNCi0JcHVibGljIGZpbmFsIHN0YXRpYyBpbnQgVU5SRUFD
SEFCTEUgPSAxOw0KKwkvKiB1bnJlYWNoYWJsZSBjb2RlIGFzIGRlZmluZWQgaW4gdGhlIGxhbmd1
YWdlIHNwZWMgDQorCSAqIGVnLiB3aGlsZSAodHJ1ZSk7DQorCSAqICAgICBpKys7ICAtLT4gdW5y
ZWFjaGFibGUgY29kZSANCisJICovDQorCXB1YmxpYyBmaW5hbCBzdGF0aWMgaW50IFVOUkVBQ0hB
QkxFX09SX0RFQUQgPSAxOw0KIAlwdWJsaWMgZmluYWwgc3RhdGljIGludCBOVUxMX0ZMQUdfTUFT
SyA9IDI7DQorCS8qIHVucmVhY2hhYmxlIGNvZGUgYXMgaW5mZXJyZWQgYnkgbnVsbCBhbmFseXNp
cw0KKwkgKiBlZy4gc3RyID0gbnVsbDsNCisJICogICAgIGlmIChzdHIgIT0gbnVsbCkgew0KKwkg
KiAgICAgICAgLy8gZGVhZCBjb2RlDQorCSAqICAgICB9DQorCSAqLw0KKwlwdWJsaWMgZmluYWwg
c3RhdGljIGludCBVTlJFQUNIQUJMRV9CWV9OVUxMQU5BTFlTSVMgPSA0Ow0KKwkvKg0KKwkgKiBj
b2RlIHVucmVhY2hhYmxlIGluIGFueSBmYXNoaW9uDQorCSAqLw0KKwlwdWJsaWMgZmluYWwgc3Rh
dGljIGludCBVTlJFQUNIQUJMRSA9IFVOUkVBQ0hBQkxFX09SX0RFQUQgfCBVTlJFQUNIQUJMRV9C
WV9OVUxMQU5BTFlTSVM7DQogDQogCXB1YmxpYyBmaW5hbCBzdGF0aWMgaW50IFVOS05PV04gPSAx
Ow0KIAlwdWJsaWMgZmluYWwgc3RhdGljIGludCBOVUxMID0gMjsNCkBAIC00NTYsOSArNDcxLDkg
QEANCiB9DQogDQogLyoqDQotICogUmV0dXJuIFJFQUNIQUJMRSBpZiB0aGlzIGZsb3cgaW5mbyBp
cyByZWFjaGFibGUsIFVOUkVBQ0hBQkxFDQorICogUmV0dXJuIFJFQUNIQUJMRSBpZiB0aGlzIGZs
b3cgaW5mbyBpcyByZWFjaGFibGUsIFVOUkVBQ0hBQkxFfFVOUkVBQ0hBQkxFX0JZX05VTExBTkFM
WVNJUw0KICAqIGVsc2UuDQotICogQHJldHVybiBSRUFDSEFCTEUgaWYgdGhpcyBmbG93IGluZm8g
aXMgcmVhY2hhYmxlLCBVTlJFQUNIQUJMRQ0KKyAqIEByZXR1cm4gUkVBQ0hBQkxFIGlmIHRoaXMg
ZmxvdyBpbmZvIGlzIHJlYWNoYWJsZSwgVU5SRUFDSEFCTEV8VU5SRUFDSEFCTEVfQllfTlVMTEFO
QUxZU0lTDQogICogICAgICAgICBlbHNlDQogICovDQogcHVibGljIGludCByZWFjaE1vZGUoKSB7
DQpJbmRleDogY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cv
TG9vcGluZ0Zsb3dDb250ZXh0LmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9l
Y2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9mbG93L0xvb3BpbmdGbG93Q29udGV4dC5qYXZhLHYNCnJldHJpZXZpbmcg
cmV2aXNpb24gMS41Mg0KZGlmZiAtdSAtcjEuNTIgTG9vcGluZ0Zsb3dDb250ZXh0LmphdmENCi0t
LSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxvdy9Mb29waW5n
Rmxvd0NvbnRleHQuamF2YQkxNiBGZWIgMjAxMSAxODo1Nzo0OCAtMDAwMAkxLjUyDQorKysgY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvTG9vcGluZ0Zsb3dD
b250ZXh0LmphdmEJMSBNYXIgMjAxMSAxMzozMjo0OSAtMDAwMA0KQEAgLTQ5MywxNCArNDkzLDE0
IEBADQogCQkJCQkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkubG9jYWxWYXJpYWJsZVJlZHVuZGFu
dENoZWNrT25Ob25OdWxsKGxvY2FsLCByZWZlcmVuY2UpOw0KIAkJCQkJfQ0KIAkJCQkJaWYgKCFm
bG93SW5mby5pc01hcmtlZEFzTnVsbE9yTm9uTnVsbEluQXNzZXJ0RXhwcmVzc2lvbihsb2NhbCkp
IHsNCi0JCQkJCQlmbG93SW5mby5pbml0c1doZW5GYWxzZSgpLnNldFJlYWNoTW9kZShGbG93SW5m
by5VTlJFQUNIQUJMRSk7DQorCQkJCQkJZmxvd0luZm8uaW5pdHNXaGVuRmFsc2UoKS5zZXRSZWFj
aE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEVfQllfTlVMTEFOQUxZU0lTKTsNCiAJCQkJCX0NCiAJ
CQkJfSBlbHNlIHsNCiAJCQkJCWlmICgodGhpcy50YWdCaXRzICYgRmxvd0NvbnRleHQuSElERV9O
VUxMX0NPTVBBUklTT05fV0FSTklORykgPT0gMCkgew0KIAkJCQkJCXNjb3BlLnByb2JsZW1SZXBv
cnRlcigpLmxvY2FsVmFyaWFibGVOb25OdWxsQ29tcGFyZWRUb051bGwobG9jYWwsIHJlZmVyZW5j
ZSk7DQogCQkJCQl9DQogCQkJCQlpZiAoIWZsb3dJbmZvLmlzTWFya2VkQXNOdWxsT3JOb25OdWxs
SW5Bc3NlcnRFeHByZXNzaW9uKGxvY2FsKSkgew0KLQkJCQkJCWZsb3dJbmZvLmluaXRzV2hlblRy
dWUoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEUpOw0KKwkJCQkJCWZsb3dJbmZv
LmluaXRzV2hlblRydWUoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEVfQllfTlVM
TEFOQUxZU0lTKTsNCiAJCQkJCX0NCiAJCQkJfQ0KIAkJCX0gZWxzZSBpZiAoZmxvd0luZm8uaXNE
ZWZpbml0ZWx5TnVsbChsb2NhbCkpIHsNCkBAIC01MDksMTQgKzUwOSwxNCBAQA0KIAkJCQkJCXNj
b3BlLnByb2JsZW1SZXBvcnRlcigpLmxvY2FsVmFyaWFibGVSZWR1bmRhbnRDaGVja09uTnVsbChs
b2NhbCwgcmVmZXJlbmNlKTsNCiAJCQkJCX0NCiAJCQkJCWlmICghZmxvd0luZm8uaXNNYXJrZWRB
c051bGxPck5vbk51bGxJbkFzc2VydEV4cHJlc3Npb24obG9jYWwpKSB7DQotCQkJCQkJZmxvd0lu
Zm8uaW5pdHNXaGVuRmFsc2UoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEUpOw0K
KwkJCQkJCWZsb3dJbmZvLmluaXRzV2hlbkZhbHNlKCkuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVO
UkVBQ0hBQkxFX0JZX05VTExBTkFMWVNJUyk7DQogCQkJCQl9DQogCQkJCX0gZWxzZSB7DQogCQkJ
CQlpZiAoKHRoaXMudGFnQml0cyAmIEZsb3dDb250ZXh0LkhJREVfTlVMTF9DT01QQVJJU09OX1dB
Uk5JTkcpID09IDApIHsNCiAJCQkJCQlzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5sb2NhbFZhcmlh
YmxlTnVsbENvbXBhcmVkVG9Ob25OdWxsKGxvY2FsLCByZWZlcmVuY2UpOw0KIAkJCQkJfQ0KIAkJ
CQkJaWYgKCFmbG93SW5mby5pc01hcmtlZEFzTnVsbE9yTm9uTnVsbEluQXNzZXJ0RXhwcmVzc2lv
bihsb2NhbCkpIHsNCi0JCQkJCQlmbG93SW5mby5pbml0c1doZW5UcnVlKCkuc2V0UmVhY2hNb2Rl
KEZsb3dJbmZvLlVOUkVBQ0hBQkxFKTsNCisJCQkJCQlmbG93SW5mby5pbml0c1doZW5UcnVlKCku
c2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFX0JZX05VTExBTkFMWVNJUyk7DQogCQkJ
CQl9DQogCQkJCX0NCiAJCQl9IGVsc2UgaWYgKHRoaXMudXBzdHJlYW1OdWxsRmxvd0luZm8uaXNE
ZWZpbml0ZWx5Tm9uTnVsbChsb2NhbCkgJiYgIWZsb3dJbmZvLmlzUG90ZW50aWFsbHlOdWxsKGxv
Y2FsKSAmJiAhZmxvd0luZm8uaXNQb3RlbnRpYWxseVVua25vd24obG9jYWwpKSB7ICAgIA0KQEAg
LTU1NCw3ICs1NTQsNyBAQA0KIAkJCQkJCQlzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5sb2NhbFZh
cmlhYmxlUmVkdW5kYW50Q2hlY2tPbk51bGwobG9jYWwsIHJlZmVyZW5jZSk7DQogCQkJCQkJfQ0K
IAkJCQkJCWlmICghZmxvd0luZm8uaXNNYXJrZWRBc051bGxPck5vbk51bGxJbkFzc2VydEV4cHJl
c3Npb24obG9jYWwpKSB7DQotCQkJCQkJCWZsb3dJbmZvLmluaXRzV2hlbkZhbHNlKCkuc2V0UmVh
Y2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFKTsNCisJCQkJCQkJZmxvd0luZm8uaW5pdHNXaGVu
RmFsc2UoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEVfQllfTlVMTEFOQUxZU0lT
KTsNCiAJCQkJCQl9DQogCQkJCQkJcmV0dXJuOw0KIAkJCQkJY2FzZSBGbG93Q29udGV4dC5JTl9D
T01QQVJJU09OX05PTl9OVUxMOg0KQEAgLTU2Niw3ICs1NjYsNyBAQA0KIAkJCQkJCQlzY29wZS5w
cm9ibGVtUmVwb3J0ZXIoKS5sb2NhbFZhcmlhYmxlTnVsbENvbXBhcmVkVG9Ob25OdWxsKGxvY2Fs
LCByZWZlcmVuY2UpOw0KIAkJCQkJCX0NCiAJCQkJCQlpZiAoIWZsb3dJbmZvLmlzTWFya2VkQXNO
dWxsT3JOb25OdWxsSW5Bc3NlcnRFeHByZXNzaW9uKGxvY2FsKSkgew0KLQkJCQkJCQlmbG93SW5m
by5pbml0c1doZW5UcnVlKCkuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFKTsNCisJ
CQkJCQkJZmxvd0luZm8uaW5pdHNXaGVuVHJ1ZSgpLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJF
QUNIQUJMRV9CWV9OVUxMQU5BTFlTSVMpOw0KIAkJCQkJCX0NCiAJCQkJCQlyZXR1cm47DQogCQkJ
CQljYXNlIEZsb3dDb250ZXh0LklOX0FTU0lHTk1FTlQ6DQpJbmRleDogY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvVW5jb25kaXRpb25hbEZsb3dJbmZvLmph
dmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L1Vu
Y29uZGl0aW9uYWxGbG93SW5mby5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS43Mg0KZGlm
ZiAtdSAtcjEuNzIgVW5jb25kaXRpb25hbEZsb3dJbmZvLmphdmENCi0tLSBjb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxvdy9VbmNvbmRpdGlvbmFsRmxvd0luZm8u
amF2YQkxOSBKYW4gMjAxMSAwNToyOTo1NCAtMDAwMAkxLjcyDQorKysgY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvVW5jb25kaXRpb25hbEZsb3dJbmZvLmph
dmEJMSBNYXIgMjAxMSAxMzozMjo0OSAtMDAwMA0KQEAgLTczMSw3ICs3MzEsNyBAQA0KIGZpbmFs
IHB1YmxpYyBib29sZWFuIGlzRGVmaW5pdGVseUFzc2lnbmVkKEZpZWxkQmluZGluZyBmaWVsZCkg
ew0KIAkvLyBNaXJyb3JlZCBpbiBDb2RlU3RyZWFtLmlzRGVmaW5pdGVseUFzc2lnbmVkKC4uKQ0K
IAkvLyBkbyBub3Qgd2FudCB0byBjb21wbGFpbiBpbiB1bnJlYWNoYWJsZSBjb2RlDQotCWlmICgo
dGhpcy50YWdCaXRzICYgVU5SRUFDSEFCTEUpICE9IDApIHsNCisJaWYgKCh0aGlzLnRhZ0JpdHMg
JiBVTlJFQUNIQUJMRV9PUl9ERUFEKSAhPSAwKSB7DQogCQlyZXR1cm4gdHJ1ZTsNCiAJfQ0KIAly
ZXR1cm4gaXNEZWZpbml0ZWx5QXNzaWduZWQoZmllbGQuaWQpOw0KQEAgLTczOSw3ICs3MzksNyBA
QA0KIA0KIGZpbmFsIHB1YmxpYyBib29sZWFuIGlzRGVmaW5pdGVseUFzc2lnbmVkKExvY2FsVmFy
aWFibGVCaW5kaW5nIGxvY2FsKSB7DQogCS8vIGRvIG5vdCB3YW50IHRvIGNvbXBsYWluIGluIHVu
cmVhY2hhYmxlIGNvZGUgaWYgbG9jYWwgZGVjbGFyZWQgaW4gcmVhY2hhYmxlIGNvZGUNCi0JaWYg
KCh0aGlzLnRhZ0JpdHMgJiBVTlJFQUNIQUJMRSkgIT0gMCAmJiAobG9jYWwuZGVjbGFyYXRpb24u
Yml0cyAmIEFTVE5vZGUuSXNMb2NhbERlY2xhcmF0aW9uUmVhY2hhYmxlKSAhPSAwKSB7DQorCWlm
ICgodGhpcy50YWdCaXRzICYgVU5SRUFDSEFCTEVfT1JfREVBRCkgIT0gMCAmJiAobG9jYWwuZGVj
bGFyYXRpb24uYml0cyAmIEFTVE5vZGUuSXNMb2NhbERlY2xhcmF0aW9uUmVhY2hhYmxlKSAhPSAw
KSB7DQogCQlyZXR1cm4gdHJ1ZTsNCiAJfQ0KIAlyZXR1cm4gaXNEZWZpbml0ZWx5QXNzaWduZWQo
bG9jYWwuaWQgKyB0aGlzLm1heEZpZWxkQ291bnQpOw0KQEAgLTE1NjMsNiArMTU2MywxNyBAQA0K
IAkJbmExLCBuYTIsIG5hMywgbmE0LA0KIAkJbmIxLCBuYjIsIG5iMywgbmI0LA0KIAkJYjEsIGIy
LCBiMywgYjQ7DQorICBpZiAoKG90aGVySW5pdHMudGFnQml0cyAmIEZsb3dJbmZvLlVOUkVBQ0hB
QkxFX0JZX05VTExBTkFMWVNJUykgIT0gMCkgew0KKwkgIG90aGVySGFzTnVsbHMgPSBmYWxzZTsg
Ly8gc2tpcCBtZXJnaW5nLCBvdGhlckluaXRzIGlzIHVucmVhY2hhYmxlIGJ5IG51bGwgYW5hbHlz
aXMNCisgIH0gZWxzZSB7DQorCWlmICgodGhpcy50YWdCaXRzICYgRmxvd0luZm8uVU5SRUFDSEFC
TEVfQllfTlVMTEFOQUxZU0lTKSAhPSAwKSB7IC8vIGRpcmVjdGx5IGNvcHkgaWYgdGhpcyBpcyB1
bnJlYWNoYWJsZSBieSBudWxsIGFuYWx5c2lzDQorCQl0aGlzLm51bGxCaXQxID0gb3RoZXJJbml0
cy5udWxsQml0MTsNCisJCXRoaXMubnVsbEJpdDIgPSBvdGhlckluaXRzLm51bGxCaXQyOw0KKwkJ
dGhpcy5udWxsQml0MyA9IG90aGVySW5pdHMubnVsbEJpdDM7DQorCQl0aGlzLm51bGxCaXQ0ID0g
b3RoZXJJbml0cy5udWxsQml0NDsNCisJCXRoaXNIYWROdWxscyA9IGZhbHNlOw0KKwkJdGhpc0hh
c051bGxzID0gb3RoZXJIYXNOdWxsczsNCisJfSBlbHNlDQogCWlmICh0aGlzSGFkTnVsbHMpIHsN
CiAgICAgCWlmIChvdGhlckhhc051bGxzKSB7DQogICAgIAkJdGhpcy5udWxsQml0MSA9IChhMiA9
IHRoaXMubnVsbEJpdDIpICYgKGEzID0gdGhpcy5udWxsQml0MykNCkBAIC0xNjM2LDYgKzE2NDcs
NyBAQA0KICAgICAJCXRoaXMubnVsbEJpdDMgIT0gMCB8fA0KICAgICAJCXRoaXMubnVsbEJpdDQg
IT0gMDsNCiAJfQ0KKyAgfQ0KIA0KIAkvLyB0cmVhdGluZyBleHRyYSBzdG9yYWdlDQogCWlmICh0
aGlzLmV4dHJhICE9IG51bGwgfHwgb3RoZXJJbml0cy5leHRyYSAhPSBudWxsKSB7DQpAQCAtMTg1
OCw2ICsxODcwLDggQEANCiAJfQkNCiAJaWYgKHJlYWNoTW9kZSA9PSBSRUFDSEFCTEUgKSB7DQog
CQl0aGlzLnRhZ0JpdHMgJj0gflVOUkVBQ0hBQkxFOw0KKwl9IGVsc2UgaWYgKHJlYWNoTW9kZSA9
PSBVTlJFQUNIQUJMRV9CWV9OVUxMQU5BTFlTSVMpIHsNCisJCXRoaXMudGFnQml0cyB8PSBVTlJF
QUNIQUJMRV9CWV9OVUxMQU5BTFlTSVM7IC8vIGRvbid0IGludGVyZmVyZSB3aXRoIGRlZmluaXRl
IGFzc2lnbm1lbnQgYW5hbHlzaXMNCiAJfSBlbHNlIHsNCiAJCWlmICgodGhpcy50YWdCaXRzICYg
VU5SRUFDSEFCTEUpID09IDApIHsNCiAJCQkvLyByZXNldCBvcHRpb25hbCBpbml0cyB3aGVuIGJl
Y29taW5nIHVucmVhY2hhYmxlDQojUCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxl
cg0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNz
aW9uL0Zsb3dBbmFseXNpc1Rlc3QuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290
L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vRmxvd0FuYWx5c2lzVGVzdC5q
YXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS40Ng0KZGlmZiAtdSAtcjEuNDYgRmxvd0FuYWx5
c2lzVGVzdC5qYXZhDQotLS0gc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVy
L3JlZ3Jlc3Npb24vRmxvd0FuYWx5c2lzVGVzdC5qYXZhCTEgU2VwIDIwMTAgMTU6NDk6MzAgLTAw
MDAJMS40Ng0KKysrIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdy
ZXNzaW9uL0Zsb3dBbmFseXNpc1Rlc3QuamF2YQkxIE1hciAyMDExIDEzOjMyOjUyIC0wMDAwDQpA
QCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAo
YykgMjAwNSwgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCisgKiBDb3B5cmlnaHQg
KGMpIDIwMDUsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQogICogQWxsIHJpZ2h0
cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0K
ICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVi
bGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9u
LCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtMjksNyArMjksOSBAQA0KIHB1YmxpYyBjbGFzcyBG
bG93QW5hbHlzaXNUZXN0IGV4dGVuZHMgQWJzdHJhY3RSZWdyZXNzaW9uVGVzdCB7DQogc3RhdGlj
IHsNCiAvLwlURVNUU19OVU1CRVJTID0gbmV3IGludFtdIHsgNjkgfTsNCisvLwlURVNUU19OQU1F
UyA9IG5ldyBTdHJpbmdbXSB7ICJ0ZXN0QnVnMzM4MjM0IiB9Ow0KIH0NCisNCiBwdWJsaWMgRmxv
d0FuYWx5c2lzVGVzdChTdHJpbmcgbmFtZSkgew0KIAlzdXBlcihuYW1lKTsNCiB9DQpAQCAtMjI0
Niw2ICsyMjQ4LDkyIEBADQogCQkiRGVhZCBjb2RlXG4iICsgDQogCQkiLS0tLS0tLS0tLVxuIik7
DQogfQ0KKw0KKy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9p
ZD0zMzgyMzQNCisvLyBXYXJuIHVuaW5pdGlhbGl6ZWQgdmFyaWFibGUgaW4gZGVhZGNvZGUgaWYg
ZGVhZGNvZGUgaGFzIGJlZW4gaW5mZXJyZWQNCisvLyBieSBudWxsIGFuYWx5c2lzDQorcHVibGlj
IHZvaWQgdGVzdEJ1ZzMzODIzNGEoKSB7DQorCXRoaXMucnVuTmVnYXRpdmVUZXN0KA0KKwkJbmV3
IFN0cmluZ1tdIHsNCisJCQkiWC5qYXZhIiwNCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArDQor
CQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iICsgDQor
CQkJIiAgICAgICAgaW50IGk7XG4iICsgDQorCQkJIiAgICAgICAgU3RyaW5nIHN0ciA9IG51bGw7
XG4iICsgDQorCQkJIiAgICAgICAgaWYgKHN0ciAhPSBudWxsKVxuIiArIA0KKwkJCSIgICAgICAg
ICAgICBpKys7ICAgIFxuIiArIA0KKwkJCSIgICAgfVxuIiArIA0KKwkJCSJ9XG4iDQorCQl9LA0K
KwkJIi0tLS0tLS0tLS1cbiIgKyANCisJCSIxLiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSA2
KVxuIiArIA0KKwkJIglpKys7ICAgIFxuIiArIA0KKwkJIgleXl5cbiIgKyANCisJCSJEZWFkIGNv
ZGVcbiIgKyANCisJCSItLS0tLS0tLS0tXG4iICsgDQorCQkiMi4gRVJST1IgaW4gWC5qYXZhIChh
dCBsaW5lIDYpXG4iICsgDQorCQkiCWkrKzsgICAgXG4iICsgDQorCQkiCV5cbiIgKyANCisJCSJU
aGUgbG9jYWwgdmFyaWFibGUgaSBtYXkgbm90IGhhdmUgYmVlbiBpbml0aWFsaXplZFxuIiArIA0K
KwkJIi0tLS0tLS0tLS1cbiIpOw0KK30NCisNCisvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzM4MjM0DQorLy8gRG9uJ3Qgd2FybiB1bmluaXRpYWxpemVk
IHZhcmlhYmxlIGluIGRlYWRjb2RlIGlmIGRlYWRjb2RlIGhhcyBub3QgYmVlbiBpbmZlcnJlZA0K
Ky8vIGJ5IG51bGwgYW5hbHlzaXMNCitwdWJsaWMgdm9pZCB0ZXN0QnVnMzM4MjM0YigpIHsNCisJ
dGhpcy5ydW5Db25mb3JtVGVzdCgNCisJCW5ldyBTdHJpbmdbXSB7DQorCQkJIlguamF2YSIsDQor
CQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKw0KKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1h
aW4oU3RyaW5nW10gYXJncykge1xuIiArIA0KKwkJCSIgICAgICAgIGludCBpO1xuIiArIA0KKwkJ
CSIgICAgICAgIGw6IHtcbiIgKw0KKwkJCSIJCQlpZihmYWxzZSlcbiIgKw0KKwkJCSIJCQkJYnJl
YWsgbDtcbiIgKyANCisJCQkiICAgICAgICAJcmV0dXJuO1xuIiArDQorCQkJIgkJIH1cbiIgKyAN
CisJCQkiICAgICAgICBpKys7ICAgIFxuIiArIA0KKwkJCSIgICAgfVxuIiArIA0KKwkJCSJ9XG4i
DQorCQl9LA0KKwkJIiIpOw0KK30NCisNCisvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9MzM4MjM0DQorLy8gV2FybiB1bmluaXRpYWxpemVkIGZpZWxkIGlu
IGRlYWRjb2RlIGlmIGRlYWRjb2RlIGhhcyBiZWVuIGluZmVycmVkDQorLy8gYnkgbnVsbCBhbmFs
eXNpcw0KK3B1YmxpYyB2b2lkIHRlc3RCdWczMzgyMzRjKCkgew0KKwl0aGlzLnJ1bk5lZ2F0aXZl
VGVzdCgNCisJCW5ldyBTdHJpbmdbXSB7DQorCQkJIlguamF2YSIsDQorCQkJInB1YmxpYyBjbGFz
cyBYIHtcbiIgKw0KKwkJCSIgICAgcHVibGljIGZpbmFsIGludCBmaWVsZDE7XG4iICsNCisJCQki
ICAgIHtcbiIgKyANCisJCQkiICAgICAgICBpbnQgaTtcbiIgKyANCisJCQkiICAgICAgICBTdHJp
bmcgc3RyID0gbnVsbDtcbiIgKw0KKwkJCSIJCSBpZihzdHIgIT0gbnVsbClcbiIgKw0KKwkJCSIJ
CQlpID0gZmllbGQxO1xuIiArIA0KKwkJCSIgICAgfVxuIiArIA0KKwkJCSJ9XG4iDQorCQl9LA0K
KwkJIi0tLS0tLS0tLS1cbiIgKyANCisJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMSlc
biIgKyANCisJCSIJcHVibGljIGNsYXNzIFgge1xuIiArIA0KKwkJIgkgICAgICAgICAgICAgXlxu
IiArIA0KKwkJIlRoZSBibGFuayBmaW5hbCBmaWVsZCBmaWVsZDEgbWF5IG5vdCBoYXZlIGJlZW4g
aW5pdGlhbGl6ZWRcbiIgKyANCisJCSItLS0tLS0tLS0tXG4iICsgDQorCQkiMi4gV0FSTklORyBp
biBYLmphdmEgKGF0IGxpbmUgNylcbiIgKyANCisJCSIJaSA9IGZpZWxkMTtcbiIgKyANCisJCSIJ
Xl5eXl5eXl5eXlxuIiArIA0KKwkJIkRlYWQgY29kZVxuIiArIA0KKwkJIi0tLS0tLS0tLS1cbiIg
KyANCisJCSIzLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNylcbiIgKyANCisJCSIJaSA9IGZp
ZWxkMTtcbiIgKyANCisJCSIJICAgIF5eXl5eXlxuIiArIA0KKwkJIlRoZSBibGFuayBmaW5hbCBm
aWVsZCBmaWVsZDEgbWF5IG5vdCBoYXZlIGJlZW4gaW5pdGlhbGl6ZWRcbiIgKyANCisJCSItLS0t
LS0tLS0tXG4iKTsNCit9DQogcHVibGljIHN0YXRpYyBDbGFzcyB0ZXN0Q2xhc3MoKSB7DQogCXJl
dHVybiBGbG93QW5hbHlzaXNUZXN0LmNsYXNzOw0KIH0NCkluZGV4OiBzcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9OdWxsUmVmZXJlbmNlVGVzdC5qYXZh
DQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGls
ZXIvcmVncmVzc2lvbi9OdWxsUmVmZXJlbmNlVGVzdC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNp
b24gMS4xMTMNCmRpZmYgLXUgLXIxLjExMyBOdWxsUmVmZXJlbmNlVGVzdC5qYXZhDQotLS0gc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTnVsbFJlZmVy
ZW5jZVRlc3QuamF2YQkyNyBGZWIgMjAxMSAyMTo0Mjo1MCAtMDAwMAkxLjExMw0KKysrIHNyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL051bGxSZWZlcmVu
Y2VUZXN0LmphdmEJMSBNYXIgMjAxMSAxMzozMjo1MiAtMDAwMA0KQEAgLTE0MDYwLDQgKzE0MDYw
LDI4IEBADQogCQl9LA0KIAkJIiIpOw0KIH0NCisNCisvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5v
cmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzM4MjM0DQorcHVibGljIHZvaWQgdGVzdEJ1ZzMzODIz
NCgpIHsNCisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoDQorCQluZXcgU3RyaW5nW10gew0KKwkJCSJY
LmphdmEiLA0KKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsgDQorCQkJIiAgIHN0YXRpYyBpbnQg
Zm9vKCkge1xuIiArIA0KKwkJCSIgICAgICAgIE9iamVjdCBvID0gbnVsbDtcbiIgKw0KKwkJCSIJ
CSBpbnQgaSA9IDA7XG4iICsgDQorCQkJIiAgICAgICAgbGFiZWw6IHtcbiIgKyANCisJCQkiICAg
ICAgICAgICAgaWYgKG8gPT0gbnVsbClcbiIgKyANCisJCQkiICAgICAgICAgICAgICAgIGJyZWFr
IGxhYmVsO1xuIiArDQorCQkJIgkJCSBpKys7IiArIA0KKwkJCSIgICAgICAgIH1cbiIgKyANCisJ
CQkiICAgICAgICAgaWYgKGkgIT0gMCkge1xuIiArIA0KKwkJCSIgICAgICAgICAgICBTeXN0ZW0u
b3V0LnByaW50bG4oaSk7XG4iICsgDQorCQkJIiAgICAgICAgfVxuIiArIA0KKwkJCSIgICAgICAg
IHJldHVybiAwO1xuIiArIA0KKwkJCSIgICAgfVxuIiArIA0KKwkJCSJ9XG4iDQorCQl9LA0KKwkJ
IiIpOw0KK30NCiB9DQpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGUNCg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>190073</attachid>
            <date>2011-03-01 13:46:00 -0500</date>
            <delta_ts>2011-03-03 13:28:56 -0500</delta_ts>
            <desc>proposed fix v2.0 + tests updated</desc>
            <filename>patch338234_v21.txt</filename>
            <type>text/plain</type>
            <size>20192</size>
            <attacher name="Ayushman Jain">amj87.iitr</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxvdy9G
aW5hbGx5Rmxvd0NvbnRleHQuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2Vj
bGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2Zsb3cvRmluYWxseUZsb3dDb250ZXh0LmphdmEsdg0KcmV0cmlldmluZyBy
ZXZpc2lvbiAxLjM1DQpkaWZmIC11IC1yMS4zNSBGaW5hbGx5Rmxvd0NvbnRleHQuamF2YQ0KLS0t
IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L0ZpbmFsbHlG
bG93Q29udGV4dC5qYXZhCTI1IEZlYiAyMDEwIDE1OjI3OjAwIC0wMDAwCTEuMzUNCisrKyBjb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxvdy9GaW5hbGx5Rmxvd0Nv
bnRleHQuamF2YQkxIE1hciAyMDExIDE4OjMxOjU2IC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAv
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMCBJQk0g
Q29ycG9yYXRpb24gYW5kIG90aGVycy4NCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJN
IENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBw
cm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWls
YWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0K
ICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxl
IGF0DQpAQCAtMjI5LDE0ICsyMjksMTQgQEANCiAJCQkJCQkJCQlzY29wZS5wcm9ibGVtUmVwb3J0
ZXIoKS5sb2NhbFZhcmlhYmxlUmVkdW5kYW50Q2hlY2tPbk5vbk51bGwobG9jYWwsIHJlZmVyZW5j
ZSk7DQogCQkJCQkJCQl9DQogCQkJCQkJCQlpZiAoIWZsb3dJbmZvLmlzTWFya2VkQXNOdWxsT3JO
b25OdWxsSW5Bc3NlcnRFeHByZXNzaW9uKGxvY2FsKSkgew0KLQkJCQkJCQkJCWZsb3dJbmZvLmlu
aXRzV2hlbkZhbHNlKCkuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFKTsNCisJCQkJ
CQkJCQlmbG93SW5mby5pbml0c1doZW5GYWxzZSgpLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJF
QUNIQUJMRV9CWV9OVUxMQU5BTFlTSVMpOw0KIAkJCQkJCQkJfQ0KIAkJCQkJCQl9IGVsc2UgaWYg
KGNoZWNrVHlwZSA9PSAoQ0FOX09OTFlfTlVMTF9OT05fTlVMTCB8IElOX0NPTVBBUklTT05fTlVM
TCkpIHsNCiAJCQkJCQkJCWlmICgodGhpcy50YWdCaXRzICYgRmxvd0NvbnRleHQuSElERV9OVUxM
X0NPTVBBUklTT05fV0FSTklORykgPT0gMCkgew0KIAkJCQkJCQkJCXNjb3BlLnByb2JsZW1SZXBv
cnRlcigpLmxvY2FsVmFyaWFibGVOb25OdWxsQ29tcGFyZWRUb051bGwobG9jYWwsIHJlZmVyZW5j
ZSk7DQogCQkJCQkJCQl9DQogCQkJCQkJCQlpZiAoIWZsb3dJbmZvLmlzTWFya2VkQXNOdWxsT3JO
b25OdWxsSW5Bc3NlcnRFeHByZXNzaW9uKGxvY2FsKSkgew0KLQkJCQkJCQkJCWZsb3dJbmZvLmlu
aXRzV2hlblRydWUoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEUpOw0KKwkJCQkJ
CQkJCWZsb3dJbmZvLmluaXRzV2hlblRydWUoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFD
SEFCTEVfQllfTlVMTEFOQUxZU0lTKTsNCiAJCQkJCQkJCX0NCiAJCQkJCQkJfQ0KIAkJCQkJCQly
ZXR1cm47DQpAQCAtMjUyLDcgKzI1Miw3IEBADQogCQkJCQkJCQkJCXNjb3BlLnByb2JsZW1SZXBv
cnRlcigpLmxvY2FsVmFyaWFibGVSZWR1bmRhbnRDaGVja09uTnVsbChsb2NhbCwgcmVmZXJlbmNl
KTsNCiAJCQkJCQkJCQl9DQogCQkJCQkJCQkJaWYgKCFmbG93SW5mby5pc01hcmtlZEFzTnVsbE9y
Tm9uTnVsbEluQXNzZXJ0RXhwcmVzc2lvbihsb2NhbCkpIHsNCi0JCQkJCQkJCQkJZmxvd0luZm8u
aW5pdHNXaGVuRmFsc2UoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEUpOw0KKwkJ
CQkJCQkJCQlmbG93SW5mby5pbml0c1doZW5GYWxzZSgpLnNldFJlYWNoTW9kZShGbG93SW5mby5V
TlJFQUNIQUJMRV9CWV9OVUxMQU5BTFlTSVMpOw0KIAkJCQkJCQkJCX0NCiAJCQkJCQkJCQlyZXR1
cm47DQogCQkJCQkJCQljYXNlIEZsb3dDb250ZXh0LklOX0NPTVBBUklTT05fTk9OX05VTEw6DQpA
QCAtMjY0LDcgKzI2NCw3IEBADQogCQkJCQkJCQkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmxv
Y2FsVmFyaWFibGVOdWxsQ29tcGFyZWRUb05vbk51bGwobG9jYWwsIHJlZmVyZW5jZSk7DQogCQkJ
CQkJCQkJfQ0KIAkJCQkJCQkJCWlmICghZmxvd0luZm8uaXNNYXJrZWRBc051bGxPck5vbk51bGxJ
bkFzc2VydEV4cHJlc3Npb24obG9jYWwpKSB7DQotCQkJCQkJCQkJCWZsb3dJbmZvLmluaXRzV2hl
blRydWUoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEUpOw0KKwkJCQkJCQkJCQlm
bG93SW5mby5pbml0c1doZW5UcnVlKCkuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxF
X0JZX05VTExBTkFMWVNJUyk7DQogCQkJCQkJCQkJfQ0KIAkJCQkJCQkJCXJldHVybjsNCiAJCQkJ
CQkJCWNhc2UgRmxvd0NvbnRleHQuSU5fQVNTSUdOTUVOVDoNCkBAIC0zMTQsMTQgKzMxNCwxNCBA
QA0KIAkJCQkJCQkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmxvY2FsVmFyaWFibGVSZWR1bmRh
bnRDaGVja09uTm9uTnVsbChsb2NhbCwgcmVmZXJlbmNlKTsNCiAJCQkJCQkJCX0NCiAJCQkJCQkJ
CWlmICghZmxvd0luZm8uaXNNYXJrZWRBc051bGxPck5vbk51bGxJbkFzc2VydEV4cHJlc3Npb24o
bG9jYWwpKSB7DQotCQkJCQkJCQkJZmxvd0luZm8uaW5pdHNXaGVuRmFsc2UoKS5zZXRSZWFjaE1v
ZGUoRmxvd0luZm8uVU5SRUFDSEFCTEUpOw0KKwkJCQkJCQkJCWZsb3dJbmZvLmluaXRzV2hlbkZh
bHNlKCkuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFX0JZX05VTExBTkFMWVNJUyk7
DQogCQkJCQkJCQl9DQogCQkJCQkJCX0gZWxzZSB7DQogCQkJCQkJCQlpZiAoKHRoaXMudGFnQml0
cyAmIEZsb3dDb250ZXh0LkhJREVfTlVMTF9DT01QQVJJU09OX1dBUk5JTkcpID09IDApIHsNCiAJ
CQkJCQkJCQlzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5sb2NhbFZhcmlhYmxlTm9uTnVsbENvbXBh
cmVkVG9OdWxsKGxvY2FsLCByZWZlcmVuY2UpOw0KIAkJCQkJCQkJfQ0KIAkJCQkJCQkJaWYgKCFm
bG93SW5mby5pc01hcmtlZEFzTnVsbE9yTm9uTnVsbEluQXNzZXJ0RXhwcmVzc2lvbihsb2NhbCkp
IHsNCi0JCQkJCQkJCQlmbG93SW5mby5pbml0c1doZW5UcnVlKCkuc2V0UmVhY2hNb2RlKEZsb3dJ
bmZvLlVOUkVBQ0hBQkxFKTsNCisJCQkJCQkJCQlmbG93SW5mby5pbml0c1doZW5UcnVlKCkuc2V0
UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFX0JZX05VTExBTkFMWVNJUyk7DQogCQkJCQkJ
CQl9DQogCQkJCQkJCX0NCiAJCQkJCQkJcmV0dXJuOw0KQEAgLTM0Miw3ICszNDIsNyBAQA0KIAkJ
CQkJCQkJCQlzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5sb2NhbFZhcmlhYmxlUmVkdW5kYW50Q2hl
Y2tPbk51bGwobG9jYWwsIHJlZmVyZW5jZSk7DQogCQkJCQkJCQkJfQ0KIAkJCQkJCQkJCWlmICgh
Zmxvd0luZm8uaXNNYXJrZWRBc051bGxPck5vbk51bGxJbkFzc2VydEV4cHJlc3Npb24obG9jYWwp
KSB7DQotCQkJCQkJCQkJCWZsb3dJbmZvLmluaXRzV2hlbkZhbHNlKCkuc2V0UmVhY2hNb2RlKEZs
b3dJbmZvLlVOUkVBQ0hBQkxFKTsNCisJCQkJCQkJCQkJZmxvd0luZm8uaW5pdHNXaGVuRmFsc2Uo
KS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEVfQllfTlVMTEFOQUxZU0lTKTsNCiAJ
CQkJCQkJCQl9DQogCQkJCQkJCQkJcmV0dXJuOw0KIAkJCQkJCQkJY2FzZSBGbG93Q29udGV4dC5J
Tl9DT01QQVJJU09OX05PTl9OVUxMOg0KQEAgLTM1NCw3ICszNTQsNyBAQA0KIAkJCQkJCQkJCQlz
Y29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5sb2NhbFZhcmlhYmxlTnVsbENvbXBhcmVkVG9Ob25OdWxs
KGxvY2FsLCByZWZlcmVuY2UpOw0KIAkJCQkJCQkJCX0NCiAJCQkJCQkJCQlpZiAoIWZsb3dJbmZv
LmlzTWFya2VkQXNOdWxsT3JOb25OdWxsSW5Bc3NlcnRFeHByZXNzaW9uKGxvY2FsKSkgew0KLQkJ
CQkJCQkJCQlmbG93SW5mby5pbml0c1doZW5UcnVlKCkuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVO
UkVBQ0hBQkxFKTsNCisJCQkJCQkJCQkJZmxvd0luZm8uaW5pdHNXaGVuVHJ1ZSgpLnNldFJlYWNo
TW9kZShGbG93SW5mby5VTlJFQUNIQUJMRV9CWV9OVUxMQU5BTFlTSVMpOw0KIAkJCQkJCQkJCX0N
CiAJCQkJCQkJCQlyZXR1cm47DQogCQkJCQkJCQljYXNlIEZsb3dDb250ZXh0LklOX0FTU0lHTk1F
TlQ6DQpJbmRleDogY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zs
b3cvRmxvd0NvbnRleHQuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlw
c2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2Zsb3cvRmxvd0NvbnRleHQuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEu
NjgNCmRpZmYgLXUgLXIxLjY4IEZsb3dDb250ZXh0LmphdmENCi0tLSBjb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxvdy9GbG93Q29udGV4dC5qYXZhCTEgU2VwIDIw
MTAgMTU6NDk6NTcgLTAwMDAJMS42OA0KKysrIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9mbG93L0Zsb3dDb250ZXh0LmphdmEJMSBNYXIgMjAxMSAxODozMTo1NiAt
MDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5
cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29w
eXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFs
bCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRl
cmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xp
cHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3Ry
aWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTU3OCwxNCArNTc4LDE0IEBADQogCQkJ
CQkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkubG9jYWxWYXJpYWJsZVJlZHVuZGFudENoZWNrT25O
b25OdWxsKGxvY2FsLCByZWZlcmVuY2UpOw0KIAkJCQkJfQ0KIAkJCQkJaWYgKCFmbG93SW5mby5p
c01hcmtlZEFzTnVsbE9yTm9uTnVsbEluQXNzZXJ0RXhwcmVzc2lvbihsb2NhbCkpIHsNCi0JCQkJ
CQlmbG93SW5mby5pbml0c1doZW5GYWxzZSgpLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNI
QUJMRSk7DQorCQkJCQkJZmxvd0luZm8uaW5pdHNXaGVuRmFsc2UoKS5zZXRSZWFjaE1vZGUoRmxv
d0luZm8uVU5SRUFDSEFCTEVfQllfTlVMTEFOQUxZU0lTKTsNCiAJCQkJCX0NCiAJCQkJfSBlbHNl
IHsNCiAJCQkJCWlmICgodGhpcy50YWdCaXRzICYgRmxvd0NvbnRleHQuSElERV9OVUxMX0NPTVBB
UklTT05fV0FSTklORykgPT0gMCkgew0KIAkJCQkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmxv
Y2FsVmFyaWFibGVOb25OdWxsQ29tcGFyZWRUb051bGwobG9jYWwsIHJlZmVyZW5jZSk7DQogCQkJ
CQl9DQogCQkJCQlpZiAoIWZsb3dJbmZvLmlzTWFya2VkQXNOdWxsT3JOb25OdWxsSW5Bc3NlcnRF
eHByZXNzaW9uKGxvY2FsKSkgew0KLQkJCQkJCWZsb3dJbmZvLmluaXRzV2hlblRydWUoKS5zZXRS
ZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEUpOw0KKwkJCQkJCWZsb3dJbmZvLmluaXRzV2hl
blRydWUoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEVfQllfTlVMTEFOQUxZU0lT
KTsNCiAJCQkJCX0NCiAJCQkJfQ0KIAkJCQlyZXR1cm47DQpAQCAtNjA5LDcgKzYwOSw3IEBADQog
CQkJCQkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmxvY2FsVmFyaWFibGVSZWR1bmRhbnRDaGVj
a09uTnVsbChsb2NhbCwgcmVmZXJlbmNlKTsNCiAJCQkJCQl9DQogCQkJCQkJaWYgKCFmbG93SW5m
by5pc01hcmtlZEFzTnVsbE9yTm9uTnVsbEluQXNzZXJ0RXhwcmVzc2lvbihsb2NhbCkpIHsNCi0J
CQkJCQkJZmxvd0luZm8uaW5pdHNXaGVuRmFsc2UoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5S
RUFDSEFCTEUpOw0KKwkJCQkJCQlmbG93SW5mby5pbml0c1doZW5GYWxzZSgpLnNldFJlYWNoTW9k
ZShGbG93SW5mby5VTlJFQUNIQUJMRV9CWV9OVUxMQU5BTFlTSVMpOw0KIAkJCQkJCX0NCiAJCQkJ
CQlyZXR1cm47DQogCQkJCQljYXNlIEZsb3dDb250ZXh0LklOX0NPTVBBUklTT05fTk9OX05VTEw6
DQpAQCAtNjIxLDcgKzYyMSw3IEBADQogCQkJCQkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmxv
Y2FsVmFyaWFibGVOdWxsQ29tcGFyZWRUb05vbk51bGwobG9jYWwsIHJlZmVyZW5jZSk7DQogCQkJ
CQkJfQ0KIAkJCQkJCWlmICghZmxvd0luZm8uaXNNYXJrZWRBc051bGxPck5vbk51bGxJbkFzc2Vy
dEV4cHJlc3Npb24obG9jYWwpKSB7DQotCQkJCQkJCWZsb3dJbmZvLmluaXRzV2hlblRydWUoKS5z
ZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEUpOw0KKwkJCQkJCQlmbG93SW5mby5pbml0
c1doZW5UcnVlKCkuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFX0JZX05VTExBTkFM
WVNJUyk7DQogCQkJCQkJfQ0KIAkJCQkJCXJldHVybjsNCiAJCQkJCWNhc2UgRmxvd0NvbnRleHQu
SU5fQVNTSUdOTUVOVDoNCkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvZmxvdy9GbG93SW5mby5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jv
b3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvZmxvdy9GbG93SW5mby5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNp
b24gMS40NQ0KZGlmZiAtdSAtcjEuNDUgRmxvd0luZm8uamF2YQ0KLS0tIGNvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L0Zsb3dJbmZvLmphdmEJMTYgRGVjIDIw
MTAgMTM6MDI6MzAgLTAwMDAJMS40NQ0KKysrIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9mbG93L0Zsb3dJbmZvLmphdmEJMSBNYXIgMjAxMSAxODozMTo1NiAtMDAw
MA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmln
aHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCBy
aWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlh
bHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNl
IFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1
dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTIyLDggKzIyLDIzIEBADQogDQogCXB1Ymxp
YyBpbnQgdGFnQml0czsgLy8gUkVBQ0hBQkxFIGJ5IGRlZmF1bHQNCiAJcHVibGljIGZpbmFsIHN0
YXRpYyBpbnQgUkVBQ0hBQkxFID0gMDsNCi0JcHVibGljIGZpbmFsIHN0YXRpYyBpbnQgVU5SRUFD
SEFCTEUgPSAxOw0KKwkvKiB1bnJlYWNoYWJsZSBjb2RlIGFzIGRlZmluZWQgaW4gdGhlIGxhbmd1
YWdlIHNwZWMgDQorCSAqIGVnLiB3aGlsZSAodHJ1ZSk7DQorCSAqICAgICBpKys7ICAtLT4gdW5y
ZWFjaGFibGUgY29kZSANCisJICovDQorCXB1YmxpYyBmaW5hbCBzdGF0aWMgaW50IFVOUkVBQ0hB
QkxFX09SX0RFQUQgPSAxOw0KIAlwdWJsaWMgZmluYWwgc3RhdGljIGludCBOVUxMX0ZMQUdfTUFT
SyA9IDI7DQorCS8qIHVucmVhY2hhYmxlIGNvZGUgYXMgaW5mZXJyZWQgYnkgbnVsbCBhbmFseXNp
cw0KKwkgKiBlZy4gc3RyID0gbnVsbDsNCisJICogICAgIGlmIChzdHIgIT0gbnVsbCkgew0KKwkg
KiAgICAgICAgLy8gZGVhZCBjb2RlDQorCSAqICAgICB9DQorCSAqLw0KKwlwdWJsaWMgZmluYWwg
c3RhdGljIGludCBVTlJFQUNIQUJMRV9CWV9OVUxMQU5BTFlTSVMgPSA0Ow0KKwkvKg0KKwkgKiBj
b2RlIHVucmVhY2hhYmxlIGluIGFueSBmYXNoaW9uDQorCSAqLw0KKwlwdWJsaWMgZmluYWwgc3Rh
dGljIGludCBVTlJFQUNIQUJMRSA9IFVOUkVBQ0hBQkxFX09SX0RFQUQgfCBVTlJFQUNIQUJMRV9C
WV9OVUxMQU5BTFlTSVM7DQogDQogCXB1YmxpYyBmaW5hbCBzdGF0aWMgaW50IFVOS05PV04gPSAx
Ow0KIAlwdWJsaWMgZmluYWwgc3RhdGljIGludCBOVUxMID0gMjsNCkluZGV4OiBjb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxvdy9Mb29waW5nRmxvd0NvbnRleHQu
amF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cv
TG9vcGluZ0Zsb3dDb250ZXh0LmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjUyDQpkaWZm
IC11IC1yMS41MiBMb29waW5nRmxvd0NvbnRleHQuamF2YQ0KLS0tIGNvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L0xvb3BpbmdGbG93Q29udGV4dC5qYXZhCTE2
IEZlYiAyMDExIDE4OjU3OjQ4IC0wMDAwCTEuNTINCisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxvdy9Mb29waW5nRmxvd0NvbnRleHQuamF2YQkxIE1hciAy
MDExIDE4OjMxOjU2IC0wMDAwDQpAQCAtNDkzLDE0ICs0OTMsMTQgQEANCiAJCQkJCQlzY29wZS5w
cm9ibGVtUmVwb3J0ZXIoKS5sb2NhbFZhcmlhYmxlUmVkdW5kYW50Q2hlY2tPbk5vbk51bGwobG9j
YWwsIHJlZmVyZW5jZSk7DQogCQkJCQl9DQogCQkJCQlpZiAoIWZsb3dJbmZvLmlzTWFya2VkQXNO
dWxsT3JOb25OdWxsSW5Bc3NlcnRFeHByZXNzaW9uKGxvY2FsKSkgew0KLQkJCQkJCWZsb3dJbmZv
LmluaXRzV2hlbkZhbHNlKCkuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFKTsNCisJ
CQkJCQlmbG93SW5mby5pbml0c1doZW5GYWxzZSgpLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJF
QUNIQUJMRV9CWV9OVUxMQU5BTFlTSVMpOw0KIAkJCQkJfQ0KIAkJCQl9IGVsc2Ugew0KIAkJCQkJ
aWYgKCh0aGlzLnRhZ0JpdHMgJiBGbG93Q29udGV4dC5ISURFX05VTExfQ09NUEFSSVNPTl9XQVJO
SU5HKSA9PSAwKSB7DQogCQkJCQkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkubG9jYWxWYXJpYWJs
ZU5vbk51bGxDb21wYXJlZFRvTnVsbChsb2NhbCwgcmVmZXJlbmNlKTsNCiAJCQkJCX0NCiAJCQkJ
CWlmICghZmxvd0luZm8uaXNNYXJrZWRBc051bGxPck5vbk51bGxJbkFzc2VydEV4cHJlc3Npb24o
bG9jYWwpKSB7DQotCQkJCQkJZmxvd0luZm8uaW5pdHNXaGVuVHJ1ZSgpLnNldFJlYWNoTW9kZShG
bG93SW5mby5VTlJFQUNIQUJMRSk7DQorCQkJCQkJZmxvd0luZm8uaW5pdHNXaGVuVHJ1ZSgpLnNl
dFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRV9CWV9OVUxMQU5BTFlTSVMpOw0KIAkJCQkJ
fQ0KIAkJCQl9DQogCQkJfSBlbHNlIGlmIChmbG93SW5mby5pc0RlZmluaXRlbHlOdWxsKGxvY2Fs
KSkgew0KQEAgLTUwOSwxNCArNTA5LDE0IEBADQogCQkJCQkJc2NvcGUucHJvYmxlbVJlcG9ydGVy
KCkubG9jYWxWYXJpYWJsZVJlZHVuZGFudENoZWNrT25OdWxsKGxvY2FsLCByZWZlcmVuY2UpOw0K
IAkJCQkJfQ0KIAkJCQkJaWYgKCFmbG93SW5mby5pc01hcmtlZEFzTnVsbE9yTm9uTnVsbEluQXNz
ZXJ0RXhwcmVzc2lvbihsb2NhbCkpIHsNCi0JCQkJCQlmbG93SW5mby5pbml0c1doZW5GYWxzZSgp
LnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRSk7DQorCQkJCQkJZmxvd0luZm8uaW5p
dHNXaGVuRmFsc2UoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEVfQllfTlVMTEFO
QUxZU0lTKTsNCiAJCQkJCX0NCiAJCQkJfSBlbHNlIHsNCiAJCQkJCWlmICgodGhpcy50YWdCaXRz
ICYgRmxvd0NvbnRleHQuSElERV9OVUxMX0NPTVBBUklTT05fV0FSTklORykgPT0gMCkgew0KIAkJ
CQkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmxvY2FsVmFyaWFibGVOdWxsQ29tcGFyZWRUb05v
bk51bGwobG9jYWwsIHJlZmVyZW5jZSk7DQogCQkJCQl9DQogCQkJCQlpZiAoIWZsb3dJbmZvLmlz
TWFya2VkQXNOdWxsT3JOb25OdWxsSW5Bc3NlcnRFeHByZXNzaW9uKGxvY2FsKSkgew0KLQkJCQkJ
CWZsb3dJbmZvLmluaXRzV2hlblRydWUoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFC
TEUpOw0KKwkJCQkJCWZsb3dJbmZvLmluaXRzV2hlblRydWUoKS5zZXRSZWFjaE1vZGUoRmxvd0lu
Zm8uVU5SRUFDSEFCTEVfQllfTlVMTEFOQUxZU0lTKTsNCiAJCQkJCX0NCiAJCQkJfQ0KIAkJCX0g
ZWxzZSBpZiAodGhpcy51cHN0cmVhbU51bGxGbG93SW5mby5pc0RlZmluaXRlbHlOb25OdWxsKGxv
Y2FsKSAmJiAhZmxvd0luZm8uaXNQb3RlbnRpYWxseU51bGwobG9jYWwpICYmICFmbG93SW5mby5p
c1BvdGVudGlhbGx5VW5rbm93bihsb2NhbCkpIHsgICAgDQpAQCAtNTU0LDcgKzU1NCw3IEBADQog
CQkJCQkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmxvY2FsVmFyaWFibGVSZWR1bmRhbnRDaGVj
a09uTnVsbChsb2NhbCwgcmVmZXJlbmNlKTsNCiAJCQkJCQl9DQogCQkJCQkJaWYgKCFmbG93SW5m
by5pc01hcmtlZEFzTnVsbE9yTm9uTnVsbEluQXNzZXJ0RXhwcmVzc2lvbihsb2NhbCkpIHsNCi0J
CQkJCQkJZmxvd0luZm8uaW5pdHNXaGVuRmFsc2UoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5S
RUFDSEFCTEUpOw0KKwkJCQkJCQlmbG93SW5mby5pbml0c1doZW5GYWxzZSgpLnNldFJlYWNoTW9k
ZShGbG93SW5mby5VTlJFQUNIQUJMRV9CWV9OVUxMQU5BTFlTSVMpOw0KIAkJCQkJCX0NCiAJCQkJ
CQlyZXR1cm47DQogCQkJCQljYXNlIEZsb3dDb250ZXh0LklOX0NPTVBBUklTT05fTk9OX05VTEw6
DQpAQCAtNTY2LDcgKzU2Niw3IEBADQogCQkJCQkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmxv
Y2FsVmFyaWFibGVOdWxsQ29tcGFyZWRUb05vbk51bGwobG9jYWwsIHJlZmVyZW5jZSk7DQogCQkJ
CQkJfQ0KIAkJCQkJCWlmICghZmxvd0luZm8uaXNNYXJrZWRBc051bGxPck5vbk51bGxJbkFzc2Vy
dEV4cHJlc3Npb24obG9jYWwpKSB7DQotCQkJCQkJCWZsb3dJbmZvLmluaXRzV2hlblRydWUoKS5z
ZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEUpOw0KKwkJCQkJCQlmbG93SW5mby5pbml0
c1doZW5UcnVlKCkuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFX0JZX05VTExBTkFM
WVNJUyk7DQogCQkJCQkJfQ0KIAkJCQkJCXJldHVybjsNCiAJCQkJCWNhc2UgRmxvd0NvbnRleHQu
SU5fQVNTSUdOTUVOVDoNCkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvZmxvdy9VbmNvbmRpdGlvbmFsRmxvd0luZm8uamF2YQ0KPT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNT
IGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvVW5jb25kaXRpb25hbEZsb3dJbmZv
LmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjcyDQpkaWZmIC11IC1yMS43MiBVbmNvbmRp
dGlvbmFsRmxvd0luZm8uamF2YQ0KLS0tIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9mbG93L1VuY29uZGl0aW9uYWxGbG93SW5mby5qYXZhCTE5IEphbiAyMDExIDA1
OjI5OjU0IC0wMDAwCTEuNzINCisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvZmxvdy9VbmNvbmRpdGlvbmFsRmxvd0luZm8uamF2YQkxIE1hciAyMDExIDE4OjMx
OjU2IC0wMDAwDQpAQCAtNzMxLDcgKzczMSw3IEBADQogZmluYWwgcHVibGljIGJvb2xlYW4gaXNE
ZWZpbml0ZWx5QXNzaWduZWQoRmllbGRCaW5kaW5nIGZpZWxkKSB7DQogCS8vIE1pcnJvcmVkIGlu
IENvZGVTdHJlYW0uaXNEZWZpbml0ZWx5QXNzaWduZWQoLi4pDQogCS8vIGRvIG5vdCB3YW50IHRv
IGNvbXBsYWluIGluIHVucmVhY2hhYmxlIGNvZGUNCi0JaWYgKCh0aGlzLnRhZ0JpdHMgJiBVTlJF
QUNIQUJMRSkgIT0gMCkgew0KKwlpZiAoKHRoaXMudGFnQml0cyAmIFVOUkVBQ0hBQkxFX09SX0RF
QUQpICE9IDApIHsNCiAJCXJldHVybiB0cnVlOw0KIAl9DQogCXJldHVybiBpc0RlZmluaXRlbHlB
c3NpZ25lZChmaWVsZC5pZCk7DQpAQCAtNzM5LDcgKzczOSw3IEBADQogDQogZmluYWwgcHVibGlj
IGJvb2xlYW4gaXNEZWZpbml0ZWx5QXNzaWduZWQoTG9jYWxWYXJpYWJsZUJpbmRpbmcgbG9jYWwp
IHsNCiAJLy8gZG8gbm90IHdhbnQgdG8gY29tcGxhaW4gaW4gdW5yZWFjaGFibGUgY29kZSBpZiBs
b2NhbCBkZWNsYXJlZCBpbiByZWFjaGFibGUgY29kZQ0KLQlpZiAoKHRoaXMudGFnQml0cyAmIFVO
UkVBQ0hBQkxFKSAhPSAwICYmIChsb2NhbC5kZWNsYXJhdGlvbi5iaXRzICYgQVNUTm9kZS5Jc0xv
Y2FsRGVjbGFyYXRpb25SZWFjaGFibGUpICE9IDApIHsNCisJaWYgKCh0aGlzLnRhZ0JpdHMgJiBV
TlJFQUNIQUJMRV9PUl9ERUFEKSAhPSAwICYmIChsb2NhbC5kZWNsYXJhdGlvbi5iaXRzICYgQVNU
Tm9kZS5Jc0xvY2FsRGVjbGFyYXRpb25SZWFjaGFibGUpICE9IDApIHsNCiAJCXJldHVybiB0cnVl
Ow0KIAl9DQogCXJldHVybiBpc0RlZmluaXRlbHlBc3NpZ25lZChsb2NhbC5pZCArIHRoaXMubWF4
RmllbGRDb3VudCk7DQpAQCAtMTU2Myw2ICsxNTYzLDE3IEBADQogCQluYTEsIG5hMiwgbmEzLCBu
YTQsDQogCQluYjEsIG5iMiwgbmIzLCBuYjQsDQogCQliMSwgYjIsIGIzLCBiNDsNCisgIGlmICgo
b3RoZXJJbml0cy50YWdCaXRzICYgRmxvd0luZm8uVU5SRUFDSEFCTEVfQllfTlVMTEFOQUxZU0lT
KSAhPSAwKSB7DQorCSAgb3RoZXJIYXNOdWxscyA9IGZhbHNlOyAvLyBza2lwIG1lcmdpbmcsIG90
aGVySW5pdHMgaXMgdW5yZWFjaGFibGUgYnkgbnVsbCBhbmFseXNpcw0KKyAgfSBlbHNlIHsNCisJ
aWYgKCh0aGlzLnRhZ0JpdHMgJiBGbG93SW5mby5VTlJFQUNIQUJMRV9CWV9OVUxMQU5BTFlTSVMp
ICE9IDApIHsgLy8gZGlyZWN0bHkgY29weSBpZiB0aGlzIGlzIHVucmVhY2hhYmxlIGJ5IG51bGwg
YW5hbHlzaXMNCisJCXRoaXMubnVsbEJpdDEgPSBvdGhlckluaXRzLm51bGxCaXQxOw0KKwkJdGhp
cy5udWxsQml0MiA9IG90aGVySW5pdHMubnVsbEJpdDI7DQorCQl0aGlzLm51bGxCaXQzID0gb3Ro
ZXJJbml0cy5udWxsQml0MzsNCisJCXRoaXMubnVsbEJpdDQgPSBvdGhlckluaXRzLm51bGxCaXQ0
Ow0KKwkJdGhpc0hhZE51bGxzID0gZmFsc2U7DQorCQl0aGlzSGFzTnVsbHMgPSBvdGhlckhhc051
bGxzOw0KKwl9IGVsc2UNCiAJaWYgKHRoaXNIYWROdWxscykgew0KICAgICAJaWYgKG90aGVySGFz
TnVsbHMpIHsNCiAgICAgCQl0aGlzLm51bGxCaXQxID0gKGEyID0gdGhpcy5udWxsQml0MikgJiAo
YTMgPSB0aGlzLm51bGxCaXQzKQ0KQEAgLTE2MzYsNiArMTY0Nyw3IEBADQogICAgIAkJdGhpcy5u
dWxsQml0MyAhPSAwIHx8DQogICAgIAkJdGhpcy5udWxsQml0NCAhPSAwOw0KIAl9DQorICB9DQog
DQogCS8vIHRyZWF0aW5nIGV4dHJhIHN0b3JhZ2UNCiAJaWYgKHRoaXMuZXh0cmEgIT0gbnVsbCB8
fCBvdGhlckluaXRzLmV4dHJhICE9IG51bGwpIHsNCkBAIC0xODU4LDYgKzE4NzAsOCBAQA0KIAl9
CQ0KIAlpZiAocmVhY2hNb2RlID09IFJFQUNIQUJMRSApIHsNCiAJCXRoaXMudGFnQml0cyAmPSB+
VU5SRUFDSEFCTEU7DQorCX0gZWxzZSBpZiAocmVhY2hNb2RlID09IFVOUkVBQ0hBQkxFX0JZX05V
TExBTkFMWVNJUykgew0KKwkJdGhpcy50YWdCaXRzIHw9IFVOUkVBQ0hBQkxFX0JZX05VTExBTkFM
WVNJUzsgLy8gZG9uJ3QgaW50ZXJmZXJlIHdpdGggZGVmaW5pdGUgYXNzaWdubWVudCBhbmFseXNp
cw0KIAl9IGVsc2Ugew0KIAkJaWYgKCh0aGlzLnRhZ0JpdHMgJiBVTlJFQUNIQUJMRSkgPT0gMCkg
ew0KIAkJCS8vIHJlc2V0IG9wdGlvbmFsIGluaXRzIHdoZW4gYmVjb21pbmcgdW5yZWFjaGFibGUN
CiNQIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyDQpJbmRleDogc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vRmxvd0FuYWx5c2lzVGVz
dC5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
Y29tcGlsZXIvcmVncmVzc2lvbi9GbG93QW5hbHlzaXNUZXN0LmphdmEsdg0KcmV0cmlldmluZyBy
ZXZpc2lvbiAxLjQ2DQpkaWZmIC11IC1yMS40NiBGbG93QW5hbHlzaXNUZXN0LmphdmENCi0tLSBz
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9GbG93QW5h
bHlzaXNUZXN0LmphdmEJMSBTZXAgMjAxMCAxNTo0OTozMCAtMDAwMAkxLjQ2DQorKysgc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vRmxvd0FuYWx5c2lz
VGVzdC5qYXZhCTEgTWFyIDIwMTEgMTg6MzI6MDAgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8q
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDA1LCAyMDEwIElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwNSwgMjAxMSBJQk0g
Q29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHBy
b2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxh
YmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQog
ICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUg
YXQNCkBAIC0yOSw3ICsyOSw5IEBADQogcHVibGljIGNsYXNzIEZsb3dBbmFseXNpc1Rlc3QgZXh0
ZW5kcyBBYnN0cmFjdFJlZ3Jlc3Npb25UZXN0IHsNCiBzdGF0aWMgew0KIC8vCVRFU1RTX05VTUJF
UlMgPSBuZXcgaW50W10geyA2OSB9Ow0KKy8vCVRFU1RTX05BTUVTID0gbmV3IFN0cmluZ1tdIHsg
InRlc3RCdWczMzgyMzQiIH07DQogfQ0KKw0KIHB1YmxpYyBGbG93QW5hbHlzaXNUZXN0KFN0cmlu
ZyBuYW1lKSB7DQogCXN1cGVyKG5hbWUpOw0KIH0NCkBAIC0yMjQ2LDYgKzIyNDgsOTIgQEANCiAJ
CSJEZWFkIGNvZGVcbiIgKyANCiAJCSItLS0tLS0tLS0tXG4iKTsNCiB9DQorDQorLy8gaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMzODIzNA0KKy8vIFdhcm4g
dW5pbml0aWFsaXplZCB2YXJpYWJsZSBpbiBkZWFkY29kZSBpZiBkZWFkY29kZSBoYXMgYmVlbiBp
bmZlcnJlZA0KKy8vIGJ5IG51bGwgYW5hbHlzaXMNCitwdWJsaWMgdm9pZCB0ZXN0QnVnMzM4MjM0
YSgpIHsNCisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoDQorCQluZXcgU3RyaW5nW10gew0KKwkJCSJY
LmphdmEiLA0KKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsNCisJCQkiICAgIHB1YmxpYyBzdGF0
aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKyANCisJCQkiICAgICAgICBpbnQgaTtc
biIgKyANCisJCQkiICAgICAgICBTdHJpbmcgc3RyID0gbnVsbDtcbiIgKyANCisJCQkiICAgICAg
ICBpZiAoc3RyICE9IG51bGwpXG4iICsgDQorCQkJIiAgICAgICAgICAgIGkrKzsgICAgXG4iICsg
DQorCQkJIiAgICB9XG4iICsgDQorCQkJIn1cbiINCisJCX0sDQorCQkiLS0tLS0tLS0tLVxuIiAr
IA0KKwkJIjEuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDYpXG4iICsgDQorCQkiCWkrKzsg
ICAgXG4iICsgDQorCQkiCV5eXlxuIiArIA0KKwkJIkRlYWQgY29kZVxuIiArIA0KKwkJIi0tLS0t
LS0tLS1cbiIgKyANCisJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNilcbiIgKyANCisJ
CSIJaSsrOyAgICBcbiIgKyANCisJCSIJXlxuIiArIA0KKwkJIlRoZSBsb2NhbCB2YXJpYWJsZSBp
IG1heSBub3QgaGF2ZSBiZWVuIGluaXRpYWxpemVkXG4iICsgDQorCQkiLS0tLS0tLS0tLVxuIik7
DQorfQ0KKw0KKy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9p
ZD0zMzgyMzQNCisvLyBEb24ndCB3YXJuIHVuaW5pdGlhbGl6ZWQgdmFyaWFibGUgaW4gZGVhZGNv
ZGUgaWYgZGVhZGNvZGUgaGFzIG5vdCBiZWVuIGluZmVycmVkDQorLy8gYnkgbnVsbCBhbmFseXNp
cw0KK3B1YmxpYyB2b2lkIHRlc3RCdWczMzgyMzRiKCkgew0KKwl0aGlzLnJ1bkNvbmZvcm1UZXN0
KA0KKwkJbmV3IFN0cmluZ1tdIHsNCisJCQkiWC5qYXZhIiwNCisJCQkicHVibGljIGNsYXNzIFgg
e1xuIiArDQorCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7
XG4iICsgDQorCQkJIiAgICAgICAgaW50IGk7XG4iICsgDQorCQkJIiAgICAgICAgbDoge1xuIiAr
DQorCQkJIgkJCWlmKGZhbHNlKVxuIiArDQorCQkJIgkJCQlicmVhayBsO1xuIiArIA0KKwkJCSIg
ICAgICAgIAlyZXR1cm47XG4iICsNCisJCQkiCQkgfVxuIiArIA0KKwkJCSIgICAgICAgIGkrKzsg
ICAgXG4iICsgDQorCQkJIiAgICB9XG4iICsgDQorCQkJIn1cbiINCisJCX0sDQorCQkiIik7DQor
fQ0KKw0KKy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0z
MzgyMzQNCisvLyBXYXJuIHVuaW5pdGlhbGl6ZWQgZmllbGQgaW4gZGVhZGNvZGUgaWYgZGVhZGNv
ZGUgaGFzIGJlZW4gaW5mZXJyZWQNCisvLyBieSBudWxsIGFuYWx5c2lzDQorcHVibGljIHZvaWQg
dGVzdEJ1ZzMzODIzNGMoKSB7DQorCXRoaXMucnVuTmVnYXRpdmVUZXN0KA0KKwkJbmV3IFN0cmlu
Z1tdIHsNCisJCQkiWC5qYXZhIiwNCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArDQorCQkJIiAg
ICBwdWJsaWMgZmluYWwgaW50IGZpZWxkMTtcbiIgKw0KKwkJCSIgICAge1xuIiArIA0KKwkJCSIg
ICAgICAgIGludCBpO1xuIiArIA0KKwkJCSIgICAgICAgIFN0cmluZyBzdHIgPSBudWxsO1xuIiAr
DQorCQkJIgkJIGlmKHN0ciAhPSBudWxsKVxuIiArDQorCQkJIgkJCWkgPSBmaWVsZDE7XG4iICsg
DQorCQkJIiAgICB9XG4iICsgDQorCQkJIn1cbiINCisJCX0sDQorCQkiLS0tLS0tLS0tLVxuIiAr
IA0KKwkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxKVxuIiArIA0KKwkJIglwdWJsaWMg
Y2xhc3MgWCB7XG4iICsgDQorCQkiCSAgICAgICAgICAgICBeXG4iICsgDQorCQkiVGhlIGJsYW5r
IGZpbmFsIGZpZWxkIGZpZWxkMSBtYXkgbm90IGhhdmUgYmVlbiBpbml0aWFsaXplZFxuIiArIA0K
KwkJIi0tLS0tLS0tLS1cbiIgKyANCisJCSIyLiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSA3
KVxuIiArIA0KKwkJIglpID0gZmllbGQxO1xuIiArIA0KKwkJIgleXl5eXl5eXl5eXG4iICsgDQor
CQkiRGVhZCBjb2RlXG4iICsgDQorCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJIjMuIEVSUk9SIGlu
IFguamF2YSAoYXQgbGluZSA3KVxuIiArIA0KKwkJIglpID0gZmllbGQxO1xuIiArIA0KKwkJIgkg
ICAgXl5eXl5eXG4iICsgDQorCQkiVGhlIGJsYW5rIGZpbmFsIGZpZWxkIGZpZWxkMSBtYXkgbm90
IGhhdmUgYmVlbiBpbml0aWFsaXplZFxuIiArIA0KKwkJIi0tLS0tLS0tLS1cbiIpOw0KK30NCiBw
dWJsaWMgc3RhdGljIENsYXNzIHRlc3RDbGFzcygpIHsNCiAJcmV0dXJuIEZsb3dBbmFseXNpc1Rl
c3QuY2xhc3M7DQogfQ0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21w
aWxlci9yZWdyZXNzaW9uL051bGxSZWZlcmVuY2VUZXN0LmphdmENCj09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBm
aWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVy
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL051bGxS
ZWZlcmVuY2VUZXN0LmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjExMw0KZGlmZiAtdSAt
cjEuMTEzIE51bGxSZWZlcmVuY2VUZXN0LmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9OdWxsUmVmZXJlbmNlVGVzdC5qYXZhCTI3IEZl
YiAyMDExIDIxOjQyOjUwIC0wMDAwCTEuMTEzDQorKysgc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTnVsbFJlZmVyZW5jZVRlc3QuamF2YQkxIE1hciAy
MDExIDE4OjMyOjAxIC0wMDAwDQpAQCAtMTQwNjAsNCArMTQwNjAsMzggQEANCiAJCX0sDQogCQki
Iik7DQogfQ0KKw0KKy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNn
aT9pZD0zMzgyMzQNCitwdWJsaWMgdm9pZCB0ZXN0QnVnMzM4MjM0KCkgew0KKwl0aGlzLnJ1bk5l
Z2F0aXZlVGVzdCgNCisJCW5ldyBTdHJpbmdbXSB7DQorCQkJIlguamF2YSIsDQorCQkJInB1Ymxp
YyBjbGFzcyBYIHtcbiIgKyANCisJCQkiICAgc3RhdGljIGludCBmb28oKSB7XG4iICsgDQorCQkJ
IiAgICAgICAgT2JqZWN0IG8gPSBudWxsO1xuIiArDQorCQkJIgkJIGludCBpID0gMDtcbiIgKyAN
CisJCQkiICAgICAgICBsYWJlbDoge1xuIiArIA0KKwkJCSIgICAgICAgICAgICBpZiAobyA9PSBu
dWxsKVxuIiArIA0KKwkJCSIgICAgICAgICAgICAgICAgYnJlYWsgbGFiZWw7XG4iICsNCisJCQki
CQkJIGkrKzsiICsgDQorCQkJIiAgICAgICAgfVxuIiArIA0KKwkJCSIgICAgICAgICBpZiAoaSAh
PSAwKSB7XG4iICsgDQorCQkJIiAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihpKTtcbiIg
KyANCisJCQkiICAgICAgICB9XG4iICsgDQorCQkJIiAgICAgICAgcmV0dXJuIDA7XG4iICsgDQor
CQkJIiAgICB9XG4iICsgDQorCQkJIn1cbiINCisJCX0sDQorCQkiLS0tLS0tLS0tLVxuIiArIA0K
KwkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA2KVxuIiArIA0KKwkJIglpZiAobyA9PSBu
dWxsKVxuIiArIA0KKwkJIgkgICAgXlxuIiArIA0KKwkJIlJlZHVuZGFudCBudWxsIGNoZWNrOiBU
aGUgdmFyaWFibGUgbyBjYW4gb25seSBiZSBudWxsIGF0IHRoaXMgbG9jYXRpb25cbiIgKyANCisJ
CSItLS0tLS0tLS0tXG4iICsgDQorCQkiMi4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUgOClc
biIgKyANCisJCSIJaSsrOyAgICAgICAgfVxuIiArIA0KKwkJIgleXl5cbiIgKyANCisJCSJEZWFk
IGNvZGVcbiIgKyANCisJCSItLS0tLS0tLS0tXG4iKTsNCit9DQogfQ0KXCBObyBuZXdsaW5lIGF0
IGVuZCBvZiBmaWxlDQo=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>190298</attachid>
            <date>2011-03-03 13:28:00 -0500</date>
            <delta_ts>2011-03-04 02:36:37 -0500</delta_ts>
            <desc>proposed fix v2.1 + tests</desc>
            <filename>patch338234.txt</filename>
            <type>text/plain</type>
            <size>35768</size>
            <attacher name="Ayushman Jain">amj87.iitr</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0FO
RF9BTkRfRXhwcmVzc2lvbi5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNs
aXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvYXN0L0FORF9BTkRfRXhwcmVzc2lvbi5qYXZhLHYNCnJldHJpZXZpbmcgcmV2
aXNpb24gMS40NQ0KZGlmZiAtdSAtcjEuNDUgQU5EX0FORF9FeHByZXNzaW9uLmphdmENCi0tLSBj
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0FORF9BTkRfRXhw
cmVzc2lvbi5qYXZhCTEyIEF1ZyAyMDEwIDE2OjU4OjI4IC0wMDAwCTEuNDUNCisrKyBjb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0FORF9BTkRfRXhwcmVzc2lv
bi5qYXZhCTMgTWFyIDIwMTEgMTg6MDY6MzcgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEwIElCTSBDb3Jw
b3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29y
cG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dy
YW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxl
IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICog
d2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQN
CkBAIC01Nyw3ICs1Nyw3IEBADQogCQlpZiAoaXNMZWZ0T3B0aW1pemVkRmFsc2UpIHsNCiAJCQlp
ZiAoKHJpZ2h0SW5mby5yZWFjaE1vZGUoKSAmIEZsb3dJbmZvLlVOUkVBQ0hBQkxFKSA9PSAwKSB7
DQogCQkJCWN1cnJlbnRTY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5mYWtlUmVhY2hhYmxlKHRoaXMu
cmlnaHQpOw0KLQkJCQlyaWdodEluZm8uc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxF
KTsNCisJCQkJcmlnaHRJbmZvLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRV9PUl9E
RUFEKTsNCiAJCQl9DQogCQl9DQogCQlyaWdodEluZm8gPSB0aGlzLnJpZ2h0LmFuYWx5c2VDb2Rl
KGN1cnJlbnRTY29wZSwgZmxvd0NvbnRleHQsIHJpZ2h0SW5mbyk7DQpJbmRleDogY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Bc3NlcnRTdGF0ZW1lbnQuamF2
YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Bc3Nl
cnRTdGF0ZW1lbnQuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNjcNCmRpZmYgLXUgLXIx
LjY3IEFzc2VydFN0YXRlbWVudC5qYXZhDQotLS0gY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2FzdC9Bc3NlcnRTdGF0ZW1lbnQuamF2YQk3IEZlYiAyMDExIDE2OjE4
OjA1IC0wMDAwCTEuNjcNCisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvYXN0L0Fzc2VydFN0YXRlbWVudC5qYXZhCTMgTWFyIDIwMTEgMTg6MDY6MzcgLTAwMDAN
CkBAIC01Niw3ICs1Niw3IEBADQogCVVuY29uZGl0aW9uYWxGbG93SW5mbyBhc3NlcnRXaGVuVHJ1
ZUluZm8gPSBjb25kaXRpb25GbG93SW5mby5pbml0c1doZW5UcnVlKCkudW5jb25kaXRpb25hbElu
aXRzKCk7DQogCUZsb3dJbmZvIGFzc2VydEluZm8gPSBjb25kaXRpb25GbG93SW5mby5pbml0c1do
ZW5GYWxzZSgpOw0KIAlpZiAoaXNPcHRpbWl6ZWRUcnVlQXNzZXJ0aW9uKSB7DQotCQlhc3NlcnRJ
bmZvLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRSk7DQorCQlhc3NlcnRJbmZvLnNl
dFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRV9PUl9ERUFEKTsNCiAJfQ0KIA0KIAlpZiAo
dGhpcy5leGNlcHRpb25Bcmd1bWVudCAhPSBudWxsKSB7DQpJbmRleDogY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Db25kaXRpb25hbEV4cHJlc3Npb24uamF2
YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Db25k
aXRpb25hbEV4cHJlc3Npb24uamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuOTgNCmRpZmYg
LXUgLXIxLjk4IENvbmRpdGlvbmFsRXhwcmVzc2lvbi5qYXZhDQotLS0gY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Db25kaXRpb25hbEV4cHJlc3Npb24uamF2
YQkxNCBKYW4gMjAxMSAxNzowMjoyNCAtMDAwMAkxLjk4DQorKysgY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Db25kaXRpb25hbEV4cHJlc3Npb24uamF2YQkz
IE1hciAyMDExIDE4OjA2OjM3IC0wMDAwDQpAQCAtNTUsNyArNTUsNyBAQA0KIAkJRmxvd0luZm8g
dHJ1ZUZsb3dJbmZvID0gZmxvd0luZm8uaW5pdHNXaGVuVHJ1ZSgpLmNvcHkoKTsNCiAJCWlmIChp
c0NvbmRpdGlvbk9wdGltaXplZEZhbHNlKSB7DQogCQkJaWYgKChtb2RlICYgRmxvd0luZm8uVU5S
RUFDSEFCTEUpID09IDApIHsNCi0JCQkJdHJ1ZUZsb3dJbmZvLnNldFJlYWNoTW9kZShGbG93SW5m
by5VTlJFQUNIQUJMRSk7DQorCQkJCXRydWVGbG93SW5mby5zZXRSZWFjaE1vZGUoRmxvd0luZm8u
VU5SRUFDSEFCTEVfT1JfREVBRCk7DQogCQkJfQ0KIAkJCWlmICghaXNLbm93RGVhZENvZGVQYXR0
ZXJuKHRoaXMuY29uZGl0aW9uKSB8fCBjdXJyZW50U2NvcGUuY29tcGlsZXJPcHRpb25zKCkucmVw
b3J0RGVhZENvZGVJblRyaXZpYWxJZlN0YXRlbWVudCkgew0KIAkJCQl0aGlzLnZhbHVlSWZUcnVl
LmNvbXBsYWluSWZVbnJlYWNoYWJsZSh0cnVlRmxvd0luZm8sIGN1cnJlbnRTY29wZSwgaW5pdGlh
bENvbXBsYWludExldmVsKTsNCkBAIC02OCw3ICs2OCw3IEBADQogCQlGbG93SW5mbyBmYWxzZUZs
b3dJbmZvID0gZmxvd0luZm8uaW5pdHNXaGVuRmFsc2UoKS5jb3B5KCk7DQogCQlpZiAoaXNDb25k
aXRpb25PcHRpbWl6ZWRUcnVlKSB7DQogCQkJaWYgKChtb2RlICYgRmxvd0luZm8uVU5SRUFDSEFC
TEUpID09IDApIHsNCi0JCQkJZmFsc2VGbG93SW5mby5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5S
RUFDSEFCTEUpOw0KKwkJCQlmYWxzZUZsb3dJbmZvLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJF
QUNIQUJMRV9PUl9ERUFEKTsNCiAJCQl9DQogCQkJaWYgKCFpc0tub3dEZWFkQ29kZVBhdHRlcm4o
dGhpcy5jb25kaXRpb24pIHx8IGN1cnJlbnRTY29wZS5jb21waWxlck9wdGlvbnMoKS5yZXBvcnRE
ZWFkQ29kZUluVHJpdmlhbElmU3RhdGVtZW50KSB7DQogCQkJCXRoaXMudmFsdWVJZkZhbHNlLmNv
bXBsYWluSWZVbnJlYWNoYWJsZShmYWxzZUZsb3dJbmZvLCBjdXJyZW50U2NvcGUsIGluaXRpYWxD
b21wbGFpbnRMZXZlbCk7DQpAQCAtOTgsMTYgKzk4LDE2IEBADQogCQkJVW5jb25kaXRpb25hbEZs
b3dJbmZvIHRydWVJbmZvV2hlbkZhbHNlID0gdHJ1ZUZsb3dJbmZvLmluaXRzV2hlbkZhbHNlKCku
dW5jb25kaXRpb25hbEluaXRzKCk7DQogCQkJVW5jb25kaXRpb25hbEZsb3dJbmZvIGZhbHNlSW5m
b1doZW5GYWxzZSA9IGZhbHNlRmxvd0luZm8uaW5pdHNXaGVuRmFsc2UoKS51bmNvbmRpdGlvbmFs
SW5pdHMoKTsNCiAJCQlpZiAoaXNWYWx1ZUlmVHJ1ZU9wdGltaXplZEZhbHNlKSB7DQotCQkJCXRy
dWVJbmZvV2hlblRydWUuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFKTsJCQkJDQor
CQkJCXRydWVJbmZvV2hlblRydWUuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFX09S
X0RFQUQpOwkJCQkNCiAJCQl9DQogCQkJaWYgKGlzVmFsdWVJZkZhbHNlT3B0aW1pemVkRmFsc2Up
IHsNCi0JCQkJZmFsc2VJbmZvV2hlblRydWUuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hB
QkxFKTsJDQorCQkJCWZhbHNlSW5mb1doZW5UcnVlLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJF
QUNIQUJMRV9PUl9ERUFEKTsJDQogCQkJfQ0KIAkJCWlmIChpc1ZhbHVlSWZUcnVlT3B0aW1pemVk
VHJ1ZSkgew0KLQkJCQl0cnVlSW5mb1doZW5GYWxzZS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5S
RUFDSEFCTEUpOwkNCisJCQkJdHJ1ZUluZm9XaGVuRmFsc2Uuc2V0UmVhY2hNb2RlKEZsb3dJbmZv
LlVOUkVBQ0hBQkxFX09SX0RFQUQpOwkNCiAJCQl9DQogCQkJaWYgKGlzVmFsdWVJZkZhbHNlT3B0
aW1pemVkVHJ1ZSkgew0KLQkJCQlmYWxzZUluZm9XaGVuRmFsc2Uuc2V0UmVhY2hNb2RlKEZsb3dJ
bmZvLlVOUkVBQ0hBQkxFKTsJDQorCQkJCWZhbHNlSW5mb1doZW5GYWxzZS5zZXRSZWFjaE1vZGUo
Rmxvd0luZm8uVU5SRUFDSEFCTEVfT1JfREVBRCk7CQ0KIAkJCX0NCiAJCQltZXJnZWRJbmZvID0N
CiAJCQkJRmxvd0luZm8uY29uZGl0aW9uYWwoDQpJbmRleDogY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Gb3JTdGF0ZW1lbnQuamF2YQ0KPT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0K
UkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Gb3JTdGF0ZW1lbnQuamF2YSx2
DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNjkNCmRpZmYgLXUgLXIxLjY5IEZvclN0YXRlbWVudC5q
YXZhDQotLS0gY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9G
b3JTdGF0ZW1lbnQuamF2YQkyMyBBdWcgMjAxMCAwODo0MToyNSAtMDAwMAkxLjY5DQorKysgY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Gb3JTdGF0ZW1lbnQu
amF2YQkzIE1hciAyMDExIDE4OjA2OjM3IC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMCBJQk0gQ29ycG9y
YXRpb24gYW5kIG90aGVycy4NCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBv
cmF0aW9uIGFuZCBvdGhlcnMuDQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFt
IGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1
bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdo
aWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpA
QCAtMTM1LDcgKzEzNSw3IEBADQogCQkJCX0gZWxzZSB7DQogCQkJCQlhY3Rpb25JbmZvID0gaW5p
dHNXaGVuVHJ1ZS51bmNvbmRpdGlvbmFsQ29weSgpOw0KIAkJCQkJaWYgKGlzQ29uZGl0aW9uT3B0
aW1pemVkRmFsc2Upew0KLQkJCQkJCWFjdGlvbkluZm8uc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVO
UkVBQ0hBQkxFKTsNCisJCQkJCQlhY3Rpb25JbmZvLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJF
QUNIQUJMRV9PUl9ERUFEKTsNCiAJCQkJCX0NCiAJCQkJfQ0KIAkJCWlmICh0aGlzLmFjdGlvbi5j
b21wbGFpbklmVW5yZWFjaGFibGUoYWN0aW9uSW5mbywgdGhpcy5zY29wZSwgaW5pdGlhbENvbXBs
YWludExldmVsKSA8IFN0YXRlbWVudC5DT01QTEFJTkVEX1VOUkVBQ0hBQkxFKSB7DQpJbmRleDog
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9JZlN0YXRlbWVu
dC5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0
L0lmU3RhdGVtZW50LmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjY5DQpkaWZmIC11IC1y
MS42OSBJZlN0YXRlbWVudC5qYXZhDQotLS0gY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2FzdC9JZlN0YXRlbWVudC5qYXZhCTEyIEF1ZyAyMDEwIDE2OjU4OjI4IC0w
MDAwCTEuNjkNCisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
YXN0L0lmU3RhdGVtZW50LmphdmEJMyBNYXIgMjAxMSAxODowNjozNyAtMDAwMA0KQEAgLTEsNSAr
MSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAs
IDIwMTAgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2
ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUg
bWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNl
bnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlz
IGF2YWlsYWJsZSBhdA0KQEAgLTY3LDExICs2NywxMSBAQA0KIAkvLyBwcm9jZXNzIHRoZSBUSEVO
IHBhcnQNCiAJRmxvd0luZm8gdGhlbkZsb3dJbmZvID0gY29uZGl0aW9uRmxvd0luZm8uc2FmZUlu
aXRzV2hlblRydWUoKTsNCiAJaWYgKGlzQ29uZGl0aW9uT3B0aW1pemVkRmFsc2UpIHsNCi0JCXRo
ZW5GbG93SW5mby5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEUpOw0KKwkJdGhlbkZs
b3dJbmZvLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRV9PUl9ERUFEKTsNCiAJfQ0K
IAlGbG93SW5mbyBlbHNlRmxvd0luZm8gPSBjb25kaXRpb25GbG93SW5mby5pbml0c1doZW5GYWxz
ZSgpLmNvcHkoKTsNCiAJaWYgKGlzQ29uZGl0aW9uT3B0aW1pemVkVHJ1ZSkgew0KLQkJZWxzZUZs
b3dJbmZvLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRSk7DQorCQllbHNlRmxvd0lu
Zm8uc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFX09SX0RFQUQpOw0KIAl9DQogCWlm
ICgoKGZsb3dJbmZvLnRhZ0JpdHMgJiBGbG93SW5mby5VTlJFQUNIQUJMRSkgPT0gMCkgJiYgDQog
CQkJKCh0aGVuRmxvd0luZm8udGFnQml0cyAmIEZsb3dJbmZvLlVOUkVBQ0hBQkxFKSAhPSAwKSkg
ew0KSW5kZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3Qv
T1JfT1JfRXhwcmVzc2lvbi5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNs
aXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvYXN0L09SX09SX0V4cHJlc3Npb24uamF2YSx2DQpyZXRyaWV2aW5nIHJldmlz
aW9uIDEuNDUNCmRpZmYgLXUgLXIxLjQ1IE9SX09SX0V4cHJlc3Npb24uamF2YQ0KLS0tIGNvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvT1JfT1JfRXhwcmVzc2lv
bi5qYXZhCTEyIEF1ZyAyMDEwIDE2OjU4OjI4IC0wMDAwCTEuNDUNCisrKyBjb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L09SX09SX0V4cHJlc3Npb24uamF2YQkz
IE1hciAyMDExIDE4OjA2OjM3IC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMCBJQk0gQ29ycG9yYXRpb24g
YW5kIG90aGVycy4NCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9u
IGFuZCBvdGhlcnMuDQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0
aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0
aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFj
Y29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtNTks
NyArNTksNyBAQA0KIAkJaWYgKGlzTGVmdE9wdGltaXplZFRydWUpew0KIAkJCWlmICgocmlnaHRJ
bmZvLnJlYWNoTW9kZSgpICYgRmxvd0luZm8uVU5SRUFDSEFCTEUpID09IDApIHsNCiAJCQkJY3Vy
cmVudFNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmZha2VSZWFjaGFibGUodGhpcy5yaWdodCk7DQot
CQkJCXJpZ2h0SW5mby5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEUpOw0KKwkJCQly
aWdodEluZm8uc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFX09SX0RFQUQpOw0KIAkJ
CX0NCiAJCX0NCiAJCXJpZ2h0SW5mbyA9IHRoaXMucmlnaHQuYW5hbHlzZUNvZGUoY3VycmVudFNj
b3BlLCBmbG93Q29udGV4dCwgcmlnaHRJbmZvKTsNCkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1RyeVN0YXRlbWVudC5qYXZhDQo9PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1RyeVN0YXRlbWVudC5qYXZh
LHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4xMTYNCmRpZmYgLXUgLXIxLjExNiBUcnlTdGF0ZW1l
bnQuamF2YQ0KLS0tIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9h
c3QvVHJ5U3RhdGVtZW50LmphdmEJMTggRGVjIDIwMTAgMjI6MDk6MjYgLTAwMDAJMS4xMTYNCisr
KyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1RyeVN0YXRl
bWVudC5qYXZhCTMgTWFyIDIwMTEgMTg6MDY6MzcgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8q
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEwIElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0g
Q29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHBy
b2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxh
YmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQog
ICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUg
YXQNCkBAIC0xNTAsNyArMTUwLDcgQEANCiAJCQkJaWZUcnVlOiBbY2F0Y2hJbml0cyBhZGRQb3Rl
bnRpYWxJbml0aWFsaXphdGlvbnNGcm9tOiB0cnlJbml0c10uIg0KIAkJCQkqLw0KIAkJCQlpZiAo
dGhpcy50cnlCbG9jay5zdGF0ZW1lbnRzID09IG51bGwpIHsNCi0JCQkJCWNhdGNoSW5mby5zZXRS
ZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEUpOw0KKwkJCQkJY2F0Y2hJbmZvLnNldFJlYWNo
TW9kZShGbG93SW5mby5VTlJFQUNIQUJMRV9PUl9ERUFEKTsNCiAJCQkJfQ0KIAkJCQljYXRjaElu
Zm8gPQ0KIAkJCQkJdGhpcy5jYXRjaEJsb2Nrc1tpXS5hbmFseXNlQ29kZSgNCkluZGV4OiBjb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1R5cGVEZWNsYXJhdGlv
bi5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0
L1R5cGVEZWNsYXJhdGlvbi5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4xNjYNCmRpZmYg
LXUgLXIxLjE2NiBUeXBlRGVjbGFyYXRpb24uamF2YQ0KLS0tIGNvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvVHlwZURlY2xhcmF0aW9uLmphdmEJMTEgRmViIDIw
MTEgMTQ6NTU6MDYgLTAwMDAJMS4xNjYNCisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvYXN0L1R5cGVEZWNsYXJhdGlvbi5qYXZhCTMgTWFyIDIwMTEgMTg6MDY6
NDAgLTAwMDANCkBAIC02NDYsNyArNjQ2LDcgQEANCiAJCQkJLy8gYnJhbmNoLCBzaW5jZSB0aGUg
cHJldmlvdXMgaW5pdGlhbGl6ZXIgYWxyZWFkeSBnb3QgdGhlIGJsYW1lLg0KIAkJCQlpZiAoc3Rh
dGljRmllbGRJbmZvID09IEZsb3dJbmZvLkRFQURfRU5EKSB7DQogCQkJCQl0aGlzLnN0YXRpY0lu
aXRpYWxpemVyU2NvcGUucHJvYmxlbVJlcG9ydGVyKCkuaW5pdGlhbGl6ZXJNdXN0Q29tcGxldGVO
b3JtYWxseShmaWVsZCk7DQotCQkJCQlzdGF0aWNGaWVsZEluZm8gPSBGbG93SW5mby5pbml0aWFs
KHRoaXMubWF4RmllbGRDb3VudCkuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFKTsN
CisJCQkJCXN0YXRpY0ZpZWxkSW5mbyA9IEZsb3dJbmZvLmluaXRpYWwodGhpcy5tYXhGaWVsZENv
dW50KS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEVfT1JfREVBRCk7DQogCQkJCX0N
CiAJCQl9IGVsc2Ugew0KIAkJCQlpZiAoKG5vblN0YXRpY0ZpZWxkSW5mby50YWdCaXRzICYgRmxv
d0luZm8uVU5SRUFDSEFCTEUpICE9IDApDQpAQCAtNjYyLDcgKzY2Miw3IEBADQogCQkJCS8vIGJy
YW5jaCwgc2luY2UgdGhlIHByZXZpb3VzIGluaXRpYWxpemVyIGFscmVhZHkgZ290IHRoZSBibGFt
ZS4NCiAJCQkJaWYgKG5vblN0YXRpY0ZpZWxkSW5mbyA9PSBGbG93SW5mby5ERUFEX0VORCkgew0K
IAkJCQkJdGhpcy5pbml0aWFsaXplclNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmluaXRpYWxpemVy
TXVzdENvbXBsZXRlTm9ybWFsbHkoZmllbGQpOw0KLQkJCQkJbm9uU3RhdGljRmllbGRJbmZvID0g
Rmxvd0luZm8uaW5pdGlhbCh0aGlzLm1heEZpZWxkQ291bnQpLnNldFJlYWNoTW9kZShGbG93SW5m
by5VTlJFQUNIQUJMRSk7DQorCQkJCQlub25TdGF0aWNGaWVsZEluZm8gPSBGbG93SW5mby5pbml0
aWFsKHRoaXMubWF4RmllbGRDb3VudCkuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxF
X09SX0RFQUQpOw0KIAkJCQl9DQogCQkJfQ0KIAkJfQ0KSW5kZXg6IGNvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvV2hpbGVTdGF0ZW1lbnQuamF2YQ0KPT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9XaGlsZVN0YXRlbWVu
dC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS42Ng0KZGlmZiAtdSAtcjEuNjYgV2hpbGVT
dGF0ZW1lbnQuamF2YQ0KLS0tIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9hc3QvV2hpbGVTdGF0ZW1lbnQuamF2YQkyMyBBdWcgMjAxMCAwODo0MToyNSAtMDAwMAkx
LjY2DQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9X
aGlsZVN0YXRlbWVudC5qYXZhCTMgTWFyIDIwMTEgMTg6MDY6NDAgLTAwMDANCkBAIC0xLDUgKzEs
NSBAQA0KIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAy
MDEwIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwg
MjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVk
LiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1h
ZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5z
ZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBh
dmFpbGFibGUgYXQNCkBAIC04Miw3ICs4Miw3IEBADQogCQkJfSBlbHNlIHsNCiAJCQkJRmxvd0lu
Zm8gbWVyZ2VkSW5mbyA9IGZsb3dJbmZvLmNvcHkoKS5hZGRJbml0aWFsaXphdGlvbnNGcm9tKGNv
bmRJbmZvLmluaXRzV2hlbkZhbHNlKCkpOw0KIAkJCQlpZiAoaXNDb25kaXRpb25PcHRpbWl6ZWRU
cnVlKXsNCi0JCQkJCW1lcmdlZEluZm8uc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxF
KTsNCisJCQkJCW1lcmdlZEluZm8uc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFX09S
X0RFQUQpOw0KIAkJCQl9DQogCQkJCXRoaXMubWVyZ2VkSW5pdFN0YXRlSW5kZXggPQ0KIAkJCQkJ
Y3VycmVudFNjb3BlLm1ldGhvZFNjb3BlKCkucmVjb3JkSW5pdGlhbGl6YXRpb25TdGF0ZXMobWVy
Z2VkSW5mbyk7DQpAQCAtMTA0LDcgKzEwNCw3IEBADQogCQkJfSBlbHNlIHsNCiAJCQkJYWN0aW9u
SW5mbyA9IGNvbmRJbmZvLmluaXRzV2hlblRydWUoKS5jb3B5KCk7DQogCQkJCWlmIChpc0NvbmRp
dGlvbk9wdGltaXplZEZhbHNlKXsNCi0JCQkJCWFjdGlvbkluZm8uc2V0UmVhY2hNb2RlKEZsb3dJ
bmZvLlVOUkVBQ0hBQkxFKTsNCisJCQkJCWFjdGlvbkluZm8uc2V0UmVhY2hNb2RlKEZsb3dJbmZv
LlVOUkVBQ0hBQkxFX09SX0RFQUQpOw0KIAkJCQl9DQogCQkJfQ0KIA0KSW5kZXg6IGNvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L0NvbmRpdGlvbmFsRmxvd0lu
Zm8uamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zs
b3cvQ29uZGl0aW9uYWxGbG93SW5mby5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4zMw0K
ZGlmZiAtdSAtcjEuMzMgQ29uZGl0aW9uYWxGbG93SW5mby5qYXZhDQotLS0gY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvQ29uZGl0aW9uYWxGbG93SW5mby5q
YXZhCTE2IERlYyAyMDEwIDEzOjAyOjMwIC0wMDAwCTEuMzMNCisrKyBjb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxvdy9Db25kaXRpb25hbEZsb3dJbmZvLmphdmEJ
MyBNYXIgMjAxMSAxODowNjo0MCAtMDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBvcmF0aW9u
IGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlv
biBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQg
dGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIg
dGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBh
Y2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTE5
NSw3ICsxOTUsNyBAQA0KIAkJdGhpcy50YWdCaXRzICY9IH5VTlJFQUNIQUJMRTsNCiAJfQ0KIAll
bHNlIHsNCi0JCXRoaXMudGFnQml0cyB8PSBVTlJFQUNIQUJMRTsNCisJCXRoaXMudGFnQml0cyB8
PSByZWFjaE1vZGU7DQogCX0NCiAJdGhpcy5pbml0c1doZW5UcnVlLnNldFJlYWNoTW9kZShyZWFj
aE1vZGUpOw0KIAl0aGlzLmluaXRzV2hlbkZhbHNlLnNldFJlYWNoTW9kZShyZWFjaE1vZGUpOw0K
SW5kZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L0Zp
bmFsbHlGbG93Q29udGV4dC5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNs
aXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvZmxvdy9GaW5hbGx5Rmxvd0NvbnRleHQuamF2YSx2DQpyZXRyaWV2aW5nIHJl
dmlzaW9uIDEuMzUNCmRpZmYgLXUgLXIxLjM1IEZpbmFsbHlGbG93Q29udGV4dC5qYXZhDQotLS0g
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvRmluYWxseUZs
b3dDb250ZXh0LmphdmEJMjUgRmViIDIwMTAgMTU6Mjc6MDAgLTAwMDAJMS4zNQ0KKysrIGNvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L0ZpbmFsbHlGbG93Q29u
dGV4dC5qYXZhCTMgTWFyIDIwMTEgMTg6MDY6NDAgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8q
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEwIElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0g
Q29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHBy
b2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxh
YmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQog
ICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUg
YXQNCkBAIC0yMjksMTQgKzIyOSwxNCBAQA0KIAkJCQkJCQkJCXNjb3BlLnByb2JsZW1SZXBvcnRl
cigpLmxvY2FsVmFyaWFibGVSZWR1bmRhbnRDaGVja09uTm9uTnVsbChsb2NhbCwgcmVmZXJlbmNl
KTsNCiAJCQkJCQkJCX0NCiAJCQkJCQkJCWlmICghZmxvd0luZm8uaXNNYXJrZWRBc051bGxPck5v
bk51bGxJbkFzc2VydEV4cHJlc3Npb24obG9jYWwpKSB7DQotCQkJCQkJCQkJZmxvd0luZm8uaW5p
dHNXaGVuRmFsc2UoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEUpOw0KKwkJCQkJ
CQkJCWZsb3dJbmZvLmluaXRzV2hlbkZhbHNlKCkuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVB
Q0hBQkxFX0JZX05VTExBTkFMWVNJUyk7DQogCQkJCQkJCQl9DQogCQkJCQkJCX0gZWxzZSBpZiAo
Y2hlY2tUeXBlID09IChDQU5fT05MWV9OVUxMX05PTl9OVUxMIHwgSU5fQ09NUEFSSVNPTl9OVUxM
KSkgew0KIAkJCQkJCQkJaWYgKCh0aGlzLnRhZ0JpdHMgJiBGbG93Q29udGV4dC5ISURFX05VTExf
Q09NUEFSSVNPTl9XQVJOSU5HKSA9PSAwKSB7DQogCQkJCQkJCQkJc2NvcGUucHJvYmxlbVJlcG9y
dGVyKCkubG9jYWxWYXJpYWJsZU5vbk51bGxDb21wYXJlZFRvTnVsbChsb2NhbCwgcmVmZXJlbmNl
KTsNCiAJCQkJCQkJCX0NCiAJCQkJCQkJCWlmICghZmxvd0luZm8uaXNNYXJrZWRBc051bGxPck5v
bk51bGxJbkFzc2VydEV4cHJlc3Npb24obG9jYWwpKSB7DQotCQkJCQkJCQkJZmxvd0luZm8uaW5p
dHNXaGVuVHJ1ZSgpLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRSk7DQorCQkJCQkJ
CQkJZmxvd0luZm8uaW5pdHNXaGVuVHJ1ZSgpLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNI
QUJMRV9CWV9OVUxMQU5BTFlTSVMpOw0KIAkJCQkJCQkJfQ0KIAkJCQkJCQl9DQogCQkJCQkJCXJl
dHVybjsNCkBAIC0yNTIsNyArMjUyLDcgQEANCiAJCQkJCQkJCQkJc2NvcGUucHJvYmxlbVJlcG9y
dGVyKCkubG9jYWxWYXJpYWJsZVJlZHVuZGFudENoZWNrT25OdWxsKGxvY2FsLCByZWZlcmVuY2Up
Ow0KIAkJCQkJCQkJCX0NCiAJCQkJCQkJCQlpZiAoIWZsb3dJbmZvLmlzTWFya2VkQXNOdWxsT3JO
b25OdWxsSW5Bc3NlcnRFeHByZXNzaW9uKGxvY2FsKSkgew0KLQkJCQkJCQkJCQlmbG93SW5mby5p
bml0c1doZW5GYWxzZSgpLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRSk7DQorCQkJ
CQkJCQkJCWZsb3dJbmZvLmluaXRzV2hlbkZhbHNlKCkuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVO
UkVBQ0hBQkxFX0JZX05VTExBTkFMWVNJUyk7DQogCQkJCQkJCQkJfQ0KIAkJCQkJCQkJCXJldHVy
bjsNCiAJCQkJCQkJCWNhc2UgRmxvd0NvbnRleHQuSU5fQ09NUEFSSVNPTl9OT05fTlVMTDoNCkBA
IC0yNjQsNyArMjY0LDcgQEANCiAJCQkJCQkJCQkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkubG9j
YWxWYXJpYWJsZU51bGxDb21wYXJlZFRvTm9uTnVsbChsb2NhbCwgcmVmZXJlbmNlKTsNCiAJCQkJ
CQkJCQl9DQogCQkJCQkJCQkJaWYgKCFmbG93SW5mby5pc01hcmtlZEFzTnVsbE9yTm9uTnVsbElu
QXNzZXJ0RXhwcmVzc2lvbihsb2NhbCkpIHsNCi0JCQkJCQkJCQkJZmxvd0luZm8uaW5pdHNXaGVu
VHJ1ZSgpLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRSk7DQorCQkJCQkJCQkJCWZs
b3dJbmZvLmluaXRzV2hlblRydWUoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEVf
QllfTlVMTEFOQUxZU0lTKTsNCiAJCQkJCQkJCQl9DQogCQkJCQkJCQkJcmV0dXJuOw0KIAkJCQkJ
CQkJY2FzZSBGbG93Q29udGV4dC5JTl9BU1NJR05NRU5UOg0KQEAgLTMxNCwxNCArMzE0LDE0IEBA
DQogCQkJCQkJCQkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkubG9jYWxWYXJpYWJsZVJlZHVuZGFu
dENoZWNrT25Ob25OdWxsKGxvY2FsLCByZWZlcmVuY2UpOw0KIAkJCQkJCQkJfQ0KIAkJCQkJCQkJ
aWYgKCFmbG93SW5mby5pc01hcmtlZEFzTnVsbE9yTm9uTnVsbEluQXNzZXJ0RXhwcmVzc2lvbihs
b2NhbCkpIHsNCi0JCQkJCQkJCQlmbG93SW5mby5pbml0c1doZW5GYWxzZSgpLnNldFJlYWNoTW9k
ZShGbG93SW5mby5VTlJFQUNIQUJMRSk7DQorCQkJCQkJCQkJZmxvd0luZm8uaW5pdHNXaGVuRmFs
c2UoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEVfQllfTlVMTEFOQUxZU0lTKTsN
CiAJCQkJCQkJCX0NCiAJCQkJCQkJfSBlbHNlIHsNCiAJCQkJCQkJCWlmICgodGhpcy50YWdCaXRz
ICYgRmxvd0NvbnRleHQuSElERV9OVUxMX0NPTVBBUklTT05fV0FSTklORykgPT0gMCkgew0KIAkJ
CQkJCQkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmxvY2FsVmFyaWFibGVOb25OdWxsQ29tcGFy
ZWRUb051bGwobG9jYWwsIHJlZmVyZW5jZSk7DQogCQkJCQkJCQl9DQogCQkJCQkJCQlpZiAoIWZs
b3dJbmZvLmlzTWFya2VkQXNOdWxsT3JOb25OdWxsSW5Bc3NlcnRFeHByZXNzaW9uKGxvY2FsKSkg
ew0KLQkJCQkJCQkJCWZsb3dJbmZvLmluaXRzV2hlblRydWUoKS5zZXRSZWFjaE1vZGUoRmxvd0lu
Zm8uVU5SRUFDSEFCTEUpOw0KKwkJCQkJCQkJCWZsb3dJbmZvLmluaXRzV2hlblRydWUoKS5zZXRS
ZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEVfQllfTlVMTEFOQUxZU0lTKTsNCiAJCQkJCQkJ
CX0NCiAJCQkJCQkJfQ0KIAkJCQkJCQlyZXR1cm47DQpAQCAtMzQyLDcgKzM0Miw3IEBADQogCQkJ
CQkJCQkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmxvY2FsVmFyaWFibGVSZWR1bmRhbnRDaGVj
a09uTnVsbChsb2NhbCwgcmVmZXJlbmNlKTsNCiAJCQkJCQkJCQl9DQogCQkJCQkJCQkJaWYgKCFm
bG93SW5mby5pc01hcmtlZEFzTnVsbE9yTm9uTnVsbEluQXNzZXJ0RXhwcmVzc2lvbihsb2NhbCkp
IHsNCi0JCQkJCQkJCQkJZmxvd0luZm8uaW5pdHNXaGVuRmFsc2UoKS5zZXRSZWFjaE1vZGUoRmxv
d0luZm8uVU5SRUFDSEFCTEUpOw0KKwkJCQkJCQkJCQlmbG93SW5mby5pbml0c1doZW5GYWxzZSgp
LnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRV9CWV9OVUxMQU5BTFlTSVMpOw0KIAkJ
CQkJCQkJCX0NCiAJCQkJCQkJCQlyZXR1cm47DQogCQkJCQkJCQljYXNlIEZsb3dDb250ZXh0LklO
X0NPTVBBUklTT05fTk9OX05VTEw6DQpAQCAtMzU0LDcgKzM1NCw3IEBADQogCQkJCQkJCQkJCXNj
b3BlLnByb2JsZW1SZXBvcnRlcigpLmxvY2FsVmFyaWFibGVOdWxsQ29tcGFyZWRUb05vbk51bGwo
bG9jYWwsIHJlZmVyZW5jZSk7DQogCQkJCQkJCQkJfQ0KIAkJCQkJCQkJCWlmICghZmxvd0luZm8u
aXNNYXJrZWRBc051bGxPck5vbk51bGxJbkFzc2VydEV4cHJlc3Npb24obG9jYWwpKSB7DQotCQkJ
CQkJCQkJCWZsb3dJbmZvLmluaXRzV2hlblRydWUoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5S
RUFDSEFCTEUpOw0KKwkJCQkJCQkJCQlmbG93SW5mby5pbml0c1doZW5UcnVlKCkuc2V0UmVhY2hN
b2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFX0JZX05VTExBTkFMWVNJUyk7DQogCQkJCQkJCQkJfQ0K
IAkJCQkJCQkJCXJldHVybjsNCiAJCQkJCQkJCWNhc2UgRmxvd0NvbnRleHQuSU5fQVNTSUdOTUVO
VDoNCkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxv
dy9GbG93Q29udGV4dC5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBz
ZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvZmxvdy9GbG93Q29udGV4dC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS42
OA0KZGlmZiAtdSAtcjEuNjggRmxvd0NvbnRleHQuamF2YQ0KLS0tIGNvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L0Zsb3dDb250ZXh0LmphdmEJMSBTZXAgMjAx
MCAxNTo0OTo1NyAtMDAwMAkxLjY4DQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2Zsb3cvRmxvd0NvbnRleHQuamF2YQkzIE1hciAyMDExIDE4OjA2OjQwIC0w
MDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLSAqIENvcHly
aWdodCAoYykgMjAwMCwgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCisgKiBDb3B5
cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQogICogQWxs
IHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVy
aWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlw
c2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJp
YnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtNTc4LDE0ICs1NzgsMTQgQEANCiAJCQkJ
CQlzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5sb2NhbFZhcmlhYmxlUmVkdW5kYW50Q2hlY2tPbk5v
bk51bGwobG9jYWwsIHJlZmVyZW5jZSk7DQogCQkJCQl9DQogCQkJCQlpZiAoIWZsb3dJbmZvLmlz
TWFya2VkQXNOdWxsT3JOb25OdWxsSW5Bc3NlcnRFeHByZXNzaW9uKGxvY2FsKSkgew0KLQkJCQkJ
CWZsb3dJbmZvLmluaXRzV2hlbkZhbHNlKCkuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hB
QkxFKTsNCisJCQkJCQlmbG93SW5mby5pbml0c1doZW5GYWxzZSgpLnNldFJlYWNoTW9kZShGbG93
SW5mby5VTlJFQUNIQUJMRV9CWV9OVUxMQU5BTFlTSVMpOw0KIAkJCQkJfQ0KIAkJCQl9IGVsc2Ug
ew0KIAkJCQkJaWYgKCh0aGlzLnRhZ0JpdHMgJiBGbG93Q29udGV4dC5ISURFX05VTExfQ09NUEFS
SVNPTl9XQVJOSU5HKSA9PSAwKSB7DQogCQkJCQkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkubG9j
YWxWYXJpYWJsZU5vbk51bGxDb21wYXJlZFRvTnVsbChsb2NhbCwgcmVmZXJlbmNlKTsNCiAJCQkJ
CX0NCiAJCQkJCWlmICghZmxvd0luZm8uaXNNYXJrZWRBc051bGxPck5vbk51bGxJbkFzc2VydEV4
cHJlc3Npb24obG9jYWwpKSB7DQotCQkJCQkJZmxvd0luZm8uaW5pdHNXaGVuVHJ1ZSgpLnNldFJl
YWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRSk7DQorCQkJCQkJZmxvd0luZm8uaW5pdHNXaGVu
VHJ1ZSgpLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRV9CWV9OVUxMQU5BTFlTSVMp
Ow0KIAkJCQkJfQ0KIAkJCQl9DQogCQkJCXJldHVybjsNCkBAIC02MDksNyArNjA5LDcgQEANCiAJ
CQkJCQkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkubG9jYWxWYXJpYWJsZVJlZHVuZGFudENoZWNr
T25OdWxsKGxvY2FsLCByZWZlcmVuY2UpOw0KIAkJCQkJCX0NCiAJCQkJCQlpZiAoIWZsb3dJbmZv
LmlzTWFya2VkQXNOdWxsT3JOb25OdWxsSW5Bc3NlcnRFeHByZXNzaW9uKGxvY2FsKSkgew0KLQkJ
CQkJCQlmbG93SW5mby5pbml0c1doZW5GYWxzZSgpLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJF
QUNIQUJMRSk7DQorCQkJCQkJCWZsb3dJbmZvLmluaXRzV2hlbkZhbHNlKCkuc2V0UmVhY2hNb2Rl
KEZsb3dJbmZvLlVOUkVBQ0hBQkxFX0JZX05VTExBTkFMWVNJUyk7DQogCQkJCQkJfQ0KIAkJCQkJ
CXJldHVybjsNCiAJCQkJCWNhc2UgRmxvd0NvbnRleHQuSU5fQ09NUEFSSVNPTl9OT05fTlVMTDoN
CkBAIC02MjEsNyArNjIxLDcgQEANCiAJCQkJCQkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkubG9j
YWxWYXJpYWJsZU51bGxDb21wYXJlZFRvTm9uTnVsbChsb2NhbCwgcmVmZXJlbmNlKTsNCiAJCQkJ
CQl9DQogCQkJCQkJaWYgKCFmbG93SW5mby5pc01hcmtlZEFzTnVsbE9yTm9uTnVsbEluQXNzZXJ0
RXhwcmVzc2lvbihsb2NhbCkpIHsNCi0JCQkJCQkJZmxvd0luZm8uaW5pdHNXaGVuVHJ1ZSgpLnNl
dFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRSk7DQorCQkJCQkJCWZsb3dJbmZvLmluaXRz
V2hlblRydWUoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEVfQllfTlVMTEFOQUxZ
U0lTKTsNCiAJCQkJCQl9DQogCQkJCQkJcmV0dXJuOw0KIAkJCQkJY2FzZSBGbG93Q29udGV4dC5J
Tl9BU1NJR05NRU5UOg0KSW5kZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9mbG93L0Zsb3dJbmZvLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9v
dC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9mbG93L0Zsb3dJbmZvLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lv
biAxLjQ1DQpkaWZmIC11IC1yMS40NSBGbG93SW5mby5qYXZhDQotLS0gY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvRmxvd0luZm8uamF2YQkxNiBEZWMgMjAx
MCAxMzowMjozMCAtMDAwMAkxLjQ1DQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2Zsb3cvRmxvd0luZm8uamF2YQkzIE1hciAyMDExIDE4OjA2OjQwIC0wMDAw
DQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdo
dCAoYykgMjAwMCwgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCisgKiBDb3B5cmln
aHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQogICogQWxsIHJp
Z2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFs
cw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2Ug
UHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0
aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtMjIsOSArMjIsMjQgQEANCiANCiAJcHVibGlj
IGludCB0YWdCaXRzOyAvLyBSRUFDSEFCTEUgYnkgZGVmYXVsdA0KIAlwdWJsaWMgZmluYWwgc3Rh
dGljIGludCBSRUFDSEFCTEUgPSAwOw0KLQlwdWJsaWMgZmluYWwgc3RhdGljIGludCBVTlJFQUNI
QUJMRSA9IDE7DQotCXB1YmxpYyBmaW5hbCBzdGF0aWMgaW50IE5VTExfRkxBR19NQVNLID0gMjsN
Ci0NCisJLyogdW5yZWFjaGFibGUgY29kZSANCisJICogZWcuIHdoaWxlICh0cnVlKTsNCisJICog
ICAgIGkrKzsgIC0tPiB1bnJlYWNoYWJsZSBjb2RlIA0KKwkgKi8NCisJcHVibGljIGZpbmFsIHN0
YXRpYyBpbnQgVU5SRUFDSEFCTEVfT1JfREVBRCA9IDE7DQorCS8qIHVucmVhY2hhYmxlIGNvZGUg
YXMgaW5mZXJyZWQgYnkgbnVsbCBhbmFseXNpcw0KKwkgKiBlZy4gc3RyID0gbnVsbDsNCisJICog
ICAgIGlmIChzdHIgIT0gbnVsbCkgew0KKwkgKiAgICAgICAgLy8gZGVhZCBjb2RlDQorCSAqICAg
ICB9DQorCSAqLw0KKwlwdWJsaWMgZmluYWwgc3RhdGljIGludCBVTlJFQUNIQUJMRV9CWV9OVUxM
QU5BTFlTSVMgPSAyOw0KKwkvKg0KKwkgKiBjb2RlIHVucmVhY2hhYmxlIGluIGFueSBmYXNoaW9u
DQorCSAqLw0KKwlwdWJsaWMgZmluYWwgc3RhdGljIGludCBVTlJFQUNIQUJMRSA9IFVOUkVBQ0hB
QkxFX09SX0RFQUQgfCBVTlJFQUNIQUJMRV9CWV9OVUxMQU5BTFlTSVM7DQorCXB1YmxpYyBmaW5h
bCBzdGF0aWMgaW50IE5VTExfRkxBR19NQVNLID0gNDsNCisJDQogCXB1YmxpYyBmaW5hbCBzdGF0
aWMgaW50IFVOS05PV04gPSAxOw0KIAlwdWJsaWMgZmluYWwgc3RhdGljIGludCBOVUxMID0gMjsN
CiAJcHVibGljIGZpbmFsIHN0YXRpYyBpbnQgTk9OX05VTEwgPSA0Ow0KQEAgLTM1NSw3ICszNzAs
NyBAQA0KIAlVbmNvbmRpdGlvbmFsRmxvd0luZm8gbWVyZ2VkSW5mbzsNCiAJaWYgKGlzT3B0aW1p
emVkVHJ1ZSl7DQogCQlpZiAoaW5pdHNXaGVuVHJ1ZSA9PSBGbG93SW5mby5ERUFEX0VORCAmJiBh
bGxvd0Zha2VEZWFkQnJhbmNoKSB7DQotCQkJbWVyZ2VkSW5mbyA9IGluaXRzV2hlbkZhbHNlLnNl
dFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRSkuDQorCQkJbWVyZ2VkSW5mbyA9IGluaXRz
V2hlbkZhbHNlLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRV9PUl9ERUFEKS4NCiAJ
CQkJdW5jb25kaXRpb25hbEluaXRzKCk7DQogCQl9DQogCQllbHNlIHsNCkBAIC0zNjcsNyArMzgy
LDcgQEANCiAJfQ0KIAllbHNlIGlmIChpc09wdGltaXplZEZhbHNlKSB7DQogCQlpZiAoaW5pdHNX
aGVuRmFsc2UgPT0gRmxvd0luZm8uREVBRF9FTkQgJiYgYWxsb3dGYWtlRGVhZEJyYW5jaCkgew0K
LQkJCW1lcmdlZEluZm8gPSBpbml0c1doZW5UcnVlLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJF
QUNIQUJMRSkuDQorCQkJbWVyZ2VkSW5mbyA9IGluaXRzV2hlblRydWUuc2V0UmVhY2hNb2RlKEZs
b3dJbmZvLlVOUkVBQ0hBQkxFX09SX0RFQUQpLg0KIAkJCQl1bmNvbmRpdGlvbmFsSW5pdHMoKTsN
CiAJCX0NCiAJCWVsc2Ugew0KQEAgLTM5NCw3ICs0MDksNyBAQA0KIAlVbmNvbmRpdGlvbmFsRmxv
d0luZm8gbWVyZ2VkSW5mbzsNCiAJaWYgKGlzT3B0aW1pemVkVHJ1ZSl7DQogCQlpZiAoaW5pdHNX
aGVuVHJ1ZSA9PSBGbG93SW5mby5ERUFEX0VORCAmJiBhbGxvd0Zha2VEZWFkQnJhbmNoKSB7DQot
CQkJbWVyZ2VkSW5mbyA9IGluaXRzV2hlbkZhbHNlLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJF
QUNIQUJMRSkuDQorCQkJbWVyZ2VkSW5mbyA9IGluaXRzV2hlbkZhbHNlLnNldFJlYWNoTW9kZShG
bG93SW5mby5VTlJFQUNIQUJMRV9PUl9ERUFEKS4NCiAJCQkJdW5jb25kaXRpb25hbEluaXRzKCk7
DQogCQl9DQogCQllbHNlIHsNCkBAIC00MDYsNyArNDIxLDcgQEANCiAJfQ0KIAllbHNlIGlmIChp
c09wdGltaXplZEZhbHNlKSB7DQogCQlpZiAoaW5pdHNXaGVuRmFsc2UgPT0gRmxvd0luZm8uREVB
RF9FTkQgJiYgYWxsb3dGYWtlRGVhZEJyYW5jaCkgew0KLQkJCW1lcmdlZEluZm8gPSBpbml0c1do
ZW5UcnVlLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRSkuDQorCQkJbWVyZ2VkSW5m
byA9IGluaXRzV2hlblRydWUuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFX09SX0RF
QUQpLg0KIAkJCQl1bmNvbmRpdGlvbmFsSW5pdHMoKTsNCiAJCX0NCiAJCWVsc2Ugew0KQEAgLTQ1
NiwxMCArNDcxLDkgQEANCiB9DQogDQogLyoqDQotICogUmV0dXJuIFJFQUNIQUJMRSBpZiB0aGlz
IGZsb3cgaW5mbyBpcyByZWFjaGFibGUsIFVOUkVBQ0hBQkxFDQotICogZWxzZS4NCi0gKiBAcmV0
dXJuIFJFQUNIQUJMRSBpZiB0aGlzIGZsb3cgaW5mbyBpcyByZWFjaGFibGUsIFVOUkVBQ0hBQkxF
DQotICogICAgICAgICBlbHNlDQorICogRmluZCBvdXQgdGhlIHJlYWNoYWJpbGl0eSBtb2RlIG9m
IHRoaXMgZmxvd0luZm8uDQorICogQHJldHVybiBSRUFDSEFCTEUgaWYgdGhpcyBmbG93IGluZm8g
aXMgcmVhY2hhYmxlLCBvdGhlcndpc2UNCisgKiAgICAgICAgIGVpdGhlciBVTlJFQUNIQUJMRV9P
Ul9ERUFEIG9yIFVOUkVBQ0hBQkxFX0JZX05VTExBTkFMWVNJUy4NCiAgKi8NCiBwdWJsaWMgaW50
IHJlYWNoTW9kZSgpIHsNCiAJcmV0dXJuIHRoaXMudGFnQml0cyAmIFVOUkVBQ0hBQkxFOw0KQEAg
LTQ3Niw3ICs0OTAsOCBAQA0KIA0KIC8qKg0KICAqIFNldCB0aGlzIGZsb3cgaW5mbyByZWFjaCBt
b2RlIGFuZCByZXR1cm4gdGhpcy4NCi0gKiBAcGFyYW0gcmVhY2hNb2RlIG9uZSBvZiB7QGxpbmsg
I1JFQUNIQUJMRSBSRUFDSEFCTEV9IG9yIHtAbGluayAjVU5SRUFDSEFCTEUgVU5SRUFDSEFCTEV9
DQorICogQHBhcmFtIHJlYWNoTW9kZSBvbmUgb2Yge0BsaW5rICNSRUFDSEFCTEUgUkVBQ0hBQkxF
fSwge0BsaW5rICNVTlJFQUNIQUJMRV9PUl9ERUFEIFVOUkVBQ0hBQkxFX09SX0RFQUR9LA0KKyAq
IHtAbGluayAjVU5SRUFDSEFCTEVfQllfTlVMTEFOQUxZU0lTIFVOUkVBQ0hBQkxFX0JZX05VTExB
TkFMWVNJU30gb3Ige0BsaW5rICNVTlJFQUNIQUJMRSBVTlJFQUNIQUJMRX0NCiAgKiBAcmV0dXJu
IHRoaXMsIHdpdGggdGhlIHJlYWNoIG1vZGUgc2V0IHRvIHJlYWNoTW9kZQ0KICAqLw0KIGFic3Ry
YWN0IHB1YmxpYyBGbG93SW5mbyBzZXRSZWFjaE1vZGUoaW50IHJlYWNoTW9kZSk7DQpJbmRleDog
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvTG9vcGluZ0Zs
b3dDb250ZXh0LmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9mbG93L0xvb3BpbmdGbG93Q29udGV4dC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24g
MS41Mg0KZGlmZiAtdSAtcjEuNTIgTG9vcGluZ0Zsb3dDb250ZXh0LmphdmENCi0tLSBjb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxvdy9Mb29waW5nRmxvd0NvbnRl
eHQuamF2YQkxNiBGZWIgMjAxMSAxODo1Nzo0OCAtMDAwMAkxLjUyDQorKysgY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvTG9vcGluZ0Zsb3dDb250ZXh0Lmph
dmEJMyBNYXIgMjAxMSAxODowNjo0MCAtMDAwMA0KQEAgLTQ5MywxNCArNDkzLDE0IEBADQogCQkJ
CQkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkubG9jYWxWYXJpYWJsZVJlZHVuZGFudENoZWNrT25O
b25OdWxsKGxvY2FsLCByZWZlcmVuY2UpOw0KIAkJCQkJfQ0KIAkJCQkJaWYgKCFmbG93SW5mby5p
c01hcmtlZEFzTnVsbE9yTm9uTnVsbEluQXNzZXJ0RXhwcmVzc2lvbihsb2NhbCkpIHsNCi0JCQkJ
CQlmbG93SW5mby5pbml0c1doZW5GYWxzZSgpLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNI
QUJMRSk7DQorCQkJCQkJZmxvd0luZm8uaW5pdHNXaGVuRmFsc2UoKS5zZXRSZWFjaE1vZGUoRmxv
d0luZm8uVU5SRUFDSEFCTEVfQllfTlVMTEFOQUxZU0lTKTsNCiAJCQkJCX0NCiAJCQkJfSBlbHNl
IHsNCiAJCQkJCWlmICgodGhpcy50YWdCaXRzICYgRmxvd0NvbnRleHQuSElERV9OVUxMX0NPTVBB
UklTT05fV0FSTklORykgPT0gMCkgew0KIAkJCQkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmxv
Y2FsVmFyaWFibGVOb25OdWxsQ29tcGFyZWRUb051bGwobG9jYWwsIHJlZmVyZW5jZSk7DQogCQkJ
CQl9DQogCQkJCQlpZiAoIWZsb3dJbmZvLmlzTWFya2VkQXNOdWxsT3JOb25OdWxsSW5Bc3NlcnRF
eHByZXNzaW9uKGxvY2FsKSkgew0KLQkJCQkJCWZsb3dJbmZvLmluaXRzV2hlblRydWUoKS5zZXRS
ZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEUpOw0KKwkJCQkJCWZsb3dJbmZvLmluaXRzV2hl
blRydWUoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEVfQllfTlVMTEFOQUxZU0lT
KTsNCiAJCQkJCX0NCiAJCQkJfQ0KIAkJCX0gZWxzZSBpZiAoZmxvd0luZm8uaXNEZWZpbml0ZWx5
TnVsbChsb2NhbCkpIHsNCkBAIC01MDksMTQgKzUwOSwxNCBAQA0KIAkJCQkJCXNjb3BlLnByb2Js
ZW1SZXBvcnRlcigpLmxvY2FsVmFyaWFibGVSZWR1bmRhbnRDaGVja09uTnVsbChsb2NhbCwgcmVm
ZXJlbmNlKTsNCiAJCQkJCX0NCiAJCQkJCWlmICghZmxvd0luZm8uaXNNYXJrZWRBc051bGxPck5v
bk51bGxJbkFzc2VydEV4cHJlc3Npb24obG9jYWwpKSB7DQotCQkJCQkJZmxvd0luZm8uaW5pdHNX
aGVuRmFsc2UoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEUpOw0KKwkJCQkJCWZs
b3dJbmZvLmluaXRzV2hlbkZhbHNlKCkuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxF
X0JZX05VTExBTkFMWVNJUyk7DQogCQkJCQl9DQogCQkJCX0gZWxzZSB7DQogCQkJCQlpZiAoKHRo
aXMudGFnQml0cyAmIEZsb3dDb250ZXh0LkhJREVfTlVMTF9DT01QQVJJU09OX1dBUk5JTkcpID09
IDApIHsNCiAJCQkJCQlzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5sb2NhbFZhcmlhYmxlTnVsbENv
bXBhcmVkVG9Ob25OdWxsKGxvY2FsLCByZWZlcmVuY2UpOw0KIAkJCQkJfQ0KIAkJCQkJaWYgKCFm
bG93SW5mby5pc01hcmtlZEFzTnVsbE9yTm9uTnVsbEluQXNzZXJ0RXhwcmVzc2lvbihsb2NhbCkp
IHsNCi0JCQkJCQlmbG93SW5mby5pbml0c1doZW5UcnVlKCkuc2V0UmVhY2hNb2RlKEZsb3dJbmZv
LlVOUkVBQ0hBQkxFKTsNCisJCQkJCQlmbG93SW5mby5pbml0c1doZW5UcnVlKCkuc2V0UmVhY2hN
b2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFX0JZX05VTExBTkFMWVNJUyk7DQogCQkJCQl9DQogCQkJ
CX0NCiAJCQl9IGVsc2UgaWYgKHRoaXMudXBzdHJlYW1OdWxsRmxvd0luZm8uaXNEZWZpbml0ZWx5
Tm9uTnVsbChsb2NhbCkgJiYgIWZsb3dJbmZvLmlzUG90ZW50aWFsbHlOdWxsKGxvY2FsKSAmJiAh
Zmxvd0luZm8uaXNQb3RlbnRpYWxseVVua25vd24obG9jYWwpKSB7ICAgIA0KQEAgLTU1NCw3ICs1
NTQsNyBAQA0KIAkJCQkJCQlzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5sb2NhbFZhcmlhYmxlUmVk
dW5kYW50Q2hlY2tPbk51bGwobG9jYWwsIHJlZmVyZW5jZSk7DQogCQkJCQkJfQ0KIAkJCQkJCWlm
ICghZmxvd0luZm8uaXNNYXJrZWRBc051bGxPck5vbk51bGxJbkFzc2VydEV4cHJlc3Npb24obG9j
YWwpKSB7DQotCQkJCQkJCWZsb3dJbmZvLmluaXRzV2hlbkZhbHNlKCkuc2V0UmVhY2hNb2RlKEZs
b3dJbmZvLlVOUkVBQ0hBQkxFKTsNCisJCQkJCQkJZmxvd0luZm8uaW5pdHNXaGVuRmFsc2UoKS5z
ZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEVfQllfTlVMTEFOQUxZU0lTKTsNCiAJCQkJ
CQl9DQogCQkJCQkJcmV0dXJuOw0KIAkJCQkJY2FzZSBGbG93Q29udGV4dC5JTl9DT01QQVJJU09O
X05PTl9OVUxMOg0KQEAgLTU2Niw3ICs1NjYsNyBAQA0KIAkJCQkJCQlzY29wZS5wcm9ibGVtUmVw
b3J0ZXIoKS5sb2NhbFZhcmlhYmxlTnVsbENvbXBhcmVkVG9Ob25OdWxsKGxvY2FsLCByZWZlcmVu
Y2UpOw0KIAkJCQkJCX0NCiAJCQkJCQlpZiAoIWZsb3dJbmZvLmlzTWFya2VkQXNOdWxsT3JOb25O
dWxsSW5Bc3NlcnRFeHByZXNzaW9uKGxvY2FsKSkgew0KLQkJCQkJCQlmbG93SW5mby5pbml0c1do
ZW5UcnVlKCkuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFKTsNCisJCQkJCQkJZmxv
d0luZm8uaW5pdHNXaGVuVHJ1ZSgpLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRV9C
WV9OVUxMQU5BTFlTSVMpOw0KIAkJCQkJCX0NCiAJCQkJCQlyZXR1cm47DQogCQkJCQljYXNlIEZs
b3dDb250ZXh0LklOX0FTU0lHTk1FTlQ6DQpJbmRleDogY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvVW5jb25kaXRpb25hbEZsb3dJbmZvLmphdmENCj09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L1VuY29uZGl0aW9u
YWxGbG93SW5mby5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS43Mg0KZGlmZiAtdSAtcjEu
NzIgVW5jb25kaXRpb25hbEZsb3dJbmZvLmphdmENCi0tLSBjb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxvdy9VbmNvbmRpdGlvbmFsRmxvd0luZm8uamF2YQkxOSBK
YW4gMjAxMSAwNToyOTo1NCAtMDAwMAkxLjcyDQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvVW5jb25kaXRpb25hbEZsb3dJbmZvLmphdmEJMyBNYXIg
MjAxMSAxODowNjo0MCAtMDAwMA0KQEAgLTczMSw3ICs3MzEsNyBAQA0KIGZpbmFsIHB1YmxpYyBi
b29sZWFuIGlzRGVmaW5pdGVseUFzc2lnbmVkKEZpZWxkQmluZGluZyBmaWVsZCkgew0KIAkvLyBN
aXJyb3JlZCBpbiBDb2RlU3RyZWFtLmlzRGVmaW5pdGVseUFzc2lnbmVkKC4uKQ0KIAkvLyBkbyBu
b3Qgd2FudCB0byBjb21wbGFpbiBpbiB1bnJlYWNoYWJsZSBjb2RlDQotCWlmICgodGhpcy50YWdC
aXRzICYgVU5SRUFDSEFCTEUpICE9IDApIHsNCisJaWYgKCh0aGlzLnRhZ0JpdHMgJiBVTlJFQUNI
QUJMRV9PUl9ERUFEKSAhPSAwKSB7DQogCQlyZXR1cm4gdHJ1ZTsNCiAJfQ0KIAlyZXR1cm4gaXNE
ZWZpbml0ZWx5QXNzaWduZWQoZmllbGQuaWQpOw0KQEAgLTczOSw3ICs3MzksNyBAQA0KIA0KIGZp
bmFsIHB1YmxpYyBib29sZWFuIGlzRGVmaW5pdGVseUFzc2lnbmVkKExvY2FsVmFyaWFibGVCaW5k
aW5nIGxvY2FsKSB7DQogCS8vIGRvIG5vdCB3YW50IHRvIGNvbXBsYWluIGluIHVucmVhY2hhYmxl
IGNvZGUgaWYgbG9jYWwgZGVjbGFyZWQgaW4gcmVhY2hhYmxlIGNvZGUNCi0JaWYgKCh0aGlzLnRh
Z0JpdHMgJiBVTlJFQUNIQUJMRSkgIT0gMCAmJiAobG9jYWwuZGVjbGFyYXRpb24uYml0cyAmIEFT
VE5vZGUuSXNMb2NhbERlY2xhcmF0aW9uUmVhY2hhYmxlKSAhPSAwKSB7DQorCWlmICgodGhpcy50
YWdCaXRzICYgVU5SRUFDSEFCTEVfT1JfREVBRCkgIT0gMCAmJiAobG9jYWwuZGVjbGFyYXRpb24u
Yml0cyAmIEFTVE5vZGUuSXNMb2NhbERlY2xhcmF0aW9uUmVhY2hhYmxlKSAhPSAwKSB7DQogCQly
ZXR1cm4gdHJ1ZTsNCiAJfQ0KIAlyZXR1cm4gaXNEZWZpbml0ZWx5QXNzaWduZWQobG9jYWwuaWQg
KyB0aGlzLm1heEZpZWxkQ291bnQpOw0KQEAgLTE4NzAsNyArMTg3MCw3IEBADQogCQkJCX0NCiAJ
CQl9DQogCQl9DQotCQl0aGlzLnRhZ0JpdHMgfD0gVU5SRUFDSEFCTEU7DQorCQl0aGlzLnRhZ0Jp
dHMgfD0gcmVhY2hNb2RlOw0KIAl9DQogCXJldHVybiB0aGlzOw0KIH0NCiNQIG9yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyDQpJbmRleDogc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vRmxvd0FuYWx5c2lzVGVzdC5qYXZhDQo9PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0
cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVz
c2lvbi9GbG93QW5hbHlzaXNUZXN0LmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjQ2DQpk
aWZmIC11IC1yMS40NiBGbG93QW5hbHlzaXNUZXN0LmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9GbG93QW5hbHlzaXNUZXN0LmphdmEJ
MSBTZXAgMjAxMCAxNTo0OTozMCAtMDAwMAkxLjQ2DQorKysgc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vRmxvd0FuYWx5c2lzVGVzdC5qYXZhCTMgTWFy
IDIwMTEgMTg6MDY6NDggLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDA1LCAyMDEwIElCTSBDb3Jwb3JhdGlvbiBhbmQg
b3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwNSwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBh
Y2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0
ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21w
YW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC0yMjQ2LDYg
KzIyNDYsOTIgQEANCiAJCSJEZWFkIGNvZGVcbiIgKyANCiAJCSItLS0tLS0tLS0tXG4iKTsNCiB9
DQorDQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMz
ODIzNA0KKy8vIFdhcm4gdW5pbml0aWFsaXplZCB2YXJpYWJsZSBpbiBkZWFkY29kZSBpZiBkZWFk
Y29kZSBoYXMgYmVlbiBpbmZlcnJlZA0KKy8vIGJ5IG51bGwgYW5hbHlzaXMNCitwdWJsaWMgdm9p
ZCB0ZXN0QnVnMzM4MjM0YSgpIHsNCisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoDQorCQluZXcgU3Ry
aW5nW10gew0KKwkJCSJYLmphdmEiLA0KKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsNCisJCQki
ICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKyANCisJCQki
ICAgICAgICBpbnQgaTtcbiIgKyANCisJCQkiICAgICAgICBTdHJpbmcgc3RyID0gbnVsbDtcbiIg
KyANCisJCQkiICAgICAgICBpZiAoc3RyICE9IG51bGwpXG4iICsgDQorCQkJIiAgICAgICAgICAg
IGkrKzsgICAgXG4iICsgDQorCQkJIiAgICB9XG4iICsgDQorCQkJIn1cbiINCisJCX0sDQorCQki
LS0tLS0tLS0tLVxuIiArIA0KKwkJIjEuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDYpXG4i
ICsgDQorCQkiCWkrKzsgICAgXG4iICsgDQorCQkiCV5eXlxuIiArIA0KKwkJIkRlYWQgY29kZVxu
IiArIA0KKwkJIi0tLS0tLS0tLS1cbiIgKyANCisJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxp
bmUgNilcbiIgKyANCisJCSIJaSsrOyAgICBcbiIgKyANCisJCSIJXlxuIiArIA0KKwkJIlRoZSBs
b2NhbCB2YXJpYWJsZSBpIG1heSBub3QgaGF2ZSBiZWVuIGluaXRpYWxpemVkXG4iICsgDQorCQki
LS0tLS0tLS0tLVxuIik7DQorfQ0KKw0KKy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdz
L3Nob3dfYnVnLmNnaT9pZD0zMzgyMzQNCisvLyBEb24ndCB3YXJuIHVuaW5pdGlhbGl6ZWQgdmFy
aWFibGUgaW4gZGVhZGNvZGUgaWYgZGVhZGNvZGUgaGFzIG5vdCBiZWVuIGluZmVycmVkDQorLy8g
YnkgbnVsbCBhbmFseXNpcw0KK3B1YmxpYyB2b2lkIHRlc3RCdWczMzgyMzRiKCkgew0KKwl0aGlz
LnJ1bkNvbmZvcm1UZXN0KA0KKwkJbmV3IFN0cmluZ1tdIHsNCisJCQkiWC5qYXZhIiwNCisJCQki
cHVibGljIGNsYXNzIFgge1xuIiArDQorCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihT
dHJpbmdbXSBhcmdzKSB7XG4iICsgDQorCQkJIiAgICAgICAgaW50IGk7XG4iICsgDQorCQkJIiAg
ICAgICAgbDoge1xuIiArDQorCQkJIgkJCWlmKGZhbHNlKVxuIiArDQorCQkJIgkJCQlicmVhayBs
O1xuIiArIA0KKwkJCSIgICAgICAgIAlyZXR1cm47XG4iICsNCisJCQkiCQkgfVxuIiArIA0KKwkJ
CSIgICAgICAgIGkrKzsgICAgXG4iICsgDQorCQkJIiAgICB9XG4iICsgDQorCQkJIn1cbiINCisJ
CX0sDQorCQkiIik7DQorfQ0KKw0KKy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3No
b3dfYnVnLmNnaT9pZD0zMzgyMzQNCisvLyBXYXJuIHVuaW5pdGlhbGl6ZWQgZmllbGQgaW4gZGVh
ZGNvZGUgaWYgZGVhZGNvZGUgaGFzIGJlZW4gaW5mZXJyZWQNCisvLyBieSBudWxsIGFuYWx5c2lz
DQorcHVibGljIHZvaWQgdGVzdEJ1ZzMzODIzNGMoKSB7DQorCXRoaXMucnVuTmVnYXRpdmVUZXN0
KA0KKwkJbmV3IFN0cmluZ1tdIHsNCisJCQkiWC5qYXZhIiwNCisJCQkicHVibGljIGNsYXNzIFgg
e1xuIiArDQorCQkJIiAgICBwdWJsaWMgZmluYWwgaW50IGZpZWxkMTtcbiIgKw0KKwkJCSIgICAg
e1xuIiArIA0KKwkJCSIgICAgICAgIGludCBpO1xuIiArIA0KKwkJCSIgICAgICAgIFN0cmluZyBz
dHIgPSBudWxsO1xuIiArDQorCQkJIgkJIGlmKHN0ciAhPSBudWxsKVxuIiArDQorCQkJIgkJCWkg
PSBmaWVsZDE7XG4iICsgDQorCQkJIiAgICB9XG4iICsgDQorCQkJIn1cbiINCisJCX0sDQorCQki
LS0tLS0tLS0tLVxuIiArIA0KKwkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxKVxuIiAr
IA0KKwkJIglwdWJsaWMgY2xhc3MgWCB7XG4iICsgDQorCQkiCSAgICAgICAgICAgICBeXG4iICsg
DQorCQkiVGhlIGJsYW5rIGZpbmFsIGZpZWxkIGZpZWxkMSBtYXkgbm90IGhhdmUgYmVlbiBpbml0
aWFsaXplZFxuIiArIA0KKwkJIi0tLS0tLS0tLS1cbiIgKyANCisJCSIyLiBXQVJOSU5HIGluIFgu
amF2YSAoYXQgbGluZSA3KVxuIiArIA0KKwkJIglpID0gZmllbGQxO1xuIiArIA0KKwkJIgleXl5e
Xl5eXl5eXG4iICsgDQorCQkiRGVhZCBjb2RlXG4iICsgDQorCQkiLS0tLS0tLS0tLVxuIiArIA0K
KwkJIjMuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA3KVxuIiArIA0KKwkJIglpID0gZmllbGQx
O1xuIiArIA0KKwkJIgkgICAgXl5eXl5eXG4iICsgDQorCQkiVGhlIGJsYW5rIGZpbmFsIGZpZWxk
IGZpZWxkMSBtYXkgbm90IGhhdmUgYmVlbiBpbml0aWFsaXplZFxuIiArIA0KKwkJIi0tLS0tLS0t
LS1cbiIpOw0KK30NCiBwdWJsaWMgc3RhdGljIENsYXNzIHRlc3RDbGFzcygpIHsNCiAJcmV0dXJu
IEZsb3dBbmFseXNpc1Rlc3QuY2xhc3M7DQogfQ0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL051bGxSZWZlcmVuY2VUZXN0LmphdmENCj09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9y
ZWdyZXNzaW9uL051bGxSZWZlcmVuY2VUZXN0LmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAx
LjExMw0KZGlmZiAtdSAtcjEuMTEzIE51bGxSZWZlcmVuY2VUZXN0LmphdmENCi0tLSBzcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9OdWxsUmVmZXJlbmNl
VGVzdC5qYXZhCTI3IEZlYiAyMDExIDIxOjQyOjUwIC0wMDAwCTEuMTEzDQorKysgc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTnVsbFJlZmVyZW5jZVRl
c3QuamF2YQkzIE1hciAyMDExIDE4OjA2OjQ4IC0wMDAwDQpAQCAtMTQwNjAsNCArMTQwNjAsMzgg
QEANCiAJCX0sDQogCQkiIik7DQogfQ0KKw0KKy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD0zMzgyMzQNCitwdWJsaWMgdm9pZCB0ZXN0QnVnMzM4MjM0KCkg
ew0KKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgNCisJCW5ldyBTdHJpbmdbXSB7DQorCQkJIlguamF2
YSIsDQorCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKyANCisJCQkiICAgc3RhdGljIGludCBmb28o
KSB7XG4iICsgDQorCQkJIiAgICAgICAgT2JqZWN0IG8gPSBudWxsO1xuIiArDQorCQkJIgkJIGlu
dCBpID0gMDtcbiIgKyANCisJCQkiICAgICAgICBsYWJlbDoge1xuIiArIA0KKwkJCSIgICAgICAg
ICAgICBpZiAobyA9PSBudWxsKVxuIiArIA0KKwkJCSIgICAgICAgICAgICAgICAgYnJlYWsgbGFi
ZWw7XG4iICsNCisJCQkiCQkJIGkrKzsiICsgDQorCQkJIiAgICAgICAgfVxuIiArIA0KKwkJCSIg
ICAgICAgICBpZiAoaSAhPSAwKSB7XG4iICsgDQorCQkJIiAgICAgICAgICAgIFN5c3RlbS5vdXQu
cHJpbnRsbihpKTtcbiIgKyANCisJCQkiICAgICAgICB9XG4iICsgDQorCQkJIiAgICAgICAgcmV0
dXJuIDA7XG4iICsgDQorCQkJIiAgICB9XG4iICsgDQorCQkJIn1cbiINCisJCX0sDQorCQkiLS0t
LS0tLS0tLVxuIiArIA0KKwkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA2KVxuIiArIA0K
KwkJIglpZiAobyA9PSBudWxsKVxuIiArIA0KKwkJIgkgICAgXlxuIiArIA0KKwkJIlJlZHVuZGFu
dCBudWxsIGNoZWNrOiBUaGUgdmFyaWFibGUgbyBjYW4gb25seSBiZSBudWxsIGF0IHRoaXMgbG9j
YXRpb25cbiIgKyANCisJCSItLS0tLS0tLS0tXG4iICsgDQorCQkiMi4gV0FSTklORyBpbiBYLmph
dmEgKGF0IGxpbmUgOClcbiIgKyANCisJCSIJaSsrOyAgICAgICAgfVxuIiArIA0KKwkJIgleXl5c
biIgKyANCisJCSJEZWFkIGNvZGVcbiIgKyANCisJCSItLS0tLS0tLS0tXG4iKTsNCit9DQogfQ0K
XCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlDQo=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>190355</attachid>
            <date>2011-03-04 02:36:00 -0500</date>
            <delta_ts>2011-03-04 02:36:37 -0500</delta_ts>
            <desc>proposed fix v2.2 + tests</desc>
            <filename>patch338234.txt</filename>
            <type>text/plain</type>
            <size>38469</size>
            <attacher name="Ayushman Jain">amj87.iitr</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0FO
RF9BTkRfRXhwcmVzc2lvbi5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNs
aXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvYXN0L0FORF9BTkRfRXhwcmVzc2lvbi5qYXZhLHYNCnJldHJpZXZpbmcgcmV2
aXNpb24gMS40NQ0KZGlmZiAtdSAtcjEuNDUgQU5EX0FORF9FeHByZXNzaW9uLmphdmENCi0tLSBj
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0FORF9BTkRfRXhw
cmVzc2lvbi5qYXZhCTEyIEF1ZyAyMDEwIDE2OjU4OjI4IC0wMDAwCTEuNDUNCisrKyBjb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0FORF9BTkRfRXhwcmVzc2lv
bi5qYXZhCTQgTWFyIDIwMTEgMDc6Mjg6MTggLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8qKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEwIElCTSBDb3Jw
b3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29y
cG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dy
YW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxhYmxl
IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQogICog
d2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQN
CkBAIC01Nyw3ICs1Nyw3IEBADQogCQlpZiAoaXNMZWZ0T3B0aW1pemVkRmFsc2UpIHsNCiAJCQlp
ZiAoKHJpZ2h0SW5mby5yZWFjaE1vZGUoKSAmIEZsb3dJbmZvLlVOUkVBQ0hBQkxFKSA9PSAwKSB7
DQogCQkJCWN1cnJlbnRTY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5mYWtlUmVhY2hhYmxlKHRoaXMu
cmlnaHQpOw0KLQkJCQlyaWdodEluZm8uc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxF
KTsNCisJCQkJcmlnaHRJbmZvLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRV9PUl9E
RUFEKTsNCiAJCQl9DQogCQl9DQogCQlyaWdodEluZm8gPSB0aGlzLnJpZ2h0LmFuYWx5c2VDb2Rl
KGN1cnJlbnRTY29wZSwgZmxvd0NvbnRleHQsIHJpZ2h0SW5mbyk7DQpJbmRleDogY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Bc3NlcnRTdGF0ZW1lbnQuamF2
YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Bc3Nl
cnRTdGF0ZW1lbnQuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNjcNCmRpZmYgLXUgLXIx
LjY3IEFzc2VydFN0YXRlbWVudC5qYXZhDQotLS0gY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2FzdC9Bc3NlcnRTdGF0ZW1lbnQuamF2YQk3IEZlYiAyMDExIDE2OjE4
OjA1IC0wMDAwCTEuNjcNCisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvYXN0L0Fzc2VydFN0YXRlbWVudC5qYXZhCTQgTWFyIDIwMTEgMDc6Mjg6MTggLTAwMDAN
CkBAIC01Niw3ICs1Niw3IEBADQogCVVuY29uZGl0aW9uYWxGbG93SW5mbyBhc3NlcnRXaGVuVHJ1
ZUluZm8gPSBjb25kaXRpb25GbG93SW5mby5pbml0c1doZW5UcnVlKCkudW5jb25kaXRpb25hbElu
aXRzKCk7DQogCUZsb3dJbmZvIGFzc2VydEluZm8gPSBjb25kaXRpb25GbG93SW5mby5pbml0c1do
ZW5GYWxzZSgpOw0KIAlpZiAoaXNPcHRpbWl6ZWRUcnVlQXNzZXJ0aW9uKSB7DQotCQlhc3NlcnRJ
bmZvLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRSk7DQorCQlhc3NlcnRJbmZvLnNl
dFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRV9PUl9ERUFEKTsNCiAJfQ0KIA0KIAlpZiAo
dGhpcy5leGNlcHRpb25Bcmd1bWVudCAhPSBudWxsKSB7DQpJbmRleDogY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Db25kaXRpb25hbEV4cHJlc3Npb24uamF2
YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Db25k
aXRpb25hbEV4cHJlc3Npb24uamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuOTgNCmRpZmYg
LXUgLXIxLjk4IENvbmRpdGlvbmFsRXhwcmVzc2lvbi5qYXZhDQotLS0gY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Db25kaXRpb25hbEV4cHJlc3Npb24uamF2
YQkxNCBKYW4gMjAxMSAxNzowMjoyNCAtMDAwMAkxLjk4DQorKysgY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Db25kaXRpb25hbEV4cHJlc3Npb24uamF2YQk0
IE1hciAyMDExIDA3OjI4OjE4IC0wMDAwDQpAQCAtNTUsNyArNTUsNyBAQA0KIAkJRmxvd0luZm8g
dHJ1ZUZsb3dJbmZvID0gZmxvd0luZm8uaW5pdHNXaGVuVHJ1ZSgpLmNvcHkoKTsNCiAJCWlmIChp
c0NvbmRpdGlvbk9wdGltaXplZEZhbHNlKSB7DQogCQkJaWYgKChtb2RlICYgRmxvd0luZm8uVU5S
RUFDSEFCTEUpID09IDApIHsNCi0JCQkJdHJ1ZUZsb3dJbmZvLnNldFJlYWNoTW9kZShGbG93SW5m
by5VTlJFQUNIQUJMRSk7DQorCQkJCXRydWVGbG93SW5mby5zZXRSZWFjaE1vZGUoRmxvd0luZm8u
VU5SRUFDSEFCTEVfT1JfREVBRCk7DQogCQkJfQ0KIAkJCWlmICghaXNLbm93RGVhZENvZGVQYXR0
ZXJuKHRoaXMuY29uZGl0aW9uKSB8fCBjdXJyZW50U2NvcGUuY29tcGlsZXJPcHRpb25zKCkucmVw
b3J0RGVhZENvZGVJblRyaXZpYWxJZlN0YXRlbWVudCkgew0KIAkJCQl0aGlzLnZhbHVlSWZUcnVl
LmNvbXBsYWluSWZVbnJlYWNoYWJsZSh0cnVlRmxvd0luZm8sIGN1cnJlbnRTY29wZSwgaW5pdGlh
bENvbXBsYWludExldmVsKTsNCkBAIC02OCw3ICs2OCw3IEBADQogCQlGbG93SW5mbyBmYWxzZUZs
b3dJbmZvID0gZmxvd0luZm8uaW5pdHNXaGVuRmFsc2UoKS5jb3B5KCk7DQogCQlpZiAoaXNDb25k
aXRpb25PcHRpbWl6ZWRUcnVlKSB7DQogCQkJaWYgKChtb2RlICYgRmxvd0luZm8uVU5SRUFDSEFC
TEUpID09IDApIHsNCi0JCQkJZmFsc2VGbG93SW5mby5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5S
RUFDSEFCTEUpOw0KKwkJCQlmYWxzZUZsb3dJbmZvLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJF
QUNIQUJMRV9PUl9ERUFEKTsNCiAJCQl9DQogCQkJaWYgKCFpc0tub3dEZWFkQ29kZVBhdHRlcm4o
dGhpcy5jb25kaXRpb24pIHx8IGN1cnJlbnRTY29wZS5jb21waWxlck9wdGlvbnMoKS5yZXBvcnRE
ZWFkQ29kZUluVHJpdmlhbElmU3RhdGVtZW50KSB7DQogCQkJCXRoaXMudmFsdWVJZkZhbHNlLmNv
bXBsYWluSWZVbnJlYWNoYWJsZShmYWxzZUZsb3dJbmZvLCBjdXJyZW50U2NvcGUsIGluaXRpYWxD
b21wbGFpbnRMZXZlbCk7DQpAQCAtOTgsMTYgKzk4LDE2IEBADQogCQkJVW5jb25kaXRpb25hbEZs
b3dJbmZvIHRydWVJbmZvV2hlbkZhbHNlID0gdHJ1ZUZsb3dJbmZvLmluaXRzV2hlbkZhbHNlKCku
dW5jb25kaXRpb25hbEluaXRzKCk7DQogCQkJVW5jb25kaXRpb25hbEZsb3dJbmZvIGZhbHNlSW5m
b1doZW5GYWxzZSA9IGZhbHNlRmxvd0luZm8uaW5pdHNXaGVuRmFsc2UoKS51bmNvbmRpdGlvbmFs
SW5pdHMoKTsNCiAJCQlpZiAoaXNWYWx1ZUlmVHJ1ZU9wdGltaXplZEZhbHNlKSB7DQotCQkJCXRy
dWVJbmZvV2hlblRydWUuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFKTsJCQkJDQor
CQkJCXRydWVJbmZvV2hlblRydWUuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFX09S
X0RFQUQpOwkJCQkNCiAJCQl9DQogCQkJaWYgKGlzVmFsdWVJZkZhbHNlT3B0aW1pemVkRmFsc2Up
IHsNCi0JCQkJZmFsc2VJbmZvV2hlblRydWUuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hB
QkxFKTsJDQorCQkJCWZhbHNlSW5mb1doZW5UcnVlLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJF
QUNIQUJMRV9PUl9ERUFEKTsJDQogCQkJfQ0KIAkJCWlmIChpc1ZhbHVlSWZUcnVlT3B0aW1pemVk
VHJ1ZSkgew0KLQkJCQl0cnVlSW5mb1doZW5GYWxzZS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5S
RUFDSEFCTEUpOwkNCisJCQkJdHJ1ZUluZm9XaGVuRmFsc2Uuc2V0UmVhY2hNb2RlKEZsb3dJbmZv
LlVOUkVBQ0hBQkxFX09SX0RFQUQpOwkNCiAJCQl9DQogCQkJaWYgKGlzVmFsdWVJZkZhbHNlT3B0
aW1pemVkVHJ1ZSkgew0KLQkJCQlmYWxzZUluZm9XaGVuRmFsc2Uuc2V0UmVhY2hNb2RlKEZsb3dJ
bmZvLlVOUkVBQ0hBQkxFKTsJDQorCQkJCWZhbHNlSW5mb1doZW5GYWxzZS5zZXRSZWFjaE1vZGUo
Rmxvd0luZm8uVU5SRUFDSEFCTEVfT1JfREVBRCk7CQ0KIAkJCX0NCiAJCQltZXJnZWRJbmZvID0N
CiAJCQkJRmxvd0luZm8uY29uZGl0aW9uYWwoDQpJbmRleDogY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Gb3JTdGF0ZW1lbnQuamF2YQ0KPT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0K
UkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Gb3JTdGF0ZW1lbnQuamF2YSx2
DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNjkNCmRpZmYgLXUgLXIxLjY5IEZvclN0YXRlbWVudC5q
YXZhDQotLS0gY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9G
b3JTdGF0ZW1lbnQuamF2YQkyMyBBdWcgMjAxMCAwODo0MToyNSAtMDAwMAkxLjY5DQorKysgY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Gb3JTdGF0ZW1lbnQu
amF2YQk0IE1hciAyMDExIDA3OjI4OjE4IC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMCBJQk0gQ29ycG9y
YXRpb24gYW5kIG90aGVycy4NCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBv
cmF0aW9uIGFuZCBvdGhlcnMuDQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFt
IGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1
bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdo
aWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpA
QCAtMTM1LDcgKzEzNSw3IEBADQogCQkJCX0gZWxzZSB7DQogCQkJCQlhY3Rpb25JbmZvID0gaW5p
dHNXaGVuVHJ1ZS51bmNvbmRpdGlvbmFsQ29weSgpOw0KIAkJCQkJaWYgKGlzQ29uZGl0aW9uT3B0
aW1pemVkRmFsc2Upew0KLQkJCQkJCWFjdGlvbkluZm8uc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVO
UkVBQ0hBQkxFKTsNCisJCQkJCQlhY3Rpb25JbmZvLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJF
QUNIQUJMRV9PUl9ERUFEKTsNCiAJCQkJCX0NCiAJCQkJfQ0KIAkJCWlmICh0aGlzLmFjdGlvbi5j
b21wbGFpbklmVW5yZWFjaGFibGUoYWN0aW9uSW5mbywgdGhpcy5zY29wZSwgaW5pdGlhbENvbXBs
YWludExldmVsKSA8IFN0YXRlbWVudC5DT01QTEFJTkVEX1VOUkVBQ0hBQkxFKSB7DQpJbmRleDog
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9JZlN0YXRlbWVu
dC5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0
L0lmU3RhdGVtZW50LmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjY5DQpkaWZmIC11IC1y
MS42OSBJZlN0YXRlbWVudC5qYXZhDQotLS0gY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2FzdC9JZlN0YXRlbWVudC5qYXZhCTEyIEF1ZyAyMDEwIDE2OjU4OjI4IC0w
MDAwCTEuNjkNCisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
YXN0L0lmU3RhdGVtZW50LmphdmEJNCBNYXIgMjAxMSAwNzoyODoxOCAtMDAwMA0KQEAgLTEsNSAr
MSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAs
IDIwMTAgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2
ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUg
bWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNl
bnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlz
IGF2YWlsYWJsZSBhdA0KQEAgLTY3LDExICs2NywxMSBAQA0KIAkvLyBwcm9jZXNzIHRoZSBUSEVO
IHBhcnQNCiAJRmxvd0luZm8gdGhlbkZsb3dJbmZvID0gY29uZGl0aW9uRmxvd0luZm8uc2FmZUlu
aXRzV2hlblRydWUoKTsNCiAJaWYgKGlzQ29uZGl0aW9uT3B0aW1pemVkRmFsc2UpIHsNCi0JCXRo
ZW5GbG93SW5mby5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEUpOw0KKwkJdGhlbkZs
b3dJbmZvLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRV9PUl9ERUFEKTsNCiAJfQ0K
IAlGbG93SW5mbyBlbHNlRmxvd0luZm8gPSBjb25kaXRpb25GbG93SW5mby5pbml0c1doZW5GYWxz
ZSgpLmNvcHkoKTsNCiAJaWYgKGlzQ29uZGl0aW9uT3B0aW1pemVkVHJ1ZSkgew0KLQkJZWxzZUZs
b3dJbmZvLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRSk7DQorCQllbHNlRmxvd0lu
Zm8uc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFX09SX0RFQUQpOw0KIAl9DQogCWlm
ICgoKGZsb3dJbmZvLnRhZ0JpdHMgJiBGbG93SW5mby5VTlJFQUNIQUJMRSkgPT0gMCkgJiYgDQog
CQkJKCh0aGVuRmxvd0luZm8udGFnQml0cyAmIEZsb3dJbmZvLlVOUkVBQ0hBQkxFKSAhPSAwKSkg
ew0KSW5kZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3Qv
T1JfT1JfRXhwcmVzc2lvbi5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNs
aXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvYXN0L09SX09SX0V4cHJlc3Npb24uamF2YSx2DQpyZXRyaWV2aW5nIHJldmlz
aW9uIDEuNDUNCmRpZmYgLXUgLXIxLjQ1IE9SX09SX0V4cHJlc3Npb24uamF2YQ0KLS0tIGNvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvT1JfT1JfRXhwcmVzc2lv
bi5qYXZhCTEyIEF1ZyAyMDEwIDE2OjU4OjI4IC0wMDAwCTEuNDUNCisrKyBjb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L09SX09SX0V4cHJlc3Npb24uamF2YQk0
IE1hciAyMDExIDA3OjI4OjE4IC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMCBJQk0gQ29ycG9yYXRpb24g
YW5kIG90aGVycy4NCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9u
IGFuZCBvdGhlcnMuDQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0
aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0
aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFj
Y29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtNTks
NyArNTksNyBAQA0KIAkJaWYgKGlzTGVmdE9wdGltaXplZFRydWUpew0KIAkJCWlmICgocmlnaHRJ
bmZvLnJlYWNoTW9kZSgpICYgRmxvd0luZm8uVU5SRUFDSEFCTEUpID09IDApIHsNCiAJCQkJY3Vy
cmVudFNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmZha2VSZWFjaGFibGUodGhpcy5yaWdodCk7DQot
CQkJCXJpZ2h0SW5mby5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEUpOw0KKwkJCQly
aWdodEluZm8uc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFX09SX0RFQUQpOw0KIAkJ
CX0NCiAJCX0NCiAJCXJpZ2h0SW5mbyA9IHRoaXMucmlnaHQuYW5hbHlzZUNvZGUoY3VycmVudFNj
b3BlLCBmbG93Q29udGV4dCwgcmlnaHRJbmZvKTsNCkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1RyeVN0YXRlbWVudC5qYXZhDQo9PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1RyeVN0YXRlbWVudC5qYXZh
LHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4xMTYNCmRpZmYgLXUgLXIxLjExNiBUcnlTdGF0ZW1l
bnQuamF2YQ0KLS0tIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9h
c3QvVHJ5U3RhdGVtZW50LmphdmEJMTggRGVjIDIwMTAgMjI6MDk6MjYgLTAwMDAJMS4xMTYNCisr
KyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1RyeVN0YXRl
bWVudC5qYXZhCTQgTWFyIDIwMTEgMDc6Mjg6MTggLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8q
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEwIElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0g
Q29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHBy
b2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxh
YmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQog
ICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUg
YXQNCkBAIC0xNTAsNyArMTUwLDcgQEANCiAJCQkJaWZUcnVlOiBbY2F0Y2hJbml0cyBhZGRQb3Rl
bnRpYWxJbml0aWFsaXphdGlvbnNGcm9tOiB0cnlJbml0c10uIg0KIAkJCQkqLw0KIAkJCQlpZiAo
dGhpcy50cnlCbG9jay5zdGF0ZW1lbnRzID09IG51bGwpIHsNCi0JCQkJCWNhdGNoSW5mby5zZXRS
ZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEUpOw0KKwkJCQkJY2F0Y2hJbmZvLnNldFJlYWNo
TW9kZShGbG93SW5mby5VTlJFQUNIQUJMRV9PUl9ERUFEKTsNCiAJCQkJfQ0KIAkJCQljYXRjaElu
Zm8gPQ0KIAkJCQkJdGhpcy5jYXRjaEJsb2Nrc1tpXS5hbmFseXNlQ29kZSgNCkluZGV4OiBjb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1R5cGVEZWNsYXJhdGlv
bi5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0
L1R5cGVEZWNsYXJhdGlvbi5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4xNjYNCmRpZmYg
LXUgLXIxLjE2NiBUeXBlRGVjbGFyYXRpb24uamF2YQ0KLS0tIGNvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvVHlwZURlY2xhcmF0aW9uLmphdmEJMTEgRmViIDIw
MTEgMTQ6NTU6MDYgLTAwMDAJMS4xNjYNCisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvYXN0L1R5cGVEZWNsYXJhdGlvbi5qYXZhCTQgTWFyIDIwMTEgMDc6Mjg6
MTkgLTAwMDANCkBAIC02NDYsNyArNjQ2LDcgQEANCiAJCQkJLy8gYnJhbmNoLCBzaW5jZSB0aGUg
cHJldmlvdXMgaW5pdGlhbGl6ZXIgYWxyZWFkeSBnb3QgdGhlIGJsYW1lLg0KIAkJCQlpZiAoc3Rh
dGljRmllbGRJbmZvID09IEZsb3dJbmZvLkRFQURfRU5EKSB7DQogCQkJCQl0aGlzLnN0YXRpY0lu
aXRpYWxpemVyU2NvcGUucHJvYmxlbVJlcG9ydGVyKCkuaW5pdGlhbGl6ZXJNdXN0Q29tcGxldGVO
b3JtYWxseShmaWVsZCk7DQotCQkJCQlzdGF0aWNGaWVsZEluZm8gPSBGbG93SW5mby5pbml0aWFs
KHRoaXMubWF4RmllbGRDb3VudCkuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFKTsN
CisJCQkJCXN0YXRpY0ZpZWxkSW5mbyA9IEZsb3dJbmZvLmluaXRpYWwodGhpcy5tYXhGaWVsZENv
dW50KS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEVfT1JfREVBRCk7DQogCQkJCX0N
CiAJCQl9IGVsc2Ugew0KIAkJCQlpZiAoKG5vblN0YXRpY0ZpZWxkSW5mby50YWdCaXRzICYgRmxv
d0luZm8uVU5SRUFDSEFCTEUpICE9IDApDQpAQCAtNjYyLDcgKzY2Miw3IEBADQogCQkJCS8vIGJy
YW5jaCwgc2luY2UgdGhlIHByZXZpb3VzIGluaXRpYWxpemVyIGFscmVhZHkgZ290IHRoZSBibGFt
ZS4NCiAJCQkJaWYgKG5vblN0YXRpY0ZpZWxkSW5mbyA9PSBGbG93SW5mby5ERUFEX0VORCkgew0K
IAkJCQkJdGhpcy5pbml0aWFsaXplclNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmluaXRpYWxpemVy
TXVzdENvbXBsZXRlTm9ybWFsbHkoZmllbGQpOw0KLQkJCQkJbm9uU3RhdGljRmllbGRJbmZvID0g
Rmxvd0luZm8uaW5pdGlhbCh0aGlzLm1heEZpZWxkQ291bnQpLnNldFJlYWNoTW9kZShGbG93SW5m
by5VTlJFQUNIQUJMRSk7DQorCQkJCQlub25TdGF0aWNGaWVsZEluZm8gPSBGbG93SW5mby5pbml0
aWFsKHRoaXMubWF4RmllbGRDb3VudCkuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxF
X09SX0RFQUQpOw0KIAkJCQl9DQogCQkJfQ0KIAkJfQ0KSW5kZXg6IGNvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvV2hpbGVTdGF0ZW1lbnQuamF2YQ0KPT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9XaGlsZVN0YXRlbWVu
dC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS42Ng0KZGlmZiAtdSAtcjEuNjYgV2hpbGVT
dGF0ZW1lbnQuamF2YQ0KLS0tIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9hc3QvV2hpbGVTdGF0ZW1lbnQuamF2YQkyMyBBdWcgMjAxMCAwODo0MToyNSAtMDAwMAkx
LjY2DQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9X
aGlsZVN0YXRlbWVudC5qYXZhCTQgTWFyIDIwMTEgMDc6Mjg6MTkgLTAwMDANCkBAIC0xLDUgKzEs
NSBAQA0KIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAy
MDEwIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwg
MjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVk
LiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1h
ZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5z
ZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBh
dmFpbGFibGUgYXQNCkBAIC04Miw3ICs4Miw3IEBADQogCQkJfSBlbHNlIHsNCiAJCQkJRmxvd0lu
Zm8gbWVyZ2VkSW5mbyA9IGZsb3dJbmZvLmNvcHkoKS5hZGRJbml0aWFsaXphdGlvbnNGcm9tKGNv
bmRJbmZvLmluaXRzV2hlbkZhbHNlKCkpOw0KIAkJCQlpZiAoaXNDb25kaXRpb25PcHRpbWl6ZWRU
cnVlKXsNCi0JCQkJCW1lcmdlZEluZm8uc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxF
KTsNCisJCQkJCW1lcmdlZEluZm8uc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFX09S
X0RFQUQpOw0KIAkJCQl9DQogCQkJCXRoaXMubWVyZ2VkSW5pdFN0YXRlSW5kZXggPQ0KIAkJCQkJ
Y3VycmVudFNjb3BlLm1ldGhvZFNjb3BlKCkucmVjb3JkSW5pdGlhbGl6YXRpb25TdGF0ZXMobWVy
Z2VkSW5mbyk7DQpAQCAtMTA0LDcgKzEwNCw3IEBADQogCQkJfSBlbHNlIHsNCiAJCQkJYWN0aW9u
SW5mbyA9IGNvbmRJbmZvLmluaXRzV2hlblRydWUoKS5jb3B5KCk7DQogCQkJCWlmIChpc0NvbmRp
dGlvbk9wdGltaXplZEZhbHNlKXsNCi0JCQkJCWFjdGlvbkluZm8uc2V0UmVhY2hNb2RlKEZsb3dJ
bmZvLlVOUkVBQ0hBQkxFKTsNCisJCQkJCWFjdGlvbkluZm8uc2V0UmVhY2hNb2RlKEZsb3dJbmZv
LlVOUkVBQ0hBQkxFX09SX0RFQUQpOw0KIAkJCQl9DQogCQkJfQ0KIA0KSW5kZXg6IGNvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L0NvbmRpdGlvbmFsRmxvd0lu
Zm8uamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zs
b3cvQ29uZGl0aW9uYWxGbG93SW5mby5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4zMw0K
ZGlmZiAtdSAtcjEuMzMgQ29uZGl0aW9uYWxGbG93SW5mby5qYXZhDQotLS0gY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvQ29uZGl0aW9uYWxGbG93SW5mby5q
YXZhCTE2IERlYyAyMDEwIDEzOjAyOjMwIC0wMDAwCTEuMzMNCisrKyBjb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxvdy9Db25kaXRpb25hbEZsb3dJbmZvLmphdmEJ
NCBNYXIgMjAxMSAwNzoyODoxOSAtMDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTAgSUJNIENvcnBvcmF0aW9u
IGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlv
biBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQg
dGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIg
dGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBh
Y2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTE5
NSw3ICsxOTUsNyBAQA0KIAkJdGhpcy50YWdCaXRzICY9IH5VTlJFQUNIQUJMRTsNCiAJfQ0KIAll
bHNlIHsNCi0JCXRoaXMudGFnQml0cyB8PSBVTlJFQUNIQUJMRTsNCisJCXRoaXMudGFnQml0cyB8
PSByZWFjaE1vZGU7DQogCX0NCiAJdGhpcy5pbml0c1doZW5UcnVlLnNldFJlYWNoTW9kZShyZWFj
aE1vZGUpOw0KIAl0aGlzLmluaXRzV2hlbkZhbHNlLnNldFJlYWNoTW9kZShyZWFjaE1vZGUpOw0K
SW5kZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L0Zp
bmFsbHlGbG93Q29udGV4dC5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNs
aXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvZmxvdy9GaW5hbGx5Rmxvd0NvbnRleHQuamF2YSx2DQpyZXRyaWV2aW5nIHJl
dmlzaW9uIDEuMzUNCmRpZmYgLXUgLXIxLjM1IEZpbmFsbHlGbG93Q29udGV4dC5qYXZhDQotLS0g
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvRmluYWxseUZs
b3dDb250ZXh0LmphdmEJMjUgRmViIDIwMTAgMTU6Mjc6MDAgLTAwMDAJMS4zNQ0KKysrIGNvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L0ZpbmFsbHlGbG93Q29u
dGV4dC5qYXZhCTQgTWFyIDIwMTEgMDc6Mjg6MTkgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0KIC8q
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEwIElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0g
Q29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHBy
b2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZhaWxh
YmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQog
ICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUg
YXQNCkBAIC0yMjksMTQgKzIyOSwxNCBAQA0KIAkJCQkJCQkJCXNjb3BlLnByb2JsZW1SZXBvcnRl
cigpLmxvY2FsVmFyaWFibGVSZWR1bmRhbnRDaGVja09uTm9uTnVsbChsb2NhbCwgcmVmZXJlbmNl
KTsNCiAJCQkJCQkJCX0NCiAJCQkJCQkJCWlmICghZmxvd0luZm8uaXNNYXJrZWRBc051bGxPck5v
bk51bGxJbkFzc2VydEV4cHJlc3Npb24obG9jYWwpKSB7DQotCQkJCQkJCQkJZmxvd0luZm8uaW5p
dHNXaGVuRmFsc2UoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEUpOw0KKwkJCQkJ
CQkJCWZsb3dJbmZvLmluaXRzV2hlbkZhbHNlKCkuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVB
Q0hBQkxFX0JZX05VTExBTkFMWVNJUyk7DQogCQkJCQkJCQl9DQogCQkJCQkJCX0gZWxzZSBpZiAo
Y2hlY2tUeXBlID09IChDQU5fT05MWV9OVUxMX05PTl9OVUxMIHwgSU5fQ09NUEFSSVNPTl9OVUxM
KSkgew0KIAkJCQkJCQkJaWYgKCh0aGlzLnRhZ0JpdHMgJiBGbG93Q29udGV4dC5ISURFX05VTExf
Q09NUEFSSVNPTl9XQVJOSU5HKSA9PSAwKSB7DQogCQkJCQkJCQkJc2NvcGUucHJvYmxlbVJlcG9y
dGVyKCkubG9jYWxWYXJpYWJsZU5vbk51bGxDb21wYXJlZFRvTnVsbChsb2NhbCwgcmVmZXJlbmNl
KTsNCiAJCQkJCQkJCX0NCiAJCQkJCQkJCWlmICghZmxvd0luZm8uaXNNYXJrZWRBc051bGxPck5v
bk51bGxJbkFzc2VydEV4cHJlc3Npb24obG9jYWwpKSB7DQotCQkJCQkJCQkJZmxvd0luZm8uaW5p
dHNXaGVuVHJ1ZSgpLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRSk7DQorCQkJCQkJ
CQkJZmxvd0luZm8uaW5pdHNXaGVuVHJ1ZSgpLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNI
QUJMRV9CWV9OVUxMQU5BTFlTSVMpOw0KIAkJCQkJCQkJfQ0KIAkJCQkJCQl9DQogCQkJCQkJCXJl
dHVybjsNCkBAIC0yNTIsNyArMjUyLDcgQEANCiAJCQkJCQkJCQkJc2NvcGUucHJvYmxlbVJlcG9y
dGVyKCkubG9jYWxWYXJpYWJsZVJlZHVuZGFudENoZWNrT25OdWxsKGxvY2FsLCByZWZlcmVuY2Up
Ow0KIAkJCQkJCQkJCX0NCiAJCQkJCQkJCQlpZiAoIWZsb3dJbmZvLmlzTWFya2VkQXNOdWxsT3JO
b25OdWxsSW5Bc3NlcnRFeHByZXNzaW9uKGxvY2FsKSkgew0KLQkJCQkJCQkJCQlmbG93SW5mby5p
bml0c1doZW5GYWxzZSgpLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRSk7DQorCQkJ
CQkJCQkJCWZsb3dJbmZvLmluaXRzV2hlbkZhbHNlKCkuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVO
UkVBQ0hBQkxFX0JZX05VTExBTkFMWVNJUyk7DQogCQkJCQkJCQkJfQ0KIAkJCQkJCQkJCXJldHVy
bjsNCiAJCQkJCQkJCWNhc2UgRmxvd0NvbnRleHQuSU5fQ09NUEFSSVNPTl9OT05fTlVMTDoNCkBA
IC0yNjQsNyArMjY0LDcgQEANCiAJCQkJCQkJCQkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkubG9j
YWxWYXJpYWJsZU51bGxDb21wYXJlZFRvTm9uTnVsbChsb2NhbCwgcmVmZXJlbmNlKTsNCiAJCQkJ
CQkJCQl9DQogCQkJCQkJCQkJaWYgKCFmbG93SW5mby5pc01hcmtlZEFzTnVsbE9yTm9uTnVsbElu
QXNzZXJ0RXhwcmVzc2lvbihsb2NhbCkpIHsNCi0JCQkJCQkJCQkJZmxvd0luZm8uaW5pdHNXaGVu
VHJ1ZSgpLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRSk7DQorCQkJCQkJCQkJCWZs
b3dJbmZvLmluaXRzV2hlblRydWUoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEVf
QllfTlVMTEFOQUxZU0lTKTsNCiAJCQkJCQkJCQl9DQogCQkJCQkJCQkJcmV0dXJuOw0KIAkJCQkJ
CQkJY2FzZSBGbG93Q29udGV4dC5JTl9BU1NJR05NRU5UOg0KQEAgLTMxNCwxNCArMzE0LDE0IEBA
DQogCQkJCQkJCQkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkubG9jYWxWYXJpYWJsZVJlZHVuZGFu
dENoZWNrT25Ob25OdWxsKGxvY2FsLCByZWZlcmVuY2UpOw0KIAkJCQkJCQkJfQ0KIAkJCQkJCQkJ
aWYgKCFmbG93SW5mby5pc01hcmtlZEFzTnVsbE9yTm9uTnVsbEluQXNzZXJ0RXhwcmVzc2lvbihs
b2NhbCkpIHsNCi0JCQkJCQkJCQlmbG93SW5mby5pbml0c1doZW5GYWxzZSgpLnNldFJlYWNoTW9k
ZShGbG93SW5mby5VTlJFQUNIQUJMRSk7DQorCQkJCQkJCQkJZmxvd0luZm8uaW5pdHNXaGVuRmFs
c2UoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEVfQllfTlVMTEFOQUxZU0lTKTsN
CiAJCQkJCQkJCX0NCiAJCQkJCQkJfSBlbHNlIHsNCiAJCQkJCQkJCWlmICgodGhpcy50YWdCaXRz
ICYgRmxvd0NvbnRleHQuSElERV9OVUxMX0NPTVBBUklTT05fV0FSTklORykgPT0gMCkgew0KIAkJ
CQkJCQkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmxvY2FsVmFyaWFibGVOb25OdWxsQ29tcGFy
ZWRUb051bGwobG9jYWwsIHJlZmVyZW5jZSk7DQogCQkJCQkJCQl9DQogCQkJCQkJCQlpZiAoIWZs
b3dJbmZvLmlzTWFya2VkQXNOdWxsT3JOb25OdWxsSW5Bc3NlcnRFeHByZXNzaW9uKGxvY2FsKSkg
ew0KLQkJCQkJCQkJCWZsb3dJbmZvLmluaXRzV2hlblRydWUoKS5zZXRSZWFjaE1vZGUoRmxvd0lu
Zm8uVU5SRUFDSEFCTEUpOw0KKwkJCQkJCQkJCWZsb3dJbmZvLmluaXRzV2hlblRydWUoKS5zZXRS
ZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEVfQllfTlVMTEFOQUxZU0lTKTsNCiAJCQkJCQkJ
CX0NCiAJCQkJCQkJfQ0KIAkJCQkJCQlyZXR1cm47DQpAQCAtMzQyLDcgKzM0Miw3IEBADQogCQkJ
CQkJCQkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmxvY2FsVmFyaWFibGVSZWR1bmRhbnRDaGVj
a09uTnVsbChsb2NhbCwgcmVmZXJlbmNlKTsNCiAJCQkJCQkJCQl9DQogCQkJCQkJCQkJaWYgKCFm
bG93SW5mby5pc01hcmtlZEFzTnVsbE9yTm9uTnVsbEluQXNzZXJ0RXhwcmVzc2lvbihsb2NhbCkp
IHsNCi0JCQkJCQkJCQkJZmxvd0luZm8uaW5pdHNXaGVuRmFsc2UoKS5zZXRSZWFjaE1vZGUoRmxv
d0luZm8uVU5SRUFDSEFCTEUpOw0KKwkJCQkJCQkJCQlmbG93SW5mby5pbml0c1doZW5GYWxzZSgp
LnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRV9CWV9OVUxMQU5BTFlTSVMpOw0KIAkJ
CQkJCQkJCX0NCiAJCQkJCQkJCQlyZXR1cm47DQogCQkJCQkJCQljYXNlIEZsb3dDb250ZXh0LklO
X0NPTVBBUklTT05fTk9OX05VTEw6DQpAQCAtMzU0LDcgKzM1NCw3IEBADQogCQkJCQkJCQkJCXNj
b3BlLnByb2JsZW1SZXBvcnRlcigpLmxvY2FsVmFyaWFibGVOdWxsQ29tcGFyZWRUb05vbk51bGwo
bG9jYWwsIHJlZmVyZW5jZSk7DQogCQkJCQkJCQkJfQ0KIAkJCQkJCQkJCWlmICghZmxvd0luZm8u
aXNNYXJrZWRBc051bGxPck5vbk51bGxJbkFzc2VydEV4cHJlc3Npb24obG9jYWwpKSB7DQotCQkJ
CQkJCQkJCWZsb3dJbmZvLmluaXRzV2hlblRydWUoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5S
RUFDSEFCTEUpOw0KKwkJCQkJCQkJCQlmbG93SW5mby5pbml0c1doZW5UcnVlKCkuc2V0UmVhY2hN
b2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFX0JZX05VTExBTkFMWVNJUyk7DQogCQkJCQkJCQkJfQ0K
IAkJCQkJCQkJCXJldHVybjsNCiAJCQkJCQkJCWNhc2UgRmxvd0NvbnRleHQuSU5fQVNTSUdOTUVO
VDoNCkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxv
dy9GbG93Q29udGV4dC5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBz
ZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvZmxvdy9GbG93Q29udGV4dC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS42
OA0KZGlmZiAtdSAtcjEuNjggRmxvd0NvbnRleHQuamF2YQ0KLS0tIGNvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L0Zsb3dDb250ZXh0LmphdmEJMSBTZXAgMjAx
MCAxNTo0OTo1NyAtMDAwMAkxLjY4DQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2Zsb3cvRmxvd0NvbnRleHQuamF2YQk0IE1hciAyMDExIDA3OjI4OjE5IC0w
MDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLSAqIENvcHly
aWdodCAoYykgMjAwMCwgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCisgKiBDb3B5
cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQogICogQWxs
IHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVy
aWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlw
c2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJp
YnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtNTc4LDE0ICs1NzgsMTQgQEANCiAJCQkJ
CQlzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5sb2NhbFZhcmlhYmxlUmVkdW5kYW50Q2hlY2tPbk5v
bk51bGwobG9jYWwsIHJlZmVyZW5jZSk7DQogCQkJCQl9DQogCQkJCQlpZiAoIWZsb3dJbmZvLmlz
TWFya2VkQXNOdWxsT3JOb25OdWxsSW5Bc3NlcnRFeHByZXNzaW9uKGxvY2FsKSkgew0KLQkJCQkJ
CWZsb3dJbmZvLmluaXRzV2hlbkZhbHNlKCkuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hB
QkxFKTsNCisJCQkJCQlmbG93SW5mby5pbml0c1doZW5GYWxzZSgpLnNldFJlYWNoTW9kZShGbG93
SW5mby5VTlJFQUNIQUJMRV9CWV9OVUxMQU5BTFlTSVMpOw0KIAkJCQkJfQ0KIAkJCQl9IGVsc2Ug
ew0KIAkJCQkJaWYgKCh0aGlzLnRhZ0JpdHMgJiBGbG93Q29udGV4dC5ISURFX05VTExfQ09NUEFS
SVNPTl9XQVJOSU5HKSA9PSAwKSB7DQogCQkJCQkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkubG9j
YWxWYXJpYWJsZU5vbk51bGxDb21wYXJlZFRvTnVsbChsb2NhbCwgcmVmZXJlbmNlKTsNCiAJCQkJ
CX0NCiAJCQkJCWlmICghZmxvd0luZm8uaXNNYXJrZWRBc051bGxPck5vbk51bGxJbkFzc2VydEV4
cHJlc3Npb24obG9jYWwpKSB7DQotCQkJCQkJZmxvd0luZm8uaW5pdHNXaGVuVHJ1ZSgpLnNldFJl
YWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRSk7DQorCQkJCQkJZmxvd0luZm8uaW5pdHNXaGVu
VHJ1ZSgpLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRV9CWV9OVUxMQU5BTFlTSVMp
Ow0KIAkJCQkJfQ0KIAkJCQl9DQogCQkJCXJldHVybjsNCkBAIC02MDksNyArNjA5LDcgQEANCiAJ
CQkJCQkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkubG9jYWxWYXJpYWJsZVJlZHVuZGFudENoZWNr
T25OdWxsKGxvY2FsLCByZWZlcmVuY2UpOw0KIAkJCQkJCX0NCiAJCQkJCQlpZiAoIWZsb3dJbmZv
LmlzTWFya2VkQXNOdWxsT3JOb25OdWxsSW5Bc3NlcnRFeHByZXNzaW9uKGxvY2FsKSkgew0KLQkJ
CQkJCQlmbG93SW5mby5pbml0c1doZW5GYWxzZSgpLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJF
QUNIQUJMRSk7DQorCQkJCQkJCWZsb3dJbmZvLmluaXRzV2hlbkZhbHNlKCkuc2V0UmVhY2hNb2Rl
KEZsb3dJbmZvLlVOUkVBQ0hBQkxFX0JZX05VTExBTkFMWVNJUyk7DQogCQkJCQkJfQ0KIAkJCQkJ
CXJldHVybjsNCiAJCQkJCWNhc2UgRmxvd0NvbnRleHQuSU5fQ09NUEFSSVNPTl9OT05fTlVMTDoN
CkBAIC02MjEsNyArNjIxLDcgQEANCiAJCQkJCQkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkubG9j
YWxWYXJpYWJsZU51bGxDb21wYXJlZFRvTm9uTnVsbChsb2NhbCwgcmVmZXJlbmNlKTsNCiAJCQkJ
CQl9DQogCQkJCQkJaWYgKCFmbG93SW5mby5pc01hcmtlZEFzTnVsbE9yTm9uTnVsbEluQXNzZXJ0
RXhwcmVzc2lvbihsb2NhbCkpIHsNCi0JCQkJCQkJZmxvd0luZm8uaW5pdHNXaGVuVHJ1ZSgpLnNl
dFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRSk7DQorCQkJCQkJCWZsb3dJbmZvLmluaXRz
V2hlblRydWUoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEVfQllfTlVMTEFOQUxZ
U0lTKTsNCiAJCQkJCQl9DQogCQkJCQkJcmV0dXJuOw0KIAkJCQkJY2FzZSBGbG93Q29udGV4dC5J
Tl9BU1NJR05NRU5UOg0KSW5kZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9mbG93L0Zsb3dJbmZvLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9v
dC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9mbG93L0Zsb3dJbmZvLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lv
biAxLjQ1DQpkaWZmIC11IC1yMS40NSBGbG93SW5mby5qYXZhDQotLS0gY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvRmxvd0luZm8uamF2YQkxNiBEZWMgMjAx
MCAxMzowMjozMCAtMDAwMAkxLjQ1DQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2Zsb3cvRmxvd0luZm8uamF2YQk0IE1hciAyMDExIDA3OjI4OjE5IC0wMDAw
DQpAQCAtMSw1ICsxLDUgQEANCiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdo
dCAoYykgMjAwMCwgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCisgKiBDb3B5cmln
aHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQogICogQWxsIHJp
Z2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFs
cw0KICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2Ug
UHVibGljIExpY2Vuc2UgdjEuMA0KICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0
aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQpAQCAtMjIsOSArMjIsMjQgQEANCiANCiAJcHVibGlj
IGludCB0YWdCaXRzOyAvLyBSRUFDSEFCTEUgYnkgZGVmYXVsdA0KIAlwdWJsaWMgZmluYWwgc3Rh
dGljIGludCBSRUFDSEFCTEUgPSAwOw0KLQlwdWJsaWMgZmluYWwgc3RhdGljIGludCBVTlJFQUNI
QUJMRSA9IDE7DQotCXB1YmxpYyBmaW5hbCBzdGF0aWMgaW50IE5VTExfRkxBR19NQVNLID0gMjsN
Ci0NCisJLyogdW5yZWFjaGFibGUgY29kZSANCisJICogZWcuIHdoaWxlICh0cnVlKTsNCisJICog
ICAgIGkrKzsgIC0tPiB1bnJlYWNoYWJsZSBjb2RlIA0KKwkgKi8NCisJcHVibGljIGZpbmFsIHN0
YXRpYyBpbnQgVU5SRUFDSEFCTEVfT1JfREVBRCA9IDE7DQorCS8qIHVucmVhY2hhYmxlIGNvZGUg
YXMgaW5mZXJyZWQgYnkgbnVsbCBhbmFseXNpcw0KKwkgKiBlZy4gc3RyID0gbnVsbDsNCisJICog
ICAgIGlmIChzdHIgIT0gbnVsbCkgew0KKwkgKiAgICAgICAgLy8gZGVhZCBjb2RlDQorCSAqICAg
ICB9DQorCSAqLw0KKwlwdWJsaWMgZmluYWwgc3RhdGljIGludCBVTlJFQUNIQUJMRV9CWV9OVUxM
QU5BTFlTSVMgPSAyOw0KKwkvKg0KKwkgKiBjb2RlIHVucmVhY2hhYmxlIGluIGFueSBmYXNoaW9u
DQorCSAqLw0KKwlwdWJsaWMgZmluYWwgc3RhdGljIGludCBVTlJFQUNIQUJMRSA9IFVOUkVBQ0hB
QkxFX09SX0RFQUQgfCBVTlJFQUNIQUJMRV9CWV9OVUxMQU5BTFlTSVM7DQorCXB1YmxpYyBmaW5h
bCBzdGF0aWMgaW50IE5VTExfRkxBR19NQVNLID0gNDsNCisJDQogCXB1YmxpYyBmaW5hbCBzdGF0
aWMgaW50IFVOS05PV04gPSAxOw0KIAlwdWJsaWMgZmluYWwgc3RhdGljIGludCBOVUxMID0gMjsN
CiAJcHVibGljIGZpbmFsIHN0YXRpYyBpbnQgTk9OX05VTEwgPSA0Ow0KQEAgLTM1NSw3ICszNzAs
NyBAQA0KIAlVbmNvbmRpdGlvbmFsRmxvd0luZm8gbWVyZ2VkSW5mbzsNCiAJaWYgKGlzT3B0aW1p
emVkVHJ1ZSl7DQogCQlpZiAoaW5pdHNXaGVuVHJ1ZSA9PSBGbG93SW5mby5ERUFEX0VORCAmJiBh
bGxvd0Zha2VEZWFkQnJhbmNoKSB7DQotCQkJbWVyZ2VkSW5mbyA9IGluaXRzV2hlbkZhbHNlLnNl
dFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRSkuDQorCQkJbWVyZ2VkSW5mbyA9IGluaXRz
V2hlbkZhbHNlLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRV9PUl9ERUFEKS4NCiAJ
CQkJdW5jb25kaXRpb25hbEluaXRzKCk7DQogCQl9DQogCQllbHNlIHsNCkBAIC0zNjcsNyArMzgy
LDcgQEANCiAJfQ0KIAllbHNlIGlmIChpc09wdGltaXplZEZhbHNlKSB7DQogCQlpZiAoaW5pdHNX
aGVuRmFsc2UgPT0gRmxvd0luZm8uREVBRF9FTkQgJiYgYWxsb3dGYWtlRGVhZEJyYW5jaCkgew0K
LQkJCW1lcmdlZEluZm8gPSBpbml0c1doZW5UcnVlLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJF
QUNIQUJMRSkuDQorCQkJbWVyZ2VkSW5mbyA9IGluaXRzV2hlblRydWUuc2V0UmVhY2hNb2RlKEZs
b3dJbmZvLlVOUkVBQ0hBQkxFX09SX0RFQUQpLg0KIAkJCQl1bmNvbmRpdGlvbmFsSW5pdHMoKTsN
CiAJCX0NCiAJCWVsc2Ugew0KQEAgLTM5NCw3ICs0MDksNyBAQA0KIAlVbmNvbmRpdGlvbmFsRmxv
d0luZm8gbWVyZ2VkSW5mbzsNCiAJaWYgKGlzT3B0aW1pemVkVHJ1ZSl7DQogCQlpZiAoaW5pdHNX
aGVuVHJ1ZSA9PSBGbG93SW5mby5ERUFEX0VORCAmJiBhbGxvd0Zha2VEZWFkQnJhbmNoKSB7DQot
CQkJbWVyZ2VkSW5mbyA9IGluaXRzV2hlbkZhbHNlLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJF
QUNIQUJMRSkuDQorCQkJbWVyZ2VkSW5mbyA9IGluaXRzV2hlbkZhbHNlLnNldFJlYWNoTW9kZShG
bG93SW5mby5VTlJFQUNIQUJMRV9PUl9ERUFEKS4NCiAJCQkJdW5jb25kaXRpb25hbEluaXRzKCk7
DQogCQl9DQogCQllbHNlIHsNCkBAIC00MDYsNyArNDIxLDcgQEANCiAJfQ0KIAllbHNlIGlmIChp
c09wdGltaXplZEZhbHNlKSB7DQogCQlpZiAoaW5pdHNXaGVuRmFsc2UgPT0gRmxvd0luZm8uREVB
RF9FTkQgJiYgYWxsb3dGYWtlRGVhZEJyYW5jaCkgew0KLQkJCW1lcmdlZEluZm8gPSBpbml0c1do
ZW5UcnVlLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRSkuDQorCQkJbWVyZ2VkSW5m
byA9IGluaXRzV2hlblRydWUuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFX09SX0RF
QUQpLg0KIAkJCQl1bmNvbmRpdGlvbmFsSW5pdHMoKTsNCiAJCX0NCiAJCWVsc2Ugew0KQEAgLTQ1
NiwxMCArNDcxLDkgQEANCiB9DQogDQogLyoqDQotICogUmV0dXJuIFJFQUNIQUJMRSBpZiB0aGlz
IGZsb3cgaW5mbyBpcyByZWFjaGFibGUsIFVOUkVBQ0hBQkxFDQotICogZWxzZS4NCi0gKiBAcmV0
dXJuIFJFQUNIQUJMRSBpZiB0aGlzIGZsb3cgaW5mbyBpcyByZWFjaGFibGUsIFVOUkVBQ0hBQkxF
DQotICogICAgICAgICBlbHNlDQorICogRmluZCBvdXQgdGhlIHJlYWNoYWJpbGl0eSBtb2RlIG9m
IHRoaXMgZmxvd0luZm8uDQorICogQHJldHVybiBSRUFDSEFCTEUgaWYgdGhpcyBmbG93IGluZm8g
aXMgcmVhY2hhYmxlLCBvdGhlcndpc2UNCisgKiAgICAgICAgIGVpdGhlciBVTlJFQUNIQUJMRV9P
Ul9ERUFEIG9yIFVOUkVBQ0hBQkxFX0JZX05VTExBTkFMWVNJUy4NCiAgKi8NCiBwdWJsaWMgaW50
IHJlYWNoTW9kZSgpIHsNCiAJcmV0dXJuIHRoaXMudGFnQml0cyAmIFVOUkVBQ0hBQkxFOw0KQEAg
LTQ3Niw3ICs0OTAsOCBAQA0KIA0KIC8qKg0KICAqIFNldCB0aGlzIGZsb3cgaW5mbyByZWFjaCBt
b2RlIGFuZCByZXR1cm4gdGhpcy4NCi0gKiBAcGFyYW0gcmVhY2hNb2RlIG9uZSBvZiB7QGxpbmsg
I1JFQUNIQUJMRSBSRUFDSEFCTEV9IG9yIHtAbGluayAjVU5SRUFDSEFCTEUgVU5SRUFDSEFCTEV9
DQorICogQHBhcmFtIHJlYWNoTW9kZSBvbmUgb2Yge0BsaW5rICNSRUFDSEFCTEUgUkVBQ0hBQkxF
fSwge0BsaW5rICNVTlJFQUNIQUJMRV9PUl9ERUFEIFVOUkVBQ0hBQkxFX09SX0RFQUR9LA0KKyAq
IHtAbGluayAjVU5SRUFDSEFCTEVfQllfTlVMTEFOQUxZU0lTIFVOUkVBQ0hBQkxFX0JZX05VTExB
TkFMWVNJU30gb3Ige0BsaW5rICNVTlJFQUNIQUJMRSBVTlJFQUNIQUJMRX0NCiAgKiBAcmV0dXJu
IHRoaXMsIHdpdGggdGhlIHJlYWNoIG1vZGUgc2V0IHRvIHJlYWNoTW9kZQ0KICAqLw0KIGFic3Ry
YWN0IHB1YmxpYyBGbG93SW5mbyBzZXRSZWFjaE1vZGUoaW50IHJlYWNoTW9kZSk7DQpJbmRleDog
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvTG9vcGluZ0Zs
b3dDb250ZXh0LmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9mbG93L0xvb3BpbmdGbG93Q29udGV4dC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24g
MS41Mg0KZGlmZiAtdSAtcjEuNTIgTG9vcGluZ0Zsb3dDb250ZXh0LmphdmENCi0tLSBjb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxvdy9Mb29waW5nRmxvd0NvbnRl
eHQuamF2YQkxNiBGZWIgMjAxMSAxODo1Nzo0OCAtMDAwMAkxLjUyDQorKysgY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvTG9vcGluZ0Zsb3dDb250ZXh0Lmph
dmEJNCBNYXIgMjAxMSAwNzoyODoxOSAtMDAwMA0KQEAgLTQ5MywxNCArNDkzLDE0IEBADQogCQkJ
CQkJc2NvcGUucHJvYmxlbVJlcG9ydGVyKCkubG9jYWxWYXJpYWJsZVJlZHVuZGFudENoZWNrT25O
b25OdWxsKGxvY2FsLCByZWZlcmVuY2UpOw0KIAkJCQkJfQ0KIAkJCQkJaWYgKCFmbG93SW5mby5p
c01hcmtlZEFzTnVsbE9yTm9uTnVsbEluQXNzZXJ0RXhwcmVzc2lvbihsb2NhbCkpIHsNCi0JCQkJ
CQlmbG93SW5mby5pbml0c1doZW5GYWxzZSgpLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNI
QUJMRSk7DQorCQkJCQkJZmxvd0luZm8uaW5pdHNXaGVuRmFsc2UoKS5zZXRSZWFjaE1vZGUoRmxv
d0luZm8uVU5SRUFDSEFCTEVfQllfTlVMTEFOQUxZU0lTKTsNCiAJCQkJCX0NCiAJCQkJfSBlbHNl
IHsNCiAJCQkJCWlmICgodGhpcy50YWdCaXRzICYgRmxvd0NvbnRleHQuSElERV9OVUxMX0NPTVBB
UklTT05fV0FSTklORykgPT0gMCkgew0KIAkJCQkJCXNjb3BlLnByb2JsZW1SZXBvcnRlcigpLmxv
Y2FsVmFyaWFibGVOb25OdWxsQ29tcGFyZWRUb051bGwobG9jYWwsIHJlZmVyZW5jZSk7DQogCQkJ
CQl9DQogCQkJCQlpZiAoIWZsb3dJbmZvLmlzTWFya2VkQXNOdWxsT3JOb25OdWxsSW5Bc3NlcnRF
eHByZXNzaW9uKGxvY2FsKSkgew0KLQkJCQkJCWZsb3dJbmZvLmluaXRzV2hlblRydWUoKS5zZXRS
ZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEUpOw0KKwkJCQkJCWZsb3dJbmZvLmluaXRzV2hl
blRydWUoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEVfQllfTlVMTEFOQUxZU0lT
KTsNCiAJCQkJCX0NCiAJCQkJfQ0KIAkJCX0gZWxzZSBpZiAoZmxvd0luZm8uaXNEZWZpbml0ZWx5
TnVsbChsb2NhbCkpIHsNCkBAIC01MDksMTQgKzUwOSwxNCBAQA0KIAkJCQkJCXNjb3BlLnByb2Js
ZW1SZXBvcnRlcigpLmxvY2FsVmFyaWFibGVSZWR1bmRhbnRDaGVja09uTnVsbChsb2NhbCwgcmVm
ZXJlbmNlKTsNCiAJCQkJCX0NCiAJCQkJCWlmICghZmxvd0luZm8uaXNNYXJrZWRBc051bGxPck5v
bk51bGxJbkFzc2VydEV4cHJlc3Npb24obG9jYWwpKSB7DQotCQkJCQkJZmxvd0luZm8uaW5pdHNX
aGVuRmFsc2UoKS5zZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEUpOw0KKwkJCQkJCWZs
b3dJbmZvLmluaXRzV2hlbkZhbHNlKCkuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxF
X0JZX05VTExBTkFMWVNJUyk7DQogCQkJCQl9DQogCQkJCX0gZWxzZSB7DQogCQkJCQlpZiAoKHRo
aXMudGFnQml0cyAmIEZsb3dDb250ZXh0LkhJREVfTlVMTF9DT01QQVJJU09OX1dBUk5JTkcpID09
IDApIHsNCiAJCQkJCQlzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5sb2NhbFZhcmlhYmxlTnVsbENv
bXBhcmVkVG9Ob25OdWxsKGxvY2FsLCByZWZlcmVuY2UpOw0KIAkJCQkJfQ0KIAkJCQkJaWYgKCFm
bG93SW5mby5pc01hcmtlZEFzTnVsbE9yTm9uTnVsbEluQXNzZXJ0RXhwcmVzc2lvbihsb2NhbCkp
IHsNCi0JCQkJCQlmbG93SW5mby5pbml0c1doZW5UcnVlKCkuc2V0UmVhY2hNb2RlKEZsb3dJbmZv
LlVOUkVBQ0hBQkxFKTsNCisJCQkJCQlmbG93SW5mby5pbml0c1doZW5UcnVlKCkuc2V0UmVhY2hN
b2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFX0JZX05VTExBTkFMWVNJUyk7DQogCQkJCQl9DQogCQkJ
CX0NCiAJCQl9IGVsc2UgaWYgKHRoaXMudXBzdHJlYW1OdWxsRmxvd0luZm8uaXNEZWZpbml0ZWx5
Tm9uTnVsbChsb2NhbCkgJiYgIWZsb3dJbmZvLmlzUG90ZW50aWFsbHlOdWxsKGxvY2FsKSAmJiAh
Zmxvd0luZm8uaXNQb3RlbnRpYWxseVVua25vd24obG9jYWwpKSB7ICAgIA0KQEAgLTU1NCw3ICs1
NTQsNyBAQA0KIAkJCQkJCQlzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5sb2NhbFZhcmlhYmxlUmVk
dW5kYW50Q2hlY2tPbk51bGwobG9jYWwsIHJlZmVyZW5jZSk7DQogCQkJCQkJfQ0KIAkJCQkJCWlm
ICghZmxvd0luZm8uaXNNYXJrZWRBc051bGxPck5vbk51bGxJbkFzc2VydEV4cHJlc3Npb24obG9j
YWwpKSB7DQotCQkJCQkJCWZsb3dJbmZvLmluaXRzV2hlbkZhbHNlKCkuc2V0UmVhY2hNb2RlKEZs
b3dJbmZvLlVOUkVBQ0hBQkxFKTsNCisJCQkJCQkJZmxvd0luZm8uaW5pdHNXaGVuRmFsc2UoKS5z
ZXRSZWFjaE1vZGUoRmxvd0luZm8uVU5SRUFDSEFCTEVfQllfTlVMTEFOQUxZU0lTKTsNCiAJCQkJ
CQl9DQogCQkJCQkJcmV0dXJuOw0KIAkJCQkJY2FzZSBGbG93Q29udGV4dC5JTl9DT01QQVJJU09O
X05PTl9OVUxMOg0KQEAgLTU2Niw3ICs1NjYsNyBAQA0KIAkJCQkJCQlzY29wZS5wcm9ibGVtUmVw
b3J0ZXIoKS5sb2NhbFZhcmlhYmxlTnVsbENvbXBhcmVkVG9Ob25OdWxsKGxvY2FsLCByZWZlcmVu
Y2UpOw0KIAkJCQkJCX0NCiAJCQkJCQlpZiAoIWZsb3dJbmZvLmlzTWFya2VkQXNOdWxsT3JOb25O
dWxsSW5Bc3NlcnRFeHByZXNzaW9uKGxvY2FsKSkgew0KLQkJCQkJCQlmbG93SW5mby5pbml0c1do
ZW5UcnVlKCkuc2V0UmVhY2hNb2RlKEZsb3dJbmZvLlVOUkVBQ0hBQkxFKTsNCisJCQkJCQkJZmxv
d0luZm8uaW5pdHNXaGVuVHJ1ZSgpLnNldFJlYWNoTW9kZShGbG93SW5mby5VTlJFQUNIQUJMRV9C
WV9OVUxMQU5BTFlTSVMpOw0KIAkJCQkJCX0NCiAJCQkJCQlyZXR1cm47DQogCQkJCQljYXNlIEZs
b3dDb250ZXh0LklOX0FTU0lHTk1FTlQ6DQpJbmRleDogY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvVW5jb25kaXRpb25hbEZsb3dJbmZvLmphdmENCj09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L1VuY29uZGl0aW9u
YWxGbG93SW5mby5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS43Mg0KZGlmZiAtdSAtcjEu
NzIgVW5jb25kaXRpb25hbEZsb3dJbmZvLmphdmENCi0tLSBjb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxvdy9VbmNvbmRpdGlvbmFsRmxvd0luZm8uamF2YQkxOSBK
YW4gMjAxMSAwNToyOTo1NCAtMDAwMAkxLjcyDQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvVW5jb25kaXRpb25hbEZsb3dJbmZvLmphdmEJNCBNYXIg
MjAxMSAwNzoyODoxOSAtMDAwMA0KQEAgLTczMSw3ICs3MzEsNyBAQA0KIGZpbmFsIHB1YmxpYyBi
b29sZWFuIGlzRGVmaW5pdGVseUFzc2lnbmVkKEZpZWxkQmluZGluZyBmaWVsZCkgew0KIAkvLyBN
aXJyb3JlZCBpbiBDb2RlU3RyZWFtLmlzRGVmaW5pdGVseUFzc2lnbmVkKC4uKQ0KIAkvLyBkbyBu
b3Qgd2FudCB0byBjb21wbGFpbiBpbiB1bnJlYWNoYWJsZSBjb2RlDQotCWlmICgodGhpcy50YWdC
aXRzICYgVU5SRUFDSEFCTEUpICE9IDApIHsNCisJaWYgKCh0aGlzLnRhZ0JpdHMgJiBVTlJFQUNI
QUJMRV9PUl9ERUFEKSAhPSAwKSB7DQogCQlyZXR1cm4gdHJ1ZTsNCiAJfQ0KIAlyZXR1cm4gaXNE
ZWZpbml0ZWx5QXNzaWduZWQoZmllbGQuaWQpOw0KQEAgLTczOSw3ICs3MzksNyBAQA0KIA0KIGZp
bmFsIHB1YmxpYyBib29sZWFuIGlzRGVmaW5pdGVseUFzc2lnbmVkKExvY2FsVmFyaWFibGVCaW5k
aW5nIGxvY2FsKSB7DQogCS8vIGRvIG5vdCB3YW50IHRvIGNvbXBsYWluIGluIHVucmVhY2hhYmxl
IGNvZGUgaWYgbG9jYWwgZGVjbGFyZWQgaW4gcmVhY2hhYmxlIGNvZGUNCi0JaWYgKCh0aGlzLnRh
Z0JpdHMgJiBVTlJFQUNIQUJMRSkgIT0gMCAmJiAobG9jYWwuZGVjbGFyYXRpb24uYml0cyAmIEFT
VE5vZGUuSXNMb2NhbERlY2xhcmF0aW9uUmVhY2hhYmxlKSAhPSAwKSB7DQorCWlmICgodGhpcy50
YWdCaXRzICYgVU5SRUFDSEFCTEVfT1JfREVBRCkgIT0gMCAmJiAobG9jYWwuZGVjbGFyYXRpb24u
Yml0cyAmIEFTVE5vZGUuSXNMb2NhbERlY2xhcmF0aW9uUmVhY2hhYmxlKSAhPSAwKSB7DQogCQly
ZXR1cm4gdHJ1ZTsNCiAJfQ0KIAlyZXR1cm4gaXNEZWZpbml0ZWx5QXNzaWduZWQobG9jYWwuaWQg
KyB0aGlzLm1heEZpZWxkQ291bnQpOw0KQEAgLTE1MjksNyArMTUyOSw3IEBADQogfQ0KIA0KIHB1
YmxpYyBVbmNvbmRpdGlvbmFsRmxvd0luZm8gbWVyZ2VkV2l0aChVbmNvbmRpdGlvbmFsRmxvd0lu
Zm8gb3RoZXJJbml0cykgew0KLQlpZiAoKG90aGVySW5pdHMudGFnQml0cyAmIFVOUkVBQ0hBQkxF
KSAhPSAwICYmIHRoaXMgIT0gREVBRF9FTkQpIHsNCisJaWYgKChvdGhlckluaXRzLnRhZ0JpdHMg
JiBVTlJFQUNIQUJMRV9PUl9ERUFEKSAhPSAwICYmIHRoaXMgIT0gREVBRF9FTkQpIHsNCiAJCWlm
IChDT1ZFUkFHRV9URVNUX0ZMQUcpIHsNCiAJCQlpZihDb3ZlcmFnZVRlc3RJZCA9PSAyOCkgew0K
IAkJCQl0aHJvdyBuZXcgQXNzZXJ0aW9uRmFpbGVkRXhjZXB0aW9uKCJDT1ZFUkFHRSAyOCIpOyAv
LyROT04tTkxTLTEkDQpAQCAtMTUzOCw3ICsxNTM4LDcgQEANCiAJCWNvbWJpbmVOdWxsU3RhdHVz
Q2hhbmdlSW5Bc3NlcnRJbmZvKG90aGVySW5pdHMpOw0KIAkJcmV0dXJuIHRoaXM7DQogCX0NCi0J
aWYgKCh0aGlzLnRhZ0JpdHMgJiBVTlJFQUNIQUJMRSkgIT0gMCkgew0KKwlpZiAoKHRoaXMudGFn
Qml0cyAmIFVOUkVBQ0hBQkxFX09SX0RFQUQpICE9IDApIHsNCiAJCWlmIChDT1ZFUkFHRV9URVNU
X0ZMQUcpIHsNCiAJCQlpZihDb3ZlcmFnZVRlc3RJZCA9PSAyOSkgew0KIAkJCQl0aHJvdyBuZXcg
QXNzZXJ0aW9uRmFpbGVkRXhjZXB0aW9uKCJDT1ZFUkFHRSAyOSIpOyAvLyROT04tTkxTLTEkDQpA
QCAtMTU2Myw3ICsxNTYzLDE3IEBADQogCQluYTEsIG5hMiwgbmEzLCBuYTQsDQogCQluYjEsIG5i
MiwgbmIzLCBuYjQsDQogCQliMSwgYjIsIGIzLCBiNDsNCi0JaWYgKHRoaXNIYWROdWxscykgew0K
KwlpZiAoKG90aGVySW5pdHMudGFnQml0cyAmIEZsb3dJbmZvLlVOUkVBQ0hBQkxFX0JZX05VTExB
TkFMWVNJUykgIT0gMCkgew0KKwkJb3RoZXJIYXNOdWxscyA9IGZhbHNlOyAvLyBza2lwIG1lcmdp
bmcsIG90aGVySW5pdHMgaXMgdW5yZWFjaGFibGUgYnkgbnVsbCBhbmFseXNpcw0KKwl9IGVsc2Ug
aWYgKCh0aGlzLnRhZ0JpdHMgJiBGbG93SW5mby5VTlJFQUNIQUJMRV9CWV9OVUxMQU5BTFlTSVMp
ICE9IDApIHsgLy8gZGlyZWN0bHkgY29weSBpZiB0aGlzIGlzIHVucmVhY2hhYmxlIGJ5IG51bGwg
YW5hbHlzaXMNCisJCXRoaXMubnVsbEJpdDEgPSBvdGhlckluaXRzLm51bGxCaXQxOw0KKwkJdGhp
cy5udWxsQml0MiA9IG90aGVySW5pdHMubnVsbEJpdDI7DQorCQl0aGlzLm51bGxCaXQzID0gb3Ro
ZXJJbml0cy5udWxsQml0MzsNCisJCXRoaXMubnVsbEJpdDQgPSBvdGhlckluaXRzLm51bGxCaXQ0
Ow0KKwkJdGhpc0hhZE51bGxzID0gZmFsc2U7DQorCQl0aGlzSGFzTnVsbHMgPSBvdGhlckhhc051
bGxzOw0KKwkJdGhpcy50YWdCaXRzID0gb3RoZXJJbml0cy50YWdCaXRzOw0KKwl9IGVsc2UgaWYg
KHRoaXNIYWROdWxscykgew0KICAgICAJaWYgKG90aGVySGFzTnVsbHMpIHsNCiAgICAgCQl0aGlz
Lm51bGxCaXQxID0gKGEyID0gdGhpcy5udWxsQml0MikgJiAoYTMgPSB0aGlzLm51bGxCaXQzKQ0K
ICAgICAJCQkJCQkJJiAoYTQgPSB0aGlzLm51bGxCaXQ0KSAmIChiMSA9IG90aGVySW5pdHMubnVs
bEJpdDEpDQpAQCAtMTg1OCw2ICsxODY4LDggQEANCiAJfQkNCiAJaWYgKHJlYWNoTW9kZSA9PSBS
RUFDSEFCTEUgKSB7DQogCQl0aGlzLnRhZ0JpdHMgJj0gflVOUkVBQ0hBQkxFOw0KKwl9IGVsc2Ug
aWYgKHJlYWNoTW9kZSA9PSBVTlJFQUNIQUJMRV9CWV9OVUxMQU5BTFlTSVMgKSB7DQorCQl0aGlz
LnRhZ0JpdHMgfD0gVU5SRUFDSEFCTEVfQllfTlVMTEFOQUxZU0lTOwkvLyBkbyBub3QgaW50ZXJm
ZXJlIHdpdGggZGVmaW5pdGUgYXNzaWdubWVudCBhbmFseXNpcw0KIAl9IGVsc2Ugew0KIAkJaWYg
KCh0aGlzLnRhZ0JpdHMgJiBVTlJFQUNIQUJMRSkgPT0gMCkgew0KIAkJCS8vIHJlc2V0IG9wdGlv
bmFsIGluaXRzIHdoZW4gYmVjb21pbmcgdW5yZWFjaGFibGUNCkBAIC0xODcwLDcgKzE4ODIsNyBA
QA0KIAkJCQl9DQogCQkJfQ0KIAkJfQ0KLQkJdGhpcy50YWdCaXRzIHw9IFVOUkVBQ0hBQkxFOw0K
KwkJdGhpcy50YWdCaXRzIHw9IHJlYWNoTW9kZTsNCiAJfQ0KIAlyZXR1cm4gdGhpczsNCiB9DQoj
UCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlcg0KSW5kZXg6IHNyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0Zsb3dBbmFseXNpc1Rlc3Qu
amF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vRmxvd0FuYWx5c2lzVGVzdC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2
aXNpb24gMS40Ng0KZGlmZiAtdSAtcjEuNDYgRmxvd0FuYWx5c2lzVGVzdC5qYXZhDQotLS0gc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vRmxvd0FuYWx5
c2lzVGVzdC5qYXZhCTEgU2VwIDIwMTAgMTU6NDk6MzAgLTAwMDAJMS40Ng0KKysrIHNyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0Zsb3dBbmFseXNpc1Rl
c3QuamF2YQk0IE1hciAyMDExIDA3OjI4OjIyIC0wMDAwDQpAQCAtMSw1ICsxLDUgQEANCiAvKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwNSwgMjAxMCBJQk0gQ29y
cG9yYXRpb24gYW5kIG90aGVycy4NCisgKiBDb3B5cmlnaHQgKGMpIDIwMDUsIDIwMTEgSUJNIENv
cnBvcmF0aW9uIGFuZCBvdGhlcnMuDQogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9n
cmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0KICAqIGFyZSBtYWRlIGF2YWlsYWJs
ZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KICAq
IHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0
DQpAQCAtMjI0Niw2ICsyMjQ2LDEyMCBAQA0KIAkJIkRlYWQgY29kZVxuIiArIA0KIAkJIi0tLS0t
LS0tLS1cbiIpOw0KIH0NCisNCisvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93
X2J1Zy5jZ2k/aWQ9MzM4MjM0DQorLy8gV2FybiB1bmluaXRpYWxpemVkIHZhcmlhYmxlIGluIGRl
YWRjb2RlIGlmIGRlYWRjb2RlIGhhcyBiZWVuIGluZmVycmVkDQorLy8gYnkgbnVsbCBhbmFseXNp
cw0KK3B1YmxpYyB2b2lkIHRlc3RCdWczMzgyMzRhKCkgew0KKwl0aGlzLnJ1bk5lZ2F0aXZlVGVz
dCgNCisJCW5ldyBTdHJpbmdbXSB7DQorCQkJIlguamF2YSIsDQorCQkJInB1YmxpYyBjbGFzcyBY
IHtcbiIgKw0KKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykg
e1xuIiArIA0KKwkJCSIgICAgICAgIGludCBpO1xuIiArIA0KKwkJCSIgICAgICAgIFN0cmluZyBz
dHIgPSBudWxsO1xuIiArIA0KKwkJCSIgICAgICAgIGlmIChzdHIgIT0gbnVsbClcbiIgKyANCisJ
CQkiICAgICAgICAgICAgaSsrOyAgICBcbiIgKyANCisJCQkiICAgIH1cbiIgKyANCisJCQkifVxu
Ig0KKwkJfSwNCisJCSItLS0tLS0tLS0tXG4iICsgDQorCQkiMS4gV0FSTklORyBpbiBYLmphdmEg
KGF0IGxpbmUgNilcbiIgKyANCisJCSIJaSsrOyAgICBcbiIgKyANCisJCSIJXl5eXG4iICsgDQor
CQkiRGVhZCBjb2RlXG4iICsgDQorCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJIjIuIEVSUk9SIGlu
IFguamF2YSAoYXQgbGluZSA2KVxuIiArIA0KKwkJIglpKys7ICAgIFxuIiArIA0KKwkJIgleXG4i
ICsgDQorCQkiVGhlIGxvY2FsIHZhcmlhYmxlIGkgbWF5IG5vdCBoYXZlIGJlZW4gaW5pdGlhbGl6
ZWRcbiIgKyANCisJCSItLS0tLS0tLS0tXG4iKTsNCit9DQorDQorLy8gaHR0cHM6Ly9idWdzLmVj
bGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMzODIzNA0KKy8vIERvbid0IHdhcm4gdW5p
bml0aWFsaXplZCB2YXJpYWJsZSBpbiBkZWFkY29kZSBpZiBkZWFkY29kZSBoYXMgbm90IGJlZW4g
aW5mZXJyZWQNCisvLyBieSBudWxsIGFuYWx5c2lzDQorcHVibGljIHZvaWQgdGVzdEJ1ZzMzODIz
NGIoKSB7DQorCXRoaXMucnVuQ29uZm9ybVRlc3QoDQorCQluZXcgU3RyaW5nW10gew0KKwkJCSJY
LmphdmEiLA0KKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsNCisJCQkiICAgIHB1YmxpYyBzdGF0
aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKyANCisJCQkiICAgICAgICBpbnQgaTtc
biIgKyANCisJCQkiICAgICAgICBsOiB7XG4iICsNCisJCQkiCQkJaWYoZmFsc2UpXG4iICsNCisJ
CQkiCQkJCWJyZWFrIGw7XG4iICsgDQorCQkJIiAgICAgICAgCXJldHVybjtcbiIgKw0KKwkJCSIJ
CSB9XG4iICsgDQorCQkJIiAgICAgICAgaSsrOyAgICBcbiIgKyANCisJCQkiICAgIH1cbiIgKyAN
CisJCQkifVxuIg0KKwkJfSwNCisJCSIiKTsNCit9DQorDQorLy8gaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTMzODIzNA0KKy8vIFdhcm4gdW5pbml0aWFsaXpl
ZCBmaWVsZCBpbiBkZWFkY29kZSBpZiBkZWFkY29kZSBoYXMgYmVlbiBpbmZlcnJlZA0KKy8vIGJ5
IG51bGwgYW5hbHlzaXMNCitwdWJsaWMgdm9pZCB0ZXN0QnVnMzM4MjM0YygpIHsNCisJdGhpcy5y
dW5OZWdhdGl2ZVRlc3QoDQorCQluZXcgU3RyaW5nW10gew0KKwkJCSJYLmphdmEiLA0KKwkJCSJw
dWJsaWMgY2xhc3MgWCB7XG4iICsNCisJCQkiICAgIHB1YmxpYyBmaW5hbCBpbnQgZmllbGQxO1xu
IiArDQorCQkJIiAgICB7XG4iICsgDQorCQkJIiAgICAgICAgaW50IGk7XG4iICsgDQorCQkJIiAg
ICAgICAgU3RyaW5nIHN0ciA9IG51bGw7XG4iICsNCisJCQkiCQkgaWYoc3RyICE9IG51bGwpXG4i
ICsNCisJCQkiCQkJaSA9IGZpZWxkMTtcbiIgKyANCisJCQkiICAgIH1cbiIgKyANCisJCQkifVxu
Ig0KKwkJfSwNCisJCSItLS0tLS0tLS0tXG4iICsgDQorCQkiMS4gRVJST1IgaW4gWC5qYXZhIChh
dCBsaW5lIDEpXG4iICsgDQorCQkiCXB1YmxpYyBjbGFzcyBYIHtcbiIgKyANCisJCSIJICAgICAg
ICAgICAgIF5cbiIgKyANCisJCSJUaGUgYmxhbmsgZmluYWwgZmllbGQgZmllbGQxIG1heSBub3Qg
aGF2ZSBiZWVuIGluaXRpYWxpemVkXG4iICsgDQorCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJIjIu
IFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDcpXG4iICsgDQorCQkiCWkgPSBmaWVsZDE7XG4i
ICsgDQorCQkiCV5eXl5eXl5eXl5cbiIgKyANCisJCSJEZWFkIGNvZGVcbiIgKyANCisJCSItLS0t
LS0tLS0tXG4iICsgDQorCQkiMy4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDcpXG4iICsgDQor
CQkiCWkgPSBmaWVsZDE7XG4iICsgDQorCQkiCSAgICBeXl5eXl5cbiIgKyANCisJCSJUaGUgYmxh
bmsgZmluYWwgZmllbGQgZmllbGQxIG1heSBub3QgaGF2ZSBiZWVuIGluaXRpYWxpemVkXG4iICsg
DQorCQkiLS0tLS0tLS0tLVxuIik7DQorfQ0KKy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD0zMzgyMzQNCisvLyBXYXJuIHVuaW5pdGlhbGl6ZWQgZmllbGQg
aW4gZGVhZGNvZGUgaWYgZGVhZGNvZGUgaGFzIGJlZW4gaW5mZXJyZWQNCisvLyBieSBudWxsIGFu
YWx5c2lzDQorcHVibGljIHZvaWQgdGVzdEJ1ZzMzODIzNGQoKSB7DQorCXRoaXMucnVuTmVnYXRp
dmVUZXN0KA0KKwkJbmV3IFN0cmluZ1tdIHsNCisJCQkiWC5qYXZhIiwNCisJCQkicHVibGljIGNs
YXNzIFgge1xuIiArDQorCQkJIiAgICB2b2lkIGZvbyhib29sZWFuIGIpIHtcbiIgKw0KKwkJCSIg
ICAgICAgIGludCBpO1xuIiArDQorCQkJIgkJIFN0cmluZyBzdHIgPSBudWxsO1xuIiArIA0KKwkJ
CSIgICAgICAgIGlmKGIpe1xuIiArDQorCQkJIgkJIAlpZihzdHIgPT0gbnVsbClcbiIgKw0KKwkJ
CSIJCQkJcmV0dXJuO1xuIiArDQorCQkJIgkJIH0gZWxzZSB7XG4iICsNCisJCQkiCQkJaSA9IDI7
XG4iICsNCisJCQkiCQkgfVxuIiArDQorCQkJIgkJIGkrKztcbiIgKyANCisJCQkiICAgIH1cbiIg
KyANCisJCQkifVxuIg0KKwkJfSwgDQorCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJIjEuIEVSUk9S
IGluIFguamF2YSAoYXQgbGluZSAxMSlcbiIgKyANCisJCSIJaSsrO1xuIiArIA0KKwkJIgleXG4i
ICsgDQorCQkiVGhlIGxvY2FsIHZhcmlhYmxlIGkgbWF5IG5vdCBoYXZlIGJlZW4gaW5pdGlhbGl6
ZWRcbiIgKyANCisJCSItLS0tLS0tLS0tXG4iKTsNCit9DQogcHVibGljIHN0YXRpYyBDbGFzcyB0
ZXN0Q2xhc3MoKSB7DQogCXJldHVybiBGbG93QW5hbHlzaXNUZXN0LmNsYXNzOw0KIH0NCkluZGV4
OiBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9OdWxs
UmVmZXJlbmNlVGVzdC5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBz
ZS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9OdWxsUmVmZXJlbmNlVGVzdC5qYXZhLHYN
CnJldHJpZXZpbmcgcmV2aXNpb24gMS4xMTMNCmRpZmYgLXUgLXIxLjExMyBOdWxsUmVmZXJlbmNl
VGVzdC5qYXZhDQotLS0gc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3Jl
Z3Jlc3Npb24vTnVsbFJlZmVyZW5jZVRlc3QuamF2YQkyNyBGZWIgMjAxMSAyMTo0Mjo1MCAtMDAw
MAkxLjExMw0KKysrIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdy
ZXNzaW9uL051bGxSZWZlcmVuY2VUZXN0LmphdmEJNCBNYXIgMjAxMSAwNzoyODoyMiAtMDAwMA0K
QEAgLTE0MDYwLDQgKzE0MDYwLDM4IEBADQogCQl9LA0KIAkJIiIpOw0KIH0NCisNCisvLyBodHRw
czovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzM4MjM0DQorcHVibGlj
IHZvaWQgdGVzdEJ1ZzMzODIzNCgpIHsNCisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoDQorCQluZXcg
U3RyaW5nW10gew0KKwkJCSJYLmphdmEiLA0KKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsgDQor
CQkJIiAgIHN0YXRpYyBpbnQgZm9vKCkge1xuIiArIA0KKwkJCSIgICAgICAgIE9iamVjdCBvID0g
bnVsbDtcbiIgKw0KKwkJCSIJCSBpbnQgaSA9IDA7XG4iICsgDQorCQkJIiAgICAgICAgbGFiZWw6
IHtcbiIgKyANCisJCQkiICAgICAgICAgICAgaWYgKG8gPT0gbnVsbClcbiIgKyANCisJCQkiICAg
ICAgICAgICAgICAgIGJyZWFrIGxhYmVsO1xuIiArDQorCQkJIgkJCSBpKys7IiArIA0KKwkJCSIg
ICAgICAgIH1cbiIgKyANCisJCQkiICAgICAgICAgaWYgKGkgIT0gMCkge1xuIiArIA0KKwkJCSIg
ICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oaSk7XG4iICsgDQorCQkJIiAgICAgICAgfVxu
IiArIA0KKwkJCSIgICAgICAgIHJldHVybiAwO1xuIiArIA0KKwkJCSIgICAgfVxuIiArIA0KKwkJ
CSJ9XG4iDQorCQl9LA0KKwkJIi0tLS0tLS0tLS1cbiIgKyANCisJCSIxLiBFUlJPUiBpbiBYLmph
dmEgKGF0IGxpbmUgNilcbiIgKyANCisJCSIJaWYgKG8gPT0gbnVsbClcbiIgKyANCisJCSIJICAg
IF5cbiIgKyANCisJCSJSZWR1bmRhbnQgbnVsbCBjaGVjazogVGhlIHZhcmlhYmxlIG8gY2FuIG9u
bHkgYmUgbnVsbCBhdCB0aGlzIGxvY2F0aW9uXG4iICsgDQorCQkiLS0tLS0tLS0tLVxuIiArIA0K
KwkJIjIuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDgpXG4iICsgDQorCQkiCWkrKzsgICAg
ICAgIH1cbiIgKyANCisJCSIJXl5eXG4iICsgDQorCQkiRGVhZCBjb2RlXG4iICsgDQorCQkiLS0t
LS0tLS0tLVxuIik7DQorfQ0KIH0NClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmlsZQ0K
</data>

          </attachment>
      

    </bug>

</bugzilla>