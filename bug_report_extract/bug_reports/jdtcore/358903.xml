<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>358903</bug_id>
          
          <creation_ts>2011-09-26 10:27:00 -0400</creation_ts>
          <short_desc>Filter practically unimportant resource leak warnings</short_desc>
          <delta_ts>2012-01-24 09:52:45 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.7</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows XP</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.8 M5</target_milestone>
          
          <blocked>360908</blocked>
    
    <blocked>361073</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Deepak Azad">deepakazad</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>amj87.iitr</cc>
    
    <cc>daniel_megert</cc>
    
    <cc>markus_keller</cc>
    
    <cc>Olivier_Thomann</cc>
    
    <cc>satyam.kandula</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="47858"
          type_id="1"
          status="+"
          setter="satyam.kandula"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1999776</commentid>
    <comment_count>0</comment_count>
    <who name="Deepak Azad">deepakazad</who>
    <bug_when>2011-09-26 10:27:21 -0400</bug_when>
    <thetext>See also bug 349326.

The following 6 warnings in jdt.core are theoretically correct, but practically not important as no OS resource is leaked (the resources are StringReader, StringWriter etc). Is there a way we can filter these?

Resource leak: &apos;javaReader&apos; is never closed	Scribe.java	/org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter	line 2354

Resource leak: &apos;print&apos; is not closed at this location	ClassFileReader.java	/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt	line 67

Resource leak: &apos;print&apos; is not closed at this location	ClassFileReader.java	/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt	line 1181

Resource leak: &apos;reader&apos; is never closed	Main.java	/org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch	line 1794	

Resource leak: &apos;reader&apos; is never closed	Scribe.java	/org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter	line 2325	

Resource leak: &apos;writer&apos; is never closed	ProblemReporter.java	/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem	line 1114

Thanks Markus for pointing these out!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1999893</commentid>
    <comment_count>1</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2011-09-26 12:08:29 -0400</bug_when>
    <thetext>For Closeable classes from the JRE System Libraries, a good indication that close() is not really relevant is the absence of a finalize() method.

But that&apos;s not really a reliable predicate in general, and it&apos;s hard to track in practice when resources are wrapped in other resources like this:

    LineNumberReader resources = new LineNumberReader(new StringReader(string));</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2000485</commentid>
    <comment_count>2</comment_count>
    <who name="Deepak Azad">deepakazad</who>
    <bug_when>2011-09-27 08:47:10 -0400</bug_when>
    <thetext>In practice if a large proportion of warnings are unimportant from a practical standpoint and we do not have a way to suppress them, we can also consider changing the default of &apos;Resource leak&apos; warning to ignore.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2000536</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-09-27 09:37:24 -0400</bug_when>
    <thetext>(In reply to comment #2)
&gt; In practice if a large proportion of warnings are unimportant from a practical
&gt; standpoint and we do not have a way to suppress them, we can also consider
&gt; changing the default of &apos;Resource leak&apos; warning to ignore.

I think that should only be the very last resort because that would probably
mean that the vast majority of users will never learn about the warning.

I see two options to suppress warnings:

 @SuppressWarnings(&quot;resource&quot;)

 r.close();

:)

I&apos;d say in Eclipse code I expect the large proportion of the warnings
to be already fixed sometime during the last 10 years. If a handful of
unimportant warnings remain this looks quite normal to me.

Regarding the classification important/unimportant: should we for
a start just use a white list of JDK classes that are known not to
use external resources (StringReader/Writer etc.)?
That would only leave us with the issue of instance nesting,
but it would be something I could start from.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2000552</commentid>
    <comment_count>4</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-09-27 09:47:19 -0400</bug_when>
    <thetext>(In reply to comment #3)
&gt; (In reply to comment #2)
&gt; &gt; In practice if a large proportion of warnings are unimportant from a practical
&gt; &gt; standpoint and we do not have a way to suppress them, we can also consider
&gt; &gt; changing the default of &apos;Resource leak&apos; warning to ignore.
&gt; 
&gt; I think that should only be the very last resort because that would probably
&gt; mean that the vast majority of users will never learn about the warning.
Same feeling for me. I find this warning useful. It can definitely help to find resources leaks.

&gt;  @SuppressWarnings(&quot;resource&quot;)
yes, we should add this suppress warnings token.

Adding a while list might worth being investigated.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2000894</commentid>
    <comment_count>5</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-09-27 14:48:45 -0400</bug_when>
    <thetext>(In reply to comment #4)
&gt; &gt;  @SuppressWarnings(&quot;resource&quot;)
&gt; yes, we should add this suppress warnings token.

It&apos;s already part of the patch in bug 349326 :)

Related question: would we also want to support a corresponding
token for the batch compiler? I started to think about his when I
noticed that TestVerifier/VerifyTests raises the new warning and one way
to avoid clutter in the test output might be to pass 
  -warn:-resource
when compiling VerifyTests.java?

Should I file a new bug for that?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2002919</commentid>
    <comment_count>6</comment_count>
    <who name="Deepak Azad">deepakazad</who>
    <bug_when>2011-09-30 02:00:06 -0400</bug_when>
    <thetext>(In reply to comment #3)
&gt; Regarding the classification important/unimportant: should we for
&gt; a start just use a white list of JDK classes that are known not to
&gt; use external resources (StringReader/Writer etc.)?
&gt; That would only leave us with the issue of instance nesting,
&gt; but it would be something I could start from.

Let&apos;s take an example (org.eclipse.jdt.internal.compiler.batch.Main: line 1794)

LineNumberReader reader = new LineNumberReader(new StringReader(new String(Util.getFileCharContent(new File(arg.substring(1)), null))));

This example is fairly involved and even in this case wouldn&apos;t it be simpler to just check if any type used on the rhs has a finalize method or not? If no finalize method if found, it is probably safe to infer that there is no OS resource involved.

Preparing a list would be error prone, and I assume even there the basis of inclusion or exclusion of a type would be the presence or absence of finalize(). Hence, why not simply do on the fly checks?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2002920</commentid>
    <comment_count>7</comment_count>
    <who name="Deepak Azad">deepakazad</who>
    <bug_when>2011-09-30 02:10:49 -0400</bug_when>
    <thetext>Of course abstract classes like java.io.InputStream and java.io.OutputStream do not have finalize methods.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2003178</commentid>
    <comment_count>8</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2011-09-30 09:08:30 -0400</bug_when>
    <thetext>(In reply to comment #6)
&gt; Preparing a list would be error prone, and I assume even there the basis of
&gt; inclusion or exclusion of a type would be the presence or absence of
&gt; finalize(). Hence, why not simply do on the fly checks?

No, the list would have to be hand-checked and would only include the common cases from the JRE libraries that are safe because they only process a given string or array. I really meant comment 1 exactly as I wrote it.

The finalize() method is just a pattern used in the JRE, but I&apos;m sure there are many third-party resource classes that don&apos;t have a finalize() method. AFAICS, even the java.nio.* classes don&apos;t have finalizers. Actually only java.io.FileInput/OutputStream and java.util.zip.ZipFile do use finalize().</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2003634</commentid>
    <comment_count>9</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-10-01 08:32:29 -0400</bug_when>
    <thetext>I suggest to use 2 white lists, actually:

Group 1: classes that wrap another Closeable

Group 2: (leaf) classes that are known not to allocate any OS resources

Thus we can safely state that any expression
  new Group1_A(new Group1_B(value_from_group_2))
does not require tracking by our analysis.

A white list is not a complete solution but in this case I think
it&apos;s the best balance between avoiding false positives and effort
(development &amp; runtime).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2003984</commentid>
    <comment_count>10</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2011-10-03 10:23:49 -0400</bug_when>
    <thetext>(In reply to comment #9)
&gt; I suggest to use 2 white lists, actually:

Sounds good.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2011218</commentid>
    <comment_count>11</comment_count>
    <who name="Deepak Azad">deepakazad</who>
    <bug_when>2011-10-16 07:49:06 -0400</bug_when>
    <thetext>I don&apos;t know how easy or difficult is the complete solution, but as a first step we should be able to eliminate warnings on the following pattern

     Group1_Type resource= new Group1_Type();

There are a few of these in jdt.ui which involve one of StringReader,StringWriter, ByteArrayOutputStream, ByteArrayInputStream.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2011220</commentid>
    <comment_count>12</comment_count>
    <who name="Deepak Azad">deepakazad</who>
    <bug_when>2011-10-16 07:50:48 -0400</bug_when>
    <thetext>(In reply to comment #11)
&gt;      Group1_Type resource= new Group1_Type();
I meant Group2 :)
      Group2_Type resource= new Group2_Type();</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2034869</commentid>
    <comment_count>13</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2011-12-02 06:13:26 -0500</bug_when>
    <thetext>Could we put this and the dependent bugs on the plan for M5?

The builder has been updated for N20111201-2000, so this will create almost 100 compiler warnings in the SDK -- and from a quick glance, I&apos;d say about 30% are practically unimportant.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2035165</commentid>
    <comment_count>14</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-12-02 14:02:21 -0500</bug_when>
    <thetext>(In reply to comment #13)
&gt; Could we put this and the dependent bugs on the plan for M5?

I&apos;ll assess feasibility once the null annotations work is fully done for M4
 
&gt; The builder has been updated for N20111201-2000, so this will create almost 100
&gt; compiler warnings in the SDK -- and from a quick glance, I&apos;d say about 30% are
&gt; practically unimportant.

BTW: how can I see which builder is used (for which build)?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2035667</commentid>
    <comment_count>15</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-12-05 08:52:49 -0500</bug_when>
    <thetext>Please set the default for the unclosed resource back to &quot;warning&quot; since it has been changed to &quot;ignore&quot; via bug 365566.
Only changes in IrritantSet and BatchCompilerTest will need to be backed out. Rest everything is ok.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2045213</commentid>
    <comment_count>16</comment_count>
      <attachid>208899</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-01 16:06:20 -0500</bug_when>
    <thetext>Created attachment 208899
Tests &amp; fix v0.1

Here&apos;s a first take at implementing the two white lists
and using these during analysis.

While the implementation still has a few FIXMEs, I&apos;d appreciate
if someone could already have a look at these:
- tests: do you agree with the expected results?
- the concrete white lists (in TypeConstants)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2045240</commentid>
    <comment_count>17</comment_count>
    <who name="Deepak Azad">deepakazad</who>
    <bug_when>2012-01-02 03:22:49 -0500</bug_when>
    <thetext>(In reply to comment #16)
&gt; - the concrete white lists (in TypeConstants)
JAVA_IO_RESOURCE_FREE_CLOSEABLES - This list looks OK. 

However, JAVA_IO_WRAPPER_CLOSEABLES is missing quite a few types e.g. LineNumberReader, DataInputStream, DataInputStream, FilterReader, ObjectOutputStream, ObjectInputStream etc.

(I am wondering whether it is safe to say that if constructors for a &apos;resource type&apos; in java.io package accept as parameter one of the type from JAVA_IO_RESOURCE_FREE_CLOSEABLES then all those &apos;resource types&apos; belong in JAVA_IO_WRAPPER_CLOSEABLES. Maybe we can use this logic in code instead of enumerating all types in JAVA_IO_WRAPPER_CLOSEABLES?)

&gt; - tests: do you agree with the expected results?
I have not tried the patch yet.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2045356</commentid>
    <comment_count>18</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-02 15:53:50 -0500</bug_when>
    <thetext>(In reply to comment #17)
&gt; [...]
&gt; However, JAVA_IO_WRAPPER_CLOSEABLES is missing quite a few types e.g.
&gt; LineNumberReader, DataInputStream, DataInputStream, FilterReader,
&gt; ObjectOutputStream, ObjectInputStream etc.

Thanks, yep that&apos;s quite a list ...

&gt; (I am wondering whether it is safe to say that if constructors for a &apos;resource
&gt; type&apos; in java.io package accept as parameter one of the type from
&gt; JAVA_IO_RESOURCE_FREE_CLOSEABLES then all those &apos;resource types&apos; belong in
&gt; JAVA_IO_WRAPPER_CLOSEABLES. Maybe we can use this logic in code instead of
&gt; enumerating all types in JAVA_IO_WRAPPER_CLOSEABLES?)

a) the parameter need not be a RESOURCE_FREE_CLOSEABLE, any Closeable
indicates a potential wrapper.

b) we cannot prove that this logic is safe. Hence I&apos;d feel more 
comfortable with applying the logic offline, checking each match
manually and storing the result in a manifest white list.
 
&gt; &gt; - tests: do you agree with the expected results?
&gt; I have not tried the patch yet.

I&apos;d hoped in a TDD spirit we could agree on the expected test results
before the patch is finalized and tried :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2046690</commentid>
    <comment_count>19</comment_count>
      <attachid>209082</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-05 10:49:58 -0500</bug_when>
    <thetext>Created attachment 209082
Tests &amp; fix v0.5

Updates:

Handle more combinations like directly nested allocation vs. storing
chained closeables in a local variable, vs. assignment-as-argument etc.
(see the tests).

More complete handling if arbitrary points in the chain are (potentially)
closed. 

No longer treat BitWrapperCloseable and BitResourceFreeCloseable as
inheritable properties. See FileReader for an example:
It&apos;s a subclass of a wrapper (InputStreamReader), but hides this fact from
clients, i.e., FileReader is solely responsible for the underlying resource.

CAVEAT: things *could* get messy when a resource is obtained by calling a 
method returning InputStreamReader which could actually return a FileReader.
Analysis would think it&apos;s a wrapper, but it actually holds an OS resource.
However, since we are shy to report against resources obtained from another
method this should be tolerable I think.

I&apos;m now down to one FIXME in the code.
I haven&apos;t yet added much to the white lists.

Note that the current patch also covers bug 360908 and bug 361073.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2046887</commentid>
    <comment_count>20</comment_count>
      <attachid>209107</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-05 17:02:07 -0500</bug_when>
    <thetext>Created attachment 209107
Tests &amp; fix v0.6

Please don&apos;t use the previous patch it caused a regression when
trying to compile expressions of this shape
   resource = new Wrapper(resource);
From this I created a recursive link structure resulting in stack overflow 
due to infinite recursion.

This pattern is now recognized. Normally, the pattern would also raise
a warning that the previous value of resource would leak. I&apos;ve updated
the implementation to remain silent in this case because the responsibility
for resource remains the same with just one more level of wrappers.

Also warnings are now correctly raised in this kind of code:
   resource1 = ...
   resource2 = new Wrapper(resource1 = resource3);
In order to detect that the old value of resource1 may leak,
we need to capture the null-info before the outer assignment
analyzes its rhs.

With this patch and with resource leak warning enabled I&apos;m down to
4 warnings in JDT/Core:

Resource leak: &apos;file&apos; is never closed	Util.java	/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util	line 977	Java Problem

--&gt; will be handled in bug 362332


Resource leak: &apos;reader&apos; is never closed	Scribe.java	/org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter	line 2325	Java Problem

--&gt; I see no obvious reason why this code should be OK :-/


Resource leak: &apos;javaReader&apos; is never closed	Scribe.java	/org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter	line 2354	Java Problem
Resource leak: &apos;jarFile&apos; is never closed	CheckDebugAttributes.java	/org.eclipse.jdt.core/antadapter/org/eclipse/jdt/core	line 60	Java Problem

--&gt; these readers are JDT/Core&apos;s own resource wrappers, similar to 
  those in java.io, but we wouldn&apos;t want to put our own classes on the
  white list :-/</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2047120</commentid>
    <comment_count>21</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-01-06 08:43:05 -0500</bug_when>
    <thetext>(In reply to comment #20)
&gt; Created attachment 209107 [details]
&gt; Tests &amp; fix v0.6

This patch causes an NPE in UnconditionalFlowInfo because it calls markAs..() methods with a possibly null argument. See bug 368027 comment 0</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2047173</commentid>
    <comment_count>22</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-06 10:12:20 -0500</bug_when>
    <thetext>(In reply to comment #21)
&gt; (In reply to comment #20)
&gt; &gt; Created attachment 209107 [details]
&gt; &gt; Tests &amp; fix v0.6
&gt; 
&gt; This patch causes an NPE in UnconditionalFlowInfo because it calls markAs..()
&gt; methods with a possibly null argument. See bug 368027 comment 0

Wow, that&apos;s bad. As I&apos;m not in my JDT/Core-dev-environment currently,
I can only give a theoretical answer from the sources:

I checked before that a regular FakedTrackingVariable has a non-null
binding (unless the ctor bails out with an exception).
However, the lately added marker instance SELF_WRAP doesn&apos;t follow
this rule.

Most likely, this signals that there are more exuction paths that need
to respect the &quot;res = new Wrapper(res);&quot; pattern.

I&apos;ll investigate later today.

@Deepak: any chance you could associate the NPE to which plugin you
were compiling? If not: is there in easy way to setup a workspace
with full SDK sources for testing? (e.g., a .psf?)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2047181</commentid>
    <comment_count>23</comment_count>
    <who name="Deepak Azad">deepakazad</who>
    <bug_when>2012-01-06 10:23:56 -0500</bug_when>
    <thetext>(In reply to comment #22)
&gt; @Deepak: any chance you could associate the NPE to which plugin you
&gt; were compiling? If not: is there in easy way to setup a workspace
&gt; with full SDK sources for testing? (e.g., a .psf?)

The NPE happened with several plugins e.g. o.e.jdt.launching. It also happens with reconcile operations. So I am not sure what exactly causes it, but I am able to reproduce it in my workspace.

I was trying to look at the number of warnings in the SDK (see comment 13). My setup is
- Start Eclipse (I started with M4) in a fresh workspace
- File &gt; Import &gt; Plug-ins and Fragments
- Select &apos;Projects with Source folders&apos;
- &apos;Add All&apos;
- Finish
Compilation takes a while but the steps are simple enough.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2047222</commentid>
    <comment_count>24</comment_count>
    <who name="Deepak Azad">deepakazad</who>
    <bug_when>2012-01-06 11:39:15 -0500</bug_when>
    <thetext>(In reply to comment #20)
&gt; --&gt; these readers are JDT/Core&apos;s own resource wrappers, similar to 
&gt;   those in java.io, but we wouldn&apos;t want to put our own classes on the
&gt;   white list :-/

In Platform Text there is at least one instance where a StringReader is wrapped in org.eclipse.jface.internal.text.html.HTML2TextReader, which is a candidate for JAVA_IO_WRAPPER_CLOSEABLES. I also came across org.eclipse.jetty.util.ByteArrayISO8859Writer, which is a candidate for JAVA_IO_RESOURCE_FREE_CLOSEABLES.

So my question is are we sure that we want to hardcode the white lists? It might be better to create preferences with appropriate defaults. No?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2047226</commentid>
    <comment_count>25</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-01-06 11:44:41 -0500</bug_when>
    <thetext>(In reply to comment #24)
&gt; So my question is are we sure that we want to hardcode the white lists? It
&gt; might be better to create preferences with appropriate defaults. No?

I prefer this. Coincidentally, I&apos;m fighting for the same in bug 365437. :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2047338</commentid>
    <comment_count>26</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-06 16:38:35 -0500</bug_when>
    <thetext>(In reply to comment #23)
&gt; I was trying to look at the number of warnings in the SDK (see comment 13). My
&gt; setup is
&gt; - Start Eclipse (I started with M4) in a fresh workspace
&gt; - File &gt; Import &gt; Plug-ins and Fragments
&gt; - Select &apos;Projects with Source folders&apos;
&gt; - &apos;Add All&apos;
&gt; - Finish
&gt; Compilation takes a while but the steps are simple enough.

Thanks, that looks simple indeed, and works pretty well (after I mounted
another disk for the required 1GB :)

However, I can&apos;t quite believe the result of the operation:
About a dozen projects has compile errors of all sorts!! Some of them
*could* be due to the fact that I don&apos;t have a Foundation-1.1 JRE.
(Any ideas where I could get one for linux??)
After removing those projects next I saw over 13000 warnings!!
Is the SDK code really that bad??
Only after disabling for the entire workspace problems regarding
generics and restricted/discouraged access, I&apos;m now down to 150 warnings
so I can start investigating the remaining resource warnings....</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2047401</commentid>
    <comment_count>27</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2012-01-07 03:54:52 -0500</bug_when>
    <thetext>(In reply to comment #25)
&gt; (In reply to comment #24)
&gt; &gt; So my question is are we sure that we want to hardcode the white lists? It
&gt; &gt; might be better to create preferences with appropriate defaults. No?
&gt; 
&gt; I prefer this. Coincidentally, I&apos;m fighting for the same in bug 365437. :)

We shouldn&apos;t pollute the preference UI for 1% corner cases. If we really need this configurable then we might consider adding it in JDT Core with reasonable defaults but don&apos;t surface it in the UI. That way power users can still change it in the prefs file directly.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2047404</commentid>
    <comment_count>28</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-07 05:03:24 -0500</bug_when>
    <thetext>(In reply to comment #27)
&gt; (In reply to comment #25)
&gt; &gt; (In reply to comment #24)
&gt; &gt; &gt; So my question is are we sure that we want to hardcode the white lists? It
&gt; &gt; &gt; might be better to create preferences with appropriate defaults. No?
&gt; &gt; 
&gt; &gt; I prefer this. Coincidentally, I&apos;m fighting for the same in bug 365437. :)
&gt; 
&gt; We shouldn&apos;t pollute the preference UI for 1% corner cases. If we really need
&gt; this configurable then we might consider adding it in JDT Core with reasonable
&gt; defaults but don&apos;t surface it in the UI. That way power users can still change
&gt; it in the prefs file directly.

I agree that normal users shouldn&apos;t see such an option in the UI.
It&apos;s indeed a corner case and it would take quite a bit of talking
to explain when exactly a Closeable type should be classified as a
wrapper or as resource-free.

Conceptually, I would even argue that this shouldn&apos;t be a configuration
option for the compiler but an annotation by which library developers
mark their classes, so everybody using the library can automatically
benefit from that classification.

To keep this bug focused I suggest to leave it as hard coded lists
for now and wait how desperately users would want to fine tune this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2047449</commentid>
    <comment_count>29</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-07 12:46:27 -0500</bug_when>
    <thetext>Oops: my comments don&apos;t match to the reported problems for these:

(In reply to comment #20)
&gt; With this patch and with resource leak warning enabled I&apos;m down to
&gt; 4 warnings in JDT/Core:
&gt; 
&gt; Resource leak: &apos;reader&apos; is never closed    Scribe.java   
&gt; /org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter    line 2325
&gt;    Java Problem
&gt; Resource leak: &apos;javaReader&apos; is never closed    Scribe.java   
&gt; /org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter    line 2354
&gt;    Java Problem
&gt; Resource leak: &apos;jarFile&apos; is never closed    CheckDebugAttributes.java   
&gt; /org.eclipse.jdt.core/antadapter/org/eclipse/jdt/core    line 60    Java
&gt; Problem

The two occurrences in Scribe are OK (custom resource wrappers).

But the occurrences in CheckDebugAttributes looks like a real bug to me!
We read a ZipFile (using entries()) and that&apos;s all we do with it!

However, I noticed the issue only while accidentally compiling against
a 1.7 JRE where ZipFile implements Closeable, which is not the case in
older JRE&apos;s.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2047460</commentid>
    <comment_count>30</comment_count>
      <attachid>209169</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-07 19:26:38 -0500</bug_when>
    <thetext>Created attachment 209169
Tests &amp; fix v0.8

Wow, precise analysis of various structures of nested resource instances
across various syntactic options turns out to be pretty complex.

The good news is: the new patch also covers bug 360908, bug 361073,
bug 362331 and bug 362332.

Specifically bug 362331 required a change in implementation strategy
(to be documented there) which had some impact also on this bug.
So it&apos;s good to address both issues in one patch rather than going back
and forth.

Ah, and yes, the strategy change also resolved the NPE from bug 368027
(the special instance SELF_WRAP, which indeed was the culprit, is no
longer needed).

When compiling the full SDK (almost full, see comment 26) with this patch
I&apos;m down at 31 resource warnings (after restoring the intended default).
Out of these 2 or 3 could still be avoided by smarter analysis.
Several warnings demonstrate an inherent limitation: the analysis cannot
cope well with variables assigned from various sources on different
branches, since we have no representation for values, only variables and
their status (wrt def / null / closed).

I&apos;ve added java.* classes to the white lists as they occurred in the 
sources, but lists are still not complete.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2047530</commentid>
    <comment_count>31</comment_count>
      <attachid>209179</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-08 16:52:38 -0500</bug_when>
    <thetext>Created attachment 209179
Tests &amp; Fix v0.9

Mostly cleanup, including copyright.

Values read from a field are now excluded from analysis.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2047536</commentid>
    <comment_count>32</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-08 17:54:59 -0500</bug_when>
    <thetext>More candidate types for inclusion in the wrapper white list
(in addition to the ones contained in the patch):

java.io:
 DataInputStream, PushbackInputStream, SequenceInputStream,
 StringBufferInputStream, DataOutputStream, PrintStream, PushbackReader.
 OutputStreamWriter

NOT: PipedInputStream, PipedOutputStream, PipedReader, PipedWriter

java.util.zip:
 GZIPInputStream, InflaterInputStream, DeflaterInputStream,
 CheckedInputStream, ZipInputStream, JarInputStream,
 GZIPOutputStream, InflaterOutputStream, DeflaterOutputStream, 
 CheckedOutputStream, ZipOutputStream, JarOutputStream

java.security:
 DigestInputStream, DigestOutputStream

java.beans:
 XMLEncoder, XMLDecoder

javax.sound.sampled:
 AudioInputStream</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2047563</commentid>
    <comment_count>33</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-01-08 23:44:14 -0500</bug_when>
    <thetext>Satyam, could you please review the latest patch from comment#31
bearing in mind comment# 32 ? TIA.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2047574</commentid>
    <comment_count>34</comment_count>
    <who name="Deepak Azad">deepakazad</who>
    <bug_when>2012-01-09 01:22:14 -0500</bug_when>
    <thetext>(In reply to comment #26)
&gt; However, I can&apos;t quite believe the result of the operation:
&gt; About a dozen projects has compile errors of all sorts!! Some of them
&gt; *could* be due to the fact that I don&apos;t have a Foundation-1.1 JRE.
&gt; (Any ideas where I could get one for linux??)
Yup, I ignored these projects.

&gt; After removing those projects next I saw over 13000 warnings!!
&gt; Is the SDK code really that bad??
&gt; Only after disabling for the entire workspace problems regarding
&gt; generics and restricted/discouraged access, I&apos;m now down to 150 warnings
&gt; so I can start investigating the remaining resource warnings....
In the problems view I use &apos;Group by &gt; Java Problem Type&apos; and then focus on &apos;Potential Programming Problems&apos; group.

(In reply to comment #27)
&gt; We shouldn&apos;t pollute the preference UI for 1% corner cases. If we really need
&gt; this configurable then we might consider adding it in JDT Core with reasonable
&gt; defaults but don&apos;t surface it in the UI. That way power users can still change
&gt; it in the prefs file directly.
I am OK with not exposing the options in the UI. One example of a power user would be our Eclipse SDK build.

(In reply to comment #28)
&gt; To keep this bug focused I suggest to leave it as hard coded lists
&gt; for now and wait how desperately users would want to fine tune this.
Sure, we can look at the number of warnings left in the SDK after this bug is fixed and then take a call.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2047608</commentid>
    <comment_count>35</comment_count>
    <who name="Deepak Azad">deepakazad</who>
    <bug_when>2012-01-09 03:47:55 -0500</bug_when>
    <thetext>(In reply to comment #30)
&gt; When compiling the full SDK (almost full, see comment 26) with this patch
&gt; I&apos;m down at 31 resource warnings (after restoring the intended default).
&gt; Out of these 2 or 3 could still be avoided by smarter analysis.
&gt; Several warnings demonstrate an inherent limitation: the analysis cannot
&gt; cope well with variables assigned from various sources on different
&gt; branches, since we have no representation for values, only variables and
&gt; their status (wrt def / null / closed).

With patch v0.9 I see 61 warnings, but that is probably because I have not deleted any projects and my workspace includes org.apache plugins as well. In any case the patch works well, and most of the warnings look valid to me.

I also no longer see the NPE from comment 21.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2048041</commentid>
    <comment_count>36</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-09 16:46:37 -0500</bug_when>
    <thetext>Some explanations as background for the review:

At the input of the resource analysis we use the bitset
ReferenceBinding.typeBits which was introduced in bug 349326 with the 2
bits BitAutoCloseable and BitCloseable (from TypeIds). To these, this bug
adds BitWrapperCloseable and BitResourceFreeCloseable to mark members of
our two new white lists. Note that the former 2 bits are inheritable,
whereas the latter two are not (see comment 19).

The main part of the analysis uses the concept of a FakedTrackingVariable,
also introduced in bug 349326: when an AutoCloseable value is assigned
to a local variable we add this tracking variable for which we record
nullness information with these interpretations: NULL: not-closed,
NON_NULL: closed; plus the corresponding POTENTIALLY_... values.

Originally, tracking variables were associated only to local variables.
With this patch we also have the option to temporarily store a tracking
variable for an AllocationExpression in order to detect patterns like:
 new Wrapper(new InnerResources()); // not relevant if inner is resource-free
and
 new Resource().read();  // not closed
 new Resource().close(); // OK

For any chained resources (new Wrapper(new Inner())) we now link the
tracking variables using FTV.innerTracker so that we can detect whether
an underlying resource (the innermost) is closed directly or indirectly 
via its wrapper chain.

An especially tricky situation is this:
 res = new Wrapper(res);
As before we need to analyze the kind of wrapper chain against our 
white lists, but also we must distinguish this from
 res1 = new Wrapper(res2);
In the latter case the assignment forgets the resource previously stored in
res1, and if that was not closed we have a leak. By contrast the former 
assignment creates a matryoshka where no resource is forgotten.
This is a challenge for the implementation because during AST traversal
we have no single location that sees both applications of &apos;res&apos;.

To solve this, method FTV.preConnectTrackerAcrossAssignment(..) pushes the
LHS of the assignment into any AllocationExpression on the RHS, to be
picked up when analyzing the allocation.

Another complication is caused by statements like
  res = new Wrapper( res2 = new Inner())
This means we have to unwrap any assignments (and similarly: casts) in the
position of an argument to a resource-type allocation expression.

Associating a tracking variable to an allocation expression requires 
additional care, because now we can have tracking variables with no local
variable binding associated (in field originalBinding), which previously
would never occur.

Finally I&apos;m introducing a distinction of expression kinds from which we
obtain a resource:
 - when obtaining a resource from a message send, we are uncertain which
   side is responsible for closing -&gt; mark as potentially closed.
   similarly for an array reference.
 - when obtaining a resource from a field read, assume that the resource
   has a longer life cycle than the current method execution -&gt;
   pretend it is properly closed.

Most of this logic is implemented in class FakedTrackingVariable. A few
changes result from moving methods from BlockScope into FTV.

The interesting new points of interaction are in 
 - Assignment: trigger analysis: check against white list and for wrappers
   drill into the first argument
 - LocalDeclaration &amp; Assignment: trigger the left-to-right push mentioned
   above - then do normal analysis of RHS - then collect information
   right-to-left.


For more detailed description please see the comments in the code - 
or ask me :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2048052</commentid>
    <comment_count>37</comment_count>
      <attachid>209232</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-09 17:15:03 -0500</bug_when>
    <thetext>Created attachment 209232
Tests &amp; fix v0.9.5

Same patch with extended white lists from comment 32
(StringBufferInputStream was wrongly listed as a wrapper, is actually
resource-free).

When compiling the SDK with this patch I only see 25 resource warnings.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2048067</commentid>
    <comment_count>38</comment_count>
      <attachid>209234</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-09 18:03:57 -0500</bug_when>
    <thetext>Created attachment 209234
Tests &amp; fix v0.9.6

Previous patch introduced a copy&amp;paste error, 
detected by NegativeCodeSnippetTest.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2048128</commentid>
    <comment_count>39</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-01-10 01:33:00 -0500</bug_when>
    <thetext>(In reply to comment #36)
Thanks for the detailed explanation. I have started the review and will give you any comments I have periodically. To start with, what should happen for the subtypes of thewhite list types?
For eg:
#####
import java.io.StringReader;
import java.io.IOException;
public class X {
    void foo() throws IOException {
        StringReader string  = new SReader(&quot;content&quot;);
        System.out.println(string.read());
    }
    public static void main(String[] args) throws IOException {
        new X().foo();
    }
}
class SReader extends StringReader {
    public SReader(String arg0) {
        super(arg0);        
    }    
}
#####
SReader extends StringReader in the white list without overriding close. I
believe resource leaks should not be reported even for this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2048218</commentid>
    <comment_count>40</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-10 06:06:25 -0500</bug_when>
    <thetext>(In reply to comment #39)
&gt; (In reply to comment #36)
&gt; Thanks for the detailed explanation. I have started the review and will give
&gt; you any comments I have periodically. To start with, what should happen for the
&gt; subtypes of thewhite list types?
&gt; For eg:
&gt; #####
&gt; import java.io.StringReader;
&gt; import java.io.IOException;
&gt; public class X {
&gt;     void foo() throws IOException {
&gt;         StringReader string  = new SReader(&quot;content&quot;);
&gt;         System.out.println(string.read());
&gt;     }
&gt;     public static void main(String[] args) throws IOException {
&gt;         new X().foo();
&gt;     }
&gt; }
&gt; class SReader extends StringReader {
&gt;     public SReader(String arg0) {
&gt;         super(arg0);        
&gt;     }    
&gt; }
&gt; #####
&gt; SReader extends StringReader in the white list without overriding close. I
&gt; believe resource leaks should not be reported even for this.

My implementation assumes nothing about such subtypes. This encodes the
policy that we know for sure only for the exact types we&apos;ve checked for 
inclusion in the white list.

Your heuristic to inherit from a resource-free Closeable and not override
close is a good one, but I decided to not implement *any* heuristic of
this kind.

I&apos;m not sure how relevant your case is. If relevant we could already file
a further RFE. Otherwise we might wait if it is more than an extreme
corner case in practice?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2048222</commentid>
    <comment_count>41</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-01-10 06:22:52 -0500</bug_when>
    <thetext>(In reply to comment #40)
We could track the problem in a separate bug, but as there is no user defined white list, these types of filters could help reducing some more false positives.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2048225</commentid>
    <comment_count>42</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-01-10 06:27:41 -0500</bug_when>
    <thetext>(In reply to comment #41)
&gt; I&apos;m not sure how relevant your case is. If relevant we could already file
&gt; a further RFE. Otherwise we might wait if it is more than an extreme
&gt; corner case in practice?
I could see subtypes of ByteArrayInputStream in my workspace.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2048237</commentid>
    <comment_count>43</comment_count>
    <who name="Deepak Azad">deepakazad</who>
    <bug_when>2012-01-10 07:01:05 -0500</bug_when>
    <thetext>(In reply to comment #40)
&gt; Your heuristic to inherit from a resource-free Closeable and not override
&gt; close is a good one, but I decided to not implement *any* heuristic of
&gt; this kind.
I vote for waiting on this.
- I have not seen too many practical cases for this.
- If we decide to make the white lists configurable by the user, then the small number of such scenarios can be taken care of there.

Stephan, you may also want to start a topic branch for this (and similar bugs) which involve a number of review cycles. Note that the branch name convention to be followed is &quot;&lt;committerid&gt;/branchname&quot;, see bug 362363.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2048254</commentid>
    <comment_count>44</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-01-10 08:07:11 -0500</bug_when>
    <thetext>I haven&apos;t got hold of the changes as yet. I am looking at the old code also to understand. So, here are some minor comments which includes old code too. Hope that&apos;s ok. 
 1. SingleNameReference.java - no change but there is a copyright year change. 
 2. I believe ReferenceBinding#applyCloseableWhiteLists should be optimized for OTHER_WRAPPER_CLOSEABLES. The way I see this is that all the types which are in the list are returned quickly than the ones which are not! All the types will be searched for atleast in the OTHER_WRAPPER_CLOSEABLES. I believe this could be improved. 
 - Should the following case report a resource warning 
    void foo( InputStream input) throws IOException {
	FileInputStream input1  = (FileInputStream)input;
        System.out.println(input1.read());
        input.close();
    }
 3. Method names could be better:
    - FakedTrackingVariable#isAutoCloseable() now looks for closeable too.
    - FakedTrackingVariable#analyseCloseableAllocationArgument(...) should probably be find...(...)
 4. Formatting: I found two formatting styles a different from much of the JDT/Core code. I should tell that there are places which don&apos;t follow this style, but ... :) 
    - if statements with only one statements are either written as 
           if(condition) statement or 
           if(condition) {
              statement
           }
           and not 
           if (condition)
              statement
       They are many places I see in this code which uses the latter style. 
      -Methods in a class are generally sorted. I don&apos;t see this in FakedTrackingVariable. If you change the formatting now, diff will again become difficult and hence I would recommend not changing it now, but please keep in mind for the new types you create.
  5.Whenever new tracking variable is added through BlockScope#registerTrackingVariable, the MethodScope#analysisIndex is not getting added. As of now, there is no impact as this happens only during analysis and analysisIndex is updated only during resolving, but isn&apos;t it a good  idea to update that too?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2048303</commentid>
    <comment_count>45</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-01-10 09:14:22 -0500</bug_when>
    <thetext>&gt;  2. I believe ReferenceBinding#applyCloseableWhiteLists should be optimized for
&gt; OTHER_WRAPPER_CLOSEABLES. The way I see this is that all the types which are in
&gt; the list are returned quickly than the ones which are not! All the types will
&gt; be searched for atleast in the OTHER_WRAPPER_CLOSEABLES. I believe this could
&gt; be improved.
   Please ignore this, I see that this is getting called only when it extends closeable or Autocloseable and hence this is OK.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2048309</commentid>
    <comment_count>46</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-10 09:22:36 -0500</bug_when>
    <thetext>(comment crossed with your latest, submitting as-is anyway)

(In reply to comment #44)
&gt; I haven&apos;t got hold of the changes as yet. I am looking at the old code also to
&gt; understand. So, here are some minor comments which includes old code too. Hope
&gt; that&apos;s ok. 

Sure, just ask.


&gt;  1. SingleNameReference.java - no change but there is a copyright year change. 

oops, seems like I undid some intermediate changes up-to a clean state and
then the update-copyright-tool re-added its change on save :-/
I&apos;ll revert that.

&gt;  2. I believe ReferenceBinding#applyCloseableWhiteLists should be optimized for
&gt; OTHER_WRAPPER_CLOSEABLES. The way I see this is that all the types which are in
&gt; the list are returned quickly than the ones which are not! All the types will
&gt; be searched for atleast in the OTHER_WRAPPER_CLOSEABLES. I believe this could
&gt; be improved.

You&apos;re right. How much effort we put into optimizing this algorithm depends
on how many types we have in OTHER_WRAPPER_CLOSEABLES. Initially I had ONE,
I&apos;d say for the current list of 5 it is still acceptable (note that only
closeable types will reach here). Should the list grow we should certainly
do some smarter lookup.

&gt;  - Should the following case report a resource warning 
&gt;     void foo( InputStream input) throws IOException {
&gt;     FileInputStream input1  = (FileInputStream)input;
&gt;         System.out.println(input1.read());
&gt;         input.close();
&gt;     }

Good point. Yes, we want to identify input and input1 (one branch in my
implementation still misses to unwrap the cast expression). This will be
easily fixed. Secondly, there&apos;s some interaction with input being a 
parameter. I had hoped we could avoid tracking variables for parameters
(assuming the current method is not responsible for closing), but your
case shows we need a tracking variable but start with a status 
indicating that no warnings should be raised. It seems REPORTED would
be a suitable mark here.

&gt;  3. Method names could be better:
&gt;     - FakedTrackingVariable#isAutoCloseable() now looks for closeable too.

I kept confusing myself by looking how Closeable extends AutoCloseable, but 
only in 1.7 of course, so right, I guess isAnyCloseable() should be better.

&gt;     - FakedTrackingVariable#analyseCloseableAllocationArgument(...) should
&gt; probably be find...(...)

If we accept that the &quot;AllocationArgument&quot; part can remain implicit by way
of the method arguments 3 &amp; 4, we can say &quot;findCloseTracker&quot;. And then I&apos;ll
make that method private so we&apos;re sure its only used in a context where we
know what a closeTracker is :)

&gt;  4. Formatting: I found two formatting styles a different from much of the
&gt; JDT/Core code. I should tell that there are places which don&apos;t follow this
&gt; style, but ... :) 
&gt;     - if statements with only one statements are either written as 
&gt;            if(condition) statement or 
&gt;            if(condition) {
&gt;               statement
&gt;            }
&gt;            and not 
&gt;            if (condition)
&gt;               statement
&gt;        They are many places I see in this code which uses the latter style.

I thought I had seen sufficiently many occurrences of the latter style to
conclude that this is accepted JDT/Core style :)
Just looking at FakedTrackingVariable, strictly adhering to the second style
will add almost 30 lines of insignificant code, which IMHO don&apos;t add for the
readability but just make me scroll more.
Now, if the rest of the team feels uneasy about the two-lines style,
I can certainly avoid it (after having expressed my dissent :)) 
Should I?
Will we reformat existing occurrences of this style when we touch such code?

&gt;       -Methods in a class are generally sorted. I don&apos;t see this in
&gt; FakedTrackingVariable. If you change the formatting now, diff will again become
&gt; difficult and hence I would recommend not changing it now, but please keep in
&gt; mind for the new types you create.

I&apos;m aware of this and yes I know I&apos;m a bit lazy here, sorry. OTOH, while
coding it is much more important for me to keep related methods next to each
other. Sometimes I try to reconcile the alphabetic and the semantical order
by choosing names with common prefixes. Actually the name
analyseCloseableAllocationArgument is an example for that. So how do you
guys cope with this conflict?

&gt;   5.Whenever new tracking variable is added through
&gt; BlockScope#registerTrackingVariable, the MethodScope#analysisIndex is not
&gt; getting added. As of now, there is no impact as this happens only during
&gt; analysis and analysisIndex is updated only during resolving, but isn&apos;t it a
&gt; good  idea to update that too?

OK, I can say:
  	outerMethodScope.analysisIndex += (outerMethodScope.trackVarCount++);
	return outerMethodScope.analysisIndex;
or even better:
	return outerMethodScope.analysisIndex++;
That means, we can actually avoid the field trackVarCount, nice!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2048473</commentid>
    <comment_count>47</comment_count>
      <attachid>209276</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-10 13:11:03 -0500</bug_when>
    <thetext>Created attachment 209276
incremental changes

This patch captures the changes I made in reaction to comment 44.

&gt; &gt;  1. SingleNameReference.java - no change but there is a copyright year change. 

After this got me into git-trouble, I think I&apos;ve resolved this now in my
local branch.
 
&gt; &gt;  - Should the following case report a resource warning 
&gt; &gt;     void foo( InputStream input) throws IOException {
&gt; &gt;     FileInputStream input1  = (FileInputStream)input;
&gt; &gt;         System.out.println(input1.read());
&gt; &gt;         input.close();
&gt; &gt;     }

test (plus varaints thereof) added as test063d()

&gt; Good point. Yes, we want to identify input and input1 (one branch in my
&gt; implementation still misses to unwrap the cast expression). This will be
&gt; easily fixed.

Done, see FTV#getCloseTrackingVariable()

&gt; Secondly, there&apos;s some interaction with input being a 
&gt; parameter. I had hoped we could avoid tracking variables for parameters
&gt; (assuming the current method is not responsible for closing), but your
&gt; case shows we need a tracking variable but start with a status 
&gt; indicating that no warnings should be raised. It seems REPORTED would
&gt; be a suitable mark here.

To avoid confusion I introduced a new bit OBTAINED_FROM_OUTSIDE and
consistently use this for values obtained as method argument or from
a field read. Otherwise I resolved the issue as described.
 
&gt; &gt;  3. Method names could be better:
&gt; &gt;     - FakedTrackingVariable#isAutoCloseable() now looks for closeable too.
&gt; 
&gt; I kept confusing myself by looking how Closeable extends AutoCloseable, but 
&gt; only in 1.7 of course, so right, I guess isAnyCloseable() should be better.

Done.

&gt; &gt;     - FakedTrackingVariable#analyseCloseableAllocationArgument(...) should
&gt; &gt; probably be find...(...)
&gt; 
&gt; If we accept that the &quot;AllocationArgument&quot; part can remain implicit by way
&gt; of the method arguments 3 &amp; 4, we can say &quot;findCloseTracker&quot;. And then I&apos;ll
&gt; make that method private so we&apos;re sure its only used in a context where we
&gt; know what a closeTracker is :)

Done.
 
&gt; &gt;   5.Whenever new tracking variable is added through
&gt; &gt; BlockScope#registerTrackingVariable, the MethodScope#analysisIndex is not
&gt; &gt; getting added. As of now, there is no impact as this happens only during
&gt; &gt; analysis and analysisIndex is updated only during resolving, but isn&apos;t it a
&gt; &gt; good  idea to update that too?
&gt; 
&gt; OK, I can say:
&gt;       outerMethodScope.analysisIndex += (outerMethodScope.trackVarCount++);
&gt;     return outerMethodScope.analysisIndex;
&gt; or even better:
&gt;     return outerMethodScope.analysisIndex++;
&gt; That means, we can actually avoid the field trackVarCount, nice!

Done (as per the last and cleanest option).

I also added a test resembling an example found in the p2 sources: test61m.
By means of the one relevant change in handleResourceAssignment()
we can also improve here (was: &quot;is never closed&quot; and has been softened to
&quot;may not be closed&quot;). For the remaining warning in this test: Detecting that 
a method call actually creates a wrapper might be nice but is beyond the 
scope of this bug, I&apos;d say.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2048648</commentid>
    <comment_count>48</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-01-10 19:06:50 -0500</bug_when>
    <thetext>(In reply to comment #46)
&gt; &gt;  4. Formatting: I found two formatting styles a different from much of the

&gt; Now, if the rest of the team feels uneasy about the two-lines style,
&gt; I can certainly avoid it (after having expressed my dissent :)) 
&gt; Should I?

In future, yes please.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2048738</commentid>
    <comment_count>49</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-01-11 03:29:24 -0500</bug_when>
    <thetext>Here are some more comments, again all minor. I am not done yet! 
- Tests should probably be at a different place than in TryWithResourcesTest as these run only on Java7.
- isAutoCloseable() is redundant in preConnectTrackerAcrossAssignment: There is a place from Assignment this gets called even if null, so may be a non-null check could be good enough! 
- Only the first argument of an allocation expression is checked for the wrapped logic. Is this because we have seen these pattern ony in the first arguments?
- If the type is in the whitelist but if the argument is not closeable, the closeable is not being tracked. Is there a reason? I didn&apos;t look at the complete whitelist completley, but found one case with PrintWriter
        void foo() throws FileNotFoundException {
		PrintWriter input1  = new PrintWriter(&quot;abc.txt&quot;);
		input1.write(1);
	}
I am fine to err in this side, but just wanted to bring this to your attention  
- this.trackingVariables.size() could be a variable  in BlockScope#checkUnclosedCloseables(...)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2048824</commentid>
    <comment_count>50</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-01-11 06:11:19 -0500</bug_when>
    <thetext>Some more.. 
- Return statement is not being tracked for wrapped. An incorrect error is getting reported. 
  InputStream foo() throws IOException {
        File file = new File(&quot;somefil&quot;);
        FileInputStream fileStream  = new FileInputStream(file);
        BufferedInputStream bis = new BufferedInputStream(fileStream);   
        return fileStream;
    }
- Isn&apos;t the check for BitWrapperCloseable in markPassedToOutside better done at the call site? It doesn&apos;t make a difference, IMHO that is better. 
- WRAPPED flag not being part of flowinfo is not able to take into account of scopes.Take the example of this. bis in the given example is not really closed, but not reported.
   void foo() throws IOException {
        File file = new File(&quot;somefil&quot;);
        FileInputStream fileStream  = new FileInputStream(file);
        BufferedInputStream bis = new BufferedInputStream(fileStream);   
        if (bar()) {
        	BufferedInputStream doubleWrap = new BufferedInputStream(bis);
        	doubleWrap.close();
        }
    }
    boolean bar() {
	return false;
    }</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2049253</commentid>
    <comment_count>51</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-11 20:54:25 -0500</bug_when>
    <thetext>(In reply to comment #49)
&gt; Here are some more comments, again all minor. I am not done yet! 
&gt; - Tests should probably be at a different place than in TryWithResourcesTest as
&gt; these run only on Java7.

Yes (except that a few would then need to explicitly check compliance,
because they expect messages like
  &quot;Resource \&apos;input\&apos; should be managed by try-with-resource\n&quot;
which is only flagged at 1.7).

Any suggestion for a better place? Maybe FlowAnalysisTests?


&gt; - isAutoCloseable() is redundant in preConnectTrackerAcrossAssignment: There is
&gt; a place from Assignment this gets called even if null, so may be a non-null
&gt; check could be good enough! 

You mean &quot;rhs.resolvedType != TypeBinding.NULL&quot;, right?
I can do that, which means I should document the precondition of this
method, because otherwise this check will look pretty strange.

&gt; - Only the first argument of an allocation expression is checked for the
&gt; wrapped logic. Is this because we have seen these pattern ony in the first
&gt; arguments?

Exactly.

&gt; - If the type is in the whitelist but if the argument is not closeable, the
&gt; closeable is not being tracked. Is there a reason? I didn&apos;t look at the
&gt; complete whitelist completley, but found one case with PrintWriter
&gt;         void foo() throws FileNotFoundException {
&gt;         PrintWriter input1  = new PrintWriter(&quot;abc.txt&quot;);
&gt;         input1.write(1);
&gt;     }
&gt; I am fine to err in this side, but just wanted to bring this to your attention  

Good catch. When I wrote that code I mark it with:
  // remove unnecessary attempts (wrapper has no relevant inner)
but your example proves that I should rather treat it as a normal
resource, not as a wrapper then.

&gt; - this.trackingVariables.size() could be a variable  in
&gt; BlockScope#checkUnclosedCloseables(...)

sure.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2049258</commentid>
    <comment_count>52</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-11 21:23:53 -0500</bug_when>
    <thetext>(In reply to comment #50)
&gt; Some more.. 
&gt; - Return statement is not being tracked for wrapped. An incorrect error is
&gt; getting reported. 
&gt;   InputStream foo() throws IOException {
&gt;         File file = new File(&quot;somefil&quot;);
&gt;         FileInputStream fileStream  = new FileInputStream(file);
&gt;         BufferedInputStream bis = new BufferedInputStream(fileStream);   
&gt;         return fileStream;
&gt;     }

Interesting pattern :)
Let&apos;s see what I can do.. no promise yet.

&gt; - Isn&apos;t the check for BitWrapperCloseable in markPassedToOutside better done at
&gt; the call site? It doesn&apos;t make a difference, IMHO that is better. 

Are you saying this, because only one call site actually passes an
allocatedType? I was trying to keep the call sites clean, but since it
is only one I can push this out again.

&gt; - WRAPPED flag not being part of flowinfo is not able to take into account of
&gt; scopes.Take the example of this. bis in the given example is not really closed,
&gt; but not reported.
&gt;    void foo() throws IOException {
&gt;         File file = new File(&quot;somefil&quot;);
&gt;         FileInputStream fileStream  = new FileInputStream(file);
&gt;         BufferedInputStream bis = new BufferedInputStream(fileStream);   
&gt;         if (bar()) {
&gt;             BufferedInputStream doubleWrap = new BufferedInputStream(bis);
&gt;             doubleWrap.close();
&gt;         }
&gt;     }
&gt;     boolean bar() {
&gt;     return false;
&gt;     }

Yes, some parts of the analysis are not aware of branching.
I mentioned in previous comments that complex patterns of assigning
resources to locals on only some branches etc. can not be captured
by my approach. I&apos;ll have to think if I can push the limits for this
example. I don&apos;t think extending FlowInfo for such corner cases is a
good idea. OTOH, a false negative is a pity. I should probably let
markClose() propagate info to inner resources, and then avoid checking
WRAPPED, but that alone doesn&apos;t do the trick. Let&apos;s see ...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2049286</commentid>
    <comment_count>53</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-01-12 00:46:45 -0500</bug_when>
    <thetext>Here are some more comments:  Stephan, we can open separate bugs if necessary. 
- In twr, the resource is being removed from tracking. Shouldn&apos;t the right thing to do is mark as closed. Right now, it doesn&apos;t seem to be a problem, but if you fix the &apos;PrinteWriter&apos; example, this may become important. 
- may be out of scope of this bug but I get a &apos;potential resource warning&apos; for this. Is this expected?
	void foo() throws IOException {
		Object input1  =  bar();
        }
	private FileInputStream bar() {
		return null;
	}
- AllocationExpression&apos;s closeTracker is not getting null&apos;d.  Is there a way, these can be null&apos;d. 
- Getting a wrong error for 
    class Z {
	FileInputStream input1;
	public void foo() throws IOException {
		FileInputStream input = input1;
		input = new FileInputStream(&quot;adfafd&quot;);
		input.close();		
	}
    }</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2049289</commentid>
    <comment_count>54</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-01-12 00:53:04 -0500</bug_when>
    <thetext>(In reply to comment #51)
&gt; Any suggestion for a better place? Maybe FlowAnalysisTests?
I think a separate file is better.

&gt; You mean &quot;rhs.resolvedType != TypeBinding.NULL&quot;, right?
&gt; I can do that, which means I should document the precondition of this
&gt; method, because otherwise this check will look pretty strange.
Yes, you are right.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2049290</commentid>
    <comment_count>55</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-01-12 00:59:46 -0500</bug_when>
    <thetext>(In reply to comment #52)
&gt; Are you saying this, because only one call site actually passes an
&gt; allocatedType? I was trying to keep the call sites clean, but since it
&gt; is only one I can push this out again.
Yes, that is the main reason, but I thought that made more sense. I understand the call sites could be clean, but some how I felt doing the check out could be cleaner. The decision is yours :).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2049485</commentid>
    <comment_count>56</comment_count>
      <attachid>209373</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-12 08:40:12 -0500</bug_when>
    <thetext>Created attachment 209373
incremental changes 2

This incremental patch includes the following changes:

(In reply to comment #49)
&gt; - Tests should probably be at a different place than in TryWithResourcesTest as
&gt; these run only on Java7.

I created a new class ResourceLeakTests into which I moved all of
test056* and test06[1-3]*. For some of the tests this required specifying
different expectations (specif. the t-w-r warning), and some only work in
1.5+ etc. While doing the move I also performed a white space cleanup.
While this creates some change noise I hope this is acceptable for tests.
(I&apos;ll attach just the new test file in a minute for your convenience).

&gt; - isAutoCloseable() is redundant in preConnectTrackerAcrossAssignment: There is
&gt; a place from Assignment this gets called even if null, so may be a non-null
&gt; check could be good enough! 

Done.

&gt; - If the type is in the whitelist but if the argument is not closeable, the
&gt; closeable is not being tracked. Is there a reason? I didn&apos;t look at the
&gt; complete whitelist completley, but found one case with PrintWriter
&gt;         void foo() throws FileNotFoundException {
&gt;         PrintWriter input1  = new PrintWriter(&quot;abc.txt&quot;);
&gt;         input1.write(1);
&gt;     }
&gt; I am fine to err in this side, but just wanted to bring this to your attention  

Added (failing) test061n() -&gt; need more work.

&gt; - this.trackingVariables.size() could be a variable  in
&gt; BlockScope#checkUnclosedCloseables(...)

done.

(In reply to comment #50)
&gt; - Isn&apos;t the check for BitWrapperCloseable in markPassedToOutside better done at
&gt; the call site? It doesn&apos;t make a difference, IMHO that is better. 

done</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2049488</commentid>
    <comment_count>57</comment_count>
      <attachid>209374</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-12 08:43:12 -0500</bug_when>
    <thetext>Created attachment 209374
ResourceLeakTests.java

new test file.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2049510</commentid>
    <comment_count>58</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-12 09:08:20 -0500</bug_when>
    <thetext>(In reply to comment #53)
&gt; Here are some more comments:  Stephan, we can open separate bugs if necessary. 
&gt; - In twr, the resource is being removed from tracking. Shouldn&apos;t the right
&gt; thing to do is mark as closed. Right now, it doesn&apos;t seem to be a problem, but
&gt; if you fix the &apos;PrinteWriter&apos; example, this may become important. 

to be determined once I work on the remaining issues.

&gt; - may be out of scope of this bug but I get a &apos;potential resource warning&apos; for
&gt; this. Is this expected?
&gt;     void foo() throws IOException {
&gt;         Object input1  =  bar();
&gt;         }
&gt;     private FileInputStream bar() {
&gt;         return null;
&gt;     }

This works exactly as intended. Just rename &quot;bar&quot; to &quot;createInput&quot; and
you would most likely complain if the compiler doesn&apos;t complain :)

&gt; - AllocationExpression&apos;s closeTracker is not getting null&apos;d.  Is there a way,
&gt; these can be null&apos;d.

Not an easy one. In case the alloc is embedded in an assignment it gets
collected, but &quot;in the event it does NOT get collected by an assignment&quot;
is not a good trigger. I could remove in on the next pass (generateCode),
but that wouldn&apos;t help much I&apos;d say. OTOH, it doesn&apos;t seem to hurt, right?

&gt; - Getting a wrong error for 
&gt;     class Z {
&gt;     FileInputStream input1;
&gt;     public void foo() throws IOException {
&gt;         FileInputStream input = input1;
&gt;         input = new FileInputStream(&quot;adfafd&quot;);
&gt;         input.close();        
&gt;     }
&gt;     }

I get 
   Resource leak: \&apos;input\&apos; is not closed at this location,
should be only potential since obtained from a field.
I&apos;ll take a look - should be easy.

For now I will focus on those issues where a warning is missing:
comment 49 and comment 50 second example. We shouldn&apos;t filter too much!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2049553</commentid>
    <comment_count>59</comment_count>
      <attachid>209384</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-12 10:03:57 -0500</bug_when>
    <thetext>Created attachment 209384
incremental changes 3

(In reply to comment #58)
&gt; (In reply to comment #53)
&gt; &gt; - Getting a wrong error for 
&gt; &gt;     class Z {
&gt; &gt;     FileInputStream input1;
&gt; &gt;     public void foo() throws IOException {
&gt; &gt;         FileInputStream input = input1;
&gt; &gt;         input = new FileInputStream(&quot;adfafd&quot;);
&gt; &gt;         input.close();        
&gt; &gt;     }
&gt; &gt;     }
&gt; 
&gt; I get 
&gt;    Resource leak: \&apos;input\&apos; is not closed at this location,
&gt; should be only potential since obtained from a field.

Correction: should indeed be no warning.

&gt; I&apos;ll take a look - should be easy.

Indeed, fix is simple (attached).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2049762</commentid>
    <comment_count>60</comment_count>
      <attachid>209409</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-12 16:00:44 -0500</bug_when>
    <thetext>Created attachment 209409
incremental change 4

Hm, maybe indeed we should have taken some of this to a new bug,
and maybe I should have pushed this to a public feature branch.
Should I still do that?

This delivery fixes comment 50 part 2 by completely getting rid of the
flag WRAPPER. This flag implemented a heuristic to avoid irrelevant
warnings against wrapper resources, but this part, too, is now computed
with more precision. This required some more propagating information up
and down the links:

FTV#markClose() pushes info into the chain of innerTrackers.

reportError(..) has more fine grained control to avoid redundant reporting
without letting a more severe issue be masked by a minor one.

Finally, during BlockScope#checkUnclosedCloseables() I need to ensure that
track variables are iterated in correct order: outer resources before their
inners, so we can mark inners as reported when we report against an outer.
This requires a back link FTV#outerTracker (inverse of FTV#innerTracker)
and changed the loop structure from a for-loop to picking elements from a set
until it&apos;s empty (sorry this spoils the loop optimization we recently did).

After fixing the new test061o(), the existing test061f() was broken and it
showed that we had been lucky on that one. Now I was faced with fact that
try-finally statements are actually analyzed finally-first!
  InputStream stream = null;
  BufferedReader reader = null;
  try {
      stream = url.openStream();
      reader = new BufferedReader(new InputStreamReader(stream));
  } finally {
      reader.close();
  }
At the close() call we want to propagate the close-info into the inner
resources incl. &apos;stream&apos;. HOWEVER, when looking at the close call we don&apos;t
even know about the wrapper-chain because the try block hasn&apos;t been 
analyzed yet! So &apos;stream&apos; was again flagged as leaking.
  
The full solution would be to chain all resource information through 
FlowContext and subclasses and postpone the whole issue to Eclipse 3.9+.
That would be investing to much effort to a minor issue.

To shortcut this I let FTV#analyseCloseableAllocation(..) inject info from
the finally block back into newly created wrappers.
Now, if the try block re-configures the resources (re-assignments,
creating more wrappers) this approach will produce imprecise results.
But I don&apos;t really want to go any further.

Other changes in the patch became necessary in order to fix intermediate
regressions, but those fixes are essentially straight-forward.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2050053</commentid>
    <comment_count>61</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-01-13 07:32:10 -0500</bug_when>
    <thetext>I haven&apos;t finished the last patch yet - I will try to finish this latter today. Please feel free to take out any issue as another bug. 
For now, I have only one comment for the code:
 - AllocationExpression#analyseCode: Pulling the hasTypeBit() check outside the for loop could be nice.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2050057</commentid>
    <comment_count>62</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-01-13 07:44:54 -0500</bug_when>
    <thetext>Here are couple of failures I found now
1.  Getting an error for this
     void foo() throws IOException {
	File file = new File(&quot;somefil&quot;);
        FileInputStream fileStream  = new FileInputStream(file);
	BufferedInputStream bis = new BufferedInputStream(fileStream);
	bis = null;
	fileStream.close();
     }
2. Minor error: Error is being reported at the first line, it would be good to have it in the third line. 
        void foo( FileInputStream input) throws IOException {
		FileInputStream input1 = new FileInputStream(&quot;abc&quot;);
		input1.close();
		input1 = new FileInputStream(&quot;abc&quot;);
	}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2050110</commentid>
    <comment_count>63</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-13 09:14:48 -0500</bug_when>
    <thetext>(In reply to comment #61)
&gt; Please feel free to take out any issue as another bug. 

The version I have in my workspace looks pretty promising, so I think
all examples listed in this bug can be covered by one big patch.
I&apos;ll post another update shortly.

I&apos;ve filed bug 368546 to track remaining false positives.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2050137</commentid>
    <comment_count>64</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-13 10:05:57 -0500</bug_when>
    <thetext>(In reply to comment #62)
&gt; Here are couple of failures I found now
&gt; [..]
&gt; 2. Minor error: Error is being reported at the first line, it would be good to
&gt; have it in the third line. 
&gt;         void foo( FileInputStream input) throws IOException {
&gt;         FileInputStream input1 = new FileInputStream(&quot;abc&quot;);
&gt;         input1.close();
&gt;         input1 = new FileInputStream(&quot;abc&quot;);
&gt;     }

I agree, it would be good, but it&apos;s not possible with the current approach:
we report against a re-assignment only if the old value was not closed,
however, the old input1 is closed properly.
When we conclude that a resource is *never* closed we always report it
against the first location where a resource was assigned to a given variable.
We simply don&apos;t have the information which assignment brings the leaking
instance (could be many potential locations in a branching structure!).
Sorry -&gt; wontfix.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2050167</commentid>
    <comment_count>65</comment_count>
      <attachid>209457</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-13 10:40:54 -0500</bug_when>
    <thetext>Created attachment 209457
incremental changes 5

This patch completes the changes started in comment 60.
That strategy change broke a few things and analysis has become more
aggressive, so some issues surfaced that previously were hidden.

Changes included in this update:

Passing more information up-and-down like
- FTV#globalClosingState from finally-block into try-block
- FTV#markPassedToOutside also loops into inners

Carefully construct the order in which BlockScope#checkUnclosedCloseables
processes tracking vars:
- process wrappers before their inners
- respect several situations of wrappers and inners defined in different scopes
See FTV#pickVarForReporting for details.
The effect is that now we can safely suppress any reports against inners
if their wrappers have been closed, without needing the bogus bit WRAPPER
that was removed in incremental change 4.

Better evaluate the bits REPORTED_POTENTIAL_LEAK, REPORTED_DEFINITIVE_LEAK
- at the same level (each invocation of BlockScope#checkUnclosedCloseables)
  avoid duplicate reporting of wrappers and inners
- accumulate these flags from invocations to FTV#reportError
- but don&apos;t let errors against an error location hide errors against
  other locations
- reset this information at the end for a fresh start at the next level

Includes a few more tests modelled from real world bits in the Eclipse SDK.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2050183</commentid>
    <comment_count>66</comment_count>
      <attachid>209460</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-13 11:04:19 -0500</bug_when>
    <thetext>Created attachment 209460
incremental changes 6

(In reply to comment #62)
&gt; Here are couple of failures I found now
&gt; 1.  Getting an error for this
&gt;      void foo() throws IOException {
&gt;     File file = new File(&quot;somefil&quot;);
&gt;         FileInputStream fileStream  = new FileInputStream(file);
&gt;     BufferedInputStream bis = new BufferedInputStream(fileStream);
&gt;     bis = null;
&gt;     fileStream.close();
&gt;      }

Just when I was going to say &quot;no&quot; to this request I found a fairly simple
way to disassemble a wrapper chain when the wrapper is being dropped.

Two caveats: 
 - this slightly changed the reporting in test063a, but I think that&apos;s OK
 - the trick only works in a flat structure - if the assignment happens in a
   different scope than the definition of the resource, then I can do nothing,
   because I cannot create a &quot;conditional wrapper chain&quot; :-/</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2050215</commentid>
    <comment_count>67</comment_count>
      <attachid>209464</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-13 11:33:12 -0500</bug_when>
    <thetext>Created attachment 209464
incremental change 7

(In reply to comment #49)
&gt; - If the type is in the whitelist but if the argument is not closeable, the
&gt; closeable is not being tracked. Is there a reason? I didn&apos;t look at the
&gt; complete whitelist completley, but found one case with PrintWriter
&gt;         void foo() throws FileNotFoundException {
&gt;         PrintWriter input1  = new PrintWriter(&quot;abc.txt&quot;);
&gt;         input1.write(1);
&gt;     }
&gt; I am fine to err in this side, but just wanted to bring this to your attention  
&gt; - this.trackingVariables.size() could be a variable  in
&gt; BlockScope#checkUnclosedCloseables(...)

This is the last one I planned to address (test061n failed until now)

Wrapper allocations without a proper inner resource are now treated like
normal resources.

I&apos;m currently re-running all tests, will scan all comments whether anything
got forgotten and will post my results together with a single flattened
patch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2050282</commentid>
    <comment_count>68</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-13 12:55:16 -0500</bug_when>
    <thetext>(In reply to comment #53)
&gt; Here are some more comments:  Stephan, we can open separate bugs if necessary. 
&gt; - In twr, the resource is being removed from tracking. Shouldn&apos;t the right
&gt; thing to do is mark as closed. Right now, it doesn&apos;t seem to be a problem, but
&gt; if you fix the &apos;PrinteWriter&apos; example, this may become important. 

Interestingly this basic example is correctly silent:

    PrintWriter writer = new PrintWriter(\&quot;filename\&quot;);
    try (BufferedWriter bw = new BufferedWriter(writer)) {
	bw.write(1);
    }

But a more involved variant is missing a warning:

    PrintWriter writer = new PrintWriter(&quot;filename&quot;);
    if (b) {
        try (BufferedWriter bw = new BufferedWriter(writer)) {
            bw.write(1);
        }
    }

Will add this as a disabled test case and add a note to bug 368546.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2050319</commentid>
    <comment_count>69</comment_count>
      <attachid>209472</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-13 14:09:12 -0500</bug_when>
    <thetext>Created attachment 209472
incremental changes 8

From collecting all left-over items here&apos;s my final update for now:

(In reply to comment #61)
&gt;  - AllocationExpression#analyseCode: Pulling the hasTypeBit() check outside the
&gt; for loop could be nice.

Done.

(In reply to comment #50)
&gt; - Return statement is not being tracked for wrapped. An incorrect error is
&gt; getting reported. 
&gt;   InputStream foo() throws IOException {
&gt;         File file = new File(&quot;somefil&quot;);
&gt;         FileInputStream fileStream  = new FileInputStream(file);
&gt;         BufferedInputStream bis = new BufferedInputStream(fileStream);   
&gt;         return fileStream;
&gt;     }

I was removing the tracker for &apos;fileStream&apos; from the scope, but this left
&apos;bis&apos; without information about this return statement. The fix is in 2 steps:
- change ReturnStatement to saying markPassedToOutside(..)
- add check to BlockScope#checkUnclosedCloseables whether a tracker
  being analyzed equals the return value, considering also inners.
  If so, mark as reported to also prevent inners from being flagged.

I had to slightly adjust one expected result in NullReferenceTests.
The previous version was actually better, but the current outcome is a
direct result of weak flow information coming out of a try statement.
Not much I can do.

Added tests
- a forgotten test from coment 66
- tests from comment 68
- test for the above example (from comment 50)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2050389</commentid>
    <comment_count>70</comment_count>
      <attachid>209482</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-13 16:17:57 -0500</bug_when>
    <thetext>Created attachment 209482
Tests &amp; fix v1.0

After final editorial changes and another full test run this is my
release candidate for now. Functionally this is equivalent to the sum
of all incremental changes.

Thanks, Satyam, for all your comments so far. I think with our joined
desire for perfection we morphed a set of heuristics into a pretty sharp
analysis :)

I hope my set of incremental changes wasn&apos;t too much a moving target for
your review. Let me know whether you see the need for further changes.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2050447</commentid>
    <comment_count>71</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-01-13 21:00:07 -0500</bug_when>
    <thetext>(In reply to comment #70)
&gt; Created attachment 209482 [details]
&gt; Tests &amp; fix v1.0
&gt; 
&gt; After final editorial changes and another full test run this is my
&gt; release candidate for now. Functionally this is equivalent to the sum
&gt; of all incremental changes.

Satyam, I agree with the plan to treat this patch as the release candidate.
Unless your further review and verification uncovers ship stopper issues,
we&apos;ll address them via follow up defects post M5.

Stephan may be offline Monday &amp; Tuesday. So you may have to release it
on his behalf - Thanks!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2050496</commentid>
    <comment_count>72</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-01-14 12:44:52 -0500</bug_when>
    <thetext>Stephan, 
I just had a customary look now and will try to complete the review tomorrow. I saw one typo as of now. 
In BlockScope#checkUnclosedCloseables():1059
I believe it should be trackingVariables.get(i) instead of trackingVariables.get(0).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2050497</commentid>
    <comment_count>73</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-14 13:04:36 -0500</bug_when>
    <thetext>(In reply to comment #72)
&gt; Stephan, 
&gt; I just had a customary look now and will try to complete the review tomorrow. I
&gt; saw one typo as of now. 
&gt; In BlockScope#checkUnclosedCloseables():1059
&gt; I believe it should be trackingVariables.get(i) instead of
&gt; trackingVariables.get(0).

Of coures, well spotted, eagle-eye!

[Shouldn&apos;t the compiler be able to detect such stupid typos? :) ]</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2050544</commentid>
    <comment_count>74</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-01-15 02:12:53 -0500</bug_when>
    <thetext>Couple of minor comments
 - FakedTrackingVariable#findCloseTracker(): allocation is not used. 
 - May be a good idea to add a small comment in TWRTest that test056xx has been moved to new test. 

With this, I conclude the review :). +1 for the patch. Please release the patch if you can. If you are not able to today, I can release it tomorrow. 

Stephan, Thanks very much for your explanations and for taking care of all the comments very quickly.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2050593</commentid>
    <comment_count>75</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-15 09:28:37 -0500</bug_when>
    <thetext>After applying final polish (see comment 74) I&apos;ve pushed 
commit 8d45cb26fc5ad244f93e8632d761d46ad4a120cf
which resolves this issue.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2050887</commentid>
    <comment_count>76</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-01-16 08:07:41 -0500</bug_when>
    <thetext>(In reply to comment #75)
&gt; After applying final polish (see comment 74) I&apos;ve pushed 
&gt; commit 8d45cb26fc5ad244f93e8632d761d46ad4a120cf
&gt; which resolves this issue.
I want to add one point. This patch doesn&apos;t change the default for this problem and I think it is better to be left like that for this release. We could change to a warning in 3.8M1.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2050912</commentid>
    <comment_count>77</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-16 08:42:52 -0500</bug_when>
    <thetext>(In reply to comment #76)
&gt; (In reply to comment #75)
&gt; &gt; After applying final polish (see comment 74) I&apos;ve pushed 
&gt; &gt; commit 8d45cb26fc5ad244f93e8632d761d46ad4a120cf
&gt; &gt; which resolves this issue.
&gt; I want to add one point. This patch doesn&apos;t change the default for this problem
&gt; and I think it is better to be left like that for this release. We could change
&gt; to a warning in 3.8M1.

I was going to ask about this.

I&apos;d propose to await progress in bug 368546. If I can resolve that bug
during milestone X, maybe after positive experience we can change the default
early during milestone X+1? We should certainly coordinate with Kim to
clarify which version will be used to build the SDK at what point in time.

Doing the change for 3.8M1 is a good one :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2050917</commentid>
    <comment_count>78</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2012-01-16 08:54:09 -0500</bug_when>
    <thetext>&gt; We should certainly coordinate with Kim to
&gt; clarify which version will be used to build the SDK at what point in time.

Kim normally switches to the latest milestone compiler after the milestone. At any rate, the switch should never happen close to a milestone because the switch can
- result in new warnings/errors being detected
- different bytecode for unchanged source which causes comparator test failures</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2050928</commentid>
    <comment_count>79</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-01-16 09:19:26 -0500</bug_when>
    <thetext>(In reply to comment #77)

&gt; &gt; and I think it is better to be left like that for this release. We could change
&gt; &gt; to a warning in 3.8M1.

&gt; Doing the change for 3.8M1 is a good one :)
Ofcourse you caught me :(, but for the record, I meant 3.9M1.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2051071</commentid>
    <comment_count>80</comment_count>
    <who name="Deepak Azad">deepakazad</who>
    <bug_when>2012-01-16 12:02:03 -0500</bug_when>
    <thetext>Stephan, do you know what is the percentage of false positives now? If it is even 20-25% I would toggle the default in the beginning of M6. In any case I think we should aim latest for M7 to toggle the default. M7 is supposed to be the &apos;polish&apos; milestone, we can nudge people to fix resource leaks during that time.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2051320</commentid>
    <comment_count>81</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-01-16 19:43:12 -0500</bug_when>
    <thetext>(In reply to comment #79)

&gt; Ofcourse you caught me :(, but for the record, I meant 3.9M1.

+1</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2055123</commentid>
    <comment_count>82</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-01-24 09:52:45 -0500</bug_when>
    <thetext>Verified using build I20120122-2000</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>208899</attachid>
            <date>2012-01-01 16:06:00 -0500</date>
            <delta_ts>2012-01-05 10:49:58 -0500</delta_ts>
            <desc>Tests &amp; fix v0.1</desc>
            <filename>Bug_358903_v0.patch</filename>
            <type>text/plain</type>
            <size>24473</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1RyeVdpdGhSZXNvdXJj
ZXNTdGF0ZW1lbnRUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxl
ci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9UcnlX
aXRoUmVzb3VyY2VzU3RhdGVtZW50VGVzdC5qYXZhCmluZGV4IDU2M2NjMGIuLmFlNDgyMGMgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1RyeVdpdGhSZXNvdXJjZXNT
dGF0ZW1lbnRUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGls
ZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vVHJ5
V2l0aFJlc291cmNlc1N0YXRlbWVudFRlc3QuamF2YQpAQCAtMjMsNyArMjMsNyBAQAogcHVibGlj
IGNsYXNzIFRyeVdpdGhSZXNvdXJjZXNTdGF0ZW1lbnRUZXN0IGV4dGVuZHMgQWJzdHJhY3RSZWdy
ZXNzaW9uVGVzdCB7CiAKIHN0YXRpYyB7Ci0vLwlURVNUU19OQU1FUyA9IG5ldyBTdHJpbmdbXSB7
ICJ0ZXN0MDU2dGhyb3cifTsKKy8vCVRFU1RTX05BTUVTID0gbmV3IFN0cmluZ1tdIHsgInRlc3Qw
NTkifTsKIC8vCVRFU1RTX05VTUJFUlMgPSBuZXcgaW50W10geyA1MCB9OwogLy8JVEVTVFNfUkFO
R0UgPSBuZXcgaW50W10geyAxMSwgLTEgfTsKIH0KQEAgLTUyMjYsNiArNTIyNiwyMTQgQEAKIAkJ
CSJ9XG4iCiAJCX0sICAiIik7CQogfQorLy8gQnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxs
eSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCisvLyBCdWcgMzYwOTA4IC0gQXZv
aWQgcmVzb3VyY2UgbGVhayB3YXJuaW5nIHdoZW4gdGhlIHVuZGVybHlpbmcvY2hhaW5lZCByZXNv
dXJjZSBpcyBjbG9zZWQgZXhwbGljaXRseQorLy8gYSByZXNvdXJjZSB3cmFwcGVyIGlzIG5vdCBj
bG9zZWQgYnV0IHRoZSB1bmRlcmx5aW5nIHJlc291cmNlIGlzCitwdWJsaWMgdm9pZCB0ZXN0MDU5
YSgpIHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0
KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVy
T3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBv
cnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7
CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAor
CQkJImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJl
ZElucHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZUlucHV0U3RyZWFtO1xu
IiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJwdWJsaWMgY2xh
c3MgWCB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28oKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiAr
CisJCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xuIiArCisJ
CQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0gZmlsZVN0cmVhbSAgPSBuZXcgRmlsZUlucHV0U3Ry
ZWFtKGZpbGUpO1xuIiArCisJCQkiICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGJpcyA9IG5l
dyBCdWZmZXJlZElucHV0U3RyZWFtKGZpbGVTdHJlYW0pO1xuIiArCisJCQkiICAgICAgICBCdWZm
ZXJlZElucHV0U3RyZWFtIGRvdWJsZVdyYXAgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShiaXMp
O1xuIiArCisJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oYmlzLmF2YWlsYWJsZSgpKTtc
biIgKworCQkJIiAgICAgICAgZmlsZVN0cmVhbS5jbG9zZSgpO1xuIiArCisJCQkiICAgIH1cbiIg
KworCQkJIiAgICB2b2lkIGlubGluZSgpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIg
ICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKKwkJCSIgICAg
ICAgIEZpbGVJbnB1dFN0cmVhbSBmaWxlU3RyZWFtO1xuIiArCisJCQkiICAgICAgICBCdWZmZXJl
ZElucHV0U3RyZWFtIGJpcyA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGZpbGVTdHJlYW0gPSBu
ZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpKTtcbiIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5w
cmludGxuKGJpcy5hdmFpbGFibGUoKSk7XG4iICsKKwkJCSIgICAgICAgIGZpbGVTdHJlYW0uY2xv
c2UoKTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1h
aW4oU3RyaW5nW10gYXJncykgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAg
dHJ5IHtcbiIgKworCQkJIiAgICAgICAgICAgIG5ldyBYKCkuZm9vKCk7XG4iICsKKwkJCSIgICAg
ICAgIH0gY2F0Y2ggKElPRXhjZXB0aW9uIGV4KSB7IiArCisJCQkiICAgICAgICAgICAgU3lzdGVt
Lm91dC5wcmludGxuKFwiR290IElPIEV4Y2VwdGlvblwiKTtcbiIgKworCQkJIiAgICAgICAgfVxu
IiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIkdvdCBJTyBFeGNlcHRpb24i
LAorCQludWxsLAorCQl0cnVlLAorCQludWxsLAorCQlvcHRpb25zLAorCQludWxsKTsKK30KKy8v
IEJ1ZyAzNTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVh
ayB3YXJuaW5ncworLy8gYSBjbG9zZWFibGUgd2l0aG91dCBPUyByZXNvdXJjZSBpcyBub3QgY2xv
c2VkCitwdWJsaWMgdm9pZCB0ZXN0MDU5YigpIHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVy
T3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5j
bG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29t
cGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBD
b21waWxlck9wdGlvbnMuV0FSTklORyk7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJbmV3IFN0
cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZhLmlvLlN0cmluZ1JlYWRlcjtc
biIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGljIGNs
YXNzIFgge1xuIiArCisJCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIg
KworCQkJIiAgICAgICAgU3RyaW5nUmVhZGVyIHN0cmluZyAgPSBuZXcgU3RyaW5nUmVhZGVyKFwi
Y29udGVudFwiKTtcbiIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKHN0cmluZy5y
ZWFkKCkpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQg
bWFpbihTdHJpbmdbXSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAg
ICBuZXcgWCgpLmZvbygpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJ
Ijk5IiwgLy8gY2hhcmFjdGVyICdjJworCQludWxsLAorCQl0cnVlLAorCQludWxsLAorCQlvcHRp
b25zLAorCQludWxsKTsKK30KKy8vIEJ1ZyAzNTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5p
bXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5ncworLy8gYSByZXNvdXJjZSB3cmFwcGVyIGlz
IG5vdCBjbG9zZWQgYnV0IHRoZSB1bmRlcmx5aW5nIGNsb3NlYWJsZSBpcyByZXNvdXJjZS1mcmVl
CitwdWJsaWMgdm9pZCB0ZXN0MDU5YygpIHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0
aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9z
ZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29tcGls
ZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21w
aWxlck9wdGlvbnMuV0FSTklORyk7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJbmV3IFN0cmlu
Z1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkUmVhZGVyO1xu
IiArCisJCQkiaW1wb3J0IGphdmEuaW8uU3RyaW5nUmVhZGVyO1xuIiArCisJCQkiaW1wb3J0IGph
dmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIg
ICAgdm9pZCBmb28oKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBTdHJp
bmdSZWFkZXIgaW5wdXQgPSBuZXcgU3RyaW5nUmVhZGVyKFwiY29udGVudFwiKTtcbiIgKworCQkJ
IiAgICAgICAgQnVmZmVyZWRSZWFkZXIgYnIgPSBuZXcgQnVmZmVyZWRSZWFkZXIoaW5wdXQpO1xu
IiArCisJCQkiICAgICAgICBCdWZmZXJlZFJlYWRlciBkb3VibGVXcmFwID0gbmV3IEJ1ZmZlcmVk
UmVhZGVyKGJyKTtcbiIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGJyLnJlYWQo
KSk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIHZvaWQgaW5saW5lKCkgdGhyb3dzIElP
RXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRSZWFkZXIgYnIgPSBuZXcgQnVm
ZmVyZWRSZWFkZXIobmV3IFN0cmluZ1JlYWRlcihcImNvbnRlbnRcIikpO1xuIiArCisJCQkiICAg
ICAgICBTeXN0ZW0ub3V0LnByaW50bG4oYnIucmVhZCgpKTtcbiIgKworCQkJIiAgICB9XG4iICsK
KwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykgdGhyb3dzIElP
RXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgbmV3IFgoKS5mb28oKTtcbiIgKworCQkJIiAg
ICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSI5OSIsCisJCW51bGwsCisJCXRydWUsCisJCW51
bGwsCisJCW9wdGlvbnMsCisJCW51bGwpOworfQorLy8gQnVnIDM1ODkwMyAtIEZpbHRlciBwcmFj
dGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCisvLyBhIHJlc291cmNl
IHdyYXBwZXIgaXMgbm90IGNsb3NlZCBuZWl0aGVyIGlzIHRoZSB1bmRlcmx5aW5nIHJlc291cmNl
CitwdWJsaWMgdm9pZCB0ZXN0MDU5ZCgpIHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0
aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9z
ZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29tcGls
ZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21w
aWxlck9wdGlvbnMuV0FSTklORyk7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBTdHJp
bmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCisJCQki
aW1wb3J0IGphdmEuaW8uQnVmZmVyZWRJbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZh
LmlvLkZpbGVJbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9u
O1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICAgIHZvaWQgZm9vKCkgdGhy
b3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUo
XCJzb21lZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAgRmlsZUlucHV0U3RyZWFtIGZpbGVTdHJl
YW0gID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVy
ZWRJbnB1dFN0cmVhbSBiaXMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShmaWxlU3RyZWFtKTtc
biIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFwID0gbmV3IEJ1
ZmZlcmVkSW5wdXRTdHJlYW0oYmlzKTtcbiIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmlu
dGxuKGJpcy5hdmFpbGFibGUoKSk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIHZvaWQg
aW5saW5lKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmlsZSBmaWxl
ID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1
dFN0cmVhbSBiaXMyID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0obmV3IEZpbGVJbnB1dFN0cmVh
bShmaWxlKSk7XG4iICsKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihiaXMyLmF2YWls
YWJsZSgpKTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lk
IG1haW4oU3RyaW5nW10gYXJncykgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAg
ICAgdHJ5IHtcbiIgKworCQkJIiAgICAgICAgICAgIG5ldyBYKCkuZm9vKCk7XG4iICsKKwkJCSIg
ICAgICAgIH0gY2F0Y2ggKElPRXhjZXB0aW9uIGV4KSB7IiArCisJCQkiICAgICAgICAgICAgU3lz
dGVtLm91dC5wcmludGxuKFwiR290IElPIEV4Y2VwdGlvblwiKTtcbiIgKworCQkJIiAgICAgICAg
fVxuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIi0tLS0tLS0tLS1cbiIg
KyAKKwkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA5KVxuIiArIAorCQkiCUJ1ZmZlcmVk
SW5wdXRTdHJlYW0gYmlzID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oZmlsZVN0cmVhbSk7XG4i
ICsgCisJCSIJICAgICAgICAgICAgICAgICAgICBeXl5cbiIgKyAKKwkJIlJlc291cmNlIGxlYWs6
IFwnYmlzXCcgaXMgbmV2ZXIgY2xvc2VkXG4iICsgCisJCSItLS0tLS0tLS0tXG4iICsgCisJCSIy
LiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTUpXG4iICsgCisJCSIJQnVmZmVyZWRJbnB1dFN0
cmVhbSBiaXMyID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0obmV3IEZpbGVJbnB1dFN0cmVhbShm
aWxlKSk7XG4iICsgCisJCSIJICAgICAgICAgICAgICAgICAgICBeXl5eXG4iICsgCisJCSJSZXNv
dXJjZSBsZWFrOiBcJ2JpczJcJyBpcyBuZXZlciBjbG9zZWRcbiIgKyAKKwkJIi0tLS0tLS0tLS1c
biIsCisJCW51bGwsCisJCXRydWUsCisJCW9wdGlvbnMpOworfQorLy8gQnVnIDM1ODkwMyAtIEZp
bHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCisvLyBC
dWcgMzYxMDczIC0gQXZvaWQgcmVzb3VyY2UgbGVhayB3YXJuaW5nIHdoZW4gdGhlIHRvcCBsZXZl
bCByZXNvdXJjZSBpcyBjbG9zZWQgZXhwbGljaXRseQorLy8gYSByZXNvdXJjZSB3cmFwcGVyIGlz
IGNsb3NlZCBjbG9zaW5nIGFsc28gdGhlIHVuZGVybHlpbmcgcmVzb3VyY2UKK3B1YmxpYyB2b2lk
IHRlc3QwNTllKCkgeworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0
aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwg
Q29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BU
SU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5X
QVJOSU5HKTsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlgu
amF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlv
LkJ1ZmZlcmVkSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlSW5wdXRT
dHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1
YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICB2b2lkIGZvbygpIHRocm93cyBJT0V4Y2VwdGlv
biB7XG4iICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7
XG4iICsKKwkJCSIgICAgICAgIEZpbGVJbnB1dFN0cmVhbSBmaWxlU3RyZWFtICA9IG5ldyBGaWxl
SW5wdXRTdHJlYW0oZmlsZSk7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0g
YmlzID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oZmlsZVN0cmVhbSk7XG4iICsKKwkJCSIgICAg
ICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gZG91YmxlV3JhcCA9IG5ldyBCdWZmZXJlZElucHV0U3Ry
ZWFtKGJpcyk7XG4iICsKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihiaXMuYXZhaWxh
YmxlKCkpO1xuIiArCisJCQkiICAgICAgICBiaXMuY2xvc2UoKTtcbiIgKworCQkJIiAgICB9XG4i
ICsKKwkJCSIgICAgdm9pZCBpbmxpbmUoKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQki
ICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xuIiArCisJCQkiICAg
ICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGJpczIgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShu
ZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpKTtcbiIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5w
cmludGxuKGJpczIuYXZhaWxhYmxlKCkpO1xuIiArCisJCQkiICAgICAgICBiaXMyLmNsb3NlKCk7
XG4iICsKKwkJCSIgICAgICAgIEZpbGVJbnB1dFN0cmVhbSBmaWxlU3RyZWFtICA9IG51bGw7XG4i
ICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzMyA9IG5ldyBCdWZmZXJlZElu
cHV0U3RyZWFtKGZpbGVTdHJlYW0gPSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpKTtcbiIgKwor
CQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGJpczMuYXZhaWxhYmxlKCkpO1xuIiArCisJ
CQkiICAgICAgICBiaXMzLmNsb3NlKCk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIHB1
YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7
XG4iICsKKwkJCSIgICAgICAgIHRyeSB7XG4iICsKKwkJCSIgICAgICAgICAgICBuZXcgWCgpLmZv
bygpO1xuIiArCisJCQkiICAgICAgICB9IGNhdGNoIChJT0V4Y2VwdGlvbiBleCkgeyIgKworCQkJ
IiAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcIkdvdCBJTyBFeGNlcHRpb25cIik7XG4i
ICsKKwkJCSIgICAgICAgIH1cbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJ
CSJHb3QgSU8gRXhjZXB0aW9uIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJbnVsbCwKKwkJb3B0aW9u
cywKKwkJbnVsbCk7Cit9CiBwdWJsaWMgc3RhdGljIENsYXNzIHRlc3RDbGFzcygpIHsKIAlyZXR1
cm4gVHJ5V2l0aFJlc291cmNlc1N0YXRlbWVudFRlc3QuY2xhc3M7CiB9CmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvYXN0L0Zha2VkVHJhY2tpbmdWYXJpYWJsZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9GYWtlZFRy
YWNraW5nVmFyaWFibGUuamF2YQppbmRleCBlZTEzMDQ3Li4yNjIxMDQxIDEwMDY0NAotLS0gYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvYXN0L0Zha2VkVHJhY2tpbmdWYXJpYWJsZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvRmFr
ZWRUcmFja2luZ1ZhcmlhYmxlLmphdmEKQEAgLTQ4LDYgKzQ4LDggQEAKIAlwcml2YXRlIHN0YXRp
YyBmaW5hbCBpbnQgQ0xPU0VEX0lOX05FU1RFRF9NRVRIT0QgPSA0OwogCS8vIGEgbG9jYXRpb24g
aW5kZXBlbmRlbnQgaXNzdWUgaGFzIGJlZW4gcmVwb3J0ZWQgYWxyZWFkeSBhZ2FpbnN0IHRoaXMg
cmVzb3VyY2U6CiAJcHJpdmF0ZSBzdGF0aWMgZmluYWwgaW50IFJFUE9SVEVEID0gODsKKwkvLyBh
IHJlc291cmNlIGlzIHdyYXBwZWQgaW4gYW5vdGhlciByZXNvdXJjZToKKwlwcml2YXRlIHN0YXRp
YyBmaW5hbCBpbnQgV1JBUFBFRCA9IDE2OwogCQogCS8qKgogCSAqIEJpdHNldCBvZiB7QGxpbmsg
I0NMT1NFX1NFRU59LCB7QGxpbmsgI1BBU1NFRF9UT19PVVRTSURFfSwge0BsaW5rICNDTE9TRURf
SU5fTkVTVEVEX01FVEhPRH0gYW5kIHtAbGluayAjUkVQT1JURUR9LgpAQCAtNTgsMTAgKzYwLDEy
IEBACiAJCiAJcHVibGljIExvY2FsVmFyaWFibGVCaW5kaW5nIG9yaWdpbmFsQmluZGluZzsgLy8g
dGhlIHJlYWwgbG9jYWwgYmVpbmcgdHJhY2tlZAogCQotCUhhc2hNYXAgcmVjb3JkZWRMb2NhdGlv
bnM7IC8vIGluaXRpYWxseSBudWxsLCBBU1ROb2RlIC0+IEludGVnZXIgCisJSGFzaE1hcCByZWNv
cmRlZExvY2F0aW9uczsgLy8gaW5pdGlhbGx5IG51bGwsIEFTVE5vZGUgLT4gSW50ZWdlcgorCisJ
cHVibGljIEZha2VkVHJhY2tpbmdWYXJpYWJsZSBpbm5lclRyYWNrZXI7IC8vIGNoYWluZWQgdHJh
Y2tpbmcgdmFyaWFibGUgb2YgYSBjaGFpbmVkICh3cmFwcGVkKSByZXNvdXJjZQogCiAKLQlwdWJs
aWMgRmFrZWRUcmFja2luZ1ZhcmlhYmxlKExvY2FsVmFyaWFibGVCaW5kaW5nIG9yaWdpbmFsLCBT
dGF0ZW1lbnQgbG9jYXRpb24pIHsKKwlwdWJsaWMgRmFrZWRUcmFja2luZ1ZhcmlhYmxlKExvY2Fs
VmFyaWFibGVCaW5kaW5nIG9yaWdpbmFsLCBBU1ROb2RlIGxvY2F0aW9uKSB7CiAJCXN1cGVyKG9y
aWdpbmFsLm5hbWUsIGxvY2F0aW9uLnNvdXJjZVN0YXJ0LCBsb2NhdGlvbi5zb3VyY2VFbmQpOwog
CQl0aGlzLnR5cGUgPSBuZXcgU2luZ2xlVHlwZVJlZmVyZW5jZSgKIAkJCQlUeXBlQ29uc3RhbnRz
Lk9CSkVDVCwKQEAgLTE0NSw3ICsxNDksMTAgQEAKIAkJCQkvLyByZS1hc3NpZ25pbmcgZnJvbSBh
IGZyZXNoLCBtYXJrIGFzIG5vdC1jbG9zZWQgYWdhaW46CiAJCQkJZmxvd0luZm8ubWFya0FzRGVm
aW5pdGVseU51bGwocHJldmlvdXNUcmFja2VyQmluZGluZyk7CiAJCQl9IGVsc2UgewkJCQkJCQkJ
CQkJCS8vIDMuIG5vIHJlLXVzZSwgY3JlYXRlIGEgZnJlc2ggdHJhY2tpbmcgdmFyaWFibGU6Ci0J
CQkJbG9jYWwuY2xvc2VUcmFja2VyID0gbmV3IEZha2VkVHJhY2tpbmdWYXJpYWJsZShsb2NhbCwg
bG9jYXRpb24pOworCQkJCXJoc1RyYWNrVmFyID0gYW5hbHlzZUNsb3NlYWJsZUV4cHJlc3Npb24o
bG9jYWwsIGxvY2F0aW9uLCByaHMpOworCQkJCWlmIChyaHNUcmFja1ZhciA9PSBudWxsKQorCQkJ
CQlyZXR1cm47CisJCQkJbG9jYWwuY2xvc2VUcmFja2VyID0gcmhzVHJhY2tWYXI7CiAJCQkJLy8g
YSBmcmVzaCByZXNvdXJjZSwgbWFyayBhcyBub3QtY2xvc2VkOgogCQkJCWZsb3dJbmZvLm1hcmtB
c0RlZmluaXRlbHlOdWxsKGxvY2FsLmNsb3NlVHJhY2tlci5iaW5kaW5nKTsKIC8vIFRPRE8oc3Rl
cGhhbik6IHRoaXMgbWlnaHQgYmUgdXNlZnVsLCBidXQgSSBjb3VsZCBub3QgZmluZCBhIHRlc3Qg
Y2FzZSBmb3IgaXQ6IApAQCAtMTUzLDYgKzE2MCw3NiBAQAogLy8JCQkJCWZsb3dDb250ZXh0Lmlu
aXRzT25GaW5hbGx5Lm1hcmtBc0RlZmluaXRlbHlOb25OdWxsKHRyYWNrZXJCaW5kaW5nKTsKIAkJ
CX0KIAkJfQorCX0KKwkvKiBhbmFseXNlIHN0cnVjdHVyZSBvZiBhIGNsb3NlYWJsZSBleHByZXNz
aW9uLCBtYXRjaGluZyAoY2hhaW5lZCkgcmVzb3VyY2VzIGFnYWluc3Qgb3VyIHdoaXRlIGxpc3Rz
LiAqLworCXByaXZhdGUgc3RhdGljIEZha2VkVHJhY2tpbmdWYXJpYWJsZSBhbmFseXNlQ2xvc2Vh
YmxlRXhwcmVzc2lvbihMb2NhbFZhcmlhYmxlQmluZGluZyBsb2NhbCwgCisJCQkJQVNUTm9kZSBs
b2NhdGlvbiwgRXhwcmVzc2lvbiBleHByZXNzaW9uKSAKKwl7CisJCWlmIChleHByZXNzaW9uLnJl
c29sdmVkVHlwZSBpbnN0YW5jZW9mIFJlZmVyZW5jZUJpbmRpbmcpIHsKKwkJCVJlZmVyZW5jZUJp
bmRpbmcgcmVzb3VyY2VUeXBlID0gKFJlZmVyZW5jZUJpbmRpbmcpIGV4cHJlc3Npb24ucmVzb2x2
ZWRUeXBlOworCQkJCisJCQlpZiAocmVzb3VyY2VUeXBlLmhhc1R5cGVCaXQoVHlwZUlkcy5CaXRS
ZXNvdXJjZUZyZWVDbG9zZWFibGUpKSB7CisJCQkJLy8gKGEpIHJlc291cmNlLWZyZWUgY2xvc2Vh
YmxlOiAtPiBudWxsCisJCQkJcmV0dXJuIG51bGw7CisJCQl9CQkJCQkKKwkJCQorCQkJaWYgKHJl
c291cmNlVHlwZS5oYXNUeXBlQml0KFR5cGVJZHMuQml0V3JhcHBlckNsb3NlYWJsZSkpIHsKKwkJ
CQlpZiAoZXhwcmVzc2lvbiBpbnN0YW5jZW9mIEFzc2lnbm1lbnQpCisJCQkJCWV4cHJlc3Npb24g
PSAoKEFzc2lnbm1lbnQpZXhwcmVzc2lvbikuZXhwcmVzc2lvbjsKKwkJCQlpZiAoZXhwcmVzc2lv
biBpbnN0YW5jZW9mIEFsbG9jYXRpb25FeHByZXNzaW9uKSB7CisJCQkJCUV4cHJlc3Npb25bXSBh
cmdzID0gKChBbGxvY2F0aW9uRXhwcmVzc2lvbikgZXhwcmVzc2lvbikuYXJndW1lbnRzOworCQkJ
CQlpZiAoYXJncyAhPSBudWxsICYmIGFyZ3MubGVuZ3RoID09IDEpIHsKKwkJCQkJCUV4cHJlc3Np
b24gYXJnID0gYXJnc1swXTsKKwkJCQkJCWlmIChhcmcgaW5zdGFuY2VvZiBBc3NpZ25tZW50KSB7
CisJCQkJCQkJRXhwcmVzc2lvbiBsaHMgPSAoKEFzc2lnbm1lbnQpYXJnKS5saHM7CisJCQkJCQkJ
aWYgKGxocyBpbnN0YW5jZW9mIFNpbmdsZU5hbWVSZWZlcmVuY2UpIHsKKwkJCQkJCQkJU2luZ2xl
TmFtZVJlZmVyZW5jZSBsaHNSZWYgPSAoU2luZ2xlTmFtZVJlZmVyZW5jZSkgbGhzOworCQkJCQkJ
CQlpZiAobGhzUmVmLmJpbmRpbmcgaW5zdGFuY2VvZiBMb2NhbFZhcmlhYmxlQmluZGluZykgewor
CQkJCQkJCQkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlIGlubmVyVHJhY2tlciA9IGFuYWx5c2VDbG9z
ZWFibGVFeHByZXNzaW9uKCgoTG9jYWxWYXJpYWJsZUJpbmRpbmcpbGhzUmVmLmJpbmRpbmcpLCBh
cmcsICgoQXNzaWdubWVudCkgYXJnKS5leHByZXNzaW9uKTsKKwkJCQkJCQkJCWlmIChpbm5lclRy
YWNrZXIgIT0gbnVsbCkgeworCQkJCQkJCQkJCS8vIChiLjEpIHdyYXBwZXIgd2l0aCByZWxldmFu
dCBpbm5lcjogLT4gdHJhY2tpbmcgdmFyLCBsaW5rZWQgdG8gaW5uZXIgdHJhY2tpbmcgdmFyCisJ
CQkJCQkJCQkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlIHRyYWNrZXIgPSBuZXcgRmFrZWRUcmFja2lu
Z1ZhcmlhYmxlKGxvY2FsLCBsb2NhdGlvbik7IAorCQkJCQkJCQkJCXRyYWNrZXIuaW5uZXJUcmFj
a2VyID0gaW5uZXJUcmFja2VyOworCQkJCQkJCQkJCWlubmVyVHJhY2tlci5nbG9iYWxDbG9zaW5n
U3RhdGUgfD0gV1JBUFBFRDsKKwkJCQkJCQkJCQlyZXR1cm4gdHJhY2tlcjsKKwkJCQkJCQkJCX0J
CQkJCQkJCQkKKwkJCQkJCQkJfQorCQkJCQkJCX0KKwkJCQkJCQkvLyBGSVhNRTogaWYgd2UgZXZl
ciBnZXQgaGVyZSwgd2hhdCBzaG91bGQgd2UgZG8/CisJCQkJCQl9CisJCQkJCQlpZiAoYXJnIGlu
c3RhbmNlb2YgU2luZ2xlTmFtZVJlZmVyZW5jZSkgeworCQkJCQkJCVNpbmdsZU5hbWVSZWZlcmVu
Y2UgcmVmID0gKFNpbmdsZU5hbWVSZWZlcmVuY2UpIGFyZzsKKwkJCQkJCQlpZiAocmVmLmJpbmRp
bmcgaW5zdGFuY2VvZiBMb2NhbFZhcmlhYmxlQmluZGluZykgeworCQkJCQkJCQlMb2NhbFZhcmlh
YmxlQmluZGluZyBpbm5lckxvY2FsID0gKExvY2FsVmFyaWFibGVCaW5kaW5nKXJlZi5iaW5kaW5n
OworCQkJCQkJCQlGYWtlZFRyYWNraW5nVmFyaWFibGUgaW5uZXJUcmFja2VyID0gaW5uZXJMb2Nh
bC5jbG9zZVRyYWNrZXI7CisJCQkJCQkJCWlmIChpbm5lclRyYWNrZXIgIT0gbnVsbCkKKwkJCQkJ
CQkJCWlubmVyVHJhY2tlciA9IGFuYWx5c2VDbG9zZWFibGVFeHByZXNzaW9uKGlubmVyTG9jYWws
IGV4cHJlc3Npb24sIGFyZyk7CisJCQkJCQkJCWlmIChpbm5lclRyYWNrZXIgIT0gbnVsbCkgewor
CQkJCQkJCQkJLy8gKGIuMikgd3JhcHBlciB3aXRoIHJlbGV2YW50IGlubmVyOiAtPiB0cmFja2lu
ZyB2YXIsIGxpbmtlZCB0byBpbm5lciB0cmFja2luZyB2YXIKKwkJCQkJCQkJCUZha2VkVHJhY2tp
bmdWYXJpYWJsZSB0cmFja2VyID0gbmV3IEZha2VkVHJhY2tpbmdWYXJpYWJsZShsb2NhbCwgbG9j
YXRpb24pOyAKKwkJCQkJCQkJCXRyYWNrZXIuaW5uZXJUcmFja2VyID0gaW5uZXJUcmFja2VyOwor
CQkJCQkJCQkJaW5uZXJUcmFja2VyLmdsb2JhbENsb3NpbmdTdGF0ZSB8PSBXUkFQUEVEOworCQkJ
CQkJCQkJcmV0dXJuIHRyYWNrZXI7CisJCQkJCQkJCX0KKwkJCQkJCQl9CisJCQkJCQl9IGVsc2Ug
aWYgKGFyZyBpbnN0YW5jZW9mIEFsbG9jYXRpb25FeHByZXNzaW9uKSB7CisJCQkJCQkJUmVmZXJl
bmNlQmluZGluZyBpbm5lclR5cGUgPSAoUmVmZXJlbmNlQmluZGluZylhcmcucmVzb2x2ZWRUeXBl
OworCQkJCQkJCWlmICghaW5uZXJUeXBlLmhhc1R5cGVCaXQoVHlwZUlkcy5CaXRSZXNvdXJjZUZy
ZWVDbG9zZWFibGV8VHlwZUlkcy5CaXRXcmFwcGVyQ2xvc2VhYmxlKSkgeworCQkJCQkJCQkvLyAo
Yykgd3JhcHBlciBhbGxvYyB3aXRoIGRpcmVjdCBuZXN0ZWQgYWxsb2Mgb2YgcmVndWxhcjogLT4g
bm9ybWFsIHRyYWNrIHZhciAobm8gbG9jYWwgcmVwcmVzZW50cyBpbm5lcikKKwkJCQkJCQkJcmV0
dXJuIG5ldyBGYWtlZFRyYWNraW5nVmFyaWFibGUobG9jYWwsIGxvY2F0aW9uKTsKKwkJCQkJCQl9
CisJCQkJCQl9CisJCQkJCX0KKwkJCQl9CisJCQkJLy8gKGQpIHdyYXBwZXIgd2l0aCBpcnJlbGV2
YW50IGlubmVyOiAtPiBudWxsCisJCQkJcmV0dXJuIG51bGw7CisJCQl9CisJCX0KKwkJaWYgKGxv
Y2FsLmNsb3NlVHJhY2tlciAhPSBudWxsKQorCQkJLy8gKGUpOiBpbm5lciBoYXMgYWxyZWFkeSBi
ZWVuIGFuYWx5c2VkOiAtPiByZS11c2UgdHJhY2sgdmFyCisJCQlyZXR1cm4gbG9jYWwuY2xvc2VU
cmFja2VyOworCQkvLyAoZik6IG5vcm1hbCByZXNvdXJjZTogLT4gbm9ybWFsIHRyYWNraW5nIHZh
cgorCQlyZXR1cm4gbmV3IEZha2VkVHJhY2tpbmdWYXJpYWJsZShsb2NhbCwgbG9jYXRpb24pOwog
CX0KIAogCS8qKiBBbnN3ZXIgd2l0aGVyIHRoZSBnaXZlbiB0eXBlIGJpbmRpbmcgaXMgYSBzdWJ0
eXBlIG9mIGphdmEubGFuZy5BdXRvQ2xvc2VhYmxlLiAqLwpAQCAtMTgyLDcgKzI1OSw3IEBACiAJ
ICovCiAJcHVibGljIHN0YXRpYyBGbG93SW5mbyBtYXJrUGFzc2VkVG9PdXRzaWRlKEJsb2NrU2Nv
cGUgc2NvcGUsIEV4cHJlc3Npb24gZXhwcmVzc2lvbiwgRmxvd0luZm8gZmxvd0luZm8pIHsKIAkJ
RmFrZWRUcmFja2luZ1ZhcmlhYmxlIHRyYWNrVmFyID0gZ2V0Q2xvc2VUcmFja2luZ1ZhcmlhYmxl
KGV4cHJlc3Npb24pOwotCQlpZiAodHJhY2tWYXIgIT0gbnVsbCkgeworCQlpZiAodHJhY2tWYXIg
IT0gbnVsbCAmJiB0cmFja1Zhci5pbm5lclRyYWNrZXIgPT0gbnVsbCkgeyAvLyBpZ25vcmUgd2hl
biByZXNvdXJjZSBpcyBwYXNzZWQgdG8gdGhlIGN0b3Igb2YgYSByZXNvdXJjZSB3cmFwcGVyCiAJ
CQl0cmFja1Zhci5nbG9iYWxDbG9zaW5nU3RhdGUgfD0gUEFTU0VEX1RPX09VVFNJREU7CiAJCQlp
ZiAoc2NvcGUubWV0aG9kU2NvcGUoKSAhPSB0cmFja1Zhci5tZXRob2RTY29wZSkKIAkJCQl0cmFj
a1Zhci5nbG9iYWxDbG9zaW5nU3RhdGUgfD0gQ0xPU0VEX0lOX05FU1RFRF9NRVRIT0Q7CkBAIC0y
MDAsOSArMjc3LDkgQEAKIAkJdGhpcy5yZWNvcmRlZExvY2F0aW9ucy5wdXQobG9jYXRpb24sIG5l
dyBJbnRlZ2VyKG51bGxTdGF0dXMpKTsKIAl9CiAKLQlwdWJsaWMgYm9vbGVhbiByZXBvcnRSZWNv
cmRlZEVycm9ycyhTY29wZSBzY29wZSkgeworCXB1YmxpYyBib29sZWFuIHJlcG9ydFJlY29yZGVk
RXJyb3JzKFNjb3BlIHNjb3BlLCBpbnQgaW5uZXJTdGF0dXMpIHsKIAkJaWYgKHRoaXMuZ2xvYmFs
Q2xvc2luZ1N0YXRlID09IDApIHsKLQkJCXJlcG9ydEVycm9yKHNjb3BlLnByb2JsZW1SZXBvcnRl
cigpLCBudWxsLCBGbG93SW5mby5OVUxMKTsKKwkJCXJlcG9ydEVycm9yKHNjb3BlLnByb2JsZW1S
ZXBvcnRlcigpLCBudWxsLCBGbG93SW5mby5OVUxMLCBpbm5lclN0YXR1cyk7CiAJCQlyZXR1cm4g
dHJ1ZTsKIAkJfQogCQlib29sZWFuIGhhc1JlcG9ydGVkID0gZmFsc2U7CkBAIC0yMTAsMTQgKzI4
NywxOSBAQAogCQkJSXRlcmF0b3IgbG9jYXRpb25zID0gdGhpcy5yZWNvcmRlZExvY2F0aW9ucy5l
bnRyeVNldCgpLml0ZXJhdG9yKCk7CiAJCQl3aGlsZSAobG9jYXRpb25zLmhhc05leHQoKSkgewog
CQkJCU1hcC5FbnRyeSBlbnRyeSA9IChFbnRyeSkgbG9jYXRpb25zLm5leHQoKTsKLQkJCQlyZXBv
cnRFcnJvcihzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKSwgKEFTVE5vZGUpZW50cnkuZ2V0S2V5KCks
ICgoSW50ZWdlcillbnRyeS5nZXRWYWx1ZSgpKS5pbnRWYWx1ZSgpKTsKKwkJCQlyZXBvcnRFcnJv
cihzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKSwgKEFTVE5vZGUpZW50cnkuZ2V0S2V5KCksICgoSW50
ZWdlcillbnRyeS5nZXRWYWx1ZSgpKS5pbnRWYWx1ZSgpLCAwKTsgLy8gRklYTUU6IGlubmVyU3Rh
dHVzCiAJCQkJaGFzUmVwb3J0ZWQgPSB0cnVlOwogCQkJfQogCQl9CiAJCXJldHVybiBoYXNSZXBv
cnRlZDsKIAl9CiAJCi0JcHVibGljIHZvaWQgcmVwb3J0RXJyb3IoUHJvYmxlbVJlcG9ydGVyIHBy
b2JsZW1SZXBvcnRlciwgQVNUTm9kZSBsb2NhdGlvbiwgaW50IG51bGxTdGF0dXMpIHsKKwlwdWJs
aWMgdm9pZCByZXBvcnRFcnJvcihQcm9ibGVtUmVwb3J0ZXIgcHJvYmxlbVJlcG9ydGVyLCBBU1RO
b2RlIGxvY2F0aW9uLCBpbnQgbnVsbFN0YXR1cywgaW50IGlubmVyU3RhdHVzKSB7CisJCWlmICh0
aGlzLmlubmVyVHJhY2tlciAhPSBudWxsICYmIGlubmVyU3RhdHVzID09IEZsb3dJbmZvLk5PTl9O
VUxMKSB7CisJCQlyZXR1cm47IC8vIGlubmVyIHJlc291cmNlIGlzIGNsb3NlZCwgZG9uJ3QgY29t
cGxhaW4gYWdhaW5zdCB0aGUgd3JhcHBlcgorCQl9CisJCWlmICgodGhpcy5nbG9iYWxDbG9zaW5n
U3RhdGUgJiBXUkFQUEVEKSAhPSAwKQorCQkJcmV0dXJuOwogCQlpZiAobnVsbFN0YXR1cyA9PSBG
bG93SW5mby5OVUxMKSB7CiAJCQlpZiAoKHRoaXMuZ2xvYmFsQ2xvc2luZ1N0YXRlICYgQ0xPU0VE
X0lOX05FU1RFRF9NRVRIT0QpICE9IDApCiAJCQkJcHJvYmxlbVJlcG9ydGVyLnBvdGVudGlhbGx5
VW5jbG9zZWRDbG9zZWFibGUodGhpcywgbG9jYXRpb24pOwpAQCAtMjI1LDcgKzMwNyw3IEBACiAJ
CQkJcHJvYmxlbVJlcG9ydGVyLnVuY2xvc2VkQ2xvc2VhYmxlKHRoaXMsIGxvY2F0aW9uKTsKIAkJ
fSBlbHNlIGlmIChudWxsU3RhdHVzID09IEZsb3dJbmZvLlBPVEVOVElBTExZX05VTEwpIHsKIAkJ
CXByb2JsZW1SZXBvcnRlci5wb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlKHRoaXMsIGxvY2F0
aW9uKTsKLQkJfQkJCisJCX0KIAl9CiAKIAlwdWJsaWMgdm9pZCByZXBvcnRFeHBsaWNpdENsb3Np
bmcoUHJvYmxlbVJlcG9ydGVyIHByb2JsZW1SZXBvcnRlcikgewpkaWZmIC0tZ2l0IGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2xvb2t1cC9CaW5hcnlUeXBlQmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CaW5hcnlUeXBl
QmluZGluZy5qYXZhCmluZGV4IDkyOTQ3MjYuLmVjMmZlMmMgMTAwNjQ0Ci0tLSBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9s
b29rdXAvQmluYXJ5VHlwZUJpbmRpbmcuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0JpbmFyeVR5
cGVCaW5kaW5nLmphdmEKQEAgLTEyNzYsNiArMTI3Niw4IEBACiAJCX0KIAl9CiAJdGhpcy50eXBl
Qml0cyB8PSB0aGlzLnN1cGVyY2xhc3MudHlwZUJpdHM7CisJaWYgKHRoaXMuc3VwZXJjbGFzcy5o
YXNUeXBlQml0KFR5cGVJZHMuQml0QXV0b0Nsb3NlYWJsZXxUeXBlSWRzLkJpdENsb3NlYWJsZSkp
CisJCXRoaXMudHlwZUJpdHMgfD0gYXBwbHlDbG9zZWFibGVXaGl0ZWxpc3RzKCk7CiAJcmV0dXJu
IHRoaXMuc3VwZXJjbGFzczsKIH0KIC8vIE5PVEU6IHN1cGVySW50ZXJmYWNlcyBvZiBiaW5hcnkg
dHlwZXMgYXJlIHJlc29sdmVkIHdoZW4gbmVlZGVkCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3Vw
L0Jsb2NrU2NvcGUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQmxvY2tTY29wZS5qYXZhCmluZGV4IGM5
M2M5ZDkuLjlkMDU4Y2QgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQmxvY2tTY29wZS5qYXZh
CisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9sb29rdXAvQmxvY2tTY29wZS5qYXZhCkBAIC0xMDA3LDIwICsxMDA3LDI4
IEBACiAJCS8vIHRyeSB0byBpbXByb3ZlIGluZm8gaWYgYSBjbG9zZSgpIGluc2lkZSBmaW5hbGx5
IHdhcyBvYnNlcnZlZDoKIAkJaWYgKGxvY2F0aW9uU2NvcGUgIT0gbnVsbCkgLy8gb25seSBjaGVj
ayBhdCBtZXRob2QgZXhpdCBwb2ludHMKIAkJCXN0YXR1cyA9IGxvY2F0aW9uU2NvcGUubWVyZ2VD
bG9zZVN0YXR1cyhzdGF0dXMsIHRyYWNraW5nVmFyLmJpbmRpbmcsIHRoaXMpOworCQkvLyBjb25z
aWRlciB3cmFwcGVycyAocGVyIHdoaXRlIGxpc3QpIGVuY2Fwc3VsYXRpbmcgYW4gaW5uZXIgcmVz
b3VyY2U6CisJCWludCBpbm5lclN0YXR1cyA9IDA7CisJCWlmICh0cmFja2luZ1Zhci5pbm5lclRy
YWNrZXIgIT0gbnVsbCkgeworCQkJTG9jYWxWYXJpYWJsZUJpbmRpbmcgaW5uZXJWYXIgPSB0cmFj
a2luZ1Zhci5pbm5lclRyYWNrZXIuYmluZGluZzsKKwkJCWlubmVyU3RhdHVzID0gZ2V0TnVsbFN0
YXR1c0FnZ3Jlc3NpdmVseShpbm5lclZhciwgZmxvd0luZm8pOworCQkJaWYgKGxvY2F0aW9uU2Nv
cGUgIT0gbnVsbCkgLy8gb25seSBjaGVjayBhdCBtZXRob2QgZXhpdCBwb2ludHMKKwkJCQlpbm5l
clN0YXR1cyA9IGxvY2F0aW9uU2NvcGUubWVyZ2VDbG9zZVN0YXR1cyhpbm5lclN0YXR1cywgaW5u
ZXJWYXIsIHRoaXMpOworCQl9CiAJCWlmIChzdGF0dXMgPT0gRmxvd0luZm8uTlVMTCkgewogCQkJ
Ly8gZGVmaW5pdGVseSB1bmNsb3NlZDogaGlnaGVzdCBwcmlvcml0eQotCQkJcmVwb3J0UmVzb3Vy
Y2VMZWFrKHRyYWNraW5nVmFyLCBsb2NhdGlvbiwgc3RhdHVzKTsKKwkJCXJlcG9ydFJlc291cmNl
TGVhayh0cmFja2luZ1ZhciwgbG9jYXRpb24sIHN0YXR1cywgaW5uZXJTdGF0dXMpOwogCQkJY29u
dGludWU7CiAJCX0KIAkJaWYgKGxvY2F0aW9uID09IG51bGwpIC8vIGF0IGVuZCBvZiBibG9jayBh
bmQgbm90IGRlZmluaXRlbHkgdW5jbG9zZWQKIAkJewogCQkJLy8gcHJvYmxlbXMgYXQgc3BlY2lm
aWMgbG9jYXRpb25zOiBtZWRpdW0gcHJpb3JpdHkKLQkJCWlmICh0cmFja2luZ1Zhci5yZXBvcnRS
ZWNvcmRlZEVycm9ycyh0aGlzKSkgLy8gLi4uIHJlcG9ydCBwcmV2aW91c2x5IHJlY29yZGVkIGVy
cm9ycworCQkJaWYgKHRyYWNraW5nVmFyLnJlcG9ydFJlY29yZGVkRXJyb3JzKHRoaXMsIGlubmVy
U3RhdHVzKSkgLy8gLi4uIHJlcG9ydCBwcmV2aW91c2x5IHJlY29yZGVkIGVycm9ycwogCQkJCWNv
bnRpbnVlOwogCQl9IAogCQlpZiAoc3RhdHVzID09IEZsb3dJbmZvLlBPVEVOVElBTExZX05VTEwp
IHsKIAkJCS8vIHBvdGVudGlhbGx5IHVuY2xvc2VkOiBsb3dlciBwcmlvcml0eQotCQkJcmVwb3J0
UmVzb3VyY2VMZWFrKHRyYWNraW5nVmFyLCBsb2NhdGlvbiwgc3RhdHVzKTsKKwkJCXJlcG9ydFJl
c291cmNlTGVhayh0cmFja2luZ1ZhciwgbG9jYXRpb24sIHN0YXR1cywgaW5uZXJTdGF0dXMpOwog
CQl9IGVsc2UgaWYgKHN0YXR1cyA9PSBGbG93SW5mby5OT05fTlVMTCkgewogCQkJLy8gcHJvcGVy
bHkgY2xvc2VkIGJ1dCBub3QgbWFuYWdlZCBieSB0LXctcjogbG93ZXN0IHByaW9yaXR5IAogCQkJ
aWYgKGVudmlyb25tZW50KCkuZ2xvYmFsT3B0aW9ucy5jb21wbGlhbmNlTGV2ZWwgPj0gQ2xhc3NG
aWxlQ29uc3RhbnRzLkpESzFfNykKQEAgLTEwNTMsMTEgKzEwNjEsMTEgQEAKIAlyZXR1cm4gc3Rh
dHVzOwogfQogCi1wcml2YXRlIHZvaWQgcmVwb3J0UmVzb3VyY2VMZWFrKEZha2VkVHJhY2tpbmdW
YXJpYWJsZSB0cmFja2luZ1ZhciwgQVNUTm9kZSBsb2NhdGlvbiwgaW50IG51bGxTdGF0dXMpIHsK
K3ByaXZhdGUgdm9pZCByZXBvcnRSZXNvdXJjZUxlYWsoRmFrZWRUcmFja2luZ1ZhcmlhYmxlIHRy
YWNraW5nVmFyLCBBU1ROb2RlIGxvY2F0aW9uLCBpbnQgbnVsbFN0YXR1cywgaW50IGlubmVyU3Rh
dHVzKSB7CiAJaWYgKGxvY2F0aW9uICE9IG51bGwpCiAJCXRyYWNraW5nVmFyLnJlY29yZEVycm9y
TG9jYXRpb24obG9jYXRpb24sIG51bGxTdGF0dXMpOwogCWVsc2UKLQkJdHJhY2tpbmdWYXIucmVw
b3J0RXJyb3IocHJvYmxlbVJlcG9ydGVyKCksIG51bGwsIG51bGxTdGF0dXMpOworCQl0cmFja2lu
Z1Zhci5yZXBvcnRFcnJvcihwcm9ibGVtUmVwb3J0ZXIoKSwgbnVsbCwgbnVsbFN0YXR1cywgaW5u
ZXJTdGF0dXMpOwogfQogCiAvKiogCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1JlZmVyZW5j
ZUJpbmRpbmcuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvUmVmZXJlbmNlQmluZGluZy5qYXZhCmluZGV4
IDc1ZGU4NTQuLjA1N2ZiNGYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvUmVmZXJlbmNlQmlu
ZGluZy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvUmVmZXJlbmNlQmluZGluZy5qYXZhCkBAIC0x
NDY5LDQgKzE0NjksMzEgQEAKIHB1YmxpYyBGaWVsZEJpbmRpbmdbXSB1blJlc29sdmVkRmllbGRz
KCkgewogCXJldHVybiBCaW5kaW5nLk5PX0ZJRUxEUzsKIH0KKworLyoKKyAqIElmIGEgdHlwZSAt
IGtub3duIHRvIGJlIGEgQ2xvc2VhYmxlIC0gaXMgbWVudGlvbmVkIGluIG9uZSBvZiBvdXIgd2hp
dGUgbGlzdHMKKyAqIGFuc3dlciB0aGUgdHlwZUJpdCBmb3IgdGhlIHdoaXRlIGxpc3QgKEJpdFdy
YXBwZXJDbG9zZWFibGUgb3IgQml0UmVzb3VyY2VGcmVlQ2xvc2VhYmxlKS4KKyAqLworcHJvdGVj
dGVkIGludCBhcHBseUNsb3NlYWJsZVdoaXRlbGlzdHMoKSB7CisJc3dpdGNoICh0aGlzLmNvbXBv
dW5kTmFtZS5sZW5ndGgpIHsKKwkJY2FzZSAzOgorCQkJaWYgKENoYXJPcGVyYXRpb24uZXF1YWxz
KFR5cGVDb25zdGFudHMuSkFWQSwgdGhpcy5jb21wb3VuZE5hbWVbMF0pKSB7CisJCQkJaWYgKENo
YXJPcGVyYXRpb24uZXF1YWxzKFR5cGVDb25zdGFudHMuSU8sIHRoaXMuY29tcG91bmROYW1lWzFd
KSkgeworCQkJCQljaGFyW10gc2ltcGxlTmFtZSA9IHRoaXMuY29tcG91bmROYW1lWzJdOworCQkJ
CQlpbnQgbCA9IFR5cGVDb25zdGFudHMuSkFWQV9JT19XUkFQUEVSX0NMT1NFQUJMRVMubGVuZ3Ro
OworCQkJCQlmb3IgKGludCBpID0gMDsgaSA8IGw7IGkrKykgeworCQkJCQkJaWYgKENoYXJPcGVy
YXRpb24uZXF1YWxzKHNpbXBsZU5hbWUsIFR5cGVDb25zdGFudHMuSkFWQV9JT19XUkFQUEVSX0NM
T1NFQUJMRVNbaV0pKQorCQkJCQkJCXJldHVybiBUeXBlSWRzLkJpdFdyYXBwZXJDbG9zZWFibGU7
CisJCQkJCX0KKwkJCQkJbCA9IFR5cGVDb25zdGFudHMuSkFWQV9JT19SRVNPVVJDRV9GUkVFX0NM
T1NFQUJMRVMubGVuZ3RoOworCQkJCQlmb3IgKGludCBpID0gMDsgaSA8IGw7IGkrKykgeworCQkJ
CQkJaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKHNpbXBsZU5hbWUsIFR5cGVDb25zdGFudHMuSkFW
QV9JT19SRVNPVVJDRV9GUkVFX0NMT1NFQUJMRVNbaV0pKQorCQkJCQkJCXJldHVybiBUeXBlSWRz
LkJpdFJlc291cmNlRnJlZUNsb3NlYWJsZTsKKwkJCQkJfQorCQkJCX0KKwkJCX0KKwkJCWJyZWFr
OworCX0KKwlyZXR1cm4gMDsKK30KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZUNv
bnN0YW50cy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlQ29uc3RhbnRzLmphdmEKaW5kZXggMGJi
ZWY0Ny4uMmRkNTNiNiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlQ29uc3RhbnRzLmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlQ29uc3RhbnRzLmphdmEKQEAgLTE1NCw2ICsxNTQs
MjIgQEAKIAl9OwogCWNoYXJbXVtdIEpBVkFfTEFOR19BVVRPQ0xPU0VBQkxFID0gIHtKQVZBLCBM
QU5HLCAiQXV0b0Nsb3NlYWJsZSIudG9DaGFyQXJyYXkoKX07IC8vJE5PTi1OTFMtMSQKIAljaGFy
W10gQ0xPU0UgPSAiY2xvc2UiLnRvQ2hhckFycmF5KCk7IC8vJE5PTi1OTFMtMSQKKwkvLyB3aGl0
ZSBsaXN0cyBvZiBjbG9zZWFibGVzOgorCWNoYXJbXVtdIEpBVkFfSU9fV1JBUFBFUl9DTE9TRUFC
TEVTID0gbmV3IGNoYXJbXVtdIHsKKwkJIkJ1ZmZlcmVkSW5wdXRTdHJlYW0iLnRvQ2hhckFycmF5
KCksIC8vJE5PTi1OTFMtMSQKKwkJIkJ1ZmZlcmVkT3V0cHV0U3RyZWFtIi50b0NoYXJBcnJheSgp
LCAvLyROT04tTkxTLTEkCisJCSJCdWZmZXJlZFJlYWRlciIudG9DaGFyQXJyYXkoKSwgLy8kTk9O
LU5MUy0xJAorCQkiQnVmZmVyZWRXcml0ZXIiLnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQK
KwkJIlByaW50V3JpdGVyIi50b0NoYXJBcnJheSgpLCAgLy8kTk9OLU5MUy0xJAorCX07CisJY2hh
cltdW10gSkFWQV9JT19SRVNPVVJDRV9GUkVFX0NMT1NFQUJMRVMgPSBuZXcgY2hhcltdW10gewkJ
CQorCQkiU3RyaW5nUmVhZGVyIi50b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJTdHJp
bmdXcml0ZXIiLnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwkJIkJ5dGVBcnJheUlucHV0
U3RyZWFtIi50b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJCeXRlQXJyYXlPdXRwdXRT
dHJlYW0iLnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwkJIkNoYXJBcnJheVJlYWRlciIu
dG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiQ2hhckFycmF5V3JpdGVyIi50b0NoYXJB
cnJheSgpLCAvLyROT04tTkxTLTEkCisJfTsKIAogCS8vIENvbnN0cmFpbnRzIGZvciBnZW5lcmlj
IHR5cGUgYXJndW1lbnQgaW5mZXJlbmNlCiAJaW50IENPTlNUUkFJTlRfRVFVQUwgPSAwOwkJLy8g
QWN0dWFsID0gRm9ybWFsCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVJZHMuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9sb29rdXAvVHlwZUlkcy5qYXZhCmluZGV4IDdmZmY0MzQuLjRhNjI3YmIgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9sb29rdXAvVHlwZUlkcy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlw
ZUlkcy5qYXZhCkBAIC0yMDcsNCArMjA3LDE0IEBACiAJICogQHNlZSBSZWZlcmVuY2VCaW5kaW5n
I2hhc1R5cGVCaXQoaW50KQogCSAqLwogCWZpbmFsIGludCBCaXRDbG9zZWFibGUgPSAyOworCS8q
KgorCSAqIEJpdCBmb3IgbWVtYmVycyBvZiBhIHdoaXRlIGxpc3Q6CisJICogU3VidHlwZXMgb2Yg
Q2xvc2VhYmxlIHRoYXQgd3JhcCBhbm90aGVyIHJlc291cmNlIHdpdGhvdXQgZGlyZWN0bHkgaG9s
ZGluZyBhbnkgT1MgcmVzb3VyY2VzLiAKKwkgKi8KKwlmaW5hbCBpbnQgQml0V3JhcHBlckNsb3Nl
YWJsZSA9IDQ7CisJLyoqCisJICogQml0IGZvciBtZW1iZXJzIG9mIGEgd2hpdGUgbGlzdDoKKwkg
KiBTdWJ0eXBlcyBvZiBDbG9zZWFibGUgdGhhdCBkbyBub3QgaG9sZCBhbiBPUyByZXNvdXJjZSB0
aGF0IG5lZWRzIHRvIGJlIHJlbGVhc2VkLgorCSAqLworCWZpbmFsIGludCBCaXRSZXNvdXJjZUZy
ZWVDbG9zZWFibGUgPSA4OwogfQo=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>209082</attachid>
            <date>2012-01-05 10:49:00 -0500</date>
            <delta_ts>2012-01-05 17:02:07 -0500</delta_ts>
            <desc>Tests &amp; fix v0.5</desc>
            <filename>Bug_358903_v0.5.patch</filename>
            <type>text/plain</type>
            <size>47891</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1RyeVdpdGhSZXNvdXJj
ZXNTdGF0ZW1lbnRUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxl
ci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9UcnlX
aXRoUmVzb3VyY2VzU3RhdGVtZW50VGVzdC5qYXZhCmluZGV4IGYyMWE1N2YuLjAzMzA1NDcgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1RyeVdpdGhSZXNvdXJjZXNT
dGF0ZW1lbnRUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGls
ZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vVHJ5
V2l0aFJlc291cmNlc1N0YXRlbWVudFRlc3QuamF2YQpAQCAtMTQsOCArMTQsMTMgQEAKICAqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5j
b21waWxlci5yZWdyZXNzaW9uOwogCitpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjsKK2ltcG9y
dCBqYXZhLm5ldC5VUkw7CiBpbXBvcnQgamF2YS51dGlsLk1hcDsKIAoraW1wb3J0IG9yZy5lY2xp
cHNlLmNvcmUucnVudGltZS5GaWxlTG9jYXRvcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1
bnRpbWUuUGF0aDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuUGxhdGZvcm07CiBp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSmF2YUNvcmU7CiBpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLmltcGwuQ29tcGlsZXJPcHRpb25zOwogCkBAIC0yMyw3ICsy
OCw3IEBACiBwdWJsaWMgY2xhc3MgVHJ5V2l0aFJlc291cmNlc1N0YXRlbWVudFRlc3QgZXh0ZW5k
cyBBYnN0cmFjdFJlZ3Jlc3Npb25UZXN0IHsKIAogc3RhdGljIHsKLS8vCVRFU1RTX05BTUVTID0g
bmV3IFN0cmluZ1tdIHsgInRlc3QwNTZ0aHJvdyJ9OworLy8JVEVTVFNfTkFNRVMgPSBuZXcgU3Ry
aW5nW10geyAidGVzdDA2MSJ9OwogLy8JVEVTVFNfTlVNQkVSUyA9IG5ldyBpbnRbXSB7IDUwIH07
CiAvLwlURVNUU19SQU5HRSA9IG5ldyBpbnRbXSB7IDExLCAtMSB9OwogfQpAQCAtNTM1NCw3ICs1
MzU5LDM3MyBAQAogCQkiWDo6flhcbiIgKyAKIAkJInRydWUiKTsKIH0KLQorLy8gQnVnIDM1ODkw
MyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdz
CisvLyBCdWcgMzYwOTA4IC0gQXZvaWQgcmVzb3VyY2UgbGVhayB3YXJuaW5nIHdoZW4gdGhlIHVu
ZGVybHlpbmcvY2hhaW5lZCByZXNvdXJjZSBpcyBjbG9zZWQgZXhwbGljaXRseQorLy8gYSByZXNv
dXJjZSB3cmFwcGVyIGlzIG5vdCBjbG9zZWQgYnV0IHRoZSB1bmRlcmx5aW5nIHJlc291cmNlIGlz
CitwdWJsaWMgdm9pZCB0ZXN0MDYxYSgpIHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0
aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9z
ZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29tcGls
ZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21w
aWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCW5ldyBTdHJpbmdb
XSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCisJCQkiaW1w
b3J0IGphdmEuaW8uQnVmZmVyZWRJbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlv
LkZpbGVJbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xu
IiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dz
IElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJz
b21lZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAgRmlsZUlucHV0U3RyZWFtIGZpbGVTdHJlYW0g
ID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJ
bnB1dFN0cmVhbSBiaXMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShmaWxlU3RyZWFtKTtcbiIg
KworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFwID0gbmV3IEJ1ZmZl
cmVkSW5wdXRTdHJlYW0oYmlzKTtcbiIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxu
KGJpcy5hdmFpbGFibGUoKSk7XG4iICsKKwkJCSIgICAgICAgIGZpbGVTdHJlYW0uY2xvc2UoKTtc
biIgKworCQkJIiAgICB9XG4iICsKKwkJCSIgICAgdm9pZCBpbmxpbmUoKSB0aHJvd3MgSU9FeGNl
cHRpb24ge1xuIiArCisJCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxl
XCIpO1xuIiArCisJCQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0gZmlsZVN0cmVhbTtcbiIgKwor
CQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0
cmVhbShmaWxlU3RyZWFtID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKSk7XG4iICsKKwkJCSIg
ICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihiaXMuYXZhaWxhYmxlKCkpO1xuIiArCisJCQkiICAg
ICAgICBmaWxlU3RyZWFtLmNsb3NlKCk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIHB1
YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7
XG4iICsKKwkJCSIgICAgICAgIHRyeSB7XG4iICsKKwkJCSIgICAgICAgICAgICBuZXcgWCgpLmZv
bygpO1xuIiArCisJCQkiICAgICAgICB9IGNhdGNoIChJT0V4Y2VwdGlvbiBleCkgeyIgKworCQkJ
IiAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcIkdvdCBJTyBFeGNlcHRpb25cIik7XG4i
ICsKKwkJCSIgICAgICAgIH1cbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJ
CSJHb3QgSU8gRXhjZXB0aW9uIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJbnVsbCwKKwkJb3B0aW9u
cywKKwkJbnVsbCk7Cit9CisvLyBCdWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1w
b3J0YW50IHJlc291cmNlIGxlYWsgd2FybmluZ3MKKy8vIGEgY2xvc2VhYmxlIHdpdGhvdXQgT1Mg
cmVzb3VyY2UgaXMgbm90IGNsb3NlZAorcHVibGljIHZvaWQgdGVzdDA2MWIoKSB7CisJTWFwIG9w
dGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlv
bnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1Ip
OworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlV
bmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1bkNvbmZv
cm1UZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEu
aW8uU3RyaW5nUmVhZGVyO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4i
ICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28oKSB0aHJvd3Mg
SU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBTdHJpbmdSZWFkZXIgc3RyaW5nICA9IG5l
dyBTdHJpbmdSZWFkZXIoXCJjb250ZW50XCIpO1xuIiArCisJCQkiICAgICAgICBTeXN0ZW0ub3V0
LnByaW50bG4oc3RyaW5nLnJlYWQoKSk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIHB1
YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7
XG4iICsKKwkJCSIgICAgICAgIG5ldyBYKCkuZm9vKCk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJ
CQkifVxuIgorCQl9LAorCQkiOTkiLCAvLyBjaGFyYWN0ZXIgJ2MnCisJCW51bGwsCisJCXRydWUs
CisJCW51bGwsCisJCW9wdGlvbnMsCisJCW51bGwpOworfQorLy8gQnVnIDM1ODkwMyAtIEZpbHRl
ciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCisvLyBhIHJl
c291cmNlIHdyYXBwZXIgaXMgbm90IGNsb3NlZCBidXQgdGhlIHVuZGVybHlpbmcgY2xvc2VhYmxl
IGlzIHJlc291cmNlLWZyZWUKK3B1YmxpYyB2b2lkIHRlc3QwNjFjKCkgeworCU1hcCBvcHRpb25z
ID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9Q
VElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlv
cHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9z
ZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJdGhpcy5ydW5Db25mb3JtVGVz
dCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZhLmlvLkJ1
ZmZlcmVkUmVhZGVyO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uU3RyaW5nUmVhZGVyO1xuIiAr
CisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJwdWJsaWMgY2xhc3Mg
WCB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28oKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJ
CQkiICAgICAgICBTdHJpbmdSZWFkZXIgaW5wdXQgPSBuZXcgU3RyaW5nUmVhZGVyKFwiY29udGVu
dFwiKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRSZWFkZXIgYnIgPSBuZXcgQnVmZmVyZWRS
ZWFkZXIoaW5wdXQpO1xuIiArCisJCQkiICAgICAgICBCdWZmZXJlZFJlYWRlciBkb3VibGVXcmFw
ID0gbmV3IEJ1ZmZlcmVkUmVhZGVyKGJyKTtcbiIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5w
cmludGxuKGJyLnJlYWQoKSk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIHZvaWQgaW5s
aW5lKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRSZWFk
ZXIgYnIgPSBuZXcgQnVmZmVyZWRSZWFkZXIobmV3IFN0cmluZ1JlYWRlcihcImNvbnRlbnRcIikp
O1xuIiArCisJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oYnIucmVhZCgpKTtcbiIgKwor
CQkJIiAgICB9XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10g
YXJncykgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgbmV3IFgoKS5mb28o
KTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSI5OSIsCisJCW51bGws
CisJCXRydWUsCisJCW51bGwsCisJCW9wdGlvbnMsCisJCW51bGwpOworfQorLy8gQnVnIDM1ODkw
MyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdz
CisvLyBhIHJlc291cmNlIHdyYXBwZXIgaXMgbm90IGNsb3NlZCBuZWl0aGVyIGlzIHRoZSB1bmRl
cmx5aW5nIHJlc291cmNlCitwdWJsaWMgdm9pZCB0ZXN0MDYxZCgpIHsKKwlNYXAgb3B0aW9ucyA9
IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJ
T05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0
aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2Vk
Q2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7CisJdGhpcy5ydW5OZWdhdGl2ZVRl
c3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5G
aWxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uQnVmZmVyZWRJbnB1dFN0cmVhbTtcbiIgKwor
CQkJImltcG9ydCBqYXZhLmlvLkZpbGVJbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZh
LmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICAg
IHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmlsZSBm
aWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAgRmlsZUlucHV0
U3RyZWFtIGZpbGVTdHJlYW0gID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKTtcbiIgKworCQkJ
IiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVh
bShmaWxlU3RyZWFtKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBkb3Vi
bGVXcmFwID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oYmlzKTtcbiIgKworCQkJIiAgICAgICAg
U3lzdGVtLm91dC5wcmludGxuKGJpcy5hdmFpbGFibGUoKSk7XG4iICsKKwkJCSIgICAgfVxuIiAr
CisJCQkiICAgIHZvaWQgaW5saW5lKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAg
ICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKworCQkJIiAgICAg
ICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMyID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0obmV3
IEZpbGVJbnB1dFN0cmVhbShmaWxlKSk7XG4iICsKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJp
bnRsbihiaXMyLmF2YWlsYWJsZSgpKTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSIgICAgcHVi
bGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykgdGhyb3dzIElPRXhjZXB0aW9uIHtc
biIgKworCQkJIiAgICAgICAgdHJ5IHtcbiIgKworCQkJIiAgICAgICAgICAgIG5ldyBYKCkuZm9v
KCk7XG4iICsKKwkJCSIgICAgICAgIH0gY2F0Y2ggKElPRXhjZXB0aW9uIGV4KSB7IiArCisJCQki
ICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwiR290IElPIEV4Y2VwdGlvblwiKTtcbiIg
KworCQkJIiAgICAgICAgfVxuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJ
Ii0tLS0tLS0tLS1cbiIgKyAKKwkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxMClcbiIg
KyAKKwkJIglCdWZmZXJlZElucHV0U3RyZWFtIGRvdWJsZVdyYXAgPSBuZXcgQnVmZmVyZWRJbnB1
dFN0cmVhbShiaXMpO1xuIiArIAorCQkiCSAgICAgICAgICAgICAgICAgICAgXl5eXl5eXl5eXlxu
IiArIAorCQkiUmVzb3VyY2UgbGVhazogXCdkb3VibGVXcmFwXCcgaXMgbmV2ZXIgY2xvc2VkXG4i
ICsgCisJCSItLS0tLS0tLS0tXG4iICsgCisJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUg
MTUpXG4iICsgCisJCSIJQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMyID0gbmV3IEJ1ZmZlcmVkSW5w
dXRTdHJlYW0obmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKSk7XG4iICsgCisJCSIJICAgICAgICAg
ICAgICAgICAgICBeXl5eXG4iICsgCisJCSJSZXNvdXJjZSBsZWFrOiBcJ2JpczJcJyBpcyBuZXZl
ciBjbG9zZWRcbiIgKyAKKwkJIi0tLS0tLS0tLS1cbiIsCisJCW51bGwsCisJCXRydWUsCisJCW9w
dGlvbnMpOworfQorLy8gQnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFu
dCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCisvLyBCdWcgMzYxMDczIC0gQXZvaWQgcmVzb3VyY2Ug
bGVhayB3YXJuaW5nIHdoZW4gdGhlIHRvcCBsZXZlbCByZXNvdXJjZSBpcyBjbG9zZWQgZXhwbGlj
aXRseQorLy9hIHJlc291cmNlIHdyYXBwZXIgaXMgY2xvc2VkIGNsb3NpbmcgYWxzbyB0aGUgdW5k
ZXJseWluZyByZXNvdXJjZQorcHVibGljIHZvaWQgdGVzdDA2MWUoKSB7CisJTWFwIG9wdGlvbnMg
PSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BU
SU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCW9w
dGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3Nl
ZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0
KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRmls
ZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJlYW07XG4iICsKKwkJ
CSJpbXBvcnQgamF2YS5pby5GaWxlSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5p
by5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICBG
aWxlSW5wdXRTdHJlYW0gZmlzOyIgKworCQkJIiAgICB2b2lkIGZvbygpIHRocm93cyBJT0V4Y2Vw
dGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVc
Iik7XG4iICsKKwkJCSIgICAgICAgIEZpbGVJbnB1dFN0cmVhbSBmaWxlU3RyZWFtICA9IG5ldyBG
aWxlSW5wdXRTdHJlYW0oZmlsZSk7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJl
YW0gYmlzID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oZmlsZVN0cmVhbSk7XG4iICsKKwkJCSIg
ICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gZG91YmxlV3JhcCA9IG5ldyBCdWZmZXJlZElucHV0
U3RyZWFtKGJpcyk7XG4iICsKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihiaXMuYXZh
aWxhYmxlKCkpO1xuIiArCisJCQkiICAgICAgICBiaXMuY2xvc2UoKTtcbiIgKworCQkJIiAgICB9
XG4iICsKKwkJCSIgICAgdm9pZCBpbmxpbmUoKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJ
CQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xuIiArCisJCQki
ICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGJpczIgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVh
bShmaXMgPSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpKTtcbiIgKyAvLyBmaWVsZCBhc3NpZ25t
ZW50CisJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oYmlzMi5hdmFpbGFibGUoKSk7XG4i
ICsKKwkJCSIgICAgICAgIGJpczIuY2xvc2UoKTtcbiIgKworCQkJIiAgICAgICAgRmlsZUlucHV0
U3RyZWFtIGZpbGVTdHJlYW0gID0gbnVsbDtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1
dFN0cmVhbSBiaXMzID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oZmlsZVN0cmVhbSA9IG5ldyBG
aWxlSW5wdXRTdHJlYW0oZmlsZSkpO1xuIiArCisJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50
bG4oYmlzMy5hdmFpbGFibGUoKSk7XG4iICsKKwkJCSIgICAgICAgIGJpczMuY2xvc2UoKTtcbiIg
KworCQkJIiAgICB9XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5n
W10gYXJncykgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgdHJ5IHtcbiIg
KworCQkJIiAgICAgICAgICAgIG5ldyBYKCkuZm9vKCk7XG4iICsKKwkJCSIgICAgICAgIH0gY2F0
Y2ggKElPRXhjZXB0aW9uIGV4KSB7IiArCisJCQkiICAgICAgICAgICAgU3lzdGVtLm91dC5wcmlu
dGxuKFwiR290IElPIEV4Y2VwdGlvblwiKTtcbiIgKworCQkJIiAgICAgICAgfVxuIiArCisJCQki
ICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIkdvdCBJTyBFeGNlcHRpb24iLAorCQludWxs
LAorCQl0cnVlLAorCQludWxsLAorCQlvcHRpb25zLAorCQludWxsKTsKK30KKy8vIEJ1ZyAzNTg5
MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5n
cworLy8gQnVnIDM2MTA3MyAtIEF2b2lkIHJlc291cmNlIGxlYWsgd2FybmluZyB3aGVuIHRoZSB0
b3AgbGV2ZWwgcmVzb3VyY2UgaXMgY2xvc2VkIGV4cGxpY2l0bHkKKy8vIGEgcmVzb3VyY2Ugd3Jh
cHBlciBpcyBjbG9zZWQgY2xvc2luZyBhbHNvIHRoZSB1bmRlcmx5aW5nIHJlc291cmNlIC0gb3Jp
Z2luYWwgdGVzdCBjYXNlCitwdWJsaWMgdm9pZCB0ZXN0MDYxZigpIHRocm93cyBJT0V4Y2VwdGlv
biB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChD
b21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9w
dGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0
UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlV
UkwgdXJsID0gRmlsZUxvY2F0b3IudG9GaWxlVVJMKEZpbGVMb2NhdG9yLmZpbmQoUGxhdGZvcm0u
Z2V0QnVuZGxlKCJvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlciIpLCBuZXcgUGF0
aCgiTUVUQS1JTkYvTUFOSUZFU1QuTUYiKSwgbnVsbCkpOworCXRoaXMucnVuQ29uZm9ybVRlc3Qo
CisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5JbnB1
dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklucHV0U3RyZWFtUmVhZGVyO1xuIiAr
CisJCQkiaW1wb3J0IGphdmEuaW8uQnVmZmVyZWRSZWFkZXI7XG4iICsKKwkJCSJpbXBvcnQgamF2
YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJImltcG9ydCBqYXZhLm5ldC5VUkw7XG4iICsKKwkJ
CSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIgICAgYm9vbGVhbiBsb2FkVVJMKGZpbmFsIFVS
TCB1cmwpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsgCisJCQkiICAgIElucHV0U3RyZWFtIHN0
cmVhbSA9IG51bGw7XG4iICsgCisJCQkiICAgICAgICBCdWZmZXJlZFJlYWRlciByZWFkZXIgPSBu
dWxsO1xuIiArIAorCQkJIiAgICAgICAgdHJ5IHtcbiIgKyAKKwkJCSIgICAgICAgICAgICBzdHJl
YW0gPSB1cmwub3BlblN0cmVhbSgpO1xuIiArIAorCQkJIiAgICAgICAgICAgIHJlYWRlciA9IG5l
dyBCdWZmZXJlZFJlYWRlcihuZXcgSW5wdXRTdHJlYW1SZWFkZXIoc3RyZWFtKSk7XG4iICsgCisJ
CQkiICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKHJlYWRlci5yZWFkTGluZSgpKTtcbiIg
KworCQkJIiAgICAgICAgfSBmaW5hbGx5IHtcbiIgKyAKKwkJCSIgICAgICAgICAgICB0cnkge1xu
IiArIAorCQkJIiAgICAgICAgICAgICAgICBpZiAocmVhZGVyICE9IG51bGwpXG4iICsgCisJCQki
ICAgICAgICAgICAgICAgICAgICByZWFkZXIuY2xvc2UoKTtcbiIgKyAKKwkJCSIgICAgICAgICAg
ICB9IGNhdGNoIChJT0V4Y2VwdGlvbiB4KSB7XG4iICsgCisJCQkiICAgICAgICAgICAgfVxuIiAr
IAorCQkJIiAgICAgICAgfVxuIiArIAorCQkJIiAgICAgICAgcmV0dXJuIGZhbHNlOyAvLyAnc3Ry
ZWFtJyBtYXkgbm90IGJlIGNsb3NlZCBhdCB0aGlzIGxvY2F0aW9uXG4iICsgCisJCQkiICAgIH1c
biIgKyAKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykgdGhy
b3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgdHJ5IHtcbiIgKworCQkJIiAgICAg
ICAgICAgIG5ldyBYKCkubG9hZFVSTChuZXcgVVJMKFwiIit1cmwudG9TdHJpbmcoKSsiXCIpKTtc
biIgKworCQkJIiAgICAgICAgfSBjYXRjaCAoSU9FeGNlcHRpb24gZXgpIHtcbiIgKworCQkJIiAg
ICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcIkdvdCBJTyBFeGNlcHRpb25cIitleCk7XG4i
ICsKKwkJCSIgICAgICAgIH1cbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJ
CSJNYW5pZmVzdC1WZXJzaW9uOiAxLjAiLAorCQludWxsLAorCQl0cnVlLAorCQludWxsLAorCQlv
cHRpb25zLAorCQludWxsKTsKK30KKy8vIEJ1ZyAzNTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkg
dW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5ncworLy8gQnVnIDM2MDkwOCAtIEF2b2lk
IHJlc291cmNlIGxlYWsgd2FybmluZyB3aGVuIHRoZSB1bmRlcmx5aW5nL2NoYWluZWQgcmVzb3Vy
Y2UgaXMgY2xvc2VkIGV4cGxpY2l0bHkKKy8vIERpZmZlcmVudCBwb2ludHMgaW4gYSByZXNvdXJj
ZSBjaGFpbiBhcmUgY2xvc2VkCitwdWJsaWMgdm9pZCB0ZXN0MDYxZygpIHsKKwlNYXAgb3B0aW9u
cyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5P
UFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJ
b3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xv
c2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVuTmVnYXRpdmVU
ZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8u
RmlsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJlYW07XG4iICsK
KwkJCSJpbXBvcnQgamF2YS5pby5GaWxlSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2
YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAg
ICB2b2lkIGNsb3NlTWlkZGxlKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAg
ICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAg
RmlsZUlucHV0U3RyZWFtIGZpbGVTdHJlYW0gID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKTtc
biIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMgPSBuZXcgQnVmZmVyZWRJ
bnB1dFN0cmVhbShmaWxlU3RyZWFtKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0
cmVhbSBkb3VibGVXcmFwID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oYmlzKTtcbiIgKworCQkJ
IiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGJpcy5hdmFpbGFibGUoKSk7XG4iICsKKwkJCSIg
ICAgICAgIGJpcy5jbG9zZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICB2b2lkIGNs
b3NlT3V0ZXIoKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBGaWxlIGZp
bGUyID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAgRmlsZUlucHV0
U3RyZWFtIGZpbGVTdHJlYW0yICA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZTIpO1xuIiArCisJ
CQkiICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGJpczIgPSBuZXcgQnVmZmVyZWRJbnB1dFN0
cmVhbShmaWxlU3RyZWFtMik7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0g
ZG91YmxlV3JhcDIgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShiaXMyKTtcbiIgKworCQkJIiAg
ICAgICAgU3lzdGVtLm91dC5wcmludGxuKGJpczIuYXZhaWxhYmxlKCkpO1xuIiArCisJCQkiICAg
ICAgICBkb3VibGVXcmFwMi5jbG9zZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICB2
b2lkIG5ldmVyQ2xvc2VkKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAg
RmlsZSBmaWxlMyA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKKwkJCSIgICAgICAgIEZp
bGVJbnB1dFN0cmVhbSBmaWxlU3RyZWFtMyAgPSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUzKTtc
biIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMzID0gbmV3IEJ1ZmZlcmVk
SW5wdXRTdHJlYW0oZmlsZVN0cmVhbTMpO1xuIiArCisJCQkiICAgICAgICBCdWZmZXJlZElucHV0
U3RyZWFtIGRvdWJsZVdyYXAzID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oYmlzMyk7XG4iICsK
KwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihkb3VibGVXcmFwMy5hdmFpbGFibGUoKSk7
XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCQl9LAorCQkiLS0tLS0tLS0tLVxuIiAr
IAorCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDI2KVxuIiArIAorCQkiCUJ1ZmZlcmVk
SW5wdXRTdHJlYW0gZG91YmxlV3JhcDMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShiaXMzKTtc
biIgKyAKKwkJIgkgICAgICAgICAgICAgICAgICAgIF5eXl5eXl5eXl5eXG4iICsgCisJCSJSZXNv
dXJjZSBsZWFrOiBcJ2RvdWJsZVdyYXAzXCcgaXMgbmV2ZXIgY2xvc2VkXG4iICsgCisJCSItLS0t
LS0tLS0tXG4iLAorCQludWxsLAorCQl0cnVlLAorCQlvcHRpb25zKTsKK30KKy8vIEJ1ZyAzNTg5
MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5n
cworLy8gQnVnIDM2MDkwOCAtIEF2b2lkIHJlc291cmNlIGxlYWsgd2FybmluZyB3aGVuIHRoZSB1
bmRlcmx5aW5nL2NoYWluZWQgcmVzb3VyY2UgaXMgY2xvc2VkIGV4cGxpY2l0bHkKKy8vIERpZmZl
cmVudCBwb2ludHMgaW4gYSByZXNvdXJjZSBjaGFpbiBhcmUgcG90ZW50aWFsbHkgY2xvc2VkCitw
dWJsaWMgdm9pZCB0ZXN0MDYxaCgpIHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9u
cygpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRD
bG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJP
cHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxl
ck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQluZXcgU3RyaW5nW10g
eworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKworCQkJImltcG9y
dCBqYXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5G
aWxlSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIg
KworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICB2b2lkIGNsb3NlTWlkZGxlKGJv
b2xlYW4gYikgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmlsZSBmaWxl
ID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAgRmlsZUlucHV0U3Ry
ZWFtIGZpbGVTdHJlYW0gID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKTtcbiIgKworCQkJIiAg
ICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShm
aWxlU3RyZWFtKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBkb3VibGVX
cmFwID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oYmlzKTtcbiIgKworCQkJIiAgICAgICAgU3lz
dGVtLm91dC5wcmludGxuKGJpcy5hdmFpbGFibGUoKSk7XG4iICsKKwkJCSIgICAgICAgIGlmIChi
KVxuIiArCisJCQkiICAgICAgICAgICAgYmlzLmNsb3NlKCk7XG4iICsKKwkJCSIgICAgfVxuIiAr
CisJCQkiICAgIHZvaWQgY2xvc2VPdXRlcihib29sZWFuIGIpIHRocm93cyBJT0V4Y2VwdGlvbiB7
XG4iICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZTIgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xu
IiArCisJCQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0gZmlsZVN0cmVhbTIgID0gbmV3IEZpbGVJ
bnB1dFN0cmVhbShmaWxlMik7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0g
YmlzMiA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGZpbGVTdHJlYW0yKTtcbiIgKworCQkJIiAg
ICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFwMiA9IG5ldyBCdWZmZXJlZElucHV0
U3RyZWFtKGJpczIpO1xuIiArCisJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oYmlzMi5h
dmFpbGFibGUoKSk7XG4iICsKKwkJCSIgICAgICAgIGlmIChiKVxuIiArCisJCQkiICAgICAgICAg
ICAgZG91YmxlV3JhcDIuY2xvc2UoKTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSIgICAgdm9p
ZCBwb3RBbmREZWYoYm9vbGVhbiBiKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAg
ICAgICBGaWxlIGZpbGUzID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKworCQkJIiAgICAg
ICAgRmlsZUlucHV0U3RyZWFtIGZpbGVTdHJlYW0zICA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmls
ZTMpO1xuIiArCisJCQkiICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGJpczMgPSBuZXcgQnVm
ZmVyZWRJbnB1dFN0cmVhbShmaWxlU3RyZWFtMyk7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVk
SW5wdXRTdHJlYW0gZG91YmxlV3JhcDMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShiaXMzKTtc
biIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGRvdWJsZVdyYXAzLmF2YWlsYWJs
ZSgpKTtcbiIgKworCQkJIiAgICAgICAgaWYgKGIpIGJpczMuY2xvc2UoKTtcbiIgKworCQkJIiAg
ICAgICAgZmlsZVN0cmVhbTMuY2xvc2UoKTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4i
CisJCX0sCisJCSItLS0tLS0tLS0tXG4iICsgCisJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxp
bmUgMTApXG4iICsgCisJCSIJQnVmZmVyZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFwID0gbmV3IEJ1
ZmZlcmVkSW5wdXRTdHJlYW0oYmlzKTtcbiIgKyAKKwkJIgkgICAgICAgICAgICAgICAgICAgIF5e
Xl5eXl5eXl5cbiIgKyAKKwkJIlBvdGVudGlhbCByZXNvdXJjZSBsZWFrOiBcJ2RvdWJsZVdyYXBc
JyBtYXkgbm90IGJlIGNsb3NlZFxuIiArIAorCQkiLS0tLS0tLS0tLVxuIiArIAorCQkiMi4gRVJS
T1IgaW4gWC5qYXZhIChhdCBsaW5lIDE5KVxuIiArIAorCQkiCUJ1ZmZlcmVkSW5wdXRTdHJlYW0g
ZG91YmxlV3JhcDIgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShiaXMyKTtcbiIgKyAKKwkJIgkg
ICAgICAgICAgICAgICAgICAgIF5eXl5eXl5eXl5eXG4iICsgCisJCSJQb3RlbnRpYWwgcmVzb3Vy
Y2UgbGVhazogXCdkb3VibGVXcmFwMlwnIG1heSBub3QgYmUgY2xvc2VkXG4iICsgCisJCSItLS0t
LS0tLS0tXG4iLAorCQludWxsLAorCQl0cnVlLAorCQlvcHRpb25zKTsKK30KIHB1YmxpYyBzdGF0
aWMgQ2xhc3MgdGVzdENsYXNzKCkgewogCXJldHVybiBUcnlXaXRoUmVzb3VyY2VzU3RhdGVtZW50
VGVzdC5jbGFzczsKIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQWxsb2NhdGlvbkV4cHJlc3Np
b24uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9hc3QvQWxsb2NhdGlvbkV4cHJlc3Npb24uamF2YQppbmRleCBlODEx
ZWE5Li4wYTY0MzI0IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0FsbG9jYXRpb25FeHByZXNzaW9u
LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2FzdC9BbGxvY2F0aW9uRXhwcmVzc2lvbi5qYXZhCkBAIC0xLDUg
KzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwg
MjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwg
MjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQu
IFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRl
IGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2Ug
djEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFp
bGFibGUgYXQKQEAgLTQ1LDcgKzQ1LDcgQEAKIAlpZiAodGhpcy5hcmd1bWVudHMgIT0gbnVsbCkg
ewogCQlmb3IgKGludCBpID0gMCwgY291bnQgPSB0aGlzLmFyZ3VtZW50cy5sZW5ndGg7IGkgPCBj
b3VudDsgaSsrKSB7CiAJCQkvLyBpZiBhcmd1bWVudCBpcyBhbiBBdXRvQ2xvc2VhYmxlIGluc2Vy
dCBpbmZvIHRoYXQgaXQgKm1heSogYmUgY2xvc2VkIChieSB0aGUgdGFyZ2V0IG1ldGhvZCwgaS5l
LikKLQkJCWZsb3dJbmZvID0gRmFrZWRUcmFja2luZ1ZhcmlhYmxlLm1hcmtQYXNzZWRUb091dHNp
ZGUoY3VycmVudFNjb3BlLCB0aGlzLmFyZ3VtZW50c1tpXSwgZmxvd0luZm8pOworCQkJZmxvd0lu
Zm8gPSBGYWtlZFRyYWNraW5nVmFyaWFibGUubWFya1Bhc3NlZFRvT3V0c2lkZShjdXJyZW50U2Nv
cGUsIHRoaXMuYXJndW1lbnRzW2ldLCBmbG93SW5mbywgdGhpcy5yZXNvbHZlZFR5cGUpOwogCQkJ
Zmxvd0luZm8gPQogCQkJCXRoaXMuYXJndW1lbnRzW2ldCiAJCQkJCS5hbmFseXNlQ29kZShjdXJy
ZW50U2NvcGUsIGZsb3dDb250ZXh0LCBmbG93SW5mbykKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3Qv
QXNzaWdubWVudC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Bc3NpZ25tZW50LmphdmEKaW5kZXggOTcwZmMy
NC4uZWJmNGU5MiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Bc3NpZ25tZW50LmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2FzdC9Bc3NpZ25tZW50LmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUg
YWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0
ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBh
bmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtNTAsMTQgKzUw
LDE0IEBACiAJCS5hbmFseXNlQXNzaWdubWVudChjdXJyZW50U2NvcGUsIGZsb3dDb250ZXh0LCBm
bG93SW5mbywgdGhpcywgZmFsc2UpCiAJCS51bmNvbmRpdGlvbmFsSW5pdHMoKTsKIAlpZiAobG9j
YWwgIT0gbnVsbCkgewotCQlMb2NhbFZhcmlhYmxlQmluZGluZyBwcmV2aW91c1RyYWNrZXJCaW5k
aW5nID0gbnVsbDsKKwkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlIHByZXZpb3VzVHJhY2tlciA9IG51
bGw7CiAJCWlmIChsb2NhbC5jbG9zZVRyYWNrZXIgIT0gbnVsbCkgewogCQkJLy8gQXNzaWduaW5n
IHRvIGEgdmFyaWFibGUgYWxyZWFkeSBob2xkaW5nIGFuIEF1dG9DbG9zZWFibGUsIGhhcyBpdCBi
ZWVuIGNsb3NlZCBiZWZvcmU/Ci0JCQlwcmV2aW91c1RyYWNrZXJCaW5kaW5nID0gbG9jYWwuY2xv
c2VUcmFja2VyLmJpbmRpbmc7CisJCQlwcmV2aW91c1RyYWNrZXIgPSBsb2NhbC5jbG9zZVRyYWNr
ZXI7CiAJCQlpZiAoIWZsb3dJbmZvLmlzRGVmaW5pdGVseU51bGwobG9jYWwpKSAvLyBvbmx5IGlm
IHByZXZpb3VzIHZhbHVlIG1heSBiZSBub24tbnVsbAotCQkJCWxvY2FsLmNsb3NlVHJhY2tlci5y
ZWNvcmRFcnJvckxvY2F0aW9uKHRoaXMsIGZsb3dJbmZvLm51bGxTdGF0dXMocHJldmlvdXNUcmFj
a2VyQmluZGluZykpOworCQkJCWxvY2FsLmNsb3NlVHJhY2tlci5yZWNvcmRFcnJvckxvY2F0aW9u
KHRoaXMsIGZsb3dJbmZvLm51bGxTdGF0dXMocHJldmlvdXNUcmFja2VyLmJpbmRpbmcpKTsKIAkJ
fQotCQlGYWtlZFRyYWNraW5nVmFyaWFibGUuaGFuZGxlUmVzb3VyY2VBc3NpZ25tZW50KGZsb3dJ
bmZvLCB0aGlzLCB0aGlzLmV4cHJlc3Npb24sIGxvY2FsLCBwcmV2aW91c1RyYWNrZXJCaW5kaW5n
KTsKKwkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlLmhhbmRsZVJlc291cmNlQXNzaWdubWVudChmbG93
SW5mbywgdGhpcywgdGhpcy5leHByZXNzaW9uLCBsb2NhbCwgcHJldmlvdXNUcmFja2VyKTsKIAl9
CiAJaW50IG51bGxTdGF0dXMgPSB0aGlzLmV4cHJlc3Npb24ubnVsbFN0YXR1cyhmbG93SW5mbyk7
CiAJaWYgKGxvY2FsICE9IG51bGwgJiYgKGxvY2FsLnR5cGUudGFnQml0cyAmIFRhZ0JpdHMuSXNC
YXNlVHlwZSkgPT0gMCkgewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9GYWtlZFRyYWNraW5nVmFy
aWFibGUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvRmFrZWRUcmFja2luZ1ZhcmlhYmxlLmphdmEKaW5kZXgg
ZWUxMzA0Ny4uNjAwNTNlMyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9GYWtlZFRyYWNraW5nVmFy
aWFibGUuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Zha2VkVHJhY2tpbmdWYXJpYWJsZS5qYXZhCkBA
IC00OCw5ICs0OCwxMSBAQAogCXByaXZhdGUgc3RhdGljIGZpbmFsIGludCBDTE9TRURfSU5fTkVT
VEVEX01FVEhPRCA9IDQ7CiAJLy8gYSBsb2NhdGlvbiBpbmRlcGVuZGVudCBpc3N1ZSBoYXMgYmVl
biByZXBvcnRlZCBhbHJlYWR5IGFnYWluc3QgdGhpcyByZXNvdXJjZToKIAlwcml2YXRlIHN0YXRp
YyBmaW5hbCBpbnQgUkVQT1JURUQgPSA4OworCS8vIGEgcmVzb3VyY2UgaXMgd3JhcHBlZCBpbiBh
bm90aGVyIHJlc291cmNlOgorCXByaXZhdGUgc3RhdGljIGZpbmFsIGludCBXUkFQUEVEID0gMTY7
CiAJCiAJLyoqCi0JICogQml0c2V0IG9mIHtAbGluayAjQ0xPU0VfU0VFTn0sIHtAbGluayAjUEFT
U0VEX1RPX09VVFNJREV9LCB7QGxpbmsgI0NMT1NFRF9JTl9ORVNURURfTUVUSE9EfSBhbmQge0Bs
aW5rICNSRVBPUlRFRH0uCisJICogQml0c2V0IG9mIHtAbGluayAjQ0xPU0VfU0VFTn0sIHtAbGlu
ayAjUEFTU0VEX1RPX09VVFNJREV9LCB7QGxpbmsgI0NMT1NFRF9JTl9ORVNURURfTUVUSE9EfSwg
e0BsaW5rICNSRVBPUlRFRH0gYW5kIHtAbGluayAjV1JBUFBFRH0uCiAJICovCiAJcHJpdmF0ZSBp
bnQgZ2xvYmFsQ2xvc2luZ1N0YXRlID0gMDsKIApAQCAtNTgsMTAgKzYwLDEyIEBACiAJCiAJcHVi
bGljIExvY2FsVmFyaWFibGVCaW5kaW5nIG9yaWdpbmFsQmluZGluZzsgLy8gdGhlIHJlYWwgbG9j
YWwgYmVpbmcgdHJhY2tlZAogCQotCUhhc2hNYXAgcmVjb3JkZWRMb2NhdGlvbnM7IC8vIGluaXRp
YWxseSBudWxsLCBBU1ROb2RlIC0+IEludGVnZXIgCisJSGFzaE1hcCByZWNvcmRlZExvY2F0aW9u
czsgLy8gaW5pdGlhbGx5IG51bGwsIEFTVE5vZGUgLT4gSW50ZWdlcgorCisJcHVibGljIEZha2Vk
VHJhY2tpbmdWYXJpYWJsZSBpbm5lclRyYWNrZXI7IC8vIGNoYWluZWQgdHJhY2tpbmcgdmFyaWFi
bGUgb2YgYSBjaGFpbmVkICh3cmFwcGVkKSByZXNvdXJjZQogCiAKLQlwdWJsaWMgRmFrZWRUcmFj
a2luZ1ZhcmlhYmxlKExvY2FsVmFyaWFibGVCaW5kaW5nIG9yaWdpbmFsLCBTdGF0ZW1lbnQgbG9j
YXRpb24pIHsKKwlwdWJsaWMgRmFrZWRUcmFja2luZ1ZhcmlhYmxlKExvY2FsVmFyaWFibGVCaW5k
aW5nIG9yaWdpbmFsLCBBU1ROb2RlIGxvY2F0aW9uKSB7CiAJCXN1cGVyKG9yaWdpbmFsLm5hbWUs
IGxvY2F0aW9uLnNvdXJjZVN0YXJ0LCBsb2NhdGlvbi5zb3VyY2VFbmQpOwogCQl0aGlzLnR5cGUg
PSBuZXcgU2luZ2xlVHlwZVJlZmVyZW5jZSgKIAkJCQlUeXBlQ29uc3RhbnRzLk9CSkVDVCwKQEAg
LTEzMSw4ICsxMzUsOCBAQAogCSAqIENoZWNrIGlmIHRoZSByaHMgb2YgYW4gYXNzaWdubWVudCBv
ciBsb2NhbCBkZWNsYXJhdGlvbiBpcyBhbiAoQXV0bylDbG9zZWFibGUuCiAJICogSWYgc28gY3Jl
YXRlIG9yIHJlLXVzZSBhIHRyYWNraW5nIHZhcmlhYmxlLCBhbmQgd2lyZSBhbmQgaW5pdGlhbGl6
ZSBldmVyeXRoaW5nLiAKIAkgKi8KLQlwdWJsaWMgc3RhdGljIHZvaWQgaGFuZGxlUmVzb3VyY2VB
c3NpZ25tZW50KEZsb3dJbmZvIGZsb3dJbmZvLCBTdGF0ZW1lbnQgbG9jYXRpb24sIEV4cHJlc3Np
b24gcmhzLCBMb2NhbFZhcmlhYmxlQmluZGluZyBsb2NhbCwKLQkJCQlMb2NhbFZhcmlhYmxlQmlu
ZGluZyBwcmV2aW91c1RyYWNrZXJCaW5kaW5nKSAKKwlwdWJsaWMgc3RhdGljIHZvaWQgaGFuZGxl
UmVzb3VyY2VBc3NpZ25tZW50KEZsb3dJbmZvIGZsb3dJbmZvLCBBU1ROb2RlIGxvY2F0aW9uLCBF
eHByZXNzaW9uIHJocywgTG9jYWxWYXJpYWJsZUJpbmRpbmcgbG9jYWwsCisJCQkJRmFrZWRUcmFj
a2luZ1ZhcmlhYmxlIHByZXZpb3VzVHJhY2tlcikgCiAJewogCQlpZiAoaXNBdXRvQ2xvc2VhYmxl
KHJocy5yZXNvbHZlZFR5cGUpKSB7CiAJCQkvLyBuZXcgdmFsdWUgaXMgQXV0b0Nsb3NlYWJsZSwg
c3RhcnQgdHJhY2tpbmcsIHBvc3NpYmx5IHJlLXVzaW5nIGV4aXN0aW5nIHRyYWNrZXIgdmFyOgpA
QCAtMTQxLDExICsxNDUsMTUgQEAKIAkJCWlmIChyaHNUcmFja1ZhciAhPSBudWxsKSB7CQkJCQkJ
CQkvLyAxLiBzaGFyZSB0cmFja2luZyB2YXJpYWJsZSB3aXRoIFJIUz8KIAkJCQlsb2NhbC5jbG9z
ZVRyYWNrZXIgPSByaHNUcmFja1ZhcjsKIAkJCQkvLyBrZWVwIG51bGwtc3RhdHVzIHVuY2hhbmdl
ZCBhY3Jvc3MgdGhpcyBhc3NpZ25tZW50Ci0JCQl9IGVsc2UgaWYgKHByZXZpb3VzVHJhY2tlckJp
bmRpbmcgIT0gbnVsbCkgewkJCS8vIDIuIHJlLXVzZSB0cmFja2luZyB2YXJpYWJsZSBmcm9tIHRo
ZSBMSFM/CisJCQl9IGVsc2UgaWYgKHByZXZpb3VzVHJhY2tlciAhPSBudWxsKSB7CQkJCQkvLyAy
LiByZS11c2UgdHJhY2tpbmcgdmFyaWFibGUgZnJvbSB0aGUgTEhTPwogCQkJCS8vIHJlLWFzc2ln
bmluZyBmcm9tIGEgZnJlc2gsIG1hcmsgYXMgbm90LWNsb3NlZCBhZ2FpbjoKLQkJCQlmbG93SW5m
by5tYXJrQXNEZWZpbml0ZWx5TnVsbChwcmV2aW91c1RyYWNrZXJCaW5kaW5nKTsKKwkJCQlmbG93
SW5mby5tYXJrQXNEZWZpbml0ZWx5TnVsbChwcmV2aW91c1RyYWNrZXIuYmluZGluZyk7CisJCQkJ
bG9jYWwuY2xvc2VUcmFja2VyID0gYW5hbHlzZUNsb3NlYWJsZUV4cHJlc3Npb24oZmxvd0luZm8s
IGxvY2FsLCBsb2NhdGlvbiwgcmhzLCBwcmV2aW91c1RyYWNrZXIpOwogCQkJfSBlbHNlIHsJCQkJ
CQkJCQkJCQkvLyAzLiBubyByZS11c2UsIGNyZWF0ZSBhIGZyZXNoIHRyYWNraW5nIHZhcmlhYmxl
OgotCQkJCWxvY2FsLmNsb3NlVHJhY2tlciA9IG5ldyBGYWtlZFRyYWNraW5nVmFyaWFibGUobG9j
YWwsIGxvY2F0aW9uKTsKKwkJCQlyaHNUcmFja1ZhciA9IGFuYWx5c2VDbG9zZWFibGVFeHByZXNz
aW9uKGZsb3dJbmZvLCBsb2NhbCwgbG9jYXRpb24sIHJocywgbnVsbCk7CisJCQkJaWYgKHJoc1Ry
YWNrVmFyID09IG51bGwpCisJCQkJCXJldHVybjsKKwkJCQlsb2NhbC5jbG9zZVRyYWNrZXIgPSBy
aHNUcmFja1ZhcjsKIAkJCQkvLyBhIGZyZXNoIHJlc291cmNlLCBtYXJrIGFzIG5vdC1jbG9zZWQ6
CiAJCQkJZmxvd0luZm8ubWFya0FzRGVmaW5pdGVseU51bGwobG9jYWwuY2xvc2VUcmFja2VyLmJp
bmRpbmcpOwogLy8gVE9ETyhzdGVwaGFuKTogdGhpcyBtaWdodCBiZSB1c2VmdWwsIGJ1dCBJIGNv
dWxkIG5vdCBmaW5kIGEgdGVzdCBjYXNlIGZvciBpdDogCkBAIC0xNTMsNiArMTYxLDExNSBAQAog
Ly8JCQkJCWZsb3dDb250ZXh0LmluaXRzT25GaW5hbGx5Lm1hcmtBc0RlZmluaXRlbHlOb25OdWxs
KHRyYWNrZXJCaW5kaW5nKTsKIAkJCX0KIAkJfQorCX0KKwkvKioKKwkgKiBhbmFseXplIHN0cnVj
dHVyZSBvZiBhIGNsb3NlYWJsZSBleHByZXNzaW9uLCBtYXRjaGluZyAoY2hhaW5lZCkgcmVzb3Vy
Y2VzIGFnYWluc3Qgb3VyIHdoaXRlIGxpc3RzLgorCSAqIFNlZSAgQnVnIDM1ODkwMyAtIEZpbHRl
ciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCisJICogQHBh
cmFtIGZsb3dJbmZvIHVzZWQgd2hlbiByZWN1cnNpbmcgYmFjayBpbnRvIHtAbGluayAjaGFuZGxl
UmVzb3VyY2VBc3NpZ25tZW50fQorCSAqIEBwYXJhbSBsb2NhbCBsb2NhbCB2YXJpYWJsZSB0byB3
aGljaCB0aGUgY2xvc2VhYmxlIGlzIGJlaW5nIGFzc2lnbmVkCisJICogQHBhcmFtIGxvY2F0aW9u
IHdoZXJlIHRvIGZsYWcgZXJyb3JzL3dhcm5pbmdzIGFnYWluc3QKKwkgKiBAcGFyYW0gZXhwcmVz
c2lvbiBleHByZXNzaW9uIHRvIGJlIGFuYWx5emVkCisJICogQHBhcmFtIHByZXZpb3VzVHJhY2tl
ciB3aGVuIGFuYWx5emluZyBhIHJlLWFzc2lnbm1lbnQgd2UgbWF5IGFscmVhZHkgaGF2ZSBhIHRy
YWNraW5nIHZhcmlhYmxlIGZvciBsb2NhbCwKKwkgKiAgCQl3aGljaCB3ZSBzaG91bGQgdGhlbiBy
ZS11c2UKKwkgKiBAcmV0dXJuIGEgdHJhY2tpbmcgdmFyaWFibGUgYXNzb2NpYXRlZCB3aXRoIGxv
Y2FsIG9yIG51bGwgaWYgbm8gbmVlZCB0byB0cmFjaworCSAqLworCXByaXZhdGUgc3RhdGljIEZh
a2VkVHJhY2tpbmdWYXJpYWJsZSBhbmFseXNlQ2xvc2VhYmxlRXhwcmVzc2lvbihGbG93SW5mbyBm
bG93SW5mbywgCisJCQkJTG9jYWxWYXJpYWJsZUJpbmRpbmcgbG9jYWwsIEFTVE5vZGUgbG9jYXRp
b24sIEV4cHJlc3Npb24gZXhwcmVzc2lvbiwgRmFrZWRUcmFja2luZ1ZhcmlhYmxlIHByZXZpb3Vz
VHJhY2tlcikgCisJeworCQlpZiAoZXhwcmVzc2lvbi5yZXNvbHZlZFR5cGUgaW5zdGFuY2VvZiBS
ZWZlcmVuY2VCaW5kaW5nKSB7CisJCQlSZWZlcmVuY2VCaW5kaW5nIHJlc291cmNlVHlwZSA9IChS
ZWZlcmVuY2VCaW5kaW5nKSBleHByZXNzaW9uLnJlc29sdmVkVHlwZTsKKwkJCQorCQkJaWYgKHJl
c291cmNlVHlwZS5oYXNUeXBlQml0KFR5cGVJZHMuQml0UmVzb3VyY2VGcmVlQ2xvc2VhYmxlKSkg
eworCQkJCS8vIChhKSByZXNvdXJjZS1mcmVlIGNsb3NlYWJsZTogLT4gbnVsbAorCQkJCXJldHVy
biBudWxsOworCQkJfQkJCQkJCisJCQkKKwkJCWlmIChyZXNvdXJjZVR5cGUuaGFzVHlwZUJpdChU
eXBlSWRzLkJpdFdyYXBwZXJDbG9zZWFibGUpKSB7CisJCQkJLy8gKGIpIHdyYXBwZXIKKwkJCQlF
eHByZXNzaW9uIGlubmVyRXhwcmVzc2lvbiA9IGV4cHJlc3Npb247IAorCQkJCWlmIChpbm5lckV4
cHJlc3Npb24gaW5zdGFuY2VvZiBBc3NpZ25tZW50KQorCQkJCQlpbm5lckV4cHJlc3Npb24gPSAo
KEFzc2lnbm1lbnQpaW5uZXJFeHByZXNzaW9uKS5leHByZXNzaW9uOworCQkJCWlmIChpbm5lckV4
cHJlc3Npb24gaW5zdGFuY2VvZiBBbGxvY2F0aW9uRXhwcmVzc2lvbikgeworCQkJCQlFeHByZXNz
aW9uW10gYXJncyA9ICgoQWxsb2NhdGlvbkV4cHJlc3Npb24pIGlubmVyRXhwcmVzc2lvbikuYXJn
dW1lbnRzOworCQkJCQlpZiAoYXJncyAhPSBudWxsICYmIGFyZ3MubGVuZ3RoID09IDEpIHsKKwkJ
CQkJCS8vIChiLjEpIHdyYXBwZXIgYWxsb2NhdGlvbiB3aXRoIGFyZ3VtZW50CisJCQkJCQlyZXR1
cm4gYW5hbHlzZUNsb3NlYWJsZUFsbG9jYXRpb25Bcmd1bWVudChmbG93SW5mbywgbG9jYWwsIGxv
Y2F0aW9uLCBhcmdzWzBdLCBwcmV2aW91c1RyYWNrZXIpOworCQkJCQl9CisJCQkJfQorCQkJCUxv
Y2FsVmFyaWFibGVCaW5kaW5nIGlubmVyTG9jYWwgPSBpbm5lckV4cHJlc3Npb24ubG9jYWxWYXJp
YWJsZUJpbmRpbmcoKTsKKwkJCQlpZiAoaW5uZXJMb2NhbCAhPSBudWxsICYmIGlubmVyTG9jYWwu
Y2xvc2VUcmFja2VyICE9IG51bGwpIHsKKwkJCQkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlIG91dGVy
VHJhY2tlciA9IHByZXZpb3VzVHJhY2tlciAhPSBudWxsID8gcHJldmlvdXNUcmFja2VyIDogbmV3
IEZha2VkVHJhY2tpbmdWYXJpYWJsZShsb2NhbCwgbG9jYXRpb24pOyAKKwkJCQkJb3V0ZXJUcmFj
a2VyLmlubmVyVHJhY2tlciA9IGlubmVyTG9jYWwuY2xvc2VUcmFja2VyOworCQkJCQlpbm5lckxv
Y2FsLmNsb3NlVHJhY2tlci5nbG9iYWxDbG9zaW5nU3RhdGUgfD0gV1JBUFBFRDsKKwkJCQkJcmV0
dXJuIG91dGVyVHJhY2tlcjsKKwkJCQl9CisJCQkJLy8gKGIuMikgd3JhcHBlciB3aXRoIGlycmVs
ZXZhbnQgaW5uZXI6IC0+IG51bGwKKwkJCQlyZXR1cm4gbnVsbDsKKwkJCX0KKwkJfQorCQlpZiAo
bG9jYWwuY2xvc2VUcmFja2VyICE9IG51bGwpCisJCQkvLyAoYyk6IGlubmVyIGhhcyBhbHJlYWR5
IGJlZW4gYW5hbHlzZWQ6IC0+IHJlLXVzZSB0cmFjayB2YXIKKwkJCXJldHVybiBsb2NhbC5jbG9z
ZVRyYWNrZXI7CisJCS8vIChkKTogbm9ybWFsIHJlc291cmNlOiAtPiBub3JtYWwgdHJhY2tpbmcg
dmFyCisJCWlmIChwcmV2aW91c1RyYWNrZXIgIT0gbnVsbCkKKwkJCXJldHVybiBwcmV2aW91c1Ry
YWNrZXI7IC8vIChkLjEpOiByZS11c2UgZXhpc3RpbmcgdHJhY2tpbmcgdmFyCisJCXJldHVybiBu
ZXcgRmFrZWRUcmFja2luZ1ZhcmlhYmxlKGxvY2FsLCBsb2NhdGlvbik7CisJfQorCisJLy8gYW4g
b3V0ZXIgYWxsb2NhdGlvbiBleHByZXNzaW9uIGhhcyBhbiBhcmd1bWVudCwgcmVjdXJzaXZlbHkg
YW5hbHl6ZSB3aGV0aGVyIHRoZSBhcmcgaXMgY2xvc2VhYmxlIAorCS8vIHJldHVybiAoMSkgYSBw
b3NzaWJsZSBuZXN0ZWQgdHJhY2tlciBmb3IgdGhlIG91dGVyIGV4cHJlc3Npb24gb3IgKDIpIG51
bGwgc2lnbmFsaW5nIG5vIHJlbGV2YW50IHJlc291cmNlIGNvbnRhaW5lZCAgCisJc3RhdGljIEZh
a2VkVHJhY2tpbmdWYXJpYWJsZSBhbmFseXNlQ2xvc2VhYmxlQWxsb2NhdGlvbkFyZ3VtZW50KEZs
b3dJbmZvIGZsb3dJbmZvLCBMb2NhbFZhcmlhYmxlQmluZGluZyBvdXRlckxvY2FsLCBBU1ROb2Rl
IG91dGVyTG9jYXRpb24sIAorCQkJRXhwcmVzc2lvbiBhcmcsIEZha2VkVHJhY2tpbmdWYXJpYWJs
ZSBwcmV2aW91c1RyYWNrZXIpCisJeworCQlpZiAoYXJnIGluc3RhbmNlb2YgQXNzaWdubWVudCkg
eworCQkJQXNzaWdubWVudCBhc3NpZ24gPSAoQXNzaWdubWVudClhcmc7CisJCQlMb2NhbFZhcmlh
YmxlQmluZGluZyBpbm5lckxvY2FsID0gYXNzaWduLmxvY2FsVmFyaWFibGVCaW5kaW5nKCk7CisJ
CQlpZiAoaW5uZXJMb2NhbCAhPSBudWxsKSB7CisJCQkJLy8gcmVjdXJzZSBmcm9tIHRoZSB0b3Ag
Zm9yIG5lc3RlZCBhc3NpZ25tZW50OgorCQkJCWhhbmRsZVJlc291cmNlQXNzaWdubWVudChmbG93
SW5mbywgYXNzaWduLCBhc3NpZ24uZXhwcmVzc2lvbiwgaW5uZXJMb2NhbCwgaW5uZXJMb2NhbC5j
bG9zZVRyYWNrZXIpOworCQkJCXJldHVybiBpbm5lckxvY2FsLmNsb3NlVHJhY2tlcjsgLy8gRklY
TUUgZG8gd2UgbmVlZCBhIG5lc3RlZCB0cmFja2VyIGhlcmU/CisJCQl9IGVsc2UgeworCQkJCWFy
ZyA9IGFzc2lnbi5leHByZXNzaW9uOyAvLyB1bndyYXAgYXNzaWdubWVudCBhbmQgZmFsbCB0aHJv
dWdoCisJCQl9CisJCX0KKwkJaWYgKGFyZyBpbnN0YW5jZW9mIFNpbmdsZU5hbWVSZWZlcmVuY2Up
IHsKKwkJCVNpbmdsZU5hbWVSZWZlcmVuY2UgcmVmID0gKFNpbmdsZU5hbWVSZWZlcmVuY2UpIGFy
ZzsKKwkJCWlmIChyZWYuYmluZGluZyBpbnN0YW5jZW9mIExvY2FsVmFyaWFibGVCaW5kaW5nKSB7
CisJCQkJLy8gYWxsb2NhdGlvbiBhcmcgaXMgYSByZWZlcmVuY2UgdG8gYW4gZXhpc3RpbmcgY2xv
c2VhYmxlPworCQkJCXJldHVybiBnZXRUcmFja2luZ1ZhckZvck5lc3RlZChmbG93SW5mbywgb3V0
ZXJMb2NhbCwgb3V0ZXJMb2NhdGlvbiwgKExvY2FsVmFyaWFibGVCaW5kaW5nKXJlZi5iaW5kaW5n
LCByZWYsIHJlZiwgcHJldmlvdXNUcmFja2VyKTsKKwkJCX0KKwkJfSBlbHNlIGlmIChhcmcgaW5z
dGFuY2VvZiBBbGxvY2F0aW9uRXhwcmVzc2lvbiAmJiBhcmcucmVzb2x2ZWRUeXBlIGluc3RhbmNl
b2YgUmVmZXJlbmNlQmluZGluZykgeworCQkJLy8gbmVzdGVkIGFsbG9jYXRpb24KKwkJCVJlZmVy
ZW5jZUJpbmRpbmcgaW5uZXJUeXBlID0gKFJlZmVyZW5jZUJpbmRpbmcpYXJnLnJlc29sdmVkVHlw
ZTsKKwkJCWlmIChpbm5lclR5cGUuaGFzVHlwZUJpdChUeXBlSWRzLkJpdFJlc291cmNlRnJlZUNs
b3NlYWJsZSkpIHsKKwkJCQlyZXR1cm4gbnVsbDsgLy8gbGVhZiBvZiB3cmFwcGVyLWNoYWluIGlz
IGlycmVsZXZhbnQKKwkJCX0gZWxzZSBpZiAoaW5uZXJUeXBlLmhhc1R5cGVCaXQoVHlwZUlkcy5C
aXRXcmFwcGVyQ2xvc2VhYmxlKSkgeworCQkJCS8vIG5lc3RlZCB3cmFwcGVyLCBuZXN0ZWQgdHJh
Y2tpbmcgdmFyaWFibGVzIG1heSBza2lwIHRoaXMgbGV2ZWwgYXMgaXQgaXMgbm90IGJvdW5kIHRv
IGEgbG9jYWwgdmFyaWFibGUKKwkJCQlFeHByZXNzaW9uW10gYXJncyA9ICgoQWxsb2NhdGlvbkV4
cHJlc3Npb24pIGFyZykuYXJndW1lbnRzOworCQkJCWlmIChhcmdzICE9IG51bGwgJiYgYXJncy5s
ZW5ndGggPiAwKQorCQkJCQlyZXR1cm4gYW5hbHlzZUNsb3NlYWJsZUFsbG9jYXRpb25Bcmd1bWVu
dChmbG93SW5mbywgb3V0ZXJMb2NhbCwgYXJnLCBhcmdzWzBdLCBwcmV2aW91c1RyYWNrZXIpOwor
CQkJCXJldHVybiBudWxsOyAvLyB3cmFwcGVyIHdpdGggbm8gYXJnPyBzaG91bGRuJ3Qgb2NjdXIg
YWN0dWFsbHkKKwkJCX0gZWxzZSB7CisJCQkJLy8gKGMpIHdyYXBwZXIgYWxsb2Mgd2l0aCBkaXJl
Y3QgbmVzdGVkIGFsbG9jIG9mIHJlZ3VsYXI6IC0+IG5vcm1hbCB0cmFjayB2YXIgKG5vIGxvY2Fs
IHJlcHJlc2VudHMgaW5uZXIpCisJCQkJcmV0dXJuIHByZXZpb3VzVHJhY2tlciAhPSBudWxsID8g
cHJldmlvdXNUcmFja2VyIDogbmV3IEZha2VkVHJhY2tpbmdWYXJpYWJsZShvdXRlckxvY2FsLCBv
dXRlckxvY2F0aW9uKTsKKwkJCX0KKwkJfQorCQlyZXR1cm4gbnVsbDsKKwl9CisJCisJLy8gYW4g
b3V0ZXIgYWxsb2NhdGlvbiBleHByZXNzaW9uIGhhcyBhbiBhcmd1bWVudCwgY3JlYXRlL2xpbmsg
b3V0ZXIgYW5kIGlubmVyIHRyYWNraW5nIHZhcmlhYmxlIGFuZCByZXR1cm4gdGhlIG91dGVyCisJ
Ly8gcmV0dXJuIG51bGwgaWYgaW5uZXIgaXMgbm90IHRyYWNrZWQKKwlwcml2YXRlIHN0YXRpYyBG
YWtlZFRyYWNraW5nVmFyaWFibGUgZ2V0VHJhY2tpbmdWYXJGb3JOZXN0ZWQoRmxvd0luZm8gZmxv
d0luZm8sIExvY2FsVmFyaWFibGVCaW5kaW5nIG91dGVyTG9jYWwsIEFTVE5vZGUgb3V0ZXJMb2Nh
dGlvbiwgCisJCQlMb2NhbFZhcmlhYmxlQmluZGluZyBpbm5lckxvY2FsLCBBU1ROb2RlIGlubmVy
TG9jYXRpb24sIEV4cHJlc3Npb24gaW5uZXJFeHByZXNzaW9uLCBGYWtlZFRyYWNraW5nVmFyaWFi
bGUgcHJldmlvdXNUcmFja2VyKQorCXsKKwkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlIGlubmVyVHJh
Y2tlciA9IGFuYWx5c2VDbG9zZWFibGVFeHByZXNzaW9uKGZsb3dJbmZvLCBpbm5lckxvY2FsLCBp
bm5lckxvY2F0aW9uLCBpbm5lckV4cHJlc3Npb24sIG51bGwpOworCQlpZiAoaW5uZXJUcmFja2Vy
ICE9IG51bGwpIHsKKwkJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSBvdXRlclRyYWNrZXIgPSBwcmV2
aW91c1RyYWNrZXIgIT0gbnVsbCA/IHByZXZpb3VzVHJhY2tlciA6IG5ldyBGYWtlZFRyYWNraW5n
VmFyaWFibGUob3V0ZXJMb2NhbCwgb3V0ZXJMb2NhdGlvbik7IAorCQkJb3V0ZXJUcmFja2VyLmlu
bmVyVHJhY2tlciA9IGlubmVyVHJhY2tlcjsKKwkJCWlubmVyVHJhY2tlci5nbG9iYWxDbG9zaW5n
U3RhdGUgfD0gV1JBUFBFRDsKKwkJCXJldHVybiBvdXRlclRyYWNrZXI7CisJCX0KKwkJcmV0dXJu
IG51bGw7CiAJfQogCiAJLyoqIEFuc3dlciB3aXRoZXIgdGhlIGdpdmVuIHR5cGUgYmluZGluZyBp
cyBhIHN1YnR5cGUgb2YgamF2YS5sYW5nLkF1dG9DbG9zZWFibGUuICovCkBAIC0xODAsNyArMjk3
LDExIEBACiAJICogKGFzIGFyZ3VtZW50IHRvIGEgbWV0aG9kL2N0b3IgY2FsbCBvciBhcyBhIHJl
dHVybiB2YWx1ZSBmcm9tIHRoZSBjdXJyZW50IG1ldGhvZCksIAogCSAqIGFuZCB0aHVzIHNob3Vs
ZCBiZSBjb25zaWRlcmVkIGFzIHBvdGVudGlhbGx5IGNsb3NlZC4KIAkgKi8KLQlwdWJsaWMgc3Rh
dGljIEZsb3dJbmZvIG1hcmtQYXNzZWRUb091dHNpZGUoQmxvY2tTY29wZSBzY29wZSwgRXhwcmVz
c2lvbiBleHByZXNzaW9uLCBGbG93SW5mbyBmbG93SW5mbykgeworCXB1YmxpYyBzdGF0aWMgRmxv
d0luZm8gbWFya1Bhc3NlZFRvT3V0c2lkZShCbG9ja1Njb3BlIHNjb3BlLCBFeHByZXNzaW9uIGV4
cHJlc3Npb24sIEZsb3dJbmZvIGZsb3dJbmZvLCBUeXBlQmluZGluZyBhbGxvY2F0ZWRUeXBlKSB7
CQorCQlpZiAoKGFsbG9jYXRlZFR5cGUgaW5zdGFuY2VvZiBSZWZlcmVuY2VCaW5kaW5nKSAKKwkJ
CQkmJiAoKFJlZmVyZW5jZUJpbmRpbmcpIGFsbG9jYXRlZFR5cGUpLmhhc1R5cGVCaXQoVHlwZUlk
cy5CaXRXcmFwcGVyQ2xvc2VhYmxlKSkKKwkJCXJldHVybiBmbG93SW5mbzsgLy8gd3JhcHBlZCBj
bG9zZWFibGVzIGFyZSBhbmFseXplZCBzZXBhcmF0ZWx5OgorCQkKIAkJRmFrZWRUcmFja2luZ1Zh
cmlhYmxlIHRyYWNrVmFyID0gZ2V0Q2xvc2VUcmFja2luZ1ZhcmlhYmxlKGV4cHJlc3Npb24pOwog
CQlpZiAodHJhY2tWYXIgIT0gbnVsbCkgewogCQkJdHJhY2tWYXIuZ2xvYmFsQ2xvc2luZ1N0YXRl
IHw9IFBBU1NFRF9UT19PVVRTSURFOwpAQCAtMjAxLDkgKzMyMiwxNCBAQAogCX0KIAogCXB1Ymxp
YyBib29sZWFuIHJlcG9ydFJlY29yZGVkRXJyb3JzKFNjb3BlIHNjb3BlKSB7Ci0JCWlmICh0aGlz
Lmdsb2JhbENsb3NpbmdTdGF0ZSA9PSAwKSB7Ci0JCQlyZXBvcnRFcnJvcihzY29wZS5wcm9ibGVt
UmVwb3J0ZXIoKSwgbnVsbCwgRmxvd0luZm8uTlVMTCk7Ci0JCQlyZXR1cm4gdHJ1ZTsKKwkJRmFr
ZWRUcmFja2luZ1ZhcmlhYmxlIGN1cnJlbnQgPSB0aGlzOworCQl3aGlsZSAoY3VycmVudC5nbG9i
YWxDbG9zaW5nU3RhdGUgPT0gMCkgeworCQkJY3VycmVudCA9IGN1cnJlbnQuaW5uZXJUcmFja2Vy
OworCQkJaWYgKGN1cnJlbnQgPT0gbnVsbCkgeworCQkJCS8vIG5vIHJlbGV2YW50IHN0YXRlIGZv
dW5kIC0+IHJlcG9ydDoKKwkJCQlyZXBvcnRFcnJvcihzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKSwg
bnVsbCwgRmxvd0luZm8uTlVMTCk7CisJCQkJcmV0dXJuIHRydWU7CisJCQl9CiAJCX0KIAkJYm9v
bGVhbiBoYXNSZXBvcnRlZCA9IGZhbHNlOwogCQlpZiAodGhpcy5yZWNvcmRlZExvY2F0aW9ucyAh
PSBudWxsKSB7CkBAIC0yMTgsNiArMzQ0LDggQEAKIAl9CiAJCiAJcHVibGljIHZvaWQgcmVwb3J0
RXJyb3IoUHJvYmxlbVJlcG9ydGVyIHByb2JsZW1SZXBvcnRlciwgQVNUTm9kZSBsb2NhdGlvbiwg
aW50IG51bGxTdGF0dXMpIHsKKwkJaWYgKCh0aGlzLmdsb2JhbENsb3NpbmdTdGF0ZSAmIFdSQVBQ
RUQpICE9IDApCisJCQlyZXR1cm47CiAJCWlmIChudWxsU3RhdHVzID09IEZsb3dJbmZvLk5VTEwp
IHsKIAkJCWlmICgodGhpcy5nbG9iYWxDbG9zaW5nU3RhdGUgJiBDTE9TRURfSU5fTkVTVEVEX01F
VEhPRCkgIT0gMCkKIAkJCQlwcm9ibGVtUmVwb3J0ZXIucG90ZW50aWFsbHlVbmNsb3NlZENsb3Nl
YWJsZSh0aGlzLCBsb2NhdGlvbik7CkBAIC0yMjUsNyArMzUzLDcgQEAKIAkJCQlwcm9ibGVtUmVw
b3J0ZXIudW5jbG9zZWRDbG9zZWFibGUodGhpcywgbG9jYXRpb24pOwogCQl9IGVsc2UgaWYgKG51
bGxTdGF0dXMgPT0gRmxvd0luZm8uUE9URU5USUFMTFlfTlVMTCkgewogCQkJcHJvYmxlbVJlcG9y
dGVyLnBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUodGhpcywgbG9jYXRpb24pOwotCQl9CQkK
KwkJfQogCX0KIAogCXB1YmxpYyB2b2lkIHJlcG9ydEV4cGxpY2l0Q2xvc2luZyhQcm9ibGVtUmVw
b3J0ZXIgcHJvYmxlbVJlcG9ydGVyKSB7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L01lc3NhZ2VT
ZW5kLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXN0L01lc3NhZ2VTZW5kLmphdmEKaW5kZXggNDZkNDU0MC4uZWFl
OTc0YiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9NZXNzYWdlU2VuZC5qYXZhCisrKyBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9hc3QvTWVzc2FnZVNlbmQuamF2YQpAQCAtOTcsNyArOTcsNyBAQAogCQkJCXRoaXMuYXJndW1l
bnRzW2ldLmNoZWNrTlBFKGN1cnJlbnRTY29wZSwgZmxvd0NvbnRleHQsIGZsb3dJbmZvKTsKIAkJ
CX0KIAkJCS8vIGlmIGFyZ3VtZW50IGlzIGFuIEF1dG9DbG9zZWFibGUgaW5zZXJ0IGluZm8gdGhh
dCBpdCAqbWF5KiBiZSBjbG9zZWQgKGJ5IHRoZSB0YXJnZXQgbWV0aG9kLCBpLmUuKQotCQkJZmxv
d0luZm8gPSBGYWtlZFRyYWNraW5nVmFyaWFibGUubWFya1Bhc3NlZFRvT3V0c2lkZShjdXJyZW50
U2NvcGUsIHRoaXMuYXJndW1lbnRzW2ldLCBmbG93SW5mbyk7CisJCQlmbG93SW5mbyA9IEZha2Vk
VHJhY2tpbmdWYXJpYWJsZS5tYXJrUGFzc2VkVG9PdXRzaWRlKGN1cnJlbnRTY29wZSwgdGhpcy5h
cmd1bWVudHNbaV0sIGZsb3dJbmZvLCBudWxsKTsKIAkJCWZsb3dJbmZvID0gdGhpcy5hcmd1bWVu
dHNbaV0uYW5hbHlzZUNvZGUoY3VycmVudFNjb3BlLCBmbG93Q29udGV4dCwgZmxvd0luZm8pLnVu
Y29uZGl0aW9uYWxJbml0cygpOwogCQl9CiAJCWFuYWx5c2VBcmd1bWVudHMoY3VycmVudFNjb3Bl
LCBmbG93Q29udGV4dCwgZmxvd0luZm8sIHRoaXMuYmluZGluZywgdGhpcy5hcmd1bWVudHMpOwpk
aWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2FzdC9RdWFsaWZpZWRBbGxvY2F0aW9uRXhwcmVzc2lvbi5qYXZh
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2FzdC9RdWFsaWZpZWRBbGxvY2F0aW9uRXhwcmVzc2lvbi5qYXZhCmluZGV4IDNh
MmEwZWQuLjcxNjkwMzIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvUXVhbGlmaWVkQWxsb2NhdGlv
bkV4cHJlc3Npb24uamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1F1YWxpZmllZEFsbG9jYXRpb25FeHBy
ZXNzaW9uLmphdmEKQEAgLTgxLDcgKzgxLDcgQEAKIAkJaWYgKHRoaXMuYXJndW1lbnRzICE9IG51
bGwpIHsKIAkJCWZvciAoaW50IGkgPSAwLCBjb3VudCA9IHRoaXMuYXJndW1lbnRzLmxlbmd0aDsg
aSA8IGNvdW50OyBpKyspIHsKIAkJCQkvLyBpZiBhcmd1bWVudCBpcyBhbiBBdXRvQ2xvc2VhYmxl
IGluc2VydCBpbmZvIHRoYXQgaXQgKm1heSogYmUgY2xvc2VkIChieSB0aGUgdGFyZ2V0IG1ldGhv
ZCwgaS5lLikKLQkJCQlmbG93SW5mbyA9IEZha2VkVHJhY2tpbmdWYXJpYWJsZS5tYXJrUGFzc2Vk
VG9PdXRzaWRlKGN1cnJlbnRTY29wZSwgdGhpcy5hcmd1bWVudHNbaV0sIGZsb3dJbmZvKTsKKwkJ
CQlmbG93SW5mbyA9IEZha2VkVHJhY2tpbmdWYXJpYWJsZS5tYXJrUGFzc2VkVG9PdXRzaWRlKGN1
cnJlbnRTY29wZSwgdGhpcy5hcmd1bWVudHNbaV0sIGZsb3dJbmZvLCBudWxsKTsKIAkJCQlmbG93
SW5mbyA9IHRoaXMuYXJndW1lbnRzW2ldLmFuYWx5c2VDb2RlKGN1cnJlbnRTY29wZSwgZmxvd0Nv
bnRleHQsIGZsb3dJbmZvKTsKIAkJCQlpZiAoKHRoaXMuYXJndW1lbnRzW2ldLmltcGxpY2l0Q29u
dmVyc2lvbiAmIFR5cGVJZHMuVU5CT1hJTkcpICE9IDApIHsKIAkJCQkJdGhpcy5hcmd1bWVudHNb
aV0uY2hlY2tOUEUoY3VycmVudFNjb3BlLCBmbG93Q29udGV4dCwgZmxvd0luZm8pOwpkaWZmIC0t
Z2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2xvb2t1cC9CaW5hcnlUeXBlQmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1
cC9CaW5hcnlUeXBlQmluZGluZy5qYXZhCmluZGV4IDkyOTQ3MjYuLmQwODJkMjkgMTAwNjQ0Ci0t
LSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9sb29rdXAvQmluYXJ5VHlwZUJpbmRpbmcuamF2YQorKysgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9v
a3VwL0JpbmFyeVR5cGVCaW5kaW5nLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUg
YWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0
ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBh
bmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtMTI3NSw3ICsx
Mjc1LDkgQEAKIAkJCXRoaXMuZW52aXJvbm1lbnQubWF5VG9sZXJhdGVNaXNzaW5nVHlwZSA9IHdh
c1RvbGVyYXRpbmdNaXNzaW5nVHlwZVByb2Nlc3NpbmdBbm5vdGF0aW9uczsKIAkJfQogCX0KLQl0
aGlzLnR5cGVCaXRzIHw9IHRoaXMuc3VwZXJjbGFzcy50eXBlQml0czsKKwl0aGlzLnR5cGVCaXRz
IHw9ICh0aGlzLnN1cGVyY2xhc3MudHlwZUJpdHMgJiBUeXBlSWRzLkluaGVyaXRhYmxlQml0cyk7
CisJaWYgKHRoaXMuaGFzVHlwZUJpdChUeXBlSWRzLkJpdEF1dG9DbG9zZWFibGV8VHlwZUlkcy5C
aXRDbG9zZWFibGUpKQorCQl0aGlzLnR5cGVCaXRzIHw9IGFwcGx5Q2xvc2VhYmxlV2hpdGVsaXN0
cygpOwogCXJldHVybiB0aGlzLnN1cGVyY2xhc3M7CiB9CiAvLyBOT1RFOiBzdXBlckludGVyZmFj
ZXMgb2YgYmluYXJ5IHR5cGVzIGFyZSByZXNvbHZlZCB3aGVuIG5lZWRlZApAQCAtMTI5OCw3ICsx
MzAwLDcgQEAKIAkJCQl0aGlzLmVudmlyb25tZW50Lm1heVRvbGVyYXRlTWlzc2luZ1R5cGUgPSB3
YXNUb2xlcmF0aW5nTWlzc2luZ1R5cGVQcm9jZXNzaW5nQW5ub3RhdGlvbnM7CiAJCQl9CQogCQl9
Ci0JCXRoaXMudHlwZUJpdHMgfD0gdGhpcy5zdXBlckludGVyZmFjZXNbaV0udHlwZUJpdHM7CisJ
CXRoaXMudHlwZUJpdHMgfD0gKHRoaXMuc3VwZXJJbnRlcmZhY2VzW2ldLnR5cGVCaXRzICYgVHlw
ZUlkcy5Jbmhlcml0YWJsZUJpdHMpOwogCX0KIAl0aGlzLnRhZ0JpdHMgJj0gflRhZ0JpdHMuSGFz
VW5yZXNvbHZlZFN1cGVyaW50ZXJmYWNlczsKIAlyZXR1cm4gdGhpcy5zdXBlckludGVyZmFjZXM7
CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Jsb2NrU2NvcGUuamF2YSBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29r
dXAvQmxvY2tTY29wZS5qYXZhCmluZGV4IGM5M2M5ZDkuLjAxODcxMzkgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9sb29rdXAvQmxvY2tTY29wZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQmxvY2tTY29w
ZS5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHly
aWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHly
aWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCBy
aWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlh
bHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2Ug
UHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRp
b24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTEwMDMsMTAgKzEwMDMsMjUgQEAKIAkJRmFrZWRU
cmFja2luZ1ZhcmlhYmxlIHRyYWNraW5nVmFyID0gKEZha2VkVHJhY2tpbmdWYXJpYWJsZSkgdGhp
cy50cmFja2luZ1ZhcmlhYmxlcy5nZXQoaSk7CiAJCWlmIChsb2NhdGlvbiAhPSBudWxsICYmIHRy
YWNraW5nVmFyLm9yaWdpbmFsQmluZGluZyAhPSBudWxsICYmIGZsb3dJbmZvLmlzRGVmaW5pdGVs
eU51bGwodHJhY2tpbmdWYXIub3JpZ2luYWxCaW5kaW5nKSkKIAkJCWNvbnRpbnVlOyAvLyByZXBv
cnRpbmcgYWdhaW5zdCBhIHNwZWNpZmljIGxvY2F0aW9uLCByZXNvdXJjZSBpcyBudWxsIGF0IHRo
aXMgZmxvdywgZG9uJ3QgY29tcGxhaW4KLQkJaW50IHN0YXR1cyA9IGdldE51bGxTdGF0dXNBZ2dy
ZXNzaXZlbHkodHJhY2tpbmdWYXIuYmluZGluZywgZmxvd0luZm8pOwotCQkvLyB0cnkgdG8gaW1w
cm92ZSBpbmZvIGlmIGEgY2xvc2UoKSBpbnNpZGUgZmluYWxseSB3YXMgb2JzZXJ2ZWQ6Ci0JCWlm
IChsb2NhdGlvblNjb3BlICE9IG51bGwpIC8vIG9ubHkgY2hlY2sgYXQgbWV0aG9kIGV4aXQgcG9p
bnRzCi0JCQlzdGF0dXMgPSBsb2NhdGlvblNjb3BlLm1lcmdlQ2xvc2VTdGF0dXMoc3RhdHVzLCB0
cmFja2luZ1Zhci5iaW5kaW5nLCB0aGlzKTsKKwkJCisJCS8vIGNvbXB1dGUgdGhlIG1vc3Qgc3Bl
Y2lmaWMgbnVsbCBzdGF0dXMgZm9yIHRoaXMgcmVzb3VyY2UsCisJCS8vIGNvbnNpZGVyIHdyYXBw
ZXJzIChwZXIgd2hpdGUgbGlzdCkgZW5jYXBzdWxhdGluZyBhbiBpbm5lciByZXNvdXJjZS4KKwkJ
aW50IHN0YXR1cyA9IEZsb3dJbmZvLlVOS05PV047CisJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSBj
dXJyZW50VHJhY2tlciA9IHRyYWNraW5nVmFyOworCQl3aGlsZSAoY3VycmVudFRyYWNrZXIgIT0g
bnVsbCkgeworCQkJTG9jYWxWYXJpYWJsZUJpbmRpbmcgY3VycmVudFZhciA9IGN1cnJlbnRUcmFj
a2VyLmJpbmRpbmc7CisJCQlpbnQgY3VycmVudFN0YXR1cyA9IGdldE51bGxTdGF0dXNBZ2dyZXNz
aXZlbHkoY3VycmVudFZhciwgZmxvd0luZm8pOworCQkJaWYgKGxvY2F0aW9uU2NvcGUgIT0gbnVs
bCkgLy8gb25seSBjaGVjayBhdCBtZXRob2QgZXhpdCBwb2ludHMKKwkJCQljdXJyZW50U3RhdHVz
ID0gbG9jYXRpb25TY29wZS5tZXJnZUNsb3NlU3RhdHVzKGN1cnJlbnRTdGF0dXMsIGN1cnJlbnRW
YXIsIHRoaXMpOworCQkJaWYgKGN1cnJlbnRTdGF0dXMgPT0gRmxvd0luZm8uTk9OX05VTEwpIHsK
KwkJCQlzdGF0dXMgPSBjdXJyZW50U3RhdHVzOworCQkJCWJyZWFrOyAvLyBjbG9zZWQgLT4gc3Rv
cCBzZWFyY2hpbmcKKwkJCX0gZWxzZSBpZiAoc3RhdHVzID09IEZsb3dJbmZvLk5VTEwgfHwgc3Rh
dHVzID09IEZsb3dJbmZvLlVOS05PV04pIHsKKwkJCQlzdGF0dXMgPSBjdXJyZW50U3RhdHVzOyAv
LyBpbXByb3ZlZCBhbHRob3VnaCBub3QgeWV0IHNhZmUgLT4ga2VlcCBzZWFyY2hpbmcgZm9yIGJl
dHRlcgorCQkJfQorCQkJY3VycmVudFRyYWNrZXIgPSBjdXJyZW50VHJhY2tlci5pbm5lclRyYWNr
ZXI7CisJCX0KKwkJCiAJCWlmIChzdGF0dXMgPT0gRmxvd0luZm8uTlVMTCkgewogCQkJLy8gZGVm
aW5pdGVseSB1bmNsb3NlZDogaGlnaGVzdCBwcmlvcml0eQogCQkJcmVwb3J0UmVzb3VyY2VMZWFr
KHRyYWNraW5nVmFyLCBsb2NhdGlvbiwgc3RhdHVzKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29r
dXAvQ2xhc3NTY29wZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9DbGFzc1Njb3BlLmphdmEKaW5kZXgg
M2ViM2NjYS4uMmIzMmRjMiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9DbGFzc1Njb3BlLmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2xvb2t1cC9DbGFzc1Njb3BlLmphdmEKQEAgLTEsNSArMSw1IEBACiAv
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9n
cmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxl
IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3
aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApA
QCAtOTA5LDcgKzkwOSwxMCBAQAogCQkJfSBlbHNlIHsKIAkJCQkvLyBvbmx5IHdhbnQgdG8gcmVh
Y2ggaGVyZSB3aGVuIG5vIGVycm9ycyBhcmUgcmVwb3J0ZWQKIAkJCQlzb3VyY2VUeXBlLnN1cGVy
Y2xhc3MgPSBzdXBlcmNsYXNzOwotCQkJCXNvdXJjZVR5cGUudHlwZUJpdHMgfD0gc3VwZXJjbGFz
cy50eXBlQml0czsKKwkJCQlzb3VyY2VUeXBlLnR5cGVCaXRzIHw9IChzdXBlcmNsYXNzLnR5cGVC
aXRzICYgVHlwZUlkcy5Jbmhlcml0YWJsZUJpdHMpOworCQkJCS8vIGZ1cnRoZXIgYW5hbHlzaXMg
YWdhaW5zdCB3aGl0ZSBsaXN0cyBmb3IgdGhlIHVubGlrZWx5IGNhc2Ugd2UgYXJlIGNvbXBpbGlu
ZyBqYXZhLmlvLio6CisJCQkJaWYgKHNvdXJjZVR5cGUuaGFzVHlwZUJpdChUeXBlSWRzLkJpdEF1
dG9DbG9zZWFibGV8VHlwZUlkcy5CaXRDbG9zZWFibGUpKQorCQkJCQlzb3VyY2VUeXBlLnR5cGVC
aXRzIHw9IHNvdXJjZVR5cGUuYXBwbHlDbG9zZWFibGVXaGl0ZWxpc3RzKCk7CiAJCQkJcmV0dXJu
IHRydWU7CiAJCQl9CiAJCX0KQEAgLTEwMjUsNyArMTAyOCw3IEBACiAJCQkJbm9Qcm9ibGVtcyAm
PSBzdXBlckludGVyZmFjZVJlZi5yZXNvbHZlZFR5cGUuaXNWYWxpZEJpbmRpbmcoKTsKIAkJCX0K
IAkJCS8vIG9ubHkgd2FudCB0byByZWFjaCBoZXJlIHdoZW4gbm8gZXJyb3JzIGFyZSByZXBvcnRl
ZAotCQkJc291cmNlVHlwZS50eXBlQml0cyB8PSBzdXBlckludGVyZmFjZS50eXBlQml0czsKKwkJ
CXNvdXJjZVR5cGUudHlwZUJpdHMgfD0gKHN1cGVySW50ZXJmYWNlLnR5cGVCaXRzICYgVHlwZUlk
cy5Jbmhlcml0YWJsZUJpdHMpOwogCQkJaW50ZXJmYWNlQmluZGluZ3NbY291bnQrK10gPSBzdXBl
ckludGVyZmFjZTsKIAkJfQogCQkvLyBob2xkIG9udG8gYWxsIGNvcnJlY3RseSByZXNvbHZlZCBz
dXBlcmludGVyZmFjZXMKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvUmVmZXJlbmNlQmluZGlu
Zy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2xvb2t1cC9SZWZlcmVuY2VCaW5kaW5nLmphdmEKaW5kZXggNzVkZTg1
NC4uMDU3ZmI0ZiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9SZWZlcmVuY2VCaW5kaW5nLmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2xvb2t1cC9SZWZlcmVuY2VCaW5kaW5nLmphdmEKQEAgLTE0NjksNCAr
MTQ2OSwzMSBAQAogcHVibGljIEZpZWxkQmluZGluZ1tdIHVuUmVzb2x2ZWRGaWVsZHMoKSB7CiAJ
cmV0dXJuIEJpbmRpbmcuTk9fRklFTERTOwogfQorCisvKgorICogSWYgYSB0eXBlIC0ga25vd24g
dG8gYmUgYSBDbG9zZWFibGUgLSBpcyBtZW50aW9uZWQgaW4gb25lIG9mIG91ciB3aGl0ZSBsaXN0
cworICogYW5zd2VyIHRoZSB0eXBlQml0IGZvciB0aGUgd2hpdGUgbGlzdCAoQml0V3JhcHBlckNs
b3NlYWJsZSBvciBCaXRSZXNvdXJjZUZyZWVDbG9zZWFibGUpLgorICovCitwcm90ZWN0ZWQgaW50
IGFwcGx5Q2xvc2VhYmxlV2hpdGVsaXN0cygpIHsKKwlzd2l0Y2ggKHRoaXMuY29tcG91bmROYW1l
Lmxlbmd0aCkgeworCQljYXNlIDM6CisJCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoVHlwZUNv
bnN0YW50cy5KQVZBLCB0aGlzLmNvbXBvdW5kTmFtZVswXSkpIHsKKwkJCQlpZiAoQ2hhck9wZXJh
dGlvbi5lcXVhbHMoVHlwZUNvbnN0YW50cy5JTywgdGhpcy5jb21wb3VuZE5hbWVbMV0pKSB7CisJ
CQkJCWNoYXJbXSBzaW1wbGVOYW1lID0gdGhpcy5jb21wb3VuZE5hbWVbMl07CisJCQkJCWludCBs
ID0gVHlwZUNvbnN0YW50cy5KQVZBX0lPX1dSQVBQRVJfQ0xPU0VBQkxFUy5sZW5ndGg7CisJCQkJ
CWZvciAoaW50IGkgPSAwOyBpIDwgbDsgaSsrKSB7CisJCQkJCQlpZiAoQ2hhck9wZXJhdGlvbi5l
cXVhbHMoc2ltcGxlTmFtZSwgVHlwZUNvbnN0YW50cy5KQVZBX0lPX1dSQVBQRVJfQ0xPU0VBQkxF
U1tpXSkpCisJCQkJCQkJcmV0dXJuIFR5cGVJZHMuQml0V3JhcHBlckNsb3NlYWJsZTsKKwkJCQkJ
fQorCQkJCQlsID0gVHlwZUNvbnN0YW50cy5KQVZBX0lPX1JFU09VUkNFX0ZSRUVfQ0xPU0VBQkxF
Uy5sZW5ndGg7CisJCQkJCWZvciAoaW50IGkgPSAwOyBpIDwgbDsgaSsrKSB7CisJCQkJCQlpZiAo
Q2hhck9wZXJhdGlvbi5lcXVhbHMoc2ltcGxlTmFtZSwgVHlwZUNvbnN0YW50cy5KQVZBX0lPX1JF
U09VUkNFX0ZSRUVfQ0xPU0VBQkxFU1tpXSkpCisJCQkJCQkJcmV0dXJuIFR5cGVJZHMuQml0UmVz
b3VyY2VGcmVlQ2xvc2VhYmxlOworCQkJCQl9CisJCQkJfQorCQkJfQorCQkJYnJlYWs7CisJfQor
CXJldHVybiAwOworfQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlQ29uc3RhbnRz
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVDb25zdGFudHMuamF2YQppbmRleCAwYmJlZjQ3Li5l
Zjc3ZjRjIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVDb25zdGFudHMuamF2YQorKysg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvbG9va3VwL1R5cGVDb25zdGFudHMuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBv
cmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJNIENvcnBv
cmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0g
YW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5k
ZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNo
IGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0x
NTQsNiArMTU0LDIzIEBACiAJfTsKIAljaGFyW11bXSBKQVZBX0xBTkdfQVVUT0NMT1NFQUJMRSA9
ICB7SkFWQSwgTEFORywgIkF1dG9DbG9zZWFibGUiLnRvQ2hhckFycmF5KCl9OyAvLyROT04tTkxT
LTEkCiAJY2hhcltdIENMT1NFID0gImNsb3NlIi50b0NoYXJBcnJheSgpOyAvLyROT04tTkxTLTEk
CisJLy8gd2hpdGUgbGlzdHMgb2YgY2xvc2VhYmxlczoKKwljaGFyW11bXSBKQVZBX0lPX1dSQVBQ
RVJfQ0xPU0VBQkxFUyA9IG5ldyBjaGFyW11bXSB7CisJCSJCdWZmZXJlZElucHV0U3RyZWFtIi50
b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJCdWZmZXJlZE91dHB1dFN0cmVhbSIudG9D
aGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiQnVmZmVyZWRSZWFkZXIiLnRvQ2hhckFycmF5
KCksIC8vJE5PTi1OTFMtMSQKKwkJIkJ1ZmZlcmVkV3JpdGVyIi50b0NoYXJBcnJheSgpLCAvLyRO
T04tTkxTLTEkCisJCSJJbnB1dFN0cmVhbVJlYWRlciIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5M
Uy0xJAorCQkiUHJpbnRXcml0ZXIiLnRvQ2hhckFycmF5KCksICAvLyROT04tTkxTLTEkCisJfTsK
KwljaGFyW11bXSBKQVZBX0lPX1JFU09VUkNFX0ZSRUVfQ0xPU0VBQkxFUyA9IG5ldyBjaGFyW11b
XSB7CQkJCisJCSJTdHJpbmdSZWFkZXIiLnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwkJ
IlN0cmluZ1dyaXRlciIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiQnl0ZUFycmF5
SW5wdXRTdHJlYW0iLnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwkJIkJ5dGVBcnJheU91
dHB1dFN0cmVhbSIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiQ2hhckFycmF5UmVh
ZGVyIi50b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJDaGFyQXJyYXlXcml0ZXIiLnRv
Q2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwl9OwogCiAJLy8gQ29uc3RyYWludHMgZm9yIGdl
bmVyaWMgdHlwZSBhcmd1bWVudCBpbmZlcmVuY2UKIAlpbnQgQ09OU1RSQUlOVF9FUVVBTCA9IDA7
CQkvLyBBY3R1YWwgPSBGb3JtYWwKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZUlkcy5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlSWRzLmphdmEKaW5kZXggN2ZmZjQzNC4uZDZlYzk0NSAx
MDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlSWRzLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1
cC9UeXBlSWRzLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgot
ICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgor
ICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgog
ICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5n
IG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUg
RWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRp
c3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtMjA3LDQgKzIwNywxOSBAQAogCSAq
IEBzZWUgUmVmZXJlbmNlQmluZGluZyNoYXNUeXBlQml0KGludCkKIAkgKi8KIAlmaW5hbCBpbnQg
Qml0Q2xvc2VhYmxlID0gMjsKKwkvKioKKwkgKiBCaXQgZm9yIG1lbWJlcnMgb2YgYSB3aGl0ZSBs
aXN0OgorCSAqIFN1YnR5cGVzIG9mIENsb3NlYWJsZSB0aGF0IHdyYXAgYW5vdGhlciByZXNvdXJj
ZSB3aXRob3V0IGRpcmVjdGx5IGhvbGRpbmcgYW55IE9TIHJlc291cmNlcy4gCisJICovCisJZmlu
YWwgaW50IEJpdFdyYXBwZXJDbG9zZWFibGUgPSA0OworCS8qKgorCSAqIEJpdCBmb3IgbWVtYmVy
cyBvZiBhIHdoaXRlIGxpc3Q6CisJICogU3VidHlwZXMgb2YgQ2xvc2VhYmxlIHRoYXQgZG8gbm90
IGhvbGQgYW4gT1MgcmVzb3VyY2UgdGhhdCBuZWVkcyB0byBiZSByZWxlYXNlZC4KKwkgKi8KKwlm
aW5hbCBpbnQgQml0UmVzb3VyY2VGcmVlQ2xvc2VhYmxlID0gODsKKwkKKwkvKioKKwkgKiBTZXQg
b2YgdHlwZSBiaXRzIHRoYXQgc2hvdWxkIGJlIGluaGVyaXRlZCBieSBhbnkgc3ViIHR5cGVzLgor
CSAqLworCWZpbmFsIGludCBJbmhlcml0YWJsZUJpdHMgPSBCaXRBdXRvQ2xvc2VhYmxlIHwgQml0
Q2xvc2VhYmxlOwogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlVmFyaWFibGVCaW5k
aW5nLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVWYXJpYWJsZUJpbmRpbmcuamF2YQppbmRleCA5
OTVmMzBlLi5iZDY5OGYzIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVWYXJpYWJsZUJp
bmRpbmcuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVWYXJpYWJsZUJpbmRpbmcuamF2YQpA
QCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMp
IDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMp
IDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJl
c2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBh
cmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBM
aWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQg
aXMgYXZhaWxhYmxlIGF0CkBAIC0zMTYsMTEgKzMxNiwxMSBAQAogCQkJLy8gaW5pdGlhbGl6ZSBm
cm9tIGJvdW5kcwogCQkJdGhpcy50eXBlQml0cyA9IDA7CiAJCQlpZiAodGhpcy5zdXBlcmNsYXNz
ICE9IG51bGwgJiYgdGhpcy5zdXBlcmNsYXNzLmhhc1R5cGVCaXQoflR5cGVJZHMuQml0VW5pbml0
aWFsaXplZCkpCi0JCQkJdGhpcy50eXBlQml0cyB8PSB0aGlzLnN1cGVyY2xhc3MudHlwZUJpdHM7
CisJCQkJdGhpcy50eXBlQml0cyB8PSAodGhpcy5zdXBlcmNsYXNzLnR5cGVCaXRzICYgVHlwZUlk
cy5Jbmhlcml0YWJsZUJpdHMpOwogCQkJaWYgKHRoaXMuc3VwZXJJbnRlcmZhY2VzICE9IG51bGwp
CiAJCQkJZm9yIChpbnQgaSA9IDAsIGwgPSB0aGlzLnN1cGVySW50ZXJmYWNlcy5sZW5ndGg7IGkg
PCBsOyBpKyspCiAJCQkJCWlmICh0aGlzLnN1cGVySW50ZXJmYWNlc1tpXS5oYXNUeXBlQml0KH5U
eXBlSWRzLkJpdFVuaW5pdGlhbGl6ZWQpKQotCQkJCQkJdGhpcy50eXBlQml0cyB8PSB0aGlzLnN1
cGVySW50ZXJmYWNlc1tpXS50eXBlQml0czsKKwkJCQkJCXRoaXMudHlwZUJpdHMgfD0gKHRoaXMu
c3VwZXJJbnRlcmZhY2VzW2ldLnR5cGVCaXRzICYgVHlwZUlkcy5Jbmhlcml0YWJsZUJpdHMpOwog
CQl9CiAJCXJldHVybiAodGhpcy50eXBlQml0cyAmIGJpdCkgIT0gMDsKIAl9CmRpZmYgLS1naXQg
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvbG9va3VwL1dpbGRjYXJkQmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9XaWxk
Y2FyZEJpbmRpbmcuamF2YQppbmRleCAwMWYzNjllLi5iODg3MTk2IDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvbG9va3VwL1dpbGRjYXJkQmluZGluZy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvV2lsZGNh
cmRCaW5kaW5nLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgot
ICogQ29weXJpZ2h0IChjKSAyMDA1LCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgor
ICogQ29weXJpZ2h0IChjKSAyMDA1LCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgog
ICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5n
IG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUg
RWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRp
c3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtNDI5LDExICs0MjksMTEgQEAKIAkJ
CS8vIGluaXRpYWxpemUgZnJvbSB1cHBlciBib3VuZHMKIAkJCXRoaXMudHlwZUJpdHMgPSAwOwog
CQkJaWYgKHRoaXMuc3VwZXJjbGFzcyAhPSBudWxsICYmIHRoaXMuc3VwZXJjbGFzcy5oYXNUeXBl
Qml0KH5UeXBlSWRzLkJpdFVuaW5pdGlhbGl6ZWQpKQotCQkJCXRoaXMudHlwZUJpdHMgfD0gdGhp
cy5zdXBlcmNsYXNzLnR5cGVCaXRzOworCQkJCXRoaXMudHlwZUJpdHMgfD0gKHRoaXMuc3VwZXJj
bGFzcy50eXBlQml0cyAmIFR5cGVJZHMuSW5oZXJpdGFibGVCaXRzKTsKIAkJCWlmICh0aGlzLnN1
cGVySW50ZXJmYWNlcyAhPSBudWxsKQogCQkJCWZvciAoaW50IGkgPSAwLCBsID0gdGhpcy5zdXBl
ckludGVyZmFjZXMubGVuZ3RoOyBpIDwgbDsgaSsrKQogCQkJCQlpZiAodGhpcy5zdXBlckludGVy
ZmFjZXNbaV0uaGFzVHlwZUJpdCh+VHlwZUlkcy5CaXRVbmluaXRpYWxpemVkKSkKLQkJCQkJCXRo
aXMudHlwZUJpdHMgfD0gdGhpcy5zdXBlckludGVyZmFjZXNbaV0udHlwZUJpdHM7CisJCQkJCQl0
aGlzLnR5cGVCaXRzIHw9ICh0aGlzLnN1cGVySW50ZXJmYWNlc1tpXS50eXBlQml0cyAmIFR5cGVJ
ZHMuSW5oZXJpdGFibGVCaXRzKTsKIAkJfQogCQlyZXR1cm4gKHRoaXMudHlwZUJpdHMgJiBiaXQp
ICE9IDA7CiAJfQo=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>209107</attachid>
            <date>2012-01-05 17:02:00 -0500</date>
            <delta_ts>2012-01-07 19:26:38 -0500</delta_ts>
            <desc>Tests &amp; fix v0.6</desc>
            <filename>Bug_358903_v0.6.patch</filename>
            <type>text/plain</type>
            <size>60113</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1RyeVdpdGhSZXNvdXJj
ZXNTdGF0ZW1lbnRUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxl
ci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9UcnlX
aXRoUmVzb3VyY2VzU3RhdGVtZW50VGVzdC5qYXZhCmluZGV4IGYyMWE1N2YuLmVhNWY0NGIgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1RyeVdpdGhSZXNvdXJjZXNT
dGF0ZW1lbnRUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGls
ZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vVHJ5
V2l0aFJlc291cmNlc1N0YXRlbWVudFRlc3QuamF2YQpAQCAtMTQsOCArMTQsMTMgQEAKICAqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5j
b21waWxlci5yZWdyZXNzaW9uOwogCitpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjsKK2ltcG9y
dCBqYXZhLm5ldC5VUkw7CiBpbXBvcnQgamF2YS51dGlsLk1hcDsKIAoraW1wb3J0IG9yZy5lY2xp
cHNlLmNvcmUucnVudGltZS5GaWxlTG9jYXRvcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1
bnRpbWUuUGF0aDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuUGxhdGZvcm07CiBp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSmF2YUNvcmU7CiBpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLmltcGwuQ29tcGlsZXJPcHRpb25zOwogCkBAIC0yMyw3ICsy
OCw3IEBACiBwdWJsaWMgY2xhc3MgVHJ5V2l0aFJlc291cmNlc1N0YXRlbWVudFRlc3QgZXh0ZW5k
cyBBYnN0cmFjdFJlZ3Jlc3Npb25UZXN0IHsKIAogc3RhdGljIHsKLS8vCVRFU1RTX05BTUVTID0g
bmV3IFN0cmluZ1tdIHsgInRlc3QwNTZ0aHJvdyJ9OworLy8JVEVTVFNfTkFNRVMgPSBuZXcgU3Ry
aW5nW10geyAidGVzdDA2MSJ9OwogLy8JVEVTVFNfTlVNQkVSUyA9IG5ldyBpbnRbXSB7IDUwIH07
CiAvLwlURVNUU19SQU5HRSA9IG5ldyBpbnRbXSB7IDExLCAtMSB9OwogfQpAQCAtNDQ0NCw3ICs0
NDQ5LDcgQEAKIAkJb3B0aW9ucyk7CiB9CiAvLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5p
bmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCi0vLyBjbG9zZWQgaW4gZGVhZCBjb2Rl
CisvLyBwcm9wZXJseSBjbG9zZWQsIGRlYWQgY29kZSBpbiBiZXR3ZWVuCiBwdWJsaWMgdm9pZCB0
ZXN0MDU2cigpIHsKIAlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwogCW9wdGlv
bnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJP
cHRpb25zLkVSUk9SKTsKQEAgLTUzNTQsNyArNTM1OSw0MjQgQEAKIAkJIlg6On5YXG4iICsgCiAJ
CSJ0cnVlIik7CiB9Ci0KKy8vIEJ1ZyAzNTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBv
cnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5ncworLy8gQnVnIDM2MDkwOCAtIEF2b2lkIHJlc291
cmNlIGxlYWsgd2FybmluZyB3aGVuIHRoZSB1bmRlcmx5aW5nL2NoYWluZWQgcmVzb3VyY2UgaXMg
Y2xvc2VkIGV4cGxpY2l0bHkKKy8vIGEgcmVzb3VyY2Ugd3JhcHBlciBpcyBub3QgY2xvc2VkIGJ1
dCB0aGUgdW5kZXJseWluZyByZXNvdXJjZSBpcworcHVibGljIHZvaWQgdGVzdDA2MWEoKSB7CisJ
TWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxl
ck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMu
RVJST1IpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50
aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1
bkNvbmZvcm1UZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0
IGphdmEuaW8uRmlsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJl
YW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlSW5wdXRTdHJlYW07XG4iICsKKwkJCSJp
bXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIg
KworCQkJIiAgICB2b2lkIGZvbygpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAg
ICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKKwkJCSIgICAgICAg
IEZpbGVJbnB1dFN0cmVhbSBmaWxlU3RyZWFtICA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSk7
XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzID0gbmV3IEJ1ZmZlcmVk
SW5wdXRTdHJlYW0oZmlsZVN0cmVhbSk7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRT
dHJlYW0gZG91YmxlV3JhcCA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGJpcyk7XG4iICsKKwkJ
CSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihiaXMuYXZhaWxhYmxlKCkpO1xuIiArCisJCQki
ICAgICAgICBmaWxlU3RyZWFtLmNsb3NlKCk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAg
IHZvaWQgaW5saW5lKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmls
ZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAgRmlsZUlu
cHV0U3RyZWFtIGZpbGVTdHJlYW07XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJl
YW0gYmlzID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oZmlsZVN0cmVhbSA9IG5ldyBGaWxlSW5w
dXRTdHJlYW0oZmlsZSkpO1xuIiArCisJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oYmlz
LmF2YWlsYWJsZSgpKTtcbiIgKworCQkJIiAgICAgICAgZmlsZVN0cmVhbS5jbG9zZSgpO1xuIiAr
CisJCQkiICAgIH1cbiIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdb
XSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICB0cnkge1xuIiAr
CisJCQkiICAgICAgICAgICAgbmV3IFgoKS5mb28oKTtcbiIgKworCQkJIiAgICAgICAgfSBjYXRj
aCAoSU9FeGNlcHRpb24gZXgpIHsiICsKKwkJCSIgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50
bG4oXCJHb3QgSU8gRXhjZXB0aW9uXCIpO1xuIiArCisJCQkiICAgICAgICB9XG4iICsKKwkJCSIg
ICAgfVxuIiArCisJCQkifVxuIgorCQl9LAorCQkiR290IElPIEV4Y2VwdGlvbiIsCisJCW51bGws
CisJCXRydWUsCisJCW51bGwsCisJCW9wdGlvbnMsCisJCW51bGwpOworfQorLy8gQnVnIDM1ODkw
MyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdz
CisvLyBhIGNsb3NlYWJsZSB3aXRob3V0IE9TIHJlc291cmNlIGlzIG5vdCBjbG9zZWQKK3B1Ymxp
YyB2b2lkIHRlc3QwNjFiKCkgeworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7
CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3Nl
YWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlv
bnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0
aW9ucy5FUlJPUik7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJ
CSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZhLmlvLlN0cmluZ1JlYWRlcjtcbiIgKworCQkJImlt
cG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiAr
CisJCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAg
ICAgU3RyaW5nUmVhZGVyIHN0cmluZyAgPSBuZXcgU3RyaW5nUmVhZGVyKFwiY29udGVudFwiKTtc
biIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKHN0cmluZy5yZWFkKCkpO1xuIiAr
CisJCQkiICAgIH1cbiIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdb
XSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBuZXcgWCgpLmZv
bygpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIjk5IiwgLy8gY2hh
cmFjdGVyICdjJworCQludWxsLAorCQl0cnVlLAorCQludWxsLAorCQlvcHRpb25zLAorCQludWxs
KTsKK30KKy8vIEJ1ZyAzNTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVz
b3VyY2UgbGVhayB3YXJuaW5ncworLy8gYSByZXNvdXJjZSB3cmFwcGVyIGlzIG5vdCBjbG9zZWQg
YnV0IHRoZSB1bmRlcmx5aW5nIGNsb3NlYWJsZSBpcyByZXNvdXJjZS1mcmVlCitwdWJsaWMgdm9p
ZCB0ZXN0MDYxYygpIHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9w
dGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUs
IENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9Q
VElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMu
RVJST1IpOworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5q
YXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJlZFJlYWRlcjtcbiIgKworCQkJImltcG9y
dCBqYXZhLmlvLlN0cmluZ1JlYWRlcjtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0
aW9uO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICAgIHZvaWQgZm9vKCkg
dGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgU3RyaW5nUmVhZGVyIGlucHV0
ID0gbmV3IFN0cmluZ1JlYWRlcihcImNvbnRlbnRcIik7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZl
cmVkUmVhZGVyIGJyID0gbmV3IEJ1ZmZlcmVkUmVhZGVyKGlucHV0KTtcbiIgKworCQkJIiAgICAg
ICAgQnVmZmVyZWRSZWFkZXIgZG91YmxlV3JhcCA9IG5ldyBCdWZmZXJlZFJlYWRlcihicik7XG4i
ICsKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihici5yZWFkKCkpO1xuIiArCisJCQki
ICAgIH1cbiIgKworCQkJIiAgICB2b2lkIGlubGluZSgpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4i
ICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkUmVhZGVyIGJyID0gbmV3IEJ1ZmZlcmVkUmVhZGVyKG5l
dyBTdHJpbmdSZWFkZXIoXCJjb250ZW50XCIpKTtcbiIgKworCQkJIiAgICAgICAgU3lzdGVtLm91
dC5wcmludGxuKGJyLnJlYWQoKSk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIHB1Ymxp
YyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4i
ICsKKwkJCSIgICAgICAgIG5ldyBYKCkuZm9vKCk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQki
fVxuIgorCQl9LAorCQkiOTkiLAorCQludWxsLAorCQl0cnVlLAorCQludWxsLAorCQlvcHRpb25z
LAorCQludWxsKTsKK30KKy8vIEJ1ZyAzNTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBv
cnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5ncworLy8gYSByZXNvdXJjZSB3cmFwcGVyIGlzIG5v
dCBjbG9zZWQgbmVpdGhlciBpcyB0aGUgdW5kZXJseWluZyByZXNvdXJjZQorcHVibGljIHZvaWQg
dGVzdDA2MWQoKSB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRp
b25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBD
b21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJ
T05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLldB
Uk5JTkcpOworCXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlgu
amF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlv
LkJ1ZmZlcmVkSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlSW5wdXRT
dHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1
YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICB2b2lkIGZvbygpIHRocm93cyBJT0V4Y2VwdGlv
biB7XG4iICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7
XG4iICsKKwkJCSIgICAgICAgIEZpbGVJbnB1dFN0cmVhbSBmaWxlU3RyZWFtICA9IG5ldyBGaWxl
SW5wdXRTdHJlYW0oZmlsZSk7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0g
YmlzID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oZmlsZVN0cmVhbSk7XG4iICsKKwkJCSIgICAg
ICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gZG91YmxlV3JhcCA9IG5ldyBCdWZmZXJlZElucHV0U3Ry
ZWFtKGJpcyk7XG4iICsKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihiaXMuYXZhaWxh
YmxlKCkpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICB2b2lkIGlubGluZSgpIHRocm93
cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwi
c29tZWZpbGVcIik7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzMiA9
IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSkpO1xuIiAr
CisJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oYmlzMi5hdmFpbGFibGUoKSk7XG4iICsK
KwkJCSIgICAgfVxuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1td
IGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIHRyeSB7XG4iICsK
KwkJCSIgICAgICAgICAgICBuZXcgWCgpLmZvbygpO1xuIiArCisJCQkiICAgICAgICB9IGNhdGNo
IChJT0V4Y2VwdGlvbiBleCkgeyIgKworCQkJIiAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRs
bihcIkdvdCBJTyBFeGNlcHRpb25cIik7XG4iICsKKwkJCSIgICAgICAgIH1cbiIgKworCQkJIiAg
ICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSItLS0tLS0tLS0tXG4iICsgCisJCSIxLiBFUlJP
UiBpbiBYLmphdmEgKGF0IGxpbmUgMTApXG4iICsgCisJCSIJQnVmZmVyZWRJbnB1dFN0cmVhbSBk
b3VibGVXcmFwID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oYmlzKTtcbiIgKyAKKwkJIgkgICAg
ICAgICAgICAgICAgICAgIF5eXl5eXl5eXl5cbiIgKyAKKwkJIlJlc291cmNlIGxlYWs6IFwnZG91
YmxlV3JhcFwnIGlzIG5ldmVyIGNsb3NlZFxuIiArIAorCQkiLS0tLS0tLS0tLVxuIiArIAorCQki
Mi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDE1KVxuIiArIAorCQkiCUJ1ZmZlcmVkSW5wdXRT
dHJlYW0gYmlzMiA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKG5ldyBGaWxlSW5wdXRTdHJlYW0o
ZmlsZSkpO1xuIiArIAorCQkiCSAgICAgICAgICAgICAgICAgICAgXl5eXlxuIiArIAorCQkiUmVz
b3VyY2UgbGVhazogXCdiaXMyXCcgaXMgbmV2ZXIgY2xvc2VkXG4iICsgCisJCSItLS0tLS0tLS0t
XG4iLAorCQludWxsLAorCQl0cnVlLAorCQlvcHRpb25zKTsKK30KKy8vIEJ1ZyAzNTg5MDMgLSBG
aWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5ncworLy8g
QnVnIDM2MTA3MyAtIEF2b2lkIHJlc291cmNlIGxlYWsgd2FybmluZyB3aGVuIHRoZSB0b3AgbGV2
ZWwgcmVzb3VyY2UgaXMgY2xvc2VkIGV4cGxpY2l0bHkKKy8vIGEgcmVzb3VyY2Ugd3JhcHBlciBp
cyBjbG9zZWQgY2xvc2luZyBhbHNvIHRoZSB1bmRlcmx5aW5nIHJlc291cmNlCitwdWJsaWMgdm9p
ZCB0ZXN0MDYxZSgpIHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9w
dGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUs
IENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9Q
VElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMu
RVJST1IpOworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5q
YXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8u
QnVmZmVyZWRJbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkZpbGVJbnB1dFN0
cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVi
bGljIGNsYXNzIFgge1xuIiArCisJCQkiICAgIEZpbGVJbnB1dFN0cmVhbSBmaXM7IiArCisJCQki
ICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmls
ZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAgRmlsZUlu
cHV0U3RyZWFtIGZpbGVTdHJlYW0gID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKTtcbiIgKwor
CQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0
cmVhbShmaWxlU3RyZWFtKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBk
b3VibGVXcmFwID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oYmlzKTtcbiIgKworCQkJIiAgICAg
ICAgU3lzdGVtLm91dC5wcmludGxuKGJpcy5hdmFpbGFibGUoKSk7XG4iICsKKwkJCSIgICAgICAg
IGJpcy5jbG9zZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICB2b2lkIGlubGluZSgp
IHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBG
aWxlKFwic29tZWZpbGVcIik7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0g
YmlzMiA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGZpcyA9IG5ldyBGaWxlSW5wdXRTdHJlYW0o
ZmlsZSkpO1xuIiArIC8vIGZpZWxkIGFzc2lnbm1lbnQKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQu
cHJpbnRsbihiaXMyLmF2YWlsYWJsZSgpKTtcbiIgKworCQkJIiAgICAgICAgYmlzMi5jbG9zZSgp
O1xuIiArCisJCQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0gZmlsZVN0cmVhbSAgPSBudWxsO1xu
IiArCisJCQkiICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGJpczMgPSBuZXcgQnVmZmVyZWRJ
bnB1dFN0cmVhbShmaWxlU3RyZWFtID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKSk7XG4iICsK
KwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihiaXMzLmF2YWlsYWJsZSgpKTtcbiIgKwor
CQkJIiAgICAgICAgYmlzMy5jbG9zZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICBw
dWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRpb24g
e1xuIiArCisJCQkiICAgICAgICB0cnkge1xuIiArCisJCQkiICAgICAgICAgICAgbmV3IFgoKS5m
b28oKTtcbiIgKworCQkJIiAgICAgICAgfSBjYXRjaCAoSU9FeGNlcHRpb24gZXgpIHsiICsKKwkJ
CSIgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oXCJHb3QgSU8gRXhjZXB0aW9uXCIpO1xu
IiArCisJCQkiICAgICAgICB9XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCQl9LAor
CQkiR290IElPIEV4Y2VwdGlvbiIsCisJCW51bGwsCisJCXRydWUsCisJCW51bGwsCisJCW9wdGlv
bnMsCisJCW51bGwpOworfQorLy8gQnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmlt
cG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCisvLyBCdWcgMzYxMDczIC0gQXZvaWQgcmVz
b3VyY2UgbGVhayB3YXJuaW5nIHdoZW4gdGhlIHRvcCBsZXZlbCByZXNvdXJjZSBpcyBjbG9zZWQg
ZXhwbGljaXRseQorLy8gYSByZXNvdXJjZSB3cmFwcGVyIGlzIGNsb3NlZCBjbG9zaW5nIGFsc28g
dGhlIHVuZGVybHlpbmcgcmVzb3VyY2UgLSBvcmlnaW5hbCB0ZXN0IGNhc2UKK3B1YmxpYyB2b2lk
IHRlc3QwNjFmKCkgdGhyb3dzIElPRXhjZXB0aW9uIHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBp
bGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0
VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQo
Q29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxl
LCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCVVSTCB1cmwgPSBGaWxlTG9jYXRvci50b0ZpbGVV
UkwoRmlsZUxvY2F0b3IuZmluZChQbGF0Zm9ybS5nZXRCdW5kbGUoIm9yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLmNvbXBpbGVyIiksIG5ldyBQYXRoKCJNRVRBLUlORi9NQU5JRkVTVC5NRiIpLCBu
dWxsKSk7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmph
dmEiLAorCQkJImltcG9ydCBqYXZhLmlvLklucHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGph
dmEuaW8uSW5wdXRTdHJlYW1SZWFkZXI7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJl
ZFJlYWRlcjtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQki
aW1wb3J0IGphdmEubmV0LlVSTDtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJ
IiAgICBib29sZWFuIGxvYWRVUkwoZmluYWwgVVJMIHVybCkgdGhyb3dzIElPRXhjZXB0aW9uIHtc
biIgKyAKKwkJCSIgICAgSW5wdXRTdHJlYW0gc3RyZWFtID0gbnVsbDtcbiIgKyAKKwkJCSIgICAg
ICAgIEJ1ZmZlcmVkUmVhZGVyIHJlYWRlciA9IG51bGw7XG4iICsgCisJCQkiICAgICAgICB0cnkg
e1xuIiArIAorCQkJIiAgICAgICAgICAgIHN0cmVhbSA9IHVybC5vcGVuU3RyZWFtKCk7XG4iICsg
CisJCQkiICAgICAgICAgICAgcmVhZGVyID0gbmV3IEJ1ZmZlcmVkUmVhZGVyKG5ldyBJbnB1dFN0
cmVhbVJlYWRlcihzdHJlYW0pKTtcbiIgKyAKKwkJCSIgICAgICAgICAgICBTeXN0ZW0ub3V0LnBy
aW50bG4ocmVhZGVyLnJlYWRMaW5lKCkpO1xuIiArCisJCQkiICAgICAgICB9IGZpbmFsbHkge1xu
IiArIAorCQkJIiAgICAgICAgICAgIHRyeSB7XG4iICsgCisJCQkiICAgICAgICAgICAgICAgIGlm
IChyZWFkZXIgIT0gbnVsbClcbiIgKyAKKwkJCSIgICAgICAgICAgICAgICAgICAgIHJlYWRlci5j
bG9zZSgpO1xuIiArIAorCQkJIiAgICAgICAgICAgIH0gY2F0Y2ggKElPRXhjZXB0aW9uIHgpIHtc
biIgKyAKKwkJCSIgICAgICAgICAgICB9XG4iICsgCisJCQkiICAgICAgICB9XG4iICsgCisJCQki
ICAgICAgICByZXR1cm4gZmFsc2U7IC8vICdzdHJlYW0nIG1heSBub3QgYmUgY2xvc2VkIGF0IHRo
aXMgbG9jYXRpb25cbiIgKyAKKwkJCSIgICAgfVxuIiArIAorCQkJIiAgICBwdWJsaWMgc3RhdGlj
IHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQki
ICAgICAgICB0cnkge1xuIiArCisJCQkiICAgICAgICAgICAgbmV3IFgoKS5sb2FkVVJMKG5ldyBV
UkwoXCIiK3VybC50b1N0cmluZygpKyJcIikpO1xuIiArCisJCQkiICAgICAgICB9IGNhdGNoIChJ
T0V4Y2VwdGlvbiBleCkge1xuIiArCisJCQkiICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxu
KFwiR290IElPIEV4Y2VwdGlvblwiK2V4KTtcbiIgKworCQkJIiAgICAgICAgfVxuIiArCisJCQki
ICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIk1hbmlmZXN0LVZlcnNpb246IDEuMCIsCisJ
CW51bGwsCisJCXRydWUsCisJCW51bGwsCisJCW9wdGlvbnMsCisJCW51bGwpOworfQorLy8gQnVn
IDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdh
cm5pbmdzCisvLyBCdWcgMzYwOTA4IC0gQXZvaWQgcmVzb3VyY2UgbGVhayB3YXJuaW5nIHdoZW4g
dGhlIHVuZGVybHlpbmcvY2hhaW5lZCByZXNvdXJjZSBpcyBjbG9zZWQgZXhwbGljaXRseQorLy8g
RGlmZmVyZW50IHBvaW50cyBpbiBhIHJlc291cmNlIGNoYWluIGFyZSBjbG9zZWQKK3B1YmxpYyB2
b2lkIHRlc3QwNjFnKCkgeworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJ
b3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJs
ZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMu
T1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9u
cy5FUlJPUik7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQki
WC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEu
aW8uQnVmZmVyZWRJbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkZpbGVJbnB1
dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQki
cHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICAgIHZvaWQgY2xvc2VNaWRkbGUoKSB0aHJvd3Mg
SU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNv
bWVmaWxlXCIpO1xuIiArCisJCQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0gZmlsZVN0cmVhbSAg
PSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpO1xuIiArCisJCQkiICAgICAgICBCdWZmZXJlZElu
cHV0U3RyZWFtIGJpcyA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGZpbGVTdHJlYW0pO1xuIiAr
CisJCQkiICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGRvdWJsZVdyYXAgPSBuZXcgQnVmZmVy
ZWRJbnB1dFN0cmVhbShiaXMpO1xuIiArCisJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4o
YmlzLmF2YWlsYWJsZSgpKTtcbiIgKworCQkJIiAgICAgICAgYmlzLmNsb3NlKCk7XG4iICsKKwkJ
CSIgICAgfVxuIiArCisJCQkiICAgIHZvaWQgY2xvc2VPdXRlcigpIHRocm93cyBJT0V4Y2VwdGlv
biB7XG4iICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZTIgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIp
O1xuIiArCisJCQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0gZmlsZVN0cmVhbTIgID0gbmV3IEZp
bGVJbnB1dFN0cmVhbShmaWxlMik7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJl
YW0gYmlzMiA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGZpbGVTdHJlYW0yKTtcbiIgKworCQkJ
IiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFwMiA9IG5ldyBCdWZmZXJlZElu
cHV0U3RyZWFtKGJpczIpO1xuIiArCisJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oYmlz
Mi5hdmFpbGFibGUoKSk7XG4iICsKKwkJCSIgICAgICAgIGRvdWJsZVdyYXAyLmNsb3NlKCk7XG4i
ICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIHZvaWQgbmV2ZXJDbG9zZWQoKSB0aHJvd3MgSU9F
eGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBGaWxlIGZpbGUzID0gbmV3IEZpbGUoXCJzb21l
ZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAgRmlsZUlucHV0U3RyZWFtIGZpbGVTdHJlYW0zICA9
IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZTMpO1xuIiArCisJCQkiICAgICAgICBCdWZmZXJlZElu
cHV0U3RyZWFtIGJpczMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShmaWxlU3RyZWFtMyk7XG4i
ICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gZG91YmxlV3JhcDMgPSBuZXcgQnVm
ZmVyZWRJbnB1dFN0cmVhbShiaXMzKTtcbiIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmlu
dGxuKGRvdWJsZVdyYXAzLmF2YWlsYWJsZSgpKTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9
XG4iCisJCX0sCisJCSItLS0tLS0tLS0tXG4iICsgCisJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0
IGxpbmUgMjYpXG4iICsgCisJCSIJQnVmZmVyZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFwMyA9IG5l
dyBCdWZmZXJlZElucHV0U3RyZWFtKGJpczMpO1xuIiArIAorCQkiCSAgICAgICAgICAgICAgICAg
ICAgXl5eXl5eXl5eXl5cbiIgKyAKKwkJIlJlc291cmNlIGxlYWs6IFwnZG91YmxlV3JhcDNcJyBp
cyBuZXZlciBjbG9zZWRcbiIgKyAKKwkJIi0tLS0tLS0tLS1cbiIsCisJCW51bGwsCisJCXRydWUs
CisJCW9wdGlvbnMpOworfQorLy8gQnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmlt
cG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCisvLyBCdWcgMzYwOTA4IC0gQXZvaWQgcmVz
b3VyY2UgbGVhayB3YXJuaW5nIHdoZW4gdGhlIHVuZGVybHlpbmcvY2hhaW5lZCByZXNvdXJjZSBp
cyBjbG9zZWQgZXhwbGljaXRseQorLy8gRGlmZmVyZW50IHBvaW50cyBpbiBhIHJlc291cmNlIGNo
YWluIGFyZSBwb3RlbnRpYWxseSBjbG9zZWQKK3B1YmxpYyB2b2lkIHRlc3QwNjFoKCkgeworCU1h
cCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJP
cHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVS
Uk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlh
bGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJdGhpcy5ydW5O
ZWdhdGl2ZVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQg
amF2YS5pby5GaWxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uQnVmZmVyZWRJbnB1dFN0cmVh
bTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkZpbGVJbnB1dFN0cmVhbTtcbiIgKworCQkJImlt
cG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiAr
CisJCQkiICAgIHZvaWQgY2xvc2VNaWRkbGUoYm9vbGVhbiBiKSB0aHJvd3MgSU9FeGNlcHRpb24g
e1xuIiArCisJCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xu
IiArCisJCQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0gZmlsZVN0cmVhbSAgPSBuZXcgRmlsZUlu
cHV0U3RyZWFtKGZpbGUpO1xuIiArCisJCQkiICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGJp
cyA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGZpbGVTdHJlYW0pO1xuIiArCisJCQkiICAgICAg
ICBCdWZmZXJlZElucHV0U3RyZWFtIGRvdWJsZVdyYXAgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVh
bShiaXMpO1xuIiArCisJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oYmlzLmF2YWlsYWJs
ZSgpKTtcbiIgKworCQkJIiAgICAgICAgaWYgKGIpXG4iICsKKwkJCSIgICAgICAgICAgICBiaXMu
Y2xvc2UoKTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSIgICAgdm9pZCBjbG9zZU91dGVyKGJv
b2xlYW4gYikgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmlsZSBmaWxl
MiA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKKwkJCSIgICAgICAgIEZpbGVJbnB1dFN0
cmVhbSBmaWxlU3RyZWFtMiAgPSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUyKTtcbiIgKworCQkJ
IiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMyID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJl
YW0oZmlsZVN0cmVhbTIpO1xuIiArCisJCQkiICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGRv
dWJsZVdyYXAyID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oYmlzMik7XG4iICsKKwkJCSIgICAg
ICAgIFN5c3RlbS5vdXQucHJpbnRsbihiaXMyLmF2YWlsYWJsZSgpKTtcbiIgKworCQkJIiAgICAg
ICAgaWYgKGIpXG4iICsKKwkJCSIgICAgICAgICAgICBkb3VibGVXcmFwMi5jbG9zZSgpO1xuIiAr
CisJCQkiICAgIH1cbiIgKworCQkJIiAgICB2b2lkIHBvdEFuZERlZihib29sZWFuIGIpIHRocm93
cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZTMgPSBuZXcgRmlsZShc
InNvbWVmaWxlXCIpO1xuIiArCisJCQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0gZmlsZVN0cmVh
bTMgID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlMyk7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZl
cmVkSW5wdXRTdHJlYW0gYmlzMyA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGZpbGVTdHJlYW0z
KTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFwMyA9IG5l
dyBCdWZmZXJlZElucHV0U3RyZWFtKGJpczMpO1xuIiArCisJCQkiICAgICAgICBTeXN0ZW0ub3V0
LnByaW50bG4oZG91YmxlV3JhcDMuYXZhaWxhYmxlKCkpO1xuIiArCisJCQkiICAgICAgICBpZiAo
YikgYmlzMy5jbG9zZSgpO1xuIiArCisJCQkiICAgICAgICBmaWxlU3RyZWFtMy5jbG9zZSgpO1xu
IiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIi0tLS0tLS0tLS1cbiIgKyAK
KwkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxMClcbiIgKyAKKwkJIglCdWZmZXJlZElu
cHV0U3RyZWFtIGRvdWJsZVdyYXAgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShiaXMpO1xuIiAr
IAorCQkiCSAgICAgICAgICAgICAgICAgICAgXl5eXl5eXl5eXlxuIiArIAorCQkiUG90ZW50aWFs
IHJlc291cmNlIGxlYWs6IFwnZG91YmxlV3JhcFwnIG1heSBub3QgYmUgY2xvc2VkXG4iICsgCisJ
CSItLS0tLS0tLS0tXG4iICsgCisJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTkpXG4i
ICsgCisJCSIJQnVmZmVyZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFwMiA9IG5ldyBCdWZmZXJlZElu
cHV0U3RyZWFtKGJpczIpO1xuIiArIAorCQkiCSAgICAgICAgICAgICAgICAgICAgXl5eXl5eXl5e
Xl5cbiIgKyAKKwkJIlBvdGVudGlhbCByZXNvdXJjZSBsZWFrOiBcJ2RvdWJsZVdyYXAyXCcgbWF5
IG5vdCBiZSBjbG9zZWRcbiIgKyAKKwkJIi0tLS0tLS0tLS1cbiIsCisJCW51bGwsCisJCXRydWUs
CisJCW9wdGlvbnMpOworfQorLy8gQnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmlt
cG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCisvLyBsb2NhbCB2YXIgaXMgcmUtdXNlZCBm
b3IgdHdvIGxldmVscyBvZiB3cmFwcGVycworcHVibGljIHZvaWQgdGVzdDA2MWkoKSB7CisJTWFw
IG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9w
dGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJS
T1IpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFs
bHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1bk5l
Z2F0aXZlVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBq
YXZhLmlvLkZpbGU7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JbnB1dFN0cmVhbTtcbiIgKwor
CQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQg
amF2YS5pby5GaWxlSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2Vw
dGlvbjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICB2b2lkIGNsb3Nl
TWlkZGxlKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmlsZSBmaWxl
ID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAgSW5wdXRTdHJlYW0g
c3RyZWFtICA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSk7XG4iICsKKwkJCSIgICAgICAgIHN0
cmVhbSA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKHN0cmVhbSk7XG4iICsKKwkJCSIgICAgICAg
IElucHV0U3RyZWFtIG1pZGRsZTtcbiIgKworCQkJIiAgICAgICAgc3RyZWFtID0gbmV3IEJ1ZmZl
cmVkSW5wdXRTdHJlYW0obWlkZGxlID0gc3RyZWFtKTtcbiIgKworCQkJIiAgICAgICAgU3lzdGVt
Lm91dC5wcmludGxuKHN0cmVhbS5hdmFpbGFibGUoKSk7XG4iICsKKwkJCSIgICAgICAgIG1pZGRs
ZS5jbG9zZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICB2b2lkIGNsb3NlT3V0ZXIo
KSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcg
RmlsZShcInNvbWVmaWxlXCIpO1xuIiArCisJCQkiICAgICAgICBJbnB1dFN0cmVhbSBzdHJlYW0g
ID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKTtcbiIgKworCQkJIiAgICAgICAgc3RyZWFtID0g
bmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oc3RyZWFtKTtcbiIgKworCQkJIiAgICAgICAgc3RyZWFt
ID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oc3RyZWFtKTtcbiIgKworCQkJIiAgICAgICAgU3lz
dGVtLm91dC5wcmludGxuKHN0cmVhbS5hdmFpbGFibGUoKSk7XG4iICsKKwkJCSIgICAgICAgIHN0
cmVhbS5jbG9zZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICB2b2lkIG5ldmVyQ2xv
c2VkKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmlsZSBmaWxlID0g
bmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAgSW5wdXRTdHJlYW0gc3Ry
ZWFtICA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSk7XG4iICsKKwkJCSIgICAgICAgIHN0cmVh
bSA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKHN0cmVhbSk7XG4iICsKKwkJCSIgICAgICAgIHN0
cmVhbSA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKHN0cmVhbSk7XG4iICsKKwkJCSIgICAgICAg
IFN5c3RlbS5vdXQucHJpbnRsbihzdHJlYW0uYXZhaWxhYmxlKCkpO1xuIiArCisJCQkiICAgIH1c
biIgKworCQkJIn1cbiIKKwkJfSwKKwkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJIjEuIEVSUk9SIGlu
IFguamF2YSAoYXQgbGluZSAyNilcbiIgKyAKKwkJIglJbnB1dFN0cmVhbSBzdHJlYW0gID0gbmV3
IEZpbGVJbnB1dFN0cmVhbShmaWxlKTtcbiIgKyAKKwkJIgkgICAgICAgICAgICBeXl5eXl5cbiIg
KyAKKwkJIlJlc291cmNlIGxlYWs6IFwnc3RyZWFtXCcgaXMgbmV2ZXIgY2xvc2VkXG4iICsgCisJ
CSItLS0tLS0tLS0tXG4iLAorCQludWxsLAorCQl0cnVlLAorCQlvcHRpb25zKTsKK30KIHB1Ymxp
YyBzdGF0aWMgQ2xhc3MgdGVzdENsYXNzKCkgewogCXJldHVybiBUcnlXaXRoUmVzb3VyY2VzU3Rh
dGVtZW50VGVzdC5jbGFzczsKIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQWxsb2NhdGlvbkV4
cHJlc3Npb24uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQWxsb2NhdGlvbkV4cHJlc3Npb24uamF2YQppbmRl
eCBlODExZWE5Li4wYTY0MzI0IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0FsbG9jYXRpb25FeHBy
ZXNzaW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9BbGxvY2F0aW9uRXhwcmVzc2lvbi5qYXZhCkBA
IC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykg
MjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykg
MjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVz
ZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFy
ZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExp
Y2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBp
cyBhdmFpbGFibGUgYXQKQEAgLTQ1LDcgKzQ1LDcgQEAKIAlpZiAodGhpcy5hcmd1bWVudHMgIT0g
bnVsbCkgewogCQlmb3IgKGludCBpID0gMCwgY291bnQgPSB0aGlzLmFyZ3VtZW50cy5sZW5ndGg7
IGkgPCBjb3VudDsgaSsrKSB7CiAJCQkvLyBpZiBhcmd1bWVudCBpcyBhbiBBdXRvQ2xvc2VhYmxl
IGluc2VydCBpbmZvIHRoYXQgaXQgKm1heSogYmUgY2xvc2VkIChieSB0aGUgdGFyZ2V0IG1ldGhv
ZCwgaS5lLikKLQkJCWZsb3dJbmZvID0gRmFrZWRUcmFja2luZ1ZhcmlhYmxlLm1hcmtQYXNzZWRU
b091dHNpZGUoY3VycmVudFNjb3BlLCB0aGlzLmFyZ3VtZW50c1tpXSwgZmxvd0luZm8pOworCQkJ
Zmxvd0luZm8gPSBGYWtlZFRyYWNraW5nVmFyaWFibGUubWFya1Bhc3NlZFRvT3V0c2lkZShjdXJy
ZW50U2NvcGUsIHRoaXMuYXJndW1lbnRzW2ldLCBmbG93SW5mbywgdGhpcy5yZXNvbHZlZFR5cGUp
OwogCQkJZmxvd0luZm8gPQogCQkJCXRoaXMuYXJndW1lbnRzW2ldCiAJCQkJCS5hbmFseXNlQ29k
ZShjdXJyZW50U2NvcGUsIGZsb3dDb250ZXh0LCBmbG93SW5mbykKZGlmZiAtLWdpdCBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9hc3QvQXNzaWdubWVudC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Bc3NpZ25tZW50LmphdmEKaW5kZXgg
OTcwZmMyNC4uZjBkY2I5ZSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Bc3NpZ25tZW50LmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2FzdC9Bc3NpZ25tZW50LmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3Jh
dGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3Jh
dGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFu
ZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVy
IHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBh
Y2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtNDYs
MTkgKzQ2LDIyIEBACiAJaWYgKCh0aGlzLmV4cHJlc3Npb24uaW1wbGljaXRDb252ZXJzaW9uICYg
VHlwZUlkcy5VTkJPWElORykgIT0gMCkgewogCQl0aGlzLmV4cHJlc3Npb24uY2hlY2tOUEUoY3Vy
cmVudFNjb3BlLCBmbG93Q29udGV4dCwgZmxvd0luZm8pOwogCX0KKwkKKwlGbG93SW5mbyBwcmVJ
bml0SW5mbyA9IG51bGw7CisJYm9vbGVhbiBzaG91bGRBbmFseXNlUmVzb3VyY2UgPSBsb2NhbCAh
PSBudWxsIAorCQkJJiYgZmxvd0luZm8ucmVhY2hNb2RlKCkgPT0gRmxvd0luZm8uUkVBQ0hBQkxF
IAorCQkJJiYgKEZha2VkVHJhY2tpbmdWYXJpYWJsZS5pc0F1dG9DbG9zZWFibGUodGhpcy5leHBy
ZXNzaW9uLnJlc29sdmVkVHlwZSkKKwkJCQkJfHwgdGhpcy5leHByZXNzaW9uLnJlc29sdmVkVHlw
ZS5pZCA9PSBUeXBlSWRzLlRfbnVsbCk7CisJaWYgKHNob3VsZEFuYWx5c2VSZXNvdXJjZSkKKwkJ
cHJlSW5pdEluZm8gPSBmbG93SW5mby51bmNvbmRpdGlvbmFsQ29weSgpOworCQogCWZsb3dJbmZv
ID0gKChSZWZlcmVuY2UpIHRoaXMubGhzKQogCQkuYW5hbHlzZUFzc2lnbm1lbnQoY3VycmVudFNj
b3BlLCBmbG93Q29udGV4dCwgZmxvd0luZm8sIHRoaXMsIGZhbHNlKQogCQkudW5jb25kaXRpb25h
bEluaXRzKCk7Ci0JaWYgKGxvY2FsICE9IG51bGwpIHsKLQkJTG9jYWxWYXJpYWJsZUJpbmRpbmcg
cHJldmlvdXNUcmFja2VyQmluZGluZyA9IG51bGw7Ci0JCWlmIChsb2NhbC5jbG9zZVRyYWNrZXIg
IT0gbnVsbCkgewotCQkJLy8gQXNzaWduaW5nIHRvIGEgdmFyaWFibGUgYWxyZWFkeSBob2xkaW5n
IGFuIEF1dG9DbG9zZWFibGUsIGhhcyBpdCBiZWVuIGNsb3NlZCBiZWZvcmU/Ci0JCQlwcmV2aW91
c1RyYWNrZXJCaW5kaW5nID0gbG9jYWwuY2xvc2VUcmFja2VyLmJpbmRpbmc7Ci0JCQlpZiAoIWZs
b3dJbmZvLmlzRGVmaW5pdGVseU51bGwobG9jYWwpKSAvLyBvbmx5IGlmIHByZXZpb3VzIHZhbHVl
IG1heSBiZSBub24tbnVsbAotCQkJCWxvY2FsLmNsb3NlVHJhY2tlci5yZWNvcmRFcnJvckxvY2F0
aW9uKHRoaXMsIGZsb3dJbmZvLm51bGxTdGF0dXMocHJldmlvdXNUcmFja2VyQmluZGluZykpOwot
CQl9Ci0JCUZha2VkVHJhY2tpbmdWYXJpYWJsZS5oYW5kbGVSZXNvdXJjZUFzc2lnbm1lbnQoZmxv
d0luZm8sIHRoaXMsIHRoaXMuZXhwcmVzc2lvbiwgbG9jYWwsIHByZXZpb3VzVHJhY2tlckJpbmRp
bmcpOwotCX0KKworCWlmIChzaG91bGRBbmFseXNlUmVzb3VyY2UpCisJCUZha2VkVHJhY2tpbmdW
YXJpYWJsZS5oYW5kbGVSZXNvdXJjZUFzc2lnbm1lbnQocHJlSW5pdEluZm8sIGZsb3dJbmZvLCB0
aGlzLCB0aGlzLmV4cHJlc3Npb24sIGxvY2FsKTsKKwogCWludCBudWxsU3RhdHVzID0gdGhpcy5l
eHByZXNzaW9uLm51bGxTdGF0dXMoZmxvd0luZm8pOwogCWlmIChsb2NhbCAhPSBudWxsICYmIChs
b2NhbC50eXBlLnRhZ0JpdHMgJiBUYWdCaXRzLklzQmFzZVR5cGUpID09IDApIHsKIAkJaWYgKG51
bGxTdGF0dXMgPT0gRmxvd0luZm8uTlVMTCkgewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9GYWtl
ZFRyYWNraW5nVmFyaWFibGUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvRmFrZWRUcmFja2luZ1ZhcmlhYmxl
LmphdmEKaW5kZXggZWUxMzA0Ny4uNmRjZjJkYyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9GYWtl
ZFRyYWNraW5nVmFyaWFibGUuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Zha2VkVHJhY2tpbmdWYXJp
YWJsZS5qYXZhCkBAIC00OCw5ICs0OCwxMSBAQAogCXByaXZhdGUgc3RhdGljIGZpbmFsIGludCBD
TE9TRURfSU5fTkVTVEVEX01FVEhPRCA9IDQ7CiAJLy8gYSBsb2NhdGlvbiBpbmRlcGVuZGVudCBp
c3N1ZSBoYXMgYmVlbiByZXBvcnRlZCBhbHJlYWR5IGFnYWluc3QgdGhpcyByZXNvdXJjZToKIAlw
cml2YXRlIHN0YXRpYyBmaW5hbCBpbnQgUkVQT1JURUQgPSA4OworCS8vIGEgcmVzb3VyY2UgaXMg
d3JhcHBlZCBpbiBhbm90aGVyIHJlc291cmNlOgorCXByaXZhdGUgc3RhdGljIGZpbmFsIGludCBX
UkFQUEVEID0gMTY7CiAJCiAJLyoqCi0JICogQml0c2V0IG9mIHtAbGluayAjQ0xPU0VfU0VFTn0s
IHtAbGluayAjUEFTU0VEX1RPX09VVFNJREV9LCB7QGxpbmsgI0NMT1NFRF9JTl9ORVNURURfTUVU
SE9EfSBhbmQge0BsaW5rICNSRVBPUlRFRH0uCisJICogQml0c2V0IG9mIHtAbGluayAjQ0xPU0Vf
U0VFTn0sIHtAbGluayAjUEFTU0VEX1RPX09VVFNJREV9LCB7QGxpbmsgI0NMT1NFRF9JTl9ORVNU
RURfTUVUSE9EfSwge0BsaW5rICNSRVBPUlRFRH0gYW5kIHtAbGluayAjV1JBUFBFRH0uCiAJICov
CiAJcHJpdmF0ZSBpbnQgZ2xvYmFsQ2xvc2luZ1N0YXRlID0gMDsKIApAQCAtNTgsMTAgKzYwLDE5
IEBACiAJCiAJcHVibGljIExvY2FsVmFyaWFibGVCaW5kaW5nIG9yaWdpbmFsQmluZGluZzsgLy8g
dGhlIHJlYWwgbG9jYWwgYmVpbmcgdHJhY2tlZAogCQotCUhhc2hNYXAgcmVjb3JkZWRMb2NhdGlv
bnM7IC8vIGluaXRpYWxseSBudWxsLCBBU1ROb2RlIC0+IEludGVnZXIgCisJSGFzaE1hcCByZWNv
cmRlZExvY2F0aW9uczsgLy8gaW5pdGlhbGx5IG51bGwsIEFTVE5vZGUgLT4gSW50ZWdlcgogCisJ
cHVibGljIEZha2VkVHJhY2tpbmdWYXJpYWJsZSBpbm5lclRyYWNrZXI7IC8vIGNoYWluZWQgdHJh
Y2tpbmcgdmFyaWFibGUgb2YgYSBjaGFpbmVkICh3cmFwcGVkKSByZXNvdXJjZQogCi0JcHVibGlj
IEZha2VkVHJhY2tpbmdWYXJpYWJsZShMb2NhbFZhcmlhYmxlQmluZGluZyBvcmlnaW5hbCwgU3Rh
dGVtZW50IGxvY2F0aW9uKSB7CisJLy8gbWFya2VyIGluc3RhbmNlIHRvIHNpZ25hbCB0aGlzIHBh
dHRlcm46IHJlc291cmNlID0gbmV3IFdyYXBwZXIocmVzb3VyY2UpOworCWZpbmFsIHByaXZhdGUg
c3RhdGljIEZha2VkVHJhY2tpbmdWYXJpYWJsZSBTRUxGX1dSQVAgPSBuZXcgRmFrZWRUcmFja2lu
Z1ZhcmlhYmxlKCk7CisKKwlwcml2YXRlIEZha2VkVHJhY2tpbmdWYXJpYWJsZSgpIHsKKwkJc3Vw
ZXIobnVsbCwgMCwgMCk7CisJCS8qIGVtcHR5IGN0b3IgZm9yIG1hcmtlciBpbnN0YW5jZSAqLyAK
Kwl9CisKKwlwdWJsaWMgRmFrZWRUcmFja2luZ1ZhcmlhYmxlKExvY2FsVmFyaWFibGVCaW5kaW5n
IG9yaWdpbmFsLCBBU1ROb2RlIGxvY2F0aW9uKSB7CiAJCXN1cGVyKG9yaWdpbmFsLm5hbWUsIGxv
Y2F0aW9uLnNvdXJjZVN0YXJ0LCBsb2NhdGlvbi5zb3VyY2VFbmQpOwogCQl0aGlzLnR5cGUgPSBu
ZXcgU2luZ2xlVHlwZVJlZmVyZW5jZSgKIAkJCQlUeXBlQ29uc3RhbnRzLk9CSkVDVCwKQEAgLTEy
OSwzNiArMTQwLDI0NSBAQAogCiAJLyoqIAogCSAqIENoZWNrIGlmIHRoZSByaHMgb2YgYW4gYXNz
aWdubWVudCBvciBsb2NhbCBkZWNsYXJhdGlvbiBpcyBhbiAoQXV0bylDbG9zZWFibGUuCi0JICog
SWYgc28gY3JlYXRlIG9yIHJlLXVzZSBhIHRyYWNraW5nIHZhcmlhYmxlLCBhbmQgd2lyZSBhbmQg
aW5pdGlhbGl6ZSBldmVyeXRoaW5nLiAKKwkgKiBJZiBzbyBjcmVhdGUgb3IgcmUtdXNlIGEgdHJh
Y2tpbmcgdmFyaWFibGUsIGFuZCB3aXJlIGFuZCBpbml0aWFsaXplIGV2ZXJ5dGhpbmcuCisJICog
QHBhcmFtIHVwc3RyZWFtSW5mbyBpbmZvIHdpdGhvdXQgYW5hbHlzaXMgb2YgdGhlIHJocywgdXNl
IHRoaXMgdG8gZGV0ZXJtaW5lIHRoZSBzdGF0dXMgb2YgYSByZXNvdXJjZSBiZWluZyBkaXNjb25u
ZWN0ZWQKKwkgKiBAcGFyYW0gZmxvd0luZm8gaW5mbyB3aXRoIGFuYWx5c2lzIG9mIHRoZSByaHMs
IHVzZSB0aGlzIGZvciByZWNvcmRpbmcgcmVzb3VyY2Ugc3RhdHVzIGJlY2F1c2UgdGhpcyB3aWxs
IGJlIHBhc3NlZCBkb3duc3RyZWFtCisJICogQHBhcmFtIGxvY2F0aW9uIHdoZXJlIHRvIHJlcG9y
dCB3YXJuaWdzL2Vycm9ycyBhZ2FpbnN0CisJICogQHBhcmFtIHJocyB0aGUgcmlnaHQgaGFuZCBz
aWRlIG9mIHRoZSBhc3NpZ25tZW50LCB0aGlzIGV4cHJlc3Npb24gaXMgdG8gYmUgYW5hbHl6ZWQu
CisJICoJCQlUaGUgY2FsbGVyIGhhcyBhbHJlYWR5IGNoZWNrZWQgdGhhdCB0aGUgcmhzIGlzIGVp
dGhlciBvZiBhIGNsb3NlYWJsZSB0eXBlIG9yIG51bGwuCisJICogQHBhcmFtIGxvY2FsIHRoZSBs
b2NhbCB2YXJpYWJsZSBpbnRvIHdoaWNoIHRoZSByaHMgaXMgYmVpbmcgYXNzaWduZWQKIAkgKi8K
LQlwdWJsaWMgc3RhdGljIHZvaWQgaGFuZGxlUmVzb3VyY2VBc3NpZ25tZW50KEZsb3dJbmZvIGZs
b3dJbmZvLCBTdGF0ZW1lbnQgbG9jYXRpb24sIEV4cHJlc3Npb24gcmhzLCBMb2NhbFZhcmlhYmxl
QmluZGluZyBsb2NhbCwKLQkJCQlMb2NhbFZhcmlhYmxlQmluZGluZyBwcmV2aW91c1RyYWNrZXJC
aW5kaW5nKSAKKwlwdWJsaWMgc3RhdGljIHZvaWQgaGFuZGxlUmVzb3VyY2VBc3NpZ25tZW50KEZs
b3dJbmZvIHVwc3RyZWFtSW5mbywgRmxvd0luZm8gZmxvd0luZm8sIEFTVE5vZGUgbG9jYXRpb24s
IEV4cHJlc3Npb24gcmhzLCBMb2NhbFZhcmlhYmxlQmluZGluZyBsb2NhbCkKIAl7Ci0JCWlmIChp
c0F1dG9DbG9zZWFibGUocmhzLnJlc29sdmVkVHlwZSkpIHsKKwkJRmFrZWRUcmFja2luZ1Zhcmlh
YmxlIHByZXZpb3VzVHJhY2tlciA9IG51bGw7CisJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSBkaXNj
b25uZWN0ZWRUcmFja2VyID0gbnVsbDsKKwkJaWYgKGxvY2FsLmNsb3NlVHJhY2tlciAhPSBudWxs
KSB7CisJCQkvLyBhc3NpZ25pbmcgdG8gYSB2YXJpYWJsZSBhbHJlYWR5IGhvbGRpbmcgYW4gQXV0
b0Nsb3NlYWJsZSwgaGFzIGl0IGJlZW4gY2xvc2VkIGJlZm9yZT8KKwkJCXByZXZpb3VzVHJhY2tl
ciA9IGxvY2FsLmNsb3NlVHJhY2tlcjsKKwkJCWludCBzdGF0dXMgPSB1cHN0cmVhbUluZm8ubnVs
bFN0YXR1cyhsb2NhbCk7CisJCQlpZiAoc3RhdHVzICE9IEZsb3dJbmZvLk5VTEwgJiYgc3RhdHVz
ICE9IEZsb3dJbmZvLlVOS05PV04pIC8vIG9ubHkgaWYgcHJldmlvdXMgdmFsdWUgbWF5IGJlIHJl
bGV2YW50CisJCQkJZGlzY29ubmVjdGVkVHJhY2tlciA9IHByZXZpb3VzVHJhY2tlcjsKKwkJfQor
CisJCWlmIChyaHMucmVzb2x2ZWRUeXBlLmlkICE9IFR5cGVJZHMuVF9udWxsKSB7CiAJCQkvLyBu
ZXcgdmFsdWUgaXMgQXV0b0Nsb3NlYWJsZSwgc3RhcnQgdHJhY2tpbmcsIHBvc3NpYmx5IHJlLXVz
aW5nIGV4aXN0aW5nIHRyYWNrZXIgdmFyOgotCQogCQkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlIHJo
c1RyYWNrVmFyID0gZ2V0Q2xvc2VUcmFja2luZ1ZhcmlhYmxlKHJocyk7CiAJCQlpZiAocmhzVHJh
Y2tWYXIgIT0gbnVsbCkgewkJCQkJCQkJLy8gMS4gc2hhcmUgdHJhY2tpbmcgdmFyaWFibGUgd2l0
aCBSSFM/CiAJCQkJbG9jYWwuY2xvc2VUcmFja2VyID0gcmhzVHJhY2tWYXI7CiAJCQkJLy8ga2Vl
cCBudWxsLXN0YXR1cyB1bmNoYW5nZWQgYWNyb3NzIHRoaXMgYXNzaWdubWVudAotCQkJfSBlbHNl
IGlmIChwcmV2aW91c1RyYWNrZXJCaW5kaW5nICE9IG51bGwpIHsJCQkvLyAyLiByZS11c2UgdHJh
Y2tpbmcgdmFyaWFibGUgZnJvbSB0aGUgTEhTPworCQkJfSBlbHNlIGlmIChwcmV2aW91c1RyYWNr
ZXIgIT0gbnVsbCkgewkJCQkJLy8gMi4gcmUtdXNlIHRyYWNraW5nIHZhcmlhYmxlIGZyb20gdGhl
IExIUz8KIAkJCQkvLyByZS1hc3NpZ25pbmcgZnJvbSBhIGZyZXNoLCBtYXJrIGFzIG5vdC1jbG9z
ZWQgYWdhaW46Ci0JCQkJZmxvd0luZm8ubWFya0FzRGVmaW5pdGVseU51bGwocHJldmlvdXNUcmFj
a2VyQmluZGluZyk7CisJCQkJZmxvd0luZm8ubWFya0FzRGVmaW5pdGVseU51bGwocHJldmlvdXNU
cmFja2VyLmJpbmRpbmcpOworCQkJCWxvY2FsLmNsb3NlVHJhY2tlciA9IGFuYWx5c2VDbG9zZWFi
bGVFeHByZXNzaW9uKGZsb3dJbmZvLCBsb2NhbCwgbG9jYXRpb24sIHJocywgcHJldmlvdXNUcmFj
a2VyKTsKKwkJCQlpZiAobG9jYWwuY2xvc2VUcmFja2VyID09IFNFTEZfV1JBUCkgeworCQkJCQls
b2NhbC5jbG9zZVRyYWNrZXIgPSBwcmV2aW91c1RyYWNrZXI7CisJCQkJCXJldHVybjsgLy8gYXZv
aWQgY2FsbGluZyByZWNvcmRFcnJvckxvY2F0aW9uIGJlbG93CisJCQkJfQogCQkJfSBlbHNlIHsJ
CQkJCQkJCQkJCQkvLyAzLiBubyByZS11c2UsIGNyZWF0ZSBhIGZyZXNoIHRyYWNraW5nIHZhcmlh
YmxlOgotCQkJCWxvY2FsLmNsb3NlVHJhY2tlciA9IG5ldyBGYWtlZFRyYWNraW5nVmFyaWFibGUo
bG9jYWwsIGxvY2F0aW9uKTsKLQkJCQkvLyBhIGZyZXNoIHJlc291cmNlLCBtYXJrIGFzIG5vdC1j
bG9zZWQ6Ci0JCQkJZmxvd0luZm8ubWFya0FzRGVmaW5pdGVseU51bGwobG9jYWwuY2xvc2VUcmFj
a2VyLmJpbmRpbmcpOworCQkJCXJoc1RyYWNrVmFyID0gYW5hbHlzZUNsb3NlYWJsZUV4cHJlc3Np
b24oZmxvd0luZm8sIGxvY2FsLCBsb2NhdGlvbiwgcmhzLCBudWxsKTsKKwkJCQlpZiAocmhzVHJh
Y2tWYXIgIT0gbnVsbCkgeworCQkJCQlsb2NhbC5jbG9zZVRyYWNrZXIgPSByaHNUcmFja1ZhcjsK
KwkJCQkJLy8gYSBmcmVzaCByZXNvdXJjZSwgbWFyayBhcyBub3QtY2xvc2VkOgorCQkJCQlmbG93
SW5mby5tYXJrQXNEZWZpbml0ZWx5TnVsbChsb2NhbC5jbG9zZVRyYWNrZXIuYmluZGluZyk7CiAv
LyBUT0RPKHN0ZXBoYW4pOiB0aGlzIG1pZ2h0IGJlIHVzZWZ1bCwgYnV0IEkgY291bGQgbm90IGZp
bmQgYSB0ZXN0IGNhc2UgZm9yIGl0OiAKLS8vCQkJCWlmIChmbG93Q29udGV4dC5pbml0c09uRmlu
YWxseSAhPSBudWxsKQotLy8JCQkJCWZsb3dDb250ZXh0LmluaXRzT25GaW5hbGx5Lm1hcmtBc0Rl
ZmluaXRlbHlOb25OdWxsKHRyYWNrZXJCaW5kaW5nKTsKKy8vCQkJCQlpZiAoZmxvd0NvbnRleHQu
aW5pdHNPbkZpbmFsbHkgIT0gbnVsbCkKKy8vCQkJCQkJZmxvd0NvbnRleHQuaW5pdHNPbkZpbmFs
bHkubWFya0FzRGVmaW5pdGVseU5vbk51bGwodHJhY2tlckJpbmRpbmcpOworCQkJCX0KIAkJCX0K
IAkJfQorCisJCWlmIChkaXNjb25uZWN0ZWRUcmFja2VyICE9IG51bGwpCisJCQlkaXNjb25uZWN0
ZWRUcmFja2VyLnJlY29yZEVycm9yTG9jYXRpb24obG9jYXRpb24sIHVwc3RyZWFtSW5mby5udWxs
U3RhdHVzKGRpc2Nvbm5lY3RlZFRyYWNrZXIuYmluZGluZykpOworCX0KKwkvKioKKwkgKiBhbmFs
eXplIHN0cnVjdHVyZSBvZiBhIGNsb3NlYWJsZSBleHByZXNzaW9uLCBtYXRjaGluZyAoY2hhaW5l
ZCkgcmVzb3VyY2VzIGFnYWluc3Qgb3VyIHdoaXRlIGxpc3RzLgorCSAqIFNlZSAgQnVnIDM1ODkw
MyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdz
CisJICogQHBhcmFtIGZsb3dJbmZvIHVzZWQgd2hlbiByZWN1cnNpbmcgYmFjayBpbnRvIHtAbGlu
ayAjaGFuZGxlUmVzb3VyY2VBc3NpZ25tZW50fQorCSAqIEBwYXJhbSBsb2NhbCBsb2NhbCB2YXJp
YWJsZSB0byB3aGljaCB0aGUgY2xvc2VhYmxlIGlzIGJlaW5nIGFzc2lnbmVkCisJICogQHBhcmFt
IGxvY2F0aW9uIHdoZXJlIHRvIGZsYWcgZXJyb3JzL3dhcm5pbmdzIGFnYWluc3QKKwkgKiBAcGFy
YW0gZXhwcmVzc2lvbiBleHByZXNzaW9uIHRvIGJlIGFuYWx5emVkCisJICogQHBhcmFtIHByZXZp
b3VzVHJhY2tlciB3aGVuIGFuYWx5emluZyBhIHJlLWFzc2lnbm1lbnQgd2UgbWF5IGFscmVhZHkg
aGF2ZSBhIHRyYWNraW5nIHZhcmlhYmxlIGZvciBsb2NhbCwKKwkgKiAgCQl3aGljaCB3ZSBzaG91
bGQgdGhlbiByZS11c2UKKwkgKiBAcmV0dXJuIGEgdHJhY2tpbmcgdmFyaWFibGUgYXNzb2NpYXRl
ZCB3aXRoIGxvY2FsIG9yIG51bGwgaWYgbm8gbmVlZCB0byB0cmFjaworCSAqLworCXByaXZhdGUg
c3RhdGljIEZha2VkVHJhY2tpbmdWYXJpYWJsZSBhbmFseXNlQ2xvc2VhYmxlRXhwcmVzc2lvbihG
bG93SW5mbyBmbG93SW5mbywgCisJCQkJTG9jYWxWYXJpYWJsZUJpbmRpbmcgbG9jYWwsIEFTVE5v
ZGUgbG9jYXRpb24sIEV4cHJlc3Npb24gZXhwcmVzc2lvbiwgRmFrZWRUcmFja2luZ1ZhcmlhYmxl
IHByZXZpb3VzVHJhY2tlcikgCisJeworCQlpZiAoZXhwcmVzc2lvbi5yZXNvbHZlZFR5cGUgaW5z
dGFuY2VvZiBSZWZlcmVuY2VCaW5kaW5nKSB7CisJCQlSZWZlcmVuY2VCaW5kaW5nIHJlc291cmNl
VHlwZSA9IChSZWZlcmVuY2VCaW5kaW5nKSBleHByZXNzaW9uLnJlc29sdmVkVHlwZTsKKwkJCQor
CQkJaWYgKHJlc291cmNlVHlwZS5oYXNUeXBlQml0KFR5cGVJZHMuQml0UmVzb3VyY2VGcmVlQ2xv
c2VhYmxlKSkgeworCQkJCS8vIChhKSByZXNvdXJjZS1mcmVlIGNsb3NlYWJsZTogLT4gbnVsbAor
CQkJCXJldHVybiBudWxsOworCQkJfQkJCQkJCisJCQkKKwkJCWlmIChyZXNvdXJjZVR5cGUuaGFz
VHlwZUJpdChUeXBlSWRzLkJpdFdyYXBwZXJDbG9zZWFibGUpKSB7CisJCQkJLy8gKGIpIHdyYXBw
ZXIKKwkJCQlFeHByZXNzaW9uIGlubmVyRXhwcmVzc2lvbiA9IGV4cHJlc3Npb247IAorCQkJCWlm
IChpbm5lckV4cHJlc3Npb24gaW5zdGFuY2VvZiBBc3NpZ25tZW50KQorCQkJCQlpbm5lckV4cHJl
c3Npb24gPSAoKEFzc2lnbm1lbnQpaW5uZXJFeHByZXNzaW9uKS5leHByZXNzaW9uOworCQkJCWlm
IChpbm5lckV4cHJlc3Npb24gaW5zdGFuY2VvZiBBbGxvY2F0aW9uRXhwcmVzc2lvbikgeworCQkJ
CQlFeHByZXNzaW9uW10gYXJncyA9ICgoQWxsb2NhdGlvbkV4cHJlc3Npb24pIGlubmVyRXhwcmVz
c2lvbikuYXJndW1lbnRzOworCQkJCQlpZiAoYXJncyAhPSBudWxsICYmIGFyZ3MubGVuZ3RoID09
IDEpIHsKKwkJCQkJCS8vIChiLjEpIHdyYXBwZXIgYWxsb2NhdGlvbiB3aXRoIGFyZ3VtZW50CisJ
CQkJCQlyZXR1cm4gYW5hbHlzZUNsb3NlYWJsZUFsbG9jYXRpb25Bcmd1bWVudChmbG93SW5mbywg
bG9jYWwsIGxvY2F0aW9uLCBhcmdzWzBdLCBwcmV2aW91c1RyYWNrZXIpOworCQkJCQl9CisJCQkJ
fQorCQkJCUxvY2FsVmFyaWFibGVCaW5kaW5nIGlubmVyTG9jYWwgPSBpbm5lckV4cHJlc3Npb24u
bG9jYWxWYXJpYWJsZUJpbmRpbmcoKTsKKwkJCQlpZiAoaW5uZXJMb2NhbCAhPSBudWxsICYmIGlu
bmVyTG9jYWwuY2xvc2VUcmFja2VyICE9IG51bGwpIHsKKwkJCQkJRmFrZWRUcmFja2luZ1Zhcmlh
YmxlIG91dGVyVHJhY2tlciA9IHByZXZpb3VzVHJhY2tlciAhPSBudWxsID8gcHJldmlvdXNUcmFj
a2VyIDogbmV3IEZha2VkVHJhY2tpbmdWYXJpYWJsZShsb2NhbCwgbG9jYXRpb24pOyAKKwkJCQkJ
b3V0ZXJUcmFja2VyLmlubmVyVHJhY2tlciA9IGlubmVyTG9jYWwuY2xvc2VUcmFja2VyOworCQkJ
CQlpbm5lckxvY2FsLmNsb3NlVHJhY2tlci5nbG9iYWxDbG9zaW5nU3RhdGUgfD0gV1JBUFBFRDsK
KwkJCQkJcmV0dXJuIG91dGVyVHJhY2tlcjsKKwkJCQl9CisJCQkJLy8gKGIuMikgd3JhcHBlciB3
aXRoIGlycmVsZXZhbnQgaW5uZXI6IC0+IG51bGwKKwkJCQlyZXR1cm4gbnVsbDsKKwkJCX0KKwkJ
fQorCQlpZiAobG9jYWwuY2xvc2VUcmFja2VyICE9IG51bGwpCisJCQkvLyAoYyk6IGlubmVyIGhh
cyBhbHJlYWR5IGJlZW4gYW5hbHlzZWQ6IC0+IHJlLXVzZSB0cmFjayB2YXIKKwkJCXJldHVybiBs
b2NhbC5jbG9zZVRyYWNrZXI7CisJCS8vIChkKTogbm9ybWFsIHJlc291cmNlOiAtPiBub3JtYWwg
dHJhY2tpbmcgdmFyCisJCWlmIChwcmV2aW91c1RyYWNrZXIgIT0gbnVsbCkKKwkJCXJldHVybiBw
cmV2aW91c1RyYWNrZXI7IC8vIChkLjEpOiByZS11c2UgZXhpc3RpbmcgdHJhY2tpbmcgdmFyCisJ
CXJldHVybiBuZXcgRmFrZWRUcmFja2luZ1ZhcmlhYmxlKGxvY2FsLCBsb2NhdGlvbik7CisJfQor
CisJLy8gYW4gb3V0ZXIgYWxsb2NhdGlvbiBleHByZXNzaW9uIGhhcyBhbiBhcmd1bWVudCwgcmVj
dXJzaXZlbHkgYW5hbHl6ZSB3aGV0aGVyIHRoZSBhcmcgaXMgY2xvc2VhYmxlIAorCS8vIHJldHVy
biAoMSkgYSBwb3NzaWJsZSBuZXN0ZWQgdHJhY2tlciBmb3IgdGhlIG91dGVyIGV4cHJlc3Npb24g
b3IgKDIpIG51bGwgc2lnbmFsaW5nIG5vIHJlbGV2YW50IHJlc291cmNlIGNvbnRhaW5lZCAgCisJ
c3RhdGljIEZha2VkVHJhY2tpbmdWYXJpYWJsZSBhbmFseXNlQ2xvc2VhYmxlQWxsb2NhdGlvbkFy
Z3VtZW50KEZsb3dJbmZvIGZsb3dJbmZvLCBMb2NhbFZhcmlhYmxlQmluZGluZyBvdXRlckxvY2Fs
LCBBU1ROb2RlIG91dGVyTG9jYXRpb24sIAorCQkJRXhwcmVzc2lvbiBhcmcsIEZha2VkVHJhY2tp
bmdWYXJpYWJsZSBwcmV2aW91c1RyYWNrZXIpCisJeworCQlpZiAoYXJnIGluc3RhbmNlb2YgQXNz
aWdubWVudCkgeworCQkJQXNzaWdubWVudCBhc3NpZ24gPSAoQXNzaWdubWVudClhcmc7CisJCQlM
b2NhbFZhcmlhYmxlQmluZGluZyBpbm5lckxvY2FsID0gYXNzaWduLmxvY2FsVmFyaWFibGVCaW5k
aW5nKCk7CisJCQlpZiAoaW5uZXJMb2NhbCAhPSBudWxsKSB7CisJCQkJLy8gbmVzdGVkIGFzc2ln
bm1lbnQgaGFzIGFscmVhZHkgYmVlbiBwcm9jZXNzZWQKKwkJCQlpZiAoaW5uZXJMb2NhbC5jbG9z
ZVRyYWNrZXIgIT0gbnVsbCAmJiBpbm5lckxvY2FsLmNsb3NlVHJhY2tlci5vcmlnaW5hbEJpbmRp
bmcgPT0gb3V0ZXJMb2NhbCkKKwkJCQkJcmV0dXJuIFNFTEZfV1JBUDsgLy8gc2lnbmFsIHNwZWNp
YWwgY2FzZSB0byBvdXIgY2FsbGVyOiByZXNvdXJjZSA9IG5ldyBXcmFwcGVyKHJlc291cmNlKTsK
KwkJCQlyZXR1cm4gaW5uZXJMb2NhbC5jbG9zZVRyYWNrZXI7IC8vIEZJWE1FIGRvIHdlIG5lZWQg
YSBuZXN0ZWQgdHJhY2tlciBoZXJlPyBzZWUgdGVzdDA2MWEvZQorCQkJfSBlbHNlIHsKKwkJCQlh
cmcgPSBhc3NpZ24uZXhwcmVzc2lvbjsgLy8gdW53cmFwIGFzc2lnbm1lbnQgYW5kIGZhbGwgdGhy
b3VnaAorCQkJfQorCQl9CisJCWlmIChhcmcgaW5zdGFuY2VvZiBTaW5nbGVOYW1lUmVmZXJlbmNl
KSB7CisJCQlTaW5nbGVOYW1lUmVmZXJlbmNlIHJlZiA9IChTaW5nbGVOYW1lUmVmZXJlbmNlKSBh
cmc7CisJCQlpZiAocmVmLmJpbmRpbmcgaW5zdGFuY2VvZiBMb2NhbFZhcmlhYmxlQmluZGluZykg
eworCQkJCS8vIGFsbG9jYXRpb24gYXJnIGlzIGEgcmVmZXJlbmNlIHRvIGFuIGV4aXN0aW5nIGNs
b3NlYWJsZT8KKwkJCQlyZXR1cm4gZ2V0VHJhY2tpbmdWYXJGb3JOZXN0ZWQoZmxvd0luZm8sIG91
dGVyTG9jYWwsIG91dGVyTG9jYXRpb24sIChMb2NhbFZhcmlhYmxlQmluZGluZylyZWYuYmluZGlu
ZywgcmVmLCByZWYsIHByZXZpb3VzVHJhY2tlcik7CisJCQl9CisJCX0gZWxzZSBpZiAoYXJnIGlu
c3RhbmNlb2YgQWxsb2NhdGlvbkV4cHJlc3Npb24gJiYgYXJnLnJlc29sdmVkVHlwZSBpbnN0YW5j
ZW9mIFJlZmVyZW5jZUJpbmRpbmcpIHsKKwkJCS8vIG5lc3RlZCBhbGxvY2F0aW9uCisJCQlSZWZl
cmVuY2VCaW5kaW5nIGlubmVyVHlwZSA9IChSZWZlcmVuY2VCaW5kaW5nKWFyZy5yZXNvbHZlZFR5
cGU7CisJCQlpZiAoaW5uZXJUeXBlLmhhc1R5cGVCaXQoVHlwZUlkcy5CaXRSZXNvdXJjZUZyZWVD
bG9zZWFibGUpKSB7CisJCQkJcmV0dXJuIG51bGw7IC8vIGxlYWYgb2Ygd3JhcHBlci1jaGFpbiBp
cyBpcnJlbGV2YW50CisJCQl9IGVsc2UgaWYgKGlubmVyVHlwZS5oYXNUeXBlQml0KFR5cGVJZHMu
Qml0V3JhcHBlckNsb3NlYWJsZSkpIHsKKwkJCQkvLyBuZXN0ZWQgd3JhcHBlciAtPiBuZXN0ZWQg
dHJhY2tpbmcgdmFyaWFibGVzIG1heSBza2lwIHRoaXMgbGV2ZWwgYXMgaXQgaXMgbm90IGJvdW5k
IHRvIGEgbG9jYWwgdmFyaWFibGUKKwkJCQlFeHByZXNzaW9uW10gYXJncyA9ICgoQWxsb2NhdGlv
bkV4cHJlc3Npb24pIGFyZykuYXJndW1lbnRzOworCQkJCWlmIChhcmdzICE9IG51bGwgJiYgYXJn
cy5sZW5ndGggPiAwKQorCQkJCQlyZXR1cm4gYW5hbHlzZUNsb3NlYWJsZUFsbG9jYXRpb25Bcmd1
bWVudChmbG93SW5mbywgb3V0ZXJMb2NhbCwgYXJnLCBhcmdzWzBdLCBwcmV2aW91c1RyYWNrZXIp
OworCQkJCXJldHVybiBudWxsOyAvLyB3cmFwcGVyIHdpdGggbm8gYXJnPyBzaG91bGRuJ3Qgb2Nj
dXIgYWN0dWFsbHkKKwkJCX0gZWxzZSB7CisJCQkJLy8gKGMpIHdyYXBwZXIgYWxsb2Mgd2l0aCBk
aXJlY3QgbmVzdGVkIGFsbG9jIG9mIHJlZ3VsYXI6IC0+IG5vcm1hbCB0cmFjayB2YXIgKG5vIGxv
Y2FsIHJlcHJlc2VudHMgaW5uZXIpCisJCQkJcmV0dXJuIHByZXZpb3VzVHJhY2tlciAhPSBudWxs
ID8gcHJldmlvdXNUcmFja2VyIDogbmV3IEZha2VkVHJhY2tpbmdWYXJpYWJsZShvdXRlckxvY2Fs
LCBvdXRlckxvY2F0aW9uKTsKKwkJCX0KKwkJfQorCQlyZXR1cm4gbnVsbDsKKwl9CisJCisJLy8g
YW4gb3V0ZXIgYWxsb2NhdGlvbiBleHByZXNzaW9uIGhhcyBhbiBhcmd1bWVudCwgY3JlYXRlL2xp
bmsgb3V0ZXIgYW5kIGlubmVyIHRyYWNraW5nIHZhcmlhYmxlIGFuZCByZXR1cm4gdGhlIG91dGVy
CisJLy8gcmV0dXJuIG51bGwgaWYgaW5uZXIgaXMgbm90IHRyYWNrZWQKKwlwcml2YXRlIHN0YXRp
YyBGYWtlZFRyYWNraW5nVmFyaWFibGUgZ2V0VHJhY2tpbmdWYXJGb3JOZXN0ZWQoRmxvd0luZm8g
Zmxvd0luZm8sIExvY2FsVmFyaWFibGVCaW5kaW5nIG91dGVyTG9jYWwsIEFTVE5vZGUgb3V0ZXJM
b2NhdGlvbiwgCisJCQlMb2NhbFZhcmlhYmxlQmluZGluZyBpbm5lckxvY2FsLCBBU1ROb2RlIGlu
bmVyTG9jYXRpb24sIEV4cHJlc3Npb24gaW5uZXJFeHByZXNzaW9uLCBGYWtlZFRyYWNraW5nVmFy
aWFibGUgcHJldmlvdXNUcmFja2VyKQorCXsKKwkJaWYgKG91dGVyTG9jYWwgPT0gaW5uZXJMb2Nh
bCkKKwkJCXJldHVybiBTRUxGX1dSQVA7CisJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSBpbm5lclRy
YWNrZXIgPSBhbmFseXNlQ2xvc2VhYmxlRXhwcmVzc2lvbihmbG93SW5mbywgaW5uZXJMb2NhbCwg
aW5uZXJMb2NhdGlvbiwgaW5uZXJFeHByZXNzaW9uLCBudWxsKTsKKwkJaWYgKGlubmVyVHJhY2tl
ciA9PSBTRUxGX1dSQVApCisJCQlyZXR1cm4gU0VMRl9XUkFQOworCQlpZiAoaW5uZXJUcmFja2Vy
ICE9IG51bGwpIHsKKwkJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSBvdXRlclRyYWNrZXIgPSBwcmV2
aW91c1RyYWNrZXIgIT0gbnVsbCA/IHByZXZpb3VzVHJhY2tlciA6IG5ldyBGYWtlZFRyYWNraW5n
VmFyaWFibGUob3V0ZXJMb2NhbCwgb3V0ZXJMb2NhdGlvbik7IAorCQkJb3V0ZXJUcmFja2VyLmlu
bmVyVHJhY2tlciA9IGlubmVyVHJhY2tlcjsKKwkJCWlubmVyVHJhY2tlci5nbG9iYWxDbG9zaW5n
U3RhdGUgfD0gV1JBUFBFRDsKKwkJCXJldHVybiBvdXRlclRyYWNrZXI7CisJCX0KKwkJcmV0dXJu
IG51bGw7CiAJfQogCiAJLyoqIEFuc3dlciB3aXRoZXIgdGhlIGdpdmVuIHR5cGUgYmluZGluZyBp
cyBhIHN1YnR5cGUgb2YgamF2YS5sYW5nLkF1dG9DbG9zZWFibGUuICovCiAJcHVibGljIHN0YXRp
YyBib29sZWFuIGlzQXV0b0Nsb3NlYWJsZShUeXBlQmluZGluZyB0eXBlQmluZGluZykgewogCQly
ZXR1cm4gdHlwZUJpbmRpbmcgaW5zdGFuY2VvZiBSZWZlcmVuY2VCaW5kaW5nCiAJCQkmJiAoKFJl
ZmVyZW5jZUJpbmRpbmcpdHlwZUJpbmRpbmcpLmhhc1R5cGVCaXQoVHlwZUlkcy5CaXRBdXRvQ2xv
c2VhYmxlfFR5cGVJZHMuQml0Q2xvc2VhYmxlKTsKKwl9CisKKwlwdWJsaWMgaW50IGZpbmRNb3N0
U3BlY2lmaWNTdGF0dXMoRmxvd0luZm8gZmxvd0luZm8sIEJsb2NrU2NvcGUgY3VycmVudFNjb3Bl
LCBCbG9ja1Njb3BlIGxvY2F0aW9uU2NvcGUpIHsKKwkJaW50IHN0YXR1cyA9IEZsb3dJbmZvLlVO
S05PV047CisJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSBjdXJyZW50VHJhY2tlciA9IHRoaXM7CisJ
CS8vIGxvb3AgYXMgdG8gY29uc2lkZXIgd3JhcHBlcnMgKHBlciB3aGl0ZSBsaXN0KSBlbmNhcHN1
bGF0aW5nIGFuIGlubmVyIHJlc291cmNlLgorCQl3aGlsZSAoY3VycmVudFRyYWNrZXIgIT0gbnVs
bCkgeworCQkJTG9jYWxWYXJpYWJsZUJpbmRpbmcgY3VycmVudFZhciA9IGN1cnJlbnRUcmFja2Vy
LmJpbmRpbmc7CisJCQlpbnQgY3VycmVudFN0YXR1cyA9IGdldE51bGxTdGF0dXNBZ2dyZXNzaXZl
bHkoY3VycmVudFZhciwgZmxvd0luZm8pOworCQkJaWYgKGxvY2F0aW9uU2NvcGUgIT0gbnVsbCkg
Ly8gb25seSBjaGVjayBhdCBtZXRob2QgZXhpdCBwb2ludHMKKwkJCQljdXJyZW50U3RhdHVzID0g
bWVyZ2VDbG9zZVN0YXR1cyhsb2NhdGlvblNjb3BlLCBjdXJyZW50U3RhdHVzLCBjdXJyZW50VmFy
LCBjdXJyZW50U2NvcGUpOworCQkJaWYgKGN1cnJlbnRTdGF0dXMgPT0gRmxvd0luZm8uTk9OX05V
TEwpIHsKKwkJCQlzdGF0dXMgPSBjdXJyZW50U3RhdHVzOworCQkJCWJyZWFrOyAvLyBjbG9zZWQg
LT4gc3RvcCBzZWFyY2hpbmcKKwkJCX0gZWxzZSBpZiAoc3RhdHVzID09IEZsb3dJbmZvLk5VTEwg
fHwgc3RhdHVzID09IEZsb3dJbmZvLlVOS05PV04pIHsKKwkJCQlzdGF0dXMgPSBjdXJyZW50U3Rh
dHVzOyAvLyBpbXByb3ZlZCBhbHRob3VnaCBub3QgeWV0IHNhZmUgLT4ga2VlcCBzZWFyY2hpbmcg
Zm9yIGJldHRlcgorCQkJfQorCQkJY3VycmVudFRyYWNrZXIgPSBjdXJyZW50VHJhY2tlci5pbm5l
clRyYWNrZXI7CisJCX0KKwkJcmV0dXJuIHN0YXR1czsKKwl9CisKKwkvKioKKwkgKiBHZXQgdGhl
IG51bGwgc3RhdHVzIGxvb2tpbmcgZXZlbiBpbnRvIHVucmVhY2hhYmxlIGZsb3dzCisJICogQHBh
cmFtIGxvY2FsCisJICogQHBhcmFtIGZsb3dJbmZvCisJICogQHJldHVybiBvbmUgb2YgdGhlIGNv
bnN0YW50cyBGbG93SW5mby57TlVMTCxQT1RFTlRJQUxMWV9OVUxMLFBPVEVOVElBTExZX05PTl9O
VUxMLE5PTl9OVUxMfS4KKwkgKi8KKwlwcml2YXRlIGludCBnZXROdWxsU3RhdHVzQWdncmVzc2l2
ZWx5KExvY2FsVmFyaWFibGVCaW5kaW5nIGxvY2FsLCBGbG93SW5mbyBmbG93SW5mbykgeworCQlp
bnQgcmVhY2hNb2RlID0gZmxvd0luZm8ucmVhY2hNb2RlKCk7CisJCWludCBzdGF0dXMgPSAwOwor
CQl0cnkgeworCQkJLy8gdW5yZWFjaGFibGUgZmxvd0luZm8gaXMgdG9vIHNoeSBpbiByZXBvcnRp
bmcgbnVsbC1pc3N1ZXMsIHRlbXBvcmFyaWx5IGZvcmdldCByZWFjaGFiaWxpdHk6CisJCQlpZiAo
cmVhY2hNb2RlICE9IEZsb3dJbmZvLlJFQUNIQUJMRSkKKwkJCQlmbG93SW5mby50YWdCaXRzICY9
IH5GbG93SW5mby5VTlJFQUNIQUJMRTsKKwkJCXN0YXR1cyA9IGZsb3dJbmZvLm51bGxTdGF0dXMo
bG9jYWwpOworCQl9IGZpbmFsbHkgeworCQkJLy8gcmVzZXQKKwkJCWZsb3dJbmZvLnRhZ0JpdHMg
fD0gcmVhY2hNb2RlOworCQl9CisJCS8vIGF0IHRoaXMgcG9pbnQgc29tZSBjb21iaW5hdGlvbnMg
YXJlIG5vdCB1c2VmdWwgc28gZmxhdHRlbiB0byBhIHNpbmdsZSBiaXQ6CisJCWlmICgoc3RhdHVz
ICYgRmxvd0luZm8uTlVMTCkgIT0gMCkgeworCQkJaWYgKChzdGF0dXMgJiAoRmxvd0luZm8uTk9O
X05VTEwgfCBGbG93SW5mby5QT1RFTlRJQUxMWV9OT05fTlVMTCkpICE9IDApCisJCQkJcmV0dXJu
IEZsb3dJbmZvLlBPVEVOVElBTExZX05VTEw7IAkvLyBudWxsICsgZG91YnQgPSBwb3QgbnVsbAor
CQkJcmV0dXJuIEZsb3dJbmZvLk5VTEw7CisJCX0gZWxzZSBpZiAoKHN0YXR1cyAmIEZsb3dJbmZv
Lk5PTl9OVUxMKSAhPSAwKSB7CisJCQlpZiAoKHN0YXR1cyAmIEZsb3dJbmZvLlBPVEVOVElBTExZ
X05VTEwpICE9IDApCisJCQkJcmV0dXJuIEZsb3dJbmZvLlBPVEVOVElBTExZX05VTEw7CS8vIG5v
bi1udWxsICsgZG91YnQgPSBwb3QgbnVsbAorCQkJcmV0dXJuIEZsb3dJbmZvLk5PTl9OVUxMOwor
CQl9IGVsc2UgaWYgKChzdGF0dXMgJiBGbG93SW5mby5QT1RFTlRJQUxMWV9OVUxMKSAhPSAwKQor
CQkJcmV0dXJuIEZsb3dJbmZvLlBPVEVOVElBTExZX05VTEw7CisJCXJldHVybiBzdGF0dXM7CisJ
fQorCisJcHVibGljIGludCBtZXJnZUNsb3NlU3RhdHVzKEJsb2NrU2NvcGUgY3VycmVudFNjb3Bl
LCBpbnQgc3RhdHVzLCBMb2NhbFZhcmlhYmxlQmluZGluZyBsb2NhbCwgQmxvY2tTY29wZSBvdXRl
clNjb3BlKSB7CisJCS8vIGdldCB0aGUgbW9zdCBzdWl0YWJsZSBudWxsIHN0YXR1cyByZXByZXNl
bnRpbmcgd2hldGhlciByZXNvdXJjZSAnYmluZGluZycgaGFzIGJlZW4gY2xvc2VkCisJCS8vIHN0
YXJ0IGF0ICdjdXJyZW50U2NvcGUnIGFuZCBwb3RlbnRpYWxseSB0cmF2ZWwgb3V0IHVudGlsICdv
dXRlclNjb3BlJworCQkvLyBhdCBlYWNoIHNjb3BlIGNvbnN1bHQgYW55IHJlY29yZGVkICdmaW5h
bGx5SW5mbycuCisJCWlmIChzdGF0dXMgIT0gRmxvd0luZm8uTk9OX05VTEwpIHsKKwkJCWlmIChj
dXJyZW50U2NvcGUuZmluYWxseUluZm8gIT0gbnVsbCkgeworCQkJCWludCBmaW5hbGx5U3RhdHVz
ID0gY3VycmVudFNjb3BlLmZpbmFsbHlJbmZvLm51bGxTdGF0dXMobG9jYWwpOworCQkJCWlmIChm
aW5hbGx5U3RhdHVzID09IEZsb3dJbmZvLk5PTl9OVUxMKQorCQkJCQlyZXR1cm4gZmluYWxseVN0
YXR1czsKKwkJCQlpZiAoZmluYWxseVN0YXR1cyAhPSBGbG93SW5mby5OVUxMKSAvLyBuZWl0aGVy
IGlzIE5PTl9OVUxMLCBidXQgbm90IGJvdGggYXJlIE5VTEwgPT4gY2FsbCBpdCBQT1RFTlRJQUxM
WV9OVUxMCisJCQkJCXN0YXR1cyA9IEZsb3dJbmZvLlBPVEVOVElBTExZX05VTEw7CisJCQl9CisJ
CQlpZiAoY3VycmVudFNjb3BlICE9IG91dGVyU2NvcGUgJiYgY3VycmVudFNjb3BlLnBhcmVudCBp
bnN0YW5jZW9mIEJsb2NrU2NvcGUpCisJCQkJcmV0dXJuIG1lcmdlQ2xvc2VTdGF0dXMoKChCbG9j
a1Njb3BlKSBjdXJyZW50U2NvcGUucGFyZW50KSwgc3RhdHVzLCBsb2NhbCwgb3V0ZXJTY29wZSk7
CisJCX0KKwkJcmV0dXJuIHN0YXR1czsKIAl9CiAKIAkvKiogTWFyayB0aGF0IHRoaXMgcmVzb3Vy
Y2UgaXMgY2xvc2VkIGxvY2FsbHkuICovCkBAIC0xODAsNyArNDAwLDExIEBACiAJICogKGFzIGFy
Z3VtZW50IHRvIGEgbWV0aG9kL2N0b3IgY2FsbCBvciBhcyBhIHJldHVybiB2YWx1ZSBmcm9tIHRo
ZSBjdXJyZW50IG1ldGhvZCksIAogCSAqIGFuZCB0aHVzIHNob3VsZCBiZSBjb25zaWRlcmVkIGFz
IHBvdGVudGlhbGx5IGNsb3NlZC4KIAkgKi8KLQlwdWJsaWMgc3RhdGljIEZsb3dJbmZvIG1hcmtQ
YXNzZWRUb091dHNpZGUoQmxvY2tTY29wZSBzY29wZSwgRXhwcmVzc2lvbiBleHByZXNzaW9uLCBG
bG93SW5mbyBmbG93SW5mbykgeworCXB1YmxpYyBzdGF0aWMgRmxvd0luZm8gbWFya1Bhc3NlZFRv
T3V0c2lkZShCbG9ja1Njb3BlIHNjb3BlLCBFeHByZXNzaW9uIGV4cHJlc3Npb24sIEZsb3dJbmZv
IGZsb3dJbmZvLCBUeXBlQmluZGluZyBhbGxvY2F0ZWRUeXBlKSB7CQorCQlpZiAoKGFsbG9jYXRl
ZFR5cGUgaW5zdGFuY2VvZiBSZWZlcmVuY2VCaW5kaW5nKSAKKwkJCQkmJiAoKFJlZmVyZW5jZUJp
bmRpbmcpIGFsbG9jYXRlZFR5cGUpLmhhc1R5cGVCaXQoVHlwZUlkcy5CaXRXcmFwcGVyQ2xvc2Vh
YmxlKSkKKwkJCXJldHVybiBmbG93SW5mbzsgLy8gd3JhcHBlZCBjbG9zZWFibGVzIGFyZSBhbmFs
eXplZCBzZXBhcmF0ZWx5OgorCQkKIAkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlIHRyYWNrVmFyID0g
Z2V0Q2xvc2VUcmFja2luZ1ZhcmlhYmxlKGV4cHJlc3Npb24pOwogCQlpZiAodHJhY2tWYXIgIT0g
bnVsbCkgewogCQkJdHJhY2tWYXIuZ2xvYmFsQ2xvc2luZ1N0YXRlIHw9IFBBU1NFRF9UT19PVVRT
SURFOwpAQCAtMjAxLDkgKzQyNSwxNCBAQAogCX0KIAogCXB1YmxpYyBib29sZWFuIHJlcG9ydFJl
Y29yZGVkRXJyb3JzKFNjb3BlIHNjb3BlKSB7Ci0JCWlmICh0aGlzLmdsb2JhbENsb3NpbmdTdGF0
ZSA9PSAwKSB7Ci0JCQlyZXBvcnRFcnJvcihzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKSwgbnVsbCwg
Rmxvd0luZm8uTlVMTCk7Ci0JCQlyZXR1cm4gdHJ1ZTsKKwkJRmFrZWRUcmFja2luZ1ZhcmlhYmxl
IGN1cnJlbnQgPSB0aGlzOworCQl3aGlsZSAoY3VycmVudC5nbG9iYWxDbG9zaW5nU3RhdGUgPT0g
MCkgeworCQkJY3VycmVudCA9IGN1cnJlbnQuaW5uZXJUcmFja2VyOworCQkJaWYgKGN1cnJlbnQg
PT0gbnVsbCkgeworCQkJCS8vIG5vIHJlbGV2YW50IHN0YXRlIGZvdW5kIC0+IHJlcG9ydDoKKwkJ
CQlyZXBvcnRFcnJvcihzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKSwgbnVsbCwgRmxvd0luZm8uTlVM
TCk7CisJCQkJcmV0dXJuIHRydWU7CisJCQl9CiAJCX0KIAkJYm9vbGVhbiBoYXNSZXBvcnRlZCA9
IGZhbHNlOwogCQlpZiAodGhpcy5yZWNvcmRlZExvY2F0aW9ucyAhPSBudWxsKSB7CkBAIC0yMTgs
NiArNDQ3LDggQEAKIAl9CiAJCiAJcHVibGljIHZvaWQgcmVwb3J0RXJyb3IoUHJvYmxlbVJlcG9y
dGVyIHByb2JsZW1SZXBvcnRlciwgQVNUTm9kZSBsb2NhdGlvbiwgaW50IG51bGxTdGF0dXMpIHsK
KwkJaWYgKCh0aGlzLmdsb2JhbENsb3NpbmdTdGF0ZSAmIFdSQVBQRUQpICE9IDApCisJCQlyZXR1
cm47CiAJCWlmIChudWxsU3RhdHVzID09IEZsb3dJbmZvLk5VTEwpIHsKIAkJCWlmICgodGhpcy5n
bG9iYWxDbG9zaW5nU3RhdGUgJiBDTE9TRURfSU5fTkVTVEVEX01FVEhPRCkgIT0gMCkKIAkJCQlw
cm9ibGVtUmVwb3J0ZXIucG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSh0aGlzLCBsb2NhdGlv
bik7CkBAIC0yMjUsNyArNDU2LDcgQEAKIAkJCQlwcm9ibGVtUmVwb3J0ZXIudW5jbG9zZWRDbG9z
ZWFibGUodGhpcywgbG9jYXRpb24pOwogCQl9IGVsc2UgaWYgKG51bGxTdGF0dXMgPT0gRmxvd0lu
Zm8uUE9URU5USUFMTFlfTlVMTCkgewogCQkJcHJvYmxlbVJlcG9ydGVyLnBvdGVudGlhbGx5VW5j
bG9zZWRDbG9zZWFibGUodGhpcywgbG9jYXRpb24pOwotCQl9CQkKKwkJfQogCX0KIAogCXB1Ymxp
YyB2b2lkIHJlcG9ydEV4cGxpY2l0Q2xvc2luZyhQcm9ibGVtUmVwb3J0ZXIgcHJvYmxlbVJlcG9y
dGVyKSB7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0xvY2FsRGVjbGFyYXRpb24uamF2YSBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9hc3QvTG9jYWxEZWNsYXJhdGlvbi5qYXZhCmluZGV4IGRhYzAyOWMuLjAwODg5NDQgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9hc3QvTG9jYWxEZWNsYXJhdGlvbi5qYXZhCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9h
c3QvTG9jYWxEZWNsYXJhdGlvbi5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFj
Y29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVy
bXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5p
ZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTc0LDExICs3NCwy
MSBAQAogCQl0aGlzLmluaXRpYWxpemF0aW9uLmNoZWNrTlBFKGN1cnJlbnRTY29wZSwgZmxvd0Nv
bnRleHQsIGZsb3dJbmZvKTsKIAl9CiAJCisJRmxvd0luZm8gcHJlSW5pdEluZm8gPSBudWxsOwor
CWJvb2xlYW4gc2hvdWxkQW5hbHlzZVJlc291cmNlID0gdGhpcy5iaW5kaW5nICE9IG51bGwgCisJ
CQkmJiBmbG93SW5mby5yZWFjaE1vZGUoKSA9PSBGbG93SW5mby5SRUFDSEFCTEUgCisJCQkmJiBG
YWtlZFRyYWNraW5nVmFyaWFibGUuaXNBdXRvQ2xvc2VhYmxlKHRoaXMuaW5pdGlhbGl6YXRpb24u
cmVzb2x2ZWRUeXBlKTsKKwlpZiAoc2hvdWxkQW5hbHlzZVJlc291cmNlKQorCQlwcmVJbml0SW5m
byA9IGZsb3dJbmZvLnVuY29uZGl0aW9uYWxDb3B5KCk7CisKIAlmbG93SW5mbyA9CiAJCXRoaXMu
aW5pdGlhbGl6YXRpb24KIAkJCS5hbmFseXNlQ29kZShjdXJyZW50U2NvcGUsIGZsb3dDb250ZXh0
LCBmbG93SW5mbykKIAkJCS51bmNvbmRpdGlvbmFsSW5pdHMoKTsKLQlGYWtlZFRyYWNraW5nVmFy
aWFibGUuaGFuZGxlUmVzb3VyY2VBc3NpZ25tZW50KGZsb3dJbmZvLCB0aGlzLCB0aGlzLmluaXRp
YWxpemF0aW9uLCB0aGlzLmJpbmRpbmcsIG51bGwpOworCisJaWYgKHNob3VsZEFuYWx5c2VSZXNv
dXJjZSkKKwkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlLmhhbmRsZVJlc291cmNlQXNzaWdubWVudChw
cmVJbml0SW5mbywgZmxvd0luZm8sIHRoaXMsIHRoaXMuaW5pdGlhbGl6YXRpb24sIHRoaXMuYmlu
ZGluZyk7CisKIAlpbnQgbnVsbFN0YXR1cyA9IHRoaXMuaW5pdGlhbGl6YXRpb24ubnVsbFN0YXR1
cyhmbG93SW5mbyk7CiAJaWYgKCFmbG93SW5mby5pc0RlZmluaXRlbHlBc3NpZ25lZCh0aGlzLmJp
bmRpbmcpKXsvLyBmb3IgbG9jYWwgdmFyaWFibGUgZGVidWcgYXR0cmlidXRlcwogCQl0aGlzLmJp
dHMgfD0gRmlyc3RBc3NpZ25tZW50VG9Mb2NhbDsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTWVz
c2FnZVNlbmQuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTWVzc2FnZVNlbmQuamF2YQppbmRleCA0NmQ0NTQw
Li5lYWU5NzRiIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L01lc3NhZ2VTZW5kLmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2FzdC9NZXNzYWdlU2VuZC5qYXZhCkBAIC05Nyw3ICs5Nyw3IEBACiAJCQkJdGhpcy5h
cmd1bWVudHNbaV0uY2hlY2tOUEUoY3VycmVudFNjb3BlLCBmbG93Q29udGV4dCwgZmxvd0luZm8p
OwogCQkJfQogCQkJLy8gaWYgYXJndW1lbnQgaXMgYW4gQXV0b0Nsb3NlYWJsZSBpbnNlcnQgaW5m
byB0aGF0IGl0ICptYXkqIGJlIGNsb3NlZCAoYnkgdGhlIHRhcmdldCBtZXRob2QsIGkuZS4pCi0J
CQlmbG93SW5mbyA9IEZha2VkVHJhY2tpbmdWYXJpYWJsZS5tYXJrUGFzc2VkVG9PdXRzaWRlKGN1
cnJlbnRTY29wZSwgdGhpcy5hcmd1bWVudHNbaV0sIGZsb3dJbmZvKTsKKwkJCWZsb3dJbmZvID0g
RmFrZWRUcmFja2luZ1ZhcmlhYmxlLm1hcmtQYXNzZWRUb091dHNpZGUoY3VycmVudFNjb3BlLCB0
aGlzLmFyZ3VtZW50c1tpXSwgZmxvd0luZm8sIG51bGwpOwogCQkJZmxvd0luZm8gPSB0aGlzLmFy
Z3VtZW50c1tpXS5hbmFseXNlQ29kZShjdXJyZW50U2NvcGUsIGZsb3dDb250ZXh0LCBmbG93SW5m
bykudW5jb25kaXRpb25hbEluaXRzKCk7CiAJCX0KIAkJYW5hbHlzZUFyZ3VtZW50cyhjdXJyZW50
U2NvcGUsIGZsb3dDb250ZXh0LCBmbG93SW5mbywgdGhpcy5iaW5kaW5nLCB0aGlzLmFyZ3VtZW50
cyk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1F1YWxpZmllZEFsbG9jYXRpb25FeHByZXNzaW9u
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvYXN0L1F1YWxpZmllZEFsbG9jYXRpb25FeHByZXNzaW9uLmphdmEKaW5k
ZXggM2EyYTBlZC4uNzE2OTAzMiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9RdWFsaWZpZWRBbGxv
Y2F0aW9uRXhwcmVzc2lvbi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvUXVhbGlmaWVkQWxsb2NhdGlv
bkV4cHJlc3Npb24uamF2YQpAQCAtODEsNyArODEsNyBAQAogCQlpZiAodGhpcy5hcmd1bWVudHMg
IT0gbnVsbCkgewogCQkJZm9yIChpbnQgaSA9IDAsIGNvdW50ID0gdGhpcy5hcmd1bWVudHMubGVu
Z3RoOyBpIDwgY291bnQ7IGkrKykgewogCQkJCS8vIGlmIGFyZ3VtZW50IGlzIGFuIEF1dG9DbG9z
ZWFibGUgaW5zZXJ0IGluZm8gdGhhdCBpdCAqbWF5KiBiZSBjbG9zZWQgKGJ5IHRoZSB0YXJnZXQg
bWV0aG9kLCBpLmUuKQotCQkJCWZsb3dJbmZvID0gRmFrZWRUcmFja2luZ1ZhcmlhYmxlLm1hcmtQ
YXNzZWRUb091dHNpZGUoY3VycmVudFNjb3BlLCB0aGlzLmFyZ3VtZW50c1tpXSwgZmxvd0luZm8p
OworCQkJCWZsb3dJbmZvID0gRmFrZWRUcmFja2luZ1ZhcmlhYmxlLm1hcmtQYXNzZWRUb091dHNp
ZGUoY3VycmVudFNjb3BlLCB0aGlzLmFyZ3VtZW50c1tpXSwgZmxvd0luZm8sIG51bGwpOwogCQkJ
CWZsb3dJbmZvID0gdGhpcy5hcmd1bWVudHNbaV0uYW5hbHlzZUNvZGUoY3VycmVudFNjb3BlLCBm
bG93Q29udGV4dCwgZmxvd0luZm8pOwogCQkJCWlmICgodGhpcy5hcmd1bWVudHNbaV0uaW1wbGlj
aXRDb252ZXJzaW9uICYgVHlwZUlkcy5VTkJPWElORykgIT0gMCkgewogCQkJCQl0aGlzLmFyZ3Vt
ZW50c1tpXS5jaGVja05QRShjdXJyZW50U2NvcGUsIGZsb3dDb250ZXh0LCBmbG93SW5mbyk7CmRp
ZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0JpbmFyeVR5cGVCaW5kaW5nLmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
bG9va3VwL0JpbmFyeVR5cGVCaW5kaW5nLmphdmEKaW5kZXggOTI5NDcyNi4uZTY1YWNhZSAxMDA2
NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CaW5hcnlUeXBlQmluZGluZy5qYXZhCisrKyBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9sb29rdXAvQmluYXJ5VHlwZUJpbmRpbmcuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0
aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0
aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5k
IHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIg
dGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFj
Y29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0xMjc1
LDcgKzEyNzUsOSBAQAogCQkJdGhpcy5lbnZpcm9ubWVudC5tYXlUb2xlcmF0ZU1pc3NpbmdUeXBl
ID0gd2FzVG9sZXJhdGluZ01pc3NpbmdUeXBlUHJvY2Vzc2luZ0Fubm90YXRpb25zOwogCQl9CiAJ
fQotCXRoaXMudHlwZUJpdHMgfD0gdGhpcy5zdXBlcmNsYXNzLnR5cGVCaXRzOworCXRoaXMudHlw
ZUJpdHMgfD0gKHRoaXMuc3VwZXJjbGFzcy50eXBlQml0cyAmIFR5cGVJZHMuSW5oZXJpdGFibGVC
aXRzKTsKKwlpZiAoKHRoaXMudHlwZUJpdHMgJiAoVHlwZUlkcy5CaXRBdXRvQ2xvc2VhYmxlfFR5
cGVJZHMuQml0Q2xvc2VhYmxlKSkgIT0gMCkgLy8gYXZvaWQgdGhlIHNpZGUtZWZmZWN0cyBvZiBo
YXNUeXBlQml0KCkhIAorCQl0aGlzLnR5cGVCaXRzIHw9IGFwcGx5Q2xvc2VhYmxlV2hpdGVsaXN0
cygpOwogCXJldHVybiB0aGlzLnN1cGVyY2xhc3M7CiB9CiAvLyBOT1RFOiBzdXBlckludGVyZmFj
ZXMgb2YgYmluYXJ5IHR5cGVzIGFyZSByZXNvbHZlZCB3aGVuIG5lZWRlZApAQCAtMTI5OCw3ICsx
MzAwLDcgQEAKIAkJCQl0aGlzLmVudmlyb25tZW50Lm1heVRvbGVyYXRlTWlzc2luZ1R5cGUgPSB3
YXNUb2xlcmF0aW5nTWlzc2luZ1R5cGVQcm9jZXNzaW5nQW5ub3RhdGlvbnM7CiAJCQl9CQogCQl9
Ci0JCXRoaXMudHlwZUJpdHMgfD0gdGhpcy5zdXBlckludGVyZmFjZXNbaV0udHlwZUJpdHM7CisJ
CXRoaXMudHlwZUJpdHMgfD0gKHRoaXMuc3VwZXJJbnRlcmZhY2VzW2ldLnR5cGVCaXRzICYgVHlw
ZUlkcy5Jbmhlcml0YWJsZUJpdHMpOwogCX0KIAl0aGlzLnRhZ0JpdHMgJj0gflRhZ0JpdHMuSGFz
VW5yZXNvbHZlZFN1cGVyaW50ZXJmYWNlczsKIAlyZXR1cm4gdGhpcy5zdXBlckludGVyZmFjZXM7
CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Jsb2NrU2NvcGUuamF2YSBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29r
dXAvQmxvY2tTY29wZS5qYXZhCmluZGV4IGM5M2M5ZDkuLmFmYWFiZmQgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9sb29rdXAvQmxvY2tTY29wZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQmxvY2tTY29w
ZS5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHly
aWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHly
aWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCBy
aWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlh
bHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2Ug
UHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRp
b24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTEwMDMsMTAgKzEwMDMsMTAgQEAKIAkJRmFrZWRU
cmFja2luZ1ZhcmlhYmxlIHRyYWNraW5nVmFyID0gKEZha2VkVHJhY2tpbmdWYXJpYWJsZSkgdGhp
cy50cmFja2luZ1ZhcmlhYmxlcy5nZXQoaSk7CiAJCWlmIChsb2NhdGlvbiAhPSBudWxsICYmIHRy
YWNraW5nVmFyLm9yaWdpbmFsQmluZGluZyAhPSBudWxsICYmIGZsb3dJbmZvLmlzRGVmaW5pdGVs
eU51bGwodHJhY2tpbmdWYXIub3JpZ2luYWxCaW5kaW5nKSkKIAkJCWNvbnRpbnVlOyAvLyByZXBv
cnRpbmcgYWdhaW5zdCBhIHNwZWNpZmljIGxvY2F0aW9uLCByZXNvdXJjZSBpcyBudWxsIGF0IHRo
aXMgZmxvdywgZG9uJ3QgY29tcGxhaW4KLQkJaW50IHN0YXR1cyA9IGdldE51bGxTdGF0dXNBZ2dy
ZXNzaXZlbHkodHJhY2tpbmdWYXIuYmluZGluZywgZmxvd0luZm8pOwotCQkvLyB0cnkgdG8gaW1w
cm92ZSBpbmZvIGlmIGEgY2xvc2UoKSBpbnNpZGUgZmluYWxseSB3YXMgb2JzZXJ2ZWQ6Ci0JCWlm
IChsb2NhdGlvblNjb3BlICE9IG51bGwpIC8vIG9ubHkgY2hlY2sgYXQgbWV0aG9kIGV4aXQgcG9p
bnRzCi0JCQlzdGF0dXMgPSBsb2NhdGlvblNjb3BlLm1lcmdlQ2xvc2VTdGF0dXMoc3RhdHVzLCB0
cmFja2luZ1Zhci5iaW5kaW5nLCB0aGlzKTsKKwkJCisJCS8vIGNvbXB1dGUgdGhlIG1vc3Qgc3Bl
Y2lmaWMgbnVsbCBzdGF0dXMgZm9yIHRoaXMgcmVzb3VyY2UsCisJCWludCBzdGF0dXMgPSB0cmFj
a2luZ1Zhci5maW5kTW9zdFNwZWNpZmljU3RhdHVzKGZsb3dJbmZvLCB0aGlzLCBsb2NhdGlvblNj
b3BlKTsKKwkJCiAJCWlmIChzdGF0dXMgPT0gRmxvd0luZm8uTlVMTCkgewogCQkJLy8gZGVmaW5p
dGVseSB1bmNsb3NlZDogaGlnaGVzdCBwcmlvcml0eQogCQkJcmVwb3J0UmVzb3VyY2VMZWFrKHRy
YWNraW5nVmFyLCBsb2NhdGlvbiwgc3RhdHVzKTsKQEAgLTEwMzMsMjQgKzEwMzMsNiBAQAogCQkJ
dGhpcy5sb2NhbHNbaV0uY2xvc2VUcmFja2VyID0gbnVsbDsJCQogCQl0aGlzLnRyYWNraW5nVmFy
aWFibGVzID0gbnVsbDsKIAl9Ci19Ci0KLXByaXZhdGUgaW50IG1lcmdlQ2xvc2VTdGF0dXMoaW50
IHN0YXR1cywgTG9jYWxWYXJpYWJsZUJpbmRpbmcgYmluZGluZywgQmxvY2tTY29wZSBvdXRlclNj
b3BlKSB7Ci0JLy8gZ2V0IHRoZSBtb3N0IHN1aXRhYmxlIG51bGwgc3RhdHVzIHJlcHJlc2VudGlu
ZyB3aGV0aGVyIHJlc291cmNlICdiaW5kaW5nJyBoYXMgYmVlbiBjbG9zZWQKLQkvLyBzdGFydCBh
dCB0aGlzIHNjb3BlIGFuZCBwb3RlbnRpYWxseSB0cmF2ZWwgb3V0IHVudGlsICdvdXRlclNjb3Bl
JwotCS8vIGF0IGVhY2ggc2NvcGUgY29uc3VsdCBhbnkgcmVjb3JkZWQgJ2ZpbmFsbHlJbmZvJy4K
LQlpZiAoc3RhdHVzICE9IEZsb3dJbmZvLk5PTl9OVUxMKSB7Ci0JCWlmICh0aGlzLmZpbmFsbHlJ
bmZvICE9IG51bGwpIHsKLQkJCWludCBmaW5hbGx5U3RhdHVzID0gdGhpcy5maW5hbGx5SW5mby5u
dWxsU3RhdHVzKGJpbmRpbmcpOwotCQkJaWYgKGZpbmFsbHlTdGF0dXMgPT0gRmxvd0luZm8uTk9O
X05VTEwpCi0JCQkJcmV0dXJuIGZpbmFsbHlTdGF0dXM7Ci0JCQlpZiAoZmluYWxseVN0YXR1cyAh
PSBGbG93SW5mby5OVUxMKSAvLyBuZWl0aGVyIGlzIE5PTl9OVUxMLCBidXQgbm90IGJvdGggYXJl
IE5VTEwgPT4gY2FsbCBpdCBQT1RFTlRJQUxMWV9OVUxMCi0JCQkJc3RhdHVzID0gRmxvd0luZm8u
UE9URU5USUFMTFlfTlVMTDsKLQkJfQotCQlpZiAodGhpcyAhPSBvdXRlclNjb3BlICYmIHRoaXMu
cGFyZW50IGluc3RhbmNlb2YgQmxvY2tTY29wZSkKLQkJCXJldHVybiAoKEJsb2NrU2NvcGUpIHRo
aXMucGFyZW50KS5tZXJnZUNsb3NlU3RhdHVzKHN0YXR1cywgYmluZGluZywgb3V0ZXJTY29wZSk7
Ci0JfQotCXJldHVybiBzdGF0dXM7CiB9CiAKIHByaXZhdGUgdm9pZCByZXBvcnRSZXNvdXJjZUxl
YWsoRmFrZWRUcmFja2luZ1ZhcmlhYmxlIHRyYWNraW5nVmFyLCBBU1ROb2RlIGxvY2F0aW9uLCBp
bnQgbnVsbFN0YXR1cykgewpAQCAtMTA5NywzNyArMTA3OSw1IEBACiAJfQogCWlmICh0aGlzLnBh
cmVudCBpbnN0YW5jZW9mIEJsb2NrU2NvcGUpCiAJCSgoQmxvY2tTY29wZSkgdGhpcy5wYXJlbnQp
LmNvcnJlbGF0ZVRyYWNraW5nVmFyc0lmRWxzZSh0aGVuRmxvd0luZm8sIGVsc2VGbG93SW5mbyk7
Ci19Ci0KLS8qKgotICogR2V0IHRoZSBudWxsIHN0YXR1cyBsb29raW5nIGV2ZW4gaW50byB1bnJl
YWNoYWJsZSBmbG93cwotICogQHBhcmFtIGxvY2FsCi0gKiBAcGFyYW0gZmxvd0luZm8KLSAqIEBy
ZXR1cm4gb25lIG9mIHRoZSBjb25zdGFudHMgRmxvd0luZm8ue05VTEwsUE9URU5USUFMTFlfTlVM
TCxQT1RFTlRJQUxMWV9OT05fTlVMTCxOT05fTlVMTH0uCi0gKi8KLXByaXZhdGUgaW50IGdldE51
bGxTdGF0dXNBZ2dyZXNzaXZlbHkoTG9jYWxWYXJpYWJsZUJpbmRpbmcgbG9jYWwsIEZsb3dJbmZv
IGZsb3dJbmZvKSB7Ci0JaW50IHJlYWNoTW9kZSA9IGZsb3dJbmZvLnJlYWNoTW9kZSgpOwotCWlu
dCBzdGF0dXMgPSAwOwotCXRyeSB7Ci0JCS8vIHVucmVhY2hhYmxlIGZsb3dJbmZvIGlzIHRvbyBz
aHkgaW4gcmVwb3J0aW5nIG51bGwtaXNzdWVzLCB0ZW1wb3JhcmlseSBmb3JnZXQgcmVhY2hhYmls
aXR5OgotCQlpZiAocmVhY2hNb2RlICE9IEZsb3dJbmZvLlJFQUNIQUJMRSkKLQkJCWZsb3dJbmZv
LnRhZ0JpdHMgJj0gfkZsb3dJbmZvLlVOUkVBQ0hBQkxFOwotCQlzdGF0dXMgPSBmbG93SW5mby5u
dWxsU3RhdHVzKGxvY2FsKTsKLQl9IGZpbmFsbHkgewotCQkvLyByZXNldAotCQlmbG93SW5mby50
YWdCaXRzIHw9IHJlYWNoTW9kZTsKLQl9Ci0JLy8gYXQgdGhpcyBwb2ludCBzb21lIGNvbWJpbmF0
aW9ucyBhcmUgbm90IHVzZWZ1bCBzbyBmbGF0dGVuIHRvIGEgc2luZ2xlIGJpdDoKLQlpZiAoKHN0
YXR1cyAmIEZsb3dJbmZvLk5VTEwpICE9IDApIHsKLQkJaWYgKChzdGF0dXMgJiAoRmxvd0luZm8u
Tk9OX05VTEwgfCBGbG93SW5mby5QT1RFTlRJQUxMWV9OT05fTlVMTCkpICE9IDApCi0JCQlyZXR1
cm4gRmxvd0luZm8uUE9URU5USUFMTFlfTlVMTDsgCS8vIG51bGwgKyBkb3VidCA9IHBvdCBudWxs
Ci0JCXJldHVybiBGbG93SW5mby5OVUxMOwotCX0gZWxzZSBpZiAoKHN0YXR1cyAmIEZsb3dJbmZv
Lk5PTl9OVUxMKSAhPSAwKSB7Ci0JCWlmICgoc3RhdHVzICYgRmxvd0luZm8uUE9URU5USUFMTFlf
TlVMTCkgIT0gMCkKLQkJCXJldHVybiBGbG93SW5mby5QT1RFTlRJQUxMWV9OVUxMOwkvLyBub24t
bnVsbCArIGRvdWJ0ID0gcG90IG51bGwKLQkJcmV0dXJuIEZsb3dJbmZvLk5PTl9OVUxMOwotCX0g
ZWxzZSBpZiAoKHN0YXR1cyAmIEZsb3dJbmZvLlBPVEVOVElBTExZX05VTEwpICE9IDApCi0JCXJl
dHVybiBGbG93SW5mby5QT1RFTlRJQUxMWV9OVUxMOwotCXJldHVybiBzdGF0dXM7CiB9CiB9CmRp
ZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0NsYXNzU2NvcGUuamF2YSBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAv
Q2xhc3NTY29wZS5qYXZhCmluZGV4IDNlYjNjY2EuLjE3NDMwMTUgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9sb29rdXAvQ2xhc3NTY29wZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQ2xhc3NTY29wZS5q
YXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdo
dCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdo
dCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdo
dHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMK
ICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVi
bGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24s
IGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTkwOSw3ICs5MDksMTAgQEAKIAkJCX0gZWxzZSB7CiAJ
CQkJLy8gb25seSB3YW50IHRvIHJlYWNoIGhlcmUgd2hlbiBubyBlcnJvcnMgYXJlIHJlcG9ydGVk
CiAJCQkJc291cmNlVHlwZS5zdXBlcmNsYXNzID0gc3VwZXJjbGFzczsKLQkJCQlzb3VyY2VUeXBl
LnR5cGVCaXRzIHw9IHN1cGVyY2xhc3MudHlwZUJpdHM7CisJCQkJc291cmNlVHlwZS50eXBlQml0
cyB8PSAoc3VwZXJjbGFzcy50eXBlQml0cyAmIFR5cGVJZHMuSW5oZXJpdGFibGVCaXRzKTsKKwkJ
CQkvLyBmdXJ0aGVyIGFuYWx5c2lzIGFnYWluc3Qgd2hpdGUgbGlzdHMgZm9yIHRoZSB1bmxpa2Vs
eSBjYXNlIHdlIGFyZSBjb21waWxpbmcgamF2YS5pby4qOgorCQkJCWlmICgoKHNvdXJjZVR5cGUu
dHlwZUJpdHMgJiBUeXBlSWRzLkJpdEF1dG9DbG9zZWFibGV8VHlwZUlkcy5CaXRDbG9zZWFibGUp
KSAhPSAwKQorCQkJCQlzb3VyY2VUeXBlLnR5cGVCaXRzIHw9IHNvdXJjZVR5cGUuYXBwbHlDbG9z
ZWFibGVXaGl0ZWxpc3RzKCk7CiAJCQkJcmV0dXJuIHRydWU7CiAJCQl9CiAJCX0KQEAgLTEwMjUs
NyArMTAyOCw3IEBACiAJCQkJbm9Qcm9ibGVtcyAmPSBzdXBlckludGVyZmFjZVJlZi5yZXNvbHZl
ZFR5cGUuaXNWYWxpZEJpbmRpbmcoKTsKIAkJCX0KIAkJCS8vIG9ubHkgd2FudCB0byByZWFjaCBo
ZXJlIHdoZW4gbm8gZXJyb3JzIGFyZSByZXBvcnRlZAotCQkJc291cmNlVHlwZS50eXBlQml0cyB8
PSBzdXBlckludGVyZmFjZS50eXBlQml0czsKKwkJCXNvdXJjZVR5cGUudHlwZUJpdHMgfD0gKHN1
cGVySW50ZXJmYWNlLnR5cGVCaXRzICYgVHlwZUlkcy5Jbmhlcml0YWJsZUJpdHMpOwogCQkJaW50
ZXJmYWNlQmluZGluZ3NbY291bnQrK10gPSBzdXBlckludGVyZmFjZTsKIAkJfQogCQkvLyBob2xk
IG9udG8gYWxsIGNvcnJlY3RseSByZXNvbHZlZCBzdXBlcmludGVyZmFjZXMKZGlmZiAtLWdpdCBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9sb29rdXAvUmVmZXJlbmNlQmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9SZWZl
cmVuY2VCaW5kaW5nLmphdmEKaW5kZXggNzVkZTg1NC4uMDU3ZmI0ZiAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2xvb2t1cC9SZWZlcmVuY2VCaW5kaW5nLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9SZWZl
cmVuY2VCaW5kaW5nLmphdmEKQEAgLTE0NjksNCArMTQ2OSwzMSBAQAogcHVibGljIEZpZWxkQmlu
ZGluZ1tdIHVuUmVzb2x2ZWRGaWVsZHMoKSB7CiAJcmV0dXJuIEJpbmRpbmcuTk9fRklFTERTOwog
fQorCisvKgorICogSWYgYSB0eXBlIC0ga25vd24gdG8gYmUgYSBDbG9zZWFibGUgLSBpcyBtZW50
aW9uZWQgaW4gb25lIG9mIG91ciB3aGl0ZSBsaXN0cworICogYW5zd2VyIHRoZSB0eXBlQml0IGZv
ciB0aGUgd2hpdGUgbGlzdCAoQml0V3JhcHBlckNsb3NlYWJsZSBvciBCaXRSZXNvdXJjZUZyZWVD
bG9zZWFibGUpLgorICovCitwcm90ZWN0ZWQgaW50IGFwcGx5Q2xvc2VhYmxlV2hpdGVsaXN0cygp
IHsKKwlzd2l0Y2ggKHRoaXMuY29tcG91bmROYW1lLmxlbmd0aCkgeworCQljYXNlIDM6CisJCQlp
ZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoVHlwZUNvbnN0YW50cy5KQVZBLCB0aGlzLmNvbXBvdW5k
TmFtZVswXSkpIHsKKwkJCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoVHlwZUNvbnN0YW50cy5J
TywgdGhpcy5jb21wb3VuZE5hbWVbMV0pKSB7CisJCQkJCWNoYXJbXSBzaW1wbGVOYW1lID0gdGhp
cy5jb21wb3VuZE5hbWVbMl07CisJCQkJCWludCBsID0gVHlwZUNvbnN0YW50cy5KQVZBX0lPX1dS
QVBQRVJfQ0xPU0VBQkxFUy5sZW5ndGg7CisJCQkJCWZvciAoaW50IGkgPSAwOyBpIDwgbDsgaSsr
KSB7CisJCQkJCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoc2ltcGxlTmFtZSwgVHlwZUNvbnN0
YW50cy5KQVZBX0lPX1dSQVBQRVJfQ0xPU0VBQkxFU1tpXSkpCisJCQkJCQkJcmV0dXJuIFR5cGVJ
ZHMuQml0V3JhcHBlckNsb3NlYWJsZTsKKwkJCQkJfQorCQkJCQlsID0gVHlwZUNvbnN0YW50cy5K
QVZBX0lPX1JFU09VUkNFX0ZSRUVfQ0xPU0VBQkxFUy5sZW5ndGg7CisJCQkJCWZvciAoaW50IGkg
PSAwOyBpIDwgbDsgaSsrKSB7CisJCQkJCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoc2ltcGxl
TmFtZSwgVHlwZUNvbnN0YW50cy5KQVZBX0lPX1JFU09VUkNFX0ZSRUVfQ0xPU0VBQkxFU1tpXSkp
CisJCQkJCQkJcmV0dXJuIFR5cGVJZHMuQml0UmVzb3VyY2VGcmVlQ2xvc2VhYmxlOworCQkJCQl9
CisJCQkJfQorCQkJfQorCQkJYnJlYWs7CisJfQorCXJldHVybiAwOworfQogfQpkaWZmIC0tZ2l0
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2xvb2t1cC9UeXBlQ29uc3RhbnRzLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVD
b25zdGFudHMuamF2YQppbmRleCAwYmJlZjQ3Li4wNzkxM2ZjIDEwMDY0NAotLS0gYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
bG9va3VwL1R5cGVDb25zdGFudHMuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVDb25zdGFu
dHMuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5
cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5
cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwg
cmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJp
YWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNl
IFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0
aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0xNTQsNiArMTU0LDI0IEBACiAJfTsKIAljaGFy
W11bXSBKQVZBX0xBTkdfQVVUT0NMT1NFQUJMRSA9ICB7SkFWQSwgTEFORywgIkF1dG9DbG9zZWFi
bGUiLnRvQ2hhckFycmF5KCl9OyAvLyROT04tTkxTLTEkCiAJY2hhcltdIENMT1NFID0gImNsb3Nl
Ii50b0NoYXJBcnJheSgpOyAvLyROT04tTkxTLTEkCisJLy8gd2hpdGUgbGlzdHMgb2YgY2xvc2Vh
YmxlczoKKwljaGFyW11bXSBKQVZBX0lPX1dSQVBQRVJfQ0xPU0VBQkxFUyA9IG5ldyBjaGFyW11b
XSB7CisJCSJCdWZmZXJlZElucHV0U3RyZWFtIi50b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEk
CisJCSJCdWZmZXJlZE91dHB1dFN0cmVhbSIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAor
CQkiQnVmZmVyZWRSZWFkZXIiLnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwkJIkJ1ZmZl
cmVkV3JpdGVyIi50b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJJbnB1dFN0cmVhbVJl
YWRlciIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiUHJpbnRXcml0ZXIiLnRvQ2hh
ckFycmF5KCksICAvLyROT04tTkxTLTEkCisJCSJMaW5lTnVtYmVyUmVhZGVyIi50b0NoYXJBcnJh
eSgpLCAvLyROT04tTkxTLTEkCisJfTsKKwljaGFyW11bXSBKQVZBX0lPX1JFU09VUkNFX0ZSRUVf
Q0xPU0VBQkxFUyA9IG5ldyBjaGFyW11bXSB7CQkJCisJCSJTdHJpbmdSZWFkZXIiLnRvQ2hhckFy
cmF5KCksIC8vJE5PTi1OTFMtMSQKKwkJIlN0cmluZ1dyaXRlciIudG9DaGFyQXJyYXkoKSwgLy8k
Tk9OLU5MUy0xJAorCQkiQnl0ZUFycmF5SW5wdXRTdHJlYW0iLnRvQ2hhckFycmF5KCksIC8vJE5P
Ti1OTFMtMSQKKwkJIkJ5dGVBcnJheU91dHB1dFN0cmVhbSIudG9DaGFyQXJyYXkoKSwgLy8kTk9O
LU5MUy0xJAorCQkiQ2hhckFycmF5UmVhZGVyIi50b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEk
CisJCSJDaGFyQXJyYXlXcml0ZXIiLnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwl9Owog
CiAJLy8gQ29uc3RyYWludHMgZm9yIGdlbmVyaWMgdHlwZSBhcmd1bWVudCBpbmZlcmVuY2UKIAlp
bnQgQ09OU1RSQUlOVF9FUVVBTCA9IDA7CQkvLyBBY3R1YWwgPSBGb3JtYWwKZGlmZiAtLWdpdCBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9sb29rdXAvVHlwZUlkcy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlSWRzLmphdmEK
aW5kZXggN2ZmZjQzNC4uZDZlYzk0NSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlSWRz
LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlSWRzLmphdmEKQEAgLTEsNSArMSw1IEBACiAv
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9n
cmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxl
IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3
aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApA
QCAtMjA3LDQgKzIwNywxOSBAQAogCSAqIEBzZWUgUmVmZXJlbmNlQmluZGluZyNoYXNUeXBlQml0
KGludCkKIAkgKi8KIAlmaW5hbCBpbnQgQml0Q2xvc2VhYmxlID0gMjsKKwkvKioKKwkgKiBCaXQg
Zm9yIG1lbWJlcnMgb2YgYSB3aGl0ZSBsaXN0OgorCSAqIFN1YnR5cGVzIG9mIENsb3NlYWJsZSB0
aGF0IHdyYXAgYW5vdGhlciByZXNvdXJjZSB3aXRob3V0IGRpcmVjdGx5IGhvbGRpbmcgYW55IE9T
IHJlc291cmNlcy4gCisJICovCisJZmluYWwgaW50IEJpdFdyYXBwZXJDbG9zZWFibGUgPSA0Owor
CS8qKgorCSAqIEJpdCBmb3IgbWVtYmVycyBvZiBhIHdoaXRlIGxpc3Q6CisJICogU3VidHlwZXMg
b2YgQ2xvc2VhYmxlIHRoYXQgZG8gbm90IGhvbGQgYW4gT1MgcmVzb3VyY2UgdGhhdCBuZWVkcyB0
byBiZSByZWxlYXNlZC4KKwkgKi8KKwlmaW5hbCBpbnQgQml0UmVzb3VyY2VGcmVlQ2xvc2VhYmxl
ID0gODsKKwkKKwkvKioKKwkgKiBTZXQgb2YgdHlwZSBiaXRzIHRoYXQgc2hvdWxkIGJlIGluaGVy
aXRlZCBieSBhbnkgc3ViIHR5cGVzLgorCSAqLworCWZpbmFsIGludCBJbmhlcml0YWJsZUJpdHMg
PSBCaXRBdXRvQ2xvc2VhYmxlIHwgQml0Q2xvc2VhYmxlOwogfQpkaWZmIC0tZ2l0IGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2xvb2t1cC9UeXBlVmFyaWFibGVCaW5kaW5nLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVWYXJp
YWJsZUJpbmRpbmcuamF2YQppbmRleCA5OTVmMzBlLi5iZDY5OGYzIDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvbG9va3VwL1R5cGVWYXJpYWJsZUJpbmRpbmcuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5
cGVWYXJpYWJsZUJpbmRpbmcuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBv
dGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBv
dGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2Nv
bXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1z
IG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVz
IHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0zMTYsMTEgKzMxNiwx
MSBAQAogCQkJLy8gaW5pdGlhbGl6ZSBmcm9tIGJvdW5kcwogCQkJdGhpcy50eXBlQml0cyA9IDA7
CiAJCQlpZiAodGhpcy5zdXBlcmNsYXNzICE9IG51bGwgJiYgdGhpcy5zdXBlcmNsYXNzLmhhc1R5
cGVCaXQoflR5cGVJZHMuQml0VW5pbml0aWFsaXplZCkpCi0JCQkJdGhpcy50eXBlQml0cyB8PSB0
aGlzLnN1cGVyY2xhc3MudHlwZUJpdHM7CisJCQkJdGhpcy50eXBlQml0cyB8PSAodGhpcy5zdXBl
cmNsYXNzLnR5cGVCaXRzICYgVHlwZUlkcy5Jbmhlcml0YWJsZUJpdHMpOwogCQkJaWYgKHRoaXMu
c3VwZXJJbnRlcmZhY2VzICE9IG51bGwpCiAJCQkJZm9yIChpbnQgaSA9IDAsIGwgPSB0aGlzLnN1
cGVySW50ZXJmYWNlcy5sZW5ndGg7IGkgPCBsOyBpKyspCiAJCQkJCWlmICh0aGlzLnN1cGVySW50
ZXJmYWNlc1tpXS5oYXNUeXBlQml0KH5UeXBlSWRzLkJpdFVuaW5pdGlhbGl6ZWQpKQotCQkJCQkJ
dGhpcy50eXBlQml0cyB8PSB0aGlzLnN1cGVySW50ZXJmYWNlc1tpXS50eXBlQml0czsKKwkJCQkJ
CXRoaXMudHlwZUJpdHMgfD0gKHRoaXMuc3VwZXJJbnRlcmZhY2VzW2ldLnR5cGVCaXRzICYgVHlw
ZUlkcy5Jbmhlcml0YWJsZUJpdHMpOwogCQl9CiAJCXJldHVybiAodGhpcy50eXBlQml0cyAmIGJp
dCkgIT0gMDsKIAl9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1dpbGRjYXJkQmluZGluZy5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2xvb2t1cC9XaWxkY2FyZEJpbmRpbmcuamF2YQppbmRleCAwMWYzNjllLi5i
ODg3MTk2IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1dpbGRjYXJkQmluZGluZy5qYXZhCisr
KyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9sb29rdXAvV2lsZGNhcmRCaW5kaW5nLmphdmEKQEAgLTEsNSArMSw1IEBACiAv
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDA1LCAyMDExIElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDA1LCAyMDEyIElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9n
cmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxl
IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3
aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApA
QCAtNDI5LDExICs0MjksMTEgQEAKIAkJCS8vIGluaXRpYWxpemUgZnJvbSB1cHBlciBib3VuZHMK
IAkJCXRoaXMudHlwZUJpdHMgPSAwOwogCQkJaWYgKHRoaXMuc3VwZXJjbGFzcyAhPSBudWxsICYm
IHRoaXMuc3VwZXJjbGFzcy5oYXNUeXBlQml0KH5UeXBlSWRzLkJpdFVuaW5pdGlhbGl6ZWQpKQot
CQkJCXRoaXMudHlwZUJpdHMgfD0gdGhpcy5zdXBlcmNsYXNzLnR5cGVCaXRzOworCQkJCXRoaXMu
dHlwZUJpdHMgfD0gKHRoaXMuc3VwZXJjbGFzcy50eXBlQml0cyAmIFR5cGVJZHMuSW5oZXJpdGFi
bGVCaXRzKTsKIAkJCWlmICh0aGlzLnN1cGVySW50ZXJmYWNlcyAhPSBudWxsKQogCQkJCWZvciAo
aW50IGkgPSAwLCBsID0gdGhpcy5zdXBlckludGVyZmFjZXMubGVuZ3RoOyBpIDwgbDsgaSsrKQog
CQkJCQlpZiAodGhpcy5zdXBlckludGVyZmFjZXNbaV0uaGFzVHlwZUJpdCh+VHlwZUlkcy5CaXRV
bmluaXRpYWxpemVkKSkKLQkJCQkJCXRoaXMudHlwZUJpdHMgfD0gdGhpcy5zdXBlckludGVyZmFj
ZXNbaV0udHlwZUJpdHM7CisJCQkJCQl0aGlzLnR5cGVCaXRzIHw9ICh0aGlzLnN1cGVySW50ZXJm
YWNlc1tpXS50eXBlQml0cyAmIFR5cGVJZHMuSW5oZXJpdGFibGVCaXRzKTsKIAkJfQogCQlyZXR1
cm4gKHRoaXMudHlwZUJpdHMgJiBiaXQpICE9IDA7CiAJfQo=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>209169</attachid>
            <date>2012-01-07 19:26:00 -0500</date>
            <delta_ts>2012-01-08 16:53:02 -0500</delta_ts>
            <desc>Tests &amp; fix v0.8</desc>
            <filename>Bug_358903_v0.8.patch</filename>
            <type>text/plain</type>
            <size>86874</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1RyeVdpdGhSZXNvdXJj
ZXNTdGF0ZW1lbnRUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxl
ci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9UcnlX
aXRoUmVzb3VyY2VzU3RhdGVtZW50VGVzdC5qYXZhCmluZGV4IGYyMWE1N2YuLjllYzEwZjYgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1RyeVdpdGhSZXNvdXJjZXNT
dGF0ZW1lbnRUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGls
ZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vVHJ5
V2l0aFJlc291cmNlc1N0YXRlbWVudFRlc3QuamF2YQpAQCAtMTQsOCArMTQsMTMgQEAKICAqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5j
b21waWxlci5yZWdyZXNzaW9uOwogCitpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjsKK2ltcG9y
dCBqYXZhLm5ldC5VUkw7CiBpbXBvcnQgamF2YS51dGlsLk1hcDsKIAoraW1wb3J0IG9yZy5lY2xp
cHNlLmNvcmUucnVudGltZS5GaWxlTG9jYXRvcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1
bnRpbWUuUGF0aDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuUGxhdGZvcm07CiBp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSmF2YUNvcmU7CiBpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLmltcGwuQ29tcGlsZXJPcHRpb25zOwogCkBAIC0yMyw3ICsy
OCw3IEBACiBwdWJsaWMgY2xhc3MgVHJ5V2l0aFJlc291cmNlc1N0YXRlbWVudFRlc3QgZXh0ZW5k
cyBBYnN0cmFjdFJlZ3Jlc3Npb25UZXN0IHsKIAogc3RhdGljIHsKLS8vCVRFU1RTX05BTUVTID0g
bmV3IFN0cmluZ1tdIHsgInRlc3QwNTZ0aHJvdyJ9OworLy8JVEVTVFNfTkFNRVMgPSBuZXcgU3Ry
aW5nW10geyAidGVzdDA2M2MifTsKIC8vCVRFU1RTX05VTUJFUlMgPSBuZXcgaW50W10geyA1MCB9
OwogLy8JVEVTVFNfUkFOR0UgPSBuZXcgaW50W10geyAxMSwgLTEgfTsKIH0KQEAgLTM3MTMsMTEg
KzM3MTgsMTIgQEAKIAkJb3B0aW9ucyk7CiB9CiAvLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdh
cm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCisvLyBCdWcgMzYyMzMyIC0gT25s
eSByZXBvcnQgcG90ZW50aWFsIGxlYWsgd2hlbiBjbG9zZWFibGUgbm90IGNyZWF0ZWQgaW4gdGhl
IGxvY2FsIHNjb3BlCiAvLyBvbmUgbWV0aG9kIHJldHVybnMgYW4gQXV0b0NsZWFzYmxlLCBhIHNl
Y29uZCBtZXRob2QgdXNlcyB0aGlzIG9iamVjdCB3aXRob3V0IGV2ZXIgY2xvc2luZyBpdC4KIHB1
YmxpYyB2b2lkIHRlc3QwNTZlKCkgewogCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25z
KCk7CiAJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENs
b3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQlvcHRpb25zLnB1dChDb21waWxlck9w
dGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVy
T3B0aW9ucy5XQVJOSU5HKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1Jl
cG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7
CiAJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCiAJCW5ldyBTdHJpbmdbXSB7CiAJCQkiWC5qYXZhIiwK
QEAgLTM3NDQsNyArMzc1MCw3IEBACiAJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTEp
XG4iICsgCiAJCSIJRmlsZVJlYWRlciByZWFkZXIgPSBnZXRSZWFkZXIoXCJzb21lZmlsZVwiKTtc
biIgKyAKIAkJIgkgICAgICAgICAgIF5eXl5eXlxuIiArIAotCQkiUmVzb3VyY2UgbGVhazogJ3Jl
YWRlcicgaXMgbmV2ZXIgY2xvc2VkXG4iICsgCisJCSJQb3RlbnRpYWwgcmVzb3VyY2UgbGVhazog
XCdyZWFkZXJcJyBtYXkgbm90IGJlIGNsb3NlZFxuIiArIAogCQkiLS0tLS0tLS0tLVxuIiwKIAkJ
bnVsbCwKIAkJdHJ1ZSwKQEAgLTQzNTgsMTEgKzQzNjQsMTIgQEAKIAkJbnVsbC8qcmVxdWVzdG9y
Ki8pOwogfQogLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRy
eS13aXRoLXJlc291cmNlcworLy8gQnVnIDM2MjMzMiAtIE9ubHkgcmVwb3J0IHBvdGVudGlhbCBs
ZWFrIHdoZW4gY2xvc2VhYmxlIG5vdCBjcmVhdGVkIGluIHRoZSBsb2NhbCBzY29wZQogLy8gYSBt
ZXRob2QgdXNlcyBhbiBBdXRvQ2xvc2VhYmxlIHdpdGhvdXQgZXZlciBjbG9zaW5nIGl0LCB0eXBl
IGZyb20gYSB0eXBlIHZhcmlhYmxlCiBwdWJsaWMgdm9pZCB0ZXN0MDU2cCgpIHsKIAlNYXAgb3B0
aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwogCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9u
cy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7
Ci0Jb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVu
Y2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7CisJb3B0aW9ucy5wdXQo
Q29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxl
LCBDb21waWxlck9wdGlvbnMuRVJST1IpOwogCXRoaXMucnVuTmVnYXRpdmVUZXN0KAogCQluZXcg
U3RyaW5nW10gewogCQkJIlguamF2YSIsCkBAIC00Mzg5LDcgKzQzOTYsNyBAQAogCQkiMS4gRVJS
T1IgaW4gWC5qYXZhIChhdCBsaW5lIDgpXG4iICsgCiAJCSIJVCBmaWxlUmVhZGVyID0gbmV3UmVh
ZGVyKGZpbGUpO1xuIiArIAogCQkiCSAgXl5eXl5eXl5eXlxuIiArIAotCQkiUmVzb3VyY2UgbGVh
azogJ2ZpbGVSZWFkZXInIGlzIG5ldmVyIGNsb3NlZFxuIiArCisJCSJQb3RlbnRpYWwgcmVzb3Vy
Y2UgbGVhazogXCdmaWxlUmVhZGVyXCcgbWF5IG5vdCBiZSBjbG9zZWRcbiIgKwogCQkiLS0tLS0t
LS0tLVxuIiwKIAkJbnVsbCwKIAkJdHJ1ZSwKQEAgLTQ0NDQsNyArNDQ1MSw3IEBACiAJCW9wdGlv
bnMpOwogfQogLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRy
eS13aXRoLXJlc291cmNlcwotLy8gY2xvc2VkIGluIGRlYWQgY29kZQorLy8gcHJvcGVybHkgY2xv
c2VkLCBkZWFkIGNvZGUgaW4gYmV0d2VlbgogcHVibGljIHZvaWQgdGVzdDA1NnIoKSB7CiAJTWFw
IG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKIAlvcHRpb25zLnB1dChKYXZhQ29yZS5D
T01QSUxFUl9QQl9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CkBA
IC01MzU0LDcgKzUzNjEsNzI2IEBACiAJCSJYOjp+WFxuIiArIAogCQkidHJ1ZSIpOwogfQotCisv
LyBCdWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxl
YWsgd2FybmluZ3MKKy8vIEJ1ZyAzNjA5MDggLSBBdm9pZCByZXNvdXJjZSBsZWFrIHdhcm5pbmcg
d2hlbiB0aGUgdW5kZXJseWluZy9jaGFpbmVkIHJlc291cmNlIGlzIGNsb3NlZCBleHBsaWNpdGx5
CisvLyBhIHJlc291cmNlIHdyYXBwZXIgaXMgbm90IGNsb3NlZCBidXQgdGhlIHVuZGVybHlpbmcg
cmVzb3VyY2UgaXMKK3B1YmxpYyB2b2lkIHRlc3QwNjFhKCkgeworCU1hcCBvcHRpb25zID0gZ2V0
Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9S
ZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25z
LnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9z
ZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJ
bmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZhLmlvLkZpbGU7XG4i
ICsKKwkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJlZElucHV0U3RyZWFtO1xuIiArCisJCQkiaW1w
b3J0IGphdmEuaW8uRmlsZUlucHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9F
eGNlcHRpb247XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIgICAgdm9pZCBm
b28oKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBGaWxlIGZpbGUgPSBu
ZXcgRmlsZShcInNvbWVmaWxlXCIpO1xuIiArCisJCQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0g
ZmlsZVN0cmVhbSAgPSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpO1xuIiArCisJCQkiICAgICAg
ICBCdWZmZXJlZElucHV0U3RyZWFtIGJpcyA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGZpbGVT
dHJlYW0pO1xuIiArCisJCQkiICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGRvdWJsZVdyYXAg
PSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShiaXMpO1xuIiArCisJCQkiICAgICAgICBTeXN0ZW0u
b3V0LnByaW50bG4oYmlzLmF2YWlsYWJsZSgpKTtcbiIgKworCQkJIiAgICAgICAgZmlsZVN0cmVh
bS5jbG9zZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICB2b2lkIGlubGluZSgpIHRo
cm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxl
KFwic29tZWZpbGVcIik7XG4iICsKKwkJCSIgICAgICAgIEZpbGVJbnB1dFN0cmVhbSBmaWxlU3Ry
ZWFtO1xuIiArCisJCQkiICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGJpcyA9IG5ldyBCdWZm
ZXJlZElucHV0U3RyZWFtKGZpbGVTdHJlYW0gPSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpKTtc
biIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGJpcy5hdmFpbGFibGUoKSk7XG4i
ICsKKwkJCSIgICAgICAgIGZpbGVTdHJlYW0uY2xvc2UoKTtcbiIgKworCQkJIiAgICB9XG4iICsK
KwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykgdGhyb3dzIElP
RXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgdHJ5IHtcbiIgKworCQkJIiAgICAgICAgICAg
IG5ldyBYKCkuZm9vKCk7XG4iICsKKwkJCSIgICAgICAgIH0gY2F0Y2ggKElPRXhjZXB0aW9uIGV4
KSB7IiArCisJCQkiICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwiR290IElPIEV4Y2Vw
dGlvblwiKTtcbiIgKworCQkJIiAgICAgICAgfVxuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1c
biIKKwkJfSwKKwkJIkdvdCBJTyBFeGNlcHRpb24iLAorCQludWxsLAorCQl0cnVlLAorCQludWxs
LAorCQlvcHRpb25zLAorCQludWxsKTsKK30KKy8vIEJ1ZyAzNTg5MDMgLSBGaWx0ZXIgcHJhY3Rp
Y2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5ncworLy8gYSBjbG9zZWFibGUg
d2l0aG91dCBPUyByZXNvdXJjZSBpcyBub3QgY2xvc2VkCitwdWJsaWMgdm9pZCB0ZXN0MDYxYigp
IHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KENv
bXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0
aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQ
b3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCXRo
aXMucnVuQ29uZm9ybVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJp
bXBvcnQgamF2YS5pby5TdHJpbmdSZWFkZXI7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4
Y2VwdGlvbjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICB2b2lkIGZv
bygpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIFN0cmluZ1JlYWRlciBz
dHJpbmcgID0gbmV3IFN0cmluZ1JlYWRlcihcImNvbnRlbnRcIik7XG4iICsKKwkJCSIgICAgICAg
IFN5c3RlbS5vdXQucHJpbnRsbihzdHJpbmcucmVhZCgpKTtcbiIgKworCQkJIiAgICB9XG4iICsK
KwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykgdGhyb3dzIElP
RXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgbmV3IFgoKS5mb28oKTtcbiIgKworCQkJIiAg
ICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSI5OSIsIC8vIGNoYXJhY3RlciAnYycKKwkJbnVs
bCwKKwkJdHJ1ZSwKKwkJbnVsbCwKKwkJb3B0aW9ucywKKwkJbnVsbCk7Cit9CisvLyBCdWcgMzU4
OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsgd2Fybmlu
Z3MKKy8vIGEgcmVzb3VyY2Ugd3JhcHBlciBpcyBub3QgY2xvc2VkIGJ1dCB0aGUgdW5kZXJseWlu
ZyBjbG9zZWFibGUgaXMgcmVzb3VyY2UtZnJlZQorcHVibGljIHZvaWQgdGVzdDA2MWMoKSB7CisJ
TWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxl
ck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMu
RVJST1IpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50
aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1
bkNvbmZvcm1UZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0
IGphdmEuaW8uQnVmZmVyZWRSZWFkZXI7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5TdHJpbmdS
ZWFkZXI7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1
YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICB2b2lkIGZvbygpIHRocm93cyBJT0V4Y2VwdGlv
biB7XG4iICsKKwkJCSIgICAgICAgIFN0cmluZ1JlYWRlciBpbnB1dCA9IG5ldyBTdHJpbmdSZWFk
ZXIoXCJjb250ZW50XCIpO1xuIiArCisJCQkiICAgICAgICBCdWZmZXJlZFJlYWRlciBiciA9IG5l
dyBCdWZmZXJlZFJlYWRlcihpbnB1dCk7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkUmVhZGVy
IGRvdWJsZVdyYXAgPSBuZXcgQnVmZmVyZWRSZWFkZXIoYnIpO1xuIiArCisJCQkiICAgICAgICBT
eXN0ZW0ub3V0LnByaW50bG4oYnIucmVhZCgpKTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSIg
ICAgdm9pZCBpbmxpbmUoKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBC
dWZmZXJlZFJlYWRlciBiciA9IG5ldyBCdWZmZXJlZFJlYWRlcihuZXcgU3RyaW5nUmVhZGVyKFwi
Y29udGVudFwiKSk7XG4iICsKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihici5yZWFk
KCkpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFp
bihTdHJpbmdbXSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBu
ZXcgWCgpLmZvbygpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIjk5
IiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJbnVsbCwKKwkJb3B0aW9ucywKKwkJbnVsbCk7Cit9Cisv
LyBCdWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxl
YWsgd2FybmluZ3MKKy8vIGEgcmVzb3VyY2Ugd3JhcHBlciBpcyBub3QgY2xvc2VkIG5laXRoZXIg
aXMgdGhlIHVuZGVybHlpbmcgcmVzb3VyY2UKK3B1YmxpYyB2b2lkIHRlc3QwNjFkKCkgeworCU1h
cCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJP
cHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVS
Uk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlh
bGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5XQVJOSU5HKTsKKwl0aGlzLnJ1
bk5lZ2F0aXZlVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9y
dCBqYXZhLmlvLkZpbGU7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJlZElucHV0U3Ry
ZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZUlucHV0U3RyZWFtO1xuIiArCisJCQki
aW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4i
ICsKKwkJCSIgICAgdm9pZCBmb28oKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAg
ICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xuIiArCisJCQkiICAgICAg
ICBGaWxlSW5wdXRTdHJlYW0gZmlsZVN0cmVhbSAgPSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUp
O1xuIiArCisJCQkiICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGJpcyA9IG5ldyBCdWZmZXJl
ZElucHV0U3RyZWFtKGZpbGVTdHJlYW0pO1xuIiArCisJCQkiICAgICAgICBCdWZmZXJlZElucHV0
U3RyZWFtIGRvdWJsZVdyYXAgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShiaXMpO1xuIiArCisJ
CQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oYmlzLmF2YWlsYWJsZSgpKTtcbiIgKworCQkJ
IiAgICB9XG4iICsKKwkJCSIgICAgdm9pZCBpbmxpbmUoKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xu
IiArCisJCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xuIiAr
CisJCQkiICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGJpczIgPSBuZXcgQnVmZmVyZWRJbnB1
dFN0cmVhbShuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpKTtcbiIgKworCQkJIiAgICAgICAgU3lz
dGVtLm91dC5wcmludGxuKGJpczIuYXZhaWxhYmxlKCkpO1xuIiArCisJCQkiICAgIH1cbiIgKwor
CQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB0aHJvd3MgSU9F
eGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICB0cnkge1xuIiArCisJCQkiICAgICAgICAgICAg
bmV3IFgoKS5mb28oKTtcbiIgKworCQkJIiAgICAgICAgfSBjYXRjaCAoSU9FeGNlcHRpb24gZXgp
IHsiICsKKwkJCSIgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oXCJHb3QgSU8gRXhjZXB0
aW9uXCIpO1xuIiArCisJCQkiICAgICAgICB9XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxu
IgorCQl9LAorCQkiLS0tLS0tLS0tLVxuIiArIAorCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBs
aW5lIDEwKVxuIiArIAorCQkiCUJ1ZmZlcmVkSW5wdXRTdHJlYW0gZG91YmxlV3JhcCA9IG5ldyBC
dWZmZXJlZElucHV0U3RyZWFtKGJpcyk7XG4iICsgCisJCSIJICAgICAgICAgICAgICAgICAgICBe
Xl5eXl5eXl5eXG4iICsgCisJCSJSZXNvdXJjZSBsZWFrOiBcJ2RvdWJsZVdyYXBcJyBpcyBuZXZl
ciBjbG9zZWRcbiIgKyAKKwkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJIjIuIEVSUk9SIGluIFguamF2
YSAoYXQgbGluZSAxNSlcbiIgKyAKKwkJIglCdWZmZXJlZElucHV0U3RyZWFtIGJpczIgPSBuZXcg
QnVmZmVyZWRJbnB1dFN0cmVhbShuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpKTtcbiIgKyAKKwkJ
IgkgICAgICAgICAgICAgICAgICAgIF5eXl5cbiIgKyAKKwkJIlJlc291cmNlIGxlYWs6IFwnYmlz
MlwnIGlzIG5ldmVyIGNsb3NlZFxuIiArIAorCQkiLS0tLS0tLS0tLVxuIiwKKwkJbnVsbCwKKwkJ
dHJ1ZSwKKwkJb3B0aW9ucyk7Cit9CisvLyBCdWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5
IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsgd2FybmluZ3MKKy8vIEJ1ZyAzNjEwNzMgLSBBdm9p
ZCByZXNvdXJjZSBsZWFrIHdhcm5pbmcgd2hlbiB0aGUgdG9wIGxldmVsIHJlc291cmNlIGlzIGNs
b3NlZCBleHBsaWNpdGx5CisvLyBhIHJlc291cmNlIHdyYXBwZXIgaXMgY2xvc2VkIGNsb3Npbmcg
YWxzbyB0aGUgdW5kZXJseWluZyByZXNvdXJjZQorcHVibGljIHZvaWQgdGVzdDA2MWUoKSB7CisJ
TWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxl
ck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMu
RVJST1IpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50
aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1
bkNvbmZvcm1UZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0
IGphdmEuaW8uRmlsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJl
YW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlSW5wdXRTdHJlYW07XG4iICsKKwkJCSJp
bXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIg
KworCQkJIiAgICBGaWxlSW5wdXRTdHJlYW0gZmlzOyIgKworCQkJIiAgICB2b2lkIGZvbygpIHRo
cm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxl
KFwic29tZWZpbGVcIik7XG4iICsKKwkJCSIgICAgICAgIEZpbGVJbnB1dFN0cmVhbSBmaWxlU3Ry
ZWFtICA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSk7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZl
cmVkSW5wdXRTdHJlYW0gYmlzID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oZmlsZVN0cmVhbSk7
XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gZG91YmxlV3JhcCA9IG5ldyBC
dWZmZXJlZElucHV0U3RyZWFtKGJpcyk7XG4iICsKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJp
bnRsbihiaXMuYXZhaWxhYmxlKCkpO1xuIiArCisJCQkiICAgICAgICBiaXMuY2xvc2UoKTtcbiIg
KworCQkJIiAgICB9XG4iICsKKwkJCSIgICAgdm9pZCBpbmxpbmUoKSB0aHJvd3MgSU9FeGNlcHRp
b24ge1xuIiArCisJCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIp
O1xuIiArCisJCQkiICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGJpczIgPSBuZXcgQnVmZmVy
ZWRJbnB1dFN0cmVhbShmaXMgPSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpKTtcbiIgKyAvLyBm
aWVsZCBhc3NpZ25tZW50CisJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oYmlzMi5hdmFp
bGFibGUoKSk7XG4iICsKKwkJCSIgICAgICAgIGJpczIuY2xvc2UoKTtcbiIgKworCQkJIiAgICAg
ICAgRmlsZUlucHV0U3RyZWFtIGZpbGVTdHJlYW0gID0gbnVsbDtcbiIgKworCQkJIiAgICAgICAg
QnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMzID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oZmlsZVN0
cmVhbSA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSkpO1xuIiArCisJCQkiICAgICAgICBTeXN0
ZW0ub3V0LnByaW50bG4oYmlzMy5hdmFpbGFibGUoKSk7XG4iICsKKwkJCSIgICAgICAgIGJpczMu
Y2xvc2UoKTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lk
IG1haW4oU3RyaW5nW10gYXJncykgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAg
ICAgdHJ5IHtcbiIgKworCQkJIiAgICAgICAgICAgIG5ldyBYKCkuZm9vKCk7XG4iICsKKwkJCSIg
ICAgICAgIH0gY2F0Y2ggKElPRXhjZXB0aW9uIGV4KSB7IiArCisJCQkiICAgICAgICAgICAgU3lz
dGVtLm91dC5wcmludGxuKFwiR290IElPIEV4Y2VwdGlvblwiKTtcbiIgKworCQkJIiAgICAgICAg
fVxuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIkdvdCBJTyBFeGNlcHRp
b24iLAorCQludWxsLAorCQl0cnVlLAorCQludWxsLAorCQlvcHRpb25zLAorCQludWxsKTsKK30K
Ky8vIEJ1ZyAzNTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2Ug
bGVhayB3YXJuaW5ncworLy8gQnVnIDM2MTA3MyAtIEF2b2lkIHJlc291cmNlIGxlYWsgd2Fybmlu
ZyB3aGVuIHRoZSB0b3AgbGV2ZWwgcmVzb3VyY2UgaXMgY2xvc2VkIGV4cGxpY2l0bHkKKy8vIGEg
cmVzb3VyY2Ugd3JhcHBlciBpcyBjbG9zZWQgY2xvc2luZyBhbHNvIHRoZSB1bmRlcmx5aW5nIHJl
c291cmNlIC0gb3JpZ2luYWwgdGVzdCBjYXNlCitwdWJsaWMgdm9pZCB0ZXN0MDYxZigpIHRocm93
cyBJT0V4Y2VwdGlvbiB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlv
cHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxl
LCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5P
UFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25z
LkVSUk9SKTsKKwlVUkwgdXJsID0gRmlsZUxvY2F0b3IudG9GaWxlVVJMKEZpbGVMb2NhdG9yLmZp
bmQoUGxhdGZvcm0uZ2V0QnVuZGxlKCJvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxl
ciIpLCBuZXcgUGF0aCgiTUVUQS1JTkYvTUFOSUZFU1QuTUYiKSwgbnVsbCkpOworCXRoaXMucnVu
Q29uZm9ybVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQg
amF2YS5pby5JbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklucHV0U3RyZWFt
UmVhZGVyO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uQnVmZmVyZWRSZWFkZXI7XG4iICsKKwkJ
CSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJImltcG9ydCBqYXZhLm5ldC5V
Ukw7XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIgICAgYm9vbGVhbiBsb2Fk
VVJMKGZpbmFsIFVSTCB1cmwpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsgCisJCQkiICAgICAg
ICBJbnB1dFN0cmVhbSBzdHJlYW0gPSBudWxsO1xuIiArIAorCQkJIiAgICAgICAgQnVmZmVyZWRS
ZWFkZXIgcmVhZGVyID0gbnVsbDtcbiIgKyAKKwkJCSIgICAgICAgIHRyeSB7XG4iICsgCisJCQki
ICAgICAgICAgICAgc3RyZWFtID0gdXJsLm9wZW5TdHJlYW0oKTtcbiIgKyAKKwkJCSIgICAgICAg
ICAgICByZWFkZXIgPSBuZXcgQnVmZmVyZWRSZWFkZXIobmV3IElucHV0U3RyZWFtUmVhZGVyKHN0
cmVhbSkpO1xuIiArIAorCQkJIiAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihyZWFkZXIu
cmVhZExpbmUoKSk7XG4iICsKKwkJCSIgICAgICAgIH0gZmluYWxseSB7XG4iICsgCisJCQkiICAg
ICAgICAgICAgdHJ5IHtcbiIgKyAKKwkJCSIgICAgICAgICAgICAgICAgaWYgKHJlYWRlciAhPSBu
dWxsKVxuIiArIAorCQkJIiAgICAgICAgICAgICAgICAgICAgcmVhZGVyLmNsb3NlKCk7XG4iICsg
CisJCQkiICAgICAgICAgICAgfSBjYXRjaCAoSU9FeGNlcHRpb24geCkge1xuIiArIAorCQkJIiAg
ICAgICAgICAgIH1cbiIgKyAKKwkJCSIgICAgICAgIH1cbiIgKyAKKwkJCSIgICAgICAgIHJldHVy
biBmYWxzZTsgLy8gJ3N0cmVhbScgbWF5IG5vdCBiZSBjbG9zZWQgYXQgdGhpcyBsb2NhdGlvblxu
IiArIAorCQkJIiAgICB9XG4iICsgCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0
cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIHRyeSB7
XG4iICsKKwkJCSIgICAgICAgICAgICBuZXcgWCgpLmxvYWRVUkwobmV3IFVSTChcIiIrdXJsLnRv
U3RyaW5nKCkrIlwiKSk7XG4iICsKKwkJCSIgICAgICAgIH0gY2F0Y2ggKElPRXhjZXB0aW9uIGV4
KSB7XG4iICsKKwkJCSIgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oXCJHb3QgSU8gRXhj
ZXB0aW9uXCIrZXgpO1xuIiArCisJCQkiICAgICAgICB9XG4iICsKKwkJCSIgICAgfVxuIiArCisJ
CQkifVxuIgorCQl9LAorCQkiTWFuaWZlc3QtVmVyc2lvbjogMS4wIiwKKwkJbnVsbCwKKwkJdHJ1
ZSwKKwkJbnVsbCwKKwkJb3B0aW9ucywKKwkJbnVsbCk7Cit9CisvLyBCdWcgMzU4OTAzIC0gRmls
dGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsgd2FybmluZ3MKKy8vIEJ1
ZyAzNjA5MDggLSBBdm9pZCByZXNvdXJjZSBsZWFrIHdhcm5pbmcgd2hlbiB0aGUgdW5kZXJseWlu
Zy9jaGFpbmVkIHJlc291cmNlIGlzIGNsb3NlZCBleHBsaWNpdGx5CisvLyBEaWZmZXJlbnQgcG9p
bnRzIGluIGEgcmVzb3VyY2UgY2hhaW4gYXJlIGNsb3NlZAorcHVibGljIHZvaWQgdGVzdDA2MWco
KSB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChD
b21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9w
dGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0
UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0
aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJ
ImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJlZElu
cHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZUlucHV0U3RyZWFtO1xuIiAr
CisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJwdWJsaWMgY2xhc3Mg
WCB7XG4iICsKKwkJCSIgICAgdm9pZCBjbG9zZU1pZGRsZSgpIHRocm93cyBJT0V4Y2VwdGlvbiB7
XG4iICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4i
ICsKKwkJCSIgICAgICAgIEZpbGVJbnB1dFN0cmVhbSBmaWxlU3RyZWFtICA9IG5ldyBGaWxlSW5w
dXRTdHJlYW0oZmlsZSk7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlz
ID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oZmlsZVN0cmVhbSk7XG4iICsKKwkJCSIgICAgICAg
IEJ1ZmZlcmVkSW5wdXRTdHJlYW0gZG91YmxlV3JhcCA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFt
KGJpcyk7XG4iICsKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihiaXMuYXZhaWxhYmxl
KCkpO1xuIiArCisJCQkiICAgICAgICBiaXMuY2xvc2UoKTtcbiIgKworCQkJIiAgICB9XG4iICsK
KwkJCSIgICAgdm9pZCBjbG9zZU91dGVyKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJ
IiAgICAgICAgRmlsZSBmaWxlMiA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKKwkJCSIg
ICAgICAgIEZpbGVJbnB1dFN0cmVhbSBmaWxlU3RyZWFtMiAgPSBuZXcgRmlsZUlucHV0U3RyZWFt
KGZpbGUyKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMyID0gbmV3
IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oZmlsZVN0cmVhbTIpO1xuIiArCisJCQkiICAgICAgICBCdWZm
ZXJlZElucHV0U3RyZWFtIGRvdWJsZVdyYXAyID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oYmlz
Mik7XG4iICsKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihiaXMyLmF2YWlsYWJsZSgp
KTtcbiIgKworCQkJIiAgICAgICAgZG91YmxlV3JhcDIuY2xvc2UoKTtcbiIgKworCQkJIiAgICB9
XG4iICsKKwkJCSIgICAgdm9pZCBuZXZlckNsb3NlZCgpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4i
ICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZTMgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xuIiAr
CisJCQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0gZmlsZVN0cmVhbTMgID0gbmV3IEZpbGVJbnB1
dFN0cmVhbShmaWxlMyk7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlz
MyA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGZpbGVTdHJlYW0zKTtcbiIgKworCQkJIiAgICAg
ICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFwMyA9IG5ldyBCdWZmZXJlZElucHV0U3Ry
ZWFtKGJpczMpO1xuIiArCisJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oZG91YmxlV3Jh
cDMuYXZhaWxhYmxlKCkpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJ
Ii0tLS0tLS0tLS1cbiIgKyAKKwkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAyNilcbiIg
KyAKKwkJIglCdWZmZXJlZElucHV0U3RyZWFtIGRvdWJsZVdyYXAzID0gbmV3IEJ1ZmZlcmVkSW5w
dXRTdHJlYW0oYmlzMyk7XG4iICsgCisJCSIJICAgICAgICAgICAgICAgICAgICBeXl5eXl5eXl5e
XlxuIiArIAorCQkiUmVzb3VyY2UgbGVhazogXCdkb3VibGVXcmFwM1wnIGlzIG5ldmVyIGNsb3Nl
ZFxuIiArIAorCQkiLS0tLS0tLS0tLVxuIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJb3B0aW9ucyk7
Cit9CisvLyBCdWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291
cmNlIGxlYWsgd2FybmluZ3MKKy8vIEJ1ZyAzNjA5MDggLSBBdm9pZCByZXNvdXJjZSBsZWFrIHdh
cm5pbmcgd2hlbiB0aGUgdW5kZXJseWluZy9jaGFpbmVkIHJlc291cmNlIGlzIGNsb3NlZCBleHBs
aWNpdGx5CisvLyBEaWZmZXJlbnQgcG9pbnRzIGluIGEgcmVzb3VyY2UgY2hhaW4gYXJlIHBvdGVu
dGlhbGx5IGNsb3NlZAorcHVibGljIHZvaWQgdGVzdDA2MWgoKSB7CisJTWFwIG9wdGlvbnMgPSBn
ZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9O
X1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlv
bnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENs
b3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgK
KwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZhLmlvLkZpbGU7
XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJlZElucHV0U3RyZWFtO1xuIiArCisJCQki
aW1wb3J0IGphdmEuaW8uRmlsZUlucHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8u
SU9FeGNlcHRpb247XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIgICAgdm9p
ZCBjbG9zZU1pZGRsZShib29sZWFuIGIpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIg
ICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKKwkJCSIgICAg
ICAgIEZpbGVJbnB1dFN0cmVhbSBmaWxlU3RyZWFtICA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmls
ZSk7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzID0gbmV3IEJ1ZmZl
cmVkSW5wdXRTdHJlYW0oZmlsZVN0cmVhbSk7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5w
dXRTdHJlYW0gZG91YmxlV3JhcCA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGJpcyk7XG4iICsK
KwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihiaXMuYXZhaWxhYmxlKCkpO1xuIiArCisJ
CQkiICAgICAgICBpZiAoYilcbiIgKworCQkJIiAgICAgICAgICAgIGJpcy5jbG9zZSgpO1xuIiAr
CisJCQkiICAgIH1cbiIgKworCQkJIiAgICB2b2lkIGNsb3NlT3V0ZXIoYm9vbGVhbiBiKSB0aHJv
d3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBGaWxlIGZpbGUyID0gbmV3IEZpbGUo
XCJzb21lZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAgRmlsZUlucHV0U3RyZWFtIGZpbGVTdHJl
YW0yICA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZTIpO1xuIiArCisJCQkiICAgICAgICBCdWZm
ZXJlZElucHV0U3RyZWFtIGR1bW15O1xuIiArCisJCQkiICAgICAgICBCdWZmZXJlZElucHV0U3Ry
ZWFtIGJpczIgPSAoZHVtbXkgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShmaWxlU3RyZWFtMikp
O1xuIiArCisJCQkiICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGRvdWJsZVdyYXAyID0gbmV3
IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oYmlzMik7XG4iICsKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQu
cHJpbnRsbihiaXMyLmF2YWlsYWJsZSgpKTtcbiIgKworCQkJIiAgICAgICAgaWYgKGIpXG4iICsK
KwkJCSIgICAgICAgICAgICBkb3VibGVXcmFwMi5jbG9zZSgpO1xuIiArCisJCQkiICAgIH1cbiIg
KworCQkJIiAgICB2b2lkIHBvdEFuZERlZihib29sZWFuIGIpIHRocm93cyBJT0V4Y2VwdGlvbiB7
XG4iICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZTMgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xu
IiArCisJCQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0gZmlsZVN0cmVhbTMgID0gbmV3IEZpbGVJ
bnB1dFN0cmVhbShmaWxlMyk7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0g
YmlzMyA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGZpbGVTdHJlYW0zKTtcbiIgKworCQkJIiAg
ICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFwMyA9IG5ldyBCdWZmZXJlZElucHV0
U3RyZWFtKGJpczMpO1xuIiArCisJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oZG91Ymxl
V3JhcDMuYXZhaWxhYmxlKCkpO1xuIiArCisJCQkiICAgICAgICBpZiAoYikgYmlzMy5jbG9zZSgp
O1xuIiArCisJCQkiICAgICAgICBmaWxlU3RyZWFtMy5jbG9zZSgpO1xuIiArCisJCQkiICAgIH1c
biIgKworCQkJIn1cbiIKKwkJfSwKKwkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJIjEuIEVSUk9SIGlu
IFguamF2YSAoYXQgbGluZSAxMClcbiIgKyAKKwkJIglCdWZmZXJlZElucHV0U3RyZWFtIGRvdWJs
ZVdyYXAgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShiaXMpO1xuIiArIAorCQkiCSAgICAgICAg
ICAgICAgICAgICAgXl5eXl5eXl5eXlxuIiArIAorCQkiUG90ZW50aWFsIHJlc291cmNlIGxlYWs6
IFwnZG91YmxlV3JhcFwnIG1heSBub3QgYmUgY2xvc2VkXG4iICsgCisJCSItLS0tLS0tLS0tXG4i
ICsgCisJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMjApXG4iICsgCisJCSIJQnVmZmVy
ZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFwMiA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGJpczIp
O1xuIiArIAorCQkiCSAgICAgICAgICAgICAgICAgICAgXl5eXl5eXl5eXl5cbiIgKyAKKwkJIlBv
dGVudGlhbCByZXNvdXJjZSBsZWFrOiBcJ2RvdWJsZVdyYXAyXCcgbWF5IG5vdCBiZSBjbG9zZWRc
biIgKyAKKwkJIi0tLS0tLS0tLS1cbiIsCisJCW51bGwsCisJCXRydWUsCisJCW9wdGlvbnMpOwor
fQorLy8gQnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJj
ZSBsZWFrIHdhcm5pbmdzCisvLyBsb2NhbCB2YXIgaXMgcmUtdXNlZCBmb3IgdHdvIGxldmVscyBv
ZiB3cmFwcGVycworcHVibGljIHZvaWQgdGVzdDA2MWkoKSB7CisJTWFwIG9wdGlvbnMgPSBnZXRD
b21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1Jl
cG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMu
cHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3Nl
YWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKKwkJ
bmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZhLmlvLkZpbGU7XG4i
ICsKKwkJCSJpbXBvcnQgamF2YS5pby5JbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZh
LmlvLkJ1ZmZlcmVkSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlSW5w
dXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJ
InB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICB2b2lkIGNsb3NlTWlkZGxlKCkgdGhyb3dz
IElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJz
b21lZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAgSW5wdXRTdHJlYW0gc3RyZWFtICA9IG5ldyBG
aWxlSW5wdXRTdHJlYW0oZmlsZSk7XG4iICsKKwkJCSIgICAgICAgIHN0cmVhbSA9IG5ldyBCdWZm
ZXJlZElucHV0U3RyZWFtKHN0cmVhbSk7XG4iICsKKwkJCSIgICAgICAgIElucHV0U3RyZWFtIG1p
ZGRsZTtcbiIgKworCQkJIiAgICAgICAgc3RyZWFtID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0o
bWlkZGxlID0gc3RyZWFtKTtcbiIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKHN0
cmVhbS5hdmFpbGFibGUoKSk7XG4iICsKKwkJCSIgICAgICAgIG1pZGRsZS5jbG9zZSgpO1xuIiAr
CisJCQkiICAgIH1cbiIgKworCQkJIiAgICB2b2lkIGNsb3NlT3V0ZXIoKSB0aHJvd3MgSU9FeGNl
cHRpb24ge1xuIiArCisJCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxl
XCIpO1xuIiArCisJCQkiICAgICAgICBJbnB1dFN0cmVhbSBzdHJlYW0yICA9IG5ldyBGaWxlSW5w
dXRTdHJlYW0oZmlsZSk7XG4iICsKKwkJCSIgICAgICAgIHN0cmVhbTIgPSBuZXcgQnVmZmVyZWRJ
bnB1dFN0cmVhbShzdHJlYW0yKTtcbiIgKworCQkJIiAgICAgICAgc3RyZWFtMiA9IG5ldyBCdWZm
ZXJlZElucHV0U3RyZWFtKHN0cmVhbTIpO1xuIiArCisJCQkiICAgICAgICBTeXN0ZW0ub3V0LnBy
aW50bG4oc3RyZWFtMi5hdmFpbGFibGUoKSk7XG4iICsKKwkJCSIgICAgICAgIHN0cmVhbTIuY2xv
c2UoKTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSIgICAgdm9pZCBuZXZlckNsb3NlZCgpIHRo
cm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxl
KFwic29tZWZpbGVcIik7XG4iICsKKwkJCSIgICAgICAgIElucHV0U3RyZWFtIHN0cmVhbTMgID0g
bmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKTtcbiIgKworCQkJIiAgICAgICAgc3RyZWFtMyA9IG5l
dyBCdWZmZXJlZElucHV0U3RyZWFtKHN0cmVhbTMpO1xuIiArCisJCQkiICAgICAgICBzdHJlYW0z
ID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oc3RyZWFtMyk7XG4iICsKKwkJCSIgICAgICAgIFN5
c3RlbS5vdXQucHJpbnRsbihzdHJlYW0zLmF2YWlsYWJsZSgpKTtcbiIgKworCQkJIiAgICB9XG4i
ICsKKwkJCSJ9XG4iCisJCX0sCisJCSItLS0tLS0tLS0tXG4iICsgCisJCSIxLiBFUlJPUiBpbiBY
LmphdmEgKGF0IGxpbmUgMjYpXG4iICsgCisJCSIJSW5wdXRTdHJlYW0gc3RyZWFtMyAgPSBuZXcg
RmlsZUlucHV0U3RyZWFtKGZpbGUpO1xuIiArIAorCQkiCSAgICAgICAgICAgIF5eXl5eXl5cbiIg
KyAKKwkJIlJlc291cmNlIGxlYWs6IFwnc3RyZWFtM1wnIGlzIG5ldmVyIGNsb3NlZFxuIiArIAor
CQkiLS0tLS0tLS0tLVxuIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJb3B0aW9ucyk7Cit9CisvLyBC
dWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsg
d2FybmluZ3MKKy8vIHNlbGYtd3JhcHBpbmcgYSBtZXRob2QgYXJndW1lbnQgKGNhdXNlZCBOUEUg
VW5jb25kaXRpb25hbEZsb3dJbmZvLm1hcmtBc0RlZmluaXRlbHlOdWxsKC4uKSkuCitwdWJsaWMg
dm9pZCB0ZXN0MDYxaigpIHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwor
CW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFi
bGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25z
Lk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlv
bnMuRVJST1IpOworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQki
WC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5JbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9y
dCBqYXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5J
T0V4Y2VwdGlvbjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICB2b2lk
IGZvbyhJbnB1dFN0cmVhbSBzdHJlYW0pIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIg
ICAgICAgIHN0cmVhbSA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKHN0cmVhbSk7XG4iICsKKwkJ
CSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihzdHJlYW0uYXZhaWxhYmxlKCkpO1xuIiArCisJ
CQkiICAgICAgICBzdHJlYW0uY2xvc2UoKTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSIgICAg
dm9pZCBib28oSW5wdXRTdHJlYW0gc3RyZWFtMikgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwor
CQkJIiAgICAgICAgc3RyZWFtMiA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKHN0cmVhbTIpO1xu
IiArCisJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oc3RyZWFtMi5hdmFpbGFibGUoKSk7
XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCQl9LAorCQkiIiwKKwkJbnVsbCwKKwkJ
dHJ1ZSwKKwkJbnVsbCwKKwkJb3B0aW9ucywKKwkJbnVsbCk7Cit9CisvLyBCdWcgMzU4OTAzIC0g
RmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsgd2FybmluZ3MKKy8v
IGEgd3JhcHBlciBpcyBjcmVhdGVkIGluIGEgcmV0dXJuIHN0YXRlbWVudAorcHVibGljIHZvaWQg
dGVzdDA2MWsoKSB0aHJvd3MgSU9FeGNlcHRpb24geworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGls
ZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRV
bmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChD
b21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUs
IENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJbmV3IFN0
cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsKKwkJ
CSJpbXBvcnQgamF2YS5pby5GaWxlSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5p
by5CdWZmZXJlZElucHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRp
b247XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIgICAgQnVmZmVyZWRJbnB1
dFN0cmVhbSBnZXRSZWFkZXIoRmlsZSBmaWxlKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJ
CQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0gc3RyZWFtID0gbmV3IEZpbGVJbnB1dFN0cmVhbShm
aWxlKTtcbiIgKworCQkJIiAgICAgICAgcmV0dXJuIG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKHN0
cmVhbSk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCQl9LAorCQkiIiwKKwkJbnVs
bCwKKwkJdHJ1ZSwKKwkJbnVsbCwKKwkJb3B0aW9ucywKKwkJbnVsbCk7Cit9CisvLyBCdWcgMzU4
OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsgd2Fybmlu
Z3MKKy8vIGEgY2xvc2VhYmxlIGlzIGFzc2lnbmVkIHRvIGEgZmllbGQKK3B1YmxpYyB2b2lkIHRl
c3QwNjFsKCkgdGhyb3dzIElPRXhjZXB0aW9uIHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVy
T3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5j
bG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29t
cGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBD
b21waWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCW5ldyBTdHJp
bmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCisJCQki
aW1wb3J0IGphdmEuaW8uRmlsZUlucHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8u
QnVmZmVyZWRJbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9u
O1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICAgIEJ1ZmZlcmVkSW5wdXRT
dHJlYW0gc3RyZWFtO1xuIiArCisJCQkiICAgIHZvaWQgZm9vKEZpbGUgZmlsZSkgdGhyb3dzIElP
RXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmlsZUlucHV0U3RyZWFtIHMgPSBuZXcgRmls
ZUlucHV0U3RyZWFtKGZpbGUpO1xuIiArCisJCQkiICAgICAgICBzdHJlYW0gPSBuZXcgQnVmZmVy
ZWRJbnB1dFN0cmVhbShzKTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJ
CSIiLAorCQludWxsLAorCQl0cnVlLAorCQludWxsLAorCQlvcHRpb25zLAorCQludWxsKTsKK30K
Ky8vIEJ1ZyAzNjIzMzEgLSBSZXNvdXJjZSBsZWFrIG5vdCBkZXRlY3RlZCB3aGVuIGNsb3NlYWJs
ZSBub3QgYXNzaWduZWQgdG8gdmFyaWFibGUKKy8vIGEgcmVzb3VyY2UgaXMgbmV2ZXIgYXNzaWdu
ZWQKK3B1YmxpYyB2b2lkIHRlc3QwNjJhKCkgdGhyb3dzIElPRXhjZXB0aW9uIHsKKwlNYXAgb3B0
aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9u
cy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7
CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVu
Y2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVuTmVnYXRp
dmVUZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEu
aW8uRmlsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkZpbGVPdXRwdXRTdHJlYW07XG4iICsK
KwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBY
IHtcbiIgKworCQkJIiAgICB2b2lkIGZvbygpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJ
CSIgICAgICAgIG5ldyBGaWxlT3V0cHV0U3RyZWFtKG5ldyBGaWxlKFwiQzpcXHRlbXBcXGZvby50
eHRcIikpLndyaXRlKDEpO1xuIiArIAorCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJ
CSItLS0tLS0tLS0tXG4iICsgCisJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNilcbiIg
KyAKKwkJIgluZXcgRmlsZU91dHB1dFN0cmVhbShuZXcgRmlsZShcIkM6XFx0ZW1wXFxmb28udHh0
XCIpKS53cml0ZSgxKTtcbiIgKyAKKwkJIgleXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXl5eXl5eXl5eXG4iICsgCisJCSJSZXNvdXJjZSBsZWFrOiBcJzx1bmFzc2lnbmVk
IENsb3NlYWJsZSB2YWx1ZT5cJyBpcyBuZXZlciBjbG9zZWRcbiIgKyAKKwkJIi0tLS0tLS0tLS1c
biIsCisJCW51bGwsCisJCXRydWUsCisJCW9wdGlvbnMpOworfQorLy8gQnVnIDM2MjMzMSAtIFJl
c291cmNlIGxlYWsgbm90IGRldGVjdGVkIHdoZW4gY2xvc2VhYmxlIG5vdCBhc3NpZ25lZCB0byB2
YXJpYWJsZQorLy8gYSBmcmVzaGx5IGFsbG9jYXRlZCByZXNvdXJjZSBpcyBpbW1lZGlhdGVseSBj
bG9zZWQKK3B1YmxpYyB2b2lkIHRlc3QwNjJiKCkgdGhyb3dzIElPRXhjZXB0aW9uIHsKKwlNYXAg
b3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0
aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJP
Uik7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxs
eVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVuQ29u
Zm9ybVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2
YS5pby5GaWxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZU91dHB1dFN0cmVhbTtcbiIg
KworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGljIGNsYXNz
IFgge1xuIiArCisJCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwor
CQkJIiAgICAgICAgbmV3IEZpbGVPdXRwdXRTdHJlYW0obmV3IEZpbGUoXCJDOlxcdGVtcFxcZm9v
LnR4dFwiKSkuY2xvc2UoKTtcbiIgKyAKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCQl9LAor
CQkiIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJbnVsbCwKKwkJb3B0aW9ucywKKwkJbnVsbCk7Cit9
CisvLyBCdWcgMzYyMzMxIC0gUmVzb3VyY2UgbGVhayBub3QgZGV0ZWN0ZWQgd2hlbiBjbG9zZWFi
bGUgbm90IGFzc2lnbmVkIHRvIHZhcmlhYmxlCisvLyBhIHJlc291cmNlIGlzIGRpcmVjdGx5IHBh
c3NlZCB0byBhbm90aGVyIG1ldGhvZAorcHVibGljIHZvaWQgdGVzdDA2MmMoKSB0aHJvd3MgSU9F
eGNlcHRpb24geworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9u
cy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29t
cGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9O
X1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJP
Uik7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEi
LAorCQkJImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxl
T3V0cHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsK
KwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28oKSB0aHJvd3MgSU9F
eGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICB3cml0ZUl0KG5ldyBGaWxlT3V0cHV0U3RyZWFt
KG5ldyBGaWxlKFwiQzpcXHRlbXBcXGZvby50eHRcIikpKTtcbiIgKyAKKwkJCSIgICAgfVxuIiAr
CisJCQkiICAgIHZvaWQgd3JpdGVJdChGaWxlT3V0cHV0U3RyZWFtIGZvcykgdGhyb3dzIElPRXhj
ZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgZm9zLndyaXRlKDEpO1xuIiArCisJCQkiICAgICAg
ICBmb3MuY2xvc2UoKTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSIi
LAorCQludWxsLAorCQl0cnVlLAorCQludWxsLAorCQlvcHRpb25zLAorCQludWxsKTsKK30KKy8v
IEJ1ZyAzNjIzMzEgLSBSZXNvdXJjZSBsZWFrIG5vdCBkZXRlY3RlZCB3aGVuIGNsb3NlYWJsZSBu
b3QgYXNzaWduZWQgdG8gdmFyaWFibGUKKy8vIGEgcmVzb3VyY2UgaXMgbm90IHVzZWQKK3B1Ymxp
YyB2b2lkIHRlc3QwNjJkKCkgdGhyb3dzIElPRXhjZXB0aW9uIHsKKwlNYXAgb3B0aW9ucyA9IGdl
dENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05f
UmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9u
cy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xv
c2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVuTmVnYXRpdmVUZXN0KAor
CQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtc
biIgKworCQkJImltcG9ydCBqYXZhLmlvLkZpbGVPdXRwdXRTdHJlYW07XG4iICsKKwkJCSJpbXBv
cnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwor
CQkJIiAgICB2b2lkIGZvbygpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAg
IG5ldyBGaWxlT3V0cHV0U3RyZWFtKG5ldyBGaWxlKFwiQzpcXHRlbXBcXGZvby50eHRcIikpO1xu
IiArIAorCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSItLS0tLS0tLS0tXG4iICsg
CisJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNilcbiIgKyAKKwkJIgluZXcgRmlsZU91
dHB1dFN0cmVhbShuZXcgRmlsZShcIkM6XFx0ZW1wXFxmb28udHh0XCIpKTtcbiIgKyAKKwkJIgle
Xl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXG4iICsgCisJ
CSJSZXNvdXJjZSBsZWFrOiBcJzx1bmFzc2lnbmVkIENsb3NlYWJsZSB2YWx1ZT5cJyBpcyBuZXZl
ciBjbG9zZWRcbiIgKyAKKwkJIi0tLS0tLS0tLS1cbiIsCisJCW51bGwsCisJCXRydWUsCisJCW9w
dGlvbnMpOworfQorLy8gQnVnIDM2MjMzMiAtIE9ubHkgcmVwb3J0IHBvdGVudGlhbCBsZWFrIHdo
ZW4gY2xvc2VhYmxlIG5vdCBjcmVhdGVkIGluIHRoZSBsb2NhbCBzY29wZQorLy8gYSB3cmFwcGVy
IGlzIG9idGFpbmVkIGZyb20gYW5vdGhlciBtZXRob2QKK3B1YmxpYyB2b2lkIHRlc3QwNjNhKCkg
dGhyb3dzIElPRXhjZXB0aW9uIHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygp
OworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9z
ZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRp
b25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9w
dGlvbnMuRVJST1IpOworCXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQluZXcgU3RyaW5nW10gewor
CQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKworCQkJImltcG9ydCBq
YXZhLmlvLkZpbGVJbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVk
SW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKwor
CQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICB2b2lkIHJlYWQoRmlsZSBmaWxlKSB0
aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0gc3Ry
ZWFtID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVy
ZWRJbnB1dFN0cmVhbSBiaXMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShzdHJlYW0pOyAvLyBu
ZXZlciBzaW5jZSByZWFzc2lnbmVkXG4iICsKKwkJCSIgICAgICAgIEZpbGVJbnB1dFN0cmVhbSBz
dHJlYW0yID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKTsgLy8gdW5zdXJlIHNpbmNlIHBhc3Nl
ZCB0byBtZXRob2RcbiIgKworCQkJIiAgICAgICAgYmlzID0gZ2V0UmVhZGVyKHN0cmVhbTIpOyAv
LyB1bnN1cmUgc2luY2Ugb2J0YWluZWQgZnJvbSBtZXRob2RcbiIgKworCQkJIiAgICAgICAgYmlz
LmF2YWlsYWJsZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICBCdWZmZXJlZElucHV0
U3RyZWFtIGdldFJlYWRlcihGaWxlSW5wdXRTdHJlYW0gc3RyZWFtKSB0aHJvd3MgSU9FeGNlcHRp
b24ge1xuIiArCisJCQkiICAgICAgICByZXR1cm4gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oc3Ry
ZWFtKTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSItLS0tLS0tLS0t
XG4iICsgCisJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgOClcbiIgKyAKKwkJIglCdWZm
ZXJlZElucHV0U3RyZWFtIGJpcyA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKHN0cmVhbSk7IC8v
IG5ldmVyIHNpbmNlIHJlYXNzaWduZWRcbiIgKyAKKwkJIgkgICAgICAgICAgICAgICAgICAgIF5e
XlxuIiArIAorCQkiUmVzb3VyY2UgbGVhazogXCdiaXNcJyBpcyBuZXZlciBjbG9zZWRcbiIgKyAK
KwkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJIjIuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA5KVxu
IiArIAorCQkiCUZpbGVJbnB1dFN0cmVhbSBzdHJlYW0yID0gbmV3IEZpbGVJbnB1dFN0cmVhbShm
aWxlKTsgLy8gdW5zdXJlIHNpbmNlIHBhc3NlZCB0byBtZXRob2RcbiIgKyAKKwkJIgkgICAgICAg
ICAgICAgICAgXl5eXl5eXlxuIiArIAorCQkiUG90ZW50aWFsIHJlc291cmNlIGxlYWs6IFwnc3Ry
ZWFtMlwnIG1heSBub3QgYmUgY2xvc2VkXG4iICsgCisJCSItLS0tLS0tLS0tXG4iICsgCisJCSIz
LiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTApXG4iICsgCisJCSIJYmlzID0gZ2V0UmVhZGVy
KHN0cmVhbTIpOyAvLyB1bnN1cmUgc2luY2Ugb2J0YWluZWQgZnJvbSBtZXRob2RcbiIgKyAKKwkJ
IgleXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIgKyAKKwkJIlBvdGVudGlhbCByZXNvdXJjZSBs
ZWFrOiBcJ2Jpc1wnIG1heSBub3QgYmUgY2xvc2VkXG4iICsgCisJCSItLS0tLS0tLS0tXG4iLAor
CQludWxsLAorCQl0cnVlLAorCQlvcHRpb25zKTsKK30KKy8vIEJ1ZyAzNjIzMzIgLSBPbmx5IHJl
cG9ydCBwb3RlbnRpYWwgbGVhayB3aGVuIGNsb3NlYWJsZSBub3QgY3JlYXRlZCBpbiB0aGUgbG9j
YWwgc2NvcGUKKy8vIGEgd3JhcHBlciBpcyBvYnRhaW5lZCBmcm9tIGEgZmllbGQgcmVhZAorcHVi
bGljIHZvaWQgdGVzdDA2M2IoKSB0aHJvd3MgSU9FeGNlcHRpb24geworCU1hcCBvcHRpb25zID0g
Z2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElP
Tl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRp
b25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRD
bG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3Qo
CisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxl
SW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJlZElucHV0U3RyZWFt
O1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJwdWJsaWMg
Y2xhc3MgWCB7XG4iICsKKwkJCSIgICAgRmlsZUlucHV0U3RyZWFtIHN0cmVhbTtcbiIgKworCQkJ
IiAgICB2b2lkIHJlYWQoKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBG
aWxlSW5wdXRTdHJlYW0gcyA9IHRoaXMuc3RyZWFtO1xuIiArCisJCQkiICAgICAgICBCdWZmZXJl
ZElucHV0U3RyZWFtIGJpcyA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKHMpOyAvLyB1bnN1cmUg
c2luY2UgcyBpcyBvYnRhaW5lZCBmcm9tIGEgZmllbGRcbiIgKworCQkJIiAgICAgICAgYmlzLmF2
YWlsYWJsZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIi0tLS0t
LS0tLS1cbiIgKyAKKwkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA4KVxuIiArIAorCQki
CUJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0ocyk7IC8v
IHVuc3VyZSBzaW5jZSBzIGlzIG9idGFpbmVkIGZyb20gYSBmaWVsZFxuIiArIAorCQkiCSAgICAg
ICAgICAgICAgICAgICAgXl5eXG4iICsgCisJCSJQb3RlbnRpYWwgcmVzb3VyY2UgbGVhazogXCdi
aXNcJyBtYXkgbm90IGJlIGNsb3NlZFxuIiArIAorCQkiLS0tLS0tLS0tLVxuIiwKKwkJbnVsbCwK
KwkJdHJ1ZSwKKwkJb3B0aW9ucyk7Cit9CisvLyBCdWcgMzYyMzMyIC0gT25seSByZXBvcnQgcG90
ZW50aWFsIGxlYWsgd2hlbiBjbG9zZWFibGUgbm90IGNyZWF0ZWQgaW4gdGhlIGxvY2FsIHNjb3Bl
CisvLyBhIHdyYXBwZXIgaXMgYXNzaWduZWQgdG8gYSBmaWVsZAorcHVibGljIHZvaWQgdGVzdDA2
M2MoKSB0aHJvd3MgSU9FeGNlcHRpb24geworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRp
b25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3Nl
ZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxl
ck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBp
bGVyT3B0aW9ucy5FUlJPUik7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJbmV3IFN0cmluZ1td
IHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZhLmlvLkZpbGVJbnB1dFN0cmVhbTtcbiIg
KworCQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBv
cnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwor
CQkJIiAgICBCdWZmZXJlZElucHV0U3RyZWFtIHN0cmVhbTtcbiIgKworCQkJIiAgICB2b2lkIHJl
YWQoKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBGaWxlSW5wdXRTdHJl
YW0gcyA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oXCJzb21lZmlsZVwiKTtcbiIgKworCQkJIiAgICAg
ICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShzKTtc
biIgKworCQkJIiAgICAgICAgdGhpcy5zdHJlYW0gPSBiaXM7XG4iICsKKwkJCSIgICAgfVxuIiAr
CisJCQkifVxuIgorCQl9LAorCQkiIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJbnVsbCwKKwkJb3B0
aW9ucywKKwkJbnVsbCk7Cit9CiBwdWJsaWMgc3RhdGljIENsYXNzIHRlc3RDbGFzcygpIHsKIAly
ZXR1cm4gVHJ5V2l0aFJlc291cmNlc1N0YXRlbWVudFRlc3QuY2xhc3M7CiB9CmRpZmYgLS1naXQg
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvYXN0L0FsbG9jYXRpb25FeHByZXNzaW9uLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0FsbG9j
YXRpb25FeHByZXNzaW9uLmphdmEKaW5kZXggZTgxMWVhOS4uMjBiOTZmNCAxMDA2NDQKLS0tIGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2FzdC9BbGxvY2F0aW9uRXhwcmVzc2lvbi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQWxs
b2NhdGlvbkV4cHJlc3Npb24uamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBv
dGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBv
dGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2Nv
bXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1z
IG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVz
IHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0zNyw2ICszNyw4IEBA
CiAJcHJvdGVjdGVkIFR5cGVCaW5kaW5nIHR5cGVFeHBlY3RlZDsJICAvLyBmb3IgPD4gaW5mZXJl
bmNlCiAJcHVibGljIGJvb2xlYW4gaW5mZXJyZWRSZXR1cm5UeXBlOwogCisJcHVibGljIEZha2Vk
VHJhY2tpbmdWYXJpYWJsZSBjbG9zZVRyYWNrZXI7CS8vIHdoZW4gYWxsb2NhdGlvbiBhIENsb3Nl
YWJsZSBzdG9yZSBhIHByZS1saW1pbmFyeSB0cmFja2luZyB2YXJpYWJsZSBoZXJlCisKIHB1Ymxp
YyBGbG93SW5mbyBhbmFseXNlQ29kZShCbG9ja1Njb3BlIGN1cnJlbnRTY29wZSwgRmxvd0NvbnRl
eHQgZmxvd0NvbnRleHQsIEZsb3dJbmZvIGZsb3dJbmZvKSB7CiAJLy8gY2hlY2sgY2FwdHVyZWQg
dmFyaWFibGVzIGFyZSBpbml0aWFsaXplZCBpbiBjdXJyZW50IGNvbnRleHQgKDI2MTM0KQogCWNo
ZWNrQ2FwdHVyZWRMb2NhbEluaXRpYWxpemF0aW9uSWZOZWNlc3NhcnkoKFJlZmVyZW5jZUJpbmRp
bmcpdGhpcy5iaW5kaW5nLmRlY2xhcmluZ0NsYXNzLmVyYXN1cmUoKSwgY3VycmVudFNjb3BlLCBm
bG93SW5mbyk7CkBAIC00NCwxOCArNDYsMjIgQEAKIAkvLyBwcm9jZXNzIGFyZ3VtZW50cwogCWlm
ICh0aGlzLmFyZ3VtZW50cyAhPSBudWxsKSB7CiAJCWZvciAoaW50IGkgPSAwLCBjb3VudCA9IHRo
aXMuYXJndW1lbnRzLmxlbmd0aDsgaSA8IGNvdW50OyBpKyspIHsKLQkJCS8vIGlmIGFyZ3VtZW50
IGlzIGFuIEF1dG9DbG9zZWFibGUgaW5zZXJ0IGluZm8gdGhhdCBpdCAqbWF5KiBiZSBjbG9zZWQg
KGJ5IHRoZSB0YXJnZXQgbWV0aG9kLCBpLmUuKQotCQkJZmxvd0luZm8gPSBGYWtlZFRyYWNraW5n
VmFyaWFibGUubWFya1Bhc3NlZFRvT3V0c2lkZShjdXJyZW50U2NvcGUsIHRoaXMuYXJndW1lbnRz
W2ldLCBmbG93SW5mbyk7CiAJCQlmbG93SW5mbyA9CiAJCQkJdGhpcy5hcmd1bWVudHNbaV0KIAkJ
CQkJLmFuYWx5c2VDb2RlKGN1cnJlbnRTY29wZSwgZmxvd0NvbnRleHQsIGZsb3dJbmZvKQogCQkJ
CQkudW5jb25kaXRpb25hbEluaXRzKCk7CisJCQkvLyBpZiBhcmd1bWVudCBpcyBhbiBBdXRvQ2xv
c2VhYmxlIGluc2VydCBpbmZvIHRoYXQgaXQgKm1heSogYmUgY2xvc2VkIChieSB0aGUgdGFyZ2V0
IG1ldGhvZCwgaS5lLikKKwkJCWZsb3dJbmZvID0gRmFrZWRUcmFja2luZ1ZhcmlhYmxlLm1hcmtQ
YXNzZWRUb091dHNpZGUoY3VycmVudFNjb3BlLCB0aGlzLmFyZ3VtZW50c1tpXSwgZmxvd0luZm8s
IHRoaXMucmVzb2x2ZWRUeXBlKTsKIAkJCWlmICgodGhpcy5hcmd1bWVudHNbaV0uaW1wbGljaXRD
b252ZXJzaW9uICYgVHlwZUlkcy5VTkJPWElORykgIT0gMCkgewogCQkJCXRoaXMuYXJndW1lbnRz
W2ldLmNoZWNrTlBFKGN1cnJlbnRTY29wZSwgZmxvd0NvbnRleHQsIGZsb3dJbmZvKTsKIAkJCX0K
IAkJfQogCQlhbmFseXNlQXJndW1lbnRzKGN1cnJlbnRTY29wZSwgZmxvd0NvbnRleHQsIGZsb3dJ
bmZvLCB0aGlzLmJpbmRpbmcsIHRoaXMuYXJndW1lbnRzKTsKIAl9CisKKwlpZiAoRmFrZWRUcmFj
a2luZ1ZhcmlhYmxlLmlzQXV0b0Nsb3NlYWJsZSh0aGlzLnJlc29sdmVkVHlwZSkpCisJCUZha2Vk
VHJhY2tpbmdWYXJpYWJsZS5hbmFseXNlQ2xvc2VhYmxlQWxsb2NhdGlvbihjdXJyZW50U2NvcGUs
IGZsb3dJbmZvLCB0aGlzKTsKKwogCS8vIHJlY29yZCBzb21lIGRlcGVuZGVuY3kgaW5mb3JtYXRp
b24gZm9yIGV4Y2VwdGlvbiB0eXBlcwogCVJlZmVyZW5jZUJpbmRpbmdbXSB0aHJvd25FeGNlcHRp
b25zOwogCWlmICgoKHRocm93bkV4Y2VwdGlvbnMgPSB0aGlzLmJpbmRpbmcudGhyb3duRXhjZXB0
aW9ucykubGVuZ3RoKSAhPSAwKSB7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Fzc2lnbm1lbnQu
amF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9hc3QvQXNzaWdubWVudC5qYXZhCmluZGV4IDk3MGZjMjQuLjk3NDY0YTEg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvQXNzaWdubWVudC5qYXZhCisrKyBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3Qv
QXNzaWdubWVudC5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioK
LSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
KyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
ICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWlu
ZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhl
IEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBk
aXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTQ2LDE5ICs0NiwyNyBAQAogCWlm
ICgodGhpcy5leHByZXNzaW9uLmltcGxpY2l0Q29udmVyc2lvbiAmIFR5cGVJZHMuVU5CT1hJTkcp
ICE9IDApIHsKIAkJdGhpcy5leHByZXNzaW9uLmNoZWNrTlBFKGN1cnJlbnRTY29wZSwgZmxvd0Nv
bnRleHQsIGZsb3dJbmZvKTsKIAl9CisJCisJRmxvd0luZm8gcHJlSW5pdEluZm8gPSBudWxsOwor
CWJvb2xlYW4gc2hvdWxkQW5hbHlzZVJlc291cmNlID0gbG9jYWwgIT0gbnVsbCAKKwkJCSYmIGZs
b3dJbmZvLnJlYWNoTW9kZSgpID09IEZsb3dJbmZvLlJFQUNIQUJMRSAKKwkJCSYmIChGYWtlZFRy
YWNraW5nVmFyaWFibGUuaXNBdXRvQ2xvc2VhYmxlKHRoaXMuZXhwcmVzc2lvbi5yZXNvbHZlZFR5
cGUpCisJCQkJCXx8IHRoaXMuZXhwcmVzc2lvbi5yZXNvbHZlZFR5cGUgPT0gVHlwZUJpbmRpbmcu
TlVMTCk7CisJaWYgKHNob3VsZEFuYWx5c2VSZXNvdXJjZSkgeworCQlwcmVJbml0SW5mbyA9IGZs
b3dJbmZvLnVuY29uZGl0aW9uYWxDb3B5KCk7CisJCS8vIGFuYWx5c2lzIG9mIHJlc291cmNlIGxl
YWtzIG5lZWRzIGFkZGl0aW9uYWwgY29udGV4dCB3aGlsZSBhbmFseXppbmcgdGhlIFJIUzoKKwkJ
RmFrZWRUcmFja2luZ1ZhcmlhYmxlLnByZUNvbm5lY3RUcmFja2VyQWNyb3NzQXNzaWdubWVudCh0
aGlzLCBsb2NhbCwgdGhpcy5leHByZXNzaW9uKTsKKwl9CisJCiAJZmxvd0luZm8gPSAoKFJlZmVy
ZW5jZSkgdGhpcy5saHMpCiAJCS5hbmFseXNlQXNzaWdubWVudChjdXJyZW50U2NvcGUsIGZsb3dD
b250ZXh0LCBmbG93SW5mbywgdGhpcywgZmFsc2UpCiAJCS51bmNvbmRpdGlvbmFsSW5pdHMoKTsK
LQlpZiAobG9jYWwgIT0gbnVsbCkgewotCQlMb2NhbFZhcmlhYmxlQmluZGluZyBwcmV2aW91c1Ry
YWNrZXJCaW5kaW5nID0gbnVsbDsKLQkJaWYgKGxvY2FsLmNsb3NlVHJhY2tlciAhPSBudWxsKSB7
Ci0JCQkvLyBBc3NpZ25pbmcgdG8gYSB2YXJpYWJsZSBhbHJlYWR5IGhvbGRpbmcgYW4gQXV0b0Ns
b3NlYWJsZSwgaGFzIGl0IGJlZW4gY2xvc2VkIGJlZm9yZT8KLQkJCXByZXZpb3VzVHJhY2tlckJp
bmRpbmcgPSBsb2NhbC5jbG9zZVRyYWNrZXIuYmluZGluZzsKLQkJCWlmICghZmxvd0luZm8uaXNE
ZWZpbml0ZWx5TnVsbChsb2NhbCkpIC8vIG9ubHkgaWYgcHJldmlvdXMgdmFsdWUgbWF5IGJlIG5v
bi1udWxsCi0JCQkJbG9jYWwuY2xvc2VUcmFja2VyLnJlY29yZEVycm9yTG9jYXRpb24odGhpcywg
Zmxvd0luZm8ubnVsbFN0YXR1cyhwcmV2aW91c1RyYWNrZXJCaW5kaW5nKSk7Ci0JCX0KLQkJRmFr
ZWRUcmFja2luZ1ZhcmlhYmxlLmhhbmRsZVJlc291cmNlQXNzaWdubWVudChmbG93SW5mbywgdGhp
cywgdGhpcy5leHByZXNzaW9uLCBsb2NhbCwgcHJldmlvdXNUcmFja2VyQmluZGluZyk7Ci0JfQor
CisJaWYgKHNob3VsZEFuYWx5c2VSZXNvdXJjZSkKKwkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlLmhh
bmRsZVJlc291cmNlQXNzaWdubWVudChwcmVJbml0SW5mbywgZmxvd0luZm8sIHRoaXMsIHRoaXMu
ZXhwcmVzc2lvbiwgbG9jYWwpOworCWVsc2UKKwkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlLmNsZWFu
VXBBZnRlckFzc2lnbm1lbnQoY3VycmVudFNjb3BlLCB0aGlzLmxocy5iaXRzLCB0aGlzLmV4cHJl
c3Npb24pOworCiAJaW50IG51bGxTdGF0dXMgPSB0aGlzLmV4cHJlc3Npb24ubnVsbFN0YXR1cyhm
bG93SW5mbyk7CiAJaWYgKGxvY2FsICE9IG51bGwgJiYgKGxvY2FsLnR5cGUudGFnQml0cyAmIFRh
Z0JpdHMuSXNCYXNlVHlwZSkgPT0gMCkgewogCQlpZiAobnVsbFN0YXR1cyA9PSBGbG93SW5mby5O
VUxMKSB7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Zha2VkVHJhY2tpbmdWYXJpYWJsZS5qYXZh
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2FzdC9GYWtlZFRyYWNraW5nVmFyaWFibGUuamF2YQppbmRleCBlZTEzMDQ3Li5j
NDU3OWIxIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Zha2VkVHJhY2tpbmdWYXJpYWJsZS5qYXZh
CisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9hc3QvRmFrZWRUcmFja2luZ1ZhcmlhYmxlLmphdmEKQEAgLTE1LDcgKzE1
LDYgQEAKIGltcG9ydCBqYXZhLnV0aWwuTWFwOwogaW1wb3J0IGphdmEudXRpbC5NYXAuRW50cnk7
CiAKLWltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5DaGFyT3BlcmF0aW9uOwog
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5jb2RlZ2VuLkNvZGVTdHJl
YW07CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmZsb3cuRmxvd0Nv
bnRleHQ7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmZsb3cuRmxv
d0luZm87CkBAIC00OCwyMCArNDcsMjggQEAKIAlwcml2YXRlIHN0YXRpYyBmaW5hbCBpbnQgQ0xP
U0VEX0lOX05FU1RFRF9NRVRIT0QgPSA0OwogCS8vIGEgbG9jYXRpb24gaW5kZXBlbmRlbnQgaXNz
dWUgaGFzIGJlZW4gcmVwb3J0ZWQgYWxyZWFkeSBhZ2FpbnN0IHRoaXMgcmVzb3VyY2U6CiAJcHJp
dmF0ZSBzdGF0aWMgZmluYWwgaW50IFJFUE9SVEVEID0gODsKLQkKKwkvLyBhIHJlc291cmNlIGlz
IHdyYXBwZWQgaW4gYW5vdGhlciByZXNvdXJjZToKKwlwcml2YXRlIHN0YXRpYyBmaW5hbCBpbnQg
V1JBUFBFRCA9IDE2OworCisJcHJpdmF0ZSBzdGF0aWMgZmluYWwgaW50IERPVUJUX01BU0sgPSBD
TE9TRV9TRUVOIHwgUEFTU0VEX1RPX09VVFNJREUgfCBDTE9TRURfSU5fTkVTVEVEX01FVEhPRCB8
IFJFUE9SVEVEOyAvLyBub3QgV1JBUFBFRAorCiAJLyoqCi0JICogQml0c2V0IG9mIHtAbGluayAj
Q0xPU0VfU0VFTn0sIHtAbGluayAjUEFTU0VEX1RPX09VVFNJREV9LCB7QGxpbmsgI0NMT1NFRF9J
Tl9ORVNURURfTUVUSE9EfSBhbmQge0BsaW5rICNSRVBPUlRFRH0uCisJICogQml0c2V0IG9mIHtA
bGluayAjQ0xPU0VfU0VFTn0sIHtAbGluayAjUEFTU0VEX1RPX09VVFNJREV9LCB7QGxpbmsgI0NM
T1NFRF9JTl9ORVNURURfTUVUSE9EfSwge0BsaW5rICNSRVBPUlRFRH0gYW5kIHtAbGluayAjV1JB
UFBFRH0uCiAJICovCiAJcHJpdmF0ZSBpbnQgZ2xvYmFsQ2xvc2luZ1N0YXRlID0gMDsKIAorCXB1
YmxpYyBMb2NhbFZhcmlhYmxlQmluZGluZyBvcmlnaW5hbEJpbmRpbmc7IC8vIHRoZSByZWFsIGxv
Y2FsIGJlaW5nIHRyYWNrZWQsIGNhbiBiZSBudWxsIGZvciBwcmVsaW1pbmFyeSB0cmFjayB2YXJz
IGZvciBhbGxvY2F0aW9uIGV4cHJlc3Npb25zCisJCisJcHVibGljIEZha2VkVHJhY2tpbmdWYXJp
YWJsZSBpbm5lclRyYWNrZXI7IC8vIGNoYWluZWQgdHJhY2tpbmcgdmFyaWFibGUgb2YgYSBjaGFp
bmVkICh3cmFwcGVkKSByZXNvdXJjZQorCiAJTWV0aG9kU2NvcGUgbWV0aG9kU2NvcGU7IC8vIGRl
c2lnbmF0ZXMgdGhlIG1ldGhvZCBkZWNsYXJpbmcgdGhpcyB2YXJpYWJsZQotCQotCXB1YmxpYyBM
b2NhbFZhcmlhYmxlQmluZGluZyBvcmlnaW5hbEJpbmRpbmc7IC8vIHRoZSByZWFsIGxvY2FsIGJl
aW5nIHRyYWNrZWQKLQkKLQlIYXNoTWFwIHJlY29yZGVkTG9jYXRpb25zOyAvLyBpbml0aWFsbHkg
bnVsbCwgQVNUTm9kZSAtPiBJbnRlZ2VyIAogCisJcHJpdmF0ZSBIYXNoTWFwIHJlY29yZGVkTG9j
YXRpb25zOyAvLyBpbml0aWFsbHkgbnVsbCwgQVNUTm9kZSAtPiBJbnRlZ2VyCiAKLQlwdWJsaWMg
RmFrZWRUcmFja2luZ1ZhcmlhYmxlKExvY2FsVmFyaWFibGVCaW5kaW5nIG9yaWdpbmFsLCBTdGF0
ZW1lbnQgbG9jYXRpb24pIHsKKwkvLyB0ZW1wb3Jhcnkgc3RvcmFnZSB3aGlsZSBhbmFseXppbmcg
InJlcyA9IG5ldyBSZXMoKTsiOgorCXByaXZhdGUgQVNUTm9kZSBjdXJyZW50QXNzaWdubWVudDsg
Ly8gdGVtcG9yYXJpbHkgc3RvcmUgdGhlIGFzc2lnbm1lbnQgYXMgdGhlIGxvY2F0aW9uIGZvciBl
cnJvciByZXBvcnRpbmcKKworCXB1YmxpYyBGYWtlZFRyYWNraW5nVmFyaWFibGUoTG9jYWxWYXJp
YWJsZUJpbmRpbmcgb3JpZ2luYWwsIEFTVE5vZGUgbG9jYXRpb24pIHsKIAkJc3VwZXIob3JpZ2lu
YWwubmFtZSwgbG9jYXRpb24uc291cmNlU3RhcnQsIGxvY2F0aW9uLnNvdXJjZUVuZCk7CiAJCXRo
aXMudHlwZSA9IG5ldyBTaW5nbGVUeXBlUmVmZXJlbmNlKAogCQkJCVR5cGVDb25zdGFudHMuT0JK
RUNULApAQCAtNjksNiArNzYsMTcgQEAKIAkJdGhpcy5tZXRob2RTY29wZSA9IG9yaWdpbmFsLmRl
Y2xhcmluZ1Njb3BlLm1ldGhvZFNjb3BlKCk7CiAJCXRoaXMub3JpZ2luYWxCaW5kaW5nID0gb3Jp
Z2luYWw7CiAJCXJlc29sdmUob3JpZ2luYWwuZGVjbGFyaW5nU2NvcGUpOworCX0KKworCS8qIENy
ZWF0ZSBhbiB1bmFzc2lnbmVkIHRyYWNraW5nIHZhcmlhYmxlIHdoaWxlIGFuYWx5emluZyBhbiBh
bGxvY2F0aW9uIGV4cHJlc3Npb246ICovCisJcHJpdmF0ZSBGYWtlZFRyYWNraW5nVmFyaWFibGUo
QmxvY2tTY29wZSBzY29wZSwgQVNUTm9kZSBsb2NhdGlvbikgeworCQlzdXBlcigiPHVuYXNzaWdu
ZWQgQ2xvc2VhYmxlIHZhbHVlPiIudG9DaGFyQXJyYXkoKSwgbG9jYXRpb24uc291cmNlU3RhcnQs
IGxvY2F0aW9uLnNvdXJjZUVuZCk7IC8vJE5PTi1OTFMtMSQKKwkJdGhpcy50eXBlID0gbmV3IFNp
bmdsZVR5cGVSZWZlcmVuY2UoCisJCQkJVHlwZUNvbnN0YW50cy5PQkpFQ1QsCisJCQkJKChsb25n
KXRoaXMuc291cmNlU3RhcnQgPDwzMikrdGhpcy5zb3VyY2VFbmQpOworCQl0aGlzLm1ldGhvZFNj
b3BlID0gc2NvcGUubWV0aG9kU2NvcGUoKTsKKwkJdGhpcy5vcmlnaW5hbEJpbmRpbmcgPSBudWxs
OworCQlyZXNvbHZlKHNjb3BlKTsKIAl9CiAJCiAJcHVibGljIHZvaWQgZ2VuZXJhdGVDb2RlKEJs
b2NrU2NvcGUgY3VycmVudFNjb3BlLCBDb2RlU3RyZWFtIGNvZGVTdHJlYW0pCkBAIC04OCw4ICsx
MDYsMTIgQEAKIAl9CiAKIAkvKioKLQkgKiBJZiBleHByZXNzaW9uIHJlc29sdmVzIHRvIGEgbG9j
YWwgdmFyaWFibGUgYmluZGluZyBvZiB0eXBlIEF1dG9DbG9zZWFibGUsCi0JICogYW5zd2VyIHRo
ZSB2YXJpYWJsZSB0aGF0IHRyYWNrcyBjbG9zaW5nIG9mIHRoYXQgbG9jYWwsIGNyZWF0aW5nIGl0
IGlmIG5lZWRlZC4KKwkgKiBJZiBleHByZXNzaW9uIHJlc29sdmVzIHRvIGEgdmFsdWUgb2YgdHlw
ZSBBdXRvQ2xvc2VhYmxlIGFuc3dlciB0aGUgdmFyaWFibGUgdGhhdCB0cmFja3MgY2xvc2luZyBv
ZiB0aGF0IGxvY2FsLgorCSAqIENvdmVycyB0d28gY2FzZXM6CisJICogPHVsPgorCSAqIDxsaT52
YWx1ZSBpcyBhIGxvY2FsIHZhcmlhYmxlIHJlZmVyZW5jZSwgY3JlYXRlIHRyYWNraW5nIHZhcmlh
YmxlIGl0IGlmIG5lZWRlZC4KKwkgKiA8bGk+dmFsdWUgaXMgYW4gYWxsb2NhdGlvbiBleHByZXNz
aW9uLCByZXR1cm4gYSBwcmVsaW1pbmFyeSB0cmFja2luZyB2YXJpYWJsZSBpZiBzZXQuCisJICog
PC91bD4KIAkgKiBAcGFyYW0gZXhwcmVzc2lvbgogCSAqIEByZXR1cm4gYSBuZXcge0BsaW5rIEZh
a2VkVHJhY2tpbmdWYXJpYWJsZX0gb3IgbnVsbC4KIAkgKi8KQEAgLTEwNyw1MSArMTI5LDI0OCBA
QAogCQkJCVN0YXRlbWVudCBsb2NhdGlvbiA9IGxvY2FsLmRlY2xhcmF0aW9uOwogCQkJCXJldHVy
biBsb2NhbC5jbG9zZVRyYWNrZXIgPSBuZXcgRmFrZWRUcmFja2luZ1ZhcmlhYmxlKGxvY2FsLCBs
b2NhdGlvbik7CiAJCQl9Ci0JCX0KKwkJfSBlbHNlIGlmIChleHByZXNzaW9uIGluc3RhbmNlb2Yg
QWxsb2NhdGlvbkV4cHJlc3Npb24pIHsKKwkJCS8vIHJldHVybiBhbnkgcHJlbGltaW5hcnkgdHJh
Y2tpbmcgdmFyaWFibGUgZnJvbSBhbmFseXNlQ2xvc2VhYmxlQWxsb2NhdGlvbiAKKwkJCXJldHVy
biAoKEFsbG9jYXRpb25FeHByZXNzaW9uKSBleHByZXNzaW9uKS5jbG9zZVRyYWNrZXI7CisJCX0J
CQogCQlyZXR1cm4gbnVsbDsKIAl9CiAKLQkvKiogaWYgJ2ludm9jYXRpb25TaXRlJyBpcyBhIGNh
bGwgdG8gY2xvc2UoKSB0aGF0IGhhcyBhIHJlZ2lzdGVyZWQgdHJhY2tpbmcgdmFyaWFibGUsIGFu
c3dlciB0aGF0IHZhcmlhYmxlJ3MgYmluZGluZy4gKi8KLQlwdWJsaWMgc3RhdGljIExvY2FsVmFy
aWFibGVCaW5kaW5nIGdldFRyYWNrZXJGb3JDbG9zZUNhbGwoQVNUTm9kZSBpbnZvY2F0aW9uU2l0
ZSkgewotCQlpZiAoaW52b2NhdGlvblNpdGUgaW5zdGFuY2VvZiBNZXNzYWdlU2VuZCkgewotCQkJ
TWVzc2FnZVNlbmQgc2VuZCA9IChNZXNzYWdlU2VuZCkgaW52b2NhdGlvblNpdGU7Ci0JCQlpZiAo
Q2hhck9wZXJhdGlvbi5lcXVhbHMoVHlwZUNvbnN0YW50cy5DTE9TRSwgc2VuZC5zZWxlY3Rvcikg
JiYgc2VuZC5yZWNlaXZlciBpbnN0YW5jZW9mIFNpbmdsZU5hbWVSZWZlcmVuY2UpIHsKLQkJCQlC
aW5kaW5nIHJlY2VpdmVyQmluZGluZyA9ICgoU2luZ2xlTmFtZVJlZmVyZW5jZSlzZW5kLnJlY2Vp
dmVyKS5iaW5kaW5nOwotCQkJCWlmIChyZWNlaXZlckJpbmRpbmcgaW5zdGFuY2VvZiBMb2NhbFZh
cmlhYmxlQmluZGluZykgewotCQkJCQlGYWtlZFRyYWNraW5nVmFyaWFibGUgdHJhY2tpbmdWYXJp
YWJsZSA9ICgoTG9jYWxWYXJpYWJsZUJpbmRpbmcpcmVjZWl2ZXJCaW5kaW5nKS5jbG9zZVRyYWNr
ZXI7Ci0JCQkJCWlmICh0cmFja2luZ1ZhcmlhYmxlICE9IG51bGwpCi0JCQkJCQlyZXR1cm4gdHJh
Y2tpbmdWYXJpYWJsZS5iaW5kaW5nOworCS8qKgorCSAqIEJlZm9yZSBhbmFseXppbmcgYW4gYXNz
aWdubWVudCBvZiB0aGlzIHNoYXBlOiA8Y29kZT5zaW5nbGVOYW1lID0gbmV3IEFsbG9jYXRpb24o
KTwvY29kZT4KKwkgKiBjb25uZWN0IGFueSB0cmFja2luZyB2YXJpYWJsZSBvZiB0aGUgTEhTIHdp
dGggdGhlIGFsbG9jYXRpb24gb24gdGhlIFJIUy4KKwkgKiBBbHNvIHRoZSBhc3NpZ25tZW50IGlz
IHRlbXBvcmFyaWx5IHN0b3JlZCBpbiB0aGUgdHJhY2tpbmcgdmFyaWFibGUgaW4gY2FzZSB3ZSBu
ZWVkIHRvCisJICogcmVwb3J0IGVycm9ycyBiZWNhdXNlIHRoZSBhc3NpZ25tZW50IGxlYXZlcyB0
aGUgb2xkIExIUyB2YWx1ZSB1bmNsb3NlZC4KKwkgKiBJbiB0aGlzIGNhc2UgdGhlIGFzc2lnbm1l
bnQgc2hvdWxkIGJlIHVzZWQgYXMgdGhlIGVycm9yIGxvY2F0aW9uLgorCSAqIAorCSAqIEBwYXJh
bSBsb2NhdGlvbiB0aGUgYXNzaWdubWVudC9sb2NhbCBkZWNsYXJhdGlvbiBiZWluZyBhbmFseXpl
ZAorCSAqIEBwYXJhbSBsb2NhbCB0aGUgbG9jYWwgdmFyaWFibGUgYmVpbmcgYXNzaWduZWQgdG8K
KwkgKiBAcGFyYW0gcmhzIHRoZSByaHMgb2YgdGhlIGFzc2lnbm1lbnQgcmVzcC4gdGhlIGluaXRp
YWxpemF0aW9uIG9mIHRoZSBsb2NhbCB2YXJpYWJsZSBkZWNsYXJhdGlvbi4KKwkgKiBAcmV0dXJu
IGEgdHJhY2tpbmcgdmFyaWFibGUgd2l0aCB0ZW1wb3JhcmlseSBzZXQgJ2N1cnJlbnRBc3NpZ25t
ZW50JyBvciBudWxsLgorCSAqLworCXB1YmxpYyBzdGF0aWMgRmFrZWRUcmFja2luZ1ZhcmlhYmxl
IHByZUNvbm5lY3RUcmFja2VyQWNyb3NzQXNzaWdubWVudChBU1ROb2RlIGxvY2F0aW9uLCBMb2Nh
bFZhcmlhYmxlQmluZGluZyBsb2NhbCwgRXhwcmVzc2lvbiByaHMpIHsKKwkJRmFrZWRUcmFja2lu
Z1ZhcmlhYmxlIGNsb3NlVHJhY2tlciA9IG51bGw7CisJCWlmIChyaHMgaW5zdGFuY2VvZiBBbGxv
Y2F0aW9uRXhwcmVzc2lvbikgeworCQkJY2xvc2VUcmFja2VyID0gbG9jYWwuY2xvc2VUcmFja2Vy
OworCQkJaWYgKGNsb3NlVHJhY2tlciA9PSBudWxsKSB7CisJCQkJaWYgKGlzQXV0b0Nsb3NlYWJs
ZShyaHMucmVzb2x2ZWRUeXBlKSkgeworCQkJCQljbG9zZVRyYWNrZXIgPSBuZXcgRmFrZWRUcmFj
a2luZ1ZhcmlhYmxlKGxvY2FsLCBsb2NhdGlvbik7CisJCQkJfQkJCQkJCisJCQl9CisJCQlpZiAo
Y2xvc2VUcmFja2VyICE9IG51bGwpIHsKKwkJCQljbG9zZVRyYWNrZXIuY3VycmVudEFzc2lnbm1l
bnQgPSBsb2NhdGlvbjsKKwkJCQkoKEFsbG9jYXRpb25FeHByZXNzaW9uKXJocykuY2xvc2VUcmFj
a2VyID0gY2xvc2VUcmFja2VyOworCQkJfQorCQl9CisJCXJldHVybiBjbG9zZVRyYWNrZXI7CisJ
fQorCisJLyoqIENvbXB1dGUvYXNzaWduIGEgdHJhY2tpbmcgdmFyaWFibGUgZm9yIGEgZnJlc2hs
eSBhbGxvY2F0ZWQgY2xvc2VhYmxlIHZhbHVlLCB1c2luZyBpbmZvcm1hdGlvbiBmcm9tIG91ciB3
aGl0ZSBsaXN0cy4gKi8KKwlwdWJsaWMgc3RhdGljIHZvaWQgYW5hbHlzZUNsb3NlYWJsZUFsbG9j
YXRpb24oQmxvY2tTY29wZSBzY29wZSwgRmxvd0luZm8gZmxvd0luZm8sIEFsbG9jYXRpb25FeHBy
ZXNzaW9uIGFsbG9jYXRpb24pIHsKKwkJaWYgKCgoUmVmZXJlbmNlQmluZGluZylhbGxvY2F0aW9u
LnJlc29sdmVkVHlwZSkuaGFzVHlwZUJpdChUeXBlSWRzLkJpdFJlc291cmNlRnJlZUNsb3NlYWJs
ZSkpIHsKKwkJCS8vIHJlbW92ZSB1bm5lY2Vzc2FyeSBhdHRlbXB0cyAoY2xvc2VhYmxlIGlzIG5v
dCByZWxldmFudCkKKwkJCWlmIChhbGxvY2F0aW9uLmNsb3NlVHJhY2tlciAhPSBudWxsKSB7CisJ
CQkJc2NvcGUucmVtb3ZlVHJhY2tpbmdWYXIoYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIpOworCQkJ
CWFsbG9jYXRpb24uY2xvc2VUcmFja2VyID0gbnVsbDsKKwkJCX0KKwkJfSBlbHNlIGlmICgoKFJl
ZmVyZW5jZUJpbmRpbmcpYWxsb2NhdGlvbi5yZXNvbHZlZFR5cGUpLmhhc1R5cGVCaXQoVHlwZUlk
cy5CaXRXcmFwcGVyQ2xvc2VhYmxlKSkgeworCQkJaWYgKGFsbG9jYXRpb24uYXJndW1lbnRzICE9
IG51bGwgJiYgIGFsbG9jYXRpb24uYXJndW1lbnRzLmxlbmd0aCA+IDApIHsgCisJCQkJRmFrZWRU
cmFja2luZ1ZhcmlhYmxlIGlubmVyVHJhY2tlciA9IGFuYWx5c2VDbG9zZWFibGVBbGxvY2F0aW9u
QXJndW1lbnQoc2NvcGUsIGZsb3dJbmZvLCBhbGxvY2F0aW9uLCBhbGxvY2F0aW9uLmFyZ3VtZW50
c1swXSk7CisJCQkJaWYgKGlubmVyVHJhY2tlciAhPSBudWxsKSB7CisJCQkJCWlmIChpbm5lclRy
YWNrZXIgPT0gYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIpCisJCQkJCQlyZXR1cm47IC8vIHNlbGYg
d3JhcCAtPiBuZWl0aGVyIGNoYW5nZSAoaGVyZSkgbm9yIHJlbW92ZSAoYmVsb3cpCisJCQkJCWlm
IChhbGxvY2F0aW9uLmNsb3NlVHJhY2tlciA9PSBudWxsKSB7CisJCQkJCQlhbGxvY2F0aW9uLmNs
b3NlVHJhY2tlciA9IG5ldyBGYWtlZFRyYWNraW5nVmFyaWFibGUoc2NvcGUsIGFsbG9jYXRpb24p
OyAvLyBubyBsb2NhbCBhdmFpbGFibGUsIGNsb3NlYWJsZSBpcyB1bmFzc2lnbmVkCisJCQkJCX0K
KwkJCQkJYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIuaW5uZXJUcmFja2VyID0gaW5uZXJUcmFja2Vy
OworCQkJCQlpbm5lclRyYWNrZXIuZ2xvYmFsQ2xvc2luZ1N0YXRlIHw9IFdSQVBQRUQ7CisJCQkJ
CWZsb3dJbmZvLm1hcmtBc0RlZmluaXRlbHlOdWxsKGFsbG9jYXRpb24uY2xvc2VUcmFja2VyLmJp
bmRpbmcpOworCQkJCQlyZXR1cm47IC8vIGtlZXAgY2hhaW5pbmcgd3JhcHBlcgogCQkJCX0KIAkJ
CX0KKwkJCS8vIHJlbW92ZSB1bm5lY2Vzc2FyeSBhdHRlbXB0cyAod3JhcHBlciBoYXMgbm8gcmVs
ZXZhbnQgaW5uZXIpCisJCQlpZiAoYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIgIT0gbnVsbCkgewor
CQkJCXNjb3BlLnJlbW92ZVRyYWNraW5nVmFyKGFsbG9jYXRpb24uY2xvc2VUcmFja2VyKTsKKwkJ
CQlhbGxvY2F0aW9uLmNsb3NlVHJhY2tlciA9IG51bGw7CisJCQl9CisJCX0gZWxzZSB7CisJCQlG
YWtlZFRyYWNraW5nVmFyaWFibGUgcHJlc2V0VHJhY2tlciA9IGFsbG9jYXRpb24uY2xvc2VUcmFj
a2VyOworCQkJaWYgKHByZXNldFRyYWNrZXIgIT0gbnVsbCAmJiBwcmVzZXRUcmFja2VyLm9yaWdp
bmFsQmluZGluZyAhPSBudWxsKSB7CisJCQkJaW50IGNsb3NlU3RhdHVzID0gZmxvd0luZm8ubnVs
bFN0YXR1cyhwcmVzZXRUcmFja2VyLmJpbmRpbmcpOworCQkJCWlmIChjbG9zZVN0YXR1cyAhPSBG
bG93SW5mby5OT05fTlVMTAorCQkJCQkJJiYgIWZsb3dJbmZvLmlzRGVmaW5pdGVseU51bGwocHJl
c2V0VHJhY2tlci5vcmlnaW5hbEJpbmRpbmcpCisJCQkJCQkmJiAhKHByZXNldFRyYWNrZXIuY3Vy
cmVudEFzc2lnbm1lbnQgaW5zdGFuY2VvZiBMb2NhbERlY2xhcmF0aW9uKSkKKwkJCQkJYWxsb2Nh
dGlvbi5jbG9zZVRyYWNrZXIucmVjb3JkRXJyb3JMb2NhdGlvbihwcmVzZXRUcmFja2VyLmN1cnJl
bnRBc3NpZ25tZW50LCBjbG9zZVN0YXR1cyk7CisJCQl9IGVsc2UgeworCQkJCWFsbG9jYXRpb24u
Y2xvc2VUcmFja2VyID0gbmV3IEZha2VkVHJhY2tpbmdWYXJpYWJsZShzY29wZSwgYWxsb2NhdGlv
bik7IC8vIG5vIGxvY2FsIGF2YWlsYWJsZSwgY2xvc2VhYmxlIGlzIHVuYXNzaWduZWQKKwkJCX0K
KwkJCWZsb3dJbmZvLm1hcmtBc0RlZmluaXRlbHlOdWxsKGFsbG9jYXRpb24uY2xvc2VUcmFja2Vy
LmJpbmRpbmcpOworCQl9CisJfQorCisJLyoqIEFuYWx5emUgdGhlIGFyZ3VtZW50IG9mIGFuIGFs
bG9jYXRpb24gZm9yIGEgcmVzb3VyY2Ugd3JhcHBlci4gKi8KKwlwdWJsaWMgc3RhdGljIEZha2Vk
VHJhY2tpbmdWYXJpYWJsZSBhbmFseXNlQ2xvc2VhYmxlQWxsb2NhdGlvbkFyZ3VtZW50KEJsb2Nr
U2NvcGUgc2NvcGUsIEZsb3dJbmZvIGZsb3dJbmZvLCBBbGxvY2F0aW9uRXhwcmVzc2lvbiBhbGxv
Y2F0aW9uLCBFeHByZXNzaW9uIGFyZykKKwl7CisJCWlmIChhcmcgaW5zdGFuY2VvZiBBc3NpZ25t
ZW50KSB7CisJCQlBc3NpZ25tZW50IGFzc2lnbiA9IChBc3NpZ25tZW50KWFyZzsKKwkJCUxvY2Fs
VmFyaWFibGVCaW5kaW5nIGlubmVyTG9jYWwgPSBhc3NpZ24ubG9jYWxWYXJpYWJsZUJpbmRpbmco
KTsKKwkJCWlmIChpbm5lckxvY2FsICE9IG51bGwpIHsKKwkJCQkvLyBuZXN0ZWQgYXNzaWdubWVu
dCBoYXMgYWxyZWFkeSBiZWVuIHByb2Nlc3NlZAorCQkJCXJldHVybiBpbm5lckxvY2FsLmNsb3Nl
VHJhY2tlcjsgLy8gRklYTUUgZG8gd2UgbmVlZCBhIG5lc3RlZCB0cmFja2VyIGhlcmU/IHNlZSB0
ZXN0MDYxYS9lCisJCQl9IGVsc2UgeworCQkJCWFyZyA9IGFzc2lnbi5leHByZXNzaW9uOyAvLyB1
bndyYXAgYXNzaWdubWVudCBhbmQgZmFsbCB0aHJvdWdoCisJCQl9CisJCX0KKwkJaWYgKGFyZyBp
bnN0YW5jZW9mIFNpbmdsZU5hbWVSZWZlcmVuY2UpIHsKKwkJCVNpbmdsZU5hbWVSZWZlcmVuY2Ug
cmVmID0gKFNpbmdsZU5hbWVSZWZlcmVuY2UpIGFyZzsKKwkJCWlmIChyZWYuYmluZGluZyBpbnN0
YW5jZW9mIExvY2FsVmFyaWFibGVCaW5kaW5nKSB7CisJCQkJLy8gYWxsb2NhdGlvbiBhcmcgaXMg
YSByZWZlcmVuY2UgdG8gYW4gZXhpc3RpbmcgY2xvc2VhYmxlPworCQkJCUxvY2FsVmFyaWFibGVC
aW5kaW5nIGlubmVyTG9jYWwgPSAoTG9jYWxWYXJpYWJsZUJpbmRpbmcpcmVmLmJpbmRpbmc7CisJ
CQkJaWYgKGlubmVyTG9jYWwuY2xvc2VUcmFja2VyICE9IG51bGwpCisJCQkJCXJldHVybiBpbm5l
ckxvY2FsLmNsb3NlVHJhY2tlcjsKKwkJCQlpZiAoaW5uZXJMb2NhbC5pc1BhcmFtZXRlcigpICYm
IGlzQXV0b0Nsb3NlYWJsZShpbm5lckxvY2FsLnR5cGUpKSB7CisJCQkJCUZha2VkVHJhY2tpbmdW
YXJpYWJsZSB0cmFja2VyID0gbmV3IEZha2VkVHJhY2tpbmdWYXJpYWJsZShpbm5lckxvY2FsLCBh
bGxvY2F0aW9uKTsKKwkJCQkJdHJhY2tlci5nbG9iYWxDbG9zaW5nU3RhdGUgPSBQQVNTRURfVE9f
T1VUU0lERTsKKwkJCQkJZmxvd0luZm8ubWFya0FzRGVmaW5pdGVseU5vbk51bGwodHJhY2tlci5i
aW5kaW5nKTsgLy8gYXNzdW1lIHdlJ3JlIG5vdCByZXNwb25zaWJsZSBmb3IgcGFyYW1ldGVyIHZh
bHVlCisJCQkJCXJldHVybiB0cmFja2VyOworCQkJCX0KKwkJCX0KKwkJfSBlbHNlIGlmIChhcmcg
aW5zdGFuY2VvZiBBbGxvY2F0aW9uRXhwcmVzc2lvbiAmJiBhcmcucmVzb2x2ZWRUeXBlIGluc3Rh
bmNlb2YgUmVmZXJlbmNlQmluZGluZykgeworCQkJLy8gbmVzdGVkIGFsbG9jYXRpb24KKwkJCXJl
dHVybiAoKEFsbG9jYXRpb25FeHByZXNzaW9uKWFyZykuY2xvc2VUcmFja2VyOwogCQl9CiAJCXJl
dHVybiBudWxsOwogCX0KIAogCS8qKiAKIAkgKiBDaGVjayBpZiB0aGUgcmhzIG9mIGFuIGFzc2ln
bm1lbnQgb3IgbG9jYWwgZGVjbGFyYXRpb24gaXMgYW4gKEF1dG8pQ2xvc2VhYmxlLgotCSAqIElm
IHNvIGNyZWF0ZSBvciByZS11c2UgYSB0cmFja2luZyB2YXJpYWJsZSwgYW5kIHdpcmUgYW5kIGlu
aXRpYWxpemUgZXZlcnl0aGluZy4gCisJICogSWYgc28gY3JlYXRlIG9yIHJlLXVzZSBhIHRyYWNr
aW5nIHZhcmlhYmxlLCBhbmQgd2lyZSBhbmQgaW5pdGlhbGl6ZSBldmVyeXRoaW5nLgorCSAqIEBw
YXJhbSB1cHN0cmVhbUluZm8gaW5mbyB3aXRob3V0IGFuYWx5c2lzIG9mIHRoZSByaHMsIHVzZSB0
aGlzIHRvIGRldGVybWluZSB0aGUgc3RhdHVzIG9mIGEgcmVzb3VyY2UgYmVpbmcgZGlzY29ubmVj
dGVkCisJICogQHBhcmFtIGZsb3dJbmZvIGluZm8gd2l0aCBhbmFseXNpcyBvZiB0aGUgcmhzLCB1
c2UgdGhpcyBmb3IgcmVjb3JkaW5nIHJlc291cmNlIHN0YXR1cyBiZWNhdXNlIHRoaXMgd2lsbCBi
ZSBwYXNzZWQgZG93bnN0cmVhbQorCSAqIEBwYXJhbSBsb2NhdGlvbiB3aGVyZSB0byByZXBvcnQg
d2Fybmlncy9lcnJvcnMgYWdhaW5zdAorCSAqIEBwYXJhbSByaHMgdGhlIHJpZ2h0IGhhbmQgc2lk
ZSBvZiB0aGUgYXNzaWdubWVudCwgdGhpcyBleHByZXNzaW9uIGlzIHRvIGJlIGFuYWx5emVkLgor
CSAqCQkJVGhlIGNhbGxlciBoYXMgYWxyZWFkeSBjaGVja2VkIHRoYXQgdGhlIHJocyBpcyBlaXRo
ZXIgb2YgYSBjbG9zZWFibGUgdHlwZSBvciBudWxsLgorCSAqIEBwYXJhbSBsb2NhbCB0aGUgbG9j
YWwgdmFyaWFibGUgaW50byB3aGljaCB0aGUgcmhzIGlzIGJlaW5nIGFzc2lnbmVkCiAJICovCi0J
cHVibGljIHN0YXRpYyB2b2lkIGhhbmRsZVJlc291cmNlQXNzaWdubWVudChGbG93SW5mbyBmbG93
SW5mbywgU3RhdGVtZW50IGxvY2F0aW9uLCBFeHByZXNzaW9uIHJocywgTG9jYWxWYXJpYWJsZUJp
bmRpbmcgbG9jYWwsCi0JCQkJTG9jYWxWYXJpYWJsZUJpbmRpbmcgcHJldmlvdXNUcmFja2VyQmlu
ZGluZykgCisJcHVibGljIHN0YXRpYyB2b2lkIGhhbmRsZVJlc291cmNlQXNzaWdubWVudChGbG93
SW5mbyB1cHN0cmVhbUluZm8sIEZsb3dJbmZvIGZsb3dJbmZvLCBBU1ROb2RlIGxvY2F0aW9uLCBF
eHByZXNzaW9uIHJocywgTG9jYWxWYXJpYWJsZUJpbmRpbmcgbG9jYWwpCiAJewotCQlpZiAoaXNB
dXRvQ2xvc2VhYmxlKHJocy5yZXNvbHZlZFR5cGUpKSB7CisJCS8vIGRvZXMgdGhlIExIUyAobG9j
YWwpIGFscmVhZHkgaGF2ZSBhIHRyYWNrZXIsIGluZGljYXRpbmcgd2UgbWF5IGxlYWsgYSByZXNv
dXJjZSBieSB0aGUgYXNzaWdubWVudD8KKwkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlIHByZXZpb3Vz
VHJhY2tlciA9IG51bGw7CisJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSBkaXNjb25uZWN0ZWRUcmFj
a2VyID0gbnVsbDsKKwkJaWYgKGxvY2FsLmNsb3NlVHJhY2tlciAhPSBudWxsKSB7CisJCQkvLyBh
c3NpZ25pbmcgdG8gYSB2YXJpYWJsZSBhbHJlYWR5IGhvbGRpbmcgYW4gQXV0b0Nsb3NlYWJsZSwg
aGFzIGl0IGJlZW4gY2xvc2VkIGJlZm9yZT8KKwkJCXByZXZpb3VzVHJhY2tlciA9IGxvY2FsLmNs
b3NlVHJhY2tlcjsKKwkJCWludCBzdGF0dXMgPSB1cHN0cmVhbUluZm8ubnVsbFN0YXR1cyhsb2Nh
bCk7CisJCQlpZiAoc3RhdHVzICE9IEZsb3dJbmZvLk5VTEwgJiYgc3RhdHVzICE9IEZsb3dJbmZv
LlVOS05PV04pIC8vIG9ubHkgaWYgcHJldmlvdXMgdmFsdWUgbWF5IGJlIHJlbGV2YW50CisJCQkJ
ZGlzY29ubmVjdGVkVHJhY2tlciA9IHByZXZpb3VzVHJhY2tlcjsgLy8gcmVwb3J0IGVycm9yIGJl
bG93LCB1bmxlc3Mgd2UgaGF2ZSBhIHNlbGYtd3JhcCBhc3NpZ25tZW50CisJCX0KKworCQlpZiAo
cmhzLnJlc29sdmVkVHlwZSAhPSBUeXBlQmluZGluZy5OVUxMKSB7CiAJCQkvLyBuZXcgdmFsdWUg
aXMgQXV0b0Nsb3NlYWJsZSwgc3RhcnQgdHJhY2tpbmcsIHBvc3NpYmx5IHJlLXVzaW5nIGV4aXN0
aW5nIHRyYWNrZXIgdmFyOgotCQogCQkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlIHJoc1RyYWNrVmFy
ID0gZ2V0Q2xvc2VUcmFja2luZ1ZhcmlhYmxlKHJocyk7Ci0JCQlpZiAocmhzVHJhY2tWYXIgIT0g
bnVsbCkgewkJCQkJCQkJLy8gMS4gc2hhcmUgdHJhY2tpbmcgdmFyaWFibGUgd2l0aCBSSFM/Ci0J
CQkJbG9jYWwuY2xvc2VUcmFja2VyID0gcmhzVHJhY2tWYXI7Ci0JCQkJLy8ga2VlcCBudWxsLXN0
YXR1cyB1bmNoYW5nZWQgYWNyb3NzIHRoaXMgYXNzaWdubWVudAotCQkJfSBlbHNlIGlmIChwcmV2
aW91c1RyYWNrZXJCaW5kaW5nICE9IG51bGwpIHsJCQkvLyAyLiByZS11c2UgdHJhY2tpbmcgdmFy
aWFibGUgZnJvbSB0aGUgTEhTPwotCQkJCS8vIHJlLWFzc2lnbmluZyBmcm9tIGEgZnJlc2gsIG1h
cmsgYXMgbm90LWNsb3NlZCBhZ2FpbjoKLQkJCQlmbG93SW5mby5tYXJrQXNEZWZpbml0ZWx5TnVs
bChwcmV2aW91c1RyYWNrZXJCaW5kaW5nKTsKKwkJCWlmIChyaHNUcmFja1ZhciAhPSBudWxsKSB7
CQkJCQkJCQkvLyAxLiBpZiBSSFMgaGFzIGEgdHJhY2tpbmcgdmFyaWFibGUuLi4KKwkJCQlpZiAo
bG9jYWwuY2xvc2VUcmFja2VyID09IG51bGwpIHsKKwkJCQkJLy8gbnVsbCBzaG91bGRuJ3Qgb2Nj
dXIgYnV0IGxldCdzIHBsYXkgc2FmZQorCQkJCQlpZiAocmhzVHJhY2tWYXIub3JpZ2luYWxCaW5k
aW5nICE9IG51bGwpCisJCQkJCQlsb2NhbC5jbG9zZVRyYWNrZXIgPSByaHNUcmFja1ZhcjsJCQkv
LwkJYS46IGxldCBmcmVzaCBMSFMgc2hhcmUgaXQgCisJCQkJfSBlbHNlIHsKKwkJCQkJaWYgKHJo
c1RyYWNrVmFyID09IGRpc2Nvbm5lY3RlZFRyYWNrZXIgJiYgcmhzIGluc3RhbmNlb2YgQWxsb2Nh
dGlvbkV4cHJlc3Npb24pCisJCQkJCQlyZXR1cm47IAkJCQkJCQkJCS8vIAkJYi46IHNlbGYgd3Jh
cHBlcjogcmVzID0gbmV3IFdyYXAocmVzKTsgLT4gZG9uZSEKKwkJCQkJbG9jYWwuY2xvc2VUcmFj
a2VyID0gcmhzVHJhY2tWYXI7CQkJCS8vCQljLjogY29uZmxpY3RpbmcgTEhTIGFuZCBSSFMsIHBy
b2NlZWQgd2l0aCByZWNvcmRFcnJvckxvY2F0aW9uIGJlbG93CisJCQkJfQorCQkJCS8vIGtlZXAg
Y2xvc2Utc3RhdHVzIG9mIFJIUyB1bmNoYW5nZWQgYWNyb3NzIHRoaXMgYXNzaWdubWVudAorCQkJ
fSBlbHNlIGlmIChwcmV2aW91c1RyYWNrZXIgIT0gbnVsbCkgewkJCQkJLy8gMi4gcmUtdXNlIHRy
YWNraW5nIHZhcmlhYmxlIGZyb20gdGhlIExIUz8KKwkJCQkvLyByZS1hc3NpZ25pbmcgZnJvbSBh
IGZyZXNoIHZhbHVlLCBtYXJrIGFzIG5vdC1jbG9zZWQgYWdhaW46CisJCQkJZmxvd0luZm8ubWFy
a0FzRGVmaW5pdGVseU51bGwocHJldmlvdXNUcmFja2VyLmJpbmRpbmcpOworCQkJCWxvY2FsLmNs
b3NlVHJhY2tlciA9IGFuYWx5c2VDbG9zZWFibGVFeHByZXNzaW9uKGZsb3dJbmZvLCBsb2NhbCwg
bG9jYXRpb24sIHJocywgcHJldmlvdXNUcmFja2VyKTsKIAkJCX0gZWxzZSB7CQkJCQkJCQkJCQkJ
Ly8gMy4gbm8gcmUtdXNlLCBjcmVhdGUgYSBmcmVzaCB0cmFja2luZyB2YXJpYWJsZToKLQkJCQls
b2NhbC5jbG9zZVRyYWNrZXIgPSBuZXcgRmFrZWRUcmFja2luZ1ZhcmlhYmxlKGxvY2FsLCBsb2Nh
dGlvbik7Ci0JCQkJLy8gYSBmcmVzaCByZXNvdXJjZSwgbWFyayBhcyBub3QtY2xvc2VkOgotCQkJ
CWZsb3dJbmZvLm1hcmtBc0RlZmluaXRlbHlOdWxsKGxvY2FsLmNsb3NlVHJhY2tlci5iaW5kaW5n
KTsKKwkJCQlyaHNUcmFja1ZhciA9IGFuYWx5c2VDbG9zZWFibGVFeHByZXNzaW9uKGZsb3dJbmZv
LCBsb2NhbCwgbG9jYXRpb24sIHJocywgbnVsbCk7CisJCQkJaWYgKHJoc1RyYWNrVmFyICE9IG51
bGwpIHsKKwkJCQkJbG9jYWwuY2xvc2VUcmFja2VyID0gcmhzVHJhY2tWYXI7CisJCQkJCS8vIGEg
ZnJlc2ggcmVzb3VyY2UsIG1hcmsgYXMgbm90LWNsb3NlZDoKKwkJCQkJaWYgKChyaHNUcmFja1Zh
ci5nbG9iYWxDbG9zaW5nU3RhdGUgJiBQQVNTRURfVE9fT1VUU0lERSkgPT0gMCkKKwkJCQkJCWZs
b3dJbmZvLm1hcmtBc0RlZmluaXRlbHlOdWxsKHJoc1RyYWNrVmFyLmJpbmRpbmcpOwogLy8gVE9E
TyhzdGVwaGFuKTogdGhpcyBtaWdodCBiZSB1c2VmdWwsIGJ1dCBJIGNvdWxkIG5vdCBmaW5kIGEg
dGVzdCBjYXNlIGZvciBpdDogCi0vLwkJCQlpZiAoZmxvd0NvbnRleHQuaW5pdHNPbkZpbmFsbHkg
IT0gbnVsbCkKLS8vCQkJCQlmbG93Q29udGV4dC5pbml0c09uRmluYWxseS5tYXJrQXNEZWZpbml0
ZWx5Tm9uTnVsbCh0cmFja2VyQmluZGluZyk7CisvLwkJCQkJaWYgKGZsb3dDb250ZXh0LmluaXRz
T25GaW5hbGx5ICE9IG51bGwpCisvLwkJCQkJCWZsb3dDb250ZXh0LmluaXRzT25GaW5hbGx5Lm1h
cmtBc0RlZmluaXRlbHlOb25OdWxsKHRyYWNrZXJCaW5kaW5nKTsKKwkJCQl9CiAJCQl9CisJCX0K
KworCQlpZiAoZGlzY29ubmVjdGVkVHJhY2tlciAhPSBudWxsKQorCQkJZGlzY29ubmVjdGVkVHJh
Y2tlci5yZWNvcmRFcnJvckxvY2F0aW9uKGxvY2F0aW9uLCB1cHN0cmVhbUluZm8ubnVsbFN0YXR1
cyhkaXNjb25uZWN0ZWRUcmFja2VyLmJpbmRpbmcpKTsKKwl9CisJLyoqCisJICogQW5hbHl6ZSBz
dHJ1Y3R1cmUgb2YgYSBjbG9zZWFibGUgZXhwcmVzc2lvbiwgbWF0Y2hpbmcgKGNoYWluZWQpIHJl
c291cmNlcyBhZ2FpbnN0IG91ciB3aGl0ZSBsaXN0cy4KKwkgKiBTZWUgIEJ1ZyAzNTg5MDMgLSBG
aWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5ncworCSAq
IEBwYXJhbSBmbG93SW5mbyB3aGVyZSB0byByZWNvcmQgY2xvc2Ugc3RhdHVzCisJICogQHBhcmFt
IGxvY2FsIGxvY2FsIHZhcmlhYmxlIHRvIHdoaWNoIHRoZSBjbG9zZWFibGUgaXMgYmVpbmcgYXNz
aWduZWQKKwkgKiBAcGFyYW0gbG9jYXRpb24gd2hlcmUgdG8gZmxhZyBlcnJvcnMvd2FybmluZ3Mg
YWdhaW5zdAorCSAqIEBwYXJhbSBleHByZXNzaW9uIGV4cHJlc3Npb24gdG8gYmUgYW5hbHl6ZWQK
KwkgKiBAcGFyYW0gcHJldmlvdXNUcmFja2VyIHdoZW4gYW5hbHl6aW5nIGEgcmUtYXNzaWdubWVu
dCB3ZSBtYXkgYWxyZWFkeSBoYXZlIGEgdHJhY2tpbmcgdmFyaWFibGUgZm9yIGxvY2FsLAorCSAq
ICAJCXdoaWNoIHdlIHNob3VsZCB0aGVuIHJlLXVzZQorCSAqIEByZXR1cm4gYSB0cmFja2luZyB2
YXJpYWJsZSBhc3NvY2lhdGVkIHdpdGggbG9jYWwgb3IgbnVsbCBpZiBubyBuZWVkIHRvIHRyYWNr
CisJICovCisJcHJpdmF0ZSBzdGF0aWMgRmFrZWRUcmFja2luZ1ZhcmlhYmxlIGFuYWx5c2VDbG9z
ZWFibGVFeHByZXNzaW9uKEZsb3dJbmZvIGZsb3dJbmZvLCBMb2NhbFZhcmlhYmxlQmluZGluZyBs
b2NhbCwgCisJCQkJCQkJCQlBU1ROb2RlIGxvY2F0aW9uLCBFeHByZXNzaW9uIGV4cHJlc3Npb24s
IEZha2VkVHJhY2tpbmdWYXJpYWJsZSBwcmV2aW91c1RyYWNrZXIpIAorCXsKKwkJaWYgKGV4cHJl
c3Npb24gaW5zdGFuY2VvZiBBbGxvY2F0aW9uRXhwcmVzc2lvbikgeworCQkJLy8gYWxsb2NhdGlv
biBleHByZXNzaW9ucyBhbHJlYWR5IGhhdmUgdGhlaXIgdHJhY2tpbmcgdmFyaWFibGVzIGFuYWx5
emVkIGJ5IGFuYWx5c2VDbG9zZWFibGVBbGxvY2F0aW9uKC4uKQorCQkJRmFrZWRUcmFja2luZ1Zh
cmlhYmxlIHRyYWNrZXIgPSAoKEFsbG9jYXRpb25FeHByZXNzaW9uKSBleHByZXNzaW9uKS5jbG9z
ZVRyYWNrZXI7CisJCQlpZiAodHJhY2tlciAhPSBudWxsICYmIHRyYWNrZXIub3JpZ2luYWxCaW5k
aW5nID09IG51bGwpIHsKKwkJCQkvLyB0cmFja2VyIHdpdGhvdXQgb3JpZ2luYWwgYmluZGluZyAo
dW5hc3NpZ25lZCBjbG9zZWFibGUpIHNob3VsZG4ndCByZWFjaCBoZXJlIGJ1dCBsZXQncyBwbGF5
IHNhZmUKKwkJCQlyZXR1cm4gbnVsbDsKKwkJCX0KKwkJCXJldHVybiB0cmFja2VyOworCQl9CisJ
CWlmIChleHByZXNzaW9uLnJlc29sdmVkVHlwZSBpbnN0YW5jZW9mIFJlZmVyZW5jZUJpbmRpbmcp
IHsKKwkJCVJlZmVyZW5jZUJpbmRpbmcgcmVzb3VyY2VUeXBlID0gKFJlZmVyZW5jZUJpbmRpbmcp
IGV4cHJlc3Npb24ucmVzb2x2ZWRUeXBlOworCQkJCisJCQlpZiAoZXhwcmVzc2lvbiBpbnN0YW5j
ZW9mIENhc3RFeHByZXNzaW9uKQorCQkJCWV4cHJlc3Npb24gPSAoKENhc3RFeHByZXNzaW9uKSBl
eHByZXNzaW9uKS5leHByZXNzaW9uOworCQkJCisJCQlpZiAoZXhwcmVzc2lvbiBpbnN0YW5jZW9m
IEFzc2lnbm1lbnQpIHsKKwkJCQlFeHByZXNzaW9uIGlubmVyRXhwcmVzc2lvbiA9ICgoQXNzaWdu
bWVudClleHByZXNzaW9uKS5leHByZXNzaW9uOworCQkJCWlmIChpbm5lckV4cHJlc3Npb24gaW5z
dGFuY2VvZiBBbGxvY2F0aW9uRXhwcmVzc2lvbikgeworCQkJCQkvLyBhbGxvY2F0aW9uIGluc2lk
ZSBhc3NpZ25tZW50IGhhcyBhbHJlYWR5IGJlZW4gYW5hbHl6ZWQgZnVsbHkgCisJCQkJCXJldHVy
biAoKEFsbG9jYXRpb25FeHByZXNzaW9uKSBpbm5lckV4cHJlc3Npb24pLmNsb3NlVHJhY2tlcjsK
KwkJCQl9CisJCQl9IGVsc2UgaWYgKGV4cHJlc3Npb24gaW5zdGFuY2VvZiBNZXNzYWdlU2VuZCAK
KwkJCQkJfHwgZXhwcmVzc2lvbiBpbnN0YW5jZW9mIEZpZWxkUmVmZXJlbmNlIAorCQkJCQl8fCBl
eHByZXNzaW9uIGluc3RhbmNlb2YgUXVhbGlmaWVkTmFtZVJlZmVyZW5jZSAKKwkJCQkJfHwgZXhw
cmVzc2lvbiBpbnN0YW5jZW9mIEFycmF5UmVmZXJlbmNlKSAKKwkJCXsKKwkJCQlGYWtlZFRyYWNr
aW5nVmFyaWFibGUgdHJhY2tlciA9IG5ldyBGYWtlZFRyYWNraW5nVmFyaWFibGUobG9jYWwsIGxv
Y2F0aW9uKTsKKwkJCQl0cmFja2VyLmdsb2JhbENsb3NpbmdTdGF0ZSB8PSBQQVNTRURfVE9fT1VU
U0lERTsKKwkJCQlmbG93SW5mby5tYXJrUG90ZW50aWFsbHlOdWxsQml0KHRyYWNrZXIuYmluZGlu
Zyk7CisJCQkJcmV0dXJuIHRyYWNrZXI7CisJCQl9CisJCQlpZiAocmVzb3VyY2VUeXBlLmhhc1R5
cGVCaXQoVHlwZUlkcy5CaXRSZXNvdXJjZUZyZWVDbG9zZWFibGUpKSB7CisJCQkJLy8gKGEpIHJl
c291cmNlLWZyZWUgY2xvc2VhYmxlOiAtPiBudWxsCisJCQkJcmV0dXJuIG51bGw7CisJCQl9CisJ
CX0KKwkJaWYgKGxvY2FsLmNsb3NlVHJhY2tlciAhPSBudWxsKQorCQkJLy8gKGMpOiBpbm5lciBo
YXMgYWxyZWFkeSBiZWVuIGFuYWx5emVkOiAtPiByZS11c2UgdHJhY2sgdmFyCisJCQlyZXR1cm4g
bG9jYWwuY2xvc2VUcmFja2VyOworCQlyZXR1cm4gbmV3IEZha2VkVHJhY2tpbmdWYXJpYWJsZShs
b2NhbCwgbG9jYXRpb24pOworCX0KKworCXB1YmxpYyBzdGF0aWMgdm9pZCBjbGVhblVwQWZ0ZXJB
c3NpZ25tZW50KEJsb2NrU2NvcGUgY3VycmVudFNjb3BlLCBpbnQgbGhzQml0cywgRXhwcmVzc2lv
biBleHByZXNzaW9uKSB7CisJCS8vIHJlbW92ZSBhbGwgcmVtYWluaW5nIHRyYWNrIHZhcnMgd2l0
aCBubyBvcmlnaW5hbCBiaW5kaW5nCisJCXdoaWxlIChleHByZXNzaW9uIGluc3RhbmNlb2YgQXNz
aWdubWVudCkKKwkJCWV4cHJlc3Npb24gPSAoKEFzc2lnbm1lbnQpIGV4cHJlc3Npb24pLmV4cHJl
c3Npb247CisJCWlmIChleHByZXNzaW9uIGluc3RhbmNlb2YgQWxsb2NhdGlvbkV4cHJlc3Npb24p
IHsKKwkJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSB0cmFja2VyID0gKChBbGxvY2F0aW9uRXhwcmVz
c2lvbikgZXhwcmVzc2lvbikuY2xvc2VUcmFja2VyOworCQkJaWYgKHRyYWNrZXIgIT0gbnVsbCAm
JiB0cmFja2VyLm9yaWdpbmFsQmluZGluZyA9PSBudWxsKSB7CisJCQkJY3VycmVudFNjb3BlLnJl
bW92ZVRyYWNraW5nVmFyKHRyYWNrZXIpOworCQkJCSgoQWxsb2NhdGlvbkV4cHJlc3Npb24pIGV4
cHJlc3Npb24pLmNsb3NlVHJhY2tlciA9IG51bGw7CisJCQl9CisJCX0gZWxzZSB7CisJCQkvLyBh
c3NpZ25tZW50IHBhc3NpbmcgYSBsb2NhbCBpbnRvIGEgZmllbGQ/CisJCQlMb2NhbFZhcmlhYmxl
QmluZGluZyBsb2NhbCA9IGV4cHJlc3Npb24ubG9jYWxWYXJpYWJsZUJpbmRpbmcoKTsKKwkJCWlm
IChsb2NhbCAhPSBudWxsICYmIGxvY2FsLmNsb3NlVHJhY2tlciAhPSBudWxsICYmICgobGhzQml0
cyAmIEJpbmRpbmcuRklFTEQpICE9IDApKQorCQkJCWN1cnJlbnRTY29wZS5yZW1vdmVUcmFja2lu
Z1Zhcihsb2NhbC5jbG9zZVRyYWNrZXIpOwogCQl9CiAJfQogCkBAIC0xNTksNiArMzc4LDc2IEBA
CiAJcHVibGljIHN0YXRpYyBib29sZWFuIGlzQXV0b0Nsb3NlYWJsZShUeXBlQmluZGluZyB0eXBl
QmluZGluZykgewogCQlyZXR1cm4gdHlwZUJpbmRpbmcgaW5zdGFuY2VvZiBSZWZlcmVuY2VCaW5k
aW5nCiAJCQkmJiAoKFJlZmVyZW5jZUJpbmRpbmcpdHlwZUJpbmRpbmcpLmhhc1R5cGVCaXQoVHlw
ZUlkcy5CaXRBdXRvQ2xvc2VhYmxlfFR5cGVJZHMuQml0Q2xvc2VhYmxlKTsKKwl9CisKKwlwdWJs
aWMgaW50IGZpbmRNb3N0U3BlY2lmaWNTdGF0dXMoRmxvd0luZm8gZmxvd0luZm8sIEJsb2NrU2Nv
cGUgY3VycmVudFNjb3BlLCBCbG9ja1Njb3BlIGxvY2F0aW9uU2NvcGUpIHsKKwkJaW50IHN0YXR1
cyA9IEZsb3dJbmZvLlVOS05PV047CisJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSBjdXJyZW50VHJh
Y2tlciA9IHRoaXM7CisJCS8vIGxvb3AgYXMgdG8gY29uc2lkZXIgd3JhcHBlcnMgKHBlciB3aGl0
ZSBsaXN0KSBlbmNhcHN1bGF0aW5nIGFuIGlubmVyIHJlc291cmNlLgorCQl3aGlsZSAoY3VycmVu
dFRyYWNrZXIgIT0gbnVsbCkgeworCQkJTG9jYWxWYXJpYWJsZUJpbmRpbmcgY3VycmVudFZhciA9
IGN1cnJlbnRUcmFja2VyLmJpbmRpbmc7CisJCQlpbnQgY3VycmVudFN0YXR1cyA9IGdldE51bGxT
dGF0dXNBZ2dyZXNzaXZlbHkoY3VycmVudFZhciwgZmxvd0luZm8pOworCQkJaWYgKGxvY2F0aW9u
U2NvcGUgIT0gbnVsbCkgLy8gb25seSBjaGVjayBhdCBtZXRob2QgZXhpdCBwb2ludHMKKwkJCQlj
dXJyZW50U3RhdHVzID0gbWVyZ2VDbG9zZVN0YXR1cyhsb2NhdGlvblNjb3BlLCBjdXJyZW50U3Rh
dHVzLCBjdXJyZW50VmFyLCBjdXJyZW50U2NvcGUpOworCQkJaWYgKGN1cnJlbnRTdGF0dXMgPT0g
Rmxvd0luZm8uTk9OX05VTEwpIHsKKwkJCQlzdGF0dXMgPSBjdXJyZW50U3RhdHVzOworCQkJCWJy
ZWFrOyAvLyBjbG9zZWQgLT4gc3RvcCBzZWFyY2hpbmcKKwkJCX0gZWxzZSBpZiAoc3RhdHVzID09
IEZsb3dJbmZvLk5VTEwgfHwgc3RhdHVzID09IEZsb3dJbmZvLlVOS05PV04pIHsKKwkJCQlzdGF0
dXMgPSBjdXJyZW50U3RhdHVzOyAvLyBpbXByb3ZlZCBhbHRob3VnaCBub3QgeWV0IHNhZmUgLT4g
a2VlcCBzZWFyY2hpbmcgZm9yIGJldHRlcgorCQkJfQorCQkJY3VycmVudFRyYWNrZXIgPSBjdXJy
ZW50VHJhY2tlci5pbm5lclRyYWNrZXI7CisJCX0KKwkJcmV0dXJuIHN0YXR1czsKKwl9CisKKwkv
KioKKwkgKiBHZXQgdGhlIG51bGwgc3RhdHVzIGxvb2tpbmcgZXZlbiBpbnRvIHVucmVhY2hhYmxl
IGZsb3dzCisJICogQHBhcmFtIGxvY2FsCisJICogQHBhcmFtIGZsb3dJbmZvCisJICogQHJldHVy
biBvbmUgb2YgdGhlIGNvbnN0YW50cyBGbG93SW5mby57TlVMTCxQT1RFTlRJQUxMWV9OVUxMLFBP
VEVOVElBTExZX05PTl9OVUxMLE5PTl9OVUxMfS4KKwkgKi8KKwlwcml2YXRlIGludCBnZXROdWxs
U3RhdHVzQWdncmVzc2l2ZWx5KExvY2FsVmFyaWFibGVCaW5kaW5nIGxvY2FsLCBGbG93SW5mbyBm
bG93SW5mbykgeworCQlpbnQgcmVhY2hNb2RlID0gZmxvd0luZm8ucmVhY2hNb2RlKCk7CisJCWlu
dCBzdGF0dXMgPSAwOworCQl0cnkgeworCQkJLy8gdW5yZWFjaGFibGUgZmxvd0luZm8gaXMgdG9v
IHNoeSBpbiByZXBvcnRpbmcgbnVsbC1pc3N1ZXMsIHRlbXBvcmFyaWx5IGZvcmdldCByZWFjaGFi
aWxpdHk6CisJCQlpZiAocmVhY2hNb2RlICE9IEZsb3dJbmZvLlJFQUNIQUJMRSkKKwkJCQlmbG93
SW5mby50YWdCaXRzICY9IH5GbG93SW5mby5VTlJFQUNIQUJMRTsKKwkJCXN0YXR1cyA9IGZsb3dJ
bmZvLm51bGxTdGF0dXMobG9jYWwpOworCQl9IGZpbmFsbHkgeworCQkJLy8gcmVzZXQKKwkJCWZs
b3dJbmZvLnRhZ0JpdHMgfD0gcmVhY2hNb2RlOworCQl9CisJCS8vIGF0IHRoaXMgcG9pbnQgc29t
ZSBjb21iaW5hdGlvbnMgYXJlIG5vdCB1c2VmdWwgc28gZmxhdHRlbiB0byBhIHNpbmdsZSBiaXQ6
CisJCWlmICgoc3RhdHVzICYgRmxvd0luZm8uTlVMTCkgIT0gMCkgeworCQkJaWYgKChzdGF0dXMg
JiAoRmxvd0luZm8uTk9OX05VTEwgfCBGbG93SW5mby5QT1RFTlRJQUxMWV9OT05fTlVMTCkpICE9
IDApCisJCQkJcmV0dXJuIEZsb3dJbmZvLlBPVEVOVElBTExZX05VTEw7IAkvLyBudWxsICsgZG91
YnQgPSBwb3QgbnVsbAorCQkJcmV0dXJuIEZsb3dJbmZvLk5VTEw7CisJCX0gZWxzZSBpZiAoKHN0
YXR1cyAmIEZsb3dJbmZvLk5PTl9OVUxMKSAhPSAwKSB7CisJCQlpZiAoKHN0YXR1cyAmIEZsb3dJ
bmZvLlBPVEVOVElBTExZX05VTEwpICE9IDApCisJCQkJcmV0dXJuIEZsb3dJbmZvLlBPVEVOVElB
TExZX05VTEw7CS8vIG5vbi1udWxsICsgZG91YnQgPSBwb3QgbnVsbAorCQkJcmV0dXJuIEZsb3dJ
bmZvLk5PTl9OVUxMOworCQl9IGVsc2UgaWYgKChzdGF0dXMgJiBGbG93SW5mby5QT1RFTlRJQUxM
WV9OVUxMKSAhPSAwKQorCQkJcmV0dXJuIEZsb3dJbmZvLlBPVEVOVElBTExZX05VTEw7CisJCXJl
dHVybiBzdGF0dXM7CisJfQorCisJcHVibGljIGludCBtZXJnZUNsb3NlU3RhdHVzKEJsb2NrU2Nv
cGUgY3VycmVudFNjb3BlLCBpbnQgc3RhdHVzLCBMb2NhbFZhcmlhYmxlQmluZGluZyBsb2NhbCwg
QmxvY2tTY29wZSBvdXRlclNjb3BlKSB7CisJCS8vIGdldCB0aGUgbW9zdCBzdWl0YWJsZSBudWxs
IHN0YXR1cyByZXByZXNlbnRpbmcgd2hldGhlciByZXNvdXJjZSAnYmluZGluZycgaGFzIGJlZW4g
Y2xvc2VkCisJCS8vIHN0YXJ0IGF0ICdjdXJyZW50U2NvcGUnIGFuZCBwb3RlbnRpYWxseSB0cmF2
ZWwgb3V0IHVudGlsICdvdXRlclNjb3BlJworCQkvLyBhdCBlYWNoIHNjb3BlIGNvbnN1bHQgYW55
IHJlY29yZGVkICdmaW5hbGx5SW5mbycuCisJCWlmIChzdGF0dXMgIT0gRmxvd0luZm8uTk9OX05V
TEwpIHsKKwkJCWlmIChjdXJyZW50U2NvcGUuZmluYWxseUluZm8gIT0gbnVsbCkgeworCQkJCWlu
dCBmaW5hbGx5U3RhdHVzID0gY3VycmVudFNjb3BlLmZpbmFsbHlJbmZvLm51bGxTdGF0dXMobG9j
YWwpOworCQkJCWlmIChmaW5hbGx5U3RhdHVzID09IEZsb3dJbmZvLk5PTl9OVUxMKQorCQkJCQly
ZXR1cm4gZmluYWxseVN0YXR1czsKKwkJCQlpZiAoZmluYWxseVN0YXR1cyAhPSBGbG93SW5mby5O
VUxMKSAvLyBuZWl0aGVyIGlzIE5PTl9OVUxMLCBidXQgbm90IGJvdGggYXJlIE5VTEwgPT4gY2Fs
bCBpdCBQT1RFTlRJQUxMWV9OVUxMCisJCQkJCXN0YXR1cyA9IEZsb3dJbmZvLlBPVEVOVElBTExZ
X05VTEw7CisJCQl9CisJCQlpZiAoY3VycmVudFNjb3BlICE9IG91dGVyU2NvcGUgJiYgY3VycmVu
dFNjb3BlLnBhcmVudCBpbnN0YW5jZW9mIEJsb2NrU2NvcGUpCisJCQkJcmV0dXJuIG1lcmdlQ2xv
c2VTdGF0dXMoKChCbG9ja1Njb3BlKSBjdXJyZW50U2NvcGUucGFyZW50KSwgc3RhdHVzLCBsb2Nh
bCwgb3V0ZXJTY29wZSk7CisJCX0KKwkJcmV0dXJuIHN0YXR1czsKIAl9CiAKIAkvKiogTWFyayB0
aGF0IHRoaXMgcmVzb3VyY2UgaXMgY2xvc2VkIGxvY2FsbHkuICovCkBAIC0xODAsOSArNDY5LDE4
IEBACiAJICogKGFzIGFyZ3VtZW50IHRvIGEgbWV0aG9kL2N0b3IgY2FsbCBvciBhcyBhIHJldHVy
biB2YWx1ZSBmcm9tIHRoZSBjdXJyZW50IG1ldGhvZCksIAogCSAqIGFuZCB0aHVzIHNob3VsZCBi
ZSBjb25zaWRlcmVkIGFzIHBvdGVudGlhbGx5IGNsb3NlZC4KIAkgKi8KLQlwdWJsaWMgc3RhdGlj
IEZsb3dJbmZvIG1hcmtQYXNzZWRUb091dHNpZGUoQmxvY2tTY29wZSBzY29wZSwgRXhwcmVzc2lv
biBleHByZXNzaW9uLCBGbG93SW5mbyBmbG93SW5mbykgeworCXB1YmxpYyBzdGF0aWMgRmxvd0lu
Zm8gbWFya1Bhc3NlZFRvT3V0c2lkZShCbG9ja1Njb3BlIHNjb3BlLCBFeHByZXNzaW9uIGV4cHJl
c3Npb24sIEZsb3dJbmZvIGZsb3dJbmZvLCBUeXBlQmluZGluZyBhbGxvY2F0ZWRUeXBlKSB7CQor
CQlpZiAoKGFsbG9jYXRlZFR5cGUgaW5zdGFuY2VvZiBSZWZlcmVuY2VCaW5kaW5nKSAKKwkJCQkm
JiAoKFJlZmVyZW5jZUJpbmRpbmcpIGFsbG9jYXRlZFR5cGUpLmhhc1R5cGVCaXQoVHlwZUlkcy5C
aXRXcmFwcGVyQ2xvc2VhYmxlKSkKKwkJCXJldHVybiBmbG93SW5mbzsgLy8gd3JhcHBlZCBjbG9z
ZWFibGVzIGFyZSBhbmFseXplZCBzZXBhcmF0ZWx5CisJCQogCQlGYWtlZFRyYWNraW5nVmFyaWFi
bGUgdHJhY2tWYXIgPSBnZXRDbG9zZVRyYWNraW5nVmFyaWFibGUoZXhwcmVzc2lvbik7CiAJCWlm
ICh0cmFja1ZhciAhPSBudWxsKSB7CisJCQlpZiAodHJhY2tWYXIub3JpZ2luYWxCaW5kaW5nID09
IG51bGwpIHsKKwkJCQkvLyBhbiBhbGxvY2F0aW9uIHRoYXQgbmV2ZXIgd2FzIGFzc2lnbmVkIHRv
IGEgbG9jYWwgdmFyaWFibGUgLT4gZHJvcCBpdCBjb21wbGV0ZWx5IGFzIHdlJ3JlIG5vdCByZXNw
b25zaWJsZQorCQkJCXNjb3BlLnJlbW92ZVRyYWNraW5nVmFyKHRyYWNrVmFyKTsKKwkJCQlyZXR1
cm4gZmxvd0luZm87CisJCQl9CiAJCQl0cmFja1Zhci5nbG9iYWxDbG9zaW5nU3RhdGUgfD0gUEFT
U0VEX1RPX09VVFNJREU7CiAJCQlpZiAoc2NvcGUubWV0aG9kU2NvcGUoKSAhPSB0cmFja1Zhci5t
ZXRob2RTY29wZSkKIAkJCQl0cmFja1Zhci5nbG9iYWxDbG9zaW5nU3RhdGUgfD0gQ0xPU0VEX0lO
X05FU1RFRF9NRVRIT0Q7CkBAIC0yMDEsOSArNDk5LDE0IEBACiAJfQogCiAJcHVibGljIGJvb2xl
YW4gcmVwb3J0UmVjb3JkZWRFcnJvcnMoU2NvcGUgc2NvcGUpIHsKLQkJaWYgKHRoaXMuZ2xvYmFs
Q2xvc2luZ1N0YXRlID09IDApIHsKLQkJCXJlcG9ydEVycm9yKHNjb3BlLnByb2JsZW1SZXBvcnRl
cigpLCBudWxsLCBGbG93SW5mby5OVUxMKTsKLQkJCXJldHVybiB0cnVlOworCQlGYWtlZFRyYWNr
aW5nVmFyaWFibGUgY3VycmVudCA9IHRoaXM7CisJCXdoaWxlICgoY3VycmVudC5nbG9iYWxDbG9z
aW5nU3RhdGUgJiBET1VCVF9NQVNLKSA9PSAwKSB7CisJCQljdXJyZW50ID0gY3VycmVudC5pbm5l
clRyYWNrZXI7CisJCQlpZiAoY3VycmVudCA9PSBudWxsKSB7CisJCQkJLy8gbm8gcmVsZXZhbnQg
c3RhdGUgZm91bmQgLT4gcmVwb3J0OgorCQkJCXJlcG9ydEVycm9yKHNjb3BlLnByb2JsZW1SZXBv
cnRlcigpLCBudWxsLCBGbG93SW5mby5OVUxMKTsKKwkJCQlyZXR1cm4gdHJ1ZTsKKwkJCX0KIAkJ
fQogCQlib29sZWFuIGhhc1JlcG9ydGVkID0gZmFsc2U7CiAJCWlmICh0aGlzLnJlY29yZGVkTG9j
YXRpb25zICE9IG51bGwpIHsKQEAgLTIxOCw2ICs1MjEsOCBAQAogCX0KIAkKIAlwdWJsaWMgdm9p
ZCByZXBvcnRFcnJvcihQcm9ibGVtUmVwb3J0ZXIgcHJvYmxlbVJlcG9ydGVyLCBBU1ROb2RlIGxv
Y2F0aW9uLCBpbnQgbnVsbFN0YXR1cykgeworCQlpZiAoKHRoaXMuZ2xvYmFsQ2xvc2luZ1N0YXRl
ICYgV1JBUFBFRCkgIT0gMCkKKwkJCXJldHVybjsKIAkJaWYgKG51bGxTdGF0dXMgPT0gRmxvd0lu
Zm8uTlVMTCkgewogCQkJaWYgKCh0aGlzLmdsb2JhbENsb3NpbmdTdGF0ZSAmIENMT1NFRF9JTl9O
RVNURURfTUVUSE9EKSAhPSAwKQogCQkJCXByb2JsZW1SZXBvcnRlci5wb3RlbnRpYWxseVVuY2xv
c2VkQ2xvc2VhYmxlKHRoaXMsIGxvY2F0aW9uKTsKQEAgLTIyNSw3ICs1MzAsNyBAQAogCQkJCXBy
b2JsZW1SZXBvcnRlci51bmNsb3NlZENsb3NlYWJsZSh0aGlzLCBsb2NhdGlvbik7CiAJCX0gZWxz
ZSBpZiAobnVsbFN0YXR1cyA9PSBGbG93SW5mby5QT1RFTlRJQUxMWV9OVUxMKSB7CiAJCQlwcm9i
bGVtUmVwb3J0ZXIucG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSh0aGlzLCBsb2NhdGlvbik7
Ci0JCX0JCQorCQl9CiAJfQogCiAJcHVibGljIHZvaWQgcmVwb3J0RXhwbGljaXRDbG9zaW5nKFBy
b2JsZW1SZXBvcnRlciBwcm9ibGVtUmVwb3J0ZXIpIHsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3Qv
TG9jYWxEZWNsYXJhdGlvbi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Mb2NhbERlY2xhcmF0aW9uLmphdmEK
aW5kZXggZGFjMDI5Yy4uMDgyZDIwYSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Mb2NhbERlY2xh
cmF0aW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Mb2NhbERlY2xhcmF0aW9uLmphdmEKQEAgLTEs
NSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZl
ZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1h
ZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5z
ZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2
YWlsYWJsZSBhdApAQCAtNzQsMTEgKzc0LDI2IEBACiAJCXRoaXMuaW5pdGlhbGl6YXRpb24uY2hl
Y2tOUEUoY3VycmVudFNjb3BlLCBmbG93Q29udGV4dCwgZmxvd0luZm8pOwogCX0KIAkKKwlGbG93
SW5mbyBwcmVJbml0SW5mbyA9IG51bGw7CisJYm9vbGVhbiBzaG91bGRBbmFseXNlUmVzb3VyY2Ug
PSB0aGlzLmJpbmRpbmcgIT0gbnVsbCAKKwkJCSYmIGZsb3dJbmZvLnJlYWNoTW9kZSgpID09IEZs
b3dJbmZvLlJFQUNIQUJMRSAKKwkJCSYmIEZha2VkVHJhY2tpbmdWYXJpYWJsZS5pc0F1dG9DbG9z
ZWFibGUodGhpcy5pbml0aWFsaXphdGlvbi5yZXNvbHZlZFR5cGUpOworCWlmIChzaG91bGRBbmFs
eXNlUmVzb3VyY2UpIHsKKwkJcHJlSW5pdEluZm8gPSBmbG93SW5mby51bmNvbmRpdGlvbmFsQ29w
eSgpOworCQkvLyBhbmFseXNpcyBvZiByZXNvdXJjZSBsZWFrcyBuZWVkcyBhZGRpdGlvbmFsIGNv
bnRleHQgd2hpbGUgYW5hbHl6aW5nIHRoZSBSSFM6CisJCUZha2VkVHJhY2tpbmdWYXJpYWJsZS5w
cmVDb25uZWN0VHJhY2tlckFjcm9zc0Fzc2lnbm1lbnQodGhpcywgdGhpcy5iaW5kaW5nLCB0aGlz
LmluaXRpYWxpemF0aW9uKTsKKwl9CisKIAlmbG93SW5mbyA9CiAJCXRoaXMuaW5pdGlhbGl6YXRp
b24KIAkJCS5hbmFseXNlQ29kZShjdXJyZW50U2NvcGUsIGZsb3dDb250ZXh0LCBmbG93SW5mbykK
IAkJCS51bmNvbmRpdGlvbmFsSW5pdHMoKTsKLQlGYWtlZFRyYWNraW5nVmFyaWFibGUuaGFuZGxl
UmVzb3VyY2VBc3NpZ25tZW50KGZsb3dJbmZvLCB0aGlzLCB0aGlzLmluaXRpYWxpemF0aW9uLCB0
aGlzLmJpbmRpbmcsIG51bGwpOworCisJaWYgKHNob3VsZEFuYWx5c2VSZXNvdXJjZSkKKwkJRmFr
ZWRUcmFja2luZ1ZhcmlhYmxlLmhhbmRsZVJlc291cmNlQXNzaWdubWVudChwcmVJbml0SW5mbywg
Zmxvd0luZm8sIHRoaXMsIHRoaXMuaW5pdGlhbGl6YXRpb24sIHRoaXMuYmluZGluZyk7CisJZWxz
ZQorCQlGYWtlZFRyYWNraW5nVmFyaWFibGUuY2xlYW5VcEFmdGVyQXNzaWdubWVudChjdXJyZW50
U2NvcGUsIEJpbmRpbmcuTE9DQUwsIHRoaXMuaW5pdGlhbGl6YXRpb24pOworCiAJaW50IG51bGxT
dGF0dXMgPSB0aGlzLmluaXRpYWxpemF0aW9uLm51bGxTdGF0dXMoZmxvd0luZm8pOwogCWlmICgh
Zmxvd0luZm8uaXNEZWZpbml0ZWx5QXNzaWduZWQodGhpcy5iaW5kaW5nKSl7Ly8gZm9yIGxvY2Fs
IHZhcmlhYmxlIGRlYnVnIGF0dHJpYnV0ZXMKIAkJdGhpcy5iaXRzIHw9IEZpcnN0QXNzaWdubWVu
dFRvTG9jYWw7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L01lc3NhZ2VTZW5kLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L01lc3NhZ2VTZW5kLmphdmEKaW5kZXggNDZkNDU0MC4uYmM3ODFmMyAxMDA2NDQKLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2FzdC9NZXNzYWdlU2VuZC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTWVzc2FnZVNl
bmQuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5
cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5
cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwg
cmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJp
YWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNl
IFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0
aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC05Niw5ICs5Niw5IEBACiAJCQlpZiAoKHRoaXMu
YXJndW1lbnRzW2ldLmltcGxpY2l0Q29udmVyc2lvbiAmIFR5cGVJZHMuVU5CT1hJTkcpICE9IDAp
IHsKIAkJCQl0aGlzLmFyZ3VtZW50c1tpXS5jaGVja05QRShjdXJyZW50U2NvcGUsIGZsb3dDb250
ZXh0LCBmbG93SW5mbyk7CiAJCQl9Ci0JCQkvLyBpZiBhcmd1bWVudCBpcyBhbiBBdXRvQ2xvc2Vh
YmxlIGluc2VydCBpbmZvIHRoYXQgaXQgKm1heSogYmUgY2xvc2VkIChieSB0aGUgdGFyZ2V0IG1l
dGhvZCwgaS5lLikKLQkJCWZsb3dJbmZvID0gRmFrZWRUcmFja2luZ1ZhcmlhYmxlLm1hcmtQYXNz
ZWRUb091dHNpZGUoY3VycmVudFNjb3BlLCB0aGlzLmFyZ3VtZW50c1tpXSwgZmxvd0luZm8pOwog
CQkJZmxvd0luZm8gPSB0aGlzLmFyZ3VtZW50c1tpXS5hbmFseXNlQ29kZShjdXJyZW50U2NvcGUs
IGZsb3dDb250ZXh0LCBmbG93SW5mbykudW5jb25kaXRpb25hbEluaXRzKCk7CisJCQkvLyBpZiBh
cmd1bWVudCBpcyBhbiBBdXRvQ2xvc2VhYmxlIGluc2VydCBpbmZvIHRoYXQgaXQgKm1heSogYmUg
Y2xvc2VkIChieSB0aGUgdGFyZ2V0IG1ldGhvZCwgaS5lLikKKwkJCWZsb3dJbmZvID0gRmFrZWRU
cmFja2luZ1ZhcmlhYmxlLm1hcmtQYXNzZWRUb091dHNpZGUoY3VycmVudFNjb3BlLCB0aGlzLmFy
Z3VtZW50c1tpXSwgZmxvd0luZm8sIG51bGwpOwogCQl9CiAJCWFuYWx5c2VBcmd1bWVudHMoY3Vy
cmVudFNjb3BlLCBmbG93Q29udGV4dCwgZmxvd0luZm8sIHRoaXMuYmluZGluZywgdGhpcy5hcmd1
bWVudHMpOwogCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvUXVhbGlmaWVkQWxsb2NhdGlvbkV4
cHJlc3Npb24uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvUXVhbGlmaWVkQWxsb2NhdGlvbkV4cHJlc3Npb24u
amF2YQppbmRleCAzYTJhMGVkLi43MTY5MDMyIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1F1YWxp
ZmllZEFsbG9jYXRpb25FeHByZXNzaW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9RdWFsaWZpZWRB
bGxvY2F0aW9uRXhwcmVzc2lvbi5qYXZhCkBAIC04MSw3ICs4MSw3IEBACiAJCWlmICh0aGlzLmFy
Z3VtZW50cyAhPSBudWxsKSB7CiAJCQlmb3IgKGludCBpID0gMCwgY291bnQgPSB0aGlzLmFyZ3Vt
ZW50cy5sZW5ndGg7IGkgPCBjb3VudDsgaSsrKSB7CiAJCQkJLy8gaWYgYXJndW1lbnQgaXMgYW4g
QXV0b0Nsb3NlYWJsZSBpbnNlcnQgaW5mbyB0aGF0IGl0ICptYXkqIGJlIGNsb3NlZCAoYnkgdGhl
IHRhcmdldCBtZXRob2QsIGkuZS4pCi0JCQkJZmxvd0luZm8gPSBGYWtlZFRyYWNraW5nVmFyaWFi
bGUubWFya1Bhc3NlZFRvT3V0c2lkZShjdXJyZW50U2NvcGUsIHRoaXMuYXJndW1lbnRzW2ldLCBm
bG93SW5mbyk7CisJCQkJZmxvd0luZm8gPSBGYWtlZFRyYWNraW5nVmFyaWFibGUubWFya1Bhc3Nl
ZFRvT3V0c2lkZShjdXJyZW50U2NvcGUsIHRoaXMuYXJndW1lbnRzW2ldLCBmbG93SW5mbywgbnVs
bCk7CiAJCQkJZmxvd0luZm8gPSB0aGlzLmFyZ3VtZW50c1tpXS5hbmFseXNlQ29kZShjdXJyZW50
U2NvcGUsIGZsb3dDb250ZXh0LCBmbG93SW5mbyk7CiAJCQkJaWYgKCh0aGlzLmFyZ3VtZW50c1tp
XS5pbXBsaWNpdENvbnZlcnNpb24gJiBUeXBlSWRzLlVOQk9YSU5HKSAhPSAwKSB7CiAJCQkJCXRo
aXMuYXJndW1lbnRzW2ldLmNoZWNrTlBFKGN1cnJlbnRTY29wZSwgZmxvd0NvbnRleHQsIGZsb3dJ
bmZvKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvU2luZ2xlTmFtZVJlZmVyZW5jZS5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2FzdC9TaW5nbGVOYW1lUmVmZXJlbmNlLmphdmEKaW5kZXggZDYyNWQ1Yi4uNDEzODVj
MSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9TaW5nbGVOYW1lUmVmZXJlbmNlLmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2FzdC9TaW5nbGVOYW1lUmVmZXJlbmNlLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jw
b3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jw
b3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFt
IGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVu
ZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGlj
aCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApkaWZm
IC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2FzdC9UcnlTdGF0ZW1lbnQuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvVHJ5U3Rh
dGVtZW50LmphdmEKaW5kZXggOWZhZTAwOS4uYzYyMzExMyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Fz
dC9UcnlTdGF0ZW1lbnQuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1RyeVN0YXRlbWVudC5qYXZhCkBA
IC0xMzQsNyArMTM0LDcgQEAKIAkJCWlmIChyZXNvdXJjZUJpbmRpbmcuY2xvc2VUcmFja2VyICE9
IG51bGwpIHsKIAkJCQkvLyB0aGlzIHdhcyBmYWxzZSBhbGFybSwgd2UgZG9uJ3QgbmVlZCB0byB0
cmFjayB0aGUgcmVzb3VyY2UKIAkJCQl0aGlzLnRyeUJsb2NrLnNjb3BlLnJlbW92ZVRyYWNraW5n
VmFyKHJlc291cmNlQmluZGluZy5jbG9zZVRyYWNrZXIpOwotCQkJCXJlc291cmNlQmluZGluZy5j
bG9zZVRyYWNrZXIgPSBudWxsOworCQkJCS8vIGtlZXAgdGhlIHRyYWNraW5nIHZhcmlhYmxlIGlu
IHRoZSByZXNvdXJjZUJpbmRpbmcgaW4gb3JkZXIgdG8gcHJldmVudCBjcmVhdGluZyBhIG5ldyBv
bmUgd2hpbGUgYW5hbHl6aW5nIHRoZSB0cnkgYmxvY2sKIAkJCX0KIAkJCVR5cGVCaW5kaW5nIHR5
cGUgPSByZXNvdXJjZUJpbmRpbmcudHlwZTsKIAkJCWlmICh0eXBlICE9IG51bGwgJiYgdHlwZS5p
c1ZhbGlkQmluZGluZygpKSB7CkBAIC0yNzYsNyArMjc2LDcgQEAKIAkJCWlmIChyZXNvdXJjZUJp
bmRpbmcuY2xvc2VUcmFja2VyICE9IG51bGwpIHsKIAkJCQkvLyB0aGlzIHdhcyBmYWxzZSBhbGFy
bSwgd2UgZG9uJ3QgbmVlZCB0byB0cmFjayB0aGUgcmVzb3VyY2UKIAkJCQl0aGlzLnRyeUJsb2Nr
LnNjb3BlLnJlbW92ZVRyYWNraW5nVmFyKHJlc291cmNlQmluZGluZy5jbG9zZVRyYWNrZXIpOwot
CQkJCXJlc291cmNlQmluZGluZy5jbG9zZVRyYWNrZXIgPSBudWxsOworCQkJCS8vIGtlZXAgdGhl
IHRyYWNraW5nIHZhcmlhYmxlIGluIHRoZSByZXNvdXJjZUJpbmRpbmcgaW4gb3JkZXIgdG8gcHJl
dmVudCBjcmVhdGluZyBhIG5ldyBvbmUgd2hpbGUgYW5hbHl6aW5nIHRoZSB0cnkgYmxvY2sKIAkJ
CX0gCiAJCQlUeXBlQmluZGluZyB0eXBlID0gcmVzb3VyY2VCaW5kaW5nLnR5cGU7CiAJCQlpZiAo
dHlwZSAhPSBudWxsICYmIHR5cGUuaXNWYWxpZEJpbmRpbmcoKSkgewpkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2xvb2t1cC9CaW5hcnlUeXBlQmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CaW5hcnlU
eXBlQmluZGluZy5qYXZhCmluZGV4IDkyOTQ3MjYuLmU2NWFjYWUgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9sb29rdXAvQmluYXJ5VHlwZUJpbmRpbmcuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0JpbmFy
eVR5cGVCaW5kaW5nLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJz
LgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJz
LgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55
aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0
aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlz
IGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtMTI3NSw3ICsxMjc1LDkgQEAK
IAkJCXRoaXMuZW52aXJvbm1lbnQubWF5VG9sZXJhdGVNaXNzaW5nVHlwZSA9IHdhc1RvbGVyYXRp
bmdNaXNzaW5nVHlwZVByb2Nlc3NpbmdBbm5vdGF0aW9uczsKIAkJfQogCX0KLQl0aGlzLnR5cGVC
aXRzIHw9IHRoaXMuc3VwZXJjbGFzcy50eXBlQml0czsKKwl0aGlzLnR5cGVCaXRzIHw9ICh0aGlz
LnN1cGVyY2xhc3MudHlwZUJpdHMgJiBUeXBlSWRzLkluaGVyaXRhYmxlQml0cyk7CisJaWYgKCh0
aGlzLnR5cGVCaXRzICYgKFR5cGVJZHMuQml0QXV0b0Nsb3NlYWJsZXxUeXBlSWRzLkJpdENsb3Nl
YWJsZSkpICE9IDApIC8vIGF2b2lkIHRoZSBzaWRlLWVmZmVjdHMgb2YgaGFzVHlwZUJpdCgpISAK
KwkJdGhpcy50eXBlQml0cyB8PSBhcHBseUNsb3NlYWJsZVdoaXRlbGlzdHMoKTsKIAlyZXR1cm4g
dGhpcy5zdXBlcmNsYXNzOwogfQogLy8gTk9URTogc3VwZXJJbnRlcmZhY2VzIG9mIGJpbmFyeSB0
eXBlcyBhcmUgcmVzb2x2ZWQgd2hlbiBuZWVkZWQKQEAgLTEyOTgsNyArMTMwMCw3IEBACiAJCQkJ
dGhpcy5lbnZpcm9ubWVudC5tYXlUb2xlcmF0ZU1pc3NpbmdUeXBlID0gd2FzVG9sZXJhdGluZ01p
c3NpbmdUeXBlUHJvY2Vzc2luZ0Fubm90YXRpb25zOwogCQkJfQkKIAkJfQotCQl0aGlzLnR5cGVC
aXRzIHw9IHRoaXMuc3VwZXJJbnRlcmZhY2VzW2ldLnR5cGVCaXRzOworCQl0aGlzLnR5cGVCaXRz
IHw9ICh0aGlzLnN1cGVySW50ZXJmYWNlc1tpXS50eXBlQml0cyAmIFR5cGVJZHMuSW5oZXJpdGFi
bGVCaXRzKTsKIAl9CiAJdGhpcy50YWdCaXRzICY9IH5UYWdCaXRzLkhhc1VucmVzb2x2ZWRTdXBl
cmludGVyZmFjZXM7CiAJcmV0dXJuIHRoaXMuc3VwZXJJbnRlcmZhY2VzOwpkaWZmIC0tZ2l0IGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9CbG9ja1Njb3BlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Jsb2NrU2NvcGUu
amF2YQppbmRleCBjOTNjOWQ5Li42ZDQ0ZWE2IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Js
b2NrU2NvcGUuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Jsb2NrU2NvcGUuamF2YQpAQCAtMSw1
ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAs
IDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAs
IDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVk
LiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFk
ZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNl
IHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZh
aWxhYmxlIGF0CkBAIC05ODEsNiArOTgxLDEwIEBACiB9CiAvKiogV2hlbiBhcmUgbm8gbG9uZ2Vy
IGludGVyZXN0ZWQgaW4gdGhpcyB0cmFja2luZyB2YXJpYWJsZSAtIHJlbW92ZSBpdC4gKi8KIHB1
YmxpYyB2b2lkIHJlbW92ZVRyYWNraW5nVmFyKEZha2VkVHJhY2tpbmdWYXJpYWJsZSB0cmFja2lu
Z1ZhcmlhYmxlKSB7CisJaWYgKHRyYWNraW5nVmFyaWFibGUuaW5uZXJUcmFja2VyICE9IG51bGwp
IHsKKwkJcmVtb3ZlVHJhY2tpbmdWYXIodHJhY2tpbmdWYXJpYWJsZS5pbm5lclRyYWNrZXIpOwor
CQl0cmFja2luZ1ZhcmlhYmxlLmlubmVyVHJhY2tlciA9IG51bGw7CisJfQogCWlmICh0aGlzLnRy
YWNraW5nVmFyaWFibGVzICE9IG51bGwpCiAJCWlmICh0aGlzLnRyYWNraW5nVmFyaWFibGVzLnJl
bW92ZSh0cmFja2luZ1ZhcmlhYmxlKSkKIAkJCXJldHVybjsKQEAgLTEwMDMsMTAgKzEwMDcsMTAg
QEAKIAkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlIHRyYWNraW5nVmFyID0gKEZha2VkVHJhY2tpbmdW
YXJpYWJsZSkgdGhpcy50cmFja2luZ1ZhcmlhYmxlcy5nZXQoaSk7CiAJCWlmIChsb2NhdGlvbiAh
PSBudWxsICYmIHRyYWNraW5nVmFyLm9yaWdpbmFsQmluZGluZyAhPSBudWxsICYmIGZsb3dJbmZv
LmlzRGVmaW5pdGVseU51bGwodHJhY2tpbmdWYXIub3JpZ2luYWxCaW5kaW5nKSkKIAkJCWNvbnRp
bnVlOyAvLyByZXBvcnRpbmcgYWdhaW5zdCBhIHNwZWNpZmljIGxvY2F0aW9uLCByZXNvdXJjZSBp
cyBudWxsIGF0IHRoaXMgZmxvdywgZG9uJ3QgY29tcGxhaW4KLQkJaW50IHN0YXR1cyA9IGdldE51
bGxTdGF0dXNBZ2dyZXNzaXZlbHkodHJhY2tpbmdWYXIuYmluZGluZywgZmxvd0luZm8pOwotCQkv
LyB0cnkgdG8gaW1wcm92ZSBpbmZvIGlmIGEgY2xvc2UoKSBpbnNpZGUgZmluYWxseSB3YXMgb2Jz
ZXJ2ZWQ6Ci0JCWlmIChsb2NhdGlvblNjb3BlICE9IG51bGwpIC8vIG9ubHkgY2hlY2sgYXQgbWV0
aG9kIGV4aXQgcG9pbnRzCi0JCQlzdGF0dXMgPSBsb2NhdGlvblNjb3BlLm1lcmdlQ2xvc2VTdGF0
dXMoc3RhdHVzLCB0cmFja2luZ1Zhci5iaW5kaW5nLCB0aGlzKTsKKwkJCisJCS8vIGNvbXB1dGUg
dGhlIG1vc3Qgc3BlY2lmaWMgbnVsbCBzdGF0dXMgZm9yIHRoaXMgcmVzb3VyY2UsCisJCWludCBz
dGF0dXMgPSB0cmFja2luZ1Zhci5maW5kTW9zdFNwZWNpZmljU3RhdHVzKGZsb3dJbmZvLCB0aGlz
LCBsb2NhdGlvblNjb3BlKTsKKwkJCiAJCWlmIChzdGF0dXMgPT0gRmxvd0luZm8uTlVMTCkgewog
CQkJLy8gZGVmaW5pdGVseSB1bmNsb3NlZDogaGlnaGVzdCBwcmlvcml0eQogCQkJcmVwb3J0UmVz
b3VyY2VMZWFrKHRyYWNraW5nVmFyLCBsb2NhdGlvbiwgc3RhdHVzKTsKQEAgLTEwMzMsMjQgKzEw
MzcsNiBAQAogCQkJdGhpcy5sb2NhbHNbaV0uY2xvc2VUcmFja2VyID0gbnVsbDsJCQogCQl0aGlz
LnRyYWNraW5nVmFyaWFibGVzID0gbnVsbDsKIAl9Ci19Ci0KLXByaXZhdGUgaW50IG1lcmdlQ2xv
c2VTdGF0dXMoaW50IHN0YXR1cywgTG9jYWxWYXJpYWJsZUJpbmRpbmcgYmluZGluZywgQmxvY2tT
Y29wZSBvdXRlclNjb3BlKSB7Ci0JLy8gZ2V0IHRoZSBtb3N0IHN1aXRhYmxlIG51bGwgc3RhdHVz
IHJlcHJlc2VudGluZyB3aGV0aGVyIHJlc291cmNlICdiaW5kaW5nJyBoYXMgYmVlbiBjbG9zZWQK
LQkvLyBzdGFydCBhdCB0aGlzIHNjb3BlIGFuZCBwb3RlbnRpYWxseSB0cmF2ZWwgb3V0IHVudGls
ICdvdXRlclNjb3BlJwotCS8vIGF0IGVhY2ggc2NvcGUgY29uc3VsdCBhbnkgcmVjb3JkZWQgJ2Zp
bmFsbHlJbmZvJy4KLQlpZiAoc3RhdHVzICE9IEZsb3dJbmZvLk5PTl9OVUxMKSB7Ci0JCWlmICh0
aGlzLmZpbmFsbHlJbmZvICE9IG51bGwpIHsKLQkJCWludCBmaW5hbGx5U3RhdHVzID0gdGhpcy5m
aW5hbGx5SW5mby5udWxsU3RhdHVzKGJpbmRpbmcpOwotCQkJaWYgKGZpbmFsbHlTdGF0dXMgPT0g
Rmxvd0luZm8uTk9OX05VTEwpCi0JCQkJcmV0dXJuIGZpbmFsbHlTdGF0dXM7Ci0JCQlpZiAoZmlu
YWxseVN0YXR1cyAhPSBGbG93SW5mby5OVUxMKSAvLyBuZWl0aGVyIGlzIE5PTl9OVUxMLCBidXQg
bm90IGJvdGggYXJlIE5VTEwgPT4gY2FsbCBpdCBQT1RFTlRJQUxMWV9OVUxMCi0JCQkJc3RhdHVz
ID0gRmxvd0luZm8uUE9URU5USUFMTFlfTlVMTDsKLQkJfQotCQlpZiAodGhpcyAhPSBvdXRlclNj
b3BlICYmIHRoaXMucGFyZW50IGluc3RhbmNlb2YgQmxvY2tTY29wZSkKLQkJCXJldHVybiAoKEJs
b2NrU2NvcGUpIHRoaXMucGFyZW50KS5tZXJnZUNsb3NlU3RhdHVzKHN0YXR1cywgYmluZGluZywg
b3V0ZXJTY29wZSk7Ci0JfQotCXJldHVybiBzdGF0dXM7CiB9CiAKIHByaXZhdGUgdm9pZCByZXBv
cnRSZXNvdXJjZUxlYWsoRmFrZWRUcmFja2luZ1ZhcmlhYmxlIHRyYWNraW5nVmFyLCBBU1ROb2Rl
IGxvY2F0aW9uLCBpbnQgbnVsbFN0YXR1cykgewpAQCAtMTA4Myw2ICsxMDY5LDggQEAKIAlpZiAo
dGhpcy50cmFja2luZ1ZhcmlhYmxlcyAhPSBudWxsKSB7CiAJCWZvciAoaW50IGk9MDsgaTx0aGlz
LnRyYWNraW5nVmFyaWFibGVzLnNpemUoKTsgaSsrKSB7CiAJCQlGYWtlZFRyYWNraW5nVmFyaWFi
bGUgdHJhY2tpbmdWYXIgPSAoRmFrZWRUcmFja2luZ1ZhcmlhYmxlKSB0aGlzLnRyYWNraW5nVmFy
aWFibGVzLmdldChpKTsKKwkJCWlmICh0cmFja2luZ1Zhci5vcmlnaW5hbEJpbmRpbmcgPT0gbnVs
bCkKKwkJCQljb250aW51ZTsKIAkJCWlmICggICB0aGVuRmxvd0luZm8uaXNEZWZpbml0ZWx5Tm9u
TnVsbCh0cmFja2luZ1Zhci5iaW5kaW5nKQkJCS8vIGNsb3NlZCBpbiB0aGVuIGJyYW5jaAogCQkJ
CSYmIGVsc2VGbG93SW5mby5pc0RlZmluaXRlbHlOdWxsKHRyYWNraW5nVmFyLm9yaWdpbmFsQmlu
ZGluZykpCQkvLyBudWxsIGluIGVsc2UgYnJhbmNoCiAJCQl7CkBAIC0xMDk3LDM3ICsxMDg1LDUg
QEAKIAl9CiAJaWYgKHRoaXMucGFyZW50IGluc3RhbmNlb2YgQmxvY2tTY29wZSkKIAkJKChCbG9j
a1Njb3BlKSB0aGlzLnBhcmVudCkuY29ycmVsYXRlVHJhY2tpbmdWYXJzSWZFbHNlKHRoZW5GbG93
SW5mbywgZWxzZUZsb3dJbmZvKTsKLX0KLQotLyoqCi0gKiBHZXQgdGhlIG51bGwgc3RhdHVzIGxv
b2tpbmcgZXZlbiBpbnRvIHVucmVhY2hhYmxlIGZsb3dzCi0gKiBAcGFyYW0gbG9jYWwKLSAqIEBw
YXJhbSBmbG93SW5mbwotICogQHJldHVybiBvbmUgb2YgdGhlIGNvbnN0YW50cyBGbG93SW5mby57
TlVMTCxQT1RFTlRJQUxMWV9OVUxMLFBPVEVOVElBTExZX05PTl9OVUxMLE5PTl9OVUxMfS4KLSAq
LwotcHJpdmF0ZSBpbnQgZ2V0TnVsbFN0YXR1c0FnZ3Jlc3NpdmVseShMb2NhbFZhcmlhYmxlQmlu
ZGluZyBsb2NhbCwgRmxvd0luZm8gZmxvd0luZm8pIHsKLQlpbnQgcmVhY2hNb2RlID0gZmxvd0lu
Zm8ucmVhY2hNb2RlKCk7Ci0JaW50IHN0YXR1cyA9IDA7Ci0JdHJ5IHsKLQkJLy8gdW5yZWFjaGFi
bGUgZmxvd0luZm8gaXMgdG9vIHNoeSBpbiByZXBvcnRpbmcgbnVsbC1pc3N1ZXMsIHRlbXBvcmFy
aWx5IGZvcmdldCByZWFjaGFiaWxpdHk6Ci0JCWlmIChyZWFjaE1vZGUgIT0gRmxvd0luZm8uUkVB
Q0hBQkxFKQotCQkJZmxvd0luZm8udGFnQml0cyAmPSB+Rmxvd0luZm8uVU5SRUFDSEFCTEU7Ci0J
CXN0YXR1cyA9IGZsb3dJbmZvLm51bGxTdGF0dXMobG9jYWwpOwotCX0gZmluYWxseSB7Ci0JCS8v
IHJlc2V0Ci0JCWZsb3dJbmZvLnRhZ0JpdHMgfD0gcmVhY2hNb2RlOwotCX0KLQkvLyBhdCB0aGlz
IHBvaW50IHNvbWUgY29tYmluYXRpb25zIGFyZSBub3QgdXNlZnVsIHNvIGZsYXR0ZW4gdG8gYSBz
aW5nbGUgYml0OgotCWlmICgoc3RhdHVzICYgRmxvd0luZm8uTlVMTCkgIT0gMCkgewotCQlpZiAo
KHN0YXR1cyAmIChGbG93SW5mby5OT05fTlVMTCB8IEZsb3dJbmZvLlBPVEVOVElBTExZX05PTl9O
VUxMKSkgIT0gMCkKLQkJCXJldHVybiBGbG93SW5mby5QT1RFTlRJQUxMWV9OVUxMOyAJLy8gbnVs
bCArIGRvdWJ0ID0gcG90IG51bGwKLQkJcmV0dXJuIEZsb3dJbmZvLk5VTEw7Ci0JfSBlbHNlIGlm
ICgoc3RhdHVzICYgRmxvd0luZm8uTk9OX05VTEwpICE9IDApIHsKLQkJaWYgKChzdGF0dXMgJiBG
bG93SW5mby5QT1RFTlRJQUxMWV9OVUxMKSAhPSAwKQotCQkJcmV0dXJuIEZsb3dJbmZvLlBPVEVO
VElBTExZX05VTEw7CS8vIG5vbi1udWxsICsgZG91YnQgPSBwb3QgbnVsbAotCQlyZXR1cm4gRmxv
d0luZm8uTk9OX05VTEw7Ci0JfSBlbHNlIGlmICgoc3RhdHVzICYgRmxvd0luZm8uUE9URU5USUFM
TFlfTlVMTCkgIT0gMCkKLQkJcmV0dXJuIEZsb3dJbmZvLlBPVEVOVElBTExZX05VTEw7Ci0JcmV0
dXJuIHN0YXR1czsKIH0KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQ2xhc3NTY29wZS5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2xvb2t1cC9DbGFzc1Njb3BlLmphdmEKaW5kZXggM2ViM2NjYS4uNzk1ODUz
NiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9DbGFzc1Njb3BlLmphdmEKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2xvb2t1cC9DbGFzc1Njb3BlLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQg
b3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQg
b3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNj
b21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJt
cyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmll
cyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtOTA5LDcgKzkwOSwx
MCBAQAogCQkJfSBlbHNlIHsKIAkJCQkvLyBvbmx5IHdhbnQgdG8gcmVhY2ggaGVyZSB3aGVuIG5v
IGVycm9ycyBhcmUgcmVwb3J0ZWQKIAkJCQlzb3VyY2VUeXBlLnN1cGVyY2xhc3MgPSBzdXBlcmNs
YXNzOwotCQkJCXNvdXJjZVR5cGUudHlwZUJpdHMgfD0gc3VwZXJjbGFzcy50eXBlQml0czsKKwkJ
CQlzb3VyY2VUeXBlLnR5cGVCaXRzIHw9IChzdXBlcmNsYXNzLnR5cGVCaXRzICYgVHlwZUlkcy5J
bmhlcml0YWJsZUJpdHMpOworCQkJCS8vIGZ1cnRoZXIgYW5hbHlzaXMgYWdhaW5zdCB3aGl0ZSBs
aXN0cyBmb3IgdGhlIHVubGlrZWx5IGNhc2Ugd2UgYXJlIGNvbXBpbGluZyBqYXZhLmlvLio6CisJ
CQkJaWYgKChzb3VyY2VUeXBlLnR5cGVCaXRzICYgKFR5cGVJZHMuQml0QXV0b0Nsb3NlYWJsZXxU
eXBlSWRzLkJpdENsb3NlYWJsZSkpICE9IDApCisJCQkJCXNvdXJjZVR5cGUudHlwZUJpdHMgfD0g
c291cmNlVHlwZS5hcHBseUNsb3NlYWJsZVdoaXRlbGlzdHMoKTsKIAkJCQlyZXR1cm4gdHJ1ZTsK
IAkJCX0KIAkJfQpAQCAtMTAyNSw3ICsxMDI4LDcgQEAKIAkJCQlub1Byb2JsZW1zICY9IHN1cGVy
SW50ZXJmYWNlUmVmLnJlc29sdmVkVHlwZS5pc1ZhbGlkQmluZGluZygpOwogCQkJfQogCQkJLy8g
b25seSB3YW50IHRvIHJlYWNoIGhlcmUgd2hlbiBubyBlcnJvcnMgYXJlIHJlcG9ydGVkCi0JCQlz
b3VyY2VUeXBlLnR5cGVCaXRzIHw9IHN1cGVySW50ZXJmYWNlLnR5cGVCaXRzOworCQkJc291cmNl
VHlwZS50eXBlQml0cyB8PSAoc3VwZXJJbnRlcmZhY2UudHlwZUJpdHMgJiBUeXBlSWRzLkluaGVy
aXRhYmxlQml0cyk7CiAJCQlpbnRlcmZhY2VCaW5kaW5nc1tjb3VudCsrXSA9IHN1cGVySW50ZXJm
YWNlOwogCQl9CiAJCS8vIGhvbGQgb250byBhbGwgY29ycmVjdGx5IHJlc29sdmVkIHN1cGVyaW50
ZXJmYWNlcwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9SZWZlcmVuY2VCaW5kaW5nLmphdmEg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvbG9va3VwL1JlZmVyZW5jZUJpbmRpbmcuamF2YQppbmRleCA3NWRlODU0Li45MjU4
OGIwIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1JlZmVyZW5jZUJpbmRpbmcuamF2YQorKysg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvbG9va3VwL1JlZmVyZW5jZUJpbmRpbmcuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8q
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENv
cnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJNIENv
cnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dy
YW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUg
dW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdo
aWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBA
IC0xNDY5LDQgKzE0NjksMzYgQEAKIHB1YmxpYyBGaWVsZEJpbmRpbmdbXSB1blJlc29sdmVkRmll
bGRzKCkgewogCXJldHVybiBCaW5kaW5nLk5PX0ZJRUxEUzsKIH0KKworLyoKKyAqIElmIGEgdHlw
ZSAtIGtub3duIHRvIGJlIGEgQ2xvc2VhYmxlIC0gaXMgbWVudGlvbmVkIGluIG9uZSBvZiBvdXIg
d2hpdGUgbGlzdHMKKyAqIGFuc3dlciB0aGUgdHlwZUJpdCBmb3IgdGhlIHdoaXRlIGxpc3QgKEJp
dFdyYXBwZXJDbG9zZWFibGUgb3IgQml0UmVzb3VyY2VGcmVlQ2xvc2VhYmxlKS4KKyAqLworcHJv
dGVjdGVkIGludCBhcHBseUNsb3NlYWJsZVdoaXRlbGlzdHMoKSB7CisJc3dpdGNoICh0aGlzLmNv
bXBvdW5kTmFtZS5sZW5ndGgpIHsKKwkJY2FzZSAzOgorCQkJaWYgKENoYXJPcGVyYXRpb24uZXF1
YWxzKFR5cGVDb25zdGFudHMuSkFWQSwgdGhpcy5jb21wb3VuZE5hbWVbMF0pKSB7CisJCQkJaWYg
KENoYXJPcGVyYXRpb24uZXF1YWxzKFR5cGVDb25zdGFudHMuSU8sIHRoaXMuY29tcG91bmROYW1l
WzFdKSkgeworCQkJCQljaGFyW10gc2ltcGxlTmFtZSA9IHRoaXMuY29tcG91bmROYW1lWzJdOwor
CQkJCQlpbnQgbCA9IFR5cGVDb25zdGFudHMuSkFWQV9JT19XUkFQUEVSX0NMT1NFQUJMRVMubGVu
Z3RoOworCQkJCQlmb3IgKGludCBpID0gMDsgaSA8IGw7IGkrKykgeworCQkJCQkJaWYgKENoYXJP
cGVyYXRpb24uZXF1YWxzKHNpbXBsZU5hbWUsIFR5cGVDb25zdGFudHMuSkFWQV9JT19XUkFQUEVS
X0NMT1NFQUJMRVNbaV0pKQorCQkJCQkJCXJldHVybiBUeXBlSWRzLkJpdFdyYXBwZXJDbG9zZWFi
bGU7CisJCQkJCX0KKwkJCQkJbCA9IFR5cGVDb25zdGFudHMuSkFWQV9JT19SRVNPVVJDRV9GUkVF
X0NMT1NFQUJMRVMubGVuZ3RoOworCQkJCQlmb3IgKGludCBpID0gMDsgaSA8IGw7IGkrKykgewor
CQkJCQkJaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKHNpbXBsZU5hbWUsIFR5cGVDb25zdGFudHMu
SkFWQV9JT19SRVNPVVJDRV9GUkVFX0NMT1NFQUJMRVNbaV0pKQorCQkJCQkJCXJldHVybiBUeXBl
SWRzLkJpdFJlc291cmNlRnJlZUNsb3NlYWJsZTsKKwkJCQkJfQorCQkJCX0KKwkJCX0KKwkJCWJy
ZWFrOworCX0KKwlpbnQgbCA9IFR5cGVDb25zdGFudHMuT1RIRVJfV1JBUFBFUl9DTE9TRUFCTEVT
Lmxlbmd0aDsKKwlmb3IgKGludCBpID0gMDsgaSA8IGw7IGkrKykgeworCQlpZiAoQ2hhck9wZXJh
dGlvbi5lcXVhbHModGhpcy5jb21wb3VuZE5hbWUsIFR5cGVDb25zdGFudHMuT1RIRVJfV1JBUFBF
Ul9DTE9TRUFCTEVTW2ldKSkKKwkJCXJldHVybiBUeXBlSWRzLkJpdFdyYXBwZXJDbG9zZWFibGU7
CisJfQkKKwlyZXR1cm4gMDsKK30KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZUNv
bnN0YW50cy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlQ29uc3RhbnRzLmphdmEKaW5kZXggMGJi
ZWY0Ny4uZjBkMGY5ZiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlQ29uc3RhbnRzLmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlQ29uc3RhbnRzLmphdmEKQEAgLTEsNSArMSw1IEBA
CiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBw
cm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxh
YmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAg
KiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBh
dApAQCAtMTU0LDYgKzE1NCwzMyBAQAogCX07CiAJY2hhcltdW10gSkFWQV9MQU5HX0FVVE9DTE9T
RUFCTEUgPSAge0pBVkEsIExBTkcsICJBdXRvQ2xvc2VhYmxlIi50b0NoYXJBcnJheSgpfTsgLy8k
Tk9OLU5MUy0xJAogCWNoYXJbXSBDTE9TRSA9ICJjbG9zZSIudG9DaGFyQXJyYXkoKTsgLy8kTk9O
LU5MUy0xJAorCS8vIHdoaXRlIGxpc3RzIG9mIGNsb3NlYWJsZXM6CisJY2hhcltdW10gSkFWQV9J
T19XUkFQUEVSX0NMT1NFQUJMRVMgPSBuZXcgY2hhcltdW10geworCQkiQnVmZmVyZWRJbnB1dFN0
cmVhbSIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiQnVmZmVyZWRPdXRwdXRTdHJl
YW0iLnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwkJIkJ1ZmZlcmVkUmVhZGVyIi50b0No
YXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJCdWZmZXJlZFdyaXRlciIudG9DaGFyQXJyYXko
KSwgLy8kTk9OLU5MUy0xJAorCQkiSW5wdXRTdHJlYW1SZWFkZXIiLnRvQ2hhckFycmF5KCksIC8v
JE5PTi1OTFMtMSQKKwkJIlByaW50V3JpdGVyIi50b0NoYXJBcnJheSgpLCAgLy8kTk9OLU5MUy0x
JAorCQkiTGluZU51bWJlclJlYWRlciIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQki
RGF0YUlucHV0U3RyZWFtIi50b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJEYXRhT3V0
cHV0U3RyZWFtIi50b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJPYmplY3RJbnB1dFN0
cmVhbSIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiT2JqZWN0T3V0cHV0U3RyZWFt
Ii50b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJGaWx0ZXJJbnB1dFN0cmVhbSIudG9D
aGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiRmlsdGVyT3V0cHV0U3RyZWFtIi50b0NoYXJB
cnJheSgpLCAvLyROT04tTkxTLTEkCisJfTsKKwljaGFyW11bXVtdIE9USEVSX1dSQVBQRVJfQ0xP
U0VBQkxFUyA9IG5ldyBjaGFyW11bXVtdIHsgLy8gTk9URTogaWYgdGhpcyBsaXN0IHNob3VsZCBl
dmVyIGdyb3cgbGFyZ2Ugd2Ugc2hvdWxkIHRoaW5rIG9mIHNtYXJ0ZXIgZGF0YSBzdHJ1Y3R1cmUK
KwkJe0pBVkEsIFVUSUwsICJ6aXAiLnRvQ2hhckFycmF5KCksICJJbmZsYXRlcklucHV0U3RyZWFt
Ii50b0NoYXJBcnJheSgpfSwJIC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCX07CisJY2hh
cltdW10gSkFWQV9JT19SRVNPVVJDRV9GUkVFX0NMT1NFQUJMRVMgPSBuZXcgY2hhcltdW10gewkJ
CQorCQkiU3RyaW5nUmVhZGVyIi50b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJTdHJp
bmdXcml0ZXIiLnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwkJIkJ5dGVBcnJheUlucHV0
U3RyZWFtIi50b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJCeXRlQXJyYXlPdXRwdXRT
dHJlYW0iLnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwkJIkNoYXJBcnJheVJlYWRlciIu
dG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiQ2hhckFycmF5V3JpdGVyIi50b0NoYXJB
cnJheSgpLCAvLyROT04tTkxTLTEkCisJfTsKIAogCS8vIENvbnN0cmFpbnRzIGZvciBnZW5lcmlj
IHR5cGUgYXJndW1lbnQgaW5mZXJlbmNlCiAJaW50IENPTlNUUkFJTlRfRVFVQUwgPSAwOwkJLy8g
QWN0dWFsID0gRm9ybWFsCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVJZHMuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9sb29rdXAvVHlwZUlkcy5qYXZhCmluZGV4IDdmZmY0MzQuLmQ2ZWM5NDUgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9sb29rdXAvVHlwZUlkcy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlw
ZUlkcy5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENv
cHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENv
cHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFs
bCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRl
cmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlw
c2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmli
dXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTIwNyw0ICsyMDcsMTkgQEAKIAkgKiBAc2Vl
IFJlZmVyZW5jZUJpbmRpbmcjaGFzVHlwZUJpdChpbnQpCiAJICovCiAJZmluYWwgaW50IEJpdENs
b3NlYWJsZSA9IDI7CisJLyoqCisJICogQml0IGZvciBtZW1iZXJzIG9mIGEgd2hpdGUgbGlzdDoK
KwkgKiBTdWJ0eXBlcyBvZiBDbG9zZWFibGUgdGhhdCB3cmFwIGFub3RoZXIgcmVzb3VyY2Ugd2l0
aG91dCBkaXJlY3RseSBob2xkaW5nIGFueSBPUyByZXNvdXJjZXMuIAorCSAqLworCWZpbmFsIGlu
dCBCaXRXcmFwcGVyQ2xvc2VhYmxlID0gNDsKKwkvKioKKwkgKiBCaXQgZm9yIG1lbWJlcnMgb2Yg
YSB3aGl0ZSBsaXN0OgorCSAqIFN1YnR5cGVzIG9mIENsb3NlYWJsZSB0aGF0IGRvIG5vdCBob2xk
IGFuIE9TIHJlc291cmNlIHRoYXQgbmVlZHMgdG8gYmUgcmVsZWFzZWQuCisJICovCisJZmluYWwg
aW50IEJpdFJlc291cmNlRnJlZUNsb3NlYWJsZSA9IDg7CisJCisJLyoqCisJICogU2V0IG9mIHR5
cGUgYml0cyB0aGF0IHNob3VsZCBiZSBpbmhlcml0ZWQgYnkgYW55IHN1YiB0eXBlcy4KKwkgKi8K
KwlmaW5hbCBpbnQgSW5oZXJpdGFibGVCaXRzID0gQml0QXV0b0Nsb3NlYWJsZSB8IEJpdENsb3Nl
YWJsZTsKIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZVZhcmlhYmxlQmluZGluZy5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlVmFyaWFibGVCaW5kaW5nLmphdmEKaW5kZXggOTk1ZjMw
ZS4uYmQ2OThmMyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlVmFyaWFibGVCaW5kaW5n
LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlVmFyaWFibGVCaW5kaW5nLmphdmEKQEAgLTEs
NSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZl
ZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1h
ZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5z
ZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2
YWlsYWJsZSBhdApAQCAtMzE2LDExICszMTYsMTEgQEAKIAkJCS8vIGluaXRpYWxpemUgZnJvbSBi
b3VuZHMKIAkJCXRoaXMudHlwZUJpdHMgPSAwOwogCQkJaWYgKHRoaXMuc3VwZXJjbGFzcyAhPSBu
dWxsICYmIHRoaXMuc3VwZXJjbGFzcy5oYXNUeXBlQml0KH5UeXBlSWRzLkJpdFVuaW5pdGlhbGl6
ZWQpKQotCQkJCXRoaXMudHlwZUJpdHMgfD0gdGhpcy5zdXBlcmNsYXNzLnR5cGVCaXRzOworCQkJ
CXRoaXMudHlwZUJpdHMgfD0gKHRoaXMuc3VwZXJjbGFzcy50eXBlQml0cyAmIFR5cGVJZHMuSW5o
ZXJpdGFibGVCaXRzKTsKIAkJCWlmICh0aGlzLnN1cGVySW50ZXJmYWNlcyAhPSBudWxsKQogCQkJ
CWZvciAoaW50IGkgPSAwLCBsID0gdGhpcy5zdXBlckludGVyZmFjZXMubGVuZ3RoOyBpIDwgbDsg
aSsrKQogCQkJCQlpZiAodGhpcy5zdXBlckludGVyZmFjZXNbaV0uaGFzVHlwZUJpdCh+VHlwZUlk
cy5CaXRVbmluaXRpYWxpemVkKSkKLQkJCQkJCXRoaXMudHlwZUJpdHMgfD0gdGhpcy5zdXBlcklu
dGVyZmFjZXNbaV0udHlwZUJpdHM7CisJCQkJCQl0aGlzLnR5cGVCaXRzIHw9ICh0aGlzLnN1cGVy
SW50ZXJmYWNlc1tpXS50eXBlQml0cyAmIFR5cGVJZHMuSW5oZXJpdGFibGVCaXRzKTsKIAkJfQog
CQlyZXR1cm4gKHRoaXMudHlwZUJpdHMgJiBiaXQpICE9IDA7CiAJfQpkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2xvb2t1cC9XaWxkY2FyZEJpbmRpbmcuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvV2lsZGNhcmRC
aW5kaW5nLmphdmEKaW5kZXggMDFmMzY5ZS4uYjg4NzE5NiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xv
b2t1cC9XaWxkY2FyZEJpbmRpbmcuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1dpbGRjYXJkQmlu
ZGluZy5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENv
cHlyaWdodCAoYykgMjAwNSwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENv
cHlyaWdodCAoYykgMjAwNSwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFs
bCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRl
cmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlw
c2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmli
dXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTQyOSwxMSArNDI5LDExIEBACiAJCQkvLyBp
bml0aWFsaXplIGZyb20gdXBwZXIgYm91bmRzCiAJCQl0aGlzLnR5cGVCaXRzID0gMDsKIAkJCWlm
ICh0aGlzLnN1cGVyY2xhc3MgIT0gbnVsbCAmJiB0aGlzLnN1cGVyY2xhc3MuaGFzVHlwZUJpdCh+
VHlwZUlkcy5CaXRVbmluaXRpYWxpemVkKSkKLQkJCQl0aGlzLnR5cGVCaXRzIHw9IHRoaXMuc3Vw
ZXJjbGFzcy50eXBlQml0czsKKwkJCQl0aGlzLnR5cGVCaXRzIHw9ICh0aGlzLnN1cGVyY2xhc3Mu
dHlwZUJpdHMgJiBUeXBlSWRzLkluaGVyaXRhYmxlQml0cyk7CiAJCQlpZiAodGhpcy5zdXBlcklu
dGVyZmFjZXMgIT0gbnVsbCkKIAkJCQlmb3IgKGludCBpID0gMCwgbCA9IHRoaXMuc3VwZXJJbnRl
cmZhY2VzLmxlbmd0aDsgaSA8IGw7IGkrKykKIAkJCQkJaWYgKHRoaXMuc3VwZXJJbnRlcmZhY2Vz
W2ldLmhhc1R5cGVCaXQoflR5cGVJZHMuQml0VW5pbml0aWFsaXplZCkpCi0JCQkJCQl0aGlzLnR5
cGVCaXRzIHw9IHRoaXMuc3VwZXJJbnRlcmZhY2VzW2ldLnR5cGVCaXRzOworCQkJCQkJdGhpcy50
eXBlQml0cyB8PSAodGhpcy5zdXBlckludGVyZmFjZXNbaV0udHlwZUJpdHMgJiBUeXBlSWRzLklu
aGVyaXRhYmxlQml0cyk7CiAJCX0KIAkJcmV0dXJuICh0aGlzLnR5cGVCaXRzICYgYml0KSAhPSAw
OwogCX0K
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>209179</attachid>
            <date>2012-01-08 16:52:00 -0500</date>
            <delta_ts>2012-01-09 17:15:03 -0500</delta_ts>
            <desc>Tests &amp; Fix v0.9</desc>
            <filename>Bug_358903_v0.9.patch</filename>
            <type>text/plain</type>
            <size>96709</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1RyeVdpdGhSZXNvdXJj
ZXNTdGF0ZW1lbnRUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxl
ci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9UcnlX
aXRoUmVzb3VyY2VzU3RhdGVtZW50VGVzdC5qYXZhCmluZGV4IGYyMWE1N2YuLjk2NjAxMjUgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1RyeVdpdGhSZXNvdXJjZXNT
dGF0ZW1lbnRUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGls
ZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vVHJ5
V2l0aFJlc291cmNlc1N0YXRlbWVudFRlc3QuamF2YQpAQCAtMTEsMTEgKzExLDIxIEBACiAgKiAg
ICAgCQkJCQkJCWJ1ZyAzNTg4MjcgLSBbMS43XSBleGNlcHRpb24gYW5hbHlzaXMgZm9yIHQtdy1y
IHNwb2lscyBudWxsIGFuYWx5c2lzCiAgKiAgICAgCQkJCQkJCWJ1ZyAzNDkzMjYgLSBbMS43XSBu
ZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNvdXJjZXMKICAqICAgICAJCQkJCQkJ
YnVnIDM1OTMzNCAtIEFuYWx5c2lzIGZvciByZXNvdXJjZSBsZWFrIHdhcm5pbmdzIGRvZXMgbm90
IGNvbnNpZGVyIGV4Y2VwdGlvbnMgYXMgbWV0aG9kIGV4aXQgcG9pbnRzCisgKgkJCQkJCQkJYnVn
IDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdh
cm5pbmdzCisgKgkJCQkJCQkJYnVnIDM2MDkwOCAtIEF2b2lkIHJlc291cmNlIGxlYWsgd2Fybmlu
ZyB3aGVuIHRoZSB1bmRlcmx5aW5nL2NoYWluZWQgcmVzb3VyY2UgaXMgY2xvc2VkIGV4cGxpY2l0
bHkKKyAqCQkJCQkJCQlidWcgMzYxMDczIC0gQXZvaWQgcmVzb3VyY2UgbGVhayB3YXJuaW5nIHdo
ZW4gdGhlIHRvcCBsZXZlbCByZXNvdXJjZSBpcyBjbG9zZWQgZXhwbGljaXRseQorICoJCQkJCQkJ
CWJ1ZyAzNjIzMzEgLSBSZXNvdXJjZSBsZWFrIG5vdCBkZXRlY3RlZCB3aGVuIGNsb3NlYWJsZSBu
b3QgYXNzaWduZWQgdG8gdmFyaWFibGUKKyAqCQkJCQkJCQlidWcgMzYyMzMyIC0gT25seSByZXBv
cnQgcG90ZW50aWFsIGxlYWsgd2hlbiBjbG9zZWFibGUgbm90IGNyZWF0ZWQgaW4gdGhlIGxvY2Fs
IHNjb3BlCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMuY29tcGlsZXIucmVncmVzc2lvbjsKIAoraW1wb3J0IGphdmEuaW8uSU9FeGNl
cHRpb247CitpbXBvcnQgamF2YS5uZXQuVVJMOwogaW1wb3J0IGphdmEudXRpbC5NYXA7CiAKK2lt
cG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuRmlsZUxvY2F0b3I7CitpbXBvcnQgb3JnLmVj
bGlwc2UuY29yZS5ydW50aW1lLlBhdGg7CitpbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1l
LlBsYXRmb3JtOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLkphdmFDb3JlOwogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5pbXBsLkNvbXBpbGVyT3B0aW9uczsK
IApAQCAtMjMsNyArMzMsNyBAQAogcHVibGljIGNsYXNzIFRyeVdpdGhSZXNvdXJjZXNTdGF0ZW1l
bnRUZXN0IGV4dGVuZHMgQWJzdHJhY3RSZWdyZXNzaW9uVGVzdCB7CiAKIHN0YXRpYyB7Ci0vLwlU
RVNUU19OQU1FUyA9IG5ldyBTdHJpbmdbXSB7ICJ0ZXN0MDU2dGhyb3cifTsKKy8vCVRFU1RTX05B
TUVTID0gbmV3IFN0cmluZ1tdIHsgInRlc3QwNjFhIn07CiAvLwlURVNUU19OVU1CRVJTID0gbmV3
IGludFtdIHsgNTAgfTsKIC8vCVRFU1RTX1JBTkdFID0gbmV3IGludFtdIHsgMTEsIC0xIH07CiB9
CkBAIC0zNzEzLDExICszNzIzLDEyIEBACiAJCW9wdGlvbnMpOwogfQogLy8gQnVnIDM0OTMyNiAt
IFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNlcworLy8gQnVn
IDM2MjMzMiAtIE9ubHkgcmVwb3J0IHBvdGVudGlhbCBsZWFrIHdoZW4gY2xvc2VhYmxlIG5vdCBj
cmVhdGVkIGluIHRoZSBsb2NhbCBzY29wZQogLy8gb25lIG1ldGhvZCByZXR1cm5zIGFuIEF1dG9D
bGVhc2JsZSwgYSBzZWNvbmQgbWV0aG9kIHVzZXMgdGhpcyBvYmplY3Qgd2l0aG91dCBldmVyIGNs
b3NpbmcgaXQuCiBwdWJsaWMgdm9pZCB0ZXN0MDU2ZSgpIHsKIAlNYXAgb3B0aW9ucyA9IGdldENv
bXBpbGVyT3B0aW9ucygpOwogCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVw
b3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0Jb3B0aW9ucy5w
dXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2Vh
YmxlLCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRp
b25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9w
dGlvbnMuRVJST1IpOwogCXRoaXMucnVuTmVnYXRpdmVUZXN0KAogCQluZXcgU3RyaW5nW10gewog
CQkJIlguamF2YSIsCkBAIC0zNzQ0LDcgKzM3NTUsNyBAQAogCQkiMS4gRVJST1IgaW4gWC5qYXZh
IChhdCBsaW5lIDExKVxuIiArIAogCQkiCUZpbGVSZWFkZXIgcmVhZGVyID0gZ2V0UmVhZGVyKFwi
c29tZWZpbGVcIik7XG4iICsgCiAJCSIJICAgICAgICAgICBeXl5eXl5cbiIgKyAKLQkJIlJlc291
cmNlIGxlYWs6ICdyZWFkZXInIGlzIG5ldmVyIGNsb3NlZFxuIiArIAorCQkiUG90ZW50aWFsIHJl
c291cmNlIGxlYWs6IFwncmVhZGVyXCcgbWF5IG5vdCBiZSBjbG9zZWRcbiIgKyAKIAkJIi0tLS0t
LS0tLS1cbiIsCiAJCW51bGwsCiAJCXRydWUsCkBAIC0zOTY0LDYgKzM5NzUsNDYgQEAKIAkJbnVs
bCwKIAkJdHJ1ZSwKIAkJb3B0aW9ucyk7Cit9CisvLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdh
cm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCisvLyB0aHJlZSBBdXRvQ2xvc2Vh
YmxlcyBpbiBkaWZmZXJlbnQgYmxvY2tzIG9mIHRoZSBzYW1lIG1ldGhvZCAtIHByb2JsZW1zIGln
bm9yZWQKK3B1YmxpYyB2b2lkIHRlc3QwNTZpX2lnbm9yZSgpIHsKKwlNYXAgb3B0aW9ucyA9IGdl
dENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX1VO
Q0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLklHTk9SRSk7CisJb3B0aW9ucy5wdXQo
SmF2YUNvcmUuQ09NUElMRVJfUEJfUE9URU5USUFMTFlfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21w
aWxlck9wdGlvbnMuSUdOT1JFKTsKKwlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9F
WFBMSUNJVExZX0NMT1NFRF9BVVRPQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuSUdOT1JFKTsK
Kwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJ
CQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFk
ZXI7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1Ymxp
YyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICB2b2lkIGZvbyhib29sZWFuIGYxLCBib29sZWFuIGYy
KSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcg
RmlsZShcInNvbWVmaWxlXCIpO1xuIiArCisJCQkiICAgICAgICBpZiAoZjEpIHtcbiIgKworCQkJ
IiAgICAgICAgICAgIEZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUp
OyAvLyBlcnI6IG5vdCBjbG9zZWRcbiIgKworCQkJIiAgICAgICAgICAgIGNoYXJbXSBpbiA9IG5l
dyBjaGFyWzUwXTtcbiIgKworCQkJIiAgICAgICAgICAgIGZpbGVSZWFkZXIucmVhZChpbik7XG4i
ICsKKwkJCSIgICAgICAgICAgICB3aGlsZSAodHJ1ZSkge1xuIiArCisJCQkiICAgICAgICAgICAg
ICAgICBGaWxlUmVhZGVyIGxvb3BSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTsgLy8gZG9u
J3Qgd2FybiwgcHJvcGVybHkgY2xvc2VkXG4iICsKKwkJCSIgICAgICAgICAgICAgICAgIGxvb3BS
ZWFkZXIuY2xvc2UoKTsiICsKKwkJCSIgICAgICAgICAgICAgICAgIGJyZWFrO1xuIiArCisJCQki
ICAgICAgICAgICAgfVxuIiArCisJCQkiICAgICAgICB9IGVsc2Uge1xuIiArCisJCQkiICAgICAg
ICAgICAgRmlsZVJlYWRlciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7IC8vIHdh
cm46IG5vdCBjbG9zZWQgb24gYWxsIHBhdGhzXG4iICsKKwkJCSIgICAgICAgICAgICBpZiAoZjIp
XG4iICsKKwkJCSIgICAgICAgICAgICAgICAgZmlsZVJlYWRlci5jbG9zZSgpO1xuIiArCisJCQki
ICAgICAgICB9XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCQl9LAorCQkiIiwKKwkJ
bnVsbCwKKwkJdHJ1ZSwKKwkJbnVsbCwKKwkJb3B0aW9ucywKKwkJbnVsbCk7CiB9CiAvLyBCdWcg
MzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2Vz
CiAvLyB0aHJlZSBBdXRvQ2xvc2VhYmxlcyBpbiBkaWZmZXJlbnQgYmxvY2tzIG9mIHRoZSBzYW1l
IG1ldGhvZApAQCAtNDM1OCwxMSArNDQwOSwxMiBAQAogCQludWxsLypyZXF1ZXN0b3IqLyk7CiB9
CiAvLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgt
cmVzb3VyY2VzCisvLyBCdWcgMzYyMzMyIC0gT25seSByZXBvcnQgcG90ZW50aWFsIGxlYWsgd2hl
biBjbG9zZWFibGUgbm90IGNyZWF0ZWQgaW4gdGhlIGxvY2FsIHNjb3BlCiAvLyBhIG1ldGhvZCB1
c2VzIGFuIEF1dG9DbG9zZWFibGUgd2l0aG91dCBldmVyIGNsb3NpbmcgaXQsIHR5cGUgZnJvbSBh
IHR5cGUgdmFyaWFibGUKIHB1YmxpYyB2b2lkIHRlc3QwNTZwKCkgewogCU1hcCBvcHRpb25zID0g
Z2V0Q29tcGlsZXJPcHRpb25zKCk7CiAJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElP
Tl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQlvcHRp
b25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRD
bG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5XQVJOSU5HKTsKKwlvcHRpb25zLnB1dChDb21waWxl
ck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBp
bGVyT3B0aW9ucy5FUlJPUik7CiAJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCiAJCW5ldyBTdHJpbmdb
XSB7CiAJCQkiWC5qYXZhIiwKQEAgLTQzODksNyArNDQ0MSw3IEBACiAJCSIxLiBFUlJPUiBpbiBY
LmphdmEgKGF0IGxpbmUgOClcbiIgKyAKIAkJIglUIGZpbGVSZWFkZXIgPSBuZXdSZWFkZXIoZmls
ZSk7XG4iICsgCiAJCSIJICBeXl5eXl5eXl5eXG4iICsgCi0JCSJSZXNvdXJjZSBsZWFrOiAnZmls
ZVJlYWRlcicgaXMgbmV2ZXIgY2xvc2VkXG4iICsKKwkJIlBvdGVudGlhbCByZXNvdXJjZSBsZWFr
OiBcJ2ZpbGVSZWFkZXJcJyBtYXkgbm90IGJlIGNsb3NlZFxuIiArCiAJCSItLS0tLS0tLS0tXG4i
LAogCQludWxsLAogCQl0cnVlLApAQCAtNDQ0NCw3ICs0NDk2LDcgQEAKIAkJb3B0aW9ucyk7CiB9
CiAvLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgt
cmVzb3VyY2VzCi0vLyBjbG9zZWQgaW4gZGVhZCBjb2RlCisvLyBwcm9wZXJseSBjbG9zZWQsIGRl
YWQgY29kZSBpbiBiZXR3ZWVuCiBwdWJsaWMgdm9pZCB0ZXN0MDU2cigpIHsKIAlNYXAgb3B0aW9u
cyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwogCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVS
X1BCX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKQEAgLTUzNTQs
NyArNTQwNiw3MjMgQEAKIAkJIlg6On5YXG4iICsgCiAJCSJ0cnVlIik7CiB9Ci0KKy8vIEJ1ZyAz
NTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJu
aW5ncworLy8gQnVnIDM2MDkwOCAtIEF2b2lkIHJlc291cmNlIGxlYWsgd2FybmluZyB3aGVuIHRo
ZSB1bmRlcmx5aW5nL2NoYWluZWQgcmVzb3VyY2UgaXMgY2xvc2VkIGV4cGxpY2l0bHkKKy8vIGEg
cmVzb3VyY2Ugd3JhcHBlciBpcyBub3QgY2xvc2VkIGJ1dCB0aGUgdW5kZXJseWluZyByZXNvdXJj
ZSBpcworcHVibGljIHZvaWQgdGVzdDA2MWEoKSB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxl
ck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVu
Y2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0KENv
bXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwg
Q29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQluZXcgU3Ry
aW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKworCQkJ
ImltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2
YS5pby5GaWxlSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlv
bjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICB2b2lkIGZvbygpIHRo
cm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxl
KFwic29tZWZpbGVcIik7XG4iICsKKwkJCSIgICAgICAgIEZpbGVJbnB1dFN0cmVhbSBmaWxlU3Ry
ZWFtICA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSk7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZl
cmVkSW5wdXRTdHJlYW0gYmlzID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oZmlsZVN0cmVhbSk7
XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gZG91YmxlV3JhcCA9IG5ldyBC
dWZmZXJlZElucHV0U3RyZWFtKGJpcyk7XG4iICsKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJp
bnRsbihiaXMuYXZhaWxhYmxlKCkpO1xuIiArCisJCQkiICAgICAgICBmaWxlU3RyZWFtLmNsb3Nl
KCk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIHZvaWQgaW5saW5lKCkgdGhyb3dzIElP
RXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21l
ZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAgRmlsZUlucHV0U3RyZWFtIGZpbGVTdHJlYW07XG4i
ICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzID0gbmV3IEJ1ZmZlcmVkSW5w
dXRTdHJlYW0oZmlsZVN0cmVhbSA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSkpO1xuIiArCisJ
CQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oYmlzLmF2YWlsYWJsZSgpKTtcbiIgKworCQkJ
IiAgICAgICAgZmlsZVN0cmVhbS5jbG9zZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAg
ICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRp
b24ge1xuIiArCisJCQkiICAgICAgICB0cnkge1xuIiArCisJCQkiICAgICAgICAgICAgbmV3IFgo
KS5mb28oKTtcbiIgKworCQkJIiAgICAgICAgfSBjYXRjaCAoSU9FeGNlcHRpb24gZXgpIHsiICsK
KwkJCSIgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oXCJHb3QgSU8gRXhjZXB0aW9uXCIp
O1xuIiArCisJCQkiICAgICAgICB9XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCQl9
LAorCQkiR290IElPIEV4Y2VwdGlvbiIsCisJCW51bGwsCisJCXRydWUsCisJCW51bGwsCisJCW9w
dGlvbnMsCisJCW51bGwpOworfQorLy8gQnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1
bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCisvLyBhIGNsb3NlYWJsZSB3aXRob3V0
IE9TIHJlc291cmNlIGlzIG5vdCBjbG9zZWQKK3B1YmxpYyB2b2lkIHRlc3QwNjFiKCkgeworCU1h
cCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJP
cHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVS
Uk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlh
bGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJdGhpcy5ydW5D
b25mb3JtVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBq
YXZhLmlvLlN0cmluZ1JlYWRlcjtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9u
O1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICAgIHZvaWQgZm9vKCkgdGhy
b3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgU3RyaW5nUmVhZGVyIHN0cmluZyAg
PSBuZXcgU3RyaW5nUmVhZGVyKFwiY29udGVudFwiKTtcbiIgKworCQkJIiAgICAgICAgU3lzdGVt
Lm91dC5wcmludGxuKHN0cmluZy5yZWFkKCkpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAg
ICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRp
b24ge1xuIiArCisJCQkiICAgICAgICBuZXcgWCgpLmZvbygpO1xuIiArCisJCQkiICAgIH1cbiIg
KworCQkJIn1cbiIKKwkJfSwKKwkJIjk5IiwgLy8gY2hhcmFjdGVyICdjJworCQludWxsLAorCQl0
cnVlLAorCQludWxsLAorCQlvcHRpb25zLAorCQludWxsKTsKK30KKy8vIEJ1ZyAzNTg5MDMgLSBG
aWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5ncworLy8g
YSByZXNvdXJjZSB3cmFwcGVyIGlzIG5vdCBjbG9zZWQgYnV0IHRoZSB1bmRlcmx5aW5nIGNsb3Nl
YWJsZSBpcyByZXNvdXJjZS1mcmVlCitwdWJsaWMgdm9pZCB0ZXN0MDYxYygpIHsKKwlNYXAgb3B0
aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9u
cy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7
CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVu
Y2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVuQ29uZm9y
bVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5p
by5CdWZmZXJlZFJlYWRlcjtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLlN0cmluZ1JlYWRlcjtc
biIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGljIGNs
YXNzIFgge1xuIiArCisJCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIg
KworCQkJIiAgICAgICAgU3RyaW5nUmVhZGVyIGlucHV0ID0gbmV3IFN0cmluZ1JlYWRlcihcImNv
bnRlbnRcIik7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkUmVhZGVyIGJyID0gbmV3IEJ1ZmZl
cmVkUmVhZGVyKGlucHV0KTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRSZWFkZXIgZG91Ymxl
V3JhcCA9IG5ldyBCdWZmZXJlZFJlYWRlcihicik7XG4iICsKKwkJCSIgICAgICAgIFN5c3RlbS5v
dXQucHJpbnRsbihici5yZWFkKCkpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICB2b2lk
IGlubGluZSgpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVk
UmVhZGVyIGJyID0gbmV3IEJ1ZmZlcmVkUmVhZGVyKG5ldyBTdHJpbmdSZWFkZXIoXCJjb250ZW50
XCIpKTtcbiIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGJyLnJlYWQoKSk7XG4i
ICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmlu
Z1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIG5ldyBYKCku
Zm9vKCk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCQl9LAorCQkiOTkiLAorCQlu
dWxsLAorCQl0cnVlLAorCQludWxsLAorCQlvcHRpb25zLAorCQludWxsKTsKK30KKy8vIEJ1ZyAz
NTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJu
aW5ncworLy8gYSByZXNvdXJjZSB3cmFwcGVyIGlzIG5vdCBjbG9zZWQgbmVpdGhlciBpcyB0aGUg
dW5kZXJseWluZyByZXNvdXJjZQorcHVibGljIHZvaWQgdGVzdDA2MWQoKSB7CisJTWFwIG9wdGlv
bnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMu
T1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwor
CW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNs
b3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLldBUk5JTkcpOworCXRoaXMucnVuTmVnYXRp
dmVUZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEu
aW8uRmlsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJlYW07XG4i
ICsKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQg
amF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJ
IiAgICB2b2lkIGZvbygpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZp
bGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKKwkJCSIgICAgICAgIEZpbGVJ
bnB1dFN0cmVhbSBmaWxlU3RyZWFtICA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSk7XG4iICsK
KwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzID0gbmV3IEJ1ZmZlcmVkSW5wdXRT
dHJlYW0oZmlsZVN0cmVhbSk7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0g
ZG91YmxlV3JhcCA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGJpcyk7XG4iICsKKwkJCSIgICAg
ICAgIFN5c3RlbS5vdXQucHJpbnRsbihiaXMuYXZhaWxhYmxlKCkpO1xuIiArCisJCQkiICAgIH1c
biIgKworCQkJIiAgICB2b2lkIGlubGluZSgpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJ
CSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKKwkJCSIg
ICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzMiA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFt
KG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSkpO1xuIiArCisJCQkiICAgICAgICBTeXN0ZW0ub3V0
LnByaW50bG4oYmlzMi5hdmFpbGFibGUoKSk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAg
IHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlv
biB7XG4iICsKKwkJCSIgICAgICAgIHRyeSB7XG4iICsKKwkJCSIgICAgICAgICAgICBuZXcgWCgp
LmZvbygpO1xuIiArCisJCQkiICAgICAgICB9IGNhdGNoIChJT0V4Y2VwdGlvbiBleCkgeyIgKwor
CQkJIiAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcIkdvdCBJTyBFeGNlcHRpb25cIik7
XG4iICsKKwkJCSIgICAgICAgIH1cbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0s
CisJCSItLS0tLS0tLS0tXG4iICsgCisJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTAp
XG4iICsgCisJCSIJQnVmZmVyZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFwID0gbmV3IEJ1ZmZlcmVk
SW5wdXRTdHJlYW0oYmlzKTtcbiIgKyAKKwkJIgkgICAgICAgICAgICAgICAgICAgIF5eXl5eXl5e
Xl5cbiIgKyAKKwkJIlJlc291cmNlIGxlYWs6IFwnZG91YmxlV3JhcFwnIGlzIG5ldmVyIGNsb3Nl
ZFxuIiArIAorCQkiLS0tLS0tLS0tLVxuIiArIAorCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBs
aW5lIDE1KVxuIiArIAorCQkiCUJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzMiA9IG5ldyBCdWZmZXJl
ZElucHV0U3RyZWFtKG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSkpO1xuIiArIAorCQkiCSAgICAg
ICAgICAgICAgICAgICAgXl5eXlxuIiArIAorCQkiUmVzb3VyY2UgbGVhazogXCdiaXMyXCcgaXMg
bmV2ZXIgY2xvc2VkXG4iICsgCisJCSItLS0tLS0tLS0tXG4iLAorCQludWxsLAorCQl0cnVlLAor
CQlvcHRpb25zKTsKK30KKy8vIEJ1ZyAzNTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBv
cnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5ncworLy8gQnVnIDM2MTA3MyAtIEF2b2lkIHJlc291
cmNlIGxlYWsgd2FybmluZyB3aGVuIHRoZSB0b3AgbGV2ZWwgcmVzb3VyY2UgaXMgY2xvc2VkIGV4
cGxpY2l0bHkKKy8vIGEgcmVzb3VyY2Ugd3JhcHBlciBpcyBjbG9zZWQgY2xvc2luZyBhbHNvIHRo
ZSB1bmRlcmx5aW5nIHJlc291cmNlCitwdWJsaWMgdm9pZCB0ZXN0MDYxZSgpIHsKKwlNYXAgb3B0
aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9u
cy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7
CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVu
Y2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVuQ29uZm9y
bVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5p
by5GaWxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uQnVmZmVyZWRJbnB1dFN0cmVhbTtcbiIg
KworCQkJImltcG9ydCBqYXZhLmlvLkZpbGVJbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBq
YXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQki
ICAgIEZpbGVJbnB1dFN0cmVhbSBmaXM7IiArCisJCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElP
RXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21l
ZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAgRmlsZUlucHV0U3RyZWFtIGZpbGVTdHJlYW0gID0g
bmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1
dFN0cmVhbSBiaXMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShmaWxlU3RyZWFtKTtcbiIgKwor
CQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFwID0gbmV3IEJ1ZmZlcmVk
SW5wdXRTdHJlYW0oYmlzKTtcbiIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGJp
cy5hdmFpbGFibGUoKSk7XG4iICsKKwkJCSIgICAgICAgIGJpcy5jbG9zZSgpO1xuIiArCisJCQki
ICAgIH1cbiIgKworCQkJIiAgICB2b2lkIGlubGluZSgpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4i
ICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsK
KwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzMiA9IG5ldyBCdWZmZXJlZElucHV0
U3RyZWFtKGZpcyA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSkpO1xuIiArIC8vIGZpZWxkIGFz
c2lnbm1lbnQKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihiaXMyLmF2YWlsYWJsZSgp
KTtcbiIgKworCQkJIiAgICAgICAgYmlzMi5jbG9zZSgpO1xuIiArCisJCQkiICAgICAgICBGaWxl
SW5wdXRTdHJlYW0gZmlsZVN0cmVhbSAgPSBudWxsO1xuIiArCisJCQkiICAgICAgICBCdWZmZXJl
ZElucHV0U3RyZWFtIGJpczMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShmaWxlU3RyZWFtID0g
bmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKSk7XG4iICsKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQu
cHJpbnRsbihiaXMzLmF2YWlsYWJsZSgpKTtcbiIgKworCQkJIiAgICAgICAgYmlzMy5jbG9zZSgp
O1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihT
dHJpbmdbXSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICB0cnkg
e1xuIiArCisJCQkiICAgICAgICAgICAgbmV3IFgoKS5mb28oKTtcbiIgKworCQkJIiAgICAgICAg
fSBjYXRjaCAoSU9FeGNlcHRpb24gZXgpIHsiICsKKwkJCSIgICAgICAgICAgICBTeXN0ZW0ub3V0
LnByaW50bG4oXCJHb3QgSU8gRXhjZXB0aW9uXCIpO1xuIiArCisJCQkiICAgICAgICB9XG4iICsK
KwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCQl9LAorCQkiR290IElPIEV4Y2VwdGlvbiIsCisJ
CW51bGwsCisJCXRydWUsCisJCW51bGwsCisJCW9wdGlvbnMsCisJCW51bGwpOworfQorLy8gQnVn
IDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdh
cm5pbmdzCisvLyBCdWcgMzYxMDczIC0gQXZvaWQgcmVzb3VyY2UgbGVhayB3YXJuaW5nIHdoZW4g
dGhlIHRvcCBsZXZlbCByZXNvdXJjZSBpcyBjbG9zZWQgZXhwbGljaXRseQorLy8gYSByZXNvdXJj
ZSB3cmFwcGVyIGlzIGNsb3NlZCBjbG9zaW5nIGFsc28gdGhlIHVuZGVybHlpbmcgcmVzb3VyY2Ug
LSBvcmlnaW5hbCB0ZXN0IGNhc2UKK3B1YmxpYyB2b2lkIHRlc3QwNjFmKCkgdGhyb3dzIElPRXhj
ZXB0aW9uIHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMu
cHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBp
bGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9S
ZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1Ip
OworCVVSTCB1cmwgPSBGaWxlTG9jYXRvci50b0ZpbGVVUkwoRmlsZUxvY2F0b3IuZmluZChQbGF0
Zm9ybS5nZXRCdW5kbGUoIm9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyIiksIG5l
dyBQYXRoKCJNRVRBLUlORi9NQU5JRkVTVC5NRiIpLCBudWxsKSk7CisJdGhpcy5ydW5Db25mb3Jt
VGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZhLmlv
LklucHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSW5wdXRTdHJlYW1SZWFkZXI7
XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJlZFJlYWRlcjtcbiIgKworCQkJImltcG9y
dCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkiaW1wb3J0IGphdmEubmV0LlVSTDtcbiIg
KworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICBib29sZWFuIGxvYWRVUkwoZmlu
YWwgVVJMIHVybCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKyAKKwkJCSIgICAgICAgIElucHV0
U3RyZWFtIHN0cmVhbSA9IG51bGw7XG4iICsgCisJCQkiICAgICAgICBCdWZmZXJlZFJlYWRlciBy
ZWFkZXIgPSBudWxsO1xuIiArIAorCQkJIiAgICAgICAgdHJ5IHtcbiIgKyAKKwkJCSIgICAgICAg
ICAgICBzdHJlYW0gPSB1cmwub3BlblN0cmVhbSgpO1xuIiArIAorCQkJIiAgICAgICAgICAgIHJl
YWRlciA9IG5ldyBCdWZmZXJlZFJlYWRlcihuZXcgSW5wdXRTdHJlYW1SZWFkZXIoc3RyZWFtKSk7
XG4iICsgCisJCQkiICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKHJlYWRlci5yZWFkTGlu
ZSgpKTtcbiIgKworCQkJIiAgICAgICAgfSBmaW5hbGx5IHtcbiIgKyAKKwkJCSIgICAgICAgICAg
ICB0cnkge1xuIiArIAorCQkJIiAgICAgICAgICAgICAgICBpZiAocmVhZGVyICE9IG51bGwpXG4i
ICsgCisJCQkiICAgICAgICAgICAgICAgICAgICByZWFkZXIuY2xvc2UoKTtcbiIgKyAKKwkJCSIg
ICAgICAgICAgICB9IGNhdGNoIChJT0V4Y2VwdGlvbiB4KSB7XG4iICsgCisJCQkiICAgICAgICAg
ICAgfVxuIiArIAorCQkJIiAgICAgICAgfVxuIiArIAorCQkJIiAgICAgICAgcmV0dXJuIGZhbHNl
OyAvLyAnc3RyZWFtJyBtYXkgbm90IGJlIGNsb3NlZCBhdCB0aGlzIGxvY2F0aW9uXG4iICsgCisJ
CQkiICAgIH1cbiIgKyAKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10g
YXJncykgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgdHJ5IHtcbiIgKwor
CQkJIiAgICAgICAgICAgIG5ldyBYKCkubG9hZFVSTChuZXcgVVJMKFwiIit1cmwudG9TdHJpbmco
KSsiXCIpKTtcbiIgKworCQkJIiAgICAgICAgfSBjYXRjaCAoSU9FeGNlcHRpb24gZXgpIHtcbiIg
KworCQkJIiAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcIkdvdCBJTyBFeGNlcHRpb25c
IitleCk7XG4iICsKKwkJCSIgICAgICAgIH1cbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4i
CisJCX0sCisJCSJNYW5pZmVzdC1WZXJzaW9uOiAxLjAiLAorCQludWxsLAorCQl0cnVlLAorCQlu
dWxsLAorCQlvcHRpb25zLAorCQludWxsKTsKK30KKy8vIEJ1ZyAzNTg5MDMgLSBGaWx0ZXIgcHJh
Y3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5ncworLy8gQnVnIDM2MDkw
OCAtIEF2b2lkIHJlc291cmNlIGxlYWsgd2FybmluZyB3aGVuIHRoZSB1bmRlcmx5aW5nL2NoYWlu
ZWQgcmVzb3VyY2UgaXMgY2xvc2VkIGV4cGxpY2l0bHkKKy8vIERpZmZlcmVudCBwb2ludHMgaW4g
YSByZXNvdXJjZSBjaGFpbiBhcmUgY2xvc2VkCitwdWJsaWMgdm9pZCB0ZXN0MDYxZygpIHsKKwlN
YXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVy
T3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5F
UlJPUik7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRp
YWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVu
TmVnYXRpdmVUZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0
IGphdmEuaW8uRmlsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJl
YW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlSW5wdXRTdHJlYW07XG4iICsKKwkJCSJp
bXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIg
KworCQkJIiAgICB2b2lkIGNsb3NlTWlkZGxlKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwor
CQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKworCQkJ
IiAgICAgICAgRmlsZUlucHV0U3RyZWFtIGZpbGVTdHJlYW0gID0gbmV3IEZpbGVJbnB1dFN0cmVh
bShmaWxlKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMgPSBuZXcg
QnVmZmVyZWRJbnB1dFN0cmVhbShmaWxlU3RyZWFtKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVy
ZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFwID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oYmlzKTtc
biIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGJpcy5hdmFpbGFibGUoKSk7XG4i
ICsKKwkJCSIgICAgICAgIGJpcy5jbG9zZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAg
ICB2b2lkIGNsb3NlT3V0ZXIoKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAg
ICBGaWxlIGZpbGUyID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAg
RmlsZUlucHV0U3RyZWFtIGZpbGVTdHJlYW0yICA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZTIp
O1xuIiArCisJCQkiICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGJpczIgPSBuZXcgQnVmZmVy
ZWRJbnB1dFN0cmVhbShmaWxlU3RyZWFtMik7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5w
dXRTdHJlYW0gZG91YmxlV3JhcDIgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShiaXMyKTtcbiIg
KworCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGJpczIuYXZhaWxhYmxlKCkpO1xuIiAr
CisJCQkiICAgICAgICBkb3VibGVXcmFwMi5jbG9zZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKwor
CQkJIiAgICB2b2lkIG5ldmVyQ2xvc2VkKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJ
IiAgICAgICAgRmlsZSBmaWxlMyA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKKwkJCSIg
ICAgICAgIEZpbGVJbnB1dFN0cmVhbSBmaWxlU3RyZWFtMyAgPSBuZXcgRmlsZUlucHV0U3RyZWFt
KGZpbGUzKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMzID0gbmV3
IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oZmlsZVN0cmVhbTMpO1xuIiArCisJCQkiICAgICAgICBCdWZm
ZXJlZElucHV0U3RyZWFtIGRvdWJsZVdyYXAzID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oYmlz
Myk7XG4iICsKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihkb3VibGVXcmFwMy5hdmFp
bGFibGUoKSk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCQl9LAorCQkiLS0tLS0t
LS0tLVxuIiArIAorCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDI2KVxuIiArIAorCQki
CUJ1ZmZlcmVkSW5wdXRTdHJlYW0gZG91YmxlV3JhcDMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVh
bShiaXMzKTtcbiIgKyAKKwkJIgkgICAgICAgICAgICAgICAgICAgIF5eXl5eXl5eXl5eXG4iICsg
CisJCSJSZXNvdXJjZSBsZWFrOiBcJ2RvdWJsZVdyYXAzXCcgaXMgbmV2ZXIgY2xvc2VkXG4iICsg
CisJCSItLS0tLS0tLS0tXG4iLAorCQludWxsLAorCQl0cnVlLAorCQlvcHRpb25zKTsKK30KKy8v
IEJ1ZyAzNTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVh
ayB3YXJuaW5ncworLy8gQnVnIDM2MDkwOCAtIEF2b2lkIHJlc291cmNlIGxlYWsgd2FybmluZyB3
aGVuIHRoZSB1bmRlcmx5aW5nL2NoYWluZWQgcmVzb3VyY2UgaXMgY2xvc2VkIGV4cGxpY2l0bHkK
Ky8vIERpZmZlcmVudCBwb2ludHMgaW4gYSByZXNvdXJjZSBjaGFpbiBhcmUgcG90ZW50aWFsbHkg
Y2xvc2VkCitwdWJsaWMgdm9pZCB0ZXN0MDYxaCgpIHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBp
bGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0
VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQo
Q29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxl
LCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQluZXcg
U3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKwor
CQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQg
amF2YS5pby5GaWxlSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2Vw
dGlvbjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICB2b2lkIGNsb3Nl
TWlkZGxlKGJvb2xlYW4gYikgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAg
RmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAgRmls
ZUlucHV0U3RyZWFtIGZpbGVTdHJlYW0gID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKTtcbiIg
KworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMgPSBuZXcgQnVmZmVyZWRJbnB1
dFN0cmVhbShmaWxlU3RyZWFtKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVh
bSBkb3VibGVXcmFwID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oYmlzKTtcbiIgKworCQkJIiAg
ICAgICAgU3lzdGVtLm91dC5wcmludGxuKGJpcy5hdmFpbGFibGUoKSk7XG4iICsKKwkJCSIgICAg
ICAgIGlmIChiKVxuIiArCisJCQkiICAgICAgICAgICAgYmlzLmNsb3NlKCk7XG4iICsKKwkJCSIg
ICAgfVxuIiArCisJCQkiICAgIHZvaWQgY2xvc2VPdXRlcihib29sZWFuIGIpIHRocm93cyBJT0V4
Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZTIgPSBuZXcgRmlsZShcInNvbWVm
aWxlXCIpO1xuIiArCisJCQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0gZmlsZVN0cmVhbTIgID0g
bmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlMik7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5w
dXRTdHJlYW0gZHVtbXk7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlz
MiA9IChkdW1teSA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGZpbGVTdHJlYW0yKSk7XG4iICsK
KwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gZG91YmxlV3JhcDIgPSBuZXcgQnVmZmVy
ZWRJbnB1dFN0cmVhbShiaXMyKTtcbiIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxu
KGJpczIuYXZhaWxhYmxlKCkpO1xuIiArCisJCQkiICAgICAgICBpZiAoYilcbiIgKworCQkJIiAg
ICAgICAgICAgIGRvdWJsZVdyYXAyLmNsb3NlKCk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQki
ICAgIHZvaWQgcG90QW5kRGVmKGJvb2xlYW4gYikgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwor
CQkJIiAgICAgICAgRmlsZSBmaWxlMyA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKKwkJ
CSIgICAgICAgIEZpbGVJbnB1dFN0cmVhbSBmaWxlU3RyZWFtMyAgPSBuZXcgRmlsZUlucHV0U3Ry
ZWFtKGZpbGUzKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMzID0g
bmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oZmlsZVN0cmVhbTMpO1xuIiArCisJCQkiICAgICAgICBC
dWZmZXJlZElucHV0U3RyZWFtIGRvdWJsZVdyYXAzID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0o
YmlzMyk7XG4iICsKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihkb3VibGVXcmFwMy5h
dmFpbGFibGUoKSk7XG4iICsKKwkJCSIgICAgICAgIGlmIChiKSBiaXMzLmNsb3NlKCk7XG4iICsK
KwkJCSIgICAgICAgIGZpbGVTdHJlYW0zLmNsb3NlKCk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJ
CQkifVxuIgorCQl9LAorCQkiLS0tLS0tLS0tLVxuIiArIAorCQkiMS4gRVJST1IgaW4gWC5qYXZh
IChhdCBsaW5lIDEwKVxuIiArIAorCQkiCUJ1ZmZlcmVkSW5wdXRTdHJlYW0gZG91YmxlV3JhcCA9
IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGJpcyk7XG4iICsgCisJCSIJICAgICAgICAgICAgICAg
ICAgICBeXl5eXl5eXl5eXG4iICsgCisJCSJQb3RlbnRpYWwgcmVzb3VyY2UgbGVhazogXCdkb3Vi
bGVXcmFwXCcgbWF5IG5vdCBiZSBjbG9zZWRcbiIgKyAKKwkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJ
IjIuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAyMClcbiIgKyAKKwkJIglCdWZmZXJlZElucHV0
U3RyZWFtIGRvdWJsZVdyYXAyID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oYmlzMik7XG4iICsg
CisJCSIJICAgICAgICAgICAgICAgICAgICBeXl5eXl5eXl5eXlxuIiArIAorCQkiUG90ZW50aWFs
IHJlc291cmNlIGxlYWs6IFwnZG91YmxlV3JhcDJcJyBtYXkgbm90IGJlIGNsb3NlZFxuIiArIAor
CQkiLS0tLS0tLS0tLVxuIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJb3B0aW9ucyk7Cit9CisvLyBC
dWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsg
d2FybmluZ3MKKy8vIGxvY2FsIHZhciBpcyByZS11c2VkIGZvciB0d28gbGV2ZWxzIG9mIHdyYXBw
ZXJzCitwdWJsaWMgdm9pZCB0ZXN0MDYxaSgpIHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVy
T3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5j
bG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29t
cGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBD
b21waWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQluZXcgU3Ry
aW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKworCQkJ
ImltcG9ydCBqYXZhLmlvLklucHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uQnVm
ZmVyZWRJbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkZpbGVJbnB1dFN0cmVh
bTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGlj
IGNsYXNzIFgge1xuIiArCisJCQkiICAgIHZvaWQgY2xvc2VNaWRkbGUoKSB0aHJvd3MgSU9FeGNl
cHRpb24ge1xuIiArCisJCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxl
XCIpO1xuIiArCisJCQkiICAgICAgICBJbnB1dFN0cmVhbSBzdHJlYW0gID0gbmV3IEZpbGVJbnB1
dFN0cmVhbShmaWxlKTtcbiIgKworCQkJIiAgICAgICAgc3RyZWFtID0gbmV3IEJ1ZmZlcmVkSW5w
dXRTdHJlYW0oc3RyZWFtKTtcbiIgKworCQkJIiAgICAgICAgSW5wdXRTdHJlYW0gbWlkZGxlO1xu
IiArCisJCQkiICAgICAgICBzdHJlYW0gPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShtaWRkbGUg
PSBzdHJlYW0pO1xuIiArCisJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oc3RyZWFtLmF2
YWlsYWJsZSgpKTtcbiIgKworCQkJIiAgICAgICAgbWlkZGxlLmNsb3NlKCk7XG4iICsKKwkJCSIg
ICAgfVxuIiArCisJCQkiICAgIHZvaWQgY2xvc2VPdXRlcigpIHRocm93cyBJT0V4Y2VwdGlvbiB7
XG4iICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4i
ICsKKwkJCSIgICAgICAgIElucHV0U3RyZWFtIHN0cmVhbTIgID0gbmV3IEZpbGVJbnB1dFN0cmVh
bShmaWxlKTtcbiIgKworCQkJIiAgICAgICAgc3RyZWFtMiA9IG5ldyBCdWZmZXJlZElucHV0U3Ry
ZWFtKHN0cmVhbTIpO1xuIiArCisJCQkiICAgICAgICBzdHJlYW0yID0gbmV3IEJ1ZmZlcmVkSW5w
dXRTdHJlYW0oc3RyZWFtMik7XG4iICsKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihz
dHJlYW0yLmF2YWlsYWJsZSgpKTtcbiIgKworCQkJIiAgICAgICAgc3RyZWFtMi5jbG9zZSgpO1xu
IiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICB2b2lkIG5ldmVyQ2xvc2VkKCkgdGhyb3dzIElP
RXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21l
ZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAgSW5wdXRTdHJlYW0gc3RyZWFtMyAgPSBuZXcgRmls
ZUlucHV0U3RyZWFtKGZpbGUpO1xuIiArCisJCQkiICAgICAgICBzdHJlYW0zID0gbmV3IEJ1ZmZl
cmVkSW5wdXRTdHJlYW0oc3RyZWFtMyk7XG4iICsKKwkJCSIgICAgICAgIHN0cmVhbTMgPSBuZXcg
QnVmZmVyZWRJbnB1dFN0cmVhbShzdHJlYW0zKTtcbiIgKworCQkJIiAgICAgICAgU3lzdGVtLm91
dC5wcmludGxuKHN0cmVhbTMuYXZhaWxhYmxlKCkpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJ
In1cbiIKKwkJfSwKKwkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJIjEuIEVSUk9SIGluIFguamF2YSAo
YXQgbGluZSAyNilcbiIgKyAKKwkJIglJbnB1dFN0cmVhbSBzdHJlYW0zICA9IG5ldyBGaWxlSW5w
dXRTdHJlYW0oZmlsZSk7XG4iICsgCisJCSIJICAgICAgICAgICAgXl5eXl5eXlxuIiArIAorCQki
UmVzb3VyY2UgbGVhazogXCdzdHJlYW0zXCcgaXMgbmV2ZXIgY2xvc2VkXG4iICsgCisJCSItLS0t
LS0tLS0tXG4iLAorCQludWxsLAorCQl0cnVlLAorCQlvcHRpb25zKTsKK30KKy8vIEJ1ZyAzNTg5
MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5n
cworLy8gc2VsZi13cmFwcGluZyBhIG1ldGhvZCBhcmd1bWVudCAoY2F1c2VkIE5QRSBVbmNvbmRp
dGlvbmFsRmxvd0luZm8ubWFya0FzRGVmaW5pdGVseU51bGwoLi4pKS4KK3B1YmxpYyB2b2lkIHRl
c3QwNjFqKCkgeworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9u
cy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29t
cGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9O
X1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJP
Uik7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEi
LAorCQkJImltcG9ydCBqYXZhLmlvLklucHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEu
aW8uQnVmZmVyZWRJbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0
aW9uO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICAgIHZvaWQgZm9vKElu
cHV0U3RyZWFtIHN0cmVhbSkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAg
c3RyZWFtID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oc3RyZWFtKTtcbiIgKworCQkJIiAgICAg
ICAgU3lzdGVtLm91dC5wcmludGxuKHN0cmVhbS5hdmFpbGFibGUoKSk7XG4iICsKKwkJCSIgICAg
ICAgIHN0cmVhbS5jbG9zZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICB2b2lkIGJv
byhJbnB1dFN0cmVhbSBzdHJlYW0yKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAg
ICAgICBzdHJlYW0yID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oc3RyZWFtMik7XG4iICsKKwkJ
CSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihzdHJlYW0yLmF2YWlsYWJsZSgpKTtcbiIgKwor
CQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSIiLAorCQludWxsLAorCQl0cnVlLAor
CQludWxsLAorCQlvcHRpb25zLAorCQludWxsKTsKK30KKy8vIEJ1ZyAzNTg5MDMgLSBGaWx0ZXIg
cHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5ncworLy8gYSB3cmFw
cGVyIGlzIGNyZWF0ZWQgaW4gYSByZXR1cm4gc3RhdGVtZW50CitwdWJsaWMgdm9pZCB0ZXN0MDYx
aygpIHRocm93cyBJT0V4Y2VwdGlvbiB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlv
bnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2Vk
Q2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0KENvbXBpbGVy
T3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGls
ZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQluZXcgU3RyaW5nW10g
eworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKworCQkJImltcG9y
dCBqYXZhLmlvLkZpbGVJbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZl
cmVkSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIg
KworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICBCdWZmZXJlZElucHV0U3RyZWFt
IGdldFJlYWRlcihGaWxlIGZpbGUpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAg
ICAgIEZpbGVJbnB1dFN0cmVhbSBzdHJlYW0gPSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpO1xu
IiArCisJCQkiICAgICAgICByZXR1cm4gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oc3RyZWFtKTtc
biIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSIiLAorCQludWxsLAorCQl0
cnVlLAorCQludWxsLAorCQlvcHRpb25zLAorCQludWxsKTsKK30KKy8vIEJ1ZyAzNTg5MDMgLSBG
aWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5ncworLy8g
YSBjbG9zZWFibGUgaXMgYXNzaWduZWQgdG8gYSBmaWVsZAorcHVibGljIHZvaWQgdGVzdDA2MWwo
KSB0aHJvd3MgSU9FeGNlcHRpb24geworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25z
KCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENs
b3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9w
dGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVy
T3B0aW9ucy5FUlJPUik7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsK
KwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsKKwkJCSJpbXBvcnQg
amF2YS5pby5GaWxlSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJl
ZElucHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsK
KwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBz
dHJlYW07XG4iICsKKwkJCSIgICAgdm9pZCBmb28oRmlsZSBmaWxlKSB0aHJvd3MgSU9FeGNlcHRp
b24ge1xuIiArCisJCQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0gcyA9IG5ldyBGaWxlSW5wdXRT
dHJlYW0oZmlsZSk7XG4iICsKKwkJCSIgICAgICAgIHN0cmVhbSA9IG5ldyBCdWZmZXJlZElucHV0
U3RyZWFtKHMpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIiIsCisJ
CW51bGwsCisJCXRydWUsCisJCW51bGwsCisJCW9wdGlvbnMsCisJCW51bGwpOworfQorLy8gQnVn
IDM2MjMzMSAtIFJlc291cmNlIGxlYWsgbm90IGRldGVjdGVkIHdoZW4gY2xvc2VhYmxlIG5vdCBh
c3NpZ25lZCB0byB2YXJpYWJsZQorLy8gYSByZXNvdXJjZSBpcyBuZXZlciBhc3NpZ25lZAorcHVi
bGljIHZvaWQgdGVzdDA2MmEoKSB0aHJvd3MgSU9FeGNlcHRpb24geworCU1hcCBvcHRpb25zID0g
Z2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElP
Tl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRp
b25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRD
bG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3Qo
CisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxl
O1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZU91dHB1dFN0cmVhbTtcbiIgKworCQkJImlt
cG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiAr
CisJCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAg
ICAgbmV3IEZpbGVPdXRwdXRTdHJlYW0obmV3IEZpbGUoXCJDOlxcdGVtcFxcZm9vLnR4dFwiKSku
d3JpdGUoMSk7XG4iICsgCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIi0tLS0t
LS0tLS1cbiIgKyAKKwkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA2KVxuIiArIAorCQki
CW5ldyBGaWxlT3V0cHV0U3RyZWFtKG5ldyBGaWxlKFwiQzpcXHRlbXBcXGZvby50eHRcIikpLndy
aXRlKDEpO1xuIiArIAorCQkiCV5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXl5cbiIgKyAKKwkJIlJlc291cmNlIGxlYWs6IFwnPHVuYXNzaWduZWQgQ2xvc2Vh
YmxlIHZhbHVlPlwnIGlzIG5ldmVyIGNsb3NlZFxuIiArIAorCQkiLS0tLS0tLS0tLVxuIiwKKwkJ
bnVsbCwKKwkJdHJ1ZSwKKwkJb3B0aW9ucyk7Cit9CisvLyBCdWcgMzYyMzMxIC0gUmVzb3VyY2Ug
bGVhayBub3QgZGV0ZWN0ZWQgd2hlbiBjbG9zZWFibGUgbm90IGFzc2lnbmVkIHRvIHZhcmlhYmxl
CisvLyBhIGZyZXNobHkgYWxsb2NhdGVkIHJlc291cmNlIGlzIGltbWVkaWF0ZWx5IGNsb3NlZAor
cHVibGljIHZvaWQgdGVzdDA2MmIoKSB0aHJvd3MgSU9FeGNlcHRpb24geworCU1hcCBvcHRpb25z
ID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9Q
VElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlv
cHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9z
ZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJdGhpcy5ydW5Db25mb3JtVGVz
dCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZhLmlvLkZp
bGU7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlT3V0cHV0U3RyZWFtO1xuIiArCisJCQki
aW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4i
ICsKKwkJCSIgICAgdm9pZCBmb28oKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAg
ICAgICBuZXcgRmlsZU91dHB1dFN0cmVhbShuZXcgRmlsZShcIkM6XFx0ZW1wXFxmb28udHh0XCIp
KS5jbG9zZSgpO1xuIiArIAorCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSIiLAor
CQludWxsLAorCQl0cnVlLAorCQludWxsLAorCQlvcHRpb25zLAorCQludWxsKTsKK30KKy8vIEJ1
ZyAzNjIzMzEgLSBSZXNvdXJjZSBsZWFrIG5vdCBkZXRlY3RlZCB3aGVuIGNsb3NlYWJsZSBub3Qg
YXNzaWduZWQgdG8gdmFyaWFibGUKKy8vIGEgcmVzb3VyY2UgaXMgZGlyZWN0bHkgcGFzc2VkIHRv
IGFub3RoZXIgbWV0aG9kCitwdWJsaWMgdm9pZCB0ZXN0MDYyYygpIHRocm93cyBJT0V4Y2VwdGlv
biB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChD
b21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9w
dGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0
UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0
aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQki
aW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkZpbGVPdXRwdXRT
dHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1
YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICB2b2lkIGZvbygpIHRocm93cyBJT0V4Y2VwdGlv
biB7XG4iICsKKwkJCSIgICAgICAgIHdyaXRlSXQobmV3IEZpbGVPdXRwdXRTdHJlYW0obmV3IEZp
bGUoXCJDOlxcdGVtcFxcZm9vLnR4dFwiKSkpO1xuIiArIAorCQkJIiAgICB9XG4iICsKKwkJCSIg
ICAgdm9pZCB3cml0ZUl0KEZpbGVPdXRwdXRTdHJlYW0gZm9zKSB0aHJvd3MgSU9FeGNlcHRpb24g
e1xuIiArCisJCQkiICAgICAgICBmb3Mud3JpdGUoMSk7XG4iICsKKwkJCSIgICAgICAgIGZvcy5j
bG9zZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIiIsCisJCW51
bGwsCisJCXRydWUsCisJCW51bGwsCisJCW9wdGlvbnMsCisJCW51bGwpOworfQorLy8gQnVnIDM2
MjMzMSAtIFJlc291cmNlIGxlYWsgbm90IGRldGVjdGVkIHdoZW4gY2xvc2VhYmxlIG5vdCBhc3Np
Z25lZCB0byB2YXJpYWJsZQorLy8gYSByZXNvdXJjZSBpcyBub3QgdXNlZAorcHVibGljIHZvaWQg
dGVzdDA2MmQoKSB0aHJvd3MgSU9FeGNlcHRpb24geworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGls
ZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRV
bmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChD
b21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUs
IENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBT
dHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCisJ
CQkiaW1wb3J0IGphdmEuaW8uRmlsZU91dHB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZh
LmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICAg
IHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgbmV3IEZp
bGVPdXRwdXRTdHJlYW0obmV3IEZpbGUoXCJDOlxcdGVtcFxcZm9vLnR4dFwiKSk7XG4iICsgCisJ
CQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJIjEu
IEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA2KVxuIiArIAorCQkiCW5ldyBGaWxlT3V0cHV0U3Ry
ZWFtKG5ldyBGaWxlKFwiQzpcXHRlbXBcXGZvby50eHRcIikpO1xuIiArIAorCQkiCV5eXl5eXl5e
Xl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIgKyAKKwkJIlJlc291
cmNlIGxlYWs6IFwnPHVuYXNzaWduZWQgQ2xvc2VhYmxlIHZhbHVlPlwnIGlzIG5ldmVyIGNsb3Nl
ZFxuIiArIAorCQkiLS0tLS0tLS0tLVxuIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJb3B0aW9ucyk7
Cit9CisvLyBCdWcgMzYyMzMyIC0gT25seSByZXBvcnQgcG90ZW50aWFsIGxlYWsgd2hlbiBjbG9z
ZWFibGUgbm90IGNyZWF0ZWQgaW4gdGhlIGxvY2FsIHNjb3BlCisvLyBhIHdyYXBwZXIgaXMgb2J0
YWluZWQgZnJvbSBhbm90aGVyIG1ldGhvZAorcHVibGljIHZvaWQgdGVzdDA2M2EoKSB0aHJvd3Mg
SU9FeGNlcHRpb24geworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0
aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwg
Q29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BU
SU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5F
UlJPUik7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5q
YXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8u
RmlsZUlucHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uQnVmZmVyZWRJbnB1dFN0
cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVi
bGljIGNsYXNzIFgge1xuIiArCisJCQkiICAgIHZvaWQgcmVhZChGaWxlIGZpbGUpIHRocm93cyBJ
T0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZpbGVJbnB1dFN0cmVhbSBzdHJlYW0gPSBu
ZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpO1xuIiArCisJCQkiICAgICAgICBCdWZmZXJlZElucHV0
U3RyZWFtIGJpcyA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKHN0cmVhbSk7IC8vIG5ldmVyIHNp
bmNlIHJlYXNzaWduZWRcbiIgKworCQkJIiAgICAgICAgRmlsZUlucHV0U3RyZWFtIHN0cmVhbTIg
PSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpOyAvLyB1bnN1cmUgc2luY2UgcGFzc2VkIHRvIG1l
dGhvZFxuIiArCisJCQkiICAgICAgICBiaXMgPSBnZXRSZWFkZXIoc3RyZWFtMik7IC8vIHVuc3Vy
ZSBzaW5jZSBvYnRhaW5lZCBmcm9tIG1ldGhvZFxuIiArCisJCQkiICAgICAgICBiaXMuYXZhaWxh
YmxlKCk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0g
Z2V0UmVhZGVyKEZpbGVJbnB1dFN0cmVhbSBzdHJlYW0pIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4i
ICsKKwkJCSIgICAgICAgIHJldHVybiBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShzdHJlYW0pO1xu
IiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIi0tLS0tLS0tLS1cbiIgKyAK
KwkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA4KVxuIiArIAorCQkiCUJ1ZmZlcmVkSW5w
dXRTdHJlYW0gYmlzID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oc3RyZWFtKTsgLy8gbmV2ZXIg
c2luY2UgcmVhc3NpZ25lZFxuIiArIAorCQkiCSAgICAgICAgICAgICAgICAgICAgXl5eXG4iICsg
CisJCSJSZXNvdXJjZSBsZWFrOiBcJ2Jpc1wnIGlzIG5ldmVyIGNsb3NlZFxuIiArIAorCQkiLS0t
LS0tLS0tLVxuIiArIAorCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDkpXG4iICsgCisJ
CSIJRmlsZUlucHV0U3RyZWFtIHN0cmVhbTIgPSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpOyAv
LyB1bnN1cmUgc2luY2UgcGFzc2VkIHRvIG1ldGhvZFxuIiArIAorCQkiCSAgICAgICAgICAgICAg
ICBeXl5eXl5eXG4iICsgCisJCSJQb3RlbnRpYWwgcmVzb3VyY2UgbGVhazogXCdzdHJlYW0yXCcg
bWF5IG5vdCBiZSBjbG9zZWRcbiIgKyAKKwkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJIjMuIEVSUk9S
IGluIFguamF2YSAoYXQgbGluZSAxMClcbiIgKyAKKwkJIgliaXMgPSBnZXRSZWFkZXIoc3RyZWFt
Mik7IC8vIHVuc3VyZSBzaW5jZSBvYnRhaW5lZCBmcm9tIG1ldGhvZFxuIiArIAorCQkiCV5eXl5e
Xl5eXl5eXl5eXl5eXl5eXl5eXlxuIiArIAorCQkiUG90ZW50aWFsIHJlc291cmNlIGxlYWs6IFwn
YmlzXCcgbWF5IG5vdCBiZSBjbG9zZWRcbiIgKyAKKwkJIi0tLS0tLS0tLS1cbiIsCisJCW51bGws
CisJCXRydWUsCisJCW9wdGlvbnMpOworfQorLy8gQnVnIDM2MjMzMiAtIE9ubHkgcmVwb3J0IHBv
dGVudGlhbCBsZWFrIHdoZW4gY2xvc2VhYmxlIG5vdCBjcmVhdGVkIGluIHRoZSBsb2NhbCBzY29w
ZQorLy8gYSB3cmFwcGVyIGlzIG9idGFpbmVkIGZyb20gYSBmaWVsZCByZWFkCitwdWJsaWMgdm9p
ZCB0ZXN0MDYzYigpIHRocm93cyBJT0V4Y2VwdGlvbiB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21w
aWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9y
dFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0
KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJs
ZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQluZXcg
U3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZUlucHV0U3Ry
ZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uQnVmZmVyZWRJbnB1dFN0cmVhbTtcbiIgKwor
CQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgg
e1xuIiArCisJCQkiICAgIEZpbGVJbnB1dFN0cmVhbSBzdHJlYW07XG4iICsKKwkJCSIgICAgdm9p
ZCByZWFkKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmlsZUlucHV0
U3RyZWFtIHMgPSB0aGlzLnN0cmVhbTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0
cmVhbSBiaXMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShzKTsgLy8gZG9uJ3QgY29tcGxhaW4g
c2luY2UgcyBpcyBvYnRhaW5lZCBmcm9tIGEgZmllbGRcbiIgKworCQkJIiAgICAgICAgYmlzLmF2
YWlsYWJsZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIiIsCisJ
CW51bGwsCisJCXRydWUsCisJCW51bGwsCisJCW9wdGlvbnMsCisJCW51bGwpOworfQorLy8gQnVn
IDM2MjMzMiAtIE9ubHkgcmVwb3J0IHBvdGVudGlhbCBsZWFrIHdoZW4gY2xvc2VhYmxlIG5vdCBj
cmVhdGVkIGluIHRoZSBsb2NhbCBzY29wZQorLy8gYSB3cmFwcGVyIGlzIGFzc2lnbmVkIHRvIGEg
ZmllbGQKK3B1YmxpYyB2b2lkIHRlc3QwNjNjKCkgdGhyb3dzIElPRXhjZXB0aW9uIHsKKwlNYXAg
b3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0
aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJP
Uik7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxs
eVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVuQ29u
Zm9ybVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2
YS5pby5GaWxlSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJlZElu
cHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJ
CSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBzdHJl
YW07XG4iICsKKwkJCSIgICAgdm9pZCByZWFkKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwor
CQkJIiAgICAgICAgRmlsZUlucHV0U3RyZWFtIHMgPSBuZXcgRmlsZUlucHV0U3RyZWFtKFwic29t
ZWZpbGVcIik7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzID0gbmV3
IEJ1ZmZlcmVkSW5wdXRTdHJlYW0ocyk7XG4iICsKKwkJCSIgICAgICAgIHRoaXMuc3RyZWFtID0g
YmlzO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIiIsCisJCW51bGws
CisJCXRydWUsCisJCW51bGwsCisJCW9wdGlvbnMsCisJCW51bGwpOworfQogcHVibGljIHN0YXRp
YyBDbGFzcyB0ZXN0Q2xhc3MoKSB7CiAJcmV0dXJuIFRyeVdpdGhSZXNvdXJjZXNTdGF0ZW1lbnRU
ZXN0LmNsYXNzOwogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9BbGxvY2F0aW9uRXhwcmVzc2lv
bi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2FzdC9BbGxvY2F0aW9uRXhwcmVzc2lvbi5qYXZhCmluZGV4IGU4MTFl
YTkuLjcxMjE3Y2UgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQWxsb2NhdGlvbkV4cHJlc3Npb24u
amF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXN0L0FsbG9jYXRpb25FeHByZXNzaW9uLmphdmEKQEAgLTEsNSAr
MSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAy
MDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAy
MDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4g
VGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUg
YXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2
MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWls
YWJsZSBhdApAQCAtMTIsNiArMTIsNyBAQAogICogICAgIAkJCQkJCWJ1ZyAzMTkyMDEgLSBbbnVs
bF0gbm8gd2FybmluZyB3aGVuIHVuYm94aW5nIFNpbmdsZU5hbWVSZWZlcmVuY2UgY2F1c2VzIE5Q
RQogICogICAgIAkJCQkJCWJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2lu
ZyB0cnktd2l0aC1yZXNvdXJjZXMKICAqIAkJCQkJCQlidWcgMTg2MzQyIC0gW2NvbXBpbGVyXVtu
dWxsXSBVc2luZyBhbm5vdGF0aW9ucyBmb3IgbnVsbCBjaGVja2luZworICoJCQkJCQkJYnVnIDM1
ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5p
bmdzCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmFzdDsKIApAQCAtMzcsNiArMzgsOCBAQAogCXByb3RlY3RlZCBUeXBl
QmluZGluZyB0eXBlRXhwZWN0ZWQ7CSAgLy8gZm9yIDw+IGluZmVyZW5jZQogCXB1YmxpYyBib29s
ZWFuIGluZmVycmVkUmV0dXJuVHlwZTsKIAorCXB1YmxpYyBGYWtlZFRyYWNraW5nVmFyaWFibGUg
Y2xvc2VUcmFja2VyOwkvLyB3aGVuIGFsbG9jYXRpb24gYSBDbG9zZWFibGUgc3RvcmUgYSBwcmUt
bGltaW5hcnkgdHJhY2tpbmcgdmFyaWFibGUgaGVyZQorCiBwdWJsaWMgRmxvd0luZm8gYW5hbHlz
ZUNvZGUoQmxvY2tTY29wZSBjdXJyZW50U2NvcGUsIEZsb3dDb250ZXh0IGZsb3dDb250ZXh0LCBG
bG93SW5mbyBmbG93SW5mbykgewogCS8vIGNoZWNrIGNhcHR1cmVkIHZhcmlhYmxlcyBhcmUgaW5p
dGlhbGl6ZWQgaW4gY3VycmVudCBjb250ZXh0ICgyNjEzNCkKIAljaGVja0NhcHR1cmVkTG9jYWxJ
bml0aWFsaXphdGlvbklmTmVjZXNzYXJ5KChSZWZlcmVuY2VCaW5kaW5nKXRoaXMuYmluZGluZy5k
ZWNsYXJpbmdDbGFzcy5lcmFzdXJlKCksIGN1cnJlbnRTY29wZSwgZmxvd0luZm8pOwpAQCAtNDQs
MTggKzQ3LDIyIEBACiAJLy8gcHJvY2VzcyBhcmd1bWVudHMKIAlpZiAodGhpcy5hcmd1bWVudHMg
IT0gbnVsbCkgewogCQlmb3IgKGludCBpID0gMCwgY291bnQgPSB0aGlzLmFyZ3VtZW50cy5sZW5n
dGg7IGkgPCBjb3VudDsgaSsrKSB7Ci0JCQkvLyBpZiBhcmd1bWVudCBpcyBhbiBBdXRvQ2xvc2Vh
YmxlIGluc2VydCBpbmZvIHRoYXQgaXQgKm1heSogYmUgY2xvc2VkIChieSB0aGUgdGFyZ2V0IG1l
dGhvZCwgaS5lLikKLQkJCWZsb3dJbmZvID0gRmFrZWRUcmFja2luZ1ZhcmlhYmxlLm1hcmtQYXNz
ZWRUb091dHNpZGUoY3VycmVudFNjb3BlLCB0aGlzLmFyZ3VtZW50c1tpXSwgZmxvd0luZm8pOwog
CQkJZmxvd0luZm8gPQogCQkJCXRoaXMuYXJndW1lbnRzW2ldCiAJCQkJCS5hbmFseXNlQ29kZShj
dXJyZW50U2NvcGUsIGZsb3dDb250ZXh0LCBmbG93SW5mbykKIAkJCQkJLnVuY29uZGl0aW9uYWxJ
bml0cygpOworCQkJLy8gaWYgYXJndW1lbnQgaXMgYW4gQXV0b0Nsb3NlYWJsZSBpbnNlcnQgaW5m
byB0aGF0IGl0ICptYXkqIGJlIGNsb3NlZCAoYnkgdGhlIHRhcmdldCBtZXRob2QsIGkuZS4pCisJ
CQlmbG93SW5mbyA9IEZha2VkVHJhY2tpbmdWYXJpYWJsZS5tYXJrUGFzc2VkVG9PdXRzaWRlKGN1
cnJlbnRTY29wZSwgdGhpcy5hcmd1bWVudHNbaV0sIGZsb3dJbmZvLCB0aGlzLnJlc29sdmVkVHlw
ZSk7CiAJCQlpZiAoKHRoaXMuYXJndW1lbnRzW2ldLmltcGxpY2l0Q29udmVyc2lvbiAmIFR5cGVJ
ZHMuVU5CT1hJTkcpICE9IDApIHsKIAkJCQl0aGlzLmFyZ3VtZW50c1tpXS5jaGVja05QRShjdXJy
ZW50U2NvcGUsIGZsb3dDb250ZXh0LCBmbG93SW5mbyk7CiAJCQl9CiAJCX0KIAkJYW5hbHlzZUFy
Z3VtZW50cyhjdXJyZW50U2NvcGUsIGZsb3dDb250ZXh0LCBmbG93SW5mbywgdGhpcy5iaW5kaW5n
LCB0aGlzLmFyZ3VtZW50cyk7CiAJfQorCisJaWYgKEZha2VkVHJhY2tpbmdWYXJpYWJsZS5pc0F1
dG9DbG9zZWFibGUodGhpcy5yZXNvbHZlZFR5cGUpKQorCQlGYWtlZFRyYWNraW5nVmFyaWFibGUu
YW5hbHlzZUNsb3NlYWJsZUFsbG9jYXRpb24oY3VycmVudFNjb3BlLCBmbG93SW5mbywgdGhpcyk7
CisKIAkvLyByZWNvcmQgc29tZSBkZXBlbmRlbmN5IGluZm9ybWF0aW9uIGZvciBleGNlcHRpb24g
dHlwZXMKIAlSZWZlcmVuY2VCaW5kaW5nW10gdGhyb3duRXhjZXB0aW9uczsKIAlpZiAoKCh0aHJv
d25FeGNlcHRpb25zID0gdGhpcy5iaW5kaW5nLnRocm93bkV4Y2VwdGlvbnMpLmxlbmd0aCkgIT0g
MCkgewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Bc3NpZ25tZW50LmphdmEgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0
L0Fzc2lnbm1lbnQuamF2YQppbmRleCA5NzBmYzI0Li41MzlhNjYxIDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L0Fzc2lnbm1lbnQuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Fzc2lnbm1lbnQuamF2YQpA
QCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMp
IDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMp
IDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJl
c2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBh
cmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBM
aWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQg
aXMgYXZhaWxhYmxlIGF0CkBAIC0xNCw2ICsxNCw3IEBACiAgKiAgICAgCQkJCQkJYnVnIDMzNTA5
MyAtIFtjb21waWxlcl1bbnVsbF0gbWluaW1hbCBob29rIGZvciBmdXR1cmUgbnVsbCBhbm5vdGF0
aW9uIHN1cHBvcnQKICAqICAgICAJCQkJCQlidWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcg
Zm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCiAgKgkJCQkJCQlidWcgMTg2MzQyIC0gW2Nv
bXBpbGVyXVtudWxsXSBVc2luZyBhbm5vdGF0aW9ucyBmb3IgbnVsbCBjaGVja2luZworICoJCQkJ
CQkJYnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBs
ZWFrIHdhcm5pbmdzCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdDsKIApAQCAtNDYsMTkgKzQ3LDI3IEBACiAJaWYg
KCh0aGlzLmV4cHJlc3Npb24uaW1wbGljaXRDb252ZXJzaW9uICYgVHlwZUlkcy5VTkJPWElORykg
IT0gMCkgewogCQl0aGlzLmV4cHJlc3Npb24uY2hlY2tOUEUoY3VycmVudFNjb3BlLCBmbG93Q29u
dGV4dCwgZmxvd0luZm8pOwogCX0KKwkKKwlGbG93SW5mbyBwcmVJbml0SW5mbyA9IG51bGw7CisJ
Ym9vbGVhbiBzaG91bGRBbmFseXNlUmVzb3VyY2UgPSBsb2NhbCAhPSBudWxsIAorCQkJJiYgZmxv
d0luZm8ucmVhY2hNb2RlKCkgPT0gRmxvd0luZm8uUkVBQ0hBQkxFIAorCQkJJiYgKEZha2VkVHJh
Y2tpbmdWYXJpYWJsZS5pc0F1dG9DbG9zZWFibGUodGhpcy5leHByZXNzaW9uLnJlc29sdmVkVHlw
ZSkKKwkJCQkJfHwgdGhpcy5leHByZXNzaW9uLnJlc29sdmVkVHlwZSA9PSBUeXBlQmluZGluZy5O
VUxMKTsKKwlpZiAoc2hvdWxkQW5hbHlzZVJlc291cmNlKSB7CisJCXByZUluaXRJbmZvID0gZmxv
d0luZm8udW5jb25kaXRpb25hbENvcHkoKTsKKwkJLy8gYW5hbHlzaXMgb2YgcmVzb3VyY2UgbGVh
a3MgbmVlZHMgYWRkaXRpb25hbCBjb250ZXh0IHdoaWxlIGFuYWx5emluZyB0aGUgUkhTOgorCQlG
YWtlZFRyYWNraW5nVmFyaWFibGUucHJlQ29ubmVjdFRyYWNrZXJBY3Jvc3NBc3NpZ25tZW50KHRo
aXMsIGxvY2FsLCB0aGlzLmV4cHJlc3Npb24pOworCX0KKwkKIAlmbG93SW5mbyA9ICgoUmVmZXJl
bmNlKSB0aGlzLmxocykKIAkJLmFuYWx5c2VBc3NpZ25tZW50KGN1cnJlbnRTY29wZSwgZmxvd0Nv
bnRleHQsIGZsb3dJbmZvLCB0aGlzLCBmYWxzZSkKIAkJLnVuY29uZGl0aW9uYWxJbml0cygpOwot
CWlmIChsb2NhbCAhPSBudWxsKSB7Ci0JCUxvY2FsVmFyaWFibGVCaW5kaW5nIHByZXZpb3VzVHJh
Y2tlckJpbmRpbmcgPSBudWxsOwotCQlpZiAobG9jYWwuY2xvc2VUcmFja2VyICE9IG51bGwpIHsK
LQkJCS8vIEFzc2lnbmluZyB0byBhIHZhcmlhYmxlIGFscmVhZHkgaG9sZGluZyBhbiBBdXRvQ2xv
c2VhYmxlLCBoYXMgaXQgYmVlbiBjbG9zZWQgYmVmb3JlPwotCQkJcHJldmlvdXNUcmFja2VyQmlu
ZGluZyA9IGxvY2FsLmNsb3NlVHJhY2tlci5iaW5kaW5nOwotCQkJaWYgKCFmbG93SW5mby5pc0Rl
ZmluaXRlbHlOdWxsKGxvY2FsKSkgLy8gb25seSBpZiBwcmV2aW91cyB2YWx1ZSBtYXkgYmUgbm9u
LW51bGwKLQkJCQlsb2NhbC5jbG9zZVRyYWNrZXIucmVjb3JkRXJyb3JMb2NhdGlvbih0aGlzLCBm
bG93SW5mby5udWxsU3RhdHVzKHByZXZpb3VzVHJhY2tlckJpbmRpbmcpKTsKLQkJfQotCQlGYWtl
ZFRyYWNraW5nVmFyaWFibGUuaGFuZGxlUmVzb3VyY2VBc3NpZ25tZW50KGZsb3dJbmZvLCB0aGlz
LCB0aGlzLmV4cHJlc3Npb24sIGxvY2FsLCBwcmV2aW91c1RyYWNrZXJCaW5kaW5nKTsKLQl9CisK
KwlpZiAoc2hvdWxkQW5hbHlzZVJlc291cmNlKQorCQlGYWtlZFRyYWNraW5nVmFyaWFibGUuaGFu
ZGxlUmVzb3VyY2VBc3NpZ25tZW50KHByZUluaXRJbmZvLCBmbG93SW5mbywgdGhpcywgdGhpcy5l
eHByZXNzaW9uLCBsb2NhbCk7CisJZWxzZQorCQlGYWtlZFRyYWNraW5nVmFyaWFibGUuY2xlYW5V
cEFmdGVyQXNzaWdubWVudChjdXJyZW50U2NvcGUsIHRoaXMubGhzLmJpdHMsIHRoaXMuZXhwcmVz
c2lvbik7CisKIAlpbnQgbnVsbFN0YXR1cyA9IHRoaXMuZXhwcmVzc2lvbi5udWxsU3RhdHVzKGZs
b3dJbmZvKTsKIAlpZiAobG9jYWwgIT0gbnVsbCAmJiAobG9jYWwudHlwZS50YWdCaXRzICYgVGFn
Qml0cy5Jc0Jhc2VUeXBlKSA9PSAwKSB7CiAJCWlmIChudWxsU3RhdHVzID09IEZsb3dJbmZvLk5V
TEwpIHsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvRmFrZWRUcmFja2luZ1ZhcmlhYmxlLmphdmEg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvYXN0L0Zha2VkVHJhY2tpbmdWYXJpYWJsZS5qYXZhCmluZGV4IGVlMTMwNDcuLmIz
NWE2N2MgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvRmFrZWRUcmFja2luZ1ZhcmlhYmxlLmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2FzdC9GYWtlZFRyYWNraW5nVmFyaWFibGUuamF2YQpAQCAtMSw1ICsxLDUg
QEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMTEgR0sgU29m
dHdhcmUgQUcgYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAxMSwgMjAxMiBHSyBTb2Z0
d2FyZSBBRyBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFt
IGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVu
ZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGlj
aCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAt
MTUsNyArMTUsNiBAQAogaW1wb3J0IGphdmEudXRpbC5NYXA7CiBpbXBvcnQgamF2YS51dGlsLk1h
cC5FbnRyeTsKIAotaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLkNoYXJPcGVy
YXRpb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNvZGVnZW4u
Q29kZVN0cmVhbTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZmxv
dy5GbG93Q29udGV4dDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
Zmxvdy5GbG93SW5mbzsKQEAgLTQ4LDIwICs0NywyOCBAQAogCXByaXZhdGUgc3RhdGljIGZpbmFs
IGludCBDTE9TRURfSU5fTkVTVEVEX01FVEhPRCA9IDQ7CiAJLy8gYSBsb2NhdGlvbiBpbmRlcGVu
ZGVudCBpc3N1ZSBoYXMgYmVlbiByZXBvcnRlZCBhbHJlYWR5IGFnYWluc3QgdGhpcyByZXNvdXJj
ZToKIAlwcml2YXRlIHN0YXRpYyBmaW5hbCBpbnQgUkVQT1JURUQgPSA4OwotCQorCS8vIGEgcmVz
b3VyY2UgaXMgd3JhcHBlZCBpbiBhbm90aGVyIHJlc291cmNlOgorCXByaXZhdGUgc3RhdGljIGZp
bmFsIGludCBXUkFQUEVEID0gMTY7CisKKwlwcml2YXRlIHN0YXRpYyBmaW5hbCBpbnQgRE9VQlRf
TUFTSyA9IENMT1NFX1NFRU4gfCBQQVNTRURfVE9fT1VUU0lERSB8IENMT1NFRF9JTl9ORVNURURf
TUVUSE9EIHwgUkVQT1JURUQ7IC8vIG5vdCBXUkFQUEVECisKIAkvKioKLQkgKiBCaXRzZXQgb2Yg
e0BsaW5rICNDTE9TRV9TRUVOfSwge0BsaW5rICNQQVNTRURfVE9fT1VUU0lERX0sIHtAbGluayAj
Q0xPU0VEX0lOX05FU1RFRF9NRVRIT0R9IGFuZCB7QGxpbmsgI1JFUE9SVEVEfS4KKwkgKiBCaXRz
ZXQgb2Yge0BsaW5rICNDTE9TRV9TRUVOfSwge0BsaW5rICNQQVNTRURfVE9fT1VUU0lERX0sIHtA
bGluayAjQ0xPU0VEX0lOX05FU1RFRF9NRVRIT0R9LCB7QGxpbmsgI1JFUE9SVEVEfSBhbmQge0Bs
aW5rICNXUkFQUEVEfS4KIAkgKi8KIAlwcml2YXRlIGludCBnbG9iYWxDbG9zaW5nU3RhdGUgPSAw
OwogCisJcHVibGljIExvY2FsVmFyaWFibGVCaW5kaW5nIG9yaWdpbmFsQmluZGluZzsgLy8gdGhl
IHJlYWwgbG9jYWwgYmVpbmcgdHJhY2tlZCwgY2FuIGJlIG51bGwgZm9yIHByZWxpbWluYXJ5IHRy
YWNrIHZhcnMgZm9yIGFsbG9jYXRpb24gZXhwcmVzc2lvbnMKKwkKKwlwdWJsaWMgRmFrZWRUcmFj
a2luZ1ZhcmlhYmxlIGlubmVyVHJhY2tlcjsgLy8gY2hhaW5lZCB0cmFja2luZyB2YXJpYWJsZSBv
ZiBhIGNoYWluZWQgKHdyYXBwZWQpIHJlc291cmNlCisKIAlNZXRob2RTY29wZSBtZXRob2RTY29w
ZTsgLy8gZGVzaWduYXRlcyB0aGUgbWV0aG9kIGRlY2xhcmluZyB0aGlzIHZhcmlhYmxlCi0JCi0J
cHVibGljIExvY2FsVmFyaWFibGVCaW5kaW5nIG9yaWdpbmFsQmluZGluZzsgLy8gdGhlIHJlYWwg
bG9jYWwgYmVpbmcgdHJhY2tlZAotCQotCUhhc2hNYXAgcmVjb3JkZWRMb2NhdGlvbnM7IC8vIGlu
aXRpYWxseSBudWxsLCBBU1ROb2RlIC0+IEludGVnZXIgCiAKKwlwcml2YXRlIEhhc2hNYXAgcmVj
b3JkZWRMb2NhdGlvbnM7IC8vIGluaXRpYWxseSBudWxsLCBBU1ROb2RlIC0+IEludGVnZXIKIAot
CXB1YmxpYyBGYWtlZFRyYWNraW5nVmFyaWFibGUoTG9jYWxWYXJpYWJsZUJpbmRpbmcgb3JpZ2lu
YWwsIFN0YXRlbWVudCBsb2NhdGlvbikgeworCS8vIHRlbXBvcmFyeSBzdG9yYWdlIHdoaWxlIGFu
YWx5emluZyAicmVzID0gbmV3IFJlcygpOyI6CisJcHJpdmF0ZSBBU1ROb2RlIGN1cnJlbnRBc3Np
Z25tZW50OyAvLyB0ZW1wb3JhcmlseSBzdG9yZSB0aGUgYXNzaWdubWVudCBhcyB0aGUgbG9jYXRp
b24gZm9yIGVycm9yIHJlcG9ydGluZworCisJcHVibGljIEZha2VkVHJhY2tpbmdWYXJpYWJsZShM
b2NhbFZhcmlhYmxlQmluZGluZyBvcmlnaW5hbCwgQVNUTm9kZSBsb2NhdGlvbikgewogCQlzdXBl
cihvcmlnaW5hbC5uYW1lLCBsb2NhdGlvbi5zb3VyY2VTdGFydCwgbG9jYXRpb24uc291cmNlRW5k
KTsKIAkJdGhpcy50eXBlID0gbmV3IFNpbmdsZVR5cGVSZWZlcmVuY2UoCiAJCQkJVHlwZUNvbnN0
YW50cy5PQkpFQ1QsCkBAIC02OSw2ICs3NiwxNyBAQAogCQl0aGlzLm1ldGhvZFNjb3BlID0gb3Jp
Z2luYWwuZGVjbGFyaW5nU2NvcGUubWV0aG9kU2NvcGUoKTsKIAkJdGhpcy5vcmlnaW5hbEJpbmRp
bmcgPSBvcmlnaW5hbDsKIAkJcmVzb2x2ZShvcmlnaW5hbC5kZWNsYXJpbmdTY29wZSk7CisJfQor
CisJLyogQ3JlYXRlIGFuIHVuYXNzaWduZWQgdHJhY2tpbmcgdmFyaWFibGUgd2hpbGUgYW5hbHl6
aW5nIGFuIGFsbG9jYXRpb24gZXhwcmVzc2lvbjogKi8KKwlwcml2YXRlIEZha2VkVHJhY2tpbmdW
YXJpYWJsZShCbG9ja1Njb3BlIHNjb3BlLCBBU1ROb2RlIGxvY2F0aW9uKSB7CisJCXN1cGVyKCI8
dW5hc3NpZ25lZCBDbG9zZWFibGUgdmFsdWU+Ii50b0NoYXJBcnJheSgpLCBsb2NhdGlvbi5zb3Vy
Y2VTdGFydCwgbG9jYXRpb24uc291cmNlRW5kKTsgLy8kTk9OLU5MUy0xJAorCQl0aGlzLnR5cGUg
PSBuZXcgU2luZ2xlVHlwZVJlZmVyZW5jZSgKKwkJCQlUeXBlQ29uc3RhbnRzLk9CSkVDVCwKKwkJ
CQkoKGxvbmcpdGhpcy5zb3VyY2VTdGFydCA8PDMyKSt0aGlzLnNvdXJjZUVuZCk7CisJCXRoaXMu
bWV0aG9kU2NvcGUgPSBzY29wZS5tZXRob2RTY29wZSgpOworCQl0aGlzLm9yaWdpbmFsQmluZGlu
ZyA9IG51bGw7CisJCXJlc29sdmUoc2NvcGUpOwogCX0KIAkKIAlwdWJsaWMgdm9pZCBnZW5lcmF0
ZUNvZGUoQmxvY2tTY29wZSBjdXJyZW50U2NvcGUsIENvZGVTdHJlYW0gY29kZVN0cmVhbSkKQEAg
LTg4LDggKzEwNiwxMiBAQAogCX0KIAogCS8qKgotCSAqIElmIGV4cHJlc3Npb24gcmVzb2x2ZXMg
dG8gYSBsb2NhbCB2YXJpYWJsZSBiaW5kaW5nIG9mIHR5cGUgQXV0b0Nsb3NlYWJsZSwKLQkgKiBh
bnN3ZXIgdGhlIHZhcmlhYmxlIHRoYXQgdHJhY2tzIGNsb3Npbmcgb2YgdGhhdCBsb2NhbCwgY3Jl
YXRpbmcgaXQgaWYgbmVlZGVkLgorCSAqIElmIGV4cHJlc3Npb24gcmVzb2x2ZXMgdG8gYSB2YWx1
ZSBvZiB0eXBlIEF1dG9DbG9zZWFibGUgYW5zd2VyIHRoZSB2YXJpYWJsZSB0aGF0IHRyYWNrcyBj
bG9zaW5nIG9mIHRoYXQgbG9jYWwuCisJICogQ292ZXJzIHR3byBjYXNlczoKKwkgKiA8dWw+CisJ
ICogPGxpPnZhbHVlIGlzIGEgbG9jYWwgdmFyaWFibGUgcmVmZXJlbmNlLCBjcmVhdGUgdHJhY2tp
bmcgdmFyaWFibGUgaXQgaWYgbmVlZGVkLgorCSAqIDxsaT52YWx1ZSBpcyBhbiBhbGxvY2F0aW9u
IGV4cHJlc3Npb24sIHJldHVybiBhIHByZWxpbWluYXJ5IHRyYWNraW5nIHZhcmlhYmxlIGlmIHNl
dC4KKwkgKiA8L3VsPgogCSAqIEBwYXJhbSBleHByZXNzaW9uCiAJICogQHJldHVybiBhIG5ldyB7
QGxpbmsgRmFrZWRUcmFja2luZ1ZhcmlhYmxlfSBvciBudWxsLgogCSAqLwpAQCAtMTA3LDUxICsx
MjksMjU4IEBACiAJCQkJU3RhdGVtZW50IGxvY2F0aW9uID0gbG9jYWwuZGVjbGFyYXRpb247CiAJ
CQkJcmV0dXJuIGxvY2FsLmNsb3NlVHJhY2tlciA9IG5ldyBGYWtlZFRyYWNraW5nVmFyaWFibGUo
bG9jYWwsIGxvY2F0aW9uKTsKIAkJCX0KLQkJfQorCQl9IGVsc2UgaWYgKGV4cHJlc3Npb24gaW5z
dGFuY2VvZiBBbGxvY2F0aW9uRXhwcmVzc2lvbikgeworCQkJLy8gcmV0dXJuIGFueSBwcmVsaW1p
bmFyeSB0cmFja2luZyB2YXJpYWJsZSBmcm9tIGFuYWx5c2VDbG9zZWFibGVBbGxvY2F0aW9uIAor
CQkJcmV0dXJuICgoQWxsb2NhdGlvbkV4cHJlc3Npb24pIGV4cHJlc3Npb24pLmNsb3NlVHJhY2tl
cjsKKwkJfQkJCiAJCXJldHVybiBudWxsOwogCX0KIAotCS8qKiBpZiAnaW52b2NhdGlvblNpdGUn
IGlzIGEgY2FsbCB0byBjbG9zZSgpIHRoYXQgaGFzIGEgcmVnaXN0ZXJlZCB0cmFja2luZyB2YXJp
YWJsZSwgYW5zd2VyIHRoYXQgdmFyaWFibGUncyBiaW5kaW5nLiAqLwotCXB1YmxpYyBzdGF0aWMg
TG9jYWxWYXJpYWJsZUJpbmRpbmcgZ2V0VHJhY2tlckZvckNsb3NlQ2FsbChBU1ROb2RlIGludm9j
YXRpb25TaXRlKSB7Ci0JCWlmIChpbnZvY2F0aW9uU2l0ZSBpbnN0YW5jZW9mIE1lc3NhZ2VTZW5k
KSB7Ci0JCQlNZXNzYWdlU2VuZCBzZW5kID0gKE1lc3NhZ2VTZW5kKSBpbnZvY2F0aW9uU2l0ZTsK
LQkJCWlmIChDaGFyT3BlcmF0aW9uLmVxdWFscyhUeXBlQ29uc3RhbnRzLkNMT1NFLCBzZW5kLnNl
bGVjdG9yKSAmJiBzZW5kLnJlY2VpdmVyIGluc3RhbmNlb2YgU2luZ2xlTmFtZVJlZmVyZW5jZSkg
ewotCQkJCUJpbmRpbmcgcmVjZWl2ZXJCaW5kaW5nID0gKChTaW5nbGVOYW1lUmVmZXJlbmNlKXNl
bmQucmVjZWl2ZXIpLmJpbmRpbmc7Ci0JCQkJaWYgKHJlY2VpdmVyQmluZGluZyBpbnN0YW5jZW9m
IExvY2FsVmFyaWFibGVCaW5kaW5nKSB7Ci0JCQkJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSB0cmFj
a2luZ1ZhcmlhYmxlID0gKChMb2NhbFZhcmlhYmxlQmluZGluZylyZWNlaXZlckJpbmRpbmcpLmNs
b3NlVHJhY2tlcjsKLQkJCQkJaWYgKHRyYWNraW5nVmFyaWFibGUgIT0gbnVsbCkKLQkJCQkJCXJl
dHVybiB0cmFja2luZ1ZhcmlhYmxlLmJpbmRpbmc7Ci0JCQkJfQorCS8qKgorCSAqIEJlZm9yZSBh
bmFseXppbmcgYW4gYXNzaWdubWVudCBvZiB0aGlzIHNoYXBlOiA8Y29kZT5zaW5nbGVOYW1lID0g
bmV3IEFsbG9jYXRpb24oKTwvY29kZT4KKwkgKiBjb25uZWN0IGFueSB0cmFja2luZyB2YXJpYWJs
ZSBvZiB0aGUgTEhTIHdpdGggdGhlIGFsbG9jYXRpb24gb24gdGhlIFJIUy4KKwkgKiBBbHNvIHRo
ZSBhc3NpZ25tZW50IGlzIHRlbXBvcmFyaWx5IHN0b3JlZCBpbiB0aGUgdHJhY2tpbmcgdmFyaWFi
bGUgaW4gY2FzZSB3ZSBuZWVkIHRvCisJICogcmVwb3J0IGVycm9ycyBiZWNhdXNlIHRoZSBhc3Np
Z25tZW50IGxlYXZlcyB0aGUgb2xkIExIUyB2YWx1ZSB1bmNsb3NlZC4KKwkgKiBJbiB0aGlzIGNh
c2UgdGhlIGFzc2lnbm1lbnQgc2hvdWxkIGJlIHVzZWQgYXMgdGhlIGVycm9yIGxvY2F0aW9uLgor
CSAqIAorCSAqIEBwYXJhbSBsb2NhdGlvbiB0aGUgYXNzaWdubWVudC9sb2NhbCBkZWNsYXJhdGlv
biBiZWluZyBhbmFseXplZAorCSAqIEBwYXJhbSBsb2NhbCB0aGUgbG9jYWwgdmFyaWFibGUgYmVp
bmcgYXNzaWduZWQgdG8KKwkgKiBAcGFyYW0gcmhzIHRoZSByaHMgb2YgdGhlIGFzc2lnbm1lbnQg
cmVzcC4gdGhlIGluaXRpYWxpemF0aW9uIG9mIHRoZSBsb2NhbCB2YXJpYWJsZSBkZWNsYXJhdGlv
bi4KKwkgKi8KKwlwdWJsaWMgc3RhdGljIHZvaWQgcHJlQ29ubmVjdFRyYWNrZXJBY3Jvc3NBc3Np
Z25tZW50KEFTVE5vZGUgbG9jYXRpb24sIExvY2FsVmFyaWFibGVCaW5kaW5nIGxvY2FsLCBFeHBy
ZXNzaW9uIHJocykgeworCQlGYWtlZFRyYWNraW5nVmFyaWFibGUgY2xvc2VUcmFja2VyID0gbnVs
bDsKKwkJaWYgKHJocyBpbnN0YW5jZW9mIEFsbG9jYXRpb25FeHByZXNzaW9uKSB7CisJCQljbG9z
ZVRyYWNrZXIgPSBsb2NhbC5jbG9zZVRyYWNrZXI7CisJCQlpZiAoY2xvc2VUcmFja2VyID09IG51
bGwpIHsKKwkJCQlpZiAoaXNBdXRvQ2xvc2VhYmxlKHJocy5yZXNvbHZlZFR5cGUpKSB7CisJCQkJ
CWNsb3NlVHJhY2tlciA9IG5ldyBGYWtlZFRyYWNraW5nVmFyaWFibGUobG9jYWwsIGxvY2F0aW9u
KTsKKwkJCQl9CQkJCQkKKwkJCX0KKwkJCWlmIChjbG9zZVRyYWNrZXIgIT0gbnVsbCkgeworCQkJ
CWNsb3NlVHJhY2tlci5jdXJyZW50QXNzaWdubWVudCA9IGxvY2F0aW9uOworCQkJCSgoQWxsb2Nh
dGlvbkV4cHJlc3Npb24pcmhzKS5jbG9zZVRyYWNrZXIgPSBjbG9zZVRyYWNrZXI7CiAJCQl9CiAJ
CX0KLQkJcmV0dXJuIG51bGw7CisJfQorCisJLyoqIAorCSAqIENvbXB1dGUvYXNzaWduIGEgdHJh
Y2tpbmcgdmFyaWFibGUgZm9yIGEgZnJlc2hseSBhbGxvY2F0ZWQgY2xvc2VhYmxlIHZhbHVlLCB1
c2luZyBpbmZvcm1hdGlvbiBmcm9tIG91ciB3aGl0ZSBsaXN0cy4KKwkgKiBTZWUgIEJ1ZyAzNTg5
MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5n
cyAKKwkgKi8KKwlwdWJsaWMgc3RhdGljIHZvaWQgYW5hbHlzZUNsb3NlYWJsZUFsbG9jYXRpb24o
QmxvY2tTY29wZSBzY29wZSwgRmxvd0luZm8gZmxvd0luZm8sIEFsbG9jYXRpb25FeHByZXNzaW9u
IGFsbG9jYXRpb24pIHsKKwkJLy8gY2xpZW50IGhhcyBjaGVja2VkIHRoYXQgdGhlIHJlc29sdmVk
VHlwZSBpcyBhbiBBdXRvQ2xvc2VhYmxlLCBoZW5jZSB0aGUgZm9sbG93aW5nIGNhc3QgaXMgc2Fm
ZToKKwkJaWYgKCgoUmVmZXJlbmNlQmluZGluZylhbGxvY2F0aW9uLnJlc29sdmVkVHlwZSkuaGFz
VHlwZUJpdChUeXBlSWRzLkJpdFJlc291cmNlRnJlZUNsb3NlYWJsZSkpIHsKKwkJCS8vIHJlbW92
ZSB1bm5lY2Vzc2FyeSBhdHRlbXB0cyAoY2xvc2VhYmxlIGlzIG5vdCByZWxldmFudCkKKwkJCWlm
IChhbGxvY2F0aW9uLmNsb3NlVHJhY2tlciAhPSBudWxsKSB7CisJCQkJc2NvcGUucmVtb3ZlVHJh
Y2tpbmdWYXIoYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIpOworCQkJCWFsbG9jYXRpb24uY2xvc2VU
cmFja2VyID0gbnVsbDsKKwkJCX0KKwkJfSBlbHNlIGlmICgoKFJlZmVyZW5jZUJpbmRpbmcpYWxs
b2NhdGlvbi5yZXNvbHZlZFR5cGUpLmhhc1R5cGVCaXQoVHlwZUlkcy5CaXRXcmFwcGVyQ2xvc2Vh
YmxlKSkgeworCQkJaWYgKGFsbG9jYXRpb24uYXJndW1lbnRzICE9IG51bGwgJiYgIGFsbG9jYXRp
b24uYXJndW1lbnRzLmxlbmd0aCA+IDApIHsKKwkJCQkvLyBmaW5kIHRoZSB3cmFwcGVkIHJlc291
cmNlIHJlcHJlc2VudGVkIGJ5IGl0cyB0cmFja2luZyB2YXI6CisJCQkJRmFrZWRUcmFja2luZ1Zh
cmlhYmxlIGlubmVyVHJhY2tlciA9IGFuYWx5c2VDbG9zZWFibGVBbGxvY2F0aW9uQXJndW1lbnQo
c2NvcGUsIGZsb3dJbmZvLCBhbGxvY2F0aW9uLCBhbGxvY2F0aW9uLmFyZ3VtZW50c1swXSk7CisJ
CQkJaWYgKGlubmVyVHJhY2tlciAhPSBudWxsKSB7CisJCQkJCWlmIChpbm5lclRyYWNrZXIgPT0g
YWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIpCisJCQkJCQlyZXR1cm47IC8vIHNlbGYgd3JhcCAocmVz
ID0gbmV3IFJlcyhyZXMpKSAtPiBuZWl0aGVyIGNoYW5nZSAoaGVyZSkgbm9yIHJlbW92ZSAoYmVs
b3cpCisJCQkJCWlmIChhbGxvY2F0aW9uLmNsb3NlVHJhY2tlciA9PSBudWxsKSB7CisJCQkJCQlh
bGxvY2F0aW9uLmNsb3NlVHJhY2tlciA9IG5ldyBGYWtlZFRyYWNraW5nVmFyaWFibGUoc2NvcGUs
IGFsbG9jYXRpb24pOyAvLyBubyBsb2NhbCBhdmFpbGFibGUsIGNsb3NlYWJsZSBpcyB1bmFzc2ln
bmVkCisJCQkJCX0KKwkJCQkJYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIuaW5uZXJUcmFja2VyID0g
aW5uZXJUcmFja2VyOworCQkJCQlpbm5lclRyYWNrZXIuZ2xvYmFsQ2xvc2luZ1N0YXRlIHw9IFdS
QVBQRUQ7CisJCQkJCWZsb3dJbmZvLm1hcmtBc0RlZmluaXRlbHlOdWxsKGFsbG9jYXRpb24uY2xv
c2VUcmFja2VyLmJpbmRpbmcpOworCQkJCQlyZXR1cm47IC8vIGtlZXAgY2hhaW5pbmcgd3JhcHBl
cgorCQkJCX0KKwkJCX0KKwkJCS8vIHJlbW92ZSB1bm5lY2Vzc2FyeSBhdHRlbXB0cyAod3JhcHBl
ciBoYXMgbm8gcmVsZXZhbnQgaW5uZXIpCisJCQlpZiAoYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIg
IT0gbnVsbCkgeworCQkJCXNjb3BlLnJlbW92ZVRyYWNraW5nVmFyKGFsbG9jYXRpb24uY2xvc2VU
cmFja2VyKTsKKwkJCQlhbGxvY2F0aW9uLmNsb3NlVHJhY2tlciA9IG51bGw7CisJCQl9CisJCX0g
ZWxzZSB7IC8vIHJlZ3VsYXIgcmVzb3VyY2UKKwkJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSBwcmVz
ZXRUcmFja2VyID0gYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXI7CisJCQlpZiAocHJlc2V0VHJhY2tl
ciAhPSBudWxsICYmIHByZXNldFRyYWNrZXIub3JpZ2luYWxCaW5kaW5nICE9IG51bGwpIHsKKwkJ
CQlpbnQgY2xvc2VTdGF0dXMgPSBmbG93SW5mby5udWxsU3RhdHVzKHByZXNldFRyYWNrZXIuYmlu
ZGluZyk7CisJCQkJaWYgKGNsb3NlU3RhdHVzICE9IEZsb3dJbmZvLk5PTl9OVUxMCisJCQkJCQkm
JiAhZmxvd0luZm8uaXNEZWZpbml0ZWx5TnVsbChwcmVzZXRUcmFja2VyLm9yaWdpbmFsQmluZGlu
ZykKKwkJCQkJCSYmICEocHJlc2V0VHJhY2tlci5jdXJyZW50QXNzaWdubWVudCBpbnN0YW5jZW9m
IExvY2FsRGVjbGFyYXRpb24pKQorCQkJCQlhbGxvY2F0aW9uLmNsb3NlVHJhY2tlci5yZWNvcmRF
cnJvckxvY2F0aW9uKHByZXNldFRyYWNrZXIuY3VycmVudEFzc2lnbm1lbnQsIGNsb3NlU3RhdHVz
KTsKKwkJCX0gZWxzZSB7CisJCQkJYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIgPSBuZXcgRmFrZWRU
cmFja2luZ1ZhcmlhYmxlKHNjb3BlLCBhbGxvY2F0aW9uKTsgLy8gbm8gbG9jYWwgYXZhaWxhYmxl
LCBjbG9zZWFibGUgaXMgdW5hc3NpZ25lZAorCQkJfQorCQkJZmxvd0luZm8ubWFya0FzRGVmaW5p
dGVseU51bGwoYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIuYmluZGluZyk7CisJCX0KKwl9CisKKwkv
KiogRmluZCBhbiBleGlzdGluZyB0cmFja2luZyB2YXJpYWJsZSBmb3IgdGhlIGFyZ3VtZW50IG9m
IGFuIGFsbG9jYXRpb24gZm9yIGEgcmVzb3VyY2Ugd3JhcHBlci4gKi8KKwlwdWJsaWMgc3RhdGlj
IEZha2VkVHJhY2tpbmdWYXJpYWJsZSBhbmFseXNlQ2xvc2VhYmxlQWxsb2NhdGlvbkFyZ3VtZW50
KEJsb2NrU2NvcGUgc2NvcGUsIEZsb3dJbmZvIGZsb3dJbmZvLCBBbGxvY2F0aW9uRXhwcmVzc2lv
biBhbGxvY2F0aW9uLCBFeHByZXNzaW9uIGFyZykKKwl7CisJCXdoaWxlIChhcmcgaW5zdGFuY2Vv
ZiBBc3NpZ25tZW50KSB7CisJCQlBc3NpZ25tZW50IGFzc2lnbiA9IChBc3NpZ25tZW50KWFyZzsK
KwkJCUxvY2FsVmFyaWFibGVCaW5kaW5nIGlubmVyTG9jYWwgPSBhc3NpZ24ubG9jYWxWYXJpYWJs
ZUJpbmRpbmcoKTsKKwkJCWlmIChpbm5lckxvY2FsICE9IG51bGwpIHsKKwkJCQkvLyBuZXN0ZWQg
YXNzaWdubWVudCBoYXMgYWxyZWFkeSBiZWVuIHByb2Nlc3NlZAorCQkJCXJldHVybiBpbm5lckxv
Y2FsLmNsb3NlVHJhY2tlcjsKKwkJCX0gZWxzZSB7CisJCQkJYXJnID0gYXNzaWduLmV4cHJlc3Np
b247IC8vIHVud3JhcCBhc3NpZ25tZW50IGFuZCBmYWxsIHRocm91Z2gKKwkJCX0KKwkJfQorCQlp
ZiAoYXJnIGluc3RhbmNlb2YgU2luZ2xlTmFtZVJlZmVyZW5jZSkgeworCQkJLy8gaXMgYWxsb2Nh
dGlvbiBhcmcgYSByZWZlcmVuY2UgdG8gYW4gZXhpc3RpbmcgY2xvc2VhYmxlPworCQkJTG9jYWxW
YXJpYWJsZUJpbmRpbmcgbG9jYWwgPSBhcmcubG9jYWxWYXJpYWJsZUJpbmRpbmcoKTsKKwkJCWlm
IChsb2NhbCAhPSBudWxsKSB7CisJCQkJcmV0dXJuIGxvY2FsLmNsb3NlVHJhY2tlcjsKKwkJCX0K
KwkJfSBlbHNlIGlmIChhcmcgaW5zdGFuY2VvZiBBbGxvY2F0aW9uRXhwcmVzc2lvbiAmJiBhcmcu
cmVzb2x2ZWRUeXBlIGluc3RhbmNlb2YgUmVmZXJlbmNlQmluZGluZykgeworCQkJLy8gbmVzdGVk
IGFsbG9jYXRpb24KKwkJCXJldHVybiAoKEFsbG9jYXRpb25FeHByZXNzaW9uKWFyZykuY2xvc2VU
cmFja2VyOworCQl9CisJCXJldHVybiBudWxsOyAvLyBub3QgYSB0cmFja2VkIGV4cHJlc3Npb24K
IAl9CiAKIAkvKiogCiAJICogQ2hlY2sgaWYgdGhlIHJocyBvZiBhbiBhc3NpZ25tZW50IG9yIGxv
Y2FsIGRlY2xhcmF0aW9uIGlzIGFuIChBdXRvKUNsb3NlYWJsZS4KLQkgKiBJZiBzbyBjcmVhdGUg
b3IgcmUtdXNlIGEgdHJhY2tpbmcgdmFyaWFibGUsIGFuZCB3aXJlIGFuZCBpbml0aWFsaXplIGV2
ZXJ5dGhpbmcuIAorCSAqIElmIHNvIGNyZWF0ZSBvciByZS11c2UgYSB0cmFja2luZyB2YXJpYWJs
ZSwgYW5kIHdpcmUgYW5kIGluaXRpYWxpemUgZXZlcnl0aGluZy4KKwkgKiBAcGFyYW0gdXBzdHJl
YW1JbmZvIGluZm8gd2l0aG91dCBhbmFseXNpcyBvZiB0aGUgcmhzLCB1c2UgdGhpcyB0byBkZXRl
cm1pbmUgdGhlIHN0YXR1cyBvZiBhIHJlc291cmNlIGJlaW5nIGRpc2Nvbm5lY3RlZAorCSAqIEBw
YXJhbSBmbG93SW5mbyBpbmZvIHdpdGggYW5hbHlzaXMgb2YgdGhlIHJocywgdXNlIHRoaXMgZm9y
IHJlY29yZGluZyByZXNvdXJjZSBzdGF0dXMgYmVjYXVzZSB0aGlzIHdpbGwgYmUgcGFzc2VkIGRv
d25zdHJlYW0KKwkgKiBAcGFyYW0gbG9jYXRpb24gd2hlcmUgdG8gcmVwb3J0IHdhcm5pZ3MvZXJy
b3JzIGFnYWluc3QKKwkgKiBAcGFyYW0gcmhzIHRoZSByaWdodCBoYW5kIHNpZGUgb2YgdGhlIGFz
c2lnbm1lbnQsIHRoaXMgZXhwcmVzc2lvbiBpcyB0byBiZSBhbmFseXplZC4KKwkgKgkJCVRoZSBj
YWxsZXIgaGFzIGFscmVhZHkgY2hlY2tlZCB0aGF0IHRoZSByaHMgaXMgZWl0aGVyIG9mIGEgY2xv
c2VhYmxlIHR5cGUgb3IgbnVsbC4KKwkgKiBAcGFyYW0gbG9jYWwgdGhlIGxvY2FsIHZhcmlhYmxl
IGludG8gd2hpY2ggdGhlIHJocyBpcyBiZWluZyBhc3NpZ25lZAogCSAqLwotCXB1YmxpYyBzdGF0
aWMgdm9pZCBoYW5kbGVSZXNvdXJjZUFzc2lnbm1lbnQoRmxvd0luZm8gZmxvd0luZm8sIFN0YXRl
bWVudCBsb2NhdGlvbiwgRXhwcmVzc2lvbiByaHMsIExvY2FsVmFyaWFibGVCaW5kaW5nIGxvY2Fs
LAotCQkJCUxvY2FsVmFyaWFibGVCaW5kaW5nIHByZXZpb3VzVHJhY2tlckJpbmRpbmcpIAorCXB1
YmxpYyBzdGF0aWMgdm9pZCBoYW5kbGVSZXNvdXJjZUFzc2lnbm1lbnQoRmxvd0luZm8gdXBzdHJl
YW1JbmZvLCBGbG93SW5mbyBmbG93SW5mbywgQVNUTm9kZSBsb2NhdGlvbiwgRXhwcmVzc2lvbiBy
aHMsIExvY2FsVmFyaWFibGVCaW5kaW5nIGxvY2FsKQogCXsKLQkJaWYgKGlzQXV0b0Nsb3NlYWJs
ZShyaHMucmVzb2x2ZWRUeXBlKSkgeworCQkvLyBkb2VzIHRoZSBMSFMgKGxvY2FsKSBhbHJlYWR5
IGhhdmUgYSB0cmFja2VyLCBpbmRpY2F0aW5nIHdlIG1heSBsZWFrIGEgcmVzb3VyY2UgYnkgdGhl
IGFzc2lnbm1lbnQ/CisJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSBwcmV2aW91c1RyYWNrZXIgPSBu
dWxsOworCQlGYWtlZFRyYWNraW5nVmFyaWFibGUgZGlzY29ubmVjdGVkVHJhY2tlciA9IG51bGw7
CisJCWlmIChsb2NhbC5jbG9zZVRyYWNrZXIgIT0gbnVsbCkgeworCQkJLy8gYXNzaWduaW5nIHRv
IGEgdmFyaWFibGUgYWxyZWFkeSBob2xkaW5nIGFuIEF1dG9DbG9zZWFibGUsIGhhcyBpdCBiZWVu
IGNsb3NlZCBiZWZvcmU/CisJCQlwcmV2aW91c1RyYWNrZXIgPSBsb2NhbC5jbG9zZVRyYWNrZXI7
CisJCQlpbnQgbnVsbFN0YXR1cyA9IHVwc3RyZWFtSW5mby5udWxsU3RhdHVzKGxvY2FsKTsKKwkJ
CWlmIChudWxsU3RhdHVzICE9IEZsb3dJbmZvLk5VTEwgJiYgbnVsbFN0YXR1cyAhPSBGbG93SW5m
by5VTktOT1dOKSAvLyBvbmx5IGlmIHByZXZpb3VzIHZhbHVlIG1heSBiZSByZWxldmFudAorCQkJ
CWRpc2Nvbm5lY3RlZFRyYWNrZXIgPSBwcmV2aW91c1RyYWNrZXI7IC8vIHJlcG9ydCBlcnJvciBi
ZWxvdywgdW5sZXNzIHdlIGhhdmUgYSBzZWxmLXdyYXAgYXNzaWdubWVudAorCQl9CisKKwkJaWYg
KHJocy5yZXNvbHZlZFR5cGUgIT0gVHlwZUJpbmRpbmcuTlVMTCkgewogCQkJLy8gbmV3IHZhbHVl
IGlzIEF1dG9DbG9zZWFibGUsIHN0YXJ0IHRyYWNraW5nLCBwb3NzaWJseSByZS11c2luZyBleGlz
dGluZyB0cmFja2VyIHZhcjoKLQkKIAkJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSByaHNUcmFja1Zh
ciA9IGdldENsb3NlVHJhY2tpbmdWYXJpYWJsZShyaHMpOwotCQkJaWYgKHJoc1RyYWNrVmFyICE9
IG51bGwpIHsJCQkJCQkJCS8vIDEuIHNoYXJlIHRyYWNraW5nIHZhcmlhYmxlIHdpdGggUkhTPwot
CQkJCWxvY2FsLmNsb3NlVHJhY2tlciA9IHJoc1RyYWNrVmFyOwotCQkJCS8vIGtlZXAgbnVsbC1z
dGF0dXMgdW5jaGFuZ2VkIGFjcm9zcyB0aGlzIGFzc2lnbm1lbnQKLQkJCX0gZWxzZSBpZiAocHJl
dmlvdXNUcmFja2VyQmluZGluZyAhPSBudWxsKSB7CQkJLy8gMi4gcmUtdXNlIHRyYWNraW5nIHZh
cmlhYmxlIGZyb20gdGhlIExIUz8KLQkJCQkvLyByZS1hc3NpZ25pbmcgZnJvbSBhIGZyZXNoLCBt
YXJrIGFzIG5vdC1jbG9zZWQgYWdhaW46Ci0JCQkJZmxvd0luZm8ubWFya0FzRGVmaW5pdGVseU51
bGwocHJldmlvdXNUcmFja2VyQmluZGluZyk7CisJCQlpZiAocmhzVHJhY2tWYXIgIT0gbnVsbCkg
ewkJCQkJCQkJLy8gMS4gaWYgUkhTIGhhcyBhIHRyYWNraW5nIHZhcmlhYmxlLi4uCisJCQkJaWYg
KGxvY2FsLmNsb3NlVHJhY2tlciA9PSBudWxsKSB7CisJCQkJCS8vIG51bGwgc2hvdWxkbid0IG9j
Y3VyIGJ1dCBsZXQncyBwbGF5IHNhZmUKKwkJCQkJaWYgKHJoc1RyYWNrVmFyLm9yaWdpbmFsQmlu
ZGluZyAhPSBudWxsKQorCQkJCQkJbG9jYWwuY2xvc2VUcmFja2VyID0gcmhzVHJhY2tWYXI7CQkJ
Ly8JCWEuOiBsZXQgZnJlc2ggTEhTIHNoYXJlIGl0IAorCQkJCX0gZWxzZSB7CisJCQkJCWlmIChy
aHNUcmFja1ZhciA9PSBkaXNjb25uZWN0ZWRUcmFja2VyICYmIHJocyBpbnN0YW5jZW9mIEFsbG9j
YXRpb25FeHByZXNzaW9uKQorCQkJCQkJcmV0dXJuOyAJCQkJCQkJCQkvLyAJCWIuOiBzZWxmIHdy
YXBwZXI6IHJlcyA9IG5ldyBXcmFwKHJlcyk7IC0+IGRvbmUhCisJCQkJCWxvY2FsLmNsb3NlVHJh
Y2tlciA9IHJoc1RyYWNrVmFyOwkJCQkvLwkJYy46IGNvbmZsaWN0aW5nIExIUyBhbmQgUkhTLCBw
cm9jZWVkIHdpdGggcmVjb3JkRXJyb3JMb2NhdGlvbiBiZWxvdworCQkJCX0KKwkJCQkvLyBrZWVw
IGNsb3NlLXN0YXR1cyBvZiBSSFMgdW5jaGFuZ2VkIGFjcm9zcyB0aGlzIGFzc2lnbm1lbnQKKwkJ
CX0gZWxzZSBpZiAocHJldmlvdXNUcmFja2VyICE9IG51bGwpIHsJCQkJCS8vIDIuIHJlLXVzZSB0
cmFja2luZyB2YXJpYWJsZSBmcm9tIHRoZSBMSFM/CisJCQkJLy8gcmUtYXNzaWduaW5nIGZyb20g
YSBmcmVzaCB2YWx1ZSwgbWFyayBhcyBub3QtY2xvc2VkIGFnYWluOgorCQkJCWZsb3dJbmZvLm1h
cmtBc0RlZmluaXRlbHlOdWxsKHByZXZpb3VzVHJhY2tlci5iaW5kaW5nKTsKKwkJCQlsb2NhbC5j
bG9zZVRyYWNrZXIgPSBhbmFseXNlQ2xvc2VhYmxlRXhwcmVzc2lvbihmbG93SW5mbywgbG9jYWws
IGxvY2F0aW9uLCByaHMsIHByZXZpb3VzVHJhY2tlcik7CiAJCQl9IGVsc2UgewkJCQkJCQkJCQkJ
CS8vIDMuIG5vIHJlLXVzZSwgY3JlYXRlIGEgZnJlc2ggdHJhY2tpbmcgdmFyaWFibGU6Ci0JCQkJ
bG9jYWwuY2xvc2VUcmFja2VyID0gbmV3IEZha2VkVHJhY2tpbmdWYXJpYWJsZShsb2NhbCwgbG9j
YXRpb24pOwotCQkJCS8vIGEgZnJlc2ggcmVzb3VyY2UsIG1hcmsgYXMgbm90LWNsb3NlZDoKLQkJ
CQlmbG93SW5mby5tYXJrQXNEZWZpbml0ZWx5TnVsbChsb2NhbC5jbG9zZVRyYWNrZXIuYmluZGlu
Zyk7CisJCQkJcmhzVHJhY2tWYXIgPSBhbmFseXNlQ2xvc2VhYmxlRXhwcmVzc2lvbihmbG93SW5m
bywgbG9jYWwsIGxvY2F0aW9uLCByaHMsIG51bGwpOworCQkJCWlmIChyaHNUcmFja1ZhciAhPSBu
dWxsKSB7CisJCQkJCWxvY2FsLmNsb3NlVHJhY2tlciA9IHJoc1RyYWNrVmFyOworCQkJCQkvLyBh
IGZyZXNoIHJlc291cmNlLCBtYXJrIGFzIG5vdC1jbG9zZWQ6CisJCQkJCWlmICgocmhzVHJhY2tW
YXIuZ2xvYmFsQ2xvc2luZ1N0YXRlICYgUEFTU0VEX1RPX09VVFNJREUpID09IDApCisJCQkJCQlm
bG93SW5mby5tYXJrQXNEZWZpbml0ZWx5TnVsbChyaHNUcmFja1Zhci5iaW5kaW5nKTsKIC8vIFRP
RE8oc3RlcGhhbik6IHRoaXMgbWlnaHQgYmUgdXNlZnVsLCBidXQgSSBjb3VsZCBub3QgZmluZCBh
IHRlc3QgY2FzZSBmb3IgaXQ6IAotLy8JCQkJaWYgKGZsb3dDb250ZXh0LmluaXRzT25GaW5hbGx5
ICE9IG51bGwpCi0vLwkJCQkJZmxvd0NvbnRleHQuaW5pdHNPbkZpbmFsbHkubWFya0FzRGVmaW5p
dGVseU5vbk51bGwodHJhY2tlckJpbmRpbmcpOworLy8JCQkJCWlmIChmbG93Q29udGV4dC5pbml0
c09uRmluYWxseSAhPSBudWxsKQorLy8JCQkJCQlmbG93Q29udGV4dC5pbml0c09uRmluYWxseS5t
YXJrQXNEZWZpbml0ZWx5Tm9uTnVsbCh0cmFja2VyQmluZGluZyk7CisJCQkJfQogCQkJfQorCQl9
CisKKwkJaWYgKGRpc2Nvbm5lY3RlZFRyYWNrZXIgIT0gbnVsbCkKKwkJCWRpc2Nvbm5lY3RlZFRy
YWNrZXIucmVjb3JkRXJyb3JMb2NhdGlvbihsb2NhdGlvbiwgdXBzdHJlYW1JbmZvLm51bGxTdGF0
dXMoZGlzY29ubmVjdGVkVHJhY2tlci5iaW5kaW5nKSk7CisJfQorCS8qKgorCSAqIEFuYWx5emUg
c3RydWN0dXJlIG9mIGEgY2xvc2VhYmxlIGV4cHJlc3Npb24sIG1hdGNoaW5nIChjaGFpbmVkKSBy
ZXNvdXJjZXMgYWdhaW5zdCBvdXIgd2hpdGUgbGlzdHMuCisJICogQHBhcmFtIGZsb3dJbmZvIHdo
ZXJlIHRvIHJlY29yZCBjbG9zZSBzdGF0dXMKKwkgKiBAcGFyYW0gbG9jYWwgbG9jYWwgdmFyaWFi
bGUgdG8gd2hpY2ggdGhlIGNsb3NlYWJsZSBpcyBiZWluZyBhc3NpZ25lZAorCSAqIEBwYXJhbSBs
b2NhdGlvbiB3aGVyZSB0byBmbGFnIGVycm9ycy93YXJuaW5ncyBhZ2FpbnN0CisJICogQHBhcmFt
IGV4cHJlc3Npb24gZXhwcmVzc2lvbiB0byBiZSBhbmFseXplZAorCSAqIEBwYXJhbSBwcmV2aW91
c1RyYWNrZXIgd2hlbiBhbmFseXppbmcgYSByZS1hc3NpZ25tZW50IHdlIG1heSBhbHJlYWR5IGhh
dmUgYSB0cmFja2luZyB2YXJpYWJsZSBmb3IgbG9jYWwsCisJICogIAkJd2hpY2ggd2Ugc2hvdWxk
IHRoZW4gcmUtdXNlCisJICogQHJldHVybiBhIHRyYWNraW5nIHZhcmlhYmxlIGFzc29jaWF0ZWQg
d2l0aCBsb2NhbCBvciBudWxsIGlmIG5vIG5lZWQgdG8gdHJhY2sKKwkgKi8KKwlwcml2YXRlIHN0
YXRpYyBGYWtlZFRyYWNraW5nVmFyaWFibGUgYW5hbHlzZUNsb3NlYWJsZUV4cHJlc3Npb24oRmxv
d0luZm8gZmxvd0luZm8sIExvY2FsVmFyaWFibGVCaW5kaW5nIGxvY2FsLCAKKwkJCQkJCQkJCUFT
VE5vZGUgbG9jYXRpb24sIEV4cHJlc3Npb24gZXhwcmVzc2lvbiwgRmFrZWRUcmFja2luZ1Zhcmlh
YmxlIHByZXZpb3VzVHJhY2tlcikgCisJeworCQkvLyB1bndyYXAgdW5pbnRlcmVzdGluZyBub2Rl
czoKKwkJd2hpbGUgKHRydWUpIHsKKwkJCWlmIChleHByZXNzaW9uIGluc3RhbmNlb2YgQXNzaWdu
bWVudCkKKwkJCQlleHByZXNzaW9uID0gKChBc3NpZ25tZW50KWV4cHJlc3Npb24pLmV4cHJlc3Np
b247CisJCQllbHNlIGlmIChleHByZXNzaW9uIGluc3RhbmNlb2YgQ2FzdEV4cHJlc3Npb24pCisJ
CQkJZXhwcmVzc2lvbiA9ICgoQ2FzdEV4cHJlc3Npb24pIGV4cHJlc3Npb24pLmV4cHJlc3Npb247
CisJCQllbHNlCisJCQkJYnJlYWs7CisJCX0KKworCQkvLyBhbmFseXplIGJ5IG5vZGUgdHlwZToK
KwkJaWYgKGV4cHJlc3Npb24gaW5zdGFuY2VvZiBBbGxvY2F0aW9uRXhwcmVzc2lvbikgeworCQkJ
Ly8gYWxsb2NhdGlvbiBleHByZXNzaW9ucyBhbHJlYWR5IGhhdmUgdGhlaXIgdHJhY2tpbmcgdmFy
aWFibGVzIGFuYWx5emVkIGJ5IGFuYWx5c2VDbG9zZWFibGVBbGxvY2F0aW9uKC4uKQorCQkJRmFr
ZWRUcmFja2luZ1ZhcmlhYmxlIHRyYWNrZXIgPSAoKEFsbG9jYXRpb25FeHByZXNzaW9uKSBleHBy
ZXNzaW9uKS5jbG9zZVRyYWNrZXI7CisJCQlpZiAodHJhY2tlciAhPSBudWxsICYmIHRyYWNrZXIu
b3JpZ2luYWxCaW5kaW5nID09IG51bGwpIHsKKwkJCQkvLyB0cmFja2VyIHdpdGhvdXQgb3JpZ2lu
YWwgYmluZGluZyAodW5hc3NpZ25lZCBjbG9zZWFibGUpIHNob3VsZG4ndCByZWFjaCBoZXJlIGJ1
dCBsZXQncyBwbGF5IHNhZmUKKwkJCQlyZXR1cm4gbnVsbDsKKwkJCX0KKwkJCXJldHVybiB0cmFj
a2VyOworCQl9IGVsc2UgaWYgKGV4cHJlc3Npb24gaW5zdGFuY2VvZiBNZXNzYWdlU2VuZCAKKwkJ
CQl8fCBleHByZXNzaW9uIGluc3RhbmNlb2YgQXJyYXlSZWZlcmVuY2UpIAorCQl7CisJCQkvLyB3
ZSAqbWlnaHQqIGJlIHJlc3BvbnNpYmxlIGZvciB0aGUgcmVzb3VyY2Ugb2J0YWluZWQKKwkJCUZh
a2VkVHJhY2tpbmdWYXJpYWJsZSB0cmFja2VyID0gbmV3IEZha2VkVHJhY2tpbmdWYXJpYWJsZShs
b2NhbCwgbG9jYXRpb24pOworCQkJdHJhY2tlci5nbG9iYWxDbG9zaW5nU3RhdGUgfD0gUEFTU0VE
X1RPX09VVFNJREU7CisJCQlmbG93SW5mby5tYXJrUG90ZW50aWFsbHlOdWxsQml0KHRyYWNrZXIu
YmluZGluZyk7CisJCQlyZXR1cm4gdHJhY2tlcjsJCQkKKwkJfSBlbHNlIGlmIChleHByZXNzaW9u
IGluc3RhbmNlb2YgRmllbGRSZWZlcmVuY2UgCisJCQkJfHwgZXhwcmVzc2lvbiBpbnN0YW5jZW9m
IFF1YWxpZmllZE5hbWVSZWZlcmVuY2UpIAorCQl7CisJCQkvLyByZXNwb25zaWJpbGl0eSBmb3Ig
dGhpcyByZXNvdXJjZSBwcm9iYWJseSBsaWVzIGF0IGEgaGlnaGVyIGxldmVsCisJCQlGYWtlZFRy
YWNraW5nVmFyaWFibGUgdHJhY2tlciA9IG5ldyBGYWtlZFRyYWNraW5nVmFyaWFibGUobG9jYWws
IGxvY2F0aW9uKTsKKwkJCXRyYWNrZXIuZ2xvYmFsQ2xvc2luZ1N0YXRlIHw9IFBBU1NFRF9UT19P
VVRTSURFOworCQkJZmxvd0luZm8ubWFya1BvdGVudGlhbGx5Tm9uTnVsbEJpdCh0cmFja2VyLmJp
bmRpbmcpOworCQkJcmV0dXJuIHRyYWNrZXI7CQkJCisJCX0KKworCQlpZiAoZXhwcmVzc2lvbi5y
ZXNvbHZlZFR5cGUgaW5zdGFuY2VvZiBSZWZlcmVuY2VCaW5kaW5nKSB7CisJCQlSZWZlcmVuY2VC
aW5kaW5nIHJlc291cmNlVHlwZSA9IChSZWZlcmVuY2VCaW5kaW5nKSBleHByZXNzaW9uLnJlc29s
dmVkVHlwZTsKKwkJCWlmIChyZXNvdXJjZVR5cGUuaGFzVHlwZUJpdChUeXBlSWRzLkJpdFJlc291
cmNlRnJlZUNsb3NlYWJsZSkpIHsKKwkJCQkvLyAoYSkgcmVzb3VyY2UtZnJlZSBjbG9zZWFibGU6
IC0+IG51bGwKKwkJCQlyZXR1cm4gbnVsbDsKKwkJCX0KKwkJfQorCQlpZiAobG9jYWwuY2xvc2VU
cmFja2VyICE9IG51bGwpCisJCQkvLyAoYyk6IGlubmVyIGhhcyBhbHJlYWR5IGJlZW4gYW5hbHl6
ZWQ6IC0+IHJlLXVzZSB0cmFjayB2YXIKKwkJCXJldHVybiBsb2NhbC5jbG9zZVRyYWNrZXI7CisJ
CXJldHVybiBuZXcgRmFrZWRUcmFja2luZ1ZhcmlhYmxlKGxvY2FsLCBsb2NhdGlvbik7CisJfQor
CisJcHVibGljIHN0YXRpYyB2b2lkIGNsZWFuVXBBZnRlckFzc2lnbm1lbnQoQmxvY2tTY29wZSBj
dXJyZW50U2NvcGUsIGludCBsaHNCaXRzLCBFeHByZXNzaW9uIGV4cHJlc3Npb24pIHsKKwkJLy8g
cmVtb3ZlIGFsbCByZW1haW5pbmcgdHJhY2sgdmFycyB3aXRoIG5vIG9yaWdpbmFsIGJpbmRpbmcK
KworCQkvLyB1bndyYXAgdW5pbnRlcmVzdGluZyBub2RlczoKKwkJd2hpbGUgKHRydWUpIHsKKwkJ
CWlmIChleHByZXNzaW9uIGluc3RhbmNlb2YgQXNzaWdubWVudCkKKwkJCQlleHByZXNzaW9uID0g
KChBc3NpZ25tZW50KWV4cHJlc3Npb24pLmV4cHJlc3Npb247CisJCQllbHNlIGlmIChleHByZXNz
aW9uIGluc3RhbmNlb2YgQ2FzdEV4cHJlc3Npb24pCisJCQkJZXhwcmVzc2lvbiA9ICgoQ2FzdEV4
cHJlc3Npb24pIGV4cHJlc3Npb24pLmV4cHJlc3Npb247CisJCQllbHNlCisJCQkJYnJlYWs7CisJ
CX0KKwkJaWYgKGV4cHJlc3Npb24gaW5zdGFuY2VvZiBBbGxvY2F0aW9uRXhwcmVzc2lvbikgewor
CQkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlIHRyYWNrZXIgPSAoKEFsbG9jYXRpb25FeHByZXNzaW9u
KSBleHByZXNzaW9uKS5jbG9zZVRyYWNrZXI7CisJCQlpZiAodHJhY2tlciAhPSBudWxsICYmIHRy
YWNrZXIub3JpZ2luYWxCaW5kaW5nID09IG51bGwpIHsKKwkJCQljdXJyZW50U2NvcGUucmVtb3Zl
VHJhY2tpbmdWYXIodHJhY2tlcik7CisJCQkJKChBbGxvY2F0aW9uRXhwcmVzc2lvbikgZXhwcmVz
c2lvbikuY2xvc2VUcmFja2VyID0gbnVsbDsKKwkJCX0KKwkJfSBlbHNlIHsKKwkJCS8vIGFzc2ln
bm1lbnQgcGFzc2luZyBhIGxvY2FsIGludG8gYSBmaWVsZD8KKwkJCUxvY2FsVmFyaWFibGVCaW5k
aW5nIGxvY2FsID0gZXhwcmVzc2lvbi5sb2NhbFZhcmlhYmxlQmluZGluZygpOworCQkJaWYgKGxv
Y2FsICE9IG51bGwgJiYgbG9jYWwuY2xvc2VUcmFja2VyICE9IG51bGwgJiYgKChsaHNCaXRzICYg
QmluZGluZy5GSUVMRCkgIT0gMCkpCisJCQkJY3VycmVudFNjb3BlLnJlbW92ZVRyYWNraW5nVmFy
KGxvY2FsLmNsb3NlVHJhY2tlcik7CiAJCX0KIAl9CiAKQEAgLTE1OSw2ICszODgsNzYgQEAKIAlw
dWJsaWMgc3RhdGljIGJvb2xlYW4gaXNBdXRvQ2xvc2VhYmxlKFR5cGVCaW5kaW5nIHR5cGVCaW5k
aW5nKSB7CiAJCXJldHVybiB0eXBlQmluZGluZyBpbnN0YW5jZW9mIFJlZmVyZW5jZUJpbmRpbmcK
IAkJCSYmICgoUmVmZXJlbmNlQmluZGluZyl0eXBlQmluZGluZykuaGFzVHlwZUJpdChUeXBlSWRz
LkJpdEF1dG9DbG9zZWFibGV8VHlwZUlkcy5CaXRDbG9zZWFibGUpOworCX0KKworCXB1YmxpYyBp
bnQgZmluZE1vc3RTcGVjaWZpY1N0YXR1cyhGbG93SW5mbyBmbG93SW5mbywgQmxvY2tTY29wZSBj
dXJyZW50U2NvcGUsIEJsb2NrU2NvcGUgbG9jYXRpb25TY29wZSkgeworCQlpbnQgc3RhdHVzID0g
Rmxvd0luZm8uVU5LTk9XTjsKKwkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlIGN1cnJlbnRUcmFja2Vy
ID0gdGhpczsKKwkJLy8gbG9vcCBhcyB0byBjb25zaWRlciB3cmFwcGVycyAocGVyIHdoaXRlIGxp
c3QpIGVuY2Fwc3VsYXRpbmcgYW4gaW5uZXIgcmVzb3VyY2UuCisJCXdoaWxlIChjdXJyZW50VHJh
Y2tlciAhPSBudWxsKSB7CisJCQlMb2NhbFZhcmlhYmxlQmluZGluZyBjdXJyZW50VmFyID0gY3Vy
cmVudFRyYWNrZXIuYmluZGluZzsKKwkJCWludCBjdXJyZW50U3RhdHVzID0gZ2V0TnVsbFN0YXR1
c0FnZ3Jlc3NpdmVseShjdXJyZW50VmFyLCBmbG93SW5mbyk7CisJCQlpZiAobG9jYXRpb25TY29w
ZSAhPSBudWxsKSAvLyBvbmx5IGNoZWNrIGF0IG1ldGhvZCBleGl0IHBvaW50cworCQkJCWN1cnJl
bnRTdGF0dXMgPSBtZXJnZUNsb3NlU3RhdHVzKGxvY2F0aW9uU2NvcGUsIGN1cnJlbnRTdGF0dXMs
IGN1cnJlbnRWYXIsIGN1cnJlbnRTY29wZSk7CisJCQlpZiAoY3VycmVudFN0YXR1cyA9PSBGbG93
SW5mby5OT05fTlVMTCkgeworCQkJCXN0YXR1cyA9IGN1cnJlbnRTdGF0dXM7CisJCQkJYnJlYWs7
IC8vIGNsb3NlZCAtPiBzdG9wIHNlYXJjaGluZworCQkJfSBlbHNlIGlmIChzdGF0dXMgPT0gRmxv
d0luZm8uTlVMTCB8fCBzdGF0dXMgPT0gRmxvd0luZm8uVU5LTk9XTikgeworCQkJCXN0YXR1cyA9
IGN1cnJlbnRTdGF0dXM7IC8vIGltcHJvdmVkIGFsdGhvdWdoIG5vdCB5ZXQgc2FmZSAtPiBrZWVw
IHNlYXJjaGluZyBmb3IgYmV0dGVyCisJCQl9CisJCQljdXJyZW50VHJhY2tlciA9IGN1cnJlbnRU
cmFja2VyLmlubmVyVHJhY2tlcjsKKwkJfQorCQlyZXR1cm4gc3RhdHVzOworCX0KKworCS8qKgor
CSAqIEdldCB0aGUgbnVsbCBzdGF0dXMgbG9va2luZyBldmVuIGludG8gdW5yZWFjaGFibGUgZmxv
d3MKKwkgKiBAcGFyYW0gbG9jYWwKKwkgKiBAcGFyYW0gZmxvd0luZm8KKwkgKiBAcmV0dXJuIG9u
ZSBvZiB0aGUgY29uc3RhbnRzIEZsb3dJbmZvLntOVUxMLFBPVEVOVElBTExZX05VTEwsUE9URU5U
SUFMTFlfTk9OX05VTEwsTk9OX05VTEx9LgorCSAqLworCXByaXZhdGUgaW50IGdldE51bGxTdGF0
dXNBZ2dyZXNzaXZlbHkoTG9jYWxWYXJpYWJsZUJpbmRpbmcgbG9jYWwsIEZsb3dJbmZvIGZsb3dJ
bmZvKSB7CisJCWludCByZWFjaE1vZGUgPSBmbG93SW5mby5yZWFjaE1vZGUoKTsKKwkJaW50IHN0
YXR1cyA9IDA7CisJCXRyeSB7CisJCQkvLyB1bnJlYWNoYWJsZSBmbG93SW5mbyBpcyB0b28gc2h5
IGluIHJlcG9ydGluZyBudWxsLWlzc3VlcywgdGVtcG9yYXJpbHkgZm9yZ2V0IHJlYWNoYWJpbGl0
eToKKwkJCWlmIChyZWFjaE1vZGUgIT0gRmxvd0luZm8uUkVBQ0hBQkxFKQorCQkJCWZsb3dJbmZv
LnRhZ0JpdHMgJj0gfkZsb3dJbmZvLlVOUkVBQ0hBQkxFOworCQkJc3RhdHVzID0gZmxvd0luZm8u
bnVsbFN0YXR1cyhsb2NhbCk7CisJCX0gZmluYWxseSB7CisJCQkvLyByZXNldAorCQkJZmxvd0lu
Zm8udGFnQml0cyB8PSByZWFjaE1vZGU7CisJCX0KKwkJLy8gYXQgdGhpcyBwb2ludCBzb21lIGNv
bWJpbmF0aW9ucyBhcmUgbm90IHVzZWZ1bCBzbyBmbGF0dGVuIHRvIGEgc2luZ2xlIGJpdDoKKwkJ
aWYgKChzdGF0dXMgJiBGbG93SW5mby5OVUxMKSAhPSAwKSB7CisJCQlpZiAoKHN0YXR1cyAmIChG
bG93SW5mby5OT05fTlVMTCB8IEZsb3dJbmZvLlBPVEVOVElBTExZX05PTl9OVUxMKSkgIT0gMCkK
KwkJCQlyZXR1cm4gRmxvd0luZm8uUE9URU5USUFMTFlfTlVMTDsgCS8vIG51bGwgKyBkb3VidCA9
IHBvdCBudWxsCisJCQlyZXR1cm4gRmxvd0luZm8uTlVMTDsKKwkJfSBlbHNlIGlmICgoc3RhdHVz
ICYgRmxvd0luZm8uTk9OX05VTEwpICE9IDApIHsKKwkJCWlmICgoc3RhdHVzICYgRmxvd0luZm8u
UE9URU5USUFMTFlfTlVMTCkgIT0gMCkKKwkJCQlyZXR1cm4gRmxvd0luZm8uUE9URU5USUFMTFlf
TlVMTDsJLy8gbm9uLW51bGwgKyBkb3VidCA9IHBvdCBudWxsCisJCQlyZXR1cm4gRmxvd0luZm8u
Tk9OX05VTEw7CisJCX0gZWxzZSBpZiAoKHN0YXR1cyAmIEZsb3dJbmZvLlBPVEVOVElBTExZX05V
TEwpICE9IDApCisJCQlyZXR1cm4gRmxvd0luZm8uUE9URU5USUFMTFlfTlVMTDsKKwkJcmV0dXJu
IHN0YXR1czsKKwl9CisKKwlwdWJsaWMgaW50IG1lcmdlQ2xvc2VTdGF0dXMoQmxvY2tTY29wZSBj
dXJyZW50U2NvcGUsIGludCBzdGF0dXMsIExvY2FsVmFyaWFibGVCaW5kaW5nIGxvY2FsLCBCbG9j
a1Njb3BlIG91dGVyU2NvcGUpIHsKKwkJLy8gZ2V0IHRoZSBtb3N0IHN1aXRhYmxlIG51bGwgc3Rh
dHVzIHJlcHJlc2VudGluZyB3aGV0aGVyIHJlc291cmNlICdiaW5kaW5nJyBoYXMgYmVlbiBjbG9z
ZWQKKwkJLy8gc3RhcnQgYXQgJ2N1cnJlbnRTY29wZScgYW5kIHBvdGVudGlhbGx5IHRyYXZlbCBv
dXQgdW50aWwgJ291dGVyU2NvcGUnCisJCS8vIGF0IGVhY2ggc2NvcGUgY29uc3VsdCBhbnkgcmVj
b3JkZWQgJ2ZpbmFsbHlJbmZvJy4KKwkJaWYgKHN0YXR1cyAhPSBGbG93SW5mby5OT05fTlVMTCkg
eworCQkJaWYgKGN1cnJlbnRTY29wZS5maW5hbGx5SW5mbyAhPSBudWxsKSB7CisJCQkJaW50IGZp
bmFsbHlTdGF0dXMgPSBjdXJyZW50U2NvcGUuZmluYWxseUluZm8ubnVsbFN0YXR1cyhsb2NhbCk7
CisJCQkJaWYgKGZpbmFsbHlTdGF0dXMgPT0gRmxvd0luZm8uTk9OX05VTEwpCisJCQkJCXJldHVy
biBmaW5hbGx5U3RhdHVzOworCQkJCWlmIChmaW5hbGx5U3RhdHVzICE9IEZsb3dJbmZvLk5VTEwp
IC8vIG5laXRoZXIgaXMgTk9OX05VTEwsIGJ1dCBub3QgYm90aCBhcmUgTlVMTCA9PiBjYWxsIGl0
IFBPVEVOVElBTExZX05VTEwKKwkJCQkJc3RhdHVzID0gRmxvd0luZm8uUE9URU5USUFMTFlfTlVM
TDsKKwkJCX0KKwkJCWlmIChjdXJyZW50U2NvcGUgIT0gb3V0ZXJTY29wZSAmJiBjdXJyZW50U2Nv
cGUucGFyZW50IGluc3RhbmNlb2YgQmxvY2tTY29wZSkKKwkJCQlyZXR1cm4gbWVyZ2VDbG9zZVN0
YXR1cygoKEJsb2NrU2NvcGUpIGN1cnJlbnRTY29wZS5wYXJlbnQpLCBzdGF0dXMsIGxvY2FsLCBv
dXRlclNjb3BlKTsKKwkJfQorCQlyZXR1cm4gc3RhdHVzOwogCX0KIAogCS8qKiBNYXJrIHRoYXQg
dGhpcyByZXNvdXJjZSBpcyBjbG9zZWQgbG9jYWxseS4gKi8KQEAgLTE4MCw5ICs0NzksMTggQEAK
IAkgKiAoYXMgYXJndW1lbnQgdG8gYSBtZXRob2QvY3RvciBjYWxsIG9yIGFzIGEgcmV0dXJuIHZh
bHVlIGZyb20gdGhlIGN1cnJlbnQgbWV0aG9kKSwgCiAJICogYW5kIHRodXMgc2hvdWxkIGJlIGNv
bnNpZGVyZWQgYXMgcG90ZW50aWFsbHkgY2xvc2VkLgogCSAqLwotCXB1YmxpYyBzdGF0aWMgRmxv
d0luZm8gbWFya1Bhc3NlZFRvT3V0c2lkZShCbG9ja1Njb3BlIHNjb3BlLCBFeHByZXNzaW9uIGV4
cHJlc3Npb24sIEZsb3dJbmZvIGZsb3dJbmZvKSB7CisJcHVibGljIHN0YXRpYyBGbG93SW5mbyBt
YXJrUGFzc2VkVG9PdXRzaWRlKEJsb2NrU2NvcGUgc2NvcGUsIEV4cHJlc3Npb24gZXhwcmVzc2lv
biwgRmxvd0luZm8gZmxvd0luZm8sIFR5cGVCaW5kaW5nIGFsbG9jYXRlZFR5cGUpIHsJCisJCWlm
ICgoYWxsb2NhdGVkVHlwZSBpbnN0YW5jZW9mIFJlZmVyZW5jZUJpbmRpbmcpIC8vIG9ubHkgc2V0
IHdoZW4gY2FsbGVkIGZyb20gQWxsb2NhdGlvbkV4cHJlc3Npb24KKwkJCQkmJiAoKFJlZmVyZW5j
ZUJpbmRpbmcpIGFsbG9jYXRlZFR5cGUpLmhhc1R5cGVCaXQoVHlwZUlkcy5CaXRXcmFwcGVyQ2xv
c2VhYmxlKSkKKwkJCXJldHVybiBmbG93SW5mbzsgLy8gYWxsb2NhdGlvbiBvZiB3cmFwcGVkIGNs
b3NlYWJsZXMgaXMgYW5hbHl6ZWQgc3BlY2lhbGx5CisJCQogCQlGYWtlZFRyYWNraW5nVmFyaWFi
bGUgdHJhY2tWYXIgPSBnZXRDbG9zZVRyYWNraW5nVmFyaWFibGUoZXhwcmVzc2lvbik7CiAJCWlm
ICh0cmFja1ZhciAhPSBudWxsKSB7CisJCQlpZiAodHJhY2tWYXIub3JpZ2luYWxCaW5kaW5nID09
IG51bGwpIHsKKwkJCQkvLyBhbiBhbGxvY2F0aW9uIHRoYXQgbmV2ZXIgd2FzIGFzc2lnbmVkIHRv
IGEgbG9jYWwgdmFyaWFibGUgLT4gZHJvcCBpdCBjb21wbGV0ZWx5IGFzIHdlJ3JlIG5vdCByZXNw
b25zaWJsZQorCQkJCXNjb3BlLnJlbW92ZVRyYWNraW5nVmFyKHRyYWNrVmFyKTsKKwkJCQlyZXR1
cm4gZmxvd0luZm87CisJCQl9CiAJCQl0cmFja1Zhci5nbG9iYWxDbG9zaW5nU3RhdGUgfD0gUEFT
U0VEX1RPX09VVFNJREU7CiAJCQlpZiAoc2NvcGUubWV0aG9kU2NvcGUoKSAhPSB0cmFja1Zhci5t
ZXRob2RTY29wZSkKIAkJCQl0cmFja1Zhci5nbG9iYWxDbG9zaW5nU3RhdGUgfD0gQ0xPU0VEX0lO
X05FU1RFRF9NRVRIT0Q7CkBAIC0yMDEsOSArNTA5LDE0IEBACiAJfQogCiAJcHVibGljIGJvb2xl
YW4gcmVwb3J0UmVjb3JkZWRFcnJvcnMoU2NvcGUgc2NvcGUpIHsKLQkJaWYgKHRoaXMuZ2xvYmFs
Q2xvc2luZ1N0YXRlID09IDApIHsKLQkJCXJlcG9ydEVycm9yKHNjb3BlLnByb2JsZW1SZXBvcnRl
cigpLCBudWxsLCBGbG93SW5mby5OVUxMKTsKLQkJCXJldHVybiB0cnVlOworCQlGYWtlZFRyYWNr
aW5nVmFyaWFibGUgY3VycmVudCA9IHRoaXM7CisJCXdoaWxlICgoY3VycmVudC5nbG9iYWxDbG9z
aW5nU3RhdGUgJiBET1VCVF9NQVNLKSA9PSAwKSB7CisJCQljdXJyZW50ID0gY3VycmVudC5pbm5l
clRyYWNrZXI7CisJCQlpZiAoY3VycmVudCA9PSBudWxsKSB7CisJCQkJLy8gbm8gcmVsZXZhbnQg
c3RhdGUgZm91bmQgLT4gcmVwb3J0OgorCQkJCXJlcG9ydEVycm9yKHNjb3BlLnByb2JsZW1SZXBv
cnRlcigpLCBudWxsLCBGbG93SW5mby5OVUxMKTsKKwkJCQlyZXR1cm4gdHJ1ZTsKKwkJCX0KIAkJ
fQogCQlib29sZWFuIGhhc1JlcG9ydGVkID0gZmFsc2U7CiAJCWlmICh0aGlzLnJlY29yZGVkTG9j
YXRpb25zICE9IG51bGwpIHsKQEAgLTIxOCw2ICs1MzEsOCBAQAogCX0KIAkKIAlwdWJsaWMgdm9p
ZCByZXBvcnRFcnJvcihQcm9ibGVtUmVwb3J0ZXIgcHJvYmxlbVJlcG9ydGVyLCBBU1ROb2RlIGxv
Y2F0aW9uLCBpbnQgbnVsbFN0YXR1cykgeworCQlpZiAoKHRoaXMuZ2xvYmFsQ2xvc2luZ1N0YXRl
ICYgV1JBUFBFRCkgIT0gMCkKKwkJCXJldHVybjsKIAkJaWYgKG51bGxTdGF0dXMgPT0gRmxvd0lu
Zm8uTlVMTCkgewogCQkJaWYgKCh0aGlzLmdsb2JhbENsb3NpbmdTdGF0ZSAmIENMT1NFRF9JTl9O
RVNURURfTUVUSE9EKSAhPSAwKQogCQkJCXByb2JsZW1SZXBvcnRlci5wb3RlbnRpYWxseVVuY2xv
c2VkQ2xvc2VhYmxlKHRoaXMsIGxvY2F0aW9uKTsKQEAgLTIyNSw3ICs1NDAsNyBAQAogCQkJCXBy
b2JsZW1SZXBvcnRlci51bmNsb3NlZENsb3NlYWJsZSh0aGlzLCBsb2NhdGlvbik7CiAJCX0gZWxz
ZSBpZiAobnVsbFN0YXR1cyA9PSBGbG93SW5mby5QT1RFTlRJQUxMWV9OVUxMKSB7CiAJCQlwcm9i
bGVtUmVwb3J0ZXIucG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSh0aGlzLCBsb2NhdGlvbik7
Ci0JCX0JCQorCQl9CiAJfQogCiAJcHVibGljIHZvaWQgcmVwb3J0RXhwbGljaXRDbG9zaW5nKFBy
b2JsZW1SZXBvcnRlciBwcm9ibGVtUmVwb3J0ZXIpIHsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3Qv
TG9jYWxEZWNsYXJhdGlvbi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Mb2NhbERlY2xhcmF0aW9uLmphdmEK
aW5kZXggZGFjMDI5Yy4uMzc4MTU1MyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Mb2NhbERlY2xh
cmF0aW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Mb2NhbERlY2xhcmF0aW9uLmphdmEKQEAgLTEs
NSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZl
ZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1h
ZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5z
ZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2
YWlsYWJsZSBhdApAQCAtMTMsNiArMTMsNyBAQAogICoJCQkJCQkJYnVnIDMzNTA5MyAtIFtjb21w
aWxlcl1bbnVsbF0gbWluaW1hbCBob29rIGZvciBmdXR1cmUgbnVsbCBhbm5vdGF0aW9uIHN1cHBv
cnQKICAqCQkJCQkJCWJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0
cnktd2l0aC1yZXNvdXJjZXMKICAqCQkJCQkJCWJ1ZyAxODYzNDIgLSBbY29tcGlsZXJdW251bGxd
IFVzaW5nIGFubm90YXRpb25zIGZvciBudWxsIGNoZWNraW5nCisgKgkJCQkJCQlidWcgMzU4OTAz
IC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsgd2FybmluZ3MK
ICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIuYXN0OwogCkBAIC03NCwxMSArNzUsMjYgQEAKIAkJdGhpcy5pbml0aWFsaXph
dGlvbi5jaGVja05QRShjdXJyZW50U2NvcGUsIGZsb3dDb250ZXh0LCBmbG93SW5mbyk7CiAJfQog
CQorCUZsb3dJbmZvIHByZUluaXRJbmZvID0gbnVsbDsKKwlib29sZWFuIHNob3VsZEFuYWx5c2VS
ZXNvdXJjZSA9IHRoaXMuYmluZGluZyAhPSBudWxsIAorCQkJJiYgZmxvd0luZm8ucmVhY2hNb2Rl
KCkgPT0gRmxvd0luZm8uUkVBQ0hBQkxFIAorCQkJJiYgRmFrZWRUcmFja2luZ1ZhcmlhYmxlLmlz
QXV0b0Nsb3NlYWJsZSh0aGlzLmluaXRpYWxpemF0aW9uLnJlc29sdmVkVHlwZSk7CisJaWYgKHNo
b3VsZEFuYWx5c2VSZXNvdXJjZSkgeworCQlwcmVJbml0SW5mbyA9IGZsb3dJbmZvLnVuY29uZGl0
aW9uYWxDb3B5KCk7CisJCS8vIGFuYWx5c2lzIG9mIHJlc291cmNlIGxlYWtzIG5lZWRzIGFkZGl0
aW9uYWwgY29udGV4dCB3aGlsZSBhbmFseXppbmcgdGhlIFJIUzoKKwkJRmFrZWRUcmFja2luZ1Zh
cmlhYmxlLnByZUNvbm5lY3RUcmFja2VyQWNyb3NzQXNzaWdubWVudCh0aGlzLCB0aGlzLmJpbmRp
bmcsIHRoaXMuaW5pdGlhbGl6YXRpb24pOworCX0KKwogCWZsb3dJbmZvID0KIAkJdGhpcy5pbml0
aWFsaXphdGlvbgogCQkJLmFuYWx5c2VDb2RlKGN1cnJlbnRTY29wZSwgZmxvd0NvbnRleHQsIGZs
b3dJbmZvKQogCQkJLnVuY29uZGl0aW9uYWxJbml0cygpOwotCUZha2VkVHJhY2tpbmdWYXJpYWJs
ZS5oYW5kbGVSZXNvdXJjZUFzc2lnbm1lbnQoZmxvd0luZm8sIHRoaXMsIHRoaXMuaW5pdGlhbGl6
YXRpb24sIHRoaXMuYmluZGluZywgbnVsbCk7CisKKwlpZiAoc2hvdWxkQW5hbHlzZVJlc291cmNl
KQorCQlGYWtlZFRyYWNraW5nVmFyaWFibGUuaGFuZGxlUmVzb3VyY2VBc3NpZ25tZW50KHByZUlu
aXRJbmZvLCBmbG93SW5mbywgdGhpcywgdGhpcy5pbml0aWFsaXphdGlvbiwgdGhpcy5iaW5kaW5n
KTsKKwllbHNlCisJCUZha2VkVHJhY2tpbmdWYXJpYWJsZS5jbGVhblVwQWZ0ZXJBc3NpZ25tZW50
KGN1cnJlbnRTY29wZSwgQmluZGluZy5MT0NBTCwgdGhpcy5pbml0aWFsaXphdGlvbik7CisKIAlp
bnQgbnVsbFN0YXR1cyA9IHRoaXMuaW5pdGlhbGl6YXRpb24ubnVsbFN0YXR1cyhmbG93SW5mbyk7
CiAJaWYgKCFmbG93SW5mby5pc0RlZmluaXRlbHlBc3NpZ25lZCh0aGlzLmJpbmRpbmcpKXsvLyBm
b3IgbG9jYWwgdmFyaWFibGUgZGVidWcgYXR0cmlidXRlcwogCQl0aGlzLmJpdHMgfD0gRmlyc3RB
c3NpZ25tZW50VG9Mb2NhbDsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTWVzc2FnZVNlbmQuamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9hc3QvTWVzc2FnZVNlbmQuamF2YQppbmRleCA0NmQ0NTQwLi40YjMxMWY5IDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXN0L01lc3NhZ2VTZW5kLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9N
ZXNzYWdlU2VuZC5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioK
LSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
KyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
ICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWlu
ZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhl
IEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBk
aXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTEyLDYgKzEyLDcgQEAKICAqCQkJ
CQkJCQlidWcgMzE5MjAxIC0gW251bGxdIG5vIHdhcm5pbmcgd2hlbiB1bmJveGluZyBTaW5nbGVO
YW1lUmVmZXJlbmNlIGNhdXNlcyBOUEUKICAqCQkJCQkJCQlidWcgMzQ5MzI2IC0gWzEuN10gbmV3
IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCiAgKgkJCQkJCQkJYnVnIDE4
NjM0MiAtIFtjb21waWxlcl1bbnVsbF0gVXNpbmcgYW5ub3RhdGlvbnMgZm9yIG51bGwgY2hlY2tp
bmcKKyAqCQkJCQkJCQlidWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50
IHJlc291cmNlIGxlYWsgd2FybmluZ3MKICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2Fn
ZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0OwogCkBAIC05Niw5ICs5Nyw5
IEBACiAJCQlpZiAoKHRoaXMuYXJndW1lbnRzW2ldLmltcGxpY2l0Q29udmVyc2lvbiAmIFR5cGVJ
ZHMuVU5CT1hJTkcpICE9IDApIHsKIAkJCQl0aGlzLmFyZ3VtZW50c1tpXS5jaGVja05QRShjdXJy
ZW50U2NvcGUsIGZsb3dDb250ZXh0LCBmbG93SW5mbyk7CiAJCQl9Ci0JCQkvLyBpZiBhcmd1bWVu
dCBpcyBhbiBBdXRvQ2xvc2VhYmxlIGluc2VydCBpbmZvIHRoYXQgaXQgKm1heSogYmUgY2xvc2Vk
IChieSB0aGUgdGFyZ2V0IG1ldGhvZCwgaS5lLikKLQkJCWZsb3dJbmZvID0gRmFrZWRUcmFja2lu
Z1ZhcmlhYmxlLm1hcmtQYXNzZWRUb091dHNpZGUoY3VycmVudFNjb3BlLCB0aGlzLmFyZ3VtZW50
c1tpXSwgZmxvd0luZm8pOwogCQkJZmxvd0luZm8gPSB0aGlzLmFyZ3VtZW50c1tpXS5hbmFseXNl
Q29kZShjdXJyZW50U2NvcGUsIGZsb3dDb250ZXh0LCBmbG93SW5mbykudW5jb25kaXRpb25hbElu
aXRzKCk7CisJCQkvLyBpZiBhcmd1bWVudCBpcyBhbiBBdXRvQ2xvc2VhYmxlIGluc2VydCBpbmZv
IHRoYXQgaXQgKm1heSogYmUgY2xvc2VkIChieSB0aGUgdGFyZ2V0IG1ldGhvZCwgaS5lLikKKwkJ
CWZsb3dJbmZvID0gRmFrZWRUcmFja2luZ1ZhcmlhYmxlLm1hcmtQYXNzZWRUb091dHNpZGUoY3Vy
cmVudFNjb3BlLCB0aGlzLmFyZ3VtZW50c1tpXSwgZmxvd0luZm8sIG51bGwpOwogCQl9CiAJCWFu
YWx5c2VBcmd1bWVudHMoY3VycmVudFNjb3BlLCBmbG93Q29udGV4dCwgZmxvd0luZm8sIHRoaXMu
YmluZGluZywgdGhpcy5hcmd1bWVudHMpOwogCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvUXVh
bGlmaWVkQWxsb2NhdGlvbkV4cHJlc3Npb24uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvUXVhbGlmaWVkQWxs
b2NhdGlvbkV4cHJlc3Npb24uamF2YQppbmRleCAzYTJhMGVkLi4wYmQwNWY1IDEwMDY0NAotLS0g
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvYXN0L1F1YWxpZmllZEFsbG9jYXRpb25FeHByZXNzaW9uLmphdmEKKysrIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2FzdC9RdWFsaWZpZWRBbGxvY2F0aW9uRXhwcmVzc2lvbi5qYXZhCkBAIC0xLDUgKzEsNSBA
QAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJ
Qk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJ
Qk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMg
cHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWls
YWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAog
ICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUg
YXQKQEAgLTExLDYgKzExLDcgQEAKICAqICAgICAJCQkJCQkJYnVnIDMxOTIwMSAtIFtudWxsXSBu
byB3YXJuaW5nIHdoZW4gdW5ib3hpbmcgU2luZ2xlTmFtZVJlZmVyZW5jZSBjYXVzZXMgTlBFCiAg
KiAgICAgCQkJCQkJCWJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0
cnktd2l0aC1yZXNvdXJjZXMKICAqCQkJCQkJCQlidWcgMTg2MzQyIC0gW2NvbXBpbGVyXVtudWxs
XSBVc2luZyBhbm5vdGF0aW9ucyBmb3IgbnVsbCBjaGVja2luZworICoJCQkJCQkJCWJ1ZyAzNTg5
MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5n
cwogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5hc3Q7CiAKQEAgLTgxLDcgKzgyLDcgQEAKIAkJaWYgKHRoaXMuYXJndW1l
bnRzICE9IG51bGwpIHsKIAkJCWZvciAoaW50IGkgPSAwLCBjb3VudCA9IHRoaXMuYXJndW1lbnRz
Lmxlbmd0aDsgaSA8IGNvdW50OyBpKyspIHsKIAkJCQkvLyBpZiBhcmd1bWVudCBpcyBhbiBBdXRv
Q2xvc2VhYmxlIGluc2VydCBpbmZvIHRoYXQgaXQgKm1heSogYmUgY2xvc2VkIChieSB0aGUgdGFy
Z2V0IG1ldGhvZCwgaS5lLikKLQkJCQlmbG93SW5mbyA9IEZha2VkVHJhY2tpbmdWYXJpYWJsZS5t
YXJrUGFzc2VkVG9PdXRzaWRlKGN1cnJlbnRTY29wZSwgdGhpcy5hcmd1bWVudHNbaV0sIGZsb3dJ
bmZvKTsKKwkJCQlmbG93SW5mbyA9IEZha2VkVHJhY2tpbmdWYXJpYWJsZS5tYXJrUGFzc2VkVG9P
dXRzaWRlKGN1cnJlbnRTY29wZSwgdGhpcy5hcmd1bWVudHNbaV0sIGZsb3dJbmZvLCBudWxsKTsK
IAkJCQlmbG93SW5mbyA9IHRoaXMuYXJndW1lbnRzW2ldLmFuYWx5c2VDb2RlKGN1cnJlbnRTY29w
ZSwgZmxvd0NvbnRleHQsIGZsb3dJbmZvKTsKIAkJCQlpZiAoKHRoaXMuYXJndW1lbnRzW2ldLmlt
cGxpY2l0Q29udmVyc2lvbiAmIFR5cGVJZHMuVU5CT1hJTkcpICE9IDApIHsKIAkJCQkJdGhpcy5h
cmd1bWVudHNbaV0uY2hlY2tOUEUoY3VycmVudFNjb3BlLCBmbG93Q29udGV4dCwgZmxvd0luZm8p
OwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9TaW5nbGVOYW1lUmVmZXJlbmNlLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L1NpbmdsZU5hbWVSZWZlcmVuY2UuamF2YQppbmRleCBkNjI1ZDViLi40MTM4NWMxIDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXN0L1NpbmdsZU5hbWVSZWZlcmVuY2UuamF2YQorKysgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L1NpbmdsZU5hbWVSZWZlcmVuY2UuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0
aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0
aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5k
IHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIg
dGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFj
Y29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CmRpZmYgLS1n
aXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvYXN0L1RyeVN0YXRlbWVudC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9UcnlTdGF0ZW1l
bnQuamF2YQppbmRleCA5ZmFlMDA5Li4wNTM0OTcwIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1Ry
eVN0YXRlbWVudC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvVHJ5U3RhdGVtZW50LmphdmEKQEAgLTEy
LDYgKzEyLDcgQEAKICAqICAgICAJCQkJCQkJYnVnIDM1ODgyNyAtIFsxLjddIGV4Y2VwdGlvbiBh
bmFseXNpcyBmb3IgdC13LXIgc3BvaWxzIG51bGwgYW5hbHlzaXMKICAqICAgICAJCQkJCQkJYnVn
IDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNl
cwogICogICAgIAkJCQkJCQlidWcgMzU5MzM0IC0gQW5hbHlzaXMgZm9yIHJlc291cmNlIGxlYWsg
d2FybmluZ3MgZG9lcyBub3QgY29uc2lkZXIgZXhjZXB0aW9ucyBhcyBtZXRob2QgZXhpdCBwb2lu
dHMKKyAqCQkJCQkJCQlidWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50
IHJlc291cmNlIGxlYWsgd2FybmluZ3MKICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2Fn
ZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0OwogCkBAIC0xMzQsNyArMTM1
LDcgQEAKIAkJCWlmIChyZXNvdXJjZUJpbmRpbmcuY2xvc2VUcmFja2VyICE9IG51bGwpIHsKIAkJ
CQkvLyB0aGlzIHdhcyBmYWxzZSBhbGFybSwgd2UgZG9uJ3QgbmVlZCB0byB0cmFjayB0aGUgcmVz
b3VyY2UKIAkJCQl0aGlzLnRyeUJsb2NrLnNjb3BlLnJlbW92ZVRyYWNraW5nVmFyKHJlc291cmNl
QmluZGluZy5jbG9zZVRyYWNrZXIpOwotCQkJCXJlc291cmNlQmluZGluZy5jbG9zZVRyYWNrZXIg
PSBudWxsOworCQkJCS8vIGtlZXAgdGhlIHRyYWNraW5nIHZhcmlhYmxlIGluIHRoZSByZXNvdXJj
ZUJpbmRpbmcgaW4gb3JkZXIgdG8gcHJldmVudCBjcmVhdGluZyBhIG5ldyBvbmUgd2hpbGUgYW5h
bHl6aW5nIHRoZSB0cnkgYmxvY2sKIAkJCX0KIAkJCVR5cGVCaW5kaW5nIHR5cGUgPSByZXNvdXJj
ZUJpbmRpbmcudHlwZTsKIAkJCWlmICh0eXBlICE9IG51bGwgJiYgdHlwZS5pc1ZhbGlkQmluZGlu
ZygpKSB7CkBAIC0yNzYsNyArMjc3LDcgQEAKIAkJCWlmIChyZXNvdXJjZUJpbmRpbmcuY2xvc2VU
cmFja2VyICE9IG51bGwpIHsKIAkJCQkvLyB0aGlzIHdhcyBmYWxzZSBhbGFybSwgd2UgZG9uJ3Qg
bmVlZCB0byB0cmFjayB0aGUgcmVzb3VyY2UKIAkJCQl0aGlzLnRyeUJsb2NrLnNjb3BlLnJlbW92
ZVRyYWNraW5nVmFyKHJlc291cmNlQmluZGluZy5jbG9zZVRyYWNrZXIpOwotCQkJCXJlc291cmNl
QmluZGluZy5jbG9zZVRyYWNrZXIgPSBudWxsOworCQkJCS8vIGtlZXAgdGhlIHRyYWNraW5nIHZh
cmlhYmxlIGluIHRoZSByZXNvdXJjZUJpbmRpbmcgaW4gb3JkZXIgdG8gcHJldmVudCBjcmVhdGlu
ZyBhIG5ldyBvbmUgd2hpbGUgYW5hbHl6aW5nIHRoZSB0cnkgYmxvY2sKIAkJCX0gCiAJCQlUeXBl
QmluZGluZyB0eXBlID0gcmVzb3VyY2VCaW5kaW5nLnR5cGU7CiAJCQlpZiAodHlwZSAhPSBudWxs
ICYmIHR5cGUuaXNWYWxpZEJpbmRpbmcoKSkgewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9C
aW5hcnlUeXBlQmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CaW5hcnlUeXBlQmluZGluZy5q
YXZhCmluZGV4IDkyOTQ3MjYuLmRlMTdjMDcgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQmlu
YXJ5VHlwZUJpbmRpbmcuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0JpbmFyeVR5cGVCaW5kaW5n
LmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJp
Z2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFs
cwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQ
dWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlv
biwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtMTEsNiArMTEsNyBAQAogICoJCQkJCQkJCWJ1ZyAz
NDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNvdXJjZXMK
ICAqCQkJCQkJCQlidWcgMTg2MzQyIC0gW2NvbXBpbGVyXVtudWxsXSBVc2luZyBhbm5vdGF0aW9u
cyBmb3IgbnVsbCBjaGVja2luZwogICoJCQkJCQkJCWJ1ZyAzNjQ4OTAgLSBCaW5hcnlUeXBlQmlu
ZGluZyBzaG91bGQgdXNlIGNoYXIgY29uc3RhbnRzIGZyb20gVXRpbAorICoJCQkJCQkJCWJ1ZyAz
NTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJu
aW5ncwogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb21waWxlci5sb29rdXA7CiAKQEAgLTEyNzUsNyArMTI3Niw5IEBACiAJCQl0aGlz
LmVudmlyb25tZW50Lm1heVRvbGVyYXRlTWlzc2luZ1R5cGUgPSB3YXNUb2xlcmF0aW5nTWlzc2lu
Z1R5cGVQcm9jZXNzaW5nQW5ub3RhdGlvbnM7CiAJCX0KIAl9Ci0JdGhpcy50eXBlQml0cyB8PSB0
aGlzLnN1cGVyY2xhc3MudHlwZUJpdHM7CisJdGhpcy50eXBlQml0cyB8PSAodGhpcy5zdXBlcmNs
YXNzLnR5cGVCaXRzICYgVHlwZUlkcy5Jbmhlcml0YWJsZUJpdHMpOworCWlmICgodGhpcy50eXBl
Qml0cyAmIChUeXBlSWRzLkJpdEF1dG9DbG9zZWFibGV8VHlwZUlkcy5CaXRDbG9zZWFibGUpKSAh
PSAwKSAvLyBhdm9pZCB0aGUgc2lkZS1lZmZlY3RzIG9mIGhhc1R5cGVCaXQoKSEgCisJCXRoaXMu
dHlwZUJpdHMgfD0gYXBwbHlDbG9zZWFibGVXaGl0ZWxpc3RzKCk7CiAJcmV0dXJuIHRoaXMuc3Vw
ZXJjbGFzczsKIH0KIC8vIE5PVEU6IHN1cGVySW50ZXJmYWNlcyBvZiBiaW5hcnkgdHlwZXMgYXJl
IHJlc29sdmVkIHdoZW4gbmVlZGVkCkBAIC0xMjk4LDcgKzEzMDEsNyBAQAogCQkJCXRoaXMuZW52
aXJvbm1lbnQubWF5VG9sZXJhdGVNaXNzaW5nVHlwZSA9IHdhc1RvbGVyYXRpbmdNaXNzaW5nVHlw
ZVByb2Nlc3NpbmdBbm5vdGF0aW9uczsKIAkJCX0JCiAJCX0KLQkJdGhpcy50eXBlQml0cyB8PSB0
aGlzLnN1cGVySW50ZXJmYWNlc1tpXS50eXBlQml0czsKKwkJdGhpcy50eXBlQml0cyB8PSAodGhp
cy5zdXBlckludGVyZmFjZXNbaV0udHlwZUJpdHMgJiBUeXBlSWRzLkluaGVyaXRhYmxlQml0cyk7
CiAJfQogCXRoaXMudGFnQml0cyAmPSB+VGFnQml0cy5IYXNVbnJlc29sdmVkU3VwZXJpbnRlcmZh
Y2VzOwogCXJldHVybiB0aGlzLnN1cGVySW50ZXJmYWNlczsKZGlmZiAtLWdpdCBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9s
b29rdXAvQmxvY2tTY29wZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CbG9ja1Njb3BlLmphdmEKaW5k
ZXggYzkzYzlkOS4uMTg5MDMxNSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CbG9ja1Njb3Bl
LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CbG9ja1Njb3BlLmphdmEKQEAgLTEsNSArMSw1IEBA
CiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBw
cm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxh
YmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAg
KiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBh
dApAQCAtMTAsNiArMTAsNyBAQAogICogICAgIFN0ZXBoYW4gSGVycm1hbm4gLSBDb250cmlidXRp
b25zIGZvcgogICogICAgIAkJCQkJCQlidWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9y
IG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCiAgKgkJCQkJCQkJYnVnIDM1OTMzNCAtIEFuYWx5
c2lzIGZvciByZXNvdXJjZSBsZWFrIHdhcm5pbmdzIGRvZXMgbm90IGNvbnNpZGVyIGV4Y2VwdGlv
bnMgYXMgbWV0aG9kIGV4aXQgcG9pbnRzCisgKgkJCQkJCQkJYnVnIDM1ODkwMyAtIEZpbHRlciBw
cmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCiAgKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
Lmxvb2t1cDsKIApAQCAtOTgxLDYgKzk4MiwxMCBAQAogfQogLyoqIFdoZW4gYXJlIG5vIGxvbmdl
ciBpbnRlcmVzdGVkIGluIHRoaXMgdHJhY2tpbmcgdmFyaWFibGUgLSByZW1vdmUgaXQuICovCiBw
dWJsaWMgdm9pZCByZW1vdmVUcmFja2luZ1ZhcihGYWtlZFRyYWNraW5nVmFyaWFibGUgdHJhY2tp
bmdWYXJpYWJsZSkgeworCWlmICh0cmFja2luZ1ZhcmlhYmxlLmlubmVyVHJhY2tlciAhPSBudWxs
KSB7CisJCXJlbW92ZVRyYWNraW5nVmFyKHRyYWNraW5nVmFyaWFibGUuaW5uZXJUcmFja2VyKTsK
KwkJdHJhY2tpbmdWYXJpYWJsZS5pbm5lclRyYWNrZXIgPSBudWxsOworCX0KIAlpZiAodGhpcy50
cmFja2luZ1ZhcmlhYmxlcyAhPSBudWxsKQogCQlpZiAodGhpcy50cmFja2luZ1ZhcmlhYmxlcy5y
ZW1vdmUodHJhY2tpbmdWYXJpYWJsZSkpCiAJCQlyZXR1cm47CkBAIC0xMDAzLDEwICsxMDA4LDEw
IEBACiAJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSB0cmFja2luZ1ZhciA9IChGYWtlZFRyYWNraW5n
VmFyaWFibGUpIHRoaXMudHJhY2tpbmdWYXJpYWJsZXMuZ2V0KGkpOwogCQlpZiAobG9jYXRpb24g
IT0gbnVsbCAmJiB0cmFja2luZ1Zhci5vcmlnaW5hbEJpbmRpbmcgIT0gbnVsbCAmJiBmbG93SW5m
by5pc0RlZmluaXRlbHlOdWxsKHRyYWNraW5nVmFyLm9yaWdpbmFsQmluZGluZykpCiAJCQljb250
aW51ZTsgLy8gcmVwb3J0aW5nIGFnYWluc3QgYSBzcGVjaWZpYyBsb2NhdGlvbiwgcmVzb3VyY2Ug
aXMgbnVsbCBhdCB0aGlzIGZsb3csIGRvbid0IGNvbXBsYWluCi0JCWludCBzdGF0dXMgPSBnZXRO
dWxsU3RhdHVzQWdncmVzc2l2ZWx5KHRyYWNraW5nVmFyLmJpbmRpbmcsIGZsb3dJbmZvKTsKLQkJ
Ly8gdHJ5IHRvIGltcHJvdmUgaW5mbyBpZiBhIGNsb3NlKCkgaW5zaWRlIGZpbmFsbHkgd2FzIG9i
c2VydmVkOgotCQlpZiAobG9jYXRpb25TY29wZSAhPSBudWxsKSAvLyBvbmx5IGNoZWNrIGF0IG1l
dGhvZCBleGl0IHBvaW50cwotCQkJc3RhdHVzID0gbG9jYXRpb25TY29wZS5tZXJnZUNsb3NlU3Rh
dHVzKHN0YXR1cywgdHJhY2tpbmdWYXIuYmluZGluZywgdGhpcyk7CisJCQorCQkvLyBjb21wdXRl
IHRoZSBtb3N0IHNwZWNpZmljIG51bGwgc3RhdHVzIGZvciB0aGlzIHJlc291cmNlLAorCQlpbnQg
c3RhdHVzID0gdHJhY2tpbmdWYXIuZmluZE1vc3RTcGVjaWZpY1N0YXR1cyhmbG93SW5mbywgdGhp
cywgbG9jYXRpb25TY29wZSk7CisJCQogCQlpZiAoc3RhdHVzID09IEZsb3dJbmZvLk5VTEwpIHsK
IAkJCS8vIGRlZmluaXRlbHkgdW5jbG9zZWQ6IGhpZ2hlc3QgcHJpb3JpdHkKIAkJCXJlcG9ydFJl
c291cmNlTGVhayh0cmFja2luZ1ZhciwgbG9jYXRpb24sIHN0YXR1cyk7CkBAIC0xMDMzLDI0ICsx
MDM4LDYgQEAKIAkJCXRoaXMubG9jYWxzW2ldLmNsb3NlVHJhY2tlciA9IG51bGw7CQkKIAkJdGhp
cy50cmFja2luZ1ZhcmlhYmxlcyA9IG51bGw7CiAJfQotfQotCi1wcml2YXRlIGludCBtZXJnZUNs
b3NlU3RhdHVzKGludCBzdGF0dXMsIExvY2FsVmFyaWFibGVCaW5kaW5nIGJpbmRpbmcsIEJsb2Nr
U2NvcGUgb3V0ZXJTY29wZSkgewotCS8vIGdldCB0aGUgbW9zdCBzdWl0YWJsZSBudWxsIHN0YXR1
cyByZXByZXNlbnRpbmcgd2hldGhlciByZXNvdXJjZSAnYmluZGluZycgaGFzIGJlZW4gY2xvc2Vk
Ci0JLy8gc3RhcnQgYXQgdGhpcyBzY29wZSBhbmQgcG90ZW50aWFsbHkgdHJhdmVsIG91dCB1bnRp
bCAnb3V0ZXJTY29wZScKLQkvLyBhdCBlYWNoIHNjb3BlIGNvbnN1bHQgYW55IHJlY29yZGVkICdm
aW5hbGx5SW5mbycuCi0JaWYgKHN0YXR1cyAhPSBGbG93SW5mby5OT05fTlVMTCkgewotCQlpZiAo
dGhpcy5maW5hbGx5SW5mbyAhPSBudWxsKSB7Ci0JCQlpbnQgZmluYWxseVN0YXR1cyA9IHRoaXMu
ZmluYWxseUluZm8ubnVsbFN0YXR1cyhiaW5kaW5nKTsKLQkJCWlmIChmaW5hbGx5U3RhdHVzID09
IEZsb3dJbmZvLk5PTl9OVUxMKQotCQkJCXJldHVybiBmaW5hbGx5U3RhdHVzOwotCQkJaWYgKGZp
bmFsbHlTdGF0dXMgIT0gRmxvd0luZm8uTlVMTCkgLy8gbmVpdGhlciBpcyBOT05fTlVMTCwgYnV0
IG5vdCBib3RoIGFyZSBOVUxMID0+IGNhbGwgaXQgUE9URU5USUFMTFlfTlVMTAotCQkJCXN0YXR1
cyA9IEZsb3dJbmZvLlBPVEVOVElBTExZX05VTEw7Ci0JCX0KLQkJaWYgKHRoaXMgIT0gb3V0ZXJT
Y29wZSAmJiB0aGlzLnBhcmVudCBpbnN0YW5jZW9mIEJsb2NrU2NvcGUpCi0JCQlyZXR1cm4gKChC
bG9ja1Njb3BlKSB0aGlzLnBhcmVudCkubWVyZ2VDbG9zZVN0YXR1cyhzdGF0dXMsIGJpbmRpbmcs
IG91dGVyU2NvcGUpOwotCX0KLQlyZXR1cm4gc3RhdHVzOwogfQogCiBwcml2YXRlIHZvaWQgcmVw
b3J0UmVzb3VyY2VMZWFrKEZha2VkVHJhY2tpbmdWYXJpYWJsZSB0cmFja2luZ1ZhciwgQVNUTm9k
ZSBsb2NhdGlvbiwgaW50IG51bGxTdGF0dXMpIHsKQEAgLTEwODMsNiArMTA3MCw4IEBACiAJaWYg
KHRoaXMudHJhY2tpbmdWYXJpYWJsZXMgIT0gbnVsbCkgewogCQlmb3IgKGludCBpPTA7IGk8dGhp
cy50cmFja2luZ1ZhcmlhYmxlcy5zaXplKCk7IGkrKykgewogCQkJRmFrZWRUcmFja2luZ1Zhcmlh
YmxlIHRyYWNraW5nVmFyID0gKEZha2VkVHJhY2tpbmdWYXJpYWJsZSkgdGhpcy50cmFja2luZ1Zh
cmlhYmxlcy5nZXQoaSk7CisJCQlpZiAodHJhY2tpbmdWYXIub3JpZ2luYWxCaW5kaW5nID09IG51
bGwpCisJCQkJY29udGludWU7CiAJCQlpZiAoICAgdGhlbkZsb3dJbmZvLmlzRGVmaW5pdGVseU5v
bk51bGwodHJhY2tpbmdWYXIuYmluZGluZykJCQkvLyBjbG9zZWQgaW4gdGhlbiBicmFuY2gKIAkJ
CQkmJiBlbHNlRmxvd0luZm8uaXNEZWZpbml0ZWx5TnVsbCh0cmFja2luZ1Zhci5vcmlnaW5hbEJp
bmRpbmcpKQkJLy8gbnVsbCBpbiBlbHNlIGJyYW5jaAogCQkJewpAQCAtMTA5NywzNyArMTA4Niw1
IEBACiAJfQogCWlmICh0aGlzLnBhcmVudCBpbnN0YW5jZW9mIEJsb2NrU2NvcGUpCiAJCSgoQmxv
Y2tTY29wZSkgdGhpcy5wYXJlbnQpLmNvcnJlbGF0ZVRyYWNraW5nVmFyc0lmRWxzZSh0aGVuRmxv
d0luZm8sIGVsc2VGbG93SW5mbyk7Ci19Ci0KLS8qKgotICogR2V0IHRoZSBudWxsIHN0YXR1cyBs
b29raW5nIGV2ZW4gaW50byB1bnJlYWNoYWJsZSBmbG93cwotICogQHBhcmFtIGxvY2FsCi0gKiBA
cGFyYW0gZmxvd0luZm8KLSAqIEByZXR1cm4gb25lIG9mIHRoZSBjb25zdGFudHMgRmxvd0luZm8u
e05VTEwsUE9URU5USUFMTFlfTlVMTCxQT1RFTlRJQUxMWV9OT05fTlVMTCxOT05fTlVMTH0uCi0g
Ki8KLXByaXZhdGUgaW50IGdldE51bGxTdGF0dXNBZ2dyZXNzaXZlbHkoTG9jYWxWYXJpYWJsZUJp
bmRpbmcgbG9jYWwsIEZsb3dJbmZvIGZsb3dJbmZvKSB7Ci0JaW50IHJlYWNoTW9kZSA9IGZsb3dJ
bmZvLnJlYWNoTW9kZSgpOwotCWludCBzdGF0dXMgPSAwOwotCXRyeSB7Ci0JCS8vIHVucmVhY2hh
YmxlIGZsb3dJbmZvIGlzIHRvbyBzaHkgaW4gcmVwb3J0aW5nIG51bGwtaXNzdWVzLCB0ZW1wb3Jh
cmlseSBmb3JnZXQgcmVhY2hhYmlsaXR5OgotCQlpZiAocmVhY2hNb2RlICE9IEZsb3dJbmZvLlJF
QUNIQUJMRSkKLQkJCWZsb3dJbmZvLnRhZ0JpdHMgJj0gfkZsb3dJbmZvLlVOUkVBQ0hBQkxFOwot
CQlzdGF0dXMgPSBmbG93SW5mby5udWxsU3RhdHVzKGxvY2FsKTsKLQl9IGZpbmFsbHkgewotCQkv
LyByZXNldAotCQlmbG93SW5mby50YWdCaXRzIHw9IHJlYWNoTW9kZTsKLQl9Ci0JLy8gYXQgdGhp
cyBwb2ludCBzb21lIGNvbWJpbmF0aW9ucyBhcmUgbm90IHVzZWZ1bCBzbyBmbGF0dGVuIHRvIGEg
c2luZ2xlIGJpdDoKLQlpZiAoKHN0YXR1cyAmIEZsb3dJbmZvLk5VTEwpICE9IDApIHsKLQkJaWYg
KChzdGF0dXMgJiAoRmxvd0luZm8uTk9OX05VTEwgfCBGbG93SW5mby5QT1RFTlRJQUxMWV9OT05f
TlVMTCkpICE9IDApCi0JCQlyZXR1cm4gRmxvd0luZm8uUE9URU5USUFMTFlfTlVMTDsgCS8vIG51
bGwgKyBkb3VidCA9IHBvdCBudWxsCi0JCXJldHVybiBGbG93SW5mby5OVUxMOwotCX0gZWxzZSBp
ZiAoKHN0YXR1cyAmIEZsb3dJbmZvLk5PTl9OVUxMKSAhPSAwKSB7Ci0JCWlmICgoc3RhdHVzICYg
Rmxvd0luZm8uUE9URU5USUFMTFlfTlVMTCkgIT0gMCkKLQkJCXJldHVybiBGbG93SW5mby5QT1RF
TlRJQUxMWV9OVUxMOwkvLyBub24tbnVsbCArIGRvdWJ0ID0gcG90IG51bGwKLQkJcmV0dXJuIEZs
b3dJbmZvLk5PTl9OVUxMOwotCX0gZWxzZSBpZiAoKHN0YXR1cyAmIEZsb3dJbmZvLlBPVEVOVElB
TExZX05VTEwpICE9IDApCi0JCXJldHVybiBGbG93SW5mby5QT1RFTlRJQUxMWV9OVUxMOwotCXJl
dHVybiBzdGF0dXM7CiB9CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0NsYXNzU2NvcGUu
amF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9sb29rdXAvQ2xhc3NTY29wZS5qYXZhCmluZGV4IDNlYjNjY2EuLjg3Nzhj
NmIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQ2xhc3NTY29wZS5qYXZhCisrKyBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9sb29rdXAvQ2xhc3NTY29wZS5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFj
Y29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVy
bXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5p
ZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTEyLDYgKzEyLDcg
QEAKICAqICAgICAJCQkJCQlCdWcgMzAwNTc2IC0gTlBFIENvbXB1dGluZyB0eXBlIGhpZXJhcmNo
eSB3aGVuIGNvbXBsaWFuY2UgZG9lc24ndCBtYXRjaCBsaWJyYXJpZXMKICAqICAgICAJCQkJCQlC
dWcgMzU0NTM2IC0gY29tcGlsaW5nIHBhY2thZ2UtaW5mby5qYXZhIHN0aWxsIGRlcGVuZHMgb24g
dGhlIG9yZGVyIG9mIGNvbXBpbGF0aW9uIHVuaXRzCiAgKiAgICAgCQkJCQkJQnVnIDM0OTMyNiAt
IFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNlcworICogICAg
IAkJCQkJCUJ1ZyAzNTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3Vy
Y2UgbGVhayB3YXJuaW5ncwogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXA7CiAKQEAgLTkwOSw3ICs5MTAsMTAg
QEAKIAkJCX0gZWxzZSB7CiAJCQkJLy8gb25seSB3YW50IHRvIHJlYWNoIGhlcmUgd2hlbiBubyBl
cnJvcnMgYXJlIHJlcG9ydGVkCiAJCQkJc291cmNlVHlwZS5zdXBlcmNsYXNzID0gc3VwZXJjbGFz
czsKLQkJCQlzb3VyY2VUeXBlLnR5cGVCaXRzIHw9IHN1cGVyY2xhc3MudHlwZUJpdHM7CisJCQkJ
c291cmNlVHlwZS50eXBlQml0cyB8PSAoc3VwZXJjbGFzcy50eXBlQml0cyAmIFR5cGVJZHMuSW5o
ZXJpdGFibGVCaXRzKTsKKwkJCQkvLyBmdXJ0aGVyIGFuYWx5c2lzIGFnYWluc3Qgd2hpdGUgbGlz
dHMgZm9yIHRoZSB1bmxpa2VseSBjYXNlIHdlIGFyZSBjb21waWxpbmcgamF2YS5pby4qOgorCQkJ
CWlmICgoc291cmNlVHlwZS50eXBlQml0cyAmIChUeXBlSWRzLkJpdEF1dG9DbG9zZWFibGV8VHlw
ZUlkcy5CaXRDbG9zZWFibGUpKSAhPSAwKQorCQkJCQlzb3VyY2VUeXBlLnR5cGVCaXRzIHw9IHNv
dXJjZVR5cGUuYXBwbHlDbG9zZWFibGVXaGl0ZWxpc3RzKCk7CiAJCQkJcmV0dXJuIHRydWU7CiAJ
CQl9CiAJCX0KQEAgLTEwMjUsNyArMTAyOSw3IEBACiAJCQkJbm9Qcm9ibGVtcyAmPSBzdXBlcklu
dGVyZmFjZVJlZi5yZXNvbHZlZFR5cGUuaXNWYWxpZEJpbmRpbmcoKTsKIAkJCX0KIAkJCS8vIG9u
bHkgd2FudCB0byByZWFjaCBoZXJlIHdoZW4gbm8gZXJyb3JzIGFyZSByZXBvcnRlZAotCQkJc291
cmNlVHlwZS50eXBlQml0cyB8PSBzdXBlckludGVyZmFjZS50eXBlQml0czsKKwkJCXNvdXJjZVR5
cGUudHlwZUJpdHMgfD0gKHN1cGVySW50ZXJmYWNlLnR5cGVCaXRzICYgVHlwZUlkcy5Jbmhlcml0
YWJsZUJpdHMpOwogCQkJaW50ZXJmYWNlQmluZGluZ3NbY291bnQrK10gPSBzdXBlckludGVyZmFj
ZTsKIAkJfQogCQkvLyBob2xkIG9udG8gYWxsIGNvcnJlY3RseSByZXNvbHZlZCBzdXBlcmludGVy
ZmFjZXMKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvUmVmZXJlbmNlQmluZGluZy5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9SZWZlcmVuY2VCaW5kaW5nLmphdmEKaW5kZXggNzVkZTg1NC4uYWI2MDY5
YiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9SZWZlcmVuY2VCaW5kaW5nLmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9SZWZlcmVuY2VCaW5kaW5nLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jw
b3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jw
b3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFt
IGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVu
ZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGlj
aCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAt
MTAsNiArMTAsNyBAQAogICogICAgIFN0ZXBoYW4gSGVycm1hbm4gLSBDb250cmlidXRpb25zIGZv
cgogICoJCQkJCQkJCWJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0
cnktd2l0aC1yZXNvdXJjZXMKICAqCQkJCQkJCQlidWcgMTg2MzQyIC0gW2NvbXBpbGVyXVtudWxs
XSBVc2luZyBhbm5vdGF0aW9ucyBmb3IgbnVsbCBjaGVja2luZworICoJCQkJCQkJCWJ1ZyAzNTg5
MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5n
cwogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5sb29rdXA7CiAKQEAgLTE0NjksNCArMTQ3MCwzNiBAQAogcHVibGljIEZp
ZWxkQmluZGluZ1tdIHVuUmVzb2x2ZWRGaWVsZHMoKSB7CiAJcmV0dXJuIEJpbmRpbmcuTk9fRklF
TERTOwogfQorCisvKgorICogSWYgYSB0eXBlIC0ga25vd24gdG8gYmUgYSBDbG9zZWFibGUgLSBp
cyBtZW50aW9uZWQgaW4gb25lIG9mIG91ciB3aGl0ZSBsaXN0cworICogYW5zd2VyIHRoZSB0eXBl
Qml0IGZvciB0aGUgd2hpdGUgbGlzdCAoQml0V3JhcHBlckNsb3NlYWJsZSBvciBCaXRSZXNvdXJj
ZUZyZWVDbG9zZWFibGUpLgorICovCitwcm90ZWN0ZWQgaW50IGFwcGx5Q2xvc2VhYmxlV2hpdGVs
aXN0cygpIHsKKwlzd2l0Y2ggKHRoaXMuY29tcG91bmROYW1lLmxlbmd0aCkgeworCQljYXNlIDM6
CisJCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoVHlwZUNvbnN0YW50cy5KQVZBLCB0aGlzLmNv
bXBvdW5kTmFtZVswXSkpIHsKKwkJCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoVHlwZUNvbnN0
YW50cy5JTywgdGhpcy5jb21wb3VuZE5hbWVbMV0pKSB7CisJCQkJCWNoYXJbXSBzaW1wbGVOYW1l
ID0gdGhpcy5jb21wb3VuZE5hbWVbMl07CisJCQkJCWludCBsID0gVHlwZUNvbnN0YW50cy5KQVZB
X0lPX1dSQVBQRVJfQ0xPU0VBQkxFUy5sZW5ndGg7CisJCQkJCWZvciAoaW50IGkgPSAwOyBpIDwg
bDsgaSsrKSB7CisJCQkJCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoc2ltcGxlTmFtZSwgVHlw
ZUNvbnN0YW50cy5KQVZBX0lPX1dSQVBQRVJfQ0xPU0VBQkxFU1tpXSkpCisJCQkJCQkJcmV0dXJu
IFR5cGVJZHMuQml0V3JhcHBlckNsb3NlYWJsZTsKKwkJCQkJfQorCQkJCQlsID0gVHlwZUNvbnN0
YW50cy5KQVZBX0lPX1JFU09VUkNFX0ZSRUVfQ0xPU0VBQkxFUy5sZW5ndGg7CisJCQkJCWZvciAo
aW50IGkgPSAwOyBpIDwgbDsgaSsrKSB7CisJCQkJCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMo
c2ltcGxlTmFtZSwgVHlwZUNvbnN0YW50cy5KQVZBX0lPX1JFU09VUkNFX0ZSRUVfQ0xPU0VBQkxF
U1tpXSkpCisJCQkJCQkJcmV0dXJuIFR5cGVJZHMuQml0UmVzb3VyY2VGcmVlQ2xvc2VhYmxlOwor
CQkJCQl9CisJCQkJfQorCQkJfQorCQkJYnJlYWs7CisJfQorCWludCBsID0gVHlwZUNvbnN0YW50
cy5PVEhFUl9XUkFQUEVSX0NMT1NFQUJMRVMubGVuZ3RoOworCWZvciAoaW50IGkgPSAwOyBpIDwg
bDsgaSsrKSB7CisJCWlmIChDaGFyT3BlcmF0aW9uLmVxdWFscyh0aGlzLmNvbXBvdW5kTmFtZSwg
VHlwZUNvbnN0YW50cy5PVEhFUl9XUkFQUEVSX0NMT1NFQUJMRVNbaV0pKQorCQkJcmV0dXJuIFR5
cGVJZHMuQml0V3JhcHBlckNsb3NlYWJsZTsKKwl9CQorCXJldHVybiAwOworfQogfQpkaWZmIC0t
Z2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlQ29uc3RhbnRzLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5
cGVDb25zdGFudHMuamF2YQppbmRleCAwYmJlZjQ3Li42YzA5NDU2IDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvbG9va3VwL1R5cGVDb25zdGFudHMuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVDb25z
dGFudHMuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBD
b3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBD
b3B5cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBB
bGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0
ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xp
cHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJp
YnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC03LDcgKzcsOSBAQAogICogCiAgKiBDb250
cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxl
bWVudGF0aW9uCi0gKiAgICAgU3RlcGhhbiBIZXJybWFubiAtIENvbnRyaWJ1dGlvbiBmb3IgYnVn
IDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNl
cworICogICAgIFN0ZXBoYW4gSGVycm1hbm4gLSBDb250cmlidXRpb25zIGZvcgorICoJCQkJCQkJ
CWJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNv
dXJjZXMKKyAqCQkJCQkJCQlidWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0
YW50IHJlc291cmNlIGxlYWsgd2FybmluZ3MKICAqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwogcGFj
a2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwOwogCkBAIC0xNTQs
NiArMTU2LDMzIEBACiAJfTsKIAljaGFyW11bXSBKQVZBX0xBTkdfQVVUT0NMT1NFQUJMRSA9ICB7
SkFWQSwgTEFORywgIkF1dG9DbG9zZWFibGUiLnRvQ2hhckFycmF5KCl9OyAvLyROT04tTkxTLTEk
CiAJY2hhcltdIENMT1NFID0gImNsb3NlIi50b0NoYXJBcnJheSgpOyAvLyROT04tTkxTLTEkCisJ
Ly8gd2hpdGUgbGlzdHMgb2YgY2xvc2VhYmxlczoKKwljaGFyW11bXSBKQVZBX0lPX1dSQVBQRVJf
Q0xPU0VBQkxFUyA9IG5ldyBjaGFyW11bXSB7CisJCSJCdWZmZXJlZElucHV0U3RyZWFtIi50b0No
YXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJCdWZmZXJlZE91dHB1dFN0cmVhbSIudG9DaGFy
QXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiQnVmZmVyZWRSZWFkZXIiLnRvQ2hhckFycmF5KCks
IC8vJE5PTi1OTFMtMSQKKwkJIkJ1ZmZlcmVkV3JpdGVyIi50b0NoYXJBcnJheSgpLCAvLyROT04t
TkxTLTEkCisJCSJJbnB1dFN0cmVhbVJlYWRlciIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0x
JAorCQkiUHJpbnRXcml0ZXIiLnRvQ2hhckFycmF5KCksICAvLyROT04tTkxTLTEkCisJCSJMaW5l
TnVtYmVyUmVhZGVyIi50b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJEYXRhSW5wdXRT
dHJlYW0iLnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwkJIkRhdGFPdXRwdXRTdHJlYW0i
LnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwkJIk9iamVjdElucHV0U3RyZWFtIi50b0No
YXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJPYmplY3RPdXRwdXRTdHJlYW0iLnRvQ2hhckFy
cmF5KCksIC8vJE5PTi1OTFMtMSQKKwkJIkZpbHRlcklucHV0U3RyZWFtIi50b0NoYXJBcnJheSgp
LCAvLyROT04tTkxTLTEkCisJCSJGaWx0ZXJPdXRwdXRTdHJlYW0iLnRvQ2hhckFycmF5KCksIC8v
JE5PTi1OTFMtMSQKKwl9OworCWNoYXJbXVtdW10gT1RIRVJfV1JBUFBFUl9DTE9TRUFCTEVTID0g
bmV3IGNoYXJbXVtdW10geyAvLyBOT1RFOiBpZiB0aGlzIGxpc3Qgc2hvdWxkIGV2ZXIgZ3JvdyBs
YXJnZSB3ZSBzaG91bGQgdGhpbmsgb2Ygc21hcnRlciBkYXRhIHN0cnVjdHVyZQorCQl7SkFWQSwg
VVRJTCwgInppcCIudG9DaGFyQXJyYXkoKSwgIkluZmxhdGVySW5wdXRTdHJlYW0iLnRvQ2hhckFy
cmF5KCl9LAkgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCisJfTsKKwljaGFyW11bXSBKQVZB
X0lPX1JFU09VUkNFX0ZSRUVfQ0xPU0VBQkxFUyA9IG5ldyBjaGFyW11bXSB7CQkJCisJCSJTdHJp
bmdSZWFkZXIiLnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwkJIlN0cmluZ1dyaXRlciIu
dG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiQnl0ZUFycmF5SW5wdXRTdHJlYW0iLnRv
Q2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwkJIkJ5dGVBcnJheU91dHB1dFN0cmVhbSIudG9D
aGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiQ2hhckFycmF5UmVhZGVyIi50b0NoYXJBcnJh
eSgpLCAvLyROT04tTkxTLTEkCisJCSJDaGFyQXJyYXlXcml0ZXIiLnRvQ2hhckFycmF5KCksIC8v
JE5PTi1OTFMtMSQKKwl9OwogCiAJLy8gQ29uc3RyYWludHMgZm9yIGdlbmVyaWMgdHlwZSBhcmd1
bWVudCBpbmZlcmVuY2UKIAlpbnQgQ09OU1RSQUlOVF9FUVVBTCA9IDA7CQkvLyBBY3R1YWwgPSBG
b3JtYWwKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZUlkcy5qYXZhIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xv
b2t1cC9UeXBlSWRzLmphdmEKaW5kZXggN2ZmZjQzNC4uMWU0NTE0YiAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2xvb2t1cC9UeXBlSWRzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlSWRzLmphdmEK
QEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChj
KSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChj
KSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyBy
ZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICog
YXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMg
TGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5k
IGlzIGF2YWlsYWJsZSBhdApAQCAtMTEsNiArMTEsNyBAQAogICogICAgIAkJCQkJCQlidWcgMzQ5
MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCiAg
KiAgICAgCQkJCQkJCWJ1ZyAzNTkzNjIgLSBGVVAgb2YgYnVnIDM0OTMyNjogUmVzb3VyY2UgbGVh
ayBvbiBub24tQ2xvc2VhYmxlIHJlc291cmNlCiAgKgkJCQkJCQkJYnVnIDE4NjM0MiAtIFtjb21w
aWxlcl1bbnVsbF0gVXNpbmcgYW5ub3RhdGlvbnMgZm9yIG51bGwgY2hlY2tpbmcKKyAqCQkJCQkJ
CQlidWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxl
YWsgd2FybmluZ3MKICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwOwogCkBAIC0yMDcsNCArMjA4LDE5IEBACiAJ
ICogQHNlZSBSZWZlcmVuY2VCaW5kaW5nI2hhc1R5cGVCaXQoaW50KQogCSAqLwogCWZpbmFsIGlu
dCBCaXRDbG9zZWFibGUgPSAyOworCS8qKgorCSAqIEJpdCBmb3IgbWVtYmVycyBvZiBhIHdoaXRl
IGxpc3Q6CisJICogU3VidHlwZXMgb2YgQ2xvc2VhYmxlIHRoYXQgd3JhcCBhbm90aGVyIHJlc291
cmNlIHdpdGhvdXQgZGlyZWN0bHkgaG9sZGluZyBhbnkgT1MgcmVzb3VyY2VzLiAKKwkgKi8KKwlm
aW5hbCBpbnQgQml0V3JhcHBlckNsb3NlYWJsZSA9IDQ7CisJLyoqCisJICogQml0IGZvciBtZW1i
ZXJzIG9mIGEgd2hpdGUgbGlzdDoKKwkgKiBTdWJ0eXBlcyBvZiBDbG9zZWFibGUgdGhhdCBkbyBu
b3QgaG9sZCBhbiBPUyByZXNvdXJjZSB0aGF0IG5lZWRzIHRvIGJlIHJlbGVhc2VkLgorCSAqLwor
CWZpbmFsIGludCBCaXRSZXNvdXJjZUZyZWVDbG9zZWFibGUgPSA4OworCQorCS8qKgorCSAqIFNl
dCBvZiB0eXBlIGJpdHMgdGhhdCBzaG91bGQgYmUgaW5oZXJpdGVkIGJ5IGFueSBzdWIgdHlwZXMu
CisJICovCisJZmluYWwgaW50IEluaGVyaXRhYmxlQml0cyA9IEJpdEF1dG9DbG9zZWFibGUgfCBC
aXRDbG9zZWFibGU7CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVWYXJpYWJsZUJp
bmRpbmcuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZVZhcmlhYmxlQmluZGluZy5qYXZhCmluZGV4
IDk5NWYzMGUuLjkxYTcwNjUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZVZhcmlhYmxl
QmluZGluZy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZVZhcmlhYmxlQmluZGluZy5qYXZh
CkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAo
YykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAo
YykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMg
cmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAq
IGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGlj
IExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFu
ZCBpcyBhdmFpbGFibGUgYXQKQEAgLTExLDYgKzExLDcgQEAKICAqICAgICAJCQkJCQkJYnVnIDI4
MjE1MiAtIFsxLjVdW2NvbXBpbGVyXSBHZW5lcmljcyBjb2RlIHJlamVjdGVkIGJ5IEVjbGlwc2Ug
YnV0IGFjY2VwdGVkIGJ5IGphdmFjCiAgKiAgICAgCQkJCQkJCWJ1ZyAzNDkzMjYgLSBbMS43XSBu
ZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNvdXJjZXMKICAqICAgICAJCQkJCQkJ
YnVnIDM1OTM2MiAtIEZVUCBvZiBidWcgMzQ5MzI2OiBSZXNvdXJjZSBsZWFrIG9uIG5vbi1DbG9z
ZWFibGUgcmVzb3VyY2UKKyAqCQkJCQkJCQlidWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5
IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsgd2FybmluZ3MKICAqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwOwog
CkBAIC0zMTYsMTEgKzMxNywxMSBAQAogCQkJLy8gaW5pdGlhbGl6ZSBmcm9tIGJvdW5kcwogCQkJ
dGhpcy50eXBlQml0cyA9IDA7CiAJCQlpZiAodGhpcy5zdXBlcmNsYXNzICE9IG51bGwgJiYgdGhp
cy5zdXBlcmNsYXNzLmhhc1R5cGVCaXQoflR5cGVJZHMuQml0VW5pbml0aWFsaXplZCkpCi0JCQkJ
dGhpcy50eXBlQml0cyB8PSB0aGlzLnN1cGVyY2xhc3MudHlwZUJpdHM7CisJCQkJdGhpcy50eXBl
Qml0cyB8PSAodGhpcy5zdXBlcmNsYXNzLnR5cGVCaXRzICYgVHlwZUlkcy5Jbmhlcml0YWJsZUJp
dHMpOwogCQkJaWYgKHRoaXMuc3VwZXJJbnRlcmZhY2VzICE9IG51bGwpCiAJCQkJZm9yIChpbnQg
aSA9IDAsIGwgPSB0aGlzLnN1cGVySW50ZXJmYWNlcy5sZW5ndGg7IGkgPCBsOyBpKyspCiAJCQkJ
CWlmICh0aGlzLnN1cGVySW50ZXJmYWNlc1tpXS5oYXNUeXBlQml0KH5UeXBlSWRzLkJpdFVuaW5p
dGlhbGl6ZWQpKQotCQkJCQkJdGhpcy50eXBlQml0cyB8PSB0aGlzLnN1cGVySW50ZXJmYWNlc1tp
XS50eXBlQml0czsKKwkJCQkJCXRoaXMudHlwZUJpdHMgfD0gKHRoaXMuc3VwZXJJbnRlcmZhY2Vz
W2ldLnR5cGVCaXRzICYgVHlwZUlkcy5Jbmhlcml0YWJsZUJpdHMpOwogCQl9CiAJCXJldHVybiAo
dGhpcy50eXBlQml0cyAmIGJpdCkgIT0gMDsKIAl9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3Vw
L1dpbGRjYXJkQmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9XaWxkY2FyZEJpbmRpbmcuamF2
YQppbmRleCAwMWYzNjllLi45M2RmZmUxIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1dpbGRj
YXJkQmluZGluZy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvV2lsZGNhcmRCaW5kaW5nLmphdmEK
QEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChj
KSAyMDA1LCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChj
KSAyMDA1LCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyBy
ZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICog
YXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMg
TGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5k
IGlzIGF2YWlsYWJsZSBhdApAQCAtMTAsNiArMTAsNyBAQAogICogICAgIFN0ZXBoYW4gSGVycm1h
bm4gLSBDb250cmlidXRpb24gZm9yCiAgKiAgICAgCQkJCQkJCWJ1ZyAzNDkzMjYgLSBbMS43XSBu
ZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNvdXJjZXMKICAqICAgICAJCQkJCQkJ
YnVnIDM1OTM2MiAtIEZVUCBvZiBidWcgMzQ5MzI2OiBSZXNvdXJjZSBsZWFrIG9uIG5vbi1DbG9z
ZWFibGUgcmVzb3VyY2UKKyAqCQkJCQkJCQlidWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5
IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsgd2FybmluZ3MKICAqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwOwog
CkBAIC00MjksMTEgKzQzMCwxMSBAQAogCQkJLy8gaW5pdGlhbGl6ZSBmcm9tIHVwcGVyIGJvdW5k
cwogCQkJdGhpcy50eXBlQml0cyA9IDA7CiAJCQlpZiAodGhpcy5zdXBlcmNsYXNzICE9IG51bGwg
JiYgdGhpcy5zdXBlcmNsYXNzLmhhc1R5cGVCaXQoflR5cGVJZHMuQml0VW5pbml0aWFsaXplZCkp
Ci0JCQkJdGhpcy50eXBlQml0cyB8PSB0aGlzLnN1cGVyY2xhc3MudHlwZUJpdHM7CisJCQkJdGhp
cy50eXBlQml0cyB8PSAodGhpcy5zdXBlcmNsYXNzLnR5cGVCaXRzICYgVHlwZUlkcy5Jbmhlcml0
YWJsZUJpdHMpOwogCQkJaWYgKHRoaXMuc3VwZXJJbnRlcmZhY2VzICE9IG51bGwpCiAJCQkJZm9y
IChpbnQgaSA9IDAsIGwgPSB0aGlzLnN1cGVySW50ZXJmYWNlcy5sZW5ndGg7IGkgPCBsOyBpKysp
CiAJCQkJCWlmICh0aGlzLnN1cGVySW50ZXJmYWNlc1tpXS5oYXNUeXBlQml0KH5UeXBlSWRzLkJp
dFVuaW5pdGlhbGl6ZWQpKQotCQkJCQkJdGhpcy50eXBlQml0cyB8PSB0aGlzLnN1cGVySW50ZXJm
YWNlc1tpXS50eXBlQml0czsKKwkJCQkJCXRoaXMudHlwZUJpdHMgfD0gKHRoaXMuc3VwZXJJbnRl
cmZhY2VzW2ldLnR5cGVCaXRzICYgVHlwZUlkcy5Jbmhlcml0YWJsZUJpdHMpOwogCQl9CiAJCXJl
dHVybiAodGhpcy50eXBlQml0cyAmIGJpdCkgIT0gMDsKIAl9Cg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>209232</attachid>
            <date>2012-01-09 17:15:00 -0500</date>
            <delta_ts>2012-01-09 18:03:57 -0500</delta_ts>
            <desc>Tests &amp; fix v0.9.5</desc>
            <filename>Bug_358903_v0.9.5.patch</filename>
            <type>text/plain</type>
            <size>99106</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1RyeVdpdGhSZXNvdXJj
ZXNTdGF0ZW1lbnRUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxl
ci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9UcnlX
aXRoUmVzb3VyY2VzU3RhdGVtZW50VGVzdC5qYXZhCmluZGV4IGYyMWE1N2YuLjk2NjAxMjUgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1RyeVdpdGhSZXNvdXJjZXNT
dGF0ZW1lbnRUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGls
ZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vVHJ5
V2l0aFJlc291cmNlc1N0YXRlbWVudFRlc3QuamF2YQpAQCAtMTEsMTEgKzExLDIxIEBACiAgKiAg
ICAgCQkJCQkJCWJ1ZyAzNTg4MjcgLSBbMS43XSBleGNlcHRpb24gYW5hbHlzaXMgZm9yIHQtdy1y
IHNwb2lscyBudWxsIGFuYWx5c2lzCiAgKiAgICAgCQkJCQkJCWJ1ZyAzNDkzMjYgLSBbMS43XSBu
ZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNvdXJjZXMKICAqICAgICAJCQkJCQkJ
YnVnIDM1OTMzNCAtIEFuYWx5c2lzIGZvciByZXNvdXJjZSBsZWFrIHdhcm5pbmdzIGRvZXMgbm90
IGNvbnNpZGVyIGV4Y2VwdGlvbnMgYXMgbWV0aG9kIGV4aXQgcG9pbnRzCisgKgkJCQkJCQkJYnVn
IDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdh
cm5pbmdzCisgKgkJCQkJCQkJYnVnIDM2MDkwOCAtIEF2b2lkIHJlc291cmNlIGxlYWsgd2Fybmlu
ZyB3aGVuIHRoZSB1bmRlcmx5aW5nL2NoYWluZWQgcmVzb3VyY2UgaXMgY2xvc2VkIGV4cGxpY2l0
bHkKKyAqCQkJCQkJCQlidWcgMzYxMDczIC0gQXZvaWQgcmVzb3VyY2UgbGVhayB3YXJuaW5nIHdo
ZW4gdGhlIHRvcCBsZXZlbCByZXNvdXJjZSBpcyBjbG9zZWQgZXhwbGljaXRseQorICoJCQkJCQkJ
CWJ1ZyAzNjIzMzEgLSBSZXNvdXJjZSBsZWFrIG5vdCBkZXRlY3RlZCB3aGVuIGNsb3NlYWJsZSBu
b3QgYXNzaWduZWQgdG8gdmFyaWFibGUKKyAqCQkJCQkJCQlidWcgMzYyMzMyIC0gT25seSByZXBv
cnQgcG90ZW50aWFsIGxlYWsgd2hlbiBjbG9zZWFibGUgbm90IGNyZWF0ZWQgaW4gdGhlIGxvY2Fs
IHNjb3BlCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMuY29tcGlsZXIucmVncmVzc2lvbjsKIAoraW1wb3J0IGphdmEuaW8uSU9FeGNl
cHRpb247CitpbXBvcnQgamF2YS5uZXQuVVJMOwogaW1wb3J0IGphdmEudXRpbC5NYXA7CiAKK2lt
cG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuRmlsZUxvY2F0b3I7CitpbXBvcnQgb3JnLmVj
bGlwc2UuY29yZS5ydW50aW1lLlBhdGg7CitpbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1l
LlBsYXRmb3JtOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLkphdmFDb3JlOwogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5pbXBsLkNvbXBpbGVyT3B0aW9uczsK
IApAQCAtMjMsNyArMzMsNyBAQAogcHVibGljIGNsYXNzIFRyeVdpdGhSZXNvdXJjZXNTdGF0ZW1l
bnRUZXN0IGV4dGVuZHMgQWJzdHJhY3RSZWdyZXNzaW9uVGVzdCB7CiAKIHN0YXRpYyB7Ci0vLwlU
RVNUU19OQU1FUyA9IG5ldyBTdHJpbmdbXSB7ICJ0ZXN0MDU2dGhyb3cifTsKKy8vCVRFU1RTX05B
TUVTID0gbmV3IFN0cmluZ1tdIHsgInRlc3QwNjFhIn07CiAvLwlURVNUU19OVU1CRVJTID0gbmV3
IGludFtdIHsgNTAgfTsKIC8vCVRFU1RTX1JBTkdFID0gbmV3IGludFtdIHsgMTEsIC0xIH07CiB9
CkBAIC0zNzEzLDExICszNzIzLDEyIEBACiAJCW9wdGlvbnMpOwogfQogLy8gQnVnIDM0OTMyNiAt
IFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNlcworLy8gQnVn
IDM2MjMzMiAtIE9ubHkgcmVwb3J0IHBvdGVudGlhbCBsZWFrIHdoZW4gY2xvc2VhYmxlIG5vdCBj
cmVhdGVkIGluIHRoZSBsb2NhbCBzY29wZQogLy8gb25lIG1ldGhvZCByZXR1cm5zIGFuIEF1dG9D
bGVhc2JsZSwgYSBzZWNvbmQgbWV0aG9kIHVzZXMgdGhpcyBvYmplY3Qgd2l0aG91dCBldmVyIGNs
b3NpbmcgaXQuCiBwdWJsaWMgdm9pZCB0ZXN0MDU2ZSgpIHsKIAlNYXAgb3B0aW9ucyA9IGdldENv
bXBpbGVyT3B0aW9ucygpOwogCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVw
b3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0Jb3B0aW9ucy5w
dXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2Vh
YmxlLCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRp
b25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9w
dGlvbnMuRVJST1IpOwogCXRoaXMucnVuTmVnYXRpdmVUZXN0KAogCQluZXcgU3RyaW5nW10gewog
CQkJIlguamF2YSIsCkBAIC0zNzQ0LDcgKzM3NTUsNyBAQAogCQkiMS4gRVJST1IgaW4gWC5qYXZh
IChhdCBsaW5lIDExKVxuIiArIAogCQkiCUZpbGVSZWFkZXIgcmVhZGVyID0gZ2V0UmVhZGVyKFwi
c29tZWZpbGVcIik7XG4iICsgCiAJCSIJICAgICAgICAgICBeXl5eXl5cbiIgKyAKLQkJIlJlc291
cmNlIGxlYWs6ICdyZWFkZXInIGlzIG5ldmVyIGNsb3NlZFxuIiArIAorCQkiUG90ZW50aWFsIHJl
c291cmNlIGxlYWs6IFwncmVhZGVyXCcgbWF5IG5vdCBiZSBjbG9zZWRcbiIgKyAKIAkJIi0tLS0t
LS0tLS1cbiIsCiAJCW51bGwsCiAJCXRydWUsCkBAIC0zOTY0LDYgKzM5NzUsNDYgQEAKIAkJbnVs
bCwKIAkJdHJ1ZSwKIAkJb3B0aW9ucyk7Cit9CisvLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdh
cm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCisvLyB0aHJlZSBBdXRvQ2xvc2Vh
YmxlcyBpbiBkaWZmZXJlbnQgYmxvY2tzIG9mIHRoZSBzYW1lIG1ldGhvZCAtIHByb2JsZW1zIGln
bm9yZWQKK3B1YmxpYyB2b2lkIHRlc3QwNTZpX2lnbm9yZSgpIHsKKwlNYXAgb3B0aW9ucyA9IGdl
dENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX1VO
Q0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLklHTk9SRSk7CisJb3B0aW9ucy5wdXQo
SmF2YUNvcmUuQ09NUElMRVJfUEJfUE9URU5USUFMTFlfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21w
aWxlck9wdGlvbnMuSUdOT1JFKTsKKwlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9F
WFBMSUNJVExZX0NMT1NFRF9BVVRPQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuSUdOT1JFKTsK
Kwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJ
CQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFk
ZXI7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1Ymxp
YyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICB2b2lkIGZvbyhib29sZWFuIGYxLCBib29sZWFuIGYy
KSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcg
RmlsZShcInNvbWVmaWxlXCIpO1xuIiArCisJCQkiICAgICAgICBpZiAoZjEpIHtcbiIgKworCQkJ
IiAgICAgICAgICAgIEZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUp
OyAvLyBlcnI6IG5vdCBjbG9zZWRcbiIgKworCQkJIiAgICAgICAgICAgIGNoYXJbXSBpbiA9IG5l
dyBjaGFyWzUwXTtcbiIgKworCQkJIiAgICAgICAgICAgIGZpbGVSZWFkZXIucmVhZChpbik7XG4i
ICsKKwkJCSIgICAgICAgICAgICB3aGlsZSAodHJ1ZSkge1xuIiArCisJCQkiICAgICAgICAgICAg
ICAgICBGaWxlUmVhZGVyIGxvb3BSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTsgLy8gZG9u
J3Qgd2FybiwgcHJvcGVybHkgY2xvc2VkXG4iICsKKwkJCSIgICAgICAgICAgICAgICAgIGxvb3BS
ZWFkZXIuY2xvc2UoKTsiICsKKwkJCSIgICAgICAgICAgICAgICAgIGJyZWFrO1xuIiArCisJCQki
ICAgICAgICAgICAgfVxuIiArCisJCQkiICAgICAgICB9IGVsc2Uge1xuIiArCisJCQkiICAgICAg
ICAgICAgRmlsZVJlYWRlciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7IC8vIHdh
cm46IG5vdCBjbG9zZWQgb24gYWxsIHBhdGhzXG4iICsKKwkJCSIgICAgICAgICAgICBpZiAoZjIp
XG4iICsKKwkJCSIgICAgICAgICAgICAgICAgZmlsZVJlYWRlci5jbG9zZSgpO1xuIiArCisJCQki
ICAgICAgICB9XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCQl9LAorCQkiIiwKKwkJ
bnVsbCwKKwkJdHJ1ZSwKKwkJbnVsbCwKKwkJb3B0aW9ucywKKwkJbnVsbCk7CiB9CiAvLyBCdWcg
MzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2Vz
CiAvLyB0aHJlZSBBdXRvQ2xvc2VhYmxlcyBpbiBkaWZmZXJlbnQgYmxvY2tzIG9mIHRoZSBzYW1l
IG1ldGhvZApAQCAtNDM1OCwxMSArNDQwOSwxMiBAQAogCQludWxsLypyZXF1ZXN0b3IqLyk7CiB9
CiAvLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgt
cmVzb3VyY2VzCisvLyBCdWcgMzYyMzMyIC0gT25seSByZXBvcnQgcG90ZW50aWFsIGxlYWsgd2hl
biBjbG9zZWFibGUgbm90IGNyZWF0ZWQgaW4gdGhlIGxvY2FsIHNjb3BlCiAvLyBhIG1ldGhvZCB1
c2VzIGFuIEF1dG9DbG9zZWFibGUgd2l0aG91dCBldmVyIGNsb3NpbmcgaXQsIHR5cGUgZnJvbSBh
IHR5cGUgdmFyaWFibGUKIHB1YmxpYyB2b2lkIHRlc3QwNTZwKCkgewogCU1hcCBvcHRpb25zID0g
Z2V0Q29tcGlsZXJPcHRpb25zKCk7CiAJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElP
Tl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQlvcHRp
b25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRD
bG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5XQVJOSU5HKTsKKwlvcHRpb25zLnB1dChDb21waWxl
ck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBp
bGVyT3B0aW9ucy5FUlJPUik7CiAJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCiAJCW5ldyBTdHJpbmdb
XSB7CiAJCQkiWC5qYXZhIiwKQEAgLTQzODksNyArNDQ0MSw3IEBACiAJCSIxLiBFUlJPUiBpbiBY
LmphdmEgKGF0IGxpbmUgOClcbiIgKyAKIAkJIglUIGZpbGVSZWFkZXIgPSBuZXdSZWFkZXIoZmls
ZSk7XG4iICsgCiAJCSIJICBeXl5eXl5eXl5eXG4iICsgCi0JCSJSZXNvdXJjZSBsZWFrOiAnZmls
ZVJlYWRlcicgaXMgbmV2ZXIgY2xvc2VkXG4iICsKKwkJIlBvdGVudGlhbCByZXNvdXJjZSBsZWFr
OiBcJ2ZpbGVSZWFkZXJcJyBtYXkgbm90IGJlIGNsb3NlZFxuIiArCiAJCSItLS0tLS0tLS0tXG4i
LAogCQludWxsLAogCQl0cnVlLApAQCAtNDQ0NCw3ICs0NDk2LDcgQEAKIAkJb3B0aW9ucyk7CiB9
CiAvLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgt
cmVzb3VyY2VzCi0vLyBjbG9zZWQgaW4gZGVhZCBjb2RlCisvLyBwcm9wZXJseSBjbG9zZWQsIGRl
YWQgY29kZSBpbiBiZXR3ZWVuCiBwdWJsaWMgdm9pZCB0ZXN0MDU2cigpIHsKIAlNYXAgb3B0aW9u
cyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwogCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVS
X1BCX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKQEAgLTUzNTQs
NyArNTQwNiw3MjMgQEAKIAkJIlg6On5YXG4iICsgCiAJCSJ0cnVlIik7CiB9Ci0KKy8vIEJ1ZyAz
NTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJu
aW5ncworLy8gQnVnIDM2MDkwOCAtIEF2b2lkIHJlc291cmNlIGxlYWsgd2FybmluZyB3aGVuIHRo
ZSB1bmRlcmx5aW5nL2NoYWluZWQgcmVzb3VyY2UgaXMgY2xvc2VkIGV4cGxpY2l0bHkKKy8vIGEg
cmVzb3VyY2Ugd3JhcHBlciBpcyBub3QgY2xvc2VkIGJ1dCB0aGUgdW5kZXJseWluZyByZXNvdXJj
ZSBpcworcHVibGljIHZvaWQgdGVzdDA2MWEoKSB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxl
ck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVu
Y2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0KENv
bXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwg
Q29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQluZXcgU3Ry
aW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKworCQkJ
ImltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2
YS5pby5GaWxlSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlv
bjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICB2b2lkIGZvbygpIHRo
cm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxl
KFwic29tZWZpbGVcIik7XG4iICsKKwkJCSIgICAgICAgIEZpbGVJbnB1dFN0cmVhbSBmaWxlU3Ry
ZWFtICA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSk7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZl
cmVkSW5wdXRTdHJlYW0gYmlzID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oZmlsZVN0cmVhbSk7
XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gZG91YmxlV3JhcCA9IG5ldyBC
dWZmZXJlZElucHV0U3RyZWFtKGJpcyk7XG4iICsKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJp
bnRsbihiaXMuYXZhaWxhYmxlKCkpO1xuIiArCisJCQkiICAgICAgICBmaWxlU3RyZWFtLmNsb3Nl
KCk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIHZvaWQgaW5saW5lKCkgdGhyb3dzIElP
RXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21l
ZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAgRmlsZUlucHV0U3RyZWFtIGZpbGVTdHJlYW07XG4i
ICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzID0gbmV3IEJ1ZmZlcmVkSW5w
dXRTdHJlYW0oZmlsZVN0cmVhbSA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSkpO1xuIiArCisJ
CQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oYmlzLmF2YWlsYWJsZSgpKTtcbiIgKworCQkJ
IiAgICAgICAgZmlsZVN0cmVhbS5jbG9zZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAg
ICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRp
b24ge1xuIiArCisJCQkiICAgICAgICB0cnkge1xuIiArCisJCQkiICAgICAgICAgICAgbmV3IFgo
KS5mb28oKTtcbiIgKworCQkJIiAgICAgICAgfSBjYXRjaCAoSU9FeGNlcHRpb24gZXgpIHsiICsK
KwkJCSIgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oXCJHb3QgSU8gRXhjZXB0aW9uXCIp
O1xuIiArCisJCQkiICAgICAgICB9XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCQl9
LAorCQkiR290IElPIEV4Y2VwdGlvbiIsCisJCW51bGwsCisJCXRydWUsCisJCW51bGwsCisJCW9w
dGlvbnMsCisJCW51bGwpOworfQorLy8gQnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1
bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCisvLyBhIGNsb3NlYWJsZSB3aXRob3V0
IE9TIHJlc291cmNlIGlzIG5vdCBjbG9zZWQKK3B1YmxpYyB2b2lkIHRlc3QwNjFiKCkgeworCU1h
cCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJP
cHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVS
Uk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlh
bGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJdGhpcy5ydW5D
b25mb3JtVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBq
YXZhLmlvLlN0cmluZ1JlYWRlcjtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9u
O1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICAgIHZvaWQgZm9vKCkgdGhy
b3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgU3RyaW5nUmVhZGVyIHN0cmluZyAg
PSBuZXcgU3RyaW5nUmVhZGVyKFwiY29udGVudFwiKTtcbiIgKworCQkJIiAgICAgICAgU3lzdGVt
Lm91dC5wcmludGxuKHN0cmluZy5yZWFkKCkpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAg
ICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRp
b24ge1xuIiArCisJCQkiICAgICAgICBuZXcgWCgpLmZvbygpO1xuIiArCisJCQkiICAgIH1cbiIg
KworCQkJIn1cbiIKKwkJfSwKKwkJIjk5IiwgLy8gY2hhcmFjdGVyICdjJworCQludWxsLAorCQl0
cnVlLAorCQludWxsLAorCQlvcHRpb25zLAorCQludWxsKTsKK30KKy8vIEJ1ZyAzNTg5MDMgLSBG
aWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5ncworLy8g
YSByZXNvdXJjZSB3cmFwcGVyIGlzIG5vdCBjbG9zZWQgYnV0IHRoZSB1bmRlcmx5aW5nIGNsb3Nl
YWJsZSBpcyByZXNvdXJjZS1mcmVlCitwdWJsaWMgdm9pZCB0ZXN0MDYxYygpIHsKKwlNYXAgb3B0
aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9u
cy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7
CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVu
Y2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVuQ29uZm9y
bVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5p
by5CdWZmZXJlZFJlYWRlcjtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLlN0cmluZ1JlYWRlcjtc
biIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGljIGNs
YXNzIFgge1xuIiArCisJCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIg
KworCQkJIiAgICAgICAgU3RyaW5nUmVhZGVyIGlucHV0ID0gbmV3IFN0cmluZ1JlYWRlcihcImNv
bnRlbnRcIik7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkUmVhZGVyIGJyID0gbmV3IEJ1ZmZl
cmVkUmVhZGVyKGlucHV0KTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRSZWFkZXIgZG91Ymxl
V3JhcCA9IG5ldyBCdWZmZXJlZFJlYWRlcihicik7XG4iICsKKwkJCSIgICAgICAgIFN5c3RlbS5v
dXQucHJpbnRsbihici5yZWFkKCkpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICB2b2lk
IGlubGluZSgpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVk
UmVhZGVyIGJyID0gbmV3IEJ1ZmZlcmVkUmVhZGVyKG5ldyBTdHJpbmdSZWFkZXIoXCJjb250ZW50
XCIpKTtcbiIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGJyLnJlYWQoKSk7XG4i
ICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmlu
Z1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIG5ldyBYKCku
Zm9vKCk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCQl9LAorCQkiOTkiLAorCQlu
dWxsLAorCQl0cnVlLAorCQludWxsLAorCQlvcHRpb25zLAorCQludWxsKTsKK30KKy8vIEJ1ZyAz
NTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJu
aW5ncworLy8gYSByZXNvdXJjZSB3cmFwcGVyIGlzIG5vdCBjbG9zZWQgbmVpdGhlciBpcyB0aGUg
dW5kZXJseWluZyByZXNvdXJjZQorcHVibGljIHZvaWQgdGVzdDA2MWQoKSB7CisJTWFwIG9wdGlv
bnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMu
T1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwor
CW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNs
b3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLldBUk5JTkcpOworCXRoaXMucnVuTmVnYXRp
dmVUZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEu
aW8uRmlsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJlYW07XG4i
ICsKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQg
amF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJ
IiAgICB2b2lkIGZvbygpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZp
bGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKKwkJCSIgICAgICAgIEZpbGVJ
bnB1dFN0cmVhbSBmaWxlU3RyZWFtICA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSk7XG4iICsK
KwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzID0gbmV3IEJ1ZmZlcmVkSW5wdXRT
dHJlYW0oZmlsZVN0cmVhbSk7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0g
ZG91YmxlV3JhcCA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGJpcyk7XG4iICsKKwkJCSIgICAg
ICAgIFN5c3RlbS5vdXQucHJpbnRsbihiaXMuYXZhaWxhYmxlKCkpO1xuIiArCisJCQkiICAgIH1c
biIgKworCQkJIiAgICB2b2lkIGlubGluZSgpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJ
CSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKKwkJCSIg
ICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzMiA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFt
KG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSkpO1xuIiArCisJCQkiICAgICAgICBTeXN0ZW0ub3V0
LnByaW50bG4oYmlzMi5hdmFpbGFibGUoKSk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAg
IHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlv
biB7XG4iICsKKwkJCSIgICAgICAgIHRyeSB7XG4iICsKKwkJCSIgICAgICAgICAgICBuZXcgWCgp
LmZvbygpO1xuIiArCisJCQkiICAgICAgICB9IGNhdGNoIChJT0V4Y2VwdGlvbiBleCkgeyIgKwor
CQkJIiAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcIkdvdCBJTyBFeGNlcHRpb25cIik7
XG4iICsKKwkJCSIgICAgICAgIH1cbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0s
CisJCSItLS0tLS0tLS0tXG4iICsgCisJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTAp
XG4iICsgCisJCSIJQnVmZmVyZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFwID0gbmV3IEJ1ZmZlcmVk
SW5wdXRTdHJlYW0oYmlzKTtcbiIgKyAKKwkJIgkgICAgICAgICAgICAgICAgICAgIF5eXl5eXl5e
Xl5cbiIgKyAKKwkJIlJlc291cmNlIGxlYWs6IFwnZG91YmxlV3JhcFwnIGlzIG5ldmVyIGNsb3Nl
ZFxuIiArIAorCQkiLS0tLS0tLS0tLVxuIiArIAorCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBs
aW5lIDE1KVxuIiArIAorCQkiCUJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzMiA9IG5ldyBCdWZmZXJl
ZElucHV0U3RyZWFtKG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSkpO1xuIiArIAorCQkiCSAgICAg
ICAgICAgICAgICAgICAgXl5eXlxuIiArIAorCQkiUmVzb3VyY2UgbGVhazogXCdiaXMyXCcgaXMg
bmV2ZXIgY2xvc2VkXG4iICsgCisJCSItLS0tLS0tLS0tXG4iLAorCQludWxsLAorCQl0cnVlLAor
CQlvcHRpb25zKTsKK30KKy8vIEJ1ZyAzNTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBv
cnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5ncworLy8gQnVnIDM2MTA3MyAtIEF2b2lkIHJlc291
cmNlIGxlYWsgd2FybmluZyB3aGVuIHRoZSB0b3AgbGV2ZWwgcmVzb3VyY2UgaXMgY2xvc2VkIGV4
cGxpY2l0bHkKKy8vIGEgcmVzb3VyY2Ugd3JhcHBlciBpcyBjbG9zZWQgY2xvc2luZyBhbHNvIHRo
ZSB1bmRlcmx5aW5nIHJlc291cmNlCitwdWJsaWMgdm9pZCB0ZXN0MDYxZSgpIHsKKwlNYXAgb3B0
aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9u
cy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7
CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVu
Y2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVuQ29uZm9y
bVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5p
by5GaWxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uQnVmZmVyZWRJbnB1dFN0cmVhbTtcbiIg
KworCQkJImltcG9ydCBqYXZhLmlvLkZpbGVJbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBq
YXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQki
ICAgIEZpbGVJbnB1dFN0cmVhbSBmaXM7IiArCisJCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElP
RXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21l
ZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAgRmlsZUlucHV0U3RyZWFtIGZpbGVTdHJlYW0gID0g
bmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1
dFN0cmVhbSBiaXMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShmaWxlU3RyZWFtKTtcbiIgKwor
CQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFwID0gbmV3IEJ1ZmZlcmVk
SW5wdXRTdHJlYW0oYmlzKTtcbiIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGJp
cy5hdmFpbGFibGUoKSk7XG4iICsKKwkJCSIgICAgICAgIGJpcy5jbG9zZSgpO1xuIiArCisJCQki
ICAgIH1cbiIgKworCQkJIiAgICB2b2lkIGlubGluZSgpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4i
ICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsK
KwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzMiA9IG5ldyBCdWZmZXJlZElucHV0
U3RyZWFtKGZpcyA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSkpO1xuIiArIC8vIGZpZWxkIGFz
c2lnbm1lbnQKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihiaXMyLmF2YWlsYWJsZSgp
KTtcbiIgKworCQkJIiAgICAgICAgYmlzMi5jbG9zZSgpO1xuIiArCisJCQkiICAgICAgICBGaWxl
SW5wdXRTdHJlYW0gZmlsZVN0cmVhbSAgPSBudWxsO1xuIiArCisJCQkiICAgICAgICBCdWZmZXJl
ZElucHV0U3RyZWFtIGJpczMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShmaWxlU3RyZWFtID0g
bmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKSk7XG4iICsKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQu
cHJpbnRsbihiaXMzLmF2YWlsYWJsZSgpKTtcbiIgKworCQkJIiAgICAgICAgYmlzMy5jbG9zZSgp
O1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihT
dHJpbmdbXSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICB0cnkg
e1xuIiArCisJCQkiICAgICAgICAgICAgbmV3IFgoKS5mb28oKTtcbiIgKworCQkJIiAgICAgICAg
fSBjYXRjaCAoSU9FeGNlcHRpb24gZXgpIHsiICsKKwkJCSIgICAgICAgICAgICBTeXN0ZW0ub3V0
LnByaW50bG4oXCJHb3QgSU8gRXhjZXB0aW9uXCIpO1xuIiArCisJCQkiICAgICAgICB9XG4iICsK
KwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCQl9LAorCQkiR290IElPIEV4Y2VwdGlvbiIsCisJ
CW51bGwsCisJCXRydWUsCisJCW51bGwsCisJCW9wdGlvbnMsCisJCW51bGwpOworfQorLy8gQnVn
IDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdh
cm5pbmdzCisvLyBCdWcgMzYxMDczIC0gQXZvaWQgcmVzb3VyY2UgbGVhayB3YXJuaW5nIHdoZW4g
dGhlIHRvcCBsZXZlbCByZXNvdXJjZSBpcyBjbG9zZWQgZXhwbGljaXRseQorLy8gYSByZXNvdXJj
ZSB3cmFwcGVyIGlzIGNsb3NlZCBjbG9zaW5nIGFsc28gdGhlIHVuZGVybHlpbmcgcmVzb3VyY2Ug
LSBvcmlnaW5hbCB0ZXN0IGNhc2UKK3B1YmxpYyB2b2lkIHRlc3QwNjFmKCkgdGhyb3dzIElPRXhj
ZXB0aW9uIHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMu
cHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBp
bGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9S
ZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1Ip
OworCVVSTCB1cmwgPSBGaWxlTG9jYXRvci50b0ZpbGVVUkwoRmlsZUxvY2F0b3IuZmluZChQbGF0
Zm9ybS5nZXRCdW5kbGUoIm9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyIiksIG5l
dyBQYXRoKCJNRVRBLUlORi9NQU5JRkVTVC5NRiIpLCBudWxsKSk7CisJdGhpcy5ydW5Db25mb3Jt
VGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZhLmlv
LklucHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSW5wdXRTdHJlYW1SZWFkZXI7
XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJlZFJlYWRlcjtcbiIgKworCQkJImltcG9y
dCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkiaW1wb3J0IGphdmEubmV0LlVSTDtcbiIg
KworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICBib29sZWFuIGxvYWRVUkwoZmlu
YWwgVVJMIHVybCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKyAKKwkJCSIgICAgICAgIElucHV0
U3RyZWFtIHN0cmVhbSA9IG51bGw7XG4iICsgCisJCQkiICAgICAgICBCdWZmZXJlZFJlYWRlciBy
ZWFkZXIgPSBudWxsO1xuIiArIAorCQkJIiAgICAgICAgdHJ5IHtcbiIgKyAKKwkJCSIgICAgICAg
ICAgICBzdHJlYW0gPSB1cmwub3BlblN0cmVhbSgpO1xuIiArIAorCQkJIiAgICAgICAgICAgIHJl
YWRlciA9IG5ldyBCdWZmZXJlZFJlYWRlcihuZXcgSW5wdXRTdHJlYW1SZWFkZXIoc3RyZWFtKSk7
XG4iICsgCisJCQkiICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKHJlYWRlci5yZWFkTGlu
ZSgpKTtcbiIgKworCQkJIiAgICAgICAgfSBmaW5hbGx5IHtcbiIgKyAKKwkJCSIgICAgICAgICAg
ICB0cnkge1xuIiArIAorCQkJIiAgICAgICAgICAgICAgICBpZiAocmVhZGVyICE9IG51bGwpXG4i
ICsgCisJCQkiICAgICAgICAgICAgICAgICAgICByZWFkZXIuY2xvc2UoKTtcbiIgKyAKKwkJCSIg
ICAgICAgICAgICB9IGNhdGNoIChJT0V4Y2VwdGlvbiB4KSB7XG4iICsgCisJCQkiICAgICAgICAg
ICAgfVxuIiArIAorCQkJIiAgICAgICAgfVxuIiArIAorCQkJIiAgICAgICAgcmV0dXJuIGZhbHNl
OyAvLyAnc3RyZWFtJyBtYXkgbm90IGJlIGNsb3NlZCBhdCB0aGlzIGxvY2F0aW9uXG4iICsgCisJ
CQkiICAgIH1cbiIgKyAKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10g
YXJncykgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgdHJ5IHtcbiIgKwor
CQkJIiAgICAgICAgICAgIG5ldyBYKCkubG9hZFVSTChuZXcgVVJMKFwiIit1cmwudG9TdHJpbmco
KSsiXCIpKTtcbiIgKworCQkJIiAgICAgICAgfSBjYXRjaCAoSU9FeGNlcHRpb24gZXgpIHtcbiIg
KworCQkJIiAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcIkdvdCBJTyBFeGNlcHRpb25c
IitleCk7XG4iICsKKwkJCSIgICAgICAgIH1cbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4i
CisJCX0sCisJCSJNYW5pZmVzdC1WZXJzaW9uOiAxLjAiLAorCQludWxsLAorCQl0cnVlLAorCQlu
dWxsLAorCQlvcHRpb25zLAorCQludWxsKTsKK30KKy8vIEJ1ZyAzNTg5MDMgLSBGaWx0ZXIgcHJh
Y3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5ncworLy8gQnVnIDM2MDkw
OCAtIEF2b2lkIHJlc291cmNlIGxlYWsgd2FybmluZyB3aGVuIHRoZSB1bmRlcmx5aW5nL2NoYWlu
ZWQgcmVzb3VyY2UgaXMgY2xvc2VkIGV4cGxpY2l0bHkKKy8vIERpZmZlcmVudCBwb2ludHMgaW4g
YSByZXNvdXJjZSBjaGFpbiBhcmUgY2xvc2VkCitwdWJsaWMgdm9pZCB0ZXN0MDYxZygpIHsKKwlN
YXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVy
T3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5F
UlJPUik7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRp
YWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVu
TmVnYXRpdmVUZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0
IGphdmEuaW8uRmlsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJl
YW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlSW5wdXRTdHJlYW07XG4iICsKKwkJCSJp
bXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIg
KworCQkJIiAgICB2b2lkIGNsb3NlTWlkZGxlKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwor
CQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKworCQkJ
IiAgICAgICAgRmlsZUlucHV0U3RyZWFtIGZpbGVTdHJlYW0gID0gbmV3IEZpbGVJbnB1dFN0cmVh
bShmaWxlKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMgPSBuZXcg
QnVmZmVyZWRJbnB1dFN0cmVhbShmaWxlU3RyZWFtKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVy
ZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFwID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oYmlzKTtc
biIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGJpcy5hdmFpbGFibGUoKSk7XG4i
ICsKKwkJCSIgICAgICAgIGJpcy5jbG9zZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAg
ICB2b2lkIGNsb3NlT3V0ZXIoKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAg
ICBGaWxlIGZpbGUyID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAg
RmlsZUlucHV0U3RyZWFtIGZpbGVTdHJlYW0yICA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZTIp
O1xuIiArCisJCQkiICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGJpczIgPSBuZXcgQnVmZmVy
ZWRJbnB1dFN0cmVhbShmaWxlU3RyZWFtMik7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5w
dXRTdHJlYW0gZG91YmxlV3JhcDIgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShiaXMyKTtcbiIg
KworCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGJpczIuYXZhaWxhYmxlKCkpO1xuIiAr
CisJCQkiICAgICAgICBkb3VibGVXcmFwMi5jbG9zZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKwor
CQkJIiAgICB2b2lkIG5ldmVyQ2xvc2VkKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJ
IiAgICAgICAgRmlsZSBmaWxlMyA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKKwkJCSIg
ICAgICAgIEZpbGVJbnB1dFN0cmVhbSBmaWxlU3RyZWFtMyAgPSBuZXcgRmlsZUlucHV0U3RyZWFt
KGZpbGUzKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMzID0gbmV3
IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oZmlsZVN0cmVhbTMpO1xuIiArCisJCQkiICAgICAgICBCdWZm
ZXJlZElucHV0U3RyZWFtIGRvdWJsZVdyYXAzID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oYmlz
Myk7XG4iICsKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihkb3VibGVXcmFwMy5hdmFp
bGFibGUoKSk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCQl9LAorCQkiLS0tLS0t
LS0tLVxuIiArIAorCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDI2KVxuIiArIAorCQki
CUJ1ZmZlcmVkSW5wdXRTdHJlYW0gZG91YmxlV3JhcDMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVh
bShiaXMzKTtcbiIgKyAKKwkJIgkgICAgICAgICAgICAgICAgICAgIF5eXl5eXl5eXl5eXG4iICsg
CisJCSJSZXNvdXJjZSBsZWFrOiBcJ2RvdWJsZVdyYXAzXCcgaXMgbmV2ZXIgY2xvc2VkXG4iICsg
CisJCSItLS0tLS0tLS0tXG4iLAorCQludWxsLAorCQl0cnVlLAorCQlvcHRpb25zKTsKK30KKy8v
IEJ1ZyAzNTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVh
ayB3YXJuaW5ncworLy8gQnVnIDM2MDkwOCAtIEF2b2lkIHJlc291cmNlIGxlYWsgd2FybmluZyB3
aGVuIHRoZSB1bmRlcmx5aW5nL2NoYWluZWQgcmVzb3VyY2UgaXMgY2xvc2VkIGV4cGxpY2l0bHkK
Ky8vIERpZmZlcmVudCBwb2ludHMgaW4gYSByZXNvdXJjZSBjaGFpbiBhcmUgcG90ZW50aWFsbHkg
Y2xvc2VkCitwdWJsaWMgdm9pZCB0ZXN0MDYxaCgpIHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBp
bGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0
VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQo
Q29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxl
LCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQluZXcg
U3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKwor
CQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQg
amF2YS5pby5GaWxlSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2Vw
dGlvbjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICB2b2lkIGNsb3Nl
TWlkZGxlKGJvb2xlYW4gYikgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAg
RmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAgRmls
ZUlucHV0U3RyZWFtIGZpbGVTdHJlYW0gID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKTtcbiIg
KworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMgPSBuZXcgQnVmZmVyZWRJbnB1
dFN0cmVhbShmaWxlU3RyZWFtKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVh
bSBkb3VibGVXcmFwID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oYmlzKTtcbiIgKworCQkJIiAg
ICAgICAgU3lzdGVtLm91dC5wcmludGxuKGJpcy5hdmFpbGFibGUoKSk7XG4iICsKKwkJCSIgICAg
ICAgIGlmIChiKVxuIiArCisJCQkiICAgICAgICAgICAgYmlzLmNsb3NlKCk7XG4iICsKKwkJCSIg
ICAgfVxuIiArCisJCQkiICAgIHZvaWQgY2xvc2VPdXRlcihib29sZWFuIGIpIHRocm93cyBJT0V4
Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZTIgPSBuZXcgRmlsZShcInNvbWVm
aWxlXCIpO1xuIiArCisJCQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0gZmlsZVN0cmVhbTIgID0g
bmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlMik7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5w
dXRTdHJlYW0gZHVtbXk7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlz
MiA9IChkdW1teSA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGZpbGVTdHJlYW0yKSk7XG4iICsK
KwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gZG91YmxlV3JhcDIgPSBuZXcgQnVmZmVy
ZWRJbnB1dFN0cmVhbShiaXMyKTtcbiIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxu
KGJpczIuYXZhaWxhYmxlKCkpO1xuIiArCisJCQkiICAgICAgICBpZiAoYilcbiIgKworCQkJIiAg
ICAgICAgICAgIGRvdWJsZVdyYXAyLmNsb3NlKCk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQki
ICAgIHZvaWQgcG90QW5kRGVmKGJvb2xlYW4gYikgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwor
CQkJIiAgICAgICAgRmlsZSBmaWxlMyA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKKwkJ
CSIgICAgICAgIEZpbGVJbnB1dFN0cmVhbSBmaWxlU3RyZWFtMyAgPSBuZXcgRmlsZUlucHV0U3Ry
ZWFtKGZpbGUzKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMzID0g
bmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oZmlsZVN0cmVhbTMpO1xuIiArCisJCQkiICAgICAgICBC
dWZmZXJlZElucHV0U3RyZWFtIGRvdWJsZVdyYXAzID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0o
YmlzMyk7XG4iICsKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihkb3VibGVXcmFwMy5h
dmFpbGFibGUoKSk7XG4iICsKKwkJCSIgICAgICAgIGlmIChiKSBiaXMzLmNsb3NlKCk7XG4iICsK
KwkJCSIgICAgICAgIGZpbGVTdHJlYW0zLmNsb3NlKCk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJ
CQkifVxuIgorCQl9LAorCQkiLS0tLS0tLS0tLVxuIiArIAorCQkiMS4gRVJST1IgaW4gWC5qYXZh
IChhdCBsaW5lIDEwKVxuIiArIAorCQkiCUJ1ZmZlcmVkSW5wdXRTdHJlYW0gZG91YmxlV3JhcCA9
IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGJpcyk7XG4iICsgCisJCSIJICAgICAgICAgICAgICAg
ICAgICBeXl5eXl5eXl5eXG4iICsgCisJCSJQb3RlbnRpYWwgcmVzb3VyY2UgbGVhazogXCdkb3Vi
bGVXcmFwXCcgbWF5IG5vdCBiZSBjbG9zZWRcbiIgKyAKKwkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJ
IjIuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAyMClcbiIgKyAKKwkJIglCdWZmZXJlZElucHV0
U3RyZWFtIGRvdWJsZVdyYXAyID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oYmlzMik7XG4iICsg
CisJCSIJICAgICAgICAgICAgICAgICAgICBeXl5eXl5eXl5eXlxuIiArIAorCQkiUG90ZW50aWFs
IHJlc291cmNlIGxlYWs6IFwnZG91YmxlV3JhcDJcJyBtYXkgbm90IGJlIGNsb3NlZFxuIiArIAor
CQkiLS0tLS0tLS0tLVxuIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJb3B0aW9ucyk7Cit9CisvLyBC
dWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsg
d2FybmluZ3MKKy8vIGxvY2FsIHZhciBpcyByZS11c2VkIGZvciB0d28gbGV2ZWxzIG9mIHdyYXBw
ZXJzCitwdWJsaWMgdm9pZCB0ZXN0MDYxaSgpIHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVy
T3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5j
bG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29t
cGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBD
b21waWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQluZXcgU3Ry
aW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKworCQkJ
ImltcG9ydCBqYXZhLmlvLklucHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uQnVm
ZmVyZWRJbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkZpbGVJbnB1dFN0cmVh
bTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGlj
IGNsYXNzIFgge1xuIiArCisJCQkiICAgIHZvaWQgY2xvc2VNaWRkbGUoKSB0aHJvd3MgSU9FeGNl
cHRpb24ge1xuIiArCisJCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxl
XCIpO1xuIiArCisJCQkiICAgICAgICBJbnB1dFN0cmVhbSBzdHJlYW0gID0gbmV3IEZpbGVJbnB1
dFN0cmVhbShmaWxlKTtcbiIgKworCQkJIiAgICAgICAgc3RyZWFtID0gbmV3IEJ1ZmZlcmVkSW5w
dXRTdHJlYW0oc3RyZWFtKTtcbiIgKworCQkJIiAgICAgICAgSW5wdXRTdHJlYW0gbWlkZGxlO1xu
IiArCisJCQkiICAgICAgICBzdHJlYW0gPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShtaWRkbGUg
PSBzdHJlYW0pO1xuIiArCisJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oc3RyZWFtLmF2
YWlsYWJsZSgpKTtcbiIgKworCQkJIiAgICAgICAgbWlkZGxlLmNsb3NlKCk7XG4iICsKKwkJCSIg
ICAgfVxuIiArCisJCQkiICAgIHZvaWQgY2xvc2VPdXRlcigpIHRocm93cyBJT0V4Y2VwdGlvbiB7
XG4iICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4i
ICsKKwkJCSIgICAgICAgIElucHV0U3RyZWFtIHN0cmVhbTIgID0gbmV3IEZpbGVJbnB1dFN0cmVh
bShmaWxlKTtcbiIgKworCQkJIiAgICAgICAgc3RyZWFtMiA9IG5ldyBCdWZmZXJlZElucHV0U3Ry
ZWFtKHN0cmVhbTIpO1xuIiArCisJCQkiICAgICAgICBzdHJlYW0yID0gbmV3IEJ1ZmZlcmVkSW5w
dXRTdHJlYW0oc3RyZWFtMik7XG4iICsKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihz
dHJlYW0yLmF2YWlsYWJsZSgpKTtcbiIgKworCQkJIiAgICAgICAgc3RyZWFtMi5jbG9zZSgpO1xu
IiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICB2b2lkIG5ldmVyQ2xvc2VkKCkgdGhyb3dzIElP
RXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21l
ZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAgSW5wdXRTdHJlYW0gc3RyZWFtMyAgPSBuZXcgRmls
ZUlucHV0U3RyZWFtKGZpbGUpO1xuIiArCisJCQkiICAgICAgICBzdHJlYW0zID0gbmV3IEJ1ZmZl
cmVkSW5wdXRTdHJlYW0oc3RyZWFtMyk7XG4iICsKKwkJCSIgICAgICAgIHN0cmVhbTMgPSBuZXcg
QnVmZmVyZWRJbnB1dFN0cmVhbShzdHJlYW0zKTtcbiIgKworCQkJIiAgICAgICAgU3lzdGVtLm91
dC5wcmludGxuKHN0cmVhbTMuYXZhaWxhYmxlKCkpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJ
In1cbiIKKwkJfSwKKwkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJIjEuIEVSUk9SIGluIFguamF2YSAo
YXQgbGluZSAyNilcbiIgKyAKKwkJIglJbnB1dFN0cmVhbSBzdHJlYW0zICA9IG5ldyBGaWxlSW5w
dXRTdHJlYW0oZmlsZSk7XG4iICsgCisJCSIJICAgICAgICAgICAgXl5eXl5eXlxuIiArIAorCQki
UmVzb3VyY2UgbGVhazogXCdzdHJlYW0zXCcgaXMgbmV2ZXIgY2xvc2VkXG4iICsgCisJCSItLS0t
LS0tLS0tXG4iLAorCQludWxsLAorCQl0cnVlLAorCQlvcHRpb25zKTsKK30KKy8vIEJ1ZyAzNTg5
MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5n
cworLy8gc2VsZi13cmFwcGluZyBhIG1ldGhvZCBhcmd1bWVudCAoY2F1c2VkIE5QRSBVbmNvbmRp
dGlvbmFsRmxvd0luZm8ubWFya0FzRGVmaW5pdGVseU51bGwoLi4pKS4KK3B1YmxpYyB2b2lkIHRl
c3QwNjFqKCkgeworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9u
cy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29t
cGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9O
X1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJP
Uik7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEi
LAorCQkJImltcG9ydCBqYXZhLmlvLklucHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEu
aW8uQnVmZmVyZWRJbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0
aW9uO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICAgIHZvaWQgZm9vKElu
cHV0U3RyZWFtIHN0cmVhbSkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAg
c3RyZWFtID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oc3RyZWFtKTtcbiIgKworCQkJIiAgICAg
ICAgU3lzdGVtLm91dC5wcmludGxuKHN0cmVhbS5hdmFpbGFibGUoKSk7XG4iICsKKwkJCSIgICAg
ICAgIHN0cmVhbS5jbG9zZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICB2b2lkIGJv
byhJbnB1dFN0cmVhbSBzdHJlYW0yKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAg
ICAgICBzdHJlYW0yID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oc3RyZWFtMik7XG4iICsKKwkJ
CSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihzdHJlYW0yLmF2YWlsYWJsZSgpKTtcbiIgKwor
CQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSIiLAorCQludWxsLAorCQl0cnVlLAor
CQludWxsLAorCQlvcHRpb25zLAorCQludWxsKTsKK30KKy8vIEJ1ZyAzNTg5MDMgLSBGaWx0ZXIg
cHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5ncworLy8gYSB3cmFw
cGVyIGlzIGNyZWF0ZWQgaW4gYSByZXR1cm4gc3RhdGVtZW50CitwdWJsaWMgdm9pZCB0ZXN0MDYx
aygpIHRocm93cyBJT0V4Y2VwdGlvbiB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlv
bnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2Vk
Q2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0KENvbXBpbGVy
T3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGls
ZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQluZXcgU3RyaW5nW10g
eworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKworCQkJImltcG9y
dCBqYXZhLmlvLkZpbGVJbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZl
cmVkSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIg
KworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICBCdWZmZXJlZElucHV0U3RyZWFt
IGdldFJlYWRlcihGaWxlIGZpbGUpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAg
ICAgIEZpbGVJbnB1dFN0cmVhbSBzdHJlYW0gPSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpO1xu
IiArCisJCQkiICAgICAgICByZXR1cm4gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oc3RyZWFtKTtc
biIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSIiLAorCQludWxsLAorCQl0
cnVlLAorCQludWxsLAorCQlvcHRpb25zLAorCQludWxsKTsKK30KKy8vIEJ1ZyAzNTg5MDMgLSBG
aWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5ncworLy8g
YSBjbG9zZWFibGUgaXMgYXNzaWduZWQgdG8gYSBmaWVsZAorcHVibGljIHZvaWQgdGVzdDA2MWwo
KSB0aHJvd3MgSU9FeGNlcHRpb24geworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25z
KCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENs
b3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9w
dGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVy
T3B0aW9ucy5FUlJPUik7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsK
KwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsKKwkJCSJpbXBvcnQg
amF2YS5pby5GaWxlSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJl
ZElucHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsK
KwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBz
dHJlYW07XG4iICsKKwkJCSIgICAgdm9pZCBmb28oRmlsZSBmaWxlKSB0aHJvd3MgSU9FeGNlcHRp
b24ge1xuIiArCisJCQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0gcyA9IG5ldyBGaWxlSW5wdXRT
dHJlYW0oZmlsZSk7XG4iICsKKwkJCSIgICAgICAgIHN0cmVhbSA9IG5ldyBCdWZmZXJlZElucHV0
U3RyZWFtKHMpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIiIsCisJ
CW51bGwsCisJCXRydWUsCisJCW51bGwsCisJCW9wdGlvbnMsCisJCW51bGwpOworfQorLy8gQnVn
IDM2MjMzMSAtIFJlc291cmNlIGxlYWsgbm90IGRldGVjdGVkIHdoZW4gY2xvc2VhYmxlIG5vdCBh
c3NpZ25lZCB0byB2YXJpYWJsZQorLy8gYSByZXNvdXJjZSBpcyBuZXZlciBhc3NpZ25lZAorcHVi
bGljIHZvaWQgdGVzdDA2MmEoKSB0aHJvd3MgSU9FeGNlcHRpb24geworCU1hcCBvcHRpb25zID0g
Z2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElP
Tl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRp
b25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRD
bG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3Qo
CisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxl
O1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZU91dHB1dFN0cmVhbTtcbiIgKworCQkJImlt
cG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiAr
CisJCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAg
ICAgbmV3IEZpbGVPdXRwdXRTdHJlYW0obmV3IEZpbGUoXCJDOlxcdGVtcFxcZm9vLnR4dFwiKSku
d3JpdGUoMSk7XG4iICsgCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIi0tLS0t
LS0tLS1cbiIgKyAKKwkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA2KVxuIiArIAorCQki
CW5ldyBGaWxlT3V0cHV0U3RyZWFtKG5ldyBGaWxlKFwiQzpcXHRlbXBcXGZvby50eHRcIikpLndy
aXRlKDEpO1xuIiArIAorCQkiCV5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXl5cbiIgKyAKKwkJIlJlc291cmNlIGxlYWs6IFwnPHVuYXNzaWduZWQgQ2xvc2Vh
YmxlIHZhbHVlPlwnIGlzIG5ldmVyIGNsb3NlZFxuIiArIAorCQkiLS0tLS0tLS0tLVxuIiwKKwkJ
bnVsbCwKKwkJdHJ1ZSwKKwkJb3B0aW9ucyk7Cit9CisvLyBCdWcgMzYyMzMxIC0gUmVzb3VyY2Ug
bGVhayBub3QgZGV0ZWN0ZWQgd2hlbiBjbG9zZWFibGUgbm90IGFzc2lnbmVkIHRvIHZhcmlhYmxl
CisvLyBhIGZyZXNobHkgYWxsb2NhdGVkIHJlc291cmNlIGlzIGltbWVkaWF0ZWx5IGNsb3NlZAor
cHVibGljIHZvaWQgdGVzdDA2MmIoKSB0aHJvd3MgSU9FeGNlcHRpb24geworCU1hcCBvcHRpb25z
ID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9Q
VElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlv
cHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9z
ZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJdGhpcy5ydW5Db25mb3JtVGVz
dCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZhLmlvLkZp
bGU7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlT3V0cHV0U3RyZWFtO1xuIiArCisJCQki
aW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4i
ICsKKwkJCSIgICAgdm9pZCBmb28oKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAg
ICAgICBuZXcgRmlsZU91dHB1dFN0cmVhbShuZXcgRmlsZShcIkM6XFx0ZW1wXFxmb28udHh0XCIp
KS5jbG9zZSgpO1xuIiArIAorCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSIiLAor
CQludWxsLAorCQl0cnVlLAorCQludWxsLAorCQlvcHRpb25zLAorCQludWxsKTsKK30KKy8vIEJ1
ZyAzNjIzMzEgLSBSZXNvdXJjZSBsZWFrIG5vdCBkZXRlY3RlZCB3aGVuIGNsb3NlYWJsZSBub3Qg
YXNzaWduZWQgdG8gdmFyaWFibGUKKy8vIGEgcmVzb3VyY2UgaXMgZGlyZWN0bHkgcGFzc2VkIHRv
IGFub3RoZXIgbWV0aG9kCitwdWJsaWMgdm9pZCB0ZXN0MDYyYygpIHRocm93cyBJT0V4Y2VwdGlv
biB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChD
b21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9w
dGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0
UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0
aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQki
aW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkZpbGVPdXRwdXRT
dHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1
YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICB2b2lkIGZvbygpIHRocm93cyBJT0V4Y2VwdGlv
biB7XG4iICsKKwkJCSIgICAgICAgIHdyaXRlSXQobmV3IEZpbGVPdXRwdXRTdHJlYW0obmV3IEZp
bGUoXCJDOlxcdGVtcFxcZm9vLnR4dFwiKSkpO1xuIiArIAorCQkJIiAgICB9XG4iICsKKwkJCSIg
ICAgdm9pZCB3cml0ZUl0KEZpbGVPdXRwdXRTdHJlYW0gZm9zKSB0aHJvd3MgSU9FeGNlcHRpb24g
e1xuIiArCisJCQkiICAgICAgICBmb3Mud3JpdGUoMSk7XG4iICsKKwkJCSIgICAgICAgIGZvcy5j
bG9zZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIiIsCisJCW51
bGwsCisJCXRydWUsCisJCW51bGwsCisJCW9wdGlvbnMsCisJCW51bGwpOworfQorLy8gQnVnIDM2
MjMzMSAtIFJlc291cmNlIGxlYWsgbm90IGRldGVjdGVkIHdoZW4gY2xvc2VhYmxlIG5vdCBhc3Np
Z25lZCB0byB2YXJpYWJsZQorLy8gYSByZXNvdXJjZSBpcyBub3QgdXNlZAorcHVibGljIHZvaWQg
dGVzdDA2MmQoKSB0aHJvd3MgSU9FeGNlcHRpb24geworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGls
ZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRV
bmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChD
b21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUs
IENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBT
dHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCisJ
CQkiaW1wb3J0IGphdmEuaW8uRmlsZU91dHB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZh
LmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICAg
IHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgbmV3IEZp
bGVPdXRwdXRTdHJlYW0obmV3IEZpbGUoXCJDOlxcdGVtcFxcZm9vLnR4dFwiKSk7XG4iICsgCisJ
CQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJIjEu
IEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA2KVxuIiArIAorCQkiCW5ldyBGaWxlT3V0cHV0U3Ry
ZWFtKG5ldyBGaWxlKFwiQzpcXHRlbXBcXGZvby50eHRcIikpO1xuIiArIAorCQkiCV5eXl5eXl5e
Xl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIgKyAKKwkJIlJlc291
cmNlIGxlYWs6IFwnPHVuYXNzaWduZWQgQ2xvc2VhYmxlIHZhbHVlPlwnIGlzIG5ldmVyIGNsb3Nl
ZFxuIiArIAorCQkiLS0tLS0tLS0tLVxuIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJb3B0aW9ucyk7
Cit9CisvLyBCdWcgMzYyMzMyIC0gT25seSByZXBvcnQgcG90ZW50aWFsIGxlYWsgd2hlbiBjbG9z
ZWFibGUgbm90IGNyZWF0ZWQgaW4gdGhlIGxvY2FsIHNjb3BlCisvLyBhIHdyYXBwZXIgaXMgb2J0
YWluZWQgZnJvbSBhbm90aGVyIG1ldGhvZAorcHVibGljIHZvaWQgdGVzdDA2M2EoKSB0aHJvd3Mg
SU9FeGNlcHRpb24geworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0
aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwg
Q29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BU
SU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5F
UlJPUik7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5q
YXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8u
RmlsZUlucHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uQnVmZmVyZWRJbnB1dFN0
cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVi
bGljIGNsYXNzIFgge1xuIiArCisJCQkiICAgIHZvaWQgcmVhZChGaWxlIGZpbGUpIHRocm93cyBJ
T0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZpbGVJbnB1dFN0cmVhbSBzdHJlYW0gPSBu
ZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpO1xuIiArCisJCQkiICAgICAgICBCdWZmZXJlZElucHV0
U3RyZWFtIGJpcyA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKHN0cmVhbSk7IC8vIG5ldmVyIHNp
bmNlIHJlYXNzaWduZWRcbiIgKworCQkJIiAgICAgICAgRmlsZUlucHV0U3RyZWFtIHN0cmVhbTIg
PSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpOyAvLyB1bnN1cmUgc2luY2UgcGFzc2VkIHRvIG1l
dGhvZFxuIiArCisJCQkiICAgICAgICBiaXMgPSBnZXRSZWFkZXIoc3RyZWFtMik7IC8vIHVuc3Vy
ZSBzaW5jZSBvYnRhaW5lZCBmcm9tIG1ldGhvZFxuIiArCisJCQkiICAgICAgICBiaXMuYXZhaWxh
YmxlKCk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0g
Z2V0UmVhZGVyKEZpbGVJbnB1dFN0cmVhbSBzdHJlYW0pIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4i
ICsKKwkJCSIgICAgICAgIHJldHVybiBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShzdHJlYW0pO1xu
IiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIi0tLS0tLS0tLS1cbiIgKyAK
KwkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA4KVxuIiArIAorCQkiCUJ1ZmZlcmVkSW5w
dXRTdHJlYW0gYmlzID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oc3RyZWFtKTsgLy8gbmV2ZXIg
c2luY2UgcmVhc3NpZ25lZFxuIiArIAorCQkiCSAgICAgICAgICAgICAgICAgICAgXl5eXG4iICsg
CisJCSJSZXNvdXJjZSBsZWFrOiBcJ2Jpc1wnIGlzIG5ldmVyIGNsb3NlZFxuIiArIAorCQkiLS0t
LS0tLS0tLVxuIiArIAorCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDkpXG4iICsgCisJ
CSIJRmlsZUlucHV0U3RyZWFtIHN0cmVhbTIgPSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpOyAv
LyB1bnN1cmUgc2luY2UgcGFzc2VkIHRvIG1ldGhvZFxuIiArIAorCQkiCSAgICAgICAgICAgICAg
ICBeXl5eXl5eXG4iICsgCisJCSJQb3RlbnRpYWwgcmVzb3VyY2UgbGVhazogXCdzdHJlYW0yXCcg
bWF5IG5vdCBiZSBjbG9zZWRcbiIgKyAKKwkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJIjMuIEVSUk9S
IGluIFguamF2YSAoYXQgbGluZSAxMClcbiIgKyAKKwkJIgliaXMgPSBnZXRSZWFkZXIoc3RyZWFt
Mik7IC8vIHVuc3VyZSBzaW5jZSBvYnRhaW5lZCBmcm9tIG1ldGhvZFxuIiArIAorCQkiCV5eXl5e
Xl5eXl5eXl5eXl5eXl5eXl5eXlxuIiArIAorCQkiUG90ZW50aWFsIHJlc291cmNlIGxlYWs6IFwn
YmlzXCcgbWF5IG5vdCBiZSBjbG9zZWRcbiIgKyAKKwkJIi0tLS0tLS0tLS1cbiIsCisJCW51bGws
CisJCXRydWUsCisJCW9wdGlvbnMpOworfQorLy8gQnVnIDM2MjMzMiAtIE9ubHkgcmVwb3J0IHBv
dGVudGlhbCBsZWFrIHdoZW4gY2xvc2VhYmxlIG5vdCBjcmVhdGVkIGluIHRoZSBsb2NhbCBzY29w
ZQorLy8gYSB3cmFwcGVyIGlzIG9idGFpbmVkIGZyb20gYSBmaWVsZCByZWFkCitwdWJsaWMgdm9p
ZCB0ZXN0MDYzYigpIHRocm93cyBJT0V4Y2VwdGlvbiB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21w
aWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9y
dFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0
KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJs
ZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQluZXcg
U3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZUlucHV0U3Ry
ZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uQnVmZmVyZWRJbnB1dFN0cmVhbTtcbiIgKwor
CQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgg
e1xuIiArCisJCQkiICAgIEZpbGVJbnB1dFN0cmVhbSBzdHJlYW07XG4iICsKKwkJCSIgICAgdm9p
ZCByZWFkKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmlsZUlucHV0
U3RyZWFtIHMgPSB0aGlzLnN0cmVhbTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0
cmVhbSBiaXMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShzKTsgLy8gZG9uJ3QgY29tcGxhaW4g
c2luY2UgcyBpcyBvYnRhaW5lZCBmcm9tIGEgZmllbGRcbiIgKworCQkJIiAgICAgICAgYmlzLmF2
YWlsYWJsZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIiIsCisJ
CW51bGwsCisJCXRydWUsCisJCW51bGwsCisJCW9wdGlvbnMsCisJCW51bGwpOworfQorLy8gQnVn
IDM2MjMzMiAtIE9ubHkgcmVwb3J0IHBvdGVudGlhbCBsZWFrIHdoZW4gY2xvc2VhYmxlIG5vdCBj
cmVhdGVkIGluIHRoZSBsb2NhbCBzY29wZQorLy8gYSB3cmFwcGVyIGlzIGFzc2lnbmVkIHRvIGEg
ZmllbGQKK3B1YmxpYyB2b2lkIHRlc3QwNjNjKCkgdGhyb3dzIElPRXhjZXB0aW9uIHsKKwlNYXAg
b3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0
aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJP
Uik7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxs
eVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVuQ29u
Zm9ybVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2
YS5pby5GaWxlSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJlZElu
cHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJ
CSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBzdHJl
YW07XG4iICsKKwkJCSIgICAgdm9pZCByZWFkKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwor
CQkJIiAgICAgICAgRmlsZUlucHV0U3RyZWFtIHMgPSBuZXcgRmlsZUlucHV0U3RyZWFtKFwic29t
ZWZpbGVcIik7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzID0gbmV3
IEJ1ZmZlcmVkSW5wdXRTdHJlYW0ocyk7XG4iICsKKwkJCSIgICAgICAgIHRoaXMuc3RyZWFtID0g
YmlzO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIiIsCisJCW51bGws
CisJCXRydWUsCisJCW51bGwsCisJCW9wdGlvbnMsCisJCW51bGwpOworfQogcHVibGljIHN0YXRp
YyBDbGFzcyB0ZXN0Q2xhc3MoKSB7CiAJcmV0dXJuIFRyeVdpdGhSZXNvdXJjZXNTdGF0ZW1lbnRU
ZXN0LmNsYXNzOwogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9BbGxvY2F0aW9uRXhwcmVzc2lv
bi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2FzdC9BbGxvY2F0aW9uRXhwcmVzc2lvbi5qYXZhCmluZGV4IGU4MTFl
YTkuLjcxMjE3Y2UgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQWxsb2NhdGlvbkV4cHJlc3Npb24u
amF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXN0L0FsbG9jYXRpb25FeHByZXNzaW9uLmphdmEKQEAgLTEsNSAr
MSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAy
MDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAy
MDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4g
VGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUg
YXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2
MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWls
YWJsZSBhdApAQCAtMTIsNiArMTIsNyBAQAogICogICAgIAkJCQkJCWJ1ZyAzMTkyMDEgLSBbbnVs
bF0gbm8gd2FybmluZyB3aGVuIHVuYm94aW5nIFNpbmdsZU5hbWVSZWZlcmVuY2UgY2F1c2VzIE5Q
RQogICogICAgIAkJCQkJCWJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2lu
ZyB0cnktd2l0aC1yZXNvdXJjZXMKICAqIAkJCQkJCQlidWcgMTg2MzQyIC0gW2NvbXBpbGVyXVtu
dWxsXSBVc2luZyBhbm5vdGF0aW9ucyBmb3IgbnVsbCBjaGVja2luZworICoJCQkJCQkJYnVnIDM1
ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5p
bmdzCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmFzdDsKIApAQCAtMzcsNiArMzgsOCBAQAogCXByb3RlY3RlZCBUeXBl
QmluZGluZyB0eXBlRXhwZWN0ZWQ7CSAgLy8gZm9yIDw+IGluZmVyZW5jZQogCXB1YmxpYyBib29s
ZWFuIGluZmVycmVkUmV0dXJuVHlwZTsKIAorCXB1YmxpYyBGYWtlZFRyYWNraW5nVmFyaWFibGUg
Y2xvc2VUcmFja2VyOwkvLyB3aGVuIGFsbG9jYXRpb24gYSBDbG9zZWFibGUgc3RvcmUgYSBwcmUt
bGltaW5hcnkgdHJhY2tpbmcgdmFyaWFibGUgaGVyZQorCiBwdWJsaWMgRmxvd0luZm8gYW5hbHlz
ZUNvZGUoQmxvY2tTY29wZSBjdXJyZW50U2NvcGUsIEZsb3dDb250ZXh0IGZsb3dDb250ZXh0LCBG
bG93SW5mbyBmbG93SW5mbykgewogCS8vIGNoZWNrIGNhcHR1cmVkIHZhcmlhYmxlcyBhcmUgaW5p
dGlhbGl6ZWQgaW4gY3VycmVudCBjb250ZXh0ICgyNjEzNCkKIAljaGVja0NhcHR1cmVkTG9jYWxJ
bml0aWFsaXphdGlvbklmTmVjZXNzYXJ5KChSZWZlcmVuY2VCaW5kaW5nKXRoaXMuYmluZGluZy5k
ZWNsYXJpbmdDbGFzcy5lcmFzdXJlKCksIGN1cnJlbnRTY29wZSwgZmxvd0luZm8pOwpAQCAtNDQs
MTggKzQ3LDIyIEBACiAJLy8gcHJvY2VzcyBhcmd1bWVudHMKIAlpZiAodGhpcy5hcmd1bWVudHMg
IT0gbnVsbCkgewogCQlmb3IgKGludCBpID0gMCwgY291bnQgPSB0aGlzLmFyZ3VtZW50cy5sZW5n
dGg7IGkgPCBjb3VudDsgaSsrKSB7Ci0JCQkvLyBpZiBhcmd1bWVudCBpcyBhbiBBdXRvQ2xvc2Vh
YmxlIGluc2VydCBpbmZvIHRoYXQgaXQgKm1heSogYmUgY2xvc2VkIChieSB0aGUgdGFyZ2V0IG1l
dGhvZCwgaS5lLikKLQkJCWZsb3dJbmZvID0gRmFrZWRUcmFja2luZ1ZhcmlhYmxlLm1hcmtQYXNz
ZWRUb091dHNpZGUoY3VycmVudFNjb3BlLCB0aGlzLmFyZ3VtZW50c1tpXSwgZmxvd0luZm8pOwog
CQkJZmxvd0luZm8gPQogCQkJCXRoaXMuYXJndW1lbnRzW2ldCiAJCQkJCS5hbmFseXNlQ29kZShj
dXJyZW50U2NvcGUsIGZsb3dDb250ZXh0LCBmbG93SW5mbykKIAkJCQkJLnVuY29uZGl0aW9uYWxJ
bml0cygpOworCQkJLy8gaWYgYXJndW1lbnQgaXMgYW4gQXV0b0Nsb3NlYWJsZSBpbnNlcnQgaW5m
byB0aGF0IGl0ICptYXkqIGJlIGNsb3NlZCAoYnkgdGhlIHRhcmdldCBtZXRob2QsIGkuZS4pCisJ
CQlmbG93SW5mbyA9IEZha2VkVHJhY2tpbmdWYXJpYWJsZS5tYXJrUGFzc2VkVG9PdXRzaWRlKGN1
cnJlbnRTY29wZSwgdGhpcy5hcmd1bWVudHNbaV0sIGZsb3dJbmZvLCB0aGlzLnJlc29sdmVkVHlw
ZSk7CiAJCQlpZiAoKHRoaXMuYXJndW1lbnRzW2ldLmltcGxpY2l0Q29udmVyc2lvbiAmIFR5cGVJ
ZHMuVU5CT1hJTkcpICE9IDApIHsKIAkJCQl0aGlzLmFyZ3VtZW50c1tpXS5jaGVja05QRShjdXJy
ZW50U2NvcGUsIGZsb3dDb250ZXh0LCBmbG93SW5mbyk7CiAJCQl9CiAJCX0KIAkJYW5hbHlzZUFy
Z3VtZW50cyhjdXJyZW50U2NvcGUsIGZsb3dDb250ZXh0LCBmbG93SW5mbywgdGhpcy5iaW5kaW5n
LCB0aGlzLmFyZ3VtZW50cyk7CiAJfQorCisJaWYgKEZha2VkVHJhY2tpbmdWYXJpYWJsZS5pc0F1
dG9DbG9zZWFibGUodGhpcy5yZXNvbHZlZFR5cGUpKQorCQlGYWtlZFRyYWNraW5nVmFyaWFibGUu
YW5hbHlzZUNsb3NlYWJsZUFsbG9jYXRpb24oY3VycmVudFNjb3BlLCBmbG93SW5mbywgdGhpcyk7
CisKIAkvLyByZWNvcmQgc29tZSBkZXBlbmRlbmN5IGluZm9ybWF0aW9uIGZvciBleGNlcHRpb24g
dHlwZXMKIAlSZWZlcmVuY2VCaW5kaW5nW10gdGhyb3duRXhjZXB0aW9uczsKIAlpZiAoKCh0aHJv
d25FeGNlcHRpb25zID0gdGhpcy5iaW5kaW5nLnRocm93bkV4Y2VwdGlvbnMpLmxlbmd0aCkgIT0g
MCkgewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Bc3NpZ25tZW50LmphdmEgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0
L0Fzc2lnbm1lbnQuamF2YQppbmRleCA5NzBmYzI0Li41MzlhNjYxIDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L0Fzc2lnbm1lbnQuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Fzc2lnbm1lbnQuamF2YQpA
QCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMp
IDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMp
IDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJl
c2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBh
cmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBM
aWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQg
aXMgYXZhaWxhYmxlIGF0CkBAIC0xNCw2ICsxNCw3IEBACiAgKiAgICAgCQkJCQkJYnVnIDMzNTA5
MyAtIFtjb21waWxlcl1bbnVsbF0gbWluaW1hbCBob29rIGZvciBmdXR1cmUgbnVsbCBhbm5vdGF0
aW9uIHN1cHBvcnQKICAqICAgICAJCQkJCQlidWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcg
Zm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCiAgKgkJCQkJCQlidWcgMTg2MzQyIC0gW2Nv
bXBpbGVyXVtudWxsXSBVc2luZyBhbm5vdGF0aW9ucyBmb3IgbnVsbCBjaGVja2luZworICoJCQkJ
CQkJYnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBs
ZWFrIHdhcm5pbmdzCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdDsKIApAQCAtNDYsMTkgKzQ3LDI3IEBACiAJaWYg
KCh0aGlzLmV4cHJlc3Npb24uaW1wbGljaXRDb252ZXJzaW9uICYgVHlwZUlkcy5VTkJPWElORykg
IT0gMCkgewogCQl0aGlzLmV4cHJlc3Npb24uY2hlY2tOUEUoY3VycmVudFNjb3BlLCBmbG93Q29u
dGV4dCwgZmxvd0luZm8pOwogCX0KKwkKKwlGbG93SW5mbyBwcmVJbml0SW5mbyA9IG51bGw7CisJ
Ym9vbGVhbiBzaG91bGRBbmFseXNlUmVzb3VyY2UgPSBsb2NhbCAhPSBudWxsIAorCQkJJiYgZmxv
d0luZm8ucmVhY2hNb2RlKCkgPT0gRmxvd0luZm8uUkVBQ0hBQkxFIAorCQkJJiYgKEZha2VkVHJh
Y2tpbmdWYXJpYWJsZS5pc0F1dG9DbG9zZWFibGUodGhpcy5leHByZXNzaW9uLnJlc29sdmVkVHlw
ZSkKKwkJCQkJfHwgdGhpcy5leHByZXNzaW9uLnJlc29sdmVkVHlwZSA9PSBUeXBlQmluZGluZy5O
VUxMKTsKKwlpZiAoc2hvdWxkQW5hbHlzZVJlc291cmNlKSB7CisJCXByZUluaXRJbmZvID0gZmxv
d0luZm8udW5jb25kaXRpb25hbENvcHkoKTsKKwkJLy8gYW5hbHlzaXMgb2YgcmVzb3VyY2UgbGVh
a3MgbmVlZHMgYWRkaXRpb25hbCBjb250ZXh0IHdoaWxlIGFuYWx5emluZyB0aGUgUkhTOgorCQlG
YWtlZFRyYWNraW5nVmFyaWFibGUucHJlQ29ubmVjdFRyYWNrZXJBY3Jvc3NBc3NpZ25tZW50KHRo
aXMsIGxvY2FsLCB0aGlzLmV4cHJlc3Npb24pOworCX0KKwkKIAlmbG93SW5mbyA9ICgoUmVmZXJl
bmNlKSB0aGlzLmxocykKIAkJLmFuYWx5c2VBc3NpZ25tZW50KGN1cnJlbnRTY29wZSwgZmxvd0Nv
bnRleHQsIGZsb3dJbmZvLCB0aGlzLCBmYWxzZSkKIAkJLnVuY29uZGl0aW9uYWxJbml0cygpOwot
CWlmIChsb2NhbCAhPSBudWxsKSB7Ci0JCUxvY2FsVmFyaWFibGVCaW5kaW5nIHByZXZpb3VzVHJh
Y2tlckJpbmRpbmcgPSBudWxsOwotCQlpZiAobG9jYWwuY2xvc2VUcmFja2VyICE9IG51bGwpIHsK
LQkJCS8vIEFzc2lnbmluZyB0byBhIHZhcmlhYmxlIGFscmVhZHkgaG9sZGluZyBhbiBBdXRvQ2xv
c2VhYmxlLCBoYXMgaXQgYmVlbiBjbG9zZWQgYmVmb3JlPwotCQkJcHJldmlvdXNUcmFja2VyQmlu
ZGluZyA9IGxvY2FsLmNsb3NlVHJhY2tlci5iaW5kaW5nOwotCQkJaWYgKCFmbG93SW5mby5pc0Rl
ZmluaXRlbHlOdWxsKGxvY2FsKSkgLy8gb25seSBpZiBwcmV2aW91cyB2YWx1ZSBtYXkgYmUgbm9u
LW51bGwKLQkJCQlsb2NhbC5jbG9zZVRyYWNrZXIucmVjb3JkRXJyb3JMb2NhdGlvbih0aGlzLCBm
bG93SW5mby5udWxsU3RhdHVzKHByZXZpb3VzVHJhY2tlckJpbmRpbmcpKTsKLQkJfQotCQlGYWtl
ZFRyYWNraW5nVmFyaWFibGUuaGFuZGxlUmVzb3VyY2VBc3NpZ25tZW50KGZsb3dJbmZvLCB0aGlz
LCB0aGlzLmV4cHJlc3Npb24sIGxvY2FsLCBwcmV2aW91c1RyYWNrZXJCaW5kaW5nKTsKLQl9CisK
KwlpZiAoc2hvdWxkQW5hbHlzZVJlc291cmNlKQorCQlGYWtlZFRyYWNraW5nVmFyaWFibGUuaGFu
ZGxlUmVzb3VyY2VBc3NpZ25tZW50KHByZUluaXRJbmZvLCBmbG93SW5mbywgdGhpcywgdGhpcy5l
eHByZXNzaW9uLCBsb2NhbCk7CisJZWxzZQorCQlGYWtlZFRyYWNraW5nVmFyaWFibGUuY2xlYW5V
cEFmdGVyQXNzaWdubWVudChjdXJyZW50U2NvcGUsIHRoaXMubGhzLmJpdHMsIHRoaXMuZXhwcmVz
c2lvbik7CisKIAlpbnQgbnVsbFN0YXR1cyA9IHRoaXMuZXhwcmVzc2lvbi5udWxsU3RhdHVzKGZs
b3dJbmZvKTsKIAlpZiAobG9jYWwgIT0gbnVsbCAmJiAobG9jYWwudHlwZS50YWdCaXRzICYgVGFn
Qml0cy5Jc0Jhc2VUeXBlKSA9PSAwKSB7CiAJCWlmIChudWxsU3RhdHVzID09IEZsb3dJbmZvLk5V
TEwpIHsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvRmFrZWRUcmFja2luZ1ZhcmlhYmxlLmphdmEg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvYXN0L0Zha2VkVHJhY2tpbmdWYXJpYWJsZS5qYXZhCmluZGV4IGVlMTMwNDcuLmIz
NWE2N2MgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvRmFrZWRUcmFja2luZ1ZhcmlhYmxlLmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2FzdC9GYWtlZFRyYWNraW5nVmFyaWFibGUuamF2YQpAQCAtMSw1ICsxLDUg
QEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMTEgR0sgU29m
dHdhcmUgQUcgYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAxMSwgMjAxMiBHSyBTb2Z0
d2FyZSBBRyBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFt
IGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVu
ZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGlj
aCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAt
MTUsNyArMTUsNiBAQAogaW1wb3J0IGphdmEudXRpbC5NYXA7CiBpbXBvcnQgamF2YS51dGlsLk1h
cC5FbnRyeTsKIAotaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLkNoYXJPcGVy
YXRpb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNvZGVnZW4u
Q29kZVN0cmVhbTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZmxv
dy5GbG93Q29udGV4dDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
Zmxvdy5GbG93SW5mbzsKQEAgLTQ4LDIwICs0NywyOCBAQAogCXByaXZhdGUgc3RhdGljIGZpbmFs
IGludCBDTE9TRURfSU5fTkVTVEVEX01FVEhPRCA9IDQ7CiAJLy8gYSBsb2NhdGlvbiBpbmRlcGVu
ZGVudCBpc3N1ZSBoYXMgYmVlbiByZXBvcnRlZCBhbHJlYWR5IGFnYWluc3QgdGhpcyByZXNvdXJj
ZToKIAlwcml2YXRlIHN0YXRpYyBmaW5hbCBpbnQgUkVQT1JURUQgPSA4OwotCQorCS8vIGEgcmVz
b3VyY2UgaXMgd3JhcHBlZCBpbiBhbm90aGVyIHJlc291cmNlOgorCXByaXZhdGUgc3RhdGljIGZp
bmFsIGludCBXUkFQUEVEID0gMTY7CisKKwlwcml2YXRlIHN0YXRpYyBmaW5hbCBpbnQgRE9VQlRf
TUFTSyA9IENMT1NFX1NFRU4gfCBQQVNTRURfVE9fT1VUU0lERSB8IENMT1NFRF9JTl9ORVNURURf
TUVUSE9EIHwgUkVQT1JURUQ7IC8vIG5vdCBXUkFQUEVECisKIAkvKioKLQkgKiBCaXRzZXQgb2Yg
e0BsaW5rICNDTE9TRV9TRUVOfSwge0BsaW5rICNQQVNTRURfVE9fT1VUU0lERX0sIHtAbGluayAj
Q0xPU0VEX0lOX05FU1RFRF9NRVRIT0R9IGFuZCB7QGxpbmsgI1JFUE9SVEVEfS4KKwkgKiBCaXRz
ZXQgb2Yge0BsaW5rICNDTE9TRV9TRUVOfSwge0BsaW5rICNQQVNTRURfVE9fT1VUU0lERX0sIHtA
bGluayAjQ0xPU0VEX0lOX05FU1RFRF9NRVRIT0R9LCB7QGxpbmsgI1JFUE9SVEVEfSBhbmQge0Bs
aW5rICNXUkFQUEVEfS4KIAkgKi8KIAlwcml2YXRlIGludCBnbG9iYWxDbG9zaW5nU3RhdGUgPSAw
OwogCisJcHVibGljIExvY2FsVmFyaWFibGVCaW5kaW5nIG9yaWdpbmFsQmluZGluZzsgLy8gdGhl
IHJlYWwgbG9jYWwgYmVpbmcgdHJhY2tlZCwgY2FuIGJlIG51bGwgZm9yIHByZWxpbWluYXJ5IHRy
YWNrIHZhcnMgZm9yIGFsbG9jYXRpb24gZXhwcmVzc2lvbnMKKwkKKwlwdWJsaWMgRmFrZWRUcmFj
a2luZ1ZhcmlhYmxlIGlubmVyVHJhY2tlcjsgLy8gY2hhaW5lZCB0cmFja2luZyB2YXJpYWJsZSBv
ZiBhIGNoYWluZWQgKHdyYXBwZWQpIHJlc291cmNlCisKIAlNZXRob2RTY29wZSBtZXRob2RTY29w
ZTsgLy8gZGVzaWduYXRlcyB0aGUgbWV0aG9kIGRlY2xhcmluZyB0aGlzIHZhcmlhYmxlCi0JCi0J
cHVibGljIExvY2FsVmFyaWFibGVCaW5kaW5nIG9yaWdpbmFsQmluZGluZzsgLy8gdGhlIHJlYWwg
bG9jYWwgYmVpbmcgdHJhY2tlZAotCQotCUhhc2hNYXAgcmVjb3JkZWRMb2NhdGlvbnM7IC8vIGlu
aXRpYWxseSBudWxsLCBBU1ROb2RlIC0+IEludGVnZXIgCiAKKwlwcml2YXRlIEhhc2hNYXAgcmVj
b3JkZWRMb2NhdGlvbnM7IC8vIGluaXRpYWxseSBudWxsLCBBU1ROb2RlIC0+IEludGVnZXIKIAot
CXB1YmxpYyBGYWtlZFRyYWNraW5nVmFyaWFibGUoTG9jYWxWYXJpYWJsZUJpbmRpbmcgb3JpZ2lu
YWwsIFN0YXRlbWVudCBsb2NhdGlvbikgeworCS8vIHRlbXBvcmFyeSBzdG9yYWdlIHdoaWxlIGFu
YWx5emluZyAicmVzID0gbmV3IFJlcygpOyI6CisJcHJpdmF0ZSBBU1ROb2RlIGN1cnJlbnRBc3Np
Z25tZW50OyAvLyB0ZW1wb3JhcmlseSBzdG9yZSB0aGUgYXNzaWdubWVudCBhcyB0aGUgbG9jYXRp
b24gZm9yIGVycm9yIHJlcG9ydGluZworCisJcHVibGljIEZha2VkVHJhY2tpbmdWYXJpYWJsZShM
b2NhbFZhcmlhYmxlQmluZGluZyBvcmlnaW5hbCwgQVNUTm9kZSBsb2NhdGlvbikgewogCQlzdXBl
cihvcmlnaW5hbC5uYW1lLCBsb2NhdGlvbi5zb3VyY2VTdGFydCwgbG9jYXRpb24uc291cmNlRW5k
KTsKIAkJdGhpcy50eXBlID0gbmV3IFNpbmdsZVR5cGVSZWZlcmVuY2UoCiAJCQkJVHlwZUNvbnN0
YW50cy5PQkpFQ1QsCkBAIC02OSw2ICs3NiwxNyBAQAogCQl0aGlzLm1ldGhvZFNjb3BlID0gb3Jp
Z2luYWwuZGVjbGFyaW5nU2NvcGUubWV0aG9kU2NvcGUoKTsKIAkJdGhpcy5vcmlnaW5hbEJpbmRp
bmcgPSBvcmlnaW5hbDsKIAkJcmVzb2x2ZShvcmlnaW5hbC5kZWNsYXJpbmdTY29wZSk7CisJfQor
CisJLyogQ3JlYXRlIGFuIHVuYXNzaWduZWQgdHJhY2tpbmcgdmFyaWFibGUgd2hpbGUgYW5hbHl6
aW5nIGFuIGFsbG9jYXRpb24gZXhwcmVzc2lvbjogKi8KKwlwcml2YXRlIEZha2VkVHJhY2tpbmdW
YXJpYWJsZShCbG9ja1Njb3BlIHNjb3BlLCBBU1ROb2RlIGxvY2F0aW9uKSB7CisJCXN1cGVyKCI8
dW5hc3NpZ25lZCBDbG9zZWFibGUgdmFsdWU+Ii50b0NoYXJBcnJheSgpLCBsb2NhdGlvbi5zb3Vy
Y2VTdGFydCwgbG9jYXRpb24uc291cmNlRW5kKTsgLy8kTk9OLU5MUy0xJAorCQl0aGlzLnR5cGUg
PSBuZXcgU2luZ2xlVHlwZVJlZmVyZW5jZSgKKwkJCQlUeXBlQ29uc3RhbnRzLk9CSkVDVCwKKwkJ
CQkoKGxvbmcpdGhpcy5zb3VyY2VTdGFydCA8PDMyKSt0aGlzLnNvdXJjZUVuZCk7CisJCXRoaXMu
bWV0aG9kU2NvcGUgPSBzY29wZS5tZXRob2RTY29wZSgpOworCQl0aGlzLm9yaWdpbmFsQmluZGlu
ZyA9IG51bGw7CisJCXJlc29sdmUoc2NvcGUpOwogCX0KIAkKIAlwdWJsaWMgdm9pZCBnZW5lcmF0
ZUNvZGUoQmxvY2tTY29wZSBjdXJyZW50U2NvcGUsIENvZGVTdHJlYW0gY29kZVN0cmVhbSkKQEAg
LTg4LDggKzEwNiwxMiBAQAogCX0KIAogCS8qKgotCSAqIElmIGV4cHJlc3Npb24gcmVzb2x2ZXMg
dG8gYSBsb2NhbCB2YXJpYWJsZSBiaW5kaW5nIG9mIHR5cGUgQXV0b0Nsb3NlYWJsZSwKLQkgKiBh
bnN3ZXIgdGhlIHZhcmlhYmxlIHRoYXQgdHJhY2tzIGNsb3Npbmcgb2YgdGhhdCBsb2NhbCwgY3Jl
YXRpbmcgaXQgaWYgbmVlZGVkLgorCSAqIElmIGV4cHJlc3Npb24gcmVzb2x2ZXMgdG8gYSB2YWx1
ZSBvZiB0eXBlIEF1dG9DbG9zZWFibGUgYW5zd2VyIHRoZSB2YXJpYWJsZSB0aGF0IHRyYWNrcyBj
bG9zaW5nIG9mIHRoYXQgbG9jYWwuCisJICogQ292ZXJzIHR3byBjYXNlczoKKwkgKiA8dWw+CisJ
ICogPGxpPnZhbHVlIGlzIGEgbG9jYWwgdmFyaWFibGUgcmVmZXJlbmNlLCBjcmVhdGUgdHJhY2tp
bmcgdmFyaWFibGUgaXQgaWYgbmVlZGVkLgorCSAqIDxsaT52YWx1ZSBpcyBhbiBhbGxvY2F0aW9u
IGV4cHJlc3Npb24sIHJldHVybiBhIHByZWxpbWluYXJ5IHRyYWNraW5nIHZhcmlhYmxlIGlmIHNl
dC4KKwkgKiA8L3VsPgogCSAqIEBwYXJhbSBleHByZXNzaW9uCiAJICogQHJldHVybiBhIG5ldyB7
QGxpbmsgRmFrZWRUcmFja2luZ1ZhcmlhYmxlfSBvciBudWxsLgogCSAqLwpAQCAtMTA3LDUxICsx
MjksMjU4IEBACiAJCQkJU3RhdGVtZW50IGxvY2F0aW9uID0gbG9jYWwuZGVjbGFyYXRpb247CiAJ
CQkJcmV0dXJuIGxvY2FsLmNsb3NlVHJhY2tlciA9IG5ldyBGYWtlZFRyYWNraW5nVmFyaWFibGUo
bG9jYWwsIGxvY2F0aW9uKTsKIAkJCX0KLQkJfQorCQl9IGVsc2UgaWYgKGV4cHJlc3Npb24gaW5z
dGFuY2VvZiBBbGxvY2F0aW9uRXhwcmVzc2lvbikgeworCQkJLy8gcmV0dXJuIGFueSBwcmVsaW1p
bmFyeSB0cmFja2luZyB2YXJpYWJsZSBmcm9tIGFuYWx5c2VDbG9zZWFibGVBbGxvY2F0aW9uIAor
CQkJcmV0dXJuICgoQWxsb2NhdGlvbkV4cHJlc3Npb24pIGV4cHJlc3Npb24pLmNsb3NlVHJhY2tl
cjsKKwkJfQkJCiAJCXJldHVybiBudWxsOwogCX0KIAotCS8qKiBpZiAnaW52b2NhdGlvblNpdGUn
IGlzIGEgY2FsbCB0byBjbG9zZSgpIHRoYXQgaGFzIGEgcmVnaXN0ZXJlZCB0cmFja2luZyB2YXJp
YWJsZSwgYW5zd2VyIHRoYXQgdmFyaWFibGUncyBiaW5kaW5nLiAqLwotCXB1YmxpYyBzdGF0aWMg
TG9jYWxWYXJpYWJsZUJpbmRpbmcgZ2V0VHJhY2tlckZvckNsb3NlQ2FsbChBU1ROb2RlIGludm9j
YXRpb25TaXRlKSB7Ci0JCWlmIChpbnZvY2F0aW9uU2l0ZSBpbnN0YW5jZW9mIE1lc3NhZ2VTZW5k
KSB7Ci0JCQlNZXNzYWdlU2VuZCBzZW5kID0gKE1lc3NhZ2VTZW5kKSBpbnZvY2F0aW9uU2l0ZTsK
LQkJCWlmIChDaGFyT3BlcmF0aW9uLmVxdWFscyhUeXBlQ29uc3RhbnRzLkNMT1NFLCBzZW5kLnNl
bGVjdG9yKSAmJiBzZW5kLnJlY2VpdmVyIGluc3RhbmNlb2YgU2luZ2xlTmFtZVJlZmVyZW5jZSkg
ewotCQkJCUJpbmRpbmcgcmVjZWl2ZXJCaW5kaW5nID0gKChTaW5nbGVOYW1lUmVmZXJlbmNlKXNl
bmQucmVjZWl2ZXIpLmJpbmRpbmc7Ci0JCQkJaWYgKHJlY2VpdmVyQmluZGluZyBpbnN0YW5jZW9m
IExvY2FsVmFyaWFibGVCaW5kaW5nKSB7Ci0JCQkJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSB0cmFj
a2luZ1ZhcmlhYmxlID0gKChMb2NhbFZhcmlhYmxlQmluZGluZylyZWNlaXZlckJpbmRpbmcpLmNs
b3NlVHJhY2tlcjsKLQkJCQkJaWYgKHRyYWNraW5nVmFyaWFibGUgIT0gbnVsbCkKLQkJCQkJCXJl
dHVybiB0cmFja2luZ1ZhcmlhYmxlLmJpbmRpbmc7Ci0JCQkJfQorCS8qKgorCSAqIEJlZm9yZSBh
bmFseXppbmcgYW4gYXNzaWdubWVudCBvZiB0aGlzIHNoYXBlOiA8Y29kZT5zaW5nbGVOYW1lID0g
bmV3IEFsbG9jYXRpb24oKTwvY29kZT4KKwkgKiBjb25uZWN0IGFueSB0cmFja2luZyB2YXJpYWJs
ZSBvZiB0aGUgTEhTIHdpdGggdGhlIGFsbG9jYXRpb24gb24gdGhlIFJIUy4KKwkgKiBBbHNvIHRo
ZSBhc3NpZ25tZW50IGlzIHRlbXBvcmFyaWx5IHN0b3JlZCBpbiB0aGUgdHJhY2tpbmcgdmFyaWFi
bGUgaW4gY2FzZSB3ZSBuZWVkIHRvCisJICogcmVwb3J0IGVycm9ycyBiZWNhdXNlIHRoZSBhc3Np
Z25tZW50IGxlYXZlcyB0aGUgb2xkIExIUyB2YWx1ZSB1bmNsb3NlZC4KKwkgKiBJbiB0aGlzIGNh
c2UgdGhlIGFzc2lnbm1lbnQgc2hvdWxkIGJlIHVzZWQgYXMgdGhlIGVycm9yIGxvY2F0aW9uLgor
CSAqIAorCSAqIEBwYXJhbSBsb2NhdGlvbiB0aGUgYXNzaWdubWVudC9sb2NhbCBkZWNsYXJhdGlv
biBiZWluZyBhbmFseXplZAorCSAqIEBwYXJhbSBsb2NhbCB0aGUgbG9jYWwgdmFyaWFibGUgYmVp
bmcgYXNzaWduZWQgdG8KKwkgKiBAcGFyYW0gcmhzIHRoZSByaHMgb2YgdGhlIGFzc2lnbm1lbnQg
cmVzcC4gdGhlIGluaXRpYWxpemF0aW9uIG9mIHRoZSBsb2NhbCB2YXJpYWJsZSBkZWNsYXJhdGlv
bi4KKwkgKi8KKwlwdWJsaWMgc3RhdGljIHZvaWQgcHJlQ29ubmVjdFRyYWNrZXJBY3Jvc3NBc3Np
Z25tZW50KEFTVE5vZGUgbG9jYXRpb24sIExvY2FsVmFyaWFibGVCaW5kaW5nIGxvY2FsLCBFeHBy
ZXNzaW9uIHJocykgeworCQlGYWtlZFRyYWNraW5nVmFyaWFibGUgY2xvc2VUcmFja2VyID0gbnVs
bDsKKwkJaWYgKHJocyBpbnN0YW5jZW9mIEFsbG9jYXRpb25FeHByZXNzaW9uKSB7CisJCQljbG9z
ZVRyYWNrZXIgPSBsb2NhbC5jbG9zZVRyYWNrZXI7CisJCQlpZiAoY2xvc2VUcmFja2VyID09IG51
bGwpIHsKKwkJCQlpZiAoaXNBdXRvQ2xvc2VhYmxlKHJocy5yZXNvbHZlZFR5cGUpKSB7CisJCQkJ
CWNsb3NlVHJhY2tlciA9IG5ldyBGYWtlZFRyYWNraW5nVmFyaWFibGUobG9jYWwsIGxvY2F0aW9u
KTsKKwkJCQl9CQkJCQkKKwkJCX0KKwkJCWlmIChjbG9zZVRyYWNrZXIgIT0gbnVsbCkgeworCQkJ
CWNsb3NlVHJhY2tlci5jdXJyZW50QXNzaWdubWVudCA9IGxvY2F0aW9uOworCQkJCSgoQWxsb2Nh
dGlvbkV4cHJlc3Npb24pcmhzKS5jbG9zZVRyYWNrZXIgPSBjbG9zZVRyYWNrZXI7CiAJCQl9CiAJ
CX0KLQkJcmV0dXJuIG51bGw7CisJfQorCisJLyoqIAorCSAqIENvbXB1dGUvYXNzaWduIGEgdHJh
Y2tpbmcgdmFyaWFibGUgZm9yIGEgZnJlc2hseSBhbGxvY2F0ZWQgY2xvc2VhYmxlIHZhbHVlLCB1
c2luZyBpbmZvcm1hdGlvbiBmcm9tIG91ciB3aGl0ZSBsaXN0cy4KKwkgKiBTZWUgIEJ1ZyAzNTg5
MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5n
cyAKKwkgKi8KKwlwdWJsaWMgc3RhdGljIHZvaWQgYW5hbHlzZUNsb3NlYWJsZUFsbG9jYXRpb24o
QmxvY2tTY29wZSBzY29wZSwgRmxvd0luZm8gZmxvd0luZm8sIEFsbG9jYXRpb25FeHByZXNzaW9u
IGFsbG9jYXRpb24pIHsKKwkJLy8gY2xpZW50IGhhcyBjaGVja2VkIHRoYXQgdGhlIHJlc29sdmVk
VHlwZSBpcyBhbiBBdXRvQ2xvc2VhYmxlLCBoZW5jZSB0aGUgZm9sbG93aW5nIGNhc3QgaXMgc2Fm
ZToKKwkJaWYgKCgoUmVmZXJlbmNlQmluZGluZylhbGxvY2F0aW9uLnJlc29sdmVkVHlwZSkuaGFz
VHlwZUJpdChUeXBlSWRzLkJpdFJlc291cmNlRnJlZUNsb3NlYWJsZSkpIHsKKwkJCS8vIHJlbW92
ZSB1bm5lY2Vzc2FyeSBhdHRlbXB0cyAoY2xvc2VhYmxlIGlzIG5vdCByZWxldmFudCkKKwkJCWlm
IChhbGxvY2F0aW9uLmNsb3NlVHJhY2tlciAhPSBudWxsKSB7CisJCQkJc2NvcGUucmVtb3ZlVHJh
Y2tpbmdWYXIoYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIpOworCQkJCWFsbG9jYXRpb24uY2xvc2VU
cmFja2VyID0gbnVsbDsKKwkJCX0KKwkJfSBlbHNlIGlmICgoKFJlZmVyZW5jZUJpbmRpbmcpYWxs
b2NhdGlvbi5yZXNvbHZlZFR5cGUpLmhhc1R5cGVCaXQoVHlwZUlkcy5CaXRXcmFwcGVyQ2xvc2Vh
YmxlKSkgeworCQkJaWYgKGFsbG9jYXRpb24uYXJndW1lbnRzICE9IG51bGwgJiYgIGFsbG9jYXRp
b24uYXJndW1lbnRzLmxlbmd0aCA+IDApIHsKKwkJCQkvLyBmaW5kIHRoZSB3cmFwcGVkIHJlc291
cmNlIHJlcHJlc2VudGVkIGJ5IGl0cyB0cmFja2luZyB2YXI6CisJCQkJRmFrZWRUcmFja2luZ1Zh
cmlhYmxlIGlubmVyVHJhY2tlciA9IGFuYWx5c2VDbG9zZWFibGVBbGxvY2F0aW9uQXJndW1lbnQo
c2NvcGUsIGZsb3dJbmZvLCBhbGxvY2F0aW9uLCBhbGxvY2F0aW9uLmFyZ3VtZW50c1swXSk7CisJ
CQkJaWYgKGlubmVyVHJhY2tlciAhPSBudWxsKSB7CisJCQkJCWlmIChpbm5lclRyYWNrZXIgPT0g
YWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIpCisJCQkJCQlyZXR1cm47IC8vIHNlbGYgd3JhcCAocmVz
ID0gbmV3IFJlcyhyZXMpKSAtPiBuZWl0aGVyIGNoYW5nZSAoaGVyZSkgbm9yIHJlbW92ZSAoYmVs
b3cpCisJCQkJCWlmIChhbGxvY2F0aW9uLmNsb3NlVHJhY2tlciA9PSBudWxsKSB7CisJCQkJCQlh
bGxvY2F0aW9uLmNsb3NlVHJhY2tlciA9IG5ldyBGYWtlZFRyYWNraW5nVmFyaWFibGUoc2NvcGUs
IGFsbG9jYXRpb24pOyAvLyBubyBsb2NhbCBhdmFpbGFibGUsIGNsb3NlYWJsZSBpcyB1bmFzc2ln
bmVkCisJCQkJCX0KKwkJCQkJYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIuaW5uZXJUcmFja2VyID0g
aW5uZXJUcmFja2VyOworCQkJCQlpbm5lclRyYWNrZXIuZ2xvYmFsQ2xvc2luZ1N0YXRlIHw9IFdS
QVBQRUQ7CisJCQkJCWZsb3dJbmZvLm1hcmtBc0RlZmluaXRlbHlOdWxsKGFsbG9jYXRpb24uY2xv
c2VUcmFja2VyLmJpbmRpbmcpOworCQkJCQlyZXR1cm47IC8vIGtlZXAgY2hhaW5pbmcgd3JhcHBl
cgorCQkJCX0KKwkJCX0KKwkJCS8vIHJlbW92ZSB1bm5lY2Vzc2FyeSBhdHRlbXB0cyAod3JhcHBl
ciBoYXMgbm8gcmVsZXZhbnQgaW5uZXIpCisJCQlpZiAoYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIg
IT0gbnVsbCkgeworCQkJCXNjb3BlLnJlbW92ZVRyYWNraW5nVmFyKGFsbG9jYXRpb24uY2xvc2VU
cmFja2VyKTsKKwkJCQlhbGxvY2F0aW9uLmNsb3NlVHJhY2tlciA9IG51bGw7CisJCQl9CisJCX0g
ZWxzZSB7IC8vIHJlZ3VsYXIgcmVzb3VyY2UKKwkJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSBwcmVz
ZXRUcmFja2VyID0gYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXI7CisJCQlpZiAocHJlc2V0VHJhY2tl
ciAhPSBudWxsICYmIHByZXNldFRyYWNrZXIub3JpZ2luYWxCaW5kaW5nICE9IG51bGwpIHsKKwkJ
CQlpbnQgY2xvc2VTdGF0dXMgPSBmbG93SW5mby5udWxsU3RhdHVzKHByZXNldFRyYWNrZXIuYmlu
ZGluZyk7CisJCQkJaWYgKGNsb3NlU3RhdHVzICE9IEZsb3dJbmZvLk5PTl9OVUxMCisJCQkJCQkm
JiAhZmxvd0luZm8uaXNEZWZpbml0ZWx5TnVsbChwcmVzZXRUcmFja2VyLm9yaWdpbmFsQmluZGlu
ZykKKwkJCQkJCSYmICEocHJlc2V0VHJhY2tlci5jdXJyZW50QXNzaWdubWVudCBpbnN0YW5jZW9m
IExvY2FsRGVjbGFyYXRpb24pKQorCQkJCQlhbGxvY2F0aW9uLmNsb3NlVHJhY2tlci5yZWNvcmRF
cnJvckxvY2F0aW9uKHByZXNldFRyYWNrZXIuY3VycmVudEFzc2lnbm1lbnQsIGNsb3NlU3RhdHVz
KTsKKwkJCX0gZWxzZSB7CisJCQkJYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIgPSBuZXcgRmFrZWRU
cmFja2luZ1ZhcmlhYmxlKHNjb3BlLCBhbGxvY2F0aW9uKTsgLy8gbm8gbG9jYWwgYXZhaWxhYmxl
LCBjbG9zZWFibGUgaXMgdW5hc3NpZ25lZAorCQkJfQorCQkJZmxvd0luZm8ubWFya0FzRGVmaW5p
dGVseU51bGwoYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIuYmluZGluZyk7CisJCX0KKwl9CisKKwkv
KiogRmluZCBhbiBleGlzdGluZyB0cmFja2luZyB2YXJpYWJsZSBmb3IgdGhlIGFyZ3VtZW50IG9m
IGFuIGFsbG9jYXRpb24gZm9yIGEgcmVzb3VyY2Ugd3JhcHBlci4gKi8KKwlwdWJsaWMgc3RhdGlj
IEZha2VkVHJhY2tpbmdWYXJpYWJsZSBhbmFseXNlQ2xvc2VhYmxlQWxsb2NhdGlvbkFyZ3VtZW50
KEJsb2NrU2NvcGUgc2NvcGUsIEZsb3dJbmZvIGZsb3dJbmZvLCBBbGxvY2F0aW9uRXhwcmVzc2lv
biBhbGxvY2F0aW9uLCBFeHByZXNzaW9uIGFyZykKKwl7CisJCXdoaWxlIChhcmcgaW5zdGFuY2Vv
ZiBBc3NpZ25tZW50KSB7CisJCQlBc3NpZ25tZW50IGFzc2lnbiA9IChBc3NpZ25tZW50KWFyZzsK
KwkJCUxvY2FsVmFyaWFibGVCaW5kaW5nIGlubmVyTG9jYWwgPSBhc3NpZ24ubG9jYWxWYXJpYWJs
ZUJpbmRpbmcoKTsKKwkJCWlmIChpbm5lckxvY2FsICE9IG51bGwpIHsKKwkJCQkvLyBuZXN0ZWQg
YXNzaWdubWVudCBoYXMgYWxyZWFkeSBiZWVuIHByb2Nlc3NlZAorCQkJCXJldHVybiBpbm5lckxv
Y2FsLmNsb3NlVHJhY2tlcjsKKwkJCX0gZWxzZSB7CisJCQkJYXJnID0gYXNzaWduLmV4cHJlc3Np
b247IC8vIHVud3JhcCBhc3NpZ25tZW50IGFuZCBmYWxsIHRocm91Z2gKKwkJCX0KKwkJfQorCQlp
ZiAoYXJnIGluc3RhbmNlb2YgU2luZ2xlTmFtZVJlZmVyZW5jZSkgeworCQkJLy8gaXMgYWxsb2Nh
dGlvbiBhcmcgYSByZWZlcmVuY2UgdG8gYW4gZXhpc3RpbmcgY2xvc2VhYmxlPworCQkJTG9jYWxW
YXJpYWJsZUJpbmRpbmcgbG9jYWwgPSBhcmcubG9jYWxWYXJpYWJsZUJpbmRpbmcoKTsKKwkJCWlm
IChsb2NhbCAhPSBudWxsKSB7CisJCQkJcmV0dXJuIGxvY2FsLmNsb3NlVHJhY2tlcjsKKwkJCX0K
KwkJfSBlbHNlIGlmIChhcmcgaW5zdGFuY2VvZiBBbGxvY2F0aW9uRXhwcmVzc2lvbiAmJiBhcmcu
cmVzb2x2ZWRUeXBlIGluc3RhbmNlb2YgUmVmZXJlbmNlQmluZGluZykgeworCQkJLy8gbmVzdGVk
IGFsbG9jYXRpb24KKwkJCXJldHVybiAoKEFsbG9jYXRpb25FeHByZXNzaW9uKWFyZykuY2xvc2VU
cmFja2VyOworCQl9CisJCXJldHVybiBudWxsOyAvLyBub3QgYSB0cmFja2VkIGV4cHJlc3Npb24K
IAl9CiAKIAkvKiogCiAJICogQ2hlY2sgaWYgdGhlIHJocyBvZiBhbiBhc3NpZ25tZW50IG9yIGxv
Y2FsIGRlY2xhcmF0aW9uIGlzIGFuIChBdXRvKUNsb3NlYWJsZS4KLQkgKiBJZiBzbyBjcmVhdGUg
b3IgcmUtdXNlIGEgdHJhY2tpbmcgdmFyaWFibGUsIGFuZCB3aXJlIGFuZCBpbml0aWFsaXplIGV2
ZXJ5dGhpbmcuIAorCSAqIElmIHNvIGNyZWF0ZSBvciByZS11c2UgYSB0cmFja2luZyB2YXJpYWJs
ZSwgYW5kIHdpcmUgYW5kIGluaXRpYWxpemUgZXZlcnl0aGluZy4KKwkgKiBAcGFyYW0gdXBzdHJl
YW1JbmZvIGluZm8gd2l0aG91dCBhbmFseXNpcyBvZiB0aGUgcmhzLCB1c2UgdGhpcyB0byBkZXRl
cm1pbmUgdGhlIHN0YXR1cyBvZiBhIHJlc291cmNlIGJlaW5nIGRpc2Nvbm5lY3RlZAorCSAqIEBw
YXJhbSBmbG93SW5mbyBpbmZvIHdpdGggYW5hbHlzaXMgb2YgdGhlIHJocywgdXNlIHRoaXMgZm9y
IHJlY29yZGluZyByZXNvdXJjZSBzdGF0dXMgYmVjYXVzZSB0aGlzIHdpbGwgYmUgcGFzc2VkIGRv
d25zdHJlYW0KKwkgKiBAcGFyYW0gbG9jYXRpb24gd2hlcmUgdG8gcmVwb3J0IHdhcm5pZ3MvZXJy
b3JzIGFnYWluc3QKKwkgKiBAcGFyYW0gcmhzIHRoZSByaWdodCBoYW5kIHNpZGUgb2YgdGhlIGFz
c2lnbm1lbnQsIHRoaXMgZXhwcmVzc2lvbiBpcyB0byBiZSBhbmFseXplZC4KKwkgKgkJCVRoZSBj
YWxsZXIgaGFzIGFscmVhZHkgY2hlY2tlZCB0aGF0IHRoZSByaHMgaXMgZWl0aGVyIG9mIGEgY2xv
c2VhYmxlIHR5cGUgb3IgbnVsbC4KKwkgKiBAcGFyYW0gbG9jYWwgdGhlIGxvY2FsIHZhcmlhYmxl
IGludG8gd2hpY2ggdGhlIHJocyBpcyBiZWluZyBhc3NpZ25lZAogCSAqLwotCXB1YmxpYyBzdGF0
aWMgdm9pZCBoYW5kbGVSZXNvdXJjZUFzc2lnbm1lbnQoRmxvd0luZm8gZmxvd0luZm8sIFN0YXRl
bWVudCBsb2NhdGlvbiwgRXhwcmVzc2lvbiByaHMsIExvY2FsVmFyaWFibGVCaW5kaW5nIGxvY2Fs
LAotCQkJCUxvY2FsVmFyaWFibGVCaW5kaW5nIHByZXZpb3VzVHJhY2tlckJpbmRpbmcpIAorCXB1
YmxpYyBzdGF0aWMgdm9pZCBoYW5kbGVSZXNvdXJjZUFzc2lnbm1lbnQoRmxvd0luZm8gdXBzdHJl
YW1JbmZvLCBGbG93SW5mbyBmbG93SW5mbywgQVNUTm9kZSBsb2NhdGlvbiwgRXhwcmVzc2lvbiBy
aHMsIExvY2FsVmFyaWFibGVCaW5kaW5nIGxvY2FsKQogCXsKLQkJaWYgKGlzQXV0b0Nsb3NlYWJs
ZShyaHMucmVzb2x2ZWRUeXBlKSkgeworCQkvLyBkb2VzIHRoZSBMSFMgKGxvY2FsKSBhbHJlYWR5
IGhhdmUgYSB0cmFja2VyLCBpbmRpY2F0aW5nIHdlIG1heSBsZWFrIGEgcmVzb3VyY2UgYnkgdGhl
IGFzc2lnbm1lbnQ/CisJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSBwcmV2aW91c1RyYWNrZXIgPSBu
dWxsOworCQlGYWtlZFRyYWNraW5nVmFyaWFibGUgZGlzY29ubmVjdGVkVHJhY2tlciA9IG51bGw7
CisJCWlmIChsb2NhbC5jbG9zZVRyYWNrZXIgIT0gbnVsbCkgeworCQkJLy8gYXNzaWduaW5nIHRv
IGEgdmFyaWFibGUgYWxyZWFkeSBob2xkaW5nIGFuIEF1dG9DbG9zZWFibGUsIGhhcyBpdCBiZWVu
IGNsb3NlZCBiZWZvcmU/CisJCQlwcmV2aW91c1RyYWNrZXIgPSBsb2NhbC5jbG9zZVRyYWNrZXI7
CisJCQlpbnQgbnVsbFN0YXR1cyA9IHVwc3RyZWFtSW5mby5udWxsU3RhdHVzKGxvY2FsKTsKKwkJ
CWlmIChudWxsU3RhdHVzICE9IEZsb3dJbmZvLk5VTEwgJiYgbnVsbFN0YXR1cyAhPSBGbG93SW5m
by5VTktOT1dOKSAvLyBvbmx5IGlmIHByZXZpb3VzIHZhbHVlIG1heSBiZSByZWxldmFudAorCQkJ
CWRpc2Nvbm5lY3RlZFRyYWNrZXIgPSBwcmV2aW91c1RyYWNrZXI7IC8vIHJlcG9ydCBlcnJvciBi
ZWxvdywgdW5sZXNzIHdlIGhhdmUgYSBzZWxmLXdyYXAgYXNzaWdubWVudAorCQl9CisKKwkJaWYg
KHJocy5yZXNvbHZlZFR5cGUgIT0gVHlwZUJpbmRpbmcuTlVMTCkgewogCQkJLy8gbmV3IHZhbHVl
IGlzIEF1dG9DbG9zZWFibGUsIHN0YXJ0IHRyYWNraW5nLCBwb3NzaWJseSByZS11c2luZyBleGlz
dGluZyB0cmFja2VyIHZhcjoKLQkKIAkJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSByaHNUcmFja1Zh
ciA9IGdldENsb3NlVHJhY2tpbmdWYXJpYWJsZShyaHMpOwotCQkJaWYgKHJoc1RyYWNrVmFyICE9
IG51bGwpIHsJCQkJCQkJCS8vIDEuIHNoYXJlIHRyYWNraW5nIHZhcmlhYmxlIHdpdGggUkhTPwot
CQkJCWxvY2FsLmNsb3NlVHJhY2tlciA9IHJoc1RyYWNrVmFyOwotCQkJCS8vIGtlZXAgbnVsbC1z
dGF0dXMgdW5jaGFuZ2VkIGFjcm9zcyB0aGlzIGFzc2lnbm1lbnQKLQkJCX0gZWxzZSBpZiAocHJl
dmlvdXNUcmFja2VyQmluZGluZyAhPSBudWxsKSB7CQkJLy8gMi4gcmUtdXNlIHRyYWNraW5nIHZh
cmlhYmxlIGZyb20gdGhlIExIUz8KLQkJCQkvLyByZS1hc3NpZ25pbmcgZnJvbSBhIGZyZXNoLCBt
YXJrIGFzIG5vdC1jbG9zZWQgYWdhaW46Ci0JCQkJZmxvd0luZm8ubWFya0FzRGVmaW5pdGVseU51
bGwocHJldmlvdXNUcmFja2VyQmluZGluZyk7CisJCQlpZiAocmhzVHJhY2tWYXIgIT0gbnVsbCkg
ewkJCQkJCQkJLy8gMS4gaWYgUkhTIGhhcyBhIHRyYWNraW5nIHZhcmlhYmxlLi4uCisJCQkJaWYg
KGxvY2FsLmNsb3NlVHJhY2tlciA9PSBudWxsKSB7CisJCQkJCS8vIG51bGwgc2hvdWxkbid0IG9j
Y3VyIGJ1dCBsZXQncyBwbGF5IHNhZmUKKwkJCQkJaWYgKHJoc1RyYWNrVmFyLm9yaWdpbmFsQmlu
ZGluZyAhPSBudWxsKQorCQkJCQkJbG9jYWwuY2xvc2VUcmFja2VyID0gcmhzVHJhY2tWYXI7CQkJ
Ly8JCWEuOiBsZXQgZnJlc2ggTEhTIHNoYXJlIGl0IAorCQkJCX0gZWxzZSB7CisJCQkJCWlmIChy
aHNUcmFja1ZhciA9PSBkaXNjb25uZWN0ZWRUcmFja2VyICYmIHJocyBpbnN0YW5jZW9mIEFsbG9j
YXRpb25FeHByZXNzaW9uKQorCQkJCQkJcmV0dXJuOyAJCQkJCQkJCQkvLyAJCWIuOiBzZWxmIHdy
YXBwZXI6IHJlcyA9IG5ldyBXcmFwKHJlcyk7IC0+IGRvbmUhCisJCQkJCWxvY2FsLmNsb3NlVHJh
Y2tlciA9IHJoc1RyYWNrVmFyOwkJCQkvLwkJYy46IGNvbmZsaWN0aW5nIExIUyBhbmQgUkhTLCBw
cm9jZWVkIHdpdGggcmVjb3JkRXJyb3JMb2NhdGlvbiBiZWxvdworCQkJCX0KKwkJCQkvLyBrZWVw
IGNsb3NlLXN0YXR1cyBvZiBSSFMgdW5jaGFuZ2VkIGFjcm9zcyB0aGlzIGFzc2lnbm1lbnQKKwkJ
CX0gZWxzZSBpZiAocHJldmlvdXNUcmFja2VyICE9IG51bGwpIHsJCQkJCS8vIDIuIHJlLXVzZSB0
cmFja2luZyB2YXJpYWJsZSBmcm9tIHRoZSBMSFM/CisJCQkJLy8gcmUtYXNzaWduaW5nIGZyb20g
YSBmcmVzaCB2YWx1ZSwgbWFyayBhcyBub3QtY2xvc2VkIGFnYWluOgorCQkJCWZsb3dJbmZvLm1h
cmtBc0RlZmluaXRlbHlOdWxsKHByZXZpb3VzVHJhY2tlci5iaW5kaW5nKTsKKwkJCQlsb2NhbC5j
bG9zZVRyYWNrZXIgPSBhbmFseXNlQ2xvc2VhYmxlRXhwcmVzc2lvbihmbG93SW5mbywgbG9jYWws
IGxvY2F0aW9uLCByaHMsIHByZXZpb3VzVHJhY2tlcik7CiAJCQl9IGVsc2UgewkJCQkJCQkJCQkJ
CS8vIDMuIG5vIHJlLXVzZSwgY3JlYXRlIGEgZnJlc2ggdHJhY2tpbmcgdmFyaWFibGU6Ci0JCQkJ
bG9jYWwuY2xvc2VUcmFja2VyID0gbmV3IEZha2VkVHJhY2tpbmdWYXJpYWJsZShsb2NhbCwgbG9j
YXRpb24pOwotCQkJCS8vIGEgZnJlc2ggcmVzb3VyY2UsIG1hcmsgYXMgbm90LWNsb3NlZDoKLQkJ
CQlmbG93SW5mby5tYXJrQXNEZWZpbml0ZWx5TnVsbChsb2NhbC5jbG9zZVRyYWNrZXIuYmluZGlu
Zyk7CisJCQkJcmhzVHJhY2tWYXIgPSBhbmFseXNlQ2xvc2VhYmxlRXhwcmVzc2lvbihmbG93SW5m
bywgbG9jYWwsIGxvY2F0aW9uLCByaHMsIG51bGwpOworCQkJCWlmIChyaHNUcmFja1ZhciAhPSBu
dWxsKSB7CisJCQkJCWxvY2FsLmNsb3NlVHJhY2tlciA9IHJoc1RyYWNrVmFyOworCQkJCQkvLyBh
IGZyZXNoIHJlc291cmNlLCBtYXJrIGFzIG5vdC1jbG9zZWQ6CisJCQkJCWlmICgocmhzVHJhY2tW
YXIuZ2xvYmFsQ2xvc2luZ1N0YXRlICYgUEFTU0VEX1RPX09VVFNJREUpID09IDApCisJCQkJCQlm
bG93SW5mby5tYXJrQXNEZWZpbml0ZWx5TnVsbChyaHNUcmFja1Zhci5iaW5kaW5nKTsKIC8vIFRP
RE8oc3RlcGhhbik6IHRoaXMgbWlnaHQgYmUgdXNlZnVsLCBidXQgSSBjb3VsZCBub3QgZmluZCBh
IHRlc3QgY2FzZSBmb3IgaXQ6IAotLy8JCQkJaWYgKGZsb3dDb250ZXh0LmluaXRzT25GaW5hbGx5
ICE9IG51bGwpCi0vLwkJCQkJZmxvd0NvbnRleHQuaW5pdHNPbkZpbmFsbHkubWFya0FzRGVmaW5p
dGVseU5vbk51bGwodHJhY2tlckJpbmRpbmcpOworLy8JCQkJCWlmIChmbG93Q29udGV4dC5pbml0
c09uRmluYWxseSAhPSBudWxsKQorLy8JCQkJCQlmbG93Q29udGV4dC5pbml0c09uRmluYWxseS5t
YXJrQXNEZWZpbml0ZWx5Tm9uTnVsbCh0cmFja2VyQmluZGluZyk7CisJCQkJfQogCQkJfQorCQl9
CisKKwkJaWYgKGRpc2Nvbm5lY3RlZFRyYWNrZXIgIT0gbnVsbCkKKwkJCWRpc2Nvbm5lY3RlZFRy
YWNrZXIucmVjb3JkRXJyb3JMb2NhdGlvbihsb2NhdGlvbiwgdXBzdHJlYW1JbmZvLm51bGxTdGF0
dXMoZGlzY29ubmVjdGVkVHJhY2tlci5iaW5kaW5nKSk7CisJfQorCS8qKgorCSAqIEFuYWx5emUg
c3RydWN0dXJlIG9mIGEgY2xvc2VhYmxlIGV4cHJlc3Npb24sIG1hdGNoaW5nIChjaGFpbmVkKSBy
ZXNvdXJjZXMgYWdhaW5zdCBvdXIgd2hpdGUgbGlzdHMuCisJICogQHBhcmFtIGZsb3dJbmZvIHdo
ZXJlIHRvIHJlY29yZCBjbG9zZSBzdGF0dXMKKwkgKiBAcGFyYW0gbG9jYWwgbG9jYWwgdmFyaWFi
bGUgdG8gd2hpY2ggdGhlIGNsb3NlYWJsZSBpcyBiZWluZyBhc3NpZ25lZAorCSAqIEBwYXJhbSBs
b2NhdGlvbiB3aGVyZSB0byBmbGFnIGVycm9ycy93YXJuaW5ncyBhZ2FpbnN0CisJICogQHBhcmFt
IGV4cHJlc3Npb24gZXhwcmVzc2lvbiB0byBiZSBhbmFseXplZAorCSAqIEBwYXJhbSBwcmV2aW91
c1RyYWNrZXIgd2hlbiBhbmFseXppbmcgYSByZS1hc3NpZ25tZW50IHdlIG1heSBhbHJlYWR5IGhh
dmUgYSB0cmFja2luZyB2YXJpYWJsZSBmb3IgbG9jYWwsCisJICogIAkJd2hpY2ggd2Ugc2hvdWxk
IHRoZW4gcmUtdXNlCisJICogQHJldHVybiBhIHRyYWNraW5nIHZhcmlhYmxlIGFzc29jaWF0ZWQg
d2l0aCBsb2NhbCBvciBudWxsIGlmIG5vIG5lZWQgdG8gdHJhY2sKKwkgKi8KKwlwcml2YXRlIHN0
YXRpYyBGYWtlZFRyYWNraW5nVmFyaWFibGUgYW5hbHlzZUNsb3NlYWJsZUV4cHJlc3Npb24oRmxv
d0luZm8gZmxvd0luZm8sIExvY2FsVmFyaWFibGVCaW5kaW5nIGxvY2FsLCAKKwkJCQkJCQkJCUFT
VE5vZGUgbG9jYXRpb24sIEV4cHJlc3Npb24gZXhwcmVzc2lvbiwgRmFrZWRUcmFja2luZ1Zhcmlh
YmxlIHByZXZpb3VzVHJhY2tlcikgCisJeworCQkvLyB1bndyYXAgdW5pbnRlcmVzdGluZyBub2Rl
czoKKwkJd2hpbGUgKHRydWUpIHsKKwkJCWlmIChleHByZXNzaW9uIGluc3RhbmNlb2YgQXNzaWdu
bWVudCkKKwkJCQlleHByZXNzaW9uID0gKChBc3NpZ25tZW50KWV4cHJlc3Npb24pLmV4cHJlc3Np
b247CisJCQllbHNlIGlmIChleHByZXNzaW9uIGluc3RhbmNlb2YgQ2FzdEV4cHJlc3Npb24pCisJ
CQkJZXhwcmVzc2lvbiA9ICgoQ2FzdEV4cHJlc3Npb24pIGV4cHJlc3Npb24pLmV4cHJlc3Npb247
CisJCQllbHNlCisJCQkJYnJlYWs7CisJCX0KKworCQkvLyBhbmFseXplIGJ5IG5vZGUgdHlwZToK
KwkJaWYgKGV4cHJlc3Npb24gaW5zdGFuY2VvZiBBbGxvY2F0aW9uRXhwcmVzc2lvbikgeworCQkJ
Ly8gYWxsb2NhdGlvbiBleHByZXNzaW9ucyBhbHJlYWR5IGhhdmUgdGhlaXIgdHJhY2tpbmcgdmFy
aWFibGVzIGFuYWx5emVkIGJ5IGFuYWx5c2VDbG9zZWFibGVBbGxvY2F0aW9uKC4uKQorCQkJRmFr
ZWRUcmFja2luZ1ZhcmlhYmxlIHRyYWNrZXIgPSAoKEFsbG9jYXRpb25FeHByZXNzaW9uKSBleHBy
ZXNzaW9uKS5jbG9zZVRyYWNrZXI7CisJCQlpZiAodHJhY2tlciAhPSBudWxsICYmIHRyYWNrZXIu
b3JpZ2luYWxCaW5kaW5nID09IG51bGwpIHsKKwkJCQkvLyB0cmFja2VyIHdpdGhvdXQgb3JpZ2lu
YWwgYmluZGluZyAodW5hc3NpZ25lZCBjbG9zZWFibGUpIHNob3VsZG4ndCByZWFjaCBoZXJlIGJ1
dCBsZXQncyBwbGF5IHNhZmUKKwkJCQlyZXR1cm4gbnVsbDsKKwkJCX0KKwkJCXJldHVybiB0cmFj
a2VyOworCQl9IGVsc2UgaWYgKGV4cHJlc3Npb24gaW5zdGFuY2VvZiBNZXNzYWdlU2VuZCAKKwkJ
CQl8fCBleHByZXNzaW9uIGluc3RhbmNlb2YgQXJyYXlSZWZlcmVuY2UpIAorCQl7CisJCQkvLyB3
ZSAqbWlnaHQqIGJlIHJlc3BvbnNpYmxlIGZvciB0aGUgcmVzb3VyY2Ugb2J0YWluZWQKKwkJCUZh
a2VkVHJhY2tpbmdWYXJpYWJsZSB0cmFja2VyID0gbmV3IEZha2VkVHJhY2tpbmdWYXJpYWJsZShs
b2NhbCwgbG9jYXRpb24pOworCQkJdHJhY2tlci5nbG9iYWxDbG9zaW5nU3RhdGUgfD0gUEFTU0VE
X1RPX09VVFNJREU7CisJCQlmbG93SW5mby5tYXJrUG90ZW50aWFsbHlOdWxsQml0KHRyYWNrZXIu
YmluZGluZyk7CisJCQlyZXR1cm4gdHJhY2tlcjsJCQkKKwkJfSBlbHNlIGlmIChleHByZXNzaW9u
IGluc3RhbmNlb2YgRmllbGRSZWZlcmVuY2UgCisJCQkJfHwgZXhwcmVzc2lvbiBpbnN0YW5jZW9m
IFF1YWxpZmllZE5hbWVSZWZlcmVuY2UpIAorCQl7CisJCQkvLyByZXNwb25zaWJpbGl0eSBmb3Ig
dGhpcyByZXNvdXJjZSBwcm9iYWJseSBsaWVzIGF0IGEgaGlnaGVyIGxldmVsCisJCQlGYWtlZFRy
YWNraW5nVmFyaWFibGUgdHJhY2tlciA9IG5ldyBGYWtlZFRyYWNraW5nVmFyaWFibGUobG9jYWws
IGxvY2F0aW9uKTsKKwkJCXRyYWNrZXIuZ2xvYmFsQ2xvc2luZ1N0YXRlIHw9IFBBU1NFRF9UT19P
VVRTSURFOworCQkJZmxvd0luZm8ubWFya1BvdGVudGlhbGx5Tm9uTnVsbEJpdCh0cmFja2VyLmJp
bmRpbmcpOworCQkJcmV0dXJuIHRyYWNrZXI7CQkJCisJCX0KKworCQlpZiAoZXhwcmVzc2lvbi5y
ZXNvbHZlZFR5cGUgaW5zdGFuY2VvZiBSZWZlcmVuY2VCaW5kaW5nKSB7CisJCQlSZWZlcmVuY2VC
aW5kaW5nIHJlc291cmNlVHlwZSA9IChSZWZlcmVuY2VCaW5kaW5nKSBleHByZXNzaW9uLnJlc29s
dmVkVHlwZTsKKwkJCWlmIChyZXNvdXJjZVR5cGUuaGFzVHlwZUJpdChUeXBlSWRzLkJpdFJlc291
cmNlRnJlZUNsb3NlYWJsZSkpIHsKKwkJCQkvLyAoYSkgcmVzb3VyY2UtZnJlZSBjbG9zZWFibGU6
IC0+IG51bGwKKwkJCQlyZXR1cm4gbnVsbDsKKwkJCX0KKwkJfQorCQlpZiAobG9jYWwuY2xvc2VU
cmFja2VyICE9IG51bGwpCisJCQkvLyAoYyk6IGlubmVyIGhhcyBhbHJlYWR5IGJlZW4gYW5hbHl6
ZWQ6IC0+IHJlLXVzZSB0cmFjayB2YXIKKwkJCXJldHVybiBsb2NhbC5jbG9zZVRyYWNrZXI7CisJ
CXJldHVybiBuZXcgRmFrZWRUcmFja2luZ1ZhcmlhYmxlKGxvY2FsLCBsb2NhdGlvbik7CisJfQor
CisJcHVibGljIHN0YXRpYyB2b2lkIGNsZWFuVXBBZnRlckFzc2lnbm1lbnQoQmxvY2tTY29wZSBj
dXJyZW50U2NvcGUsIGludCBsaHNCaXRzLCBFeHByZXNzaW9uIGV4cHJlc3Npb24pIHsKKwkJLy8g
cmVtb3ZlIGFsbCByZW1haW5pbmcgdHJhY2sgdmFycyB3aXRoIG5vIG9yaWdpbmFsIGJpbmRpbmcK
KworCQkvLyB1bndyYXAgdW5pbnRlcmVzdGluZyBub2RlczoKKwkJd2hpbGUgKHRydWUpIHsKKwkJ
CWlmIChleHByZXNzaW9uIGluc3RhbmNlb2YgQXNzaWdubWVudCkKKwkJCQlleHByZXNzaW9uID0g
KChBc3NpZ25tZW50KWV4cHJlc3Npb24pLmV4cHJlc3Npb247CisJCQllbHNlIGlmIChleHByZXNz
aW9uIGluc3RhbmNlb2YgQ2FzdEV4cHJlc3Npb24pCisJCQkJZXhwcmVzc2lvbiA9ICgoQ2FzdEV4
cHJlc3Npb24pIGV4cHJlc3Npb24pLmV4cHJlc3Npb247CisJCQllbHNlCisJCQkJYnJlYWs7CisJ
CX0KKwkJaWYgKGV4cHJlc3Npb24gaW5zdGFuY2VvZiBBbGxvY2F0aW9uRXhwcmVzc2lvbikgewor
CQkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlIHRyYWNrZXIgPSAoKEFsbG9jYXRpb25FeHByZXNzaW9u
KSBleHByZXNzaW9uKS5jbG9zZVRyYWNrZXI7CisJCQlpZiAodHJhY2tlciAhPSBudWxsICYmIHRy
YWNrZXIub3JpZ2luYWxCaW5kaW5nID09IG51bGwpIHsKKwkJCQljdXJyZW50U2NvcGUucmVtb3Zl
VHJhY2tpbmdWYXIodHJhY2tlcik7CisJCQkJKChBbGxvY2F0aW9uRXhwcmVzc2lvbikgZXhwcmVz
c2lvbikuY2xvc2VUcmFja2VyID0gbnVsbDsKKwkJCX0KKwkJfSBlbHNlIHsKKwkJCS8vIGFzc2ln
bm1lbnQgcGFzc2luZyBhIGxvY2FsIGludG8gYSBmaWVsZD8KKwkJCUxvY2FsVmFyaWFibGVCaW5k
aW5nIGxvY2FsID0gZXhwcmVzc2lvbi5sb2NhbFZhcmlhYmxlQmluZGluZygpOworCQkJaWYgKGxv
Y2FsICE9IG51bGwgJiYgbG9jYWwuY2xvc2VUcmFja2VyICE9IG51bGwgJiYgKChsaHNCaXRzICYg
QmluZGluZy5GSUVMRCkgIT0gMCkpCisJCQkJY3VycmVudFNjb3BlLnJlbW92ZVRyYWNraW5nVmFy
KGxvY2FsLmNsb3NlVHJhY2tlcik7CiAJCX0KIAl9CiAKQEAgLTE1OSw2ICszODgsNzYgQEAKIAlw
dWJsaWMgc3RhdGljIGJvb2xlYW4gaXNBdXRvQ2xvc2VhYmxlKFR5cGVCaW5kaW5nIHR5cGVCaW5k
aW5nKSB7CiAJCXJldHVybiB0eXBlQmluZGluZyBpbnN0YW5jZW9mIFJlZmVyZW5jZUJpbmRpbmcK
IAkJCSYmICgoUmVmZXJlbmNlQmluZGluZyl0eXBlQmluZGluZykuaGFzVHlwZUJpdChUeXBlSWRz
LkJpdEF1dG9DbG9zZWFibGV8VHlwZUlkcy5CaXRDbG9zZWFibGUpOworCX0KKworCXB1YmxpYyBp
bnQgZmluZE1vc3RTcGVjaWZpY1N0YXR1cyhGbG93SW5mbyBmbG93SW5mbywgQmxvY2tTY29wZSBj
dXJyZW50U2NvcGUsIEJsb2NrU2NvcGUgbG9jYXRpb25TY29wZSkgeworCQlpbnQgc3RhdHVzID0g
Rmxvd0luZm8uVU5LTk9XTjsKKwkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlIGN1cnJlbnRUcmFja2Vy
ID0gdGhpczsKKwkJLy8gbG9vcCBhcyB0byBjb25zaWRlciB3cmFwcGVycyAocGVyIHdoaXRlIGxp
c3QpIGVuY2Fwc3VsYXRpbmcgYW4gaW5uZXIgcmVzb3VyY2UuCisJCXdoaWxlIChjdXJyZW50VHJh
Y2tlciAhPSBudWxsKSB7CisJCQlMb2NhbFZhcmlhYmxlQmluZGluZyBjdXJyZW50VmFyID0gY3Vy
cmVudFRyYWNrZXIuYmluZGluZzsKKwkJCWludCBjdXJyZW50U3RhdHVzID0gZ2V0TnVsbFN0YXR1
c0FnZ3Jlc3NpdmVseShjdXJyZW50VmFyLCBmbG93SW5mbyk7CisJCQlpZiAobG9jYXRpb25TY29w
ZSAhPSBudWxsKSAvLyBvbmx5IGNoZWNrIGF0IG1ldGhvZCBleGl0IHBvaW50cworCQkJCWN1cnJl
bnRTdGF0dXMgPSBtZXJnZUNsb3NlU3RhdHVzKGxvY2F0aW9uU2NvcGUsIGN1cnJlbnRTdGF0dXMs
IGN1cnJlbnRWYXIsIGN1cnJlbnRTY29wZSk7CisJCQlpZiAoY3VycmVudFN0YXR1cyA9PSBGbG93
SW5mby5OT05fTlVMTCkgeworCQkJCXN0YXR1cyA9IGN1cnJlbnRTdGF0dXM7CisJCQkJYnJlYWs7
IC8vIGNsb3NlZCAtPiBzdG9wIHNlYXJjaGluZworCQkJfSBlbHNlIGlmIChzdGF0dXMgPT0gRmxv
d0luZm8uTlVMTCB8fCBzdGF0dXMgPT0gRmxvd0luZm8uVU5LTk9XTikgeworCQkJCXN0YXR1cyA9
IGN1cnJlbnRTdGF0dXM7IC8vIGltcHJvdmVkIGFsdGhvdWdoIG5vdCB5ZXQgc2FmZSAtPiBrZWVw
IHNlYXJjaGluZyBmb3IgYmV0dGVyCisJCQl9CisJCQljdXJyZW50VHJhY2tlciA9IGN1cnJlbnRU
cmFja2VyLmlubmVyVHJhY2tlcjsKKwkJfQorCQlyZXR1cm4gc3RhdHVzOworCX0KKworCS8qKgor
CSAqIEdldCB0aGUgbnVsbCBzdGF0dXMgbG9va2luZyBldmVuIGludG8gdW5yZWFjaGFibGUgZmxv
d3MKKwkgKiBAcGFyYW0gbG9jYWwKKwkgKiBAcGFyYW0gZmxvd0luZm8KKwkgKiBAcmV0dXJuIG9u
ZSBvZiB0aGUgY29uc3RhbnRzIEZsb3dJbmZvLntOVUxMLFBPVEVOVElBTExZX05VTEwsUE9URU5U
SUFMTFlfTk9OX05VTEwsTk9OX05VTEx9LgorCSAqLworCXByaXZhdGUgaW50IGdldE51bGxTdGF0
dXNBZ2dyZXNzaXZlbHkoTG9jYWxWYXJpYWJsZUJpbmRpbmcgbG9jYWwsIEZsb3dJbmZvIGZsb3dJ
bmZvKSB7CisJCWludCByZWFjaE1vZGUgPSBmbG93SW5mby5yZWFjaE1vZGUoKTsKKwkJaW50IHN0
YXR1cyA9IDA7CisJCXRyeSB7CisJCQkvLyB1bnJlYWNoYWJsZSBmbG93SW5mbyBpcyB0b28gc2h5
IGluIHJlcG9ydGluZyBudWxsLWlzc3VlcywgdGVtcG9yYXJpbHkgZm9yZ2V0IHJlYWNoYWJpbGl0
eToKKwkJCWlmIChyZWFjaE1vZGUgIT0gRmxvd0luZm8uUkVBQ0hBQkxFKQorCQkJCWZsb3dJbmZv
LnRhZ0JpdHMgJj0gfkZsb3dJbmZvLlVOUkVBQ0hBQkxFOworCQkJc3RhdHVzID0gZmxvd0luZm8u
bnVsbFN0YXR1cyhsb2NhbCk7CisJCX0gZmluYWxseSB7CisJCQkvLyByZXNldAorCQkJZmxvd0lu
Zm8udGFnQml0cyB8PSByZWFjaE1vZGU7CisJCX0KKwkJLy8gYXQgdGhpcyBwb2ludCBzb21lIGNv
bWJpbmF0aW9ucyBhcmUgbm90IHVzZWZ1bCBzbyBmbGF0dGVuIHRvIGEgc2luZ2xlIGJpdDoKKwkJ
aWYgKChzdGF0dXMgJiBGbG93SW5mby5OVUxMKSAhPSAwKSB7CisJCQlpZiAoKHN0YXR1cyAmIChG
bG93SW5mby5OT05fTlVMTCB8IEZsb3dJbmZvLlBPVEVOVElBTExZX05PTl9OVUxMKSkgIT0gMCkK
KwkJCQlyZXR1cm4gRmxvd0luZm8uUE9URU5USUFMTFlfTlVMTDsgCS8vIG51bGwgKyBkb3VidCA9
IHBvdCBudWxsCisJCQlyZXR1cm4gRmxvd0luZm8uTlVMTDsKKwkJfSBlbHNlIGlmICgoc3RhdHVz
ICYgRmxvd0luZm8uTk9OX05VTEwpICE9IDApIHsKKwkJCWlmICgoc3RhdHVzICYgRmxvd0luZm8u
UE9URU5USUFMTFlfTlVMTCkgIT0gMCkKKwkJCQlyZXR1cm4gRmxvd0luZm8uUE9URU5USUFMTFlf
TlVMTDsJLy8gbm9uLW51bGwgKyBkb3VidCA9IHBvdCBudWxsCisJCQlyZXR1cm4gRmxvd0luZm8u
Tk9OX05VTEw7CisJCX0gZWxzZSBpZiAoKHN0YXR1cyAmIEZsb3dJbmZvLlBPVEVOVElBTExZX05V
TEwpICE9IDApCisJCQlyZXR1cm4gRmxvd0luZm8uUE9URU5USUFMTFlfTlVMTDsKKwkJcmV0dXJu
IHN0YXR1czsKKwl9CisKKwlwdWJsaWMgaW50IG1lcmdlQ2xvc2VTdGF0dXMoQmxvY2tTY29wZSBj
dXJyZW50U2NvcGUsIGludCBzdGF0dXMsIExvY2FsVmFyaWFibGVCaW5kaW5nIGxvY2FsLCBCbG9j
a1Njb3BlIG91dGVyU2NvcGUpIHsKKwkJLy8gZ2V0IHRoZSBtb3N0IHN1aXRhYmxlIG51bGwgc3Rh
dHVzIHJlcHJlc2VudGluZyB3aGV0aGVyIHJlc291cmNlICdiaW5kaW5nJyBoYXMgYmVlbiBjbG9z
ZWQKKwkJLy8gc3RhcnQgYXQgJ2N1cnJlbnRTY29wZScgYW5kIHBvdGVudGlhbGx5IHRyYXZlbCBv
dXQgdW50aWwgJ291dGVyU2NvcGUnCisJCS8vIGF0IGVhY2ggc2NvcGUgY29uc3VsdCBhbnkgcmVj
b3JkZWQgJ2ZpbmFsbHlJbmZvJy4KKwkJaWYgKHN0YXR1cyAhPSBGbG93SW5mby5OT05fTlVMTCkg
eworCQkJaWYgKGN1cnJlbnRTY29wZS5maW5hbGx5SW5mbyAhPSBudWxsKSB7CisJCQkJaW50IGZp
bmFsbHlTdGF0dXMgPSBjdXJyZW50U2NvcGUuZmluYWxseUluZm8ubnVsbFN0YXR1cyhsb2NhbCk7
CisJCQkJaWYgKGZpbmFsbHlTdGF0dXMgPT0gRmxvd0luZm8uTk9OX05VTEwpCisJCQkJCXJldHVy
biBmaW5hbGx5U3RhdHVzOworCQkJCWlmIChmaW5hbGx5U3RhdHVzICE9IEZsb3dJbmZvLk5VTEwp
IC8vIG5laXRoZXIgaXMgTk9OX05VTEwsIGJ1dCBub3QgYm90aCBhcmUgTlVMTCA9PiBjYWxsIGl0
IFBPVEVOVElBTExZX05VTEwKKwkJCQkJc3RhdHVzID0gRmxvd0luZm8uUE9URU5USUFMTFlfTlVM
TDsKKwkJCX0KKwkJCWlmIChjdXJyZW50U2NvcGUgIT0gb3V0ZXJTY29wZSAmJiBjdXJyZW50U2Nv
cGUucGFyZW50IGluc3RhbmNlb2YgQmxvY2tTY29wZSkKKwkJCQlyZXR1cm4gbWVyZ2VDbG9zZVN0
YXR1cygoKEJsb2NrU2NvcGUpIGN1cnJlbnRTY29wZS5wYXJlbnQpLCBzdGF0dXMsIGxvY2FsLCBv
dXRlclNjb3BlKTsKKwkJfQorCQlyZXR1cm4gc3RhdHVzOwogCX0KIAogCS8qKiBNYXJrIHRoYXQg
dGhpcyByZXNvdXJjZSBpcyBjbG9zZWQgbG9jYWxseS4gKi8KQEAgLTE4MCw5ICs0NzksMTggQEAK
IAkgKiAoYXMgYXJndW1lbnQgdG8gYSBtZXRob2QvY3RvciBjYWxsIG9yIGFzIGEgcmV0dXJuIHZh
bHVlIGZyb20gdGhlIGN1cnJlbnQgbWV0aG9kKSwgCiAJICogYW5kIHRodXMgc2hvdWxkIGJlIGNv
bnNpZGVyZWQgYXMgcG90ZW50aWFsbHkgY2xvc2VkLgogCSAqLwotCXB1YmxpYyBzdGF0aWMgRmxv
d0luZm8gbWFya1Bhc3NlZFRvT3V0c2lkZShCbG9ja1Njb3BlIHNjb3BlLCBFeHByZXNzaW9uIGV4
cHJlc3Npb24sIEZsb3dJbmZvIGZsb3dJbmZvKSB7CisJcHVibGljIHN0YXRpYyBGbG93SW5mbyBt
YXJrUGFzc2VkVG9PdXRzaWRlKEJsb2NrU2NvcGUgc2NvcGUsIEV4cHJlc3Npb24gZXhwcmVzc2lv
biwgRmxvd0luZm8gZmxvd0luZm8sIFR5cGVCaW5kaW5nIGFsbG9jYXRlZFR5cGUpIHsJCisJCWlm
ICgoYWxsb2NhdGVkVHlwZSBpbnN0YW5jZW9mIFJlZmVyZW5jZUJpbmRpbmcpIC8vIG9ubHkgc2V0
IHdoZW4gY2FsbGVkIGZyb20gQWxsb2NhdGlvbkV4cHJlc3Npb24KKwkJCQkmJiAoKFJlZmVyZW5j
ZUJpbmRpbmcpIGFsbG9jYXRlZFR5cGUpLmhhc1R5cGVCaXQoVHlwZUlkcy5CaXRXcmFwcGVyQ2xv
c2VhYmxlKSkKKwkJCXJldHVybiBmbG93SW5mbzsgLy8gYWxsb2NhdGlvbiBvZiB3cmFwcGVkIGNs
b3NlYWJsZXMgaXMgYW5hbHl6ZWQgc3BlY2lhbGx5CisJCQogCQlGYWtlZFRyYWNraW5nVmFyaWFi
bGUgdHJhY2tWYXIgPSBnZXRDbG9zZVRyYWNraW5nVmFyaWFibGUoZXhwcmVzc2lvbik7CiAJCWlm
ICh0cmFja1ZhciAhPSBudWxsKSB7CisJCQlpZiAodHJhY2tWYXIub3JpZ2luYWxCaW5kaW5nID09
IG51bGwpIHsKKwkJCQkvLyBhbiBhbGxvY2F0aW9uIHRoYXQgbmV2ZXIgd2FzIGFzc2lnbmVkIHRv
IGEgbG9jYWwgdmFyaWFibGUgLT4gZHJvcCBpdCBjb21wbGV0ZWx5IGFzIHdlJ3JlIG5vdCByZXNw
b25zaWJsZQorCQkJCXNjb3BlLnJlbW92ZVRyYWNraW5nVmFyKHRyYWNrVmFyKTsKKwkJCQlyZXR1
cm4gZmxvd0luZm87CisJCQl9CiAJCQl0cmFja1Zhci5nbG9iYWxDbG9zaW5nU3RhdGUgfD0gUEFT
U0VEX1RPX09VVFNJREU7CiAJCQlpZiAoc2NvcGUubWV0aG9kU2NvcGUoKSAhPSB0cmFja1Zhci5t
ZXRob2RTY29wZSkKIAkJCQl0cmFja1Zhci5nbG9iYWxDbG9zaW5nU3RhdGUgfD0gQ0xPU0VEX0lO
X05FU1RFRF9NRVRIT0Q7CkBAIC0yMDEsOSArNTA5LDE0IEBACiAJfQogCiAJcHVibGljIGJvb2xl
YW4gcmVwb3J0UmVjb3JkZWRFcnJvcnMoU2NvcGUgc2NvcGUpIHsKLQkJaWYgKHRoaXMuZ2xvYmFs
Q2xvc2luZ1N0YXRlID09IDApIHsKLQkJCXJlcG9ydEVycm9yKHNjb3BlLnByb2JsZW1SZXBvcnRl
cigpLCBudWxsLCBGbG93SW5mby5OVUxMKTsKLQkJCXJldHVybiB0cnVlOworCQlGYWtlZFRyYWNr
aW5nVmFyaWFibGUgY3VycmVudCA9IHRoaXM7CisJCXdoaWxlICgoY3VycmVudC5nbG9iYWxDbG9z
aW5nU3RhdGUgJiBET1VCVF9NQVNLKSA9PSAwKSB7CisJCQljdXJyZW50ID0gY3VycmVudC5pbm5l
clRyYWNrZXI7CisJCQlpZiAoY3VycmVudCA9PSBudWxsKSB7CisJCQkJLy8gbm8gcmVsZXZhbnQg
c3RhdGUgZm91bmQgLT4gcmVwb3J0OgorCQkJCXJlcG9ydEVycm9yKHNjb3BlLnByb2JsZW1SZXBv
cnRlcigpLCBudWxsLCBGbG93SW5mby5OVUxMKTsKKwkJCQlyZXR1cm4gdHJ1ZTsKKwkJCX0KIAkJ
fQogCQlib29sZWFuIGhhc1JlcG9ydGVkID0gZmFsc2U7CiAJCWlmICh0aGlzLnJlY29yZGVkTG9j
YXRpb25zICE9IG51bGwpIHsKQEAgLTIxOCw2ICs1MzEsOCBAQAogCX0KIAkKIAlwdWJsaWMgdm9p
ZCByZXBvcnRFcnJvcihQcm9ibGVtUmVwb3J0ZXIgcHJvYmxlbVJlcG9ydGVyLCBBU1ROb2RlIGxv
Y2F0aW9uLCBpbnQgbnVsbFN0YXR1cykgeworCQlpZiAoKHRoaXMuZ2xvYmFsQ2xvc2luZ1N0YXRl
ICYgV1JBUFBFRCkgIT0gMCkKKwkJCXJldHVybjsKIAkJaWYgKG51bGxTdGF0dXMgPT0gRmxvd0lu
Zm8uTlVMTCkgewogCQkJaWYgKCh0aGlzLmdsb2JhbENsb3NpbmdTdGF0ZSAmIENMT1NFRF9JTl9O
RVNURURfTUVUSE9EKSAhPSAwKQogCQkJCXByb2JsZW1SZXBvcnRlci5wb3RlbnRpYWxseVVuY2xv
c2VkQ2xvc2VhYmxlKHRoaXMsIGxvY2F0aW9uKTsKQEAgLTIyNSw3ICs1NDAsNyBAQAogCQkJCXBy
b2JsZW1SZXBvcnRlci51bmNsb3NlZENsb3NlYWJsZSh0aGlzLCBsb2NhdGlvbik7CiAJCX0gZWxz
ZSBpZiAobnVsbFN0YXR1cyA9PSBGbG93SW5mby5QT1RFTlRJQUxMWV9OVUxMKSB7CiAJCQlwcm9i
bGVtUmVwb3J0ZXIucG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSh0aGlzLCBsb2NhdGlvbik7
Ci0JCX0JCQorCQl9CiAJfQogCiAJcHVibGljIHZvaWQgcmVwb3J0RXhwbGljaXRDbG9zaW5nKFBy
b2JsZW1SZXBvcnRlciBwcm9ibGVtUmVwb3J0ZXIpIHsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3Qv
TG9jYWxEZWNsYXJhdGlvbi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Mb2NhbERlY2xhcmF0aW9uLmphdmEK
aW5kZXggZGFjMDI5Yy4uMzc4MTU1MyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Mb2NhbERlY2xh
cmF0aW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Mb2NhbERlY2xhcmF0aW9uLmphdmEKQEAgLTEs
NSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZl
ZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1h
ZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5z
ZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2
YWlsYWJsZSBhdApAQCAtMTMsNiArMTMsNyBAQAogICoJCQkJCQkJYnVnIDMzNTA5MyAtIFtjb21w
aWxlcl1bbnVsbF0gbWluaW1hbCBob29rIGZvciBmdXR1cmUgbnVsbCBhbm5vdGF0aW9uIHN1cHBv
cnQKICAqCQkJCQkJCWJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0
cnktd2l0aC1yZXNvdXJjZXMKICAqCQkJCQkJCWJ1ZyAxODYzNDIgLSBbY29tcGlsZXJdW251bGxd
IFVzaW5nIGFubm90YXRpb25zIGZvciBudWxsIGNoZWNraW5nCisgKgkJCQkJCQlidWcgMzU4OTAz
IC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsgd2FybmluZ3MK
ICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIuYXN0OwogCkBAIC03NCwxMSArNzUsMjYgQEAKIAkJdGhpcy5pbml0aWFsaXph
dGlvbi5jaGVja05QRShjdXJyZW50U2NvcGUsIGZsb3dDb250ZXh0LCBmbG93SW5mbyk7CiAJfQog
CQorCUZsb3dJbmZvIHByZUluaXRJbmZvID0gbnVsbDsKKwlib29sZWFuIHNob3VsZEFuYWx5c2VS
ZXNvdXJjZSA9IHRoaXMuYmluZGluZyAhPSBudWxsIAorCQkJJiYgZmxvd0luZm8ucmVhY2hNb2Rl
KCkgPT0gRmxvd0luZm8uUkVBQ0hBQkxFIAorCQkJJiYgRmFrZWRUcmFja2luZ1ZhcmlhYmxlLmlz
QXV0b0Nsb3NlYWJsZSh0aGlzLmluaXRpYWxpemF0aW9uLnJlc29sdmVkVHlwZSk7CisJaWYgKHNo
b3VsZEFuYWx5c2VSZXNvdXJjZSkgeworCQlwcmVJbml0SW5mbyA9IGZsb3dJbmZvLnVuY29uZGl0
aW9uYWxDb3B5KCk7CisJCS8vIGFuYWx5c2lzIG9mIHJlc291cmNlIGxlYWtzIG5lZWRzIGFkZGl0
aW9uYWwgY29udGV4dCB3aGlsZSBhbmFseXppbmcgdGhlIFJIUzoKKwkJRmFrZWRUcmFja2luZ1Zh
cmlhYmxlLnByZUNvbm5lY3RUcmFja2VyQWNyb3NzQXNzaWdubWVudCh0aGlzLCB0aGlzLmJpbmRp
bmcsIHRoaXMuaW5pdGlhbGl6YXRpb24pOworCX0KKwogCWZsb3dJbmZvID0KIAkJdGhpcy5pbml0
aWFsaXphdGlvbgogCQkJLmFuYWx5c2VDb2RlKGN1cnJlbnRTY29wZSwgZmxvd0NvbnRleHQsIGZs
b3dJbmZvKQogCQkJLnVuY29uZGl0aW9uYWxJbml0cygpOwotCUZha2VkVHJhY2tpbmdWYXJpYWJs
ZS5oYW5kbGVSZXNvdXJjZUFzc2lnbm1lbnQoZmxvd0luZm8sIHRoaXMsIHRoaXMuaW5pdGlhbGl6
YXRpb24sIHRoaXMuYmluZGluZywgbnVsbCk7CisKKwlpZiAoc2hvdWxkQW5hbHlzZVJlc291cmNl
KQorCQlGYWtlZFRyYWNraW5nVmFyaWFibGUuaGFuZGxlUmVzb3VyY2VBc3NpZ25tZW50KHByZUlu
aXRJbmZvLCBmbG93SW5mbywgdGhpcywgdGhpcy5pbml0aWFsaXphdGlvbiwgdGhpcy5iaW5kaW5n
KTsKKwllbHNlCisJCUZha2VkVHJhY2tpbmdWYXJpYWJsZS5jbGVhblVwQWZ0ZXJBc3NpZ25tZW50
KGN1cnJlbnRTY29wZSwgQmluZGluZy5MT0NBTCwgdGhpcy5pbml0aWFsaXphdGlvbik7CisKIAlp
bnQgbnVsbFN0YXR1cyA9IHRoaXMuaW5pdGlhbGl6YXRpb24ubnVsbFN0YXR1cyhmbG93SW5mbyk7
CiAJaWYgKCFmbG93SW5mby5pc0RlZmluaXRlbHlBc3NpZ25lZCh0aGlzLmJpbmRpbmcpKXsvLyBm
b3IgbG9jYWwgdmFyaWFibGUgZGVidWcgYXR0cmlidXRlcwogCQl0aGlzLmJpdHMgfD0gRmlyc3RB
c3NpZ25tZW50VG9Mb2NhbDsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTWVzc2FnZVNlbmQuamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9hc3QvTWVzc2FnZVNlbmQuamF2YQppbmRleCA0NmQ0NTQwLi40YjMxMWY5IDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXN0L01lc3NhZ2VTZW5kLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9N
ZXNzYWdlU2VuZC5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioK
LSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
KyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
ICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWlu
ZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhl
IEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBk
aXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTEyLDYgKzEyLDcgQEAKICAqCQkJ
CQkJCQlidWcgMzE5MjAxIC0gW251bGxdIG5vIHdhcm5pbmcgd2hlbiB1bmJveGluZyBTaW5nbGVO
YW1lUmVmZXJlbmNlIGNhdXNlcyBOUEUKICAqCQkJCQkJCQlidWcgMzQ5MzI2IC0gWzEuN10gbmV3
IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCiAgKgkJCQkJCQkJYnVnIDE4
NjM0MiAtIFtjb21waWxlcl1bbnVsbF0gVXNpbmcgYW5ub3RhdGlvbnMgZm9yIG51bGwgY2hlY2tp
bmcKKyAqCQkJCQkJCQlidWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50
IHJlc291cmNlIGxlYWsgd2FybmluZ3MKICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2Fn
ZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0OwogCkBAIC05Niw5ICs5Nyw5
IEBACiAJCQlpZiAoKHRoaXMuYXJndW1lbnRzW2ldLmltcGxpY2l0Q29udmVyc2lvbiAmIFR5cGVJ
ZHMuVU5CT1hJTkcpICE9IDApIHsKIAkJCQl0aGlzLmFyZ3VtZW50c1tpXS5jaGVja05QRShjdXJy
ZW50U2NvcGUsIGZsb3dDb250ZXh0LCBmbG93SW5mbyk7CiAJCQl9Ci0JCQkvLyBpZiBhcmd1bWVu
dCBpcyBhbiBBdXRvQ2xvc2VhYmxlIGluc2VydCBpbmZvIHRoYXQgaXQgKm1heSogYmUgY2xvc2Vk
IChieSB0aGUgdGFyZ2V0IG1ldGhvZCwgaS5lLikKLQkJCWZsb3dJbmZvID0gRmFrZWRUcmFja2lu
Z1ZhcmlhYmxlLm1hcmtQYXNzZWRUb091dHNpZGUoY3VycmVudFNjb3BlLCB0aGlzLmFyZ3VtZW50
c1tpXSwgZmxvd0luZm8pOwogCQkJZmxvd0luZm8gPSB0aGlzLmFyZ3VtZW50c1tpXS5hbmFseXNl
Q29kZShjdXJyZW50U2NvcGUsIGZsb3dDb250ZXh0LCBmbG93SW5mbykudW5jb25kaXRpb25hbElu
aXRzKCk7CisJCQkvLyBpZiBhcmd1bWVudCBpcyBhbiBBdXRvQ2xvc2VhYmxlIGluc2VydCBpbmZv
IHRoYXQgaXQgKm1heSogYmUgY2xvc2VkIChieSB0aGUgdGFyZ2V0IG1ldGhvZCwgaS5lLikKKwkJ
CWZsb3dJbmZvID0gRmFrZWRUcmFja2luZ1ZhcmlhYmxlLm1hcmtQYXNzZWRUb091dHNpZGUoY3Vy
cmVudFNjb3BlLCB0aGlzLmFyZ3VtZW50c1tpXSwgZmxvd0luZm8sIG51bGwpOwogCQl9CiAJCWFu
YWx5c2VBcmd1bWVudHMoY3VycmVudFNjb3BlLCBmbG93Q29udGV4dCwgZmxvd0luZm8sIHRoaXMu
YmluZGluZywgdGhpcy5hcmd1bWVudHMpOwogCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvUXVh
bGlmaWVkQWxsb2NhdGlvbkV4cHJlc3Npb24uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvUXVhbGlmaWVkQWxs
b2NhdGlvbkV4cHJlc3Npb24uamF2YQppbmRleCAzYTJhMGVkLi4wYmQwNWY1IDEwMDY0NAotLS0g
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvYXN0L1F1YWxpZmllZEFsbG9jYXRpb25FeHByZXNzaW9uLmphdmEKKysrIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2FzdC9RdWFsaWZpZWRBbGxvY2F0aW9uRXhwcmVzc2lvbi5qYXZhCkBAIC0xLDUgKzEsNSBA
QAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJ
Qk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJ
Qk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMg
cHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWls
YWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAog
ICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUg
YXQKQEAgLTExLDYgKzExLDcgQEAKICAqICAgICAJCQkJCQkJYnVnIDMxOTIwMSAtIFtudWxsXSBu
byB3YXJuaW5nIHdoZW4gdW5ib3hpbmcgU2luZ2xlTmFtZVJlZmVyZW5jZSBjYXVzZXMgTlBFCiAg
KiAgICAgCQkJCQkJCWJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0
cnktd2l0aC1yZXNvdXJjZXMKICAqCQkJCQkJCQlidWcgMTg2MzQyIC0gW2NvbXBpbGVyXVtudWxs
XSBVc2luZyBhbm5vdGF0aW9ucyBmb3IgbnVsbCBjaGVja2luZworICoJCQkJCQkJCWJ1ZyAzNTg5
MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5n
cwogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5hc3Q7CiAKQEAgLTgxLDcgKzgyLDcgQEAKIAkJaWYgKHRoaXMuYXJndW1l
bnRzICE9IG51bGwpIHsKIAkJCWZvciAoaW50IGkgPSAwLCBjb3VudCA9IHRoaXMuYXJndW1lbnRz
Lmxlbmd0aDsgaSA8IGNvdW50OyBpKyspIHsKIAkJCQkvLyBpZiBhcmd1bWVudCBpcyBhbiBBdXRv
Q2xvc2VhYmxlIGluc2VydCBpbmZvIHRoYXQgaXQgKm1heSogYmUgY2xvc2VkIChieSB0aGUgdGFy
Z2V0IG1ldGhvZCwgaS5lLikKLQkJCQlmbG93SW5mbyA9IEZha2VkVHJhY2tpbmdWYXJpYWJsZS5t
YXJrUGFzc2VkVG9PdXRzaWRlKGN1cnJlbnRTY29wZSwgdGhpcy5hcmd1bWVudHNbaV0sIGZsb3dJ
bmZvKTsKKwkJCQlmbG93SW5mbyA9IEZha2VkVHJhY2tpbmdWYXJpYWJsZS5tYXJrUGFzc2VkVG9P
dXRzaWRlKGN1cnJlbnRTY29wZSwgdGhpcy5hcmd1bWVudHNbaV0sIGZsb3dJbmZvLCBudWxsKTsK
IAkJCQlmbG93SW5mbyA9IHRoaXMuYXJndW1lbnRzW2ldLmFuYWx5c2VDb2RlKGN1cnJlbnRTY29w
ZSwgZmxvd0NvbnRleHQsIGZsb3dJbmZvKTsKIAkJCQlpZiAoKHRoaXMuYXJndW1lbnRzW2ldLmlt
cGxpY2l0Q29udmVyc2lvbiAmIFR5cGVJZHMuVU5CT1hJTkcpICE9IDApIHsKIAkJCQkJdGhpcy5h
cmd1bWVudHNbaV0uY2hlY2tOUEUoY3VycmVudFNjb3BlLCBmbG93Q29udGV4dCwgZmxvd0luZm8p
OwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9TaW5nbGVOYW1lUmVmZXJlbmNlLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L1NpbmdsZU5hbWVSZWZlcmVuY2UuamF2YQppbmRleCBkNjI1ZDViLi40MTM4NWMxIDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXN0L1NpbmdsZU5hbWVSZWZlcmVuY2UuamF2YQorKysgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L1NpbmdsZU5hbWVSZWZlcmVuY2UuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0
aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0
aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5k
IHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIg
dGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFj
Y29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CmRpZmYgLS1n
aXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvYXN0L1RyeVN0YXRlbWVudC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9UcnlTdGF0ZW1l
bnQuamF2YQppbmRleCA5ZmFlMDA5Li4wNTM0OTcwIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1Ry
eVN0YXRlbWVudC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvVHJ5U3RhdGVtZW50LmphdmEKQEAgLTEy
LDYgKzEyLDcgQEAKICAqICAgICAJCQkJCQkJYnVnIDM1ODgyNyAtIFsxLjddIGV4Y2VwdGlvbiBh
bmFseXNpcyBmb3IgdC13LXIgc3BvaWxzIG51bGwgYW5hbHlzaXMKICAqICAgICAJCQkJCQkJYnVn
IDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNl
cwogICogICAgIAkJCQkJCQlidWcgMzU5MzM0IC0gQW5hbHlzaXMgZm9yIHJlc291cmNlIGxlYWsg
d2FybmluZ3MgZG9lcyBub3QgY29uc2lkZXIgZXhjZXB0aW9ucyBhcyBtZXRob2QgZXhpdCBwb2lu
dHMKKyAqCQkJCQkJCQlidWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50
IHJlc291cmNlIGxlYWsgd2FybmluZ3MKICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2Fn
ZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0OwogCkBAIC0xMzQsNyArMTM1
LDcgQEAKIAkJCWlmIChyZXNvdXJjZUJpbmRpbmcuY2xvc2VUcmFja2VyICE9IG51bGwpIHsKIAkJ
CQkvLyB0aGlzIHdhcyBmYWxzZSBhbGFybSwgd2UgZG9uJ3QgbmVlZCB0byB0cmFjayB0aGUgcmVz
b3VyY2UKIAkJCQl0aGlzLnRyeUJsb2NrLnNjb3BlLnJlbW92ZVRyYWNraW5nVmFyKHJlc291cmNl
QmluZGluZy5jbG9zZVRyYWNrZXIpOwotCQkJCXJlc291cmNlQmluZGluZy5jbG9zZVRyYWNrZXIg
PSBudWxsOworCQkJCS8vIGtlZXAgdGhlIHRyYWNraW5nIHZhcmlhYmxlIGluIHRoZSByZXNvdXJj
ZUJpbmRpbmcgaW4gb3JkZXIgdG8gcHJldmVudCBjcmVhdGluZyBhIG5ldyBvbmUgd2hpbGUgYW5h
bHl6aW5nIHRoZSB0cnkgYmxvY2sKIAkJCX0KIAkJCVR5cGVCaW5kaW5nIHR5cGUgPSByZXNvdXJj
ZUJpbmRpbmcudHlwZTsKIAkJCWlmICh0eXBlICE9IG51bGwgJiYgdHlwZS5pc1ZhbGlkQmluZGlu
ZygpKSB7CkBAIC0yNzYsNyArMjc3LDcgQEAKIAkJCWlmIChyZXNvdXJjZUJpbmRpbmcuY2xvc2VU
cmFja2VyICE9IG51bGwpIHsKIAkJCQkvLyB0aGlzIHdhcyBmYWxzZSBhbGFybSwgd2UgZG9uJ3Qg
bmVlZCB0byB0cmFjayB0aGUgcmVzb3VyY2UKIAkJCQl0aGlzLnRyeUJsb2NrLnNjb3BlLnJlbW92
ZVRyYWNraW5nVmFyKHJlc291cmNlQmluZGluZy5jbG9zZVRyYWNrZXIpOwotCQkJCXJlc291cmNl
QmluZGluZy5jbG9zZVRyYWNrZXIgPSBudWxsOworCQkJCS8vIGtlZXAgdGhlIHRyYWNraW5nIHZh
cmlhYmxlIGluIHRoZSByZXNvdXJjZUJpbmRpbmcgaW4gb3JkZXIgdG8gcHJldmVudCBjcmVhdGlu
ZyBhIG5ldyBvbmUgd2hpbGUgYW5hbHl6aW5nIHRoZSB0cnkgYmxvY2sKIAkJCX0gCiAJCQlUeXBl
QmluZGluZyB0eXBlID0gcmVzb3VyY2VCaW5kaW5nLnR5cGU7CiAJCQlpZiAodHlwZSAhPSBudWxs
ICYmIHR5cGUuaXNWYWxpZEJpbmRpbmcoKSkgewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9C
aW5hcnlUeXBlQmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CaW5hcnlUeXBlQmluZGluZy5q
YXZhCmluZGV4IDkyOTQ3MjYuLmRlMTdjMDcgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQmlu
YXJ5VHlwZUJpbmRpbmcuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0JpbmFyeVR5cGVCaW5kaW5n
LmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJp
Z2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFs
cwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQ
dWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlv
biwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtMTEsNiArMTEsNyBAQAogICoJCQkJCQkJCWJ1ZyAz
NDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNvdXJjZXMK
ICAqCQkJCQkJCQlidWcgMTg2MzQyIC0gW2NvbXBpbGVyXVtudWxsXSBVc2luZyBhbm5vdGF0aW9u
cyBmb3IgbnVsbCBjaGVja2luZwogICoJCQkJCQkJCWJ1ZyAzNjQ4OTAgLSBCaW5hcnlUeXBlQmlu
ZGluZyBzaG91bGQgdXNlIGNoYXIgY29uc3RhbnRzIGZyb20gVXRpbAorICoJCQkJCQkJCWJ1ZyAz
NTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJu
aW5ncwogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb21waWxlci5sb29rdXA7CiAKQEAgLTEyNzUsNyArMTI3Niw5IEBACiAJCQl0aGlz
LmVudmlyb25tZW50Lm1heVRvbGVyYXRlTWlzc2luZ1R5cGUgPSB3YXNUb2xlcmF0aW5nTWlzc2lu
Z1R5cGVQcm9jZXNzaW5nQW5ub3RhdGlvbnM7CiAJCX0KIAl9Ci0JdGhpcy50eXBlQml0cyB8PSB0
aGlzLnN1cGVyY2xhc3MudHlwZUJpdHM7CisJdGhpcy50eXBlQml0cyB8PSAodGhpcy5zdXBlcmNs
YXNzLnR5cGVCaXRzICYgVHlwZUlkcy5Jbmhlcml0YWJsZUJpdHMpOworCWlmICgodGhpcy50eXBl
Qml0cyAmIChUeXBlSWRzLkJpdEF1dG9DbG9zZWFibGV8VHlwZUlkcy5CaXRDbG9zZWFibGUpKSAh
PSAwKSAvLyBhdm9pZCB0aGUgc2lkZS1lZmZlY3RzIG9mIGhhc1R5cGVCaXQoKSEgCisJCXRoaXMu
dHlwZUJpdHMgfD0gYXBwbHlDbG9zZWFibGVXaGl0ZWxpc3RzKCk7CiAJcmV0dXJuIHRoaXMuc3Vw
ZXJjbGFzczsKIH0KIC8vIE5PVEU6IHN1cGVySW50ZXJmYWNlcyBvZiBiaW5hcnkgdHlwZXMgYXJl
IHJlc29sdmVkIHdoZW4gbmVlZGVkCkBAIC0xMjk4LDcgKzEzMDEsNyBAQAogCQkJCXRoaXMuZW52
aXJvbm1lbnQubWF5VG9sZXJhdGVNaXNzaW5nVHlwZSA9IHdhc1RvbGVyYXRpbmdNaXNzaW5nVHlw
ZVByb2Nlc3NpbmdBbm5vdGF0aW9uczsKIAkJCX0JCiAJCX0KLQkJdGhpcy50eXBlQml0cyB8PSB0
aGlzLnN1cGVySW50ZXJmYWNlc1tpXS50eXBlQml0czsKKwkJdGhpcy50eXBlQml0cyB8PSAodGhp
cy5zdXBlckludGVyZmFjZXNbaV0udHlwZUJpdHMgJiBUeXBlSWRzLkluaGVyaXRhYmxlQml0cyk7
CiAJfQogCXRoaXMudGFnQml0cyAmPSB+VGFnQml0cy5IYXNVbnJlc29sdmVkU3VwZXJpbnRlcmZh
Y2VzOwogCXJldHVybiB0aGlzLnN1cGVySW50ZXJmYWNlczsKZGlmZiAtLWdpdCBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9s
b29rdXAvQmxvY2tTY29wZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CbG9ja1Njb3BlLmphdmEKaW5k
ZXggYzkzYzlkOS4uMTg5MDMxNSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CbG9ja1Njb3Bl
LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CbG9ja1Njb3BlLmphdmEKQEAgLTEsNSArMSw1IEBA
CiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBw
cm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxh
YmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAg
KiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBh
dApAQCAtMTAsNiArMTAsNyBAQAogICogICAgIFN0ZXBoYW4gSGVycm1hbm4gLSBDb250cmlidXRp
b25zIGZvcgogICogICAgIAkJCQkJCQlidWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9y
IG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCiAgKgkJCQkJCQkJYnVnIDM1OTMzNCAtIEFuYWx5
c2lzIGZvciByZXNvdXJjZSBsZWFrIHdhcm5pbmdzIGRvZXMgbm90IGNvbnNpZGVyIGV4Y2VwdGlv
bnMgYXMgbWV0aG9kIGV4aXQgcG9pbnRzCisgKgkJCQkJCQkJYnVnIDM1ODkwMyAtIEZpbHRlciBw
cmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCiAgKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
Lmxvb2t1cDsKIApAQCAtOTgxLDYgKzk4MiwxMCBAQAogfQogLyoqIFdoZW4gYXJlIG5vIGxvbmdl
ciBpbnRlcmVzdGVkIGluIHRoaXMgdHJhY2tpbmcgdmFyaWFibGUgLSByZW1vdmUgaXQuICovCiBw
dWJsaWMgdm9pZCByZW1vdmVUcmFja2luZ1ZhcihGYWtlZFRyYWNraW5nVmFyaWFibGUgdHJhY2tp
bmdWYXJpYWJsZSkgeworCWlmICh0cmFja2luZ1ZhcmlhYmxlLmlubmVyVHJhY2tlciAhPSBudWxs
KSB7CisJCXJlbW92ZVRyYWNraW5nVmFyKHRyYWNraW5nVmFyaWFibGUuaW5uZXJUcmFja2VyKTsK
KwkJdHJhY2tpbmdWYXJpYWJsZS5pbm5lclRyYWNrZXIgPSBudWxsOworCX0KIAlpZiAodGhpcy50
cmFja2luZ1ZhcmlhYmxlcyAhPSBudWxsKQogCQlpZiAodGhpcy50cmFja2luZ1ZhcmlhYmxlcy5y
ZW1vdmUodHJhY2tpbmdWYXJpYWJsZSkpCiAJCQlyZXR1cm47CkBAIC0xMDAzLDEwICsxMDA4LDEw
IEBACiAJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSB0cmFja2luZ1ZhciA9IChGYWtlZFRyYWNraW5n
VmFyaWFibGUpIHRoaXMudHJhY2tpbmdWYXJpYWJsZXMuZ2V0KGkpOwogCQlpZiAobG9jYXRpb24g
IT0gbnVsbCAmJiB0cmFja2luZ1Zhci5vcmlnaW5hbEJpbmRpbmcgIT0gbnVsbCAmJiBmbG93SW5m
by5pc0RlZmluaXRlbHlOdWxsKHRyYWNraW5nVmFyLm9yaWdpbmFsQmluZGluZykpCiAJCQljb250
aW51ZTsgLy8gcmVwb3J0aW5nIGFnYWluc3QgYSBzcGVjaWZpYyBsb2NhdGlvbiwgcmVzb3VyY2Ug
aXMgbnVsbCBhdCB0aGlzIGZsb3csIGRvbid0IGNvbXBsYWluCi0JCWludCBzdGF0dXMgPSBnZXRO
dWxsU3RhdHVzQWdncmVzc2l2ZWx5KHRyYWNraW5nVmFyLmJpbmRpbmcsIGZsb3dJbmZvKTsKLQkJ
Ly8gdHJ5IHRvIGltcHJvdmUgaW5mbyBpZiBhIGNsb3NlKCkgaW5zaWRlIGZpbmFsbHkgd2FzIG9i
c2VydmVkOgotCQlpZiAobG9jYXRpb25TY29wZSAhPSBudWxsKSAvLyBvbmx5IGNoZWNrIGF0IG1l
dGhvZCBleGl0IHBvaW50cwotCQkJc3RhdHVzID0gbG9jYXRpb25TY29wZS5tZXJnZUNsb3NlU3Rh
dHVzKHN0YXR1cywgdHJhY2tpbmdWYXIuYmluZGluZywgdGhpcyk7CisJCQorCQkvLyBjb21wdXRl
IHRoZSBtb3N0IHNwZWNpZmljIG51bGwgc3RhdHVzIGZvciB0aGlzIHJlc291cmNlLAorCQlpbnQg
c3RhdHVzID0gdHJhY2tpbmdWYXIuZmluZE1vc3RTcGVjaWZpY1N0YXR1cyhmbG93SW5mbywgdGhp
cywgbG9jYXRpb25TY29wZSk7CisJCQogCQlpZiAoc3RhdHVzID09IEZsb3dJbmZvLk5VTEwpIHsK
IAkJCS8vIGRlZmluaXRlbHkgdW5jbG9zZWQ6IGhpZ2hlc3QgcHJpb3JpdHkKIAkJCXJlcG9ydFJl
c291cmNlTGVhayh0cmFja2luZ1ZhciwgbG9jYXRpb24sIHN0YXR1cyk7CkBAIC0xMDMzLDI0ICsx
MDM4LDYgQEAKIAkJCXRoaXMubG9jYWxzW2ldLmNsb3NlVHJhY2tlciA9IG51bGw7CQkKIAkJdGhp
cy50cmFja2luZ1ZhcmlhYmxlcyA9IG51bGw7CiAJfQotfQotCi1wcml2YXRlIGludCBtZXJnZUNs
b3NlU3RhdHVzKGludCBzdGF0dXMsIExvY2FsVmFyaWFibGVCaW5kaW5nIGJpbmRpbmcsIEJsb2Nr
U2NvcGUgb3V0ZXJTY29wZSkgewotCS8vIGdldCB0aGUgbW9zdCBzdWl0YWJsZSBudWxsIHN0YXR1
cyByZXByZXNlbnRpbmcgd2hldGhlciByZXNvdXJjZSAnYmluZGluZycgaGFzIGJlZW4gY2xvc2Vk
Ci0JLy8gc3RhcnQgYXQgdGhpcyBzY29wZSBhbmQgcG90ZW50aWFsbHkgdHJhdmVsIG91dCB1bnRp
bCAnb3V0ZXJTY29wZScKLQkvLyBhdCBlYWNoIHNjb3BlIGNvbnN1bHQgYW55IHJlY29yZGVkICdm
aW5hbGx5SW5mbycuCi0JaWYgKHN0YXR1cyAhPSBGbG93SW5mby5OT05fTlVMTCkgewotCQlpZiAo
dGhpcy5maW5hbGx5SW5mbyAhPSBudWxsKSB7Ci0JCQlpbnQgZmluYWxseVN0YXR1cyA9IHRoaXMu
ZmluYWxseUluZm8ubnVsbFN0YXR1cyhiaW5kaW5nKTsKLQkJCWlmIChmaW5hbGx5U3RhdHVzID09
IEZsb3dJbmZvLk5PTl9OVUxMKQotCQkJCXJldHVybiBmaW5hbGx5U3RhdHVzOwotCQkJaWYgKGZp
bmFsbHlTdGF0dXMgIT0gRmxvd0luZm8uTlVMTCkgLy8gbmVpdGhlciBpcyBOT05fTlVMTCwgYnV0
IG5vdCBib3RoIGFyZSBOVUxMID0+IGNhbGwgaXQgUE9URU5USUFMTFlfTlVMTAotCQkJCXN0YXR1
cyA9IEZsb3dJbmZvLlBPVEVOVElBTExZX05VTEw7Ci0JCX0KLQkJaWYgKHRoaXMgIT0gb3V0ZXJT
Y29wZSAmJiB0aGlzLnBhcmVudCBpbnN0YW5jZW9mIEJsb2NrU2NvcGUpCi0JCQlyZXR1cm4gKChC
bG9ja1Njb3BlKSB0aGlzLnBhcmVudCkubWVyZ2VDbG9zZVN0YXR1cyhzdGF0dXMsIGJpbmRpbmcs
IG91dGVyU2NvcGUpOwotCX0KLQlyZXR1cm4gc3RhdHVzOwogfQogCiBwcml2YXRlIHZvaWQgcmVw
b3J0UmVzb3VyY2VMZWFrKEZha2VkVHJhY2tpbmdWYXJpYWJsZSB0cmFja2luZ1ZhciwgQVNUTm9k
ZSBsb2NhdGlvbiwgaW50IG51bGxTdGF0dXMpIHsKQEAgLTEwODMsNiArMTA3MCw4IEBACiAJaWYg
KHRoaXMudHJhY2tpbmdWYXJpYWJsZXMgIT0gbnVsbCkgewogCQlmb3IgKGludCBpPTA7IGk8dGhp
cy50cmFja2luZ1ZhcmlhYmxlcy5zaXplKCk7IGkrKykgewogCQkJRmFrZWRUcmFja2luZ1Zhcmlh
YmxlIHRyYWNraW5nVmFyID0gKEZha2VkVHJhY2tpbmdWYXJpYWJsZSkgdGhpcy50cmFja2luZ1Zh
cmlhYmxlcy5nZXQoaSk7CisJCQlpZiAodHJhY2tpbmdWYXIub3JpZ2luYWxCaW5kaW5nID09IG51
bGwpCisJCQkJY29udGludWU7CiAJCQlpZiAoICAgdGhlbkZsb3dJbmZvLmlzRGVmaW5pdGVseU5v
bk51bGwodHJhY2tpbmdWYXIuYmluZGluZykJCQkvLyBjbG9zZWQgaW4gdGhlbiBicmFuY2gKIAkJ
CQkmJiBlbHNlRmxvd0luZm8uaXNEZWZpbml0ZWx5TnVsbCh0cmFja2luZ1Zhci5vcmlnaW5hbEJp
bmRpbmcpKQkJLy8gbnVsbCBpbiBlbHNlIGJyYW5jaAogCQkJewpAQCAtMTA5NywzNyArMTA4Niw1
IEBACiAJfQogCWlmICh0aGlzLnBhcmVudCBpbnN0YW5jZW9mIEJsb2NrU2NvcGUpCiAJCSgoQmxv
Y2tTY29wZSkgdGhpcy5wYXJlbnQpLmNvcnJlbGF0ZVRyYWNraW5nVmFyc0lmRWxzZSh0aGVuRmxv
d0luZm8sIGVsc2VGbG93SW5mbyk7Ci19Ci0KLS8qKgotICogR2V0IHRoZSBudWxsIHN0YXR1cyBs
b29raW5nIGV2ZW4gaW50byB1bnJlYWNoYWJsZSBmbG93cwotICogQHBhcmFtIGxvY2FsCi0gKiBA
cGFyYW0gZmxvd0luZm8KLSAqIEByZXR1cm4gb25lIG9mIHRoZSBjb25zdGFudHMgRmxvd0luZm8u
e05VTEwsUE9URU5USUFMTFlfTlVMTCxQT1RFTlRJQUxMWV9OT05fTlVMTCxOT05fTlVMTH0uCi0g
Ki8KLXByaXZhdGUgaW50IGdldE51bGxTdGF0dXNBZ2dyZXNzaXZlbHkoTG9jYWxWYXJpYWJsZUJp
bmRpbmcgbG9jYWwsIEZsb3dJbmZvIGZsb3dJbmZvKSB7Ci0JaW50IHJlYWNoTW9kZSA9IGZsb3dJ
bmZvLnJlYWNoTW9kZSgpOwotCWludCBzdGF0dXMgPSAwOwotCXRyeSB7Ci0JCS8vIHVucmVhY2hh
YmxlIGZsb3dJbmZvIGlzIHRvbyBzaHkgaW4gcmVwb3J0aW5nIG51bGwtaXNzdWVzLCB0ZW1wb3Jh
cmlseSBmb3JnZXQgcmVhY2hhYmlsaXR5OgotCQlpZiAocmVhY2hNb2RlICE9IEZsb3dJbmZvLlJF
QUNIQUJMRSkKLQkJCWZsb3dJbmZvLnRhZ0JpdHMgJj0gfkZsb3dJbmZvLlVOUkVBQ0hBQkxFOwot
CQlzdGF0dXMgPSBmbG93SW5mby5udWxsU3RhdHVzKGxvY2FsKTsKLQl9IGZpbmFsbHkgewotCQkv
LyByZXNldAotCQlmbG93SW5mby50YWdCaXRzIHw9IHJlYWNoTW9kZTsKLQl9Ci0JLy8gYXQgdGhp
cyBwb2ludCBzb21lIGNvbWJpbmF0aW9ucyBhcmUgbm90IHVzZWZ1bCBzbyBmbGF0dGVuIHRvIGEg
c2luZ2xlIGJpdDoKLQlpZiAoKHN0YXR1cyAmIEZsb3dJbmZvLk5VTEwpICE9IDApIHsKLQkJaWYg
KChzdGF0dXMgJiAoRmxvd0luZm8uTk9OX05VTEwgfCBGbG93SW5mby5QT1RFTlRJQUxMWV9OT05f
TlVMTCkpICE9IDApCi0JCQlyZXR1cm4gRmxvd0luZm8uUE9URU5USUFMTFlfTlVMTDsgCS8vIG51
bGwgKyBkb3VidCA9IHBvdCBudWxsCi0JCXJldHVybiBGbG93SW5mby5OVUxMOwotCX0gZWxzZSBp
ZiAoKHN0YXR1cyAmIEZsb3dJbmZvLk5PTl9OVUxMKSAhPSAwKSB7Ci0JCWlmICgoc3RhdHVzICYg
Rmxvd0luZm8uUE9URU5USUFMTFlfTlVMTCkgIT0gMCkKLQkJCXJldHVybiBGbG93SW5mby5QT1RF
TlRJQUxMWV9OVUxMOwkvLyBub24tbnVsbCArIGRvdWJ0ID0gcG90IG51bGwKLQkJcmV0dXJuIEZs
b3dJbmZvLk5PTl9OVUxMOwotCX0gZWxzZSBpZiAoKHN0YXR1cyAmIEZsb3dJbmZvLlBPVEVOVElB
TExZX05VTEwpICE9IDApCi0JCXJldHVybiBGbG93SW5mby5QT1RFTlRJQUxMWV9OVUxMOwotCXJl
dHVybiBzdGF0dXM7CiB9CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0NsYXNzU2NvcGUu
amF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9sb29rdXAvQ2xhc3NTY29wZS5qYXZhCmluZGV4IDNlYjNjY2EuLjg3Nzhj
NmIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQ2xhc3NTY29wZS5qYXZhCisrKyBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9sb29rdXAvQ2xhc3NTY29wZS5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFj
Y29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVy
bXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5p
ZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTEyLDYgKzEyLDcg
QEAKICAqICAgICAJCQkJCQlCdWcgMzAwNTc2IC0gTlBFIENvbXB1dGluZyB0eXBlIGhpZXJhcmNo
eSB3aGVuIGNvbXBsaWFuY2UgZG9lc24ndCBtYXRjaCBsaWJyYXJpZXMKICAqICAgICAJCQkJCQlC
dWcgMzU0NTM2IC0gY29tcGlsaW5nIHBhY2thZ2UtaW5mby5qYXZhIHN0aWxsIGRlcGVuZHMgb24g
dGhlIG9yZGVyIG9mIGNvbXBpbGF0aW9uIHVuaXRzCiAgKiAgICAgCQkJCQkJQnVnIDM0OTMyNiAt
IFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNlcworICogICAg
IAkJCQkJCUJ1ZyAzNTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3Vy
Y2UgbGVhayB3YXJuaW5ncwogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXA7CiAKQEAgLTkwOSw3ICs5MTAsMTAg
QEAKIAkJCX0gZWxzZSB7CiAJCQkJLy8gb25seSB3YW50IHRvIHJlYWNoIGhlcmUgd2hlbiBubyBl
cnJvcnMgYXJlIHJlcG9ydGVkCiAJCQkJc291cmNlVHlwZS5zdXBlcmNsYXNzID0gc3VwZXJjbGFz
czsKLQkJCQlzb3VyY2VUeXBlLnR5cGVCaXRzIHw9IHN1cGVyY2xhc3MudHlwZUJpdHM7CisJCQkJ
c291cmNlVHlwZS50eXBlQml0cyB8PSAoc3VwZXJjbGFzcy50eXBlQml0cyAmIFR5cGVJZHMuSW5o
ZXJpdGFibGVCaXRzKTsKKwkJCQkvLyBmdXJ0aGVyIGFuYWx5c2lzIGFnYWluc3Qgd2hpdGUgbGlz
dHMgZm9yIHRoZSB1bmxpa2VseSBjYXNlIHdlIGFyZSBjb21waWxpbmcgamF2YS5pby4qOgorCQkJ
CWlmICgoc291cmNlVHlwZS50eXBlQml0cyAmIChUeXBlSWRzLkJpdEF1dG9DbG9zZWFibGV8VHlw
ZUlkcy5CaXRDbG9zZWFibGUpKSAhPSAwKQorCQkJCQlzb3VyY2VUeXBlLnR5cGVCaXRzIHw9IHNv
dXJjZVR5cGUuYXBwbHlDbG9zZWFibGVXaGl0ZWxpc3RzKCk7CiAJCQkJcmV0dXJuIHRydWU7CiAJ
CQl9CiAJCX0KQEAgLTEwMjUsNyArMTAyOSw3IEBACiAJCQkJbm9Qcm9ibGVtcyAmPSBzdXBlcklu
dGVyZmFjZVJlZi5yZXNvbHZlZFR5cGUuaXNWYWxpZEJpbmRpbmcoKTsKIAkJCX0KIAkJCS8vIG9u
bHkgd2FudCB0byByZWFjaCBoZXJlIHdoZW4gbm8gZXJyb3JzIGFyZSByZXBvcnRlZAotCQkJc291
cmNlVHlwZS50eXBlQml0cyB8PSBzdXBlckludGVyZmFjZS50eXBlQml0czsKKwkJCXNvdXJjZVR5
cGUudHlwZUJpdHMgfD0gKHN1cGVySW50ZXJmYWNlLnR5cGVCaXRzICYgVHlwZUlkcy5Jbmhlcml0
YWJsZUJpdHMpOwogCQkJaW50ZXJmYWNlQmluZGluZ3NbY291bnQrK10gPSBzdXBlckludGVyZmFj
ZTsKIAkJfQogCQkvLyBob2xkIG9udG8gYWxsIGNvcnJlY3RseSByZXNvbHZlZCBzdXBlcmludGVy
ZmFjZXMKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvUmVmZXJlbmNlQmluZGluZy5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9SZWZlcmVuY2VCaW5kaW5nLmphdmEKaW5kZXggNzVkZTg1NC4uM2E4MDk0
NyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9SZWZlcmVuY2VCaW5kaW5nLmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9SZWZlcmVuY2VCaW5kaW5nLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jw
b3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jw
b3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFt
IGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVu
ZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGlj
aCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAt
MTAsNiArMTAsNyBAQAogICogICAgIFN0ZXBoYW4gSGVycm1hbm4gLSBDb250cmlidXRpb25zIGZv
cgogICoJCQkJCQkJCWJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0
cnktd2l0aC1yZXNvdXJjZXMKICAqCQkJCQkJCQlidWcgMTg2MzQyIC0gW2NvbXBpbGVyXVtudWxs
XSBVc2luZyBhbm5vdGF0aW9ucyBmb3IgbnVsbCBjaGVja2luZworICoJCQkJCQkJCWJ1ZyAzNTg5
MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5n
cwogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5sb29rdXA7CiAKQEAgLTE0NjksNCArMTQ3MCw1MCBAQAogcHVibGljIEZp
ZWxkQmluZGluZ1tdIHVuUmVzb2x2ZWRGaWVsZHMoKSB7CiAJcmV0dXJuIEJpbmRpbmcuTk9fRklF
TERTOwogfQorCisvKgorICogSWYgYSB0eXBlIC0ga25vd24gdG8gYmUgYSBDbG9zZWFibGUgLSBp
cyBtZW50aW9uZWQgaW4gb25lIG9mIG91ciB3aGl0ZSBsaXN0cworICogYW5zd2VyIHRoZSB0eXBl
Qml0IGZvciB0aGUgd2hpdGUgbGlzdCAoQml0V3JhcHBlckNsb3NlYWJsZSBvciBCaXRSZXNvdXJj
ZUZyZWVDbG9zZWFibGUpLgorICovCitwcm90ZWN0ZWQgaW50IGFwcGx5Q2xvc2VhYmxlV2hpdGVs
aXN0cygpIHsKKwlzd2l0Y2ggKHRoaXMuY29tcG91bmROYW1lLmxlbmd0aCkgeworCQljYXNlIDM6
CisJCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoVHlwZUNvbnN0YW50cy5KQVZBLCB0aGlzLmNv
bXBvdW5kTmFtZVswXSkpIHsKKwkJCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoVHlwZUNvbnN0
YW50cy5JTywgdGhpcy5jb21wb3VuZE5hbWVbMV0pKSB7CisJCQkJCWNoYXJbXSBzaW1wbGVOYW1l
ID0gdGhpcy5jb21wb3VuZE5hbWVbMl07CisJCQkJCWludCBsID0gVHlwZUNvbnN0YW50cy5KQVZB
X0lPX1dSQVBQRVJfQ0xPU0VBQkxFUy5sZW5ndGg7CisJCQkJCWZvciAoaW50IGkgPSAwOyBpIDwg
bDsgaSsrKSB7CisJCQkJCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoc2ltcGxlTmFtZSwgVHlw
ZUNvbnN0YW50cy5KQVZBX0lPX1dSQVBQRVJfQ0xPU0VBQkxFU1tpXSkpCisJCQkJCQkJcmV0dXJu
IFR5cGVJZHMuQml0V3JhcHBlckNsb3NlYWJsZTsKKwkJCQkJfQorCQkJCQlsID0gVHlwZUNvbnN0
YW50cy5KQVZBX0lPX1JFU09VUkNFX0ZSRUVfQ0xPU0VBQkxFUy5sZW5ndGg7CisJCQkJCWZvciAo
aW50IGkgPSAwOyBpIDwgbDsgaSsrKSB7CisJCQkJCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMo
c2ltcGxlTmFtZSwgVHlwZUNvbnN0YW50cy5KQVZBX0lPX1JFU09VUkNFX0ZSRUVfQ0xPU0VBQkxF
U1tpXSkpCisJCQkJCQkJcmV0dXJuIFR5cGVJZHMuQml0UmVzb3VyY2VGcmVlQ2xvc2VhYmxlOwor
CQkJCQl9CisJCQkJfQorCQkJfQorCQkJYnJlYWs7CisJCWNhc2UgNDoKKwkJCWlmIChDaGFyT3Bl
cmF0aW9uLmVxdWFscyhUeXBlQ29uc3RhbnRzLkpBVkEsIHRoaXMuY29tcG91bmROYW1lWzBdKSkg
eworCQkJCWlmIChDaGFyT3BlcmF0aW9uLmVxdWFscyhUeXBlQ29uc3RhbnRzLlVUSUwsIHRoaXMu
Y29tcG91bmROYW1lWzFdKSkgeworCQkJCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoVHlwZUNv
bnN0YW50cy5aSVAsIHRoaXMuY29tcG91bmROYW1lWzJdKSkgeworCQkJCQkJY2hhcltdIHNpbXBs
ZU5hbWUgPSB0aGlzLmNvbXBvdW5kTmFtZVszXTsKKwkJCQkJCWludCBsID0gVHlwZUNvbnN0YW50
cy5KQVZBX1VUSUxfWklQX1dSQVBQRVJfQ0xPU0VBQkxFUy5sZW5ndGg7CisJCQkJCQlmb3IgKGlu
dCBpID0gMDsgaSA8IGw7IGkrKykgeworCQkJCQkJCWlmIChDaGFyT3BlcmF0aW9uLmVxdWFscyhz
aW1wbGVOYW1lLCBUeXBlQ29uc3RhbnRzLkpBVkFfSU9fV1JBUFBFUl9DTE9TRUFCTEVTW2ldKSkK
KwkJCQkJCQkJcmV0dXJuIFR5cGVJZHMuQml0V3JhcHBlckNsb3NlYWJsZTsKKwkJCQkJCX0KKwkJ
CQkJfQorCQkJCX0KKwkJCX0KKwkJCWJyZWFrOworCX0KKwlpbnQgbCA9IFR5cGVDb25zdGFudHMu
T1RIRVJfV1JBUFBFUl9DTE9TRUFCTEVTLmxlbmd0aDsKKwlmb3IgKGludCBpID0gMDsgaSA8IGw7
IGkrKykgeworCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHModGhpcy5jb21wb3VuZE5hbWUsIFR5
cGVDb25zdGFudHMuT1RIRVJfV1JBUFBFUl9DTE9TRUFCTEVTW2ldKSkKKwkJCXJldHVybiBUeXBl
SWRzLkJpdFdyYXBwZXJDbG9zZWFibGU7CisJfQkKKwlyZXR1cm4gMDsKK30KIH0KZGlmZiAtLWdp
dCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9sb29rdXAvVHlwZUNvbnN0YW50cy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBl
Q29uc3RhbnRzLmphdmEKaW5kZXggMGJiZWY0Ny4uNjc5ZDA0YiAxMDA2NDQKLS0tIGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2xvb2t1cC9UeXBlQ29uc3RhbnRzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlQ29uc3Rh
bnRzLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29w
eXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29w
eXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxs
IHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVy
aWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBz
ZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1
dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtNyw3ICs3LDkgQEAKICAqIAogICogQ29udHJp
YnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1l
bnRhdGlvbgotICogICAgIFN0ZXBoYW4gSGVycm1hbm4gLSBDb250cmlidXRpb24gZm9yIGJ1ZyAz
NDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNvdXJjZXMK
KyAqICAgICBTdGVwaGFuIEhlcnJtYW5uIC0gQ29udHJpYnV0aW9ucyBmb3IKKyAqCQkJCQkJCQli
dWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3Vy
Y2VzCisgKgkJCQkJCQkJYnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFu
dCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2th
Z2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cDsKIApAQCAtMTksNiAr
MjEsNyBAQAogCWNoYXJbXSBMQU5HID0gImxhbmciLnRvQ2hhckFycmF5KCk7IC8vJE5PTi1OTFMt
MSQKIAljaGFyW10gSU8gPSAiaW8iLnRvQ2hhckFycmF5KCk7IC8vJE5PTi1OTFMtMSQKIAljaGFy
W10gVVRJTCA9ICJ1dGlsIi50b0NoYXJBcnJheSgpOyAvLyROT04tTkxTLTEkCisJY2hhcltdIFpJ
UCA9ICJ6aXAiLnRvQ2hhckFycmF5KCk7IC8vJE5PTi1OTFMtMSQKIAljaGFyW10gQU5OT1RBVElP
TiA9ICJhbm5vdGF0aW9uIi50b0NoYXJBcnJheSgpOyAvLyROT04tTkxTLTEkCiAJY2hhcltdIFJF
RkxFQ1QgPSAicmVmbGVjdCIudG9DaGFyQXJyYXkoKTsgLy8kTk9OLU5MUy0xJAogCWNoYXJbXSBM
RU5HVEggPSAibGVuZ3RoIi50b0NoYXJBcnJheSgpOyAvLyROT04tTkxTLTEkCkBAIC0xNTQsNiAr
MTU3LDU5IEBACiAJfTsKIAljaGFyW11bXSBKQVZBX0xBTkdfQVVUT0NMT1NFQUJMRSA9ICB7SkFW
QSwgTEFORywgIkF1dG9DbG9zZWFibGUiLnRvQ2hhckFycmF5KCl9OyAvLyROT04tTkxTLTEkCiAJ
Y2hhcltdIENMT1NFID0gImNsb3NlIi50b0NoYXJBcnJheSgpOyAvLyROT04tTkxTLTEkCisJLy8g
d2hpdGUgbGlzdHMgb2YgY2xvc2VhYmxlczoKKwljaGFyW11bXSBKQVZBX0lPX1dSQVBQRVJfQ0xP
U0VBQkxFUyA9IG5ldyBjaGFyW11bXSB7CisJCSJCdWZmZXJlZElucHV0U3RyZWFtIi50b0NoYXJB
cnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJCdWZmZXJlZE91dHB1dFN0cmVhbSIudG9DaGFyQXJy
YXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiQnVmZmVyZWRSZWFkZXIiLnRvQ2hhckFycmF5KCksIC8v
JE5PTi1OTFMtMSQKKwkJIkJ1ZmZlcmVkV3JpdGVyIi50b0NoYXJBcnJheSgpLCAvLyROT04tTkxT
LTEkCisJCSJJbnB1dFN0cmVhbVJlYWRlciIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAor
CQkiUHJpbnRXcml0ZXIiLnRvQ2hhckFycmF5KCksICAvLyROT04tTkxTLTEkCisJCSJMaW5lTnVt
YmVyUmVhZGVyIi50b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJEYXRhSW5wdXRTdHJl
YW0iLnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwkJIkRhdGFPdXRwdXRTdHJlYW0iLnRv
Q2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwkJIk9iamVjdElucHV0U3RyZWFtIi50b0NoYXJB
cnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJPYmplY3RPdXRwdXRTdHJlYW0iLnRvQ2hhckFycmF5
KCksIC8vJE5PTi1OTFMtMSQKKwkJIkZpbHRlcklucHV0U3RyZWFtIi50b0NoYXJBcnJheSgpLCAv
LyROT04tTkxTLTEkCisJCSJGaWx0ZXJPdXRwdXRTdHJlYW0iLnRvQ2hhckFycmF5KCksIC8vJE5P
Ti1OTFMtMSQKKwkJIkRhdGFJbnB1dFN0cmVhbSIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0x
JAorCQkiRGF0YU91dHB1dFN0cmVhbSIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQki
UHVzaGJhY2tJbnB1dFN0cmVhbSIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiU2Vx
dWVuY2VJbnB1dFN0cmVhbSIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiUHJpbnRT
dHJlYW0iLnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwkJIlB1c2hiYWNrUmVhZGVyIi50
b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJPdXRwdXRTdHJlYW1Xcml0ZXIiLnRvQ2hh
ckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwl9OworCWNoYXJbXVtdIEpBVkFfVVRJTF9aSVBfV1JB
UFBFUl9DTE9TRUFCTEVTID0gbmV3IGNoYXJbXVtdIHsKKwkJIkdaSVBJbnB1dFN0cmVhbSIudG9D
aGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiSW5mbGF0ZXJJbnB1dFN0cmVhbSIudG9DaGFy
QXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiRGVmbGF0ZXJJbnB1dFN0cmVhbSIudG9DaGFyQXJy
YXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiQ2hlY2tlZElucHV0U3RyZWFtIi50b0NoYXJBcnJheSgp
LCAvLyROT04tTkxTLTEkCisJCSJaaXBJbnB1dFN0cmVhbSIudG9DaGFyQXJyYXkoKSwgLy8kTk9O
LU5MUy0xJAorCQkiSmFySW5wdXRTdHJlYW0iLnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQK
KwkJIkdaSVBPdXRwdXRTdHJlYW0iLnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwkJIklu
ZmxhdGVyT3V0cHV0U3RyZWFtIi50b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJEZWZs
YXRlck91dHB1dFN0cmVhbSIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiQ2hlY2tl
ZE91dHB1dFN0cmVhbSIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiWmlwT3V0cHV0
U3RyZWFtIi50b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJKYXJPdXRwdXRTdHJlYW0i
LnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwl9OworCWNoYXJbXVtdW10gT1RIRVJfV1JB
UFBFUl9DTE9TRUFCTEVTID0gbmV3IGNoYXJbXVtdW10geworCQl7SkFWQSwgInNlY3VyaXR5Ii50
b0NoYXJBcnJheSgpLCAiRGlnZXN0SW5wdXRTdHJlYW0iLnRvQ2hhckFycmF5KCl9LCAvLyROT04t
TkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJe0pBVkEsICJzZWN1cml0eSIudG9DaGFyQXJyYXkoKSwg
IkRpZ2VzdE91dHB1dFN0cmVhbSIudG9DaGFyQXJyYXkoKX0sIC8vJE5PTi1OTFMtMSQgLy8kTk9O
LU5MUy0yJAorCQl7SkFWQSwgImJlYW5zIi50b0NoYXJBcnJheSgpLCAiWE1MRW5jb2RlciIudG9D
aGFyQXJyYXkoKX0sIC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQl7SkFWQSwgImJlYW5z
Ii50b0NoYXJBcnJheSgpLCAiWE1MRGVjb2RlciIudG9DaGFyQXJyYXkoKX0sIC8vJE5PTi1OTFMt
MSQgLy8kTk9OLU5MUy0yJAorCQl7SkFWQVgsICJzb3VuZCIudG9DaGFyQXJyYXkoKSwgInNhbXBs
ZWQiLnRvQ2hhckFycmF5KCksICJBdWRpb0lucHV0U3RyZWFtIi50b0NoYXJBcnJheSgpfSwgLy8k
Tk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQKKwl9OworCWNoYXJbXVtdIEpB
VkFfSU9fUkVTT1VSQ0VfRlJFRV9DTE9TRUFCTEVTID0gbmV3IGNoYXJbXVtdIHsJCQkKKwkJIlN0
cmluZ1JlYWRlciIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiU3RyaW5nV3JpdGVy
Ii50b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJCeXRlQXJyYXlJbnB1dFN0cmVhbSIu
dG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiQnl0ZUFycmF5T3V0cHV0U3RyZWFtIi50
b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJDaGFyQXJyYXlSZWFkZXIiLnRvQ2hhckFy
cmF5KCksIC8vJE5PTi1OTFMtMSQKKwkJIkNoYXJBcnJheVdyaXRlciIudG9DaGFyQXJyYXkoKSwg
Ly8kTk9OLU5MUy0xJAorCQkiU3RyaW5nQnVmZmVySW5wdXRTdHJlYW0iLnRvQ2hhckFycmF5KCks
IC8vJE5PTi1OTFMtMSQKKwl9OwogCiAJLy8gQ29uc3RyYWludHMgZm9yIGdlbmVyaWMgdHlwZSBh
cmd1bWVudCBpbmZlcmVuY2UKIAlpbnQgQ09OU1RSQUlOVF9FUVVBTCA9IDA7CQkvLyBBY3R1YWwg
PSBGb3JtYWwKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZUlkcy5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2xvb2t1cC9UeXBlSWRzLmphdmEKaW5kZXggN2ZmZjQzNC4uMWU0NTE0YiAxMDA2NDQKLS0tIGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9UeXBlSWRzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlSWRzLmph
dmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0
IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0
IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0
cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwog
ICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJs
aWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwg
YW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtMTEsNiArMTEsNyBAQAogICogICAgIAkJCQkJCQlidWcg
MzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2Vz
CiAgKiAgICAgCQkJCQkJCWJ1ZyAzNTkzNjIgLSBGVVAgb2YgYnVnIDM0OTMyNjogUmVzb3VyY2Ug
bGVhayBvbiBub24tQ2xvc2VhYmxlIHJlc291cmNlCiAgKgkJCQkJCQkJYnVnIDE4NjM0MiAtIFtj
b21waWxlcl1bbnVsbF0gVXNpbmcgYW5ub3RhdGlvbnMgZm9yIG51bGwgY2hlY2tpbmcKKyAqCQkJ
CQkJCQlidWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNl
IGxlYWsgd2FybmluZ3MKICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwOwogCkBAIC0yMDcsNCArMjA4LDE5IEBA
CiAJICogQHNlZSBSZWZlcmVuY2VCaW5kaW5nI2hhc1R5cGVCaXQoaW50KQogCSAqLwogCWZpbmFs
IGludCBCaXRDbG9zZWFibGUgPSAyOworCS8qKgorCSAqIEJpdCBmb3IgbWVtYmVycyBvZiBhIHdo
aXRlIGxpc3Q6CisJICogU3VidHlwZXMgb2YgQ2xvc2VhYmxlIHRoYXQgd3JhcCBhbm90aGVyIHJl
c291cmNlIHdpdGhvdXQgZGlyZWN0bHkgaG9sZGluZyBhbnkgT1MgcmVzb3VyY2VzLiAKKwkgKi8K
KwlmaW5hbCBpbnQgQml0V3JhcHBlckNsb3NlYWJsZSA9IDQ7CisJLyoqCisJICogQml0IGZvciBt
ZW1iZXJzIG9mIGEgd2hpdGUgbGlzdDoKKwkgKiBTdWJ0eXBlcyBvZiBDbG9zZWFibGUgdGhhdCBk
byBub3QgaG9sZCBhbiBPUyByZXNvdXJjZSB0aGF0IG5lZWRzIHRvIGJlIHJlbGVhc2VkLgorCSAq
LworCWZpbmFsIGludCBCaXRSZXNvdXJjZUZyZWVDbG9zZWFibGUgPSA4OworCQorCS8qKgorCSAq
IFNldCBvZiB0eXBlIGJpdHMgdGhhdCBzaG91bGQgYmUgaW5oZXJpdGVkIGJ5IGFueSBzdWIgdHlw
ZXMuCisJICovCisJZmluYWwgaW50IEluaGVyaXRhYmxlQml0cyA9IEJpdEF1dG9DbG9zZWFibGUg
fCBCaXRDbG9zZWFibGU7CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVWYXJpYWJs
ZUJpbmRpbmcuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZVZhcmlhYmxlQmluZGluZy5qYXZhCmlu
ZGV4IDk5NWYzMGUuLjkxYTcwNjUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZVZhcmlh
YmxlQmluZGluZy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZVZhcmlhYmxlQmluZGluZy5q
YXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdo
dCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdo
dCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdo
dHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMK
ICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVi
bGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24s
IGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTExLDYgKzExLDcgQEAKICAqICAgICAJCQkJCQkJYnVn
IDI4MjE1MiAtIFsxLjVdW2NvbXBpbGVyXSBHZW5lcmljcyBjb2RlIHJlamVjdGVkIGJ5IEVjbGlw
c2UgYnV0IGFjY2VwdGVkIGJ5IGphdmFjCiAgKiAgICAgCQkJCQkJCWJ1ZyAzNDkzMjYgLSBbMS43
XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNvdXJjZXMKICAqICAgICAJCQkJ
CQkJYnVnIDM1OTM2MiAtIEZVUCBvZiBidWcgMzQ5MzI2OiBSZXNvdXJjZSBsZWFrIG9uIG5vbi1D
bG9zZWFibGUgcmVzb3VyY2UKKyAqCQkJCQkJCQlidWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNh
bGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsgd2FybmluZ3MKICAqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3Vw
OwogCkBAIC0zMTYsMTEgKzMxNywxMSBAQAogCQkJLy8gaW5pdGlhbGl6ZSBmcm9tIGJvdW5kcwog
CQkJdGhpcy50eXBlQml0cyA9IDA7CiAJCQlpZiAodGhpcy5zdXBlcmNsYXNzICE9IG51bGwgJiYg
dGhpcy5zdXBlcmNsYXNzLmhhc1R5cGVCaXQoflR5cGVJZHMuQml0VW5pbml0aWFsaXplZCkpCi0J
CQkJdGhpcy50eXBlQml0cyB8PSB0aGlzLnN1cGVyY2xhc3MudHlwZUJpdHM7CisJCQkJdGhpcy50
eXBlQml0cyB8PSAodGhpcy5zdXBlcmNsYXNzLnR5cGVCaXRzICYgVHlwZUlkcy5Jbmhlcml0YWJs
ZUJpdHMpOwogCQkJaWYgKHRoaXMuc3VwZXJJbnRlcmZhY2VzICE9IG51bGwpCiAJCQkJZm9yIChp
bnQgaSA9IDAsIGwgPSB0aGlzLnN1cGVySW50ZXJmYWNlcy5sZW5ndGg7IGkgPCBsOyBpKyspCiAJ
CQkJCWlmICh0aGlzLnN1cGVySW50ZXJmYWNlc1tpXS5oYXNUeXBlQml0KH5UeXBlSWRzLkJpdFVu
aW5pdGlhbGl6ZWQpKQotCQkJCQkJdGhpcy50eXBlQml0cyB8PSB0aGlzLnN1cGVySW50ZXJmYWNl
c1tpXS50eXBlQml0czsKKwkJCQkJCXRoaXMudHlwZUJpdHMgfD0gKHRoaXMuc3VwZXJJbnRlcmZh
Y2VzW2ldLnR5cGVCaXRzICYgVHlwZUlkcy5Jbmhlcml0YWJsZUJpdHMpOwogCQl9CiAJCXJldHVy
biAodGhpcy50eXBlQml0cyAmIGJpdCkgIT0gMDsKIAl9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9v
a3VwL1dpbGRjYXJkQmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9XaWxkY2FyZEJpbmRpbmcu
amF2YQppbmRleCAwMWYzNjllLi45M2RmZmUxIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1dp
bGRjYXJkQmluZGluZy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvV2lsZGNhcmRCaW5kaW5nLmph
dmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0
IChjKSAyMDA1LCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0
IChjKSAyMDA1LCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0
cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwog
ICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJs
aWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwg
YW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtMTAsNiArMTAsNyBAQAogICogICAgIFN0ZXBoYW4gSGVy
cm1hbm4gLSBDb250cmlidXRpb24gZm9yCiAgKiAgICAgCQkJCQkJCWJ1ZyAzNDkzMjYgLSBbMS43
XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNvdXJjZXMKICAqICAgICAJCQkJ
CQkJYnVnIDM1OTM2MiAtIEZVUCBvZiBidWcgMzQ5MzI2OiBSZXNvdXJjZSBsZWFrIG9uIG5vbi1D
bG9zZWFibGUgcmVzb3VyY2UKKyAqCQkJCQkJCQlidWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNh
bGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsgd2FybmluZ3MKICAqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3Vw
OwogCkBAIC00MjksMTEgKzQzMCwxMSBAQAogCQkJLy8gaW5pdGlhbGl6ZSBmcm9tIHVwcGVyIGJv
dW5kcwogCQkJdGhpcy50eXBlQml0cyA9IDA7CiAJCQlpZiAodGhpcy5zdXBlcmNsYXNzICE9IG51
bGwgJiYgdGhpcy5zdXBlcmNsYXNzLmhhc1R5cGVCaXQoflR5cGVJZHMuQml0VW5pbml0aWFsaXpl
ZCkpCi0JCQkJdGhpcy50eXBlQml0cyB8PSB0aGlzLnN1cGVyY2xhc3MudHlwZUJpdHM7CisJCQkJ
dGhpcy50eXBlQml0cyB8PSAodGhpcy5zdXBlcmNsYXNzLnR5cGVCaXRzICYgVHlwZUlkcy5Jbmhl
cml0YWJsZUJpdHMpOwogCQkJaWYgKHRoaXMuc3VwZXJJbnRlcmZhY2VzICE9IG51bGwpCiAJCQkJ
Zm9yIChpbnQgaSA9IDAsIGwgPSB0aGlzLnN1cGVySW50ZXJmYWNlcy5sZW5ndGg7IGkgPCBsOyBp
KyspCiAJCQkJCWlmICh0aGlzLnN1cGVySW50ZXJmYWNlc1tpXS5oYXNUeXBlQml0KH5UeXBlSWRz
LkJpdFVuaW5pdGlhbGl6ZWQpKQotCQkJCQkJdGhpcy50eXBlQml0cyB8PSB0aGlzLnN1cGVySW50
ZXJmYWNlc1tpXS50eXBlQml0czsKKwkJCQkJCXRoaXMudHlwZUJpdHMgfD0gKHRoaXMuc3VwZXJJ
bnRlcmZhY2VzW2ldLnR5cGVCaXRzICYgVHlwZUlkcy5Jbmhlcml0YWJsZUJpdHMpOwogCQl9CiAJ
CXJldHVybiAodGhpcy50eXBlQml0cyAmIGJpdCkgIT0gMDsKIAl9Cg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>209234</attachid>
            <date>2012-01-09 18:03:00 -0500</date>
            <delta_ts>2012-01-13 16:17:57 -0500</delta_ts>
            <desc>Tests &amp; fix v0.9.6</desc>
            <filename>Bug_358903_v0.9.6.patch</filename>
            <type>text/plain</type>
            <size>99112</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1RyeVdpdGhSZXNvdXJj
ZXNTdGF0ZW1lbnRUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxl
ci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9UcnlX
aXRoUmVzb3VyY2VzU3RhdGVtZW50VGVzdC5qYXZhCmluZGV4IGYyMWE1N2YuLjk2NjAxMjUgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1RyeVdpdGhSZXNvdXJjZXNT
dGF0ZW1lbnRUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGls
ZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vVHJ5
V2l0aFJlc291cmNlc1N0YXRlbWVudFRlc3QuamF2YQpAQCAtMTEsMTEgKzExLDIxIEBACiAgKiAg
ICAgCQkJCQkJCWJ1ZyAzNTg4MjcgLSBbMS43XSBleGNlcHRpb24gYW5hbHlzaXMgZm9yIHQtdy1y
IHNwb2lscyBudWxsIGFuYWx5c2lzCiAgKiAgICAgCQkJCQkJCWJ1ZyAzNDkzMjYgLSBbMS43XSBu
ZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNvdXJjZXMKICAqICAgICAJCQkJCQkJ
YnVnIDM1OTMzNCAtIEFuYWx5c2lzIGZvciByZXNvdXJjZSBsZWFrIHdhcm5pbmdzIGRvZXMgbm90
IGNvbnNpZGVyIGV4Y2VwdGlvbnMgYXMgbWV0aG9kIGV4aXQgcG9pbnRzCisgKgkJCQkJCQkJYnVn
IDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdh
cm5pbmdzCisgKgkJCQkJCQkJYnVnIDM2MDkwOCAtIEF2b2lkIHJlc291cmNlIGxlYWsgd2Fybmlu
ZyB3aGVuIHRoZSB1bmRlcmx5aW5nL2NoYWluZWQgcmVzb3VyY2UgaXMgY2xvc2VkIGV4cGxpY2l0
bHkKKyAqCQkJCQkJCQlidWcgMzYxMDczIC0gQXZvaWQgcmVzb3VyY2UgbGVhayB3YXJuaW5nIHdo
ZW4gdGhlIHRvcCBsZXZlbCByZXNvdXJjZSBpcyBjbG9zZWQgZXhwbGljaXRseQorICoJCQkJCQkJ
CWJ1ZyAzNjIzMzEgLSBSZXNvdXJjZSBsZWFrIG5vdCBkZXRlY3RlZCB3aGVuIGNsb3NlYWJsZSBu
b3QgYXNzaWduZWQgdG8gdmFyaWFibGUKKyAqCQkJCQkJCQlidWcgMzYyMzMyIC0gT25seSByZXBv
cnQgcG90ZW50aWFsIGxlYWsgd2hlbiBjbG9zZWFibGUgbm90IGNyZWF0ZWQgaW4gdGhlIGxvY2Fs
IHNjb3BlCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMuY29tcGlsZXIucmVncmVzc2lvbjsKIAoraW1wb3J0IGphdmEuaW8uSU9FeGNl
cHRpb247CitpbXBvcnQgamF2YS5uZXQuVVJMOwogaW1wb3J0IGphdmEudXRpbC5NYXA7CiAKK2lt
cG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuRmlsZUxvY2F0b3I7CitpbXBvcnQgb3JnLmVj
bGlwc2UuY29yZS5ydW50aW1lLlBhdGg7CitpbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1l
LlBsYXRmb3JtOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLkphdmFDb3JlOwogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5pbXBsLkNvbXBpbGVyT3B0aW9uczsK
IApAQCAtMjMsNyArMzMsNyBAQAogcHVibGljIGNsYXNzIFRyeVdpdGhSZXNvdXJjZXNTdGF0ZW1l
bnRUZXN0IGV4dGVuZHMgQWJzdHJhY3RSZWdyZXNzaW9uVGVzdCB7CiAKIHN0YXRpYyB7Ci0vLwlU
RVNUU19OQU1FUyA9IG5ldyBTdHJpbmdbXSB7ICJ0ZXN0MDU2dGhyb3cifTsKKy8vCVRFU1RTX05B
TUVTID0gbmV3IFN0cmluZ1tdIHsgInRlc3QwNjFhIn07CiAvLwlURVNUU19OVU1CRVJTID0gbmV3
IGludFtdIHsgNTAgfTsKIC8vCVRFU1RTX1JBTkdFID0gbmV3IGludFtdIHsgMTEsIC0xIH07CiB9
CkBAIC0zNzEzLDExICszNzIzLDEyIEBACiAJCW9wdGlvbnMpOwogfQogLy8gQnVnIDM0OTMyNiAt
IFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNlcworLy8gQnVn
IDM2MjMzMiAtIE9ubHkgcmVwb3J0IHBvdGVudGlhbCBsZWFrIHdoZW4gY2xvc2VhYmxlIG5vdCBj
cmVhdGVkIGluIHRoZSBsb2NhbCBzY29wZQogLy8gb25lIG1ldGhvZCByZXR1cm5zIGFuIEF1dG9D
bGVhc2JsZSwgYSBzZWNvbmQgbWV0aG9kIHVzZXMgdGhpcyBvYmplY3Qgd2l0aG91dCBldmVyIGNs
b3NpbmcgaXQuCiBwdWJsaWMgdm9pZCB0ZXN0MDU2ZSgpIHsKIAlNYXAgb3B0aW9ucyA9IGdldENv
bXBpbGVyT3B0aW9ucygpOwogCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVw
b3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0Jb3B0aW9ucy5w
dXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2Vh
YmxlLCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRp
b25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9w
dGlvbnMuRVJST1IpOwogCXRoaXMucnVuTmVnYXRpdmVUZXN0KAogCQluZXcgU3RyaW5nW10gewog
CQkJIlguamF2YSIsCkBAIC0zNzQ0LDcgKzM3NTUsNyBAQAogCQkiMS4gRVJST1IgaW4gWC5qYXZh
IChhdCBsaW5lIDExKVxuIiArIAogCQkiCUZpbGVSZWFkZXIgcmVhZGVyID0gZ2V0UmVhZGVyKFwi
c29tZWZpbGVcIik7XG4iICsgCiAJCSIJICAgICAgICAgICBeXl5eXl5cbiIgKyAKLQkJIlJlc291
cmNlIGxlYWs6ICdyZWFkZXInIGlzIG5ldmVyIGNsb3NlZFxuIiArIAorCQkiUG90ZW50aWFsIHJl
c291cmNlIGxlYWs6IFwncmVhZGVyXCcgbWF5IG5vdCBiZSBjbG9zZWRcbiIgKyAKIAkJIi0tLS0t
LS0tLS1cbiIsCiAJCW51bGwsCiAJCXRydWUsCkBAIC0zOTY0LDYgKzM5NzUsNDYgQEAKIAkJbnVs
bCwKIAkJdHJ1ZSwKIAkJb3B0aW9ucyk7Cit9CisvLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdh
cm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCisvLyB0aHJlZSBBdXRvQ2xvc2Vh
YmxlcyBpbiBkaWZmZXJlbnQgYmxvY2tzIG9mIHRoZSBzYW1lIG1ldGhvZCAtIHByb2JsZW1zIGln
bm9yZWQKK3B1YmxpYyB2b2lkIHRlc3QwNTZpX2lnbm9yZSgpIHsKKwlNYXAgb3B0aW9ucyA9IGdl
dENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX1VO
Q0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLklHTk9SRSk7CisJb3B0aW9ucy5wdXQo
SmF2YUNvcmUuQ09NUElMRVJfUEJfUE9URU5USUFMTFlfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21w
aWxlck9wdGlvbnMuSUdOT1JFKTsKKwlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9F
WFBMSUNJVExZX0NMT1NFRF9BVVRPQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuSUdOT1JFKTsK
Kwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJ
CQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFk
ZXI7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1Ymxp
YyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICB2b2lkIGZvbyhib29sZWFuIGYxLCBib29sZWFuIGYy
KSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcg
RmlsZShcInNvbWVmaWxlXCIpO1xuIiArCisJCQkiICAgICAgICBpZiAoZjEpIHtcbiIgKworCQkJ
IiAgICAgICAgICAgIEZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUp
OyAvLyBlcnI6IG5vdCBjbG9zZWRcbiIgKworCQkJIiAgICAgICAgICAgIGNoYXJbXSBpbiA9IG5l
dyBjaGFyWzUwXTtcbiIgKworCQkJIiAgICAgICAgICAgIGZpbGVSZWFkZXIucmVhZChpbik7XG4i
ICsKKwkJCSIgICAgICAgICAgICB3aGlsZSAodHJ1ZSkge1xuIiArCisJCQkiICAgICAgICAgICAg
ICAgICBGaWxlUmVhZGVyIGxvb3BSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTsgLy8gZG9u
J3Qgd2FybiwgcHJvcGVybHkgY2xvc2VkXG4iICsKKwkJCSIgICAgICAgICAgICAgICAgIGxvb3BS
ZWFkZXIuY2xvc2UoKTsiICsKKwkJCSIgICAgICAgICAgICAgICAgIGJyZWFrO1xuIiArCisJCQki
ICAgICAgICAgICAgfVxuIiArCisJCQkiICAgICAgICB9IGVsc2Uge1xuIiArCisJCQkiICAgICAg
ICAgICAgRmlsZVJlYWRlciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7IC8vIHdh
cm46IG5vdCBjbG9zZWQgb24gYWxsIHBhdGhzXG4iICsKKwkJCSIgICAgICAgICAgICBpZiAoZjIp
XG4iICsKKwkJCSIgICAgICAgICAgICAgICAgZmlsZVJlYWRlci5jbG9zZSgpO1xuIiArCisJCQki
ICAgICAgICB9XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCQl9LAorCQkiIiwKKwkJ
bnVsbCwKKwkJdHJ1ZSwKKwkJbnVsbCwKKwkJb3B0aW9ucywKKwkJbnVsbCk7CiB9CiAvLyBCdWcg
MzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2Vz
CiAvLyB0aHJlZSBBdXRvQ2xvc2VhYmxlcyBpbiBkaWZmZXJlbnQgYmxvY2tzIG9mIHRoZSBzYW1l
IG1ldGhvZApAQCAtNDM1OCwxMSArNDQwOSwxMiBAQAogCQludWxsLypyZXF1ZXN0b3IqLyk7CiB9
CiAvLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgt
cmVzb3VyY2VzCisvLyBCdWcgMzYyMzMyIC0gT25seSByZXBvcnQgcG90ZW50aWFsIGxlYWsgd2hl
biBjbG9zZWFibGUgbm90IGNyZWF0ZWQgaW4gdGhlIGxvY2FsIHNjb3BlCiAvLyBhIG1ldGhvZCB1
c2VzIGFuIEF1dG9DbG9zZWFibGUgd2l0aG91dCBldmVyIGNsb3NpbmcgaXQsIHR5cGUgZnJvbSBh
IHR5cGUgdmFyaWFibGUKIHB1YmxpYyB2b2lkIHRlc3QwNTZwKCkgewogCU1hcCBvcHRpb25zID0g
Z2V0Q29tcGlsZXJPcHRpb25zKCk7CiAJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElP
Tl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQlvcHRp
b25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRD
bG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5XQVJOSU5HKTsKKwlvcHRpb25zLnB1dChDb21waWxl
ck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBp
bGVyT3B0aW9ucy5FUlJPUik7CiAJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCiAJCW5ldyBTdHJpbmdb
XSB7CiAJCQkiWC5qYXZhIiwKQEAgLTQzODksNyArNDQ0MSw3IEBACiAJCSIxLiBFUlJPUiBpbiBY
LmphdmEgKGF0IGxpbmUgOClcbiIgKyAKIAkJIglUIGZpbGVSZWFkZXIgPSBuZXdSZWFkZXIoZmls
ZSk7XG4iICsgCiAJCSIJICBeXl5eXl5eXl5eXG4iICsgCi0JCSJSZXNvdXJjZSBsZWFrOiAnZmls
ZVJlYWRlcicgaXMgbmV2ZXIgY2xvc2VkXG4iICsKKwkJIlBvdGVudGlhbCByZXNvdXJjZSBsZWFr
OiBcJ2ZpbGVSZWFkZXJcJyBtYXkgbm90IGJlIGNsb3NlZFxuIiArCiAJCSItLS0tLS0tLS0tXG4i
LAogCQludWxsLAogCQl0cnVlLApAQCAtNDQ0NCw3ICs0NDk2LDcgQEAKIAkJb3B0aW9ucyk7CiB9
CiAvLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgt
cmVzb3VyY2VzCi0vLyBjbG9zZWQgaW4gZGVhZCBjb2RlCisvLyBwcm9wZXJseSBjbG9zZWQsIGRl
YWQgY29kZSBpbiBiZXR3ZWVuCiBwdWJsaWMgdm9pZCB0ZXN0MDU2cigpIHsKIAlNYXAgb3B0aW9u
cyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwogCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVS
X1BCX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKQEAgLTUzNTQs
NyArNTQwNiw3MjMgQEAKIAkJIlg6On5YXG4iICsgCiAJCSJ0cnVlIik7CiB9Ci0KKy8vIEJ1ZyAz
NTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJu
aW5ncworLy8gQnVnIDM2MDkwOCAtIEF2b2lkIHJlc291cmNlIGxlYWsgd2FybmluZyB3aGVuIHRo
ZSB1bmRlcmx5aW5nL2NoYWluZWQgcmVzb3VyY2UgaXMgY2xvc2VkIGV4cGxpY2l0bHkKKy8vIGEg
cmVzb3VyY2Ugd3JhcHBlciBpcyBub3QgY2xvc2VkIGJ1dCB0aGUgdW5kZXJseWluZyByZXNvdXJj
ZSBpcworcHVibGljIHZvaWQgdGVzdDA2MWEoKSB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxl
ck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVu
Y2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0KENv
bXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwg
Q29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQluZXcgU3Ry
aW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKworCQkJ
ImltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2
YS5pby5GaWxlSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlv
bjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICB2b2lkIGZvbygpIHRo
cm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxl
KFwic29tZWZpbGVcIik7XG4iICsKKwkJCSIgICAgICAgIEZpbGVJbnB1dFN0cmVhbSBmaWxlU3Ry
ZWFtICA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSk7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZl
cmVkSW5wdXRTdHJlYW0gYmlzID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oZmlsZVN0cmVhbSk7
XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gZG91YmxlV3JhcCA9IG5ldyBC
dWZmZXJlZElucHV0U3RyZWFtKGJpcyk7XG4iICsKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJp
bnRsbihiaXMuYXZhaWxhYmxlKCkpO1xuIiArCisJCQkiICAgICAgICBmaWxlU3RyZWFtLmNsb3Nl
KCk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIHZvaWQgaW5saW5lKCkgdGhyb3dzIElP
RXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21l
ZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAgRmlsZUlucHV0U3RyZWFtIGZpbGVTdHJlYW07XG4i
ICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzID0gbmV3IEJ1ZmZlcmVkSW5w
dXRTdHJlYW0oZmlsZVN0cmVhbSA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSkpO1xuIiArCisJ
CQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oYmlzLmF2YWlsYWJsZSgpKTtcbiIgKworCQkJ
IiAgICAgICAgZmlsZVN0cmVhbS5jbG9zZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAg
ICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRp
b24ge1xuIiArCisJCQkiICAgICAgICB0cnkge1xuIiArCisJCQkiICAgICAgICAgICAgbmV3IFgo
KS5mb28oKTtcbiIgKworCQkJIiAgICAgICAgfSBjYXRjaCAoSU9FeGNlcHRpb24gZXgpIHsiICsK
KwkJCSIgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oXCJHb3QgSU8gRXhjZXB0aW9uXCIp
O1xuIiArCisJCQkiICAgICAgICB9XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCQl9
LAorCQkiR290IElPIEV4Y2VwdGlvbiIsCisJCW51bGwsCisJCXRydWUsCisJCW51bGwsCisJCW9w
dGlvbnMsCisJCW51bGwpOworfQorLy8gQnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1
bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCisvLyBhIGNsb3NlYWJsZSB3aXRob3V0
IE9TIHJlc291cmNlIGlzIG5vdCBjbG9zZWQKK3B1YmxpYyB2b2lkIHRlc3QwNjFiKCkgeworCU1h
cCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJP
cHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVS
Uk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlh
bGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJdGhpcy5ydW5D
b25mb3JtVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBq
YXZhLmlvLlN0cmluZ1JlYWRlcjtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9u
O1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICAgIHZvaWQgZm9vKCkgdGhy
b3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgU3RyaW5nUmVhZGVyIHN0cmluZyAg
PSBuZXcgU3RyaW5nUmVhZGVyKFwiY29udGVudFwiKTtcbiIgKworCQkJIiAgICAgICAgU3lzdGVt
Lm91dC5wcmludGxuKHN0cmluZy5yZWFkKCkpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAg
ICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRp
b24ge1xuIiArCisJCQkiICAgICAgICBuZXcgWCgpLmZvbygpO1xuIiArCisJCQkiICAgIH1cbiIg
KworCQkJIn1cbiIKKwkJfSwKKwkJIjk5IiwgLy8gY2hhcmFjdGVyICdjJworCQludWxsLAorCQl0
cnVlLAorCQludWxsLAorCQlvcHRpb25zLAorCQludWxsKTsKK30KKy8vIEJ1ZyAzNTg5MDMgLSBG
aWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5ncworLy8g
YSByZXNvdXJjZSB3cmFwcGVyIGlzIG5vdCBjbG9zZWQgYnV0IHRoZSB1bmRlcmx5aW5nIGNsb3Nl
YWJsZSBpcyByZXNvdXJjZS1mcmVlCitwdWJsaWMgdm9pZCB0ZXN0MDYxYygpIHsKKwlNYXAgb3B0
aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9u
cy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7
CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVu
Y2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVuQ29uZm9y
bVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5p
by5CdWZmZXJlZFJlYWRlcjtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLlN0cmluZ1JlYWRlcjtc
biIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGljIGNs
YXNzIFgge1xuIiArCisJCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIg
KworCQkJIiAgICAgICAgU3RyaW5nUmVhZGVyIGlucHV0ID0gbmV3IFN0cmluZ1JlYWRlcihcImNv
bnRlbnRcIik7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkUmVhZGVyIGJyID0gbmV3IEJ1ZmZl
cmVkUmVhZGVyKGlucHV0KTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRSZWFkZXIgZG91Ymxl
V3JhcCA9IG5ldyBCdWZmZXJlZFJlYWRlcihicik7XG4iICsKKwkJCSIgICAgICAgIFN5c3RlbS5v
dXQucHJpbnRsbihici5yZWFkKCkpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICB2b2lk
IGlubGluZSgpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVk
UmVhZGVyIGJyID0gbmV3IEJ1ZmZlcmVkUmVhZGVyKG5ldyBTdHJpbmdSZWFkZXIoXCJjb250ZW50
XCIpKTtcbiIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGJyLnJlYWQoKSk7XG4i
ICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmlu
Z1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIG5ldyBYKCku
Zm9vKCk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCQl9LAorCQkiOTkiLAorCQlu
dWxsLAorCQl0cnVlLAorCQludWxsLAorCQlvcHRpb25zLAorCQludWxsKTsKK30KKy8vIEJ1ZyAz
NTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJu
aW5ncworLy8gYSByZXNvdXJjZSB3cmFwcGVyIGlzIG5vdCBjbG9zZWQgbmVpdGhlciBpcyB0aGUg
dW5kZXJseWluZyByZXNvdXJjZQorcHVibGljIHZvaWQgdGVzdDA2MWQoKSB7CisJTWFwIG9wdGlv
bnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMu
T1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwor
CW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNs
b3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLldBUk5JTkcpOworCXRoaXMucnVuTmVnYXRp
dmVUZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEu
aW8uRmlsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJlYW07XG4i
ICsKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQg
amF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJ
IiAgICB2b2lkIGZvbygpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZp
bGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKKwkJCSIgICAgICAgIEZpbGVJ
bnB1dFN0cmVhbSBmaWxlU3RyZWFtICA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSk7XG4iICsK
KwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzID0gbmV3IEJ1ZmZlcmVkSW5wdXRT
dHJlYW0oZmlsZVN0cmVhbSk7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0g
ZG91YmxlV3JhcCA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGJpcyk7XG4iICsKKwkJCSIgICAg
ICAgIFN5c3RlbS5vdXQucHJpbnRsbihiaXMuYXZhaWxhYmxlKCkpO1xuIiArCisJCQkiICAgIH1c
biIgKworCQkJIiAgICB2b2lkIGlubGluZSgpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJ
CSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKKwkJCSIg
ICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzMiA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFt
KG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSkpO1xuIiArCisJCQkiICAgICAgICBTeXN0ZW0ub3V0
LnByaW50bG4oYmlzMi5hdmFpbGFibGUoKSk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAg
IHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlv
biB7XG4iICsKKwkJCSIgICAgICAgIHRyeSB7XG4iICsKKwkJCSIgICAgICAgICAgICBuZXcgWCgp
LmZvbygpO1xuIiArCisJCQkiICAgICAgICB9IGNhdGNoIChJT0V4Y2VwdGlvbiBleCkgeyIgKwor
CQkJIiAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcIkdvdCBJTyBFeGNlcHRpb25cIik7
XG4iICsKKwkJCSIgICAgICAgIH1cbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0s
CisJCSItLS0tLS0tLS0tXG4iICsgCisJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTAp
XG4iICsgCisJCSIJQnVmZmVyZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFwID0gbmV3IEJ1ZmZlcmVk
SW5wdXRTdHJlYW0oYmlzKTtcbiIgKyAKKwkJIgkgICAgICAgICAgICAgICAgICAgIF5eXl5eXl5e
Xl5cbiIgKyAKKwkJIlJlc291cmNlIGxlYWs6IFwnZG91YmxlV3JhcFwnIGlzIG5ldmVyIGNsb3Nl
ZFxuIiArIAorCQkiLS0tLS0tLS0tLVxuIiArIAorCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBs
aW5lIDE1KVxuIiArIAorCQkiCUJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzMiA9IG5ldyBCdWZmZXJl
ZElucHV0U3RyZWFtKG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSkpO1xuIiArIAorCQkiCSAgICAg
ICAgICAgICAgICAgICAgXl5eXlxuIiArIAorCQkiUmVzb3VyY2UgbGVhazogXCdiaXMyXCcgaXMg
bmV2ZXIgY2xvc2VkXG4iICsgCisJCSItLS0tLS0tLS0tXG4iLAorCQludWxsLAorCQl0cnVlLAor
CQlvcHRpb25zKTsKK30KKy8vIEJ1ZyAzNTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBv
cnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5ncworLy8gQnVnIDM2MTA3MyAtIEF2b2lkIHJlc291
cmNlIGxlYWsgd2FybmluZyB3aGVuIHRoZSB0b3AgbGV2ZWwgcmVzb3VyY2UgaXMgY2xvc2VkIGV4
cGxpY2l0bHkKKy8vIGEgcmVzb3VyY2Ugd3JhcHBlciBpcyBjbG9zZWQgY2xvc2luZyBhbHNvIHRo
ZSB1bmRlcmx5aW5nIHJlc291cmNlCitwdWJsaWMgdm9pZCB0ZXN0MDYxZSgpIHsKKwlNYXAgb3B0
aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9u
cy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7
CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVu
Y2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVuQ29uZm9y
bVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5p
by5GaWxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uQnVmZmVyZWRJbnB1dFN0cmVhbTtcbiIg
KworCQkJImltcG9ydCBqYXZhLmlvLkZpbGVJbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBq
YXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQki
ICAgIEZpbGVJbnB1dFN0cmVhbSBmaXM7IiArCisJCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElP
RXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21l
ZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAgRmlsZUlucHV0U3RyZWFtIGZpbGVTdHJlYW0gID0g
bmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1
dFN0cmVhbSBiaXMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShmaWxlU3RyZWFtKTtcbiIgKwor
CQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFwID0gbmV3IEJ1ZmZlcmVk
SW5wdXRTdHJlYW0oYmlzKTtcbiIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGJp
cy5hdmFpbGFibGUoKSk7XG4iICsKKwkJCSIgICAgICAgIGJpcy5jbG9zZSgpO1xuIiArCisJCQki
ICAgIH1cbiIgKworCQkJIiAgICB2b2lkIGlubGluZSgpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4i
ICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsK
KwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzMiA9IG5ldyBCdWZmZXJlZElucHV0
U3RyZWFtKGZpcyA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSkpO1xuIiArIC8vIGZpZWxkIGFz
c2lnbm1lbnQKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihiaXMyLmF2YWlsYWJsZSgp
KTtcbiIgKworCQkJIiAgICAgICAgYmlzMi5jbG9zZSgpO1xuIiArCisJCQkiICAgICAgICBGaWxl
SW5wdXRTdHJlYW0gZmlsZVN0cmVhbSAgPSBudWxsO1xuIiArCisJCQkiICAgICAgICBCdWZmZXJl
ZElucHV0U3RyZWFtIGJpczMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShmaWxlU3RyZWFtID0g
bmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKSk7XG4iICsKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQu
cHJpbnRsbihiaXMzLmF2YWlsYWJsZSgpKTtcbiIgKworCQkJIiAgICAgICAgYmlzMy5jbG9zZSgp
O1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihT
dHJpbmdbXSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICB0cnkg
e1xuIiArCisJCQkiICAgICAgICAgICAgbmV3IFgoKS5mb28oKTtcbiIgKworCQkJIiAgICAgICAg
fSBjYXRjaCAoSU9FeGNlcHRpb24gZXgpIHsiICsKKwkJCSIgICAgICAgICAgICBTeXN0ZW0ub3V0
LnByaW50bG4oXCJHb3QgSU8gRXhjZXB0aW9uXCIpO1xuIiArCisJCQkiICAgICAgICB9XG4iICsK
KwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCQl9LAorCQkiR290IElPIEV4Y2VwdGlvbiIsCisJ
CW51bGwsCisJCXRydWUsCisJCW51bGwsCisJCW9wdGlvbnMsCisJCW51bGwpOworfQorLy8gQnVn
IDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdh
cm5pbmdzCisvLyBCdWcgMzYxMDczIC0gQXZvaWQgcmVzb3VyY2UgbGVhayB3YXJuaW5nIHdoZW4g
dGhlIHRvcCBsZXZlbCByZXNvdXJjZSBpcyBjbG9zZWQgZXhwbGljaXRseQorLy8gYSByZXNvdXJj
ZSB3cmFwcGVyIGlzIGNsb3NlZCBjbG9zaW5nIGFsc28gdGhlIHVuZGVybHlpbmcgcmVzb3VyY2Ug
LSBvcmlnaW5hbCB0ZXN0IGNhc2UKK3B1YmxpYyB2b2lkIHRlc3QwNjFmKCkgdGhyb3dzIElPRXhj
ZXB0aW9uIHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMu
cHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBp
bGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9S
ZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1Ip
OworCVVSTCB1cmwgPSBGaWxlTG9jYXRvci50b0ZpbGVVUkwoRmlsZUxvY2F0b3IuZmluZChQbGF0
Zm9ybS5nZXRCdW5kbGUoIm9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyIiksIG5l
dyBQYXRoKCJNRVRBLUlORi9NQU5JRkVTVC5NRiIpLCBudWxsKSk7CisJdGhpcy5ydW5Db25mb3Jt
VGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZhLmlv
LklucHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSW5wdXRTdHJlYW1SZWFkZXI7
XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJlZFJlYWRlcjtcbiIgKworCQkJImltcG9y
dCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkiaW1wb3J0IGphdmEubmV0LlVSTDtcbiIg
KworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICBib29sZWFuIGxvYWRVUkwoZmlu
YWwgVVJMIHVybCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKyAKKwkJCSIgICAgICAgIElucHV0
U3RyZWFtIHN0cmVhbSA9IG51bGw7XG4iICsgCisJCQkiICAgICAgICBCdWZmZXJlZFJlYWRlciBy
ZWFkZXIgPSBudWxsO1xuIiArIAorCQkJIiAgICAgICAgdHJ5IHtcbiIgKyAKKwkJCSIgICAgICAg
ICAgICBzdHJlYW0gPSB1cmwub3BlblN0cmVhbSgpO1xuIiArIAorCQkJIiAgICAgICAgICAgIHJl
YWRlciA9IG5ldyBCdWZmZXJlZFJlYWRlcihuZXcgSW5wdXRTdHJlYW1SZWFkZXIoc3RyZWFtKSk7
XG4iICsgCisJCQkiICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKHJlYWRlci5yZWFkTGlu
ZSgpKTtcbiIgKworCQkJIiAgICAgICAgfSBmaW5hbGx5IHtcbiIgKyAKKwkJCSIgICAgICAgICAg
ICB0cnkge1xuIiArIAorCQkJIiAgICAgICAgICAgICAgICBpZiAocmVhZGVyICE9IG51bGwpXG4i
ICsgCisJCQkiICAgICAgICAgICAgICAgICAgICByZWFkZXIuY2xvc2UoKTtcbiIgKyAKKwkJCSIg
ICAgICAgICAgICB9IGNhdGNoIChJT0V4Y2VwdGlvbiB4KSB7XG4iICsgCisJCQkiICAgICAgICAg
ICAgfVxuIiArIAorCQkJIiAgICAgICAgfVxuIiArIAorCQkJIiAgICAgICAgcmV0dXJuIGZhbHNl
OyAvLyAnc3RyZWFtJyBtYXkgbm90IGJlIGNsb3NlZCBhdCB0aGlzIGxvY2F0aW9uXG4iICsgCisJ
CQkiICAgIH1cbiIgKyAKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10g
YXJncykgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgdHJ5IHtcbiIgKwor
CQkJIiAgICAgICAgICAgIG5ldyBYKCkubG9hZFVSTChuZXcgVVJMKFwiIit1cmwudG9TdHJpbmco
KSsiXCIpKTtcbiIgKworCQkJIiAgICAgICAgfSBjYXRjaCAoSU9FeGNlcHRpb24gZXgpIHtcbiIg
KworCQkJIiAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcIkdvdCBJTyBFeGNlcHRpb25c
IitleCk7XG4iICsKKwkJCSIgICAgICAgIH1cbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4i
CisJCX0sCisJCSJNYW5pZmVzdC1WZXJzaW9uOiAxLjAiLAorCQludWxsLAorCQl0cnVlLAorCQlu
dWxsLAorCQlvcHRpb25zLAorCQludWxsKTsKK30KKy8vIEJ1ZyAzNTg5MDMgLSBGaWx0ZXIgcHJh
Y3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5ncworLy8gQnVnIDM2MDkw
OCAtIEF2b2lkIHJlc291cmNlIGxlYWsgd2FybmluZyB3aGVuIHRoZSB1bmRlcmx5aW5nL2NoYWlu
ZWQgcmVzb3VyY2UgaXMgY2xvc2VkIGV4cGxpY2l0bHkKKy8vIERpZmZlcmVudCBwb2ludHMgaW4g
YSByZXNvdXJjZSBjaGFpbiBhcmUgY2xvc2VkCitwdWJsaWMgdm9pZCB0ZXN0MDYxZygpIHsKKwlN
YXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVy
T3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5F
UlJPUik7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRp
YWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVu
TmVnYXRpdmVUZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0
IGphdmEuaW8uRmlsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJl
YW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlSW5wdXRTdHJlYW07XG4iICsKKwkJCSJp
bXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIg
KworCQkJIiAgICB2b2lkIGNsb3NlTWlkZGxlKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwor
CQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKworCQkJ
IiAgICAgICAgRmlsZUlucHV0U3RyZWFtIGZpbGVTdHJlYW0gID0gbmV3IEZpbGVJbnB1dFN0cmVh
bShmaWxlKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMgPSBuZXcg
QnVmZmVyZWRJbnB1dFN0cmVhbShmaWxlU3RyZWFtKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVy
ZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFwID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oYmlzKTtc
biIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGJpcy5hdmFpbGFibGUoKSk7XG4i
ICsKKwkJCSIgICAgICAgIGJpcy5jbG9zZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAg
ICB2b2lkIGNsb3NlT3V0ZXIoKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAg
ICBGaWxlIGZpbGUyID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAg
RmlsZUlucHV0U3RyZWFtIGZpbGVTdHJlYW0yICA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZTIp
O1xuIiArCisJCQkiICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGJpczIgPSBuZXcgQnVmZmVy
ZWRJbnB1dFN0cmVhbShmaWxlU3RyZWFtMik7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5w
dXRTdHJlYW0gZG91YmxlV3JhcDIgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShiaXMyKTtcbiIg
KworCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGJpczIuYXZhaWxhYmxlKCkpO1xuIiAr
CisJCQkiICAgICAgICBkb3VibGVXcmFwMi5jbG9zZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKwor
CQkJIiAgICB2b2lkIG5ldmVyQ2xvc2VkKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJ
IiAgICAgICAgRmlsZSBmaWxlMyA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKKwkJCSIg
ICAgICAgIEZpbGVJbnB1dFN0cmVhbSBmaWxlU3RyZWFtMyAgPSBuZXcgRmlsZUlucHV0U3RyZWFt
KGZpbGUzKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMzID0gbmV3
IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oZmlsZVN0cmVhbTMpO1xuIiArCisJCQkiICAgICAgICBCdWZm
ZXJlZElucHV0U3RyZWFtIGRvdWJsZVdyYXAzID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oYmlz
Myk7XG4iICsKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihkb3VibGVXcmFwMy5hdmFp
bGFibGUoKSk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCQl9LAorCQkiLS0tLS0t
LS0tLVxuIiArIAorCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDI2KVxuIiArIAorCQki
CUJ1ZmZlcmVkSW5wdXRTdHJlYW0gZG91YmxlV3JhcDMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVh
bShiaXMzKTtcbiIgKyAKKwkJIgkgICAgICAgICAgICAgICAgICAgIF5eXl5eXl5eXl5eXG4iICsg
CisJCSJSZXNvdXJjZSBsZWFrOiBcJ2RvdWJsZVdyYXAzXCcgaXMgbmV2ZXIgY2xvc2VkXG4iICsg
CisJCSItLS0tLS0tLS0tXG4iLAorCQludWxsLAorCQl0cnVlLAorCQlvcHRpb25zKTsKK30KKy8v
IEJ1ZyAzNTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVh
ayB3YXJuaW5ncworLy8gQnVnIDM2MDkwOCAtIEF2b2lkIHJlc291cmNlIGxlYWsgd2FybmluZyB3
aGVuIHRoZSB1bmRlcmx5aW5nL2NoYWluZWQgcmVzb3VyY2UgaXMgY2xvc2VkIGV4cGxpY2l0bHkK
Ky8vIERpZmZlcmVudCBwb2ludHMgaW4gYSByZXNvdXJjZSBjaGFpbiBhcmUgcG90ZW50aWFsbHkg
Y2xvc2VkCitwdWJsaWMgdm9pZCB0ZXN0MDYxaCgpIHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBp
bGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0
VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQo
Q29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxl
LCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQluZXcg
U3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKwor
CQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQg
amF2YS5pby5GaWxlSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2Vw
dGlvbjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICB2b2lkIGNsb3Nl
TWlkZGxlKGJvb2xlYW4gYikgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAg
RmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAgRmls
ZUlucHV0U3RyZWFtIGZpbGVTdHJlYW0gID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKTtcbiIg
KworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMgPSBuZXcgQnVmZmVyZWRJbnB1
dFN0cmVhbShmaWxlU3RyZWFtKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVh
bSBkb3VibGVXcmFwID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oYmlzKTtcbiIgKworCQkJIiAg
ICAgICAgU3lzdGVtLm91dC5wcmludGxuKGJpcy5hdmFpbGFibGUoKSk7XG4iICsKKwkJCSIgICAg
ICAgIGlmIChiKVxuIiArCisJCQkiICAgICAgICAgICAgYmlzLmNsb3NlKCk7XG4iICsKKwkJCSIg
ICAgfVxuIiArCisJCQkiICAgIHZvaWQgY2xvc2VPdXRlcihib29sZWFuIGIpIHRocm93cyBJT0V4
Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZTIgPSBuZXcgRmlsZShcInNvbWVm
aWxlXCIpO1xuIiArCisJCQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0gZmlsZVN0cmVhbTIgID0g
bmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlMik7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5w
dXRTdHJlYW0gZHVtbXk7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlz
MiA9IChkdW1teSA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGZpbGVTdHJlYW0yKSk7XG4iICsK
KwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gZG91YmxlV3JhcDIgPSBuZXcgQnVmZmVy
ZWRJbnB1dFN0cmVhbShiaXMyKTtcbiIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxu
KGJpczIuYXZhaWxhYmxlKCkpO1xuIiArCisJCQkiICAgICAgICBpZiAoYilcbiIgKworCQkJIiAg
ICAgICAgICAgIGRvdWJsZVdyYXAyLmNsb3NlKCk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQki
ICAgIHZvaWQgcG90QW5kRGVmKGJvb2xlYW4gYikgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwor
CQkJIiAgICAgICAgRmlsZSBmaWxlMyA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKKwkJ
CSIgICAgICAgIEZpbGVJbnB1dFN0cmVhbSBmaWxlU3RyZWFtMyAgPSBuZXcgRmlsZUlucHV0U3Ry
ZWFtKGZpbGUzKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMzID0g
bmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oZmlsZVN0cmVhbTMpO1xuIiArCisJCQkiICAgICAgICBC
dWZmZXJlZElucHV0U3RyZWFtIGRvdWJsZVdyYXAzID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0o
YmlzMyk7XG4iICsKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihkb3VibGVXcmFwMy5h
dmFpbGFibGUoKSk7XG4iICsKKwkJCSIgICAgICAgIGlmIChiKSBiaXMzLmNsb3NlKCk7XG4iICsK
KwkJCSIgICAgICAgIGZpbGVTdHJlYW0zLmNsb3NlKCk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJ
CQkifVxuIgorCQl9LAorCQkiLS0tLS0tLS0tLVxuIiArIAorCQkiMS4gRVJST1IgaW4gWC5qYXZh
IChhdCBsaW5lIDEwKVxuIiArIAorCQkiCUJ1ZmZlcmVkSW5wdXRTdHJlYW0gZG91YmxlV3JhcCA9
IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGJpcyk7XG4iICsgCisJCSIJICAgICAgICAgICAgICAg
ICAgICBeXl5eXl5eXl5eXG4iICsgCisJCSJQb3RlbnRpYWwgcmVzb3VyY2UgbGVhazogXCdkb3Vi
bGVXcmFwXCcgbWF5IG5vdCBiZSBjbG9zZWRcbiIgKyAKKwkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJ
IjIuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAyMClcbiIgKyAKKwkJIglCdWZmZXJlZElucHV0
U3RyZWFtIGRvdWJsZVdyYXAyID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oYmlzMik7XG4iICsg
CisJCSIJICAgICAgICAgICAgICAgICAgICBeXl5eXl5eXl5eXlxuIiArIAorCQkiUG90ZW50aWFs
IHJlc291cmNlIGxlYWs6IFwnZG91YmxlV3JhcDJcJyBtYXkgbm90IGJlIGNsb3NlZFxuIiArIAor
CQkiLS0tLS0tLS0tLVxuIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJb3B0aW9ucyk7Cit9CisvLyBC
dWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsg
d2FybmluZ3MKKy8vIGxvY2FsIHZhciBpcyByZS11c2VkIGZvciB0d28gbGV2ZWxzIG9mIHdyYXBw
ZXJzCitwdWJsaWMgdm9pZCB0ZXN0MDYxaSgpIHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVy
T3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5j
bG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29t
cGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBD
b21waWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQluZXcgU3Ry
aW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKworCQkJ
ImltcG9ydCBqYXZhLmlvLklucHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uQnVm
ZmVyZWRJbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkZpbGVJbnB1dFN0cmVh
bTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGlj
IGNsYXNzIFgge1xuIiArCisJCQkiICAgIHZvaWQgY2xvc2VNaWRkbGUoKSB0aHJvd3MgSU9FeGNl
cHRpb24ge1xuIiArCisJCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxl
XCIpO1xuIiArCisJCQkiICAgICAgICBJbnB1dFN0cmVhbSBzdHJlYW0gID0gbmV3IEZpbGVJbnB1
dFN0cmVhbShmaWxlKTtcbiIgKworCQkJIiAgICAgICAgc3RyZWFtID0gbmV3IEJ1ZmZlcmVkSW5w
dXRTdHJlYW0oc3RyZWFtKTtcbiIgKworCQkJIiAgICAgICAgSW5wdXRTdHJlYW0gbWlkZGxlO1xu
IiArCisJCQkiICAgICAgICBzdHJlYW0gPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShtaWRkbGUg
PSBzdHJlYW0pO1xuIiArCisJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oc3RyZWFtLmF2
YWlsYWJsZSgpKTtcbiIgKworCQkJIiAgICAgICAgbWlkZGxlLmNsb3NlKCk7XG4iICsKKwkJCSIg
ICAgfVxuIiArCisJCQkiICAgIHZvaWQgY2xvc2VPdXRlcigpIHRocm93cyBJT0V4Y2VwdGlvbiB7
XG4iICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4i
ICsKKwkJCSIgICAgICAgIElucHV0U3RyZWFtIHN0cmVhbTIgID0gbmV3IEZpbGVJbnB1dFN0cmVh
bShmaWxlKTtcbiIgKworCQkJIiAgICAgICAgc3RyZWFtMiA9IG5ldyBCdWZmZXJlZElucHV0U3Ry
ZWFtKHN0cmVhbTIpO1xuIiArCisJCQkiICAgICAgICBzdHJlYW0yID0gbmV3IEJ1ZmZlcmVkSW5w
dXRTdHJlYW0oc3RyZWFtMik7XG4iICsKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihz
dHJlYW0yLmF2YWlsYWJsZSgpKTtcbiIgKworCQkJIiAgICAgICAgc3RyZWFtMi5jbG9zZSgpO1xu
IiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICB2b2lkIG5ldmVyQ2xvc2VkKCkgdGhyb3dzIElP
RXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21l
ZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAgSW5wdXRTdHJlYW0gc3RyZWFtMyAgPSBuZXcgRmls
ZUlucHV0U3RyZWFtKGZpbGUpO1xuIiArCisJCQkiICAgICAgICBzdHJlYW0zID0gbmV3IEJ1ZmZl
cmVkSW5wdXRTdHJlYW0oc3RyZWFtMyk7XG4iICsKKwkJCSIgICAgICAgIHN0cmVhbTMgPSBuZXcg
QnVmZmVyZWRJbnB1dFN0cmVhbShzdHJlYW0zKTtcbiIgKworCQkJIiAgICAgICAgU3lzdGVtLm91
dC5wcmludGxuKHN0cmVhbTMuYXZhaWxhYmxlKCkpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJ
In1cbiIKKwkJfSwKKwkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJIjEuIEVSUk9SIGluIFguamF2YSAo
YXQgbGluZSAyNilcbiIgKyAKKwkJIglJbnB1dFN0cmVhbSBzdHJlYW0zICA9IG5ldyBGaWxlSW5w
dXRTdHJlYW0oZmlsZSk7XG4iICsgCisJCSIJICAgICAgICAgICAgXl5eXl5eXlxuIiArIAorCQki
UmVzb3VyY2UgbGVhazogXCdzdHJlYW0zXCcgaXMgbmV2ZXIgY2xvc2VkXG4iICsgCisJCSItLS0t
LS0tLS0tXG4iLAorCQludWxsLAorCQl0cnVlLAorCQlvcHRpb25zKTsKK30KKy8vIEJ1ZyAzNTg5
MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5n
cworLy8gc2VsZi13cmFwcGluZyBhIG1ldGhvZCBhcmd1bWVudCAoY2F1c2VkIE5QRSBVbmNvbmRp
dGlvbmFsRmxvd0luZm8ubWFya0FzRGVmaW5pdGVseU51bGwoLi4pKS4KK3B1YmxpYyB2b2lkIHRl
c3QwNjFqKCkgeworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9u
cy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29t
cGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9O
X1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJP
Uik7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEi
LAorCQkJImltcG9ydCBqYXZhLmlvLklucHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEu
aW8uQnVmZmVyZWRJbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0
aW9uO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICAgIHZvaWQgZm9vKElu
cHV0U3RyZWFtIHN0cmVhbSkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAg
c3RyZWFtID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oc3RyZWFtKTtcbiIgKworCQkJIiAgICAg
ICAgU3lzdGVtLm91dC5wcmludGxuKHN0cmVhbS5hdmFpbGFibGUoKSk7XG4iICsKKwkJCSIgICAg
ICAgIHN0cmVhbS5jbG9zZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICB2b2lkIGJv
byhJbnB1dFN0cmVhbSBzdHJlYW0yKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAg
ICAgICBzdHJlYW0yID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oc3RyZWFtMik7XG4iICsKKwkJ
CSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihzdHJlYW0yLmF2YWlsYWJsZSgpKTtcbiIgKwor
CQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSIiLAorCQludWxsLAorCQl0cnVlLAor
CQludWxsLAorCQlvcHRpb25zLAorCQludWxsKTsKK30KKy8vIEJ1ZyAzNTg5MDMgLSBGaWx0ZXIg
cHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5ncworLy8gYSB3cmFw
cGVyIGlzIGNyZWF0ZWQgaW4gYSByZXR1cm4gc3RhdGVtZW50CitwdWJsaWMgdm9pZCB0ZXN0MDYx
aygpIHRocm93cyBJT0V4Y2VwdGlvbiB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlv
bnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2Vk
Q2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0KENvbXBpbGVy
T3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGls
ZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQluZXcgU3RyaW5nW10g
eworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKworCQkJImltcG9y
dCBqYXZhLmlvLkZpbGVJbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZl
cmVkSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIg
KworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICBCdWZmZXJlZElucHV0U3RyZWFt
IGdldFJlYWRlcihGaWxlIGZpbGUpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAg
ICAgIEZpbGVJbnB1dFN0cmVhbSBzdHJlYW0gPSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpO1xu
IiArCisJCQkiICAgICAgICByZXR1cm4gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oc3RyZWFtKTtc
biIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSIiLAorCQludWxsLAorCQl0
cnVlLAorCQludWxsLAorCQlvcHRpb25zLAorCQludWxsKTsKK30KKy8vIEJ1ZyAzNTg5MDMgLSBG
aWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5ncworLy8g
YSBjbG9zZWFibGUgaXMgYXNzaWduZWQgdG8gYSBmaWVsZAorcHVibGljIHZvaWQgdGVzdDA2MWwo
KSB0aHJvd3MgSU9FeGNlcHRpb24geworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25z
KCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENs
b3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9w
dGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVy
T3B0aW9ucy5FUlJPUik7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsK
KwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsKKwkJCSJpbXBvcnQg
amF2YS5pby5GaWxlSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJl
ZElucHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsK
KwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBz
dHJlYW07XG4iICsKKwkJCSIgICAgdm9pZCBmb28oRmlsZSBmaWxlKSB0aHJvd3MgSU9FeGNlcHRp
b24ge1xuIiArCisJCQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0gcyA9IG5ldyBGaWxlSW5wdXRT
dHJlYW0oZmlsZSk7XG4iICsKKwkJCSIgICAgICAgIHN0cmVhbSA9IG5ldyBCdWZmZXJlZElucHV0
U3RyZWFtKHMpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIiIsCisJ
CW51bGwsCisJCXRydWUsCisJCW51bGwsCisJCW9wdGlvbnMsCisJCW51bGwpOworfQorLy8gQnVn
IDM2MjMzMSAtIFJlc291cmNlIGxlYWsgbm90IGRldGVjdGVkIHdoZW4gY2xvc2VhYmxlIG5vdCBh
c3NpZ25lZCB0byB2YXJpYWJsZQorLy8gYSByZXNvdXJjZSBpcyBuZXZlciBhc3NpZ25lZAorcHVi
bGljIHZvaWQgdGVzdDA2MmEoKSB0aHJvd3MgSU9FeGNlcHRpb24geworCU1hcCBvcHRpb25zID0g
Z2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElP
Tl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRp
b25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRD
bG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3Qo
CisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxl
O1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZU91dHB1dFN0cmVhbTtcbiIgKworCQkJImlt
cG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiAr
CisJCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAg
ICAgbmV3IEZpbGVPdXRwdXRTdHJlYW0obmV3IEZpbGUoXCJDOlxcdGVtcFxcZm9vLnR4dFwiKSku
d3JpdGUoMSk7XG4iICsgCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIi0tLS0t
LS0tLS1cbiIgKyAKKwkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA2KVxuIiArIAorCQki
CW5ldyBGaWxlT3V0cHV0U3RyZWFtKG5ldyBGaWxlKFwiQzpcXHRlbXBcXGZvby50eHRcIikpLndy
aXRlKDEpO1xuIiArIAorCQkiCV5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXl5cbiIgKyAKKwkJIlJlc291cmNlIGxlYWs6IFwnPHVuYXNzaWduZWQgQ2xvc2Vh
YmxlIHZhbHVlPlwnIGlzIG5ldmVyIGNsb3NlZFxuIiArIAorCQkiLS0tLS0tLS0tLVxuIiwKKwkJ
bnVsbCwKKwkJdHJ1ZSwKKwkJb3B0aW9ucyk7Cit9CisvLyBCdWcgMzYyMzMxIC0gUmVzb3VyY2Ug
bGVhayBub3QgZGV0ZWN0ZWQgd2hlbiBjbG9zZWFibGUgbm90IGFzc2lnbmVkIHRvIHZhcmlhYmxl
CisvLyBhIGZyZXNobHkgYWxsb2NhdGVkIHJlc291cmNlIGlzIGltbWVkaWF0ZWx5IGNsb3NlZAor
cHVibGljIHZvaWQgdGVzdDA2MmIoKSB0aHJvd3MgSU9FeGNlcHRpb24geworCU1hcCBvcHRpb25z
ID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9Q
VElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlv
cHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9z
ZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJdGhpcy5ydW5Db25mb3JtVGVz
dCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZhLmlvLkZp
bGU7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlT3V0cHV0U3RyZWFtO1xuIiArCisJCQki
aW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4i
ICsKKwkJCSIgICAgdm9pZCBmb28oKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAg
ICAgICBuZXcgRmlsZU91dHB1dFN0cmVhbShuZXcgRmlsZShcIkM6XFx0ZW1wXFxmb28udHh0XCIp
KS5jbG9zZSgpO1xuIiArIAorCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSIiLAor
CQludWxsLAorCQl0cnVlLAorCQludWxsLAorCQlvcHRpb25zLAorCQludWxsKTsKK30KKy8vIEJ1
ZyAzNjIzMzEgLSBSZXNvdXJjZSBsZWFrIG5vdCBkZXRlY3RlZCB3aGVuIGNsb3NlYWJsZSBub3Qg
YXNzaWduZWQgdG8gdmFyaWFibGUKKy8vIGEgcmVzb3VyY2UgaXMgZGlyZWN0bHkgcGFzc2VkIHRv
IGFub3RoZXIgbWV0aG9kCitwdWJsaWMgdm9pZCB0ZXN0MDYyYygpIHRocm93cyBJT0V4Y2VwdGlv
biB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChD
b21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9w
dGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0
UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0
aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQki
aW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkZpbGVPdXRwdXRT
dHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1
YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICB2b2lkIGZvbygpIHRocm93cyBJT0V4Y2VwdGlv
biB7XG4iICsKKwkJCSIgICAgICAgIHdyaXRlSXQobmV3IEZpbGVPdXRwdXRTdHJlYW0obmV3IEZp
bGUoXCJDOlxcdGVtcFxcZm9vLnR4dFwiKSkpO1xuIiArIAorCQkJIiAgICB9XG4iICsKKwkJCSIg
ICAgdm9pZCB3cml0ZUl0KEZpbGVPdXRwdXRTdHJlYW0gZm9zKSB0aHJvd3MgSU9FeGNlcHRpb24g
e1xuIiArCisJCQkiICAgICAgICBmb3Mud3JpdGUoMSk7XG4iICsKKwkJCSIgICAgICAgIGZvcy5j
bG9zZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIiIsCisJCW51
bGwsCisJCXRydWUsCisJCW51bGwsCisJCW9wdGlvbnMsCisJCW51bGwpOworfQorLy8gQnVnIDM2
MjMzMSAtIFJlc291cmNlIGxlYWsgbm90IGRldGVjdGVkIHdoZW4gY2xvc2VhYmxlIG5vdCBhc3Np
Z25lZCB0byB2YXJpYWJsZQorLy8gYSByZXNvdXJjZSBpcyBub3QgdXNlZAorcHVibGljIHZvaWQg
dGVzdDA2MmQoKSB0aHJvd3MgSU9FeGNlcHRpb24geworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGls
ZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRV
bmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChD
b21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUs
IENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBT
dHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCisJ
CQkiaW1wb3J0IGphdmEuaW8uRmlsZU91dHB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZh
LmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICAg
IHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgbmV3IEZp
bGVPdXRwdXRTdHJlYW0obmV3IEZpbGUoXCJDOlxcdGVtcFxcZm9vLnR4dFwiKSk7XG4iICsgCisJ
CQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJIjEu
IEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA2KVxuIiArIAorCQkiCW5ldyBGaWxlT3V0cHV0U3Ry
ZWFtKG5ldyBGaWxlKFwiQzpcXHRlbXBcXGZvby50eHRcIikpO1xuIiArIAorCQkiCV5eXl5eXl5e
Xl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIgKyAKKwkJIlJlc291
cmNlIGxlYWs6IFwnPHVuYXNzaWduZWQgQ2xvc2VhYmxlIHZhbHVlPlwnIGlzIG5ldmVyIGNsb3Nl
ZFxuIiArIAorCQkiLS0tLS0tLS0tLVxuIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJb3B0aW9ucyk7
Cit9CisvLyBCdWcgMzYyMzMyIC0gT25seSByZXBvcnQgcG90ZW50aWFsIGxlYWsgd2hlbiBjbG9z
ZWFibGUgbm90IGNyZWF0ZWQgaW4gdGhlIGxvY2FsIHNjb3BlCisvLyBhIHdyYXBwZXIgaXMgb2J0
YWluZWQgZnJvbSBhbm90aGVyIG1ldGhvZAorcHVibGljIHZvaWQgdGVzdDA2M2EoKSB0aHJvd3Mg
SU9FeGNlcHRpb24geworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0
aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwg
Q29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BU
SU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5F
UlJPUik7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5q
YXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8u
RmlsZUlucHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uQnVmZmVyZWRJbnB1dFN0
cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVi
bGljIGNsYXNzIFgge1xuIiArCisJCQkiICAgIHZvaWQgcmVhZChGaWxlIGZpbGUpIHRocm93cyBJ
T0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZpbGVJbnB1dFN0cmVhbSBzdHJlYW0gPSBu
ZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpO1xuIiArCisJCQkiICAgICAgICBCdWZmZXJlZElucHV0
U3RyZWFtIGJpcyA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKHN0cmVhbSk7IC8vIG5ldmVyIHNp
bmNlIHJlYXNzaWduZWRcbiIgKworCQkJIiAgICAgICAgRmlsZUlucHV0U3RyZWFtIHN0cmVhbTIg
PSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpOyAvLyB1bnN1cmUgc2luY2UgcGFzc2VkIHRvIG1l
dGhvZFxuIiArCisJCQkiICAgICAgICBiaXMgPSBnZXRSZWFkZXIoc3RyZWFtMik7IC8vIHVuc3Vy
ZSBzaW5jZSBvYnRhaW5lZCBmcm9tIG1ldGhvZFxuIiArCisJCQkiICAgICAgICBiaXMuYXZhaWxh
YmxlKCk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0g
Z2V0UmVhZGVyKEZpbGVJbnB1dFN0cmVhbSBzdHJlYW0pIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4i
ICsKKwkJCSIgICAgICAgIHJldHVybiBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShzdHJlYW0pO1xu
IiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIi0tLS0tLS0tLS1cbiIgKyAK
KwkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA4KVxuIiArIAorCQkiCUJ1ZmZlcmVkSW5w
dXRTdHJlYW0gYmlzID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oc3RyZWFtKTsgLy8gbmV2ZXIg
c2luY2UgcmVhc3NpZ25lZFxuIiArIAorCQkiCSAgICAgICAgICAgICAgICAgICAgXl5eXG4iICsg
CisJCSJSZXNvdXJjZSBsZWFrOiBcJ2Jpc1wnIGlzIG5ldmVyIGNsb3NlZFxuIiArIAorCQkiLS0t
LS0tLS0tLVxuIiArIAorCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDkpXG4iICsgCisJ
CSIJRmlsZUlucHV0U3RyZWFtIHN0cmVhbTIgPSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpOyAv
LyB1bnN1cmUgc2luY2UgcGFzc2VkIHRvIG1ldGhvZFxuIiArIAorCQkiCSAgICAgICAgICAgICAg
ICBeXl5eXl5eXG4iICsgCisJCSJQb3RlbnRpYWwgcmVzb3VyY2UgbGVhazogXCdzdHJlYW0yXCcg
bWF5IG5vdCBiZSBjbG9zZWRcbiIgKyAKKwkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJIjMuIEVSUk9S
IGluIFguamF2YSAoYXQgbGluZSAxMClcbiIgKyAKKwkJIgliaXMgPSBnZXRSZWFkZXIoc3RyZWFt
Mik7IC8vIHVuc3VyZSBzaW5jZSBvYnRhaW5lZCBmcm9tIG1ldGhvZFxuIiArIAorCQkiCV5eXl5e
Xl5eXl5eXl5eXl5eXl5eXl5eXlxuIiArIAorCQkiUG90ZW50aWFsIHJlc291cmNlIGxlYWs6IFwn
YmlzXCcgbWF5IG5vdCBiZSBjbG9zZWRcbiIgKyAKKwkJIi0tLS0tLS0tLS1cbiIsCisJCW51bGws
CisJCXRydWUsCisJCW9wdGlvbnMpOworfQorLy8gQnVnIDM2MjMzMiAtIE9ubHkgcmVwb3J0IHBv
dGVudGlhbCBsZWFrIHdoZW4gY2xvc2VhYmxlIG5vdCBjcmVhdGVkIGluIHRoZSBsb2NhbCBzY29w
ZQorLy8gYSB3cmFwcGVyIGlzIG9idGFpbmVkIGZyb20gYSBmaWVsZCByZWFkCitwdWJsaWMgdm9p
ZCB0ZXN0MDYzYigpIHRocm93cyBJT0V4Y2VwdGlvbiB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21w
aWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9y
dFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0
KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJs
ZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQluZXcg
U3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZUlucHV0U3Ry
ZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uQnVmZmVyZWRJbnB1dFN0cmVhbTtcbiIgKwor
CQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgg
e1xuIiArCisJCQkiICAgIEZpbGVJbnB1dFN0cmVhbSBzdHJlYW07XG4iICsKKwkJCSIgICAgdm9p
ZCByZWFkKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmlsZUlucHV0
U3RyZWFtIHMgPSB0aGlzLnN0cmVhbTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0
cmVhbSBiaXMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShzKTsgLy8gZG9uJ3QgY29tcGxhaW4g
c2luY2UgcyBpcyBvYnRhaW5lZCBmcm9tIGEgZmllbGRcbiIgKworCQkJIiAgICAgICAgYmlzLmF2
YWlsYWJsZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIiIsCisJ
CW51bGwsCisJCXRydWUsCisJCW51bGwsCisJCW9wdGlvbnMsCisJCW51bGwpOworfQorLy8gQnVn
IDM2MjMzMiAtIE9ubHkgcmVwb3J0IHBvdGVudGlhbCBsZWFrIHdoZW4gY2xvc2VhYmxlIG5vdCBj
cmVhdGVkIGluIHRoZSBsb2NhbCBzY29wZQorLy8gYSB3cmFwcGVyIGlzIGFzc2lnbmVkIHRvIGEg
ZmllbGQKK3B1YmxpYyB2b2lkIHRlc3QwNjNjKCkgdGhyb3dzIElPRXhjZXB0aW9uIHsKKwlNYXAg
b3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0
aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJP
Uik7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxs
eVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVuQ29u
Zm9ybVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2
YS5pby5GaWxlSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJlZElu
cHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJ
CSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBzdHJl
YW07XG4iICsKKwkJCSIgICAgdm9pZCByZWFkKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwor
CQkJIiAgICAgICAgRmlsZUlucHV0U3RyZWFtIHMgPSBuZXcgRmlsZUlucHV0U3RyZWFtKFwic29t
ZWZpbGVcIik7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzID0gbmV3
IEJ1ZmZlcmVkSW5wdXRTdHJlYW0ocyk7XG4iICsKKwkJCSIgICAgICAgIHRoaXMuc3RyZWFtID0g
YmlzO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIiIsCisJCW51bGws
CisJCXRydWUsCisJCW51bGwsCisJCW9wdGlvbnMsCisJCW51bGwpOworfQogcHVibGljIHN0YXRp
YyBDbGFzcyB0ZXN0Q2xhc3MoKSB7CiAJcmV0dXJuIFRyeVdpdGhSZXNvdXJjZXNTdGF0ZW1lbnRU
ZXN0LmNsYXNzOwogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9BbGxvY2F0aW9uRXhwcmVzc2lv
bi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2FzdC9BbGxvY2F0aW9uRXhwcmVzc2lvbi5qYXZhCmluZGV4IGU4MTFl
YTkuLjcxMjE3Y2UgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQWxsb2NhdGlvbkV4cHJlc3Npb24u
amF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXN0L0FsbG9jYXRpb25FeHByZXNzaW9uLmphdmEKQEAgLTEsNSAr
MSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAy
MDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAy
MDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4g
VGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUg
YXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2
MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWls
YWJsZSBhdApAQCAtMTIsNiArMTIsNyBAQAogICogICAgIAkJCQkJCWJ1ZyAzMTkyMDEgLSBbbnVs
bF0gbm8gd2FybmluZyB3aGVuIHVuYm94aW5nIFNpbmdsZU5hbWVSZWZlcmVuY2UgY2F1c2VzIE5Q
RQogICogICAgIAkJCQkJCWJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2lu
ZyB0cnktd2l0aC1yZXNvdXJjZXMKICAqIAkJCQkJCQlidWcgMTg2MzQyIC0gW2NvbXBpbGVyXVtu
dWxsXSBVc2luZyBhbm5vdGF0aW9ucyBmb3IgbnVsbCBjaGVja2luZworICoJCQkJCQkJYnVnIDM1
ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5p
bmdzCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmFzdDsKIApAQCAtMzcsNiArMzgsOCBAQAogCXByb3RlY3RlZCBUeXBl
QmluZGluZyB0eXBlRXhwZWN0ZWQ7CSAgLy8gZm9yIDw+IGluZmVyZW5jZQogCXB1YmxpYyBib29s
ZWFuIGluZmVycmVkUmV0dXJuVHlwZTsKIAorCXB1YmxpYyBGYWtlZFRyYWNraW5nVmFyaWFibGUg
Y2xvc2VUcmFja2VyOwkvLyB3aGVuIGFsbG9jYXRpb24gYSBDbG9zZWFibGUgc3RvcmUgYSBwcmUt
bGltaW5hcnkgdHJhY2tpbmcgdmFyaWFibGUgaGVyZQorCiBwdWJsaWMgRmxvd0luZm8gYW5hbHlz
ZUNvZGUoQmxvY2tTY29wZSBjdXJyZW50U2NvcGUsIEZsb3dDb250ZXh0IGZsb3dDb250ZXh0LCBG
bG93SW5mbyBmbG93SW5mbykgewogCS8vIGNoZWNrIGNhcHR1cmVkIHZhcmlhYmxlcyBhcmUgaW5p
dGlhbGl6ZWQgaW4gY3VycmVudCBjb250ZXh0ICgyNjEzNCkKIAljaGVja0NhcHR1cmVkTG9jYWxJ
bml0aWFsaXphdGlvbklmTmVjZXNzYXJ5KChSZWZlcmVuY2VCaW5kaW5nKXRoaXMuYmluZGluZy5k
ZWNsYXJpbmdDbGFzcy5lcmFzdXJlKCksIGN1cnJlbnRTY29wZSwgZmxvd0luZm8pOwpAQCAtNDQs
MTggKzQ3LDIyIEBACiAJLy8gcHJvY2VzcyBhcmd1bWVudHMKIAlpZiAodGhpcy5hcmd1bWVudHMg
IT0gbnVsbCkgewogCQlmb3IgKGludCBpID0gMCwgY291bnQgPSB0aGlzLmFyZ3VtZW50cy5sZW5n
dGg7IGkgPCBjb3VudDsgaSsrKSB7Ci0JCQkvLyBpZiBhcmd1bWVudCBpcyBhbiBBdXRvQ2xvc2Vh
YmxlIGluc2VydCBpbmZvIHRoYXQgaXQgKm1heSogYmUgY2xvc2VkIChieSB0aGUgdGFyZ2V0IG1l
dGhvZCwgaS5lLikKLQkJCWZsb3dJbmZvID0gRmFrZWRUcmFja2luZ1ZhcmlhYmxlLm1hcmtQYXNz
ZWRUb091dHNpZGUoY3VycmVudFNjb3BlLCB0aGlzLmFyZ3VtZW50c1tpXSwgZmxvd0luZm8pOwog
CQkJZmxvd0luZm8gPQogCQkJCXRoaXMuYXJndW1lbnRzW2ldCiAJCQkJCS5hbmFseXNlQ29kZShj
dXJyZW50U2NvcGUsIGZsb3dDb250ZXh0LCBmbG93SW5mbykKIAkJCQkJLnVuY29uZGl0aW9uYWxJ
bml0cygpOworCQkJLy8gaWYgYXJndW1lbnQgaXMgYW4gQXV0b0Nsb3NlYWJsZSBpbnNlcnQgaW5m
byB0aGF0IGl0ICptYXkqIGJlIGNsb3NlZCAoYnkgdGhlIHRhcmdldCBtZXRob2QsIGkuZS4pCisJ
CQlmbG93SW5mbyA9IEZha2VkVHJhY2tpbmdWYXJpYWJsZS5tYXJrUGFzc2VkVG9PdXRzaWRlKGN1
cnJlbnRTY29wZSwgdGhpcy5hcmd1bWVudHNbaV0sIGZsb3dJbmZvLCB0aGlzLnJlc29sdmVkVHlw
ZSk7CiAJCQlpZiAoKHRoaXMuYXJndW1lbnRzW2ldLmltcGxpY2l0Q29udmVyc2lvbiAmIFR5cGVJ
ZHMuVU5CT1hJTkcpICE9IDApIHsKIAkJCQl0aGlzLmFyZ3VtZW50c1tpXS5jaGVja05QRShjdXJy
ZW50U2NvcGUsIGZsb3dDb250ZXh0LCBmbG93SW5mbyk7CiAJCQl9CiAJCX0KIAkJYW5hbHlzZUFy
Z3VtZW50cyhjdXJyZW50U2NvcGUsIGZsb3dDb250ZXh0LCBmbG93SW5mbywgdGhpcy5iaW5kaW5n
LCB0aGlzLmFyZ3VtZW50cyk7CiAJfQorCisJaWYgKEZha2VkVHJhY2tpbmdWYXJpYWJsZS5pc0F1
dG9DbG9zZWFibGUodGhpcy5yZXNvbHZlZFR5cGUpKQorCQlGYWtlZFRyYWNraW5nVmFyaWFibGUu
YW5hbHlzZUNsb3NlYWJsZUFsbG9jYXRpb24oY3VycmVudFNjb3BlLCBmbG93SW5mbywgdGhpcyk7
CisKIAkvLyByZWNvcmQgc29tZSBkZXBlbmRlbmN5IGluZm9ybWF0aW9uIGZvciBleGNlcHRpb24g
dHlwZXMKIAlSZWZlcmVuY2VCaW5kaW5nW10gdGhyb3duRXhjZXB0aW9uczsKIAlpZiAoKCh0aHJv
d25FeGNlcHRpb25zID0gdGhpcy5iaW5kaW5nLnRocm93bkV4Y2VwdGlvbnMpLmxlbmd0aCkgIT0g
MCkgewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Bc3NpZ25tZW50LmphdmEgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0
L0Fzc2lnbm1lbnQuamF2YQppbmRleCA5NzBmYzI0Li41MzlhNjYxIDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L0Fzc2lnbm1lbnQuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Fzc2lnbm1lbnQuamF2YQpA
QCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMp
IDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMp
IDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJl
c2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBh
cmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBM
aWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQg
aXMgYXZhaWxhYmxlIGF0CkBAIC0xNCw2ICsxNCw3IEBACiAgKiAgICAgCQkJCQkJYnVnIDMzNTA5
MyAtIFtjb21waWxlcl1bbnVsbF0gbWluaW1hbCBob29rIGZvciBmdXR1cmUgbnVsbCBhbm5vdGF0
aW9uIHN1cHBvcnQKICAqICAgICAJCQkJCQlidWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcg
Zm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCiAgKgkJCQkJCQlidWcgMTg2MzQyIC0gW2Nv
bXBpbGVyXVtudWxsXSBVc2luZyBhbm5vdGF0aW9ucyBmb3IgbnVsbCBjaGVja2luZworICoJCQkJ
CQkJYnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBs
ZWFrIHdhcm5pbmdzCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdDsKIApAQCAtNDYsMTkgKzQ3LDI3IEBACiAJaWYg
KCh0aGlzLmV4cHJlc3Npb24uaW1wbGljaXRDb252ZXJzaW9uICYgVHlwZUlkcy5VTkJPWElORykg
IT0gMCkgewogCQl0aGlzLmV4cHJlc3Npb24uY2hlY2tOUEUoY3VycmVudFNjb3BlLCBmbG93Q29u
dGV4dCwgZmxvd0luZm8pOwogCX0KKwkKKwlGbG93SW5mbyBwcmVJbml0SW5mbyA9IG51bGw7CisJ
Ym9vbGVhbiBzaG91bGRBbmFseXNlUmVzb3VyY2UgPSBsb2NhbCAhPSBudWxsIAorCQkJJiYgZmxv
d0luZm8ucmVhY2hNb2RlKCkgPT0gRmxvd0luZm8uUkVBQ0hBQkxFIAorCQkJJiYgKEZha2VkVHJh
Y2tpbmdWYXJpYWJsZS5pc0F1dG9DbG9zZWFibGUodGhpcy5leHByZXNzaW9uLnJlc29sdmVkVHlw
ZSkKKwkJCQkJfHwgdGhpcy5leHByZXNzaW9uLnJlc29sdmVkVHlwZSA9PSBUeXBlQmluZGluZy5O
VUxMKTsKKwlpZiAoc2hvdWxkQW5hbHlzZVJlc291cmNlKSB7CisJCXByZUluaXRJbmZvID0gZmxv
d0luZm8udW5jb25kaXRpb25hbENvcHkoKTsKKwkJLy8gYW5hbHlzaXMgb2YgcmVzb3VyY2UgbGVh
a3MgbmVlZHMgYWRkaXRpb25hbCBjb250ZXh0IHdoaWxlIGFuYWx5emluZyB0aGUgUkhTOgorCQlG
YWtlZFRyYWNraW5nVmFyaWFibGUucHJlQ29ubmVjdFRyYWNrZXJBY3Jvc3NBc3NpZ25tZW50KHRo
aXMsIGxvY2FsLCB0aGlzLmV4cHJlc3Npb24pOworCX0KKwkKIAlmbG93SW5mbyA9ICgoUmVmZXJl
bmNlKSB0aGlzLmxocykKIAkJLmFuYWx5c2VBc3NpZ25tZW50KGN1cnJlbnRTY29wZSwgZmxvd0Nv
bnRleHQsIGZsb3dJbmZvLCB0aGlzLCBmYWxzZSkKIAkJLnVuY29uZGl0aW9uYWxJbml0cygpOwot
CWlmIChsb2NhbCAhPSBudWxsKSB7Ci0JCUxvY2FsVmFyaWFibGVCaW5kaW5nIHByZXZpb3VzVHJh
Y2tlckJpbmRpbmcgPSBudWxsOwotCQlpZiAobG9jYWwuY2xvc2VUcmFja2VyICE9IG51bGwpIHsK
LQkJCS8vIEFzc2lnbmluZyB0byBhIHZhcmlhYmxlIGFscmVhZHkgaG9sZGluZyBhbiBBdXRvQ2xv
c2VhYmxlLCBoYXMgaXQgYmVlbiBjbG9zZWQgYmVmb3JlPwotCQkJcHJldmlvdXNUcmFja2VyQmlu
ZGluZyA9IGxvY2FsLmNsb3NlVHJhY2tlci5iaW5kaW5nOwotCQkJaWYgKCFmbG93SW5mby5pc0Rl
ZmluaXRlbHlOdWxsKGxvY2FsKSkgLy8gb25seSBpZiBwcmV2aW91cyB2YWx1ZSBtYXkgYmUgbm9u
LW51bGwKLQkJCQlsb2NhbC5jbG9zZVRyYWNrZXIucmVjb3JkRXJyb3JMb2NhdGlvbih0aGlzLCBm
bG93SW5mby5udWxsU3RhdHVzKHByZXZpb3VzVHJhY2tlckJpbmRpbmcpKTsKLQkJfQotCQlGYWtl
ZFRyYWNraW5nVmFyaWFibGUuaGFuZGxlUmVzb3VyY2VBc3NpZ25tZW50KGZsb3dJbmZvLCB0aGlz
LCB0aGlzLmV4cHJlc3Npb24sIGxvY2FsLCBwcmV2aW91c1RyYWNrZXJCaW5kaW5nKTsKLQl9CisK
KwlpZiAoc2hvdWxkQW5hbHlzZVJlc291cmNlKQorCQlGYWtlZFRyYWNraW5nVmFyaWFibGUuaGFu
ZGxlUmVzb3VyY2VBc3NpZ25tZW50KHByZUluaXRJbmZvLCBmbG93SW5mbywgdGhpcywgdGhpcy5l
eHByZXNzaW9uLCBsb2NhbCk7CisJZWxzZQorCQlGYWtlZFRyYWNraW5nVmFyaWFibGUuY2xlYW5V
cEFmdGVyQXNzaWdubWVudChjdXJyZW50U2NvcGUsIHRoaXMubGhzLmJpdHMsIHRoaXMuZXhwcmVz
c2lvbik7CisKIAlpbnQgbnVsbFN0YXR1cyA9IHRoaXMuZXhwcmVzc2lvbi5udWxsU3RhdHVzKGZs
b3dJbmZvKTsKIAlpZiAobG9jYWwgIT0gbnVsbCAmJiAobG9jYWwudHlwZS50YWdCaXRzICYgVGFn
Qml0cy5Jc0Jhc2VUeXBlKSA9PSAwKSB7CiAJCWlmIChudWxsU3RhdHVzID09IEZsb3dJbmZvLk5V
TEwpIHsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvRmFrZWRUcmFja2luZ1ZhcmlhYmxlLmphdmEg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvYXN0L0Zha2VkVHJhY2tpbmdWYXJpYWJsZS5qYXZhCmluZGV4IGVlMTMwNDcuLmIz
NWE2N2MgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvRmFrZWRUcmFja2luZ1ZhcmlhYmxlLmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2FzdC9GYWtlZFRyYWNraW5nVmFyaWFibGUuamF2YQpAQCAtMSw1ICsxLDUg
QEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMTEgR0sgU29m
dHdhcmUgQUcgYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAxMSwgMjAxMiBHSyBTb2Z0
d2FyZSBBRyBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFt
IGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVu
ZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGlj
aCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAt
MTUsNyArMTUsNiBAQAogaW1wb3J0IGphdmEudXRpbC5NYXA7CiBpbXBvcnQgamF2YS51dGlsLk1h
cC5FbnRyeTsKIAotaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLkNoYXJPcGVy
YXRpb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNvZGVnZW4u
Q29kZVN0cmVhbTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuZmxv
dy5GbG93Q29udGV4dDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
Zmxvdy5GbG93SW5mbzsKQEAgLTQ4LDIwICs0NywyOCBAQAogCXByaXZhdGUgc3RhdGljIGZpbmFs
IGludCBDTE9TRURfSU5fTkVTVEVEX01FVEhPRCA9IDQ7CiAJLy8gYSBsb2NhdGlvbiBpbmRlcGVu
ZGVudCBpc3N1ZSBoYXMgYmVlbiByZXBvcnRlZCBhbHJlYWR5IGFnYWluc3QgdGhpcyByZXNvdXJj
ZToKIAlwcml2YXRlIHN0YXRpYyBmaW5hbCBpbnQgUkVQT1JURUQgPSA4OwotCQorCS8vIGEgcmVz
b3VyY2UgaXMgd3JhcHBlZCBpbiBhbm90aGVyIHJlc291cmNlOgorCXByaXZhdGUgc3RhdGljIGZp
bmFsIGludCBXUkFQUEVEID0gMTY7CisKKwlwcml2YXRlIHN0YXRpYyBmaW5hbCBpbnQgRE9VQlRf
TUFTSyA9IENMT1NFX1NFRU4gfCBQQVNTRURfVE9fT1VUU0lERSB8IENMT1NFRF9JTl9ORVNURURf
TUVUSE9EIHwgUkVQT1JURUQ7IC8vIG5vdCBXUkFQUEVECisKIAkvKioKLQkgKiBCaXRzZXQgb2Yg
e0BsaW5rICNDTE9TRV9TRUVOfSwge0BsaW5rICNQQVNTRURfVE9fT1VUU0lERX0sIHtAbGluayAj
Q0xPU0VEX0lOX05FU1RFRF9NRVRIT0R9IGFuZCB7QGxpbmsgI1JFUE9SVEVEfS4KKwkgKiBCaXRz
ZXQgb2Yge0BsaW5rICNDTE9TRV9TRUVOfSwge0BsaW5rICNQQVNTRURfVE9fT1VUU0lERX0sIHtA
bGluayAjQ0xPU0VEX0lOX05FU1RFRF9NRVRIT0R9LCB7QGxpbmsgI1JFUE9SVEVEfSBhbmQge0Bs
aW5rICNXUkFQUEVEfS4KIAkgKi8KIAlwcml2YXRlIGludCBnbG9iYWxDbG9zaW5nU3RhdGUgPSAw
OwogCisJcHVibGljIExvY2FsVmFyaWFibGVCaW5kaW5nIG9yaWdpbmFsQmluZGluZzsgLy8gdGhl
IHJlYWwgbG9jYWwgYmVpbmcgdHJhY2tlZCwgY2FuIGJlIG51bGwgZm9yIHByZWxpbWluYXJ5IHRy
YWNrIHZhcnMgZm9yIGFsbG9jYXRpb24gZXhwcmVzc2lvbnMKKwkKKwlwdWJsaWMgRmFrZWRUcmFj
a2luZ1ZhcmlhYmxlIGlubmVyVHJhY2tlcjsgLy8gY2hhaW5lZCB0cmFja2luZyB2YXJpYWJsZSBv
ZiBhIGNoYWluZWQgKHdyYXBwZWQpIHJlc291cmNlCisKIAlNZXRob2RTY29wZSBtZXRob2RTY29w
ZTsgLy8gZGVzaWduYXRlcyB0aGUgbWV0aG9kIGRlY2xhcmluZyB0aGlzIHZhcmlhYmxlCi0JCi0J
cHVibGljIExvY2FsVmFyaWFibGVCaW5kaW5nIG9yaWdpbmFsQmluZGluZzsgLy8gdGhlIHJlYWwg
bG9jYWwgYmVpbmcgdHJhY2tlZAotCQotCUhhc2hNYXAgcmVjb3JkZWRMb2NhdGlvbnM7IC8vIGlu
aXRpYWxseSBudWxsLCBBU1ROb2RlIC0+IEludGVnZXIgCiAKKwlwcml2YXRlIEhhc2hNYXAgcmVj
b3JkZWRMb2NhdGlvbnM7IC8vIGluaXRpYWxseSBudWxsLCBBU1ROb2RlIC0+IEludGVnZXIKIAot
CXB1YmxpYyBGYWtlZFRyYWNraW5nVmFyaWFibGUoTG9jYWxWYXJpYWJsZUJpbmRpbmcgb3JpZ2lu
YWwsIFN0YXRlbWVudCBsb2NhdGlvbikgeworCS8vIHRlbXBvcmFyeSBzdG9yYWdlIHdoaWxlIGFu
YWx5emluZyAicmVzID0gbmV3IFJlcygpOyI6CisJcHJpdmF0ZSBBU1ROb2RlIGN1cnJlbnRBc3Np
Z25tZW50OyAvLyB0ZW1wb3JhcmlseSBzdG9yZSB0aGUgYXNzaWdubWVudCBhcyB0aGUgbG9jYXRp
b24gZm9yIGVycm9yIHJlcG9ydGluZworCisJcHVibGljIEZha2VkVHJhY2tpbmdWYXJpYWJsZShM
b2NhbFZhcmlhYmxlQmluZGluZyBvcmlnaW5hbCwgQVNUTm9kZSBsb2NhdGlvbikgewogCQlzdXBl
cihvcmlnaW5hbC5uYW1lLCBsb2NhdGlvbi5zb3VyY2VTdGFydCwgbG9jYXRpb24uc291cmNlRW5k
KTsKIAkJdGhpcy50eXBlID0gbmV3IFNpbmdsZVR5cGVSZWZlcmVuY2UoCiAJCQkJVHlwZUNvbnN0
YW50cy5PQkpFQ1QsCkBAIC02OSw2ICs3NiwxNyBAQAogCQl0aGlzLm1ldGhvZFNjb3BlID0gb3Jp
Z2luYWwuZGVjbGFyaW5nU2NvcGUubWV0aG9kU2NvcGUoKTsKIAkJdGhpcy5vcmlnaW5hbEJpbmRp
bmcgPSBvcmlnaW5hbDsKIAkJcmVzb2x2ZShvcmlnaW5hbC5kZWNsYXJpbmdTY29wZSk7CisJfQor
CisJLyogQ3JlYXRlIGFuIHVuYXNzaWduZWQgdHJhY2tpbmcgdmFyaWFibGUgd2hpbGUgYW5hbHl6
aW5nIGFuIGFsbG9jYXRpb24gZXhwcmVzc2lvbjogKi8KKwlwcml2YXRlIEZha2VkVHJhY2tpbmdW
YXJpYWJsZShCbG9ja1Njb3BlIHNjb3BlLCBBU1ROb2RlIGxvY2F0aW9uKSB7CisJCXN1cGVyKCI8
dW5hc3NpZ25lZCBDbG9zZWFibGUgdmFsdWU+Ii50b0NoYXJBcnJheSgpLCBsb2NhdGlvbi5zb3Vy
Y2VTdGFydCwgbG9jYXRpb24uc291cmNlRW5kKTsgLy8kTk9OLU5MUy0xJAorCQl0aGlzLnR5cGUg
PSBuZXcgU2luZ2xlVHlwZVJlZmVyZW5jZSgKKwkJCQlUeXBlQ29uc3RhbnRzLk9CSkVDVCwKKwkJ
CQkoKGxvbmcpdGhpcy5zb3VyY2VTdGFydCA8PDMyKSt0aGlzLnNvdXJjZUVuZCk7CisJCXRoaXMu
bWV0aG9kU2NvcGUgPSBzY29wZS5tZXRob2RTY29wZSgpOworCQl0aGlzLm9yaWdpbmFsQmluZGlu
ZyA9IG51bGw7CisJCXJlc29sdmUoc2NvcGUpOwogCX0KIAkKIAlwdWJsaWMgdm9pZCBnZW5lcmF0
ZUNvZGUoQmxvY2tTY29wZSBjdXJyZW50U2NvcGUsIENvZGVTdHJlYW0gY29kZVN0cmVhbSkKQEAg
LTg4LDggKzEwNiwxMiBAQAogCX0KIAogCS8qKgotCSAqIElmIGV4cHJlc3Npb24gcmVzb2x2ZXMg
dG8gYSBsb2NhbCB2YXJpYWJsZSBiaW5kaW5nIG9mIHR5cGUgQXV0b0Nsb3NlYWJsZSwKLQkgKiBh
bnN3ZXIgdGhlIHZhcmlhYmxlIHRoYXQgdHJhY2tzIGNsb3Npbmcgb2YgdGhhdCBsb2NhbCwgY3Jl
YXRpbmcgaXQgaWYgbmVlZGVkLgorCSAqIElmIGV4cHJlc3Npb24gcmVzb2x2ZXMgdG8gYSB2YWx1
ZSBvZiB0eXBlIEF1dG9DbG9zZWFibGUgYW5zd2VyIHRoZSB2YXJpYWJsZSB0aGF0IHRyYWNrcyBj
bG9zaW5nIG9mIHRoYXQgbG9jYWwuCisJICogQ292ZXJzIHR3byBjYXNlczoKKwkgKiA8dWw+CisJ
ICogPGxpPnZhbHVlIGlzIGEgbG9jYWwgdmFyaWFibGUgcmVmZXJlbmNlLCBjcmVhdGUgdHJhY2tp
bmcgdmFyaWFibGUgaXQgaWYgbmVlZGVkLgorCSAqIDxsaT52YWx1ZSBpcyBhbiBhbGxvY2F0aW9u
IGV4cHJlc3Npb24sIHJldHVybiBhIHByZWxpbWluYXJ5IHRyYWNraW5nIHZhcmlhYmxlIGlmIHNl
dC4KKwkgKiA8L3VsPgogCSAqIEBwYXJhbSBleHByZXNzaW9uCiAJICogQHJldHVybiBhIG5ldyB7
QGxpbmsgRmFrZWRUcmFja2luZ1ZhcmlhYmxlfSBvciBudWxsLgogCSAqLwpAQCAtMTA3LDUxICsx
MjksMjU4IEBACiAJCQkJU3RhdGVtZW50IGxvY2F0aW9uID0gbG9jYWwuZGVjbGFyYXRpb247CiAJ
CQkJcmV0dXJuIGxvY2FsLmNsb3NlVHJhY2tlciA9IG5ldyBGYWtlZFRyYWNraW5nVmFyaWFibGUo
bG9jYWwsIGxvY2F0aW9uKTsKIAkJCX0KLQkJfQorCQl9IGVsc2UgaWYgKGV4cHJlc3Npb24gaW5z
dGFuY2VvZiBBbGxvY2F0aW9uRXhwcmVzc2lvbikgeworCQkJLy8gcmV0dXJuIGFueSBwcmVsaW1p
bmFyeSB0cmFja2luZyB2YXJpYWJsZSBmcm9tIGFuYWx5c2VDbG9zZWFibGVBbGxvY2F0aW9uIAor
CQkJcmV0dXJuICgoQWxsb2NhdGlvbkV4cHJlc3Npb24pIGV4cHJlc3Npb24pLmNsb3NlVHJhY2tl
cjsKKwkJfQkJCiAJCXJldHVybiBudWxsOwogCX0KIAotCS8qKiBpZiAnaW52b2NhdGlvblNpdGUn
IGlzIGEgY2FsbCB0byBjbG9zZSgpIHRoYXQgaGFzIGEgcmVnaXN0ZXJlZCB0cmFja2luZyB2YXJp
YWJsZSwgYW5zd2VyIHRoYXQgdmFyaWFibGUncyBiaW5kaW5nLiAqLwotCXB1YmxpYyBzdGF0aWMg
TG9jYWxWYXJpYWJsZUJpbmRpbmcgZ2V0VHJhY2tlckZvckNsb3NlQ2FsbChBU1ROb2RlIGludm9j
YXRpb25TaXRlKSB7Ci0JCWlmIChpbnZvY2F0aW9uU2l0ZSBpbnN0YW5jZW9mIE1lc3NhZ2VTZW5k
KSB7Ci0JCQlNZXNzYWdlU2VuZCBzZW5kID0gKE1lc3NhZ2VTZW5kKSBpbnZvY2F0aW9uU2l0ZTsK
LQkJCWlmIChDaGFyT3BlcmF0aW9uLmVxdWFscyhUeXBlQ29uc3RhbnRzLkNMT1NFLCBzZW5kLnNl
bGVjdG9yKSAmJiBzZW5kLnJlY2VpdmVyIGluc3RhbmNlb2YgU2luZ2xlTmFtZVJlZmVyZW5jZSkg
ewotCQkJCUJpbmRpbmcgcmVjZWl2ZXJCaW5kaW5nID0gKChTaW5nbGVOYW1lUmVmZXJlbmNlKXNl
bmQucmVjZWl2ZXIpLmJpbmRpbmc7Ci0JCQkJaWYgKHJlY2VpdmVyQmluZGluZyBpbnN0YW5jZW9m
IExvY2FsVmFyaWFibGVCaW5kaW5nKSB7Ci0JCQkJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSB0cmFj
a2luZ1ZhcmlhYmxlID0gKChMb2NhbFZhcmlhYmxlQmluZGluZylyZWNlaXZlckJpbmRpbmcpLmNs
b3NlVHJhY2tlcjsKLQkJCQkJaWYgKHRyYWNraW5nVmFyaWFibGUgIT0gbnVsbCkKLQkJCQkJCXJl
dHVybiB0cmFja2luZ1ZhcmlhYmxlLmJpbmRpbmc7Ci0JCQkJfQorCS8qKgorCSAqIEJlZm9yZSBh
bmFseXppbmcgYW4gYXNzaWdubWVudCBvZiB0aGlzIHNoYXBlOiA8Y29kZT5zaW5nbGVOYW1lID0g
bmV3IEFsbG9jYXRpb24oKTwvY29kZT4KKwkgKiBjb25uZWN0IGFueSB0cmFja2luZyB2YXJpYWJs
ZSBvZiB0aGUgTEhTIHdpdGggdGhlIGFsbG9jYXRpb24gb24gdGhlIFJIUy4KKwkgKiBBbHNvIHRo
ZSBhc3NpZ25tZW50IGlzIHRlbXBvcmFyaWx5IHN0b3JlZCBpbiB0aGUgdHJhY2tpbmcgdmFyaWFi
bGUgaW4gY2FzZSB3ZSBuZWVkIHRvCisJICogcmVwb3J0IGVycm9ycyBiZWNhdXNlIHRoZSBhc3Np
Z25tZW50IGxlYXZlcyB0aGUgb2xkIExIUyB2YWx1ZSB1bmNsb3NlZC4KKwkgKiBJbiB0aGlzIGNh
c2UgdGhlIGFzc2lnbm1lbnQgc2hvdWxkIGJlIHVzZWQgYXMgdGhlIGVycm9yIGxvY2F0aW9uLgor
CSAqIAorCSAqIEBwYXJhbSBsb2NhdGlvbiB0aGUgYXNzaWdubWVudC9sb2NhbCBkZWNsYXJhdGlv
biBiZWluZyBhbmFseXplZAorCSAqIEBwYXJhbSBsb2NhbCB0aGUgbG9jYWwgdmFyaWFibGUgYmVp
bmcgYXNzaWduZWQgdG8KKwkgKiBAcGFyYW0gcmhzIHRoZSByaHMgb2YgdGhlIGFzc2lnbm1lbnQg
cmVzcC4gdGhlIGluaXRpYWxpemF0aW9uIG9mIHRoZSBsb2NhbCB2YXJpYWJsZSBkZWNsYXJhdGlv
bi4KKwkgKi8KKwlwdWJsaWMgc3RhdGljIHZvaWQgcHJlQ29ubmVjdFRyYWNrZXJBY3Jvc3NBc3Np
Z25tZW50KEFTVE5vZGUgbG9jYXRpb24sIExvY2FsVmFyaWFibGVCaW5kaW5nIGxvY2FsLCBFeHBy
ZXNzaW9uIHJocykgeworCQlGYWtlZFRyYWNraW5nVmFyaWFibGUgY2xvc2VUcmFja2VyID0gbnVs
bDsKKwkJaWYgKHJocyBpbnN0YW5jZW9mIEFsbG9jYXRpb25FeHByZXNzaW9uKSB7CisJCQljbG9z
ZVRyYWNrZXIgPSBsb2NhbC5jbG9zZVRyYWNrZXI7CisJCQlpZiAoY2xvc2VUcmFja2VyID09IG51
bGwpIHsKKwkJCQlpZiAoaXNBdXRvQ2xvc2VhYmxlKHJocy5yZXNvbHZlZFR5cGUpKSB7CisJCQkJ
CWNsb3NlVHJhY2tlciA9IG5ldyBGYWtlZFRyYWNraW5nVmFyaWFibGUobG9jYWwsIGxvY2F0aW9u
KTsKKwkJCQl9CQkJCQkKKwkJCX0KKwkJCWlmIChjbG9zZVRyYWNrZXIgIT0gbnVsbCkgeworCQkJ
CWNsb3NlVHJhY2tlci5jdXJyZW50QXNzaWdubWVudCA9IGxvY2F0aW9uOworCQkJCSgoQWxsb2Nh
dGlvbkV4cHJlc3Npb24pcmhzKS5jbG9zZVRyYWNrZXIgPSBjbG9zZVRyYWNrZXI7CiAJCQl9CiAJ
CX0KLQkJcmV0dXJuIG51bGw7CisJfQorCisJLyoqIAorCSAqIENvbXB1dGUvYXNzaWduIGEgdHJh
Y2tpbmcgdmFyaWFibGUgZm9yIGEgZnJlc2hseSBhbGxvY2F0ZWQgY2xvc2VhYmxlIHZhbHVlLCB1
c2luZyBpbmZvcm1hdGlvbiBmcm9tIG91ciB3aGl0ZSBsaXN0cy4KKwkgKiBTZWUgIEJ1ZyAzNTg5
MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5n
cyAKKwkgKi8KKwlwdWJsaWMgc3RhdGljIHZvaWQgYW5hbHlzZUNsb3NlYWJsZUFsbG9jYXRpb24o
QmxvY2tTY29wZSBzY29wZSwgRmxvd0luZm8gZmxvd0luZm8sIEFsbG9jYXRpb25FeHByZXNzaW9u
IGFsbG9jYXRpb24pIHsKKwkJLy8gY2xpZW50IGhhcyBjaGVja2VkIHRoYXQgdGhlIHJlc29sdmVk
VHlwZSBpcyBhbiBBdXRvQ2xvc2VhYmxlLCBoZW5jZSB0aGUgZm9sbG93aW5nIGNhc3QgaXMgc2Fm
ZToKKwkJaWYgKCgoUmVmZXJlbmNlQmluZGluZylhbGxvY2F0aW9uLnJlc29sdmVkVHlwZSkuaGFz
VHlwZUJpdChUeXBlSWRzLkJpdFJlc291cmNlRnJlZUNsb3NlYWJsZSkpIHsKKwkJCS8vIHJlbW92
ZSB1bm5lY2Vzc2FyeSBhdHRlbXB0cyAoY2xvc2VhYmxlIGlzIG5vdCByZWxldmFudCkKKwkJCWlm
IChhbGxvY2F0aW9uLmNsb3NlVHJhY2tlciAhPSBudWxsKSB7CisJCQkJc2NvcGUucmVtb3ZlVHJh
Y2tpbmdWYXIoYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIpOworCQkJCWFsbG9jYXRpb24uY2xvc2VU
cmFja2VyID0gbnVsbDsKKwkJCX0KKwkJfSBlbHNlIGlmICgoKFJlZmVyZW5jZUJpbmRpbmcpYWxs
b2NhdGlvbi5yZXNvbHZlZFR5cGUpLmhhc1R5cGVCaXQoVHlwZUlkcy5CaXRXcmFwcGVyQ2xvc2Vh
YmxlKSkgeworCQkJaWYgKGFsbG9jYXRpb24uYXJndW1lbnRzICE9IG51bGwgJiYgIGFsbG9jYXRp
b24uYXJndW1lbnRzLmxlbmd0aCA+IDApIHsKKwkJCQkvLyBmaW5kIHRoZSB3cmFwcGVkIHJlc291
cmNlIHJlcHJlc2VudGVkIGJ5IGl0cyB0cmFja2luZyB2YXI6CisJCQkJRmFrZWRUcmFja2luZ1Zh
cmlhYmxlIGlubmVyVHJhY2tlciA9IGFuYWx5c2VDbG9zZWFibGVBbGxvY2F0aW9uQXJndW1lbnQo
c2NvcGUsIGZsb3dJbmZvLCBhbGxvY2F0aW9uLCBhbGxvY2F0aW9uLmFyZ3VtZW50c1swXSk7CisJ
CQkJaWYgKGlubmVyVHJhY2tlciAhPSBudWxsKSB7CisJCQkJCWlmIChpbm5lclRyYWNrZXIgPT0g
YWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIpCisJCQkJCQlyZXR1cm47IC8vIHNlbGYgd3JhcCAocmVz
ID0gbmV3IFJlcyhyZXMpKSAtPiBuZWl0aGVyIGNoYW5nZSAoaGVyZSkgbm9yIHJlbW92ZSAoYmVs
b3cpCisJCQkJCWlmIChhbGxvY2F0aW9uLmNsb3NlVHJhY2tlciA9PSBudWxsKSB7CisJCQkJCQlh
bGxvY2F0aW9uLmNsb3NlVHJhY2tlciA9IG5ldyBGYWtlZFRyYWNraW5nVmFyaWFibGUoc2NvcGUs
IGFsbG9jYXRpb24pOyAvLyBubyBsb2NhbCBhdmFpbGFibGUsIGNsb3NlYWJsZSBpcyB1bmFzc2ln
bmVkCisJCQkJCX0KKwkJCQkJYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIuaW5uZXJUcmFja2VyID0g
aW5uZXJUcmFja2VyOworCQkJCQlpbm5lclRyYWNrZXIuZ2xvYmFsQ2xvc2luZ1N0YXRlIHw9IFdS
QVBQRUQ7CisJCQkJCWZsb3dJbmZvLm1hcmtBc0RlZmluaXRlbHlOdWxsKGFsbG9jYXRpb24uY2xv
c2VUcmFja2VyLmJpbmRpbmcpOworCQkJCQlyZXR1cm47IC8vIGtlZXAgY2hhaW5pbmcgd3JhcHBl
cgorCQkJCX0KKwkJCX0KKwkJCS8vIHJlbW92ZSB1bm5lY2Vzc2FyeSBhdHRlbXB0cyAod3JhcHBl
ciBoYXMgbm8gcmVsZXZhbnQgaW5uZXIpCisJCQlpZiAoYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIg
IT0gbnVsbCkgeworCQkJCXNjb3BlLnJlbW92ZVRyYWNraW5nVmFyKGFsbG9jYXRpb24uY2xvc2VU
cmFja2VyKTsKKwkJCQlhbGxvY2F0aW9uLmNsb3NlVHJhY2tlciA9IG51bGw7CisJCQl9CisJCX0g
ZWxzZSB7IC8vIHJlZ3VsYXIgcmVzb3VyY2UKKwkJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSBwcmVz
ZXRUcmFja2VyID0gYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXI7CisJCQlpZiAocHJlc2V0VHJhY2tl
ciAhPSBudWxsICYmIHByZXNldFRyYWNrZXIub3JpZ2luYWxCaW5kaW5nICE9IG51bGwpIHsKKwkJ
CQlpbnQgY2xvc2VTdGF0dXMgPSBmbG93SW5mby5udWxsU3RhdHVzKHByZXNldFRyYWNrZXIuYmlu
ZGluZyk7CisJCQkJaWYgKGNsb3NlU3RhdHVzICE9IEZsb3dJbmZvLk5PTl9OVUxMCisJCQkJCQkm
JiAhZmxvd0luZm8uaXNEZWZpbml0ZWx5TnVsbChwcmVzZXRUcmFja2VyLm9yaWdpbmFsQmluZGlu
ZykKKwkJCQkJCSYmICEocHJlc2V0VHJhY2tlci5jdXJyZW50QXNzaWdubWVudCBpbnN0YW5jZW9m
IExvY2FsRGVjbGFyYXRpb24pKQorCQkJCQlhbGxvY2F0aW9uLmNsb3NlVHJhY2tlci5yZWNvcmRF
cnJvckxvY2F0aW9uKHByZXNldFRyYWNrZXIuY3VycmVudEFzc2lnbm1lbnQsIGNsb3NlU3RhdHVz
KTsKKwkJCX0gZWxzZSB7CisJCQkJYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIgPSBuZXcgRmFrZWRU
cmFja2luZ1ZhcmlhYmxlKHNjb3BlLCBhbGxvY2F0aW9uKTsgLy8gbm8gbG9jYWwgYXZhaWxhYmxl
LCBjbG9zZWFibGUgaXMgdW5hc3NpZ25lZAorCQkJfQorCQkJZmxvd0luZm8ubWFya0FzRGVmaW5p
dGVseU51bGwoYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIuYmluZGluZyk7CisJCX0KKwl9CisKKwkv
KiogRmluZCBhbiBleGlzdGluZyB0cmFja2luZyB2YXJpYWJsZSBmb3IgdGhlIGFyZ3VtZW50IG9m
IGFuIGFsbG9jYXRpb24gZm9yIGEgcmVzb3VyY2Ugd3JhcHBlci4gKi8KKwlwdWJsaWMgc3RhdGlj
IEZha2VkVHJhY2tpbmdWYXJpYWJsZSBhbmFseXNlQ2xvc2VhYmxlQWxsb2NhdGlvbkFyZ3VtZW50
KEJsb2NrU2NvcGUgc2NvcGUsIEZsb3dJbmZvIGZsb3dJbmZvLCBBbGxvY2F0aW9uRXhwcmVzc2lv
biBhbGxvY2F0aW9uLCBFeHByZXNzaW9uIGFyZykKKwl7CisJCXdoaWxlIChhcmcgaW5zdGFuY2Vv
ZiBBc3NpZ25tZW50KSB7CisJCQlBc3NpZ25tZW50IGFzc2lnbiA9IChBc3NpZ25tZW50KWFyZzsK
KwkJCUxvY2FsVmFyaWFibGVCaW5kaW5nIGlubmVyTG9jYWwgPSBhc3NpZ24ubG9jYWxWYXJpYWJs
ZUJpbmRpbmcoKTsKKwkJCWlmIChpbm5lckxvY2FsICE9IG51bGwpIHsKKwkJCQkvLyBuZXN0ZWQg
YXNzaWdubWVudCBoYXMgYWxyZWFkeSBiZWVuIHByb2Nlc3NlZAorCQkJCXJldHVybiBpbm5lckxv
Y2FsLmNsb3NlVHJhY2tlcjsKKwkJCX0gZWxzZSB7CisJCQkJYXJnID0gYXNzaWduLmV4cHJlc3Np
b247IC8vIHVud3JhcCBhc3NpZ25tZW50IGFuZCBmYWxsIHRocm91Z2gKKwkJCX0KKwkJfQorCQlp
ZiAoYXJnIGluc3RhbmNlb2YgU2luZ2xlTmFtZVJlZmVyZW5jZSkgeworCQkJLy8gaXMgYWxsb2Nh
dGlvbiBhcmcgYSByZWZlcmVuY2UgdG8gYW4gZXhpc3RpbmcgY2xvc2VhYmxlPworCQkJTG9jYWxW
YXJpYWJsZUJpbmRpbmcgbG9jYWwgPSBhcmcubG9jYWxWYXJpYWJsZUJpbmRpbmcoKTsKKwkJCWlm
IChsb2NhbCAhPSBudWxsKSB7CisJCQkJcmV0dXJuIGxvY2FsLmNsb3NlVHJhY2tlcjsKKwkJCX0K
KwkJfSBlbHNlIGlmIChhcmcgaW5zdGFuY2VvZiBBbGxvY2F0aW9uRXhwcmVzc2lvbiAmJiBhcmcu
cmVzb2x2ZWRUeXBlIGluc3RhbmNlb2YgUmVmZXJlbmNlQmluZGluZykgeworCQkJLy8gbmVzdGVk
IGFsbG9jYXRpb24KKwkJCXJldHVybiAoKEFsbG9jYXRpb25FeHByZXNzaW9uKWFyZykuY2xvc2VU
cmFja2VyOworCQl9CisJCXJldHVybiBudWxsOyAvLyBub3QgYSB0cmFja2VkIGV4cHJlc3Npb24K
IAl9CiAKIAkvKiogCiAJICogQ2hlY2sgaWYgdGhlIHJocyBvZiBhbiBhc3NpZ25tZW50IG9yIGxv
Y2FsIGRlY2xhcmF0aW9uIGlzIGFuIChBdXRvKUNsb3NlYWJsZS4KLQkgKiBJZiBzbyBjcmVhdGUg
b3IgcmUtdXNlIGEgdHJhY2tpbmcgdmFyaWFibGUsIGFuZCB3aXJlIGFuZCBpbml0aWFsaXplIGV2
ZXJ5dGhpbmcuIAorCSAqIElmIHNvIGNyZWF0ZSBvciByZS11c2UgYSB0cmFja2luZyB2YXJpYWJs
ZSwgYW5kIHdpcmUgYW5kIGluaXRpYWxpemUgZXZlcnl0aGluZy4KKwkgKiBAcGFyYW0gdXBzdHJl
YW1JbmZvIGluZm8gd2l0aG91dCBhbmFseXNpcyBvZiB0aGUgcmhzLCB1c2UgdGhpcyB0byBkZXRl
cm1pbmUgdGhlIHN0YXR1cyBvZiBhIHJlc291cmNlIGJlaW5nIGRpc2Nvbm5lY3RlZAorCSAqIEBw
YXJhbSBmbG93SW5mbyBpbmZvIHdpdGggYW5hbHlzaXMgb2YgdGhlIHJocywgdXNlIHRoaXMgZm9y
IHJlY29yZGluZyByZXNvdXJjZSBzdGF0dXMgYmVjYXVzZSB0aGlzIHdpbGwgYmUgcGFzc2VkIGRv
d25zdHJlYW0KKwkgKiBAcGFyYW0gbG9jYXRpb24gd2hlcmUgdG8gcmVwb3J0IHdhcm5pZ3MvZXJy
b3JzIGFnYWluc3QKKwkgKiBAcGFyYW0gcmhzIHRoZSByaWdodCBoYW5kIHNpZGUgb2YgdGhlIGFz
c2lnbm1lbnQsIHRoaXMgZXhwcmVzc2lvbiBpcyB0byBiZSBhbmFseXplZC4KKwkgKgkJCVRoZSBj
YWxsZXIgaGFzIGFscmVhZHkgY2hlY2tlZCB0aGF0IHRoZSByaHMgaXMgZWl0aGVyIG9mIGEgY2xv
c2VhYmxlIHR5cGUgb3IgbnVsbC4KKwkgKiBAcGFyYW0gbG9jYWwgdGhlIGxvY2FsIHZhcmlhYmxl
IGludG8gd2hpY2ggdGhlIHJocyBpcyBiZWluZyBhc3NpZ25lZAogCSAqLwotCXB1YmxpYyBzdGF0
aWMgdm9pZCBoYW5kbGVSZXNvdXJjZUFzc2lnbm1lbnQoRmxvd0luZm8gZmxvd0luZm8sIFN0YXRl
bWVudCBsb2NhdGlvbiwgRXhwcmVzc2lvbiByaHMsIExvY2FsVmFyaWFibGVCaW5kaW5nIGxvY2Fs
LAotCQkJCUxvY2FsVmFyaWFibGVCaW5kaW5nIHByZXZpb3VzVHJhY2tlckJpbmRpbmcpIAorCXB1
YmxpYyBzdGF0aWMgdm9pZCBoYW5kbGVSZXNvdXJjZUFzc2lnbm1lbnQoRmxvd0luZm8gdXBzdHJl
YW1JbmZvLCBGbG93SW5mbyBmbG93SW5mbywgQVNUTm9kZSBsb2NhdGlvbiwgRXhwcmVzc2lvbiBy
aHMsIExvY2FsVmFyaWFibGVCaW5kaW5nIGxvY2FsKQogCXsKLQkJaWYgKGlzQXV0b0Nsb3NlYWJs
ZShyaHMucmVzb2x2ZWRUeXBlKSkgeworCQkvLyBkb2VzIHRoZSBMSFMgKGxvY2FsKSBhbHJlYWR5
IGhhdmUgYSB0cmFja2VyLCBpbmRpY2F0aW5nIHdlIG1heSBsZWFrIGEgcmVzb3VyY2UgYnkgdGhl
IGFzc2lnbm1lbnQ/CisJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSBwcmV2aW91c1RyYWNrZXIgPSBu
dWxsOworCQlGYWtlZFRyYWNraW5nVmFyaWFibGUgZGlzY29ubmVjdGVkVHJhY2tlciA9IG51bGw7
CisJCWlmIChsb2NhbC5jbG9zZVRyYWNrZXIgIT0gbnVsbCkgeworCQkJLy8gYXNzaWduaW5nIHRv
IGEgdmFyaWFibGUgYWxyZWFkeSBob2xkaW5nIGFuIEF1dG9DbG9zZWFibGUsIGhhcyBpdCBiZWVu
IGNsb3NlZCBiZWZvcmU/CisJCQlwcmV2aW91c1RyYWNrZXIgPSBsb2NhbC5jbG9zZVRyYWNrZXI7
CisJCQlpbnQgbnVsbFN0YXR1cyA9IHVwc3RyZWFtSW5mby5udWxsU3RhdHVzKGxvY2FsKTsKKwkJ
CWlmIChudWxsU3RhdHVzICE9IEZsb3dJbmZvLk5VTEwgJiYgbnVsbFN0YXR1cyAhPSBGbG93SW5m
by5VTktOT1dOKSAvLyBvbmx5IGlmIHByZXZpb3VzIHZhbHVlIG1heSBiZSByZWxldmFudAorCQkJ
CWRpc2Nvbm5lY3RlZFRyYWNrZXIgPSBwcmV2aW91c1RyYWNrZXI7IC8vIHJlcG9ydCBlcnJvciBi
ZWxvdywgdW5sZXNzIHdlIGhhdmUgYSBzZWxmLXdyYXAgYXNzaWdubWVudAorCQl9CisKKwkJaWYg
KHJocy5yZXNvbHZlZFR5cGUgIT0gVHlwZUJpbmRpbmcuTlVMTCkgewogCQkJLy8gbmV3IHZhbHVl
IGlzIEF1dG9DbG9zZWFibGUsIHN0YXJ0IHRyYWNraW5nLCBwb3NzaWJseSByZS11c2luZyBleGlz
dGluZyB0cmFja2VyIHZhcjoKLQkKIAkJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSByaHNUcmFja1Zh
ciA9IGdldENsb3NlVHJhY2tpbmdWYXJpYWJsZShyaHMpOwotCQkJaWYgKHJoc1RyYWNrVmFyICE9
IG51bGwpIHsJCQkJCQkJCS8vIDEuIHNoYXJlIHRyYWNraW5nIHZhcmlhYmxlIHdpdGggUkhTPwot
CQkJCWxvY2FsLmNsb3NlVHJhY2tlciA9IHJoc1RyYWNrVmFyOwotCQkJCS8vIGtlZXAgbnVsbC1z
dGF0dXMgdW5jaGFuZ2VkIGFjcm9zcyB0aGlzIGFzc2lnbm1lbnQKLQkJCX0gZWxzZSBpZiAocHJl
dmlvdXNUcmFja2VyQmluZGluZyAhPSBudWxsKSB7CQkJLy8gMi4gcmUtdXNlIHRyYWNraW5nIHZh
cmlhYmxlIGZyb20gdGhlIExIUz8KLQkJCQkvLyByZS1hc3NpZ25pbmcgZnJvbSBhIGZyZXNoLCBt
YXJrIGFzIG5vdC1jbG9zZWQgYWdhaW46Ci0JCQkJZmxvd0luZm8ubWFya0FzRGVmaW5pdGVseU51
bGwocHJldmlvdXNUcmFja2VyQmluZGluZyk7CisJCQlpZiAocmhzVHJhY2tWYXIgIT0gbnVsbCkg
ewkJCQkJCQkJLy8gMS4gaWYgUkhTIGhhcyBhIHRyYWNraW5nIHZhcmlhYmxlLi4uCisJCQkJaWYg
KGxvY2FsLmNsb3NlVHJhY2tlciA9PSBudWxsKSB7CisJCQkJCS8vIG51bGwgc2hvdWxkbid0IG9j
Y3VyIGJ1dCBsZXQncyBwbGF5IHNhZmUKKwkJCQkJaWYgKHJoc1RyYWNrVmFyLm9yaWdpbmFsQmlu
ZGluZyAhPSBudWxsKQorCQkJCQkJbG9jYWwuY2xvc2VUcmFja2VyID0gcmhzVHJhY2tWYXI7CQkJ
Ly8JCWEuOiBsZXQgZnJlc2ggTEhTIHNoYXJlIGl0IAorCQkJCX0gZWxzZSB7CisJCQkJCWlmIChy
aHNUcmFja1ZhciA9PSBkaXNjb25uZWN0ZWRUcmFja2VyICYmIHJocyBpbnN0YW5jZW9mIEFsbG9j
YXRpb25FeHByZXNzaW9uKQorCQkJCQkJcmV0dXJuOyAJCQkJCQkJCQkvLyAJCWIuOiBzZWxmIHdy
YXBwZXI6IHJlcyA9IG5ldyBXcmFwKHJlcyk7IC0+IGRvbmUhCisJCQkJCWxvY2FsLmNsb3NlVHJh
Y2tlciA9IHJoc1RyYWNrVmFyOwkJCQkvLwkJYy46IGNvbmZsaWN0aW5nIExIUyBhbmQgUkhTLCBw
cm9jZWVkIHdpdGggcmVjb3JkRXJyb3JMb2NhdGlvbiBiZWxvdworCQkJCX0KKwkJCQkvLyBrZWVw
IGNsb3NlLXN0YXR1cyBvZiBSSFMgdW5jaGFuZ2VkIGFjcm9zcyB0aGlzIGFzc2lnbm1lbnQKKwkJ
CX0gZWxzZSBpZiAocHJldmlvdXNUcmFja2VyICE9IG51bGwpIHsJCQkJCS8vIDIuIHJlLXVzZSB0
cmFja2luZyB2YXJpYWJsZSBmcm9tIHRoZSBMSFM/CisJCQkJLy8gcmUtYXNzaWduaW5nIGZyb20g
YSBmcmVzaCB2YWx1ZSwgbWFyayBhcyBub3QtY2xvc2VkIGFnYWluOgorCQkJCWZsb3dJbmZvLm1h
cmtBc0RlZmluaXRlbHlOdWxsKHByZXZpb3VzVHJhY2tlci5iaW5kaW5nKTsKKwkJCQlsb2NhbC5j
bG9zZVRyYWNrZXIgPSBhbmFseXNlQ2xvc2VhYmxlRXhwcmVzc2lvbihmbG93SW5mbywgbG9jYWws
IGxvY2F0aW9uLCByaHMsIHByZXZpb3VzVHJhY2tlcik7CiAJCQl9IGVsc2UgewkJCQkJCQkJCQkJ
CS8vIDMuIG5vIHJlLXVzZSwgY3JlYXRlIGEgZnJlc2ggdHJhY2tpbmcgdmFyaWFibGU6Ci0JCQkJ
bG9jYWwuY2xvc2VUcmFja2VyID0gbmV3IEZha2VkVHJhY2tpbmdWYXJpYWJsZShsb2NhbCwgbG9j
YXRpb24pOwotCQkJCS8vIGEgZnJlc2ggcmVzb3VyY2UsIG1hcmsgYXMgbm90LWNsb3NlZDoKLQkJ
CQlmbG93SW5mby5tYXJrQXNEZWZpbml0ZWx5TnVsbChsb2NhbC5jbG9zZVRyYWNrZXIuYmluZGlu
Zyk7CisJCQkJcmhzVHJhY2tWYXIgPSBhbmFseXNlQ2xvc2VhYmxlRXhwcmVzc2lvbihmbG93SW5m
bywgbG9jYWwsIGxvY2F0aW9uLCByaHMsIG51bGwpOworCQkJCWlmIChyaHNUcmFja1ZhciAhPSBu
dWxsKSB7CisJCQkJCWxvY2FsLmNsb3NlVHJhY2tlciA9IHJoc1RyYWNrVmFyOworCQkJCQkvLyBh
IGZyZXNoIHJlc291cmNlLCBtYXJrIGFzIG5vdC1jbG9zZWQ6CisJCQkJCWlmICgocmhzVHJhY2tW
YXIuZ2xvYmFsQ2xvc2luZ1N0YXRlICYgUEFTU0VEX1RPX09VVFNJREUpID09IDApCisJCQkJCQlm
bG93SW5mby5tYXJrQXNEZWZpbml0ZWx5TnVsbChyaHNUcmFja1Zhci5iaW5kaW5nKTsKIC8vIFRP
RE8oc3RlcGhhbik6IHRoaXMgbWlnaHQgYmUgdXNlZnVsLCBidXQgSSBjb3VsZCBub3QgZmluZCBh
IHRlc3QgY2FzZSBmb3IgaXQ6IAotLy8JCQkJaWYgKGZsb3dDb250ZXh0LmluaXRzT25GaW5hbGx5
ICE9IG51bGwpCi0vLwkJCQkJZmxvd0NvbnRleHQuaW5pdHNPbkZpbmFsbHkubWFya0FzRGVmaW5p
dGVseU5vbk51bGwodHJhY2tlckJpbmRpbmcpOworLy8JCQkJCWlmIChmbG93Q29udGV4dC5pbml0
c09uRmluYWxseSAhPSBudWxsKQorLy8JCQkJCQlmbG93Q29udGV4dC5pbml0c09uRmluYWxseS5t
YXJrQXNEZWZpbml0ZWx5Tm9uTnVsbCh0cmFja2VyQmluZGluZyk7CisJCQkJfQogCQkJfQorCQl9
CisKKwkJaWYgKGRpc2Nvbm5lY3RlZFRyYWNrZXIgIT0gbnVsbCkKKwkJCWRpc2Nvbm5lY3RlZFRy
YWNrZXIucmVjb3JkRXJyb3JMb2NhdGlvbihsb2NhdGlvbiwgdXBzdHJlYW1JbmZvLm51bGxTdGF0
dXMoZGlzY29ubmVjdGVkVHJhY2tlci5iaW5kaW5nKSk7CisJfQorCS8qKgorCSAqIEFuYWx5emUg
c3RydWN0dXJlIG9mIGEgY2xvc2VhYmxlIGV4cHJlc3Npb24sIG1hdGNoaW5nIChjaGFpbmVkKSBy
ZXNvdXJjZXMgYWdhaW5zdCBvdXIgd2hpdGUgbGlzdHMuCisJICogQHBhcmFtIGZsb3dJbmZvIHdo
ZXJlIHRvIHJlY29yZCBjbG9zZSBzdGF0dXMKKwkgKiBAcGFyYW0gbG9jYWwgbG9jYWwgdmFyaWFi
bGUgdG8gd2hpY2ggdGhlIGNsb3NlYWJsZSBpcyBiZWluZyBhc3NpZ25lZAorCSAqIEBwYXJhbSBs
b2NhdGlvbiB3aGVyZSB0byBmbGFnIGVycm9ycy93YXJuaW5ncyBhZ2FpbnN0CisJICogQHBhcmFt
IGV4cHJlc3Npb24gZXhwcmVzc2lvbiB0byBiZSBhbmFseXplZAorCSAqIEBwYXJhbSBwcmV2aW91
c1RyYWNrZXIgd2hlbiBhbmFseXppbmcgYSByZS1hc3NpZ25tZW50IHdlIG1heSBhbHJlYWR5IGhh
dmUgYSB0cmFja2luZyB2YXJpYWJsZSBmb3IgbG9jYWwsCisJICogIAkJd2hpY2ggd2Ugc2hvdWxk
IHRoZW4gcmUtdXNlCisJICogQHJldHVybiBhIHRyYWNraW5nIHZhcmlhYmxlIGFzc29jaWF0ZWQg
d2l0aCBsb2NhbCBvciBudWxsIGlmIG5vIG5lZWQgdG8gdHJhY2sKKwkgKi8KKwlwcml2YXRlIHN0
YXRpYyBGYWtlZFRyYWNraW5nVmFyaWFibGUgYW5hbHlzZUNsb3NlYWJsZUV4cHJlc3Npb24oRmxv
d0luZm8gZmxvd0luZm8sIExvY2FsVmFyaWFibGVCaW5kaW5nIGxvY2FsLCAKKwkJCQkJCQkJCUFT
VE5vZGUgbG9jYXRpb24sIEV4cHJlc3Npb24gZXhwcmVzc2lvbiwgRmFrZWRUcmFja2luZ1Zhcmlh
YmxlIHByZXZpb3VzVHJhY2tlcikgCisJeworCQkvLyB1bndyYXAgdW5pbnRlcmVzdGluZyBub2Rl
czoKKwkJd2hpbGUgKHRydWUpIHsKKwkJCWlmIChleHByZXNzaW9uIGluc3RhbmNlb2YgQXNzaWdu
bWVudCkKKwkJCQlleHByZXNzaW9uID0gKChBc3NpZ25tZW50KWV4cHJlc3Npb24pLmV4cHJlc3Np
b247CisJCQllbHNlIGlmIChleHByZXNzaW9uIGluc3RhbmNlb2YgQ2FzdEV4cHJlc3Npb24pCisJ
CQkJZXhwcmVzc2lvbiA9ICgoQ2FzdEV4cHJlc3Npb24pIGV4cHJlc3Npb24pLmV4cHJlc3Npb247
CisJCQllbHNlCisJCQkJYnJlYWs7CisJCX0KKworCQkvLyBhbmFseXplIGJ5IG5vZGUgdHlwZToK
KwkJaWYgKGV4cHJlc3Npb24gaW5zdGFuY2VvZiBBbGxvY2F0aW9uRXhwcmVzc2lvbikgeworCQkJ
Ly8gYWxsb2NhdGlvbiBleHByZXNzaW9ucyBhbHJlYWR5IGhhdmUgdGhlaXIgdHJhY2tpbmcgdmFy
aWFibGVzIGFuYWx5emVkIGJ5IGFuYWx5c2VDbG9zZWFibGVBbGxvY2F0aW9uKC4uKQorCQkJRmFr
ZWRUcmFja2luZ1ZhcmlhYmxlIHRyYWNrZXIgPSAoKEFsbG9jYXRpb25FeHByZXNzaW9uKSBleHBy
ZXNzaW9uKS5jbG9zZVRyYWNrZXI7CisJCQlpZiAodHJhY2tlciAhPSBudWxsICYmIHRyYWNrZXIu
b3JpZ2luYWxCaW5kaW5nID09IG51bGwpIHsKKwkJCQkvLyB0cmFja2VyIHdpdGhvdXQgb3JpZ2lu
YWwgYmluZGluZyAodW5hc3NpZ25lZCBjbG9zZWFibGUpIHNob3VsZG4ndCByZWFjaCBoZXJlIGJ1
dCBsZXQncyBwbGF5IHNhZmUKKwkJCQlyZXR1cm4gbnVsbDsKKwkJCX0KKwkJCXJldHVybiB0cmFj
a2VyOworCQl9IGVsc2UgaWYgKGV4cHJlc3Npb24gaW5zdGFuY2VvZiBNZXNzYWdlU2VuZCAKKwkJ
CQl8fCBleHByZXNzaW9uIGluc3RhbmNlb2YgQXJyYXlSZWZlcmVuY2UpIAorCQl7CisJCQkvLyB3
ZSAqbWlnaHQqIGJlIHJlc3BvbnNpYmxlIGZvciB0aGUgcmVzb3VyY2Ugb2J0YWluZWQKKwkJCUZh
a2VkVHJhY2tpbmdWYXJpYWJsZSB0cmFja2VyID0gbmV3IEZha2VkVHJhY2tpbmdWYXJpYWJsZShs
b2NhbCwgbG9jYXRpb24pOworCQkJdHJhY2tlci5nbG9iYWxDbG9zaW5nU3RhdGUgfD0gUEFTU0VE
X1RPX09VVFNJREU7CisJCQlmbG93SW5mby5tYXJrUG90ZW50aWFsbHlOdWxsQml0KHRyYWNrZXIu
YmluZGluZyk7CisJCQlyZXR1cm4gdHJhY2tlcjsJCQkKKwkJfSBlbHNlIGlmIChleHByZXNzaW9u
IGluc3RhbmNlb2YgRmllbGRSZWZlcmVuY2UgCisJCQkJfHwgZXhwcmVzc2lvbiBpbnN0YW5jZW9m
IFF1YWxpZmllZE5hbWVSZWZlcmVuY2UpIAorCQl7CisJCQkvLyByZXNwb25zaWJpbGl0eSBmb3Ig
dGhpcyByZXNvdXJjZSBwcm9iYWJseSBsaWVzIGF0IGEgaGlnaGVyIGxldmVsCisJCQlGYWtlZFRy
YWNraW5nVmFyaWFibGUgdHJhY2tlciA9IG5ldyBGYWtlZFRyYWNraW5nVmFyaWFibGUobG9jYWws
IGxvY2F0aW9uKTsKKwkJCXRyYWNrZXIuZ2xvYmFsQ2xvc2luZ1N0YXRlIHw9IFBBU1NFRF9UT19P
VVRTSURFOworCQkJZmxvd0luZm8ubWFya1BvdGVudGlhbGx5Tm9uTnVsbEJpdCh0cmFja2VyLmJp
bmRpbmcpOworCQkJcmV0dXJuIHRyYWNrZXI7CQkJCisJCX0KKworCQlpZiAoZXhwcmVzc2lvbi5y
ZXNvbHZlZFR5cGUgaW5zdGFuY2VvZiBSZWZlcmVuY2VCaW5kaW5nKSB7CisJCQlSZWZlcmVuY2VC
aW5kaW5nIHJlc291cmNlVHlwZSA9IChSZWZlcmVuY2VCaW5kaW5nKSBleHByZXNzaW9uLnJlc29s
dmVkVHlwZTsKKwkJCWlmIChyZXNvdXJjZVR5cGUuaGFzVHlwZUJpdChUeXBlSWRzLkJpdFJlc291
cmNlRnJlZUNsb3NlYWJsZSkpIHsKKwkJCQkvLyAoYSkgcmVzb3VyY2UtZnJlZSBjbG9zZWFibGU6
IC0+IG51bGwKKwkJCQlyZXR1cm4gbnVsbDsKKwkJCX0KKwkJfQorCQlpZiAobG9jYWwuY2xvc2VU
cmFja2VyICE9IG51bGwpCisJCQkvLyAoYyk6IGlubmVyIGhhcyBhbHJlYWR5IGJlZW4gYW5hbHl6
ZWQ6IC0+IHJlLXVzZSB0cmFjayB2YXIKKwkJCXJldHVybiBsb2NhbC5jbG9zZVRyYWNrZXI7CisJ
CXJldHVybiBuZXcgRmFrZWRUcmFja2luZ1ZhcmlhYmxlKGxvY2FsLCBsb2NhdGlvbik7CisJfQor
CisJcHVibGljIHN0YXRpYyB2b2lkIGNsZWFuVXBBZnRlckFzc2lnbm1lbnQoQmxvY2tTY29wZSBj
dXJyZW50U2NvcGUsIGludCBsaHNCaXRzLCBFeHByZXNzaW9uIGV4cHJlc3Npb24pIHsKKwkJLy8g
cmVtb3ZlIGFsbCByZW1haW5pbmcgdHJhY2sgdmFycyB3aXRoIG5vIG9yaWdpbmFsIGJpbmRpbmcK
KworCQkvLyB1bndyYXAgdW5pbnRlcmVzdGluZyBub2RlczoKKwkJd2hpbGUgKHRydWUpIHsKKwkJ
CWlmIChleHByZXNzaW9uIGluc3RhbmNlb2YgQXNzaWdubWVudCkKKwkJCQlleHByZXNzaW9uID0g
KChBc3NpZ25tZW50KWV4cHJlc3Npb24pLmV4cHJlc3Npb247CisJCQllbHNlIGlmIChleHByZXNz
aW9uIGluc3RhbmNlb2YgQ2FzdEV4cHJlc3Npb24pCisJCQkJZXhwcmVzc2lvbiA9ICgoQ2FzdEV4
cHJlc3Npb24pIGV4cHJlc3Npb24pLmV4cHJlc3Npb247CisJCQllbHNlCisJCQkJYnJlYWs7CisJ
CX0KKwkJaWYgKGV4cHJlc3Npb24gaW5zdGFuY2VvZiBBbGxvY2F0aW9uRXhwcmVzc2lvbikgewor
CQkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlIHRyYWNrZXIgPSAoKEFsbG9jYXRpb25FeHByZXNzaW9u
KSBleHByZXNzaW9uKS5jbG9zZVRyYWNrZXI7CisJCQlpZiAodHJhY2tlciAhPSBudWxsICYmIHRy
YWNrZXIub3JpZ2luYWxCaW5kaW5nID09IG51bGwpIHsKKwkJCQljdXJyZW50U2NvcGUucmVtb3Zl
VHJhY2tpbmdWYXIodHJhY2tlcik7CisJCQkJKChBbGxvY2F0aW9uRXhwcmVzc2lvbikgZXhwcmVz
c2lvbikuY2xvc2VUcmFja2VyID0gbnVsbDsKKwkJCX0KKwkJfSBlbHNlIHsKKwkJCS8vIGFzc2ln
bm1lbnQgcGFzc2luZyBhIGxvY2FsIGludG8gYSBmaWVsZD8KKwkJCUxvY2FsVmFyaWFibGVCaW5k
aW5nIGxvY2FsID0gZXhwcmVzc2lvbi5sb2NhbFZhcmlhYmxlQmluZGluZygpOworCQkJaWYgKGxv
Y2FsICE9IG51bGwgJiYgbG9jYWwuY2xvc2VUcmFja2VyICE9IG51bGwgJiYgKChsaHNCaXRzICYg
QmluZGluZy5GSUVMRCkgIT0gMCkpCisJCQkJY3VycmVudFNjb3BlLnJlbW92ZVRyYWNraW5nVmFy
KGxvY2FsLmNsb3NlVHJhY2tlcik7CiAJCX0KIAl9CiAKQEAgLTE1OSw2ICszODgsNzYgQEAKIAlw
dWJsaWMgc3RhdGljIGJvb2xlYW4gaXNBdXRvQ2xvc2VhYmxlKFR5cGVCaW5kaW5nIHR5cGVCaW5k
aW5nKSB7CiAJCXJldHVybiB0eXBlQmluZGluZyBpbnN0YW5jZW9mIFJlZmVyZW5jZUJpbmRpbmcK
IAkJCSYmICgoUmVmZXJlbmNlQmluZGluZyl0eXBlQmluZGluZykuaGFzVHlwZUJpdChUeXBlSWRz
LkJpdEF1dG9DbG9zZWFibGV8VHlwZUlkcy5CaXRDbG9zZWFibGUpOworCX0KKworCXB1YmxpYyBp
bnQgZmluZE1vc3RTcGVjaWZpY1N0YXR1cyhGbG93SW5mbyBmbG93SW5mbywgQmxvY2tTY29wZSBj
dXJyZW50U2NvcGUsIEJsb2NrU2NvcGUgbG9jYXRpb25TY29wZSkgeworCQlpbnQgc3RhdHVzID0g
Rmxvd0luZm8uVU5LTk9XTjsKKwkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlIGN1cnJlbnRUcmFja2Vy
ID0gdGhpczsKKwkJLy8gbG9vcCBhcyB0byBjb25zaWRlciB3cmFwcGVycyAocGVyIHdoaXRlIGxp
c3QpIGVuY2Fwc3VsYXRpbmcgYW4gaW5uZXIgcmVzb3VyY2UuCisJCXdoaWxlIChjdXJyZW50VHJh
Y2tlciAhPSBudWxsKSB7CisJCQlMb2NhbFZhcmlhYmxlQmluZGluZyBjdXJyZW50VmFyID0gY3Vy
cmVudFRyYWNrZXIuYmluZGluZzsKKwkJCWludCBjdXJyZW50U3RhdHVzID0gZ2V0TnVsbFN0YXR1
c0FnZ3Jlc3NpdmVseShjdXJyZW50VmFyLCBmbG93SW5mbyk7CisJCQlpZiAobG9jYXRpb25TY29w
ZSAhPSBudWxsKSAvLyBvbmx5IGNoZWNrIGF0IG1ldGhvZCBleGl0IHBvaW50cworCQkJCWN1cnJl
bnRTdGF0dXMgPSBtZXJnZUNsb3NlU3RhdHVzKGxvY2F0aW9uU2NvcGUsIGN1cnJlbnRTdGF0dXMs
IGN1cnJlbnRWYXIsIGN1cnJlbnRTY29wZSk7CisJCQlpZiAoY3VycmVudFN0YXR1cyA9PSBGbG93
SW5mby5OT05fTlVMTCkgeworCQkJCXN0YXR1cyA9IGN1cnJlbnRTdGF0dXM7CisJCQkJYnJlYWs7
IC8vIGNsb3NlZCAtPiBzdG9wIHNlYXJjaGluZworCQkJfSBlbHNlIGlmIChzdGF0dXMgPT0gRmxv
d0luZm8uTlVMTCB8fCBzdGF0dXMgPT0gRmxvd0luZm8uVU5LTk9XTikgeworCQkJCXN0YXR1cyA9
IGN1cnJlbnRTdGF0dXM7IC8vIGltcHJvdmVkIGFsdGhvdWdoIG5vdCB5ZXQgc2FmZSAtPiBrZWVw
IHNlYXJjaGluZyBmb3IgYmV0dGVyCisJCQl9CisJCQljdXJyZW50VHJhY2tlciA9IGN1cnJlbnRU
cmFja2VyLmlubmVyVHJhY2tlcjsKKwkJfQorCQlyZXR1cm4gc3RhdHVzOworCX0KKworCS8qKgor
CSAqIEdldCB0aGUgbnVsbCBzdGF0dXMgbG9va2luZyBldmVuIGludG8gdW5yZWFjaGFibGUgZmxv
d3MKKwkgKiBAcGFyYW0gbG9jYWwKKwkgKiBAcGFyYW0gZmxvd0luZm8KKwkgKiBAcmV0dXJuIG9u
ZSBvZiB0aGUgY29uc3RhbnRzIEZsb3dJbmZvLntOVUxMLFBPVEVOVElBTExZX05VTEwsUE9URU5U
SUFMTFlfTk9OX05VTEwsTk9OX05VTEx9LgorCSAqLworCXByaXZhdGUgaW50IGdldE51bGxTdGF0
dXNBZ2dyZXNzaXZlbHkoTG9jYWxWYXJpYWJsZUJpbmRpbmcgbG9jYWwsIEZsb3dJbmZvIGZsb3dJ
bmZvKSB7CisJCWludCByZWFjaE1vZGUgPSBmbG93SW5mby5yZWFjaE1vZGUoKTsKKwkJaW50IHN0
YXR1cyA9IDA7CisJCXRyeSB7CisJCQkvLyB1bnJlYWNoYWJsZSBmbG93SW5mbyBpcyB0b28gc2h5
IGluIHJlcG9ydGluZyBudWxsLWlzc3VlcywgdGVtcG9yYXJpbHkgZm9yZ2V0IHJlYWNoYWJpbGl0
eToKKwkJCWlmIChyZWFjaE1vZGUgIT0gRmxvd0luZm8uUkVBQ0hBQkxFKQorCQkJCWZsb3dJbmZv
LnRhZ0JpdHMgJj0gfkZsb3dJbmZvLlVOUkVBQ0hBQkxFOworCQkJc3RhdHVzID0gZmxvd0luZm8u
bnVsbFN0YXR1cyhsb2NhbCk7CisJCX0gZmluYWxseSB7CisJCQkvLyByZXNldAorCQkJZmxvd0lu
Zm8udGFnQml0cyB8PSByZWFjaE1vZGU7CisJCX0KKwkJLy8gYXQgdGhpcyBwb2ludCBzb21lIGNv
bWJpbmF0aW9ucyBhcmUgbm90IHVzZWZ1bCBzbyBmbGF0dGVuIHRvIGEgc2luZ2xlIGJpdDoKKwkJ
aWYgKChzdGF0dXMgJiBGbG93SW5mby5OVUxMKSAhPSAwKSB7CisJCQlpZiAoKHN0YXR1cyAmIChG
bG93SW5mby5OT05fTlVMTCB8IEZsb3dJbmZvLlBPVEVOVElBTExZX05PTl9OVUxMKSkgIT0gMCkK
KwkJCQlyZXR1cm4gRmxvd0luZm8uUE9URU5USUFMTFlfTlVMTDsgCS8vIG51bGwgKyBkb3VidCA9
IHBvdCBudWxsCisJCQlyZXR1cm4gRmxvd0luZm8uTlVMTDsKKwkJfSBlbHNlIGlmICgoc3RhdHVz
ICYgRmxvd0luZm8uTk9OX05VTEwpICE9IDApIHsKKwkJCWlmICgoc3RhdHVzICYgRmxvd0luZm8u
UE9URU5USUFMTFlfTlVMTCkgIT0gMCkKKwkJCQlyZXR1cm4gRmxvd0luZm8uUE9URU5USUFMTFlf
TlVMTDsJLy8gbm9uLW51bGwgKyBkb3VidCA9IHBvdCBudWxsCisJCQlyZXR1cm4gRmxvd0luZm8u
Tk9OX05VTEw7CisJCX0gZWxzZSBpZiAoKHN0YXR1cyAmIEZsb3dJbmZvLlBPVEVOVElBTExZX05V
TEwpICE9IDApCisJCQlyZXR1cm4gRmxvd0luZm8uUE9URU5USUFMTFlfTlVMTDsKKwkJcmV0dXJu
IHN0YXR1czsKKwl9CisKKwlwdWJsaWMgaW50IG1lcmdlQ2xvc2VTdGF0dXMoQmxvY2tTY29wZSBj
dXJyZW50U2NvcGUsIGludCBzdGF0dXMsIExvY2FsVmFyaWFibGVCaW5kaW5nIGxvY2FsLCBCbG9j
a1Njb3BlIG91dGVyU2NvcGUpIHsKKwkJLy8gZ2V0IHRoZSBtb3N0IHN1aXRhYmxlIG51bGwgc3Rh
dHVzIHJlcHJlc2VudGluZyB3aGV0aGVyIHJlc291cmNlICdiaW5kaW5nJyBoYXMgYmVlbiBjbG9z
ZWQKKwkJLy8gc3RhcnQgYXQgJ2N1cnJlbnRTY29wZScgYW5kIHBvdGVudGlhbGx5IHRyYXZlbCBv
dXQgdW50aWwgJ291dGVyU2NvcGUnCisJCS8vIGF0IGVhY2ggc2NvcGUgY29uc3VsdCBhbnkgcmVj
b3JkZWQgJ2ZpbmFsbHlJbmZvJy4KKwkJaWYgKHN0YXR1cyAhPSBGbG93SW5mby5OT05fTlVMTCkg
eworCQkJaWYgKGN1cnJlbnRTY29wZS5maW5hbGx5SW5mbyAhPSBudWxsKSB7CisJCQkJaW50IGZp
bmFsbHlTdGF0dXMgPSBjdXJyZW50U2NvcGUuZmluYWxseUluZm8ubnVsbFN0YXR1cyhsb2NhbCk7
CisJCQkJaWYgKGZpbmFsbHlTdGF0dXMgPT0gRmxvd0luZm8uTk9OX05VTEwpCisJCQkJCXJldHVy
biBmaW5hbGx5U3RhdHVzOworCQkJCWlmIChmaW5hbGx5U3RhdHVzICE9IEZsb3dJbmZvLk5VTEwp
IC8vIG5laXRoZXIgaXMgTk9OX05VTEwsIGJ1dCBub3QgYm90aCBhcmUgTlVMTCA9PiBjYWxsIGl0
IFBPVEVOVElBTExZX05VTEwKKwkJCQkJc3RhdHVzID0gRmxvd0luZm8uUE9URU5USUFMTFlfTlVM
TDsKKwkJCX0KKwkJCWlmIChjdXJyZW50U2NvcGUgIT0gb3V0ZXJTY29wZSAmJiBjdXJyZW50U2Nv
cGUucGFyZW50IGluc3RhbmNlb2YgQmxvY2tTY29wZSkKKwkJCQlyZXR1cm4gbWVyZ2VDbG9zZVN0
YXR1cygoKEJsb2NrU2NvcGUpIGN1cnJlbnRTY29wZS5wYXJlbnQpLCBzdGF0dXMsIGxvY2FsLCBv
dXRlclNjb3BlKTsKKwkJfQorCQlyZXR1cm4gc3RhdHVzOwogCX0KIAogCS8qKiBNYXJrIHRoYXQg
dGhpcyByZXNvdXJjZSBpcyBjbG9zZWQgbG9jYWxseS4gKi8KQEAgLTE4MCw5ICs0NzksMTggQEAK
IAkgKiAoYXMgYXJndW1lbnQgdG8gYSBtZXRob2QvY3RvciBjYWxsIG9yIGFzIGEgcmV0dXJuIHZh
bHVlIGZyb20gdGhlIGN1cnJlbnQgbWV0aG9kKSwgCiAJICogYW5kIHRodXMgc2hvdWxkIGJlIGNv
bnNpZGVyZWQgYXMgcG90ZW50aWFsbHkgY2xvc2VkLgogCSAqLwotCXB1YmxpYyBzdGF0aWMgRmxv
d0luZm8gbWFya1Bhc3NlZFRvT3V0c2lkZShCbG9ja1Njb3BlIHNjb3BlLCBFeHByZXNzaW9uIGV4
cHJlc3Npb24sIEZsb3dJbmZvIGZsb3dJbmZvKSB7CisJcHVibGljIHN0YXRpYyBGbG93SW5mbyBt
YXJrUGFzc2VkVG9PdXRzaWRlKEJsb2NrU2NvcGUgc2NvcGUsIEV4cHJlc3Npb24gZXhwcmVzc2lv
biwgRmxvd0luZm8gZmxvd0luZm8sIFR5cGVCaW5kaW5nIGFsbG9jYXRlZFR5cGUpIHsJCisJCWlm
ICgoYWxsb2NhdGVkVHlwZSBpbnN0YW5jZW9mIFJlZmVyZW5jZUJpbmRpbmcpIC8vIG9ubHkgc2V0
IHdoZW4gY2FsbGVkIGZyb20gQWxsb2NhdGlvbkV4cHJlc3Npb24KKwkJCQkmJiAoKFJlZmVyZW5j
ZUJpbmRpbmcpIGFsbG9jYXRlZFR5cGUpLmhhc1R5cGVCaXQoVHlwZUlkcy5CaXRXcmFwcGVyQ2xv
c2VhYmxlKSkKKwkJCXJldHVybiBmbG93SW5mbzsgLy8gYWxsb2NhdGlvbiBvZiB3cmFwcGVkIGNs
b3NlYWJsZXMgaXMgYW5hbHl6ZWQgc3BlY2lhbGx5CisJCQogCQlGYWtlZFRyYWNraW5nVmFyaWFi
bGUgdHJhY2tWYXIgPSBnZXRDbG9zZVRyYWNraW5nVmFyaWFibGUoZXhwcmVzc2lvbik7CiAJCWlm
ICh0cmFja1ZhciAhPSBudWxsKSB7CisJCQlpZiAodHJhY2tWYXIub3JpZ2luYWxCaW5kaW5nID09
IG51bGwpIHsKKwkJCQkvLyBhbiBhbGxvY2F0aW9uIHRoYXQgbmV2ZXIgd2FzIGFzc2lnbmVkIHRv
IGEgbG9jYWwgdmFyaWFibGUgLT4gZHJvcCBpdCBjb21wbGV0ZWx5IGFzIHdlJ3JlIG5vdCByZXNw
b25zaWJsZQorCQkJCXNjb3BlLnJlbW92ZVRyYWNraW5nVmFyKHRyYWNrVmFyKTsKKwkJCQlyZXR1
cm4gZmxvd0luZm87CisJCQl9CiAJCQl0cmFja1Zhci5nbG9iYWxDbG9zaW5nU3RhdGUgfD0gUEFT
U0VEX1RPX09VVFNJREU7CiAJCQlpZiAoc2NvcGUubWV0aG9kU2NvcGUoKSAhPSB0cmFja1Zhci5t
ZXRob2RTY29wZSkKIAkJCQl0cmFja1Zhci5nbG9iYWxDbG9zaW5nU3RhdGUgfD0gQ0xPU0VEX0lO
X05FU1RFRF9NRVRIT0Q7CkBAIC0yMDEsOSArNTA5LDE0IEBACiAJfQogCiAJcHVibGljIGJvb2xl
YW4gcmVwb3J0UmVjb3JkZWRFcnJvcnMoU2NvcGUgc2NvcGUpIHsKLQkJaWYgKHRoaXMuZ2xvYmFs
Q2xvc2luZ1N0YXRlID09IDApIHsKLQkJCXJlcG9ydEVycm9yKHNjb3BlLnByb2JsZW1SZXBvcnRl
cigpLCBudWxsLCBGbG93SW5mby5OVUxMKTsKLQkJCXJldHVybiB0cnVlOworCQlGYWtlZFRyYWNr
aW5nVmFyaWFibGUgY3VycmVudCA9IHRoaXM7CisJCXdoaWxlICgoY3VycmVudC5nbG9iYWxDbG9z
aW5nU3RhdGUgJiBET1VCVF9NQVNLKSA9PSAwKSB7CisJCQljdXJyZW50ID0gY3VycmVudC5pbm5l
clRyYWNrZXI7CisJCQlpZiAoY3VycmVudCA9PSBudWxsKSB7CisJCQkJLy8gbm8gcmVsZXZhbnQg
c3RhdGUgZm91bmQgLT4gcmVwb3J0OgorCQkJCXJlcG9ydEVycm9yKHNjb3BlLnByb2JsZW1SZXBv
cnRlcigpLCBudWxsLCBGbG93SW5mby5OVUxMKTsKKwkJCQlyZXR1cm4gdHJ1ZTsKKwkJCX0KIAkJ
fQogCQlib29sZWFuIGhhc1JlcG9ydGVkID0gZmFsc2U7CiAJCWlmICh0aGlzLnJlY29yZGVkTG9j
YXRpb25zICE9IG51bGwpIHsKQEAgLTIxOCw2ICs1MzEsOCBAQAogCX0KIAkKIAlwdWJsaWMgdm9p
ZCByZXBvcnRFcnJvcihQcm9ibGVtUmVwb3J0ZXIgcHJvYmxlbVJlcG9ydGVyLCBBU1ROb2RlIGxv
Y2F0aW9uLCBpbnQgbnVsbFN0YXR1cykgeworCQlpZiAoKHRoaXMuZ2xvYmFsQ2xvc2luZ1N0YXRl
ICYgV1JBUFBFRCkgIT0gMCkKKwkJCXJldHVybjsKIAkJaWYgKG51bGxTdGF0dXMgPT0gRmxvd0lu
Zm8uTlVMTCkgewogCQkJaWYgKCh0aGlzLmdsb2JhbENsb3NpbmdTdGF0ZSAmIENMT1NFRF9JTl9O
RVNURURfTUVUSE9EKSAhPSAwKQogCQkJCXByb2JsZW1SZXBvcnRlci5wb3RlbnRpYWxseVVuY2xv
c2VkQ2xvc2VhYmxlKHRoaXMsIGxvY2F0aW9uKTsKQEAgLTIyNSw3ICs1NDAsNyBAQAogCQkJCXBy
b2JsZW1SZXBvcnRlci51bmNsb3NlZENsb3NlYWJsZSh0aGlzLCBsb2NhdGlvbik7CiAJCX0gZWxz
ZSBpZiAobnVsbFN0YXR1cyA9PSBGbG93SW5mby5QT1RFTlRJQUxMWV9OVUxMKSB7CiAJCQlwcm9i
bGVtUmVwb3J0ZXIucG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSh0aGlzLCBsb2NhdGlvbik7
Ci0JCX0JCQorCQl9CiAJfQogCiAJcHVibGljIHZvaWQgcmVwb3J0RXhwbGljaXRDbG9zaW5nKFBy
b2JsZW1SZXBvcnRlciBwcm9ibGVtUmVwb3J0ZXIpIHsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3Qv
TG9jYWxEZWNsYXJhdGlvbi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Mb2NhbERlY2xhcmF0aW9uLmphdmEK
aW5kZXggZGFjMDI5Yy4uMzc4MTU1MyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Mb2NhbERlY2xh
cmF0aW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Mb2NhbERlY2xhcmF0aW9uLmphdmEKQEAgLTEs
NSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAw
LCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZl
ZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1h
ZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5z
ZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2
YWlsYWJsZSBhdApAQCAtMTMsNiArMTMsNyBAQAogICoJCQkJCQkJYnVnIDMzNTA5MyAtIFtjb21w
aWxlcl1bbnVsbF0gbWluaW1hbCBob29rIGZvciBmdXR1cmUgbnVsbCBhbm5vdGF0aW9uIHN1cHBv
cnQKICAqCQkJCQkJCWJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0
cnktd2l0aC1yZXNvdXJjZXMKICAqCQkJCQkJCWJ1ZyAxODYzNDIgLSBbY29tcGlsZXJdW251bGxd
IFVzaW5nIGFubm90YXRpb25zIGZvciBudWxsIGNoZWNraW5nCisgKgkJCQkJCQlidWcgMzU4OTAz
IC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsgd2FybmluZ3MK
ICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIuYXN0OwogCkBAIC03NCwxMSArNzUsMjYgQEAKIAkJdGhpcy5pbml0aWFsaXph
dGlvbi5jaGVja05QRShjdXJyZW50U2NvcGUsIGZsb3dDb250ZXh0LCBmbG93SW5mbyk7CiAJfQog
CQorCUZsb3dJbmZvIHByZUluaXRJbmZvID0gbnVsbDsKKwlib29sZWFuIHNob3VsZEFuYWx5c2VS
ZXNvdXJjZSA9IHRoaXMuYmluZGluZyAhPSBudWxsIAorCQkJJiYgZmxvd0luZm8ucmVhY2hNb2Rl
KCkgPT0gRmxvd0luZm8uUkVBQ0hBQkxFIAorCQkJJiYgRmFrZWRUcmFja2luZ1ZhcmlhYmxlLmlz
QXV0b0Nsb3NlYWJsZSh0aGlzLmluaXRpYWxpemF0aW9uLnJlc29sdmVkVHlwZSk7CisJaWYgKHNo
b3VsZEFuYWx5c2VSZXNvdXJjZSkgeworCQlwcmVJbml0SW5mbyA9IGZsb3dJbmZvLnVuY29uZGl0
aW9uYWxDb3B5KCk7CisJCS8vIGFuYWx5c2lzIG9mIHJlc291cmNlIGxlYWtzIG5lZWRzIGFkZGl0
aW9uYWwgY29udGV4dCB3aGlsZSBhbmFseXppbmcgdGhlIFJIUzoKKwkJRmFrZWRUcmFja2luZ1Zh
cmlhYmxlLnByZUNvbm5lY3RUcmFja2VyQWNyb3NzQXNzaWdubWVudCh0aGlzLCB0aGlzLmJpbmRp
bmcsIHRoaXMuaW5pdGlhbGl6YXRpb24pOworCX0KKwogCWZsb3dJbmZvID0KIAkJdGhpcy5pbml0
aWFsaXphdGlvbgogCQkJLmFuYWx5c2VDb2RlKGN1cnJlbnRTY29wZSwgZmxvd0NvbnRleHQsIGZs
b3dJbmZvKQogCQkJLnVuY29uZGl0aW9uYWxJbml0cygpOwotCUZha2VkVHJhY2tpbmdWYXJpYWJs
ZS5oYW5kbGVSZXNvdXJjZUFzc2lnbm1lbnQoZmxvd0luZm8sIHRoaXMsIHRoaXMuaW5pdGlhbGl6
YXRpb24sIHRoaXMuYmluZGluZywgbnVsbCk7CisKKwlpZiAoc2hvdWxkQW5hbHlzZVJlc291cmNl
KQorCQlGYWtlZFRyYWNraW5nVmFyaWFibGUuaGFuZGxlUmVzb3VyY2VBc3NpZ25tZW50KHByZUlu
aXRJbmZvLCBmbG93SW5mbywgdGhpcywgdGhpcy5pbml0aWFsaXphdGlvbiwgdGhpcy5iaW5kaW5n
KTsKKwllbHNlCisJCUZha2VkVHJhY2tpbmdWYXJpYWJsZS5jbGVhblVwQWZ0ZXJBc3NpZ25tZW50
KGN1cnJlbnRTY29wZSwgQmluZGluZy5MT0NBTCwgdGhpcy5pbml0aWFsaXphdGlvbik7CisKIAlp
bnQgbnVsbFN0YXR1cyA9IHRoaXMuaW5pdGlhbGl6YXRpb24ubnVsbFN0YXR1cyhmbG93SW5mbyk7
CiAJaWYgKCFmbG93SW5mby5pc0RlZmluaXRlbHlBc3NpZ25lZCh0aGlzLmJpbmRpbmcpKXsvLyBm
b3IgbG9jYWwgdmFyaWFibGUgZGVidWcgYXR0cmlidXRlcwogCQl0aGlzLmJpdHMgfD0gRmlyc3RB
c3NpZ25tZW50VG9Mb2NhbDsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTWVzc2FnZVNlbmQuamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9hc3QvTWVzc2FnZVNlbmQuamF2YQppbmRleCA0NmQ0NTQwLi40YjMxMWY5IDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXN0L01lc3NhZ2VTZW5kLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9N
ZXNzYWdlU2VuZC5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioK
LSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
KyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
ICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWlu
ZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhl
IEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBk
aXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTEyLDYgKzEyLDcgQEAKICAqCQkJ
CQkJCQlidWcgMzE5MjAxIC0gW251bGxdIG5vIHdhcm5pbmcgd2hlbiB1bmJveGluZyBTaW5nbGVO
YW1lUmVmZXJlbmNlIGNhdXNlcyBOUEUKICAqCQkJCQkJCQlidWcgMzQ5MzI2IC0gWzEuN10gbmV3
IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCiAgKgkJCQkJCQkJYnVnIDE4
NjM0MiAtIFtjb21waWxlcl1bbnVsbF0gVXNpbmcgYW5ub3RhdGlvbnMgZm9yIG51bGwgY2hlY2tp
bmcKKyAqCQkJCQkJCQlidWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50
IHJlc291cmNlIGxlYWsgd2FybmluZ3MKICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2Fn
ZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0OwogCkBAIC05Niw5ICs5Nyw5
IEBACiAJCQlpZiAoKHRoaXMuYXJndW1lbnRzW2ldLmltcGxpY2l0Q29udmVyc2lvbiAmIFR5cGVJ
ZHMuVU5CT1hJTkcpICE9IDApIHsKIAkJCQl0aGlzLmFyZ3VtZW50c1tpXS5jaGVja05QRShjdXJy
ZW50U2NvcGUsIGZsb3dDb250ZXh0LCBmbG93SW5mbyk7CiAJCQl9Ci0JCQkvLyBpZiBhcmd1bWVu
dCBpcyBhbiBBdXRvQ2xvc2VhYmxlIGluc2VydCBpbmZvIHRoYXQgaXQgKm1heSogYmUgY2xvc2Vk
IChieSB0aGUgdGFyZ2V0IG1ldGhvZCwgaS5lLikKLQkJCWZsb3dJbmZvID0gRmFrZWRUcmFja2lu
Z1ZhcmlhYmxlLm1hcmtQYXNzZWRUb091dHNpZGUoY3VycmVudFNjb3BlLCB0aGlzLmFyZ3VtZW50
c1tpXSwgZmxvd0luZm8pOwogCQkJZmxvd0luZm8gPSB0aGlzLmFyZ3VtZW50c1tpXS5hbmFseXNl
Q29kZShjdXJyZW50U2NvcGUsIGZsb3dDb250ZXh0LCBmbG93SW5mbykudW5jb25kaXRpb25hbElu
aXRzKCk7CisJCQkvLyBpZiBhcmd1bWVudCBpcyBhbiBBdXRvQ2xvc2VhYmxlIGluc2VydCBpbmZv
IHRoYXQgaXQgKm1heSogYmUgY2xvc2VkIChieSB0aGUgdGFyZ2V0IG1ldGhvZCwgaS5lLikKKwkJ
CWZsb3dJbmZvID0gRmFrZWRUcmFja2luZ1ZhcmlhYmxlLm1hcmtQYXNzZWRUb091dHNpZGUoY3Vy
cmVudFNjb3BlLCB0aGlzLmFyZ3VtZW50c1tpXSwgZmxvd0luZm8sIG51bGwpOwogCQl9CiAJCWFu
YWx5c2VBcmd1bWVudHMoY3VycmVudFNjb3BlLCBmbG93Q29udGV4dCwgZmxvd0luZm8sIHRoaXMu
YmluZGluZywgdGhpcy5hcmd1bWVudHMpOwogCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvUXVh
bGlmaWVkQWxsb2NhdGlvbkV4cHJlc3Npb24uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvUXVhbGlmaWVkQWxs
b2NhdGlvbkV4cHJlc3Npb24uamF2YQppbmRleCAzYTJhMGVkLi4wYmQwNWY1IDEwMDY0NAotLS0g
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvYXN0L1F1YWxpZmllZEFsbG9jYXRpb25FeHByZXNzaW9uLmphdmEKKysrIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2FzdC9RdWFsaWZpZWRBbGxvY2F0aW9uRXhwcmVzc2lvbi5qYXZhCkBAIC0xLDUgKzEsNSBA
QAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJ
Qk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJ
Qk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMg
cHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWls
YWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAog
ICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUg
YXQKQEAgLTExLDYgKzExLDcgQEAKICAqICAgICAJCQkJCQkJYnVnIDMxOTIwMSAtIFtudWxsXSBu
byB3YXJuaW5nIHdoZW4gdW5ib3hpbmcgU2luZ2xlTmFtZVJlZmVyZW5jZSBjYXVzZXMgTlBFCiAg
KiAgICAgCQkJCQkJCWJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0
cnktd2l0aC1yZXNvdXJjZXMKICAqCQkJCQkJCQlidWcgMTg2MzQyIC0gW2NvbXBpbGVyXVtudWxs
XSBVc2luZyBhbm5vdGF0aW9ucyBmb3IgbnVsbCBjaGVja2luZworICoJCQkJCQkJCWJ1ZyAzNTg5
MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5n
cwogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5hc3Q7CiAKQEAgLTgxLDcgKzgyLDcgQEAKIAkJaWYgKHRoaXMuYXJndW1l
bnRzICE9IG51bGwpIHsKIAkJCWZvciAoaW50IGkgPSAwLCBjb3VudCA9IHRoaXMuYXJndW1lbnRz
Lmxlbmd0aDsgaSA8IGNvdW50OyBpKyspIHsKIAkJCQkvLyBpZiBhcmd1bWVudCBpcyBhbiBBdXRv
Q2xvc2VhYmxlIGluc2VydCBpbmZvIHRoYXQgaXQgKm1heSogYmUgY2xvc2VkIChieSB0aGUgdGFy
Z2V0IG1ldGhvZCwgaS5lLikKLQkJCQlmbG93SW5mbyA9IEZha2VkVHJhY2tpbmdWYXJpYWJsZS5t
YXJrUGFzc2VkVG9PdXRzaWRlKGN1cnJlbnRTY29wZSwgdGhpcy5hcmd1bWVudHNbaV0sIGZsb3dJ
bmZvKTsKKwkJCQlmbG93SW5mbyA9IEZha2VkVHJhY2tpbmdWYXJpYWJsZS5tYXJrUGFzc2VkVG9P
dXRzaWRlKGN1cnJlbnRTY29wZSwgdGhpcy5hcmd1bWVudHNbaV0sIGZsb3dJbmZvLCBudWxsKTsK
IAkJCQlmbG93SW5mbyA9IHRoaXMuYXJndW1lbnRzW2ldLmFuYWx5c2VDb2RlKGN1cnJlbnRTY29w
ZSwgZmxvd0NvbnRleHQsIGZsb3dJbmZvKTsKIAkJCQlpZiAoKHRoaXMuYXJndW1lbnRzW2ldLmlt
cGxpY2l0Q29udmVyc2lvbiAmIFR5cGVJZHMuVU5CT1hJTkcpICE9IDApIHsKIAkJCQkJdGhpcy5h
cmd1bWVudHNbaV0uY2hlY2tOUEUoY3VycmVudFNjb3BlLCBmbG93Q29udGV4dCwgZmxvd0luZm8p
OwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9TaW5nbGVOYW1lUmVmZXJlbmNlLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L1NpbmdsZU5hbWVSZWZlcmVuY2UuamF2YQppbmRleCBkNjI1ZDViLi40MTM4NWMxIDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXN0L1NpbmdsZU5hbWVSZWZlcmVuY2UuamF2YQorKysgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L1NpbmdsZU5hbWVSZWZlcmVuY2UuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJNIENvcnBvcmF0
aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJNIENvcnBvcmF0
aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5k
IHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIg
dGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFj
Y29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CmRpZmYgLS1n
aXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvYXN0L1RyeVN0YXRlbWVudC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9UcnlTdGF0ZW1l
bnQuamF2YQppbmRleCA5ZmFlMDA5Li4wNTM0OTcwIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1Ry
eVN0YXRlbWVudC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvVHJ5U3RhdGVtZW50LmphdmEKQEAgLTEy
LDYgKzEyLDcgQEAKICAqICAgICAJCQkJCQkJYnVnIDM1ODgyNyAtIFsxLjddIGV4Y2VwdGlvbiBh
bmFseXNpcyBmb3IgdC13LXIgc3BvaWxzIG51bGwgYW5hbHlzaXMKICAqICAgICAJCQkJCQkJYnVn
IDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNl
cwogICogICAgIAkJCQkJCQlidWcgMzU5MzM0IC0gQW5hbHlzaXMgZm9yIHJlc291cmNlIGxlYWsg
d2FybmluZ3MgZG9lcyBub3QgY29uc2lkZXIgZXhjZXB0aW9ucyBhcyBtZXRob2QgZXhpdCBwb2lu
dHMKKyAqCQkJCQkJCQlidWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50
IHJlc291cmNlIGxlYWsgd2FybmluZ3MKICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2Fn
ZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0OwogCkBAIC0xMzQsNyArMTM1
LDcgQEAKIAkJCWlmIChyZXNvdXJjZUJpbmRpbmcuY2xvc2VUcmFja2VyICE9IG51bGwpIHsKIAkJ
CQkvLyB0aGlzIHdhcyBmYWxzZSBhbGFybSwgd2UgZG9uJ3QgbmVlZCB0byB0cmFjayB0aGUgcmVz
b3VyY2UKIAkJCQl0aGlzLnRyeUJsb2NrLnNjb3BlLnJlbW92ZVRyYWNraW5nVmFyKHJlc291cmNl
QmluZGluZy5jbG9zZVRyYWNrZXIpOwotCQkJCXJlc291cmNlQmluZGluZy5jbG9zZVRyYWNrZXIg
PSBudWxsOworCQkJCS8vIGtlZXAgdGhlIHRyYWNraW5nIHZhcmlhYmxlIGluIHRoZSByZXNvdXJj
ZUJpbmRpbmcgaW4gb3JkZXIgdG8gcHJldmVudCBjcmVhdGluZyBhIG5ldyBvbmUgd2hpbGUgYW5h
bHl6aW5nIHRoZSB0cnkgYmxvY2sKIAkJCX0KIAkJCVR5cGVCaW5kaW5nIHR5cGUgPSByZXNvdXJj
ZUJpbmRpbmcudHlwZTsKIAkJCWlmICh0eXBlICE9IG51bGwgJiYgdHlwZS5pc1ZhbGlkQmluZGlu
ZygpKSB7CkBAIC0yNzYsNyArMjc3LDcgQEAKIAkJCWlmIChyZXNvdXJjZUJpbmRpbmcuY2xvc2VU
cmFja2VyICE9IG51bGwpIHsKIAkJCQkvLyB0aGlzIHdhcyBmYWxzZSBhbGFybSwgd2UgZG9uJ3Qg
bmVlZCB0byB0cmFjayB0aGUgcmVzb3VyY2UKIAkJCQl0aGlzLnRyeUJsb2NrLnNjb3BlLnJlbW92
ZVRyYWNraW5nVmFyKHJlc291cmNlQmluZGluZy5jbG9zZVRyYWNrZXIpOwotCQkJCXJlc291cmNl
QmluZGluZy5jbG9zZVRyYWNrZXIgPSBudWxsOworCQkJCS8vIGtlZXAgdGhlIHRyYWNraW5nIHZh
cmlhYmxlIGluIHRoZSByZXNvdXJjZUJpbmRpbmcgaW4gb3JkZXIgdG8gcHJldmVudCBjcmVhdGlu
ZyBhIG5ldyBvbmUgd2hpbGUgYW5hbHl6aW5nIHRoZSB0cnkgYmxvY2sKIAkJCX0gCiAJCQlUeXBl
QmluZGluZyB0eXBlID0gcmVzb3VyY2VCaW5kaW5nLnR5cGU7CiAJCQlpZiAodHlwZSAhPSBudWxs
ICYmIHR5cGUuaXNWYWxpZEJpbmRpbmcoKSkgewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9C
aW5hcnlUeXBlQmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CaW5hcnlUeXBlQmluZGluZy5q
YXZhCmluZGV4IDkyOTQ3MjYuLmRlMTdjMDcgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQmlu
YXJ5VHlwZUJpbmRpbmcuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0JpbmFyeVR5cGVCaW5kaW5n
LmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJp
Z2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFs
cwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQ
dWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlv
biwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtMTEsNiArMTEsNyBAQAogICoJCQkJCQkJCWJ1ZyAz
NDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNvdXJjZXMK
ICAqCQkJCQkJCQlidWcgMTg2MzQyIC0gW2NvbXBpbGVyXVtudWxsXSBVc2luZyBhbm5vdGF0aW9u
cyBmb3IgbnVsbCBjaGVja2luZwogICoJCQkJCQkJCWJ1ZyAzNjQ4OTAgLSBCaW5hcnlUeXBlQmlu
ZGluZyBzaG91bGQgdXNlIGNoYXIgY29uc3RhbnRzIGZyb20gVXRpbAorICoJCQkJCQkJCWJ1ZyAz
NTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJu
aW5ncwogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb21waWxlci5sb29rdXA7CiAKQEAgLTEyNzUsNyArMTI3Niw5IEBACiAJCQl0aGlz
LmVudmlyb25tZW50Lm1heVRvbGVyYXRlTWlzc2luZ1R5cGUgPSB3YXNUb2xlcmF0aW5nTWlzc2lu
Z1R5cGVQcm9jZXNzaW5nQW5ub3RhdGlvbnM7CiAJCX0KIAl9Ci0JdGhpcy50eXBlQml0cyB8PSB0
aGlzLnN1cGVyY2xhc3MudHlwZUJpdHM7CisJdGhpcy50eXBlQml0cyB8PSAodGhpcy5zdXBlcmNs
YXNzLnR5cGVCaXRzICYgVHlwZUlkcy5Jbmhlcml0YWJsZUJpdHMpOworCWlmICgodGhpcy50eXBl
Qml0cyAmIChUeXBlSWRzLkJpdEF1dG9DbG9zZWFibGV8VHlwZUlkcy5CaXRDbG9zZWFibGUpKSAh
PSAwKSAvLyBhdm9pZCB0aGUgc2lkZS1lZmZlY3RzIG9mIGhhc1R5cGVCaXQoKSEgCisJCXRoaXMu
dHlwZUJpdHMgfD0gYXBwbHlDbG9zZWFibGVXaGl0ZWxpc3RzKCk7CiAJcmV0dXJuIHRoaXMuc3Vw
ZXJjbGFzczsKIH0KIC8vIE5PVEU6IHN1cGVySW50ZXJmYWNlcyBvZiBiaW5hcnkgdHlwZXMgYXJl
IHJlc29sdmVkIHdoZW4gbmVlZGVkCkBAIC0xMjk4LDcgKzEzMDEsNyBAQAogCQkJCXRoaXMuZW52
aXJvbm1lbnQubWF5VG9sZXJhdGVNaXNzaW5nVHlwZSA9IHdhc1RvbGVyYXRpbmdNaXNzaW5nVHlw
ZVByb2Nlc3NpbmdBbm5vdGF0aW9uczsKIAkJCX0JCiAJCX0KLQkJdGhpcy50eXBlQml0cyB8PSB0
aGlzLnN1cGVySW50ZXJmYWNlc1tpXS50eXBlQml0czsKKwkJdGhpcy50eXBlQml0cyB8PSAodGhp
cy5zdXBlckludGVyZmFjZXNbaV0udHlwZUJpdHMgJiBUeXBlSWRzLkluaGVyaXRhYmxlQml0cyk7
CiAJfQogCXRoaXMudGFnQml0cyAmPSB+VGFnQml0cy5IYXNVbnJlc29sdmVkU3VwZXJpbnRlcmZh
Y2VzOwogCXJldHVybiB0aGlzLnN1cGVySW50ZXJmYWNlczsKZGlmZiAtLWdpdCBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9s
b29rdXAvQmxvY2tTY29wZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CbG9ja1Njb3BlLmphdmEKaW5k
ZXggYzkzYzlkOS4uMTg5MDMxNSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CbG9ja1Njb3Bl
LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CbG9ja1Njb3BlLmphdmEKQEAgLTEsNSArMSw1IEBA
CiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBw
cm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxh
YmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAg
KiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBh
dApAQCAtMTAsNiArMTAsNyBAQAogICogICAgIFN0ZXBoYW4gSGVycm1hbm4gLSBDb250cmlidXRp
b25zIGZvcgogICogICAgIAkJCQkJCQlidWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9y
IG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCiAgKgkJCQkJCQkJYnVnIDM1OTMzNCAtIEFuYWx5
c2lzIGZvciByZXNvdXJjZSBsZWFrIHdhcm5pbmdzIGRvZXMgbm90IGNvbnNpZGVyIGV4Y2VwdGlv
bnMgYXMgbWV0aG9kIGV4aXQgcG9pbnRzCisgKgkJCQkJCQkJYnVnIDM1ODkwMyAtIEZpbHRlciBw
cmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCiAgKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
Lmxvb2t1cDsKIApAQCAtOTgxLDYgKzk4MiwxMCBAQAogfQogLyoqIFdoZW4gYXJlIG5vIGxvbmdl
ciBpbnRlcmVzdGVkIGluIHRoaXMgdHJhY2tpbmcgdmFyaWFibGUgLSByZW1vdmUgaXQuICovCiBw
dWJsaWMgdm9pZCByZW1vdmVUcmFja2luZ1ZhcihGYWtlZFRyYWNraW5nVmFyaWFibGUgdHJhY2tp
bmdWYXJpYWJsZSkgeworCWlmICh0cmFja2luZ1ZhcmlhYmxlLmlubmVyVHJhY2tlciAhPSBudWxs
KSB7CisJCXJlbW92ZVRyYWNraW5nVmFyKHRyYWNraW5nVmFyaWFibGUuaW5uZXJUcmFja2VyKTsK
KwkJdHJhY2tpbmdWYXJpYWJsZS5pbm5lclRyYWNrZXIgPSBudWxsOworCX0KIAlpZiAodGhpcy50
cmFja2luZ1ZhcmlhYmxlcyAhPSBudWxsKQogCQlpZiAodGhpcy50cmFja2luZ1ZhcmlhYmxlcy5y
ZW1vdmUodHJhY2tpbmdWYXJpYWJsZSkpCiAJCQlyZXR1cm47CkBAIC0xMDAzLDEwICsxMDA4LDEw
IEBACiAJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSB0cmFja2luZ1ZhciA9IChGYWtlZFRyYWNraW5n
VmFyaWFibGUpIHRoaXMudHJhY2tpbmdWYXJpYWJsZXMuZ2V0KGkpOwogCQlpZiAobG9jYXRpb24g
IT0gbnVsbCAmJiB0cmFja2luZ1Zhci5vcmlnaW5hbEJpbmRpbmcgIT0gbnVsbCAmJiBmbG93SW5m
by5pc0RlZmluaXRlbHlOdWxsKHRyYWNraW5nVmFyLm9yaWdpbmFsQmluZGluZykpCiAJCQljb250
aW51ZTsgLy8gcmVwb3J0aW5nIGFnYWluc3QgYSBzcGVjaWZpYyBsb2NhdGlvbiwgcmVzb3VyY2Ug
aXMgbnVsbCBhdCB0aGlzIGZsb3csIGRvbid0IGNvbXBsYWluCi0JCWludCBzdGF0dXMgPSBnZXRO
dWxsU3RhdHVzQWdncmVzc2l2ZWx5KHRyYWNraW5nVmFyLmJpbmRpbmcsIGZsb3dJbmZvKTsKLQkJ
Ly8gdHJ5IHRvIGltcHJvdmUgaW5mbyBpZiBhIGNsb3NlKCkgaW5zaWRlIGZpbmFsbHkgd2FzIG9i
c2VydmVkOgotCQlpZiAobG9jYXRpb25TY29wZSAhPSBudWxsKSAvLyBvbmx5IGNoZWNrIGF0IG1l
dGhvZCBleGl0IHBvaW50cwotCQkJc3RhdHVzID0gbG9jYXRpb25TY29wZS5tZXJnZUNsb3NlU3Rh
dHVzKHN0YXR1cywgdHJhY2tpbmdWYXIuYmluZGluZywgdGhpcyk7CisJCQorCQkvLyBjb21wdXRl
IHRoZSBtb3N0IHNwZWNpZmljIG51bGwgc3RhdHVzIGZvciB0aGlzIHJlc291cmNlLAorCQlpbnQg
c3RhdHVzID0gdHJhY2tpbmdWYXIuZmluZE1vc3RTcGVjaWZpY1N0YXR1cyhmbG93SW5mbywgdGhp
cywgbG9jYXRpb25TY29wZSk7CisJCQogCQlpZiAoc3RhdHVzID09IEZsb3dJbmZvLk5VTEwpIHsK
IAkJCS8vIGRlZmluaXRlbHkgdW5jbG9zZWQ6IGhpZ2hlc3QgcHJpb3JpdHkKIAkJCXJlcG9ydFJl
c291cmNlTGVhayh0cmFja2luZ1ZhciwgbG9jYXRpb24sIHN0YXR1cyk7CkBAIC0xMDMzLDI0ICsx
MDM4LDYgQEAKIAkJCXRoaXMubG9jYWxzW2ldLmNsb3NlVHJhY2tlciA9IG51bGw7CQkKIAkJdGhp
cy50cmFja2luZ1ZhcmlhYmxlcyA9IG51bGw7CiAJfQotfQotCi1wcml2YXRlIGludCBtZXJnZUNs
b3NlU3RhdHVzKGludCBzdGF0dXMsIExvY2FsVmFyaWFibGVCaW5kaW5nIGJpbmRpbmcsIEJsb2Nr
U2NvcGUgb3V0ZXJTY29wZSkgewotCS8vIGdldCB0aGUgbW9zdCBzdWl0YWJsZSBudWxsIHN0YXR1
cyByZXByZXNlbnRpbmcgd2hldGhlciByZXNvdXJjZSAnYmluZGluZycgaGFzIGJlZW4gY2xvc2Vk
Ci0JLy8gc3RhcnQgYXQgdGhpcyBzY29wZSBhbmQgcG90ZW50aWFsbHkgdHJhdmVsIG91dCB1bnRp
bCAnb3V0ZXJTY29wZScKLQkvLyBhdCBlYWNoIHNjb3BlIGNvbnN1bHQgYW55IHJlY29yZGVkICdm
aW5hbGx5SW5mbycuCi0JaWYgKHN0YXR1cyAhPSBGbG93SW5mby5OT05fTlVMTCkgewotCQlpZiAo
dGhpcy5maW5hbGx5SW5mbyAhPSBudWxsKSB7Ci0JCQlpbnQgZmluYWxseVN0YXR1cyA9IHRoaXMu
ZmluYWxseUluZm8ubnVsbFN0YXR1cyhiaW5kaW5nKTsKLQkJCWlmIChmaW5hbGx5U3RhdHVzID09
IEZsb3dJbmZvLk5PTl9OVUxMKQotCQkJCXJldHVybiBmaW5hbGx5U3RhdHVzOwotCQkJaWYgKGZp
bmFsbHlTdGF0dXMgIT0gRmxvd0luZm8uTlVMTCkgLy8gbmVpdGhlciBpcyBOT05fTlVMTCwgYnV0
IG5vdCBib3RoIGFyZSBOVUxMID0+IGNhbGwgaXQgUE9URU5USUFMTFlfTlVMTAotCQkJCXN0YXR1
cyA9IEZsb3dJbmZvLlBPVEVOVElBTExZX05VTEw7Ci0JCX0KLQkJaWYgKHRoaXMgIT0gb3V0ZXJT
Y29wZSAmJiB0aGlzLnBhcmVudCBpbnN0YW5jZW9mIEJsb2NrU2NvcGUpCi0JCQlyZXR1cm4gKChC
bG9ja1Njb3BlKSB0aGlzLnBhcmVudCkubWVyZ2VDbG9zZVN0YXR1cyhzdGF0dXMsIGJpbmRpbmcs
IG91dGVyU2NvcGUpOwotCX0KLQlyZXR1cm4gc3RhdHVzOwogfQogCiBwcml2YXRlIHZvaWQgcmVw
b3J0UmVzb3VyY2VMZWFrKEZha2VkVHJhY2tpbmdWYXJpYWJsZSB0cmFja2luZ1ZhciwgQVNUTm9k
ZSBsb2NhdGlvbiwgaW50IG51bGxTdGF0dXMpIHsKQEAgLTEwODMsNiArMTA3MCw4IEBACiAJaWYg
KHRoaXMudHJhY2tpbmdWYXJpYWJsZXMgIT0gbnVsbCkgewogCQlmb3IgKGludCBpPTA7IGk8dGhp
cy50cmFja2luZ1ZhcmlhYmxlcy5zaXplKCk7IGkrKykgewogCQkJRmFrZWRUcmFja2luZ1Zhcmlh
YmxlIHRyYWNraW5nVmFyID0gKEZha2VkVHJhY2tpbmdWYXJpYWJsZSkgdGhpcy50cmFja2luZ1Zh
cmlhYmxlcy5nZXQoaSk7CisJCQlpZiAodHJhY2tpbmdWYXIub3JpZ2luYWxCaW5kaW5nID09IG51
bGwpCisJCQkJY29udGludWU7CiAJCQlpZiAoICAgdGhlbkZsb3dJbmZvLmlzRGVmaW5pdGVseU5v
bk51bGwodHJhY2tpbmdWYXIuYmluZGluZykJCQkvLyBjbG9zZWQgaW4gdGhlbiBicmFuY2gKIAkJ
CQkmJiBlbHNlRmxvd0luZm8uaXNEZWZpbml0ZWx5TnVsbCh0cmFja2luZ1Zhci5vcmlnaW5hbEJp
bmRpbmcpKQkJLy8gbnVsbCBpbiBlbHNlIGJyYW5jaAogCQkJewpAQCAtMTA5NywzNyArMTA4Niw1
IEBACiAJfQogCWlmICh0aGlzLnBhcmVudCBpbnN0YW5jZW9mIEJsb2NrU2NvcGUpCiAJCSgoQmxv
Y2tTY29wZSkgdGhpcy5wYXJlbnQpLmNvcnJlbGF0ZVRyYWNraW5nVmFyc0lmRWxzZSh0aGVuRmxv
d0luZm8sIGVsc2VGbG93SW5mbyk7Ci19Ci0KLS8qKgotICogR2V0IHRoZSBudWxsIHN0YXR1cyBs
b29raW5nIGV2ZW4gaW50byB1bnJlYWNoYWJsZSBmbG93cwotICogQHBhcmFtIGxvY2FsCi0gKiBA
cGFyYW0gZmxvd0luZm8KLSAqIEByZXR1cm4gb25lIG9mIHRoZSBjb25zdGFudHMgRmxvd0luZm8u
e05VTEwsUE9URU5USUFMTFlfTlVMTCxQT1RFTlRJQUxMWV9OT05fTlVMTCxOT05fTlVMTH0uCi0g
Ki8KLXByaXZhdGUgaW50IGdldE51bGxTdGF0dXNBZ2dyZXNzaXZlbHkoTG9jYWxWYXJpYWJsZUJp
bmRpbmcgbG9jYWwsIEZsb3dJbmZvIGZsb3dJbmZvKSB7Ci0JaW50IHJlYWNoTW9kZSA9IGZsb3dJ
bmZvLnJlYWNoTW9kZSgpOwotCWludCBzdGF0dXMgPSAwOwotCXRyeSB7Ci0JCS8vIHVucmVhY2hh
YmxlIGZsb3dJbmZvIGlzIHRvbyBzaHkgaW4gcmVwb3J0aW5nIG51bGwtaXNzdWVzLCB0ZW1wb3Jh
cmlseSBmb3JnZXQgcmVhY2hhYmlsaXR5OgotCQlpZiAocmVhY2hNb2RlICE9IEZsb3dJbmZvLlJF
QUNIQUJMRSkKLQkJCWZsb3dJbmZvLnRhZ0JpdHMgJj0gfkZsb3dJbmZvLlVOUkVBQ0hBQkxFOwot
CQlzdGF0dXMgPSBmbG93SW5mby5udWxsU3RhdHVzKGxvY2FsKTsKLQl9IGZpbmFsbHkgewotCQkv
LyByZXNldAotCQlmbG93SW5mby50YWdCaXRzIHw9IHJlYWNoTW9kZTsKLQl9Ci0JLy8gYXQgdGhp
cyBwb2ludCBzb21lIGNvbWJpbmF0aW9ucyBhcmUgbm90IHVzZWZ1bCBzbyBmbGF0dGVuIHRvIGEg
c2luZ2xlIGJpdDoKLQlpZiAoKHN0YXR1cyAmIEZsb3dJbmZvLk5VTEwpICE9IDApIHsKLQkJaWYg
KChzdGF0dXMgJiAoRmxvd0luZm8uTk9OX05VTEwgfCBGbG93SW5mby5QT1RFTlRJQUxMWV9OT05f
TlVMTCkpICE9IDApCi0JCQlyZXR1cm4gRmxvd0luZm8uUE9URU5USUFMTFlfTlVMTDsgCS8vIG51
bGwgKyBkb3VidCA9IHBvdCBudWxsCi0JCXJldHVybiBGbG93SW5mby5OVUxMOwotCX0gZWxzZSBp
ZiAoKHN0YXR1cyAmIEZsb3dJbmZvLk5PTl9OVUxMKSAhPSAwKSB7Ci0JCWlmICgoc3RhdHVzICYg
Rmxvd0luZm8uUE9URU5USUFMTFlfTlVMTCkgIT0gMCkKLQkJCXJldHVybiBGbG93SW5mby5QT1RF
TlRJQUxMWV9OVUxMOwkvLyBub24tbnVsbCArIGRvdWJ0ID0gcG90IG51bGwKLQkJcmV0dXJuIEZs
b3dJbmZvLk5PTl9OVUxMOwotCX0gZWxzZSBpZiAoKHN0YXR1cyAmIEZsb3dJbmZvLlBPVEVOVElB
TExZX05VTEwpICE9IDApCi0JCXJldHVybiBGbG93SW5mby5QT1RFTlRJQUxMWV9OVUxMOwotCXJl
dHVybiBzdGF0dXM7CiB9CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0NsYXNzU2NvcGUu
amF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9sb29rdXAvQ2xhc3NTY29wZS5qYXZhCmluZGV4IDNlYjNjY2EuLjg3Nzhj
NmIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQ2xhc3NTY29wZS5qYXZhCisrKyBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9sb29rdXAvQ2xhc3NTY29wZS5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFj
Y29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVy
bXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5p
ZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTEyLDYgKzEyLDcg
QEAKICAqICAgICAJCQkJCQlCdWcgMzAwNTc2IC0gTlBFIENvbXB1dGluZyB0eXBlIGhpZXJhcmNo
eSB3aGVuIGNvbXBsaWFuY2UgZG9lc24ndCBtYXRjaCBsaWJyYXJpZXMKICAqICAgICAJCQkJCQlC
dWcgMzU0NTM2IC0gY29tcGlsaW5nIHBhY2thZ2UtaW5mby5qYXZhIHN0aWxsIGRlcGVuZHMgb24g
dGhlIG9yZGVyIG9mIGNvbXBpbGF0aW9uIHVuaXRzCiAgKiAgICAgCQkJCQkJQnVnIDM0OTMyNiAt
IFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNlcworICogICAg
IAkJCQkJCUJ1ZyAzNTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3Vy
Y2UgbGVhayB3YXJuaW5ncwogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXA7CiAKQEAgLTkwOSw3ICs5MTAsMTAg
QEAKIAkJCX0gZWxzZSB7CiAJCQkJLy8gb25seSB3YW50IHRvIHJlYWNoIGhlcmUgd2hlbiBubyBl
cnJvcnMgYXJlIHJlcG9ydGVkCiAJCQkJc291cmNlVHlwZS5zdXBlcmNsYXNzID0gc3VwZXJjbGFz
czsKLQkJCQlzb3VyY2VUeXBlLnR5cGVCaXRzIHw9IHN1cGVyY2xhc3MudHlwZUJpdHM7CisJCQkJ
c291cmNlVHlwZS50eXBlQml0cyB8PSAoc3VwZXJjbGFzcy50eXBlQml0cyAmIFR5cGVJZHMuSW5o
ZXJpdGFibGVCaXRzKTsKKwkJCQkvLyBmdXJ0aGVyIGFuYWx5c2lzIGFnYWluc3Qgd2hpdGUgbGlz
dHMgZm9yIHRoZSB1bmxpa2VseSBjYXNlIHdlIGFyZSBjb21waWxpbmcgamF2YS5pby4qOgorCQkJ
CWlmICgoc291cmNlVHlwZS50eXBlQml0cyAmIChUeXBlSWRzLkJpdEF1dG9DbG9zZWFibGV8VHlw
ZUlkcy5CaXRDbG9zZWFibGUpKSAhPSAwKQorCQkJCQlzb3VyY2VUeXBlLnR5cGVCaXRzIHw9IHNv
dXJjZVR5cGUuYXBwbHlDbG9zZWFibGVXaGl0ZWxpc3RzKCk7CiAJCQkJcmV0dXJuIHRydWU7CiAJ
CQl9CiAJCX0KQEAgLTEwMjUsNyArMTAyOSw3IEBACiAJCQkJbm9Qcm9ibGVtcyAmPSBzdXBlcklu
dGVyZmFjZVJlZi5yZXNvbHZlZFR5cGUuaXNWYWxpZEJpbmRpbmcoKTsKIAkJCX0KIAkJCS8vIG9u
bHkgd2FudCB0byByZWFjaCBoZXJlIHdoZW4gbm8gZXJyb3JzIGFyZSByZXBvcnRlZAotCQkJc291
cmNlVHlwZS50eXBlQml0cyB8PSBzdXBlckludGVyZmFjZS50eXBlQml0czsKKwkJCXNvdXJjZVR5
cGUudHlwZUJpdHMgfD0gKHN1cGVySW50ZXJmYWNlLnR5cGVCaXRzICYgVHlwZUlkcy5Jbmhlcml0
YWJsZUJpdHMpOwogCQkJaW50ZXJmYWNlQmluZGluZ3NbY291bnQrK10gPSBzdXBlckludGVyZmFj
ZTsKIAkJfQogCQkvLyBob2xkIG9udG8gYWxsIGNvcnJlY3RseSByZXNvbHZlZCBzdXBlcmludGVy
ZmFjZXMKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvUmVmZXJlbmNlQmluZGluZy5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9SZWZlcmVuY2VCaW5kaW5nLmphdmEKaW5kZXggNzVkZTg1NC4uMGQ4MmY2
YyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9SZWZlcmVuY2VCaW5kaW5nLmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9SZWZlcmVuY2VCaW5kaW5nLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jw
b3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jw
b3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFt
IGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVu
ZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGlj
aCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAt
MTAsNiArMTAsNyBAQAogICogICAgIFN0ZXBoYW4gSGVycm1hbm4gLSBDb250cmlidXRpb25zIGZv
cgogICoJCQkJCQkJCWJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0
cnktd2l0aC1yZXNvdXJjZXMKICAqCQkJCQkJCQlidWcgMTg2MzQyIC0gW2NvbXBpbGVyXVtudWxs
XSBVc2luZyBhbm5vdGF0aW9ucyBmb3IgbnVsbCBjaGVja2luZworICoJCQkJCQkJCWJ1ZyAzNTg5
MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5n
cwogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5sb29rdXA7CiAKQEAgLTE0NjksNCArMTQ3MCw1MCBAQAogcHVibGljIEZp
ZWxkQmluZGluZ1tdIHVuUmVzb2x2ZWRGaWVsZHMoKSB7CiAJcmV0dXJuIEJpbmRpbmcuTk9fRklF
TERTOwogfQorCisvKgorICogSWYgYSB0eXBlIC0ga25vd24gdG8gYmUgYSBDbG9zZWFibGUgLSBp
cyBtZW50aW9uZWQgaW4gb25lIG9mIG91ciB3aGl0ZSBsaXN0cworICogYW5zd2VyIHRoZSB0eXBl
Qml0IGZvciB0aGUgd2hpdGUgbGlzdCAoQml0V3JhcHBlckNsb3NlYWJsZSBvciBCaXRSZXNvdXJj
ZUZyZWVDbG9zZWFibGUpLgorICovCitwcm90ZWN0ZWQgaW50IGFwcGx5Q2xvc2VhYmxlV2hpdGVs
aXN0cygpIHsKKwlzd2l0Y2ggKHRoaXMuY29tcG91bmROYW1lLmxlbmd0aCkgeworCQljYXNlIDM6
CisJCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoVHlwZUNvbnN0YW50cy5KQVZBLCB0aGlzLmNv
bXBvdW5kTmFtZVswXSkpIHsKKwkJCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoVHlwZUNvbnN0
YW50cy5JTywgdGhpcy5jb21wb3VuZE5hbWVbMV0pKSB7CisJCQkJCWNoYXJbXSBzaW1wbGVOYW1l
ID0gdGhpcy5jb21wb3VuZE5hbWVbMl07CisJCQkJCWludCBsID0gVHlwZUNvbnN0YW50cy5KQVZB
X0lPX1dSQVBQRVJfQ0xPU0VBQkxFUy5sZW5ndGg7CisJCQkJCWZvciAoaW50IGkgPSAwOyBpIDwg
bDsgaSsrKSB7CisJCQkJCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoc2ltcGxlTmFtZSwgVHlw
ZUNvbnN0YW50cy5KQVZBX0lPX1dSQVBQRVJfQ0xPU0VBQkxFU1tpXSkpCisJCQkJCQkJcmV0dXJu
IFR5cGVJZHMuQml0V3JhcHBlckNsb3NlYWJsZTsKKwkJCQkJfQorCQkJCQlsID0gVHlwZUNvbnN0
YW50cy5KQVZBX0lPX1JFU09VUkNFX0ZSRUVfQ0xPU0VBQkxFUy5sZW5ndGg7CisJCQkJCWZvciAo
aW50IGkgPSAwOyBpIDwgbDsgaSsrKSB7CisJCQkJCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMo
c2ltcGxlTmFtZSwgVHlwZUNvbnN0YW50cy5KQVZBX0lPX1JFU09VUkNFX0ZSRUVfQ0xPU0VBQkxF
U1tpXSkpCisJCQkJCQkJcmV0dXJuIFR5cGVJZHMuQml0UmVzb3VyY2VGcmVlQ2xvc2VhYmxlOwor
CQkJCQl9CisJCQkJfQorCQkJfQorCQkJYnJlYWs7CisJCWNhc2UgNDoKKwkJCWlmIChDaGFyT3Bl
cmF0aW9uLmVxdWFscyhUeXBlQ29uc3RhbnRzLkpBVkEsIHRoaXMuY29tcG91bmROYW1lWzBdKSkg
eworCQkJCWlmIChDaGFyT3BlcmF0aW9uLmVxdWFscyhUeXBlQ29uc3RhbnRzLlVUSUwsIHRoaXMu
Y29tcG91bmROYW1lWzFdKSkgeworCQkJCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHMoVHlwZUNv
bnN0YW50cy5aSVAsIHRoaXMuY29tcG91bmROYW1lWzJdKSkgeworCQkJCQkJY2hhcltdIHNpbXBs
ZU5hbWUgPSB0aGlzLmNvbXBvdW5kTmFtZVszXTsKKwkJCQkJCWludCBsID0gVHlwZUNvbnN0YW50
cy5KQVZBX1VUSUxfWklQX1dSQVBQRVJfQ0xPU0VBQkxFUy5sZW5ndGg7CisJCQkJCQlmb3IgKGlu
dCBpID0gMDsgaSA8IGw7IGkrKykgeworCQkJCQkJCWlmIChDaGFyT3BlcmF0aW9uLmVxdWFscyhz
aW1wbGVOYW1lLCBUeXBlQ29uc3RhbnRzLkpBVkFfVVRJTF9aSVBfV1JBUFBFUl9DTE9TRUFCTEVT
W2ldKSkKKwkJCQkJCQkJcmV0dXJuIFR5cGVJZHMuQml0V3JhcHBlckNsb3NlYWJsZTsKKwkJCQkJ
CX0KKwkJCQkJfQorCQkJCX0KKwkJCX0KKwkJCWJyZWFrOworCX0KKwlpbnQgbCA9IFR5cGVDb25z
dGFudHMuT1RIRVJfV1JBUFBFUl9DTE9TRUFCTEVTLmxlbmd0aDsKKwlmb3IgKGludCBpID0gMDsg
aSA8IGw7IGkrKykgeworCQlpZiAoQ2hhck9wZXJhdGlvbi5lcXVhbHModGhpcy5jb21wb3VuZE5h
bWUsIFR5cGVDb25zdGFudHMuT1RIRVJfV1JBUFBFUl9DTE9TRUFCTEVTW2ldKSkKKwkJCXJldHVy
biBUeXBlSWRzLkJpdFdyYXBwZXJDbG9zZWFibGU7CisJfQkKKwlyZXR1cm4gMDsKK30KIH0KZGlm
ZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZUNvbnN0YW50cy5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1
cC9UeXBlQ29uc3RhbnRzLmphdmEKaW5kZXggMGJiZWY0Ny4uNjc5ZDA0YiAxMDA2NDQKLS0tIGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9UeXBlQ29uc3RhbnRzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBl
Q29uc3RhbnRzLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgot
ICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgor
ICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgog
ICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5n
IG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUg
RWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRp
c3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtNyw3ICs3LDkgQEAKICAqIAogICog
Q29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBp
bXBsZW1lbnRhdGlvbgotICogICAgIFN0ZXBoYW4gSGVycm1hbm4gLSBDb250cmlidXRpb24gZm9y
IGJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNv
dXJjZXMKKyAqICAgICBTdGVwaGFuIEhlcnJtYW5uIC0gQ29udHJpYnV0aW9ucyBmb3IKKyAqCQkJ
CQkJCQlidWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgt
cmVzb3VyY2VzCisgKgkJCQkJCQkJYnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmlt
cG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCiAgKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8K
IHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cDsKIApAQCAt
MTksNiArMjEsNyBAQAogCWNoYXJbXSBMQU5HID0gImxhbmciLnRvQ2hhckFycmF5KCk7IC8vJE5P
Ti1OTFMtMSQKIAljaGFyW10gSU8gPSAiaW8iLnRvQ2hhckFycmF5KCk7IC8vJE5PTi1OTFMtMSQK
IAljaGFyW10gVVRJTCA9ICJ1dGlsIi50b0NoYXJBcnJheSgpOyAvLyROT04tTkxTLTEkCisJY2hh
cltdIFpJUCA9ICJ6aXAiLnRvQ2hhckFycmF5KCk7IC8vJE5PTi1OTFMtMSQKIAljaGFyW10gQU5O
T1RBVElPTiA9ICJhbm5vdGF0aW9uIi50b0NoYXJBcnJheSgpOyAvLyROT04tTkxTLTEkCiAJY2hh
cltdIFJFRkxFQ1QgPSAicmVmbGVjdCIudG9DaGFyQXJyYXkoKTsgLy8kTk9OLU5MUy0xJAogCWNo
YXJbXSBMRU5HVEggPSAibGVuZ3RoIi50b0NoYXJBcnJheSgpOyAvLyROT04tTkxTLTEkCkBAIC0x
NTQsNiArMTU3LDU5IEBACiAJfTsKIAljaGFyW11bXSBKQVZBX0xBTkdfQVVUT0NMT1NFQUJMRSA9
ICB7SkFWQSwgTEFORywgIkF1dG9DbG9zZWFibGUiLnRvQ2hhckFycmF5KCl9OyAvLyROT04tTkxT
LTEkCiAJY2hhcltdIENMT1NFID0gImNsb3NlIi50b0NoYXJBcnJheSgpOyAvLyROT04tTkxTLTEk
CisJLy8gd2hpdGUgbGlzdHMgb2YgY2xvc2VhYmxlczoKKwljaGFyW11bXSBKQVZBX0lPX1dSQVBQ
RVJfQ0xPU0VBQkxFUyA9IG5ldyBjaGFyW11bXSB7CisJCSJCdWZmZXJlZElucHV0U3RyZWFtIi50
b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJCdWZmZXJlZE91dHB1dFN0cmVhbSIudG9D
aGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiQnVmZmVyZWRSZWFkZXIiLnRvQ2hhckFycmF5
KCksIC8vJE5PTi1OTFMtMSQKKwkJIkJ1ZmZlcmVkV3JpdGVyIi50b0NoYXJBcnJheSgpLCAvLyRO
T04tTkxTLTEkCisJCSJJbnB1dFN0cmVhbVJlYWRlciIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5M
Uy0xJAorCQkiUHJpbnRXcml0ZXIiLnRvQ2hhckFycmF5KCksICAvLyROT04tTkxTLTEkCisJCSJM
aW5lTnVtYmVyUmVhZGVyIi50b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJEYXRhSW5w
dXRTdHJlYW0iLnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwkJIkRhdGFPdXRwdXRTdHJl
YW0iLnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwkJIk9iamVjdElucHV0U3RyZWFtIi50
b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJPYmplY3RPdXRwdXRTdHJlYW0iLnRvQ2hh
ckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwkJIkZpbHRlcklucHV0U3RyZWFtIi50b0NoYXJBcnJh
eSgpLCAvLyROT04tTkxTLTEkCisJCSJGaWx0ZXJPdXRwdXRTdHJlYW0iLnRvQ2hhckFycmF5KCks
IC8vJE5PTi1OTFMtMSQKKwkJIkRhdGFJbnB1dFN0cmVhbSIudG9DaGFyQXJyYXkoKSwgLy8kTk9O
LU5MUy0xJAorCQkiRGF0YU91dHB1dFN0cmVhbSIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0x
JAorCQkiUHVzaGJhY2tJbnB1dFN0cmVhbSIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAor
CQkiU2VxdWVuY2VJbnB1dFN0cmVhbSIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQki
UHJpbnRTdHJlYW0iLnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwkJIlB1c2hiYWNrUmVh
ZGVyIi50b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJPdXRwdXRTdHJlYW1Xcml0ZXIi
LnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwl9OworCWNoYXJbXVtdIEpBVkFfVVRJTF9a
SVBfV1JBUFBFUl9DTE9TRUFCTEVTID0gbmV3IGNoYXJbXVtdIHsKKwkJIkdaSVBJbnB1dFN0cmVh
bSIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiSW5mbGF0ZXJJbnB1dFN0cmVhbSIu
dG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiRGVmbGF0ZXJJbnB1dFN0cmVhbSIudG9D
aGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiQ2hlY2tlZElucHV0U3RyZWFtIi50b0NoYXJB
cnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJaaXBJbnB1dFN0cmVhbSIudG9DaGFyQXJyYXkoKSwg
Ly8kTk9OLU5MUy0xJAorCQkiSmFySW5wdXRTdHJlYW0iLnRvQ2hhckFycmF5KCksIC8vJE5PTi1O
TFMtMSQKKwkJIkdaSVBPdXRwdXRTdHJlYW0iLnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQK
KwkJIkluZmxhdGVyT3V0cHV0U3RyZWFtIi50b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJ
CSJEZWZsYXRlck91dHB1dFN0cmVhbSIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQki
Q2hlY2tlZE91dHB1dFN0cmVhbSIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiWmlw
T3V0cHV0U3RyZWFtIi50b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJKYXJPdXRwdXRT
dHJlYW0iLnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwl9OworCWNoYXJbXVtdW10gT1RI
RVJfV1JBUFBFUl9DTE9TRUFCTEVTID0gbmV3IGNoYXJbXVtdW10geworCQl7SkFWQSwgInNlY3Vy
aXR5Ii50b0NoYXJBcnJheSgpLCAiRGlnZXN0SW5wdXRTdHJlYW0iLnRvQ2hhckFycmF5KCl9LCAv
LyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJe0pBVkEsICJzZWN1cml0eSIudG9DaGFyQXJy
YXkoKSwgIkRpZ2VzdE91dHB1dFN0cmVhbSIudG9DaGFyQXJyYXkoKX0sIC8vJE5PTi1OTFMtMSQg
Ly8kTk9OLU5MUy0yJAorCQl7SkFWQSwgImJlYW5zIi50b0NoYXJBcnJheSgpLCAiWE1MRW5jb2Rl
ciIudG9DaGFyQXJyYXkoKX0sIC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQl7SkFWQSwg
ImJlYW5zIi50b0NoYXJBcnJheSgpLCAiWE1MRGVjb2RlciIudG9DaGFyQXJyYXkoKX0sIC8vJE5P
Ti1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQl7SkFWQVgsICJzb3VuZCIudG9DaGFyQXJyYXkoKSwg
InNhbXBsZWQiLnRvQ2hhckFycmF5KCksICJBdWRpb0lucHV0U3RyZWFtIi50b0NoYXJBcnJheSgp
fSwgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQKKwl9OworCWNoYXJb
XVtdIEpBVkFfSU9fUkVTT1VSQ0VfRlJFRV9DTE9TRUFCTEVTID0gbmV3IGNoYXJbXVtdIHsJCQkK
KwkJIlN0cmluZ1JlYWRlciIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiU3RyaW5n
V3JpdGVyIi50b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJCeXRlQXJyYXlJbnB1dFN0
cmVhbSIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiQnl0ZUFycmF5T3V0cHV0U3Ry
ZWFtIi50b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJDaGFyQXJyYXlSZWFkZXIiLnRv
Q2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwkJIkNoYXJBcnJheVdyaXRlciIudG9DaGFyQXJy
YXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiU3RyaW5nQnVmZmVySW5wdXRTdHJlYW0iLnRvQ2hhckFy
cmF5KCksIC8vJE5PTi1OTFMtMSQKKwl9OwogCiAJLy8gQ29uc3RyYWludHMgZm9yIGdlbmVyaWMg
dHlwZSBhcmd1bWVudCBpbmZlcmVuY2UKIAlpbnQgQ09OU1RSQUlOVF9FUVVBTCA9IDA7CQkvLyBB
Y3R1YWwgPSBGb3JtYWwKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZUlkcy5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9UeXBlSWRzLmphdmEKaW5kZXggN2ZmZjQzNC4uMWU0NTE0YiAxMDA2NDQK
LS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlSWRzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBl
SWRzLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29w
eXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29w
eXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxs
IHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVy
aWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBz
ZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1
dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtMTEsNiArMTEsNyBAQAogICogICAgIAkJCQkJ
CQlidWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVz
b3VyY2VzCiAgKiAgICAgCQkJCQkJCWJ1ZyAzNTkzNjIgLSBGVVAgb2YgYnVnIDM0OTMyNjogUmVz
b3VyY2UgbGVhayBvbiBub24tQ2xvc2VhYmxlIHJlc291cmNlCiAgKgkJCQkJCQkJYnVnIDE4NjM0
MiAtIFtjb21waWxlcl1bbnVsbF0gVXNpbmcgYW5ub3RhdGlvbnMgZm9yIG51bGwgY2hlY2tpbmcK
KyAqCQkJCQkJCQlidWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50IHJl
c291cmNlIGxlYWsgd2FybmluZ3MKICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwOwogCkBAIC0yMDcsNCArMjA4
LDE5IEBACiAJICogQHNlZSBSZWZlcmVuY2VCaW5kaW5nI2hhc1R5cGVCaXQoaW50KQogCSAqLwog
CWZpbmFsIGludCBCaXRDbG9zZWFibGUgPSAyOworCS8qKgorCSAqIEJpdCBmb3IgbWVtYmVycyBv
ZiBhIHdoaXRlIGxpc3Q6CisJICogU3VidHlwZXMgb2YgQ2xvc2VhYmxlIHRoYXQgd3JhcCBhbm90
aGVyIHJlc291cmNlIHdpdGhvdXQgZGlyZWN0bHkgaG9sZGluZyBhbnkgT1MgcmVzb3VyY2VzLiAK
KwkgKi8KKwlmaW5hbCBpbnQgQml0V3JhcHBlckNsb3NlYWJsZSA9IDQ7CisJLyoqCisJICogQml0
IGZvciBtZW1iZXJzIG9mIGEgd2hpdGUgbGlzdDoKKwkgKiBTdWJ0eXBlcyBvZiBDbG9zZWFibGUg
dGhhdCBkbyBub3QgaG9sZCBhbiBPUyByZXNvdXJjZSB0aGF0IG5lZWRzIHRvIGJlIHJlbGVhc2Vk
LgorCSAqLworCWZpbmFsIGludCBCaXRSZXNvdXJjZUZyZWVDbG9zZWFibGUgPSA4OworCQorCS8q
KgorCSAqIFNldCBvZiB0eXBlIGJpdHMgdGhhdCBzaG91bGQgYmUgaW5oZXJpdGVkIGJ5IGFueSBz
dWIgdHlwZXMuCisJICovCisJZmluYWwgaW50IEluaGVyaXRhYmxlQml0cyA9IEJpdEF1dG9DbG9z
ZWFibGUgfCBCaXRDbG9zZWFibGU7CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVW
YXJpYWJsZUJpbmRpbmcuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZVZhcmlhYmxlQmluZGluZy5q
YXZhCmluZGV4IDk5NWYzMGUuLjkxYTcwNjUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlw
ZVZhcmlhYmxlQmluZGluZy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZVZhcmlhYmxlQmlu
ZGluZy5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENv
cHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENv
cHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFs
bCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRl
cmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlw
c2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmli
dXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTExLDYgKzExLDcgQEAKICAqICAgICAJCQkJ
CQkJYnVnIDI4MjE1MiAtIFsxLjVdW2NvbXBpbGVyXSBHZW5lcmljcyBjb2RlIHJlamVjdGVkIGJ5
IEVjbGlwc2UgYnV0IGFjY2VwdGVkIGJ5IGphdmFjCiAgKiAgICAgCQkJCQkJCWJ1ZyAzNDkzMjYg
LSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNvdXJjZXMKICAqICAg
ICAJCQkJCQkJYnVnIDM1OTM2MiAtIEZVUCBvZiBidWcgMzQ5MzI2OiBSZXNvdXJjZSBsZWFrIG9u
IG5vbi1DbG9zZWFibGUgcmVzb3VyY2UKKyAqCQkJCQkJCQlidWcgMzU4OTAzIC0gRmlsdGVyIHBy
YWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsgd2FybmluZ3MKICAqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
bG9va3VwOwogCkBAIC0zMTYsMTEgKzMxNywxMSBAQAogCQkJLy8gaW5pdGlhbGl6ZSBmcm9tIGJv
dW5kcwogCQkJdGhpcy50eXBlQml0cyA9IDA7CiAJCQlpZiAodGhpcy5zdXBlcmNsYXNzICE9IG51
bGwgJiYgdGhpcy5zdXBlcmNsYXNzLmhhc1R5cGVCaXQoflR5cGVJZHMuQml0VW5pbml0aWFsaXpl
ZCkpCi0JCQkJdGhpcy50eXBlQml0cyB8PSB0aGlzLnN1cGVyY2xhc3MudHlwZUJpdHM7CisJCQkJ
dGhpcy50eXBlQml0cyB8PSAodGhpcy5zdXBlcmNsYXNzLnR5cGVCaXRzICYgVHlwZUlkcy5Jbmhl
cml0YWJsZUJpdHMpOwogCQkJaWYgKHRoaXMuc3VwZXJJbnRlcmZhY2VzICE9IG51bGwpCiAJCQkJ
Zm9yIChpbnQgaSA9IDAsIGwgPSB0aGlzLnN1cGVySW50ZXJmYWNlcy5sZW5ndGg7IGkgPCBsOyBp
KyspCiAJCQkJCWlmICh0aGlzLnN1cGVySW50ZXJmYWNlc1tpXS5oYXNUeXBlQml0KH5UeXBlSWRz
LkJpdFVuaW5pdGlhbGl6ZWQpKQotCQkJCQkJdGhpcy50eXBlQml0cyB8PSB0aGlzLnN1cGVySW50
ZXJmYWNlc1tpXS50eXBlQml0czsKKwkJCQkJCXRoaXMudHlwZUJpdHMgfD0gKHRoaXMuc3VwZXJJ
bnRlcmZhY2VzW2ldLnR5cGVCaXRzICYgVHlwZUlkcy5Jbmhlcml0YWJsZUJpdHMpOwogCQl9CiAJ
CXJldHVybiAodGhpcy50eXBlQml0cyAmIGJpdCkgIT0gMDsKIAl9CmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvbG9va3VwL1dpbGRjYXJkQmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9XaWxkY2FyZEJp
bmRpbmcuamF2YQppbmRleCAwMWYzNjllLi45M2RmZmUxIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9v
a3VwL1dpbGRjYXJkQmluZGluZy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvV2lsZGNhcmRCaW5k
aW5nLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29w
eXJpZ2h0IChjKSAyMDA1LCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29w
eXJpZ2h0IChjKSAyMDA1LCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxs
IHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVy
aWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBz
ZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1
dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtMTAsNiArMTAsNyBAQAogICogICAgIFN0ZXBo
YW4gSGVycm1hbm4gLSBDb250cmlidXRpb24gZm9yCiAgKiAgICAgCQkJCQkJCWJ1ZyAzNDkzMjYg
LSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNvdXJjZXMKICAqICAg
ICAJCQkJCQkJYnVnIDM1OTM2MiAtIEZVUCBvZiBidWcgMzQ5MzI2OiBSZXNvdXJjZSBsZWFrIG9u
IG5vbi1DbG9zZWFibGUgcmVzb3VyY2UKKyAqCQkJCQkJCQlidWcgMzU4OTAzIC0gRmlsdGVyIHBy
YWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsgd2FybmluZ3MKICAqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
bG9va3VwOwogCkBAIC00MjksMTEgKzQzMCwxMSBAQAogCQkJLy8gaW5pdGlhbGl6ZSBmcm9tIHVw
cGVyIGJvdW5kcwogCQkJdGhpcy50eXBlQml0cyA9IDA7CiAJCQlpZiAodGhpcy5zdXBlcmNsYXNz
ICE9IG51bGwgJiYgdGhpcy5zdXBlcmNsYXNzLmhhc1R5cGVCaXQoflR5cGVJZHMuQml0VW5pbml0
aWFsaXplZCkpCi0JCQkJdGhpcy50eXBlQml0cyB8PSB0aGlzLnN1cGVyY2xhc3MudHlwZUJpdHM7
CisJCQkJdGhpcy50eXBlQml0cyB8PSAodGhpcy5zdXBlcmNsYXNzLnR5cGVCaXRzICYgVHlwZUlk
cy5Jbmhlcml0YWJsZUJpdHMpOwogCQkJaWYgKHRoaXMuc3VwZXJJbnRlcmZhY2VzICE9IG51bGwp
CiAJCQkJZm9yIChpbnQgaSA9IDAsIGwgPSB0aGlzLnN1cGVySW50ZXJmYWNlcy5sZW5ndGg7IGkg
PCBsOyBpKyspCiAJCQkJCWlmICh0aGlzLnN1cGVySW50ZXJmYWNlc1tpXS5oYXNUeXBlQml0KH5U
eXBlSWRzLkJpdFVuaW5pdGlhbGl6ZWQpKQotCQkJCQkJdGhpcy50eXBlQml0cyB8PSB0aGlzLnN1
cGVySW50ZXJmYWNlc1tpXS50eXBlQml0czsKKwkJCQkJCXRoaXMudHlwZUJpdHMgfD0gKHRoaXMu
c3VwZXJJbnRlcmZhY2VzW2ldLnR5cGVCaXRzICYgVHlwZUlkcy5Jbmhlcml0YWJsZUJpdHMpOwog
CQl9CiAJCXJldHVybiAodGhpcy50eXBlQml0cyAmIGJpdCkgIT0gMDsKIAl9Cg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>209276</attachid>
            <date>2012-01-10 13:11:00 -0500</date>
            <delta_ts>2012-01-13 16:17:57 -0500</delta_ts>
            <desc>incremental changes</desc>
            <filename>Bug_358903_v0.9.6-update.patch</filename>
            <type>text/plain</type>
            <size>18837</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1RyeVdpdGhSZXNvdXJj
ZXNTdGF0ZW1lbnRUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxl
ci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9UcnlX
aXRoUmVzb3VyY2VzU3RhdGVtZW50VGVzdC5qYXZhCmluZGV4IDk2NjAxMjUuLjYyMTcxNzUgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1RyeVdpdGhSZXNvdXJjZXNT
dGF0ZW1lbnRUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGls
ZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vVHJ5
V2l0aFJlc291cmNlc1N0YXRlbWVudFRlc3QuamF2YQpAQCAtMzMsNyArMzMsNyBAQCBpbXBvcnQg
anVuaXQuZnJhbWV3b3JrLlRlc3Q7CiBwdWJsaWMgY2xhc3MgVHJ5V2l0aFJlc291cmNlc1N0YXRl
bWVudFRlc3QgZXh0ZW5kcyBBYnN0cmFjdFJlZ3Jlc3Npb25UZXN0IHsKIAogc3RhdGljIHsKLS8v
CVRFU1RTX05BTUVTID0gbmV3IFN0cmluZ1tdIHsgInRlc3QwNjFhIn07CisvLwlURVNUU19OQU1F
UyA9IG5ldyBTdHJpbmdbXSB7ICJ0ZXN0MDYxbSJ9OwogLy8JVEVTVFNfTlVNQkVSUyA9IG5ldyBp
bnRbXSB7IDUwIH07CiAvLwlURVNUU19SQU5HRSA9IG5ldyBpbnRbXSB7IDExLCAtMSB9OwogfQpA
QCAtNTkxMSw2ICs1OTExLDU0IEBAIHB1YmxpYyB2b2lkIHRlc3QwNjFsKCkgdGhyb3dzIElPRXhj
ZXB0aW9uIHsKIAkJb3B0aW9ucywKIAkJbnVsbCk7CiB9CisvLyBCdWcgMzU4OTAzIC0gRmlsdGVy
IHByYWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsgd2FybmluZ3MKKy8vIGEgY2xv
c2VhYmxlIGlzIHBhc3NlZCB0byBhbm90aGVyIG1ldGhvZCBpbiBhIHJldHVybiBzdGF0ZW1lbnQK
Ky8vIGV4YW1wbGUgY29uc3RydWN0ZWQgYWZ0ZXIgb3JnLmVjbGlwc2UuZXF1aW5veC5pbnRlcm5h
bC5wMi5hcnRpZmFjdC5yZXBvc2l0b3J5LnNpbXBsZS5TaW1wbGVBcnRpZmFjdFJlcG9zaXRvcnkj
Z2V0QXJ0aWZhY3QoLi4pCitwdWJsaWMgdm9pZCB0ZXN0MDYxbSgpIHRocm93cyBJT0V4Y2VwdGlv
biB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChD
b21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9w
dGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0
UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0
aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJ
ImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlSW5wdXRT
dHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJlZElucHV0U3RyZWFtO1xuIiAr
CisJCQkiaW1wb3J0IGphdmEuaW8uSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5p
by5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICBC
dWZmZXJlZElucHV0U3RyZWFtIHN0cmVhbTtcbiIgKworCQkJIiAgICBCdWZmZXJlZElucHV0U3Ry
ZWFtIGZvbyhGaWxlIGZpbGUpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAg
IEZpbGVJbnB1dFN0cmVhbSBzID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKTtcbiIgKworCQkJ
IiAgICAgICAgcmV0dXJuIGNoZWNrKG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKHMpKTtcbiIgKwor
CQkJIiAgICB9XG4iICsKKwkJCSIgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBmb28yKEZpbGVJbnB1
dFN0cmVhbSBzLCBGaWxlIGZpbGUpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAg
ICAgIHMgPSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpO1xuIiArCisJCQkiICAgICAgICByZXR1
cm4gY2hlY2socyk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIEJ1ZmZlcmVkSW5wdXRT
dHJlYW0gZm9vMyhJbnB1dFN0cmVhbSBzKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQki
ICAgICAgICBzID0gY2hlY2socyk7XG4iICsKKwkJCSIgICAgICAgIHJldHVybiBjaGVjayhzKTtc
biIgKworCQkJIiAgICB9XG4iICsKKwkJCSIgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBjaGVjayhJ
bnB1dFN0cmVhbSBzKSB7IHJldHVybiBudWxsOyB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCS8v
IFRPRE86IGFsc28gdGhlc2Ugd2FybmluZ3MgKm1pZ2h0KiBiZSBhdm9pZGFibGUgYnkgZGV0ZWN0
aW5nIGNoZWNrKHMpIGFzIGEgd3JhcHBlciBjcmVhdGlvbj8/IAorCQkiLS0tLS0tLS0tLVxuIiAr
IAorCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDE0KVxuIiArIAorCQkiCXJldHVybiBj
aGVjayhzKTtcbiIgKyAKKwkJIgleXl5eXl5eXl5eXl5eXl5eXG4iICsgCisJCSJQb3RlbnRpYWwg
cmVzb3VyY2UgbGVhazogXCdzXCcgbWF5IG5vdCBiZSBjbG9zZWQgYXQgdGhpcyBsb2NhdGlvblxu
IiArIAorCQkiLS0tLS0tLS0tLVxuIiArIAorCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5l
IDE4KVxuIiArIAorCQkiCXJldHVybiBjaGVjayhzKTtcbiIgKyAKKwkJIgleXl5eXl5eXl5eXl5e
Xl5eXG4iICsgCisJCSJQb3RlbnRpYWwgcmVzb3VyY2UgbGVhazogXCdzXCcgbWF5IG5vdCBiZSBj
bG9zZWQgYXQgdGhpcyBsb2NhdGlvblxuIiArIAorCQkiLS0tLS0tLS0tLVxuIiwKKwkJbnVsbCwK
KwkJdHJ1ZSwKKwkJb3B0aW9ucyk7Cit9CiAvLyBCdWcgMzYyMzMxIC0gUmVzb3VyY2UgbGVhayBu
b3QgZGV0ZWN0ZWQgd2hlbiBjbG9zZWFibGUgbm90IGFzc2lnbmVkIHRvIHZhcmlhYmxlCiAvLyBh
IHJlc291cmNlIGlzIG5ldmVyIGFzc2lnbmVkCiBwdWJsaWMgdm9pZCB0ZXN0MDYyYSgpIHRocm93
cyBJT0V4Y2VwdGlvbiB7CkBAIC02MTIzLDYgKzYxNzEsNTEgQEAgcHVibGljIHZvaWQgdGVzdDA2
M2MoKSB0aHJvd3MgSU9FeGNlcHRpb24gewogCQlvcHRpb25zLAogCQludWxsKTsKIH0KKy8vIEJ1
ZyAzNjIzMzIgLSBPbmx5IHJlcG9ydCBwb3RlbnRpYWwgbGVhayB3aGVuIGNsb3NlYWJsZSBub3Qg
Y3JlYXRlZCBpbiB0aGUgbG9jYWwgc2NvcGUKKy8vIGEgcmVzb3VyY2UgaXMgb2J0YWluZWQgYXMg
YSBtZXRob2QgYXJndW1lbnQgYW5kL29yIGFzc2lnbmVkIHdpdGggYSBjYXN0CitwdWJsaWMgdm9p
ZCB0ZXN0MDYzZCgpIHRocm93cyBJT0V4Y2VwdGlvbiB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21w
aWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9y
dFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0
KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJs
ZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMu
T1BUSU9OX1JlcG9ydEV4cGxpY2l0bHlDbG9zZWRBdXRvQ2xvc2VhYmxlLCBDb21waWxlck9wdGlv
bnMuRVJST1IpOworCXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJ
IlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZUlucHV0U3RyZWFtO1xuIiArCisJCQki
aW1wb3J0IGphdmEuaW8uQnVmZmVyZWRJbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZh
LmlvLklucHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4i
ICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28oIElucHV0U3Ry
ZWFtIGlucHV0KSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBGaWxlSW5w
dXRTdHJlYW0gaW5wdXQxICA9IChGaWxlSW5wdXRTdHJlYW0paW5wdXQ7XG4iICsKKwkJCSIgICAg
ICAgIFN5c3RlbS5vdXQucHJpbnRsbihpbnB1dDEucmVhZCgpKTtcbiIgKworCQkJIiAgICAgICAg
aW5wdXQuY2xvc2UoKTtcbiIgKyAvLyBkb24ndCBwcm9wb3NlIHQtdy1yIGZvciBhcmd1bWVudAor
CQkJIiAgICB9XG4iICsKKwkJCSIgICAgdm9pZCBmb28oKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xu
IiArCisJCQkiICAgICAgICBJbnB1dFN0cmVhbSBpbnB1dCA9IG5ldyBGaWxlSW5wdXRTdHJlYW0o
XCJzb21lZmlsZVwiKTtcbiIgKyAKKwkJCSIgICAgICAgIEZpbGVJbnB1dFN0cmVhbSBpbnB1dDEg
ID0gKEZpbGVJbnB1dFN0cmVhbSlpbnB1dDtcbiIgKyAKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQu
cHJpbnRsbihpbnB1dDEucmVhZCgpKTtcbiIgKyAKKwkJCSIgICAgICAgIGlucHV0LmNsb3NlKCk7
XG4iICsgLy8gZG8gcHJvcG9zZSB0LXctciwgbm90IGZyb20gYSBtZXRob2QgYXJndW1lbnQKKwkJ
CSIgICAgfVxuIiArCisJCQkiICAgIHZvaWQgZm9vMyggSW5wdXRTdHJlYW0gaW5wdXQsIElucHV0
U3RyZWFtIGlucHV0MikgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmls
ZUlucHV0U3RyZWFtIGlucHV0MSAgPSAoRmlsZUlucHV0U3RyZWFtKWlucHV0O1xuIiArIC8vIHN0
aWxsIGRvbid0IGNsYWltIGJlY2F1c2Ugb2J0YWluZWQgZnJvbSBvdXRzaWRlCisJCQkiICAgICAg
ICBTeXN0ZW0ub3V0LnByaW50bG4oaW5wdXQxLnJlYWQoKSk7XG4iICsKKwkJCSIgICAgICAgIEJ1
ZmZlcmVkSW5wdXRTdHJlYW0gYmlzID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oaW5wdXQyKTtc
biIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGJpcy5yZWFkKCkpO1xuIiArCisJ
CQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJIjEu
IEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxMilcbiIgKyAKKwkJIglJbnB1dFN0cmVhbSBpbnB1
dCA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oXCJzb21lZmlsZVwiKTtcbiIgKyAKKwkJIgkgICAgICAg
ICAgICBeXl5eXlxuIiArIAorCQkiUmVzb3VyY2UgXCdpbnB1dFwnIHNob3VsZCBiZSBtYW5hZ2Vk
IGJ5IHRyeS13aXRoLXJlc291cmNlXG4iICsgCisJCSItLS0tLS0tLS0tXG4iLAorCQludWxsLAor
CQl0cnVlLAorCQlvcHRpb25zKTsKKwkKK30KIHB1YmxpYyBzdGF0aWMgQ2xhc3MgdGVzdENsYXNz
KCkgewogCXJldHVybiBUcnlXaXRoUmVzb3VyY2VzU3RhdGVtZW50VGVzdC5jbGFzczsKIH0KZGlm
ZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9hc3QvQWxsb2NhdGlvbkV4cHJlc3Npb24uamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9h
c3QvQWxsb2NhdGlvbkV4cHJlc3Npb24uamF2YQppbmRleCA3MTIxN2NlLi42N2ViOGY1IDEwMDY0
NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvYXN0L0FsbG9jYXRpb25FeHByZXNzaW9uLmphdmEKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2FzdC9BbGxvY2F0aW9uRXhwcmVzc2lvbi5qYXZhCkBAIC02MCw3ICs2MCw3IEBAIHB1YmxpYyBG
bG93SW5mbyBhbmFseXNlQ29kZShCbG9ja1Njb3BlIGN1cnJlbnRTY29wZSwgRmxvd0NvbnRleHQg
Zmxvd0NvbnRleHQsIEZsCiAJCWFuYWx5c2VBcmd1bWVudHMoY3VycmVudFNjb3BlLCBmbG93Q29u
dGV4dCwgZmxvd0luZm8sIHRoaXMuYmluZGluZywgdGhpcy5hcmd1bWVudHMpOwogCX0KIAotCWlm
IChGYWtlZFRyYWNraW5nVmFyaWFibGUuaXNBdXRvQ2xvc2VhYmxlKHRoaXMucmVzb2x2ZWRUeXBl
KSkKKwlpZiAoRmFrZWRUcmFja2luZ1ZhcmlhYmxlLmlzQW55Q2xvc2VhYmxlKHRoaXMucmVzb2x2
ZWRUeXBlKSkKIAkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlLmFuYWx5c2VDbG9zZWFibGVBbGxvY2F0
aW9uKGN1cnJlbnRTY29wZSwgZmxvd0luZm8sIHRoaXMpOwogCiAJLy8gcmVjb3JkIHNvbWUgZGVw
ZW5kZW5jeSBpbmZvcm1hdGlvbiBmb3IgZXhjZXB0aW9uIHR5cGVzCmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L0Fzc2lnbm1lbnQuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQXNzaWdubWVudC5qYXZhCmluZGV4
IDUzOWE2NjEuLmUzMjhmMTIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQXNzaWdubWVudC5qYXZh
CisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9hc3QvQXNzaWdubWVudC5qYXZhCkBAIC01MSw3ICs1MSw3IEBAIHB1Ymxp
YyBGbG93SW5mbyBhbmFseXNlQ29kZShCbG9ja1Njb3BlIGN1cnJlbnRTY29wZSwgRmxvd0NvbnRl
eHQgZmxvd0NvbnRleHQsIEZsCiAJRmxvd0luZm8gcHJlSW5pdEluZm8gPSBudWxsOwogCWJvb2xl
YW4gc2hvdWxkQW5hbHlzZVJlc291cmNlID0gbG9jYWwgIT0gbnVsbCAKIAkJCSYmIGZsb3dJbmZv
LnJlYWNoTW9kZSgpID09IEZsb3dJbmZvLlJFQUNIQUJMRSAKLQkJCSYmIChGYWtlZFRyYWNraW5n
VmFyaWFibGUuaXNBdXRvQ2xvc2VhYmxlKHRoaXMuZXhwcmVzc2lvbi5yZXNvbHZlZFR5cGUpCisJ
CQkmJiAoRmFrZWRUcmFja2luZ1ZhcmlhYmxlLmlzQW55Q2xvc2VhYmxlKHRoaXMuZXhwcmVzc2lv
bi5yZXNvbHZlZFR5cGUpCiAJCQkJCXx8IHRoaXMuZXhwcmVzc2lvbi5yZXNvbHZlZFR5cGUgPT0g
VHlwZUJpbmRpbmcuTlVMTCk7CiAJaWYgKHNob3VsZEFuYWx5c2VSZXNvdXJjZSkgewogCQlwcmVJ
bml0SW5mbyA9IGZsb3dJbmZvLnVuY29uZGl0aW9uYWxDb3B5KCk7CmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L0Zha2VkVHJhY2tpbmdWYXJpYWJsZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9GYWtlZFRyYWNr
aW5nVmFyaWFibGUuamF2YQppbmRleCBiMzVhNjdjLi5hZmEyMzgxIDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L0Zha2VkVHJhY2tpbmdWYXJpYWJsZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvRmFrZWRU
cmFja2luZ1ZhcmlhYmxlLmphdmEKQEAgLTQzLDE3ICs0MywxOSBAQCBwdWJsaWMgY2xhc3MgRmFr
ZWRUcmFja2luZ1ZhcmlhYmxlIGV4dGVuZHMgTG9jYWxEZWNsYXJhdGlvbiB7CiAJcHJpdmF0ZSBz
dGF0aWMgZmluYWwgaW50IENMT1NFX1NFRU4gPSAxOwogCS8vIHRoZSByZXNvdXJjZSB3YXMgcGFz
c2VkIHRvIG91dHNpZGUgY29kZSAoYXJnIGluIG1ldGhvZC9jdG9yIGNhbGwgb3IgYXMgYSByZXR1
cm4gdmFsdWUgZnJvbSB0aGlzIG1ldGhvZCk6CiAJcHJpdmF0ZSBzdGF0aWMgZmluYWwgaW50IFBB
U1NFRF9UT19PVVRTSURFID0gMjsKKwkvLyB0aGUgcmVzb3VyY2Ugd2FzIG9idGFpbmVkIGZyb20g
dGhlIG91dHNpZGUgKGFyZ3VtZW50IG9mIHRoZSBjdXJyZW50IG1ldGhvZCwgb3IgdmlhIGEgZmll
bGQgcmVhZCkKKwlwcml2YXRlIHN0YXRpYyBmaW5hbCBpbnQgT0JUQUlORURfRlJPTV9PVVRTSURF
ID0gNDsKIAkvLyBJZiBjbG9zZSgpIGlzIGludm9rZWQgZnJvbSBhIG5lc3RlZCBtZXRob2QgKGlu
c2lkZSBhIGxvY2FsIHR5cGUpIHJlcG9ydCByZW1haW5pbmcgcHJvYmxlbXMgb25seSBhcyBwb3Rl
bnRpYWw6Ci0JcHJpdmF0ZSBzdGF0aWMgZmluYWwgaW50IENMT1NFRF9JTl9ORVNURURfTUVUSE9E
ID0gNDsKKwlwcml2YXRlIHN0YXRpYyBmaW5hbCBpbnQgQ0xPU0VEX0lOX05FU1RFRF9NRVRIT0Qg
PSA4OwogCS8vIGEgbG9jYXRpb24gaW5kZXBlbmRlbnQgaXNzdWUgaGFzIGJlZW4gcmVwb3J0ZWQg
YWxyZWFkeSBhZ2FpbnN0IHRoaXMgcmVzb3VyY2U6Ci0JcHJpdmF0ZSBzdGF0aWMgZmluYWwgaW50
IFJFUE9SVEVEID0gODsKKwlwcml2YXRlIHN0YXRpYyBmaW5hbCBpbnQgUkVQT1JURUQgPSAxNjsK
IAkvLyBhIHJlc291cmNlIGlzIHdyYXBwZWQgaW4gYW5vdGhlciByZXNvdXJjZToKLQlwcml2YXRl
IHN0YXRpYyBmaW5hbCBpbnQgV1JBUFBFRCA9IDE2OworCXByaXZhdGUgc3RhdGljIGZpbmFsIGlu
dCBXUkFQUEVEID0gMzI7CiAKLQlwcml2YXRlIHN0YXRpYyBmaW5hbCBpbnQgRE9VQlRfTUFTSyA9
IENMT1NFX1NFRU4gfCBQQVNTRURfVE9fT1VUU0lERSB8IENMT1NFRF9JTl9ORVNURURfTUVUSE9E
IHwgUkVQT1JURUQ7IC8vIG5vdCBXUkFQUEVECisJcHJpdmF0ZSBzdGF0aWMgZmluYWwgaW50IERP
VUJUX01BU0sgPSBDTE9TRV9TRUVOIHwgUEFTU0VEX1RPX09VVFNJREUgfCBPQlRBSU5FRF9GUk9N
X09VVFNJREUgfCBDTE9TRURfSU5fTkVTVEVEX01FVEhPRCB8IFJFUE9SVEVEOyAvLyBub3QgV1JB
UFBFRAogCiAJLyoqCi0JICogQml0c2V0IG9mIHtAbGluayAjQ0xPU0VfU0VFTn0sIHtAbGluayAj
UEFTU0VEX1RPX09VVFNJREV9LCB7QGxpbmsgI0NMT1NFRF9JTl9ORVNURURfTUVUSE9EfSwge0Bs
aW5rICNSRVBPUlRFRH0gYW5kIHtAbGluayAjV1JBUFBFRH0uCisJICogQml0c2V0IG9mIHtAbGlu
ayAjQ0xPU0VfU0VFTn0sIHtAbGluayAjUEFTU0VEX1RPX09VVFNJREV9LCB7QGxpbmsgI09CVEFJ
TkVEX0ZST01fT1VUU0lERX0sIHtAbGluayAjQ0xPU0VEX0lOX05FU1RFRF9NRVRIT0R9LCB7QGxp
bmsgI1JFUE9SVEVEfSBhbmQge0BsaW5rICNXUkFQUEVEfS4KIAkgKi8KIAlwcml2YXRlIGludCBn
bG9iYWxDbG9zaW5nU3RhdGUgPSAwOwogCkBAIC0xMTYsMTggKzExOCwzMSBAQCBwdWJsaWMgY2xh
c3MgRmFrZWRUcmFja2luZ1ZhcmlhYmxlIGV4dGVuZHMgTG9jYWxEZWNsYXJhdGlvbiB7CiAJICog
QHJldHVybiBhIG5ldyB7QGxpbmsgRmFrZWRUcmFja2luZ1ZhcmlhYmxlfSBvciBudWxsLgogCSAq
LwogCXB1YmxpYyBzdGF0aWMgRmFrZWRUcmFja2luZ1ZhcmlhYmxlIGdldENsb3NlVHJhY2tpbmdW
YXJpYWJsZShFeHByZXNzaW9uIGV4cHJlc3Npb24pIHsKKwkJd2hpbGUgKHRydWUpIHsKKwkJCWlm
IChleHByZXNzaW9uIGluc3RhbmNlb2YgQ2FzdEV4cHJlc3Npb24pCisJCQkJZXhwcmVzc2lvbiA9
ICgoQ2FzdEV4cHJlc3Npb24pIGV4cHJlc3Npb24pLmV4cHJlc3Npb247CisJCQllbHNlIGlmIChl
eHByZXNzaW9uIGluc3RhbmNlb2YgQXNzaWdubWVudCkKKwkJCQlleHByZXNzaW9uID0gKChBc3Np
Z25tZW50KSBleHByZXNzaW9uKS5leHByZXNzaW9uOworCQkJZWxzZQorCQkJCWJyZWFrOworCQl9
CiAJCWlmIChleHByZXNzaW9uIGluc3RhbmNlb2YgU2luZ2xlTmFtZVJlZmVyZW5jZSkgewogCQkJ
U2luZ2xlTmFtZVJlZmVyZW5jZSBuYW1lID0gKFNpbmdsZU5hbWVSZWZlcmVuY2UpIGV4cHJlc3Np
b247CiAJCQlpZiAobmFtZS5iaW5kaW5nIGluc3RhbmNlb2YgTG9jYWxWYXJpYWJsZUJpbmRpbmcp
IHsKIAkJCQlMb2NhbFZhcmlhYmxlQmluZGluZyBsb2NhbCA9IChMb2NhbFZhcmlhYmxlQmluZGlu
ZyluYW1lLmJpbmRpbmc7CiAJCQkJaWYgKGxvY2FsLmNsb3NlVHJhY2tlciAhPSBudWxsKQogCQkJ
CQlyZXR1cm4gbG9jYWwuY2xvc2VUcmFja2VyOwotCQkJCWlmIChsb2NhbC5pc1BhcmFtZXRlcigp
IHx8ICFpc0F1dG9DbG9zZWFibGUoZXhwcmVzc2lvbi5yZXNvbHZlZFR5cGUpKQorCQkJCWlmICgh
aXNBbnlDbG9zZWFibGUoZXhwcmVzc2lvbi5yZXNvbHZlZFR5cGUpKQogCQkJCQlyZXR1cm4gbnVs
bDsKIAkJCQkvLyB0cmFja2luZyB2YXIgZG9lc24ndCB5ZXQgZXhpc3QuIFRoaXMgaGFwcGVucyBp
biBmaW5hbGx5IGJsb2NrCiAJCQkJLy8gd2hpY2ggaXMgYW5hbHl6ZWQgYmVmb3JlIHRoZSBjb3Jy
ZXNwb25kaW5nIHRyeSBibG9jawogCQkJCVN0YXRlbWVudCBsb2NhdGlvbiA9IGxvY2FsLmRlY2xh
cmF0aW9uOwotCQkJCXJldHVybiBsb2NhbC5jbG9zZVRyYWNrZXIgPSBuZXcgRmFrZWRUcmFja2lu
Z1ZhcmlhYmxlKGxvY2FsLCBsb2NhdGlvbik7CisJCQkJbG9jYWwuY2xvc2VUcmFja2VyID0gbmV3
IEZha2VkVHJhY2tpbmdWYXJpYWJsZShsb2NhbCwgbG9jYXRpb24pOworCQkJCWlmIChsb2NhbC5p
c1BhcmFtZXRlcigpKSB7CisJCQkJCWxvY2FsLmNsb3NlVHJhY2tlci5nbG9iYWxDbG9zaW5nU3Rh
dGUgfD0gT0JUQUlORURfRlJPTV9PVVRTSURFOworCQkJCQkvLyBzdGF0dXMgb2YgdGhpcyB0cmFj
a2VyIGlzIG5vdyBVTktOT1dOCisJCQkJfQorCQkJCXJldHVybiBsb2NhbC5jbG9zZVRyYWNrZXI7
CiAJCQl9CiAJCX0gZWxzZSBpZiAoZXhwcmVzc2lvbiBpbnN0YW5jZW9mIEFsbG9jYXRpb25FeHBy
ZXNzaW9uKSB7CiAJCQkvLyByZXR1cm4gYW55IHByZWxpbWluYXJ5IHRyYWNraW5nIHZhcmlhYmxl
IGZyb20gYW5hbHlzZUNsb3NlYWJsZUFsbG9jYXRpb24gCkBAIC0xNTIsNyArMTY3LDcgQEAgcHVi
bGljIGNsYXNzIEZha2VkVHJhY2tpbmdWYXJpYWJsZSBleHRlbmRzIExvY2FsRGVjbGFyYXRpb24g
ewogCQlpZiAocmhzIGluc3RhbmNlb2YgQWxsb2NhdGlvbkV4cHJlc3Npb24pIHsKIAkJCWNsb3Nl
VHJhY2tlciA9IGxvY2FsLmNsb3NlVHJhY2tlcjsKIAkJCWlmIChjbG9zZVRyYWNrZXIgPT0gbnVs
bCkgewotCQkJCWlmIChpc0F1dG9DbG9zZWFibGUocmhzLnJlc29sdmVkVHlwZSkpIHsKKwkJCQlp
ZiAoaXNBbnlDbG9zZWFibGUocmhzLnJlc29sdmVkVHlwZSkpIHsKIAkJCQkJY2xvc2VUcmFja2Vy
ID0gbmV3IEZha2VkVHJhY2tpbmdWYXJpYWJsZShsb2NhbCwgbG9jYXRpb24pOwogCQkJCX0JCQkJ
CQogCQkJfQpAQCAtMTc4LDcgKzE5Myw3IEBAIHB1YmxpYyBjbGFzcyBGYWtlZFRyYWNraW5nVmFy
aWFibGUgZXh0ZW5kcyBMb2NhbERlY2xhcmF0aW9uIHsKIAkJfSBlbHNlIGlmICgoKFJlZmVyZW5j
ZUJpbmRpbmcpYWxsb2NhdGlvbi5yZXNvbHZlZFR5cGUpLmhhc1R5cGVCaXQoVHlwZUlkcy5CaXRX
cmFwcGVyQ2xvc2VhYmxlKSkgewogCQkJaWYgKGFsbG9jYXRpb24uYXJndW1lbnRzICE9IG51bGwg
JiYgIGFsbG9jYXRpb24uYXJndW1lbnRzLmxlbmd0aCA+IDApIHsKIAkJCQkvLyBmaW5kIHRoZSB3
cmFwcGVkIHJlc291cmNlIHJlcHJlc2VudGVkIGJ5IGl0cyB0cmFja2luZyB2YXI6Ci0JCQkJRmFr
ZWRUcmFja2luZ1ZhcmlhYmxlIGlubmVyVHJhY2tlciA9IGFuYWx5c2VDbG9zZWFibGVBbGxvY2F0
aW9uQXJndW1lbnQoc2NvcGUsIGZsb3dJbmZvLCBhbGxvY2F0aW9uLCBhbGxvY2F0aW9uLmFyZ3Vt
ZW50c1swXSk7CisJCQkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlIGlubmVyVHJhY2tlciA9IGZpbmRD
bG9zZVRyYWNrZXIoc2NvcGUsIGZsb3dJbmZvLCBhbGxvY2F0aW9uLCBhbGxvY2F0aW9uLmFyZ3Vt
ZW50c1swXSk7CiAJCQkJaWYgKGlubmVyVHJhY2tlciAhPSBudWxsKSB7CiAJCQkJCWlmIChpbm5l
clRyYWNrZXIgPT0gYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIpCiAJCQkJCQlyZXR1cm47IC8vIHNl
bGYgd3JhcCAocmVzID0gbmV3IFJlcyhyZXMpKSAtPiBuZWl0aGVyIGNoYW5nZSAoaGVyZSkgbm9y
IHJlbW92ZSAoYmVsb3cpCkBAIC0yMTIsNyArMjI3LDcgQEAgcHVibGljIGNsYXNzIEZha2VkVHJh
Y2tpbmdWYXJpYWJsZSBleHRlbmRzIExvY2FsRGVjbGFyYXRpb24gewogCX0KIAogCS8qKiBGaW5k
IGFuIGV4aXN0aW5nIHRyYWNraW5nIHZhcmlhYmxlIGZvciB0aGUgYXJndW1lbnQgb2YgYW4gYWxs
b2NhdGlvbiBmb3IgYSByZXNvdXJjZSB3cmFwcGVyLiAqLwotCXB1YmxpYyBzdGF0aWMgRmFrZWRU
cmFja2luZ1ZhcmlhYmxlIGFuYWx5c2VDbG9zZWFibGVBbGxvY2F0aW9uQXJndW1lbnQoQmxvY2tT
Y29wZSBzY29wZSwgRmxvd0luZm8gZmxvd0luZm8sIEFsbG9jYXRpb25FeHByZXNzaW9uIGFsbG9j
YXRpb24sIEV4cHJlc3Npb24gYXJnKQorCXByaXZhdGUgc3RhdGljIEZha2VkVHJhY2tpbmdWYXJp
YWJsZSBmaW5kQ2xvc2VUcmFja2VyKEJsb2NrU2NvcGUgc2NvcGUsIEZsb3dJbmZvIGZsb3dJbmZv
LCBBbGxvY2F0aW9uRXhwcmVzc2lvbiBhbGxvY2F0aW9uLCBFeHByZXNzaW9uIGFyZykKIAl7CiAJ
CXdoaWxlIChhcmcgaW5zdGFuY2VvZiBBc3NpZ25tZW50KSB7CiAJCQlBc3NpZ25tZW50IGFzc2ln
biA9IChBc3NpZ25tZW50KWFyZzsKQEAgLTI3NiwxNCArMjkxLDE1IEBAIHB1YmxpYyBjbGFzcyBG
YWtlZFRyYWNraW5nVmFyaWFibGUgZXh0ZW5kcyBMb2NhbERlY2xhcmF0aW9uIHsKIAkJCQkvLyBr
ZWVwIGNsb3NlLXN0YXR1cyBvZiBSSFMgdW5jaGFuZ2VkIGFjcm9zcyB0aGlzIGFzc2lnbm1lbnQK
IAkJCX0gZWxzZSBpZiAocHJldmlvdXNUcmFja2VyICE9IG51bGwpIHsJCQkJCS8vIDIuIHJlLXVz
ZSB0cmFja2luZyB2YXJpYWJsZSBmcm9tIHRoZSBMSFM/CiAJCQkJLy8gcmUtYXNzaWduaW5nIGZy
b20gYSBmcmVzaCB2YWx1ZSwgbWFyayBhcyBub3QtY2xvc2VkIGFnYWluOgotCQkJCWZsb3dJbmZv
Lm1hcmtBc0RlZmluaXRlbHlOdWxsKHByZXZpb3VzVHJhY2tlci5iaW5kaW5nKTsKKwkJCQlpZiAo
KHByZXZpb3VzVHJhY2tlci5nbG9iYWxDbG9zaW5nU3RhdGUgJiAoUEFTU0VEX1RPX09VVFNJREV8
T0JUQUlORURfRlJPTV9PVVRTSURFKSkgPT0gMCkKKwkJCQkJZmxvd0luZm8ubWFya0FzRGVmaW5p
dGVseU51bGwocHJldmlvdXNUcmFja2VyLmJpbmRpbmcpOwogCQkJCWxvY2FsLmNsb3NlVHJhY2tl
ciA9IGFuYWx5c2VDbG9zZWFibGVFeHByZXNzaW9uKGZsb3dJbmZvLCBsb2NhbCwgbG9jYXRpb24s
IHJocywgcHJldmlvdXNUcmFja2VyKTsKIAkJCX0gZWxzZSB7CQkJCQkJCQkJCQkJLy8gMy4gbm8g
cmUtdXNlLCBjcmVhdGUgYSBmcmVzaCB0cmFja2luZyB2YXJpYWJsZToKIAkJCQlyaHNUcmFja1Zh
ciA9IGFuYWx5c2VDbG9zZWFibGVFeHByZXNzaW9uKGZsb3dJbmZvLCBsb2NhbCwgbG9jYXRpb24s
IHJocywgbnVsbCk7CiAJCQkJaWYgKHJoc1RyYWNrVmFyICE9IG51bGwpIHsKIAkJCQkJbG9jYWwu
Y2xvc2VUcmFja2VyID0gcmhzVHJhY2tWYXI7CiAJCQkJCS8vIGEgZnJlc2ggcmVzb3VyY2UsIG1h
cmsgYXMgbm90LWNsb3NlZDoKLQkJCQkJaWYgKChyaHNUcmFja1Zhci5nbG9iYWxDbG9zaW5nU3Rh
dGUgJiBQQVNTRURfVE9fT1VUU0lERSkgPT0gMCkKKwkJCQkJaWYgKChyaHNUcmFja1Zhci5nbG9i
YWxDbG9zaW5nU3RhdGUgJiAoUEFTU0VEX1RPX09VVFNJREV8T0JUQUlORURfRlJPTV9PVVRTSURF
KSkgPT0gMCkKIAkJCQkJCWZsb3dJbmZvLm1hcmtBc0RlZmluaXRlbHlOdWxsKHJoc1RyYWNrVmFy
LmJpbmRpbmcpOwogLy8gVE9ETyhzdGVwaGFuKTogdGhpcyBtaWdodCBiZSB1c2VmdWwsIGJ1dCBJ
IGNvdWxkIG5vdCBmaW5kIGEgdGVzdCBjYXNlIGZvciBpdDogCiAvLwkJCQkJaWYgKGZsb3dDb250
ZXh0LmluaXRzT25GaW5hbGx5ICE9IG51bGwpCkBAIC0zMzMsMTUgKzM0OSwxNSBAQCBwdWJsaWMg
Y2xhc3MgRmFrZWRUcmFja2luZ1ZhcmlhYmxlIGV4dGVuZHMgTG9jYWxEZWNsYXJhdGlvbiB7CiAJ
CQkvLyB3ZSAqbWlnaHQqIGJlIHJlc3BvbnNpYmxlIGZvciB0aGUgcmVzb3VyY2Ugb2J0YWluZWQK
IAkJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSB0cmFja2VyID0gbmV3IEZha2VkVHJhY2tpbmdWYXJp
YWJsZShsb2NhbCwgbG9jYXRpb24pOwogCQkJdHJhY2tlci5nbG9iYWxDbG9zaW5nU3RhdGUgfD0g
UEFTU0VEX1RPX09VVFNJREU7Ci0JCQlmbG93SW5mby5tYXJrUG90ZW50aWFsbHlOdWxsQml0KHRy
YWNrZXIuYmluZGluZyk7CisJCQlmbG93SW5mby5tYXJrUG90ZW50aWFsbHlOdWxsQml0KHRyYWNr
ZXIuYmluZGluZyk7IC8vIHNoZWQgc29tZSBkb3VidAogCQkJcmV0dXJuIHRyYWNrZXI7CQkJCiAJ
CX0gZWxzZSBpZiAoZXhwcmVzc2lvbiBpbnN0YW5jZW9mIEZpZWxkUmVmZXJlbmNlIAogCQkJCXx8
IGV4cHJlc3Npb24gaW5zdGFuY2VvZiBRdWFsaWZpZWROYW1lUmVmZXJlbmNlKSAKIAkJewogCQkJ
Ly8gcmVzcG9uc2liaWxpdHkgZm9yIHRoaXMgcmVzb3VyY2UgcHJvYmFibHkgbGllcyBhdCBhIGhp
Z2hlciBsZXZlbAogCQkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlIHRyYWNrZXIgPSBuZXcgRmFrZWRU
cmFja2luZ1ZhcmlhYmxlKGxvY2FsLCBsb2NhdGlvbik7Ci0JCQl0cmFja2VyLmdsb2JhbENsb3Np
bmdTdGF0ZSB8PSBQQVNTRURfVE9fT1VUU0lERTsKLQkJCWZsb3dJbmZvLm1hcmtQb3RlbnRpYWxs
eU5vbk51bGxCaXQodHJhY2tlci5iaW5kaW5nKTsKKwkJCXRyYWNrZXIuZ2xvYmFsQ2xvc2luZ1N0
YXRlIHw9IE9CVEFJTkVEX0ZST01fT1VUU0lERTsKKwkJCS8vIGxlYXZlIHN0YXRlIGFzIFVOS05P
V04sIHRoZSBiaXQgT0JUQUlORURfRlJPTV9PVVRTSURFIHdpbGwgcHJldmVudCBzcHVyaW91cyB3
YXJuaW5ncwogCQkJcmV0dXJuIHRyYWNrZXI7CQkJCiAJCX0KIApAQCAtMzg1LDcgKzQwMSw3IEBA
IHB1YmxpYyBjbGFzcyBGYWtlZFRyYWNraW5nVmFyaWFibGUgZXh0ZW5kcyBMb2NhbERlY2xhcmF0
aW9uIHsKIAl9CiAKIAkvKiogQW5zd2VyIHdpdGhlciB0aGUgZ2l2ZW4gdHlwZSBiaW5kaW5nIGlz
IGEgc3VidHlwZSBvZiBqYXZhLmxhbmcuQXV0b0Nsb3NlYWJsZS4gKi8KLQlwdWJsaWMgc3RhdGlj
IGJvb2xlYW4gaXNBdXRvQ2xvc2VhYmxlKFR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nKSB7CisJcHVi
bGljIHN0YXRpYyBib29sZWFuIGlzQW55Q2xvc2VhYmxlKFR5cGVCaW5kaW5nIHR5cGVCaW5kaW5n
KSB7CiAJCXJldHVybiB0eXBlQmluZGluZyBpbnN0YW5jZW9mIFJlZmVyZW5jZUJpbmRpbmcKIAkJ
CSYmICgoUmVmZXJlbmNlQmluZGluZyl0eXBlQmluZGluZykuaGFzVHlwZUJpdChUeXBlSWRzLkJp
dEF1dG9DbG9zZWFibGV8VHlwZUlkcy5CaXRDbG9zZWFibGUpOwogCX0KQEAgLTU0NCw3ICs1NjAs
NyBAQCBwdWJsaWMgY2xhc3MgRmFrZWRUcmFja2luZ1ZhcmlhYmxlIGV4dGVuZHMgTG9jYWxEZWNs
YXJhdGlvbiB7CiAJfQogCiAJcHVibGljIHZvaWQgcmVwb3J0RXhwbGljaXRDbG9zaW5nKFByb2Js
ZW1SZXBvcnRlciBwcm9ibGVtUmVwb3J0ZXIpIHsKLQkJaWYgKCh0aGlzLmdsb2JhbENsb3NpbmdT
dGF0ZSAmIFJFUE9SVEVEKSA9PSAwKSB7CisJCWlmICgodGhpcy5nbG9iYWxDbG9zaW5nU3RhdGUg
JiAoT0JUQUlORURfRlJPTV9PVVRTSURFfFJFUE9SVEVEKSkgPT0gMCkgeyAvLyBjYW4ndCB1c2Ug
dC13LXIgZm9yIE9CVEFJTkVEX0ZST01fT1VUU0lERQogCQkJdGhpcy5nbG9iYWxDbG9zaW5nU3Rh
dGUgfD0gUkVQT1JURUQ7CiAJCQlwcm9ibGVtUmVwb3J0ZXIuZXhwbGljaXRseUNsb3NlZEF1dG9D
bG9zZWFibGUodGhpcyk7CiAJCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTG9jYWxEZWNsYXJh
dGlvbi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Mb2NhbERlY2xhcmF0aW9uLmphdmEKaW5kZXggMzc4MTU1
My4uMjM5ZWYxNSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Mb2NhbERlY2xhcmF0aW9uLmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2FzdC9Mb2NhbERlY2xhcmF0aW9uLmphdmEKQEAgLTc4LDcgKzc4LDcgQEAg
cHVibGljIEZsb3dJbmZvIGFuYWx5c2VDb2RlKEJsb2NrU2NvcGUgY3VycmVudFNjb3BlLCBGbG93
Q29udGV4dCBmbG93Q29udGV4dCwgRmwKIAlGbG93SW5mbyBwcmVJbml0SW5mbyA9IG51bGw7CiAJ
Ym9vbGVhbiBzaG91bGRBbmFseXNlUmVzb3VyY2UgPSB0aGlzLmJpbmRpbmcgIT0gbnVsbCAKIAkJ
CSYmIGZsb3dJbmZvLnJlYWNoTW9kZSgpID09IEZsb3dJbmZvLlJFQUNIQUJMRSAKLQkJCSYmIEZh
a2VkVHJhY2tpbmdWYXJpYWJsZS5pc0F1dG9DbG9zZWFibGUodGhpcy5pbml0aWFsaXphdGlvbi5y
ZXNvbHZlZFR5cGUpOworCQkJJiYgRmFrZWRUcmFja2luZ1ZhcmlhYmxlLmlzQW55Q2xvc2VhYmxl
KHRoaXMuaW5pdGlhbGl6YXRpb24ucmVzb2x2ZWRUeXBlKTsKIAlpZiAoc2hvdWxkQW5hbHlzZVJl
c291cmNlKSB7CiAJCXByZUluaXRJbmZvID0gZmxvd0luZm8udW5jb25kaXRpb25hbENvcHkoKTsK
IAkJLy8gYW5hbHlzaXMgb2YgcmVzb3VyY2UgbGVha3MgbmVlZHMgYWRkaXRpb25hbCBjb250ZXh0
IHdoaWxlIGFuYWx5emluZyB0aGUgUkhTOgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CbG9j
a1Njb3BlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Jsb2NrU2NvcGUuamF2YQppbmRleCAxODkwMzE1
Li41ZTM0NmU5IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Jsb2NrU2NvcGUuamF2YQorKysg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvbG9va3VwL0Jsb2NrU2NvcGUuamF2YQpAQCAtOTc3LDggKzk3Nyw3IEBAIHB1Ymxp
YyBpbnQgcmVnaXN0ZXJUcmFja2luZ1ZhcmlhYmxlKEZha2VkVHJhY2tpbmdWYXJpYWJsZSBmYWtl
ZFRyYWNraW5nVmFyaWFibGUpCiAJCXRoaXMudHJhY2tpbmdWYXJpYWJsZXMgPSBuZXcgQXJyYXlM
aXN0KDMpOwogCXRoaXMudHJhY2tpbmdWYXJpYWJsZXMuYWRkKGZha2VkVHJhY2tpbmdWYXJpYWJs
ZSk7CiAJTWV0aG9kU2NvcGUgb3V0ZXJNZXRob2RTY29wZSA9IG91dGVyTW9zdE1ldGhvZFNjb3Bl
KCk7Ci0JcmV0dXJuIG91dGVyTWV0aG9kU2NvcGUuYW5hbHlzaXNJbmRleCArIChvdXRlck1ldGhv
ZFNjb3BlLnRyYWNrVmFyQ291bnQrKyk7Ci0JCisJcmV0dXJuIG91dGVyTWV0aG9kU2NvcGUuYW5h
bHlzaXNJbmRleCsrOwogfQogLyoqIFdoZW4gYXJlIG5vIGxvbmdlciBpbnRlcmVzdGVkIGluIHRo
aXMgdHJhY2tpbmcgdmFyaWFibGUgLSByZW1vdmUgaXQuICovCiBwdWJsaWMgdm9pZCByZW1vdmVU
cmFja2luZ1ZhcihGYWtlZFRyYWNraW5nVmFyaWFibGUgdHJhY2tpbmdWYXJpYWJsZSkgewpkaWZm
IC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RTY29wZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9N
ZXRob2RTY29wZS5qYXZhCmluZGV4IDUyYzcyNTguLmJmYjRmMmIgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9sb29rdXAvTWV0aG9kU2NvcGUuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL01ldGhvZFNjb3Bl
LmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJp
Z2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFs
cwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQ
dWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlv
biwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtNTAsOSArNTAsNiBAQCBwdWJsaWMgY2xhc3MgTWV0
aG9kU2NvcGUgZXh0ZW5kcyBCbG9ja1Njb3BlIHsKIAkvLyBpbm5lci1lbXVsYXRpb24KIAlwdWJs
aWMgU3ludGhldGljQXJndW1lbnRCaW5kaW5nW10gZXh0cmFTeW50aGV0aWNBcmd1bWVudHM7CiAK
LQkvLyBjb3VudCBudW1iZXIgb2YgdHJhY2tpbmcgdmFyaWFibGVzLCBzZWUgRmFrZWRUcmFja2lu
Z1ZhcmlhYmxlCi0JaW50IHRyYWNrVmFyQ291bnQgPSAwOwotCiBwdWJsaWMgTWV0aG9kU2NvcGUo
Q2xhc3NTY29wZSBwYXJlbnQsIFJlZmVyZW5jZUNvbnRleHQgY29udGV4dCwgYm9vbGVhbiBpc1N0
YXRpYykgewogCXN1cGVyKE1FVEhPRF9TQ09QRSwgcGFyZW50KTsKIAl0aGlzLmxvY2FscyA9IG5l
dyBMb2NhbFZhcmlhYmxlQmluZGluZ1s1XTsK
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>209373</attachid>
            <date>2012-01-12 08:40:00 -0500</date>
            <delta_ts>2012-01-13 16:17:57 -0500</delta_ts>
            <desc>incremental changes 2</desc>
            <filename>Bug_358903_v0.9.6-update2.patch</filename>
            <type>text/plain</type>
            <size>120598</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Rlc3RBbGwuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Rlc3RBbGwuamF2YQppbmRleCA0ZGJmOGJh
Li41MTE1MDlhIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxl
ci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9UZXN0
QWxsLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vVGVzdEFsbC5qYXZh
CkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAo
YykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAo
YykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMg
cmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAq
IGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGlj
IExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFu
ZCBpcyBhdmFpbGFibGUgYXQKQEAgLTc0LDYgKzc0LDcgQEAgcHVibGljIHN0YXRpYyBUZXN0IHN1
aXRlKCkgewogCXN0YW5kYXJkVGVzdHMuYWRkKFByb2dyYW1taW5nUHJvYmxlbXNUZXN0LmNsYXNz
KTsKIAlzdGFuZGFyZFRlc3RzLmFkZChNYW5pZmVzdEFuYWx5emVyVGVzdC5jbGFzcyk7CiAJc3Rh
bmRhcmRUZXN0cy5hZGQoSW5pdGlhbGl6YXRpb25UZXN0cy5jbGFzcyk7CisJc3RhbmRhcmRUZXN0
cy5hZGQoUmVzb3VyY2VMZWFrVGVzdHMuY2xhc3MpOwogCiAJLy8gYWRkIGFsbCBqYXZhZG9jIHRl
c3RzCiAJZm9yIChpbnQgaT0wLCBsPUphdmFkb2NUZXN0LkFMTF9DTEFTU0VTLnNpemUoKTsgaTxs
OyBpKyspIHsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVy
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1RyeVdp
dGhSZXNvdXJjZXNTdGF0ZW1lbnRUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0
cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVz
c2lvbi9UcnlXaXRoUmVzb3VyY2VzU3RhdGVtZW50VGVzdC5qYXZhCmluZGV4IDYyMTcxNzUuLmU3
MmQ1YjEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3Ny
Yy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1RyeVdpdGhS
ZXNvdXJjZXNTdGF0ZW1lbnRUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jl
c3Npb24vVHJ5V2l0aFJlc291cmNlc1N0YXRlbWVudFRlc3QuamF2YQpAQCAtMTksMTcgKzE5LDEx
IEBACiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMuY29tcGlsZXIucmVncmVzc2lvbjsKIAotaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRp
b247Ci1pbXBvcnQgamF2YS5uZXQuVVJMOwogaW1wb3J0IGphdmEudXRpbC5NYXA7CiAKLWltcG9y
dCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuRmlsZUxvY2F0b3I7Ci1pbXBvcnQgb3JnLmVjbGlw
c2UuY29yZS5ydW50aW1lLlBhdGg7Ci1pbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLlBs
YXRmb3JtOwotaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLkphdmFDb3JlOwotaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5pbXBsLkNvbXBpbGVyT3B0aW9uczsKLQog
aW1wb3J0IGp1bml0LmZyYW1ld29yay5UZXN0OworCitpbXBvcnQgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmltcGwuQ29tcGlsZXJPcHRpb25zOwogcHVibGljIGNsYXNzIFRyeVdp
dGhSZXNvdXJjZXNTdGF0ZW1lbnRUZXN0IGV4dGVuZHMgQWJzdHJhY3RSZWdyZXNzaW9uVGVzdCB7
CiAKIHN0YXRpYyB7CkBAIC0zNDY0LDI3NTcgKzM0NTgsMTc1IEBAIHB1YmxpYyB2b2lkIHRlc3Qw
NTVhKCkgewogCQl9LAogCQkiRG9uZSIpOwogfQotLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3
YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNlcwotLy8gYSBtZXRob2QgdXNlcyBh
biBBdXRvQ2xvc2VhYmxlIHdpdGhvdXQgZXZlciBjbG9zaW5nIGl0LgotcHVibGljIHZvaWQgdGVz
dDA1NigpIHsKLQlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwotCW9wdGlvbnMu
cHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBp
bGVyT3B0aW9ucy5FUlJPUik7Ci0Jb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9S
ZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuV0FSTklO
Ryk7Ci0JdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCi0JCW5ldyBTdHJpbmdbXSB7Ci0JCQkiWC5qYXZh
IiwKLQkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCi0JCQkiaW1wb3J0IGphdmEuaW8uRmls
ZVJlYWRlcjtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCi0JCQki
cHVibGljIGNsYXNzIFgge1xuIiArCi0JCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0
aW9uIHtcbiIgKwotCQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwi
KTtcbiIgKwotCQkJIiAgICAgICAgRmlsZVJlYWRlciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFk
ZXIoZmlsZSk7XG4iICsKLS8vIG5vdCBpbnZva2luZyBhbnkgbWV0aG9kcyBvbiBGaWxlUmVhZGVy
LCB0cnkgdG8gYXZvaWQgbmVjZXNzYXJ5IGNhbGwgdG8gc3VwZXJjbGFzcygpIGluIHRoZSBjb21w
aWxlcgotLy8JCQkiICAgICAgICBjaGFyW10gaW4gPSBuZXcgY2hhcls1MF07XG4iICsKLS8vCQkJ
IiAgICAgICAgZmlsZVJlYWRlci5yZWFkKGluKTtcbiIgKwotCQkJIiAgICB9XG4iICsKLQkJCSIg
ICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykgdGhyb3dzIElPRXhjZXB0
aW9uIHtcbiIgKwotCQkJIiAgICAgICAgbmV3IFgoKS5mb28oKTtcbiIgKwotCQkJIiAgICB9XG4i
ICsKLQkJCSJ9XG4iCi0JCX0sCi0JCSItLS0tLS0tLS0tXG4iICsgCi0JCSIxLiBFUlJPUiBpbiBY
LmphdmEgKGF0IGxpbmUgNylcbiIgKyAKLQkJIglGaWxlUmVhZGVyIGZpbGVSZWFkZXIgPSBuZXcg
RmlsZVJlYWRlcihmaWxlKTtcbiIgKyAKLQkJIgkgICAgICAgICAgIF5eXl5eXl5eXl5cbiIgKyAK
LQkJIlJlc291cmNlIGxlYWs6ICdmaWxlUmVhZGVyJyBpcyBuZXZlciBjbG9zZWRcbiIgKwotCQki
LS0tLS0tLS0tLVxuIiwKLQkJbnVsbCwKLQkJdHJ1ZSwKLQkJb3B0aW9ucyk7Ci19Ci0vLyBCdWcg
MzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2Vz
Ci0vLyBhIG1ldGhvZCB1c2VzIGFuIEF1dG9DbG9zZWFibGUgYW5kIGNsb3NlcyBpdCBidXQgbm90
IHByb3RlY3RlZCBieSB0LXctciBub3IgcmVndWxhciB0cnktZmluYWxseQotcHVibGljIHZvaWQg
dGVzdDA1NmEoKSB7Ci0JTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKLQlvcHRp
b25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBD
b21waWxlck9wdGlvbnMuRVJST1IpOwotCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJ
T05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVS
Uk9SKTsKLQlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydEV4cGxpY2l0
bHlDbG9zZWRBdXRvQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCXRoaXMucnVu
TmVnYXRpdmVUZXN0KAorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTM2MTA1MworcHVibGljIHZvaWQgdGVzdDA1NygpIHsKKwl0aGlzLnJ1bkNvbmZvcm1U
ZXN0KAogCQluZXcgU3RyaW5nW10gewogCQkJIlguamF2YSIsCi0JCQkiaW1wb3J0IGphdmEuaW8u
RmlsZTtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFkZXI7XG4iICsKLQkJCSJpbXBv
cnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKwotCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwot
CQkJIiAgICB2b2lkIGZvbygpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKLQkJCSIgICAgICAg
IEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKLQkJCSIgICAgICAgIEZp
bGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiArCi0JCQkiICAg
ICAgICBjaGFyW10gaW4gPSBuZXcgY2hhcls1MF07XG4iICsKLQkJCSIgICAgICAgIGZpbGVSZWFk
ZXIucmVhZChpbik7XG4iICsKLQkJCSIJCSBmaWxlUmVhZGVyLmNsb3NlKCk7XG4iICsKLQkJCSIg
ICAgfVxuIiArCi0JCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3Mp
IHtcbiIgKwotCQkJIiAgICAgICAgdHJ5IHtcbiIgKwotCQkJIiAgICAgICAgICAgIG5ldyBYKCku
Zm9vKCk7XG4iICsKLQkJCSIgICAgICAgIH0gY2F0Y2ggKElPRXhjZXB0aW9uIGlvZXgpIHtcbiIg
KwotCQkJIiAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcImNhdWdodFwiKTtcbiIgKwot
CQkJIiAgICAgICAgfVxuIiArCi0JCQkiICAgIH1cbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIGlt
cGxlbWVudHMgQXV0b0Nsb3NlYWJsZSB7XG4iICsKKwkJCSIJQE92ZXJyaWRlXG4iICsKKwkJCSIJ
cHVibGljIHZvaWQgY2xvc2UoKSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIgKworCQkJIgkJdGhyb3cg
bmV3IEV4Y2VwdGlvbigpO1xuIiArCisJCQkiCX1cbiIgKworCQkJIglwdWJsaWMgc3RhdGljIHZv
aWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iICsKKwkJCSIJCWZpbmFsIGJvb2xlYW4gZm9vO1xu
IiArCisJCQkiCQl0cnkgKFggYSA9IG5ldyBYKCk7IFggYiA9IG5ldyBYKCkpIHtcbiIgKworCQkJ
IgkJCWZvbyA9IHRydWU7XG4iICsKKwkJCSIJCX0gY2F0Y2ggKGZpbmFsIEV4Y2VwdGlvbiBleGNl
cHRpb24pIHtcbiIgKworCQkJIgkJCXJldHVybjtcbiIgKworCQkJIgkJfVxuIiArCisJCQkiCX1c
biIgKwogCQkJIn1cbiIKLQkJfSwKLQkJIi0tLS0tLS0tLS1cbiIgKyAKLQkJIjEuIEVSUk9SIGlu
IFguamF2YSAoYXQgbGluZSA3KVxuIiArIAotCQkiCUZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5l
dyBGaWxlUmVhZGVyKGZpbGUpO1xuIiArIAotCQkiCSAgICAgICAgICAgXl5eXl5eXl5eXlxuIiAr
IAotCQkiUmVzb3VyY2UgJ2ZpbGVSZWFkZXInIHNob3VsZCBiZSBtYW5hZ2VkIGJ5IHRyeS13aXRo
LXJlc291cmNlXG4iICsgCi0JCSItLS0tLS0tLS0tXG4iLAotCQludWxsLAotCQl0cnVlLAotCQlv
cHRpb25zKTsKKwkJfSwgICIiKTsJCiB9Ci0vLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5p
bmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCi0vLyBhIG1ldGhvZCB1c2VzIGFuIEF1
dG9DbG9zZWFibGUgYW5kIGNsb3NlcyBpdCBwcm9wZXJseSBpbiBhIGZpbmFsbHkgYmxvY2sKLXB1
YmxpYyB2b2lkIHRlc3QwNTZiKCkgewotCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25z
KCk7Ci0Jb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENs
b3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQlvcHRpb25zLnB1dChDb21waWxlck9w
dGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVy
T3B0aW9ucy5FUlJPUik7CisvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1
Zy5jZ2k/aWQ9MzY0MDA4CitwdWJsaWMgdm9pZCB0ZXN0MDU4KCkgewogCXRoaXMucnVuQ29uZm9y
bVRlc3QoCiAJCW5ldyBTdHJpbmdbXSB7CiAJCQkiWC5qYXZhIiwKLQkJCSJpbXBvcnQgamF2YS5p
by5GaWxlO1xuIiArCi0JCQkiaW1wb3J0IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIgKworCQkJImlt
cG9ydCBqYXZhLmlvLkJ5dGVBcnJheU91dHB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZh
LmlvLkZpbGVPdXRwdXRTdHJlYW07XG4iICsKIAkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlv
bjtcbiIgKworCQkJIlxuIiArCiAJCQkicHVibGljIGNsYXNzIFgge1xuIiArCi0JCQkiICAgIHZv
aWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwotCQkJIiAgICAgICAgRmlsZSBmaWxl
ID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKwotCQkJIiAgICAgICAgRmlsZVJlYWRlciBm
aWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsKLQkJCSIgICAgICAgIHRyeSB7
XG4iICsKLQkJCSIgICAgICAgICAgICBjaGFyW10gaW4gPSBuZXcgY2hhcls1MF07XG4iICsKLQkJ
CSIgICAgICAgICAgICBmaWxlUmVhZGVyLnJlYWQoaW4pO1xuIiArCi0JCQkiICAgICAgICB9IGZp
bmFsbHkge1xuIiArCi0JCQkiCQkgICAgIGZpbGVSZWFkZXIuY2xvc2UoKTtcbiIgKwotCQkJIiAg
ICAgICAgfVxuIiArCi0JCQkiICAgIH1cbiIgKwotCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQg
bWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iICsKLQkJCSIgICAgICAgIHRyeSB7XG4iICsKLQkJCSIg
ICAgICAgICAgICBuZXcgWCgpLmZvbygpO1xuIiArCi0JCQkiICAgICAgICB9IGNhdGNoIChJT0V4
Y2VwdGlvbiBpb2V4KSB7XG4iICsKLQkJCSIgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4o
XCJjYXVnaHRcIik7XG4iICsKLQkJCSIgICAgICAgIH1cbiIgKworCQkJIlxuIiArCisJCQkiICBw
dWJsaWMgc3RhdGljIHZvaWQgbWFpbihmaW5hbCBTdHJpbmdbXSBhcmdzKSB0aHJvd3MgSU9FeGNl
cHRpb24ge1xuIiArCisJCQkiICAgIGJ5dGVbXSBkYXRhO1xuIiArCisJCQkiICAgIHRyeSAoZmlu
YWwgQnl0ZUFycmF5T3V0cHV0U3RyZWFtIG9zID0gbmV3IEJ5dGVBcnJheU91dHB1dFN0cmVhbSgp
O1xuIiArCisJCQkiICAgICAgICAgZmluYWwgRmlsZU91dHB1dFN0cmVhbSBvdXQgPSBuZXcgRmls
ZU91dHB1dFN0cmVhbShcInRlc3QuZGF0XCIpKSB7XG4iICsKKwkJCSIgICAgICBkYXRhID0gb3Mu
dG9CeXRlQXJyYXkoKTtcbiIgKwogCQkJIiAgICB9XG4iICsKKwkJCSIgIH1cbiIgKwogCQkJIn1c
biIKLQkJfSwKLQkJImNhdWdodCIsIC8qb3V0cHV0Ki8KLQkJbnVsbC8qY2xhc3NMaWJzKi8sCi0J
CXRydWUvKnNob3VsZEZsdXNoKi8sCi0JCW51bGwvKnZtYXJncyovLAotCQlvcHRpb25zLAotCQlu
dWxsLypyZXF1ZXN0b3IqLyk7CisJCX0sICAiIik7CQogfQotLy8gQnVnIDM0OTMyNiAtIFsxLjdd
IG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNlcwotLy8gYSBtZXRob2Qg
dXNlcyBhbiBBdXRvQ2xvc2VhYmxlIHByb3Blcmx5IHdpdGhpbiB0cnktd2l0aC1yZXNvdXJjZXMu
Ci1wdWJsaWMgdm9pZCB0ZXN0MDU2YygpIHsKLQlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0
aW9ucygpOwotCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9z
ZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0Jb3B0aW9ucy5wdXQoQ29tcGls
ZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21w
aWxlck9wdGlvbnMuV0FSTklORyk7CisvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9z
aG93X2J1Zy5jZ2k/aWQ9MzY3NTY2IC0gSW4gdHJ5LXdpdGgtcmVzb3VyY2VzIHN0YXRlbWVudCBj
bG9zZSgpIG1ldGhvZCBvZiByZXNvdXJjZSBpcyBub3QgY2FsbGVkCitwdWJsaWMgdm9pZCB0ZXN0
MDU5KCkgewogCXRoaXMucnVuQ29uZm9ybVRlc3QoCiAJCW5ldyBTdHJpbmdbXSB7CiAJCQkiWC5q
YXZhIiwKLQkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCi0JCQkiaW1wb3J0IGphdmEuaW8u
RmlsZVJlYWRlcjtcbiIgKwogCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCi0J
CQkicHVibGljIGNsYXNzIFgge1xuIiArCi0JCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhj
ZXB0aW9uIHtcbiIgKwotCQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmls
ZVwiKTtcbiIgKwotCQkJIiAgICAgICAgdHJ5IChGaWxlUmVhZGVyIGZpbGVSZWFkZXIgPSBuZXcg
RmlsZVJlYWRlcihmaWxlKSkge1xuIiArCi0JCQkiICAgICAgICAgICAgY2hhcltdIGluID0gbmV3
IGNoYXJbNTBdO1xuIiArCi0JCQkiICAgICAgICAgICAgZmlsZVJlYWRlci5yZWFkKGluKTtcbiIg
KwotCQkJIgkJIH1cbiIgKwotCQkJIiAgICB9XG4iICsKLQkJCSIgICAgcHVibGljIHN0YXRpYyB2
b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIiArCi0JCQkiICAgICAgICB0cnkge1xuIiArCi0J
CQkiICAgICAgICAgICAgbmV3IFgoKS5mb28oKTtcbiIgKwotCQkJIiAgICAgICAgfSBjYXRjaCAo
SU9FeGNlcHRpb24gaW9leCkge1xuIiArCi0JCQkiICAgICAgICAgICAgU3lzdGVtLm91dC5wcmlu
dGxuKFwiY2F1Z2h0XCIpO1xuIiArCi0JCQkiICAgICAgICB9XG4iICsKKwkJCSJcbiIgKworCQkJ
InB1YmxpYyBjbGFzcyBYIGltcGxlbWVudHMgamF2YS5sYW5nLkF1dG9DbG9zZWFibGUge1xuIiAr
CisJCQkiICBzdGF0aWMgYm9vbGVhbiBpc09wZW4gPSB0cnVlO1xuIiArCisJCQkiICBwdWJsaWMg
c3RhdGljIHZvaWQgbWFpbihmaW5hbCBTdHJpbmdbXSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRpb24g
e1xuIiArCisJCQkiICAgIGZvbygpO1xuIiArCisJCQkiICAgIFN5c3RlbS5vdXQucHJpbnRsbihp
c09wZW4pO1xuIiArCisJCQkiICB9XG4iICsKKwkJCSIgIHN0YXRpYyBib29sZWFuIGZvbygpIHtc
biIgKworCQkJIiAgICB0cnkgKGZpbmFsIFggeCA9IG5ldyBYKCkpIHtcbiIgKworCQkJIiAgICAg
IHJldHVybiB4Lm51bSgpID49IDE7XG4iICsKIAkJCSIgICAgfVxuIiArCisJCQkiICB9XG4iICsK
KwkJCSIgIGludCBudW0oKSB7IHJldHVybiAyOyB9XG4iICsKKwkJCSIgIHB1YmxpYyB2b2lkIGNs
b3NlKCkge1xuIiArCisJCQkiICAgIGlzT3BlbiA9IGZhbHNlO1xuIiArCisJCQkiICB9XG4iICsK
IAkJCSJ9XG4iCi0JCX0sCi0JCSJjYXVnaHQiLCAvKm91dHB1dCovCi0JCW51bGwvKmNsYXNzTGli
cyovLAotCQl0cnVlLypzaG91bGRGbHVzaCovLAotCQludWxsLyp2bWFyZ3MqLywKLQkJb3B0aW9u
cywKLQkJbnVsbC8qcmVxdWVzdG9yKi8pOworCQl9LCAgCisJCSJmYWxzZSIpOwkKIH0KLS8vIEJ1
ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNvdXJj
ZXMKLS8vIGEgbWV0aG9kIHVzZXMgdHdvIEF1dG9DbG9zZWFibGVzICh0ZXN0aW5nIGluZGVwZW5k
ZW50IGFuYWx5c2lzKQotLy8gLSBvbmUgY2xvc2VhYmxlIG1heSBiZSB1bmNsb3NlZCBhdCBhIGNv
bmRpdGlvbmFsIHJldHVybgotLy8gLSB0aGUgb3RoZXIgaXMgb25seSBjb25kaXRpb25hbGx5IGNs
b3NlZAotcHVibGljIHZvaWQgdGVzdDA1NmQoKSB7Ci0JTWFwIG9wdGlvbnMgPSBnZXRDb21waWxl
ck9wdGlvbnMoKTsKLQlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVu
Y2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCW9wdGlvbnMucHV0KENv
bXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwg
Q29tcGlsZXJPcHRpb25zLldBUk5JTkcpOwotCXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCisvLyBo
dHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzY3NTY2IC0gSW4g
dHJ5LXdpdGgtcmVzb3VyY2VzIHN0YXRlbWVudCBjbG9zZSgpIG1ldGhvZCBvZiByZXNvdXJjZSBp
cyBub3QgY2FsbGVkCitwdWJsaWMgdm9pZCB0ZXN0MDYwKCkgeworCXRoaXMucnVuQ29uZm9ybVRl
c3QoCiAJCW5ldyBTdHJpbmdbXSB7CiAJCQkiWC5qYXZhIiwKLQkJCSJpbXBvcnQgamF2YS5pby5G
aWxlO1xuIiArCi0JCQkiaW1wb3J0IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIgKwotCQkJImltcG9y
dCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCi0JCQkicHVibGljIGNsYXNzIFgge1xuIiArCi0J
CQkiICAgIHZvaWQgZm9vKGJvb2xlYW4gZmxhZzEsIGJvb2xlYW4gZmxhZzIpIHRocm93cyBJT0V4
Y2VwdGlvbiB7XG4iICsKLQkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZp
bGVcIik7XG4iICsKLQkJCSIgICAgICAgIGNoYXJbXSBpbiA9IG5ldyBjaGFyWzUwXTtcbiIgKwot
CQkJIiAgICAgICAgRmlsZVJlYWRlciBmaWxlUmVhZGVyMSA9IG5ldyBGaWxlUmVhZGVyKGZpbGUp
O1xuIiArCi0JCQkiICAgICAgICBmaWxlUmVhZGVyMS5yZWFkKGluKTtcbiIgKwotCQkJIiAgICAg
ICAgRmlsZVJlYWRlciBmaWxlUmVhZGVyMiA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiArCi0J
CQkiICAgICAgICBmaWxlUmVhZGVyMi5yZWFkKGluKTtcbiIgKwotCQkJIiAgICAgICAgaWYgKGZs
YWcxKSB7XG4iICsKLQkJCSIgICAgICAgICAgICBmaWxlUmVhZGVyMi5jbG9zZSgpO1xuIiArCi0J
CQkiICAgICAgICAgICAgcmV0dXJuO1xuIiArCi0JCQkiICAgICAgICB9IGVsc2UgaWYgKGZsYWcy
KSB7XG4iICsKLQkJCSIgICAgICAgICAgICBmaWxlUmVhZGVyMi5jbG9zZSgpO1xuIiArCi0JCQki
ICAgICAgICB9XG4iICsKLQkJCSIgICAgICAgIGZpbGVSZWFkZXIxLmNsb3NlKCk7XG4iICsKLQkJ
CSIgICAgfVxuIiArCi0JCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFy
Z3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKLQkJCSIgICAgICAgIG5ldyBYKCkuZm9vKGZh
bHNlLCB0cnVlKTtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIGltcGxlbWVudHMgQXV0b0Nsb3Nl
YWJsZSB7XG4iICsKKwkJCSIJc3RhdGljIGludCBudW0gPSAxMCA7XG4iICsKKwkJCSIgICAgcHVi
bGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHRocm93cyBFeGNlcHRpb24geyBc
biIgKworCQkJIiAgICAJU3lzdGVtLm91dC5wcmludGxuKGZvbygxKSk7XG4iICsKKwkJCSIgICAg
CVN5c3RlbS5vdXQucHJpbnRsbihmb28oMikpO1xuIiArCisJCQkiICAgIAlTeXN0ZW0ub3V0LnBy
aW50bG4oZm9vKDMpKTtcbiIgKwogCQkJIiAgICB9XG4iICsKLQkJCSJ9XG4iCi0JCX0sCi0JCSIt
LS0tLS0tLS0tXG4iICsgCi0JCSIxLiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSAxMClcbiIg
KyAKLQkJIglGaWxlUmVhZGVyIGZpbGVSZWFkZXIyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4i
ICsgCi0JCSIJICAgICAgICAgICBeXl5eXl5eXl5eXlxuIiArIAotCQkiUG90ZW50aWFsIHJlc291
cmNlIGxlYWs6ICdmaWxlUmVhZGVyMicgbWF5IG5vdCBiZSBjbG9zZWRcbiIgKwotCQkiLS0tLS0t
LS0tLVxuIiArIAotCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDE0KVxuIiArIAotCQki
CXJldHVybjtcbiIgKyAKLQkJIgleXl5eXl5eXG4iICsgCi0JCSJSZXNvdXJjZSBsZWFrOiAnZmls
ZVJlYWRlcjEnIGlzIG5vdCBjbG9zZWQgYXQgdGhpcyBsb2NhdGlvblxuIiArIAotCQkiLS0tLS0t
LS0tLVxuIiwKLQkJbnVsbCwKLQkJdHJ1ZSwKLQkJb3B0aW9ucyk7Ci19Ci0vL0J1ZyAzNDkzMjYg
LSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNvdXJjZXMKLS8vYSBt
ZXRob2QgdXNlcyB0d28gQXV0b0Nsb3NlYWJsZXMgKHRlc3RpbmcgaW5kZXBlbmRlbnQgYW5hbHlz
aXMpCi0vLy0gb25lIGNsb3NlYWJsZSBtYXkgYmUgdW5jbG9zZWQgYXQgYSBjb25kaXRpb25hbCBy
ZXR1cm4KLS8vLSB0aGUgb3RoZXIgaXMgb25seSBjb25kaXRpb25hbGx5IGNsb3NlZAotcHVibGlj
IHZvaWQgdGVzdDA1NmRfc3VwcHJlc3MoKSB7Ci0JTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9w
dGlvbnMoKTsKLQlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xv
c2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCW9wdGlvbnMucHV0KENvbXBp
bGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29t
cGlsZXJPcHRpb25zLldBUk5JTkcpOwotCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJ
T05fU3VwcHJlc3NPcHRpb25hbEVycm9ycywgQ29tcGlsZXJPcHRpb25zLkVOQUJMRUQpOwotCXRo
aXMucnVuTmVnYXRpdmVUZXN0KAotCQluZXcgU3RyaW5nW10gewotCQkJIlguamF2YSIsCi0JCQki
aW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFkZXI7
XG4iICsKLQkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKwotCQkJInB1YmxpYyBj
bGFzcyBYIHtcbiIgKwotCQkJIiAgICB2b2lkIGZvbyhib29sZWFuIGZsYWcxLCBib29sZWFuIGZs
YWcyKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCi0JCQkiICAgICAgICBAU3VwcHJlc3NXYXJu
aW5ncyhcInJlc291cmNlXCIpIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7IC8v
IHVubmVjZXNzYXJ5IHN1cHByZXNzXG4iICsKLQkJCSIgICAgICAgIGNoYXJbXSBpbiA9IG5ldyBj
aGFyWzUwXTtcbiIgKwotCQkJIiAgICAgICAgRmlsZVJlYWRlciBmaWxlUmVhZGVyMSA9IG5ldyBG
aWxlUmVhZGVyKGZpbGUpO1xuIiArCi0JCQkiICAgICAgICBmaWxlUmVhZGVyMS5yZWFkKGluKTtc
biIgKwotCQkJIiAgICAgICAgQFN1cHByZXNzV2FybmluZ3MoXCJyZXNvdXJjZVwiKSBGaWxlUmVh
ZGVyIGZpbGVSZWFkZXIyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7IC8vIHVzZWZ1bCBzdXBwcmVz
c1xuIiArCi0JCQkiICAgICAgICBmaWxlUmVhZGVyMi5yZWFkKGluKTtcbiIgKwotCQkJIiAgICAg
ICAgaWYgKGZsYWcxKSB7XG4iICsKLQkJCSIgICAgICAgICAgICBmaWxlUmVhZGVyMi5jbG9zZSgp
O1xuIiArCi0JCQkiICAgICAgICAgICAgcmV0dXJuOyAvLyBub3Qgc3VwcHJlc3NlZFxuIiArCi0J
CQkiICAgICAgICB9IGVsc2UgaWYgKGZsYWcyKSB7XG4iICsKLQkJCSIgICAgICAgICAgICBmaWxl
UmVhZGVyMi5jbG9zZSgpO1xuIiArCisJCQkiCXByaXZhdGUgc3RhdGljIGJvb2xlYW4gZm9vKGlu
dCB3aGVyZSkgdGhyb3dzIEV4Y2VwdGlvbiB7XG4iICsKKwkJCSIJCWZpbmFsIGJvb2xlYW4gZ2V0
T3V0ID0gdHJ1ZTtcbiIgKworCQkJIiAgICAJU3lzdGVtLm91dC5wcmludGxuKFwiTWFpblwiKTtc
biIgKworCQkJIiAgICAJdHJ5IChYIHgxID0gbmV3IFgoKTsgWCB4MiA9IG5ldyBYKCkpIHtcbiIg
KworCQkJIiAgICAJCWlmICh3aGVyZSA9PSAxKSB7XG4iICsKKwkJCSIgICAgCQkJcmV0dXJuIHdo
ZXJlID09IDE7XG4iICsKKwkJCSIgICAgCQl9XG4iICsKKwkJCSIgICAgICAgICAgICBTeXN0ZW0u
b3V0LnByaW50bG4oXCJPdXRlciBUcnlcIik7XG4iICsKKwkJCSIgICAgICAgICAgICB3aGlsZSAo
dHJ1ZSkge1xuIiArCisJCQkiICAgICAgICAgICAgCXRyeSAoWSB5MSA9IG5ldyBZKCk7IFkgeTIg
PSBuZXcgWSgpKSB7IFxuIiArCisJCQkiICAgICAgICAgICAgCQlpZiAod2hlcmUgPT0gMikge1xu
IiArCisJCQkiICAgICAgICAgICAgCQkJcmV0dXJuIHdoZXJlID09IDI7XG4iICsKKwkJCSIgICAg
ICAgICAgICAJCX0JCVxuIiArCisJCQkiICAgICAgICAgICAgCQlTeXN0ZW0ub3V0LnByaW50bG4o
XCJNaWRkbGUgVHJ5XCIpO1xuIiArCisJCQkiICAgICAgICAgICAgCQl0cnkgKFogejEgPSBuZXcg
WigpOyBaIHoyID0gbmV3IFooKSkge1xuIiArCisJCQkiICAgICAgICAgICAgCQkJU3lzdGVtLm91
dC5wcmludGxuKFwiSW5uZXIgVHJ5XCIpO1xuIiArCisJCQkiICAgICAgICAgICAgCQkJaWYgKGdl
dE91dCkgXG4iICsKKwkJCSIgICAgICAgICAgICAJCQkJcmV0dXJuIG51bSA+PSAxMDtcbiIgKwor
CQkJIiAgICAgICAgICAgIAkJCWVsc2VcbiIgKworCQkJIiAgICAgICAgICAgIAkJCQlicmVhazsg
XG4iICsKKwkJCSIgICAgICAgICAgICAJCX1cbiIgKworCQkJIiAgICAgICAgICAgIAl9XG4iICsK
KwkJCSIgICAgICAgICAgICB9XG4iICsKKwkJCSIgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50
bG4oXCJPdXQgb2Ygd2hpbGVcIik7XG4iICsKIAkJCSIgICAgICAgIH1cbiIgKwotCQkJIiAgICAg
ICAgZmlsZVJlYWRlcjEuY2xvc2UoKTtcbiIgKwotCQkJIiAgICB9XG4iICsKLQkJCSIgICAgQFN1
cHByZXNzV2FybmluZ3MoXCJyZXNvdXJjZVwiKSAvLyB1c2VmdWwgc3VwcHJlc3NcbiIgKwotCQkJ
IiAgICB2b2lkIGJhcigpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKLQkJCSIgICAgICAgIEZp
bGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKLQkJCSIgICAgICAgIEZpbGVS
ZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiArCi0JCQkiICAgICAg
ICBjaGFyW10gaW4gPSBuZXcgY2hhcls1MF07XG4iICsKLQkJCSIgICAgICAgIGZpbGVSZWFkZXIu
cmVhZChpbik7XG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9p
ZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKLQkJCSIgICAg
ICAgIG5ldyBYKCkuZm9vKGZhbHNlLCB0cnVlKTtcbiIgKworCQkJIgkJcmV0dXJuIGZhbHNlO1xu
IiArCisJCQkiCX1cbiIgKworCQkJIiAgICBwdWJsaWMgWCgpIHtcbiIgKworCQkJIiAgICAgICAg
U3lzdGVtLm91dC5wcmludGxuKFwiWDo6WFwiKTtcbiIgKwogCQkJIiAgICB9XG4iICsKLQkJCSJ9
XG4iCi0JCX0sCi0JCSItLS0tLS0tLS0tXG4iICsgCi0JCSIxLiBXQVJOSU5HIGluIFguamF2YSAo
YXQgbGluZSA2KVxuIiArIAotCQkiCUBTdXBwcmVzc1dhcm5pbmdzKFwicmVzb3VyY2VcIikgRmls
ZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTsgLy8gdW5uZWNlc3Nhcnkgc3VwcHJlc3Nc
biIgKyAKLQkJIgkgICAgICAgICAgICAgICAgICBeXl5eXl5eXl5eXG4iICsgCi0JCSJVbm5lY2Vz
c2FyeSBAU3VwcHJlc3NXYXJuaW5ncyhcInJlc291cmNlXCIpXG4iICsgCi0JCSItLS0tLS0tLS0t
XG4iICsgCi0JCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTQpXG4iICsgCi0JCSIJcmV0
dXJuOyAvLyBub3Qgc3VwcHJlc3NlZFxuIiArIAotCQkiCV5eXl5eXl5cbiIgKyAKLQkJIlJlc291
cmNlIGxlYWs6ICdmaWxlUmVhZGVyMScgaXMgbm90IGNsb3NlZCBhdCB0aGlzIGxvY2F0aW9uXG4i
ICsgCi0JCSItLS0tLS0tLS0tXG4iLAotCQludWxsLAotCQl0cnVlLAotCQlvcHRpb25zKTsKLX0K
LS8vIEJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1y
ZXNvdXJjZXMKLS8vIEJ1ZyAzNjIzMzIgLSBPbmx5IHJlcG9ydCBwb3RlbnRpYWwgbGVhayB3aGVu
IGNsb3NlYWJsZSBub3QgY3JlYXRlZCBpbiB0aGUgbG9jYWwgc2NvcGUKLS8vIG9uZSBtZXRob2Qg
cmV0dXJucyBhbiBBdXRvQ2xlYXNibGUsIGEgc2Vjb25kIG1ldGhvZCB1c2VzIHRoaXMgb2JqZWN0
IHdpdGhvdXQgZXZlciBjbG9zaW5nIGl0LgotcHVibGljIHZvaWQgdGVzdDA1NmUoKSB7Ci0JTWFw
IG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKLQlvcHRpb25zLnB1dChDb21waWxlck9w
dGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJS
T1IpOwotCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFs
bHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQl0aGlzLnJ1bk5l
Z2F0aXZlVGVzdCgKLQkJbmV3IFN0cmluZ1tdIHsKLQkJCSJYLmphdmEiLAotCQkJImltcG9ydCBq
YXZhLmlvLkZpbGU7XG4iICsKLQkJCSJpbXBvcnQgamF2YS5pby5GaWxlUmVhZGVyO1xuIiArCi0J
CQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKLQkJCSJwdWJsaWMgY2xhc3MgWCB7
XG4iICsKLQkJCSIgICAgRmlsZVJlYWRlciBnZXRSZWFkZXIoU3RyaW5nIGZpbGVuYW1lKSB0aHJv
d3MgSU9FeGNlcHRpb24ge1xuIiArCi0JCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShc
InNvbWVmaWxlXCIpO1xuIiArCi0JCQkiICAgICAgICBGaWxlUmVhZGVyIGZpbGVSZWFkZXIgPSBu
ZXcgRmlsZVJlYWRlcihmaWxlKTtcbiIgKwotCQkJIiAgICAgICAgcmV0dXJuIGZpbGVSZWFkZXI7
XG4iICsgCQkvLyBkb24ndCBjb21wbGFpbiBoZXJlLCBwYXNzIHJlc3BvbnNpYmlsaXR5IHRvIGNh
bGxlcgorCQkJIiAgICBAT3ZlcnJpZGVcbiIgKworCQkJIglwdWJsaWMgdm9pZCBjbG9zZSgpIHRo
cm93cyBFeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oXCJY
Ojp+WFwiKTtcbiIgKwogCQkJIiAgICB9XG4iICsKLQkJCSIgICAgdm9pZCBmb28oKSB0aHJvd3Mg
SU9FeGNlcHRpb24ge1xuIiArCi0JCQkiICAgICAgICBGaWxlUmVhZGVyIHJlYWRlciA9IGdldFJl
YWRlcihcInNvbWVmaWxlXCIpO1xuIiArCi0JCQkiICAgICAgICBjaGFyW10gaW4gPSBuZXcgY2hh
cls1MF07XG4iICsKLQkJCSIgICAgICAgIHJlYWRlci5yZWFkKGluKTtcbiIgKworCQkJIn1cbiIg
KworCQkJImNsYXNzIFkgaW1wbGVtZW50cyBBdXRvQ2xvc2VhYmxlIHtcbiIgKworCQkJIiAgICBw
dWJsaWMgWSgpIHtcbiIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwiWTo6WVwi
KTtcbiIgKwogCQkJIiAgICB9XG4iICsKLQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4o
U3RyaW5nW10gYXJncykgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwotCQkJIiAgICAgICAgbmV3
IFgoKS5mb28oKTtcbiIgKworCQkJIiAgICBAT3ZlcnJpZGVcbiIgKworCQkJIglwdWJsaWMgdm9p
ZCBjbG9zZSgpIHRocm93cyBFeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBTeXN0ZW0ub3V0
LnByaW50bG4oXCJZOjp+WVwiKTtcbiIgKwogCQkJIiAgICB9XG4iICsKLQkJCSJ9XG4iCi0JCX0s
Ci0JCSItLS0tLS0tLS0tXG4iICsgCi0JCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTEp
XG4iICsgCi0JCSIJRmlsZVJlYWRlciByZWFkZXIgPSBnZXRSZWFkZXIoXCJzb21lZmlsZVwiKTtc
biIgKyAKLQkJIgkgICAgICAgICAgIF5eXl5eXlxuIiArIAotCQkiUG90ZW50aWFsIHJlc291cmNl
IGxlYWs6IFwncmVhZGVyXCcgbWF5IG5vdCBiZSBjbG9zZWRcbiIgKyAKLQkJIi0tLS0tLS0tLS1c
biIsCi0JCW51bGwsCi0JCXRydWUsCi0JCW9wdGlvbnMpOwotfQotLy8gQnVnIDM0OTMyNiAtIFsx
LjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNlcwotLy8gYSBtZXRo
b2QgZXhwbGljaXRseSBjbG9zZXMgaXRzIEF1dG9DbG9zZWFibGUgcmF0aGVyIHRoYW4gdXNpbmcg
dC13LXIKLXB1YmxpYyB2b2lkIHRlc3QwNTZmKCkgewotCU1hcCBvcHRpb25zID0gZ2V0Q29tcGls
ZXJPcHRpb25zKCk7Ci0Jb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRV
bmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQlvcHRpb25zLnB1dChD
b21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUs
IENvbXBpbGVyT3B0aW9ucy5XQVJOSU5HKTsKLQlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMu
T1BUSU9OX1JlcG9ydEV4cGxpY2l0bHlDbG9zZWRBdXRvQ2xvc2VhYmxlLCBDb21waWxlck9wdGlv
bnMuRVJST1IpOwotCXRoaXMucnVuTmVnYXRpdmVUZXN0KAotCQluZXcgU3RyaW5nW10gewotCQkJ
IlguamF2YSIsCi0JCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKwotCQkJImltcG9ydCBqYXZh
LmlvLkZpbGVSZWFkZXI7XG4iICsKLQkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIg
KwotCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwotCQkJIiAgICB2b2lkIGZvbygpIHRocm93cyBJ
T0V4Y2VwdGlvbiB7XG4iICsKLQkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29t
ZWZpbGVcIik7XG4iICsKLQkJCSIgICAgICAgIEZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG51bGw7
XG4iICsKLQkJCSIgICAgICAgIHRyeSB7XG4iICsKLQkJCSIgICAgICAgICAgICBmaWxlUmVhZGVy
ID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsKLQkJCSIgICAgICAgICAgICBjaGFyW10gaW4g
PSBuZXcgY2hhcls1MF07XG4iICsKLQkJCSIgICAgICAgICAgICBmaWxlUmVhZGVyLnJlYWQoaW4p
O1xuIiArCi0JCQkiICAgICAgICB9IGZpbmFsbHkge1xuIiArCi0JCQkiICAgICAgICAgICAgZmls
ZVJlYWRlci5jbG9zZSgpO1xuIiArCi0JCQkiICAgICAgICB9XG4iICsKKwkJCSJ9XG4iICsKKwkJ
CSJjbGFzcyBaIGltcGxlbWVudHMgQXV0b0Nsb3NlYWJsZSB7XG4iICsKKwkJCSIgICAgcHVibGlj
IFooKSB7XG4iICsKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcIlo6OlpcIik7XG4i
ICsKIAkJCSIgICAgfVxuIiArCi0JCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmlu
Z1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKLQkJCSIgICAgICAgIG5ldyBYKCku
Zm9vKCk7XG4iICsKKwkJCSIgICAgQE92ZXJyaWRlXG4iICsKKwkJCSIJcHVibGljIHZvaWQgY2xv
c2UoKSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmlu
dGxuKFwiWjo6flpcIik7XG4iICsKIAkJCSIgICAgfVxuIiArCiAJCQkifVxuIgotCQl9LAotCQki
LS0tLS0tLS0tLVxuIiArIAotCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDcpXG4iICsg
Ci0JCSIJRmlsZVJlYWRlciBmaWxlUmVhZGVyID0gbnVsbDtcbiIgKyAKLQkJIgkgICAgICAgICAg
IF5eXl5eXl5eXl5cbiIgKyAKLQkJIlJlc291cmNlICdmaWxlUmVhZGVyJyBzaG91bGQgYmUgbWFu
YWdlZCBieSB0cnktd2l0aC1yZXNvdXJjZVxuIiArIAotCQkiLS0tLS0tLS0tLVxuIiwKLQkJbnVs
bCwKLQkJdHJ1ZSwKLQkJb3B0aW9ucyk7Ci19Ci0vLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdh
cm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCi0vLyBhbiBBdXRvQ2xvc2VhYmxl
IGxvY2FsIGlzIHJlLWFzc2lnbmVkCi1wdWJsaWMgdm9pZCB0ZXN0MDU2ZygpIHsKLQlNYXAgb3B0
aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJ
TEVSX1BCX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQlvcHRp
b25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9QT1RFTlRJQUxMWV9VTkNMT1NFRF9DTE9TRUFC
TEUsIENvbXBpbGVyT3B0aW9ucy5XQVJOSU5HKTsKLQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01Q
SUxFUl9QQl9FWFBMSUNJVExZX0NMT1NFRF9BVVRPQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMu
SUdOT1JFKTsKLQl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKLQkJbmV3IFN0cmluZ1tdIHsKLQkJCSJY
LmphdmEiLAotCQkJImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsKLQkJCSJpbXBvcnQgamF2YS5p
by5GaWxlUmVhZGVyO1xuIiArCi0JCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsK
LQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKLQkJCSIgICAgdm9pZCBmb28oKSB0aHJvd3MgSU9F
eGNlcHRpb24ge1xuIiArCi0JCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVm
aWxlXCIpO1xuIiArCi0JCQkiICAgICAgICBGaWxlUmVhZGVyIGZpbGVSZWFkZXIgPSBuZXcgRmls
ZVJlYWRlcihmaWxlKTtcbiIgKwotCQkJIiAgICAgICAgY2hhcltdIGluID0gbmV3IGNoYXJbNTBd
O1xuIiArCi0JCQkiICAgICAgICBmaWxlUmVhZGVyLnJlYWQoaW4pO1xuIiArCi0JCQkiICAgICAg
ICBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsKLQkJCSIgICAgICAgIGZp
bGVSZWFkZXIucmVhZChpbik7XG4iICsKLQkJCSIgICAgICAgIGZpbGVSZWFkZXIuY2xvc2UoKTtc
biIgKwotCQkJIiAgICAgICAgZmlsZVJlYWRlciA9IG51bGw7XG4iICsKLQkJCSIgICAgfVxuIiAr
Ci0JCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJ
T0V4Y2VwdGlvbiB7XG4iICsKLQkJCSIgICAgICAgIG5ldyBYKCkuZm9vKCk7XG4iICsKLQkJCSIg
ICAgfVxuIiArCi0JCQkifVxuIgotCQl9LAotCQkiLS0tLS0tLS0tLVxuIiArIAotCQkiMS4gRVJS
T1IgaW4gWC5qYXZhIChhdCBsaW5lIDEwKVxuIiArIAotCQkiCWZpbGVSZWFkZXIgPSBuZXcgRmls
ZVJlYWRlcihmaWxlKTtcbiIgKyAKLQkJIgleXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5cbiIgKyAKLQkJIlJlc291cmNlIGxlYWs6ICdmaWxlUmVhZGVyJyBpcyBub3QgY2xvc2VkIGF0
IHRoaXMgbG9jYXRpb25cbiIgKyAKLQkJIi0tLS0tLS0tLS1cbiIsCi0JCW51bGwsCi0JCXRydWUs
Ci0JCW9wdGlvbnMpOwotfQotLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBt
aXNzaW5nIHRyeS13aXRoLXJlc291cmNlcwotLy8gYW4gQXV0b0Nsb3NlYWJsZSBsb2NhbCBpcyBy
ZS1hc3NpZ25lZCBhZnRlciBudWxsLWFzc2lnbmVkCi1wdWJsaWMgdm9pZCB0ZXN0MDU2ZzIoKSB7
Ci0JTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKLQlvcHRpb25zLnB1dChKYXZh
Q29yZS5DT01QSUxFUl9QQl9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5FUlJP
Uik7Ci0Jb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfUE9URU5USUFMTFlfVU5DTE9T
RURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7Ci0Jb3B0aW9ucy5wdXQoSmF2
YUNvcmUuQ09NUElMRVJfUEJfRVhQTElDSVRMWV9DTE9TRURfQVVUT0NMT1NFQUJMRSwgQ29tcGls
ZXJPcHRpb25zLklHTk9SRSk7Ci0JdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCi0JCW5ldyBTdHJpbmdb
XSB7Ci0JCQkiWC5qYXZhIiwKLQkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCi0JCQkiaW1w
b3J0IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0
aW9uO1xuIiArCi0JCQkicHVibGljIGNsYXNzIFgge1xuIiArCi0JCQkiICAgIHZvaWQgZm9vKCkg
dGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwotCQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZp
bGUoXCJzb21lZmlsZVwiKTtcbiIgKwotCQkJIiAgICAgICAgRmlsZVJlYWRlciBmaWxlUmVhZGVy
ID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsKLQkJCSIgICAgICAgIGNoYXJbXSBpbiA9IG5l
dyBjaGFyWzUwXTtcbiIgKwotCQkJIiAgICAgICAgZmlsZVJlYWRlci5yZWFkKGluKTtcbiIgKwot
CQkJIiAgICAgICAgZmlsZVJlYWRlciA9IG51bGw7XG4iICsKLQkJCSIgICAgICAgIGZpbGVSZWFk
ZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTtcbiIgKyAvLyBkb24ndCBjb21wbGFpbiBhZ2Fpbiwg
ZmlsZVJlYWRlciBpcyBudWxsLCBzbyBub3RoaW5nIGNhbiBsZWFrIGhlcmUKLQkJCSIgICAgICAg
IGZpbGVSZWFkZXIucmVhZChpbik7XG4iICsKLQkJCSIgICAgICAgIGZpbGVSZWFkZXIuY2xvc2Uo
KTtcbiIgKwotCQkJIiAgICB9XG4iICsKLQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4o
U3RyaW5nW10gYXJncykgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwotCQkJIiAgICAgICAgbmV3
IFgoKS5mb28oKTtcbiIgKwotCQkJIiAgICB9XG4iICsKLQkJCSJ9XG4iCi0JCX0sCi0JCSItLS0t
LS0tLS0tXG4iICsgCi0JCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTApXG4iICsgCi0J
CSIJZmlsZVJlYWRlciA9IG51bGw7XG4iICsgCi0JCSIJXl5eXl5eXl5eXl5eXl5eXl5cbiIgKyAK
LQkJIlJlc291cmNlIGxlYWs6ICdmaWxlUmVhZGVyJyBpcyBub3QgY2xvc2VkIGF0IHRoaXMgbG9j
YXRpb25cbiIgKyAKLQkJIi0tLS0tLS0tLS1cbiIsCi0JCW51bGwsCi0JCXRydWUsCi0JCW9wdGlv
bnMpOwotfQotLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRy
eS13aXRoLXJlc291cmNlcwotLy8gdHdvIEF1dG9DbG9zZWFibGVzIGF0IGRpZmZlcmVudCBuZXN0
aW5nIGxldmVscyAoYW5vbnltb3VzIGxvY2FsIHR5cGUpCi1wdWJsaWMgdm9pZCB0ZXN0MDU2aCgp
IHsKLQlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwotCW9wdGlvbnMucHV0KEph
dmFDb3JlLkNPTVBJTEVSX1BCX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVS
Uk9SKTsKLQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9QT1RFTlRJQUxMWV9VTkNM
T1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5XQVJOSU5HKTsKLQlvcHRpb25zLnB1dChK
YXZhQ29yZS5DT01QSUxFUl9QQl9FWFBMSUNJVExZX0NMT1NFRF9BVVRPQ0xPU0VBQkxFLCBDb21w
aWxlck9wdGlvbnMuSUdOT1JFKTsKLQl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKLQkJbmV3IFN0cmlu
Z1tdIHsKLQkJCSJYLmphdmEiLAotCQkJImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsKLQkJCSJp
bXBvcnQgamF2YS5pby5GaWxlUmVhZGVyO1xuIiArCi0JCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNl
cHRpb247XG4iICsKLQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKLQkJCSIgICAgdm9pZCBmb28o
KSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCi0JCQkiICAgICAgICBmaW5hbCBGaWxlIGZpbGUg
PSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xuIiArCi0JCQkiICAgICAgICBmaW5hbCBGaWxlUmVh
ZGVyIGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTtcbiIgKwotCQkJIiAgICAgICAg
Y2hhcltdIGluID0gbmV3IGNoYXJbNTBdO1xuIiArCi0JCQkiICAgICAgICBmaWxlUmVhZGVyLnJl
YWQoaW4pO1xuIiArCi0JCQkiICAgICAgICBuZXcgUnVubmFibGUoKSB7XG4gcHVibGljIHZvaWQg
cnVuKCkge1xuIiArCi0JCQkiICAgICAgICAgICAgdHJ5IHtcbiIgKwotCQkJIiAgICAgICAgICAg
ICAgICBmaWxlUmVhZGVyLmNsb3NlKCk7XG4iICsKLQkJCSIgICAgICAgICAgICAgICAgRmlsZVJl
YWRlciBsb2NhbFJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiArCi0JCQkiICAgICAg
ICAgICAgfSBjYXRjaCAoSU9FeGNlcHRpb24gZXgpIHsgLyogbm9wICovIH1cbiIgKwotCQkJIiAg
ICAgICAgfX0ucnVuKCk7XG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQkiICAgIHB1YmxpYyBzdGF0
aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKLQkJ
CSIgICAgICAgIG5ldyBYKCkuZm9vKCk7XG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQkifVxuIgot
CQl9LAotCQkiLS0tLS0tLS0tLVxuIiArIAotCQkiMS4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxp
bmUgNylcbiIgKyAKLQkJIglmaW5hbCBGaWxlUmVhZGVyIGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJl
YWRlcihmaWxlKTtcbiIgKyAKLQkJIgkgICAgICAgICAgICAgICAgIF5eXl5eXl5eXl5cbiIgKyAK
LQkJIlBvdGVudGlhbCByZXNvdXJjZSBsZWFrOiAnZmlsZVJlYWRlcicgbWF5IG5vdCBiZSBjbG9z
ZWRcbiIgKyAKLQkJIi0tLS0tLS0tLS1cbiIgKyAKLQkJIjIuIEVSUk9SIGluIFguamF2YSAoYXQg
bGluZSAxNClcbiIgKyAKLQkJIglGaWxlUmVhZGVyIGxvY2FsUmVhZGVyID0gbmV3IEZpbGVSZWFk
ZXIoZmlsZSk7XG4iICsgCi0JCSIJICAgICAgICAgICBeXl5eXl5eXl5eXlxuIiArIAotCQkiUmVz
b3VyY2UgbGVhazogJ2xvY2FsUmVhZGVyJyBpcyBuZXZlciBjbG9zZWRcbiIgKyAKLQkJIi0tLS0t
LS0tLS1cbiIsCi0JCW51bGwsCi0JCXRydWUsCi0JCW9wdGlvbnMpOwotfQotLy8gQnVnIDM0OTMy
NiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNlcwotLy8g
dGhyZWUgQXV0b0Nsb3NlYWJsZXMgaW4gZGlmZmVyZW50IGJsb2NrcyBvZiB0aGUgc2FtZSBtZXRo
b2QKLXB1YmxpYyB2b2lkIHRlc3QwNTZpKCkgewotCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJP
cHRpb25zKCk7Ci0Jb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfVU5DTE9TRURfQ0xP
U0VBQkxFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNP
TVBJTEVSX1BCX1BPVEVOVElBTExZX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25z
LldBUk5JTkcpOwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX0VYUExJQ0lUTFlf
Q0xPU0VEX0FVVE9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5JR05PUkUpOwotCXRoaXMucnVu
TmVnYXRpdmVUZXN0KAotCQluZXcgU3RyaW5nW10gewotCQkJIlguamF2YSIsCi0JCQkiaW1wb3J0
IGphdmEuaW8uRmlsZTtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFkZXI7XG4iICsK
LQkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKwotCQkJInB1YmxpYyBjbGFzcyBY
IHtcbiIgKwotCQkJIiAgICB2b2lkIGZvbyhib29sZWFuIGYxLCBib29sZWFuIGYyKSB0aHJvd3Mg
SU9FeGNlcHRpb24ge1xuIiArCi0JCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNv
bWVmaWxlXCIpO1xuIiArCi0JCQkiICAgICAgICBpZiAoZjEpIHtcbiIgKwotCQkJIiAgICAgICAg
ICAgIEZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpOyAvLyBlcnI6
IG5vdCBjbG9zZWRcbiIgKwotCQkJIiAgICAgICAgICAgIGNoYXJbXSBpbiA9IG5ldyBjaGFyWzUw
XTtcbiIgKwotCQkJIiAgICAgICAgICAgIGZpbGVSZWFkZXIucmVhZChpbik7XG4iICsKLQkJCSIg
ICAgICAgICAgICB3aGlsZSAodHJ1ZSkge1xuIiArCi0JCQkiICAgICAgICAgICAgICAgICBGaWxl
UmVhZGVyIGxvb3BSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTsgLy8gZG9uJ3Qgd2Fybiwg
cHJvcGVybHkgY2xvc2VkXG4iICsKLQkJCSIgICAgICAgICAgICAgICAgIGxvb3BSZWFkZXIuY2xv
c2UoKTsiICsKLQkJCSIgICAgICAgICAgICAgICAgIGJyZWFrO1xuIiArCi0JCQkiICAgICAgICAg
ICAgfVxuIiArCi0JCQkiICAgICAgICB9IGVsc2Uge1xuIiArCi0JCQkiICAgICAgICAgICAgRmls
ZVJlYWRlciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7IC8vIHdhcm46IG5vdCBj
bG9zZWQgb24gYWxsIHBhdGhzXG4iICsKLQkJCSIgICAgICAgICAgICBpZiAoZjIpXG4iICsKLQkJ
CSIgICAgICAgICAgICAgICAgZmlsZVJlYWRlci5jbG9zZSgpO1xuIiArCi0JCQkiICAgICAgICB9
XG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0
cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKLQkJCSIgICAgICAgIG5ldyBY
KCkuZm9vKHRydWUsIHRydWUpO1xuIiArCi0JCQkiICAgIH1cbiIgKwotCQkJIn1cbiIKLQkJfSwK
LQkJIi0tLS0tLS0tLS1cbiIgKyAKLQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA4KVxu
IiArIAotCQkiCUZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpOyAv
LyBlcnI6IG5vdCBjbG9zZWRcbiIgKyAKLQkJIgkgICAgICAgICAgIF5eXl5eXl5eXl5cbiIgKyAK
LQkJIlJlc291cmNlIGxlYWs6ICdmaWxlUmVhZGVyJyBpcyBuZXZlciBjbG9zZWRcbiIgKyAKLQkJ
Ii0tLS0tLS0tLS1cbiIgKyAKLQkJIjIuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDE2KVxu
IiArIAotCQkiCUZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpOyAv
LyB3YXJuOiBub3QgY2xvc2VkIG9uIGFsbCBwYXRoc1xuIiArIAotCQkiCSAgICAgICAgICAgXl5e
Xl5eXl5eXlxuIiArIAotCQkiUG90ZW50aWFsIHJlc291cmNlIGxlYWs6ICdmaWxlUmVhZGVyJyBt
YXkgbm90IGJlIGNsb3NlZFxuIiArIAotCQkiLS0tLS0tLS0tLVxuIiwKLQkJbnVsbCwKLQkJdHJ1
ZSwKLQkJb3B0aW9ucyk7Ci19Ci0vLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9y
IG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCi0vLyB0aHJlZSBBdXRvQ2xvc2VhYmxlcyBpbiBk
aWZmZXJlbnQgYmxvY2tzIG9mIHRoZSBzYW1lIG1ldGhvZCAtIHByb2JsZW1zIGlnbm9yZWQKLXB1
YmxpYyB2b2lkIHRlc3QwNTZpX2lnbm9yZSgpIHsKLQlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVy
T3B0aW9ucygpOwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX1VOQ0xPU0VEX0NM
T1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLklHTk9SRSk7Ci0Jb3B0aW9ucy5wdXQoSmF2YUNvcmUu
Q09NUElMRVJfUEJfUE9URU5USUFMTFlfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlv
bnMuSUdOT1JFKTsKLQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9FWFBMSUNJVExZ
X0NMT1NFRF9BVVRPQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuSUdOT1JFKTsKLQl0aGlzLnJ1
bkNvbmZvcm1UZXN0KAotCQluZXcgU3RyaW5nW10gewotCQkJIlguamF2YSIsCi0JCQkiaW1wb3J0
IGphdmEuaW8uRmlsZTtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFkZXI7XG4iICsK
LQkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKwotCQkJInB1YmxpYyBjbGFzcyBY
IHtcbiIgKwotCQkJIiAgICB2b2lkIGZvbyhib29sZWFuIGYxLCBib29sZWFuIGYyKSB0aHJvd3Mg
SU9FeGNlcHRpb24ge1xuIiArCi0JCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNv
bWVmaWxlXCIpO1xuIiArCi0JCQkiICAgICAgICBpZiAoZjEpIHtcbiIgKwotCQkJIiAgICAgICAg
ICAgIEZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpOyAvLyBlcnI6
IG5vdCBjbG9zZWRcbiIgKwotCQkJIiAgICAgICAgICAgIGNoYXJbXSBpbiA9IG5ldyBjaGFyWzUw
XTtcbiIgKwotCQkJIiAgICAgICAgICAgIGZpbGVSZWFkZXIucmVhZChpbik7XG4iICsKLQkJCSIg
ICAgICAgICAgICB3aGlsZSAodHJ1ZSkge1xuIiArCi0JCQkiICAgICAgICAgICAgICAgICBGaWxl
UmVhZGVyIGxvb3BSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTsgLy8gZG9uJ3Qgd2Fybiwg
cHJvcGVybHkgY2xvc2VkXG4iICsKLQkJCSIgICAgICAgICAgICAgICAgIGxvb3BSZWFkZXIuY2xv
c2UoKTsiICsKLQkJCSIgICAgICAgICAgICAgICAgIGJyZWFrO1xuIiArCi0JCQkiICAgICAgICAg
ICAgfVxuIiArCi0JCQkiICAgICAgICB9IGVsc2Uge1xuIiArCi0JCQkiICAgICAgICAgICAgRmls
ZVJlYWRlciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7IC8vIHdhcm46IG5vdCBj
bG9zZWQgb24gYWxsIHBhdGhzXG4iICsKLQkJCSIgICAgICAgICAgICBpZiAoZjIpXG4iICsKLQkJ
CSIgICAgICAgICAgICAgICAgZmlsZVJlYWRlci5jbG9zZSgpO1xuIiArCi0JCQkiICAgICAgICB9
XG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQkifVxuIgotCQl9LAotCQkiIiwKLQkJbnVsbCwKLQkJ
dHJ1ZSwKLQkJbnVsbCwKLQkJb3B0aW9ucywKLQkJbnVsbCk7Ci19Ci0vLyBCdWcgMzQ5MzI2IC0g
WzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCi0vLyB0aHJl
ZSBBdXRvQ2xvc2VhYmxlcyBpbiBkaWZmZXJlbnQgYmxvY2tzIG9mIHRoZSBzYW1lIG1ldGhvZAot
cHVibGljIHZvaWQgdGVzdDA1NmkyKCkgewotCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRp
b25zKCk7Ci0Jb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfVU5DTE9TRURfQ0xPU0VB
QkxFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJ
TEVSX1BCX1BPVEVOVElBTExZX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVS
Uk9SKTsKLQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9FWFBMSUNJVExZX0NMT1NF
RF9BVVRPQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuSUdOT1JFKTsKLQl0aGlzLnJ1bk5lZ2F0
aXZlVGVzdCgKLQkJbmV3IFN0cmluZ1tdIHsKLQkJCSJYLmphdmEiLAotCQkJImltcG9ydCBqYXZh
LmlvLkZpbGU7XG4iICsgCi0JCQkiaW1wb3J0IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIgKyAKLQkJ
CSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKyAKLQkJCSJwdWJsaWMgY2xhc3MgWCB7
XG4iICsKLQkJCSIgICAgdm9pZCBmb28oYm9vbGVhbiBmMSwgYm9vbGVhbiBmMikgdGhyb3dzIElP
RXhjZXB0aW9uIHtcbiIgKyAKLQkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29t
ZWZpbGVcIik7XG4iICsgCi0JCQkiICAgICAgICBpZiAoZjEpIHtcbiIgKyAKLQkJCSIgICAgICAg
ICAgICBGaWxlUmVhZGVyIGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTsgLy8gcHJv
cGVybHkgY2xvc2VkXG4iICsgCi0JCQkiICAgICAgICAgICAgY2hhcltdIGluID0gbmV3IGNoYXJb
NTBdO1xuIiArIAotCQkJIiAgICAgICAgICAgIGZpbGVSZWFkZXIucmVhZChpbik7XG4iICsgCi0J
CQkiICAgICAgICAgICAgd2hpbGUgKHRydWUpIHtcbiIgKyAKLQkJCSIgICAgICAgICAgICAgICAg
ICBmaWxlUmVhZGVyLmNsb3NlKCk7XG4iICsgCi0JCQkiICAgICAgICAgICAgICAgICAgRmlsZVJl
YWRlciBsb29wUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7IC8vIGRvbid0IHdhcm4sIHBy
b3Blcmx5IGNsb3NlZFxuIiArIAotCQkJIiAgICAgICAgICAgICAgICAgIGxvb3BSZWFkZXIuY2xv
c2UoKTtcbiIgKyAKLQkJCSIgICAgICAgICAgICAgICAgICBicmVhaztcbiIgKyAKLQkJCSIgICAg
ICAgICAgICB9XG4iICsgCi0JCQkiICAgICAgICB9IGVsc2Uge1xuIiArIAotCQkJIiAgICAgICAg
ICAgIEZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpOyAvLyB3YXJu
OiBub3QgY2xvc2VkIG9uIGFsbCBwYXRoc1xuIiArIAotCQkJIiAgICAgICAgICAgIGlmIChmMilc
biIgKyAKLQkJCSIgICAgICAgICAgICAgICAgZmlsZVJlYWRlci5jbG9zZSgpO1xuIiArIAotCQkJ
IiAgICAgICAgfVxuIiArIAotCQkJIiAgICB9XG4iICsgCi0JCQkiICAgIHB1YmxpYyBzdGF0aWMg
dm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsgCi0JCQki
ICAgICAgICBuZXcgWCgpLmZvbyh0cnVlLCB0cnVlKTtcbiIgKyAKLQkJCSIgICAgfVxuIiArIAot
CQkJIn1cbiIKLQkJfSwKLQkJIi0tLS0tLS0tLS1cbiIgKyAKLQkJIjEuIEVSUk9SIGluIFguamF2
YSAoYXQgbGluZSAxOClcbiIgKyAKLQkJIglGaWxlUmVhZGVyIGZpbGVSZWFkZXIgPSBuZXcgRmls
ZVJlYWRlcihmaWxlKTsgLy8gd2Fybjogbm90IGNsb3NlZCBvbiBhbGwgcGF0aHNcbiIgKyAKLQkJ
IgkgICAgICAgICAgIF5eXl5eXl5eXl5cbiIgKyAKLQkJIlBvdGVudGlhbCByZXNvdXJjZSBsZWFr
OiAnZmlsZVJlYWRlcicgbWF5IG5vdCBiZSBjbG9zZWRcbiIgKyAKLQkJIi0tLS0tLS0tLS1cbiIs
Ci0JCW51bGwsCi0JCXRydWUsCi0JCW9wdGlvbnMpOwotfQotLy8gQnVnIDM0OTMyNiAtIFsxLjdd
IG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNlcwotLy8gYSBtZXRob2Qg
dXNlcyBhbiBBdXRvQ2xvc2VhYmxlIHdpdGhvdXQgY2xvc2luZyBpdCBsb2NhbGx5IGJ1dCBwYXNz
aW5nIGFzIGFyZyB0byBhbm90aGVyIG1ldGhvZAotcHVibGljIHZvaWQgdGVzdDA1NmooKSB7Ci0J
TWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKLQlvcHRpb25zLnB1dChDb21waWxl
ck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMu
RVJST1IpOwotCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50
aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQl0aGlzLnJ1
bk5lZ2F0aXZlVGVzdCgKLQkJbmV3IFN0cmluZ1tdIHsKLQkJCSJYLmphdmEiLAotCQkJImltcG9y
dCBqYXZhLmlvLkZpbGU7XG4iICsKLQkJCSJpbXBvcnQgamF2YS5pby5GaWxlUmVhZGVyO1xuIiAr
Ci0JCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKLQkJCSJwdWJsaWMgY2xhc3Mg
WCB7XG4iICsKLQkJCSIgICAgdm9pZCBmb28oKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCi0J
CQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xuIiArCi0JCQki
ICAgICAgICBGaWxlUmVhZGVyIGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTtcbiIg
KwotCQkJIiAgICAgICAgcmVhZChmaWxlUmVhZGVyKTtcbiIgKwotCQkJIiAgICB9XG4iICsKLQkJ
CSIgICAgdm9pZCByZWFkKEZpbGVSZWFkZXIgcmVhZGVyKSB7IH1cbiIgKwotCQkJIiAgICBwdWJs
aWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xu
IiArCi0JCQkiICAgICAgICBuZXcgWCgpLmZvbygpO1xuIiArCi0JCQkiICAgIH1cbiIgKwotCQkJ
In1cbiIKLQkJfSwKLQkJIi0tLS0tLS0tLS1cbiIgKyAKLQkJIjEuIEVSUk9SIGluIFguamF2YSAo
YXQgbGluZSA3KVxuIiArIAotCQkiCUZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVh
ZGVyKGZpbGUpO1xuIiArIAotCQkiCSAgICAgICAgICAgXl5eXl5eXl5eXlxuIiArIAotCQkiUG90
ZW50aWFsIHJlc291cmNlIGxlYWs6ICdmaWxlUmVhZGVyJyBtYXkgbm90IGJlIGNsb3NlZFxuIiAr
IAotCQkiLS0tLS0tLS0tLVxuIiwKLQkJbnVsbCwKLQkJdHJ1ZSwKLQkJb3B0aW9ucyk7Ci19Ci0v
LyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVz
b3VyY2VzCi0vLyBhIG1ldGhvZCB1c2VzIGFuIEF1dG9DbG9zZWFibGUgd2l0aG91dCBjbG9zaW5n
IGl0IGxvY2FsbHkgYnV0IHBhc3NpbmcgYXMgYXJnIHRvIGFub3RoZXIgbWV0aG9kCi1wdWJsaWMg
dm9pZCB0ZXN0MDU2amNvbmRpdGlvbmFsKCkgewotCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJP
cHRpb25zKCk7Ci0Jb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNs
b3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQlvcHRpb25zLnB1dChDb21w
aWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENv
bXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0JdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCi0JCW5ldyBTdHJp
bmdbXSB7Ci0JCQkiWC5qYXZhIiwKLQkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCi0JCQki
aW1wb3J0IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlvLklPRXhj
ZXB0aW9uO1xuIiArCi0JCQkicHVibGljIGNsYXNzIFgge1xuIiArCi0JCQkiICAgIHZvaWQgZm9v
KGJvb2xlYW4gYikgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwotCQkJIiAgICAgICAgRmlsZSBm
aWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKwotCQkJIiAgICAgICAgRmlsZVJlYWRl
ciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsKLQkJCSIgICAgICAgIHN5
bmNocm9uaXplZCAoYiA/IHRoaXMgOiBuZXcgWCgpKSB7XG4iICsKLQkJCSIgICAgICAgICAgICBu
ZXcgUmVhZERlbGVnYXRvcihmaWxlUmVhZGVyKTtcbiIgKwotCQkJIiAgICAgICAgfVxuIiArCi0J
CQkiICAgIH1cbiIgKwotCQkJIiAgICBjbGFzcyBSZWFkRGVsZWdhdG9yIHsgUmVhZERlbGVnYXRv
cihGaWxlUmVhZGVyIHJlYWRlcikgeyB9IH1cbiIgKwotCQkJIiAgICBwdWJsaWMgc3RhdGljIHZv
aWQgbWFpbihTdHJpbmdbXSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCi0JCQkiICAg
ICAgICBuZXcgWCgpLmZvbyh0cnVlKTtcbiIgKwotCQkJIiAgICB9XG4iICsKLQkJCSJ9XG4iCi0J
CX0sCi0JCSItLS0tLS0tLS0tXG4iICsgCi0JCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUg
NylcbiIgKyAKLQkJIglGaWxlUmVhZGVyIGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxl
KTtcbiIgKyAKLQkJIgkgICAgICAgICAgIF5eXl5eXl5eXl5cbiIgKyAKLQkJIlBvdGVudGlhbCBy
ZXNvdXJjZSBsZWFrOiAnZmlsZVJlYWRlcicgbWF5IG5vdCBiZSBjbG9zZWRcbiIgKyAKLQkJIi0t
LS0tLS0tLS1cbiIsCi0JCW51bGwsCi0JCXRydWUsCi0JCW9wdGlvbnMpOwotfQotLy8gQnVnIDM0
OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNlcwot
Ly8gbWFueSBsb2NhbHMsIHNvbWUgYXJlIEF1dG9DbG9zZWFibGUuCi0vLyBVbmZvcnR1bmF0ZWx5
IGFuYWx5c2lzIGNhbm5vdCByZXNwZWN0IGhvdyBleGNlcHRpb24gZXhpdHMgbWF5IGFmZmVjdCBy
YTMgYW5kIHJiMywKLS8vIGRvaW5nIHNvIHdvdWxkIGNyZWF0ZSBmYWxzZSBwb3NpdGl2ZXMuCi1w
dWJsaWMgdm9pZCB0ZXN0MDU2aygpIHsKLQlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9u
cygpOwotCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRD
bG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0Jb3B0aW9ucy5wdXQoQ29tcGlsZXJP
cHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxl
ck9wdGlvbnMuV0FSTklORyk7Ci0Jb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9S
ZXBvcnRFeHBsaWNpdGx5Q2xvc2VkQXV0b0Nsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9S
KTsKLQl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKLQkJbmV3IFN0cmluZ1tdIHsKLQkJCSJYLmphdmEi
LAotCQkJImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsKLQkJCSJpbXBvcnQgamF2YS5pby5GaWxl
UmVhZGVyO1xuIiArCi0JCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKLQkJCSJw
dWJsaWMgY2xhc3MgWCB7XG4iICsKLQkJCSIgICAgdm9pZCBmb28oKSB0aHJvd3MgSU9FeGNlcHRp
b24ge1xuIiArCi0JCQkiICAgICAgICBpbnQgaTAxLCBpMDIsIGkwMywgaTA0LCBpMDUsIGkwNiwg
aTA3LCBpMDgsIGkwOSxcbiIgKwotCQkJIiAgICAgICAgICAgIGkxMSwgaTEyLCBpMTMsIGkxNCwg
aTE1LCBpMTYsIGkxNywgaTE4LCBpMTksXG4iICsKLQkJCSIgICAgICAgICAgICBpMjEsIGkyMiwg
aTIzLCBpMjQsIGkyNSwgaTI2LCBpMjcsIGkyOCwgaTI5LFxuIiArCi0JCQkiICAgICAgICAgICAg
aTMxLCBpMzIsIGkzMywgaTM0LCBpMzUsIGkzNiwgaTM3LCBpMzgsIGkzOSxcbiIgKwotCQkJIiAg
ICAgICAgICAgIGk0MSwgaTQyLCBpNDMsIGk0NCwgaTQ1LCBpNDYsIGk0NywgaTQ4LCBpNDk7XG4i
ICsKLQkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsK
LQkJCSIgICAgICAgIEZpbGVSZWFkZXIgcmExID0gbnVsbCwgcmEyID0gbnVsbDtcbiIgKwotCQkJ
IiAgICAgICAgdHJ5IHtcbiIgKwotCQkJIiAgICAgICAgICAgIHJhMSA9IG5ldyBGaWxlUmVhZGVy
KGZpbGUpO1xuIiArCi0JCQkiICAgICAgICAgICAgcmEyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7
XG4iICsKLQkJCSIgICAgICAgICAgICBGaWxlUmVhZGVyIHJhMyA9IG5ldyBGaWxlUmVhZGVyKGZp
bGUpO1xuIiArCi0JCQkiICAgICAgICAgICAgY2hhcltdIGluID0gbmV3IGNoYXJbNTBdO1xuIiAr
Ci0JCQkiICAgICAgICAgICAgcmExLnJlYWQoaW4pO1xuIiArCi0JCQkiICAgICAgICAgICAgcmEy
LnJlYWQoaW4pO1xuIiArCi0JCQkiICAgICAgICAgICAgcmEzLmNsb3NlKCk7XG4iICsKLQkJCSIg
ICAgICAgIH0gZmluYWxseSB7XG4iICsKLQkJCSIgICAgICAgICAgICByYTEuY2xvc2UoKTtcbiIg
KwotCQkJIiAgICAgICAgfVxuIiArCi0JCQkiICAgICAgICBpbnQgaTUxLCBpNTIsIGk1MywgaTU0
LCBpNTUsIGk1NiwgaTU3LCBpNTgsIGk1OSwgaTYwO1xuIiArIC8vIGJleW9uZCB0aGlzIHBvaW50
IGxvY2FscyBhcmUgYW5hbHl6ZWQgdXNpbmcgZXh0cmFCaXRzCi0JCQkiICAgICAgICBGaWxlUmVh
ZGVyIHJiMSA9IG51bGwsIHJiMiA9IG51bGw7XG4iICsKLQkJCSIgICAgICAgIHRyeSB7XG4iICsK
LQkJCSIgICAgICAgICAgICByYjEgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTtcbiIgKwotCQkJIiAg
ICAgICAgICAgIHJiMiA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiArCi0JCQkiICAgICAgICAg
ICAgRmlsZVJlYWRlciByYjMgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTtcbiIgKwotCQkJIiAgICAg
ICAgICAgIGNoYXJbXSBpbiA9IG5ldyBjaGFyWzUwXTtcbiIgKwotCQkJIiAgICAgICAgICAgIHJi
MS5yZWFkKGluKTtcbiIgKwotCQkJIiAgICAgICAgICAgIHJiMi5yZWFkKGluKTtcbiIgKwotCQkJ
IiAgICAgICAgICAgIHJiMy5jbG9zZSgpO1xuIiArCi0JCQkiICAgICAgICB9IGZpbmFsbHkge1xu
IiArCi0JCQkiICAgICAgICAgICAgcmIxLmNsb3NlKCk7XG4iICsKLQkJCSIgICAgICAgIH1cbiIg
KwotCQkJIiAgICB9XG4iICsKLQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5n
W10gYXJncykgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwotCQkJIiAgICAgICAgbmV3IFgoKS5m
b28oKTtcbiIgKwotCQkJIiAgICB9XG4iICsKLQkJCSJ9XG4iCi0JCX0sCi0JCSItLS0tLS0tLS0t
XG4iICsgCi0JCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTIpXG4iICsgCi0JCSIJRmls
ZVJlYWRlciByYTEgPSBudWxsLCByYTIgPSBudWxsO1xuIiArIAotCQkiCSAgICAgICAgICAgXl5e
XG4iICsgCi0JCSJSZXNvdXJjZSAncmExJyBzaG91bGQgYmUgbWFuYWdlZCBieSB0cnktd2l0aC1y
ZXNvdXJjZVxuIiArIAotCQkiLS0tLS0tLS0tLVxuIiArIAotCQkiMi4gRVJST1IgaW4gWC5qYXZh
IChhdCBsaW5lIDE1KVxuIiArIAotCQkiCXJhMiA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiAr
IAotCQkiCV5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXG4iICsgCi0JCSJSZXNvdXJjZSBsZWFr
OiAncmEyJyBpcyBuZXZlciBjbG9zZWRcbiIgKyAKLQkJIi0tLS0tLS0tLS1cbiIgKyAKLQkJIjMu
IEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxNilcbiIgKyAKLQkJIglGaWxlUmVhZGVyIHJhMyA9
IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiArIAotCQkiCSAgICAgICAgICAgXl5eXG4iICsgCi0J
CSJSZXNvdXJjZSAncmEzJyBzaG91bGQgYmUgbWFuYWdlZCBieSB0cnktd2l0aC1yZXNvdXJjZVxu
IiArCi0JCSItLS0tLS0tLS0tXG4iICsgCi0JCSI0LiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUg
MjUpXG4iICsgCi0JCSIJRmlsZVJlYWRlciByYjEgPSBudWxsLCByYjIgPSBudWxsO1xuIiArIAot
CQkiCSAgICAgICAgICAgXl5eXG4iICsgCi0JCSJSZXNvdXJjZSAncmIxJyBzaG91bGQgYmUgbWFu
YWdlZCBieSB0cnktd2l0aC1yZXNvdXJjZVxuIiArIAotCQkiLS0tLS0tLS0tLVxuIiArIAotCQki
NS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDI4KVxuIiArIAotCQkiCXJiMiA9IG5ldyBGaWxl
UmVhZGVyKGZpbGUpO1xuIiArIAotCQkiCV5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXG4iICsg
Ci0JCSJSZXNvdXJjZSBsZWFrOiAncmIyJyBpcyBuZXZlciBjbG9zZWRcbiIgKyAKLQkJIi0tLS0t
LS0tLS1cbiIgKyAKLQkJIjYuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAyOSlcbiIgKyAKLQkJ
IglGaWxlUmVhZGVyIHJiMyA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiArIAotCQkiCSAgICAg
ICAgICAgXl5eXG4iICsgCi0JCSJSZXNvdXJjZSAncmIzJyBzaG91bGQgYmUgbWFuYWdlZCBieSB0
cnktd2l0aC1yZXNvdXJjZVxuIiArIAotCQkiLS0tLS0tLS0tLVxuIiwKLQkJbnVsbCwKLQkJdHJ1
ZSwKLQkJb3B0aW9ucyk7Ci19Ci0vLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9y
IG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCi0vLyB2YXJpb3VzIG5vbi1wcm9ibGVtcwotcHVi
bGljIHZvaWQgdGVzdDA1NmwoKSB7Ci0JTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMo
KTsKLQlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xv
c2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0
aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJP
cHRpb25zLkVSUk9SKTsKLQlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9y
dEV4cGxpY2l0bHlDbG9zZWRBdXRvQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwot
CXRoaXMucnVuTmVnYXRpdmVUZXN0KAotCQluZXcgU3RyaW5nW10gewotCQkJIlguamF2YSIsCi0J
CQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFk
ZXI7XG4iICsKLQkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKwotCQkJInB1Ymxp
YyBjbGFzcyBYIHtcbiIgKwotCQkJIiAgICBYKEZpbGVSZWFkZXIgcjApIHt9XG4iICsgLy8gZG9u
J3QgY29tcGxhaW4gYWdhaW5zdCBhcmd1bWVudAotCQkJIiAgICBGaWxlUmVhZGVyIGdldFJlYWRl
cigpIHsgcmV0dXJuIG51bGw7IH1cbiIgKwotCQkJIiAgICB2b2lkIGZvbyhGaWxlUmVhZGVyIHIx
KSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCi0JCQkiICAgICAgICBGaWxlUmVhZGVyIGZpbGVS
ZWFkZXIgPSBnZXRSZWFkZXIoKTtcbiIgKwotCQkJIiAgICAgICAgaWYgKGZpbGVSZWFkZXIgPT0g
bnVsbClcbiIgKwotCQkJIiAgICAgICAgICAgIHJldHVybjtcbiIgKyAvLyBkb24ndCBjb21wbGFp
biwgcmVzb3VyY2UgaXMgYWN0dWFsbHkgbnVsbAotCQkJIiAgICAgICAgRmlsZVJlYWRlciByMyA9
IGdldFJlYWRlcigpO1xuIiArCi0JCQkiICAgICAgICBpZiAocjMgPT0gbnVsbClcbiIgKwotCQkJ
IiAgICAgICAgICAgIHIzID0gbmV3IEZpbGVSZWFkZXIobmV3IEZpbGUoXCJhYnNlbnRcIikpO1xu
IiArIC8vIGRvbid0IGNvbXBsYWluLCBwcmV2aW91cyByZXNvdXJjZSBpcyBhY3R1YWxseSBudWxs
Ci0JCQkiICAgICAgICB0cnkge1xuIiArCi0JCQkiICAgICAgICAgICAgY2hhcltdIGluID0gbmV3
IGNoYXJbNTBdO1xuIiArCi0JCQkiICAgICAgICAgICAgZmlsZVJlYWRlci5yZWFkKGluKTtcbiIg
KwotCQkJIiAgICAgICAgICAgIHIxLnJlYWQoaW4pO1xuIiArCi0JCQkiICAgICAgICB9IGZpbmFs
bHkge1xuIiArCi0JCQkiICAgICAgICAgICAgZmlsZVJlYWRlci5jbG9zZSgpO1xuIiArCi0JCQki
ICAgICAgICAgICAgcjMuY2xvc2UoKTtcbiIgKyAgLy8gdGhlIGVmZmVjdCBvZiB0aGlzIGNsb3Nl
KCkgY2FsbCBtaWdodCBiZSBzcG9pbGVkIGJ5IGV4Y2VwdGlvbiBpbiBmaWxlUmVhZGVyLmNsb3Nl
KCkgYWJvdmUsIGJ1dCB3ZSBpZ25vcmUgZXhjZXB0aW9uIGV4aXRzIGluIHRoZSBhbmFseXNpcwot
CQkJIiAgICAgICAgfVxuIiArCi0JCQkiICAgIH1cbiIgKwotCQkJIiAgICBwdWJsaWMgc3RhdGlj
IHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCi0JCQki
ICAgICAgICBGaWxlUmVhZGVyIHIyID0gbmV3IEZpbGVSZWFkZXIobmV3IEZpbGUoXCJpbmV4aXN0
XCIpKTsgLy8gb25seSBwb3RlbnRpYWwgcHJvYmxlbTogY3RvciBYIGJlbG93IG1pZ2h0IGNsb3Nl
IHIyXG4iICsKLQkJCSIgICAgICAgIG5ldyBYKHIyKS5mb28obmV3IEZpbGVSZWFkZXIobmV3IEZp
bGUoXCJub3R0aGVyZVwiKSkpO1xuIiArCi0JCQkiICAgIH1cbiIgKwotCQkJIn1cbiIKLQkJfSwK
LQkJIi0tLS0tLS0tLS1cbiIgKyAKLQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA4KVxu
IiArIAotCQkiCUZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IGdldFJlYWRlcigpO1xuIiArIAotCQki
CSAgICAgICAgICAgXl5eXl5eXl5eXlxuIiArIAotCQkiUmVzb3VyY2UgJ2ZpbGVSZWFkZXInIHNo
b3VsZCBiZSBtYW5hZ2VkIGJ5IHRyeS13aXRoLXJlc291cmNlXG4iICsgCi0JCSItLS0tLS0tLS0t
XG4iICsgCi0JCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTEpXG4iICsgCi0JCSIJRmls
ZVJlYWRlciByMyA9IGdldFJlYWRlcigpO1xuIiArIAotCQkiCSAgICAgICAgICAgXl5cbiIgKyAK
LQkJIlJlc291cmNlICdyMycgc2hvdWxkIGJlIG1hbmFnZWQgYnkgdHJ5LXdpdGgtcmVzb3VyY2Vc
biIgKwotCQkiLS0tLS0tLS0tLVxuIiArIAotCQkiMy4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5l
IDI0KVxuIiArIAotCQkiCUZpbGVSZWFkZXIgcjIgPSBuZXcgRmlsZVJlYWRlcihuZXcgRmlsZShc
ImluZXhpc3RcIikpOyAvLyBvbmx5IHBvdGVudGlhbCBwcm9ibGVtOiBjdG9yIFggYmVsb3cgbWln
aHQgY2xvc2UgcjJcbiIgKyAKLQkJIgkgICAgICAgICAgIF5eXG4iICsgCi0JCSJQb3RlbnRpYWwg
cmVzb3VyY2UgbGVhazogJ3IyJyBtYXkgbm90IGJlIGNsb3NlZFxuIiArIAotCQkiLS0tLS0tLS0t
LVxuIiwKLQkJbnVsbCwKLQkJdHJ1ZSwKLQkJb3B0aW9ucyk7Ci19Ci0vLyBCdWcgMzQ5MzI2IC0g
WzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCi0vLyBuZXN0
ZWQgdHJ5IHdpdGggZWFybHkgZXhpdAotcHVibGljIHZvaWQgdGVzdDA1Nm0oKSB7Ci0JTWFwIG9w
dGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKLQlvcHRpb25zLnB1dChDb21waWxlck9wdGlv
bnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1Ip
OwotCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlV
bmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQl0aGlzLnJ1bkNvbmZv
cm1UZXN0KAotCQluZXcgU3RyaW5nW10gewotCQkJIlguamF2YSIsCi0JCQkiaW1wb3J0IGphdmEu
aW8uRmlsZTtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFkZXI7XG4iICsKLQkJCSJp
bXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKwotCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIg
KwotCQkJIiAgICB2b2lkIGZvbygpIHtcbiIgKwotCQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3
IEZpbGUoXCJzb21lZmlsZVwiKTsiICsKLQkJCSIgICAgICAgIHRyeSB7XG4iICsKLQkJCSIgICAg
ICAgICAgICBGaWxlUmVhZGVyIGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTtcbiIg
KwotCQkJIiAgICAgICAgICAgIHRyeSB7XG4iICsKLQkJCSIgICAgICAgICAgICAgICAgY2hhcltd
IGluID0gbmV3IGNoYXJbNTBdO1xuIiArCi0JCQkiICAgICAgICAgICAgICAgIGlmIChmaWxlUmVh
ZGVyLnJlYWQoaW4pPT0wKVxuIiArCi0JCQkiICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4i
ICsKLQkJCSIgICAgICAgICAgICB9IGZpbmFsbHkge1xuIiArCi0JCQkiCQkgICAgICAgICBmaWxl
UmVhZGVyLmNsb3NlKCk7XG4iICsKLQkJCSIgICAgICAgICAgICB9XG4iICsKLQkJCSIgICAgICAg
IH0gY2F0Y2ggKElPRXhjZXB0aW9uIGUpIHtcbiIgKwotCQkJIiAgICAgICAgICAgIFN5c3RlbS5v
dXQucHJpbnRsbihcImNhdWdodFwiKTtcbiIgKwotCQkJIiAgICAgICAgfVxuIiArCi0JCQkiICAg
IH1cbiIgKwotCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7
XG4iICsKLQkJCSIgICAgICAgIG5ldyBYKCkuZm9vKCk7XG4iICsKLQkJCSIgICAgfVxuIiArCi0J
CQkifVxuIgotCQl9LAotCQkiY2F1Z2h0IiwgLypvdXRwdXQqLwotCQludWxsLypjbGFzc0xpYnMq
LywKLQkJdHJ1ZS8qc2hvdWxkRmx1c2gqLywKLQkJbnVsbC8qdm1hcmdzKi8sCi0JCW9wdGlvbnMs
Ci0JCW51bGwvKnJlcXVlc3RvciovKTsKLX0KLS8vIEJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2Fy
bmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNvdXJjZXMKLS8vIG5lc3RlZCB0cnkgc2hvdWxk
IG5vdCBpbnRlcmZlcmUgd2l0aCBlYXJsaWVyIGFuYWx5c2lzLgotcHVibGljIHZvaWQgdGVzdDA1
Nm4oKSB7Ci0JTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKLQlvcHRpb25zLnB1
dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxl
ck9wdGlvbnMuRVJST1IpOwotCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVw
b3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsK
LQl0aGlzLnJ1bkNvbmZvcm1UZXN0KAotCQluZXcgU3RyaW5nW10gewotCQkJIlguamF2YSIsCi0J
CQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFk
ZXI7XG4iICsKLQkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKwotCQkJImltcG9y
dCBqYXZhLmlvLkZpbGVOb3RGb3VuZEV4Y2VwdGlvbjtcbiIgKwotCQkJInB1YmxpYyBjbGFzcyBY
IHtcbiIgKwotCQkJIiAgICB2b2lkIGZvbyhGaWxlIHNvbWVGaWxlLCBjaGFyW10gYnVmKSB0aHJv
d3MgSU9FeGNlcHRpb24ge1xuIiArIAotCQkJIgkJRmlsZVJlYWRlciBmcjEgPSBuZXcgRmlsZVJl
YWRlcihzb21lRmlsZSk7XG4iICsgCi0JCQkiCQl0cnkge1xuIiArIAotCQkJIgkJCWZyMS5yZWFk
KGJ1Zik7XG4iICsgCi0JCQkiCQl9IGZpbmFsbHkge1xuIiArIAotCQkJIgkJCWZyMS5jbG9zZSgp
O1xuIiArIAotCQkJIgkJfVxuIiArIAotCQkJIgkJdHJ5IHtcbiIgKyAKLQkJCSIJCQlGaWxlUmVh
ZGVyIGZyMyA9IG5ldyBGaWxlUmVhZGVyKHNvbWVGaWxlKTtcbiIgKyAKLQkJCSIJCQl0cnkge1xu
IiArIAotCQkJIgkJCX0gZmluYWxseSB7XG4iICsgCi0JCQkiCQkJCWZyMy5jbG9zZSgpO1xuIiAr
IAotCQkJIgkJCX1cbiIgKyAKLQkJCSIJCX0gY2F0Y2ggKElPRXhjZXB0aW9uIGUpIHtcbiIgKyAK
LQkJCSIJCX1cbiIgKyAKLQkJCSIJIH1cbiIgKwotCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQg
bWFpbihTdHJpbmdbXSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCi0JCQkiICAgICAg
ICB0cnkge1xuIiArCi0JCQkiICAgICAgICAgICAgbmV3IFgoKS5mb28obmV3IEZpbGUoXCJtaXNz
aW5nXCIpLCBuZXcgY2hhclsxMDBdKTtcbiIgKwotCQkJIiAgICAgICAgfSBjYXRjaCAoRmlsZU5v
dEZvdW5kRXhjZXB0aW9uIGUpIHtcbiIgKwotCQkJIiAgICAgICAgICAgIFN5c3RlbS5vdXQucHJp
bnRsbihcImNhdWdodFwiKTtcbiIgKwotCQkJIiAgICAgICAgfVxuIiArCi0JCQkiICAgIH1cbiIg
KwotCQkJIn1cbiIKLQkJfSwKLQkJImNhdWdodCIsIC8qb3V0cHV0Ki8KLQkJbnVsbC8qY2xhc3NM
aWJzKi8sCi0JCXRydWUvKnNob3VsZEZsdXNoKi8sCi0JCW51bGwvKnZtYXJncyovLAotCQlvcHRp
b25zLAotCQludWxsLypyZXF1ZXN0b3IqLyk7Ci19Ci0vLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3
IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCi0vLyBpZiBjbG9zZSBpcyBn
dWFyZGVkIGJ5IG51bGwgY2hlY2sgdGhpcyBzaG91bGQgc3RpbGwgYmUgcmVjb2duaXplZCBhcyBk
ZWZpbml0ZWx5IGNsb3NlZAotcHVibGljIHZvaWQgdGVzdDA1Nm8oKSB7Ci0JTWFwIG9wdGlvbnMg
PSBnZXRDb21waWxlck9wdGlvbnMoKTsKLQlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BU
SU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCW9w
dGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3Nl
ZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQl0aGlzLnJ1bkNvbmZvcm1UZXN0
KAotCQluZXcgU3RyaW5nW10gewotCQkJIlguamF2YSIsCi0JCQkiaW1wb3J0IGphdmEuaW8uRmls
ZTtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFkZXI7XG4iICsKLQkJCSJpbXBvcnQg
amF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlvLkZpbGVOb3RGb3Vu
ZEV4Y2VwdGlvbjtcbiIgKwotCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwotCQkJIiAgICB2b2lk
IGZvbyhGaWxlIHNvbWVGaWxlLCBjaGFyW10gYnVmKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiAr
IAotCQkJIgkJRmlsZVJlYWRlciBmcjEgPSBudWxsO1xuIiArIAotCQkJIgkJdHJ5IHtcbiIgKwot
CQkJIiAgICAgICAgICAgZnIxID0gbmV3IEZpbGVSZWFkZXIoc29tZUZpbGUpOyIgKyAKLQkJCSIJ
CQlmcjEucmVhZChidWYpO1xuIiArIAotCQkJIgkJfSBmaW5hbGx5IHtcbiIgKyAKLQkJCSIJCQlp
ZiAoZnIxICE9IG51bGwpXG4iICsKLQkJCSIgICAgICAgICAgICAgICB0cnkge1xuIiArCi0JCQki
ICAgICAgICAgICAgICAgICAgIGZyMS5jbG9zZSgpO1xuIiArCi0JCQkiICAgICAgICAgICAgICAg
fSBjYXRjaCAoSU9FeGNlcHRpb24gZSkgeyAvKmRvIG5vdGhpbmcqLyB9XG4iICsgCi0JCQkiCQl9
XG4iICsgCi0JCQkiCSB9XG4iICsKLQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3Ry
aW5nW10gYXJncykgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwotCQkJIiAgICAgICAgdHJ5IHtc
biIgKwotCQkJIiAgICAgICAgICAgIG5ldyBYKCkuZm9vKG5ldyBGaWxlKFwibWlzc2luZ1wiKSwg
bmV3IGNoYXJbMTAwXSk7XG4iICsKLQkJCSIgICAgICAgIH0gY2F0Y2ggKEZpbGVOb3RGb3VuZEV4
Y2VwdGlvbiBlKSB7XG4iICsKLQkJCSIgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oXCJj
YXVnaHRcIik7XG4iICsKLQkJCSIgICAgICAgIH1cbiIgKwotCQkJIiAgICB9XG4iICsKLQkJCSJ9
XG4iCi0JCX0sCi0JCSJjYXVnaHQiLCAvKm91dHB1dCovCi0JCW51bGwvKmNsYXNzTGlicyovLAot
CQl0cnVlLypzaG91bGRGbHVzaCovLAotCQludWxsLyp2bWFyZ3MqLywKLQkJb3B0aW9ucywKLQkJ
bnVsbC8qcmVxdWVzdG9yKi8pOwotfQotLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5n
IGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNlcwotLy8gQnVnIDM2MjMzMiAtIE9ubHkgcmVw
b3J0IHBvdGVudGlhbCBsZWFrIHdoZW4gY2xvc2VhYmxlIG5vdCBjcmVhdGVkIGluIHRoZSBsb2Nh
bCBzY29wZQotLy8gYSBtZXRob2QgdXNlcyBhbiBBdXRvQ2xvc2VhYmxlIHdpdGhvdXQgZXZlciBj
bG9zaW5nIGl0LCB0eXBlIGZyb20gYSB0eXBlIHZhcmlhYmxlCi1wdWJsaWMgdm9pZCB0ZXN0MDU2
cCgpIHsKLQlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwotCW9wdGlvbnMucHV0
KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVy
T3B0aW9ucy5FUlJPUik7Ci0Jb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBv
cnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwot
CXRoaXMucnVuTmVnYXRpdmVUZXN0KAotCQluZXcgU3RyaW5nW10gewotCQkJIlguamF2YSIsCi0J
CQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFk
ZXI7XG4iICsKLQkJCSJpbXBvcnQgamF2YS5pby5SZWFkZXI7XG4iICsKLQkJCSJpbXBvcnQgamF2
YS5pby5JT0V4Y2VwdGlvbjtcbiIgKwotCQkJInB1YmxpYyBhYnN0cmFjdCBjbGFzcyBYIDxUIGV4
dGVuZHMgUmVhZGVyPiB7XG4iICsKLQkJCSIgICAgdm9pZCBmb28oKSB0aHJvd3MgSU9FeGNlcHRp
b24ge1xuIiArCi0JCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIp
O1xuIiArCi0JCQkiICAgICAgICBUIGZpbGVSZWFkZXIgPSBuZXdSZWFkZXIoZmlsZSk7XG4iICsK
LQkJCSIgICAgICAgIGNoYXJbXSBpbiA9IG5ldyBjaGFyWzUwXTtcbiIgKwotCQkJIiAgICAgICAg
ZmlsZVJlYWRlci5yZWFkKGluKTtcbiIgKwotCQkJIiAgICB9XG4iICsKLQkJCSIgICAgYWJzdHJh
Y3QgVCBuZXdSZWFkZXIoRmlsZSBmaWxlKSB0aHJvd3MgSU9FeGNlcHRpb247XG4iICsKLQkJCSIg
ICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykgdGhyb3dzIElPRXhjZXB0
aW9uIHtcbiIgKwotCQkJIiAgICAgICAgbmV3IFg8RmlsZVJlYWRlcj4oKSB7XG4iICsKLQkJCSIg
ICAgICAgICAgICBGaWxlUmVhZGVyIG5ld1JlYWRlcihGaWxlIGYpIHRocm93cyBJT0V4Y2VwdGlv
biB7IHJldHVybiBuZXcgRmlsZVJlYWRlcihmKTsgfVxuIiArCi0JCQkiICAgICAgICB9LmZvbygp
O1xuIiArCi0JCQkiICAgIH1cbiIgKwotCQkJIn1cbiIKLQkJfSwKLQkJIi0tLS0tLS0tLS1cbiIg
KyAKLQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA4KVxuIiArIAotCQkiCVQgZmlsZVJl
YWRlciA9IG5ld1JlYWRlcihmaWxlKTtcbiIgKyAKLQkJIgkgIF5eXl5eXl5eXl5cbiIgKyAKLQkJ
IlBvdGVudGlhbCByZXNvdXJjZSBsZWFrOiBcJ2ZpbGVSZWFkZXJcJyBtYXkgbm90IGJlIGNsb3Nl
ZFxuIiArCi0JCSItLS0tLS0tLS0tXG4iLAotCQludWxsLAotCQl0cnVlLAotCQlvcHRpb25zKTsK
LX0KLS8vIEJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0
aC1yZXNvdXJjZXMKLS8vIGNsb3NlZCBpbiBkZWFkIGNvZGUKLXB1YmxpYyB2b2lkIHRlc3QwNTZx
KCkgewotCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7Ci0Jb3B0aW9ucy5wdXQo
SmF2YUNvcmUuQ09NUElMRVJfUEJfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMu
RVJST1IpOwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX1BPVEVOVElBTExZX1VO
Q0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLldBUk5JTkcpOwotCW9wdGlvbnMucHV0
KEphdmFDb3JlLkNPTVBJTEVSX1BCX0VYUExJQ0lUTFlfQ0xPU0VEX0FVVE9DTE9TRUFCTEUsIENv
bXBpbGVyT3B0aW9ucy5JR05PUkUpOwotCXRoaXMucnVuTmVnYXRpdmVUZXN0KAotCQluZXcgU3Ry
aW5nW10gewotCQkJIlguamF2YSIsCi0JCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKwotCQkJ
ImltcG9ydCBqYXZhLmlvLkZpbGVSZWFkZXI7XG4iICsKLQkJCSJpbXBvcnQgamF2YS5pby5JT0V4
Y2VwdGlvbjtcbiIgKwotCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwotCQkJIiAgICB2b2lkIGZv
bygpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKLQkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5l
dyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKLQkJCSIgICAgICAgIEZpbGVSZWFkZXIgZmlsZVJl
YWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiArCi0JCQkiICAgICAgICBjaGFyW10gaW4g
PSBuZXcgY2hhcls1MF07XG4iICsKLQkJCSIgICAgICAgIGZpbGVSZWFkZXIucmVhZChpbik7XG4i
ICsKLQkJCSIgICAgICAgIGlmICgyKjIgPT0gNClcbiIgKwotCQkJIiAgICAgICAgCXJldHVybjtc
biIgKwotCQkJIiAgICAgICAgZmlsZVJlYWRlci5jbG9zZSgpO1xuIiArCi0JCQkiICAgIH1cbiIg
KwotCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB0aHJvd3Mg
SU9FeGNlcHRpb24ge1xuIiArCi0JCQkiICAgICAgICBuZXcgWCgpLmZvbygpO1xuIiArCi0JCQki
ICAgIH1cbiIgKwotCQkJIn1cbiIKLQkJfSwKLQkJIi0tLS0tLS0tLS1cbiIgKyAKLQkJIjEuIEVS
Uk9SIGluIFguamF2YSAoYXQgbGluZSA3KVxuIiArIAotCQkiCUZpbGVSZWFkZXIgZmlsZVJlYWRl
ciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiArIAotCQkiCSAgICAgICAgICAgXl5eXl5eXl5e
XlxuIiArIAotCQkiUmVzb3VyY2UgbGVhazogJ2ZpbGVSZWFkZXInIGlzIG5ldmVyIGNsb3NlZFxu
IiArIAotCQkiLS0tLS0tLS0tLVxuIiArIAotCQkiMi4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxp
bmUgMTApXG4iICsgCi0JCSIJaWYgKDIqMiA9PSA0KVxuIiArIAotCQkiCSAgICBeXl5eXl5eXlxu
IiArIAotCQkiQ29tcGFyaW5nIGlkZW50aWNhbCBleHByZXNzaW9uc1xuIiArIAotCQkiLS0tLS0t
LS0tLVxuIiArIAotCQkiMy4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUgMTIpXG4iICsgCi0J
CSIJZmlsZVJlYWRlci5jbG9zZSgpO1xuIiArIAotCQkiCV5eXl5eXl5eXl5eXl5eXl5eXlxuIiAr
IAotCQkiRGVhZCBjb2RlXG4iICsgCi0JCSItLS0tLS0tLS0tXG4iLAotCQludWxsLAotCQl0cnVl
LAotCQlvcHRpb25zKTsKLX0KLS8vIEJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3Ig
bWlzc2luZyB0cnktd2l0aC1yZXNvdXJjZXMKLS8vIHByb3Blcmx5IGNsb3NlZCwgZGVhZCBjb2Rl
IGluIGJldHdlZW4KLXB1YmxpYyB2b2lkIHRlc3QwNTZyKCkgewotCU1hcCBvcHRpb25zID0gZ2V0
Q29tcGlsZXJPcHRpb25zKCk7Ci0Jb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfVU5D
TE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCW9wdGlvbnMucHV0KEph
dmFDb3JlLkNPTVBJTEVSX1BCX1BPVEVOVElBTExZX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGls
ZXJPcHRpb25zLldBUk5JTkcpOwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX0VY
UExJQ0lUTFlfQ0xPU0VEX0FVVE9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5JR05PUkUpOwot
CW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX0RFQURfQ09ERSwgQ29tcGlsZXJPcHRp
b25zLkVSUk9SKTsKLQl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKLQkJbmV3IFN0cmluZ1tdIHsKLQkJ
CSJYLmphdmEiLAotCQkJImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsKLQkJCSJpbXBvcnQgamF2
YS5pby5GaWxlUmVhZGVyO1xuIiArCi0JCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4i
ICsKLQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKLQkJCSIgICAgdm9pZCBmb28oKSB0aHJvd3Mg
SU9FeGNlcHRpb24ge1xuIiArCi0JCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNv
bWVmaWxlXCIpO1xuIiArCi0JCQkiICAgICAgICBGaWxlUmVhZGVyIGZyID0gbmV3IEZpbGVSZWFk
ZXIoZmlsZSk7XG4iICsKLQkJCSIgIAkJIE9iamVjdCBiID0gbnVsbDtcbiIgKyAKLQkJCSIgICAg
ICAgIGZyLmNsb3NlKCk7XG4iICsgCi0JCQkiICAgICAgICBpZiAoYiAhPSBudWxsKSB7XG4iICsg
Ci0JCQkiICAgICAgICAgICAgZnIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTtcbiIgKyAKLQkJCSIg
ICAgICAgICAgICByZXR1cm47XG4iICsgCi0JCQkiICAgICAgICB9IGVsc2Uge1xuIiArIAotCQkJ
IiAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnQoNDIpO1xuIiArIAotCQkJIiAgICAgICAgfVxu
IiArIAotCQkJIiAgICAgICAgcmV0dXJuOyAgICAgLy8gU2hvdWxkIG5vdCBjb21wbGFpbiBhYm91
dCBmclxuIiArCi0JCQkiICAgIH1cbiIgKwotCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFp
bihTdHJpbmdbXSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCi0JCQkiICAgICAgICBu
ZXcgWCgpLmZvbygpO1xuIiArCi0JCQkiICAgIH1cbiIgKwotCQkJIn1cbiIKLQkJfSwKLQkJIi0t
LS0tLS0tLS1cbiIgKyAKLQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxMClcbiIgKyAK
LQkJIglpZiAoYiAhPSBudWxsKSB7XG4iICsgCi0JCSIgICAgICAgICAgICBmciA9IG5ldyBGaWxl
UmVhZGVyKGZpbGUpO1xuIiArIAotCQkiICAgICAgICAgICAgcmV0dXJuO1xuIiArIAotCQkiICAg
ICAgICB9IGVsc2Uge1xuIiArIAotCQkiCSAgICAgICAgICAgICAgIF5eXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIg
KyAKLQkJIkRlYWQgY29kZVxuIiArIAotCQkiLS0tLS0tLS0tLVxuIiArIAotCQkiMi4gV0FSTklO
RyBpbiBYLmphdmEgKGF0IGxpbmUgMTMpXG4iICsgCi0JCSIJfSBlbHNlIHtcbiIgKyAKLQkJIiAg
ICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnQoNDIpO1xuIiArIAotCQkiICAgICAgICB9XG4iICsg
Ci0JCSIJICAgICAgIF5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5e
XlxuIiArIAotCQkiU3RhdGVtZW50IHVubmVjZXNzYXJpbHkgbmVzdGVkIHdpdGhpbiBlbHNlIGNs
YXVzZS4gVGhlIGNvcnJlc3BvbmRpbmcgdGhlbiBjbGF1c2UgZG9lcyBub3QgY29tcGxldGUgbm9y
bWFsbHlcbiIgKyAKLQkJIi0tLS0tLS0tLS1cbiIsCi0JCW51bGwsCi0JCXRydWUsCi0JCW9wdGlv
bnMpOwotfQotLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRy
eS13aXRoLXJlc291cmNlcwotLy8gcmVzb3VyY2UgaW5zaWRlIHQtdy1yIGlzIHJlLWFzc2lnbmVk
LCBzaG91bGRuJ3QgZXZlbiByZWNvcmQgYW4gZXJyb3JMb2NhdGlvbgotcHVibGljIHZvaWQgdGVz
dDA1NnMoKSB7Ci0JTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKLQlvcHRpb25z
LnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0
aW9ucy5FUlJPUik7Ci0Jb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfUE9URU5USUFM
TFlfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7Ci0Jb3B0aW9u
cy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfRVhQTElDSVRMWV9DTE9TRURfQVVUT0NMT1NFQUJM
RSwgQ29tcGlsZXJPcHRpb25zLklHTk9SRSk7Ci0JdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCi0JCW5l
dyBTdHJpbmdbXSB7Ci0JCQkiWC5qYXZhIiwKLQkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiAr
IAotCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFkZXI7XG4iICsgCi0JCQkiaW1wb3J0IGphdmEu
aW8uSU9FeGNlcHRpb247XG4iICsgCi0JCQkicHVibGljIGNsYXNzIFgge1xuIiArIAotCQkJIiAg
ICB2b2lkIGZvbygpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsgCi0JCQkiICAgICAgICBGaWxl
IGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xuIiArIAotCQkJIiAgICAgICAgdHJ5IChG
aWxlUmVhZGVyIGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTspIHtcbiIgKyAKLQkJ
CSIgICAgICAgICAgICBjaGFyW10gaW4gPSBuZXcgY2hhcls1MF07XG4iICsgCi0JCQkiICAgICAg
ICAgICAgZmlsZVJlYWRlci5yZWFkKGluKTtcbiIgKyAKLQkJCSIgICAgICAgICAgICBmaWxlUmVh
ZGVyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7ICAvLyBkZWJ1ZyBoZXJlXG4iICsgCi0JCQkiICAg
ICAgICAgICAgZmlsZVJlYWRlci5yZWFkKGluKTtcbiIgKyAKLQkJCSIgICAgICAgIH1cbiIgKyAK
LQkJCSIgICAgfVxuIiArCi0JCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1td
IGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsgCi0JCQkiICAgICAgICBuZXcgWCgpLmZv
bygpO1xuIiArIAotCQkJIiAgICB9XG4iICsgCi0JCQkifVxuIgotCQl9LAotCQkiLS0tLS0tLS0t
LVxuIiArIAotCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDEwKVxuIiArIAotCQkiCWZp
bGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTsgIC8vIGRlYnVnIGhlcmVcbiIgKyAKLQkJ
IgleXl5eXl5eXl5eXG4iICsgCi0JCSJUaGUgcmVzb3VyY2UgZmlsZVJlYWRlciBvZiBhIHRyeS13
aXRoLXJlc291cmNlcyBzdGF0ZW1lbnQgY2Fubm90IGJlIGFzc2lnbmVkXG4iICsgCi0JCSItLS0t
LS0tLS0tXG4iLAotCQludWxsLAotCQl0cnVlLAotCQlvcHRpb25zKTsKLX0KLS8vIEJ1ZyAzNDkz
MjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNvdXJjZXMKLS8v
IHJlc291cmNlIGlzIGNsb3NlZCwgZGVhZCBjb2RlIGZvbGxvd3MKLXB1YmxpYyB2b2lkIHRlc3Qw
NTZ0KCkgewotCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7Ci0Jb3B0aW9ucy5w
dXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlv
bnMuRVJST1IpOwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX1BPVEVOVElBTExZ
X1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLldBUk5JTkcpOwotCW9wdGlvbnMu
cHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX0RFQURfQ09ERSwgQ29tcGlsZXJPcHRpb25zLkVSUk9S
KTsKLQl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKLQkJbmV3IFN0cmluZ1tdIHsKLQkJCSJYLmphdmEi
LAotCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFkZXI7XG4iICsgCi0JCQkiaW1wb3J0IGphdmEu
aW8uSU9FeGNlcHRpb247XG4iICsgCi0JCQkicHVibGljIGNsYXNzIFgge1xuIiArIAotCQkJIiAg
ICB2b2lkIGZvbzMxKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKyAKLQkJCSIgICAgICAgIEZp
bGVSZWFkZXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlXCIpOyAvL3dhcm5pbmdcbiIg
KwotCQkJIiAgICAgICAgaWYgKHJlYWRlciAhPSBudWxsKSB7XG4iICsgCi0JCQkiICAgICAgICAg
ICAgcmVhZGVyLmNsb3NlKCk7XG4iICsgCi0JCQkiICAgICAgICB9IGVsc2Uge1xuIiArIAotCQkJ
IiAgICAgICAgICAgIC8vIG5vcFxuIiArIAotCQkJIiAgICAgICAgfVxuIiArIAotCQkJIiAgICB9
XG4iICsgCi0JCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRo
cm93cyBJT0V4Y2VwdGlvbiB7XG4iICsgCi0JCQkiICAgICAgICBuZXcgWCgpLmZvbzMxKCk7XG4i
ICsgCi0JCQkiICAgIH1cbiIgKyAKLQkJCSJ9XG4iCi0JCX0sCi0JCSItLS0tLS0tLS0tXG4iICsg
Ci0JCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgOClcbiIgKyAKLQkJIgl9IGVsc2Uge1xu
IiArIAotCQkiICAgICAgICAgICAgLy8gbm9wXG4iICsgCi0JCSIgICAgICAgIH1cbiIgKyAKLQkJ
IgkgICAgICAgXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXG4iICsgCi0JCSJEZWFkIGNv
ZGVcbiIgKyAKLQkJIi0tLS0tLS0tLS1cbiIsCi0JCW51bGwsCi0JCXRydWUsCi0JCW9wdGlvbnMp
OwotfQotLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13
aXRoLXJlc291cmNlcwotLy8gcmVzb3VyY2UgaXMgcmVhc3NpZ25lZCB3aXRoaW4gdC13LXIgd2l0
aCBkaWZmZXJlbnQgcmVzb3VyY2UKLS8vIHdhcyBpbml0aWFsbHkgYnJva2VuIGR1ZSB0byBodHRw
czovL2J1Z3MuZWNsaXBzZS5vcmcvMzU4ODI3Ci1wdWJsaWMgdm9pZCB0ZXN0MDU2dSgpIHsKLQlN
YXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwotCW9wdGlvbnMucHV0KEphdmFDb3Jl
LkNPTVBJTEVSX1BCX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsK
LQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9QT1RFTlRJQUxMWV9VTkNMT1NFRF9D
TE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5XQVJOSU5HKTsKLQlvcHRpb25zLnB1dChKYXZhQ29y
ZS5DT01QSUxFUl9QQl9ERUFEX0NPREUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0JdGhpcy5y
dW5OZWdhdGl2ZVRlc3QoCi0JCW5ldyBTdHJpbmdbXSB7Ci0JCQkiWC5qYXZhIiwKLQkJCSJpbXBv
cnQgamF2YS5pby5GaWxlUmVhZGVyO1xuIiArCi0JCQkicHVibGljIGNsYXNzIFgge1xuIiArCi0J
CQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIEV4Y2VwdGlvbiB7XG4iICsKLQkJCSIgICAgICAgIEZp
bGVSZWFkZXIgcmVhZGVyMSA9IG5ldyBGaWxlUmVhZGVyKFwiZmlsZTFcIik7XG4iICsKLQkJCSIg
ICAgICAgIEZpbGVSZWFkZXIgcmVhZGVyMiA9IG5ldyBGaWxlUmVhZGVyKFwiZmlsZTJcIik7XG4i
ICsKLQkJCSIgICAgICAgIHJlYWRlcjIgPSByZWFkZXIxOy8vIHRoaXMgZGlzY29ubmVjdHMgcmVh
ZGVyIDJcbiIgKwotCQkJIiAgICAgICAgdHJ5IChGaWxlUmVhZGVyIHJlYWRlcjMgPSBuZXcgRmls
ZVJlYWRlcihcImZpbGUzXCIpKSB7XG4iICsKLQkJCSIgICAgICAgICAgICBpbnQgY2g7XG4iICsK
LQkJCSIgICAgICAgICAgICB3aGlsZSAoKGNoID0gcmVhZGVyMi5yZWFkKCkpICE9IC0xKSB7XG4i
ICsKLQkJCSIgICAgICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGNoKTtcbiIgKwotCQkJ
IiAgICAgICAgICAgICAgICByZWFkZXIxLnJlYWQoKTtcbiIgKwotCQkJIiAgICAgICAgICAgIH1c
biIgKwotCQkJIiAgICAgICAgICAgIHJlYWRlcjIgPSByZWFkZXIxOyAvLyB3YXJuaW5nIDEgcmVn
YXJkaW5nIG9yaWdpbmFsIHJlYWRlcjFcbiIgKyAvLyB0aGlzIHdhcm5pbmcgd2FzIG1pc3NpbmcK
LQkJCSIgICAgICAgICAgICByZWFkZXIyID0gcmVhZGVyMTsgLy8gd2FybmluZyAyIHJlZ2FyZGlu
ZyBvcmlnaW5hbCByZWFkZXIxXG4iICsKLQkJCSIgICAgICAgIH0gZmluYWxseSB7XG4iICsKLQkJ
CSIgICAgICAgICAgICBpZiAocmVhZGVyMiAhPSBudWxsKSB7XG4iICsKLQkJCSIgICAgICAgICAg
ICAgICAgcmVhZGVyMi5jbG9zZSgpO1xuIiArCi0JCQkiICAgICAgICAgICAgfSBlbHNlIHtcbiIg
KwotCQkJIiAgICAgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oKTtcbiIgKwotCQkJIiAg
ICAgICAgICAgIH1cbiIgKwotCQkJIiAgICAgICAgfVxuIiArCi0JCQkiICAgIH1cbiIgKwotCQkJ
In1cbiIKLQkJfSwKLQkJIi0tLS0tLS0tLS1cbiIgKyAKLQkJIjEuIEVSUk9SIGluIFguamF2YSAo
YXQgbGluZSA1KVxuIiArIAotCQkiCUZpbGVSZWFkZXIgcmVhZGVyMiA9IG5ldyBGaWxlUmVhZGVy
KFwiZmlsZTJcIik7XG4iICsgCi0JCSIJICAgICAgICAgICBeXl5eXl5eXG4iICsgCi0JCSJSZXNv
dXJjZSBsZWFrOiAncmVhZGVyMicgaXMgbmV2ZXIgY2xvc2VkXG4iICsgCi0JCSItLS0tLS0tLS0t
XG4iICsgCi0JCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTMpXG4iICsgCi0JCSIJcmVh
ZGVyMiA9IHJlYWRlcjE7IC8vIHdhcm5pbmcgMSByZWdhcmRpbmcgb3JpZ2luYWwgcmVhZGVyMVxu
IiArIAotCQkiCV5eXl5eXl5eXl5eXl5eXl5eXG4iICsgCi0JCSJSZXNvdXJjZSBsZWFrOiAncmVh
ZGVyMScgaXMgbm90IGNsb3NlZCBhdCB0aGlzIGxvY2F0aW9uXG4iICsgCi0JCSItLS0tLS0tLS0t
XG4iICsgCi0JCSIzLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTQpXG4iICsgCi0JCSIJcmVh
ZGVyMiA9IHJlYWRlcjE7IC8vIHdhcm5pbmcgMiByZWdhcmRpbmcgb3JpZ2luYWwgcmVhZGVyMVxu
IiArIAotCQkiCV5eXl5eXl5eXl5eXl5eXl5eXG4iICsgCi0JCSJSZXNvdXJjZSBsZWFrOiAncmVh
ZGVyMScgaXMgbm90IGNsb3NlZCBhdCB0aGlzIGxvY2F0aW9uXG4iICsgCi0JCSItLS0tLS0tLS0t
XG4iLAotCQludWxsLAotCQl0cnVlLAotCQlvcHRpb25zKTsKLX0KLS8vIEJ1ZyAzNDkzMjYgLSBb
MS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNvdXJjZXMKLS8vIHNjb3Bl
LXJlbGF0ZWQgcGJzIHJlcG9ydGVkIGluIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy8zNDkzMjYj
YzcwIGFuZCBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvMzQ5MzI2I2M4MiAgCi1wdWJsaWMgdm9p
ZCB0ZXN0MDU2digpIHsKLQlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwotCW9w
dGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGls
ZXJPcHRpb25zLkVSUk9SKTsKLQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9QT1RF
TlRJQUxMWV9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5XQVJOSU5HKTsKLQlv
cHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9FWFBMSUNJVExZX0NMT1NFRF9BVVRPQ0xP
U0VBQkxFLCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7Ci0Jb3B0aW9ucy5wdXQoSmF2YUNvcmUu
Q09NUElMRVJfUEJfREVBRF9DT0RFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCXRoaXMucnVu
TmVnYXRpdmVUZXN0KAotCQluZXcgU3RyaW5nW10gewotCQkJIlguamF2YSIsCi0JCQkiaW1wb3J0
IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIgKyAKLQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsgCi0J
CQkiICAgIGJvb2xlYW4gZm9vMSgpIHRocm93cyBFeGNlcHRpb24ge1xuIiArIAotCQkJIiAgICAg
ICAgRmlsZVJlYWRlciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihcImZpbGVcIik7XG4iICsgCi0J
CQkiICAgICAgICB0cnkge1xuIiArIAotCQkJIiAgICAgICAgICAgIGludCBjaDtcbiIgKyAKLQkJ
CSIgICAgICAgICAgICB3aGlsZSAoKGNoID0gcmVhZGVyLnJlYWQoKSkgIT0gLTEpIHtcbiIgKyAK
LQkJCSIgICAgICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGNoKTtcbiIgKyAKLQkJCSIg
ICAgICAgICAgICAgICAgcmVhZGVyLnJlYWQoKTtcbiIgKyAKLQkJCSIgICAgICAgICAgICB9XG4i
ICsgCi0JCQkiICAgICAgICAgICAgaWYgKGNoID4gMTApIHtcbiIgKyAKLQkJCSIgICAgICAgICAg
ICAgICAgcmV0dXJuIHRydWU7XG4iICsgCi0JCQkiICAgICAgICAgICAgfVxuIiArIAotCQkJIiAg
ICAgICAgICAgIHJldHVybiBmYWxzZTtcbiIgKyAvLyByZXR1cm4gd2hpbGUgcmVzb3VyY2UgZnJv
bSBlbmNsb3Npbmcgc2NvcGUgcmVtYWlucyB1bmNsb3NlZAotCQkJIiAgICAgICAgfSBmaW5hbGx5
IHtcbiIgKyAKLQkJCSIgICAgICAgIH1cbiIgKyAKLQkJCSIgICAgfVxuIiArIAotCQkJIiAgICB2
b2lkIGZvbzExMSgpIHRocm93cyBFeGNlcHRpb24ge1xuIiArIAotCQkJIiAgICAgICAgRmlsZVJl
YWRlciByZWFkZXIxMTEgPSBuZXcgRmlsZVJlYWRlcihcImZpbGUyXCIpO1xuIiArIAotCQkJIiAg
ICAgICAgdHJ5IHtcbiIgKyAKLQkJCSIgICAgICAgICAgICBpbnQgY2g7XG4iICsgCi0JCQkiICAg
ICAgICAgICAgd2hpbGUgKChjaCA9IHJlYWRlcjExMS5yZWFkKCkpICE9IC0xKSB7XG4iICsgCi0J
CQkiICAgICAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihjaCk7XG4iICsgCi0JCQkiICAg
ICAgICAgICAgICAgIHJlYWRlcjExMS5yZWFkKCk7XG4iICsgCi0JCQkiICAgICAgICAgICAgfVxu
IiArIAotCQkJIiAgICAgICAgICAgIHJldHVybjtcbiIgKyAvLyB0aGlzIHNob3VsZG4ndCBzcG9p
bCB0aGUgd2FybmluZyAic2hvdWxkIGJlIG1hbmFnZWQgd2l0aCB0LXctciIgCi0JCQkiICAgICAg
ICB9IGZpbmFsbHkge1xuIiArIAotCQkJIiAgICAgICAgICAgIGlmIChyZWFkZXIxMTEgIT0gbnVs
bCkge1xuIiArIAotCQkJIiAgICAgICAgICAgICAgICByZWFkZXIxMTEuY2xvc2UoKTtcbiIgKyAK
LQkJCSIgICAgICAgICAgICB9XG4iICsgCi0JCQkiICAgICAgICB9XG4iICsgCi0JCQkiICAgIH1c
biIgKwotCQkJIiAgICB2b2lkIGZvbzIoKSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIgKyAKLQkJCSIg
ICAgICAgIEZpbGVSZWFkZXIgcmVhZGVyMiA9IG5ldyBGaWxlUmVhZGVyKFwiZmlsZVwiKTtcbiIg
KyAKLQkJCSIgICAgICAgIHRyeSB7XG4iICsgCi0JCQkiICAgICAgICAgICAgaW50IGNoO1xuIiAr
IAotCQkJIiAgICAgICAgICAgIHdoaWxlICgoY2ggPSByZWFkZXIyLnJlYWQoKSkgIT0gLTEpIHtc
biIgKyAKLQkJCSIgICAgICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGNoKTtcbiIgKyAK
LQkJCSIgICAgICAgICAgICAgICAgcmVhZGVyMi5yZWFkKCk7XG4iICsgCi0JCQkiICAgICAgICAg
ICAgfVxuIiArIAotCQkJIiAgICAgICAgICAgIGlmIChjaCA+IDEwKSB7XG4iICsgCi0JCQkiICAg
ICAgICAgICAgICAgIHJldHVybjtcbiIgKyAvLyBwb3RlbnRpYWwgbGVhawotCQkJIiAgICAgICAg
ICAgIH1cbiIgKyAKLQkJCSIgICAgICAgIH0gZmluYWxseSB7XG4iICsgCi0JCQkiICAgICAgICB9
XG4iICsKLQkJCSIgICAgICAgIHJlYWRlcjIuY2xvc2UoKTtcbiIgKyAvLyBkdWUgdG8gdGhpcyBj
bG9zZSB3ZSBkb24ndCBzYXkgIm5ldmVyIGNsb3NlZCIKLQkJCSIgICAgfVxuIiArIAotCQkJIn1c
biIKLQkJfSwKLQkJIi0tLS0tLS0tLS1cbiIgKyAKLQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQg
bGluZSA0KVxuIiArIAotCQkiCUZpbGVSZWFkZXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoXCJm
aWxlXCIpO1xuIiArIAotCQkiCSAgICAgICAgICAgXl5eXl5eXG4iICsgCi0JCSJSZXNvdXJjZSBs
ZWFrOiAncmVhZGVyJyBpcyBuZXZlciBjbG9zZWRcbiIgKyAKLQkJIi0tLS0tLS0tLS1cbiIgKyAK
LQkJIjIuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDE5KVxuIiArIAotCQkiCUZpbGVSZWFk
ZXIgcmVhZGVyMTExID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlMlwiKTtcbiIgKyAKLQkJIgkgICAg
ICAgICAgIF5eXl5eXl5eXlxuIiArIAotCQkiUmVzb3VyY2UgJ3JlYWRlcjExMScgc2hvdWxkIGJl
IG1hbmFnZWQgYnkgdHJ5LXdpdGgtcmVzb3VyY2VcbiIgKyAKLQkJIi0tLS0tLS0tLS1cbiIgKyAK
LQkJIjMuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA0MilcbiIgKyAKLQkJIglyZXR1cm47XG4i
ICsgCi0JCSIJXl5eXl5eXlxuIiArIAotCQkiUmVzb3VyY2UgbGVhazogJ3JlYWRlcjInIGlzIG5v
dCBjbG9zZWQgYXQgdGhpcyBsb2NhdGlvblxuIiArIAotCQkiLS0tLS0tLS0tLVxuIiwKLQkJbnVs
bCwKLQkJdHJ1ZSwKLQkJb3B0aW9ucyk7Ci19Ci0vLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdh
cm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCi0vLyBlbmQgb2YgbWV0aG9kIGlz
IGRlYWQgZW5kLCBidXQgYmVmb3JlIHdlIGhhdmUgYm90aCBhIGNsb3NlKCkgYW5kIGFuIGVhcmx5
IHJldHVybgotcHVibGljIHZvaWQgdGVzdDA1NncoKSB7Ci0JTWFwIG9wdGlvbnMgPSBnZXRDb21w
aWxlck9wdGlvbnMoKTsKLQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9VTkNMT1NF
RF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0Jb3B0aW9ucy5wdXQoSmF2YUNv
cmUuQ09NUElMRVJfUEJfUE9URU5USUFMTFlfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9w
dGlvbnMuV0FSTklORyk7Ci0Jb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfREVBRF9D
T0RFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCXRoaXMucnVuTmVnYXRpdmVUZXN0KAotCQlu
ZXcgU3RyaW5nW10gewotCQkJIlguamF2YSIsCi0JCQkiaW1wb3J0IGphdmEuaW8uRmlsZVJlYWRl
cjtcbiIgKyAKLQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsgCi0JCQkiICAgIGJvb2xlYW4gZm9v
MSgpIHRocm93cyBFeGNlcHRpb24ge1xuIiArIAotCQkJIiAgICAgICAgRmlsZVJlYWRlciByZWFk
ZXIgPSBuZXcgRmlsZVJlYWRlcihcImZpbGVcIik7XG4iICsgCi0JCQkiICAgICAgICB0cnkge1xu
IiArIAotCQkJIiAgICAgICAgICAgIGludCBjaDtcbiIgKyAKLQkJCSIgICAgICAgICAgICB3aGls
ZSAoKGNoID0gcmVhZGVyLnJlYWQoKSkgIT0gLTEpIHtcbiIgKyAKLQkJCSIgICAgICAgICAgICAg
ICAgU3lzdGVtLm91dC5wcmludGxuKGNoKTtcbiIgKyAKLQkJCSIgICAgICAgICAgICAgICAgcmVh
ZGVyLnJlYWQoKTtcbiIgKyAKLQkJCSIgICAgICAgICAgICB9XG4iICsgCi0JCQkiICAgICAgICAg
ICAgaWYgKGNoID4gMTApIHtcbiIgKwotCQkJIgkJCQkgcmVhZGVyLmNsb3NlKCk7XG4iICsgCi0J
CQkiICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuIiArIAotCQkJIiAgICAgICAgICAgIH1c
biIgKyAKLQkJCSIgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4iICsgCi0JCQkiICAgICAgICB9
IGZpbmFsbHkge1xuIiArIAotCQkJIiAgICAgICAgfVxuIiArIAotCQkJIiAgICB9XG4iICsgCi0J
CQkifVxuIgotCQl9LAotCQkiLS0tLS0tLS0tLVxuIiArIAotCQkiMS4gRVJST1IgaW4gWC5qYXZh
IChhdCBsaW5lIDE1KVxuIiArIAotCQkiCXJldHVybiBmYWxzZTtcbiIgKyAKLQkJIgleXl5eXl5e
Xl5eXl5eXG4iICsgCi0JCSJSZXNvdXJjZSBsZWFrOiAncmVhZGVyJyBpcyBub3QgY2xvc2VkIGF0
IHRoaXMgbG9jYXRpb25cbiIgKyAKLQkJIi0tLS0tLS0tLS1cbiIsCi0JCW51bGwsCi0JCXRydWUs
Ci0JCW9wdGlvbnMpOwotfQotLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBt
aXNzaW5nIHRyeS13aXRoLXJlc291cmNlcwotLy8gZGlmZmVyZW50IGVhcmx5IGV4aXRzLCBpZiBu
byBjbG9zZSBzZWVuIHJlcG9ydCBhcyBkZWZpbml0ZWx5IHVuY2xvc2VkCi1wdWJsaWMgdm9pZCB0
ZXN0MDU2eCgpIHsKLQlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwotCW9wdGlv
bnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJP
cHRpb25zLkVSUk9SKTsKLQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9QT1RFTlRJ
QUxMWV9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5XQVJOSU5HKTsKLQlvcHRp
b25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9ERUFEX0NPREUsIENvbXBpbGVyT3B0aW9ucy5F
UlJPUik7Ci0JdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCi0JCW5ldyBTdHJpbmdbXSB7Ci0JCQkiWC5q
YXZhIiwKLQkJCSJpbXBvcnQgamF2YS5pby5GaWxlUmVhZGVyO1xuIiArCi0JCQkicHVibGljIGNs
YXNzIFgge1xuIiArCi0JCQkiICAgIHZvaWQgZm9vMzEoYm9vbGVhbiBiKSB0aHJvd3MgRXhjZXB0
aW9uIHtcbiIgKwotCQkJIiAgICAgICAgRmlsZVJlYWRlciByZWFkZXIgPSBuZXcgRmlsZVJlYWRl
cihcImZpbGVcIik7XG4iICsKLQkJCSIgICAgICAgIGlmIChiKSB7XG4iICsKLQkJCSIgICAgICAg
ICAgICByZWFkZXIuY2xvc2UoKTtcbiIgKwotCQkJIiAgICAgICAgfSBlbHNlIHtcbiIgKwotCQkJ
IiAgICAgICAgICAgIHJldHVybjsgLy8gd2FybmluZ1xuIiArCi0JCQkiICAgICAgICB9XG4iICsK
LQkJCSIgICAgfVxuIiArCi0JCQkiICAgIHZvaWQgZm9vMzIoYm9vbGVhbiBiKSB0aHJvd3MgRXhj
ZXB0aW9uIHtcbiIgKwotCQkJIiAgICAgICAgRmlsZVJlYWRlciByZWFkZXIgPSBuZXcgRmlsZVJl
YWRlcihcImZpbGVcIik7IC8vIHdhcm4gaGVyZVxuIiArCi0JCQkiICAgICAgICByZXR1cm47XG4i
ICsKLQkJCSIgICAgfVxuIiArCi0JCQkifVxuIgotCQl9LAotCQkiLS0tLS0tLS0tLVxuIiArCi0J
CSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgOClcbiIgKwotCQkiCXJldHVybjsgLy8gd2Fy
bmluZ1xuIiArCi0JCSIJXl5eXl5eXlxuIiArCi0JCSJSZXNvdXJjZSBsZWFrOiAncmVhZGVyJyBp
cyBub3QgY2xvc2VkIGF0IHRoaXMgbG9jYXRpb25cbiIgKwotCQkiLS0tLS0tLS0tLVxuIiArCi0J
CSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTIpXG4iICsKLQkJIglGaWxlUmVhZGVyIHJl
YWRlciA9IG5ldyBGaWxlUmVhZGVyKFwiZmlsZVwiKTsgLy8gd2FybiBoZXJlXG4iICsKLQkJIgkg
ICAgICAgICAgIF5eXl5eXlxuIiArCi0JCSJSZXNvdXJjZSBsZWFrOiAncmVhZGVyJyBpcyBuZXZl
ciBjbG9zZWRcbiIgKwotCQkiLS0tLS0tLS0tLVxuIiwKLQkJbnVsbCwKLQkJdHJ1ZSwKLQkJb3B0
aW9ucyk7Ci19Ci0vLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3Npbmcg
dHJ5LXdpdGgtcmVzb3VyY2VzCi0vLyBuZXN0ZWQgbWV0aG9kIHBhc3NlcyB0aGUgcmVzb3VyY2Ug
dG8gb3V0c2lkZSBjb2RlCi1wdWJsaWMgdm9pZCB0ZXN0MDU2eSgpIHsKLQlNYXAgb3B0aW9ucyA9
IGdldENvbXBpbGVyT3B0aW9ucygpOwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BC
X1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQlvcHRpb25zLnB1
dChKYXZhQ29yZS5DT01QSUxFUl9QQl9QT1RFTlRJQUxMWV9VTkNMT1NFRF9DTE9TRUFCTEUsIENv
bXBpbGVyT3B0aW9ucy5XQVJOSU5HKTsKLQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9Q
Ql9ERUFEX0NPREUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0JdGhpcy5ydW5OZWdhdGl2ZVRl
c3QoCi0JCW5ldyBTdHJpbmdbXSB7Ci0JCQkiWC5qYXZhIiwKLQkJCSJpbXBvcnQgamF2YS5pby5G
aWxlUmVhZGVyO1xuIiArCi0JCQkicHVibGljIGNsYXNzIFgge1xuIiArCi0JCQkiICAgIHZvaWQg
Zm9vMzEoYm9vbGVhbiBiKSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIgKwotCQkJIiAgICAgICAgZmlu
YWwgRmlsZVJlYWRlciByZWFkZXIzMSA9IG5ldyBGaWxlUmVhZGVyKFwiZmlsZVwiKTtcbiIgKwot
CQkJIiAgICAgICAgbmV3IFJ1bm5hYmxlKCkge1xuIiArCi0JCQkiICAgICAgICAgICAgcHVibGlj
IHZvaWQgcnVuKCkge1xuIiArCi0JCQkiICAgICAgICAgICAgICAgIGZvbzE4KHJlYWRlcjMxKTtc
biIgKwotCQkJIiAgICAgICAgICAgIH1cbiIgKwotCQkJIiAgICAgICAgfS5ydW4oKTtcbiIgKwot
CQkJIiAgICB9XG4iICsKLQkJCSIgICAgdm9pZCBmb28xOChGaWxlUmVhZGVyIHIxOCkge1xuIiAr
Ci0JCQkiICAgICAgICAvLyBjb3VsZCB0aGVvcmV0aWNhbGx5IGNsb3NlIHIxODtcbiIgKwotCQkJ
IiAgICB9XG4iICsKLQkJCSIgICAgYWJzdHJhY3QgY2xhc3MgUmVzb3VyY2VQcm92aWRlciB7XG4i
ICsKLQkJCSIgICAgICAgIGFic3RyYWN0IEZpbGVSZWFkZXIgcHJvdmlkZSgpOyIgKwotCQkJIiAg
ICB9XG4iICsKLQkJCSIgICAgUmVzb3VyY2VQcm92aWRlciBwcm92aWRlcjsiICsKLQkJCSIgICAg
dm9pZCBmb28yMygpIHRocm93cyBFeGNlcHRpb24ge1xuIiArCi0JCQkiICAgICAgICBmaW5hbCBG
aWxlUmVhZGVyIHJlYWRlcjIzID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlXCIpO1xuIiArCi0JCQki
ICAgICAgICBwcm92aWRlciA9IG5ldyBSZXNvdXJjZVByb3ZpZGVyKCkge1xuIiArCi0JCQkiICAg
ICAgICAgICAgcHVibGljIEZpbGVSZWFkZXIgcHJvdmlkZSgpIHtcbiIgKwotCQkJIiAgICAgICAg
ICAgICAgICByZXR1cm4gcmVhZGVyMjM7XG4iICsKLQkJCSIgICAgICAgICAgICB9XG4iICsKLQkJ
CSIgICAgICAgIH07XG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQkifVxuIgotCQl9LAotCQkiLS0t
LS0tLS0tLVxuIiArIAotCQkiMS4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUgNClcbiIgKyAK
LQkJIglmaW5hbCBGaWxlUmVhZGVyIHJlYWRlcjMxID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlXCIp
O1xuIiArIAotCQkiCSAgICAgICAgICAgICAgICAgXl5eXl5eXl5cbiIgKyAKLQkJIlBvdGVudGlh
bCByZXNvdXJjZSBsZWFrOiAncmVhZGVyMzEnIG1heSBub3QgYmUgY2xvc2VkXG4iICsgCi0JCSIt
LS0tLS0tLS0tXG4iICsgCi0JCSIyLiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSAxNylcbiIg
KyAKLQkJIglmaW5hbCBGaWxlUmVhZGVyIHJlYWRlcjIzID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxl
XCIpO1xuIiArIAotCQkiCSAgICAgICAgICAgICAgICAgXl5eXl5eXl5cbiIgKyAKLQkJIlBvdGVu
dGlhbCByZXNvdXJjZSBsZWFrOiAncmVhZGVyMjMnIG1heSBub3QgYmUgY2xvc2VkXG4iICsgCi0J
CSItLS0tLS0tLS0tXG4iLAotCQludWxsLAotCQl0cnVlLAotCQlvcHRpb25zKTsKLX0KLS8vIEJ1
ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNvdXJj
ZXMKLS8vIHJlc291cmNlIGFzc2lnbmVkIHRvIHNlY29uZCBsb2NhbCBhbmQgaXMgKHBvdGVudGlh
bGx5KSBjbG9zZWQgb24gdGhlIGxhdHRlcgotcHVibGljIHZvaWQgdGVzdDA1NnooKSB7Ci0JTWFw
IG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKLQlvcHRpb25zLnB1dChKYXZhQ29yZS5D
T01QSUxFUl9QQl9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0J
b3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfUE9URU5USUFMTFlfVU5DTE9TRURfQ0xP
U0VBQkxFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNP
TVBJTEVSX1BCX0RFQURfQ09ERSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQl0aGlzLnJ1bk5l
Z2F0aXZlVGVzdCgKLQkJbmV3IFN0cmluZ1tdIHsKLQkJCSJYLmphdmEiLAotCQkJImltcG9ydCBq
YXZhLmlvLkZpbGVSZWFkZXI7XG4iICsKLQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKLQkJCSIg
ICAgdm9pZCBmb28xNygpIHRocm93cyBFeGNlcHRpb24ge1xuIiArCi0JCQkiICAgICAgICBGaWxl
UmVhZGVyIHJlYWRlcjE3ID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlXCIpO1xuIiArCi0JCQkiICAg
ICAgICBmaW5hbCBGaWxlUmVhZGVyIHJlYWRlckNvcHkgPSByZWFkZXIxNztcbiIgKwotCQkJIiAg
ICAgICAgcmVhZGVyQ29weS5jbG9zZSgpO1xuIiArCi0JCQkiICAgIH1cbiIgKwotCQkJIiAgICB2
b2lkIGZvbzE3YSgpIHRocm93cyBFeGNlcHRpb24ge1xuIiArCi0JCQkiICAgICAgICBGaWxlUmVh
ZGVyIHJlYWRlcjE3YSA9IG5ldyBGaWxlUmVhZGVyKFwiZmlsZVwiKTtcbiIgKwotCQkJIiAgICAg
ICAgRmlsZVJlYWRlciByZWFkZXJDb3B5YTsiICsKLQkJCSIJCSByZWFkZXJDb3B5YSA9IHJlYWRl
cjE3YTtcbiIgKwotCQkJIiAgICAgICAgYmFyKHJlYWRlckNvcHlhKTtcbiIgKyAvLyBwb3RlbnRp
YWxseSBjbG9zZXMKLQkJCSIgICAgfVxuIiArCi0JCQkiICAgIHZvaWQgYmFyKEZpbGVSZWFkZXIg
cikge31cbiIgKwotCQkJIn1cbiIKLQkJfSwKLQkJIi0tLS0tLS0tLS1cbiIgKyAKLQkJIjEuIEVS
Uk9SIGluIFguamF2YSAoYXQgbGluZSA5KVxuIiArIAotCQkiCUZpbGVSZWFkZXIgcmVhZGVyMTdh
ID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlXCIpO1xuIiArIAotCQkiCSAgICAgICAgICAgXl5eXl5e
Xl5eXG4iICsgCi0JCSJQb3RlbnRpYWwgcmVzb3VyY2UgbGVhazogJ3JlYWRlcjE3YScgbWF5IG5v
dCBiZSBjbG9zZWRcbiIgKyAKLQkJIi0tLS0tLS0tLS1cbiIsCi0JCW51bGwsCi0JCXRydWUsCi0J
CW9wdGlvbnMpOwotfQotLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNz
aW5nIHRyeS13aXRoLXJlc291cmNlcwotLy8gbXVsdGlwbGUgZWFybHkgZXhpc3RzIGZyb20gbmVz
dGVkIHNjb3BlcyAoYWx3YXlzIGNsb3NlZCkgCi1wdWJsaWMgdm9pZCB0ZXN0MDU2enooKSB7Ci0J
TWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKLQlvcHRpb25zLnB1dChKYXZhQ29y
ZS5DT01QSUxFUl9QQl9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7
Ci0Jb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfUE9URU5USUFMTFlfVU5DTE9TRURf
Q0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCW9wdGlvbnMucHV0KEphdmFDb3Jl
LkNPTVBJTEVSX1BCX0VYUExJQ0lUTFlfQ0xPU0VEX0FVVE9DTE9TRUFCTEUsIENvbXBpbGVyT3B0
aW9ucy5FUlJPUik7Ci0Jb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfREVBRF9DT0RF
LCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCXRoaXMucnVuTmVnYXRpdmVUZXN0KAotCQluZXcg
U3RyaW5nW10gewotCQkJIlguamF2YSIsCi0JCQkiaW1wb3J0IGphdmEuaW8uRmlsZVJlYWRlcjtc
biIgKwotCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwotCQkJIiAgICB2b2lkIGZvbzE2KCkgdGhy
b3dzIEV4Y2VwdGlvbiB7XG4iICsKLQkJCSIgICAgICAgIEZpbGVSZWFkZXIgcmVhZGVyMTYgPSBu
ZXcgRmlsZVJlYWRlcihcImZpbGVcIik7XG4iICsKLQkJCSIgICAgICAgIHRyeSB7XG4iICsKLQkJ
CSIgICAgICAgICAgICByZWFkZXIxNi5jbG9zZSgpO1xuICIgKwotCQkJIiAgICAgICAgICAgIHJl
dHVybjtcbiIgKwotCQkJIiAgICAgICAgfSBjYXRjaCAoUnVudGltZUV4Y2VwdGlvbiByZSkge1xu
IiArCi0JCQkiICAgICAgICAgICAgcmV0dXJuO1xuIiArCi0JCQkiICAgICAgICB9IGNhdGNoIChF
cnJvciBlKSB7XG4iICsKLQkJCSIgICAgICAgICAgICByZXR1cm47XG4iICsKLQkJCSIgICAgICAg
IH0gZmluYWxseSB7XG4iICsKLQkJCSIgICAgICAgICAgICByZWFkZXIxNi5jbG9zZSgpO1xuICIg
KwotCQkJIiAgICAgICAgfVxuIiArCi0JCQkiICAgIH1cbiIgKwotCQkJIn1cbiIKLQkJfSwKLQkJ
Ii0tLS0tLS0tLS1cbiIgKyAKLQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA0KVxuIiAr
IAotCQkiCUZpbGVSZWFkZXIgcmVhZGVyMTYgPSBuZXcgRmlsZVJlYWRlcihcImZpbGVcIik7XG4i
ICsgCi0JCSIJICAgICAgICAgICBeXl5eXl5eXlxuIiArIAotCQkiUmVzb3VyY2UgJ3JlYWRlcjE2
JyBzaG91bGQgYmUgbWFuYWdlZCBieSB0cnktd2l0aC1yZXNvdXJjZVxuIiArIAotCQkiLS0tLS0t
LS0tLVxuIiwKLQkJbnVsbCwKLQkJdHJ1ZSwKLQkJb3B0aW9ucyk7Ci19Ci0vLyBCdWcgMzQ5MzI2
IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCi0vLyBt
dWx0aXBsZSBlYXJseSBleGlzdHMgZnJvbSBuZXN0ZWQgc2NvcGVzIChuZXZlciBjbG9zZWQpIAot
cHVibGljIHZvaWQgdGVzdDA1Nnp6eigpIHsKLQlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0
aW9ucygpOwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX1VOQ0xPU0VEX0NMT1NF
QUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01Q
SUxFUl9QQl9QT1RFTlRJQUxMWV9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5F
UlJPUik7Ci0Jb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfRVhQTElDSVRMWV9DTE9T
RURfQVVUT0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQlvcHRpb25zLnB1dChK
YXZhQ29yZS5DT01QSUxFUl9QQl9ERUFEX0NPREUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0J
dGhpcy5ydW5OZWdhdGl2ZVRlc3QoCi0JCW5ldyBTdHJpbmdbXSB7Ci0JCQkiWC5qYXZhIiwKLQkJ
CSJpbXBvcnQgamF2YS5pby5GaWxlUmVhZGVyO1xuIiArCi0JCQkicHVibGljIGNsYXNzIFgge1xu
IiArCi0JCQkiICAgIHZvaWQgZm9vMTYoKSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIgKwotCQkJIiAg
ICAgICAgRmlsZVJlYWRlciByZWFkZXIxNiA9IG5ldyBGaWxlUmVhZGVyKFwiZmlsZVwiKTtcbiIg
KwotCQkJIiAgICAgICAgdHJ5IHtcbiIgKwotCQkJIiAgICAgICAgICAgIHJldHVybjtcbiIgKwot
CQkJIiAgICAgICAgfSBjYXRjaCAoUnVudGltZUV4Y2VwdGlvbiByZSkge1xuIiArCi0JCQkiICAg
ICAgICAgICAgcmV0dXJuO1xuIiArCi0JCQkiICAgICAgICB9IGNhdGNoIChFcnJvciBlKSB7XG4i
ICsKLQkJCSIgICAgICAgICAgICByZXR1cm47XG4iICsKLQkJCSIgICAgICAgIH0gZmluYWxseSB7
XG4iICsKLQkJCSIgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oKTtcbiAiICsKLQkJCSIg
ICAgICAgIH1cbiIgKwotCQkJIiAgICB9XG4iICsKLQkJCSJ9XG4iCi0JCX0sCi0JCSItLS0tLS0t
LS0tXG4iICsgCi0JCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNClcbiIgKyAKLQkJIglG
aWxlUmVhZGVyIHJlYWRlcjE2ID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlXCIpO1xuIiArIAotCQki
CSAgICAgICAgICAgXl5eXl5eXl5cbiIgKyAKLQkJIlJlc291cmNlIGxlYWs6ICdyZWFkZXIxNicg
aXMgbmV2ZXIgY2xvc2VkXG4iICsgCi0JCSItLS0tLS0tLS0tXG4iLAotCQludWxsLAotCQl0cnVl
LAotCQlvcHRpb25zKTsKLX0KLS8vIEJ1ZyAzNTkzMzQgLSBBbmFseXNpcyBmb3IgcmVzb3VyY2Ug
bGVhayB3YXJuaW5ncyBkb2VzIG5vdCBjb25zaWRlciBleGNlcHRpb25zIGFzIG1ldGhvZCBleGl0
IHBvaW50cwotLy8gZXhwbGljaXQgdGhyb3cgaXMgYSB0cnVlIG1ldGhvZCBleGl0IGhlcmUKLXB1
YmxpYyB2b2lkIHRlc3QwNTZ0aHJvdzEoKSB7Ci0JTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9w
dGlvbnMoKTsKLQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9VTkNMT1NFRF9DTE9T
RUFCTEUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0Jb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09N
UElMRVJfUEJfUE9URU5USUFMTFlfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMu
RVJST1IpOwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX0VYUExJQ0lUTFlfQ0xP
U0VEX0FVVE9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0Jb3B0aW9ucy5wdXQo
SmF2YUNvcmUuQ09NUElMRVJfUEJfREVBRF9DT0RFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwot
CXRoaXMucnVuTmVnYXRpdmVUZXN0KAotCQluZXcgU3RyaW5nW10gewotCQkJIlguamF2YSIsCi0J
CQkiaW1wb3J0IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIgKwotCQkJInB1YmxpYyBjbGFzcyBYIHtc
biIgKwotCQkJIiAgICB2b2lkIGZvbzIoYm9vbGVhbiBhLCBib29sZWFuIGIsIGJvb2xlYW4gYykg
dGhyb3dzIEV4Y2VwdGlvbiB7XG4iICsKLQkJCSIgICAgICAgIEZpbGVSZWFkZXIgcmVhZGVyID0g
bmV3IEZpbGVSZWFkZXIoXCJmaWxlXCIpO1xuIiArCi0JCQkiICAgICAgICBpZihhKVxuIiArCi0J
CQkiICAgICAgICAgICAgdGhyb3cgbmV3IEV4Y2VwdGlvbigpOyAgICAvL3dhcm5pbmcgMVxuIiAr
Ci0JCQkiICAgICAgICBlbHNlIGlmIChiKVxuIiArCi0JCQkiICAgICAgICAgICAgcmVhZGVyLmNs
b3NlKCk7XG4iICsKLQkJCSIgICAgICAgIGVsc2UgaWYoYylcbiIgKwotCQkJIiAgICAgICAgICAg
IHRocm93IG5ldyBFeGNlcHRpb24oKTsgICAgLy93YXJuaW5nIDJcbiIgKwotCQkJIiAgICAgICAg
cmVhZGVyLmNsb3NlKCk7XG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQkifVxuIgotCQl9LAotCQki
LS0tLS0tLS0tLVxuIiArIAotCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDYpXG4iICsK
LQkJIgl0aHJvdyBuZXcgRXhjZXB0aW9uKCk7ICAgIC8vd2FybmluZyAxXG4iICsKLQkJIgleXl5e
Xl5eXl5eXl5eXl5eXl5eXl5eXG4iICsKLQkJIlJlc291cmNlIGxlYWs6ICdyZWFkZXInIGlzIG5v
dCBjbG9zZWQgYXQgdGhpcyBsb2NhdGlvblxuIiArCi0JCSItLS0tLS0tLS0tXG4iICsKLQkJIjIu
IEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxMClcbiIgKwotCQkiCXRocm93IG5ldyBFeGNlcHRp
b24oKTsgICAgLy93YXJuaW5nIDJcbiIgKwotCQkiCV5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIg
KwotCQkiUmVzb3VyY2UgbGVhazogJ3JlYWRlcicgaXMgbm90IGNsb3NlZCBhdCB0aGlzIGxvY2F0
aW9uXG4iICsKLQkJIi0tLS0tLS0tLS1cbiIsCi0JCW51bGwsCi0JCXRydWUsCi0JCW9wdGlvbnMp
OwkKLX0KLS8vIEJ1ZyAzNTkzMzQgLSBBbmFseXNpcyBmb3IgcmVzb3VyY2UgbGVhayB3YXJuaW5n
cyBkb2VzIG5vdCBjb25zaWRlciBleGNlcHRpb25zIGFzIG1ldGhvZCBleGl0IHBvaW50cwotLy8g
Y2xvc2UoKSB3aXRoaW4gZmluYWxseSBwcm92aWRlcyBwcm90ZWN0aW9uIGZvciB0aHJvdwotcHVi
bGljIHZvaWQgdGVzdDA1NnRocm93MigpIHsKLQlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0
aW9ucygpOwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX1VOQ0xPU0VEX0NMT1NF
QUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01Q
SUxFUl9QQl9QT1RFTlRJQUxMWV9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5F
UlJPUik7Ci0Jb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfRVhQTElDSVRMWV9DTE9T
RURfQVVUT0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQlvcHRpb25zLnB1dChK
YXZhQ29yZS5DT01QSUxFUl9QQl9ERUFEX0NPREUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0J
dGhpcy5ydW5OZWdhdGl2ZVRlc3QoCi0JCW5ldyBTdHJpbmdbXSB7Ci0JCQkiWC5qYXZhIiwKLQkJ
CSJpbXBvcnQgamF2YS5pby5GaWxlUmVhZGVyO1xuIiArCi0JCQkicHVibGljIGNsYXNzIFgge1xu
IiArCi0JCQkiICAgIHZvaWQgZm9vMSgpIHRocm93cyBFeGNlcHRpb24ge1xuIiArIAotCQkJIiAg
ICAgICAgRmlsZVJlYWRlciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihcImZpbGVcIik7IC8vIHBy
b3Bvc2UgdC13LXJcbiIgKyAKLQkJCSIgICAgICAgIHRyeSB7XG4iICsgCi0JCQkiICAgICAgICAg
ICAgcmVhZGVyLnJlYWQoKTtcbiIgKyAKLQkJCSIgICAgICAgICAgICByZXR1cm47XG4iICsgCi0J
CQkiICAgICAgICB9IGNhdGNoIChFeGNlcHRpb24gZSkge1xuIiArIAotCQkJIiAgICAgICAgICAg
IHRocm93IG5ldyBFeGNlcHRpb24oKTtcbiIgKyAKLQkJCSIgICAgICAgIH0gZmluYWxseSB7XG4i
ICsgCi0JCQkiICAgICAgICAgICAgcmVhZGVyLmNsb3NlKCk7XG4iICsgCi0JCQkiICAgICAgICB9
XG4iICsgCi0JCQkiICAgIH1cbiIgKyAKLQkJCSJcbiIgKyAKLQkJCSIgICAgdm9pZCBmb28yKCkg
dGhyb3dzIEV4Y2VwdGlvbiB7XG4iICsgCi0JCQkiICAgICAgICBGaWxlUmVhZGVyIHJlYWRlciA9
IG5ldyBGaWxlUmVhZGVyKFwiZmlsZVwiKTsgLy8gcHJvcG9zZSB0LXctclxuIiArIAotCQkJIiAg
ICAgICAgdHJ5IHtcbiIgKyAKLQkJCSIgICAgICAgICAgICByZWFkZXIucmVhZCgpO1xuIiArIAot
CQkJIiAgICAgICAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oKTsgLy8gc2hvdWxkIG5vdCB3YXJu
IGhlcmVcbiIgKyAKLQkJCSIgICAgICAgIH0gY2F0Y2ggKEV4Y2VwdGlvbiBlKSB7XG4iICsgCi0J
CQkiICAgICAgICAgICAgdGhyb3cgbmV3IEV4Y2VwdGlvbigpO1xuIiArIAotCQkJIiAgICAgICAg
fSBmaW5hbGx5IHtcbiIgKyAKLQkJCSIgICAgICAgICAgICByZWFkZXIuY2xvc2UoKTtcbiIgKyAK
LQkJCSIgICAgICAgIH1cbiIgKyAKLQkJCSIgICAgfVxuIiArIAotCQkJIlxuIiArIAotCQkJIiAg
ICB2b2lkIGZvbzMoKSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIgKyAKLQkJCSIgICAgICAgIEZpbGVS
ZWFkZXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlXCIpOyAvLyBwcm9wb3NlIHQtdy1y
XG4iICsgCi0JCQkiICAgICAgICB0cnkge1xuIiArIAotCQkJIiAgICAgICAgICAgIHJlYWRlci5y
ZWFkKCk7XG4iICsgCi0JCQkiICAgICAgICAgICAgdGhyb3cgbmV3IEV4Y2VwdGlvbigpO1xuIiAr
IAotCQkJIiAgICAgICAgfSBmaW5hbGx5IHtcbiIgKyAKLQkJCSIgICAgICAgICAgICByZWFkZXIu
Y2xvc2UoKTtcbiIgKyAKLQkJCSIgICAgICAgIH1cbiIgKyAKLQkJCSIgICAgfVxuIiArIAotCQkJ
In1cbiIKLQkJfSwKLQkJIi0tLS0tLS0tLS1cbiIgKwotCQkiMS4gRVJST1IgaW4gWC5qYXZhIChh
dCBsaW5lIDQpXG4iICsKLQkJIglGaWxlUmVhZGVyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKFwi
ZmlsZVwiKTsgLy8gcHJvcG9zZSB0LXctclxuIiArCi0JCSIJICAgICAgICAgICBeXl5eXl5cbiIg
KwotCQkiUmVzb3VyY2UgJ3JlYWRlcicgc2hvdWxkIGJlIG1hbmFnZWQgYnkgdHJ5LXdpdGgtcmVz
b3VyY2VcbiIgKwotCQkiLS0tLS0tLS0tLVxuIiArCi0JCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0
IGxpbmUgMTYpXG4iICsKLQkJIglGaWxlUmVhZGVyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKFwi
ZmlsZVwiKTsgLy8gcHJvcG9zZSB0LXctclxuIiArCi0JCSIJICAgICAgICAgICBeXl5eXl5cbiIg
KwotCQkiUmVzb3VyY2UgJ3JlYWRlcicgc2hvdWxkIGJlIG1hbmFnZWQgYnkgdHJ5LXdpdGgtcmVz
b3VyY2VcbiIgKwotCQkiLS0tLS0tLS0tLVxuIiArCi0JCSIzLiBFUlJPUiBpbiBYLmphdmEgKGF0
IGxpbmUgMjgpXG4iICsKLQkJIglGaWxlUmVhZGVyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKFwi
ZmlsZVwiKTsgLy8gcHJvcG9zZSB0LXctclxuIiArCi0JCSIJICAgICAgICAgICBeXl5eXl5cbiIg
KwotCQkiUmVzb3VyY2UgJ3JlYWRlcicgc2hvdWxkIGJlIG1hbmFnZWQgYnkgdHJ5LXdpdGgtcmVz
b3VyY2VcbiIgKwotCQkiLS0tLS0tLS0tLVxuIiwKLQkJbnVsbCwKLQkJdHJ1ZSwKLQkJb3B0aW9u
cyk7CQotfQotLy8gQnVnIDM1OTMzNCAtIEFuYWx5c2lzIGZvciByZXNvdXJjZSBsZWFrIHdhcm5p
bmdzIGRvZXMgbm90IGNvbnNpZGVyIGV4Y2VwdGlvbnMgYXMgbWV0aG9kIGV4aXQgcG9pbnRzCi0v
LyBjbG9zZSgpIG5lc3RlZCB3aXRoaW4gZmluYWxseSBwcm92aWRlcyBwcm90ZWN0aW9uIGZvciB0
aHJvdwotcHVibGljIHZvaWQgdGVzdDA1NnRocm93MygpIHsKLQlNYXAgb3B0aW9ucyA9IGdldENv
bXBpbGVyT3B0aW9ucygpOwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX1VOQ0xP
U0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQlvcHRpb25zLnB1dChKYXZh
Q29yZS5DT01QSUxFUl9QQl9QT1RFTlRJQUxMWV9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVy
T3B0aW9ucy5FUlJPUik7Ci0Jb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfRVhQTElD
SVRMWV9DTE9TRURfQVVUT0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQlvcHRp
b25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9ERUFEX0NPREUsIENvbXBpbGVyT3B0aW9ucy5F
UlJPUik7Ci0JdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCi0JCW5ldyBTdHJpbmdbXSB7Ci0JCQkiWC5q
YXZhIiwKLQkJCSJpbXBvcnQgamF2YS5pby5GaWxlUmVhZGVyO1xuIiArCi0JCQkicHVibGljIGNs
YXNzIFgge1xuIiArCi0JCQkiICAgIHZvaWQgZm9vMngoKSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIg
KyAKLQkJCSIgICAgICAgIEZpbGVSZWFkZXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxl
XCIpOyAvLyBwcm9wb3NlIHQtdy1yXG4iICsgCi0JCQkiICAgICAgICB0cnkge1xuIiArIAotCQkJ
IiAgICAgICAgICAgIHJlYWRlci5yZWFkKCk7XG4iICsgCi0JCQkiICAgICAgICAgICAgdGhyb3cg
bmV3IEV4Y2VwdGlvbigpOyAvLyBzaG91bGQgbm90IHdhcm4gaGVyZVxuIiArIAotCQkJIiAgICAg
ICAgfSBjYXRjaCAoRXhjZXB0aW9uIGUpIHtcbiIgKyAKLQkJCSIgICAgICAgICAgICB0aHJvdyBu
ZXcgRXhjZXB0aW9uKCk7XG4iICsgCi0JCQkiICAgICAgICB9IGZpbmFsbHkge1xuIiArCi0JCQki
ICAgICAgICAgICAgaWYgKHJlYWRlciAhPSBudWxsKVxuIiArCi0JCQkiICAgICAgICAgICAgICAg
ICB0cnkge1xuIiArIAotCQkJIiAgICAgICAgICAgICAgICAgICAgIHJlYWRlci5jbG9zZSgpO1xu
IiArCi0JCQkiICAgICAgICAgICAgICAgICB9IGNhdGNoIChqYXZhLmlvLklPRXhjZXB0aW9uIGlv
KSB7fVxuIiArIAotCQkJIiAgICAgICAgfVxuIiArIAotCQkJIiAgICB9XG4iICsgCi0JCQkifVxu
IgotCQl9LAotCQkiLS0tLS0tLS0tLVxuIiArIAotCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBs
aW5lIDQpXG4iICsgCi0JCSIJRmlsZVJlYWRlciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihcImZp
bGVcIik7IC8vIHByb3Bvc2UgdC13LXJcbiIgKyAKLQkJIgkgICAgICAgICAgIF5eXl5eXlxuIiAr
IAotCQkiUmVzb3VyY2UgJ3JlYWRlcicgc2hvdWxkIGJlIG1hbmFnZWQgYnkgdHJ5LXdpdGgtcmVz
b3VyY2VcbiIgKyAKLQkJIi0tLS0tLS0tLS1cbiIsCi0JCW51bGwsCi0JCXRydWUsCi0JCW9wdGlv
bnMpOwkKLX0KLS8vIEJ1ZyAzNTkzMzQgLSBBbmFseXNpcyBmb3IgcmVzb3VyY2UgbGVhayB3YXJu
aW5ncyBkb2VzIG5vdCBjb25zaWRlciBleGNlcHRpb25zIGFzIG1ldGhvZCBleGl0IHBvaW50cwot
Ly8gYWRkaXRpb25hbCBib29sZWFuIHNob3VsZCBzaGVkIGRvdWJ0IG9uIHdoZXRoZXIgd2UgcmVh
Y2ggdGhlIGNsb3NlKCkgY2FsbAotcHVibGljIHZvaWQgdGVzdDA1NnRocm93NCgpIHsKLQlNYXAg
b3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNP
TVBJTEVSX1BCX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQlv
cHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9QT1RFTlRJQUxMWV9VTkNMT1NFRF9DTE9T
RUFCTEUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0Jb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09N
UElMRVJfUEJfRVhQTElDSVRMWV9DTE9TRURfQVVUT0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25z
LkVSUk9SKTsKLQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9ERUFEX0NPREUsIENv
bXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0JdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCi0JCW5ldyBTdHJp
bmdbXSB7Ci0JCQkiWC5qYXZhIiwKLQkJCSJpbXBvcnQgamF2YS5pby5GaWxlUmVhZGVyO1xuIiAr
Ci0JCQkicHVibGljIGNsYXNzIFgge1xuIiArCi0JCQkiICAgIHZvaWQgZm9vMngoYm9vbGVhbiBi
KSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIgKyAKLQkJCSIgICAgICAgIEZpbGVSZWFkZXIgcmVhZGVy
ID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlXCIpO1xuIiArIAotCQkJIiAgICAgICAgdHJ5IHtcbiIg
KyAKLQkJCSIgICAgICAgICAgICByZWFkZXIucmVhZCgpO1xuIiArIAotCQkJIiAgICAgICAgICAg
IHRocm93IG5ldyBFeGNlcHRpb24oKTsgLy8gc2hvdWxkIHdhcm4gaGVyZVxuIiArIAotCQkJIiAg
ICAgICAgfSBjYXRjaCAoRXhjZXB0aW9uIGUpIHtcbiIgKyAKLQkJCSIgICAgICAgICAgICB0aHJv
dyBuZXcgRXhjZXB0aW9uKCk7IC8vIHNob3VsZCB3YXJuIGhlcmVcbiIgKyAKLQkJCSIgICAgICAg
IH0gZmluYWxseSB7XG4iICsKLQkJCSIgICAgICAgICAgICBpZiAocmVhZGVyICE9IG51bGwgJiYg
YilcbiIgKyAvLyB0aGlzIGNvbmRpdGlvbiBpcyB0b28gc3Ryb25nIHRvIHByb3RlY3QgcmVhZGVy
Ci0JCQkiICAgICAgICAgICAgICAgICB0cnkge1xuIiArIAotCQkJIiAgICAgICAgICAgICAgICAg
ICAgIHJlYWRlci5jbG9zZSgpO1xuIiArCi0JCQkiICAgICAgICAgICAgICAgICB9IGNhdGNoIChq
YXZhLmlvLklPRXhjZXB0aW9uIGlvKSB7fVxuIiArIAotCQkJIiAgICAgICAgfVxuIiArIAotCQkJ
IiAgICB9XG4iICsgCi0JCQkifVxuIgotCQl9LAotCQkiLS0tLS0tLS0tLVxuIiArCi0JCSIxLiBF
UlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNylcbiIgKwotCQkiCXRocm93IG5ldyBFeGNlcHRpb24o
KTsgLy8gc2hvdWxkIHdhcm4gaGVyZVxuIiArCi0JCSIJXl5eXl5eXl5eXl5eXl5eXl5eXl5eXlxu
IiArCi0JCSJQb3RlbnRpYWwgcmVzb3VyY2UgbGVhazogJ3JlYWRlcicgbWF5IG5vdCBiZSBjbG9z
ZWQgYXQgdGhpcyBsb2NhdGlvblxuIiArCi0JCSItLS0tLS0tLS0tXG4iICsKLQkJIjIuIEVSUk9S
IGluIFguamF2YSAoYXQgbGluZSA5KVxuIiArCi0JCSIJdGhyb3cgbmV3IEV4Y2VwdGlvbigpOyAv
LyBzaG91bGQgd2FybiBoZXJlXG4iICsKLQkJIgleXl5eXl5eXl5eXl5eXl5eXl5eXl5eXG4iICsK
LQkJIlBvdGVudGlhbCByZXNvdXJjZSBsZWFrOiAncmVhZGVyJyBtYXkgbm90IGJlIGNsb3NlZCBh
dCB0aGlzIGxvY2F0aW9uXG4iICsKLQkJIi0tLS0tLS0tLS1cbiIsCi0JCW51bGwsCi0JCXRydWUs
Ci0JCW9wdGlvbnMpOwkKLX0KLS8vIEJ1ZyAzNTkzMzQgLSBBbmFseXNpcyBmb3IgcmVzb3VyY2Ug
bGVhayB3YXJuaW5ncyBkb2VzIG5vdCBjb25zaWRlciBleGNlcHRpb25zIGFzIG1ldGhvZCBleGl0
IHBvaW50cwotLy8gc2ltaWxhciB0byB0ZXN0MDU2dGhyb3czKCkgYnV0IGluZGlyZWN0bHkgY2Fs
bGluZyBjbG9zZSgpLCBzbyBkb3VidHMgcmVtYWluLgotcHVibGljIHZvaWQgdGVzdDA1NnRocm93
NSgpIHsKLQlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwotCW9wdGlvbnMucHV0
KEphdmFDb3JlLkNPTVBJTEVSX1BCX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25z
LkVSUk9SKTsKLQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9QT1RFTlRJQUxMWV9V
TkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0Jb3B0aW9ucy5wdXQo
SmF2YUNvcmUuQ09NUElMRVJfUEJfRVhQTElDSVRMWV9DTE9TRURfQVVUT0NMT1NFQUJMRSwgQ29t
cGlsZXJPcHRpb25zLkVSUk9SKTsKLQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9E
RUFEX0NPREUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0JdGhpcy5ydW5OZWdhdGl2ZVRlc3Qo
Ci0JCW5ldyBTdHJpbmdbXSB7Ci0JCQkiWC5qYXZhIiwKLQkJCSJpbXBvcnQgamF2YS5pby5GaWxl
UmVhZGVyO1xuIiArCi0JCQkicHVibGljIGNsYXNzIFgge1xuIiArCi0JCQkiICAgIHZvaWQgZm9v
MngoKSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIgKwotCQkJIiAgICAgICAgRmlsZVJlYWRlciByZWFk
ZXIgPSBuZXcgRmlsZVJlYWRlcihcImZpbGVcIik7XG4iICsKLQkJCSIgICAgICAgIHRyeSB7XG4i
ICsKLQkJCSIgICAgICAgICAgICByZWFkZXIucmVhZCgpO1xuIiArCi0JCQkiICAgICAgICAgICAg
dGhyb3cgbmV3IEV4Y2VwdGlvbigpOyAvLyBzaG91bGQgd2FybiAnbWF5IG5vdCcgaGVyZVxuIiAr
Ci0JCQkiICAgICAgICB9IGNhdGNoIChFeGNlcHRpb24gZSkge1xuIiArCi0JCQkiICAgICAgICAg
ICAgdGhyb3cgbmV3IEV4Y2VwdGlvbigpOyAvLyBzaG91bGQgd2FybiAnbWF5IG5vdCcgaGVyZVxu
IiArCi0JCQkiICAgICAgICB9IGZpbmFsbHkge1xuIiArCi0JCQkiICAgICAgICAgICAgZG9DbG9z
ZShyZWFkZXIpO1xuIiArCi0JCQkiICAgICAgICB9XG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQki
ICAgIHZvaWQgZG9DbG9zZShGaWxlUmVhZGVyIHIpIHsgdHJ5IHsgci5jbG9zZSgpOyB9IGNhdGNo
IChqYXZhLmlvLklPRXhjZXB0aW9uIGV4KSB7fX1cbiIgKyAKLQkJCSJ9XG4iCi0JCX0sCi0JCSIt
LS0tLS0tLS0tXG4iICsKLQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA3KVxuIiArCi0J
CSIJdGhyb3cgbmV3IEV4Y2VwdGlvbigpOyAvLyBzaG91bGQgd2FybiBcJ21heSBub3RcJyBoZXJl
XG4iICsKLQkJIgleXl5eXl5eXl5eXl5eXl5eXl5eXl5eXG4iICsKLQkJIlBvdGVudGlhbCByZXNv
dXJjZSBsZWFrOiAncmVhZGVyJyBtYXkgbm90IGJlIGNsb3NlZCBhdCB0aGlzIGxvY2F0aW9uXG4i
ICsKLQkJIi0tLS0tLS0tLS1cbiIgKwotCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDkp
XG4iICsKLQkJIgl0aHJvdyBuZXcgRXhjZXB0aW9uKCk7IC8vIHNob3VsZCB3YXJuIFwnbWF5IG5v
dFwnIGhlcmVcbiIgKwotCQkiCV5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIgKwotCQkiUG90ZW50
aWFsIHJlc291cmNlIGxlYWs6ICdyZWFkZXInIG1heSBub3QgYmUgY2xvc2VkIGF0IHRoaXMgbG9j
YXRpb25cbiIgKwotCQkiLS0tLS0tLS0tLVxuIiwKLQkJbnVsbCwKLQkJdHJ1ZSwKLQkJb3B0aW9u
cyk7CQotfQotLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lk
PTM2MTA1MwotcHVibGljIHZvaWQgdGVzdDA1NygpIHsKLQl0aGlzLnJ1bkNvbmZvcm1UZXN0KAot
CQluZXcgU3RyaW5nW10gewotCQkJIlguamF2YSIsCi0JCQkicHVibGljIGNsYXNzIFggaW1wbGVt
ZW50cyBBdXRvQ2xvc2VhYmxlIHtcbiIgKwotCQkJIglAT3ZlcnJpZGVcbiIgKwotCQkJIglwdWJs
aWMgdm9pZCBjbG9zZSgpIHRocm93cyBFeGNlcHRpb24ge1xuIiArCi0JCQkiCQl0aHJvdyBuZXcg
RXhjZXB0aW9uKCk7XG4iICsKLQkJCSIJfVxuIiArCi0JCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBt
YWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKwotCQkJIgkJZmluYWwgYm9vbGVhbiBmb287XG4iICsK
LQkJCSIJCXRyeSAoWCBhID0gbmV3IFgoKTsgWCBiID0gbmV3IFgoKSkge1xuIiArCi0JCQkiCQkJ
Zm9vID0gdHJ1ZTtcbiIgKwotCQkJIgkJfSBjYXRjaCAoZmluYWwgRXhjZXB0aW9uIGV4Y2VwdGlv
bikge1xuIiArCi0JCQkiCQkJcmV0dXJuO1xuIiArCi0JCQkiCQl9XG4iICsKLQkJCSIJfVxuIiAr
Ci0JCQkifVxuIgotCQl9LCAgIiIpOwkKLX0KLS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD0zNjQwMDgKLXB1YmxpYyB2b2lkIHRlc3QwNTgoKSB7Ci0JdGhp
cy5ydW5Db25mb3JtVGVzdCgKLQkJbmV3IFN0cmluZ1tdIHsKLQkJCSJYLmphdmEiLAotCQkJImlt
cG9ydCBqYXZhLmlvLkJ5dGVBcnJheU91dHB1dFN0cmVhbTtcbiIgKwotCQkJImltcG9ydCBqYXZh
LmlvLkZpbGVPdXRwdXRTdHJlYW07XG4iICsKLQkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlv
bjtcbiIgKwotCQkJIlxuIiArCi0JCQkicHVibGljIGNsYXNzIFgge1xuIiArCi0JCQkiXG4iICsK
LQkJCSIgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKGZpbmFsIFN0cmluZ1tdIGFyZ3MpIHRocm93
cyBJT0V4Y2VwdGlvbiB7XG4iICsKLQkJCSIgICAgYnl0ZVtdIGRhdGE7XG4iICsKLQkJCSIgICAg
dHJ5IChmaW5hbCBCeXRlQXJyYXlPdXRwdXRTdHJlYW0gb3MgPSBuZXcgQnl0ZUFycmF5T3V0cHV0
U3RyZWFtKCk7XG4iICsKLQkJCSIgICAgICAgICBmaW5hbCBGaWxlT3V0cHV0U3RyZWFtIG91dCA9
IG5ldyBGaWxlT3V0cHV0U3RyZWFtKFwidGVzdC5kYXRcIikpIHtcbiIgKwotCQkJIiAgICAgIGRh
dGEgPSBvcy50b0J5dGVBcnJheSgpO1xuIiArCi0JCQkiICAgIH1cbiIgKwotCQkJIiAgfVxuIiAr
Ci0JCQkifVxuIgotCQl9LCAgIiIpOwkKLX0KLS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD0zNjc1NjYgLSBJbiB0cnktd2l0aC1yZXNvdXJjZXMgc3RhdGVt
ZW50IGNsb3NlKCkgbWV0aG9kIG9mIHJlc291cmNlIGlzIG5vdCBjYWxsZWQKLXB1YmxpYyB2b2lk
IHRlc3QwNTkoKSB7Ci0JdGhpcy5ydW5Db25mb3JtVGVzdCgKLQkJbmV3IFN0cmluZ1tdIHsKLQkJ
CSJYLmphdmEiLAotCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCi0JCQkiXG4i
ICsKLQkJCSJwdWJsaWMgY2xhc3MgWCBpbXBsZW1lbnRzIGphdmEubGFuZy5BdXRvQ2xvc2VhYmxl
IHtcbiIgKwotCQkJIiAgc3RhdGljIGJvb2xlYW4gaXNPcGVuID0gdHJ1ZTtcbiIgKwotCQkJIiAg
cHVibGljIHN0YXRpYyB2b2lkIG1haW4oZmluYWwgU3RyaW5nW10gYXJncykgdGhyb3dzIElPRXhj
ZXB0aW9uIHtcbiIgKwotCQkJIiAgICBmb28oKTtcbiIgKwotCQkJIiAgICBTeXN0ZW0ub3V0LnBy
aW50bG4oaXNPcGVuKTtcbiIgKwotCQkJIiAgfVxuIiArCi0JCQkiICBzdGF0aWMgYm9vbGVhbiBm
b28oKSB7XG4iICsKLQkJCSIgICAgdHJ5IChmaW5hbCBYIHggPSBuZXcgWCgpKSB7XG4iICsKLQkJ
CSIgICAgICByZXR1cm4geC5udW0oKSA+PSAxO1xuIiArCi0JCQkiICAgIH1cbiIgKwotCQkJIiAg
fVxuIiArCi0JCQkiICBpbnQgbnVtKCkgeyByZXR1cm4gMjsgfVxuIiArCi0JCQkiICBwdWJsaWMg
dm9pZCBjbG9zZSgpIHtcbiIgKwotCQkJIiAgICBpc09wZW4gPSBmYWxzZTtcbiIgKwotCQkJIiAg
fVxuIiArCi0JCQkifVxuIgotCQl9LCAgCi0JCSJmYWxzZSIpOwkKLX0KLQotLy8gaHR0cHM6Ly9i
dWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM2NzU2NiAtIEluIHRyeS13aXRo
LXJlc291cmNlcyBzdGF0ZW1lbnQgY2xvc2UoKSBtZXRob2Qgb2YgcmVzb3VyY2UgaXMgbm90IGNh
bGxlZAotcHVibGljIHZvaWQgdGVzdDA2MCgpIHsKLQl0aGlzLnJ1bkNvbmZvcm1UZXN0KAotCQlu
ZXcgU3RyaW5nW10gewotCQkJIlguamF2YSIsCi0JCQkicHVibGljIGNsYXNzIFggaW1wbGVtZW50
cyBBdXRvQ2xvc2VhYmxlIHtcbiIgKwotCQkJIglzdGF0aWMgaW50IG51bSA9IDEwIDtcbiIgKwot
CQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykgdGhyb3dzIEV4
Y2VwdGlvbiB7IFxuIiArCi0JCQkiICAgIAlTeXN0ZW0ub3V0LnByaW50bG4oZm9vKDEpKTtcbiIg
KwotCQkJIiAgICAJU3lzdGVtLm91dC5wcmludGxuKGZvbygyKSk7XG4iICsKLQkJCSIgICAgCVN5
c3RlbS5vdXQucHJpbnRsbihmb28oMykpO1xuIiArCi0JCQkiICAgIH1cbiIgKwotCQkJIglwcml2
YXRlIHN0YXRpYyBib29sZWFuIGZvbyhpbnQgd2hlcmUpIHRocm93cyBFeGNlcHRpb24ge1xuIiAr
Ci0JCQkiCQlmaW5hbCBib29sZWFuIGdldE91dCA9IHRydWU7XG4iICsKLQkJCSIgICAgCVN5c3Rl
bS5vdXQucHJpbnRsbihcIk1haW5cIik7XG4iICsKLQkJCSIgICAgCXRyeSAoWCB4MSA9IG5ldyBY
KCk7IFggeDIgPSBuZXcgWCgpKSB7XG4iICsKLQkJCSIgICAgCQlpZiAod2hlcmUgPT0gMSkge1xu
IiArCi0JCQkiICAgIAkJCXJldHVybiB3aGVyZSA9PSAxO1xuIiArCi0JCQkiICAgIAkJfVxuIiAr
Ci0JCQkiICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwiT3V0ZXIgVHJ5XCIpO1xuIiAr
Ci0JCQkiICAgICAgICAgICAgd2hpbGUgKHRydWUpIHtcbiIgKwotCQkJIiAgICAgICAgICAgIAl0
cnkgKFkgeTEgPSBuZXcgWSgpOyBZIHkyID0gbmV3IFkoKSkgeyBcbiIgKwotCQkJIiAgICAgICAg
ICAgIAkJaWYgKHdoZXJlID09IDIpIHtcbiIgKwotCQkJIiAgICAgICAgICAgIAkJCXJldHVybiB3
aGVyZSA9PSAyO1xuIiArCi0JCQkiICAgICAgICAgICAgCQl9CQlcbiIgKwotCQkJIiAgICAgICAg
ICAgIAkJU3lzdGVtLm91dC5wcmludGxuKFwiTWlkZGxlIFRyeVwiKTtcbiIgKwotCQkJIiAgICAg
ICAgICAgIAkJdHJ5IChaIHoxID0gbmV3IFooKTsgWiB6MiA9IG5ldyBaKCkpIHtcbiIgKwotCQkJ
IiAgICAgICAgICAgIAkJCVN5c3RlbS5vdXQucHJpbnRsbihcIklubmVyIFRyeVwiKTtcbiIgKwot
CQkJIiAgICAgICAgICAgIAkJCWlmIChnZXRPdXQpIFxuIiArCi0JCQkiICAgICAgICAgICAgCQkJ
CXJldHVybiBudW0gPj0gMTA7XG4iICsKLQkJCSIgICAgICAgICAgICAJCQllbHNlXG4iICsKLQkJ
CSIgICAgICAgICAgICAJCQkJYnJlYWs7IFxuIiArCi0JCQkiICAgICAgICAgICAgCQl9XG4iICsK
LQkJCSIgICAgICAgICAgICAJfVxuIiArCi0JCQkiICAgICAgICAgICAgfVxuIiArCi0JCQkiICAg
ICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwiT3V0IG9mIHdoaWxlXCIpO1xuIiArCi0JCQki
ICAgICAgICB9XG4iICsKLQkJCSIJCXJldHVybiBmYWxzZTtcbiIgKwotCQkJIgl9XG4iICsKLQkJ
CSIgICAgcHVibGljIFgoKSB7XG4iICsKLQkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihc
Ilg6OlhcIik7XG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQkiICAgIEBPdmVycmlkZVxuIiArCi0J
CQkiCXB1YmxpYyB2b2lkIGNsb3NlKCkgdGhyb3dzIEV4Y2VwdGlvbiB7XG4iICsKLQkJCSIgICAg
ICAgIFN5c3RlbS5vdXQucHJpbnRsbihcIlg6On5YXCIpO1xuIiArCi0JCQkiICAgIH1cbiIgKwot
CQkJIn1cbiIgKwotCQkJImNsYXNzIFkgaW1wbGVtZW50cyBBdXRvQ2xvc2VhYmxlIHtcbiIgKwot
CQkJIiAgICBwdWJsaWMgWSgpIHtcbiIgKwotCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxu
KFwiWTo6WVwiKTtcbiIgKwotCQkJIiAgICB9XG4iICsKLQkJCSIgICAgQE92ZXJyaWRlXG4iICsK
LQkJCSIJcHVibGljIHZvaWQgY2xvc2UoKSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIgKwotCQkJIiAg
ICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwiWTo6fllcIik7XG4iICsKLQkJCSIgICAgfVxuIiAr
Ci0JCQkifVxuIiArCi0JCQkiY2xhc3MgWiBpbXBsZW1lbnRzIEF1dG9DbG9zZWFibGUge1xuIiAr
Ci0JCQkiICAgIHB1YmxpYyBaKCkge1xuIiArCi0JCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50
bG4oXCJaOjpaXCIpO1xuIiArCi0JCQkiICAgIH1cbiIgKwotCQkJIiAgICBAT3ZlcnJpZGVcbiIg
KwotCQkJIglwdWJsaWMgdm9pZCBjbG9zZSgpIHRocm93cyBFeGNlcHRpb24ge1xuIiArCi0JCQki
ICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oXCJaOjp+WlwiKTtcbiIgKwotCQkJIiAgICB9XG4i
ICsKLQkJCSJ9XG4iCi0JCX0sIAotCQkiTWFpblxuIiArIAotCQkiWDo6WFxuIiArIAotCQkiWDo6
WFxuIiArIAotCQkiWDo6flhcbiIgKyAKLQkJIlg6On5YXG4iICsgCi0JCSJ0cnVlXG4iICsgCi0J
CSJNYWluXG4iICsgCi0JCSJYOjpYXG4iICsgCi0JCSJYOjpYXG4iICsgCi0JCSJPdXRlciBUcnlc
biIgKyAKLQkJIlk6OllcbiIgKyAKLQkJIlk6OllcbiIgKyAKLQkJIlk6On5ZXG4iICsgCi0JCSJZ
Ojp+WVxuIiArIAotCQkiWDo6flhcbiIgKyAKLQkJIlg6On5YXG4iICsgCi0JCSJ0cnVlXG4iICsg
Ci0JCSJNYWluXG4iICsgCi0JCSJYOjpYXG4iICsgCi0JCSJYOjpYXG4iICsgCi0JCSJPdXRlciBU
cnlcbiIgKyAKLQkJIlk6OllcbiIgKyAKLQkJIlk6OllcbiIgKyAKLQkJIk1pZGRsZSBUcnlcbiIg
KyAKLQkJIlo6OlpcbiIgKyAKLQkJIlo6OlpcbiIgKyAKLQkJIklubmVyIFRyeVxuIiArIAotCQki
Wjo6flpcbiIgKyAKLQkJIlo6On5aXG4iICsgCi0JCSJZOjp+WVxuIiArIAotCQkiWTo6fllcbiIg
KyAKLQkJIlg6On5YXG4iICsgCi0JCSJYOjp+WFxuIiArIAotCQkidHJ1ZSIpOwotfQotLy8gQnVn
IDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdh
cm5pbmdzCi0vLyBCdWcgMzYwOTA4IC0gQXZvaWQgcmVzb3VyY2UgbGVhayB3YXJuaW5nIHdoZW4g
dGhlIHVuZGVybHlpbmcvY2hhaW5lZCByZXNvdXJjZSBpcyBjbG9zZWQgZXhwbGljaXRseQotLy8g
YSByZXNvdXJjZSB3cmFwcGVyIGlzIG5vdCBjbG9zZWQgYnV0IHRoZSB1bmRlcmx5aW5nIHJlc291
cmNlIGlzCi1wdWJsaWMgdm9pZCB0ZXN0MDYxYSgpIHsKLQlNYXAgb3B0aW9ucyA9IGdldENvbXBp
bGVyT3B0aW9ucygpOwotCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0
VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0Jb3B0aW9ucy5wdXQo
Q29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxl
LCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCXRoaXMucnVuQ29uZm9ybVRlc3QoCi0JCW5ldyBT
dHJpbmdbXSB7Ci0JCQkiWC5qYXZhIiwKLQkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCi0J
CQkiaW1wb3J0IGphdmEuaW8uQnVmZmVyZWRJbnB1dFN0cmVhbTtcbiIgKwotCQkJImltcG9ydCBq
YXZhLmlvLkZpbGVJbnB1dFN0cmVhbTtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0
aW9uO1xuIiArCi0JCQkicHVibGljIGNsYXNzIFgge1xuIiArCi0JCQkiICAgIHZvaWQgZm9vKCkg
dGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwotCQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZp
bGUoXCJzb21lZmlsZVwiKTtcbiIgKwotCQkJIiAgICAgICAgRmlsZUlucHV0U3RyZWFtIGZpbGVT
dHJlYW0gID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKTtcbiIgKwotCQkJIiAgICAgICAgQnVm
ZmVyZWRJbnB1dFN0cmVhbSBiaXMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShmaWxlU3RyZWFt
KTtcbiIgKwotCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFwID0gbmV3
IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oYmlzKTtcbiIgKwotCQkJIiAgICAgICAgU3lzdGVtLm91dC5w
cmludGxuKGJpcy5hdmFpbGFibGUoKSk7XG4iICsKLQkJCSIgICAgICAgIGZpbGVTdHJlYW0uY2xv
c2UoKTtcbiIgKwotCQkJIiAgICB9XG4iICsKLQkJCSIgICAgdm9pZCBpbmxpbmUoKSB0aHJvd3Mg
SU9FeGNlcHRpb24ge1xuIiArCi0JCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNv
bWVmaWxlXCIpO1xuIiArCi0JCQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0gZmlsZVN0cmVhbTtc
biIgKwotCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMgPSBuZXcgQnVmZmVyZWRJ
bnB1dFN0cmVhbShmaWxlU3RyZWFtID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKSk7XG4iICsK
LQkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihiaXMuYXZhaWxhYmxlKCkpO1xuIiArCi0J
CQkiICAgICAgICBmaWxlU3RyZWFtLmNsb3NlKCk7XG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQki
ICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2Vw
dGlvbiB7XG4iICsKLQkJCSIgICAgICAgIHRyeSB7XG4iICsKLQkJCSIgICAgICAgICAgICBuZXcg
WCgpLmZvbygpO1xuIiArCi0JCQkiICAgICAgICB9IGNhdGNoIChJT0V4Y2VwdGlvbiBleCkgeyIg
KwotCQkJIiAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcIkdvdCBJTyBFeGNlcHRpb25c
Iik7XG4iICsKLQkJCSIgICAgICAgIH1cbiIgKwotCQkJIiAgICB9XG4iICsKLQkJCSJ9XG4iCi0J
CX0sCi0JCSJHb3QgSU8gRXhjZXB0aW9uIiwKLQkJbnVsbCwKLQkJdHJ1ZSwKLQkJbnVsbCwKLQkJ
b3B0aW9ucywKLQkJbnVsbCk7Ci19Ci0vLyBCdWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5
IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsgd2FybmluZ3MKLS8vIGEgY2xvc2VhYmxlIHdpdGhv
dXQgT1MgcmVzb3VyY2UgaXMgbm90IGNsb3NlZAotcHVibGljIHZvaWQgdGVzdDA2MWIoKSB7Ci0J
TWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKLQlvcHRpb25zLnB1dChDb21waWxl
ck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMu
RVJST1IpOwotCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50
aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQl0aGlzLnJ1
bkNvbmZvcm1UZXN0KAotCQluZXcgU3RyaW5nW10gewotCQkJIlguamF2YSIsCi0JCQkiaW1wb3J0
IGphdmEuaW8uU3RyaW5nUmVhZGVyO1xuIiArCi0JCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRp
b247XG4iICsKLQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKLQkJCSIgICAgdm9pZCBmb28oKSB0
aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCi0JCQkiICAgICAgICBTdHJpbmdSZWFkZXIgc3RyaW5n
ICA9IG5ldyBTdHJpbmdSZWFkZXIoXCJjb250ZW50XCIpO1xuIiArCi0JCQkiICAgICAgICBTeXN0
ZW0ub3V0LnByaW50bG4oc3RyaW5nLnJlYWQoKSk7XG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQki
ICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2Vw
dGlvbiB7XG4iICsKLQkJCSIgICAgICAgIG5ldyBYKCkuZm9vKCk7XG4iICsKLQkJCSIgICAgfVxu
IiArCi0JCQkifVxuIgotCQl9LAotCQkiOTkiLCAvLyBjaGFyYWN0ZXIgJ2MnCi0JCW51bGwsCi0J
CXRydWUsCi0JCW51bGwsCi0JCW9wdGlvbnMsCi0JCW51bGwpOwotfQotLy8gQnVnIDM1ODkwMyAt
IEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCi0v
LyBhIHJlc291cmNlIHdyYXBwZXIgaXMgbm90IGNsb3NlZCBidXQgdGhlIHVuZGVybHlpbmcgY2xv
c2VhYmxlIGlzIHJlc291cmNlLWZyZWUKLXB1YmxpYyB2b2lkIHRlc3QwNjFjKCkgewotCU1hcCBv
cHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7Ci0Jb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRp
b25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9S
KTsKLQlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5
VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0JdGhpcy5ydW5Db25m
b3JtVGVzdCgKLQkJbmV3IFN0cmluZ1tdIHsKLQkJCSJYLmphdmEiLAotCQkJImltcG9ydCBqYXZh
LmlvLkJ1ZmZlcmVkUmVhZGVyO1xuIiArCi0JCQkiaW1wb3J0IGphdmEuaW8uU3RyaW5nUmVhZGVy
O1xuIiArCi0JCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKLQkJCSJwdWJsaWMg
Y2xhc3MgWCB7XG4iICsKLQkJCSIgICAgdm9pZCBmb28oKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xu
IiArCi0JCQkiICAgICAgICBTdHJpbmdSZWFkZXIgaW5wdXQgPSBuZXcgU3RyaW5nUmVhZGVyKFwi
Y29udGVudFwiKTtcbiIgKwotCQkJIiAgICAgICAgQnVmZmVyZWRSZWFkZXIgYnIgPSBuZXcgQnVm
ZmVyZWRSZWFkZXIoaW5wdXQpO1xuIiArCi0JCQkiICAgICAgICBCdWZmZXJlZFJlYWRlciBkb3Vi
bGVXcmFwID0gbmV3IEJ1ZmZlcmVkUmVhZGVyKGJyKTtcbiIgKwotCQkJIiAgICAgICAgU3lzdGVt
Lm91dC5wcmludGxuKGJyLnJlYWQoKSk7XG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQkiICAgIHZv
aWQgaW5saW5lKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwotCQkJIiAgICAgICAgQnVmZmVy
ZWRSZWFkZXIgYnIgPSBuZXcgQnVmZmVyZWRSZWFkZXIobmV3IFN0cmluZ1JlYWRlcihcImNvbnRl
bnRcIikpO1xuIiArCi0JCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oYnIucmVhZCgpKTtc
biIgKwotCQkJIiAgICB9XG4iICsKLQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3Ry
aW5nW10gYXJncykgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwotCQkJIiAgICAgICAgbmV3IFgo
KS5mb28oKTtcbiIgKwotCQkJIiAgICB9XG4iICsKLQkJCSJ9XG4iCi0JCX0sCi0JCSI5OSIsCi0J
CW51bGwsCi0JCXRydWUsCi0JCW51bGwsCi0JCW9wdGlvbnMsCi0JCW51bGwpOwotfQotLy8gQnVn
IDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdh
cm5pbmdzCi0vLyBhIHJlc291cmNlIHdyYXBwZXIgaXMgbm90IGNsb3NlZCBuZWl0aGVyIGlzIHRo
ZSB1bmRlcmx5aW5nIHJlc291cmNlCi1wdWJsaWMgdm9pZCB0ZXN0MDYxZCgpIHsKLQlNYXAgb3B0
aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwotCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9u
cy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7
Ci0Jb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVu
Y2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7Ci0JdGhpcy5ydW5OZWdh
dGl2ZVRlc3QoCi0JCW5ldyBTdHJpbmdbXSB7Ci0JCQkiWC5qYXZhIiwKLQkJCSJpbXBvcnQgamF2
YS5pby5GaWxlO1xuIiArCi0JCQkiaW1wb3J0IGphdmEuaW8uQnVmZmVyZWRJbnB1dFN0cmVhbTtc
biIgKwotCQkJImltcG9ydCBqYXZhLmlvLkZpbGVJbnB1dFN0cmVhbTtcbiIgKwotCQkJImltcG9y
dCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCi0JCQkicHVibGljIGNsYXNzIFgge1xuIiArCi0J
CQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwotCQkJIiAgICAgICAg
RmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKwotCQkJIiAgICAgICAgRmls
ZUlucHV0U3RyZWFtIGZpbGVTdHJlYW0gID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKTtcbiIg
KwotCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMgPSBuZXcgQnVmZmVyZWRJbnB1
dFN0cmVhbShmaWxlU3RyZWFtKTtcbiIgKwotCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVh
bSBkb3VibGVXcmFwID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oYmlzKTtcbiIgKwotCQkJIiAg
ICAgICAgU3lzdGVtLm91dC5wcmludGxuKGJpcy5hdmFpbGFibGUoKSk7XG4iICsKLQkJCSIgICAg
fVxuIiArCi0JCQkiICAgIHZvaWQgaW5saW5lKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwot
CQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKwotCQkJ
IiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMyID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJl
YW0obmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKSk7XG4iICsKLQkJCSIgICAgICAgIFN5c3RlbS5v
dXQucHJpbnRsbihiaXMyLmF2YWlsYWJsZSgpKTtcbiIgKwotCQkJIiAgICB9XG4iICsKLQkJCSIg
ICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykgdGhyb3dzIElPRXhjZXB0
aW9uIHtcbiIgKwotCQkJIiAgICAgICAgdHJ5IHtcbiIgKwotCQkJIiAgICAgICAgICAgIG5ldyBY
KCkuZm9vKCk7XG4iICsKLQkJCSIgICAgICAgIH0gY2F0Y2ggKElPRXhjZXB0aW9uIGV4KSB7IiAr
Ci0JCQkiICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwiR290IElPIEV4Y2VwdGlvblwi
KTtcbiIgKwotCQkJIiAgICAgICAgfVxuIiArCi0JCQkiICAgIH1cbiIgKwotCQkJIn1cbiIKLQkJ
fSwKLQkJIi0tLS0tLS0tLS1cbiIgKyAKLQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAx
MClcbiIgKyAKLQkJIglCdWZmZXJlZElucHV0U3RyZWFtIGRvdWJsZVdyYXAgPSBuZXcgQnVmZmVy
ZWRJbnB1dFN0cmVhbShiaXMpO1xuIiArIAotCQkiCSAgICAgICAgICAgICAgICAgICAgXl5eXl5e
Xl5eXlxuIiArIAotCQkiUmVzb3VyY2UgbGVhazogXCdkb3VibGVXcmFwXCcgaXMgbmV2ZXIgY2xv
c2VkXG4iICsgCi0JCSItLS0tLS0tLS0tXG4iICsgCi0JCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0
IGxpbmUgMTUpXG4iICsgCi0JCSIJQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMyID0gbmV3IEJ1ZmZl
cmVkSW5wdXRTdHJlYW0obmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKSk7XG4iICsgCi0JCSIJICAg
ICAgICAgICAgICAgICAgICBeXl5eXG4iICsgCi0JCSJSZXNvdXJjZSBsZWFrOiBcJ2JpczJcJyBp
cyBuZXZlciBjbG9zZWRcbiIgKyAKLQkJIi0tLS0tLS0tLS1cbiIsCi0JCW51bGwsCi0JCXRydWUs
Ci0JCW9wdGlvbnMpOwotfQotLy8gQnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmlt
cG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCi0vLyBCdWcgMzYxMDczIC0gQXZvaWQgcmVz
b3VyY2UgbGVhayB3YXJuaW5nIHdoZW4gdGhlIHRvcCBsZXZlbCByZXNvdXJjZSBpcyBjbG9zZWQg
ZXhwbGljaXRseQotLy8gYSByZXNvdXJjZSB3cmFwcGVyIGlzIGNsb3NlZCBjbG9zaW5nIGFsc28g
dGhlIHVuZGVybHlpbmcgcmVzb3VyY2UKLXB1YmxpYyB2b2lkIHRlc3QwNjFlKCkgewotCU1hcCBv
cHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7Ci0Jb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRp
b25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9S
KTsKLQlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5
VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0JdGhpcy5ydW5Db25m
b3JtVGVzdCgKLQkJbmV3IFN0cmluZ1tdIHsKLQkJCSJYLmphdmEiLAotCQkJImltcG9ydCBqYXZh
LmlvLkZpbGU7XG4iICsKLQkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJlZElucHV0U3RyZWFtO1xu
IiArCi0JCQkiaW1wb3J0IGphdmEuaW8uRmlsZUlucHV0U3RyZWFtO1xuIiArCi0JCQkiaW1wb3J0
IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKLQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKLQkJ
CSIgICAgRmlsZUlucHV0U3RyZWFtIGZpczsiICsKLQkJCSIgICAgdm9pZCBmb28oKSB0aHJvd3Mg
SU9FeGNlcHRpb24ge1xuIiArCi0JCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNv
bWVmaWxlXCIpO1xuIiArCi0JCQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0gZmlsZVN0cmVhbSAg
PSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpO1xuIiArCi0JCQkiICAgICAgICBCdWZmZXJlZElu
cHV0U3RyZWFtIGJpcyA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGZpbGVTdHJlYW0pO1xuIiAr
Ci0JCQkiICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGRvdWJsZVdyYXAgPSBuZXcgQnVmZmVy
ZWRJbnB1dFN0cmVhbShiaXMpO1xuIiArCi0JCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4o
YmlzLmF2YWlsYWJsZSgpKTtcbiIgKwotCQkJIiAgICAgICAgYmlzLmNsb3NlKCk7XG4iICsKLQkJ
CSIgICAgfVxuIiArCi0JCQkiICAgIHZvaWQgaW5saW5lKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtc
biIgKwotCQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIg
KwotCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMyID0gbmV3IEJ1ZmZlcmVkSW5w
dXRTdHJlYW0oZmlzID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKSk7XG4iICsgLy8gZmllbGQg
YXNzaWdubWVudAotCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGJpczIuYXZhaWxhYmxl
KCkpO1xuIiArCi0JCQkiICAgICAgICBiaXMyLmNsb3NlKCk7XG4iICsKLQkJCSIgICAgICAgIEZp
bGVJbnB1dFN0cmVhbSBmaWxlU3RyZWFtICA9IG51bGw7XG4iICsKLQkJCSIgICAgICAgIEJ1ZmZl
cmVkSW5wdXRTdHJlYW0gYmlzMyA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGZpbGVTdHJlYW0g
PSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpKTtcbiIgKwotCQkJIiAgICAgICAgU3lzdGVtLm91
dC5wcmludGxuKGJpczMuYXZhaWxhYmxlKCkpO1xuIiArCi0JCQkiICAgICAgICBiaXMzLmNsb3Nl
KCk7XG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWlu
KFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKLQkJCSIgICAgICAgIHRy
eSB7XG4iICsKLQkJCSIgICAgICAgICAgICBuZXcgWCgpLmZvbygpO1xuIiArCi0JCQkiICAgICAg
ICB9IGNhdGNoIChJT0V4Y2VwdGlvbiBleCkgeyIgKwotCQkJIiAgICAgICAgICAgIFN5c3RlbS5v
dXQucHJpbnRsbihcIkdvdCBJTyBFeGNlcHRpb25cIik7XG4iICsKLQkJCSIgICAgICAgIH1cbiIg
KwotCQkJIiAgICB9XG4iICsKLQkJCSJ9XG4iCi0JCX0sCi0JCSJHb3QgSU8gRXhjZXB0aW9uIiwK
LQkJbnVsbCwKLQkJdHJ1ZSwKLQkJbnVsbCwKLQkJb3B0aW9ucywKLQkJbnVsbCk7Ci19Ci0vLyBC
dWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsg
d2FybmluZ3MKLS8vIEJ1ZyAzNjEwNzMgLSBBdm9pZCByZXNvdXJjZSBsZWFrIHdhcm5pbmcgd2hl
biB0aGUgdG9wIGxldmVsIHJlc291cmNlIGlzIGNsb3NlZCBleHBsaWNpdGx5Ci0vLyBhIHJlc291
cmNlIHdyYXBwZXIgaXMgY2xvc2VkIGNsb3NpbmcgYWxzbyB0aGUgdW5kZXJseWluZyByZXNvdXJj
ZSAtIG9yaWdpbmFsIHRlc3QgY2FzZQotcHVibGljIHZvaWQgdGVzdDA2MWYoKSB0aHJvd3MgSU9F
eGNlcHRpb24gewotCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7Ci0Jb3B0aW9u
cy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29t
cGlsZXJPcHRpb25zLkVSUk9SKTsKLQlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9O
X1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJP
Uik7Ci0JVVJMIHVybCA9IEZpbGVMb2NhdG9yLnRvRmlsZVVSTChGaWxlTG9jYXRvci5maW5kKFBs
YXRmb3JtLmdldEJ1bmRsZSgib3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIiKSwg
bmV3IFBhdGgoIk1FVEEtSU5GL01BTklGRVNULk1GIiksIG51bGwpKTsKLQl0aGlzLnJ1bkNvbmZv
cm1UZXN0KAotCQluZXcgU3RyaW5nW10gewotCQkJIlguamF2YSIsCi0JCQkiaW1wb3J0IGphdmEu
aW8uSW5wdXRTdHJlYW07XG4iICsKLQkJCSJpbXBvcnQgamF2YS5pby5JbnB1dFN0cmVhbVJlYWRl
cjtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkUmVhZGVyO1xuIiArCi0JCQkiaW1w
b3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKLQkJCSJpbXBvcnQgamF2YS5uZXQuVVJMO1xu
IiArCi0JCQkicHVibGljIGNsYXNzIFgge1xuIiArCi0JCQkiICAgIGJvb2xlYW4gbG9hZFVSTChm
aW5hbCBVUkwgdXJsKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArIAotCQkJIiAgICAgICAgSW5w
dXRTdHJlYW0gc3RyZWFtID0gbnVsbDtcbiIgKyAKLQkJCSIgICAgICAgIEJ1ZmZlcmVkUmVhZGVy
IHJlYWRlciA9IG51bGw7XG4iICsgCi0JCQkiICAgICAgICB0cnkge1xuIiArIAotCQkJIiAgICAg
ICAgICAgIHN0cmVhbSA9IHVybC5vcGVuU3RyZWFtKCk7XG4iICsgCi0JCQkiICAgICAgICAgICAg
cmVhZGVyID0gbmV3IEJ1ZmZlcmVkUmVhZGVyKG5ldyBJbnB1dFN0cmVhbVJlYWRlcihzdHJlYW0p
KTtcbiIgKyAKLQkJCSIgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4ocmVhZGVyLnJlYWRM
aW5lKCkpO1xuIiArCi0JCQkiICAgICAgICB9IGZpbmFsbHkge1xuIiArIAotCQkJIiAgICAgICAg
ICAgIHRyeSB7XG4iICsgCi0JCQkiICAgICAgICAgICAgICAgIGlmIChyZWFkZXIgIT0gbnVsbClc
biIgKyAKLQkJCSIgICAgICAgICAgICAgICAgICAgIHJlYWRlci5jbG9zZSgpO1xuIiArIAotCQkJ
IiAgICAgICAgICAgIH0gY2F0Y2ggKElPRXhjZXB0aW9uIHgpIHtcbiIgKyAKLQkJCSIgICAgICAg
ICAgICB9XG4iICsgCi0JCQkiICAgICAgICB9XG4iICsgCi0JCQkiICAgICAgICByZXR1cm4gZmFs
c2U7IC8vICdzdHJlYW0nIG1heSBub3QgYmUgY2xvc2VkIGF0IHRoaXMgbG9jYXRpb25cbiIgKyAK
LQkJCSIgICAgfVxuIiArIAotCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdb
XSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCi0JCQkiICAgICAgICB0cnkge1xuIiAr
Ci0JCQkiICAgICAgICAgICAgbmV3IFgoKS5sb2FkVVJMKG5ldyBVUkwoXCIiK3VybC50b1N0cmlu
ZygpKyJcIikpO1xuIiArCi0JCQkiICAgICAgICB9IGNhdGNoIChJT0V4Y2VwdGlvbiBleCkge1xu
IiArCi0JCQkiICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwiR290IElPIEV4Y2VwdGlv
blwiK2V4KTtcbiIgKwotCQkJIiAgICAgICAgfVxuIiArCi0JCQkiICAgIH1cbiIgKwotCQkJIn1c
biIKLQkJfSwKLQkJIk1hbmlmZXN0LVZlcnNpb246IDEuMCIsCi0JCW51bGwsCi0JCXRydWUsCi0J
CW51bGwsCi0JCW9wdGlvbnMsCi0JCW51bGwpOwotfQotLy8gQnVnIDM1ODkwMyAtIEZpbHRlciBw
cmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCi0vLyBCdWcgMzYw
OTA4IC0gQXZvaWQgcmVzb3VyY2UgbGVhayB3YXJuaW5nIHdoZW4gdGhlIHVuZGVybHlpbmcvY2hh
aW5lZCByZXNvdXJjZSBpcyBjbG9zZWQgZXhwbGljaXRseQotLy8gRGlmZmVyZW50IHBvaW50cyBp
biBhIHJlc291cmNlIGNoYWluIGFyZSBjbG9zZWQKLXB1YmxpYyB2b2lkIHRlc3QwNjFnKCkgewot
CU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7Ci0Jb3B0aW9ucy5wdXQoQ29tcGls
ZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25z
LkVSUk9SKTsKLQlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVu
dGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0JdGhpcy5y
dW5OZWdhdGl2ZVRlc3QoCi0JCW5ldyBTdHJpbmdbXSB7Ci0JCQkiWC5qYXZhIiwKLQkJCSJpbXBv
cnQgamF2YS5pby5GaWxlO1xuIiArCi0JCQkiaW1wb3J0IGphdmEuaW8uQnVmZmVyZWRJbnB1dFN0
cmVhbTtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlvLkZpbGVJbnB1dFN0cmVhbTtcbiIgKwotCQkJ
ImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCi0JCQkicHVibGljIGNsYXNzIFgge1xu
IiArCi0JCQkiICAgIHZvaWQgY2xvc2VNaWRkbGUoKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiAr
Ci0JCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xuIiArCi0J
CQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0gZmlsZVN0cmVhbSAgPSBuZXcgRmlsZUlucHV0U3Ry
ZWFtKGZpbGUpO1xuIiArCi0JCQkiICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGJpcyA9IG5l
dyBCdWZmZXJlZElucHV0U3RyZWFtKGZpbGVTdHJlYW0pO1xuIiArCi0JCQkiICAgICAgICBCdWZm
ZXJlZElucHV0U3RyZWFtIGRvdWJsZVdyYXAgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShiaXMp
O1xuIiArCi0JCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oYmlzLmF2YWlsYWJsZSgpKTtc
biIgKwotCQkJIiAgICAgICAgYmlzLmNsb3NlKCk7XG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQki
ICAgIHZvaWQgY2xvc2VPdXRlcigpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKLQkJCSIgICAg
ICAgIEZpbGUgZmlsZTIgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xuIiArCi0JCQkiICAgICAg
ICBGaWxlSW5wdXRTdHJlYW0gZmlsZVN0cmVhbTIgID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxl
Mik7XG4iICsKLQkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzMiA9IG5ldyBCdWZm
ZXJlZElucHV0U3RyZWFtKGZpbGVTdHJlYW0yKTtcbiIgKwotCQkJIiAgICAgICAgQnVmZmVyZWRJ
bnB1dFN0cmVhbSBkb3VibGVXcmFwMiA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGJpczIpO1xu
IiArCi0JCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oYmlzMi5hdmFpbGFibGUoKSk7XG4i
ICsKLQkJCSIgICAgICAgIGRvdWJsZVdyYXAyLmNsb3NlKCk7XG4iICsKLQkJCSIgICAgfVxuIiAr
Ci0JCQkiICAgIHZvaWQgbmV2ZXJDbG9zZWQoKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCi0J
CQkiICAgICAgICBGaWxlIGZpbGUzID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKwotCQkJ
IiAgICAgICAgRmlsZUlucHV0U3RyZWFtIGZpbGVTdHJlYW0zICA9IG5ldyBGaWxlSW5wdXRTdHJl
YW0oZmlsZTMpO1xuIiArCi0JCQkiICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGJpczMgPSBu
ZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShmaWxlU3RyZWFtMyk7XG4iICsKLQkJCSIgICAgICAgIEJ1
ZmZlcmVkSW5wdXRTdHJlYW0gZG91YmxlV3JhcDMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShi
aXMzKTtcbiIgKwotCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGRvdWJsZVdyYXAzLmF2
YWlsYWJsZSgpKTtcbiIgKwotCQkJIiAgICB9XG4iICsKLQkJCSJ9XG4iCi0JCX0sCi0JCSItLS0t
LS0tLS0tXG4iICsgCi0JCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMjYpXG4iICsgCi0J
CSIJQnVmZmVyZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFwMyA9IG5ldyBCdWZmZXJlZElucHV0U3Ry
ZWFtKGJpczMpO1xuIiArIAotCQkiCSAgICAgICAgICAgICAgICAgICAgXl5eXl5eXl5eXl5cbiIg
KyAKLQkJIlJlc291cmNlIGxlYWs6IFwnZG91YmxlV3JhcDNcJyBpcyBuZXZlciBjbG9zZWRcbiIg
KyAKLQkJIi0tLS0tLS0tLS1cbiIsCi0JCW51bGwsCi0JCXRydWUsCi0JCW9wdGlvbnMpOwotfQot
Ly8gQnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBs
ZWFrIHdhcm5pbmdzCi0vLyBCdWcgMzYwOTA4IC0gQXZvaWQgcmVzb3VyY2UgbGVhayB3YXJuaW5n
IHdoZW4gdGhlIHVuZGVybHlpbmcvY2hhaW5lZCByZXNvdXJjZSBpcyBjbG9zZWQgZXhwbGljaXRs
eQotLy8gRGlmZmVyZW50IHBvaW50cyBpbiBhIHJlc291cmNlIGNoYWluIGFyZSBwb3RlbnRpYWxs
eSBjbG9zZWQKLXB1YmxpYyB2b2lkIHRlc3QwNjFoKCkgewotCU1hcCBvcHRpb25zID0gZ2V0Q29t
cGlsZXJPcHRpb25zKCk7Ci0Jb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBv
cnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQlvcHRpb25zLnB1
dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFi
bGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0JdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCi0JCW5l
dyBTdHJpbmdbXSB7Ci0JCQkiWC5qYXZhIiwKLQkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiAr
Ci0JCQkiaW1wb3J0IGphdmEuaW8uQnVmZmVyZWRJbnB1dFN0cmVhbTtcbiIgKwotCQkJImltcG9y
dCBqYXZhLmlvLkZpbGVJbnB1dFN0cmVhbTtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlvLklPRXhj
ZXB0aW9uO1xuIiArCi0JCQkicHVibGljIGNsYXNzIFgge1xuIiArCi0JCQkiICAgIHZvaWQgY2xv
c2VNaWRkbGUoYm9vbGVhbiBiKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCi0JCQkiICAgICAg
ICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xuIiArCi0JCQkiICAgICAgICBG
aWxlSW5wdXRTdHJlYW0gZmlsZVN0cmVhbSAgPSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpO1xu
IiArCi0JCQkiICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGJpcyA9IG5ldyBCdWZmZXJlZElu
cHV0U3RyZWFtKGZpbGVTdHJlYW0pO1xuIiArCi0JCQkiICAgICAgICBCdWZmZXJlZElucHV0U3Ry
ZWFtIGRvdWJsZVdyYXAgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShiaXMpO1xuIiArCi0JCQki
ICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oYmlzLmF2YWlsYWJsZSgpKTtcbiIgKwotCQkJIiAg
ICAgICAgaWYgKGIpXG4iICsKLQkJCSIgICAgICAgICAgICBiaXMuY2xvc2UoKTtcbiIgKwotCQkJ
IiAgICB9XG4iICsKLQkJCSIgICAgdm9pZCBjbG9zZU91dGVyKGJvb2xlYW4gYikgdGhyb3dzIElP
RXhjZXB0aW9uIHtcbiIgKwotCQkJIiAgICAgICAgRmlsZSBmaWxlMiA9IG5ldyBGaWxlKFwic29t
ZWZpbGVcIik7XG4iICsKLQkJCSIgICAgICAgIEZpbGVJbnB1dFN0cmVhbSBmaWxlU3RyZWFtMiAg
PSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUyKTtcbiIgKwotCQkJIiAgICAgICAgQnVmZmVyZWRJ
bnB1dFN0cmVhbSBkdW1teTtcbiIgKwotCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBi
aXMyID0gKGR1bW15ID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oZmlsZVN0cmVhbTIpKTtcbiIg
KwotCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFwMiA9IG5ldyBCdWZm
ZXJlZElucHV0U3RyZWFtKGJpczIpO1xuIiArCi0JCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50
bG4oYmlzMi5hdmFpbGFibGUoKSk7XG4iICsKLQkJCSIgICAgICAgIGlmIChiKVxuIiArCi0JCQki
ICAgICAgICAgICAgZG91YmxlV3JhcDIuY2xvc2UoKTtcbiIgKwotCQkJIiAgICB9XG4iICsKLQkJ
CSIgICAgdm9pZCBwb3RBbmREZWYoYm9vbGVhbiBiKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiAr
Ci0JCQkiICAgICAgICBGaWxlIGZpbGUzID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKwot
CQkJIiAgICAgICAgRmlsZUlucHV0U3RyZWFtIGZpbGVTdHJlYW0zICA9IG5ldyBGaWxlSW5wdXRT
dHJlYW0oZmlsZTMpO1xuIiArCi0JCQkiICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGJpczMg
PSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShmaWxlU3RyZWFtMyk7XG4iICsKLQkJCSIgICAgICAg
IEJ1ZmZlcmVkSW5wdXRTdHJlYW0gZG91YmxlV3JhcDMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVh
bShiaXMzKTtcbiIgKwotCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGRvdWJsZVdyYXAz
LmF2YWlsYWJsZSgpKTtcbiIgKwotCQkJIiAgICAgICAgaWYgKGIpIGJpczMuY2xvc2UoKTtcbiIg
KwotCQkJIiAgICAgICAgZmlsZVN0cmVhbTMuY2xvc2UoKTtcbiIgKwotCQkJIiAgICB9XG4iICsK
LQkJCSJ9XG4iCi0JCX0sCi0JCSItLS0tLS0tLS0tXG4iICsgCi0JCSIxLiBFUlJPUiBpbiBYLmph
dmEgKGF0IGxpbmUgMTApXG4iICsgCi0JCSIJQnVmZmVyZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFw
ID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oYmlzKTtcbiIgKyAKLQkJIgkgICAgICAgICAgICAg
ICAgICAgIF5eXl5eXl5eXl5cbiIgKyAKLQkJIlBvdGVudGlhbCByZXNvdXJjZSBsZWFrOiBcJ2Rv
dWJsZVdyYXBcJyBtYXkgbm90IGJlIGNsb3NlZFxuIiArIAotCQkiLS0tLS0tLS0tLVxuIiArIAot
CQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDIwKVxuIiArIAotCQkiCUJ1ZmZlcmVkSW5w
dXRTdHJlYW0gZG91YmxlV3JhcDIgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShiaXMyKTtcbiIg
KyAKLQkJIgkgICAgICAgICAgICAgICAgICAgIF5eXl5eXl5eXl5eXG4iICsgCi0JCSJQb3RlbnRp
YWwgcmVzb3VyY2UgbGVhazogXCdkb3VibGVXcmFwMlwnIG1heSBub3QgYmUgY2xvc2VkXG4iICsg
Ci0JCSItLS0tLS0tLS0tXG4iLAotCQludWxsLAotCQl0cnVlLAotCQlvcHRpb25zKTsKLX0KLS8v
IEJ1ZyAzNTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVh
ayB3YXJuaW5ncwotLy8gbG9jYWwgdmFyIGlzIHJlLXVzZWQgZm9yIHR3byBsZXZlbHMgb2Ygd3Jh
cHBlcnMKLXB1YmxpYyB2b2lkIHRlc3QwNjFpKCkgewotCU1hcCBvcHRpb25zID0gZ2V0Q29tcGls
ZXJPcHRpb25zKCk7Ci0Jb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRV
bmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQlvcHRpb25zLnB1dChD
b21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUs
IENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0JdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCi0JCW5ldyBT
dHJpbmdbXSB7Ci0JCQkiWC5qYXZhIiwKLQkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCi0J
CQkiaW1wb3J0IGphdmEuaW8uSW5wdXRTdHJlYW07XG4iICsKLQkJCSJpbXBvcnQgamF2YS5pby5C
dWZmZXJlZElucHV0U3RyZWFtO1xuIiArCi0JCQkiaW1wb3J0IGphdmEuaW8uRmlsZUlucHV0U3Ry
ZWFtO1xuIiArCi0JCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKLQkJCSJwdWJs
aWMgY2xhc3MgWCB7XG4iICsKLQkJCSIgICAgdm9pZCBjbG9zZU1pZGRsZSgpIHRocm93cyBJT0V4
Y2VwdGlvbiB7XG4iICsKLQkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZp
bGVcIik7XG4iICsKLQkJCSIgICAgICAgIElucHV0U3RyZWFtIHN0cmVhbSAgPSBuZXcgRmlsZUlu
cHV0U3RyZWFtKGZpbGUpO1xuIiArCi0JCQkiICAgICAgICBzdHJlYW0gPSBuZXcgQnVmZmVyZWRJ
bnB1dFN0cmVhbShzdHJlYW0pO1xuIiArCi0JCQkiICAgICAgICBJbnB1dFN0cmVhbSBtaWRkbGU7
XG4iICsKLQkJCSIgICAgICAgIHN0cmVhbSA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKG1pZGRs
ZSA9IHN0cmVhbSk7XG4iICsKLQkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihzdHJlYW0u
YXZhaWxhYmxlKCkpO1xuIiArCi0JCQkiICAgICAgICBtaWRkbGUuY2xvc2UoKTtcbiIgKwotCQkJ
IiAgICB9XG4iICsKLQkJCSIgICAgdm9pZCBjbG9zZU91dGVyKCkgdGhyb3dzIElPRXhjZXB0aW9u
IHtcbiIgKwotCQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtc
biIgKwotCQkJIiAgICAgICAgSW5wdXRTdHJlYW0gc3RyZWFtMiAgPSBuZXcgRmlsZUlucHV0U3Ry
ZWFtKGZpbGUpO1xuIiArCi0JCQkiICAgICAgICBzdHJlYW0yID0gbmV3IEJ1ZmZlcmVkSW5wdXRT
dHJlYW0oc3RyZWFtMik7XG4iICsKLQkJCSIgICAgICAgIHN0cmVhbTIgPSBuZXcgQnVmZmVyZWRJ
bnB1dFN0cmVhbShzdHJlYW0yKTtcbiIgKwotCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxu
KHN0cmVhbTIuYXZhaWxhYmxlKCkpO1xuIiArCi0JCQkiICAgICAgICBzdHJlYW0yLmNsb3NlKCk7
XG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQkiICAgIHZvaWQgbmV2ZXJDbG9zZWQoKSB0aHJvd3Mg
SU9FeGNlcHRpb24ge1xuIiArCi0JCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNv
bWVmaWxlXCIpO1xuIiArCi0JCQkiICAgICAgICBJbnB1dFN0cmVhbSBzdHJlYW0zICA9IG5ldyBG
aWxlSW5wdXRTdHJlYW0oZmlsZSk7XG4iICsKLQkJCSIgICAgICAgIHN0cmVhbTMgPSBuZXcgQnVm
ZmVyZWRJbnB1dFN0cmVhbShzdHJlYW0zKTtcbiIgKwotCQkJIiAgICAgICAgc3RyZWFtMyA9IG5l
dyBCdWZmZXJlZElucHV0U3RyZWFtKHN0cmVhbTMpO1xuIiArCi0JCQkiICAgICAgICBTeXN0ZW0u
b3V0LnByaW50bG4oc3RyZWFtMy5hdmFpbGFibGUoKSk7XG4iICsKLQkJCSIgICAgfVxuIiArCi0J
CQkifVxuIgotCQl9LAotCQkiLS0tLS0tLS0tLVxuIiArIAotCQkiMS4gRVJST1IgaW4gWC5qYXZh
IChhdCBsaW5lIDI2KVxuIiArIAotCQkiCUlucHV0U3RyZWFtIHN0cmVhbTMgID0gbmV3IEZpbGVJ
bnB1dFN0cmVhbShmaWxlKTtcbiIgKyAKLQkJIgkgICAgICAgICAgICBeXl5eXl5eXG4iICsgCi0J
CSJSZXNvdXJjZSBsZWFrOiBcJ3N0cmVhbTNcJyBpcyBuZXZlciBjbG9zZWRcbiIgKyAKLQkJIi0t
LS0tLS0tLS1cbiIsCi0JCW51bGwsCi0JCXRydWUsCi0JCW9wdGlvbnMpOwotfQotLy8gQnVnIDM1
ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5p
bmdzCi0vLyBzZWxmLXdyYXBwaW5nIGEgbWV0aG9kIGFyZ3VtZW50IChjYXVzZWQgTlBFIFVuY29u
ZGl0aW9uYWxGbG93SW5mby5tYXJrQXNEZWZpbml0ZWx5TnVsbCguLikpLgotcHVibGljIHZvaWQg
dGVzdDA2MWooKSB7Ci0JTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKLQlvcHRp
b25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBD
b21waWxlck9wdGlvbnMuRVJST1IpOwotCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJ
T05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVS
Uk9SKTsKLQl0aGlzLnJ1bkNvbmZvcm1UZXN0KAotCQluZXcgU3RyaW5nW10gewotCQkJIlguamF2
YSIsCi0JCQkiaW1wb3J0IGphdmEuaW8uSW5wdXRTdHJlYW07XG4iICsKLQkJCSJpbXBvcnQgamF2
YS5pby5CdWZmZXJlZElucHV0U3RyZWFtO1xuIiArCi0JCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNl
cHRpb247XG4iICsKLQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKLQkJCSIgICAgdm9pZCBmb28o
SW5wdXRTdHJlYW0gc3RyZWFtKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCi0JCQkiICAgICAg
ICBzdHJlYW0gPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShzdHJlYW0pO1xuIiArCi0JCQkiICAg
ICAgICBTeXN0ZW0ub3V0LnByaW50bG4oc3RyZWFtLmF2YWlsYWJsZSgpKTtcbiIgKwotCQkJIiAg
ICAgICAgc3RyZWFtLmNsb3NlKCk7XG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQkiICAgIHZvaWQg
Ym9vKElucHV0U3RyZWFtIHN0cmVhbTIpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKLQkJCSIg
ICAgICAgIHN0cmVhbTIgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShzdHJlYW0yKTtcbiIgKwot
CQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKHN0cmVhbTIuYXZhaWxhYmxlKCkpO1xuIiAr
Ci0JCQkiICAgIH1cbiIgKwotCQkJIn1cbiIKLQkJfSwKLQkJIiIsCi0JCW51bGwsCi0JCXRydWUs
Ci0JCW51bGwsCi0JCW9wdGlvbnMsCi0JCW51bGwpOwotfQotLy8gQnVnIDM1ODkwMyAtIEZpbHRl
ciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCi0vLyBhIHdy
YXBwZXIgaXMgY3JlYXRlZCBpbiBhIHJldHVybiBzdGF0ZW1lbnQKLXB1YmxpYyB2b2lkIHRlc3Qw
NjFrKCkgdGhyb3dzIElPRXhjZXB0aW9uIHsKLQlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0
aW9ucygpOwotCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9z
ZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0Jb3B0aW9ucy5wdXQoQ29tcGls
ZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21w
aWxlck9wdGlvbnMuRVJST1IpOwotCXRoaXMucnVuQ29uZm9ybVRlc3QoCi0JCW5ldyBTdHJpbmdb
XSB7Ci0JCQkiWC5qYXZhIiwKLQkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCi0JCQkiaW1w
b3J0IGphdmEuaW8uRmlsZUlucHV0U3RyZWFtO1xuIiArCi0JCQkiaW1wb3J0IGphdmEuaW8uQnVm
ZmVyZWRJbnB1dFN0cmVhbTtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xu
IiArCi0JCQkicHVibGljIGNsYXNzIFgge1xuIiArCi0JCQkiICAgIEJ1ZmZlcmVkSW5wdXRTdHJl
YW0gZ2V0UmVhZGVyKEZpbGUgZmlsZSkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwotCQkJIiAg
ICAgICAgRmlsZUlucHV0U3RyZWFtIHN0cmVhbSA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSk7
XG4iICsKLQkJCSIgICAgICAgIHJldHVybiBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShzdHJlYW0p
O1xuIiArCi0JCQkiICAgIH1cbiIgKwotCQkJIn1cbiIKLQkJfSwKLQkJIiIsCi0JCW51bGwsCi0J
CXRydWUsCi0JCW51bGwsCi0JCW9wdGlvbnMsCi0JCW51bGwpOwotfQotLy8gQnVnIDM1ODkwMyAt
IEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCi0v
LyBhIGNsb3NlYWJsZSBpcyBhc3NpZ25lZCB0byBhIGZpZWxkCi1wdWJsaWMgdm9pZCB0ZXN0MDYx
bCgpIHRocm93cyBJT0V4Y2VwdGlvbiB7Ci0JTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlv
bnMoKTsKLQlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2Vk
Q2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCW9wdGlvbnMucHV0KENvbXBpbGVy
T3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGls
ZXJPcHRpb25zLkVSUk9SKTsKLQl0aGlzLnJ1bkNvbmZvcm1UZXN0KAotCQluZXcgU3RyaW5nW10g
ewotCQkJIlguamF2YSIsCi0JCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKwotCQkJImltcG9y
dCBqYXZhLmlvLkZpbGVJbnB1dFN0cmVhbTtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZl
cmVkSW5wdXRTdHJlYW07XG4iICsKLQkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIg
KwotCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwotCQkJIiAgICBCdWZmZXJlZElucHV0U3RyZWFt
IHN0cmVhbTtcbiIgKwotCQkJIiAgICB2b2lkIGZvbyhGaWxlIGZpbGUpIHRocm93cyBJT0V4Y2Vw
dGlvbiB7XG4iICsKLQkJCSIgICAgICAgIEZpbGVJbnB1dFN0cmVhbSBzID0gbmV3IEZpbGVJbnB1
dFN0cmVhbShmaWxlKTtcbiIgKwotCQkJIiAgICAgICAgc3RyZWFtID0gbmV3IEJ1ZmZlcmVkSW5w
dXRTdHJlYW0ocyk7XG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQkifVxuIgotCQl9LAotCQkiIiwK
LQkJbnVsbCwKLQkJdHJ1ZSwKLQkJbnVsbCwKLQkJb3B0aW9ucywKLQkJbnVsbCk7Ci19Ci0vLyBC
dWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsg
d2FybmluZ3MKLS8vIGEgY2xvc2VhYmxlIGlzIHBhc3NlZCB0byBhbm90aGVyIG1ldGhvZCBpbiBh
IHJldHVybiBzdGF0ZW1lbnQKLS8vIGV4YW1wbGUgY29uc3RydWN0ZWQgYWZ0ZXIgb3JnLmVjbGlw
c2UuZXF1aW5veC5pbnRlcm5hbC5wMi5hcnRpZmFjdC5yZXBvc2l0b3J5LnNpbXBsZS5TaW1wbGVB
cnRpZmFjdFJlcG9zaXRvcnkjZ2V0QXJ0aWZhY3QoLi4pCi1wdWJsaWMgdm9pZCB0ZXN0MDYxbSgp
IHRocm93cyBJT0V4Y2VwdGlvbiB7Ci0JTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMo
KTsKLQlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xv
c2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0
aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJP
cHRpb25zLkVSUk9SKTsKLQl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKLQkJbmV3IFN0cmluZ1tdIHsK
LQkJCSJYLmphdmEiLAotCQkJImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsKLQkJCSJpbXBvcnQg
amF2YS5pby5GaWxlSW5wdXRTdHJlYW07XG4iICsKLQkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJl
ZElucHV0U3RyZWFtO1xuIiArCi0JCQkiaW1wb3J0IGphdmEuaW8uSW5wdXRTdHJlYW07XG4iICsK
LQkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKwotCQkJInB1YmxpYyBjbGFzcyBY
IHtcbiIgKwotCQkJIiAgICBCdWZmZXJlZElucHV0U3RyZWFtIHN0cmVhbTtcbiIgKwotCQkJIiAg
ICBCdWZmZXJlZElucHV0U3RyZWFtIGZvbyhGaWxlIGZpbGUpIHRocm93cyBJT0V4Y2VwdGlvbiB7
XG4iICsKLQkJCSIgICAgICAgIEZpbGVJbnB1dFN0cmVhbSBzID0gbmV3IEZpbGVJbnB1dFN0cmVh
bShmaWxlKTtcbiIgKwotCQkJIiAgICAgICAgcmV0dXJuIGNoZWNrKG5ldyBCdWZmZXJlZElucHV0
U3RyZWFtKHMpKTtcbiIgKwotCQkJIiAgICB9XG4iICsKLQkJCSIgICAgQnVmZmVyZWRJbnB1dFN0
cmVhbSBmb28yKEZpbGVJbnB1dFN0cmVhbSBzLCBGaWxlIGZpbGUpIHRocm93cyBJT0V4Y2VwdGlv
biB7XG4iICsKLQkJCSIgICAgICAgIHMgPSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpO1xuIiAr
Ci0JCQkiICAgICAgICByZXR1cm4gY2hlY2socyk7XG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQki
ICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gZm9vMyhJbnB1dFN0cmVhbSBzKSB0aHJvd3MgSU9FeGNl
cHRpb24ge1xuIiArCi0JCQkiICAgICAgICBzID0gY2hlY2socyk7XG4iICsKLQkJCSIgICAgICAg
IHJldHVybiBjaGVjayhzKTtcbiIgKwotCQkJIiAgICB9XG4iICsKLQkJCSIgICAgQnVmZmVyZWRJ
bnB1dFN0cmVhbSBjaGVjayhJbnB1dFN0cmVhbSBzKSB7IHJldHVybiBudWxsOyB9XG4iICsKLQkJ
CSJ9XG4iCi0JCX0sCi0JCS8vIFRPRE86IGFsc28gdGhlc2Ugd2FybmluZ3MgKm1pZ2h0KiBiZSBh
dm9pZGFibGUgYnkgZGV0ZWN0aW5nIGNoZWNrKHMpIGFzIGEgd3JhcHBlciBjcmVhdGlvbj8/IAot
CQkiLS0tLS0tLS0tLVxuIiArIAotCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDE0KVxu
IiArIAotCQkiCXJldHVybiBjaGVjayhzKTtcbiIgKyAKLQkJIgleXl5eXl5eXl5eXl5eXl5eXG4i
ICsgCi0JCSJQb3RlbnRpYWwgcmVzb3VyY2UgbGVhazogXCdzXCcgbWF5IG5vdCBiZSBjbG9zZWQg
YXQgdGhpcyBsb2NhdGlvblxuIiArIAotCQkiLS0tLS0tLS0tLVxuIiArIAotCQkiMi4gRVJST1Ig
aW4gWC5qYXZhIChhdCBsaW5lIDE4KVxuIiArIAotCQkiCXJldHVybiBjaGVjayhzKTtcbiIgKyAK
LQkJIgleXl5eXl5eXl5eXl5eXl5eXG4iICsgCi0JCSJQb3RlbnRpYWwgcmVzb3VyY2UgbGVhazog
XCdzXCcgbWF5IG5vdCBiZSBjbG9zZWQgYXQgdGhpcyBsb2NhdGlvblxuIiArIAotCQkiLS0tLS0t
LS0tLVxuIiwKLQkJbnVsbCwKLQkJdHJ1ZSwKLQkJb3B0aW9ucyk7Ci19Ci0vLyBCdWcgMzYyMzMx
IC0gUmVzb3VyY2UgbGVhayBub3QgZGV0ZWN0ZWQgd2hlbiBjbG9zZWFibGUgbm90IGFzc2lnbmVk
IHRvIHZhcmlhYmxlCi0vLyBhIHJlc291cmNlIGlzIG5ldmVyIGFzc2lnbmVkCi1wdWJsaWMgdm9p
ZCB0ZXN0MDYyYSgpIHRocm93cyBJT0V4Y2VwdGlvbiB7Ci0JTWFwIG9wdGlvbnMgPSBnZXRDb21w
aWxlck9wdGlvbnMoKTsKLQlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9y
dFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCW9wdGlvbnMucHV0
KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJs
ZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKLQkJbmV3
IFN0cmluZ1tdIHsKLQkJCSJYLmphdmEiLAotCQkJImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsK
LQkJCSJpbXBvcnQgamF2YS5pby5GaWxlT3V0cHV0U3RyZWFtO1xuIiArCi0JCQkiaW1wb3J0IGph
dmEuaW8uSU9FeGNlcHRpb247XG4iICsKLQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKLQkJCSIg
ICAgdm9pZCBmb28oKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCi0JCQkiICAgICAgICBuZXcg
RmlsZU91dHB1dFN0cmVhbShuZXcgRmlsZShcIkM6XFx0ZW1wXFxmb28udHh0XCIpKS53cml0ZSgx
KTtcbiIgKyAKLQkJCSIgICAgfVxuIiArCi0JCQkifVxuIgotCQl9LAotCQkiLS0tLS0tLS0tLVxu
IiArIAotCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDYpXG4iICsgCi0JCSIJbmV3IEZp
bGVPdXRwdXRTdHJlYW0obmV3IEZpbGUoXCJDOlxcdGVtcFxcZm9vLnR4dFwiKSkud3JpdGUoMSk7
XG4iICsgCi0JCSIJXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXlxuIiArIAotCQkiUmVzb3VyY2UgbGVhazogXCc8dW5hc3NpZ25lZCBDbG9zZWFibGUgdmFs
dWU+XCcgaXMgbmV2ZXIgY2xvc2VkXG4iICsgCi0JCSItLS0tLS0tLS0tXG4iLAotCQludWxsLAot
CQl0cnVlLAotCQlvcHRpb25zKTsKLX0KLS8vIEJ1ZyAzNjIzMzEgLSBSZXNvdXJjZSBsZWFrIG5v
dCBkZXRlY3RlZCB3aGVuIGNsb3NlYWJsZSBub3QgYXNzaWduZWQgdG8gdmFyaWFibGUKLS8vIGEg
ZnJlc2hseSBhbGxvY2F0ZWQgcmVzb3VyY2UgaXMgaW1tZWRpYXRlbHkgY2xvc2VkCi1wdWJsaWMg
dm9pZCB0ZXN0MDYyYigpIHRocm93cyBJT0V4Y2VwdGlvbiB7Ci0JTWFwIG9wdGlvbnMgPSBnZXRD
b21waWxlck9wdGlvbnMoKTsKLQlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1Jl
cG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCW9wdGlvbnMu
cHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3Nl
YWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQl0aGlzLnJ1bkNvbmZvcm1UZXN0KAotCQlu
ZXcgU3RyaW5nW10gewotCQkJIlguamF2YSIsCi0JCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIg
KwotCQkJImltcG9ydCBqYXZhLmlvLkZpbGVPdXRwdXRTdHJlYW07XG4iICsKLQkJCSJpbXBvcnQg
amF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKwotCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwotCQkJ
IiAgICB2b2lkIGZvbygpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKLQkJCSIgICAgICAgIG5l
dyBGaWxlT3V0cHV0U3RyZWFtKG5ldyBGaWxlKFwiQzpcXHRlbXBcXGZvby50eHRcIikpLmNsb3Nl
KCk7XG4iICsgCi0JCQkiICAgIH1cbiIgKwotCQkJIn1cbiIKLQkJfSwKLQkJIiIsCi0JCW51bGws
Ci0JCXRydWUsCi0JCW51bGwsCi0JCW9wdGlvbnMsCi0JCW51bGwpOwotfQotLy8gQnVnIDM2MjMz
MSAtIFJlc291cmNlIGxlYWsgbm90IGRldGVjdGVkIHdoZW4gY2xvc2VhYmxlIG5vdCBhc3NpZ25l
ZCB0byB2YXJpYWJsZQotLy8gYSByZXNvdXJjZSBpcyBkaXJlY3RseSBwYXNzZWQgdG8gYW5vdGhl
ciBtZXRob2QKLXB1YmxpYyB2b2lkIHRlc3QwNjJjKCkgdGhyb3dzIElPRXhjZXB0aW9uIHsKLQlN
YXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwotCW9wdGlvbnMucHV0KENvbXBpbGVy
T3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5F
UlJPUik7Ci0Jb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRp
YWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCXRoaXMucnVu
Q29uZm9ybVRlc3QoCi0JCW5ldyBTdHJpbmdbXSB7Ci0JCQkiWC5qYXZhIiwKLQkJCSJpbXBvcnQg
amF2YS5pby5GaWxlO1xuIiArCi0JCQkiaW1wb3J0IGphdmEuaW8uRmlsZU91dHB1dFN0cmVhbTtc
biIgKwotCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCi0JCQkicHVibGljIGNs
YXNzIFgge1xuIiArCi0JCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIg
KwotCQkJIiAgICAgICAgd3JpdGVJdChuZXcgRmlsZU91dHB1dFN0cmVhbShuZXcgRmlsZShcIkM6
XFx0ZW1wXFxmb28udHh0XCIpKSk7XG4iICsgCi0JCQkiICAgIH1cbiIgKwotCQkJIiAgICB2b2lk
IHdyaXRlSXQoRmlsZU91dHB1dFN0cmVhbSBmb3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsK
LQkJCSIgICAgICAgIGZvcy53cml0ZSgxKTtcbiIgKwotCQkJIiAgICAgICAgZm9zLmNsb3NlKCk7
XG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQkifVxuIgotCQl9LAotCQkiIiwKLQkJbnVsbCwKLQkJ
dHJ1ZSwKLQkJbnVsbCwKLQkJb3B0aW9ucywKLQkJbnVsbCk7Ci19Ci0vLyBCdWcgMzYyMzMxIC0g
UmVzb3VyY2UgbGVhayBub3QgZGV0ZWN0ZWQgd2hlbiBjbG9zZWFibGUgbm90IGFzc2lnbmVkIHRv
IHZhcmlhYmxlCi0vLyBhIHJlc291cmNlIGlzIG5vdCB1c2VkCi1wdWJsaWMgdm9pZCB0ZXN0MDYy
ZCgpIHRocm93cyBJT0V4Y2VwdGlvbiB7Ci0JTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlv
bnMoKTsKLQlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2Vk
Q2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCW9wdGlvbnMucHV0KENvbXBpbGVy
T3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGls
ZXJPcHRpb25zLkVSUk9SKTsKLQl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKLQkJbmV3IFN0cmluZ1td
IHsKLQkJCSJYLmphdmEiLAotCQkJImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsKLQkJCSJpbXBv
cnQgamF2YS5pby5GaWxlT3V0cHV0U3RyZWFtO1xuIiArCi0JCQkiaW1wb3J0IGphdmEuaW8uSU9F
eGNlcHRpb247XG4iICsKLQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKLQkJCSIgICAgdm9pZCBm
b28oKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCi0JCQkiICAgICAgICBuZXcgRmlsZU91dHB1
dFN0cmVhbShuZXcgRmlsZShcIkM6XFx0ZW1wXFxmb28udHh0XCIpKTtcbiIgKyAKLQkJCSIgICAg
fVxuIiArCi0JCQkifVxuIgotCQl9LAotCQkiLS0tLS0tLS0tLVxuIiArIAotCQkiMS4gRVJST1Ig
aW4gWC5qYXZhIChhdCBsaW5lIDYpXG4iICsgCi0JCSIJbmV3IEZpbGVPdXRwdXRTdHJlYW0obmV3
IEZpbGUoXCJDOlxcdGVtcFxcZm9vLnR4dFwiKSk7XG4iICsgCi0JCSIJXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXlxuIiArIAotCQkiUmVzb3VyY2UgbGVh
azogXCc8dW5hc3NpZ25lZCBDbG9zZWFibGUgdmFsdWU+XCcgaXMgbmV2ZXIgY2xvc2VkXG4iICsg
Ci0JCSItLS0tLS0tLS0tXG4iLAotCQludWxsLAotCQl0cnVlLAotCQlvcHRpb25zKTsKLX0KLS8v
IEJ1ZyAzNjIzMzIgLSBPbmx5IHJlcG9ydCBwb3RlbnRpYWwgbGVhayB3aGVuIGNsb3NlYWJsZSBu
b3QgY3JlYXRlZCBpbiB0aGUgbG9jYWwgc2NvcGUKLS8vIGEgd3JhcHBlciBpcyBvYnRhaW5lZCBm
cm9tIGFub3RoZXIgbWV0aG9kCi1wdWJsaWMgdm9pZCB0ZXN0MDYzYSgpIHRocm93cyBJT0V4Y2Vw
dGlvbiB7Ci0JTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKLQlvcHRpb25zLnB1
dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxl
ck9wdGlvbnMuRVJST1IpOwotCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVw
b3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsK
LQl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKLQkJbmV3IFN0cmluZ1tdIHsKLQkJCSJYLmphdmEiLAot
CQkJImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsKLQkJCSJpbXBvcnQgamF2YS5pby5GaWxlSW5w
dXRTdHJlYW07XG4iICsKLQkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJlZElucHV0U3RyZWFtO1xu
IiArCi0JCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKLQkJCSJwdWJsaWMgY2xh
c3MgWCB7XG4iICsKLQkJCSIgICAgdm9pZCByZWFkKEZpbGUgZmlsZSkgdGhyb3dzIElPRXhjZXB0
aW9uIHtcbiIgKwotCQkJIiAgICAgICAgRmlsZUlucHV0U3RyZWFtIHN0cmVhbSA9IG5ldyBGaWxl
SW5wdXRTdHJlYW0oZmlsZSk7XG4iICsKLQkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0g
YmlzID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oc3RyZWFtKTsgLy8gbmV2ZXIgc2luY2UgcmVh
c3NpZ25lZFxuIiArCi0JCQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0gc3RyZWFtMiA9IG5ldyBG
aWxlSW5wdXRTdHJlYW0oZmlsZSk7IC8vIHVuc3VyZSBzaW5jZSBwYXNzZWQgdG8gbWV0aG9kXG4i
ICsKLQkJCSIgICAgICAgIGJpcyA9IGdldFJlYWRlcihzdHJlYW0yKTsgLy8gdW5zdXJlIHNpbmNl
IG9idGFpbmVkIGZyb20gbWV0aG9kXG4iICsKLQkJCSIgICAgICAgIGJpcy5hdmFpbGFibGUoKTtc
biIgKwotCQkJIiAgICB9XG4iICsKLQkJCSIgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBnZXRSZWFk
ZXIoRmlsZUlucHV0U3RyZWFtIHN0cmVhbSkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwotCQkJ
IiAgICAgICAgcmV0dXJuIG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKHN0cmVhbSk7XG4iICsKLQkJ
CSIgICAgfVxuIiArCi0JCQkifVxuIgotCQl9LAotCQkiLS0tLS0tLS0tLVxuIiArIAotCQkiMS4g
RVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDgpXG4iICsgCi0JCSIJQnVmZmVyZWRJbnB1dFN0cmVh
bSBiaXMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShzdHJlYW0pOyAvLyBuZXZlciBzaW5jZSBy
ZWFzc2lnbmVkXG4iICsgCi0JCSIJICAgICAgICAgICAgICAgICAgICBeXl5cbiIgKyAKLQkJIlJl
c291cmNlIGxlYWs6IFwnYmlzXCcgaXMgbmV2ZXIgY2xvc2VkXG4iICsgCi0JCSItLS0tLS0tLS0t
XG4iICsgCi0JCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgOSlcbiIgKyAKLQkJIglGaWxl
SW5wdXRTdHJlYW0gc3RyZWFtMiA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSk7IC8vIHVuc3Vy
ZSBzaW5jZSBwYXNzZWQgdG8gbWV0aG9kXG4iICsgCi0JCSIJICAgICAgICAgICAgICAgIF5eXl5e
Xl5cbiIgKyAKLQkJIlBvdGVudGlhbCByZXNvdXJjZSBsZWFrOiBcJ3N0cmVhbTJcJyBtYXkgbm90
IGJlIGNsb3NlZFxuIiArIAotCQkiLS0tLS0tLS0tLVxuIiArIAotCQkiMy4gRVJST1IgaW4gWC5q
YXZhIChhdCBsaW5lIDEwKVxuIiArIAotCQkiCWJpcyA9IGdldFJlYWRlcihzdHJlYW0yKTsgLy8g
dW5zdXJlIHNpbmNlIG9idGFpbmVkIGZyb20gbWV0aG9kXG4iICsgCi0JCSIJXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXl5eXG4iICsgCi0JCSJQb3RlbnRpYWwgcmVzb3VyY2UgbGVhazogXCdiaXNcJyBt
YXkgbm90IGJlIGNsb3NlZFxuIiArIAotCQkiLS0tLS0tLS0tLVxuIiwKLQkJbnVsbCwKLQkJdHJ1
ZSwKLQkJb3B0aW9ucyk7Ci19Ci0vLyBCdWcgMzYyMzMyIC0gT25seSByZXBvcnQgcG90ZW50aWFs
IGxlYWsgd2hlbiBjbG9zZWFibGUgbm90IGNyZWF0ZWQgaW4gdGhlIGxvY2FsIHNjb3BlCi0vLyBh
IHdyYXBwZXIgaXMgb2J0YWluZWQgZnJvbSBhIGZpZWxkIHJlYWQKLXB1YmxpYyB2b2lkIHRlc3Qw
NjNiKCkgdGhyb3dzIElPRXhjZXB0aW9uIHsKLQlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0
aW9ucygpOwotCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9z
ZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0Jb3B0aW9ucy5wdXQoQ29tcGls
ZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21w
aWxlck9wdGlvbnMuRVJST1IpOwotCXRoaXMucnVuQ29uZm9ybVRlc3QoCi0JCW5ldyBTdHJpbmdb
XSB7Ci0JCQkiWC5qYXZhIiwKLQkJCSJpbXBvcnQgamF2YS5pby5GaWxlSW5wdXRTdHJlYW07XG4i
ICsKLQkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJlZElucHV0U3RyZWFtO1xuIiArCi0JCQkiaW1w
b3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKLQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsK
LQkJCSIgICAgRmlsZUlucHV0U3RyZWFtIHN0cmVhbTtcbiIgKwotCQkJIiAgICB2b2lkIHJlYWQo
KSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCi0JCQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0g
cyA9IHRoaXMuc3RyZWFtO1xuIiArCi0JCQkiICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGJp
cyA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKHMpOyAvLyBkb24ndCBjb21wbGFpbiBzaW5jZSBz
IGlzIG9idGFpbmVkIGZyb20gYSBmaWVsZFxuIiArCi0JCQkiICAgICAgICBiaXMuYXZhaWxhYmxl
KCk7XG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQkifVxuIgotCQl9LAotCQkiIiwKLQkJbnVsbCwK
LQkJdHJ1ZSwKLQkJbnVsbCwKLQkJb3B0aW9ucywKLQkJbnVsbCk7Ci19Ci0vLyBCdWcgMzYyMzMy
IC0gT25seSByZXBvcnQgcG90ZW50aWFsIGxlYWsgd2hlbiBjbG9zZWFibGUgbm90IGNyZWF0ZWQg
aW4gdGhlIGxvY2FsIHNjb3BlCi0vLyBhIHdyYXBwZXIgaXMgYXNzaWduZWQgdG8gYSBmaWVsZAot
cHVibGljIHZvaWQgdGVzdDA2M2MoKSB0aHJvd3MgSU9FeGNlcHRpb24gewotCU1hcCBvcHRpb25z
ID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7Ci0Jb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9Q
VElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQlv
cHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9z
ZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0JdGhpcy5ydW5Db25mb3JtVGVz
dCgKLQkJbmV3IFN0cmluZ1tdIHsKLQkJCSJYLmphdmEiLAotCQkJImltcG9ydCBqYXZhLmlvLkZp
bGVJbnB1dFN0cmVhbTtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJl
YW07XG4iICsKLQkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKwotCQkJInB1Ymxp
YyBjbGFzcyBYIHtcbiIgKwotCQkJIiAgICBCdWZmZXJlZElucHV0U3RyZWFtIHN0cmVhbTtcbiIg
KwotCQkJIiAgICB2b2lkIHJlYWQoKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCi0JCQkiICAg
ICAgICBGaWxlSW5wdXRTdHJlYW0gcyA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oXCJzb21lZmlsZVwi
KTtcbiIgKwotCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMgPSBuZXcgQnVmZmVy
ZWRJbnB1dFN0cmVhbShzKTtcbiIgKwotCQkJIiAgICAgICAgdGhpcy5zdHJlYW0gPSBiaXM7XG4i
ICsKLQkJCSIgICAgfVxuIiArCi0JCQkifVxuIgotCQl9LAotCQkiIiwKLQkJbnVsbCwKLQkJdHJ1
ZSwKLQkJbnVsbCwKLQkJb3B0aW9ucywKLQkJbnVsbCk7Ci19Ci0vLyBCdWcgMzYyMzMyIC0gT25s
eSByZXBvcnQgcG90ZW50aWFsIGxlYWsgd2hlbiBjbG9zZWFibGUgbm90IGNyZWF0ZWQgaW4gdGhl
IGxvY2FsIHNjb3BlCi0vLyBhIHJlc291cmNlIGlzIG9idGFpbmVkIGFzIGEgbWV0aG9kIGFyZ3Vt
ZW50IGFuZC9vciBhc3NpZ25lZCB3aXRoIGEgY2FzdAotcHVibGljIHZvaWQgdGVzdDA2M2QoKSB0
aHJvd3MgSU9FeGNlcHRpb24gewotCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7
Ci0Jb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3Nl
YWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQlvcHRpb25zLnB1dChDb21waWxlck9wdGlv
bnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0
aW9ucy5FUlJPUik7Ci0Jb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRF
eHBsaWNpdGx5Q2xvc2VkQXV0b0Nsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQl0
aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKLQkJbmV3IFN0cmluZ1tdIHsKLQkJCSJYLmphdmEiLAotCQkJ
ImltcG9ydCBqYXZhLmlvLkZpbGVJbnB1dFN0cmVhbTtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlv
LkJ1ZmZlcmVkSW5wdXRTdHJlYW07XG4iICsKLQkJCSJpbXBvcnQgamF2YS5pby5JbnB1dFN0cmVh
bTtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCi0JCQkicHVibGlj
IGNsYXNzIFgge1xuIiArCi0JCQkiICAgIHZvaWQgZm9vKCBJbnB1dFN0cmVhbSBpbnB1dCkgdGhy
b3dzIElPRXhjZXB0aW9uIHtcbiIgKwotCQkJIiAgICAgICAgRmlsZUlucHV0U3RyZWFtIGlucHV0
MSAgPSAoRmlsZUlucHV0U3RyZWFtKWlucHV0O1xuIiArCi0JCQkiICAgICAgICBTeXN0ZW0ub3V0
LnByaW50bG4oaW5wdXQxLnJlYWQoKSk7XG4iICsKLQkJCSIgICAgICAgIGlucHV0LmNsb3NlKCk7
XG4iICsgLy8gZG9uJ3QgcHJvcG9zZSB0LXctciBmb3IgYXJndW1lbnQKLQkJCSIgICAgfVxuIiAr
Ci0JCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwotCQkJIiAgICAg
ICAgSW5wdXRTdHJlYW0gaW5wdXQgPSBuZXcgRmlsZUlucHV0U3RyZWFtKFwic29tZWZpbGVcIik7
XG4iICsgCi0JCQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0gaW5wdXQxICA9IChGaWxlSW5wdXRT
dHJlYW0paW5wdXQ7XG4iICsgCi0JCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oaW5wdXQx
LnJlYWQoKSk7XG4iICsgCi0JCQkiICAgICAgICBpbnB1dC5jbG9zZSgpO1xuIiArIC8vIGRvIHBy
b3Bvc2UgdC13LXIsIG5vdCBmcm9tIGEgbWV0aG9kIGFyZ3VtZW50Ci0JCQkiICAgIH1cbiIgKwot
CQkJIiAgICB2b2lkIGZvbzMoIElucHV0U3RyZWFtIGlucHV0LCBJbnB1dFN0cmVhbSBpbnB1dDIp
IHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKLQkJCSIgICAgICAgIEZpbGVJbnB1dFN0cmVhbSBp
bnB1dDEgID0gKEZpbGVJbnB1dFN0cmVhbSlpbnB1dDtcbiIgKyAvLyBzdGlsbCBkb24ndCBjbGFp
bSBiZWNhdXNlIG9idGFpbmVkIGZyb20gb3V0c2lkZQotCQkJIiAgICAgICAgU3lzdGVtLm91dC5w
cmludGxuKGlucHV0MS5yZWFkKCkpO1xuIiArCi0JCQkiICAgICAgICBCdWZmZXJlZElucHV0U3Ry
ZWFtIGJpcyA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGlucHV0Mik7XG4iICsKLQkJCSIgICAg
ICAgIFN5c3RlbS5vdXQucHJpbnRsbihiaXMucmVhZCgpKTtcbiIgKwotCQkJIiAgICB9XG4iICsK
LQkJCSJ9XG4iCi0JCX0sCi0JCSItLS0tLS0tLS0tXG4iICsgCi0JCSIxLiBFUlJPUiBpbiBYLmph
dmEgKGF0IGxpbmUgMTIpXG4iICsgCi0JCSIJSW5wdXRTdHJlYW0gaW5wdXQgPSBuZXcgRmlsZUlu
cHV0U3RyZWFtKFwic29tZWZpbGVcIik7XG4iICsgCi0JCSIJICAgICAgICAgICAgXl5eXl5cbiIg
KyAKLQkJIlJlc291cmNlIFwnaW5wdXRcJyBzaG91bGQgYmUgbWFuYWdlZCBieSB0cnktd2l0aC1y
ZXNvdXJjZVxuIiArIAotCQkiLS0tLS0tLS0tLVxuIiwKLQkJbnVsbCwKLQkJdHJ1ZSwKLQkJb3B0
aW9ucyk7Ci0JCisJCX0sIAorCQkiTWFpblxuIiArIAorCQkiWDo6WFxuIiArIAorCQkiWDo6WFxu
IiArIAorCQkiWDo6flhcbiIgKyAKKwkJIlg6On5YXG4iICsgCisJCSJ0cnVlXG4iICsgCisJCSJN
YWluXG4iICsgCisJCSJYOjpYXG4iICsgCisJCSJYOjpYXG4iICsgCisJCSJPdXRlciBUcnlcbiIg
KyAKKwkJIlk6OllcbiIgKyAKKwkJIlk6OllcbiIgKyAKKwkJIlk6On5ZXG4iICsgCisJCSJZOjp+
WVxuIiArIAorCQkiWDo6flhcbiIgKyAKKwkJIlg6On5YXG4iICsgCisJCSJ0cnVlXG4iICsgCisJ
CSJNYWluXG4iICsgCisJCSJYOjpYXG4iICsgCisJCSJYOjpYXG4iICsgCisJCSJPdXRlciBUcnlc
biIgKyAKKwkJIlk6OllcbiIgKyAKKwkJIlk6OllcbiIgKyAKKwkJIk1pZGRsZSBUcnlcbiIgKyAK
KwkJIlo6OlpcbiIgKyAKKwkJIlo6OlpcbiIgKyAKKwkJIklubmVyIFRyeVxuIiArIAorCQkiWjo6
flpcbiIgKyAKKwkJIlo6On5aXG4iICsgCisJCSJZOjp+WVxuIiArIAorCQkiWTo6fllcbiIgKyAK
KwkJIlg6On5YXG4iICsgCisJCSJYOjp+WFxuIiArIAorCQkidHJ1ZSIpOwogfQogcHVibGljIHN0
YXRpYyBDbGFzcyB0ZXN0Q2xhc3MoKSB7CiAJcmV0dXJuIFRyeVdpdGhSZXNvdXJjZXNTdGF0ZW1l
bnRUZXN0LmNsYXNzOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9BbGxvY2F0aW9uRXhwcmVzc2lv
bi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2FzdC9BbGxvY2F0aW9uRXhwcmVzc2lvbi5qYXZhCmluZGV4IDY3ZWI4
ZjUuLmY1ZjlhYzEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQWxsb2NhdGlvbkV4cHJlc3Npb24u
amF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXN0L0FsbG9jYXRpb25FeHByZXNzaW9uLmphdmEKQEAgLTUyLDcg
KzUyLDEwIEBAIHB1YmxpYyBGbG93SW5mbyBhbmFseXNlQ29kZShCbG9ja1Njb3BlIGN1cnJlbnRT
Y29wZSwgRmxvd0NvbnRleHQgZmxvd0NvbnRleHQsIEZsCiAJCQkJCS5hbmFseXNlQ29kZShjdXJy
ZW50U2NvcGUsIGZsb3dDb250ZXh0LCBmbG93SW5mbykKIAkJCQkJLnVuY29uZGl0aW9uYWxJbml0
cygpOwogCQkJLy8gaWYgYXJndW1lbnQgaXMgYW4gQXV0b0Nsb3NlYWJsZSBpbnNlcnQgaW5mbyB0
aGF0IGl0ICptYXkqIGJlIGNsb3NlZCAoYnkgdGhlIHRhcmdldCBtZXRob2QsIGkuZS4pCi0JCQlm
bG93SW5mbyA9IEZha2VkVHJhY2tpbmdWYXJpYWJsZS5tYXJrUGFzc2VkVG9PdXRzaWRlKGN1cnJl
bnRTY29wZSwgdGhpcy5hcmd1bWVudHNbaV0sIGZsb3dJbmZvLCB0aGlzLnJlc29sdmVkVHlwZSk7
CisJCQlpZiAoISh0aGlzLnJlc29sdmVkVHlwZSBpbnN0YW5jZW9mIFJlZmVyZW5jZUJpbmRpbmcg
CisJCQkJCSYmICgoUmVmZXJlbmNlQmluZGluZyl0aGlzLnJlc29sdmVkVHlwZSkuaGFzVHlwZUJp
dChUeXBlSWRzLkJpdFdyYXBwZXJDbG9zZWFibGUpKSkgeyAvLyBhbGxvY2F0aW9uIG9mIHdyYXBw
ZWQgY2xvc2VhYmxlcyBpcyBhbmFseXplZCBzcGVjaWFsbHkKKwkJCQlmbG93SW5mbyA9IEZha2Vk
VHJhY2tpbmdWYXJpYWJsZS5tYXJrUGFzc2VkVG9PdXRzaWRlKGN1cnJlbnRTY29wZSwgdGhpcy5h
cmd1bWVudHNbaV0sIGZsb3dJbmZvKTsKKwkJCX0KIAkJCWlmICgodGhpcy5hcmd1bWVudHNbaV0u
aW1wbGljaXRDb252ZXJzaW9uICYgVHlwZUlkcy5VTkJPWElORykgIT0gMCkgewogCQkJCXRoaXMu
YXJndW1lbnRzW2ldLmNoZWNrTlBFKGN1cnJlbnRTY29wZSwgZmxvd0NvbnRleHQsIGZsb3dJbmZv
KTsKIAkJCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvRmFrZWRUcmFja2luZ1ZhcmlhYmxlLmph
dmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvYXN0L0Zha2VkVHJhY2tpbmdWYXJpYWJsZS5qYXZhCmluZGV4IGFmYTIzODEu
LmUxMzMwYTcgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvRmFrZWRUcmFja2luZ1ZhcmlhYmxlLmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2FzdC9GYWtlZFRyYWNraW5nVmFyaWFibGUuamF2YQpAQCAtMTY3LDcg
KzE2Nyw3IEBAIHB1YmxpYyBjbGFzcyBGYWtlZFRyYWNraW5nVmFyaWFibGUgZXh0ZW5kcyBMb2Nh
bERlY2xhcmF0aW9uIHsKIAkJaWYgKHJocyBpbnN0YW5jZW9mIEFsbG9jYXRpb25FeHByZXNzaW9u
KSB7CiAJCQljbG9zZVRyYWNrZXIgPSBsb2NhbC5jbG9zZVRyYWNrZXI7CiAJCQlpZiAoY2xvc2VU
cmFja2VyID09IG51bGwpIHsKLQkJCQlpZiAoaXNBbnlDbG9zZWFibGUocmhzLnJlc29sdmVkVHlw
ZSkpIHsKKwkJCQlpZiAocmhzLnJlc29sdmVkVHlwZSAhPSBUeXBlQmluZGluZy5OVUxMKSB7IC8v
IG5vdCBOVUxMIG1lYW5zIHZhbGlkIGNsb3NlYWJsZSBhcyBwZXIgbWV0aG9kIHByZWNvbmRpdGlv
bgogCQkJCQljbG9zZVRyYWNrZXIgPSBuZXcgRmFrZWRUcmFja2luZ1ZhcmlhYmxlKGxvY2FsLCBs
b2NhdGlvbik7CiAJCQkJfQkJCQkJCiAJCQl9CkBAIC00OTUsMTAgKzQ5NSw3IEBAIHB1YmxpYyBj
bGFzcyBGYWtlZFRyYWNraW5nVmFyaWFibGUgZXh0ZW5kcyBMb2NhbERlY2xhcmF0aW9uIHsKIAkg
KiAoYXMgYXJndW1lbnQgdG8gYSBtZXRob2QvY3RvciBjYWxsIG9yIGFzIGEgcmV0dXJuIHZhbHVl
IGZyb20gdGhlIGN1cnJlbnQgbWV0aG9kKSwgCiAJICogYW5kIHRodXMgc2hvdWxkIGJlIGNvbnNp
ZGVyZWQgYXMgcG90ZW50aWFsbHkgY2xvc2VkLgogCSAqLwotCXB1YmxpYyBzdGF0aWMgRmxvd0lu
Zm8gbWFya1Bhc3NlZFRvT3V0c2lkZShCbG9ja1Njb3BlIHNjb3BlLCBFeHByZXNzaW9uIGV4cHJl
c3Npb24sIEZsb3dJbmZvIGZsb3dJbmZvLCBUeXBlQmluZGluZyBhbGxvY2F0ZWRUeXBlKSB7CQot
CQlpZiAoKGFsbG9jYXRlZFR5cGUgaW5zdGFuY2VvZiBSZWZlcmVuY2VCaW5kaW5nKSAvLyBvbmx5
IHNldCB3aGVuIGNhbGxlZCBmcm9tIEFsbG9jYXRpb25FeHByZXNzaW9uCi0JCQkJJiYgKChSZWZl
cmVuY2VCaW5kaW5nKSBhbGxvY2F0ZWRUeXBlKS5oYXNUeXBlQml0KFR5cGVJZHMuQml0V3JhcHBl
ckNsb3NlYWJsZSkpCi0JCQlyZXR1cm4gZmxvd0luZm87IC8vIGFsbG9jYXRpb24gb2Ygd3JhcHBl
ZCBjbG9zZWFibGVzIGlzIGFuYWx5emVkIHNwZWNpYWxseQorCXB1YmxpYyBzdGF0aWMgRmxvd0lu
Zm8gbWFya1Bhc3NlZFRvT3V0c2lkZShCbG9ja1Njb3BlIHNjb3BlLCBFeHByZXNzaW9uIGV4cHJl
c3Npb24sIEZsb3dJbmZvIGZsb3dJbmZvKSB7CQogCQkKIAkJRmFrZWRUcmFja2luZ1ZhcmlhYmxl
IHRyYWNrVmFyID0gZ2V0Q2xvc2VUcmFja2luZ1ZhcmlhYmxlKGV4cHJlc3Npb24pOwogCQlpZiAo
dHJhY2tWYXIgIT0gbnVsbCkgewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9NZXNzYWdlU2VuZC5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2FzdC9NZXNzYWdlU2VuZC5qYXZhCmluZGV4IDRiMzExZjkuLjZkNzVhNTYg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvTWVzc2FnZVNlbmQuamF2YQorKysgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0
L01lc3NhZ2VTZW5kLmphdmEKQEAgLTk5LDcgKzk5LDcgQEAgcHVibGljIEZsb3dJbmZvIGFuYWx5
c2VDb2RlKEJsb2NrU2NvcGUgY3VycmVudFNjb3BlLCBGbG93Q29udGV4dCBmbG93Q29udGV4dCwg
RmwKIAkJCX0KIAkJCWZsb3dJbmZvID0gdGhpcy5hcmd1bWVudHNbaV0uYW5hbHlzZUNvZGUoY3Vy
cmVudFNjb3BlLCBmbG93Q29udGV4dCwgZmxvd0luZm8pLnVuY29uZGl0aW9uYWxJbml0cygpOwog
CQkJLy8gaWYgYXJndW1lbnQgaXMgYW4gQXV0b0Nsb3NlYWJsZSBpbnNlcnQgaW5mbyB0aGF0IGl0
ICptYXkqIGJlIGNsb3NlZCAoYnkgdGhlIHRhcmdldCBtZXRob2QsIGkuZS4pCi0JCQlmbG93SW5m
byA9IEZha2VkVHJhY2tpbmdWYXJpYWJsZS5tYXJrUGFzc2VkVG9PdXRzaWRlKGN1cnJlbnRTY29w
ZSwgdGhpcy5hcmd1bWVudHNbaV0sIGZsb3dJbmZvLCBudWxsKTsKKwkJCWZsb3dJbmZvID0gRmFr
ZWRUcmFja2luZ1ZhcmlhYmxlLm1hcmtQYXNzZWRUb091dHNpZGUoY3VycmVudFNjb3BlLCB0aGlz
LmFyZ3VtZW50c1tpXSwgZmxvd0luZm8pOwogCQl9CiAJCWFuYWx5c2VBcmd1bWVudHMoY3VycmVu
dFNjb3BlLCBmbG93Q29udGV4dCwgZmxvd0luZm8sIHRoaXMuYmluZGluZywgdGhpcy5hcmd1bWVu
dHMpOwogCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvUXVhbGlmaWVkQWxsb2NhdGlvbkV4cHJl
c3Npb24uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvUXVhbGlmaWVkQWxsb2NhdGlvbkV4cHJlc3Npb24uamF2
YQppbmRleCAwYmQwNWY1Li5lNzBjNDg3IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1F1YWxpZmll
ZEFsbG9jYXRpb25FeHByZXNzaW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9RdWFsaWZpZWRBbGxv
Y2F0aW9uRXhwcmVzc2lvbi5qYXZhCkBAIC04Miw3ICs4Miw3IEBAIHB1YmxpYyBjbGFzcyBRdWFs
aWZpZWRBbGxvY2F0aW9uRXhwcmVzc2lvbiBleHRlbmRzIEFsbG9jYXRpb25FeHByZXNzaW9uIHsK
IAkJaWYgKHRoaXMuYXJndW1lbnRzICE9IG51bGwpIHsKIAkJCWZvciAoaW50IGkgPSAwLCBjb3Vu
dCA9IHRoaXMuYXJndW1lbnRzLmxlbmd0aDsgaSA8IGNvdW50OyBpKyspIHsKIAkJCQkvLyBpZiBh
cmd1bWVudCBpcyBhbiBBdXRvQ2xvc2VhYmxlIGluc2VydCBpbmZvIHRoYXQgaXQgKm1heSogYmUg
Y2xvc2VkIChieSB0aGUgdGFyZ2V0IG1ldGhvZCwgaS5lLikKLQkJCQlmbG93SW5mbyA9IEZha2Vk
VHJhY2tpbmdWYXJpYWJsZS5tYXJrUGFzc2VkVG9PdXRzaWRlKGN1cnJlbnRTY29wZSwgdGhpcy5h
cmd1bWVudHNbaV0sIGZsb3dJbmZvLCBudWxsKTsKKwkJCQlmbG93SW5mbyA9IEZha2VkVHJhY2tp
bmdWYXJpYWJsZS5tYXJrUGFzc2VkVG9PdXRzaWRlKGN1cnJlbnRTY29wZSwgdGhpcy5hcmd1bWVu
dHNbaV0sIGZsb3dJbmZvKTsKIAkJCQlmbG93SW5mbyA9IHRoaXMuYXJndW1lbnRzW2ldLmFuYWx5
c2VDb2RlKGN1cnJlbnRTY29wZSwgZmxvd0NvbnRleHQsIGZsb3dJbmZvKTsKIAkJCQlpZiAoKHRo
aXMuYXJndW1lbnRzW2ldLmltcGxpY2l0Q29udmVyc2lvbiAmIFR5cGVJZHMuVU5CT1hJTkcpICE9
IDApIHsKIAkJCQkJdGhpcy5hcmd1bWVudHNbaV0uY2hlY2tOUEUoY3VycmVudFNjb3BlLCBmbG93
Q29udGV4dCwgZmxvd0luZm8pOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CbG9ja1Njb3Bl
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Jsb2NrU2NvcGUuamF2YQppbmRleCA1ZTM0NmU5Li42ODA0
Zjg5IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Jsb2NrU2NvcGUuamF2YQorKysgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvbG9va3VwL0Jsb2NrU2NvcGUuamF2YQpAQCAtMTAwMyw3ICsxMDAzLDggQEAgcHVibGljIHZv
aWQgY2hlY2tVbmNsb3NlZENsb3NlYWJsZXMoRmxvd0luZm8gZmxvd0luZm8sIEFTVE5vZGUgbG9j
YXRpb24sIEJsb2NrU2MKIAkJcmV0dXJuOwogCX0KIAlpZiAobG9jYXRpb24gIT0gbnVsbCAmJiBm
bG93SW5mby5yZWFjaE1vZGUoKSAhPSAwKSByZXR1cm47Ci0JZm9yIChpbnQgaT0wOyBpPHRoaXMu
dHJhY2tpbmdWYXJpYWJsZXMuc2l6ZSgpOyBpKyspIHsKKwlpbnQgdHJhY2tWYXJzTGVuID0gdGhp
cy50cmFja2luZ1ZhcmlhYmxlcy5zaXplKCk7CisJZm9yIChpbnQgaT0wOyBpPHRyYWNrVmFyc0xl
bjsgaSsrKSB7CiAJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSB0cmFja2luZ1ZhciA9IChGYWtlZFRy
YWNraW5nVmFyaWFibGUpIHRoaXMudHJhY2tpbmdWYXJpYWJsZXMuZ2V0KGkpOwogCQlpZiAobG9j
YXRpb24gIT0gbnVsbCAmJiB0cmFja2luZ1Zhci5vcmlnaW5hbEJpbmRpbmcgIT0gbnVsbCAmJiBm
bG93SW5mby5pc0RlZmluaXRlbHlOdWxsKHRyYWNraW5nVmFyLm9yaWdpbmFsQmluZGluZykpCiAJ
CQljb250aW51ZTsgLy8gcmVwb3J0aW5nIGFnYWluc3QgYSBzcGVjaWZpYyBsb2NhdGlvbiwgcmVz
b3VyY2UgaXMgbnVsbCBhdCB0aGlzIGZsb3csIGRvbid0IGNvbXBsYWluCg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="0"
              isprivate="0"
          >
            <attachid>209374</attachid>
            <date>2012-01-12 08:43:00 -0500</date>
            <delta_ts>2012-01-13 16:17:57 -0500</delta_ts>
            <desc>ResourceLeakTests.java</desc>
            <filename>ResourceLeakTests.java</filename>
            <type>text/plain</type>
            <size>103167</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioKICogQ29weXJpZ2h0IChjKSAyMDExLCAyMDEyIEdLIFNv
ZnR3YXJlIEFHIGFuZCBvdGhlcnMuCiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3Jh
bSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICogYXJlIG1hZGUgYXZhaWxhYmxlIHVu
ZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAqIHdoaWNo
IGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAqIGh0
dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCiAqCiAqIENvbnRyaWJ1dG9y
czoKICogICAgIFN0ZXBoYW4gSGVycm1hbm4gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRp
b24KICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKiovCnBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmNvcmUu
dGVzdHMuY29tcGlsZXIucmVncmVzc2lvbjsKCmltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uOwpp
bXBvcnQgamF2YS5uZXQuVVJMOwppbXBvcnQgamF2YS51dGlsLk1hcDsKCmltcG9ydCBqdW5pdC5m
cmFtZXdvcmsuVGVzdDsKCmltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuRmlsZUxvY2F0
b3I7CmltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuUGF0aDsKaW1wb3J0IG9yZy5lY2xp
cHNlLmNvcmUucnVudGltZS5QbGF0Zm9ybTsKaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLkph
dmFDb3JlOwppbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNsYXNzZm10
LkNsYXNzRmlsZUNvbnN0YW50czsKaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5pbXBsLkNvbXBpbGVyT3B0aW9uczsKCnB1YmxpYyBjbGFzcyBSZXNvdXJjZUxlYWtUZXN0
cyBleHRlbmRzIEFic3RyYWN0UmVncmVzc2lvblRlc3QgewoKc3RhdGljIHsKLy8JVEVTVFNfTkFN
RVMgPSBuZXcgU3RyaW5nW10geyAidGVzdDA2MWMifTsKLy8JVEVTVFNfTlVNQkVSUyA9IG5ldyBp
bnRbXSB7IDUwIH07Ci8vCVRFU1RTX1JBTkdFID0gbmV3IGludFtdIHsgMTEsIC0xIH07Cn0KcHVi
bGljIFJlc291cmNlTGVha1Rlc3RzKFN0cmluZyBuYW1lKSB7CglzdXBlcihuYW1lKTsKfQpwdWJs
aWMgc3RhdGljIFRlc3Qgc3VpdGUoKSB7CglyZXR1cm4gYnVpbGRBbGxDb21wbGlhbmNlc1Rlc3RT
dWl0ZShSZXNvdXJjZUxlYWtUZXN0cy5jbGFzcyk7Cn0KCnZvaWQgcnVuVGVzdHNFeHBlY3RpbmdF
cnJvcnNPbmx5SW4xNyhTdHJpbmdbXSB0ZXN0RmlsZXMsIFN0cmluZyBlcnJvcnNJbjE3LCBNYXAg
b3B0aW9ucykgewoJaWYgKHRoaXMuY29tcGxpYW5jZUxldmVsID49IENsYXNzRmlsZUNvbnN0YW50
cy5KREsxXzcpCgkJcnVuTmVnYXRpdmVUZXN0KHRlc3RGaWxlcywgZXJyb3JzSW4xNywgbnVsbCwg
dHJ1ZSwgb3B0aW9ucyk7CgllbHNlCgkJcnVuQ29uZm9ybVRlc3QodGVzdEZpbGVzLCAiIiwgbnVs
bCwgdHJ1ZSwgbnVsbCwgb3B0aW9ucywgbnVsbCk7Cn0KCi8vIEJ1ZyAzNDkzMjYgLSBbMS43XSBu
ZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNvdXJjZXMKLy8gYSBtZXRob2QgdXNl
cyBhbiBBdXRvQ2xvc2VhYmxlIHdpdGhvdXQgZXZlciBjbG9zaW5nIGl0LgpwdWJsaWMgdm9pZCB0
ZXN0MDU2KCkgewoJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKCW9wdGlvbnMu
cHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBp
bGVyT3B0aW9ucy5FUlJPUik7CglvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1Jl
cG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5XQVJOSU5H
KTsKCXRoaXMucnVuTmVnYXRpdmVUZXN0KAoJCW5ldyBTdHJpbmdbXSB7CgkJCSJYLmphdmEiLAoJ
CQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKwoJCQkiaW1wb3J0IGphdmEuaW8uRmlsZVJlYWRl
cjtcbiIgKwoJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKCQkJInB1YmxpYyBj
bGFzcyBYIHtcbiIgKwoJCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIg
KwoJCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xuIiArCgkJ
CSIgICAgICAgIEZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xu
IiArCi8vIG5vdCBpbnZva2luZyBhbnkgbWV0aG9kcyBvbiBGaWxlUmVhZGVyLCB0cnkgdG8gYXZv
aWQgbmVjZXNzYXJ5IGNhbGwgdG8gc3VwZXJjbGFzcygpIGluIHRoZSBjb21waWxlcgovLwkJCSIg
ICAgICAgIGNoYXJbXSBpbiA9IG5ldyBjaGFyWzUwXTtcbiIgKwovLwkJCSIgICAgICAgIGZpbGVS
ZWFkZXIucmVhZChpbik7XG4iICsKCQkJIiAgICB9XG4iICsKCQkJIiAgICBwdWJsaWMgc3RhdGlj
IHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCgkJCSIg
ICAgICAgIG5ldyBYKCkuZm9vKCk7XG4iICsKCQkJIiAgICB9XG4iICsKCQkJIn1cbiIKCQl9LAoJ
CSItLS0tLS0tLS0tXG4iICsKCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDcpXG4iICsK
CQkiCUZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiArCgkJ
IgkgICAgICAgICAgIF5eXl5eXl5eXl5cbiIgKwoJCSJSZXNvdXJjZSBsZWFrOiAnZmlsZVJlYWRl
cicgaXMgbmV2ZXIgY2xvc2VkXG4iICsKCQkiLS0tLS0tLS0tLVxuIiwKCQludWxsLAoJCXRydWUs
CgkJb3B0aW9ucyk7Cn0KLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNz
aW5nIHRyeS13aXRoLXJlc291cmNlcwovLyBhIG1ldGhvZCB1c2VzIGFuIEF1dG9DbG9zZWFibGUg
YW5kIGNsb3NlcyBpdCBidXQgbm90IHByb3RlY3RlZCBieSB0LXctciBub3IgcmVndWxhciB0cnkt
ZmluYWxseQpwdWJsaWMgdm9pZCB0ZXN0MDU2YSgpIHsKCU1hcCBvcHRpb25zID0gZ2V0Q29tcGls
ZXJPcHRpb25zKCk7CglvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVu
Y2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwoJb3B0aW9ucy5wdXQoQ29t
cGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBD
b21waWxlck9wdGlvbnMuRVJST1IpOwoJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElP
Tl9SZXBvcnRFeHBsaWNpdGx5Q2xvc2VkQXV0b0Nsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVS
Uk9SKTsKCXJ1blRlc3RzRXhwZWN0aW5nRXJyb3JzT25seUluMTcoCgkJbmV3IFN0cmluZ1tdIHsK
CQkJIlguamF2YSIsCgkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCgkJCSJpbXBvcnQgamF2
YS5pby5GaWxlUmVhZGVyO1xuIiArCgkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIg
KwoJCQkicHVibGljIGNsYXNzIFgge1xuIiArCgkJCSIgICAgdm9pZCBmb28oKSB0aHJvd3MgSU9F
eGNlcHRpb24ge1xuIiArCgkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZp
bGVcIik7XG4iICsKCQkJIiAgICAgICAgRmlsZVJlYWRlciBmaWxlUmVhZGVyID0gbmV3IEZpbGVS
ZWFkZXIoZmlsZSk7XG4iICsKCQkJIiAgICAgICAgY2hhcltdIGluID0gbmV3IGNoYXJbNTBdO1xu
IiArCgkJCSIgICAgICAgIGZpbGVSZWFkZXIucmVhZChpbik7XG4iICsKCQkJIgkJIGZpbGVSZWFk
ZXIuY2xvc2UoKTtcbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkifVxuIgoJCX0sCgkJIi0tLS0tLS0t
LS1cbiIgKwoJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNylcbiIgKwoJCSIJRmlsZVJl
YWRlciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsKCQkiCSAgICAgICAg
ICAgXl5eXl5eXl5eXlxuIiArCgkJIlJlc291cmNlICdmaWxlUmVhZGVyJyBzaG91bGQgYmUgbWFu
YWdlZCBieSB0cnktd2l0aC1yZXNvdXJjZVxuIiArCgkJIi0tLS0tLS0tLS1cbiIsCgkJb3B0aW9u
cyk7Cn0KLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13
aXRoLXJlc291cmNlcwovLyBhIG1ldGhvZCB1c2VzIGFuIEF1dG9DbG9zZWFibGUgYW5kIGNsb3Nl
cyBpdCBwcm9wZXJseSBpbiBhIGZpbmFsbHkgYmxvY2sKcHVibGljIHZvaWQgdGVzdDA1NmIoKSB7
CglNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwoJb3B0aW9ucy5wdXQoQ29tcGls
ZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25z
LkVSUk9SKTsKCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50
aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKCXRoaXMucnVu
Q29uZm9ybVRlc3QoCgkJbmV3IFN0cmluZ1tdIHsKCQkJIlguamF2YSIsCgkJCSJpbXBvcnQgamF2
YS5pby5GaWxlO1xuIiArCgkJCSJpbXBvcnQgamF2YS5pby5GaWxlUmVhZGVyO1xuIiArCgkJCSJp
bXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKwoJCQkicHVibGljIGNsYXNzIFgge1xuIiAr
CgkJCSIgICAgdm9pZCBmb28oKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCgkJCSIgICAgICAg
IEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKCQkJIiAgICAgICAgRmls
ZVJlYWRlciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsKCQkJIiAgICAg
ICAgdHJ5IHtcbiIgKwoJCQkiICAgICAgICAgICAgY2hhcltdIGluID0gbmV3IGNoYXJbNTBdO1xu
IiArCgkJCSIgICAgICAgICAgICBmaWxlUmVhZGVyLnJlYWQoaW4pO1xuIiArCgkJCSIgICAgICAg
IH0gZmluYWxseSB7XG4iICsKCQkJIgkJICAgICBmaWxlUmVhZGVyLmNsb3NlKCk7XG4iICsKCQkJ
IiAgICAgICAgfVxuIiArCgkJCSIgICAgfVxuIiArCgkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lk
IG1haW4oU3RyaW5nW10gYXJncykge1xuIiArCgkJCSIgICAgICAgIHRyeSB7XG4iICsKCQkJIiAg
ICAgICAgICAgIG5ldyBYKCkuZm9vKCk7XG4iICsKCQkJIiAgICAgICAgfSBjYXRjaCAoSU9FeGNl
cHRpb24gaW9leCkge1xuIiArCgkJCSIgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oXCJj
YXVnaHRcIik7XG4iICsKCQkJIiAgICAgICAgfVxuIiArCgkJCSIgICAgfVxuIiArCgkJCSJ9XG4i
CgkJfSwKCQkiY2F1Z2h0IiwgLypvdXRwdXQqLwoJCW51bGwvKmNsYXNzTGlicyovLAoJCXRydWUv
KnNob3VsZEZsdXNoKi8sCgkJbnVsbC8qdm1hcmdzKi8sCgkJb3B0aW9ucywKCQludWxsLypyZXF1
ZXN0b3IqLyk7Cn0KLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5n
IHRyeS13aXRoLXJlc291cmNlcwovLyBhIG1ldGhvZCB1c2VzIGFuIEF1dG9DbG9zZWFibGUgcHJv
cGVybHkgd2l0aGluIHRyeS13aXRoLXJlc291cmNlcy4KcHVibGljIHZvaWQgdGVzdDA1NmMoKSB7
CglpZiAodGhpcy5jb21wbGlhbmNlTGV2ZWwgPCBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV83KSBy
ZXR1cm47IC8vIHQtdy1yIHVzZWQKCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7
CglvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2Vh
YmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwoJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25z
Lk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlv
bnMuV0FSTklORyk7Cgl0aGlzLnJ1bkNvbmZvcm1UZXN0KAoJCW5ldyBTdHJpbmdbXSB7CgkJCSJY
LmphdmEiLAoJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKwoJCQkiaW1wb3J0IGphdmEuaW8u
RmlsZVJlYWRlcjtcbiIgKwoJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKCQkJ
InB1YmxpYyBjbGFzcyBYIHtcbiIgKwoJCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0
aW9uIHtcbiIgKwoJCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIp
O1xuIiArCgkJCSIgICAgICAgIHRyeSAoRmlsZVJlYWRlciBmaWxlUmVhZGVyID0gbmV3IEZpbGVS
ZWFkZXIoZmlsZSkpIHtcbiIgKwoJCQkiICAgICAgICAgICAgY2hhcltdIGluID0gbmV3IGNoYXJb
NTBdO1xuIiArCgkJCSIgICAgICAgICAgICBmaWxlUmVhZGVyLnJlYWQoaW4pO1xuIiArCgkJCSIJ
CSB9XG4iICsKCQkJIiAgICB9XG4iICsKCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihT
dHJpbmdbXSBhcmdzKSB7XG4iICsKCQkJIiAgICAgICAgdHJ5IHtcbiIgKwoJCQkiICAgICAgICAg
ICAgbmV3IFgoKS5mb28oKTtcbiIgKwoJCQkiICAgICAgICB9IGNhdGNoIChJT0V4Y2VwdGlvbiBp
b2V4KSB7XG4iICsKCQkJIiAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcImNhdWdodFwi
KTtcbiIgKwoJCQkiICAgICAgICB9XG4iICsKCQkJIiAgICB9XG4iICsKCQkJIn1cbiIKCQl9LAoJ
CSJjYXVnaHQiLCAvKm91dHB1dCovCgkJbnVsbC8qY2xhc3NMaWJzKi8sCgkJdHJ1ZS8qc2hvdWxk
Rmx1c2gqLywKCQludWxsLyp2bWFyZ3MqLywKCQlvcHRpb25zLAoJCW51bGwvKnJlcXVlc3Rvciov
KTsKfQovLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdp
dGgtcmVzb3VyY2VzCi8vIGEgbWV0aG9kIHVzZXMgdHdvIEF1dG9DbG9zZWFibGVzICh0ZXN0aW5n
IGluZGVwZW5kZW50IGFuYWx5c2lzKQovLy0gb25lIGNsb3NlYWJsZSBtYXkgYmUgdW5jbG9zZWQg
YXQgYSBjb25kaXRpb25hbCByZXR1cm4KLy8tIHRoZSBvdGhlciBpcyBvbmx5IGNvbmRpdGlvbmFs
bHkgY2xvc2VkCnB1YmxpYyB2b2lkIHRlc3QwNTZkKCkgewoJTWFwIG9wdGlvbnMgPSBnZXRDb21w
aWxlck9wdGlvbnMoKTsKCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0
VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CglvcHRpb25zLnB1dChD
b21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUs
IENvbXBpbGVyT3B0aW9ucy5XQVJOSU5HKTsKCXRoaXMucnVuTmVnYXRpdmVUZXN0KAoJCW5ldyBT
dHJpbmdbXSB7CgkJCSJYLmphdmEiLAoJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKwoJCQki
aW1wb3J0IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIgKwoJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNl
cHRpb247XG4iICsKCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwoJCQkiICAgIHZvaWQgZm9vKGJv
b2xlYW4gZmxhZzEsIGJvb2xlYW4gZmxhZzIpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKCQkJ
IiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKwoJCQkiICAg
ICAgICBjaGFyW10gaW4gPSBuZXcgY2hhcls1MF07XG4iICsKCQkJIiAgICAgICAgRmlsZVJlYWRl
ciBmaWxlUmVhZGVyMSA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiArCgkJCSIgICAgICAgIGZp
bGVSZWFkZXIxLnJlYWQoaW4pO1xuIiArCgkJCSIgICAgICAgIEZpbGVSZWFkZXIgZmlsZVJlYWRl
cjIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTtcbiIgKwoJCQkiICAgICAgICBmaWxlUmVhZGVyMi5y
ZWFkKGluKTtcbiIgKwoJCQkiICAgICAgICBpZiAoZmxhZzEpIHtcbiIgKwoJCQkiICAgICAgICAg
ICAgZmlsZVJlYWRlcjIuY2xvc2UoKTtcbiIgKwoJCQkiICAgICAgICAgICAgcmV0dXJuO1xuIiAr
CgkJCSIgICAgICAgIH0gZWxzZSBpZiAoZmxhZzIpIHtcbiIgKwoJCQkiICAgICAgICAgICAgZmls
ZVJlYWRlcjIuY2xvc2UoKTtcbiIgKwoJCQkiICAgICAgICB9XG4iICsKCQkJIiAgICAgICAgZmls
ZVJlYWRlcjEuY2xvc2UoKTtcbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkiICAgIHB1YmxpYyBzdGF0
aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKCQkJ
IiAgICAgICAgbmV3IFgoKS5mb28oZmFsc2UsIHRydWUpO1xuIiArCgkJCSIgICAgfVxuIiArCgkJ
CSJ9XG4iCgkJfSwKCQkiLS0tLS0tLS0tLVxuIiArCgkJIjEuIFdBUk5JTkcgaW4gWC5qYXZhIChh
dCBsaW5lIDEwKVxuIiArCgkJIglGaWxlUmVhZGVyIGZpbGVSZWFkZXIyID0gbmV3IEZpbGVSZWFk
ZXIoZmlsZSk7XG4iICsKCQkiCSAgICAgICAgICAgXl5eXl5eXl5eXl5cbiIgKwoJCSJQb3RlbnRp
YWwgcmVzb3VyY2UgbGVhazogJ2ZpbGVSZWFkZXIyJyBtYXkgbm90IGJlIGNsb3NlZFxuIiArCgkJ
Ii0tLS0tLS0tLS1cbiIgKwoJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTQpXG4iICsK
CQkiCXJldHVybjtcbiIgKwoJCSIJXl5eXl5eXlxuIiArCgkJIlJlc291cmNlIGxlYWs6ICdmaWxl
UmVhZGVyMScgaXMgbm90IGNsb3NlZCBhdCB0aGlzIGxvY2F0aW9uXG4iICsKCQkiLS0tLS0tLS0t
LVxuIiwKCQludWxsLAoJCXRydWUsCgkJb3B0aW9ucyk7Cn0KLy8gQnVnIDM0OTMyNiAtIFsxLjdd
IG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNlcwovLyBhIG1ldGhvZCB1
c2VzIHR3byBBdXRvQ2xvc2VhYmxlcyAodGVzdGluZyBpbmRlcGVuZGVudCBhbmFseXNpcykKLy8t
IG9uZSBjbG9zZWFibGUgbWF5IGJlIHVuY2xvc2VkIGF0IGEgY29uZGl0aW9uYWwgcmV0dXJuCi8v
LSB0aGUgb3RoZXIgaXMgb25seSBjb25kaXRpb25hbGx5IGNsb3NlZApwdWJsaWMgdm9pZCB0ZXN0
MDU2ZF9zdXBwcmVzcygpIHsKCWlmICh0aGlzLmNvbXBsaWFuY2VMZXZlbCA8IENsYXNzRmlsZUNv
bnN0YW50cy5KREsxXzUpIHJldHVybjsgLy8gYW5ub3RhdGlvbnMgdXNlZAoJTWFwIG9wdGlvbnMg
PSBnZXRDb21waWxlck9wdGlvbnMoKTsKCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJ
T05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CglvcHRp
b25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRD
bG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5XQVJOSU5HKTsKCW9wdGlvbnMucHV0KENvbXBpbGVy
T3B0aW9ucy5PUFRJT05fU3VwcHJlc3NPcHRpb25hbEVycm9ycywgQ29tcGlsZXJPcHRpb25zLkVO
QUJMRUQpOwoJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCgkJbmV3IFN0cmluZ1tdIHsKCQkJIlguamF2
YSIsCgkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCgkJCSJpbXBvcnQgamF2YS5pby5GaWxl
UmVhZGVyO1xuIiArCgkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKwoJCQkicHVi
bGljIGNsYXNzIFgge1xuIiArCgkJCSIgICAgdm9pZCBmb28oYm9vbGVhbiBmbGFnMSwgYm9vbGVh
biBmbGFnMikgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwoJCQkiICAgICAgICBAU3VwcHJlc3NX
YXJuaW5ncyhcInJlc291cmNlXCIpIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7
IC8vIHVubmVjZXNzYXJ5IHN1cHByZXNzXG4iICsKCQkJIiAgICAgICAgY2hhcltdIGluID0gbmV3
IGNoYXJbNTBdO1xuIiArCgkJCSIgICAgICAgIEZpbGVSZWFkZXIgZmlsZVJlYWRlcjEgPSBuZXcg
RmlsZVJlYWRlcihmaWxlKTtcbiIgKwoJCQkiICAgICAgICBmaWxlUmVhZGVyMS5yZWFkKGluKTtc
biIgKwoJCQkiICAgICAgICBAU3VwcHJlc3NXYXJuaW5ncyhcInJlc291cmNlXCIpIEZpbGVSZWFk
ZXIgZmlsZVJlYWRlcjIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTsgLy8gdXNlZnVsIHN1cHByZXNz
XG4iICsKCQkJIiAgICAgICAgZmlsZVJlYWRlcjIucmVhZChpbik7XG4iICsKCQkJIiAgICAgICAg
aWYgKGZsYWcxKSB7XG4iICsKCQkJIiAgICAgICAgICAgIGZpbGVSZWFkZXIyLmNsb3NlKCk7XG4i
ICsKCQkJIiAgICAgICAgICAgIHJldHVybjsgLy8gbm90IHN1cHByZXNzZWRcbiIgKwoJCQkiICAg
ICAgICB9IGVsc2UgaWYgKGZsYWcyKSB7XG4iICsKCQkJIiAgICAgICAgICAgIGZpbGVSZWFkZXIy
LmNsb3NlKCk7XG4iICsKCQkJIiAgICAgICAgfVxuIiArCgkJCSIgICAgICAgIGZpbGVSZWFkZXIx
LmNsb3NlKCk7XG4iICsKCQkJIiAgICB9XG4iICsKCQkJIiAgICBAU3VwcHJlc3NXYXJuaW5ncyhc
InJlc291cmNlXCIpIC8vIHVzZWZ1bCBzdXBwcmVzc1xuIiArCgkJCSIgICAgdm9pZCBiYXIoKSB0
aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCgkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxl
KFwic29tZWZpbGVcIik7XG4iICsKCQkJIiAgICAgICAgRmlsZVJlYWRlciBmaWxlUmVhZGVyID0g
bmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsKCQkJIiAgICAgICAgY2hhcltdIGluID0gbmV3IGNo
YXJbNTBdO1xuIiArCgkJCSIgICAgICAgIGZpbGVSZWFkZXIucmVhZChpbik7XG4iICsKCQkJIiAg
ICB9XG4iICsKCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB0
aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCgkJCSIgICAgICAgIG5ldyBYKCkuZm9vKGZhbHNlLCB0
cnVlKTtcbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkifVxuIgoJCX0sCgkJIi0tLS0tLS0tLS1cbiIg
KwoJCSIxLiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSA2KVxuIiArCgkJIglAU3VwcHJlc3NX
YXJuaW5ncyhcInJlc291cmNlXCIpIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7
IC8vIHVubmVjZXNzYXJ5IHN1cHByZXNzXG4iICsKCQkiCSAgICAgICAgICAgICAgICAgIF5eXl5e
Xl5eXl5cbiIgKwoJCSJVbm5lY2Vzc2FyeSBAU3VwcHJlc3NXYXJuaW5ncyhcInJlc291cmNlXCIp
XG4iICsKCQkiLS0tLS0tLS0tLVxuIiArCgkJIjIuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAx
NClcbiIgKwoJCSIJcmV0dXJuOyAvLyBub3Qgc3VwcHJlc3NlZFxuIiArCgkJIgleXl5eXl5eXG4i
ICsKCQkiUmVzb3VyY2UgbGVhazogJ2ZpbGVSZWFkZXIxJyBpcyBub3QgY2xvc2VkIGF0IHRoaXMg
bG9jYXRpb25cbiIgKwoJCSItLS0tLS0tLS0tXG4iLAoJCW51bGwsCgkJdHJ1ZSwKCQlvcHRpb25z
KTsKfQovLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdp
dGgtcmVzb3VyY2VzCi8vIEJ1ZyAzNjIzMzIgLSBPbmx5IHJlcG9ydCBwb3RlbnRpYWwgbGVhayB3
aGVuIGNsb3NlYWJsZSBub3QgY3JlYXRlZCBpbiB0aGUgbG9jYWwgc2NvcGUKLy8gb25lIG1ldGhv
ZCByZXR1cm5zIGFuIEF1dG9DbGVhc2JsZSwgYSBzZWNvbmQgbWV0aG9kIHVzZXMgdGhpcyBvYmpl
Y3Qgd2l0aG91dCBldmVyIGNsb3NpbmcgaXQuCnB1YmxpYyB2b2lkIHRlc3QwNTZlKCkgewoJTWFw
IG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0
aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJP
Uik7CglvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5
VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Cgl0aGlzLnJ1bk5lZ2F0
aXZlVGVzdCgKCQluZXcgU3RyaW5nW10gewoJCQkiWC5qYXZhIiwKCQkJImltcG9ydCBqYXZhLmlv
LkZpbGU7XG4iICsKCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFkZXI7XG4iICsKCQkJImltcG9y
dCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCgkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKCQkJ
IiAgICBGaWxlUmVhZGVyIGdldFJlYWRlcihTdHJpbmcgZmlsZW5hbWUpIHRocm93cyBJT0V4Y2Vw
dGlvbiB7XG4iICsKCQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwi
KTtcbiIgKwoJCQkiICAgICAgICBGaWxlUmVhZGVyIGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRl
cihmaWxlKTtcbiIgKwoJCQkiICAgICAgICByZXR1cm4gZmlsZVJlYWRlcjtcbiIgKyAJCS8vIGRv
bid0IGNvbXBsYWluIGhlcmUsIHBhc3MgcmVzcG9uc2liaWxpdHkgdG8gY2FsbGVyCgkJCSIgICAg
fVxuIiArCgkJCSIgICAgdm9pZCBmb28oKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCgkJCSIg
ICAgICAgIEZpbGVSZWFkZXIgcmVhZGVyID0gZ2V0UmVhZGVyKFwic29tZWZpbGVcIik7XG4iICsK
CQkJIiAgICAgICAgY2hhcltdIGluID0gbmV3IGNoYXJbNTBdO1xuIiArCgkJCSIgICAgICAgIHJl
YWRlci5yZWFkKGluKTtcbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkiICAgIHB1YmxpYyBzdGF0aWMg
dm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKCQkJIiAg
ICAgICAgbmV3IFgoKS5mb28oKTtcbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkifVxuIgoJCX0sCgkJ
Ii0tLS0tLS0tLS1cbiIgKwoJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTEpXG4iICsK
CQkiCUZpbGVSZWFkZXIgcmVhZGVyID0gZ2V0UmVhZGVyKFwic29tZWZpbGVcIik7XG4iICsKCQki
CSAgICAgICAgICAgXl5eXl5eXG4iICsKCQkiUG90ZW50aWFsIHJlc291cmNlIGxlYWs6IFwncmVh
ZGVyXCcgbWF5IG5vdCBiZSBjbG9zZWRcbiIgKwoJCSItLS0tLS0tLS0tXG4iLAoJCW51bGwsCgkJ
dHJ1ZSwKCQlvcHRpb25zKTsKfQovLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9y
IG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCi8vIGEgbWV0aG9kIGV4cGxpY2l0bHkgY2xvc2Vz
IGl0cyBBdXRvQ2xvc2VhYmxlIHJhdGhlciB0aGFuIHVzaW5nIHQtdy1yCnB1YmxpYyB2b2lkIHRl
c3QwNTZmKCkgewoJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKCW9wdGlvbnMu
cHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBp
bGVyT3B0aW9ucy5FUlJPUik7CglvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1Jl
cG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5XQVJOSU5H
KTsKCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0RXhwbGljaXRseUNs
b3NlZEF1dG9DbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CglydW5UZXN0c0V4cGVj
dGluZ0Vycm9yc09ubHlJbjE3KAoJCW5ldyBTdHJpbmdbXSB7CgkJCSJYLmphdmEiLAoJCQkiaW1w
b3J0IGphdmEuaW8uRmlsZTtcbiIgKwoJCQkiaW1wb3J0IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIg
KwoJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKCQkJInB1YmxpYyBjbGFzcyBY
IHtcbiIgKwoJCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwoJCQki
ICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xuIiArCgkJCSIgICAg
ICAgIEZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG51bGw7XG4iICsKCQkJIiAgICAgICAgdHJ5IHtc
biIgKwoJCQkiICAgICAgICAgICAgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xu
IiArCgkJCSIgICAgICAgICAgICBjaGFyW10gaW4gPSBuZXcgY2hhcls1MF07XG4iICsKCQkJIiAg
ICAgICAgICAgIGZpbGVSZWFkZXIucmVhZChpbik7XG4iICsKCQkJIiAgICAgICAgfSBmaW5hbGx5
IHtcbiIgKwoJCQkiICAgICAgICAgICAgZmlsZVJlYWRlci5jbG9zZSgpO1xuIiArCgkJCSIgICAg
ICAgIH1cbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkifVxuIgoJCX0sCgkJIi0tLS0tLS0tLS1cbiIg
KwoJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNylcbiIgKwoJCSIJRmlsZVJlYWRlciBm
aWxlUmVhZGVyID0gbnVsbDtcbiIgKwoJCSIJICAgICAgICAgICBeXl5eXl5eXl5eXG4iICsKCQki
UmVzb3VyY2UgJ2ZpbGVSZWFkZXInIHNob3VsZCBiZSBtYW5hZ2VkIGJ5IHRyeS13aXRoLXJlc291
cmNlXG4iICsKCQkiLS0tLS0tLS0tLVxuIiwKCQlvcHRpb25zKTsKfQovLyBCdWcgMzQ5MzI2IC0g
WzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCi8vIGFuIEF1
dG9DbG9zZWFibGUgbG9jYWwgaXMgcmUtYXNzaWduZWQKcHVibGljIHZvaWQgdGVzdDA1NmcoKSB7
CglNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwoJb3B0aW9ucy5wdXQoSmF2YUNv
cmUuQ09NUElMRVJfUEJfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuRVJST1Ip
OwoJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfUE9URU5USUFMTFlfVU5DTE9TRURf
Q0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7CglvcHRpb25zLnB1dChKYXZhQ29y
ZS5DT01QSUxFUl9QQl9FWFBMSUNJVExZX0NMT1NFRF9BVVRPQ0xPU0VBQkxFLCBDb21waWxlck9w
dGlvbnMuSUdOT1JFKTsKCXRoaXMucnVuTmVnYXRpdmVUZXN0KAoJCW5ldyBTdHJpbmdbXSB7CgkJ
CSJYLmphdmEiLAoJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKwoJCQkiaW1wb3J0IGphdmEu
aW8uRmlsZVJlYWRlcjtcbiIgKwoJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsK
CQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwoJCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhj
ZXB0aW9uIHtcbiIgKwoJCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxl
XCIpO1xuIiArCgkJCSIgICAgICAgIEZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVh
ZGVyKGZpbGUpO1xuIiArCgkJCSIgICAgICAgIGNoYXJbXSBpbiA9IG5ldyBjaGFyWzUwXTtcbiIg
KwoJCQkiICAgICAgICBmaWxlUmVhZGVyLnJlYWQoaW4pO1xuIiArCgkJCSIgICAgICAgIGZpbGVS
ZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTtcbiIgKwoJCQkiICAgICAgICBmaWxlUmVhZGVy
LnJlYWQoaW4pO1xuIiArCgkJCSIgICAgICAgIGZpbGVSZWFkZXIuY2xvc2UoKTtcbiIgKwoJCQki
ICAgICAgICBmaWxlUmVhZGVyID0gbnVsbDtcbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkiICAgIHB1
YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7
XG4iICsKCQkJIiAgICAgICAgbmV3IFgoKS5mb28oKTtcbiIgKwoJCQkiICAgIH1cbiIgKwoJCQki
fVxuIgoJCX0sCgkJIi0tLS0tLS0tLS1cbiIgKwoJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxp
bmUgMTApXG4iICsKCQkiCWZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTtcbiIgKwoJ
CSIJXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXG4iICsKCQkiUmVzb3VyY2UgbGVh
azogJ2ZpbGVSZWFkZXInIGlzIG5vdCBjbG9zZWQgYXQgdGhpcyBsb2NhdGlvblxuIiArCgkJIi0t
LS0tLS0tLS1cbiIsCgkJbnVsbCwKCQl0cnVlLAoJCW9wdGlvbnMpOwp9Ci8vIEJ1ZyAzNDkzMjYg
LSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNvdXJjZXMKLy8gYW4g
QXV0b0Nsb3NlYWJsZSBsb2NhbCBpcyByZS1hc3NpZ25lZCBhZnRlciBudWxsLWFzc2lnbmVkCnB1
YmxpYyB2b2lkIHRlc3QwNTZnMigpIHsKCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25z
KCk7CglvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9VTkNMT1NFRF9DTE9TRUFCTEUs
IENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CglvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9Q
Ql9QT1RFTlRJQUxMWV9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5XQVJOSU5H
KTsKCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX0VYUExJQ0lUTFlfQ0xPU0VEX0FV
VE9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5JR05PUkUpOwoJdGhpcy5ydW5OZWdhdGl2ZVRl
c3QoCgkJbmV3IFN0cmluZ1tdIHsKCQkJIlguamF2YSIsCgkJCSJpbXBvcnQgamF2YS5pby5GaWxl
O1xuIiArCgkJCSJpbXBvcnQgamF2YS5pby5GaWxlUmVhZGVyO1xuIiArCgkJCSJpbXBvcnQgamF2
YS5pby5JT0V4Y2VwdGlvbjtcbiIgKwoJCQkicHVibGljIGNsYXNzIFgge1xuIiArCgkJCSIgICAg
dm9pZCBmb28oKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCgkJCSIgICAgICAgIEZpbGUgZmls
ZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKCQkJIiAgICAgICAgRmlsZVJlYWRlciBm
aWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsKCQkJIiAgICAgICAgY2hhcltd
IGluID0gbmV3IGNoYXJbNTBdO1xuIiArCgkJCSIgICAgICAgIGZpbGVSZWFkZXIucmVhZChpbik7
XG4iICsKCQkJIiAgICAgICAgZmlsZVJlYWRlciA9IG51bGw7XG4iICsKCQkJIiAgICAgICAgZmls
ZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiArIC8vIGRvbid0IGNvbXBsYWluIGFn
YWluLCBmaWxlUmVhZGVyIGlzIG51bGwsIHNvIG5vdGhpbmcgY2FuIGxlYWsgaGVyZQoJCQkiICAg
ICAgICBmaWxlUmVhZGVyLnJlYWQoaW4pO1xuIiArCgkJCSIgICAgICAgIGZpbGVSZWFkZXIuY2xv
c2UoKTtcbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWlu
KFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKCQkJIiAgICAgICAgbmV3
IFgoKS5mb28oKTtcbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkifVxuIgoJCX0sCgkJIi0tLS0tLS0t
LS1cbiIgKwoJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTApXG4iICsKCQkiCWZpbGVS
ZWFkZXIgPSBudWxsO1xuIiArCgkJIgleXl5eXl5eXl5eXl5eXl5eXlxuIiArCgkJIlJlc291cmNl
IGxlYWs6ICdmaWxlUmVhZGVyJyBpcyBub3QgY2xvc2VkIGF0IHRoaXMgbG9jYXRpb25cbiIgKwoJ
CSItLS0tLS0tLS0tXG4iLAoJCW51bGwsCgkJdHJ1ZSwKCQlvcHRpb25zKTsKfQovLyBCdWcgMzQ5
MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCi8v
IHR3byBBdXRvQ2xvc2VhYmxlcyBhdCBkaWZmZXJlbnQgbmVzdGluZyBsZXZlbHMgKGFub255bW91
cyBsb2NhbCB0eXBlKQpwdWJsaWMgdm9pZCB0ZXN0MDU2aCgpIHsKCU1hcCBvcHRpb25zID0gZ2V0
Q29tcGlsZXJPcHRpb25zKCk7CglvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9VTkNM
T1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CglvcHRpb25zLnB1dChKYXZh
Q29yZS5DT01QSUxFUl9QQl9QT1RFTlRJQUxMWV9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVy
T3B0aW9ucy5XQVJOSU5HKTsKCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX0VYUExJ
Q0lUTFlfQ0xPU0VEX0FVVE9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5JR05PUkUpOwoJdGhp
cy5ydW5OZWdhdGl2ZVRlc3QoCgkJbmV3IFN0cmluZ1tdIHsKCQkJIlguamF2YSIsCgkJCSJpbXBv
cnQgamF2YS5pby5GaWxlO1xuIiArCgkJCSJpbXBvcnQgamF2YS5pby5GaWxlUmVhZGVyO1xuIiAr
CgkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKwoJCQkicHVibGljIGNsYXNzIFgg
e1xuIiArCgkJCSIgICAgdm9pZCBmb28oKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCgkJCSIg
ICAgICAgIGZpbmFsIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKCQkJ
IiAgICAgICAgZmluYWwgRmlsZVJlYWRlciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoZmls
ZSk7XG4iICsKCQkJIiAgICAgICAgY2hhcltdIGluID0gbmV3IGNoYXJbNTBdO1xuIiArCgkJCSIg
ICAgICAgIGZpbGVSZWFkZXIucmVhZChpbik7XG4iICsKCQkJIiAgICAgICAgbmV3IFJ1bm5hYmxl
KCkge1xuIHB1YmxpYyB2b2lkIHJ1bigpIHtcbiIgKwoJCQkiICAgICAgICAgICAgdHJ5IHtcbiIg
KwoJCQkiICAgICAgICAgICAgICAgIGZpbGVSZWFkZXIuY2xvc2UoKTtcbiIgKwoJCQkiICAgICAg
ICAgICAgICAgIEZpbGVSZWFkZXIgbG9jYWxSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTtc
biIgKwoJCQkiICAgICAgICAgICAgfSBjYXRjaCAoSU9FeGNlcHRpb24gZXgpIHsgLyogbm9wICov
IH1cbiIgKwoJCQkiICAgICAgICB9fS5ydW4oKTtcbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkiICAg
IHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlv
biB7XG4iICsKCQkJIiAgICAgICAgbmV3IFgoKS5mb28oKTtcbiIgKwoJCQkiICAgIH1cbiIgKwoJ
CQkifVxuIgoJCX0sCgkJIi0tLS0tLS0tLS1cbiIgKwoJCSIxLiBXQVJOSU5HIGluIFguamF2YSAo
YXQgbGluZSA3KVxuIiArCgkJIglmaW5hbCBGaWxlUmVhZGVyIGZpbGVSZWFkZXIgPSBuZXcgRmls
ZVJlYWRlcihmaWxlKTtcbiIgKwoJCSIJICAgICAgICAgICAgICAgICBeXl5eXl5eXl5eXG4iICsK
CQkiUG90ZW50aWFsIHJlc291cmNlIGxlYWs6ICdmaWxlUmVhZGVyJyBtYXkgbm90IGJlIGNsb3Nl
ZFxuIiArCgkJIi0tLS0tLS0tLS1cbiIgKwoJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUg
MTQpXG4iICsKCQkiCUZpbGVSZWFkZXIgbG9jYWxSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxl
KTtcbiIgKwoJCSIJICAgICAgICAgICBeXl5eXl5eXl5eXlxuIiArCgkJIlJlc291cmNlIGxlYWs6
ICdsb2NhbFJlYWRlcicgaXMgbmV2ZXIgY2xvc2VkXG4iICsKCQkiLS0tLS0tLS0tLVxuIiwKCQlu
dWxsLAoJCXRydWUsCgkJb3B0aW9ucyk7Cn0KLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3YXJu
aW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNlcwovLyB0aHJlZSBBdXRvQ2xvc2VhYmxl
cyBpbiBkaWZmZXJlbnQgYmxvY2tzIG9mIHRoZSBzYW1lIG1ldGhvZApwdWJsaWMgdm9pZCB0ZXN0
MDU2aSgpIHsKCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CglvcHRpb25zLnB1
dChKYXZhQ29yZS5DT01QSUxFUl9QQl9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9u
cy5FUlJPUik7CglvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9QT1RFTlRJQUxMWV9V
TkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5XQVJOSU5HKTsKCW9wdGlvbnMucHV0
KEphdmFDb3JlLkNPTVBJTEVSX1BCX0VYUExJQ0lUTFlfQ0xPU0VEX0FVVE9DTE9TRUFCTEUsIENv
bXBpbGVyT3B0aW9ucy5JR05PUkUpOwoJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCgkJbmV3IFN0cmlu
Z1tdIHsKCQkJIlguamF2YSIsCgkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCgkJCSJpbXBv
cnQgamF2YS5pby5GaWxlUmVhZGVyO1xuIiArCgkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlv
bjtcbiIgKwoJCQkicHVibGljIGNsYXNzIFgge1xuIiArCgkJCSIgICAgdm9pZCBmb28oYm9vbGVh
biBmMSwgYm9vbGVhbiBmMikgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwoJCQkiICAgICAgICBG
aWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xuIiArCgkJCSIgICAgICAgIGlmIChm
MSkge1xuIiArCgkJCSIgICAgICAgICAgICBGaWxlUmVhZGVyIGZpbGVSZWFkZXIgPSBuZXcgRmls
ZVJlYWRlcihmaWxlKTsgLy8gZXJyOiBub3QgY2xvc2VkXG4iICsKCQkJIiAgICAgICAgICAgIGNo
YXJbXSBpbiA9IG5ldyBjaGFyWzUwXTtcbiIgKwoJCQkiICAgICAgICAgICAgZmlsZVJlYWRlci5y
ZWFkKGluKTtcbiIgKwoJCQkiICAgICAgICAgICAgd2hpbGUgKHRydWUpIHtcbiIgKwoJCQkiICAg
ICAgICAgICAgICAgICBGaWxlUmVhZGVyIGxvb3BSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxl
KTsgLy8gZG9uJ3Qgd2FybiwgcHJvcGVybHkgY2xvc2VkXG4iICsKCQkJIiAgICAgICAgICAgICAg
ICAgbG9vcFJlYWRlci5jbG9zZSgpOyIgKwoJCQkiICAgICAgICAgICAgICAgICBicmVhaztcbiIg
KwoJCQkiICAgICAgICAgICAgfVxuIiArCgkJCSIgICAgICAgIH0gZWxzZSB7XG4iICsKCQkJIiAg
ICAgICAgICAgIEZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpOyAv
LyB3YXJuOiBub3QgY2xvc2VkIG9uIGFsbCBwYXRoc1xuIiArCgkJCSIgICAgICAgICAgICBpZiAo
ZjIpXG4iICsKCQkJIiAgICAgICAgICAgICAgICBmaWxlUmVhZGVyLmNsb3NlKCk7XG4iICsKCQkJ
IiAgICAgICAgfVxuIiArCgkJCSIgICAgfVxuIiArCgkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lk
IG1haW4oU3RyaW5nW10gYXJncykgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwoJCQkiICAgICAg
ICBuZXcgWCgpLmZvbyh0cnVlLCB0cnVlKTtcbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkifVxuIgoJ
CX0sCgkJIi0tLS0tLS0tLS1cbiIgKwoJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgOClc
biIgKwoJCSIJRmlsZVJlYWRlciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7IC8v
IGVycjogbm90IGNsb3NlZFxuIiArCgkJIgkgICAgICAgICAgIF5eXl5eXl5eXl5cbiIgKwoJCSJS
ZXNvdXJjZSBsZWFrOiAnZmlsZVJlYWRlcicgaXMgbmV2ZXIgY2xvc2VkXG4iICsKCQkiLS0tLS0t
LS0tLVxuIiArCgkJIjIuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDE2KVxuIiArCgkJIglG
aWxlUmVhZGVyIGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTsgLy8gd2Fybjogbm90
IGNsb3NlZCBvbiBhbGwgcGF0aHNcbiIgKwoJCSIJICAgICAgICAgICBeXl5eXl5eXl5eXG4iICsK
CQkiUG90ZW50aWFsIHJlc291cmNlIGxlYWs6ICdmaWxlUmVhZGVyJyBtYXkgbm90IGJlIGNsb3Nl
ZFxuIiArCgkJIi0tLS0tLS0tLS1cbiIsCgkJbnVsbCwKCQl0cnVlLAoJCW9wdGlvbnMpOwp9Ci8v
IEJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNv
dXJjZXMKLy8gdGhyZWUgQXV0b0Nsb3NlYWJsZXMgaW4gZGlmZmVyZW50IGJsb2NrcyBvZiB0aGUg
c2FtZSBtZXRob2QgLSBwcm9ibGVtcyBpZ25vcmVkCnB1YmxpYyB2b2lkIHRlc3QwNTZpX2lnbm9y
ZSgpIHsKCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CglvcHRpb25zLnB1dChK
YXZhQ29yZS5DT01QSUxFUl9QQl9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5J
R05PUkUpOwoJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfUE9URU5USUFMTFlfVU5D
TE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuSUdOT1JFKTsKCW9wdGlvbnMucHV0KEph
dmFDb3JlLkNPTVBJTEVSX1BCX0VYUExJQ0lUTFlfQ0xPU0VEX0FVVE9DTE9TRUFCTEUsIENvbXBp
bGVyT3B0aW9ucy5JR05PUkUpOwoJdGhpcy5ydW5Db25mb3JtVGVzdCgKCQluZXcgU3RyaW5nW10g
ewoJCQkiWC5qYXZhIiwKCQkJImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsKCQkJImltcG9ydCBq
YXZhLmlvLkZpbGVSZWFkZXI7XG4iICsKCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xu
IiArCgkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKCQkJIiAgICB2b2lkIGZvbyhib29sZWFuIGYx
LCBib29sZWFuIGYyKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCgkJCSIgICAgICAgIEZpbGUg
ZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKCQkJIiAgICAgICAgaWYgKGYxKSB7
XG4iICsKCQkJIiAgICAgICAgICAgIEZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVh
ZGVyKGZpbGUpOyAvLyBlcnI6IG5vdCBjbG9zZWRcbiIgKwoJCQkiICAgICAgICAgICAgY2hhcltd
IGluID0gbmV3IGNoYXJbNTBdO1xuIiArCgkJCSIgICAgICAgICAgICBmaWxlUmVhZGVyLnJlYWQo
aW4pO1xuIiArCgkJCSIgICAgICAgICAgICB3aGlsZSAodHJ1ZSkge1xuIiArCgkJCSIgICAgICAg
ICAgICAgICAgIEZpbGVSZWFkZXIgbG9vcFJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpOyAv
LyBkb24ndCB3YXJuLCBwcm9wZXJseSBjbG9zZWRcbiIgKwoJCQkiICAgICAgICAgICAgICAgICBs
b29wUmVhZGVyLmNsb3NlKCk7IiArCgkJCSIgICAgICAgICAgICAgICAgIGJyZWFrO1xuIiArCgkJ
CSIgICAgICAgICAgICB9XG4iICsKCQkJIiAgICAgICAgfSBlbHNlIHtcbiIgKwoJCQkiICAgICAg
ICAgICAgRmlsZVJlYWRlciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7IC8vIHdh
cm46IG5vdCBjbG9zZWQgb24gYWxsIHBhdGhzXG4iICsKCQkJIiAgICAgICAgICAgIGlmIChmMilc
biIgKwoJCQkiICAgICAgICAgICAgICAgIGZpbGVSZWFkZXIuY2xvc2UoKTtcbiIgKwoJCQkiICAg
ICAgICB9XG4iICsKCQkJIiAgICB9XG4iICsKCQkJIn1cbiIKCQl9LAoJCSIiLAoJCW51bGwsCgkJ
dHJ1ZSwKCQludWxsLAoJCW9wdGlvbnMsCgkJbnVsbCk7Cn0KLy8gQnVnIDM0OTMyNiAtIFsxLjdd
IG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNlcwovLyB0aHJlZSBBdXRv
Q2xvc2VhYmxlcyBpbiBkaWZmZXJlbnQgYmxvY2tzIG9mIHRoZSBzYW1lIG1ldGhvZApwdWJsaWMg
dm9pZCB0ZXN0MDU2aTIoKSB7CglNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwoJ
b3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21w
aWxlck9wdGlvbnMuRVJST1IpOwoJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfUE9U
RU5USUFMTFlfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwoJb3B0
aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfRVhQTElDSVRMWV9DTE9TRURfQVVUT0NMT1NF
QUJMRSwgQ29tcGlsZXJPcHRpb25zLklHTk9SRSk7Cgl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKCQlu
ZXcgU3RyaW5nW10gewoJCQkiWC5qYXZhIiwKCQkJImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsK
CQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFkZXI7XG4iICsKCQkJImltcG9ydCBqYXZhLmlvLklP
RXhjZXB0aW9uO1xuIiArCgkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKCQkJIiAgICB2b2lkIGZv
byhib29sZWFuIGYxLCBib29sZWFuIGYyKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCgkJCSIg
ICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKCQkJIiAgICAg
ICAgaWYgKGYxKSB7XG4iICsKCQkJIiAgICAgICAgICAgIEZpbGVSZWFkZXIgZmlsZVJlYWRlciA9
IG5ldyBGaWxlUmVhZGVyKGZpbGUpOyAvLyBwcm9wZXJseSBjbG9zZWRcbiIgKwoJCQkiICAgICAg
ICAgICAgY2hhcltdIGluID0gbmV3IGNoYXJbNTBdO1xuIiArCgkJCSIgICAgICAgICAgICBmaWxl
UmVhZGVyLnJlYWQoaW4pO1xuIiArCgkJCSIgICAgICAgICAgICB3aGlsZSAodHJ1ZSkge1xuIiAr
CgkJCSIgICAgICAgICAgICAgICAgICBmaWxlUmVhZGVyLmNsb3NlKCk7XG4iICsKCQkJIiAgICAg
ICAgICAgICAgICAgIEZpbGVSZWFkZXIgbG9vcFJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUp
OyAvLyBkb24ndCB3YXJuLCBwcm9wZXJseSBjbG9zZWRcbiIgKwoJCQkiICAgICAgICAgICAgICAg
ICAgbG9vcFJlYWRlci5jbG9zZSgpO1xuIiArCgkJCSIgICAgICAgICAgICAgICAgICBicmVhaztc
biIgKwoJCQkiICAgICAgICAgICAgfVxuIiArCgkJCSIgICAgICAgIH0gZWxzZSB7XG4iICsKCQkJ
IiAgICAgICAgICAgIEZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUp
OyAvLyB3YXJuOiBub3QgY2xvc2VkIG9uIGFsbCBwYXRoc1xuIiArCgkJCSIgICAgICAgICAgICBp
ZiAoZjIpXG4iICsKCQkJIiAgICAgICAgICAgICAgICBmaWxlUmVhZGVyLmNsb3NlKCk7XG4iICsK
CQkJIiAgICAgICAgfVxuIiArCgkJCSIgICAgfVxuIiArCgkJCSIgICAgcHVibGljIHN0YXRpYyB2
b2lkIG1haW4oU3RyaW5nW10gYXJncykgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwoJCQkiICAg
ICAgICBuZXcgWCgpLmZvbyh0cnVlLCB0cnVlKTtcbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkifVxu
IgoJCX0sCgkJIi0tLS0tLS0tLS1cbiIgKwoJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUg
MTgpXG4iICsKCQkiCUZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUp
OyAvLyB3YXJuOiBub3QgY2xvc2VkIG9uIGFsbCBwYXRoc1xuIiArCgkJIgkgICAgICAgICAgIF5e
Xl5eXl5eXl5cbiIgKwoJCSJQb3RlbnRpYWwgcmVzb3VyY2UgbGVhazogJ2ZpbGVSZWFkZXInIG1h
eSBub3QgYmUgY2xvc2VkXG4iICsKCQkiLS0tLS0tLS0tLVxuIiwKCQludWxsLAoJCXRydWUsCgkJ
b3B0aW9ucyk7Cn0KLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5n
IHRyeS13aXRoLXJlc291cmNlcwovLyBhIG1ldGhvZCB1c2VzIGFuIEF1dG9DbG9zZWFibGUgd2l0
aG91dCBjbG9zaW5nIGl0IGxvY2FsbHkgYnV0IHBhc3NpbmcgYXMgYXJnIHRvIGFub3RoZXIgbWV0
aG9kCnB1YmxpYyB2b2lkIHRlc3QwNTZqKCkgewoJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9w
dGlvbnMoKTsKCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9z
ZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CglvcHRpb25zLnB1dChDb21waWxl
ck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBp
bGVyT3B0aW9ucy5FUlJPUik7Cgl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKCQluZXcgU3RyaW5nW10g
ewoJCQkiWC5qYXZhIiwKCQkJImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsKCQkJImltcG9ydCBq
YXZhLmlvLkZpbGVSZWFkZXI7XG4iICsKCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xu
IiArCgkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKCQkJIiAgICB2b2lkIGZvbygpIHRocm93cyBJ
T0V4Y2VwdGlvbiB7XG4iICsKCQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21l
ZmlsZVwiKTtcbiIgKwoJCQkiICAgICAgICBGaWxlUmVhZGVyIGZpbGVSZWFkZXIgPSBuZXcgRmls
ZVJlYWRlcihmaWxlKTtcbiIgKwoJCQkiICAgICAgICByZWFkKGZpbGVSZWFkZXIpO1xuIiArCgkJ
CSIgICAgfVxuIiArCgkJCSIgICAgdm9pZCByZWFkKEZpbGVSZWFkZXIgcmVhZGVyKSB7IH1cbiIg
KwoJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJ
T0V4Y2VwdGlvbiB7XG4iICsKCQkJIiAgICAgICAgbmV3IFgoKS5mb28oKTtcbiIgKwoJCQkiICAg
IH1cbiIgKwoJCQkifVxuIgoJCX0sCgkJIi0tLS0tLS0tLS1cbiIgKwoJCSIxLiBFUlJPUiBpbiBY
LmphdmEgKGF0IGxpbmUgNylcbiIgKwoJCSIJRmlsZVJlYWRlciBmaWxlUmVhZGVyID0gbmV3IEZp
bGVSZWFkZXIoZmlsZSk7XG4iICsKCQkiCSAgICAgICAgICAgXl5eXl5eXl5eXlxuIiArCgkJIlBv
dGVudGlhbCByZXNvdXJjZSBsZWFrOiAnZmlsZVJlYWRlcicgbWF5IG5vdCBiZSBjbG9zZWRcbiIg
KwoJCSItLS0tLS0tLS0tXG4iLAoJCW51bGwsCgkJdHJ1ZSwKCQlvcHRpb25zKTsKfQovLyBCdWcg
MzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2Vz
Ci8vIGEgbWV0aG9kIHVzZXMgYW4gQXV0b0Nsb3NlYWJsZSB3aXRob3V0IGNsb3NpbmcgaXQgbG9j
YWxseSBidXQgcGFzc2luZyBhcyBhcmcgdG8gYW5vdGhlciBtZXRob2QKcHVibGljIHZvaWQgdGVz
dDA1Nmpjb25kaXRpb25hbCgpIHsKCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7
CglvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2Vh
YmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwoJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25z
Lk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlv
bnMuRVJST1IpOwoJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCgkJbmV3IFN0cmluZ1tdIHsKCQkJIlgu
amF2YSIsCgkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCgkJCSJpbXBvcnQgamF2YS5pby5G
aWxlUmVhZGVyO1xuIiArCgkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKwoJCQki
cHVibGljIGNsYXNzIFgge1xuIiArCgkJCSIgICAgdm9pZCBmb28oYm9vbGVhbiBiKSB0aHJvd3Mg
SU9FeGNlcHRpb24ge1xuIiArCgkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29t
ZWZpbGVcIik7XG4iICsKCQkJIiAgICAgICAgRmlsZVJlYWRlciBmaWxlUmVhZGVyID0gbmV3IEZp
bGVSZWFkZXIoZmlsZSk7XG4iICsKCQkJIiAgICAgICAgc3luY2hyb25pemVkIChiID8gdGhpcyA6
IG5ldyBYKCkpIHtcbiIgKwoJCQkiICAgICAgICAgICAgbmV3IFJlYWREZWxlZ2F0b3IoZmlsZVJl
YWRlcik7XG4iICsKCQkJIiAgICAgICAgfVxuIiArCgkJCSIgICAgfVxuIiArCgkJCSIgICAgY2xh
c3MgUmVhZERlbGVnYXRvciB7IFJlYWREZWxlZ2F0b3IoRmlsZVJlYWRlciByZWFkZXIpIHsgfSB9
XG4iICsKCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB0aHJv
d3MgSU9FeGNlcHRpb24ge1xuIiArCgkJCSIgICAgICAgIG5ldyBYKCkuZm9vKHRydWUpO1xuIiAr
CgkJCSIgICAgfVxuIiArCgkJCSJ9XG4iCgkJfSwKCQkiLS0tLS0tLS0tLVxuIiArCgkJIjEuIEVS
Uk9SIGluIFguamF2YSAoYXQgbGluZSA3KVxuIiArCgkJIglGaWxlUmVhZGVyIGZpbGVSZWFkZXIg
PSBuZXcgRmlsZVJlYWRlcihmaWxlKTtcbiIgKwoJCSIJICAgICAgICAgICBeXl5eXl5eXl5eXG4i
ICsKCQkiUG90ZW50aWFsIHJlc291cmNlIGxlYWs6ICdmaWxlUmVhZGVyJyBtYXkgbm90IGJlIGNs
b3NlZFxuIiArCgkJIi0tLS0tLS0tLS1cbiIsCgkJbnVsbCwKCQl0cnVlLAoJCW9wdGlvbnMpOwp9
Ci8vIEJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1y
ZXNvdXJjZXMKLy8gbWFueSBsb2NhbHMsIHNvbWUgYXJlIEF1dG9DbG9zZWFibGUuCi8vIFVuZm9y
dHVuYXRlbHkgYW5hbHlzaXMgY2Fubm90IHJlc3BlY3QgaG93IGV4Y2VwdGlvbiBleGl0cyBtYXkg
YWZmZWN0IHJhMyBhbmQgcmIzLAovLyBkb2luZyBzbyB3b3VsZCBjcmVhdGUgZmFsc2UgcG9zaXRp
dmVzLgpwdWJsaWMgdm9pZCB0ZXN0MDU2aygpIHsKCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJP
cHRpb25zKCk7CglvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xv
c2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwoJb3B0aW9ucy5wdXQoQ29tcGls
ZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21w
aWxlck9wdGlvbnMuV0FSTklORyk7CglvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9O
X1JlcG9ydEV4cGxpY2l0bHlDbG9zZWRBdXRvQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJS
T1IpOwoJU3RyaW5nIGV4cGVjdGVkUHJvYmxlbXMgPSB0aGlzLmNvbXBsaWFuY2VMZXZlbCA8IENs
YXNzRmlsZUNvbnN0YW50cy5KREsxXzcgPwoJCQkJIi0tLS0tLS0tLS1cbiIgKwoJCQkJIjEuIEVS
Uk9SIGluIFguamF2YSAoYXQgbGluZSAxNSlcbiIgKwoJCQkJIglyYTIgPSBuZXcgRmlsZVJlYWRl
cihmaWxlKTtcbiIgKwoJCQkJIgleXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXlxuIiArCgkJCQki
UmVzb3VyY2UgbGVhazogXCdyYTJcJyBpcyBuZXZlciBjbG9zZWRcbiIgKwoJCQkJIi0tLS0tLS0t
LS1cbiIgKwoJCQkJIjIuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAyOClcbiIgKwoJCQkJIgly
YjIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTtcbiIgKwoJCQkJIgleXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXlxuIiArCgkJCQkiUmVzb3VyY2UgbGVhazogXCdyYjJcJyBpcyBuZXZlciBjbG9zZWRc
biIgKwoJCQkJIi0tLS0tLS0tLS1cbiIKCQkJOgoJCQkJIi0tLS0tLS0tLS1cbiIgKwoJCQkJIjEu
IEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxMilcbiIgKwoJCQkJIglGaWxlUmVhZGVyIHJhMSA9
IG51bGwsIHJhMiA9IG51bGw7XG4iICsKCQkJCSIJICAgICAgICAgICBeXl5cbiIgKwoJCQkJIlJl
c291cmNlICdyYTEnIHNob3VsZCBiZSBtYW5hZ2VkIGJ5IHRyeS13aXRoLXJlc291cmNlXG4iICsK
CQkJCSItLS0tLS0tLS0tXG4iICsKCQkJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTUp
XG4iICsKCQkJCSIJcmEyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsKCQkJCSIJXl5eXl5e
Xl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIgKwoJCQkJIlJlc291cmNlIGxlYWs6ICdyYTInIGlzIG5l
dmVyIGNsb3NlZFxuIiArCgkJCQkiLS0tLS0tLS0tLVxuIiArCgkJCQkiMy4gRVJST1IgaW4gWC5q
YXZhIChhdCBsaW5lIDE2KVxuIiArCgkJCQkiCUZpbGVSZWFkZXIgcmEzID0gbmV3IEZpbGVSZWFk
ZXIoZmlsZSk7XG4iICsKCQkJCSIJICAgICAgICAgICBeXl5cbiIgKwoJCQkJIlJlc291cmNlICdy
YTMnIHNob3VsZCBiZSBtYW5hZ2VkIGJ5IHRyeS13aXRoLXJlc291cmNlXG4iICsKCQkJCSItLS0t
LS0tLS0tXG4iICsKCQkJCSI0LiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMjUpXG4iICsKCQkJ
CSIJRmlsZVJlYWRlciByYjEgPSBudWxsLCByYjIgPSBudWxsO1xuIiArCgkJCQkiCSAgICAgICAg
ICAgXl5eXG4iICsKCQkJCSJSZXNvdXJjZSAncmIxJyBzaG91bGQgYmUgbWFuYWdlZCBieSB0cnkt
d2l0aC1yZXNvdXJjZVxuIiArCgkJCQkiLS0tLS0tLS0tLVxuIiArCgkJCQkiNS4gRVJST1IgaW4g
WC5qYXZhIChhdCBsaW5lIDI4KVxuIiArCgkJCQkiCXJiMiA9IG5ldyBGaWxlUmVhZGVyKGZpbGUp
O1xuIiArCgkJCQkiCV5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXG4iICsKCQkJCSJSZXNvdXJj
ZSBsZWFrOiAncmIyJyBpcyBuZXZlciBjbG9zZWRcbiIgKwoJCQkJIi0tLS0tLS0tLS1cbiIgKwoJ
CQkJIjYuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAyOSlcbiIgKwoJCQkJIglGaWxlUmVhZGVy
IHJiMyA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiArCgkJCQkiCSAgICAgICAgICAgXl5eXG4i
ICsKCQkJCSJSZXNvdXJjZSAncmIzJyBzaG91bGQgYmUgbWFuYWdlZCBieSB0cnktd2l0aC1yZXNv
dXJjZVxuIiArCgkJCQkiLS0tLS0tLS0tLVxuIjsKCXRoaXMucnVuTmVnYXRpdmVUZXN0KAoJCW5l
dyBTdHJpbmdbXSB7CgkJCSJYLmphdmEiLAoJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKwoJ
CQkiaW1wb3J0IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIgKwoJCQkiaW1wb3J0IGphdmEuaW8uSU9F
eGNlcHRpb247XG4iICsKCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwoJCQkiICAgIHZvaWQgZm9v
KCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwoJCQkiICAgICAgICBpbnQgaTAxLCBpMDIsIGkw
MywgaTA0LCBpMDUsIGkwNiwgaTA3LCBpMDgsIGkwOSxcbiIgKwoJCQkiICAgICAgICAgICAgaTEx
LCBpMTIsIGkxMywgaTE0LCBpMTUsIGkxNiwgaTE3LCBpMTgsIGkxOSxcbiIgKwoJCQkiICAgICAg
ICAgICAgaTIxLCBpMjIsIGkyMywgaTI0LCBpMjUsIGkyNiwgaTI3LCBpMjgsIGkyOSxcbiIgKwoJ
CQkiICAgICAgICAgICAgaTMxLCBpMzIsIGkzMywgaTM0LCBpMzUsIGkzNiwgaTM3LCBpMzgsIGkz
OSxcbiIgKwoJCQkiICAgICAgICAgICAgaTQxLCBpNDIsIGk0MywgaTQ0LCBpNDUsIGk0NiwgaTQ3
LCBpNDgsIGk0OTtcbiIgKwoJCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVm
aWxlXCIpO1xuIiArCgkJCSIgICAgICAgIEZpbGVSZWFkZXIgcmExID0gbnVsbCwgcmEyID0gbnVs
bDtcbiIgKwoJCQkiICAgICAgICB0cnkge1xuIiArCgkJCSIgICAgICAgICAgICByYTEgPSBuZXcg
RmlsZVJlYWRlcihmaWxlKTtcbiIgKwoJCQkiICAgICAgICAgICAgcmEyID0gbmV3IEZpbGVSZWFk
ZXIoZmlsZSk7XG4iICsKCQkJIiAgICAgICAgICAgIEZpbGVSZWFkZXIgcmEzID0gbmV3IEZpbGVS
ZWFkZXIoZmlsZSk7XG4iICsKCQkJIiAgICAgICAgICAgIGNoYXJbXSBpbiA9IG5ldyBjaGFyWzUw
XTtcbiIgKwoJCQkiICAgICAgICAgICAgcmExLnJlYWQoaW4pO1xuIiArCgkJCSIgICAgICAgICAg
ICByYTIucmVhZChpbik7XG4iICsKCQkJIiAgICAgICAgICAgIHJhMy5jbG9zZSgpO1xuIiArCgkJ
CSIgICAgICAgIH0gZmluYWxseSB7XG4iICsKCQkJIiAgICAgICAgICAgIHJhMS5jbG9zZSgpO1xu
IiArCgkJCSIgICAgICAgIH1cbiIgKwoJCQkiICAgICAgICBpbnQgaTUxLCBpNTIsIGk1MywgaTU0
LCBpNTUsIGk1NiwgaTU3LCBpNTgsIGk1OSwgaTYwO1xuIiArIC8vIGJleW9uZCB0aGlzIHBvaW50
IGxvY2FscyBhcmUgYW5hbHl6ZWQgdXNpbmcgZXh0cmFCaXRzCgkJCSIgICAgICAgIEZpbGVSZWFk
ZXIgcmIxID0gbnVsbCwgcmIyID0gbnVsbDtcbiIgKwoJCQkiICAgICAgICB0cnkge1xuIiArCgkJ
CSIgICAgICAgICAgICByYjEgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTtcbiIgKwoJCQkiICAgICAg
ICAgICAgcmIyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsKCQkJIiAgICAgICAgICAgIEZp
bGVSZWFkZXIgcmIzID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsKCQkJIiAgICAgICAgICAg
IGNoYXJbXSBpbiA9IG5ldyBjaGFyWzUwXTtcbiIgKwoJCQkiICAgICAgICAgICAgcmIxLnJlYWQo
aW4pO1xuIiArCgkJCSIgICAgICAgICAgICByYjIucmVhZChpbik7XG4iICsKCQkJIiAgICAgICAg
ICAgIHJiMy5jbG9zZSgpO1xuIiArCgkJCSIgICAgICAgIH0gZmluYWxseSB7XG4iICsKCQkJIiAg
ICAgICAgICAgIHJiMS5jbG9zZSgpO1xuIiArCgkJCSIgICAgICAgIH1cbiIgKwoJCQkiICAgIH1c
biIgKwoJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93
cyBJT0V4Y2VwdGlvbiB7XG4iICsKCQkJIiAgICAgICAgbmV3IFgoKS5mb28oKTtcbiIgKwoJCQki
ICAgIH1cbiIgKwoJCQkifVxuIgoJCX0sCgkJZXhwZWN0ZWRQcm9ibGVtcywKCQludWxsLAoJCXRy
dWUsCgkJb3B0aW9ucyk7Cn0KLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBt
aXNzaW5nIHRyeS13aXRoLXJlc291cmNlcwovLyB2YXJpb3VzIG5vbi1wcm9ibGVtcwpwdWJsaWMg
dm9pZCB0ZXN0MDU2bCgpIHsKCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7Cglv
cHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxl
LCBDb21waWxlck9wdGlvbnMuRVJST1IpOwoJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9Q
VElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMu
RVJST1IpOwoJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRFeHBsaWNp
dGx5Q2xvc2VkQXV0b0Nsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKCVN0cmluZyBl
eHBlY3RlZFByb2JsZW1zID0gdGhpcy5jb21wbGlhbmNlTGV2ZWwgPj0gQ2xhc3NGaWxlQ29uc3Rh
bnRzLkpESzFfNyA/CgkJCQkiLS0tLS0tLS0tLVxuIiArCgkJCQkiMS4gRVJST1IgaW4gWC5qYXZh
IChhdCBsaW5lIDgpXG4iICsKCQkJCSIJRmlsZVJlYWRlciBmaWxlUmVhZGVyID0gZ2V0UmVhZGVy
KCk7XG4iICsKCQkJCSIJICAgICAgICAgICBeXl5eXl5eXl5eXG4iICsKCQkJCSJSZXNvdXJjZSAn
ZmlsZVJlYWRlcicgc2hvdWxkIGJlIG1hbmFnZWQgYnkgdHJ5LXdpdGgtcmVzb3VyY2VcbiIgKwoJ
CQkJIi0tLS0tLS0tLS1cbiIgKwoJCQkJIjIuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxMSlc
biIgKwoJCQkJIglGaWxlUmVhZGVyIHIzID0gZ2V0UmVhZGVyKCk7XG4iICsKCQkJCSIJICAgICAg
ICAgICBeXlxuIiArCgkJCQkiUmVzb3VyY2UgJ3IzJyBzaG91bGQgYmUgbWFuYWdlZCBieSB0cnkt
d2l0aC1yZXNvdXJjZVxuIiArCgkJCQkiLS0tLS0tLS0tLVxuIiArCgkJCQkiMy4gRVJST1IgaW4g
WC5qYXZhIChhdCBsaW5lIDI0KVxuIiArCgkJCQkiCUZpbGVSZWFkZXIgcjIgPSBuZXcgRmlsZVJl
YWRlcihuZXcgRmlsZShcImluZXhpc3RcIikpOyAvLyBvbmx5IHBvdGVudGlhbCBwcm9ibGVtOiBj
dG9yIFggYmVsb3cgbWlnaHQgY2xvc2UgcjJcbiIgKwoJCQkJIgkgICAgICAgICAgIF5eXG4iICsK
CQkJCSJQb3RlbnRpYWwgcmVzb3VyY2UgbGVhazogJ3IyJyBtYXkgbm90IGJlIGNsb3NlZFxuIiAr
CgkJCQkiLS0tLS0tLS0tLVxuIgoJCQk6CgkJCQkiLS0tLS0tLS0tLVxuIiArCgkJCQkiMS4gRVJS
T1IgaW4gWC5qYXZhIChhdCBsaW5lIDI0KVxuIiArCgkJCQkiCUZpbGVSZWFkZXIgcjIgPSBuZXcg
RmlsZVJlYWRlcihuZXcgRmlsZShcImluZXhpc3RcIikpOyAvLyBvbmx5IHBvdGVudGlhbCBwcm9i
bGVtOiBjdG9yIFggYmVsb3cgbWlnaHQgY2xvc2UgcjJcbiIgKwoJCQkJIgkgICAgICAgICAgIF5e
XG4iICsKCQkJCSJQb3RlbnRpYWwgcmVzb3VyY2UgbGVhazogJ3IyJyBtYXkgbm90IGJlIGNsb3Nl
ZFxuIiArCgkJCQkiLS0tLS0tLS0tLVxuIjsKCXRoaXMucnVuTmVnYXRpdmVUZXN0KAoJCW5ldyBT
dHJpbmdbXSB7CgkJCSJYLmphdmEiLAoJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKwoJCQki
aW1wb3J0IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIgKwoJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNl
cHRpb247XG4iICsKCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwoJCQkiICAgIFgoRmlsZVJlYWRl
ciByMCkge31cbiIgKyAvLyBkb24ndCBjb21wbGFpbiBhZ2FpbnN0IGFyZ3VtZW50CgkJCSIgICAg
RmlsZVJlYWRlciBnZXRSZWFkZXIoKSB7IHJldHVybiBudWxsOyB9XG4iICsKCQkJIiAgICB2b2lk
IGZvbyhGaWxlUmVhZGVyIHIxKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCgkJCSIgICAgICAg
IEZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IGdldFJlYWRlcigpO1xuIiArCgkJCSIgICAgICAgIGlm
IChmaWxlUmVhZGVyID09IG51bGwpXG4iICsKCQkJIiAgICAgICAgICAgIHJldHVybjtcbiIgKyAv
LyBkb24ndCBjb21wbGFpbiwgcmVzb3VyY2UgaXMgYWN0dWFsbHkgbnVsbAoJCQkiICAgICAgICBG
aWxlUmVhZGVyIHIzID0gZ2V0UmVhZGVyKCk7XG4iICsKCQkJIiAgICAgICAgaWYgKHIzID09IG51
bGwpXG4iICsKCQkJIiAgICAgICAgICAgIHIzID0gbmV3IEZpbGVSZWFkZXIobmV3IEZpbGUoXCJh
YnNlbnRcIikpO1xuIiArIC8vIGRvbid0IGNvbXBsYWluLCBwcmV2aW91cyByZXNvdXJjZSBpcyBh
Y3R1YWxseSBudWxsCgkJCSIgICAgICAgIHRyeSB7XG4iICsKCQkJIiAgICAgICAgICAgIGNoYXJb
XSBpbiA9IG5ldyBjaGFyWzUwXTtcbiIgKwoJCQkiICAgICAgICAgICAgZmlsZVJlYWRlci5yZWFk
KGluKTtcbiIgKwoJCQkiICAgICAgICAgICAgcjEucmVhZChpbik7XG4iICsKCQkJIiAgICAgICAg
fSBmaW5hbGx5IHtcbiIgKwoJCQkiICAgICAgICAgICAgZmlsZVJlYWRlci5jbG9zZSgpO1xuIiAr
CgkJCSIgICAgICAgICAgICByMy5jbG9zZSgpO1xuIiArICAvLyB0aGUgZWZmZWN0IG9mIHRoaXMg
Y2xvc2UoKSBjYWxsIG1pZ2h0IGJlIHNwb2lsZWQgYnkgZXhjZXB0aW9uIGluIGZpbGVSZWFkZXIu
Y2xvc2UoKSBhYm92ZSwgYnV0IHdlIGlnbm9yZSBleGNlcHRpb24gZXhpdHMgaW4gdGhlIGFuYWx5
c2lzCgkJCSIgICAgICAgIH1cbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkiICAgIHB1YmxpYyBzdGF0
aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKCQkJ
IiAgICAgICAgRmlsZVJlYWRlciByMiA9IG5ldyBGaWxlUmVhZGVyKG5ldyBGaWxlKFwiaW5leGlz
dFwiKSk7IC8vIG9ubHkgcG90ZW50aWFsIHByb2JsZW06IGN0b3IgWCBiZWxvdyBtaWdodCBjbG9z
ZSByMlxuIiArCgkJCSIgICAgICAgIG5ldyBYKHIyKS5mb28obmV3IEZpbGVSZWFkZXIobmV3IEZp
bGUoXCJub3R0aGVyZVwiKSkpO1xuIiArCgkJCSIgICAgfVxuIiArCgkJCSJ9XG4iCgkJfSwKCQll
eHBlY3RlZFByb2JsZW1zLAoJCW51bGwsCgkJdHJ1ZSwKCQlvcHRpb25zKTsKfQovLyBCdWcgMzQ5
MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCi8v
IG5lc3RlZCB0cnkgd2l0aCBlYXJseSBleGl0CnB1YmxpYyB2b2lkIHRlc3QwNTZtKCkgewoJTWFw
IG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0
aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJP
Uik7CglvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5
VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Cgl0aGlzLnJ1bkNvbmZv
cm1UZXN0KAoJCW5ldyBTdHJpbmdbXSB7CgkJCSJYLmphdmEiLAoJCQkiaW1wb3J0IGphdmEuaW8u
RmlsZTtcbiIgKwoJCQkiaW1wb3J0IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIgKwoJCQkiaW1wb3J0
IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwoJCQki
ICAgIHZvaWQgZm9vKCkge1xuIiArCgkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwi
c29tZWZpbGVcIik7IiArCgkJCSIgICAgICAgIHRyeSB7XG4iICsKCQkJIiAgICAgICAgICAgIEZp
bGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiArCgkJCSIgICAg
ICAgICAgICB0cnkge1xuIiArCgkJCSIgICAgICAgICAgICAgICAgY2hhcltdIGluID0gbmV3IGNo
YXJbNTBdO1xuIiArCgkJCSIgICAgICAgICAgICAgICAgaWYgKGZpbGVSZWFkZXIucmVhZChpbik9
PTApXG4iICsKCQkJIiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuIiArCgkJCSIgICAgICAg
ICAgICB9IGZpbmFsbHkge1xuIiArCgkJCSIJCSAgICAgICAgIGZpbGVSZWFkZXIuY2xvc2UoKTtc
biIgKwoJCQkiICAgICAgICAgICAgfVxuIiArCgkJCSIgICAgICAgIH0gY2F0Y2ggKElPRXhjZXB0
aW9uIGUpIHtcbiIgKwoJCQkiICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwiY2F1Z2h0
XCIpO1xuIiArCgkJCSIgICAgICAgIH1cbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkiICAgIHB1Ymxp
YyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKwoJCQkiICAgICAgICBuZXcg
WCgpLmZvbygpO1xuIiArCgkJCSIgICAgfVxuIiArCgkJCSJ9XG4iCgkJfSwKCQkiY2F1Z2h0Iiwg
LypvdXRwdXQqLwoJCW51bGwvKmNsYXNzTGlicyovLAoJCXRydWUvKnNob3VsZEZsdXNoKi8sCgkJ
bnVsbC8qdm1hcmdzKi8sCgkJb3B0aW9ucywKCQludWxsLypyZXF1ZXN0b3IqLyk7Cn0KLy8gQnVn
IDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNl
cwovLyBuZXN0ZWQgdHJ5IHNob3VsZCBub3QgaW50ZXJmZXJlIHdpdGggZWFybGllciBhbmFseXNp
cy4KcHVibGljIHZvaWQgdGVzdDA1Nm4oKSB7CglNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0
aW9ucygpOwoJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3Nl
ZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKCW9wdGlvbnMucHV0KENvbXBpbGVy
T3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGls
ZXJPcHRpb25zLkVSUk9SKTsKCXRoaXMucnVuQ29uZm9ybVRlc3QoCgkJbmV3IFN0cmluZ1tdIHsK
CQkJIlguamF2YSIsCgkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCgkJCSJpbXBvcnQgamF2
YS5pby5GaWxlUmVhZGVyO1xuIiArCgkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIg
KwoJCQkiaW1wb3J0IGphdmEuaW8uRmlsZU5vdEZvdW5kRXhjZXB0aW9uO1xuIiArCgkJCSJwdWJs
aWMgY2xhc3MgWCB7XG4iICsKCQkJIiAgICB2b2lkIGZvbyhGaWxlIHNvbWVGaWxlLCBjaGFyW10g
YnVmKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCgkJCSIJCUZpbGVSZWFkZXIgZnIxID0gbmV3
IEZpbGVSZWFkZXIoc29tZUZpbGUpO1xuIiArCgkJCSIJCXRyeSB7XG4iICsKCQkJIgkJCWZyMS5y
ZWFkKGJ1Zik7XG4iICsKCQkJIgkJfSBmaW5hbGx5IHtcbiIgKwoJCQkiCQkJZnIxLmNsb3NlKCk7
XG4iICsKCQkJIgkJfVxuIiArCgkJCSIJCXRyeSB7XG4iICsKCQkJIgkJCUZpbGVSZWFkZXIgZnIz
ID0gbmV3IEZpbGVSZWFkZXIoc29tZUZpbGUpO1xuIiArCgkJCSIJCQl0cnkge1xuIiArCgkJCSIJ
CQl9IGZpbmFsbHkge1xuIiArCgkJCSIJCQkJZnIzLmNsb3NlKCk7XG4iICsKCQkJIgkJCX1cbiIg
KwoJCQkiCQl9IGNhdGNoIChJT0V4Y2VwdGlvbiBlKSB7XG4iICsKCQkJIgkJfVxuIiArCgkJCSIJ
IH1cbiIgKwoJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRo
cm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKCQkJIiAgICAgICAgdHJ5IHtcbiIgKwoJCQkiICAgICAg
ICAgICAgbmV3IFgoKS5mb28obmV3IEZpbGUoXCJtaXNzaW5nXCIpLCBuZXcgY2hhclsxMDBdKTtc
biIgKwoJCQkiICAgICAgICB9IGNhdGNoIChGaWxlTm90Rm91bmRFeGNlcHRpb24gZSkge1xuIiAr
CgkJCSIgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oXCJjYXVnaHRcIik7XG4iICsKCQkJ
IiAgICAgICAgfVxuIiArCgkJCSIgICAgfVxuIiArCgkJCSJ9XG4iCgkJfSwKCQkiY2F1Z2h0Iiwg
LypvdXRwdXQqLwoJCW51bGwvKmNsYXNzTGlicyovLAoJCXRydWUvKnNob3VsZEZsdXNoKi8sCgkJ
bnVsbC8qdm1hcmdzKi8sCgkJb3B0aW9ucywKCQludWxsLypyZXF1ZXN0b3IqLyk7Cn0KLy8gQnVn
IDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNl
cwovLyBpZiBjbG9zZSBpcyBndWFyZGVkIGJ5IG51bGwgY2hlY2sgdGhpcyBzaG91bGQgc3RpbGwg
YmUgcmVjb2duaXplZCBhcyBkZWZpbml0ZWx5IGNsb3NlZApwdWJsaWMgdm9pZCB0ZXN0MDU2bygp
IHsKCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CglvcHRpb25zLnB1dChDb21w
aWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlv
bnMuRVJST1IpOwoJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3Rl
bnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwoJdGhpcy5y
dW5Db25mb3JtVGVzdCgKCQluZXcgU3RyaW5nW10gewoJCQkiWC5qYXZhIiwKCQkJImltcG9ydCBq
YXZhLmlvLkZpbGU7XG4iICsKCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFkZXI7XG4iICsKCQkJ
ImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCgkJCSJpbXBvcnQgamF2YS5pby5GaWxl
Tm90Rm91bmRFeGNlcHRpb247XG4iICsKCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwoJCQkiICAg
IHZvaWQgZm9vKEZpbGUgc29tZUZpbGUsIGNoYXJbXSBidWYpIHRocm93cyBJT0V4Y2VwdGlvbiB7
XG4iICsKCQkJIgkJRmlsZVJlYWRlciBmcjEgPSBudWxsO1xuIiArCgkJCSIJCXRyeSB7XG4iICsK
CQkJIiAgICAgICAgICAgZnIxID0gbmV3IEZpbGVSZWFkZXIoc29tZUZpbGUpOyIgKwoJCQkiCQkJ
ZnIxLnJlYWQoYnVmKTtcbiIgKwoJCQkiCQl9IGZpbmFsbHkge1xuIiArCgkJCSIJCQlpZiAoZnIx
ICE9IG51bGwpXG4iICsKCQkJIiAgICAgICAgICAgICAgIHRyeSB7XG4iICsKCQkJIiAgICAgICAg
ICAgICAgICAgICBmcjEuY2xvc2UoKTtcbiIgKwoJCQkiICAgICAgICAgICAgICAgfSBjYXRjaCAo
SU9FeGNlcHRpb24gZSkgeyAvKmRvIG5vdGhpbmcqLyB9XG4iICsKCQkJIgkJfVxuIiArCgkJCSIJ
IH1cbiIgKwoJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRo
cm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKCQkJIiAgICAgICAgdHJ5IHtcbiIgKwoJCQkiICAgICAg
ICAgICAgbmV3IFgoKS5mb28obmV3IEZpbGUoXCJtaXNzaW5nXCIpLCBuZXcgY2hhclsxMDBdKTtc
biIgKwoJCQkiICAgICAgICB9IGNhdGNoIChGaWxlTm90Rm91bmRFeGNlcHRpb24gZSkge1xuIiAr
CgkJCSIgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oXCJjYXVnaHRcIik7XG4iICsKCQkJ
IiAgICAgICAgfVxuIiArCgkJCSIgICAgfVxuIiArCgkJCSJ9XG4iCgkJfSwKCQkiY2F1Z2h0Iiwg
LypvdXRwdXQqLwoJCW51bGwvKmNsYXNzTGlicyovLAoJCXRydWUvKnNob3VsZEZsdXNoKi8sCgkJ
bnVsbC8qdm1hcmdzKi8sCgkJb3B0aW9ucywKCQludWxsLypyZXF1ZXN0b3IqLyk7Cn0KLy8gQnVn
IDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNl
cwovLyBCdWcgMzYyMzMyIC0gT25seSByZXBvcnQgcG90ZW50aWFsIGxlYWsgd2hlbiBjbG9zZWFi
bGUgbm90IGNyZWF0ZWQgaW4gdGhlIGxvY2FsIHNjb3BlCi8vIGEgbWV0aG9kIHVzZXMgYW4gQXV0
b0Nsb3NlYWJsZSB3aXRob3V0IGV2ZXIgY2xvc2luZyBpdCwgdHlwZSBmcm9tIGEgdHlwZSB2YXJp
YWJsZQpwdWJsaWMgdm9pZCB0ZXN0MDU2cCgpIHsKCWlmICh0aGlzLmNvbXBsaWFuY2VMZXZlbCA8
IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzUpIHJldHVybjsgLy8gZ2VuZXJpY3MgdXNlZAoJTWFw
IG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0
aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJP
Uik7CglvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5
VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Cgl0aGlzLnJ1bk5lZ2F0
aXZlVGVzdCgKCQluZXcgU3RyaW5nW10gewoJCQkiWC5qYXZhIiwKCQkJImltcG9ydCBqYXZhLmlv
LkZpbGU7XG4iICsKCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFkZXI7XG4iICsKCQkJImltcG9y
dCBqYXZhLmlvLlJlYWRlcjtcbiIgKwoJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4i
ICsKCQkJInB1YmxpYyBhYnN0cmFjdCBjbGFzcyBYIDxUIGV4dGVuZHMgUmVhZGVyPiB7XG4iICsK
CQkJIiAgICB2b2lkIGZvbygpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKCQkJIiAgICAgICAg
RmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKwoJCQkiICAgICAgICBUIGZp
bGVSZWFkZXIgPSBuZXdSZWFkZXIoZmlsZSk7XG4iICsKCQkJIiAgICAgICAgY2hhcltdIGluID0g
bmV3IGNoYXJbNTBdO1xuIiArCgkJCSIgICAgICAgIGZpbGVSZWFkZXIucmVhZChpbik7XG4iICsK
CQkJIiAgICB9XG4iICsKCQkJIiAgICBhYnN0cmFjdCBUIG5ld1JlYWRlcihGaWxlIGZpbGUpIHRo
cm93cyBJT0V4Y2VwdGlvbjtcbiIgKwoJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0
cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKCQkJIiAgICAgICAgbmV3IFg8
RmlsZVJlYWRlcj4oKSB7XG4iICsKCQkJIiAgICAgICAgICAgIEZpbGVSZWFkZXIgbmV3UmVhZGVy
KEZpbGUgZikgdGhyb3dzIElPRXhjZXB0aW9uIHsgcmV0dXJuIG5ldyBGaWxlUmVhZGVyKGYpOyB9
XG4iICsKCQkJIiAgICAgICAgfS5mb28oKTtcbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkifVxuIgoJ
CX0sCgkJIi0tLS0tLS0tLS1cbiIgKwoJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgOClc
biIgKwoJCSIJVCBmaWxlUmVhZGVyID0gbmV3UmVhZGVyKGZpbGUpO1xuIiArCgkJIgkgIF5eXl5e
Xl5eXl5cbiIgKwoJCSJQb3RlbnRpYWwgcmVzb3VyY2UgbGVhazogXCdmaWxlUmVhZGVyXCcgbWF5
IG5vdCBiZSBjbG9zZWRcbiIgKwoJCSItLS0tLS0tLS0tXG4iLAoJCW51bGwsCgkJdHJ1ZSwKCQlv
cHRpb25zKTsKfQovLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3Npbmcg
dHJ5LXdpdGgtcmVzb3VyY2VzCi8vIGNsb3NlZCBpbiBkZWFkIGNvZGUKcHVibGljIHZvaWQgdGVz
dDA1NnEoKSB7CglNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwoJb3B0aW9ucy5w
dXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlv
bnMuRVJST1IpOwoJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfUE9URU5USUFMTFlf
VU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7CglvcHRpb25zLnB1
dChKYXZhQ29yZS5DT01QSUxFUl9QQl9FWFBMSUNJVExZX0NMT1NFRF9BVVRPQ0xPU0VBQkxFLCBD
b21waWxlck9wdGlvbnMuSUdOT1JFKTsKCXRoaXMucnVuTmVnYXRpdmVUZXN0KAoJCW5ldyBTdHJp
bmdbXSB7CgkJCSJYLmphdmEiLAoJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKwoJCQkiaW1w
b3J0IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIgKwoJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRp
b247XG4iICsKCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwoJCQkiICAgIHZvaWQgZm9vKCkgdGhy
b3dzIElPRXhjZXB0aW9uIHtcbiIgKwoJCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShc
InNvbWVmaWxlXCIpO1xuIiArCgkJCSIgICAgICAgIEZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5l
dyBGaWxlUmVhZGVyKGZpbGUpO1xuIiArCgkJCSIgICAgICAgIGNoYXJbXSBpbiA9IG5ldyBjaGFy
WzUwXTtcbiIgKwoJCQkiICAgICAgICBmaWxlUmVhZGVyLnJlYWQoaW4pO1xuIiArCgkJCSIgICAg
ICAgIGlmICgyKjIgPT0gNClcbiIgKwoJCQkiICAgICAgICAJcmV0dXJuO1xuIiArCgkJCSIgICAg
ICAgIGZpbGVSZWFkZXIuY2xvc2UoKTtcbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkiICAgIHB1Ymxp
YyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4i
ICsKCQkJIiAgICAgICAgbmV3IFgoKS5mb28oKTtcbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkifVxu
IgoJCX0sCgkJIi0tLS0tLS0tLS1cbiIgKwoJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUg
NylcbiIgKwoJCSIJRmlsZVJlYWRlciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7
XG4iICsKCQkiCSAgICAgICAgICAgXl5eXl5eXl5eXlxuIiArCgkJIlJlc291cmNlIGxlYWs6ICdm
aWxlUmVhZGVyJyBpcyBuZXZlciBjbG9zZWRcbiIgKwoJCSItLS0tLS0tLS0tXG4iICsKCQkiMi4g
V0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUgMTApXG4iICsKCQkiCWlmICgyKjIgPT0gNClcbiIg
KwoJCSIJICAgIF5eXl5eXl5eXG4iICsKCQkiQ29tcGFyaW5nIGlkZW50aWNhbCBleHByZXNzaW9u
c1xuIiArCgkJIi0tLS0tLS0tLS1cbiIgKwoJCSIzLiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGlu
ZSAxMilcbiIgKwoJCSIJZmlsZVJlYWRlci5jbG9zZSgpO1xuIiArCgkJIgleXl5eXl5eXl5eXl5e
Xl5eXl5cbiIgKwoJCSJEZWFkIGNvZGVcbiIgKwoJCSItLS0tLS0tLS0tXG4iLAoJCW51bGwsCgkJ
dHJ1ZSwKCQlvcHRpb25zKTsKfQovLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9y
IG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCi8vIHByb3Blcmx5IGNsb3NlZCwgZGVhZCBjb2Rl
IGluIGJldHdlZW4KcHVibGljIHZvaWQgdGVzdDA1NnIoKSB7CglNYXAgb3B0aW9ucyA9IGdldENv
bXBpbGVyT3B0aW9ucygpOwoJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfVU5DTE9T
RURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwoJb3B0aW9ucy5wdXQoSmF2YUNv
cmUuQ09NUElMRVJfUEJfUE9URU5USUFMTFlfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9w
dGlvbnMuV0FSTklORyk7CglvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9FWFBMSUNJ
VExZX0NMT1NFRF9BVVRPQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuSUdOT1JFKTsKCW9wdGlv
bnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX0RFQURfQ09ERSwgQ29tcGlsZXJPcHRpb25zLkVS
Uk9SKTsKCXRoaXMucnVuTmVnYXRpdmVUZXN0KAoJCW5ldyBTdHJpbmdbXSB7CgkJCSJYLmphdmEi
LAoJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKwoJCQkiaW1wb3J0IGphdmEuaW8uRmlsZVJl
YWRlcjtcbiIgKwoJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKCQkJInB1Ymxp
YyBjbGFzcyBYIHtcbiIgKwoJCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtc
biIgKwoJCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xuIiAr
CgkJCSIgICAgICAgIEZpbGVSZWFkZXIgZnIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTtcbiIgKwoJ
CQkiICAJCSBPYmplY3QgYiA9IG51bGw7XG4iICsKCQkJIiAgICAgICAgZnIuY2xvc2UoKTtcbiIg
KwoJCQkiICAgICAgICBpZiAoYiAhPSBudWxsKSB7XG4iICsKCQkJIiAgICAgICAgICAgIGZyID0g
bmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsKCQkJIiAgICAgICAgICAgIHJldHVybjtcbiIgKwoJ
CQkiICAgICAgICB9IGVsc2Uge1xuIiArCgkJCSIgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50
KDQyKTtcbiIgKwoJCQkiICAgICAgICB9XG4iICsKCQkJIiAgICAgICAgcmV0dXJuOyAgICAgLy8g
U2hvdWxkIG5vdCBjb21wbGFpbiBhYm91dCBmclxuIiArCgkJCSIgICAgfVxuIiArCgkJCSIgICAg
cHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykgdGhyb3dzIElPRXhjZXB0aW9u
IHtcbiIgKwoJCQkiICAgICAgICBuZXcgWCgpLmZvbygpO1xuIiArCgkJCSIgICAgfVxuIiArCgkJ
CSJ9XG4iCgkJfSwKCQkiLS0tLS0tLS0tLVxuIiArCgkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQg
bGluZSAxMClcbiIgKwoJCSIJaWYgKGIgIT0gbnVsbCkge1xuIiArCgkJIiAgICAgICAgICAgIGZy
ID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsKCQkiICAgICAgICAgICAgcmV0dXJuO1xuIiAr
CgkJIiAgICAgICAgfSBlbHNlIHtcbiIgKwoJCSIJICAgICAgICAgICAgICAgXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5e
XlxuIiArCgkJIkRlYWQgY29kZVxuIiArCgkJIi0tLS0tLS0tLS1cbiIgKwoJCSIyLiBXQVJOSU5H
IGluIFguamF2YSAoYXQgbGluZSAxMylcbiIgKwoJCSIJfSBlbHNlIHtcbiIgKwoJCSIgICAgICAg
ICAgICBTeXN0ZW0ub3V0LnByaW50KDQyKTtcbiIgKwoJCSIgICAgICAgIH1cbiIgKwoJCSIJICAg
ICAgIF5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXlxuIiArCgkJ
IlN0YXRlbWVudCB1bm5lY2Vzc2FyaWx5IG5lc3RlZCB3aXRoaW4gZWxzZSBjbGF1c2UuIFRoZSBj
b3JyZXNwb25kaW5nIHRoZW4gY2xhdXNlIGRvZXMgbm90IGNvbXBsZXRlIG5vcm1hbGx5XG4iICsK
CQkiLS0tLS0tLS0tLVxuIiwKCQludWxsLAoJCXRydWUsCgkJb3B0aW9ucyk7Cn0KLy8gQnVnIDM0
OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNlcwov
LyByZXNvdXJjZSBpbnNpZGUgdC13LXIgaXMgcmUtYXNzaWduZWQsIHNob3VsZG4ndCBldmVuIHJl
Y29yZCBhbiBlcnJvckxvY2F0aW9uCnB1YmxpYyB2b2lkIHRlc3QwNTZzKCkgewoJaWYgKHRoaXMu
Y29tcGxpYW5jZUxldmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfNykgcmV0dXJuOyAvLyB0
LXctciB1c2VkCglNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwoJb3B0aW9ucy5w
dXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlv
bnMuRVJST1IpOwoJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfUE9URU5USUFMTFlf
VU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7CglvcHRpb25zLnB1
dChKYXZhQ29yZS5DT01QSUxFUl9QQl9FWFBMSUNJVExZX0NMT1NFRF9BVVRPQ0xPU0VBQkxFLCBD
b21waWxlck9wdGlvbnMuSUdOT1JFKTsKCXRoaXMucnVuTmVnYXRpdmVUZXN0KAoJCW5ldyBTdHJp
bmdbXSB7CgkJCSJYLmphdmEiLAoJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKwoJCQkiaW1w
b3J0IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIgKwoJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRp
b247XG4iICsKCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwoJCQkiICAgIHZvaWQgZm9vKCkgdGhy
b3dzIElPRXhjZXB0aW9uIHtcbiIgKwoJCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShc
InNvbWVmaWxlXCIpO1xuIiArCgkJCSIgICAgICAgIHRyeSAoRmlsZVJlYWRlciBmaWxlUmVhZGVy
ID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7KSB7XG4iICsKCQkJIiAgICAgICAgICAgIGNoYXJbXSBp
biA9IG5ldyBjaGFyWzUwXTtcbiIgKwoJCQkiICAgICAgICAgICAgZmlsZVJlYWRlci5yZWFkKGlu
KTtcbiIgKwoJCQkiICAgICAgICAgICAgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUp
OyAgLy8gZGVidWcgaGVyZVxuIiArCgkJCSIgICAgICAgICAgICBmaWxlUmVhZGVyLnJlYWQoaW4p
O1xuIiArCgkJCSIgICAgICAgIH1cbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkiICAgIHB1YmxpYyBz
dGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsK
CQkJIiAgICAgICAgbmV3IFgoKS5mb28oKTtcbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkifVxuIgoJ
CX0sCgkJIi0tLS0tLS0tLS1cbiIgKwoJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTAp
XG4iICsKCQkiCWZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTsgIC8vIGRlYnVnIGhl
cmVcbiIgKwoJCSIJXl5eXl5eXl5eXlxuIiArCgkJIlRoZSByZXNvdXJjZSBmaWxlUmVhZGVyIG9m
IGEgdHJ5LXdpdGgtcmVzb3VyY2VzIHN0YXRlbWVudCBjYW5ub3QgYmUgYXNzaWduZWRcbiIgKwoJ
CSItLS0tLS0tLS0tXG4iLAoJCW51bGwsCgkJdHJ1ZSwKCQlvcHRpb25zKTsKfQovLyBCdWcgMzQ5
MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCi8v
IHJlc291cmNlIGlzIGNsb3NlZCwgZGVhZCBjb2RlIGZvbGxvd3MKcHVibGljIHZvaWQgdGVzdDA1
NnQoKSB7CglNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwoJb3B0aW9ucy5wdXQo
SmF2YUNvcmUuQ09NUElMRVJfUEJfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMu
RVJST1IpOwoJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfUE9URU5USUFMTFlfVU5D
TE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7CglvcHRpb25zLnB1dChK
YXZhQ29yZS5DT01QSUxFUl9QQl9ERUFEX0NPREUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Cgl0
aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKCQluZXcgU3RyaW5nW10gewoJCQkiWC5qYXZhIiwKCQkJImlt
cG9ydCBqYXZhLmlvLkZpbGVSZWFkZXI7XG4iICsKCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0
aW9uO1xuIiArCgkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKCQkJIiAgICB2b2lkIGZvbzMxKCkg
dGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwoJCQkiICAgICAgICBGaWxlUmVhZGVyIHJlYWRlciA9
IG5ldyBGaWxlUmVhZGVyKFwiZmlsZVwiKTsgLy93YXJuaW5nXG4iICsKCQkJIiAgICAgICAgaWYg
KHJlYWRlciAhPSBudWxsKSB7XG4iICsKCQkJIiAgICAgICAgICAgIHJlYWRlci5jbG9zZSgpO1xu
IiArCgkJCSIgICAgICAgIH0gZWxzZSB7XG4iICsKCQkJIiAgICAgICAgICAgIC8vIG5vcFxuIiAr
CgkJCSIgICAgICAgIH1cbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkiICAgIHB1YmxpYyBzdGF0aWMg
dm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKCQkJIiAg
ICAgICAgbmV3IFgoKS5mb28zMSgpO1xuIiArCgkJCSIgICAgfVxuIiArCgkJCSJ9XG4iCgkJfSwK
CQkiLS0tLS0tLS0tLVxuIiArCgkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA4KVxuIiAr
CgkJIgl9IGVsc2Uge1xuIiArCgkJIiAgICAgICAgICAgIC8vIG5vcFxuIiArCgkJIiAgICAgICAg
fVxuIiArCgkJIgkgICAgICAgXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXG4iICsKCQki
RGVhZCBjb2RlXG4iICsKCQkiLS0tLS0tLS0tLVxuIiwKCQludWxsLAoJCXRydWUsCgkJb3B0aW9u
cyk7Cn0KLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13
aXRoLXJlc291cmNlcwovLyByZXNvdXJjZSBpcyByZWFzc2lnbmVkIHdpdGhpbiB0LXctciB3aXRo
IGRpZmZlcmVudCByZXNvdXJjZQovLyB3YXMgaW5pdGlhbGx5IGJyb2tlbiBkdWUgdG8gaHR0cHM6
Ly9idWdzLmVjbGlwc2Uub3JnLzM1ODgyNwpwdWJsaWMgdm9pZCB0ZXN0MDU2dSgpIHsKCWlmICh0
aGlzLmNvbXBsaWFuY2VMZXZlbCA8IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzcpIHJldHVybjsg
Ly8gdC13LXIgdXNlZAoJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKCW9wdGlv
bnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJP
cHRpb25zLkVSUk9SKTsKCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX1BPVEVOVElB
TExZX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLldBUk5JTkcpOwoJb3B0aW9u
cy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfREVBRF9DT0RFLCBDb21waWxlck9wdGlvbnMuRVJS
T1IpOwoJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCgkJbmV3IFN0cmluZ1tdIHsKCQkJIlguamF2YSIs
CgkJCSJpbXBvcnQgamF2YS5pby5GaWxlUmVhZGVyO1xuIiArCgkJCSJwdWJsaWMgY2xhc3MgWCB7
XG4iICsKCQkJIiAgICB2b2lkIGZvbygpIHRocm93cyBFeGNlcHRpb24ge1xuIiArCgkJCSIgICAg
ICAgIEZpbGVSZWFkZXIgcmVhZGVyMSA9IG5ldyBGaWxlUmVhZGVyKFwiZmlsZTFcIik7XG4iICsK
CQkJIiAgICAgICAgRmlsZVJlYWRlciByZWFkZXIyID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlMlwi
KTtcbiIgKwoJCQkiICAgICAgICByZWFkZXIyID0gcmVhZGVyMTsvLyB0aGlzIGRpc2Nvbm5lY3Rz
IHJlYWRlciAyXG4iICsKCQkJIiAgICAgICAgdHJ5IChGaWxlUmVhZGVyIHJlYWRlcjMgPSBuZXcg
RmlsZVJlYWRlcihcImZpbGUzXCIpKSB7XG4iICsKCQkJIiAgICAgICAgICAgIGludCBjaDtcbiIg
KwoJCQkiICAgICAgICAgICAgd2hpbGUgKChjaCA9IHJlYWRlcjIucmVhZCgpKSAhPSAtMSkge1xu
IiArCgkJCSIgICAgICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGNoKTtcbiIgKwoJCQki
ICAgICAgICAgICAgICAgIHJlYWRlcjEucmVhZCgpO1xuIiArCgkJCSIgICAgICAgICAgICB9XG4i
ICsKCQkJIiAgICAgICAgICAgIHJlYWRlcjIgPSByZWFkZXIxOyAvLyB3YXJuaW5nIDEgcmVnYXJk
aW5nIG9yaWdpbmFsIHJlYWRlcjFcbiIgKyAvLyB0aGlzIHdhcm5pbmcgd2FzIG1pc3NpbmcKCQkJ
IiAgICAgICAgICAgIHJlYWRlcjIgPSByZWFkZXIxOyAvLyB3YXJuaW5nIDIgcmVnYXJkaW5nIG9y
aWdpbmFsIHJlYWRlcjFcbiIgKwoJCQkiICAgICAgICB9IGZpbmFsbHkge1xuIiArCgkJCSIgICAg
ICAgICAgICBpZiAocmVhZGVyMiAhPSBudWxsKSB7XG4iICsKCQkJIiAgICAgICAgICAgICAgICBy
ZWFkZXIyLmNsb3NlKCk7XG4iICsKCQkJIiAgICAgICAgICAgIH0gZWxzZSB7XG4iICsKCQkJIiAg
ICAgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oKTtcbiIgKwoJCQkiICAgICAgICAgICAg
fVxuIiArCgkJCSIgICAgICAgIH1cbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkifVxuIgoJCX0sCgkJ
Ii0tLS0tLS0tLS1cbiIgKwoJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNSlcbiIgKwoJ
CSIJRmlsZVJlYWRlciByZWFkZXIyID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlMlwiKTtcbiIgKwoJ
CSIJICAgICAgICAgICBeXl5eXl5eXG4iICsKCQkiUmVzb3VyY2UgbGVhazogJ3JlYWRlcjInIGlz
IG5ldmVyIGNsb3NlZFxuIiArCgkJIi0tLS0tLS0tLS1cbiIgKwoJCSIyLiBFUlJPUiBpbiBYLmph
dmEgKGF0IGxpbmUgMTMpXG4iICsKCQkiCXJlYWRlcjIgPSByZWFkZXIxOyAvLyB3YXJuaW5nIDEg
cmVnYXJkaW5nIG9yaWdpbmFsIHJlYWRlcjFcbiIgKwoJCSIJXl5eXl5eXl5eXl5eXl5eXl5cbiIg
KwoJCSJSZXNvdXJjZSBsZWFrOiAncmVhZGVyMScgaXMgbm90IGNsb3NlZCBhdCB0aGlzIGxvY2F0
aW9uXG4iICsKCQkiLS0tLS0tLS0tLVxuIiArCgkJIjMuIEVSUk9SIGluIFguamF2YSAoYXQgbGlu
ZSAxNClcbiIgKwoJCSIJcmVhZGVyMiA9IHJlYWRlcjE7IC8vIHdhcm5pbmcgMiByZWdhcmRpbmcg
b3JpZ2luYWwgcmVhZGVyMVxuIiArCgkJIgleXl5eXl5eXl5eXl5eXl5eXlxuIiArCgkJIlJlc291
cmNlIGxlYWs6ICdyZWFkZXIxJyBpcyBub3QgY2xvc2VkIGF0IHRoaXMgbG9jYXRpb25cbiIgKwoJ
CSItLS0tLS0tLS0tXG4iLAoJCW51bGwsCgkJdHJ1ZSwKCQlvcHRpb25zKTsKfQovLyBCdWcgMzQ5
MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCi8v
IHNjb3BlLXJlbGF0ZWQgcGJzIHJlcG9ydGVkIGluIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy8z
NDkzMjYjYzcwIGFuZCBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvMzQ5MzI2I2M4MgpwdWJsaWMg
dm9pZCB0ZXN0MDU2digpIHsKCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7Cglv
cHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBp
bGVyT3B0aW9ucy5FUlJPUik7CglvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9QT1RF
TlRJQUxMWV9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5XQVJOSU5HKTsKCW9w
dGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX0VYUExJQ0lUTFlfQ0xPU0VEX0FVVE9DTE9T
RUFCTEUsIENvbXBpbGVyT3B0aW9ucy5XQVJOSU5HKTsKCW9wdGlvbnMucHV0KEphdmFDb3JlLkNP
TVBJTEVSX1BCX0RFQURfQ09ERSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKCVN0cmluZyBleHBl
Y3RlZFByb2JsZW1zID0gdGhpcy5jb21wbGlhbmNlTGV2ZWwgPj0gQ2xhc3NGaWxlQ29uc3RhbnRz
LkpESzFfNyA/CgkJCQkiLS0tLS0tLS0tLVxuIiArCgkJCQkiMS4gRVJST1IgaW4gWC5qYXZhIChh
dCBsaW5lIDQpXG4iICsKCQkJCSIJRmlsZVJlYWRlciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihc
ImZpbGVcIik7XG4iICsKCQkJCSIJICAgICAgICAgICBeXl5eXl5cbiIgKwoJCQkJIlJlc291cmNl
IGxlYWs6ICdyZWFkZXInIGlzIG5ldmVyIGNsb3NlZFxuIiArCgkJCQkiLS0tLS0tLS0tLVxuIiAr
CgkJCQkiMi4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUgMTkpXG4iICsKCQkJCSIJRmlsZVJl
YWRlciByZWFkZXIxMTEgPSBuZXcgRmlsZVJlYWRlcihcImZpbGUyXCIpO1xuIiArCgkJCQkiCSAg
ICAgICAgICAgXl5eXl5eXl5eXG4iICsKCQkJCSJSZXNvdXJjZSAncmVhZGVyMTExJyBzaG91bGQg
YmUgbWFuYWdlZCBieSB0cnktd2l0aC1yZXNvdXJjZVxuIiArCgkJCQkiLS0tLS0tLS0tLVxuIiAr
CgkJCQkiMy4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDQyKVxuIiArCgkJCQkiCXJldHVybjtc
biIgKwoJCQkJIgleXl5eXl5eXG4iICsKCQkJCSJSZXNvdXJjZSBsZWFrOiAncmVhZGVyMicgaXMg
bm90IGNsb3NlZCBhdCB0aGlzIGxvY2F0aW9uXG4iICsKCQkJCSItLS0tLS0tLS0tXG4iCgkJCToK
CQkJCSItLS0tLS0tLS0tXG4iICsKCQkJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNClc
biIgKwoJCQkJIglGaWxlUmVhZGVyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKFwiZmlsZVwiKTtc
biIgKwoJCQkJIgkgICAgICAgICAgIF5eXl5eXlxuIiArCgkJCQkiUmVzb3VyY2UgbGVhazogJ3Jl
YWRlcicgaXMgbmV2ZXIgY2xvc2VkXG4iICsKCQkJCSItLS0tLS0tLS0tXG4iICsKCQkJCSIyLiBF
UlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNDIpXG4iICsKCQkJCSIJcmV0dXJuO1xuIiArCgkJCQki
CV5eXl5eXl5cbiIgKwoJCQkJIlJlc291cmNlIGxlYWs6ICdyZWFkZXIyJyBpcyBub3QgY2xvc2Vk
IGF0IHRoaXMgbG9jYXRpb25cbiIgKwoJCQkJIi0tLS0tLS0tLS1cbiI7Cgl0aGlzLnJ1bk5lZ2F0
aXZlVGVzdCgKCQluZXcgU3RyaW5nW10gewoJCQkiWC5qYXZhIiwKCQkJImltcG9ydCBqYXZhLmlv
LkZpbGVSZWFkZXI7XG4iICsKCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwoJCQkiICAgIGJvb2xl
YW4gZm9vMSgpIHRocm93cyBFeGNlcHRpb24ge1xuIiArCgkJCSIgICAgICAgIEZpbGVSZWFkZXIg
cmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlXCIpO1xuIiArCgkJCSIgICAgICAgIHRyeSB7
XG4iICsKCQkJIiAgICAgICAgICAgIGludCBjaDtcbiIgKwoJCQkiICAgICAgICAgICAgd2hpbGUg
KChjaCA9IHJlYWRlci5yZWFkKCkpICE9IC0xKSB7XG4iICsKCQkJIiAgICAgICAgICAgICAgICBT
eXN0ZW0ub3V0LnByaW50bG4oY2gpO1xuIiArCgkJCSIgICAgICAgICAgICAgICAgcmVhZGVyLnJl
YWQoKTtcbiIgKwoJCQkiICAgICAgICAgICAgfVxuIiArCgkJCSIgICAgICAgICAgICBpZiAoY2gg
PiAxMCkge1xuIiArCgkJCSIgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4iICsKCQkJIiAg
ICAgICAgICAgIH1cbiIgKwoJCQkiICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuIiArIC8vIHJl
dHVybiB3aGlsZSByZXNvdXJjZSBmcm9tIGVuY2xvc2luZyBzY29wZSByZW1haW5zIHVuY2xvc2Vk
CgkJCSIgICAgICAgIH0gZmluYWxseSB7XG4iICsKCQkJIiAgICAgICAgfVxuIiArCgkJCSIgICAg
fVxuIiArCgkJCSIgICAgdm9pZCBmb28xMTEoKSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIgKwoJCQki
ICAgICAgICBGaWxlUmVhZGVyIHJlYWRlcjExMSA9IG5ldyBGaWxlUmVhZGVyKFwiZmlsZTJcIik7
XG4iICsKCQkJIiAgICAgICAgdHJ5IHtcbiIgKwoJCQkiICAgICAgICAgICAgaW50IGNoO1xuIiAr
CgkJCSIgICAgICAgICAgICB3aGlsZSAoKGNoID0gcmVhZGVyMTExLnJlYWQoKSkgIT0gLTEpIHtc
biIgKwoJCQkiICAgICAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihjaCk7XG4iICsKCQkJ
IiAgICAgICAgICAgICAgICByZWFkZXIxMTEucmVhZCgpO1xuIiArCgkJCSIgICAgICAgICAgICB9
XG4iICsKCQkJIiAgICAgICAgICAgIHJldHVybjtcbiIgKyAvLyB0aGlzIHNob3VsZG4ndCBzcG9p
bCB0aGUgd2FybmluZyAic2hvdWxkIGJlIG1hbmFnZWQgd2l0aCB0LXctciIKCQkJIiAgICAgICAg
fSBmaW5hbGx5IHtcbiIgKwoJCQkiICAgICAgICAgICAgaWYgKHJlYWRlcjExMSAhPSBudWxsKSB7
XG4iICsKCQkJIiAgICAgICAgICAgICAgICByZWFkZXIxMTEuY2xvc2UoKTtcbiIgKwoJCQkiICAg
ICAgICAgICAgfVxuIiArCgkJCSIgICAgICAgIH1cbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkiICAg
IHZvaWQgZm9vMigpIHRocm93cyBFeGNlcHRpb24ge1xuIiArCgkJCSIgICAgICAgIEZpbGVSZWFk
ZXIgcmVhZGVyMiA9IG5ldyBGaWxlUmVhZGVyKFwiZmlsZVwiKTtcbiIgKwoJCQkiICAgICAgICB0
cnkge1xuIiArCgkJCSIgICAgICAgICAgICBpbnQgY2g7XG4iICsKCQkJIiAgICAgICAgICAgIHdo
aWxlICgoY2ggPSByZWFkZXIyLnJlYWQoKSkgIT0gLTEpIHtcbiIgKwoJCQkiICAgICAgICAgICAg
ICAgIFN5c3RlbS5vdXQucHJpbnRsbihjaCk7XG4iICsKCQkJIiAgICAgICAgICAgICAgICByZWFk
ZXIyLnJlYWQoKTtcbiIgKwoJCQkiICAgICAgICAgICAgfVxuIiArCgkJCSIgICAgICAgICAgICBp
ZiAoY2ggPiAxMCkge1xuIiArCgkJCSIgICAgICAgICAgICAgICAgcmV0dXJuO1xuIiArIC8vIHBv
dGVudGlhbCBsZWFrCgkJCSIgICAgICAgICAgICB9XG4iICsKCQkJIiAgICAgICAgfSBmaW5hbGx5
IHtcbiIgKwoJCQkiICAgICAgICB9XG4iICsKCQkJIiAgICAgICAgcmVhZGVyMi5jbG9zZSgpO1xu
IiArIC8vIGR1ZSB0byB0aGlzIGNsb3NlIHdlIGRvbid0IHNheSAibmV2ZXIgY2xvc2VkIgoJCQki
ICAgIH1cbiIgKwoJCQkifVxuIgoJCX0sCgkJZXhwZWN0ZWRQcm9ibGVtcywKCQludWxsLAoJCXRy
dWUsCgkJb3B0aW9ucyk7Cn0KLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBt
aXNzaW5nIHRyeS13aXRoLXJlc291cmNlcwovLyBlbmQgb2YgbWV0aG9kIGlzIGRlYWQgZW5kLCBi
dXQgYmVmb3JlIHdlIGhhdmUgYm90aCBhIGNsb3NlKCkgYW5kIGFuIGVhcmx5IHJldHVybgpwdWJs
aWMgdm9pZCB0ZXN0MDU2dygpIHsKCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7
CglvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9VTkNMT1NFRF9DTE9TRUFCTEUsIENv
bXBpbGVyT3B0aW9ucy5FUlJPUik7CglvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9Q
T1RFTlRJQUxMWV9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5XQVJOSU5HKTsK
CW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX0RFQURfQ09ERSwgQ29tcGlsZXJPcHRp
b25zLkVSUk9SKTsKCXRoaXMucnVuTmVnYXRpdmVUZXN0KAoJCW5ldyBTdHJpbmdbXSB7CgkJCSJY
LmphdmEiLAoJCQkiaW1wb3J0IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIgKwoJCQkicHVibGljIGNs
YXNzIFgge1xuIiArCgkJCSIgICAgYm9vbGVhbiBmb28xKCkgdGhyb3dzIEV4Y2VwdGlvbiB7XG4i
ICsKCQkJIiAgICAgICAgRmlsZVJlYWRlciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihcImZpbGVc
Iik7XG4iICsKCQkJIiAgICAgICAgdHJ5IHtcbiIgKwoJCQkiICAgICAgICAgICAgaW50IGNoO1xu
IiArCgkJCSIgICAgICAgICAgICB3aGlsZSAoKGNoID0gcmVhZGVyLnJlYWQoKSkgIT0gLTEpIHtc
biIgKwoJCQkiICAgICAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihjaCk7XG4iICsKCQkJ
IiAgICAgICAgICAgICAgICByZWFkZXIucmVhZCgpO1xuIiArCgkJCSIgICAgICAgICAgICB9XG4i
ICsKCQkJIiAgICAgICAgICAgIGlmIChjaCA+IDEwKSB7XG4iICsKCQkJIgkJCQkgcmVhZGVyLmNs
b3NlKCk7XG4iICsKCQkJIiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiIgKwoJCQkiICAg
ICAgICAgICAgfVxuIiArCgkJCSIgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4iICsKCQkJIiAg
ICAgICAgfSBmaW5hbGx5IHtcbiIgKwoJCQkiICAgICAgICB9XG4iICsKCQkJIiAgICB9XG4iICsK
CQkJIn1cbiIKCQl9LAoJCSItLS0tLS0tLS0tXG4iICsKCQkiMS4gRVJST1IgaW4gWC5qYXZhIChh
dCBsaW5lIDE1KVxuIiArCgkJIglyZXR1cm4gZmFsc2U7XG4iICsKCQkiCV5eXl5eXl5eXl5eXl5c
biIgKwoJCSJSZXNvdXJjZSBsZWFrOiAncmVhZGVyJyBpcyBub3QgY2xvc2VkIGF0IHRoaXMgbG9j
YXRpb25cbiIgKwoJCSItLS0tLS0tLS0tXG4iLAoJCW51bGwsCgkJdHJ1ZSwKCQlvcHRpb25zKTsK
fQovLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgt
cmVzb3VyY2VzCi8vIGRpZmZlcmVudCBlYXJseSBleGl0cywgaWYgbm8gY2xvc2Ugc2VlbiByZXBv
cnQgYXMgZGVmaW5pdGVseSB1bmNsb3NlZApwdWJsaWMgdm9pZCB0ZXN0MDU2eCgpIHsKCU1hcCBv
cHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CglvcHRpb25zLnB1dChKYXZhQ29yZS5DT01Q
SUxFUl9QQl9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CglvcHRp
b25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9QT1RFTlRJQUxMWV9VTkNMT1NFRF9DTE9TRUFC
TEUsIENvbXBpbGVyT3B0aW9ucy5XQVJOSU5HKTsKCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJ
TEVSX1BCX0RFQURfQ09ERSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKCXRoaXMucnVuTmVnYXRp
dmVUZXN0KAoJCW5ldyBTdHJpbmdbXSB7CgkJCSJYLmphdmEiLAoJCQkiaW1wb3J0IGphdmEuaW8u
RmlsZVJlYWRlcjtcbiIgKwoJCQkicHVibGljIGNsYXNzIFgge1xuIiArCgkJCSIgICAgdm9pZCBm
b28zMShib29sZWFuIGIpIHRocm93cyBFeGNlcHRpb24ge1xuIiArCgkJCSIgICAgICAgIEZpbGVS
ZWFkZXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlXCIpO1xuIiArCgkJCSIgICAgICAg
IGlmIChiKSB7XG4iICsKCQkJIiAgICAgICAgICAgIHJlYWRlci5jbG9zZSgpO1xuIiArCgkJCSIg
ICAgICAgIH0gZWxzZSB7XG4iICsKCQkJIiAgICAgICAgICAgIHJldHVybjsgLy8gd2FybmluZ1xu
IiArCgkJCSIgICAgICAgIH1cbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkiICAgIHZvaWQgZm9vMzIo
Ym9vbGVhbiBiKSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIgKwoJCQkiICAgICAgICBGaWxlUmVhZGVy
IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKFwiZmlsZVwiKTsgLy8gd2FybiBoZXJlXG4iICsKCQkJ
IiAgICAgICAgcmV0dXJuO1xuIiArCgkJCSIgICAgfVxuIiArCgkJCSJ9XG4iCgkJfSwKCQkiLS0t
LS0tLS0tLVxuIiArCgkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA4KVxuIiArCgkJIgly
ZXR1cm47IC8vIHdhcm5pbmdcbiIgKwoJCSIJXl5eXl5eXlxuIiArCgkJIlJlc291cmNlIGxlYWs6
ICdyZWFkZXInIGlzIG5vdCBjbG9zZWQgYXQgdGhpcyBsb2NhdGlvblxuIiArCgkJIi0tLS0tLS0t
LS1cbiIgKwoJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTIpXG4iICsKCQkiCUZpbGVS
ZWFkZXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlXCIpOyAvLyB3YXJuIGhlcmVcbiIg
KwoJCSIJICAgICAgICAgICBeXl5eXl5cbiIgKwoJCSJSZXNvdXJjZSBsZWFrOiAncmVhZGVyJyBp
cyBuZXZlciBjbG9zZWRcbiIgKwoJCSItLS0tLS0tLS0tXG4iLAoJCW51bGwsCgkJdHJ1ZSwKCQlv
cHRpb25zKTsKfQovLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3Npbmcg
dHJ5LXdpdGgtcmVzb3VyY2VzCi8vIG5lc3RlZCBtZXRob2QgcGFzc2VzIHRoZSByZXNvdXJjZSB0
byBvdXRzaWRlIGNvZGUKcHVibGljIHZvaWQgdGVzdDA1NnkoKSB7CglNYXAgb3B0aW9ucyA9IGdl
dENvbXBpbGVyT3B0aW9ucygpOwoJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfVU5D
TE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwoJb3B0aW9ucy5wdXQoSmF2
YUNvcmUuQ09NUElMRVJfUEJfUE9URU5USUFMTFlfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxl
ck9wdGlvbnMuV0FSTklORyk7CglvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9ERUFE
X0NPREUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Cgl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKCQlu
ZXcgU3RyaW5nW10gewoJCQkiWC5qYXZhIiwKCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFkZXI7
XG4iICsKCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwoJCQkiICAgIHZvaWQgZm9vMzEoYm9vbGVh
biBiKSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIgKwoJCQkiICAgICAgICBmaW5hbCBGaWxlUmVhZGVy
IHJlYWRlcjMxID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlXCIpO1xuIiArCgkJCSIgICAgICAgIG5l
dyBSdW5uYWJsZSgpIHtcbiIgKwoJCQkiICAgICAgICAgICAgcHVibGljIHZvaWQgcnVuKCkge1xu
IiArCgkJCSIgICAgICAgICAgICAgICAgZm9vMTgocmVhZGVyMzEpO1xuIiArCgkJCSIgICAgICAg
ICAgICB9XG4iICsKCQkJIiAgICAgICAgfS5ydW4oKTtcbiIgKwoJCQkiICAgIH1cbiIgKwoJCQki
ICAgIHZvaWQgZm9vMTgoRmlsZVJlYWRlciByMTgpIHtcbiIgKwoJCQkiICAgICAgICAvLyBjb3Vs
ZCB0aGVvcmV0aWNhbGx5IGNsb3NlIHIxODtcbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkiICAgIGFi
c3RyYWN0IGNsYXNzIFJlc291cmNlUHJvdmlkZXIge1xuIiArCgkJCSIgICAgICAgIGFic3RyYWN0
IEZpbGVSZWFkZXIgcHJvdmlkZSgpOyIgKwoJCQkiICAgIH1cbiIgKwoJCQkiICAgIFJlc291cmNl
UHJvdmlkZXIgcHJvdmlkZXI7IiArCgkJCSIgICAgdm9pZCBmb28yMygpIHRocm93cyBFeGNlcHRp
b24ge1xuIiArCgkJCSIgICAgICAgIGZpbmFsIEZpbGVSZWFkZXIgcmVhZGVyMjMgPSBuZXcgRmls
ZVJlYWRlcihcImZpbGVcIik7XG4iICsKCQkJIiAgICAgICAgcHJvdmlkZXIgPSBuZXcgUmVzb3Vy
Y2VQcm92aWRlcigpIHtcbiIgKwoJCQkiICAgICAgICAgICAgcHVibGljIEZpbGVSZWFkZXIgcHJv
dmlkZSgpIHtcbiIgKwoJCQkiICAgICAgICAgICAgICAgIHJldHVybiByZWFkZXIyMztcbiIgKwoJ
CQkiICAgICAgICAgICAgfVxuIiArCgkJCSIgICAgICAgIH07XG4iICsKCQkJIiAgICB9XG4iICsK
CQkJIn1cbiIKCQl9LAoJCSItLS0tLS0tLS0tXG4iICsKCQkiMS4gV0FSTklORyBpbiBYLmphdmEg
KGF0IGxpbmUgNClcbiIgKwoJCSIJZmluYWwgRmlsZVJlYWRlciByZWFkZXIzMSA9IG5ldyBGaWxl
UmVhZGVyKFwiZmlsZVwiKTtcbiIgKwoJCSIJICAgICAgICAgICAgICAgICBeXl5eXl5eXlxuIiAr
CgkJIlBvdGVudGlhbCByZXNvdXJjZSBsZWFrOiAncmVhZGVyMzEnIG1heSBub3QgYmUgY2xvc2Vk
XG4iICsKCQkiLS0tLS0tLS0tLVxuIiArCgkJIjIuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5l
IDE3KVxuIiArCgkJIglmaW5hbCBGaWxlUmVhZGVyIHJlYWRlcjIzID0gbmV3IEZpbGVSZWFkZXIo
XCJmaWxlXCIpO1xuIiArCgkJIgkgICAgICAgICAgICAgICAgIF5eXl5eXl5eXG4iICsKCQkiUG90
ZW50aWFsIHJlc291cmNlIGxlYWs6ICdyZWFkZXIyMycgbWF5IG5vdCBiZSBjbG9zZWRcbiIgKwoJ
CSItLS0tLS0tLS0tXG4iLAoJCW51bGwsCgkJdHJ1ZSwKCQlvcHRpb25zKTsKfQovLyBCdWcgMzQ5
MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCi8v
IHJlc291cmNlIGFzc2lnbmVkIHRvIHNlY29uZCBsb2NhbCBhbmQgaXMgKHBvdGVudGlhbGx5KSBj
bG9zZWQgb24gdGhlIGxhdHRlcgpwdWJsaWMgdm9pZCB0ZXN0MDU2eigpIHsKCU1hcCBvcHRpb25z
ID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CglvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9Q
Ql9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CglvcHRpb25zLnB1
dChKYXZhQ29yZS5DT01QSUxFUl9QQl9QT1RFTlRJQUxMWV9VTkNMT1NFRF9DTE9TRUFCTEUsIENv
bXBpbGVyT3B0aW9ucy5FUlJPUik7CglvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9E
RUFEX0NPREUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Cgl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgK
CQluZXcgU3RyaW5nW10gewoJCQkiWC5qYXZhIiwKCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFk
ZXI7XG4iICsKCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwoJCQkiICAgIHZvaWQgZm9vMTcoKSB0
aHJvd3MgRXhjZXB0aW9uIHtcbiIgKwoJCQkiICAgICAgICBGaWxlUmVhZGVyIHJlYWRlcjE3ID0g
bmV3IEZpbGVSZWFkZXIoXCJmaWxlXCIpO1xuIiArCgkJCSIgICAgICAgIGZpbmFsIEZpbGVSZWFk
ZXIgcmVhZGVyQ29weSA9IHJlYWRlcjE3O1xuIiArCgkJCSIgICAgICAgIHJlYWRlckNvcHkuY2xv
c2UoKTtcbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkiICAgIHZvaWQgZm9vMTdhKCkgdGhyb3dzIEV4
Y2VwdGlvbiB7XG4iICsKCQkJIiAgICAgICAgRmlsZVJlYWRlciByZWFkZXIxN2EgPSBuZXcgRmls
ZVJlYWRlcihcImZpbGVcIik7XG4iICsKCQkJIiAgICAgICAgRmlsZVJlYWRlciByZWFkZXJDb3B5
YTsiICsKCQkJIgkJIHJlYWRlckNvcHlhID0gcmVhZGVyMTdhO1xuIiArCgkJCSIgICAgICAgIGJh
cihyZWFkZXJDb3B5YSk7XG4iICsgLy8gcG90ZW50aWFsbHkgY2xvc2VzCgkJCSIgICAgfVxuIiAr
CgkJCSIgICAgdm9pZCBiYXIoRmlsZVJlYWRlciByKSB7fVxuIiArCgkJCSJ9XG4iCgkJfSwKCQki
LS0tLS0tLS0tLVxuIiArCgkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA5KVxuIiArCgkJ
IglGaWxlUmVhZGVyIHJlYWRlcjE3YSA9IG5ldyBGaWxlUmVhZGVyKFwiZmlsZVwiKTtcbiIgKwoJ
CSIJICAgICAgICAgICBeXl5eXl5eXl5cbiIgKwoJCSJQb3RlbnRpYWwgcmVzb3VyY2UgbGVhazog
J3JlYWRlcjE3YScgbWF5IG5vdCBiZSBjbG9zZWRcbiIgKwoJCSItLS0tLS0tLS0tXG4iLAoJCW51
bGwsCgkJdHJ1ZSwKCQlvcHRpb25zKTsKfQovLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5p
bmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCi8vIG11bHRpcGxlIGVhcmx5IGV4aXN0
cyBmcm9tIG5lc3RlZCBzY29wZXMgKGFsd2F5cyBjbG9zZWQpCnB1YmxpYyB2b2lkIHRlc3QwNTZ6
eigpIHsKCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CglvcHRpb25zLnB1dChK
YXZhQ29yZS5DT01QSUxFUl9QQl9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5F
UlJPUik7CglvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9QT1RFTlRJQUxMWV9VTkNM
T1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CglvcHRpb25zLnB1dChKYXZh
Q29yZS5DT01QSUxFUl9QQl9FWFBMSUNJVExZX0NMT1NFRF9BVVRPQ0xPU0VBQkxFLCBDb21waWxl
ck9wdGlvbnMuRVJST1IpOwoJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfREVBRF9D
T0RFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwoJcnVuVGVzdHNFeHBlY3RpbmdFcnJvcnNPbmx5
SW4xNygKCQluZXcgU3RyaW5nW10gewoJCQkiWC5qYXZhIiwKCQkJImltcG9ydCBqYXZhLmlvLkZp
bGVSZWFkZXI7XG4iICsKCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwoJCQkiICAgIHZvaWQgZm9v
MTYoKSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIgKwoJCQkiICAgICAgICBGaWxlUmVhZGVyIHJlYWRl
cjE2ID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlXCIpO1xuIiArCgkJCSIgICAgICAgIHRyeSB7XG4i
ICsKCQkJIiAgICAgICAgICAgIHJlYWRlcjE2LmNsb3NlKCk7XG4gIiArCgkJCSIgICAgICAgICAg
ICByZXR1cm47XG4iICsKCQkJIiAgICAgICAgfSBjYXRjaCAoUnVudGltZUV4Y2VwdGlvbiByZSkg
e1xuIiArCgkJCSIgICAgICAgICAgICByZXR1cm47XG4iICsKCQkJIiAgICAgICAgfSBjYXRjaCAo
RXJyb3IgZSkge1xuIiArCgkJCSIgICAgICAgICAgICByZXR1cm47XG4iICsKCQkJIiAgICAgICAg
fSBmaW5hbGx5IHtcbiIgKwoJCQkiICAgICAgICAgICAgcmVhZGVyMTYuY2xvc2UoKTtcbiAiICsK
CQkJIiAgICAgICAgfVxuIiArCgkJCSIgICAgfVxuIiArCgkJCSJ9XG4iCgkJfSwKCQkiLS0tLS0t
LS0tLVxuIiArCgkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA0KVxuIiArCgkJIglGaWxl
UmVhZGVyIHJlYWRlcjE2ID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlXCIpO1xuIiArCgkJIgkgICAg
ICAgICAgIF5eXl5eXl5eXG4iICsKCQkiUmVzb3VyY2UgJ3JlYWRlcjE2JyBzaG91bGQgYmUgbWFu
YWdlZCBieSB0cnktd2l0aC1yZXNvdXJjZVxuIiArCgkJIi0tLS0tLS0tLS1cbiIsCgkJb3B0aW9u
cyk7Cn0KLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13
aXRoLXJlc291cmNlcwovLyBtdWx0aXBsZSBlYXJseSBleGlzdHMgZnJvbSBuZXN0ZWQgc2NvcGVz
IChuZXZlciBjbG9zZWQpCnB1YmxpYyB2b2lkIHRlc3QwNTZ6enooKSB7CglNYXAgb3B0aW9ucyA9
IGdldENvbXBpbGVyT3B0aW9ucygpOwoJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJf
VU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwoJb3B0aW9ucy5wdXQo
SmF2YUNvcmUuQ09NUElMRVJfUEJfUE9URU5USUFMTFlfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21w
aWxlck9wdGlvbnMuRVJST1IpOwoJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfRVhQ
TElDSVRMWV9DTE9TRURfQVVUT0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKCW9w
dGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX0RFQURfQ09ERSwgQ29tcGlsZXJPcHRpb25z
LkVSUk9SKTsKCXRoaXMucnVuTmVnYXRpdmVUZXN0KAoJCW5ldyBTdHJpbmdbXSB7CgkJCSJYLmph
dmEiLAoJCQkiaW1wb3J0IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIgKwoJCQkicHVibGljIGNsYXNz
IFgge1xuIiArCgkJCSIgICAgdm9pZCBmb28xNigpIHRocm93cyBFeGNlcHRpb24ge1xuIiArCgkJ
CSIgICAgICAgIEZpbGVSZWFkZXIgcmVhZGVyMTYgPSBuZXcgRmlsZVJlYWRlcihcImZpbGVcIik7
XG4iICsKCQkJIiAgICAgICAgdHJ5IHtcbiIgKwoJCQkiICAgICAgICAgICAgcmV0dXJuO1xuIiAr
CgkJCSIgICAgICAgIH0gY2F0Y2ggKFJ1bnRpbWVFeGNlcHRpb24gcmUpIHtcbiIgKwoJCQkiICAg
ICAgICAgICAgcmV0dXJuO1xuIiArCgkJCSIgICAgICAgIH0gY2F0Y2ggKEVycm9yIGUpIHtcbiIg
KwoJCQkiICAgICAgICAgICAgcmV0dXJuO1xuIiArCgkJCSIgICAgICAgIH0gZmluYWxseSB7XG4i
ICsKCQkJIiAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbigpO1xuICIgKwoJCQkiICAgICAg
ICB9XG4iICsKCQkJIiAgICB9XG4iICsKCQkJIn1cbiIKCQl9LAoJCSItLS0tLS0tLS0tXG4iICsK
CQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDQpXG4iICsKCQkiCUZpbGVSZWFkZXIgcmVh
ZGVyMTYgPSBuZXcgRmlsZVJlYWRlcihcImZpbGVcIik7XG4iICsKCQkiCSAgICAgICAgICAgXl5e
Xl5eXl5cbiIgKwoJCSJSZXNvdXJjZSBsZWFrOiAncmVhZGVyMTYnIGlzIG5ldmVyIGNsb3NlZFxu
IiArCgkJIi0tLS0tLS0tLS1cbiIsCgkJbnVsbCwKCQl0cnVlLAoJCW9wdGlvbnMpOwp9Ci8vIEJ1
ZyAzNTkzMzQgLSBBbmFseXNpcyBmb3IgcmVzb3VyY2UgbGVhayB3YXJuaW5ncyBkb2VzIG5vdCBj
b25zaWRlciBleGNlcHRpb25zIGFzIG1ldGhvZCBleGl0IHBvaW50cwovLyBleHBsaWNpdCB0aHJv
dyBpcyBhIHRydWUgbWV0aG9kIGV4aXQgaGVyZQpwdWJsaWMgdm9pZCB0ZXN0MDU2dGhyb3cxKCkg
ewoJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKCW9wdGlvbnMucHV0KEphdmFD
b3JlLkNPTVBJTEVSX1BCX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9S
KTsKCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX1BPVEVOVElBTExZX1VOQ0xPU0VE
X0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKCW9wdGlvbnMucHV0KEphdmFDb3Jl
LkNPTVBJTEVSX1BCX0VYUExJQ0lUTFlfQ0xPU0VEX0FVVE9DTE9TRUFCTEUsIENvbXBpbGVyT3B0
aW9ucy5FUlJPUik7CglvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9ERUFEX0NPREUs
IENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Cgl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKCQluZXcgU3Ry
aW5nW10gewoJCQkiWC5qYXZhIiwKCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFkZXI7XG4iICsK
CQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwoJCQkiICAgIHZvaWQgZm9vMihib29sZWFuIGEsIGJv
b2xlYW4gYiwgYm9vbGVhbiBjKSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIgKwoJCQkiICAgICAgICBG
aWxlUmVhZGVyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKFwiZmlsZVwiKTtcbiIgKwoJCQkiICAg
ICAgICBpZihhKVxuIiArCgkJCSIgICAgICAgICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKCk7ICAg
IC8vd2FybmluZyAxXG4iICsKCQkJIiAgICAgICAgZWxzZSBpZiAoYilcbiIgKwoJCQkiICAgICAg
ICAgICAgcmVhZGVyLmNsb3NlKCk7XG4iICsKCQkJIiAgICAgICAgZWxzZSBpZihjKVxuIiArCgkJ
CSIgICAgICAgICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKCk7ICAgIC8vd2FybmluZyAyXG4iICsK
CQkJIiAgICAgICAgcmVhZGVyLmNsb3NlKCk7XG4iICsKCQkJIiAgICB9XG4iICsKCQkJIn1cbiIK
CQl9LAoJCSItLS0tLS0tLS0tXG4iICsKCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDYp
XG4iICsKCQkiCXRocm93IG5ldyBFeGNlcHRpb24oKTsgICAgLy93YXJuaW5nIDFcbiIgKwoJCSIJ
Xl5eXl5eXl5eXl5eXl5eXl5eXl5eXlxuIiArCgkJIlJlc291cmNlIGxlYWs6ICdyZWFkZXInIGlz
IG5vdCBjbG9zZWQgYXQgdGhpcyBsb2NhdGlvblxuIiArCgkJIi0tLS0tLS0tLS1cbiIgKwoJCSIy
LiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTApXG4iICsKCQkiCXRocm93IG5ldyBFeGNlcHRp
b24oKTsgICAgLy93YXJuaW5nIDJcbiIgKwoJCSIJXl5eXl5eXl5eXl5eXl5eXl5eXl5eXlxuIiAr
CgkJIlJlc291cmNlIGxlYWs6ICdyZWFkZXInIGlzIG5vdCBjbG9zZWQgYXQgdGhpcyBsb2NhdGlv
blxuIiArCgkJIi0tLS0tLS0tLS1cbiIsCgkJbnVsbCwKCQl0cnVlLAoJCW9wdGlvbnMpOwp9Ci8v
IEJ1ZyAzNTkzMzQgLSBBbmFseXNpcyBmb3IgcmVzb3VyY2UgbGVhayB3YXJuaW5ncyBkb2VzIG5v
dCBjb25zaWRlciBleGNlcHRpb25zIGFzIG1ldGhvZCBleGl0IHBvaW50cwovLyBjbG9zZSgpIHdp
dGhpbiBmaW5hbGx5IHByb3ZpZGVzIHByb3RlY3Rpb24gZm9yIHRocm93CnB1YmxpYyB2b2lkIHRl
c3QwNTZ0aHJvdzIoKSB7CglNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwoJb3B0
aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxl
ck9wdGlvbnMuRVJST1IpOwoJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfUE9URU5U
SUFMTFlfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwoJb3B0aW9u
cy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfRVhQTElDSVRMWV9DTE9TRURfQVVUT0NMT1NFQUJM
RSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVS
X1BCX0RFQURfQ09ERSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKCXJ1blRlc3RzRXhwZWN0aW5n
RXJyb3JzT25seUluMTcoCgkJbmV3IFN0cmluZ1tdIHsKCQkJIlguamF2YSIsCgkJCSJpbXBvcnQg
amF2YS5pby5GaWxlUmVhZGVyO1xuIiArCgkJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwoJCQkJ
CSIgICAgdm9pZCBmb28xKCkgdGhyb3dzIEV4Y2VwdGlvbiB7XG4iICsKCQkJCQkiICAgICAgICBG
aWxlUmVhZGVyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKFwiZmlsZVwiKTsgLy8gcHJvcG9zZSB0
LXctclxuIiArCgkJCQkJIiAgICAgICAgdHJ5IHtcbiIgKwoJCQkJCSIgICAgICAgICAgICByZWFk
ZXIucmVhZCgpO1xuIiArCgkJCQkJIiAgICAgICAgICAgIHJldHVybjtcbiIgKwoJCQkJCSIgICAg
ICAgIH0gY2F0Y2ggKEV4Y2VwdGlvbiBlKSB7XG4iICsKCQkJCQkiICAgICAgICAgICAgdGhyb3cg
bmV3IEV4Y2VwdGlvbigpO1xuIiArCgkJCQkJIiAgICAgICAgfSBmaW5hbGx5IHtcbiIgKwoJCQkJ
CSIgICAgICAgICAgICByZWFkZXIuY2xvc2UoKTtcbiIgKwoJCQkJCSIgICAgICAgIH1cbiIgKwoJ
CQkJCSIgICAgfVxuIiArCgkJCQkJIlxuIiArCgkJCQkJIiAgICB2b2lkIGZvbzIoKSB0aHJvd3Mg
RXhjZXB0aW9uIHtcbiIgKwoJCQkJCSIgICAgICAgIEZpbGVSZWFkZXIgcmVhZGVyID0gbmV3IEZp
bGVSZWFkZXIoXCJmaWxlXCIpOyAvLyBwcm9wb3NlIHQtdy1yXG4iICsKCQkJCQkiICAgICAgICB0
cnkge1xuIiArCgkJCQkJIiAgICAgICAgICAgIHJlYWRlci5yZWFkKCk7XG4iICsKCQkJCQkiICAg
ICAgICAgICAgdGhyb3cgbmV3IEV4Y2VwdGlvbigpOyAvLyBzaG91bGQgbm90IHdhcm4gaGVyZVxu
IiArCgkJCQkJIiAgICAgICAgfSBjYXRjaCAoRXhjZXB0aW9uIGUpIHtcbiIgKwoJCQkJCSIgICAg
ICAgICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKCk7XG4iICsKCQkJCQkiICAgICAgICB9IGZpbmFs
bHkge1xuIiArCgkJCQkJIiAgICAgICAgICAgIHJlYWRlci5jbG9zZSgpO1xuIiArCgkJCQkJIiAg
ICAgICAgfVxuIiArCgkJCQkJIiAgICB9XG4iICsKCQkJCQkiXG4iICsKCQkJCQkiICAgIHZvaWQg
Zm9vMygpIHRocm93cyBFeGNlcHRpb24ge1xuIiArCgkJCQkJIiAgICAgICAgRmlsZVJlYWRlciBy
ZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihcImZpbGVcIik7IC8vIHByb3Bvc2UgdC13LXJcbiIgKwoJ
CQkJCSIgICAgICAgIHRyeSB7XG4iICsKCQkJCQkiICAgICAgICAgICAgcmVhZGVyLnJlYWQoKTtc
biIgKwoJCQkJCSIgICAgICAgICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKCk7XG4iICsKCQkJCQki
ICAgICAgICB9IGZpbmFsbHkge1xuIiArCgkJCQkJIiAgICAgICAgICAgIHJlYWRlci5jbG9zZSgp
O1xuIiArCgkJCQkJIiAgICAgICAgfVxuIiArCgkJCQkJIiAgICB9XG4iICsKCQkJCQkifVxuIgoJ
CQl9LAoJCQkiLS0tLS0tLS0tLVxuIiArCgkJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUg
NClcbiIgKwoJCQkiCUZpbGVSZWFkZXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlXCIp
OyAvLyBwcm9wb3NlIHQtdy1yXG4iICsKCQkJIgkgICAgICAgICAgIF5eXl5eXlxuIiArCgkJCSJS
ZXNvdXJjZSAncmVhZGVyJyBzaG91bGQgYmUgbWFuYWdlZCBieSB0cnktd2l0aC1yZXNvdXJjZVxu
IiArCgkJCSItLS0tLS0tLS0tXG4iICsKCQkJIjIuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAx
NilcbiIgKwoJCQkiCUZpbGVSZWFkZXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlXCIp
OyAvLyBwcm9wb3NlIHQtdy1yXG4iICsKCQkJIgkgICAgICAgICAgIF5eXl5eXlxuIiArCgkJCSJS
ZXNvdXJjZSAncmVhZGVyJyBzaG91bGQgYmUgbWFuYWdlZCBieSB0cnktd2l0aC1yZXNvdXJjZVxu
IiArCgkJCSItLS0tLS0tLS0tXG4iICsKCQkJIjMuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAy
OClcbiIgKwoJCQkiCUZpbGVSZWFkZXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlXCIp
OyAvLyBwcm9wb3NlIHQtdy1yXG4iICsKCQkJIgkgICAgICAgICAgIF5eXl5eXlxuIiArCgkJCSJS
ZXNvdXJjZSAncmVhZGVyJyBzaG91bGQgYmUgbWFuYWdlZCBieSB0cnktd2l0aC1yZXNvdXJjZVxu
IiArCgkJCSItLS0tLS0tLS0tXG4iLAoJCQlvcHRpb25zKTsKfQovLyBCdWcgMzU5MzM0IC0gQW5h
bHlzaXMgZm9yIHJlc291cmNlIGxlYWsgd2FybmluZ3MgZG9lcyBub3QgY29uc2lkZXIgZXhjZXB0
aW9ucyBhcyBtZXRob2QgZXhpdCBwb2ludHMKLy8gY2xvc2UoKSBuZXN0ZWQgd2l0aGluIGZpbmFs
bHkgcHJvdmlkZXMgcHJvdGVjdGlvbiBmb3IgdGhyb3cKcHVibGljIHZvaWQgdGVzdDA1NnRocm93
MygpIHsKCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CglvcHRpb25zLnB1dChK
YXZhQ29yZS5DT01QSUxFUl9QQl9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5F
UlJPUik7CglvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9QT1RFTlRJQUxMWV9VTkNM
T1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CglvcHRpb25zLnB1dChKYXZh
Q29yZS5DT01QSUxFUl9QQl9FWFBMSUNJVExZX0NMT1NFRF9BVVRPQ0xPU0VBQkxFLCBDb21waWxl
ck9wdGlvbnMuRVJST1IpOwoJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfREVBRF9D
T0RFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwoJcnVuVGVzdHNFeHBlY3RpbmdFcnJvcnNPbmx5
SW4xNygKCQluZXcgU3RyaW5nW10gewoJCQkiWC5qYXZhIiwKCQkJImltcG9ydCBqYXZhLmlvLkZp
bGVSZWFkZXI7XG4iICsKCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwoJCQkiICAgIHZvaWQgZm9v
MngoKSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIgKwoJCQkiICAgICAgICBGaWxlUmVhZGVyIHJlYWRl
ciA9IG5ldyBGaWxlUmVhZGVyKFwiZmlsZVwiKTsgLy8gcHJvcG9zZSB0LXctclxuIiArCgkJCSIg
ICAgICAgIHRyeSB7XG4iICsKCQkJIiAgICAgICAgICAgIHJlYWRlci5yZWFkKCk7XG4iICsKCQkJ
IiAgICAgICAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oKTsgLy8gc2hvdWxkIG5vdCB3YXJuIGhl
cmVcbiIgKwoJCQkiICAgICAgICB9IGNhdGNoIChFeGNlcHRpb24gZSkge1xuIiArCgkJCSIgICAg
ICAgICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKCk7XG4iICsKCQkJIiAgICAgICAgfSBmaW5hbGx5
IHtcbiIgKwoJCQkiICAgICAgICAgICAgaWYgKHJlYWRlciAhPSBudWxsKVxuIiArCgkJCSIgICAg
ICAgICAgICAgICAgIHRyeSB7XG4iICsKCQkJIiAgICAgICAgICAgICAgICAgICAgIHJlYWRlci5j
bG9zZSgpO1xuIiArCgkJCSIgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGphdmEuaW8uSU9FeGNl
cHRpb24gaW8pIHt9XG4iICsKCQkJIiAgICAgICAgfVxuIiArCgkJCSIgICAgfVxuIiArCgkJCSJ9
XG4iCgkJfSwKCQkiLS0tLS0tLS0tLVxuIiArCgkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGlu
ZSA0KVxuIiArCgkJIglGaWxlUmVhZGVyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKFwiZmlsZVwi
KTsgLy8gcHJvcG9zZSB0LXctclxuIiArCgkJIgkgICAgICAgICAgIF5eXl5eXlxuIiArCgkJIlJl
c291cmNlICdyZWFkZXInIHNob3VsZCBiZSBtYW5hZ2VkIGJ5IHRyeS13aXRoLXJlc291cmNlXG4i
ICsKCQkiLS0tLS0tLS0tLVxuIiwKCQlvcHRpb25zKTsKfQovLyBCdWcgMzU5MzM0IC0gQW5hbHlz
aXMgZm9yIHJlc291cmNlIGxlYWsgd2FybmluZ3MgZG9lcyBub3QgY29uc2lkZXIgZXhjZXB0aW9u
cyBhcyBtZXRob2QgZXhpdCBwb2ludHMKLy8gYWRkaXRpb25hbCBib29sZWFuIHNob3VsZCBzaGVk
IGRvdWJ0IG9uIHdoZXRoZXIgd2UgcmVhY2ggdGhlIGNsb3NlKCkgY2FsbApwdWJsaWMgdm9pZCB0
ZXN0MDU2dGhyb3c0KCkgewoJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKCW9w
dGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGls
ZXJPcHRpb25zLkVSUk9SKTsKCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX1BPVEVO
VElBTExZX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKCW9wdGlv
bnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX0VYUExJQ0lUTFlfQ0xPU0VEX0FVVE9DTE9TRUFC
TEUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CglvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxF
Ul9QQl9ERUFEX0NPREUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Cgl0aGlzLnJ1bk5lZ2F0aXZl
VGVzdCgKCQluZXcgU3RyaW5nW10gewoJCQkiWC5qYXZhIiwKCQkJImltcG9ydCBqYXZhLmlvLkZp
bGVSZWFkZXI7XG4iICsKCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwoJCQkiICAgIHZvaWQgZm9v
MngoYm9vbGVhbiBiKSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIgKwoJCQkiICAgICAgICBGaWxlUmVh
ZGVyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKFwiZmlsZVwiKTtcbiIgKwoJCQkiICAgICAgICB0
cnkge1xuIiArCgkJCSIgICAgICAgICAgICByZWFkZXIucmVhZCgpO1xuIiArCgkJCSIgICAgICAg
ICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKCk7IC8vIHNob3VsZCB3YXJuIGhlcmVcbiIgKwoJCQki
ICAgICAgICB9IGNhdGNoIChFeGNlcHRpb24gZSkge1xuIiArCgkJCSIgICAgICAgICAgICB0aHJv
dyBuZXcgRXhjZXB0aW9uKCk7IC8vIHNob3VsZCB3YXJuIGhlcmVcbiIgKwoJCQkiICAgICAgICB9
IGZpbmFsbHkge1xuIiArCgkJCSIgICAgICAgICAgICBpZiAocmVhZGVyICE9IG51bGwgJiYgYilc
biIgKyAvLyB0aGlzIGNvbmRpdGlvbiBpcyB0b28gc3Ryb25nIHRvIHByb3RlY3QgcmVhZGVyCgkJ
CSIgICAgICAgICAgICAgICAgIHRyeSB7XG4iICsKCQkJIiAgICAgICAgICAgICAgICAgICAgIHJl
YWRlci5jbG9zZSgpO1xuIiArCgkJCSIgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGphdmEuaW8u
SU9FeGNlcHRpb24gaW8pIHt9XG4iICsKCQkJIiAgICAgICAgfVxuIiArCgkJCSIgICAgfVxuIiAr
CgkJCSJ9XG4iCgkJfSwKCQkiLS0tLS0tLS0tLVxuIiArCgkJIjEuIEVSUk9SIGluIFguamF2YSAo
YXQgbGluZSA3KVxuIiArCgkJIgl0aHJvdyBuZXcgRXhjZXB0aW9uKCk7IC8vIHNob3VsZCB3YXJu
IGhlcmVcbiIgKwoJCSIJXl5eXl5eXl5eXl5eXl5eXl5eXl5eXlxuIiArCgkJIlBvdGVudGlhbCBy
ZXNvdXJjZSBsZWFrOiAncmVhZGVyJyBtYXkgbm90IGJlIGNsb3NlZCBhdCB0aGlzIGxvY2F0aW9u
XG4iICsKCQkiLS0tLS0tLS0tLVxuIiArCgkJIjIuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA5
KVxuIiArCgkJIgl0aHJvdyBuZXcgRXhjZXB0aW9uKCk7IC8vIHNob3VsZCB3YXJuIGhlcmVcbiIg
KwoJCSIJXl5eXl5eXl5eXl5eXl5eXl5eXl5eXlxuIiArCgkJIlBvdGVudGlhbCByZXNvdXJjZSBs
ZWFrOiAncmVhZGVyJyBtYXkgbm90IGJlIGNsb3NlZCBhdCB0aGlzIGxvY2F0aW9uXG4iICsKCQki
LS0tLS0tLS0tLVxuIiwKCQludWxsLAoJCXRydWUsCgkJb3B0aW9ucyk7Cn0KLy8gQnVnIDM1OTMz
NCAtIEFuYWx5c2lzIGZvciByZXNvdXJjZSBsZWFrIHdhcm5pbmdzIGRvZXMgbm90IGNvbnNpZGVy
IGV4Y2VwdGlvbnMgYXMgbWV0aG9kIGV4aXQgcG9pbnRzCi8vIHNpbWlsYXIgdG8gdGVzdDA1NnRo
cm93MygpIGJ1dCBpbmRpcmVjdGx5IGNhbGxpbmcgY2xvc2UoKSwgc28gZG91YnRzIHJlbWFpbi4K
cHVibGljIHZvaWQgdGVzdDA1NnRocm93NSgpIHsKCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJP
cHRpb25zKCk7CglvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9VTkNMT1NFRF9DTE9T
RUFCTEUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CglvcHRpb25zLnB1dChKYXZhQ29yZS5DT01Q
SUxFUl9QQl9QT1RFTlRJQUxMWV9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5F
UlJPUik7CglvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9FWFBMSUNJVExZX0NMT1NF
RF9BVVRPQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwoJb3B0aW9ucy5wdXQoSmF2
YUNvcmUuQ09NUElMRVJfUEJfREVBRF9DT0RFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwoJdGhp
cy5ydW5OZWdhdGl2ZVRlc3QoCgkJbmV3IFN0cmluZ1tdIHsKCQkJIlguamF2YSIsCgkJCSJpbXBv
cnQgamF2YS5pby5GaWxlUmVhZGVyO1xuIiArCgkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKCQkJ
IiAgICB2b2lkIGZvbzJ4KCkgdGhyb3dzIEV4Y2VwdGlvbiB7XG4iICsKCQkJIiAgICAgICAgRmls
ZVJlYWRlciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihcImZpbGVcIik7XG4iICsKCQkJIiAgICAg
ICAgdHJ5IHtcbiIgKwoJCQkiICAgICAgICAgICAgcmVhZGVyLnJlYWQoKTtcbiIgKwoJCQkiICAg
ICAgICAgICAgdGhyb3cgbmV3IEV4Y2VwdGlvbigpOyAvLyBzaG91bGQgd2FybiAnbWF5IG5vdCcg
aGVyZVxuIiArCgkJCSIgICAgICAgIH0gY2F0Y2ggKEV4Y2VwdGlvbiBlKSB7XG4iICsKCQkJIiAg
ICAgICAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oKTsgLy8gc2hvdWxkIHdhcm4gJ21heSBub3Qn
IGhlcmVcbiIgKwoJCQkiICAgICAgICB9IGZpbmFsbHkge1xuIiArCgkJCSIgICAgICAgICAgICBk
b0Nsb3NlKHJlYWRlcik7XG4iICsKCQkJIiAgICAgICAgfVxuIiArCgkJCSIgICAgfVxuIiArCgkJ
CSIgICAgdm9pZCBkb0Nsb3NlKEZpbGVSZWFkZXIgcikgeyB0cnkgeyByLmNsb3NlKCk7IH0gY2F0
Y2ggKGphdmEuaW8uSU9FeGNlcHRpb24gZXgpIHt9fVxuIiArCgkJCSJ9XG4iCgkJfSwKCQkiLS0t
LS0tLS0tLVxuIiArCgkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA3KVxuIiArCgkJIgl0
aHJvdyBuZXcgRXhjZXB0aW9uKCk7IC8vIHNob3VsZCB3YXJuIFwnbWF5IG5vdFwnIGhlcmVcbiIg
KwoJCSIJXl5eXl5eXl5eXl5eXl5eXl5eXl5eXlxuIiArCgkJIlBvdGVudGlhbCByZXNvdXJjZSBs
ZWFrOiAncmVhZGVyJyBtYXkgbm90IGJlIGNsb3NlZCBhdCB0aGlzIGxvY2F0aW9uXG4iICsKCQki
LS0tLS0tLS0tLVxuIiArCgkJIjIuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA5KVxuIiArCgkJ
Igl0aHJvdyBuZXcgRXhjZXB0aW9uKCk7IC8vIHNob3VsZCB3YXJuIFwnbWF5IG5vdFwnIGhlcmVc
biIgKwoJCSIJXl5eXl5eXl5eXl5eXl5eXl5eXl5eXlxuIiArCgkJIlBvdGVudGlhbCByZXNvdXJj
ZSBsZWFrOiAncmVhZGVyJyBtYXkgbm90IGJlIGNsb3NlZCBhdCB0aGlzIGxvY2F0aW9uXG4iICsK
CQkiLS0tLS0tLS0tLVxuIiwKCQludWxsLAoJCXRydWUsCgkJb3B0aW9ucyk7Cn0KCi8vIEJ1ZyAz
NTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJu
aW5ncwovLyBCdWcgMzYwOTA4IC0gQXZvaWQgcmVzb3VyY2UgbGVhayB3YXJuaW5nIHdoZW4gdGhl
IHVuZGVybHlpbmcvY2hhaW5lZCByZXNvdXJjZSBpcyBjbG9zZWQgZXhwbGljaXRseQovLyBhIHJl
c291cmNlIHdyYXBwZXIgaXMgbm90IGNsb3NlZCBidXQgdGhlIHVuZGVybHlpbmcgcmVzb3VyY2Ug
aXMKcHVibGljIHZvaWQgdGVzdDA2MWEoKSB7CglNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0
aW9ucygpOwoJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3Nl
ZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKCW9wdGlvbnMucHV0KENvbXBpbGVy
T3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGls
ZXJPcHRpb25zLkVSUk9SKTsKCXRoaXMucnVuQ29uZm9ybVRlc3QoCgkJbmV3IFN0cmluZ1tdIHsK
CQkJIlguamF2YSIsCgkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCgkJCSJpbXBvcnQgamF2
YS5pby5CdWZmZXJlZElucHV0U3RyZWFtO1xuIiArCgkJCSJpbXBvcnQgamF2YS5pby5GaWxlSW5w
dXRTdHJlYW07XG4iICsKCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCgkJCSJw
dWJsaWMgY2xhc3MgWCB7XG4iICsKCQkJIiAgICB2b2lkIGZvbygpIHRocm93cyBJT0V4Y2VwdGlv
biB7XG4iICsKCQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtc
biIgKwoJCQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0gZmlsZVN0cmVhbSAgPSBuZXcgRmlsZUlu
cHV0U3RyZWFtKGZpbGUpO1xuIiArCgkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlz
ID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oZmlsZVN0cmVhbSk7XG4iICsKCQkJIiAgICAgICAg
QnVmZmVyZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFwID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0o
YmlzKTtcbiIgKwoJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oYmlzLmF2YWlsYWJsZSgp
KTtcbiIgKwoJCQkiICAgICAgICBmaWxlU3RyZWFtLmNsb3NlKCk7XG4iICsKCQkJIiAgICB9XG4i
ICsKCQkJIiAgICB2b2lkIGlubGluZSgpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKCQkJIiAg
ICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKwoJCQkiICAgICAg
ICBGaWxlSW5wdXRTdHJlYW0gZmlsZVN0cmVhbTtcbiIgKwoJCQkiICAgICAgICBCdWZmZXJlZElu
cHV0U3RyZWFtIGJpcyA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGZpbGVTdHJlYW0gPSBuZXcg
RmlsZUlucHV0U3RyZWFtKGZpbGUpKTtcbiIgKwoJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50
bG4oYmlzLmF2YWlsYWJsZSgpKTtcbiIgKwoJCQkiICAgICAgICBmaWxlU3RyZWFtLmNsb3NlKCk7
XG4iICsKCQkJIiAgICB9XG4iICsKCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJp
bmdbXSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCgkJCSIgICAgICAgIHRyeSB7XG4i
ICsKCQkJIiAgICAgICAgICAgIG5ldyBYKCkuZm9vKCk7XG4iICsKCQkJIiAgICAgICAgfSBjYXRj
aCAoSU9FeGNlcHRpb24gZXgpIHsiICsKCQkJIiAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRs
bihcIkdvdCBJTyBFeGNlcHRpb25cIik7XG4iICsKCQkJIiAgICAgICAgfVxuIiArCgkJCSIgICAg
fVxuIiArCgkJCSJ9XG4iCgkJfSwKCQkiR290IElPIEV4Y2VwdGlvbiIsCgkJbnVsbCwKCQl0cnVl
LAoJCW51bGwsCgkJb3B0aW9ucywKCQludWxsKTsKfQovLyBCdWcgMzU4OTAzIC0gRmlsdGVyIHBy
YWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsgd2FybmluZ3MKLy8gYSBjbG9zZWFi
bGUgd2l0aG91dCBPUyByZXNvdXJjZSBpcyBub3QgY2xvc2VkCnB1YmxpYyB2b2lkIHRlc3QwNjFi
KCkgewoJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKCW9wdGlvbnMucHV0KENv
bXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0
aW9ucy5FUlJPUik7CglvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBv
dGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Cgl0aGlz
LnJ1bkNvbmZvcm1UZXN0KAoJCW5ldyBTdHJpbmdbXSB7CgkJCSJYLmphdmEiLAoJCQkiaW1wb3J0
IGphdmEuaW8uU3RyaW5nUmVhZGVyO1xuIiArCgkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlv
bjtcbiIgKwoJCQkicHVibGljIGNsYXNzIFgge1xuIiArCgkJCSIgICAgdm9pZCBmb28oKSB0aHJv
d3MgSU9FeGNlcHRpb24ge1xuIiArCgkJCSIgICAgICAgIFN0cmluZ1JlYWRlciBzdHJpbmcgID0g
bmV3IFN0cmluZ1JlYWRlcihcImNvbnRlbnRcIik7XG4iICsKCQkJIiAgICAgICAgU3lzdGVtLm91
dC5wcmludGxuKHN0cmluZy5yZWFkKCkpO1xuIiArCgkJCSIgICAgfVxuIiArCgkJCSIgICAgcHVi
bGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykgdGhyb3dzIElPRXhjZXB0aW9uIHtc
biIgKwoJCQkiICAgICAgICBuZXcgWCgpLmZvbygpO1xuIiArCgkJCSIgICAgfVxuIiArCgkJCSJ9
XG4iCgkJfSwKCQkiOTkiLCAvLyBjaGFyYWN0ZXIgJ2MnCgkJbnVsbCwKCQl0cnVlLAoJCW51bGws
CgkJb3B0aW9ucywKCQludWxsKTsKfQovLyBCdWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5
IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsgd2FybmluZ3MKLy8gYSByZXNvdXJjZSB3cmFwcGVy
IGlzIG5vdCBjbG9zZWQgYnV0IHRoZSB1bmRlcmx5aW5nIGNsb3NlYWJsZSBpcyByZXNvdXJjZS1m
cmVlCnB1YmxpYyB2b2lkIHRlc3QwNjFjKCkgewoJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9w
dGlvbnMoKTsKCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9z
ZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CglvcHRpb25zLnB1dChDb21waWxl
ck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBp
bGVyT3B0aW9ucy5FUlJPUik7Cgl0aGlzLnJ1bkNvbmZvcm1UZXN0KAoJCW5ldyBTdHJpbmdbXSB7
CgkJCSJYLmphdmEiLAoJCQkiaW1wb3J0IGphdmEuaW8uQnVmZmVyZWRSZWFkZXI7XG4iICsKCQkJ
ImltcG9ydCBqYXZhLmlvLlN0cmluZ1JlYWRlcjtcbiIgKwoJCQkiaW1wb3J0IGphdmEuaW8uSU9F
eGNlcHRpb247XG4iICsKCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwoJCQkiICAgIHZvaWQgZm9v
KCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwoJCQkiICAgICAgICBTdHJpbmdSZWFkZXIgaW5w
dXQgPSBuZXcgU3RyaW5nUmVhZGVyKFwiY29udGVudFwiKTtcbiIgKwoJCQkiICAgICAgICBCdWZm
ZXJlZFJlYWRlciBiciA9IG5ldyBCdWZmZXJlZFJlYWRlcihpbnB1dCk7XG4iICsKCQkJIiAgICAg
ICAgQnVmZmVyZWRSZWFkZXIgZG91YmxlV3JhcCA9IG5ldyBCdWZmZXJlZFJlYWRlcihicik7XG4i
ICsKCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGJyLnJlYWQoKSk7XG4iICsKCQkJIiAg
ICB9XG4iICsKCQkJIiAgICB2b2lkIGlubGluZSgpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsK
CQkJIiAgICAgICAgQnVmZmVyZWRSZWFkZXIgYnIgPSBuZXcgQnVmZmVyZWRSZWFkZXIobmV3IFN0
cmluZ1JlYWRlcihcImNvbnRlbnRcIikpO1xuIiArCgkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJp
bnRsbihici5yZWFkKCkpO1xuIiArCgkJCSIgICAgfVxuIiArCgkJCSIgICAgcHVibGljIHN0YXRp
YyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwoJCQki
ICAgICAgICBuZXcgWCgpLmZvbygpO1xuIiArCgkJCSIgICAgfVxuIiArCgkJCSJ9XG4iCgkJfSwK
CQkiOTkiLAoJCW51bGwsCgkJdHJ1ZSwKCQludWxsLAoJCW9wdGlvbnMsCgkJbnVsbCk7Cn0KLy8g
QnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFr
IHdhcm5pbmdzCi8vIGEgcmVzb3VyY2Ugd3JhcHBlciBpcyBub3QgY2xvc2VkIG5laXRoZXIgaXMg
dGhlIHVuZGVybHlpbmcgcmVzb3VyY2UKcHVibGljIHZvaWQgdGVzdDA2MWQoKSB7CglNYXAgb3B0
aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwoJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25z
Lk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsK
CW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNs
b3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLldBUk5JTkcpOwoJdGhpcy5ydW5OZWdhdGl2
ZVRlc3QoCgkJbmV3IFN0cmluZ1tdIHsKCQkJIlguamF2YSIsCgkJCSJpbXBvcnQgamF2YS5pby5G
aWxlO1xuIiArCgkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJlZElucHV0U3RyZWFtO1xuIiArCgkJ
CSJpbXBvcnQgamF2YS5pby5GaWxlSW5wdXRTdHJlYW07XG4iICsKCQkJImltcG9ydCBqYXZhLmlv
LklPRXhjZXB0aW9uO1xuIiArCgkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKCQkJIiAgICB2b2lk
IGZvbygpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKCQkJIiAgICAgICAgRmlsZSBmaWxlID0g
bmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKwoJCQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0g
ZmlsZVN0cmVhbSAgPSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpO1xuIiArCgkJCSIgICAgICAg
IEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oZmlsZVN0
cmVhbSk7XG4iICsKCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFwID0g
bmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oYmlzKTtcbiIgKwoJCQkiICAgICAgICBTeXN0ZW0ub3V0
LnByaW50bG4oYmlzLmF2YWlsYWJsZSgpKTtcbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkiICAgIHZv
aWQgaW5saW5lKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwoJCQkiICAgICAgICBGaWxlIGZp
bGUgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xuIiArCgkJCSIgICAgICAgIEJ1ZmZlcmVkSW5w
dXRTdHJlYW0gYmlzMiA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKG5ldyBGaWxlSW5wdXRTdHJl
YW0oZmlsZSkpO1xuIiArCgkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihiaXMyLmF2YWls
YWJsZSgpKTtcbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBt
YWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKCQkJIiAgICAgICAg
dHJ5IHtcbiIgKwoJCQkiICAgICAgICAgICAgbmV3IFgoKS5mb28oKTtcbiIgKwoJCQkiICAgICAg
ICB9IGNhdGNoIChJT0V4Y2VwdGlvbiBleCkgeyIgKwoJCQkiICAgICAgICAgICAgU3lzdGVtLm91
dC5wcmludGxuKFwiR290IElPIEV4Y2VwdGlvblwiKTtcbiIgKwoJCQkiICAgICAgICB9XG4iICsK
CQkJIiAgICB9XG4iICsKCQkJIn1cbiIKCQl9LAoJCSItLS0tLS0tLS0tXG4iICsKCQkiMS4gRVJS
T1IgaW4gWC5qYXZhIChhdCBsaW5lIDEwKVxuIiArCgkJIglCdWZmZXJlZElucHV0U3RyZWFtIGRv
dWJsZVdyYXAgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShiaXMpO1xuIiArCgkJIgkgICAgICAg
ICAgICAgICAgICAgIF5eXl5eXl5eXl5cbiIgKwoJCSJSZXNvdXJjZSBsZWFrOiBcJ2RvdWJsZVdy
YXBcJyBpcyBuZXZlciBjbG9zZWRcbiIgKwoJCSItLS0tLS0tLS0tXG4iICsKCQkiMi4gRVJST1Ig
aW4gWC5qYXZhIChhdCBsaW5lIDE1KVxuIiArCgkJIglCdWZmZXJlZElucHV0U3RyZWFtIGJpczIg
PSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpKTtcbiIg
KwoJCSIJICAgICAgICAgICAgICAgICAgICBeXl5eXG4iICsKCQkiUmVzb3VyY2UgbGVhazogXCdi
aXMyXCcgaXMgbmV2ZXIgY2xvc2VkXG4iICsKCQkiLS0tLS0tLS0tLVxuIiwKCQludWxsLAoJCXRy
dWUsCgkJb3B0aW9ucyk7Cn0KLy8gQnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmlt
cG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCi8vIEJ1ZyAzNjEwNzMgLSBBdm9pZCByZXNv
dXJjZSBsZWFrIHdhcm5pbmcgd2hlbiB0aGUgdG9wIGxldmVsIHJlc291cmNlIGlzIGNsb3NlZCBl
eHBsaWNpdGx5Ci8vIGEgcmVzb3VyY2Ugd3JhcHBlciBpcyBjbG9zZWQgY2xvc2luZyBhbHNvIHRo
ZSB1bmRlcmx5aW5nIHJlc291cmNlCnB1YmxpYyB2b2lkIHRlc3QwNjFlKCkgewoJTWFwIG9wdGlv
bnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5P
UFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Cglv
cHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9z
ZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Cgl0aGlzLnJ1bkNvbmZvcm1UZXN0
KAoJCW5ldyBTdHJpbmdbXSB7CgkJCSJYLmphdmEiLAoJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtc
biIgKwoJCQkiaW1wb3J0IGphdmEuaW8uQnVmZmVyZWRJbnB1dFN0cmVhbTtcbiIgKwoJCQkiaW1w
b3J0IGphdmEuaW8uRmlsZUlucHV0U3RyZWFtO1xuIiArCgkJCSJpbXBvcnQgamF2YS5pby5JT0V4
Y2VwdGlvbjtcbiIgKwoJCQkicHVibGljIGNsYXNzIFgge1xuIiArCgkJCSIgICAgRmlsZUlucHV0
U3RyZWFtIGZpczsiICsKCQkJIiAgICB2b2lkIGZvbygpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4i
ICsKCQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKwoJ
CQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0gZmlsZVN0cmVhbSAgPSBuZXcgRmlsZUlucHV0U3Ry
ZWFtKGZpbGUpO1xuIiArCgkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzID0gbmV3
IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oZmlsZVN0cmVhbSk7XG4iICsKCQkJIiAgICAgICAgQnVmZmVy
ZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFwID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oYmlzKTtc
biIgKwoJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oYmlzLmF2YWlsYWJsZSgpKTtcbiIg
KwoJCQkiICAgICAgICBiaXMuY2xvc2UoKTtcbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkiICAgIHZv
aWQgaW5saW5lKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwoJCQkiICAgICAgICBGaWxlIGZp
bGUgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xuIiArCgkJCSIgICAgICAgIEJ1ZmZlcmVkSW5w
dXRTdHJlYW0gYmlzMiA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGZpcyA9IG5ldyBGaWxlSW5w
dXRTdHJlYW0oZmlsZSkpO1xuIiArIC8vIGZpZWxkIGFzc2lnbm1lbnQKCQkJIiAgICAgICAgU3lz
dGVtLm91dC5wcmludGxuKGJpczIuYXZhaWxhYmxlKCkpO1xuIiArCgkJCSIgICAgICAgIGJpczIu
Y2xvc2UoKTtcbiIgKwoJCQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0gZmlsZVN0cmVhbSAgPSBu
dWxsO1xuIiArCgkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzMyA9IG5ldyBCdWZm
ZXJlZElucHV0U3RyZWFtKGZpbGVTdHJlYW0gPSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpKTtc
biIgKwoJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oYmlzMy5hdmFpbGFibGUoKSk7XG4i
ICsKCQkJIiAgICAgICAgYmlzMy5jbG9zZSgpO1xuIiArCgkJCSIgICAgfVxuIiArCgkJCSIgICAg
cHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykgdGhyb3dzIElPRXhjZXB0aW9u
IHtcbiIgKwoJCQkiICAgICAgICB0cnkge1xuIiArCgkJCSIgICAgICAgICAgICBuZXcgWCgpLmZv
bygpO1xuIiArCgkJCSIgICAgICAgIH0gY2F0Y2ggKElPRXhjZXB0aW9uIGV4KSB7IiArCgkJCSIg
ICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oXCJHb3QgSU8gRXhjZXB0aW9uXCIpO1xuIiAr
CgkJCSIgICAgICAgIH1cbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkifVxuIgoJCX0sCgkJIkdvdCBJ
TyBFeGNlcHRpb24iLAoJCW51bGwsCgkJdHJ1ZSwKCQludWxsLAoJCW9wdGlvbnMsCgkJbnVsbCk7
Cn0KLy8gQnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJj
ZSBsZWFrIHdhcm5pbmdzCi8vIEJ1ZyAzNjEwNzMgLSBBdm9pZCByZXNvdXJjZSBsZWFrIHdhcm5p
bmcgd2hlbiB0aGUgdG9wIGxldmVsIHJlc291cmNlIGlzIGNsb3NlZCBleHBsaWNpdGx5Ci8vIGEg
cmVzb3VyY2Ugd3JhcHBlciBpcyBjbG9zZWQgY2xvc2luZyBhbHNvIHRoZSB1bmRlcmx5aW5nIHJl
c291cmNlIC0gb3JpZ2luYWwgdGVzdCBjYXNlCnB1YmxpYyB2b2lkIHRlc3QwNjFmKCkgdGhyb3dz
IElPRXhjZXB0aW9uIHsKCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CglvcHRp
b25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBD
b21waWxlck9wdGlvbnMuRVJST1IpOwoJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElP
Tl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJS
T1IpOwoJVVJMIHVybCA9IEZpbGVMb2NhdG9yLnRvRmlsZVVSTChGaWxlTG9jYXRvci5maW5kKFBs
YXRmb3JtLmdldEJ1bmRsZSgib3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIiKSwg
bmV3IFBhdGgoIk1FVEEtSU5GL01BTklGRVNULk1GIiksIG51bGwpKTsKCXRoaXMucnVuQ29uZm9y
bVRlc3QoCgkJbmV3IFN0cmluZ1tdIHsKCQkJIlguamF2YSIsCgkJCSJpbXBvcnQgamF2YS5pby5J
bnB1dFN0cmVhbTtcbiIgKwoJCQkiaW1wb3J0IGphdmEuaW8uSW5wdXRTdHJlYW1SZWFkZXI7XG4i
ICsKCQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkUmVhZGVyO1xuIiArCgkJCSJpbXBvcnQgamF2
YS5pby5JT0V4Y2VwdGlvbjtcbiIgKwoJCQkiaW1wb3J0IGphdmEubmV0LlVSTDtcbiIgKwoJCQki
cHVibGljIGNsYXNzIFgge1xuIiArCgkJCSIgICAgYm9vbGVhbiBsb2FkVVJMKGZpbmFsIFVSTCB1
cmwpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKCQkJIiAgICAgICAgSW5wdXRTdHJlYW0gc3Ry
ZWFtID0gbnVsbDtcbiIgKwoJCQkiICAgICAgICBCdWZmZXJlZFJlYWRlciByZWFkZXIgPSBudWxs
O1xuIiArCgkJCSIgICAgICAgIHRyeSB7XG4iICsKCQkJIiAgICAgICAgICAgIHN0cmVhbSA9IHVy
bC5vcGVuU3RyZWFtKCk7XG4iICsKCQkJIiAgICAgICAgICAgIHJlYWRlciA9IG5ldyBCdWZmZXJl
ZFJlYWRlcihuZXcgSW5wdXRTdHJlYW1SZWFkZXIoc3RyZWFtKSk7XG4iICsKCQkJIiAgICAgICAg
ICAgIFN5c3RlbS5vdXQucHJpbnRsbihyZWFkZXIucmVhZExpbmUoKSk7XG4iICsKCQkJIiAgICAg
ICAgfSBmaW5hbGx5IHtcbiIgKwoJCQkiICAgICAgICAgICAgdHJ5IHtcbiIgKwoJCQkiICAgICAg
ICAgICAgICAgIGlmIChyZWFkZXIgIT0gbnVsbClcbiIgKwoJCQkiICAgICAgICAgICAgICAgICAg
ICByZWFkZXIuY2xvc2UoKTtcbiIgKwoJCQkiICAgICAgICAgICAgfSBjYXRjaCAoSU9FeGNlcHRp
b24geCkge1xuIiArCgkJCSIgICAgICAgICAgICB9XG4iICsKCQkJIiAgICAgICAgfVxuIiArCgkJ
CSIgICAgICAgIHJldHVybiBmYWxzZTsgLy8gJ3N0cmVhbScgbWF5IG5vdCBiZSBjbG9zZWQgYXQg
dGhpcyBsb2NhdGlvblxuIiArCgkJCSIgICAgfVxuIiArCgkJCSIgICAgcHVibGljIHN0YXRpYyB2
b2lkIG1haW4oU3RyaW5nW10gYXJncykgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwoJCQkiICAg
ICAgICB0cnkge1xuIiArCgkJCSIgICAgICAgICAgICBuZXcgWCgpLmxvYWRVUkwobmV3IFVSTChc
IiIrdXJsLnRvU3RyaW5nKCkrIlwiKSk7XG4iICsKCQkJIiAgICAgICAgfSBjYXRjaCAoSU9FeGNl
cHRpb24gZXgpIHtcbiIgKwoJCQkiICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwiR290
IElPIEV4Y2VwdGlvblwiK2V4KTtcbiIgKwoJCQkiICAgICAgICB9XG4iICsKCQkJIiAgICB9XG4i
ICsKCQkJIn1cbiIKCQl9LAoJCSJNYW5pZmVzdC1WZXJzaW9uOiAxLjAiLAoJCW51bGwsCgkJdHJ1
ZSwKCQludWxsLAoJCW9wdGlvbnMsCgkJbnVsbCk7Cn0KLy8gQnVnIDM1ODkwMyAtIEZpbHRlciBw
cmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCi8vIEJ1ZyAzNjA5
MDggLSBBdm9pZCByZXNvdXJjZSBsZWFrIHdhcm5pbmcgd2hlbiB0aGUgdW5kZXJseWluZy9jaGFp
bmVkIHJlc291cmNlIGlzIGNsb3NlZCBleHBsaWNpdGx5Ci8vIERpZmZlcmVudCBwb2ludHMgaW4g
YSByZXNvdXJjZSBjaGFpbiBhcmUgY2xvc2VkCnB1YmxpYyB2b2lkIHRlc3QwNjFnKCkgewoJTWFw
IG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0
aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJP
Uik7CglvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5
VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Cgl0aGlzLnJ1bk5lZ2F0
aXZlVGVzdCgKCQluZXcgU3RyaW5nW10gewoJCQkiWC5qYXZhIiwKCQkJImltcG9ydCBqYXZhLmlv
LkZpbGU7XG4iICsKCQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJlYW07XG4iICsK
CQkJImltcG9ydCBqYXZhLmlvLkZpbGVJbnB1dFN0cmVhbTtcbiIgKwoJCQkiaW1wb3J0IGphdmEu
aW8uSU9FeGNlcHRpb247XG4iICsKCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwoJCQkiICAgIHZv
aWQgY2xvc2VNaWRkbGUoKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCgkJCSIgICAgICAgIEZp
bGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKCQkJIiAgICAgICAgRmlsZUlu
cHV0U3RyZWFtIGZpbGVTdHJlYW0gID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKTtcbiIgKwoJ
CQkiICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGJpcyA9IG5ldyBCdWZmZXJlZElucHV0U3Ry
ZWFtKGZpbGVTdHJlYW0pO1xuIiArCgkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gZG91
YmxlV3JhcCA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGJpcyk7XG4iICsKCQkJIiAgICAgICAg
U3lzdGVtLm91dC5wcmludGxuKGJpcy5hdmFpbGFibGUoKSk7XG4iICsKCQkJIiAgICAgICAgYmlz
LmNsb3NlKCk7XG4iICsKCQkJIiAgICB9XG4iICsKCQkJIiAgICB2b2lkIGNsb3NlT3V0ZXIoKSB0
aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCgkJCSIgICAgICAgIEZpbGUgZmlsZTIgPSBuZXcgRmls
ZShcInNvbWVmaWxlXCIpO1xuIiArCgkJCSIgICAgICAgIEZpbGVJbnB1dFN0cmVhbSBmaWxlU3Ry
ZWFtMiAgPSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUyKTtcbiIgKwoJCQkiICAgICAgICBCdWZm
ZXJlZElucHV0U3RyZWFtIGJpczIgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShmaWxlU3RyZWFt
Mik7XG4iICsKCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFwMiA9IG5l
dyBCdWZmZXJlZElucHV0U3RyZWFtKGJpczIpO1xuIiArCgkJCSIgICAgICAgIFN5c3RlbS5vdXQu
cHJpbnRsbihiaXMyLmF2YWlsYWJsZSgpKTtcbiIgKwoJCQkiICAgICAgICBkb3VibGVXcmFwMi5j
bG9zZSgpO1xuIiArCgkJCSIgICAgfVxuIiArCgkJCSIgICAgdm9pZCBuZXZlckNsb3NlZCgpIHRo
cm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKCQkJIiAgICAgICAgRmlsZSBmaWxlMyA9IG5ldyBGaWxl
KFwic29tZWZpbGVcIik7XG4iICsKCQkJIiAgICAgICAgRmlsZUlucHV0U3RyZWFtIGZpbGVTdHJl
YW0zICA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZTMpO1xuIiArCgkJCSIgICAgICAgIEJ1ZmZl
cmVkSW5wdXRTdHJlYW0gYmlzMyA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGZpbGVTdHJlYW0z
KTtcbiIgKwoJCQkiICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGRvdWJsZVdyYXAzID0gbmV3
IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oYmlzMyk7XG4iICsKCQkJIiAgICAgICAgU3lzdGVtLm91dC5w
cmludGxuKGRvdWJsZVdyYXAzLmF2YWlsYWJsZSgpKTtcbiIgKwoJCQkiICAgIH1cbiIgKwoJCQki
fVxuIgoJCX0sCgkJIi0tLS0tLS0tLS1cbiIgKwoJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxp
bmUgMjYpXG4iICsKCQkiCUJ1ZmZlcmVkSW5wdXRTdHJlYW0gZG91YmxlV3JhcDMgPSBuZXcgQnVm
ZmVyZWRJbnB1dFN0cmVhbShiaXMzKTtcbiIgKwoJCSIJICAgICAgICAgICAgICAgICAgICBeXl5e
Xl5eXl5eXlxuIiArCgkJIlJlc291cmNlIGxlYWs6IFwnZG91YmxlV3JhcDNcJyBpcyBuZXZlciBj
bG9zZWRcbiIgKwoJCSItLS0tLS0tLS0tXG4iLAoJCW51bGwsCgkJdHJ1ZSwKCQlvcHRpb25zKTsK
fQovLyBCdWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNl
IGxlYWsgd2FybmluZ3MKLy8gQnVnIDM2MDkwOCAtIEF2b2lkIHJlc291cmNlIGxlYWsgd2Fybmlu
ZyB3aGVuIHRoZSB1bmRlcmx5aW5nL2NoYWluZWQgcmVzb3VyY2UgaXMgY2xvc2VkIGV4cGxpY2l0
bHkKLy8gRGlmZmVyZW50IHBvaW50cyBpbiBhIHJlc291cmNlIGNoYWluIGFyZSBwb3RlbnRpYWxs
eSBjbG9zZWQKcHVibGljIHZvaWQgdGVzdDA2MWgoKSB7CglNYXAgb3B0aW9ucyA9IGdldENvbXBp
bGVyT3B0aW9ucygpOwoJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRV
bmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKCW9wdGlvbnMucHV0KENv
bXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwg
Q29tcGlsZXJPcHRpb25zLkVSUk9SKTsKCXRoaXMucnVuTmVnYXRpdmVUZXN0KAoJCW5ldyBTdHJp
bmdbXSB7CgkJCSJYLmphdmEiLAoJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKwoJCQkiaW1w
b3J0IGphdmEuaW8uQnVmZmVyZWRJbnB1dFN0cmVhbTtcbiIgKwoJCQkiaW1wb3J0IGphdmEuaW8u
RmlsZUlucHV0U3RyZWFtO1xuIiArCgkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIg
KwoJCQkicHVibGljIGNsYXNzIFgge1xuIiArCgkJCSIgICAgdm9pZCBjbG9zZU1pZGRsZShib29s
ZWFuIGIpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKCQkJIiAgICAgICAgRmlsZSBmaWxlID0g
bmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKwoJCQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0g
ZmlsZVN0cmVhbSAgPSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpO1xuIiArCgkJCSIgICAgICAg
IEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oZmlsZVN0
cmVhbSk7XG4iICsKCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFwID0g
bmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oYmlzKTtcbiIgKwoJCQkiICAgICAgICBTeXN0ZW0ub3V0
LnByaW50bG4oYmlzLmF2YWlsYWJsZSgpKTtcbiIgKwoJCQkiICAgICAgICBpZiAoYilcbiIgKwoJ
CQkiICAgICAgICAgICAgYmlzLmNsb3NlKCk7XG4iICsKCQkJIiAgICB9XG4iICsKCQkJIiAgICB2
b2lkIGNsb3NlT3V0ZXIoYm9vbGVhbiBiKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCgkJCSIg
ICAgICAgIEZpbGUgZmlsZTIgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xuIiArCgkJCSIgICAg
ICAgIEZpbGVJbnB1dFN0cmVhbSBmaWxlU3RyZWFtMiAgPSBuZXcgRmlsZUlucHV0U3RyZWFtKGZp
bGUyKTtcbiIgKwoJCQkiICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGR1bW15O1xuIiArCgkJ
CSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzMiA9IChkdW1teSA9IG5ldyBCdWZmZXJl
ZElucHV0U3RyZWFtKGZpbGVTdHJlYW0yKSk7XG4iICsKCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1
dFN0cmVhbSBkb3VibGVXcmFwMiA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGJpczIpO1xuIiAr
CgkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihiaXMyLmF2YWlsYWJsZSgpKTtcbiIgKwoJ
CQkiICAgICAgICBpZiAoYilcbiIgKwoJCQkiICAgICAgICAgICAgZG91YmxlV3JhcDIuY2xvc2Uo
KTtcbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkiICAgIHZvaWQgcG90QW5kRGVmKGJvb2xlYW4gYikg
dGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwoJCQkiICAgICAgICBGaWxlIGZpbGUzID0gbmV3IEZp
bGUoXCJzb21lZmlsZVwiKTtcbiIgKwoJCQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0gZmlsZVN0
cmVhbTMgID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlMyk7XG4iICsKCQkJIiAgICAgICAgQnVm
ZmVyZWRJbnB1dFN0cmVhbSBiaXMzID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oZmlsZVN0cmVh
bTMpO1xuIiArCgkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gZG91YmxlV3JhcDMgPSBu
ZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShiaXMzKTtcbiIgKwoJCQkiICAgICAgICBTeXN0ZW0ub3V0
LnByaW50bG4oZG91YmxlV3JhcDMuYXZhaWxhYmxlKCkpO1xuIiArCgkJCSIgICAgICAgIGlmIChi
KSBiaXMzLmNsb3NlKCk7XG4iICsKCQkJIiAgICAgICAgZmlsZVN0cmVhbTMuY2xvc2UoKTtcbiIg
KwoJCQkiICAgIH1cbiIgKwoJCQkifVxuIgoJCX0sCgkJIi0tLS0tLS0tLS1cbiIgKwoJCSIxLiBF
UlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTApXG4iICsKCQkiCUJ1ZmZlcmVkSW5wdXRTdHJlYW0g
ZG91YmxlV3JhcCA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGJpcyk7XG4iICsKCQkiCSAgICAg
ICAgICAgICAgICAgICAgXl5eXl5eXl5eXlxuIiArCgkJIlBvdGVudGlhbCByZXNvdXJjZSBsZWFr
OiBcJ2RvdWJsZVdyYXBcJyBtYXkgbm90IGJlIGNsb3NlZFxuIiArCgkJIi0tLS0tLS0tLS1cbiIg
KwoJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMjApXG4iICsKCQkiCUJ1ZmZlcmVkSW5w
dXRTdHJlYW0gZG91YmxlV3JhcDIgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShiaXMyKTtcbiIg
KwoJCSIJICAgICAgICAgICAgICAgICAgICBeXl5eXl5eXl5eXlxuIiArCgkJIlBvdGVudGlhbCBy
ZXNvdXJjZSBsZWFrOiBcJ2RvdWJsZVdyYXAyXCcgbWF5IG5vdCBiZSBjbG9zZWRcbiIgKwoJCSIt
LS0tLS0tLS0tXG4iLAoJCW51bGwsCgkJdHJ1ZSwKCQlvcHRpb25zKTsKfQovLyBCdWcgMzU4OTAz
IC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsgd2FybmluZ3MK
Ly8gbG9jYWwgdmFyIGlzIHJlLXVzZWQgZm9yIHR3byBsZXZlbHMgb2Ygd3JhcHBlcnMKcHVibGlj
IHZvaWQgdGVzdDA2MWkoKSB7CglNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwoJ
b3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJs
ZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5P
UFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25z
LkVSUk9SKTsKCXRoaXMucnVuTmVnYXRpdmVUZXN0KAoJCW5ldyBTdHJpbmdbXSB7CgkJCSJYLmph
dmEiLAoJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKwoJCQkiaW1wb3J0IGphdmEuaW8uSW5w
dXRTdHJlYW07XG4iICsKCQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJlYW07XG4i
ICsKCQkJImltcG9ydCBqYXZhLmlvLkZpbGVJbnB1dFN0cmVhbTtcbiIgKwoJCQkiaW1wb3J0IGph
dmEuaW8uSU9FeGNlcHRpb247XG4iICsKCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwoJCQkiICAg
IHZvaWQgY2xvc2VNaWRkbGUoKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCgkJCSIgICAgICAg
IEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKCQkJIiAgICAgICAgSW5w
dXRTdHJlYW0gc3RyZWFtICA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSk7XG4iICsKCQkJIiAg
ICAgICAgc3RyZWFtID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oc3RyZWFtKTtcbiIgKwoJCQki
ICAgICAgICBJbnB1dFN0cmVhbSBtaWRkbGU7XG4iICsKCQkJIiAgICAgICAgc3RyZWFtID0gbmV3
IEJ1ZmZlcmVkSW5wdXRTdHJlYW0obWlkZGxlID0gc3RyZWFtKTtcbiIgKwoJCQkiICAgICAgICBT
eXN0ZW0ub3V0LnByaW50bG4oc3RyZWFtLmF2YWlsYWJsZSgpKTtcbiIgKwoJCQkiICAgICAgICBt
aWRkbGUuY2xvc2UoKTtcbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkiICAgIHZvaWQgY2xvc2VPdXRl
cigpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKCQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3
IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKwoJCQkiICAgICAgICBJbnB1dFN0cmVhbSBzdHJlYW0y
ICA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSk7XG4iICsKCQkJIiAgICAgICAgc3RyZWFtMiA9
IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKHN0cmVhbTIpO1xuIiArCgkJCSIgICAgICAgIHN0cmVh
bTIgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShzdHJlYW0yKTtcbiIgKwoJCQkiICAgICAgICBT
eXN0ZW0ub3V0LnByaW50bG4oc3RyZWFtMi5hdmFpbGFibGUoKSk7XG4iICsKCQkJIiAgICAgICAg
c3RyZWFtMi5jbG9zZSgpO1xuIiArCgkJCSIgICAgfVxuIiArCgkJCSIgICAgdm9pZCBuZXZlckNs
b3NlZCgpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKCQkJIiAgICAgICAgRmlsZSBmaWxlID0g
bmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKwoJCQkiICAgICAgICBJbnB1dFN0cmVhbSBzdHJl
YW0zICA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSk7XG4iICsKCQkJIiAgICAgICAgc3RyZWFt
MyA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKHN0cmVhbTMpO1xuIiArCgkJCSIgICAgICAgIHN0
cmVhbTMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShzdHJlYW0zKTtcbiIgKwoJCQkiICAgICAg
ICBTeXN0ZW0ub3V0LnByaW50bG4oc3RyZWFtMy5hdmFpbGFibGUoKSk7XG4iICsKCQkJIiAgICB9
XG4iICsKCQkJIn1cbiIKCQl9LAoJCSItLS0tLS0tLS0tXG4iICsKCQkiMS4gRVJST1IgaW4gWC5q
YXZhIChhdCBsaW5lIDI2KVxuIiArCgkJIglJbnB1dFN0cmVhbSBzdHJlYW0zICA9IG5ldyBGaWxl
SW5wdXRTdHJlYW0oZmlsZSk7XG4iICsKCQkiCSAgICAgICAgICAgIF5eXl5eXl5cbiIgKwoJCSJS
ZXNvdXJjZSBsZWFrOiBcJ3N0cmVhbTNcJyBpcyBuZXZlciBjbG9zZWRcbiIgKwoJCSItLS0tLS0t
LS0tXG4iLAoJCW51bGwsCgkJdHJ1ZSwKCQlvcHRpb25zKTsKfQovLyBCdWcgMzU4OTAzIC0gRmls
dGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsgd2FybmluZ3MKLy8gc2Vs
Zi13cmFwcGluZyBhIG1ldGhvZCBhcmd1bWVudCAoY2F1c2VkIE5QRSBVbmNvbmRpdGlvbmFsRmxv
d0luZm8ubWFya0FzRGVmaW5pdGVseU51bGwoLi4pKS4KcHVibGljIHZvaWQgdGVzdDA2MWooKSB7
CglNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwoJb3B0aW9ucy5wdXQoQ29tcGls
ZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25z
LkVSUk9SKTsKCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50
aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKCXRoaXMucnVu
Q29uZm9ybVRlc3QoCgkJbmV3IFN0cmluZ1tdIHsKCQkJIlguamF2YSIsCgkJCSJpbXBvcnQgamF2
YS5pby5JbnB1dFN0cmVhbTtcbiIgKwoJCQkiaW1wb3J0IGphdmEuaW8uQnVmZmVyZWRJbnB1dFN0
cmVhbTtcbiIgKwoJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKCQkJInB1Ymxp
YyBjbGFzcyBYIHtcbiIgKwoJCQkiICAgIHZvaWQgZm9vKElucHV0U3RyZWFtIHN0cmVhbSkgdGhy
b3dzIElPRXhjZXB0aW9uIHtcbiIgKwoJCQkiICAgICAgICBzdHJlYW0gPSBuZXcgQnVmZmVyZWRJ
bnB1dFN0cmVhbShzdHJlYW0pO1xuIiArCgkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihz
dHJlYW0uYXZhaWxhYmxlKCkpO1xuIiArCgkJCSIgICAgICAgIHN0cmVhbS5jbG9zZSgpO1xuIiAr
CgkJCSIgICAgfVxuIiArCgkJCSIgICAgdm9pZCBib28oSW5wdXRTdHJlYW0gc3RyZWFtMikgdGhy
b3dzIElPRXhjZXB0aW9uIHtcbiIgKwoJCQkiICAgICAgICBzdHJlYW0yID0gbmV3IEJ1ZmZlcmVk
SW5wdXRTdHJlYW0oc3RyZWFtMik7XG4iICsKCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxu
KHN0cmVhbTIuYXZhaWxhYmxlKCkpO1xuIiArCgkJCSIgICAgfVxuIiArCgkJCSJ9XG4iCgkJfSwK
CQkiIiwKCQludWxsLAoJCXRydWUsCgkJbnVsbCwKCQlvcHRpb25zLAoJCW51bGwpOwp9Ci8vIEJ1
ZyAzNTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3
YXJuaW5ncwovLyBhIHdyYXBwZXIgaXMgY3JlYXRlZCBpbiBhIHJldHVybiBzdGF0ZW1lbnQKcHVi
bGljIHZvaWQgdGVzdDA2MWsoKSB0aHJvd3MgSU9FeGNlcHRpb24gewoJTWFwIG9wdGlvbnMgPSBn
ZXRDb21waWxlck9wdGlvbnMoKTsKCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05f
UmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CglvcHRpb25z
LnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9z
ZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Cgl0aGlzLnJ1bkNvbmZvcm1UZXN0KAoJCW5l
dyBTdHJpbmdbXSB7CgkJCSJYLmphdmEiLAoJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKwoJ
CQkiaW1wb3J0IGphdmEuaW8uRmlsZUlucHV0U3RyZWFtO1xuIiArCgkJCSJpbXBvcnQgamF2YS5p
by5CdWZmZXJlZElucHV0U3RyZWFtO1xuIiArCgkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlv
bjtcbiIgKwoJCQkicHVibGljIGNsYXNzIFgge1xuIiArCgkJCSIgICAgQnVmZmVyZWRJbnB1dFN0
cmVhbSBnZXRSZWFkZXIoRmlsZSBmaWxlKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCgkJCSIg
ICAgICAgIEZpbGVJbnB1dFN0cmVhbSBzdHJlYW0gPSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUp
O1xuIiArCgkJCSIgICAgICAgIHJldHVybiBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShzdHJlYW0p
O1xuIiArCgkJCSIgICAgfVxuIiArCgkJCSJ9XG4iCgkJfSwKCQkiIiwKCQludWxsLAoJCXRydWUs
CgkJbnVsbCwKCQlvcHRpb25zLAoJCW51bGwpOwp9Ci8vIEJ1ZyAzNTg5MDMgLSBGaWx0ZXIgcHJh
Y3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5ncwovLyBhIGNsb3NlYWJs
ZSBpcyBhc3NpZ25lZCB0byBhIGZpZWxkCnB1YmxpYyB2b2lkIHRlc3QwNjFsKCkgdGhyb3dzIElP
RXhjZXB0aW9uIHsKCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CglvcHRpb25z
LnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21w
aWxlck9wdGlvbnMuRVJST1IpOwoJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9S
ZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1Ip
OwoJdGhpcy5ydW5Db25mb3JtVGVzdCgKCQluZXcgU3RyaW5nW10gewoJCQkiWC5qYXZhIiwKCQkJ
ImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsKCQkJImltcG9ydCBqYXZhLmlvLkZpbGVJbnB1dFN0
cmVhbTtcbiIgKwoJCQkiaW1wb3J0IGphdmEuaW8uQnVmZmVyZWRJbnB1dFN0cmVhbTtcbiIgKwoJ
CQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKCQkJInB1YmxpYyBjbGFzcyBYIHtc
biIgKwoJCQkiICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gc3RyZWFtO1xuIiArCgkJCSIgICAgdm9p
ZCBmb28oRmlsZSBmaWxlKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCgkJCSIgICAgICAgIEZp
bGVJbnB1dFN0cmVhbSBzID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKTtcbiIgKwoJCQkiICAg
ICAgICBzdHJlYW0gPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShzKTtcbiIgKwoJCQkiICAgIH1c
biIgKwoJCQkifVxuIgoJCX0sCgkJIiIsCgkJbnVsbCwKCQl0cnVlLAoJCW51bGwsCgkJb3B0aW9u
cywKCQludWxsKTsKfQovLyBCdWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0
YW50IHJlc291cmNlIGxlYWsgd2FybmluZ3MKLy8gYSBjbG9zZWFibGUgaXMgcGFzc2VkIHRvIGFu
b3RoZXIgbWV0aG9kIGluIGEgcmV0dXJuIHN0YXRlbWVudAovLyBleGFtcGxlIGNvbnN0cnVjdGVk
IGFmdGVyIG9yZy5lY2xpcHNlLmVxdWlub3guaW50ZXJuYWwucDIuYXJ0aWZhY3QucmVwb3NpdG9y
eS5zaW1wbGUuU2ltcGxlQXJ0aWZhY3RSZXBvc2l0b3J5I2dldEFydGlmYWN0KC4uKQpwdWJsaWMg
dm9pZCB0ZXN0MDYxbSgpIHRocm93cyBJT0V4Y2VwdGlvbiB7CglNYXAgb3B0aW9ucyA9IGdldENv
bXBpbGVyT3B0aW9ucygpOwoJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBv
cnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKCW9wdGlvbnMucHV0
KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJs
ZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKCXRoaXMucnVuTmVnYXRpdmVUZXN0KAoJCW5ldyBT
dHJpbmdbXSB7CgkJCSJYLmphdmEiLAoJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKwoJCQki
aW1wb3J0IGphdmEuaW8uRmlsZUlucHV0U3RyZWFtO1xuIiArCgkJCSJpbXBvcnQgamF2YS5pby5C
dWZmZXJlZElucHV0U3RyZWFtO1xuIiArCgkJCSJpbXBvcnQgamF2YS5pby5JbnB1dFN0cmVhbTtc
biIgKwoJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKCQkJInB1YmxpYyBjbGFz
cyBYIHtcbiIgKwoJCQkiICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gc3RyZWFtO1xuIiArCgkJCSIg
ICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBmb28oRmlsZSBmaWxlKSB0aHJvd3MgSU9FeGNlcHRpb24g
e1xuIiArCgkJCSIgICAgICAgIEZpbGVJbnB1dFN0cmVhbSBzID0gbmV3IEZpbGVJbnB1dFN0cmVh
bShmaWxlKTtcbiIgKwoJCQkiICAgICAgICByZXR1cm4gY2hlY2sobmV3IEJ1ZmZlcmVkSW5wdXRT
dHJlYW0ocykpO1xuIiArCgkJCSIgICAgfVxuIiArCgkJCSIgICAgQnVmZmVyZWRJbnB1dFN0cmVh
bSBmb28yKEZpbGVJbnB1dFN0cmVhbSBzLCBGaWxlIGZpbGUpIHRocm93cyBJT0V4Y2VwdGlvbiB7
XG4iICsKCQkJIiAgICAgICAgcyA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSk7XG4iICsKCQkJ
IiAgICAgICAgcmV0dXJuIGNoZWNrKHMpO1xuIiArCgkJCSIgICAgfVxuIiArCgkJCSIgICAgQnVm
ZmVyZWRJbnB1dFN0cmVhbSBmb28zKElucHV0U3RyZWFtIHMpIHRocm93cyBJT0V4Y2VwdGlvbiB7
XG4iICsKCQkJIiAgICAgICAgcyA9IGNoZWNrKHMpO1xuIiArCgkJCSIgICAgICAgIHJldHVybiBj
aGVjayhzKTtcbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkiICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0g
Y2hlY2soSW5wdXRTdHJlYW0gcykgeyByZXR1cm4gbnVsbDsgfVxuIiArCgkJCSJ9XG4iCgkJfSwK
CQkvLyBUT0RPOiBhbHNvIHRoZXNlIHdhcm5pbmdzICptaWdodCogYmUgYXZvaWRhYmxlIGJ5IGRl
dGVjdGluZyBjaGVjayhzKSBhcyBhIHdyYXBwZXIgY3JlYXRpb24/PwoJCSItLS0tLS0tLS0tXG4i
ICsKCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDE0KVxuIiArCgkJIglyZXR1cm4gY2hl
Y2socyk7XG4iICsKCQkiCV5eXl5eXl5eXl5eXl5eXl5cbiIgKwoJCSJQb3RlbnRpYWwgcmVzb3Vy
Y2UgbGVhazogXCdzXCcgbWF5IG5vdCBiZSBjbG9zZWQgYXQgdGhpcyBsb2NhdGlvblxuIiArCgkJ
Ii0tLS0tLS0tLS1cbiIgKwoJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTgpXG4iICsK
CQkiCXJldHVybiBjaGVjayhzKTtcbiIgKwoJCSIJXl5eXl5eXl5eXl5eXl5eXlxuIiArCgkJIlBv
dGVudGlhbCByZXNvdXJjZSBsZWFrOiBcJ3NcJyBtYXkgbm90IGJlIGNsb3NlZCBhdCB0aGlzIGxv
Y2F0aW9uXG4iICsKCQkiLS0tLS0tLS0tLVxuIiwKCQludWxsLAoJCXRydWUsCgkJb3B0aW9ucyk7
Cn0KLy8gQnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJj
ZSBsZWFrIHdhcm5pbmdzCi8vIGEgcmVzb3VyY2Ugd3JhcHBlciBkb2VzIG5vdCB3cmFwIGEgcHJv
dmlkZWQgcmVzb3VyY2UKcHVibGljIHZvaWQgdGVzdDA2MW4oKSB7CglNYXAgb3B0aW9ucyA9IGdl
dENvbXBpbGVyT3B0aW9ucygpOwoJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9S
ZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKCW9wdGlvbnMu
cHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3Nl
YWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKCXRoaXMucnVuTmVnYXRpdmVUZXN0KAoJCW5l
dyBTdHJpbmdbXSB7CgkJCSJYLmphdmEiLAoJCQkiaW1wb3J0IGphdmEuaW8uUHJpbnRXcml0ZXI7
XG4iICsKCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCgkJCSJwdWJsaWMgY2xh
c3MgWCB7XG4iICsKCQkJIiAgICB2b2lkIGZvbygpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsK
CQkJIiAgICAgICAgUHJpbnRXcml0ZXIgd3JpdGVyID0gbmV3IFByaW50V3JpdGVyKFwiZmlsZW5h
bWVcIik7XG4iICsKCQkJIiAgICAgICAgd3JpdGVyLndyaXRlKDEpO1xuIiArCgkJCSIgICAgfVxu
IiArCgkJCSJ9XG4iCgkJfSwKCQkiLS0tLS0tLS0tLVxuIiArIAoJCSIxLiBFUlJPUiBpbiBYLmph
dmEgKGF0IGxpbmUgNSlcbiIgKyAKCQkiCVByaW50V3JpdGVyIHdyaXRlciA9IG5ldyBQcmludFdy
aXRlcihcImZpbGVuYW1lXCIpO1xuIiArIAoJCSIJICAgICAgICAgICAgXl5eXl5eXG4iICsgCgkJ
IlJlc291cmNlIGxlYWs6IFwnd3JpdGVyXCcgaXMgbmV2ZXIgY2xvc2VkXG4iICsgCgkJIi0tLS0t
LS0tLS1cbiIsCgkJbnVsbCwKCQl0cnVlLAoJCW9wdGlvbnMpOwp9Ci8vIEJ1ZyAzNjIzMzEgLSBS
ZXNvdXJjZSBsZWFrIG5vdCBkZXRlY3RlZCB3aGVuIGNsb3NlYWJsZSBub3QgYXNzaWduZWQgdG8g
dmFyaWFibGUKLy8gYSByZXNvdXJjZSBpcyBuZXZlciBhc3NpZ25lZApwdWJsaWMgdm9pZCB0ZXN0
MDYyYSgpIHRocm93cyBJT0V4Y2VwdGlvbiB7CglNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0
aW9ucygpOwoJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3Nl
ZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKCW9wdGlvbnMucHV0KENvbXBpbGVy
T3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGls
ZXJPcHRpb25zLkVSUk9SKTsKCXRoaXMucnVuTmVnYXRpdmVUZXN0KAoJCW5ldyBTdHJpbmdbXSB7
CgkJCSJYLmphdmEiLAoJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKwoJCQkiaW1wb3J0IGph
dmEuaW8uRmlsZU91dHB1dFN0cmVhbTtcbiIgKwoJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRp
b247XG4iICsKCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwoJCQkiICAgIHZvaWQgZm9vKCkgdGhy
b3dzIElPRXhjZXB0aW9uIHtcbiIgKwoJCQkiICAgICAgICBuZXcgRmlsZU91dHB1dFN0cmVhbShu
ZXcgRmlsZShcIkM6XFx0ZW1wXFxmb28udHh0XCIpKS53cml0ZSgxKTtcbiIgKwoJCQkiICAgIH1c
biIgKwoJCQkifVxuIgoJCX0sCgkJIi0tLS0tLS0tLS1cbiIgKwoJCSIxLiBFUlJPUiBpbiBYLmph
dmEgKGF0IGxpbmUgNilcbiIgKwoJCSIJbmV3IEZpbGVPdXRwdXRTdHJlYW0obmV3IEZpbGUoXCJD
OlxcdGVtcFxcZm9vLnR4dFwiKSkud3JpdGUoMSk7XG4iICsKCQkiCV5eXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIgKwoJCSJSZXNvdXJjZSBsZWFrOiBc
Jzx1bmFzc2lnbmVkIENsb3NlYWJsZSB2YWx1ZT5cJyBpcyBuZXZlciBjbG9zZWRcbiIgKwoJCSIt
LS0tLS0tLS0tXG4iLAoJCW51bGwsCgkJdHJ1ZSwKCQlvcHRpb25zKTsKfQovLyBCdWcgMzYyMzMx
IC0gUmVzb3VyY2UgbGVhayBub3QgZGV0ZWN0ZWQgd2hlbiBjbG9zZWFibGUgbm90IGFzc2lnbmVk
IHRvIHZhcmlhYmxlCi8vIGEgZnJlc2hseSBhbGxvY2F0ZWQgcmVzb3VyY2UgaXMgaW1tZWRpYXRl
bHkgY2xvc2VkCnB1YmxpYyB2b2lkIHRlc3QwNjJiKCkgdGhyb3dzIElPRXhjZXB0aW9uIHsKCU1h
cCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CglvcHRpb25zLnB1dChDb21waWxlck9w
dGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJS
T1IpOwoJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxs
eVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwoJdGhpcy5ydW5Db25m
b3JtVGVzdCgKCQluZXcgU3RyaW5nW10gewoJCQkiWC5qYXZhIiwKCQkJImltcG9ydCBqYXZhLmlv
LkZpbGU7XG4iICsKCQkJImltcG9ydCBqYXZhLmlvLkZpbGVPdXRwdXRTdHJlYW07XG4iICsKCQkJ
ImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCgkJCSJwdWJsaWMgY2xhc3MgWCB7XG4i
ICsKCQkJIiAgICB2b2lkIGZvbygpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKCQkJIiAgICAg
ICAgbmV3IEZpbGVPdXRwdXRTdHJlYW0obmV3IEZpbGUoXCJDOlxcdGVtcFxcZm9vLnR4dFwiKSku
Y2xvc2UoKTtcbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkifVxuIgoJCX0sCgkJIiIsCgkJbnVsbCwK
CQl0cnVlLAoJCW51bGwsCgkJb3B0aW9ucywKCQludWxsKTsKfQovLyBCdWcgMzYyMzMxIC0gUmVz
b3VyY2UgbGVhayBub3QgZGV0ZWN0ZWQgd2hlbiBjbG9zZWFibGUgbm90IGFzc2lnbmVkIHRvIHZh
cmlhYmxlCi8vIGEgcmVzb3VyY2UgaXMgZGlyZWN0bHkgcGFzc2VkIHRvIGFub3RoZXIgbWV0aG9k
CnB1YmxpYyB2b2lkIHRlc3QwNjJjKCkgdGhyb3dzIElPRXhjZXB0aW9uIHsKCU1hcCBvcHRpb25z
ID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CglvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BU
SU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwoJb3B0
aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2Vk
Q2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwoJdGhpcy5ydW5Db25mb3JtVGVzdCgK
CQluZXcgU3RyaW5nW10gewoJCQkiWC5qYXZhIiwKCQkJImltcG9ydCBqYXZhLmlvLkZpbGU7XG4i
ICsKCQkJImltcG9ydCBqYXZhLmlvLkZpbGVPdXRwdXRTdHJlYW07XG4iICsKCQkJImltcG9ydCBq
YXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCgkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKCQkJIiAg
ICB2b2lkIGZvbygpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKCQkJIiAgICAgICAgd3JpdGVJ
dChuZXcgRmlsZU91dHB1dFN0cmVhbShuZXcgRmlsZShcIkM6XFx0ZW1wXFxmb28udHh0XCIpKSk7
XG4iICsKCQkJIiAgICB9XG4iICsKCQkJIiAgICB2b2lkIHdyaXRlSXQoRmlsZU91dHB1dFN0cmVh
bSBmb3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKCQkJIiAgICAgICAgZm9zLndyaXRlKDEp
O1xuIiArCgkJCSIgICAgICAgIGZvcy5jbG9zZSgpO1xuIiArCgkJCSIgICAgfVxuIiArCgkJCSJ9
XG4iCgkJfSwKCQkiIiwKCQludWxsLAoJCXRydWUsCgkJbnVsbCwKCQlvcHRpb25zLAoJCW51bGwp
Owp9Ci8vIEJ1ZyAzNjIzMzEgLSBSZXNvdXJjZSBsZWFrIG5vdCBkZXRlY3RlZCB3aGVuIGNsb3Nl
YWJsZSBub3QgYXNzaWduZWQgdG8gdmFyaWFibGUKLy8gYSByZXNvdXJjZSBpcyBub3QgdXNlZApw
dWJsaWMgdm9pZCB0ZXN0MDYyZCgpIHRocm93cyBJT0V4Y2VwdGlvbiB7CglNYXAgb3B0aW9ucyA9
IGdldENvbXBpbGVyT3B0aW9ucygpOwoJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElP
Tl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKCW9wdGlv
bnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENs
b3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKCXRoaXMucnVuTmVnYXRpdmVUZXN0KAoJ
CW5ldyBTdHJpbmdbXSB7CgkJCSJYLmphdmEiLAoJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIg
KwoJCQkiaW1wb3J0IGphdmEuaW8uRmlsZU91dHB1dFN0cmVhbTtcbiIgKwoJCQkiaW1wb3J0IGph
dmEuaW8uSU9FeGNlcHRpb247XG4iICsKCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwoJCQkiICAg
IHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwoJCQkiICAgICAgICBuZXcgRmls
ZU91dHB1dFN0cmVhbShuZXcgRmlsZShcIkM6XFx0ZW1wXFxmb28udHh0XCIpKTtcbiIgKwoJCQki
ICAgIH1cbiIgKwoJCQkifVxuIgoJCX0sCgkJIi0tLS0tLS0tLS1cbiIgKwoJCSIxLiBFUlJPUiBp
biBYLmphdmEgKGF0IGxpbmUgNilcbiIgKwoJCSIJbmV3IEZpbGVPdXRwdXRTdHJlYW0obmV3IEZp
bGUoXCJDOlxcdGVtcFxcZm9vLnR4dFwiKSk7XG4iICsKCQkiCV5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIgKwoJCSJSZXNvdXJjZSBsZWFrOiBcJzx1
bmFzc2lnbmVkIENsb3NlYWJsZSB2YWx1ZT5cJyBpcyBuZXZlciBjbG9zZWRcbiIgKwoJCSItLS0t
LS0tLS0tXG4iLAoJCW51bGwsCgkJdHJ1ZSwKCQlvcHRpb25zKTsKfQovLyBCdWcgMzYyMzMyIC0g
T25seSByZXBvcnQgcG90ZW50aWFsIGxlYWsgd2hlbiBjbG9zZWFibGUgbm90IGNyZWF0ZWQgaW4g
dGhlIGxvY2FsIHNjb3BlCi8vIGEgd3JhcHBlciBpcyBvYnRhaW5lZCBmcm9tIGFub3RoZXIgbWV0
aG9kCnB1YmxpYyB2b2lkIHRlc3QwNjNhKCkgdGhyb3dzIElPRXhjZXB0aW9uIHsKCU1hcCBvcHRp
b25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CglvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMu
T1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwoJ
b3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xv
c2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwoJdGhpcy5ydW5OZWdhdGl2ZVRl
c3QoCgkJbmV3IFN0cmluZ1tdIHsKCQkJIlguamF2YSIsCgkJCSJpbXBvcnQgamF2YS5pby5GaWxl
O1xuIiArCgkJCSJpbXBvcnQgamF2YS5pby5GaWxlSW5wdXRTdHJlYW07XG4iICsKCQkJImltcG9y
dCBqYXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJlYW07XG4iICsKCQkJImltcG9ydCBqYXZhLmlvLklP
RXhjZXB0aW9uO1xuIiArCgkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKCQkJIiAgICB2b2lkIHJl
YWQoRmlsZSBmaWxlKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCgkJCSIgICAgICAgIEZpbGVJ
bnB1dFN0cmVhbSBzdHJlYW0gPSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpO1xuIiArCgkJCSIg
ICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0o
c3RyZWFtKTsgLy8gbmV2ZXIgc2luY2UgcmVhc3NpZ25lZFxuIiArCgkJCSIgICAgICAgIEZpbGVJ
bnB1dFN0cmVhbSBzdHJlYW0yID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKTsgLy8gdW5zdXJl
IHNpbmNlIHBhc3NlZCB0byBtZXRob2RcbiIgKwoJCQkiICAgICAgICBiaXMgPSBnZXRSZWFkZXIo
c3RyZWFtMik7IC8vIHVuc3VyZSBzaW5jZSBvYnRhaW5lZCBmcm9tIG1ldGhvZFxuIiArCgkJCSIg
ICAgICAgIGJpcy5hdmFpbGFibGUoKTtcbiIgKwoJCQkiICAgIH1cbiIgKwoJCQkiICAgIEJ1ZmZl
cmVkSW5wdXRTdHJlYW0gZ2V0UmVhZGVyKEZpbGVJbnB1dFN0cmVhbSBzdHJlYW0pIHRocm93cyBJ
T0V4Y2VwdGlvbiB7XG4iICsKCQkJIiAgICAgICAgcmV0dXJuIG5ldyBCdWZmZXJlZElucHV0U3Ry
ZWFtKHN0cmVhbSk7XG4iICsKCQkJIiAgICB9XG4iICsKCQkJIn1cbiIKCQl9LAoJCSItLS0tLS0t
LS0tXG4iICsKCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDgpXG4iICsKCQkiCUJ1ZmZl
cmVkSW5wdXRTdHJlYW0gYmlzID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oc3RyZWFtKTsgLy8g
bmV2ZXIgc2luY2UgcmVhc3NpZ25lZFxuIiArCgkJIgkgICAgICAgICAgICAgICAgICAgIF5eXlxu
IiArCgkJIlJlc291cmNlIGxlYWs6IFwnYmlzXCcgaXMgbmV2ZXIgY2xvc2VkXG4iICsKCQkiLS0t
LS0tLS0tLVxuIiArCgkJIjIuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA5KVxuIiArCgkJIglG
aWxlSW5wdXRTdHJlYW0gc3RyZWFtMiA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSk7IC8vIHVu
c3VyZSBzaW5jZSBwYXNzZWQgdG8gbWV0aG9kXG4iICsKCQkiCSAgICAgICAgICAgICAgICBeXl5e
Xl5eXG4iICsKCQkiUG90ZW50aWFsIHJlc291cmNlIGxlYWs6IFwnc3RyZWFtMlwnIG1heSBub3Qg
YmUgY2xvc2VkXG4iICsKCQkiLS0tLS0tLS0tLVxuIiArCgkJIjMuIEVSUk9SIGluIFguamF2YSAo
YXQgbGluZSAxMClcbiIgKwoJCSIJYmlzID0gZ2V0UmVhZGVyKHN0cmVhbTIpOyAvLyB1bnN1cmUg
c2luY2Ugb2J0YWluZWQgZnJvbSBtZXRob2RcbiIgKwoJCSIJXl5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXG4iICsKCQkiUG90ZW50aWFsIHJlc291cmNlIGxlYWs6IFwnYmlzXCcgbWF5IG5vdCBiZSBj
bG9zZWRcbiIgKwoJCSItLS0tLS0tLS0tXG4iLAoJCW51bGwsCgkJdHJ1ZSwKCQlvcHRpb25zKTsK
fQovLyBCdWcgMzYyMzMyIC0gT25seSByZXBvcnQgcG90ZW50aWFsIGxlYWsgd2hlbiBjbG9zZWFi
bGUgbm90IGNyZWF0ZWQgaW4gdGhlIGxvY2FsIHNjb3BlCi8vIGEgd3JhcHBlciBpcyBvYnRhaW5l
ZCBmcm9tIGEgZmllbGQgcmVhZApwdWJsaWMgdm9pZCB0ZXN0MDYzYigpIHRocm93cyBJT0V4Y2Vw
dGlvbiB7CglNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwoJb3B0aW9ucy5wdXQo
Q29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJP
cHRpb25zLkVSUk9SKTsKCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0
UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKCXRo
aXMucnVuQ29uZm9ybVRlc3QoCgkJbmV3IFN0cmluZ1tdIHsKCQkJIlguamF2YSIsCgkJCSJpbXBv
cnQgamF2YS5pby5GaWxlSW5wdXRTdHJlYW07XG4iICsKCQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZl
cmVkSW5wdXRTdHJlYW07XG4iICsKCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiAr
CgkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKCQkJIiAgICBGaWxlSW5wdXRTdHJlYW0gc3RyZWFt
O1xuIiArCgkJCSIgICAgdm9pZCByZWFkKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwoJCQki
ICAgICAgICBGaWxlSW5wdXRTdHJlYW0gcyA9IHRoaXMuc3RyZWFtO1xuIiArCgkJCSIgICAgICAg
IEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0ocyk7IC8v
IGRvbid0IGNvbXBsYWluIHNpbmNlIHMgaXMgb2J0YWluZWQgZnJvbSBhIGZpZWxkXG4iICsKCQkJ
IiAgICAgICAgYmlzLmF2YWlsYWJsZSgpO1xuIiArCgkJCSIgICAgfVxuIiArCgkJCSJ9XG4iCgkJ
fSwKCQkiIiwKCQludWxsLAoJCXRydWUsCgkJbnVsbCwKCQlvcHRpb25zLAoJCW51bGwpOwp9Ci8v
IEJ1ZyAzNjIzMzIgLSBPbmx5IHJlcG9ydCBwb3RlbnRpYWwgbGVhayB3aGVuIGNsb3NlYWJsZSBu
b3QgY3JlYXRlZCBpbiB0aGUgbG9jYWwgc2NvcGUKLy8gYSB3cmFwcGVyIGlzIGFzc2lnbmVkIHRv
IGEgZmllbGQKcHVibGljIHZvaWQgdGVzdDA2M2MoKSB0aHJvd3MgSU9FeGNlcHRpb24gewoJTWFw
IG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0
aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJP
Uik7CglvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5
VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Cgl0aGlzLnJ1bkNvbmZv
cm1UZXN0KAoJCW5ldyBTdHJpbmdbXSB7CgkJCSJYLmphdmEiLAoJCQkiaW1wb3J0IGphdmEuaW8u
RmlsZUlucHV0U3RyZWFtO1xuIiArCgkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJlZElucHV0U3Ry
ZWFtO1xuIiArCgkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKwoJCQkicHVibGlj
IGNsYXNzIFgge1xuIiArCgkJCSIgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBzdHJlYW07XG4iICsK
CQkJIiAgICB2b2lkIHJlYWQoKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCgkJCSIgICAgICAg
IEZpbGVJbnB1dFN0cmVhbSBzID0gbmV3IEZpbGVJbnB1dFN0cmVhbShcInNvbWVmaWxlXCIpO1xu
IiArCgkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzID0gbmV3IEJ1ZmZlcmVkSW5w
dXRTdHJlYW0ocyk7XG4iICsKCQkJIiAgICAgICAgdGhpcy5zdHJlYW0gPSBiaXM7XG4iICsKCQkJ
IiAgICB9XG4iICsKCQkJIn1cbiIKCQl9LAoJCSIiLAoJCW51bGwsCgkJdHJ1ZSwKCQludWxsLAoJ
CW9wdGlvbnMsCgkJbnVsbCk7Cn0KLy8gQnVnIDM2MjMzMiAtIE9ubHkgcmVwb3J0IHBvdGVudGlh
bCBsZWFrIHdoZW4gY2xvc2VhYmxlIG5vdCBjcmVhdGVkIGluIHRoZSBsb2NhbCBzY29wZQovLyBh
IHJlc291cmNlIGlzIG9idGFpbmVkIGFzIGEgbWV0aG9kIGFyZ3VtZW50IGFuZC9vciBhc3NpZ25l
ZCB3aXRoIGEgY2FzdApwdWJsaWMgdm9pZCB0ZXN0MDYzZCgpIHRocm93cyBJT0V4Y2VwdGlvbiB7
CglNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwoJb3B0aW9ucy5wdXQoQ29tcGls
ZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25z
LkVSUk9SKTsKCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50
aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKCW9wdGlvbnMu
cHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0RXhwbGljaXRseUNsb3NlZEF1dG9DbG9z
ZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CglydW5UZXN0c0V4cGVjdGluZ0Vycm9yc09u
bHlJbjE3KAoJCW5ldyBTdHJpbmdbXSB7CgkJCSJYLmphdmEiLAoJCQkiaW1wb3J0IGphdmEuaW8u
RmlsZUlucHV0U3RyZWFtO1xuIiArCgkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJlZElucHV0U3Ry
ZWFtO1xuIiArCgkJCSJpbXBvcnQgamF2YS5pby5JbnB1dFN0cmVhbTtcbiIgKwoJCQkiaW1wb3J0
IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwoJCQki
ICAgIHZvaWQgZm9vKCBJbnB1dFN0cmVhbSBpbnB1dCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIg
KwoJCQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0gaW5wdXQxICA9IChGaWxlSW5wdXRTdHJlYW0p
aW5wdXQ7XG4iICsKCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGlucHV0MS5yZWFkKCkp
O1xuIiArCgkJCSIgICAgICAgIGlucHV0LmNsb3NlKCk7XG4iICsgLy8gZG9uJ3QgcHJvcG9zZSB0
LXctciBmb3IgYXJndW1lbnQKCQkJIiAgICB9XG4iICsKCQkJIiAgICB2b2lkIGZvbygpIHRocm93
cyBJT0V4Y2VwdGlvbiB7XG4iICsKCQkJIiAgICAgICAgSW5wdXRTdHJlYW0gaW5wdXQgPSBuZXcg
RmlsZUlucHV0U3RyZWFtKFwic29tZWZpbGVcIik7XG4iICsKCQkJIiAgICAgICAgRmlsZUlucHV0
U3RyZWFtIGlucHV0MSAgPSAoRmlsZUlucHV0U3RyZWFtKWlucHV0O1xuIiArCgkJCSIgICAgICAg
IFN5c3RlbS5vdXQucHJpbnRsbihpbnB1dDEucmVhZCgpKTtcbiIgKwoJCQkiICAgICAgICBpbnB1
dC5jbG9zZSgpO1xuIiArIC8vIGRvIHByb3Bvc2UgdC13LXIsIG5vdCBmcm9tIGEgbWV0aG9kIGFy
Z3VtZW50CgkJCSIgICAgfVxuIiArCgkJCSIgICAgdm9pZCBmb28zKCBJbnB1dFN0cmVhbSBpbnB1
dCwgSW5wdXRTdHJlYW0gaW5wdXQyKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCgkJCSIgICAg
ICAgIEZpbGVJbnB1dFN0cmVhbSBpbnB1dDEgID0gKEZpbGVJbnB1dFN0cmVhbSlpbnB1dDtcbiIg
KyAvLyBzdGlsbCBkb24ndCBjbGFpbSBiZWNhdXNlIG9idGFpbmVkIGZyb20gb3V0c2lkZQoJCQki
ICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oaW5wdXQxLnJlYWQoKSk7XG4iICsKCQkJIiAgICAg
ICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShpbnB1
dDIpO1xuIiArCgkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihiaXMucmVhZCgpKTtcbiIg
KwoJCQkiICAgIH1cbiIgKwoJCQkifVxuIgoJCX0sCgkJIi0tLS0tLS0tLS1cbiIgKwoJCSIxLiBF
UlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTIpXG4iICsKCQkiCUlucHV0U3RyZWFtIGlucHV0ID0g
bmV3IEZpbGVJbnB1dFN0cmVhbShcInNvbWVmaWxlXCIpO1xuIiArCgkJIgkgICAgICAgICAgICBe
Xl5eXlxuIiArCgkJIlJlc291cmNlIFwnaW5wdXRcJyBzaG91bGQgYmUgbWFuYWdlZCBieSB0cnkt
d2l0aC1yZXNvdXJjZVxuIiArCgkJIi0tLS0tLS0tLS1cbiIsCgkJb3B0aW9ucyk7Cn0KCn0K
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>209384</attachid>
            <date>2012-01-12 10:03:00 -0500</date>
            <delta_ts>2012-01-13 16:17:57 -0500</delta_ts>
            <desc>incremental changes 3</desc>
            <filename>Bug_358903_v0.9.6-update3.patch</filename>
            <type>text/plain</type>
            <size>3147</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Jlc291cmNlTGVha1Rl
c3RzLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9SZXNvdXJjZUxlYWtUZXN0
cy5qYXZhCmluZGV4IGZmNGM0Y2YuLjllZDhjMzkgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21w
aWxlci9yZWdyZXNzaW9uL1Jlc291cmNlTGVha1Rlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vUmVzb3VyY2VMZWFrVGVzdHMuamF2YQpAQCAtMjYsNyArMjYsNyBA
QCBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmltcGwuQ29tcGlsZXJP
cHRpb25zOwogcHVibGljIGNsYXNzIFJlc291cmNlTGVha1Rlc3RzIGV4dGVuZHMgQWJzdHJhY3RS
ZWdyZXNzaW9uVGVzdCB7CiAKIHN0YXRpYyB7Ci0vLwlURVNUU19OQU1FUyA9IG5ldyBTdHJpbmdb
XSB7ICJ0ZXN0MDYxYyJ9OworLy8JVEVTVFNfTkFNRVMgPSBuZXcgU3RyaW5nW10geyAidGVzdDA2
M2UifTsKIC8vCVRFU1RTX05VTUJFUlMgPSBuZXcgaW50W10geyA1MCB9OwogLy8JVEVTVFNfUkFO
R0UgPSBuZXcgaW50W10geyAxMSwgLTEgfTsKIH0KQEAgLTE4MzgsNyArMTgzOCw2IEBAIHB1Ymxp
YyB2b2lkIHRlc3QwNTZ0aHJvdzUoKSB7CiAJCXRydWUsCiAJCW9wdGlvbnMpOwogfQotCiAvLyBC
dWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsg
d2FybmluZ3MKIC8vIEJ1ZyAzNjA5MDggLSBBdm9pZCByZXNvdXJjZSBsZWFrIHdhcm5pbmcgd2hl
biB0aGUgdW5kZXJseWluZy9jaGFpbmVkIHJlc291cmNlIGlzIGNsb3NlZCBleHBsaWNpdGx5CiAv
LyBhIHJlc291cmNlIHdyYXBwZXIgaXMgbm90IGNsb3NlZCBidXQgdGhlIHVuZGVybHlpbmcgcmVz
b3VyY2UgaXMKQEAgLTI2NzQsNSArMjY3MywzMiBAQCBwdWJsaWMgdm9pZCB0ZXN0MDYzZCgpIHRo
cm93cyBJT0V4Y2VwdGlvbiB7CiAJCSItLS0tLS0tLS0tXG4iLAogCQlvcHRpb25zKTsKIH0KKy8v
IEJ1ZyAzNjIzMzIgLSBPbmx5IHJlcG9ydCBwb3RlbnRpYWwgbGVhayB3aGVuIGNsb3NlYWJsZSBu
b3QgY3JlYXRlZCBpbiB0aGUgbG9jYWwgc2NvcGUKKy8vIGEgcmVzb3VyY2UgaXMgb2J0YWluZWQg
ZnJvbSBhIGZpZWxkIHJlYWQsIHRoZW4gcmUtYXNzaWduZWQKK3B1YmxpYyB2b2lkIHRlc3QwNjNl
KCkgeworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQo
Q29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJP
cHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9y
dFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJ
dGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJ
ImltcG9ydCBqYXZhLmlvLkZpbGVJbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlv
LklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICAgIEZp
bGVJbnB1dFN0cmVhbSBpbnB1dDE7XG4iICsKKwkJCSIgICAgcHVibGljIHZvaWQgZm9vKCkgdGhy
b3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmlsZUlucHV0U3RyZWFtIGlucHV0
ID0gaW5wdXQxO1xuIiArCisJCQkiICAgICAgICBpbnB1dCA9IG5ldyBGaWxlSW5wdXRTdHJlYW0o
XCJhZGZhZmRcIik7XG4iICsKKwkJCSIgICAgICAgIGlucHV0LmNsb3NlKCk7XG4iICsKKwkJCSIg
ICAgfVxuIiArCisJCQkifVxuIgorCQl9LAorCQkiIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJbnVs
bCwKKwkJb3B0aW9ucywKKwkJbnVsbCk7Cit9CiAKIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3Qv
RmFrZWRUcmFja2luZ1ZhcmlhYmxlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Zha2VkVHJhY2tpbmdWYXJp
YWJsZS5qYXZhCmluZGV4IGUxMzMwYTcuLjRlYzc2MjAgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3Qv
RmFrZWRUcmFja2luZ1ZhcmlhYmxlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9GYWtlZFRyYWNraW5n
VmFyaWFibGUuamF2YQpAQCAtMzUxLDggKzM1MSw3IEBAIHB1YmxpYyBjbGFzcyBGYWtlZFRyYWNr
aW5nVmFyaWFibGUgZXh0ZW5kcyBMb2NhbERlY2xhcmF0aW9uIHsKIAkJCXRyYWNrZXIuZ2xvYmFs
Q2xvc2luZ1N0YXRlIHw9IFBBU1NFRF9UT19PVVRTSURFOwogCQkJZmxvd0luZm8ubWFya1BvdGVu
dGlhbGx5TnVsbEJpdCh0cmFja2VyLmJpbmRpbmcpOyAvLyBzaGVkIHNvbWUgZG91YnQKIAkJCXJl
dHVybiB0cmFja2VyOwkJCQotCQl9IGVsc2UgaWYgKGV4cHJlc3Npb24gaW5zdGFuY2VvZiBGaWVs
ZFJlZmVyZW5jZSAKLQkJCQl8fCBleHByZXNzaW9uIGluc3RhbmNlb2YgUXVhbGlmaWVkTmFtZVJl
ZmVyZW5jZSkgCisJCX0gZWxzZSBpZiAoKGV4cHJlc3Npb24uYml0cyAmIFJlc3RyaWN0aXZlRmxh
Z01BU0spID09IEJpbmRpbmcuRklFTEQpIAogCQl7CiAJCQkvLyByZXNwb25zaWJpbGl0eSBmb3Ig
dGhpcyByZXNvdXJjZSBwcm9iYWJseSBsaWVzIGF0IGEgaGlnaGVyIGxldmVsCiAJCQlGYWtlZFRy
YWNraW5nVmFyaWFibGUgdHJhY2tlciA9IG5ldyBGYWtlZFRyYWNraW5nVmFyaWFibGUobG9jYWws
IGxvY2F0aW9uKTsK
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>209409</attachid>
            <date>2012-01-12 16:00:00 -0500</date>
            <delta_ts>2012-01-13 16:17:57 -0500</delta_ts>
            <desc>incremental change 4</desc>
            <filename>Bug_358903_v0.9.6-update4.patch</filename>
            <type>text/plain</type>
            <size>16286</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Jlc291cmNlTGVha1Rl
c3RzLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9SZXNvdXJjZUxlYWtUZXN0
cy5qYXZhCmluZGV4IDllZDhjMzkuLmQ2YWFjODIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21w
aWxlci9yZWdyZXNzaW9uL1Jlc291cmNlTGVha1Rlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vUmVzb3VyY2VMZWFrVGVzdHMuamF2YQpAQCAtMjYsNyArMjYsNyBA
QAogcHVibGljIGNsYXNzIFJlc291cmNlTGVha1Rlc3RzIGV4dGVuZHMgQWJzdHJhY3RSZWdyZXNz
aW9uVGVzdCB7CiAKIHN0YXRpYyB7Ci0vLwlURVNUU19OQU1FUyA9IG5ldyBTdHJpbmdbXSB7ICJ0
ZXN0MDYzZSJ9OworLy8JVEVTVFNfTkFNRVMgPSBuZXcgU3RyaW5nW10geyAidGVzdDA1NnEifTsK
IC8vCVRFU1RTX05VTUJFUlMgPSBuZXcgaW50W10geyA1MCB9OwogLy8JVEVTVFNfUkFOR0UgPSBu
ZXcgaW50W10geyAxMSwgLTEgfTsKIH0KQEAgLTIzOTIsNyArMjM5Miw3IEBACiAJCW9wdGlvbnMp
OwogfQogLy8gQnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNv
dXJjZSBsZWFrIHdhcm5pbmdzCi0vLyBhIHJlc291cmNlIHdyYXBwZXIgZG9lcyBub3Qgd3JhcCBh
IHByb3ZpZGVkIHJlc291cmNlCisvLyBhIHJlc291cmNlIHdyYXBwZXIgZG9lcyBub3Qgd3JhcCBh
bnkgcHJvdmlkZWQgcmVzb3VyY2UKIHB1YmxpYyB2b2lkIHRlc3QwNjFuKCkgewogCU1hcCBvcHRp
b25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CiAJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25z
Lk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsK
QEAgLTI0MTksNiArMjQxOSw0MSBAQAogCQl0cnVlLAogCQlvcHRpb25zKTsKIH0KKy8vIEJ1ZyAz
NTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJu
aW5ncworLy8gYSByZXNvdXJjZSB3cmFwcGVyIGlzIGNsb3NlZCBvbmx5IGluIGl0cyBsb2NhbCBi
bG9jaywgdW5kZXJseWluZyByZXNvdXJjZSBtYXkgbGVhaworcHVibGljIHZvaWQgdGVzdDA2MW8o
KSB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChD
b21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9w
dGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0
UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0
aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJ
ImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlSW5wdXRT
dHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJlZElucHV0U3RyZWFtO1xuIiAr
CisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJwdWJsaWMgY2xhc3Mg
WCB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28oYm9vbGVhbiBiYXIpIHRocm93cyBJT0V4Y2VwdGlv
biB7XG4iICsgCisJCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxcIik7
XG4iICsgCisJCQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0gZmlsZVN0cmVhbSAgPSBuZXcgRmls
ZUlucHV0U3RyZWFtKGZpbGUpO1xuIiArIAorCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVh
bSBiaXMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShmaWxlU3RyZWFtKTsgICBcbiIgKyAKKwkJ
CSIgICAgICAgIGlmIChiYXIpIHtcbiIgKyAKKwkJCSIgICAgICAgICAgICBCdWZmZXJlZElucHV0
U3RyZWFtIGRvdWJsZVdyYXAgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShiaXMpO1xuIiArIAor
CQkJIiAgICAgICAgICAgIGRvdWJsZVdyYXAuY2xvc2UoKTtcbiIgKyAKKwkJCSIgICAgICAgIH1c
biIgKyAKKwkJCSIgICAgfVxuIiArIAorCQkJIn1cbiIKKwkJfSwKKwkJIi0tLS0tLS0tLS1cbiIg
KworCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDkpXG4iICsKKwkJIglCdWZmZXJlZElu
cHV0U3RyZWFtIGJpcyA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGZpbGVTdHJlYW0pOyAgIFxu
IiArCisJCSIJICAgICAgICAgICAgICAgICAgICBeXl5cbiIgKworCQkiUG90ZW50aWFsIHJlc291
cmNlIGxlYWs6IFwnYmlzXCcgbWF5IG5vdCBiZSBjbG9zZWRcbiIgKworCQkiLS0tLS0tLS0tLVxu
IiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJb3B0aW9ucyk7Cit9CiAvLyBCdWcgMzYyMzMxIC0gUmVz
b3VyY2UgbGVhayBub3QgZGV0ZWN0ZWQgd2hlbiBjbG9zZWFibGUgbm90IGFzc2lnbmVkIHRvIHZh
cmlhYmxlCiAvLyBhIHJlc291cmNlIGlzIG5ldmVyIGFzc2lnbmVkCiBwdWJsaWMgdm9pZCB0ZXN0
MDYyYSgpIHRocm93cyBJT0V4Y2VwdGlvbiB7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Zha2Vk
VHJhY2tpbmdWYXJpYWJsZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9GYWtlZFRyYWNraW5nVmFyaWFibGUu
amF2YQppbmRleCA0ZWM3NjIwLi4wNWNjNmI3IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Zha2Vk
VHJhY2tpbmdWYXJpYWJsZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvRmFrZWRUcmFja2luZ1Zhcmlh
YmxlLmphdmEKQEAgLTQxLDI3ICs0MSwzMyBAQAogCiAJLy8gYSBjYWxsIHRvIGNsb3NlKCkgd2Fz
IHNlZW4gYXQgbGVhc3Qgb24gb25lIHBhdGg6CiAJcHJpdmF0ZSBzdGF0aWMgZmluYWwgaW50IENM
T1NFX1NFRU4gPSAxOwotCS8vIHRoZSByZXNvdXJjZSB3YXMgcGFzc2VkIHRvIG91dHNpZGUgY29k
ZSAoYXJnIGluIG1ldGhvZC9jdG9yIGNhbGwgb3IgYXMgYSByZXR1cm4gdmFsdWUgZnJvbSB0aGlz
IG1ldGhvZCk6Ci0JcHJpdmF0ZSBzdGF0aWMgZmluYWwgaW50IFBBU1NFRF9UT19PVVRTSURFID0g
MjsKLQkvLyB0aGUgcmVzb3VyY2Ugd2FzIG9idGFpbmVkIGZyb20gdGhlIG91dHNpZGUgKGFyZ3Vt
ZW50IG9mIHRoZSBjdXJyZW50IG1ldGhvZCwgb3IgdmlhIGEgZmllbGQgcmVhZCkKLQlwcml2YXRl
IHN0YXRpYyBmaW5hbCBpbnQgT0JUQUlORURfRlJPTV9PVVRTSURFID0gNDsKKwkvLyB0aGUgcmVz
b3VyY2UgaXMgc2hhcmVkIHdpdGggb3V0c2lkZSBjb2RlIGVpdGhlciBieQorCS8vIC0gcGFzc2lu
ZyBhcyBhbiBhcmcgaW4gYSBtZXRob2QgY2FsbCBvcgorCS8vIC0gb2J0YWluaW5nIHRoaXMgZnJv
bSBhIG1ldGhvZCBjYWxsIG9yIGFycmF5IHJlZmVyZW5jZQorCS8vIEludGVycHJldCB0aGF0IHdl
IG1heSBvciBtYXkgbm90IGJlIHJlc3BvbnNpYmxlIGZvciBjbG9zaW5nCisJcHJpdmF0ZSBzdGF0
aWMgZmluYWwgaW50IFNIQVJFRF9XSVRIX09VVFNJREUgPSAyOworCS8vIHRoZSByZXNvdXJjZSBp
cyBsaWtlbHkgb3duZWQgYnkgb3V0c2lkZSBjb2RlIChvd25lciBoYXMgcmVzcG9uc2liaWxpdHkg
dG8gY2xvc2UpOiAKKwkvLyAtIG9idGFpbmVkIGFzIGFyZ3VtZW50IG9mIHRoZSBjdXJyZW50IG1l
dGhvZCwgb3IgdmlhIGEgZmllbGQgcmVhZAorCS8vIC0gcmV0dXJuZWQgYXMgdGhlIHJlc3VsdCBv
ZiB0aGlzIG1ldGhvZCAKKwlwcml2YXRlIHN0YXRpYyBmaW5hbCBpbnQgT1dORURfQllfT1VUU0lE
RSA9IDQ7CiAJLy8gSWYgY2xvc2UoKSBpcyBpbnZva2VkIGZyb20gYSBuZXN0ZWQgbWV0aG9kIChp
bnNpZGUgYSBsb2NhbCB0eXBlKSByZXBvcnQgcmVtYWluaW5nIHByb2JsZW1zIG9ubHkgYXMgcG90
ZW50aWFsOgogCXByaXZhdGUgc3RhdGljIGZpbmFsIGludCBDTE9TRURfSU5fTkVTVEVEX01FVEhP
RCA9IDg7Ci0JLy8gYSBsb2NhdGlvbiBpbmRlcGVuZGVudCBpc3N1ZSBoYXMgYmVlbiByZXBvcnRl
ZCBhbHJlYWR5IGFnYWluc3QgdGhpcyByZXNvdXJjZToKLQlwcml2YXRlIHN0YXRpYyBmaW5hbCBp
bnQgUkVQT1JURUQgPSAxNjsKLQkvLyBhIHJlc291cmNlIGlzIHdyYXBwZWQgaW4gYW5vdGhlciBy
ZXNvdXJjZToKLQlwcml2YXRlIHN0YXRpYyBmaW5hbCBpbnQgV1JBUFBFRCA9IDMyOwotCi0JcHJp
dmF0ZSBzdGF0aWMgZmluYWwgaW50IERPVUJUX01BU0sgPSBDTE9TRV9TRUVOIHwgUEFTU0VEX1RP
X09VVFNJREUgfCBPQlRBSU5FRF9GUk9NX09VVFNJREUgfCBDTE9TRURfSU5fTkVTVEVEX01FVEhP
RCB8IFJFUE9SVEVEOyAvLyBub3QgV1JBUFBFRAorCS8vIGV4cGxpY2l0IGNsb3NpbmcgaGFzIGJl
ZW4gcmVwb3J0ZWQgYWxyZWFkeSBhZ2FpbnN0IHRoaXMgcmVzb3VyY2U6CisJcHJpdmF0ZSBzdGF0
aWMgZmluYWwgaW50IFJFUE9SVEVEX0VYUExJQ0lUX0NMT1NFID0gMTY7CisJLy8gYSBsb2NhdGlv
biBpbmRlcGVuZGVudCBwb3RlbnRpYWwgcHJvYmxlbSBoYXMgYmVlbiByZXBvcnRlZCBhZ2FpbnN0
IHRoaXMgcmVzb3VyY2U6CisJcHJpdmF0ZSBzdGF0aWMgZmluYWwgaW50IFJFUE9SVEVEX1BPVEVO
VElBTF9MRUFLID0gMzI7CisJLy8gYSBsb2NhdGlvbiBpbmRlcGVuZGVudCBkZWZpbml0aXZlIHBy
b2JsZW0gaGFzIGJlZW4gcmVwb3J0ZWQgYWdhaW5zdCB0aGlzIHJlc291cmNlOgorCXByaXZhdGUg
c3RhdGljIGZpbmFsIGludCBSRVBPUlRFRF9ERUZJTklUSVZFX0xFQUsgPSA2NDsKIAogCS8qKgot
CSAqIEJpdHNldCBvZiB7QGxpbmsgI0NMT1NFX1NFRU59LCB7QGxpbmsgI1BBU1NFRF9UT19PVVRT
SURFfSwge0BsaW5rICNPQlRBSU5FRF9GUk9NX09VVFNJREV9LCB7QGxpbmsgI0NMT1NFRF9JTl9O
RVNURURfTUVUSE9EfSwge0BsaW5rICNSRVBPUlRFRH0gYW5kIHtAbGluayAjV1JBUFBFRH0uCisJ
ICogQml0c2V0IG9mIHtAbGluayAjQ0xPU0VfU0VFTn0sIHtAbGluayAjU0hBUkVEX1dJVEhfT1VU
U0lERX0sIHtAbGluayAjT1dORURfQllfT1VUU0lERX0sIHtAbGluayAjQ0xPU0VEX0lOX05FU1RF
RF9NRVRIT0R9LCB7QGxpbmsgI1JFUE9SVEVEX0VYUExJQ0lUX0NMT1NFfSwge0BsaW5rICNSRVBP
UlRFRF9QT1RFTlRJQUxfTEVBS30gYW5kIHtAbGluayAjUkVQT1JURURfREVGSU5JVElWRV9MRUFL
fS4KIAkgKi8KIAlwcml2YXRlIGludCBnbG9iYWxDbG9zaW5nU3RhdGUgPSAwOwogCiAJcHVibGlj
IExvY2FsVmFyaWFibGVCaW5kaW5nIG9yaWdpbmFsQmluZGluZzsgLy8gdGhlIHJlYWwgbG9jYWwg
YmVpbmcgdHJhY2tlZCwgY2FuIGJlIG51bGwgZm9yIHByZWxpbWluYXJ5IHRyYWNrIHZhcnMgZm9y
IGFsbG9jYXRpb24gZXhwcmVzc2lvbnMKIAkKIAlwdWJsaWMgRmFrZWRUcmFja2luZ1ZhcmlhYmxl
IGlubmVyVHJhY2tlcjsgLy8gY2hhaW5lZCB0cmFja2luZyB2YXJpYWJsZSBvZiBhIGNoYWluZWQg
KHdyYXBwZWQpIHJlc291cmNlCisJcHVibGljIEZha2VkVHJhY2tpbmdWYXJpYWJsZSBvdXRlclRy
YWNrZXI7IC8vIGludmVyc2Ugb2YgJ2lubmVyVHJhY2tlcicKIAogCU1ldGhvZFNjb3BlIG1ldGhv
ZFNjb3BlOyAvLyBkZXNpZ25hdGVzIHRoZSBtZXRob2QgZGVjbGFyaW5nIHRoaXMgdmFyaWFibGUK
IApAQCAtMTM5LDcgKzE0NSw3IEBACiAJCQkJU3RhdGVtZW50IGxvY2F0aW9uID0gbG9jYWwuZGVj
bGFyYXRpb247CiAJCQkJbG9jYWwuY2xvc2VUcmFja2VyID0gbmV3IEZha2VkVHJhY2tpbmdWYXJp
YWJsZShsb2NhbCwgbG9jYXRpb24pOwogCQkJCWlmIChsb2NhbC5pc1BhcmFtZXRlcigpKSB7Ci0J
CQkJCWxvY2FsLmNsb3NlVHJhY2tlci5nbG9iYWxDbG9zaW5nU3RhdGUgfD0gT0JUQUlORURfRlJP
TV9PVVRTSURFOworCQkJCQlsb2NhbC5jbG9zZVRyYWNrZXIuZ2xvYmFsQ2xvc2luZ1N0YXRlIHw9
IE9XTkVEX0JZX09VVFNJREU7CiAJCQkJCS8vIHN0YXR1cyBvZiB0aGlzIHRyYWNrZXIgaXMgbm93
IFVOS05PV04KIAkJCQl9CiAJCQkJcmV0dXJuIGxvY2FsLmNsb3NlVHJhY2tlcjsKQEAgLTE2OSw2
ICsxNzUsOSBAQAogCQkJaWYgKGNsb3NlVHJhY2tlciA9PSBudWxsKSB7CiAJCQkJaWYgKHJocy5y
ZXNvbHZlZFR5cGUgIT0gVHlwZUJpbmRpbmcuTlVMTCkgeyAvLyBub3QgTlVMTCBtZWFucyB2YWxp
ZCBjbG9zZWFibGUgYXMgcGVyIG1ldGhvZCBwcmVjb25kaXRpb24KIAkJCQkJY2xvc2VUcmFja2Vy
ID0gbmV3IEZha2VkVHJhY2tpbmdWYXJpYWJsZShsb2NhbCwgbG9jYXRpb24pOworCQkJCQlpZiAo
bG9jYWwuaXNQYXJhbWV0ZXIoKSkgeworCQkJCQkJY2xvc2VUcmFja2VyLmdsb2JhbENsb3NpbmdT
dGF0ZSB8PSBPV05FRF9CWV9PVVRTSURFOworCQkJCQl9CiAJCQkJfQkJCQkJCiAJCQl9CiAJCQlp
ZiAoY2xvc2VUcmFja2VyICE9IG51bGwpIHsKQEAgLTE5NywxMiArMjA2LDI4IEBACiAJCQkJaWYg
KGlubmVyVHJhY2tlciAhPSBudWxsKSB7CiAJCQkJCWlmIChpbm5lclRyYWNrZXIgPT0gYWxsb2Nh
dGlvbi5jbG9zZVRyYWNrZXIpCiAJCQkJCQlyZXR1cm47IC8vIHNlbGYgd3JhcCAocmVzID0gbmV3
IFJlcyhyZXMpKSAtPiBuZWl0aGVyIGNoYW5nZSAoaGVyZSkgbm9yIHJlbW92ZSAoYmVsb3cpCisJ
CQkJCWludCBuZXdTdGF0dXMgPSBGbG93SW5mby5OVUxMOwogCQkJCQlpZiAoYWxsb2NhdGlvbi5j
bG9zZVRyYWNrZXIgPT0gbnVsbCkgewogCQkJCQkJYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIgPSBu
ZXcgRmFrZWRUcmFja2luZ1ZhcmlhYmxlKHNjb3BlLCBhbGxvY2F0aW9uKTsgLy8gbm8gbG9jYWwg
YXZhaWxhYmxlLCBjbG9zZWFibGUgaXMgdW5hc3NpZ25lZAorCQkJCQl9IGVsc2UgeworCQkJCQkJ
aWYgKHNjb3BlLmZpbmFsbHlJbmZvICE9IG51bGwpIHsKKwkJCQkJCQkvLyBpbmplY3QgcmVzdWx0
cyBmcm9tIGFuYWx5c2luZyBhIGZpbmFsbHkgYmxvY2sgb250byB0aGUgbmV3bHkgY29ubmVjdGVk
IHdyYXBwZXIKKwkJCQkJCQlpbnQgZmluYWxseVN0YXR1cyA9IHNjb3BlLmZpbmFsbHlJbmZvLm51
bGxTdGF0dXMoYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIuYmluZGluZyk7CisJCQkJCQkJaWYgKGZp
bmFsbHlTdGF0dXMgIT0gRmxvd0luZm8uVU5LTk9XTikKKwkJCQkJCQkJbmV3U3RhdHVzID0gZmlu
YWxseVN0YXR1czsKKwkJCQkJCX0KIAkJCQkJfQogCQkJCQlhbGxvY2F0aW9uLmNsb3NlVHJhY2tl
ci5pbm5lclRyYWNrZXIgPSBpbm5lclRyYWNrZXI7Ci0JCQkJCWlubmVyVHJhY2tlci5nbG9iYWxD
bG9zaW5nU3RhdGUgfD0gV1JBUFBFRDsKLQkJCQkJZmxvd0luZm8ubWFya0FzRGVmaW5pdGVseU51
bGwoYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIuYmluZGluZyk7CisJCQkJCWlubmVyVHJhY2tlci5v
dXRlclRyYWNrZXIgPSBhbGxvY2F0aW9uLmNsb3NlVHJhY2tlcjsKKwkJCQkJZmxvd0luZm8ubWFy
a051bGxTdGF0dXMoYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIuYmluZGluZywgbmV3U3RhdHVzKTsK
KwkJCQkJaWYgKG5ld1N0YXR1cyAhPSBGbG93SW5mby5OVUxMKSB7CisJCQkJCQkvLyBwcm9wYWdh
dGUgcmVzdWx0cyBmcm9tIGEgZmluYWxseSBibG9jayBhbHNvIGludG8gbmVzdGVkIHJlc291cmNl
czoKKwkJCQkJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSBjdXJyZW50VHJhY2tlciA9IGlubmVyVHJh
Y2tlcjsKKwkJCQkJCXdoaWxlIChjdXJyZW50VHJhY2tlciAhPSBudWxsKSB7CisJCQkJCQkJZmxv
d0luZm8ubWFya051bGxTdGF0dXMoY3VycmVudFRyYWNrZXIuYmluZGluZywgbmV3U3RhdHVzKTsK
KwkJCQkJCQljdXJyZW50VHJhY2tlciA9IGN1cnJlbnRUcmFja2VyLmlubmVyVHJhY2tlcjsKKwkJ
CQkJCX0KKwkJCQkJfQogCQkJCQlyZXR1cm47IC8vIGtlZXAgY2hhaW5pbmcgd3JhcHBlcgogCQkJ
CX0KIAkJCX0KQEAgLTIxNiw2ICsyNDEsNyBAQAogCQkJaWYgKHByZXNldFRyYWNrZXIgIT0gbnVs
bCAmJiBwcmVzZXRUcmFja2VyLm9yaWdpbmFsQmluZGluZyAhPSBudWxsKSB7CiAJCQkJaW50IGNs
b3NlU3RhdHVzID0gZmxvd0luZm8ubnVsbFN0YXR1cyhwcmVzZXRUcmFja2VyLmJpbmRpbmcpOwog
CQkJCWlmIChjbG9zZVN0YXR1cyAhPSBGbG93SW5mby5OT05fTlVMTAorCQkJCQkJJiYgY2xvc2VT
dGF0dXMgIT0gRmxvd0luZm8uVU5LTk9XTgogCQkJCQkJJiYgIWZsb3dJbmZvLmlzRGVmaW5pdGVs
eU51bGwocHJlc2V0VHJhY2tlci5vcmlnaW5hbEJpbmRpbmcpCiAJCQkJCQkmJiAhKHByZXNldFRy
YWNrZXIuY3VycmVudEFzc2lnbm1lbnQgaW5zdGFuY2VvZiBMb2NhbERlY2xhcmF0aW9uKSkKIAkJ
CQkJYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIucmVjb3JkRXJyb3JMb2NhdGlvbihwcmVzZXRUcmFj
a2VyLmN1cnJlbnRBc3NpZ25tZW50LCBjbG9zZVN0YXR1cyk7CkBAIC0yOTEsNyArMzE3LDcgQEAK
IAkJCQkvLyBrZWVwIGNsb3NlLXN0YXR1cyBvZiBSSFMgdW5jaGFuZ2VkIGFjcm9zcyB0aGlzIGFz
c2lnbm1lbnQKIAkJCX0gZWxzZSBpZiAocHJldmlvdXNUcmFja2VyICE9IG51bGwpIHsJCQkJCS8v
IDIuIHJlLXVzZSB0cmFja2luZyB2YXJpYWJsZSBmcm9tIHRoZSBMSFM/CiAJCQkJLy8gcmUtYXNz
aWduaW5nIGZyb20gYSBmcmVzaCB2YWx1ZSwgbWFyayBhcyBub3QtY2xvc2VkIGFnYWluOgotCQkJ
CWlmICgocHJldmlvdXNUcmFja2VyLmdsb2JhbENsb3NpbmdTdGF0ZSAmIChQQVNTRURfVE9fT1VU
U0lERXxPQlRBSU5FRF9GUk9NX09VVFNJREUpKSA9PSAwKQorCQkJCWlmICgocHJldmlvdXNUcmFj
a2VyLmdsb2JhbENsb3NpbmdTdGF0ZSAmIChTSEFSRURfV0lUSF9PVVRTSURFfE9XTkVEX0JZX09V
VFNJREUpKSA9PSAwKQogCQkJCQlmbG93SW5mby5tYXJrQXNEZWZpbml0ZWx5TnVsbChwcmV2aW91
c1RyYWNrZXIuYmluZGluZyk7CiAJCQkJbG9jYWwuY2xvc2VUcmFja2VyID0gYW5hbHlzZUNsb3Nl
YWJsZUV4cHJlc3Npb24oZmxvd0luZm8sIGxvY2FsLCBsb2NhdGlvbiwgcmhzLCBwcmV2aW91c1Ry
YWNrZXIpOwogCQkJfSBlbHNlIHsJCQkJCQkJCQkJCQkvLyAzLiBubyByZS11c2UsIGNyZWF0ZSBh
IGZyZXNoIHRyYWNraW5nIHZhcmlhYmxlOgpAQCAtMjk5LDcgKzMyNSw3IEBACiAJCQkJaWYgKHJo
c1RyYWNrVmFyICE9IG51bGwpIHsKIAkJCQkJbG9jYWwuY2xvc2VUcmFja2VyID0gcmhzVHJhY2tW
YXI7CiAJCQkJCS8vIGEgZnJlc2ggcmVzb3VyY2UsIG1hcmsgYXMgbm90LWNsb3NlZDoKLQkJCQkJ
aWYgKChyaHNUcmFja1Zhci5nbG9iYWxDbG9zaW5nU3RhdGUgJiAoUEFTU0VEX1RPX09VVFNJREV8
T0JUQUlORURfRlJPTV9PVVRTSURFKSkgPT0gMCkKKwkJCQkJaWYgKChyaHNUcmFja1Zhci5nbG9i
YWxDbG9zaW5nU3RhdGUgJiAoU0hBUkVEX1dJVEhfT1VUU0lERXxPV05FRF9CWV9PVVRTSURFKSkg
PT0gMCkKIAkJCQkJCWZsb3dJbmZvLm1hcmtBc0RlZmluaXRlbHlOdWxsKHJoc1RyYWNrVmFyLmJp
bmRpbmcpOwogLy8gVE9ETyhzdGVwaGFuKTogdGhpcyBtaWdodCBiZSB1c2VmdWwsIGJ1dCBJIGNv
dWxkIG5vdCBmaW5kIGEgdGVzdCBjYXNlIGZvciBpdDogCiAvLwkJCQkJaWYgKGZsb3dDb250ZXh0
LmluaXRzT25GaW5hbGx5ICE9IG51bGwpCkBAIC0zMDgsOCArMzM0LDExIEBACiAJCQl9CiAJCX0K
IAotCQlpZiAoZGlzY29ubmVjdGVkVHJhY2tlciAhPSBudWxsKQotCQkJZGlzY29ubmVjdGVkVHJh
Y2tlci5yZWNvcmRFcnJvckxvY2F0aW9uKGxvY2F0aW9uLCB1cHN0cmVhbUluZm8ubnVsbFN0YXR1
cyhkaXNjb25uZWN0ZWRUcmFja2VyLmJpbmRpbmcpKTsKKwkJaWYgKGRpc2Nvbm5lY3RlZFRyYWNr
ZXIgIT0gbnVsbCkgeworCQkJaW50IHVwc3RyZWFtU3RhdHVzID0gdXBzdHJlYW1JbmZvLm51bGxT
dGF0dXMoZGlzY29ubmVjdGVkVHJhY2tlci5iaW5kaW5nKTsKKwkJCWlmICh1cHN0cmVhbVN0YXR1
cyAhPSBGbG93SW5mby5OT05fTlVMTCkKKwkJCQlkaXNjb25uZWN0ZWRUcmFja2VyLnJlY29yZEVy
cm9yTG9jYXRpb24obG9jYXRpb24sIHVwc3RyZWFtU3RhdHVzKTsKKwkJfQogCX0KIAkvKioKIAkg
KiBBbmFseXplIHN0cnVjdHVyZSBvZiBhIGNsb3NlYWJsZSBleHByZXNzaW9uLCBtYXRjaGluZyAo
Y2hhaW5lZCkgcmVzb3VyY2VzIGFnYWluc3Qgb3VyIHdoaXRlIGxpc3RzLgpAQCAtMzQ4LDE0ICsz
NzcsMTQgQEAKIAkJewogCQkJLy8gd2UgKm1pZ2h0KiBiZSByZXNwb25zaWJsZSBmb3IgdGhlIHJl
c291cmNlIG9idGFpbmVkCiAJCQlGYWtlZFRyYWNraW5nVmFyaWFibGUgdHJhY2tlciA9IG5ldyBG
YWtlZFRyYWNraW5nVmFyaWFibGUobG9jYWwsIGxvY2F0aW9uKTsKLQkJCXRyYWNrZXIuZ2xvYmFs
Q2xvc2luZ1N0YXRlIHw9IFBBU1NFRF9UT19PVVRTSURFOworCQkJdHJhY2tlci5nbG9iYWxDbG9z
aW5nU3RhdGUgfD0gU0hBUkVEX1dJVEhfT1VUU0lERTsKIAkJCWZsb3dJbmZvLm1hcmtQb3RlbnRp
YWxseU51bGxCaXQodHJhY2tlci5iaW5kaW5nKTsgLy8gc2hlZCBzb21lIGRvdWJ0CiAJCQlyZXR1
cm4gdHJhY2tlcjsJCQkKIAkJfSBlbHNlIGlmICgoZXhwcmVzc2lvbi5iaXRzICYgUmVzdHJpY3Rp
dmVGbGFnTUFTSykgPT0gQmluZGluZy5GSUVMRCkgCiAJCXsKIAkJCS8vIHJlc3BvbnNpYmlsaXR5
IGZvciB0aGlzIHJlc291cmNlIHByb2JhYmx5IGxpZXMgYXQgYSBoaWdoZXIgbGV2ZWwKIAkJCUZh
a2VkVHJhY2tpbmdWYXJpYWJsZSB0cmFja2VyID0gbmV3IEZha2VkVHJhY2tpbmdWYXJpYWJsZShs
b2NhbCwgbG9jYXRpb24pOwotCQkJdHJhY2tlci5nbG9iYWxDbG9zaW5nU3RhdGUgfD0gT0JUQUlO
RURfRlJPTV9PVVRTSURFOworCQkJdHJhY2tlci5nbG9iYWxDbG9zaW5nU3RhdGUgfD0gT1dORURf
QllfT1VUU0lERTsKIAkJCS8vIGxlYXZlIHN0YXRlIGFzIFVOS05PV04sIHRoZSBiaXQgT0JUQUlO
RURfRlJPTV9PVVRTSURFIHdpbGwgcHJldmVudCBzcHVyaW91cyB3YXJuaW5ncwogCQkJcmV0dXJu
IHRyYWNrZXI7CQkJCiAJCX0KQEAgLTQ3NywxMSArNTA2LDE1IEBACiAKIAkvKiogTWFyayB0aGF0
IHRoaXMgcmVzb3VyY2UgaXMgY2xvc2VkIGxvY2FsbHkuICovCiAJcHVibGljIHZvaWQgbWFya0Ns
b3NlKEZsb3dJbmZvIGZsb3dJbmZvLCBGbG93Q29udGV4dCBmbG93Q29udGV4dCkgewotCQlmbG93
SW5mby5tYXJrQXNEZWZpbml0ZWx5Tm9uTnVsbCh0aGlzLmJpbmRpbmcpOwotCQl0aGlzLmdsb2Jh
bENsb3NpbmdTdGF0ZSB8PSBDTE9TRV9TRUVOOworCQlGYWtlZFRyYWNraW5nVmFyaWFibGUgY3Vy
cmVudCA9IHRoaXM7CisJCXdoaWxlIChjdXJyZW50ICE9IG51bGwpIHsKKwkJCWZsb3dJbmZvLm1h
cmtBc0RlZmluaXRlbHlOb25OdWxsKGN1cnJlbnQuYmluZGluZyk7CisJCQljdXJyZW50Lmdsb2Jh
bENsb3NpbmdTdGF0ZSB8PSBDTE9TRV9TRUVOOwogLy9UT0RPKHN0ZXBoYW4pOiB0aGlzIG1pZ2h0
IGJlIHVzZWZ1bCwgYnV0IEkgY291bGQgbm90IGZpbmQgYSB0ZXN0IGNhc2UgZm9yIGl0OiAKLS8v
CQlpZiAoZmxvd0NvbnRleHQuaW5pdHNPbkZpbmFsbHkgIT0gbnVsbCkKLS8vCQkJZmxvd0NvbnRl
eHQuaW5pdHNPbkZpbmFsbHkubWFya0FzRGVmaW5pdGVseU5vbk51bGwodGhpcy5iaW5kaW5nKTsK
Ky8vCQkJaWYgKGZsb3dDb250ZXh0LmluaXRzT25GaW5hbGx5ICE9IG51bGwpCisvLwkJCQlmbG93
Q29udGV4dC5pbml0c09uRmluYWxseS5tYXJrQXNEZWZpbml0ZWx5Tm9uTnVsbCh0aGlzLmJpbmRp
bmcpOworCQkJY3VycmVudCA9IGN1cnJlbnQuaW5uZXJUcmFja2VyOworCQl9CiAJfQogCiAJLyoq
IE1hcmsgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNsb3NlZCBmcm9tIGEgbmVzdGVkIG1ldGhvZCAo
aW5zaWRlIGEgbG9jYWwgY2xhc3MpLiAqLwpAQCAtNTAzLDcgKzUzNiw3IEBACiAJCQkJc2NvcGUu
cmVtb3ZlVHJhY2tpbmdWYXIodHJhY2tWYXIpOwogCQkJCXJldHVybiBmbG93SW5mbzsKIAkJCX0K
LQkJCXRyYWNrVmFyLmdsb2JhbENsb3NpbmdTdGF0ZSB8PSBQQVNTRURfVE9fT1VUU0lERTsKKwkJ
CXRyYWNrVmFyLmdsb2JhbENsb3NpbmdTdGF0ZSB8PSBTSEFSRURfV0lUSF9PVVRTSURFOwogCQkJ
aWYgKHNjb3BlLm1ldGhvZFNjb3BlKCkgIT0gdHJhY2tWYXIubWV0aG9kU2NvcGUpCiAJCQkJdHJh
Y2tWYXIuZ2xvYmFsQ2xvc2luZ1N0YXRlIHw9IENMT1NFRF9JTl9ORVNURURfTUVUSE9EOwogCQkJ
Ly8gaW5zZXJ0IGluZm8gdGhhdCB0aGUgdHJhY2tlZCByZXNvdXJjZSAqbWF5KiBiZSBjbG9zZWQg
KGJ5IHRoZSB0YXJnZXQgbWV0aG9kLCBpLmUuKQpAQCAtNTIyLDcgKzU1NSw3IEBACiAKIAlwdWJs
aWMgYm9vbGVhbiByZXBvcnRSZWNvcmRlZEVycm9ycyhTY29wZSBzY29wZSkgewogCQlGYWtlZFRy
YWNraW5nVmFyaWFibGUgY3VycmVudCA9IHRoaXM7Ci0JCXdoaWxlICgoY3VycmVudC5nbG9iYWxD
bG9zaW5nU3RhdGUgJiBET1VCVF9NQVNLKSA9PSAwKSB7CisJCXdoaWxlIChjdXJyZW50Lmdsb2Jh
bENsb3NpbmdTdGF0ZSA9PSAwKSB7CiAJCQljdXJyZW50ID0gY3VycmVudC5pbm5lclRyYWNrZXI7
CiAJCQlpZiAoY3VycmVudCA9PSBudWxsKSB7CiAJCQkJLy8gbm8gcmVsZXZhbnQgc3RhdGUgZm91
bmQgLT4gcmVwb3J0OgpAQCAtNTQzLDIxICs1NzYsMzggQEAKIAl9CiAJCiAJcHVibGljIHZvaWQg
cmVwb3J0RXJyb3IoUHJvYmxlbVJlcG9ydGVyIHByb2JsZW1SZXBvcnRlciwgQVNUTm9kZSBsb2Nh
dGlvbiwgaW50IG51bGxTdGF0dXMpIHsKLQkJaWYgKCh0aGlzLmdsb2JhbENsb3NpbmdTdGF0ZSAm
IFdSQVBQRUQpICE9IDApCi0JCQlyZXR1cm47CisJCS8vIHdoaWNoIGRlZ3JlZSBvZiBwcm9ibGVt
PworCQlib29sZWFuIGlzUG90ZW50aWFsUHJvYmxlbSA9IGZhbHNlOwogCQlpZiAobnVsbFN0YXR1
cyA9PSBGbG93SW5mby5OVUxMKSB7CiAJCQlpZiAoKHRoaXMuZ2xvYmFsQ2xvc2luZ1N0YXRlICYg
Q0xPU0VEX0lOX05FU1RFRF9NRVRIT0QpICE9IDApCi0JCQkJcHJvYmxlbVJlcG9ydGVyLnBvdGVu
dGlhbGx5VW5jbG9zZWRDbG9zZWFibGUodGhpcywgbG9jYXRpb24pOwotCQkJZWxzZQotCQkJCXBy
b2JsZW1SZXBvcnRlci51bmNsb3NlZENsb3NlYWJsZSh0aGlzLCBsb2NhdGlvbik7CisJCQkJaXNQ
b3RlbnRpYWxQcm9ibGVtID0gdHJ1ZTsKIAkJfSBlbHNlIGlmIChudWxsU3RhdHVzID09IEZsb3dJ
bmZvLlBPVEVOVElBTExZX05VTEwpIHsKLQkJCXByb2JsZW1SZXBvcnRlci5wb3RlbnRpYWxseVVu
Y2xvc2VkQ2xvc2VhYmxlKHRoaXMsIGxvY2F0aW9uKTsKKwkJCWlzUG90ZW50aWFsUHJvYmxlbSA9
IHRydWU7CisJCX0KKwkJLy8gcmVwb3J0OgorCQlpZiAoaXNQb3RlbnRpYWxQcm9ibGVtKSB7CisJ
CQlpZiAoKHRoaXMuZ2xvYmFsQ2xvc2luZ1N0YXRlICYgKFJFUE9SVEVEX1BPVEVOVElBTF9MRUFL
fFJFUE9SVEVEX0RFRklOSVRJVkVfTEVBSykpICE9IDApCisJCQkJcmV0dXJuOworCQkJcHJvYmxl
bVJlcG9ydGVyLnBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUodGhpcywgbG9jYXRpb24pOwkK
KwkJfSBlbHNlIHsKKwkJCWlmICgodGhpcy5nbG9iYWxDbG9zaW5nU3RhdGUgJiAoUkVQT1JURURf
REVGSU5JVElWRV9MRUFLKSkgIT0gMCkKKwkJCQlyZXR1cm47CisJCQlwcm9ibGVtUmVwb3J0ZXIu
dW5jbG9zZWRDbG9zZWFibGUodGhpcywgbG9jYXRpb24pOwkJCQorCQl9CisJCS8vIHByb3BhZ2F0
ZSBmbGFnIHRvIGlubmVyczoKKwkJaWYgKGxvY2F0aW9uID09IG51bGwpIHsKKwkJCWludCByZXBv
cnRGbGFnID0gaXNQb3RlbnRpYWxQcm9ibGVtID8gUkVQT1JURURfUE9URU5USUFMX0xFQUsgOiBS
RVBPUlRFRF9ERUZJTklUSVZFX0xFQUs7CisJCQlGYWtlZFRyYWNraW5nVmFyaWFibGUgY3VycmVu
dCA9IHRoaXM7CisJCQl3aGlsZSAoY3VycmVudCAhPSBudWxsKSB7CisJCQkJY3VycmVudC5nbG9i
YWxDbG9zaW5nU3RhdGUgfD0gcmVwb3J0RmxhZzsKKwkJCQljdXJyZW50ID0gY3VycmVudC5pbm5l
clRyYWNrZXI7CisJCQl9CiAJCX0KIAl9CiAKIAlwdWJsaWMgdm9pZCByZXBvcnRFeHBsaWNpdENs
b3NpbmcoUHJvYmxlbVJlcG9ydGVyIHByb2JsZW1SZXBvcnRlcikgewotCQlpZiAoKHRoaXMuZ2xv
YmFsQ2xvc2luZ1N0YXRlICYgKE9CVEFJTkVEX0ZST01fT1VUU0lERXxSRVBPUlRFRCkpID09IDAp
IHsgLy8gY2FuJ3QgdXNlIHQtdy1yIGZvciBPQlRBSU5FRF9GUk9NX09VVFNJREUKLQkJCXRoaXMu
Z2xvYmFsQ2xvc2luZ1N0YXRlIHw9IFJFUE9SVEVEOworCQlpZiAoKHRoaXMuZ2xvYmFsQ2xvc2lu
Z1N0YXRlICYgKE9XTkVEX0JZX09VVFNJREV8UkVQT1JURURfRVhQTElDSVRfQ0xPU0UpKSA9PSAw
KSB7IC8vIGNhbid0IHVzZSB0LXctciBmb3IgT1dORURfQllfT1VUU0lERQorCQkJdGhpcy5nbG9i
YWxDbG9zaW5nU3RhdGUgfD0gUkVQT1JURURfRVhQTElDSVRfQ0xPU0U7CiAJCQlwcm9ibGVtUmVw
b3J0ZXIuZXhwbGljaXRseUNsb3NlZEF1dG9DbG9zZWFibGUodGhpcyk7CiAJCX0KIAl9CmRpZmYg
LS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Jsb2NrU2NvcGUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQmxv
Y2tTY29wZS5qYXZhCmluZGV4IDY4MDRmODkuLjcwNjJhOWMgMTAwNjQ0Ci0tLSBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9s
b29rdXAvQmxvY2tTY29wZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQmxvY2tTY29wZS5qYXZh
CkBAIC0xNSw3ICsxNSw5IEBACiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5sb29rdXA7CiAKIGltcG9ydCBqYXZhLnV0aWwuQXJyYXlMaXN0OworaW1wb3J0IGphdmEu
dXRpbC5IYXNoU2V0OwogaW1wb3J0IGphdmEudXRpbC5MaXN0OworaW1wb3J0IGphdmEudXRpbC5T
ZXQ7CiAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5DaGFyT3BlcmF0aW9u
OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuKjsKQEAgLTEw
MDMsOSArMTAwNSwxNCBAQAogCQlyZXR1cm47CiAJfQogCWlmIChsb2NhdGlvbiAhPSBudWxsICYm
IGZsb3dJbmZvLnJlYWNoTW9kZSgpICE9IDApIHJldHVybjsKLQlpbnQgdHJhY2tWYXJzTGVuID0g
dGhpcy50cmFja2luZ1ZhcmlhYmxlcy5zaXplKCk7Ci0JZm9yIChpbnQgaT0wOyBpPHRyYWNrVmFy
c0xlbjsgaSsrKSB7Ci0JCUZha2VkVHJhY2tpbmdWYXJpYWJsZSB0cmFja2luZ1ZhciA9IChGYWtl
ZFRyYWNraW5nVmFyaWFibGUpIHRoaXMudHJhY2tpbmdWYXJpYWJsZXMuZ2V0KGkpOworCVNldCB2
YXJTZXQgPSBuZXcgSGFzaFNldCh0aGlzLnRyYWNraW5nVmFyaWFibGVzKTsKKwl3aGlsZSAoIXZh
clNldC5pc0VtcHR5KCkpIHsKKwkJLy8gcGljayBvbmUgb3V0ZXItbW9zdCB2YXJpYWJsZSBmcm9t
IHRoZSBzZXQKKwkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlIHRyYWNraW5nVmFyID0gKEZha2VkVHJh
Y2tpbmdWYXJpYWJsZSkgdmFyU2V0Lml0ZXJhdG9yKCkubmV4dCgpOworCQl3aGlsZSAodHJhY2tp
bmdWYXIub3V0ZXJUcmFja2VyICE9IG51bGwgJiYgdmFyU2V0LmNvbnRhaW5zKHRyYWNraW5nVmFy
Lm91dGVyVHJhY2tlcikpIHsKKwkJCXRyYWNraW5nVmFyID0gdHJhY2tpbmdWYXIub3V0ZXJUcmFj
a2VyOworCQl9CisJCXZhclNldC5yZW1vdmUodHJhY2tpbmdWYXIpOwogCQlpZiAobG9jYXRpb24g
IT0gbnVsbCAmJiB0cmFja2luZ1Zhci5vcmlnaW5hbEJpbmRpbmcgIT0gbnVsbCAmJiBmbG93SW5m
by5pc0RlZmluaXRlbHlOdWxsKHRyYWNraW5nVmFyLm9yaWdpbmFsQmluZGluZykpCiAJCQljb250
aW51ZTsgLy8gcmVwb3J0aW5nIGFnYWluc3QgYSBzcGVjaWZpYyBsb2NhdGlvbiwgcmVzb3VyY2Ug
aXMgbnVsbCBhdCB0aGlzIGZsb3csIGRvbid0IGNvbXBsYWluCiAJCQo=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>209457</attachid>
            <date>2012-01-13 10:40:00 -0500</date>
            <delta_ts>2012-01-13 16:17:57 -0500</delta_ts>
            <desc>incremental changes 5</desc>
            <filename>Bug_358903_v0.9.6-update5.patch</filename>
            <type>text/plain</type>
            <size>16554</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Jlc291cmNlTGVha1Rl
c3RzLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9SZXNvdXJjZUxlYWtUZXN0
cy5qYXZhCmluZGV4IGQ2YWFjODIuLjFkZmI4M2MgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21w
aWxlci9yZWdyZXNzaW9uL1Jlc291cmNlTGVha1Rlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vUmVzb3VyY2VMZWFrVGVzdHMuamF2YQpAQCAtMjYsNyArMjYsNyBA
QCBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmltcGwuQ29tcGlsZXJP
cHRpb25zOwogcHVibGljIGNsYXNzIFJlc291cmNlTGVha1Rlc3RzIGV4dGVuZHMgQWJzdHJhY3RS
ZWdyZXNzaW9uVGVzdCB7CiAKIHN0YXRpYyB7Ci0vLwlURVNUU19OQU1FUyA9IG5ldyBTdHJpbmdb
XSB7ICJ0ZXN0MDU2cSJ9OworLy8JVEVTVFNfTkFNRVMgPSBuZXcgU3RyaW5nW10geyAidGVzdDA2
MWEifTsKIC8vCVRFU1RTX05VTUJFUlMgPSBuZXcgaW50W10geyA1MCB9OwogLy8JVEVTVFNfUkFO
R0UgPSBuZXcgaW50W10geyAxMSwgLTEgfTsKIH0KQEAgLTIwOTcsNiArMjA5Nyw4NCBAQCBwdWJs
aWMgdm9pZCB0ZXN0MDYxZigpIHRocm93cyBJT0V4Y2VwdGlvbiB7CiAJCW51bGwpOwogfQogLy8g
QnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFr
IHdhcm5pbmdzCisvLyBCdWcgMzYxMDczIC0gQXZvaWQgcmVzb3VyY2UgbGVhayB3YXJuaW5nIHdo
ZW4gdGhlIHRvcCBsZXZlbCByZXNvdXJjZSBpcyBjbG9zZWQgZXhwbGljaXRseQorLy8gYSByZXNv
dXJjZSB3cmFwcGVyIGlzIGNsb3NlZCBjbG9zaW5nIGFsc28gdGhlIHVuZGVybHlpbmcgcmVzb3Vy
Y2UgLSBmcm9tIGEgcmVhbC13b3JsZCBleGFtcGxlCitwdWJsaWMgdm9pZCB0ZXN0MDYxZjIoKSB0
aHJvd3MgSU9FeGNlcHRpb24geworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7
CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3Nl
YWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlv
bnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0
aW9ucy5FUlJPUik7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJ
CSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZhLmlvLk91dHB1dFN0cmVhbTtcbiIgKworCQkJImlt
cG9ydCBqYXZhLmlvLkZpbGVPdXRwdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5C
dWZmZXJlZE91dHB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9u
O1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICAgIHZvaWQgem9yaygpIHRo
cm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIJCXRyeSB7XG4iICsgCisJCQkiCQkJT3V0cHV0
U3RyZWFtIG9zID0gbnVsbDtcbiIgKyAKKwkJCSIJCQl0cnkge1xuIiArIAorCQkJIgkJCQlvcyA9
IG5ldyBCdWZmZXJlZE91dHB1dFN0cmVhbShuZXcgRmlsZU91dHB1dFN0cmVhbShcInNvbWVmaWxl
XCIpKTtcbiIgKyAKKwkJCSIJCQkJU3RyaW5nIGV4dGVybmFsRm9ybSA9IFwiZXh0ZXJuYWxQYXRo
XCI7XG4iICsgCisJCQkiCQkJfSBmaW5hbGx5IHtcbiIgKyAKKwkJCSIJCQkJaWYgKG9zICE9IG51
bGwpXG4iICsgCisJCQkiCQkJCQlvcy5jbG9zZSgpO1xuIiArIAorCQkJIgkJCX1cbiIgKyAKKwkJ
CSIJCX0gY2F0Y2ggKElPRXhjZXB0aW9uIGUpIHtcbiIgKyAKKwkJCSIJCQllLnByaW50U3RhY2tU
cmFjZSgpO1xuIiArIAorCQkJIgkJfVxuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJ
fSwKKwkJIiIsCisJCW51bGwsCisJCXRydWUsCisJCW51bGwsCisJCW9wdGlvbnMsCisJCW51bGwp
OworfQorLy8gQnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNv
dXJjZSBsZWFrIHdhcm5pbmdzCisvLyBCdWcgMzYxMDczIC0gQXZvaWQgcmVzb3VyY2UgbGVhayB3
YXJuaW5nIHdoZW4gdGhlIHRvcCBsZXZlbCByZXNvdXJjZSBpcyBjbG9zZWQgZXhwbGljaXRseQor
Ly8gYSByZXNvdXJjZSB3cmFwcGVyIGlzIHNlbnQgdG8gYW5vdGhlciBtZXRob2QgYWZmZWN0aW5n
IGFsc28gdGhlIHVuZGVybHlpbmcgcmVzb3VyY2UgLSBmcm9tIGEgcmVhbC13b3JsZCBleGFtcGxl
CitwdWJsaWMgdm9pZCB0ZXN0MDYxZjMoKSB0aHJvd3MgSU9FeGNlcHRpb24geworCU1hcCBvcHRp
b25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25z
Lk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsK
KwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5j
bG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJdGhpcy5ydW5OZWdhdGl2
ZVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5p
by5GaWxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZUlucHV0U3RyZWFtO1xuIiArCisJ
CQkiaW1wb3J0IGphdmEuaW8uRmlsZU5vdEZvdW5kRXhjZXB0aW9uO1xuIiArCisJCQkiaW1wb3J0
IGphdmEuaW8uSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJlZElu
cHV0U3RyZWFtO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICAgIFN0cmlu
ZyBsb2FkUHJvZmlsZShGaWxlIHByb2ZpbGVGaWxlKSB7XG4iICsgCisJCQkiCQl0cnkge1xuIiAr
IAorCQkJIgkJCUlucHV0U3RyZWFtIHN0cmVhbSA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKG5l
dyBGaWxlSW5wdXRTdHJlYW0ocHJvZmlsZUZpbGUpKTtcbiIgKyAKKwkJCSIJCQlyZXR1cm4gbG9h
ZFByb2ZpbGUoc3RyZWFtKTtcbiIgKyAKKwkJCSIJCX0gY2F0Y2ggKEZpbGVOb3RGb3VuZEV4Y2Vw
dGlvbiBlKSB7XG4iICsgCisJCQkiCQkJLy9udWxsXG4iICsgCisJCQkiCQl9XG4iICsgCisJCQki
CQlyZXR1cm4gbnVsbDtcbiIgKyAKKwkJCSIJfVxuIiArIAorCQkJIglwcml2YXRlIFN0cmluZyBs
b2FkUHJvZmlsZShJbnB1dFN0cmVhbSBzdHJlYW0pIHtcbiIgKyAKKwkJCSIJCXJldHVybiBudWxs
O1xuIiArIAorCQkJIgl9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSItLS0tLS0tLS0tXG4iICsg
CisJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTApXG4iICsgCisJCSIJcmV0dXJuIGxv
YWRQcm9maWxlKHN0cmVhbSk7XG4iICsgCisJCSIJXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5e
XG4iICsgCisJCSJQb3RlbnRpYWwgcmVzb3VyY2UgbGVhazogXCdzdHJlYW1cJyBtYXkgbm90IGJl
IGNsb3NlZCBhdCB0aGlzIGxvY2F0aW9uXG4iICsgCisJCSItLS0tLS0tLS0tXG4iLAorCQludWxs
LAorCQl0cnVlLAorCQlvcHRpb25zKTsKK30KKy8vIEJ1ZyAzNTg5MDMgLSBGaWx0ZXIgcHJhY3Rp
Y2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5ncwogLy8gQnVnIDM2MDkwOCAt
IEF2b2lkIHJlc291cmNlIGxlYWsgd2FybmluZyB3aGVuIHRoZSB1bmRlcmx5aW5nL2NoYWluZWQg
cmVzb3VyY2UgaXMgY2xvc2VkIGV4cGxpY2l0bHkKIC8vIERpZmZlcmVudCBwb2ludHMgaW4gYSBy
ZXNvdXJjZSBjaGFpbiBhcmUgY2xvc2VkCiBwdWJsaWMgdm9pZCB0ZXN0MDYxZygpIHsKQEAgLTI0
NTQsNiArMjUzMiw0MCBAQCBwdWJsaWMgdm9pZCB0ZXN0MDYxbygpIHsKIAkJdHJ1ZSwKIAkJb3B0
aW9ucyk7CiB9CisvLyBCdWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50
IHJlc291cmNlIGxlYWsgd2FybmluZ3MKKy8vIGEgcmVzb3VyY2Ugd3JhcHBlciBpcyBjb25kaXRp
b25hbGx5IGFsbG9jYXRlZCBidXQgbm90IGNsb3NlZCAtIGZyb20gYSByZWFsLXdvcmxkIGV4YW1w
bGUKK3B1YmxpYyB2b2lkIHRlc3QwNjFmNCgpIHRocm93cyBJT0V4Y2VwdGlvbiB7CisJTWFwIG9w
dGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlv
bnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1Ip
OworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlV
bmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1bk5lZ2F0
aXZlVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZh
LmlvLkZpbGU7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlSW5wdXRTdHJlYW07XG4iICsK
KwkJCSJpbXBvcnQgamF2YS5pby5GaWxlTm90Rm91bmRFeGNlcHRpb247XG4iICsKKwkJCSJpbXBv
cnQgamF2YS5pby5JbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVk
SW5wdXRTdHJlYW07XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIgICAgCXZv
aWQgZm9vKEZpbGUgbG9jYXRpb24sIFN0cmluZyBhZHZpY2VGaWxlUGF0aCkgdGhyb3dzIEZpbGVO
b3RGb3VuZEV4Y2VwdGlvbiB7XG4iICsgCisJCQkiCQlJbnB1dFN0cmVhbSBzdHJlYW0gPSBudWxs
O1xuIiArIAorCQkJIgkJaWYgKGxvY2F0aW9uLmlzRGlyZWN0b3J5KCkpIHtcbiIgKyAKKwkJCSIJ
CQlGaWxlIGFkdmljZUZpbGUgPSBuZXcgRmlsZShsb2NhdGlvbiwgYWR2aWNlRmlsZVBhdGgpO1xu
IiArIAorCQkJIgkJCXN0cmVhbSA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKG5ldyBGaWxlSW5w
dXRTdHJlYW0oYWR2aWNlRmlsZSkpO1xuIiArIAorCQkJIgkJfVxuIiArIAorCQkJIgl9XG4iICsg
CisJCQkifVxuIgorCQl9LAorCQkiLS0tLS0tLS0tLVxuIiArCisJCSIxLiBFUlJPUiBpbiBYLmph
dmEgKGF0IGxpbmUgMTEpXG4iICsKKwkJIglzdHJlYW0gPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVh
bShuZXcgRmlsZUlucHV0U3RyZWFtKGFkdmljZUZpbGUpKTtcbiIgKworCQkiCV5eXl5eXl5eXl5e
Xl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXG4i
ICsKKwkJIlBvdGVudGlhbCByZXNvdXJjZSBsZWFrOiBcJ3N0cmVhbVwnIG1heSBub3QgYmUgY2xv
c2VkXG4iICsgLy8gbWVzc2FnZSBjb3VsZCBiZSBzdHJvbmdlciwgYnV0IHRoZSBlbmNsb3Npbmcg
aWYgYmx1cnMgdGhlIHBpY3R1cmUKKwkJIi0tLS0tLS0tLS1cbiIsCisJCW51bGwsCisJCXRydWUs
CisJCW9wdGlvbnMpOworfQogLy8gQnVnIDM2MjMzMSAtIFJlc291cmNlIGxlYWsgbm90IGRldGVj
dGVkIHdoZW4gY2xvc2VhYmxlIG5vdCBhc3NpZ25lZCB0byB2YXJpYWJsZQogLy8gYSByZXNvdXJj
ZSBpcyBuZXZlciBhc3NpZ25lZAogcHVibGljIHZvaWQgdGVzdDA2MmEoKSB0aHJvd3MgSU9FeGNl
cHRpb24gewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9GYWtlZFRyYWNraW5nVmFyaWFibGUuamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9hc3QvRmFrZWRUcmFja2luZ1ZhcmlhYmxlLmphdmEKaW5kZXggMDVjYzZiNy4u
MGQyY2JlOSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9GYWtlZFRyYWNraW5nVmFyaWFibGUuamF2
YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvYXN0L0Zha2VkVHJhY2tpbmdWYXJpYWJsZS5qYXZhCkBAIC0xNCw2ICsx
NCw3IEBAIGltcG9ydCBqYXZhLnV0aWwuSGFzaE1hcDsKIGltcG9ydCBqYXZhLnV0aWwuSXRlcmF0
b3I7CiBpbXBvcnQgamF2YS51dGlsLk1hcDsKIGltcG9ydCBqYXZhLnV0aWwuTWFwLkVudHJ5Owor
aW1wb3J0IGphdmEudXRpbC5TZXQ7CiAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuY29kZWdlbi5Db2RlU3RyZWFtOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5mbG93LkZsb3dDb250ZXh0OwpAQCAtMTA3LDYgKzEwOCw3IEBAIHB1Ymxp
YyBjbGFzcyBGYWtlZFRyYWNraW5nVmFyaWFibGUgZXh0ZW5kcyBMb2NhbERlY2xhcmF0aW9uIHsK
IAkJCQlzY29wZS5nZXRKYXZhTGFuZ09iamVjdCgpLCAgLy8gZHVtbXksIGp1c3QgbmVlZHMgdG8g
YmUgYSByZWZlcmVuY2UgdHlwZQogCQkJCTAsCiAJCQkJZmFsc2UpOworCQl0aGlzLmJpbmRpbmcu
ZGVjbGFyaW5nU2NvcGUgPSBzY29wZTsKIAkJdGhpcy5iaW5kaW5nLnNldENvbnN0YW50KENvbnN0
YW50Lk5vdEFDb25zdGFudCk7CiAJCXRoaXMuYmluZGluZy51c2VGbGFnID0gTG9jYWxWYXJpYWJs
ZUJpbmRpbmcuVVNFRDsKIAkJLy8gdXNlIGEgZnJlZSBzbG90IHdpdGhvdXQgYXNzaWduaW5nIGl0
OgpAQCAtMjI1LDYgKzIyNyw3IEBAIHB1YmxpYyBjbGFzcyBGYWtlZFRyYWNraW5nVmFyaWFibGUg
ZXh0ZW5kcyBMb2NhbERlY2xhcmF0aW9uIHsKIAkJCQkJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSBj
dXJyZW50VHJhY2tlciA9IGlubmVyVHJhY2tlcjsKIAkJCQkJCXdoaWxlIChjdXJyZW50VHJhY2tl
ciAhPSBudWxsKSB7CiAJCQkJCQkJZmxvd0luZm8ubWFya051bGxTdGF0dXMoY3VycmVudFRyYWNr
ZXIuYmluZGluZywgbmV3U3RhdHVzKTsKKwkJCQkJCQljdXJyZW50VHJhY2tlci5nbG9iYWxDbG9z
aW5nU3RhdGUgfD0gYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIuZ2xvYmFsQ2xvc2luZ1N0YXRlOwog
CQkJCQkJCWN1cnJlbnRUcmFja2VyID0gY3VycmVudFRyYWNrZXIuaW5uZXJUcmFja2VyOwogCQkJ
CQkJfQogCQkJCQl9CkBAIC01MzYsNDYgKzUzOSw5NiBAQCBwdWJsaWMgY2xhc3MgRmFrZWRUcmFj
a2luZ1ZhcmlhYmxlIGV4dGVuZHMgTG9jYWxEZWNsYXJhdGlvbiB7CiAJCQkJc2NvcGUucmVtb3Zl
VHJhY2tpbmdWYXIodHJhY2tWYXIpOwogCQkJCXJldHVybiBmbG93SW5mbzsKIAkJCX0KLQkJCXRy
YWNrVmFyLmdsb2JhbENsb3NpbmdTdGF0ZSB8PSBTSEFSRURfV0lUSF9PVVRTSURFOwotCQkJaWYg
KHNjb3BlLm1ldGhvZFNjb3BlKCkgIT0gdHJhY2tWYXIubWV0aG9kU2NvcGUpCi0JCQkJdHJhY2tW
YXIuZ2xvYmFsQ2xvc2luZ1N0YXRlIHw9IENMT1NFRF9JTl9ORVNURURfTUVUSE9EOwogCQkJLy8g
aW5zZXJ0IGluZm8gdGhhdCB0aGUgdHJhY2tlZCByZXNvdXJjZSAqbWF5KiBiZSBjbG9zZWQgKGJ5
IHRoZSB0YXJnZXQgbWV0aG9kLCBpLmUuKQogCQkJRmxvd0luZm8gaW5mb1Jlc291cmNlSXNDbG9z
ZWQgPSBmbG93SW5mby5jb3B5KCk7Ci0JCQlpbmZvUmVzb3VyY2VJc0Nsb3NlZC5tYXJrQXNEZWZp
bml0ZWx5Tm9uTnVsbCh0cmFja1Zhci5iaW5kaW5nKTsKKwkJCWRvIHsKKwkJCQl0cmFja1Zhci5n
bG9iYWxDbG9zaW5nU3RhdGUgfD0gU0hBUkVEX1dJVEhfT1VUU0lERTsKKwkJCQlpZiAoc2NvcGUu
bWV0aG9kU2NvcGUoKSAhPSB0cmFja1Zhci5tZXRob2RTY29wZSkKKwkJCQkJdHJhY2tWYXIuZ2xv
YmFsQ2xvc2luZ1N0YXRlIHw9IENMT1NFRF9JTl9ORVNURURfTUVUSE9EOworCQkJCWluZm9SZXNv
dXJjZUlzQ2xvc2VkLm1hcmtBc0RlZmluaXRlbHlOb25OdWxsKHRyYWNrVmFyLmJpbmRpbmcpOwor
CQkJfSB3aGlsZSAoKHRyYWNrVmFyID0gdHJhY2tWYXIuaW5uZXJUcmFja2VyKSAhPSBudWxsKTsg
CiAJCQlyZXR1cm4gRmxvd0luZm8uY29uZGl0aW9uYWwoZmxvd0luZm8sIGluZm9SZXNvdXJjZUlz
Q2xvc2VkKTsKIAkJfQogCQlyZXR1cm4gZmxvd0luZm87CiAJfQotCQorCisJLyoqIAorCSAqIFBp
Y2sgdHJhY2tpbmcgdmFyaWFibGVzIGZyb20gJ3ZhcnNPZlNjb3BlJyB0byBlc3RhYmxpc2ggYSBw
cm9wZXIgb3JkZXIgb2YgcHJvY2Vzc2luZzoKKwkgKiBBcyBtdWNoIGFzIHBvc3NpYmxlIHBpY2sg
d3JhcHBlciByZXNvdXJjZXMgYmVmb3JlIHRoZWlyIGlubmVyIHJlc291cmNlcy4KKwkgKiBBbHNv
IGNvbnNpZGVyIGNhc2VzIG9mIHdyYXBwZXJzIGFuZCB0aGVpciBpbm5lcnMgYmVpbmcgZGVjbGFy
ZWQgYXQgZGlmZmVyZW50IHNjb3Blcy4KKwkgKi8KKwlwdWJsaWMgc3RhdGljIEZha2VkVHJhY2tp
bmdWYXJpYWJsZSBwaWNrVmFyRm9yUmVwb3J0aW5nKFNldCB2YXJzT2ZTY29wZSwgQmxvY2tTY29w
ZSBzY29wZSwgYm9vbGVhbiBhdEV4aXQpIHsKKwkJaWYgKHZhcnNPZlNjb3BlLmlzRW1wdHkoKSkg
cmV0dXJuIG51bGw7CisJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSB0cmFja2luZ1ZhciA9IChGYWtl
ZFRyYWNraW5nVmFyaWFibGUpIHZhcnNPZlNjb3BlLml0ZXJhdG9yKCkubmV4dCgpOworCQl3aGls
ZSAodHJhY2tpbmdWYXIub3V0ZXJUcmFja2VyICE9IG51bGwpIHsKKwkJCS8vIHJlc291cmNlIGlz
IHdyYXBwZWQsIGlzIHdyYXBwZXIgZGVmaW5lZCBpbiB0aGlzIHNjb3BlPworCQkJaWYgKHZhcnNP
ZlNjb3BlLmNvbnRhaW5zKHRyYWNraW5nVmFyLm91dGVyVHJhY2tlcikpIHsKKwkJCQkvLyByZXNv
dXJjZSBmcm9tIHNhbWUgc2NvcGUsIHRyYXZlbCB1cCB0aGUgd3JhcHBlciBjaGFpbgorCQkJCXRy
YWNraW5nVmFyID0gdHJhY2tpbmdWYXIub3V0ZXJUcmFja2VyOworCQkJfSBlbHNlIGlmIChhdEV4
aXQpIHsKKwkJCQkvLyBhdCBhbiBleGl0IHBvaW50IHdlIHJlcG9ydCBhZ2FpbnN0IGlubmVyIGRl
c3BpdGUgYSB3cmFwcGVyIHRoYXQgbWF5L21heSBub3QgYmUgY2xvc2VkIGxhdGVyCisJCQkJYnJl
YWs7CisJCQl9IGVsc2UgeworCQkJCUJsb2NrU2NvcGUgb3V0ZXJUcmFja2VyU2NvcGUgPSB0cmFj
a2luZ1Zhci5vdXRlclRyYWNrZXIuYmluZGluZy5kZWNsYXJpbmdTY29wZTsKKwkJCQlpZiAob3V0
ZXJUcmFja2VyU2NvcGUgPT0gc2NvcGUpIHsKKwkJCQkJLy8gb3V0ZXJUcmFja2VyIGlzIGZyb20g
c2FtZSBzY29wZSBhbmQgYWxyZWFkeSBwcm9jZXNzZWQgLT4gcGljayB0cmFja2luZ1ZhciBub3cK
KwkJCQkJYnJlYWs7CisJCQkJfSBlbHNlIHsKKwkJCQkJLy8gb3V0ZXIgcmVzb3VyY2UgaXMgZnJv
bSBvdGhlciAob3V0ZXI/KSBzY29wZQorCQkJCQlTY29wZSBjdXJyZW50U2NvcGUgPSBzY29wZTsK
KwkJCQkJd2hpbGUgKChjdXJyZW50U2NvcGUgPSBjdXJyZW50U2NvcGUucGFyZW50KSBpbnN0YW5j
ZW9mIEJsb2NrU2NvcGUpIHsKKwkJCQkJCWlmIChvdXRlclRyYWNrZXJTY29wZSA9PSBjdXJyZW50
U2NvcGUpIHsKKwkJCQkJCQkvLyBhdCBlbmQgb2YgYmxvY2sgcGFzcyByZXNwb25zaWJpbGl0eSBm
b3IgaW5uZXIgcmVzb3VyY2UgdG8gb3V0ZXIgc2NvcGUgaG9sZGluZyBhIHdyYXBwZXIKKwkJCQkJ
CQl2YXJzT2ZTY29wZS5yZW1vdmUodHJhY2tpbmdWYXIpOyAvLyBkcm9wIHRoaXMgb25lCisJCQkJ
CQkJLy8gcGljayBhIG5leHQgY2FuZGlkYXRlOgorCQkJCQkJCXJldHVybiBwaWNrVmFyRm9yUmVw
b3J0aW5nKHZhcnNPZlNjb3BlLCBzY29wZSwgYXRFeGl0KTsKKwkJCQkJCX0KKwkJCQkJfQorCQkJ
CQlicmVhazsgLy8gbm90IHBhcmVudCBvd25lZCAtPiBwaWNrIHRoaXMgdmFyCisJCQkJfQorCQkJ
fQorCQl9CisJCXZhcnNPZlNjb3BlLnJlbW92ZSh0cmFja2luZ1Zhcik7CisJCXJldHVybiB0cmFj
a2luZ1ZhcjsKKwl9CisKIAlwdWJsaWMgdm9pZCByZWNvcmRFcnJvckxvY2F0aW9uKEFTVE5vZGUg
bG9jYXRpb24sIGludCBudWxsU3RhdHVzKSB7CiAJCWlmICh0aGlzLnJlY29yZGVkTG9jYXRpb25z
ID09IG51bGwpCiAJCQl0aGlzLnJlY29yZGVkTG9jYXRpb25zID0gbmV3IEhhc2hNYXAoKTsKIAkJ
dGhpcy5yZWNvcmRlZExvY2F0aW9ucy5wdXQobG9jYXRpb24sIG5ldyBJbnRlZ2VyKG51bGxTdGF0
dXMpKTsKIAl9CiAKLQlwdWJsaWMgYm9vbGVhbiByZXBvcnRSZWNvcmRlZEVycm9ycyhTY29wZSBz
Y29wZSkgeworCXB1YmxpYyBib29sZWFuIHJlcG9ydFJlY29yZGVkRXJyb3JzKFNjb3BlIHNjb3Bl
LCBpbnQgbWVyZ2VkU3RhdHVzKSB7CiAJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSBjdXJyZW50ID0g
dGhpczsKIAkJd2hpbGUgKGN1cnJlbnQuZ2xvYmFsQ2xvc2luZ1N0YXRlID09IDApIHsKIAkJCWN1
cnJlbnQgPSBjdXJyZW50LmlubmVyVHJhY2tlcjsKIAkJCWlmIChjdXJyZW50ID09IG51bGwpIHsK
IAkJCQkvLyBubyByZWxldmFudCBzdGF0ZSBmb3VuZCAtPiByZXBvcnQ6Ci0JCQkJcmVwb3J0RXJy
b3Ioc2NvcGUucHJvYmxlbVJlcG9ydGVyKCksIG51bGwsIEZsb3dJbmZvLk5VTEwpOworCQkJCXJl
cG9ydEVycm9yKHNjb3BlLnByb2JsZW1SZXBvcnRlcigpLCBudWxsLCBtZXJnZWRTdGF0dXMpOwog
CQkJCXJldHVybiB0cnVlOwogCQkJfQogCQl9CiAJCWJvb2xlYW4gaGFzUmVwb3J0ZWQgPSBmYWxz
ZTsKIAkJaWYgKHRoaXMucmVjb3JkZWRMb2NhdGlvbnMgIT0gbnVsbCkgewogCQkJSXRlcmF0b3Ig
bG9jYXRpb25zID0gdGhpcy5yZWNvcmRlZExvY2F0aW9ucy5lbnRyeVNldCgpLml0ZXJhdG9yKCk7
CisJCQlpbnQgcmVwb3J0RmxhZ3MgPSAwOwogCQkJd2hpbGUgKGxvY2F0aW9ucy5oYXNOZXh0KCkp
IHsKIAkJCQlNYXAuRW50cnkgZW50cnkgPSAoRW50cnkpIGxvY2F0aW9ucy5uZXh0KCk7Ci0JCQkJ
cmVwb3J0RXJyb3Ioc2NvcGUucHJvYmxlbVJlcG9ydGVyKCksIChBU1ROb2RlKWVudHJ5LmdldEtl
eSgpLCAoKEludGVnZXIpZW50cnkuZ2V0VmFsdWUoKSkuaW50VmFsdWUoKSk7CisJCQkJcmVwb3J0
RmxhZ3MgfD0gcmVwb3J0RXJyb3Ioc2NvcGUucHJvYmxlbVJlcG9ydGVyKCksIChBU1ROb2RlKWVu
dHJ5LmdldEtleSgpLCAoKEludGVnZXIpZW50cnkuZ2V0VmFsdWUoKSkuaW50VmFsdWUoKSk7CiAJ
CQkJaGFzUmVwb3J0ZWQgPSB0cnVlOwogCQkJfQorCQkJaWYgKHJlcG9ydEZsYWdzICE9IDApIHsK
KwkJCQkvLyBhZnRlciBhbGwgbG9jYXRpb25zIGhhdmUgYmVlbiByZXBvcnRlZCwgbWFyayBhcyBy
ZXBvcnRlZCB0byBwcmV2ZW50IGR1cGxpY2F0ZSByZXBvcnQgdmlhIGFuIG91dGVyIHdyYXBwZXIK
KwkJCQljdXJyZW50ID0gdGhpczsKKwkJCQlkbyB7CisJCQkJCWN1cnJlbnQuZ2xvYmFsQ2xvc2lu
Z1N0YXRlIHw9IHJlcG9ydEZsYWdzOworCQkJCX0gd2hpbGUgKChjdXJyZW50ID0gY3VycmVudC5p
bm5lclRyYWNrZXIpICE9IG51bGwpOworCQkJfQogCQl9CiAJCXJldHVybiBoYXNSZXBvcnRlZDsK
IAl9CiAJCi0JcHVibGljIHZvaWQgcmVwb3J0RXJyb3IoUHJvYmxlbVJlcG9ydGVyIHByb2JsZW1S
ZXBvcnRlciwgQVNUTm9kZSBsb2NhdGlvbiwgaW50IG51bGxTdGF0dXMpIHsKKwlwdWJsaWMgaW50
IHJlcG9ydEVycm9yKFByb2JsZW1SZXBvcnRlciBwcm9ibGVtUmVwb3J0ZXIsIEFTVE5vZGUgbG9j
YXRpb24sIGludCBudWxsU3RhdHVzKSB7CiAJCS8vIHdoaWNoIGRlZ3JlZSBvZiBwcm9ibGVtPwog
CQlib29sZWFuIGlzUG90ZW50aWFsUHJvYmxlbSA9IGZhbHNlOwogCQlpZiAobnVsbFN0YXR1cyA9
PSBGbG93SW5mby5OVUxMKSB7CkBAIC01ODcsMjIgKzY0MCwyMiBAQCBwdWJsaWMgY2xhc3MgRmFr
ZWRUcmFja2luZ1ZhcmlhYmxlIGV4dGVuZHMgTG9jYWxEZWNsYXJhdGlvbiB7CiAJCS8vIHJlcG9y
dDoKIAkJaWYgKGlzUG90ZW50aWFsUHJvYmxlbSkgewogCQkJaWYgKCh0aGlzLmdsb2JhbENsb3Np
bmdTdGF0ZSAmIChSRVBPUlRFRF9QT1RFTlRJQUxfTEVBS3xSRVBPUlRFRF9ERUZJTklUSVZFX0xF
QUspKSAhPSAwKQotCQkJCXJldHVybjsKKwkJCQlyZXR1cm4gMDsKIAkJCXByb2JsZW1SZXBvcnRl
ci5wb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlKHRoaXMsIGxvY2F0aW9uKTsJCiAJCX0gZWxz
ZSB7CiAJCQlpZiAoKHRoaXMuZ2xvYmFsQ2xvc2luZ1N0YXRlICYgKFJFUE9SVEVEX0RFRklOSVRJ
VkVfTEVBSykpICE9IDApCi0JCQkJcmV0dXJuOworCQkJCXJldHVybiAwOwogCQkJcHJvYmxlbVJl
cG9ydGVyLnVuY2xvc2VkQ2xvc2VhYmxlKHRoaXMsIGxvY2F0aW9uKTsJCQkKIAkJfQogCQkvLyBw
cm9wYWdhdGUgZmxhZyB0byBpbm5lcnM6Ci0JCWlmIChsb2NhdGlvbiA9PSBudWxsKSB7Ci0JCQlp
bnQgcmVwb3J0RmxhZyA9IGlzUG90ZW50aWFsUHJvYmxlbSA/IFJFUE9SVEVEX1BPVEVOVElBTF9M
RUFLIDogUkVQT1JURURfREVGSU5JVElWRV9MRUFLOworCQlpbnQgcmVwb3J0RmxhZyA9IGlzUG90
ZW50aWFsUHJvYmxlbSA/IFJFUE9SVEVEX1BPVEVOVElBTF9MRUFLIDogUkVQT1JURURfREVGSU5J
VElWRV9MRUFLOworCQlpZiAobG9jYXRpb24gPT0gbnVsbCkgeyAvLyBpZiBsb2NhdGlvbiAhPSBu
dWxsIGZsYWdzIHdpbGwgYmUgc2V0IGFmdGVyIHRoZSBsb29wIG92ZXIgbG9jYXRpb25zIAogCQkJ
RmFrZWRUcmFja2luZ1ZhcmlhYmxlIGN1cnJlbnQgPSB0aGlzOwotCQkJd2hpbGUgKGN1cnJlbnQg
IT0gbnVsbCkgeworCQkJZG8gewogCQkJCWN1cnJlbnQuZ2xvYmFsQ2xvc2luZ1N0YXRlIHw9IHJl
cG9ydEZsYWc7Ci0JCQkJY3VycmVudCA9IGN1cnJlbnQuaW5uZXJUcmFja2VyOwotCQkJfQorCQkJ
fSB3aGlsZSAoKGN1cnJlbnQgPSBjdXJyZW50LmlubmVyVHJhY2tlcikgIT0gbnVsbCk7CiAJCX0K
KwkJcmV0dXJuIHJlcG9ydEZsYWc7CiAJfQogCiAJcHVibGljIHZvaWQgcmVwb3J0RXhwbGljaXRD
bG9zaW5nKFByb2JsZW1SZXBvcnRlciBwcm9ibGVtUmVwb3J0ZXIpIHsKQEAgLTYxMSw0ICs2NjQs
MTIgQEAgcHVibGljIGNsYXNzIEZha2VkVHJhY2tpbmdWYXJpYWJsZSBleHRlbmRzIExvY2FsRGVj
bGFyYXRpb24gewogCQkJcHJvYmxlbVJlcG9ydGVyLmV4cGxpY2l0bHlDbG9zZWRBdXRvQ2xvc2Vh
YmxlKHRoaXMpOwogCQl9CiAJfQorCisJcHVibGljIHZvaWQgcmVzZXRSZXBvcnRpbmdCaXRzKCkg
eworCQlGYWtlZFRyYWNraW5nVmFyaWFibGUgY3VycmVudCA9IHRoaXM7CisJCXdoaWxlIChjdXJy
ZW50ICE9IG51bGwpIHsKKwkJCWN1cnJlbnQuZ2xvYmFsQ2xvc2luZ1N0YXRlICY9IH4oUkVQT1JU
RURfUE9URU5USUFMX0xFQUt8UkVQT1JURURfREVGSU5JVElWRV9MRUFLKTsKKwkJCWN1cnJlbnQg
PSBjdXJyZW50LmlubmVyVHJhY2tlcjsKKwkJfQorCX0KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9h
c3QvU2luZ2xlTmFtZVJlZmVyZW5jZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9TaW5nbGVOYW1lUmVmZXJl
bmNlLmphdmEKaW5kZXggNDEzODVjMS4uZDYyNWQ1YiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9T
aW5nbGVOYW1lUmVmZXJlbmNlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9TaW5nbGVOYW1lUmVmZXJl
bmNlLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29w
eXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29w
eXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxs
IHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVy
aWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBz
ZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1
dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CbG9j
a1Njb3BlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Jsb2NrU2NvcGUuamF2YQppbmRleCA3MDYyYTlj
Li4yNGFkOTFmIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Jsb2NrU2NvcGUuamF2YQorKysg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvbG9va3VwL0Jsb2NrU2NvcGUuamF2YQpAQCAtMTAwNiwxMyArMTAwNiwxMCBAQCBw
dWJsaWMgdm9pZCBjaGVja1VuY2xvc2VkQ2xvc2VhYmxlcyhGbG93SW5mbyBmbG93SW5mbywgQVNU
Tm9kZSBsb2NhdGlvbiwgQmxvY2tTYwogCX0KIAlpZiAobG9jYXRpb24gIT0gbnVsbCAmJiBmbG93
SW5mby5yZWFjaE1vZGUoKSAhPSAwKSByZXR1cm47CiAJU2V0IHZhclNldCA9IG5ldyBIYXNoU2V0
KHRoaXMudHJhY2tpbmdWYXJpYWJsZXMpOwotCXdoaWxlICghdmFyU2V0LmlzRW1wdHkoKSkgewot
CQkvLyBwaWNrIG9uZSBvdXRlci1tb3N0IHZhcmlhYmxlIGZyb20gdGhlIHNldAotCQlGYWtlZFRy
YWNraW5nVmFyaWFibGUgdHJhY2tpbmdWYXIgPSAoRmFrZWRUcmFja2luZ1ZhcmlhYmxlKSB2YXJT
ZXQuaXRlcmF0b3IoKS5uZXh0KCk7Ci0JCXdoaWxlICh0cmFja2luZ1Zhci5vdXRlclRyYWNrZXIg
IT0gbnVsbCAmJiB2YXJTZXQuY29udGFpbnModHJhY2tpbmdWYXIub3V0ZXJUcmFja2VyKSkgewot
CQkJdHJhY2tpbmdWYXIgPSB0cmFja2luZ1Zhci5vdXRlclRyYWNrZXI7Ci0JCX0KLQkJdmFyU2V0
LnJlbW92ZSh0cmFja2luZ1Zhcik7CisJRmFrZWRUcmFja2luZ1ZhcmlhYmxlIHRyYWNraW5nVmFy
OworCS8vIHBpY2sgb25lIG91dGVyLW1vc3QgdmFyaWFibGUgZnJvbSB0aGUgc2V0IGF0IGEgdGlt
ZQorCXdoaWxlICgodHJhY2tpbmdWYXIgPSBGYWtlZFRyYWNraW5nVmFyaWFibGUucGlja1ZhckZv
clJlcG9ydGluZyh2YXJTZXQsIHRoaXMsIGxvY2F0aW9uICE9IG51bGwpKSAhPSBudWxsKSB7CisK
IAkJaWYgKGxvY2F0aW9uICE9IG51bGwgJiYgdHJhY2tpbmdWYXIub3JpZ2luYWxCaW5kaW5nICE9
IG51bGwgJiYgZmxvd0luZm8uaXNEZWZpbml0ZWx5TnVsbCh0cmFja2luZ1Zhci5vcmlnaW5hbEJp
bmRpbmcpKQogCQkJY29udGludWU7IC8vIHJlcG9ydGluZyBhZ2FpbnN0IGEgc3BlY2lmaWMgbG9j
YXRpb24sIHJlc291cmNlIGlzIG51bGwgYXQgdGhpcyBmbG93LCBkb24ndCBjb21wbGFpbgogCQkK
QEAgLTEwMjcsNyArMTAyNCw3IEBAIHB1YmxpYyB2b2lkIGNoZWNrVW5jbG9zZWRDbG9zZWFibGVz
KEZsb3dJbmZvIGZsb3dJbmZvLCBBU1ROb2RlIGxvY2F0aW9uLCBCbG9ja1NjCiAJCWlmIChsb2Nh
dGlvbiA9PSBudWxsKSAvLyBhdCBlbmQgb2YgYmxvY2sgYW5kIG5vdCBkZWZpbml0ZWx5IHVuY2xv
c2VkCiAJCXsKIAkJCS8vIHByb2JsZW1zIGF0IHNwZWNpZmljIGxvY2F0aW9uczogbWVkaXVtIHBy
aW9yaXR5Ci0JCQlpZiAodHJhY2tpbmdWYXIucmVwb3J0UmVjb3JkZWRFcnJvcnModGhpcykpIC8v
IC4uLiByZXBvcnQgcHJldmlvdXNseSByZWNvcmRlZCBlcnJvcnMKKwkJCWlmICh0cmFja2luZ1Zh
ci5yZXBvcnRSZWNvcmRlZEVycm9ycyh0aGlzLCBzdGF0dXMpKSAvLyAuLi4gcmVwb3J0IHByZXZp
b3VzbHkgcmVjb3JkZWQgZXJyb3JzCiAJCQkJY29udGludWU7CiAJCX0gCiAJCWlmIChzdGF0dXMg
PT0gRmxvd0luZm8uUE9URU5USUFMTFlfTlVMTCkgewpAQCAtMTA0NCw2ICsxMDQxLDEyIEBAIHB1
YmxpYyB2b2lkIGNoZWNrVW5jbG9zZWRDbG9zZWFibGVzKEZsb3dJbmZvIGZsb3dJbmZvLCBBU1RO
b2RlIGxvY2F0aW9uLCBCbG9ja1NjCiAJCWZvciAoaW50IGk9MDsgaTx0aGlzLmxvY2FsSW5kZXg7
IGkrKykKIAkJCXRoaXMubG9jYWxzW2ldLmNsb3NlVHJhY2tlciA9IG51bGw7CQkKIAkJdGhpcy50
cmFja2luZ1ZhcmlhYmxlcyA9IG51bGw7CisJfSBlbHNlIHsKKwkJaW50IHNpemUgPSB0aGlzLnRy
YWNraW5nVmFyaWFibGVzLnNpemUoKTsKKwkJZm9yIChpbnQgaT0wOyBpPHNpemU7IGkrKykgewor
CQkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlIHRyYWNrZXIgPSAoRmFrZWRUcmFja2luZ1ZhcmlhYmxl
KSB0aGlzLnRyYWNraW5nVmFyaWFibGVzLmdldCgwKTsKKwkJCXRyYWNrZXIucmVzZXRSZXBvcnRp
bmdCaXRzKCk7CisJCX0KIAl9CiB9CiAK
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>209460</attachid>
            <date>2012-01-13 11:04:00 -0500</date>
            <delta_ts>2012-01-13 16:17:57 -0500</delta_ts>
            <desc>incremental changes 6</desc>
            <filename>Bug_358903_v0.9.6-update6.patch</filename>
            <type>text/plain</type>
            <size>7410</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Jlc291cmNlTGVha1Rl
c3RzLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9SZXNvdXJjZUxlYWtUZXN0
cy5qYXZhCmluZGV4IDFkZmI4M2MuLmQwNzg2Y2EgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21w
aWxlci9yZWdyZXNzaW9uL1Jlc291cmNlTGVha1Rlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vUmVzb3VyY2VMZWFrVGVzdHMuamF2YQpAQCAtMjcwMiwyMSArMjcw
MiwyMSBAQCBwdWJsaWMgdm9pZCB0ZXN0MDYzYSgpIHRocm93cyBJT0V4Y2VwdGlvbiB7CiAJCQki
ICAgIH1cbiIgKwogCQkJIn1cbiIKIAkJfSwKLQkJIi0tLS0tLS0tLS1cbiIgKwotCQkiMS4gRVJS
T1IgaW4gWC5qYXZhIChhdCBsaW5lIDgpXG4iICsKLQkJIglCdWZmZXJlZElucHV0U3RyZWFtIGJp
cyA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKHN0cmVhbSk7IC8vIG5ldmVyIHNpbmNlIHJlYXNz
aWduZWRcbiIgKwotCQkiCSAgICAgICAgICAgICAgICAgICAgXl5eXG4iICsKLQkJIlJlc291cmNl
IGxlYWs6IFwnYmlzXCcgaXMgbmV2ZXIgY2xvc2VkXG4iICsKLQkJIi0tLS0tLS0tLS1cbiIgKwot
CQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDkpXG4iICsKLQkJIglGaWxlSW5wdXRTdHJl
YW0gc3RyZWFtMiA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSk7IC8vIHVuc3VyZSBzaW5jZSBw
YXNzZWQgdG8gbWV0aG9kXG4iICsKLQkJIgkgICAgICAgICAgICAgICAgXl5eXl5eXlxuIiArCi0J
CSJQb3RlbnRpYWwgcmVzb3VyY2UgbGVhazogXCdzdHJlYW0yXCcgbWF5IG5vdCBiZSBjbG9zZWRc
biIgKwotCQkiLS0tLS0tLS0tLVxuIiArCi0JCSIzLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUg
MTApXG4iICsKLQkJIgliaXMgPSBnZXRSZWFkZXIoc3RyZWFtMik7IC8vIHVuc3VyZSBzaW5jZSBv
YnRhaW5lZCBmcm9tIG1ldGhvZFxuIiArCi0JCSIJXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXG4i
ICsKLQkJIlBvdGVudGlhbCByZXNvdXJjZSBsZWFrOiBcJ2Jpc1wnIG1heSBub3QgYmUgY2xvc2Vk
XG4iICsKKwkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGlu
ZSA3KVxuIiArIAorCQkiCUZpbGVJbnB1dFN0cmVhbSBzdHJlYW0gPSBuZXcgRmlsZUlucHV0U3Ry
ZWFtKGZpbGUpO1xuIiArIAorCQkiCSAgICAgICAgICAgICAgICBeXl5eXl5cbiIgKyAKKwkJIlJl
c291cmNlIGxlYWs6IFwnc3RyZWFtXCcgaXMgbmV2ZXIgY2xvc2VkXG4iICsgCisJCSItLS0tLS0t
LS0tXG4iICsgCisJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgOSlcbiIgKyAKKwkJIglG
aWxlSW5wdXRTdHJlYW0gc3RyZWFtMiA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSk7IC8vIHVu
c3VyZSBzaW5jZSBwYXNzZWQgdG8gbWV0aG9kXG4iICsgCisJCSIJICAgICAgICAgICAgICAgIF5e
Xl5eXl5cbiIgKyAKKwkJIlBvdGVudGlhbCByZXNvdXJjZSBsZWFrOiBcJ3N0cmVhbTJcJyBtYXkg
bm90IGJlIGNsb3NlZFxuIiArIAorCQkiLS0tLS0tLS0tLVxuIiArIAorCQkiMy4gRVJST1IgaW4g
WC5qYXZhIChhdCBsaW5lIDEwKVxuIiArIAorCQkiCWJpcyA9IGdldFJlYWRlcihzdHJlYW0yKTsg
Ly8gdW5zdXJlIHNpbmNlIG9idGFpbmVkIGZyb20gbWV0aG9kXG4iICsgCisJCSIJXl5eXl5eXl5e
Xl5eXl5eXl5eXl5eXl5eXG4iICsgCisJCSJQb3RlbnRpYWwgcmVzb3VyY2UgbGVhazogXCdiaXNc
JyBtYXkgbm90IGJlIGNsb3NlZFxuIiArIAogCQkiLS0tLS0tLS0tLVxuIiwKIAkJbnVsbCwKIAkJ
dHJ1ZSwKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQXNzaWdubWVudC5qYXZhIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Fz
dC9Bc3NpZ25tZW50LmphdmEKaW5kZXggZTMyOGYxMi4uZWExYWY3YiAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2FzdC9Bc3NpZ25tZW50LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Bc3NpZ25tZW50LmphdmEK
QEAgLTY0LDcgKzY0LDcgQEAgcHVibGljIEZsb3dJbmZvIGFuYWx5c2VDb2RlKEJsb2NrU2NvcGUg
Y3VycmVudFNjb3BlLCBGbG93Q29udGV4dCBmbG93Q29udGV4dCwgRmwKIAkJLnVuY29uZGl0aW9u
YWxJbml0cygpOwogCiAJaWYgKHNob3VsZEFuYWx5c2VSZXNvdXJjZSkKLQkJRmFrZWRUcmFja2lu
Z1ZhcmlhYmxlLmhhbmRsZVJlc291cmNlQXNzaWdubWVudChwcmVJbml0SW5mbywgZmxvd0luZm8s
IHRoaXMsIHRoaXMuZXhwcmVzc2lvbiwgbG9jYWwpOworCQlGYWtlZFRyYWNraW5nVmFyaWFibGUu
aGFuZGxlUmVzb3VyY2VBc3NpZ25tZW50KGN1cnJlbnRTY29wZSwgcHJlSW5pdEluZm8sIGZsb3dJ
bmZvLCB0aGlzLCB0aGlzLmV4cHJlc3Npb24sIGxvY2FsKTsKIAllbHNlCiAJCUZha2VkVHJhY2tp
bmdWYXJpYWJsZS5jbGVhblVwQWZ0ZXJBc3NpZ25tZW50KGN1cnJlbnRTY29wZSwgdGhpcy5saHMu
Yml0cywgdGhpcy5leHByZXNzaW9uKTsKIApkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9GYWtlZFRy
YWNraW5nVmFyaWFibGUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvRmFrZWRUcmFja2luZ1ZhcmlhYmxlLmph
dmEKaW5kZXggMGQyY2JlOS4uYjM5NDE5ZSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9GYWtlZFRy
YWNraW5nVmFyaWFibGUuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Zha2VkVHJhY2tpbmdWYXJpYWJs
ZS5qYXZhCkBAIC0yODQsNiArMjg0LDcgQEAgcHVibGljIGNsYXNzIEZha2VkVHJhY2tpbmdWYXJp
YWJsZSBleHRlbmRzIExvY2FsRGVjbGFyYXRpb24gewogCS8qKiAKIAkgKiBDaGVjayBpZiB0aGUg
cmhzIG9mIGFuIGFzc2lnbm1lbnQgb3IgbG9jYWwgZGVjbGFyYXRpb24gaXMgYW4gKEF1dG8pQ2xv
c2VhYmxlLgogCSAqIElmIHNvIGNyZWF0ZSBvciByZS11c2UgYSB0cmFja2luZyB2YXJpYWJsZSwg
YW5kIHdpcmUgYW5kIGluaXRpYWxpemUgZXZlcnl0aGluZy4KKwkgKiBAcGFyYW0gc2NvcGUgc2Nv
cGUgY29udGFpbmluZyB0aGUgYXNzaWdubWVudAogCSAqIEBwYXJhbSB1cHN0cmVhbUluZm8gaW5m
byB3aXRob3V0IGFuYWx5c2lzIG9mIHRoZSByaHMsIHVzZSB0aGlzIHRvIGRldGVybWluZSB0aGUg
c3RhdHVzIG9mIGEgcmVzb3VyY2UgYmVpbmcgZGlzY29ubmVjdGVkCiAJICogQHBhcmFtIGZsb3dJ
bmZvIGluZm8gd2l0aCBhbmFseXNpcyBvZiB0aGUgcmhzLCB1c2UgdGhpcyBmb3IgcmVjb3JkaW5n
IHJlc291cmNlIHN0YXR1cyBiZWNhdXNlIHRoaXMgd2lsbCBiZSBwYXNzZWQgZG93bnN0cmVhbQog
CSAqIEBwYXJhbSBsb2NhdGlvbiB3aGVyZSB0byByZXBvcnQgd2Fybmlncy9lcnJvcnMgYWdhaW5z
dApAQCAtMjkxLDcgKzI5Miw3IEBAIHB1YmxpYyBjbGFzcyBGYWtlZFRyYWNraW5nVmFyaWFibGUg
ZXh0ZW5kcyBMb2NhbERlY2xhcmF0aW9uIHsKIAkgKgkJCVRoZSBjYWxsZXIgaGFzIGFscmVhZHkg
Y2hlY2tlZCB0aGF0IHRoZSByaHMgaXMgZWl0aGVyIG9mIGEgY2xvc2VhYmxlIHR5cGUgb3IgbnVs
bC4KIAkgKiBAcGFyYW0gbG9jYWwgdGhlIGxvY2FsIHZhcmlhYmxlIGludG8gd2hpY2ggdGhlIHJo
cyBpcyBiZWluZyBhc3NpZ25lZAogCSAqLwotCXB1YmxpYyBzdGF0aWMgdm9pZCBoYW5kbGVSZXNv
dXJjZUFzc2lnbm1lbnQoRmxvd0luZm8gdXBzdHJlYW1JbmZvLCBGbG93SW5mbyBmbG93SW5mbywg
QVNUTm9kZSBsb2NhdGlvbiwgRXhwcmVzc2lvbiByaHMsIExvY2FsVmFyaWFibGVCaW5kaW5nIGxv
Y2FsKQorCXB1YmxpYyBzdGF0aWMgdm9pZCBoYW5kbGVSZXNvdXJjZUFzc2lnbm1lbnQoQmxvY2tT
Y29wZSBzY29wZSwgRmxvd0luZm8gdXBzdHJlYW1JbmZvLCBGbG93SW5mbyBmbG93SW5mbywgQVNU
Tm9kZSBsb2NhdGlvbiwgRXhwcmVzc2lvbiByaHMsIExvY2FsVmFyaWFibGVCaW5kaW5nIGxvY2Fs
KQogCXsKIAkJLy8gZG9lcyB0aGUgTEhTIChsb2NhbCkgYWxyZWFkeSBoYXZlIGEgdHJhY2tlciwg
aW5kaWNhdGluZyB3ZSBtYXkgbGVhayBhIHJlc291cmNlIGJ5IHRoZSBhc3NpZ25tZW50PwogCQlG
YWtlZFRyYWNraW5nVmFyaWFibGUgcHJldmlvdXNUcmFja2VyID0gbnVsbDsKQEAgLTMzOCw5ICsz
MzksMTQgQEAgcHVibGljIGNsYXNzIEZha2VkVHJhY2tpbmdWYXJpYWJsZSBleHRlbmRzIExvY2Fs
RGVjbGFyYXRpb24gewogCQl9CiAKIAkJaWYgKGRpc2Nvbm5lY3RlZFRyYWNrZXIgIT0gbnVsbCkg
ewotCQkJaW50IHVwc3RyZWFtU3RhdHVzID0gdXBzdHJlYW1JbmZvLm51bGxTdGF0dXMoZGlzY29u
bmVjdGVkVHJhY2tlci5iaW5kaW5nKTsKLQkJCWlmICh1cHN0cmVhbVN0YXR1cyAhPSBGbG93SW5m
by5OT05fTlVMTCkKLQkJCQlkaXNjb25uZWN0ZWRUcmFja2VyLnJlY29yZEVycm9yTG9jYXRpb24o
bG9jYXRpb24sIHVwc3RyZWFtU3RhdHVzKTsKKwkJCWlmIChkaXNjb25uZWN0ZWRUcmFja2VyLmlu
bmVyVHJhY2tlciAhPSBudWxsICYmIGRpc2Nvbm5lY3RlZFRyYWNrZXIuaW5uZXJUcmFja2VyLmJp
bmRpbmcuZGVjbGFyaW5nU2NvcGUgPT0gc2NvcGUpIHsKKwkJCQlkaXNjb25uZWN0ZWRUcmFja2Vy
LmlubmVyVHJhY2tlci5vdXRlclRyYWNrZXIgPSBudWxsOworCQkJCXNjb3BlLnBydW5lV3JhcHBl
clRyYWNraW5nVmFyKGRpc2Nvbm5lY3RlZFRyYWNrZXIpOworCQkJfSBlbHNlIHsKKwkJCQlpbnQg
dXBzdHJlYW1TdGF0dXMgPSB1cHN0cmVhbUluZm8ubnVsbFN0YXR1cyhkaXNjb25uZWN0ZWRUcmFj
a2VyLmJpbmRpbmcpOworCQkJCWlmICh1cHN0cmVhbVN0YXR1cyAhPSBGbG93SW5mby5OT05fTlVM
TCkKKwkJCQkJZGlzY29ubmVjdGVkVHJhY2tlci5yZWNvcmRFcnJvckxvY2F0aW9uKGxvY2F0aW9u
LCB1cHN0cmVhbVN0YXR1cyk7CisJCQl9CiAJCX0KIAl9CiAJLyoqCmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L0xvY2FsRGVjbGFyYXRpb24uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTG9jYWxEZWNsYXJhdGlv
bi5qYXZhCmluZGV4IDIzOWVmMTUuLjkxODA4ZGIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTG9j
YWxEZWNsYXJhdGlvbi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTG9jYWxEZWNsYXJhdGlvbi5qYXZh
CkBAIC05MSw3ICs5MSw3IEBAIHB1YmxpYyBGbG93SW5mbyBhbmFseXNlQ29kZShCbG9ja1Njb3Bl
IGN1cnJlbnRTY29wZSwgRmxvd0NvbnRleHQgZmxvd0NvbnRleHQsIEZsCiAJCQkudW5jb25kaXRp
b25hbEluaXRzKCk7CiAKIAlpZiAoc2hvdWxkQW5hbHlzZVJlc291cmNlKQotCQlGYWtlZFRyYWNr
aW5nVmFyaWFibGUuaGFuZGxlUmVzb3VyY2VBc3NpZ25tZW50KHByZUluaXRJbmZvLCBmbG93SW5m
bywgdGhpcywgdGhpcy5pbml0aWFsaXphdGlvbiwgdGhpcy5iaW5kaW5nKTsKKwkJRmFrZWRUcmFj
a2luZ1ZhcmlhYmxlLmhhbmRsZVJlc291cmNlQXNzaWdubWVudChjdXJyZW50U2NvcGUsIHByZUlu
aXRJbmZvLCBmbG93SW5mbywgdGhpcywgdGhpcy5pbml0aWFsaXphdGlvbiwgdGhpcy5iaW5kaW5n
KTsKIAllbHNlCiAJCUZha2VkVHJhY2tpbmdWYXJpYWJsZS5jbGVhblVwQWZ0ZXJBc3NpZ25tZW50
KGN1cnJlbnRTY29wZSwgQmluZGluZy5MT0NBTCwgdGhpcy5pbml0aWFsaXphdGlvbik7CiAKZGlm
ZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9sb29rdXAvQmxvY2tTY29wZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9C
bG9ja1Njb3BlLmphdmEKaW5kZXggMjRhZDkxZi4uMzBjODE5OCAxMDA2NDQKLS0tIGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2xvb2t1cC9CbG9ja1Njb3BlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CbG9ja1Njb3BlLmph
dmEKQEAgLTk5Myw2ICs5OTMsMTAgQEAgcHVibGljIHZvaWQgcmVtb3ZlVHJhY2tpbmdWYXIoRmFr
ZWRUcmFja2luZ1ZhcmlhYmxlIHRyYWNraW5nVmFyaWFibGUpIHsKIAlpZiAodGhpcy5wYXJlbnQg
aW5zdGFuY2VvZiBCbG9ja1Njb3BlKQogCQkoKEJsb2NrU2NvcGUpdGhpcy5wYXJlbnQpLnJlbW92
ZVRyYWNraW5nVmFyKHRyYWNraW5nVmFyaWFibGUpOwogfQorLyoqIFVucmVnaXN0ZXIgYSB3cmFw
cGVyIHJlc291cmNlIHdpdGhvdXQgYWZmZWN0aW5nIGl0cyBpbm5lci4gKi8KK3B1YmxpYyB2b2lk
IHBydW5lV3JhcHBlclRyYWNraW5nVmFyKEZha2VkVHJhY2tpbmdWYXJpYWJsZSB0cmFja2luZ1Zh
cmlhYmxlKSB7CisJdGhpcy50cmFja2luZ1ZhcmlhYmxlcy5yZW1vdmUodHJhY2tpbmdWYXJpYWJs
ZSk7Cit9CiAvKioKICAqIEF0IHRoZSBlbmQgb2YgYSBibG9jayBjaGVjayB0aGUgY2xvc2luZy1z
dGF0dXMgb2YgYWxsIHRyYWNrZWQgY2xvc2VhYmxlcyB0aGF0IGFyZSBkZWNsYXJlZCBpbiB0aGlz
IGJsb2NrLgogICogQWxzbyBpbnZva2VkIHdoZW4gZW50ZXJpbmcgdW5yZWFjaGFibGUgY29kZS4K
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>209464</attachid>
            <date>2012-01-13 11:33:00 -0500</date>
            <delta_ts>2012-01-13 16:17:57 -0500</delta_ts>
            <desc>incremental change 7</desc>
            <filename>Bug_358903_v0.9.6-update7.patch</filename>
            <type>text/plain</type>
            <size>3952</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvRmFrZWRUcmFja2luZ1ZhcmlhYmxlLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L0Zha2VkVHJhY2tpbmdWYXJpYWJsZS5qYXZhCmluZGV4IGIzOTQxOWUuLjdjMjEyMWUg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvRmFrZWRUcmFja2luZ1ZhcmlhYmxlLmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2FzdC9GYWtlZFRyYWNraW5nVmFyaWFibGUuamF2YQpAQCAtMjAyLDYgKzIwMiw3IEBA
IHB1YmxpYyBjbGFzcyBGYWtlZFRyYWNraW5nVmFyaWFibGUgZXh0ZW5kcyBMb2NhbERlY2xhcmF0
aW9uIHsKIAkJCQlhbGxvY2F0aW9uLmNsb3NlVHJhY2tlciA9IG51bGw7CiAJCQl9CiAJCX0gZWxz
ZSBpZiAoKChSZWZlcmVuY2VCaW5kaW5nKWFsbG9jYXRpb24ucmVzb2x2ZWRUeXBlKS5oYXNUeXBl
Qml0KFR5cGVJZHMuQml0V3JhcHBlckNsb3NlYWJsZSkpIHsKKwkJCWJvb2xlYW4gaXNXcmFwcGVy
ID0gdHJ1ZTsKIAkJCWlmIChhbGxvY2F0aW9uLmFyZ3VtZW50cyAhPSBudWxsICYmICBhbGxvY2F0
aW9uLmFyZ3VtZW50cy5sZW5ndGggPiAwKSB7CiAJCQkJLy8gZmluZCB0aGUgd3JhcHBlZCByZXNv
dXJjZSByZXByZXNlbnRlZCBieSBpdHMgdHJhY2tpbmcgdmFyOgogCQkJCUZha2VkVHJhY2tpbmdW
YXJpYWJsZSBpbm5lclRyYWNrZXIgPSBmaW5kQ2xvc2VUcmFja2VyKHNjb3BlLCBmbG93SW5mbywg
YWxsb2NhdGlvbiwgYWxsb2NhdGlvbi5hcmd1bWVudHNbMF0pOwpAQCAtMjMxLDI4ICsyMzIsNDQg
QEAgcHVibGljIGNsYXNzIEZha2VkVHJhY2tpbmdWYXJpYWJsZSBleHRlbmRzIExvY2FsRGVjbGFy
YXRpb24gewogCQkJCQkJCWN1cnJlbnRUcmFja2VyID0gY3VycmVudFRyYWNrZXIuaW5uZXJUcmFj
a2VyOwogCQkJCQkJfQogCQkJCQl9Ci0JCQkJCXJldHVybjsgLy8ga2VlcCBjaGFpbmluZyB3cmFw
cGVyCisJCQkJCXJldHVybjsgLy8ga2VlcCBjaGFpbmluZyB3cmFwcGVyIChieSBhdm9pZGluZyB0
byBmYWxsIHRocm91Z2ggdG8gcmVtb3ZlVHJhY2tpbmdWYXIgYmVsb3cpCisJCQkJfSBlbHNlIHsK
KwkJCQkJaWYgKCFpc0FueUNsb3NlYWJsZShhbGxvY2F0aW9uLmFyZ3VtZW50c1swXS5yZXNvbHZl
ZFR5cGUpKSB7CisJCQkJCQlpc1dyYXBwZXIgPSBmYWxzZTsgLy8gYXJndW1lbnQgaXMgbm90IGNs
b3NlYWJsZQorCQkJCQl9CiAJCQkJfQorCQkJfSBlbHNlIHsKKwkJCQlpc1dyYXBwZXIgPSBmYWxz
ZTsgLy8gbm8gYXJndW1lbnQKIAkJCX0KLQkJCS8vIHJlbW92ZSB1bm5lY2Vzc2FyeSBhdHRlbXB0
cyAod3JhcHBlciBoYXMgbm8gcmVsZXZhbnQgaW5uZXIpCi0JCQlpZiAoYWxsb2NhdGlvbi5jbG9z
ZVRyYWNrZXIgIT0gbnVsbCkgewotCQkJCXNjb3BlLnJlbW92ZVRyYWNraW5nVmFyKGFsbG9jYXRp
b24uY2xvc2VUcmFja2VyKTsKLQkJCQlhbGxvY2F0aW9uLmNsb3NlVHJhY2tlciA9IG51bGw7Ci0J
CQl9Ci0JCX0gZWxzZSB7IC8vIHJlZ3VsYXIgcmVzb3VyY2UKLQkJCUZha2VkVHJhY2tpbmdWYXJp
YWJsZSBwcmVzZXRUcmFja2VyID0gYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXI7Ci0JCQlpZiAocHJl
c2V0VHJhY2tlciAhPSBudWxsICYmIHByZXNldFRyYWNrZXIub3JpZ2luYWxCaW5kaW5nICE9IG51
bGwpIHsKLQkJCQlpbnQgY2xvc2VTdGF0dXMgPSBmbG93SW5mby5udWxsU3RhdHVzKHByZXNldFRy
YWNrZXIuYmluZGluZyk7Ci0JCQkJaWYgKGNsb3NlU3RhdHVzICE9IEZsb3dJbmZvLk5PTl9OVUxM
Ci0JCQkJCQkmJiBjbG9zZVN0YXR1cyAhPSBGbG93SW5mby5VTktOT1dOCi0JCQkJCQkmJiAhZmxv
d0luZm8uaXNEZWZpbml0ZWx5TnVsbChwcmVzZXRUcmFja2VyLm9yaWdpbmFsQmluZGluZykKLQkJ
CQkJCSYmICEocHJlc2V0VHJhY2tlci5jdXJyZW50QXNzaWdubWVudCBpbnN0YW5jZW9mIExvY2Fs
RGVjbGFyYXRpb24pKQotCQkJCQlhbGxvY2F0aW9uLmNsb3NlVHJhY2tlci5yZWNvcmRFcnJvckxv
Y2F0aW9uKHByZXNldFRyYWNrZXIuY3VycmVudEFzc2lnbm1lbnQsIGNsb3NlU3RhdHVzKTsKKwkJ
CS8vIHN1Y2Nlc3NmdWwgd3JhcHBlciBkZXRlY3Rpb24gaGFzIGV4aXRlZCBhYm92ZSwgbGV0J3Mg
c2VlIHdoeSB0aGF0IGZhaWxlZAorCQkJaWYgKGlzV3JhcHBlcikgeworCQkJCS8vIHJlbW92ZSB1
bm5lY2Vzc2FyeSBhdHRlbXB0cyAod3JhcHBlciBoYXMgbm8gcmVsZXZhbnQgaW5uZXIpCisJCQkJ
aWYgKGFsbG9jYXRpb24uY2xvc2VUcmFja2VyICE9IG51bGwpIHsKKwkJCQkJc2NvcGUucmVtb3Zl
VHJhY2tpbmdWYXIoYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIpOworCQkJCQlhbGxvY2F0aW9uLmNs
b3NlVHJhY2tlciA9IG51bGw7CisJCQkJfQogCQkJfSBlbHNlIHsKLQkJCQlhbGxvY2F0aW9uLmNs
b3NlVHJhY2tlciA9IG5ldyBGYWtlZFRyYWNraW5nVmFyaWFibGUoc2NvcGUsIGFsbG9jYXRpb24p
OyAvLyBubyBsb2NhbCBhdmFpbGFibGUsIGNsb3NlYWJsZSBpcyB1bmFzc2lnbmVkCisJCQkJLy8g
YWxsb2NhdGlvbiBkb2VzIG5vdCBwcm92aWRlIGEgcmVzb3VyY2UgYXMgdGhlIGZpcnN0IGFyZ3Vt
ZW50IC0+IGRvbid0IHRyZWF0IGFzIGEgd3JhcHBlcgorCQkJCWhhbmRsZVJlZ3VsYXJSZXNvdXJj
ZShzY29wZSwgZmxvd0luZm8sIGFsbG9jYXRpb24pOwogCQkJfQotCQkJZmxvd0luZm8ubWFya0Fz
RGVmaW5pdGVseU51bGwoYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIuYmluZGluZyk7CisJCX0gZWxz
ZSB7IC8vIHJlZ3VsYXIgcmVzb3VyY2UKKwkJCWhhbmRsZVJlZ3VsYXJSZXNvdXJjZShzY29wZSwg
Zmxvd0luZm8sIGFsbG9jYXRpb24pOworCQl9CisJfQorCisJcHJpdmF0ZSBzdGF0aWMgdm9pZCBo
YW5kbGVSZWd1bGFyUmVzb3VyY2UoQmxvY2tTY29wZSBzY29wZSwgRmxvd0luZm8gZmxvd0luZm8s
IEFsbG9jYXRpb25FeHByZXNzaW9uIGFsbG9jYXRpb24pIHsKKwkJRmFrZWRUcmFja2luZ1Zhcmlh
YmxlIHByZXNldFRyYWNrZXIgPSBhbGxvY2F0aW9uLmNsb3NlVHJhY2tlcjsKKwkJaWYgKHByZXNl
dFRyYWNrZXIgIT0gbnVsbCAmJiBwcmVzZXRUcmFja2VyLm9yaWdpbmFsQmluZGluZyAhPSBudWxs
KSB7CisJCQlpbnQgY2xvc2VTdGF0dXMgPSBmbG93SW5mby5udWxsU3RhdHVzKHByZXNldFRyYWNr
ZXIuYmluZGluZyk7CisJCQlpZiAoY2xvc2VTdGF0dXMgIT0gRmxvd0luZm8uTk9OX05VTEwKKwkJ
CQkJJiYgY2xvc2VTdGF0dXMgIT0gRmxvd0luZm8uVU5LTk9XTgorCQkJCQkmJiAhZmxvd0luZm8u
aXNEZWZpbml0ZWx5TnVsbChwcmVzZXRUcmFja2VyLm9yaWdpbmFsQmluZGluZykKKwkJCQkJJiYg
IShwcmVzZXRUcmFja2VyLmN1cnJlbnRBc3NpZ25tZW50IGluc3RhbmNlb2YgTG9jYWxEZWNsYXJh
dGlvbikpCisJCQkJYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIucmVjb3JkRXJyb3JMb2NhdGlvbihw
cmVzZXRUcmFja2VyLmN1cnJlbnRBc3NpZ25tZW50LCBjbG9zZVN0YXR1cyk7CisJCX0gZWxzZSB7
CisJCQlhbGxvY2F0aW9uLmNsb3NlVHJhY2tlciA9IG5ldyBGYWtlZFRyYWNraW5nVmFyaWFibGUo
c2NvcGUsIGFsbG9jYXRpb24pOyAvLyBubyBsb2NhbCBhdmFpbGFibGUsIGNsb3NlYWJsZSBpcyB1
bmFzc2lnbmVkCiAJCX0KKwkJZmxvd0luZm8ubWFya0FzRGVmaW5pdGVseU51bGwoYWxsb2NhdGlv
bi5jbG9zZVRyYWNrZXIuYmluZGluZyk7CiAJfQogCiAJLyoqIEZpbmQgYW4gZXhpc3RpbmcgdHJh
Y2tpbmcgdmFyaWFibGUgZm9yIHRoZSBhcmd1bWVudCBvZiBhbiBhbGxvY2F0aW9uIGZvciBhIHJl
c291cmNlIHdyYXBwZXIuICovCg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>209472</attachid>
            <date>2012-01-13 14:09:00 -0500</date>
            <delta_ts>2012-01-13 16:17:57 -0500</delta_ts>
            <desc>incremental changes 8</desc>
            <filename>Bug_358903_v0.9.6-update8.patch</filename>
            <type>text/plain</type>
            <size>18770</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL051bGxSZWZlcmVuY2VU
ZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9OdWxsUmVmZXJlbmNlVGVz
dC5qYXZhCmluZGV4IDBjOTMyNGMuLmUyNDM4OGYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21w
aWxlci9yZWdyZXNzaW9uL051bGxSZWZlcmVuY2VUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vTnVsbFJlZmVyZW5jZVRlc3QuamF2YQpAQCAtNjAyMCw2ICs2MDIw
LDcgQEAgcHVibGljIHZvaWQgdGVzdDA1NjFfdHJ5X2NhdGNoX3VuY2hlY2tlZF9leGNlcHRpb24o
KSB7CiBwdWJsaWMgdm9pZCB0ZXN0MDU2Ml90cnlfY2F0Y2hfdW5jaGVja2VkX2V4Y2VwdGlvbigp
IHsKIAlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwogCW9wdGlvbnMucHV0KENv
bXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0
aW9ucy5XQVJOSU5HKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9y
dFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5XQVJOSU5HKTsK
IAl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKIAkJdHJ1ZSwKIAkJbmV3IFN0cmluZ1tdIHsKQEAgLTYw
NDIsNyArNjA0Myw3IEBAIHB1YmxpYyB2b2lkIHRlc3QwNTYyX3RyeV9jYXRjaF91bmNoZWNrZWRf
ZXhjZXB0aW9uKCkgewogCQkJIjEuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDYpXG4iICsK
IAkJCSIJbyA9IG5ldyBMaW5lTnVtYmVyUmVhZGVyKG5ldyBGaWxlUmVhZGVyKFwiZHVtbXlcIikp
O1xuIiArCiAJCQkiCV5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXl5cbiIgKwotCQkJIlJlc291cmNlIGxlYWs6ICdvJyBpcyBuZXZlciBjbG9zZWRcbiIgKwor
CQkJIlBvdGVudGlhbCByZXNvdXJjZSBsZWFrOiBcJ29cJyBtYXkgbm90IGJlIGNsb3NlZFxuIiAr
CiAJCQkiLS0tLS0tLS0tLVxuIiArCiAJCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDgp
XG4iICsKIAkJCSIJby50b1N0cmluZygpO1xuIiArCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29t
cGlsZXIvcmVncmVzc2lvbi9SZXNvdXJjZUxlYWtUZXN0cy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBp
bGVyL3JlZ3Jlc3Npb24vUmVzb3VyY2VMZWFrVGVzdHMuamF2YQppbmRleCBkMDc4NmNhLi41MWQ1
ZTc0IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9SZXNvdXJjZUxl
YWtUZXN0cy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3Ny
Yy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Jlc291cmNl
TGVha1Rlc3RzLmphdmEKQEAgLTIxMTIsMTcgKzIxMTIsMTcgQEAgcHVibGljIHZvaWQgdGVzdDA2
MWYyKCkgdGhyb3dzIElPRXhjZXB0aW9uIHsKIAkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlv
bjtcbiIgKwogCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwogCQkJIiAgICB2b2lkIHpvcmsoKSB0
aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCi0JCQkiCQl0cnkge1xuIiArIAotCQkJIgkJCU91dHB1
dFN0cmVhbSBvcyA9IG51bGw7XG4iICsgCi0JCQkiCQkJdHJ5IHtcbiIgKyAKLQkJCSIJCQkJb3Mg
PSBuZXcgQnVmZmVyZWRPdXRwdXRTdHJlYW0obmV3IEZpbGVPdXRwdXRTdHJlYW0oXCJzb21lZmls
ZVwiKSk7XG4iICsgCi0JCQkiCQkJCVN0cmluZyBleHRlcm5hbEZvcm0gPSBcImV4dGVybmFsUGF0
aFwiO1xuIiArIAotCQkJIgkJCX0gZmluYWxseSB7XG4iICsgCi0JCQkiCQkJCWlmIChvcyAhPSBu
dWxsKVxuIiArIAotCQkJIgkJCQkJb3MuY2xvc2UoKTtcbiIgKyAKLQkJCSIJCQl9XG4iICsgCi0J
CQkiCQl9IGNhdGNoIChJT0V4Y2VwdGlvbiBlKSB7XG4iICsgCi0JCQkiCQkJZS5wcmludFN0YWNr
VHJhY2UoKTtcbiIgKyAKKwkJCSIJCXRyeSB7XG4iICsKKwkJCSIJCQlPdXRwdXRTdHJlYW0gb3Mg
PSBudWxsO1xuIiArCisJCQkiCQkJdHJ5IHtcbiIgKworCQkJIgkJCQlvcyA9IG5ldyBCdWZmZXJl
ZE91dHB1dFN0cmVhbShuZXcgRmlsZU91dHB1dFN0cmVhbShcInNvbWVmaWxlXCIpKTtcbiIgKwor
CQkJIgkJCQlTdHJpbmcgZXh0ZXJuYWxGb3JtID0gXCJleHRlcm5hbFBhdGhcIjtcbiIgKworCQkJ
IgkJCX0gZmluYWxseSB7XG4iICsKKwkJCSIJCQkJaWYgKG9zICE9IG51bGwpXG4iICsKKwkJCSIJ
CQkJCW9zLmNsb3NlKCk7XG4iICsKKwkJCSIJCQl9XG4iICsKKwkJCSIJCX0gY2F0Y2ggKElPRXhj
ZXB0aW9uIGUpIHtcbiIgKworCQkJIgkJCWUucHJpbnRTdGFja1RyYWNlKCk7XG4iICsKIAkJCSIJ
CX1cbiIgKwogCQkJIiAgICB9XG4iICsKIAkJCSJ9XG4iCkBAIC0yMTUwLDI1ICsyMTUwLDI1IEBA
IHB1YmxpYyB2b2lkIHRlc3QwNjFmMygpIHRocm93cyBJT0V4Y2VwdGlvbiB7CiAJCQkiaW1wb3J0
IGphdmEuaW8uSW5wdXRTdHJlYW07XG4iICsKIAkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJlZElu
cHV0U3RyZWFtO1xuIiArCiAJCQkicHVibGljIGNsYXNzIFgge1xuIiArCi0JCQkiICAgIFN0cmlu
ZyBsb2FkUHJvZmlsZShGaWxlIHByb2ZpbGVGaWxlKSB7XG4iICsgCi0JCQkiCQl0cnkge1xuIiAr
IAotCQkJIgkJCUlucHV0U3RyZWFtIHN0cmVhbSA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKG5l
dyBGaWxlSW5wdXRTdHJlYW0ocHJvZmlsZUZpbGUpKTtcbiIgKyAKLQkJCSIJCQlyZXR1cm4gbG9h
ZFByb2ZpbGUoc3RyZWFtKTtcbiIgKyAKLQkJCSIJCX0gY2F0Y2ggKEZpbGVOb3RGb3VuZEV4Y2Vw
dGlvbiBlKSB7XG4iICsgCi0JCQkiCQkJLy9udWxsXG4iICsgCi0JCQkiCQl9XG4iICsgCi0JCQki
CQlyZXR1cm4gbnVsbDtcbiIgKyAKLQkJCSIJfVxuIiArIAotCQkJIglwcml2YXRlIFN0cmluZyBs
b2FkUHJvZmlsZShJbnB1dFN0cmVhbSBzdHJlYW0pIHtcbiIgKyAKLQkJCSIJCXJldHVybiBudWxs
O1xuIiArIAorCQkJIiAgICBTdHJpbmcgbG9hZFByb2ZpbGUoRmlsZSBwcm9maWxlRmlsZSkge1xu
IiArCisJCQkiCQl0cnkge1xuIiArCisJCQkiCQkJSW5wdXRTdHJlYW0gc3RyZWFtID0gbmV3IEJ1
ZmZlcmVkSW5wdXRTdHJlYW0obmV3IEZpbGVJbnB1dFN0cmVhbShwcm9maWxlRmlsZSkpO1xuIiAr
CisJCQkiCQkJcmV0dXJuIGxvYWRQcm9maWxlKHN0cmVhbSk7XG4iICsKKwkJCSIJCX0gY2F0Y2gg
KEZpbGVOb3RGb3VuZEV4Y2VwdGlvbiBlKSB7XG4iICsKKwkJCSIJCQkvL251bGxcbiIgKworCQkJ
IgkJfVxuIiArCisJCQkiCQlyZXR1cm4gbnVsbDtcbiIgKworCQkJIgl9XG4iICsKKwkJCSIJcHJp
dmF0ZSBTdHJpbmcgbG9hZFByb2ZpbGUoSW5wdXRTdHJlYW0gc3RyZWFtKSB7XG4iICsKKwkJCSIJ
CXJldHVybiBudWxsO1xuIiArCiAJCQkiCX1cbiIgKwogCQkJIn1cbiIKIAkJfSwKLQkJIi0tLS0t
LS0tLS1cbiIgKyAKLQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxMClcbiIgKyAKLQkJ
IglyZXR1cm4gbG9hZFByb2ZpbGUoc3RyZWFtKTtcbiIgKyAKLQkJIgleXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXl5cbiIgKyAKLQkJIlBvdGVudGlhbCByZXNvdXJjZSBsZWFrOiBcJ3N0cmVhbVwn
IG1heSBub3QgYmUgY2xvc2VkIGF0IHRoaXMgbG9jYXRpb25cbiIgKyAKKwkJIi0tLS0tLS0tLS1c
biIgKworCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDEwKVxuIiArCisJCSIJcmV0dXJu
IGxvYWRQcm9maWxlKHN0cmVhbSk7XG4iICsKKwkJIgleXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5cbiIgKworCQkiUG90ZW50aWFsIHJlc291cmNlIGxlYWs6IFwnc3RyZWFtXCcgbWF5IG5vdCBi
ZSBjbG9zZWQgYXQgdGhpcyBsb2NhdGlvblxuIiArCiAJCSItLS0tLS0tLS0tXG4iLAogCQludWxs
LAogCQl0cnVlLApAQCAtMjQ4NywxMSArMjQ4NywxMSBAQCBwdWJsaWMgdm9pZCB0ZXN0MDYxbigp
IHsKIAkJCSIgICAgfVxuIiArCiAJCQkifVxuIgogCQl9LAotCQkiLS0tLS0tLS0tLVxuIiArIAot
CQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDUpXG4iICsgCi0JCSIJUHJpbnRXcml0ZXIg
d3JpdGVyID0gbmV3IFByaW50V3JpdGVyKFwiZmlsZW5hbWVcIik7XG4iICsgCi0JCSIJICAgICAg
ICAgICAgXl5eXl5eXG4iICsgCi0JCSJSZXNvdXJjZSBsZWFrOiBcJ3dyaXRlclwnIGlzIG5ldmVy
IGNsb3NlZFxuIiArIAorCQkiLS0tLS0tLS0tLVxuIiArCisJCSIxLiBFUlJPUiBpbiBYLmphdmEg
KGF0IGxpbmUgNSlcbiIgKworCQkiCVByaW50V3JpdGVyIHdyaXRlciA9IG5ldyBQcmludFdyaXRl
cihcImZpbGVuYW1lXCIpO1xuIiArCisJCSIJICAgICAgICAgICAgXl5eXl5eXG4iICsKKwkJIlJl
c291cmNlIGxlYWs6IFwnd3JpdGVyXCcgaXMgbmV2ZXIgY2xvc2VkXG4iICsKIAkJIi0tLS0tLS0t
LS1cbiIsCiAJCW51bGwsCiAJCXRydWUsCkBAIC0yNTExLDE1ICsyNTExLDE1IEBAIHB1YmxpYyB2
b2lkIHRlc3QwNjFvKCkgewogCQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJlYW07
XG4iICsKIAkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKwogCQkJInB1YmxpYyBj
bGFzcyBYIHtcbiIgKwotCQkJIiAgICB2b2lkIGZvbyhib29sZWFuIGJhcikgdGhyb3dzIElPRXhj
ZXB0aW9uIHtcbiIgKyAKLQkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZp
bFwiKTtcbiIgKyAKLQkJCSIgICAgICAgIEZpbGVJbnB1dFN0cmVhbSBmaWxlU3RyZWFtICA9IG5l
dyBGaWxlSW5wdXRTdHJlYW0oZmlsZSk7XG4iICsgCi0JCQkiICAgICAgICBCdWZmZXJlZElucHV0
U3RyZWFtIGJpcyA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGZpbGVTdHJlYW0pOyAgIFxuIiAr
IAotCQkJIiAgICAgICAgaWYgKGJhcikge1xuIiArIAotCQkJIiAgICAgICAgICAgIEJ1ZmZlcmVk
SW5wdXRTdHJlYW0gZG91YmxlV3JhcCA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGJpcyk7XG4i
ICsgCi0JCQkiICAgICAgICAgICAgZG91YmxlV3JhcC5jbG9zZSgpO1xuIiArIAotCQkJIiAgICAg
ICAgfVxuIiArIAotCQkJIiAgICB9XG4iICsgCisJCQkiICAgIHZvaWQgZm9vKGJvb2xlYW4gYmFy
KSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcg
RmlsZShcInNvbWVmaWxcIik7XG4iICsKKwkJCSIgICAgICAgIEZpbGVJbnB1dFN0cmVhbSBmaWxl
U3RyZWFtICA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSk7XG4iICsKKwkJCSIgICAgICAgIEJ1
ZmZlcmVkSW5wdXRTdHJlYW0gYmlzID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oZmlsZVN0cmVh
bSk7ICAgXG4iICsKKwkJCSIgICAgICAgIGlmIChiYXIpIHtcbiIgKworCQkJIiAgICAgICAgICAg
IEJ1ZmZlcmVkSW5wdXRTdHJlYW0gZG91YmxlV3JhcCA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFt
KGJpcyk7XG4iICsKKwkJCSIgICAgICAgICAgICBkb3VibGVXcmFwLmNsb3NlKCk7XG4iICsKKwkJ
CSIgICAgICAgIH1cbiIgKworCQkJIiAgICB9XG4iICsKIAkJCSJ9XG4iCiAJCX0sCiAJCSItLS0t
LS0tLS0tXG4iICsKQEAgLTI1NDcsMTMgKzI1NDcsMTMgQEAgcHVibGljIHZvaWQgdGVzdDA2MWY0
KCkgdGhyb3dzIElPRXhjZXB0aW9uIHsKIAkJCSJpbXBvcnQgamF2YS5pby5JbnB1dFN0cmVhbTtc
biIgKwogCQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJlYW07XG4iICsKIAkJCSJw
dWJsaWMgY2xhc3MgWCB7XG4iICsKLQkJCSIgICAgCXZvaWQgZm9vKEZpbGUgbG9jYXRpb24sIFN0
cmluZyBhZHZpY2VGaWxlUGF0aCkgdGhyb3dzIEZpbGVOb3RGb3VuZEV4Y2VwdGlvbiB7XG4iICsg
Ci0JCQkiCQlJbnB1dFN0cmVhbSBzdHJlYW0gPSBudWxsO1xuIiArIAotCQkJIgkJaWYgKGxvY2F0
aW9uLmlzRGlyZWN0b3J5KCkpIHtcbiIgKyAKLQkJCSIJCQlGaWxlIGFkdmljZUZpbGUgPSBuZXcg
RmlsZShsb2NhdGlvbiwgYWR2aWNlRmlsZVBhdGgpO1xuIiArIAotCQkJIgkJCXN0cmVhbSA9IG5l
dyBCdWZmZXJlZElucHV0U3RyZWFtKG5ldyBGaWxlSW5wdXRTdHJlYW0oYWR2aWNlRmlsZSkpO1xu
IiArIAotCQkJIgkJfVxuIiArIAotCQkJIgl9XG4iICsgCisJCQkiICAgIAl2b2lkIGZvbyhGaWxl
IGxvY2F0aW9uLCBTdHJpbmcgYWR2aWNlRmlsZVBhdGgpIHRocm93cyBGaWxlTm90Rm91bmRFeGNl
cHRpb24ge1xuIiArCisJCQkiCQlJbnB1dFN0cmVhbSBzdHJlYW0gPSBudWxsO1xuIiArCisJCQki
CQlpZiAobG9jYXRpb24uaXNEaXJlY3RvcnkoKSkge1xuIiArCisJCQkiCQkJRmlsZSBhZHZpY2VG
aWxlID0gbmV3IEZpbGUobG9jYXRpb24sIGFkdmljZUZpbGVQYXRoKTtcbiIgKworCQkJIgkJCXN0
cmVhbSA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKG5ldyBGaWxlSW5wdXRTdHJlYW0oYWR2aWNl
RmlsZSkpO1xuIiArCisJCQkiCQl9XG4iICsKKwkJCSIJfVxuIiArCiAJCQkifVxuIgogCQl9LAog
CQkiLS0tLS0tLS0tLVxuIiArCkBAIC0yNTY2LDYgKzI1NjYsMTI4IEBAIHB1YmxpYyB2b2lkIHRl
c3QwNjFmNCgpIHRocm93cyBJT0V4Y2VwdGlvbiB7CiAJCXRydWUsCiAJCW9wdGlvbnMpOwogfQor
Ly8gQnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBs
ZWFrIHdhcm5pbmdzCisvLyBhIHQtdy1yIHdyYXBzIGFuIGV4aXN0aW5nIHJlc291cmNlCitwdWJs
aWMgdm9pZCB0ZXN0MDYxcCgpIHsKKwlpZiAodGhpcy5jb21wbGlhbmNlTGV2ZWwgPCBDbGFzc0Zp
bGVDb25zdGFudHMuSkRLMV83KSByZXR1cm47CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9w
dGlvbnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xv
c2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0KENvbXBp
bGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29t
cGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQluZXcgU3RyaW5n
W10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uUHJpbnRXcml0ZXI7XG4iICsK
KwkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJlZFdyaXRlcjtcbiIgKworCQkJImltcG9ydCBqYXZh
LmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICAg
IHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgUHJpbnRX
cml0ZXIgd3JpdGVyID0gbmV3IFByaW50V3JpdGVyKFwiZmlsZW5hbWVcIik7XG4iICsKKwkJCSIg
ICAgICAgIHRyeSAoQnVmZmVyZWRXcml0ZXIgYncgPSBuZXcgQnVmZmVyZWRXcml0ZXIod3JpdGVy
KSkge1xuIiArCisJCQkiICAgICAgICAgICAgYncud3JpdGUoMSk7XG4iICsKKwkJCSIgICAgICAg
IH1cbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSIiLAorCQludWxsLAor
CQl0cnVlLAorCQludWxsLAorCQlvcHRpb25zLAorCQludWxsKTsKK30KKy8vIEJ1ZyAzNTg5MDMg
LSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5ncwor
Ly8gYSB0LXctciBwb3RlbnRpYWxseSB3cmFwcyBhbiBleGlzdGluZyByZXNvdXJjZQorLy8gRElT
QUJMRUQsIGZhaWxzIGJlY2F1c2Ugd2UgY3VycmVudGx5IGRvbid0IGluY2x1ZGUgdC13LXIgbWFu
YWdlZCByZXNvdXJjZXMgaW4gdGhlIGFuYWx5c2lzCitwdWJsaWMgdm9pZCBfdGVzdDA2MXEoKSB7
CisJaWYgKHRoaXMuY29tcGxpYW5jZUxldmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfNykg
cmV0dXJuOworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5w
dXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGls
ZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1Jl
cG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7
CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwK
KwkJCSJpbXBvcnQgamF2YS5pby5QcmludFdyaXRlcjtcbiIgKworCQkJImltcG9ydCBqYXZhLmlv
LkJ1ZmZlcmVkV3JpdGVyO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4i
ICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28oYm9vbGVhbiBi
KSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBQcmludFdyaXRlciB3cml0
ZXIgPSBuZXcgUHJpbnRXcml0ZXIoXCJmaWxlbmFtZVwiKTtcbiIgKworCQkJIiAgICAgICAgaWYg
KGIpXG4iICsKKwkJCSIgICAgICAgICAgICB0cnkgKEJ1ZmZlcmVkV3JpdGVyIGJ3ID0gbmV3IEJ1
ZmZlcmVkV3JpdGVyKHdyaXRlcikpIHtcbiIgKworCQkJIiAgICAgICAgICAgICAgICBidy53cml0
ZSgxKTtcbiIgKworCQkJIiAgICAgICAgICAgIH1cbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9
XG4iCisJCX0sCisJCSItLS0tLS0tLS0tXG4iICsKKwkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQg
bGluZSA2KVxuIiArCisJCSIJUHJpbnRXcml0ZXIgd3JpdGVyID0gbmV3IFByaW50V3JpdGVyKFxc
XCJmaWxlbmFtZVxcXCIpO1xuIiArCisJCSIJXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXG4iICsKKwkJIlBvdGVudGlhbCByZXNvdXJjZSBsZWFr
OiBcJ3dyaXRlclwnIG1heSBub3QgYmUgY2xvc2VkXG4iICsKKwkJIi0tLS0tLS0tLS1cbiIsCisJ
CW51bGwsCisJCXRydWUsCisJCW9wdGlvbnMpOworfQorLy8gQnVnIDM1ODkwMyAtIEZpbHRlciBw
cmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCisvLyB0aGUgaW5u
ZXIgZnJvbSBhIHdyYXBwZXIgaXMgcmV0dXJuZWQKK3B1YmxpYyB2b2lkIHRlc3QwNjFyKCkgewor
CU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGls
ZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25z
LkVSUk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVu
dGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJdGhpcy5y
dW5Db25mb3JtVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9y
dCBqYXZhLmlvLkZpbGVJbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkZpbGU7
XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJlZElucHV0U3RyZWFtO1xuIiArCisJCQki
aW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4i
ICsKKwkJCSIgICAgRmlsZUlucHV0U3RyZWFtIGZvbygpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4i
ICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbFwiKTtcbiIgKwor
CQkJIiAgICAgICAgRmlsZUlucHV0U3RyZWFtIGZpbGVTdHJlYW0gID0gbmV3IEZpbGVJbnB1dFN0
cmVhbShmaWxlKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMgPSBu
ZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShmaWxlU3RyZWFtKTsgICBcbiIgKworCQkJIiAgICAgICAg
cmV0dXJuIGZpbGVTdHJlYW07XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCQl9LAor
CQkiIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJbnVsbCwKKwkJb3B0aW9ucywKKwkJbnVsbCk7Cit9
CisvLyBCdWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNl
IGxlYWsgd2FybmluZ3MKKy8vIGEgd3JhcHBlciBpcyBmb3Jnb3R0ZW4sIHRoZSBpbm5lciBpcyBj
bG9zZWQgYWZ0ZXJ3YXJkcworcHVibGljIHZvaWQgdGVzdDA2MXMoKSB7CisJTWFwIG9wdGlvbnMg
PSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BU
SU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCW9w
dGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3Nl
ZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0
KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRmls
ZUlucHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKworCQkJImlt
cG9ydCBqYXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5p
by5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICB2
b2lkIGZvbygpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZpbGUgZmls
ZSA9IG5ldyBGaWxlKFwic29tZWZpbFwiKTtcbiIgKworCQkJIiAgICAgICAgRmlsZUlucHV0U3Ry
ZWFtIGZpbGVTdHJlYW0gID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKTtcbiIgKworCQkJIiAg
ICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShm
aWxlU3RyZWFtKTtcbiIgKworCQkJIiAgICAgICAgYmlzID0gbnVsbDtcbiIgKworCQkJIiAgICAg
ICAgZmlsZVN0cmVhbS5jbG9zZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJ
fSwKKwkJIiIsCisJCW51bGwsCisJCXRydWUsCisJCW51bGwsCisJCW9wdGlvbnMsCisJCW51bGwp
OworfQogLy8gQnVnIDM2MjMzMSAtIFJlc291cmNlIGxlYWsgbm90IGRldGVjdGVkIHdoZW4gY2xv
c2VhYmxlIG5vdCBhc3NpZ25lZCB0byB2YXJpYWJsZQogLy8gYSByZXNvdXJjZSBpcyBuZXZlciBh
c3NpZ25lZAogcHVibGljIHZvaWQgdGVzdDA2MmEoKSB0aHJvd3MgSU9FeGNlcHRpb24gewpAQCAt
MjcwMiwyMSArMjgyNCwyMSBAQCBwdWJsaWMgdm9pZCB0ZXN0MDYzYSgpIHRocm93cyBJT0V4Y2Vw
dGlvbiB7CiAJCQkiICAgIH1cbiIgKwogCQkJIn1cbiIKIAkJfSwKLQkJIi0tLS0tLS0tLS1cbiIg
KyAKLQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA3KVxuIiArIAotCQkiCUZpbGVJbnB1
dFN0cmVhbSBzdHJlYW0gPSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpO1xuIiArIAotCQkiCSAg
ICAgICAgICAgICAgICBeXl5eXl5cbiIgKyAKLQkJIlJlc291cmNlIGxlYWs6IFwnc3RyZWFtXCcg
aXMgbmV2ZXIgY2xvc2VkXG4iICsgCi0JCSItLS0tLS0tLS0tXG4iICsgCi0JCSIyLiBFUlJPUiBp
biBYLmphdmEgKGF0IGxpbmUgOSlcbiIgKyAKLQkJIglGaWxlSW5wdXRTdHJlYW0gc3RyZWFtMiA9
IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSk7IC8vIHVuc3VyZSBzaW5jZSBwYXNzZWQgdG8gbWV0
aG9kXG4iICsgCi0JCSIJICAgICAgICAgICAgICAgIF5eXl5eXl5cbiIgKyAKLQkJIlBvdGVudGlh
bCByZXNvdXJjZSBsZWFrOiBcJ3N0cmVhbTJcJyBtYXkgbm90IGJlIGNsb3NlZFxuIiArIAotCQki
LS0tLS0tLS0tLVxuIiArIAotCQkiMy4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDEwKVxuIiAr
IAotCQkiCWJpcyA9IGdldFJlYWRlcihzdHJlYW0yKTsgLy8gdW5zdXJlIHNpbmNlIG9idGFpbmVk
IGZyb20gbWV0aG9kXG4iICsgCi0JCSIJXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXG4iICsgCi0J
CSJQb3RlbnRpYWwgcmVzb3VyY2UgbGVhazogXCdiaXNcJyBtYXkgbm90IGJlIGNsb3NlZFxuIiAr
IAorCQkiLS0tLS0tLS0tLVxuIiArCisJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNylc
biIgKworCQkiCUZpbGVJbnB1dFN0cmVhbSBzdHJlYW0gPSBuZXcgRmlsZUlucHV0U3RyZWFtKGZp
bGUpO1xuIiArCisJCSIJICAgICAgICAgICAgICAgIF5eXl5eXlxuIiArCisJCSJSZXNvdXJjZSBs
ZWFrOiBcJ3N0cmVhbVwnIGlzIG5ldmVyIGNsb3NlZFxuIiArCisJCSItLS0tLS0tLS0tXG4iICsK
KwkJIjIuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA5KVxuIiArCisJCSIJRmlsZUlucHV0U3Ry
ZWFtIHN0cmVhbTIgPSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpOyAvLyB1bnN1cmUgc2luY2Ug
cGFzc2VkIHRvIG1ldGhvZFxuIiArCisJCSIJICAgICAgICAgICAgICAgIF5eXl5eXl5cbiIgKwor
CQkiUG90ZW50aWFsIHJlc291cmNlIGxlYWs6IFwnc3RyZWFtMlwnIG1heSBub3QgYmUgY2xvc2Vk
XG4iICsKKwkJIi0tLS0tLS0tLS1cbiIgKworCQkiMy4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5l
IDEwKVxuIiArCisJCSIJYmlzID0gZ2V0UmVhZGVyKHN0cmVhbTIpOyAvLyB1bnN1cmUgc2luY2Ug
b2J0YWluZWQgZnJvbSBtZXRob2RcbiIgKworCQkiCV5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXlxu
IiArCisJCSJQb3RlbnRpYWwgcmVzb3VyY2UgbGVhazogXCdiaXNcJyBtYXkgbm90IGJlIGNsb3Nl
ZFxuIiArCiAJCSItLS0tLS0tLS0tXG4iLAogCQludWxsLAogCQl0cnVlLApkaWZmIC0tZ2l0IGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2FzdC9BbGxvY2F0aW9uRXhwcmVzc2lvbi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9BbGxvY2F0
aW9uRXhwcmVzc2lvbi5qYXZhCmluZGV4IGY1ZjlhYzEuLjA4Y2RmN2UgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9hc3QvQWxsb2NhdGlvbkV4cHJlc3Npb24uamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0FsbG9j
YXRpb25FeHByZXNzaW9uLmphdmEKQEAgLTQ2LDE0ICs0NiwxNSBAQCBwdWJsaWMgRmxvd0luZm8g
YW5hbHlzZUNvZGUoQmxvY2tTY29wZSBjdXJyZW50U2NvcGUsIEZsb3dDb250ZXh0IGZsb3dDb250
ZXh0LCBGbAogCiAJLy8gcHJvY2VzcyBhcmd1bWVudHMKIAlpZiAodGhpcy5hcmd1bWVudHMgIT0g
bnVsbCkgeworCQlib29sZWFuIGhhc1Jlc291cmNlV3JhcHBlclR5cGUgPSB0aGlzLnJlc29sdmVk
VHlwZSBpbnN0YW5jZW9mIFJlZmVyZW5jZUJpbmRpbmcgCisJCQkJJiYgKChSZWZlcmVuY2VCaW5k
aW5nKXRoaXMucmVzb2x2ZWRUeXBlKS5oYXNUeXBlQml0KFR5cGVJZHMuQml0V3JhcHBlckNsb3Nl
YWJsZSk7CiAJCWZvciAoaW50IGkgPSAwLCBjb3VudCA9IHRoaXMuYXJndW1lbnRzLmxlbmd0aDsg
aSA8IGNvdW50OyBpKyspIHsKIAkJCWZsb3dJbmZvID0KIAkJCQl0aGlzLmFyZ3VtZW50c1tpXQog
CQkJCQkuYW5hbHlzZUNvZGUoY3VycmVudFNjb3BlLCBmbG93Q29udGV4dCwgZmxvd0luZm8pCiAJ
CQkJCS51bmNvbmRpdGlvbmFsSW5pdHMoKTsKIAkJCS8vIGlmIGFyZ3VtZW50IGlzIGFuIEF1dG9D
bG9zZWFibGUgaW5zZXJ0IGluZm8gdGhhdCBpdCAqbWF5KiBiZSBjbG9zZWQgKGJ5IHRoZSB0YXJn
ZXQgbWV0aG9kLCBpLmUuKQotCQkJaWYgKCEodGhpcy5yZXNvbHZlZFR5cGUgaW5zdGFuY2VvZiBS
ZWZlcmVuY2VCaW5kaW5nIAotCQkJCQkmJiAoKFJlZmVyZW5jZUJpbmRpbmcpdGhpcy5yZXNvbHZl
ZFR5cGUpLmhhc1R5cGVCaXQoVHlwZUlkcy5CaXRXcmFwcGVyQ2xvc2VhYmxlKSkpIHsgLy8gYWxs
b2NhdGlvbiBvZiB3cmFwcGVkIGNsb3NlYWJsZXMgaXMgYW5hbHl6ZWQgc3BlY2lhbGx5CisJCQlp
ZiAoIWhhc1Jlc291cmNlV3JhcHBlclR5cGUpIHsgLy8gYWxsb2NhdGlvbiBvZiB3cmFwcGVkIGNs
b3NlYWJsZXMgaXMgYW5hbHl6ZWQgc3BlY2lhbGx5CiAJCQkJZmxvd0luZm8gPSBGYWtlZFRyYWNr
aW5nVmFyaWFibGUubWFya1Bhc3NlZFRvT3V0c2lkZShjdXJyZW50U2NvcGUsIHRoaXMuYXJndW1l
bnRzW2ldLCBmbG93SW5mbyk7CiAJCQl9CiAJCQlpZiAoKHRoaXMuYXJndW1lbnRzW2ldLmltcGxp
Y2l0Q29udmVyc2lvbiAmIFR5cGVJZHMuVU5CT1hJTkcpICE9IDApIHsKZGlmZiAtLWdpdCBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9hc3QvRmFrZWRUcmFja2luZ1ZhcmlhYmxlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Zha2VkVHJh
Y2tpbmdWYXJpYWJsZS5qYXZhCmluZGV4IDdjMjEyMWUuLjlmNTcwMGQgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9hc3QvRmFrZWRUcmFja2luZ1ZhcmlhYmxlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9GYWtl
ZFRyYWNraW5nVmFyaWFibGUuamF2YQpAQCAtMTY5LDYgKzE2OSw3IEBAIHB1YmxpYyBjbGFzcyBG
YWtlZFRyYWNraW5nVmFyaWFibGUgZXh0ZW5kcyBMb2NhbERlY2xhcmF0aW9uIHsKIAkgKiBAcGFy
YW0gbG9jYXRpb24gdGhlIGFzc2lnbm1lbnQvbG9jYWwgZGVjbGFyYXRpb24gYmVpbmcgYW5hbHl6
ZWQKIAkgKiBAcGFyYW0gbG9jYWwgdGhlIGxvY2FsIHZhcmlhYmxlIGJlaW5nIGFzc2lnbmVkIHRv
CiAJICogQHBhcmFtIHJocyB0aGUgcmhzIG9mIHRoZSBhc3NpZ25tZW50IHJlc3AuIHRoZSBpbml0
aWFsaXphdGlvbiBvZiB0aGUgbG9jYWwgdmFyaWFibGUgZGVjbGFyYXRpb24uCisJICogCQk8c3Ry
b25nPlByZWNvbmRpdGlvbjo8L3N0cm9uZz4gY2xpZW50IGhhcyBhbHJlYWR5IGNoZWNrZWQgdGhh
dCB0aGUgcmVzb2x2ZWQgdHlwZSBvZiB0aGlzIGV4cHJlc3Npb24gaXMgZWl0aGVyIGEgY2xvc2Vh
YmxlIHR5cGUgb3IgTlVMTC4KIAkgKi8KIAlwdWJsaWMgc3RhdGljIHZvaWQgcHJlQ29ubmVjdFRy
YWNrZXJBY3Jvc3NBc3NpZ25tZW50KEFTVE5vZGUgbG9jYXRpb24sIExvY2FsVmFyaWFibGVCaW5k
aW5nIGxvY2FsLCBFeHByZXNzaW9uIHJocykgewogCQlGYWtlZFRyYWNraW5nVmFyaWFibGUgY2xv
c2VUcmFja2VyID0gbnVsbDsKQEAgLTYxNSw2ICs2MTYsMjIgQEAgcHVibGljIGNsYXNzIEZha2Vk
VHJhY2tpbmdWYXJpYWJsZSBleHRlbmRzIExvY2FsRGVjbGFyYXRpb24gewogCQlyZXR1cm4gdHJh
Y2tpbmdWYXI7CiAJfQogCisJLyoqIAorCSAqIElmIGN1cnJlbnQgaXMgdGhlIHNhbWUgYXMgJ3Jl
dHVybmVkUmVzb3VyY2UnIG9yIGEgd3JhcHBlciB0aGVyZW9mLAorCSAqIG1hcmsgYXMgcmVwb3J0
ZWQgYW5kIHJldHVybiB0cnVlLCBvdGhlcndpc2UgZmFsc2UuCisJICovCisJcHVibGljIGJvb2xl
YW4gaXNSZXNvdXJjZUJlaW5nUmV0dXJuZWQoRmFrZWRUcmFja2luZ1ZhcmlhYmxlIHJldHVybmVk
UmVzb3VyY2UpIHsKKwkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlIGN1cnJlbnQgPSB0aGlzOworCQlk
byB7CisJCQlpZiAoY3VycmVudCA9PSByZXR1cm5lZFJlc291cmNlKSB7CisJCQkJdGhpcy5nbG9i
YWxDbG9zaW5nU3RhdGUgfD0gUkVQT1JURURfREVGSU5JVElWRV9MRUFLOworCQkJCXJldHVybiB0
cnVlOworCQkJfQorCQkJY3VycmVudCA9IGN1cnJlbnQuaW5uZXJUcmFja2VyOworCQl9IHdoaWxl
IChjdXJyZW50ICE9IG51bGwpOworCQlyZXR1cm4gZmFsc2U7CisJfQorCiAJcHVibGljIHZvaWQg
cmVjb3JkRXJyb3JMb2NhdGlvbihBU1ROb2RlIGxvY2F0aW9uLCBpbnQgbnVsbFN0YXR1cykgewog
CQlpZiAodGhpcy5yZWNvcmRlZExvY2F0aW9ucyA9PSBudWxsKQogCQkJdGhpcy5yZWNvcmRlZExv
Y2F0aW9ucyA9IG5ldyBIYXNoTWFwKCk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1JldHVyblN0
YXRlbWVudC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9SZXR1cm5TdGF0ZW1lbnQuamF2YQppbmRleCAxOGEx
YmMxLi4wYTM0MDc5IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1JldHVyblN0YXRlbWVudC5qYXZh
CisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9hc3QvUmV0dXJuU3RhdGVtZW50LmphdmEKQEAgLTUyLDkgKzUyLDggQEAg
cHVibGljIEZsb3dJbmZvIGFuYWx5c2VDb2RlKEJsb2NrU2NvcGUgY3VycmVudFNjb3BlLCBGbG93
Q29udGV4dCBmbG93Q29udGV4dCwgRmwKIAkJaWYgKHRyYWNraW5nVmFyaWFibGUgIT0gbnVsbCkg
ewogCQkJaWYgKG1ldGhvZFNjb3BlICE9IHRyYWNraW5nVmFyaWFibGUubWV0aG9kU2NvcGUpCiAJ
CQkJdHJhY2tpbmdWYXJpYWJsZS5tYXJrQ2xvc2VkSW5OZXN0ZWRNZXRob2QoKTsKLQkJCS8vIGRv
bid0IHJlcG9ydCBpc3N1ZXMgY29uY2VybmluZyB0aGlzIGxvY2FsLCBzaW5jZSBieSByZXR1cm5p
bmcKLQkJCS8vIHRoZSBtZXRob2QgcGFzc2VzIHRoZSByZXNwb25zaWJpbGl0eSB0byB0aGUgY2Fs
bGVyOgotCQkJY3VycmVudFNjb3BlLnJlbW92ZVRyYWNraW5nVmFyKHRyYWNraW5nVmFyaWFibGUp
OworCQkJLy8gYnkgcmV0dXJuaW5nIHRoZSBtZXRob2QgcGFzc2VzIHRoZSByZXNwb25zaWJpbGl0
eSB0byB0aGUgY2FsbGVyOgorCQkJZmxvd0luZm8gPSBGYWtlZFRyYWNraW5nVmFyaWFibGUubWFy
a1Bhc3NlZFRvT3V0c2lkZShjdXJyZW50U2NvcGUsIHRoaXMuZXhwcmVzc2lvbiwgZmxvd0luZm8p
OwogCQl9CiAJfQogCXRoaXMuaW5pdFN0YXRlSW5kZXggPQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xv
b2t1cC9CbG9ja1Njb3BlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Jsb2NrU2NvcGUuamF2YQppbmRl
eCAzMGM4MTk4Li4zM2MzYjZmIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Jsb2NrU2NvcGUu
amF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Jsb2NrU2NvcGUuamF2YQpAQCAtMTAwOSwxMSArMTAw
OSwxOSBAQCBwdWJsaWMgdm9pZCBjaGVja1VuY2xvc2VkQ2xvc2VhYmxlcyhGbG93SW5mbyBmbG93
SW5mbywgQVNUTm9kZSBsb2NhdGlvbiwgQmxvY2tTYwogCQlyZXR1cm47CiAJfQogCWlmIChsb2Nh
dGlvbiAhPSBudWxsICYmIGZsb3dJbmZvLnJlYWNoTW9kZSgpICE9IDApIHJldHVybjsKKworCUZh
a2VkVHJhY2tpbmdWYXJpYWJsZSByZXR1cm5WYXIgPSAobG9jYXRpb24gaW5zdGFuY2VvZiBSZXR1
cm5TdGF0ZW1lbnQpID8KKwkJCUZha2VkVHJhY2tpbmdWYXJpYWJsZS5nZXRDbG9zZVRyYWNraW5n
VmFyaWFibGUoKChSZXR1cm5TdGF0ZW1lbnQpbG9jYXRpb24pLmV4cHJlc3Npb24pIDogbnVsbDsK
KwogCVNldCB2YXJTZXQgPSBuZXcgSGFzaFNldCh0aGlzLnRyYWNraW5nVmFyaWFibGVzKTsKIAlG
YWtlZFRyYWNraW5nVmFyaWFibGUgdHJhY2tpbmdWYXI7CiAJLy8gcGljayBvbmUgb3V0ZXItbW9z
dCB2YXJpYWJsZSBmcm9tIHRoZSBzZXQgYXQgYSB0aW1lCiAJd2hpbGUgKCh0cmFja2luZ1ZhciA9
IEZha2VkVHJhY2tpbmdWYXJpYWJsZS5waWNrVmFyRm9yUmVwb3J0aW5nKHZhclNldCwgdGhpcywg
bG9jYXRpb24gIT0gbnVsbCkpICE9IG51bGwpIHsKIAorCQlpZiAocmV0dXJuVmFyICE9IG51bGwg
JiYgdHJhY2tpbmdWYXIuaXNSZXNvdXJjZUJlaW5nUmV0dXJuZWQocmV0dXJuVmFyKSkgeworCQkJ
Y29udGludWU7CisJCX0KKwogCQlpZiAobG9jYXRpb24gIT0gbnVsbCAmJiB0cmFja2luZ1Zhci5v
cmlnaW5hbEJpbmRpbmcgIT0gbnVsbCAmJiBmbG93SW5mby5pc0RlZmluaXRlbHlOdWxsKHRyYWNr
aW5nVmFyLm9yaWdpbmFsQmluZGluZykpCiAJCQljb250aW51ZTsgLy8gcmVwb3J0aW5nIGFnYWlu
c3QgYSBzcGVjaWZpYyBsb2NhdGlvbiwgcmVzb3VyY2UgaXMgbnVsbCBhdCB0aGlzIGZsb3csIGRv
bid0IGNvbXBsYWluCiAJCQo=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>209482</attachid>
            <date>2012-01-13 16:17:00 -0500</date>
            <delta_ts>2012-01-13 16:17:57 -0500</delta_ts>
            <desc>Tests &amp; fix v1.0</desc>
            <filename>Bug_358903_v1.0.patch</filename>
            <type>text/plain</type>
            <size>278923</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL051bGxSZWZlcmVuY2VU
ZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9OdWxsUmVmZXJlbmNlVGVz
dC5qYXZhCmluZGV4IDBjOTMyNGMuLmUyNDM4OGYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21w
aWxlci9yZWdyZXNzaW9uL051bGxSZWZlcmVuY2VUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vTnVsbFJlZmVyZW5jZVRlc3QuamF2YQpAQCAtNjAyMCw2ICs2MDIw
LDcgQEAgcHVibGljIHZvaWQgdGVzdDA1NjFfdHJ5X2NhdGNoX3VuY2hlY2tlZF9leGNlcHRpb24o
KSB7CiBwdWJsaWMgdm9pZCB0ZXN0MDU2Ml90cnlfY2F0Y2hfdW5jaGVja2VkX2V4Y2VwdGlvbigp
IHsKIAlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwogCW9wdGlvbnMucHV0KENv
bXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0
aW9ucy5XQVJOSU5HKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9y
dFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5XQVJOSU5HKTsK
IAl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKIAkJdHJ1ZSwKIAkJbmV3IFN0cmluZ1tdIHsKQEAgLTYw
NDIsNyArNjA0Myw3IEBAIHB1YmxpYyB2b2lkIHRlc3QwNTYyX3RyeV9jYXRjaF91bmNoZWNrZWRf
ZXhjZXB0aW9uKCkgewogCQkJIjEuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDYpXG4iICsK
IAkJCSIJbyA9IG5ldyBMaW5lTnVtYmVyUmVhZGVyKG5ldyBGaWxlUmVhZGVyKFwiZHVtbXlcIikp
O1xuIiArCiAJCQkiCV5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXl5cbiIgKwotCQkJIlJlc291cmNlIGxlYWs6ICdvJyBpcyBuZXZlciBjbG9zZWRcbiIgKwor
CQkJIlBvdGVudGlhbCByZXNvdXJjZSBsZWFrOiBcJ29cJyBtYXkgbm90IGJlIGNsb3NlZFxuIiAr
CiAJCQkiLS0tLS0tLS0tLVxuIiArCiAJCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDgp
XG4iICsKIAkJCSIJby50b1N0cmluZygpO1xuIiArCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29t
cGlsZXIvcmVncmVzc2lvbi9SZXNvdXJjZUxlYWtUZXN0cy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBp
bGVyL3JlZ3Jlc3Npb24vUmVzb3VyY2VMZWFrVGVzdHMuamF2YQpuZXcgZmlsZSBtb2RlIDEwMDY0
NAppbmRleCAwMDAwMDAwLi41MWQ1ZTc0Ci0tLSAvZGV2L251bGwKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vUmVzb3VyY2VMZWFrVGVzdHMuamF2YQpAQCAtMCwwICsxLDI5NzMg
QEAKKy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqCisgKiBDb3B5cmlnaHQgKGMpIDIwMTEsIDIwMTIg
R0sgU29mdHdhcmUgQUcgYW5kIG90aGVycy4KKyAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMg
cHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKKyAqIGFyZSBtYWRlIGF2YWls
YWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAor
ICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUg
YXQKKyAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICog
Q29udHJpYnV0b3JzOgorICogICAgIFN0ZXBoYW4gSGVycm1hbm4gLSBpbml0aWFsIEFQSSBhbmQg
aW1wbGVtZW50YXRpb24KKyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLworcGFja2FnZSBvcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci5yZWdyZXNzaW9uOworCitpbXBvcnQgamF2YS5p
by5JT0V4Y2VwdGlvbjsKK2ltcG9ydCBqYXZhLm5ldC5VUkw7CitpbXBvcnQgamF2YS51dGlsLk1h
cDsKKworaW1wb3J0IGp1bml0LmZyYW1ld29yay5UZXN0OworCitpbXBvcnQgb3JnLmVjbGlwc2Uu
Y29yZS5ydW50aW1lLkZpbGVMb2NhdG9yOworaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucnVudGlt
ZS5QYXRoOworaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5QbGF0Zm9ybTsKK2ltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuY29yZS5KYXZhQ29yZTsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29tcGlsZXIuY2xhc3NmbXQuQ2xhc3NGaWxlQ29uc3RhbnRzOworaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5pbXBsLkNvbXBpbGVyT3B0aW9uczsKKwor
cHVibGljIGNsYXNzIFJlc291cmNlTGVha1Rlc3RzIGV4dGVuZHMgQWJzdHJhY3RSZWdyZXNzaW9u
VGVzdCB7CisKK3N0YXRpYyB7CisvLwlURVNUU19OQU1FUyA9IG5ldyBTdHJpbmdbXSB7ICJ0ZXN0
MDYxYSJ9OworLy8JVEVTVFNfTlVNQkVSUyA9IG5ldyBpbnRbXSB7IDUwIH07CisvLwlURVNUU19S
QU5HRSA9IG5ldyBpbnRbXSB7IDExLCAtMSB9OworfQorcHVibGljIFJlc291cmNlTGVha1Rlc3Rz
KFN0cmluZyBuYW1lKSB7CisJc3VwZXIobmFtZSk7Cit9CitwdWJsaWMgc3RhdGljIFRlc3Qgc3Vp
dGUoKSB7CisJcmV0dXJuIGJ1aWxkQWxsQ29tcGxpYW5jZXNUZXN0U3VpdGUoUmVzb3VyY2VMZWFr
VGVzdHMuY2xhc3MpOworfQorCit2b2lkIHJ1blRlc3RzRXhwZWN0aW5nRXJyb3JzT25seUluMTco
U3RyaW5nW10gdGVzdEZpbGVzLCBTdHJpbmcgZXJyb3JzSW4xNywgTWFwIG9wdGlvbnMpIHsKKwlp
ZiAodGhpcy5jb21wbGlhbmNlTGV2ZWwgPj0gQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfNykKKwkJ
cnVuTmVnYXRpdmVUZXN0KHRlc3RGaWxlcywgZXJyb3JzSW4xNywgbnVsbCwgdHJ1ZSwgb3B0aW9u
cyk7CisJZWxzZQorCQlydW5Db25mb3JtVGVzdCh0ZXN0RmlsZXMsICIiLCBudWxsLCB0cnVlLCBu
dWxsLCBvcHRpb25zLCBudWxsKTsKK30KKworLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3YXJu
aW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNlcworLy8gYSBtZXRob2QgdXNlcyBhbiBB
dXRvQ2xvc2VhYmxlIHdpdGhvdXQgZXZlciBjbG9zaW5nIGl0LgorcHVibGljIHZvaWQgdGVzdDA1
NigpIHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0
KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVy
T3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBv
cnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7
CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwK
KwkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZVJl
YWRlcjtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVi
bGljIGNsYXNzIFgge1xuIiArCisJCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9u
IHtcbiIgKworCQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtc
biIgKworCQkJIiAgICAgICAgRmlsZVJlYWRlciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIo
ZmlsZSk7XG4iICsKKy8vIG5vdCBpbnZva2luZyBhbnkgbWV0aG9kcyBvbiBGaWxlUmVhZGVyLCB0
cnkgdG8gYXZvaWQgbmVjZXNzYXJ5IGNhbGwgdG8gc3VwZXJjbGFzcygpIGluIHRoZSBjb21waWxl
cgorLy8JCQkiICAgICAgICBjaGFyW10gaW4gPSBuZXcgY2hhcls1MF07XG4iICsKKy8vCQkJIiAg
ICAgICAgZmlsZVJlYWRlci5yZWFkKGluKTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSIgICAg
cHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykgdGhyb3dzIElPRXhjZXB0aW9u
IHtcbiIgKworCQkJIiAgICAgICAgbmV3IFgoKS5mb28oKTtcbiIgKworCQkJIiAgICB9XG4iICsK
KwkJCSJ9XG4iCisJCX0sCisJCSItLS0tLS0tLS0tXG4iICsKKwkJIjEuIEVSUk9SIGluIFguamF2
YSAoYXQgbGluZSA3KVxuIiArCisJCSIJRmlsZVJlYWRlciBmaWxlUmVhZGVyID0gbmV3IEZpbGVS
ZWFkZXIoZmlsZSk7XG4iICsKKwkJIgkgICAgICAgICAgIF5eXl5eXl5eXl5cbiIgKworCQkiUmVz
b3VyY2UgbGVhazogJ2ZpbGVSZWFkZXInIGlzIG5ldmVyIGNsb3NlZFxuIiArCisJCSItLS0tLS0t
LS0tXG4iLAorCQludWxsLAorCQl0cnVlLAorCQlvcHRpb25zKTsKK30KKy8vIEJ1ZyAzNDkzMjYg
LSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNvdXJjZXMKKy8vIGEg
bWV0aG9kIHVzZXMgYW4gQXV0b0Nsb3NlYWJsZSBhbmQgY2xvc2VzIGl0IGJ1dCBub3QgcHJvdGVj
dGVkIGJ5IHQtdy1yIG5vciByZWd1bGFyIHRyeS1maW5hbGx5CitwdWJsaWMgdm9pZCB0ZXN0MDU2
YSgpIHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0
KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVy
T3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBv
cnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwor
CW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0RXhwbGljaXRseUNsb3Nl
ZEF1dG9DbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJcnVuVGVzdHNFeHBlY3Rp
bmdFcnJvcnNPbmx5SW4xNygKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImlt
cG9ydCBqYXZhLmlvLkZpbGU7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlUmVhZGVyO1xu
IiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJwdWJsaWMgY2xh
c3MgWCB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28oKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiAr
CisJCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xuIiArCisJ
CQkiICAgICAgICBGaWxlUmVhZGVyIGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTtc
biIgKworCQkJIiAgICAgICAgY2hhcltdIGluID0gbmV3IGNoYXJbNTBdO1xuIiArCisJCQkiICAg
ICAgICBmaWxlUmVhZGVyLnJlYWQoaW4pO1xuIiArCisJCQkiCQkgZmlsZVJlYWRlci5jbG9zZSgp
O1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIi0tLS0tLS0tLS1cbiIg
KworCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDcpXG4iICsKKwkJIglGaWxlUmVhZGVy
IGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTtcbiIgKworCQkiCSAgICAgICAgICAg
Xl5eXl5eXl5eXlxuIiArCisJCSJSZXNvdXJjZSAnZmlsZVJlYWRlcicgc2hvdWxkIGJlIG1hbmFn
ZWQgYnkgdHJ5LXdpdGgtcmVzb3VyY2VcbiIgKworCQkiLS0tLS0tLS0tLVxuIiwKKwkJb3B0aW9u
cyk7Cit9CisvLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5
LXdpdGgtcmVzb3VyY2VzCisvLyBhIG1ldGhvZCB1c2VzIGFuIEF1dG9DbG9zZWFibGUgYW5kIGNs
b3NlcyBpdCBwcm9wZXJseSBpbiBhIGZpbmFsbHkgYmxvY2sKK3B1YmxpYyB2b2lkIHRlc3QwNTZi
KCkgeworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQo
Q29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJP
cHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9y
dFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJ
dGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJ
ImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlUmVhZGVy
O1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJwdWJsaWMg
Y2xhc3MgWCB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28oKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xu
IiArCisJCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xuIiAr
CisJCQkiICAgICAgICBGaWxlUmVhZGVyIGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxl
KTtcbiIgKworCQkJIiAgICAgICAgdHJ5IHtcbiIgKworCQkJIiAgICAgICAgICAgIGNoYXJbXSBp
biA9IG5ldyBjaGFyWzUwXTtcbiIgKworCQkJIiAgICAgICAgICAgIGZpbGVSZWFkZXIucmVhZChp
bik7XG4iICsKKwkJCSIgICAgICAgIH0gZmluYWxseSB7XG4iICsKKwkJCSIJCSAgICAgZmlsZVJl
YWRlci5jbG9zZSgpO1xuIiArCisJCQkiICAgICAgICB9XG4iICsKKwkJCSIgICAgfVxuIiArCisJ
CQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKworCQkJ
IiAgICAgICAgdHJ5IHtcbiIgKworCQkJIiAgICAgICAgICAgIG5ldyBYKCkuZm9vKCk7XG4iICsK
KwkJCSIgICAgICAgIH0gY2F0Y2ggKElPRXhjZXB0aW9uIGlvZXgpIHtcbiIgKworCQkJIiAgICAg
ICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcImNhdWdodFwiKTtcbiIgKworCQkJIiAgICAgICAg
fVxuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJImNhdWdodCIsIC8qb3V0
cHV0Ki8KKwkJbnVsbC8qY2xhc3NMaWJzKi8sCisJCXRydWUvKnNob3VsZEZsdXNoKi8sCisJCW51
bGwvKnZtYXJncyovLAorCQlvcHRpb25zLAorCQludWxsLypyZXF1ZXN0b3IqLyk7Cit9CisvLyBC
dWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3Vy
Y2VzCisvLyBhIG1ldGhvZCB1c2VzIGFuIEF1dG9DbG9zZWFibGUgcHJvcGVybHkgd2l0aGluIHRy
eS13aXRoLXJlc291cmNlcy4KK3B1YmxpYyB2b2lkIHRlc3QwNTZjKCkgeworCWlmICh0aGlzLmNv
bXBsaWFuY2VMZXZlbCA8IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzcpIHJldHVybjsgLy8gdC13
LXIgdXNlZAorCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5w
dXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGls
ZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1Jl
cG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5XQVJOSU5H
KTsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIs
CisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkZpbGVS
ZWFkZXI7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1
YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICB2b2lkIGZvbygpIHRocm93cyBJT0V4Y2VwdGlv
biB7XG4iICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7
XG4iICsKKwkJCSIgICAgICAgIHRyeSAoRmlsZVJlYWRlciBmaWxlUmVhZGVyID0gbmV3IEZpbGVS
ZWFkZXIoZmlsZSkpIHtcbiIgKworCQkJIiAgICAgICAgICAgIGNoYXJbXSBpbiA9IG5ldyBjaGFy
WzUwXTtcbiIgKworCQkJIiAgICAgICAgICAgIGZpbGVSZWFkZXIucmVhZChpbik7XG4iICsKKwkJ
CSIJCSB9XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBt
YWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKworCQkJIiAgICAgICAgdHJ5IHtcbiIgKworCQkJIiAg
ICAgICAgICAgIG5ldyBYKCkuZm9vKCk7XG4iICsKKwkJCSIgICAgICAgIH0gY2F0Y2ggKElPRXhj
ZXB0aW9uIGlvZXgpIHtcbiIgKworCQkJIiAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihc
ImNhdWdodFwiKTtcbiIgKworCQkJIiAgICAgICAgfVxuIiArCisJCQkiICAgIH1cbiIgKworCQkJ
In1cbiIKKwkJfSwKKwkJImNhdWdodCIsIC8qb3V0cHV0Ki8KKwkJbnVsbC8qY2xhc3NMaWJzKi8s
CisJCXRydWUvKnNob3VsZEZsdXNoKi8sCisJCW51bGwvKnZtYXJncyovLAorCQlvcHRpb25zLAor
CQludWxsLypyZXF1ZXN0b3IqLyk7Cit9CisvLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5p
bmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCisvLyBhIG1ldGhvZCB1c2VzIHR3byBB
dXRvQ2xvc2VhYmxlcyAodGVzdGluZyBpbmRlcGVuZGVudCBhbmFseXNpcykKKy8vLSBvbmUgY2xv
c2VhYmxlIG1heSBiZSB1bmNsb3NlZCBhdCBhIGNvbmRpdGlvbmFsIHJldHVybgorLy8tIHRoZSBv
dGhlciBpcyBvbmx5IGNvbmRpdGlvbmFsbHkgY2xvc2VkCitwdWJsaWMgdm9pZCB0ZXN0MDU2ZCgp
IHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KENv
bXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0
aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQ
b3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7CisJ
dGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJ
CSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZVJlYWRl
cjtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGlj
IGNsYXNzIFgge1xuIiArCisJCQkiICAgIHZvaWQgZm9vKGJvb2xlYW4gZmxhZzEsIGJvb2xlYW4g
ZmxhZzIpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZSA9
IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKKwkJCSIgICAgICAgIGNoYXJbXSBpbiA9IG5l
dyBjaGFyWzUwXTtcbiIgKworCQkJIiAgICAgICAgRmlsZVJlYWRlciBmaWxlUmVhZGVyMSA9IG5l
dyBGaWxlUmVhZGVyKGZpbGUpO1xuIiArCisJCQkiICAgICAgICBmaWxlUmVhZGVyMS5yZWFkKGlu
KTtcbiIgKworCQkJIiAgICAgICAgRmlsZVJlYWRlciBmaWxlUmVhZGVyMiA9IG5ldyBGaWxlUmVh
ZGVyKGZpbGUpO1xuIiArCisJCQkiICAgICAgICBmaWxlUmVhZGVyMi5yZWFkKGluKTtcbiIgKwor
CQkJIiAgICAgICAgaWYgKGZsYWcxKSB7XG4iICsKKwkJCSIgICAgICAgICAgICBmaWxlUmVhZGVy
Mi5jbG9zZSgpO1xuIiArCisJCQkiICAgICAgICAgICAgcmV0dXJuO1xuIiArCisJCQkiICAgICAg
ICB9IGVsc2UgaWYgKGZsYWcyKSB7XG4iICsKKwkJCSIgICAgICAgICAgICBmaWxlUmVhZGVyMi5j
bG9zZSgpO1xuIiArCisJCQkiICAgICAgICB9XG4iICsKKwkJCSIgICAgICAgIGZpbGVSZWFkZXIx
LmNsb3NlKCk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9p
ZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAg
ICAgIG5ldyBYKCkuZm9vKGZhbHNlLCB0cnVlKTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9
XG4iCisJCX0sCisJCSItLS0tLS0tLS0tXG4iICsKKwkJIjEuIFdBUk5JTkcgaW4gWC5qYXZhIChh
dCBsaW5lIDEwKVxuIiArCisJCSIJRmlsZVJlYWRlciBmaWxlUmVhZGVyMiA9IG5ldyBGaWxlUmVh
ZGVyKGZpbGUpO1xuIiArCisJCSIJICAgICAgICAgICBeXl5eXl5eXl5eXlxuIiArCisJCSJQb3Rl
bnRpYWwgcmVzb3VyY2UgbGVhazogJ2ZpbGVSZWFkZXIyJyBtYXkgbm90IGJlIGNsb3NlZFxuIiAr
CisJCSItLS0tLS0tLS0tXG4iICsKKwkJIjIuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxNClc
biIgKworCQkiCXJldHVybjtcbiIgKworCQkiCV5eXl5eXl5cbiIgKworCQkiUmVzb3VyY2UgbGVh
azogJ2ZpbGVSZWFkZXIxJyBpcyBub3QgY2xvc2VkIGF0IHRoaXMgbG9jYXRpb25cbiIgKworCQki
LS0tLS0tLS0tLVxuIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJb3B0aW9ucyk7Cit9CisvLyBCdWcg
MzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2Vz
CisvLyBhIG1ldGhvZCB1c2VzIHR3byBBdXRvQ2xvc2VhYmxlcyAodGVzdGluZyBpbmRlcGVuZGVu
dCBhbmFseXNpcykKKy8vLSBvbmUgY2xvc2VhYmxlIG1heSBiZSB1bmNsb3NlZCBhdCBhIGNvbmRp
dGlvbmFsIHJldHVybgorLy8tIHRoZSBvdGhlciBpcyBvbmx5IGNvbmRpdGlvbmFsbHkgY2xvc2Vk
CitwdWJsaWMgdm9pZCB0ZXN0MDU2ZF9zdXBwcmVzcygpIHsKKwlpZiAodGhpcy5jb21wbGlhbmNl
TGV2ZWwgPCBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV81KSByZXR1cm47IC8vIGFubm90YXRpb25z
IHVzZWQKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0
KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVy
T3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBv
cnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7
CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9TdXBwcmVzc09wdGlvbmFsRXJy
b3JzLCBDb21waWxlck9wdGlvbnMuRU5BQkxFRCk7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJ
CW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xu
IiArCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIgKworCQkJImltcG9ydCBqYXZh
LmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICAg
IHZvaWQgZm9vKGJvb2xlYW4gZmxhZzEsIGJvb2xlYW4gZmxhZzIpIHRocm93cyBJT0V4Y2VwdGlv
biB7XG4iICsKKwkJCSIgICAgICAgIEBTdXBwcmVzc1dhcm5pbmdzKFwicmVzb3VyY2VcIikgRmls
ZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTsgLy8gdW5uZWNlc3Nhcnkgc3VwcHJlc3Nc
biIgKworCQkJIiAgICAgICAgY2hhcltdIGluID0gbmV3IGNoYXJbNTBdO1xuIiArCisJCQkiICAg
ICAgICBGaWxlUmVhZGVyIGZpbGVSZWFkZXIxID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsK
KwkJCSIgICAgICAgIGZpbGVSZWFkZXIxLnJlYWQoaW4pO1xuIiArCisJCQkiICAgICAgICBAU3Vw
cHJlc3NXYXJuaW5ncyhcInJlc291cmNlXCIpIEZpbGVSZWFkZXIgZmlsZVJlYWRlcjIgPSBuZXcg
RmlsZVJlYWRlcihmaWxlKTsgLy8gdXNlZnVsIHN1cHByZXNzXG4iICsKKwkJCSIgICAgICAgIGZp
bGVSZWFkZXIyLnJlYWQoaW4pO1xuIiArCisJCQkiICAgICAgICBpZiAoZmxhZzEpIHtcbiIgKwor
CQkJIiAgICAgICAgICAgIGZpbGVSZWFkZXIyLmNsb3NlKCk7XG4iICsKKwkJCSIgICAgICAgICAg
ICByZXR1cm47IC8vIG5vdCBzdXBwcmVzc2VkXG4iICsKKwkJCSIgICAgICAgIH0gZWxzZSBpZiAo
ZmxhZzIpIHtcbiIgKworCQkJIiAgICAgICAgICAgIGZpbGVSZWFkZXIyLmNsb3NlKCk7XG4iICsK
KwkJCSIgICAgICAgIH1cbiIgKworCQkJIiAgICAgICAgZmlsZVJlYWRlcjEuY2xvc2UoKTtcbiIg
KworCQkJIiAgICB9XG4iICsKKwkJCSIgICAgQFN1cHByZXNzV2FybmluZ3MoXCJyZXNvdXJjZVwi
KSAvLyB1c2VmdWwgc3VwcHJlc3NcbiIgKworCQkJIiAgICB2b2lkIGJhcigpIHRocm93cyBJT0V4
Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZp
bGVcIik7XG4iICsKKwkJCSIgICAgICAgIEZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxl
UmVhZGVyKGZpbGUpO1xuIiArCisJCQkiICAgICAgICBjaGFyW10gaW4gPSBuZXcgY2hhcls1MF07
XG4iICsKKwkJCSIgICAgICAgIGZpbGVSZWFkZXIucmVhZChpbik7XG4iICsKKwkJCSIgICAgfVxu
IiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93
cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIG5ldyBYKCkuZm9vKGZhbHNlLCB0cnVl
KTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSItLS0tLS0tLS0tXG4i
ICsKKwkJIjEuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDYpXG4iICsKKwkJIglAU3VwcHJl
c3NXYXJuaW5ncyhcInJlc291cmNlXCIpIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVc
Iik7IC8vIHVubmVjZXNzYXJ5IHN1cHByZXNzXG4iICsKKwkJIgkgICAgICAgICAgICAgICAgICBe
Xl5eXl5eXl5eXG4iICsKKwkJIlVubmVjZXNzYXJ5IEBTdXBwcmVzc1dhcm5pbmdzKFwicmVzb3Vy
Y2VcIilcbiIgKworCQkiLS0tLS0tLS0tLVxuIiArCisJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0
IGxpbmUgMTQpXG4iICsKKwkJIglyZXR1cm47IC8vIG5vdCBzdXBwcmVzc2VkXG4iICsKKwkJIgle
Xl5eXl5eXG4iICsKKwkJIlJlc291cmNlIGxlYWs6ICdmaWxlUmVhZGVyMScgaXMgbm90IGNsb3Nl
ZCBhdCB0aGlzIGxvY2F0aW9uXG4iICsKKwkJIi0tLS0tLS0tLS1cbiIsCisJCW51bGwsCisJCXRy
dWUsCisJCW9wdGlvbnMpOworfQorLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZv
ciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNlcworLy8gQnVnIDM2MjMzMiAtIE9ubHkgcmVwb3J0
IHBvdGVudGlhbCBsZWFrIHdoZW4gY2xvc2VhYmxlIG5vdCBjcmVhdGVkIGluIHRoZSBsb2NhbCBz
Y29wZQorLy8gb25lIG1ldGhvZCByZXR1cm5zIGFuIEF1dG9DbGVhc2JsZSwgYSBzZWNvbmQgbWV0
aG9kIHVzZXMgdGhpcyBvYmplY3Qgd2l0aG91dCBldmVyIGNsb3NpbmcgaXQuCitwdWJsaWMgdm9p
ZCB0ZXN0MDU2ZSgpIHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9w
dGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUs
IENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9Q
VElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMu
RVJST1IpOworCXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlgu
amF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlv
LkZpbGVSZWFkZXI7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKwor
CQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICBGaWxlUmVhZGVyIGdldFJlYWRlcihT
dHJpbmcgZmlsZW5hbWUpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZp
bGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKKwkJCSIgICAgICAgIEZpbGVS
ZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiArCisJCQkiICAgICAg
ICByZXR1cm4gZmlsZVJlYWRlcjtcbiIgKyAJCS8vIGRvbid0IGNvbXBsYWluIGhlcmUsIHBhc3Mg
cmVzcG9uc2liaWxpdHkgdG8gY2FsbGVyCisJCQkiICAgIH1cbiIgKworCQkJIiAgICB2b2lkIGZv
bygpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZpbGVSZWFkZXIgcmVh
ZGVyID0gZ2V0UmVhZGVyKFwic29tZWZpbGVcIik7XG4iICsKKwkJCSIgICAgICAgIGNoYXJbXSBp
biA9IG5ldyBjaGFyWzUwXTtcbiIgKworCQkJIiAgICAgICAgcmVhZGVyLnJlYWQoaW4pO1xuIiAr
CisJCQkiICAgIH1cbiIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdb
XSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBuZXcgWCgpLmZv
bygpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIi0tLS0tLS0tLS1c
biIgKworCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDExKVxuIiArCisJCSIJRmlsZVJl
YWRlciByZWFkZXIgPSBnZXRSZWFkZXIoXCJzb21lZmlsZVwiKTtcbiIgKworCQkiCSAgICAgICAg
ICAgXl5eXl5eXG4iICsKKwkJIlBvdGVudGlhbCByZXNvdXJjZSBsZWFrOiBcJ3JlYWRlclwnIG1h
eSBub3QgYmUgY2xvc2VkXG4iICsKKwkJIi0tLS0tLS0tLS1cbiIsCisJCW51bGwsCisJCXRydWUs
CisJCW9wdGlvbnMpOworfQorLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBt
aXNzaW5nIHRyeS13aXRoLXJlc291cmNlcworLy8gYSBtZXRob2QgZXhwbGljaXRseSBjbG9zZXMg
aXRzIEF1dG9DbG9zZWFibGUgcmF0aGVyIHRoYW4gdXNpbmcgdC13LXIKK3B1YmxpYyB2b2lkIHRl
c3QwNTZmKCkgeworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9u
cy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29t
cGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9O
X1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5XQVJO
SU5HKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydEV4cGxpY2l0
bHlDbG9zZWRBdXRvQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCXJ1blRlc3Rz
RXhwZWN0aW5nRXJyb3JzT25seUluMTcoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwK
KwkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZVJl
YWRlcjtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVi
bGljIGNsYXNzIFgge1xuIiArCisJCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9u
IHtcbiIgKworCQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtc
biIgKworCQkJIiAgICAgICAgRmlsZVJlYWRlciBmaWxlUmVhZGVyID0gbnVsbDtcbiIgKworCQkJ
IiAgICAgICAgdHJ5IHtcbiIgKworCQkJIiAgICAgICAgICAgIGZpbGVSZWFkZXIgPSBuZXcgRmls
ZVJlYWRlcihmaWxlKTtcbiIgKworCQkJIiAgICAgICAgICAgIGNoYXJbXSBpbiA9IG5ldyBjaGFy
WzUwXTtcbiIgKworCQkJIiAgICAgICAgICAgIGZpbGVSZWFkZXIucmVhZChpbik7XG4iICsKKwkJ
CSIgICAgICAgIH0gZmluYWxseSB7XG4iICsKKwkJCSIgICAgICAgICAgICBmaWxlUmVhZGVyLmNs
b3NlKCk7XG4iICsKKwkJCSIgICAgICAgIH1cbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4i
CisJCX0sCisJCSItLS0tLS0tLS0tXG4iICsKKwkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGlu
ZSA3KVxuIiArCisJCSIJRmlsZVJlYWRlciBmaWxlUmVhZGVyID0gbnVsbDtcbiIgKworCQkiCSAg
ICAgICAgICAgXl5eXl5eXl5eXlxuIiArCisJCSJSZXNvdXJjZSAnZmlsZVJlYWRlcicgc2hvdWxk
IGJlIG1hbmFnZWQgYnkgdHJ5LXdpdGgtcmVzb3VyY2VcbiIgKworCQkiLS0tLS0tLS0tLVxuIiwK
KwkJb3B0aW9ucyk7Cit9CisvLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1p
c3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCisvLyBhbiBBdXRvQ2xvc2VhYmxlIGxvY2FsIGlzIHJl
LWFzc2lnbmVkCitwdWJsaWMgdm9pZCB0ZXN0MDU2ZygpIHsKKwlNYXAgb3B0aW9ucyA9IGdldENv
bXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX1VOQ0xP
U0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChKYXZh
Q29yZS5DT01QSUxFUl9QQl9QT1RFTlRJQUxMWV9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVy
T3B0aW9ucy5XQVJOSU5HKTsKKwlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9FWFBM
SUNJVExZX0NMT1NFRF9BVVRPQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuSUdOT1JFKTsKKwl0
aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJ
ImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlUmVhZGVy
O1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJwdWJsaWMg
Y2xhc3MgWCB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28oKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xu
IiArCisJCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xuIiAr
CisJCQkiICAgICAgICBGaWxlUmVhZGVyIGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxl
KTtcbiIgKworCQkJIiAgICAgICAgY2hhcltdIGluID0gbmV3IGNoYXJbNTBdO1xuIiArCisJCQki
ICAgICAgICBmaWxlUmVhZGVyLnJlYWQoaW4pO1xuIiArCisJCQkiICAgICAgICBmaWxlUmVhZGVy
ID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsKKwkJCSIgICAgICAgIGZpbGVSZWFkZXIucmVh
ZChpbik7XG4iICsKKwkJCSIgICAgICAgIGZpbGVSZWFkZXIuY2xvc2UoKTtcbiIgKworCQkJIiAg
ICAgICAgZmlsZVJlYWRlciA9IG51bGw7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIHB1
YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7
XG4iICsKKwkJCSIgICAgICAgIG5ldyBYKCkuZm9vKCk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJ
CQkifVxuIgorCQl9LAorCQkiLS0tLS0tLS0tLVxuIiArCisJCSIxLiBFUlJPUiBpbiBYLmphdmEg
KGF0IGxpbmUgMTApXG4iICsKKwkJIglmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7
XG4iICsKKwkJIgleXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIgKworCQkiUmVz
b3VyY2UgbGVhazogJ2ZpbGVSZWFkZXInIGlzIG5vdCBjbG9zZWQgYXQgdGhpcyBsb2NhdGlvblxu
IiArCisJCSItLS0tLS0tLS0tXG4iLAorCQludWxsLAorCQl0cnVlLAorCQlvcHRpb25zKTsKK30K
Ky8vIEJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1y
ZXNvdXJjZXMKKy8vIGFuIEF1dG9DbG9zZWFibGUgbG9jYWwgaXMgcmUtYXNzaWduZWQgYWZ0ZXIg
bnVsbC1hc3NpZ25lZAorcHVibGljIHZvaWQgdGVzdDA1NmcyKCkgeworCU1hcCBvcHRpb25zID0g
Z2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJf
VU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0
KEphdmFDb3JlLkNPTVBJTEVSX1BCX1BPVEVOVElBTExZX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29t
cGlsZXJPcHRpb25zLldBUk5JTkcpOworCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BC
X0VYUExJQ0lUTFlfQ0xPU0VEX0FVVE9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5JR05PUkUp
OworCXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIs
CisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkZpbGVS
ZWFkZXI7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1
YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICB2b2lkIGZvbygpIHRocm93cyBJT0V4Y2VwdGlv
biB7XG4iICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7
XG4iICsKKwkJCSIgICAgICAgIEZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVy
KGZpbGUpO1xuIiArCisJCQkiICAgICAgICBjaGFyW10gaW4gPSBuZXcgY2hhcls1MF07XG4iICsK
KwkJCSIgICAgICAgIGZpbGVSZWFkZXIucmVhZChpbik7XG4iICsKKwkJCSIgICAgICAgIGZpbGVS
ZWFkZXIgPSBudWxsO1xuIiArCisJCQkiICAgICAgICBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFk
ZXIoZmlsZSk7XG4iICsgLy8gZG9uJ3QgY29tcGxhaW4gYWdhaW4sIGZpbGVSZWFkZXIgaXMgbnVs
bCwgc28gbm90aGluZyBjYW4gbGVhayBoZXJlCisJCQkiICAgICAgICBmaWxlUmVhZGVyLnJlYWQo
aW4pO1xuIiArCisJCQkiICAgICAgICBmaWxlUmVhZGVyLmNsb3NlKCk7XG4iICsKKwkJCSIgICAg
fVxuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRo
cm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIG5ldyBYKCkuZm9vKCk7XG4iICsK
KwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCQl9LAorCQkiLS0tLS0tLS0tLVxuIiArCisJCSIx
LiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTApXG4iICsKKwkJIglmaWxlUmVhZGVyID0gbnVs
bDtcbiIgKworCQkiCV5eXl5eXl5eXl5eXl5eXl5eXG4iICsKKwkJIlJlc291cmNlIGxlYWs6ICdm
aWxlUmVhZGVyJyBpcyBub3QgY2xvc2VkIGF0IHRoaXMgbG9jYXRpb25cbiIgKworCQkiLS0tLS0t
LS0tLVxuIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJb3B0aW9ucyk7Cit9CisvLyBCdWcgMzQ5MzI2
IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCisvLyB0
d28gQXV0b0Nsb3NlYWJsZXMgYXQgZGlmZmVyZW50IG5lc3RpbmcgbGV2ZWxzIChhbm9ueW1vdXMg
bG9jYWwgdHlwZSkKK3B1YmxpYyB2b2lkIHRlc3QwNTZoKCkgeworCU1hcCBvcHRpb25zID0gZ2V0
Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfVU5D
TE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0KEph
dmFDb3JlLkNPTVBJTEVSX1BCX1BPVEVOVElBTExZX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGls
ZXJPcHRpb25zLldBUk5JTkcpOworCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX0VY
UExJQ0lUTFlfQ0xPU0VEX0FVVE9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5JR05PUkUpOwor
CXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJ
CQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFk
ZXI7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1Ymxp
YyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICB2b2lkIGZvbygpIHRocm93cyBJT0V4Y2VwdGlvbiB7
XG4iICsKKwkJCSIgICAgICAgIGZpbmFsIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVc
Iik7XG4iICsKKwkJCSIgICAgICAgIGZpbmFsIEZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBG
aWxlUmVhZGVyKGZpbGUpO1xuIiArCisJCQkiICAgICAgICBjaGFyW10gaW4gPSBuZXcgY2hhcls1
MF07XG4iICsKKwkJCSIgICAgICAgIGZpbGVSZWFkZXIucmVhZChpbik7XG4iICsKKwkJCSIgICAg
ICAgIG5ldyBSdW5uYWJsZSgpIHtcbiBwdWJsaWMgdm9pZCBydW4oKSB7XG4iICsKKwkJCSIgICAg
ICAgICAgICB0cnkge1xuIiArCisJCQkiICAgICAgICAgICAgICAgIGZpbGVSZWFkZXIuY2xvc2Uo
KTtcbiIgKworCQkJIiAgICAgICAgICAgICAgICBGaWxlUmVhZGVyIGxvY2FsUmVhZGVyID0gbmV3
IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsKKwkJCSIgICAgICAgICAgICB9IGNhdGNoIChJT0V4Y2Vw
dGlvbiBleCkgeyAvKiBub3AgKi8gfVxuIiArCisJCQkiICAgICAgICB9fS5ydW4oKTtcbiIgKwor
CQkJIiAgICB9XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10g
YXJncykgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgbmV3IFgoKS5mb28o
KTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSItLS0tLS0tLS0tXG4i
ICsKKwkJIjEuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5lIDcpXG4iICsKKwkJIglmaW5hbCBG
aWxlUmVhZGVyIGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTtcbiIgKworCQkiCSAg
ICAgICAgICAgICAgICAgXl5eXl5eXl5eXlxuIiArCisJCSJQb3RlbnRpYWwgcmVzb3VyY2UgbGVh
azogJ2ZpbGVSZWFkZXInIG1heSBub3QgYmUgY2xvc2VkXG4iICsKKwkJIi0tLS0tLS0tLS1cbiIg
KworCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDE0KVxuIiArCisJCSIJRmlsZVJlYWRl
ciBsb2NhbFJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiArCisJCSIJICAgICAgICAg
ICBeXl5eXl5eXl5eXlxuIiArCisJCSJSZXNvdXJjZSBsZWFrOiAnbG9jYWxSZWFkZXInIGlzIG5l
dmVyIGNsb3NlZFxuIiArCisJCSItLS0tLS0tLS0tXG4iLAorCQludWxsLAorCQl0cnVlLAorCQlv
cHRpb25zKTsKK30KKy8vIEJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2lu
ZyB0cnktd2l0aC1yZXNvdXJjZXMKKy8vIHRocmVlIEF1dG9DbG9zZWFibGVzIGluIGRpZmZlcmVu
dCBibG9ja3Mgb2YgdGhlIHNhbWUgbWV0aG9kCitwdWJsaWMgdm9pZCB0ZXN0MDU2aSgpIHsKKwlN
YXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KEphdmFDb3Jl
LkNPTVBJTEVSX1BCX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsK
KwlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9QT1RFTlRJQUxMWV9VTkNMT1NFRF9D
TE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5XQVJOSU5HKTsKKwlvcHRpb25zLnB1dChKYXZhQ29y
ZS5DT01QSUxFUl9QQl9FWFBMSUNJVExZX0NMT1NFRF9BVVRPQ0xPU0VBQkxFLCBDb21waWxlck9w
dGlvbnMuSUdOT1JFKTsKKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsK
KwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsKKwkJCSJpbXBvcnQg
amF2YS5pby5GaWxlUmVhZGVyO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247
XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28oYm9vbGVh
biBmMSwgYm9vbGVhbiBmMikgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAg
RmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAgaWYg
KGYxKSB7XG4iICsKKwkJCSIgICAgICAgICAgICBGaWxlUmVhZGVyIGZpbGVSZWFkZXIgPSBuZXcg
RmlsZVJlYWRlcihmaWxlKTsgLy8gZXJyOiBub3QgY2xvc2VkXG4iICsKKwkJCSIgICAgICAgICAg
ICBjaGFyW10gaW4gPSBuZXcgY2hhcls1MF07XG4iICsKKwkJCSIgICAgICAgICAgICBmaWxlUmVh
ZGVyLnJlYWQoaW4pO1xuIiArCisJCQkiICAgICAgICAgICAgd2hpbGUgKHRydWUpIHtcbiIgKwor
CQkJIiAgICAgICAgICAgICAgICAgRmlsZVJlYWRlciBsb29wUmVhZGVyID0gbmV3IEZpbGVSZWFk
ZXIoZmlsZSk7IC8vIGRvbid0IHdhcm4sIHByb3Blcmx5IGNsb3NlZFxuIiArCisJCQkiICAgICAg
ICAgICAgICAgICBsb29wUmVhZGVyLmNsb3NlKCk7IiArCisJCQkiICAgICAgICAgICAgICAgICBi
cmVhaztcbiIgKworCQkJIiAgICAgICAgICAgIH1cbiIgKworCQkJIiAgICAgICAgfSBlbHNlIHtc
biIgKworCQkJIiAgICAgICAgICAgIEZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVh
ZGVyKGZpbGUpOyAvLyB3YXJuOiBub3QgY2xvc2VkIG9uIGFsbCBwYXRoc1xuIiArCisJCQkiICAg
ICAgICAgICAgaWYgKGYyKVxuIiArCisJCQkiICAgICAgICAgICAgICAgIGZpbGVSZWFkZXIuY2xv
c2UoKTtcbiIgKworCQkJIiAgICAgICAgfVxuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICBw
dWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRpb24g
e1xuIiArCisJCQkiICAgICAgICBuZXcgWCgpLmZvbyh0cnVlLCB0cnVlKTtcbiIgKworCQkJIiAg
ICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSItLS0tLS0tLS0tXG4iICsKKwkJIjEuIEVSUk9S
IGluIFguamF2YSAoYXQgbGluZSA4KVxuIiArCisJCSIJRmlsZVJlYWRlciBmaWxlUmVhZGVyID0g
bmV3IEZpbGVSZWFkZXIoZmlsZSk7IC8vIGVycjogbm90IGNsb3NlZFxuIiArCisJCSIJICAgICAg
ICAgICBeXl5eXl5eXl5eXG4iICsKKwkJIlJlc291cmNlIGxlYWs6ICdmaWxlUmVhZGVyJyBpcyBu
ZXZlciBjbG9zZWRcbiIgKworCQkiLS0tLS0tLS0tLVxuIiArCisJCSIyLiBXQVJOSU5HIGluIFgu
amF2YSAoYXQgbGluZSAxNilcbiIgKworCQkiCUZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBG
aWxlUmVhZGVyKGZpbGUpOyAvLyB3YXJuOiBub3QgY2xvc2VkIG9uIGFsbCBwYXRoc1xuIiArCisJ
CSIJICAgICAgICAgICBeXl5eXl5eXl5eXG4iICsKKwkJIlBvdGVudGlhbCByZXNvdXJjZSBsZWFr
OiAnZmlsZVJlYWRlcicgbWF5IG5vdCBiZSBjbG9zZWRcbiIgKworCQkiLS0tLS0tLS0tLVxuIiwK
KwkJbnVsbCwKKwkJdHJ1ZSwKKwkJb3B0aW9ucyk7Cit9CisvLyBCdWcgMzQ5MzI2IC0gWzEuN10g
bmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCisvLyB0aHJlZSBBdXRv
Q2xvc2VhYmxlcyBpbiBkaWZmZXJlbnQgYmxvY2tzIG9mIHRoZSBzYW1lIG1ldGhvZCAtIHByb2Js
ZW1zIGlnbm9yZWQKK3B1YmxpYyB2b2lkIHRlc3QwNTZpX2lnbm9yZSgpIHsKKwlNYXAgb3B0aW9u
cyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVS
X1BCX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLklHTk9SRSk7CisJb3B0aW9u
cy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfUE9URU5USUFMTFlfVU5DTE9TRURfQ0xPU0VBQkxF
LCBDb21waWxlck9wdGlvbnMuSUdOT1JFKTsKKwlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxF
Ul9QQl9FWFBMSUNJVExZX0NMT1NFRF9BVVRPQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuSUdO
T1JFKTsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2
YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkZp
bGVSZWFkZXI7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJ
InB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICB2b2lkIGZvbyhib29sZWFuIGYxLCBib29s
ZWFuIGYyKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBGaWxlIGZpbGUg
PSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xuIiArCisJCQkiICAgICAgICBpZiAoZjEpIHtcbiIg
KworCQkJIiAgICAgICAgICAgIEZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVy
KGZpbGUpOyAvLyBlcnI6IG5vdCBjbG9zZWRcbiIgKworCQkJIiAgICAgICAgICAgIGNoYXJbXSBp
biA9IG5ldyBjaGFyWzUwXTtcbiIgKworCQkJIiAgICAgICAgICAgIGZpbGVSZWFkZXIucmVhZChp
bik7XG4iICsKKwkJCSIgICAgICAgICAgICB3aGlsZSAodHJ1ZSkge1xuIiArCisJCQkiICAgICAg
ICAgICAgICAgICBGaWxlUmVhZGVyIGxvb3BSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTsg
Ly8gZG9uJ3Qgd2FybiwgcHJvcGVybHkgY2xvc2VkXG4iICsKKwkJCSIgICAgICAgICAgICAgICAg
IGxvb3BSZWFkZXIuY2xvc2UoKTsiICsKKwkJCSIgICAgICAgICAgICAgICAgIGJyZWFrO1xuIiAr
CisJCQkiICAgICAgICAgICAgfVxuIiArCisJCQkiICAgICAgICB9IGVsc2Uge1xuIiArCisJCQki
ICAgICAgICAgICAgRmlsZVJlYWRlciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7
IC8vIHdhcm46IG5vdCBjbG9zZWQgb24gYWxsIHBhdGhzXG4iICsKKwkJCSIgICAgICAgICAgICBp
ZiAoZjIpXG4iICsKKwkJCSIgICAgICAgICAgICAgICAgZmlsZVJlYWRlci5jbG9zZSgpO1xuIiAr
CisJCQkiICAgICAgICB9XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCQl9LAorCQki
IiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJbnVsbCwKKwkJb3B0aW9ucywKKwkJbnVsbCk7Cit9Cisv
LyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVz
b3VyY2VzCisvLyB0aHJlZSBBdXRvQ2xvc2VhYmxlcyBpbiBkaWZmZXJlbnQgYmxvY2tzIG9mIHRo
ZSBzYW1lIG1ldGhvZAorcHVibGljIHZvaWQgdGVzdDA1NmkyKCkgeworCU1hcCBvcHRpb25zID0g
Z2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJf
VU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0
KEphdmFDb3JlLkNPTVBJTEVSX1BCX1BPVEVOVElBTExZX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29t
cGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9F
WFBMSUNJVExZX0NMT1NFRF9BVVRPQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuSUdOT1JFKTsK
Kwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAor
CQkJImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlUmVh
ZGVyO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJwdWJs
aWMgY2xhc3MgWCB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28oYm9vbGVhbiBmMSwgYm9vbGVhbiBm
MikgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3
IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAgaWYgKGYxKSB7XG4iICsKKwkJ
CSIgICAgICAgICAgICBGaWxlUmVhZGVyIGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxl
KTsgLy8gcHJvcGVybHkgY2xvc2VkXG4iICsKKwkJCSIgICAgICAgICAgICBjaGFyW10gaW4gPSBu
ZXcgY2hhcls1MF07XG4iICsKKwkJCSIgICAgICAgICAgICBmaWxlUmVhZGVyLnJlYWQoaW4pO1xu
IiArCisJCQkiICAgICAgICAgICAgd2hpbGUgKHRydWUpIHtcbiIgKworCQkJIiAgICAgICAgICAg
ICAgICAgIGZpbGVSZWFkZXIuY2xvc2UoKTtcbiIgKworCQkJIiAgICAgICAgICAgICAgICAgIEZp
bGVSZWFkZXIgbG9vcFJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpOyAvLyBkb24ndCB3YXJu
LCBwcm9wZXJseSBjbG9zZWRcbiIgKworCQkJIiAgICAgICAgICAgICAgICAgIGxvb3BSZWFkZXIu
Y2xvc2UoKTtcbiIgKworCQkJIiAgICAgICAgICAgICAgICAgIGJyZWFrO1xuIiArCisJCQkiICAg
ICAgICAgICAgfVxuIiArCisJCQkiICAgICAgICB9IGVsc2Uge1xuIiArCisJCQkiICAgICAgICAg
ICAgRmlsZVJlYWRlciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7IC8vIHdhcm46
IG5vdCBjbG9zZWQgb24gYWxsIHBhdGhzXG4iICsKKwkJCSIgICAgICAgICAgICBpZiAoZjIpXG4i
ICsKKwkJCSIgICAgICAgICAgICAgICAgZmlsZVJlYWRlci5jbG9zZSgpO1xuIiArCisJCQkiICAg
ICAgICB9XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBt
YWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAg
IG5ldyBYKCkuZm9vKHRydWUsIHRydWUpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIK
KwkJfSwKKwkJIi0tLS0tLS0tLS1cbiIgKworCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5l
IDE4KVxuIiArCisJCSIJRmlsZVJlYWRlciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoZmls
ZSk7IC8vIHdhcm46IG5vdCBjbG9zZWQgb24gYWxsIHBhdGhzXG4iICsKKwkJIgkgICAgICAgICAg
IF5eXl5eXl5eXl5cbiIgKworCQkiUG90ZW50aWFsIHJlc291cmNlIGxlYWs6ICdmaWxlUmVhZGVy
JyBtYXkgbm90IGJlIGNsb3NlZFxuIiArCisJCSItLS0tLS0tLS0tXG4iLAorCQludWxsLAorCQl0
cnVlLAorCQlvcHRpb25zKTsKK30KKy8vIEJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBm
b3IgbWlzc2luZyB0cnktd2l0aC1yZXNvdXJjZXMKKy8vIGEgbWV0aG9kIHVzZXMgYW4gQXV0b0Ns
b3NlYWJsZSB3aXRob3V0IGNsb3NpbmcgaXQgbG9jYWxseSBidXQgcGFzc2luZyBhcyBhcmcgdG8g
YW5vdGhlciBtZXRob2QKK3B1YmxpYyB2b2lkIHRlc3QwNTZqKCkgeworCU1hcCBvcHRpb25zID0g
Z2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElP
Tl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRp
b25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRD
bG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3Qo
CisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxl
O1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIgKworCQkJImltcG9ydCBq
YXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQki
ICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmls
ZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAgRmlsZVJl
YWRlciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsKKwkJCSIgICAgICAg
IHJlYWQoZmlsZVJlYWRlcik7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIHZvaWQgcmVh
ZChGaWxlUmVhZGVyIHJlYWRlcikgeyB9XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lk
IG1haW4oU3RyaW5nW10gYXJncykgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAg
ICAgbmV3IFgoKS5mb28oKTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJ
CSItLS0tLS0tLS0tXG4iICsKKwkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA3KVxuIiAr
CisJCSIJRmlsZVJlYWRlciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsK
KwkJIgkgICAgICAgICAgIF5eXl5eXl5eXl5cbiIgKworCQkiUG90ZW50aWFsIHJlc291cmNlIGxl
YWs6ICdmaWxlUmVhZGVyJyBtYXkgbm90IGJlIGNsb3NlZFxuIiArCisJCSItLS0tLS0tLS0tXG4i
LAorCQludWxsLAorCQl0cnVlLAorCQlvcHRpb25zKTsKK30KKy8vIEJ1ZyAzNDkzMjYgLSBbMS43
XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNvdXJjZXMKKy8vIGEgbWV0aG9k
IHVzZXMgYW4gQXV0b0Nsb3NlYWJsZSB3aXRob3V0IGNsb3NpbmcgaXQgbG9jYWxseSBidXQgcGFz
c2luZyBhcyBhcmcgdG8gYW5vdGhlciBtZXRob2QKK3B1YmxpYyB2b2lkIHRlc3QwNTZqY29uZGl0
aW9uYWwoKSB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25z
LnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21w
aWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05f
UmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9S
KTsKKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEi
LAorCQkJImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxl
UmVhZGVyO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJw
dWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28oYm9vbGVhbiBiKSB0aHJvd3Mg
SU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNv
bWVmaWxlXCIpO1xuIiArCisJCQkiICAgICAgICBGaWxlUmVhZGVyIGZpbGVSZWFkZXIgPSBuZXcg
RmlsZVJlYWRlcihmaWxlKTtcbiIgKworCQkJIiAgICAgICAgc3luY2hyb25pemVkIChiID8gdGhp
cyA6IG5ldyBYKCkpIHtcbiIgKworCQkJIiAgICAgICAgICAgIG5ldyBSZWFkRGVsZWdhdG9yKGZp
bGVSZWFkZXIpO1xuIiArCisJCQkiICAgICAgICB9XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQki
ICAgIGNsYXNzIFJlYWREZWxlZ2F0b3IgeyBSZWFkRGVsZWdhdG9yKEZpbGVSZWFkZXIgcmVhZGVy
KSB7IH0gfVxuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFy
Z3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIG5ldyBYKCkuZm9vKHRy
dWUpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIi0tLS0tLS0tLS1c
biIgKworCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDcpXG4iICsKKwkJIglGaWxlUmVh
ZGVyIGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTtcbiIgKworCQkiCSAgICAgICAg
ICAgXl5eXl5eXl5eXlxuIiArCisJCSJQb3RlbnRpYWwgcmVzb3VyY2UgbGVhazogJ2ZpbGVSZWFk
ZXInIG1heSBub3QgYmUgY2xvc2VkXG4iICsKKwkJIi0tLS0tLS0tLS1cbiIsCisJCW51bGwsCisJ
CXRydWUsCisJCW9wdGlvbnMpOworfQorLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5n
IGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNlcworLy8gbWFueSBsb2NhbHMsIHNvbWUgYXJl
IEF1dG9DbG9zZWFibGUuCisvLyBVbmZvcnR1bmF0ZWx5IGFuYWx5c2lzIGNhbm5vdCByZXNwZWN0
IGhvdyBleGNlcHRpb24gZXhpdHMgbWF5IGFmZmVjdCByYTMgYW5kIHJiMywKKy8vIGRvaW5nIHNv
IHdvdWxkIGNyZWF0ZSBmYWxzZSBwb3NpdGl2ZXMuCitwdWJsaWMgdm9pZCB0ZXN0MDU2aygpIHsK
KwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBp
bGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9u
cy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3Rl
bnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7CisJb3B0
aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRFeHBsaWNpdGx5Q2xvc2VkQXV0
b0Nsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlTdHJpbmcgZXhwZWN0ZWRQcm9i
bGVtcyA9IHRoaXMuY29tcGxpYW5jZUxldmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfNyA/
CisJCQkJIi0tLS0tLS0tLS1cbiIgKworCQkJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUg
MTUpXG4iICsKKwkJCQkiCXJhMiA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiArCisJCQkJIgle
Xl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXlxuIiArCisJCQkJIlJlc291cmNlIGxlYWs6IFwncmEy
XCcgaXMgbmV2ZXIgY2xvc2VkXG4iICsKKwkJCQkiLS0tLS0tLS0tLVxuIiArCisJCQkJIjIuIEVS
Uk9SIGluIFguamF2YSAoYXQgbGluZSAyOClcbiIgKworCQkJCSIJcmIyID0gbmV3IEZpbGVSZWFk
ZXIoZmlsZSk7XG4iICsKKwkJCQkiCV5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXG4iICsKKwkJ
CQkiUmVzb3VyY2UgbGVhazogXCdyYjJcJyBpcyBuZXZlciBjbG9zZWRcbiIgKworCQkJCSItLS0t
LS0tLS0tXG4iCisJCQk6CisJCQkJIi0tLS0tLS0tLS1cbiIgKworCQkJCSIxLiBFUlJPUiBpbiBY
LmphdmEgKGF0IGxpbmUgMTIpXG4iICsKKwkJCQkiCUZpbGVSZWFkZXIgcmExID0gbnVsbCwgcmEy
ID0gbnVsbDtcbiIgKworCQkJCSIJICAgICAgICAgICBeXl5cbiIgKworCQkJCSJSZXNvdXJjZSAn
cmExJyBzaG91bGQgYmUgbWFuYWdlZCBieSB0cnktd2l0aC1yZXNvdXJjZVxuIiArCisJCQkJIi0t
LS0tLS0tLS1cbiIgKworCQkJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTUpXG4iICsK
KwkJCQkiCXJhMiA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiArCisJCQkJIgleXl5eXl5eXl5e
Xl5eXl5eXl5eXl5eXl5eXlxuIiArCisJCQkJIlJlc291cmNlIGxlYWs6ICdyYTInIGlzIG5ldmVy
IGNsb3NlZFxuIiArCisJCQkJIi0tLS0tLS0tLS1cbiIgKworCQkJCSIzLiBFUlJPUiBpbiBYLmph
dmEgKGF0IGxpbmUgMTYpXG4iICsKKwkJCQkiCUZpbGVSZWFkZXIgcmEzID0gbmV3IEZpbGVSZWFk
ZXIoZmlsZSk7XG4iICsKKwkJCQkiCSAgICAgICAgICAgXl5eXG4iICsKKwkJCQkiUmVzb3VyY2Ug
J3JhMycgc2hvdWxkIGJlIG1hbmFnZWQgYnkgdHJ5LXdpdGgtcmVzb3VyY2VcbiIgKworCQkJCSIt
LS0tLS0tLS0tXG4iICsKKwkJCQkiNC4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDI1KVxuIiAr
CisJCQkJIglGaWxlUmVhZGVyIHJiMSA9IG51bGwsIHJiMiA9IG51bGw7XG4iICsKKwkJCQkiCSAg
ICAgICAgICAgXl5eXG4iICsKKwkJCQkiUmVzb3VyY2UgJ3JiMScgc2hvdWxkIGJlIG1hbmFnZWQg
YnkgdHJ5LXdpdGgtcmVzb3VyY2VcbiIgKworCQkJCSItLS0tLS0tLS0tXG4iICsKKwkJCQkiNS4g
RVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDI4KVxuIiArCisJCQkJIglyYjIgPSBuZXcgRmlsZVJl
YWRlcihmaWxlKTtcbiIgKworCQkJCSIJXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIgKwor
CQkJCSJSZXNvdXJjZSBsZWFrOiAncmIyJyBpcyBuZXZlciBjbG9zZWRcbiIgKworCQkJCSItLS0t
LS0tLS0tXG4iICsKKwkJCQkiNi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDI5KVxuIiArCisJ
CQkJIglGaWxlUmVhZGVyIHJiMyA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiArCisJCQkJIgkg
ICAgICAgICAgIF5eXlxuIiArCisJCQkJIlJlc291cmNlICdyYjMnIHNob3VsZCBiZSBtYW5hZ2Vk
IGJ5IHRyeS13aXRoLXJlc291cmNlXG4iICsKKwkJCQkiLS0tLS0tLS0tLVxuIjsKKwl0aGlzLnJ1
bk5lZ2F0aXZlVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9y
dCBqYXZhLmlvLkZpbGU7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlUmVhZGVyO1xuIiAr
CisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJwdWJsaWMgY2xhc3Mg
WCB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28oKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJ
CQkiICAgICAgICBpbnQgaTAxLCBpMDIsIGkwMywgaTA0LCBpMDUsIGkwNiwgaTA3LCBpMDgsIGkw
OSxcbiIgKworCQkJIiAgICAgICAgICAgIGkxMSwgaTEyLCBpMTMsIGkxNCwgaTE1LCBpMTYsIGkx
NywgaTE4LCBpMTksXG4iICsKKwkJCSIgICAgICAgICAgICBpMjEsIGkyMiwgaTIzLCBpMjQsIGky
NSwgaTI2LCBpMjcsIGkyOCwgaTI5LFxuIiArCisJCQkiICAgICAgICAgICAgaTMxLCBpMzIsIGkz
MywgaTM0LCBpMzUsIGkzNiwgaTM3LCBpMzgsIGkzOSxcbiIgKworCQkJIiAgICAgICAgICAgIGk0
MSwgaTQyLCBpNDMsIGk0NCwgaTQ1LCBpNDYsIGk0NywgaTQ4LCBpNDk7XG4iICsKKwkJCSIgICAg
ICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKKwkJCSIgICAgICAg
IEZpbGVSZWFkZXIgcmExID0gbnVsbCwgcmEyID0gbnVsbDtcbiIgKworCQkJIiAgICAgICAgdHJ5
IHtcbiIgKworCQkJIiAgICAgICAgICAgIHJhMSA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiAr
CisJCQkiICAgICAgICAgICAgcmEyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsKKwkJCSIg
ICAgICAgICAgICBGaWxlUmVhZGVyIHJhMyA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiArCisJ
CQkiICAgICAgICAgICAgY2hhcltdIGluID0gbmV3IGNoYXJbNTBdO1xuIiArCisJCQkiICAgICAg
ICAgICAgcmExLnJlYWQoaW4pO1xuIiArCisJCQkiICAgICAgICAgICAgcmEyLnJlYWQoaW4pO1xu
IiArCisJCQkiICAgICAgICAgICAgcmEzLmNsb3NlKCk7XG4iICsKKwkJCSIgICAgICAgIH0gZmlu
YWxseSB7XG4iICsKKwkJCSIgICAgICAgICAgICByYTEuY2xvc2UoKTtcbiIgKworCQkJIiAgICAg
ICAgfVxuIiArCisJCQkiICAgICAgICBpbnQgaTUxLCBpNTIsIGk1MywgaTU0LCBpNTUsIGk1Niwg
aTU3LCBpNTgsIGk1OSwgaTYwO1xuIiArIC8vIGJleW9uZCB0aGlzIHBvaW50IGxvY2FscyBhcmUg
YW5hbHl6ZWQgdXNpbmcgZXh0cmFCaXRzCisJCQkiICAgICAgICBGaWxlUmVhZGVyIHJiMSA9IG51
bGwsIHJiMiA9IG51bGw7XG4iICsKKwkJCSIgICAgICAgIHRyeSB7XG4iICsKKwkJCSIgICAgICAg
ICAgICByYjEgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTtcbiIgKworCQkJIiAgICAgICAgICAgIHJi
MiA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiArCisJCQkiICAgICAgICAgICAgRmlsZVJlYWRl
ciByYjMgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTtcbiIgKworCQkJIiAgICAgICAgICAgIGNoYXJb
XSBpbiA9IG5ldyBjaGFyWzUwXTtcbiIgKworCQkJIiAgICAgICAgICAgIHJiMS5yZWFkKGluKTtc
biIgKworCQkJIiAgICAgICAgICAgIHJiMi5yZWFkKGluKTtcbiIgKworCQkJIiAgICAgICAgICAg
IHJiMy5jbG9zZSgpO1xuIiArCisJCQkiICAgICAgICB9IGZpbmFsbHkge1xuIiArCisJCQkiICAg
ICAgICAgICAgcmIxLmNsb3NlKCk7XG4iICsKKwkJCSIgICAgICAgIH1cbiIgKworCQkJIiAgICB9
XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykgdGhy
b3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgbmV3IFgoKS5mb28oKTtcbiIgKwor
CQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCWV4cGVjdGVkUHJvYmxlbXMsCisJCW51
bGwsCisJCXRydWUsCisJCW9wdGlvbnMpOworfQorLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3
YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNlcworLy8gdmFyaW91cyBub24tcHJv
YmxlbXMKK3B1YmxpYyB2b2lkIHRlc3QwNTZsKCkgeworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGls
ZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRV
bmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChD
b21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUs
IENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9Q
VElPTl9SZXBvcnRFeHBsaWNpdGx5Q2xvc2VkQXV0b0Nsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25z
LkVSUk9SKTsKKwlTdHJpbmcgZXhwZWN0ZWRQcm9ibGVtcyA9IHRoaXMuY29tcGxpYW5jZUxldmVs
ID49IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzcgPworCQkJCSItLS0tLS0tLS0tXG4iICsKKwkJ
CQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDgpXG4iICsKKwkJCQkiCUZpbGVSZWFkZXIg
ZmlsZVJlYWRlciA9IGdldFJlYWRlcigpO1xuIiArCisJCQkJIgkgICAgICAgICAgIF5eXl5eXl5e
Xl5cbiIgKworCQkJCSJSZXNvdXJjZSAnZmlsZVJlYWRlcicgc2hvdWxkIGJlIG1hbmFnZWQgYnkg
dHJ5LXdpdGgtcmVzb3VyY2VcbiIgKworCQkJCSItLS0tLS0tLS0tXG4iICsKKwkJCQkiMi4gRVJS
T1IgaW4gWC5qYXZhIChhdCBsaW5lIDExKVxuIiArCisJCQkJIglGaWxlUmVhZGVyIHIzID0gZ2V0
UmVhZGVyKCk7XG4iICsKKwkJCQkiCSAgICAgICAgICAgXl5cbiIgKworCQkJCSJSZXNvdXJjZSAn
cjMnIHNob3VsZCBiZSBtYW5hZ2VkIGJ5IHRyeS13aXRoLXJlc291cmNlXG4iICsKKwkJCQkiLS0t
LS0tLS0tLVxuIiArCisJCQkJIjMuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAyNClcbiIgKwor
CQkJCSIJRmlsZVJlYWRlciByMiA9IG5ldyBGaWxlUmVhZGVyKG5ldyBGaWxlKFwiaW5leGlzdFwi
KSk7IC8vIG9ubHkgcG90ZW50aWFsIHByb2JsZW06IGN0b3IgWCBiZWxvdyBtaWdodCBjbG9zZSBy
MlxuIiArCisJCQkJIgkgICAgICAgICAgIF5eXG4iICsKKwkJCQkiUG90ZW50aWFsIHJlc291cmNl
IGxlYWs6ICdyMicgbWF5IG5vdCBiZSBjbG9zZWRcbiIgKworCQkJCSItLS0tLS0tLS0tXG4iCisJ
CQk6CisJCQkJIi0tLS0tLS0tLS1cbiIgKworCQkJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxp
bmUgMjQpXG4iICsKKwkJCQkiCUZpbGVSZWFkZXIgcjIgPSBuZXcgRmlsZVJlYWRlcihuZXcgRmls
ZShcImluZXhpc3RcIikpOyAvLyBvbmx5IHBvdGVudGlhbCBwcm9ibGVtOiBjdG9yIFggYmVsb3cg
bWlnaHQgY2xvc2UgcjJcbiIgKworCQkJCSIJICAgICAgICAgICBeXlxuIiArCisJCQkJIlBvdGVu
dGlhbCByZXNvdXJjZSBsZWFrOiAncjInIG1heSBub3QgYmUgY2xvc2VkXG4iICsKKwkJCQkiLS0t
LS0tLS0tLVxuIjsKKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJ
CSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsKKwkJCSJpbXBvcnQgamF2
YS5pby5GaWxlUmVhZGVyO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4i
ICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIgICAgWChGaWxlUmVhZGVyIHIwKSB7
fVxuIiArIC8vIGRvbid0IGNvbXBsYWluIGFnYWluc3QgYXJndW1lbnQKKwkJCSIgICAgRmlsZVJl
YWRlciBnZXRSZWFkZXIoKSB7IHJldHVybiBudWxsOyB9XG4iICsKKwkJCSIgICAgdm9pZCBmb28o
RmlsZVJlYWRlciByMSkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmls
ZVJlYWRlciBmaWxlUmVhZGVyID0gZ2V0UmVhZGVyKCk7XG4iICsKKwkJCSIgICAgICAgIGlmIChm
aWxlUmVhZGVyID09IG51bGwpXG4iICsKKwkJCSIgICAgICAgICAgICByZXR1cm47XG4iICsgLy8g
ZG9uJ3QgY29tcGxhaW4sIHJlc291cmNlIGlzIGFjdHVhbGx5IG51bGwKKwkJCSIgICAgICAgIEZp
bGVSZWFkZXIgcjMgPSBnZXRSZWFkZXIoKTtcbiIgKworCQkJIiAgICAgICAgaWYgKHIzID09IG51
bGwpXG4iICsKKwkJCSIgICAgICAgICAgICByMyA9IG5ldyBGaWxlUmVhZGVyKG5ldyBGaWxlKFwi
YWJzZW50XCIpKTtcbiIgKyAvLyBkb24ndCBjb21wbGFpbiwgcHJldmlvdXMgcmVzb3VyY2UgaXMg
YWN0dWFsbHkgbnVsbAorCQkJIiAgICAgICAgdHJ5IHtcbiIgKworCQkJIiAgICAgICAgICAgIGNo
YXJbXSBpbiA9IG5ldyBjaGFyWzUwXTtcbiIgKworCQkJIiAgICAgICAgICAgIGZpbGVSZWFkZXIu
cmVhZChpbik7XG4iICsKKwkJCSIgICAgICAgICAgICByMS5yZWFkKGluKTtcbiIgKworCQkJIiAg
ICAgICAgfSBmaW5hbGx5IHtcbiIgKworCQkJIiAgICAgICAgICAgIGZpbGVSZWFkZXIuY2xvc2Uo
KTtcbiIgKworCQkJIiAgICAgICAgICAgIHIzLmNsb3NlKCk7XG4iICsgIC8vIHRoZSBlZmZlY3Qg
b2YgdGhpcyBjbG9zZSgpIGNhbGwgbWlnaHQgYmUgc3BvaWxlZCBieSBleGNlcHRpb24gaW4gZmls
ZVJlYWRlci5jbG9zZSgpIGFib3ZlLCBidXQgd2UgaWdub3JlIGV4Y2VwdGlvbiBleGl0cyBpbiB0
aGUgYW5hbHlzaXMKKwkJCSIgICAgICAgIH1cbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSIgICAg
cHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykgdGhyb3dzIElPRXhjZXB0aW9u
IHtcbiIgKworCQkJIiAgICAgICAgRmlsZVJlYWRlciByMiA9IG5ldyBGaWxlUmVhZGVyKG5ldyBG
aWxlKFwiaW5leGlzdFwiKSk7IC8vIG9ubHkgcG90ZW50aWFsIHByb2JsZW06IGN0b3IgWCBiZWxv
dyBtaWdodCBjbG9zZSByMlxuIiArCisJCQkiICAgICAgICBuZXcgWChyMikuZm9vKG5ldyBGaWxl
UmVhZGVyKG5ldyBGaWxlKFwibm90dGhlcmVcIikpKTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJ
CSJ9XG4iCisJCX0sCisJCWV4cGVjdGVkUHJvYmxlbXMsCisJCW51bGwsCisJCXRydWUsCisJCW9w
dGlvbnMpOworfQorLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5n
IHRyeS13aXRoLXJlc291cmNlcworLy8gbmVzdGVkIHRyeSB3aXRoIGVhcmx5IGV4aXQKK3B1Ymxp
YyB2b2lkIHRlc3QwNTZtKCkgeworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7
CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3Nl
YWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlv
bnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0
aW9ucy5FUlJPUik7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJ
CSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsKKwkJCSJpbXBvcnQgamF2
YS5pby5GaWxlUmVhZGVyO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4i
ICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28oKSB7XG4iICsK
KwkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7IiArCisJCQki
ICAgICAgICB0cnkge1xuIiArCisJCQkiICAgICAgICAgICAgRmlsZVJlYWRlciBmaWxlUmVhZGVy
ID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsKKwkJCSIgICAgICAgICAgICB0cnkge1xuIiAr
CisJCQkiICAgICAgICAgICAgICAgIGNoYXJbXSBpbiA9IG5ldyBjaGFyWzUwXTtcbiIgKworCQkJ
IiAgICAgICAgICAgICAgICBpZiAoZmlsZVJlYWRlci5yZWFkKGluKT09MClcbiIgKworCQkJIiAg
ICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuIiArCisJCQkiICAgICAgICAgICAgfSBmaW5hbGx5
IHtcbiIgKworCQkJIgkJICAgICAgICAgZmlsZVJlYWRlci5jbG9zZSgpO1xuIiArCisJCQkiICAg
ICAgICAgICAgfVxuIiArCisJCQkiICAgICAgICB9IGNhdGNoIChJT0V4Y2VwdGlvbiBlKSB7XG4i
ICsKKwkJCSIgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oXCJjYXVnaHRcIik7XG4iICsK
KwkJCSIgICAgICAgIH1cbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRp
YyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIiArCisJCQkiICAgICAgICBuZXcgWCgpLmZv
bygpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJImNhdWdodCIsIC8q
b3V0cHV0Ki8KKwkJbnVsbC8qY2xhc3NMaWJzKi8sCisJCXRydWUvKnNob3VsZEZsdXNoKi8sCisJ
CW51bGwvKnZtYXJncyovLAorCQlvcHRpb25zLAorCQludWxsLypyZXF1ZXN0b3IqLyk7Cit9Cisv
LyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVz
b3VyY2VzCisvLyBuZXN0ZWQgdHJ5IHNob3VsZCBub3QgaW50ZXJmZXJlIHdpdGggZWFybGllciBh
bmFseXNpcy4KK3B1YmxpYyB2b2lkIHRlc3QwNTZuKCkgeworCU1hcCBvcHRpb25zID0gZ2V0Q29t
cGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBv
cnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1
dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFi
bGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJbmV3
IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsK
KwkJCSJpbXBvcnQgamF2YS5pby5GaWxlUmVhZGVyO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8u
SU9FeGNlcHRpb247XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlTm90Rm91bmRFeGNlcHRp
b247XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28oRmls
ZSBzb21lRmlsZSwgY2hhcltdIGJ1ZikgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIgkJ
RmlsZVJlYWRlciBmcjEgPSBuZXcgRmlsZVJlYWRlcihzb21lRmlsZSk7XG4iICsKKwkJCSIJCXRy
eSB7XG4iICsKKwkJCSIJCQlmcjEucmVhZChidWYpO1xuIiArCisJCQkiCQl9IGZpbmFsbHkge1xu
IiArCisJCQkiCQkJZnIxLmNsb3NlKCk7XG4iICsKKwkJCSIJCX1cbiIgKworCQkJIgkJdHJ5IHtc
biIgKworCQkJIgkJCUZpbGVSZWFkZXIgZnIzID0gbmV3IEZpbGVSZWFkZXIoc29tZUZpbGUpO1xu
IiArCisJCQkiCQkJdHJ5IHtcbiIgKworCQkJIgkJCX0gZmluYWxseSB7XG4iICsKKwkJCSIJCQkJ
ZnIzLmNsb3NlKCk7XG4iICsKKwkJCSIJCQl9XG4iICsKKwkJCSIJCX0gY2F0Y2ggKElPRXhjZXB0
aW9uIGUpIHtcbiIgKworCQkJIgkJfVxuIiArCisJCQkiCSB9XG4iICsKKwkJCSIgICAgcHVibGlj
IHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIg
KworCQkJIiAgICAgICAgdHJ5IHtcbiIgKworCQkJIiAgICAgICAgICAgIG5ldyBYKCkuZm9vKG5l
dyBGaWxlKFwibWlzc2luZ1wiKSwgbmV3IGNoYXJbMTAwXSk7XG4iICsKKwkJCSIgICAgICAgIH0g
Y2F0Y2ggKEZpbGVOb3RGb3VuZEV4Y2VwdGlvbiBlKSB7XG4iICsKKwkJCSIgICAgICAgICAgICBT
eXN0ZW0ub3V0LnByaW50bG4oXCJjYXVnaHRcIik7XG4iICsKKwkJCSIgICAgICAgIH1cbiIgKwor
CQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSJjYXVnaHQiLCAvKm91dHB1dCovCisJ
CW51bGwvKmNsYXNzTGlicyovLAorCQl0cnVlLypzaG91bGRGbHVzaCovLAorCQludWxsLyp2bWFy
Z3MqLywKKwkJb3B0aW9ucywKKwkJbnVsbC8qcmVxdWVzdG9yKi8pOworfQorLy8gQnVnIDM0OTMy
NiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNlcworLy8g
aWYgY2xvc2UgaXMgZ3VhcmRlZCBieSBudWxsIGNoZWNrIHRoaXMgc2hvdWxkIHN0aWxsIGJlIHJl
Y29nbml6ZWQgYXMgZGVmaW5pdGVseSBjbG9zZWQKK3B1YmxpYyB2b2lkIHRlc3QwNTZvKCkgewor
CU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGls
ZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25z
LkVSUk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVu
dGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJdGhpcy5y
dW5Db25mb3JtVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9y
dCBqYXZhLmlvLkZpbGU7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlUmVhZGVyO1xuIiAr
CisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJpbXBvcnQgamF2YS5p
by5GaWxlTm90Rm91bmRFeGNlcHRpb247XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsK
KwkJCSIgICAgdm9pZCBmb28oRmlsZSBzb21lRmlsZSwgY2hhcltdIGJ1ZikgdGhyb3dzIElPRXhj
ZXB0aW9uIHtcbiIgKworCQkJIgkJRmlsZVJlYWRlciBmcjEgPSBudWxsO1xuIiArCisJCQkiCQl0
cnkge1xuIiArCisJCQkiICAgICAgICAgICBmcjEgPSBuZXcgRmlsZVJlYWRlcihzb21lRmlsZSk7
IiArCisJCQkiCQkJZnIxLnJlYWQoYnVmKTtcbiIgKworCQkJIgkJfSBmaW5hbGx5IHtcbiIgKwor
CQkJIgkJCWlmIChmcjEgIT0gbnVsbClcbiIgKworCQkJIiAgICAgICAgICAgICAgIHRyeSB7XG4i
ICsKKwkJCSIgICAgICAgICAgICAgICAgICAgZnIxLmNsb3NlKCk7XG4iICsKKwkJCSIgICAgICAg
ICAgICAgICB9IGNhdGNoIChJT0V4Y2VwdGlvbiBlKSB7IC8qZG8gbm90aGluZyovIH1cbiIgKwor
CQkJIgkJfVxuIiArCisJCQkiCSB9XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1h
aW4oU3RyaW5nW10gYXJncykgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAg
dHJ5IHtcbiIgKworCQkJIiAgICAgICAgICAgIG5ldyBYKCkuZm9vKG5ldyBGaWxlKFwibWlzc2lu
Z1wiKSwgbmV3IGNoYXJbMTAwXSk7XG4iICsKKwkJCSIgICAgICAgIH0gY2F0Y2ggKEZpbGVOb3RG
b3VuZEV4Y2VwdGlvbiBlKSB7XG4iICsKKwkJCSIgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50
bG4oXCJjYXVnaHRcIik7XG4iICsKKwkJCSIgICAgICAgIH1cbiIgKworCQkJIiAgICB9XG4iICsK
KwkJCSJ9XG4iCisJCX0sCisJCSJjYXVnaHQiLCAvKm91dHB1dCovCisJCW51bGwvKmNsYXNzTGli
cyovLAorCQl0cnVlLypzaG91bGRGbHVzaCovLAorCQludWxsLyp2bWFyZ3MqLywKKwkJb3B0aW9u
cywKKwkJbnVsbC8qcmVxdWVzdG9yKi8pOworfQorLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3
YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNlcworLy8gQnVnIDM2MjMzMiAtIE9u
bHkgcmVwb3J0IHBvdGVudGlhbCBsZWFrIHdoZW4gY2xvc2VhYmxlIG5vdCBjcmVhdGVkIGluIHRo
ZSBsb2NhbCBzY29wZQorLy8gYSBtZXRob2QgdXNlcyBhbiBBdXRvQ2xvc2VhYmxlIHdpdGhvdXQg
ZXZlciBjbG9zaW5nIGl0LCB0eXBlIGZyb20gYSB0eXBlIHZhcmlhYmxlCitwdWJsaWMgdm9pZCB0
ZXN0MDU2cCgpIHsKKwlpZiAodGhpcy5jb21wbGlhbmNlTGV2ZWwgPCBDbGFzc0ZpbGVDb25zdGFu
dHMuSkRLMV81KSByZXR1cm47IC8vIGdlbmVyaWNzIHVzZWQKKwlNYXAgb3B0aW9ucyA9IGdldENv
bXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVw
b3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5w
dXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2Vh
YmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQlu
ZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIg
KworCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFkZXI7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5p
by5SZWFkZXI7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJ
InB1YmxpYyBhYnN0cmFjdCBjbGFzcyBYIDxUIGV4dGVuZHMgUmVhZGVyPiB7XG4iICsKKwkJCSIg
ICAgdm9pZCBmb28oKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBGaWxl
IGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xuIiArCisJCQkiICAgICAgICBUIGZpbGVS
ZWFkZXIgPSBuZXdSZWFkZXIoZmlsZSk7XG4iICsKKwkJCSIgICAgICAgIGNoYXJbXSBpbiA9IG5l
dyBjaGFyWzUwXTtcbiIgKworCQkJIiAgICAgICAgZmlsZVJlYWRlci5yZWFkKGluKTtcbiIgKwor
CQkJIiAgICB9XG4iICsKKwkJCSIgICAgYWJzdHJhY3QgVCBuZXdSZWFkZXIoRmlsZSBmaWxlKSB0
aHJvd3MgSU9FeGNlcHRpb247XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4o
U3RyaW5nW10gYXJncykgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgbmV3
IFg8RmlsZVJlYWRlcj4oKSB7XG4iICsKKwkJCSIgICAgICAgICAgICBGaWxlUmVhZGVyIG5ld1Jl
YWRlcihGaWxlIGYpIHRocm93cyBJT0V4Y2VwdGlvbiB7IHJldHVybiBuZXcgRmlsZVJlYWRlcihm
KTsgfVxuIiArCisJCQkiICAgICAgICB9LmZvbygpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJ
In1cbiIKKwkJfSwKKwkJIi0tLS0tLS0tLS1cbiIgKworCQkiMS4gRVJST1IgaW4gWC5qYXZhIChh
dCBsaW5lIDgpXG4iICsKKwkJIglUIGZpbGVSZWFkZXIgPSBuZXdSZWFkZXIoZmlsZSk7XG4iICsK
KwkJIgkgIF5eXl5eXl5eXl5cbiIgKworCQkiUG90ZW50aWFsIHJlc291cmNlIGxlYWs6IFwnZmls
ZVJlYWRlclwnIG1heSBub3QgYmUgY2xvc2VkXG4iICsKKwkJIi0tLS0tLS0tLS1cbiIsCisJCW51
bGwsCisJCXRydWUsCisJCW9wdGlvbnMpOworfQorLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3
YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNlcworLy8gY2xvc2VkIGluIGRlYWQg
Y29kZQorcHVibGljIHZvaWQgdGVzdDA1NnEoKSB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxl
ck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9VTkNMT1NFRF9D
TE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoSmF2YUNvcmUu
Q09NUElMRVJfUEJfUE9URU5USUFMTFlfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlv
bnMuV0FSTklORyk7CisJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfRVhQTElDSVRM
WV9DTE9TRURfQVVUT0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLklHTk9SRSk7CisJdGhpcy5y
dW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBv
cnQgamF2YS5pby5GaWxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIg
KworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGljIGNsYXNz
IFgge1xuIiArCisJCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwor
CQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKworCQkJ
IiAgICAgICAgRmlsZVJlYWRlciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4i
ICsKKwkJCSIgICAgICAgIGNoYXJbXSBpbiA9IG5ldyBjaGFyWzUwXTtcbiIgKworCQkJIiAgICAg
ICAgZmlsZVJlYWRlci5yZWFkKGluKTtcbiIgKworCQkJIiAgICAgICAgaWYgKDIqMiA9PSA0KVxu
IiArCisJCQkiICAgICAgICAJcmV0dXJuO1xuIiArCisJCQkiICAgICAgICBmaWxlUmVhZGVyLmNs
b3NlKCk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBt
YWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAg
IG5ldyBYKCkuZm9vKCk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCQl9LAorCQki
LS0tLS0tLS0tLVxuIiArCisJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNylcbiIgKwor
CQkiCUZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiArCisJ
CSIJICAgICAgICAgICBeXl5eXl5eXl5eXG4iICsKKwkJIlJlc291cmNlIGxlYWs6ICdmaWxlUmVh
ZGVyJyBpcyBuZXZlciBjbG9zZWRcbiIgKworCQkiLS0tLS0tLS0tLVxuIiArCisJCSIyLiBXQVJO
SU5HIGluIFguamF2YSAoYXQgbGluZSAxMClcbiIgKworCQkiCWlmICgyKjIgPT0gNClcbiIgKwor
CQkiCSAgICBeXl5eXl5eXlxuIiArCisJCSJDb21wYXJpbmcgaWRlbnRpY2FsIGV4cHJlc3Npb25z
XG4iICsKKwkJIi0tLS0tLS0tLS1cbiIgKworCQkiMy4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxp
bmUgMTIpXG4iICsKKwkJIglmaWxlUmVhZGVyLmNsb3NlKCk7XG4iICsKKwkJIgleXl5eXl5eXl5e
Xl5eXl5eXl5cbiIgKworCQkiRGVhZCBjb2RlXG4iICsKKwkJIi0tLS0tLS0tLS1cbiIsCisJCW51
bGwsCisJCXRydWUsCisJCW9wdGlvbnMpOworfQorLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3
YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNlcworLy8gcHJvcGVybHkgY2xvc2Vk
LCBkZWFkIGNvZGUgaW4gYmV0d2VlbgorcHVibGljIHZvaWQgdGVzdDA1NnIoKSB7CisJTWFwIG9w
dGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01Q
SUxFUl9QQl9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0
aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfUE9URU5USUFMTFlfVU5DTE9TRURfQ0xPU0VB
QkxFLCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7CisJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09N
UElMRVJfUEJfRVhQTElDSVRMWV9DTE9TRURfQVVUT0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25z
LklHTk9SRSk7CisJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfREVBRF9DT0RFLCBD
b21waWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQluZXcgU3Ry
aW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKworCQkJ
ImltcG9ydCBqYXZhLmlvLkZpbGVSZWFkZXI7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4
Y2VwdGlvbjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICB2b2lkIGZv
bygpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5l
dyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKKwkJCSIgICAgICAgIEZpbGVSZWFkZXIgZnIgPSBu
ZXcgRmlsZVJlYWRlcihmaWxlKTtcbiIgKworCQkJIiAgCQkgT2JqZWN0IGIgPSBudWxsO1xuIiAr
CisJCQkiICAgICAgICBmci5jbG9zZSgpO1xuIiArCisJCQkiICAgICAgICBpZiAoYiAhPSBudWxs
KSB7XG4iICsKKwkJCSIgICAgICAgICAgICBmciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiAr
CisJCQkiICAgICAgICAgICAgcmV0dXJuO1xuIiArCisJCQkiICAgICAgICB9IGVsc2Uge1xuIiAr
CisJCQkiICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludCg0Mik7XG4iICsKKwkJCSIgICAgICAg
IH1cbiIgKworCQkJIiAgICAgICAgcmV0dXJuOyAgICAgLy8gU2hvdWxkIG5vdCBjb21wbGFpbiBh
Ym91dCBmclxuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQg
bWFpbihTdHJpbmdbXSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAg
ICBuZXcgWCgpLmZvbygpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJ
Ii0tLS0tLS0tLS1cbiIgKworCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDEwKVxuIiAr
CisJCSIJaWYgKGIgIT0gbnVsbCkge1xuIiArCisJCSIgICAgICAgICAgICBmciA9IG5ldyBGaWxl
UmVhZGVyKGZpbGUpO1xuIiArCisJCSIgICAgICAgICAgICByZXR1cm47XG4iICsKKwkJIiAgICAg
ICAgfSBlbHNlIHtcbiIgKworCQkiCSAgICAgICAgICAgICAgIF5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIgKwor
CQkiRGVhZCBjb2RlXG4iICsKKwkJIi0tLS0tLS0tLS1cbiIgKworCQkiMi4gV0FSTklORyBpbiBY
LmphdmEgKGF0IGxpbmUgMTMpXG4iICsKKwkJIgl9IGVsc2Uge1xuIiArCisJCSIgICAgICAgICAg
ICBTeXN0ZW0ub3V0LnByaW50KDQyKTtcbiIgKworCQkiICAgICAgICB9XG4iICsKKwkJIgkgICAg
ICAgXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXG4iICsKKwkJ
IlN0YXRlbWVudCB1bm5lY2Vzc2FyaWx5IG5lc3RlZCB3aXRoaW4gZWxzZSBjbGF1c2UuIFRoZSBj
b3JyZXNwb25kaW5nIHRoZW4gY2xhdXNlIGRvZXMgbm90IGNvbXBsZXRlIG5vcm1hbGx5XG4iICsK
KwkJIi0tLS0tLS0tLS1cbiIsCisJCW51bGwsCisJCXRydWUsCisJCW9wdGlvbnMpOworfQorLy8g
QnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291
cmNlcworLy8gcmVzb3VyY2UgaW5zaWRlIHQtdy1yIGlzIHJlLWFzc2lnbmVkLCBzaG91bGRuJ3Qg
ZXZlbiByZWNvcmQgYW4gZXJyb3JMb2NhdGlvbgorcHVibGljIHZvaWQgdGVzdDA1NnMoKSB7CisJ
aWYgKHRoaXMuY29tcGxpYW5jZUxldmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfNykgcmV0
dXJuOyAvLyB0LXctciB1c2VkCisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsK
KwlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9VTkNMT1NFRF9DTE9TRUFCTEUsIENv
bXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJf
UE9URU5USUFMTFlfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7
CisJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfRVhQTElDSVRMWV9DTE9TRURfQVVU
T0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLklHTk9SRSk7CisJdGhpcy5ydW5OZWdhdGl2ZVRl
c3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5G
aWxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIgKworCQkJImltcG9y
dCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJ
CQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAg
RmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAgdHJ5
IChGaWxlUmVhZGVyIGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTspIHtcbiIgKwor
CQkJIiAgICAgICAgICAgIGNoYXJbXSBpbiA9IG5ldyBjaGFyWzUwXTtcbiIgKworCQkJIiAgICAg
ICAgICAgIGZpbGVSZWFkZXIucmVhZChpbik7XG4iICsKKwkJCSIgICAgICAgICAgICBmaWxlUmVh
ZGVyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7ICAvLyBkZWJ1ZyBoZXJlXG4iICsKKwkJCSIgICAg
ICAgICAgICBmaWxlUmVhZGVyLnJlYWQoaW4pO1xuIiArCisJCQkiICAgICAgICB9XG4iICsKKwkJ
CSIgICAgfVxuIiArCisJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFy
Z3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIG5ldyBYKCkuZm9vKCk7
XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCQl9LAorCQkiLS0tLS0tLS0tLVxuIiAr
CisJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTApXG4iICsKKwkJIglmaWxlUmVhZGVy
ID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7ICAvLyBkZWJ1ZyBoZXJlXG4iICsKKwkJIgleXl5eXl5e
Xl5eXG4iICsKKwkJIlRoZSByZXNvdXJjZSBmaWxlUmVhZGVyIG9mIGEgdHJ5LXdpdGgtcmVzb3Vy
Y2VzIHN0YXRlbWVudCBjYW5ub3QgYmUgYXNzaWduZWRcbiIgKworCQkiLS0tLS0tLS0tLVxuIiwK
KwkJbnVsbCwKKwkJdHJ1ZSwKKwkJb3B0aW9ucyk7Cit9CisvLyBCdWcgMzQ5MzI2IC0gWzEuN10g
bmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCisvLyByZXNvdXJjZSBp
cyBjbG9zZWQsIGRlYWQgY29kZSBmb2xsb3dzCitwdWJsaWMgdm9pZCB0ZXN0MDU2dCgpIHsKKwlN
YXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KEphdmFDb3Jl
LkNPTVBJTEVSX1BCX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsK
KwlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9QT1RFTlRJQUxMWV9VTkNMT1NFRF9D
TE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5XQVJOSU5HKTsKKwlvcHRpb25zLnB1dChKYXZhQ29y
ZS5DT01QSUxFUl9QQl9ERUFEX0NPREUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJdGhpcy5y
dW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBv
cnQgamF2YS5pby5GaWxlUmVhZGVyO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRp
b247XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28zMSgp
IHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZpbGVSZWFkZXIgcmVhZGVy
ID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlXCIpOyAvL3dhcm5pbmdcbiIgKworCQkJIiAgICAgICAg
aWYgKHJlYWRlciAhPSBudWxsKSB7XG4iICsKKwkJCSIgICAgICAgICAgICByZWFkZXIuY2xvc2Uo
KTtcbiIgKworCQkJIiAgICAgICAgfSBlbHNlIHtcbiIgKworCQkJIiAgICAgICAgICAgIC8vIG5v
cFxuIiArCisJCQkiICAgICAgICB9XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIHB1Ymxp
YyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4i
ICsKKwkJCSIgICAgICAgIG5ldyBYKCkuZm9vMzEoKTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJ
CSJ9XG4iCisJCX0sCisJCSItLS0tLS0tLS0tXG4iICsKKwkJIjEuIEVSUk9SIGluIFguamF2YSAo
YXQgbGluZSA4KVxuIiArCisJCSIJfSBlbHNlIHtcbiIgKworCQkiICAgICAgICAgICAgLy8gbm9w
XG4iICsKKwkJIiAgICAgICAgfVxuIiArCisJCSIJICAgICAgIF5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXlxuIiArCisJCSJEZWFkIGNvZGVcbiIgKworCQkiLS0tLS0tLS0tLVxuIiwKKwkJ
bnVsbCwKKwkJdHJ1ZSwKKwkJb3B0aW9ucyk7Cit9CisvLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3
IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCisvLyByZXNvdXJjZSBpcyBy
ZWFzc2lnbmVkIHdpdGhpbiB0LXctciB3aXRoIGRpZmZlcmVudCByZXNvdXJjZQorLy8gd2FzIGlu
aXRpYWxseSBicm9rZW4gZHVlIHRvIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy8zNTg4MjcKK3B1
YmxpYyB2b2lkIHRlc3QwNTZ1KCkgeworCWlmICh0aGlzLmNvbXBsaWFuY2VMZXZlbCA8IENsYXNz
RmlsZUNvbnN0YW50cy5KREsxXzcpIHJldHVybjsgLy8gdC13LXIgdXNlZAorCU1hcCBvcHRpb25z
ID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJf
UEJfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMu
cHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX1BPVEVOVElBTExZX1VOQ0xPU0VEX0NMT1NFQUJMRSwg
Q29tcGlsZXJPcHRpb25zLldBUk5JTkcpOworCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVS
X1BCX0RFQURfQ09ERSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1bk5lZ2F0aXZl
VGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZhLmlv
LkZpbGVSZWFkZXI7XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIgICAgdm9p
ZCBmb28oKSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmlsZVJlYWRlciBy
ZWFkZXIxID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlMVwiKTtcbiIgKworCQkJIiAgICAgICAgRmls
ZVJlYWRlciByZWFkZXIyID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlMlwiKTtcbiIgKworCQkJIiAg
ICAgICAgcmVhZGVyMiA9IHJlYWRlcjE7Ly8gdGhpcyBkaXNjb25uZWN0cyByZWFkZXIgMlxuIiAr
CisJCQkiICAgICAgICB0cnkgKEZpbGVSZWFkZXIgcmVhZGVyMyA9IG5ldyBGaWxlUmVhZGVyKFwi
ZmlsZTNcIikpIHtcbiIgKworCQkJIiAgICAgICAgICAgIGludCBjaDtcbiIgKworCQkJIiAgICAg
ICAgICAgIHdoaWxlICgoY2ggPSByZWFkZXIyLnJlYWQoKSkgIT0gLTEpIHtcbiIgKworCQkJIiAg
ICAgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oY2gpO1xuIiArCisJCQkiICAgICAgICAg
ICAgICAgIHJlYWRlcjEucmVhZCgpO1xuIiArCisJCQkiICAgICAgICAgICAgfVxuIiArCisJCQki
ICAgICAgICAgICAgcmVhZGVyMiA9IHJlYWRlcjE7IC8vIHdhcm5pbmcgMSByZWdhcmRpbmcgb3Jp
Z2luYWwgcmVhZGVyMVxuIiArIC8vIHRoaXMgd2FybmluZyB3YXMgbWlzc2luZworCQkJIiAgICAg
ICAgICAgIHJlYWRlcjIgPSByZWFkZXIxOyAvLyB3YXJuaW5nIDIgcmVnYXJkaW5nIG9yaWdpbmFs
IHJlYWRlcjFcbiIgKworCQkJIiAgICAgICAgfSBmaW5hbGx5IHtcbiIgKworCQkJIiAgICAgICAg
ICAgIGlmIChyZWFkZXIyICE9IG51bGwpIHtcbiIgKworCQkJIiAgICAgICAgICAgICAgICByZWFk
ZXIyLmNsb3NlKCk7XG4iICsKKwkJCSIgICAgICAgICAgICB9IGVsc2Uge1xuIiArCisJCQkiICAg
ICAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbigpO1xuIiArCisJCQkiICAgICAgICAgICAg
fVxuIiArCisJCQkiICAgICAgICB9XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCQl9
LAorCQkiLS0tLS0tLS0tLVxuIiArCisJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNSlc
biIgKworCQkiCUZpbGVSZWFkZXIgcmVhZGVyMiA9IG5ldyBGaWxlUmVhZGVyKFwiZmlsZTJcIik7
XG4iICsKKwkJIgkgICAgICAgICAgIF5eXl5eXl5cbiIgKworCQkiUmVzb3VyY2UgbGVhazogJ3Jl
YWRlcjInIGlzIG5ldmVyIGNsb3NlZFxuIiArCisJCSItLS0tLS0tLS0tXG4iICsKKwkJIjIuIEVS
Uk9SIGluIFguamF2YSAoYXQgbGluZSAxMylcbiIgKworCQkiCXJlYWRlcjIgPSByZWFkZXIxOyAv
LyB3YXJuaW5nIDEgcmVnYXJkaW5nIG9yaWdpbmFsIHJlYWRlcjFcbiIgKworCQkiCV5eXl5eXl5e
Xl5eXl5eXl5eXG4iICsKKwkJIlJlc291cmNlIGxlYWs6ICdyZWFkZXIxJyBpcyBub3QgY2xvc2Vk
IGF0IHRoaXMgbG9jYXRpb25cbiIgKworCQkiLS0tLS0tLS0tLVxuIiArCisJCSIzLiBFUlJPUiBp
biBYLmphdmEgKGF0IGxpbmUgMTQpXG4iICsKKwkJIglyZWFkZXIyID0gcmVhZGVyMTsgLy8gd2Fy
bmluZyAyIHJlZ2FyZGluZyBvcmlnaW5hbCByZWFkZXIxXG4iICsKKwkJIgleXl5eXl5eXl5eXl5e
Xl5eXlxuIiArCisJCSJSZXNvdXJjZSBsZWFrOiAncmVhZGVyMScgaXMgbm90IGNsb3NlZCBhdCB0
aGlzIGxvY2F0aW9uXG4iICsKKwkJIi0tLS0tLS0tLS1cbiIsCisJCW51bGwsCisJCXRydWUsCisJ
CW9wdGlvbnMpOworfQorLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNz
aW5nIHRyeS13aXRoLXJlc291cmNlcworLy8gc2NvcGUtcmVsYXRlZCBwYnMgcmVwb3J0ZWQgaW4g
aHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnLzM0OTMyNiNjNzAgYW5kIGh0dHBzOi8vYnVncy5lY2xp
cHNlLm9yZy8zNDkzMjYjYzgyCitwdWJsaWMgdm9pZCB0ZXN0MDU2digpIHsKKwlNYXAgb3B0aW9u
cyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVS
X1BCX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25z
LnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9QT1RFTlRJQUxMWV9VTkNMT1NFRF9DTE9TRUFCTEUs
IENvbXBpbGVyT3B0aW9ucy5XQVJOSU5HKTsKKwlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxF
Ul9QQl9FWFBMSUNJVExZX0NMT1NFRF9BVVRPQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuV0FS
TklORyk7CisJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfREVBRF9DT0RFLCBDb21w
aWxlck9wdGlvbnMuRVJST1IpOworCVN0cmluZyBleHBlY3RlZFByb2JsZW1zID0gdGhpcy5jb21w
bGlhbmNlTGV2ZWwgPj0gQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfNyA/CisJCQkJIi0tLS0tLS0t
LS1cbiIgKworCQkJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNClcbiIgKworCQkJCSIJ
RmlsZVJlYWRlciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihcImZpbGVcIik7XG4iICsKKwkJCQki
CSAgICAgICAgICAgXl5eXl5eXG4iICsKKwkJCQkiUmVzb3VyY2UgbGVhazogJ3JlYWRlcicgaXMg
bmV2ZXIgY2xvc2VkXG4iICsKKwkJCQkiLS0tLS0tLS0tLVxuIiArCisJCQkJIjIuIFdBUk5JTkcg
aW4gWC5qYXZhIChhdCBsaW5lIDE5KVxuIiArCisJCQkJIglGaWxlUmVhZGVyIHJlYWRlcjExMSA9
IG5ldyBGaWxlUmVhZGVyKFwiZmlsZTJcIik7XG4iICsKKwkJCQkiCSAgICAgICAgICAgXl5eXl5e
Xl5eXG4iICsKKwkJCQkiUmVzb3VyY2UgJ3JlYWRlcjExMScgc2hvdWxkIGJlIG1hbmFnZWQgYnkg
dHJ5LXdpdGgtcmVzb3VyY2VcbiIgKworCQkJCSItLS0tLS0tLS0tXG4iICsKKwkJCQkiMy4gRVJS
T1IgaW4gWC5qYXZhIChhdCBsaW5lIDQyKVxuIiArCisJCQkJIglyZXR1cm47XG4iICsKKwkJCQki
CV5eXl5eXl5cbiIgKworCQkJCSJSZXNvdXJjZSBsZWFrOiAncmVhZGVyMicgaXMgbm90IGNsb3Nl
ZCBhdCB0aGlzIGxvY2F0aW9uXG4iICsKKwkJCQkiLS0tLS0tLS0tLVxuIgorCQkJOgorCQkJCSIt
LS0tLS0tLS0tXG4iICsKKwkJCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDQpXG4iICsK
KwkJCQkiCUZpbGVSZWFkZXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlXCIpO1xuIiAr
CisJCQkJIgkgICAgICAgICAgIF5eXl5eXlxuIiArCisJCQkJIlJlc291cmNlIGxlYWs6ICdyZWFk
ZXInIGlzIG5ldmVyIGNsb3NlZFxuIiArCisJCQkJIi0tLS0tLS0tLS1cbiIgKworCQkJCSIyLiBF
UlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNDIpXG4iICsKKwkJCQkiCXJldHVybjtcbiIgKworCQkJ
CSIJXl5eXl5eXlxuIiArCisJCQkJIlJlc291cmNlIGxlYWs6ICdyZWFkZXIyJyBpcyBub3QgY2xv
c2VkIGF0IHRoaXMgbG9jYXRpb25cbiIgKworCQkJCSItLS0tLS0tLS0tXG4iOworCXRoaXMucnVu
TmVnYXRpdmVUZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0
IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJ
IiAgICBib29sZWFuIGZvbzEoKSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAg
RmlsZVJlYWRlciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihcImZpbGVcIik7XG4iICsKKwkJCSIg
ICAgICAgIHRyeSB7XG4iICsKKwkJCSIgICAgICAgICAgICBpbnQgY2g7XG4iICsKKwkJCSIgICAg
ICAgICAgICB3aGlsZSAoKGNoID0gcmVhZGVyLnJlYWQoKSkgIT0gLTEpIHtcbiIgKworCQkJIiAg
ICAgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oY2gpO1xuIiArCisJCQkiICAgICAgICAg
ICAgICAgIHJlYWRlci5yZWFkKCk7XG4iICsKKwkJCSIgICAgICAgICAgICB9XG4iICsKKwkJCSIg
ICAgICAgICAgICBpZiAoY2ggPiAxMCkge1xuIiArCisJCQkiICAgICAgICAgICAgICAgIHJldHVy
biB0cnVlO1xuIiArCisJCQkiICAgICAgICAgICAgfVxuIiArCisJCQkiICAgICAgICAgICAgcmV0
dXJuIGZhbHNlO1xuIiArIC8vIHJldHVybiB3aGlsZSByZXNvdXJjZSBmcm9tIGVuY2xvc2luZyBz
Y29wZSByZW1haW5zIHVuY2xvc2VkCisJCQkiICAgICAgICB9IGZpbmFsbHkge1xuIiArCisJCQki
ICAgICAgICB9XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIHZvaWQgZm9vMTExKCkgdGhy
b3dzIEV4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZpbGVSZWFkZXIgcmVhZGVyMTExID0g
bmV3IEZpbGVSZWFkZXIoXCJmaWxlMlwiKTtcbiIgKworCQkJIiAgICAgICAgdHJ5IHtcbiIgKwor
CQkJIiAgICAgICAgICAgIGludCBjaDtcbiIgKworCQkJIiAgICAgICAgICAgIHdoaWxlICgoY2gg
PSByZWFkZXIxMTEucmVhZCgpKSAhPSAtMSkge1xuIiArCisJCQkiICAgICAgICAgICAgICAgIFN5
c3RlbS5vdXQucHJpbnRsbihjaCk7XG4iICsKKwkJCSIgICAgICAgICAgICAgICAgcmVhZGVyMTEx
LnJlYWQoKTtcbiIgKworCQkJIiAgICAgICAgICAgIH1cbiIgKworCQkJIiAgICAgICAgICAgIHJl
dHVybjtcbiIgKyAvLyB0aGlzIHNob3VsZG4ndCBzcG9pbCB0aGUgd2FybmluZyAic2hvdWxkIGJl
IG1hbmFnZWQgd2l0aCB0LXctciIKKwkJCSIgICAgICAgIH0gZmluYWxseSB7XG4iICsKKwkJCSIg
ICAgICAgICAgICBpZiAocmVhZGVyMTExICE9IG51bGwpIHtcbiIgKworCQkJIiAgICAgICAgICAg
ICAgICByZWFkZXIxMTEuY2xvc2UoKTtcbiIgKworCQkJIiAgICAgICAgICAgIH1cbiIgKworCQkJ
IiAgICAgICAgfVxuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICB2b2lkIGZvbzIoKSB0aHJv
d3MgRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmlsZVJlYWRlciByZWFkZXIyID0gbmV3
IEZpbGVSZWFkZXIoXCJmaWxlXCIpO1xuIiArCisJCQkiICAgICAgICB0cnkge1xuIiArCisJCQki
ICAgICAgICAgICAgaW50IGNoO1xuIiArCisJCQkiICAgICAgICAgICAgd2hpbGUgKChjaCA9IHJl
YWRlcjIucmVhZCgpKSAhPSAtMSkge1xuIiArCisJCQkiICAgICAgICAgICAgICAgIFN5c3RlbS5v
dXQucHJpbnRsbihjaCk7XG4iICsKKwkJCSIgICAgICAgICAgICAgICAgcmVhZGVyMi5yZWFkKCk7
XG4iICsKKwkJCSIgICAgICAgICAgICB9XG4iICsKKwkJCSIgICAgICAgICAgICBpZiAoY2ggPiAx
MCkge1xuIiArCisJCQkiICAgICAgICAgICAgICAgIHJldHVybjtcbiIgKyAvLyBwb3RlbnRpYWwg
bGVhaworCQkJIiAgICAgICAgICAgIH1cbiIgKworCQkJIiAgICAgICAgfSBmaW5hbGx5IHtcbiIg
KworCQkJIiAgICAgICAgfVxuIiArCisJCQkiICAgICAgICByZWFkZXIyLmNsb3NlKCk7XG4iICsg
Ly8gZHVlIHRvIHRoaXMgY2xvc2Ugd2UgZG9uJ3Qgc2F5ICJuZXZlciBjbG9zZWQiCisJCQkiICAg
IH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJZXhwZWN0ZWRQcm9ibGVtcywKKwkJbnVsbCwKKwkJ
dHJ1ZSwKKwkJb3B0aW9ucyk7Cit9CisvLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcg
Zm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCisvLyBlbmQgb2YgbWV0aG9kIGlzIGRlYWQg
ZW5kLCBidXQgYmVmb3JlIHdlIGhhdmUgYm90aCBhIGNsb3NlKCkgYW5kIGFuIGVhcmx5IHJldHVy
bgorcHVibGljIHZvaWQgdGVzdDA1NncoKSB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9w
dGlvbnMoKTsKKwlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9VTkNMT1NFRF9DTE9T
RUFCTEUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09N
UElMRVJfUEJfUE9URU5USUFMTFlfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMu
V0FSTklORyk7CisJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfREVBRF9DT0RFLCBD
b21waWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQluZXcgU3Ry
aW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIg
KworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICBib29sZWFuIGZvbzEoKSB0aHJv
d3MgRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmlsZVJlYWRlciByZWFkZXIgPSBuZXcg
RmlsZVJlYWRlcihcImZpbGVcIik7XG4iICsKKwkJCSIgICAgICAgIHRyeSB7XG4iICsKKwkJCSIg
ICAgICAgICAgICBpbnQgY2g7XG4iICsKKwkJCSIgICAgICAgICAgICB3aGlsZSAoKGNoID0gcmVh
ZGVyLnJlYWQoKSkgIT0gLTEpIHtcbiIgKworCQkJIiAgICAgICAgICAgICAgICBTeXN0ZW0ub3V0
LnByaW50bG4oY2gpO1xuIiArCisJCQkiICAgICAgICAgICAgICAgIHJlYWRlci5yZWFkKCk7XG4i
ICsKKwkJCSIgICAgICAgICAgICB9XG4iICsKKwkJCSIgICAgICAgICAgICBpZiAoY2ggPiAxMCkg
e1xuIiArCisJCQkiCQkJCSByZWFkZXIuY2xvc2UoKTtcbiIgKworCQkJIiAgICAgICAgICAgICAg
ICByZXR1cm4gdHJ1ZTtcbiIgKworCQkJIiAgICAgICAgICAgIH1cbiIgKworCQkJIiAgICAgICAg
ICAgIHJldHVybiBmYWxzZTtcbiIgKworCQkJIiAgICAgICAgfSBmaW5hbGx5IHtcbiIgKworCQkJ
IiAgICAgICAgfVxuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIi0tLS0t
LS0tLS1cbiIgKworCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDE1KVxuIiArCisJCSIJ
cmV0dXJuIGZhbHNlO1xuIiArCisJCSIJXl5eXl5eXl5eXl5eXlxuIiArCisJCSJSZXNvdXJjZSBs
ZWFrOiAncmVhZGVyJyBpcyBub3QgY2xvc2VkIGF0IHRoaXMgbG9jYXRpb25cbiIgKworCQkiLS0t
LS0tLS0tLVxuIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJb3B0aW9ucyk7Cit9CisvLyBCdWcgMzQ5
MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCisv
LyBkaWZmZXJlbnQgZWFybHkgZXhpdHMsIGlmIG5vIGNsb3NlIHNlZW4gcmVwb3J0IGFzIGRlZmlu
aXRlbHkgdW5jbG9zZWQKK3B1YmxpYyB2b2lkIHRlc3QwNTZ4KCkgeworCU1hcCBvcHRpb25zID0g
Z2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJf
VU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0
KEphdmFDb3JlLkNPTVBJTEVSX1BCX1BPVEVOVElBTExZX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29t
cGlsZXJPcHRpb25zLldBUk5JTkcpOworCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BC
X0RFQURfQ09ERSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1bk5lZ2F0aXZlVGVz
dCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZhLmlvLkZp
bGVSZWFkZXI7XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIgICAgdm9pZCBm
b28zMShib29sZWFuIGIpIHRocm93cyBFeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBGaWxl
UmVhZGVyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKFwiZmlsZVwiKTtcbiIgKworCQkJIiAgICAg
ICAgaWYgKGIpIHtcbiIgKworCQkJIiAgICAgICAgICAgIHJlYWRlci5jbG9zZSgpO1xuIiArCisJ
CQkiICAgICAgICB9IGVsc2Uge1xuIiArCisJCQkiICAgICAgICAgICAgcmV0dXJuOyAvLyB3YXJu
aW5nXG4iICsKKwkJCSIgICAgICAgIH1cbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSIgICAgdm9p
ZCBmb28zMihib29sZWFuIGIpIHRocm93cyBFeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBG
aWxlUmVhZGVyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKFwiZmlsZVwiKTsgLy8gd2FybiBoZXJl
XG4iICsKKwkJCSIgICAgICAgIHJldHVybjtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4i
CisJCX0sCisJCSItLS0tLS0tLS0tXG4iICsKKwkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGlu
ZSA4KVxuIiArCisJCSIJcmV0dXJuOyAvLyB3YXJuaW5nXG4iICsKKwkJIgleXl5eXl5eXG4iICsK
KwkJIlJlc291cmNlIGxlYWs6ICdyZWFkZXInIGlzIG5vdCBjbG9zZWQgYXQgdGhpcyBsb2NhdGlv
blxuIiArCisJCSItLS0tLS0tLS0tXG4iICsKKwkJIjIuIEVSUk9SIGluIFguamF2YSAoYXQgbGlu
ZSAxMilcbiIgKworCQkiCUZpbGVSZWFkZXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxl
XCIpOyAvLyB3YXJuIGhlcmVcbiIgKworCQkiCSAgICAgICAgICAgXl5eXl5eXG4iICsKKwkJIlJl
c291cmNlIGxlYWs6ICdyZWFkZXInIGlzIG5ldmVyIGNsb3NlZFxuIiArCisJCSItLS0tLS0tLS0t
XG4iLAorCQludWxsLAorCQl0cnVlLAorCQlvcHRpb25zKTsKK30KKy8vIEJ1ZyAzNDkzMjYgLSBb
MS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNvdXJjZXMKKy8vIG5lc3Rl
ZCBtZXRob2QgcGFzc2VzIHRoZSByZXNvdXJjZSB0byBvdXRzaWRlIGNvZGUKK3B1YmxpYyB2b2lk
IHRlc3QwNTZ5KCkgeworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0
aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxl
ck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX1BPVEVO
VElBTExZX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLldBUk5JTkcpOworCW9w
dGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX0RFQURfQ09ERSwgQ29tcGlsZXJPcHRpb25z
LkVSUk9SKTsKKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJY
LmphdmEiLAorCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFkZXI7XG4iICsKKwkJCSJwdWJsaWMg
Y2xhc3MgWCB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28zMShib29sZWFuIGIpIHRocm93cyBFeGNl
cHRpb24ge1xuIiArCisJCQkiICAgICAgICBmaW5hbCBGaWxlUmVhZGVyIHJlYWRlcjMxID0gbmV3
IEZpbGVSZWFkZXIoXCJmaWxlXCIpO1xuIiArCisJCQkiICAgICAgICBuZXcgUnVubmFibGUoKSB7
XG4iICsKKwkJCSIgICAgICAgICAgICBwdWJsaWMgdm9pZCBydW4oKSB7XG4iICsKKwkJCSIgICAg
ICAgICAgICAgICAgZm9vMTgocmVhZGVyMzEpO1xuIiArCisJCQkiICAgICAgICAgICAgfVxuIiAr
CisJCQkiICAgICAgICB9LnJ1bigpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICB2b2lk
IGZvbzE4KEZpbGVSZWFkZXIgcjE4KSB7XG4iICsKKwkJCSIgICAgICAgIC8vIGNvdWxkIHRoZW9y
ZXRpY2FsbHkgY2xvc2UgcjE4O1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICBhYnN0cmFj
dCBjbGFzcyBSZXNvdXJjZVByb3ZpZGVyIHtcbiIgKworCQkJIiAgICAgICAgYWJzdHJhY3QgRmls
ZVJlYWRlciBwcm92aWRlKCk7IiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICBSZXNvdXJjZVBy
b3ZpZGVyIHByb3ZpZGVyOyIgKworCQkJIiAgICB2b2lkIGZvbzIzKCkgdGhyb3dzIEV4Y2VwdGlv
biB7XG4iICsKKwkJCSIgICAgICAgIGZpbmFsIEZpbGVSZWFkZXIgcmVhZGVyMjMgPSBuZXcgRmls
ZVJlYWRlcihcImZpbGVcIik7XG4iICsKKwkJCSIgICAgICAgIHByb3ZpZGVyID0gbmV3IFJlc291
cmNlUHJvdmlkZXIoKSB7XG4iICsKKwkJCSIgICAgICAgICAgICBwdWJsaWMgRmlsZVJlYWRlciBw
cm92aWRlKCkge1xuIiArCisJCQkiICAgICAgICAgICAgICAgIHJldHVybiByZWFkZXIyMztcbiIg
KworCQkJIiAgICAgICAgICAgIH1cbiIgKworCQkJIiAgICAgICAgfTtcbiIgKworCQkJIiAgICB9
XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSItLS0tLS0tLS0tXG4iICsKKwkJIjEuIFdBUk5JTkcg
aW4gWC5qYXZhIChhdCBsaW5lIDQpXG4iICsKKwkJIglmaW5hbCBGaWxlUmVhZGVyIHJlYWRlcjMx
ID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlXCIpO1xuIiArCisJCSIJICAgICAgICAgICAgICAgICBe
Xl5eXl5eXlxuIiArCisJCSJQb3RlbnRpYWwgcmVzb3VyY2UgbGVhazogJ3JlYWRlcjMxJyBtYXkg
bm90IGJlIGNsb3NlZFxuIiArCisJCSItLS0tLS0tLS0tXG4iICsKKwkJIjIuIFdBUk5JTkcgaW4g
WC5qYXZhIChhdCBsaW5lIDE3KVxuIiArCisJCSIJZmluYWwgRmlsZVJlYWRlciByZWFkZXIyMyA9
IG5ldyBGaWxlUmVhZGVyKFwiZmlsZVwiKTtcbiIgKworCQkiCSAgICAgICAgICAgICAgICAgXl5e
Xl5eXl5cbiIgKworCQkiUG90ZW50aWFsIHJlc291cmNlIGxlYWs6ICdyZWFkZXIyMycgbWF5IG5v
dCBiZSBjbG9zZWRcbiIgKworCQkiLS0tLS0tLS0tLVxuIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJ
b3B0aW9ucyk7Cit9CisvLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3Np
bmcgdHJ5LXdpdGgtcmVzb3VyY2VzCisvLyByZXNvdXJjZSBhc3NpZ25lZCB0byBzZWNvbmQgbG9j
YWwgYW5kIGlzIChwb3RlbnRpYWxseSkgY2xvc2VkIG9uIHRoZSBsYXR0ZXIKK3B1YmxpYyB2b2lk
IHRlc3QwNTZ6KCkgeworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0
aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxl
ck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX1BPVEVO
VElBTExZX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRp
b25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9ERUFEX0NPREUsIENvbXBpbGVyT3B0aW9ucy5F
UlJPUik7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5q
YXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlUmVhZGVyO1xuIiArCisJCQkicHVibGljIGNs
YXNzIFgge1xuIiArCisJCQkiICAgIHZvaWQgZm9vMTcoKSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIg
KworCQkJIiAgICAgICAgRmlsZVJlYWRlciByZWFkZXIxNyA9IG5ldyBGaWxlUmVhZGVyKFwiZmls
ZVwiKTtcbiIgKworCQkJIiAgICAgICAgZmluYWwgRmlsZVJlYWRlciByZWFkZXJDb3B5ID0gcmVh
ZGVyMTc7XG4iICsKKwkJCSIgICAgICAgIHJlYWRlckNvcHkuY2xvc2UoKTtcbiIgKworCQkJIiAg
ICB9XG4iICsKKwkJCSIgICAgdm9pZCBmb28xN2EoKSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIgKwor
CQkJIiAgICAgICAgRmlsZVJlYWRlciByZWFkZXIxN2EgPSBuZXcgRmlsZVJlYWRlcihcImZpbGVc
Iik7XG4iICsKKwkJCSIgICAgICAgIEZpbGVSZWFkZXIgcmVhZGVyQ29weWE7IiArCisJCQkiCQkg
cmVhZGVyQ29weWEgPSByZWFkZXIxN2E7XG4iICsKKwkJCSIgICAgICAgIGJhcihyZWFkZXJDb3B5
YSk7XG4iICsgLy8gcG90ZW50aWFsbHkgY2xvc2VzCisJCQkiICAgIH1cbiIgKworCQkJIiAgICB2
b2lkIGJhcihGaWxlUmVhZGVyIHIpIHt9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSItLS0tLS0t
LS0tXG4iICsKKwkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA5KVxuIiArCisJCSIJRmls
ZVJlYWRlciByZWFkZXIxN2EgPSBuZXcgRmlsZVJlYWRlcihcImZpbGVcIik7XG4iICsKKwkJIgkg
ICAgICAgICAgIF5eXl5eXl5eXlxuIiArCisJCSJQb3RlbnRpYWwgcmVzb3VyY2UgbGVhazogJ3Jl
YWRlcjE3YScgbWF5IG5vdCBiZSBjbG9zZWRcbiIgKworCQkiLS0tLS0tLS0tLVxuIiwKKwkJbnVs
bCwKKwkJdHJ1ZSwKKwkJb3B0aW9ucyk7Cit9CisvLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdh
cm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCisvLyBtdWx0aXBsZSBlYXJseSBl
eGlzdHMgZnJvbSBuZXN0ZWQgc2NvcGVzIChhbHdheXMgY2xvc2VkKQorcHVibGljIHZvaWQgdGVz
dDA1Nnp6KCkgeworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9u
cy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9w
dGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX1BPVEVOVElB
TExZX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25z
LnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9FWFBMSUNJVExZX0NMT1NFRF9BVVRPQ0xPU0VBQkxF
LCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVS
X1BCX0RFQURfQ09ERSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlydW5UZXN0c0V4cGVjdGlu
Z0Vycm9yc09ubHlJbjE3KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1w
b3J0IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwor
CQkJIiAgICB2b2lkIGZvbzE2KCkgdGhyb3dzIEV4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAg
IEZpbGVSZWFkZXIgcmVhZGVyMTYgPSBuZXcgRmlsZVJlYWRlcihcImZpbGVcIik7XG4iICsKKwkJ
CSIgICAgICAgIHRyeSB7XG4iICsKKwkJCSIgICAgICAgICAgICByZWFkZXIxNi5jbG9zZSgpO1xu
ICIgKworCQkJIiAgICAgICAgICAgIHJldHVybjtcbiIgKworCQkJIiAgICAgICAgfSBjYXRjaCAo
UnVudGltZUV4Y2VwdGlvbiByZSkge1xuIiArCisJCQkiICAgICAgICAgICAgcmV0dXJuO1xuIiAr
CisJCQkiICAgICAgICB9IGNhdGNoIChFcnJvciBlKSB7XG4iICsKKwkJCSIgICAgICAgICAgICBy
ZXR1cm47XG4iICsKKwkJCSIgICAgICAgIH0gZmluYWxseSB7XG4iICsKKwkJCSIgICAgICAgICAg
ICByZWFkZXIxNi5jbG9zZSgpO1xuICIgKworCQkJIiAgICAgICAgfVxuIiArCisJCQkiICAgIH1c
biIgKworCQkJIn1cbiIKKwkJfSwKKwkJIi0tLS0tLS0tLS1cbiIgKworCQkiMS4gRVJST1IgaW4g
WC5qYXZhIChhdCBsaW5lIDQpXG4iICsKKwkJIglGaWxlUmVhZGVyIHJlYWRlcjE2ID0gbmV3IEZp
bGVSZWFkZXIoXCJmaWxlXCIpO1xuIiArCisJCSIJICAgICAgICAgICBeXl5eXl5eXlxuIiArCisJ
CSJSZXNvdXJjZSAncmVhZGVyMTYnIHNob3VsZCBiZSBtYW5hZ2VkIGJ5IHRyeS13aXRoLXJlc291
cmNlXG4iICsKKwkJIi0tLS0tLS0tLS1cbiIsCisJCW9wdGlvbnMpOworfQorLy8gQnVnIDM0OTMy
NiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNlcworLy8g
bXVsdGlwbGUgZWFybHkgZXhpc3RzIGZyb20gbmVzdGVkIHNjb3BlcyAobmV2ZXIgY2xvc2VkKQor
cHVibGljIHZvaWQgdGVzdDA1Nnp6eigpIHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0
aW9ucygpOworCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX1VOQ0xPU0VEX0NMT1NF
QUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01Q
SUxFUl9QQl9QT1RFTlRJQUxMWV9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5F
UlJPUik7CisJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfRVhQTElDSVRMWV9DTE9T
RURfQVVUT0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChK
YXZhQ29yZS5DT01QSUxFUl9QQl9ERUFEX0NPREUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJ
dGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJ
CSJpbXBvcnQgamF2YS5pby5GaWxlUmVhZGVyO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xu
IiArCisJCQkiICAgIHZvaWQgZm9vMTYoKSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIgKworCQkJIiAg
ICAgICAgRmlsZVJlYWRlciByZWFkZXIxNiA9IG5ldyBGaWxlUmVhZGVyKFwiZmlsZVwiKTtcbiIg
KworCQkJIiAgICAgICAgdHJ5IHtcbiIgKworCQkJIiAgICAgICAgICAgIHJldHVybjtcbiIgKwor
CQkJIiAgICAgICAgfSBjYXRjaCAoUnVudGltZUV4Y2VwdGlvbiByZSkge1xuIiArCisJCQkiICAg
ICAgICAgICAgcmV0dXJuO1xuIiArCisJCQkiICAgICAgICB9IGNhdGNoIChFcnJvciBlKSB7XG4i
ICsKKwkJCSIgICAgICAgICAgICByZXR1cm47XG4iICsKKwkJCSIgICAgICAgIH0gZmluYWxseSB7
XG4iICsKKwkJCSIgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oKTtcbiAiICsKKwkJCSIg
ICAgICAgIH1cbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSItLS0tLS0t
LS0tXG4iICsKKwkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA0KVxuIiArCisJCSIJRmls
ZVJlYWRlciByZWFkZXIxNiA9IG5ldyBGaWxlUmVhZGVyKFwiZmlsZVwiKTtcbiIgKworCQkiCSAg
ICAgICAgICAgXl5eXl5eXl5cbiIgKworCQkiUmVzb3VyY2UgbGVhazogJ3JlYWRlcjE2JyBpcyBu
ZXZlciBjbG9zZWRcbiIgKworCQkiLS0tLS0tLS0tLVxuIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJ
b3B0aW9ucyk7Cit9CisvLyBCdWcgMzU5MzM0IC0gQW5hbHlzaXMgZm9yIHJlc291cmNlIGxlYWsg
d2FybmluZ3MgZG9lcyBub3QgY29uc2lkZXIgZXhjZXB0aW9ucyBhcyBtZXRob2QgZXhpdCBwb2lu
dHMKKy8vIGV4cGxpY2l0IHRocm93IGlzIGEgdHJ1ZSBtZXRob2QgZXhpdCBoZXJlCitwdWJsaWMg
dm9pZCB0ZXN0MDU2dGhyb3cxKCkgeworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25z
KCk7CisJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfVU5DTE9TRURfQ0xPU0VBQkxF
LCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVS
X1BCX1BPVEVOVElBTExZX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9S
KTsKKwlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9FWFBMSUNJVExZX0NMT1NFRF9B
VVRPQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0KEphdmFD
b3JlLkNPTVBJTEVSX1BCX0RFQURfQ09ERSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlz
LnJ1bk5lZ2F0aXZlVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImlt
cG9ydCBqYXZhLmlvLkZpbGVSZWFkZXI7XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsK
KwkJCSIgICAgdm9pZCBmb28yKGJvb2xlYW4gYSwgYm9vbGVhbiBiLCBib29sZWFuIGMpIHRocm93
cyBFeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBGaWxlUmVhZGVyIHJlYWRlciA9IG5ldyBG
aWxlUmVhZGVyKFwiZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAgaWYoYSlcbiIgKworCQkJIiAg
ICAgICAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oKTsgICAgLy93YXJuaW5nIDFcbiIgKworCQkJ
IiAgICAgICAgZWxzZSBpZiAoYilcbiIgKworCQkJIiAgICAgICAgICAgIHJlYWRlci5jbG9zZSgp
O1xuIiArCisJCQkiICAgICAgICBlbHNlIGlmKGMpXG4iICsKKwkJCSIgICAgICAgICAgICB0aHJv
dyBuZXcgRXhjZXB0aW9uKCk7ICAgIC8vd2FybmluZyAyXG4iICsKKwkJCSIgICAgICAgIHJlYWRl
ci5jbG9zZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIi0tLS0t
LS0tLS1cbiIgKworCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDYpXG4iICsKKwkJIgl0
aHJvdyBuZXcgRXhjZXB0aW9uKCk7ICAgIC8vd2FybmluZyAxXG4iICsKKwkJIgleXl5eXl5eXl5e
Xl5eXl5eXl5eXl5eXG4iICsKKwkJIlJlc291cmNlIGxlYWs6ICdyZWFkZXInIGlzIG5vdCBjbG9z
ZWQgYXQgdGhpcyBsb2NhdGlvblxuIiArCisJCSItLS0tLS0tLS0tXG4iICsKKwkJIjIuIEVSUk9S
IGluIFguamF2YSAoYXQgbGluZSAxMClcbiIgKworCQkiCXRocm93IG5ldyBFeGNlcHRpb24oKTsg
ICAgLy93YXJuaW5nIDJcbiIgKworCQkiCV5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIgKworCQki
UmVzb3VyY2UgbGVhazogJ3JlYWRlcicgaXMgbm90IGNsb3NlZCBhdCB0aGlzIGxvY2F0aW9uXG4i
ICsKKwkJIi0tLS0tLS0tLS1cbiIsCisJCW51bGwsCisJCXRydWUsCisJCW9wdGlvbnMpOworfQor
Ly8gQnVnIDM1OTMzNCAtIEFuYWx5c2lzIGZvciByZXNvdXJjZSBsZWFrIHdhcm5pbmdzIGRvZXMg
bm90IGNvbnNpZGVyIGV4Y2VwdGlvbnMgYXMgbWV0aG9kIGV4aXQgcG9pbnRzCisvLyBjbG9zZSgp
IHdpdGhpbiBmaW5hbGx5IHByb3ZpZGVzIHByb3RlY3Rpb24gZm9yIHRocm93CitwdWJsaWMgdm9p
ZCB0ZXN0MDU2dGhyb3cyKCkgeworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7
CisJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfVU5DTE9TRURfQ0xPU0VBQkxFLCBD
b21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BC
X1BPVEVOVElBTExZX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsK
KwlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9FWFBMSUNJVExZX0NMT1NFRF9BVVRP
Q0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0KEphdmFDb3Jl
LkNPTVBJTEVSX1BCX0RFQURfQ09ERSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlydW5UZXN0
c0V4cGVjdGluZ0Vycm9yc09ubHlJbjE3KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIs
CisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIgKworCQkJCQkicHVibGljIGNsYXNz
IFgge1xuIiArCisJCQkJCSIgICAgdm9pZCBmb28xKCkgdGhyb3dzIEV4Y2VwdGlvbiB7XG4iICsK
KwkJCQkJIiAgICAgICAgRmlsZVJlYWRlciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihcImZpbGVc
Iik7IC8vIHByb3Bvc2UgdC13LXJcbiIgKworCQkJCQkiICAgICAgICB0cnkge1xuIiArCisJCQkJ
CSIgICAgICAgICAgICByZWFkZXIucmVhZCgpO1xuIiArCisJCQkJCSIgICAgICAgICAgICByZXR1
cm47XG4iICsKKwkJCQkJIiAgICAgICAgfSBjYXRjaCAoRXhjZXB0aW9uIGUpIHtcbiIgKworCQkJ
CQkiICAgICAgICAgICAgdGhyb3cgbmV3IEV4Y2VwdGlvbigpO1xuIiArCisJCQkJCSIgICAgICAg
IH0gZmluYWxseSB7XG4iICsKKwkJCQkJIiAgICAgICAgICAgIHJlYWRlci5jbG9zZSgpO1xuIiAr
CisJCQkJCSIgICAgICAgIH1cbiIgKworCQkJCQkiICAgIH1cbiIgKworCQkJCQkiXG4iICsKKwkJ
CQkJIiAgICB2b2lkIGZvbzIoKSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIgKworCQkJCQkiICAgICAg
ICBGaWxlUmVhZGVyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKFwiZmlsZVwiKTsgLy8gcHJvcG9z
ZSB0LXctclxuIiArCisJCQkJCSIgICAgICAgIHRyeSB7XG4iICsKKwkJCQkJIiAgICAgICAgICAg
IHJlYWRlci5yZWFkKCk7XG4iICsKKwkJCQkJIiAgICAgICAgICAgIHRocm93IG5ldyBFeGNlcHRp
b24oKTsgLy8gc2hvdWxkIG5vdCB3YXJuIGhlcmVcbiIgKworCQkJCQkiICAgICAgICB9IGNhdGNo
IChFeGNlcHRpb24gZSkge1xuIiArCisJCQkJCSIgICAgICAgICAgICB0aHJvdyBuZXcgRXhjZXB0
aW9uKCk7XG4iICsKKwkJCQkJIiAgICAgICAgfSBmaW5hbGx5IHtcbiIgKworCQkJCQkiICAgICAg
ICAgICAgcmVhZGVyLmNsb3NlKCk7XG4iICsKKwkJCQkJIiAgICAgICAgfVxuIiArCisJCQkJCSIg
ICAgfVxuIiArCisJCQkJCSJcbiIgKworCQkJCQkiICAgIHZvaWQgZm9vMygpIHRocm93cyBFeGNl
cHRpb24ge1xuIiArCisJCQkJCSIgICAgICAgIEZpbGVSZWFkZXIgcmVhZGVyID0gbmV3IEZpbGVS
ZWFkZXIoXCJmaWxlXCIpOyAvLyBwcm9wb3NlIHQtdy1yXG4iICsKKwkJCQkJIiAgICAgICAgdHJ5
IHtcbiIgKworCQkJCQkiICAgICAgICAgICAgcmVhZGVyLnJlYWQoKTtcbiIgKworCQkJCQkiICAg
ICAgICAgICAgdGhyb3cgbmV3IEV4Y2VwdGlvbigpO1xuIiArCisJCQkJCSIgICAgICAgIH0gZmlu
YWxseSB7XG4iICsKKwkJCQkJIiAgICAgICAgICAgIHJlYWRlci5jbG9zZSgpO1xuIiArCisJCQkJ
CSIgICAgICAgIH1cbiIgKworCQkJCQkiICAgIH1cbiIgKworCQkJCQkifVxuIgorCQkJfSwKKwkJ
CSItLS0tLS0tLS0tXG4iICsKKwkJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNClcbiIg
KworCQkJIglGaWxlUmVhZGVyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKFwiZmlsZVwiKTsgLy8g
cHJvcG9zZSB0LXctclxuIiArCisJCQkiCSAgICAgICAgICAgXl5eXl5eXG4iICsKKwkJCSJSZXNv
dXJjZSAncmVhZGVyJyBzaG91bGQgYmUgbWFuYWdlZCBieSB0cnktd2l0aC1yZXNvdXJjZVxuIiAr
CisJCQkiLS0tLS0tLS0tLVxuIiArCisJCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDE2
KVxuIiArCisJCQkiCUZpbGVSZWFkZXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlXCIp
OyAvLyBwcm9wb3NlIHQtdy1yXG4iICsKKwkJCSIJICAgICAgICAgICBeXl5eXl5cbiIgKworCQkJ
IlJlc291cmNlICdyZWFkZXInIHNob3VsZCBiZSBtYW5hZ2VkIGJ5IHRyeS13aXRoLXJlc291cmNl
XG4iICsKKwkJCSItLS0tLS0tLS0tXG4iICsKKwkJCSIzLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxp
bmUgMjgpXG4iICsKKwkJCSIJRmlsZVJlYWRlciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihcImZp
bGVcIik7IC8vIHByb3Bvc2UgdC13LXJcbiIgKworCQkJIgkgICAgICAgICAgIF5eXl5eXlxuIiAr
CisJCQkiUmVzb3VyY2UgJ3JlYWRlcicgc2hvdWxkIGJlIG1hbmFnZWQgYnkgdHJ5LXdpdGgtcmVz
b3VyY2VcbiIgKworCQkJIi0tLS0tLS0tLS1cbiIsCisJCQlvcHRpb25zKTsKK30KKy8vIEJ1ZyAz
NTkzMzQgLSBBbmFseXNpcyBmb3IgcmVzb3VyY2UgbGVhayB3YXJuaW5ncyBkb2VzIG5vdCBjb25z
aWRlciBleGNlcHRpb25zIGFzIG1ldGhvZCBleGl0IHBvaW50cworLy8gY2xvc2UoKSBuZXN0ZWQg
d2l0aGluIGZpbmFsbHkgcHJvdmlkZXMgcHJvdGVjdGlvbiBmb3IgdGhyb3cKK3B1YmxpYyB2b2lk
IHRlc3QwNTZ0aHJvdzMoKSB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsK
KwlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9VTkNMT1NFRF9DTE9TRUFCTEUsIENv
bXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJf
UE9URU5USUFMTFlfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwor
CW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX0VYUExJQ0lUTFlfQ0xPU0VEX0FVVE9D
TE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoSmF2YUNvcmUu
Q09NUElMRVJfUEJfREVBRF9DT0RFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCXJ1blRlc3Rz
RXhwZWN0aW5nRXJyb3JzT25seUluMTcoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwK
KwkJCSJpbXBvcnQgamF2YS5pby5GaWxlUmVhZGVyO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgg
e1xuIiArCisJCQkiICAgIHZvaWQgZm9vMngoKSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIgKworCQkJ
IiAgICAgICAgRmlsZVJlYWRlciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihcImZpbGVcIik7IC8v
IHByb3Bvc2UgdC13LXJcbiIgKworCQkJIiAgICAgICAgdHJ5IHtcbiIgKworCQkJIiAgICAgICAg
ICAgIHJlYWRlci5yZWFkKCk7XG4iICsKKwkJCSIgICAgICAgICAgICB0aHJvdyBuZXcgRXhjZXB0
aW9uKCk7IC8vIHNob3VsZCBub3Qgd2FybiBoZXJlXG4iICsKKwkJCSIgICAgICAgIH0gY2F0Y2gg
KEV4Y2VwdGlvbiBlKSB7XG4iICsKKwkJCSIgICAgICAgICAgICB0aHJvdyBuZXcgRXhjZXB0aW9u
KCk7XG4iICsKKwkJCSIgICAgICAgIH0gZmluYWxseSB7XG4iICsKKwkJCSIgICAgICAgICAgICBp
ZiAocmVhZGVyICE9IG51bGwpXG4iICsKKwkJCSIgICAgICAgICAgICAgICAgIHRyeSB7XG4iICsK
KwkJCSIgICAgICAgICAgICAgICAgICAgICByZWFkZXIuY2xvc2UoKTtcbiIgKworCQkJIiAgICAg
ICAgICAgICAgICAgfSBjYXRjaCAoamF2YS5pby5JT0V4Y2VwdGlvbiBpbykge31cbiIgKworCQkJ
IiAgICAgICAgfVxuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIi0tLS0t
LS0tLS1cbiIgKworCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDQpXG4iICsKKwkJIglG
aWxlUmVhZGVyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKFwiZmlsZVwiKTsgLy8gcHJvcG9zZSB0
LXctclxuIiArCisJCSIJICAgICAgICAgICBeXl5eXl5cbiIgKworCQkiUmVzb3VyY2UgJ3JlYWRl
cicgc2hvdWxkIGJlIG1hbmFnZWQgYnkgdHJ5LXdpdGgtcmVzb3VyY2VcbiIgKworCQkiLS0tLS0t
LS0tLVxuIiwKKwkJb3B0aW9ucyk7Cit9CisvLyBCdWcgMzU5MzM0IC0gQW5hbHlzaXMgZm9yIHJl
c291cmNlIGxlYWsgd2FybmluZ3MgZG9lcyBub3QgY29uc2lkZXIgZXhjZXB0aW9ucyBhcyBtZXRo
b2QgZXhpdCBwb2ludHMKKy8vIGFkZGl0aW9uYWwgYm9vbGVhbiBzaG91bGQgc2hlZCBkb3VidCBv
biB3aGV0aGVyIHdlIHJlYWNoIHRoZSBjbG9zZSgpIGNhbGwKK3B1YmxpYyB2b2lkIHRlc3QwNTZ0
aHJvdzQoKSB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25z
LnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0
aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfUE9URU5USUFM
TFlfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMu
cHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX0VYUExJQ0lUTFlfQ0xPU0VEX0FVVE9DTE9TRUFCTEUs
IENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJf
UEJfREVBRF9DT0RFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVuTmVnYXRpdmVU
ZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8u
RmlsZVJlYWRlcjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICB2b2lk
IGZvbzJ4KGJvb2xlYW4gYikgdGhyb3dzIEV4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZp
bGVSZWFkZXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlXCIpO1xuIiArCisJCQkiICAg
ICAgICB0cnkge1xuIiArCisJCQkiICAgICAgICAgICAgcmVhZGVyLnJlYWQoKTtcbiIgKworCQkJ
IiAgICAgICAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oKTsgLy8gc2hvdWxkIHdhcm4gaGVyZVxu
IiArCisJCQkiICAgICAgICB9IGNhdGNoIChFeGNlcHRpb24gZSkge1xuIiArCisJCQkiICAgICAg
ICAgICAgdGhyb3cgbmV3IEV4Y2VwdGlvbigpOyAvLyBzaG91bGQgd2FybiBoZXJlXG4iICsKKwkJ
CSIgICAgICAgIH0gZmluYWxseSB7XG4iICsKKwkJCSIgICAgICAgICAgICBpZiAocmVhZGVyICE9
IG51bGwgJiYgYilcbiIgKyAvLyB0aGlzIGNvbmRpdGlvbiBpcyB0b28gc3Ryb25nIHRvIHByb3Rl
Y3QgcmVhZGVyCisJCQkiICAgICAgICAgICAgICAgICB0cnkge1xuIiArCisJCQkiICAgICAgICAg
ICAgICAgICAgICAgcmVhZGVyLmNsb3NlKCk7XG4iICsKKwkJCSIgICAgICAgICAgICAgICAgIH0g
Y2F0Y2ggKGphdmEuaW8uSU9FeGNlcHRpb24gaW8pIHt9XG4iICsKKwkJCSIgICAgICAgIH1cbiIg
KworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSItLS0tLS0tLS0tXG4iICsKKwkJ
IjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA3KVxuIiArCisJCSIJdGhyb3cgbmV3IEV4Y2Vw
dGlvbigpOyAvLyBzaG91bGQgd2FybiBoZXJlXG4iICsKKwkJIgleXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXG4iICsKKwkJIlBvdGVudGlhbCByZXNvdXJjZSBsZWFrOiAncmVhZGVyJyBtYXkgbm90IGJl
IGNsb3NlZCBhdCB0aGlzIGxvY2F0aW9uXG4iICsKKwkJIi0tLS0tLS0tLS1cbiIgKworCQkiMi4g
RVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDkpXG4iICsKKwkJIgl0aHJvdyBuZXcgRXhjZXB0aW9u
KCk7IC8vIHNob3VsZCB3YXJuIGhlcmVcbiIgKworCQkiCV5eXl5eXl5eXl5eXl5eXl5eXl5eXl5c
biIgKworCQkiUG90ZW50aWFsIHJlc291cmNlIGxlYWs6ICdyZWFkZXInIG1heSBub3QgYmUgY2xv
c2VkIGF0IHRoaXMgbG9jYXRpb25cbiIgKworCQkiLS0tLS0tLS0tLVxuIiwKKwkJbnVsbCwKKwkJ
dHJ1ZSwKKwkJb3B0aW9ucyk7Cit9CisvLyBCdWcgMzU5MzM0IC0gQW5hbHlzaXMgZm9yIHJlc291
cmNlIGxlYWsgd2FybmluZ3MgZG9lcyBub3QgY29uc2lkZXIgZXhjZXB0aW9ucyBhcyBtZXRob2Qg
ZXhpdCBwb2ludHMKKy8vIHNpbWlsYXIgdG8gdGVzdDA1NnRocm93MygpIGJ1dCBpbmRpcmVjdGx5
IGNhbGxpbmcgY2xvc2UoKSwgc28gZG91YnRzIHJlbWFpbi4KK3B1YmxpYyB2b2lkIHRlc3QwNTZ0
aHJvdzUoKSB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25z
LnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0
aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfUE9URU5USUFM
TFlfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMu
cHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX0VYUExJQ0lUTFlfQ0xPU0VEX0FVVE9DTE9TRUFCTEUs
IENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJf
UEJfREVBRF9DT0RFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVuTmVnYXRpdmVU
ZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8u
RmlsZVJlYWRlcjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICB2b2lk
IGZvbzJ4KCkgdGhyb3dzIEV4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZpbGVSZWFkZXIg
cmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlXCIpO1xuIiArCisJCQkiICAgICAgICB0cnkg
e1xuIiArCisJCQkiICAgICAgICAgICAgcmVhZGVyLnJlYWQoKTtcbiIgKworCQkJIiAgICAgICAg
ICAgIHRocm93IG5ldyBFeGNlcHRpb24oKTsgLy8gc2hvdWxkIHdhcm4gJ21heSBub3QnIGhlcmVc
biIgKworCQkJIiAgICAgICAgfSBjYXRjaCAoRXhjZXB0aW9uIGUpIHtcbiIgKworCQkJIiAgICAg
ICAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oKTsgLy8gc2hvdWxkIHdhcm4gJ21heSBub3QnIGhl
cmVcbiIgKworCQkJIiAgICAgICAgfSBmaW5hbGx5IHtcbiIgKworCQkJIiAgICAgICAgICAgIGRv
Q2xvc2UocmVhZGVyKTtcbiIgKworCQkJIiAgICAgICAgfVxuIiArCisJCQkiICAgIH1cbiIgKwor
CQkJIiAgICB2b2lkIGRvQ2xvc2UoRmlsZVJlYWRlciByKSB7IHRyeSB7IHIuY2xvc2UoKTsgfSBj
YXRjaCAoamF2YS5pby5JT0V4Y2VwdGlvbiBleCkge319XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJ
CSItLS0tLS0tLS0tXG4iICsKKwkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA3KVxuIiAr
CisJCSIJdGhyb3cgbmV3IEV4Y2VwdGlvbigpOyAvLyBzaG91bGQgd2FybiBcJ21heSBub3RcJyBo
ZXJlXG4iICsKKwkJIgleXl5eXl5eXl5eXl5eXl5eXl5eXl5eXG4iICsKKwkJIlBvdGVudGlhbCBy
ZXNvdXJjZSBsZWFrOiAncmVhZGVyJyBtYXkgbm90IGJlIGNsb3NlZCBhdCB0aGlzIGxvY2F0aW9u
XG4iICsKKwkJIi0tLS0tLS0tLS1cbiIgKworCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5l
IDkpXG4iICsKKwkJIgl0aHJvdyBuZXcgRXhjZXB0aW9uKCk7IC8vIHNob3VsZCB3YXJuIFwnbWF5
IG5vdFwnIGhlcmVcbiIgKworCQkiCV5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIgKworCQkiUG90
ZW50aWFsIHJlc291cmNlIGxlYWs6ICdyZWFkZXInIG1heSBub3QgYmUgY2xvc2VkIGF0IHRoaXMg
bG9jYXRpb25cbiIgKworCQkiLS0tLS0tLS0tLVxuIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJb3B0
aW9ucyk7Cit9CisvLyBCdWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50
IHJlc291cmNlIGxlYWsgd2FybmluZ3MKKy8vIEJ1ZyAzNjA5MDggLSBBdm9pZCByZXNvdXJjZSBs
ZWFrIHdhcm5pbmcgd2hlbiB0aGUgdW5kZXJseWluZy9jaGFpbmVkIHJlc291cmNlIGlzIGNsb3Nl
ZCBleHBsaWNpdGx5CisvLyBhIHJlc291cmNlIHdyYXBwZXIgaXMgbm90IGNsb3NlZCBidXQgdGhl
IHVuZGVybHlpbmcgcmVzb3VyY2UgaXMKK3B1YmxpYyB2b2lkIHRlc3QwNjFhKCkgeworCU1hcCBv
cHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRp
b25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9S
KTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5
VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJdGhpcy5ydW5Db25m
b3JtVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZh
LmlvLkZpbGU7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJlZElucHV0U3RyZWFtO1xu
IiArCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZUlucHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0
IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJ
CSIgICAgdm9pZCBmb28oKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBG
aWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xuIiArCisJCQkiICAgICAgICBGaWxl
SW5wdXRTdHJlYW0gZmlsZVN0cmVhbSAgPSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpO1xuIiAr
CisJCQkiICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGJpcyA9IG5ldyBCdWZmZXJlZElucHV0
U3RyZWFtKGZpbGVTdHJlYW0pO1xuIiArCisJCQkiICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFt
IGRvdWJsZVdyYXAgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShiaXMpO1xuIiArCisJCQkiICAg
ICAgICBTeXN0ZW0ub3V0LnByaW50bG4oYmlzLmF2YWlsYWJsZSgpKTtcbiIgKworCQkJIiAgICAg
ICAgZmlsZVN0cmVhbS5jbG9zZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICB2b2lk
IGlubGluZSgpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZpbGUgZmls
ZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKKwkJCSIgICAgICAgIEZpbGVJbnB1dFN0
cmVhbSBmaWxlU3RyZWFtO1xuIiArCisJCQkiICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGJp
cyA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGZpbGVTdHJlYW0gPSBuZXcgRmlsZUlucHV0U3Ry
ZWFtKGZpbGUpKTtcbiIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGJpcy5hdmFp
bGFibGUoKSk7XG4iICsKKwkJCSIgICAgICAgIGZpbGVTdHJlYW0uY2xvc2UoKTtcbiIgKworCQkJ
IiAgICB9XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJn
cykgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgdHJ5IHtcbiIgKworCQkJ
IiAgICAgICAgICAgIG5ldyBYKCkuZm9vKCk7XG4iICsKKwkJCSIgICAgICAgIH0gY2F0Y2ggKElP
RXhjZXB0aW9uIGV4KSB7IiArCisJCQkiICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwi
R290IElPIEV4Y2VwdGlvblwiKTtcbiIgKworCQkJIiAgICAgICAgfVxuIiArCisJCQkiICAgIH1c
biIgKworCQkJIn1cbiIKKwkJfSwKKwkJIkdvdCBJTyBFeGNlcHRpb24iLAorCQludWxsLAorCQl0
cnVlLAorCQludWxsLAorCQlvcHRpb25zLAorCQludWxsKTsKK30KKy8vIEJ1ZyAzNTg5MDMgLSBG
aWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5ncworLy8g
YSBjbG9zZWFibGUgd2l0aG91dCBPUyByZXNvdXJjZSBpcyBub3QgY2xvc2VkCitwdWJsaWMgdm9p
ZCB0ZXN0MDYxYigpIHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9w
dGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUs
IENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9Q
VElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMu
RVJST1IpOworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5q
YXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5TdHJpbmdSZWFkZXI7XG4iICsKKwkJCSJpbXBvcnQg
amF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJ
IiAgICB2b2lkIGZvbygpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIFN0
cmluZ1JlYWRlciBzdHJpbmcgID0gbmV3IFN0cmluZ1JlYWRlcihcImNvbnRlbnRcIik7XG4iICsK
KwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihzdHJpbmcucmVhZCgpKTtcbiIgKworCQkJ
IiAgICB9XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJn
cykgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgbmV3IFgoKS5mb28oKTtc
biIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSI5OSIsIC8vIGNoYXJhY3Rl
ciAnYycKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJbnVsbCwKKwkJb3B0aW9ucywKKwkJbnVsbCk7Cit9
CisvLyBCdWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNl
IGxlYWsgd2FybmluZ3MKKy8vIGEgcmVzb3VyY2Ugd3JhcHBlciBpcyBub3QgY2xvc2VkIGJ1dCB0
aGUgdW5kZXJseWluZyBjbG9zZWFibGUgaXMgcmVzb3VyY2UtZnJlZQorcHVibGljIHZvaWQgdGVz
dDA2MWMoKSB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25z
LnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21w
aWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05f
UmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9S
KTsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIs
CisJCQkiaW1wb3J0IGphdmEuaW8uQnVmZmVyZWRSZWFkZXI7XG4iICsKKwkJCSJpbXBvcnQgamF2
YS5pby5TdHJpbmdSZWFkZXI7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtc
biIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICB2b2lkIGZvbygpIHRocm93
cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIFN0cmluZ1JlYWRlciBpbnB1dCA9IG5l
dyBTdHJpbmdSZWFkZXIoXCJjb250ZW50XCIpO1xuIiArCisJCQkiICAgICAgICBCdWZmZXJlZFJl
YWRlciBiciA9IG5ldyBCdWZmZXJlZFJlYWRlcihpbnB1dCk7XG4iICsKKwkJCSIgICAgICAgIEJ1
ZmZlcmVkUmVhZGVyIGRvdWJsZVdyYXAgPSBuZXcgQnVmZmVyZWRSZWFkZXIoYnIpO1xuIiArCisJ
CQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oYnIucmVhZCgpKTtcbiIgKworCQkJIiAgICB9
XG4iICsKKwkJCSIgICAgdm9pZCBpbmxpbmUoKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJ
CQkiICAgICAgICBCdWZmZXJlZFJlYWRlciBiciA9IG5ldyBCdWZmZXJlZFJlYWRlcihuZXcgU3Ry
aW5nUmVhZGVyKFwiY29udGVudFwiKSk7XG4iICsKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJp
bnRsbihici5yZWFkKCkpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICBwdWJsaWMgc3Rh
dGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJ
CQkiICAgICAgICBuZXcgWCgpLmZvbygpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIK
KwkJfSwKKwkJIjk5IiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJbnVsbCwKKwkJb3B0aW9ucywKKwkJ
bnVsbCk7Cit9CisvLyBCdWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50
IHJlc291cmNlIGxlYWsgd2FybmluZ3MKKy8vIGEgcmVzb3VyY2Ugd3JhcHBlciBpcyBub3QgY2xv
c2VkIG5laXRoZXIgaXMgdGhlIHVuZGVybHlpbmcgcmVzb3VyY2UKK3B1YmxpYyB2b2lkIHRlc3Qw
NjFkKCkgeworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5w
dXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGls
ZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1Jl
cG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5XQVJOSU5H
KTsKKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEi
LAorCQkJImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5CdWZm
ZXJlZElucHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZUlucHV0U3RyZWFt
O1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJwdWJsaWMg
Y2xhc3MgWCB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28oKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xu
IiArCisJCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xuIiAr
CisJCQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0gZmlsZVN0cmVhbSAgPSBuZXcgRmlsZUlucHV0
U3RyZWFtKGZpbGUpO1xuIiArCisJCQkiICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGJpcyA9
IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGZpbGVTdHJlYW0pO1xuIiArCisJCQkiICAgICAgICBC
dWZmZXJlZElucHV0U3RyZWFtIGRvdWJsZVdyYXAgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShi
aXMpO1xuIiArCisJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oYmlzLmF2YWlsYWJsZSgp
KTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSIgICAgdm9pZCBpbmxpbmUoKSB0aHJvd3MgSU9F
eGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVm
aWxlXCIpO1xuIiArCisJCQkiICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGJpczIgPSBuZXcg
QnVmZmVyZWRJbnB1dFN0cmVhbShuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpKTtcbiIgKworCQkJ
IiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGJpczIuYXZhaWxhYmxlKCkpO1xuIiArCisJCQki
ICAgIH1cbiIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdz
KSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICB0cnkge1xuIiArCisJCQki
ICAgICAgICAgICAgbmV3IFgoKS5mb28oKTtcbiIgKworCQkJIiAgICAgICAgfSBjYXRjaCAoSU9F
eGNlcHRpb24gZXgpIHsiICsKKwkJCSIgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oXCJH
b3QgSU8gRXhjZXB0aW9uXCIpO1xuIiArCisJCQkiICAgICAgICB9XG4iICsKKwkJCSIgICAgfVxu
IiArCisJCQkifVxuIgorCQl9LAorCQkiLS0tLS0tLS0tLVxuIiArCisJCSIxLiBFUlJPUiBpbiBY
LmphdmEgKGF0IGxpbmUgMTApXG4iICsKKwkJIglCdWZmZXJlZElucHV0U3RyZWFtIGRvdWJsZVdy
YXAgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShiaXMpO1xuIiArCisJCSIJICAgICAgICAgICAg
ICAgICAgICBeXl5eXl5eXl5eXG4iICsKKwkJIlJlc291cmNlIGxlYWs6IFwnZG91YmxlV3JhcFwn
IGlzIG5ldmVyIGNsb3NlZFxuIiArCisJCSItLS0tLS0tLS0tXG4iICsKKwkJIjIuIEVSUk9SIGlu
IFguamF2YSAoYXQgbGluZSAxNSlcbiIgKworCQkiCUJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzMiA9
IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSkpO1xuIiAr
CisJCSIJICAgICAgICAgICAgICAgICAgICBeXl5eXG4iICsKKwkJIlJlc291cmNlIGxlYWs6IFwn
YmlzMlwnIGlzIG5ldmVyIGNsb3NlZFxuIiArCisJCSItLS0tLS0tLS0tXG4iLAorCQludWxsLAor
CQl0cnVlLAorCQlvcHRpb25zKTsKK30KKy8vIEJ1ZyAzNTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2Fs
bHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5ncworLy8gQnVnIDM2MTA3MyAtIEF2
b2lkIHJlc291cmNlIGxlYWsgd2FybmluZyB3aGVuIHRoZSB0b3AgbGV2ZWwgcmVzb3VyY2UgaXMg
Y2xvc2VkIGV4cGxpY2l0bHkKKy8vIGEgcmVzb3VyY2Ugd3JhcHBlciBpcyBjbG9zZWQgY2xvc2lu
ZyBhbHNvIHRoZSB1bmRlcmx5aW5nIHJlc291cmNlCitwdWJsaWMgdm9pZCB0ZXN0MDYxZSgpIHsK
KwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBp
bGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9u
cy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3Rl
bnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMu
cnVuQ29uZm9ybVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBv
cnQgamF2YS5pby5GaWxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uQnVmZmVyZWRJbnB1dFN0
cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkZpbGVJbnB1dFN0cmVhbTtcbiIgKworCQkJ
ImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xu
IiArCisJCQkiICAgIEZpbGVJbnB1dFN0cmVhbSBmaXM7IiArCisJCQkiICAgIHZvaWQgZm9vKCkg
dGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZp
bGUoXCJzb21lZmlsZVwiKTtcbiIgKworCQkJIiAgICAgICAgRmlsZUlucHV0U3RyZWFtIGZpbGVT
dHJlYW0gID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKTtcbiIgKworCQkJIiAgICAgICAgQnVm
ZmVyZWRJbnB1dFN0cmVhbSBiaXMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShmaWxlU3RyZWFt
KTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFwID0gbmV3
IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oYmlzKTtcbiIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5w
cmludGxuKGJpcy5hdmFpbGFibGUoKSk7XG4iICsKKwkJCSIgICAgICAgIGJpcy5jbG9zZSgpO1xu
IiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICB2b2lkIGlubGluZSgpIHRocm93cyBJT0V4Y2Vw
dGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVc
Iik7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzMiA9IG5ldyBCdWZm
ZXJlZElucHV0U3RyZWFtKGZpcyA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSkpO1xuIiArIC8v
IGZpZWxkIGFzc2lnbm1lbnQKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihiaXMyLmF2
YWlsYWJsZSgpKTtcbiIgKworCQkJIiAgICAgICAgYmlzMi5jbG9zZSgpO1xuIiArCisJCQkiICAg
ICAgICBGaWxlSW5wdXRTdHJlYW0gZmlsZVN0cmVhbSAgPSBudWxsO1xuIiArCisJCQkiICAgICAg
ICBCdWZmZXJlZElucHV0U3RyZWFtIGJpczMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShmaWxl
U3RyZWFtID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKSk7XG4iICsKKwkJCSIgICAgICAgIFN5
c3RlbS5vdXQucHJpbnRsbihiaXMzLmF2YWlsYWJsZSgpKTtcbiIgKworCQkJIiAgICAgICAgYmlz
My5jbG9zZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICBwdWJsaWMgc3RhdGljIHZv
aWQgbWFpbihTdHJpbmdbXSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAg
ICAgICB0cnkge1xuIiArCisJCQkiICAgICAgICAgICAgbmV3IFgoKS5mb28oKTtcbiIgKworCQkJ
IiAgICAgICAgfSBjYXRjaCAoSU9FeGNlcHRpb24gZXgpIHsiICsKKwkJCSIgICAgICAgICAgICBT
eXN0ZW0ub3V0LnByaW50bG4oXCJHb3QgSU8gRXhjZXB0aW9uXCIpO1xuIiArCisJCQkiICAgICAg
ICB9XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCQl9LAorCQkiR290IElPIEV4Y2Vw
dGlvbiIsCisJCW51bGwsCisJCXRydWUsCisJCW51bGwsCisJCW9wdGlvbnMsCisJCW51bGwpOwor
fQorLy8gQnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJj
ZSBsZWFrIHdhcm5pbmdzCisvLyBCdWcgMzYxMDczIC0gQXZvaWQgcmVzb3VyY2UgbGVhayB3YXJu
aW5nIHdoZW4gdGhlIHRvcCBsZXZlbCByZXNvdXJjZSBpcyBjbG9zZWQgZXhwbGljaXRseQorLy8g
YSByZXNvdXJjZSB3cmFwcGVyIGlzIGNsb3NlZCBjbG9zaW5nIGFsc28gdGhlIHVuZGVybHlpbmcg
cmVzb3VyY2UgLSBvcmlnaW5hbCB0ZXN0IGNhc2UKK3B1YmxpYyB2b2lkIHRlc3QwNjFmKCkgdGhy
b3dzIElPRXhjZXB0aW9uIHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwor
CW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFi
bGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25z
Lk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlv
bnMuRVJST1IpOworCVVSTCB1cmwgPSBGaWxlTG9jYXRvci50b0ZpbGVVUkwoRmlsZUxvY2F0b3Iu
ZmluZChQbGF0Zm9ybS5nZXRCdW5kbGUoIm9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBp
bGVyIiksIG5ldyBQYXRoKCJNRVRBLUlORi9NQU5JRkVTVC5NRiIpLCBudWxsKSk7CisJdGhpcy5y
dW5Db25mb3JtVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9y
dCBqYXZhLmlvLklucHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSW5wdXRTdHJl
YW1SZWFkZXI7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJlZFJlYWRlcjtcbiIgKwor
CQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkiaW1wb3J0IGphdmEubmV0
LlVSTDtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICBib29sZWFuIGxv
YWRVUkwoZmluYWwgVVJMIHVybCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAg
ICAgSW5wdXRTdHJlYW0gc3RyZWFtID0gbnVsbDtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRS
ZWFkZXIgcmVhZGVyID0gbnVsbDtcbiIgKworCQkJIiAgICAgICAgdHJ5IHtcbiIgKworCQkJIiAg
ICAgICAgICAgIHN0cmVhbSA9IHVybC5vcGVuU3RyZWFtKCk7XG4iICsKKwkJCSIgICAgICAgICAg
ICByZWFkZXIgPSBuZXcgQnVmZmVyZWRSZWFkZXIobmV3IElucHV0U3RyZWFtUmVhZGVyKHN0cmVh
bSkpO1xuIiArCisJCQkiICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKHJlYWRlci5yZWFk
TGluZSgpKTtcbiIgKworCQkJIiAgICAgICAgfSBmaW5hbGx5IHtcbiIgKworCQkJIiAgICAgICAg
ICAgIHRyeSB7XG4iICsKKwkJCSIgICAgICAgICAgICAgICAgaWYgKHJlYWRlciAhPSBudWxsKVxu
IiArCisJCQkiICAgICAgICAgICAgICAgICAgICByZWFkZXIuY2xvc2UoKTtcbiIgKworCQkJIiAg
ICAgICAgICAgIH0gY2F0Y2ggKElPRXhjZXB0aW9uIHgpIHtcbiIgKworCQkJIiAgICAgICAgICAg
IH1cbiIgKworCQkJIiAgICAgICAgfVxuIiArCisJCQkiICAgICAgICByZXR1cm4gZmFsc2U7IC8v
ICdzdHJlYW0nIG1heSBub3QgYmUgY2xvc2VkIGF0IHRoaXMgbG9jYXRpb25cbiIgKworCQkJIiAg
ICB9XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykg
dGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgdHJ5IHtcbiIgKworCQkJIiAg
ICAgICAgICAgIG5ldyBYKCkubG9hZFVSTChuZXcgVVJMKFwiIit1cmwudG9TdHJpbmcoKSsiXCIp
KTtcbiIgKworCQkJIiAgICAgICAgfSBjYXRjaCAoSU9FeGNlcHRpb24gZXgpIHtcbiIgKworCQkJ
IiAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcIkdvdCBJTyBFeGNlcHRpb25cIitleCk7
XG4iICsKKwkJCSIgICAgICAgIH1cbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0s
CisJCSJNYW5pZmVzdC1WZXJzaW9uOiAxLjAiLAorCQludWxsLAorCQl0cnVlLAorCQludWxsLAor
CQlvcHRpb25zLAorCQludWxsKTsKK30KKy8vIEJ1ZyAzNTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2Fs
bHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5ncworLy8gQnVnIDM2MTA3MyAtIEF2
b2lkIHJlc291cmNlIGxlYWsgd2FybmluZyB3aGVuIHRoZSB0b3AgbGV2ZWwgcmVzb3VyY2UgaXMg
Y2xvc2VkIGV4cGxpY2l0bHkKKy8vIGEgcmVzb3VyY2Ugd3JhcHBlciBpcyBjbG9zZWQgY2xvc2lu
ZyBhbHNvIHRoZSB1bmRlcmx5aW5nIHJlc291cmNlIC0gZnJvbSBhIHJlYWwtd29ybGQgZXhhbXBs
ZQorcHVibGljIHZvaWQgdGVzdDA2MWYyKCkgdGhyb3dzIElPRXhjZXB0aW9uIHsKKwlNYXAgb3B0
aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9u
cy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7
CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVu
Y2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVuQ29uZm9y
bVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5p
by5PdXRwdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlT3V0cHV0U3RyZWFt
O1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uQnVmZmVyZWRPdXRwdXRTdHJlYW07XG4iICsKKwkJ
CSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtc
biIgKworCQkJIiAgICB2b2lkIHpvcmsoKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQki
CQl0cnkge1xuIiArCisJCQkiCQkJT3V0cHV0U3RyZWFtIG9zID0gbnVsbDtcbiIgKworCQkJIgkJ
CXRyeSB7XG4iICsKKwkJCSIJCQkJb3MgPSBuZXcgQnVmZmVyZWRPdXRwdXRTdHJlYW0obmV3IEZp
bGVPdXRwdXRTdHJlYW0oXCJzb21lZmlsZVwiKSk7XG4iICsKKwkJCSIJCQkJU3RyaW5nIGV4dGVy
bmFsRm9ybSA9IFwiZXh0ZXJuYWxQYXRoXCI7XG4iICsKKwkJCSIJCQl9IGZpbmFsbHkge1xuIiAr
CisJCQkiCQkJCWlmIChvcyAhPSBudWxsKVxuIiArCisJCQkiCQkJCQlvcy5jbG9zZSgpO1xuIiAr
CisJCQkiCQkJfVxuIiArCisJCQkiCQl9IGNhdGNoIChJT0V4Y2VwdGlvbiBlKSB7XG4iICsKKwkJ
CSIJCQllLnByaW50U3RhY2tUcmFjZSgpO1xuIiArCisJCQkiCQl9XG4iICsKKwkJCSIgICAgfVxu
IiArCisJCQkifVxuIgorCQl9LAorCQkiIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJbnVsbCwKKwkJ
b3B0aW9ucywKKwkJbnVsbCk7Cit9CisvLyBCdWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5
IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsgd2FybmluZ3MKKy8vIEJ1ZyAzNjEwNzMgLSBBdm9p
ZCByZXNvdXJjZSBsZWFrIHdhcm5pbmcgd2hlbiB0aGUgdG9wIGxldmVsIHJlc291cmNlIGlzIGNs
b3NlZCBleHBsaWNpdGx5CisvLyBhIHJlc291cmNlIHdyYXBwZXIgaXMgc2VudCB0byBhbm90aGVy
IG1ldGhvZCBhZmZlY3RpbmcgYWxzbyB0aGUgdW5kZXJseWluZyByZXNvdXJjZSAtIGZyb20gYSBy
ZWFsLXdvcmxkIGV4YW1wbGUKK3B1YmxpYyB2b2lkIHRlc3QwNjFmMygpIHRocm93cyBJT0V4Y2Vw
dGlvbiB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1
dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxl
ck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVw
b3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsK
Kwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAor
CQkJImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlSW5w
dXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlTm90Rm91bmRFeGNlcHRpb247
XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBq
YXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJlYW07XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4i
ICsKKwkJCSIgICAgU3RyaW5nIGxvYWRQcm9maWxlKEZpbGUgcHJvZmlsZUZpbGUpIHtcbiIgKwor
CQkJIgkJdHJ5IHtcbiIgKworCQkJIgkJCUlucHV0U3RyZWFtIHN0cmVhbSA9IG5ldyBCdWZmZXJl
ZElucHV0U3RyZWFtKG5ldyBGaWxlSW5wdXRTdHJlYW0ocHJvZmlsZUZpbGUpKTtcbiIgKworCQkJ
IgkJCXJldHVybiBsb2FkUHJvZmlsZShzdHJlYW0pO1xuIiArCisJCQkiCQl9IGNhdGNoIChGaWxl
Tm90Rm91bmRFeGNlcHRpb24gZSkge1xuIiArCisJCQkiCQkJLy9udWxsXG4iICsKKwkJCSIJCX1c
biIgKworCQkJIgkJcmV0dXJuIG51bGw7XG4iICsKKwkJCSIJfVxuIiArCisJCQkiCXByaXZhdGUg
U3RyaW5nIGxvYWRQcm9maWxlKElucHV0U3RyZWFtIHN0cmVhbSkge1xuIiArCisJCQkiCQlyZXR1
cm4gbnVsbDtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSItLS0tLS0tLS0t
XG4iICsKKwkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxMClcbiIgKworCQkiCXJldHVy
biBsb2FkUHJvZmlsZShzdHJlYW0pO1xuIiArCisJCSIJXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXG4iICsKKwkJIlBvdGVudGlhbCByZXNvdXJjZSBsZWFrOiBcJ3N0cmVhbVwnIG1heSBub3Qg
YmUgY2xvc2VkIGF0IHRoaXMgbG9jYXRpb25cbiIgKworCQkiLS0tLS0tLS0tLVxuIiwKKwkJbnVs
bCwKKwkJdHJ1ZSwKKwkJb3B0aW9ucyk7Cit9CisvLyBCdWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0
aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsgd2FybmluZ3MKKy8vIEJ1ZyAzNjA5MDgg
LSBBdm9pZCByZXNvdXJjZSBsZWFrIHdhcm5pbmcgd2hlbiB0aGUgdW5kZXJseWluZy9jaGFpbmVk
IHJlc291cmNlIGlzIGNsb3NlZCBleHBsaWNpdGx5CisvLyBEaWZmZXJlbnQgcG9pbnRzIGluIGEg
cmVzb3VyY2UgY2hhaW4gYXJlIGNsb3NlZAorcHVibGljIHZvaWQgdGVzdDA2MWcoKSB7CisJTWFw
IG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9w
dGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJS
T1IpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFs
bHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1bk5l
Z2F0aXZlVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBq
YXZhLmlvLkZpbGU7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJlZElucHV0U3RyZWFt
O1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZUlucHV0U3RyZWFtO1xuIiArCisJCQkiaW1w
b3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsK
KwkJCSIgICAgdm9pZCBjbG9zZU1pZGRsZSgpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJ
CSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKKwkJCSIg
ICAgICAgIEZpbGVJbnB1dFN0cmVhbSBmaWxlU3RyZWFtICA9IG5ldyBGaWxlSW5wdXRTdHJlYW0o
ZmlsZSk7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzID0gbmV3IEJ1
ZmZlcmVkSW5wdXRTdHJlYW0oZmlsZVN0cmVhbSk7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVk
SW5wdXRTdHJlYW0gZG91YmxlV3JhcCA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGJpcyk7XG4i
ICsKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihiaXMuYXZhaWxhYmxlKCkpO1xuIiAr
CisJCQkiICAgICAgICBiaXMuY2xvc2UoKTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSIgICAg
dm9pZCBjbG9zZU91dGVyKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAg
RmlsZSBmaWxlMiA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKKwkJCSIgICAgICAgIEZp
bGVJbnB1dFN0cmVhbSBmaWxlU3RyZWFtMiAgPSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUyKTtc
biIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMyID0gbmV3IEJ1ZmZlcmVk
SW5wdXRTdHJlYW0oZmlsZVN0cmVhbTIpO1xuIiArCisJCQkiICAgICAgICBCdWZmZXJlZElucHV0
U3RyZWFtIGRvdWJsZVdyYXAyID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oYmlzMik7XG4iICsK
KwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihiaXMyLmF2YWlsYWJsZSgpKTtcbiIgKwor
CQkJIiAgICAgICAgZG91YmxlV3JhcDIuY2xvc2UoKTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJ
CSIgICAgdm9pZCBuZXZlckNsb3NlZCgpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIg
ICAgICAgIEZpbGUgZmlsZTMgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xuIiArCisJCQkiICAg
ICAgICBGaWxlSW5wdXRTdHJlYW0gZmlsZVN0cmVhbTMgID0gbmV3IEZpbGVJbnB1dFN0cmVhbShm
aWxlMyk7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzMyA9IG5ldyBC
dWZmZXJlZElucHV0U3RyZWFtKGZpbGVTdHJlYW0zKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVy
ZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFwMyA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGJpczMp
O1xuIiArCisJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oZG91YmxlV3JhcDMuYXZhaWxh
YmxlKCkpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIi0tLS0tLS0t
LS1cbiIgKworCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDI2KVxuIiArCisJCSIJQnVm
ZmVyZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFwMyA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGJp
czMpO1xuIiArCisJCSIJICAgICAgICAgICAgICAgICAgICBeXl5eXl5eXl5eXlxuIiArCisJCSJS
ZXNvdXJjZSBsZWFrOiBcJ2RvdWJsZVdyYXAzXCcgaXMgbmV2ZXIgY2xvc2VkXG4iICsKKwkJIi0t
LS0tLS0tLS1cbiIsCisJCW51bGwsCisJCXRydWUsCisJCW9wdGlvbnMpOworfQorLy8gQnVnIDM1
ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5p
bmdzCisvLyBCdWcgMzYwOTA4IC0gQXZvaWQgcmVzb3VyY2UgbGVhayB3YXJuaW5nIHdoZW4gdGhl
IHVuZGVybHlpbmcvY2hhaW5lZCByZXNvdXJjZSBpcyBjbG9zZWQgZXhwbGljaXRseQorLy8gRGlm
ZmVyZW50IHBvaW50cyBpbiBhIHJlc291cmNlIGNoYWluIGFyZSBwb3RlbnRpYWxseSBjbG9zZWQK
K3B1YmxpYyB2b2lkIHRlc3QwNjFoKCkgeworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRp
b25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3Nl
ZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxl
ck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBp
bGVyT3B0aW9ucy5FUlJPUik7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBTdHJpbmdb
XSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCisJCQkiaW1w
b3J0IGphdmEuaW8uQnVmZmVyZWRJbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlv
LkZpbGVJbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xu
IiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICAgIHZvaWQgY2xvc2VNaWRkbGUo
Ym9vbGVhbiBiKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBGaWxlIGZp
bGUgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xuIiArCisJCQkiICAgICAgICBGaWxlSW5wdXRT
dHJlYW0gZmlsZVN0cmVhbSAgPSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpO1xuIiArCisJCQki
ICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGJpcyA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFt
KGZpbGVTdHJlYW0pO1xuIiArCisJCQkiICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGRvdWJs
ZVdyYXAgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShiaXMpO1xuIiArCisJCQkiICAgICAgICBT
eXN0ZW0ub3V0LnByaW50bG4oYmlzLmF2YWlsYWJsZSgpKTtcbiIgKworCQkJIiAgICAgICAgaWYg
KGIpXG4iICsKKwkJCSIgICAgICAgICAgICBiaXMuY2xvc2UoKTtcbiIgKworCQkJIiAgICB9XG4i
ICsKKwkJCSIgICAgdm9pZCBjbG9zZU91dGVyKGJvb2xlYW4gYikgdGhyb3dzIElPRXhjZXB0aW9u
IHtcbiIgKworCQkJIiAgICAgICAgRmlsZSBmaWxlMiA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7
XG4iICsKKwkJCSIgICAgICAgIEZpbGVJbnB1dFN0cmVhbSBmaWxlU3RyZWFtMiAgPSBuZXcgRmls
ZUlucHV0U3RyZWFtKGZpbGUyKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVh
bSBkdW1teTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMyID0gKGR1
bW15ID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oZmlsZVN0cmVhbTIpKTtcbiIgKworCQkJIiAg
ICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBkb3VibGVXcmFwMiA9IG5ldyBCdWZmZXJlZElucHV0
U3RyZWFtKGJpczIpO1xuIiArCisJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oYmlzMi5h
dmFpbGFibGUoKSk7XG4iICsKKwkJCSIgICAgICAgIGlmIChiKVxuIiArCisJCQkiICAgICAgICAg
ICAgZG91YmxlV3JhcDIuY2xvc2UoKTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSIgICAgdm9p
ZCBwb3RBbmREZWYoYm9vbGVhbiBiKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAg
ICAgICBGaWxlIGZpbGUzID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKworCQkJIiAgICAg
ICAgRmlsZUlucHV0U3RyZWFtIGZpbGVTdHJlYW0zICA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmls
ZTMpO1xuIiArCisJCQkiICAgICAgICBCdWZmZXJlZElucHV0U3RyZWFtIGJpczMgPSBuZXcgQnVm
ZmVyZWRJbnB1dFN0cmVhbShmaWxlU3RyZWFtMyk7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVk
SW5wdXRTdHJlYW0gZG91YmxlV3JhcDMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShiaXMzKTtc
biIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGRvdWJsZVdyYXAzLmF2YWlsYWJs
ZSgpKTtcbiIgKworCQkJIiAgICAgICAgaWYgKGIpIGJpczMuY2xvc2UoKTtcbiIgKworCQkJIiAg
ICAgICAgZmlsZVN0cmVhbTMuY2xvc2UoKTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4i
CisJCX0sCisJCSItLS0tLS0tLS0tXG4iICsKKwkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGlu
ZSAxMClcbiIgKworCQkiCUJ1ZmZlcmVkSW5wdXRTdHJlYW0gZG91YmxlV3JhcCA9IG5ldyBCdWZm
ZXJlZElucHV0U3RyZWFtKGJpcyk7XG4iICsKKwkJIgkgICAgICAgICAgICAgICAgICAgIF5eXl5e
Xl5eXl5cbiIgKworCQkiUG90ZW50aWFsIHJlc291cmNlIGxlYWs6IFwnZG91YmxlV3JhcFwnIG1h
eSBub3QgYmUgY2xvc2VkXG4iICsKKwkJIi0tLS0tLS0tLS1cbiIgKworCQkiMi4gRVJST1IgaW4g
WC5qYXZhIChhdCBsaW5lIDIwKVxuIiArCisJCSIJQnVmZmVyZWRJbnB1dFN0cmVhbSBkb3VibGVX
cmFwMiA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGJpczIpO1xuIiArCisJCSIJICAgICAgICAg
ICAgICAgICAgICBeXl5eXl5eXl5eXlxuIiArCisJCSJQb3RlbnRpYWwgcmVzb3VyY2UgbGVhazog
XCdkb3VibGVXcmFwMlwnIG1heSBub3QgYmUgY2xvc2VkXG4iICsKKwkJIi0tLS0tLS0tLS1cbiIs
CisJCW51bGwsCisJCXRydWUsCisJCW9wdGlvbnMpOworfQorLy8gQnVnIDM1ODkwMyAtIEZpbHRl
ciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCisvLyBsb2Nh
bCB2YXIgaXMgcmUtdXNlZCBmb3IgdHdvIGxldmVscyBvZiB3cmFwcGVycworcHVibGljIHZvaWQg
dGVzdDA2MWkoKSB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRp
b25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBD
b21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJ
T05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVS
Uk9SKTsKKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmph
dmEiLAorCQkJImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5J
bnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJlYW07
XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBv
cnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwor
CQkJIiAgICB2b2lkIGNsb3NlTWlkZGxlKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJ
IiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKworCQkJIiAg
ICAgICAgSW5wdXRTdHJlYW0gc3RyZWFtICA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSk7XG4i
ICsKKwkJCSIgICAgICAgIHN0cmVhbSA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKHN0cmVhbSk7
XG4iICsKKwkJCSIgICAgICAgIElucHV0U3RyZWFtIG1pZGRsZTtcbiIgKworCQkJIiAgICAgICAg
c3RyZWFtID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0obWlkZGxlID0gc3RyZWFtKTtcbiIgKwor
CQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKHN0cmVhbS5hdmFpbGFibGUoKSk7XG4iICsK
KwkJCSIgICAgICAgIG1pZGRsZS5jbG9zZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIiAg
ICB2b2lkIGNsb3NlT3V0ZXIoKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAg
ICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xuIiArCisJCQkiICAgICAgICBJ
bnB1dFN0cmVhbSBzdHJlYW0yICA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSk7XG4iICsKKwkJ
CSIgICAgICAgIHN0cmVhbTIgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShzdHJlYW0yKTtcbiIg
KworCQkJIiAgICAgICAgc3RyZWFtMiA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKHN0cmVhbTIp
O1xuIiArCisJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oc3RyZWFtMi5hdmFpbGFibGUo
KSk7XG4iICsKKwkJCSIgICAgICAgIHN0cmVhbTIuY2xvc2UoKTtcbiIgKworCQkJIiAgICB9XG4i
ICsKKwkJCSIgICAgdm9pZCBuZXZlckNsb3NlZCgpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsK
KwkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKKwkJ
CSIgICAgICAgIElucHV0U3RyZWFtIHN0cmVhbTMgID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxl
KTtcbiIgKworCQkJIiAgICAgICAgc3RyZWFtMyA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKHN0
cmVhbTMpO1xuIiArCisJCQkiICAgICAgICBzdHJlYW0zID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJl
YW0oc3RyZWFtMyk7XG4iICsKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihzdHJlYW0z
LmF2YWlsYWJsZSgpKTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSIt
LS0tLS0tLS0tXG4iICsKKwkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAyNilcbiIgKwor
CQkiCUlucHV0U3RyZWFtIHN0cmVhbTMgID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKTtcbiIg
KworCQkiCSAgICAgICAgICAgIF5eXl5eXl5cbiIgKworCQkiUmVzb3VyY2UgbGVhazogXCdzdHJl
YW0zXCcgaXMgbmV2ZXIgY2xvc2VkXG4iICsKKwkJIi0tLS0tLS0tLS1cbiIsCisJCW51bGwsCisJ
CXRydWUsCisJCW9wdGlvbnMpOworfQorLy8gQnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxs
eSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCisvLyBzZWxmLXdyYXBwaW5nIGEg
bWV0aG9kIGFyZ3VtZW50IChjYXVzZWQgTlBFIFVuY29uZGl0aW9uYWxGbG93SW5mby5tYXJrQXNE
ZWZpbml0ZWx5TnVsbCguLikpLgorcHVibGljIHZvaWQgdGVzdDA2MWooKSB7CisJTWFwIG9wdGlv
bnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMu
T1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwor
CW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNs
b3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1bkNvbmZvcm1U
ZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8u
SW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJlZElucHV0U3RyZWFt
O1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJwdWJsaWMg
Y2xhc3MgWCB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28oSW5wdXRTdHJlYW0gc3RyZWFtKSB0aHJv
d3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBzdHJlYW0gPSBuZXcgQnVmZmVyZWRJ
bnB1dFN0cmVhbShzdHJlYW0pO1xuIiArCisJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4o
c3RyZWFtLmF2YWlsYWJsZSgpKTtcbiIgKworCQkJIiAgICAgICAgc3RyZWFtLmNsb3NlKCk7XG4i
ICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIHZvaWQgYm9vKElucHV0U3RyZWFtIHN0cmVhbTIp
IHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIHN0cmVhbTIgPSBuZXcgQnVm
ZmVyZWRJbnB1dFN0cmVhbShzdHJlYW0yKTtcbiIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5w
cmludGxuKHN0cmVhbTIuYXZhaWxhYmxlKCkpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1c
biIKKwkJfSwKKwkJIiIsCisJCW51bGwsCisJCXRydWUsCisJCW51bGwsCisJCW9wdGlvbnMsCisJ
CW51bGwpOworfQorLy8gQnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFu
dCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCisvLyBhIHdyYXBwZXIgaXMgY3JlYXRlZCBpbiBhIHJl
dHVybiBzdGF0ZW1lbnQKK3B1YmxpYyB2b2lkIHRlc3QwNjFrKCkgdGhyb3dzIElPRXhjZXB0aW9u
IHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KENv
bXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0
aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQ
b3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCXRo
aXMucnVuQ29uZm9ybVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJp
bXBvcnQgamF2YS5pby5GaWxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZUlucHV0U3Ry
ZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uQnVmZmVyZWRJbnB1dFN0cmVhbTtcbiIgKwor
CQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgg
e1xuIiArCisJCQkiICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gZ2V0UmVhZGVyKEZpbGUgZmlsZSkg
dGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmlsZUlucHV0U3RyZWFtIHN0
cmVhbSA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSk7XG4iICsKKwkJCSIgICAgICAgIHJldHVy
biBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShzdHJlYW0pO1xuIiArCisJCQkiICAgIH1cbiIgKwor
CQkJIn1cbiIKKwkJfSwKKwkJIiIsCisJCW51bGwsCisJCXRydWUsCisJCW51bGwsCisJCW9wdGlv
bnMsCisJCW51bGwpOworfQorLy8gQnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmlt
cG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCisvLyBhIGNsb3NlYWJsZSBpcyBhc3NpZ25l
ZCB0byBhIGZpZWxkCitwdWJsaWMgdm9pZCB0ZXN0MDYxbCgpIHRocm93cyBJT0V4Y2VwdGlvbiB7
CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChDb21w
aWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlv
bnMuRVJST1IpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90
ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlz
LnJ1bkNvbmZvcm1UZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1w
b3J0IGphdmEuaW8uRmlsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkZpbGVJbnB1dFN0cmVh
bTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJlYW07XG4iICsKKwkJ
CSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtc
biIgKworCQkJIiAgICBCdWZmZXJlZElucHV0U3RyZWFtIHN0cmVhbTtcbiIgKworCQkJIiAgICB2
b2lkIGZvbyhGaWxlIGZpbGUpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAg
IEZpbGVJbnB1dFN0cmVhbSBzID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKTtcbiIgKworCQkJ
IiAgICAgICAgc3RyZWFtID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0ocyk7XG4iICsKKwkJCSIg
ICAgfVxuIiArCisJCQkifVxuIgorCQl9LAorCQkiIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJbnVs
bCwKKwkJb3B0aW9ucywKKwkJbnVsbCk7Cit9CisvLyBCdWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0
aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsgd2FybmluZ3MKKy8vIGEgY2xvc2VhYmxl
IGlzIHBhc3NlZCB0byBhbm90aGVyIG1ldGhvZCBpbiBhIHJldHVybiBzdGF0ZW1lbnQKKy8vIGV4
YW1wbGUgY29uc3RydWN0ZWQgYWZ0ZXIgb3JnLmVjbGlwc2UuZXF1aW5veC5pbnRlcm5hbC5wMi5h
cnRpZmFjdC5yZXBvc2l0b3J5LnNpbXBsZS5TaW1wbGVBcnRpZmFjdFJlcG9zaXRvcnkjZ2V0QXJ0
aWZhY3QoLi4pCitwdWJsaWMgdm9pZCB0ZXN0MDYxbSgpIHRocm93cyBJT0V4Y2VwdGlvbiB7CisJ
TWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxl
ck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMu
RVJST1IpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50
aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1
bk5lZ2F0aXZlVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9y
dCBqYXZhLmlvLkZpbGU7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlSW5wdXRTdHJlYW07
XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJlZElucHV0U3RyZWFtO1xuIiArCisJCQki
aW1wb3J0IGphdmEuaW8uSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4
Y2VwdGlvbjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICBCdWZmZXJl
ZElucHV0U3RyZWFtIHN0cmVhbTtcbiIgKworCQkJIiAgICBCdWZmZXJlZElucHV0U3RyZWFtIGZv
byhGaWxlIGZpbGUpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZpbGVJ
bnB1dFN0cmVhbSBzID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKTtcbiIgKworCQkJIiAgICAg
ICAgcmV0dXJuIGNoZWNrKG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKHMpKTtcbiIgKworCQkJIiAg
ICB9XG4iICsKKwkJCSIgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBmb28yKEZpbGVJbnB1dFN0cmVh
bSBzLCBGaWxlIGZpbGUpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIHMg
PSBuZXcgRmlsZUlucHV0U3RyZWFtKGZpbGUpO1xuIiArCisJCQkiICAgICAgICByZXR1cm4gY2hl
Y2socyk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0g
Zm9vMyhJbnB1dFN0cmVhbSBzKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAg
ICBzID0gY2hlY2socyk7XG4iICsKKwkJCSIgICAgICAgIHJldHVybiBjaGVjayhzKTtcbiIgKwor
CQkJIiAgICB9XG4iICsKKwkJCSIgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBjaGVjayhJbnB1dFN0
cmVhbSBzKSB7IHJldHVybiBudWxsOyB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCS8vIFRPRE86
IGFsc28gdGhlc2Ugd2FybmluZ3MgKm1pZ2h0KiBiZSBhdm9pZGFibGUgYnkgZGV0ZWN0aW5nIGNo
ZWNrKHMpIGFzIGEgd3JhcHBlciBjcmVhdGlvbj8/CisJCSItLS0tLS0tLS0tXG4iICsKKwkJIjEu
IEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxNClcbiIgKworCQkiCXJldHVybiBjaGVjayhzKTtc
biIgKworCQkiCV5eXl5eXl5eXl5eXl5eXl5cbiIgKworCQkiUG90ZW50aWFsIHJlc291cmNlIGxl
YWs6IFwnc1wnIG1heSBub3QgYmUgY2xvc2VkIGF0IHRoaXMgbG9jYXRpb25cbiIgKworCQkiLS0t
LS0tLS0tLVxuIiArCisJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTgpXG4iICsKKwkJ
IglyZXR1cm4gY2hlY2socyk7XG4iICsKKwkJIgleXl5eXl5eXl5eXl5eXl5eXG4iICsKKwkJIlBv
dGVudGlhbCByZXNvdXJjZSBsZWFrOiBcJ3NcJyBtYXkgbm90IGJlIGNsb3NlZCBhdCB0aGlzIGxv
Y2F0aW9uXG4iICsKKwkJIi0tLS0tLS0tLS1cbiIsCisJCW51bGwsCisJCXRydWUsCisJCW9wdGlv
bnMpOworfQorLy8gQnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCBy
ZXNvdXJjZSBsZWFrIHdhcm5pbmdzCisvLyBhIHJlc291cmNlIHdyYXBwZXIgZG9lcyBub3Qgd3Jh
cCBhbnkgcHJvdmlkZWQgcmVzb3VyY2UKK3B1YmxpYyB2b2lkIHRlc3QwNjFuKCkgeworCU1hcCBv
cHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRp
b25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9S
KTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5
VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJdGhpcy5ydW5OZWdh
dGl2ZVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2
YS5pby5QcmludFdyaXRlcjtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xu
IiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dz
IElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgUHJpbnRXcml0ZXIgd3JpdGVyID0gbmV3
IFByaW50V3JpdGVyKFwiZmlsZW5hbWVcIik7XG4iICsKKwkJCSIgICAgICAgIHdyaXRlci53cml0
ZSgxKTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSItLS0tLS0tLS0t
XG4iICsKKwkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA1KVxuIiArCisJCSIJUHJpbnRX
cml0ZXIgd3JpdGVyID0gbmV3IFByaW50V3JpdGVyKFwiZmlsZW5hbWVcIik7XG4iICsKKwkJIgkg
ICAgICAgICAgICBeXl5eXl5cbiIgKworCQkiUmVzb3VyY2UgbGVhazogXCd3cml0ZXJcJyBpcyBu
ZXZlciBjbG9zZWRcbiIgKworCQkiLS0tLS0tLS0tLVxuIiwKKwkJbnVsbCwKKwkJdHJ1ZSwKKwkJ
b3B0aW9ucyk7Cit9CisvLyBCdWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0
YW50IHJlc291cmNlIGxlYWsgd2FybmluZ3MKKy8vIGEgcmVzb3VyY2Ugd3JhcHBlciBpcyBjbG9z
ZWQgb25seSBpbiBpdHMgbG9jYWwgYmxvY2ssIHVuZGVybHlpbmcgcmVzb3VyY2UgbWF5IGxlYWsK
K3B1YmxpYyB2b2lkIHRlc3QwNjFvKCkgeworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRp
b25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3Nl
ZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxl
ck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBp
bGVyT3B0aW9ucy5FUlJPUik7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBTdHJpbmdb
XSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCisJCQkiaW1w
b3J0IGphdmEuaW8uRmlsZUlucHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uQnVm
ZmVyZWRJbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xu
IiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICAgIHZvaWQgZm9vKGJvb2xlYW4g
YmFyKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBGaWxlIGZpbGUgPSBu
ZXcgRmlsZShcInNvbWVmaWxcIik7XG4iICsKKwkJCSIgICAgICAgIEZpbGVJbnB1dFN0cmVhbSBm
aWxlU3RyZWFtICA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSk7XG4iICsKKwkJCSIgICAgICAg
IEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oZmlsZVN0
cmVhbSk7ICAgXG4iICsKKwkJCSIgICAgICAgIGlmIChiYXIpIHtcbiIgKworCQkJIiAgICAgICAg
ICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gZG91YmxlV3JhcCA9IG5ldyBCdWZmZXJlZElucHV0U3Ry
ZWFtKGJpcyk7XG4iICsKKwkJCSIgICAgICAgICAgICBkb3VibGVXcmFwLmNsb3NlKCk7XG4iICsK
KwkJCSIgICAgICAgIH1cbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSIt
LS0tLS0tLS0tXG4iICsKKwkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA5KVxuIiArCisJ
CSIJQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShmaWxl
U3RyZWFtKTsgICBcbiIgKworCQkiCSAgICAgICAgICAgICAgICAgICAgXl5eXG4iICsKKwkJIlBv
dGVudGlhbCByZXNvdXJjZSBsZWFrOiBcJ2Jpc1wnIG1heSBub3QgYmUgY2xvc2VkXG4iICsKKwkJ
Ii0tLS0tLS0tLS1cbiIsCisJCW51bGwsCisJCXRydWUsCisJCW9wdGlvbnMpOworfQorLy8gQnVn
IDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdh
cm5pbmdzCisvLyBhIHJlc291cmNlIHdyYXBwZXIgaXMgY29uZGl0aW9uYWxseSBhbGxvY2F0ZWQg
YnV0IG5vdCBjbG9zZWQgLSBmcm9tIGEgcmVhbC13b3JsZCBleGFtcGxlCitwdWJsaWMgdm9pZCB0
ZXN0MDYxZjQoKSB0aHJvd3MgSU9FeGNlcHRpb24geworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGls
ZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRV
bmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChD
b21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUs
IENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBT
dHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCisJ
CQkiaW1wb3J0IGphdmEuaW8uRmlsZUlucHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEu
aW8uRmlsZU5vdEZvdW5kRXhjZXB0aW9uO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSW5wdXRT
dHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJlZElucHV0U3RyZWFtO1xuIiAr
CisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICAgIAl2b2lkIGZvbyhGaWxlIGxvY2F0
aW9uLCBTdHJpbmcgYWR2aWNlRmlsZVBhdGgpIHRocm93cyBGaWxlTm90Rm91bmRFeGNlcHRpb24g
e1xuIiArCisJCQkiCQlJbnB1dFN0cmVhbSBzdHJlYW0gPSBudWxsO1xuIiArCisJCQkiCQlpZiAo
bG9jYXRpb24uaXNEaXJlY3RvcnkoKSkge1xuIiArCisJCQkiCQkJRmlsZSBhZHZpY2VGaWxlID0g
bmV3IEZpbGUobG9jYXRpb24sIGFkdmljZUZpbGVQYXRoKTtcbiIgKworCQkJIgkJCXN0cmVhbSA9
IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKG5ldyBGaWxlSW5wdXRTdHJlYW0oYWR2aWNlRmlsZSkp
O1xuIiArCisJCQkiCQl9XG4iICsKKwkJCSIJfVxuIiArCisJCQkifVxuIgorCQl9LAorCQkiLS0t
LS0tLS0tLVxuIiArCisJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTEpXG4iICsKKwkJ
IglzdHJlYW0gPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShuZXcgRmlsZUlucHV0U3RyZWFtKGFk
dmljZUZpbGUpKTtcbiIgKworCQkiCV5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXG4iICsKKwkJIlBvdGVudGlhbCByZXNvdXJj
ZSBsZWFrOiBcJ3N0cmVhbVwnIG1heSBub3QgYmUgY2xvc2VkXG4iICsgLy8gbWVzc2FnZSBjb3Vs
ZCBiZSBzdHJvbmdlciwgYnV0IHRoZSBlbmNsb3NpbmcgaWYgYmx1cnMgdGhlIHBpY3R1cmUKKwkJ
Ii0tLS0tLS0tLS1cbiIsCisJCW51bGwsCisJCXRydWUsCisJCW9wdGlvbnMpOworfQorLy8gQnVn
IDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdh
cm5pbmdzCisvLyBhIHQtdy1yIHdyYXBzIGFuIGV4aXN0aW5nIHJlc291cmNlCitwdWJsaWMgdm9p
ZCB0ZXN0MDYxcCgpIHsKKwlpZiAodGhpcy5jb21wbGlhbmNlTGV2ZWwgPCBDbGFzc0ZpbGVDb25z
dGFudHMuSkRLMV83KSByZXR1cm47CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMo
KTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xv
c2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0
aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJP
cHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQluZXcgU3RyaW5nW10gewor
CQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uUHJpbnRXcml0ZXI7XG4iICsKKwkJCSJp
bXBvcnQgamF2YS5pby5CdWZmZXJlZFdyaXRlcjtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklP
RXhjZXB0aW9uO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICAgIHZvaWQg
Zm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgUHJpbnRXcml0ZXIg
d3JpdGVyID0gbmV3IFByaW50V3JpdGVyKFwiZmlsZW5hbWVcIik7XG4iICsKKwkJCSIgICAgICAg
IHRyeSAoQnVmZmVyZWRXcml0ZXIgYncgPSBuZXcgQnVmZmVyZWRXcml0ZXIod3JpdGVyKSkge1xu
IiArCisJCQkiICAgICAgICAgICAgYncud3JpdGUoMSk7XG4iICsKKwkJCSIgICAgICAgIH1cbiIg
KworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSIiLAorCQludWxsLAorCQl0cnVl
LAorCQludWxsLAorCQlvcHRpb25zLAorCQludWxsKTsKK30KKy8vIEJ1ZyAzNTg5MDMgLSBGaWx0
ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5ncworLy8gYSB0
LXctciBwb3RlbnRpYWxseSB3cmFwcyBhbiBleGlzdGluZyByZXNvdXJjZQorLy8gRElTQUJMRUQs
IGZhaWxzIGJlY2F1c2Ugd2UgY3VycmVudGx5IGRvbid0IGluY2x1ZGUgdC13LXIgbWFuYWdlZCBy
ZXNvdXJjZXMgaW4gdGhlIGFuYWx5c2lzCitwdWJsaWMgdm9pZCBfdGVzdDA2MXEoKSB7CisJaWYg
KHRoaXMuY29tcGxpYW5jZUxldmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfNykgcmV0dXJu
OworCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29t
cGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRp
b25zLkVSUk9SKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBv
dGVudGlhbGx5VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJdGhp
cy5ydW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJp
bXBvcnQgamF2YS5pby5QcmludFdyaXRlcjtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZl
cmVkV3JpdGVyO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJ
CSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIgICAgdm9pZCBmb28oYm9vbGVhbiBiKSB0aHJv
d3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBQcmludFdyaXRlciB3cml0ZXIgPSBu
ZXcgUHJpbnRXcml0ZXIoXCJmaWxlbmFtZVwiKTtcbiIgKworCQkJIiAgICAgICAgaWYgKGIpXG4i
ICsKKwkJCSIgICAgICAgICAgICB0cnkgKEJ1ZmZlcmVkV3JpdGVyIGJ3ID0gbmV3IEJ1ZmZlcmVk
V3JpdGVyKHdyaXRlcikpIHtcbiIgKworCQkJIiAgICAgICAgICAgICAgICBidy53cml0ZSgxKTtc
biIgKworCQkJIiAgICAgICAgICAgIH1cbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJ
CX0sCisJCSItLS0tLS0tLS0tXG4iICsKKwkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA2
KVxuIiArCisJCSIJUHJpbnRXcml0ZXIgd3JpdGVyID0gbmV3IFByaW50V3JpdGVyKFxcXCJmaWxl
bmFtZVxcXCIpO1xuIiArCisJCSIJXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXl5eXl5eXl5eXG4iICsKKwkJIlBvdGVudGlhbCByZXNvdXJjZSBsZWFrOiBcJ3dy
aXRlclwnIG1heSBub3QgYmUgY2xvc2VkXG4iICsKKwkJIi0tLS0tLS0tLS1cbiIsCisJCW51bGws
CisJCXRydWUsCisJCW9wdGlvbnMpOworfQorLy8gQnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGlj
YWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCisvLyB0aGUgaW5uZXIgZnJv
bSBhIHdyYXBwZXIgaXMgcmV0dXJuZWQKK3B1YmxpYyB2b2lkIHRlc3QwNjFyKCkgeworCU1hcCBv
cHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRp
b25zLk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9S
KTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5
VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJdGhpcy5ydW5Db25m
b3JtVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZh
LmlvLkZpbGVJbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsK
KwkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJlZElucHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0
IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJ
CSIgICAgRmlsZUlucHV0U3RyZWFtIGZvbygpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJ
CSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbFwiKTtcbiIgKworCQkJIiAg
ICAgICAgRmlsZUlucHV0U3RyZWFtIGZpbGVTdHJlYW0gID0gbmV3IEZpbGVJbnB1dFN0cmVhbShm
aWxlKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMgPSBuZXcgQnVm
ZmVyZWRJbnB1dFN0cmVhbShmaWxlU3RyZWFtKTsgICBcbiIgKworCQkJIiAgICAgICAgcmV0dXJu
IGZpbGVTdHJlYW07XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCQl9LAorCQkiIiwK
KwkJbnVsbCwKKwkJdHJ1ZSwKKwkJbnVsbCwKKwkJb3B0aW9ucywKKwkJbnVsbCk7Cit9CisvLyBC
dWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsg
d2FybmluZ3MKKy8vIGEgd3JhcHBlciBpcyBmb3Jnb3R0ZW4sIHRoZSBpbm5lciBpcyBjbG9zZWQg
YWZ0ZXJ3YXJkcworcHVibGljIHZvaWQgdGVzdDA2MXMoKSB7CisJTWFwIG9wdGlvbnMgPSBnZXRD
b21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1Jl
cG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMu
cHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3Nl
YWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQlu
ZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZUlucHV0
U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKworCQkJImltcG9ydCBq
YXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4
Y2VwdGlvbjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICB2b2lkIGZv
bygpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5l
dyBGaWxlKFwic29tZWZpbFwiKTtcbiIgKworCQkJIiAgICAgICAgRmlsZUlucHV0U3RyZWFtIGZp
bGVTdHJlYW0gID0gbmV3IEZpbGVJbnB1dFN0cmVhbShmaWxlKTtcbiIgKworCQkJIiAgICAgICAg
QnVmZmVyZWRJbnB1dFN0cmVhbSBiaXMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShmaWxlU3Ry
ZWFtKTtcbiIgKworCQkJIiAgICAgICAgYmlzID0gbnVsbDtcbiIgKworCQkJIiAgICAgICAgZmls
ZVN0cmVhbS5jbG9zZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJ
IiIsCisJCW51bGwsCisJCXRydWUsCisJCW51bGwsCisJCW9wdGlvbnMsCisJCW51bGwpOworfQor
Ly8gQnVnIDM2MjMzMSAtIFJlc291cmNlIGxlYWsgbm90IGRldGVjdGVkIHdoZW4gY2xvc2VhYmxl
IG5vdCBhc3NpZ25lZCB0byB2YXJpYWJsZQorLy8gYSByZXNvdXJjZSBpcyBuZXZlciBhc3NpZ25l
ZAorcHVibGljIHZvaWQgdGVzdDA2MmEoKSB0aHJvd3MgSU9FeGNlcHRpb24geworCU1hcCBvcHRp
b25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25z
Lk9QVElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsK
KwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5j
bG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJdGhpcy5ydW5OZWdhdGl2
ZVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS5p
by5GaWxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZU91dHB1dFN0cmVhbTtcbiIgKwor
CQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgg
e1xuIiArCisJCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJ
IiAgICAgICAgbmV3IEZpbGVPdXRwdXRTdHJlYW0obmV3IEZpbGUoXCJDOlxcdGVtcFxcZm9vLnR4
dFwiKSkud3JpdGUoMSk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkifVxuIgorCQl9LAorCQki
LS0tLS0tLS0tLVxuIiArCisJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNilcbiIgKwor
CQkiCW5ldyBGaWxlT3V0cHV0U3RyZWFtKG5ldyBGaWxlKFwiQzpcXHRlbXBcXGZvby50eHRcIikp
LndyaXRlKDEpO1xuIiArCisJCSIJXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXl5eXlxuIiArCisJCSJSZXNvdXJjZSBsZWFrOiBcJzx1bmFzc2lnbmVkIENsb3Nl
YWJsZSB2YWx1ZT5cJyBpcyBuZXZlciBjbG9zZWRcbiIgKworCQkiLS0tLS0tLS0tLVxuIiwKKwkJ
bnVsbCwKKwkJdHJ1ZSwKKwkJb3B0aW9ucyk7Cit9CisvLyBCdWcgMzYyMzMxIC0gUmVzb3VyY2Ug
bGVhayBub3QgZGV0ZWN0ZWQgd2hlbiBjbG9zZWFibGUgbm90IGFzc2lnbmVkIHRvIHZhcmlhYmxl
CisvLyBhIGZyZXNobHkgYWxsb2NhdGVkIHJlc291cmNlIGlzIGltbWVkaWF0ZWx5IGNsb3NlZAor
cHVibGljIHZvaWQgdGVzdDA2MmIoKSB0aHJvd3MgSU9FeGNlcHRpb24geworCU1hcCBvcHRpb25z
ID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9Q
VElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwlv
cHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9z
ZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJdGhpcy5ydW5Db25mb3JtVGVz
dCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZhLmlvLkZp
bGU7XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5GaWxlT3V0cHV0U3RyZWFtO1xuIiArCisJCQki
aW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4i
ICsKKwkJCSIgICAgdm9pZCBmb28oKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAg
ICAgICBuZXcgRmlsZU91dHB1dFN0cmVhbShuZXcgRmlsZShcIkM6XFx0ZW1wXFxmb28udHh0XCIp
KS5jbG9zZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIiIsCisJ
CW51bGwsCisJCXRydWUsCisJCW51bGwsCisJCW9wdGlvbnMsCisJCW51bGwpOworfQorLy8gQnVn
IDM2MjMzMSAtIFJlc291cmNlIGxlYWsgbm90IGRldGVjdGVkIHdoZW4gY2xvc2VhYmxlIG5vdCBh
c3NpZ25lZCB0byB2YXJpYWJsZQorLy8gYSByZXNvdXJjZSBpcyBkaXJlY3RseSBwYXNzZWQgdG8g
YW5vdGhlciBtZXRob2QKK3B1YmxpYyB2b2lkIHRlc3QwNjJjKCkgdGhyb3dzIElPRXhjZXB0aW9u
IHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KENv
bXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0
aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQ
b3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCXRo
aXMucnVuQ29uZm9ybVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJp
bXBvcnQgamF2YS5pby5GaWxlO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZU91dHB1dFN0
cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVi
bGljIGNsYXNzIFgge1xuIiArCisJCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9u
IHtcbiIgKworCQkJIiAgICAgICAgd3JpdGVJdChuZXcgRmlsZU91dHB1dFN0cmVhbShuZXcgRmls
ZShcIkM6XFx0ZW1wXFxmb28udHh0XCIpKSk7XG4iICsKKwkJCSIgICAgfVxuIiArCisJCQkiICAg
IHZvaWQgd3JpdGVJdChGaWxlT3V0cHV0U3RyZWFtIGZvcykgdGhyb3dzIElPRXhjZXB0aW9uIHtc
biIgKworCQkJIiAgICAgICAgZm9zLndyaXRlKDEpO1xuIiArCisJCQkiICAgICAgICBmb3MuY2xv
c2UoKTtcbiIgKworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSIiLAorCQludWxs
LAorCQl0cnVlLAorCQludWxsLAorCQlvcHRpb25zLAorCQludWxsKTsKK30KKy8vIEJ1ZyAzNjIz
MzEgLSBSZXNvdXJjZSBsZWFrIG5vdCBkZXRlY3RlZCB3aGVuIGNsb3NlYWJsZSBub3QgYXNzaWdu
ZWQgdG8gdmFyaWFibGUKKy8vIGEgcmVzb3VyY2UgaXMgbm90IHVzZWQKK3B1YmxpYyB2b2lkIHRl
c3QwNjJkKCkgdGhyb3dzIElPRXhjZXB0aW9uIHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVy
T3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5j
bG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29t
cGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBD
b21waWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQluZXcgU3Ry
aW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKworCQkJ
ImltcG9ydCBqYXZhLmlvLkZpbGVPdXRwdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5p
by5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIiAgICB2
b2lkIGZvbygpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAgIG5ldyBGaWxl
T3V0cHV0U3RyZWFtKG5ldyBGaWxlKFwiQzpcXHRlbXBcXGZvby50eHRcIikpO1xuIiArCisJCQki
ICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIi0tLS0tLS0tLS1cbiIgKworCQkiMS4gRVJS
T1IgaW4gWC5qYXZhIChhdCBsaW5lIDYpXG4iICsKKwkJIgluZXcgRmlsZU91dHB1dFN0cmVhbShu
ZXcgRmlsZShcIkM6XFx0ZW1wXFxmb28udHh0XCIpKTtcbiIgKworCQkiCV5eXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIgKworCQkiUmVzb3VyY2UgbGVh
azogXCc8dW5hc3NpZ25lZCBDbG9zZWFibGUgdmFsdWU+XCcgaXMgbmV2ZXIgY2xvc2VkXG4iICsK
KwkJIi0tLS0tLS0tLS1cbiIsCisJCW51bGwsCisJCXRydWUsCisJCW9wdGlvbnMpOworfQorLy8g
QnVnIDM2MjMzMiAtIE9ubHkgcmVwb3J0IHBvdGVudGlhbCBsZWFrIHdoZW4gY2xvc2VhYmxlIG5v
dCBjcmVhdGVkIGluIHRoZSBsb2NhbCBzY29wZQorLy8gYSB3cmFwcGVyIGlzIG9idGFpbmVkIGZy
b20gYW5vdGhlciBtZXRob2QKK3B1YmxpYyB2b2lkIHRlc3QwNjNhKCkgdGhyb3dzIElPRXhjZXB0
aW9uIHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0
KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVy
T3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBv
cnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwor
CXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJ
CQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkZpbGVJbnB1
dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJlYW07XG4i
ICsKKwkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJInB1YmxpYyBjbGFz
cyBYIHtcbiIgKworCQkJIiAgICB2b2lkIHJlYWQoRmlsZSBmaWxlKSB0aHJvd3MgSU9FeGNlcHRp
b24ge1xuIiArCisJCQkiICAgICAgICBGaWxlSW5wdXRTdHJlYW0gc3RyZWFtID0gbmV3IEZpbGVJ
bnB1dFN0cmVhbShmaWxlKTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBi
aXMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShzdHJlYW0pOyAvLyBuZXZlciBzaW5jZSByZWFz
c2lnbmVkXG4iICsKKwkJCSIgICAgICAgIEZpbGVJbnB1dFN0cmVhbSBzdHJlYW0yID0gbmV3IEZp
bGVJbnB1dFN0cmVhbShmaWxlKTsgLy8gdW5zdXJlIHNpbmNlIHBhc3NlZCB0byBtZXRob2RcbiIg
KworCQkJIiAgICAgICAgYmlzID0gZ2V0UmVhZGVyKHN0cmVhbTIpOyAvLyB1bnN1cmUgc2luY2Ug
b2J0YWluZWQgZnJvbSBtZXRob2RcbiIgKworCQkJIiAgICAgICAgYmlzLmF2YWlsYWJsZSgpO1xu
IiArCisJCQkiICAgIH1cbiIgKworCQkJIiAgICBCdWZmZXJlZElucHV0U3RyZWFtIGdldFJlYWRl
cihGaWxlSW5wdXRTdHJlYW0gc3RyZWFtKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQki
ICAgICAgICByZXR1cm4gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oc3RyZWFtKTtcbiIgKworCQkJ
IiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSItLS0tLS0tLS0tXG4iICsKKwkJIjEuIEVS
Uk9SIGluIFguamF2YSAoYXQgbGluZSA3KVxuIiArCisJCSIJRmlsZUlucHV0U3RyZWFtIHN0cmVh
bSA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSk7XG4iICsKKwkJIgkgICAgICAgICAgICAgICAg
Xl5eXl5eXG4iICsKKwkJIlJlc291cmNlIGxlYWs6IFwnc3RyZWFtXCcgaXMgbmV2ZXIgY2xvc2Vk
XG4iICsKKwkJIi0tLS0tLS0tLS1cbiIgKworCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5l
IDkpXG4iICsKKwkJIglGaWxlSW5wdXRTdHJlYW0gc3RyZWFtMiA9IG5ldyBGaWxlSW5wdXRTdHJl
YW0oZmlsZSk7IC8vIHVuc3VyZSBzaW5jZSBwYXNzZWQgdG8gbWV0aG9kXG4iICsKKwkJIgkgICAg
ICAgICAgICAgICAgXl5eXl5eXlxuIiArCisJCSJQb3RlbnRpYWwgcmVzb3VyY2UgbGVhazogXCdz
dHJlYW0yXCcgbWF5IG5vdCBiZSBjbG9zZWRcbiIgKworCQkiLS0tLS0tLS0tLVxuIiArCisJCSIz
LiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTApXG4iICsKKwkJIgliaXMgPSBnZXRSZWFkZXIo
c3RyZWFtMik7IC8vIHVuc3VyZSBzaW5jZSBvYnRhaW5lZCBmcm9tIG1ldGhvZFxuIiArCisJCSIJ
Xl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXG4iICsKKwkJIlBvdGVudGlhbCByZXNvdXJjZSBsZWFr
OiBcJ2Jpc1wnIG1heSBub3QgYmUgY2xvc2VkXG4iICsKKwkJIi0tLS0tLS0tLS1cbiIsCisJCW51
bGwsCisJCXRydWUsCisJCW9wdGlvbnMpOworfQorLy8gQnVnIDM2MjMzMiAtIE9ubHkgcmVwb3J0
IHBvdGVudGlhbCBsZWFrIHdoZW4gY2xvc2VhYmxlIG5vdCBjcmVhdGVkIGluIHRoZSBsb2NhbCBz
Y29wZQorLy8gYSB3cmFwcGVyIGlzIG9idGFpbmVkIGZyb20gYSBmaWVsZCByZWFkCitwdWJsaWMg
dm9pZCB0ZXN0MDYzYigpIHRocm93cyBJT0V4Y2VwdGlvbiB7CisJTWFwIG9wdGlvbnMgPSBnZXRD
b21waWxlck9wdGlvbnMoKTsKKwlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1Jl
cG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMu
cHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3Nl
YWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQlu
ZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZUlucHV0
U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uQnVmZmVyZWRJbnB1dFN0cmVhbTtcbiIg
KworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCisJCQkicHVibGljIGNsYXNz
IFgge1xuIiArCisJCQkiICAgIEZpbGVJbnB1dFN0cmVhbSBzdHJlYW07XG4iICsKKwkJCSIgICAg
dm9pZCByZWFkKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgRmlsZUlu
cHV0U3RyZWFtIHMgPSB0aGlzLnN0cmVhbTtcbiIgKworCQkJIiAgICAgICAgQnVmZmVyZWRJbnB1
dFN0cmVhbSBiaXMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShzKTsgLy8gZG9uJ3QgY29tcGxh
aW4gc2luY2UgcyBpcyBvYnRhaW5lZCBmcm9tIGEgZmllbGRcbiIgKworCQkJIiAgICAgICAgYmlz
LmF2YWlsYWJsZSgpO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIiIs
CisJCW51bGwsCisJCXRydWUsCisJCW51bGwsCisJCW9wdGlvbnMsCisJCW51bGwpOworfQorLy8g
QnVnIDM2MjMzMiAtIE9ubHkgcmVwb3J0IHBvdGVudGlhbCBsZWFrIHdoZW4gY2xvc2VhYmxlIG5v
dCBjcmVhdGVkIGluIHRoZSBsb2NhbCBzY29wZQorLy8gYSB3cmFwcGVyIGlzIGFzc2lnbmVkIHRv
IGEgZmllbGQKK3B1YmxpYyB2b2lkIHRlc3QwNjNjKCkgdGhyb3dzIElPRXhjZXB0aW9uIHsKKwlN
YXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVy
T3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5F
UlJPUik7CisJb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRp
YWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworCXRoaXMucnVu
Q29uZm9ybVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQg
amF2YS5pby5GaWxlSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBvcnQgamF2YS5pby5CdWZmZXJl
ZElucHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsK
KwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIgICAgQnVmZmVyZWRJbnB1dFN0cmVhbSBz
dHJlYW07XG4iICsKKwkJCSIgICAgdm9pZCByZWFkKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIg
KworCQkJIiAgICAgICAgRmlsZUlucHV0U3RyZWFtIHMgPSBuZXcgRmlsZUlucHV0U3RyZWFtKFwi
c29tZWZpbGVcIik7XG4iICsKKwkJCSIgICAgICAgIEJ1ZmZlcmVkSW5wdXRTdHJlYW0gYmlzID0g
bmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0ocyk7XG4iICsKKwkJCSIgICAgICAgIHRoaXMuc3RyZWFt
ID0gYmlzO1xuIiArCisJCQkiICAgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIiIsCisJCW51
bGwsCisJCXRydWUsCisJCW51bGwsCisJCW9wdGlvbnMsCisJCW51bGwpOworfQorLy8gQnVnIDM2
MjMzMiAtIE9ubHkgcmVwb3J0IHBvdGVudGlhbCBsZWFrIHdoZW4gY2xvc2VhYmxlIG5vdCBjcmVh
dGVkIGluIHRoZSBsb2NhbCBzY29wZQorLy8gYSByZXNvdXJjZSBpcyBvYnRhaW5lZCBhcyBhIG1l
dGhvZCBhcmd1bWVudCBhbmQvb3IgYXNzaWduZWQgd2l0aCBhIGNhc3QKK3B1YmxpYyB2b2lkIHRl
c3QwNjNkKCkgdGhyb3dzIElPRXhjZXB0aW9uIHsKKwlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVy
T3B0aW9ucygpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5j
bG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7CisJb3B0aW9ucy5wdXQoQ29t
cGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBD
b21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJ
T05fUmVwb3J0RXhwbGljaXRseUNsb3NlZEF1dG9DbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5F
UlJPUik7CisJcnVuVGVzdHNFeHBlY3RpbmdFcnJvcnNPbmx5SW4xNygKKwkJbmV3IFN0cmluZ1td
IHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZhLmlvLkZpbGVJbnB1dFN0cmVhbTtcbiIg
KworCQkJImltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkSW5wdXRTdHJlYW07XG4iICsKKwkJCSJpbXBv
cnQgamF2YS5pby5JbnB1dFN0cmVhbTtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0
aW9uO1xuIiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiICAgIHZvaWQgZm9vKCBJ
bnB1dFN0cmVhbSBpbnB1dCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAg
RmlsZUlucHV0U3RyZWFtIGlucHV0MSAgPSAoRmlsZUlucHV0U3RyZWFtKWlucHV0O1xuIiArCisJ
CQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oaW5wdXQxLnJlYWQoKSk7XG4iICsKKwkJCSIg
ICAgICAgIGlucHV0LmNsb3NlKCk7XG4iICsgLy8gZG9uJ3QgcHJvcG9zZSB0LXctciBmb3IgYXJn
dW1lbnQKKwkJCSIgICAgfVxuIiArCisJCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0
aW9uIHtcbiIgKworCQkJIiAgICAgICAgSW5wdXRTdHJlYW0gaW5wdXQgPSBuZXcgRmlsZUlucHV0
U3RyZWFtKFwic29tZWZpbGVcIik7XG4iICsKKwkJCSIgICAgICAgIEZpbGVJbnB1dFN0cmVhbSBp
bnB1dDEgID0gKEZpbGVJbnB1dFN0cmVhbSlpbnB1dDtcbiIgKworCQkJIiAgICAgICAgU3lzdGVt
Lm91dC5wcmludGxuKGlucHV0MS5yZWFkKCkpO1xuIiArCisJCQkiICAgICAgICBpbnB1dC5jbG9z
ZSgpO1xuIiArIC8vIGRvIHByb3Bvc2UgdC13LXIsIG5vdCBmcm9tIGEgbWV0aG9kIGFyZ3VtZW50
CisJCQkiICAgIH1cbiIgKworCQkJIiAgICB2b2lkIGZvbzMoIElucHV0U3RyZWFtIGlucHV0LCBJ
bnB1dFN0cmVhbSBpbnB1dDIpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKKwkJCSIgICAgICAg
IEZpbGVJbnB1dFN0cmVhbSBpbnB1dDEgID0gKEZpbGVJbnB1dFN0cmVhbSlpbnB1dDtcbiIgKyAv
LyBzdGlsbCBkb24ndCBjbGFpbSBiZWNhdXNlIG9idGFpbmVkIGZyb20gb3V0c2lkZQorCQkJIiAg
ICAgICAgU3lzdGVtLm91dC5wcmludGxuKGlucHV0MS5yZWFkKCkpO1xuIiArCisJCQkiICAgICAg
ICBCdWZmZXJlZElucHV0U3RyZWFtIGJpcyA9IG5ldyBCdWZmZXJlZElucHV0U3RyZWFtKGlucHV0
Mik7XG4iICsKKwkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihiaXMucmVhZCgpKTtcbiIg
KworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSItLS0tLS0tLS0tXG4iICsKKwkJ
IjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxMilcbiIgKworCQkiCUlucHV0U3RyZWFtIGlu
cHV0ID0gbmV3IEZpbGVJbnB1dFN0cmVhbShcInNvbWVmaWxlXCIpO1xuIiArCisJCSIJICAgICAg
ICAgICAgXl5eXl5cbiIgKworCQkiUmVzb3VyY2UgXCdpbnB1dFwnIHNob3VsZCBiZSBtYW5hZ2Vk
IGJ5IHRyeS13aXRoLXJlc291cmNlXG4iICsKKwkJIi0tLS0tLS0tLS1cbiIsCisJCW9wdGlvbnMp
OworfQorLy8gQnVnIDM2MjMzMiAtIE9ubHkgcmVwb3J0IHBvdGVudGlhbCBsZWFrIHdoZW4gY2xv
c2VhYmxlIG5vdCBjcmVhdGVkIGluIHRoZSBsb2NhbCBzY29wZQorLy8gYSByZXNvdXJjZSBpcyBv
YnRhaW5lZCBmcm9tIGEgZmllbGQgcmVhZCwgdGhlbiByZS1hc3NpZ25lZAorcHVibGljIHZvaWQg
dGVzdDA2M2UoKSB7CisJTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKKwlvcHRp
b25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBD
b21waWxlck9wdGlvbnMuRVJST1IpOworCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJ
T05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVS
Uk9SKTsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2
YSIsCisJCQkiaW1wb3J0IGphdmEuaW8uRmlsZUlucHV0U3RyZWFtO1xuIiArCisJCQkiaW1wb3J0
IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJ
CSIgICAgRmlsZUlucHV0U3RyZWFtIGlucHV0MTtcbiIgKworCQkJIiAgICBwdWJsaWMgdm9pZCBm
b28oKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCisJCQkiICAgICAgICBGaWxlSW5wdXRTdHJl
YW0gaW5wdXQgPSBpbnB1dDE7XG4iICsKKwkJCSIgICAgICAgIGlucHV0ID0gbmV3IEZpbGVJbnB1
dFN0cmVhbShcImFkZmFmZFwiKTtcbiIgKworCQkJIiAgICAgICAgaW5wdXQuY2xvc2UoKTtcbiIg
KworCQkJIiAgICB9XG4iICsKKwkJCSJ9XG4iCisJCX0sCisJCSIiLAorCQludWxsLAorCQl0cnVl
LAorCQludWxsLAorCQlvcHRpb25zLAorCQludWxsKTsKK30KKworfQpkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vVGVzdEFsbC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBp
bGVyL3JlZ3Jlc3Npb24vVGVzdEFsbC5qYXZhCmluZGV4IDRkYmY4YmEuLjVmMmYzZDggMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1Rlc3RBbGwuamF2YQorKysgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9UZXN0QWxsLmphdmEKQEAgLTEsNSArMSw1IEBA
CiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBw
cm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxh
YmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAg
KiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBh
dApAQCAtNyw3ICs3LDkgQEAKICAqCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBv
cmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCi0gKiAgICAgU3RlcGhhbiBI
ZXJybWFubiAtIENvbnRyaWJ1dGlvbiBmb3IgYnVnIDE4NjM0MiAtIFtjb21waWxlcl1bbnVsbF0g
VXNpbmcgYW5ub3RhdGlvbnMgZm9yIG51bGwgY2hlY2tpbmcKKyAqICAgICBTdGVwaGFuIEhlcnJt
YW5uIC0gQ29udHJpYnV0aW9ucyBmb3IKKyAqCQkJCQkJCQlidWcgMTg2MzQyIC0gW2NvbXBpbGVy
XVtudWxsXSBVc2luZyBhbm5vdGF0aW9ucyBmb3IgbnVsbCBjaGVja2luZworICoJCQkJCQkJCWJ1
ZyAzNTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3
YXJuaW5ncwogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLmNvbXBpbGVyLnJlZ3Jlc3Npb247CiAKQEAgLTc0LDYgKzc2LDcgQEAgcHVi
bGljIHN0YXRpYyBUZXN0IHN1aXRlKCkgewogCXN0YW5kYXJkVGVzdHMuYWRkKFByb2dyYW1taW5n
UHJvYmxlbXNUZXN0LmNsYXNzKTsKIAlzdGFuZGFyZFRlc3RzLmFkZChNYW5pZmVzdEFuYWx5emVy
VGVzdC5jbGFzcyk7CiAJc3RhbmRhcmRUZXN0cy5hZGQoSW5pdGlhbGl6YXRpb25UZXN0cy5jbGFz
cyk7CisJc3RhbmRhcmRUZXN0cy5hZGQoUmVzb3VyY2VMZWFrVGVzdHMuY2xhc3MpOwogCiAJLy8g
YWRkIGFsbCBqYXZhZG9jIHRlc3RzCiAJZm9yIChpbnQgaT0wLCBsPUphdmFkb2NUZXN0LkFMTF9D
TEFTU0VTLnNpemUoKTsgaTxsOyBpKyspIHsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxl
ci9yZWdyZXNzaW9uL1RyeVdpdGhSZXNvdXJjZXNTdGF0ZW1lbnRUZXN0LmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvY29tcGlsZXIvcmVncmVzc2lvbi9UcnlXaXRoUmVzb3VyY2VzU3RhdGVtZW50VGVzdC5qYXZh
CmluZGV4IGYyMWE1N2YuLjY1ZjE0MGIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9y
ZWdyZXNzaW9uL1RyeVdpdGhSZXNvdXJjZXNTdGF0ZW1lbnRUZXN0LmphdmEKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vVHJ5V2l0aFJlc291cmNlc1N0YXRlbWVudFRlc3QuamF2
YQpAQCAtMTYsMTQgKzE2LDEzIEBAIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
Y29tcGlsZXIucmVncmVzc2lvbjsKIAogaW1wb3J0IGphdmEudXRpbC5NYXA7CiAKLWltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuY29yZS5KYXZhQ29yZTsKLWltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIuaW1wbC5Db21waWxlck9wdGlvbnM7Ci0KIGltcG9ydCBqdW5pdC5mcmFt
ZXdvcmsuVGVzdDsKKworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5p
bXBsLkNvbXBpbGVyT3B0aW9uczsKIHB1YmxpYyBjbGFzcyBUcnlXaXRoUmVzb3VyY2VzU3RhdGVt
ZW50VGVzdCBleHRlbmRzIEFic3RyYWN0UmVncmVzc2lvblRlc3QgewogCiBzdGF0aWMgewotLy8J
VEVTVFNfTkFNRVMgPSBuZXcgU3RyaW5nW10geyAidGVzdDA1NnRocm93In07CisvLwlURVNUU19O
QU1FUyA9IG5ldyBTdHJpbmdbXSB7ICJ0ZXN0MDYxbSJ9OwogLy8JVEVTVFNfTlVNQkVSUyA9IG5l
dyBpbnRbXSB7IDUwIH07CiAvLwlURVNUU19SQU5HRSA9IG5ldyBpbnRbXSB7IDExLCAtMSB9Owog
fQpAQCAtMzQ1NCwxOTA3ICszNDUzLDE3NiBAQCBwdWJsaWMgdm9pZCB0ZXN0MDU1YSgpIHsKIAkJ
fSwKIAkJIkRvbmUiKTsKIH0KLS8vIEJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3Ig
bWlzc2luZyB0cnktd2l0aC1yZXNvdXJjZXMKLS8vIGEgbWV0aG9kIHVzZXMgYW4gQXV0b0Nsb3Nl
YWJsZSB3aXRob3V0IGV2ZXIgY2xvc2luZyBpdC4KLXB1YmxpYyB2b2lkIHRlc3QwNTYoKSB7Ci0J
TWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKLQlvcHRpb25zLnB1dChDb21waWxl
ck9wdGlvbnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMu
RVJST1IpOwotCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50
aWFsbHlVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLldBUk5JTkcpOwotCXRoaXMu
cnVuTmVnYXRpdmVUZXN0KAorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTM2MTA1MworcHVibGljIHZvaWQgdGVzdDA1NygpIHsKKwl0aGlzLnJ1bkNvbmZv
cm1UZXN0KAogCQluZXcgU3RyaW5nW10gewogCQkJIlguamF2YSIsCi0JCQkiaW1wb3J0IGphdmEu
aW8uRmlsZTtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFkZXI7XG4iICsKLQkJCSJp
bXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKwotCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIg
KwotCQkJIiAgICB2b2lkIGZvbygpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKLQkJCSIgICAg
ICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKLQkJCSIgICAgICAg
IEZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiArCi0vLyBu
b3QgaW52b2tpbmcgYW55IG1ldGhvZHMgb24gRmlsZVJlYWRlciwgdHJ5IHRvIGF2b2lkIG5lY2Vz
c2FyeSBjYWxsIHRvIHN1cGVyY2xhc3MoKSBpbiB0aGUgY29tcGlsZXIKLS8vCQkJIiAgICAgICAg
Y2hhcltdIGluID0gbmV3IGNoYXJbNTBdO1xuIiArCi0vLwkJCSIgICAgICAgIGZpbGVSZWFkZXIu
cmVhZChpbik7XG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9p
ZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKLQkJCSIgICAg
ICAgIG5ldyBYKCkuZm9vKCk7XG4iICsKLQkJCSIgICAgfVxuIiArCisJCQkicHVibGljIGNsYXNz
IFggaW1wbGVtZW50cyBBdXRvQ2xvc2VhYmxlIHtcbiIgKworCQkJIglAT3ZlcnJpZGVcbiIgKwor
CQkJIglwdWJsaWMgdm9pZCBjbG9zZSgpIHRocm93cyBFeGNlcHRpb24ge1xuIiArCisJCQkiCQl0
aHJvdyBuZXcgRXhjZXB0aW9uKCk7XG4iICsKKwkJCSIJfVxuIiArCisJCQkiCXB1YmxpYyBzdGF0
aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKworCQkJIgkJZmluYWwgYm9vbGVhbiBm
b287XG4iICsKKwkJCSIJCXRyeSAoWCBhID0gbmV3IFgoKTsgWCBiID0gbmV3IFgoKSkge1xuIiAr
CisJCQkiCQkJZm9vID0gdHJ1ZTtcbiIgKworCQkJIgkJfSBjYXRjaCAoZmluYWwgRXhjZXB0aW9u
IGV4Y2VwdGlvbikge1xuIiArCisJCQkiCQkJcmV0dXJuO1xuIiArCisJCQkiCQl9XG4iICsKKwkJ
CSIJfVxuIiArCiAJCQkifVxuIgotCQl9LAotCQkiLS0tLS0tLS0tLVxuIiArIAotCQkiMS4gRVJS
T1IgaW4gWC5qYXZhIChhdCBsaW5lIDcpXG4iICsgCi0JCSIJRmlsZVJlYWRlciBmaWxlUmVhZGVy
ID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsgCi0JCSIJICAgICAgICAgICBeXl5eXl5eXl5e
XG4iICsgCi0JCSJSZXNvdXJjZSBsZWFrOiAnZmlsZVJlYWRlcicgaXMgbmV2ZXIgY2xvc2VkXG4i
ICsKLQkJIi0tLS0tLS0tLS1cbiIsCi0JCW51bGwsCi0JCXRydWUsCi0JCW9wdGlvbnMpOworCQl9
LCAgIiIpOwkKIH0KLS8vIEJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2lu
ZyB0cnktd2l0aC1yZXNvdXJjZXMKLS8vIGEgbWV0aG9kIHVzZXMgYW4gQXV0b0Nsb3NlYWJsZSBh
bmQgY2xvc2VzIGl0IGJ1dCBub3QgcHJvdGVjdGVkIGJ5IHQtdy1yIG5vciByZWd1bGFyIHRyeS1m
aW5hbGx5Ci1wdWJsaWMgdm9pZCB0ZXN0MDU2YSgpIHsKLQlNYXAgb3B0aW9ucyA9IGdldENvbXBp
bGVyT3B0aW9ucygpOwotCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0
VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0Jb3B0aW9ucy5wdXQo
Q29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxl
LCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5P
UFRJT05fUmVwb3J0RXhwbGljaXRseUNsb3NlZEF1dG9DbG9zZWFibGUsIENvbXBpbGVyT3B0aW9u
cy5FUlJPUik7Ci0JdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisvLyBodHRwczovL2J1Z3MuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzY0MDA4CitwdWJsaWMgdm9pZCB0ZXN0MDU4KCkg
eworCXRoaXMucnVuQ29uZm9ybVRlc3QoCiAJCW5ldyBTdHJpbmdbXSB7CiAJCQkiWC5qYXZhIiwK
LQkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCi0JCQkiaW1wb3J0IGphdmEuaW8uRmlsZVJl
YWRlcjtcbiIgKworCQkJImltcG9ydCBqYXZhLmlvLkJ5dGVBcnJheU91dHB1dFN0cmVhbTtcbiIg
KworCQkJImltcG9ydCBqYXZhLmlvLkZpbGVPdXRwdXRTdHJlYW07XG4iICsKIAkJCSJpbXBvcnQg
amF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKworCQkJIlxuIiArCiAJCQkicHVibGljIGNsYXNzIFgg
e1xuIiArCi0JCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwotCQkJ
IiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKwotCQkJIiAg
ICAgICAgRmlsZVJlYWRlciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsK
LQkJCSIgICAgICAgIGNoYXJbXSBpbiA9IG5ldyBjaGFyWzUwXTtcbiIgKwotCQkJIiAgICAgICAg
ZmlsZVJlYWRlci5yZWFkKGluKTtcbiIgKwotCQkJIgkJIGZpbGVSZWFkZXIuY2xvc2UoKTtcbiIg
KwotCQkJIiAgICB9XG4iICsKLQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5n
W10gYXJncykge1xuIiArCi0JCQkiICAgICAgICB0cnkge1xuIiArCi0JCQkiICAgICAgICAgICAg
bmV3IFgoKS5mb28oKTtcbiIgKwotCQkJIiAgICAgICAgfSBjYXRjaCAoSU9FeGNlcHRpb24gaW9l
eCkge1xuIiArCi0JCQkiICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwiY2F1Z2h0XCIp
O1xuIiArCi0JCQkiICAgICAgICB9XG4iICsKKwkJCSJcbiIgKworCQkJIiAgcHVibGljIHN0YXRp
YyB2b2lkIG1haW4oZmluYWwgU3RyaW5nW10gYXJncykgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIg
KworCQkJIiAgICBieXRlW10gZGF0YTtcbiIgKworCQkJIiAgICB0cnkgKGZpbmFsIEJ5dGVBcnJh
eU91dHB1dFN0cmVhbSBvcyA9IG5ldyBCeXRlQXJyYXlPdXRwdXRTdHJlYW0oKTtcbiIgKworCQkJ
IiAgICAgICAgIGZpbmFsIEZpbGVPdXRwdXRTdHJlYW0gb3V0ID0gbmV3IEZpbGVPdXRwdXRTdHJl
YW0oXCJ0ZXN0LmRhdFwiKSkge1xuIiArCisJCQkiICAgICAgZGF0YSA9IG9zLnRvQnl0ZUFycmF5
KCk7XG4iICsKIAkJCSIgICAgfVxuIiArCisJCQkiICB9XG4iICsKIAkJCSJ9XG4iCi0JCX0sCi0J
CSItLS0tLS0tLS0tXG4iICsgCi0JCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNylcbiIg
KyAKLQkJIglGaWxlUmVhZGVyIGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTtcbiIg
KyAKLQkJIgkgICAgICAgICAgIF5eXl5eXl5eXl5cbiIgKyAKLQkJIlJlc291cmNlICdmaWxlUmVh
ZGVyJyBzaG91bGQgYmUgbWFuYWdlZCBieSB0cnktd2l0aC1yZXNvdXJjZVxuIiArIAotCQkiLS0t
LS0tLS0tLVxuIiwKLQkJbnVsbCwKLQkJdHJ1ZSwKLQkJb3B0aW9ucyk7CisJCX0sICAiIik7CQog
fQotLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRo
LXJlc291cmNlcwotLy8gYSBtZXRob2QgdXNlcyBhbiBBdXRvQ2xvc2VhYmxlIGFuZCBjbG9zZXMg
aXQgcHJvcGVybHkgaW4gYSBmaW5hbGx5IGJsb2NrCi1wdWJsaWMgdm9pZCB0ZXN0MDU2YigpIHsK
LQlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwotCW9wdGlvbnMucHV0KENvbXBp
bGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9u
cy5FUlJPUik7Ci0Jb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3Rl
bnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOworLy8gaHR0
cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM2NzU2NiAtIEluIHRy
eS13aXRoLXJlc291cmNlcyBzdGF0ZW1lbnQgY2xvc2UoKSBtZXRob2Qgb2YgcmVzb3VyY2UgaXMg
bm90IGNhbGxlZAorcHVibGljIHZvaWQgdGVzdDA1OSgpIHsKIAl0aGlzLnJ1bkNvbmZvcm1UZXN0
KAogCQluZXcgU3RyaW5nW10gewogCQkJIlguamF2YSIsCi0JCQkiaW1wb3J0IGphdmEuaW8uRmls
ZTtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFkZXI7XG4iICsKIAkJCSJpbXBvcnQg
amF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKwotCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwotCQkJ
IiAgICB2b2lkIGZvbygpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKLQkJCSIgICAgICAgIEZp
bGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKLQkJCSIgICAgICAgIEZpbGVS
ZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiArCi0JCQkiICAgICAg
ICB0cnkge1xuIiArCi0JCQkiICAgICAgICAgICAgY2hhcltdIGluID0gbmV3IGNoYXJbNTBdO1xu
IiArCi0JCQkiICAgICAgICAgICAgZmlsZVJlYWRlci5yZWFkKGluKTtcbiIgKwotCQkJIiAgICAg
ICAgfSBmaW5hbGx5IHtcbiIgKwotCQkJIgkJICAgICBmaWxlUmVhZGVyLmNsb3NlKCk7XG4iICsK
LQkJCSIgICAgICAgIH1cbiIgKwotCQkJIiAgICB9XG4iICsKLQkJCSIgICAgcHVibGljIHN0YXRp
YyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIiArCi0JCQkiICAgICAgICB0cnkge1xuIiAr
Ci0JCQkiICAgICAgICAgICAgbmV3IFgoKS5mb28oKTtcbiIgKwotCQkJIiAgICAgICAgfSBjYXRj
aCAoSU9FeGNlcHRpb24gaW9leCkge1xuIiArCi0JCQkiICAgICAgICAgICAgU3lzdGVtLm91dC5w
cmludGxuKFwiY2F1Z2h0XCIpO1xuIiArCi0JCQkiICAgICAgICB9XG4iICsKKwkJCSJcbiIgKwor
CQkJInB1YmxpYyBjbGFzcyBYIGltcGxlbWVudHMgamF2YS5sYW5nLkF1dG9DbG9zZWFibGUge1xu
IiArCisJCQkiICBzdGF0aWMgYm9vbGVhbiBpc09wZW4gPSB0cnVlO1xuIiArCisJCQkiICBwdWJs
aWMgc3RhdGljIHZvaWQgbWFpbihmaW5hbCBTdHJpbmdbXSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRp
b24ge1xuIiArCisJCQkiICAgIGZvbygpO1xuIiArCisJCQkiICAgIFN5c3RlbS5vdXQucHJpbnRs
bihpc09wZW4pO1xuIiArCisJCQkiICB9XG4iICsKKwkJCSIgIHN0YXRpYyBib29sZWFuIGZvbygp
IHtcbiIgKworCQkJIiAgICB0cnkgKGZpbmFsIFggeCA9IG5ldyBYKCkpIHtcbiIgKworCQkJIiAg
ICAgIHJldHVybiB4Lm51bSgpID49IDE7XG4iICsKIAkJCSIgICAgfVxuIiArCisJCQkiICB9XG4i
ICsKKwkJCSIgIGludCBudW0oKSB7IHJldHVybiAyOyB9XG4iICsKKwkJCSIgIHB1YmxpYyB2b2lk
IGNsb3NlKCkge1xuIiArCisJCQkiICAgIGlzT3BlbiA9IGZhbHNlO1xuIiArCisJCQkiICB9XG4i
ICsKIAkJCSJ9XG4iCi0JCX0sCi0JCSJjYXVnaHQiLCAvKm91dHB1dCovCi0JCW51bGwvKmNsYXNz
TGlicyovLAotCQl0cnVlLypzaG91bGRGbHVzaCovLAotCQludWxsLyp2bWFyZ3MqLywKLQkJb3B0
aW9ucywKLQkJbnVsbC8qcmVxdWVzdG9yKi8pOworCQl9LCAgCisJCSJmYWxzZSIpOwkKIH0KLS8v
IEJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNv
dXJjZXMKLS8vIGEgbWV0aG9kIHVzZXMgYW4gQXV0b0Nsb3NlYWJsZSBwcm9wZXJseSB3aXRoaW4g
dHJ5LXdpdGgtcmVzb3VyY2VzLgotcHVibGljIHZvaWQgdGVzdDA1NmMoKSB7Ci0JTWFwIG9wdGlv
bnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKLQlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMu
T1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwot
CW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNs
b3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLldBUk5JTkcpOworCisvLyBodHRwczovL2J1
Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzY3NTY2IC0gSW4gdHJ5LXdpdGgt
cmVzb3VyY2VzIHN0YXRlbWVudCBjbG9zZSgpIG1ldGhvZCBvZiByZXNvdXJjZSBpcyBub3QgY2Fs
bGVkCitwdWJsaWMgdm9pZCB0ZXN0MDYwKCkgewogCXRoaXMucnVuQ29uZm9ybVRlc3QoCiAJCW5l
dyBTdHJpbmdbXSB7CiAJCQkiWC5qYXZhIiwKLQkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiAr
Ci0JCQkiaW1wb3J0IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlv
LklPRXhjZXB0aW9uO1xuIiArCi0JCQkicHVibGljIGNsYXNzIFgge1xuIiArCi0JCQkiICAgIHZv
aWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwotCQkJIiAgICAgICAgRmlsZSBmaWxl
ID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKwotCQkJIiAgICAgICAgdHJ5IChGaWxlUmVh
ZGVyIGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKSkge1xuIiArCi0JCQkiICAgICAg
ICAgICAgY2hhcltdIGluID0gbmV3IGNoYXJbNTBdO1xuIiArCi0JCQkiICAgICAgICAgICAgZmls
ZVJlYWRlci5yZWFkKGluKTtcbiIgKwotCQkJIgkJIH1cbiIgKworCQkJInB1YmxpYyBjbGFzcyBY
IGltcGxlbWVudHMgQXV0b0Nsb3NlYWJsZSB7XG4iICsKKwkJCSIJc3RhdGljIGludCBudW0gPSAx
MCA7XG4iICsKKwkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3Mp
IHRocm93cyBFeGNlcHRpb24geyBcbiIgKworCQkJIiAgICAJU3lzdGVtLm91dC5wcmludGxuKGZv
bygxKSk7XG4iICsKKwkJCSIgICAgCVN5c3RlbS5vdXQucHJpbnRsbihmb28oMikpO1xuIiArCisJ
CQkiICAgIAlTeXN0ZW0ub3V0LnByaW50bG4oZm9vKDMpKTtcbiIgKwogCQkJIiAgICB9XG4iICsK
LQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIiArCi0J
CQkiICAgICAgICB0cnkge1xuIiArCi0JCQkiICAgICAgICAgICAgbmV3IFgoKS5mb28oKTtcbiIg
KwotCQkJIiAgICAgICAgfSBjYXRjaCAoSU9FeGNlcHRpb24gaW9leCkge1xuIiArCi0JCQkiICAg
ICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwiY2F1Z2h0XCIpO1xuIiArCisJCQkiCXByaXZh
dGUgc3RhdGljIGJvb2xlYW4gZm9vKGludCB3aGVyZSkgdGhyb3dzIEV4Y2VwdGlvbiB7XG4iICsK
KwkJCSIJCWZpbmFsIGJvb2xlYW4gZ2V0T3V0ID0gdHJ1ZTtcbiIgKworCQkJIiAgICAJU3lzdGVt
Lm91dC5wcmludGxuKFwiTWFpblwiKTtcbiIgKworCQkJIiAgICAJdHJ5IChYIHgxID0gbmV3IFgo
KTsgWCB4MiA9IG5ldyBYKCkpIHtcbiIgKworCQkJIiAgICAJCWlmICh3aGVyZSA9PSAxKSB7XG4i
ICsKKwkJCSIgICAgCQkJcmV0dXJuIHdoZXJlID09IDE7XG4iICsKKwkJCSIgICAgCQl9XG4iICsK
KwkJCSIgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oXCJPdXRlciBUcnlcIik7XG4iICsK
KwkJCSIgICAgICAgICAgICB3aGlsZSAodHJ1ZSkge1xuIiArCisJCQkiICAgICAgICAgICAgCXRy
eSAoWSB5MSA9IG5ldyBZKCk7IFkgeTIgPSBuZXcgWSgpKSB7IFxuIiArCisJCQkiICAgICAgICAg
ICAgCQlpZiAod2hlcmUgPT0gMikge1xuIiArCisJCQkiICAgICAgICAgICAgCQkJcmV0dXJuIHdo
ZXJlID09IDI7XG4iICsKKwkJCSIgICAgICAgICAgICAJCX0JCVxuIiArCisJCQkiICAgICAgICAg
ICAgCQlTeXN0ZW0ub3V0LnByaW50bG4oXCJNaWRkbGUgVHJ5XCIpO1xuIiArCisJCQkiICAgICAg
ICAgICAgCQl0cnkgKFogejEgPSBuZXcgWigpOyBaIHoyID0gbmV3IFooKSkge1xuIiArCisJCQki
ICAgICAgICAgICAgCQkJU3lzdGVtLm91dC5wcmludGxuKFwiSW5uZXIgVHJ5XCIpO1xuIiArCisJ
CQkiICAgICAgICAgICAgCQkJaWYgKGdldE91dCkgXG4iICsKKwkJCSIgICAgICAgICAgICAJCQkJ
cmV0dXJuIG51bSA+PSAxMDtcbiIgKworCQkJIiAgICAgICAgICAgIAkJCWVsc2VcbiIgKworCQkJ
IiAgICAgICAgICAgIAkJCQlicmVhazsgXG4iICsKKwkJCSIgICAgICAgICAgICAJCX1cbiIgKwor
CQkJIiAgICAgICAgICAgIAl9XG4iICsKKwkJCSIgICAgICAgICAgICB9XG4iICsKKwkJCSIgICAg
ICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oXCJPdXQgb2Ygd2hpbGVcIik7XG4iICsKIAkJCSIg
ICAgICAgIH1cbiIgKworCQkJIgkJcmV0dXJuIGZhbHNlO1xuIiArCisJCQkiCX1cbiIgKworCQkJ
IiAgICBwdWJsaWMgWCgpIHtcbiIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwi
WDo6WFwiKTtcbiIgKwogCQkJIiAgICB9XG4iICsKLQkJCSJ9XG4iCi0JCX0sCi0JCSJjYXVnaHQi
LCAvKm91dHB1dCovCi0JCW51bGwvKmNsYXNzTGlicyovLAotCQl0cnVlLypzaG91bGRGbHVzaCov
LAotCQludWxsLyp2bWFyZ3MqLywKLQkJb3B0aW9ucywKLQkJbnVsbC8qcmVxdWVzdG9yKi8pOwot
fQotLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRo
LXJlc291cmNlcwotLy8gYSBtZXRob2QgdXNlcyB0d28gQXV0b0Nsb3NlYWJsZXMgKHRlc3Rpbmcg
aW5kZXBlbmRlbnQgYW5hbHlzaXMpCi0vLyAtIG9uZSBjbG9zZWFibGUgbWF5IGJlIHVuY2xvc2Vk
IGF0IGEgY29uZGl0aW9uYWwgcmV0dXJuCi0vLyAtIHRoZSBvdGhlciBpcyBvbmx5IGNvbmRpdGlv
bmFsbHkgY2xvc2VkCi1wdWJsaWMgdm9pZCB0ZXN0MDU2ZCgpIHsKLQlNYXAgb3B0aW9ucyA9IGdl
dENvbXBpbGVyT3B0aW9ucygpOwotCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05f
UmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0Jb3B0aW9u
cy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xv
c2VhYmxlLCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7Ci0JdGhpcy5ydW5OZWdhdGl2ZVRlc3Qo
Ci0JCW5ldyBTdHJpbmdbXSB7Ci0JCQkiWC5qYXZhIiwKLQkJCSJpbXBvcnQgamF2YS5pby5GaWxl
O1xuIiArCi0JCQkiaW1wb3J0IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIgKwotCQkJImltcG9ydCBq
YXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCi0JCQkicHVibGljIGNsYXNzIFgge1xuIiArCi0JCQki
ICAgIHZvaWQgZm9vKGJvb2xlYW4gZmxhZzEsIGJvb2xlYW4gZmxhZzIpIHRocm93cyBJT0V4Y2Vw
dGlvbiB7XG4iICsKLQkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVc
Iik7XG4iICsKLQkJCSIgICAgICAgIGNoYXJbXSBpbiA9IG5ldyBjaGFyWzUwXTtcbiIgKwotCQkJ
IiAgICAgICAgRmlsZVJlYWRlciBmaWxlUmVhZGVyMSA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xu
IiArCi0JCQkiICAgICAgICBmaWxlUmVhZGVyMS5yZWFkKGluKTtcbiIgKwotCQkJIiAgICAgICAg
RmlsZVJlYWRlciBmaWxlUmVhZGVyMiA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiArCi0JCQki
ICAgICAgICBmaWxlUmVhZGVyMi5yZWFkKGluKTtcbiIgKwotCQkJIiAgICAgICAgaWYgKGZsYWcx
KSB7XG4iICsKLQkJCSIgICAgICAgICAgICBmaWxlUmVhZGVyMi5jbG9zZSgpO1xuIiArCi0JCQki
ICAgICAgICAgICAgcmV0dXJuO1xuIiArCi0JCQkiICAgICAgICB9IGVsc2UgaWYgKGZsYWcyKSB7
XG4iICsKLQkJCSIgICAgICAgICAgICBmaWxlUmVhZGVyMi5jbG9zZSgpO1xuIiArCi0JCQkiICAg
ICAgICB9XG4iICsKLQkJCSIgICAgICAgIGZpbGVSZWFkZXIxLmNsb3NlKCk7XG4iICsKKwkJCSIg
ICAgQE92ZXJyaWRlXG4iICsKKwkJCSIJcHVibGljIHZvaWQgY2xvc2UoKSB0aHJvd3MgRXhjZXB0
aW9uIHtcbiIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwiWDo6flhcIik7XG4i
ICsKIAkJCSIgICAgfVxuIiArCi0JCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmlu
Z1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKLQkJCSIgICAgICAgIG5ldyBYKCku
Zm9vKGZhbHNlLCB0cnVlKTtcbiIgKworCQkJIn1cbiIgKworCQkJImNsYXNzIFkgaW1wbGVtZW50
cyBBdXRvQ2xvc2VhYmxlIHtcbiIgKworCQkJIiAgICBwdWJsaWMgWSgpIHtcbiIgKworCQkJIiAg
ICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwiWTo6WVwiKTtcbiIgKwogCQkJIiAgICB9XG4iICsK
LQkJCSJ9XG4iCi0JCX0sCi0JCSItLS0tLS0tLS0tXG4iICsgCi0JCSIxLiBXQVJOSU5HIGluIFgu
amF2YSAoYXQgbGluZSAxMClcbiIgKyAKLQkJIglGaWxlUmVhZGVyIGZpbGVSZWFkZXIyID0gbmV3
IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsgCi0JCSIJICAgICAgICAgICBeXl5eXl5eXl5eXlxuIiAr
IAotCQkiUG90ZW50aWFsIHJlc291cmNlIGxlYWs6ICdmaWxlUmVhZGVyMicgbWF5IG5vdCBiZSBj
bG9zZWRcbiIgKwotCQkiLS0tLS0tLS0tLVxuIiArIAotCQkiMi4gRVJST1IgaW4gWC5qYXZhIChh
dCBsaW5lIDE0KVxuIiArIAotCQkiCXJldHVybjtcbiIgKyAKLQkJIgleXl5eXl5eXG4iICsgCi0J
CSJSZXNvdXJjZSBsZWFrOiAnZmlsZVJlYWRlcjEnIGlzIG5vdCBjbG9zZWQgYXQgdGhpcyBsb2Nh
dGlvblxuIiArIAotCQkiLS0tLS0tLS0tLVxuIiwKLQkJbnVsbCwKLQkJdHJ1ZSwKLQkJb3B0aW9u
cyk7Ci19Ci0vL0J1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnkt
d2l0aC1yZXNvdXJjZXMKLS8vYSBtZXRob2QgdXNlcyB0d28gQXV0b0Nsb3NlYWJsZXMgKHRlc3Rp
bmcgaW5kZXBlbmRlbnQgYW5hbHlzaXMpCi0vLy0gb25lIGNsb3NlYWJsZSBtYXkgYmUgdW5jbG9z
ZWQgYXQgYSBjb25kaXRpb25hbCByZXR1cm4KLS8vLSB0aGUgb3RoZXIgaXMgb25seSBjb25kaXRp
b25hbGx5IGNsb3NlZAotcHVibGljIHZvaWQgdGVzdDA1NmRfc3VwcHJlc3MoKSB7Ci0JTWFwIG9w
dGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKLQlvcHRpb25zLnB1dChDb21waWxlck9wdGlv
bnMuT1BUSU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1Ip
OwotCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlV
bmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLldBUk5JTkcpOwotCW9wdGlvbnMucHV0
KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fU3VwcHJlc3NPcHRpb25hbEVycm9ycywgQ29tcGlsZXJP
cHRpb25zLkVOQUJMRUQpOwotCXRoaXMucnVuTmVnYXRpdmVUZXN0KAotCQluZXcgU3RyaW5nW10g
ewotCQkJIlguamF2YSIsCi0JCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKwotCQkJImltcG9y
dCBqYXZhLmlvLkZpbGVSZWFkZXI7XG4iICsKLQkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlv
bjtcbiIgKwotCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwotCQkJIiAgICB2b2lkIGZvbyhib29s
ZWFuIGZsYWcxLCBib29sZWFuIGZsYWcyKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCi0JCQki
ICAgICAgICBAU3VwcHJlc3NXYXJuaW5ncyhcInJlc291cmNlXCIpIEZpbGUgZmlsZSA9IG5ldyBG
aWxlKFwic29tZWZpbGVcIik7IC8vIHVubmVjZXNzYXJ5IHN1cHByZXNzXG4iICsKLQkJCSIgICAg
ICAgIGNoYXJbXSBpbiA9IG5ldyBjaGFyWzUwXTtcbiIgKwotCQkJIiAgICAgICAgRmlsZVJlYWRl
ciBmaWxlUmVhZGVyMSA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiArCi0JCQkiICAgICAgICBm
aWxlUmVhZGVyMS5yZWFkKGluKTtcbiIgKwotCQkJIiAgICAgICAgQFN1cHByZXNzV2FybmluZ3Mo
XCJyZXNvdXJjZVwiKSBGaWxlUmVhZGVyIGZpbGVSZWFkZXIyID0gbmV3IEZpbGVSZWFkZXIoZmls
ZSk7IC8vIHVzZWZ1bCBzdXBwcmVzc1xuIiArCi0JCQkiICAgICAgICBmaWxlUmVhZGVyMi5yZWFk
KGluKTtcbiIgKwotCQkJIiAgICAgICAgaWYgKGZsYWcxKSB7XG4iICsKLQkJCSIgICAgICAgICAg
ICBmaWxlUmVhZGVyMi5jbG9zZSgpO1xuIiArCi0JCQkiICAgICAgICAgICAgcmV0dXJuOyAvLyBu
b3Qgc3VwcHJlc3NlZFxuIiArCi0JCQkiICAgICAgICB9IGVsc2UgaWYgKGZsYWcyKSB7XG4iICsK
LQkJCSIgICAgICAgICAgICBmaWxlUmVhZGVyMi5jbG9zZSgpO1xuIiArCi0JCQkiICAgICAgICB9
XG4iICsKLQkJCSIgICAgICAgIGZpbGVSZWFkZXIxLmNsb3NlKCk7XG4iICsKKwkJCSIgICAgQE92
ZXJyaWRlXG4iICsKKwkJCSIJcHVibGljIHZvaWQgY2xvc2UoKSB0aHJvd3MgRXhjZXB0aW9uIHtc
biIgKworCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwiWTo6fllcIik7XG4iICsKIAkJ
CSIgICAgfVxuIiArCi0JCQkiICAgIEBTdXBwcmVzc1dhcm5pbmdzKFwicmVzb3VyY2VcIikgLy8g
dXNlZnVsIHN1cHByZXNzXG4iICsKLQkJCSIgICAgdm9pZCBiYXIoKSB0aHJvd3MgSU9FeGNlcHRp
b24ge1xuIiArCi0JCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIp
O1xuIiArCi0JCQkiICAgICAgICBGaWxlUmVhZGVyIGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRl
cihmaWxlKTtcbiIgKwotCQkJIiAgICAgICAgY2hhcltdIGluID0gbmV3IGNoYXJbNTBdO1xuIiAr
Ci0JCQkiICAgICAgICBmaWxlUmVhZGVyLnJlYWQoaW4pO1xuIiArCisJCQkifVxuIiArCisJCQki
Y2xhc3MgWiBpbXBsZW1lbnRzIEF1dG9DbG9zZWFibGUge1xuIiArCisJCQkiICAgIHB1YmxpYyBa
KCkge1xuIiArCisJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oXCJaOjpaXCIpO1xuIiAr
CiAJCQkiICAgIH1cbiIgKwotCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdb
XSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCi0JCQkiICAgICAgICBuZXcgWCgpLmZv
byhmYWxzZSwgdHJ1ZSk7XG4iICsKKwkJCSIgICAgQE92ZXJyaWRlXG4iICsKKwkJCSIJcHVibGlj
IHZvaWQgY2xvc2UoKSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIgKworCQkJIiAgICAgICAgU3lzdGVt
Lm91dC5wcmludGxuKFwiWjo6flpcIik7XG4iICsKIAkJCSIgICAgfVxuIiArCiAJCQkifVxuIgot
CQl9LAotCQkiLS0tLS0tLS0tLVxuIiArIAotCQkiMS4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxp
bmUgNilcbiIgKyAKLQkJIglAU3VwcHJlc3NXYXJuaW5ncyhcInJlc291cmNlXCIpIEZpbGUgZmls
ZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7IC8vIHVubmVjZXNzYXJ5IHN1cHByZXNzXG4iICsg
Ci0JCSIJICAgICAgICAgICAgICAgICAgXl5eXl5eXl5eXlxuIiArIAotCQkiVW5uZWNlc3Nhcnkg
QFN1cHByZXNzV2FybmluZ3MoXCJyZXNvdXJjZVwiKVxuIiArIAotCQkiLS0tLS0tLS0tLVxuIiAr
IAotCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDE0KVxuIiArIAotCQkiCXJldHVybjsg
Ly8gbm90IHN1cHByZXNzZWRcbiIgKyAKLQkJIgleXl5eXl5eXG4iICsgCi0JCSJSZXNvdXJjZSBs
ZWFrOiAnZmlsZVJlYWRlcjEnIGlzIG5vdCBjbG9zZWQgYXQgdGhpcyBsb2NhdGlvblxuIiArIAot
CQkiLS0tLS0tLS0tLVxuIiwKLQkJbnVsbCwKLQkJdHJ1ZSwKLQkJb3B0aW9ucyk7CisJCX0sIAor
CQkiTWFpblxuIiArIAorCQkiWDo6WFxuIiArIAorCQkiWDo6WFxuIiArIAorCQkiWDo6flhcbiIg
KyAKKwkJIlg6On5YXG4iICsgCisJCSJ0cnVlXG4iICsgCisJCSJNYWluXG4iICsgCisJCSJYOjpY
XG4iICsgCisJCSJYOjpYXG4iICsgCisJCSJPdXRlciBUcnlcbiIgKyAKKwkJIlk6OllcbiIgKyAK
KwkJIlk6OllcbiIgKyAKKwkJIlk6On5ZXG4iICsgCisJCSJZOjp+WVxuIiArIAorCQkiWDo6flhc
biIgKyAKKwkJIlg6On5YXG4iICsgCisJCSJ0cnVlXG4iICsgCisJCSJNYWluXG4iICsgCisJCSJY
OjpYXG4iICsgCisJCSJYOjpYXG4iICsgCisJCSJPdXRlciBUcnlcbiIgKyAKKwkJIlk6OllcbiIg
KyAKKwkJIlk6OllcbiIgKyAKKwkJIk1pZGRsZSBUcnlcbiIgKyAKKwkJIlo6OlpcbiIgKyAKKwkJ
Ilo6OlpcbiIgKyAKKwkJIklubmVyIFRyeVxuIiArIAorCQkiWjo6flpcbiIgKyAKKwkJIlo6On5a
XG4iICsgCisJCSJZOjp+WVxuIiArIAorCQkiWTo6fllcbiIgKyAKKwkJIlg6On5YXG4iICsgCisJ
CSJYOjp+WFxuIiArIAorCQkidHJ1ZSIpOwogfQotLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3
YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNlcwotLy8gb25lIG1ldGhvZCByZXR1
cm5zIGFuIEF1dG9DbGVhc2JsZSwgYSBzZWNvbmQgbWV0aG9kIHVzZXMgdGhpcyBvYmplY3Qgd2l0
aG91dCBldmVyIGNsb3NpbmcgaXQuCi1wdWJsaWMgdm9pZCB0ZXN0MDU2ZSgpIHsKLQlNYXAgb3B0
aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwotCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9u
cy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7
Ci0Jb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVu
Y2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7Ci0JdGhpcy5ydW5OZWdh
dGl2ZVRlc3QoCi0JCW5ldyBTdHJpbmdbXSB7Ci0JCQkiWC5qYXZhIiwKLQkJCSJpbXBvcnQgamF2
YS5pby5GaWxlO1xuIiArCi0JCQkiaW1wb3J0IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIgKwotCQkJ
ImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCi0JCQkicHVibGljIGNsYXNzIFgge1xu
IiArCi0JCQkiICAgIEZpbGVSZWFkZXIgZ2V0UmVhZGVyKFN0cmluZyBmaWxlbmFtZSkgdGhyb3dz
IElPRXhjZXB0aW9uIHtcbiIgKwotCQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJz
b21lZmlsZVwiKTtcbiIgKwotCQkJIiAgICAgICAgRmlsZVJlYWRlciBmaWxlUmVhZGVyID0gbmV3
IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsKLQkJCSIgICAgICAgIHJldHVybiBmaWxlUmVhZGVyO1xu
IiArIAkJLy8gZG9uJ3QgY29tcGxhaW4gaGVyZSwgcGFzcyByZXNwb25zaWJpbGl0eSB0byBjYWxs
ZXIKLQkJCSIgICAgfVxuIiArCi0JCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9u
IHtcbiIgKwotCQkJIiAgICAgICAgRmlsZVJlYWRlciByZWFkZXIgPSBnZXRSZWFkZXIoXCJzb21l
ZmlsZVwiKTtcbiIgKwotCQkJIiAgICAgICAgY2hhcltdIGluID0gbmV3IGNoYXJbNTBdO1xuIiAr
Ci0JCQkiICAgICAgICByZWFkZXIucmVhZChpbik7XG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQki
ICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2Vw
dGlvbiB7XG4iICsKLQkJCSIgICAgICAgIG5ldyBYKCkuZm9vKCk7XG4iICsKLQkJCSIgICAgfVxu
IiArCi0JCQkifVxuIgotCQl9LAotCQkiLS0tLS0tLS0tLVxuIiArIAotCQkiMS4gRVJST1IgaW4g
WC5qYXZhIChhdCBsaW5lIDExKVxuIiArIAotCQkiCUZpbGVSZWFkZXIgcmVhZGVyID0gZ2V0UmVh
ZGVyKFwic29tZWZpbGVcIik7XG4iICsgCi0JCSIJICAgICAgICAgICBeXl5eXl5cbiIgKyAKLQkJ
IlJlc291cmNlIGxlYWs6ICdyZWFkZXInIGlzIG5ldmVyIGNsb3NlZFxuIiArIAotCQkiLS0tLS0t
LS0tLVxuIiwKLQkJbnVsbCwKLQkJdHJ1ZSwKLQkJb3B0aW9ucyk7Ci19Ci0vLyBCdWcgMzQ5MzI2
IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCi0vLyBh
IG1ldGhvZCBleHBsaWNpdGx5IGNsb3NlcyBpdHMgQXV0b0Nsb3NlYWJsZSByYXRoZXIgdGhhbiB1
c2luZyB0LXctcgotcHVibGljIHZvaWQgdGVzdDA1NmYoKSB7Ci0JTWFwIG9wdGlvbnMgPSBnZXRD
b21waWxlck9wdGlvbnMoKTsKLQlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1Jl
cG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCW9wdGlvbnMu
cHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3NlZENsb3Nl
YWJsZSwgQ29tcGlsZXJPcHRpb25zLldBUk5JTkcpOwotCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0
aW9ucy5PUFRJT05fUmVwb3J0RXhwbGljaXRseUNsb3NlZEF1dG9DbG9zZWFibGUsIENvbXBpbGVy
T3B0aW9ucy5FUlJPUik7Ci0JdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCi0JCW5ldyBTdHJpbmdbXSB7
Ci0JCQkiWC5qYXZhIiwKLQkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCi0JCQkiaW1wb3J0
IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9u
O1xuIiArCi0JCQkicHVibGljIGNsYXNzIFgge1xuIiArCi0JCQkiICAgIHZvaWQgZm9vKCkgdGhy
b3dzIElPRXhjZXB0aW9uIHtcbiIgKwotCQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUo
XCJzb21lZmlsZVwiKTtcbiIgKwotCQkJIiAgICAgICAgRmlsZVJlYWRlciBmaWxlUmVhZGVyID0g
bnVsbDtcbiIgKwotCQkJIiAgICAgICAgdHJ5IHtcbiIgKwotCQkJIiAgICAgICAgICAgIGZpbGVS
ZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTtcbiIgKwotCQkJIiAgICAgICAgICAgIGNoYXJb
XSBpbiA9IG5ldyBjaGFyWzUwXTtcbiIgKwotCQkJIiAgICAgICAgICAgIGZpbGVSZWFkZXIucmVh
ZChpbik7XG4iICsKLQkJCSIgICAgICAgIH0gZmluYWxseSB7XG4iICsKLQkJCSIgICAgICAgICAg
ICBmaWxlUmVhZGVyLmNsb3NlKCk7XG4iICsKLQkJCSIgICAgICAgIH1cbiIgKwotCQkJIiAgICB9
XG4iICsKLQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykgdGhy
b3dzIElPRXhjZXB0aW9uIHtcbiIgKwotCQkJIiAgICAgICAgbmV3IFgoKS5mb28oKTtcbiIgKwot
CQkJIiAgICB9XG4iICsKLQkJCSJ9XG4iCi0JCX0sCi0JCSItLS0tLS0tLS0tXG4iICsgCi0JCSIx
LiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNylcbiIgKyAKLQkJIglGaWxlUmVhZGVyIGZpbGVS
ZWFkZXIgPSBudWxsO1xuIiArIAotCQkiCSAgICAgICAgICAgXl5eXl5eXl5eXlxuIiArIAotCQki
UmVzb3VyY2UgJ2ZpbGVSZWFkZXInIHNob3VsZCBiZSBtYW5hZ2VkIGJ5IHRyeS13aXRoLXJlc291
cmNlXG4iICsgCi0JCSItLS0tLS0tLS0tXG4iLAotCQludWxsLAotCQl0cnVlLAotCQlvcHRpb25z
KTsKLX0KLS8vIEJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnkt
d2l0aC1yZXNvdXJjZXMKLS8vIGFuIEF1dG9DbG9zZWFibGUgbG9jYWwgaXMgcmUtYXNzaWduZWQK
LXB1YmxpYyB2b2lkIHRlc3QwNTZnKCkgewotCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRp
b25zKCk7Ci0Jb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfVU5DTE9TRURfQ0xPU0VB
QkxFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJ
TEVSX1BCX1BPVEVOVElBTExZX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLldB
Uk5JTkcpOwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX0VYUExJQ0lUTFlfQ0xP
U0VEX0FVVE9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5JR05PUkUpOwotCXRoaXMucnVuTmVn
YXRpdmVUZXN0KAotCQluZXcgU3RyaW5nW10gewotCQkJIlguamF2YSIsCi0JCQkiaW1wb3J0IGph
dmEuaW8uRmlsZTtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFkZXI7XG4iICsKLQkJ
CSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKwotCQkJInB1YmxpYyBjbGFzcyBYIHtc
biIgKwotCQkJIiAgICB2b2lkIGZvbygpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKLQkJCSIg
ICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKLQkJCSIgICAg
ICAgIEZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiArCi0J
CQkiICAgICAgICBjaGFyW10gaW4gPSBuZXcgY2hhcls1MF07XG4iICsKLQkJCSIgICAgICAgIGZp
bGVSZWFkZXIucmVhZChpbik7XG4iICsKLQkJCSIgICAgICAgIGZpbGVSZWFkZXIgPSBuZXcgRmls
ZVJlYWRlcihmaWxlKTtcbiIgKwotCQkJIiAgICAgICAgZmlsZVJlYWRlci5yZWFkKGluKTtcbiIg
KwotCQkJIiAgICAgICAgZmlsZVJlYWRlci5jbG9zZSgpO1xuIiArCi0JCQkiICAgICAgICBmaWxl
UmVhZGVyID0gbnVsbDtcbiIgKwotCQkJIiAgICB9XG4iICsKLQkJCSIgICAgcHVibGljIHN0YXRp
YyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwotCQkJ
IiAgICAgICAgbmV3IFgoKS5mb28oKTtcbiIgKwotCQkJIiAgICB9XG4iICsKLQkJCSJ9XG4iCi0J
CX0sCi0JCSItLS0tLS0tLS0tXG4iICsgCi0JCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUg
MTApXG4iICsgCi0JCSIJZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiArIAot
CQkiCV5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXlxuIiArIAotCQkiUmVzb3VyY2Ug
bGVhazogJ2ZpbGVSZWFkZXInIGlzIG5vdCBjbG9zZWQgYXQgdGhpcyBsb2NhdGlvblxuIiArIAot
CQkiLS0tLS0tLS0tLVxuIiwKLQkJbnVsbCwKLQkJdHJ1ZSwKLQkJb3B0aW9ucyk7Ci19Ci0vLyBC
dWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3Vy
Y2VzCi0vLyBhbiBBdXRvQ2xvc2VhYmxlIGxvY2FsIGlzIHJlLWFzc2lnbmVkIGFmdGVyIG51bGwt
YXNzaWduZWQKLXB1YmxpYyB2b2lkIHRlc3QwNTZnMigpIHsKLQlNYXAgb3B0aW9ucyA9IGdldENv
bXBpbGVyT3B0aW9ucygpOwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX1VOQ0xP
U0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQlvcHRpb25zLnB1dChKYXZh
Q29yZS5DT01QSUxFUl9QQl9QT1RFTlRJQUxMWV9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVy
T3B0aW9ucy5XQVJOSU5HKTsKLQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9FWFBM
SUNJVExZX0NMT1NFRF9BVVRPQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuSUdOT1JFKTsKLQl0
aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKLQkJbmV3IFN0cmluZ1tdIHsKLQkJCSJYLmphdmEiLAotCQkJ
ImltcG9ydCBqYXZhLmlvLkZpbGU7XG4iICsKLQkJCSJpbXBvcnQgamF2YS5pby5GaWxlUmVhZGVy
O1xuIiArCi0JCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKLQkJCSJwdWJsaWMg
Y2xhc3MgWCB7XG4iICsKLQkJCSIgICAgdm9pZCBmb28oKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xu
IiArCi0JCQkiICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xuIiAr
Ci0JCQkiICAgICAgICBGaWxlUmVhZGVyIGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxl
KTtcbiIgKwotCQkJIiAgICAgICAgY2hhcltdIGluID0gbmV3IGNoYXJbNTBdO1xuIiArCi0JCQki
ICAgICAgICBmaWxlUmVhZGVyLnJlYWQoaW4pO1xuIiArCi0JCQkiICAgICAgICBmaWxlUmVhZGVy
ID0gbnVsbDtcbiIgKwotCQkJIiAgICAgICAgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZp
bGUpO1xuIiArIC8vIGRvbid0IGNvbXBsYWluIGFnYWluLCBmaWxlUmVhZGVyIGlzIG51bGwsIHNv
IG5vdGhpbmcgY2FuIGxlYWsgaGVyZQotCQkJIiAgICAgICAgZmlsZVJlYWRlci5yZWFkKGluKTtc
biIgKwotCQkJIiAgICAgICAgZmlsZVJlYWRlci5jbG9zZSgpO1xuIiArCi0JCQkiICAgIH1cbiIg
KwotCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB0aHJvd3Mg
SU9FeGNlcHRpb24ge1xuIiArCi0JCQkiICAgICAgICBuZXcgWCgpLmZvbygpO1xuIiArCi0JCQki
ICAgIH1cbiIgKwotCQkJIn1cbiIKLQkJfSwKLQkJIi0tLS0tLS0tLS1cbiIgKyAKLQkJIjEuIEVS
Uk9SIGluIFguamF2YSAoYXQgbGluZSAxMClcbiIgKyAKLQkJIglmaWxlUmVhZGVyID0gbnVsbDtc
biIgKyAKLQkJIgleXl5eXl5eXl5eXl5eXl5eXlxuIiArIAotCQkiUmVzb3VyY2UgbGVhazogJ2Zp
bGVSZWFkZXInIGlzIG5vdCBjbG9zZWQgYXQgdGhpcyBsb2NhdGlvblxuIiArIAotCQkiLS0tLS0t
LS0tLVxuIiwKLQkJbnVsbCwKLQkJdHJ1ZSwKLQkJb3B0aW9ucyk7Ci19Ci0vLyBCdWcgMzQ5MzI2
IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCi0vLyB0
d28gQXV0b0Nsb3NlYWJsZXMgYXQgZGlmZmVyZW50IG5lc3RpbmcgbGV2ZWxzIChhbm9ueW1vdXMg
bG9jYWwgdHlwZSkKLXB1YmxpYyB2b2lkIHRlc3QwNTZoKCkgewotCU1hcCBvcHRpb25zID0gZ2V0
Q29tcGlsZXJPcHRpb25zKCk7Ci0Jb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfVU5D
TE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCW9wdGlvbnMucHV0KEph
dmFDb3JlLkNPTVBJTEVSX1BCX1BPVEVOVElBTExZX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGls
ZXJPcHRpb25zLldBUk5JTkcpOwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX0VY
UExJQ0lUTFlfQ0xPU0VEX0FVVE9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5JR05PUkUpOwot
CXRoaXMucnVuTmVnYXRpdmVUZXN0KAotCQluZXcgU3RyaW5nW10gewotCQkJIlguamF2YSIsCi0J
CQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFk
ZXI7XG4iICsKLQkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKwotCQkJInB1Ymxp
YyBjbGFzcyBYIHtcbiIgKwotCQkJIiAgICB2b2lkIGZvbygpIHRocm93cyBJT0V4Y2VwdGlvbiB7
XG4iICsKLQkJCSIgICAgICAgIGZpbmFsIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVc
Iik7XG4iICsKLQkJCSIgICAgICAgIGZpbmFsIEZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBG
aWxlUmVhZGVyKGZpbGUpO1xuIiArCi0JCQkiICAgICAgICBjaGFyW10gaW4gPSBuZXcgY2hhcls1
MF07XG4iICsKLQkJCSIgICAgICAgIGZpbGVSZWFkZXIucmVhZChpbik7XG4iICsKLQkJCSIgICAg
ICAgIG5ldyBSdW5uYWJsZSgpIHtcbiBwdWJsaWMgdm9pZCBydW4oKSB7XG4iICsKLQkJCSIgICAg
ICAgICAgICB0cnkge1xuIiArCi0JCQkiICAgICAgICAgICAgICAgIGZpbGVSZWFkZXIuY2xvc2Uo
KTtcbiIgKwotCQkJIiAgICAgICAgICAgICAgICBGaWxlUmVhZGVyIGxvY2FsUmVhZGVyID0gbmV3
IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsKLQkJCSIgICAgICAgICAgICB9IGNhdGNoIChJT0V4Y2Vw
dGlvbiBleCkgeyAvKiBub3AgKi8gfVxuIiArCi0JCQkiICAgICAgICB9fS5ydW4oKTtcbiIgKwot
CQkJIiAgICB9XG4iICsKLQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10g
YXJncykgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwotCQkJIiAgICAgICAgbmV3IFgoKS5mb28o
KTtcbiIgKwotCQkJIiAgICB9XG4iICsKLQkJCSJ9XG4iCi0JCX0sCi0JCSItLS0tLS0tLS0tXG4i
ICsgCi0JCSIxLiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSA3KVxuIiArIAotCQkiCWZpbmFs
IEZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiArIAotCQki
CSAgICAgICAgICAgICAgICAgXl5eXl5eXl5eXlxuIiArIAotCQkiUG90ZW50aWFsIHJlc291cmNl
IGxlYWs6ICdmaWxlUmVhZGVyJyBtYXkgbm90IGJlIGNsb3NlZFxuIiArIAotCQkiLS0tLS0tLS0t
LVxuIiArIAotCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDE0KVxuIiArIAotCQkiCUZp
bGVSZWFkZXIgbG9jYWxSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTtcbiIgKyAKLQkJIgkg
ICAgICAgICAgIF5eXl5eXl5eXl5eXG4iICsgCi0JCSJSZXNvdXJjZSBsZWFrOiAnbG9jYWxSZWFk
ZXInIGlzIG5ldmVyIGNsb3NlZFxuIiArIAotCQkiLS0tLS0tLS0tLVxuIiwKLQkJbnVsbCwKLQkJ
dHJ1ZSwKLQkJb3B0aW9ucyk7Ci19Ci0vLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcg
Zm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCi0vLyB0aHJlZSBBdXRvQ2xvc2VhYmxlcyBp
biBkaWZmZXJlbnQgYmxvY2tzIG9mIHRoZSBzYW1lIG1ldGhvZAotcHVibGljIHZvaWQgdGVzdDA1
NmkoKSB7Ci0JTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKLQlvcHRpb25zLnB1
dChKYXZhQ29yZS5DT01QSUxFUl9QQl9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9u
cy5FUlJPUik7Ci0Jb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfUE9URU5USUFMTFlf
VU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7Ci0Jb3B0aW9ucy5w
dXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfRVhQTElDSVRMWV9DTE9TRURfQVVUT0NMT1NFQUJMRSwg
Q29tcGlsZXJPcHRpb25zLklHTk9SRSk7Ci0JdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCi0JCW5ldyBT
dHJpbmdbXSB7Ci0JCQkiWC5qYXZhIiwKLQkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCi0J
CQkiaW1wb3J0IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlvLklP
RXhjZXB0aW9uO1xuIiArCi0JCQkicHVibGljIGNsYXNzIFgge1xuIiArCi0JCQkiICAgIHZvaWQg
Zm9vKGJvb2xlYW4gZjEsIGJvb2xlYW4gZjIpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKLQkJ
CSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsKLQkJCSIg
ICAgICAgIGlmIChmMSkge1xuIiArCi0JCQkiICAgICAgICAgICAgRmlsZVJlYWRlciBmaWxlUmVh
ZGVyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7IC8vIGVycjogbm90IGNsb3NlZFxuIiArCi0JCQki
ICAgICAgICAgICAgY2hhcltdIGluID0gbmV3IGNoYXJbNTBdO1xuIiArCi0JCQkiICAgICAgICAg
ICAgZmlsZVJlYWRlci5yZWFkKGluKTtcbiIgKwotCQkJIiAgICAgICAgICAgIHdoaWxlICh0cnVl
KSB7XG4iICsKLQkJCSIgICAgICAgICAgICAgICAgIEZpbGVSZWFkZXIgbG9vcFJlYWRlciA9IG5l
dyBGaWxlUmVhZGVyKGZpbGUpOyAvLyBkb24ndCB3YXJuLCBwcm9wZXJseSBjbG9zZWRcbiIgKwot
CQkJIiAgICAgICAgICAgICAgICAgbG9vcFJlYWRlci5jbG9zZSgpOyIgKwotCQkJIiAgICAgICAg
ICAgICAgICAgYnJlYWs7XG4iICsKLQkJCSIgICAgICAgICAgICB9XG4iICsKLQkJCSIgICAgICAg
IH0gZWxzZSB7XG4iICsKLQkJCSIgICAgICAgICAgICBGaWxlUmVhZGVyIGZpbGVSZWFkZXIgPSBu
ZXcgRmlsZVJlYWRlcihmaWxlKTsgLy8gd2Fybjogbm90IGNsb3NlZCBvbiBhbGwgcGF0aHNcbiIg
KwotCQkJIiAgICAgICAgICAgIGlmIChmMilcbiIgKwotCQkJIiAgICAgICAgICAgICAgICBmaWxl
UmVhZGVyLmNsb3NlKCk7XG4iICsKLQkJCSIgICAgICAgIH1cbiIgKwotCQkJIiAgICB9XG4iICsK
LQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykgdGhyb3dzIElP
RXhjZXB0aW9uIHtcbiIgKwotCQkJIiAgICAgICAgbmV3IFgoKS5mb28odHJ1ZSwgdHJ1ZSk7XG4i
ICsKLQkJCSIgICAgfVxuIiArCi0JCQkifVxuIgotCQl9LAotCQkiLS0tLS0tLS0tLVxuIiArIAot
CQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDgpXG4iICsgCi0JCSIJRmlsZVJlYWRlciBm
aWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7IC8vIGVycjogbm90IGNsb3NlZFxuIiAr
IAotCQkiCSAgICAgICAgICAgXl5eXl5eXl5eXlxuIiArIAotCQkiUmVzb3VyY2UgbGVhazogJ2Zp
bGVSZWFkZXInIGlzIG5ldmVyIGNsb3NlZFxuIiArIAotCQkiLS0tLS0tLS0tLVxuIiArIAotCQki
Mi4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUgMTYpXG4iICsgCi0JCSIJRmlsZVJlYWRlciBm
aWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7IC8vIHdhcm46IG5vdCBjbG9zZWQgb24g
YWxsIHBhdGhzXG4iICsgCi0JCSIJICAgICAgICAgICBeXl5eXl5eXl5eXG4iICsgCi0JCSJQb3Rl
bnRpYWwgcmVzb3VyY2UgbGVhazogJ2ZpbGVSZWFkZXInIG1heSBub3QgYmUgY2xvc2VkXG4iICsg
Ci0JCSItLS0tLS0tLS0tXG4iLAotCQludWxsLAotCQl0cnVlLAotCQlvcHRpb25zKTsKLX0KLS8v
IEJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNv
dXJjZXMKLS8vIHRocmVlIEF1dG9DbG9zZWFibGVzIGluIGRpZmZlcmVudCBibG9ja3Mgb2YgdGhl
IHNhbWUgbWV0aG9kCi1wdWJsaWMgdm9pZCB0ZXN0MDU2aTIoKSB7Ci0JTWFwIG9wdGlvbnMgPSBn
ZXRDb21waWxlck9wdGlvbnMoKTsKLQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9V
TkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0Jb3B0aW9ucy5wdXQo
SmF2YUNvcmUuQ09NUElMRVJfUEJfUE9URU5USUFMTFlfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21w
aWxlck9wdGlvbnMuRVJST1IpOwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX0VY
UExJQ0lUTFlfQ0xPU0VEX0FVVE9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5JR05PUkUpOwot
CXRoaXMucnVuTmVnYXRpdmVUZXN0KAotCQluZXcgU3RyaW5nW10gewotCQkJIlguamF2YSIsCi0J
CQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKyAKLQkJCSJpbXBvcnQgamF2YS5pby5GaWxlUmVh
ZGVyO1xuIiArIAotCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArIAotCQkJInB1
YmxpYyBjbGFzcyBYIHtcbiIgKwotCQkJIiAgICB2b2lkIGZvbyhib29sZWFuIGYxLCBib29sZWFu
IGYyKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArIAotCQkJIiAgICAgICAgRmlsZSBmaWxlID0g
bmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKyAKLQkJCSIgICAgICAgIGlmIChmMSkge1xuIiAr
IAotCQkJIiAgICAgICAgICAgIEZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVy
KGZpbGUpOyAvLyBwcm9wZXJseSBjbG9zZWRcbiIgKyAKLQkJCSIgICAgICAgICAgICBjaGFyW10g
aW4gPSBuZXcgY2hhcls1MF07XG4iICsgCi0JCQkiICAgICAgICAgICAgZmlsZVJlYWRlci5yZWFk
KGluKTtcbiIgKyAKLQkJCSIgICAgICAgICAgICB3aGlsZSAodHJ1ZSkge1xuIiArIAotCQkJIiAg
ICAgICAgICAgICAgICAgIGZpbGVSZWFkZXIuY2xvc2UoKTtcbiIgKyAKLQkJCSIgICAgICAgICAg
ICAgICAgICBGaWxlUmVhZGVyIGxvb3BSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTsgLy8g
ZG9uJ3Qgd2FybiwgcHJvcGVybHkgY2xvc2VkXG4iICsgCi0JCQkiICAgICAgICAgICAgICAgICAg
bG9vcFJlYWRlci5jbG9zZSgpO1xuIiArIAotCQkJIiAgICAgICAgICAgICAgICAgIGJyZWFrO1xu
IiArIAotCQkJIiAgICAgICAgICAgIH1cbiIgKyAKLQkJCSIgICAgICAgIH0gZWxzZSB7XG4iICsg
Ci0JCQkiICAgICAgICAgICAgRmlsZVJlYWRlciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIo
ZmlsZSk7IC8vIHdhcm46IG5vdCBjbG9zZWQgb24gYWxsIHBhdGhzXG4iICsgCi0JCQkiICAgICAg
ICAgICAgaWYgKGYyKVxuIiArIAotCQkJIiAgICAgICAgICAgICAgICBmaWxlUmVhZGVyLmNsb3Nl
KCk7XG4iICsgCi0JCQkiICAgICAgICB9XG4iICsgCi0JCQkiICAgIH1cbiIgKyAKLQkJCSIgICAg
cHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykgdGhyb3dzIElPRXhjZXB0aW9u
IHtcbiIgKyAKLQkJCSIgICAgICAgIG5ldyBYKCkuZm9vKHRydWUsIHRydWUpO1xuIiArIAotCQkJ
IiAgICB9XG4iICsgCi0JCQkifVxuIgotCQl9LAotCQkiLS0tLS0tLS0tLVxuIiArIAotCQkiMS4g
RVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDE4KVxuIiArIAotCQkiCUZpbGVSZWFkZXIgZmlsZVJl
YWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpOyAvLyB3YXJuOiBub3QgY2xvc2VkIG9uIGFsbCBw
YXRoc1xuIiArIAotCQkiCSAgICAgICAgICAgXl5eXl5eXl5eXlxuIiArIAotCQkiUG90ZW50aWFs
IHJlc291cmNlIGxlYWs6ICdmaWxlUmVhZGVyJyBtYXkgbm90IGJlIGNsb3NlZFxuIiArIAotCQki
LS0tLS0tLS0tLVxuIiwKLQkJbnVsbCwKLQkJdHJ1ZSwKLQkJb3B0aW9ucyk7Ci19Ci0vLyBCdWcg
MzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2Vz
Ci0vLyBhIG1ldGhvZCB1c2VzIGFuIEF1dG9DbG9zZWFibGUgd2l0aG91dCBjbG9zaW5nIGl0IGxv
Y2FsbHkgYnV0IHBhc3NpbmcgYXMgYXJnIHRvIGFub3RoZXIgbWV0aG9kCi1wdWJsaWMgdm9pZCB0
ZXN0MDU2aigpIHsKLQlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwotCW9wdGlv
bnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENv
bXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0Jb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElP
Tl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJS
T1IpOwotCXRoaXMucnVuTmVnYXRpdmVUZXN0KAotCQluZXcgU3RyaW5nW10gewotCQkJIlguamF2
YSIsCi0JCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlvLkZp
bGVSZWFkZXI7XG4iICsKLQkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKwotCQkJ
InB1YmxpYyBjbGFzcyBYIHtcbiIgKwotCQkJIiAgICB2b2lkIGZvbygpIHRocm93cyBJT0V4Y2Vw
dGlvbiB7XG4iICsKLQkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVc
Iik7XG4iICsKLQkJCSIgICAgICAgIEZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVh
ZGVyKGZpbGUpO1xuIiArCi0JCQkiICAgICAgICByZWFkKGZpbGVSZWFkZXIpO1xuIiArCi0JCQki
ICAgIH1cbiIgKwotCQkJIiAgICB2b2lkIHJlYWQoRmlsZVJlYWRlciByZWFkZXIpIHsgfVxuIiAr
Ci0JCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJ
T0V4Y2VwdGlvbiB7XG4iICsKLQkJCSIgICAgICAgIG5ldyBYKCkuZm9vKCk7XG4iICsKLQkJCSIg
ICAgfVxuIiArCi0JCQkifVxuIgotCQl9LAotCQkiLS0tLS0tLS0tLVxuIiArIAotCQkiMS4gRVJS
T1IgaW4gWC5qYXZhIChhdCBsaW5lIDcpXG4iICsgCi0JCSIJRmlsZVJlYWRlciBmaWxlUmVhZGVy
ID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsgCi0JCSIJICAgICAgICAgICBeXl5eXl5eXl5e
XG4iICsgCi0JCSJQb3RlbnRpYWwgcmVzb3VyY2UgbGVhazogJ2ZpbGVSZWFkZXInIG1heSBub3Qg
YmUgY2xvc2VkXG4iICsgCi0JCSItLS0tLS0tLS0tXG4iLAotCQludWxsLAotCQl0cnVlLAotCQlv
cHRpb25zKTsKLX0KLS8vIEJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2lu
ZyB0cnktd2l0aC1yZXNvdXJjZXMKLS8vIGEgbWV0aG9kIHVzZXMgYW4gQXV0b0Nsb3NlYWJsZSB3
aXRob3V0IGNsb3NpbmcgaXQgbG9jYWxseSBidXQgcGFzc2luZyBhcyBhcmcgdG8gYW5vdGhlciBt
ZXRob2QKLXB1YmxpYyB2b2lkIHRlc3QwNTZqY29uZGl0aW9uYWwoKSB7Ci0JTWFwIG9wdGlvbnMg
PSBnZXRDb21waWxlck9wdGlvbnMoKTsKLQlvcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BU
SU9OX1JlcG9ydFVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCW9w
dGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0UG90ZW50aWFsbHlVbmNsb3Nl
ZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQl0aGlzLnJ1bk5lZ2F0aXZlVGVz
dCgKLQkJbmV3IFN0cmluZ1tdIHsKLQkJCSJYLmphdmEiLAotCQkJImltcG9ydCBqYXZhLmlvLkZp
bGU7XG4iICsKLQkJCSJpbXBvcnQgamF2YS5pby5GaWxlUmVhZGVyO1xuIiArCi0JCQkiaW1wb3J0
IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsKLQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKLQkJ
CSIgICAgdm9pZCBmb28oYm9vbGVhbiBiKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCi0JCQki
ICAgICAgICBGaWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpO1xuIiArCi0JCQkiICAg
ICAgICBGaWxlUmVhZGVyIGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTtcbiIgKwot
CQkJIiAgICAgICAgc3luY2hyb25pemVkIChiID8gdGhpcyA6IG5ldyBYKCkpIHtcbiIgKwotCQkJ
IiAgICAgICAgICAgIG5ldyBSZWFkRGVsZWdhdG9yKGZpbGVSZWFkZXIpO1xuIiArCi0JCQkiICAg
ICAgICB9XG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQkiICAgIGNsYXNzIFJlYWREZWxlZ2F0b3Ig
eyBSZWFkRGVsZWdhdG9yKEZpbGVSZWFkZXIgcmVhZGVyKSB7IH0gfVxuIiArCi0JCQkiICAgIHB1
YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7
XG4iICsKLQkJCSIgICAgICAgIG5ldyBYKCkuZm9vKHRydWUpO1xuIiArCi0JCQkiICAgIH1cbiIg
KwotCQkJIn1cbiIKLQkJfSwKLQkJIi0tLS0tLS0tLS1cbiIgKyAKLQkJIjEuIEVSUk9SIGluIFgu
amF2YSAoYXQgbGluZSA3KVxuIiArIAotCQkiCUZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBG
aWxlUmVhZGVyKGZpbGUpO1xuIiArIAotCQkiCSAgICAgICAgICAgXl5eXl5eXl5eXlxuIiArIAot
CQkiUG90ZW50aWFsIHJlc291cmNlIGxlYWs6ICdmaWxlUmVhZGVyJyBtYXkgbm90IGJlIGNsb3Nl
ZFxuIiArIAotCQkiLS0tLS0tLS0tLVxuIiwKLQkJbnVsbCwKLQkJdHJ1ZSwKLQkJb3B0aW9ucyk7
Ci19Ci0vLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdp
dGgtcmVzb3VyY2VzCi0vLyBtYW55IGxvY2Fscywgc29tZSBhcmUgQXV0b0Nsb3NlYWJsZS4KLS8v
IFVuZm9ydHVuYXRlbHkgYW5hbHlzaXMgY2Fubm90IHJlc3BlY3QgaG93IGV4Y2VwdGlvbiBleGl0
cyBtYXkgYWZmZWN0IHJhMyBhbmQgcmIzLAotLy8gZG9pbmcgc28gd291bGQgY3JlYXRlIGZhbHNl
IHBvc2l0aXZlcy4KLXB1YmxpYyB2b2lkIHRlc3QwNTZrKCkgewotCU1hcCBvcHRpb25zID0gZ2V0
Q29tcGlsZXJPcHRpb25zKCk7Ci0Jb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9S
ZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQlvcHRpb25z
LnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9zZWRDbG9z
ZWFibGUsIENvbXBpbGVyT3B0aW9ucy5XQVJOSU5HKTsKLQlvcHRpb25zLnB1dChDb21waWxlck9w
dGlvbnMuT1BUSU9OX1JlcG9ydEV4cGxpY2l0bHlDbG9zZWRBdXRvQ2xvc2VhYmxlLCBDb21waWxl
ck9wdGlvbnMuRVJST1IpOwotCXRoaXMucnVuTmVnYXRpdmVUZXN0KAotCQluZXcgU3RyaW5nW10g
ewotCQkJIlguamF2YSIsCi0JCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKwotCQkJImltcG9y
dCBqYXZhLmlvLkZpbGVSZWFkZXI7XG4iICsKLQkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlv
bjtcbiIgKwotCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwotCQkJIiAgICB2b2lkIGZvbygpIHRo
cm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKLQkJCSIgICAgICAgIGludCBpMDEsIGkwMiwgaTAzLCBp
MDQsIGkwNSwgaTA2LCBpMDcsIGkwOCwgaTA5LFxuIiArCi0JCQkiICAgICAgICAgICAgaTExLCBp
MTIsIGkxMywgaTE0LCBpMTUsIGkxNiwgaTE3LCBpMTgsIGkxOSxcbiIgKwotCQkJIiAgICAgICAg
ICAgIGkyMSwgaTIyLCBpMjMsIGkyNCwgaTI1LCBpMjYsIGkyNywgaTI4LCBpMjksXG4iICsKLQkJ
CSIgICAgICAgICAgICBpMzEsIGkzMiwgaTMzLCBpMzQsIGkzNSwgaTM2LCBpMzcsIGkzOCwgaTM5
LFxuIiArCi0JCQkiICAgICAgICAgICAgaTQxLCBpNDIsIGk0MywgaTQ0LCBpNDUsIGk0NiwgaTQ3
LCBpNDgsIGk0OTtcbiIgKwotCQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21l
ZmlsZVwiKTtcbiIgKwotCQkJIiAgICAgICAgRmlsZVJlYWRlciByYTEgPSBudWxsLCByYTIgPSBu
dWxsO1xuIiArCi0JCQkiICAgICAgICB0cnkge1xuIiArCi0JCQkiICAgICAgICAgICAgcmExID0g
bmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsKLQkJCSIgICAgICAgICAgICByYTIgPSBuZXcgRmls
ZVJlYWRlcihmaWxlKTtcbiIgKwotCQkJIiAgICAgICAgICAgIEZpbGVSZWFkZXIgcmEzID0gbmV3
IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsKLQkJCSIgICAgICAgICAgICBjaGFyW10gaW4gPSBuZXcg
Y2hhcls1MF07XG4iICsKLQkJCSIgICAgICAgICAgICByYTEucmVhZChpbik7XG4iICsKLQkJCSIg
ICAgICAgICAgICByYTIucmVhZChpbik7XG4iICsKLQkJCSIgICAgICAgICAgICByYTMuY2xvc2Uo
KTtcbiIgKwotCQkJIiAgICAgICAgfSBmaW5hbGx5IHtcbiIgKwotCQkJIiAgICAgICAgICAgIHJh
MS5jbG9zZSgpO1xuIiArCi0JCQkiICAgICAgICB9XG4iICsKLQkJCSIgICAgICAgIGludCBpNTEs
IGk1MiwgaTUzLCBpNTQsIGk1NSwgaTU2LCBpNTcsIGk1OCwgaTU5LCBpNjA7XG4iICsgLy8gYmV5
b25kIHRoaXMgcG9pbnQgbG9jYWxzIGFyZSBhbmFseXplZCB1c2luZyBleHRyYUJpdHMKLQkJCSIg
ICAgICAgIEZpbGVSZWFkZXIgcmIxID0gbnVsbCwgcmIyID0gbnVsbDtcbiIgKwotCQkJIiAgICAg
ICAgdHJ5IHtcbiIgKwotCQkJIiAgICAgICAgICAgIHJiMSA9IG5ldyBGaWxlUmVhZGVyKGZpbGUp
O1xuIiArCi0JCQkiICAgICAgICAgICAgcmIyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsK
LQkJCSIgICAgICAgICAgICBGaWxlUmVhZGVyIHJiMyA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xu
IiArCi0JCQkiICAgICAgICAgICAgY2hhcltdIGluID0gbmV3IGNoYXJbNTBdO1xuIiArCi0JCQki
ICAgICAgICAgICAgcmIxLnJlYWQoaW4pO1xuIiArCi0JCQkiICAgICAgICAgICAgcmIyLnJlYWQo
aW4pO1xuIiArCi0JCQkiICAgICAgICAgICAgcmIzLmNsb3NlKCk7XG4iICsKLQkJCSIgICAgICAg
IH0gZmluYWxseSB7XG4iICsKLQkJCSIgICAgICAgICAgICByYjEuY2xvc2UoKTtcbiIgKwotCQkJ
IiAgICAgICAgfVxuIiArCi0JCQkiICAgIH1cbiIgKwotCQkJIiAgICBwdWJsaWMgc3RhdGljIHZv
aWQgbWFpbihTdHJpbmdbXSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCi0JCQkiICAg
ICAgICBuZXcgWCgpLmZvbygpO1xuIiArCi0JCQkiICAgIH1cbiIgKwotCQkJIn1cbiIKLQkJfSwK
LQkJIi0tLS0tLS0tLS1cbiIgKyAKLQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxMilc
biIgKyAKLQkJIglGaWxlUmVhZGVyIHJhMSA9IG51bGwsIHJhMiA9IG51bGw7XG4iICsgCi0JCSIJ
ICAgICAgICAgICBeXl5cbiIgKyAKLQkJIlJlc291cmNlICdyYTEnIHNob3VsZCBiZSBtYW5hZ2Vk
IGJ5IHRyeS13aXRoLXJlc291cmNlXG4iICsgCi0JCSItLS0tLS0tLS0tXG4iICsgCi0JCSIyLiBF
UlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTUpXG4iICsgCi0JCSIJcmEyID0gbmV3IEZpbGVSZWFk
ZXIoZmlsZSk7XG4iICsgCi0JCSIJXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIgKyAKLQkJ
IlJlc291cmNlIGxlYWs6ICdyYTInIGlzIG5ldmVyIGNsb3NlZFxuIiArIAotCQkiLS0tLS0tLS0t
LVxuIiArIAotCQkiMy4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDE2KVxuIiArIAotCQkiCUZp
bGVSZWFkZXIgcmEzID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsgCi0JCSIJICAgICAgICAg
ICBeXl5cbiIgKyAKLQkJIlJlc291cmNlICdyYTMnIHNob3VsZCBiZSBtYW5hZ2VkIGJ5IHRyeS13
aXRoLXJlc291cmNlXG4iICsKLQkJIi0tLS0tLS0tLS1cbiIgKyAKLQkJIjQuIEVSUk9SIGluIFgu
amF2YSAoYXQgbGluZSAyNSlcbiIgKyAKLQkJIglGaWxlUmVhZGVyIHJiMSA9IG51bGwsIHJiMiA9
IG51bGw7XG4iICsgCi0JCSIJICAgICAgICAgICBeXl5cbiIgKyAKLQkJIlJlc291cmNlICdyYjEn
IHNob3VsZCBiZSBtYW5hZ2VkIGJ5IHRyeS13aXRoLXJlc291cmNlXG4iICsgCi0JCSItLS0tLS0t
LS0tXG4iICsgCi0JCSI1LiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMjgpXG4iICsgCi0JCSIJ
cmIyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsgCi0JCSIJXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXl5cbiIgKyAKLQkJIlJlc291cmNlIGxlYWs6ICdyYjInIGlzIG5ldmVyIGNsb3NlZFxu
IiArIAotCQkiLS0tLS0tLS0tLVxuIiArIAotCQkiNi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5l
IDI5KVxuIiArIAotCQkiCUZpbGVSZWFkZXIgcmIzID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4i
ICsgCi0JCSIJICAgICAgICAgICBeXl5cbiIgKyAKLQkJIlJlc291cmNlICdyYjMnIHNob3VsZCBi
ZSBtYW5hZ2VkIGJ5IHRyeS13aXRoLXJlc291cmNlXG4iICsgCi0JCSItLS0tLS0tLS0tXG4iLAot
CQludWxsLAotCQl0cnVlLAotCQlvcHRpb25zKTsKLX0KLS8vIEJ1ZyAzNDkzMjYgLSBbMS43XSBu
ZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNvdXJjZXMKLS8vIHZhcmlvdXMgbm9u
LXByb2JsZW1zCi1wdWJsaWMgdm9pZCB0ZXN0MDU2bCgpIHsKLQlNYXAgb3B0aW9ucyA9IGdldENv
bXBpbGVyT3B0aW9ucygpOwotCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVw
b3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0Jb3B0aW9ucy5w
dXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2Vh
YmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9u
cy5PUFRJT05fUmVwb3J0RXhwbGljaXRseUNsb3NlZEF1dG9DbG9zZWFibGUsIENvbXBpbGVyT3B0
aW9ucy5FUlJPUik7Ci0JdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCi0JCW5ldyBTdHJpbmdbXSB7Ci0J
CQkiWC5qYXZhIiwKLQkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCi0JCQkiaW1wb3J0IGph
dmEuaW8uRmlsZVJlYWRlcjtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xu
IiArCi0JCQkicHVibGljIGNsYXNzIFgge1xuIiArCi0JCQkiICAgIFgoRmlsZVJlYWRlciByMCkg
e31cbiIgKyAvLyBkb24ndCBjb21wbGFpbiBhZ2FpbnN0IGFyZ3VtZW50Ci0JCQkiICAgIEZpbGVS
ZWFkZXIgZ2V0UmVhZGVyKCkgeyByZXR1cm4gbnVsbDsgfVxuIiArCi0JCQkiICAgIHZvaWQgZm9v
KEZpbGVSZWFkZXIgcjEpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKLQkJCSIgICAgICAgIEZp
bGVSZWFkZXIgZmlsZVJlYWRlciA9IGdldFJlYWRlcigpO1xuIiArCi0JCQkiICAgICAgICBpZiAo
ZmlsZVJlYWRlciA9PSBudWxsKVxuIiArCi0JCQkiICAgICAgICAgICAgcmV0dXJuO1xuIiArIC8v
IGRvbid0IGNvbXBsYWluLCByZXNvdXJjZSBpcyBhY3R1YWxseSBudWxsCi0JCQkiICAgICAgICBG
aWxlUmVhZGVyIHIzID0gZ2V0UmVhZGVyKCk7XG4iICsKLQkJCSIgICAgICAgIGlmIChyMyA9PSBu
dWxsKVxuIiArCi0JCQkiICAgICAgICAgICAgcjMgPSBuZXcgRmlsZVJlYWRlcihuZXcgRmlsZShc
ImFic2VudFwiKSk7XG4iICsgLy8gZG9uJ3QgY29tcGxhaW4sIHByZXZpb3VzIHJlc291cmNlIGlz
IGFjdHVhbGx5IG51bGwKLQkJCSIgICAgICAgIHRyeSB7XG4iICsKLQkJCSIgICAgICAgICAgICBj
aGFyW10gaW4gPSBuZXcgY2hhcls1MF07XG4iICsKLQkJCSIgICAgICAgICAgICBmaWxlUmVhZGVy
LnJlYWQoaW4pO1xuIiArCi0JCQkiICAgICAgICAgICAgcjEucmVhZChpbik7XG4iICsKLQkJCSIg
ICAgICAgIH0gZmluYWxseSB7XG4iICsKLQkJCSIgICAgICAgICAgICBmaWxlUmVhZGVyLmNsb3Nl
KCk7XG4iICsKLQkJCSIgICAgICAgICAgICByMy5jbG9zZSgpO1xuIiArICAvLyB0aGUgZWZmZWN0
IG9mIHRoaXMgY2xvc2UoKSBjYWxsIG1pZ2h0IGJlIHNwb2lsZWQgYnkgZXhjZXB0aW9uIGluIGZp
bGVSZWFkZXIuY2xvc2UoKSBhYm92ZSwgYnV0IHdlIGlnbm9yZSBleGNlcHRpb24gZXhpdHMgaW4g
dGhlIGFuYWx5c2lzCi0JCQkiICAgICAgICB9XG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQkiICAg
IHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlv
biB7XG4iICsKLQkJCSIgICAgICAgIEZpbGVSZWFkZXIgcjIgPSBuZXcgRmlsZVJlYWRlcihuZXcg
RmlsZShcImluZXhpc3RcIikpOyAvLyBvbmx5IHBvdGVudGlhbCBwcm9ibGVtOiBjdG9yIFggYmVs
b3cgbWlnaHQgY2xvc2UgcjJcbiIgKwotCQkJIiAgICAgICAgbmV3IFgocjIpLmZvbyhuZXcgRmls
ZVJlYWRlcihuZXcgRmlsZShcIm5vdHRoZXJlXCIpKSk7XG4iICsKLQkJCSIgICAgfVxuIiArCi0J
CQkifVxuIgotCQl9LAotCQkiLS0tLS0tLS0tLVxuIiArIAotCQkiMS4gRVJST1IgaW4gWC5qYXZh
IChhdCBsaW5lIDgpXG4iICsgCi0JCSIJRmlsZVJlYWRlciBmaWxlUmVhZGVyID0gZ2V0UmVhZGVy
KCk7XG4iICsgCi0JCSIJICAgICAgICAgICBeXl5eXl5eXl5eXG4iICsgCi0JCSJSZXNvdXJjZSAn
ZmlsZVJlYWRlcicgc2hvdWxkIGJlIG1hbmFnZWQgYnkgdHJ5LXdpdGgtcmVzb3VyY2VcbiIgKyAK
LQkJIi0tLS0tLS0tLS1cbiIgKyAKLQkJIjIuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxMSlc
biIgKyAKLQkJIglGaWxlUmVhZGVyIHIzID0gZ2V0UmVhZGVyKCk7XG4iICsgCi0JCSIJICAgICAg
ICAgICBeXlxuIiArIAotCQkiUmVzb3VyY2UgJ3IzJyBzaG91bGQgYmUgbWFuYWdlZCBieSB0cnkt
d2l0aC1yZXNvdXJjZVxuIiArCi0JCSItLS0tLS0tLS0tXG4iICsgCi0JCSIzLiBFUlJPUiBpbiBY
LmphdmEgKGF0IGxpbmUgMjQpXG4iICsgCi0JCSIJRmlsZVJlYWRlciByMiA9IG5ldyBGaWxlUmVh
ZGVyKG5ldyBGaWxlKFwiaW5leGlzdFwiKSk7IC8vIG9ubHkgcG90ZW50aWFsIHByb2JsZW06IGN0
b3IgWCBiZWxvdyBtaWdodCBjbG9zZSByMlxuIiArIAotCQkiCSAgICAgICAgICAgXl5cbiIgKyAK
LQkJIlBvdGVudGlhbCByZXNvdXJjZSBsZWFrOiAncjInIG1heSBub3QgYmUgY2xvc2VkXG4iICsg
Ci0JCSItLS0tLS0tLS0tXG4iLAotCQludWxsLAotCQl0cnVlLAotCQlvcHRpb25zKTsKLX0KLS8v
IEJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNv
dXJjZXMKLS8vIG5lc3RlZCB0cnkgd2l0aCBlYXJseSBleGl0Ci1wdWJsaWMgdm9pZCB0ZXN0MDU2
bSgpIHsKLQlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwotCW9wdGlvbnMucHV0
KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVy
T3B0aW9ucy5FUlJPUik7Ci0Jb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBv
cnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwot
CXRoaXMucnVuQ29uZm9ybVRlc3QoCi0JCW5ldyBTdHJpbmdbXSB7Ci0JCQkiWC5qYXZhIiwKLQkJ
CSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCi0JCQkiaW1wb3J0IGphdmEuaW8uRmlsZVJlYWRl
cjtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCi0JCQkicHVibGlj
IGNsYXNzIFgge1xuIiArCi0JCQkiICAgIHZvaWQgZm9vKCkge1xuIiArCi0JCQkiICAgICAgICBG
aWxlIGZpbGUgPSBuZXcgRmlsZShcInNvbWVmaWxlXCIpOyIgKwotCQkJIiAgICAgICAgdHJ5IHtc
biIgKwotCQkJIiAgICAgICAgICAgIEZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVh
ZGVyKGZpbGUpO1xuIiArCi0JCQkiICAgICAgICAgICAgdHJ5IHtcbiIgKwotCQkJIiAgICAgICAg
ICAgICAgICBjaGFyW10gaW4gPSBuZXcgY2hhcls1MF07XG4iICsKLQkJCSIgICAgICAgICAgICAg
ICAgaWYgKGZpbGVSZWFkZXIucmVhZChpbik9PTApXG4iICsKLQkJCSIgICAgICAgICAgICAgICAg
ICAgIHJldHVybjtcbiIgKwotCQkJIiAgICAgICAgICAgIH0gZmluYWxseSB7XG4iICsKLQkJCSIJ
CSAgICAgICAgIGZpbGVSZWFkZXIuY2xvc2UoKTtcbiIgKwotCQkJIiAgICAgICAgICAgIH1cbiIg
KwotCQkJIiAgICAgICAgfSBjYXRjaCAoSU9FeGNlcHRpb24gZSkge1xuIiArCi0JCQkiICAgICAg
ICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwiY2F1Z2h0XCIpO1xuIiArCi0JCQkiICAgICAgICB9
XG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0
cmluZ1tdIGFyZ3MpIHtcbiIgKwotCQkJIiAgICAgICAgbmV3IFgoKS5mb28oKTtcbiIgKwotCQkJ
IiAgICB9XG4iICsKLQkJCSJ9XG4iCi0JCX0sCi0JCSJjYXVnaHQiLCAvKm91dHB1dCovCi0JCW51
bGwvKmNsYXNzTGlicyovLAotCQl0cnVlLypzaG91bGRGbHVzaCovLAotCQludWxsLyp2bWFyZ3Mq
LywKLQkJb3B0aW9ucywKLQkJbnVsbC8qcmVxdWVzdG9yKi8pOwotfQotLy8gQnVnIDM0OTMyNiAt
IFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNlcwotLy8gbmVz
dGVkIHRyeSBzaG91bGQgbm90IGludGVyZmVyZSB3aXRoIGVhcmxpZXIgYW5hbHlzaXMuCi1wdWJs
aWMgdm9pZCB0ZXN0MDU2bigpIHsKLQlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygp
OwotCW9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9z
ZWFibGUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0Jb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRp
b25zLk9QVElPTl9SZXBvcnRQb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9w
dGlvbnMuRVJST1IpOwotCXRoaXMucnVuQ29uZm9ybVRlc3QoCi0JCW5ldyBTdHJpbmdbXSB7Ci0J
CQkiWC5qYXZhIiwKLQkJCSJpbXBvcnQgamF2YS5pby5GaWxlO1xuIiArCi0JCQkiaW1wb3J0IGph
dmEuaW8uRmlsZVJlYWRlcjtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xu
IiArCi0JCQkiaW1wb3J0IGphdmEuaW8uRmlsZU5vdEZvdW5kRXhjZXB0aW9uO1xuIiArCi0JCQki
cHVibGljIGNsYXNzIFgge1xuIiArCi0JCQkiICAgIHZvaWQgZm9vKEZpbGUgc29tZUZpbGUsIGNo
YXJbXSBidWYpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsgCi0JCQkiCQlGaWxlUmVhZGVyIGZy
MSA9IG5ldyBGaWxlUmVhZGVyKHNvbWVGaWxlKTtcbiIgKyAKLQkJCSIJCXRyeSB7XG4iICsgCi0J
CQkiCQkJZnIxLnJlYWQoYnVmKTtcbiIgKyAKLQkJCSIJCX0gZmluYWxseSB7XG4iICsgCi0JCQki
CQkJZnIxLmNsb3NlKCk7XG4iICsgCi0JCQkiCQl9XG4iICsgCi0JCQkiCQl0cnkge1xuIiArIAot
CQkJIgkJCUZpbGVSZWFkZXIgZnIzID0gbmV3IEZpbGVSZWFkZXIoc29tZUZpbGUpO1xuIiArIAot
CQkJIgkJCXRyeSB7XG4iICsgCi0JCQkiCQkJfSBmaW5hbGx5IHtcbiIgKyAKLQkJCSIJCQkJZnIz
LmNsb3NlKCk7XG4iICsgCi0JCQkiCQkJfVxuIiArIAotCQkJIgkJfSBjYXRjaCAoSU9FeGNlcHRp
b24gZSkge1xuIiArIAotCQkJIgkJfVxuIiArIAotCQkJIgkgfVxuIiArCi0JCQkiICAgIHB1Ymxp
YyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4i
ICsKLQkJCSIgICAgICAgIHRyeSB7XG4iICsKLQkJCSIgICAgICAgICAgICBuZXcgWCgpLmZvbyhu
ZXcgRmlsZShcIm1pc3NpbmdcIiksIG5ldyBjaGFyWzEwMF0pO1xuIiArCi0JCQkiICAgICAgICB9
IGNhdGNoIChGaWxlTm90Rm91bmRFeGNlcHRpb24gZSkge1xuIiArCi0JCQkiICAgICAgICAgICAg
U3lzdGVtLm91dC5wcmludGxuKFwiY2F1Z2h0XCIpO1xuIiArCi0JCQkiICAgICAgICB9XG4iICsK
LQkJCSIgICAgfVxuIiArCi0JCQkifVxuIgotCQl9LAotCQkiY2F1Z2h0IiwgLypvdXRwdXQqLwot
CQludWxsLypjbGFzc0xpYnMqLywKLQkJdHJ1ZS8qc2hvdWxkRmx1c2gqLywKLQkJbnVsbC8qdm1h
cmdzKi8sCi0JCW9wdGlvbnMsCi0JCW51bGwvKnJlcXVlc3RvciovKTsKLX0KLS8vIEJ1ZyAzNDkz
MjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNvdXJjZXMKLS8v
IGlmIGNsb3NlIGlzIGd1YXJkZWQgYnkgbnVsbCBjaGVjayB0aGlzIHNob3VsZCBzdGlsbCBiZSBy
ZWNvZ25pemVkIGFzIGRlZmluaXRlbHkgY2xvc2VkCi1wdWJsaWMgdm9pZCB0ZXN0MDU2bygpIHsK
LQlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwotCW9wdGlvbnMucHV0KENvbXBp
bGVyT3B0aW9ucy5PUFRJT05fUmVwb3J0VW5jbG9zZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9u
cy5FUlJPUik7Ci0Jb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9QVElPTl9SZXBvcnRQb3Rl
bnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCXRoaXMu
cnVuQ29uZm9ybVRlc3QoCi0JCW5ldyBTdHJpbmdbXSB7Ci0JCQkiWC5qYXZhIiwKLQkJCSJpbXBv
cnQgamF2YS5pby5GaWxlO1xuIiArCi0JCQkiaW1wb3J0IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIg
KwotCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCi0JCQkiaW1wb3J0IGphdmEu
aW8uRmlsZU5vdEZvdW5kRXhjZXB0aW9uO1xuIiArCi0JCQkicHVibGljIGNsYXNzIFgge1xuIiAr
Ci0JCQkiICAgIHZvaWQgZm9vKEZpbGUgc29tZUZpbGUsIGNoYXJbXSBidWYpIHRocm93cyBJT0V4
Y2VwdGlvbiB7XG4iICsgCi0JCQkiCQlGaWxlUmVhZGVyIGZyMSA9IG51bGw7XG4iICsgCi0JCQki
CQl0cnkge1xuIiArCi0JCQkiICAgICAgICAgICBmcjEgPSBuZXcgRmlsZVJlYWRlcihzb21lRmls
ZSk7IiArIAotCQkJIgkJCWZyMS5yZWFkKGJ1Zik7XG4iICsgCi0JCQkiCQl9IGZpbmFsbHkge1xu
IiArIAotCQkJIgkJCWlmIChmcjEgIT0gbnVsbClcbiIgKwotCQkJIiAgICAgICAgICAgICAgIHRy
eSB7XG4iICsKLQkJCSIgICAgICAgICAgICAgICAgICAgZnIxLmNsb3NlKCk7XG4iICsKLQkJCSIg
ICAgICAgICAgICAgICB9IGNhdGNoIChJT0V4Y2VwdGlvbiBlKSB7IC8qZG8gbm90aGluZyovIH1c
biIgKyAKLQkJCSIJCX1cbiIgKyAKLQkJCSIJIH1cbiIgKwotCQkJIiAgICBwdWJsaWMgc3RhdGlj
IHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArCi0JCQki
ICAgICAgICB0cnkge1xuIiArCi0JCQkiICAgICAgICAgICAgbmV3IFgoKS5mb28obmV3IEZpbGUo
XCJtaXNzaW5nXCIpLCBuZXcgY2hhclsxMDBdKTtcbiIgKwotCQkJIiAgICAgICAgfSBjYXRjaCAo
RmlsZU5vdEZvdW5kRXhjZXB0aW9uIGUpIHtcbiIgKwotCQkJIiAgICAgICAgICAgIFN5c3RlbS5v
dXQucHJpbnRsbihcImNhdWdodFwiKTtcbiIgKwotCQkJIiAgICAgICAgfVxuIiArCi0JCQkiICAg
IH1cbiIgKwotCQkJIn1cbiIKLQkJfSwKLQkJImNhdWdodCIsIC8qb3V0cHV0Ki8KLQkJbnVsbC8q
Y2xhc3NMaWJzKi8sCi0JCXRydWUvKnNob3VsZEZsdXNoKi8sCi0JCW51bGwvKnZtYXJncyovLAot
CQlvcHRpb25zLAotCQludWxsLypyZXF1ZXN0b3IqLyk7Ci19Ci0vLyBCdWcgMzQ5MzI2IC0gWzEu
N10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCi0vLyBhIG1ldGhv
ZCB1c2VzIGFuIEF1dG9DbG9zZWFibGUgd2l0aG91dCBldmVyIGNsb3NpbmcgaXQsIHR5cGUgZnJv
bSBhIHR5cGUgdmFyaWFibGUKLXB1YmxpYyB2b2lkIHRlc3QwNTZwKCkgewotCU1hcCBvcHRpb25z
ID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7Ci0Jb3B0aW9ucy5wdXQoQ29tcGlsZXJPcHRpb25zLk9Q
VElPTl9SZXBvcnRVbmNsb3NlZENsb3NlYWJsZSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQlv
cHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydFBvdGVudGlhbGx5VW5jbG9z
ZWRDbG9zZWFibGUsIENvbXBpbGVyT3B0aW9ucy5XQVJOSU5HKTsKLQl0aGlzLnJ1bk5lZ2F0aXZl
VGVzdCgKLQkJbmV3IFN0cmluZ1tdIHsKLQkJCSJYLmphdmEiLAotCQkJImltcG9ydCBqYXZhLmlv
LkZpbGU7XG4iICsKLQkJCSJpbXBvcnQgamF2YS5pby5GaWxlUmVhZGVyO1xuIiArCi0JCQkiaW1w
b3J0IGphdmEuaW8uUmVhZGVyO1xuIiArCi0JCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247
XG4iICsKLQkJCSJwdWJsaWMgYWJzdHJhY3QgY2xhc3MgWCA8VCBleHRlbmRzIFJlYWRlcj4ge1xu
IiArCi0JCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwotCQkJIiAg
ICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKwotCQkJIiAgICAg
ICAgVCBmaWxlUmVhZGVyID0gbmV3UmVhZGVyKGZpbGUpO1xuIiArCi0JCQkiICAgICAgICBjaGFy
W10gaW4gPSBuZXcgY2hhcls1MF07XG4iICsKLQkJCSIgICAgICAgIGZpbGVSZWFkZXIucmVhZChp
bik7XG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQkiICAgIGFic3RyYWN0IFQgbmV3UmVhZGVyKEZp
bGUgZmlsZSkgdGhyb3dzIElPRXhjZXB0aW9uO1xuIiArCi0JCQkiICAgIHB1YmxpYyBzdGF0aWMg
dm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKLQkJCSIg
ICAgICAgIG5ldyBYPEZpbGVSZWFkZXI+KCkge1xuIiArCi0JCQkiICAgICAgICAgICAgRmlsZVJl
YWRlciBuZXdSZWFkZXIoRmlsZSBmKSB0aHJvd3MgSU9FeGNlcHRpb24geyByZXR1cm4gbmV3IEZp
bGVSZWFkZXIoZik7IH1cbiIgKwotCQkJIiAgICAgICAgfS5mb28oKTtcbiIgKwotCQkJIiAgICB9
XG4iICsKLQkJCSJ9XG4iCi0JCX0sCi0JCSItLS0tLS0tLS0tXG4iICsgCi0JCSIxLiBFUlJPUiBp
biBYLmphdmEgKGF0IGxpbmUgOClcbiIgKyAKLQkJIglUIGZpbGVSZWFkZXIgPSBuZXdSZWFkZXIo
ZmlsZSk7XG4iICsgCi0JCSIJICBeXl5eXl5eXl5eXG4iICsgCi0JCSJSZXNvdXJjZSBsZWFrOiAn
ZmlsZVJlYWRlcicgaXMgbmV2ZXIgY2xvc2VkXG4iICsKLQkJIi0tLS0tLS0tLS1cbiIsCi0JCW51
bGwsCi0JCXRydWUsCi0JCW9wdGlvbnMpOwotfQotLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3
YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNlcwotLy8gY2xvc2VkIGluIGRlYWQg
Y29kZQotcHVibGljIHZvaWQgdGVzdDA1NnEoKSB7Ci0JTWFwIG9wdGlvbnMgPSBnZXRDb21waWxl
ck9wdGlvbnMoKTsKLQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9VTkNMT1NFRF9D
TE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0Jb3B0aW9ucy5wdXQoSmF2YUNvcmUu
Q09NUElMRVJfUEJfUE9URU5USUFMTFlfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlv
bnMuV0FSTklORyk7Ci0Jb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfRVhQTElDSVRM
WV9DTE9TRURfQVVUT0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLklHTk9SRSk7Ci0JdGhpcy5y
dW5OZWdhdGl2ZVRlc3QoCi0JCW5ldyBTdHJpbmdbXSB7Ci0JCQkiWC5qYXZhIiwKLQkJCSJpbXBv
cnQgamF2YS5pby5GaWxlO1xuIiArCi0JCQkiaW1wb3J0IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIg
KwotCQkJImltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uO1xuIiArCi0JCQkicHVibGljIGNsYXNz
IFgge1xuIiArCi0JCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwot
CQkJIiAgICAgICAgRmlsZSBmaWxlID0gbmV3IEZpbGUoXCJzb21lZmlsZVwiKTtcbiIgKwotCQkJ
IiAgICAgICAgRmlsZVJlYWRlciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4i
ICsKLQkJCSIgICAgICAgIGNoYXJbXSBpbiA9IG5ldyBjaGFyWzUwXTtcbiIgKwotCQkJIiAgICAg
ICAgZmlsZVJlYWRlci5yZWFkKGluKTtcbiIgKwotCQkJIiAgICAgICAgaWYgKDIqMiA9PSA0KVxu
IiArCi0JCQkiICAgICAgICAJcmV0dXJuO1xuIiArCi0JCQkiICAgICAgICBmaWxlUmVhZGVyLmNs
b3NlKCk7XG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBt
YWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKLQkJCSIgICAgICAg
IG5ldyBYKCkuZm9vKCk7XG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQkifVxuIgotCQl9LAotCQki
LS0tLS0tLS0tLVxuIiArIAotCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDcpXG4iICsg
Ci0JCSIJRmlsZVJlYWRlciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsg
Ci0JCSIJICAgICAgICAgICBeXl5eXl5eXl5eXG4iICsgCi0JCSJSZXNvdXJjZSBsZWFrOiAnZmls
ZVJlYWRlcicgaXMgbmV2ZXIgY2xvc2VkXG4iICsgCi0JCSItLS0tLS0tLS0tXG4iICsgCi0JCSIy
LiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSAxMClcbiIgKyAKLQkJIglpZiAoMioyID09IDQp
XG4iICsgCi0JCSIJICAgIF5eXl5eXl5eXG4iICsgCi0JCSJDb21wYXJpbmcgaWRlbnRpY2FsIGV4
cHJlc3Npb25zXG4iICsgCi0JCSItLS0tLS0tLS0tXG4iICsgCi0JCSIzLiBXQVJOSU5HIGluIFgu
amF2YSAoYXQgbGluZSAxMilcbiIgKyAKLQkJIglmaWxlUmVhZGVyLmNsb3NlKCk7XG4iICsgCi0J
CSIJXl5eXl5eXl5eXl5eXl5eXl5eXG4iICsgCi0JCSJEZWFkIGNvZGVcbiIgKyAKLQkJIi0tLS0t
LS0tLS1cbiIsCi0JCW51bGwsCi0JCXRydWUsCi0JCW9wdGlvbnMpOwotfQotLy8gQnVnIDM0OTMy
NiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNlcwotLy8g
Y2xvc2VkIGluIGRlYWQgY29kZQotcHVibGljIHZvaWQgdGVzdDA1NnIoKSB7Ci0JTWFwIG9wdGlv
bnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKLQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxF
Ul9QQl9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0Jb3B0aW9u
cy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfUE9URU5USUFMTFlfVU5DTE9TRURfQ0xPU0VBQkxF
LCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7Ci0Jb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElM
RVJfUEJfRVhQTElDSVRMWV9DTE9TRURfQVVUT0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLklH
Tk9SRSk7Ci0Jb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfREVBRF9DT0RFLCBDb21w
aWxlck9wdGlvbnMuRVJST1IpOwotCXRoaXMucnVuTmVnYXRpdmVUZXN0KAotCQluZXcgU3RyaW5n
W10gewotCQkJIlguamF2YSIsCi0JCQkiaW1wb3J0IGphdmEuaW8uRmlsZTtcbiIgKwotCQkJImlt
cG9ydCBqYXZhLmlvLkZpbGVSZWFkZXI7XG4iICsKLQkJCSJpbXBvcnQgamF2YS5pby5JT0V4Y2Vw
dGlvbjtcbiIgKwotCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwotCQkJIiAgICB2b2lkIGZvbygp
IHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKLQkJCSIgICAgICAgIEZpbGUgZmlsZSA9IG5ldyBG
aWxlKFwic29tZWZpbGVcIik7XG4iICsKLQkJCSIgICAgICAgIEZpbGVSZWFkZXIgZnIgPSBuZXcg
RmlsZVJlYWRlcihmaWxlKTtcbiIgKwotCQkJIiAgCQkgT2JqZWN0IGIgPSBudWxsO1xuIiArIAot
CQkJIiAgICAgICAgZnIuY2xvc2UoKTtcbiIgKyAKLQkJCSIgICAgICAgIGlmIChiICE9IG51bGwp
IHtcbiIgKyAKLQkJCSIgICAgICAgICAgICBmciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpO1xuIiAr
IAotCQkJIiAgICAgICAgICAgIHJldHVybjtcbiIgKyAKLQkJCSIgICAgICAgIH0gZWxzZSB7XG4i
ICsgCi0JCQkiICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludCg0Mik7XG4iICsgCi0JCQkiICAg
ICAgICB9XG4iICsgCi0JCQkiICAgICAgICByZXR1cm47ICAgICAvLyBTaG91bGQgbm90IGNvbXBs
YWluIGFib3V0IGZyXG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQkiICAgIHB1YmxpYyBzdGF0aWMg
dm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHRocm93cyBJT0V4Y2VwdGlvbiB7XG4iICsKLQkJCSIg
ICAgICAgIG5ldyBYKCkuZm9vKCk7XG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQkifVxuIgotCQl9
LAotCQkiLS0tLS0tLS0tLVxuIiArIAotCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDEw
KVxuIiArIAotCQkiCWlmIChiICE9IG51bGwpIHtcbiIgKyAKLQkJIiAgICAgICAgICAgIGZyID0g
bmV3IEZpbGVSZWFkZXIoZmlsZSk7XG4iICsgCi0JCSIgICAgICAgICAgICByZXR1cm47XG4iICsg
Ci0JCSIgICAgICAgIH0gZWxzZSB7XG4iICsgCi0JCSIJICAgICAgICAgICAgICAgXl5eXl5eXl5e
Xl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXlxuIiArIAotCQkiRGVhZCBjb2RlXG4iICsgCi0JCSItLS0tLS0tLS0tXG4iICsgCi0JCSIy
LiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSAxMylcbiIgKyAKLQkJIgl9IGVsc2Uge1xuIiAr
IAotCQkiICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludCg0Mik7XG4iICsgCi0JCSIgICAgICAg
IH1cbiIgKyAKLQkJIgkgICAgICAgXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXG4iICsgCi0JCSJTdGF0ZW1lbnQgdW5uZWNlc3NhcmlseSBuZXN0ZWQgd2l0aGlu
IGVsc2UgY2xhdXNlLiBUaGUgY29ycmVzcG9uZGluZyB0aGVuIGNsYXVzZSBkb2VzIG5vdCBjb21w
bGV0ZSBub3JtYWxseVxuIiArIAotCQkiLS0tLS0tLS0tLVxuIiwKLQkJbnVsbCwKLQkJdHJ1ZSwK
LQkJb3B0aW9ucyk7Ci19Ci0vLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1p
c3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCi0vLyByZXNvdXJjZSBpbnNpZGUgdC13LXIgaXMgcmUt
YXNzaWduZWQsIHNob3VsZG4ndCBldmVuIHJlY29yZCBhbiBlcnJvckxvY2F0aW9uCi1wdWJsaWMg
dm9pZCB0ZXN0MDU2cygpIHsKLQlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwot
CW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29t
cGlsZXJPcHRpb25zLkVSUk9SKTsKLQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9Q
T1RFTlRJQUxMWV9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5XQVJOSU5HKTsK
LQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9FWFBMSUNJVExZX0NMT1NFRF9BVVRP
Q0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuSUdOT1JFKTsKLQl0aGlzLnJ1bk5lZ2F0aXZlVGVz
dCgKLQkJbmV3IFN0cmluZ1tdIHsKLQkJCSJYLmphdmEiLAotCQkJImltcG9ydCBqYXZhLmlvLkZp
bGU7XG4iICsgCi0JCQkiaW1wb3J0IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIgKyAKLQkJCSJpbXBv
cnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKyAKLQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsg
Ci0JCQkiICAgIHZvaWQgZm9vKCkgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKyAKLQkJCSIgICAg
ICAgIEZpbGUgZmlsZSA9IG5ldyBGaWxlKFwic29tZWZpbGVcIik7XG4iICsgCi0JCQkiICAgICAg
ICB0cnkgKEZpbGVSZWFkZXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpOykge1xu
IiArIAotCQkJIiAgICAgICAgICAgIGNoYXJbXSBpbiA9IG5ldyBjaGFyWzUwXTtcbiIgKyAKLQkJ
CSIgICAgICAgICAgICBmaWxlUmVhZGVyLnJlYWQoaW4pO1xuIiArIAotCQkJIiAgICAgICAgICAg
IGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihmaWxlKTsgIC8vIGRlYnVnIGhlcmVcbiIgKyAK
LQkJCSIgICAgICAgICAgICBmaWxlUmVhZGVyLnJlYWQoaW4pO1xuIiArIAotCQkJIiAgICAgICAg
fVxuIiArIAotCQkJIiAgICB9XG4iICsKLQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4o
U3RyaW5nW10gYXJncykgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKyAKLQkJCSIgICAgICAgIG5l
dyBYKCkuZm9vKCk7XG4iICsgCi0JCQkiICAgIH1cbiIgKyAKLQkJCSJ9XG4iCi0JCX0sCi0JCSIt
LS0tLS0tLS0tXG4iICsgCi0JCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTApXG4iICsg
Ci0JCSIJZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKGZpbGUpOyAgLy8gZGVidWcgaGVyZVxu
IiArIAotCQkiCV5eXl5eXl5eXl5cbiIgKyAKLQkJIlRoZSByZXNvdXJjZSBmaWxlUmVhZGVyIG9m
IGEgdHJ5LXdpdGgtcmVzb3VyY2VzIHN0YXRlbWVudCBjYW5ub3QgYmUgYXNzaWduZWRcbiIgKyAK
LQkJIi0tLS0tLS0tLS1cbiIsCi0JCW51bGwsCi0JCXRydWUsCi0JCW9wdGlvbnMpOwotfQotLy8g
QnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291
cmNlcwotLy8gcmVzb3VyY2UgaXMgY2xvc2VkLCBkZWFkIGNvZGUgZm9sbG93cwotcHVibGljIHZv
aWQgdGVzdDA1NnQoKSB7Ci0JTWFwIG9wdGlvbnMgPSBnZXRDb21waWxlck9wdGlvbnMoKTsKLQlv
cHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBp
bGVyT3B0aW9ucy5FUlJPUik7Ci0Jb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfUE9U
RU5USUFMTFlfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuV0FSTklORyk7Ci0J
b3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfREVBRF9DT0RFLCBDb21waWxlck9wdGlv
bnMuRVJST1IpOwotCXRoaXMucnVuTmVnYXRpdmVUZXN0KAotCQluZXcgU3RyaW5nW10gewotCQkJ
IlguamF2YSIsCi0JCQkiaW1wb3J0IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIgKyAKLQkJCSJpbXBv
cnQgamF2YS5pby5JT0V4Y2VwdGlvbjtcbiIgKyAKLQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsg
Ci0JCQkiICAgIHZvaWQgZm9vMzEoKSB0aHJvd3MgSU9FeGNlcHRpb24ge1xuIiArIAotCQkJIiAg
ICAgICAgRmlsZVJlYWRlciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihcImZpbGVcIik7IC8vd2Fy
bmluZ1xuIiArCi0JCQkiICAgICAgICBpZiAocmVhZGVyICE9IG51bGwpIHtcbiIgKyAKLQkJCSIg
ICAgICAgICAgICByZWFkZXIuY2xvc2UoKTtcbiIgKyAKLQkJCSIgICAgICAgIH0gZWxzZSB7XG4i
ICsgCi0JCQkiICAgICAgICAgICAgLy8gbm9wXG4iICsgCi0JCQkiICAgICAgICB9XG4iICsgCi0J
CQkiICAgIH1cbiIgKyAKLQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10g
YXJncykgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKyAKLQkJCSIgICAgICAgIG5ldyBYKCkuZm9v
MzEoKTtcbiIgKyAKLQkJCSIgICAgfVxuIiArIAotCQkJIn1cbiIKLQkJfSwKLQkJIi0tLS0tLS0t
LS1cbiIgKyAKLQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA4KVxuIiArIAotCQkiCX0g
ZWxzZSB7XG4iICsgCi0JCSIgICAgICAgICAgICAvLyBub3BcbiIgKyAKLQkJIiAgICAgICAgfVxu
IiArIAotCQkiCSAgICAgICBeXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIgKyAKLQkJ
IkRlYWQgY29kZVxuIiArIAotCQkiLS0tLS0tLS0tLVxuIiwKLQkJbnVsbCwKLQkJdHJ1ZSwKLQkJ
b3B0aW9ucyk7Ci19Ci0vLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3Np
bmcgdHJ5LXdpdGgtcmVzb3VyY2VzCi0vLyByZXNvdXJjZSBpcyByZWFzc2lnbmVkIHdpdGhpbiB0
LXctciB3aXRoIGRpZmZlcmVudCByZXNvdXJjZQotLy8gd2FzIGluaXRpYWxseSBicm9rZW4gZHVl
IHRvIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy8zNTg4MjcKLXB1YmxpYyB2b2lkIHRlc3QwNTZ1
KCkgewotCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7Ci0Jb3B0aW9ucy5wdXQo
SmF2YUNvcmUuQ09NUElMRVJfUEJfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMu
RVJST1IpOwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX1BPVEVOVElBTExZX1VO
Q0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLldBUk5JTkcpOwotCW9wdGlvbnMucHV0
KEphdmFDb3JlLkNPTVBJTEVSX1BCX0RFQURfQ09ERSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsK
LQl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKLQkJbmV3IFN0cmluZ1tdIHsKLQkJCSJYLmphdmEiLAot
CQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFkZXI7XG4iICsKLQkJCSJwdWJsaWMgY2xhc3MgWCB7
XG4iICsKLQkJCSIgICAgdm9pZCBmb28oKSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIgKwotCQkJIiAg
ICAgICAgRmlsZVJlYWRlciByZWFkZXIxID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlMVwiKTtcbiIg
KwotCQkJIiAgICAgICAgRmlsZVJlYWRlciByZWFkZXIyID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxl
MlwiKTtcbiIgKwotCQkJIiAgICAgICAgcmVhZGVyMiA9IHJlYWRlcjE7Ly8gdGhpcyBkaXNjb25u
ZWN0cyByZWFkZXIgMlxuIiArCi0JCQkiICAgICAgICB0cnkgKEZpbGVSZWFkZXIgcmVhZGVyMyA9
IG5ldyBGaWxlUmVhZGVyKFwiZmlsZTNcIikpIHtcbiIgKwotCQkJIiAgICAgICAgICAgIGludCBj
aDtcbiIgKwotCQkJIiAgICAgICAgICAgIHdoaWxlICgoY2ggPSByZWFkZXIyLnJlYWQoKSkgIT0g
LTEpIHtcbiIgKwotCQkJIiAgICAgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oY2gpO1xu
IiArCi0JCQkiICAgICAgICAgICAgICAgIHJlYWRlcjEucmVhZCgpO1xuIiArCi0JCQkiICAgICAg
ICAgICAgfVxuIiArCi0JCQkiICAgICAgICAgICAgcmVhZGVyMiA9IHJlYWRlcjE7IC8vIHdhcm5p
bmcgMSByZWdhcmRpbmcgb3JpZ2luYWwgcmVhZGVyMVxuIiArIC8vIHRoaXMgd2FybmluZyB3YXMg
bWlzc2luZwotCQkJIiAgICAgICAgICAgIHJlYWRlcjIgPSByZWFkZXIxOyAvLyB3YXJuaW5nIDIg
cmVnYXJkaW5nIG9yaWdpbmFsIHJlYWRlcjFcbiIgKwotCQkJIiAgICAgICAgfSBmaW5hbGx5IHtc
biIgKwotCQkJIiAgICAgICAgICAgIGlmIChyZWFkZXIyICE9IG51bGwpIHtcbiIgKwotCQkJIiAg
ICAgICAgICAgICAgICByZWFkZXIyLmNsb3NlKCk7XG4iICsKLQkJCSIgICAgICAgICAgICB9IGVs
c2Uge1xuIiArCi0JCQkiICAgICAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbigpO1xuIiAr
Ci0JCQkiICAgICAgICAgICAgfVxuIiArCi0JCQkiICAgICAgICB9XG4iICsKLQkJCSIgICAgfVxu
IiArCi0JCQkifVxuIgotCQl9LAotCQkiLS0tLS0tLS0tLVxuIiArIAotCQkiMS4gRVJST1IgaW4g
WC5qYXZhIChhdCBsaW5lIDUpXG4iICsgCi0JCSIJRmlsZVJlYWRlciByZWFkZXIyID0gbmV3IEZp
bGVSZWFkZXIoXCJmaWxlMlwiKTtcbiIgKyAKLQkJIgkgICAgICAgICAgIF5eXl5eXl5cbiIgKyAK
LQkJIlJlc291cmNlIGxlYWs6ICdyZWFkZXIyJyBpcyBuZXZlciBjbG9zZWRcbiIgKyAKLQkJIi0t
LS0tLS0tLS1cbiIgKyAKLQkJIjIuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxMylcbiIgKyAK
LQkJIglyZWFkZXIyID0gcmVhZGVyMTsgLy8gd2FybmluZyAxIHJlZ2FyZGluZyBvcmlnaW5hbCBy
ZWFkZXIxXG4iICsgCi0JCSIJXl5eXl5eXl5eXl5eXl5eXl5cbiIgKyAKLQkJIlJlc291cmNlIGxl
YWs6ICdyZWFkZXIxJyBpcyBub3QgY2xvc2VkIGF0IHRoaXMgbG9jYXRpb25cbiIgKyAKLQkJIi0t
LS0tLS0tLS1cbiIgKyAKLQkJIjMuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxNClcbiIgKyAK
LQkJIglyZWFkZXIyID0gcmVhZGVyMTsgLy8gd2FybmluZyAyIHJlZ2FyZGluZyBvcmlnaW5hbCBy
ZWFkZXIxXG4iICsgCi0JCSIJXl5eXl5eXl5eXl5eXl5eXl5cbiIgKyAKLQkJIlJlc291cmNlIGxl
YWs6ICdyZWFkZXIxJyBpcyBub3QgY2xvc2VkIGF0IHRoaXMgbG9jYXRpb25cbiIgKyAKLQkJIi0t
LS0tLS0tLS1cbiIsCi0JCW51bGwsCi0JCXRydWUsCi0JCW9wdGlvbnMpOwotfQotLy8gQnVnIDM0
OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRoLXJlc291cmNlcwot
Ly8gc2NvcGUtcmVsYXRlZCBwYnMgcmVwb3J0ZWQgaW4gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3Jn
LzM0OTMyNiNjNzAgYW5kIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy8zNDkzMjYjYzgyICAKLXB1
YmxpYyB2b2lkIHRlc3QwNTZ2KCkgewotCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25z
KCk7Ci0Jb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfVU5DTE9TRURfQ0xPU0VBQkxF
LCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVS
X1BCX1BPVEVOVElBTExZX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLldBUk5J
TkcpOwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX0VYUExJQ0lUTFlfQ0xPU0VE
X0FVVE9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5XQVJOSU5HKTsKLQlvcHRpb25zLnB1dChK
YXZhQ29yZS5DT01QSUxFUl9QQl9ERUFEX0NPREUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0J
dGhpcy5ydW5OZWdhdGl2ZVRlc3QoCi0JCW5ldyBTdHJpbmdbXSB7Ci0JCQkiWC5qYXZhIiwKLQkJ
CSJpbXBvcnQgamF2YS5pby5GaWxlUmVhZGVyO1xuIiArIAotCQkJInB1YmxpYyBjbGFzcyBYIHtc
biIgKyAKLQkJCSIgICAgYm9vbGVhbiBmb28xKCkgdGhyb3dzIEV4Y2VwdGlvbiB7XG4iICsgCi0J
CQkiICAgICAgICBGaWxlUmVhZGVyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKFwiZmlsZVwiKTtc
biIgKyAKLQkJCSIgICAgICAgIHRyeSB7XG4iICsgCi0JCQkiICAgICAgICAgICAgaW50IGNoO1xu
IiArIAotCQkJIiAgICAgICAgICAgIHdoaWxlICgoY2ggPSByZWFkZXIucmVhZCgpKSAhPSAtMSkg
e1xuIiArIAotCQkJIiAgICAgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oY2gpO1xuIiAr
IAotCQkJIiAgICAgICAgICAgICAgICByZWFkZXIucmVhZCgpO1xuIiArIAotCQkJIiAgICAgICAg
ICAgIH1cbiIgKyAKLQkJCSIgICAgICAgICAgICBpZiAoY2ggPiAxMCkge1xuIiArIAotCQkJIiAg
ICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiIgKyAKLQkJCSIgICAgICAgICAgICB9XG4iICsg
Ci0JCQkiICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuIiArIC8vIHJldHVybiB3aGlsZSByZXNv
dXJjZSBmcm9tIGVuY2xvc2luZyBzY29wZSByZW1haW5zIHVuY2xvc2VkCi0JCQkiICAgICAgICB9
IGZpbmFsbHkge1xuIiArIAotCQkJIiAgICAgICAgfVxuIiArIAotCQkJIiAgICB9XG4iICsgCi0J
CQkiICAgIHZvaWQgZm9vMTExKCkgdGhyb3dzIEV4Y2VwdGlvbiB7XG4iICsgCi0JCQkiICAgICAg
ICBGaWxlUmVhZGVyIHJlYWRlcjExMSA9IG5ldyBGaWxlUmVhZGVyKFwiZmlsZTJcIik7XG4iICsg
Ci0JCQkiICAgICAgICB0cnkge1xuIiArIAotCQkJIiAgICAgICAgICAgIGludCBjaDtcbiIgKyAK
LQkJCSIgICAgICAgICAgICB3aGlsZSAoKGNoID0gcmVhZGVyMTExLnJlYWQoKSkgIT0gLTEpIHtc
biIgKyAKLQkJCSIgICAgICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGNoKTtcbiIgKyAK
LQkJCSIgICAgICAgICAgICAgICAgcmVhZGVyMTExLnJlYWQoKTtcbiIgKyAKLQkJCSIgICAgICAg
ICAgICB9XG4iICsgCi0JCQkiICAgICAgICAgICAgcmV0dXJuO1xuIiArIC8vIHRoaXMgc2hvdWxk
bid0IHNwb2lsIHRoZSB3YXJuaW5nICJzaG91bGQgYmUgbWFuYWdlZCB3aXRoIHQtdy1yIiAKLQkJ
CSIgICAgICAgIH0gZmluYWxseSB7XG4iICsgCi0JCQkiICAgICAgICAgICAgaWYgKHJlYWRlcjEx
MSAhPSBudWxsKSB7XG4iICsgCi0JCQkiICAgICAgICAgICAgICAgIHJlYWRlcjExMS5jbG9zZSgp
O1xuIiArIAotCQkJIiAgICAgICAgICAgIH1cbiIgKyAKLQkJCSIgICAgICAgIH1cbiIgKyAKLQkJ
CSIgICAgfVxuIiArCi0JCQkiICAgIHZvaWQgZm9vMigpIHRocm93cyBFeGNlcHRpb24ge1xuIiAr
IAotCQkJIiAgICAgICAgRmlsZVJlYWRlciByZWFkZXIyID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxl
XCIpO1xuIiArIAotCQkJIiAgICAgICAgdHJ5IHtcbiIgKyAKLQkJCSIgICAgICAgICAgICBpbnQg
Y2g7XG4iICsgCi0JCQkiICAgICAgICAgICAgd2hpbGUgKChjaCA9IHJlYWRlcjIucmVhZCgpKSAh
PSAtMSkge1xuIiArIAotCQkJIiAgICAgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oY2gp
O1xuIiArIAotCQkJIiAgICAgICAgICAgICAgICByZWFkZXIyLnJlYWQoKTtcbiIgKyAKLQkJCSIg
ICAgICAgICAgICB9XG4iICsgCi0JCQkiICAgICAgICAgICAgaWYgKGNoID4gMTApIHtcbiIgKyAK
LQkJCSIgICAgICAgICAgICAgICAgcmV0dXJuO1xuIiArIC8vIHBvdGVudGlhbCBsZWFrCi0JCQki
ICAgICAgICAgICAgfVxuIiArIAotCQkJIiAgICAgICAgfSBmaW5hbGx5IHtcbiIgKyAKLQkJCSIg
ICAgICAgIH1cbiIgKwotCQkJIiAgICAgICAgcmVhZGVyMi5jbG9zZSgpO1xuIiArIC8vIGR1ZSB0
byB0aGlzIGNsb3NlIHdlIGRvbid0IHNheSAibmV2ZXIgY2xvc2VkIgotCQkJIiAgICB9XG4iICsg
Ci0JCQkifVxuIgotCQl9LAotCQkiLS0tLS0tLS0tLVxuIiArIAotCQkiMS4gRVJST1IgaW4gWC5q
YXZhIChhdCBsaW5lIDQpXG4iICsgCi0JCSIJRmlsZVJlYWRlciByZWFkZXIgPSBuZXcgRmlsZVJl
YWRlcihcImZpbGVcIik7XG4iICsgCi0JCSIJICAgICAgICAgICBeXl5eXl5cbiIgKyAKLQkJIlJl
c291cmNlIGxlYWs6ICdyZWFkZXInIGlzIG5ldmVyIGNsb3NlZFxuIiArIAotCQkiLS0tLS0tLS0t
LVxuIiArIAotCQkiMi4gV0FSTklORyBpbiBYLmphdmEgKGF0IGxpbmUgMTkpXG4iICsgCi0JCSIJ
RmlsZVJlYWRlciByZWFkZXIxMTEgPSBuZXcgRmlsZVJlYWRlcihcImZpbGUyXCIpO1xuIiArIAot
CQkiCSAgICAgICAgICAgXl5eXl5eXl5eXG4iICsgCi0JCSJSZXNvdXJjZSAncmVhZGVyMTExJyBz
aG91bGQgYmUgbWFuYWdlZCBieSB0cnktd2l0aC1yZXNvdXJjZVxuIiArIAotCQkiLS0tLS0tLS0t
LVxuIiArIAotCQkiMy4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDQyKVxuIiArIAotCQkiCXJl
dHVybjtcbiIgKyAKLQkJIgleXl5eXl5eXG4iICsgCi0JCSJSZXNvdXJjZSBsZWFrOiAncmVhZGVy
MicgaXMgbm90IGNsb3NlZCBhdCB0aGlzIGxvY2F0aW9uXG4iICsgCi0JCSItLS0tLS0tLS0tXG4i
LAotCQludWxsLAotCQl0cnVlLAotCQlvcHRpb25zKTsKLX0KLS8vIEJ1ZyAzNDkzMjYgLSBbMS43
XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNvdXJjZXMKLS8vIGVuZCBvZiBt
ZXRob2QgaXMgZGVhZCBlbmQsIGJ1dCBiZWZvcmUgd2UgaGF2ZSBib3RoIGEgY2xvc2UoKSBhbmQg
YW4gZWFybHkgcmV0dXJuCi1wdWJsaWMgdm9pZCB0ZXN0MDU2dygpIHsKLQlNYXAgb3B0aW9ucyA9
IGdldENvbXBpbGVyT3B0aW9ucygpOwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BC
X1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQlvcHRpb25zLnB1
dChKYXZhQ29yZS5DT01QSUxFUl9QQl9QT1RFTlRJQUxMWV9VTkNMT1NFRF9DTE9TRUFCTEUsIENv
bXBpbGVyT3B0aW9ucy5XQVJOSU5HKTsKLQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9Q
Ql9ERUFEX0NPREUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0JdGhpcy5ydW5OZWdhdGl2ZVRl
c3QoCi0JCW5ldyBTdHJpbmdbXSB7Ci0JCQkiWC5qYXZhIiwKLQkJCSJpbXBvcnQgamF2YS5pby5G
aWxlUmVhZGVyO1xuIiArIAotCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKyAKLQkJCSIgICAgYm9v
bGVhbiBmb28xKCkgdGhyb3dzIEV4Y2VwdGlvbiB7XG4iICsgCi0JCQkiICAgICAgICBGaWxlUmVh
ZGVyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKFwiZmlsZVwiKTtcbiIgKyAKLQkJCSIgICAgICAg
IHRyeSB7XG4iICsgCi0JCQkiICAgICAgICAgICAgaW50IGNoO1xuIiArIAotCQkJIiAgICAgICAg
ICAgIHdoaWxlICgoY2ggPSByZWFkZXIucmVhZCgpKSAhPSAtMSkge1xuIiArIAotCQkJIiAgICAg
ICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oY2gpO1xuIiArIAotCQkJIiAgICAgICAgICAg
ICAgICByZWFkZXIucmVhZCgpO1xuIiArIAotCQkJIiAgICAgICAgICAgIH1cbiIgKyAKLQkJCSIg
ICAgICAgICAgICBpZiAoY2ggPiAxMCkge1xuIiArCi0JCQkiCQkJCSByZWFkZXIuY2xvc2UoKTtc
biIgKyAKLQkJCSIgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4iICsgCi0JCQkiICAgICAg
ICAgICAgfVxuIiArIAotCQkJIiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiIgKyAKLQkJCSIg
ICAgICAgIH0gZmluYWxseSB7XG4iICsgCi0JCQkiICAgICAgICB9XG4iICsgCi0JCQkiICAgIH1c
biIgKyAKLQkJCSJ9XG4iCi0JCX0sCi0JCSItLS0tLS0tLS0tXG4iICsgCi0JCSIxLiBFUlJPUiBp
biBYLmphdmEgKGF0IGxpbmUgMTUpXG4iICsgCi0JCSIJcmV0dXJuIGZhbHNlO1xuIiArIAotCQki
CV5eXl5eXl5eXl5eXl5cbiIgKyAKLQkJIlJlc291cmNlIGxlYWs6ICdyZWFkZXInIGlzIG5vdCBj
bG9zZWQgYXQgdGhpcyBsb2NhdGlvblxuIiArIAotCQkiLS0tLS0tLS0tLVxuIiwKLQkJbnVsbCwK
LQkJdHJ1ZSwKLQkJb3B0aW9ucyk7Ci19Ci0vLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5p
bmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCi0vLyBkaWZmZXJlbnQgZWFybHkgZXhp
dHMsIGlmIG5vIGNsb3NlIHNlZW4gcmVwb3J0IGFzIGRlZmluaXRlbHkgdW5jbG9zZWQKLXB1Ymxp
YyB2b2lkIHRlc3QwNTZ4KCkgewotCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7
Ci0Jb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfVU5DTE9TRURfQ0xPU0VBQkxFLCBD
b21waWxlck9wdGlvbnMuRVJST1IpOwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BC
X1BPVEVOVElBTExZX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLldBUk5JTkcp
OwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX0RFQURfQ09ERSwgQ29tcGlsZXJP
cHRpb25zLkVSUk9SKTsKLQl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKLQkJbmV3IFN0cmluZ1tdIHsK
LQkJCSJYLmphdmEiLAotCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFkZXI7XG4iICsKLQkJCSJw
dWJsaWMgY2xhc3MgWCB7XG4iICsKLQkJCSIgICAgdm9pZCBmb28zMShib29sZWFuIGIpIHRocm93
cyBFeGNlcHRpb24ge1xuIiArCi0JCQkiICAgICAgICBGaWxlUmVhZGVyIHJlYWRlciA9IG5ldyBG
aWxlUmVhZGVyKFwiZmlsZVwiKTtcbiIgKwotCQkJIiAgICAgICAgaWYgKGIpIHtcbiIgKwotCQkJ
IiAgICAgICAgICAgIHJlYWRlci5jbG9zZSgpO1xuIiArCi0JCQkiICAgICAgICB9IGVsc2Uge1xu
IiArCi0JCQkiICAgICAgICAgICAgcmV0dXJuOyAvLyB3YXJuaW5nXG4iICsKLQkJCSIgICAgICAg
IH1cbiIgKwotCQkJIiAgICB9XG4iICsKLQkJCSIgICAgdm9pZCBmb28zMihib29sZWFuIGIpIHRo
cm93cyBFeGNlcHRpb24ge1xuIiArCi0JCQkiICAgICAgICBGaWxlUmVhZGVyIHJlYWRlciA9IG5l
dyBGaWxlUmVhZGVyKFwiZmlsZVwiKTsgLy8gd2FybiBoZXJlXG4iICsKLQkJCSIgICAgICAgIHJl
dHVybjtcbiIgKwotCQkJIiAgICB9XG4iICsKLQkJCSJ9XG4iCi0JCX0sCi0JCSItLS0tLS0tLS0t
XG4iICsKLQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA4KVxuIiArCi0JCSIJcmV0dXJu
OyAvLyB3YXJuaW5nXG4iICsKLQkJIgleXl5eXl5eXG4iICsKLQkJIlJlc291cmNlIGxlYWs6ICdy
ZWFkZXInIGlzIG5vdCBjbG9zZWQgYXQgdGhpcyBsb2NhdGlvblxuIiArCi0JCSItLS0tLS0tLS0t
XG4iICsKLQkJIjIuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxMilcbiIgKwotCQkiCUZpbGVS
ZWFkZXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlXCIpOyAvLyB3YXJuIGhlcmVcbiIg
KwotCQkiCSAgICAgICAgICAgXl5eXl5eXG4iICsKLQkJIlJlc291cmNlIGxlYWs6ICdyZWFkZXIn
IGlzIG5ldmVyIGNsb3NlZFxuIiArCi0JCSItLS0tLS0tLS0tXG4iLAotCQludWxsLAotCQl0cnVl
LAotCQlvcHRpb25zKTsKLX0KLS8vIEJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3Ig
bWlzc2luZyB0cnktd2l0aC1yZXNvdXJjZXMKLS8vIG5lc3RlZCBtZXRob2QgcGFzc2VzIHRoZSBy
ZXNvdXJjZSB0byBvdXRzaWRlIGNvZGUKLXB1YmxpYyB2b2lkIHRlc3QwNTZ5KCkgewotCU1hcCBv
cHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7Ci0Jb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09N
UElMRVJfUEJfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCW9w
dGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX1BPVEVOVElBTExZX1VOQ0xPU0VEX0NMT1NF
QUJMRSwgQ29tcGlsZXJPcHRpb25zLldBUk5JTkcpOwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNP
TVBJTEVSX1BCX0RFQURfQ09ERSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQl0aGlzLnJ1bk5l
Z2F0aXZlVGVzdCgKLQkJbmV3IFN0cmluZ1tdIHsKLQkJCSJYLmphdmEiLAotCQkJImltcG9ydCBq
YXZhLmlvLkZpbGVSZWFkZXI7XG4iICsKLQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKLQkJCSIg
ICAgdm9pZCBmb28zMShib29sZWFuIGIpIHRocm93cyBFeGNlcHRpb24ge1xuIiArCi0JCQkiICAg
ICAgICBmaW5hbCBGaWxlUmVhZGVyIHJlYWRlcjMxID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlXCIp
O1xuIiArCi0JCQkiICAgICAgICBuZXcgUnVubmFibGUoKSB7XG4iICsKLQkJCSIgICAgICAgICAg
ICBwdWJsaWMgdm9pZCBydW4oKSB7XG4iICsKLQkJCSIgICAgICAgICAgICAgICAgZm9vMTgocmVh
ZGVyMzEpO1xuIiArCi0JCQkiICAgICAgICAgICAgfVxuIiArCi0JCQkiICAgICAgICB9LnJ1bigp
O1xuIiArCi0JCQkiICAgIH1cbiIgKwotCQkJIiAgICB2b2lkIGZvbzE4KEZpbGVSZWFkZXIgcjE4
KSB7XG4iICsKLQkJCSIgICAgICAgIC8vIGNvdWxkIHRoZW9yZXRpY2FsbHkgY2xvc2UgcjE4O1xu
IiArCi0JCQkiICAgIH1cbiIgKwotCQkJIiAgICBhYnN0cmFjdCBjbGFzcyBSZXNvdXJjZVByb3Zp
ZGVyIHtcbiIgKwotCQkJIiAgICAgICAgYWJzdHJhY3QgRmlsZVJlYWRlciBwcm92aWRlKCk7IiAr
Ci0JCQkiICAgIH1cbiIgKwotCQkJIiAgICBSZXNvdXJjZVByb3ZpZGVyIHByb3ZpZGVyOyIgKwot
CQkJIiAgICB2b2lkIGZvbzIzKCkgdGhyb3dzIEV4Y2VwdGlvbiB7XG4iICsKLQkJCSIgICAgICAg
IGZpbmFsIEZpbGVSZWFkZXIgcmVhZGVyMjMgPSBuZXcgRmlsZVJlYWRlcihcImZpbGVcIik7XG4i
ICsKLQkJCSIgICAgICAgIHByb3ZpZGVyID0gbmV3IFJlc291cmNlUHJvdmlkZXIoKSB7XG4iICsK
LQkJCSIgICAgICAgICAgICBwdWJsaWMgRmlsZVJlYWRlciBwcm92aWRlKCkge1xuIiArCi0JCQki
ICAgICAgICAgICAgICAgIHJldHVybiByZWFkZXIyMztcbiIgKwotCQkJIiAgICAgICAgICAgIH1c
biIgKwotCQkJIiAgICAgICAgfTtcbiIgKwotCQkJIiAgICB9XG4iICsKLQkJCSJ9XG4iCi0JCX0s
Ci0JCSItLS0tLS0tLS0tXG4iICsgCi0JCSIxLiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSA0
KVxuIiArIAotCQkiCWZpbmFsIEZpbGVSZWFkZXIgcmVhZGVyMzEgPSBuZXcgRmlsZVJlYWRlcihc
ImZpbGVcIik7XG4iICsgCi0JCSIJICAgICAgICAgICAgICAgICBeXl5eXl5eXlxuIiArIAotCQki
UG90ZW50aWFsIHJlc291cmNlIGxlYWs6ICdyZWFkZXIzMScgbWF5IG5vdCBiZSBjbG9zZWRcbiIg
KyAKLQkJIi0tLS0tLS0tLS1cbiIgKyAKLQkJIjIuIFdBUk5JTkcgaW4gWC5qYXZhIChhdCBsaW5l
IDE3KVxuIiArIAotCQkiCWZpbmFsIEZpbGVSZWFkZXIgcmVhZGVyMjMgPSBuZXcgRmlsZVJlYWRl
cihcImZpbGVcIik7XG4iICsgCi0JCSIJICAgICAgICAgICAgICAgICBeXl5eXl5eXlxuIiArIAot
CQkiUG90ZW50aWFsIHJlc291cmNlIGxlYWs6ICdyZWFkZXIyMycgbWF5IG5vdCBiZSBjbG9zZWRc
biIgKyAKLQkJIi0tLS0tLS0tLS1cbiIsCi0JCW51bGwsCi0JCXRydWUsCi0JCW9wdGlvbnMpOwot
fQotLy8gQnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRo
LXJlc291cmNlcwotLy8gcmVzb3VyY2UgYXNzaWduZWQgdG8gc2Vjb25kIGxvY2FsIGFuZCBpcyAo
cG90ZW50aWFsbHkpIGNsb3NlZCBvbiB0aGUgbGF0dGVyCi1wdWJsaWMgdm9pZCB0ZXN0MDU2eigp
IHsKLQlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwotCW9wdGlvbnMucHV0KEph
dmFDb3JlLkNPTVBJTEVSX1BCX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVS
Uk9SKTsKLQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9QT1RFTlRJQUxMWV9VTkNM
T1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0Jb3B0aW9ucy5wdXQoSmF2
YUNvcmUuQ09NUElMRVJfUEJfREVBRF9DT0RFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCXRo
aXMucnVuTmVnYXRpdmVUZXN0KAotCQluZXcgU3RyaW5nW10gewotCQkJIlguamF2YSIsCi0JCQki
aW1wb3J0IGphdmEuaW8uRmlsZVJlYWRlcjtcbiIgKwotCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIg
KwotCQkJIiAgICB2b2lkIGZvbzE3KCkgdGhyb3dzIEV4Y2VwdGlvbiB7XG4iICsKLQkJCSIgICAg
ICAgIEZpbGVSZWFkZXIgcmVhZGVyMTcgPSBuZXcgRmlsZVJlYWRlcihcImZpbGVcIik7XG4iICsK
LQkJCSIgICAgICAgIGZpbmFsIEZpbGVSZWFkZXIgcmVhZGVyQ29weSA9IHJlYWRlcjE3O1xuIiAr
Ci0JCQkiICAgICAgICByZWFkZXJDb3B5LmNsb3NlKCk7XG4iICsKLQkJCSIgICAgfVxuIiArCi0J
CQkiICAgIHZvaWQgZm9vMTdhKCkgdGhyb3dzIEV4Y2VwdGlvbiB7XG4iICsKLQkJCSIgICAgICAg
IEZpbGVSZWFkZXIgcmVhZGVyMTdhID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlXCIpO1xuIiArCi0J
CQkiICAgICAgICBGaWxlUmVhZGVyIHJlYWRlckNvcHlhOyIgKwotCQkJIgkJIHJlYWRlckNvcHlh
ID0gcmVhZGVyMTdhO1xuIiArCi0JCQkiICAgICAgICBiYXIocmVhZGVyQ29weWEpO1xuIiArIC8v
IHBvdGVudGlhbGx5IGNsb3NlcwotCQkJIiAgICB9XG4iICsKLQkJCSIgICAgdm9pZCBiYXIoRmls
ZVJlYWRlciByKSB7fVxuIiArCi0JCQkifVxuIgotCQl9LAotCQkiLS0tLS0tLS0tLVxuIiArIAot
CQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDkpXG4iICsgCi0JCSIJRmlsZVJlYWRlciBy
ZWFkZXIxN2EgPSBuZXcgRmlsZVJlYWRlcihcImZpbGVcIik7XG4iICsgCi0JCSIJICAgICAgICAg
ICBeXl5eXl5eXl5cbiIgKyAKLQkJIlBvdGVudGlhbCByZXNvdXJjZSBsZWFrOiAncmVhZGVyMTdh
JyBtYXkgbm90IGJlIGNsb3NlZFxuIiArIAotCQkiLS0tLS0tLS0tLVxuIiwKLQkJbnVsbCwKLQkJ
dHJ1ZSwKLQkJb3B0aW9ucyk7Ci19Ci0vLyBCdWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcg
Zm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCi0vLyBtdWx0aXBsZSBlYXJseSBleGlzdHMg
ZnJvbSBuZXN0ZWQgc2NvcGVzIChhbHdheXMgY2xvc2VkKSAKLXB1YmxpYyB2b2lkIHRlc3QwNTZ6
eigpIHsKLQlNYXAgb3B0aW9ucyA9IGdldENvbXBpbGVyT3B0aW9ucygpOwotCW9wdGlvbnMucHV0
KEphdmFDb3JlLkNPTVBJTEVSX1BCX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25z
LkVSUk9SKTsKLQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9QT1RFTlRJQUxMWV9V
TkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0Jb3B0aW9ucy5wdXQo
SmF2YUNvcmUuQ09NUElMRVJfUEJfRVhQTElDSVRMWV9DTE9TRURfQVVUT0NMT1NFQUJMRSwgQ29t
cGlsZXJPcHRpb25zLkVSUk9SKTsKLQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9E
RUFEX0NPREUsIENvbXBpbGVyT3B0aW9ucy5FUlJPUik7Ci0JdGhpcy5ydW5OZWdhdGl2ZVRlc3Qo
Ci0JCW5ldyBTdHJpbmdbXSB7Ci0JCQkiWC5qYXZhIiwKLQkJCSJpbXBvcnQgamF2YS5pby5GaWxl
UmVhZGVyO1xuIiArCi0JCQkicHVibGljIGNsYXNzIFgge1xuIiArCi0JCQkiICAgIHZvaWQgZm9v
MTYoKSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIgKwotCQkJIiAgICAgICAgRmlsZVJlYWRlciByZWFk
ZXIxNiA9IG5ldyBGaWxlUmVhZGVyKFwiZmlsZVwiKTtcbiIgKwotCQkJIiAgICAgICAgdHJ5IHtc
biIgKwotCQkJIiAgICAgICAgICAgIHJlYWRlcjE2LmNsb3NlKCk7XG4gIiArCi0JCQkiICAgICAg
ICAgICAgcmV0dXJuO1xuIiArCi0JCQkiICAgICAgICB9IGNhdGNoIChSdW50aW1lRXhjZXB0aW9u
IHJlKSB7XG4iICsKLQkJCSIgICAgICAgICAgICByZXR1cm47XG4iICsKLQkJCSIgICAgICAgIH0g
Y2F0Y2ggKEVycm9yIGUpIHtcbiIgKwotCQkJIiAgICAgICAgICAgIHJldHVybjtcbiIgKwotCQkJ
IiAgICAgICAgfSBmaW5hbGx5IHtcbiIgKwotCQkJIiAgICAgICAgICAgIHJlYWRlcjE2LmNsb3Nl
KCk7XG4gIiArCi0JCQkiICAgICAgICB9XG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQkifVxuIgot
CQl9LAotCQkiLS0tLS0tLS0tLVxuIiArIAotCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5l
IDQpXG4iICsgCi0JCSIJRmlsZVJlYWRlciByZWFkZXIxNiA9IG5ldyBGaWxlUmVhZGVyKFwiZmls
ZVwiKTtcbiIgKyAKLQkJIgkgICAgICAgICAgIF5eXl5eXl5eXG4iICsgCi0JCSJSZXNvdXJjZSAn
cmVhZGVyMTYnIHNob3VsZCBiZSBtYW5hZ2VkIGJ5IHRyeS13aXRoLXJlc291cmNlXG4iICsgCi0J
CSItLS0tLS0tLS0tXG4iLAotCQludWxsLAotCQl0cnVlLAotCQlvcHRpb25zKTsKLX0KLS8vIEJ1
ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNvdXJj
ZXMKLS8vIG11bHRpcGxlIGVhcmx5IGV4aXN0cyBmcm9tIG5lc3RlZCBzY29wZXMgKG5ldmVyIGNs
b3NlZCkgCi1wdWJsaWMgdm9pZCB0ZXN0MDU2enp6KCkgewotCU1hcCBvcHRpb25zID0gZ2V0Q29t
cGlsZXJPcHRpb25zKCk7Ci0Jb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfVU5DTE9T
RURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCW9wdGlvbnMucHV0KEphdmFD
b3JlLkNPTVBJTEVSX1BCX1BPVEVOVElBTExZX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJP
cHRpb25zLkVSUk9SKTsKLQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9FWFBMSUNJ
VExZX0NMT1NFRF9BVVRPQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCW9wdGlv
bnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX0RFQURfQ09ERSwgQ29tcGlsZXJPcHRpb25zLkVS
Uk9SKTsKLQl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKLQkJbmV3IFN0cmluZ1tdIHsKLQkJCSJYLmph
dmEiLAotCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFkZXI7XG4iICsKLQkJCSJwdWJsaWMgY2xh
c3MgWCB7XG4iICsKLQkJCSIgICAgdm9pZCBmb28xNigpIHRocm93cyBFeGNlcHRpb24ge1xuIiAr
Ci0JCQkiICAgICAgICBGaWxlUmVhZGVyIHJlYWRlcjE2ID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxl
XCIpO1xuIiArCi0JCQkiICAgICAgICB0cnkge1xuIiArCi0JCQkiICAgICAgICAgICAgcmV0dXJu
O1xuIiArCi0JCQkiICAgICAgICB9IGNhdGNoIChSdW50aW1lRXhjZXB0aW9uIHJlKSB7XG4iICsK
LQkJCSIgICAgICAgICAgICByZXR1cm47XG4iICsKLQkJCSIgICAgICAgIH0gY2F0Y2ggKEVycm9y
IGUpIHtcbiIgKwotCQkJIiAgICAgICAgICAgIHJldHVybjtcbiIgKwotCQkJIiAgICAgICAgfSBm
aW5hbGx5IHtcbiIgKwotCQkJIiAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbigpO1xuICIg
KwotCQkJIiAgICAgICAgfVxuIiArCi0JCQkiICAgIH1cbiIgKwotCQkJIn1cbiIKLQkJfSwKLQkJ
Ii0tLS0tLS0tLS1cbiIgKyAKLQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA0KVxuIiAr
IAotCQkiCUZpbGVSZWFkZXIgcmVhZGVyMTYgPSBuZXcgRmlsZVJlYWRlcihcImZpbGVcIik7XG4i
ICsgCi0JCSIJICAgICAgICAgICBeXl5eXl5eXlxuIiArIAotCQkiUmVzb3VyY2UgbGVhazogJ3Jl
YWRlcjE2JyBpcyBuZXZlciBjbG9zZWRcbiIgKyAKLQkJIi0tLS0tLS0tLS1cbiIsCi0JCW51bGws
Ci0JCXRydWUsCi0JCW9wdGlvbnMpOwotfQotLy8gQnVnIDM1OTMzNCAtIEFuYWx5c2lzIGZvciBy
ZXNvdXJjZSBsZWFrIHdhcm5pbmdzIGRvZXMgbm90IGNvbnNpZGVyIGV4Y2VwdGlvbnMgYXMgbWV0
aG9kIGV4aXQgcG9pbnRzCi0vLyBleHBsaWNpdCB0aHJvdyBpcyBhIHRydWUgbWV0aG9kIGV4aXQg
aGVyZQotcHVibGljIHZvaWQgdGVzdDA1NnRocm93MSgpIHsKLQlNYXAgb3B0aW9ucyA9IGdldENv
bXBpbGVyT3B0aW9ucygpOwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX1VOQ0xP
U0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQlvcHRpb25zLnB1dChKYXZh
Q29yZS5DT01QSUxFUl9QQl9QT1RFTlRJQUxMWV9VTkNMT1NFRF9DTE9TRUFCTEUsIENvbXBpbGVy
T3B0aW9ucy5FUlJPUik7Ci0Jb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfRVhQTElD
SVRMWV9DTE9TRURfQVVUT0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQlvcHRp
b25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9ERUFEX0NPREUsIENvbXBpbGVyT3B0aW9ucy5F
UlJPUik7Ci0JdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCi0JCW5ldyBTdHJpbmdbXSB7Ci0JCQkiWC5q
YXZhIiwKLQkJCSJpbXBvcnQgamF2YS5pby5GaWxlUmVhZGVyO1xuIiArCi0JCQkicHVibGljIGNs
YXNzIFgge1xuIiArCi0JCQkiICAgIHZvaWQgZm9vMihib29sZWFuIGEsIGJvb2xlYW4gYiwgYm9v
bGVhbiBjKSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIgKwotCQkJIiAgICAgICAgRmlsZVJlYWRlciBy
ZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihcImZpbGVcIik7XG4iICsKLQkJCSIgICAgICAgIGlmKGEp
XG4iICsKLQkJCSIgICAgICAgICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKCk7ICAgIC8vd2Fybmlu
ZyAxXG4iICsKLQkJCSIgICAgICAgIGVsc2UgaWYgKGIpXG4iICsKLQkJCSIgICAgICAgICAgICBy
ZWFkZXIuY2xvc2UoKTtcbiIgKwotCQkJIiAgICAgICAgZWxzZSBpZihjKVxuIiArCi0JCQkiICAg
ICAgICAgICAgdGhyb3cgbmV3IEV4Y2VwdGlvbigpOyAgICAvL3dhcm5pbmcgMlxuIiArCi0JCQki
ICAgICAgICByZWFkZXIuY2xvc2UoKTtcbiIgKwotCQkJIiAgICB9XG4iICsKLQkJCSJ9XG4iCi0J
CX0sCi0JCSItLS0tLS0tLS0tXG4iICsgCi0JCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUg
NilcbiIgKwotCQkiCXRocm93IG5ldyBFeGNlcHRpb24oKTsgICAgLy93YXJuaW5nIDFcbiIgKwot
CQkiCV5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIgKwotCQkiUmVzb3VyY2UgbGVhazogJ3JlYWRl
cicgaXMgbm90IGNsb3NlZCBhdCB0aGlzIGxvY2F0aW9uXG4iICsKLQkJIi0tLS0tLS0tLS1cbiIg
KwotCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDEwKVxuIiArCi0JCSIJdGhyb3cgbmV3
IEV4Y2VwdGlvbigpOyAgICAvL3dhcm5pbmcgMlxuIiArCi0JCSIJXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXlxuIiArCi0JCSJSZXNvdXJjZSBsZWFrOiAncmVhZGVyJyBpcyBub3QgY2xvc2VkIGF0IHRo
aXMgbG9jYXRpb25cbiIgKwotCQkiLS0tLS0tLS0tLVxuIiwKLQkJbnVsbCwKLQkJdHJ1ZSwKLQkJ
b3B0aW9ucyk7CQotfQotLy8gQnVnIDM1OTMzNCAtIEFuYWx5c2lzIGZvciByZXNvdXJjZSBsZWFr
IHdhcm5pbmdzIGRvZXMgbm90IGNvbnNpZGVyIGV4Y2VwdGlvbnMgYXMgbWV0aG9kIGV4aXQgcG9p
bnRzCi0vLyBjbG9zZSgpIHdpdGhpbiBmaW5hbGx5IHByb3ZpZGVzIHByb3RlY3Rpb24gZm9yIHRo
cm93Ci1wdWJsaWMgdm9pZCB0ZXN0MDU2dGhyb3cyKCkgewotCU1hcCBvcHRpb25zID0gZ2V0Q29t
cGlsZXJPcHRpb25zKCk7Ci0Jb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfVU5DTE9T
RURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCW9wdGlvbnMucHV0KEphdmFD
b3JlLkNPTVBJTEVSX1BCX1BPVEVOVElBTExZX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJP
cHRpb25zLkVSUk9SKTsKLQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9FWFBMSUNJ
VExZX0NMT1NFRF9BVVRPQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCW9wdGlv
bnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX0RFQURfQ09ERSwgQ29tcGlsZXJPcHRpb25zLkVS
Uk9SKTsKLQl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKLQkJbmV3IFN0cmluZ1tdIHsKLQkJCSJYLmph
dmEiLAotCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFkZXI7XG4iICsKLQkJCSJwdWJsaWMgY2xh
c3MgWCB7XG4iICsKLQkJCSIgICAgdm9pZCBmb28xKCkgdGhyb3dzIEV4Y2VwdGlvbiB7XG4iICsg
Ci0JCQkiICAgICAgICBGaWxlUmVhZGVyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKFwiZmlsZVwi
KTsgLy8gcHJvcG9zZSB0LXctclxuIiArIAotCQkJIiAgICAgICAgdHJ5IHtcbiIgKyAKLQkJCSIg
ICAgICAgICAgICByZWFkZXIucmVhZCgpO1xuIiArIAotCQkJIiAgICAgICAgICAgIHJldHVybjtc
biIgKyAKLQkJCSIgICAgICAgIH0gY2F0Y2ggKEV4Y2VwdGlvbiBlKSB7XG4iICsgCi0JCQkiICAg
ICAgICAgICAgdGhyb3cgbmV3IEV4Y2VwdGlvbigpO1xuIiArIAotCQkJIiAgICAgICAgfSBmaW5h
bGx5IHtcbiIgKyAKLQkJCSIgICAgICAgICAgICByZWFkZXIuY2xvc2UoKTtcbiIgKyAKLQkJCSIg
ICAgICAgIH1cbiIgKyAKLQkJCSIgICAgfVxuIiArIAotCQkJIlxuIiArIAotCQkJIiAgICB2b2lk
IGZvbzIoKSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIgKyAKLQkJCSIgICAgICAgIEZpbGVSZWFkZXIg
cmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoXCJmaWxlXCIpOyAvLyBwcm9wb3NlIHQtdy1yXG4iICsg
Ci0JCQkiICAgICAgICB0cnkge1xuIiArIAotCQkJIiAgICAgICAgICAgIHJlYWRlci5yZWFkKCk7
XG4iICsgCi0JCQkiICAgICAgICAgICAgdGhyb3cgbmV3IEV4Y2VwdGlvbigpOyAvLyBzaG91bGQg
bm90IHdhcm4gaGVyZVxuIiArIAotCQkJIiAgICAgICAgfSBjYXRjaCAoRXhjZXB0aW9uIGUpIHtc
biIgKyAKLQkJCSIgICAgICAgICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKCk7XG4iICsgCi0JCQki
ICAgICAgICB9IGZpbmFsbHkge1xuIiArIAotCQkJIiAgICAgICAgICAgIHJlYWRlci5jbG9zZSgp
O1xuIiArIAotCQkJIiAgICAgICAgfVxuIiArIAotCQkJIiAgICB9XG4iICsgCi0JCQkiXG4iICsg
Ci0JCQkiICAgIHZvaWQgZm9vMygpIHRocm93cyBFeGNlcHRpb24ge1xuIiArIAotCQkJIiAgICAg
ICAgRmlsZVJlYWRlciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihcImZpbGVcIik7IC8vIHByb3Bv
c2UgdC13LXJcbiIgKyAKLQkJCSIgICAgICAgIHRyeSB7XG4iICsgCi0JCQkiICAgICAgICAgICAg
cmVhZGVyLnJlYWQoKTtcbiIgKyAKLQkJCSIgICAgICAgICAgICB0aHJvdyBuZXcgRXhjZXB0aW9u
KCk7XG4iICsgCi0JCQkiICAgICAgICB9IGZpbmFsbHkge1xuIiArIAotCQkJIiAgICAgICAgICAg
IHJlYWRlci5jbG9zZSgpO1xuIiArIAotCQkJIiAgICAgICAgfVxuIiArIAotCQkJIiAgICB9XG4i
ICsgCi0JCQkifVxuIgotCQl9LAotCQkiLS0tLS0tLS0tLVxuIiArCi0JCSIxLiBFUlJPUiBpbiBY
LmphdmEgKGF0IGxpbmUgNClcbiIgKwotCQkiCUZpbGVSZWFkZXIgcmVhZGVyID0gbmV3IEZpbGVS
ZWFkZXIoXCJmaWxlXCIpOyAvLyBwcm9wb3NlIHQtdy1yXG4iICsKLQkJIgkgICAgICAgICAgIF5e
Xl5eXlxuIiArCi0JCSJSZXNvdXJjZSAncmVhZGVyJyBzaG91bGQgYmUgbWFuYWdlZCBieSB0cnkt
d2l0aC1yZXNvdXJjZVxuIiArCi0JCSItLS0tLS0tLS0tXG4iICsKLQkJIjIuIEVSUk9SIGluIFgu
amF2YSAoYXQgbGluZSAxNilcbiIgKwotCQkiCUZpbGVSZWFkZXIgcmVhZGVyID0gbmV3IEZpbGVS
ZWFkZXIoXCJmaWxlXCIpOyAvLyBwcm9wb3NlIHQtdy1yXG4iICsKLQkJIgkgICAgICAgICAgIF5e
Xl5eXlxuIiArCi0JCSJSZXNvdXJjZSAncmVhZGVyJyBzaG91bGQgYmUgbWFuYWdlZCBieSB0cnkt
d2l0aC1yZXNvdXJjZVxuIiArCi0JCSItLS0tLS0tLS0tXG4iICsKLQkJIjMuIEVSUk9SIGluIFgu
amF2YSAoYXQgbGluZSAyOClcbiIgKwotCQkiCUZpbGVSZWFkZXIgcmVhZGVyID0gbmV3IEZpbGVS
ZWFkZXIoXCJmaWxlXCIpOyAvLyBwcm9wb3NlIHQtdy1yXG4iICsKLQkJIgkgICAgICAgICAgIF5e
Xl5eXlxuIiArCi0JCSJSZXNvdXJjZSAncmVhZGVyJyBzaG91bGQgYmUgbWFuYWdlZCBieSB0cnkt
d2l0aC1yZXNvdXJjZVxuIiArCi0JCSItLS0tLS0tLS0tXG4iLAotCQludWxsLAotCQl0cnVlLAot
CQlvcHRpb25zKTsJCi19Ci0vLyBCdWcgMzU5MzM0IC0gQW5hbHlzaXMgZm9yIHJlc291cmNlIGxl
YWsgd2FybmluZ3MgZG9lcyBub3QgY29uc2lkZXIgZXhjZXB0aW9ucyBhcyBtZXRob2QgZXhpdCBw
b2ludHMKLS8vIGNsb3NlKCkgbmVzdGVkIHdpdGhpbiBmaW5hbGx5IHByb3ZpZGVzIHByb3RlY3Rp
b24gZm9yIHRocm93Ci1wdWJsaWMgdm9pZCB0ZXN0MDU2dGhyb3czKCkgewotCU1hcCBvcHRpb25z
ID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7Ci0Jb3B0aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJf
UEJfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCW9wdGlvbnMu
cHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX1BPVEVOVElBTExZX1VOQ0xPU0VEX0NMT1NFQUJMRSwg
Q29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQlvcHRpb25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9Q
Ql9FWFBMSUNJVExZX0NMT1NFRF9BVVRPQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuRVJST1Ip
OwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX0RFQURfQ09ERSwgQ29tcGlsZXJP
cHRpb25zLkVSUk9SKTsKLQl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKLQkJbmV3IFN0cmluZ1tdIHsK
LQkJCSJYLmphdmEiLAotCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFkZXI7XG4iICsKLQkJCSJw
dWJsaWMgY2xhc3MgWCB7XG4iICsKLQkJCSIgICAgdm9pZCBmb28yeCgpIHRocm93cyBFeGNlcHRp
b24ge1xuIiArIAotCQkJIiAgICAgICAgRmlsZVJlYWRlciByZWFkZXIgPSBuZXcgRmlsZVJlYWRl
cihcImZpbGVcIik7IC8vIHByb3Bvc2UgdC13LXJcbiIgKyAKLQkJCSIgICAgICAgIHRyeSB7XG4i
ICsgCi0JCQkiICAgICAgICAgICAgcmVhZGVyLnJlYWQoKTtcbiIgKyAKLQkJCSIgICAgICAgICAg
ICB0aHJvdyBuZXcgRXhjZXB0aW9uKCk7IC8vIHNob3VsZCBub3Qgd2FybiBoZXJlXG4iICsgCi0J
CQkiICAgICAgICB9IGNhdGNoIChFeGNlcHRpb24gZSkge1xuIiArIAotCQkJIiAgICAgICAgICAg
IHRocm93IG5ldyBFeGNlcHRpb24oKTtcbiIgKyAKLQkJCSIgICAgICAgIH0gZmluYWxseSB7XG4i
ICsKLQkJCSIgICAgICAgICAgICBpZiAocmVhZGVyICE9IG51bGwpXG4iICsKLQkJCSIgICAgICAg
ICAgICAgICAgIHRyeSB7XG4iICsgCi0JCQkiICAgICAgICAgICAgICAgICAgICAgcmVhZGVyLmNs
b3NlKCk7XG4iICsKLQkJCSIgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGphdmEuaW8uSU9FeGNl
cHRpb24gaW8pIHt9XG4iICsgCi0JCQkiICAgICAgICB9XG4iICsgCi0JCQkiICAgIH1cbiIgKyAK
LQkJCSJ9XG4iCi0JCX0sCi0JCSItLS0tLS0tLS0tXG4iICsgCi0JCSIxLiBFUlJPUiBpbiBYLmph
dmEgKGF0IGxpbmUgNClcbiIgKyAKLQkJIglGaWxlUmVhZGVyIHJlYWRlciA9IG5ldyBGaWxlUmVh
ZGVyKFwiZmlsZVwiKTsgLy8gcHJvcG9zZSB0LXctclxuIiArIAotCQkiCSAgICAgICAgICAgXl5e
Xl5eXG4iICsgCi0JCSJSZXNvdXJjZSAncmVhZGVyJyBzaG91bGQgYmUgbWFuYWdlZCBieSB0cnkt
d2l0aC1yZXNvdXJjZVxuIiArIAotCQkiLS0tLS0tLS0tLVxuIiwKLQkJbnVsbCwKLQkJdHJ1ZSwK
LQkJb3B0aW9ucyk7CQotfQotLy8gQnVnIDM1OTMzNCAtIEFuYWx5c2lzIGZvciByZXNvdXJjZSBs
ZWFrIHdhcm5pbmdzIGRvZXMgbm90IGNvbnNpZGVyIGV4Y2VwdGlvbnMgYXMgbWV0aG9kIGV4aXQg
cG9pbnRzCi0vLyBhZGRpdGlvbmFsIGJvb2xlYW4gc2hvdWxkIHNoZWQgZG91YnQgb24gd2hldGhl
ciB3ZSByZWFjaCB0aGUgY2xvc2UoKSBjYWxsCi1wdWJsaWMgdm9pZCB0ZXN0MDU2dGhyb3c0KCkg
ewotCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7Ci0Jb3B0aW9ucy5wdXQoSmF2
YUNvcmUuQ09NUElMRVJfUEJfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxlck9wdGlvbnMuRVJS
T1IpOwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX1BPVEVOVElBTExZX1VOQ0xP
U0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQlvcHRpb25zLnB1dChKYXZh
Q29yZS5DT01QSUxFUl9QQl9FWFBMSUNJVExZX0NMT1NFRF9BVVRPQ0xPU0VBQkxFLCBDb21waWxl
ck9wdGlvbnMuRVJST1IpOwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX0RFQURf
Q09ERSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKLQkJ
bmV3IFN0cmluZ1tdIHsKLQkJCSJYLmphdmEiLAotCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFk
ZXI7XG4iICsKLQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKLQkJCSIgICAgdm9pZCBmb28yeChi
b29sZWFuIGIpIHRocm93cyBFeGNlcHRpb24ge1xuIiArIAotCQkJIiAgICAgICAgRmlsZVJlYWRl
ciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcihcImZpbGVcIik7XG4iICsgCi0JCQkiICAgICAgICB0
cnkge1xuIiArIAotCQkJIiAgICAgICAgICAgIHJlYWRlci5yZWFkKCk7XG4iICsgCi0JCQkiICAg
ICAgICAgICAgdGhyb3cgbmV3IEV4Y2VwdGlvbigpOyAvLyBzaG91bGQgd2FybiBoZXJlXG4iICsg
Ci0JCQkiICAgICAgICB9IGNhdGNoIChFeGNlcHRpb24gZSkge1xuIiArIAotCQkJIiAgICAgICAg
ICAgIHRocm93IG5ldyBFeGNlcHRpb24oKTsgLy8gc2hvdWxkIHdhcm4gaGVyZVxuIiArIAotCQkJ
IiAgICAgICAgfSBmaW5hbGx5IHtcbiIgKwotCQkJIiAgICAgICAgICAgIGlmIChyZWFkZXIgIT0g
bnVsbCAmJiBiKVxuIiArIC8vIHRoaXMgY29uZGl0aW9uIGlzIHRvbyBzdHJvbmcgdG8gcHJvdGVj
dCByZWFkZXIKLQkJCSIgICAgICAgICAgICAgICAgIHRyeSB7XG4iICsgCi0JCQkiICAgICAgICAg
ICAgICAgICAgICAgcmVhZGVyLmNsb3NlKCk7XG4iICsKLQkJCSIgICAgICAgICAgICAgICAgIH0g
Y2F0Y2ggKGphdmEuaW8uSU9FeGNlcHRpb24gaW8pIHt9XG4iICsgCi0JCQkiICAgICAgICB9XG4i
ICsgCi0JCQkiICAgIH1cbiIgKyAKLQkJCSJ9XG4iCi0JCX0sCi0JCSItLS0tLS0tLS0tXG4iICsK
LQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA3KVxuIiArCi0JCSIJdGhyb3cgbmV3IEV4
Y2VwdGlvbigpOyAvLyBzaG91bGQgd2FybiBoZXJlXG4iICsKLQkJIgleXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXG4iICsKLQkJIlBvdGVudGlhbCByZXNvdXJjZSBsZWFrOiAncmVhZGVyJyBtYXkgbm90
IGJlIGNsb3NlZCBhdCB0aGlzIGxvY2F0aW9uXG4iICsKLQkJIi0tLS0tLS0tLS1cbiIgKwotCQki
Mi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDkpXG4iICsKLQkJIgl0aHJvdyBuZXcgRXhjZXB0
aW9uKCk7IC8vIHNob3VsZCB3YXJuIGhlcmVcbiIgKwotCQkiCV5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5cbiIgKwotCQkiUG90ZW50aWFsIHJlc291cmNlIGxlYWs6ICdyZWFkZXInIG1heSBub3QgYmUg
Y2xvc2VkIGF0IHRoaXMgbG9jYXRpb25cbiIgKwotCQkiLS0tLS0tLS0tLVxuIiwKLQkJbnVsbCwK
LQkJdHJ1ZSwKLQkJb3B0aW9ucyk7CQotfQotLy8gQnVnIDM1OTMzNCAtIEFuYWx5c2lzIGZvciBy
ZXNvdXJjZSBsZWFrIHdhcm5pbmdzIGRvZXMgbm90IGNvbnNpZGVyIGV4Y2VwdGlvbnMgYXMgbWV0
aG9kIGV4aXQgcG9pbnRzCi0vLyBzaW1pbGFyIHRvIHRlc3QwNTZ0aHJvdzMoKSBidXQgaW5kaXJl
Y3RseSBjYWxsaW5nIGNsb3NlKCksIHNvIGRvdWJ0cyByZW1haW4uCi1wdWJsaWMgdm9pZCB0ZXN0
MDU2dGhyb3c1KCkgewotCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7Ci0Jb3B0
aW9ucy5wdXQoSmF2YUNvcmUuQ09NUElMRVJfUEJfVU5DTE9TRURfQ0xPU0VBQkxFLCBDb21waWxl
ck9wdGlvbnMuRVJST1IpOwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJTEVSX1BCX1BPVEVO
VElBTExZX1VOQ0xPU0VEX0NMT1NFQUJMRSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQlvcHRp
b25zLnB1dChKYXZhQ29yZS5DT01QSUxFUl9QQl9FWFBMSUNJVExZX0NMT1NFRF9BVVRPQ0xPU0VB
QkxFLCBDb21waWxlck9wdGlvbnMuRVJST1IpOwotCW9wdGlvbnMucHV0KEphdmFDb3JlLkNPTVBJ
TEVSX1BCX0RFQURfQ09ERSwgQ29tcGlsZXJPcHRpb25zLkVSUk9SKTsKLQl0aGlzLnJ1bk5lZ2F0
aXZlVGVzdCgKLQkJbmV3IFN0cmluZ1tdIHsKLQkJCSJYLmphdmEiLAotCQkJImltcG9ydCBqYXZh
LmlvLkZpbGVSZWFkZXI7XG4iICsKLQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKLQkJCSIgICAg
dm9pZCBmb28yeCgpIHRocm93cyBFeGNlcHRpb24ge1xuIiArCi0JCQkiICAgICAgICBGaWxlUmVh
ZGVyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKFwiZmlsZVwiKTtcbiIgKwotCQkJIiAgICAgICAg
dHJ5IHtcbiIgKwotCQkJIiAgICAgICAgICAgIHJlYWRlci5yZWFkKCk7XG4iICsKLQkJCSIgICAg
ICAgICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKCk7IC8vIHNob3VsZCB3YXJuICdtYXkgbm90JyBo
ZXJlXG4iICsKLQkJCSIgICAgICAgIH0gY2F0Y2ggKEV4Y2VwdGlvbiBlKSB7XG4iICsKLQkJCSIg
ICAgICAgICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKCk7IC8vIHNob3VsZCB3YXJuICdtYXkgbm90
JyBoZXJlXG4iICsKLQkJCSIgICAgICAgIH0gZmluYWxseSB7XG4iICsKLQkJCSIgICAgICAgICAg
ICBkb0Nsb3NlKHJlYWRlcik7XG4iICsKLQkJCSIgICAgICAgIH1cbiIgKwotCQkJIiAgICB9XG4i
ICsKLQkJCSIgICAgdm9pZCBkb0Nsb3NlKEZpbGVSZWFkZXIgcikgeyB0cnkgeyByLmNsb3NlKCk7
IH0gY2F0Y2ggKGphdmEuaW8uSU9FeGNlcHRpb24gZXgpIHt9fVxuIiArIAotCQkJIn1cbiIKLQkJ
fSwKLQkJIi0tLS0tLS0tLS1cbiIgKwotCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDcp
XG4iICsKLQkJIgl0aHJvdyBuZXcgRXhjZXB0aW9uKCk7IC8vIHNob3VsZCB3YXJuIFwnbWF5IG5v
dFwnIGhlcmVcbiIgKwotCQkiCV5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIgKwotCQkiUG90ZW50
aWFsIHJlc291cmNlIGxlYWs6ICdyZWFkZXInIG1heSBub3QgYmUgY2xvc2VkIGF0IHRoaXMgbG9j
YXRpb25cbiIgKwotCQkiLS0tLS0tLS0tLVxuIiArCi0JCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0
IGxpbmUgOSlcbiIgKwotCQkiCXRocm93IG5ldyBFeGNlcHRpb24oKTsgLy8gc2hvdWxkIHdhcm4g
XCdtYXkgbm90XCcgaGVyZVxuIiArCi0JCSIJXl5eXl5eXl5eXl5eXl5eXl5eXl5eXlxuIiArCi0J
CSJQb3RlbnRpYWwgcmVzb3VyY2UgbGVhazogJ3JlYWRlcicgbWF5IG5vdCBiZSBjbG9zZWQgYXQg
dGhpcyBsb2NhdGlvblxuIiArCi0JCSItLS0tLS0tLS0tXG4iLAotCQludWxsLAotCQl0cnVlLAot
CQlvcHRpb25zKTsJCi19Ci0vLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1
Zy5jZ2k/aWQ9MzYxMDUzCi1wdWJsaWMgdm9pZCB0ZXN0MDU3KCkgewotCXRoaXMucnVuQ29uZm9y
bVRlc3QoCi0JCW5ldyBTdHJpbmdbXSB7Ci0JCQkiWC5qYXZhIiwKLQkJCSJwdWJsaWMgY2xhc3Mg
WCBpbXBsZW1lbnRzIEF1dG9DbG9zZWFibGUge1xuIiArCi0JCQkiCUBPdmVycmlkZVxuIiArCi0J
CQkiCXB1YmxpYyB2b2lkIGNsb3NlKCkgdGhyb3dzIEV4Y2VwdGlvbiB7XG4iICsKLQkJCSIJCXRo
cm93IG5ldyBFeGNlcHRpb24oKTtcbiIgKwotCQkJIgl9XG4iICsKLQkJCSIJcHVibGljIHN0YXRp
YyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIiArCi0JCQkiCQlmaW5hbCBib29sZWFuIGZv
bztcbiIgKwotCQkJIgkJdHJ5IChYIGEgPSBuZXcgWCgpOyBYIGIgPSBuZXcgWCgpKSB7XG4iICsK
LQkJCSIJCQlmb28gPSB0cnVlO1xuIiArCi0JCQkiCQl9IGNhdGNoIChmaW5hbCBFeGNlcHRpb24g
ZXhjZXB0aW9uKSB7XG4iICsKLQkJCSIJCQlyZXR1cm47XG4iICsKLQkJCSIJCX1cbiIgKwotCQkJ
Igl9XG4iICsKLQkJCSJ9XG4iCi0JCX0sICAiIik7CQotfQotLy8gaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM2NDAwOAotcHVibGljIHZvaWQgdGVzdDA1OCgp
IHsKLQl0aGlzLnJ1bkNvbmZvcm1UZXN0KAotCQluZXcgU3RyaW5nW10gewotCQkJIlguamF2YSIs
Ci0JCQkiaW1wb3J0IGphdmEuaW8uQnl0ZUFycmF5T3V0cHV0U3RyZWFtO1xuIiArCi0JCQkiaW1w
b3J0IGphdmEuaW8uRmlsZU91dHB1dFN0cmVhbTtcbiIgKwotCQkJImltcG9ydCBqYXZhLmlvLklP
RXhjZXB0aW9uO1xuIiArCi0JCQkiXG4iICsKLQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKLQkJ
CSJcbiIgKwotCQkJIiAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oZmluYWwgU3RyaW5nW10gYXJn
cykgdGhyb3dzIElPRXhjZXB0aW9uIHtcbiIgKwotCQkJIiAgICBieXRlW10gZGF0YTtcbiIgKwot
CQkJIiAgICB0cnkgKGZpbmFsIEJ5dGVBcnJheU91dHB1dFN0cmVhbSBvcyA9IG5ldyBCeXRlQXJy
YXlPdXRwdXRTdHJlYW0oKTtcbiIgKwotCQkJIiAgICAgICAgIGZpbmFsIEZpbGVPdXRwdXRTdHJl
YW0gb3V0ID0gbmV3IEZpbGVPdXRwdXRTdHJlYW0oXCJ0ZXN0LmRhdFwiKSkge1xuIiArCi0JCQki
ICAgICAgZGF0YSA9IG9zLnRvQnl0ZUFycmF5KCk7XG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQki
ICB9XG4iICsKLQkJCSJ9XG4iCi0JCX0sICAiIik7CQotfQotLy8gaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM2NzU2NiAtIEluIHRyeS13aXRoLXJlc291cmNl
cyBzdGF0ZW1lbnQgY2xvc2UoKSBtZXRob2Qgb2YgcmVzb3VyY2UgaXMgbm90IGNhbGxlZAotcHVi
bGljIHZvaWQgdGVzdDA1OSgpIHsKLQl0aGlzLnJ1bkNvbmZvcm1UZXN0KAotCQluZXcgU3RyaW5n
W10gewotCQkJIlguamF2YSIsCi0JCQkiaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247XG4iICsK
LQkJCSJcbiIgKwotCQkJInB1YmxpYyBjbGFzcyBYIGltcGxlbWVudHMgamF2YS5sYW5nLkF1dG9D
bG9zZWFibGUge1xuIiArCi0JCQkiICBzdGF0aWMgYm9vbGVhbiBpc09wZW4gPSB0cnVlO1xuIiAr
Ci0JCQkiICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihmaW5hbCBTdHJpbmdbXSBhcmdzKSB0aHJv
d3MgSU9FeGNlcHRpb24ge1xuIiArCi0JCQkiICAgIGZvbygpO1xuIiArCi0JCQkiICAgIFN5c3Rl
bS5vdXQucHJpbnRsbihpc09wZW4pO1xuIiArCi0JCQkiICB9XG4iICsKLQkJCSIgIHN0YXRpYyBi
b29sZWFuIGZvbygpIHtcbiIgKwotCQkJIiAgICB0cnkgKGZpbmFsIFggeCA9IG5ldyBYKCkpIHtc
biIgKwotCQkJIiAgICAgIHJldHVybiB4Lm51bSgpID49IDE7XG4iICsKLQkJCSIgICAgfVxuIiAr
Ci0JCQkiICB9XG4iICsKLQkJCSIgIGludCBudW0oKSB7IHJldHVybiAyOyB9XG4iICsKLQkJCSIg
IHB1YmxpYyB2b2lkIGNsb3NlKCkge1xuIiArCi0JCQkiICAgIGlzT3BlbiA9IGZhbHNlO1xuIiAr
Ci0JCQkiICB9XG4iICsKLQkJCSJ9XG4iCi0JCX0sICAKLQkJImZhbHNlIik7CQotfQotCi0vLyBo
dHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzY3NTY2IC0gSW4g
dHJ5LXdpdGgtcmVzb3VyY2VzIHN0YXRlbWVudCBjbG9zZSgpIG1ldGhvZCBvZiByZXNvdXJjZSBp
cyBub3QgY2FsbGVkCi1wdWJsaWMgdm9pZCB0ZXN0MDYwKCkgewotCXRoaXMucnVuQ29uZm9ybVRl
c3QoCi0JCW5ldyBTdHJpbmdbXSB7Ci0JCQkiWC5qYXZhIiwKLQkJCSJwdWJsaWMgY2xhc3MgWCBp
bXBsZW1lbnRzIEF1dG9DbG9zZWFibGUge1xuIiArCi0JCQkiCXN0YXRpYyBpbnQgbnVtID0gMTAg
O1xuIiArCi0JCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBbXSBhcmdzKSB0
aHJvd3MgRXhjZXB0aW9uIHsgXG4iICsKLQkJCSIgICAgCVN5c3RlbS5vdXQucHJpbnRsbihmb28o
MSkpO1xuIiArCi0JCQkiICAgIAlTeXN0ZW0ub3V0LnByaW50bG4oZm9vKDIpKTtcbiIgKwotCQkJ
IiAgICAJU3lzdGVtLm91dC5wcmludGxuKGZvbygzKSk7XG4iICsKLQkJCSIgICAgfVxuIiArCi0J
CQkiCXByaXZhdGUgc3RhdGljIGJvb2xlYW4gZm9vKGludCB3aGVyZSkgdGhyb3dzIEV4Y2VwdGlv
biB7XG4iICsKLQkJCSIJCWZpbmFsIGJvb2xlYW4gZ2V0T3V0ID0gdHJ1ZTtcbiIgKwotCQkJIiAg
ICAJU3lzdGVtLm91dC5wcmludGxuKFwiTWFpblwiKTtcbiIgKwotCQkJIiAgICAJdHJ5IChYIHgx
ID0gbmV3IFgoKTsgWCB4MiA9IG5ldyBYKCkpIHtcbiIgKwotCQkJIiAgICAJCWlmICh3aGVyZSA9
PSAxKSB7XG4iICsKLQkJCSIgICAgCQkJcmV0dXJuIHdoZXJlID09IDE7XG4iICsKLQkJCSIgICAg
CQl9XG4iICsKLQkJCSIgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oXCJPdXRlciBUcnlc
Iik7XG4iICsKLQkJCSIgICAgICAgICAgICB3aGlsZSAodHJ1ZSkge1xuIiArCi0JCQkiICAgICAg
ICAgICAgCXRyeSAoWSB5MSA9IG5ldyBZKCk7IFkgeTIgPSBuZXcgWSgpKSB7IFxuIiArCi0JCQki
ICAgICAgICAgICAgCQlpZiAod2hlcmUgPT0gMikge1xuIiArCi0JCQkiICAgICAgICAgICAgCQkJ
cmV0dXJuIHdoZXJlID09IDI7XG4iICsKLQkJCSIgICAgICAgICAgICAJCX0JCVxuIiArCi0JCQki
ICAgICAgICAgICAgCQlTeXN0ZW0ub3V0LnByaW50bG4oXCJNaWRkbGUgVHJ5XCIpO1xuIiArCi0J
CQkiICAgICAgICAgICAgCQl0cnkgKFogejEgPSBuZXcgWigpOyBaIHoyID0gbmV3IFooKSkge1xu
IiArCi0JCQkiICAgICAgICAgICAgCQkJU3lzdGVtLm91dC5wcmludGxuKFwiSW5uZXIgVHJ5XCIp
O1xuIiArCi0JCQkiICAgICAgICAgICAgCQkJaWYgKGdldE91dCkgXG4iICsKLQkJCSIgICAgICAg
ICAgICAJCQkJcmV0dXJuIG51bSA+PSAxMDtcbiIgKwotCQkJIiAgICAgICAgICAgIAkJCWVsc2Vc
biIgKwotCQkJIiAgICAgICAgICAgIAkJCQlicmVhazsgXG4iICsKLQkJCSIgICAgICAgICAgICAJ
CX1cbiIgKwotCQkJIiAgICAgICAgICAgIAl9XG4iICsKLQkJCSIgICAgICAgICAgICB9XG4iICsK
LQkJCSIgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oXCJPdXQgb2Ygd2hpbGVcIik7XG4i
ICsKLQkJCSIgICAgICAgIH1cbiIgKwotCQkJIgkJcmV0dXJuIGZhbHNlO1xuIiArCi0JCQkiCX1c
biIgKwotCQkJIiAgICBwdWJsaWMgWCgpIHtcbiIgKwotCQkJIiAgICAgICAgU3lzdGVtLm91dC5w
cmludGxuKFwiWDo6WFwiKTtcbiIgKwotCQkJIiAgICB9XG4iICsKLQkJCSIgICAgQE92ZXJyaWRl
XG4iICsKLQkJCSIJcHVibGljIHZvaWQgY2xvc2UoKSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIgKwot
CQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwiWDo6flhcIik7XG4iICsKLQkJCSIgICAg
fVxuIiArCi0JCQkifVxuIiArCi0JCQkiY2xhc3MgWSBpbXBsZW1lbnRzIEF1dG9DbG9zZWFibGUg
e1xuIiArCi0JCQkiICAgIHB1YmxpYyBZKCkge1xuIiArCi0JCQkiICAgICAgICBTeXN0ZW0ub3V0
LnByaW50bG4oXCJZOjpZXCIpO1xuIiArCi0JCQkiICAgIH1cbiIgKwotCQkJIiAgICBAT3ZlcnJp
ZGVcbiIgKwotCQkJIglwdWJsaWMgdm9pZCBjbG9zZSgpIHRocm93cyBFeGNlcHRpb24ge1xuIiAr
Ci0JCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oXCJZOjp+WVwiKTtcbiIgKwotCQkJIiAg
ICB9XG4iICsKLQkJCSJ9XG4iICsKLQkJCSJjbGFzcyBaIGltcGxlbWVudHMgQXV0b0Nsb3NlYWJs
ZSB7XG4iICsKLQkJCSIgICAgcHVibGljIFooKSB7XG4iICsKLQkJCSIgICAgICAgIFN5c3RlbS5v
dXQucHJpbnRsbihcIlo6OlpcIik7XG4iICsKLQkJCSIgICAgfVxuIiArCi0JCQkiICAgIEBPdmVy
cmlkZVxuIiArCi0JCQkiCXB1YmxpYyB2b2lkIGNsb3NlKCkgdGhyb3dzIEV4Y2VwdGlvbiB7XG4i
ICsKLQkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcIlo6On5aXCIpO1xuIiArCi0JCQki
ICAgIH1cbiIgKwotCQkJIn1cbiIKLQkJfSwgCi0JCSJNYWluXG4iICsgCi0JCSJYOjpYXG4iICsg
Ci0JCSJYOjpYXG4iICsgCi0JCSJYOjp+WFxuIiArIAotCQkiWDo6flhcbiIgKyAKLQkJInRydWVc
biIgKyAKLQkJIk1haW5cbiIgKyAKLQkJIlg6OlhcbiIgKyAKLQkJIlg6OlhcbiIgKyAKLQkJIk91
dGVyIFRyeVxuIiArIAotCQkiWTo6WVxuIiArIAotCQkiWTo6WVxuIiArIAotCQkiWTo6fllcbiIg
KyAKLQkJIlk6On5ZXG4iICsgCi0JCSJYOjp+WFxuIiArIAotCQkiWDo6flhcbiIgKyAKLQkJInRy
dWVcbiIgKyAKLQkJIk1haW5cbiIgKyAKLQkJIlg6OlhcbiIgKyAKLQkJIlg6OlhcbiIgKyAKLQkJ
Ik91dGVyIFRyeVxuIiArIAotCQkiWTo6WVxuIiArIAotCQkiWTo6WVxuIiArIAotCQkiTWlkZGxl
IFRyeVxuIiArIAotCQkiWjo6WlxuIiArIAotCQkiWjo6WlxuIiArIAotCQkiSW5uZXIgVHJ5XG4i
ICsgCi0JCSJaOjp+WlxuIiArIAotCQkiWjo6flpcbiIgKyAKLQkJIlk6On5ZXG4iICsgCi0JCSJZ
Ojp+WVxuIiArIAotCQkiWDo6flhcbiIgKyAKLQkJIlg6On5YXG4iICsgCi0JCSJ0cnVlIik7Ci19
Ci0KIHB1YmxpYyBzdGF0aWMgQ2xhc3MgdGVzdENsYXNzKCkgewogCXJldHVybiBUcnlXaXRoUmVz
b3VyY2VzU3RhdGVtZW50VGVzdC5jbGFzczsKIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQWxs
b2NhdGlvbkV4cHJlc3Npb24uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQWxsb2NhdGlvbkV4cHJlc3Npb24u
amF2YQppbmRleCBlODExZWE5Li5mZDY0ZmQ5IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0FsbG9j
YXRpb25FeHByZXNzaW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9BbGxvY2F0aW9uRXhwcmVzc2lv
bi5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHly
aWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHly
aWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCBy
aWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlh
bHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2Ug
UHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRp
b24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTEyLDYgKzEyLDcgQEAKICAqICAgICAJCQkJCQli
dWcgMzE5MjAxIC0gW251bGxdIG5vIHdhcm5pbmcgd2hlbiB1bmJveGluZyBTaW5nbGVOYW1lUmVm
ZXJlbmNlIGNhdXNlcyBOUEUKICAqICAgICAJCQkJCQlidWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdh
cm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCiAgKiAJCQkJCQkJYnVnIDE4NjM0
MiAtIFtjb21waWxlcl1bbnVsbF0gVXNpbmcgYW5ub3RhdGlvbnMgZm9yIG51bGwgY2hlY2tpbmcK
KyAqCQkJCQkJCWJ1ZyAzNTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVz
b3VyY2UgbGVhayB3YXJuaW5ncwogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3Q7CiAKQEAgLTM3LDI1ICszOCwzNSBA
QCBwdWJsaWMgY2xhc3MgQWxsb2NhdGlvbkV4cHJlc3Npb24gZXh0ZW5kcyBFeHByZXNzaW9uIGlt
cGxlbWVudHMgSW52b2NhdGlvblNpdGUgewogCXByb3RlY3RlZCBUeXBlQmluZGluZyB0eXBlRXhw
ZWN0ZWQ7CSAgLy8gZm9yIDw+IGluZmVyZW5jZQogCXB1YmxpYyBib29sZWFuIGluZmVycmVkUmV0
dXJuVHlwZTsKIAorCXB1YmxpYyBGYWtlZFRyYWNraW5nVmFyaWFibGUgY2xvc2VUcmFja2VyOwkv
LyB3aGVuIGFsbG9jYXRpb24gYSBDbG9zZWFibGUgc3RvcmUgYSBwcmUtbGltaW5hcnkgdHJhY2tp
bmcgdmFyaWFibGUgaGVyZQorCiBwdWJsaWMgRmxvd0luZm8gYW5hbHlzZUNvZGUoQmxvY2tTY29w
ZSBjdXJyZW50U2NvcGUsIEZsb3dDb250ZXh0IGZsb3dDb250ZXh0LCBGbG93SW5mbyBmbG93SW5m
bykgewogCS8vIGNoZWNrIGNhcHR1cmVkIHZhcmlhYmxlcyBhcmUgaW5pdGlhbGl6ZWQgaW4gY3Vy
cmVudCBjb250ZXh0ICgyNjEzNCkKIAljaGVja0NhcHR1cmVkTG9jYWxJbml0aWFsaXphdGlvbklm
TmVjZXNzYXJ5KChSZWZlcmVuY2VCaW5kaW5nKXRoaXMuYmluZGluZy5kZWNsYXJpbmdDbGFzcy5l
cmFzdXJlKCksIGN1cnJlbnRTY29wZSwgZmxvd0luZm8pOwogCiAJLy8gcHJvY2VzcyBhcmd1bWVu
dHMKIAlpZiAodGhpcy5hcmd1bWVudHMgIT0gbnVsbCkgeworCQlib29sZWFuIGhhc1Jlc291cmNl
V3JhcHBlclR5cGUgPSB0aGlzLnJlc29sdmVkVHlwZSBpbnN0YW5jZW9mIFJlZmVyZW5jZUJpbmRp
bmcgCisJCQkJJiYgKChSZWZlcmVuY2VCaW5kaW5nKXRoaXMucmVzb2x2ZWRUeXBlKS5oYXNUeXBl
Qml0KFR5cGVJZHMuQml0V3JhcHBlckNsb3NlYWJsZSk7CiAJCWZvciAoaW50IGkgPSAwLCBjb3Vu
dCA9IHRoaXMuYXJndW1lbnRzLmxlbmd0aDsgaSA8IGNvdW50OyBpKyspIHsKLQkJCS8vIGlmIGFy
Z3VtZW50IGlzIGFuIEF1dG9DbG9zZWFibGUgaW5zZXJ0IGluZm8gdGhhdCBpdCAqbWF5KiBiZSBj
bG9zZWQgKGJ5IHRoZSB0YXJnZXQgbWV0aG9kLCBpLmUuKQotCQkJZmxvd0luZm8gPSBGYWtlZFRy
YWNraW5nVmFyaWFibGUubWFya1Bhc3NlZFRvT3V0c2lkZShjdXJyZW50U2NvcGUsIHRoaXMuYXJn
dW1lbnRzW2ldLCBmbG93SW5mbyk7CiAJCQlmbG93SW5mbyA9CiAJCQkJdGhpcy5hcmd1bWVudHNb
aV0KIAkJCQkJLmFuYWx5c2VDb2RlKGN1cnJlbnRTY29wZSwgZmxvd0NvbnRleHQsIGZsb3dJbmZv
KQogCQkJCQkudW5jb25kaXRpb25hbEluaXRzKCk7CisJCQkvLyBpZiBhcmd1bWVudCBpcyBhbiBB
dXRvQ2xvc2VhYmxlIGluc2VydCBpbmZvIHRoYXQgaXQgKm1heSogYmUgY2xvc2VkIChieSB0aGUg
dGFyZ2V0IG1ldGhvZCwgaS5lLikKKwkJCWlmICghaGFzUmVzb3VyY2VXcmFwcGVyVHlwZSkgeyAv
LyBhbGxvY2F0aW9uIG9mIHdyYXBwZWQgY2xvc2VhYmxlcyBpcyBhbmFseXplZCBzcGVjaWFsbHkK
KwkJCQlmbG93SW5mbyA9IEZha2VkVHJhY2tpbmdWYXJpYWJsZS5tYXJrUGFzc2VkVG9PdXRzaWRl
KGN1cnJlbnRTY29wZSwgdGhpcy5hcmd1bWVudHNbaV0sIGZsb3dJbmZvLCBmYWxzZSk7CisJCQl9
CiAJCQlpZiAoKHRoaXMuYXJndW1lbnRzW2ldLmltcGxpY2l0Q29udmVyc2lvbiAmIFR5cGVJZHMu
VU5CT1hJTkcpICE9IDApIHsKIAkJCQl0aGlzLmFyZ3VtZW50c1tpXS5jaGVja05QRShjdXJyZW50
U2NvcGUsIGZsb3dDb250ZXh0LCBmbG93SW5mbyk7CiAJCQl9CiAJCX0KIAkJYW5hbHlzZUFyZ3Vt
ZW50cyhjdXJyZW50U2NvcGUsIGZsb3dDb250ZXh0LCBmbG93SW5mbywgdGhpcy5iaW5kaW5nLCB0
aGlzLmFyZ3VtZW50cyk7CiAJfQorCisJaWYgKEZha2VkVHJhY2tpbmdWYXJpYWJsZS5pc0FueUNs
b3NlYWJsZSh0aGlzLnJlc29sdmVkVHlwZSkpCisJCUZha2VkVHJhY2tpbmdWYXJpYWJsZS5hbmFs
eXNlQ2xvc2VhYmxlQWxsb2NhdGlvbihjdXJyZW50U2NvcGUsIGZsb3dJbmZvLCB0aGlzKTsKKwog
CS8vIHJlY29yZCBzb21lIGRlcGVuZGVuY3kgaW5mb3JtYXRpb24gZm9yIGV4Y2VwdGlvbiB0eXBl
cwogCVJlZmVyZW5jZUJpbmRpbmdbXSB0aHJvd25FeGNlcHRpb25zOwogCWlmICgoKHRocm93bkV4
Y2VwdGlvbnMgPSB0aGlzLmJpbmRpbmcudGhyb3duRXhjZXB0aW9ucykubGVuZ3RoKSAhPSAwKSB7
CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Fzc2lnbm1lbnQuamF2YSBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQXNz
aWdubWVudC5qYXZhCmluZGV4IDk3MGZjMjQuLmVhMWFmN2IgMTAwNjQ0Ci0tLSBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9h
c3QvQXNzaWdubWVudC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvQXNzaWdubWVudC5qYXZhCkBAIC0x
LDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAw
MCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAw
MCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2
ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBt
YWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vu
c2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBh
dmFpbGFibGUgYXQKQEAgLTE0LDYgKzE0LDcgQEAKICAqICAgICAJCQkJCQlidWcgMzM1MDkzIC0g
W2NvbXBpbGVyXVtudWxsXSBtaW5pbWFsIGhvb2sgZm9yIGZ1dHVyZSBudWxsIGFubm90YXRpb24g
c3VwcG9ydAogICogICAgIAkJCQkJCWJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3Ig
bWlzc2luZyB0cnktd2l0aC1yZXNvdXJjZXMKICAqCQkJCQkJCWJ1ZyAxODYzNDIgLSBbY29tcGls
ZXJdW251bGxdIFVzaW5nIGFubm90YXRpb25zIGZvciBudWxsIGNoZWNraW5nCisgKgkJCQkJCQli
dWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsg
d2FybmluZ3MKICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0OwogCkBAIC00NiwxOSArNDcsMjcgQEAgcHVibGljIEZs
b3dJbmZvIGFuYWx5c2VDb2RlKEJsb2NrU2NvcGUgY3VycmVudFNjb3BlLCBGbG93Q29udGV4dCBm
bG93Q29udGV4dCwgRmwKIAlpZiAoKHRoaXMuZXhwcmVzc2lvbi5pbXBsaWNpdENvbnZlcnNpb24g
JiBUeXBlSWRzLlVOQk9YSU5HKSAhPSAwKSB7CiAJCXRoaXMuZXhwcmVzc2lvbi5jaGVja05QRShj
dXJyZW50U2NvcGUsIGZsb3dDb250ZXh0LCBmbG93SW5mbyk7CiAJfQorCQorCUZsb3dJbmZvIHBy
ZUluaXRJbmZvID0gbnVsbDsKKwlib29sZWFuIHNob3VsZEFuYWx5c2VSZXNvdXJjZSA9IGxvY2Fs
ICE9IG51bGwgCisJCQkmJiBmbG93SW5mby5yZWFjaE1vZGUoKSA9PSBGbG93SW5mby5SRUFDSEFC
TEUgCisJCQkmJiAoRmFrZWRUcmFja2luZ1ZhcmlhYmxlLmlzQW55Q2xvc2VhYmxlKHRoaXMuZXhw
cmVzc2lvbi5yZXNvbHZlZFR5cGUpCisJCQkJCXx8IHRoaXMuZXhwcmVzc2lvbi5yZXNvbHZlZFR5
cGUgPT0gVHlwZUJpbmRpbmcuTlVMTCk7CisJaWYgKHNob3VsZEFuYWx5c2VSZXNvdXJjZSkgewor
CQlwcmVJbml0SW5mbyA9IGZsb3dJbmZvLnVuY29uZGl0aW9uYWxDb3B5KCk7CisJCS8vIGFuYWx5
c2lzIG9mIHJlc291cmNlIGxlYWtzIG5lZWRzIGFkZGl0aW9uYWwgY29udGV4dCB3aGlsZSBhbmFs
eXppbmcgdGhlIFJIUzoKKwkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlLnByZUNvbm5lY3RUcmFja2Vy
QWNyb3NzQXNzaWdubWVudCh0aGlzLCBsb2NhbCwgdGhpcy5leHByZXNzaW9uKTsKKwl9CisJCiAJ
Zmxvd0luZm8gPSAoKFJlZmVyZW5jZSkgdGhpcy5saHMpCiAJCS5hbmFseXNlQXNzaWdubWVudChj
dXJyZW50U2NvcGUsIGZsb3dDb250ZXh0LCBmbG93SW5mbywgdGhpcywgZmFsc2UpCiAJCS51bmNv
bmRpdGlvbmFsSW5pdHMoKTsKLQlpZiAobG9jYWwgIT0gbnVsbCkgewotCQlMb2NhbFZhcmlhYmxl
QmluZGluZyBwcmV2aW91c1RyYWNrZXJCaW5kaW5nID0gbnVsbDsKLQkJaWYgKGxvY2FsLmNsb3Nl
VHJhY2tlciAhPSBudWxsKSB7Ci0JCQkvLyBBc3NpZ25pbmcgdG8gYSB2YXJpYWJsZSBhbHJlYWR5
IGhvbGRpbmcgYW4gQXV0b0Nsb3NlYWJsZSwgaGFzIGl0IGJlZW4gY2xvc2VkIGJlZm9yZT8KLQkJ
CXByZXZpb3VzVHJhY2tlckJpbmRpbmcgPSBsb2NhbC5jbG9zZVRyYWNrZXIuYmluZGluZzsKLQkJ
CWlmICghZmxvd0luZm8uaXNEZWZpbml0ZWx5TnVsbChsb2NhbCkpIC8vIG9ubHkgaWYgcHJldmlv
dXMgdmFsdWUgbWF5IGJlIG5vbi1udWxsCi0JCQkJbG9jYWwuY2xvc2VUcmFja2VyLnJlY29yZEVy
cm9yTG9jYXRpb24odGhpcywgZmxvd0luZm8ubnVsbFN0YXR1cyhwcmV2aW91c1RyYWNrZXJCaW5k
aW5nKSk7Ci0JCX0KLQkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlLmhhbmRsZVJlc291cmNlQXNzaWdu
bWVudChmbG93SW5mbywgdGhpcywgdGhpcy5leHByZXNzaW9uLCBsb2NhbCwgcHJldmlvdXNUcmFj
a2VyQmluZGluZyk7Ci0JfQorCisJaWYgKHNob3VsZEFuYWx5c2VSZXNvdXJjZSkKKwkJRmFrZWRU
cmFja2luZ1ZhcmlhYmxlLmhhbmRsZVJlc291cmNlQXNzaWdubWVudChjdXJyZW50U2NvcGUsIHBy
ZUluaXRJbmZvLCBmbG93SW5mbywgdGhpcywgdGhpcy5leHByZXNzaW9uLCBsb2NhbCk7CisJZWxz
ZQorCQlGYWtlZFRyYWNraW5nVmFyaWFibGUuY2xlYW5VcEFmdGVyQXNzaWdubWVudChjdXJyZW50
U2NvcGUsIHRoaXMubGhzLmJpdHMsIHRoaXMuZXhwcmVzc2lvbik7CisKIAlpbnQgbnVsbFN0YXR1
cyA9IHRoaXMuZXhwcmVzc2lvbi5udWxsU3RhdHVzKGZsb3dJbmZvKTsKIAlpZiAobG9jYWwgIT0g
bnVsbCAmJiAobG9jYWwudHlwZS50YWdCaXRzICYgVGFnQml0cy5Jc0Jhc2VUeXBlKSA9PSAwKSB7
CiAJCWlmIChudWxsU3RhdHVzID09IEZsb3dJbmZvLk5VTEwpIHsKZGlmZiAtLWdpdCBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9hc3QvRmFrZWRUcmFja2luZ1ZhcmlhYmxlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Zha2VkVHJhY2tp
bmdWYXJpYWJsZS5qYXZhCmluZGV4IGVlMTMwNDcuLjVlY2UzYjcgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9hc3QvRmFrZWRUcmFja2luZ1ZhcmlhYmxlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9GYWtlZFRy
YWNraW5nVmFyaWFibGUuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMTEgR0sgU29mdHdhcmUgQUcgYW5kIG90aGVycy4KKyAq
IENvcHlyaWdodCAoYykgMjAxMSwgMjAxMiBHSyBTb2Z0d2FyZSBBRyBhbmQgb3RoZXJzLgogICog
QWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1h
dGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNs
aXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3Ry
aWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtMTQsOCArMTQsOCBAQCBpbXBvcnQgamF2
YS51dGlsLkhhc2hNYXA7CiBpbXBvcnQgamF2YS51dGlsLkl0ZXJhdG9yOwogaW1wb3J0IGphdmEu
dXRpbC5NYXA7CiBpbXBvcnQgamF2YS51dGlsLk1hcC5FbnRyeTsKK2ltcG9ydCBqYXZhLnV0aWwu
U2V0OwogCi1pbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIuQ2hhck9wZXJhdGlv
bjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuY29kZWdlbi5Db2Rl
U3RyZWFtOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5mbG93LkZs
b3dDb250ZXh0OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5mbG93
LkZsb3dJbmZvOwpAQCAtNDIsMjYgKzQyLDQyIEBAIHB1YmxpYyBjbGFzcyBGYWtlZFRyYWNraW5n
VmFyaWFibGUgZXh0ZW5kcyBMb2NhbERlY2xhcmF0aW9uIHsKIAogCS8vIGEgY2FsbCB0byBjbG9z
ZSgpIHdhcyBzZWVuIGF0IGxlYXN0IG9uIG9uZSBwYXRoOgogCXByaXZhdGUgc3RhdGljIGZpbmFs
IGludCBDTE9TRV9TRUVOID0gMTsKLQkvLyB0aGUgcmVzb3VyY2Ugd2FzIHBhc3NlZCB0byBvdXRz
aWRlIGNvZGUgKGFyZyBpbiBtZXRob2QvY3RvciBjYWxsIG9yIGFzIGEgcmV0dXJuIHZhbHVlIGZy
b20gdGhpcyBtZXRob2QpOgotCXByaXZhdGUgc3RhdGljIGZpbmFsIGludCBQQVNTRURfVE9fT1VU
U0lERSA9IDI7CisJLy8gdGhlIHJlc291cmNlIGlzIHNoYXJlZCB3aXRoIG91dHNpZGUgY29kZSBl
aXRoZXIgYnkKKwkvLyAtIHBhc3NpbmcgYXMgYW4gYXJnIGluIGEgbWV0aG9kIGNhbGwgb3IKKwkv
LyAtIG9idGFpbmluZyB0aGlzIGZyb20gYSBtZXRob2QgY2FsbCBvciBhcnJheSByZWZlcmVuY2UK
KwkvLyBJbnRlcnByZXQgdGhhdCB3ZSBtYXkgb3IgbWF5IG5vdCBiZSByZXNwb25zaWJsZSBmb3Ig
Y2xvc2luZworCXByaXZhdGUgc3RhdGljIGZpbmFsIGludCBTSEFSRURfV0lUSF9PVVRTSURFID0g
MjsKKwkvLyB0aGUgcmVzb3VyY2UgaXMgbGlrZWx5IG93bmVkIGJ5IG91dHNpZGUgY29kZSAob3du
ZXIgaGFzIHJlc3BvbnNpYmlsaXR5IHRvIGNsb3NlKTogCisJLy8gLSBvYnRhaW5lZCBhcyBhcmd1
bWVudCBvZiB0aGUgY3VycmVudCBtZXRob2QsIG9yIHZpYSBhIGZpZWxkIHJlYWQKKwkvLyAtIHJl
dHVybmVkIGFzIHRoZSByZXN1bHQgb2YgdGhpcyBtZXRob2QgCisJcHJpdmF0ZSBzdGF0aWMgZmlu
YWwgaW50IE9XTkVEX0JZX09VVFNJREUgPSA0OwogCS8vIElmIGNsb3NlKCkgaXMgaW52b2tlZCBm
cm9tIGEgbmVzdGVkIG1ldGhvZCAoaW5zaWRlIGEgbG9jYWwgdHlwZSkgcmVwb3J0IHJlbWFpbmlu
ZyBwcm9ibGVtcyBvbmx5IGFzIHBvdGVudGlhbDoKLQlwcml2YXRlIHN0YXRpYyBmaW5hbCBpbnQg
Q0xPU0VEX0lOX05FU1RFRF9NRVRIT0QgPSA0OwotCS8vIGEgbG9jYXRpb24gaW5kZXBlbmRlbnQg
aXNzdWUgaGFzIGJlZW4gcmVwb3J0ZWQgYWxyZWFkeSBhZ2FpbnN0IHRoaXMgcmVzb3VyY2U6Ci0J
cHJpdmF0ZSBzdGF0aWMgZmluYWwgaW50IFJFUE9SVEVEID0gODsKLQkKKwlwcml2YXRlIHN0YXRp
YyBmaW5hbCBpbnQgQ0xPU0VEX0lOX05FU1RFRF9NRVRIT0QgPSA4OworCS8vIGV4cGxpY2l0IGNs
b3NpbmcgaGFzIGJlZW4gcmVwb3J0ZWQgYWxyZWFkeSBhZ2FpbnN0IHRoaXMgcmVzb3VyY2U6CisJ
cHJpdmF0ZSBzdGF0aWMgZmluYWwgaW50IFJFUE9SVEVEX0VYUExJQ0lUX0NMT1NFID0gMTY7CisJ
Ly8gYSBsb2NhdGlvbiBpbmRlcGVuZGVudCBwb3RlbnRpYWwgcHJvYmxlbSBoYXMgYmVlbiByZXBv
cnRlZCBhZ2FpbnN0IHRoaXMgcmVzb3VyY2U6CisJcHJpdmF0ZSBzdGF0aWMgZmluYWwgaW50IFJF
UE9SVEVEX1BPVEVOVElBTF9MRUFLID0gMzI7CisJLy8gYSBsb2NhdGlvbiBpbmRlcGVuZGVudCBk
ZWZpbml0aXZlIHByb2JsZW0gaGFzIGJlZW4gcmVwb3J0ZWQgYWdhaW5zdCB0aGlzIHJlc291cmNl
OgorCXByaXZhdGUgc3RhdGljIGZpbmFsIGludCBSRVBPUlRFRF9ERUZJTklUSVZFX0xFQUsgPSA2
NDsKKwogCS8qKgotCSAqIEJpdHNldCBvZiB7QGxpbmsgI0NMT1NFX1NFRU59LCB7QGxpbmsgI1BB
U1NFRF9UT19PVVRTSURFfSwge0BsaW5rICNDTE9TRURfSU5fTkVTVEVEX01FVEhPRH0gYW5kIHtA
bGluayAjUkVQT1JURUR9LgorCSAqIEJpdHNldCBvZiB7QGxpbmsgI0NMT1NFX1NFRU59LCB7QGxp
bmsgI1NIQVJFRF9XSVRIX09VVFNJREV9LCB7QGxpbmsgI09XTkVEX0JZX09VVFNJREV9LCB7QGxp
bmsgI0NMT1NFRF9JTl9ORVNURURfTUVUSE9EfSwge0BsaW5rICNSRVBPUlRFRF9FWFBMSUNJVF9D
TE9TRX0sIHtAbGluayAjUkVQT1JURURfUE9URU5USUFMX0xFQUt9IGFuZCB7QGxpbmsgI1JFUE9S
VEVEX0RFRklOSVRJVkVfTEVBS30uCiAJICovCiAJcHJpdmF0ZSBpbnQgZ2xvYmFsQ2xvc2luZ1N0
YXRlID0gMDsKIAotCU1ldGhvZFNjb3BlIG1ldGhvZFNjb3BlOyAvLyBkZXNpZ25hdGVzIHRoZSBt
ZXRob2QgZGVjbGFyaW5nIHRoaXMgdmFyaWFibGUKLQkKLQlwdWJsaWMgTG9jYWxWYXJpYWJsZUJp
bmRpbmcgb3JpZ2luYWxCaW5kaW5nOyAvLyB0aGUgcmVhbCBsb2NhbCBiZWluZyB0cmFja2VkCisJ
cHVibGljIExvY2FsVmFyaWFibGVCaW5kaW5nIG9yaWdpbmFsQmluZGluZzsgLy8gdGhlIHJlYWwg
bG9jYWwgYmVpbmcgdHJhY2tlZCwgY2FuIGJlIG51bGwgZm9yIHByZWxpbWluYXJ5IHRyYWNrIHZh
cnMgZm9yIGFsbG9jYXRpb24gZXhwcmVzc2lvbnMKIAkKLQlIYXNoTWFwIHJlY29yZGVkTG9jYXRp
b25zOyAvLyBpbml0aWFsbHkgbnVsbCwgQVNUTm9kZSAtPiBJbnRlZ2VyIAorCXB1YmxpYyBGYWtl
ZFRyYWNraW5nVmFyaWFibGUgaW5uZXJUcmFja2VyOyAvLyBjaGFpbmVkIHRyYWNraW5nIHZhcmlh
YmxlIG9mIGEgY2hhaW5lZCAod3JhcHBlZCkgcmVzb3VyY2UKKwlwdWJsaWMgRmFrZWRUcmFja2lu
Z1ZhcmlhYmxlIG91dGVyVHJhY2tlcjsgLy8gaW52ZXJzZSBvZiAnaW5uZXJUcmFja2VyJworCisJ
TWV0aG9kU2NvcGUgbWV0aG9kU2NvcGU7IC8vIGRlc2lnbmF0ZXMgdGhlIG1ldGhvZCBkZWNsYXJp
bmcgdGhpcyB2YXJpYWJsZQorCisJcHJpdmF0ZSBIYXNoTWFwIHJlY29yZGVkTG9jYXRpb25zOyAv
LyBpbml0aWFsbHkgbnVsbCwgQVNUTm9kZSAtPiBJbnRlZ2VyCiAKKwkvLyB0ZW1wb3Jhcnkgc3Rv
cmFnZSB3aGlsZSBhbmFseXppbmcgInJlcyA9IG5ldyBSZXMoKTsiOgorCXByaXZhdGUgQVNUTm9k
ZSBjdXJyZW50QXNzaWdubWVudDsgLy8gdGVtcG9yYXJpbHkgc3RvcmUgdGhlIGFzc2lnbm1lbnQg
YXMgdGhlIGxvY2F0aW9uIGZvciBlcnJvciByZXBvcnRpbmcKIAotCXB1YmxpYyBGYWtlZFRyYWNr
aW5nVmFyaWFibGUoTG9jYWxWYXJpYWJsZUJpbmRpbmcgb3JpZ2luYWwsIFN0YXRlbWVudCBsb2Nh
dGlvbikgeworCXB1YmxpYyBGYWtlZFRyYWNraW5nVmFyaWFibGUoTG9jYWxWYXJpYWJsZUJpbmRp
bmcgb3JpZ2luYWwsIEFTVE5vZGUgbG9jYXRpb24pIHsKIAkJc3VwZXIob3JpZ2luYWwubmFtZSwg
bG9jYXRpb24uc291cmNlU3RhcnQsIGxvY2F0aW9uLnNvdXJjZUVuZCk7CiAJCXRoaXMudHlwZSA9
IG5ldyBTaW5nbGVUeXBlUmVmZXJlbmNlKAogCQkJCVR5cGVDb25zdGFudHMuT0JKRUNULApAQCAt
NzAsNiArODYsMTcgQEAgcHVibGljIGNsYXNzIEZha2VkVHJhY2tpbmdWYXJpYWJsZSBleHRlbmRz
IExvY2FsRGVjbGFyYXRpb24gewogCQl0aGlzLm9yaWdpbmFsQmluZGluZyA9IG9yaWdpbmFsOwog
CQlyZXNvbHZlKG9yaWdpbmFsLmRlY2xhcmluZ1Njb3BlKTsKIAl9CisKKwkvKiBDcmVhdGUgYW4g
dW5hc3NpZ25lZCB0cmFja2luZyB2YXJpYWJsZSB3aGlsZSBhbmFseXppbmcgYW4gYWxsb2NhdGlv
biBleHByZXNzaW9uOiAqLworCXByaXZhdGUgRmFrZWRUcmFja2luZ1ZhcmlhYmxlKEJsb2NrU2Nv
cGUgc2NvcGUsIEFTVE5vZGUgbG9jYXRpb24pIHsKKwkJc3VwZXIoIjx1bmFzc2lnbmVkIENsb3Nl
YWJsZSB2YWx1ZT4iLnRvQ2hhckFycmF5KCksIGxvY2F0aW9uLnNvdXJjZVN0YXJ0LCBsb2NhdGlv
bi5zb3VyY2VFbmQpOyAvLyROT04tTkxTLTEkCisJCXRoaXMudHlwZSA9IG5ldyBTaW5nbGVUeXBl
UmVmZXJlbmNlKAorCQkJCVR5cGVDb25zdGFudHMuT0JKRUNULAorCQkJCSgobG9uZyl0aGlzLnNv
dXJjZVN0YXJ0IDw8MzIpK3RoaXMuc291cmNlRW5kKTsKKwkJdGhpcy5tZXRob2RTY29wZSA9IHNj
b3BlLm1ldGhvZFNjb3BlKCk7CisJCXRoaXMub3JpZ2luYWxCaW5kaW5nID0gbnVsbDsKKwkJcmVz
b2x2ZShzY29wZSk7CisJfQogCQogCXB1YmxpYyB2b2lkIGdlbmVyYXRlQ29kZShCbG9ja1Njb3Bl
IGN1cnJlbnRTY29wZSwgQ29kZVN0cmVhbSBjb2RlU3RyZWFtKQogCXsgLyogTk9QIC0gdGhpcyB2
YXJpYWJsZSBpcyBjb21wbGV0ZWx5IGR1bW15LCBpZS4gZm9yIGFuYWx5c2lzIG9ubHkuICovIH0K
QEAgLTgxLDYgKzEwOCw3IEBAIHB1YmxpYyBjbGFzcyBGYWtlZFRyYWNraW5nVmFyaWFibGUgZXh0
ZW5kcyBMb2NhbERlY2xhcmF0aW9uIHsKIAkJCQlzY29wZS5nZXRKYXZhTGFuZ09iamVjdCgpLCAg
Ly8gZHVtbXksIGp1c3QgbmVlZHMgdG8gYmUgYSByZWZlcmVuY2UgdHlwZQogCQkJCTAsCiAJCQkJ
ZmFsc2UpOworCQl0aGlzLmJpbmRpbmcuZGVjbGFyaW5nU2NvcGUgPSBzY29wZTsKIAkJdGhpcy5i
aW5kaW5nLnNldENvbnN0YW50KENvbnN0YW50Lk5vdEFDb25zdGFudCk7CiAJCXRoaXMuYmluZGlu
Zy51c2VGbGFnID0gTG9jYWxWYXJpYWJsZUJpbmRpbmcuVVNFRDsKIAkJLy8gdXNlIGEgZnJlZSBz
bG90IHdpdGhvdXQgYXNzaWduaW5nIGl0OgpAQCAtODgsODYgKzExNiw0MzUgQEAgcHVibGljIGNs
YXNzIEZha2VkVHJhY2tpbmdWYXJpYWJsZSBleHRlbmRzIExvY2FsRGVjbGFyYXRpb24gewogCX0K
IAogCS8qKgotCSAqIElmIGV4cHJlc3Npb24gcmVzb2x2ZXMgdG8gYSBsb2NhbCB2YXJpYWJsZSBi
aW5kaW5nIG9mIHR5cGUgQXV0b0Nsb3NlYWJsZSwKLQkgKiBhbnN3ZXIgdGhlIHZhcmlhYmxlIHRo
YXQgdHJhY2tzIGNsb3Npbmcgb2YgdGhhdCBsb2NhbCwgY3JlYXRpbmcgaXQgaWYgbmVlZGVkLgor
CSAqIElmIGV4cHJlc3Npb24gcmVzb2x2ZXMgdG8gYSB2YWx1ZSBvZiB0eXBlIEF1dG9DbG9zZWFi
bGUgYW5zd2VyIHRoZSB2YXJpYWJsZSB0aGF0IHRyYWNrcyBjbG9zaW5nIG9mIHRoYXQgbG9jYWwu
CisJICogQ292ZXJzIHR3byBjYXNlczoKKwkgKiA8dWw+CisJICogPGxpPnZhbHVlIGlzIGEgbG9j
YWwgdmFyaWFibGUgcmVmZXJlbmNlLCBjcmVhdGUgdHJhY2tpbmcgdmFyaWFibGUgaXQgaWYgbmVl
ZGVkLgorCSAqIDxsaT52YWx1ZSBpcyBhbiBhbGxvY2F0aW9uIGV4cHJlc3Npb24sIHJldHVybiBh
IHByZWxpbWluYXJ5IHRyYWNraW5nIHZhcmlhYmxlIGlmIHNldC4KKwkgKiA8L3VsPgogCSAqIEBw
YXJhbSBleHByZXNzaW9uCiAJICogQHJldHVybiBhIG5ldyB7QGxpbmsgRmFrZWRUcmFja2luZ1Zh
cmlhYmxlfSBvciBudWxsLgogCSAqLwogCXB1YmxpYyBzdGF0aWMgRmFrZWRUcmFja2luZ1Zhcmlh
YmxlIGdldENsb3NlVHJhY2tpbmdWYXJpYWJsZShFeHByZXNzaW9uIGV4cHJlc3Npb24pIHsKKwkJ
d2hpbGUgKHRydWUpIHsKKwkJCWlmIChleHByZXNzaW9uIGluc3RhbmNlb2YgQ2FzdEV4cHJlc3Np
b24pCisJCQkJZXhwcmVzc2lvbiA9ICgoQ2FzdEV4cHJlc3Npb24pIGV4cHJlc3Npb24pLmV4cHJl
c3Npb247CisJCQllbHNlIGlmIChleHByZXNzaW9uIGluc3RhbmNlb2YgQXNzaWdubWVudCkKKwkJ
CQlleHByZXNzaW9uID0gKChBc3NpZ25tZW50KSBleHByZXNzaW9uKS5leHByZXNzaW9uOworCQkJ
ZWxzZQorCQkJCWJyZWFrOworCQl9CiAJCWlmIChleHByZXNzaW9uIGluc3RhbmNlb2YgU2luZ2xl
TmFtZVJlZmVyZW5jZSkgewogCQkJU2luZ2xlTmFtZVJlZmVyZW5jZSBuYW1lID0gKFNpbmdsZU5h
bWVSZWZlcmVuY2UpIGV4cHJlc3Npb247CiAJCQlpZiAobmFtZS5iaW5kaW5nIGluc3RhbmNlb2Yg
TG9jYWxWYXJpYWJsZUJpbmRpbmcpIHsKIAkJCQlMb2NhbFZhcmlhYmxlQmluZGluZyBsb2NhbCA9
IChMb2NhbFZhcmlhYmxlQmluZGluZyluYW1lLmJpbmRpbmc7CiAJCQkJaWYgKGxvY2FsLmNsb3Nl
VHJhY2tlciAhPSBudWxsKQogCQkJCQlyZXR1cm4gbG9jYWwuY2xvc2VUcmFja2VyOwotCQkJCWlm
IChsb2NhbC5pc1BhcmFtZXRlcigpIHx8ICFpc0F1dG9DbG9zZWFibGUoZXhwcmVzc2lvbi5yZXNv
bHZlZFR5cGUpKQorCQkJCWlmICghaXNBbnlDbG9zZWFibGUoZXhwcmVzc2lvbi5yZXNvbHZlZFR5
cGUpKQogCQkJCQlyZXR1cm4gbnVsbDsKIAkJCQkvLyB0cmFja2luZyB2YXIgZG9lc24ndCB5ZXQg
ZXhpc3QuIFRoaXMgaGFwcGVucyBpbiBmaW5hbGx5IGJsb2NrCiAJCQkJLy8gd2hpY2ggaXMgYW5h
bHl6ZWQgYmVmb3JlIHRoZSBjb3JyZXNwb25kaW5nIHRyeSBibG9jawogCQkJCVN0YXRlbWVudCBs
b2NhdGlvbiA9IGxvY2FsLmRlY2xhcmF0aW9uOwotCQkJCXJldHVybiBsb2NhbC5jbG9zZVRyYWNr
ZXIgPSBuZXcgRmFrZWRUcmFja2luZ1ZhcmlhYmxlKGxvY2FsLCBsb2NhdGlvbik7CisJCQkJbG9j
YWwuY2xvc2VUcmFja2VyID0gbmV3IEZha2VkVHJhY2tpbmdWYXJpYWJsZShsb2NhbCwgbG9jYXRp
b24pOworCQkJCWlmIChsb2NhbC5pc1BhcmFtZXRlcigpKSB7CisJCQkJCWxvY2FsLmNsb3NlVHJh
Y2tlci5nbG9iYWxDbG9zaW5nU3RhdGUgfD0gT1dORURfQllfT1VUU0lERTsKKwkJCQkJLy8gc3Rh
dHVzIG9mIHRoaXMgdHJhY2tlciBpcyBub3cgVU5LTk9XTgorCQkJCX0KKwkJCQlyZXR1cm4gbG9j
YWwuY2xvc2VUcmFja2VyOwogCQkJfQotCQl9CisJCX0gZWxzZSBpZiAoZXhwcmVzc2lvbiBpbnN0
YW5jZW9mIEFsbG9jYXRpb25FeHByZXNzaW9uKSB7CisJCQkvLyByZXR1cm4gYW55IHByZWxpbWlu
YXJ5IHRyYWNraW5nIHZhcmlhYmxlIGZyb20gYW5hbHlzZUNsb3NlYWJsZUFsbG9jYXRpb24gCisJ
CQlyZXR1cm4gKChBbGxvY2F0aW9uRXhwcmVzc2lvbikgZXhwcmVzc2lvbikuY2xvc2VUcmFja2Vy
OworCQl9CQkKIAkJcmV0dXJuIG51bGw7CiAJfQogCi0JLyoqIGlmICdpbnZvY2F0aW9uU2l0ZScg
aXMgYSBjYWxsIHRvIGNsb3NlKCkgdGhhdCBoYXMgYSByZWdpc3RlcmVkIHRyYWNraW5nIHZhcmlh
YmxlLCBhbnN3ZXIgdGhhdCB2YXJpYWJsZSdzIGJpbmRpbmcuICovCi0JcHVibGljIHN0YXRpYyBM
b2NhbFZhcmlhYmxlQmluZGluZyBnZXRUcmFja2VyRm9yQ2xvc2VDYWxsKEFTVE5vZGUgaW52b2Nh
dGlvblNpdGUpIHsKLQkJaWYgKGludm9jYXRpb25TaXRlIGluc3RhbmNlb2YgTWVzc2FnZVNlbmQp
IHsKLQkJCU1lc3NhZ2VTZW5kIHNlbmQgPSAoTWVzc2FnZVNlbmQpIGludm9jYXRpb25TaXRlOwot
CQkJaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKFR5cGVDb25zdGFudHMuQ0xPU0UsIHNlbmQuc2Vs
ZWN0b3IpICYmIHNlbmQucmVjZWl2ZXIgaW5zdGFuY2VvZiBTaW5nbGVOYW1lUmVmZXJlbmNlKSB7
Ci0JCQkJQmluZGluZyByZWNlaXZlckJpbmRpbmcgPSAoKFNpbmdsZU5hbWVSZWZlcmVuY2Upc2Vu
ZC5yZWNlaXZlcikuYmluZGluZzsKLQkJCQlpZiAocmVjZWl2ZXJCaW5kaW5nIGluc3RhbmNlb2Yg
TG9jYWxWYXJpYWJsZUJpbmRpbmcpIHsKLQkJCQkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlIHRyYWNr
aW5nVmFyaWFibGUgPSAoKExvY2FsVmFyaWFibGVCaW5kaW5nKXJlY2VpdmVyQmluZGluZykuY2xv
c2VUcmFja2VyOwotCQkJCQlpZiAodHJhY2tpbmdWYXJpYWJsZSAhPSBudWxsKQotCQkJCQkJcmV0
dXJuIHRyYWNraW5nVmFyaWFibGUuYmluZGluZzsKKwkvKioKKwkgKiBCZWZvcmUgYW5hbHl6aW5n
IGFuIGFzc2lnbm1lbnQgb2YgdGhpcyBzaGFwZTogPGNvZGU+c2luZ2xlTmFtZSA9IG5ldyBBbGxv
Y2F0aW9uKCk8L2NvZGU+CisJICogY29ubmVjdCBhbnkgdHJhY2tpbmcgdmFyaWFibGUgb2YgdGhl
IExIUyB3aXRoIHRoZSBhbGxvY2F0aW9uIG9uIHRoZSBSSFMuCisJICogQWxzbyB0aGUgYXNzaWdu
bWVudCBpcyB0ZW1wb3JhcmlseSBzdG9yZWQgaW4gdGhlIHRyYWNraW5nIHZhcmlhYmxlIGluIGNh
c2Ugd2UgbmVlZCB0bworCSAqIHJlcG9ydCBlcnJvcnMgYmVjYXVzZSB0aGUgYXNzaWdubWVudCBs
ZWF2ZXMgdGhlIG9sZCBMSFMgdmFsdWUgdW5jbG9zZWQuCisJICogSW4gdGhpcyBjYXNlIHRoZSBh
c3NpZ25tZW50IHNob3VsZCBiZSB1c2VkIGFzIHRoZSBlcnJvciBsb2NhdGlvbi4KKwkgKiAKKwkg
KiBAcGFyYW0gbG9jYXRpb24gdGhlIGFzc2lnbm1lbnQvbG9jYWwgZGVjbGFyYXRpb24gYmVpbmcg
YW5hbHl6ZWQKKwkgKiBAcGFyYW0gbG9jYWwgdGhlIGxvY2FsIHZhcmlhYmxlIGJlaW5nIGFzc2ln
bmVkIHRvCisJICogQHBhcmFtIHJocyB0aGUgcmhzIG9mIHRoZSBhc3NpZ25tZW50IHJlc3AuIHRo
ZSBpbml0aWFsaXphdGlvbiBvZiB0aGUgbG9jYWwgdmFyaWFibGUgZGVjbGFyYXRpb24uCisJICog
CQk8c3Ryb25nPlByZWNvbmRpdGlvbjo8L3N0cm9uZz4gY2xpZW50IGhhcyBhbHJlYWR5IGNoZWNr
ZWQgdGhhdCB0aGUgcmVzb2x2ZWQgdHlwZSBvZiB0aGlzIGV4cHJlc3Npb24gaXMgZWl0aGVyIGEg
Y2xvc2VhYmxlIHR5cGUgb3IgTlVMTC4KKwkgKi8KKwlwdWJsaWMgc3RhdGljIHZvaWQgcHJlQ29u
bmVjdFRyYWNrZXJBY3Jvc3NBc3NpZ25tZW50KEFTVE5vZGUgbG9jYXRpb24sIExvY2FsVmFyaWFi
bGVCaW5kaW5nIGxvY2FsLCBFeHByZXNzaW9uIHJocykgeworCQlGYWtlZFRyYWNraW5nVmFyaWFi
bGUgY2xvc2VUcmFja2VyID0gbnVsbDsKKwkJaWYgKHJocyBpbnN0YW5jZW9mIEFsbG9jYXRpb25F
eHByZXNzaW9uKSB7CisJCQljbG9zZVRyYWNrZXIgPSBsb2NhbC5jbG9zZVRyYWNrZXI7CisJCQlp
ZiAoY2xvc2VUcmFja2VyID09IG51bGwpIHsKKwkJCQlpZiAocmhzLnJlc29sdmVkVHlwZSAhPSBU
eXBlQmluZGluZy5OVUxMKSB7IC8vIG5vdCBOVUxMIG1lYW5zIHZhbGlkIGNsb3NlYWJsZSBhcyBw
ZXIgbWV0aG9kIHByZWNvbmRpdGlvbgorCQkJCQljbG9zZVRyYWNrZXIgPSBuZXcgRmFrZWRUcmFj
a2luZ1ZhcmlhYmxlKGxvY2FsLCBsb2NhdGlvbik7CisJCQkJCWlmIChsb2NhbC5pc1BhcmFtZXRl
cigpKSB7CisJCQkJCQljbG9zZVRyYWNrZXIuZ2xvYmFsQ2xvc2luZ1N0YXRlIHw9IE9XTkVEX0JZ
X09VVFNJREU7CisJCQkJCX0KKwkJCQl9CQkJCQkKKwkJCX0KKwkJCWlmIChjbG9zZVRyYWNrZXIg
IT0gbnVsbCkgeworCQkJCWNsb3NlVHJhY2tlci5jdXJyZW50QXNzaWdubWVudCA9IGxvY2F0aW9u
OworCQkJCSgoQWxsb2NhdGlvbkV4cHJlc3Npb24pcmhzKS5jbG9zZVRyYWNrZXIgPSBjbG9zZVRy
YWNrZXI7CisJCQl9CisJCX0KKwl9CisKKwkvKiogCisJICogQ29tcHV0ZS9hc3NpZ24gYSB0cmFj
a2luZyB2YXJpYWJsZSBmb3IgYSBmcmVzaGx5IGFsbG9jYXRlZCBjbG9zZWFibGUgdmFsdWUsIHVz
aW5nIGluZm9ybWF0aW9uIGZyb20gb3VyIHdoaXRlIGxpc3RzLgorCSAqIFNlZSAgQnVnIDM1ODkw
MyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdz
IAorCSAqLworCXB1YmxpYyBzdGF0aWMgdm9pZCBhbmFseXNlQ2xvc2VhYmxlQWxsb2NhdGlvbihC
bG9ja1Njb3BlIHNjb3BlLCBGbG93SW5mbyBmbG93SW5mbywgQWxsb2NhdGlvbkV4cHJlc3Npb24g
YWxsb2NhdGlvbikgeworCQkvLyBjbGllbnQgaGFzIGNoZWNrZWQgdGhhdCB0aGUgcmVzb2x2ZWRU
eXBlIGlzIGFuIEF1dG9DbG9zZWFibGUsIGhlbmNlIHRoZSBmb2xsb3dpbmcgY2FzdCBpcyBzYWZl
OgorCQlpZiAoKChSZWZlcmVuY2VCaW5kaW5nKWFsbG9jYXRpb24ucmVzb2x2ZWRUeXBlKS5oYXNU
eXBlQml0KFR5cGVJZHMuQml0UmVzb3VyY2VGcmVlQ2xvc2VhYmxlKSkgeworCQkJLy8gcmVtb3Zl
IHVubmVjZXNzYXJ5IGF0dGVtcHRzIChjbG9zZWFibGUgaXMgbm90IHJlbGV2YW50KQorCQkJaWYg
KGFsbG9jYXRpb24uY2xvc2VUcmFja2VyICE9IG51bGwpIHsKKwkJCQlzY29wZS5yZW1vdmVUcmFj
a2luZ1ZhcihhbGxvY2F0aW9uLmNsb3NlVHJhY2tlcik7CisJCQkJYWxsb2NhdGlvbi5jbG9zZVRy
YWNrZXIgPSBudWxsOworCQkJfQorCQl9IGVsc2UgaWYgKCgoUmVmZXJlbmNlQmluZGluZylhbGxv
Y2F0aW9uLnJlc29sdmVkVHlwZSkuaGFzVHlwZUJpdChUeXBlSWRzLkJpdFdyYXBwZXJDbG9zZWFi
bGUpKSB7CisJCQlib29sZWFuIGlzV3JhcHBlciA9IHRydWU7CisJCQlpZiAoYWxsb2NhdGlvbi5h
cmd1bWVudHMgIT0gbnVsbCAmJiAgYWxsb2NhdGlvbi5hcmd1bWVudHMubGVuZ3RoID4gMCkgewor
CQkJCS8vIGZpbmQgdGhlIHdyYXBwZWQgcmVzb3VyY2UgcmVwcmVzZW50ZWQgYnkgaXRzIHRyYWNr
aW5nIHZhcjoKKwkJCQlGYWtlZFRyYWNraW5nVmFyaWFibGUgaW5uZXJUcmFja2VyID0gZmluZENs
b3NlVHJhY2tlcihzY29wZSwgZmxvd0luZm8sIGFsbG9jYXRpb24sIGFsbG9jYXRpb24uYXJndW1l
bnRzWzBdKTsKKwkJCQlpZiAoaW5uZXJUcmFja2VyICE9IG51bGwpIHsKKwkJCQkJaWYgKGlubmVy
VHJhY2tlciA9PSBhbGxvY2F0aW9uLmNsb3NlVHJhY2tlcikKKwkJCQkJCXJldHVybjsgLy8gc2Vs
ZiB3cmFwIChyZXMgPSBuZXcgUmVzKHJlcykpIC0+IG5laXRoZXIgY2hhbmdlIChoZXJlKSBub3Ig
cmVtb3ZlIChiZWxvdykKKwkJCQkJaW50IG5ld1N0YXR1cyA9IEZsb3dJbmZvLk5VTEw7CisJCQkJ
CWlmIChhbGxvY2F0aW9uLmNsb3NlVHJhY2tlciA9PSBudWxsKSB7CisJCQkJCQlhbGxvY2F0aW9u
LmNsb3NlVHJhY2tlciA9IG5ldyBGYWtlZFRyYWNraW5nVmFyaWFibGUoc2NvcGUsIGFsbG9jYXRp
b24pOyAvLyBubyBsb2NhbCBhdmFpbGFibGUsIGNsb3NlYWJsZSBpcyB1bmFzc2lnbmVkCisJCQkJ
CX0gZWxzZSB7CisJCQkJCQlpZiAoc2NvcGUuZmluYWxseUluZm8gIT0gbnVsbCkgeworCQkJCQkJ
CS8vIGluamVjdCByZXN1bHRzIGZyb20gYW5hbHlzaW5nIGEgZmluYWxseSBibG9jayBvbnRvIHRo
ZSBuZXdseSBjb25uZWN0ZWQgd3JhcHBlcgorCQkJCQkJCWludCBmaW5hbGx5U3RhdHVzID0gc2Nv
cGUuZmluYWxseUluZm8ubnVsbFN0YXR1cyhhbGxvY2F0aW9uLmNsb3NlVHJhY2tlci5iaW5kaW5n
KTsKKwkJCQkJCQlpZiAoZmluYWxseVN0YXR1cyAhPSBGbG93SW5mby5VTktOT1dOKQorCQkJCQkJ
CQluZXdTdGF0dXMgPSBmaW5hbGx5U3RhdHVzOworCQkJCQkJfQorCQkJCQl9CisJCQkJCWFsbG9j
YXRpb24uY2xvc2VUcmFja2VyLmlubmVyVHJhY2tlciA9IGlubmVyVHJhY2tlcjsKKwkJCQkJaW5u
ZXJUcmFja2VyLm91dGVyVHJhY2tlciA9IGFsbG9jYXRpb24uY2xvc2VUcmFja2VyOworCQkJCQlm
bG93SW5mby5tYXJrTnVsbFN0YXR1cyhhbGxvY2F0aW9uLmNsb3NlVHJhY2tlci5iaW5kaW5nLCBu
ZXdTdGF0dXMpOworCQkJCQlpZiAobmV3U3RhdHVzICE9IEZsb3dJbmZvLk5VTEwpIHsKKwkJCQkJ
CS8vIHByb3BhZ2F0ZSByZXN1bHRzIGZyb20gYSBmaW5hbGx5IGJsb2NrIGFsc28gaW50byBuZXN0
ZWQgcmVzb3VyY2VzOgorCQkJCQkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlIGN1cnJlbnRUcmFja2Vy
ID0gaW5uZXJUcmFja2VyOworCQkJCQkJd2hpbGUgKGN1cnJlbnRUcmFja2VyICE9IG51bGwpIHsK
KwkJCQkJCQlmbG93SW5mby5tYXJrTnVsbFN0YXR1cyhjdXJyZW50VHJhY2tlci5iaW5kaW5nLCBu
ZXdTdGF0dXMpOworCQkJCQkJCWN1cnJlbnRUcmFja2VyLmdsb2JhbENsb3NpbmdTdGF0ZSB8PSBh
bGxvY2F0aW9uLmNsb3NlVHJhY2tlci5nbG9iYWxDbG9zaW5nU3RhdGU7CisJCQkJCQkJY3VycmVu
dFRyYWNrZXIgPSBjdXJyZW50VHJhY2tlci5pbm5lclRyYWNrZXI7CisJCQkJCQl9CisJCQkJCX0K
KwkJCQkJcmV0dXJuOyAvLyBrZWVwIGNoYWluaW5nIHdyYXBwZXIgKGJ5IGF2b2lkaW5nIHRvIGZh
bGwgdGhyb3VnaCB0byByZW1vdmVUcmFja2luZ1ZhciBiZWxvdykKKwkJCQl9IGVsc2UgeworCQkJ
CQlpZiAoIWlzQW55Q2xvc2VhYmxlKGFsbG9jYXRpb24uYXJndW1lbnRzWzBdLnJlc29sdmVkVHlw
ZSkpIHsKKwkJCQkJCWlzV3JhcHBlciA9IGZhbHNlOyAvLyBhcmd1bWVudCBpcyBub3QgY2xvc2Vh
YmxlCisJCQkJCX0KKwkJCQl9CisJCQl9IGVsc2UgeworCQkJCWlzV3JhcHBlciA9IGZhbHNlOyAv
LyBubyBhcmd1bWVudAorCQkJfQorCQkJLy8gc3VjY2Vzc2Z1bCB3cmFwcGVyIGRldGVjdGlvbiBo
YXMgZXhpdGVkIGFib3ZlLCBsZXQncyBzZWUgd2h5IHRoYXQgZmFpbGVkCisJCQlpZiAoaXNXcmFw
cGVyKSB7CisJCQkJLy8gcmVtb3ZlIHVubmVjZXNzYXJ5IGF0dGVtcHRzICh3cmFwcGVyIGhhcyBu
byByZWxldmFudCBpbm5lcikKKwkJCQlpZiAoYWxsb2NhdGlvbi5jbG9zZVRyYWNrZXIgIT0gbnVs
bCkgeworCQkJCQlzY29wZS5yZW1vdmVUcmFja2luZ1ZhcihhbGxvY2F0aW9uLmNsb3NlVHJhY2tl
cik7CisJCQkJCWFsbG9jYXRpb24uY2xvc2VUcmFja2VyID0gbnVsbDsKIAkJCQl9CisJCQl9IGVs
c2UgeworCQkJCS8vIGFsbG9jYXRpb24gZG9lcyBub3QgcHJvdmlkZSBhIHJlc291cmNlIGFzIHRo
ZSBmaXJzdCBhcmd1bWVudCAtPiBkb24ndCB0cmVhdCBhcyBhIHdyYXBwZXIKKwkJCQloYW5kbGVS
ZWd1bGFyUmVzb3VyY2Uoc2NvcGUsIGZsb3dJbmZvLCBhbGxvY2F0aW9uKTsKIAkJCX0KKwkJfSBl
bHNlIHsgLy8gcmVndWxhciByZXNvdXJjZQorCQkJaGFuZGxlUmVndWxhclJlc291cmNlKHNjb3Bl
LCBmbG93SW5mbywgYWxsb2NhdGlvbik7CiAJCX0KLQkJcmV0dXJuIG51bGw7CisJfQorCisJcHJp
dmF0ZSBzdGF0aWMgdm9pZCBoYW5kbGVSZWd1bGFyUmVzb3VyY2UoQmxvY2tTY29wZSBzY29wZSwg
Rmxvd0luZm8gZmxvd0luZm8sIEFsbG9jYXRpb25FeHByZXNzaW9uIGFsbG9jYXRpb24pIHsKKwkJ
RmFrZWRUcmFja2luZ1ZhcmlhYmxlIHByZXNldFRyYWNrZXIgPSBhbGxvY2F0aW9uLmNsb3NlVHJh
Y2tlcjsKKwkJaWYgKHByZXNldFRyYWNrZXIgIT0gbnVsbCAmJiBwcmVzZXRUcmFja2VyLm9yaWdp
bmFsQmluZGluZyAhPSBudWxsKSB7CisJCQkvLyB0aGUgY3VycmVudCBhc3NpZ25tZW50IGZvcmdl
dHMgYSBwcmV2aW91cyByZXNvdXJjZSBpbiB0aGUgTEhTLCBtYXkgY2F1c2UgYSBsZWFrCisJCQkv
LyByZXBvcnQgbm93IGJlY2F1c2UgaGFuZGxlUmVzb3VyY2VBc3NpZ25tZW50IGNhbid0IGRpc3Rp
bmd1aXNoIHRoaXMgZnJvbSBhIHNlbGYtd3JhcCBzaXR1YXRpb24KKwkJCWludCBjbG9zZVN0YXR1
cyA9IGZsb3dJbmZvLm51bGxTdGF0dXMocHJlc2V0VHJhY2tlci5iaW5kaW5nKTsKKwkJCWlmIChj
bG9zZVN0YXR1cyAhPSBGbG93SW5mby5OT05fTlVMTAkJLy8gb2xkIHJlc291cmNlIHdhcyBub3Qg
Y2xvc2VkCisJCQkJCSYmIGNsb3NlU3RhdHVzICE9IEZsb3dJbmZvLlVOS05PV04JLy8gb2xkIHJl
c291cmNlIGhhZCBzb21lIGZsb3cgaW5mb3JtYXRpb24KKwkJCQkJJiYgIWZsb3dJbmZvLmlzRGVm
aW5pdGVseU51bGwocHJlc2V0VHJhY2tlci5vcmlnaW5hbEJpbmRpbmcpCQkvLyBvbGQgcmVzb3Vy
Y2Ugd2FzIG5vdCBudWxsCisJCQkJCSYmICEocHJlc2V0VHJhY2tlci5jdXJyZW50QXNzaWdubWVu
dCBpbnN0YW5jZW9mIExvY2FsRGVjbGFyYXRpb24pKQkvLyBmb3JnZXR0aW5nIG9sZCB2YWwgaW4g
bG9jYWwgZGVjbCBpcyBzeW50YWN0aWNhbGx5IGltcG9zc2libGUKKwkJCQlhbGxvY2F0aW9uLmNs
b3NlVHJhY2tlci5yZWNvcmRFcnJvckxvY2F0aW9uKHByZXNldFRyYWNrZXIuY3VycmVudEFzc2ln
bm1lbnQsIGNsb3NlU3RhdHVzKTsKKwkJfSBlbHNlIHsKKwkJCWFsbG9jYXRpb24uY2xvc2VUcmFj
a2VyID0gbmV3IEZha2VkVHJhY2tpbmdWYXJpYWJsZShzY29wZSwgYWxsb2NhdGlvbik7IC8vIG5v
IGxvY2FsIGF2YWlsYWJsZSwgY2xvc2VhYmxlIGlzIHVuYXNzaWduZWQKKwkJfQorCQlmbG93SW5m
by5tYXJrQXNEZWZpbml0ZWx5TnVsbChhbGxvY2F0aW9uLmNsb3NlVHJhY2tlci5iaW5kaW5nKTsK
Kwl9CisKKwkvKiogRmluZCBhbiBleGlzdGluZyB0cmFja2luZyB2YXJpYWJsZSBmb3IgdGhlIGFy
Z3VtZW50IG9mIGFuIGFsbG9jYXRpb24gZm9yIGEgcmVzb3VyY2Ugd3JhcHBlci4gKi8KKwlwcml2
YXRlIHN0YXRpYyBGYWtlZFRyYWNraW5nVmFyaWFibGUgZmluZENsb3NlVHJhY2tlcihCbG9ja1Nj
b3BlIHNjb3BlLCBGbG93SW5mbyBmbG93SW5mbywgQWxsb2NhdGlvbkV4cHJlc3Npb24gYWxsb2Nh
dGlvbiwgRXhwcmVzc2lvbiBhcmcpCisJeworCQl3aGlsZSAoYXJnIGluc3RhbmNlb2YgQXNzaWdu
bWVudCkgeworCQkJQXNzaWdubWVudCBhc3NpZ24gPSAoQXNzaWdubWVudClhcmc7CisJCQlMb2Nh
bFZhcmlhYmxlQmluZGluZyBpbm5lckxvY2FsID0gYXNzaWduLmxvY2FsVmFyaWFibGVCaW5kaW5n
KCk7CisJCQlpZiAoaW5uZXJMb2NhbCAhPSBudWxsKSB7CisJCQkJLy8gbmVzdGVkIGFzc2lnbm1l
bnQgaGFzIGFscmVhZHkgYmVlbiBwcm9jZXNzZWQKKwkJCQlyZXR1cm4gaW5uZXJMb2NhbC5jbG9z
ZVRyYWNrZXI7CisJCQl9IGVsc2UgeworCQkJCWFyZyA9IGFzc2lnbi5leHByZXNzaW9uOyAvLyB1
bndyYXAgYXNzaWdubWVudCBhbmQgZmFsbCB0aHJvdWdoCisJCQl9CisJCX0KKwkJaWYgKGFyZyBp
bnN0YW5jZW9mIFNpbmdsZU5hbWVSZWZlcmVuY2UpIHsKKwkJCS8vIGlzIGFsbG9jYXRpb24gYXJn
IGEgcmVmZXJlbmNlIHRvIGFuIGV4aXN0aW5nIGNsb3NlYWJsZT8KKwkJCUxvY2FsVmFyaWFibGVC
aW5kaW5nIGxvY2FsID0gYXJnLmxvY2FsVmFyaWFibGVCaW5kaW5nKCk7CisJCQlpZiAobG9jYWwg
IT0gbnVsbCkgeworCQkJCXJldHVybiBsb2NhbC5jbG9zZVRyYWNrZXI7CisJCQl9CisJCX0gZWxz
ZSBpZiAoYXJnIGluc3RhbmNlb2YgQWxsb2NhdGlvbkV4cHJlc3Npb24pIHsKKwkJCS8vIG5lc3Rl
ZCBhbGxvY2F0aW9uCisJCQlyZXR1cm4gKChBbGxvY2F0aW9uRXhwcmVzc2lvbilhcmcpLmNsb3Nl
VHJhY2tlcjsKKwkJfQorCQlyZXR1cm4gbnVsbDsgLy8gbm90IGEgdHJhY2tlZCBleHByZXNzaW9u
CiAJfQogCiAJLyoqIAogCSAqIENoZWNrIGlmIHRoZSByaHMgb2YgYW4gYXNzaWdubWVudCBvciBs
b2NhbCBkZWNsYXJhdGlvbiBpcyBhbiAoQXV0bylDbG9zZWFibGUuCi0JICogSWYgc28gY3JlYXRl
IG9yIHJlLXVzZSBhIHRyYWNraW5nIHZhcmlhYmxlLCBhbmQgd2lyZSBhbmQgaW5pdGlhbGl6ZSBl
dmVyeXRoaW5nLiAKKwkgKiBJZiBzbyBjcmVhdGUgb3IgcmUtdXNlIGEgdHJhY2tpbmcgdmFyaWFi
bGUsIGFuZCB3aXJlIGFuZCBpbml0aWFsaXplIGV2ZXJ5dGhpbmcuCisJICogQHBhcmFtIHNjb3Bl
IHNjb3BlIGNvbnRhaW5pbmcgdGhlIGFzc2lnbm1lbnQKKwkgKiBAcGFyYW0gdXBzdHJlYW1JbmZv
IGluZm8gd2l0aG91dCBhbmFseXNpcyBvZiB0aGUgcmhzLCB1c2UgdGhpcyB0byBkZXRlcm1pbmUg
dGhlIHN0YXR1cyBvZiBhIHJlc291cmNlIGJlaW5nIGRpc2Nvbm5lY3RlZAorCSAqIEBwYXJhbSBm
bG93SW5mbyBpbmZvIHdpdGggYW5hbHlzaXMgb2YgdGhlIHJocywgdXNlIHRoaXMgZm9yIHJlY29y
ZGluZyByZXNvdXJjZSBzdGF0dXMgYmVjYXVzZSB0aGlzIHdpbGwgYmUgcGFzc2VkIGRvd25zdHJl
YW0KKwkgKiBAcGFyYW0gbG9jYXRpb24gd2hlcmUgdG8gcmVwb3J0IHdhcm5pZ3MvZXJyb3JzIGFn
YWluc3QKKwkgKiBAcGFyYW0gcmhzIHRoZSByaWdodCBoYW5kIHNpZGUgb2YgdGhlIGFzc2lnbm1l
bnQsIHRoaXMgZXhwcmVzc2lvbiBpcyB0byBiZSBhbmFseXplZC4KKwkgKgkJCVRoZSBjYWxsZXIg
aGFzIGFscmVhZHkgY2hlY2tlZCB0aGF0IHRoZSByaHMgaXMgZWl0aGVyIG9mIGEgY2xvc2VhYmxl
IHR5cGUgb3IgbnVsbC4KKwkgKiBAcGFyYW0gbG9jYWwgdGhlIGxvY2FsIHZhcmlhYmxlIGludG8g
d2hpY2ggdGhlIHJocyBpcyBiZWluZyBhc3NpZ25lZAogCSAqLwotCXB1YmxpYyBzdGF0aWMgdm9p
ZCBoYW5kbGVSZXNvdXJjZUFzc2lnbm1lbnQoRmxvd0luZm8gZmxvd0luZm8sIFN0YXRlbWVudCBs
b2NhdGlvbiwgRXhwcmVzc2lvbiByaHMsIExvY2FsVmFyaWFibGVCaW5kaW5nIGxvY2FsLAotCQkJ
CUxvY2FsVmFyaWFibGVCaW5kaW5nIHByZXZpb3VzVHJhY2tlckJpbmRpbmcpIAorCXB1YmxpYyBz
dGF0aWMgdm9pZCBoYW5kbGVSZXNvdXJjZUFzc2lnbm1lbnQoQmxvY2tTY29wZSBzY29wZSwgRmxv
d0luZm8gdXBzdHJlYW1JbmZvLCBGbG93SW5mbyBmbG93SW5mbywgQVNUTm9kZSBsb2NhdGlvbiwg
RXhwcmVzc2lvbiByaHMsIExvY2FsVmFyaWFibGVCaW5kaW5nIGxvY2FsKQogCXsKLQkJaWYgKGlz
QXV0b0Nsb3NlYWJsZShyaHMucmVzb2x2ZWRUeXBlKSkgeworCQkvLyBkb2VzIHRoZSBMSFMgKGxv
Y2FsKSBhbHJlYWR5IGhhdmUgYSB0cmFja2VyLCBpbmRpY2F0aW5nIHdlIG1heSBsZWFrIGEgcmVz
b3VyY2UgYnkgdGhlIGFzc2lnbm1lbnQ/CisJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSBwcmV2aW91
c1RyYWNrZXIgPSBudWxsOworCQlGYWtlZFRyYWNraW5nVmFyaWFibGUgZGlzY29ubmVjdGVkVHJh
Y2tlciA9IG51bGw7CisJCWlmIChsb2NhbC5jbG9zZVRyYWNrZXIgIT0gbnVsbCkgeworCQkJLy8g
YXNzaWduaW5nIHRvIGEgdmFyaWFibGUgYWxyZWFkeSBob2xkaW5nIGFuIEF1dG9DbG9zZWFibGUs
IGhhcyBpdCBiZWVuIGNsb3NlZCBiZWZvcmU/CisJCQlwcmV2aW91c1RyYWNrZXIgPSBsb2NhbC5j
bG9zZVRyYWNrZXI7CisJCQlpbnQgbnVsbFN0YXR1cyA9IHVwc3RyZWFtSW5mby5udWxsU3RhdHVz
KGxvY2FsKTsKKwkJCWlmIChudWxsU3RhdHVzICE9IEZsb3dJbmZvLk5VTEwgJiYgbnVsbFN0YXR1
cyAhPSBGbG93SW5mby5VTktOT1dOKSAvLyBvbmx5IGlmIHByZXZpb3VzIHZhbHVlIG1heSBiZSBy
ZWxldmFudAorCQkJCWRpc2Nvbm5lY3RlZFRyYWNrZXIgPSBwcmV2aW91c1RyYWNrZXI7IC8vIHJl
cG9ydCBlcnJvciBiZWxvdywgdW5sZXNzIHdlIGhhdmUgYSBzZWxmLXdyYXAgYXNzaWdubWVudAor
CQl9CisKKwkJaWYgKHJocy5yZXNvbHZlZFR5cGUgIT0gVHlwZUJpbmRpbmcuTlVMTCkgewogCQkJ
Ly8gbmV3IHZhbHVlIGlzIEF1dG9DbG9zZWFibGUsIHN0YXJ0IHRyYWNraW5nLCBwb3NzaWJseSBy
ZS11c2luZyBleGlzdGluZyB0cmFja2VyIHZhcjoKLQkKIAkJCUZha2VkVHJhY2tpbmdWYXJpYWJs
ZSByaHNUcmFja1ZhciA9IGdldENsb3NlVHJhY2tpbmdWYXJpYWJsZShyaHMpOwotCQkJaWYgKHJo
c1RyYWNrVmFyICE9IG51bGwpIHsJCQkJCQkJCS8vIDEuIHNoYXJlIHRyYWNraW5nIHZhcmlhYmxl
IHdpdGggUkhTPwotCQkJCWxvY2FsLmNsb3NlVHJhY2tlciA9IHJoc1RyYWNrVmFyOwotCQkJCS8v
IGtlZXAgbnVsbC1zdGF0dXMgdW5jaGFuZ2VkIGFjcm9zcyB0aGlzIGFzc2lnbm1lbnQKLQkJCX0g
ZWxzZSBpZiAocHJldmlvdXNUcmFja2VyQmluZGluZyAhPSBudWxsKSB7CQkJLy8gMi4gcmUtdXNl
IHRyYWNraW5nIHZhcmlhYmxlIGZyb20gdGhlIExIUz8KLQkJCQkvLyByZS1hc3NpZ25pbmcgZnJv
bSBhIGZyZXNoLCBtYXJrIGFzIG5vdC1jbG9zZWQgYWdhaW46Ci0JCQkJZmxvd0luZm8ubWFya0Fz
RGVmaW5pdGVseU51bGwocHJldmlvdXNUcmFja2VyQmluZGluZyk7CisJCQlpZiAocmhzVHJhY2tW
YXIgIT0gbnVsbCkgewkJCQkJCQkJLy8gMS4gaWYgUkhTIGhhcyBhIHRyYWNraW5nIHZhcmlhYmxl
Li4uCisJCQkJaWYgKGxvY2FsLmNsb3NlVHJhY2tlciA9PSBudWxsKSB7CisJCQkJCS8vIG51bGwg
c2hvdWxkbid0IG9jY3VyIGJ1dCBsZXQncyBwbGF5IHNhZmUKKwkJCQkJaWYgKHJoc1RyYWNrVmFy
Lm9yaWdpbmFsQmluZGluZyAhPSBudWxsKQorCQkJCQkJbG9jYWwuY2xvc2VUcmFja2VyID0gcmhz
VHJhY2tWYXI7CQkJLy8JCWEuOiBsZXQgZnJlc2ggTEhTIHNoYXJlIGl0IAorCQkJCX0gZWxzZSB7
CisJCQkJCWlmIChyaHNUcmFja1ZhciA9PSBkaXNjb25uZWN0ZWRUcmFja2VyICYmIHJocyBpbnN0
YW5jZW9mIEFsbG9jYXRpb25FeHByZXNzaW9uKQorCQkJCQkJcmV0dXJuOyAJCQkJCQkJCQkvLyAJ
CWIuOiBzZWxmIHdyYXBwZXI6IHJlcyA9IG5ldyBXcmFwKHJlcyk7IC0+IGRvbmUhCisJCQkJCWxv
Y2FsLmNsb3NlVHJhY2tlciA9IHJoc1RyYWNrVmFyOwkJCQkvLwkJYy46IGNvbmZsaWN0aW5nIExI
UyBhbmQgUkhTLCBwcm9jZWVkIHdpdGggcmVjb3JkRXJyb3JMb2NhdGlvbiBiZWxvdworCQkJCX0K
KwkJCQkvLyBrZWVwIGNsb3NlLXN0YXR1cyBvZiBSSFMgdW5jaGFuZ2VkIGFjcm9zcyB0aGlzIGFz
c2lnbm1lbnQKKwkJCX0gZWxzZSBpZiAocHJldmlvdXNUcmFja2VyICE9IG51bGwpIHsJCQkJCS8v
IDIuIHJlLXVzZSB0cmFja2luZyB2YXJpYWJsZSBmcm9tIHRoZSBMSFM/CisJCQkJLy8gcmUtYXNz
aWduaW5nIGZyb20gYSBmcmVzaCB2YWx1ZSwgbWFyayBhcyBub3QtY2xvc2VkIGFnYWluOgorCQkJ
CWlmICgocHJldmlvdXNUcmFja2VyLmdsb2JhbENsb3NpbmdTdGF0ZSAmIChTSEFSRURfV0lUSF9P
VVRTSURFfE9XTkVEX0JZX09VVFNJREUpKSA9PSAwKQorCQkJCQlmbG93SW5mby5tYXJrQXNEZWZp
bml0ZWx5TnVsbChwcmV2aW91c1RyYWNrZXIuYmluZGluZyk7CisJCQkJbG9jYWwuY2xvc2VUcmFj
a2VyID0gYW5hbHlzZUNsb3NlYWJsZUV4cHJlc3Npb24oZmxvd0luZm8sIGxvY2FsLCBsb2NhdGlv
biwgcmhzLCBwcmV2aW91c1RyYWNrZXIpOwogCQkJfSBlbHNlIHsJCQkJCQkJCQkJCQkvLyAzLiBu
byByZS11c2UsIGNyZWF0ZSBhIGZyZXNoIHRyYWNraW5nIHZhcmlhYmxlOgotCQkJCWxvY2FsLmNs
b3NlVHJhY2tlciA9IG5ldyBGYWtlZFRyYWNraW5nVmFyaWFibGUobG9jYWwsIGxvY2F0aW9uKTsK
LQkJCQkvLyBhIGZyZXNoIHJlc291cmNlLCBtYXJrIGFzIG5vdC1jbG9zZWQ6Ci0JCQkJZmxvd0lu
Zm8ubWFya0FzRGVmaW5pdGVseU51bGwobG9jYWwuY2xvc2VUcmFja2VyLmJpbmRpbmcpOworCQkJ
CXJoc1RyYWNrVmFyID0gYW5hbHlzZUNsb3NlYWJsZUV4cHJlc3Npb24oZmxvd0luZm8sIGxvY2Fs
LCBsb2NhdGlvbiwgcmhzLCBudWxsKTsKKwkJCQlpZiAocmhzVHJhY2tWYXIgIT0gbnVsbCkgewor
CQkJCQlsb2NhbC5jbG9zZVRyYWNrZXIgPSByaHNUcmFja1ZhcjsKKwkJCQkJLy8gYSBmcmVzaCBy
ZXNvdXJjZSwgbWFyayBhcyBub3QtY2xvc2VkOgorCQkJCQlpZiAoKHJoc1RyYWNrVmFyLmdsb2Jh
bENsb3NpbmdTdGF0ZSAmIChTSEFSRURfV0lUSF9PVVRTSURFfE9XTkVEX0JZX09VVFNJREUpKSA9
PSAwKQorCQkJCQkJZmxvd0luZm8ubWFya0FzRGVmaW5pdGVseU51bGwocmhzVHJhY2tWYXIuYmlu
ZGluZyk7CiAvLyBUT0RPKHN0ZXBoYW4pOiB0aGlzIG1pZ2h0IGJlIHVzZWZ1bCwgYnV0IEkgY291
bGQgbm90IGZpbmQgYSB0ZXN0IGNhc2UgZm9yIGl0OiAKLS8vCQkJCWlmIChmbG93Q29udGV4dC5p
bml0c09uRmluYWxseSAhPSBudWxsKQotLy8JCQkJCWZsb3dDb250ZXh0LmluaXRzT25GaW5hbGx5
Lm1hcmtBc0RlZmluaXRlbHlOb25OdWxsKHRyYWNrZXJCaW5kaW5nKTsKKy8vCQkJCQlpZiAoZmxv
d0NvbnRleHQuaW5pdHNPbkZpbmFsbHkgIT0gbnVsbCkKKy8vCQkJCQkJZmxvd0NvbnRleHQuaW5p
dHNPbkZpbmFsbHkubWFya0FzRGVmaW5pdGVseU5vbk51bGwodHJhY2tlckJpbmRpbmcpOworCQkJ
CX0KKwkJCX0KKwkJfQorCisJCWlmIChkaXNjb25uZWN0ZWRUcmFja2VyICE9IG51bGwpIHsKKwkJ
CWlmIChkaXNjb25uZWN0ZWRUcmFja2VyLmlubmVyVHJhY2tlciAhPSBudWxsICYmIGRpc2Nvbm5l
Y3RlZFRyYWNrZXIuaW5uZXJUcmFja2VyLmJpbmRpbmcuZGVjbGFyaW5nU2NvcGUgPT0gc2NvcGUp
IHsKKwkJCQkvLyBkaXNjYXJkIHRyYWNrZXIgZm9yIHRoZSB3cmFwcGVyIGJ1dCBrZWVwIHRoZSBp
bm5lcjoKKwkJCQlkaXNjb25uZWN0ZWRUcmFja2VyLmlubmVyVHJhY2tlci5vdXRlclRyYWNrZXIg
PSBudWxsOworCQkJCXNjb3BlLnBydW5lV3JhcHBlclRyYWNraW5nVmFyKGRpc2Nvbm5lY3RlZFRy
YWNrZXIpOworCQkJfSBlbHNlIHsKKwkJCQlpbnQgdXBzdHJlYW1TdGF0dXMgPSB1cHN0cmVhbUlu
Zm8ubnVsbFN0YXR1cyhkaXNjb25uZWN0ZWRUcmFja2VyLmJpbmRpbmcpOworCQkJCWlmICh1cHN0
cmVhbVN0YXR1cyAhPSBGbG93SW5mby5OT05fTlVMTCkKKwkJCQkJZGlzY29ubmVjdGVkVHJhY2tl
ci5yZWNvcmRFcnJvckxvY2F0aW9uKGxvY2F0aW9uLCB1cHN0cmVhbVN0YXR1cyk7CisJCQl9CisJ
CX0KKwl9CisJLyoqCisJICogQW5hbHl6ZSBzdHJ1Y3R1cmUgb2YgYSBjbG9zZWFibGUgZXhwcmVz
c2lvbiwgbWF0Y2hpbmcgKGNoYWluZWQpIHJlc291cmNlcyBhZ2FpbnN0IG91ciB3aGl0ZSBsaXN0
cy4KKwkgKiBAcGFyYW0gZmxvd0luZm8gd2hlcmUgdG8gcmVjb3JkIGNsb3NlIHN0YXR1cworCSAq
IEBwYXJhbSBsb2NhbCBsb2NhbCB2YXJpYWJsZSB0byB3aGljaCB0aGUgY2xvc2VhYmxlIGlzIGJl
aW5nIGFzc2lnbmVkCisJICogQHBhcmFtIGxvY2F0aW9uIHdoZXJlIHRvIGZsYWcgZXJyb3JzL3dh
cm5pbmdzIGFnYWluc3QKKwkgKiBAcGFyYW0gZXhwcmVzc2lvbiBleHByZXNzaW9uIHRvIGJlIGFu
YWx5emVkCisJICogQHBhcmFtIHByZXZpb3VzVHJhY2tlciB3aGVuIGFuYWx5emluZyBhIHJlLWFz
c2lnbm1lbnQgd2UgbWF5IGFscmVhZHkgaGF2ZSBhIHRyYWNraW5nIHZhcmlhYmxlIGZvciBsb2Nh
bCwKKwkgKiAgCQl3aGljaCB3ZSBzaG91bGQgdGhlbiByZS11c2UKKwkgKiBAcmV0dXJuIGEgdHJh
Y2tpbmcgdmFyaWFibGUgYXNzb2NpYXRlZCB3aXRoIGxvY2FsIG9yIG51bGwgaWYgbm8gbmVlZCB0
byB0cmFjaworCSAqLworCXByaXZhdGUgc3RhdGljIEZha2VkVHJhY2tpbmdWYXJpYWJsZSBhbmFs
eXNlQ2xvc2VhYmxlRXhwcmVzc2lvbihGbG93SW5mbyBmbG93SW5mbywgTG9jYWxWYXJpYWJsZUJp
bmRpbmcgbG9jYWwsIAorCQkJCQkJCQkJQVNUTm9kZSBsb2NhdGlvbiwgRXhwcmVzc2lvbiBleHBy
ZXNzaW9uLCBGYWtlZFRyYWNraW5nVmFyaWFibGUgcHJldmlvdXNUcmFja2VyKSAKKwl7CisJCS8v
IHVud3JhcCB1bmludGVyZXN0aW5nIG5vZGVzOgorCQl3aGlsZSAodHJ1ZSkgeworCQkJaWYgKGV4
cHJlc3Npb24gaW5zdGFuY2VvZiBBc3NpZ25tZW50KQorCQkJCWV4cHJlc3Npb24gPSAoKEFzc2ln
bm1lbnQpZXhwcmVzc2lvbikuZXhwcmVzc2lvbjsKKwkJCWVsc2UgaWYgKGV4cHJlc3Npb24gaW5z
dGFuY2VvZiBDYXN0RXhwcmVzc2lvbikKKwkJCQlleHByZXNzaW9uID0gKChDYXN0RXhwcmVzc2lv
bikgZXhwcmVzc2lvbikuZXhwcmVzc2lvbjsKKwkJCWVsc2UKKwkJCQlicmVhazsKKwkJfQorCisJ
CS8vIGFuYWx5emUgYnkgbm9kZSB0eXBlOgorCQlpZiAoZXhwcmVzc2lvbiBpbnN0YW5jZW9mIEFs
bG9jYXRpb25FeHByZXNzaW9uKSB7CisJCQkvLyBhbGxvY2F0aW9uIGV4cHJlc3Npb25zIGFscmVh
ZHkgaGF2ZSB0aGVpciB0cmFja2luZyB2YXJpYWJsZXMgYW5hbHl6ZWQgYnkgYW5hbHlzZUNsb3Nl
YWJsZUFsbG9jYXRpb24oLi4pCisJCQlGYWtlZFRyYWNraW5nVmFyaWFibGUgdHJhY2tlciA9ICgo
QWxsb2NhdGlvbkV4cHJlc3Npb24pIGV4cHJlc3Npb24pLmNsb3NlVHJhY2tlcjsKKwkJCWlmICh0
cmFja2VyICE9IG51bGwgJiYgdHJhY2tlci5vcmlnaW5hbEJpbmRpbmcgPT0gbnVsbCkgeworCQkJ
CS8vIHRyYWNrZXIgd2l0aG91dCBvcmlnaW5hbCBiaW5kaW5nICh1bmFzc2lnbmVkIGNsb3NlYWJs
ZSkgc2hvdWxkbid0IHJlYWNoIGhlcmUgYnV0IGxldCdzIHBsYXkgc2FmZQorCQkJCXJldHVybiBu
dWxsOworCQkJfQorCQkJcmV0dXJuIHRyYWNrZXI7CisJCX0gZWxzZSBpZiAoZXhwcmVzc2lvbiBp
bnN0YW5jZW9mIE1lc3NhZ2VTZW5kIAorCQkJCXx8IGV4cHJlc3Npb24gaW5zdGFuY2VvZiBBcnJh
eVJlZmVyZW5jZSkgCisJCXsKKwkJCS8vIHdlICptaWdodCogYmUgcmVzcG9uc2libGUgZm9yIHRo
ZSByZXNvdXJjZSBvYnRhaW5lZAorCQkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlIHRyYWNrZXIgPSBu
ZXcgRmFrZWRUcmFja2luZ1ZhcmlhYmxlKGxvY2FsLCBsb2NhdGlvbik7CisJCQl0cmFja2VyLmds
b2JhbENsb3NpbmdTdGF0ZSB8PSBTSEFSRURfV0lUSF9PVVRTSURFOworCQkJZmxvd0luZm8ubWFy
a1BvdGVudGlhbGx5TnVsbEJpdCh0cmFja2VyLmJpbmRpbmcpOyAvLyBzaGVkIHNvbWUgZG91YnQK
KwkJCXJldHVybiB0cmFja2VyOwkJCQorCQl9IGVsc2UgaWYgKChleHByZXNzaW9uLmJpdHMgJiBS
ZXN0cmljdGl2ZUZsYWdNQVNLKSA9PSBCaW5kaW5nLkZJRUxEKSAKKwkJeworCQkJLy8gcmVzcG9u
c2liaWxpdHkgZm9yIHRoaXMgcmVzb3VyY2UgcHJvYmFibHkgbGllcyBhdCBhIGhpZ2hlciBsZXZl
bAorCQkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlIHRyYWNrZXIgPSBuZXcgRmFrZWRUcmFja2luZ1Zh
cmlhYmxlKGxvY2FsLCBsb2NhdGlvbik7CisJCQl0cmFja2VyLmdsb2JhbENsb3NpbmdTdGF0ZSB8
PSBPV05FRF9CWV9PVVRTSURFOworCQkJLy8gbGVhdmUgc3RhdGUgYXMgVU5LTk9XTiwgdGhlIGJp
dCBPV05FRF9CWV9PVVRTSURFIHdpbGwgcHJldmVudCBzcHVyaW91cyB3YXJuaW5ncworCQkJcmV0
dXJuIHRyYWNrZXI7CQkJCisJCX0KKworCQlpZiAoZXhwcmVzc2lvbi5yZXNvbHZlZFR5cGUgaW5z
dGFuY2VvZiBSZWZlcmVuY2VCaW5kaW5nKSB7CisJCQlSZWZlcmVuY2VCaW5kaW5nIHJlc291cmNl
VHlwZSA9IChSZWZlcmVuY2VCaW5kaW5nKSBleHByZXNzaW9uLnJlc29sdmVkVHlwZTsKKwkJCWlm
IChyZXNvdXJjZVR5cGUuaGFzVHlwZUJpdChUeXBlSWRzLkJpdFJlc291cmNlRnJlZUNsb3NlYWJs
ZSkpIHsKKwkJCQkvLyAoYSkgcmVzb3VyY2UtZnJlZSBjbG9zZWFibGU6IC0+IG51bGwKKwkJCQly
ZXR1cm4gbnVsbDsKIAkJCX0KIAkJfQorCQlpZiAobG9jYWwuY2xvc2VUcmFja2VyICE9IG51bGwp
CisJCQkvLyAoYyk6IGlubmVyIGhhcyBhbHJlYWR5IGJlZW4gYW5hbHl6ZWQ6IC0+IHJlLXVzZSB0
cmFjayB2YXIKKwkJCXJldHVybiBsb2NhbC5jbG9zZVRyYWNrZXI7CisJCXJldHVybiBuZXcgRmFr
ZWRUcmFja2luZ1ZhcmlhYmxlKGxvY2FsLCBsb2NhdGlvbik7CisJfQorCisJcHVibGljIHN0YXRp
YyB2b2lkIGNsZWFuVXBBZnRlckFzc2lnbm1lbnQoQmxvY2tTY29wZSBjdXJyZW50U2NvcGUsIGlu
dCBsaHNCaXRzLCBFeHByZXNzaW9uIGV4cHJlc3Npb24pIHsKKwkJLy8gcmVtb3ZlIGFsbCByZW1h
aW5pbmcgdHJhY2sgdmFycyB3aXRoIG5vIG9yaWdpbmFsIGJpbmRpbmcKKworCQkvLyB1bndyYXAg
dW5pbnRlcmVzdGluZyBub2RlczoKKwkJd2hpbGUgKHRydWUpIHsKKwkJCWlmIChleHByZXNzaW9u
IGluc3RhbmNlb2YgQXNzaWdubWVudCkKKwkJCQlleHByZXNzaW9uID0gKChBc3NpZ25tZW50KWV4
cHJlc3Npb24pLmV4cHJlc3Npb247CisJCQllbHNlIGlmIChleHByZXNzaW9uIGluc3RhbmNlb2Yg
Q2FzdEV4cHJlc3Npb24pCisJCQkJZXhwcmVzc2lvbiA9ICgoQ2FzdEV4cHJlc3Npb24pIGV4cHJl
c3Npb24pLmV4cHJlc3Npb247CisJCQllbHNlCisJCQkJYnJlYWs7CisJCX0KKwkJaWYgKGV4cHJl
c3Npb24gaW5zdGFuY2VvZiBBbGxvY2F0aW9uRXhwcmVzc2lvbikgeworCQkJRmFrZWRUcmFja2lu
Z1ZhcmlhYmxlIHRyYWNrZXIgPSAoKEFsbG9jYXRpb25FeHByZXNzaW9uKSBleHByZXNzaW9uKS5j
bG9zZVRyYWNrZXI7CisJCQlpZiAodHJhY2tlciAhPSBudWxsICYmIHRyYWNrZXIub3JpZ2luYWxC
aW5kaW5nID09IG51bGwpIHsKKwkJCQljdXJyZW50U2NvcGUucmVtb3ZlVHJhY2tpbmdWYXIodHJh
Y2tlcik7CisJCQkJKChBbGxvY2F0aW9uRXhwcmVzc2lvbikgZXhwcmVzc2lvbikuY2xvc2VUcmFj
a2VyID0gbnVsbDsKKwkJCX0KKwkJfSBlbHNlIHsKKwkJCS8vIGFzc2lnbm1lbnQgcGFzc2luZyBh
IGxvY2FsIGludG8gYSBmaWVsZD8KKwkJCUxvY2FsVmFyaWFibGVCaW5kaW5nIGxvY2FsID0gZXhw
cmVzc2lvbi5sb2NhbFZhcmlhYmxlQmluZGluZygpOworCQkJaWYgKGxvY2FsICE9IG51bGwgJiYg
bG9jYWwuY2xvc2VUcmFja2VyICE9IG51bGwgJiYgKChsaHNCaXRzICYgQmluZGluZy5GSUVMRCkg
IT0gMCkpCisJCQkJY3VycmVudFNjb3BlLnJlbW92ZVRyYWNraW5nVmFyKGxvY2FsLmNsb3NlVHJh
Y2tlcik7IC8vIFRPRE86IG1heSB3YW50IHRvIHVzZSBsb2NhbC5jbG9zZVRyYWNrZXIubWFya1Bh
c3NlZFRvT3V0c2lkZSguLix0cnVlKQorCQl9CiAJfQogCiAJLyoqIEFuc3dlciB3aXRoZXIgdGhl
IGdpdmVuIHR5cGUgYmluZGluZyBpcyBhIHN1YnR5cGUgb2YgamF2YS5sYW5nLkF1dG9DbG9zZWFi
bGUuICovCi0JcHVibGljIHN0YXRpYyBib29sZWFuIGlzQXV0b0Nsb3NlYWJsZShUeXBlQmluZGlu
ZyB0eXBlQmluZGluZykgeworCXB1YmxpYyBzdGF0aWMgYm9vbGVhbiBpc0FueUNsb3NlYWJsZShU
eXBlQmluZGluZyB0eXBlQmluZGluZykgewogCQlyZXR1cm4gdHlwZUJpbmRpbmcgaW5zdGFuY2Vv
ZiBSZWZlcmVuY2VCaW5kaW5nCiAJCQkmJiAoKFJlZmVyZW5jZUJpbmRpbmcpdHlwZUJpbmRpbmcp
Lmhhc1R5cGVCaXQoVHlwZUlkcy5CaXRBdXRvQ2xvc2VhYmxlfFR5cGVJZHMuQml0Q2xvc2VhYmxl
KTsKIAl9CiAKKwlwdWJsaWMgaW50IGZpbmRNb3N0U3BlY2lmaWNTdGF0dXMoRmxvd0luZm8gZmxv
d0luZm8sIEJsb2NrU2NvcGUgY3VycmVudFNjb3BlLCBCbG9ja1Njb3BlIGxvY2F0aW9uU2NvcGUp
IHsKKwkJaW50IHN0YXR1cyA9IEZsb3dJbmZvLlVOS05PV047CisJCUZha2VkVHJhY2tpbmdWYXJp
YWJsZSBjdXJyZW50VHJhY2tlciA9IHRoaXM7CisJCS8vIGxvb3AgYXMgdG8gY29uc2lkZXIgd3Jh
cHBlcnMgKHBlciB3aGl0ZSBsaXN0KSBlbmNhcHN1bGF0aW5nIGFuIGlubmVyIHJlc291cmNlLgor
CQl3aGlsZSAoY3VycmVudFRyYWNrZXIgIT0gbnVsbCkgeworCQkJTG9jYWxWYXJpYWJsZUJpbmRp
bmcgY3VycmVudFZhciA9IGN1cnJlbnRUcmFja2VyLmJpbmRpbmc7CisJCQlpbnQgY3VycmVudFN0
YXR1cyA9IGdldE51bGxTdGF0dXNBZ2dyZXNzaXZlbHkoY3VycmVudFZhciwgZmxvd0luZm8pOwor
CQkJaWYgKGxvY2F0aW9uU2NvcGUgIT0gbnVsbCkgLy8gb25seSBjaGVjayBhdCBtZXRob2QgZXhp
dCBwb2ludHMKKwkJCQljdXJyZW50U3RhdHVzID0gbWVyZ2VDbG9zZVN0YXR1cyhsb2NhdGlvblNj
b3BlLCBjdXJyZW50U3RhdHVzLCBjdXJyZW50VmFyLCBjdXJyZW50U2NvcGUpOworCQkJaWYgKGN1
cnJlbnRTdGF0dXMgPT0gRmxvd0luZm8uTk9OX05VTEwpIHsKKwkJCQlzdGF0dXMgPSBjdXJyZW50
U3RhdHVzOworCQkJCWJyZWFrOyAvLyBjbG9zZWQgLT4gc3RvcCBzZWFyY2hpbmcKKwkJCX0gZWxz
ZSBpZiAoc3RhdHVzID09IEZsb3dJbmZvLk5VTEwgfHwgc3RhdHVzID09IEZsb3dJbmZvLlVOS05P
V04pIHsKKwkJCQlzdGF0dXMgPSBjdXJyZW50U3RhdHVzOyAvLyBpbXByb3ZlZCBhbHRob3VnaCBu
b3QgeWV0IHNhZmUgLT4ga2VlcCBzZWFyY2hpbmcgZm9yIGJldHRlcgorCQkJfQorCQkJY3VycmVu
dFRyYWNrZXIgPSBjdXJyZW50VHJhY2tlci5pbm5lclRyYWNrZXI7CisJCX0KKwkJcmV0dXJuIHN0
YXR1czsKKwl9CisKKwkvKioKKwkgKiBHZXQgdGhlIG51bGwgc3RhdHVzIGxvb2tpbmcgZXZlbiBp
bnRvIHVucmVhY2hhYmxlIGZsb3dzCisJICogQHBhcmFtIGxvY2FsCisJICogQHBhcmFtIGZsb3dJ
bmZvCisJICogQHJldHVybiBvbmUgb2YgdGhlIGNvbnN0YW50cyBGbG93SW5mby57TlVMTCxQT1RF
TlRJQUxMWV9OVUxMLFBPVEVOVElBTExZX05PTl9OVUxMLE5PTl9OVUxMfS4KKwkgKi8KKwlwcml2
YXRlIGludCBnZXROdWxsU3RhdHVzQWdncmVzc2l2ZWx5KExvY2FsVmFyaWFibGVCaW5kaW5nIGxv
Y2FsLCBGbG93SW5mbyBmbG93SW5mbykgeworCQlpbnQgcmVhY2hNb2RlID0gZmxvd0luZm8ucmVh
Y2hNb2RlKCk7CisJCWludCBzdGF0dXMgPSAwOworCQl0cnkgeworCQkJLy8gdW5yZWFjaGFibGUg
Zmxvd0luZm8gaXMgdG9vIHNoeSBpbiByZXBvcnRpbmcgbnVsbC1pc3N1ZXMsIHRlbXBvcmFyaWx5
IGZvcmdldCByZWFjaGFiaWxpdHk6CisJCQlpZiAocmVhY2hNb2RlICE9IEZsb3dJbmZvLlJFQUNI
QUJMRSkKKwkJCQlmbG93SW5mby50YWdCaXRzICY9IH5GbG93SW5mby5VTlJFQUNIQUJMRTsKKwkJ
CXN0YXR1cyA9IGZsb3dJbmZvLm51bGxTdGF0dXMobG9jYWwpOworCQl9IGZpbmFsbHkgeworCQkJ
Ly8gcmVzZXQKKwkJCWZsb3dJbmZvLnRhZ0JpdHMgfD0gcmVhY2hNb2RlOworCQl9CisJCS8vIGF0
IHRoaXMgcG9pbnQgc29tZSBjb21iaW5hdGlvbnMgYXJlIG5vdCB1c2VmdWwgc28gZmxhdHRlbiB0
byBhIHNpbmdsZSBiaXQ6CisJCWlmICgoc3RhdHVzICYgRmxvd0luZm8uTlVMTCkgIT0gMCkgewor
CQkJaWYgKChzdGF0dXMgJiAoRmxvd0luZm8uTk9OX05VTEwgfCBGbG93SW5mby5QT1RFTlRJQUxM
WV9OT05fTlVMTCkpICE9IDApCisJCQkJcmV0dXJuIEZsb3dJbmZvLlBPVEVOVElBTExZX05VTEw7
IAkvLyBudWxsICsgZG91YnQgPSBwb3QgbnVsbAorCQkJcmV0dXJuIEZsb3dJbmZvLk5VTEw7CisJ
CX0gZWxzZSBpZiAoKHN0YXR1cyAmIEZsb3dJbmZvLk5PTl9OVUxMKSAhPSAwKSB7CisJCQlpZiAo
KHN0YXR1cyAmIEZsb3dJbmZvLlBPVEVOVElBTExZX05VTEwpICE9IDApCisJCQkJcmV0dXJuIEZs
b3dJbmZvLlBPVEVOVElBTExZX05VTEw7CS8vIG5vbi1udWxsICsgZG91YnQgPSBwb3QgbnVsbAor
CQkJcmV0dXJuIEZsb3dJbmZvLk5PTl9OVUxMOworCQl9IGVsc2UgaWYgKChzdGF0dXMgJiBGbG93
SW5mby5QT1RFTlRJQUxMWV9OVUxMKSAhPSAwKQorCQkJcmV0dXJuIEZsb3dJbmZvLlBPVEVOVElB
TExZX05VTEw7CisJCXJldHVybiBzdGF0dXM7CisJfQorCisJcHVibGljIGludCBtZXJnZUNsb3Nl
U3RhdHVzKEJsb2NrU2NvcGUgY3VycmVudFNjb3BlLCBpbnQgc3RhdHVzLCBMb2NhbFZhcmlhYmxl
QmluZGluZyBsb2NhbCwgQmxvY2tTY29wZSBvdXRlclNjb3BlKSB7CisJCS8vIGdldCB0aGUgbW9z
dCBzdWl0YWJsZSBudWxsIHN0YXR1cyByZXByZXNlbnRpbmcgd2hldGhlciByZXNvdXJjZSAnYmlu
ZGluZycgaGFzIGJlZW4gY2xvc2VkCisJCS8vIHN0YXJ0IGF0ICdjdXJyZW50U2NvcGUnIGFuZCBw
b3RlbnRpYWxseSB0cmF2ZWwgb3V0IHVudGlsICdvdXRlclNjb3BlJworCQkvLyBhdCBlYWNoIHNj
b3BlIGNvbnN1bHQgYW55IHJlY29yZGVkICdmaW5hbGx5SW5mbycuCisJCWlmIChzdGF0dXMgIT0g
Rmxvd0luZm8uTk9OX05VTEwpIHsKKwkJCWlmIChjdXJyZW50U2NvcGUuZmluYWxseUluZm8gIT0g
bnVsbCkgeworCQkJCWludCBmaW5hbGx5U3RhdHVzID0gY3VycmVudFNjb3BlLmZpbmFsbHlJbmZv
Lm51bGxTdGF0dXMobG9jYWwpOworCQkJCWlmIChmaW5hbGx5U3RhdHVzID09IEZsb3dJbmZvLk5P
Tl9OVUxMKQorCQkJCQlyZXR1cm4gZmluYWxseVN0YXR1czsKKwkJCQlpZiAoZmluYWxseVN0YXR1
cyAhPSBGbG93SW5mby5OVUxMKSAvLyBuZWl0aGVyIGlzIE5PTl9OVUxMLCBidXQgbm90IGJvdGgg
YXJlIE5VTEwgPT4gY2FsbCBpdCBQT1RFTlRJQUxMWV9OVUxMCisJCQkJCXN0YXR1cyA9IEZsb3dJ
bmZvLlBPVEVOVElBTExZX05VTEw7CisJCQl9CisJCQlpZiAoY3VycmVudFNjb3BlICE9IG91dGVy
U2NvcGUgJiYgY3VycmVudFNjb3BlLnBhcmVudCBpbnN0YW5jZW9mIEJsb2NrU2NvcGUpCisJCQkJ
cmV0dXJuIG1lcmdlQ2xvc2VTdGF0dXMoKChCbG9ja1Njb3BlKSBjdXJyZW50U2NvcGUucGFyZW50
KSwgc3RhdHVzLCBsb2NhbCwgb3V0ZXJTY29wZSk7CisJCX0KKwkJcmV0dXJuIHN0YXR1czsKKwl9
CisKIAkvKiogTWFyayB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY2xvc2VkIGxvY2FsbHkuICovCiAJ
cHVibGljIHZvaWQgbWFya0Nsb3NlKEZsb3dJbmZvIGZsb3dJbmZvLCBGbG93Q29udGV4dCBmbG93
Q29udGV4dCkgewotCQlmbG93SW5mby5tYXJrQXNEZWZpbml0ZWx5Tm9uTnVsbCh0aGlzLmJpbmRp
bmcpOwotCQl0aGlzLmdsb2JhbENsb3NpbmdTdGF0ZSB8PSBDTE9TRV9TRUVOOworCQlGYWtlZFRy
YWNraW5nVmFyaWFibGUgY3VycmVudCA9IHRoaXM7CisJCWRvIHsKKwkJCWZsb3dJbmZvLm1hcmtB
c0RlZmluaXRlbHlOb25OdWxsKGN1cnJlbnQuYmluZGluZyk7CisJCQljdXJyZW50Lmdsb2JhbENs
b3NpbmdTdGF0ZSB8PSBDTE9TRV9TRUVOOwogLy9UT0RPKHN0ZXBoYW4pOiB0aGlzIG1pZ2h0IGJl
IHVzZWZ1bCwgYnV0IEkgY291bGQgbm90IGZpbmQgYSB0ZXN0IGNhc2UgZm9yIGl0OiAKLS8vCQlp
ZiAoZmxvd0NvbnRleHQuaW5pdHNPbkZpbmFsbHkgIT0gbnVsbCkKLS8vCQkJZmxvd0NvbnRleHQu
aW5pdHNPbkZpbmFsbHkubWFya0FzRGVmaW5pdGVseU5vbk51bGwodGhpcy5iaW5kaW5nKTsKKy8v
CQkJaWYgKGZsb3dDb250ZXh0LmluaXRzT25GaW5hbGx5ICE9IG51bGwpCisvLwkJCQlmbG93Q29u
dGV4dC5pbml0c09uRmluYWxseS5tYXJrQXNEZWZpbml0ZWx5Tm9uTnVsbCh0aGlzLmJpbmRpbmcp
OworCQkJY3VycmVudCA9IGN1cnJlbnQuaW5uZXJUcmFja2VyOworCQl9IHdoaWxlIChjdXJyZW50
ICE9IG51bGwpOwogCX0KIAogCS8qKiBNYXJrIHRoYXQgdGhpcyByZXNvdXJjZSBpcyBjbG9zZWQg
ZnJvbSBhIG5lc3RlZCBtZXRob2QgKGluc2lkZSBhIGxvY2FsIGNsYXNzKS4gKi8KQEAgLTE3OSw1
OSArNTU2LDE2NSBAQCBwdWJsaWMgY2xhc3MgRmFrZWRUcmFja2luZ1ZhcmlhYmxlIGV4dGVuZHMg
TG9jYWxEZWNsYXJhdGlvbiB7CiAJICogTWFyayB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgcGFzc2Vk
IHRvIHNvbWUgb3V0c2lkZSBjb2RlCiAJICogKGFzIGFyZ3VtZW50IHRvIGEgbWV0aG9kL2N0b3Ig
Y2FsbCBvciBhcyBhIHJldHVybiB2YWx1ZSBmcm9tIHRoZSBjdXJyZW50IG1ldGhvZCksIAogCSAq
IGFuZCB0aHVzIHNob3VsZCBiZSBjb25zaWRlcmVkIGFzIHBvdGVudGlhbGx5IGNsb3NlZC4KKwkg
KiBAcGFyYW0gb3duZWQgc2hvdWxkIHRoZSByZXNvdXJjZSBiZSBjb25zaWRlcmVkIG93bmVkIGJ5
IHNvbWUgb3V0c2lkZT8KIAkgKi8KLQlwdWJsaWMgc3RhdGljIEZsb3dJbmZvIG1hcmtQYXNzZWRU
b091dHNpZGUoQmxvY2tTY29wZSBzY29wZSwgRXhwcmVzc2lvbiBleHByZXNzaW9uLCBGbG93SW5m
byBmbG93SW5mbykgeworCXB1YmxpYyBzdGF0aWMgRmxvd0luZm8gbWFya1Bhc3NlZFRvT3V0c2lk
ZShCbG9ja1Njb3BlIHNjb3BlLCBFeHByZXNzaW9uIGV4cHJlc3Npb24sIEZsb3dJbmZvIGZsb3dJ
bmZvLCBib29sZWFuIG93bmVkKSB7CQorCQkKIAkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlIHRyYWNr
VmFyID0gZ2V0Q2xvc2VUcmFja2luZ1ZhcmlhYmxlKGV4cHJlc3Npb24pOwogCQlpZiAodHJhY2tW
YXIgIT0gbnVsbCkgewotCQkJdHJhY2tWYXIuZ2xvYmFsQ2xvc2luZ1N0YXRlIHw9IFBBU1NFRF9U
T19PVVRTSURFOwotCQkJaWYgKHNjb3BlLm1ldGhvZFNjb3BlKCkgIT0gdHJhY2tWYXIubWV0aG9k
U2NvcGUpCi0JCQkJdHJhY2tWYXIuZ2xvYmFsQ2xvc2luZ1N0YXRlIHw9IENMT1NFRF9JTl9ORVNU
RURfTUVUSE9EOworCQkJaWYgKHRyYWNrVmFyLm9yaWdpbmFsQmluZGluZyA9PSBudWxsKSB7CisJ
CQkJLy8gYW4gYWxsb2NhdGlvbiB0aGF0IG5ldmVyIHdhcyBhc3NpZ25lZCB0byBhIGxvY2FsIHZh
cmlhYmxlIC0+IGRyb3AgaXQgY29tcGxldGVseSBhcyB3ZSdyZSBub3QgcmVzcG9uc2libGUKKwkJ
CQlzY29wZS5yZW1vdmVUcmFja2luZ1Zhcih0cmFja1Zhcik7CisJCQkJcmV0dXJuIGZsb3dJbmZv
OworCQkJfQogCQkJLy8gaW5zZXJ0IGluZm8gdGhhdCB0aGUgdHJhY2tlZCByZXNvdXJjZSAqbWF5
KiBiZSBjbG9zZWQgKGJ5IHRoZSB0YXJnZXQgbWV0aG9kLCBpLmUuKQogCQkJRmxvd0luZm8gaW5m
b1Jlc291cmNlSXNDbG9zZWQgPSBmbG93SW5mby5jb3B5KCk7Ci0JCQlpbmZvUmVzb3VyY2VJc0Ns
b3NlZC5tYXJrQXNEZWZpbml0ZWx5Tm9uTnVsbCh0cmFja1Zhci5iaW5kaW5nKTsKKwkJCWludCBm
bGFnID0gb3duZWQgPyBPV05FRF9CWV9PVVRTSURFIDogU0hBUkVEX1dJVEhfT1VUU0lERTsKKwkJ
CWRvIHsKKwkJCQl0cmFja1Zhci5nbG9iYWxDbG9zaW5nU3RhdGUgfD0gZmxhZzsKKwkJCQlpZiAo
c2NvcGUubWV0aG9kU2NvcGUoKSAhPSB0cmFja1Zhci5tZXRob2RTY29wZSkKKwkJCQkJdHJhY2tW
YXIuZ2xvYmFsQ2xvc2luZ1N0YXRlIHw9IENMT1NFRF9JTl9ORVNURURfTUVUSE9EOworCQkJCWlu
Zm9SZXNvdXJjZUlzQ2xvc2VkLm1hcmtBc0RlZmluaXRlbHlOb25OdWxsKHRyYWNrVmFyLmJpbmRp
bmcpOworCQkJfSB3aGlsZSAoKHRyYWNrVmFyID0gdHJhY2tWYXIuaW5uZXJUcmFja2VyKSAhPSBu
dWxsKTsgCiAJCQlyZXR1cm4gRmxvd0luZm8uY29uZGl0aW9uYWwoZmxvd0luZm8sIGluZm9SZXNv
dXJjZUlzQ2xvc2VkKTsKIAkJfQogCQlyZXR1cm4gZmxvd0luZm87CiAJfQotCQorCisJLyoqIAor
CSAqIFBpY2sgdHJhY2tpbmcgdmFyaWFibGVzIGZyb20gJ3ZhcnNPZlNjb3BlJyB0byBlc3RhYmxp
c2ggYSBwcm9wZXIgb3JkZXIgb2YgcHJvY2Vzc2luZzoKKwkgKiBBcyBtdWNoIGFzIHBvc3NpYmxl
IHBpY2sgd3JhcHBlciByZXNvdXJjZXMgYmVmb3JlIHRoZWlyIGlubmVyIHJlc291cmNlcy4KKwkg
KiBBbHNvIGNvbnNpZGVyIGNhc2VzIG9mIHdyYXBwZXJzIGFuZCB0aGVpciBpbm5lcnMgYmVpbmcg
ZGVjbGFyZWQgYXQgZGlmZmVyZW50IHNjb3Blcy4KKwkgKi8KKwlwdWJsaWMgc3RhdGljIEZha2Vk
VHJhY2tpbmdWYXJpYWJsZSBwaWNrVmFyRm9yUmVwb3J0aW5nKFNldCB2YXJzT2ZTY29wZSwgQmxv
Y2tTY29wZSBzY29wZSwgYm9vbGVhbiBhdEV4aXQpIHsKKwkJaWYgKHZhcnNPZlNjb3BlLmlzRW1w
dHkoKSkgcmV0dXJuIG51bGw7CisJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSB0cmFja2luZ1ZhciA9
IChGYWtlZFRyYWNraW5nVmFyaWFibGUpIHZhcnNPZlNjb3BlLml0ZXJhdG9yKCkubmV4dCgpOwor
CQl3aGlsZSAodHJhY2tpbmdWYXIub3V0ZXJUcmFja2VyICE9IG51bGwpIHsKKwkJCS8vIHJlc291
cmNlIGlzIHdyYXBwZWQsIGlzIHdyYXBwZXIgZGVmaW5lZCBpbiB0aGlzIHNjb3BlPworCQkJaWYg
KHZhcnNPZlNjb3BlLmNvbnRhaW5zKHRyYWNraW5nVmFyLm91dGVyVHJhY2tlcikpIHsKKwkJCQkv
LyByZXNvdXJjZSBmcm9tIHNhbWUgc2NvcGUsIHRyYXZlbCB1cCB0aGUgd3JhcHBlciBjaGFpbgor
CQkJCXRyYWNraW5nVmFyID0gdHJhY2tpbmdWYXIub3V0ZXJUcmFja2VyOworCQkJfSBlbHNlIGlm
IChhdEV4aXQpIHsKKwkJCQkvLyBhdCBhbiBleGl0IHBvaW50IHdlIHJlcG9ydCBhZ2FpbnN0IGlu
bmVyIGRlc3BpdGUgYSB3cmFwcGVyIHRoYXQgbWF5L21heSBub3QgYmUgY2xvc2VkIGxhdGVyCisJ
CQkJYnJlYWs7CisJCQl9IGVsc2UgeworCQkJCUJsb2NrU2NvcGUgb3V0ZXJUcmFja2VyU2NvcGUg
PSB0cmFja2luZ1Zhci5vdXRlclRyYWNrZXIuYmluZGluZy5kZWNsYXJpbmdTY29wZTsKKwkJCQlp
ZiAob3V0ZXJUcmFja2VyU2NvcGUgPT0gc2NvcGUpIHsKKwkJCQkJLy8gb3V0ZXJUcmFja2VyIGlz
IGZyb20gc2FtZSBzY29wZSBhbmQgYWxyZWFkeSBwcm9jZXNzZWQgLT4gcGljayB0cmFja2luZ1Zh
ciBub3cKKwkJCQkJYnJlYWs7CisJCQkJfSBlbHNlIHsKKwkJCQkJLy8gb3V0ZXIgcmVzb3VyY2Ug
aXMgZnJvbSBvdGhlciAob3V0ZXI/KSBzY29wZQorCQkJCQlTY29wZSBjdXJyZW50U2NvcGUgPSBz
Y29wZTsKKwkJCQkJd2hpbGUgKChjdXJyZW50U2NvcGUgPSBjdXJyZW50U2NvcGUucGFyZW50KSBp
bnN0YW5jZW9mIEJsb2NrU2NvcGUpIHsKKwkJCQkJCWlmIChvdXRlclRyYWNrZXJTY29wZSA9PSBj
dXJyZW50U2NvcGUpIHsKKwkJCQkJCQkvLyBhdCBlbmQgb2YgYmxvY2sgcGFzcyByZXNwb25zaWJp
bGl0eSBmb3IgaW5uZXIgcmVzb3VyY2UgdG8gb3V0ZXIgc2NvcGUgaG9sZGluZyBhIHdyYXBwZXIK
KwkJCQkJCQl2YXJzT2ZTY29wZS5yZW1vdmUodHJhY2tpbmdWYXIpOyAvLyBkcm9wIHRoaXMgb25l
CisJCQkJCQkJLy8gcGljayBhIG5leHQgY2FuZGlkYXRlOgorCQkJCQkJCXJldHVybiBwaWNrVmFy
Rm9yUmVwb3J0aW5nKHZhcnNPZlNjb3BlLCBzY29wZSwgYXRFeGl0KTsKKwkJCQkJCX0KKwkJCQkJ
fQorCQkJCQlicmVhazsgLy8gbm90IHBhcmVudCBvd25lZCAtPiBwaWNrIHRoaXMgdmFyCisJCQkJ
fQorCQkJfQorCQl9CisJCXZhcnNPZlNjb3BlLnJlbW92ZSh0cmFja2luZ1Zhcik7CisJCXJldHVy
biB0cmFja2luZ1ZhcjsKKwl9CisKKwkvKiogCisJICogSWYgY3VycmVudCBpcyB0aGUgc2FtZSBh
cyAncmV0dXJuZWRSZXNvdXJjZScgb3IgYSB3cmFwcGVyIHRoZXJlb2YsCisJICogbWFyayBhcyBy
ZXBvcnRlZCBhbmQgcmV0dXJuIHRydWUsIG90aGVyd2lzZSBmYWxzZS4KKwkgKi8KKwlwdWJsaWMg
Ym9vbGVhbiBpc1Jlc291cmNlQmVpbmdSZXR1cm5lZChGYWtlZFRyYWNraW5nVmFyaWFibGUgcmV0
dXJuZWRSZXNvdXJjZSkgeworCQlGYWtlZFRyYWNraW5nVmFyaWFibGUgY3VycmVudCA9IHRoaXM7
CisJCWRvIHsKKwkJCWlmIChjdXJyZW50ID09IHJldHVybmVkUmVzb3VyY2UpIHsKKwkJCQl0aGlz
Lmdsb2JhbENsb3NpbmdTdGF0ZSB8PSBSRVBPUlRFRF9ERUZJTklUSVZFX0xFQUs7CisJCQkJcmV0
dXJuIHRydWU7CisJCQl9CisJCQljdXJyZW50ID0gY3VycmVudC5pbm5lclRyYWNrZXI7CisJCX0g
d2hpbGUgKGN1cnJlbnQgIT0gbnVsbCk7CisJCXJldHVybiBmYWxzZTsKKwl9CisKIAlwdWJsaWMg
dm9pZCByZWNvcmRFcnJvckxvY2F0aW9uKEFTVE5vZGUgbG9jYXRpb24sIGludCBudWxsU3RhdHVz
KSB7CiAJCWlmICh0aGlzLnJlY29yZGVkTG9jYXRpb25zID09IG51bGwpCiAJCQl0aGlzLnJlY29y
ZGVkTG9jYXRpb25zID0gbmV3IEhhc2hNYXAoKTsKIAkJdGhpcy5yZWNvcmRlZExvY2F0aW9ucy5w
dXQobG9jYXRpb24sIG5ldyBJbnRlZ2VyKG51bGxTdGF0dXMpKTsKIAl9CiAKLQlwdWJsaWMgYm9v
bGVhbiByZXBvcnRSZWNvcmRlZEVycm9ycyhTY29wZSBzY29wZSkgewotCQlpZiAodGhpcy5nbG9i
YWxDbG9zaW5nU3RhdGUgPT0gMCkgewotCQkJcmVwb3J0RXJyb3Ioc2NvcGUucHJvYmxlbVJlcG9y
dGVyKCksIG51bGwsIEZsb3dJbmZvLk5VTEwpOwotCQkJcmV0dXJuIHRydWU7CisJcHVibGljIGJv
b2xlYW4gcmVwb3J0UmVjb3JkZWRFcnJvcnMoU2NvcGUgc2NvcGUsIGludCBtZXJnZWRTdGF0dXMp
IHsKKwkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlIGN1cnJlbnQgPSB0aGlzOworCQl3aGlsZSAoY3Vy
cmVudC5nbG9iYWxDbG9zaW5nU3RhdGUgPT0gMCkgeworCQkJY3VycmVudCA9IGN1cnJlbnQuaW5u
ZXJUcmFja2VyOworCQkJaWYgKGN1cnJlbnQgPT0gbnVsbCkgeworCQkJCS8vIG5vIHJlbGV2YW50
IHN0YXRlIGZvdW5kIC0+IHJlcG9ydDoKKwkJCQlyZXBvcnRFcnJvcihzY29wZS5wcm9ibGVtUmVw
b3J0ZXIoKSwgbnVsbCwgbWVyZ2VkU3RhdHVzKTsKKwkJCQlyZXR1cm4gdHJ1ZTsKKwkJCX0KIAkJ
fQogCQlib29sZWFuIGhhc1JlcG9ydGVkID0gZmFsc2U7CiAJCWlmICh0aGlzLnJlY29yZGVkTG9j
YXRpb25zICE9IG51bGwpIHsKIAkJCUl0ZXJhdG9yIGxvY2F0aW9ucyA9IHRoaXMucmVjb3JkZWRM
b2NhdGlvbnMuZW50cnlTZXQoKS5pdGVyYXRvcigpOworCQkJaW50IHJlcG9ydEZsYWdzID0gMDsK
IAkJCXdoaWxlIChsb2NhdGlvbnMuaGFzTmV4dCgpKSB7CiAJCQkJTWFwLkVudHJ5IGVudHJ5ID0g
KEVudHJ5KSBsb2NhdGlvbnMubmV4dCgpOwotCQkJCXJlcG9ydEVycm9yKHNjb3BlLnByb2JsZW1S
ZXBvcnRlcigpLCAoQVNUTm9kZSllbnRyeS5nZXRLZXkoKSwgKChJbnRlZ2VyKWVudHJ5LmdldFZh
bHVlKCkpLmludFZhbHVlKCkpOworCQkJCXJlcG9ydEZsYWdzIHw9IHJlcG9ydEVycm9yKHNjb3Bl
LnByb2JsZW1SZXBvcnRlcigpLCAoQVNUTm9kZSllbnRyeS5nZXRLZXkoKSwgKChJbnRlZ2VyKWVu
dHJ5LmdldFZhbHVlKCkpLmludFZhbHVlKCkpOwogCQkJCWhhc1JlcG9ydGVkID0gdHJ1ZTsKIAkJ
CX0KKwkJCWlmIChyZXBvcnRGbGFncyAhPSAwKSB7CisJCQkJLy8gYWZ0ZXIgYWxsIGxvY2F0aW9u
cyBoYXZlIGJlZW4gcmVwb3J0ZWQsIG1hcmsgYXMgcmVwb3J0ZWQgdG8gcHJldmVudCBkdXBsaWNh
dGUgcmVwb3J0IHZpYSBhbiBvdXRlciB3cmFwcGVyCisJCQkJY3VycmVudCA9IHRoaXM7CisJCQkJ
ZG8geworCQkJCQljdXJyZW50Lmdsb2JhbENsb3NpbmdTdGF0ZSB8PSByZXBvcnRGbGFnczsKKwkJ
CQl9IHdoaWxlICgoY3VycmVudCA9IGN1cnJlbnQuaW5uZXJUcmFja2VyKSAhPSBudWxsKTsKKwkJ
CX0KIAkJfQogCQlyZXR1cm4gaGFzUmVwb3J0ZWQ7CiAJfQogCQotCXB1YmxpYyB2b2lkIHJlcG9y
dEVycm9yKFByb2JsZW1SZXBvcnRlciBwcm9ibGVtUmVwb3J0ZXIsIEFTVE5vZGUgbG9jYXRpb24s
IGludCBudWxsU3RhdHVzKSB7CisJcHVibGljIGludCByZXBvcnRFcnJvcihQcm9ibGVtUmVwb3J0
ZXIgcHJvYmxlbVJlcG9ydGVyLCBBU1ROb2RlIGxvY2F0aW9uLCBpbnQgbnVsbFN0YXR1cykgewor
CQkvLyB3aGljaCBkZWdyZWUgb2YgcHJvYmxlbT8KKwkJYm9vbGVhbiBpc1BvdGVudGlhbFByb2Js
ZW0gPSBmYWxzZTsKIAkJaWYgKG51bGxTdGF0dXMgPT0gRmxvd0luZm8uTlVMTCkgewogCQkJaWYg
KCh0aGlzLmdsb2JhbENsb3NpbmdTdGF0ZSAmIENMT1NFRF9JTl9ORVNURURfTUVUSE9EKSAhPSAw
KQotCQkJCXByb2JsZW1SZXBvcnRlci5wb3RlbnRpYWxseVVuY2xvc2VkQ2xvc2VhYmxlKHRoaXMs
IGxvY2F0aW9uKTsKLQkJCWVsc2UKLQkJCQlwcm9ibGVtUmVwb3J0ZXIudW5jbG9zZWRDbG9zZWFi
bGUodGhpcywgbG9jYXRpb24pOworCQkJCWlzUG90ZW50aWFsUHJvYmxlbSA9IHRydWU7CiAJCX0g
ZWxzZSBpZiAobnVsbFN0YXR1cyA9PSBGbG93SW5mby5QT1RFTlRJQUxMWV9OVUxMKSB7Ci0JCQlw
cm9ibGVtUmVwb3J0ZXIucG90ZW50aWFsbHlVbmNsb3NlZENsb3NlYWJsZSh0aGlzLCBsb2NhdGlv
bik7Ci0JCX0JCQorCQkJaXNQb3RlbnRpYWxQcm9ibGVtID0gdHJ1ZTsKKwkJfQorCQkvLyByZXBv
cnQ6CisJCWlmIChpc1BvdGVudGlhbFByb2JsZW0pIHsKKwkJCWlmICgodGhpcy5nbG9iYWxDbG9z
aW5nU3RhdGUgJiAoUkVQT1JURURfUE9URU5USUFMX0xFQUt8UkVQT1JURURfREVGSU5JVElWRV9M
RUFLKSkgIT0gMCkKKwkJCQlyZXR1cm4gMDsKKwkJCXByb2JsZW1SZXBvcnRlci5wb3RlbnRpYWxs
eVVuY2xvc2VkQ2xvc2VhYmxlKHRoaXMsIGxvY2F0aW9uKTsJCisJCX0gZWxzZSB7CisJCQlpZiAo
KHRoaXMuZ2xvYmFsQ2xvc2luZ1N0YXRlICYgKFJFUE9SVEVEX0RFRklOSVRJVkVfTEVBSykpICE9
IDApCisJCQkJcmV0dXJuIDA7CisJCQlwcm9ibGVtUmVwb3J0ZXIudW5jbG9zZWRDbG9zZWFibGUo
dGhpcywgbG9jYXRpb24pOwkJCQorCQl9CisJCS8vIHByb3BhZ2F0ZSBmbGFnIHRvIGlubmVyczoK
KwkJaW50IHJlcG9ydEZsYWcgPSBpc1BvdGVudGlhbFByb2JsZW0gPyBSRVBPUlRFRF9QT1RFTlRJ
QUxfTEVBSyA6IFJFUE9SVEVEX0RFRklOSVRJVkVfTEVBSzsKKwkJaWYgKGxvY2F0aW9uID09IG51
bGwpIHsgLy8gaWYgbG9jYXRpb24gIT0gbnVsbCBmbGFncyB3aWxsIGJlIHNldCBhZnRlciB0aGUg
bG9vcCBvdmVyIGxvY2F0aW9ucyAKKwkJCUZha2VkVHJhY2tpbmdWYXJpYWJsZSBjdXJyZW50ID0g
dGhpczsKKwkJCWRvIHsKKwkJCQljdXJyZW50Lmdsb2JhbENsb3NpbmdTdGF0ZSB8PSByZXBvcnRG
bGFnOworCQkJfSB3aGlsZSAoKGN1cnJlbnQgPSBjdXJyZW50LmlubmVyVHJhY2tlcikgIT0gbnVs
bCk7CisJCX0KKwkJcmV0dXJuIHJlcG9ydEZsYWc7CiAJfQogCiAJcHVibGljIHZvaWQgcmVwb3J0
RXhwbGljaXRDbG9zaW5nKFByb2JsZW1SZXBvcnRlciBwcm9ibGVtUmVwb3J0ZXIpIHsKLQkJaWYg
KCh0aGlzLmdsb2JhbENsb3NpbmdTdGF0ZSAmIFJFUE9SVEVEKSA9PSAwKSB7Ci0JCQl0aGlzLmds
b2JhbENsb3NpbmdTdGF0ZSB8PSBSRVBPUlRFRDsKKwkJaWYgKCh0aGlzLmdsb2JhbENsb3NpbmdT
dGF0ZSAmIChPV05FRF9CWV9PVVRTSURFfFJFUE9SVEVEX0VYUExJQ0lUX0NMT1NFKSkgPT0gMCkg
eyAvLyBjYW4ndCB1c2UgdC13LXIgZm9yIE9XTkVEX0JZX09VVFNJREUKKwkJCXRoaXMuZ2xvYmFs
Q2xvc2luZ1N0YXRlIHw9IFJFUE9SVEVEX0VYUExJQ0lUX0NMT1NFOwogCQkJcHJvYmxlbVJlcG9y
dGVyLmV4cGxpY2l0bHlDbG9zZWRBdXRvQ2xvc2VhYmxlKHRoaXMpOwogCQl9CiAJfQorCisJcHVi
bGljIHZvaWQgcmVzZXRSZXBvcnRpbmdCaXRzKCkgeworCQlGYWtlZFRyYWNraW5nVmFyaWFibGUg
Y3VycmVudCA9IHRoaXM7CisJCWRvIHsKKwkJCWN1cnJlbnQuZ2xvYmFsQ2xvc2luZ1N0YXRlICY9
IH4oUkVQT1JURURfUE9URU5USUFMX0xFQUt8UkVQT1JURURfREVGSU5JVElWRV9MRUFLKTsKKwkJ
CWN1cnJlbnQgPSBjdXJyZW50LmlubmVyVHJhY2tlcjsKKwkJfSB3aGlsZSAoY3VycmVudCAhPSBu
dWxsKTsKKwl9CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0xvY2FsRGVjbGFyYXRpb24uamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9hc3QvTG9jYWxEZWNsYXJhdGlvbi5qYXZhCmluZGV4IGRhYzAyOWMuLjkxODA4
ZGIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTG9jYWxEZWNsYXJhdGlvbi5qYXZhCisrKyBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9hc3QvTG9jYWxEZWNsYXJhdGlvbi5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQg
dGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0
aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNj
b21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTEzLDYg
KzEzLDcgQEAKICAqCQkJCQkJCWJ1ZyAzMzUwOTMgLSBbY29tcGlsZXJdW251bGxdIG1pbmltYWwg
aG9vayBmb3IgZnV0dXJlIG51bGwgYW5ub3RhdGlvbiBzdXBwb3J0CiAgKgkJCQkJCQlidWcgMzQ5
MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCiAg
KgkJCQkJCQlidWcgMTg2MzQyIC0gW2NvbXBpbGVyXVtudWxsXSBVc2luZyBhbm5vdGF0aW9ucyBm
b3IgbnVsbCBjaGVja2luZworICoJCQkJCQkJYnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxs
eSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCiAgKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdDsKIApA
QCAtNzQsMTEgKzc1LDI2IEBAIHB1YmxpYyBGbG93SW5mbyBhbmFseXNlQ29kZShCbG9ja1Njb3Bl
IGN1cnJlbnRTY29wZSwgRmxvd0NvbnRleHQgZmxvd0NvbnRleHQsIEZsCiAJCXRoaXMuaW5pdGlh
bGl6YXRpb24uY2hlY2tOUEUoY3VycmVudFNjb3BlLCBmbG93Q29udGV4dCwgZmxvd0luZm8pOwog
CX0KIAkKKwlGbG93SW5mbyBwcmVJbml0SW5mbyA9IG51bGw7CisJYm9vbGVhbiBzaG91bGRBbmFs
eXNlUmVzb3VyY2UgPSB0aGlzLmJpbmRpbmcgIT0gbnVsbCAKKwkJCSYmIGZsb3dJbmZvLnJlYWNo
TW9kZSgpID09IEZsb3dJbmZvLlJFQUNIQUJMRSAKKwkJCSYmIEZha2VkVHJhY2tpbmdWYXJpYWJs
ZS5pc0FueUNsb3NlYWJsZSh0aGlzLmluaXRpYWxpemF0aW9uLnJlc29sdmVkVHlwZSk7CisJaWYg
KHNob3VsZEFuYWx5c2VSZXNvdXJjZSkgeworCQlwcmVJbml0SW5mbyA9IGZsb3dJbmZvLnVuY29u
ZGl0aW9uYWxDb3B5KCk7CisJCS8vIGFuYWx5c2lzIG9mIHJlc291cmNlIGxlYWtzIG5lZWRzIGFk
ZGl0aW9uYWwgY29udGV4dCB3aGlsZSBhbmFseXppbmcgdGhlIFJIUzoKKwkJRmFrZWRUcmFja2lu
Z1ZhcmlhYmxlLnByZUNvbm5lY3RUcmFja2VyQWNyb3NzQXNzaWdubWVudCh0aGlzLCB0aGlzLmJp
bmRpbmcsIHRoaXMuaW5pdGlhbGl6YXRpb24pOworCX0KKwogCWZsb3dJbmZvID0KIAkJdGhpcy5p
bml0aWFsaXphdGlvbgogCQkJLmFuYWx5c2VDb2RlKGN1cnJlbnRTY29wZSwgZmxvd0NvbnRleHQs
IGZsb3dJbmZvKQogCQkJLnVuY29uZGl0aW9uYWxJbml0cygpOwotCUZha2VkVHJhY2tpbmdWYXJp
YWJsZS5oYW5kbGVSZXNvdXJjZUFzc2lnbm1lbnQoZmxvd0luZm8sIHRoaXMsIHRoaXMuaW5pdGlh
bGl6YXRpb24sIHRoaXMuYmluZGluZywgbnVsbCk7CisKKwlpZiAoc2hvdWxkQW5hbHlzZVJlc291
cmNlKQorCQlGYWtlZFRyYWNraW5nVmFyaWFibGUuaGFuZGxlUmVzb3VyY2VBc3NpZ25tZW50KGN1
cnJlbnRTY29wZSwgcHJlSW5pdEluZm8sIGZsb3dJbmZvLCB0aGlzLCB0aGlzLmluaXRpYWxpemF0
aW9uLCB0aGlzLmJpbmRpbmcpOworCWVsc2UKKwkJRmFrZWRUcmFja2luZ1ZhcmlhYmxlLmNsZWFu
VXBBZnRlckFzc2lnbm1lbnQoY3VycmVudFNjb3BlLCBCaW5kaW5nLkxPQ0FMLCB0aGlzLmluaXRp
YWxpemF0aW9uKTsKKwogCWludCBudWxsU3RhdHVzID0gdGhpcy5pbml0aWFsaXphdGlvbi5udWxs
U3RhdHVzKGZsb3dJbmZvKTsKIAlpZiAoIWZsb3dJbmZvLmlzRGVmaW5pdGVseUFzc2lnbmVkKHRo
aXMuYmluZGluZykpey8vIGZvciBsb2NhbCB2YXJpYWJsZSBkZWJ1ZyBhdHRyaWJ1dGVzCiAJCXRo
aXMuYml0cyB8PSBGaXJzdEFzc2lnbm1lbnRUb0xvY2FsOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Fz
dC9NZXNzYWdlU2VuZC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9NZXNzYWdlU2VuZC5qYXZhCmluZGV4IDQ2
ZDQ1NDAuLjBkZGE1M2YgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTWVzc2FnZVNlbmQuamF2YQor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvYXN0L01lc3NhZ2VTZW5kLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3Jh
dGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3Jh
dGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFu
ZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVy
IHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBh
Y2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtMTIs
NiArMTIsNyBAQAogICoJCQkJCQkJCWJ1ZyAzMTkyMDEgLSBbbnVsbF0gbm8gd2FybmluZyB3aGVu
IHVuYm94aW5nIFNpbmdsZU5hbWVSZWZlcmVuY2UgY2F1c2VzIE5QRQogICoJCQkJCQkJCWJ1ZyAz
NDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnktd2l0aC1yZXNvdXJjZXMK
ICAqCQkJCQkJCQlidWcgMTg2MzQyIC0gW2NvbXBpbGVyXVtudWxsXSBVc2luZyBhbm5vdGF0aW9u
cyBmb3IgbnVsbCBjaGVja2luZworICoJCQkJCQkJCWJ1ZyAzNTg5MDMgLSBGaWx0ZXIgcHJhY3Rp
Y2FsbHkgdW5pbXBvcnRhbnQgcmVzb3VyY2UgbGVhayB3YXJuaW5ncwogICoqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3Q7
CiAKQEAgLTk2LDkgKzk3LDkgQEAgcHVibGljIEZsb3dJbmZvIGFuYWx5c2VDb2RlKEJsb2NrU2Nv
cGUgY3VycmVudFNjb3BlLCBGbG93Q29udGV4dCBmbG93Q29udGV4dCwgRmwKIAkJCWlmICgodGhp
cy5hcmd1bWVudHNbaV0uaW1wbGljaXRDb252ZXJzaW9uICYgVHlwZUlkcy5VTkJPWElORykgIT0g
MCkgewogCQkJCXRoaXMuYXJndW1lbnRzW2ldLmNoZWNrTlBFKGN1cnJlbnRTY29wZSwgZmxvd0Nv
bnRleHQsIGZsb3dJbmZvKTsKIAkJCX0KLQkJCS8vIGlmIGFyZ3VtZW50IGlzIGFuIEF1dG9DbG9z
ZWFibGUgaW5zZXJ0IGluZm8gdGhhdCBpdCAqbWF5KiBiZSBjbG9zZWQgKGJ5IHRoZSB0YXJnZXQg
bWV0aG9kLCBpLmUuKQotCQkJZmxvd0luZm8gPSBGYWtlZFRyYWNraW5nVmFyaWFibGUubWFya1Bh
c3NlZFRvT3V0c2lkZShjdXJyZW50U2NvcGUsIHRoaXMuYXJndW1lbnRzW2ldLCBmbG93SW5mbyk7
CiAJCQlmbG93SW5mbyA9IHRoaXMuYXJndW1lbnRzW2ldLmFuYWx5c2VDb2RlKGN1cnJlbnRTY29w
ZSwgZmxvd0NvbnRleHQsIGZsb3dJbmZvKS51bmNvbmRpdGlvbmFsSW5pdHMoKTsKKwkJCS8vIGlm
IGFyZ3VtZW50IGlzIGFuIEF1dG9DbG9zZWFibGUgaW5zZXJ0IGluZm8gdGhhdCBpdCAqbWF5KiBi
ZSBjbG9zZWQgKGJ5IHRoZSB0YXJnZXQgbWV0aG9kLCBpLmUuKQorCQkJZmxvd0luZm8gPSBGYWtl
ZFRyYWNraW5nVmFyaWFibGUubWFya1Bhc3NlZFRvT3V0c2lkZShjdXJyZW50U2NvcGUsIHRoaXMu
YXJndW1lbnRzW2ldLCBmbG93SW5mbywgZmFsc2UpOwogCQl9CiAJCWFuYWx5c2VBcmd1bWVudHMo
Y3VycmVudFNjb3BlLCBmbG93Q29udGV4dCwgZmxvd0luZm8sIHRoaXMuYmluZGluZywgdGhpcy5h
cmd1bWVudHMpOwogCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvUXVhbGlmaWVkQWxsb2NhdGlv
bkV4cHJlc3Npb24uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvUXVhbGlmaWVkQWxsb2NhdGlvbkV4cHJlc3Np
b24uamF2YQppbmRleCAzYTJhMGVkLi42NzM5YmJjIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1F1
YWxpZmllZEFsbG9jYXRpb25FeHByZXNzaW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9RdWFsaWZp
ZWRBbGxvY2F0aW9uRXhwcmVzc2lvbi5qYXZhCkBAIC04MSw3ICs4MSw3IEBAIHB1YmxpYyBjbGFz
cyBRdWFsaWZpZWRBbGxvY2F0aW9uRXhwcmVzc2lvbiBleHRlbmRzIEFsbG9jYXRpb25FeHByZXNz
aW9uIHsKIAkJaWYgKHRoaXMuYXJndW1lbnRzICE9IG51bGwpIHsKIAkJCWZvciAoaW50IGkgPSAw
LCBjb3VudCA9IHRoaXMuYXJndW1lbnRzLmxlbmd0aDsgaSA8IGNvdW50OyBpKyspIHsKIAkJCQkv
LyBpZiBhcmd1bWVudCBpcyBhbiBBdXRvQ2xvc2VhYmxlIGluc2VydCBpbmZvIHRoYXQgaXQgKm1h
eSogYmUgY2xvc2VkIChieSB0aGUgdGFyZ2V0IG1ldGhvZCwgaS5lLikKLQkJCQlmbG93SW5mbyA9
IEZha2VkVHJhY2tpbmdWYXJpYWJsZS5tYXJrUGFzc2VkVG9PdXRzaWRlKGN1cnJlbnRTY29wZSwg
dGhpcy5hcmd1bWVudHNbaV0sIGZsb3dJbmZvKTsKKwkJCQlmbG93SW5mbyA9IEZha2VkVHJhY2tp
bmdWYXJpYWJsZS5tYXJrUGFzc2VkVG9PdXRzaWRlKGN1cnJlbnRTY29wZSwgdGhpcy5hcmd1bWVu
dHNbaV0sIGZsb3dJbmZvLCBmYWxzZSk7CiAJCQkJZmxvd0luZm8gPSB0aGlzLmFyZ3VtZW50c1tp
XS5hbmFseXNlQ29kZShjdXJyZW50U2NvcGUsIGZsb3dDb250ZXh0LCBmbG93SW5mbyk7CiAJCQkJ
aWYgKCh0aGlzLmFyZ3VtZW50c1tpXS5pbXBsaWNpdENvbnZlcnNpb24gJiBUeXBlSWRzLlVOQk9Y
SU5HKSAhPSAwKSB7CiAJCQkJCXRoaXMuYXJndW1lbnRzW2ldLmNoZWNrTlBFKGN1cnJlbnRTY29w
ZSwgZmxvd0NvbnRleHQsIGZsb3dJbmZvKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvUmV0dXJu
U3RhdGVtZW50LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1JldHVyblN0YXRlbWVudC5qYXZhCmluZGV4IDE4
YTFiYzEuLjYxMGY1NWIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvUmV0dXJuU3RhdGVtZW50Lmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2FzdC9SZXR1cm5TdGF0ZW1lbnQuamF2YQpAQCAtMTMsNiArMTMsNyBA
QAogICogICAgIAkJCQkJCQlidWcgMzYwMzI4IC0gW2NvbXBpbGVyXVtudWxsXSBkZXRlY3QgbnVs
bCBwcm9ibGVtcyBpbiBuZXN0ZWQgY29kZSAobG9jYWwgY2xhc3MgaW5zaWRlIGEgbG9vcCkKICAq
CQkJCQkJCQlidWcgMTg2MzQyIC0gW2NvbXBpbGVyXVtudWxsXSBVc2luZyBhbm5vdGF0aW9ucyBm
b3IgbnVsbCBjaGVja2luZwogICoJCQkJCQkJCWJ1ZyAzNjU4MzUgLSBbY29tcGlsZXJdW251bGxd
IGluY29uc2lzdGVudCBlcnJvciByZXBvcnRpbmcuCisgKgkJCQkJCQkJYnVnIDM1ODkwMyAtIEZp
bHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCiAgKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmFzdDsKIApAQCAtNTIsOSArNTMsOCBAQCBwdWJsaWMgRmxvd0luZm8gYW5hbHlzZUNv
ZGUoQmxvY2tTY29wZSBjdXJyZW50U2NvcGUsIEZsb3dDb250ZXh0IGZsb3dDb250ZXh0LCBGbAog
CQlpZiAodHJhY2tpbmdWYXJpYWJsZSAhPSBudWxsKSB7CiAJCQlpZiAobWV0aG9kU2NvcGUgIT0g
dHJhY2tpbmdWYXJpYWJsZS5tZXRob2RTY29wZSkKIAkJCQl0cmFja2luZ1ZhcmlhYmxlLm1hcmtD
bG9zZWRJbk5lc3RlZE1ldGhvZCgpOwotCQkJLy8gZG9uJ3QgcmVwb3J0IGlzc3VlcyBjb25jZXJu
aW5nIHRoaXMgbG9jYWwsIHNpbmNlIGJ5IHJldHVybmluZwotCQkJLy8gdGhlIG1ldGhvZCBwYXNz
ZXMgdGhlIHJlc3BvbnNpYmlsaXR5IHRvIHRoZSBjYWxsZXI6Ci0JCQljdXJyZW50U2NvcGUucmVt
b3ZlVHJhY2tpbmdWYXIodHJhY2tpbmdWYXJpYWJsZSk7CisJCQkvLyBieSByZXR1cm5pbmcgdGhl
IG1ldGhvZCBwYXNzZXMgdGhlIHJlc3BvbnNpYmlsaXR5IHRvIHRoZSBjYWxsZXI6CisJCQlmbG93
SW5mbyA9IEZha2VkVHJhY2tpbmdWYXJpYWJsZS5tYXJrUGFzc2VkVG9PdXRzaWRlKGN1cnJlbnRT
Y29wZSwgdGhpcy5leHByZXNzaW9uLCBmbG93SW5mbywgdHJ1ZSk7CiAJCX0KIAl9CiAJdGhpcy5p
bml0U3RhdGVJbmRleCA9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1RyeVN0YXRlbWVudC5qYXZh
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2FzdC9UcnlTdGF0ZW1lbnQuamF2YQppbmRleCA5ZmFlMDA5Li4wNTM0OTcwIDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXN0L1RyeVN0YXRlbWVudC5qYXZhCisrKyBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3Qv
VHJ5U3RhdGVtZW50LmphdmEKQEAgLTEyLDYgKzEyLDcgQEAKICAqICAgICAJCQkJCQkJYnVnIDM1
ODgyNyAtIFsxLjddIGV4Y2VwdGlvbiBhbmFseXNpcyBmb3IgdC13LXIgc3BvaWxzIG51bGwgYW5h
bHlzaXMKICAqICAgICAJCQkJCQkJYnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBt
aXNzaW5nIHRyeS13aXRoLXJlc291cmNlcwogICogICAgIAkJCQkJCQlidWcgMzU5MzM0IC0gQW5h
bHlzaXMgZm9yIHJlc291cmNlIGxlYWsgd2FybmluZ3MgZG9lcyBub3QgY29uc2lkZXIgZXhjZXB0
aW9ucyBhcyBtZXRob2QgZXhpdCBwb2ludHMKKyAqCQkJCQkJCQlidWcgMzU4OTAzIC0gRmlsdGVy
IHByYWN0aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsgd2FybmluZ3MKICAqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIuYXN0OwogCkBAIC0xMzQsNyArMTM1LDcgQEAgcHVibGljIEZsb3dJbmZvIGFuYWx5c2VDb2Rl
KEJsb2NrU2NvcGUgY3VycmVudFNjb3BlLCBGbG93Q29udGV4dCBmbG93Q29udGV4dCwgRmwKIAkJ
CWlmIChyZXNvdXJjZUJpbmRpbmcuY2xvc2VUcmFja2VyICE9IG51bGwpIHsKIAkJCQkvLyB0aGlz
IHdhcyBmYWxzZSBhbGFybSwgd2UgZG9uJ3QgbmVlZCB0byB0cmFjayB0aGUgcmVzb3VyY2UKIAkJ
CQl0aGlzLnRyeUJsb2NrLnNjb3BlLnJlbW92ZVRyYWNraW5nVmFyKHJlc291cmNlQmluZGluZy5j
bG9zZVRyYWNrZXIpOwotCQkJCXJlc291cmNlQmluZGluZy5jbG9zZVRyYWNrZXIgPSBudWxsOwor
CQkJCS8vIGtlZXAgdGhlIHRyYWNraW5nIHZhcmlhYmxlIGluIHRoZSByZXNvdXJjZUJpbmRpbmcg
aW4gb3JkZXIgdG8gcHJldmVudCBjcmVhdGluZyBhIG5ldyBvbmUgd2hpbGUgYW5hbHl6aW5nIHRo
ZSB0cnkgYmxvY2sKIAkJCX0KIAkJCVR5cGVCaW5kaW5nIHR5cGUgPSByZXNvdXJjZUJpbmRpbmcu
dHlwZTsKIAkJCWlmICh0eXBlICE9IG51bGwgJiYgdHlwZS5pc1ZhbGlkQmluZGluZygpKSB7CkBA
IC0yNzYsNyArMjc3LDcgQEAgcHVibGljIEZsb3dJbmZvIGFuYWx5c2VDb2RlKEJsb2NrU2NvcGUg
Y3VycmVudFNjb3BlLCBGbG93Q29udGV4dCBmbG93Q29udGV4dCwgRmwKIAkJCWlmIChyZXNvdXJj
ZUJpbmRpbmcuY2xvc2VUcmFja2VyICE9IG51bGwpIHsKIAkJCQkvLyB0aGlzIHdhcyBmYWxzZSBh
bGFybSwgd2UgZG9uJ3QgbmVlZCB0byB0cmFjayB0aGUgcmVzb3VyY2UKIAkJCQl0aGlzLnRyeUJs
b2NrLnNjb3BlLnJlbW92ZVRyYWNraW5nVmFyKHJlc291cmNlQmluZGluZy5jbG9zZVRyYWNrZXIp
OwotCQkJCXJlc291cmNlQmluZGluZy5jbG9zZVRyYWNrZXIgPSBudWxsOworCQkJCS8vIGtlZXAg
dGhlIHRyYWNraW5nIHZhcmlhYmxlIGluIHRoZSByZXNvdXJjZUJpbmRpbmcgaW4gb3JkZXIgdG8g
cHJldmVudCBjcmVhdGluZyBhIG5ldyBvbmUgd2hpbGUgYW5hbHl6aW5nIHRoZSB0cnkgYmxvY2sK
IAkJCX0gCiAJCQlUeXBlQmluZGluZyB0eXBlID0gcmVzb3VyY2VCaW5kaW5nLnR5cGU7CiAJCQlp
ZiAodHlwZSAhPSBudWxsICYmIHR5cGUuaXNWYWxpZEJpbmRpbmcoKSkgewpkaWZmIC0tZ2l0IGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9CaW5hcnlUeXBlQmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9CaW5h
cnlUeXBlQmluZGluZy5qYXZhCmluZGV4IDkyOTQ3MjYuLmRlMTdjMDcgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9sb29rdXAvQmluYXJ5VHlwZUJpbmRpbmcuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Jp
bmFyeVR5cGVCaW5kaW5nLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21w
YW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBv
ZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0
aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtMTEsNiArMTEsNyBAQAog
ICoJCQkJCQkJCWJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0cnkt
d2l0aC1yZXNvdXJjZXMKICAqCQkJCQkJCQlidWcgMTg2MzQyIC0gW2NvbXBpbGVyXVtudWxsXSBV
c2luZyBhbm5vdGF0aW9ucyBmb3IgbnVsbCBjaGVja2luZwogICoJCQkJCQkJCWJ1ZyAzNjQ4OTAg
LSBCaW5hcnlUeXBlQmluZGluZyBzaG91bGQgdXNlIGNoYXIgY29uc3RhbnRzIGZyb20gVXRpbAor
ICoJCQkJCQkJCWJ1ZyAzNTg5MDMgLSBGaWx0ZXIgcHJhY3RpY2FsbHkgdW5pbXBvcnRhbnQgcmVz
b3VyY2UgbGVhayB3YXJuaW5ncwogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXA7CiAKQEAgLTEyNzUsNyArMTI3
Niw5IEBAIHB1YmxpYyBSZWZlcmVuY2VCaW5kaW5nIHN1cGVyY2xhc3MoKSB7CiAJCQl0aGlzLmVu
dmlyb25tZW50Lm1heVRvbGVyYXRlTWlzc2luZ1R5cGUgPSB3YXNUb2xlcmF0aW5nTWlzc2luZ1R5
cGVQcm9jZXNzaW5nQW5ub3RhdGlvbnM7CiAJCX0KIAl9Ci0JdGhpcy50eXBlQml0cyB8PSB0aGlz
LnN1cGVyY2xhc3MudHlwZUJpdHM7CisJdGhpcy50eXBlQml0cyB8PSAodGhpcy5zdXBlcmNsYXNz
LnR5cGVCaXRzICYgVHlwZUlkcy5Jbmhlcml0YWJsZUJpdHMpOworCWlmICgodGhpcy50eXBlQml0
cyAmIChUeXBlSWRzLkJpdEF1dG9DbG9zZWFibGV8VHlwZUlkcy5CaXRDbG9zZWFibGUpKSAhPSAw
KSAvLyBhdm9pZCB0aGUgc2lkZS1lZmZlY3RzIG9mIGhhc1R5cGVCaXQoKSEgCisJCXRoaXMudHlw
ZUJpdHMgfD0gYXBwbHlDbG9zZWFibGVXaGl0ZWxpc3RzKCk7CiAJcmV0dXJuIHRoaXMuc3VwZXJj
bGFzczsKIH0KIC8vIE5PVEU6IHN1cGVySW50ZXJmYWNlcyBvZiBiaW5hcnkgdHlwZXMgYXJlIHJl
c29sdmVkIHdoZW4gbmVlZGVkCkBAIC0xMjk4LDcgKzEzMDEsNyBAQCBwdWJsaWMgUmVmZXJlbmNl
QmluZGluZ1tdIHN1cGVySW50ZXJmYWNlcygpIHsKIAkJCQl0aGlzLmVudmlyb25tZW50Lm1heVRv
bGVyYXRlTWlzc2luZ1R5cGUgPSB3YXNUb2xlcmF0aW5nTWlzc2luZ1R5cGVQcm9jZXNzaW5nQW5u
b3RhdGlvbnM7CiAJCQl9CQogCQl9Ci0JCXRoaXMudHlwZUJpdHMgfD0gdGhpcy5zdXBlckludGVy
ZmFjZXNbaV0udHlwZUJpdHM7CisJCXRoaXMudHlwZUJpdHMgfD0gKHRoaXMuc3VwZXJJbnRlcmZh
Y2VzW2ldLnR5cGVCaXRzICYgVHlwZUlkcy5Jbmhlcml0YWJsZUJpdHMpOwogCX0KIAl0aGlzLnRh
Z0JpdHMgJj0gflRhZ0JpdHMuSGFzVW5yZXNvbHZlZFN1cGVyaW50ZXJmYWNlczsKIAlyZXR1cm4g
dGhpcy5zdXBlckludGVyZmFjZXM7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9j
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Jsb2NrU2Nv
cGUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9sb29rdXAvQmxvY2tTY29wZS5qYXZhCmluZGV4IGM5M2M5ZDkuLjMz
YzNiNmYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQmxvY2tTY29wZS5qYXZhCisrKyBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9sb29rdXAvQmxvY2tTY29wZS5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24g
YW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24g
YW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhl
IGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUg
dGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21w
YW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTEwLDExICsx
MCwxNCBAQAogICogICAgIFN0ZXBoYW4gSGVycm1hbm4gLSBDb250cmlidXRpb25zIGZvcgogICog
ICAgIAkJCQkJCQlidWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3NpbmcgdHJ5
LXdpdGgtcmVzb3VyY2VzCiAgKgkJCQkJCQkJYnVnIDM1OTMzNCAtIEFuYWx5c2lzIGZvciByZXNv
dXJjZSBsZWFrIHdhcm5pbmdzIGRvZXMgbm90IGNvbnNpZGVyIGV4Y2VwdGlvbnMgYXMgbWV0aG9k
IGV4aXQgcG9pbnRzCisgKgkJCQkJCQkJYnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1
bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCiAgKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
Ki8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cDsKIAog
aW1wb3J0IGphdmEudXRpbC5BcnJheUxpc3Q7CitpbXBvcnQgamF2YS51dGlsLkhhc2hTZXQ7CiBp
bXBvcnQgamF2YS51dGlsLkxpc3Q7CitpbXBvcnQgamF2YS51dGlsLlNldDsKIAogaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLkNoYXJPcGVyYXRpb247CiBpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC4qOwpAQCAtOTc2LDE3ICs5NzksMjQgQEAg
cHVibGljIGludCByZWdpc3RlclRyYWNraW5nVmFyaWFibGUoRmFrZWRUcmFja2luZ1ZhcmlhYmxl
IGZha2VkVHJhY2tpbmdWYXJpYWJsZSkKIAkJdGhpcy50cmFja2luZ1ZhcmlhYmxlcyA9IG5ldyBB
cnJheUxpc3QoMyk7CiAJdGhpcy50cmFja2luZ1ZhcmlhYmxlcy5hZGQoZmFrZWRUcmFja2luZ1Zh
cmlhYmxlKTsKIAlNZXRob2RTY29wZSBvdXRlck1ldGhvZFNjb3BlID0gb3V0ZXJNb3N0TWV0aG9k
U2NvcGUoKTsKLQlyZXR1cm4gb3V0ZXJNZXRob2RTY29wZS5hbmFseXNpc0luZGV4ICsgKG91dGVy
TWV0aG9kU2NvcGUudHJhY2tWYXJDb3VudCsrKTsKLQkKKwlyZXR1cm4gb3V0ZXJNZXRob2RTY29w
ZS5hbmFseXNpc0luZGV4Kys7CiB9CiAvKiogV2hlbiBhcmUgbm8gbG9uZ2VyIGludGVyZXN0ZWQg
aW4gdGhpcyB0cmFja2luZyB2YXJpYWJsZSAtIHJlbW92ZSBpdC4gKi8KIHB1YmxpYyB2b2lkIHJl
bW92ZVRyYWNraW5nVmFyKEZha2VkVHJhY2tpbmdWYXJpYWJsZSB0cmFja2luZ1ZhcmlhYmxlKSB7
CisJaWYgKHRyYWNraW5nVmFyaWFibGUuaW5uZXJUcmFja2VyICE9IG51bGwpIHsKKwkJcmVtb3Zl
VHJhY2tpbmdWYXIodHJhY2tpbmdWYXJpYWJsZS5pbm5lclRyYWNrZXIpOworCQl0cmFja2luZ1Zh
cmlhYmxlLmlubmVyVHJhY2tlciA9IG51bGw7CisJfQogCWlmICh0aGlzLnRyYWNraW5nVmFyaWFi
bGVzICE9IG51bGwpCiAJCWlmICh0aGlzLnRyYWNraW5nVmFyaWFibGVzLnJlbW92ZSh0cmFja2lu
Z1ZhcmlhYmxlKSkKIAkJCXJldHVybjsKIAlpZiAodGhpcy5wYXJlbnQgaW5zdGFuY2VvZiBCbG9j
a1Njb3BlKQogCQkoKEJsb2NrU2NvcGUpdGhpcy5wYXJlbnQpLnJlbW92ZVRyYWNraW5nVmFyKHRy
YWNraW5nVmFyaWFibGUpOwogfQorLyoqIFVucmVnaXN0ZXIgYSB3cmFwcGVyIHJlc291cmNlIHdp
dGhvdXQgYWZmZWN0aW5nIGl0cyBpbm5lci4gKi8KK3B1YmxpYyB2b2lkIHBydW5lV3JhcHBlclRy
YWNraW5nVmFyKEZha2VkVHJhY2tpbmdWYXJpYWJsZSB0cmFja2luZ1ZhcmlhYmxlKSB7CisJdGhp
cy50cmFja2luZ1ZhcmlhYmxlcy5yZW1vdmUodHJhY2tpbmdWYXJpYWJsZSk7Cit9CiAvKioKICAq
IEF0IHRoZSBlbmQgb2YgYSBibG9jayBjaGVjayB0aGUgY2xvc2luZy1zdGF0dXMgb2YgYWxsIHRy
YWNrZWQgY2xvc2VhYmxlcyB0aGF0IGFyZSBkZWNsYXJlZCBpbiB0aGlzIGJsb2NrLgogICogQWxz
byBpbnZva2VkIHdoZW4gZW50ZXJpbmcgdW5yZWFjaGFibGUgY29kZS4KQEAgLTk5OSwxNCArMTAw
OSwyNSBAQCBwdWJsaWMgdm9pZCBjaGVja1VuY2xvc2VkQ2xvc2VhYmxlcyhGbG93SW5mbyBmbG93
SW5mbywgQVNUTm9kZSBsb2NhdGlvbiwgQmxvY2tTYwogCQlyZXR1cm47CiAJfQogCWlmIChsb2Nh
dGlvbiAhPSBudWxsICYmIGZsb3dJbmZvLnJlYWNoTW9kZSgpICE9IDApIHJldHVybjsKLQlmb3Ig
KGludCBpPTA7IGk8dGhpcy50cmFja2luZ1ZhcmlhYmxlcy5zaXplKCk7IGkrKykgewotCQlGYWtl
ZFRyYWNraW5nVmFyaWFibGUgdHJhY2tpbmdWYXIgPSAoRmFrZWRUcmFja2luZ1ZhcmlhYmxlKSB0
aGlzLnRyYWNraW5nVmFyaWFibGVzLmdldChpKTsKKworCUZha2VkVHJhY2tpbmdWYXJpYWJsZSBy
ZXR1cm5WYXIgPSAobG9jYXRpb24gaW5zdGFuY2VvZiBSZXR1cm5TdGF0ZW1lbnQpID8KKwkJCUZh
a2VkVHJhY2tpbmdWYXJpYWJsZS5nZXRDbG9zZVRyYWNraW5nVmFyaWFibGUoKChSZXR1cm5TdGF0
ZW1lbnQpbG9jYXRpb24pLmV4cHJlc3Npb24pIDogbnVsbDsKKworCVNldCB2YXJTZXQgPSBuZXcg
SGFzaFNldCh0aGlzLnRyYWNraW5nVmFyaWFibGVzKTsKKwlGYWtlZFRyYWNraW5nVmFyaWFibGUg
dHJhY2tpbmdWYXI7CisJLy8gcGljayBvbmUgb3V0ZXItbW9zdCB2YXJpYWJsZSBmcm9tIHRoZSBz
ZXQgYXQgYSB0aW1lCisJd2hpbGUgKCh0cmFja2luZ1ZhciA9IEZha2VkVHJhY2tpbmdWYXJpYWJs
ZS5waWNrVmFyRm9yUmVwb3J0aW5nKHZhclNldCwgdGhpcywgbG9jYXRpb24gIT0gbnVsbCkpICE9
IG51bGwpIHsKKworCQlpZiAocmV0dXJuVmFyICE9IG51bGwgJiYgdHJhY2tpbmdWYXIuaXNSZXNv
dXJjZUJlaW5nUmV0dXJuZWQocmV0dXJuVmFyKSkgeworCQkJY29udGludWU7CisJCX0KKwogCQlp
ZiAobG9jYXRpb24gIT0gbnVsbCAmJiB0cmFja2luZ1Zhci5vcmlnaW5hbEJpbmRpbmcgIT0gbnVs
bCAmJiBmbG93SW5mby5pc0RlZmluaXRlbHlOdWxsKHRyYWNraW5nVmFyLm9yaWdpbmFsQmluZGlu
ZykpCiAJCQljb250aW51ZTsgLy8gcmVwb3J0aW5nIGFnYWluc3QgYSBzcGVjaWZpYyBsb2NhdGlv
biwgcmVzb3VyY2UgaXMgbnVsbCBhdCB0aGlzIGZsb3csIGRvbid0IGNvbXBsYWluCi0JCWludCBz
dGF0dXMgPSBnZXROdWxsU3RhdHVzQWdncmVzc2l2ZWx5KHRyYWNraW5nVmFyLmJpbmRpbmcsIGZs
b3dJbmZvKTsKLQkJLy8gdHJ5IHRvIGltcHJvdmUgaW5mbyBpZiBhIGNsb3NlKCkgaW5zaWRlIGZp
bmFsbHkgd2FzIG9ic2VydmVkOgotCQlpZiAobG9jYXRpb25TY29wZSAhPSBudWxsKSAvLyBvbmx5
IGNoZWNrIGF0IG1ldGhvZCBleGl0IHBvaW50cwotCQkJc3RhdHVzID0gbG9jYXRpb25TY29wZS5t
ZXJnZUNsb3NlU3RhdHVzKHN0YXR1cywgdHJhY2tpbmdWYXIuYmluZGluZywgdGhpcyk7CisJCQor
CQkvLyBjb21wdXRlIHRoZSBtb3N0IHNwZWNpZmljIG51bGwgc3RhdHVzIGZvciB0aGlzIHJlc291
cmNlLAorCQlpbnQgc3RhdHVzID0gdHJhY2tpbmdWYXIuZmluZE1vc3RTcGVjaWZpY1N0YXR1cyhm
bG93SW5mbywgdGhpcywgbG9jYXRpb25TY29wZSk7CisJCQogCQlpZiAoc3RhdHVzID09IEZsb3dJ
bmZvLk5VTEwpIHsKIAkJCS8vIGRlZmluaXRlbHkgdW5jbG9zZWQ6IGhpZ2hlc3QgcHJpb3JpdHkK
IAkJCXJlcG9ydFJlc291cmNlTGVhayh0cmFja2luZ1ZhciwgbG9jYXRpb24sIHN0YXR1cyk7CkBA
IC0xMDE1LDcgKzEwMzYsNyBAQCBwdWJsaWMgdm9pZCBjaGVja1VuY2xvc2VkQ2xvc2VhYmxlcyhG
bG93SW5mbyBmbG93SW5mbywgQVNUTm9kZSBsb2NhdGlvbiwgQmxvY2tTYwogCQlpZiAobG9jYXRp
b24gPT0gbnVsbCkgLy8gYXQgZW5kIG9mIGJsb2NrIGFuZCBub3QgZGVmaW5pdGVseSB1bmNsb3Nl
ZAogCQl7CiAJCQkvLyBwcm9ibGVtcyBhdCBzcGVjaWZpYyBsb2NhdGlvbnM6IG1lZGl1bSBwcmlv
cml0eQotCQkJaWYgKHRyYWNraW5nVmFyLnJlcG9ydFJlY29yZGVkRXJyb3JzKHRoaXMpKSAvLyAu
Li4gcmVwb3J0IHByZXZpb3VzbHkgcmVjb3JkZWQgZXJyb3JzCisJCQlpZiAodHJhY2tpbmdWYXIu
cmVwb3J0UmVjb3JkZWRFcnJvcnModGhpcywgc3RhdHVzKSkgLy8gLi4uIHJlcG9ydCBwcmV2aW91
c2x5IHJlY29yZGVkIGVycm9ycwogCQkJCWNvbnRpbnVlOwogCQl9IAogCQlpZiAoc3RhdHVzID09
IEZsb3dJbmZvLlBPVEVOVElBTExZX05VTEwpIHsKQEAgLTEwMzIsMjUgKzEwNTMsMTMgQEAgcHVi
bGljIHZvaWQgY2hlY2tVbmNsb3NlZENsb3NlYWJsZXMoRmxvd0luZm8gZmxvd0luZm8sIEFTVE5v
ZGUgbG9jYXRpb24sIEJsb2NrU2MKIAkJZm9yIChpbnQgaT0wOyBpPHRoaXMubG9jYWxJbmRleDsg
aSsrKQogCQkJdGhpcy5sb2NhbHNbaV0uY2xvc2VUcmFja2VyID0gbnVsbDsJCQogCQl0aGlzLnRy
YWNraW5nVmFyaWFibGVzID0gbnVsbDsKLQl9Ci19Ci0KLXByaXZhdGUgaW50IG1lcmdlQ2xvc2VT
dGF0dXMoaW50IHN0YXR1cywgTG9jYWxWYXJpYWJsZUJpbmRpbmcgYmluZGluZywgQmxvY2tTY29w
ZSBvdXRlclNjb3BlKSB7Ci0JLy8gZ2V0IHRoZSBtb3N0IHN1aXRhYmxlIG51bGwgc3RhdHVzIHJl
cHJlc2VudGluZyB3aGV0aGVyIHJlc291cmNlICdiaW5kaW5nJyBoYXMgYmVlbiBjbG9zZWQKLQkv
LyBzdGFydCBhdCB0aGlzIHNjb3BlIGFuZCBwb3RlbnRpYWxseSB0cmF2ZWwgb3V0IHVudGlsICdv
dXRlclNjb3BlJwotCS8vIGF0IGVhY2ggc2NvcGUgY29uc3VsdCBhbnkgcmVjb3JkZWQgJ2ZpbmFs
bHlJbmZvJy4KLQlpZiAoc3RhdHVzICE9IEZsb3dJbmZvLk5PTl9OVUxMKSB7Ci0JCWlmICh0aGlz
LmZpbmFsbHlJbmZvICE9IG51bGwpIHsKLQkJCWludCBmaW5hbGx5U3RhdHVzID0gdGhpcy5maW5h
bGx5SW5mby5udWxsU3RhdHVzKGJpbmRpbmcpOwotCQkJaWYgKGZpbmFsbHlTdGF0dXMgPT0gRmxv
d0luZm8uTk9OX05VTEwpCi0JCQkJcmV0dXJuIGZpbmFsbHlTdGF0dXM7Ci0JCQlpZiAoZmluYWxs
eVN0YXR1cyAhPSBGbG93SW5mby5OVUxMKSAvLyBuZWl0aGVyIGlzIE5PTl9OVUxMLCBidXQgbm90
IGJvdGggYXJlIE5VTEwgPT4gY2FsbCBpdCBQT1RFTlRJQUxMWV9OVUxMCi0JCQkJc3RhdHVzID0g
Rmxvd0luZm8uUE9URU5USUFMTFlfTlVMTDsKKwl9IGVsc2UgeworCQlpbnQgc2l6ZSA9IHRoaXMu
dHJhY2tpbmdWYXJpYWJsZXMuc2l6ZSgpOworCQlmb3IgKGludCBpPTA7IGk8c2l6ZTsgaSsrKSB7
CisJCQlGYWtlZFRyYWNraW5nVmFyaWFibGUgdHJhY2tlciA9IChGYWtlZFRyYWNraW5nVmFyaWFi
bGUpIHRoaXMudHJhY2tpbmdWYXJpYWJsZXMuZ2V0KDApOworCQkJdHJhY2tlci5yZXNldFJlcG9y
dGluZ0JpdHMoKTsKIAkJfQotCQlpZiAodGhpcyAhPSBvdXRlclNjb3BlICYmIHRoaXMucGFyZW50
IGluc3RhbmNlb2YgQmxvY2tTY29wZSkKLQkJCXJldHVybiAoKEJsb2NrU2NvcGUpIHRoaXMucGFy
ZW50KS5tZXJnZUNsb3NlU3RhdHVzKHN0YXR1cywgYmluZGluZywgb3V0ZXJTY29wZSk7CiAJfQot
CXJldHVybiBzdGF0dXM7CiB9CiAKIHByaXZhdGUgdm9pZCByZXBvcnRSZXNvdXJjZUxlYWsoRmFr
ZWRUcmFja2luZ1ZhcmlhYmxlIHRyYWNraW5nVmFyLCBBU1ROb2RlIGxvY2F0aW9uLCBpbnQgbnVs
bFN0YXR1cykgewpAQCAtMTA4Myw2ICsxMDkyLDggQEAgcHVibGljIHZvaWQgY29ycmVsYXRlVHJh
Y2tpbmdWYXJzSWZFbHNlKEZsb3dJbmZvIHRoZW5GbG93SW5mbywgRmxvd0luZm8gZWxzZUZsb3cK
IAlpZiAodGhpcy50cmFja2luZ1ZhcmlhYmxlcyAhPSBudWxsKSB7CiAJCWZvciAoaW50IGk9MDsg
aTx0aGlzLnRyYWNraW5nVmFyaWFibGVzLnNpemUoKTsgaSsrKSB7CiAJCQlGYWtlZFRyYWNraW5n
VmFyaWFibGUgdHJhY2tpbmdWYXIgPSAoRmFrZWRUcmFja2luZ1ZhcmlhYmxlKSB0aGlzLnRyYWNr
aW5nVmFyaWFibGVzLmdldChpKTsKKwkJCWlmICh0cmFja2luZ1Zhci5vcmlnaW5hbEJpbmRpbmcg
PT0gbnVsbCkKKwkJCQljb250aW51ZTsKIAkJCWlmICggICB0aGVuRmxvd0luZm8uaXNEZWZpbml0
ZWx5Tm9uTnVsbCh0cmFja2luZ1Zhci5iaW5kaW5nKQkJCS8vIGNsb3NlZCBpbiB0aGVuIGJyYW5j
aAogCQkJCSYmIGVsc2VGbG93SW5mby5pc0RlZmluaXRlbHlOdWxsKHRyYWNraW5nVmFyLm9yaWdp
bmFsQmluZGluZykpCQkvLyBudWxsIGluIGVsc2UgYnJhbmNoCiAJCQl7CkBAIC0xMDk4LDM2ICsx
MTA5LDQgQEAgcHVibGljIHZvaWQgY29ycmVsYXRlVHJhY2tpbmdWYXJzSWZFbHNlKEZsb3dJbmZv
IHRoZW5GbG93SW5mbywgRmxvd0luZm8gZWxzZUZsb3cKIAlpZiAodGhpcy5wYXJlbnQgaW5zdGFu
Y2VvZiBCbG9ja1Njb3BlKQogCQkoKEJsb2NrU2NvcGUpIHRoaXMucGFyZW50KS5jb3JyZWxhdGVU
cmFja2luZ1ZhcnNJZkVsc2UodGhlbkZsb3dJbmZvLCBlbHNlRmxvd0luZm8pOwogfQotCi0vKioK
LSAqIEdldCB0aGUgbnVsbCBzdGF0dXMgbG9va2luZyBldmVuIGludG8gdW5yZWFjaGFibGUgZmxv
d3MKLSAqIEBwYXJhbSBsb2NhbAotICogQHBhcmFtIGZsb3dJbmZvCi0gKiBAcmV0dXJuIG9uZSBv
ZiB0aGUgY29uc3RhbnRzIEZsb3dJbmZvLntOVUxMLFBPVEVOVElBTExZX05VTEwsUE9URU5USUFM
TFlfTk9OX05VTEwsTk9OX05VTEx9LgotICovCi1wcml2YXRlIGludCBnZXROdWxsU3RhdHVzQWdn
cmVzc2l2ZWx5KExvY2FsVmFyaWFibGVCaW5kaW5nIGxvY2FsLCBGbG93SW5mbyBmbG93SW5mbykg
ewotCWludCByZWFjaE1vZGUgPSBmbG93SW5mby5yZWFjaE1vZGUoKTsKLQlpbnQgc3RhdHVzID0g
MDsKLQl0cnkgewotCQkvLyB1bnJlYWNoYWJsZSBmbG93SW5mbyBpcyB0b28gc2h5IGluIHJlcG9y
dGluZyBudWxsLWlzc3VlcywgdGVtcG9yYXJpbHkgZm9yZ2V0IHJlYWNoYWJpbGl0eToKLQkJaWYg
KHJlYWNoTW9kZSAhPSBGbG93SW5mby5SRUFDSEFCTEUpCi0JCQlmbG93SW5mby50YWdCaXRzICY9
IH5GbG93SW5mby5VTlJFQUNIQUJMRTsKLQkJc3RhdHVzID0gZmxvd0luZm8ubnVsbFN0YXR1cyhs
b2NhbCk7Ci0JfSBmaW5hbGx5IHsKLQkJLy8gcmVzZXQKLQkJZmxvd0luZm8udGFnQml0cyB8PSBy
ZWFjaE1vZGU7Ci0JfQotCS8vIGF0IHRoaXMgcG9pbnQgc29tZSBjb21iaW5hdGlvbnMgYXJlIG5v
dCB1c2VmdWwgc28gZmxhdHRlbiB0byBhIHNpbmdsZSBiaXQ6Ci0JaWYgKChzdGF0dXMgJiBGbG93
SW5mby5OVUxMKSAhPSAwKSB7Ci0JCWlmICgoc3RhdHVzICYgKEZsb3dJbmZvLk5PTl9OVUxMIHwg
Rmxvd0luZm8uUE9URU5USUFMTFlfTk9OX05VTEwpKSAhPSAwKQotCQkJcmV0dXJuIEZsb3dJbmZv
LlBPVEVOVElBTExZX05VTEw7IAkvLyBudWxsICsgZG91YnQgPSBwb3QgbnVsbAotCQlyZXR1cm4g
Rmxvd0luZm8uTlVMTDsKLQl9IGVsc2UgaWYgKChzdGF0dXMgJiBGbG93SW5mby5OT05fTlVMTCkg
IT0gMCkgewotCQlpZiAoKHN0YXR1cyAmIEZsb3dJbmZvLlBPVEVOVElBTExZX05VTEwpICE9IDAp
Ci0JCQlyZXR1cm4gRmxvd0luZm8uUE9URU5USUFMTFlfTlVMTDsJLy8gbm9uLW51bGwgKyBkb3Vi
dCA9IHBvdCBudWxsCi0JCXJldHVybiBGbG93SW5mby5OT05fTlVMTDsKLQl9IGVsc2UgaWYgKChz
dGF0dXMgJiBGbG93SW5mby5QT1RFTlRJQUxMWV9OVUxMKSAhPSAwKQotCQlyZXR1cm4gRmxvd0lu
Zm8uUE9URU5USUFMTFlfTlVMTDsKLQlyZXR1cm4gc3RhdHVzOwotfQogfQpkaWZmIC0tZ2l0IGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9DbGFzc1Njb3BlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0NsYXNzU2NvcGUu
amF2YQppbmRleCAzZWIzY2NhLi44Nzc4YzZiIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0Ns
YXNzU2NvcGUuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0NsYXNzU2NvcGUuamF2YQpAQCAtMSw1
ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAs
IDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAs
IDIwMTIgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVk
LiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFk
ZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNl
IHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZh
aWxhYmxlIGF0CkBAIC0xMiw2ICsxMiw3IEBACiAgKiAgICAgCQkJCQkJQnVnIDMwMDU3NiAtIE5Q
RSBDb21wdXRpbmcgdHlwZSBoaWVyYXJjaHkgd2hlbiBjb21wbGlhbmNlIGRvZXNuJ3QgbWF0Y2gg
bGlicmFyaWVzCiAgKiAgICAgCQkJCQkJQnVnIDM1NDUzNiAtIGNvbXBpbGluZyBwYWNrYWdlLWlu
Zm8uamF2YSBzdGlsbCBkZXBlbmRzIG9uIHRoZSBvcmRlciBvZiBjb21waWxhdGlvbiB1bml0cwog
ICogICAgIAkJCQkJCUJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0
cnktd2l0aC1yZXNvdXJjZXMKKyAqICAgICAJCQkJCQlCdWcgMzU4OTAzIC0gRmlsdGVyIHByYWN0
aWNhbGx5IHVuaW1wb3J0YW50IHJlc291cmNlIGxlYWsgd2FybmluZ3MKICAqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9v
a3VwOwogCkBAIC05MDksNyArOTEwLDEwIEBAIHB1YmxpYyBjbGFzcyBDbGFzc1Njb3BlIGV4dGVu
ZHMgU2NvcGUgewogCQkJfSBlbHNlIHsKIAkJCQkvLyBvbmx5IHdhbnQgdG8gcmVhY2ggaGVyZSB3
aGVuIG5vIGVycm9ycyBhcmUgcmVwb3J0ZWQKIAkJCQlzb3VyY2VUeXBlLnN1cGVyY2xhc3MgPSBz
dXBlcmNsYXNzOwotCQkJCXNvdXJjZVR5cGUudHlwZUJpdHMgfD0gc3VwZXJjbGFzcy50eXBlQml0
czsKKwkJCQlzb3VyY2VUeXBlLnR5cGVCaXRzIHw9IChzdXBlcmNsYXNzLnR5cGVCaXRzICYgVHlw
ZUlkcy5Jbmhlcml0YWJsZUJpdHMpOworCQkJCS8vIGZ1cnRoZXIgYW5hbHlzaXMgYWdhaW5zdCB3
aGl0ZSBsaXN0cyBmb3IgdGhlIHVubGlrZWx5IGNhc2Ugd2UgYXJlIGNvbXBpbGluZyBqYXZhLmlv
Lio6CisJCQkJaWYgKChzb3VyY2VUeXBlLnR5cGVCaXRzICYgKFR5cGVJZHMuQml0QXV0b0Nsb3Nl
YWJsZXxUeXBlSWRzLkJpdENsb3NlYWJsZSkpICE9IDApCisJCQkJCXNvdXJjZVR5cGUudHlwZUJp
dHMgfD0gc291cmNlVHlwZS5hcHBseUNsb3NlYWJsZVdoaXRlbGlzdHMoKTsKIAkJCQlyZXR1cm4g
dHJ1ZTsKIAkJCX0KIAkJfQpAQCAtMTAyNSw3ICsxMDI5LDcgQEAgcHVibGljIGNsYXNzIENsYXNz
U2NvcGUgZXh0ZW5kcyBTY29wZSB7CiAJCQkJbm9Qcm9ibGVtcyAmPSBzdXBlckludGVyZmFjZVJl
Zi5yZXNvbHZlZFR5cGUuaXNWYWxpZEJpbmRpbmcoKTsKIAkJCX0KIAkJCS8vIG9ubHkgd2FudCB0
byByZWFjaCBoZXJlIHdoZW4gbm8gZXJyb3JzIGFyZSByZXBvcnRlZAotCQkJc291cmNlVHlwZS50
eXBlQml0cyB8PSBzdXBlckludGVyZmFjZS50eXBlQml0czsKKwkJCXNvdXJjZVR5cGUudHlwZUJp
dHMgfD0gKHN1cGVySW50ZXJmYWNlLnR5cGVCaXRzICYgVHlwZUlkcy5Jbmhlcml0YWJsZUJpdHMp
OwogCQkJaW50ZXJmYWNlQmluZGluZ3NbY291bnQrK10gPSBzdXBlckludGVyZmFjZTsKIAkJfQog
CQkvLyBob2xkIG9udG8gYWxsIGNvcnJlY3RseSByZXNvbHZlZCBzdXBlcmludGVyZmFjZXMKZGlm
ZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9sb29rdXAvTWV0aG9kU2NvcGUuamF2YSBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAv
TWV0aG9kU2NvcGUuamF2YQppbmRleCA1MmM3MjU4Li5iZmI0ZjJiIDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvbG9va3VwL01ldGhvZFNjb3BlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9NZXRob2RTY29w
ZS5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHly
aWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHly
aWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCBy
aWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlh
bHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2Ug
UHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRp
b24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTUwLDkgKzUwLDYgQEAgcHVibGljIGNsYXNzIE1l
dGhvZFNjb3BlIGV4dGVuZHMgQmxvY2tTY29wZSB7CiAJLy8gaW5uZXItZW11bGF0aW9uCiAJcHVi
bGljIFN5bnRoZXRpY0FyZ3VtZW50QmluZGluZ1tdIGV4dHJhU3ludGhldGljQXJndW1lbnRzOwog
Ci0JLy8gY291bnQgbnVtYmVyIG9mIHRyYWNraW5nIHZhcmlhYmxlcywgc2VlIEZha2VkVHJhY2tp
bmdWYXJpYWJsZQotCWludCB0cmFja1ZhckNvdW50ID0gMDsKLQogcHVibGljIE1ldGhvZFNjb3Bl
KENsYXNzU2NvcGUgcGFyZW50LCBSZWZlcmVuY2VDb250ZXh0IGNvbnRleHQsIGJvb2xlYW4gaXNT
dGF0aWMpIHsKIAlzdXBlcihNRVRIT0RfU0NPUEUsIHBhcmVudCk7CiAJdGhpcy5sb2NhbHMgPSBu
ZXcgTG9jYWxWYXJpYWJsZUJpbmRpbmdbNV07CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1Jl
ZmVyZW5jZUJpbmRpbmcuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvUmVmZXJlbmNlQmluZGluZy5qYXZh
CmluZGV4IDhlNTdhZmIuLjkzZTM0N2YgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvUmVmZXJl
bmNlQmluZGluZy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvUmVmZXJlbmNlQmluZGluZy5qYXZh
CkBAIC0xMCw2ICsxMCw3IEBACiAgKiAgICAgU3RlcGhhbiBIZXJybWFubiAtIENvbnRyaWJ1dGlv
bnMgZm9yCiAgKgkJCQkJCQkJYnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNz
aW5nIHRyeS13aXRoLXJlc291cmNlcwogICoJCQkJCQkJCWJ1ZyAxODYzNDIgLSBbY29tcGlsZXJd
W251bGxdIFVzaW5nIGFubm90YXRpb25zIGZvciBudWxsIGNoZWNraW5nCisgKgkJCQkJCQkJYnVn
IDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdh
cm5pbmdzCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cDsKIApAQCAtMTQ1NSw0ICsxNDU2LDUwIEBAIE1ldGhv
ZEJpbmRpbmdbXSB1blJlc29sdmVkTWV0aG9kcygpIHsgLy8gZm9yIHRoZSBNZXRob2RWZXJpZmll
ciBzbyBpdCBkb2Vzbid0IHJlCiBwdWJsaWMgRmllbGRCaW5kaW5nW10gdW5SZXNvbHZlZEZpZWxk
cygpIHsKIAlyZXR1cm4gQmluZGluZy5OT19GSUVMRFM7CiB9CisKKy8qCisgKiBJZiBhIHR5cGUg
LSBrbm93biB0byBiZSBhIENsb3NlYWJsZSAtIGlzIG1lbnRpb25lZCBpbiBvbmUgb2Ygb3VyIHdo
aXRlIGxpc3RzCisgKiBhbnN3ZXIgdGhlIHR5cGVCaXQgZm9yIHRoZSB3aGl0ZSBsaXN0IChCaXRX
cmFwcGVyQ2xvc2VhYmxlIG9yIEJpdFJlc291cmNlRnJlZUNsb3NlYWJsZSkuCisgKi8KK3Byb3Rl
Y3RlZCBpbnQgYXBwbHlDbG9zZWFibGVXaGl0ZWxpc3RzKCkgeworCXN3aXRjaCAodGhpcy5jb21w
b3VuZE5hbWUubGVuZ3RoKSB7CisJCWNhc2UgMzoKKwkJCWlmIChDaGFyT3BlcmF0aW9uLmVxdWFs
cyhUeXBlQ29uc3RhbnRzLkpBVkEsIHRoaXMuY29tcG91bmROYW1lWzBdKSkgeworCQkJCWlmIChD
aGFyT3BlcmF0aW9uLmVxdWFscyhUeXBlQ29uc3RhbnRzLklPLCB0aGlzLmNvbXBvdW5kTmFtZVsx
XSkpIHsKKwkJCQkJY2hhcltdIHNpbXBsZU5hbWUgPSB0aGlzLmNvbXBvdW5kTmFtZVsyXTsKKwkJ
CQkJaW50IGwgPSBUeXBlQ29uc3RhbnRzLkpBVkFfSU9fV1JBUFBFUl9DTE9TRUFCTEVTLmxlbmd0
aDsKKwkJCQkJZm9yIChpbnQgaSA9IDA7IGkgPCBsOyBpKyspIHsKKwkJCQkJCWlmIChDaGFyT3Bl
cmF0aW9uLmVxdWFscyhzaW1wbGVOYW1lLCBUeXBlQ29uc3RhbnRzLkpBVkFfSU9fV1JBUFBFUl9D
TE9TRUFCTEVTW2ldKSkKKwkJCQkJCQlyZXR1cm4gVHlwZUlkcy5CaXRXcmFwcGVyQ2xvc2VhYmxl
OworCQkJCQl9CisJCQkJCWwgPSBUeXBlQ29uc3RhbnRzLkpBVkFfSU9fUkVTT1VSQ0VfRlJFRV9D
TE9TRUFCTEVTLmxlbmd0aDsKKwkJCQkJZm9yIChpbnQgaSA9IDA7IGkgPCBsOyBpKyspIHsKKwkJ
CQkJCWlmIChDaGFyT3BlcmF0aW9uLmVxdWFscyhzaW1wbGVOYW1lLCBUeXBlQ29uc3RhbnRzLkpB
VkFfSU9fUkVTT1VSQ0VfRlJFRV9DTE9TRUFCTEVTW2ldKSkKKwkJCQkJCQlyZXR1cm4gVHlwZUlk
cy5CaXRSZXNvdXJjZUZyZWVDbG9zZWFibGU7CisJCQkJCX0KKwkJCQl9CisJCQl9CisJCQlicmVh
azsKKwkJY2FzZSA0OgorCQkJaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKFR5cGVDb25zdGFudHMu
SkFWQSwgdGhpcy5jb21wb3VuZE5hbWVbMF0pKSB7CisJCQkJaWYgKENoYXJPcGVyYXRpb24uZXF1
YWxzKFR5cGVDb25zdGFudHMuVVRJTCwgdGhpcy5jb21wb3VuZE5hbWVbMV0pKSB7CisJCQkJCWlm
IChDaGFyT3BlcmF0aW9uLmVxdWFscyhUeXBlQ29uc3RhbnRzLlpJUCwgdGhpcy5jb21wb3VuZE5h
bWVbMl0pKSB7CisJCQkJCQljaGFyW10gc2ltcGxlTmFtZSA9IHRoaXMuY29tcG91bmROYW1lWzNd
OworCQkJCQkJaW50IGwgPSBUeXBlQ29uc3RhbnRzLkpBVkFfVVRJTF9aSVBfV1JBUFBFUl9DTE9T
RUFCTEVTLmxlbmd0aDsKKwkJCQkJCWZvciAoaW50IGkgPSAwOyBpIDwgbDsgaSsrKSB7CisJCQkJ
CQkJaWYgKENoYXJPcGVyYXRpb24uZXF1YWxzKHNpbXBsZU5hbWUsIFR5cGVDb25zdGFudHMuSkFW
QV9VVElMX1pJUF9XUkFQUEVSX0NMT1NFQUJMRVNbaV0pKQorCQkJCQkJCQlyZXR1cm4gVHlwZUlk
cy5CaXRXcmFwcGVyQ2xvc2VhYmxlOworCQkJCQkJfQorCQkJCQl9CisJCQkJfQorCQkJfQorCQkJ
YnJlYWs7CisJfQorCWludCBsID0gVHlwZUNvbnN0YW50cy5PVEhFUl9XUkFQUEVSX0NMT1NFQUJM
RVMubGVuZ3RoOworCWZvciAoaW50IGkgPSAwOyBpIDwgbDsgaSsrKSB7CisJCWlmIChDaGFyT3Bl
cmF0aW9uLmVxdWFscyh0aGlzLmNvbXBvdW5kTmFtZSwgVHlwZUNvbnN0YW50cy5PVEhFUl9XUkFQ
UEVSX0NMT1NFQUJMRVNbaV0pKQorCQkJcmV0dXJuIFR5cGVJZHMuQml0V3JhcHBlckNsb3NlYWJs
ZTsKKwl9CQorCXJldHVybiAwOworfQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBl
Q29uc3RhbnRzLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVDb25zdGFudHMuamF2YQppbmRleCA3
MDk4ZDM3Li5lNjA3NzMyIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVDb25zdGFudHMu
amF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVDb25zdGFudHMuamF2YQpAQCAtNyw3ICs3LDkg
QEAKICAqIAogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRp
YWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgotICogICAgIFN0ZXBoYW4gSGVycm1hbm4gLSBDb250
cmlidXRpb24gZm9yIGJ1ZyAzNDkzMjYgLSBbMS43XSBuZXcgd2FybmluZyBmb3IgbWlzc2luZyB0
cnktd2l0aC1yZXNvdXJjZXMKKyAqICAgICBTdGVwaGFuIEhlcnJtYW5uIC0gQ29udHJpYnV0aW9u
cyBmb3IKKyAqCQkJCQkJCQlidWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1pc3Np
bmcgdHJ5LXdpdGgtcmVzb3VyY2VzCisgKgkJCQkJCQkJYnVnIDM1ODkwMyAtIEZpbHRlciBwcmFj
dGljYWxseSB1bmltcG9ydGFudCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCiAgKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxv
b2t1cDsKIApAQCAtMTksNiArMjEsNyBAQCBwdWJsaWMgaW50ZXJmYWNlIFR5cGVDb25zdGFudHMg
ewogCWNoYXJbXSBMQU5HID0gImxhbmciLnRvQ2hhckFycmF5KCk7IC8vJE5PTi1OTFMtMSQKIAlj
aGFyW10gSU8gPSAiaW8iLnRvQ2hhckFycmF5KCk7IC8vJE5PTi1OTFMtMSQKIAljaGFyW10gVVRJ
TCA9ICJ1dGlsIi50b0NoYXJBcnJheSgpOyAvLyROT04tTkxTLTEkCisJY2hhcltdIFpJUCA9ICJ6
aXAiLnRvQ2hhckFycmF5KCk7IC8vJE5PTi1OTFMtMSQKIAljaGFyW10gQU5OT1RBVElPTiA9ICJh
bm5vdGF0aW9uIi50b0NoYXJBcnJheSgpOyAvLyROT04tTkxTLTEkCiAJY2hhcltdIFJFRkxFQ1Qg
PSAicmVmbGVjdCIudG9DaGFyQXJyYXkoKTsgLy8kTk9OLU5MUy0xJAogCWNoYXJbXSBMRU5HVEgg
PSAibGVuZ3RoIi50b0NoYXJBcnJheSgpOyAvLyROT04tTkxTLTEkCkBAIC0xNTQsNiArMTU3LDU5
IEBAIHB1YmxpYyBpbnRlcmZhY2UgVHlwZUNvbnN0YW50cyB7CiAJfTsKIAljaGFyW11bXSBKQVZB
X0xBTkdfQVVUT0NMT1NFQUJMRSA9ICB7SkFWQSwgTEFORywgIkF1dG9DbG9zZWFibGUiLnRvQ2hh
ckFycmF5KCl9OyAvLyROT04tTkxTLTEkCiAJY2hhcltdIENMT1NFID0gImNsb3NlIi50b0NoYXJB
cnJheSgpOyAvLyROT04tTkxTLTEkCisJLy8gd2hpdGUgbGlzdHMgb2YgY2xvc2VhYmxlczoKKwlj
aGFyW11bXSBKQVZBX0lPX1dSQVBQRVJfQ0xPU0VBQkxFUyA9IG5ldyBjaGFyW11bXSB7CisJCSJC
dWZmZXJlZElucHV0U3RyZWFtIi50b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJCdWZm
ZXJlZE91dHB1dFN0cmVhbSIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiQnVmZmVy
ZWRSZWFkZXIiLnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwkJIkJ1ZmZlcmVkV3JpdGVy
Ii50b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJJbnB1dFN0cmVhbVJlYWRlciIudG9D
aGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiUHJpbnRXcml0ZXIiLnRvQ2hhckFycmF5KCks
ICAvLyROT04tTkxTLTEkCisJCSJMaW5lTnVtYmVyUmVhZGVyIi50b0NoYXJBcnJheSgpLCAvLyRO
T04tTkxTLTEkCisJCSJEYXRhSW5wdXRTdHJlYW0iLnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMt
MSQKKwkJIkRhdGFPdXRwdXRTdHJlYW0iLnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwkJ
Ik9iamVjdElucHV0U3RyZWFtIi50b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJPYmpl
Y3RPdXRwdXRTdHJlYW0iLnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwkJIkZpbHRlcklu
cHV0U3RyZWFtIi50b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJGaWx0ZXJPdXRwdXRT
dHJlYW0iLnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwkJIkRhdGFJbnB1dFN0cmVhbSIu
dG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiRGF0YU91dHB1dFN0cmVhbSIudG9DaGFy
QXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiUHVzaGJhY2tJbnB1dFN0cmVhbSIudG9DaGFyQXJy
YXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiU2VxdWVuY2VJbnB1dFN0cmVhbSIudG9DaGFyQXJyYXko
KSwgLy8kTk9OLU5MUy0xJAorCQkiUHJpbnRTdHJlYW0iLnRvQ2hhckFycmF5KCksIC8vJE5PTi1O
TFMtMSQKKwkJIlB1c2hiYWNrUmVhZGVyIi50b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJ
CSJPdXRwdXRTdHJlYW1Xcml0ZXIiLnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwl9Owor
CWNoYXJbXVtdIEpBVkFfVVRJTF9aSVBfV1JBUFBFUl9DTE9TRUFCTEVTID0gbmV3IGNoYXJbXVtd
IHsKKwkJIkdaSVBJbnB1dFN0cmVhbSIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQki
SW5mbGF0ZXJJbnB1dFN0cmVhbSIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiRGVm
bGF0ZXJJbnB1dFN0cmVhbSIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiQ2hlY2tl
ZElucHV0U3RyZWFtIi50b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJCSJaaXBJbnB1dFN0
cmVhbSIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiSmFySW5wdXRTdHJlYW0iLnRv
Q2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwkJIkdaSVBPdXRwdXRTdHJlYW0iLnRvQ2hhckFy
cmF5KCksIC8vJE5PTi1OTFMtMSQKKwkJIkluZmxhdGVyT3V0cHV0U3RyZWFtIi50b0NoYXJBcnJh
eSgpLCAvLyROT04tTkxTLTEkCisJCSJEZWZsYXRlck91dHB1dFN0cmVhbSIudG9DaGFyQXJyYXko
KSwgLy8kTk9OLU5MUy0xJAorCQkiQ2hlY2tlZE91dHB1dFN0cmVhbSIudG9DaGFyQXJyYXkoKSwg
Ly8kTk9OLU5MUy0xJAorCQkiWmlwT3V0cHV0U3RyZWFtIi50b0NoYXJBcnJheSgpLCAvLyROT04t
TkxTLTEkCisJCSJKYXJPdXRwdXRTdHJlYW0iLnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQK
Kwl9OworCWNoYXJbXVtdW10gT1RIRVJfV1JBUFBFUl9DTE9TRUFCTEVTID0gbmV3IGNoYXJbXVtd
W10geworCQl7SkFWQSwgInNlY3VyaXR5Ii50b0NoYXJBcnJheSgpLCAiRGlnZXN0SW5wdXRTdHJl
YW0iLnRvQ2hhckFycmF5KCl9LCAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJe0pBVkEs
ICJzZWN1cml0eSIudG9DaGFyQXJyYXkoKSwgIkRpZ2VzdE91dHB1dFN0cmVhbSIudG9DaGFyQXJy
YXkoKX0sIC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQl7SkFWQSwgImJlYW5zIi50b0No
YXJBcnJheSgpLCAiWE1MRW5jb2RlciIudG9DaGFyQXJyYXkoKX0sIC8vJE5PTi1OTFMtMSQgLy8k
Tk9OLU5MUy0yJAorCQl7SkFWQSwgImJlYW5zIi50b0NoYXJBcnJheSgpLCAiWE1MRGVjb2RlciIu
dG9DaGFyQXJyYXkoKX0sIC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQl7SkFWQVgsICJz
b3VuZCIudG9DaGFyQXJyYXkoKSwgInNhbXBsZWQiLnRvQ2hhckFycmF5KCksICJBdWRpb0lucHV0
U3RyZWFtIi50b0NoYXJBcnJheSgpfSwgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5P
Ti1OTFMtMyQKKwl9OworCWNoYXJbXVtdIEpBVkFfSU9fUkVTT1VSQ0VfRlJFRV9DTE9TRUFCTEVT
ID0gbmV3IGNoYXJbXVtdIHsJCQkKKwkJIlN0cmluZ1JlYWRlciIudG9DaGFyQXJyYXkoKSwgLy8k
Tk9OLU5MUy0xJAorCQkiU3RyaW5nV3JpdGVyIi50b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEk
CisJCSJCeXRlQXJyYXlJbnB1dFN0cmVhbSIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAor
CQkiQnl0ZUFycmF5T3V0cHV0U3RyZWFtIi50b0NoYXJBcnJheSgpLCAvLyROT04tTkxTLTEkCisJ
CSJDaGFyQXJyYXlSZWFkZXIiLnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwkJIkNoYXJB
cnJheVdyaXRlciIudG9DaGFyQXJyYXkoKSwgLy8kTk9OLU5MUy0xJAorCQkiU3RyaW5nQnVmZmVy
SW5wdXRTdHJlYW0iLnRvQ2hhckFycmF5KCksIC8vJE5PTi1OTFMtMSQKKwl9OwogCiAJLy8gQ29u
c3RyYWludHMgZm9yIGdlbmVyaWMgdHlwZSBhcmd1bWVudCBpbmZlcmVuY2UKIAlpbnQgQ09OU1RS
QUlOVF9FUVVBTCA9IDA7CQkvLyBBY3R1YWwgPSBGb3JtYWwKZGlmZiAtLWdpdCBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9s
b29rdXAvVHlwZUlkcy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlSWRzLmphdmEKaW5kZXggNTE1
NmE0NC4uNDM5YjQ5ZSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlSWRzLmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2xvb2t1cC9UeXBlSWRzLmphdmEKQEAgLTExLDYgKzExLDcgQEAKICAqICAgICAJ
CQkJCQkJYnVnIDM0OTMyNiAtIFsxLjddIG5ldyB3YXJuaW5nIGZvciBtaXNzaW5nIHRyeS13aXRo
LXJlc291cmNlcwogICogICAgIAkJCQkJCQlidWcgMzU5MzYyIC0gRlVQIG9mIGJ1ZyAzNDkzMjY6
IFJlc291cmNlIGxlYWsgb24gbm9uLUNsb3NlYWJsZSByZXNvdXJjZQogICoJCQkJCQkJCWJ1ZyAx
ODYzNDIgLSBbY29tcGlsZXJdW251bGxdIFVzaW5nIGFubm90YXRpb25zIGZvciBudWxsIGNoZWNr
aW5nCisgKgkJCQkJCQkJYnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFu
dCByZXNvdXJjZSBsZWFrIHdhcm5pbmdzCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2th
Z2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cDsKIApAQCAtMjAyLDQg
KzIwMywxOSBAQCBwdWJsaWMgaW50ZXJmYWNlIFR5cGVJZHMgewogCSAqIEBzZWUgUmVmZXJlbmNl
QmluZGluZyNoYXNUeXBlQml0KGludCkKIAkgKi8KIAlmaW5hbCBpbnQgQml0Q2xvc2VhYmxlID0g
MjsKKwkvKioKKwkgKiBCaXQgZm9yIG1lbWJlcnMgb2YgYSB3aGl0ZSBsaXN0OgorCSAqIFN1YnR5
cGVzIG9mIENsb3NlYWJsZSB0aGF0IHdyYXAgYW5vdGhlciByZXNvdXJjZSB3aXRob3V0IGRpcmVj
dGx5IGhvbGRpbmcgYW55IE9TIHJlc291cmNlcy4gCisJICovCisJZmluYWwgaW50IEJpdFdyYXBw
ZXJDbG9zZWFibGUgPSA0OworCS8qKgorCSAqIEJpdCBmb3IgbWVtYmVycyBvZiBhIHdoaXRlIGxp
c3Q6CisJICogU3VidHlwZXMgb2YgQ2xvc2VhYmxlIHRoYXQgZG8gbm90IGhvbGQgYW4gT1MgcmVz
b3VyY2UgdGhhdCBuZWVkcyB0byBiZSByZWxlYXNlZC4KKwkgKi8KKwlmaW5hbCBpbnQgQml0UmVz
b3VyY2VGcmVlQ2xvc2VhYmxlID0gODsKKwkKKwkvKioKKwkgKiBTZXQgb2YgdHlwZSBiaXRzIHRo
YXQgc2hvdWxkIGJlIGluaGVyaXRlZCBieSBhbnkgc3ViIHR5cGVzLgorCSAqLworCWZpbmFsIGlu
dCBJbmhlcml0YWJsZUJpdHMgPSBCaXRBdXRvQ2xvc2VhYmxlIHwgQml0Q2xvc2VhYmxlOwogfQpk
aWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlVmFyaWFibGVCaW5kaW5nLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvbG9va3VwL1R5cGVWYXJpYWJsZUJpbmRpbmcuamF2YQppbmRleCA5OTVmMzBlLi45MWE3MDY1
IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVWYXJpYWJsZUJpbmRpbmcuamF2YQorKysg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvbG9va3VwL1R5cGVWYXJpYWJsZUJpbmRpbmcuamF2YQpAQCAtMSw1ICsxLDUgQEAK
IC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTEgSUJN
IENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTIgSUJN
IENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHBy
b2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFi
bGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAq
IHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0
CkBAIC0xMSw2ICsxMSw3IEBACiAgKiAgICAgCQkJCQkJCWJ1ZyAyODIxNTIgLSBbMS41XVtjb21w
aWxlcl0gR2VuZXJpY3MgY29kZSByZWplY3RlZCBieSBFY2xpcHNlIGJ1dCBhY2NlcHRlZCBieSBq
YXZhYwogICogICAgIAkJCQkJCQlidWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9yIG1p
c3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCiAgKiAgICAgCQkJCQkJCWJ1ZyAzNTkzNjIgLSBGVVAg
b2YgYnVnIDM0OTMyNjogUmVzb3VyY2UgbGVhayBvbiBub24tQ2xvc2VhYmxlIHJlc291cmNlCisg
KgkJCQkJCQkJYnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCByZXNv
dXJjZSBsZWFrIHdhcm5pbmdzCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cDsKIApAQCAtMzE2LDExICszMTcs
MTEgQEAgcHVibGljIGNsYXNzIFR5cGVWYXJpYWJsZUJpbmRpbmcgZXh0ZW5kcyBSZWZlcmVuY2VC
aW5kaW5nIHsKIAkJCS8vIGluaXRpYWxpemUgZnJvbSBib3VuZHMKIAkJCXRoaXMudHlwZUJpdHMg
PSAwOwogCQkJaWYgKHRoaXMuc3VwZXJjbGFzcyAhPSBudWxsICYmIHRoaXMuc3VwZXJjbGFzcy5o
YXNUeXBlQml0KH5UeXBlSWRzLkJpdFVuaW5pdGlhbGl6ZWQpKQotCQkJCXRoaXMudHlwZUJpdHMg
fD0gdGhpcy5zdXBlcmNsYXNzLnR5cGVCaXRzOworCQkJCXRoaXMudHlwZUJpdHMgfD0gKHRoaXMu
c3VwZXJjbGFzcy50eXBlQml0cyAmIFR5cGVJZHMuSW5oZXJpdGFibGVCaXRzKTsKIAkJCWlmICh0
aGlzLnN1cGVySW50ZXJmYWNlcyAhPSBudWxsKQogCQkJCWZvciAoaW50IGkgPSAwLCBsID0gdGhp
cy5zdXBlckludGVyZmFjZXMubGVuZ3RoOyBpIDwgbDsgaSsrKQogCQkJCQlpZiAodGhpcy5zdXBl
ckludGVyZmFjZXNbaV0uaGFzVHlwZUJpdCh+VHlwZUlkcy5CaXRVbmluaXRpYWxpemVkKSkKLQkJ
CQkJCXRoaXMudHlwZUJpdHMgfD0gdGhpcy5zdXBlckludGVyZmFjZXNbaV0udHlwZUJpdHM7CisJ
CQkJCQl0aGlzLnR5cGVCaXRzIHw9ICh0aGlzLnN1cGVySW50ZXJmYWNlc1tpXS50eXBlQml0cyAm
IFR5cGVJZHMuSW5oZXJpdGFibGVCaXRzKTsKIAkJfQogCQlyZXR1cm4gKHRoaXMudHlwZUJpdHMg
JiBiaXQpICE9IDA7CiAJfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9XaWxkY2FyZEJpbmRp
bmcuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9sb29rdXAvV2lsZGNhcmRCaW5kaW5nLmphdmEKaW5kZXggMDFmMzY5
ZS4uOTNkZmZlMSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9XaWxkY2FyZEJpbmRpbmcuamF2
YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvbG9va3VwL1dpbGRjYXJkQmluZGluZy5qYXZhCkBAIC0xLDUgKzEsNSBA
QAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwNSwgMjAxMSBJ
Qk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwNSwgMjAxMiBJ
Qk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMg
cHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWls
YWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAog
ICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUg
YXQKQEAgLTEwLDYgKzEwLDcgQEAKICAqICAgICBTdGVwaGFuIEhlcnJtYW5uIC0gQ29udHJpYnV0
aW9uIGZvcgogICogICAgIAkJCQkJCQlidWcgMzQ5MzI2IC0gWzEuN10gbmV3IHdhcm5pbmcgZm9y
IG1pc3NpbmcgdHJ5LXdpdGgtcmVzb3VyY2VzCiAgKiAgICAgCQkJCQkJCWJ1ZyAzNTkzNjIgLSBG
VVAgb2YgYnVnIDM0OTMyNjogUmVzb3VyY2UgbGVhayBvbiBub24tQ2xvc2VhYmxlIHJlc291cmNl
CisgKgkJCQkJCQkJYnVnIDM1ODkwMyAtIEZpbHRlciBwcmFjdGljYWxseSB1bmltcG9ydGFudCBy
ZXNvdXJjZSBsZWFrIHdhcm5pbmdzCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ug
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cDsKIApAQCAtNDI5LDExICs0
MzAsMTEgQEAgcHVibGljIGNsYXNzIFdpbGRjYXJkQmluZGluZyBleHRlbmRzIFJlZmVyZW5jZUJp
bmRpbmcgewogCQkJLy8gaW5pdGlhbGl6ZSBmcm9tIHVwcGVyIGJvdW5kcwogCQkJdGhpcy50eXBl
Qml0cyA9IDA7CiAJCQlpZiAodGhpcy5zdXBlcmNsYXNzICE9IG51bGwgJiYgdGhpcy5zdXBlcmNs
YXNzLmhhc1R5cGVCaXQoflR5cGVJZHMuQml0VW5pbml0aWFsaXplZCkpCi0JCQkJdGhpcy50eXBl
Qml0cyB8PSB0aGlzLnN1cGVyY2xhc3MudHlwZUJpdHM7CisJCQkJdGhpcy50eXBlQml0cyB8PSAo
dGhpcy5zdXBlcmNsYXNzLnR5cGVCaXRzICYgVHlwZUlkcy5Jbmhlcml0YWJsZUJpdHMpOwogCQkJ
aWYgKHRoaXMuc3VwZXJJbnRlcmZhY2VzICE9IG51bGwpCiAJCQkJZm9yIChpbnQgaSA9IDAsIGwg
PSB0aGlzLnN1cGVySW50ZXJmYWNlcy5sZW5ndGg7IGkgPCBsOyBpKyspCiAJCQkJCWlmICh0aGlz
LnN1cGVySW50ZXJmYWNlc1tpXS5oYXNUeXBlQml0KH5UeXBlSWRzLkJpdFVuaW5pdGlhbGl6ZWQp
KQotCQkJCQkJdGhpcy50eXBlQml0cyB8PSB0aGlzLnN1cGVySW50ZXJmYWNlc1tpXS50eXBlQml0
czsKKwkJCQkJCXRoaXMudHlwZUJpdHMgfD0gKHRoaXMuc3VwZXJJbnRlcmZhY2VzW2ldLnR5cGVC
aXRzICYgVHlwZUlkcy5Jbmhlcml0YWJsZUJpdHMpOwogCQl9CiAJCXJldHVybiAodGhpcy50eXBl
Qml0cyAmIGJpdCkgIT0gMDsKIAl9Cg==
</data>

          </attachment>
      

    </bug>

</bugzilla>