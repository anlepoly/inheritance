<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>423685</bug_id>
          
          <creation_ts>2013-12-10 06:37:00 -0500</creation_ts>
          <short_desc>[1.8] poly conditional expression must not use lub</short_desc>
          <delta_ts>2014-01-21 01:36:19 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Stephan Herrmann">stephan.herrmann</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>jarthana</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2339812</commentid>
    <comment_count>0</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-12-10 06:37:46 -0500</bug_when>
    <thetext>Consider an example like this:

  class A{/**/}
  class B extends A {/**/}

  class G&lt;T&gt; {
    G&lt;B&gt; gb=null;
    G&lt;? super A&gt; gsa=null;
    G&lt;? super B&gt; l = (true)? gsa : gb;
  }

The conditional expression is a poly expression (appears in an assignment context) and hence should apply this rule from 15.25.3:
&quot;The type of a poly reference conditional expression is the same as its target type.&quot;

ECJ, however still seems to use lub computation based on which the assignment is rejected.

Avoiding lub in situations like this is important because lub(capture1,capture2) doesn&apos;t produce good results, whereas the new rules are much more permissive.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2339814</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-12-10 06:39:18 -0500</bug_when>
    <thetext>See also this clarification: http://mail.openjdk.java.net/pipermail/lambda-spec-experts/2013-December/000462.html</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2347524</commentid>
    <comment_count>2</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-01-09 10:24:44 -0500</bug_when>
    <thetext>*** Bug 425181 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2352206</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-21 00:53:11 -0500</bug_when>
    <thetext>Relevant passages from the spec:

&quot;Conditional operator expressions may be poly expressions if they appear in assignment or invocation contexts, unless both operands
produce primitives (or boxed primitives)&quot;

&quot;A reference conditional expression does not have to contain a poly expression 
as an operand in order to be a poly expression. It is a poly expression simply 
by virtue of the context in which it appears.&quot;

&quot;A reference conditional expression is a poly expression if it appears in an 
assignment context (5.2) or an invocation context (5.3). Otherwise, it is a 
standalone expression. Where a poly reference conditional expression appears in 
a context of a particular kind with target type T (5), its second and third
operand expressions similarly appear in a context of the same kind with target
type T.&quot;

&quot;The type of a poly reference conditional expression is the same as its target type&quot;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2352209</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-21 01:36:19 -0500</bug_when>
    <thetext>Fix and tests here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=f200f8d976d56839e6f0d721d690d85cc3afbb03</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>