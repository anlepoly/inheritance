<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>322977</bug_id>
          
          <creation_ts>2010-08-18 02:33:00 -0400</creation_ts>
          <short_desc>Documentation about use of &quot;SearchPattern.R_REGEXP_MATCH&quot; is wrong</short_desc>
          <delta_ts>2012-05-03 02:25:51 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.5.1</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>3.8 M7</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="joerg">joerg.domaschka</reporter>
          <assigned_to name="Satyam Kandula">satyam.kandula</assigned_to>
          <cc>amj87.iitr</cc>
    
    <cc>joerg.domaschka</cc>
    
    <cc>satyam.kandula</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="50508"
          type_id="1"
          status="+"
          setter="stephan.herrmann"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1800373</commentid>
    <comment_count>0</comment_count>
    <who name="joerg">joerg.domaschka</who>
    <bug_when>2010-08-18 02:33:51 -0400</bug_when>
    <thetext>Build Identifier: M20090917-0800

Obviously support for SearchPattern.R_REGEXP_MATCH is not implemented. Yet, the documentation of SearchPatter.createPattern(String stringPattern, int searchFor, int limitTo, int matchRule) does not mention it. Worse, createPattern() does not return null, but treats the regular expression as a normal pattern which leads to very unexpected behaviour.

The JavaDoc of SearchPattern.validateMatchRule(String stringPattern, int matchRule) says: &quot;when the R_REGEXP_MATCH flag is set, then the pattern is rejected as this kind of match is not supported yet and-1 is returned&quot;. This is not the way it is implemented. This is very confusing as well.

I am not requesting that this feature be implemented (even thought that would be nice), but a hint in the API that R_REGEXP_MATCH is not ready for use would have saved me some hours.

Reproducible: Always

Steps to Reproduce:
1. Create a file Test.java:
class Test {
 private void a(){
   Object o = new Object();
   String s = o.toString();
 }
}
2. In your search implementation:
String regex = &quot;java\\.lang\\.((String)|(Object));
SearchPattern pattern = SearchPattern.createPattern(regex,
IJavaSearchConstants.REFERENCES,IJavaSearchConstants.TYPE,
SearchPattern.R_REGEXP_MATCH);
...
SearchEngine se = new SearchEngine();
se.search(pattern, ..., ...,  ..., null);

you will notice that the respective SearchRequestor is never called.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2099293</commentid>
    <comment_count>1</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-04-26 23:06:05 -0400</bug_when>
    <thetext>Fixed the comment and released using commit 6a31f7b894cb57eee0afe92309b5b578eca7edb4</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2100933</commentid>
    <comment_count>2</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-05-01 06:01:05 -0400</bug_when>
    <thetext>OK, the docs for R_REGEXP_MATCH and createPattern(..) (two versions) are updated.

But what about validateMatchRule(..)? That still looks wrong to me, as per comment 0:
&gt; The JavaDoc of SearchPattern.validateMatchRule(String stringPattern, int matchRule) says: &quot;when the R_REGEXP_MATCH flag is set, then the pattern is rejected as this kind of match is not supported yet and-1 is returned&quot;. This is not the way it is implemented.

The implementation checks whether R_REGEXP_MATCH is set *together with* one of the other flags. Perhaps in this place the implementation should be adjusted to the spec?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2101400</commentid>
    <comment_count>3</comment_count>
      <attachid>214902</attachid>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-05-02 03:00:32 -0400</bug_when>
    <thetext>Created attachment 214902
code patch

Fix to validateMatchRule to return -1 if this expression is set. Thanks Stephan for catching this. Can you also review the change?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2101424</commentid>
    <comment_count>4</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-05-02 03:55:20 -0400</bug_when>
    <thetext>Patch looks good.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2101453</commentid>
    <comment_count>5</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-05-02 04:39:09 -0400</bug_when>
    <thetext>Thanks Stephan. Released the patch via commit 20fa95b73616c543b99afd6d679821c3656bc2c0</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2102054</commentid>
    <comment_count>6</comment_count>
      <attachid>214973</attachid>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-05-03 02:25:38 -0400</bug_when>
    <thetext>Created attachment 214973
plugin to verify

Verified using attached plugin and build I20120502-1800.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>214902</attachid>
            <date>2012-05-02 03:00:00 -0400</date>
            <delta_ts>2012-05-02 03:00:32 -0400</delta_ts>
            <desc>code patch</desc>
            <filename>patch.txt</filename>
            <type>text/plain</type>
            <size>777</size>
            <attacher name="Satyam Kandula">satyam.kandula</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQv
Y29yZS9zZWFyY2gvU2VhcmNoUGF0dGVybi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2Vh
cmNoL29yZy9lY2xpcHNlL2pkdC9jb3JlL3NlYXJjaC9TZWFyY2hQYXR0ZXJuLmphdmEKaW5kZXgg
NmIzYTQ3Ny4uYmQxZjRhNyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNo
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3NlYXJjaC9TZWFyY2hQYXR0ZXJuLmphdmEKKysrIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9jb3JlL3NlYXJjaC9TZWFy
Y2hQYXR0ZXJuLmphdmEKQEAgLTI1MDIsMTEgKzI1MDIsOCBAQAogCiAJLy8gVmVyaWZ5IFJlZ2V4
cCBtYXRjaCBydWxlCiAJaWYgKChtYXRjaFJ1bGUgJiBSX1JFR0VYUF9NQVRDSCkgIT0gMCkgewot
CQlpZiAoKG1hdGNoUnVsZSAmIFJfUEFUVEVSTl9NQVRDSCkgIT0gMCB8fCAobWF0Y2hSdWxlICYg
Ul9QUkVGSVhfTUFUQ0gpICE9IDAgfHwKLQkJCShtYXRjaFJ1bGUgJiBSX0NBTUVMQ0FTRV9NQVRD
SCkgIT0gMCB8fCAobWF0Y2hSdWxlICYgUl9DQU1FTENBU0VfU0FNRV9QQVJUX0NPVU5UX01BVENI
KSAhPSAwKSB7Ci0JCQkvLyByZWdleHAgaXMgbm90IHN1cHBvcnRlZCB5ZXQKLQkJCXJldHVybiAt
MTsKLQkJfQorCQkvLyByZWdleHAgaXMgbm90IHN1cHBvcnRlZCB5ZXQKKwkJcmV0dXJuIC0xOwog
CX0KIAogCS8vIFZlcmlmeSBQYXR0ZXJuIG1hdGNoIHJ1bGUK
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>214973</attachid>
            <date>2012-05-03 02:25:00 -0400</date>
            <delta_ts>2012-05-03 02:25:38 -0400</delta_ts>
            <desc>plugin to verify</desc>
            <filename>TestSearch.zip</filename>
            <type>application/octet-stream</type>
            <size>6244</size>
            <attacher name="Ayushman Jain">amj87.iitr</attacher>
            
              <data encoding="base64">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
AAAAVGVzdC8uY2xhc3NwYXRoUEsBAhQAFAAIAAgA8V2jQEnkf+HlAAAAmQIAAA0AAAAAAAAAAAAA
AAAADQEAAFRlc3QvLnByb2plY3RQSwECFAAUAAgACADxXaNACr5lb4oAAABsAQAAKQAAAAAAAAAA
AAAAAAAtAgAAVGVzdC8uc2V0dGluZ3Mvb3JnLmVjbGlwc2UuamR0LmNvcmUucHJlZnNQSwECFAAU
AAgACAAhXqNANUjYRM8AAABkAQAAGQAAAAAAAAAAAAAAAAAOAwAAVGVzdC9NRVRBLUlORi9NQU5J
RkVTVC5NRlBLAQIUABQACAAIACFeo0BHOGqTQwIAAE8EAAAdAAAAAAAAAAAAAAAAACQEAABUZXN0
L2Jpbi90ZXN0L0FjdGl2YXRvci5jbGFzc1BLAQIUABQACAAIAJ1eo0BCT8hFhgMAAAcHAAAoAAAA
AAAAAAAAAAAAALIGAABUZXN0L2Jpbi90ZXN0L2FjdGlvbnMvU2FtcGxlQWN0aW9uLmNsYXNzUEsB
AhQAFAAIAAgA8l2jQHR4cP1RAAAAhgAAABUAAAAAAAAAAAAAAAAAjgoAAFRlc3QvYnVpbGQucHJv
cGVydGllc1BLAQIUABQACAAIAPJdo0CQ2/OgeAIAANcDAAAVAAAAAAAAAAAAAAAAACILAABUZXN0
L2ljb25zL3NhbXBsZS5naWZQSwECFAAUAAgACADyXaNAyMYBqEEBAABiAwAADwAAAAAAAAAAAAAA
AADdDQAAVGVzdC9wbHVnaW4ueG1sUEsBAhQAFAAIAAgA8l2jQP/rn1EQAgAAbwUAABwAAAAAAAAA
AAAAAAAAWw8AAFRlc3Qvc3JjL3Rlc3QvQWN0aXZhdG9yLmphdmFQSwECFAAUAAgACACdXqNAL1t0
iCsDAAAYCAAAJwAAAAAAAAAAAAAAAAC1EQAAVGVzdC9zcmMvdGVzdC9hY3Rpb25zL1NhbXBsZUFj
dGlvbi5qYXZhUEsFBgAAAAALAAsAGQMAADUVAAAAAA==
</data>

          </attachment>
      

    </bug>

</bugzilla>