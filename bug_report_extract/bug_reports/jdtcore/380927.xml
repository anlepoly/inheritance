<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>380927</bug_id>
          
          <creation_ts>2012-05-29 11:29:00 -0400</creation_ts>
          <short_desc>VerifyError issue with inconsistent stack map frames with do..while and nested switch statements.</short_desc>
          <delta_ts>2013-08-29 10:55:05 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.8</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>3.8 RC3</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Olivier Thomann">Olivier_Thomann</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>amj87.iitr</cc>
    
    <cc>daniel_megert</cc>
    
    <cc>deepakazad</cc>
    
    <cc>eclipse</cc>
    
    <cc>jarthana</cc>
    
    <cc>satyam.kandula</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="51943"
          type_id="1"
          status="+"
          setter="amj87.iitr"
    />
    <flag name="review"
          id="51945"
          type_id="1"
          status="+"
          setter="Olivier_Thomann"
    />
    <flag name="review"
          id="51965"
          type_id="1"
          status="+"
          setter="satyam.kandula"
    />
    <flag name="review"
          id="51966"
          type_id="1"
          status="+"
          setter="daniel_megert"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2115518</commentid>
    <comment_count>0</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2012-05-29 11:29:17 -0400</bug_when>
    <thetext>From bug 359495 comment 19:
public class E7Bug {
    public final static Object f() {
        final Object a = null;
        Object b;

        label: do {
            switch (0) {
            case 1: {
                b = a;
            }
                break;
            default:
                break label;
            }
        } while (true);

        return a;
    }

    public static void main(final String[] args) {
        f();
    }
}

This still fails with latest when compiled in target 1.7 and run on a 1.7 VM.
In this case, there is no fallback and therefore the verify error is thrown.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2115524</commentid>
    <comment_count>1</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2012-05-29 11:30:24 -0400</bug_when>
    <thetext>I set it to major. Might be critical since there is no easy workaround for the user.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2115760</commentid>
    <comment_count>2</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2012-05-29 15:30:18 -0400</bug_when>
    <thetext>I am investigating what can be wrong.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2115897</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-05-29 23:15:32 -0400</bug_when>
    <thetext>(In reply to comment #1)
&gt; I set it to major. Might be critical since there is no easy workaround for the
&gt; user.

There is no workaround this being generated code. Ayush, can you do some
archaeology by comparing the stack map tables produced by different older
releases to see how far back this problem goes and document it here ?

I suspect this bug goes back long ways and has started showing up just now
only due to VMs being less tolerant starting SE 1.7.

If fix is straightforward, can be considered for 3.8 -</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2115898</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-05-29 23:17:18 -0400</bug_when>
    <thetext>Tentatively tagging for RC3.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2115957</commentid>
    <comment_count>5</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-05-30 01:59:39 -0400</bug_when>
    <thetext>(In reply to comment #3)
&gt; (In reply to comment #1)
&gt; &gt; I set it to major. Might be critical since there is no easy workaround for the
&gt; &gt; user.
&gt; 
&gt; There is no workaround this being generated code. Ayush, can you do some
&gt; archaeology by comparing the stack map tables produced by different older
&gt; releases to see how far back this problem goes and document it here ?
There is a workaround. The do-while loop can be replaced with while and it works.

public class E7Bug {
    public final static Object f() {
        final Object a = null;
        Object b;

        label: while (true) {
            switch (0) {
            case 1: {
                b = a;
            }
                break;
            default:
                break label;
            }
        }

        return a;
    }

    public static void main(final String[] args) {
        f();
    }
}

 
&gt; I suspect this bug goes back long ways and has started showing up just now
&gt; only due to VMs being less tolerant starting SE 1.7.
Yes, Goes back to 3.4</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2115958</commentid>
    <comment_count>6</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-05-30 02:07:07 -0400</bug_when>
    <thetext>(In reply to comment #5)
&gt; There is a workaround. The do-while loop can be replaced with while and it
&gt; works.

If we are asking the user to change his code, I am not sure if we can call it a workaround.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2115963</commentid>
    <comment_count>7</comment_count>
    <who name="Carsten Otto">eclipse</who>
    <bug_when>2012-05-30 02:10:30 -0400</bug_when>
    <thetext>(In reply to comment #5)
&gt; There is a workaround. The do-while loop can be replaced with while and it
&gt; works.

Sadly, this is not a valid workaround. The example code I created for this bug report is a stripped down version of code automatically generated by ANTLR. We do not have any influence on how ANTLR creates code, so we just have to deal with the code that is created. This is not possible with the Eclipse compiler.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2116001</commentid>
    <comment_count>8</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-05-30 03:52:42 -0400</bug_when>
    <thetext>Released disabled unit test via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=7ae9e904164ab9e611ba46366de94e1b02c0e7e7.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2116010</commentid>
    <comment_count>9</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-05-30 04:20:23 -0400</bug_when>
    <thetext>(In reply to comment #6)

&gt; If we are asking the user to change his code, I am not sure if we can call it a
&gt; workaround.

While not always true, in this case I would say Jay&apos;s point is particularly 
true because (a) the code is generated (b) the failure message gives no clue
to the user what needs to be done for a workaround - heck, the message from
the VM gives the compiler writer no clue let alone the hapless users :)

This has come in very late for 3.8, we will be open minded and consider it
as a candidate for 3.8 and work on it as priority basis. If we are unable
to complete the diligence processes in time, or if we are not perfectly
satisfied with the fix, the solution will have to be moved out to SR1</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2116042</commentid>
    <comment_count>10</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-05-30 05:45:39 -0400</bug_when>
    <thetext>A related, but different problem: the following program should fail
to compile, but doesn&apos;t. Javac refuses to compile.

// ---
public class X {
    public static void main(String [] args) {
        Object b;
        label: do {
            switch (0) {
            case 1:
                b = null;
                break;
            default:
                break label;
            }
        } while (true);
        System.out.println(b);
    }
}
// ----

Switch without the do-while fails to compile. Perhaps the underlying cause
for both symptoms is the same.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2116070</commentid>
    <comment_count>11</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-05-30 06:28:18 -0400</bug_when>
    <thetext>(In reply to comment #10)
&gt; A related, but different problem: the following program should fail
&gt; to compile, but doesn&apos;t. Javac refuses to compile.

[...]

&gt; Switch without the do-while fails to compile. 

Problem is only with the do-while enclosed switch. When enclosed by
while or for, program doesn&apos;t compile (which is the right behavior)

Likewise the verify error goes away when switch is surrounded by
while or for loops.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2116142</commentid>
    <comment_count>12</comment_count>
      <attachid>216471</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-05-30 08:24:43 -0400</bug_when>
    <thetext>Created attachment 216471
Patch under test


    This patch which is under test fixes both the issues i.e the verify
error reported in comment# 0 and the missing error message reported in 
comment#10 (same underlying issue).

    Basically, during data flow analysis of do-while loops, we end up
inadvertently updating the upstream flow information. The fix then is
to simply make a local copy of the abstraction that was passed before
modifying (which while, for and foreach loops already do.)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2116145</commentid>
    <comment_count>13</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-05-30 08:26:30 -0400</bug_when>
    <thetext>
The fix under test is a simple one - just 7 characters change, but we don&apos;t
have the time to complete the diligence processes due before RC3.

Will consider for RC4.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2116238</commentid>
    <comment_count>14</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-05-30 09:48:21 -0400</bug_when>
    <thetext>  
  The proposed patch passes all JDT/Core tests. All the new tests added
have been cross checked with JDK7 to confirm that eclipse behavior matches
javac.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2116239</commentid>
    <comment_count>15</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-05-30 09:49:00 -0400</bug_when>
    <thetext>Stephan, thanks for additional review.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2116240</commentid>
    <comment_count>16</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-05-30 09:49:50 -0400</bug_when>
    <thetext>Olivier, if you have time, please look through the patch - it is tiny.
Let me know if you see any issues.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2116244</commentid>
    <comment_count>17</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-05-30 09:53:09 -0400</bug_when>
    <thetext>(In reply to comment #5)
&gt; (In reply to comment #3)

&gt; &gt; I suspect this bug goes back long ways and has started showing up just now
&gt; &gt; only due to VMs being less tolerant starting SE 1.7.
&gt; Yes, Goes back to 3.4

While this statement is true of the test case reported in comment#0,
the code mentioned in comment#10, triggers a verify error from JRE4
VM all the way to JRE7.

 ==&gt; So this is NOT only a 1.7 project issue.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2116304</commentid>
    <comment_count>18</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-05-30 10:47:13 -0400</bug_when>
    <thetext>
Ayush has come up with a slightly different fix where it is
the caller that makes a copy as opposed to the callee. We tried
analyzing the code base for the &quot;right&quot; way of doing things
and couldn&apos;t come to one answer. There are places where the
caller defensively makes copies, there are cases where the
callee does, there are places where both do and hopefully there
aren&apos;t places where neither does other than the current scenario.

We both agree that fixing it in either place is a safe and good
fix for the problem at hand.

Post 3.8, as a follow up activity we need to go through all uses
of analyzeCode to make sure there is a clear notion of ownership
of these objects.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2116311</commentid>
    <comment_count>19</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-05-30 10:55:38 -0400</bug_when>
    <thetext>(In reply to comment #18)
&gt; Ayush has come up with a slightly different fix where it is
&gt; the caller that makes a copy as opposed to the callee.

So, basically in this LabeledStatement.analyseCode(..) can make a copy of flowInfo in the call analyseCode(..) of the do-while on line 53. 

&gt; Post 3.8, as a follow up activity we need to go through all uses
&gt; of analyzeCode to make sure there is a clear notion of ownership
&gt; of these objects.
I&apos;d suggest making all callers of analyseCode(..), which use the passed flowInfo instead of overwriting it with the return value, copy the flowInfo. Also documenting in the javadoc of analyseCode(..) that the flowInfo can be affected.

With this, +1 for the current patch since it solves this bug.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2116319</commentid>
    <comment_count>20</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2012-05-30 11:01:57 -0400</bug_when>
    <thetext>With the patch, we now return a reduced initialization range for the local &apos;b&apos;.
  // Method descriptor #15 ()Ljava/lang/Object;
  // Stack: 1, Locals: 2
  public static final java.lang.Object f();
     0  aconst_null
     1  astore_0 [a]
     2  iconst_0
     3  tableswitch default: 25
          case 1: 20
    20  aload_0 [a]
    21  astore_1 [b]
    22  goto 2
    25  aload_0 [a]
    26  areturn
      Line numbers:
        [pc: 0, line: 3]
        [pc: 2, line: 7]
        [pc: 20, line: 9]
        [pc: 22, line: 11]
        [pc: 25, line: 16]
      Local variable table:
        [pc: 2, pc: 27] local: a index: 0 type: java.lang.Object
        [pc: 22, pc: 25] local: b index: 1 type: java.lang.Object
      Stack map table: number of frames 3
        [pc: 2, append: {java.lang.Object}]
        [pc: 20, same]
        [pc: 25, same]

This is changing the stack map frame at pc 25.

Note that javac is wrong for the range of the local variable &apos;b&apos;:

  // Method descriptor #13 (I)Ljava/lang/Object;
  // Stack: 1, Locals: 3
  public static final Object f(int i);
     0  aconst_null
     1  astore_1 [a]
     2  iload_0 [i]
     3  lookupswitch default: 25
          case 1: 20
    20  aload_1 [a]
    21  astore_2 [b]
    22  goto 2
    25  goto 28
    28  aload_1 [a]
    29  areturn
      Line numbers:
        [pc: 0, line: 3]
        [pc: 2, line: 7]
        [pc: 20, line: 9]
        [pc: 22, line: 11]
        [pc: 25, line: 13]
        [pc: 28, line: 16]
      Local variable table:
        [pc: 0, pc: 30] local: i index: 0 type: int
        [pc: 2, pc: 30] local: a index: 1 type: Object
        [pc: 22, pc: 30] local: b index: 2 type: Object
      Stack map table: number of frames 4
        [pc: 2, append: {Object}]
        [pc: 20, same]
        [pc: 25, same]
        [pc: 28, same]

&apos;b&apos; is said to be initialized from 22 to 30 (excluded) and this would mean that
&apos;b&apos; is initialized at the return a; statement which is wrong.

If you add: System.out.println(b); before return a;, you will get an error
about &apos;b&apos; might not have been initialized.

So the patch looks good to me. I&apos;ll review further today before approving. Nice
catch, Srikanth!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2116453</commentid>
    <comment_count>21</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2012-05-30 14:24:27 -0400</bug_when>
    <thetext>Patch looks good. +1</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2116596</commentid>
    <comment_count>22</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-05-30 18:15:36 -0400</bug_when>
    <thetext>Satyam, can you look through the patch and preverify it ? We may be 
experiencing a radio blackout with Stephan being on the far side of
the moon.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2116606</commentid>
    <comment_count>23</comment_count>
      <attachid>216544</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-05-30 18:50:39 -0400</bug_when>
    <thetext>Created attachment 216544
Same patch with one more test</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2116663</commentid>
    <comment_count>24</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2012-05-31 02:06:14 -0400</bug_when>
    <thetext>RC4 is too late for such a change. This can lead to different byte codes and hence comparator tests might fail. On the other hand the bug is severe enough to get addressed for 3.8 and the fix is small and good. We need to put this into RC3 now and ask for a rebuild.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2116665</commentid>
    <comment_count>25</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-05-31 02:13:38 -0400</bug_when>
    <thetext>The changes look good. +1</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2116666</commentid>
    <comment_count>26</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-05-31 02:20:32 -0400</bug_when>
    <thetext>Thanks a lot everyone. 

Satyam, could you please release the fix and also take care of build
input in Jay&apos;s absence - We need to ask for a rebuild explicitly
at releng mailing list. Please provide a link to this bug at the
top level and comment#24 also. TIA.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2116670</commentid>
    <comment_count>27</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-05-31 02:33:49 -0400</bug_when>
    <thetext>Deepak, could you run all the UI tests against this patch and
report status here - Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2116674</commentid>
    <comment_count>28</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-05-31 02:41:03 -0400</bug_when>
    <thetext>(In reply to comment #26)
Released the fix via commit 59758b3ac964ea48fbbbf5d314c8ed8b19dc60bb
&gt; Thanks a lot everyone. 
&gt; 
&gt; Satyam, could you please release the fix and also take care of build
&gt; input in Jay&apos;s absence - We need to ask for a rebuild explicitly
&gt; at releng mailing list. Please provide a link to this bug at the
&gt; top level and comment#24 also. TIA.
Sure, will take care of this shortly.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2116700</commentid>
    <comment_count>29</comment_count>
    <who name="Deepak Azad">deepakazad</who>
    <bug_when>2012-05-31 04:02:30 -0400</bug_when>
    <thetext>(In reply to comment #27)
&gt; Deepak, could you run all the UI tests against this patch and
&gt; report status here - Thanks.

All UI tests pass.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2116704</commentid>
    <comment_count>30</comment_count>
    <who name="Carsten Otto">eclipse</who>
    <bug_when>2012-05-31 04:11:42 -0400</bug_when>
    <thetext>Hi,

I created the example Olivier used to create this report.

Could you point me to a compiled and runable release, so that I can check against my code? I hope that all of the generated code now compiles correctly, but who knows (I only submitted one of at least two problems, because the second one was way too big to strip down by hand).

I can run Linux x86_64 or Mac OS X 10.7.4 right now.

Thanks,
Carsten</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2116980</commentid>
    <comment_count>31</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2012-05-31 10:59:38 -0400</bug_when>
    <thetext>Verified both test cases in 3.8-I20120531-0600.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2117365</commentid>
    <comment_count>32</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-06-01 01:33:24 -0400</bug_when>
    <thetext>(In reply to comment #30)

&gt; Could you point me to a compiled and runable release, so that I can check
&gt; against my code? I hope that all of the generated code now compiles correctly,
&gt; but who knows (I only submitted one of at least two problems, because the
&gt; second one was way too big to strip down by hand).

http://download.eclipse.org/eclipse/downloads/drops/I20120531-0600/ has
the fix.

Please open another ticket if your other case still shows a problem. Thanks!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2117367</commentid>
    <comment_count>33</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2012-06-01 01:40:00 -0400</bug_when>
    <thetext>Verified both test cases in 4.2-I20120531-1500.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2117490</commentid>
    <comment_count>34</comment_count>
    <who name="Carsten Otto">eclipse</who>
    <bug_when>2012-06-01 06:14:35 -0400</bug_when>
    <thetext>Our code, which previously showed this or some related problem at least twice, now works without a problem (with 3.8-I20120531-0600). Thanks!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2117502</commentid>
    <comment_count>35</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-06-01 06:36:02 -0400</bug_when>
    <thetext>(In reply to comment #34)
&gt; Our code, which previously showed this or some related problem at least twice,
&gt; now works without a problem (with 3.8-I20120531-0600). Thanks!

Thank you ! For reporting the problem and for promptly confirming the fix.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>216471</attachid>
            <date>2012-05-30 08:24:00 -0400</date>
            <delta_ts>2012-05-30 18:50:39 -0400</delta_ts>
            <desc>Patch under test</desc>
            <filename>patch.txt</filename>
            <type>text/plain</type>
            <size>7898</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1N3aXRjaFRlc3QuamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1N3aXRjaFRlc3QuamF2YQppbmRleCA0
MTRlNmUwLi5hMDY3OGE4IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5j
b21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lv
bi9Td2l0Y2hUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGls
ZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vU3dp
dGNoVGVzdC5qYXZhCkBAIC0yMTY2LDggKzIxNjYsNiBAQAogfQogLy8gaHR0cHM6Ly9idWdzLmVj
bGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM4MDkyNwogcHVibGljIHZvaWQgdGVzdEJ1
ZzM4MDkyNygpIHsKLQlpZiAodGhpcy5jb21wbGlhbmNlTGV2ZWwgPj0gQ2xhc3NGaWxlQ29uc3Rh
bnRzLkpESzFfNykKLQkJcmV0dXJuOwogCXRoaXMucnVuQ29uZm9ybVRlc3QoCiAJCQluZXcgU3Ry
aW5nW10gewogCQkJCSJYLmphdmEiLApAQCAtMjE5NSw2ICsyMTkzLDIwOSBAQAogCQkJfSwKIAkJ
CSJTdWNjZXNzIik7CQogfQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19i
dWcuY2dpP2lkPTM4MDkyNworcHVibGljIHZvaWQgdGVzdEJ1ZzM4MDkyN2EoKSB7CisJdGhpcy5y
dW5Db25mb3JtVGVzdCgKKwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJIlguamF2YSIsCisJCQkJInB1
YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJCSIgICAgcHVibGljIGZpbmFsIHN0YXRpYyBPYmplY3Qg
ZigpIHtcbiIgKworCQkJCSIgICAgICAgIGZpbmFsIE9iamVjdCBhID0gbnVsbDtcbiIgKworCQkJ
CSIgICAgICAgIE9iamVjdCBiO1xuIiArCisJCQkJIiAgICAgICAgbGFiZWw6IHdoaWxlICh0cnVl
KSB7XG4iICsKKwkJCQkiICAgICAgICAgICAgc3dpdGNoICgwKSB7XG4iICsKKwkJCQkiICAgICAg
ICAgICAgY2FzZSAxOiB7XG4iICsKKwkJCQkiICAgICAgICAgICAgICAgIGIgPSBhO1xuIiArCisJ
CQkJIiAgICAgICAgICAgIH1cbiIgKworCQkJCSIgICAgICAgICAgICAgICAgYnJlYWs7XG4iICsK
KwkJCQkiICAgICAgICAgICAgZGVmYXVsdDpcbiIgKworCQkJCSIgICAgICAgICAgICAgICAgYnJl
YWsgbGFiZWw7XG4iICsKKwkJCQkiICAgICAgICAgICAgfVxuIiArCisJCQkJIiAgICAgICAgfVxu
IiArCisJCQkJIiAgICAgICAgcmV0dXJuIGE7XG4iICsKKwkJCQkiICAgIH1cbiIgKworCQkJCSIg
ICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oZmluYWwgU3RyaW5nW10gYXJncykge1xuIiArCisJ
CQkJIiAgICAgICAgZigpO1xuIiArCisJCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwi
U3VjY2Vzc1wiKTtcbiIgKworCQkJCSIgICAgfVxuIiArCisJCQkJIn1cbiIsCisJCQl9LAorCQkJ
IlN1Y2Nlc3MiKTsJCit9CisvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1
Zy5jZ2k/aWQ9MzgwOTI3CitwdWJsaWMgdm9pZCB0ZXN0QnVnMzgwOTI3YigpIHsKKwl0aGlzLnJ1
bkNvbmZvcm1UZXN0KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiWC5qYXZhIiwKKwkJCQkicHVi
bGljIGNsYXNzIFgge1xuIiArCisJCQkJIiAgICBwdWJsaWMgZmluYWwgc3RhdGljIE9iamVjdCBm
KCkge1xuIiArCisJCQkJIiAgICAgICAgZmluYWwgT2JqZWN0IGEgPSBudWxsO1xuIiArCisJCQkJ
IiAgICAgICAgT2JqZWN0IGI7XG4iICsKKwkJCQkiICAgICAgICBsYWJlbDogZm9yKDs7KSB7XG4i
ICsKKwkJCQkiICAgICAgICAgICAgc3dpdGNoICgwKSB7XG4iICsKKwkJCQkiICAgICAgICAgICAg
Y2FzZSAxOiB7XG4iICsKKwkJCQkiICAgICAgICAgICAgICAgIGIgPSBhO1xuIiArCisJCQkJIiAg
ICAgICAgICAgIH1cbiIgKworCQkJCSIgICAgICAgICAgICAgICAgYnJlYWs7XG4iICsKKwkJCQki
ICAgICAgICAgICAgZGVmYXVsdDpcbiIgKworCQkJCSIgICAgICAgICAgICAgICAgYnJlYWsgbGFi
ZWw7XG4iICsKKwkJCQkiICAgICAgICAgICAgfVxuIiArCisJCQkJIiAgICAgICAgfVxuIiArCisJ
CQkJIiAgICAgICAgcmV0dXJuIGE7XG4iICsKKwkJCQkiICAgIH1cbiIgKworCQkJCSIgICAgcHVi
bGljIHN0YXRpYyB2b2lkIG1haW4oZmluYWwgU3RyaW5nW10gYXJncykge1xuIiArCisJCQkJIiAg
ICAgICAgZigpO1xuIiArCisJCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwiU3VjY2Vz
c1wiKTtcbiIgKworCQkJCSIgICAgfVxuIiArCisJCQkJIn1cbiIsCisJCQl9LAorCQkJIlN1Y2Nl
c3MiKTsJCit9CisvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/
aWQ9MzgwOTI3CitwdWJsaWMgdm9pZCB0ZXN0QnVnMzgwOTI3YygpIHsKKwlpZiAodGhpcy5jb21w
bGlhbmNlTGV2ZWwgPCBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV81KQorCQlyZXR1cm47CisJdGhp
cy5ydW5Db25mb3JtVGVzdCgKKwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJIlguamF2YSIsCisJCQkJ
InB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJCSIgICAgcHVibGljIGZpbmFsIHN0YXRpYyBPYmpl
Y3QgZigpIHtcbiIgKworCQkJCSIgICAgICAgIGZpbmFsIE9iamVjdCBhID0gbnVsbDtcbiIgKwor
CQkJCSIgICAgICAgIE9iamVjdCBiO1xuIiArCisJCQkJIiAgICAgICAgbGFiZWw6IGZvcihpbnQg
aSA6IG5ldyBpbnQgW10geyAxMCB9KSB7XG4iICsKKwkJCQkiICAgICAgICAgICAgc3dpdGNoICgw
KSB7XG4iICsKKwkJCQkiICAgICAgICAgICAgY2FzZSAxOiB7XG4iICsKKwkJCQkiICAgICAgICAg
ICAgICAgIGIgPSBhO1xuIiArCisJCQkJIiAgICAgICAgICAgIH1cbiIgKworCQkJCSIgICAgICAg
ICAgICAgICAgYnJlYWs7XG4iICsKKwkJCQkiICAgICAgICAgICAgZGVmYXVsdDpcbiIgKworCQkJ
CSIgICAgICAgICAgICAgICAgYnJlYWsgbGFiZWw7XG4iICsKKwkJCQkiICAgICAgICAgICAgfVxu
IiArCisJCQkJIiAgICAgICAgfVxuIiArCisJCQkJIiAgICAgICAgcmV0dXJuIGE7XG4iICsKKwkJ
CQkiICAgIH1cbiIgKworCQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oZmluYWwgU3Ry
aW5nW10gYXJncykge1xuIiArCisJCQkJIiAgICAgICAgZigpO1xuIiArCisJCQkJIiAgICAgICAg
U3lzdGVtLm91dC5wcmludGxuKFwiU3VjY2Vzc1wiKTtcbiIgKworCQkJCSIgICAgfVxuIiArCisJ
CQkJIn1cbiIsCisJCQl9LAorCQkJIlN1Y2Nlc3MiKTsJCit9CisvLyBodHRwczovL2J1Z3MuZWNs
aXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzgwOTI3CitwdWJsaWMgdm9pZCB0ZXN0QnVn
MzgwOTI3ZCgpIHsKKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKKwkJCW5ldyBTdHJpbmdbXSB7CisJ
CQkJIlguamF2YSIsCisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJCSIgICAgcHVibGlj
IHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJCSIgICAgICAgIE9i
amVjdCBiO1xuIiArCisJCQkJIiAgICAgICAgbGFiZWw6IGRvIHtcbiIgKworCQkJCSIgICAgICAg
ICAgICBzd2l0Y2ggKDApIHtcbiIgKworCQkJCSIgICAgICAgICAgICBjYXNlIDE6XG4iICsKKwkJ
CQkiICAgICAgICAgICAgICAgIGIgPSBudWxsO1xuIiArCisJCQkJIiAgICAgICAgICAgICAgICBi
cmVhaztcbiIgKworCQkJCSIgICAgICAgICAgICBkZWZhdWx0OlxuIiArCisJCQkJIiAgICAgICAg
ICAgICAgICBicmVhayBsYWJlbDtcbiIgKworCQkJCSIgICAgICAgICAgICB9XG4iICsKKwkJCQki
ICAgICAgICB9IHdoaWxlICh0cnVlKTtcbiIgKworCQkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJp
bnRsbihiKTtcbiIgKworCQkJCSIgICAgfVxuIiArCisJCQkJIn1cbiIsCisJCQl9LAorCQkJIi0t
LS0tLS0tLS1cbiIgKyAKKwkJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTMpXG4iICsg
CisJCQkiCVN5c3RlbS5vdXQucHJpbnRsbihiKTtcbiIgKyAKKwkJCSIJICAgICAgICAgICAgICAg
ICAgIF5cbiIgKyAKKwkJCSJUaGUgbG9jYWwgdmFyaWFibGUgYiBtYXkgbm90IGhhdmUgYmVlbiBp
bml0aWFsaXplZFxuIiArIAorCQkJIi0tLS0tLS0tLS1cbiIpOwkKK30KKy8vIGh0dHBzOi8vYnVn
cy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zODA5MjcKK3B1YmxpYyB2b2lkIHRl
c3RCdWczODA5MjdlKCkgeworCXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQkJbmV3IFN0cmluZ1td
IHsKKwkJCQkiWC5qYXZhIiwKKwkJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkJIiAgICBw
dWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykge1xuIiArCisJCQkJIiAgICAg
ICAgT2JqZWN0IGI7XG4iICsKKwkJCQkiICAgICAgICBsYWJlbDogd2hpbGUgKHRydWUpIHtcbiIg
KworCQkJCSIgICAgICAgICAgICBzd2l0Y2ggKDApIHtcbiIgKworCQkJCSIgICAgICAgICAgICBj
YXNlIDE6XG4iICsKKwkJCQkiICAgICAgICAgICAgICAgIGIgPSBudWxsO1xuIiArCisJCQkJIiAg
ICAgICAgICAgICAgICBicmVhaztcbiIgKworCQkJCSIgICAgICAgICAgICBkZWZhdWx0OlxuIiAr
CisJCQkJIiAgICAgICAgICAgICAgICBicmVhayBsYWJlbDtcbiIgKworCQkJCSIgICAgICAgICAg
ICB9XG4iICsKKwkJCQkiICAgICAgICB9XG4iICsKKwkJCQkiICAgICAgICBTeXN0ZW0ub3V0LnBy
aW50bG4oYik7XG4iICsKKwkJCQkiICAgIH1cbiIgKworCQkJCSJ9XG4iLAorCQkJfSwKKwkJCSIt
LS0tLS0tLS0tXG4iICsgCisJCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDEzKVxuIiAr
IAorCQkJIglTeXN0ZW0ub3V0LnByaW50bG4oYik7XG4iICsgCisJCQkiCSAgICAgICAgICAgICAg
ICAgICBeXG4iICsgCisJCQkiVGhlIGxvY2FsIHZhcmlhYmxlIGIgbWF5IG5vdCBoYXZlIGJlZW4g
aW5pdGlhbGl6ZWRcbiIgKyAKKwkJCSItLS0tLS0tLS0tXG4iKTsJCit9CisvLyBodHRwczovL2J1
Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzgwOTI3CitwdWJsaWMgdm9pZCB0
ZXN0QnVnMzgwOTI3ZigpIHsKKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKKwkJCW5ldyBTdHJpbmdb
XSB7CisJCQkJIlguamF2YSIsCisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJCSIgICAg
cHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJCSIgICAg
ICAgIE9iamVjdCBiO1xuIiArCisJCQkJIiAgICAgICAgbGFiZWw6IGZvcig7Oykge1xuIiArCisJ
CQkJIiAgICAgICAgICAgIHN3aXRjaCAoMCkge1xuIiArCisJCQkJIiAgICAgICAgICAgIGNhc2Ug
MTpcbiIgKworCQkJCSIgICAgICAgICAgICAgICAgYiA9IG51bGw7XG4iICsKKwkJCQkiICAgICAg
ICAgICAgICAgIGJyZWFrO1xuIiArCisJCQkJIiAgICAgICAgICAgIGRlZmF1bHQ6XG4iICsKKwkJ
CQkiICAgICAgICAgICAgICAgIGJyZWFrIGxhYmVsO1xuIiArCisJCQkJIiAgICAgICAgICAgIH1c
biIgKworCQkJCSIgICAgICAgIH1cbiIgKworCQkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRs
bihiKTtcbiIgKworCQkJCSIgICAgfVxuIiArCisJCQkJIn1cbiIsCisJCQl9LAorCQkJIi0tLS0t
LS0tLS1cbiIgKyAKKwkJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTMpXG4iICsgCisJ
CQkiCVN5c3RlbS5vdXQucHJpbnRsbihiKTtcbiIgKyAKKwkJCSIJICAgICAgICAgICAgICAgICAg
IF5cbiIgKyAKKwkJCSJUaGUgbG9jYWwgdmFyaWFibGUgYiBtYXkgbm90IGhhdmUgYmVlbiBpbml0
aWFsaXplZFxuIiArIAorCQkJIi0tLS0tLS0tLS1cbiIpOwkKK30KKy8vIGh0dHBzOi8vYnVncy5l
Y2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zODA5MjcKK3B1YmxpYyB2b2lkIHRlc3RC
dWczODA5MjdnKCkgeworCWlmICh0aGlzLmNvbXBsaWFuY2VMZXZlbCA8IENsYXNzRmlsZUNvbnN0
YW50cy5KREsxXzUpCisJCXJldHVybjsKKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKKwkJCW5ldyBT
dHJpbmdbXSB7CisJCQkJIlguamF2YSIsCisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJ
CSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKworCQkJ
CSIgICAgICAgIE9iamVjdCBiO1xuIiArCisJCQkJIiAgICAgICAgbGFiZWw6IGZvcihpbnQgaSA6
IG5ldyBpbnQgW10geyAxMCB9KSB7XG4iICsKKwkJCQkiICAgICAgICAgICAgc3dpdGNoICgwKSB7
XG4iICsKKwkJCQkiICAgICAgICAgICAgY2FzZSAxOlxuIiArCisJCQkJIiAgICAgICAgICAgICAg
ICBiID0gbnVsbDtcbiIgKworCQkJCSIgICAgICAgICAgICAgICAgYnJlYWs7XG4iICsKKwkJCQki
ICAgICAgICAgICAgZGVmYXVsdDpcbiIgKworCQkJCSIgICAgICAgICAgICAgICAgYnJlYWsgbGFi
ZWw7XG4iICsKKwkJCQkiICAgICAgICAgICAgfVxuIiArCisJCQkJIiAgICAgICAgfVxuIiArCisJ
CQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGIpO1xuIiArCisJCQkJIiAgICB9XG4iICsK
KwkJCQkifVxuIiwKKwkJCX0sCisJCQkiLS0tLS0tLS0tLVxuIiArIAorCQkJIjEuIEVSUk9SIGlu
IFguamF2YSAoYXQgbGluZSAxMylcbiIgKyAKKwkJCSIJU3lzdGVtLm91dC5wcmludGxuKGIpO1xu
IiArIAorCQkJIgkgICAgICAgICAgICAgICAgICAgXlxuIiArIAorCQkJIlRoZSBsb2NhbCB2YXJp
YWJsZSBiIG1heSBub3QgaGF2ZSBiZWVuIGluaXRpYWxpemVkXG4iICsgCisJCQkiLS0tLS0tLS0t
LVxuIik7CQorfQogcHVibGljIHN0YXRpYyBDbGFzcyB0ZXN0Q2xhc3MoKSB7CiAJcmV0dXJuIFN3
aXRjaFRlc3QuY2xhc3M7CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0RvU3RhdGVtZW50Lmph
dmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvYXN0L0RvU3RhdGVtZW50LmphdmEKaW5kZXggNzc0YzdhYS4uMWZkOGYzZSAx
MDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Eb1N0YXRlbWVudC5qYXZhCisrKyBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3Qv
RG9TdGF0ZW1lbnQuamF2YQpAQCAtMTMwLDcgKzEzMCw3IEBACiAJCQkJCQkJCS8vIHJlY292ZXIg
dXBzdHJlYW0gbnVsbCBpbmZvCiAJCQkJCQlpc0NvbmRpdGlvbk9wdGltaXplZFRydWUsCiAJCQkJ
CQkoY29uZEluZm8udGFnQml0cyAmIEZsb3dJbmZvLlVOUkVBQ0hBQkxFKSA9PSAwCi0JCQkJCQkJ
CT8gZmxvd0luZm8uYWRkSW5pdGlhbGl6YXRpb25zRnJvbShjb25kSW5mby5pbml0c1doZW5GYWxz
ZSgpKSAKKwkJCQkJCQkJPyBmbG93SW5mby5jb3B5KCkuYWRkSW5pdGlhbGl6YXRpb25zRnJvbShj
b25kSW5mby5pbml0c1doZW5GYWxzZSgpKSAvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9MzgwOTI3CiAJCQkJCQkJCTogY29uZEluZm8sCiAJCQkJCQkJLy8g
cmVjb3ZlciBudWxsIGluaXRzIGZyb20gYmVmb3JlIGNvbmRpdGlvbiBhbmFseXNpcwogCQkJCQkJ
ZmFsc2UsIC8vIG5ldmVyIGNvbnNpZGVyIG9wdCBmYWxzZSBjYXNlIGZvciBETyBsb29wLCBzaW5j
ZSBicmVhayBjYW4gYWx3YXlzIG9jY3VyICg0Nzc3Nik=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>216544</attachid>
            <date>2012-05-30 18:50:00 -0400</date>
            <delta_ts>2012-05-31 02:06:44 -0400</delta_ts>
            <desc>Same patch with one more test</desc>
            <filename>patch.txt</filename>
            <type>text/plain</type>
            <size>11276</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1N0YWNrTWFwQXR0cmli
dXRlVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vU3RhY2tNYXBBdHRy
aWJ1dGVUZXN0LmphdmEKaW5kZXggZjZkNDI0Ni4uYWE5NTk4MiAxMDA2NDQKLS0tIGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vU3RhY2tNYXBBdHRyaWJ1dGVUZXN0LmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vU3RhY2tNYXBBdHRyaWJ1dGVUZXN0LmphdmEK
QEAgLTc5MTIsNCArNzkxMiw3OCBAQAogCQkJCWFzc2VydEVxdWFscygiV3JvbmcgY29udGVudHMi
LCBleHBlY3RlZE91dHB1dCwgYWN0dWFsT3V0cHV0KTsKIAkJCX0KIAl9CisJLy8gaHR0cHM6Ly9i
dWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM4MDkyNworCS8vIFZlcmlmeSB0
aGUgcmVkdWNlZCByYW5nZSBvZiBsb2NhbHMuCisJcHVibGljIHZvaWQgdGVzdEJ1ZzM4MDkyNygp
IHRocm93cyBFeGNlcHRpb24geworCQl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQkJCW5ldyBTdHJp
bmdbXSB7CisJCQkJCQkiWC5qYXZhIiwKKwkJCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJ
CQkJCSIgICAgcHVibGljIGZpbmFsIHN0YXRpYyBPYmplY3QgZigpIHtcbiIgKworCQkJCQkJIiAg
ICAgICAgZmluYWwgT2JqZWN0IGEgPSBudWxsO1xuIiArCisJCQkJCQkiICAgICAgICBPYmplY3Qg
YjtcbiIgKworCQkJCQkJIiAgICAgICAgbGFiZWw6IGRvIHtcbiIgKworCQkJCQkJIiAgICAgICAg
ICAgIHN3aXRjaCAoMCkge1xuIiArCisJCQkJCQkiICAgICAgICAgICAgY2FzZSAxOiB7XG4iICsK
KwkJCQkJCSIgICAgICAgICAgICAgICAgYiA9IGE7XG4iICsKKwkJCQkJCSIgICAgICAgICAgICB9
XG4iICsKKwkJCQkJCSIgICAgICAgICAgICAgICAgYnJlYWs7XG4iICsKKwkJCQkJCSIgICAgICAg
ICAgICBkZWZhdWx0OlxuIiArCisJCQkJCQkiICAgICAgICAgICAgICAgIGJyZWFrIGxhYmVsO1xu
IiArCisJCQkJCQkiICAgICAgICAgICAgfVxuIiArCisJCQkJCQkiICAgICAgICB9IHdoaWxlICh0
cnVlKTtcbiIgKworCQkJCQkJIiAgICAgICAgcmV0dXJuIGE7XG4iICsKKwkJCQkJCSIgICAgfVxu
IiArCisJCQkJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKGZpbmFsIFN0cmluZ1tdIGFy
Z3MpIHtcbiIgKworCQkJCQkJIiAgICAgICAgZigpO1xuIiArCisJCQkJCQkiICAgICAgICBTeXN0
ZW0ub3V0LnByaW50bG4oXCJTVUNDRVNTXCIpO1xuIiArCisJCQkJCQkiICAgIH1cbiIgKworCQkJ
CQkJIn1cbiIKKwkJCQl9LAorCQkJCSJTVUNDRVNTIik7CisKKwkJCUNsYXNzRmlsZUJ5dGVzRGlz
YXNzZW1ibGVyIGRpc2Fzc2VtYmxlciA9IFRvb2xGYWN0b3J5LmNyZWF0ZURlZmF1bHRDbGFzc0Zp
bGVCeXRlc0Rpc2Fzc2VtYmxlcigpOworCQkJYnl0ZVtdIGNsYXNzRmlsZUJ5dGVzID0gb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLnV0aWwuVXRpbC5nZXRGaWxlQnl0ZUNvbnRlbnQo
bmV3IEZpbGUoT1VUUFVUX0RJUiArIEZpbGUuc2VwYXJhdG9yICArIlguY2xhc3MiKSk7CisJCQlT
dHJpbmcgYWN0dWFsT3V0cHV0ID0KKwkJCQlkaXNhc3NlbWJsZXIuZGlzYXNzZW1ibGUoCisJCQkJ
CWNsYXNzRmlsZUJ5dGVzLAorCQkJCQkiXG4iLAorCQkJCQlDbGFzc0ZpbGVCeXRlc0Rpc2Fzc2Vt
Ymxlci5ERVRBSUxFRCk7CisKKwkJCVN0cmluZyBleHBlY3RlZE91dHB1dCA9CisJCQkJCSIgIC8v
IE1ldGhvZCBkZXNjcmlwdG9yICMxNSAoKUxqYXZhL2xhbmcvT2JqZWN0O1xuIiArIAorCQkJCQki
ICAvLyBTdGFjazogMSwgTG9jYWxzOiAyXG4iICsgCisJCQkJCSIgIHB1YmxpYyBzdGF0aWMgZmlu
YWwgamF2YS5sYW5nLk9iamVjdCBmKCk7XG4iICsgCisJCQkJCSIgICAgIDAgIGFjb25zdF9udWxs
XG4iICsgCisJCQkJCSIgICAgIDEgIGFzdG9yZV8wIFthXVxuIiArIAorCQkJCQkiICAgICAyICBp
Y29uc3RfMFxuIiArIAorCQkJCQkiICAgICAzICB0YWJsZXN3aXRjaCBkZWZhdWx0OiAyNVxuIiAr
IAorCQkJCQkiICAgICAgICAgIGNhc2UgMTogMjBcbiIgKyAKKwkJCQkJIiAgICAyMCAgYWxvYWRf
MCBbYV1cbiIgKyAKKwkJCQkJIiAgICAyMSAgYXN0b3JlXzEgW2JdXG4iICsgCisJCQkJCSIgICAg
MjIgIGdvdG8gMlxuIiArIAorCQkJCQkiICAgIDI1ICBhbG9hZF8wIFthXVxuIiArIAorCQkJCQki
ICAgIDI2ICBhcmV0dXJuXG4iICsgCisJCQkJCSIgICAgICBMaW5lIG51bWJlcnM6XG4iICsgCisJ
CQkJCSIgICAgICAgIFtwYzogMCwgbGluZTogM11cbiIgKyAKKwkJCQkJIiAgICAgICAgW3BjOiAy
LCBsaW5lOiA2XVxuIiArIAorCQkJCQkiICAgICAgICBbcGM6IDIwLCBsaW5lOiA4XVxuIiArIAor
CQkJCQkiICAgICAgICBbcGM6IDIyLCBsaW5lOiAxMF1cbiIgKyAKKwkJCQkJIiAgICAgICAgW3Bj
OiAyNSwgbGluZTogMTVdXG4iICsgCisJCQkJCSIgICAgICBMb2NhbCB2YXJpYWJsZSB0YWJsZTpc
biIgKyAKKwkJCQkJIiAgICAgICAgW3BjOiAyLCBwYzogMjddIGxvY2FsOiBhIGluZGV4OiAwIHR5
cGU6IGphdmEubGFuZy5PYmplY3RcbiIgKyAKKwkJCQkJIiAgICAgICAgW3BjOiAyMiwgcGM6IDI1
XSBsb2NhbDogYiBpbmRleDogMSB0eXBlOiBqYXZhLmxhbmcuT2JqZWN0XG4iICsgCisJCQkJCSIg
ICAgICBTdGFjayBtYXAgdGFibGU6IG51bWJlciBvZiBmcmFtZXMgM1xuIiArIAorCQkJCQkiICAg
ICAgICBbcGM6IDIsIGFwcGVuZDoge2phdmEubGFuZy5PYmplY3R9XVxuIiArIAorCQkJCQkiICAg
ICAgICBbcGM6IDIwLCBzYW1lXVxuIiArIAorCQkJCQkiICAgICAgICBbcGM6IDI1LCBzYW1lXVxu
IiArIAorCQkJCQkiICBcbiI7IAorCQkJaW50IGluZGV4ID0gYWN0dWFsT3V0cHV0LmluZGV4T2Yo
ZXhwZWN0ZWRPdXRwdXQpOworCQkJaWYgKGluZGV4ID09IC0xIHx8IGV4cGVjdGVkT3V0cHV0Lmxl
bmd0aCgpID09IDApIHsKKwkJCQlTeXN0ZW0ub3V0LnByaW50bG4oVXRpbC5kaXNwbGF5U3RyaW5n
KGFjdHVhbE91dHB1dCwgMikpOworCQkJfQorCQkJaWYgKGluZGV4ID09IC0xKSB7CisJCQkJYXNz
ZXJ0RXF1YWxzKCJXcm9uZyBjb250ZW50cyIsIGV4cGVjdGVkT3V0cHV0LCBhY3R1YWxPdXRwdXQp
OworCQkJfQorCX0KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNv
bXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9u
L1N3aXRjaFRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3Ny
Yy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1N3aXRjaFRl
c3QuamF2YQppbmRleCA0MTRlNmUwLi5hMDY3OGE4IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29t
cGlsZXIvcmVncmVzc2lvbi9Td2l0Y2hUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVy
L3JlZ3Jlc3Npb24vU3dpdGNoVGVzdC5qYXZhCkBAIC0yMTY2LDggKzIxNjYsNiBAQAogfQogLy8g
aHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM4MDkyNwogcHVi
bGljIHZvaWQgdGVzdEJ1ZzM4MDkyNygpIHsKLQlpZiAodGhpcy5jb21wbGlhbmNlTGV2ZWwgPj0g
Q2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfNykKLQkJcmV0dXJuOwogCXRoaXMucnVuQ29uZm9ybVRl
c3QoCiAJCQluZXcgU3RyaW5nW10gewogCQkJCSJYLmphdmEiLApAQCAtMjE5NSw2ICsyMTkzLDIw
OSBAQAogCQkJfSwKIAkJCSJTdWNjZXNzIik7CQogfQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uu
b3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM4MDkyNworcHVibGljIHZvaWQgdGVzdEJ1ZzM4MDky
N2EoKSB7CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJIlgu
amF2YSIsCisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJCSIgICAgcHVibGljIGZpbmFs
IHN0YXRpYyBPYmplY3QgZigpIHtcbiIgKworCQkJCSIgICAgICAgIGZpbmFsIE9iamVjdCBhID0g
bnVsbDtcbiIgKworCQkJCSIgICAgICAgIE9iamVjdCBiO1xuIiArCisJCQkJIiAgICAgICAgbGFi
ZWw6IHdoaWxlICh0cnVlKSB7XG4iICsKKwkJCQkiICAgICAgICAgICAgc3dpdGNoICgwKSB7XG4i
ICsKKwkJCQkiICAgICAgICAgICAgY2FzZSAxOiB7XG4iICsKKwkJCQkiICAgICAgICAgICAgICAg
IGIgPSBhO1xuIiArCisJCQkJIiAgICAgICAgICAgIH1cbiIgKworCQkJCSIgICAgICAgICAgICAg
ICAgYnJlYWs7XG4iICsKKwkJCQkiICAgICAgICAgICAgZGVmYXVsdDpcbiIgKworCQkJCSIgICAg
ICAgICAgICAgICAgYnJlYWsgbGFiZWw7XG4iICsKKwkJCQkiICAgICAgICAgICAgfVxuIiArCisJ
CQkJIiAgICAgICAgfVxuIiArCisJCQkJIiAgICAgICAgcmV0dXJuIGE7XG4iICsKKwkJCQkiICAg
IH1cbiIgKworCQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oZmluYWwgU3RyaW5nW10g
YXJncykge1xuIiArCisJCQkJIiAgICAgICAgZigpO1xuIiArCisJCQkJIiAgICAgICAgU3lzdGVt
Lm91dC5wcmludGxuKFwiU3VjY2Vzc1wiKTtcbiIgKworCQkJCSIgICAgfVxuIiArCisJCQkJIn1c
biIsCisJCQl9LAorCQkJIlN1Y2Nlc3MiKTsJCit9CisvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5v
cmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzgwOTI3CitwdWJsaWMgdm9pZCB0ZXN0QnVnMzgwOTI3
YigpIHsKKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiWC5q
YXZhIiwKKwkJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkJIiAgICBwdWJsaWMgZmluYWwg
c3RhdGljIE9iamVjdCBmKCkge1xuIiArCisJCQkJIiAgICAgICAgZmluYWwgT2JqZWN0IGEgPSBu
dWxsO1xuIiArCisJCQkJIiAgICAgICAgT2JqZWN0IGI7XG4iICsKKwkJCQkiICAgICAgICBsYWJl
bDogZm9yKDs7KSB7XG4iICsKKwkJCQkiICAgICAgICAgICAgc3dpdGNoICgwKSB7XG4iICsKKwkJ
CQkiICAgICAgICAgICAgY2FzZSAxOiB7XG4iICsKKwkJCQkiICAgICAgICAgICAgICAgIGIgPSBh
O1xuIiArCisJCQkJIiAgICAgICAgICAgIH1cbiIgKworCQkJCSIgICAgICAgICAgICAgICAgYnJl
YWs7XG4iICsKKwkJCQkiICAgICAgICAgICAgZGVmYXVsdDpcbiIgKworCQkJCSIgICAgICAgICAg
ICAgICAgYnJlYWsgbGFiZWw7XG4iICsKKwkJCQkiICAgICAgICAgICAgfVxuIiArCisJCQkJIiAg
ICAgICAgfVxuIiArCisJCQkJIiAgICAgICAgcmV0dXJuIGE7XG4iICsKKwkJCQkiICAgIH1cbiIg
KworCQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oZmluYWwgU3RyaW5nW10gYXJncykg
e1xuIiArCisJCQkJIiAgICAgICAgZigpO1xuIiArCisJCQkJIiAgICAgICAgU3lzdGVtLm91dC5w
cmludGxuKFwiU3VjY2Vzc1wiKTtcbiIgKworCQkJCSIgICAgfVxuIiArCisJCQkJIn1cbiIsCisJ
CQl9LAorCQkJIlN1Y2Nlc3MiKTsJCit9CisvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9MzgwOTI3CitwdWJsaWMgdm9pZCB0ZXN0QnVnMzgwOTI3YygpIHsK
KwlpZiAodGhpcy5jb21wbGlhbmNlTGV2ZWwgPCBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV81KQor
CQlyZXR1cm47CisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJ
IlguamF2YSIsCisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJCSIgICAgcHVibGljIGZp
bmFsIHN0YXRpYyBPYmplY3QgZigpIHtcbiIgKworCQkJCSIgICAgICAgIGZpbmFsIE9iamVjdCBh
ID0gbnVsbDtcbiIgKworCQkJCSIgICAgICAgIE9iamVjdCBiO1xuIiArCisJCQkJIiAgICAgICAg
bGFiZWw6IGZvcihpbnQgaSA6IG5ldyBpbnQgW10geyAxMCB9KSB7XG4iICsKKwkJCQkiICAgICAg
ICAgICAgc3dpdGNoICgwKSB7XG4iICsKKwkJCQkiICAgICAgICAgICAgY2FzZSAxOiB7XG4iICsK
KwkJCQkiICAgICAgICAgICAgICAgIGIgPSBhO1xuIiArCisJCQkJIiAgICAgICAgICAgIH1cbiIg
KworCQkJCSIgICAgICAgICAgICAgICAgYnJlYWs7XG4iICsKKwkJCQkiICAgICAgICAgICAgZGVm
YXVsdDpcbiIgKworCQkJCSIgICAgICAgICAgICAgICAgYnJlYWsgbGFiZWw7XG4iICsKKwkJCQki
ICAgICAgICAgICAgfVxuIiArCisJCQkJIiAgICAgICAgfVxuIiArCisJCQkJIiAgICAgICAgcmV0
dXJuIGE7XG4iICsKKwkJCQkiICAgIH1cbiIgKworCQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lk
IG1haW4oZmluYWwgU3RyaW5nW10gYXJncykge1xuIiArCisJCQkJIiAgICAgICAgZigpO1xuIiAr
CisJCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwiU3VjY2Vzc1wiKTtcbiIgKworCQkJ
CSIgICAgfVxuIiArCisJCQkJIn1cbiIsCisJCQl9LAorCQkJIlN1Y2Nlc3MiKTsJCit9CisvLyBo
dHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzgwOTI3CitwdWJs
aWMgdm9pZCB0ZXN0QnVnMzgwOTI3ZCgpIHsKKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKKwkJCW5l
dyBTdHJpbmdbXSB7CisJCQkJIlguamF2YSIsCisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwor
CQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKwor
CQkJCSIgICAgICAgIE9iamVjdCBiO1xuIiArCisJCQkJIiAgICAgICAgbGFiZWw6IGRvIHtcbiIg
KworCQkJCSIgICAgICAgICAgICBzd2l0Y2ggKDApIHtcbiIgKworCQkJCSIgICAgICAgICAgICBj
YXNlIDE6XG4iICsKKwkJCQkiICAgICAgICAgICAgICAgIGIgPSBudWxsO1xuIiArCisJCQkJIiAg
ICAgICAgICAgICAgICBicmVhaztcbiIgKworCQkJCSIgICAgICAgICAgICBkZWZhdWx0OlxuIiAr
CisJCQkJIiAgICAgICAgICAgICAgICBicmVhayBsYWJlbDtcbiIgKworCQkJCSIgICAgICAgICAg
ICB9XG4iICsKKwkJCQkiICAgICAgICB9IHdoaWxlICh0cnVlKTtcbiIgKworCQkJCSIgICAgICAg
IFN5c3RlbS5vdXQucHJpbnRsbihiKTtcbiIgKworCQkJCSIgICAgfVxuIiArCisJCQkJIn1cbiIs
CisJCQl9LAorCQkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0
IGxpbmUgMTMpXG4iICsgCisJCQkiCVN5c3RlbS5vdXQucHJpbnRsbihiKTtcbiIgKyAKKwkJCSIJ
ICAgICAgICAgICAgICAgICAgIF5cbiIgKyAKKwkJCSJUaGUgbG9jYWwgdmFyaWFibGUgYiBtYXkg
bm90IGhhdmUgYmVlbiBpbml0aWFsaXplZFxuIiArIAorCQkJIi0tLS0tLS0tLS1cbiIpOwkKK30K
Ky8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zODA5MjcK
K3B1YmxpYyB2b2lkIHRlc3RCdWczODA5MjdlKCkgeworCXRoaXMucnVuTmVnYXRpdmVUZXN0KAor
CQkJbmV3IFN0cmluZ1tdIHsKKwkJCQkiWC5qYXZhIiwKKwkJCQkicHVibGljIGNsYXNzIFgge1xu
IiArCisJCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgW10gYXJncykge1xu
IiArCisJCQkJIiAgICAgICAgT2JqZWN0IGI7XG4iICsKKwkJCQkiICAgICAgICBsYWJlbDogd2hp
bGUgKHRydWUpIHtcbiIgKworCQkJCSIgICAgICAgICAgICBzd2l0Y2ggKDApIHtcbiIgKworCQkJ
CSIgICAgICAgICAgICBjYXNlIDE6XG4iICsKKwkJCQkiICAgICAgICAgICAgICAgIGIgPSBudWxs
O1xuIiArCisJCQkJIiAgICAgICAgICAgICAgICBicmVhaztcbiIgKworCQkJCSIgICAgICAgICAg
ICBkZWZhdWx0OlxuIiArCisJCQkJIiAgICAgICAgICAgICAgICBicmVhayBsYWJlbDtcbiIgKwor
CQkJCSIgICAgICAgICAgICB9XG4iICsKKwkJCQkiICAgICAgICB9XG4iICsKKwkJCQkiICAgICAg
ICBTeXN0ZW0ub3V0LnByaW50bG4oYik7XG4iICsKKwkJCQkiICAgIH1cbiIgKworCQkJCSJ9XG4i
LAorCQkJfSwKKwkJCSItLS0tLS0tLS0tXG4iICsgCisJCQkiMS4gRVJST1IgaW4gWC5qYXZhIChh
dCBsaW5lIDEzKVxuIiArIAorCQkJIglTeXN0ZW0ub3V0LnByaW50bG4oYik7XG4iICsgCisJCQki
CSAgICAgICAgICAgICAgICAgICBeXG4iICsgCisJCQkiVGhlIGxvY2FsIHZhcmlhYmxlIGIgbWF5
IG5vdCBoYXZlIGJlZW4gaW5pdGlhbGl6ZWRcbiIgKyAKKwkJCSItLS0tLS0tLS0tXG4iKTsJCit9
CisvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzgwOTI3
CitwdWJsaWMgdm9pZCB0ZXN0QnVnMzgwOTI3ZigpIHsKKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgK
KwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJIlguamF2YSIsCisJCQkJInB1YmxpYyBjbGFzcyBYIHtc
biIgKworCQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtc
biIgKworCQkJCSIgICAgICAgIE9iamVjdCBiO1xuIiArCisJCQkJIiAgICAgICAgbGFiZWw6IGZv
cig7Oykge1xuIiArCisJCQkJIiAgICAgICAgICAgIHN3aXRjaCAoMCkge1xuIiArCisJCQkJIiAg
ICAgICAgICAgIGNhc2UgMTpcbiIgKworCQkJCSIgICAgICAgICAgICAgICAgYiA9IG51bGw7XG4i
ICsKKwkJCQkiICAgICAgICAgICAgICAgIGJyZWFrO1xuIiArCisJCQkJIiAgICAgICAgICAgIGRl
ZmF1bHQ6XG4iICsKKwkJCQkiICAgICAgICAgICAgICAgIGJyZWFrIGxhYmVsO1xuIiArCisJCQkJ
IiAgICAgICAgICAgIH1cbiIgKworCQkJCSIgICAgICAgIH1cbiIgKworCQkJCSIgICAgICAgIFN5
c3RlbS5vdXQucHJpbnRsbihiKTtcbiIgKworCQkJCSIgICAgfVxuIiArCisJCQkJIn1cbiIsCisJ
CQl9LAorCQkJIi0tLS0tLS0tLS1cbiIgKyAKKwkJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxp
bmUgMTMpXG4iICsgCisJCQkiCVN5c3RlbS5vdXQucHJpbnRsbihiKTtcbiIgKyAKKwkJCSIJICAg
ICAgICAgICAgICAgICAgIF5cbiIgKyAKKwkJCSJUaGUgbG9jYWwgdmFyaWFibGUgYiBtYXkgbm90
IGhhdmUgYmVlbiBpbml0aWFsaXplZFxuIiArIAorCQkJIi0tLS0tLS0tLS1cbiIpOwkKK30KKy8v
IGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zODA5MjcKK3B1
YmxpYyB2b2lkIHRlc3RCdWczODA5MjdnKCkgeworCWlmICh0aGlzLmNvbXBsaWFuY2VMZXZlbCA8
IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzUpCisJCXJldHVybjsKKwl0aGlzLnJ1bk5lZ2F0aXZl
VGVzdCgKKwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJIlguamF2YSIsCisJCQkJInB1YmxpYyBjbGFz
cyBYIHtcbiIgKworCQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFy
Z3MpIHtcbiIgKworCQkJCSIgICAgICAgIE9iamVjdCBiO1xuIiArCisJCQkJIiAgICAgICAgbGFi
ZWw6IGZvcihpbnQgaSA6IG5ldyBpbnQgW10geyAxMCB9KSB7XG4iICsKKwkJCQkiICAgICAgICAg
ICAgc3dpdGNoICgwKSB7XG4iICsKKwkJCQkiICAgICAgICAgICAgY2FzZSAxOlxuIiArCisJCQkJ
IiAgICAgICAgICAgICAgICBiID0gbnVsbDtcbiIgKworCQkJCSIgICAgICAgICAgICAgICAgYnJl
YWs7XG4iICsKKwkJCQkiICAgICAgICAgICAgZGVmYXVsdDpcbiIgKworCQkJCSIgICAgICAgICAg
ICAgICAgYnJlYWsgbGFiZWw7XG4iICsKKwkJCQkiICAgICAgICAgICAgfVxuIiArCisJCQkJIiAg
ICAgICAgfVxuIiArCisJCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGIpO1xuIiArCisJ
CQkJIiAgICB9XG4iICsKKwkJCQkifVxuIiwKKwkJCX0sCisJCQkiLS0tLS0tLS0tLVxuIiArIAor
CQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxMylcbiIgKyAKKwkJCSIJU3lzdGVtLm91
dC5wcmludGxuKGIpO1xuIiArIAorCQkJIgkgICAgICAgICAgICAgICAgICAgXlxuIiArIAorCQkJ
IlRoZSBsb2NhbCB2YXJpYWJsZSBiIG1heSBub3QgaGF2ZSBiZWVuIGluaXRpYWxpemVkXG4iICsg
CisJCQkiLS0tLS0tLS0tLVxuIik7CQorfQogcHVibGljIHN0YXRpYyBDbGFzcyB0ZXN0Q2xhc3Mo
KSB7CiAJcmV0dXJuIFN3aXRjaFRlc3QuY2xhc3M7CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0
L0RvU3RhdGVtZW50LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0RvU3RhdGVtZW50LmphdmEKaW5kZXggNzc0
YzdhYS4uMWZkOGYzZSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9Eb1N0YXRlbWVudC5qYXZhCisr
KyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9hc3QvRG9TdGF0ZW1lbnQuamF2YQpAQCAtMTMwLDcgKzEzMCw3IEBACiAJCQkJ
CQkJCS8vIHJlY292ZXIgdXBzdHJlYW0gbnVsbCBpbmZvCiAJCQkJCQlpc0NvbmRpdGlvbk9wdGlt
aXplZFRydWUsCiAJCQkJCQkoY29uZEluZm8udGFnQml0cyAmIEZsb3dJbmZvLlVOUkVBQ0hBQkxF
KSA9PSAwCi0JCQkJCQkJCT8gZmxvd0luZm8uYWRkSW5pdGlhbGl6YXRpb25zRnJvbShjb25kSW5m
by5pbml0c1doZW5GYWxzZSgpKSAKKwkJCQkJCQkJPyBmbG93SW5mby5jb3B5KCkuYWRkSW5pdGlh
bGl6YXRpb25zRnJvbShjb25kSW5mby5pbml0c1doZW5GYWxzZSgpKSAvLyBodHRwczovL2J1Z3Mu
ZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzgwOTI3CiAJCQkJCQkJCTogY29uZElu
Zm8sCiAJCQkJCQkJLy8gcmVjb3ZlciBudWxsIGluaXRzIGZyb20gYmVmb3JlIGNvbmRpdGlvbiBh
bmFseXNpcwogCQkJCQkJZmFsc2UsIC8vIG5ldmVyIGNvbnNpZGVyIG9wdCBmYWxzZSBjYXNlIGZv
ciBETyBsb29wLCBzaW5jZSBicmVhayBjYW4gYWx3YXlzIG9jY3VyICg0Nzc3Nik=
</data>
<flag name="review"
          id="51967"
          type_id="6"
          status="+"
          setter="daniel_megert"
    />
          </attachment>
      

    </bug>

</bugzilla>