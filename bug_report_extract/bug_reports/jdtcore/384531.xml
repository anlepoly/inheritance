<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>384531</bug_id>
          
          <creation_ts>2012-07-07 20:15:00 -0400</creation_ts>
          <short_desc>batch compiler changes version each build</short_desc>
          <delta_ts>2013-03-04 00:27:53 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>Platform</product>
          <component>Releng</component>
          <version>4.2</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>DUPLICATE</resolution>
          <dup_id>386318</dup_id>
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="David Williams">david_williams</reporter>
          <assigned_to name="Platform-Releng-Inbox">platform-releng-inbox</assigned_to>
          <cc>amj87.iitr</cc>
    
    <cc>daniel_megert</cc>
    
    <cc>hmalphettes</cc>
    
    <cc>jarthana</cc>
    
    <cc>jeffmcaffer</cc>
    
    <cc>jesse.mcconnell</cc>
    
    <cc>markus_keller</cc>
    
    <cc>Olivier_Thomann</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2133980</commentid>
    <comment_count>0</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2012-07-07 20:15:22 -0400</bug_when>
    <thetext>As mentioned on CBI dev list, the batch compiler changes version qualifier each build ... instead of simply having the same version as the bundle its extracted from (jdt.core). 

This doesn&apos;t seem right, and suspect its a fluke in the way that the batch compiler is extracted after the build is done and then &quot;re-added&quot; to the p2 repository. 

Not sure what the right answer is (or, if fix is easy) but opening this bug to track the issue.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2134074</commentid>
    <comment_count>1</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2012-07-08 20:33:43 -0400</bug_when>
    <thetext>I looked at the Indigo release (3.7ish) and appears even there the compiler was versioned differently that jdt.core (and, appears to be of a different &quot;style&quot;, more like the style of the build ID, rather than the traditional JDT versioning pattern. 

       [20:26:48] david_williams@build:/home/data/httpd/download.eclipse.org/eclipse/updates/3.7
 
$ find ./ -name &quot;*jdt.core.compiler.batch_*&quot;
./R-3.7.1-201109091335/plugins/org.eclipse.jdt.core.compiler.batch_3.7.0.M20110909-1335.jar
./R-3.7.2-201202080800/plugins/org.eclipse.jdt.core.compiler.batch_3.7.0.M20120208-0800.jar
./R-3.7-201106131736/plugins/org.eclipse.jdt.core.compiler.batch_3.7.0.I20110613-1736.jar
 
       [20:27:44] david_williams@build:/home/data/httpd/download.eclipse.org/eclipse/updates/3.7
 
$ find ./ -name &quot;*jdt.core_*&quot;
./R-3.7.1-201109091335/plugins/org.eclipse.jdt.core_3.7.1.v_B76_R37x.jar
./R-3.7.2-201202080800/plugins/org.eclipse.jdt.core_3.7.3.v20120119-1537.jar
./R-3.7-201106131736/plugins/org.eclipse.jdt.core_3.7.0.v_B61.jar</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2134075</commentid>
    <comment_count>2</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2012-07-08 20:41:42 -0400</bug_when>
    <thetext>(And, meant to add the fact it was done in Indigo, means it is not a regression that I introduced moving the build to build.eclipse.org :) 


Maybe this is a good time to ask ... why is the batch compiler left &quot;inside&quot; jdt core bundle, and then later extracted into separately available jar? Why not just build it as a bundle (which would not depend on anything from OSGi, so it could be used as a &quot;stand alone jar&quot; as well) and then jdt.core could import it (and for compatibility, reexport it)? 

That is, I&apos;m wondering if there is a technical reason that could not be done, or if its just a matter of history, and then never taking the time and effort to change the build (and, I&apos;m sure, other changes, such as adding proper &quot;friends&quot; relationships for non-API dependencies between the compiler, and JDT core)?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2134076</commentid>
    <comment_count>3</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2012-07-08 20:43:27 -0400</bug_when>
    <thetext>Adding Dani to CC in case he knows (or knows someone) who might know more of the history of the compiler being left &quot;inside&quot; jdt.core?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2134613</commentid>
    <comment_count>4</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-07-09 13:46:41 -0400</bug_when>
    <thetext>X-ref: Bug 374777 just fixed that the version answered by &quot;ecj -version&quot;
matches the current build_qualifier.

Should both these bugs converge to a common solution? (cc&apos;ing Jay for comment).


(In reply to comment #2)
&gt; Maybe this is a good time to ask ... why is the batch compiler left &quot;inside&quot;
&gt; jdt core bundle, and then later extracted into separately available jar? Why
&gt; not just build it as a bundle (which would not depend on anything from OSGi, so
&gt; it could be used as a &quot;stand alone jar&quot; as well) 

It *is* an OSGi bundle already, isn&apos;t it?

&gt; and then jdt.core could import
&gt; it (and for compatibility, reexport it)? 
&gt; 
&gt; That is, I&apos;m wondering if there is a technical reason that could not be done,
&gt; or if its just a matter of history, and then never taking the time and effort
&gt; to change the build (and, I&apos;m sure, other changes, such as adding proper
&gt; &quot;friends&quot; relationships for non-API dependencies between the compiler, and JDT
&gt; core)?

I assume it&apos;s just this difficulty, because the bundle boundary would
be one of *very* high coupling.

OTOH, splitting jdt.core would make it easier to enforce that ecj has no
&quot;illegal&quot; dependencies &amp; is clean wrt. J2SE-1.3</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2134801</commentid>
    <comment_count>5</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-07-09 21:03:12 -0400</bug_when>
    <thetext>Adding Olivier to the CC. He can answer the decision to keep the batch compiler as a plug-in.

By the way, we do have the batch compiler as a stand-alone jar available in the download page, named ecj_qualifier.jar. At this point, I am not very sure if the changes made in bug 374777 will affect the o.e.j.c.compiler.batch_3.7.0.M20110909-1335.jar</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2134803</commentid>
    <comment_count>6</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2012-07-09 21:18:04 -0400</bug_when>
    <thetext>(In reply to comment #4)
&gt; X-ref: Bug 374777 just fixed that the version answered by &quot;ecj -version&quot;
&gt; matches the current build_qualifier.
&gt; 
&gt; Should both these bugs converge to a common solution? (cc&apos;ing Jay for comment).
&gt; 

Not sure (but, I wouldn&apos;t change your current solution just yet :)
In export-ecj.xml I see lines that use &quot;buildLabel&quot;, such as 

&lt;replace file=&quot;${ecj-temp-folder}/META-INF/MANIFEST.MF&quot; token=&quot;qualifier&quot; value=&quot;${buildLabel}&quot;/&gt;

If, somehow, the &quot;parent qualifier&quot; was known and could be used in place of &quot;buildLabel&quot;, that would solve this particular bugzilla (or, that is, be the approach to use). 

 
&gt; It *is* an OSGi bundle already, isn&apos;t it?

Yes, I didn&apos;t know that when I first wrote the comment, but checked, and it is, so that wouldn&apos;t change. 

&gt; 
&gt; I assume it&apos;s just this difficulty, because the bundle boundary would
&gt; be one of *very* high coupling.

That, and now that I&apos;ve looked at it, you have a very complex customCallback! 
I hope someone understand all that :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2134843</commentid>
    <comment_count>7</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-07-10 00:12:34 -0400</bug_when>
    <thetext>(In reply to comment #6)
&gt; In export-ecj.xml I see lines that use &quot;buildLabel&quot;, such as 
&gt; 
&gt; &lt;replace file=&quot;${ecj-temp-folder}/META-INF/MANIFEST.MF&quot; token=&quot;qualifier&quot;
&gt; value=&quot;${buildLabel}&quot;/&gt;
&gt; 
&gt; If, somehow, the &quot;parent qualifier&quot; was known and could be used in place of
&gt; &quot;buildLabel&quot;, that would solve this particular bugzilla (or, that is, be the
&gt; approach to use). 

By parent qualifier, did you mean the version, like 3.8.x? For the &quot;ecj -version&quot; command line option, this is taken from the messages.properties file, which is bundled in the JAR. The version in the messages.properties is updated manually for every new release and only the build qualifier needs to be updated with the ${buildLabel}. The patch I just released under bug 374777 does just that.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2134851</commentid>
    <comment_count>8</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2012-07-10 00:29:33 -0400</bug_when>
    <thetext>(In reply to comment #7)
&gt; (In reply to comment #6)

&gt; 
&gt; By parent qualifier, did you mean the version, like 3.8.x? For the &quot;ecj
&gt; -version&quot; command line option, this is taken from the messages.properties file,
&gt; which is bundled in the JAR. The version in the messages.properties is updated
&gt; manually for every new release and only the build qualifier needs to be updated
&gt; with the ${buildLabel}. The patch I just released under bug 374777 does just
&gt; that.

Probably. I actually meant the qualifier of jdt.core, which might be the same thing? 

What exactly is the difference between 
org.eclipse.jdt.core.compiler.batch.... and the 
ecj-xxx.jar

On the surface, they look like exactly the same thing? (from quick glance).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2134857</commentid>
    <comment_count>9</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-07-10 01:03:45 -0400</bug_when>
    <thetext>(In reply to comment #8)
&gt; What exactly is the difference between 
&gt; org.eclipse.jdt.core.compiler.batch.... and the 
&gt; ecj-xxx.jar
&gt; 
&gt; On the surface, they look like exactly the same thing? (from quick glance).

I have no idea really. They look the same to me too. I am hoping Olivier can throw some light on this. 

Interestingly, the *.compiler.batch*.jar is not part of the standard SDK. This has always been the case. However, the ecj*.jar is available straight from the downloads page.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2135097</commentid>
    <comment_count>10</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2012-07-10 10:33:32 -0400</bug_when>
    <thetext>(In reply to comment #8)
&gt; What exactly is the difference between 
&gt; org.eclipse.jdt.core.compiler.batch.... and the 
&gt; ecj-xxx.jar
&gt; On the surface, they look like exactly the same thing? (from quick glance).
As far as I can remember, the org.eclipse.jdt.core.compiler.batch.... is a full OSGi bundle while the ecj-xxx.jar is just an executable jar.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2135102</commentid>
    <comment_count>11</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2012-07-10 10:36:51 -0400</bug_when>
    <thetext>Jeff, are you still using the batch compiler OSGi bundle ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2135138</commentid>
    <comment_count>12</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2012-07-10 11:12:55 -0400</bug_when>
    <thetext>They are both OSGi bundles. Below is the MANIFEST.MF for ecj jar ... notice, it&apos;s symbolic name is (still) org.eclipse.jdt.core.compiler.batch. (And, the version qualifier seem to mis-match ... which ... I guess was part of the issue of that other bug? but otherwise same MANIFEST.MF) 


= = = = = = =


       [10:43:16] davidw@davidw-asus:~/temp/ecj-4.2/META-INF
 
$ cat MANIFEST.MF 
Manifest-Version: 1.0
Main-Class: org.eclipse.jdt.internal.compiler.batch.Main
Bundle-ManifestVersion: 2
Bundle-Name: Eclipse Compiler for Java(TM)
Bundle-SymbolicName: org.eclipse.jdt.core.compiler.batch
Bundle-Version: 3.8.0.I20120608-1400
Bundle-ClassPath: .
Bundle-Vendor: Eclipse.org
Export-Package: org.eclipse.jdt.core,
 org.eclipse.jdt.core.compiler,
 org.eclipse.jdt.internal.antadapter;x-internal:=true,
 org.eclipse.jdt.internal.compiler;x-internal:=true,
 org.eclipse.jdt.internal.compiler.apt.dispatch;x-internal:=true,
 org.eclipse.jdt.internal.compiler.apt.model;x-internal:=true,
 org.eclipse.jdt.internal.compiler.apt.util;x-internal:=true,
 org.eclipse.jdt.internal.compiler.ast;x-internal:=true,
 org.eclipse.jdt.internal.compiler.batch;x-internal:=true,
 org.eclipse.jdt.internal.compiler.classfmt;x-internal:=true,
 org.eclipse.jdt.internal.compiler.codegen;x-internal:=true,
 org.eclipse.jdt.internal.compiler.env;x-internal:=true,
 org.eclipse.jdt.internal.compiler.flow;x-internal:=true,
 org.eclipse.jdt.internal.compiler.impl;x-internal:=true,
 org.eclipse.jdt.internal.compiler.lookup;x-internal:=true,
 org.eclipse.jdt.internal.compiler.parser;x-internal:=true,
 org.eclipse.jdt.internal.compiler.parser.diagnose;x-internal:=true,
 org.eclipse.jdt.internal.compiler.problem;x-internal:=true,
 org.eclipse.jdt.internal.compiler.util;x-internal:=true,
 org.eclipse.jdt.internal.compiler.tool;x-internal:=true</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2135140</commentid>
    <comment_count>13</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2012-07-10 11:19:02 -0400</bug_when>
    <thetext>(In reply to comment #11)
&gt; Jeff, are you still using the batch compiler OSGi bundle ?

I think Jetty was using the batch compiler (for JSPs) perhaps Jesse could explain what they use (the ecj jar, or the longer named but apparently equivilent &quot;org.eclipse.jdt.core.compiler.batch....&quot;. I tried peeking in a jetty distribution, but wasn&apos;t obvious. 

I know others (non Eclipse) projects use it (e.g. some at Apache, &quot;tomcat&quot;?) so perhaps some of the &quot;naming&quot; issues was just to maintain compatibility? But, seems fair to change that at some point ... unless adopters really have an urgent need not to ... but, again, I&apos;m speaking from sort of 3/4s knowledge so could be differences I&apos;m not aware of.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2135162</commentid>
    <comment_count>14</comment_count>
    <who name="Jesse McConnell">jesse.mcconnell</who>
    <bug_when>2012-07-10 11:45:14 -0400</bug_when>
    <thetext>Adding Hugues as the osgi jetty guy..

personally I don&apos;t have much to say on it, i don&apos;t really follow the issue with changing version qualifiers.. and I am not even sure who is providing that bundle, traditionally we just consume it from maven central...

which I have published here: 

http://central.maven.org/maven2/org/eclipse/jetty/orbit/org.eclipse.jdt.core/3.7.1/

until such time that eclipse decides on a policy related to persistent durable artifact management and versioning 

long ago that 3.7.1 artifact was created (not sure by whom) and placed into orbit as a dependency (by us I am guessing) and maybe a year ago I shoved it into maven central so we had a sane place to pull it from

and that is about all I know about the ejc bundle :)  and how we use it

jesse</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2135422</commentid>
    <comment_count>15</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-07-11 01:32:10 -0400</bug_when>
    <thetext>(In reply to comment #9)
&gt; I have no idea really. They look the same to me too. I am hoping Olivier can
&gt; throw some light on this. 

I compared the JARs file to file and all files except the eclipse.inf look the same. The one inside ecj.jar has 3 lines missing (lines with &apos;-&apos;) comparing with the other one:

- #Processed using Jarprocessor
  jarprocessor.exclude.children = true
  jarprocessor.exclude.sign = true
- pack200.args = -E4
- pack200.conditioned = true

In short, the are just the same, in terms of the actual content that is packed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2135425</commentid>
    <comment_count>16</comment_count>
    <who name="Hugues Malphettes">hmalphettes</who>
    <bug_when>2012-07-11 01:55:30 -0400</bug_when>
    <thetext>(In reply to comment #13)
&gt; I think Jetty was using the batch compiler (for JSPs) perhaps Jesse could
&gt; explain what they use (the ecj jar, or the longer named but apparently
&gt; equivilent &quot;org.eclipse.jdt.core.compiler.batch....&quot;. I tried peeking in a
&gt; jetty distribution, but wasn&apos;t obvious. 

Jetty does not use ecj since 3.8RC2.
The classes of the batch compiler are now added to the jasper bundle:
https://bugs.eclipse.org/bugs/show_bug.cgi?id=377886#c12</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2135587</commentid>
    <comment_count>17</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2012-07-11 08:48:18 -0400</bug_when>
    <thetext>For what its worth, I looked at the latest Tomcat distribution and from a quick peek, they simply use the ejc bundle: 

$ find ./ -name *ecj*
./apache-tomcat-7.0.29/lib/ecj-3.7.2.jar


So, the bundles are equivalent, except for &quot;packing&quot; and, of course, the jdt.compiler.batch bundle is &quot;in the repo&quot; so it could be installed via p2, etc. 

But, sure sounds like something somewhere would be simplified ... especially if there is no longer a need for it to be in the repo as an installable IU. I think that was originally done for Jetty, and if they no longer need it, I wonder if anyone else does. 

That would not really &quot;solve&quot; the problem of the qualifier changing each build, but might (sort of) make it go away. I think ECJ jar would still have that problem, but not sure it matters as much if not in a repo?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2135590</commentid>
    <comment_count>18</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-07-11 08:57:10 -0400</bug_when>
    <thetext>(In reply to comment #17)
&gt; That would not really &quot;solve&quot; the problem of the qualifier changing each build,
&gt; but might (sort of) make it go away. I think ECJ jar would still have that
&gt; problem, but not sure it matters as much if not in a repo?

I guess not. The build qualifier of the ECJ is same as the SDK. And that&apos;s  okay as they are part of the same download page.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2137951</commentid>
    <comment_count>19</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2012-07-17 10:23:24 -0400</bug_when>
    <thetext>&gt; I think ECJ jar would still have that
&gt; problem, but not sure it matters as much if not in a repo?

The fix for bug 374777 should fix this, no?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2137986</commentid>
    <comment_count>20</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-07-17 11:00:03 -0400</bug_when>
    <thetext>(In reply to comment #19)
&gt; The fix for bug 374777 should fix this, no?

In the case of the ecj.jar, the build ID that gets used is same as the SDK build ID. Whereas, the eclipse.jdt.core plugin would have last commit&apos;s date or something like that.

For e.g. in the 4.2 build I20120710-0800, we use the following names:
org.eclipse.jdt.core_3.8.1.v20120709-162439.jar (part of the SDK)
ecj-I20120710-0800.jar (separate download)

Note that the ecj jar&apos;s id is same as the SDK but different from the jdt.core plugin. But as I said earlier, since this being provided more as an executable jar than a plug-in, it sounds okay to me. But the real question is about the other bundle: org.eclipse.jdt.core.compiler.batch*.jar</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2138211</commentid>
    <comment_count>21</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2012-07-17 16:21:50 -0400</bug_when>
    <thetext>(In reply to comment #20)
&gt; (In reply to comment #19)
&gt; &gt; The fix for bug 374777 should fix this, no?
&gt; 
&gt; In the case of the ecj.jar, the build ID that gets used is same as the SDK
&gt; build ID. Whereas, the eclipse.jdt.core plugin would have last commit&apos;s date or
&gt; something like that.
&gt; 
&gt; For e.g. in the 4.2 build I20120710-0800, we use the following names:
&gt; org.eclipse.jdt.core_3.8.1.v20120709-162439.jar (part of the SDK)
&gt; ecj-I20120710-0800.jar (separate download)
&gt; 
&gt; Note that the ecj jar&apos;s id is same as the SDK but different from the jdt.core
&gt; plugin. But as I said earlier, since this being provided more as an executable
&gt; jar than a plug-in, it sounds okay to me. But the real question is about the
&gt; other bundle: org.eclipse.jdt.core.compiler.batch*.jar

IMHO, still better to that the jar wouldn&apos;t change qualifier each build, just so people would know when it had changed, and when it hadn&apos;t. 

This is a real guess, but don&apos;t supposed it&apos;d work just to use the variable &apos;qualifier&apos; where you currently use &apos;buildlabel&apos; and things would work magically? 

If you ever want to do a &quot;test build&quot;, just to see, let me know. All you&apos;d have to do is commit the &quot;test change&quot; to head, I could do a &quot;build machine only N build&quot; real quick (no unit tests), and we&apos;d see if it blows up. (It probably would ... but ... there&apos;s plenty of magic in those scripts :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2138648</commentid>
    <comment_count>22</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-07-18 13:29:26 -0400</bug_when>
    <thetext>(In reply to comment #21)
&gt; This is a real guess, but don&apos;t supposed it&apos;d work just to use the variable
&gt; &apos;qualifier&apos; where you currently use &apos;buildlabel&apos; and things would work
&gt; magically? 

I don&apos;t see any reference to &apos;qualifier&apos; in the export-ecj.xml or customBuildCallbacks.xml. Is it already being passed? What value does it have and where does it get picked from?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2138666</commentid>
    <comment_count>23</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2012-07-18 14:12:13 -0400</bug_when>
    <thetext>(In reply to comment #22)
&gt; (In reply to comment #21)
&gt; &gt; This is a real guess, but don&apos;t supposed it&apos;d work just to use the variable
&gt; &gt; &apos;qualifier&apos; where you currently use &apos;buildlabel&apos; and things would work
&gt; &gt; magically? 
&gt; 
&gt; I don&apos;t see any reference to &apos;qualifier&apos; in the export-ecj.xml or
&gt; customBuildCallbacks.xml. Is it already being passed? What value does it have
&gt; and where does it get picked from?

Well, not sure. I was thinking it might be. I got this idea from the &quot;help&quot; section: 

http://help.eclipse.org/juno/index.jsp?topic=/org.eclipse.pde.doc.user/tasks/pde_version_qualifiers.htm

But, admit, it&apos;s not completely clear from the docs if/how you can use it directly. It was just an idea. 

I also know, that sometimes people do &quot;custom&quot; things with qualifiers by reading the &quot;finalPluginsVersions.properties&quot; file. Easy enough to get the qualifier for &quot;jdt.core&quot; bundle from that ... but ... again I admit I do not know the exact timing of when that file is generated and if it is available at the time of &quot;custom call backs&quot;. 

So, just ideas at this point. I wouldn&apos;t say this was worth weeks of effort, but if you thought it was as good idea (to change qualifier less often), I could try and find out more (but, just to find out more by studying code, or make some &quot;test cases&quot; to experiment with, might take days. 

Perhaps another approach ... as far as I know these customCallbacks are valid &quot;ant tasks&quot; so perhaps you could put in an &lt;echoproperties /&gt; element shortly before you use &quot;buildlabel&quot; and it would list out all available properties and we&apos;d see what was there. (I&apos;d still recommend doing in it head only, sometime when I could do a quick &quot;test build&quot; for you, to avoid risking &quot;breaking the build&quot;?). 

Think it worth while?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2138702</commentid>
    <comment_count>24</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-07-18 16:00:46 -0400</bug_when>
    <thetext>(In reply to comment #23)
&gt; But, admit, it&apos;s not completely clear from the docs if/how you can use it
&gt; directly. It was just an idea. 

Looks like it would work. In JDT/Core&apos;s case the qualifier gets picked from the map file as the qualifier is not provided in the build.properties.

&gt; Think it worth while?

I have pushed both the changes to master. We can try the test build from master.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2138719</commentid>
    <comment_count>25</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2012-07-18 16:23:22 -0400</bug_when>
    <thetext>(In reply to comment #24)
&gt; (In reply to comment #23)
&gt; &gt; But, admit, it&apos;s not completely clear from the docs if/how you can use it
&gt; &gt; directly. It was just an idea. 
&gt; 
&gt; Looks like it would work. In JDT/Core&apos;s case the qualifier gets picked from the
&gt; map file as the qualifier is not provided in the build.properties.
&gt; 
&gt; &gt; Think it worth while?
&gt; 
&gt; I have pushed both the changes to master. We can try the test build from
&gt; master.

test build under way at 4:30. Should be complete around 6:30. (Eastern).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2138745</commentid>
    <comment_count>26</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2012-07-18 17:36:43 -0400</bug_when>
    <thetext>
&gt; 
&gt; test build under way at 4:30. Should be complete around 6:30. (Eastern).

I peeked :) 

And, doesn&apos;t look promising. At least for real easy solution. 

I see 

[echoproperties] qualifier=qualifier
[echoproperties] forceContextQualifier=N20120718-1624

which sounds consistent with the help documentation. 

But, I do also see (in the customcallback echo properties): 

[echoproperties] bundleId=org.eclipse.jdt.core
[echoproperties] bundleVersion=3.8.1.N20120718-1624

So ... it might take a bit of &quot;parsing&quot; but the qualifier for batch compiler (and ejc jar) could probably be peeled off as the last field of &quot;bundleVersion&quot;. 

And, I know a relatively easy way to do that &quot;parsing&quot; if you don&apos;t mind an even more custom, customBuild. 

Its normally hard in ant to do that parsing, but lately I&apos;ve learned you can embed JavaScript in your ant scripts (if it is running under Java 6 or above, and ant 1.8.?) which is true for us. I&apos;ve been doing that for us in some of our test scripts, since its makes some things much easier. 

I&apos;ll attach sample/example, but first I think I&apos;ll kill that &quot;test N build&quot; and try a &quot;test I build&quot; to make sure that &quot;bundleVersion&quot; has bundle version we&apos;d expect. (Kind of hard to tell the difference, between buildLabel and unique qualifier in N build, since they are the same ... duh).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2138748</commentid>
    <comment_count>27</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2012-07-18 17:46:28 -0400</bug_when>
    <thetext>
&gt; 
&gt; I&apos;ll attach sample/example, but first I think I&apos;ll kill that &quot;test N build&quot; and
&gt; try a &quot;test I build&quot; to make sure that &quot;bundleVersion&quot; has bundle version we&apos;d
&gt; expect. (Kind of hard to tell the difference, between buildLabel and unique
&gt; qualifier in N build, since they are the same ... duh).

Well, duh again ... a test I-build would not use your &quot;master&quot; version. So, I&apos;ll skip that, but attach script soon (my wife&apos;s calling me to dinner :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2138759</commentid>
    <comment_count>28</comment_count>
      <attachid>218894</attachid>
    <who name="David Williams">david_williams</who>
    <bug_when>2012-07-18 19:43:33 -0400</bug_when>
    <thetext>Created attachment 218894
log snippet around &quot;custom build&quot;

Even cancelled half way through, the log file is 10 meg, so I parsed out the part around your custom build, including all the &quot;echoproperties&quot; in case you are interested.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2138760</commentid>
    <comment_count>29</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2012-07-18 20:01:14 -0400</bug_when>
    <thetext>So, to get the qualifier from &quot;bundleVersion&quot; you could insert the following javascript ... I&apos;d assume near the beginning, or where your current &lt;echoproperties/&gt; is: 

        &lt;script language=&quot;javascript&quot;&gt;
            var bundleVersion = project.getProperty(&quot;bundleVersion&quot;);
            var pattern = new RegExp(/^(\d+)\.(\d+)\.(\d+)\.(.*)$/);

            var sArray = pattern.exec(bundleVersion);
            // sArray 0 is &quot;whole match&quot;
            project.setProperty(&quot;bundleVersionMajor&quot;, sArray[1]);
            project.setProperty(&quot;bundleVersionMinor&quot;, sArray[2]);
            project.setProperty(&quot;bundleVersionService&quot;, sArray[3]);
            project.setProperty(&quot;bundleVersionQualifer&quot;, sArray[4]);
        &lt;/script&gt;

Then after that point, you&apos;d use &quot;${bundleVersionQualifer}&quot; instead of &quot;${buildLabel}&quot; for your qualifier. 

Of course, for an N build, it&apos;d be impossible to &quot;see&quot; the difference, but if you wanted to do it, and try it in a test build first just to make sure didn&apos;t blow up, feel free to ask me. 

To me seems like a good idea ... but ... not sure a) not sure how important and b) it still would not perfectly reflect changes in compiler. That is, there would be times jdt.core might change, but the compiler not change, but the qualifier would still change for the compile in that case. But, to me that seems LOTS better than ALWAYS changing it, every build. 

[Luckily, if jdt.core now uses the v2012... form for qualifiers, the &apos;v&apos; would be &quot;greater than&quot; the older &quot;I&quot; qualifiers ... otherwise, it&apos;d be a little more complicated.]</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2138761</commentid>
    <comment_count>30</comment_count>
      <attachid>218895</attachid>
    <who name="David Williams">david_williams</who>
    <bug_when>2012-07-18 20:07:00 -0400</bug_when>
    <thetext>Created attachment 218895
full ant file to test parsing.

Here&apos;s a full ready-to-run ant file, if you wanted to &quot;play&quot; with the script a little, add some better guarding or error handling (but, IMHO, you don&apos;t need much, since not sure &quot;bundleVersion&quot; could ever be &quot;wrong&quot; (unlike, say, user entered data).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2138796</commentid>
    <comment_count>31</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-07-19 02:04:21 -0400</bug_when>
    <thetext>Dani/Srikanth,

How do you like the idea of not having a build qualifier for ECJ package?

David,
Couple of points:

1. JDT/Core projects still support Java 4. I am not sure if we have to consider that as a limitation, because if people want to create a ECJ themselves, they would need Java 6. Perhaps Dani or Srikanth can tell us that.

Besides, if we are going to get rid of the build qualifier, we can just get the bundle version from the messages.properties, which is usually kept in sync with the MANIFEST MF when it comes to the bundle version (without the qualifier, of course)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2138804</commentid>
    <comment_count>32</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2012-07-19 02:48:57 -0400</bug_when>
    <thetext>(In reply to comment #31)
&gt; Dani/Srikanth,
&gt; 
&gt; How do you like the idea of not having a build qualifier for ECJ package?
&gt; 
&gt; David,
&gt; Couple of points:
&gt; 
&gt; 1. JDT/Core projects still support Java 4. I am not sure if we have to consider
&gt; that as a limitation, because if people want to create a ECJ themselves, they
&gt; would need Java 6. Perhaps Dani or Srikanth can tell us that.

I assume you are talking about my remark about using JavaScript with 1.6? I don&apos;t think that&apos;d be a problem, it just means someone has to &quot;build&quot; with 1.6 ... the libraries/rules it uses would still point to Java 4 [That is exactly how we do it today]. If someone _really_ wanted to compile the compiler with Java 1.4, I think they too can use JavaScript in their ant, but, then need several external ant libraries and special setup. 

&gt; Besides, if we are going to get rid of the build qualifier, we can just get the
&gt; bundle version from the messages.properties, which is usually kept in sync with
&gt; the MANIFEST MF when it comes to the bundle version (without the qualifier, of
&gt; course)

Terminology is tricky here, I think you meant &quot;if we are going to get rid of the build LABEL, we can just get the bundle QUALIFIER ... &quot; 

And how you do it is fine and up to you ... I personally try to stay away from &quot;file reading and parsing&quot; especially if there is a handy property available, but sounds like that&apos;s what you have been doing and nothing wrong with it if that&apos;s what you are used to and understand it well. I wasn&apos;t aware that &quot;qualifier&quot; was in message.properties (but not that I&apos;d know).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2140026</commentid>
    <comment_count>33</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2012-07-23 04:38:45 -0400</bug_when>
    <thetext>(In reply to comment #31)
&gt; Dani/Srikanth,
&gt; 
&gt; How do you like the idea of not having a build qualifier for ECJ package?

I wouldn&apos;t like that.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2140041</commentid>
    <comment_count>34</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-07-23 05:36:30 -0400</bug_when>
    <thetext>(In reply to comment #32)
&gt; I assume you are talking about my remark about using JavaScript with 1.6? I
&gt; don&apos;t think that&apos;d be a problem
 
I agree with you. It won&apos;t be a problem.

&gt; And how you do it is fine and up to you ... I personally try to stay away from
&gt; &quot;file reading and parsing&quot; especially if there is a handy property available,
&gt; but sounds like that&apos;s what you have been doing and nothing wrong with it if
&gt; that&apos;s what you are used to and understand it well. I wasn&apos;t aware that
&gt; &quot;qualifier&quot; was in message.properties (but not that I&apos;d know).

I wasn&apos;t thinking clearly when I said that. Please just disregard that comment.

Anyway, I was looking at the export-ecj.xml and the 4.2 release and couldn&apos;t quite figure out how we came up with the name &quot;ecj-4.2.jar&quot;. But the MANIFEST.MF has &quot;3.8.0.I20120608-1400&quot; in the Bundle-Version. This is interesting because according to the export-ecj.xml, the bundle-version in the manifest and jar files name should have the same qualifier.

Another question that arises with that is: What will be the &quot;bundleVersion&quot;? Will it be &quot;4.2&quot; or &quot;3.8.0.I20120608-1400&quot;?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2140043</commentid>
    <comment_count>35</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2012-07-23 05:43:19 -0400</bug_when>
    <thetext>(In reply to comment #34)
&gt; Another question that arises with that is: What will be the &quot;bundleVersion&quot;?
&gt; Will it be &quot;4.2&quot; or &quot;3.8.0.I20120608-1400&quot;?

3.8. Next will be 3.9. The bundle version follow the normal bundle version guidelines.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2140056</commentid>
    <comment_count>36</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-07-23 06:10:31 -0400</bug_when>
    <thetext>(In reply to comment #35)
&gt; 3.8. Next will be 3.9. The bundle version follow the normal bundle version
&gt; guidelines.

I meant the &quot;bundleVersion&quot; that gets passed on to the custom callback and eventually to the export-ecj.xml. Please refer to the attachment that David provided in comment #28. For &apos;I&apos; and &apos;M&apos; builds, would it have the build ID too?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2140105</commentid>
    <comment_count>37</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2012-07-23 08:45:20 -0400</bug_when>
    <thetext>(In reply to comment #36)
&gt; (In reply to comment #35)
&gt; &gt; 3.8. Next will be 3.9. The bundle version follow the normal bundle version
&gt; &gt; guidelines.
&gt; 
&gt; I meant the &quot;bundleVersion&quot; that gets passed on to the custom callback and
&gt; eventually to the export-ecj.xml. Please refer to the attachment that David
&gt; provided in comment #28. For &apos;I&apos; and &apos;M&apos; builds, would it have the build ID
&gt; too?

It will be 3.8.x.q, what ever the version of jdt.core is.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2140279</commentid>
    <comment_count>38</comment_count>
      <attachid>219060</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-07-23 11:58:52 -0400</bug_when>
    <thetext>Created attachment 219060
Patch for ecj export

(In reply to comment #37)
&gt; It will be 3.8.x.q, what ever the version of jdt.core is.

That being guaranteed, your fix is good. I have put this in a JDT/Core patch. Initial tests are good. I am also using this opportunity to get rid of the hard-coded bundle version (3.8.x) from the message.properties. We will have one less maintenance work. I have kept the MANIFEST.MF part, though.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2140290</commentid>
    <comment_count>39</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-07-23 12:24:57 -0400</bug_when>
    <thetext>Released the fix here for the next N build: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=aa32c9a659565fccab882ead90cacc9c1bc07ef5

If everything turns out alright, I will release this fix in integration for the next I build. For the record, I have reverted the changes mentioned in comment #24 already.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2140308</commentid>
    <comment_count>40</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2012-07-23 12:38:54 -0400</bug_when>
    <thetext>(In reply to comment #39)
&gt; Released the fix here for the next N build:
&gt; http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=aa32c9a659565fccab882ead90cacc9c1bc07ef5
&gt; 
&gt; If everything turns out alright, I will release this fix in integration for the
&gt; next I build. For the record, I have reverted the changes mentioned in comment
&gt; #24 already.

I&apos;m doing a test N build now. Started approx. 12:30. ETA approx 2:30. (Eastern). 

Then regular, full, normal N build will be this evening at 8 PM, as usual.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2140382</commentid>
    <comment_count>41</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2012-07-23 15:03:01 -0400</bug_when>
    <thetext>Well, the build didn&apos;t blow up :) 

http://build.eclipse.org/eclipse/eclipse4N/siteDirTESTONLY/eclipse/downloads/drops4/N20120723-1248/

But, some issues: 

The webpage (both words and link) say the name of the ecj jar is 
ecj-N20120723-1248.jar

But, on the file system, it is named
ecj-3.8.1.N20120723-1248.jar

(similar for &apos;source&apos;). 

This probably overlaps with something in &quot;eclipse builder&quot; where some things are named/lined for web page. I&apos;ll need to look at that. But, did you expect it to have all 4 parts of version jar name? Not sure how it works, but normally we&apos;ve been having just qualifier for I builds, but then in the 4.2 final release it says &quot;4.2&quot; in jar name. 

Maybe a problem, but may be by design ... the manifest.mf of the bundle does not &quot;match&quot; jdt.core. It has a zero for service field, instead of a 1: 
3.8.0.N20120723-1248

jdt.core is
3.8.1.N20120723-1248

But, maybe that&apos;s the way you intend it, use only the qualifier from jdt.core, which would be the right thing to do now that I&apos;m thinking. 


BTW, that bundle version is from the ecj jar. I looked for the batch compiler i the N repo, but didn&apos;t see it. We might not produce that for N builds (we did not for the last non-test N build I checked), but it is there for last I-build repo we did ... might be related to not signing N builds? (Though, technically, would be a (seperate) bug, if anyone cared). 

I&apos;ll look at webpage stuff, but let me know what name you intend the jar to have.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2140387</commentid>
    <comment_count>42</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2012-07-23 15:15:59 -0400</bug_when>
    <thetext>The webpage part may be tricky, since it is currently defined as 

&lt;zipType name=&quot;JDTC&quot;&gt;
	&lt;platform id=&quot;ECJ&quot; name=&quot;All&quot; fileName=&quot;ecj-@build@.jar&quot;&gt;&lt;/platform&gt;
	&lt;platform id=&quot;ECJSRC&quot; name=&quot;All&quot; fileName=&quot;ecjsrc-@build@.jar&quot;&gt;&lt;/platform&gt;
&lt;/zipType&gt;

Where @build@ is of course replaced with &quot;real&quot; build ID before processing. 

This is defined (along with many other things) in the elipsebuilder 
.../eclipse/publishingFiles/testManifest.xml

I&apos;ll need to investigate a solution (if needed), but ... every other package/jar/zip on download page has &quot;buildId&quot; in name (whether or note the jars contained in the package changed content, or not). 

So, maybe this just be about the qualifier in the manifest.mf file ... that&apos;s the one that counts from p2/OSGi point of view. 

I can now explain how ecj ends up with &quot;4.2&quot; in released name. Our &quot;rename script&quot; rips through everything and changes any occurrence of the I-build ID to &quot;4.2&quot;. If you need/want different treatment, please open a feature request. :/</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2140389</commentid>
    <comment_count>43</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2012-07-23 15:18:34 -0400</bug_when>
    <thetext>(In reply to comment #41)
&gt; ... but normally
&gt; we&apos;ve been having just qualifier for I builds, but then in the 4.2 final
&gt; release it says &quot;4.2&quot; in jar name. 

Just to correct myself (if not obvious from subsequent comment), normally we&apos;ve been have buildId on webpage (and jar name) not qualifier (Its confusing when looking at N builds, since they are the same :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2140527</commentid>
    <comment_count>44</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-07-23 20:06:20 -0400</bug_when>
    <thetext>(In reply to comment #41)
&gt; But, did you expect it
&gt; to have all 4 parts of version jar name? Not sure how it works, but normally
&gt; we&apos;ve been having just qualifier for I builds, but then in the 4.2 final
&gt; release it says &quot;4.2&quot; in jar name. 

No, I left it there because I wasn&apos;t sure how we end up with &quot;4.2&quot; on a final release. Now that we know, I will get rid of that in the ant script.


&gt; Maybe a problem, but may be by design ... the manifest.mf of the bundle does
&gt; not &quot;match&quot; jdt.core. It has a zero for service field, instead of a 1: 
&gt; 3.8.0.N20120723-1248
&gt; 
&gt; jdt.core is
&gt; 3.8.1.N20120723-1248
&gt; 
&gt; But, maybe that&apos;s the way you intend it, use only the qualifier from jdt.core,
&gt; which would be the right thing to do now that I&apos;m thinking. 

Yes, right now we have &quot;3.8.1&quot; in the org.eclipse.jdt.core\**\manifest.mf for a reason, which gets copied into the ecj*.jar. But the ecj*.jar uses &quot;3.8.0&quot; in the properties file to respond to the -version option, which is what matters most in the batch compiler.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2140562</commentid>
    <comment_count>45</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-07-24 01:17:52 -0400</bug_when>
    <thetext>(In reply to comment #44)
&gt; No, I left it there because I wasn&apos;t sure how we end up with &quot;4.2&quot; on a final
&gt; release. Now that we know, I will get rid of that in the ant script.

I released the fix for yesterday&apos;s N build and this time the result is as expected, of course, except the mismatching version in the MANIFEST.MF. One difference between now and then is the version format. Earlier it was in the format: &quot;N20120723-2000, 3.8.1&quot; and now it is one complete string, like this: &quot;3.8.1.N20120723-2000&quot;. Let me know if anyone doesn&apos;t like this format.

David, since the web pages have always looked like this, should we even worry about fixing it at all?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2140569</commentid>
    <comment_count>46</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2012-07-24 01:32:27 -0400</bug_when>
    <thetext>(In reply to comment #45)
&gt; (In reply to comment #44)
&gt; &gt; No, I left it there because I wasn&apos;t sure how we end up with &quot;4.2&quot; on a final
&gt; &gt; release. Now that we know, I will get rid of that in the ant script.
&gt; 
&gt; I released the fix for yesterday&apos;s N build and this time the result is as
&gt; expected, of course, except the mismatching version in the MANIFEST.MF. One
&gt; difference between now and then is the version format. Earlier it was in the
&gt; format: &quot;N20120723-2000, 3.8.1&quot; and now it is one complete string, like this:
&gt; &quot;3.8.1.N20120723-2000&quot;. Let me know if anyone doesn&apos;t like this format.
&gt; 
&gt; David, since the web pages have always looked like this, should we even worry
&gt; about fixing it at all?

No, web page (and jar name/link) is fine as is (as in tonight&apos;s official N build). 

I think the format of 3.8.1.N20120723-2000 is even better! :) 

But, why does is mismatch in message.properties (3.8.1.N20120723-2000) compared to MANIFEST.MF (3.8.0.N20120723-2000)? Is that bug 374777 all over again?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2140570</commentid>
    <comment_count>47</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-07-24 01:37:11 -0400</bug_when>
    <thetext>(In reply to comment #46)
&gt; But, why does is mismatch in message.properties (3.8.1.N20120723-2000) compared
&gt; to MANIFEST.MF (3.8.0.N20120723-2000)? Is that bug 374777 all over again?

For the messages.properties, I use the bundleVersion from the build. But in the case of MANIFEST.MF, I update only the bundle qualifier and the version is already available in the manifest. in the source, the manifest has 3.8.1, to make the auto incrementing work or something like that.

Perhaps, Dani can tell us more on that and also confirm whether it is okay to leave that as is.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2141308</commentid>
    <comment_count>48</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2012-07-24 12:17:26 -0400</bug_when>
    <thetext>The I-build from this morning has a couple of issues. 

1.
The ecj jar has a name on the file system of 
ecj-v20120724-000238.jar

The web page (name, and link) has what was expected: 
ecj-I20120724-0800.jar

At least, I think that&apos;s what was expected. Right? 

The version inside the jar&apos;s manifest is as expected: 
3.8.0.v20120724-000238

and in
./org/eclipse/jdt/internal/compiler/batch/messages.properties
is the (currently) expected compiler.version  
compiler.version = 3.8.1.v20120724-000238

BUT ... Dani of course has final say ... I think that compiler.version really needs to match the version in manifest.mf. I assume compiler.version is used when doing full logging, etc., and it&apos;d be very confusing if that wasn&apos;t the case. 
Well, I guess if someone was using &quot;jdt.core&quot; directly as their compiler, then it should be 3.8.1.v20120724-000238. 

That&apos;s complicated. 

2.
A maybe worse problem, is that in this morning&apos;s I-build, there was no 
org.eclipse.jdt.core.compiler.batch
bundle in the I-build repo. There was last week: 
org.eclipse.jdt.core.compiler.batch_3.8.0.I20120717-0800.jar

This might be due to the &quot;custom code&quot; in eclipse builder that &quot;finishes the job&quot; of putting this in the repo? It may be expecting a &quot;buildid&quot; pattern. 
But, honestly, don&apos;t know where this code is ... how much done by your custom build, and how much done in eclipse builder ... I&apos;ll look at eclipebuilder.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2141312</commentid>
    <comment_count>49</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2012-07-24 12:31:32 -0400</bug_when>
    <thetext>(In reply to comment #48)
&gt; ... It may be expecting a &quot;buildid&quot; pattern. 
&gt; But, honestly, don&apos;t know where this code is ... how much done by your custom
&gt; build, and how much done in eclipse builder ... I&apos;ll look at eclipebuilder.

I see nothing. 
Maybe you have a &quot;custom&quot; p2.inf that needs adjustment? 
(I say that after finding once before when we &quot;lost&quot; the batch compiler, bug 377437, and there&apos;s been no changes in eclipse builder, in that area, but reminded me that I think this is &quot;all yours&quot; :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2141519</commentid>
    <comment_count>50</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-07-25 02:19:25 -0400</bug_when>
    <thetext>(In reply to comment #48)
&gt; The web page (name, and link) has what was expected: 
&gt; ecj-I20120724-0800.jar
&gt; 
&gt; At least, I think that&apos;s what was expected. Right? 
 
Isn&apos;t that the problem we are trying to fix here? I mean, the name of the jar should be derived from the bundle version, no? If we can&apos;t fix the way web page is created, we should perhaps just let the file name to derived from the build label. This is also a serious problem given that one can&apos;t download the jar from the downloads page.

&gt; 2.
&gt; A maybe worse problem, is that in this morning&apos;s I-build, there was no 
&gt; org.eclipse.jdt.core.compiler.batch
&gt; bundle in the I-build repo. There was last week: 
&gt; org.eclipse.jdt.core.compiler.batch_3.8.0.I20120717-0800.jar

I am guessing the builder is trying to look for something with the buildLabel and not the bundle qualifier. Part of it may be my own fault as I just found there is some more code in the customCallbacks.xml that is looking for the ecj to be named with buildLabel. But this doesn&apos;t appear to have anything with the eclipse.batch.compiler*.jar, though not absolutely sure. 

Would you be able to run a test I build with this fixed? But we need to fix the first issue too.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2141763</commentid>
    <comment_count>51</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2012-07-25 11:25:11 -0400</bug_when>
    <thetext>(In reply to comment #50)
&gt; (In reply to comment #48)

&gt; Isn&apos;t that the problem we are trying to fix here? 

No, not really. It started off being just to not increment the qualifier of  
org.eclipse.jdt.core.compiler.batch in the p2 repository every build, since that implies the code has changed. 

The ecj jar name/label doesn&apos;t quite have that same connotation. I think for a while we were all thinking &quot;why not&quot; match the jar name to the bundle version, but that wasn&apos;t the main focus. 

While I _might_ be able to fix the web page, that&apos;ll take some investigation and likely a fair amount of work (since, now that we&apos;ve looked at what we have, none of the rest of that web page works that way ... its all based on &quot;build id&quot;. 

I&apos;m happy to investigate that and report back if that it one of your goals (but, mine was more the p2 repo version/qualifier). 


&gt; &gt; 2.
&gt; &gt; A maybe worse problem, is that in this morning&apos;s I-build, there was no 
&gt; &gt; org.eclipse.jdt.core.compiler.batch
&gt; &gt; bundle in the I-build repo. There was last week: 
&gt; &gt; org.eclipse.jdt.core.compiler.batch_3.8.0.I20120717-0800.jar
&gt; 
&gt; I am guessing the builder is trying to look for something with the buildLabel
&gt; and not the bundle qualifier. Part of it may be my own fault as I just found
&gt; there is some more code in the customCallbacks.xml that is looking for the ecj
&gt; to be named with buildLabel. But this doesn&apos;t appear to have anything with the
&gt; eclipse.batch.compiler*.jar, though not absolutely sure. 
&gt; 
&gt; Would you be able to run a test I build with this fixed? But we need to fix the
&gt; first issue too.

Yes, I can run a test N build (just about) any time. I&apos;d prefer to wait until the Linux or Mac N-build unit tests are done (and see if they update correctly) but after that I will. I suspect that&apos;ll be about 2 or 3 PM Eastern if that&apos;s ok. 

Let me know how urgent you feel about the web-page/jar name. I&apos;d be happy with buildId there, but would be willing to spend a few hours investigating, if you think worth it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2141881</commentid>
    <comment_count>52</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-07-25 14:28:57 -0400</bug_when>
    <thetext>I agree with David that it&apos;s not worth the effort to make the JAR name align with the bundle version, esp. when it has bad side-effects such as the point 2 under comment #48. I have undone some of the changes related to the JAR file naming. With this the two issues David reported earlier would be resolved.

David, may I request for some tests builds, at least an I build, please?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2141944</commentid>
    <comment_count>53</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2012-07-25 17:51:55 -0400</bug_when>
    <thetext>(In reply to comment #52)

&gt; 
&gt; David, may I request for some tests builds, at least an I build, please?

The test build went well. Nothing blew up :). It&apos;s hard to tell in &quot;N-build&quot; since qualifiers and buildId are the same, but appeared to be created correctly, and the batch compiler was even back in the repo! 

 &lt;unit id=&apos;org.eclipse.jdt.core.compiler.batch&apos; version=&apos;3.8.0.N20120725-1646&apos; singleton=&apos;false&apos;&gt;


So fairly confident the 6 PM I build will go well.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2141978</commentid>
    <comment_count>54</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2012-07-25 21:57:49 -0400</bug_when>
    <thetext>The I20120725-1800 build looks right to me 


ecj-I20120725-1800.jar

Bundle-Version: 3.8.0.v20120725-181921

compiler.version = 3.8.0.v20120725-181921

repo: 

&lt;unit id=&apos;org.eclipse.jdt.core.compiler.batch&apos; version=&apos;3.8.0.v20120725-181921&apos; singleton=&apos;false&apos;&gt;

&lt;unit id=&apos;org.eclipse.jdt.core&apos; version=&apos;3.8.1.v20120725-181921&apos;&gt;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2142043</commentid>
    <comment_count>55</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2012-07-26 03:49:39 -0400</bug_when>
    <thetext>(In reply to comment #47)
&gt; (In reply to comment #46)
&gt; &gt; But, why does is mismatch in message.properties (3.8.1.N20120723-2000) compared
&gt; &gt; to MANIFEST.MF (3.8.0.N20120723-2000)? Is that bug 374777 all over again?
&gt; 
&gt; For the messages.properties, I use the bundleVersion from the build. But in the
&gt; case of MANIFEST.MF, I update only the bundle qualifier and the version is
&gt; already available in the manifest. in the source, the manifest has 3.8.1, to
&gt; make the auto incrementing work or something like that.
&gt; 
&gt; Perhaps, Dani can tell us more on that and also confirm whether it is okay to
&gt; leave that as is.

Tell more on what?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2142081</commentid>
    <comment_count>56</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-07-26 05:11:07 -0400</bug_when>
    <thetext>(In reply to comment #55)
&gt; Tell more on what?

Why we have &quot;3.8.1&quot; in the MANIFEST.MF, which somehow, during the build process, gets replaced by correct &quot;3.8.0&quot;. 

Initially, I was wondering how I can get the same magic on the messages.properties also. But, I have decided to hard code the bundle version on the properties and only update the qualifier on the fly.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2142158</commentid>
    <comment_count>57</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2012-07-26 08:34:04 -0400</bug_when>
    <thetext>(In reply to comment #56)
&gt; (In reply to comment #55)
&gt; &gt; Tell more on what?
&gt; 
&gt; Why we have &quot;3.8.1&quot; in the MANIFEST.MF, which somehow, during the build
&gt; process, gets replaced by correct &quot;3.8.0&quot;. 
&gt; 
&gt; Initially, I was wondering how I can get the same magic on the
&gt; messages.properties also. But, I have decided to hard code the bundle version
&gt; on the properties and only update the qualifier on the fly.

3.8.1 is the *correct* version for jdt.core in R3.8 (we had to increase it to enable auto-tagging). If something (script, builder, real person) fiddles around with that number and changes it to e.g. 3.8.0, then this is just plain wrong and has to be changed. Bundle version numbers are not a marketing instrument. If you want to &quot;name&quot; a release then &quot;Juno&quot; or &quot;Kepler&quot; is the right approach.

Also note, that the versions in master (should be 3.8.101 for now, will probably be 3.9.0 in the end) and 3.8 maintenance (should be 3.8.2) are wrong (not updated). Jay, please fix this, thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2143478</commentid>
    <comment_count>58</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-07-31 08:19:34 -0400</bug_when>
    <thetext>Updated the version in MANIFEST to 3.9.0 in master.

The last change is causing the FullSourceWorkspaceTests to fail because of the missing &apos;,&quot; in the compiler.version property.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2143525</commentid>
    <comment_count>59</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-07-31 09:20:52 -0400</bug_when>
    <thetext>(In reply to comment #58)
&gt; Updated the version in MANIFEST to 3.9.0 in master.
&gt; 
&gt; The last change is causing the FullSourceWorkspaceTests to fail because of
&gt; the missing &apos;,&quot; in the compiler.version property.

Looks like the missing version is a bigger problem (note, we no longer update the qualifier for every build with the 0.C58 format). One easy way to handle this is to update the messages.properties directly in the org.eclipse.jdt.core/bin, before it gets copied for creating the batch compiler.

But unfortunately I also see some more code that may be expecting the version to be in that format. Continuing to investigate.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2143540</commentid>
    <comment_count>60</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-07-31 09:39:31 -0400</bug_when>
    <thetext>(In reply to comment #59)
&gt; Looks like the missing version is a bigger problem

Created bug 386318 to track this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2225212</commentid>
    <comment_count>61</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2013-03-04 00:27:53 -0500</bug_when>
    <thetext>This was fixed long ago by JDT Core team, so will close as dup of their bug.

*** This bug has been marked as a duplicate of bug 386318 ***</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>218894</attachid>
            <date>2012-07-18 19:43:00 -0400</date>
            <delta_ts>2012-07-18 19:43:33 -0400</delta_ts>
            <desc>log snippet around &quot;custom build&quot;</desc>
            <filename>logsnippet.txt</filename>
            <type>text/plain</type>
            <size>36327</size>
            <attacher name="David Williams">david_williams</attacher>
            
              <data encoding="base64">CnBvc3QuY29tcGlsZS5qZHRDb21waWxlckFkYXB0ZXIuamFyOgoKaW5pdDoKCmV4dHJhY3QtYW50
LWFkYXB0ZXItY29tcGlsZXI6CiAgICAgW2VjaG9dIEV4dHJhY3QgLmNsYXNzIGZpbGUgYW5kIHBy
b3BlcnRpZXMgZm9yIHRoZSBhbnQgYWRhcHRlcgogICAgIFtjb3B5XSBDb3B5aW5nIDUgZmlsZXMg
dG8gL29wdC9wdWJsaWMvZWNsaXBzZS9lY2xpcHNlNE4vYnVpbGQvc3VwcG9ydERpci9zcmMvcGx1
Z2lucy9vcmcuZWNsaXBzZS5qZHQuY29yZS9lY2otdGVtcC1mb2xkZXIKICAgICBbY29weV0gQ29w
eWluZyAyIGZpbGVzIHRvIC9vcHQvcHVibGljL2VjbGlwc2UvZWNsaXBzZTROL2J1aWxkL3N1cHBv
cnREaXIvc3JjL3BsdWdpbnMvb3JnLmVjbGlwc2UuamR0LmNvcmUvdGVtcC5mb2xkZXIvamR0Q29t
cGlsZXJBZGFwdGVyLmphci5iaW4KICAgICAgW2phcl0gQnVpbGRpbmcgamFyOiAvb3B0L3B1Ymxp
Yy9lY2xpcHNlL2VjbGlwc2U0Ti9idWlsZC9zdXBwb3J0RGlyL3NyYy9wbHVnaW5zL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2pkdENvbXBpbGVyQWRhcHRlci5qYXIKICAgW2RlbGV0ZV0gRGVsZXRpbmcg
ZGlyZWN0b3J5IC9vcHQvcHVibGljL2VjbGlwc2UvZWNsaXBzZTROL2J1aWxkL3N1cHBvcnREaXIv
c3JjL3BsdWdpbnMvb3JnLmVjbGlwc2UuamR0LmNvcmUvdGVtcC5mb2xkZXIvamR0Q29tcGlsZXJB
ZGFwdGVyLmphci5iaW4KCnBvc3QuamR0Q29tcGlsZXJBZGFwdGVyLmphcjoKICAgIFtta2Rpcl0g
Q3JlYXRlZCBkaXI6IC9vcHQvcHVibGljL2VjbGlwc2UvZWNsaXBzZTROL2J1aWxkL3N1cHBvcnRE
aXIvc3JjL3BsdWdpbnMvb3JnLmVjbGlwc2UuamR0LmNvcmUvdGVtcGJpbgogICAgW3VuamFyXSBF
eHBhbmRpbmc6IC9vcHQvcHVibGljL2VjbGlwc2UvZWNsaXBzZTROL2J1aWxkL3N1cHBvcnREaXIv
c3JjL3BsdWdpbnMvb3JnLmVjbGlwc2UuamR0LmNvcmUvamR0Q29tcGlsZXJBZGFwdGVyLmphciBp
bnRvIC9vcHQvcHVibGljL2VjbGlwc2UvZWNsaXBzZTROL2J1aWxkL3N1cHBvcnREaXIvc3JjL3Bs
dWdpbnMvb3JnLmVjbGlwc2UuamR0LmNvcmUvdGVtcGJpbgogICBbZGVsZXRlXSBEZWxldGluZzog
L29wdC9wdWJsaWMvZWNsaXBzZS9lY2xpcHNlNE4vYnVpbGQvc3VwcG9ydERpci9zcmMvcGx1Z2lu
cy9vcmcuZWNsaXBzZS5qZHQuY29yZS9qZHRDb21waWxlckFkYXB0ZXIuamFyCiAgIFtkZWxldGVd
IERlbGV0aW5nOiAvb3B0L3B1YmxpYy9lY2xpcHNlL2VjbGlwc2U0Ti9idWlsZC9zdXBwb3J0RGly
L3NyYy9wbHVnaW5zL29yZy5lY2xpcHNlLmpkdC5jb3JlL3RlbXBiaW4vTUVUQS1JTkYvTUFOSUZF
U1QuTUYKICAgICBbY29weV0gQ29weWluZyAxIGZpbGUgdG8gL29wdC9wdWJsaWMvZWNsaXBzZS9l
Y2xpcHNlNE4vYnVpbGQvc3VwcG9ydERpci9zcmMvcGx1Z2lucy9vcmcuZWNsaXBzZS5qZHQuY29y
ZS90ZW1wYmluL01FVEEtSU5GCiAgICAgIFt6aXBdIEJ1aWxkaW5nIHppcDogL29wdC9wdWJsaWMv
ZWNsaXBzZS9lY2xpcHNlNE4vYnVpbGQvc3VwcG9ydERpci9zcmMvcGx1Z2lucy9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9qZHRDb21waWxlckFkYXB0ZXIuamFyCiAgIFtkZWxldGVdIERlbGV0aW5nIGRp
cmVjdG9yeSAvb3B0L3B1YmxpYy9lY2xpcHNlL2VjbGlwc2U0Ti9idWlsZC9zdXBwb3J0RGlyL3Ny
Yy9wbHVnaW5zL29yZy5lY2xpcHNlLmpkdC5jb3JlL3RlbXBiaW4KCnBvc3QuYnVpbGQuamFyczoK
CmluaXQ6CgpleHBvcnQ6CltlY2hvcHJvcGVydGllc10gI0FudCBwcm9wZXJ0aWVzCltlY2hvcHJv
cGVydGllc10gI1dlZCBKdWwgMTggMTY6NTM6MTggRURUIDIwMTIKW2VjaG9wcm9wZXJ0aWVzXSBD
REMtMS4wL0ZvdW5kYXRpb24tMS4wPS9zaGFyZWQvY29tbW9uL29yZy5lY2xpcHNlLnNkay1mZWF0
dXJlMi9saWJzL2VlLmZvdW5kYXRpb24tMS4wLmphcgpbZWNob3Byb3BlcnRpZXNdIENEQy0xLjEv
Rm91bmRhdGlvbi0xLjE9L3NoYXJlZC9jb21tb24vb3JnLmVjbGlwc2Uuc2RrLWZlYXR1cmUyL2xp
YnMvZWUuZm91bmRhdGlvbi5qYXIKW2VjaG9wcm9wZXJ0aWVzXSBEU1RBTVA9MjAxMjA3MTgKW2Vj
aG9wcm9wZXJ0aWVzXSBKMlNFLTEuND0vc2hhcmVkL2NvbW1vbi9qMnNkazEuNC4yXzE5L2pyZS9s
aWIvcnQuamFyXDovc2hhcmVkL2NvbW1vbi9qMnNkazEuNC4yXzE5L2pyZS9saWIvanNzZS5qYXJc
Oi9zaGFyZWQvY29tbW9uL2oyc2RrMS40LjJfMTkvanJlL2xpYi9qY2UuamFyCltlY2hvcHJvcGVy
dGllc10gSjJTRS0xLjU9L3NoYXJlZC9jb21tb24vamRrLTEuNS4wXzE2L2pyZS9saWIvcnQuamFy
XDovc2hhcmVkL2NvbW1vbi9qZGstMS41LjBfMTYvanJlL2xpYi9qc3NlLmphclw6L3NoYXJlZC9j
b21tb24vamRrLTEuNS4wXzE2L2pyZS9saWIvamNlLmphcgpbZWNob3Byb3BlcnRpZXNdIEphdmFT
RS0xLjY9L3NoYXJlZC9jb21tb24vamRrMS42LjBfMjcueDg2XzY0L2pyZS9saWIvcnQuamFyXDov
c2hhcmVkL2NvbW1vbi9qZGsxLjYuMF8yNy54ODZfNjQvanJlL2xpYi9qc3NlLmphclw6L3NoYXJl
ZC9jb21tb24vamRrMS42LjBfMjcueDg2XzY0L2pyZS9saWIvamNlLmphcgpbZWNob3Byb3BlcnRp
ZXNdIE9TR2kvTWluaW11bS0xLjA9L3NoYXJlZC9jb21tb24vb3JnLmVjbGlwc2Uuc2RrLWZlYXR1
cmUyL2xpYnMvZWUubWluaW11bS5qYXIKW2VjaG9wcm9wZXJ0aWVzXSBPU0dpL01pbmltdW0tMS4x
PS9zaGFyZWQvY29tbW9uL29yZy5lY2xpcHNlLnNkay1mZWF0dXJlMi9saWJzL2VlLm1pbmltdW0u
amFyCltlY2hvcHJvcGVydGllc10gT1NHaS9NaW5pbXVtLTEuMj0vc2hhcmVkL2NvbW1vbi9vcmcu
ZWNsaXBzZS5zZGstZmVhdHVyZTIvbGlicy9lZS5taW5pbXVtLTEuMi4wLmphcgpbZWNob3Byb3Bl
cnRpZXNdIFRPREFZPUp1bHkgMTggMjAxMgpbZWNob3Byb3BlcnRpZXNdIFRTVEFNUD0xNjUzCltl
Y2hvcHJvcGVydGllc10gYWxsRWxlbWVudHNGaWxlPS9zaGFyZWQvZWNsaXBzZS9lY2xpcHNlNE4v
YnVpbGQvc3VwcG9ydERpci9vcmcuZWNsaXBzZS5yZWxlbmcuZWNsaXBzZWJ1aWxkZXIvZWNsaXBz
ZS9idWlsZENvbmZpZ3MvbWFzdGVyL2FsbEVsZW1lbnRzLnhtbApbZWNob3Byb3BlcnRpZXNdIGFu
dC5jb3JlLmxpYj0vb3B0L3B1YmxpYy9lY2xpcHNlL2VjbGlwc2U0Ti9idWlsZC9zdXBwb3J0RGly
L29yZy5lY2xpcHNlLnJlbGVuZy5iYXNlYnVpbGRlci9wbHVnaW5zL29yZy5hcGFjaGUuYW50XzEu
OC4yLnYyMDEyMDEwOS0xMDMwL2xpYi9hbnQuamFyCltlY2hvcHJvcGVydGllc10gYW50LmZpbGU9
L29wdC9wdWJsaWMvZWNsaXBzZS9lY2xpcHNlNE4vYnVpbGQvc3VwcG9ydERpci9zcmMvcGx1Z2lu
cy9vcmcuZWNsaXBzZS5qZHQuY29yZS9zY3JpcHRzL2V4cG9ydC1lY2oueG1sCltlY2hvcHJvcGVy
dGllc10gYW50LmZpbGUuQnVpbGRcIEFsbFwgRWxlbWVudHM9L29wdC9wdWJsaWMvZWNsaXBzZS9l
Y2xpcHNlNE4vYnVpbGQvc3VwcG9ydERpci9vcmcuZWNsaXBzZS5yZWxlbmcuYmFzZWJ1aWxkZXIv
cGx1Z2lucy9vcmcuZWNsaXBzZS5wZGUuYnVpbGRfMy44LjAudjIwMTIwMTE5LTE5NTAvc2NyaXB0
cy9idWlsZC54bWwKW2VjaG9wcm9wZXJ0aWVzXSBhbnQuZmlsZS5CdWlsZFwgc3BlY2lmaWNcIHRh
cmdldHNcIGFuZFwgcHJvcGVydGllcz0vb3B0L3B1YmxpYy9lY2xpcHNlL2VjbGlwc2U0Ti9idWls
ZC9zdXBwb3J0RGlyL3NyYy9wbHVnaW5zL29yZy5lY2xpcHNlLmpkdC5jb3JlL2N1c3RvbUJ1aWxk
Q2FsbGJhY2tzLnhtbApbZWNob3Byb3BlcnRpZXNdIGFudC5maWxlLkNvbXBpbGVcIG1hc3Rlcj0v
c2hhcmVkL2VjbGlwc2UvZWNsaXBzZTROL2J1aWxkL3N1cHBvcnREaXIvc3JjL2NvbXBpbGUubWFz
dGVyLnhtbApbZWNob3Byb3BlcnRpZXNdIGFudC5maWxlLkVjbGlwc2VcIEJhdGNoXCBDb21waWxl
cj0vb3B0L3B1YmxpYy9lY2xpcHNlL2VjbGlwc2U0Ti9idWlsZC9zdXBwb3J0RGlyL3NyYy9wbHVn
aW5zL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NjcmlwdHMvZXhwb3J0LWVjai54bWwKW2VjaG9wcm9w
ZXJ0aWVzXSBhbnQuZmlsZS5HZW5lcmljXCBCdWlsZFwgVGFyZ2V0cz0vb3B0L3B1YmxpYy9lY2xp
cHNlL2VjbGlwc2U0Ti9idWlsZC9zdXBwb3J0RGlyL29yZy5lY2xpcHNlLnJlbGVuZy5iYXNlYnVp
bGRlci9wbHVnaW5zL29yZy5lY2xpcHNlLnBkZS5idWlsZF8zLjguMC52MjAxMjAxMTktMTk1MC9z
Y3JpcHRzL2dlbmVyaWNUYXJnZXRzLnhtbApbZWNob3Byb3BlcnRpZXNdIGFudC5maWxlLmFsbEVs
ZW1lbnRzXCBEZWxlZ2F0b3I9L3NoYXJlZC9lY2xpcHNlL2VjbGlwc2U0Ti9idWlsZC9zdXBwb3J0
RGlyL29yZy5lY2xpcHNlLnJlbGVuZy5lY2xpcHNlYnVpbGRlci9lY2xpcHNlL2J1aWxkQ29uZmln
cy9tYXN0ZXIvYWxsRWxlbWVudHMueG1sCltlY2hvcHJvcGVydGllc10gYW50LmZpbGUuYnVpbGRB
bGw9L3NoYXJlZC9lY2xpcHNlL2VjbGlwc2U0Ti9idWlsZC9zdXBwb3J0RGlyL29yZy5lY2xpcHNl
LnJlbGVuZy5lY2xpcHNlYnVpbGRlci9idWlsZEFsbC54bWwKW2VjaG9wcm9wZXJ0aWVzXSBhbnQu
ZmlsZS5vcmcuZWNsaXBzZS5qZHQuY29yZT0vb3B0L3B1YmxpYy9lY2xpcHNlL2VjbGlwc2U0Ti9i
dWlsZC9zdXBwb3J0RGlyL3NyYy9wbHVnaW5zL29yZy5lY2xpcHNlLmpkdC5jb3JlL2J1aWxkLnht
bApbZWNob3Byb3BlcnRpZXNdIGFudC5maWxlLnR5cGUuQnVpbGRcIEFsbFwgRWxlbWVudHM9Zmls
ZQpbZWNob3Byb3BlcnRpZXNdIGFudC5maWxlLnR5cGUuQnVpbGRcIHNwZWNpZmljXCB0YXJnZXRz
XCBhbmRcIHByb3BlcnRpZXM9ZmlsZQpbZWNob3Byb3BlcnRpZXNdIGFudC5maWxlLnR5cGUuQ29t
cGlsZVwgbWFzdGVyPWZpbGUKW2VjaG9wcm9wZXJ0aWVzXSBhbnQuZmlsZS50eXBlLkVjbGlwc2Vc
IEJhdGNoXCBDb21waWxlcj1maWxlCltlY2hvcHJvcGVydGllc10gYW50LmZpbGUudHlwZS5HZW5l
cmljXCBCdWlsZFwgVGFyZ2V0cz1maWxlCltlY2hvcHJvcGVydGllc10gYW50LmZpbGUudHlwZS5h
bGxFbGVtZW50c1wgRGVsZWdhdG9yPWZpbGUKW2VjaG9wcm9wZXJ0aWVzXSBhbnQuZmlsZS50eXBl
LmJ1aWxkQWxsPWZpbGUKW2VjaG9wcm9wZXJ0aWVzXSBhbnQuZmlsZS50eXBlLm9yZy5lY2xpcHNl
LmpkdC5jb3JlPWZpbGUKW2VjaG9wcm9wZXJ0aWVzXSBhbnQuaG9tZT0vb3B0L3B1YmxpYy9lY2xp
cHNlL2VjbGlwc2U0Ti9idWlsZC9zdXBwb3J0RGlyL29yZy5lY2xpcHNlLnJlbGVuZy5iYXNlYnVp
bGRlci9wbHVnaW5zL29yZy5hcGFjaGUuYW50XzEuOC4yLnYyMDEyMDEwOS0xMDMwCltlY2hvcHJv
cGVydGllc10gYW50LmphdmEudmVyc2lvbj0xLjYKW2VjaG9wcm9wZXJ0aWVzXSBhbnQubGlicmFy
eS5kaXI9L29wdC9wdWJsaWMvZWNsaXBzZS9lY2xpcHNlNE4vYnVpbGQvc3VwcG9ydERpci9vcmcu
ZWNsaXBzZS5yZWxlbmcuYmFzZWJ1aWxkZXIvcGx1Z2lucy9vcmcuYXBhY2hlLmFudF8xLjguMi52
MjAxMjAxMDktMTAzMC9saWIKW2VjaG9wcm9wZXJ0aWVzXSBhbnQucHJvamVjdC5kZWZhdWx0LXRh
cmdldD1leHBvcnQtYWxsCltlY2hvcHJvcGVydGllc10gYW50LnByb2plY3QuaW52b2tlZC10YXJn
ZXRzPWV4cG9ydApbZWNob3Byb3BlcnRpZXNdIGFudC5wcm9qZWN0Lm5hbWU9RWNsaXBzZSBCYXRj
aCBDb21waWxlcgpbZWNob3Byb3BlcnRpZXNdIGFudC52ZXJzaW9uPUFwYWNoZSBBbnQoVE0pIHZl
cnNpb24gMS44LjIgY29tcGlsZWQgb24gRGVjZW1iZXIgMjAgMjAxMApbZWNob3Byb3BlcnRpZXNd
IGFwaVRlc3RzUHJldmlvdXNCYXNlRExCYXNlVVJMPWh0dHBcOi8vYXJjaGl2ZS5lY2xpcHNlLm9y
Zy9lY2xpcHNlL2Rvd25sb2Fkcy9kcm9wczQvUi00LjEtMjAxMTA2MjAxNjMxCltlY2hvcHJvcGVy
dGllc10gYXBpVGVzdHNQcmV2aW91c0Jhc2VXaW4zMkZpbGVuYW1lPWVjbGlwc2UtU0RLLTQuMS13
aW4zMi56aXAKW2VjaG9wcm9wZXJ0aWVzXSBhcGlUZXN0c1ByZXZpb3VzUmVmZXJlcmVuY2VCYXNl
RExCYXNlVVJMPWh0dHBcOi8vYXJjaGl2ZS5lY2xpcHNlLm9yZy9lY2xpcHNlL2Rvd25sb2Fkcy9k
cm9wczQvUi00LjEuMi0yMDEyMDIyMzA5MDAKW2VjaG9wcm9wZXJ0aWVzXSBhcGlUZXN0c1ByZXZp
b3VzUmVmZXJlcmVuY2VXaW4zMkZpbGVuYW1lPWVjbGlwc2UtU0RLLTQuMS4yLXdpbjMyLnppcApb
ZWNob3Byb3BlcnRpZXNdIGFyY2hpdmVGdWxsUGF0aD0vc2hhcmVkL2VjbGlwc2UvZWNsaXBzZTRO
L2J1aWxkL3N1cHBvcnREaXIvb3JnLmVjbGlwc2UucmVsZW5nLmVjbGlwc2VidWlsZGVyLy4uL3Ny
Yy9OMjAxMjA3MTgtMTYyNC9lY2xpcHNlLW1hc3Rlci1OMjAxMjA3MTgtMTYyNC56aXAKW2VjaG9w
cm9wZXJ0aWVzXSBhcmNoaXZlTmFtZT1lY2xpcHNlLW1hc3Rlci1OMjAxMjA3MTgtMTYyNC56aXAK
W2VjaG9wcm9wZXJ0aWVzXSBhcmNoaXZlUHJlZml4PWVjbGlwc2UKW2VjaG9wcm9wZXJ0aWVzXSBh
cmNoaXZlc0Zvcm1hdD1ncm91cCxncm91cCxncm91cC16aXAKW2VjaG9wcm9wZXJ0aWVzXSBhc3Nl
bWJsZS5lbGVtZW50LmlkWy5jb25maWcuc3BlY109dHJ1ZQpbZWNob3Byb3BlcnRpZXNdIGJhc2U9
L3NoYXJlZC9lY2xpcHNlL2VjbGlwc2U0Ti9idWlsZApbZWNob3Byb3BlcnRpZXNdIGJhc2UuYnVp
bGRlcj0vc2hhcmVkL2VjbGlwc2UvZWNsaXBzZTROL2J1aWxkL3N1cHBvcnREaXIvb3JnLmVjbGlw
c2UucmVsZW5nLmVjbGlwc2VidWlsZGVyLy4uL29yZy5lY2xpcHNlLnJlbGVuZy5iYXNlYnVpbGRl
cgpbZWNob3Byb3BlcnRpZXNdIGJhc2VMb2NhdGlvbj0KW2VjaG9wcm9wZXJ0aWVzXSBiYXNlYXJj
aD14ODYKW2VjaG9wcm9wZXJ0aWVzXSBiYXNlZGlyPS9vcHQvcHVibGljL2VjbGlwc2UvZWNsaXBz
ZTROL2J1aWxkL3N1cHBvcnREaXIvc3JjL3BsdWdpbnMvb3JnLmVjbGlwc2UuamR0LmNvcmUKW2Vj
aG9wcm9wZXJ0aWVzXSBiYXNlbmw9JHtubH0KW2VjaG9wcm9wZXJ0aWVzXSBiYXNlb3M9d2luMzIK
W2VjaG9wcm9wZXJ0aWVzXSBiYXNld3M9d2luMzIKW2VjaG9wcm9wZXJ0aWVzXSBib290Y2xhc3Nw
YXRoPS9vcHQvcHVibGljL2NvbW1vbi9zdW4tamRrMS42LjBfMjFfeDY0L2pyZS9saWIvcnQuamFy
CltlY2hvcHJvcGVydGllc10gYnVpbGQuY29tcGlsZXI9b3JnLmVjbGlwc2UuamR0LmNvcmUuSkRU
Q29tcGlsZXJBZGFwdGVyCltlY2hvcHJvcGVydGllc10gYnVpbGQucmVzdWx0LmZvbGRlcj0vb3B0
L3B1YmxpYy9lY2xpcHNlL2VjbGlwc2U0Ti9idWlsZC9zdXBwb3J0RGlyL3NyYy9wbHVnaW5zL29y
Zy5lY2xpcHNlLmpkdC5jb3JlCltlY2hvcHJvcGVydGllc10gYnVpbGREaXJlY3Rvcnk9L3NoYXJl
ZC9lY2xpcHNlL2VjbGlwc2U0Ti9idWlsZC9zdXBwb3J0RGlyL29yZy5lY2xpcHNlLnJlbGVuZy5l
Y2xpcHNlYnVpbGRlci8uLi9zcmMKW2VjaG9wcm9wZXJ0aWVzXSBidWlsZERpcmVjdG9yeUFic29s
dXRlPS9zaGFyZWQvZWNsaXBzZS9lY2xpcHNlNE4vYnVpbGQvc3VwcG9ydERpci9zcmMvcmVwb3Nv
dXJjZQpbZWNob3Byb3BlcnRpZXNdIGJ1aWxkRGlyZWN0b3J5QWJzb2x1dGVUZW1wPS9zaGFyZWQv
ZWNsaXBzZS9lY2xpcHNlNE4vYnVpbGQvc3VwcG9ydERpci9vcmcuZWNsaXBzZS5yZWxlbmcuZWNs
aXBzZWJ1aWxkZXIvLi4vc3JjL2Fic29sdXRldGVtcC50eHQKW2VjaG9wcm9wZXJ0aWVzXSBidWls
ZElkPU4yMDEyMDcxOC0xNjI0CltlY2hvcHJvcGVydGllc10gYnVpbGRMYWJlbD1OMjAxMjA3MTgt
MTYyNApbZWNob3Byb3BlcnRpZXNdIGJ1aWxkUHJvcGVydGllcz0vc2hhcmVkL2VjbGlwc2UvZWNs
aXBzZTROL2J1aWxkL3N1cHBvcnREaXIvb3JnLmVjbGlwc2UucmVsZW5nLmVjbGlwc2VidWlsZGVy
L2VjbGlwc2UvYnVpbGRDb25maWdzL21hc3Rlci9idWlsZC5wcm9wZXJ0aWVzCltlY2hvcHJvcGVy
dGllc10gYnVpbGRSZXBvPS9zaGFyZWQvZWNsaXBzZS9lY2xpcHNlNE4vc2l0ZURpclRFU1RPTkxZ
L3VwZGF0ZXMvNC4zLU4tYnVpbGRzL04yMDEyMDcxOC0xNjI0CltlY2hvcHJvcGVydGllc10gYnVp
bGRTdWJqZWN0UHJlZml4PVtlY2xpcHNlLWJ1aWxkXQpbZWNob3Byb3BlcnRpZXNdIGJ1aWxkVHlw
ZT1OCltlY2hvcHJvcGVydGllc10gYnVpbGRkYXRlPTIwMTIwNzE4CltlY2hvcHJvcGVydGllc10g
YnVpbGRlcj0vc2hhcmVkL2VjbGlwc2UvZWNsaXBzZTROL2J1aWxkL3N1cHBvcnREaXIvb3JnLmVj
bGlwc2UucmVsZW5nLmVjbGlwc2VidWlsZGVyL2VjbGlwc2UvYnVpbGRDb25maWdzL21hc3Rlcgpb
ZWNob3Byb3BlcnRpZXNdIGJ1aWxkZXJEaXJlY3Rvcnk9L3NoYXJlZC9lY2xpcHNlL2VjbGlwc2U0
Ti9idWlsZC9zdXBwb3J0RGlyL29yZy5lY2xpcHNlLnJlbGVuZy5lY2xpcHNlYnVpbGRlci9lY2xp
cHNlL2J1aWxkQ29uZmlncy9tYXN0ZXIKW2VjaG9wcm9wZXJ0aWVzXSBidWlsZGlkPU4yMDEyMDcx
OC0xNjI0CltlY2hvcHJvcGVydGllc10gYnVpbGRpbmdPU0dpPXRydWUKW2VjaG9wcm9wZXJ0aWVz
XSBidWlsZGxvZ3M9L3NoYXJlZC9lY2xpcHNlL2VjbGlwc2U0Ti9zaXRlRGlyVEVTVE9OTFkvZWNs
aXBzZS9kb3dubG9hZHMvZHJvcHM0L04yMDEyMDcxOC0xNjI0L2J1aWxkbG9ncwpbZWNob3Byb3Bl
cnRpZXNdIGJ1aWxkdGltZT0xNjI0CltlY2hvcHJvcGVydGllc10gYnVuZGxlQm9vdENsYXNzcGF0
aD0vc2hhcmVkL2NvbW1vbi9qMnNkazEuNC4yXzE5L2pyZS9saWIvcnQuamFyXDovc2hhcmVkL2Nv
bW1vbi9qMnNkazEuNC4yXzE5L2pyZS9saWIvanNzZS5qYXJcOi9zaGFyZWQvY29tbW9uL2oyc2Rr
MS40LjJfMTkvanJlL2xpYi9qY2UuamFyCltlY2hvcHJvcGVydGllc10gYnVuZGxlSWQ9b3JnLmVj
bGlwc2UuamR0LmNvcmUKW2VjaG9wcm9wZXJ0aWVzXSBidW5kbGVKYXZhY1NvdXJjZT0xLjMKW2Vj
aG9wcm9wZXJ0aWVzXSBidW5kbGVKYXZhY1RhcmdldD0xLjIKW2VjaG9wcm9wZXJ0aWVzXSBidW5k
bGVWZXJzaW9uPTMuOC4xLk4yMDEyMDcxOC0xNjI0CltlY2hvcHJvcGVydGllc10gY29sbEJhc2U9
LgpbZWNob3Byb3BlcnRpZXNdIGNvbGxQbGFjZT1lY2xpcHNlCltlY2hvcHJvcGVydGllc10gY29s
bGVjdGluZ0ZvbGRlcj1lY2xpcHNlCltlY2hvcHJvcGVydGllc10gY29tbW9ucmVwbz1maWxlXDov
Ly9naXRyb290L3BsYXRmb3JtL2VjbGlwc2UucGxhdGZvcm0ucmVsZW5nLm1hcHMKW2VjaG9wcm9w
ZXJ0aWVzXSBjb21waWxhdGlvbi5wcmVyZXEubG9nPS9zaGFyZWQvZWNsaXBzZS9lY2xpcHNlNE4v
YnVpbGQvc3VwcG9ydERpci9vcmcuZWNsaXBzZS5yZWxlbmcuZWNsaXBzZWJ1aWxkZXIvLi4vc3Jj
L3ByZXJlcUVycm9ycy5sb2cKW2VjaG9wcm9wZXJ0aWVzXSBjb21waWxhdGlvbi5wcm9ibGVtLm1h
cmtlcj0vb3B0L3B1YmxpYy9lY2xpcHNlL2VjbGlwc2U0Ti9idWlsZC9zdXBwb3J0RGlyL3NyYy9w
bHVnaW5zL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGF0aW9uLnByb2JsZW0KW2VjaG9wcm9w
ZXJ0aWVzXSBjb21waWxlckFyZz0taW5saW5lSlNSIC1lbmFibGVKYXZhZG9jIC1lbmNvZGluZyBJ
U08tODg1OS0xCltlY2hvcHJvcGVydGllc10gY29tcG9uZW50PS9zaGFyZWQvZWNsaXBzZS9lY2xp
cHNlNE4vYnVpbGQvc3VwcG9ydERpci9vcmcuZWNsaXBzZS5yZWxlbmcuZWNsaXBzZWJ1aWxkZXIv
ZWNsaXBzZS9idWlsZENvbmZpZ3MvbWFzdGVyCltlY2hvcHJvcGVydGllc10gY29uZmlncz13aW4z
Miwgd2luMzIsIHg4NiAmd2luMzIsIHdpbjMyLCB4ODZfNjQgJndjZV9wcGMsIHdpbjMyLCBhcm0g
JmxpbnV4LCBndGssIHg4NiAmIGxpbnV4LCBndGssIHBwYzY0ICYgbGludXgsIGd0aywgeDg2XzY0
ICZsaW51eCwgZ3RrLCBzMzkweCAmbGludXgsIGd0aywgczM5MCAmc29sYXJpcywgZ3RrLCBzcGFy
YyAmIHNvbGFyaXMsIGd0aywgeDg2ICYgYWl4LCBndGssIHBwYyAmIGFpeCwgZ3RrLCBwcGM2NCAm
IGhwdXgsIGd0aywgaWE2NF8zMiAmIG1hY29zeCwgY29jb2EsIHg4NiAmIG1hY29zeCwgY29jb2Es
IHg4Nl82NFx0CltlY2hvcHJvcGVydGllc10gY29uZmlndXJhdGlvbkxvY2F0aW9uPS9zaGFyZWQv
ZWNsaXBzZS9lY2xpcHNlNE4vYnVpbGQvc3VwcG9ydERpci9vcmcuZWNsaXBzZS5yZWxlbmcuZWNs
aXBzZWJ1aWxkZXIvLi4vc3JjL21hcHMvb3JnLmVjbGlwc2UucmVsZW5nL2NvbmZpZ3VyYXRpb24K
W2VjaG9wcm9wZXJ0aWVzXSBjdXJyZW50YnVpbGRyZXBvPWh0dHBcOi8vZG93bmxvYWQuZWNsaXBz
ZS5vcmcvZWNsaXBzZS91cGRhdGVzLyR7dXBkYXRlU2l0ZVNlZ21lbnR9LU4tYnVpbGRzL04yMDEy
MDcxOC0xNjI0CltlY2hvcHJvcGVydGllc10gY3VzdG9tQnVpbGRDYWxsYmFja3M9Y3VzdG9tQnVp
bGRDYWxsYmFja3MueG1sCltlY2hvcHJvcGVydGllc10gY3VzdG9tRUVTb3VyY2VzPQpbZWNob3By
b3BlcnRpZXNdIGN1c3RvbVRhcmdldHM9L3NoYXJlZC9lY2xpcHNlL2VjbGlwc2U0Ti9idWlsZC9z
dXBwb3J0RGlyL29yZy5lY2xpcHNlLnJlbGVuZy5lY2xpcHNlYnVpbGRlci9lY2xpcHNlL2J1aWxk
Q29uZmlncy9tYXN0ZXIvY3VzdG9tVGFyZ2V0cy54bWwKW2VjaG9wcm9wZXJ0aWVzXSBjdnN1c2Vy
PVw6ZHVtbXljdnN1c2VyXDoKW2VjaG9wcm9wZXJ0aWVzXSBkZWZhdWx0QXNzZW1ibHlFbmFibGVk
PXRydWUKW2VjaG9wcm9wZXJ0aWVzXSBkZXN0PS9zaGFyZWQvZWNsaXBzZS9lY2xpcHNlNE4vc2l0
ZURpclRFU1RPTkxZL2VjbGlwc2UvZG93bmxvYWRzL2Ryb3BzNC9OMjAxMjA3MTgtMTYyNApbZWNo
b3Byb3BlcnRpZXNdIGRpcl9ib290Y2xhc3NwYXRoPS9vcHQvcHVibGljL2NvbW1vbi9zdW4tamRr
MS42LjBfMjFfeDY0L2pyZS9saWIKW2VjaG9wcm9wZXJ0aWVzXSBlY2otdGVtcC1mb2xkZXI9L29w
dC9wdWJsaWMvZWNsaXBzZS9lY2xpcHNlNE4vYnVpbGQvc3VwcG9ydERpci9zcmMvcGx1Z2lucy9v
cmcuZWNsaXBzZS5qZHQuY29yZS9lY2otdGVtcC1mb2xkZXIKW2VjaG9wcm9wZXJ0aWVzXSBlY2ot
dGVtcC1zcmMtZm9sZGVyPS9vcHQvcHVibGljL2VjbGlwc2UvZWNsaXBzZTROL2J1aWxkL3N1cHBv
cnREaXIvc3JjL3BsdWdpbnMvb3JnLmVjbGlwc2UuamR0LmNvcmUvZWNqLXRlbXAtc3JjLWZvbGRl
cgpbZWNob3Byb3BlcnRpZXNdIGVjbGlwc2UuYXBwbGljYXRpb249b3JnLmVjbGlwc2UuYW50LmNv
cmUuYW50UnVubmVyCltlY2hvcHJvcGVydGllc10gZWNsaXBzZS5idWlsZC5jb25maWdzPS9zaGFy
ZWQvZWNsaXBzZS9lY2xpcHNlNE4vYnVpbGQvc3VwcG9ydERpci9vcmcuZWNsaXBzZS5yZWxlbmcu
ZWNsaXBzZWJ1aWxkZXIvZWNsaXBzZS9idWlsZENvbmZpZ3MKW2VjaG9wcm9wZXJ0aWVzXSBlY2xp
cHNlLmJ1aWxkSWQ9MjAwOTA1MjIxNzEwCltlY2hvcHJvcGVydGllc10gZWNsaXBzZS5jb21tYW5k
cz0tZGF0YVxuL3NoYXJlZC9lY2xpcHNlL2VjbGlwc2U0Ti93b3Jrc3BhY2UtZWNsaXBzZTRcbi1h
cHBsaWNhdGlvblxub3JnLmVjbGlwc2UuYW50LmNvcmUuYW50UnVubmVyXG4tYnVpbGRmaWxlXG4v
c2hhcmVkL2VjbGlwc2UvZWNsaXBzZTROL2J1aWxkL3N1cHBvcnREaXIvb3JnLmVjbGlwc2UucmVs
ZW5nLmVjbGlwc2VidWlsZGVyL2J1aWxkQWxsLnhtbFxuLURidWlsZFR5cGVcPU5cbi1EZWNsaXBz
ZVN0cmVhbVw9NC4zLjBcbi1EZWNsaXBzZVN0cmVhbU1ham9yXD00XG4tRGVjbGlwc2VTdHJlYW1N
aW5vclw9M1xuLURlY2xpcHNlU3RyZWFtU2VydmljZVw9MFxuLURidWlsZGRhdGVcPTIwMTIwNzE4
XG4tRGJ1aWxkdGltZVw9MTYyNFxuLUR0aW1lc3RhbXBcPTIwMTIwNzE4MTYyNFxuLURidWlsZElk
XD1OMjAxMjA3MTgtMTYyNFxuLURidWlsZGlkXD1OMjAxMjA3MTgtMTYyNFxuLURidWlsZExhYmVs
XD1OMjAxMjA3MTgtMTYyNFxuLURiYXNlXD0vc2hhcmVkL2VjbGlwc2UvZWNsaXBzZTROL2J1aWxk
XG4tRG1hcFZlcnNpb25UYWdcPW1hc3RlclxuLURvcmcuZWNsaXBzZS51cGRhdGUuamFycHJvY2Vz
c29yLnBhY2syMDBcPS9zaGFyZWQvY29tbW9uL2pkay0xLjUuMC0yMi54ODZfNjQvYmluXG4tRGVj
bGlwc2UucDIuTUQ1Q2hlY2tcPWZhbHNlXG4tRHNraXAucGVyZm9ybWFuY2UudGVzdHNcPXRydWVc
bi1Ec2tpcC50ZXN0c1w9dHJ1ZVxuLURodWRzb25cPXRydWVcbi1ESjJTRS0xLjVcPS9zaGFyZWQv
Y29tbW9uL2pkay0xLjUuMF8xNi9qcmUvbGliL3J0Lmphclw6L3NoYXJlZC9jb21tb24vamRrLTEu
NS4wXzE2L2pyZS9saWIvanNzZS5qYXJcOi9zaGFyZWQvY29tbW9uL2pkay0xLjUuMF8xNi9qcmUv
bGliL2pjZS5qYXJcbi1ESjJTRS0xLjRcPS9zaGFyZWQvY29tbW9uL2oyc2RrMS40LjJfMTkvanJl
L2xpYi9ydC5qYXJcOi9zaGFyZWQvY29tbW9uL2oyc2RrMS40LjJfMTkvanJlL2xpYi9qc3NlLmph
clw6L3NoYXJlZC9jb21tb24vajJzZGsxLjQuMl8xOS9qcmUvbGliL2pjZS5qYXJcbi1EQ0RDLTEu
MC9Gb3VuZGF0aW9uLTEuMFw9L3NoYXJlZC9jb21tb24vb3JnLmVjbGlwc2Uuc2RrLWZlYXR1cmUy
L2xpYnMvZWUuZm91bmRhdGlvbi0xLjAuamFyXG4tRENEQy0xLjEvRm91bmRhdGlvbi0xLjFcPS9z
aGFyZWQvY29tbW9uL29yZy5lY2xpcHNlLnNkay1mZWF0dXJlMi9saWJzL2VlLmZvdW5kYXRpb24u
amFyXG4tRE9TR2kvTWluaW11bS0xLjBcPS9zaGFyZWQvY29tbW9uL29yZy5lY2xpcHNlLnNkay1m
ZWF0dXJlMi9saWJzL2VlLm1pbmltdW0uamFyXG4tRE9TR2kvTWluaW11bS0xLjFcPS9zaGFyZWQv
Y29tbW9uL29yZy5lY2xpcHNlLnNkay1mZWF0dXJlMi9saWJzL2VlLm1pbmltdW0uamFyXG4tRE9T
R2kvTWluaW11bS0xLjJcPS9zaGFyZWQvY29tbW9uL29yZy5lY2xpcHNlLnNkay1mZWF0dXJlMi9s
aWJzL2VlLm1pbmltdW0tMS4yLjAuamFyXG4tREphdmFTRS0xLjZcPS9zaGFyZWQvY29tbW9uL2pk
azEuNi4wXzI3Lng4Nl82NC9qcmUvbGliL3J0Lmphclw6L3NoYXJlZC9jb21tb24vamRrMS42LjBf
MjcueDg2XzY0L2pyZS9saWIvanNzZS5qYXJcOi9zaGFyZWQvY29tbW9uL2pkazEuNi4wXzI3Lng4
Nl82NC9qcmUvbGliL2pjZS5qYXJcbi1EbG9nRXh0ZW5zaW9uXD0ueG1sXG4tRGphdmFkb2MxNlw9
L3NoYXJlZC9jb21tb24vamRrMS42LjBfMjcueDg2XzY0L2Jpbi9qYXZhZG9jXG4tRGdlbmVyYXRl
RmVhdHVyZVZlcnNpb25TdWZmaXhcPXRydWVcbi1EamF2YTE1aG9tZVw9L3NoYXJlZC9jb21tb24v
amRrLTEuNS4wLTIyLng4Nl82NFxuLUR1cGRhdGVTaXRlXD0vc2hhcmVkL2VjbGlwc2UvZWNsaXBz
ZTROL3NpdGVEaXJURVNUT05MWS91cGRhdGVzXG4tRHBvc3RpbmdEaXJlY3RvcnlcPS9zaGFyZWQv
ZWNsaXBzZS9lY2xpcHNlNE4vc2l0ZURpclRFU1RPTkxZL2VjbGlwc2UvZG93bmxvYWRzL2Ryb3Bz
NFxuLURlcXVpbm94UG9zdGluZ0RpcmVjdG9yeVw9L3NoYXJlZC9lY2xpcHNlL2VjbGlwc2U0Ti9z
aXRlRGlyVEVTVE9OTFkvZXF1aW5veC9kcm9wc1xuCltlY2hvcHJvcGVydGllc10gZWNsaXBzZS5o
b21lPS9vcHQvcHVibGljL2VjbGlwc2UvZWNsaXBzZTROL2J1aWxkL3N1cHBvcnREaXIvb3JnLmVj
bGlwc2UucmVsZW5nLmJhc2VidWlsZGVyCltlY2hvcHJvcGVydGllc10gZWNsaXBzZS5ob21lLmxv
Y2F0aW9uPWZpbGVcOi9vcHQvcHVibGljL2VjbGlwc2UvZWNsaXBzZTROL2J1aWxkL3N1cHBvcnRE
aXIvb3JnLmVjbGlwc2UucmVsZW5nLmJhc2VidWlsZGVyLwpbZWNob3Byb3BlcnRpZXNdIGVjbGlw
c2UucDIuTUQ1Q2hlY2s9ZmFsc2UKW2VjaG9wcm9wZXJ0aWVzXSBlY2xpcHNlLnBkZWJ1aWxkLmhv
bWU9L29wdC9wdWJsaWMvZWNsaXBzZS9lY2xpcHNlNE4vYnVpbGQvc3VwcG9ydERpci9vcmcuZWNs
aXBzZS5yZWxlbmcuYmFzZWJ1aWxkZXIvcGx1Z2lucy9vcmcuZWNsaXBzZS5wZGUuYnVpbGRfMy44
LjAudjIwMTIwMTE5LTE5NTAvLi8KW2VjaG9wcm9wZXJ0aWVzXSBlY2xpcHNlLnBkZWJ1aWxkLnNj
cmlwdHM9L29wdC9wdWJsaWMvZWNsaXBzZS9lY2xpcHNlNE4vYnVpbGQvc3VwcG9ydERpci9vcmcu
ZWNsaXBzZS5yZWxlbmcuYmFzZWJ1aWxkZXIvcGx1Z2lucy9vcmcuZWNsaXBzZS5wZGUuYnVpbGRf
My44LjAudjIwMTIwMTE5LTE5NTAvc2NyaXB0cy8KW2VjaG9wcm9wZXJ0aWVzXSBlY2xpcHNlLnBk
ZWJ1aWxkLnRlbXBsYXRlcz0vb3B0L3B1YmxpYy9lY2xpcHNlL2VjbGlwc2U0Ti9idWlsZC9zdXBw
b3J0RGlyL29yZy5lY2xpcHNlLnJlbGVuZy5iYXNlYnVpbGRlci9wbHVnaW5zL29yZy5lY2xpcHNl
LnBkZS5idWlsZF8zLjguMC52MjAxMjAxMTktMTk1MC90ZW1wbGF0ZXMvCltlY2hvcHJvcGVydGll
c10gZWNsaXBzZS5wcm9kdWN0PW9yZy5lY2xpcHNlLnNkay5pZGUKW2VjaG9wcm9wZXJ0aWVzXSBl
Y2xpcHNlLnJ1bm5pbmc9dHJ1ZQpbZWNob3Byb3BlcnRpZXNdIGVjbGlwc2Uuc3RhcnRUaW1lPTEz
NDI2NDM0NDAzMDUKW2VjaG9wcm9wZXJ0aWVzXSBlY2xpcHNlU3RyZWFtPTQuMy4wCltlY2hvcHJv
cGVydGllc10gZWNsaXBzZVN0cmVhbU1ham9yPTQKW2VjaG9wcm9wZXJ0aWVzXSBlY2xpcHNlU3Ry
ZWFtTWlub3I9MwpbZWNob3Byb3BlcnRpZXNdIGVjbGlwc2VTdHJlYW1TZXJ2aWNlPTAKW2VjaG9w
cm9wZXJ0aWVzXSBlbGVtZW50UGF0aD0vc2hhcmVkL2VjbGlwc2UvZWNsaXBzZTROL2J1aWxkL3N1
cHBvcnREaXIvb3JnLmVjbGlwc2UucmVsZW5nLmVjbGlwc2VidWlsZGVyLy4uL3NyYy9mZWF0dXJl
cy9tYXN0ZXIKW2VjaG9wcm9wZXJ0aWVzXSBlbWZSZXBvVVJMPWh0dHBcOi8vZG93bmxvYWQuZWNs
aXBzZS5vcmcvbW9kZWxpbmcvZW1mL2VtZi91cGRhdGVzLzIuOC9iYXNlL1IyMDEyMDYwNjA3MTcK
W2VjaG9wcm9wZXJ0aWVzXSBlb2Y9ZW9mCltlY2hvcHJvcGVydGllc10gZXF1aW5veC5idWlsZC5j
b25maWdzPS9zaGFyZWQvZWNsaXBzZS9lY2xpcHNlNE4vYnVpbGQvc3VwcG9ydERpci9vcmcuZWNs
aXBzZS5yZWxlbmcuZWNsaXBzZWJ1aWxkZXIvZXF1aW5veC9idWlsZENvbmZpZ3MKW2VjaG9wcm9w
ZXJ0aWVzXSBlcXVpbm94LnVzZS5kcz10cnVlCltlY2hvcHJvcGVydGllc10gZXF1aW5veFBvc3Rp
bmdEaXJlY3Rvcnk9L3NoYXJlZC9lY2xpcHNlL2VjbGlwc2U0Ti9zaXRlRGlyVEVTVE9OTFkvZXF1
aW5veC9kcm9wcwpbZWNob3Byb3BlcnRpZXNdIGZldGNoQ2FjaGVMb2NhdGlvbj0vc2hhcmVkL2Vj
bGlwc2UvZWNsaXBzZTROL2J1aWxkL3N1cHBvcnREaXIvc2NtQ2FjaGUKW2VjaG9wcm9wZXJ0aWVz
XSBmZXRjaFRhZz1DVlNcPUhFQUQsR0lUXD1vcmlnaW4vbWFzdGVyCltlY2hvcHJvcGVydGllc10g
ZmlsZS5lbmNvZGluZz1VVEYtOApbZWNob3Byb3BlcnRpZXNdIGZpbGUuZW5jb2RpbmcucGtnPXN1
bi5pbwpbZWNob3Byb3BlcnRpZXNdIGZpbGUuc2VwYXJhdG9yPS8KW2VjaG9wcm9wZXJ0aWVzXSBm
aWx0ZXJQMkJhc2U9ZmFsc2UKW2VjaG9wcm9wZXJ0aWVzXSBmaWx0ZXJlZERlcGVuZGVuY3lDaGVj
az1mYWxzZQpbZWNob3Byb3BlcnRpZXNdIGZsYXR0ZW5EZXBlbmRlbmNpZXM9dHJ1ZQpbZWNob3By
b3BlcnRpZXNdIGZvcmNlQ29udGV4dFF1YWxpZmllcj1OMjAxMjA3MTgtMTYyNApbZWNob3Byb3Bl
cnRpZXNdIGdlbmVyYXRlQVBJRGVzY3JpcHRpb249dHJ1ZQpbZWNob3Byb3BlcnRpZXNdIGdlbmVy
YXRlRmVhdHVyZVZlcnNpb25TdWZmaXg9dHJ1ZQpbZWNob3Byb3BlcnRpZXNdIGdlbmVyYXRlSm5s
cD1mYWxzZQpbZWNob3Byb3BlcnRpZXNdIGdlbmVyYXRlU291cmNlUmVmZXJlbmNlcz10cnVlCltl
Y2hvcHJvcGVydGllc10gZ2VuZXJhdGVWZXJzaW9uc0xpc3RzPXRydWUKW2VjaG9wcm9wZXJ0aWVz
XSBnZW5lcmljVGFyZ2V0cz0vb3B0L3B1YmxpYy9lY2xpcHNlL2VjbGlwc2U0Ti9idWlsZC9zdXBw
b3J0RGlyL29yZy5lY2xpcHNlLnJlbGVuZy5iYXNlYnVpbGRlci9wbHVnaW5zL29yZy5lY2xpcHNl
LnBkZS5idWlsZF8zLjguMC52MjAxMjAxMTktMTk1MC9zY3JpcHRzL2dlbmVyaWNUYXJnZXRzLnht
bApbZWNob3Byb3BlcnRpZXNdIGdvc2guYXJncz0tLW5vaW50ZXJhY3RpdmUKW2VjaG9wcm9wZXJ0
aWVzXSBncm91cENvbmZpZ3VyYXRpb25zPXRydWUKW2VjaG9wcm9wZXJ0aWVzXSBob3N0PXdlc3Ry
ZWxheS51cy5pYm0uY29tCltlY2hvcHJvcGVydGllc10gaHR0cFVybD1odHRwXDovL2Rvd25sb2Fk
LmVjbGlwc2Uub3JnL2VjbGlwc2UvZG93bmxvYWRzL2Ryb3BzCltlY2hvcHJvcGVydGllc10gaHVk
c29uPXRydWUKW2VjaG9wcm9wZXJ0aWVzXSBpZD1tYXN0ZXIKW2VjaG9wcm9wZXJ0aWVzXSBpbmRp
dmlkdWFsU291cmNlQnVuZGxlcz10cnVlCltlY2hvcHJvcGVydGllc10gamF2YS5hd3QuZ3JhcGhp
Y3NlbnY9c3VuLmF3dC5YMTFHcmFwaGljc0Vudmlyb25tZW50CltlY2hvcHJvcGVydGllc10gamF2
YS5hd3QucHJpbnRlcmpvYj1zdW4ucHJpbnQuUFNQcmludGVySm9iCltlY2hvcHJvcGVydGllc10g
amF2YS5jbGFzcy5wYXRoPS9zaGFyZWQvZWNsaXBzZS9lY2xpcHNlNE4vYnVpbGQvc3VwcG9ydERp
ci9vcmcuZWNsaXBzZS5yZWxlbmcuYmFzZWJ1aWxkZXIvcGx1Z2lucy9vcmcuZWNsaXBzZS5lcXVp
bm94LmxhdW5jaGVyXzEuMy4wLnYyMDExMTEwNy0xNjMxLmphcgpbZWNob3Byb3BlcnRpZXNdIGph
dmEuY2xhc3MudmVyc2lvbj01MC4wCltlY2hvcHJvcGVydGllc10gamF2YS5lbmRvcnNlZC5kaXJz
PS9vcHQvcHVibGljL2NvbW1vbi9zdW4tamRrMS42LjBfMjFfeDY0L2pyZS9saWIvZW5kb3JzZWQK
W2VjaG9wcm9wZXJ0aWVzXSBqYXZhLmV4dC5kaXJzPS9vcHQvcHVibGljL2NvbW1vbi9zdW4tamRr
MS42LjBfMjFfeDY0L2pyZS9saWIvZXh0XDovdXNyL2phdmEvcGFja2FnZXMvbGliL2V4dApbZWNo
b3Byb3BlcnRpZXNdIGphdmEuaG9tZT0vb3B0L3B1YmxpYy9jb21tb24vc3VuLWpkazEuNi4wXzIx
X3g2NC9qcmUKW2VjaG9wcm9wZXJ0aWVzXSBqYXZhLmlvLnRtcGRpcj0vdG1wCltlY2hvcHJvcGVy
dGllc10gamF2YS5saWJyYXJ5LnBhdGg9L29wdC9wdWJsaWMvY29tbW9uL3N1bi1qZGsxLjYuMF8y
MV94NjQvanJlL2xpYi9hbWQ2NC9zZXJ2ZXJcOi9vcHQvcHVibGljL2NvbW1vbi9zdW4tamRrMS42
LjBfMjFfeDY0L2pyZS9saWIvYW1kNjRcOi9vcHQvcHVibGljL2NvbW1vbi9zdW4tamRrMS42LjBf
MjFfeDY0L2pyZS8uLi9saWIvYW1kNjRcOi91c3IvamF2YS9wYWNrYWdlcy9saWIvYW1kNjRcOi91
c3IvbGliNjRcOi9saWI2NFw6L2xpYlw6L3Vzci9saWIKW2VjaG9wcm9wZXJ0aWVzXSBqYXZhLnJ1
bnRpbWUubmFtZT1KYXZhKFRNKSBTRSBSdW50aW1lIEVudmlyb25tZW50CltlY2hvcHJvcGVydGll
c10gamF2YS5ydW50aW1lLnZlcnNpb249MS42LjBfMjEtYjA2CltlY2hvcHJvcGVydGllc10gamF2
YS5zcGVjaWZpY2F0aW9uLm5hbWU9SmF2YSBQbGF0Zm9ybSBBUEkgU3BlY2lmaWNhdGlvbgpbZWNo
b3Byb3BlcnRpZXNdIGphdmEuc3BlY2lmaWNhdGlvbi52ZW5kb3I9U3VuIE1pY3Jvc3lzdGVtcyBJ
bmMuCltlY2hvcHJvcGVydGllc10gamF2YS5zcGVjaWZpY2F0aW9uLnZlcnNpb249MS42CltlY2hv
cHJvcGVydGllc10gamF2YS52ZW5kb3I9U3VuIE1pY3Jvc3lzdGVtcyBJbmMuCltlY2hvcHJvcGVy
dGllc10gamF2YS52ZW5kb3IudXJsPWh0dHBcOi8vamF2YS5zdW4uY29tLwpbZWNob3Byb3BlcnRp
ZXNdIGphdmEudmVuZG9yLnVybC5idWc9aHR0cFw6Ly9qYXZhLnN1bi5jb20vY2dpLWJpbi9idWdy
ZXBvcnQuY2dpCltlY2hvcHJvcGVydGllc10gamF2YS52ZXJzaW9uPTEuNi4wXzIxCltlY2hvcHJv
cGVydGllc10gamF2YS52bS5pbmZvPW1peGVkIG1vZGUKW2VjaG9wcm9wZXJ0aWVzXSBqYXZhLnZt
Lm5hbWU9SmF2YSBIb3RTcG90KFRNKSA2NC1CaXQgU2VydmVyIFZNCltlY2hvcHJvcGVydGllc10g
amF2YS52bS5zcGVjaWZpY2F0aW9uLm5hbWU9SmF2YSBWaXJ0dWFsIE1hY2hpbmUgU3BlY2lmaWNh
dGlvbgpbZWNob3Byb3BlcnRpZXNdIGphdmEudm0uc3BlY2lmaWNhdGlvbi52ZW5kb3I9U3VuIE1p
Y3Jvc3lzdGVtcyBJbmMuCltlY2hvcHJvcGVydGllc10gamF2YS52bS5zcGVjaWZpY2F0aW9uLnZl
cnNpb249MS4wCltlY2hvcHJvcGVydGllc10gamF2YS52bS52ZW5kb3I9U3VuIE1pY3Jvc3lzdGVt
cyBJbmMuCltlY2hvcHJvcGVydGllc10gamF2YS52bS52ZXJzaW9uPTE3LjAtYjE2CltlY2hvcHJv
cGVydGllc10gamF2YTE1aG9tZT0vc2hhcmVkL2NvbW1vbi9qZGstMS41LjAtMjIueDg2XzY0Cltl
Y2hvcHJvcGVydGllc10gamF2YWNEZWJ1Z0luZm89dHJ1ZQpbZWNob3Byb3BlcnRpZXNdIGphdmFj
RmFpbE9uRXJyb3I9ZmFsc2UKW2VjaG9wcm9wZXJ0aWVzXSBqYXZhY1NvdXJjZT0xLjMKW2VjaG9w
cm9wZXJ0aWVzXSBqYXZhY1RhcmdldD0xLjIKW2VjaG9wcm9wZXJ0aWVzXSBqYXZhY1ZlcmJvc2U9
ZmFsc2UKW2VjaG9wcm9wZXJ0aWVzXSBqYXZhZG9jMTY9L3NoYXJlZC9jb21tb24vamRrMS42LjBf
MjcueDg2XzY0L2Jpbi9qYXZhZG9jCltlY2hvcHJvcGVydGllc10gbGFiZWwucHJvcGVydGllcy5l
eGlzdHM9dHJ1ZQpbZWNob3Byb3BlcnRpZXNdIGxpbmUuc2VwYXJhdG9yPVxuCltlY2hvcHJvcGVy
dGllc10gbG9jYWxSZXBvTG9jYXRpb249L3NoYXJlZC9lY2xpcHNlL2VjbGlwc2U0Ti9idWlsZC90
YXJnZXRzL2xvY2FsLXJlcG8tTjIwMTIwNzE4LTE2MjQKW2VjaG9wcm9wZXJ0aWVzXSBsb2NhbGJ1
aWxkZXJEaXI9L3NoYXJlZC9lY2xpcHNlL2VjbGlwc2U0Ti9idWlsZC9zdXBwb3J0RGlyCltlY2hv
cHJvcGVydGllc10gbG9jYWxtaXJyb3I9ZG93bmxvYWQuZWNsaXBzZS5vcmcKW2VjaG9wcm9wZXJ0
aWVzXSBsb2dFeHRlbnNpb249LnhtbApbZWNob3Byb3BlcnRpZXNdIG1hcFByb2plY3RGZXRjaGVk
PXRydWUKW2VjaG9wcm9wZXJ0aWVzXSBtYXBWZXJzaW9uVGFnPW1hc3RlcgpbZWNob3Byb3BlcnRp
ZXNdIG1hcHNDaGVja291dFRhZz1tYXN0ZXIKW2VjaG9wcm9wZXJ0aWVzXSBtYXBzR2l0UmVwbz0v
c2hhcmVkL2VjbGlwc2UvZWNsaXBzZTROL2J1aWxkL3N1cHBvcnREaXIvb3JnLmVjbGlwc2UucmVs
ZW5nLmVjbGlwc2VidWlsZGVyLy4uL3NyYy9jb21tb25yZXBvCltlY2hvcHJvcGVydGllc10gbWFw
c1Byb2plY3Q9L3NoYXJlZC9lY2xpcHNlL2VjbGlwc2U0Ti9idWlsZC9zdXBwb3J0RGlyL29yZy5l
Y2xpcHNlLnJlbGVuZy5lY2xpcHNlYnVpbGRlci8uLi9zcmMvbWFwcy9vcmcuZWNsaXBzZS5yZWxl
bmcKW2VjaG9wcm9wZXJ0aWVzXSBtYXBzUmVwbz1kdW1teWN2c21hcHNSZXBvCltlY2hvcHJvcGVy
dGllc10gbWFwc1Jvb3Q9b3JnLmVjbGlwc2UucmVsZW5nCltlY2hvcHJvcGVydGllc10gbmFtZT0i
RWNsaXBzZSBQcm9qZWN0IFRlc3QgU2l0ZSIKW2VjaG9wcm9wZXJ0aWVzXSBvcmcuZWNsaXBzZS5l
cXVpbm94LnAyLnRlc3RzLmN1cnJlbnQuYnVpbGQucmVwbz1odHRwXDovL2Rvd25sb2FkLmVjbGlw
c2Uub3JnL2VjbGlwc2UvdXBkYXRlcy80LjMtTi1idWlsZHMvTjIwMTIwNzE4LTE2MjQKW2VjaG9w
cm9wZXJ0aWVzXSBvcmcuZWNsaXBzZS5lcXVpbm94LnAyLnRlc3RzLmxhc3QucmVsZWFzZS5idWls
ZC5yZXBvPWh0dHBcOi8vZG93bmxvYWQuZWNsaXBzZS5vcmcvZWNsaXBzZS91cGRhdGVzLzMuNy9S
LTMuNy4yLTIwMTIwMjA4MDgwMApbZWNob3Byb3BlcnRpZXNdIG9yZy5lY2xpcHNlLnVwZGF0ZS5q
YXJwcm9jZXNzb3IucGFjazIwMD0vc2hhcmVkL2NvbW1vbi9qZGstMS41LjAtMjIueDg2XzY0L2Jp
bgpbZWNob3Byb3BlcnRpZXNdIG9yZy5vc2dpLmZyYW1ld29yay5leGVjdXRpb25lbnZpcm9ubWVu
dD1PU0dpL01pbmltdW0tMS4wLE9TR2kvTWluaW11bS0xLjEsT1NHaS9NaW5pbXVtLTEuMixKUkUt
MS4xLEoyU0UtMS4yLEoyU0UtMS4zLEoyU0UtMS40LEoyU0UtMS41LEphdmFTRS0xLjYKW2VjaG9w
cm9wZXJ0aWVzXSBvcmcub3NnaS5mcmFtZXdvcmsubGFuZ3VhZ2U9ZW4KW2VjaG9wcm9wZXJ0aWVz
XSBvcmcub3NnaS5mcmFtZXdvcmsub3MubmFtZT1MaW51eApbZWNob3Byb3BlcnRpZXNdIG9yZy5v
c2dpLmZyYW1ld29yay5vcy52ZXJzaW9uPTIuNi4zMi41NC0wCltlY2hvcHJvcGVydGllc10gb3Jn
Lm9zZ2kuZnJhbWV3b3JrLnByb2Nlc3Nvcj14ODYtNjQKW2VjaG9wcm9wZXJ0aWVzXSBvcmcub3Nn
aS5mcmFtZXdvcmsuc3lzdGVtLmNhcGFiaWxpdGllcz1vc2dpLmVlOyBvc2dpLmVlXD0iT1NHaS9N
aW5pbXVtIjsgdmVyc2lvblw6TGlzdDxWZXJzaW9uPlw9IjEuMCwgMS4xLCAxLjIiLG9zZ2kuZWU7
IG9zZ2kuZWVcPSJKYXZhU0UiOyB2ZXJzaW9uXDpMaXN0PFZlcnNpb24+XD0iMS4wLCAxLjEsIDEu
MiwgMS4zLCAxLjQsIDEuNSwgMS42IgpbZWNob3Byb3BlcnRpZXNdIG9yZy5vc2dpLmZyYW1ld29y
ay5zeXN0ZW0ucGFja2FnZXM9amF2YXguYWNjZXNzaWJpbGl0eSxqYXZheC5hY3RpdmF0aW9uLGph
dmF4LmFjdGl2aXR5LGphdmF4LmFubm90YXRpb24samF2YXguYW5ub3RhdGlvbi5wcm9jZXNzaW5n
LGphdmF4LmNyeXB0byxqYXZheC5jcnlwdG8uaW50ZXJmYWNlcyxqYXZheC5jcnlwdG8uc3BlYyxq
YXZheC5pbWFnZWlvLGphdmF4LmltYWdlaW8uZXZlbnQsamF2YXguaW1hZ2Vpby5tZXRhZGF0YSxq
YXZheC5pbWFnZWlvLnBsdWdpbnMuYm1wLGphdmF4LmltYWdlaW8ucGx1Z2lucy5qcGVnLGphdmF4
LmltYWdlaW8uc3BpLGphdmF4LmltYWdlaW8uc3RyZWFtLGphdmF4Lmp3cyxqYXZheC5qd3Muc29h
cCxqYXZheC5sYW5nLm1vZGVsLGphdmF4LmxhbmcubW9kZWwuZWxlbWVudCxqYXZheC5sYW5nLm1v
ZGVsLnR5cGUsamF2YXgubGFuZy5tb2RlbC51dGlsLGphdmF4Lm1hbmFnZW1lbnQsamF2YXgubWFu
YWdlbWVudC5sb2FkaW5nLGphdmF4Lm1hbmFnZW1lbnQubW9kZWxtYmVhbixqYXZheC5tYW5hZ2Vt
ZW50Lm1vbml0b3IsamF2YXgubWFuYWdlbWVudC5vcGVubWJlYW4samF2YXgubWFuYWdlbWVudC5y
ZWxhdGlvbixqYXZheC5tYW5hZ2VtZW50LnJlbW90ZSxqYXZheC5tYW5hZ2VtZW50LnJlbW90ZS5y
bWksamF2YXgubWFuYWdlbWVudC50aW1lcixqYXZheC5uYW1pbmcsamF2YXgubmFtaW5nLmRpcmVj
dG9yeSxqYXZheC5uYW1pbmcuZXZlbnQsamF2YXgubmFtaW5nLmxkYXAsamF2YXgubmFtaW5nLnNw
aSxqYXZheC5uZXQsamF2YXgubmV0LnNzbCxqYXZheC5wcmludCxqYXZheC5wcmludC5hdHRyaWJ1
dGUsamF2YXgucHJpbnQuYXR0cmlidXRlLnN0YW5kYXJkLGphdmF4LnByaW50LmV2ZW50LGphdmF4
LnJtaSxqYXZheC5ybWkuQ09SQkEsamF2YXgucm1pLnNzbCxqYXZheC5zY3JpcHQsamF2YXguc2Vj
dXJpdHkuYXV0aCxqYXZheC5zZWN1cml0eS5hdXRoLmNhbGxiYWNrLGphdmF4LnNlY3VyaXR5LmF1
dGgua2VyYmVyb3MsamF2YXguc2VjdXJpdHkuYXV0aC5sb2dpbixqYXZheC5zZWN1cml0eS5hdXRo
LnNwaSxqYXZheC5zZWN1cml0eS5hdXRoLng1MDAsamF2YXguc2VjdXJpdHkuY2VydCxqYXZheC5z
ZWN1cml0eS5zYXNsLGphdmF4LnNvdW5kLm1pZGksamF2YXguc291bmQubWlkaS5zcGksamF2YXgu
c291bmQuc2FtcGxlZCxqYXZheC5zb3VuZC5zYW1wbGVkLnNwaSxqYXZheC5zcWwsamF2YXguc3Fs
LnJvd3NldCxqYXZheC5zcWwucm93c2V0LnNlcmlhbCxqYXZheC5zcWwucm93c2V0LnNwaSxqYXZh
eC5zd2luZyxqYXZheC5zd2luZy5ib3JkZXIsamF2YXguc3dpbmcuY29sb3JjaG9vc2VyLGphdmF4
LnN3aW5nLmV2ZW50LGphdmF4LnN3aW5nLmZpbGVjaG9vc2VyLGphdmF4LnN3aW5nLnBsYWYsamF2
YXguc3dpbmcucGxhZi5iYXNpYyxqYXZheC5zd2luZy5wbGFmLm1ldGFsLGphdmF4LnN3aW5nLnBs
YWYubXVsdGksamF2YXguc3dpbmcucGxhZi5zeW50aCxqYXZheC5zd2luZy50YWJsZSxqYXZheC5z
d2luZy50ZXh0LGphdmF4LnN3aW5nLnRleHQuaHRtbCxqYXZheC5zd2luZy50ZXh0Lmh0bWwucGFy
c2VyLGphdmF4LnN3aW5nLnRleHQucnRmLGphdmF4LnN3aW5nLnRyZWUsamF2YXguc3dpbmcudW5k
byxqYXZheC50b29scyxqYXZheC50cmFuc2FjdGlvbixqYXZheC50cmFuc2FjdGlvbi54YSxqYXZh
eC54bWwsamF2YXgueG1sLmJpbmQsamF2YXgueG1sLmJpbmQuYW5ub3RhdGlvbixqYXZheC54bWwu
YmluZC5hbm5vdGF0aW9uLmFkYXB0ZXJzLGphdmF4LnhtbC5iaW5kLmF0dGFjaG1lbnQsamF2YXgu
eG1sLmJpbmQuaGVscGVycyxqYXZheC54bWwuYmluZC51dGlsLGphdmF4LnhtbC5jcnlwdG8samF2
YXgueG1sLmNyeXB0by5kb20samF2YXgueG1sLmNyeXB0by5kc2lnLGphdmF4LnhtbC5jcnlwdG8u
ZHNpZy5kb20samF2YXgueG1sLmNyeXB0by5kc2lnLmtleWluZm8samF2YXgueG1sLmNyeXB0by5k
c2lnLnNwZWMsamF2YXgueG1sLmRhdGF0eXBlLGphdmF4LnhtbC5uYW1lc3BhY2UsamF2YXgueG1s
LnBhcnNlcnMsamF2YXgueG1sLnNvYXAsamF2YXgueG1sLnN0cmVhbSxqYXZheC54bWwuc3RyZWFt
LmV2ZW50cyxqYXZheC54bWwuc3RyZWFtLnV0aWwsamF2YXgueG1sLnRyYW5zZm9ybSxqYXZheC54
bWwudHJhbnNmb3JtLmRvbSxqYXZheC54bWwudHJhbnNmb3JtLnNheCxqYXZheC54bWwudHJhbnNm
b3JtLnN0YXgsamF2YXgueG1sLnRyYW5zZm9ybS5zdHJlYW0samF2YXgueG1sLnZhbGlkYXRpb24s
amF2YXgueG1sLndzLGphdmF4LnhtbC53cy5oYW5kbGVyLGphdmF4LnhtbC53cy5oYW5kbGVyLnNv
YXAsamF2YXgueG1sLndzLmh0dHAsamF2YXgueG1sLndzLnNvYXAsamF2YXgueG1sLndzLnNwaSxq
YXZheC54bWwud3Mud3NhZGRyZXNzaW5nLGphdmF4LnhtbC54cGF0aCxvcmcuaWV0Zi5qZ3NzLG9y
Zy5vbWcuQ09SQkEsb3JnLm9tZy5DT1JCQV8yXzMsb3JnLm9tZy5DT1JCQV8yXzMucG9ydGFibGUs
b3JnLm9tZy5DT1JCQS5EeW5BbnlQYWNrYWdlLG9yZy5vbWcuQ09SQkEuT1JCUGFja2FnZSxvcmcu
b21nLkNPUkJBLnBvcnRhYmxlLG9yZy5vbWcuQ09SQkEuVHlwZUNvZGVQYWNrYWdlLG9yZy5vbWcu
Q29zTmFtaW5nLG9yZy5vbWcuQ29zTmFtaW5nLk5hbWluZ0NvbnRleHRFeHRQYWNrYWdlLG9yZy5v
bWcuQ29zTmFtaW5nLk5hbWluZ0NvbnRleHRQYWNrYWdlLG9yZy5vbWcuRHluYW1pYyxvcmcub21n
LkR5bmFtaWNBbnksb3JnLm9tZy5EeW5hbWljQW55LkR5bkFueUZhY3RvcnlQYWNrYWdlLG9yZy5v
bWcuRHluYW1pY0FueS5EeW5BbnlQYWNrYWdlLG9yZy5vbWcuSU9QLG9yZy5vbWcuSU9QLkNvZGVj
RmFjdG9yeVBhY2thZ2Usb3JnLm9tZy5JT1AuQ29kZWNQYWNrYWdlLG9yZy5vbWcuTWVzc2FnaW5n
LG9yZy5vbWcuUG9ydGFibGVJbnRlcmNlcHRvcixvcmcub21nLlBvcnRhYmxlSW50ZXJjZXB0b3Iu
T1JCSW5pdEluZm9QYWNrYWdlLG9yZy5vbWcuUG9ydGFibGVTZXJ2ZXIsb3JnLm9tZy5Qb3J0YWJs
ZVNlcnZlci5DdXJyZW50UGFja2FnZSxvcmcub21nLlBvcnRhYmxlU2VydmVyLlBPQU1hbmFnZXJQ
YWNrYWdlLG9yZy5vbWcuUG9ydGFibGVTZXJ2ZXIuUE9BUGFja2FnZSxvcmcub21nLlBvcnRhYmxl
U2VydmVyLnBvcnRhYmxlLG9yZy5vbWcuUG9ydGFibGVTZXJ2ZXIuU2VydmFudExvY2F0b3JQYWNr
YWdlLG9yZy5vbWcuU2VuZGluZ0NvbnRleHQsb3JnLm9tZy5zdHViLmphdmEucm1pLG9yZy53M2Mu
ZG9tLG9yZy53M2MuZG9tLmJvb3RzdHJhcCxvcmcudzNjLmRvbS5jc3Msb3JnLnczYy5kb20uZXZl
bnRzLG9yZy53M2MuZG9tLmh0bWwsb3JnLnczYy5kb20ubHMsb3JnLnczYy5kb20ucmFuZ2VzLG9y
Zy53M2MuZG9tLnN0eWxlc2hlZXRzLG9yZy53M2MuZG9tLnRyYXZlcnNhbCxvcmcudzNjLmRvbS52
aWV3cyxvcmcudzNjLmRvbS54cGF0aCxvcmcueG1sLnNheCxvcmcueG1sLnNheC5leHQsb3JnLnht
bC5zYXguaGVscGVycwpbZWNob3Byb3BlcnRpZXNdIG9yZy5vc2dpLmZyYW1ld29yay51dWlkPWQw
NGVlZjcwLTE3ZDEtMDAxMS0xYjlmLWU5ZTM4MmUxNDMyZQpbZWNob3Byb3BlcnRpZXNdIG9yZy5v
c2dpLmZyYW1ld29yay52ZW5kb3I9RWNsaXBzZQpbZWNob3Byb3BlcnRpZXNdIG9yZy5vc2dpLmZy
YW1ld29yay52ZXJzaW9uPTEuNy4wCltlY2hvcHJvcGVydGllc10gb3JnLm9zZ2kuc3VwcG9ydHMu
ZnJhbWV3b3JrLmV4dGVuc2lvbj10cnVlCltlY2hvcHJvcGVydGllc10gb3JnLm9zZ2kuc3VwcG9y
dHMuZnJhbWV3b3JrLmZyYWdtZW50PXRydWUKW2VjaG9wcm9wZXJ0aWVzXSBvcmcub3NnaS5zdXBw
b3J0cy5mcmFtZXdvcmsucmVxdWlyZWJ1bmRsZT10cnVlCltlY2hvcHJvcGVydGllc10gb3MuYXJj
aD1hbWQ2NApbZWNob3Byb3BlcnRpZXNdIG9zLm5hbWU9TGludXgKW2VjaG9wcm9wZXJ0aWVzXSBv
cy52ZXJzaW9uPTIuNi4zMi41NC0wLjMtZGVmYXVsdApbZWNob3Byb3BlcnRpZXNdIG9zZ2kuYXJj
aD14ODZfNjQKW2VjaG9wcm9wZXJ0aWVzXSBvc2dpLmJ1bmRsZXM9b3JnLmVjbGlwc2UuZXF1aW5v
eC5jb21tb25AMVw6c3RhcnQsb3JnLmVjbGlwc2UuZXF1aW5veC5kc0AzXDpzdGFydCwgb3JnLmVj
bGlwc2UudXBkYXRlLmNvbmZpZ3VyYXRvckAyXDpzdGFydCxvcmcuZWNsaXBzZS5jb3JlLnJ1bnRp
bWVAc3RhcnQKW2VjaG9wcm9wZXJ0aWVzXSBvc2dpLmJ1bmRsZXN0b3JlPS9vcHQvcHVibGljL2Vj
bGlwc2UvZWNsaXBzZTROL2J1aWxkL3N1cHBvcnREaXIvb3JnLmVjbGlwc2UucmVsZW5nLmJhc2Vi
dWlsZGVyL2NvbmZpZ3VyYXRpb24vb3JnLmVjbGlwc2Uub3NnaS9idW5kbGVzCltlY2hvcHJvcGVy
dGllc10gb3NnaS5jb25maWd1cmF0aW9uLmFyZWE9ZmlsZVw6L29wdC9wdWJsaWMvZWNsaXBzZS9l
Y2xpcHNlNE4vYnVpbGQvc3VwcG9ydERpci9vcmcuZWNsaXBzZS5yZWxlbmcuYmFzZWJ1aWxkZXIv
Y29uZmlndXJhdGlvbi8KW2VjaG9wcm9wZXJ0aWVzXSBvc2dpLmZyYW1ld29yaz1maWxlXDovb3B0
L3B1YmxpYy9lY2xpcHNlL2VjbGlwc2U0Ti9idWlsZC9zdXBwb3J0RGlyL29yZy5lY2xpcHNlLnJl
bGVuZy5iYXNlYnVpbGRlci9wbHVnaW5zL29yZy5lY2xpcHNlLm9zZ2lfMy44LjAudjIwMTIwMTIz
LTE0MTkuamFyCltlY2hvcHJvcGVydGllc10gb3NnaS5mcmFtZXdvcmsuc2hhcGU9amFyCltlY2hv
cHJvcGVydGllc10gb3NnaS5mcmFtZXdvcmsudmVyc2lvbj0zLjguMC52MjAxMjAxMjMtMTQxOQpb
ZWNob3Byb3BlcnRpZXNdIG9zZ2kuaW5zdGFsbC5hcmVhPWZpbGVcOi9vcHQvcHVibGljL2VjbGlw
c2UvZWNsaXBzZTROL2J1aWxkL3N1cHBvcnREaXIvb3JnLmVjbGlwc2UucmVsZW5nLmJhc2VidWls
ZGVyLwpbZWNob3Byb3BlcnRpZXNdIG9zZ2kuaW5zdGFuY2UuYXJlYT1maWxlXDovb3B0L3B1Ymxp
Yy9lY2xpcHNlL2VjbGlwc2U0Ti93b3Jrc3BhY2UtZWNsaXBzZTQvCltlY2hvcHJvcGVydGllc10g
b3NnaS5pbnN0YW5jZS5hcmVhLmRlZmF1bHQ9ZmlsZVw6L29wdC9idWlsZGhvbWVzL2U0QnVpbGQv
d29ya3NwYWNlLwpbZWNob3Byb3BlcnRpZXNdIG9zZ2kubG9nZmlsZT0vb3B0L3B1YmxpYy9lY2xp
cHNlL2VjbGlwc2U0Ti93b3Jrc3BhY2UtZWNsaXBzZTQvLm1ldGFkYXRhLy5sb2cKW2VjaG9wcm9w
ZXJ0aWVzXSBvc2dpLm1hbmlmZXN0LmNhY2hlPS9vcHQvcHVibGljL2VjbGlwc2UvZWNsaXBzZTRO
L2J1aWxkL3N1cHBvcnREaXIvb3JnLmVjbGlwc2UucmVsZW5nLmJhc2VidWlsZGVyL2NvbmZpZ3Vy
YXRpb24vb3JnLmVjbGlwc2Uub3NnaS9tYW5pZmVzdHMKW2VjaG9wcm9wZXJ0aWVzXSBvc2dpLm5s
PWVuX1VTCltlY2hvcHJvcGVydGllc10gb3NnaS5vcz1saW51eApbZWNob3Byb3BlcnRpZXNdIG9z
Z2kuc3BsYXNoUGF0aD1wbGF0Zm9ybVw6L2Jhc2UvcGx1Z2lucy9vcmcuZWNsaXBzZS5wbGF0Zm9y
bQpbZWNob3Byb3BlcnRpZXNdIG9zZ2kuc3lzcGF0aD0vb3B0L3B1YmxpYy9lY2xpcHNlL2VjbGlw
c2U0Ti9idWlsZC9zdXBwb3J0RGlyL29yZy5lY2xpcHNlLnJlbGVuZy5iYXNlYnVpbGRlci9wbHVn
aW5zCltlY2hvcHJvcGVydGllc10gb3NnaS50cmFjZWZpbGU9L29wdC9wdWJsaWMvZWNsaXBzZS9l
Y2xpcHNlNE4vd29ya3NwYWNlLWVjbGlwc2U0Ly5tZXRhZGF0YS90cmFjZS5sb2cKW2VjaG9wcm9w
ZXJ0aWVzXSBvc2dpLndzPWd0awpbZWNob3Byb3BlcnRpZXNdIG91dHB1dFVwZGF0ZUphcnM9dHJ1
ZQpbZWNob3Byb3BlcnRpZXNdIHAyLmJ1aWxkLnJlcG89ZmlsZVw6L3NoYXJlZC9lY2xpcHNlL2Vj
bGlwc2U0Ti9idWlsZC9zdXBwb3J0RGlyL29yZy5lY2xpcHNlLnJlbGVuZy5lY2xpcHNlYnVpbGRl
ci8uLi9zcmMvYnVpbGRSZXBvCltlY2hvcHJvcGVydGllc10gcDIuY29tcHJlc3M9dHJ1ZQpbZWNo
b3Byb3BlcnRpZXNdIHAyLmNvbnRleHQucmVwb3M9ZmlsZVw6L3NoYXJlZC9lY2xpcHNlL2VjbGlw
c2U0Ti9idWlsZC90YXJnZXRzL2xvY2FsLXJlcG8tTjIwMTIwNzE4LTE2MjQKW2VjaG9wcm9wZXJ0
aWVzXSBwMi5nYXRoZXJpbmc9dHJ1ZQpbZWNob3Byb3BlcnRpZXNdIHAyLnB1Ymxpc2gucGFydHM9
dHJ1ZQpbZWNob3Byb3BlcnRpZXNdIHAyLnB1Ymxpc2hvbmVycm9yPXRydWUKW2VjaG9wcm9wZXJ0
aWVzXSBwMi5yZXBvLm5hbWU9IkVjbGlwc2UgUHJvamVjdCBUZXN0IFNpdGUiCltlY2hvcHJvcGVy
dGllc10gcDJSZXBvUGF0aD0vZWNsaXBzZS91cGRhdGVzLzQuMy1OLWJ1aWxkcwpbZWNob3Byb3Bl
cnRpZXNdIHAyUmVwb1VSTD1odHRwXDovL2Rvd25sb2FkLmVjbGlwc2Uub3JnL2VjbGlwc2UvdXBk
YXRlcy80LjMtTi1idWlsZHMKW2VjaG9wcm9wZXJ0aWVzXSBwMnJlcG9JPWh0dHBcOi8vZG93bmxv
YWQuZWNsaXBzZS5vcmcvZWNsaXBzZS91cGRhdGVzLzQuMy1JLWJ1aWxkcwpbZWNob3Byb3BlcnRp
ZXNdIHAycmVwb0lQYXRoPS9lY2xpcHNlL3VwZGF0ZXMvNC4zLUktYnVpbGRzCltlY2hvcHJvcGVy
dGllc10gcDJyZXBvTT1odHRwXDovL2Rvd25sb2FkLmVjbGlwc2Uub3JnL2VjbGlwc2UvdXBkYXRl
cy80LjMueApbZWNob3Byb3BlcnRpZXNdIHAycmVwb01QYXRoPS9lY2xpcHNlL3VwZGF0ZXMvNC4z
LngKW2VjaG9wcm9wZXJ0aWVzXSBwMnJlcG9OPWh0dHBcOi8vZG93bmxvYWQuZWNsaXBzZS5vcmcv
ZWNsaXBzZS91cGRhdGVzLzQuMy1OLWJ1aWxkcwpbZWNob3Byb3BlcnRpZXNdIHAycmVwb05QYXRo
PS9lY2xpcHNlL3VwZGF0ZXMvNC4zLU4tYnVpbGRzCltlY2hvcHJvcGVydGllc10gcDJyZXBvWFBh
dGg9L2VjbGlwc2UvdXBkYXRlcy80LjMtWC1idWlsZHMKW2VjaG9wcm9wZXJ0aWVzXSBwMnJlcG9w
cmV2aW91c1I9aHR0cFw6Ly9kb3dubG9hZC5lY2xpcHNlLm9yZy9lY2xpcHNlL3VwZGF0ZXMvMy43
L1ItMy43LjItMjAxMjAyMDgwODAwCltlY2hvcHJvcGVydGllc10gcGFyYWxsZWxDb21waWxhdGlv
bj10cnVlCltlY2hvcHJvcGVydGllc10gcGF0aC5zZXBhcmF0b3I9XDoKW2VjaG9wcm9wZXJ0aWVz
XSBwbHVnaW4uZGVzdGluYXRpb249L29wdC9wdWJsaWMvZWNsaXBzZS9lY2xpcHNlNE4vYnVpbGQv
c3VwcG9ydERpci9zcmMvcGx1Z2lucy9vcmcuZWNsaXBzZS5qZHQuY29yZQpbZWNob3Byb3BlcnRp
ZXNdIHBsdWdpblBhdGg9L3NoYXJlZC9lY2xpcHNlL2VjbGlwc2U0Ti9idWlsZC90YXJnZXRzL2xv
Y2FsLXJlcG8tTjIwMTIwNzE4LTE2MjQKW2VjaG9wcm9wZXJ0aWVzXSBwbHVnaW5UZW1wPS9vcHQv
cHVibGljL2VjbGlwc2UvZWNsaXBzZTROL2J1aWxkL3N1cHBvcnREaXIvc3JjL3BsdWdpbnMvb3Jn
LmVjbGlwc2UuamR0LmNvcmUKW2VjaG9wcm9wZXJ0aWVzXSBwb3N0aW5nRGlyZWN0b3J5PS9zaGFy
ZWQvZWNsaXBzZS9lY2xpcHNlNE4vc2l0ZURpclRFU1RPTkxZL2VjbGlwc2UvZG93bmxvYWRzL2Ry
b3BzNApbZWNob3Byb3BlcnRpZXNdIHByZXZpb3VzUGxhdGZvcm1aaXBzPS9zaGFyZWQvZWNsaXBz
ZS9lY2xpcHNlNE4vYnVpbGQvc3VwcG9ydERpci9vcmcuZWNsaXBzZS5yZWxlbmcuZWNsaXBzZWJ1
aWxkZXIvLi4vc3JjL3ByZXZpb3VzUGxhdGZvcm1aaXBzCltlY2hvcHJvcGVydGllc10gcXVhbGlm
aWVyPXF1YWxpZmllcgpbZWNob3Byb3BlcnRpZXNdIHJlcG89L3NoYXJlZC9lY2xpcHNlL2VjbGlw
c2U0Ti9idWlsZC9zdXBwb3J0RGlyL29yZy5lY2xpcHNlLnJlbGVuZy5lY2xpcHNlYnVpbGRlci8u
Li9zcmMvcmVwbwpbZWNob3Byb3BlcnRpZXNdIHJlcG9UYXJnZXRJZD1OMjAxMjA3MTgtMTYyNApb
ZWNob3Byb3BlcnRpZXNdIHJlcG9zb3VyY2U9L3NoYXJlZC9lY2xpcHNlL2VjbGlwc2U0Ti9idWls
ZC9zdXBwb3J0RGlyL29yZy5lY2xpcHNlLnJlbGVuZy5lY2xpcHNlYnVpbGRlci8uLi9zcmMvcmVw
b3NvdXJjZQpbZWNob3Byb3BlcnRpZXNdIHJlc3VsdHNSZXBvTG9jYXRpb249L3NoYXJlZC9lY2xp
cHNlL2VjbGlwc2U0Ti9zaXRlRGlyVEVTVE9OTFkvdXBkYXRlcy80LjMtTi1idWlsZHMKW2VjaG9w
cm9wZXJ0aWVzXSBydW5QYWNrYWdlcj10cnVlCltlY2hvcHJvcGVydGllc10gc2RrSGVscGVyPS9z
aGFyZWQvZWNsaXBzZS9lY2xpcHNlNE4vYnVpbGQvc3VwcG9ydERpci9vcmcuZWNsaXBzZS5yZWxl
bmcuZWNsaXBzZWJ1aWxkZXIvZWNsaXBzZS9idWlsZENvbmZpZ3MvZWNsaXBzZS9oZWxwZXIueG1s
CltlY2hvcHJvcGVydGllc10gc2VuZGVyPWttb2lyQGNhLmlibS5jb20KW2VjaG9wcm9wZXJ0aWVz
XSBzaWduSmFycz1mYWxzZQpbZWNob3Byb3BlcnRpZXNdIHNraXAucGVyZm9ybWFuY2UudGVzdHM9
dHJ1ZQpbZWNob3Byb3BlcnRpZXNdIHNraXAudGVzdHM9dHJ1ZQpbZWNob3Byb3BlcnRpZXNdIHNr
aXBNaXJyb3Jpbmc9dHJ1ZQpbZWNob3Byb3BlcnRpZXNdIHN0cmVhbVNwZWNpZmljSW5pdENvbXBs
ZXRlPXRydWUKW2VjaG9wcm9wZXJ0aWVzXSBzdHJlYW1TcGVjaWZpY1Byb3BlcnRpZXNUaXRsZT0i
UHJvcGVydGllcyBmb3IgNC4zLjAgYnVpbGRzIGFuZCB0ZXN0cyIKW2VjaG9wcm9wZXJ0aWVzXSBz
dW4uYXJjaC5kYXRhLm1vZGVsPTY0CltlY2hvcHJvcGVydGllc10gc3VuLmJvb3QuY2xhc3MucGF0
aD0vb3B0L3B1YmxpYy9jb21tb24vc3VuLWpkazEuNi4wXzIxX3g2NC9qcmUvbGliL3Jlc291cmNl
cy5qYXJcOi9vcHQvcHVibGljL2NvbW1vbi9zdW4tamRrMS42LjBfMjFfeDY0L2pyZS9saWIvcnQu
amFyXDovb3B0L3B1YmxpYy9jb21tb24vc3VuLWpkazEuNi4wXzIxX3g2NC9qcmUvbGliL3N1bnJz
YXNpZ24uamFyXDovb3B0L3B1YmxpYy9jb21tb24vc3VuLWpkazEuNi4wXzIxX3g2NC9qcmUvbGli
L2pzc2UuamFyXDovb3B0L3B1YmxpYy9jb21tb24vc3VuLWpkazEuNi4wXzIxX3g2NC9qcmUvbGli
L2pjZS5qYXJcOi9vcHQvcHVibGljL2NvbW1vbi9zdW4tamRrMS42LjBfMjFfeDY0L2pyZS9saWIv
Y2hhcnNldHMuamFyXDovb3B0L3B1YmxpYy9jb21tb24vc3VuLWpkazEuNi4wXzIxX3g2NC9qcmUv
Y2xhc3NlcwpbZWNob3Byb3BlcnRpZXNdIHN1bi5ib290LmxpYnJhcnkucGF0aD0vb3B0L3B1Ymxp
Yy9jb21tb24vc3VuLWpkazEuNi4wXzIxX3g2NC9qcmUvbGliL2FtZDY0CltlY2hvcHJvcGVydGll
c10gc3VuLmNwdS5lbmRpYW49bGl0dGxlCltlY2hvcHJvcGVydGllc10gc3VuLmNwdS5pc2FsaXN0
PQpbZWNob3Byb3BlcnRpZXNdIHN1bi5pby51bmljb2RlLmVuY29kaW5nPVVuaWNvZGVMaXR0bGUK
W2VjaG9wcm9wZXJ0aWVzXSBzdW4uamF2YS5sYXVuY2hlcj1TVU5fU1RBTkRBUkQKW2VjaG9wcm9w
ZXJ0aWVzXSBzdW4uam51LmVuY29kaW5nPVVURi04CltlY2hvcHJvcGVydGllc10gc3VuLm1hbmFn
ZW1lbnQuY29tcGlsZXI9SG90U3BvdCA2NC1CaXQgU2VydmVyIENvbXBpbGVyCltlY2hvcHJvcGVy
dGllc10gc3VuLm9zLnBhdGNoLmxldmVsPXVua25vd24KW2VjaG9wcm9wZXJ0aWVzXSB0YXJhcmdz
PS0tb3duZXJcPTAgLS1ncm91cFw9MCAKW2VjaG9wcm9wZXJ0aWVzXSB0YXJnZXQ9cHJvY2Vzc0Vs
ZW1lbnQKW2VjaG9wcm9wZXJ0aWVzXSB0YXJnZXREaXI9L3NoYXJlZC9lY2xpcHNlL2VjbGlwc2U0
Ti9idWlsZC90YXJnZXRzCltlY2hvcHJvcGVydGllc10gdGVtcC5mb2xkZXI9L29wdC9wdWJsaWMv
ZWNsaXBzZS9lY2xpcHNlNE4vYnVpbGQvc3VwcG9ydERpci9zcmMvcGx1Z2lucy9vcmcuZWNsaXBz
ZS5qZHQuY29yZS90ZW1wLmZvbGRlcgpbZWNob3Byb3BlcnRpZXNdIHRpbWVzdGFtcD0yMDEyMDcx
ODE2MjQKW2VjaG9wcm9wZXJ0aWVzXSB0cmFuc2Zvcm1lZFJlcG9Mb2NhdGlvbj0vc2hhcmVkL2Vj
bGlwc2UvZWNsaXBzZTROL2J1aWxkL3N1cHBvcnREaXIvb3JnLmVjbGlwc2UucmVsZW5nLmVjbGlw
c2VidWlsZGVyLy4uL3NyYwpbZWNob3Byb3BlcnRpZXNdIHR5cGU9ZmVhdHVyZQpbZWNob3Byb3Bl
cnRpZXNdIHVuemlwQXJncz0tcXEKW2VjaG9wcm9wZXJ0aWVzXSB1cGRhdGVTaXRlPS9zaGFyZWQv
ZWNsaXBzZS9lY2xpcHNlNE4vc2l0ZURpclRFU1RPTkxZL3VwZGF0ZXMKW2VjaG9wcm9wZXJ0aWVz
XSB1c2VyLmNvdW50cnk9VVMKW2VjaG9wcm9wZXJ0aWVzXSB1c2VyLmRpcj0vb3B0L3B1YmxpYy9l
Y2xpcHNlL2VjbGlwc2U0Ti9idWlsZC9zdXBwb3J0RGlyCltlY2hvcHJvcGVydGllc10gdXNlci5o
b21lPS9vcHQvYnVpbGRob21lcy9lNEJ1aWxkCltlY2hvcHJvcGVydGllc10gdXNlci5sYW5ndWFn
ZT1lbgpbZWNob3Byb3BlcnRpZXNdIHVzZXIubmFtZT1lNEJ1aWxkCltlY2hvcHJvcGVydGllc10g
dXNlci50aW1lem9uZT1BbWVyaWNhL01vbnRyZWFsCltlY2hvcHJvcGVydGllc10gemlwYXJncz0t
eSAtcXEKICAgICBbZWNob10gVVBEQVRFIGVjai1xdWFsaWZpZXIuamFyCiAgICAgW2NvcHldIENv
cHlpbmcgMSBmaWxlIHRvIC9vcHQvcHVibGljL2VjbGlwc2UvZWNsaXBzZTROL2J1aWxkL3N1cHBv
cnREaXIvc3JjL3BsdWdpbnMvb3JnLmVjbGlwc2UuamR0LmNvcmUvZWNqLXRlbXAtZm9sZGVyCiAg
ICAgIFt6aXBdIEJ1aWxkaW5nIHppcDogL3NoYXJlZC9lY2xpcHNlL2VjbGlwc2U0Ti9zaXRlRGly
VEVTVE9OTFkvZWNsaXBzZS9kb3dubG9hZHMvZHJvcHM0L04yMDEyMDcxOC0xNjI0L2Vjai1xdWFs
aWZpZXIuamFyCiAgICAgW2VjaG9dIFVQREFURSBlY2pzcmMtcXVhbGlmaWVyLmphcgogICAgIFtj
b3B5XSBDb3B5aW5nIDEgZmlsZSB0byAvb3B0L3B1YmxpYy9lY2xpcHNlL2VjbGlwc2U0Ti9idWls
ZC9zdXBwb3J0RGlyL3NyYy9wbHVnaW5zL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Vjai10ZW1wLXNy
Yy1mb2xkZXIKICAgICAgW3ppcF0gQnVpbGRpbmcgemlwOiAvc2hhcmVkL2VjbGlwc2UvZWNsaXBz
ZTROL3NpdGVEaXJURVNUT05MWS9lY2xpcHNlL2Rvd25sb2Fkcy9kcm9wczQvTjIwMTIwNzE4LTE2
MjQvZWNqc3JjLXF1YWxpZmllci5qYXIKCmNsZWFudXA6CiAgIFtkZWxldGVdIERlbGV0aW5nIGRp
cmVjdG9yeSAvb3B0L3B1YmxpYy9lY2xpcHNlL2VjbGlwc2U0Ti9idWlsZC9zdXBwb3J0RGlyL3Ny
Yy9wbHVnaW5zL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Vjai10ZW1wLWZvbGRlcgogICBbZGVsZXRl
XSBEZWxldGluZyBkaXJlY3RvcnkgL29wdC9wdWJsaWMvZWNsaXBzZS9lY2xpcHNlNE4vYnVpbGQv
c3VwcG9ydERpci9zcmMvcGx1Z2lucy9vcmcuZWNsaXBzZS5qZHQuY29yZS9lY2otdGVtcC1zcmMt
Zm9sZGVyCgpwcm9wZXJ0aWVzOgoKaW5pdDoKCmJ1aWxkLmphcnM6CgpwcmUuYnVpbGQuamFyczoK
CnByb3BlcnRpZXM6Cgppbml0OgoKQGRvdC5uZXN0ZWRKYXJzOgoKQGRvdDoKICAgIFtta2Rpcl0g
Q3JlYXRlZCBkaXI6IC9vcHQvcHVibGljL2VjbGlwc2UvZWNsaXBzZTROL2J1aWxkL3N1cHBvcnRE
aXIvc3JjL3BsdWdpbnMvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLnRvb2wvQGRvdAoKcHJlLkBk
b3Q6CiAgICBbamF2YWNdIENvbXBpbGluZyA4IHNvdXJjZSBmaWxlcyB0byAvb3B0L3B1YmxpYy9l
Y2xpcHNlL2VjbGlwc2U0Ti9idWlsZC9zdXBwb3J0RGlyL3NyYy9wbHVnaW5zL29yZy5lY2xpcHNl
LmpkdC5jb21waWxlci50b29sL0Bkb3QKCmNoZWNrQ29tcGlsYXRpb25SZXN1bHRzOgogICAgIFtj
b3B5XSBDb3B5aW5nIDEgZmlsZSB0byAvb3B0L3B1YmxpYy9lY2xpcHNlL2VjbGlwc2U0Ti9idWls
ZC9zdXBwb3J0RGlyL3NyYy9wbHVnaW5zL29yZy5lY2xpcHNlLmpkdC5jb21waWxlci50b29sL0Bk
b3QKCnBvc3QuY29tcGlsZS5AZG90OgogICAgIFtlY2hvXSBVUERBVEUgZWNqLU4yMDEyMDcxOC0x
NjI0LmphcgogICAgW21rZGlyXSBDcmVhdGVkIGRpcjogL29wdC9wdWJsaWMvZWNsaXBzZS9lY2xp
cHNlNE4vYnVpbGQvc3VwcG9ydERpci9zcmMvcGx1Z2lucy9vcmcuZWNsaXBzZS5qZHQuY29tcGls
ZXIudG9vbC90ZW1wYmluCiAgIFtzdWJhbnRdIEZhaWx1cmUgZm9yIHRhcmdldCAncG9zdC5jb21w
aWxlLkBkb3QnIG9mOiAvb3B0L3B1YmxpYy9lY2xpcHNlL2VjbGlwc2U0Ti9idWlsZC9zdXBwb3J0
RGlyL3NyYy9wbHVnaW5zL29yZy5lY2xpcHNlLmpkdC5jb21waWxlci50b29sL2N1c3RvbUJ1aWxk
Q2FsbGJhY2tzLnhtbAogICBbc3ViYW50XSBUaGUgZm9sbG93aW5nIGVycm9yIG9jY3VycmVkIHdo
aWxlIGV4ZWN1dGluZyB0aGlzIGxpbmU6CiAgIFtzdWJhbnRdIC9vcHQvcHVibGljL2VjbGlwc2Uv
ZWNsaXBzZTROL2J1aWxkL3N1cHBvcnREaXIvc3JjL3BsdWdpbnMvb3JnLmVjbGlwc2UuamR0LmNv
bXBpbGVyLnRvb2wvY3VzdG9tQnVpbGRDYWxsYmFja3MueG1sOjEwMjogc3JjICcvc2hhcmVkL2Vj
bGlwc2UvZWNsaXBzZTROL3NpdGVEaXJURVNUT05MWS9lY2xpcHNlL2Rvd25sb2Fkcy9kcm9wczQv
TjIwMTIwNzE4LTE2MjQvZWNqLU4yMDEyMDcxOC0xNjI0LmphcicgZG9lc24ndCBleGlzdC4KCnBv
c3QuQGRvdDoKCnBvc3QuYnVpbGQuamFyczoKICAgIFtta2Rpcl0gQ3JlYXRlZCBkaXI6IC9zaGFy
ZWQvZWNsaXBzZS9lY2xpcHNlNE4vc2l0ZURpclRFU1RPTkxZL2VjbGlwc2UvZG93bmxvYWRzL2Ry
b3BzNC9OMjAxMjA3MTgtMTYyNC9jaGVja3N1bQogW2NoZWNrc3VtXSBDb3VsZCBub3QgZmluZCBm
aWxlIC9zaGFyZWQvZWNsaXBzZS9lY2xpcHNlNE4vc2l0ZURpclRFU1RPTkxZL2VjbGlwc2UvZG93
bmxvYWRzL2Ryb3BzNC9OMjAxMjA3MTgtMTYyNC9lY2otTjIwMTIwNzE4LTE2MjQuamFyIHRvIGdl
bmVyYXRlIGNoZWNrc3VtIGZvci4KICAgW3N1YmFudF0gRmFpbHVyZSBmb3IgdGFyZ2V0ICdwb3N0
LmJ1aWxkLmphcnMnIG9mOiAvb3B0L3B1YmxpYy9lY2xpcHNlL2VjbGlwc2U0Ti9idWlsZC9zdXBw
b3J0RGlyL3NyYy9wbHVnaW5zL29yZy5lY2xpcHNlLmpkdC5jb21waWxlci50b29sL2N1c3RvbUJ1
aWxkQ2FsbGJhY2tzLnhtbAogICBbc3ViYW50XSBUaGUgZm9sbG93aW5nIGVycm9yIG9jY3VycmVk
IHdoaWxlIGV4ZWN1dGluZyB0aGlzIGxpbmU6CiAgIFtzdWJhbnRdIC9vcHQvcHVibGljL2VjbGlw
c2UvZWNsaXBzZTROL2J1aWxkL3N1cHBvcnREaXIvc3JjL3BsdWdpbnMvb3JnLmVjbGlwc2UuamR0
LmNvbXBpbGVyLnRvb2wvY3VzdG9tQnVpbGRDYWxsYmFja3MueG1sOjQ0OiBDb3VsZCBub3QgZmlu
ZCBmaWxlIC9zaGFyZWQvZWNsaXBzZS9lY2xpcHNlNE4vc2l0ZURpclRFU1RPTkxZL2VjbGlwc2Uv
ZG93bmxvYWRzL2Ryb3BzNC9OMjAxMjA3MTgtMTYyNC9lY2otTjIwMTIwNzE4LTE2MjQuamFyIHRv
IGdlbmVyYXRlIGNoZWNrc3VtIGZvci4KCnByb3BlcnRpZXM6Cgppbml0OgoKYnVpbGQuamFyczoK
CnByZS5idWlsZC5qYXJzOgoKcHJvcGVydGllczoKCmluaXQ6CgpAZG90Lm5lc3RlZEphcnM6CgpA
ZG90OgogICAgW21rZGlyXSBDcmVhdGVkIGRpcjogL29wdC9wdWJsaWMvZWNsaXBzZS9lY2xpcHNl
NE4vYnVpbGQvc3VwcG9ydERpci9zcmMvcGx1Z2lucy9vcmcuZWNsaXBzZS5qZHQuY29tcGlsZXIu
YXB0L0Bkb3QKCnByZS5AZG90OgogICAgW2phdmFjXSBDb21waWxpbmcgNDcgc291cmNlIGZpbGVz
IHRvIC9vcHQvcHVibGljL2VjbGlwc2UvZWNsaXBzZTROL2J1aWxkL3N1cHBvcnREaXIvc3JjL3Bs
dWdpbnMvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLmFwdC9AZG90CgpjaGVja0NvbXBpbGF0aW9u
UmVzdWx0czoKCnBvc3QuY29tcGlsZS5AZG90OgogICAgIFtlY2hvXSBVUERBVEUgZWNqLU4yMDEy
MDcxOC0xNjI0LmphcgogICAgW21rZGlyXSBDcmVhdGVkIGRpcjogL29wdC9wdWJsaWMvZWNsaXBz
ZS9lY2xpcHNlNE4vYnVpbGQvc3VwcG9ydERpci9zcmMvcGx1Z2lucy9vcmcuZWNsaXBzZS5qZHQu
Y29tcGlsZXIuYXB0L3RlbXBiaW4KICAgW3N1YmFudF0gRmFpbHVyZSBmb3IgdGFyZ2V0ICdwb3N0
LmNvbXBpbGUuQGRvdCcgb2Y6IC9vcHQvcHVibGljL2VjbGlwc2UvZWNsaXBzZTROL2J1aWxkL3N1
cHBvcnREaXIvc3JjL3BsdWdpbnMvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLmFwdC9jdXN0b21C
dWlsZENhbGxiYWNrcy54bWwKICAgW3N1YmFudF0gVGhlIGZvbGxvd2luZyBlcnJvciBvY2N1cnJl
ZCB3aGlsZSBleGVjdXRpbmcgdGhpcyBsaW5lOgogICBbc3ViYW50XSAvb3B0L3B1YmxpYy9lY2xp
cHNlL2VjbGlwc2U0Ti9idWlsZC9zdXBwb3J0RGlyL3NyYy9wbHVnaW5zL29yZy5lY2xpcHNlLmpk
dC5jb21waWxlci5hcHQvY3VzdG9tQnVpbGRDYWxsYmFja3MueG1sOjEwMjogc3JjICcvc2hhcmVk
L2VjbGlwc2UvZWNsaXBzZTROL3NpdGVEaXJURVNUT05MWS9lY2xpcHNlL2Rvd25sb2Fkcy9kcm9w
czQvTjIwMTIwNzE4LTE2MjQvZWNqLU4yMDEyMDcxOC0xNjI0LmphcicgZG9lc24ndCBleGlzdC4K
CnBvc3QuQGRvdDoKCnBvc3QuYnVpbGQuamFyczoKIFtjaGVja3N1bV0gQ291bGQgbm90IGZpbmQg
ZmlsZSAvc2hhcmVkL2VjbGlwc2UvZWNsaXBzZTROL3NpdGVEaXJURVNUT05MWS9lY2xpcHNlL2Rv
d25sb2Fkcy9kcm9wczQvTjIwMTIwNzE4LTE2MjQvZWNqLU4yMDEyMDcxOC0xNjI0LmphciB0byBn
ZW5lcmF0ZSBjaGVja3N1bSBmb3IuCiAgIFtzdWJhbnRdIEZhaWx1cmUgZm9yIHRhcmdldCAncG9z
dC5idWlsZC5qYXJzJyBvZjogL29wdC9wdWJsaWMvZWNsaXBzZS9lY2xpcHNlNE4vYnVpbGQvc3Vw
cG9ydERpci9zcmMvcGx1Z2lucy9vcmcuZWNsaXBzZS5qZHQuY29tcGlsZXIuYXB0L2N1c3RvbUJ1
aWxkQ2FsbGJhY2tzLnhtbAogICBbc3ViYW50XSBUaGUgZm9sbG93aW5nIGVycm9yIG9jY3VycmVk
IHdoaWxlIGV4ZWN1dGluZyB0aGlzIGxpbmU6CiAgIFtzdWJhbnRdIC9vcHQvcHVibGljL2VjbGlw
c2UvZWNsaXBzZTROL2J1aWxkL3N1cHBvcnREaXIvc3JjL3BsdWdpbnMvb3JnLmVjbGlwc2UuamR0
LmNvbXBpbGVyLmFwdC9jdXN0b21CdWlsZENhbGxiYWNrcy54bWw6NDQ6IENvdWxkIG5vdCBmaW5k
IGZpbGUgL3NoYXJlZC9lY2xpcHNlL2VjbGlwc2U0Ti9zaXRlRGlyVEVTVE9OTFkvZWNsaXBzZS9k
b3dubG9hZHMvZHJvcHM0L04yMDEyMDcxOC0xNjI0L2Vjai1OMjAxMjA3MTgtMTYyNC5qYXIgdG8g
Z2VuZXJhdGUgY2hlY2tzdW0gZm9yLgoKcHJvcGVydGllczoKCmluaXQ6CgpidWlsZC5qYXJzOgoK
cHJvcGVydGllczoKCmluaXQ6CgpAZG90Lm5lc3RlZEphcnM6CgpAZG90OgogICAgW21rZGlyXSBD
cmVhdGVkIGRpcjogL29wdC9wdWJsaWMvZWNsaXBzZS9lY2xpcHNlNE4vYnVpbGQvc3VwcG9ydERp
ci9zcmMvcGx1Z2lucy9vcmcuZWNsaXBzZS5qZHQuYXB0LmNvcmUvQGRvdAogICAgW2phdmFjXSBD
b21waWxpbmcgMTY0IHNvdXJjZSBmaWxlcyB0byAvb3B0L3B1YmxpYy9lY2xpcHNlL2VjbGlwc2U0
Ti9idWlsZC9zdXBwb3J0RGlyL3NyYy9wbHVnaW5zL29yZy5lY2xpcHNlLmpkdC5hcHQuY29yZS9A
ZG90CgpjaGVja0NvbXBpbGF0aW9uUmVzdWx0czoKICAgICBbY29weV0gQ29weWluZyAzIGZpbGVz
IHRvIC9vcHQvcHVibGljL2VjbGlwc2UvZWNsaXBzZTROL2J1aWxkL3N1cHBvcnREaXIvc3JjL3Bs
dWdpbnMvb3JnLmVjbGlwc2UuamR0LmFwdC5jb3JlL0Bkb3QKCnByb3BlcnRpZXM6Cgppbml0OgoK
YnVpbGQuamFyczoKCnByb3BlcnRpZXM6Cgppbml0OgoKYnVpbGQuamFyczoKCnByb3BlcnRpZXM6
Cgppbml0OgoKYnVpbGQuamFyczoKCnByb3BlcnRpZXM6Cgppbml0OgoKQGRvdC5uZXN0ZWRKYXJz
OgoKQGRvdDoKCnByb3BlcnRpZXM6Cgppbml0OgoKQGRvdC5uZXN0ZWRKYXJzOgoKQGRvdDoKICAg
IFtta2Rpcl0gQ3JlYXRlZCBkaXI6IC9vcHQvcHVibGljL2VjbGlwc2UvZWNsaXBzZTROL2J1aWxk
L3N1cHBvcnREaXIvc3JjL3BsdWdpbnMvb3JnLmVjbGlwc2UuZGVidWcuY29yZS9AZG90CiAgICBb
bWtkaXJdIENyZWF0ZWQgZGlyOiAvb3B0L3B1YmxpYy9lY2xpcHNlL2VjbGlwc2U0Ti9idWlsZC9z
dXBwb3J0RGlyL3NyYy9wbHVnaW5zL29yZy5lY2xpcHNlLmpkdC5hcHQucGx1Z2dhYmxlLmNvcmUv
QGRvdAoKcHJvcGVydGllczoKCmluaXQ6CgpAZG90Lm5lc3RlZEphcnM6CgpAZG90OgogICAgW21r
ZGlyXSBDcmVhdGVkIGRpcjogL29wdC9wdWJsaWMvZWNsaXBzZS9lY2xpcHNlNE4vYnVpbGQvc3Vw
cG9ydERpci9zcmMvcGx1Z2lucy9vcmcuZWNsaXBzZS5qZmFjZS50ZXh0L0Bkb3QKICAgIFtqYXZh
Y10gQ29tcGlsaW5nIDE0IHNvdXJjZSBmaWxlcyB0byAvb3B0L3B1YmxpYy9lY2xpcHNlL2VjbGlw
c2U0Ti9idWlsZC9zdXBwb3J0RGlyL3NyYy9wbHVnaW5zL29yZy5lY2xpcHNlLmpkdC5hcHQucGx1
Z2dhYmxlLmNvcmUvQGRvdAogICAgW2phdmFjXSBDb21waWxpbmcgMTg5IHNvdXJjZSBmaWxlcyB0
byAvb3B0L3B1YmxpYy9lY2xpcHNlL2VjbGlwc2U0Ti9idWlsZC9zdXBwb3J0RGlyL3NyYy9wbHVn
aW5zL29yZy5lY2xpcHNlLmRlYnVnLmNvcmUvQGRvdAogICAgW2phdmFjXSBDb21waWxpbmcgMzI4
IHNvdXJjZSBmaWxlcyB0byAvb3B0L3B1YmxpYy9lY2xpcHNlL2VjbGlwc2U0Ti9idWlsZC9zdXBw
b3J0RGlyL3NyYy9wbHVnaW5zL29yZy5lY2xpcHNlLmpmYWNlLnRleHQvQGRvdAoKY2hlY2tDb21w
aWxhdGlvblJlc3VsdHM6CgoK
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>218895</attachid>
            <date>2012-07-18 20:07:00 -0400</date>
            <delta_ts>2012-07-18 20:07:00 -0400</delta_ts>
            <desc>full ant file to test parsing.</desc>
            <filename>testBundleVersionRegex.xml</filename>
            <type>text/xml</type>
            <size>1866</size>
            <attacher name="David Williams">david_williams</attacher>
            
              <data encoding="base64">PHByb2plY3QKICAgIG5hbWU9InRlc3RyZWdleCIKICAgIGRlZmF1bHQ9InRlc3RyZWdleCIKICAg
IGJhc2VkaXI9Ii4iPgogICAgPHByb3BlcnR5CiAgICAgICAgbmFtZT0iYnVuZGxlVmVyc2lvbiIK
ICAgICAgICB2YWx1ZT0iMy44LjEuTjIwMTIwNzE4LTE2MjQiIC8+CiAgICA8dGFyZ2V0CiAgICAg
ICAgbmFtZT0idGVzdHJlZ2V4IgogICAgICAgIGRlcGVuZHM9ImluaXQiPgoKICAgICAgICA8ZWNo
byBtZXNzYWdlPSJidW5kbGVWZXJzaW9uOiAke2J1bmRsZVZlcnNpb259IiAvPgogICAgICAgIDxl
Y2hvIG1lc3NhZ2U9ImJ1bmRsZVZlcnNpb25NYWpvcjogJHtidW5kbGVWZXJzaW9uTWFqb3J9IiAv
PgogICAgICAgIDxlY2hvIG1lc3NhZ2U9ImJ1bmRsZVZlcnNpb25NaW5vcjogJHtidW5kbGVWZXJz
aW9uTWlub3J9IiAvPgogICAgICAgIDxlY2hvIG1lc3NhZ2U9ImJ1bmRsZVZlcnNpb25TZXJ2aWNl
OiAke2J1bmRsZVZlcnNpb25TZXJ2aWNlfSIgLz4KICAgICAgICA8ZWNobyBtZXNzYWdlPSJidW5k
bGVWZXJzaW9uUXVhbGlmaWVyOiAke2J1bmRsZVZlcnNpb25RdWFsaWZlcn0iIC8+CiAgICAgICAg
CiAgICA8L3RhcmdldD4KCgogICAgPCEtLSAKICAgICAgIG1haW4gcHVycG9zZSBvZiBpbml0LCBp
dCB0byBiZSBzdXJlIHdlIGhhdmUgYnVuZGxlVmVyc2lvbk1ham9yIGFuZCBidW5kbGVWZXJzaW9u
TWlub3IKICAgICAgIFVzZXMgc2NyaXB0LCB3aGljaCByZXF1aXJlcyBKYXZhIDEuNiAob3IgLi4u
IGVsc2UgZ2V0cyBjb21wbGljYXRlZCB0byBzZXR1cCkgCiAgICAgLS0+CiAgICA8dGFyZ2V0IG5h
bWU9ImluaXQiPgogICAgICAgIDxmYWlsCiAgICAgICAgICAgIHVubGVzcz0iYnVuZGxlVmVyc2lv
biIKICAgICAgICAgICAgbWVzc2FnZT0iYnVuZGxlVmVyc2lvbiBtdXN0IGJlIHByb3ZpZGVkIGJ5
IGNhbGxlciIgLz4KICAgICAgICA8Y29uZGl0aW9uIHByb3BlcnR5PSJzdHJlYW1PSyI+CiAgICAg
ICAgICAgIDxtYXRjaGVzCiAgICAgICAgICAgICAgICBwYXR0ZXJuPSJcZFwuXGRcLlxkXC4uKiIK
ICAgICAgICAgICAgICAgIHN0cmluZz0iJHtidW5kbGVWZXJzaW9ufSIgLz4KICAgICAgICA8L2Nv
bmRpdGlvbj4KICAgICAgICA8ZmFpbAogICAgICAgICAgICBtZXNzYWdlPSJidW5kbGVWZXJzaW9u
IHZhcmlhYmxlIGhhZCB1bmV4cGVjdGVkIGZvcm1hdC4gU2hvdWxkIGJlIGRpZ2l0LmRpZ2l0LmRp
Z2l0LEFOWSBidXQgd2FzICR7YnVuZGxlVmVyc2lvbn0iCiAgICAgICAgICAgIHVubGVzcz0ic3Ry
ZWFtT0siIC8+CiAgICAgICAgCiAgICAgICAgPHNjcmlwdCBsYW5ndWFnZT0iamF2YXNjcmlwdCI+
CiAgICAgICAgICAgIHZhciBidW5kbGVWZXJzaW9uID0gcHJvamVjdC5nZXRQcm9wZXJ0eSgiYnVu
ZGxlVmVyc2lvbiIpOwogICAgICAgICAgICB2YXIgcGF0dGVybiA9IG5ldyBSZWdFeHAoL14oXGQr
KVwuKFxkKylcLihcZCspXC4oLiopJC8pOwoKICAgICAgICAgICAgdmFyIHNBcnJheSA9IHBhdHRl
cm4uZXhlYyhidW5kbGVWZXJzaW9uKTsKICAgICAgICAgICAgLy8gc0FycmF5IDAgaXMgIndob2xl
IG1hdGNoIgogICAgICAgICAgICBwcm9qZWN0LnNldFByb3BlcnR5KCJidW5kbGVWZXJzaW9uTWFq
b3IiLCBzQXJyYXlbMV0pOwogICAgICAgICAgICBwcm9qZWN0LnNldFByb3BlcnR5KCJidW5kbGVW
ZXJzaW9uTWlub3IiLCBzQXJyYXlbMl0pOwogICAgICAgICAgICBwcm9qZWN0LnNldFByb3BlcnR5
KCJidW5kbGVWZXJzaW9uU2VydmljZSIsIHNBcnJheVszXSk7CiAgICAgICAgICAgIHByb2plY3Qu
c2V0UHJvcGVydHkoImJ1bmRsZVZlcnNpb25RdWFsaWZlciIsIHNBcnJheVs0XSk7CiAgICAgICAg
PC9zY3JpcHQ+CiAgICAgCgogICAgPC90YXJnZXQ+Cgo8L3Byb2plY3Q+
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>219060</attachid>
            <date>2012-07-23 11:58:00 -0400</date>
            <delta_ts>2012-07-23 11:58:52 -0400</delta_ts>
            <desc>Patch for ecj export</desc>
            <filename>Fix-for-bug-384531.patch</filename>
            <type>text/plain</type>
            <size>5174</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2JhdGNoL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9iYXRjaC9tZXNzYWdlcy5wcm9wZXJ0aWVzIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvYmF0Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2JhdGNoL21l
c3NhZ2VzLnByb3BlcnRpZXMKaW5kZXggNDBhOWVkZS4uOTU2N2Q1MiAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvYmF0Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2JhdGNoL21lc3NhZ2VzLnByb3BlcnRpZXMKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvYmF0
Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2JhdGNoL21lc3NhZ2VzLnByb3Bl
cnRpZXMKQEAgLTIxLDggKzIxLDggQEAKICMjIyBjb21waWxlcgogI0Zvcm1hdDogY29tcGlsZXIu
bmFtZSA9IHdvcmQxIHdvcmQyIHdvcmQzCiBjb21waWxlci5uYW1lID0gRWNsaXBzZSBDb21waWxl
ciBmb3IgSmF2YShUTSkKLSNGb3JtYXQ6IGNvbXBpbGVyLnZlcnNpb24gPSBidWlsZF9xdWFsaWZp
ZXIsIDAuWFhYIFssIG90aGVyIHdvcmRzIChkb24ndCBmb3JnZXQgdGhlIGNvbW1hIGlmIGFkZGlu
ZyBvdGhlciB3b3Jkcy4gImJ1aWxkX3F1YWxpZmllciIgd2lsbCBiZSBhdXRvbWF0aWNhbGx5IGZp
bGxlZCldCi1jb21waWxlci52ZXJzaW9uID0gYnVpbGRfcXVhbGlmaWVyLCAzLjguMQorI0Zvcm1h
dDogY29tcGlsZXIudmVyc2lvbiA9IChUaGUgcGxhY2Vob2xkZXIgJ2J1bmRsZV92ZXJzaW9uJyB3
aWxsIGJlIGF1dG9tYXRpY2FsbHkgZmlsbGVkLiBEbyBub3QgcmVtb3ZlIG9yIGFsdGVyIGl0KQor
Y29tcGlsZXIudmVyc2lvbiA9IGJ1bmRsZV92ZXJzaW9uCiBjb21waWxlci5jb3B5cmlnaHQgPSBD
b3B5cmlnaHQgSUJNIENvcnAgMjAwMCwgMjAxMi4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KIAogIyMj
IHByb2dyZXNzCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zY3JpcHRzL2V4cG9y
dC1lY2oueG1sIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2NyaXB0cy9leHBvcnQtZWNqLnhtbApp
bmRleCA3YWMyZTNkLi40MWU2ZmRjIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9z
Y3JpcHRzL2V4cG9ydC1lY2oueG1sCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NjcmlwdHMv
ZXhwb3J0LWVjai54bWwKQEAgLTE1LDcgKzE1LDIxIEBACiA8cHJvamVjdCBuYW1lPSJFY2xpcHNl
IEJhdGNoIENvbXBpbGVyIiBkZWZhdWx0PSJleHBvcnQtYWxsIiBiYXNlZGlyPSIuLiI+CiAJPHRh
cmdldCBuYW1lPSJpbml0Ij4KIAkJPHRzdGFtcC8+Ci0JCTxwcm9wZXJ0eSBuYW1lPSJidWlsZExh
YmVsIiB2YWx1ZT0iaGVhZCIgLz4KKwkJPHByb3BlcnR5IG5hbWU9ImJ1bmRsZVZlcnNpb24iIHZh
bHVlPSIzLjguMC5OeHh4eHgiLz4KKwkJPGZhaWwgdW5sZXNzPSJidW5kbGVWZXJzaW9uIiBtZXNz
YWdlPSJQcm9wZXJ0eSAnYnVuZGxlVmVyc2lvbicgbXVzdCBiZSBwcm92aWRlZCBieSBjYWxsZXIi
Lz4KKwkJPGNvbmRpdGlvbiBwcm9wZXJ0eT0iYnVuZGxlVmVyc2lvbk9LIj4KKwkJPG1hdGNoZXMg
cGF0dGVybj0iXGRcLlxkXC5cZC4qIiBzdHJpbmc9IiR7YnVuZGxlVmVyc2lvbn0iLz4KKwkJPC9j
b25kaXRpb24+CisJCTxmYWlsIG1lc3NhZ2U9ImJ1bmRsZVZlcnNpb24gdmFyaWFibGUgaGFkIHVu
ZXhwZWN0ZWQgZm9ybWF0LiBTaG91bGQgYmUgZGlnaXQuZGlnaXQuZGlnaXQsQU5ZIGJ1dCB3YXMg
JHtidW5kbGVWZXJzaW9ufSIgdW5sZXNzPSJidW5kbGVWZXJzaW9uT0siLz4KKwkJPHNjcmlwdCBs
YW5ndWFnZT0iamF2YXNjcmlwdCI+CisJCQl2YXIgYnVuZGxlVmVyc2lvbiA9IHByb2plY3QuZ2V0
UHJvcGVydHkoImJ1bmRsZVZlcnNpb24iKTsKKwkJCXZhciBwYXR0ZXJuID0gbmV3IFJlZ0V4cCgv
XihcZCspXC4oXGQrKVwuKFxkKylcLiguKikkLyk7CisJCQl2YXIgc0FycmF5ID0gcGF0dGVybi5l
eGVjKGJ1bmRsZVZlcnNpb24pOyAvLyBzQXJyYXkgMCBpcyAid2hvbGUgbWF0Y2giCisJCQlwcm9q
ZWN0LnNldFByb3BlcnR5KCJidW5kbGVWZXJzaW9uTWFqb3IiLCBzQXJyYXlbMV0pOworCQkJcHJv
amVjdC5zZXRQcm9wZXJ0eSgiYnVuZGxlVmVyc2lvbk1pbm9yIiwgc0FycmF5WzJdKTsKKwkJCXBy
b2plY3Quc2V0UHJvcGVydHkoImJ1bmRsZVZlcnNpb25TZXJ2aWNlIiwgc0FycmF5WzNdKTsKKwkJ
CXByb2plY3Quc2V0UHJvcGVydHkoImJ1bmRsZVZlcnNpb25RdWFsaWZlciIsIHNBcnJheVs0XSkK
KwkJPC9zY3JpcHQ+CiAJCTxwcm9wZXJ0eSBuYW1lPSJlY2otdGVtcC1mb2xkZXIiIHZhbHVlPSIk
e2Jhc2VkaXJ9L2Vjai10ZW1wLWZvbGRlciIgLz4KIAkJPHByb3BlcnR5IG5hbWU9ImVjai10ZW1w
LXNyYy1mb2xkZXIiIHZhbHVlPSIke2Jhc2VkaXJ9L2Vjai10ZW1wLXNyYy1mb2xkZXIiIC8+CiAJ
CTxta2RpciBkaXI9IiR7ZWNqLXRlbXAtc3JjLWZvbGRlcn0iIC8+CkBAIC00NCw3ICs1OCw3IEBA
CiAJCQkJPGV4Y2x1ZGUgbmFtZT0ib3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Bh
cnNlci9Tb3VyY2VUeXBlQ29udmVydGVyKi5jbGFzcyIvPgogCQkJPC9maWxlc2V0PgogCQk8L2Nv
cHk+Ci0JCTxyZXBsYWNlIGZpbGU9IiR7ZWNqLXRlbXAtZm9sZGVyfS9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYmF0Y2gvbWVzc2FnZXMucHJvcGVydGllcyIgdG9rZW49ImJ1aWxk
X3F1YWxpZmllciIgdmFsdWU9IiR7YnVpbGRMYWJlbH0iLz4KKwkJPHJlcGxhY2UgZmlsZT0iJHtl
Y2otdGVtcC1mb2xkZXJ9L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9iYXRjaC9t
ZXNzYWdlcy5wcm9wZXJ0aWVzIiB0b2tlbj0iYnVuZGxlX3ZlcnNpb24iIHZhbHVlPSIke2J1bmRs
ZVZlcnNpb259Ii8+CiAJPC90YXJnZXQ+CiAKIAk8dGFyZ2V0IG5hbWU9ImV4dHJhY3QtX2pzcjE5
OSIgZGVwZW5kcz0iaW5pdCI+CkBAIC03NywxNiArOTEsMTUgQEAKIAk8L3RhcmdldD4KIAogCTx0
YXJnZXQgbmFtZT0iZXhwb3J0IiBkZXBlbmRzPSJpbml0Ij4KLQkJPHByb3BlcnR5IG5hbWU9ImJ1
aWxkTGFiZWwiIHZhbHVlPSJoZWFkIiAvPgogCQk8cHJvcGVydHkgbmFtZT0iZGVzdCIgdmFsdWU9
Ii4uLy4uL2Vjai1leHBvcnQiIC8+CiAJCTxta2RpciBkaXI9IiR7ZGVzdH0iIC8+Ci0JCTxlY2hv
IG1lc3NhZ2U9IlVQREFURSBlY2otJHtidWlsZExhYmVsfS5qYXIiIC8+Ci0JCTxkZWxldGUgZmls
ZT0iJHtkZXN0fS9lY2otJHtidWlsZExhYmVsfS5qYXIiIGZhaWxvbmVycm9yPSJmYWxzZSIvPgor
CQk8ZWNobyBtZXNzYWdlPSJVUERBVEUgZWNqLSR7YnVuZGxlVmVyc2lvbn0uamFyIiAvPgorCQk8
ZGVsZXRlIGZpbGU9IiR7ZGVzdH0vZWNqLSR7YnVuZGxlVmVyc2lvbn0uamFyIiBmYWlsb25lcnJv
cj0iZmFsc2UiLz4KIAkJPGNvcHkgdG9kaXI9IiR7ZWNqLXRlbXAtZm9sZGVyfSI+CiAJCQk8Zmls
ZXNldCBkaXI9InNjcmlwdHMvYmluYXJ5IiAvPgogCQk8L2NvcHk+Ci0JCTxyZXBsYWNlIGZpbGU9
IiR7ZWNqLXRlbXAtZm9sZGVyfS9NRVRBLUlORi9NQU5JRkVTVC5NRiIgdG9rZW49InF1YWxpZmll
ciIgdmFsdWU9IiR7YnVpbGRMYWJlbH0iLz4KLQkJPHppcCB6aXBmaWxlPSIke2Rlc3R9L2Vjai0k
e2J1aWxkTGFiZWx9LmphciI+CisJCTxyZXBsYWNlIGZpbGU9IiR7ZWNqLXRlbXAtZm9sZGVyfS9N
RVRBLUlORi9NQU5JRkVTVC5NRiIgdG9rZW49InF1YWxpZmllciIgdmFsdWU9IiR7YnVuZGxlVmVy
c2lvblF1YWxpZmVyfSIvPgorCQk8emlwIHppcGZpbGU9IiR7ZGVzdH0vZWNqLSR7YnVuZGxlVmVy
c2lvbn0uamFyIj4KIAkJCTxmaWxlc2V0IGRpcj0iJHtlY2otdGVtcC1mb2xkZXJ9Ij4KIAkJCQk8
aW5jbHVkZSBuYW1lPSIqKi8qIi8+CiAJCQk8L2ZpbGVzZXQ+CkBAIC05NiwxMyArMTA5LDEzIEBA
CiAJCTwvemlwPgogCiAKLQkJPGVjaG8gbWVzc2FnZT0iVVBEQVRFIGVjanNyYy0ke2J1aWxkTGFi
ZWx9LmphciIgLz4KLQkJPGRlbGV0ZSBmaWxlPSIke2Rlc3R9L2VjanNyYy0ke2J1aWxkTGFiZWx9
LmphciIgZmFpbG9uZXJyb3I9ImZhbHNlIi8+CisJCTxlY2hvIG1lc3NhZ2U9IlVQREFURSBlY2pz
cmMtJHtidW5kbGVWZXJzaW9ufS5qYXIiIC8+CisJCTxkZWxldGUgZmlsZT0iJHtkZXN0fS9lY2pz
cmMtJHtidW5kbGVWZXJzaW9ufS5qYXIiIGZhaWxvbmVycm9yPSJmYWxzZSIvPgogCQk8Y29weSB0
b2Rpcj0iJHtlY2otdGVtcC1zcmMtZm9sZGVyfSI+CiAJCQk8ZmlsZXNldCBkaXI9InNjcmlwdHMv
c291cmNlIiAvPgogCQk8L2NvcHk+Ci0JCTxyZXBsYWNlIGZpbGU9IiR7ZWNqLXRlbXAtc3JjLWZv
bGRlcn0vTUVUQS1JTkYvTUFOSUZFU1QuTUYiIHRva2VuPSJxdWFsaWZpZXIiIHZhbHVlPSIke2J1
aWxkTGFiZWx9Ii8+Ci0JCTx6aXAgemlwZmlsZT0iJHtkZXN0fS9lY2pzcmMtJHtidWlsZExhYmVs
fS5qYXIiPgorCQk8cmVwbGFjZSBmaWxlPSIke2Vjai10ZW1wLXNyYy1mb2xkZXJ9L01FVEEtSU5G
L01BTklGRVNULk1GIiB0b2tlbj0icXVhbGlmaWVyIiB2YWx1ZT0iJHtidW5kbGVWZXJzaW9uUXVh
bGlmZXJ9Ii8+CisJCTx6aXAgemlwZmlsZT0iJHtkZXN0fS9lY2pzcmMtJHtidW5kbGVWZXJzaW9u
fS5qYXIiPgogCQkJPHppcGZpbGVzZXQgZGlyPSJlY2otdGVtcC1zcmMtZm9sZGVyIiAvPgogCQkJ
PHppcGZpbGVzZXQgZGlyPSJiYXRjaCI+CiAJCQkJPGV4Y2x1ZGUgbmFtZT0ib3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2JhdGNoL21lc3NhZ2VzLnByb3BlcnRpZXMiLz4KQEAgLTEz
Miw3ICsxNDUsNyBAQAogCQk8Y29weSB0b2Rpcj0iJHtlY2otdGVtcC1mb2xkZXJ9Ij4KIAkJCTxm
aWxlc2V0IGRpcj0ic2NyaXB0cy9iaW5hcnkiIC8+CiAJCTwvY29weT4KLQkJPHJlcGxhY2UgZmls
ZT0iJHtlY2otdGVtcC1mb2xkZXJ9L01FVEEtSU5GL01BTklGRVNULk1GIiB0b2tlbj0icXVhbGlm
aWVyIiB2YWx1ZT0iJHtidWlsZExhYmVsfSIvPgorCQk8cmVwbGFjZSBmaWxlPSIke2Vjai10ZW1w
LWZvbGRlcn0vTUVUQS1JTkYvTUFOSUZFU1QuTUYiIHRva2VuPSJxdWFsaWZpZXIiIHZhbHVlPSIk
e2J1bmRsZVZlcnNpb25RdWFsaWZlcn0iLz4KIAogCQk8Y29weSB0b2Rpcj0iJHtlY2otdGVtcC1z
cmMtZm9sZGVyfS9zcmMiPgogCQkJPGZpbGVzZXQgZGlyPSJiYXRjaCIgLz4=
</data>

          </attachment>
      

    </bug>

</bugzilla>