<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>369381</bug_id>
          
          <creation_ts>2012-01-23 07:36:00 -0500</creation_ts>
          <short_desc>[null][compiler] &apos;Adding potential null mark in unexpected state&apos; assertion while compiling</short_desc>
          <delta_ts>2012-03-12 10:35:39 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.8</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>INVALID</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.8 M6</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Ayushman Jain">amj87.iitr</reporter>
          <assigned_to name="Ayushman Jain">amj87.iitr</assigned_to>
          <cc>amj87.iitr</cc>
    
    <cc>jarthana</cc>
    
    <cc>satyam.kandula</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2054322</commentid>
    <comment_count>0</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-01-23 07:36:28 -0500</bug_when>
    <thetext></thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2054323</commentid>
    <comment_count>1</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-01-23 07:38:42 -0500</bug_when>
    <thetext>Because of the new null analysis for fields, on compiling jdt.core with the option turned on we get 

Internal compiler error: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo$AssertionFailedException: assertion failed: Adding &apos;potentially null&apos; mark in unexpected state at org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.isTrue(UnconditionalFlowInfo.java:1044)	ClasspathEntry.java	/org.eclipse.jdt.core/src/org/eclipse/jdt/internal/core	line 0	Java Problem

This needs to be investigated.
Lowering priority since the option is off by default and compliation is ok out of the box</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2054331</commentid>
    <comment_count>2</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-01-23 07:55:13 -0500</bug_when>
    <thetext>I think the fix is straightforward. In the fix for bug 247564, we had marked non-constant fields as pot. null to consider modification in different threads. But we used markNullStatus, which only marks the potentially non null bit, keeping the other bits intact. What we should do here is to change the whole bit stream to 0100, which stands for pot. null.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2054332</commentid>
    <comment_count>3</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-01-23 08:01:47 -0500</bug_when>
    <thetext>Oops, there&apos;s also an NPE :)
java.lang.NullPointerException
	at org.eclipse.jdt.internal.compiler.ast.FieldReference.variableBinding(FieldReference.java:686)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2054333</commentid>
    <comment_count>4</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-01-23 08:04:19 -0500</bug_when>
    <thetext>Today&apos;s my lucky day
java.lang.ArrayIndexOutOfBoundsException
	at org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.addConstantFieldsMask(UnconditionalFlowInfo.java:1643)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2054336</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-01-23 08:07:36 -0500</bug_when>
    <thetext>Are these due to some last minute changes ? I thought we
were using eclipse SDK as a test case to mine for
problems originally ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2054338</commentid>
    <comment_count>6</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-01-23 08:10:00 -0500</bug_when>
    <thetext>(In reply to comment #5)
&gt; Are these due to some last minute changes ? I thought we
&gt; were using eclipse SDK as a test case to mine for
&gt; problems originally ?

While compiling the SDK, several other errors (viz. Buildpath issues, API issues) would&apos;ve short-circuited the code paths which are now getting executed. Hence these errors.
Not to worry though, fix is simple. Its a (few) silly mistake(s) :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2054357</commentid>
    <comment_count>7</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-01-23 08:31:28 -0500</bug_when>
    <thetext>Actually, the NPE was a false alarm because it doesn&apos;t have with the latest build. It occured in a runtime workbench because I had changes from bug 237236 in my workspace. However, its best to protect the condition with a null check. NPE happened on SourceTypeBinding:931 at this.superInterfaces.length == 1, where the declaring class of length is null</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2054362</commentid>
    <comment_count>8</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-01-23 08:40:52 -0500</bug_when>
    <thetext>Another interesting observation. The bug in comment 1 is actually in the resource leaks handling. 
In org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.analyseCloseableExpression(..), we have used markPotentiallyNonNullBit(..) . I think we should have used markNullStatus(..) and go by the proper route. This will solve this unexpected state issue</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2054375</commentid>
    <comment_count>9</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-01-23 09:04:21 -0500</bug_when>
    <thetext>(In reply to comment #8)
&gt; Another interesting observation. The bug in comment 1 is actually in the
&gt; resource leaks handling. 
&gt; In
&gt; org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.analyseCloseableExpression(..),
&gt; we have used markPotentiallyNonNullBit(..) . I think we should have used
&gt; markNullStatus(..) and go by the proper route. This will solve this unexpected
&gt; state issue
Confirmed that this fixes the bug. Running tests now.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2054381</commentid>
    <comment_count>10</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-01-23 09:10:40 -0500</bug_when>
    <thetext>Both comment 3 and comment 4 were problems exposed by the fix for bug 237236 in my workspace. They don&apos;t occur with the current code, but I&apos;m anyway including the fix for them as well. Releasing a disabled test meanwhile to check the AIOOBE which should be enabled in bug 237236&apos;s fix</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2054564</commentid>
    <comment_count>11</comment_count>
      <attachid>209925</attachid>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-01-23 11:55:41 -0500</bug_when>
    <thetext>Created attachment 209925
proposed fix

This changes the markPotentialNullBit(..) to markNullStatus(..).

Stephan, since this patch touches your code, can you please see if everything looks ok? The patch is quite small.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2054800</commentid>
    <comment_count>12</comment_count>
      <attachid>209948</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-23 18:16:09 -0500</bug_when>
    <thetext>Created attachment 209948
counter proposal

That is in interesting one indeed!

Yes, markPotentialXBit() must be used with care, ideally only when the null status of the variable is known to be the start state (0000).

However, the two locations in question meet this demand:

AbstractMethodDeclaration: before analysing any statements we init the status for the method&apos;s arguments. Impossible to be different from 0000 at this point.

FakedTrackingVariable: two lines above the line in question we see: &quot;tracker = new FakedTrackingVariable(local, location)&quot;, which internally creates a new LocalVariableBinding into tracker.binding. No null status yet.

So changing any of these lines would only mask an error that must have happened earlier.

And indeed I found a bug that caused initialization to 1001 into local variables that hadn&apos;t even been created at that time. Next the fresh local from FakedTrackingVariable would find this 1001, try to set the pot.nul bit and bail out because our assumption above is broken.

How did we get non-existent locals initialized to 1001? By a simple loop overrun in resetNullInfoForFields(). For details see the patch (change in UFI plus test).


BTW: for using markNullStatus(var) another requirement must be met: the previous null status of this var must be irrelevant at this point. If that&apos;s not the case some kind of flow merging is necessary.


The change in FieldDeclaration looks OK. Yes one keeps forgetting that we have this one field (Array.length) that doesn&apos;t have a declaring class, sigh. Actually I would include (this.binding.declaringClass == null) into one of the conditions above for an early exit, no need to keep looping.


I did not fully evaluate the change in UFI#addConstantFieldsMask(). Do you have a test that would fail in HEAD without this change?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2054850</commentid>
    <comment_count>13</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-01-24 00:59:18 -0500</bug_when>
    <thetext>(In reply to comment #12)
&gt; Created attachment 209948 [details]
&gt; counter proposal
&gt; 
&gt; And indeed I found a bug that caused initialization to 1001 into local
&gt; variables that hadn&apos;t even been created at that time. Next the fresh local from
&gt; FakedTrackingVariable would find this 1001, try to set the pot.nul bit and bail
&gt; out because our assumption above is broken.

Yes your analysis is correct. :)

&gt; I did not fully evaluate the change in UFI#addConstantFieldsMask(). Do you have
&gt; a test that would fail in HEAD without this change?

Yup there&apos;s a way to reproduce. Apply the patch from bug 237236 and then use the diasbled test case I added in the comment 11 patch. You get an AIOOBE. This is because although I handled the case when the length of the current mask is smaller than that of the one being added, I did not handle the opposite case.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2054858</commentid>
    <comment_count>14</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-01-24 01:38:15 -0500</bug_when>
    <thetext>(In reply to comment #12)
&gt; BTW: for using markNullStatus(var) another requirement must be met: the
&gt; previous null status of this var must be irrelevant at this point. If that&apos;s
&gt; not the case some kind of flow merging is necessary.
So in the two places where markPotnetiallyNullBit is used, we shouldn&apos;t change it to markNullStatus(..)?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2054869</commentid>
    <comment_count>15</comment_count>
      <attachid>209955</attachid>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-01-24 03:13:41 -0500</bug_when>
    <thetext>Created attachment 209955
combined fix + tests

This patch combines my fixes for NPE and AIOOBE, and Stephan&apos;s fix for &apos;adding pot. null mark&apos;. 
I&apos;ve also added regression tests for all these cases. One test is disabled for now, which will be enabled when bug 237236 is released.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2054892</commentid>
    <comment_count>16</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-01-24 04:05:53 -0500</bug_when>
    <thetext>(In reply to comment #15)
&gt; Created attachment 209955 [details]
&gt; combined fix + tests
Released in master via commit acc6e9dd91bf6b774847a32dd6da3bb481276405</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2054898</commentid>
    <comment_count>17</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-24 04:17:54 -0500</bug_when>
    <thetext>(In reply to comment #14)
&gt; (In reply to comment #12)
&gt; &gt; BTW: for using markNullStatus(var) another requirement must be met: the
&gt; &gt; previous null status of this var must be irrelevant at this point. If that&apos;s
&gt; &gt; not the case some kind of flow merging is necessary.
&gt; So in the two places where markPotnetiallyNullBit is used, we shouldn&apos;t change
&gt; it to markNullStatus(..)?

Right. Leaving as is has two advantages: performance and catching bugs
like this one.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2055912</commentid>
    <comment_count>18</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-01-25 09:43:32 -0500</bug_when>
    <thetext>Verified for 3.8M5 using I20120124-2000</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2066729</commentid>
    <comment_count>19</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-02-16 08:54:12 -0500</bug_when>
    <thetext>Reopening to synch with the base bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=247564</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2066731</commentid>
    <comment_count>20</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-02-16 08:55:27 -0500</bug_when>
    <thetext>As this bug is implementation specific and since
https://bugs.eclipse.org/bugs/show_bug.cgi?id=247564
has been reopened, this can be closed as INVALID.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2078769</commentid>
    <comment_count>21</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-03-12 10:35:39 -0400</bug_when>
    <thetext>Verified for 3.8M6</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>209925</attachid>
            <date>2012-01-23 11:55:00 -0500</date>
            <delta_ts>2012-01-24 04:05:08 -0500</delta_ts>
            <desc>proposed fix</desc>
            <filename>Fixed-bug-369381-nullcompiler-Adding-potential-null-.patch</filename>
            <type>text/plain</type>
            <size>10884</size>
            <attacher name="Ayushman Jain">amj87.iitr</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL051bGxSZWZlcmVuY2VU
ZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9OdWxsUmVmZXJlbmNlVGVz
dC5qYXZhCmluZGV4IDQ2ZWMwMWUuLmRjYjk4YmUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21w
aWxlci9yZWdyZXNzaW9uL051bGxSZWZlcmVuY2VUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vTnVsbFJlZmVyZW5jZVRlc3QuamF2YQpAQCAtMTc5NDAsNCArMTc5
NDAsMTU3IEBACiAJCQkiIgogCSk7CiB9CisvLyBudWxsIGFuYWx5c2lzIC0tIHdpdGggbGFyZ2Ug
bm8uIG9mIGZpZWxkcywgbm8gQUlPT0JFIHNob3VsZCBiZSB0aHJvd24KKy8vIG5vLiBvZiBzdGF0
aWMgZmluYWwgZmllbGRzIGxlc3MgdGhhbiBuby4gb2YgZmluYWwtb25seSBmaWVsZHMKK3B1Ymxp
YyB2b2lkIF90ZXN0QnVnMzY5MzgxKCkgeworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCW5ldyBT
dHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSJz
dGF0aWMgZmluYWwgT2JqZWN0IGZpZWxkMCA9IG51bGw7XG4gIiArCisJCQkic3RhdGljIGZpbmFs
IE9iamVjdCBmaWVsZDEgPSBudWxsO1xuICIgKworCQkJInN0YXRpYyBmaW5hbCBPYmplY3QgZmll
bGQyID0gbnVsbDtcbiAiICsKKwkJCSJzdGF0aWMgZmluYWwgT2JqZWN0IGZpZWxkMyA9IG51bGw7
XG4gIiArCisJCQkic3RhdGljIGZpbmFsIE9iamVjdCBmaWVsZDQgPSBudWxsO1xuICIgKworCQkJ
InN0YXRpYyBmaW5hbCBPYmplY3QgZmllbGQ1ID0gbnVsbDtcbiAiICsKKwkJCSJzdGF0aWMgZmlu
YWwgT2JqZWN0IGZpZWxkNiA9IG51bGw7XG4gIiArCisJCQkic3RhdGljIGZpbmFsIE9iamVjdCBm
aWVsZDcgPSBudWxsO1xuICIgKworCQkJInN0YXRpYyBmaW5hbCBPYmplY3QgZmllbGQ4ID0gbnVs
bDtcbiAiICsKKwkJCSJzdGF0aWMgZmluYWwgT2JqZWN0IGZpZWxkOSA9IG51bGw7XG4gIiArCisJ
CQkic3RhdGljIGZpbmFsIE9iamVjdCBmaWVsZDEwID0gbnVsbDtcbiIgKworCQkJInN0YXRpYyBm
aW5hbCBPYmplY3QgZmllbGQxMSA9IG51bGw7XG4iICsKKwkJCSJzdGF0aWMgZmluYWwgT2JqZWN0
IGZpZWxkMTIgPSBudWxsO1xuIiArCisJCQkic3RhdGljIGZpbmFsIE9iamVjdCBmaWVsZDEzID0g
bnVsbDtcbiIgKworCQkJInN0YXRpYyBmaW5hbCBPYmplY3QgZmllbGQxNCA9IG51bGw7XG4iICsK
KwkJCSJzdGF0aWMgZmluYWwgT2JqZWN0IGZpZWxkMTUgPSBudWxsO1xuIiArCisJCQkic3RhdGlj
IGZpbmFsIE9iamVjdCBmaWVsZDE2ID0gbnVsbDtcbiIgKworCQkJInN0YXRpYyBmaW5hbCBPYmpl
Y3QgZmllbGQxNyA9IG51bGw7XG4iICsKKwkJCSJzdGF0aWMgZmluYWwgT2JqZWN0IGZpZWxkMTgg
PSBudWxsO1xuIiArCisJCQkic3RhdGljIGZpbmFsIE9iamVjdCBmaWVsZDE5ID0gbnVsbDtcbiIg
KworCQkJInN0YXRpYyBmaW5hbCBPYmplY3QgZmllbGQyMCA9IG51bGw7XG4iICsKKwkJCSJzdGF0
aWMgZmluYWwgT2JqZWN0IGZpZWxkMjEgPSBudWxsO1xuIiArCisJCQkic3RhdGljIGZpbmFsIE9i
amVjdCBmaWVsZDIyID0gbnVsbDtcbiIgKworCQkJInN0YXRpYyBmaW5hbCBPYmplY3QgZmllbGQy
MyA9IG51bGw7XG4iICsKKwkJCSJzdGF0aWMgZmluYWwgT2JqZWN0IGZpZWxkMjQgPSBudWxsO1xu
IiArCisJCQkic3RhdGljIGZpbmFsIE9iamVjdCBmaWVsZDI1ID0gbnVsbDtcbiIgKworCQkJInN0
YXRpYyBmaW5hbCBPYmplY3QgZmllbGQyNiA9IG51bGw7XG4iICsKKwkJCSJzdGF0aWMgZmluYWwg
T2JqZWN0IGZpZWxkMjcgPSBudWxsO1xuIiArCisJCQkic3RhdGljIGZpbmFsIE9iamVjdCBmaWVs
ZDI4ID0gbnVsbDtcbiIgKworCQkJInN0YXRpYyBmaW5hbCBPYmplY3QgZmllbGQyOSA9IG51bGw7
XG4iICsKKwkJCSJzdGF0aWMgZmluYWwgT2JqZWN0IGZpZWxkMzAgPSBudWxsO1xuIiArCisJCQki
c3RhdGljIGZpbmFsIE9iamVjdCBmaWVsZDMxID0gbnVsbDtcbiIgKworCQkJInN0YXRpYyBmaW5h
bCBPYmplY3QgZmllbGQzMiA9IG51bGw7XG4iICsKKwkJCSJzdGF0aWMgZmluYWwgT2JqZWN0IGZp
ZWxkMzMgPSBudWxsO1xuIiArCisJCQkic3RhdGljIGZpbmFsIE9iamVjdCBmaWVsZDM0ID0gbnVs
bDtcbiIgKworCQkJInN0YXRpYyBmaW5hbCBPYmplY3QgZmllbGQzNSA9IG51bGw7XG4iICsKKwkJ
CSJzdGF0aWMgZmluYWwgT2JqZWN0IGZpZWxkMzYgPSBudWxsO1xuIiArCisJCQkic3RhdGljIGZp
bmFsIE9iamVjdCBmaWVsZDM3ID0gbnVsbDtcbiIgKworCQkJInN0YXRpYyBmaW5hbCBPYmplY3Qg
ZmllbGQzOCA9IG51bGw7XG4iICsKKwkJCSJzdGF0aWMgZmluYWwgT2JqZWN0IGZpZWxkMzkgPSBu
dWxsO1xuIiArCisJCQkic3RhdGljIGZpbmFsIE9iamVjdCBmaWVsZDQwID0gbnVsbDtcbiIgKwor
CQkJInN0YXRpYyBmaW5hbCBPYmplY3QgZmllbGQ0MSA9IG51bGw7XG4iICsKKwkJCSJzdGF0aWMg
ZmluYWwgT2JqZWN0IGZpZWxkNDIgPSBudWxsO1xuIiArCisJCQkic3RhdGljIGZpbmFsIE9iamVj
dCBmaWVsZDQzID0gbnVsbDtcbiIgKworCQkJInN0YXRpYyBmaW5hbCBPYmplY3QgZmllbGQ0NCA9
IG51bGw7XG4iICsKKwkJCSJzdGF0aWMgZmluYWwgT2JqZWN0IGZpZWxkNDUgPSBudWxsO1xuIiAr
CisJCQkic3RhdGljIGZpbmFsIE9iamVjdCBmaWVsZDQ2ID0gbnVsbDtcbiIgKworCQkJInN0YXRp
YyBmaW5hbCBPYmplY3QgZmllbGQ0NyA9IG51bGw7XG4iICsKKwkJCSJzdGF0aWMgZmluYWwgT2Jq
ZWN0IGZpZWxkNDggPSBudWxsO1xuIiArCisJCQkic3RhdGljIGZpbmFsIE9iamVjdCBmaWVsZDQ5
ID0gbnVsbDtcbiIgKworCQkJInN0YXRpYyBmaW5hbCBPYmplY3QgZmllbGQ1MCA9IG51bGw7XG4i
ICsKKwkJCSJzdGF0aWMgZmluYWwgT2JqZWN0IGZpZWxkNTEgPSBudWxsO1xuIiArCisJCQkic3Rh
dGljIGZpbmFsIE9iamVjdCBmaWVsZDUyID0gbnVsbDtcbiIgKworCQkJInN0YXRpYyBmaW5hbCBP
YmplY3QgZmllbGQ1MyA9IG51bGw7XG4iICsKKwkJCSJzdGF0aWMgZmluYWwgT2JqZWN0IGZpZWxk
NTQgPSBudWxsO1xuIiArCisJCQkic3RhdGljIGZpbmFsIE9iamVjdCBmaWVsZDU1ID0gbnVsbDtc
biIgKworCQkJInN0YXRpYyBmaW5hbCBPYmplY3QgZmllbGQ1NiA9IG51bGw7XG4iICsKKwkJCSJz
dGF0aWMgZmluYWwgT2JqZWN0IGZpZWxkNTcgPSBudWxsO1xuIiArCisJCQkic3RhdGljIGZpbmFs
IE9iamVjdCBmaWVsZDU4ID0gbnVsbDtcbiIgKworCQkJInN0YXRpYyBmaW5hbCBPYmplY3QgZmll
bGQ1OSA9IG51bGw7XG4iICsKKwkJCSJzdGF0aWMgZmluYWwgT2JqZWN0IGZpZWxkNjAgPSBudWxs
O1xuIiArCisJCQkic3RhdGljIGZpbmFsIE9iamVjdCBmaWVsZDYxID0gbnVsbDtcbiIgKworCQkJ
InN0YXRpYyBmaW5hbCBPYmplY3QgZmllbGQ2MiA9IG51bGw7XG4iICsKKwkJCSJzdGF0aWMgZmlu
YWwgT2JqZWN0IGZpZWxkNjMgPSBudWxsO1xuIiArCisJCQkic3RhdGljIGZpbmFsIE9iamVjdCBm
aWVsZDY0ID0gbnVsbDtcbiIgKworCQkJInN0YXRpYyBmaW5hbCBPYmplY3QgZmllbGQ2NSA9IG51
bGw7XG4iICsKKwkJCSJzdGF0aWMgZmluYWwgT2JqZWN0IGZpZWxkNjYgPSBudWxsO1xuIiArCisJ
CQkic3RhdGljIGZpbmFsIE9iamVjdCBmaWVsZDY3ID0gbnVsbDtcbiIgKworCQkJInN0YXRpYyBm
aW5hbCBPYmplY3QgZmllbGQ2OCA9IG51bGw7XG4iICsKKwkJCSJzdGF0aWMgZmluYWwgT2JqZWN0
IGZpZWxkNjkgPSBudWxsO1xuIiArCisJCQkiZmluYWwgT2JqZWN0IGZpZWxkMDAgPSBudWxsOyBc
biIgKworCQkJImZpbmFsIE9iamVjdCBmaWVsZDAxID0gbnVsbDsgXG4iICsKKwkJCSJmaW5hbCBP
YmplY3QgZmllbGQwMiA9IG51bGw7IFxuIiArCisJCQkiZmluYWwgT2JqZWN0IGZpZWxkMDMgPSBu
dWxsOyBcbiIgKworCQkJImZpbmFsIE9iamVjdCBmaWVsZDA0ID0gbnVsbDsgXG4iICsKKwkJCSJm
aW5hbCBPYmplY3QgZmllbGQwNSA9IG51bGw7IFxuIiArCisJCQkiZmluYWwgT2JqZWN0IGZpZWxk
MDYgPSBudWxsOyBcbiIgKworCQkJImZpbmFsIE9iamVjdCBmaWVsZDA3ID0gbnVsbDsgXG4iICsK
KwkJCSJmaW5hbCBPYmplY3QgZmllbGQwOCA9IG51bGw7IFxuIiArCisJCQkiZmluYWwgT2JqZWN0
IGZpZWxkMDkgPSBudWxsOyBcbiIgKworCQkJImZpbmFsIE9iamVjdCBmaWVsZDAxMCA9IG51bGw7
XG4iICsKKwkJCSJmaW5hbCBPYmplY3QgZmllbGQwMTEgPSBudWxsO1xuIiArCisJCQkiZmluYWwg
T2JqZWN0IGZpZWxkMDEyID0gbnVsbDtcbiIgKworCQkJImZpbmFsIE9iamVjdCBmaWVsZDAxMyA9
IG51bGw7XG4iICsKKwkJCSJmaW5hbCBPYmplY3QgZmllbGQwMTQgPSBudWxsO1xuIiArCisJCQki
ZmluYWwgT2JqZWN0IGZpZWxkMDE1ID0gbnVsbDtcbiIgKworCQkJImZpbmFsIE9iamVjdCBmaWVs
ZDAxNiA9IG51bGw7XG4iICsKKwkJCSJmaW5hbCBPYmplY3QgZmllbGQwMTcgPSBudWxsO1xuIiAr
CisJCQkiZmluYWwgT2JqZWN0IGZpZWxkMDE4ID0gbnVsbDtcbiIgKworCQkJImZpbmFsIE9iamVj
dCBmaWVsZDAxOSA9IG51bGw7XG4iICsKKwkJCSJmaW5hbCBPYmplY3QgZmllbGQwMjAgPSBudWxs
O1xuIiArCisJCQkiZmluYWwgT2JqZWN0IGZpZWxkMDIxID0gbnVsbDtcbiIgKworCQkJImZpbmFs
IE9iamVjdCBmaWVsZDAyMiA9IG51bGw7XG4iICsKKwkJCSJmaW5hbCBPYmplY3QgZmllbGQwMjMg
PSBudWxsO1xuIiArCisJCQkiZmluYWwgT2JqZWN0IGZpZWxkMDI0ID0gbnVsbDtcbiIgKworCQkJ
ImZpbmFsIE9iamVjdCBmaWVsZDAyNSA9IG51bGw7XG4iICsKKwkJCSJmaW5hbCBPYmplY3QgZmll
bGQwMjYgPSBudWxsO1xuIiArCisJCQkiZmluYWwgT2JqZWN0IGZpZWxkMDI3ID0gbnVsbDtcbiIg
KworCQkJImZpbmFsIE9iamVjdCBmaWVsZDAyOCA9IG51bGw7XG4iICsKKwkJCSJmaW5hbCBPYmpl
Y3QgZmllbGQwMjkgPSBudWxsO1xuIiArCisJCQkiZmluYWwgT2JqZWN0IGZpZWxkMDMwID0gbnVs
bDtcbiIgKworCQkJImZpbmFsIE9iamVjdCBmaWVsZDAzMSA9IG51bGw7XG4iICsKKwkJCSJmaW5h
bCBPYmplY3QgZmllbGQwMzIgPSBudWxsO1xuIiArCisJCQkiZmluYWwgT2JqZWN0IGZpZWxkMDMz
ID0gbnVsbDtcbiIgKworCQkJImZpbmFsIE9iamVjdCBmaWVsZDAzNCA9IG51bGw7XG4iICsKKwkJ
CSJmaW5hbCBPYmplY3QgZmllbGQwMzUgPSBudWxsO1xuIiArCisJCQkiZmluYWwgT2JqZWN0IGZp
ZWxkMDM2ID0gbnVsbDtcbiIgKworCQkJImZpbmFsIE9iamVjdCBmaWVsZDAzNyA9IG51bGw7XG4i
ICsKKwkJCSJmaW5hbCBPYmplY3QgZmllbGQwMzggPSBudWxsO1xuIiArCisJCQkiZmluYWwgT2Jq
ZWN0IGZpZWxkMDM5ID0gbnVsbDtcbiIgKworCQkJImZpbmFsIE9iamVjdCBmaWVsZDA0MCA9IG51
bGw7XG4iICsKKwkJCSJmaW5hbCBPYmplY3QgZmllbGQwNDEgPSBudWxsO1xuIiArCisJCQkiZmlu
YWwgT2JqZWN0IGZpZWxkMDQyID0gbnVsbDtcbiIgKworCQkJImZpbmFsIE9iamVjdCBmaWVsZDA0
MyA9IG51bGw7XG4iICsKKwkJCSJmaW5hbCBPYmplY3QgZmllbGQwNDQgPSBudWxsO1xuIiArCisJ
CQkiZmluYWwgT2JqZWN0IGZpZWxkMDQ1ID0gbnVsbDtcbiIgKworCQkJImZpbmFsIE9iamVjdCBm
aWVsZDA0NiA9IG51bGw7XG4iICsKKwkJCSJmaW5hbCBPYmplY3QgZmllbGQwNDcgPSBudWxsO1xu
IiArCisJCQkiZmluYWwgT2JqZWN0IGZpZWxkMDQ4ID0gbnVsbDtcbiIgKworCQkJImZpbmFsIE9i
amVjdCBmaWVsZDA0OSA9IG51bGw7XG4iICsKKwkJCSJmaW5hbCBPYmplY3QgZmllbGQwNTAgPSBu
dWxsO1xuIiArCisJCQkiZmluYWwgT2JqZWN0IGZpZWxkMDUxID0gbnVsbDtcbiIgKworCQkJImZp
bmFsIE9iamVjdCBmaWVsZDA1MiA9IG51bGw7XG4iICsKKwkJCSJmaW5hbCBPYmplY3QgZmllbGQw
NTMgPSBudWxsO1xuIiArCisJCQkiZmluYWwgT2JqZWN0IGZpZWxkMDU0ID0gbnVsbDtcbiIgKwor
CQkJImZpbmFsIE9iamVjdCBmaWVsZDA1NSA9IG51bGw7XG4iICsKKwkJCSJmaW5hbCBPYmplY3Qg
ZmllbGQwNTYgPSBudWxsO1xuIiArCisJCQkiZmluYWwgT2JqZWN0IGZpZWxkMDU3ID0gbnVsbDtc
biIgKworCQkJImZpbmFsIE9iamVjdCBmaWVsZDA1OCA9IG51bGw7XG4iICsKKwkJCSJmaW5hbCBP
YmplY3QgZmllbGQwNTkgPSBudWxsO1xuIiArCisJCQkiZmluYWwgT2JqZWN0IGZpZWxkMDYwID0g
bnVsbDtcbiIgKworCQkJImZpbmFsIE9iamVjdCBmaWVsZDA2MSA9IG51bGw7XG4iICsKKwkJCSJm
aW5hbCBPYmplY3QgZmllbGQwNjIgPSBudWxsO1xuIiArCisJCQkiZmluYWwgT2JqZWN0IGZpZWxk
MDYzID0gbnVsbDtcbiIgKworCQkJImZpbmFsIE9iamVjdCBmaWVsZDA2NCA9IG51bGw7XG4iICsK
KwkJCSJmaW5hbCBPYmplY3QgZmllbGQwNjUgPSBudWxsO1xuIiArCisJCQkiZmluYWwgT2JqZWN0
IGZpZWxkMDY2ID0gbnVsbDtcbiIgKworCQkJImZpbmFsIE9iamVjdCBmaWVsZDA2NyA9IG51bGw7
XG4iICsKKwkJCSJmaW5hbCBPYmplY3QgZmllbGQwNjggPSBudWxsO1xuIiArCisJCQkiZmluYWwg
T2JqZWN0IGZpZWxkMDY5ID0gbnVsbDtcbiIgKworCQkJIiAgcHVibGljIFgoKSB7XG4iICsKKwkJ
CSIgIH1cbiIgKworCQkJIn1cbiJ9LAorCQkJIiIKKwkpOworfQogfQpkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2FzdC9BYnN0cmFjdE1ldGhvZERlY2xhcmF0aW9uLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Fic3Ry
YWN0TWV0aG9kRGVjbGFyYXRpb24uamF2YQppbmRleCBhOTk2Y2ZmLi4yZWI1NGM4IDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvYXN0L0Fic3RyYWN0TWV0aG9kRGVjbGFyYXRpb24uamF2YQorKysgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvYXN0L0Fic3RyYWN0TWV0aG9kRGVjbGFyYXRpb24uamF2YQpAQCAtMjE3LDcgKzIxNyw3IEBA
CiAJCQkJCQlpZiAobm9uTnVsbE5lc3MuYm9vbGVhblZhbHVlKCkpCiAJCQkJCQkJZmxvd0luZm8u
bWFya0FzRGVmaW5pdGVseU5vbk51bGwodGhpcy5hcmd1bWVudHNbaV0uYmluZGluZyk7CiAJCQkJ
CQllbHNlCi0JCQkJCQkJZmxvd0luZm8ubWFya1BvdGVudGlhbGx5TnVsbEJpdCh0aGlzLmFyZ3Vt
ZW50c1tpXS5iaW5kaW5nKTsKKwkJCQkJCQlmbG93SW5mby5tYXJrTnVsbFN0YXR1cyh0aGlzLmFy
Z3VtZW50c1tpXS5iaW5kaW5nLCBGbG93SW5mby5QT1RFTlRJQUxMWV9OVUxMKTsKIAkJCQkJfQog
CQkJCX0KIAkJCQkvLyB0YWcgcGFyYW1ldGVycyBhcyBiZWluZyBzZXQ6CmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvYXN0L0Zha2VkVHJhY2tpbmdWYXJpYWJsZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9GYWtlZFRy
YWNraW5nVmFyaWFibGUuamF2YQppbmRleCA2MzQzMjIxLi44YzhlZWM2IDEwMDY0NAotLS0gYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvYXN0L0Zha2VkVHJhY2tpbmdWYXJpYWJsZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvRmFr
ZWRUcmFja2luZ1ZhcmlhYmxlLmphdmEKQEAgLTQxOSw3ICs0MTksNyBAQAogCQkJLy8gd2UgKm1p
Z2h0KiBiZSByZXNwb25zaWJsZSBmb3IgdGhlIHJlc291cmNlIG9idGFpbmVkCiAJCQlGYWtlZFRy
YWNraW5nVmFyaWFibGUgdHJhY2tlciA9IG5ldyBGYWtlZFRyYWNraW5nVmFyaWFibGUobG9jYWws
IGxvY2F0aW9uKTsKIAkJCXRyYWNrZXIuZ2xvYmFsQ2xvc2luZ1N0YXRlIHw9IFNIQVJFRF9XSVRI
X09VVFNJREU7Ci0JCQlmbG93SW5mby5tYXJrUG90ZW50aWFsbHlOdWxsQml0KHRyYWNrZXIuYmlu
ZGluZyk7IC8vIHNoZWQgc29tZSBkb3VidAorCQkJZmxvd0luZm8ubWFya051bGxTdGF0dXModHJh
Y2tlci5iaW5kaW5nLCBGbG93SW5mby5QT1RFTlRJQUxMWV9OVUxMKTsgLy8gc2hlZCBzb21lIGRv
dWJ0CiAJCQlyZXR1cm4gdHJhY2tlcjsJCQkKIAkJfSBlbHNlIGlmICgoZXhwcmVzc2lvbi5iaXRz
ICYgUmVzdHJpY3RpdmVGbGFnTUFTSykgPT0gQmluZGluZy5GSUVMRCkgCiAJCXsKZGlmZiAtLWdp
dCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9hc3QvRmllbGRSZWZlcmVuY2UuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvRmllbGRSZWZl
cmVuY2UuamF2YQppbmRleCBlOGM2ZmFiLi5iYzEzNjNhIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0
L0ZpZWxkUmVmZXJlbmNlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9GaWVsZFJlZmVyZW5jZS5qYXZh
CkBAIC02ODIsNyArNjgyLDcgQEAKIAkJCUNsYXNzU2NvcGUgZW5jbG9zaW5nQ2xhc3MgPSBzY29w
ZS5lbmNsb3NpbmdDbGFzc1Njb3BlKCk7CiAJCQl3aGlsZSAoZW5jbG9zaW5nQ2xhc3MgIT0gbnVs
bCkgewogCQkJCVR5cGVEZWNsYXJhdGlvbiB0eXBlID0gZW5jbG9zaW5nQ2xhc3MucmVmZXJlbmNl
Q29udGV4dDsKLQkJCQlpZiAodHlwZSAhPSBudWxsICYmICh0aGlzLmJpbmRpbmcuZGVjbGFyaW5n
Q2xhc3Mub3JpZ2luYWwoKSA9PSB0eXBlLmJpbmRpbmcpKSByZXR1cm4gdGhpcy5iaW5kaW5nOwor
CQkJCWlmICh0eXBlICE9IG51bGwgJiYgdGhpcy5iaW5kaW5nLmRlY2xhcmluZ0NsYXNzICE9IG51
bGwgJiYgKHRoaXMuYmluZGluZy5kZWNsYXJpbmdDbGFzcy5vcmlnaW5hbCgpID09IHR5cGUuYmlu
ZGluZykpIHJldHVybiB0aGlzLmJpbmRpbmc7CiAJCQkJZW5jbG9zaW5nQ2xhc3MgPSBlbmNsb3Np
bmdDbGFzcy5lbmNsb3NpbmdDbGFzc1Njb3BlKCk7CiAJCQl9CiAJCX0KZGlmZiAtLWdpdCBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9mbG93L1VuY29uZGl0aW9uYWxGbG93SW5mby5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cvVW5jb25k
aXRpb25hbEZsb3dJbmZvLmphdmEKaW5kZXggYWMwMjhiMC4uZjgyOWUxMCAxMDA2NDQKLS0tIGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2Zsb3cvVW5jb25kaXRpb25hbEZsb3dJbmZvLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cv
VW5jb25kaXRpb25hbEZsb3dJbmZvLmphdmEKQEAgLTE2MTMsMTEgKzE2MTMsMTUgQEAKICAgICAJ
aW50IG90aGVyTGVuID0gb3RoZXIuZXh0cmFDb25zdGFudEZpZWxkTWFzay5sZW5ndGg7CiAgICAg
CWlmICh0aGlzLmV4dHJhQ29uc3RhbnRGaWVsZE1hc2sgIT0gbnVsbCkgewogICAgIAkJb2xkTGVu
Z3RoID0gdGhpcy5leHRyYUNvbnN0YW50RmllbGRNYXNrLmxlbmd0aDsKLQkgICAgCWlmIChvdGhl
ckxlbiA+PSAob2xkTGVuZ3RoID0gdGhpcy5leHRyYUNvbnN0YW50RmllbGRNYXNrLmxlbmd0aCkp
IHsKKwkgICAgCWlmIChvdGhlckxlbiA+IChvbGRMZW5ndGggPSB0aGlzLmV4dHJhQ29uc3RhbnRG
aWVsZE1hc2subGVuZ3RoKSkgewogCQkJCVN5c3RlbS5hcnJheWNvcHkodGhpcy5leHRyYUNvbnN0
YW50RmllbGRNYXNrLCAwLCAodGhpcy5leHRyYUNvbnN0YW50RmllbGRNYXNrID0gbmV3IGxvbmdb
b3RoZXJMZW5dKSwgMCwgb2xkTGVuZ3RoKTsKLQkJCX0KLQkgICAgCWZvciAoaW50IGkgPSAwOyBp
IDwgdGhpcy5leHRyYUNvbnN0YW50RmllbGRNYXNrLmxlbmd0aDsgaSsrKSB7Ci0JCQkJdGhpcy5l
eHRyYUNvbnN0YW50RmllbGRNYXNrW2ldIHw9IG90aGVyLmV4dHJhQ29uc3RhbnRGaWVsZE1hc2tb
aV07CisJCQkJZm9yIChpbnQgaSA9IDA7IGkgPCBvbGRMZW5ndGg7IGkrKykgeworCQkJCQl0aGlz
LmV4dHJhQ29uc3RhbnRGaWVsZE1hc2tbaV0gfD0gb3RoZXIuZXh0cmFDb25zdGFudEZpZWxkTWFz
a1tpXTsKKwkJCQl9CisJCQl9IGVsc2UgeworCQkJCWZvciAoaW50IGkgPSAwOyBpIDwgb3RoZXJM
ZW47IGkrKykgeworCQkJCQl0aGlzLmV4dHJhQ29uc3RhbnRGaWVsZE1hc2tbaV0gfD0gb3RoZXIu
ZXh0cmFDb25zdGFudEZpZWxkTWFza1tpXTsKKwkJCQl9CiAJCQl9CiAgICAgCX0gZWxzZSB7CiAg
ICAgCQl0aGlzLmV4dHJhQ29uc3RhbnRGaWVsZE1hc2sgPSBuZXcgbG9uZ1tvdGhlckxlbl07
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>209948</attachid>
            <date>2012-01-23 18:16:00 -0500</date>
            <delta_ts>2012-01-24 04:05:21 -0500</delta_ts>
            <desc>counter proposal</desc>
            <filename>Bug_369381.patch</filename>
            <type>text/plain</type>
            <size>4502</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL051bGxSZWZlcmVuY2VU
ZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9OdWxsUmVmZXJlbmNlVGVz
dC5qYXZhCmluZGV4IDQ2ZWMwMWUuLjNkZjdiZTUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21w
aWxlci9yZWdyZXNzaW9uL051bGxSZWZlcmVuY2VUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vTnVsbFJlZmVyZW5jZVRlc3QuamF2YQpAQCAtNDksNyArNDksNyBA
QCBwdWJsaWMgTnVsbFJlZmVyZW5jZVRlc3QoU3RyaW5nIG5hbWUpIHsKIC8vIE9ubHkgdGhlIGhp
Z2hlc3QgY29tcGxpYW5jZSBsZXZlbCBpcyBydW47IGFkZCB0aGUgVk0gYXJndW1lbnQKIC8vIC1E
Y29tcGxpYW5jZT0xLjQgKGZvciBleGFtcGxlKSB0byBsb3dlciBpdCBpZiBuZWVkZWQKIHN0YXRp
YyB7Ci0vLwkJVEVTVFNfTkFNRVMgPSBuZXcgU3RyaW5nW10geyAidGVzdEJ1ZzI0NzU2NGIiIH07
CisvLwkJVEVTVFNfTkFNRVMgPSBuZXcgU3RyaW5nW10geyAidGVzdEJ1ZzI0NzU2NG5fMiIgfTsK
IC8vCQlURVNUU19OVU1CRVJTID0gbmV3IGludFtdIHsgNTYxIH07CiAvLwkJVEVTVFNfUkFOR0Ug
PSBuZXcgaW50W10geyAxLCAyMDQ5IH07CiB9CkBAIC0xNzk0MCw0ICsxNzk0MCw1MCBAQCBwdWJs
aWMgdm9pZCB0ZXN0QnVnMjQ3NTY0bigpIHsKIAkJCSIiCiAJKTsKIH0KKy8vIG51bGwgYW5hbHlz
aXMgLS0gY2hlY2sgcmVzZXR0aW5nIG9mIGxhcmdlIG5vLiBvZiBmaWVsZHMKKy8vIHNlZSBhbHNv
IGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zNjkzODEKK3B1
YmxpYyB2b2lkIHRlc3RCdWcyNDc1NjRuXzIoKSB7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJ
CW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsK
KwkJCSJPYmplY3QgZmllbGQwLCBcbiIgKwkJCQkJCS8vIG1vcmUgdGhhbiA2NCBmaWVsZHMKKwkJ
CSJmaWVsZDEsIGZpZWxkMiwgZmllbGQzLCBmaWVsZDQsIFxuIiArCisJCQkiZmllbGQ1LCBmaWVs
ZDYsIGZpZWxkNywgZmllbGQ4LCBcbiIgKworCQkJImZpZWxkOSwgZmllbGQxMCwgZmllbGQxMSwg
ZmllbGQxMiwgXG4iICsKKwkJCSJmaWVsZDEzLCBmaWVsZDE0LCBmaWVsZDE1LCBmaWVsZDE2LCBc
biIgKworCQkJImZpZWxkMTcsIGZpZWxkMTgsIGZpZWxkMTksIGZpZWxkMjAsIFxuIiArCisJCQki
ZmllbGQyMSwgZmllbGQyMiwgZmllbGQyMywgZmllbGQyNCwgXG4iICsKKwkJCSJmaWVsZDI1LCBm
aWVsZDI2LCBmaWVsZDI3LCBmaWVsZDI4LCBcbiIgKworCQkJImZpZWxkMjksIGZpZWxkMzAsIGZp
ZWxkMzEsIGZpZWxkMzIsIFxuIiArCisJCQkiZmllbGQzMywgZmllbGQzNCwgZmllbGQzNSwgZmll
bGQzNiwgXG4iICsKKwkJCSJmaWVsZDM3LCBmaWVsZDM4LCBmaWVsZDM5LCBmaWVsZDQwLCBcbiIg
KworCQkJImZpZWxkNDEsIGZpZWxkNDIsIGZpZWxkNDMsIGZpZWxkNDQsIFxuIiArCisJCQkiZmll
bGQ0NSwgZmllbGQ0NiwgZmllbGQ0NywgZmllbGQ0OCwgXG4iICsKKwkJCSJmaWVsZDQ5LCBmaWVs
ZDUwLCBmaWVsZDUxLCBmaWVsZDUyLCBcbiIgKworCQkJImZpZWxkNTMsIGZpZWxkNTQsIGZpZWxk
NTUsIGZpZWxkNTYsIFxuIiArCisJCQkiZmllbGQ1NywgZmllbGQ1OCwgZmllbGQ1OSwgZmllbGQ2
MCwgXG4iICsKKwkJCSJmaWVsZDYxLCBmaWVsZDYyLCBmaWVsZDYzLCBmaWVsZDY0OyBcbiIgKwor
CQkJIiAgc3RhdGljIGZpbmFsIE9iamVjdCBvMiA9IG5ldyBPYmplY3QoKTtcbiIgKworCQkJIiAg
cHVibGljIFgoKSB7XG4iICsKKwkJCSIgICAgT2JqZWN0IGwwLCBsMSwgbDIsIGwzLCBsNCwgbDUs
IGw2LCBsNywgbDgsIGw5LFxuIiArCQkvLyBtb3JlIHRoYW4gNjQgbG9jYWxzCisJCQkiICAgICAg
ICBsMTAsIGwxMSwgbDEyLCBsMTMsIGwxNCwgbDE1LCBsMTYsIGwxNywgbDE4LCBsMTksXG4iICsK
KwkJCSIgICAgICAgIGwyMCwgbDIxLCBsMjIsIGwyMywgbDI0LCBsMjUsIGwyNiwgbDI3LCBsMjgs
IGwyOSxcbiIgKworCQkJIiAgICAgICAgbDMwLCBsMzEsIGwzMiwgbDMzLCBsMzQsIGwzNSwgbDM2
LCBsMzcsIGwzOCwgbDM5LFxuIiArCisJCQkiICAgICAgICBsNDAsIGw0MSwgbDQyLCBsNDMsIGw0
NCwgbDQ1LCBsNDYsIGw0NywgbDQ4LCBsNDksXG4iICsKKwkJCSIgICAgICAgIGw1MCwgbDUxLCBs
NTIsIGw1MywgbDU0LCBsNTUsIGw1NiwgbDU3LCBsNTgsIGw1OSxcbiIgKworCQkJIiAgICAgICAg
bDYwLCBsNjEsIGw2MiwgbDYzLCBsNjQsIGw2NSwgbDY2LCBsNjcsIGw2OCwgbDY5O1xuIiArCisJ
CQkiCSBsNjkgPSBudWxsO1xuIiArCQkvLyBsNjkgaGFzIGJpdHMgaW4gZXh0cmFbeF1bMV0KKwkJ
CSIJIG8yLnRvU3RyaW5nKCk7XG4iICsJLy8gcmVzZXROdWxsSW5mb0ZvckZpZWxkcygpIG11c3Qg
bm90IHJlc2V0IGFueSBiaXRzIGluIGV4dHJhW3hdWzFdCisJCQkiCSBsNjkudG9TdHJpbmcoKTtc
biIgKwkvLyB3YXJuIQorCQkJIiAgfVxuIiArCisJCQkifVxuIn0sCisJCQkiLS0tLS0tLS0tLVxu
IiArIAorCQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAzMClcbiIgKyAKKwkJCSIJbDY5
LnRvU3RyaW5nKCk7XG4iICsgCisJCQkiCV5eXlxuIiArIAorCQkJIk51bGwgcG9pbnRlciBhY2Nl
c3M6IFRoZSB2YXJpYWJsZSBsNjkgY2FuIG9ubHkgYmUgbnVsbCBhdCB0aGlzIGxvY2F0aW9uXG4i
ICsgCisJCQkiLS0tLS0tLS0tLVxuIgorCSk7Cit9CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvZmxv
dy9VbmNvbmRpdGlvbmFsRmxvd0luZm8uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L1VuY29uZGl0aW9uYWxG
bG93SW5mby5qYXZhCmluZGV4IGFjMDI4YjAuLjZlOGJhODEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9m
bG93L1VuY29uZGl0aW9uYWxGbG93SW5mby5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9mbG93L1VuY29uZGl0
aW9uYWxGbG93SW5mby5qYXZhCkBAIC0xNTMxLDggKzE1MzEsOSBAQCBwdWJsaWMgdm9pZCByZXNl
dE51bGxJbmZvRm9yRmllbGRzKCkgewogCQkJLy8gdXNlIGV4dHJhIHZlY3RvcgogCQkJaW50IGxv
Y2Fsc1N0YXJ0SW5kZXggPSB0aGlzLm1heEZpZWxkQ291bnQvQml0Q2FjaGVTaXplIC0gMTsKIAkJ
CWludCBsb2NhbHNTdGFydE9mZnNldCA9IHRoaXMubWF4RmllbGRDb3VudCAlIEJpdENhY2hlU2l6
ZTsKKwkJCWludCBsZW4gPSBNYXRoLm1pbihsb2NhbHNTdGFydEluZGV4KzEsIHRoaXMuZXh0cmFb
Ml0ubGVuZ3RoKTsKIAkJCWlmICh0aGlzLmV4dHJhQ29uc3RhbnRGaWVsZE1hc2sgIT0gbnVsbCl7
Ci0JCQkJZm9yIChpbnQgdmVjdG9ySW5kZXggPSAwOyB2ZWN0b3JJbmRleCA8IHRoaXMuZXh0cmFb
Ml0ubGVuZ3RoOyB2ZWN0b3JJbmRleCsrKSB7CisJCQkJZm9yIChpbnQgdmVjdG9ySW5kZXggPSAw
OyB2ZWN0b3JJbmRleCA8IGxlbjsgdmVjdG9ySW5kZXgrKykgewogCQkJCSAgICBpZiAodmVjdG9y
SW5kZXggPj0gdGhpcy5leHRyYUNvbnN0YW50RmllbGRNYXNrLmxlbmd0aCkgewogCQkJCSAgICAJ
Ly8gbm8gY29uc3RhbnQgZmllbGRzIGFmdGVyIHRoaXMsIGp1c3QgbWFzayBhbGwgZmllbGRzCiAJ
CQkJICAgIAlpZiAodmVjdG9ySW5kZXggPT0gbG9jYWxzU3RhcnRJbmRleCkgewpAQCAtMTU2MCw3
ICsxNTYxLDcgQEAgcHVibGljIHZvaWQgcmVzZXROdWxsSW5mb0ZvckZpZWxkcygpIHsKIAkJCQl9
CiAJCQl9IGVsc2UgewogCQkJCS8vIG5vIGNvbnN0YW50IGZpZWxkcwotCQkJCWZvciAoaW50IHZl
Y3RvckluZGV4ID0gMDsgdmVjdG9ySW5kZXggPCB0aGlzLmV4dHJhWzJdLmxlbmd0aDsgdmVjdG9y
SW5kZXgrKykgeworCQkJCWZvciAoaW50IHZlY3RvckluZGV4ID0gMDsgdmVjdG9ySW5kZXggPCBs
ZW47IHZlY3RvckluZGV4KyspIHsKIAkJCQkgICAgaWYgKHZlY3RvckluZGV4ID09IGxvY2Fsc1N0
YXJ0SW5kZXgpIHsKIAkJCQkgICAgCS8vIHNvbWUgbG9jYWxzLCBzb21lIGZpZWxkcyBhdCB0aGlz
IHZlY3RvckluZGV4CiAJCQkJICAgIAltYXNrID0gLTFMIDw8IGxvY2Fsc1N0YXJ0T2Zmc2V0Owo=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>209955</attachid>
            <date>2012-01-24 03:13:00 -0500</date>
            <delta_ts>2012-01-24 03:13:41 -0500</delta_ts>
            <desc>combined fix + tests</desc>
            <filename>Fixed-bug-369381-nullcompiler-Adding-potential-null-.patch</filename>
            <type>text/plain</type>
            <size>14896</size>
            <attacher name="Ayushman Jain">amj87.iitr</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL051bGxSZWZlcmVuY2VU
ZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9OdWxsUmVmZXJlbmNlVGVz
dC5qYXZhCmluZGV4IDQ2ZWMwMWUuLjU1MDM2MmUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21w
aWxlci9yZWdyZXNzaW9uL051bGxSZWZlcmVuY2VUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vTnVsbFJlZmVyZW5jZVRlc3QuamF2YQpAQCAtNDksNyArNDksNyBA
QAogLy8gT25seSB0aGUgaGlnaGVzdCBjb21wbGlhbmNlIGxldmVsIGlzIHJ1bjsgYWRkIHRoZSBW
TSBhcmd1bWVudAogLy8gLURjb21wbGlhbmNlPTEuNCAoZm9yIGV4YW1wbGUpIHRvIGxvd2VyIGl0
IGlmIG5lZWRlZAogc3RhdGljIHsKLS8vCQlURVNUU19OQU1FUyA9IG5ldyBTdHJpbmdbXSB7ICJ0
ZXN0QnVnMjQ3NTY0YiIgfTsKKy8vCQlURVNUU19OQU1FUyA9IG5ldyBTdHJpbmdbXSB7ICJ0ZXN0
QnVnMjQ3NTY0bl8zIiB9OwogLy8JCVRFU1RTX05VTUJFUlMgPSBuZXcgaW50W10geyA1NjEgfTsK
IC8vCQlURVNUU19SQU5HRSA9IG5ldyBpbnRbXSB7IDEsIDIwNDkgfTsKIH0KQEAgLTE3OTQwLDQg
KzE3OTQwLDIyMyBAQAogCQkJIiIKIAkpOwogfQorLy8gbnVsbCBhbmFseXNpcyAtLSBjaGVjayBy
ZXNldHRpbmcgb2YgbGFyZ2Ugbm8uIG9mIGZpZWxkcworLy8gc2VlIGFsc28gaHR0cHM6Ly9idWdz
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM2OTM4MQorcHVibGljIHZvaWQgdGVz
dEJ1ZzI0NzU2NG5fMigpIHsKKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKKwkJbmV3IFN0cmluZ1td
IHsKKwkJCSJYLmphdmEiLAorCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIk9iamVjdCBm
aWVsZDAsIFxuIiArCQkJCQkJLy8gbW9yZSB0aGFuIDY0IGZpZWxkcworCQkJImZpZWxkMSwgZmll
bGQyLCBmaWVsZDMsIGZpZWxkNCwgXG4iICsKKwkJCSJmaWVsZDUsIGZpZWxkNiwgZmllbGQ3LCBm
aWVsZDgsIFxuIiArCisJCQkiZmllbGQ5LCBmaWVsZDEwLCBmaWVsZDExLCBmaWVsZDEyLCBcbiIg
KworCQkJImZpZWxkMTMsIGZpZWxkMTQsIGZpZWxkMTUsIGZpZWxkMTYsIFxuIiArCisJCQkiZmll
bGQxNywgZmllbGQxOCwgZmllbGQxOSwgZmllbGQyMCwgXG4iICsKKwkJCSJmaWVsZDIxLCBmaWVs
ZDIyLCBmaWVsZDIzLCBmaWVsZDI0LCBcbiIgKworCQkJImZpZWxkMjUsIGZpZWxkMjYsIGZpZWxk
MjcsIGZpZWxkMjgsIFxuIiArCisJCQkiZmllbGQyOSwgZmllbGQzMCwgZmllbGQzMSwgZmllbGQz
MiwgXG4iICsKKwkJCSJmaWVsZDMzLCBmaWVsZDM0LCBmaWVsZDM1LCBmaWVsZDM2LCBcbiIgKwor
CQkJImZpZWxkMzcsIGZpZWxkMzgsIGZpZWxkMzksIGZpZWxkNDAsIFxuIiArCisJCQkiZmllbGQ0
MSwgZmllbGQ0MiwgZmllbGQ0MywgZmllbGQ0NCwgXG4iICsKKwkJCSJmaWVsZDQ1LCBmaWVsZDQ2
LCBmaWVsZDQ3LCBmaWVsZDQ4LCBcbiIgKworCQkJImZpZWxkNDksIGZpZWxkNTAsIGZpZWxkNTEs
IGZpZWxkNTIsIFxuIiArCisJCQkiZmllbGQ1MywgZmllbGQ1NCwgZmllbGQ1NSwgZmllbGQ1Niwg
XG4iICsKKwkJCSJmaWVsZDU3LCBmaWVsZDU4LCBmaWVsZDU5LCBmaWVsZDYwLCBcbiIgKworCQkJ
ImZpZWxkNjEsIGZpZWxkNjIsIGZpZWxkNjMsIGZpZWxkNjQ7IFxuIiArCisJCQkiICBzdGF0aWMg
ZmluYWwgT2JqZWN0IG8yID0gbmV3IE9iamVjdCgpO1xuIiArCisJCQkiICBwdWJsaWMgWCgpIHtc
biIgKworCQkJIiAgICBPYmplY3QgbDAsIGwxLCBsMiwgbDMsIGw0LCBsNSwgbDYsIGw3LCBsOCwg
bDksXG4iICsJCS8vIG1vcmUgdGhhbiA2NCBsb2NhbHMKKwkJCSIgICAgICAgIGwxMCwgbDExLCBs
MTIsIGwxMywgbDE0LCBsMTUsIGwxNiwgbDE3LCBsMTgsIGwxOSxcbiIgKworCQkJIiAgICAgICAg
bDIwLCBsMjEsIGwyMiwgbDIzLCBsMjQsIGwyNSwgbDI2LCBsMjcsIGwyOCwgbDI5LFxuIiArCisJ
CQkiICAgICAgICBsMzAsIGwzMSwgbDMyLCBsMzMsIGwzNCwgbDM1LCBsMzYsIGwzNywgbDM4LCBs
MzksXG4iICsKKwkJCSIgICAgICAgIGw0MCwgbDQxLCBsNDIsIGw0MywgbDQ0LCBsNDUsIGw0Niwg
bDQ3LCBsNDgsIGw0OSxcbiIgKworCQkJIiAgICAgICAgbDUwLCBsNTEsIGw1MiwgbDUzLCBsNTQs
IGw1NSwgbDU2LCBsNTcsIGw1OCwgbDU5LFxuIiArCisJCQkiICAgICAgICBsNjAsIGw2MSwgbDYy
LCBsNjMsIGw2NCwgbDY1LCBsNjYsIGw2NywgbDY4LCBsNjk7XG4iICsKKwkJCSIJIGw2OSA9IG51
bGw7XG4iICsJCS8vIGw2OSBoYXMgYml0cyBpbiBleHRyYVt4XVsxXQorCQkJIgkgbzIudG9TdHJp
bmcoKTtcbiIgKwkvLyByZXNldE51bGxJbmZvRm9yRmllbGRzKCkgbXVzdCBub3QgcmVzZXQgYW55
IGJpdHMgaW4gZXh0cmFbeF1bMV0KKwkJCSIJIGw2OS50b1N0cmluZygpO1xuIiArCS8vIHdhcm4h
CisJCQkiICB9XG4iICsKKwkJCSJ9XG4ifSwKKwkJCSItLS0tLS0tLS0tXG4iICsgCisJCQkiMS4g
RVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDMwKVxuIiArIAorCQkJIglsNjkudG9TdHJpbmcoKTtc
biIgKyAKKwkJCSIJXl5eXG4iICsgCisJCQkiTnVsbCBwb2ludGVyIGFjY2VzczogVGhlIHZhcmlh
YmxlIGw2OSBjYW4gb25seSBiZSBudWxsIGF0IHRoaXMgbG9jYXRpb25cbiIgKyAKKwkJCSItLS0t
LS0tLS0tXG4iCisJKTsKK30KKworLy8gbnVsbCBhbmFseXNpcyAtIHNob3VsZCBub3QgdGhyb3cg
TlBFCisvLyBzZWUgYWxzbyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9MzY5MzgxCitwdWJsaWMgdm9pZCB0ZXN0QnVnMzY5MzgxKCkgeworCXRoaXMucnVuQ29u
Zm9ybVRlc3QoCisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJwdWJsaWMgY2xh
c3MgWCBleHRlbmRzIFhQYXJlbnR7XG4iICsKKwkJCSIgIHB1YmxpYyB2b2lkIGZvbyhYIHgsIGlu
dCBpKSB7XG4iICsKKwkJCSIJIGlmICh0aGlzLmZpZWxkMC5sZW5ndGggPT0gaSl7fVxuIiArCS8v
IGRlY2xhcmluZyBjbGFzcyBvZiAnbGVuZ3RoJyBpcyBudWxsLiBEb250IHRocm93IE5QRQorCQkJ
IiAgfVxuIiArCisJCQkifVxuIiArCisJCQkiY2xhc3MgWFBhcmVudCB7XG4iICsKKwkJCSIgcHJv
dGVjdGVkIE9iamVjdFtdIGZpZWxkMCA9IHtuZXcgT2JqZWN0KCl9OyBcbiIgKworCQkJIn1cbiIK
KwkJCX0sCisJCQkiIgorCSk7Cit9CisKKy8vIG51bGwgYW5hbHlzaXMgLS0gd2l0aCBsYXJnZSBu
by4gb2YgZmllbGRzLCBubyBBSU9PQkUgc2hvdWxkIGJlIHRocm93bgorLy8gbm8uIG9mIHN0YXRp
YyBmaW5hbCBmaWVsZHMgbGVzcyB0aGFuIG5vLiBvZiBmaW5hbC1vbmx5IGZpZWxkcworcHVibGlj
IHZvaWQgX3Rlc3RCdWczNjkzODFhKCkgeworCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCW5ldyBT
dHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSJz
dGF0aWMgZmluYWwgT2JqZWN0IGZpZWxkMCA9IG51bGw7XG4gIiArCisJCQkic3RhdGljIGZpbmFs
IE9iamVjdCBmaWVsZDEgPSBudWxsO1xuICIgKworCQkJInN0YXRpYyBmaW5hbCBPYmplY3QgZmll
bGQyID0gbnVsbDtcbiAiICsKKwkJCSJzdGF0aWMgZmluYWwgT2JqZWN0IGZpZWxkMyA9IG51bGw7
XG4gIiArCisJCQkic3RhdGljIGZpbmFsIE9iamVjdCBmaWVsZDQgPSBudWxsO1xuICIgKworCQkJ
InN0YXRpYyBmaW5hbCBPYmplY3QgZmllbGQ1ID0gbnVsbDtcbiAiICsKKwkJCSJzdGF0aWMgZmlu
YWwgT2JqZWN0IGZpZWxkNiA9IG51bGw7XG4gIiArCisJCQkic3RhdGljIGZpbmFsIE9iamVjdCBm
aWVsZDcgPSBudWxsO1xuICIgKworCQkJInN0YXRpYyBmaW5hbCBPYmplY3QgZmllbGQ4ID0gbnVs
bDtcbiAiICsKKwkJCSJzdGF0aWMgZmluYWwgT2JqZWN0IGZpZWxkOSA9IG51bGw7XG4gIiArCisJ
CQkic3RhdGljIGZpbmFsIE9iamVjdCBmaWVsZDEwID0gbnVsbDtcbiIgKworCQkJInN0YXRpYyBm
aW5hbCBPYmplY3QgZmllbGQxMSA9IG51bGw7XG4iICsKKwkJCSJzdGF0aWMgZmluYWwgT2JqZWN0
IGZpZWxkMTIgPSBudWxsO1xuIiArCisJCQkic3RhdGljIGZpbmFsIE9iamVjdCBmaWVsZDEzID0g
bnVsbDtcbiIgKworCQkJInN0YXRpYyBmaW5hbCBPYmplY3QgZmllbGQxNCA9IG51bGw7XG4iICsK
KwkJCSJzdGF0aWMgZmluYWwgT2JqZWN0IGZpZWxkMTUgPSBudWxsO1xuIiArCisJCQkic3RhdGlj
IGZpbmFsIE9iamVjdCBmaWVsZDE2ID0gbnVsbDtcbiIgKworCQkJInN0YXRpYyBmaW5hbCBPYmpl
Y3QgZmllbGQxNyA9IG51bGw7XG4iICsKKwkJCSJzdGF0aWMgZmluYWwgT2JqZWN0IGZpZWxkMTgg
PSBudWxsO1xuIiArCisJCQkic3RhdGljIGZpbmFsIE9iamVjdCBmaWVsZDE5ID0gbnVsbDtcbiIg
KworCQkJInN0YXRpYyBmaW5hbCBPYmplY3QgZmllbGQyMCA9IG51bGw7XG4iICsKKwkJCSJzdGF0
aWMgZmluYWwgT2JqZWN0IGZpZWxkMjEgPSBudWxsO1xuIiArCisJCQkic3RhdGljIGZpbmFsIE9i
amVjdCBmaWVsZDIyID0gbnVsbDtcbiIgKworCQkJInN0YXRpYyBmaW5hbCBPYmplY3QgZmllbGQy
MyA9IG51bGw7XG4iICsKKwkJCSJzdGF0aWMgZmluYWwgT2JqZWN0IGZpZWxkMjQgPSBudWxsO1xu
IiArCisJCQkic3RhdGljIGZpbmFsIE9iamVjdCBmaWVsZDI1ID0gbnVsbDtcbiIgKworCQkJInN0
YXRpYyBmaW5hbCBPYmplY3QgZmllbGQyNiA9IG51bGw7XG4iICsKKwkJCSJzdGF0aWMgZmluYWwg
T2JqZWN0IGZpZWxkMjcgPSBudWxsO1xuIiArCisJCQkic3RhdGljIGZpbmFsIE9iamVjdCBmaWVs
ZDI4ID0gbnVsbDtcbiIgKworCQkJInN0YXRpYyBmaW5hbCBPYmplY3QgZmllbGQyOSA9IG51bGw7
XG4iICsKKwkJCSJzdGF0aWMgZmluYWwgT2JqZWN0IGZpZWxkMzAgPSBudWxsO1xuIiArCisJCQki
c3RhdGljIGZpbmFsIE9iamVjdCBmaWVsZDMxID0gbnVsbDtcbiIgKworCQkJInN0YXRpYyBmaW5h
bCBPYmplY3QgZmllbGQzMiA9IG51bGw7XG4iICsKKwkJCSJzdGF0aWMgZmluYWwgT2JqZWN0IGZp
ZWxkMzMgPSBudWxsO1xuIiArCisJCQkic3RhdGljIGZpbmFsIE9iamVjdCBmaWVsZDM0ID0gbnVs
bDtcbiIgKworCQkJInN0YXRpYyBmaW5hbCBPYmplY3QgZmllbGQzNSA9IG51bGw7XG4iICsKKwkJ
CSJzdGF0aWMgZmluYWwgT2JqZWN0IGZpZWxkMzYgPSBudWxsO1xuIiArCisJCQkic3RhdGljIGZp
bmFsIE9iamVjdCBmaWVsZDM3ID0gbnVsbDtcbiIgKworCQkJInN0YXRpYyBmaW5hbCBPYmplY3Qg
ZmllbGQzOCA9IG51bGw7XG4iICsKKwkJCSJzdGF0aWMgZmluYWwgT2JqZWN0IGZpZWxkMzkgPSBu
dWxsO1xuIiArCisJCQkic3RhdGljIGZpbmFsIE9iamVjdCBmaWVsZDQwID0gbnVsbDtcbiIgKwor
CQkJInN0YXRpYyBmaW5hbCBPYmplY3QgZmllbGQ0MSA9IG51bGw7XG4iICsKKwkJCSJzdGF0aWMg
ZmluYWwgT2JqZWN0IGZpZWxkNDIgPSBudWxsO1xuIiArCisJCQkic3RhdGljIGZpbmFsIE9iamVj
dCBmaWVsZDQzID0gbnVsbDtcbiIgKworCQkJInN0YXRpYyBmaW5hbCBPYmplY3QgZmllbGQ0NCA9
IG51bGw7XG4iICsKKwkJCSJzdGF0aWMgZmluYWwgT2JqZWN0IGZpZWxkNDUgPSBudWxsO1xuIiAr
CisJCQkic3RhdGljIGZpbmFsIE9iamVjdCBmaWVsZDQ2ID0gbnVsbDtcbiIgKworCQkJInN0YXRp
YyBmaW5hbCBPYmplY3QgZmllbGQ0NyA9IG51bGw7XG4iICsKKwkJCSJzdGF0aWMgZmluYWwgT2Jq
ZWN0IGZpZWxkNDggPSBudWxsO1xuIiArCisJCQkic3RhdGljIGZpbmFsIE9iamVjdCBmaWVsZDQ5
ID0gbnVsbDtcbiIgKworCQkJInN0YXRpYyBmaW5hbCBPYmplY3QgZmllbGQ1MCA9IG51bGw7XG4i
ICsKKwkJCSJzdGF0aWMgZmluYWwgT2JqZWN0IGZpZWxkNTEgPSBudWxsO1xuIiArCisJCQkic3Rh
dGljIGZpbmFsIE9iamVjdCBmaWVsZDUyID0gbnVsbDtcbiIgKworCQkJInN0YXRpYyBmaW5hbCBP
YmplY3QgZmllbGQ1MyA9IG51bGw7XG4iICsKKwkJCSJzdGF0aWMgZmluYWwgT2JqZWN0IGZpZWxk
NTQgPSBudWxsO1xuIiArCisJCQkic3RhdGljIGZpbmFsIE9iamVjdCBmaWVsZDU1ID0gbnVsbDtc
biIgKworCQkJInN0YXRpYyBmaW5hbCBPYmplY3QgZmllbGQ1NiA9IG51bGw7XG4iICsKKwkJCSJz
dGF0aWMgZmluYWwgT2JqZWN0IGZpZWxkNTcgPSBudWxsO1xuIiArCisJCQkic3RhdGljIGZpbmFs
IE9iamVjdCBmaWVsZDU4ID0gbnVsbDtcbiIgKworCQkJInN0YXRpYyBmaW5hbCBPYmplY3QgZmll
bGQ1OSA9IG51bGw7XG4iICsKKwkJCSJzdGF0aWMgZmluYWwgT2JqZWN0IGZpZWxkNjAgPSBudWxs
O1xuIiArCisJCQkic3RhdGljIGZpbmFsIE9iamVjdCBmaWVsZDYxID0gbnVsbDtcbiIgKworCQkJ
InN0YXRpYyBmaW5hbCBPYmplY3QgZmllbGQ2MiA9IG51bGw7XG4iICsKKwkJCSJzdGF0aWMgZmlu
YWwgT2JqZWN0IGZpZWxkNjMgPSBudWxsO1xuIiArCisJCQkic3RhdGljIGZpbmFsIE9iamVjdCBm
aWVsZDY0ID0gbnVsbDtcbiIgKworCQkJInN0YXRpYyBmaW5hbCBPYmplY3QgZmllbGQ2NSA9IG51
bGw7XG4iICsKKwkJCSJzdGF0aWMgZmluYWwgT2JqZWN0IGZpZWxkNjYgPSBudWxsO1xuIiArCisJ
CQkic3RhdGljIGZpbmFsIE9iamVjdCBmaWVsZDY3ID0gbnVsbDtcbiIgKworCQkJInN0YXRpYyBm
aW5hbCBPYmplY3QgZmllbGQ2OCA9IG51bGw7XG4iICsKKwkJCSJzdGF0aWMgZmluYWwgT2JqZWN0
IGZpZWxkNjkgPSBudWxsO1xuIiArCisJCQkiZmluYWwgT2JqZWN0IGZpZWxkMDAgPSBudWxsOyBc
biIgKworCQkJImZpbmFsIE9iamVjdCBmaWVsZDAxID0gbnVsbDsgXG4iICsKKwkJCSJmaW5hbCBP
YmplY3QgZmllbGQwMiA9IG51bGw7IFxuIiArCisJCQkiZmluYWwgT2JqZWN0IGZpZWxkMDMgPSBu
dWxsOyBcbiIgKworCQkJImZpbmFsIE9iamVjdCBmaWVsZDA0ID0gbnVsbDsgXG4iICsKKwkJCSJm
aW5hbCBPYmplY3QgZmllbGQwNSA9IG51bGw7IFxuIiArCisJCQkiZmluYWwgT2JqZWN0IGZpZWxk
MDYgPSBudWxsOyBcbiIgKworCQkJImZpbmFsIE9iamVjdCBmaWVsZDA3ID0gbnVsbDsgXG4iICsK
KwkJCSJmaW5hbCBPYmplY3QgZmllbGQwOCA9IG51bGw7IFxuIiArCisJCQkiZmluYWwgT2JqZWN0
IGZpZWxkMDkgPSBudWxsOyBcbiIgKworCQkJImZpbmFsIE9iamVjdCBmaWVsZDAxMCA9IG51bGw7
XG4iICsKKwkJCSJmaW5hbCBPYmplY3QgZmllbGQwMTEgPSBudWxsO1xuIiArCisJCQkiZmluYWwg
T2JqZWN0IGZpZWxkMDEyID0gbnVsbDtcbiIgKworCQkJImZpbmFsIE9iamVjdCBmaWVsZDAxMyA9
IG51bGw7XG4iICsKKwkJCSJmaW5hbCBPYmplY3QgZmllbGQwMTQgPSBudWxsO1xuIiArCisJCQki
ZmluYWwgT2JqZWN0IGZpZWxkMDE1ID0gbnVsbDtcbiIgKworCQkJImZpbmFsIE9iamVjdCBmaWVs
ZDAxNiA9IG51bGw7XG4iICsKKwkJCSJmaW5hbCBPYmplY3QgZmllbGQwMTcgPSBudWxsO1xuIiAr
CisJCQkiZmluYWwgT2JqZWN0IGZpZWxkMDE4ID0gbnVsbDtcbiIgKworCQkJImZpbmFsIE9iamVj
dCBmaWVsZDAxOSA9IG51bGw7XG4iICsKKwkJCSJmaW5hbCBPYmplY3QgZmllbGQwMjAgPSBudWxs
O1xuIiArCisJCQkiZmluYWwgT2JqZWN0IGZpZWxkMDIxID0gbnVsbDtcbiIgKworCQkJImZpbmFs
IE9iamVjdCBmaWVsZDAyMiA9IG51bGw7XG4iICsKKwkJCSJmaW5hbCBPYmplY3QgZmllbGQwMjMg
PSBudWxsO1xuIiArCisJCQkiZmluYWwgT2JqZWN0IGZpZWxkMDI0ID0gbnVsbDtcbiIgKworCQkJ
ImZpbmFsIE9iamVjdCBmaWVsZDAyNSA9IG51bGw7XG4iICsKKwkJCSJmaW5hbCBPYmplY3QgZmll
bGQwMjYgPSBudWxsO1xuIiArCisJCQkiZmluYWwgT2JqZWN0IGZpZWxkMDI3ID0gbnVsbDtcbiIg
KworCQkJImZpbmFsIE9iamVjdCBmaWVsZDAyOCA9IG51bGw7XG4iICsKKwkJCSJmaW5hbCBPYmpl
Y3QgZmllbGQwMjkgPSBudWxsO1xuIiArCisJCQkiZmluYWwgT2JqZWN0IGZpZWxkMDMwID0gbnVs
bDtcbiIgKworCQkJImZpbmFsIE9iamVjdCBmaWVsZDAzMSA9IG51bGw7XG4iICsKKwkJCSJmaW5h
bCBPYmplY3QgZmllbGQwMzIgPSBudWxsO1xuIiArCisJCQkiZmluYWwgT2JqZWN0IGZpZWxkMDMz
ID0gbnVsbDtcbiIgKworCQkJImZpbmFsIE9iamVjdCBmaWVsZDAzNCA9IG51bGw7XG4iICsKKwkJ
CSJmaW5hbCBPYmplY3QgZmllbGQwMzUgPSBudWxsO1xuIiArCisJCQkiZmluYWwgT2JqZWN0IGZp
ZWxkMDM2ID0gbnVsbDtcbiIgKworCQkJImZpbmFsIE9iamVjdCBmaWVsZDAzNyA9IG51bGw7XG4i
ICsKKwkJCSJmaW5hbCBPYmplY3QgZmllbGQwMzggPSBudWxsO1xuIiArCisJCQkiZmluYWwgT2Jq
ZWN0IGZpZWxkMDM5ID0gbnVsbDtcbiIgKworCQkJImZpbmFsIE9iamVjdCBmaWVsZDA0MCA9IG51
bGw7XG4iICsKKwkJCSJmaW5hbCBPYmplY3QgZmllbGQwNDEgPSBudWxsO1xuIiArCisJCQkiZmlu
YWwgT2JqZWN0IGZpZWxkMDQyID0gbnVsbDtcbiIgKworCQkJImZpbmFsIE9iamVjdCBmaWVsZDA0
MyA9IG51bGw7XG4iICsKKwkJCSJmaW5hbCBPYmplY3QgZmllbGQwNDQgPSBudWxsO1xuIiArCisJ
CQkiZmluYWwgT2JqZWN0IGZpZWxkMDQ1ID0gbnVsbDtcbiIgKworCQkJImZpbmFsIE9iamVjdCBm
aWVsZDA0NiA9IG51bGw7XG4iICsKKwkJCSJmaW5hbCBPYmplY3QgZmllbGQwNDcgPSBudWxsO1xu
IiArCisJCQkiZmluYWwgT2JqZWN0IGZpZWxkMDQ4ID0gbnVsbDtcbiIgKworCQkJImZpbmFsIE9i
amVjdCBmaWVsZDA0OSA9IG51bGw7XG4iICsKKwkJCSJmaW5hbCBPYmplY3QgZmllbGQwNTAgPSBu
dWxsO1xuIiArCisJCQkiZmluYWwgT2JqZWN0IGZpZWxkMDUxID0gbnVsbDtcbiIgKworCQkJImZp
bmFsIE9iamVjdCBmaWVsZDA1MiA9IG51bGw7XG4iICsKKwkJCSJmaW5hbCBPYmplY3QgZmllbGQw
NTMgPSBudWxsO1xuIiArCisJCQkiZmluYWwgT2JqZWN0IGZpZWxkMDU0ID0gbnVsbDtcbiIgKwor
CQkJImZpbmFsIE9iamVjdCBmaWVsZDA1NSA9IG51bGw7XG4iICsKKwkJCSJmaW5hbCBPYmplY3Qg
ZmllbGQwNTYgPSBudWxsO1xuIiArCisJCQkiZmluYWwgT2JqZWN0IGZpZWxkMDU3ID0gbnVsbDtc
biIgKworCQkJImZpbmFsIE9iamVjdCBmaWVsZDA1OCA9IG51bGw7XG4iICsKKwkJCSJmaW5hbCBP
YmplY3QgZmllbGQwNTkgPSBudWxsO1xuIiArCisJCQkiZmluYWwgT2JqZWN0IGZpZWxkMDYwID0g
bnVsbDtcbiIgKworCQkJImZpbmFsIE9iamVjdCBmaWVsZDA2MSA9IG51bGw7XG4iICsKKwkJCSJm
aW5hbCBPYmplY3QgZmllbGQwNjIgPSBudWxsO1xuIiArCisJCQkiZmluYWwgT2JqZWN0IGZpZWxk
MDYzID0gbnVsbDtcbiIgKworCQkJImZpbmFsIE9iamVjdCBmaWVsZDA2NCA9IG51bGw7XG4iICsK
KwkJCSJmaW5hbCBPYmplY3QgZmllbGQwNjUgPSBudWxsO1xuIiArCisJCQkiZmluYWwgT2JqZWN0
IGZpZWxkMDY2ID0gbnVsbDtcbiIgKworCQkJImZpbmFsIE9iamVjdCBmaWVsZDA2NyA9IG51bGw7
XG4iICsKKwkJCSJmaW5hbCBPYmplY3QgZmllbGQwNjggPSBudWxsO1xuIiArCisJCQkiZmluYWwg
T2JqZWN0IGZpZWxkMDY5ID0gbnVsbDtcbiIgKworCQkJIiAgcHVibGljIFgoKSB7XG4iICsKKwkJ
CSIgIH1cbiIgKworCQkJIn1cbiJ9LAorCQkJIiIKKwkpOworfQogfQpkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvYmF0Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2JhdGNoL21lc3NhZ2VzLnByb3BlcnRpZXMgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9iYXRjaC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYmF0Y2gvbWVzc2FnZXMucHJvcGVydGll
cwppbmRleCAzZjVhOGRjLi43MzYxM2FjIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9iYXRjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYmF0Y2gvbWVzc2FnZXMu
cHJvcGVydGllcworKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9iYXRjaC9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvYmF0Y2gvbWVzc2FnZXMucHJvcGVydGllcwpAQCAtMjAsNyAr
MjAsNyBAQAogI0Zvcm1hdDogY29tcGlsZXIubmFtZSA9IHdvcmQxIHdvcmQyIHdvcmQzCiBjb21w
aWxlci5uYW1lID0gRWNsaXBzZSBDb21waWxlciBmb3IgSmF2YShUTSkKICNGb3JtYXQ6IGNvbXBp
bGVyLnZlcnNpb24gPSAwLlhYWFssIG90aGVyIHdvcmRzIChkb24ndCBmb3JnZXQgdGhlIGNvbW1h
IGlmIGFkZGluZyBvdGhlciB3b3JkcyldCi1jb21waWxlci52ZXJzaW9uID0gMC5DMzEsIDMuOC4w
IE01Citjb21waWxlci52ZXJzaW9uID0gMC5DMzIsIDMuOC4wIE01CiBjb21waWxlci5jb3B5cmln
aHQgPSBDb3B5cmlnaHQgSUJNIENvcnAgMjAwMCwgMjAxMS4gQWxsIHJpZ2h0cyByZXNlcnZlZC4K
IAogIyMjIHByb2dyZXNzCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9idWlsZG5v
dGVzX2pkdC1jb3JlLmh0bWwgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9idWlsZG5vdGVzX2pkdC1j
b3JlLmh0bWwKaW5kZXggMzFiMDc3NC4uMjEwYjM2YSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvYnVpbGRub3Rlc19qZHQtY29yZS5odG1sCisrKyBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2J1aWxkbm90ZXNfamR0LWNvcmUuaHRtbApAQCAtNDIsMTEgKzQyLDI0IEBACiAJPC90ZD4K
ICAgPC90cj4KIDwvdGFibGU+Cis8YSBuYW1lPSJ2X0MzMiI+PC9hPgorPGhyPjxoMT4KK0VjbGlw
c2UgUGxhdGZvcm0gQnVpbGQgTm90ZXM8YnI+CitKYXZhIGRldmVsb3BtZW50IHRvb2xzIGNvcmU8
L2gxPgorRWNsaXBzZSBTREsgMy44LjAgLSAlZGF0ZSUgLSAzLjguMCBNNQorPGJyPlByb2plY3Qg
b3JnLmVjbGlwc2UuamR0LmNvcmUgdl9DMzIKKyg8YSBocmVmPSJodHRwOi8vZGV2LmVjbGlwc2Uu
b3JnL3ZpZXdjdnMvaW5kZXguY2dpL29yZy5lY2xpcHNlLmpkdC5jb3JlLz9vbmx5X3dpdGhfdGFn
PXZfQzMyIj5jdnM8L2E+KS4KKzxoMj5XaGF0J3MgbmV3IGluIHRoaXMgZHJvcDwvaDI+CisKKzxo
Mz5Qcm9ibGVtIFJlcG9ydHMgRml4ZWQ8L2gzPgorPGEgaHJlZj0iaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM2OTM4MSI+MzY5MzgxPC9hPgorW251bGxdW2Nv
bXBpbGVyXSAnQWRkaW5nIHBvdGVudGlhbCBudWxsIG1hcmsgaW4gdW5leHBlY3RlZCBzdGF0ZScg
YXNzZXJ0aW9uIHdoaWxlIGNvbXBpbGluZworCiA8YSBuYW1lPSJ2X0MzMSI+PC9hPgogPGhyPjxo
MT4KIEVjbGlwc2UgUGxhdGZvcm0gQnVpbGQgTm90ZXM8YnI+CiBKYXZhIGRldmVsb3BtZW50IHRv
b2xzIGNvcmU8L2gxPgotRWNsaXBzZSBTREsgMy44LjAgLSBKYW51YXJ5IDIyLCAyMDEyIC0gMy44
LjAgTTUKK0VjbGlwc2UgU0RLIDMuOC4wIC0gSmFudWFyeSAyMiwgMjAxMgogPGJyPgogPGgyPldo
YXQncyBuZXcgaW4gdGhpcyBkcm9wPC9oMj4KIApkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9GaWVs
ZFJlZmVyZW5jZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9GaWVsZFJlZmVyZW5jZS5qYXZhCmluZGV4IGU4
YzZmYWIuLjJiOGFmOGQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvRmllbGRSZWZlcmVuY2UuamF2
YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvYXN0L0ZpZWxkUmVmZXJlbmNlLmphdmEKQEAgLTY3Nyw3ICs2NzcsNyBA
QAogCQlDb21waWxlck9wdGlvbnMgb3B0aW9ucyA9IHNjb3BlLmNvbXBpbGVyT3B0aW9ucygpOwog
CQlpZighb3B0aW9ucy5pbmNsdWRlRmllbGRzSW5OdWxsQW5hbHlzaXMpIHJldHVybiBudWxsOwog
CQlpZiAodGhpcy5yZWNlaXZlci5pc1RoaXMoKSkgcmV0dXJuIHRoaXMuYmluZGluZzsKLQkJaWYg
KHRoaXMuYmluZGluZyAhPSBudWxsICYmIHRoaXMuYmluZGluZy5pc1N0YXRpYygpKSB7CisJCWlm
ICh0aGlzLmJpbmRpbmcgIT0gbnVsbCAmJiB0aGlzLmJpbmRpbmcuZGVjbGFyaW5nQ2xhc3MgIT0g
bnVsbCAmJiB0aGlzLmJpbmRpbmcuaXNTdGF0aWMoKSkgewogCQkJLy8gZG9lcyB0aGUgc3RhdGlj
IGZpZWxkIGJlbG9uZyB0byB0aGUgY3VycmVudCB0eXBlIG9yIG9uZSBvZiB0aGUgZW5jbG9zaW5n
IG9uZXM/CiAJCQlDbGFzc1Njb3BlIGVuY2xvc2luZ0NsYXNzID0gc2NvcGUuZW5jbG9zaW5nQ2xh
c3NTY29wZSgpOwogCQkJd2hpbGUgKGVuY2xvc2luZ0NsYXNzICE9IG51bGwpIHsKZGlmZiAtLWdp
dCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9mbG93L1VuY29uZGl0aW9uYWxGbG93SW5mby5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Zsb3cv
VW5jb25kaXRpb25hbEZsb3dJbmZvLmphdmEKaW5kZXggYWMwMjhiMC4uYjY4NzQyNCAxMDA2NDQK
LS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvbXBpbGVyL2Zsb3cvVW5jb25kaXRpb25hbEZsb3dJbmZvLmphdmEKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2Zsb3cvVW5jb25kaXRpb25hbEZsb3dJbmZvLmphdmEKQEAgLTE1MzEsOCArMTUzMSw5IEBACiAJ
CQkvLyB1c2UgZXh0cmEgdmVjdG9yCiAJCQlpbnQgbG9jYWxzU3RhcnRJbmRleCA9IHRoaXMubWF4
RmllbGRDb3VudC9CaXRDYWNoZVNpemUgLSAxOwogCQkJaW50IGxvY2Fsc1N0YXJ0T2Zmc2V0ID0g
dGhpcy5tYXhGaWVsZENvdW50ICUgQml0Q2FjaGVTaXplOworCQkJaW50IGxlbiA9IE1hdGgubWlu
KGxvY2Fsc1N0YXJ0SW5kZXgrMSwgdGhpcy5leHRyYVsyXS5sZW5ndGgpOwogCQkJaWYgKHRoaXMu
ZXh0cmFDb25zdGFudEZpZWxkTWFzayAhPSBudWxsKXsKLQkJCQlmb3IgKGludCB2ZWN0b3JJbmRl
eCA9IDA7IHZlY3RvckluZGV4IDwgdGhpcy5leHRyYVsyXS5sZW5ndGg7IHZlY3RvckluZGV4Kysp
IHsKKwkJCQlmb3IgKGludCB2ZWN0b3JJbmRleCA9IDA7IHZlY3RvckluZGV4IDwgbGVuOyB2ZWN0
b3JJbmRleCsrKSB7CiAJCQkJICAgIGlmICh2ZWN0b3JJbmRleCA+PSB0aGlzLmV4dHJhQ29uc3Rh
bnRGaWVsZE1hc2subGVuZ3RoKSB7CiAJCQkJICAgIAkvLyBubyBjb25zdGFudCBmaWVsZHMgYWZ0
ZXIgdGhpcywganVzdCBtYXNrIGFsbCBmaWVsZHMKIAkJCQkgICAgCWlmICh2ZWN0b3JJbmRleCA9
PSBsb2NhbHNTdGFydEluZGV4KSB7CkBAIC0xNTYwLDcgKzE1NjEsNyBAQAogCQkJCX0KIAkJCX0g
ZWxzZSB7CiAJCQkJLy8gbm8gY29uc3RhbnQgZmllbGRzCi0JCQkJZm9yIChpbnQgdmVjdG9ySW5k
ZXggPSAwOyB2ZWN0b3JJbmRleCA8IHRoaXMuZXh0cmFbMl0ubGVuZ3RoOyB2ZWN0b3JJbmRleCsr
KSB7CisJCQkJZm9yIChpbnQgdmVjdG9ySW5kZXggPSAwOyB2ZWN0b3JJbmRleCA8IGxlbjsgdmVj
dG9ySW5kZXgrKykgewogCQkJCSAgICBpZiAodmVjdG9ySW5kZXggPT0gbG9jYWxzU3RhcnRJbmRl
eCkgewogCQkJCSAgICAJLy8gc29tZSBsb2NhbHMsIHNvbWUgZmllbGRzIGF0IHRoaXMgdmVjdG9y
SW5kZXgKIAkJCQkgICAgCW1hc2sgPSAtMUwgPDwgbG9jYWxzU3RhcnRPZmZzZXQ7CkBAIC0xNjEz
LDExICsxNjE0LDE1IEBACiAgICAgCWludCBvdGhlckxlbiA9IG90aGVyLmV4dHJhQ29uc3RhbnRG
aWVsZE1hc2subGVuZ3RoOwogICAgIAlpZiAodGhpcy5leHRyYUNvbnN0YW50RmllbGRNYXNrICE9
IG51bGwpIHsKICAgICAJCW9sZExlbmd0aCA9IHRoaXMuZXh0cmFDb25zdGFudEZpZWxkTWFzay5s
ZW5ndGg7Ci0JICAgIAlpZiAob3RoZXJMZW4gPj0gKG9sZExlbmd0aCA9IHRoaXMuZXh0cmFDb25z
dGFudEZpZWxkTWFzay5sZW5ndGgpKSB7CisJICAgIAlpZiAob3RoZXJMZW4gPiAob2xkTGVuZ3Ro
ID0gdGhpcy5leHRyYUNvbnN0YW50RmllbGRNYXNrLmxlbmd0aCkpIHsKIAkJCQlTeXN0ZW0uYXJy
YXljb3B5KHRoaXMuZXh0cmFDb25zdGFudEZpZWxkTWFzaywgMCwgKHRoaXMuZXh0cmFDb25zdGFu
dEZpZWxkTWFzayA9IG5ldyBsb25nW290aGVyTGVuXSksIDAsIG9sZExlbmd0aCk7Ci0JCQl9Ci0J
ICAgIAlmb3IgKGludCBpID0gMDsgaSA8IHRoaXMuZXh0cmFDb25zdGFudEZpZWxkTWFzay5sZW5n
dGg7IGkrKykgewotCQkJCXRoaXMuZXh0cmFDb25zdGFudEZpZWxkTWFza1tpXSB8PSBvdGhlci5l
eHRyYUNvbnN0YW50RmllbGRNYXNrW2ldOworCQkJCWZvciAoaW50IGkgPSAwOyBpIDwgb2xkTGVu
Z3RoOyBpKyspIHsKKwkJCQkJdGhpcy5leHRyYUNvbnN0YW50RmllbGRNYXNrW2ldIHw9IG90aGVy
LmV4dHJhQ29uc3RhbnRGaWVsZE1hc2tbaV07CisJCQkJfQorCQkJfSBlbHNlIHsKKwkJCQlmb3Ig
KGludCBpID0gMDsgaSA8IG90aGVyTGVuOyBpKyspIHsKKwkJCQkJdGhpcy5leHRyYUNvbnN0YW50
RmllbGRNYXNrW2ldIHw9IG90aGVyLmV4dHJhQ29uc3RhbnRGaWVsZE1hc2tbaV07CisJCQkJfQog
CQkJfQogICAgIAl9IGVsc2UgewogICAgIAkJdGhpcy5leHRyYUNvbnN0YW50RmllbGRNYXNrID0g
bmV3IGxvbmdbb3RoZXJMZW5dOw==
</data>

          </attachment>
      

    </bug>

</bugzilla>