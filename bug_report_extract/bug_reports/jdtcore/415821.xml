<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>415821</bug_id>
          
          <creation_ts>2013-08-25 08:10:00 -0400</creation_ts>
          <short_desc>[1.8][compiler] CLASS_EXTENDS target type annotation missing for anonymous classes.</short_desc>
          <delta_ts>2013-10-02 07:08:57 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>287648</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Andrew Clement">aclement</assigned_to>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2298707</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-08-25 08:10:59 -0400</bug_when>
    <thetext>BETA_JAVA8:
----------

Per discussions in the EG list, the spec is being amended to require
a target_type=CLASS_EXTENDS type annotation for the following case:
This is apart from the target_type=NEW type annotation which we already
emit.

Note that the reference compiler already emits the CLASS_EXTENDS type
annotation, but not the NEW target type annotation, a bug has been raised
against javac for this purpose.

// ---
@Retention(RetentionPolicy.RUNTIME)
@Target(ElementType.TYPE_USE)
@interface X {}

class C { void m() { new @X Foo() {}; } }
// --

From the EG discussion:

...

The wording for target_type=CLASS_EXTENDS (0x10) refers to a &quot;type in 
extends clause of class or interface declaration&quot; so it&apos;s not clear that 
the @X annotation should be stored this way. To clarify, the wording for 
target_type=CLASS_EXTENDS should say:

&quot;type in extends clause of class or interface declaration (including the 
direct superclass of an anonymous class declaration), ...&quot;

...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2298708</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-08-25 08:11:27 -0400</bug_when>
    <thetext>Andy, please take a look, TIA.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2298709</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-08-25 08:13:56 -0400</bug_when>
    <thetext>We should remember to check to do the right thing for the case below where
an interface is implemented by the anonymous class.

interface I {
	void f();
}
public class X {
void foo() {
	I i = new I () {

		public void f() {
		
		}
		
	};
	}
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2313204</commentid>
    <comment_count>3</comment_count>
      <attachid>236025</attachid>
    <who name="Andrew Clement">aclement</who>
    <bug_when>2013-10-01 20:51:44 -0400</bug_when>
    <thetext>Created attachment 236025
Fix and tests

Two tests: one for the class case, one for the interface case.

The fix here is to ensure we don&apos;t lose the annotated type reference object, by attaching it to the generated type declaration for the anonymous usage. If attached correctly the type annotation generator will just do the right thing (which is why there are only 3 lines of change to make it work here).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2313337</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-10-02 06:58:57 -0400</bug_when>
    <thetext>Fix is good, released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=5ecdad70bb6e2e1bbd5c5ec539acc885a5698c4e.

Thanks a lot Andy.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2313339</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-10-02 07:07:53 -0400</bug_when>
    <thetext>Patch looks good. Released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=5ecdad70bb6e2e1bbd5c5ec539acc885a5698c4e.

Thanks Andy.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2313340</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-10-02 07:08:57 -0400</bug_when>
    <thetext>Third attempt at resolving...</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>236025</attachid>
            <date>2013-10-01 20:51:00 -0400</date>
            <delta_ts>2013-10-01 20:51:44 -0400</delta_ts>
            <desc>Fix and tests</desc>
            <filename>0001-Fix-for-Bug-415821-1.8-compiler-CLASS_EXTENDS-target.patch</filename>
            <type>text/plain</type>
            <size>8283</size>
            <attacher name="Andrew Clement">aclement</attacher>
            
              <data encoding="base64">RnJvbSA4YTY2MzY3NzIxMTY4Y2Q1YzBkOWQ0MmExNmQ0YjlmYmRiMmJlYTZlIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBBbmR5IENsZW1lbnQgPGFjbGVtZW50QGdvcGl2b3RhbC5jb20+
CkRhdGU6IFR1ZSwgMSBPY3QgMjAxMyAxNzo0ODowMSAtMDcwMApTdWJqZWN0OiBbUEFUQ0hdIEZp
eCBmb3IgQnVnIDQxNTgyMSAtIFsxLjhdW2NvbXBpbGVyXSBDTEFTU19FWFRFTkRTIHRhcmdldAog
dHlwZSBhbm5vdGF0aW9uIG1pc3NpbmcgZm9yIGFub255bW91cyBjbGFzc2VzCgotLS0KIC4uLi9j
b21waWxlci9yZWdyZXNzaW9uL1R5cGVBbm5vdGF0aW9uVGVzdC5qYXZhICAgIHwgNjAgKysrKysr
KysrKysrKysrKysrKysrKwogLi4uL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQ2xhc3NT
Y29wZS5qYXZhICAgfCAgNiArKy0KIC4uLi9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1Bh
cnNlci5qYXZhICAgICAgIHwgIDMgKysKIDMgZmlsZXMgY2hhbmdlZCwgNjggaW5zZXJ0aW9ucygr
KSwgMSBkZWxldGlvbigtKQoKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3Rz
LmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNz
aW9uL1R5cGVBbm5vdGF0aW9uVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
Y29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Np
b24vVHlwZUFubm90YXRpb25UZXN0LmphdmEKaW5kZXggZjU1NmM3Zi4uOTUwMThjYSAxMDA2NDQK
LS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vVHlwZUFubm90YXRpb25UZXN0Lmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vVHlwZUFubm90YXRpb25UZXN0
LmphdmEKQEAgLTE2LDYgKzE2LDcgQEAKICAqICAgICAgICAgICAgICAgICAgICAgICAgICBCdWcg
NDA5MjM2IC0gWzEuOF1bY29tcGlsZXJdIFR5cGUgYW5ub3RhdGlvbnMgb24gaW50ZXJzZWN0aW9u
IGNhc3QgdHlwZXMgZHJvcHBlZCBieSBjb2RlIGdlbmVyYXRvcgogICogICAgICAgICAgICAgICAg
ICAgICAgICAgIEJ1ZyA0MDkyNDYgLSBbMS44XVtjb21waWxlcl0gVHlwZSBhbm5vdGF0aW9ucyBv
biBjYXRjaCBwYXJhbWV0ZXJzIG5vdCBoYW5kbGVkIHByb3Blcmx5CiAgKiAgICAgICAgICAgICAg
ICAgICAgICAgICAgQnVnIDQwOTUxNyAtIFsxLjhdW2NvbXBpbGVyXSBUeXBlIGFubm90YXRpb24g
cHJvYmxlbXMgb24gbW9yZSBlbGFib3JhdGUgYXJyYXkgcmVmZXJlbmNlcworICogICAgICAgICAg
ICAgICAgICAgICAgICAgIEJ1ZyA0MTU4MjEgLSBbMS44XVtjb21waWxlcl0gQ0xBU1NfRVhURU5E
UyB0YXJnZXQgdHlwZSBhbm5vdGF0aW9uIG1pc3NpbmcgZm9yIGFub255bW91cyBjbGFzc2VzCiAg
KiAgICAgICAgU3RlcGhhbiBIZXJybWFubiAtIENvbnRyaWJ1dGlvbiBmb3IKICAqCQkJCQkJCUJ1
ZyA0MTU5MTEgLSBbMS44XVtjb21waWxlcl0gTlBFIHdoZW4gVFlQRV9VU0UgYW5ub3RhdGVkIG1l
dGhvZCB3aXRoIG1pc3NpbmcgcmV0dXJuIHR5cGUKICAqCQkJCQkJCUJ1ZyA0MTYxNzYgLSBbMS44
XVtjb21waWxlcl1bbnVsbF0gbnVsbCB0eXBlIGFubm90YXRpb25zIGNhdXNlIGdyaWVmIG9uIHR5
cGUgdmFyaWFibGVzCkBAIC0yNTMxLDYgKzI1MzIsNjUgQEAgcHVibGljIGNsYXNzIFR5cGVBbm5v
dGF0aW9uVGVzdCBleHRlbmRzIEFic3RyYWN0UmVncmVzc2lvblRlc3QgewogCQljaGVja0Rpc2Fz
c2VtYmxlZENsYXNzRmlsZShPVVRQVVRfRElSICsgRmlsZS5zZXBhcmF0b3IgKyAiWC5jbGFzcyIs
ICJYIiwgZXhwZWN0ZWRPdXRwdXQsIENsYXNzRmlsZUJ5dGVzRGlzYXNzZW1ibGVyLlNZU1RFTSk7
CiAJfQogCQorCXB1YmxpYyB2b2lkIHRlc3QwNTdfY29kZWJsb2Nrc19uZXczXzQxNTgyMSgpIHRo
cm93cyBFeGNlcHRpb24geworCQl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQkJbmV3IFN0cmluZ1td
IHsKKwkJCQkiWC5qYXZhIiwKKwkJCQkiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLio7XG4i
ICsgCisJCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsgCisJCQkJIkBSZXRl
bnRpb24oUmV0ZW50aW9uUG9saWN5LlJVTlRJTUUpXG4iICsgCisJCQkJIkBpbnRlcmZhY2UgWCB7
IH1cbiIgKworCQkJCSJcbiIgKworCQkJCSJjbGFzcyBGb28ge31cbiIsCisJCQkJIkMuamF2YSIs
CisJCQkJImNsYXNzIEMgeyB2b2lkIG0oKSB7IG5ldyBAWCBGb28oKSB7fTsgfSB9XG4iLAorCQl9
LAorCQkiIik7CisJCVN0cmluZyBleHBlY3RlZE91dHB1dCA9CisJCQkiICAgIFJ1bnRpbWVWaXNp
YmxlVHlwZUFubm90YXRpb25zOiBcbiIgKyAKKwkJCSIgICAgICAjMjEgQFgoXG4iICsgCisJCQki
ICAgICAgICB0YXJnZXQgdHlwZSA9IDB4NDQgTkVXXG4iICsgCisJCQkiICAgICAgICBvZmZzZXQg
PSAwXG4iICsgCisJCQkiICAgICAgKVxuIjsKKwkJY2hlY2tEaXNhc3NlbWJsZWRDbGFzc0ZpbGUo
T1VUUFVUX0RJUiArIEZpbGUuc2VwYXJhdG9yICsgIkMuY2xhc3MiLCAiQyIsIGV4cGVjdGVkT3V0
cHV0LCBDbGFzc0ZpbGVCeXRlc0Rpc2Fzc2VtYmxlci5TWVNURU0pOworCQlleHBlY3RlZE91dHB1
dCA9CisJCQkiICBSdW50aW1lVmlzaWJsZVR5cGVBbm5vdGF0aW9uczogXG4iICsgCisJCQkiICAg
ICMyOCBAWChcbiIgKyAKKwkJCSIgICAgICB0YXJnZXQgdHlwZSA9IDB4MTAgQ0xBU1NfRVhURU5E
U1xuIiArIAorCQkJIiAgICAgIHR5cGUgaW5kZXggPSAtMVxuIiArIAorCQkJIiAgICApXG4iOwor
CQljaGVja0Rpc2Fzc2VtYmxlZENsYXNzRmlsZShPVVRQVVRfRElSICsgRmlsZS5zZXBhcmF0b3Ig
KyAiQyQxLmNsYXNzIiwgIkMkMSIsIGV4cGVjdGVkT3V0cHV0LCBDbGFzc0ZpbGVCeXRlc0Rpc2Fz
c2VtYmxlci5TWVNURU0pOworCX0KKwkKKwlwdWJsaWMgdm9pZCB0ZXN0MDU3X2NvZGVibG9ja3Nf
bmV3NF80MTU4MjEoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwkJdGhpcy5ydW5Db25mb3JtVGVzdCgK
KwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJIlguamF2YSIsCisJCQkJImltcG9ydCBqYXZhLmxhbmcu
YW5ub3RhdGlvbi4qO1xuIiArIAorCQkJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxu
IiArIAorCQkJCSJAUmV0ZW50aW9uKFJldGVudGlvblBvbGljeS5SVU5USU1FKVxuIiArIAorCQkJ
CSJAaW50ZXJmYWNlIFggeyB9XG4iICsKKwkJCQkiXG4iLAorCQkJCSJDLmphdmEiLAorCQkJCSJj
bGFzcyBDIHsgdm9pZCBtKCkgeyBuZXcgQFggUnVubmFibGUoKSB7IHB1YmxpYyB2b2lkIHJ1bigp
IHt9fTsgfSB9XG4iLAorCQl9LAorCQkiIik7CisJCVN0cmluZyBleHBlY3RlZE91dHB1dCA9CisJ
CQkiICAgIFJ1bnRpbWVWaXNpYmxlVHlwZUFubm90YXRpb25zOiBcbiIgKyAKKwkJCSIgICAgICAj
MjEgQFgoXG4iICsgCisJCQkiICAgICAgICB0YXJnZXQgdHlwZSA9IDB4NDQgTkVXXG4iICsgCisJ
CQkiICAgICAgICBvZmZzZXQgPSAwXG4iICsgCisJCQkiICAgICAgKVxuIjsKKwkJY2hlY2tEaXNh
c3NlbWJsZWRDbGFzc0ZpbGUoT1VUUFVUX0RJUiArIEZpbGUuc2VwYXJhdG9yICsgIkMuY2xhc3Mi
LCAiQyIsIGV4cGVjdGVkT3V0cHV0LCBDbGFzc0ZpbGVCeXRlc0Rpc2Fzc2VtYmxlci5TWVNURU0p
OworCQlleHBlY3RlZE91dHB1dCA9CisJCQkiICBSdW50aW1lVmlzaWJsZVR5cGVBbm5vdGF0aW9u
czogXG4iICsgCisJCQkiICAgICMzMSBAWChcbiIgKyAKKwkJCSIgICAgICB0YXJnZXQgdHlwZSA9
IDB4MTAgQ0xBU1NfRVhURU5EU1xuIiArIAorCQkJIiAgICAgIHR5cGUgaW5kZXggPSAwXG4iICsg
CisJCQkiICAgIClcbiI7CisJCWNoZWNrRGlzYXNzZW1ibGVkQ2xhc3NGaWxlKE9VVFBVVF9ESVIg
KyBGaWxlLnNlcGFyYXRvciArICJDJDEuY2xhc3MiLCAiQyQxIiwgZXhwZWN0ZWRPdXRwdXQsIENs
YXNzRmlsZUJ5dGVzRGlzYXNzZW1ibGVyLlNZU1RFTSk7CisJfQorCQogCXB1YmxpYyB2b2lkIHRl
c3QwNTlfY29kZWJsb2Nrc19uZXdfbmV3QXJyYXkoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJdGhp
cy5ydW5Db25mb3JtVGVzdCgKIAkJCW5ldyBTdHJpbmdbXSB7CmRpZmYgLS1naXQgYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
bG9va3VwL0NsYXNzU2NvcGUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQ2xhc3NTY29wZS5qYXZhCmlu
ZGV4IGQ3ODE5YzkuLmMyZWQ4ZTcgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQ2xhc3NTY29w
ZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvQ2xhc3NTY29wZS5qYXZhCkBAIC0xLDUgKzEsNSBA
QAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJ
Qk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJ
Qk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMg
cHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWls
YWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAog
ICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUg
YXQKQEAgLTIwLDYgKzIwLDggQEAKICAqCQkJCQkJCUJ1ZyAzOTU5NzcgLSBbY29tcGlsZXJdW3Jl
c291cmNlXSBSZXNvdXJjZSBsZWFrIHdhcm5pbmcgYmVoYXZpb3IgcG9zc2libHkgaW5jb3JyZWN0
IGZvciBhbm9ueW1vdXMgaW5uZXIgY2xhc3MKICAqCQkJCQkJCUJ1ZyAzOTUwMDIgLSBTZWxmIGJv
dW5kIGdlbmVyaWMgY2xhc3MgZG9lc24ndCByZXNvbHZlIGJvdW5kcyBwcm9wZXJseSBmb3Igd2ls
ZGNhcmRzIGZvciBjZXJ0YWluIHBhcmFtZXRyaXNhdGlvbi4KICAqCQkJCQkJCUJ1ZyA0MTYxNzYg
LSBbMS44XVtjb21waWxlcl1bbnVsbF0gbnVsbCB0eXBlIGFubm90YXRpb25zIGNhdXNlIGdyaWVm
IG9uIHR5cGUgdmFyaWFibGVzCisgKiAgICAgICAgQW5keSBDbGVtZW50IChHb1Bpdm90YWwsIElu
YykgYWNsZW1lbnRAZ29waXZvdGFsLmNvbSAtIENvbnRyaWJ1dGlvbnMgZm9yCisgKiAgICAgICAg
ICAgICAgICAgICAgICAgICAgQnVnIDQxNTgyMSAtIFsxLjhdW2NvbXBpbGVyXSBDTEFTU19FWFRF
TkRTIHRhcmdldCB0eXBlIGFubm90YXRpb24gbWlzc2luZyBmb3IgYW5vbnltb3VzIGNsYXNzZXMK
ICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIubG9va3VwOwogCkBAIC03Niw2ICs3OCw3IEBAIHB1YmxpYyBjbGFzcyBDbGFz
c1Njb3BlIGV4dGVuZHMgU2NvcGUgewogCQkJYW5vbnltb3VzVHlwZS5zdXBlckludGVyZmFjZXMg
PSBuZXcgUmVmZXJlbmNlQmluZGluZ1tdIHsgc3VwZXJ0eXBlIH07CiAJCQlUeXBlUmVmZXJlbmNl
IHR5cGVSZWZlcmVuY2UgPSB0aGlzLnJlZmVyZW5jZUNvbnRleHQuYWxsb2NhdGlvbi50eXBlOwog
CQkJaWYgKHR5cGVSZWZlcmVuY2UgIT0gbnVsbCkgeworCQkJCXRoaXMucmVmZXJlbmNlQ29udGV4
dC5zdXBlckludGVyZmFjZXMgPSBuZXcgVHlwZVJlZmVyZW5jZVtdIHsgdHlwZVJlZmVyZW5jZSB9
OwogCQkJCWlmICgoc3VwZXJ0eXBlLnRhZ0JpdHMgJiBUYWdCaXRzLkhhc0RpcmVjdFdpbGRjYXJk
KSAhPSAwKSB7CiAJCQkJCXByb2JsZW1SZXBvcnRlcigpLnN1cGVyVHlwZUNhbm5vdFVzZVdpbGRj
YXJkKGFub255bW91c1R5cGUsIHR5cGVSZWZlcmVuY2UsIHN1cGVydHlwZSk7CiAJCQkJCWFub255
bW91c1R5cGUudGFnQml0cyB8PSBUYWdCaXRzLkhpZXJhcmNoeUhhc1Byb2JsZW1zOwpAQCAtODcs
NiArOTAsNyBAQCBwdWJsaWMgY2xhc3MgQ2xhc3NTY29wZSBleHRlbmRzIFNjb3BlIHsKIAkJCWFu
b255bW91c1R5cGUuc3VwZXJJbnRlcmZhY2VzID0gQmluZGluZy5OT19TVVBFUklOVEVSRkFDRVM7
CiAJCQlUeXBlUmVmZXJlbmNlIHR5cGVSZWZlcmVuY2UgPSB0aGlzLnJlZmVyZW5jZUNvbnRleHQu
YWxsb2NhdGlvbi50eXBlOwogCQkJaWYgKHR5cGVSZWZlcmVuY2UgIT0gbnVsbCkgeyAvLyBubyBj
aGVjayBmb3IgZW51bSBjb25zdGFudCBib2R5CisJCQkJdGhpcy5yZWZlcmVuY2VDb250ZXh0LnN1
cGVyY2xhc3MgPSB0eXBlUmVmZXJlbmNlOwogCQkJCWlmIChzdXBlcnR5cGUuZXJhc3VyZSgpLmlk
ID09IFR5cGVJZHMuVF9KYXZhTGFuZ0VudW0pIHsKIAkJCQkJcHJvYmxlbVJlcG9ydGVyKCkuY2Fu
bm90RXh0ZW5kRW51bShhbm9ueW1vdXNUeXBlLCB0eXBlUmVmZXJlbmNlLCBzdXBlcnR5cGUpOwog
CQkJCQlhbm9ueW1vdXNUeXBlLnRhZ0JpdHMgfD0gVGFnQml0cy5IaWVyYXJjaHlIYXNQcm9ibGVt
czsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvUGFyc2VyLmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2Vy
L1BhcnNlci5qYXZhCmluZGV4IDg0NzFlNWEuLmNkNmRkZDEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9w
YXJzZXIvUGFyc2VyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9QYXJzZXIuamF2YQpAQCAtMjcs
NiArMjcsNyBAQAogICogICAgICAgIEFuZHkgQ2xlbWVudCAtIENvbnRyaWJ1dGlvbnMgZm9yCiAg
KiAgICAgICAgICAgICAgICAgICAgICAgICAgQnVnIDM4MzYyNCAtIFsxLjhdW2NvbXBpbGVyXSBS
ZXZpdmUgY29kZSBnZW5lcmF0aW9uIHN1cHBvcnQgZm9yIHR5cGUgYW5ub3RhdGlvbnMgKGZyb20g
T2xpdmllcidzIHdvcmspCiAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgQnVnIDQwOTI1MCAt
IFsxLjhdW2NvbXBpbGVyXSBWYXJpb3VzIGxvb3NlIGVuZHMgaW4gMzA4IGNvZGUgZ2VuZXJhdGlv
bgorICogICAgICAgICAgICAgICAgICAgICAgICAgIEJ1ZyA0MTU4MjEgLSBbMS44XVtjb21waWxl
cl0gQ0xBU1NfRVhURU5EUyB0YXJnZXQgdHlwZSBhbm5vdGF0aW9uIG1pc3NpbmcgZm9yIGFub255
bW91cyBjbGFzc2VzCiAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLnBhcnNlcjsKIApAQCAtMzQxNyw2ICszNDE4LDggQEAg
cHJvdGVjdGVkIHZvaWQgY29uc3VtZUVudGVyQW5vbnltb3VzQ2xhc3NCb2R5KGJvb2xlYW4gcXVh
bGlmaWVkKSB7CiAJVHlwZURlY2xhcmF0aW9uIGFub255bW91c1R5cGUgPSBuZXcgVHlwZURlY2xh
cmF0aW9uKHRoaXMuY29tcGlsYXRpb25Vbml0LmNvbXBpbGF0aW9uUmVzdWx0KTsKIAlhbm9ueW1v
dXNUeXBlLm5hbWUgPSBDaGFyT3BlcmF0aW9uLk5PX0NIQVI7CiAJYW5vbnltb3VzVHlwZS5iaXRz
IHw9IChBU1ROb2RlLklzQW5vbnltb3VzVHlwZXxBU1ROb2RlLklzTG9jYWxUeXBlKTsKKwlhbm9u
eW1vdXNUeXBlLmJpdHMgfD0gKHR5cGVSZWZlcmVuY2UuYml0cyAmIEFTVE5vZGUuSGFzVHlwZUFu
bm90YXRpb25zKTsKKwogCVF1YWxpZmllZEFsbG9jYXRpb25FeHByZXNzaW9uIGFsbG9jID0gbmV3
IFF1YWxpZmllZEFsbG9jYXRpb25FeHByZXNzaW9uKGFub255bW91c1R5cGUpOwogCW1hcmtFbmNs
b3NpbmdNZW1iZXJXaXRoTG9jYWxUeXBlKCk7CiAJcHVzaE9uQXN0U3RhY2soYW5vbnltb3VzVHlw
ZSk7Ci0tIAoxLjcuMTEuMgoK
</data>

          </attachment>
      

    </bug>

</bugzilla>