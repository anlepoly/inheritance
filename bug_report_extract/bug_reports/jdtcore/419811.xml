<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>419811</bug_id>
          
          <creation_ts>2013-10-18 04:04:00 -0400</creation_ts>
          <short_desc>All APT tests are failing with the latest</short_desc>
          <delta_ts>2013-10-30 10:48:51 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>APT</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          <see_also>https://bugs.eclipse.org/bugs/show_bug.cgi?id=419969</see_also>
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.4 M3</target_milestone>
          <dependson>416911</dependson>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Jay Arthanareeswaran">jarthana</reporter>
          <assigned_to name="Generic inbox for the JDT-APT component">jdt-apt-inbox</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>david_williams</cc>
    
    <cc>eclipse</cc>
    
    <cc>lars.vogel</cc>
    
    <cc>mistria</cc>
    
    <cc>Olivier_Thomann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2320045</commentid>
    <comment_count>0</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-10-18 04:04:37 -0400</bug_when>
    <thetext>This looks the result of fix made in bug 416911.

http://download.eclipse.org/eclipse/downloads/drops4/N20131016-2000/testresults/html/org.eclipse.jdt.compiler.apt.tests_win32.win32.x86_7.0.html

And here:

http://download.eclipse.org/eclipse/downloads/drops4/N20131016-2000/testresults/html/org.eclipse.jdt.apt.tests_win32.win32.x86_7.0.html</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2320046</commentid>
    <comment_count>1</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-10-18 04:05:55 -0400</bug_when>
    <thetext>Michael, can you look at the failures please? Thanks!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2320190</commentid>
    <comment_count>2</comment_count>
    <who name="Mickael Istria">mistria</who>
    <bug_when>2013-10-18 08:47:07 -0400</bug_when>
    <thetext>Ok, it seems like those test do actually require the lib/apttestprocessors.jar to work. As I didn&apos;t remove the file in the last commit, it was still working in PDE and with Surefire.
I&apos;ll restore creation of this jar during build. As it doesn&apos;t contain test to run and is only a resource, it shouldn&apos;t prevent surefire from running.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2320214</commentid>
    <comment_count>3</comment_count>
    <who name="Mickael Istria">mistria</who>
    <bug_when>2013-10-18 09:09:23 -0400</bug_when>
    <thetext>This patch should help: https://git.eclipse.org/r/17525</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2320252</commentid>
    <comment_count>4</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-10-18 09:59:23 -0400</bug_when>
    <thetext>The apttestprocessors needs to be present under org.eclipse.jdt.compiler.apt.tests/lib/ as it&apos;s not created during a regular build. All tests are(In reply to Mickael Istria from comment #3)
&gt; This patch should help: https://git.eclipse.org/r/17525

Tests are still failing. Are you sure the jar needs to be removed? The tests expects the JAR to be present already. I don&apos;t think they get created on the fly.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2320254</commentid>
    <comment_count>5</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-10-18 10:00:15 -0400</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #4)
&gt; The apttestprocessors needs to be present under
&gt; org.eclipse.jdt.compiler.apt.tests/lib/ as it&apos;s not created during a regular
&gt; build. All tests are(In reply to Mickael Istria from comment #3)
&gt; &gt; This patch should help: https://git.eclipse.org/r/17525
&gt; 
&gt; Tests are still failing. Are you sure the jar needs to be removed? The tests
&gt; expects the JAR to be present already. I don&apos;t think they get created on the
&gt; fly.

Ignore the garbled comments. Just the last two lines matter.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2320261</commentid>
    <comment_count>6</comment_count>
    <who name="Mickael Istria">mistria</who>
    <bug_when>2013-10-18 10:06:58 -0400</bug_when>
    <thetext>I just found it cleaner as I thought PDE/Build was able to honor the &quot;jars.compile.order&quot; property in IDE so it would recreate the jar when necessary. Apparently it&apos;s not, you should open an enhancement request to make IDE more consistent with build.

I pushed a new patch set on the same Gerrit contributions, which keeps this jar in repo.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2320431</commentid>
    <comment_count>7</comment_count>
    <who name="Walter Harley">eclipse</who>
    <bug_when>2013-10-18 13:15:09 -0400</bug_when>
    <thetext>It seems like maybe there is some confusion about the purpose of this jar?

IIRC, the functionality being tested is that in a running IDE, it is possible to load annotation processors from a jar file. 

So, the apttestprocessors jar is input to the test IDE, and it is discovered at runtime of the test IDE.  But it is important that it is actually a jar file per se.  If you simply replaced it with class files you would be testing different functionality.

The jar file becomes, effectively, a (non-OSGi) plug-in to the compiler.  Note that this means it cannot necessarily be unloaded, on some platforms, until the IDE terminates.  This is the source of much of the seeming complexity of the APT tests.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2320763</commentid>
    <comment_count>8</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2013-10-20 18:07:03 -0400</bug_when>
    <thetext>(In reply to Mickael Istria from comment #6)
&gt; I just found it cleaner as I thought PDE/Build was able to honor the
&gt; &quot;jars.compile.order&quot; property in IDE so it would recreate the jar when
&gt; necessary. Apparently it&apos;s not, you should open an enhancement request to
&gt; make IDE more consistent with build.
&gt; 
&gt; I pushed a new patch set on the same Gerrit contributions, which keeps this
&gt; jar in repo.

I think our maven/Tycho build might honor some form of &quot;output.&lt;library&gt;=&quot;
(See PDE help). 

But, jar order just specifies order to build jars in, after something else says to build them ... I believe.

But, just &quot;having in repo&quot; isn&apos;t all bad, if it is just &quot;data&quot; to be used by the test ... but would be good to have a file there with it, say &apos;description.txt&apos;, that describes how to recreate it if/when that is ever necessary.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2320959</commentid>
    <comment_count>9</comment_count>
    <who name="Mickael Istria">mistria</who>
    <bug_when>2013-10-21 07:18:32 -0400</bug_when>
    <thetext>(In reply to David Williams from comment #8)
&gt; But, just &quot;having in repo&quot; isn&apos;t all bad, if it is just &quot;data&quot; to be used by
&gt; the test ... but would be good to have a file there with it, say
&gt; &apos;description.txt&apos;, that describes how to recreate it if/when that is ever
&gt; necessary.

There is this file: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/tree/org.eclipse.jdt.compiler.apt.tests/apttestprocessors.jardesc

&gt; But, jar order just specifies order to build jars in, after something else
&gt; says to build them ... I believe.

Yes, that&apos;s what I think too. So jar order only works for PDE plugin export, but not in incremental build. It seems a bit inconsistent to me. Do you agree supporting this in incremental build would make a good enhancement request for PDE ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2321016</commentid>
    <comment_count>10</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2013-10-21 08:52:42 -0400</bug_when>
    <thetext>(In reply to Mickael Istria from comment #9)
&gt; (In reply to David Williams from comment #8)
&gt; &gt; But, just &quot;having in repo&quot; isn&apos;t all bad, if it is just &quot;data&quot; to be used by
&gt; &gt; the test ... but would be good to have a file there with it, say
&gt; &gt; &apos;description.txt&apos;, that describes how to recreate it if/when that is ever
&gt; &gt; necessary.
&gt; 
&gt; There is this file:
&gt; http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/tree/org.eclipse.jdt.
&gt; compiler.apt.tests/apttestprocessors.jardesc
&gt; 
&gt; &gt; But, jar order just specifies order to build jars in, after something else
&gt; &gt; says to build them ... I believe.
&gt; 
&gt; Yes, that&apos;s what I think too. So jar order only works for PDE plugin export,
&gt; but not in incremental build. It seems a bit inconsistent to me. Do you
&gt; agree supporting this in incremental build would make a good enhancement
&gt; request for PDE ?

I think I see what you mean now. It wouldn&apos;t hurt to enter an enhancement ... though, realistically, PDE isn&apos;t getting a lot of priority right at this point in time ... but ... perhaps someone will give it priority, and time, in future, so doesn&apos;t hurt to have it logged (though, fix might be in JDT ... I&apos;m not sure who is &quot;in charge&quot; of incremental builds).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2321055</commentid>
    <comment_count>11</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-10-21 09:45:20 -0400</bug_when>
    <thetext>(In reply to David Williams from comment #10)
&gt; I think I see what you mean now. It wouldn&apos;t hurt to enter an enhancement
&gt; ... though, realistically, PDE isn&apos;t getting a lot of priority right at this
&gt; point in time ... but ... perhaps someone will give it priority, and time,
&gt; in future, so doesn&apos;t hurt to have it logged (though, fix might be in JDT
&gt; ... I&apos;m not sure who is &quot;in charge&quot; of incremental builds).

I guess this is the build script in PDE in this case. The generic (incremental) build infrastructure comes form Platform (not JDT).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2321508</commentid>
    <comment_count>12</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-10-22 04:33:37 -0400</bug_when>
    <thetext>In any case, I am planning to release the change to retain the JAR in the repo/project for tonight&apos;s I build. Any objections?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2321675</commentid>
    <comment_count>13</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2013-10-22 09:56:08 -0400</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #12)
&gt; In any case, I am planning to release the change to retain the JAR in the
&gt; repo/project for tonight&apos;s I build. Any objections?

No objections ... but ... I think that /lib was left in the .gitignore file, so if we do &quot;git clean -f -d -x&quot; (as we do, during builds) the &quot;ignored&quot; lib folder is removed which is not what we want in this case. Right?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2321699</commentid>
    <comment_count>14</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2013-10-22 10:13:37 -0400</bug_when>
    <thetext>(In reply to David Williams from comment #13)
&gt; (In reply to Jayaprakash Arthanareeswaran from comment #12)
&gt; &gt; In any case, I am planning to release the change to retain the JAR in the
&gt; &gt; repo/project for tonight&apos;s I build. Any objections?
&gt; 
&gt; No objections ... but ... I think that /lib was left in the .gitignore file,
&gt; so if we do &quot;git clean -f -d -x&quot; (as we do, during builds) the &quot;ignored&quot; lib
&gt; folder is removed which is not what we want in this case. Right?

Or, if I&apos;m confused about which jar you want left in repo, and you really do want to ignore &apos;lib&apos; folder, then you need to delete files and lib folder first, from git repo, and then add to .gitignore.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2321740</commentid>
    <comment_count>15</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-10-22 11:08:25 -0400</bug_when>
    <thetext>(In reply to David Williams from comment #13)
&gt; No objections ... but ... I think that /lib was left in the .gitignore file,
&gt; so if we do &quot;git clean -f -d -x&quot; (as we do, during builds) the &quot;ignored&quot; lib
&gt; folder is removed which is not what we want in this case. Right?

David, can you please confirm this is why the build failed? Do you recommend a revert (for the time being) or fixing the .gitignore?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2321754</commentid>
    <comment_count>16</comment_count>
    <who name="Mickael Istria">mistria</who>
    <bug_when>2013-10-22 11:31:20 -0400</bug_when>
    <thetext>Have you tried to run &quot;mvn clean verify -Pbuild-individual-bundles&quot; locally? If it fails, then it will fail on CI. Also, Hudson did vote -1 on the patch for the same reason.
The cause is the change I made to the maven-clean-plugin configuration, which alters the tree before running other Tycho plugins. A solution is either to remove this specific configuration from pom.xml.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2321760</commentid>
    <comment_count>17</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-10-22 11:38:46 -0400</bug_when>
    <thetext>(In reply to Mickael Istria from comment #16)
&gt; Have you tried to run &quot;mvn clean verify -Pbuild-individual-bundles&quot; locally?
&gt; If it fails, then it will fail on CI. Also, Hudson did vote -1 on the patch
&gt; for the same reason.
&gt; The cause is the change I made to the maven-clean-plugin configuration,
&gt; which alters the tree before running other Tycho plugins. A solution is
&gt; either to remove this specific configuration from pom.xml.

If you didn&apos;t notice, I did wonder about the hudson&apos;s vote. But wasn&apos;t sure.

Anyway, not being a build expert and not able to weigh in the options we have, I am beginning to think we should just revert changes made here as well as bug 416911. I.e. until we come up with a proper fix to get rid of nested jars.

Dani, what do you think?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2321765</commentid>
    <comment_count>18</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-10-22 11:43:21 -0400</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #17)
&gt; (In reply to Mickael Istria from comment #16)
&gt; &gt; Have you tried to run &quot;mvn clean verify -Pbuild-individual-bundles&quot; locally?
&gt; &gt; If it fails, then it will fail on CI. Also, Hudson did vote -1 on the patch
&gt; &gt; for the same reason.
&gt; &gt; The cause is the change I made to the maven-clean-plugin configuration,
&gt; &gt; which alters the tree before running other Tycho plugins. A solution is
&gt; &gt; either to remove this specific configuration from pom.xml.
&gt; 
&gt; If you didn&apos;t notice, I did wonder about the hudson&apos;s vote. But wasn&apos;t sure.
&gt; 
&gt; Anyway, not being a build expert and not able to weigh in the options we
&gt; have, I am beginning to think we should just revert changes made here as
&gt; well as bug 416911. I.e. until we come up with a proper fix to get rid of
&gt; nested jars.
&gt; 
&gt; Dani, what do you think?

I&apos;m OK with that. Obviously the patch wasn&apos;t complete (yet).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2321767</commentid>
    <comment_count>19</comment_count>
    <who name="Mickael Istria">mistria</who>
    <bug_when>2013-10-22 11:46:30 -0400</bug_when>
    <thetext>See http://dev.eclipse.org/mhonarc/lists/platform-releng-dev/msg21628.html to understand what an Hudson -1 mean. Hudson -1 mean &quot;don&apos;t push that change, it breaks build&quot;.
You don&apos;t have to be a build expert to check a contribution &quot;mvn clean verify -Pbuild-individual-bundles&quot; before a push, it&apos;s just a matter of habit.
In comment #16, I give a piece of solution to fix that. It&apos;s more useful to fix rather to revert a change. I turned it into a Gerrit patch: https://git.eclipse.org/r/17652</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2321768</commentid>
    <comment_count>20</comment_count>
    <who name="Mickael Istria">mistria</who>
    <bug_when>2013-10-22 11:47:26 -0400</bug_when>
    <thetext>Instead of reverting, just wait for Hudson to vote +1 on the patch I submitted, and then try to run test locally from to check whether it works or not.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2321773</commentid>
    <comment_count>21</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-10-22 11:58:20 -0400</bug_when>
    <thetext>(In reply to Mickael Istria from comment #19)
&gt; See http://dev.eclipse.org/mhonarc/lists/platform-releng-dev/msg21628.html
&gt; to understand what an Hudson -1 mean. Hudson -1 mean &quot;don&apos;t push that
&gt; change, it breaks build&quot;.

Thanks for that, but a couple of days ago wouldn&apos;t have been too bad either. However, in future if you insist on using Gerrit, you need to respond to comments (assuming you did see my comment) on a contribution in a better way.

By the way, how much time does the Hudson job take? We don&apos;t want to block other teams from having a good I build.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2321776</commentid>
    <comment_count>22</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-10-22 12:01:08 -0400</bug_when>
    <thetext>(In reply to Mickael Istria from comment #19)
&gt; In comment #16, I give a piece of solution to fix that. It&apos;s more useful to
&gt; fix rather to revert a change. I turned it into a Gerrit patch:
&gt; https://git.eclipse.org/r/17652

David, may I request you to take a look at the posted fix and see if you think it&apos;s safe? TIA!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2321786</commentid>
    <comment_count>23</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2013-10-22 12:28:51 -0400</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #22)
&gt; (In reply to Mickael Istria from comment #19)
&gt; &gt; In comment #16, I give a piece of solution to fix that. It&apos;s more useful to
&gt; &gt; fix rather to revert a change. I turned it into a Gerrit patch:
&gt; &gt; https://git.eclipse.org/r/17652
&gt; 
&gt; David, may I request you to take a look at the posted fix and see if you
&gt; think it&apos;s safe? TIA!

It is hard for me to tell what it is trying to accomplish ... but appears to be trying to clean the working tree? Not sure I understand why that&apos;d be necessary (or, a good idea). [Apologies if this was explained elsewhere ... but not at my main computer and trying to give a quick response.]</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2321795</commentid>
    <comment_count>24</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-10-22 12:51:53 -0400</bug_when>
    <thetext>I have reverted the changes for the time being, i.e. until we can be sure that the fix is enough. I have reopened bug 416911 to address the original fix.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2321803</commentid>
    <comment_count>25</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2013-10-22 13:02:37 -0400</bug_when>
    <thetext>Another way to get rid of this jar would be to move all the apt processors into their own test bundle.
In that case, they would still be inside a jar file and that bundle can be referenced from the apt test bundles as being the location to retrieve the apt processors.
Just my 2 cents.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2321809</commentid>
    <comment_count>26</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2013-10-22 13:24:43 -0400</bug_when>
    <thetext>(In reply to Olivier Thomann from comment #25)
&gt; Another way to get rid of this jar would be to move all the apt processors
&gt; into their own test bundle.
&gt; In that case, they would still be inside a jar file and that bundle can be
&gt; referenced from the apt test bundles as being the location to retrieve the
&gt; apt processors.
&gt; Just my 2 cents.

I think we&apos;d concluded there&apos;s no need to get rid of the jar. That is is &quot;pre-built&quot; and is actually &quot;part of the test data&quot; (i.e. does not run the tests, but the tests make sure it (still) works correctly) ... I think just have it check into to git (and remove /lib from .gitignore) is all the fix that&apos;s needed. 

I think part of the confusion was whether or not this jar should be re-built &quot;during a build&quot;. While its nice to have the ability to do so (for the few times it might be needed) ... I don&apos;t think that&apos;s normally desired, since the test (I assume) is to make sure APT processor still works with those provided classes, even if something else about &quot;apt processing&quot; changes. Or ... am I confusing this bug with another? 

Just my 1 cent (compared to Olivier&apos;s knowledge :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2321832</commentid>
    <comment_count>27</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2013-10-22 14:08:38 -0400</bug_when>
    <thetext>The only thing that needs to be done from the dev point of view is to rebuild (manually) the jar each time an apt processor is modified or added.
There is a file to do that in that project. So it takes no time to do it. And yes, as far as I know, the jar doesn&apos;t need to be rebuilt at build time.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2322016</commentid>
    <comment_count>28</comment_count>
    <who name="Mickael Istria">mistria</who>
    <bug_when>2013-10-23 04:41:26 -0400</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #21)
&gt; By the way, how much time does the Hudson job take? We don&apos;t want to block
&gt; other teams from having a good I build.

Hudson jobs are running separately from current &quot;main&quot; builds of platform, so there is no way a Gerrit change can block an I-Build.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2324891</commentid>
    <comment_count>29</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-10-30 10:48:51 -0400</bug_when>
    <thetext>(In reply to Mickael Istria from comment #28)
&gt; Hudson jobs are running separately from current &quot;main&quot; builds of platform,
&gt; so there is no way a Gerrit change can block an I-Build.

What I really meant was I was going to wait for the Hudson job before releasing into master. 

Anyway, finally, the tests ran fine with the latest I build.

Verified for 4.4 M3 with buil I20131029-2000.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>