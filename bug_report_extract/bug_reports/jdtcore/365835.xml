<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>365835</bug_id>
          
          <creation_ts>2011-12-07 03:24:00 -0500</creation_ts>
          <short_desc>[compiler][null] inconsistent error reporting.</short_desc>
          <delta_ts>2012-01-24 09:53:08 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.8</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.8 M5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>amj87.iitr</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2036938</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-12-07 03:24:14 -0500</bug_when>
    <thetext>3.8 M4 candidates.

In the following program both the assignment and return statement
are violating the null contracts in exactly the same way, but the
diagnostics are different. One is a warning and the other an error.
This is inconsistent:

import org.eclipse.jdt.annotation.NonNull;
import org.eclipse.jdt.annotation.NonNullByDefault;
import org.eclipse.jdt.annotation.Nullable;


public class X {
	@NonNull
	public Object foo(Object x, int y) {
		@NonNull Object local;
		while (true) {
			if (y == 4) {
				local = x;  // error
				return x;   // only a warning.
			}
			x = null;
		}
	}
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2042693</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-12-19 15:28:35 -0500</bug_when>
    <thetext>Fixing was straight-forward:
ReturnStatement reported the nullity mismatch directly to the ProblemReporter
instead via the FlowContext, which is required to consider the enclosing loop.
By calling flowContext.recordNullityMismatch(..) reporting is deferred until
we have the necessary information from the loop.

I double checked that this was the last location taking this &quot;shortcut&quot;,
now all reports properly go via the FlowContext.

Released for 3.8 M5 via commit 8e77108c42837d2f8e34e3f8fd4f8eea8e97b2f7</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2055124</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-01-24 09:53:08 -0500</bug_when>
    <thetext>
Verified for 3.8 M5 using build id: I20120122-2000</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>