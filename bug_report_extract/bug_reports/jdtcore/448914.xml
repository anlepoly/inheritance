<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>448914</bug_id>
          
          <creation_ts>2014-10-26 22:18:00 -0400</creation_ts>
          <short_desc>[1.8][compiler] CaptureBinding18 clones don&apos;t share type id.</short_desc>
          <delta_ts>2014-12-09 04:12:07 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.5</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.5 M4</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>markus_keller</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2472088</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-10-26 22:18:35 -0400</bug_when>
    <thetext>Opening this bug to track the tasks outlined in https://bugs.eclipse.org/bugs/show_bug.cgi?id=430686#c16.

Commit http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=c454077fd72f14a026b898d3b50aaf59d2a0517c made on behalf of
https://bugs.eclipse.org/bugs/show_bug.cgi?id=430686 solves the
problem there, but only short circuiting the route to some
problem spots that are still unaddressed - they can be tackled here.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2472089</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-10-26 22:19:15 -0400</bug_when>
    <thetext>Setting target to M4, please feel free to readjust.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2474327</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-10-30 23:05:04 -0400</bug_when>
    <thetext>This will be subsumed by bug 448793 which will comprehensively deal with all
aspect of capture bound incorporation. I don&apos;t see a value in a loose leaf 
level task.

*** This bug has been marked as a duplicate of bug 448793 ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2475183</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-11-01 21:51:38 -0400</bug_when>
    <thetext>In this commit:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=df4a3da6e8d30ada6824d136133377b3a37cfebb

it is ensured that

    - CaptureBinding18 clones share their id.
    - All TVBs are id stamped.
    - GRT1_8.testBug426542 passes intentionally and not accidentally.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2475629</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-11-03 06:46:35 -0500</bug_when>
    <thetext>@Markus, how important is it for the UI that two parameterized generic methods
that are essentially the same have the same binding (in the same CU) ? 

I am seeing a situation where we are creating non-interned versions that
would not answer true to ==, but should still answer true to binding key
comparisons.

@Stephan, CB18 interning may be the issue here. It looks like with distinct
calls we get two bindings that looks like: Z#0-T#0 getComparableValue()</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2476445</commentid>
    <comment_count>5</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-11-04 09:16:09 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #4)
&gt; @Markus, how important is it for the UI that two parameterized generic
&gt; methods
&gt; that are essentially the same have the same binding (in the same CU) ? 

For regular bindings, it&apos;s important. It&apos;s also an API contract, see  IBinding#equals(Object).

For bindings from capture types, I don&apos;t think it matters. Our analysis isn&apos;t great for such types anyway, and many normal assumptions about types don&apos;t hold for capture types. If we encounter problems in that area, we can resolve them on a case-by-case basis.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2476573</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-11-04 11:37:41 -0500</bug_when>
    <thetext>(In reply to Markus Keller from comment #5)
&gt; (In reply to Srikanth Sankaran from comment #4)
&gt; &gt; @Markus, how important is it for the UI that two parameterized generic
&gt; &gt; methods
&gt; &gt; that are essentially the same have the same binding (in the same CU) ? 
&gt; 
&gt; For regular bindings, it&apos;s important. It&apos;s also an API contract, see 
&gt; IBinding#equals(Object).

Right, that is what I was worried about.

&gt; For bindings from capture types, I don&apos;t think it matters. 

CaptureBinding18 does not necessarily involve wildcard captures. The type
is arguably misnamed, is perhaps better named SyntheticTypeVariableBinding.
See https://bugs.eclipse.org/bugs/show_bug.cgi?id=430686#c0 for an example
of a case that does not involve wild cards at all, but will have 
CaptureBinding18 coming into play.

JLS8 18.4 calls for such synthetic type variables to be created when the
first stab at resolution fails.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2494336</commentid>
    <comment_count>7</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2014-12-09 04:12:07 -0500</bug_when>
    <thetext>Verfied for 4.5 M4 by inspection</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>