<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>402173</bug_id>
          
          <creation_ts>2013-03-01 13:23:00 -0500</creation_ts>
          <short_desc>[1.8][formatter] Code formatter should understand lambda expressions.</short_desc>
          <delta_ts>2013-03-20 12:55:52 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>400830</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Jesper Moller">jesper</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>jarthana</cc>
    
    <cc>manju656</cc>
    
    <cc>markus_keller</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2224757</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-03-01 13:23:47 -0500</bug_when>
    <thetext>Code formatter should understand and process lambda expressions.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2225143</commentid>
    <comment_count>1</comment_count>
      <attachid>227857</attachid>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-03-03 16:28:57 -0500</bug_when>
    <thetext>Created attachment 227857
Tests for lambda expression formatter

Separating these out was a pain, since I had botched the original patch :-(</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2225144</commentid>
    <comment_count>2</comment_count>
      <attachid>227858</attachid>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-03-03 16:32:25 -0500</bug_when>
    <thetext>Created attachment 227858
Just the lambda formatter for now

Here&apos;s the &quot;just lambda expressions&quot; part.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2225656</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-03-04 10:14:28 -0500</bug_when>
    <thetext>I released some code that is in the nature of enabling changes, but not integral
changes to the format capability of lambda expressions via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=dee658b9081a58fda5dde28cf93d4ce67448b764.

Core capability files under review.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2225764</commentid>
    <comment_count>4</comment_count>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-03-04 12:10:03 -0500</bug_when>
    <thetext>(In reply to comment #3)
&gt; I released some code that is in the nature of enabling changes, but not
&gt; integral
&gt; changes to the format capability of lambda expressions via
&gt; http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/
&gt; ?h=BETA_JAVA8&amp;id=dee658b9081a58fda5dde28cf93d4ce67448b764.
&gt; 
&gt; Core capability files under review.

I can rearrange the patches slightly to make them into smaller bits, if you want. Might make them more manageable (if nothing else, legally)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2228501</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-03-09 14:03:06 -0500</bug_when>
    <thetext>I made the following changes which are routine in nature

(1) Updated bug number in copy right to the present bug.
(2) Fixed missing JCL disclaimer in CodeFormatterVisitor &amp; Formatter18Tests.
(3) In DefaultCodeFormatterConstants, provided cross references
in javadoc.
(4) CodeFormatterVisitor(LE):
Changed
this.scribe.printNextToken(SINGLETYPEREFERENCE_EXPECTEDTOKENS);
to
this.scribe.printNextToken(TerminalTokens.TokenNameIdentifier);
(5) .project - changed the name from FormatterJsr308 -&gt; FormatterJsr335
(6) Hooked up Formatter18Tests into RunAllJava8Tests

and released them here:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=b64275d5d6005c49a64e53460529203088ebb2bb.

Before resolving, can you please do/check the following:

(1) We want a test that exercises the new options in their non-default
value settings.
(2) Given the following program:
interface I {
	int id(int x, int y);
}

public class X {
	I i = (x,y) -&gt; x;
}
formatting turns it into:
interface I {
	int id(int x, int y);
}

public class X {
	I i = ( x, y) -&gt; x;
}

The space before the first type elided lambda parameter looks most
certainly not what a user would want ??</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2228502</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-03-09 14:07:19 -0500</bug_when>
    <thetext>Comments welcome on the formatter options for lambda expressions:
(This has already been released, so you can experiment with it)


	/**
	 * &lt;pre&gt;
	 * FORMATTER / Option to position the braces of a lambda block
	 *     - option id:         &quot;org.eclipse.jdt.core.formatter.brace_position_for_lambda_body&quot;
	 *     - possible values:   { END_OF_LINE, NEXT_LINE, NEXT_LINE_SHIFTED, NEXT_LINE_ON_WRAP }
	 *     - default:           END_OF_LINE
	 * &lt;/pre&gt;
	 * @see #END_OF_LINE
	 * @see #NEXT_LINE
	 * @see #NEXT_LINE_SHIFTED
	 * @see #NEXT_LINE_ON_WRAP
	 * @since 3.9
	 */
	public static final String FORMATTER_BRACE_POSITION_FOR_LAMBDA_BODY = JavaCore.PLUGIN_ID + &quot;.formatter.brace_position_for_lambda_body&quot;;	//$NON-NLS-1$

 	/**
 	 * &lt;pre&gt;
	 * FORMATTER / Option to insert a space after the -&gt; in lambda expressions
	 *     - option id:         &quot;org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow&quot;
	 *     - possible values:   { INSERT, DO_NOT_INSERT }
	 *     - default:           INSERT
	 * &lt;/pre&gt;
	 * @see JavaCore#INSERT
	 * @see JavaCore#DO_NOT_INSERT
	 * @since 3.9
	 */
	public static final String FORMATTER_INSERT_SPACE_AFTER_LAMBDA_ARROW  = JavaCore.PLUGIN_ID + &quot;.formatter.insert_space_after_lambda_arrow&quot;;	//$NON-NLS-1$

 	/**
 	 * &lt;pre&gt;
	 * FORMATTER / Option to insert a space before lambda -&gt;
	 *     - option id:         &quot;org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow&quot;
	 *     - possible values:   { INSERT, DO_NOT_INSERT }
	 *     - default:           INSERT
	 * &lt;/pre&gt;
	 * @see JavaCore#INSERT
	 * @see JavaCore#DO_NOT_INSERT
	 * @since 3.9
	 */
	public static final String FORMATTER_INSERT_SPACE_BEFORE_LAMBDA_ARROW = JavaCore.PLUGIN_ID + &quot;.formatter.insert_space_before_lambda_arrow&quot;;	//$NON-NLS-1$</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2233234</commentid>
    <comment_count>7</comment_count>
      <attachid>228597</attachid>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-03-18 17:57:19 -0400</bug_when>
    <thetext>Created attachment 228597
Patch for the problem in comment 5

That is, the extra space before an argument name with an elided type.

I will add more tests, but they&apos;re not ready yet.

This test should not affect the JSR308 formatter patch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2233329</commentid>
    <comment_count>8</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-03-19 00:22:34 -0400</bug_when>
    <thetext>(In reply to comment #7)
&gt; Created attachment 228597 [details]
&gt; Patch for the problem in comment 5
&gt; 
&gt; That is, the extra space before an argument name with an elided type.

Thank you. Released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=cf072eeff121940a541295553114f490c9a9bb69</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2234250</commentid>
    <comment_count>9</comment_count>
      <attachid>228713</attachid>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-03-20 10:30:21 -0400</bug_when>
    <thetext>Created attachment 228713
Patch for non-default options regarding lambda formatting</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2234372</commentid>
    <comment_count>10</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-03-20 12:55:52 -0400</bug_when>
    <thetext>(In reply to comment #9)
&gt; Created attachment 228713 [details]
&gt; Patch for non-default options regarding lambda formatting

Thank you. Released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=c67e828d3788591f96003d3b6db18c20724f7bf4</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>227857</attachid>
            <date>2013-03-03 16:28:00 -0500</date>
            <delta_ts>2013-03-03 16:28:57 -0500</delta_ts>
            <desc>Tests for lambda expression formatter</desc>
            <filename>just-lambda-formatter-tests-patch.txt</filename>
            <type>text/plain</type>
            <size>12304</size>
            <attacher name="Jesper Moller">jesper</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9SdW5Gb3JtYXR0ZXJUZXN0cy5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL1J1bkZv
cm1hdHRlclRlc3RzLmphdmEKaW5kZXggZGE3MjU1Ni4uNjNlNzVlOCAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL1J1bkZvcm1hdHRlclRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL1J1bkZvcm1hdHRlclRlc3Rz
LmphdmEKQEAgLTQsOSArNCwxNCBAQAogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0
ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBh
bmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAogICogaHR0cDovL3d3
dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwKKyAqIAorICogVGhpcyBpcyBhbiBpbXBs
ZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRl
ciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxh
YmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29k
ZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCiAg
KgogICogQ29udHJpYnV0b3JzOgogICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJ
IGFuZCBpbXBsZW1lbnRhdGlvbgorICogICAgIEplc3BlciBTIE1vbGxlciAtIENvbnRyaWJ1dGlv
biBmb3IgYnVnIDQwMDgzMAogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzOwogCkBAIC0zMSw2ICszNiw3IEBACiAJc3RhdGljIHsKIAkJ
VEVTVF9TVUlURVMuYWRkKEZvcm1hdHRlckNvbW1lbnRzQnVnc1Rlc3QuY2xhc3MpOwogCQlURVNU
X1NVSVRFUy5hZGQoRm9ybWF0dGVyQ29tbWVudHNUZXN0cy5jbGFzcyk7CisJCVRFU1RfU1VJVEVT
LmFkZChGb3JtYXR0ZXIxOFRlc3RzLmNsYXNzKTsKIAkJVEVTVF9TVUlURVMuYWRkKEZvcm1hdHRl
ckNvbW1lbnRzQ2xlYXJCbGFua0xpbmVzVGVzdHMuY2xhc3MpOwogCQlURVNUX1NVSVRFUy5hZGQo
Rm9ybWF0dGVySmF2YWRvY0RvbnRJbmRlbnRUYWdzVGVzdHMuY2xhc3MpOwogCQlURVNUX1NVSVRF
Uy5hZGQoRm9ybWF0dGVySmF2YWRvY0RvbnRJbmRlbnRUYWdzRGVzY3JpcHRpb25UZXN0cy5jbGFz
cyk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZm9ybWF0dGVyL0Zvcm1hdHRlcjE4VGVzdHMuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9mb3JtYXR0ZXIvRm9ybWF0dGVyMThUZXN0cy5qYXZhCm5ldyBmaWxlIG1vZGUgMTAw
NjQ0CmluZGV4IDAwMDAwMDAuLmY4Y2ZmMzYKLS0tIC9kZXYvbnVsbAorKysgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZm9y
bWF0dGVyL0Zvcm1hdHRlcjE4VGVzdHMuamF2YQpAQCAtMCwwICsxLDE2MyBAQAorLyoqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioKKyAqIENvcHlyaWdodCAoYykgMjAxMyBKZXNwZXIgU3RlZW4gTW9sbGVy
IGFuZCBvdGhlcnMuCisgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRo
ZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCisgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhl
IHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKKyAqIHdoaWNoIGFjY29t
cGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CisgKiBodHRwOi8v
d3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAorICogCisgKiBDb250cmlidXRvcnM6
CisgKiAgICAgSmVzcGVyIFN0ZWVuIE1vbGxlciAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRh
dGlvbgorICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCitwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLmZvcm1hdHRlcjsKKworaW1wb3J0IGphdmEudXRpbC5NYXA7CisKK2ltcG9ydCBq
dW5pdC5mcmFtZXdvcmsuVGVzdDsKKworaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucmVzb3VyY2Vz
LklXb3Jrc3BhY2VEZXNjcmlwdGlvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5JQ29t
cGlsYXRpb25Vbml0OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklKYXZhUHJvamVjdDsK
K2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5KYXZhTW9kZWxFeGNlcHRpb247CitpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmNvcmUuZm9ybWF0dGVyLkNvZGVGb3JtYXR0ZXI7CitpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwuQWJzdHJhY3RKYXZhTW9kZWxUZXN0czsKK2lt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy51dGlsLlV0aWw7CitpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmltcGwuQ29tcGlsZXJPcHRpb25zOworaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5mb3JtYXR0ZXIuRGVmYXVsdENvZGVGb3JtYXR0ZXI7
CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmZvcm1hdHRlci5EZWZhdWx0Q29kZUZv
cm1hdHRlck9wdGlvbnM7CitpbXBvcnQgb3JnLmVjbGlwc2UudGV4dC5lZGl0cy5UZXh0RWRpdDsK
KworcHVibGljIGNsYXNzIEZvcm1hdHRlcjE4VGVzdHMgZXh0ZW5kcyBBYnN0cmFjdEphdmFNb2Rl
bFRlc3RzIHsKKworCXByb3RlY3RlZCBzdGF0aWMgSUphdmFQcm9qZWN0IEpBVkFfUFJPSkVDVDsK
KworCXB1YmxpYyBzdGF0aWMgZmluYWwgaW50IFVOS05PV05fS0lORCA9IDA7CisJcHVibGljIHN0
YXRpYyBmaW5hbCBTdHJpbmcgSU4gPSAiX2luIjsKKwlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmlu
ZyBPVVQgPSAiX291dCI7CisJcHVibGljIHN0YXRpYyBmaW5hbCBib29sZWFuIERFQlVHID0gZmFs
c2U7CisJc3RhdGljIGZpbmFsIFN0cmluZyBMSU5FX1NFUEFSQVRPUiA9IFN5c3RlbS5nZXRQcm9w
ZXJ0eSgibGluZS5zZXBhcmF0b3IiKTsKKwlwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgUFJP
SkVDVF9OQU1FID0gIkZvcm1hdHRlcjE4IjsgCisKKwlEZWZhdWx0Q29kZUZvcm1hdHRlck9wdGlv
bnMgZm9ybWF0dGVyUHJlZnM7CisJTWFwIGZvcm1hdHRlck9wdGlvbnM7CisKKwlzdGF0aWMgewor
Ly8JCVRFU1RTX05VTUJFUlMgPSBuZXcgaW50W10geyA3ODMgfTsKKy8vCQlURVNUU19SQU5HRSA9
IG5ldyBpbnRbXSB7IDczNCwgLTEgfTsKKwl9CisJcHVibGljIHN0YXRpYyBUZXN0IHN1aXRlKCkg
eworCQlyZXR1cm4gYnVpbGRNb2RlbFRlc3RTdWl0ZShGb3JtYXR0ZXIxOFRlc3RzLmNsYXNzKTsK
Kwl9CisKKwlwdWJsaWMgRm9ybWF0dGVyMThUZXN0cyhTdHJpbmcgbmFtZSkgeworCQlzdXBlcihu
YW1lKTsKKwl9CisKKwkvKioKKwkgKiBJbml0IGZvcm1hdHRlciBwcmVmZXJlbmNlcyB3aXRoIEVj
bGlwc2UgZGVmYXVsdCBzZXR0aW5ncy4KKwkgKi8KKwlwcm90ZWN0ZWQgdm9pZCBzZXRVcCgpIHRo
cm93cyBFeGNlcHRpb24geworCSAgICBzdXBlci5zZXRVcCgpOworCQl0aGlzLmZvcm1hdHRlclBy
ZWZzID0gRGVmYXVsdENvZGVGb3JtYXR0ZXJPcHRpb25zLmdldEVjbGlwc2VEZWZhdWx0U2V0dGlu
Z3MoKTsKKwkJaWYgKEpBVkFfUFJPSkVDVCAhPSBudWxsKSB7CisJCQl0aGlzLmZvcm1hdHRlck9w
dGlvbnMgPSBKQVZBX1BST0pFQ1QuZ2V0T3B0aW9ucyh0cnVlKTsKKwkJfQorCQl0aGlzLmZvcm1h
dHRlck9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fQ29tcGxpYW5jZSwgQ29tcGls
ZXJPcHRpb25zLlZFUlNJT05fMV84KTsKKwkJdGhpcy5mb3JtYXR0ZXJPcHRpb25zLnB1dChDb21w
aWxlck9wdGlvbnMuT1BUSU9OX1RhcmdldFBsYXRmb3JtLCBDb21waWxlck9wdGlvbnMuVkVSU0lP
Tl8xXzgpOworCQl0aGlzLmZvcm1hdHRlck9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJ
T05fU291cmNlLCBDb21waWxlck9wdGlvbnMuVkVSU0lPTl8xXzgpOworCX0KKworCS8qKgorCSAq
IENyZWF0ZSBwcm9qZWN0IGFuZCBzZXQgdGhlIGphciBwbGFjZWhvbGRlci4KKwkgKi8KKwlwdWJs
aWMgdm9pZCBzZXRVcFN1aXRlKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCS8vIGVuc3VyZSBhdXRv
YnVpbGRpbmcgaXMgdHVybmVkIG9mZgorCQlJV29ya3NwYWNlRGVzY3JpcHRpb24gZGVzY3JpcHRp
b24gPSBnZXRXb3Jrc3BhY2UoKS5nZXREZXNjcmlwdGlvbigpOworCQlpZiAoZGVzY3JpcHRpb24u
aXNBdXRvQnVpbGRpbmcoKSkgeworCQkJZGVzY3JpcHRpb24uc2V0QXV0b0J1aWxkaW5nKGZhbHNl
KTsKKwkJCWdldFdvcmtzcGFjZSgpLnNldERlc2NyaXB0aW9uKGRlc2NyaXB0aW9uKTsKKwkJfQor
CisJCWlmIChKQVZBX1BST0pFQ1QgPT0gbnVsbCkgeworCQkJSkFWQV9QUk9KRUNUID0gc2V0VXBK
YXZhUHJvamVjdChQUk9KRUNUX05BTUUsICIxLjgiKTsgLy8kTk9OLU5MUy0xJAorCQl9CisJfQor
CisJLyoqCisJICogUmVzZXQgdGhlIGphciBwbGFjZWhvbGRlciBhbmQgZGVsZXRlIHByb2plY3Qu
CisJICovCisJcHVibGljIHZvaWQgdGVhckRvd25TdWl0ZSgpIHRocm93cyBFeGNlcHRpb24gewor
CQlkZWxldGVQcm9qZWN0KEpBVkFfUFJPSkVDVCk7IC8vJE5PTi1OTFMtMSQKKwkJSkFWQV9QUk9K
RUNUID0gbnVsbDsKKwkJc3VwZXIudGVhckRvd25TdWl0ZSgpOworCX0KKworCVN0cmluZyBydW5G
b3JtYXR0ZXIoQ29kZUZvcm1hdHRlciBjb2RlRm9ybWF0dGVyLCBTdHJpbmcgc291cmNlLCBpbnQg
a2luZCwgaW50IGluZGVudGF0aW9uTGV2ZWwsIGludCBvZmZzZXQsIGludCBsZW5ndGgsIFN0cmlu
ZyBsaW5lU2VwYXJhdG9yLCBib29sZWFuIHJlcGVhdCkgeworCQlUZXh0RWRpdCBlZGl0ID0gY29k
ZUZvcm1hdHRlci5mb3JtYXQoa2luZCwgc291cmNlLCBvZmZzZXQsIGxlbmd0aCwgaW5kZW50YXRp
b25MZXZlbCwgbGluZVNlcGFyYXRvcik7Ly8kTk9OLU5MUy0xJAorCQlpZiAoZWRpdCA9PSBudWxs
KSByZXR1cm4gbnVsbDsKKwkJU3RyaW5nIHJlc3VsdCA9IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb3JlLnV0aWwuVXRpbC5lZGl0ZWRTdHJpbmcoc291cmNlLCBlZGl0KTsKKworCQlpZiAocmVw
ZWF0ICYmIGxlbmd0aCA9PSBzb3VyY2UubGVuZ3RoKCkpIHsKKwkJCWVkaXQgPSBjb2RlRm9ybWF0
dGVyLmZvcm1hdChraW5kLCByZXN1bHQsIDAsIHJlc3VsdC5sZW5ndGgoKSwgaW5kZW50YXRpb25M
ZXZlbCwgbGluZVNlcGFyYXRvcik7Ly8kTk9OLU5MUy0xJAorCQkJaWYgKGVkaXQgPT0gbnVsbCkg
cmV0dXJuIG51bGw7CisJCQlmaW5hbCBTdHJpbmcgcmVzdWx0MiA9IG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb3JlLnV0aWwuVXRpbC5lZGl0ZWRTdHJpbmcocmVzdWx0LCBlZGl0KTsKKwkJCWlm
ICghcmVzdWx0LmVxdWFscyhyZXN1bHQyKSkgeworCQkJCWFzc2VydFNvdXJjZUVxdWFscygiU2Vj
b25kIGZvcm1hdHRpbmcgaXMgZGlmZmVyZW50IGZyb20gZmlyc3Qgb25lISIsIFV0aWwuY29udmVy
dFRvSW5kZXBlbmRhbnRMaW5lRGVsaW1pdGVyKHJlc3VsdCksIFV0aWwuY29udmVydFRvSW5kZXBl
bmRhbnRMaW5lRGVsaW1pdGVyKHJlc3VsdDIpKTsKKwkJCX0KKwkJfQorCQlyZXR1cm4gcmVzdWx0
OworCX0KKworCXByaXZhdGUgU3RyaW5nIGdldEluKFN0cmluZyBjb21waWxhdGlvblVuaXROYW1l
KSB7CisJCWFzc2VydE5vdE51bGwoY29tcGlsYXRpb25Vbml0TmFtZSk7CisJCWludCBkb3RJbmRl
eCA9IGNvbXBpbGF0aW9uVW5pdE5hbWUuaW5kZXhPZignLicpOworCQlhc3NlcnRUcnVlKGRvdElu
ZGV4ICE9IC0xKTsKKwkJcmV0dXJuIGNvbXBpbGF0aW9uVW5pdE5hbWUuc3Vic3RyaW5nKDAsIGRv
dEluZGV4KSArIElOICsgY29tcGlsYXRpb25Vbml0TmFtZS5zdWJzdHJpbmcoZG90SW5kZXgpOwor
CX0KKworCXByaXZhdGUgU3RyaW5nIGdldE91dChTdHJpbmcgY29tcGlsYXRpb25Vbml0TmFtZSkg
eworCQlhc3NlcnROb3ROdWxsKGNvbXBpbGF0aW9uVW5pdE5hbWUpOworCQlpbnQgZG90SW5kZXgg
PSBjb21waWxhdGlvblVuaXROYW1lLmluZGV4T2YoJy4nKTsKKwkJYXNzZXJ0VHJ1ZShkb3RJbmRl
eCAhPSAtMSk7CisJCXJldHVybiBjb21waWxhdGlvblVuaXROYW1lLnN1YnN0cmluZygwLCBkb3RJ
bmRleCkgKyBPVVQgKyBjb21waWxhdGlvblVuaXROYW1lLnN1YnN0cmluZyhkb3RJbmRleCk7CisJ
fQorCisJdm9pZCBhc3NlcnRMaW5lRXF1YWxzKFN0cmluZyBhY3R1YWxDb250ZW50cywgU3RyaW5n
IG9yaWdpbmFsU291cmNlLCBTdHJpbmcgZXhwZWN0ZWRDb250ZW50cywgYm9vbGVhbiBjaGVja051
bGwpIHsKKwkJaWYgKGFjdHVhbENvbnRlbnRzID09IG51bGwpIHsKKwkJCWFzc2VydFRydWUoImFj
dHVhbENvbnRlbnRzIGlzIG51bGwiLCBjaGVja051bGwpOworCQkJYXNzZXJ0RXF1YWxzKGV4cGVj
dGVkQ29udGVudHMsIG9yaWdpbmFsU291cmNlKTsKKwkJCXJldHVybjsKKwkJfQorCQlhc3NlcnRT
b3VyY2VFcXVhbHMoIkRpZmZlcmVudCBudW1iZXIgb2YgbGVuZ3RoIiwgVXRpbC5jb252ZXJ0VG9J
bmRlcGVuZGFudExpbmVEZWxpbWl0ZXIoZXhwZWN0ZWRDb250ZW50cyksIGFjdHVhbENvbnRlbnRz
KTsKKwl9CisJcHJpdmF0ZSB2b2lkIHJ1blRlc3QoU3RyaW5nIHBhY2thZ2VOYW1lLCBTdHJpbmcg
Y29tcGlsYXRpb25Vbml0TmFtZSkgeworCQlEZWZhdWx0Q29kZUZvcm1hdHRlciBjb2RlRm9ybWF0
dGVyID0gbmV3IERlZmF1bHRDb2RlRm9ybWF0dGVyKHRoaXMuZm9ybWF0dGVyUHJlZnMsIHRoaXMu
Zm9ybWF0dGVyT3B0aW9ucyk7CisJCXJ1blRlc3QoY29kZUZvcm1hdHRlciwgcGFja2FnZU5hbWUs
IGNvbXBpbGF0aW9uVW5pdE5hbWUsIENvZGVGb3JtYXR0ZXIuS19DT01QSUxBVElPTl9VTklULCAw
KTsKKwl9CisJcHJpdmF0ZSB2b2lkIHJ1blRlc3QoQ29kZUZvcm1hdHRlciBjb2RlRm9ybWF0dGVy
LCBTdHJpbmcgcGFja2FnZU5hbWUsIFN0cmluZyBjb21waWxhdGlvblVuaXROYW1lLCBpbnQga2lu
ZCwgaW50IGluZGVudGF0aW9uTGV2ZWwpIHsKKwkJcnVuVGVzdChjb2RlRm9ybWF0dGVyLCBwYWNr
YWdlTmFtZSwgY29tcGlsYXRpb25Vbml0TmFtZSwga2luZCwgaW5kZW50YXRpb25MZXZlbCwgZmFs
c2UsIDAsIC0xLCBudWxsKTsKKwl9CisJcHJpdmF0ZSB2b2lkIHJ1blRlc3QoQ29kZUZvcm1hdHRl
ciBjb2RlRm9ybWF0dGVyLCBTdHJpbmcgcGFja2FnZU5hbWUsIFN0cmluZyBjb21waWxhdGlvblVu
aXROYW1lLCBpbnQga2luZCwgaW50IGluZGVudGF0aW9uTGV2ZWwsIGJvb2xlYW4gY2hlY2tOdWxs
LCBpbnQgb2Zmc2V0LCBpbnQgbGVuZ3RoLCBTdHJpbmcgbGluZVNlcGFyYXRvcikgeworCQl0cnkg
eworCQkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KFBS
T0pFQ1RfTkFNRSAsICIiLCBwYWNrYWdlTmFtZSwgZ2V0SW4oY29tcGlsYXRpb25Vbml0TmFtZSkp
OyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJCVN0cmluZyBzb3VyY2UgPSBzb3VyY2VV
bml0LmdldFNvdXJjZSgpOworCQkJYXNzZXJ0Tm90TnVsbChzb3VyY2UpOworCQkJSUNvbXBpbGF0
aW9uVW5pdCBvdXRwdXRVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KFBST0pFQ1RfTkFNRSAsICIi
LCBwYWNrYWdlTmFtZSwgZ2V0T3V0KGNvbXBpbGF0aW9uVW5pdE5hbWUpKTsgLy8kTk9OLU5MUy0x
JCAvLyROT04tTkxTLTIkCisJCQlhc3NlcnROb3ROdWxsKG91dHB1dFVuaXQpOworCQkJU3RyaW5n
IHJlc3VsdDsKKwkJCWlmIChsZW5ndGggPT0gLTEpIHsKKwkJCQlyZXN1bHQgPSBydW5Gb3JtYXR0
ZXIoY29kZUZvcm1hdHRlciwgc291cmNlLCBraW5kLCBpbmRlbnRhdGlvbkxldmVsLCBvZmZzZXQs
IHNvdXJjZS5sZW5ndGgoKSwgbGluZVNlcGFyYXRvciwgdHJ1ZSk7CisJCQl9IGVsc2UgeworCQkJ
CXJlc3VsdCA9IHJ1bkZvcm1hdHRlcihjb2RlRm9ybWF0dGVyLCBzb3VyY2UsIGtpbmQsIGluZGVu
dGF0aW9uTGV2ZWwsIG9mZnNldCwgbGVuZ3RoLCBsaW5lU2VwYXJhdG9yLCB0cnVlKTsKKwkJCX0K
KwkJCWFzc2VydExpbmVFcXVhbHMocmVzdWx0LCBzb3VyY2UsIG91dHB1dFVuaXQuZ2V0U291cmNl
KCksIGNoZWNrTnVsbCk7CisJCX0gY2F0Y2ggKEphdmFNb2RlbEV4Y2VwdGlvbiBlKSB7CisJCQll
LnByaW50U3RhY2tUcmFjZSgpOworCQkJYXNzZXJ0VHJ1ZShmYWxzZSk7CisJCX0KKwl9CisKKwlw
dWJsaWMgdm9pZCB0ZXN0TGFtYmRhKCkgeworCQlydW5UZXN0KCJ0ZXN0TGFtYmRhIiwgIkEuamF2
YSIpOy8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCX0KKworfQpkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvd29ya3NwYWNlL0Zvcm1hdHRlcjE4Ly5jbGFz
c3BhdGggYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC93b3Jrc3BhY2UvRm9ybWF0
dGVyMTgvLmNsYXNzcGF0aApuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwLi5lNGFj
NjExCi0tLSAvZGV2L251bGwKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwv
d29ya3NwYWNlL0Zvcm1hdHRlcjE4Ly5jbGFzc3BhdGgKQEAgLTAsMCArMSw2IEBACis8P3htbCB2
ZXJzaW9uPSIxLjAiIGVuY29kaW5nPSJVVEYtOCI/PgorPGNsYXNzcGF0aD4KKyAgICA8Y2xhc3Nw
YXRoZW50cnkga2luZD0ic3JjIiBwYXRoPSIiLz4KKyAgICA8Y2xhc3NwYXRoZW50cnkga2luZD0i
dmFyIiBwYXRoPSJKQ0wxOF9MSUIiIHNvdXJjZXBhdGg9IkpDTDE4X1NSQyIgcm9vdHBhdGg9IkpD
TF9TUkMxOFJPT1QiLz4KKyAgICA8Y2xhc3NwYXRoZW50cnkga2luZD0ib3V0cHV0IiBwYXRoPSJi
aW4iLz4KKzwvY2xhc3NwYXRoPgpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGUKZGlmZiAtLWdp
dCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3dvcmtzcGFjZS9Gb3JtYXR0ZXIx
OC8ucHJvamVjdCBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3dvcmtzcGFjZS9G
b3JtYXR0ZXIxOC8ucHJvamVjdApuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwLi5h
YWQyZWJiCi0tLSAvZGV2L251bGwKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9k
ZWwvd29ya3NwYWNlL0Zvcm1hdHRlcjE4Ly5wcm9qZWN0CkBAIC0wLDAgKzEsMTcgQEAKKzw/eG1s
IHZlcnNpb249IjEuMCIgZW5jb2Rpbmc9IlVURi04Ij8+Cis8cHJvamVjdERlc2NyaXB0aW9uPgor
CTxuYW1lPkZvcm1hdHRlckpzcjMwODwvbmFtZT4KKwk8Y29tbWVudD48L2NvbW1lbnQ+CisJPHBy
b2plY3RzPgorCTwvcHJvamVjdHM+CisJPGJ1aWxkU3BlYz4KKwkJPGJ1aWxkQ29tbWFuZD4KKwkJ
CTxuYW1lPm9yZy5lY2xpcHNlLmpkdC5jb3JlLmphdmFidWlsZGVyPC9uYW1lPgorCQkJPGFyZ3Vt
ZW50cz4KKwkJCTwvYXJndW1lbnRzPgorCQk8L2J1aWxkQ29tbWFuZD4KKwk8L2J1aWxkU3BlYz4K
Kwk8bmF0dXJlcz4KKwkJPG5hdHVyZT5vcmcuZWNsaXBzZS5qZHQuY29yZS5qYXZhbmF0dXJlPC9u
YXR1cmU+CisJPC9uYXR1cmVzPgorPC9wcm9qZWN0RGVzY3JpcHRpb24+CmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC93b3Jrc3BhY2UvRm9ybWF0dGVyMTgvdGVz
dExhbWJkYS9BX2luLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC93b3Jr
c3BhY2UvRm9ybWF0dGVyMTgvdGVzdExhbWJkYS9BX2luLmphdmEKbmV3IGZpbGUgbW9kZSAxMDA2
NDQKaW5kZXggMDAwMDAwMC4uMzdhMTZhYgotLS0gL2Rldi9udWxsCisrKyBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLm1vZGVsL3dvcmtzcGFjZS9Gb3JtYXR0ZXIxOC90ZXN0TGFtYmRhL0Ff
aW4uamF2YQpAQCAtMCwwICsxLDQwIEBACitwYWNrYWdlIHAxLnAyLnRlc3Q7CisKK2ltcG9ydCBq
YXZhLmlvLlNlcmlhbGl6YWJsZTsKK2ltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uOworCitwdWJs
aWMgYWJzdHJhY3QgY2xhc3MgQSBleHRlbmRzIGphdmEubGFuZy5PYmplY3QgaW1wbGVtZW50cyBS
dW5uYWJsZSwgQ2xvbmVhYmxlLCBTZXJpYWxpemFibGUgeworCXB1YmxpYyB2b2lkIHJ1bigpIHsK
Kwl9CisKKwlwdWJsaWMgdm9pZCBsYW1iZGFzKCkgeworCQlSdW5uYWJsZSBhID0gKCkgLT4gewor
CQkJdGhpc0lzQ3JhenkoKTsKKwkJCWlKdXN0TWV0KHlvdSk7CisJCQloZXJlLm51bWJlci5jYWxs
TWUoKTsKKwkJfTsKKworCQlGdW5jIGlkQSA9IHggLT4geDsKKworCQlGdW5jIGlkQiA9IHggLT4g
eyByZXR1cm4geDsgfTsKKwkJCisJCUZ1bmMgaWRDID0geCAgIC0+ICAgeDsKKworCQlGdW5jIGlk
MiA9IHggLT4geworCQkJaWYgKHggPT0gbnVsbCkKKwkJCXsKKwkJCQlyZXR1cm4gbnVsbDsKKwkJ
CX0KKwkJCWVsc2UKKwkJCQlyZXR1cm4geDsKKwkJfTsKKwkJCisJCUltYWdpbmFibGVGdW5jdGlv
bjxTdHJpbmcsIEludGVnZXI+IGYgPQorCQkJKFN0cmluZyBpbnB1dCkgLT4gaW5wdXQubGVuZ3Ro
KCk7CisKKwkJCUltYWdpbmFibGVGdW5jdGlvbjxTdHJpbmcsIEludGVnZXI+IGYyID0gKFN0cmlu
ZyBpbnB1dCkgLT4geyByZXR1cm4gaW5wdXQubGVuZ3RoKCkgKyBuZXcgTGV0c1ByZXRlbmQoKSB7
IGludCBob3dNYW55KCkgeyByZXR1cm4gNDI7IH0gfQorCQkJCQkKKy5ob3dNYW55KCk7IH07CisJ
fQorCit9ClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmlsZQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvd29ya3NwYWNlL0Zvcm1hdHRlcjE4L3Rlc3RMYW1iZGEv
QV9vdXQuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3dvcmtzcGFjZS9G
b3JtYXR0ZXIxOC90ZXN0TGFtYmRhL0Ffb3V0LmphdmEKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5k
ZXggMDAwMDAwMC4uNmNhNzBmNwotLS0gL2Rldi9udWxsCisrKyBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLm1vZGVsL3dvcmtzcGFjZS9Gb3JtYXR0ZXIxOC90ZXN0TGFtYmRhL0Ffb3V0Lmph
dmEKQEAgLTAsMCArMSw0NyBAQAorcGFja2FnZSBwMS5wMi50ZXN0OworCitpbXBvcnQgamF2YS5p
by5TZXJpYWxpemFibGU7CitpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjsKKworcHVibGljIGFi
c3RyYWN0IGNsYXNzIEEgZXh0ZW5kcyBqYXZhLmxhbmcuT2JqZWN0IGltcGxlbWVudHMgUnVubmFi
bGUsCisJCUNsb25lYWJsZSwgU2VyaWFsaXphYmxlIHsKKwlwdWJsaWMgdm9pZCBydW4oKSB7CisJ
fQorCisJcHVibGljIHZvaWQgbGFtYmRhcygpIHsKKwkJUnVubmFibGUgYSA9ICgpIC0+IHsKKwkJ
CXRoaXNJc0NyYXp5KCk7CisJCQlpSnVzdE1ldCh5b3UpOworCQkJaGVyZS5udW1iZXIuY2FsbE1l
KCk7CisJCX07CisKKwkJRnVuYyBpZEEgPSB4IC0+IHg7CisKKwkJRnVuYyBpZEIgPSB4IC0+IHsK
KwkJCXJldHVybiB4OworCQl9OworCisJCUZ1bmMgaWRDID0geCAtPiB4OworCisJCUZ1bmMgaWQy
ID0geCAtPiB7CisJCQlpZiAoeCA9PSBudWxsKSB7CisJCQkJcmV0dXJuIG51bGw7CisJCQl9IGVs
c2UKKwkJCQlyZXR1cm4geDsKKwkJfTsKKworCQlJbWFnaW5hYmxlRnVuY3Rpb248U3RyaW5nLCBJ
bnRlZ2VyPiBmID0gKFN0cmluZyBpbnB1dCkgLT4gaW5wdXQKKwkJCQkubGVuZ3RoKCk7CisKKwkJ
SW1hZ2luYWJsZUZ1bmN0aW9uPFN0cmluZywgSW50ZWdlcj4gZjIgPSAoU3RyaW5nIGlucHV0KSAt
PiB7CisJCQlyZXR1cm4gaW5wdXQubGVuZ3RoKCkgKyBuZXcgTGV0c1ByZXRlbmQoKSB7CisJCQkJ
aW50IGhvd01hbnkoKSB7CisJCQkJCXJldHVybiA0MjsKKwkJCQl9CisJCQl9CisKKwkJCS5ob3dN
YW55KCk7CisJCX07CisJfQorCit9ClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmlsZQ==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>227858</attachid>
            <date>2013-03-03 16:32:00 -0500</date>
            <delta_ts>2013-03-03 16:32:25 -0500</delta_ts>
            <desc>Just the lambda formatter for now</desc>
            <filename>just-lambda-formatter-patch.txt</filename>
            <type>text/plain</type>
            <size>23992</size>
            <attacher name="Jesper Moller">jesper</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9hc3QvTGFtYmRhRXhwcmVzc2lvbi5qYXZhIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Fz
dC9MYW1iZGFFeHByZXNzaW9uLmphdmEKaW5kZXggOTZhZjBlMi4uMjFiZDNlYiAxMDA2NDQKLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2FzdC9MYW1iZGFFeHByZXNzaW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9MYW1i
ZGFFeHByZXNzaW9uLmphdmEKQEAgLTQyMiw2ICs0MjIsMTAgQEAKIAkJCXZpc2l0b3IuZW5kVmlz
aXQodGhpcywgYmxvY2tTY29wZSk7CiAJfQogCQorCXB1YmxpYyBNZXRob2RTY29wZSBnZXRTY29w
ZSgpIHsKKwkJcmV0dXJuIHRoaXMuc2NvcGU7CisJfQorCQogCXByb3RlY3RlZCBib29sZWFuIHNo
YXBlQW5hbHlzaXNDb21wbGV0ZSgpIHsKIAkJcmV0dXJuIHRoaXMuc2hhcGVBbmFseXNpc0NvbXBs
ZXRlOwogCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvU2Nhbm5lci5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L3BhcnNlci9TY2FubmVyLmphdmEKaW5kZXggYWRlNjBjOS4uOGU5NDhiZSAxMDA2NDQKLS0tIGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL3BhcnNlci9TY2FubmVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9TY2FubmVyLmph
dmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0
IChjKSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0
IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0
cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwog
ICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJs
aWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwg
YW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtMTIsNiArMTIsNyBAQAogICogQ29udHJpYnV0b3JzOgog
ICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgog
ICogICAgIFN0ZXBoYW4gSGVycm1hbm4gLSBDb250cmlidXRpb24gZm9yIGJ1ZyAxODYzNDIgLSBb
Y29tcGlsZXJdW251bGxdIFVzaW5nIGFubm90YXRpb25zIGZvciBudWxsIGNoZWNraW5nCisgKiAg
ICAgSmVzcGVyIFMgTW9sbGVyICAtLiBDb250cmlidXRpb24gZm9yIGJ1ZyA0MDA4MzA6IFsxLjhd
W2Zvcm1hdHRlcl0gQ29kZSBmb3JtYXR0ZXIgZm9yIEphdmEgOAogICoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5wYXJzZXI7
CiAKQEAgLTM4MzcsNyArMzgzOCw3IEBACiAJaWYgKHRoaXMuY3VycmVudFBvc2l0aW9uID4gdGhp
cy5lb2ZQb3NpdGlvbikKIAkJcmV0dXJuICJiZWhpbmQgdGhlIEVPRlxuXG4iICsgbmV3IFN0cmlu
Zyh0aGlzLnNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKIAlpZiAodGhpcy5jdXJyZW50UG9zaXRpb24g
PD0gMCkKLQkJcmV0dXJuICJOT1Qgc3RhcnRlZCFcblxuIisgbmV3IFN0cmluZyh0aGlzLnNvdXJj
ZSk7IC8vJE5PTi1OTFMtMSQKKwkJcmV0dXJuICJOT1Qgc3RhcnRlZCFcblxuIisgKHRoaXMuc291
cmNlICE9IG51bGwgPyBuZXcgU3RyaW5nKHRoaXMuc291cmNlKSA6ICIiKTsgLy8kTk9OLU5MUy0x
JCAvLyROT04tTkxTLTIkCiAKIAlTdHJpbmdCdWZmZXIgYnVmZmVyID0gbmV3IFN0cmluZ0J1ZmZl
cigpOwogCWlmICh0aGlzLnN0YXJ0UG9zaXRpb24gPCAxMDAwKSB7CmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9mb3JtYXR0ZXIvb3JnL2VjbGlwc2UvamR0L2NvcmUvZm9ybWF0dGVy
L0RlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9mb3JtYXR0ZXIvb3JnL2VjbGlwc2UvamR0L2NvcmUvZm9ybWF0dGVyL0RlZmF1bHRDb2RlRm9y
bWF0dGVyQ29uc3RhbnRzLmphdmEKaW5kZXggMTY5NGI0OC4uN2I5OTk2NyAxMDA2NDQKLS0tIGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvZm9ybWF0dGVyL29yZy9lY2xpcHNlL2pkdC9jb3JlL2Zvcm1h
dHRlci9EZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5qYXZhCisrKyBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2Zvcm1hdHRlci9vcmcvZWNsaXBzZS9qZHQvY29yZS9mb3JtYXR0ZXIvRGVmYXVs
dENvZGVGb3JtYXR0ZXJDb25zdGFudHMuamF2YQpAQCAtMSwxNCArMSwxOSBAQAogLyoqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMSBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQg
dGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0
aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNj
b21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6
Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCiAgKgorICogVGhpcyBpcyBhbiBp
bXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1
bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZh
aWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUg
Y29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1Au
CisgKiAKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9yYXRpb24gIC0gaW5pdGlh
bCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCiAgKiAgICAgQnJvY2sgSmFuaWN6YWsgICAtIENvbnRy
aWJ1dGlvbiBmb3IgYnVnIDE1MDc0MQogICogICAgIFJheSBWLiAodm9pZHN0YXJAZ21haWwuY29t
KSAtIENvbnRyaWJ1dGlvbiBmb3IgYnVnIDI4Mjk4OAorICogICAgIEplc3BlciBTIE1vbGxlciAt
IENvbnRyaWJ1dGlvbiBmb3IgYnVnIDQwMDgzMAogICoqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBw
YWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5jb3JlLmZvcm1hdHRlcjsKIApAQCAtNjA2LDYgKzYxMSwy
MSBAQAogCSAqIEBzaW5jZSAzLjAKIAkgKi8KIAlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBG
T1JNQVRURVJfQlJBQ0VfUE9TSVRJT05fRk9SX1RZUEVfREVDTEFSQVRJT04gPSBKYXZhQ29yZS5Q
TFVHSU5fSUQgKyAiLmZvcm1hdHRlci5icmFjZV9wb3NpdGlvbl9mb3JfdHlwZV9kZWNsYXJhdGlv
biI7CS8vJE5PTi1OTFMtMSQKKworCS8qKgorCSAqIDxwcmU+CisJICogRk9STUFUVEVSIC8gT3B0
aW9uIHRvIHBvc2l0aW9uIHRoZSBicmFjZXMgb2YgYSBsYW1iZGEgYmxvY2sKKwkgKiAgICAgLSBv
cHRpb24gaWQ6ICAgICAgICAgIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmZvcm1hdHRlci5icmFjZV9w
b3NpdGlvbl9mb3JfbGFtYmRhX2JvZHkiCisJICogICAgIC0gcG9zc2libGUgdmFsdWVzOiAgIHsg
RU5EX09GX0xJTkUsIE5FWFRfTElORSwgTkVYVF9MSU5FX1NISUZURUQsIE5FWFRfTElORV9PTl9X
UkFQIH0KKwkgKiAgICAgLSBkZWZhdWx0OiAgICAgICAgICAgRU5EX09GX0xJTkUKKwkgKiA8L3By
ZT4KKwkgKiBAc2VlICNFTkRfT0ZfTElORQorCSAqIEBzZWUgI05FWFRfTElORQorCSAqIEBzZWUg
I05FWFRfTElORV9TSElGVEVECisJICogQHNlZSAjTkVYVF9MSU5FX09OX1dSQVAKKwkgKiBAc2lu
Y2UgMy45CisJICovCisJcHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgRk9STUFUVEVSX0JSQUNF
X1BPU0lUSU9OX0ZPUl9MQU1CREFfQk9EWSA9IEphdmFDb3JlLlBMVUdJTl9JRCArICIuZm9ybWF0
dGVyLmJyYWNlX3Bvc2l0aW9uX2Zvcl9sYW1iZGFfYm9keSI7CS8vJE5PTi1OTFMtMSQKIAogCS8q
KgogCSAqIDxwcmU+CkBAIC0yMDAyLDYgKzIwMjIsMTggQEAKIAlwdWJsaWMgc3RhdGljIGZpbmFs
IFN0cmluZyBGT1JNQVRURVJfSU5TRVJUX1NQQUNFX0FGVEVSX0VMTElQU0lTICA9IEphdmFDb3Jl
LlBMVUdJTl9JRCArICIuZm9ybWF0dGVyLmluc2VydF9zcGFjZV9hZnRlcl9lbGxpcHNpcyI7CS8v
JE5PTi1OTFMtMSQKIAkvKioKIAkgKiA8cHJlPgorCSAqIEZPUk1BVFRFUiAvIE9wdGlvbiB0byBp
bnNlcnQgYSBzcGFjZSBhZnRlciB0aGUgLT4gaW4gbGFtYmRhIGV4cHJlc3Npb25zCisJICogICAg
IC0gb3B0aW9uIGlkOiAgICAgICAgICJvcmcuZWNsaXBzZS5qZHQuY29yZS5mb3JtYXR0ZXIuaW5z
ZXJ0X3NwYWNlX2FmdGVyX2xhbWJkYV9hcnJvdyIKKwkgKiAgICAgLSBwb3NzaWJsZSB2YWx1ZXM6
ICAgeyBJTlNFUlQsIERPX05PVF9JTlNFUlQgfQorCSAqICAgICAtIGRlZmF1bHQ6ICAgICAgICAg
ICBJTlNFUlQKKwkgKiA8L3ByZT4KKwkgKiBAc2VlIEphdmFDb3JlI0lOU0VSVAorCSAqIEBzZWUg
SmF2YUNvcmUjRE9fTk9UX0lOU0VSVAorCSAqIEBzaW5jZSAzLjkKKwkgKi8KKwlwdWJsaWMgc3Rh
dGljIGZpbmFsIFN0cmluZyBGT1JNQVRURVJfSU5TRVJUX1NQQUNFX0FGVEVSX0xBTUJEQV9BUlJP
VyAgPSBKYXZhQ29yZS5QTFVHSU5fSUQgKyAiLmZvcm1hdHRlci5pbnNlcnRfc3BhY2VfYWZ0ZXJf
bGFtYmRhX2Fycm93IjsJLy8kTk9OLU5MUy0xJAorCS8qKgorCSAqIDxwcmU+CiAJICogRk9STUFU
VEVSIC8gT3B0aW9uIHRvIGluc2VydCBhIHNwYWNlIGFmdGVyIHRoZSBvcGVuaW5nIGFuZ2xlIGJy
YWNrZXQgaW4gcGFyYW1ldGVyaXplZCB0eXBlIHJlZmVyZW5jZQogCSAqICAgICAtIG9wdGlvbiBp
ZDogICAgICAgICAib3JnLmVjbGlwc2UuamR0LmNvcmUuZm9ybWF0dGVyLmluc2VydF9zcGFjZV9h
ZnRlcl9vcGVuaW5nX2FuZ2xlX2JyYWNrZXRfaW5fcGFyYW1ldGVyaXplZF90eXBlX3JlZmVyZW5j
ZSIKIAkgKiAgICAgLSBwb3NzaWJsZSB2YWx1ZXM6ICAgeyBJTlNFUlQsIERPX05PVF9JTlNFUlQg
fQpAQCAtMjkyNyw2ICsyOTU5LDE4IEBACiAJcHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgRk9S
TUFUVEVSX0lOU0VSVF9TUEFDRV9CRUZPUkVfRUxMSVBTSVMgID0gSmF2YUNvcmUuUExVR0lOX0lE
ICsgIi5mb3JtYXR0ZXIuaW5zZXJ0X3NwYWNlX2JlZm9yZV9lbGxpcHNpcyI7CS8vJE5PTi1OTFMt
MSQKIAkvKioKIAkgKiA8cHJlPgorCSAqIEZPUk1BVFRFUiAvIE9wdGlvbiB0byBpbnNlcnQgYSBz
cGFjZSBiZWZvcmUgbGFtYmRhIC0+CisJICogICAgIC0gb3B0aW9uIGlkOiAgICAgICAgICJvcmcu
ZWNsaXBzZS5qZHQuY29yZS5mb3JtYXR0ZXIuaW5zZXJ0X3NwYWNlX2JlZm9yZV9sYW1iZGFfYXJy
b3ciCisJICogICAgIC0gcG9zc2libGUgdmFsdWVzOiAgIHsgSU5TRVJULCBET19OT1RfSU5TRVJU
IH0KKwkgKiAgICAgLSBkZWZhdWx0OiAgICAgICAgICAgSU5TRVJUCisJICogPC9wcmU+CisJICog
QHNlZSBKYXZhQ29yZSNJTlNFUlQKKwkgKiBAc2VlIEphdmFDb3JlI0RPX05PVF9JTlNFUlQKKwkg
KiBAc2luY2UgMy45CisJICovCisJcHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgRk9STUFUVEVS
X0lOU0VSVF9TUEFDRV9CRUZPUkVfTEFNQkRBX0FSUk9XID0gSmF2YUNvcmUuUExVR0lOX0lEICsg
Ii5mb3JtYXR0ZXIuaW5zZXJ0X3NwYWNlX2JlZm9yZV9sYW1iZGFfYXJyb3ciOwkvLyROT04tTkxT
LTEkCisJLyoqCisJICogPHByZT4KIAkgKiBGT1JNQVRURVIgLyBPcHRpb24gdG8gaW5zZXJ0IGEg
c3BhY2UgYmVmb3JlIHRoZSBvcGVuaW5nIGFuZ2xlIGJyYWNrZXQgaW4gcGFyYW1ldGVyaXplZCB0
eXBlIHJlZmVyZW5jZQogCSAqICAgICAtIG9wdGlvbiBpZDogICAgICAgICAib3JnLmVjbGlwc2Uu
amR0LmNvcmUuZm9ybWF0dGVyLmluc2VydF9zcGFjZV9iZWZvcmVfb3BlbmluZ19hbmdsZV9icmFj
a2V0X2luX3BhcmFtZXRlcml6ZWRfdHlwZV9yZWZlcmVuY2UiCiAJICogICAgIC0gcG9zc2libGUg
dmFsdWVzOiAgIHsgSU5TRVJULCBET19OT1RfSU5TRVJUIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2Zvcm1hdHRlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvZm9ybWF0dGVy
L0NvZGVGb3JtYXR0ZXJWaXNpdG9yLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9mb3JtYXR0
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Zvcm1hdHRlci9Db2RlRm9ybWF0dGVyVmlzaXRv
ci5qYXZhCmluZGV4IDMwYThmY2UuLjQwN2U1NGIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2Zvcm1hdHRlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvZm9ybWF0dGVyL0NvZGVG
b3JtYXR0ZXJWaXNpdG9yLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZm9ybWF0dGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9mb3JtYXR0ZXIvQ29kZUZvcm1hdHRlclZpc2l0b3Iu
amF2YQpAQCAtNDksNiArNDksNyBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5hc3QuQ29uZGl0aW9uYWxFeHByZXNzaW9uOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5hc3QuQ29uc3RydWN0b3JEZWNsYXJhdGlvbjsKIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkNvbnRpbnVlU3RhdGVtZW50Owor
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuTGFtYmRhRXhwcmVz
c2lvbjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlVuaW9u
VHlwZVJlZmVyZW5jZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
YXN0LkRvU3RhdGVtZW50OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci5hc3QuRG91YmxlTGl0ZXJhbDsKQEAgLTE4OTgsMTAgKzE4OTksMzAgQEAKIAkJCWJvb2xlYW4g
c3BhY2VCZWZvcmVDb21tYSwKIAkJCWJvb2xlYW4gc3BhY2VBZnRlckNvbW1hLAogCQkJaW50IG1l
dGhvZERlY2xhcmF0aW9uUGFyYW1ldGVyc0FsaWdubWVudCkgeworCQlmb3JtYXRNZXRob2RBcmd1
bWVudHMoCisJCQkJbWV0aG9kRGVjbGFyYXRpb24uYXJndW1lbnRzLAorCQkJCW1ldGhvZERlY2xh
cmF0aW9uLnNjb3BlLAorCQkJCXNwYWNlQmVmb3JlT3BlblBhcmVuLAorCQkJCXNwYWNlQmV0d2Vl
bkVtcHR5UGFyYW1ldGVycywKKwkJCQlzcGFjZUJlZm9yZUNsb3NpbmdQYXJlbiwKKwkJCQlzcGFj
ZUJlZm9yZUZpcnN0UGFyYW1ldGVyLAorCQkJCXNwYWNlQmVmb3JlQ29tbWEsCisJCQkJc3BhY2VB
ZnRlckNvbW1hLAorCQkJCW1ldGhvZERlY2xhcmF0aW9uUGFyYW1ldGVyc0FsaWdubWVudCk7CisJ
fQorCXByaXZhdGUgdm9pZCBmb3JtYXRNZXRob2RBcmd1bWVudHMoCisJCQlmaW5hbCBBcmd1bWVu
dFtdIGFyZ3VtZW50cywKKwkJCU1ldGhvZFNjb3BlIHNjb3BlLAorCQkJYm9vbGVhbiBzcGFjZUJl
Zm9yZU9wZW5QYXJlbiwKKwkJCWJvb2xlYW4gc3BhY2VCZXR3ZWVuRW1wdHlQYXJhbWV0ZXJzLAor
CQkJYm9vbGVhbiBzcGFjZUJlZm9yZUNsb3NpbmdQYXJlbiwKKwkJCWJvb2xlYW4gc3BhY2VCZWZv
cmVGaXJzdFBhcmFtZXRlciwKKwkJCWJvb2xlYW4gc3BhY2VCZWZvcmVDb21tYSwKKwkJCWJvb2xl
YW4gc3BhY2VBZnRlckNvbW1hLAorCQkJaW50IG1ldGhvZERlY2xhcmF0aW9uUGFyYW1ldGVyc0Fs
aWdubWVudCkgewogCiAJCXRoaXMuc2NyaWJlLnByaW50TmV4dFRva2VuKFRlcm1pbmFsVG9rZW5z
LlRva2VuTmFtZUxQQVJFTiwgc3BhY2VCZWZvcmVPcGVuUGFyZW4pOwogCi0JCWZpbmFsIEFyZ3Vt
ZW50W10gYXJndW1lbnRzID0gbWV0aG9kRGVjbGFyYXRpb24uYXJndW1lbnRzOwogCQlpZiAoYXJn
dW1lbnRzICE9IG51bGwpIHsKIAkJCWlmIChzcGFjZUJlZm9yZUZpcnN0UGFyYW1ldGVyKSB7CiAJ
CQkJdGhpcy5zY3JpYmUuc3BhY2UoKTsKQEAgLTE5NDEsNyArMTk2Miw3IEBACiAJCQkJCQl9IGVs
c2UgaWYgKHNwYWNlQWZ0ZXJDb21tYSkgewogCQkJCQkJCXRoaXMuc2NyaWJlLnNwYWNlKCk7CiAJ
CQkJCQl9Ci0JCQkJCQlhcmd1bWVudHNbaV0udHJhdmVyc2UodGhpcywgbWV0aG9kRGVjbGFyYXRp
b24uc2NvcGUpOworCQkJCQkJYXJndW1lbnRzW2ldLnRyYXZlcnNlKHRoaXMsIHNjb3BlKTsKIAkJ
CQkJCWFyZ3VtZW50c0FsaWdubWVudC5zdGFydGluZ0NvbHVtbiA9IC0xOwogCQkJCQl9CiAJCQkJ
CW9rID0gdHJ1ZTsKQEAgLTQyNDAsNiArNDI2MSw0NiBAQAogCX0KIAogCS8qKgorCSAqIEBzZWUg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLkFTVFZpc2l0b3IjdmlzaXQob3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5MYW1iZGFFeHByZXNzaW9uLCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkJsb2NrU2NvcGUpCisJICovCisJcHVi
bGljIGJvb2xlYW4gdmlzaXQoTGFtYmRhRXhwcmVzc2lvbiBsYW1iZGFFeHByZXNzaW9uLCBCbG9j
a1Njb3BlIHNjb3BlKSB7CisJCQorCQlmaW5hbCBpbnQgbnVtYmVyT2ZQYXJlbnMgPSAobGFtYmRh
RXhwcmVzc2lvbi5iaXRzICYgQVNUTm9kZS5QYXJlbnRoZXNpemVkTUFTSykgPj4gQVNUTm9kZS5Q
YXJlbnRoZXNpemVkU0hJRlQ7CisJCWlmIChudW1iZXJPZlBhcmVucyA+IDApIHsKKwkJCW1hbmFn
ZU9wZW5pbmdQYXJlbnRoZXNpemVkRXhwcmVzc2lvbihsYW1iZGFFeHByZXNzaW9uLCBudW1iZXJP
ZlBhcmVucyk7CisJCX0KKwkJaWYgKGlzTmV4dFRva2VuKFRlcm1pbmFsVG9rZW5zLlRva2VuTmFt
ZUxQQVJFTikpIHsKKwkJCS8vIEZvcm1hdCBhcmd1bWVudHMKKwkJCWZvcm1hdE1ldGhvZEFyZ3Vt
ZW50cygKKwkJCQlsYW1iZGFFeHByZXNzaW9uLmFyZ3VtZW50cywKKwkJCQlsYW1iZGFFeHByZXNz
aW9uLmdldFNjb3BlKCksCisJCQkJdGhpcy5wcmVmZXJlbmNlcy5pbnNlcnRfc3BhY2VfYmVmb3Jl
X29wZW5pbmdfcGFyZW5faW5fbWV0aG9kX2RlY2xhcmF0aW9uLAorCQkJCXRoaXMucHJlZmVyZW5j
ZXMuaW5zZXJ0X3NwYWNlX2JldHdlZW5fZW1wdHlfcGFyZW5zX2luX21ldGhvZF9kZWNsYXJhdGlv
biwKKwkJCQl0aGlzLnByZWZlcmVuY2VzLmluc2VydF9zcGFjZV9iZWZvcmVfY2xvc2luZ19wYXJl
bl9pbl9tZXRob2RfZGVjbGFyYXRpb24sCisJCQkJdGhpcy5wcmVmZXJlbmNlcy5pbnNlcnRfc3Bh
Y2VfYWZ0ZXJfb3BlbmluZ19wYXJlbl9pbl9tZXRob2RfZGVjbGFyYXRpb24sCisJCQkJdGhpcy5w
cmVmZXJlbmNlcy5pbnNlcnRfc3BhY2VfYmVmb3JlX2NvbW1hX2luX21ldGhvZF9kZWNsYXJhdGlv
bl9wYXJhbWV0ZXJzLAorCQkJCXRoaXMucHJlZmVyZW5jZXMuaW5zZXJ0X3NwYWNlX2FmdGVyX2Nv
bW1hX2luX21ldGhvZF9kZWNsYXJhdGlvbl9wYXJhbWV0ZXJzLAorCQkJCXRoaXMucHJlZmVyZW5j
ZXMuYWxpZ25tZW50X2Zvcl9wYXJhbWV0ZXJzX2luX21ldGhvZF9kZWNsYXJhdGlvbik7CisJCX0g
ZWxzZSB7CisJCQkvLyBUaGlzIE1VU1QgYmUgYSBzaW5nbGUsIHVudHlwZWQgcGFyYW1ldGVyCisJ
CQl0aGlzLnNjcmliZS5wcmludE5leHRUb2tlbihTSU5HTEVUWVBFUkVGRVJFTkNFX0VYUEVDVEVE
VE9LRU5TKTsKKwkJfQorCQlpZiAodGhpcy5wcmVmZXJlbmNlcy5pbnNlcnRfc3BhY2VfYmVmb3Jl
X2xhbWJkYV9hcnJvdykgdGhpcy5zY3JpYmUuc3BhY2UoKTsKKwkJdGhpcy5zY3JpYmUucHJpbnRO
ZXh0VG9rZW4oVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lQVJST1cpOworCQlpZiAodGhpcy5wcmVm
ZXJlbmNlcy5pbnNlcnRfc3BhY2VfYWZ0ZXJfbGFtYmRhX2Fycm93KSB0aGlzLnNjcmliZS5zcGFj
ZSgpOworCQlpZiAobGFtYmRhRXhwcmVzc2lvbi5ib2R5IGluc3RhbmNlb2YgQmxvY2spIHsKKwkJ
CWZvcm1hdEJsb2NrKChCbG9jaykgbGFtYmRhRXhwcmVzc2lvbi5ib2R5LCBzY29wZSwgdGhpcy5w
cmVmZXJlbmNlcy5icmFjZV9wb3NpdGlvbl9mb3JfbGFtYmRhX2JvZHksIHRoaXMucHJlZmVyZW5j
ZXMuaW5zZXJ0X3NwYWNlX2JlZm9yZV9vcGVuaW5nX2JyYWNlX2luX2Jsb2NrKTsKKwkJfSBlbHNl
IHsKKwkJCWxhbWJkYUV4cHJlc3Npb24uYm9keS50cmF2ZXJzZSh0aGlzLCBzY29wZSk7CisJCX0K
KworCQlpZiAobnVtYmVyT2ZQYXJlbnMgPiAwKSB7CisJCQltYW5hZ2VDbG9zaW5nUGFyZW50aGVz
aXplZEV4cHJlc3Npb24obGFtYmRhRXhwcmVzc2lvbiwgbnVtYmVyT2ZQYXJlbnMpOworCQl9CisJ
CXJldHVybiBmYWxzZTsKKwl9CisJCisJLyoqCiAJICogQHNlZSBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29tcGlsZXIuQVNUVmlzaXRvciN2aXNpdChvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuYXN0LkxvY2FsRGVjbGFyYXRpb24sIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5sb29rdXAuQmxvY2tTY29wZSkKIAkgKi8KIAlwdWJsaWMgYm9vbGVhbiB2aXNpdChM
b2NhbERlY2xhcmF0aW9uIGxvY2FsRGVjbGFyYXRpb24sIEJsb2NrU2NvcGUgc2NvcGUpIHsKZGlm
ZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Zvcm1hdHRlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvZm9ybWF0dGVyL0RlZmF1bHRDb2RlRm9ybWF0dGVyT3B0aW9ucy5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvZm9ybWF0dGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9mb3Jt
YXR0ZXIvRGVmYXVsdENvZGVGb3JtYXR0ZXJPcHRpb25zLmphdmEKaW5kZXggNmMzNTc5Yy4uMTEx
OTczMyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZm9ybWF0dGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9mb3JtYXR0ZXIvRGVmYXVsdENvZGVGb3JtYXR0ZXJPcHRpb25zLmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZm9ybWF0dGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9mb3JtYXR0ZXIvRGVmYXVsdENvZGVGb3JtYXR0ZXJPcHRpb25zLmphdmEKQEAgLTEs
MTQgKzEsMTkgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIw
MDAsIDIwMTEgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIw
MDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2Vy
dmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUg
bWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNl
bnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMg
YXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRt
bAogICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3Bl
Y2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNz
IChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBw
dXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3Bl
Y2lmaWNhdGlvbiBvZiB0aGUgSkNQLgorICogCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJN
IENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCiAgKiAgICAgQnJv
Y2sgSmFuaWN6YWsgLSBDb250cmlidXRpb24gZm9yIGJ1ZyAxNTA3NDEKICAqICAgICBSYXkgVi4g
KHZvaWRzdGFyQGdtYWlsLmNvbSkgLSBDb250cmlidXRpb24gZm9yIGJ1ZyAyODI5ODgKKyAqICAg
ICBKZXNwZXIgUyBNb2xsZXIgLSBDb250cmlidXRpb24gZm9yIGJ1ZyA0MDA4MzAKICAqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuZm9ybWF0
dGVyOwogCkBAIC04Myw2ICs4OCw3IEBACiAJcHVibGljIFN0cmluZyBicmFjZV9wb3NpdGlvbl9m
b3JfY29uc3RydWN0b3JfZGVjbGFyYXRpb247CiAJcHVibGljIFN0cmluZyBicmFjZV9wb3NpdGlv
bl9mb3JfZW51bV9jb25zdGFudDsKIAlwdWJsaWMgU3RyaW5nIGJyYWNlX3Bvc2l0aW9uX2Zvcl9l
bnVtX2RlY2xhcmF0aW9uOworCXB1YmxpYyBTdHJpbmcgYnJhY2VfcG9zaXRpb25fZm9yX2xhbWJk
YV9ib2R5OwogCXB1YmxpYyBTdHJpbmcgYnJhY2VfcG9zaXRpb25fZm9yX21ldGhvZF9kZWNsYXJh
dGlvbjsKIAlwdWJsaWMgU3RyaW5nIGJyYWNlX3Bvc2l0aW9uX2Zvcl90eXBlX2RlY2xhcmF0aW9u
OwogCXB1YmxpYyBTdHJpbmcgYnJhY2VfcG9zaXRpb25fZm9yX3N3aXRjaDsKQEAgLTE5NCw2ICsy
MDAsNyBAQAogCXB1YmxpYyBib29sZWFuIGluc2VydF9zcGFjZV9hZnRlcl9jb21tYV9pbl90eXBl
X2FyZ3VtZW50czsKIAlwdWJsaWMgYm9vbGVhbiBpbnNlcnRfc3BhY2VfYWZ0ZXJfY29tbWFfaW5f
dHlwZV9wYXJhbWV0ZXJzOwogCXB1YmxpYyBib29sZWFuIGluc2VydF9zcGFjZV9hZnRlcl9lbGxp
cHNpczsKKwlwdWJsaWMgYm9vbGVhbiBpbnNlcnRfc3BhY2VfYWZ0ZXJfbGFtYmRhX2Fycm93Owog
CXB1YmxpYyBib29sZWFuIGluc2VydF9zcGFjZV9hZnRlcl9vcGVuaW5nX2FuZ2xlX2JyYWNrZXRf
aW5fcGFyYW1ldGVyaXplZF90eXBlX3JlZmVyZW5jZTsKIAlwdWJsaWMgYm9vbGVhbiBpbnNlcnRf
c3BhY2VfYWZ0ZXJfb3BlbmluZ19hbmdsZV9icmFja2V0X2luX3R5cGVfYXJndW1lbnRzOwogCXB1
YmxpYyBib29sZWFuIGluc2VydF9zcGFjZV9hZnRlcl9vcGVuaW5nX2FuZ2xlX2JyYWNrZXRfaW5f
dHlwZV9wYXJhbWV0ZXJzOwpAQCAtMjcxLDYgKzI3OCw3IEBACiAJcHVibGljIGJvb2xlYW4gaW5z
ZXJ0X3NwYWNlX2JlZm9yZV9jb21tYV9pbl90eXBlX2FyZ3VtZW50czsKIAlwdWJsaWMgYm9vbGVh
biBpbnNlcnRfc3BhY2VfYmVmb3JlX2NvbW1hX2luX3R5cGVfcGFyYW1ldGVyczsKIAlwdWJsaWMg
Ym9vbGVhbiBpbnNlcnRfc3BhY2VfYmVmb3JlX2VsbGlwc2lzOworCXB1YmxpYyBib29sZWFuIGlu
c2VydF9zcGFjZV9iZWZvcmVfbGFtYmRhX2Fycm93OwogCXB1YmxpYyBib29sZWFuIGluc2VydF9z
cGFjZV9iZWZvcmVfcGFyZW50aGVzaXplZF9leHByZXNzaW9uX2luX3JldHVybjsKIAlwdWJsaWMg
Ym9vbGVhbiBpbnNlcnRfc3BhY2VfYmVmb3JlX3BhcmVudGhlc2l6ZWRfZXhwcmVzc2lvbl9pbl90
aHJvdzsKIAlwdWJsaWMgYm9vbGVhbiBpbnNlcnRfc3BhY2VfYmVmb3JlX3F1ZXN0aW9uX2luX3dp
bGNhcmQ7CkBAIC0zOTQsNiArNDAyLDcgQEAKIAkJb3B0aW9ucy5wdXQoRGVmYXVsdENvZGVGb3Jt
YXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0JSQUNFX1BPU0lUSU9OX0ZPUl9FTlVNX0RFQ0xBUkFU
SU9OLCB0aGlzLmJyYWNlX3Bvc2l0aW9uX2Zvcl9lbnVtX2RlY2xhcmF0aW9uKTsKIAkJb3B0aW9u
cy5wdXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0JSQUNFX1BPU0lU
SU9OX0ZPUl9NRVRIT0RfREVDTEFSQVRJT04sIHRoaXMuYnJhY2VfcG9zaXRpb25fZm9yX21ldGhv
ZF9kZWNsYXJhdGlvbik7CiAJCW9wdGlvbnMucHV0KERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3Rh
bnRzLkZPUk1BVFRFUl9CUkFDRV9QT1NJVElPTl9GT1JfVFlQRV9ERUNMQVJBVElPTiwgdGhpcy5i
cmFjZV9wb3NpdGlvbl9mb3JfdHlwZV9kZWNsYXJhdGlvbik7CisJCW9wdGlvbnMucHV0KERlZmF1
bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9CUkFDRV9QT1NJVElPTl9GT1JfTEFN
QkRBX0JPRFksIHRoaXMuYnJhY2VfcG9zaXRpb25fZm9yX2xhbWJkYV9ib2R5KTsKIAkJb3B0aW9u
cy5wdXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0JSQUNFX1BPU0lU
SU9OX0ZPUl9TV0lUQ0gsIHRoaXMuYnJhY2VfcG9zaXRpb25fZm9yX3N3aXRjaCk7CiAJCW9wdGlv
bnMucHV0KERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9DT01NRU5UX0NM
RUFSX0JMQU5LX0xJTkVTX0lOX0JMT0NLX0NPTU1FTlQsIHRoaXMuY29tbWVudF9jbGVhcl9ibGFu
a19saW5lc19pbl9ibG9ja19jb21tZW50ID8gRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMu
VFJVRSA6IERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZBTFNFKTsKIAkJb3B0aW9ucy5w
dXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0NPTU1FTlRfQ0xFQVJf
QkxBTktfTElORVNfSU5fSkFWQURPQ19DT01NRU5ULCB0aGlzLmNvbW1lbnRfY2xlYXJfYmxhbmtf
bGluZXNfaW5famF2YWRvY19jb21tZW50ID8gRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMu
VFJVRSA6IERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZBTFNFKTsKQEAgLTQ5Myw2ICs1
MDIsNyBAQAogCQlvcHRpb25zLnB1dChEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JN
QVRURVJfSU5TRVJUX1NQQUNFX0FGVEVSX0NPTU1BX0lOX1RZUEVfUEFSQU1FVEVSUywgdGhpcy5p
bnNlcnRfc3BhY2VfYWZ0ZXJfY29tbWFfaW5fdHlwZV9wYXJhbWV0ZXJzID8gSmF2YUNvcmUuSU5T
RVJUIDogSmF2YUNvcmUuRE9fTk9UX0lOU0VSVCk7CiAJCW9wdGlvbnMucHV0KERlZmF1bHRDb2Rl
Rm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfU1BBQ0VfQUZURVJfT1BFTklOR19C
UkFDS0VUX0lOX0FSUkFZX0FMTE9DQVRJT05fRVhQUkVTU0lPTiwgdGhpcy5pbnNlcnRfc3BhY2Vf
YWZ0ZXJfb3BlbmluZ19icmFja2V0X2luX2FycmF5X2FsbG9jYXRpb25fZXhwcmVzc2lvbj8gSmF2
YUNvcmUuSU5TRVJUIDogSmF2YUNvcmUuRE9fTk9UX0lOU0VSVCk7CiAJCW9wdGlvbnMucHV0KERl
ZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfU1BBQ0VfQUZURVJf
RUxMSVBTSVMsIHRoaXMuaW5zZXJ0X3NwYWNlX2FmdGVyX2VsbGlwc2lzID8gSmF2YUNvcmUuSU5T
RVJUIDogSmF2YUNvcmUuRE9fTk9UX0lOU0VSVCk7CisJCW9wdGlvbnMucHV0KERlZmF1bHRDb2Rl
Rm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfU1BBQ0VfQUZURVJfTEFNQkRBX0FS
Uk9XLCB0aGlzLmluc2VydF9zcGFjZV9hZnRlcl9sYW1iZGFfYXJyb3cgPyBKYXZhQ29yZS5JTlNF
UlQgOiBKYXZhQ29yZS5ET19OT1RfSU5TRVJUKTsKIAkJb3B0aW9ucy5wdXQoRGVmYXVsdENvZGVG
b3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9TUEFDRV9BRlRFUl9PUEVOSU5HX0FO
R0xFX0JSQUNLRVRfSU5fUEFSQU1FVEVSSVpFRF9UWVBFX1JFRkVSRU5DRSwgdGhpcy5pbnNlcnRf
c3BhY2VfYWZ0ZXJfb3BlbmluZ19hbmdsZV9icmFja2V0X2luX3BhcmFtZXRlcml6ZWRfdHlwZV9y
ZWZlcmVuY2U/IEphdmFDb3JlLklOU0VSVCA6IEphdmFDb3JlLkRPX05PVF9JTlNFUlQpOwogCQlv
cHRpb25zLnB1dChEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJU
X1NQQUNFX0FGVEVSX09QRU5JTkdfQU5HTEVfQlJBQ0tFVF9JTl9UWVBFX0FSR1VNRU5UUywgdGhp
cy5pbnNlcnRfc3BhY2VfYWZ0ZXJfb3BlbmluZ19hbmdsZV9icmFja2V0X2luX3R5cGVfYXJndW1l
bnRzPyBKYXZhQ29yZS5JTlNFUlQgOiBKYXZhQ29yZS5ET19OT1RfSU5TRVJUKTsKIAkJb3B0aW9u
cy5wdXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9TUEFD
RV9BRlRFUl9PUEVOSU5HX0FOR0xFX0JSQUNLRVRfSU5fVFlQRV9QQVJBTUVURVJTLCB0aGlzLmlu
c2VydF9zcGFjZV9hZnRlcl9vcGVuaW5nX2FuZ2xlX2JyYWNrZXRfaW5fdHlwZV9wYXJhbWV0ZXJz
PyBKYXZhQ29yZS5JTlNFUlQgOiBKYXZhQ29yZS5ET19OT1RfSU5TRVJUKTsKQEAgLTU2OSw2ICs1
NzksNyBAQAogCQlvcHRpb25zLnB1dChEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JN
QVRURVJfSU5TRVJUX1NQQUNFX0JFRk9SRV9DT01NQV9JTl9UWVBFX1BBUkFNRVRFUlMsIHRoaXMu
aW5zZXJ0X3NwYWNlX2JlZm9yZV9jb21tYV9pbl90eXBlX3BhcmFtZXRlcnM/IEphdmFDb3JlLklO
U0VSVCA6IEphdmFDb3JlLkRPX05PVF9JTlNFUlQpOwogCQlvcHRpb25zLnB1dChEZWZhdWx0Q29k
ZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX1NQQUNFX0JFRk9SRV9DT01NQV9J
Tl9QQVJBTUVURVJJWkVEX1RZUEVfUkVGRVJFTkNFLCB0aGlzLmluc2VydF9zcGFjZV9iZWZvcmVf
Y29tbWFfaW5fcGFyYW1ldGVyaXplZF90eXBlX3JlZmVyZW5jZT8gSmF2YUNvcmUuSU5TRVJUIDog
SmF2YUNvcmUuRE9fTk9UX0lOU0VSVCk7CiAJCW9wdGlvbnMucHV0KERlZmF1bHRDb2RlRm9ybWF0
dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfU1BBQ0VfQkVGT1JFX0VMTElQU0lTLCB0aGlz
Lmluc2VydF9zcGFjZV9iZWZvcmVfZWxsaXBzaXMgPyBKYXZhQ29yZS5JTlNFUlQgOiBKYXZhQ29y
ZS5ET19OT1RfSU5TRVJUKTsKKwkJb3B0aW9ucy5wdXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25z
dGFudHMuRk9STUFUVEVSX0lOU0VSVF9TUEFDRV9CRUZPUkVfTEFNQkRBX0FSUk9XLCB0aGlzLmlu
c2VydF9zcGFjZV9iZWZvcmVfbGFtYmRhX2Fycm93ID8gSmF2YUNvcmUuSU5TRVJUIDogSmF2YUNv
cmUuRE9fTk9UX0lOU0VSVCk7CiAJCW9wdGlvbnMucHV0KERlZmF1bHRDb2RlRm9ybWF0dGVyQ29u
c3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfU1BBQ0VfQkVGT1JFX09QRU5JTkdfQU5HTEVfQlJBQ0tF
VF9JTl9QQVJBTUVURVJJWkVEX1RZUEVfUkVGRVJFTkNFLCB0aGlzLmluc2VydF9zcGFjZV9iZWZv
cmVfb3BlbmluZ19hbmdsZV9icmFja2V0X2luX3BhcmFtZXRlcml6ZWRfdHlwZV9yZWZlcmVuY2U/
IEphdmFDb3JlLklOU0VSVCA6IEphdmFDb3JlLkRPX05PVF9JTlNFUlQpOwogCQlvcHRpb25zLnB1
dChEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX1NQQUNFX0JF
Rk9SRV9PUEVOSU5HX0FOR0xFX0JSQUNLRVRfSU5fVFlQRV9BUkdVTUVOVFMsIHRoaXMuaW5zZXJ0
X3NwYWNlX2JlZm9yZV9vcGVuaW5nX2FuZ2xlX2JyYWNrZXRfaW5fdHlwZV9hcmd1bWVudHM/IEph
dmFDb3JlLklOU0VSVCA6IEphdmFDb3JlLkRPX05PVF9JTlNFUlQpOwogCQlvcHRpb25zLnB1dChE
ZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX1NQQUNFX0JFRk9S
RV9PUEVOSU5HX0FOR0xFX0JSQUNLRVRfSU5fVFlQRV9QQVJBTUVURVJTLCB0aGlzLmluc2VydF9z
cGFjZV9iZWZvcmVfb3BlbmluZ19hbmdsZV9icmFja2V0X2luX3R5cGVfcGFyYW1ldGVycz8gSmF2
YUNvcmUuSU5TRVJUIDogSmF2YUNvcmUuRE9fTk9UX0lOU0VSVCk7CkBAIC05NTksNiArOTcwLDE0
IEBACiAJCQkJdGhpcy5icmFjZV9wb3NpdGlvbl9mb3JfZW51bV9kZWNsYXJhdGlvbiA9IChTdHJp
bmcpIGJyYWNlUG9zaXRpb25Gb3JFbnVtRGVjbGFyYXRpb25PcHRpb247CiAJCQl9IGNhdGNoKENs
YXNzQ2FzdEV4Y2VwdGlvbiBlKSB7CiAJCQkJdGhpcy5icmFjZV9wb3NpdGlvbl9mb3JfZW51bV9k
ZWNsYXJhdGlvbiA9IERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkVORF9PRl9MSU5FOwor
CQkJfQorCQl9CisJCWZpbmFsIE9iamVjdCBicmFjZVBvc2l0aW9uRm9yTGFtYmRhRGVjbGFyYXRp
b25PcHRpb24gPSBzZXR0aW5ncy5nZXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9S
TUFUVEVSX0JSQUNFX1BPU0lUSU9OX0ZPUl9MQU1CREFfQk9EWSk7CisJCWlmIChicmFjZVBvc2l0
aW9uRm9yTGFtYmRhRGVjbGFyYXRpb25PcHRpb24gIT0gbnVsbCkgeworCQkJdHJ5IHsKKwkJCQl0
aGlzLmJyYWNlX3Bvc2l0aW9uX2Zvcl9sYW1iZGFfYm9keSA9IChTdHJpbmcpIGJyYWNlUG9zaXRp
b25Gb3JMYW1iZGFEZWNsYXJhdGlvbk9wdGlvbjsKKwkJCX0gY2F0Y2goQ2xhc3NDYXN0RXhjZXB0
aW9uIGUpIHsKKwkJCQl0aGlzLmJyYWNlX3Bvc2l0aW9uX2Zvcl9sYW1iZGFfYm9keSA9IERlZmF1
bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkVORF9PRl9MSU5FOwogCQkJfQogCQl9CiAJCWZpbmFs
IE9iamVjdCBicmFjZVBvc2l0aW9uRm9yTWV0aG9kRGVjbGFyYXRpb25PcHRpb24gPSBzZXR0aW5n
cy5nZXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0JSQUNFX1BPU0lU
SU9OX0ZPUl9NRVRIT0RfREVDTEFSQVRJT04pOwpAQCAtMTQzOCw2ICsxNDU3LDEwIEBACiAJCWlm
IChpbnNlcnRTcGFjZUFmdGVyRWxsaXBzaXNPcHRpb24gIT0gbnVsbCkgewogCQkJdGhpcy5pbnNl
cnRfc3BhY2VfYWZ0ZXJfZWxsaXBzaXMgPSBKYXZhQ29yZS5JTlNFUlQuZXF1YWxzKGluc2VydFNw
YWNlQWZ0ZXJFbGxpcHNpc09wdGlvbik7CiAJCX0KKwkJZmluYWwgT2JqZWN0IGluc2VydFNwYWNl
QWZ0ZXJMYW1iZGFBcnJvd09wdGlvbiA9IHNldHRpbmdzLmdldChEZWZhdWx0Q29kZUZvcm1hdHRl
ckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX1NQQUNFX0FGVEVSX0xBTUJEQV9BUlJPVyk7CisJ
CWlmIChpbnNlcnRTcGFjZUFmdGVyTGFtYmRhQXJyb3dPcHRpb24gIT0gbnVsbCkgeworCQkJdGhp
cy5pbnNlcnRfc3BhY2VfYWZ0ZXJfbGFtYmRhX2Fycm93ID0gSmF2YUNvcmUuSU5TRVJULmVxdWFs
cyhpbnNlcnRTcGFjZUFmdGVyTGFtYmRhQXJyb3dPcHRpb24pOworCQl9CiAJCWZpbmFsIE9iamVj
dCBpbnNlcnRTcGFjZUFmdGVyT3BlbmluZ0FuZ2xlQnJhY2tldEluUGFyYW1ldGVyaXplZFR5cGVS
ZWZlcmVuY2VPcHRpb24gPSBzZXR0aW5ncy5nZXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFu
dHMuRk9STUFUVEVSX0lOU0VSVF9TUEFDRV9BRlRFUl9PUEVOSU5HX0FOR0xFX0JSQUNLRVRfSU5f
UEFSQU1FVEVSSVpFRF9UWVBFX1JFRkVSRU5DRSk7CiAJCWlmIChpbnNlcnRTcGFjZUFmdGVyT3Bl
bmluZ0FuZ2xlQnJhY2tldEluUGFyYW1ldGVyaXplZFR5cGVSZWZlcmVuY2VPcHRpb24gIT0gbnVs
bCkgewogCQkJdGhpcy5pbnNlcnRfc3BhY2VfYWZ0ZXJfb3BlbmluZ19hbmdsZV9icmFja2V0X2lu
X3BhcmFtZXRlcml6ZWRfdHlwZV9yZWZlcmVuY2UgPSBKYXZhQ29yZS5JTlNFUlQuZXF1YWxzKGlu
c2VydFNwYWNlQWZ0ZXJPcGVuaW5nQW5nbGVCcmFja2V0SW5QYXJhbWV0ZXJpemVkVHlwZVJlZmVy
ZW5jZU9wdGlvbik7CkBAIC0xNzQ1LDYgKzE3NjgsMTAgQEAKIAkJZmluYWwgT2JqZWN0IGluc2Vy
dFNwYWNlQmVmb3JlRWxsaXBzaXNPcHRpb24gPSBzZXR0aW5ncy5nZXQoRGVmYXVsdENvZGVGb3Jt
YXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9TUEFDRV9CRUZPUkVfRUxMSVBTSVMpOwog
CQlpZiAoaW5zZXJ0U3BhY2VCZWZvcmVFbGxpcHNpc09wdGlvbiAhPSBudWxsKSB7CiAJCQl0aGlz
Lmluc2VydF9zcGFjZV9iZWZvcmVfZWxsaXBzaXMgPSBKYXZhQ29yZS5JTlNFUlQuZXF1YWxzKGlu
c2VydFNwYWNlQmVmb3JlRWxsaXBzaXNPcHRpb24pOworCQl9CisJCWZpbmFsIE9iamVjdCBpbnNl
cnRTcGFjZUJlZm9yZUxhbWJkYUFycm93T3B0aW9uID0gc2V0dGluZ3MuZ2V0KERlZmF1bHRDb2Rl
Rm9ybWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfU1BBQ0VfQkVGT1JFX0xBTUJEQV9B
UlJPVyk7CisJCWlmIChpbnNlcnRTcGFjZUJlZm9yZUxhbWJkYUFycm93T3B0aW9uICE9IG51bGwp
IHsKKwkJCXRoaXMuaW5zZXJ0X3NwYWNlX2JlZm9yZV9sYW1iZGFfYXJyb3cgPSBKYXZhQ29yZS5J
TlNFUlQuZXF1YWxzKGluc2VydFNwYWNlQmVmb3JlTGFtYmRhQXJyb3dPcHRpb24pOwogCQl9CiAJ
CWZpbmFsIE9iamVjdCBpbnNlcnRTcGFjZUJlZm9yZU9wZW5pbmdBbmdsZUJyYWNrZXJJblBhcmFt
ZXRlcml6ZWRUeXBlUmVmZXJlbmNlT3B0aW9uID0gc2V0dGluZ3MuZ2V0KERlZmF1bHRDb2RlRm9y
bWF0dGVyQ29uc3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfU1BBQ0VfQkVGT1JFX09QRU5JTkdfQU5H
TEVfQlJBQ0tFVF9JTl9QQVJBTUVURVJJWkVEX1RZUEVfUkVGRVJFTkNFKTsKIAkJaWYgKGluc2Vy
dFNwYWNlQmVmb3JlT3BlbmluZ0FuZ2xlQnJhY2tlckluUGFyYW1ldGVyaXplZFR5cGVSZWZlcmVu
Y2VPcHRpb24gIT0gbnVsbCkgewpAQCAtMjIwNCw2ICsyMjMxLDcgQEAKIAkJdGhpcy5icmFjZV9w
b3NpdGlvbl9mb3JfY29uc3RydWN0b3JfZGVjbGFyYXRpb24gPSBEZWZhdWx0Q29kZUZvcm1hdHRl
ckNvbnN0YW50cy5FTkRfT0ZfTElORTsKIAkJdGhpcy5icmFjZV9wb3NpdGlvbl9mb3JfZW51bV9j
b25zdGFudCA9IERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkVORF9PRl9MSU5FOwogCQl0
aGlzLmJyYWNlX3Bvc2l0aW9uX2Zvcl9lbnVtX2RlY2xhcmF0aW9uID0gRGVmYXVsdENvZGVGb3Jt
YXR0ZXJDb25zdGFudHMuRU5EX09GX0xJTkU7CisJCXRoaXMuYnJhY2VfcG9zaXRpb25fZm9yX2xh
bWJkYV9ib2R5ID0gRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRU5EX09GX0xJTkU7CiAJ
CXRoaXMuYnJhY2VfcG9zaXRpb25fZm9yX21ldGhvZF9kZWNsYXJhdGlvbiA9IERlZmF1bHRDb2Rl
Rm9ybWF0dGVyQ29uc3RhbnRzLkVORF9PRl9MSU5FOwogCQl0aGlzLmJyYWNlX3Bvc2l0aW9uX2Zv
cl90eXBlX2RlY2xhcmF0aW9uID0gRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRU5EX09G
X0xJTkU7CiAJCXRoaXMuYnJhY2VfcG9zaXRpb25fZm9yX3N3aXRjaCA9IERlZmF1bHRDb2RlRm9y
bWF0dGVyQ29uc3RhbnRzLkVORF9PRl9MSU5FOwpAQCAtMjMwMyw2ICsyMzMxLDcgQEAKIAkJdGhp
cy5pbnNlcnRfc3BhY2VfYWZ0ZXJfY29tbWFfaW5fdHlwZV9hcmd1bWVudHMgPSB0cnVlOwogCQl0
aGlzLmluc2VydF9zcGFjZV9hZnRlcl9jb21tYV9pbl90eXBlX3BhcmFtZXRlcnMgPSB0cnVlOwog
CQl0aGlzLmluc2VydF9zcGFjZV9hZnRlcl9lbGxpcHNpcyA9IHRydWU7CisJCXRoaXMuaW5zZXJ0
X3NwYWNlX2FmdGVyX2xhbWJkYV9hcnJvdyA9IHRydWU7CiAJCXRoaXMuaW5zZXJ0X3NwYWNlX2Fm
dGVyX29wZW5pbmdfYW5nbGVfYnJhY2tldF9pbl9wYXJhbWV0ZXJpemVkX3R5cGVfcmVmZXJlbmNl
ID0gZmFsc2U7CiAJCXRoaXMuaW5zZXJ0X3NwYWNlX2FmdGVyX29wZW5pbmdfYW5nbGVfYnJhY2tl
dF9pbl90eXBlX2FyZ3VtZW50cyA9IGZhbHNlOwogCQl0aGlzLmluc2VydF9zcGFjZV9hZnRlcl9v
cGVuaW5nX2FuZ2xlX2JyYWNrZXRfaW5fdHlwZV9wYXJhbWV0ZXJzID0gZmFsc2U7CkBAIC0yMzc5
LDYgKzI0MDgsNyBAQAogCQl0aGlzLmluc2VydF9zcGFjZV9iZWZvcmVfY29tbWFfaW5fdHlwZV9h
cmd1bWVudHMgPSBmYWxzZTsKIAkJdGhpcy5pbnNlcnRfc3BhY2VfYmVmb3JlX2NvbW1hX2luX3R5
cGVfcGFyYW1ldGVycyA9IGZhbHNlOwogCQl0aGlzLmluc2VydF9zcGFjZV9iZWZvcmVfZWxsaXBz
aXMgPSBmYWxzZTsKKwkJdGhpcy5pbnNlcnRfc3BhY2VfYmVmb3JlX2xhbWJkYV9hcnJvdyA9IHRy
dWU7CiAJCXRoaXMuaW5zZXJ0X3NwYWNlX2JlZm9yZV9wYXJlbnRoZXNpemVkX2V4cHJlc3Npb25f
aW5fcmV0dXJuID0gdHJ1ZTsKIAkJdGhpcy5pbnNlcnRfc3BhY2VfYmVmb3JlX3BhcmVudGhlc2l6
ZWRfZXhwcmVzc2lvbl9pbl90aHJvdyA9IHRydWU7CiAJCXRoaXMuaW5zZXJ0X3NwYWNlX2JlZm9y
ZV9vcGVuaW5nX2FuZ2xlX2JyYWNrZXRfaW5fcGFyYW1ldGVyaXplZF90eXBlX3JlZmVyZW5jZSA9
IGZhbHNlOwpAQCAtMjQ5MSw2ICsyNTIxLDcgQEAKIAkJdGhpcy5icmFjZV9wb3NpdGlvbl9mb3Jf
Y29uc3RydWN0b3JfZGVjbGFyYXRpb24gPSBEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5F
TkRfT0ZfTElORTsKIAkJdGhpcy5icmFjZV9wb3NpdGlvbl9mb3JfZW51bV9jb25zdGFudCA9IERl
ZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkVORF9PRl9MSU5FOwogCQl0aGlzLmJyYWNlX3Bv
c2l0aW9uX2Zvcl9lbnVtX2RlY2xhcmF0aW9uID0gRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFu
dHMuRU5EX09GX0xJTkU7CisJCXRoaXMuYnJhY2VfcG9zaXRpb25fZm9yX2xhbWJkYV9ib2R5ID0g
RGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRU5EX09GX0xJTkU7CiAJCXRoaXMuYnJhY2Vf
cG9zaXRpb25fZm9yX21ldGhvZF9kZWNsYXJhdGlvbiA9IERlZmF1bHRDb2RlRm9ybWF0dGVyQ29u
c3RhbnRzLkVORF9PRl9MSU5FOwogCQl0aGlzLmJyYWNlX3Bvc2l0aW9uX2Zvcl90eXBlX2RlY2xh
cmF0aW9uID0gRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRU5EX09GX0xJTkU7CiAJCXRo
aXMuYnJhY2VfcG9zaXRpb25fZm9yX3N3aXRjaCA9IERlZmF1bHRDb2RlRm9ybWF0dGVyQ29uc3Rh
bnRzLkVORF9PRl9MSU5FOwpAQCAtMjU5MCw2ICsyNjIxLDcgQEAKIAkJdGhpcy5pbnNlcnRfc3Bh
Y2VfYWZ0ZXJfY29tbWFfaW5fdHlwZV9hcmd1bWVudHMgPSB0cnVlOwogCQl0aGlzLmluc2VydF9z
cGFjZV9hZnRlcl9jb21tYV9pbl90eXBlX3BhcmFtZXRlcnMgPSB0cnVlOwogCQl0aGlzLmluc2Vy
dF9zcGFjZV9hZnRlcl9lbGxpcHNpcyA9IHRydWU7CisJCXRoaXMuaW5zZXJ0X3NwYWNlX2FmdGVy
X2xhbWJkYV9hcnJvdyA9IHRydWU7CiAJCXRoaXMuaW5zZXJ0X3NwYWNlX2FmdGVyX29wZW5pbmdf
YW5nbGVfYnJhY2tldF9pbl9wYXJhbWV0ZXJpemVkX3R5cGVfcmVmZXJlbmNlID0gZmFsc2U7CiAJ
CXRoaXMuaW5zZXJ0X3NwYWNlX2FmdGVyX29wZW5pbmdfYW5nbGVfYnJhY2tldF9pbl90eXBlX2Fy
Z3VtZW50cyA9IGZhbHNlOwogCQl0aGlzLmluc2VydF9zcGFjZV9hZnRlcl9vcGVuaW5nX2FuZ2xl
X2JyYWNrZXRfaW5fdHlwZV9wYXJhbWV0ZXJzID0gZmFsc2U7CkBAIC0yNjY2LDYgKzI2OTgsNyBA
QAogCQl0aGlzLmluc2VydF9zcGFjZV9iZWZvcmVfY29tbWFfaW5fdHlwZV9hcmd1bWVudHMgPSBm
YWxzZTsKIAkJdGhpcy5pbnNlcnRfc3BhY2VfYmVmb3JlX2NvbW1hX2luX3R5cGVfcGFyYW1ldGVy
cyA9IGZhbHNlOwogCQl0aGlzLmluc2VydF9zcGFjZV9iZWZvcmVfZWxsaXBzaXMgPSBmYWxzZTsK
KwkJdGhpcy5pbnNlcnRfc3BhY2VfYmVmb3JlX2xhbWJkYV9hcnJvdyA9IHRydWU7CiAJCXRoaXMu
aW5zZXJ0X3NwYWNlX2JlZm9yZV9wYXJlbnRoZXNpemVkX2V4cHJlc3Npb25faW5fcmV0dXJuID0g
dHJ1ZTsKIAkJdGhpcy5pbnNlcnRfc3BhY2VfYmVmb3JlX3BhcmVudGhlc2l6ZWRfZXhwcmVzc2lv
bl9pbl90aHJvdyA9IHRydWU7CiAJCXRoaXMuaW5zZXJ0X3NwYWNlX2JlZm9yZV9vcGVuaW5nX2Fu
Z2xlX2JyYWNrZXRfaW5fcGFyYW1ldGVyaXplZF90eXBlX3JlZmVyZW5jZSA9IGZhbHNlOw==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>228597</attachid>
            <date>2013-03-18 17:57:00 -0400</date>
            <delta_ts>2013-03-18 17:57:19 -0400</delta_ts>
            <desc>Patch for the problem in comment 5</desc>
            <filename>clipboard.txt</filename>
            <type>text/plain</type>
            <size>1890</size>
            <attacher name="Jesper Moller">jesper</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMAojUCBvcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5tb2RlbApkaWZmIC0tZ2l0IHdvcmtzcGFjZS9Gb3JtYXR0ZXJKU1IzMzUvdGVzdExhbWJk
YS9BX2luLmphdmEgd29ya3NwYWNlL0Zvcm1hdHRlckpTUjMzNS90ZXN0TGFtYmRhL0FfaW4uamF2
YQppbmRleCAzN2ExNmFiLi4yYmE4Zjk5IDEwMDY0NAotLS0gd29ya3NwYWNlL0Zvcm1hdHRlckpT
UjMzNS90ZXN0TGFtYmRhL0FfaW4uamF2YQorKysgd29ya3NwYWNlL0Zvcm1hdHRlckpTUjMzNS90
ZXN0TGFtYmRhL0FfaW4uamF2YQpAQCAtMywxMCArMywxOCBAQAogaW1wb3J0IGphdmEuaW8uU2Vy
aWFsaXphYmxlOwogaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247CiAKK2ludGVyZmFjZSBJIHsK
KwlpbnQgaWQoaW50IHgsIGludCB5KTsKK30KKwogcHVibGljIGFic3RyYWN0IGNsYXNzIEEgZXh0
ZW5kcyBqYXZhLmxhbmcuT2JqZWN0IGltcGxlbWVudHMgUnVubmFibGUsIENsb25lYWJsZSwgU2Vy
aWFsaXphYmxlIHsKIAlwdWJsaWMgdm9pZCBydW4oKSB7CiAJfQogCisJcHVibGljIHN0YXRpYyBj
bGFzcyBYIHsKKwkJSSBpID0gKHgseSkgLT4geDsKKwl9CisJCiAJcHVibGljIHZvaWQgbGFtYmRh
cygpIHsKIAkJUnVubmFibGUgYSA9ICgpIC0+IHsKIAkJCXRoaXNJc0NyYXp5KCk7CmRpZmYgLS1n
aXQgd29ya3NwYWNlL0Zvcm1hdHRlckpTUjMzNS90ZXN0TGFtYmRhL0Ffb3V0LmphdmEgd29ya3Nw
YWNlL0Zvcm1hdHRlckpTUjMzNS90ZXN0TGFtYmRhL0Ffb3V0LmphdmEKaW5kZXggNmNhNzBmNy4u
YTJjYzk1ZiAxMDA2NDQKLS0tIHdvcmtzcGFjZS9Gb3JtYXR0ZXJKU1IzMzUvdGVzdExhbWJkYS9B
X291dC5qYXZhCisrKyB3b3Jrc3BhY2UvRm9ybWF0dGVySlNSMzM1L3Rlc3RMYW1iZGEvQV9vdXQu
amF2YQpAQCAtMywxMSArMywxOSBAQAogaW1wb3J0IGphdmEuaW8uU2VyaWFsaXphYmxlOwogaW1w
b3J0IGphdmEuaW8uSU9FeGNlcHRpb247CiAKK2ludGVyZmFjZSBJIHsKKwlpbnQgaWQoaW50IHgs
IGludCB5KTsKK30KKwogcHVibGljIGFic3RyYWN0IGNsYXNzIEEgZXh0ZW5kcyBqYXZhLmxhbmcu
T2JqZWN0IGltcGxlbWVudHMgUnVubmFibGUsCiAJCUNsb25lYWJsZSwgU2VyaWFsaXphYmxlIHsK
IAlwdWJsaWMgdm9pZCBydW4oKSB7CiAJfQogCisJcHVibGljIHN0YXRpYyBjbGFzcyBYIHsKKwkJ
SSBpID0gKHgsIHkpIC0+IHg7CisJfQorCiAJcHVibGljIHZvaWQgbGFtYmRhcygpIHsKIAkJUnVu
bmFibGUgYSA9ICgpIC0+IHsKIAkJCXRoaXNJc0NyYXp5KCk7CgojUCBvcmcuZWNsaXBzZS5qZHQu
Y29yZQpkaWZmIC0tZ2l0IGZvcm1hdHRlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvZm9ybWF0
dGVyL0NvZGVGb3JtYXR0ZXJWaXNpdG9yLmphdmEgZm9ybWF0dGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9mb3JtYXR0ZXIvQ29kZUZvcm1hdHRlclZpc2l0b3IuamF2YQppbmRleCAzYjQ5ZDNk
Li5mNzljYWZjIDEwMDY0NAotLS0gZm9ybWF0dGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9m
b3JtYXR0ZXIvQ29kZUZvcm1hdHRlclZpc2l0b3IuamF2YQorKysgZm9ybWF0dGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9mb3JtYXR0ZXIvQ29kZUZvcm1hdHRlclZpc2l0b3IuamF2YQpAQCAt
MjY3OCw3ICsyNjc4LDcgQEAKIAkJCS8qCiAJCQkgKiBQcmludCB0aGUgYXJndW1lbnQgbmFtZQog
CQkJICovCi0JCQl0aGlzLnNjcmliZS5wcmludE5leHRUb2tlbihUZXJtaW5hbFRva2Vucy5Ub2tl
bk5hbWVJZGVudGlmaWVyLCB0cnVlKTsKKwkJCXRoaXMuc2NyaWJlLnByaW50TmV4dFRva2VuKFRl
cm1pbmFsVG9rZW5zLlRva2VuTmFtZUlkZW50aWZpZXIsIGFyZ3VtZW50LnR5cGUgIT0gbnVsbCk7
CiAJCX0KIAog
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>228713</attachid>
            <date>2013-03-20 10:30:00 -0400</date>
            <delta_ts>2013-03-20 10:30:21 -0400</delta_ts>
            <desc>Patch for non-default options regarding lambda formatting</desc>
            <filename>clipboard.txt</filename>
            <type>text/plain</type>
            <size>4519</size>
            <attacher name="Jesper Moller">jesper</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMAojUCBvcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5tb2RlbApkaWZmIC0tZ2l0IHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9mb3Jt
YXR0ZXIvRm9ybWF0dGVySlNSMzM1VGVzdHMuamF2YSBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvZm9ybWF0dGVyL0Zvcm1hdHRlckpTUjMzNVRlc3RzLmphdmEKaW5kZXggZWJlMGFlNC4u
MTdhYWZiOSAxMDA2NDQKLS0tIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9mb3JtYXR0
ZXIvRm9ybWF0dGVySlNSMzM1VGVzdHMuamF2YQorKysgc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL2Zvcm1hdHRlci9Gb3JtYXR0ZXJKU1IzMzVUZXN0cy5qYXZhCkBAIC0yMyw2ICsyMyw3
IEBACiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSUphdmFQcm9qZWN0OwogaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5jb3JlLkphdmFNb2RlbEV4Y2VwdGlvbjsKIGltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuY29yZS5mb3JtYXR0ZXIuQ29kZUZvcm1hdHRlcjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuY29yZS5mb3JtYXR0ZXIuRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHM7CiBpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwuQWJzdHJhY3RKYXZhTW9kZWxUZXN0czsK
IGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy51dGlsLlV0aWw7CiBpbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmltcGwuQ29tcGlsZXJPcHRpb25zOwpAQCAt
MTMzLDYgKzEzNCwxMSBAQAogCQl9CiAJCWFzc2VydFNvdXJjZUVxdWFscygiRGlmZmVyZW50IG51
bWJlciBvZiBsZW5ndGgiLCBVdGlsLmNvbnZlcnRUb0luZGVwZW5kYW50TGluZURlbGltaXRlcihl
eHBlY3RlZENvbnRlbnRzKSwgYWN0dWFsQ29udGVudHMpOwogCX0KKwlwcml2YXRlIHZvaWQgcnVu
VGVzdChTdHJpbmcgcGFja2FnZU5hbWUsIFN0cmluZyBjb21waWxhdGlvblVuaXROYW1lLCBEZWZh
dWx0Q29kZUZvcm1hdHRlck9wdGlvbnMgY29kZUZvcm1hdHRlck9wdGlvbnMpIHsKKwkJRGVmYXVs
dENvZGVGb3JtYXR0ZXIgY29kZUZvcm1hdHRlciA9IG5ldyBEZWZhdWx0Q29kZUZvcm1hdHRlcihj
b2RlRm9ybWF0dGVyT3B0aW9ucywgdGhpcy5mb3JtYXR0ZXJPcHRpb25zKTsKKwkJcnVuVGVzdChj
b2RlRm9ybWF0dGVyLCBwYWNrYWdlTmFtZSwgY29tcGlsYXRpb25Vbml0TmFtZSwgQ29kZUZvcm1h
dHRlci5LX0NPTVBJTEFUSU9OX1VOSVQsIDApOworCX0KKwkKIAlwcml2YXRlIHZvaWQgcnVuVGVz
dChTdHJpbmcgcGFja2FnZU5hbWUsIFN0cmluZyBjb21waWxhdGlvblVuaXROYW1lKSB7CiAJCURl
ZmF1bHRDb2RlRm9ybWF0dGVyIGNvZGVGb3JtYXR0ZXIgPSBuZXcgRGVmYXVsdENvZGVGb3JtYXR0
ZXIodGhpcy5mb3JtYXR0ZXJQcmVmcywgdGhpcy5mb3JtYXR0ZXJPcHRpb25zKTsKIAkJcnVuVGVz
dChjb2RlRm9ybWF0dGVyLCBwYWNrYWdlTmFtZSwgY29tcGlsYXRpb25Vbml0TmFtZSwgQ29kZUZv
cm1hdHRlci5LX0NPTVBJTEFUSU9OX1VOSVQsIDApOwpAQCAtMTYzLDcgKzE2OSwxNSBAQAogCXB1
YmxpYyB2b2lkIHRlc3RMYW1iZGEoKSB7CiAJCXJ1blRlc3QoInRlc3RMYW1iZGEiLCAiQS5qYXZh
Iik7Ly8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCiAJfQotCQorCisJcHVibGljIHZvaWQgdGVz
dExhbWJkYU9wdGlvbnMoKSB7CisJCURlZmF1bHRDb2RlRm9ybWF0dGVyT3B0aW9ucyBvcHRpb25z
ID0gRGVmYXVsdENvZGVGb3JtYXR0ZXJPcHRpb25zLmdldEVjbGlwc2VEZWZhdWx0U2V0dGluZ3Mo
KTsKKwkJb3B0aW9ucy5icmFjZV9wb3NpdGlvbl9mb3JfbGFtYmRhX2JvZHkgPSBEZWZhdWx0Q29k
ZUZvcm1hdHRlckNvbnN0YW50cy5ORVhUX0xJTkU7CisJCW9wdGlvbnMuaW5zZXJ0X3NwYWNlX2Fm
dGVyX2xhbWJkYV9hcnJvdyA9IGZhbHNlOworCQlvcHRpb25zLmluc2VydF9zcGFjZV9iZWZvcmVf
bGFtYmRhX2Fycm93ID0gZmFsc2U7CisJCXJ1blRlc3QoInRlc3RMYW1iZGFPcHRpb25zIiwgIkEu
amF2YSIsIG9wdGlvbnMpOy8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCX0KKwogCXB1Ymxp
YyB2b2lkIHRlc3RNZXRob2RSZWZlcmVuY2UoKSB7CiAJCXJ1blRlc3QoInRlc3RNZXRob2RSZWZl
cmVuY2UiLCAiQS5qYXZhIik7Ly8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCiAJfQpkaWZmIC0t
Z2l0IHdvcmtzcGFjZS9Gb3JtYXR0ZXJKU1IzMzUvdGVzdExhbWJkYU9wdGlvbnMvQV9pbi5qYXZh
IHdvcmtzcGFjZS9Gb3JtYXR0ZXJKU1IzMzUvdGVzdExhbWJkYU9wdGlvbnMvQV9pbi5qYXZhCm5l
dyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLjM4MDNmNTgKLS0tIC9kZXYvbnVsbAor
Kysgd29ya3NwYWNlL0Zvcm1hdHRlckpTUjMzNS90ZXN0TGFtYmRhT3B0aW9ucy9BX2luLmphdmEK
QEAgLTAsMCArMSw0MSBAQAorcGFja2FnZSBwMS5wMi50ZXN0OworCitpbXBvcnQgamF2YS5pby5T
ZXJpYWxpemFibGU7CitpbXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjsKKworaW50ZXJmYWNlIEkg
eworCWludCBpZChpbnQgeCwgaW50IHkpOworfQorCitwdWJsaWMgYWJzdHJhY3QgY2xhc3MgQSBl
eHRlbmRzIGphdmEubGFuZy5PYmplY3QgaW1wbGVtZW50cyBSdW5uYWJsZSwgQ2xvbmVhYmxlLCBT
ZXJpYWxpemFibGUgeworCXB1YmxpYyB2b2lkIHJ1bigpIHsKKwl9CisKKwlwdWJsaWMgc3RhdGlj
IGNsYXNzIFggeworCQlJIGkgPSAoeCx5KSAtPiB4OworCX0KKwkKKwlwdWJsaWMgdm9pZCBsYW1i
ZGFzKCkgeworCQlSdW5uYWJsZSBhID0gKCkgLT4geworCQkJdGhpc0lzQ3JhenkoKTsKKwkJCWlK
dXN0TWV0KHlvdSk7CisJCQloZXJlLm51bWJlci5jYWxsTWUoKTsKKwkJfTsKKworCQlGdW5jIGlk
QSA9IHggLT4geDsKKworCQlGdW5jIGlkQiA9IHggLT4geyByZXR1cm4geDsgfTsKKwkJCisJCUZ1
bmMgaWRDID0geCAgIC0+ICAgeDsKKworCQlGdW5jIGlkMiA9IHggLT4geyBpZiAoeCA9PSBudWxs
KSB7IHJldHVybiBudWxsOyB9IGVsc2UgcmV0dXJuIHg7IH07CisJCQorCQlJbWFnaW5hYmxlRnVu
Y3Rpb248U3RyaW5nLCBJbnRlZ2VyPiBmID0KKwkJCShTdHJpbmcgaW5wdXQpIC0+IGlucHV0Lmxl
bmd0aCgpOworCisJCQlJbWFnaW5hYmxlRnVuY3Rpb248U3RyaW5nLCBJbnRlZ2VyPiBmMiA9IChT
dHJpbmcgaW5wdXQpIC0+IHsgcmV0dXJuIGlucHV0Lmxlbmd0aCgpICsgbmV3IExldHNQcmV0ZW5k
KCkgeyBpbnQgaG93TWFueSgpIHsgcmV0dXJuIDQyOyB9IH0KKwkJCQkJCisuaG93TWFueSgpOyB9
OworCX0KKworfQpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGUKZGlmZiAtLWdpdCB3b3Jrc3Bh
Y2UvRm9ybWF0dGVySlNSMzM1L3Rlc3RMYW1iZGFPcHRpb25zL0Ffb3V0LmphdmEgd29ya3NwYWNl
L0Zvcm1hdHRlckpTUjMzNS90ZXN0TGFtYmRhT3B0aW9ucy9BX291dC5qYXZhCm5ldyBmaWxlIG1v
ZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLjRjMWZmMGQKLS0tIC9kZXYvbnVsbAorKysgd29ya3Nw
YWNlL0Zvcm1hdHRlckpTUjMzNS90ZXN0TGFtYmRhT3B0aW9ucy9BX291dC5qYXZhCkBAIC0wLDAg
KzEsNTggQEAKK3BhY2thZ2UgcDEucDIudGVzdDsKKworaW1wb3J0IGphdmEuaW8uU2VyaWFsaXph
YmxlOworaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247CisKK2ludGVyZmFjZSBJIHsKKwlpbnQg
aWQoaW50IHgsIGludCB5KTsKK30KKworcHVibGljIGFic3RyYWN0IGNsYXNzIEEgZXh0ZW5kcyBq
YXZhLmxhbmcuT2JqZWN0IGltcGxlbWVudHMgUnVubmFibGUsCisJCUNsb25lYWJsZSwgU2VyaWFs
aXphYmxlIHsKKwlwdWJsaWMgdm9pZCBydW4oKSB7CisJfQorCisJcHVibGljIHN0YXRpYyBjbGFz
cyBYIHsKKwkJSSBpID0gKHgsIHkpLT54OworCX0KKworCXB1YmxpYyB2b2lkIGxhbWJkYXMoKSB7
CisJCVJ1bm5hYmxlIGEgPSAoKS0+CisJCXsKKwkJCXRoaXNJc0NyYXp5KCk7CisJCQlpSnVzdE1l
dCh5b3UpOworCQkJaGVyZS5udW1iZXIuY2FsbE1lKCk7CisJCX07CisKKwkJRnVuYyBpZEEgPSB4
LT54OworCisJCUZ1bmMgaWRCID0geC0+CisJCXsKKwkJCXJldHVybiB4OworCQl9OworCisJCUZ1
bmMgaWRDID0geC0+eDsKKworCQlGdW5jIGlkMiA9IHgtPgorCQl7CisJCQlpZiAoeCA9PSBudWxs
KSB7CisJCQkJcmV0dXJuIG51bGw7CisJCQl9IGVsc2UKKwkJCQlyZXR1cm4geDsKKwkJfTsKKwor
CQlJbWFnaW5hYmxlRnVuY3Rpb248U3RyaW5nLCBJbnRlZ2VyPiBmID0gKFN0cmluZyBpbnB1dCkt
PmlucHV0Lmxlbmd0aCgpOworCisJCUltYWdpbmFibGVGdW5jdGlvbjxTdHJpbmcsIEludGVnZXI+
IGYyID0gKFN0cmluZyBpbnB1dCktPgorCQl7CisJCQlyZXR1cm4gaW5wdXQubGVuZ3RoKCkgKyBu
ZXcgTGV0c1ByZXRlbmQoKSB7CisJCQkJaW50IGhvd01hbnkoKSB7CisJCQkJCXJldHVybiA0MjsK
KwkJCQl9CisJCQl9CisKKwkJCS5ob3dNYW55KCk7CisJCX07CisJfQorCit9ClwgTm8gbmV3bGlu
ZSBhdCBlbmQgb2YgZmlsZQ==
</data>

          </attachment>
      

    </bug>

</bugzilla>