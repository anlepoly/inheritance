<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>425040</bug_id>
          
          <creation_ts>2014-01-07 12:09:00 -0500</creation_ts>
          <short_desc>[1.8][formatter] Add option: &quot;Insert new line after type annotation&quot;</short_desc>
          <delta_ts>2014-02-18 12:23:38 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>401848</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Markus Keller">markus_keller</reporter>
          <assigned_to name="Manoj Palat Away Until May 11 2015">manpalat</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>jarthana</cc>
    
    <cc>manju656</cc>
    
    <cc>noopur_gupta</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="61542"
          type_id="1"
          status="+"
          setter="markus_keller"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2346630</commentid>
    <comment_count>0</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-01-07 12:09:24 -0500</bug_when>
    <thetext>The formatter should have an option &quot;Insert new line after type annotation&quot;, which should be disabled by default.

E.g. for the following source, the formatter should only insert a new line after &quot;@Deprecated&quot;, but not after any occurrence of @Annot (even if all other &quot;Insert new line after annotations on ...&quot; options are enabled):

package xy;

import java.lang.annotation.*;
import java.util.List;

public class Try extends@Annot Object {
    @Deprecated public @Annot int b;
    public@Annot()int foo(@Annot  List&lt;@Annot()Object&gt; a) {
        return 0;
    }
}

@Documented
@Target(ElementType.TYPE_USE)
@interface Annot {
}


Bug 401848 / bug 403816 have already discussed the problem that type annotations cannot be distinguished from declaration annotations in all cases, e.g.:

    @Deprecated @Annot boolean hardToDecide() {
        return true;
    }

I don&apos;t think the formatter should resolve types, so the next best solution is to rely on a heuristic:

    In ambiguous cases, consider annotations as type annotations
    iff they appear after the last keyword in a modifier list.

This heuristic fails for the hardToDecide() example, but that&apos;s acceptable (and still way better than the current state, where the formatter produces bad results in many more cases).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2355807</commentid>
    <comment_count>1</comment_count>
    <who name="Noopur Gupta">noopur_gupta</who>
    <bug_when>2014-01-29 04:03:40 -0500</bug_when>
    <thetext>Consider the following example:
--------------------------------------------
import java.lang.annotation.ElementType;
import java.lang.annotation.Target;

public class X {
}

@Target(ElementType.TYPE_USE)
@interface Ann1 { }

class A {
	public void foo(X x, @Ann1 X arg) { }
}
--------------------------------------------
Move method #foo to X by choosing &apos;X x&apos; as the receiver. It results in inserting a new line after annotation on the parameter as shown below:
--------------------------------------------
import java.lang.annotation.ElementType;
import java.lang.annotation.Target;

public class X {

	public void foo(@Ann1
	X arg) { }
}

@Target(ElementType.TYPE_USE)
@interface Ann1 { }

class A {
}
--------------------------------------------
It happens as the parameter (@Ann1 X arg) is considered as a SingleVariableDeclaration during AST rewrite and the formatter option &quot;Insert new line after annotations on local variables&quot; is enabled. 

After the new option is added and when it is disabled, new line should not be added after the type use annotation on parameter.

However, until we have the new option, it is not correct to add a new line as above because the option &quot;Insert new line after annotations on parameters&quot; is disabled but still the new line is being added.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2358455</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-04 08:05:59 -0500</bug_when>
    <thetext>(In reply to Noopur Gupta from comment #1)

&gt; After the new option is added and when it is disabled, new line should not
&gt; be added after the type use annotation on parameter.

Noopur, this would fall in the hard to decide - basically Ann1 is featuring in
SE7 location and we cannot decide it is a type annotation without symbol
resolution.

&gt; However, until we have the new option, it is not correct to add a new line
&gt; as above because the option &quot;Insert new line after annotations on
&gt; parameters&quot; is disabled but still the new line is being added.

This should be fixed, but I don&apos;t see this behavior. Can you double check ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2358456</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-04 08:09:30 -0500</bug_when>
    <thetext>The only way given where the spec is headed is to impose conventions - such as
specify type annotations after all modifiers. We don&apos;t know whether there would
be adoption of such a convention, it cannot be enforced in all places - 
i.e parameters - most of them they will lack any modifiers.

Not saying we won&apos;t do this for BETA_JAVA8, given the restrictions the solution
would have and questions around its adoption, perhaps other tasks could be
pursued profitably in the GA time.

I am open to being persuaded.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2358461</commentid>
    <comment_count>4</comment_count>
    <who name="Noopur Gupta">noopur_gupta</who>
    <bug_when>2014-02-04 08:15:42 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #2)
&gt; This should be fixed, but I don&apos;t see this behavior. Can you double check ?

I checked with the latest code and also tried with Kepler (4.3.2) with latest Java8 bundles. I am able to reproduce the issue in both.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2358478</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-04 08:57:56 -0500</bug_when>
    <thetext>(In reply to Noopur Gupta from comment #4)

&gt; I checked with the latest code and also tried with Kepler (4.3.2) with
&gt; latest Java8 bundles. I am able to reproduce the issue in both.

Sorry for wasting your time, yes I can see the problem, I was merely formatting
the code and didn&apos;t see that I should move. 

See also https://bugs.eclipse.org/bugs/show_bug.cgi?id=401848</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2358491</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-04 09:05:56 -0500</bug_when>
    <thetext>I tried this on Helios. We drop the whole annotation, not just badly format it.

I agree this particular thing should be fixed so that formatting during rewrite
honors the setting.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2358506</commentid>
    <comment_count>7</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-02-04 09:17:02 -0500</bug_when>
    <thetext>It turned out comment 1 is actually a bug in the ASTRewriteFormatter. Fixed with bug 427362.

This bug (comment 0) is about the formatter problem (independent of ASTRewrite).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2358642</commentid>
    <comment_count>8</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-02-04 11:44:20 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #3)
&gt; it cannot be enforced in all places - 
&gt; i.e parameters - most of them they will lack any modifiers.

The current default behavior is bad for type annotations on all declarations except for parameters (where the formatter setting to insert new lines is off by default).

Type parameters are also not affected, since the formatter doesn&apos;t seem to insert new lines after annotated type parameters anyway.

With the heuristic from comment 0, I think we would be on a good track. For annotations on parameters, I don&apos;t see a good solution, but the default formatter settings are working in our favor there (i.e. it doesn&apos;t matter if we mis-classify annotations on parameters).

For type annotations in declarations, at least a visibility modifier is often present, so I expect the heuristic to work well.

Of course, users have to adhere to conventions [1], but that&apos;s still better than producing a wrong formatting in most cases and not offering a solution.


[1] The JLS8 preview says in 9.7.4: &quot;It is customary, though not required, to place annotations before all other modifiers.&quot;
=&gt; Wrong; that&apos;s not the tradition for type annotations!

The java-annotation-design.html said: &quot;It is strongly recommended that type annotations be written immediately before the type, after declaration annotations and modifiers.&quot;

A more useful recommendation to alleviate the grammar problems is this:
&quot;It is strongly recommended that declaration annotations be written before all other modifiers, and type annotations immediately before the type.&quot;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2359395</commentid>
    <comment_count>9</comment_count>
      <attachid>239680</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-02-05 18:40:54 -0500</bug_when>
    <thetext>Created attachment 239680
Proposed Patch

In this proposed solution, the new line insertion is controlled by an option, which is, by default, false. In the current code, the modifier list is traversed from left to right and emitted as and when encountered with or without the new line. Proposed solution does not emit the new line after it finds a non-annotation modifier. Note that this heuristic is different in that it does not wait until it sees the end of the list. However, this is simpler and fits into the existing code. And in all the &quot;well behaved cases&quot; where type annotations occur in after the non-annotation modifiers, the behavior is the same as that of the suggested heuristic of figuring out whether this is the last set of annotations (here it checks whether these are *not* the first set of annotations).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2359551</commentid>
    <comment_count>10</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-06 06:42:40 -0500</bug_when>
    <thetext>Jay, can you please review this ? I already have 7-8 patches in the pipeline
for reviews. TIA.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2359888</commentid>
    <comment_count>11</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-02-06 18:48:21 -0500</bug_when>
    <thetext>(In reply to Manoj Palat from comment #9)
Thanks for the patch and the explanations. Makes sense to me and works well.

Released with a few adjustments:

- Typo in Javadoc of DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_AFTER_TYPE_ANNOTATION

- Reverted the changes in DefaultCodeFormatterOptions#setDeprecatedOptions(Map). Type annotations are a new construct that was not covered by the old option, and since the new default is DO_NOT_INSERT, we don&apos;t want to enable it there.

- In Scribe#printModifiers(..), added the same treatment for all kinds of declaration annotations. It&apos;s definitely necessary for local variables and parameters (see updated tests), but I think it also doesn&apos;t hurt for packages (where it shouldn&apos;t occur with JLS8) and for types (where it only makes a difference for non-recommended code styles).

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=90a561fc4554bf1cfedd4387faeef02d32d66ca5</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2359895</commentid>
    <comment_count>12</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-02-06 19:29:06 -0500</bug_when>
    <thetext>(In reply to Markus Keller from comment #11)
&gt; - Reverted the changes in
&gt; DefaultCodeFormatterOptions#setDeprecatedOptions(Map).

Forgot that the new option must still be stored in set(Map): http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=55d39504efb3d0b23ce8f4487f5528fe899ca35d


And I&apos;ve also added the UI for the new option: http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=55d39504efb3d0b23ce8f4487f5528fe899ca35d</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360262</commentid>
    <comment_count>13</comment_count>
      <attachid>239742</attachid>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-02-07 10:46:52 -0500</bug_when>
    <thetext>Created attachment 239742
local vars / parameters assume type annotations by default

Spoke too soon. I had tested the new heuristic from comment 9 before I added the fix in comment 11 that also enabled type annotations formatting in local variables and parameters.

But now, common cases like this don&apos;t treat the annotation as type annotation any more, because the heuristic assumes declaration annotations until the first keyword modifier is seen (i.e. inserts new lines if the &quot;new lines after parameter / local variable annotations&quot; options are enabled):

    void foo(@NonNull String name) {
        @NonNull String upper = name.toUpperCase();
    }

However, for annotations on types/methods/fields, I agree the default should be to assume declaration annotations (unless they appear after a keyword modifier):

    @Deprecated
    @Annot
    boolean hardToDecide() {
        return true;
    }

=&gt; The heuristic cannot be the same for both cases if we expect different defaults.

The attached patch implements context-dependent heuristics via the last argument to Scribe#printModifiers(..) if keywords are absent in the modifiers list:
- parameter / local variable: assumes type annotations
- other element kinds: assumes declaration annotations

I&apos;m not really sure what&apos;s the best solution. An alternative would be to go with the current solution in BETA_JAVA8 but disable &quot;New line after annotation on local variable&quot; by default.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2364970</commentid>
    <comment_count>14</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-02-18 12:23:38 -0500</bug_when>
    <thetext>(In reply to Markus Keller from comment #13)
(In reply to Markus Keller from bug 401848 comment #25)
&gt; I now think we should only treat method parameters specially,
&gt; i.e. assume type annotations if there are no other keywords in the modifier
&gt; list.
&gt; 
&gt; A common usage pattern is to have @SuppressWarnings(&quot;...&quot;) on a local
&gt; variable, and we should not start treating these as type annotations.

Fixed this and bug 401848 with http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=cd140389e1d0cdca9f232f9b33d1b09e90034b22</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>239680</attachid>
            <date>2014-02-05 18:40:00 -0500</date>
            <delta_ts>2014-02-05 18:40:54 -0500</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Fix-for-Bug-425040-18formatter-Add-option-Insert-new.patch</filename>
            <type>text/plain</type>
            <size>11602</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9mb3JtYXR0ZXIvRm9ybWF0dGVyQnVnczE4VGVzdHMuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9mb3JtYXR0ZXIvRm9ybWF0dGVyQnVnczE4VGVzdHMuamF2YQppbmRleCBkZjRmZDMz
Li42MzQ0Yzg5IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZm9ybWF0dGVyL0Zvcm1hdHRlckJ1Z3MxOFRl
c3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Zvcm1hdHRlci9Gb3JtYXR0ZXJCdWdzMThUZXN0cy5qYXZh
CkBAIC04Myw1ICs4Myw3MSBAQAogCQkJIglqYXZhLnV0aWwuQFQoKSBTZXQ8amF2YS5sYW5nLkBU
KCkgU3RyaW5nPiBzO1xuIiArCiAJCQkifVxuIik7CiB9CitwdWJsaWMgdm9pZCB0ZXN0QnVnNDI1
MDQwKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJU3RyaW5nIHNvdXJjZSA9CisJCQki
aW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLio7XG4iICsKKwkJCSJcbiIgKworCQkJInB1Ymxp
YyBjbGFzcyBYIGV4dGVuZHMgQEFubm90MSBPYmplY3Qge1xuIiArCisJCQkiCUBEZXByZWNhdGVk
CUBBbm5vdDMgcHVibGljIEBBbm5vdDIJaW50IGI7XG4iICsKKwkJCSJcbiIgKworCQkJIglAU3Vw
cHJlc3NXYXJuaW5ncyhcInVudXNlZFwiKVxuIiArCisJCQkiCXB1YmxpYyBAQW5ub3QzKCkgaW50
IGZvbyhAQW5ub3Q0IEM8QEFubm90NSgpIE9iamVjdD4gYSkge1xuIiArCisJCQkiCQlAQW5ub3Qx
IGludCBAQW5ub3QyIFtdIGk7XG4iICsKKwkJCSIJCXJldHVybiAwO1xuIiArCisJCQkiCX1cbiIg
KworCQkJIn1cbiIgKworCQkJImNsYXNzIEM8VD4ge31cbiIgKworCQkJIkBEb2N1bWVudGVkXG4i
ICsKKwkJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCQkiQGludGVyZmFj
ZSBBbm5vdDEge31cbiIgKworCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsK
KwkJCSJAaW50ZXJmYWNlIEFubm90MiB7fVxuIiArCisJCQkiQFRhcmdldChFbGVtZW50VHlwZS5U
WVBFX1VTRSlcbiIgKworCQkJIkBpbnRlcmZhY2UgQW5ub3QzIHt9XG4iICsKKwkJCSJAVGFyZ2V0
KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCQkiQGludGVyZmFjZSBBbm5vdDQge31cbiIg
KworCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJCSJAaW50ZXJmYWNl
IEFubm90NSB7fVxuIjsKKwlmb3JtYXRTb3VyY2Uoc291cmNlLAorCQkJImltcG9ydCBqYXZhLmxh
bmcuYW5ub3RhdGlvbi4qO1xuIiArCisJCQkiXG4iICsKKwkJCSJwdWJsaWMgY2xhc3MgWCBleHRl
bmRzIEBBbm5vdDEgT2JqZWN0IHtcbiIgKworCQkJIglARGVwcmVjYXRlZFxuIiArCisJCQkiCUBB
bm5vdDNcbiIgKworCQkJIglwdWJsaWMgQEFubm90MiBpbnQgYjtcbiIgKworCQkJIlxuIiArCisJ
CQkiCUBTdXBwcmVzc1dhcm5pbmdzKFwidW51c2VkXCIpXG4iICsKKwkJCSIJcHVibGljIEBBbm5v
dDMoKSBpbnQgZm9vKEBBbm5vdDQgQzxAQW5ub3Q1KCkgT2JqZWN0PiBhKSB7XG4iICsKKwkJCSIJ
CUBBbm5vdDFcbiIgKworCQkJIgkJaW50IEBBbm5vdDIgW10gaTtcbiIgKworCQkJIgkJcmV0dXJu
IDA7XG4iICsKKwkJCSIJfVxuIiArCisJCQkifVxuIiArCisJCQkiXG4iICsKKwkJCSJjbGFzcyBD
PFQ+IHtcbiIgKworCQkJIn1cbiIgKworCQkJIlxuIiArCisJCQkiQERvY3VtZW50ZWRcbiIgKwor
CQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJCSJAaW50ZXJmYWNlIEFu
bm90MSB7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJIkBUYXJnZXQoRWxlbWVudFR5
cGUuVFlQRV9VU0UpXG4iICsKKwkJCSJAaW50ZXJmYWNlIEFubm90MiB7XG4iICsKKwkJCSJ9XG4i
ICsKKwkJCSJcbiIgKworCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJ
CSJAaW50ZXJmYWNlIEFubm90MyB7XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJIkBU
YXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJCSJAaW50ZXJmYWNlIEFubm90NCB7
XG4iICsKKwkJCSJ9XG4iICsKKwkJCSJcbiIgKworCQkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQ
RV9VU0UpXG4iICsKKwkJCSJAaW50ZXJmYWNlIEFubm90NSB7XG4iICsKKwkJCSJ9XG4iCisJCQkp
OworfQogCiB9ClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmlsZQpkaWZmIC0tZ2l0IGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvd29ya3NwYWNlL0Zvcm1hdHRlckpTUjMwOC90ZXN0
MDEzL1hfb3V0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC93b3Jrc3Bh
Y2UvRm9ybWF0dGVySlNSMzA4L3Rlc3QwMTMvWF9vdXQuamF2YQppbmRleCAyMTQzYTA3Li4xZGJm
MmE2IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC93b3Jrc3Bh
Y2UvRm9ybWF0dGVySlNSMzA4L3Rlc3QwMTMvWF9vdXQuamF2YQorKysgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5tb2RlbC93b3Jrc3BhY2UvRm9ybWF0dGVySlNSMzA4L3Rlc3QwMTMvWF9v
dXQuamF2YQpAQCAtMSw2ICsxLDUgQEAKIHB1YmxpYyBAaW50ZXJmYWNlIFggewotCXB1YmxpYyBA
TWFya2VyCi0JU3RyaW5nIHZhbHVlKCk7CisJcHVibGljIEBNYXJrZXIgU3RyaW5nIHZhbHVlKCk7
CiAKIAlATWFya2VyCiAJU3RyaW5nIHZhbHVlMigpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvZm9ybWF0dGVyL29yZy9lY2xpcHNlL2pkdC9jb3JlL2Zvcm1hdHRlci9EZWZhdWx0
Q29kZUZvcm1hdHRlckNvbnN0YW50cy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZm9ybWF0
dGVyL29yZy9lY2xpcHNlL2pkdC9jb3JlL2Zvcm1hdHRlci9EZWZhdWx0Q29kZUZvcm1hdHRlckNv
bnN0YW50cy5qYXZhCmluZGV4IGQ5OTQyZGYuLjNmMGE1NWIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2Zvcm1hdHRlci9vcmcvZWNsaXBzZS9qZHQvY29yZS9mb3JtYXR0ZXIvRGVm
YXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9mb3JtYXR0ZXIvb3JnL2VjbGlwc2UvamR0L2NvcmUvZm9ybWF0dGVyL0RlZmF1bHRDb2RlRm9y
bWF0dGVyQ29uc3RhbnRzLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21w
YW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBv
ZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0
aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtMTQwOCw2ICsxNDA4LDE4
IEBACiAKIAkvKioKIAkgKiA8cHJlPgorCSAqIEZPUk1BVFRFUiAvIE9wdGlvbiB0byBpbnNlcnQg
YSBuZXcgbGluZSBhZnRlciBhIHR5cGUgYW5ub3RhdGlvbgorCSAqICAgICAtIG9wdGlvbiBpZDog
ICAgICAgICAib3JnLmVjbGlwc2UuamR0LmNvcmUuZm9ybWF0dGVyLmluc2VydF9uZXdfbGluZV9h
ZnRlcl90eXBlX2Fubm90YXRpb24iCisJICogICAgIC0gcG9zc2libGUgdmFsdWVzOiAgIHsgSU5T
RVJULCBET19OT1RfSU5TRVJUIH0KKwkgKiAgICAgLSBkZWZhdWx0OiAgICAgICAgICAgRE9OX05P
VF9JTlNFUlQKKwkgKiA8L3ByZT4KKwkgKiBAc2VlIEphdmFDb3JlI0lOU0VSVAorCSAqIEBzZWUg
SmF2YUNvcmUjRE9fTk9UX0lOU0VSVAorCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAorCSAqLwor
CXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIEZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZU
RVJfVFlQRV9BTk5PVEFUSU9OID0gSmF2YUNvcmUuUExVR0lOX0lEICsgIi5mb3JtYXR0ZXIuaW5z
ZXJ0X25ld19saW5lX2FmdGVyX3R5cGVfYW5ub3RhdGlvbiI7Ly8kTk9OLU5MUy0xJAorCS8qKgor
CSAqIDxwcmU+CiAJICogRk9STUFUVEVSIC8gT3B0aW9uIHRvIGluc2VydCBhIG5ldyBsaW5lIGFm
dGVyIGFuIGFubm90YXRpb24gb24gYSBwYXJhbWV0ZXIKIAkgKiAgICAgLSBvcHRpb24gaWQ6ICAg
ICAgICAgIm9yZy5lY2xpcHNlLmpkdC5jb3JlLmZvcm1hdHRlci5pbnNlcnRfbmV3X2xpbmVfYWZ0
ZXJfYW5ub3RhdGlvbl9vbl9wYXJhbWV0ZXIiCiAJICogICAgIC0gcG9zc2libGUgdmFsdWVzOiAg
IHsgSU5TRVJULCBET19OT1RfSU5TRVJUIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2Zvcm1hdHRlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvZm9ybWF0dGVyL0NvZGVGb3Jt
YXR0ZXJWaXNpdG9yLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9mb3JtYXR0ZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2Zvcm1hdHRlci9Db2RlRm9ybWF0dGVyVmlzaXRvci5qYXZhCmlu
ZGV4IDIwNDZmMGYuLmVlNzJhNjEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Zv
cm1hdHRlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvZm9ybWF0dGVyL0NvZGVGb3JtYXR0ZXJW
aXNpdG9yLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZm9ybWF0dGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9mb3JtYXR0ZXIvQ29kZUZvcm1hdHRlclZpc2l0b3IuamF2YQpAQCAt
NTI5NSw2ICs1Mjk1LDkgQEAKIAkJCWlmIChsZW5ndGggPiAwICYmICghdGhpcy5pc05leHRUb2tl
blB1bmN0dWF0aW9uKCkgfHwgdGhpcy5pc05leHRUb2tlbihUZXJtaW5hbFRva2Vucy5Ub2tlbk5h
bWVMQlJBQ0tFVCkpKSB7CiAJCQkJdGhpcy5zY3JpYmUuc3BhY2UoKTsKIAkJCX0KKwkJCWlmICh0
aGlzLnNjcmliZS5mb3JtYXR0ZXIucHJlZmVyZW5jZXMuaW5zZXJ0X25ld19saW5lX2FmdGVyX3R5
cGVfYW5ub3RhdGlvbikgeworCQkJCXRoaXMuc2NyaWJlLnByaW50TmV3TGluZSgpOworCQkJfQog
CQkJcmV0dXJuIHRydWU7CiAJCX0KIAkJcmV0dXJuIGZhbHNlOwpkaWZmIC0tZ2l0IGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvZm9ybWF0dGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9mb3JtYXR0
ZXIvRGVmYXVsdENvZGVGb3JtYXR0ZXJPcHRpb25zLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9mb3JtYXR0ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Zvcm1hdHRlci9EZWZhdWx0Q29k
ZUZvcm1hdHRlck9wdGlvbnMuamF2YQppbmRleCBjN2NkNDhjLi5mZTMzODgxIDEwMDY0NAotLS0g
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9mb3JtYXR0ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2Zvcm1hdHRlci9EZWZhdWx0Q29kZUZvcm1hdHRlck9wdGlvbnMuamF2YQorKysgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9mb3JtYXR0ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Zvcm1hdHRl
ci9EZWZhdWx0Q29kZUZvcm1hdHRlck9wdGlvbnMuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBv
cmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTQgSUJNIENvcnBv
cmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0g
YW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5k
ZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNo
IGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0x
NDcsNiArMTQ3LDcgQEAKIAlwdWJsaWMgaW50IGluZGVudGF0aW9uX3NpemU7CiAKIAlwdWJsaWMg
Ym9vbGVhbiBpbnNlcnRfbmV3X2xpbmVfYWZ0ZXJfYW5ub3RhdGlvbl9vbl90eXBlOworCXB1Ymxp
YyBib29sZWFuIGluc2VydF9uZXdfbGluZV9hZnRlcl90eXBlX2Fubm90YXRpb247CiAJcHVibGlj
IGJvb2xlYW4gaW5zZXJ0X25ld19saW5lX2FmdGVyX2Fubm90YXRpb25fb25fZmllbGQ7CiAJcHVi
bGljIGJvb2xlYW4gaW5zZXJ0X25ld19saW5lX2FmdGVyX2Fubm90YXRpb25fb25fbWV0aG9kOwog
CXB1YmxpYyBib29sZWFuIGluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0aW9uX29uX3BhY2th
Z2U7CkBAIC00NDgsNiArNDQ5LDcgQEAKIAkJb3B0aW9ucy5wdXQoRGVmYXVsdENvZGVGb3JtYXR0
ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOREVOVF9TV0lUQ0hTVEFURU1FTlRTX0NPTVBBUkVfVE9f
U1dJVENILCB0aGlzLmluZGVudF9zd2l0Y2hzdGF0ZW1lbnRzX2NvbXBhcmVfdG9fc3dpdGNoID8g
RGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuVFJVRSA6IERlZmF1bHRDb2RlRm9ybWF0dGVy
Q29uc3RhbnRzLkZBTFNFKTsKIAkJb3B0aW9ucy5wdXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25z
dGFudHMuRk9STUFUVEVSX0lOREVOVEFUSU9OX1NJWkUsIEludGVnZXIudG9TdHJpbmcodGhpcy5p
bmRlbnRhdGlvbl9zaXplKSk7CiAJCW9wdGlvbnMucHV0KERlZmF1bHRDb2RlRm9ybWF0dGVyQ29u
c3RhbnRzLkZPUk1BVFRFUl9JTlNFUlRfTkVXX0xJTkVfQUZURVJfQU5OT1RBVElPTl9PTl9UWVBF
LCB0aGlzLmluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0aW9uX29uX3R5cGUgPyBKYXZhQ29y
ZS5JTlNFUlQgOiBKYXZhQ29yZS5ET19OT1RfSU5TRVJUKTsKKwkJb3B0aW9ucy5wdXQoRGVmYXVs
dENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9U
WVBFX0FOTk9UQVRJT04sIHRoaXMuaW5zZXJ0X25ld19saW5lX2FmdGVyX3R5cGVfYW5ub3RhdGlv
biA/IEphdmFDb3JlLklOU0VSVCA6IEphdmFDb3JlLkRPX05PVF9JTlNFUlQpOwogCQlvcHRpb25z
LnB1dChEZWZhdWx0Q29kZUZvcm1hdHRlckNvbnN0YW50cy5GT1JNQVRURVJfSU5TRVJUX05FV19M
SU5FX0FGVEVSX0FOTk9UQVRJT05fT05fRklFTEQsIHRoaXMuaW5zZXJ0X25ld19saW5lX2FmdGVy
X2Fubm90YXRpb25fb25fZmllbGQgPyBKYXZhQ29yZS5JTlNFUlQgOiBKYXZhQ29yZS5ET19OT1Rf
SU5TRVJUKTsKIAkJb3B0aW9ucy5wdXQoRGVmYXVsdENvZGVGb3JtYXR0ZXJDb25zdGFudHMuRk9S
TUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFUSU9OX09OX01FVEhPRCwgdGhpcy5p
bnNlcnRfbmV3X2xpbmVfYWZ0ZXJfYW5ub3RhdGlvbl9vbl9tZXRob2QgPyBKYXZhQ29yZS5JTlNF
UlQgOiBKYXZhQ29yZS5ET19OT1RfSU5TRVJUKTsKIAkJb3B0aW9ucy5wdXQoRGVmYXVsdENvZGVG
b3JtYXR0ZXJDb25zdGFudHMuRk9STUFUVEVSX0lOU0VSVF9ORVdfTElORV9BRlRFUl9BTk5PVEFU
SU9OX09OX1BBQ0tBR0UsIHRoaXMuaW5zZXJ0X25ld19saW5lX2FmdGVyX2Fubm90YXRpb25fb25f
cGFja2FnZSA/IEphdmFDb3JlLklOU0VSVCA6IEphdmFDb3JlLkRPX05PVF9JTlNFUlQpOwpAQCAt
MjE0OSw2ICsyMTUxLDcgQEAKIAkJCS8vIGlmIG5vbmUgb2YgdGhlIG5ldyAzLjcgb3B0aW9ucyBp
cyB1c2VkLCBmYWxsIGJhY2sgdG8gdGhlIGRlcHJlY2F0ZWQgMy40IG9wdGlvbgogCQkJaWYgKGlu
c2VydE5ld0xpbmVBZnRlckFubm90YXRpb25Pbk1lbWJlck9wdGlvbiAhPSBudWxsKSB7CiAJCQkJ
Ym9vbGVhbiBpbnNlcnQgPSBKYXZhQ29yZS5JTlNFUlQuZXF1YWxzKGluc2VydE5ld0xpbmVBZnRl
ckFubm90YXRpb25Pbk1lbWJlck9wdGlvbik7CisJCQkJdGhpcy5pbnNlcnRfbmV3X2xpbmVfYWZ0
ZXJfdHlwZV9hbm5vdGF0aW9uID0gaW5zZXJ0OwogCQkJCXRoaXMuaW5zZXJ0X25ld19saW5lX2Fm
dGVyX2Fubm90YXRpb25fb25fdHlwZSA9IGluc2VydDsKIAkJCQl0aGlzLmluc2VydF9uZXdfbGlu
ZV9hZnRlcl9hbm5vdGF0aW9uX29uX2ZpZWxkID0gaW5zZXJ0OwogCQkJCXRoaXMuaW5zZXJ0X25l
d19saW5lX2FmdGVyX2Fubm90YXRpb25fb25fbWV0aG9kID0gaW5zZXJ0OwpAQCAtMjE2Nyw2ICsy
MTcwLDcgQEAKIAkJCQkvLyBpZiBub25lIG9mIHRoZSBuZXcgMy40IG9wdGlvbnMgaXMgdXNlZCwg
ZmFsbCBiYWNrIHRvIHRoZSBkZXByZWNhdGVkIDMuMSBvcHRpb24KIAkJCQlpZiAoaW5zZXJ0TmV3
TGluZUFmdGVyQW5ub3RhdGlvbk9wdGlvbiAhPSBudWxsKSB7CiAJCQkJCWJvb2xlYW4gaW5zZXJ0
ID0gSmF2YUNvcmUuSU5TRVJULmVxdWFscyhpbnNlcnROZXdMaW5lQWZ0ZXJBbm5vdGF0aW9uT3B0
aW9uKTsKKwkJCQkJdGhpcy5pbnNlcnRfbmV3X2xpbmVfYWZ0ZXJfdHlwZV9hbm5vdGF0aW9uID0g
aW5zZXJ0OwogCQkJCQl0aGlzLmluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0aW9uX29uX3R5
cGUgPSBpbnNlcnQ7CiAJCQkJCXRoaXMuaW5zZXJ0X25ld19saW5lX2FmdGVyX2Fubm90YXRpb25f
b25fZmllbGQgPSBpbnNlcnQ7CiAJCQkJCXRoaXMuaW5zZXJ0X25ld19saW5lX2FmdGVyX2Fubm90
YXRpb25fb25fbWV0aG9kID0gaW5zZXJ0OwpAQCAtMjI3OSw2ICsyMjgzLDcgQEAKIAkJdGhpcy5p
bmRlbnRfc3dpdGNoc3RhdGVtZW50c19jb21wYXJlX3RvX3N3aXRjaCA9IHRydWU7CiAJCXRoaXMu
aW5kZW50YXRpb25fc2l6ZSA9IDQ7CiAJCXRoaXMuaW5zZXJ0X25ld19saW5lX2FmdGVyX2Fubm90
YXRpb25fb25fdHlwZSA9IHRydWU7CisJCXRoaXMuaW5zZXJ0X25ld19saW5lX2FmdGVyX3R5cGVf
YW5ub3RhdGlvbiA9IGZhbHNlOwogCQl0aGlzLmluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0
aW9uX29uX2ZpZWxkID0gdHJ1ZTsKIAkJdGhpcy5pbnNlcnRfbmV3X2xpbmVfYWZ0ZXJfYW5ub3Rh
dGlvbl9vbl9tZXRob2QgPSB0cnVlOwogCQl0aGlzLmluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5v
dGF0aW9uX29uX3BhY2thZ2UgPSB0cnVlOwpAQCAtMjU2OSw2ICsyNTc0LDcgQEAKIAkJdGhpcy5p
bmRlbnRfc3dpdGNoc3RhdGVtZW50c19jb21wYXJlX3RvX3N3aXRjaCA9IGZhbHNlOwogCQl0aGlz
LmluZGVudGF0aW9uX3NpemUgPSA0OwogCQl0aGlzLmluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5v
dGF0aW9uX29uX3R5cGUgPSB0cnVlOworCQl0aGlzLmluc2VydF9uZXdfbGluZV9hZnRlcl90eXBl
X2Fubm90YXRpb24gPSBmYWxzZTsKIAkJdGhpcy5pbnNlcnRfbmV3X2xpbmVfYWZ0ZXJfYW5ub3Rh
dGlvbl9vbl9maWVsZCA9IHRydWU7CiAJCXRoaXMuaW5zZXJ0X25ld19saW5lX2FmdGVyX2Fubm90
YXRpb25fb25fbWV0aG9kID0gdHJ1ZTsKIAkJdGhpcy5pbnNlcnRfbmV3X2xpbmVfYWZ0ZXJfYW5u
b3RhdGlvbl9vbl9wYWNrYWdlID0gdHJ1ZTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2Zvcm1hdHRlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvZm9ybWF0dGVyL1NjcmliZS5q
YXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZm9ybWF0dGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9mb3JtYXR0ZXIvU2NyaWJlLmphdmEKaW5kZXggMjUxMWY3ZC4uMmE3YWY1NCAxMDA2NDQK
LS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZm9ybWF0dGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9mb3JtYXR0ZXIvU2NyaWJlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZm9y
bWF0dGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9mb3JtYXR0ZXIvU2NyaWJlLmphdmEKQEAg
LTQ1NTIsNiArNDU1Miw3IEBACiAJCQlpbnQgY3VycmVudFRva2VuU3RhcnRQb3NpdGlvbiA9IHRo
aXMuc2Nhbm5lci5jdXJyZW50UG9zaXRpb247CiAJCQlib29sZWFuIGhhc0NvbW1lbnQgPSBmYWxz
ZTsKIAkJCWJvb2xlYW4gaGFzTW9kaWZpZXJzID0gZmFsc2U7CisJCQlib29sZWFuIGZvdW5kTm9u
QW5ub3RNb2RpZmllcnMgPSBmYWxzZTsKIAkJCXdoaWxlICgodGhpcy5jdXJyZW50VG9rZW4gPSB0
aGlzLnNjYW5uZXIuZ2V0TmV4dFRva2VuKCkpICE9IFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUVP
RikgewogCQkJCWludCBmb3VuZFRhc2tDb3VudCA9IHRoaXMuc2Nhbm5lci5mb3VuZFRhc2tDb3Vu
dDsKIAkJCQlpbnQgdG9rZW5TdGFydFBvc2l0aW9uID0gdGhpcy5zY2FubmVyLmdldEN1cnJlbnRU
b2tlblN0YXJ0UG9zaXRpb24oKTsKQEAgLTQ1NzAsNiArNDU3MSw3IEBACiAJCQkJCWNhc2UgVGVy
bWluYWxUb2tlbnMuVG9rZW5OYW1ldm9sYXRpbGUgOgogCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5z
LlRva2VuTmFtZXN0cmljdGZwIDoKIAkJCQkJCWhhc01vZGlmaWVycyA9IHRydWU7CisJCQkJCQlm
b3VuZE5vbkFubm90TW9kaWZpZXJzID0gdHJ1ZTsKIAkJCQkJCXByaW50KHRoaXMuc2Nhbm5lci5j
dXJyZW50UG9zaXRpb24gLSB0aGlzLnNjYW5uZXIuc3RhcnRQb3NpdGlvbiwgIWlzRmlyc3RNb2Rp
Zmllcik7CiAJCQkJCQlpc0ZpcnN0TW9kaWZpZXIgPSBmYWxzZTsKIAkJCQkJCWN1cnJlbnRUb2tl
blN0YXJ0UG9zaXRpb24gPSB0aGlzLnNjYW5uZXIuY3VycmVudFBvc2l0aW9uOwpAQCAtNDU5OSwx
MiArNDYwMSwxMiBAQAogCQkJCQkJCQkJYnJlYWs7CiAJCQkJCQkJCWNhc2UgSUNvZGVGb3JtYXR0
ZXJDb25zdGFudHMuQU5OT1RBVElPTl9PTl9GSUVMRCA6CiAJCQkJCQkJCQlpZiAodGhpcy5mb3Jt
YXR0ZXIucHJlZmVyZW5jZXMuaW5zZXJ0X25ld19saW5lX2FmdGVyX2Fubm90YXRpb25fb25fZmll
bGQpIHsKLQkJCQkJCQkJCQlzaG91bGRBZGROZXdMaW5lID0gdHJ1ZTsKKwkJCQkJCQkJCQlzaG91
bGRBZGROZXdMaW5lID0gZm91bmROb25Bbm5vdE1vZGlmaWVycyA/IHRoaXMuZm9ybWF0dGVyLnBy
ZWZlcmVuY2VzLmluc2VydF9uZXdfbGluZV9hZnRlcl90eXBlX2Fubm90YXRpb24gOiB0cnVlOwog
CQkJCQkJCQkJfQogCQkJCQkJCQkJYnJlYWs7CiAJCQkJCQkJCWNhc2UgSUNvZGVGb3JtYXR0ZXJD
b25zdGFudHMuQU5OT1RBVElPTl9PTl9NRVRIT0QgOgogCQkJCQkJCQkJaWYgKHRoaXMuZm9ybWF0
dGVyLnByZWZlcmVuY2VzLmluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0aW9uX29uX21ldGhv
ZCkgewotCQkJCQkJCQkJCXNob3VsZEFkZE5ld0xpbmUgPSB0cnVlOworCQkJCQkJCQkJCXNob3Vs
ZEFkZE5ld0xpbmUgPSBmb3VuZE5vbkFubm90TW9kaWZpZXJzID8gdGhpcy5mb3JtYXR0ZXIucHJl
ZmVyZW5jZXMuaW5zZXJ0X25ld19saW5lX2FmdGVyX3R5cGVfYW5ub3RhdGlvbiA6IHRydWU7CiAJ
CQkJCQkJCQl9CiAJCQkJCQkJCQlicmVhazsKIAkJCQkJCQkJY2FzZSBJQ29kZUZvcm1hdHRlckNv
bnN0YW50cy5BTk5PVEFUSU9OX09OX1BBQ0tBR0UgOg==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>239742</attachid>
            <date>2014-02-07 10:46:00 -0500</date>
            <delta_ts>2014-02-07 10:46:52 -0500</delta_ts>
            <desc>local vars / parameters assume type annotations by default</desc>
            <filename>425040_eclipse.jdt.core.patch</filename>
            <type>text/plain</type>
            <size>22840</size>
            <attacher name="Markus Keller">markus_keller</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMAojUCBvcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5tb2RlbApkaWZmIC0tZ2l0IHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9mb3Jt
YXR0ZXIvRm9ybWF0dGVyQnVnczE4VGVzdHMuamF2YSBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvZm9ybWF0dGVyL0Zvcm1hdHRlckJ1Z3MxOFRlc3RzLmphdmEKaW5kZXggNjM0NGM4OS4u
N2MwYTgyMCAxMDA2NDQKLS0tIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9mb3JtYXR0
ZXIvRm9ybWF0dGVyQnVnczE4VGVzdHMuamF2YQorKysgc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL2Zvcm1hdHRlci9Gb3JtYXR0ZXJCdWdzMThUZXN0cy5qYXZhCkBAIC0xMTgsOCArMTE4
LDcgQEAKIAkJCSJcbiIgKwogCQkJIglAU3VwcHJlc3NXYXJuaW5ncyhcInVudXNlZFwiKVxuIiAr
CiAJCQkiCXB1YmxpYyBAQW5ub3QzKCkgaW50IGZvbyhAQW5ub3Q0IEM8QEFubm90NSgpIE9iamVj
dD4gYSkge1xuIiArCi0JCQkiCQlAQW5ub3QxXG4iICsKLQkJCSIJCWludCBAQW5ub3QyIFtdIGk7
XG4iICsKKwkJCSIJCUBBbm5vdDEgaW50IEBBbm5vdDIgW10gaTtcbiIgKwogCQkJIgkJcmV0dXJu
IDA7XG4iICsKIAkJCSIJfVxuIiArCiAJCQkifVxuIiArCmRpZmYgLS1naXQgc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL2Zvcm1hdHRlci9Gb3JtYXR0ZXJSZWdyZXNzaW9uVGVzdHMuamF2
YSBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZm9ybWF0dGVyL0Zvcm1hdHRlclJlZ3Jl
c3Npb25UZXN0cy5qYXZhCmluZGV4IDg3YjVhNzMuLmQ3NzZkOGYgMTAwNjQ0Ci0tLSBzcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZm9ybWF0dGVyL0Zvcm1hdHRlclJlZ3Jlc3Npb25UZXN0
cy5qYXZhCisrKyBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZm9ybWF0dGVyL0Zvcm1h
dHRlclJlZ3Jlc3Npb25UZXN0cy5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFj
Y29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVy
bXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5p
ZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTEwOTE5LDcgKzEw
OTE5LDcgQEAKIAkJIlxuIiArIAogCQkiQERlcHJlY2F0ZWQgcHVibGljIGNsYXNzIEMge1xuIiAr
IAogCQkiCUBEZXByZWNhdGVkIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKEBEZXByZWNhdGVkIFN0
cmluZ1tdIGFyZ3MpIHtcbiIgKyAKLQkJIgkJQERlcHJlY2F0ZWQgaW50IGk9IDI7XG4iICsgCisJ
CSIJCUBEZXByZWNhdGVkIGZpbmFsIGludCBpPSAyO1xuIiArIAogCQkiCQlTeXN0ZW0ub3V0LnBy
aW50bG4oaSk7XG4iICsgCiAJCSIJfVxuIiArIAogCQkifVxuIjsKQEAgLTEwOTI5LDcgKzEwOTI5
LDcgQEAKIAkJIkBEZXByZWNhdGVkIHB1YmxpYyBjbGFzcyBDIHtcbiIgKyAKIAkJIglARGVwcmVj
YXRlZCBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihARGVwcmVjYXRlZCBTdHJpbmdbXSBhcmdzKSB7
XG4iICsgCiAJCSIJCUBEZXByZWNhdGVkXG4iICsgCi0JCSIJCWludCBpID0gMjtcbiIgKyAKKwkJ
IgkJZmluYWwgaW50IGkgPSAyO1xuIiArIAogCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oaSk7XG4i
ICsgCiAJCSIJfVxuIiArIAogCQkifVxuIgpkaWZmIC0tZ2l0IHNyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0aG9kRGVjbFRlc3Qu
amF2YSBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FT
VFJld3JpdGluZ01ldGhvZERlY2xUZXN0LmphdmEKaW5kZXggMzI1NzU1Yy4uODFlMWNlMSAxMDA2
NDQKLS0tIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcv
QVNUUmV3cml0aW5nTWV0aG9kRGVjbFRlc3QuamF2YQorKysgc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdNZXRob2REZWNsVGVzdC5q
YXZhCkBAIC0zMTI4LDcgKzMxMjgsNyBAQAogCQlidWY9IG5ldyBTdHJpbmdCdWZmZXIoKTsKIAkJ
YnVmLmFwcGVuZCgicGFja2FnZSB0ZXN0MTtcbiIpOwogCQlidWYuYXBwZW5kKCJjbGFzcyBFIHtc
biIpOwotCQlidWYuYXBwZW5kKCIgICAgcHVibGljIHZvaWQgZm9vKEBYXG4gICAgQEEgaW50IGEs
IEBCMiBpbnQgYiwgQFhcbiAgICBpbnQgYywgQFggaW50IGQsIEBYXG4gICAgaW50IGUpIHtcbiIp
OworCQlidWYuYXBwZW5kKCIgICAgcHVibGljIHZvaWQgZm9vKEBYIEBBIGludCBhLCBAQjIgaW50
IGIsIEBYIGludCBjLCBAWCBpbnQgZCwgQFggaW50IGUpIHtcbiIpOwogCQlidWYuYXBwZW5kKCIg
ICAgfVxuIik7CiAJCWJ1Zi5hcHBlbmQoIn1cbiIpOwogCQlhc3NlcnRFcXVhbFN0cmluZyhwcmV2
aWV3LCBidWYudG9TdHJpbmcoKSk7CmRpZmYgLS1naXQgd29ya3NwYWNlL0Zvcm1hdHRlci90ZXN0
NTc1L0Ffb3V0LmphdmEgd29ya3NwYWNlL0Zvcm1hdHRlci90ZXN0NTc1L0Ffb3V0LmphdmEKaW5k
ZXggNDgwNDBhMi4uYTllNjdhOSAxMDA2NDQKLS0tIHdvcmtzcGFjZS9Gb3JtYXR0ZXIvdGVzdDU3
NS9BX291dC5qYXZhCisrKyB3b3Jrc3BhY2UvRm9ybWF0dGVyL3Rlc3Q1NzUvQV9vdXQuamF2YQpA
QCAtMSw2ICsxLDUgQEAKIHB1YmxpYyBjbGFzcyBBIHsKLQlwdWJsaWMgT2JqZWN0IGZvbyhAQW5u
KCJwYXJhbWV0ZXIiKQotCU9iamVjdCBwYXJhbWV0ZXIpIHsKKwlwdWJsaWMgT2JqZWN0IGZvbyhA
QW5uKCJwYXJhbWV0ZXIiKSBPYmplY3QgcGFyYW1ldGVyKSB7CiAJCXJldHVybiBwYXJhbWV0ZXI7
CiAJfQogfQpkaWZmIC0tZ2l0IHdvcmtzcGFjZS9Gb3JtYXR0ZXIvdGVzdDcwMS9YX291dC5qYXZh
IHdvcmtzcGFjZS9Gb3JtYXR0ZXIvdGVzdDcwMS9YX291dC5qYXZhCmluZGV4IGE5YWNmOWYuLjhm
ZWVhNWQgMTAwNjQ0Ci0tLSB3b3Jrc3BhY2UvRm9ybWF0dGVyL3Rlc3Q3MDEvWF9vdXQuamF2YQor
Kysgd29ya3NwYWNlL0Zvcm1hdHRlci90ZXN0NzAxL1hfb3V0LmphdmEKQEAgLTIsMTAgKzIsNyBA
QAogCiAJQERlcHJlY2F0ZWQKIAlAU3VwcHJlc3NXYXJuaW5ncygidW51c2VkIikKLQlwdWJsaWMg
dm9pZCBzZXRGb28oQFJlcXVpcmVkCi0JU3RyaW5nIG5hbWUsIEBOb3ROdWxsCi0JaW50IHZhbHVl
LCBAUmVxdWlyZWQKLQlpbnQgc3RhcnQsIEBSZXF1aXJlZAotCWludCBsZW5ndGgpIHsKKwlwdWJs
aWMgdm9pZCBzZXRGb28oQFJlcXVpcmVkIFN0cmluZyBuYW1lLCBATm90TnVsbCBpbnQgdmFsdWUs
CisJCQlAUmVxdWlyZWQgaW50IHN0YXJ0LCBAUmVxdWlyZWQgaW50IGxlbmd0aCkgewogCX0KIH0K
ZGlmZiAtLWdpdCB3b3Jrc3BhY2UvRm9ybWF0dGVyL3Rlc3Q3MDMvWF9pbi5qYXZhIHdvcmtzcGFj
ZS9Gb3JtYXR0ZXIvdGVzdDcwMy9YX2luLmphdmEKaW5kZXggODIwOTMxMC4uZDRmMTM3NiAxMDA2
NDQKLS0tIHdvcmtzcGFjZS9Gb3JtYXR0ZXIvdGVzdDcwMy9YX2luLmphdmEKKysrIHdvcmtzcGFj
ZS9Gb3JtYXR0ZXIvdGVzdDcwMy9YX2luLmphdmEKQEAgLTEsNCArMSw0IEBACiBwdWJsaWMgY2xh
c3MgWCB7Ci0JQERlcHJlY2F0ZWQgcHVibGljIHZvaWQgYmFyKEBTdXBwcmVzc1dhcm5pbmdzKCJ1
bnVzZWQiKSBpbnQgaSkgeworCUBEZXByZWNhdGVkIHB1YmxpYyB2b2lkIGJhcihAU3VwcHJlc3NX
YXJuaW5ncygidW51c2VkIikgZmluYWwgaW50IGkpIHsKIAl9CiB9CmRpZmYgLS1naXQgd29ya3Nw
YWNlL0Zvcm1hdHRlci90ZXN0NzAzL1hfb3V0LmphdmEgd29ya3NwYWNlL0Zvcm1hdHRlci90ZXN0
NzAzL1hfb3V0LmphdmEKaW5kZXggOTQ2YmRkMi4uZTBjNjc2ZSAxMDA2NDQKLS0tIHdvcmtzcGFj
ZS9Gb3JtYXR0ZXIvdGVzdDcwMy9YX291dC5qYXZhCisrKyB3b3Jrc3BhY2UvRm9ybWF0dGVyL3Rl
c3Q3MDMvWF9vdXQuamF2YQpAQCAtMSw2ICsxLDYgQEAKIHB1YmxpYyBjbGFzcyBYIHsKIAlARGVw
cmVjYXRlZAogCXB1YmxpYyB2b2lkIGJhcihAU3VwcHJlc3NXYXJuaW5ncygidW51c2VkIikKLQlp
bnQgaSkgeworCWZpbmFsIGludCBpKSB7CiAJfQogfQpkaWZmIC0tZ2l0IHdvcmtzcGFjZS9Gb3Jt
YXR0ZXIvdGVzdDcwNC9YX2luLmphdmEgd29ya3NwYWNlL0Zvcm1hdHRlci90ZXN0NzA0L1hfaW4u
amF2YQppbmRleCA4MjA5MzEwLi5kNGYxMzc2IDEwMDY0NAotLS0gd29ya3NwYWNlL0Zvcm1hdHRl
ci90ZXN0NzA0L1hfaW4uamF2YQorKysgd29ya3NwYWNlL0Zvcm1hdHRlci90ZXN0NzA0L1hfaW4u
amF2YQpAQCAtMSw0ICsxLDQgQEAKIHB1YmxpYyBjbGFzcyBYIHsKLQlARGVwcmVjYXRlZCBwdWJs
aWMgdm9pZCBiYXIoQFN1cHByZXNzV2FybmluZ3MoInVudXNlZCIpIGludCBpKSB7CisJQERlcHJl
Y2F0ZWQgcHVibGljIHZvaWQgYmFyKEBTdXBwcmVzc1dhcm5pbmdzKCJ1bnVzZWQiKSBmaW5hbCBp
bnQgaSkgewogCX0KIH0KZGlmZiAtLWdpdCB3b3Jrc3BhY2UvRm9ybWF0dGVyL3Rlc3Q3MDQvWF9v
dXQuamF2YSB3b3Jrc3BhY2UvRm9ybWF0dGVyL3Rlc3Q3MDQvWF9vdXQuamF2YQppbmRleCBmNDJh
YmUwLi43MThhY2FiIDEwMDY0NAotLS0gd29ya3NwYWNlL0Zvcm1hdHRlci90ZXN0NzA0L1hfb3V0
LmphdmEKKysrIHdvcmtzcGFjZS9Gb3JtYXR0ZXIvdGVzdDcwNC9YX291dC5qYXZhCkBAIC0xLDUg
KzEsNSBAQAogcHVibGljIGNsYXNzIFggewogCUBEZXByZWNhdGVkIHB1YmxpYyB2b2lkIGJhcihA
U3VwcHJlc3NXYXJuaW5ncygidW51c2VkIikKLQlpbnQgaSkgeworCWZpbmFsIGludCBpKSB7CiAJ
fQogfQpkaWZmIC0tZ2l0IHdvcmtzcGFjZS9Gb3JtYXR0ZXIvdGVzdDcwNi9YX2luLmphdmEgd29y
a3NwYWNlL0Zvcm1hdHRlci90ZXN0NzA2L1hfaW4uamF2YQppbmRleCBiNDFjYjEwLi40YTA2ZjE1
IDEwMDY0NAotLS0gd29ya3NwYWNlL0Zvcm1hdHRlci90ZXN0NzA2L1hfaW4uamF2YQorKysgd29y
a3NwYWNlL0Zvcm1hdHRlci90ZXN0NzA2L1hfaW4uamF2YQpAQCAtMjQsNyArMjQsNyBAQAogCiAJ
fQogCi0JQE9uTWVtYmVyIHB1YmxpYyB2b2lkIGJhcihAT25QYXJhbWV0ZXIoInVudXNlZCB2YWx1
ZSIpIGludCBpLCBAT25QYXJhbWV0ZXIoInVudXNlZCB2YWx1ZSIpIFN0cmluZyBzKSB7CisJQE9u
TWVtYmVyIHB1YmxpYyB2b2lkIGJhcihAT25QYXJhbWV0ZXIoInVudXNlZCB2YWx1ZSIpIGZpbmFs
IGludCBpLCBAT25QYXJhbWV0ZXIoInVudXNlZCB2YWx1ZSIpIFN0cmluZyBzKSB7CiAJCUBPbkxv
Y2FsVmFyaWFibGUgQFJldGVudGlvbiBTdHJpbmcgbG9jYWxTdHJpbmcgPSAic3RyaW5nIjsKIAl9
CiB9CmRpZmYgLS1naXQgd29ya3NwYWNlL0Zvcm1hdHRlci90ZXN0NzA2L1hfb3V0LmphdmEgd29y
a3NwYWNlL0Zvcm1hdHRlci90ZXN0NzA2L1hfb3V0LmphdmEKaW5kZXggNTcxMjM0Ni4uMWQ4ZjEw
MCAxMDA2NDQKLS0tIHdvcmtzcGFjZS9Gb3JtYXR0ZXIvdGVzdDcwNi9YX291dC5qYXZhCisrKyB3
b3Jrc3BhY2UvRm9ybWF0dGVyL3Rlc3Q3MDYvWF9vdXQuamF2YQpAQCAtMzQsOCArMzQsNyBAQAog
CX0KIAogCUBPbk1lbWJlciBwdWJsaWMgdm9pZCBiYXIoQE9uUGFyYW1ldGVyKCJ1bnVzZWQgdmFs
dWUiKQotCWludCBpLCBAT25QYXJhbWV0ZXIoInVudXNlZCB2YWx1ZSIpCi0JU3RyaW5nIHMpIHsK
KwlmaW5hbCBpbnQgaSwgQE9uUGFyYW1ldGVyKCJ1bnVzZWQgdmFsdWUiKSBTdHJpbmcgcykgewog
CQlAT25Mb2NhbFZhcmlhYmxlIEBSZXRlbnRpb24gU3RyaW5nIGxvY2FsU3RyaW5nID0gInN0cmlu
ZyI7CiAJfQogfQpkaWZmIC0tZ2l0IHdvcmtzcGFjZS9Gb3JtYXR0ZXIvdGVzdDcwNy9YX2luLmph
dmEgd29ya3NwYWNlL0Zvcm1hdHRlci90ZXN0NzA3L1hfaW4uamF2YQppbmRleCBiNDFjYjEwLi40
YTA2ZjE1IDEwMDY0NAotLS0gd29ya3NwYWNlL0Zvcm1hdHRlci90ZXN0NzA3L1hfaW4uamF2YQor
Kysgd29ya3NwYWNlL0Zvcm1hdHRlci90ZXN0NzA3L1hfaW4uamF2YQpAQCAtMjQsNyArMjQsNyBA
QAogCiAJfQogCi0JQE9uTWVtYmVyIHB1YmxpYyB2b2lkIGJhcihAT25QYXJhbWV0ZXIoInVudXNl
ZCB2YWx1ZSIpIGludCBpLCBAT25QYXJhbWV0ZXIoInVudXNlZCB2YWx1ZSIpIFN0cmluZyBzKSB7
CisJQE9uTWVtYmVyIHB1YmxpYyB2b2lkIGJhcihAT25QYXJhbWV0ZXIoInVudXNlZCB2YWx1ZSIp
IGZpbmFsIGludCBpLCBAT25QYXJhbWV0ZXIoInVudXNlZCB2YWx1ZSIpIFN0cmluZyBzKSB7CiAJ
CUBPbkxvY2FsVmFyaWFibGUgQFJldGVudGlvbiBTdHJpbmcgbG9jYWxTdHJpbmcgPSAic3RyaW5n
IjsKIAl9CiB9CmRpZmYgLS1naXQgd29ya3NwYWNlL0Zvcm1hdHRlci90ZXN0NzA3L1hfb3V0Lmph
dmEgd29ya3NwYWNlL0Zvcm1hdHRlci90ZXN0NzA3L1hfb3V0LmphdmEKaW5kZXggNzg5YzEwNi4u
YTBkN2JmOSAxMDA2NDQKLS0tIHdvcmtzcGFjZS9Gb3JtYXR0ZXIvdGVzdDcwNy9YX291dC5qYXZh
CisrKyB3b3Jrc3BhY2UvRm9ybWF0dGVyL3Rlc3Q3MDcvWF9vdXQuamF2YQpAQCAtNDQsOCArNDQs
NyBAQAogCiAJQE9uTWVtYmVyCiAJcHVibGljIHZvaWQgYmFyKEBPblBhcmFtZXRlcigidW51c2Vk
IHZhbHVlIikKLQlpbnQgaSwgQE9uUGFyYW1ldGVyKCJ1bnVzZWQgdmFsdWUiKQotCVN0cmluZyBz
KSB7CisJZmluYWwgaW50IGksIEBPblBhcmFtZXRlcigidW51c2VkIHZhbHVlIikgU3RyaW5nIHMp
IHsKIAkJQE9uTG9jYWxWYXJpYWJsZSBAUmV0ZW50aW9uIFN0cmluZyBsb2NhbFN0cmluZyA9ICJz
dHJpbmciOwogCX0KIH0KZGlmZiAtLWdpdCB3b3Jrc3BhY2UvRm9ybWF0dGVyL3Rlc3Q3MTAvWF9p
bi5qYXZhIHdvcmtzcGFjZS9Gb3JtYXR0ZXIvdGVzdDcxMC9YX2luLmphdmEKaW5kZXggYjQxY2Ix
MC4uNGEwNmYxNSAxMDA2NDQKLS0tIHdvcmtzcGFjZS9Gb3JtYXR0ZXIvdGVzdDcxMC9YX2luLmph
dmEKKysrIHdvcmtzcGFjZS9Gb3JtYXR0ZXIvdGVzdDcxMC9YX2luLmphdmEKQEAgLTI0LDcgKzI0
LDcgQEAKIAogCX0KIAotCUBPbk1lbWJlciBwdWJsaWMgdm9pZCBiYXIoQE9uUGFyYW1ldGVyKCJ1
bnVzZWQgdmFsdWUiKSBpbnQgaSwgQE9uUGFyYW1ldGVyKCJ1bnVzZWQgdmFsdWUiKSBTdHJpbmcg
cykgeworCUBPbk1lbWJlciBwdWJsaWMgdm9pZCBiYXIoQE9uUGFyYW1ldGVyKCJ1bnVzZWQgdmFs
dWUiKSBmaW5hbCBpbnQgaSwgQE9uUGFyYW1ldGVyKCJ1bnVzZWQgdmFsdWUiKSBTdHJpbmcgcykg
ewogCQlAT25Mb2NhbFZhcmlhYmxlIEBSZXRlbnRpb24gU3RyaW5nIGxvY2FsU3RyaW5nID0gInN0
cmluZyI7CiAJfQogfQpkaWZmIC0tZ2l0IHdvcmtzcGFjZS9Gb3JtYXR0ZXIvdGVzdDcxMC9YX291
dC5qYXZhIHdvcmtzcGFjZS9Gb3JtYXR0ZXIvdGVzdDcxMC9YX291dC5qYXZhCmluZGV4IDQyNmYw
ZTYuLjFkOGYxMDAgMTAwNjQ0Ci0tLSB3b3Jrc3BhY2UvRm9ybWF0dGVyL3Rlc3Q3MTAvWF9vdXQu
amF2YQorKysgd29ya3NwYWNlL0Zvcm1hdHRlci90ZXN0NzEwL1hfb3V0LmphdmEKQEAgLTM0LDEw
ICszNCw3IEBACiAJfQogCiAJQE9uTWVtYmVyIHB1YmxpYyB2b2lkIGJhcihAT25QYXJhbWV0ZXIo
InVudXNlZCB2YWx1ZSIpCi0JaW50IGksIEBPblBhcmFtZXRlcigidW51c2VkIHZhbHVlIikKLQlT
dHJpbmcgcykgewotCQlAT25Mb2NhbFZhcmlhYmxlCi0JCUBSZXRlbnRpb24KLQkJU3RyaW5nIGxv
Y2FsU3RyaW5nID0gInN0cmluZyI7CisJZmluYWwgaW50IGksIEBPblBhcmFtZXRlcigidW51c2Vk
IHZhbHVlIikgU3RyaW5nIHMpIHsKKwkJQE9uTG9jYWxWYXJpYWJsZSBAUmV0ZW50aW9uIFN0cmlu
ZyBsb2NhbFN0cmluZyA9ICJzdHJpbmciOwogCX0KIH0KZGlmZiAtLWdpdCB3b3Jrc3BhY2UvRm9y
bWF0dGVyL3Rlc3Q3MTEvWF9pbi5qYXZhIHdvcmtzcGFjZS9Gb3JtYXR0ZXIvdGVzdDcxMS9YX2lu
LmphdmEKaW5kZXggYjQxY2IxMC4uNGEwNmYxNSAxMDA2NDQKLS0tIHdvcmtzcGFjZS9Gb3JtYXR0
ZXIvdGVzdDcxMS9YX2luLmphdmEKKysrIHdvcmtzcGFjZS9Gb3JtYXR0ZXIvdGVzdDcxMS9YX2lu
LmphdmEKQEAgLTI0LDcgKzI0LDcgQEAKIAogCX0KIAotCUBPbk1lbWJlciBwdWJsaWMgdm9pZCBi
YXIoQE9uUGFyYW1ldGVyKCJ1bnVzZWQgdmFsdWUiKSBpbnQgaSwgQE9uUGFyYW1ldGVyKCJ1bnVz
ZWQgdmFsdWUiKSBTdHJpbmcgcykgeworCUBPbk1lbWJlciBwdWJsaWMgdm9pZCBiYXIoQE9uUGFy
YW1ldGVyKCJ1bnVzZWQgdmFsdWUiKSBmaW5hbCBpbnQgaSwgQE9uUGFyYW1ldGVyKCJ1bnVzZWQg
dmFsdWUiKSBTdHJpbmcgcykgewogCQlAT25Mb2NhbFZhcmlhYmxlIEBSZXRlbnRpb24gU3RyaW5n
IGxvY2FsU3RyaW5nID0gInN0cmluZyI7CiAJfQogfQpkaWZmIC0tZ2l0IHdvcmtzcGFjZS9Gb3Jt
YXR0ZXIvdGVzdDcxMS9YX291dC5qYXZhIHdvcmtzcGFjZS9Gb3JtYXR0ZXIvdGVzdDcxMS9YX291
dC5qYXZhCmluZGV4IDRjMTM4OGQuLjcyYWIxMmQgMTAwNjQ0Ci0tLSB3b3Jrc3BhY2UvRm9ybWF0
dGVyL3Rlc3Q3MTEvWF9vdXQuamF2YQorKysgd29ya3NwYWNlL0Zvcm1hdHRlci90ZXN0NzExL1hf
b3V0LmphdmEKQEAgLTMzLDEwICszMyw4IEBACiAKIAl9CiAKLQlAT25NZW1iZXIgcHVibGljIHZv
aWQgYmFyKEBPblBhcmFtZXRlcigidW51c2VkIHZhbHVlIikgaW50IGksCisJQE9uTWVtYmVyIHB1
YmxpYyB2b2lkIGJhcihAT25QYXJhbWV0ZXIoInVudXNlZCB2YWx1ZSIpIGZpbmFsIGludCBpLAog
CQkJQE9uUGFyYW1ldGVyKCJ1bnVzZWQgdmFsdWUiKSBTdHJpbmcgcykgewotCQlAT25Mb2NhbFZh
cmlhYmxlCi0JCUBSZXRlbnRpb24KLQkJU3RyaW5nIGxvY2FsU3RyaW5nID0gInN0cmluZyI7CisJ
CUBPbkxvY2FsVmFyaWFibGUgQFJldGVudGlvbiBTdHJpbmcgbG9jYWxTdHJpbmcgPSAic3RyaW5n
IjsKIAl9CiB9CmRpZmYgLS1naXQgd29ya3NwYWNlL0Zvcm1hdHRlci90ZXN0NzEyL1hfaW4uamF2
YSB3b3Jrc3BhY2UvRm9ybWF0dGVyL3Rlc3Q3MTIvWF9pbi5qYXZhCmluZGV4IGI0MWNiMTAuLjc1
NGQwOGQgMTAwNjQ0Ci0tLSB3b3Jrc3BhY2UvRm9ybWF0dGVyL3Rlc3Q3MTIvWF9pbi5qYXZhCisr
KyB3b3Jrc3BhY2UvRm9ybWF0dGVyL3Rlc3Q3MTIvWF9pbi5qYXZhCkBAIC0yNSw2ICsyNSw2IEBA
CiAJfQogCiAJQE9uTWVtYmVyIHB1YmxpYyB2b2lkIGJhcihAT25QYXJhbWV0ZXIoInVudXNlZCB2
YWx1ZSIpIGludCBpLCBAT25QYXJhbWV0ZXIoInVudXNlZCB2YWx1ZSIpIFN0cmluZyBzKSB7Ci0J
CUBPbkxvY2FsVmFyaWFibGUgQFJldGVudGlvbiBTdHJpbmcgbG9jYWxTdHJpbmcgPSAic3RyaW5n
IjsKKwkJQE9uTG9jYWxWYXJpYWJsZSBAUmV0ZW50aW9uIGZpbmFsIFN0cmluZyBsb2NhbFN0cmlu
ZyA9ICJzdHJpbmciOwogCX0KIH0KZGlmZiAtLWdpdCB3b3Jrc3BhY2UvRm9ybWF0dGVyL3Rlc3Q3
MTIvWF9vdXQuamF2YSB3b3Jrc3BhY2UvRm9ybWF0dGVyL3Rlc3Q3MTIvWF9vdXQuamF2YQppbmRl
eCAwZjFkYTdmLi4zM2Y1OTA4IDEwMDY0NAotLS0gd29ya3NwYWNlL0Zvcm1hdHRlci90ZXN0NzEy
L1hfb3V0LmphdmEKKysrIHdvcmtzcGFjZS9Gb3JtYXR0ZXIvdGVzdDcxMi9YX291dC5qYXZhCkBA
IC00Nyw2ICs0Nyw2IEBACiAJCQlAT25QYXJhbWV0ZXIoInVudXNlZCB2YWx1ZSIpIFN0cmluZyBz
KSB7CiAJCUBPbkxvY2FsVmFyaWFibGUKIAkJQFJldGVudGlvbgotCQlTdHJpbmcgbG9jYWxTdHJp
bmcgPSAic3RyaW5nIjsKKwkJZmluYWwgU3RyaW5nIGxvY2FsU3RyaW5nID0gInN0cmluZyI7CiAJ
fQogfQpkaWZmIC0tZ2l0IHdvcmtzcGFjZS9Gb3JtYXR0ZXJKU1IzMDgvdGVzdDAwOS9YX291dC5q
YXZhIHdvcmtzcGFjZS9Gb3JtYXR0ZXJKU1IzMDgvdGVzdDAwOS9YX291dC5qYXZhCmluZGV4IDJj
MWJmOGEuLjRlOTFlOTUgMTAwNjQ0Ci0tLSB3b3Jrc3BhY2UvRm9ybWF0dGVySlNSMzA4L3Rlc3Qw
MDkvWF9vdXQuamF2YQorKysgd29ya3NwYWNlL0Zvcm1hdHRlckpTUjMwOC90ZXN0MDA5L1hfb3V0
LmphdmEKQEAgLTEsNyArMSw2IEBACiBwdWJsaWMgY2xhc3MgWCB7CiAJaW50IHgoKSB7Ci0JCUBN
YXJrZXIKLQkJaW50IHA7CisJCUBNYXJrZXIgaW50IHA7CiAJCWZpbmFsIEBNYXJrZXIgaW50IHE7
CiAJCUBNYXJrZXIKIAkJZmluYWwgaW50IHI7CmRpZmYgLS1naXQgd29ya3NwYWNlL0Zvcm1hdHRl
ckpTUjMwOC90ZXN0MDExL1hfb3V0LmphdmEgd29ya3NwYWNlL0Zvcm1hdHRlckpTUjMwOC90ZXN0
MDExL1hfb3V0LmphdmEKaW5kZXggNTg2MTQxMi4uMmJjZjM5NiAxMDA2NDQKLS0tIHdvcmtzcGFj
ZS9Gb3JtYXR0ZXJKU1IzMDgvdGVzdDAxMS9YX291dC5qYXZhCisrKyB3b3Jrc3BhY2UvRm9ybWF0
dGVySlNSMzA4L3Rlc3QwMTEvWF9vdXQuamF2YQpAQCAtMSw3ICsxLDYgQEAKIHB1YmxpYyBjbGFz
cyBYIHsKIAlpbnQgeCgpIHsKLQkJdHJ5IChATWFya2VyCi0JCUludGVnZXIgcCA9IG51bGw7IGZp
bmFsIEBNYXJrZXIgSW50ZWdlciBxID0gbnVsbDsgQE1hcmtlcgorCQl0cnkgKEBNYXJrZXIgSW50
ZWdlciBwID0gbnVsbDsgZmluYWwgQE1hcmtlciBJbnRlZ2VyIHEgPSBudWxsOyBATWFya2VyCiAJ
CWZpbmFsIEludGVnZXIgciA9IG51bGwpIHsKIAkJfQogCQlyZXR1cm4gMTA7CmRpZmYgLS1naXQg
d29ya3NwYWNlL0Zvcm1hdHRlckpTUjMwOC90ZXN0MDEyL1hfb3V0LmphdmEgd29ya3NwYWNlL0Zv
cm1hdHRlckpTUjMwOC90ZXN0MDEyL1hfb3V0LmphdmEKaW5kZXggNzI1NWY2ZC4uNWU4ODlhZSAx
MDA2NDQKLS0tIHdvcmtzcGFjZS9Gb3JtYXR0ZXJKU1IzMDgvdGVzdDAxMi9YX291dC5qYXZhCisr
KyB3b3Jrc3BhY2UvRm9ybWF0dGVySlNSMzA4L3Rlc3QwMTIvWF9vdXQuamF2YQpAQCAtMSw3ICsx
LDYgQEAKIHB1YmxpYyBjbGFzcyBYIHsKIAlpbnQgeCgpIHsKLQkJZm9yIChATWFya2VyCi0JCWlu
dCBpIDogbmV3IGludFszXSkgeworCQlmb3IgKEBNYXJrZXIgaW50IGkgOiBuZXcgaW50WzNdKSB7
CiAJCX0KIAkJZm9yIChmaW5hbCBATWFya2VyIGludCBpIDogbmV3IGludFszXSkgewogCQl9CiNQ
IG9yZy5lY2xpcHNlLmpkdC5jb3JlCmRpZmYgLS1naXQgZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL2RvbS9yZXdyaXRlL0FTVFJld3JpdGVGb3JtYXR0ZXIuamF2YSBkb20vb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL3Jld3JpdGUvQVNUUmV3cml0ZUZvcm1hdHRlci5q
YXZhCmluZGV4IGY1YzE0ZTQuLjY3MzM4MmQgMTAwNjQ0Ci0tLSBkb20vb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvcmUvZG9tL3Jld3JpdGUvQVNUUmV3cml0ZUZvcm1hdHRlci5qYXZhCisrKyBk
b20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL3Jld3JpdGUvQVNUUmV3cml0ZUZv
cm1hdHRlci5qYXZhCkBAIC0yODcsNiArMjg3LDggQEAKIAkJCQljYXNlIEFTVE5vZGUuUVVBTElG
SUVEX1RZUEU6CiAJCQkJY2FzZSBBU1ROb2RlLlNJTVBMRV9UWVBFOgogCQkJCQlzdWZmaXg9ICIg
eDsiOyAvLyROT04tTkxTLTEkCisvLwkJCQkJcHJlZml4PSAieyI7IC8vJE5PTi1OTFMtMSQKKy8v
CQkJCQlzdWZmaXg9ICIgeDt9IjsgLy8kTk9OLU5MUy0xJAogCQkJCQljb2RlPSBDb2RlRm9ybWF0
dGVyLktfQ0xBU1NfQk9EWV9ERUNMQVJBVElPTlM7CiAJCQkJCWJyZWFrOwogCQkJCWNhc2UgQVNU
Tm9kZS5XSUxEQ0FSRF9UWVBFOgpkaWZmIC0tZ2l0IGZvcm1hdHRlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvZm9ybWF0dGVyL0NvZGVGb3JtYXR0ZXJWaXNpdG9yLmphdmEgZm9ybWF0dGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9mb3JtYXR0ZXIvQ29kZUZvcm1hdHRlclZpc2l0b3IuamF2
YQppbmRleCBlZTcyYTYxLi4yYzMwZTY1IDEwMDY0NAotLS0gZm9ybWF0dGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9mb3JtYXR0ZXIvQ29kZUZvcm1hdHRlclZpc2l0b3IuamF2YQorKysgZm9y
bWF0dGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9mb3JtYXR0ZXIvQ29kZUZvcm1hdHRlclZp
c2l0b3IuamF2YQpAQCAtNjM5LDcgKzYzOSw3IEBACiAJCUFsaWdubWVudCBtZW1iZXJBbGlnbm1l
bnQgPSB0aGlzLnNjcmliZS5nZXRNZW1iZXJBbGlnbm1lbnQoKTsKIAogICAgICAgICB0aGlzLnNj
cmliZS5wcmludENvbW1lbnQoKTsKLQkJdGhpcy5zY3JpYmUucHJpbnRNb2RpZmllcnMoZmllbGRE
ZWNsYXJhdGlvbi5hbm5vdGF0aW9ucywgdGhpcywgSUNvZGVGb3JtYXR0ZXJDb25zdGFudHMuQU5O
T1RBVElPTl9PTl9GSUVMRCk7CisJCXRoaXMuc2NyaWJlLnByaW50TW9kaWZpZXJzKGZpZWxkRGVj
bGFyYXRpb24uYW5ub3RhdGlvbnMsIHRoaXMsIElDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkFOTk9U
QVRJT05fT05fRklFTEQsIGZhbHNlKTsKIAkJdGhpcy5zY3JpYmUuc3BhY2UoKTsKIAkJLyoKIAkJ
ICogRmllbGQgdHlwZQpAQCAtNzgxLDcgKzc4MSw3IEBACiAJCUFsaWdubWVudCBmaWVsZEFsaWdu
bWVudCA9IHRoaXMuc2NyaWJlLmdldE1lbWJlckFsaWdubWVudCgpOwogCiAgICAgICAgIHRoaXMu
c2NyaWJlLnByaW50Q29tbWVudCgpOwotCQl0aGlzLnNjcmliZS5wcmludE1vZGlmaWVycyhtdWx0
aUZpZWxkRGVjbGFyYXRpb24uYW5ub3RhdGlvbnMsIHRoaXMsIElDb2RlRm9ybWF0dGVyQ29uc3Rh
bnRzLkFOTk9UQVRJT05fT05fRklFTEQpOworCQl0aGlzLnNjcmliZS5wcmludE1vZGlmaWVycyht
dWx0aUZpZWxkRGVjbGFyYXRpb24uYW5ub3RhdGlvbnMsIHRoaXMsIElDb2RlRm9ybWF0dGVyQ29u
c3RhbnRzLkFOTk9UQVRJT05fT05fRklFTEQsIGZhbHNlKTsKIAkJdGhpcy5zY3JpYmUuc3BhY2Uo
KTsKIAogCQltdWx0aUZpZWxkRGVjbGFyYXRpb24uZGVjbGFyYXRpb25zWzBdLnR5cGUudHJhdmVy
c2UodGhpcywgc2NvcGUpOwpAQCAtMTAwOCw3ICsxMDA4LDcgQEAKIAkJdGhpcy5zY3JpYmUucHJp
bnRDb21tZW50KCk7CiAJCWludCBsaW5lID0gdGhpcy5zY3JpYmUubGluZTsKIAotCQl0aGlzLnNj
cmliZS5wcmludE1vZGlmaWVycyh0eXBlRGVjbGFyYXRpb24uYW5ub3RhdGlvbnMsIHRoaXMsIElD
b2RlRm9ybWF0dGVyQ29uc3RhbnRzLkFOTk9UQVRJT05fT05fVFlQRSk7CisJCXRoaXMuc2NyaWJl
LnByaW50TW9kaWZpZXJzKHR5cGVEZWNsYXJhdGlvbi5hbm5vdGF0aW9ucywgdGhpcywgSUNvZGVG
b3JtYXR0ZXJDb25zdGFudHMuQU5OT1RBVElPTl9PTl9UWVBFLCBmYWxzZSk7CiAKIAkJaWYgKHRo
aXMuc2NyaWJlLmxpbmUgPiBsaW5lKSB7CiAJCQkvLyBhbm5vdGF0aW9ucyBpbnRyb2R1Y2VkIG5l
dyBsaW5lLCBidXQgdGhpcyBpcyBub3QgYSBsaW5lIHdyYXBwaW5nCkBAIC0xNjk1LDcgKzE2OTUs
NyBAQAogCQlpZiAoIWlzTXVsdGlwbGVMb2NhbERlY2xhcmF0aW9uKGxvY2FsRGVjbGFyYXRpb24p
KSB7CiAJCQlpZiAobG9jYWxEZWNsYXJhdGlvbi5tb2RpZmllcnMgIT0gTk9fTU9ESUZJRVJTIHx8
IGxvY2FsRGVjbGFyYXRpb24uYW5ub3RhdGlvbnMgIT0gbnVsbCkgewogCQkgICAgICAgIHRoaXMu
c2NyaWJlLnByaW50Q29tbWVudCgpOwotCQkJCXRoaXMuc2NyaWJlLnByaW50TW9kaWZpZXJzKGxv
Y2FsRGVjbGFyYXRpb24uYW5ub3RhdGlvbnMsIHRoaXMsIElDb2RlRm9ybWF0dGVyQ29uc3RhbnRz
LkFOTk9UQVRJT05fT05fTE9DQUxfVkFSSUFCTEUpOworCQkJCXRoaXMuc2NyaWJlLnByaW50TW9k
aWZpZXJzKGxvY2FsRGVjbGFyYXRpb24uYW5ub3RhdGlvbnMsIHRoaXMsIElDb2RlRm9ybWF0dGVy
Q29uc3RhbnRzLkFOTk9UQVRJT05fT05fTE9DQUxfVkFSSUFCTEUsICFoYXNOb25Bbm5vdE1vZGlm
aWVycygpKTsKIAkJCQl0aGlzLnNjcmliZS5zcGFjZSgpOwogCQkJfQogCkBAIC0yNDExLDcgKzI0
MTEsNyBAQAogCQlyZXR1cm4gMDsKIAl9CiAKLQkJcHJpdmF0ZSB2b2lkIHNraXBQYXN0VHlwZUFu
bm90YXRpb25zKCkgeyAgLy8gd2UgZ2V0IGhlcmUgaGF2aW5nIHNlZW4gQAorCXByaXZhdGUgdm9p
ZCBza2lwUGFzdFR5cGVBbm5vdGF0aW9ucygpIHsgIC8vIHdlIGdldCBoZXJlIGhhdmluZyBzZWVu
IEAKIAkJaW50IGJhbGFuY2UgPSAwOwogCQlpbnQgY3VycmVudFRva2VuU3RhcnRQb3NpdGlvbiA9
IHRoaXMubG9jYWxTY2FubmVyLmN1cnJlbnRQb3NpdGlvbjsKIAkJdHJ5IHsKQEAgLTI0NjEsNiAr
MjQ2MSw0MiBAQAogCQlyZXR1cm4gZmFsc2U7CiAJfQogCisJcHJpdmF0ZSBib29sZWFuIGhhc05v
bkFubm90TW9kaWZpZXJzKCkgeworCQl0aGlzLmxvY2FsU2Nhbm5lci5yZXNldFRvKHRoaXMuc2Ny
aWJlLnNjYW5uZXIuY3VycmVudFBvc2l0aW9uLCB0aGlzLnNjcmliZS5zY2FubmVyRW5kUG9zaXRp
b24gLSAxKTsKKwkJdHJ5IHsKKwkJCWludCB0b2tlbjsKKwkJCXdoaWxlICgodG9rZW4gPSB0aGlz
LmxvY2FsU2Nhbm5lci5nZXROZXh0VG9rZW4oKSkgIT0gVGVybWluYWxUb2tlbnMuVG9rZW5OYW1l
RU9GKSB7CisJCQkJc3dpdGNoKHRva2VuKSB7CisJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9r
ZW5OYW1lZGVmYXVsdCA6CisJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lcHVibGlj
IDoKKwkJCQkJY2FzZSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVwcm90ZWN0ZWQgOgorCQkJCQlj
YXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZXByaXZhdGUgOgorCQkJCQljYXNlIFRlcm1pbmFs
VG9rZW5zLlRva2VuTmFtZXN0YXRpYyA6CisJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5O
YW1lYWJzdHJhY3QgOgorCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZWZpbmFsIDoK
KwkJCQkJY2FzZSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVuYXRpdmUgOgorCQkJCQljYXNlIFRl
cm1pbmFsVG9rZW5zLlRva2VuTmFtZXN5bmNocm9uaXplZCA6CisJCQkJCWNhc2UgVGVybWluYWxU
b2tlbnMuVG9rZW5OYW1ldHJhbnNpZW50IDoKKwkJCQkJY2FzZSBUZXJtaW5hbFRva2Vucy5Ub2tl
bk5hbWV2b2xhdGlsZSA6CisJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lc3RyaWN0
ZnAgOgorCQkJCQkJcmV0dXJuIHRydWU7CisJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5O
YW1lQVQgOgorCQkJCQkJc2tpcFBhc3RUeXBlQW5ub3RhdGlvbnMoKTsKKwkJCQkJCWJyZWFrOwor
CQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUNPTU1FTlRfQkxPQ0sgOgorCQkJCQlj
YXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUNPTU1FTlRfSkFWQURPQyA6CisJCQkJCWNhc2Ug
VGVybWluYWxUb2tlbnMuVG9rZW5OYW1lQ09NTUVOVF9MSU5FIDoKKwkJCQkJCWJyZWFrOworCQkJ
CQlkZWZhdWx0OgorCQkJCQkJcmV0dXJuIGZhbHNlOworCQkJCX0KKwkJCX0KKwkJfSBjYXRjaChJ
bnZhbGlkSW5wdXRFeGNlcHRpb24gZSkgeworCQkJLy8gaWdub3JlCisJCX0KKwkJcmV0dXJuIGZh
bHNlOworCX0KKwkKIAlwcml2YXRlIGJvb2xlYW4gaXNOZXh0VG9rZW4oaW50IHRva2VuTmFtZSkg
ewogCQl0aGlzLmxvY2FsU2Nhbm5lci5yZXNldFRvKHRoaXMuc2NyaWJlLnNjYW5uZXIuY3VycmVu
dFBvc2l0aW9uLCB0aGlzLnNjcmliZS5zY2FubmVyRW5kUG9zaXRpb24gLSAxKTsKIAkJdHJ5IHsK
QEAgLTI2ODksNyArMjcyNSw3IEBACiAgICAgICAgICAqIFByaW50IGNvbW1lbnRzIHRvIGdldCBw
cm9wZXIgbGluZSBudW1iZXIKICAgICAgICAgICovCiAgICAgICAgIHRoaXMuc2NyaWJlLnByaW50
Q29tbWVudCgpOwotICAgICAgICB0aGlzLnNjcmliZS5wcmludE1vZGlmaWVycyhhbm5vdGF0aW9u
VHlwZU1lbWJlckRlY2xhcmF0aW9uLmFubm90YXRpb25zLCB0aGlzLCBJQ29kZUZvcm1hdHRlckNv
bnN0YW50cy5BTk5PVEFUSU9OX09OX01FVEhPRCk7CisgICAgICAgIHRoaXMuc2NyaWJlLnByaW50
TW9kaWZpZXJzKGFubm90YXRpb25UeXBlTWVtYmVyRGVjbGFyYXRpb24uYW5ub3RhdGlvbnMsIHRo
aXMsIElDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkFOTk9UQVRJT05fT05fTUVUSE9ELCBmYWxzZSk7
CiAJCXRoaXMuc2NyaWJlLnNwYWNlKCk7CiAJCS8qCiAJCSAqIFByaW50IHRoZSBtZXRob2QgcmV0
dXJuIHR5cGUKQEAgLTI3NDIsNyArMjc3OCw3IEBACiAKIAkJaWYgKGFyZ3VtZW50Lm1vZGlmaWVy
cyAhPSBOT19NT0RJRklFUlMgfHwgYXJndW1lbnQuYW5ub3RhdGlvbnMgIT0gbnVsbCkgewogCSAg
ICAgICAgdGhpcy5zY3JpYmUucHJpbnRDb21tZW50KCk7Ci0JCQl0aGlzLnNjcmliZS5wcmludE1v
ZGlmaWVycyhhcmd1bWVudC5hbm5vdGF0aW9ucywgdGhpcywgSUNvZGVGb3JtYXR0ZXJDb25zdGFu
dHMuQU5OT1RBVElPTl9PTl9QQVJBTUVURVIpOworCQkJdGhpcy5zY3JpYmUucHJpbnRNb2RpZmll
cnMoYXJndW1lbnQuYW5ub3RhdGlvbnMsIHRoaXMsIElDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkFO
Tk9UQVRJT05fT05fUEFSQU1FVEVSLCAhaGFzTm9uQW5ub3RNb2RpZmllcnMoKSk7CiAJCQl0aGlz
LnNjcmliZS5zcGFjZSgpOwogCQl9CiAKQEAgLTMzNTAsNyArMzM4Niw3IEBACiAJCQkJdGhpcy5z
Y3JpYmUucHJpbnRFbXB0eUxpbmVzKGJsYW5rTGluZXNCZWZvcmVQYWNrYWdlKTsKIAkJCX0KIAot
CQkJdGhpcy5zY3JpYmUucHJpbnRNb2RpZmllcnMoY3VycmVudFBhY2thZ2UuYW5ub3RhdGlvbnMs
IHRoaXMsIElDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkFOTk9UQVRJT05fT05fUEFDS0FHRSk7CisJ
CQl0aGlzLnNjcmliZS5wcmludE1vZGlmaWVycyhjdXJyZW50UGFja2FnZS5hbm5vdGF0aW9ucywg
dGhpcywgSUNvZGVGb3JtYXR0ZXJDb25zdGFudHMuQU5OT1RBVElPTl9PTl9QQUNLQUdFLCBmYWxz
ZSk7CiAJCQl0aGlzLnNjcmliZS5zcGFjZSgpOwogCQkJLy8gZHVtcCB0aGUgcGFja2FnZSBrZXl3
b3JkCiAJCQl0aGlzLnNjcmliZS5wcmludE5leHRUb2tlbihUZXJtaW5hbFRva2Vucy5Ub2tlbk5h
bWVwYWNrYWdlKTsKQEAgLTM1ODYsNyArMzYyMiw3IEBACiAgICAgICAgICAqLwogICAgICAgICB0
aGlzLnNjcmliZS5wcmludENvbW1lbnQoKTsKICAgICAgICAgaW50IGxpbmUgPSB0aGlzLnNjcmli
ZS5saW5lOwotCQl0aGlzLnNjcmliZS5wcmludE1vZGlmaWVycyhjb25zdHJ1Y3RvckRlY2xhcmF0
aW9uLmFubm90YXRpb25zLCB0aGlzLCBJQ29kZUZvcm1hdHRlckNvbnN0YW50cy5BTk5PVEFUSU9O
X09OX01FVEhPRCk7CisJCXRoaXMuc2NyaWJlLnByaW50TW9kaWZpZXJzKGNvbnN0cnVjdG9yRGVj
bGFyYXRpb24uYW5ub3RhdGlvbnMsIHRoaXMsIElDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkFOTk9U
QVRJT05fT05fTUVUSE9ELCBmYWxzZSk7CiAJCWlmICh0aGlzLnNjcmliZS5saW5lID4gbGluZSkg
ewogICAgICAgICAJLy8gYW5ub3RhdGlvbnMgaW50cm9kdWNlZCBuZXcgbGluZSwgYnV0IHRoaXMg
aXMgbm90IGEgbGluZSB3cmFwcGluZwogCQkJLy8gc2VlIDE1ODI2NwpAQCAtMzgwMSw3ICszODM3
LDcgQEAKICAgICAgICAgICovCiAgICAgICAgIHRoaXMuc2NyaWJlLnByaW50Q29tbWVudCgpOwog
ICAgICAgICBmaW5hbCBpbnQgbGluZSA9IHRoaXMuc2NyaWJlLmxpbmU7Ci0gICAgICAgIHRoaXMu
c2NyaWJlLnByaW50TW9kaWZpZXJzKGVudW1Db25zdGFudC5hbm5vdGF0aW9ucywgdGhpcywgSUNv
ZGVGb3JtYXR0ZXJDb25zdGFudHMuQU5OT1RBVElPTl9PTl9GSUVMRCk7CisgICAgICAgIHRoaXMu
c2NyaWJlLnByaW50TW9kaWZpZXJzKGVudW1Db25zdGFudC5hbm5vdGF0aW9ucywgdGhpcywgSUNv
ZGVGb3JtYXR0ZXJDb25zdGFudHMuQU5OT1RBVElPTl9PTl9GSUVMRCwgZmFsc2UpOwogCQl0aGlz
LnNjcmliZS5wcmludE5leHRUb2tlbihUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVJZGVudGlmaWVy
LCBmYWxzZSk7CiAJCWZvcm1hdEVudW1Db25zdGFudEFyZ3VtZW50cygKIAkJCWVudW1Db25zdGFu
dCwKQEAgLTQ1NTUsNyArNDU5MSw3IEBACiAJCWRvIHsKIAkJCXRyeSB7CiAKLQkJCQl0aGlzLnNj
cmliZS5wcmludE1vZGlmaWVycyhtZXRob2REZWNsYXJhdGlvbi5hbm5vdGF0aW9ucywgdGhpcywg
SUNvZGVGb3JtYXR0ZXJDb25zdGFudHMuQU5OT1RBVElPTl9PTl9NRVRIT0QpOworCQkJCXRoaXMu
c2NyaWJlLnByaW50TW9kaWZpZXJzKG1ldGhvZERlY2xhcmF0aW9uLmFubm90YXRpb25zLCB0aGlz
LCBJQ29kZUZvcm1hdHRlckNvbnN0YW50cy5BTk5PVEFUSU9OX09OX01FVEhPRCwgZmFsc2UpOwog
CQkJCWludCBmcmFnbWVudEluZGV4ID0gMDsKIAkJCQl0aGlzLnNjcmliZS5hbGlnbkZyYWdtZW50
KG1ldGhvZERlY2xBbGlnbm1lbnQsIGZyYWdtZW50SW5kZXgpOwogCmRpZmYgLS1naXQgZm9ybWF0
dGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9mb3JtYXR0ZXIvU2NyaWJlLmphdmEgZm9ybWF0
dGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9mb3JtYXR0ZXIvU2NyaWJlLmphdmEKaW5kZXgg
ZDZlMjRkOC4uZGE3NTQ4ZiAxMDA2NDQKLS0tIGZvcm1hdHRlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvZm9ybWF0dGVyL1NjcmliZS5qYXZhCisrKyBmb3JtYXR0ZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2Zvcm1hdHRlci9TY3JpYmUuamF2YQpAQCAtNDU0MCwxMSArNDU0MCw3IEBACiAJ
CX0KICAgICB9CiAKLQlwdWJsaWMgdm9pZCBwcmludE1vZGlmaWVycyhBbm5vdGF0aW9uW10gYW5u
b3RhdGlvbnMsIEFTVFZpc2l0b3IgdmlzaXRvcikgewotCQlwcmludE1vZGlmaWVycyhhbm5vdGF0
aW9ucywgdmlzaXRvciwgSUNvZGVGb3JtYXR0ZXJDb25zdGFudHMuQU5OT1RBVElPTl9VTlNQRUNJ
RklFRCk7Ci0JfQotCi0JcHVibGljIHZvaWQgcHJpbnRNb2RpZmllcnMoQW5ub3RhdGlvbltdIGFu
bm90YXRpb25zLCBBU1RWaXNpdG9yIHZpc2l0b3IsIGludCBhbm5vdGF0aW9uU291cmNlS2luZCkg
eworCXB1YmxpYyB2b2lkIHByaW50TW9kaWZpZXJzKEFubm90YXRpb25bXSBhbm5vdGF0aW9ucywg
QVNUVmlzaXRvciB2aXNpdG9yLCBpbnQgYW5ub3RhdGlvblNvdXJjZUtpbmQsIGJvb2xlYW4gZmly
c3RJc1R5cGVBbm5vdGF0aW9uKSB7CiAJCXRyeSB7CiAJCQlpbnQgYW5ub3RhdGlvbnNMZW5ndGgg
PSBhbm5vdGF0aW9ucyAhPSBudWxsID8gYW5ub3RhdGlvbnMubGVuZ3RoIDogMDsKIAkJCWludCBh
bm5vdGF0aW9uc0luZGV4ID0gMDsKQEAgLTQ1NTIsNyArNDU0OCw3IEBACiAJCQlpbnQgY3VycmVu
dFRva2VuU3RhcnRQb3NpdGlvbiA9IHRoaXMuc2Nhbm5lci5jdXJyZW50UG9zaXRpb247CiAJCQli
b29sZWFuIGhhc0NvbW1lbnQgPSBmYWxzZTsKIAkJCWJvb2xlYW4gaGFzTW9kaWZpZXJzID0gZmFs
c2U7Ci0JCQlib29sZWFuIGZvdW5kTm9uQW5ub3RNb2RpZmllcnMgPSBmYWxzZTsKKwkJCWJvb2xl
YW4gdHJlYXROZXh0QXNUeXBlQW5ub3RhdGlvbiA9IGZpcnN0SXNUeXBlQW5ub3RhdGlvbjsKIAkJ
CXdoaWxlICgodGhpcy5jdXJyZW50VG9rZW4gPSB0aGlzLnNjYW5uZXIuZ2V0TmV4dFRva2VuKCkp
ICE9IFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUVPRikgewogCQkJCWludCBmb3VuZFRhc2tDb3Vu
dCA9IHRoaXMuc2Nhbm5lci5mb3VuZFRhc2tDb3VudDsKIAkJCQlpbnQgdG9rZW5TdGFydFBvc2l0
aW9uID0gdGhpcy5zY2FubmVyLmdldEN1cnJlbnRUb2tlblN0YXJ0UG9zaXRpb24oKTsKQEAgLTQ1
NzEsNyArNDU2Nyw3IEBACiAJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1ldm9sYXRp
bGUgOgogCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZXN0cmljdGZwIDoKIAkJCQkJ
CWhhc01vZGlmaWVycyA9IHRydWU7Ci0JCQkJCQlmb3VuZE5vbkFubm90TW9kaWZpZXJzID0gdHJ1
ZTsKKwkJCQkJCXRyZWF0TmV4dEFzVHlwZUFubm90YXRpb24gPSB0cnVlOwogCQkJCQkJcHJpbnQo
dGhpcy5zY2FubmVyLmN1cnJlbnRQb3NpdGlvbiAtIHRoaXMuc2Nhbm5lci5zdGFydFBvc2l0aW9u
LCAhaXNGaXJzdE1vZGlmaWVyKTsKIAkJCQkJCWlzRmlyc3RNb2RpZmllciA9IGZhbHNlOwogCQkJ
CQkJY3VycmVudFRva2VuU3RhcnRQb3NpdGlvbiA9IHRoaXMuc2Nhbm5lci5jdXJyZW50UG9zaXRp
b247CkBAIC00NTk2LDMyICs0NTkyLDMyIEBACiAJCQkJCQkJc3dpdGNoIChhbm5vdGF0aW9uU291
cmNlS2luZCkgewogCQkJCQkJCQljYXNlIElDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkFOTk9UQVRJ
T05fT05fVFlQRSA6CiAJCQkJCQkJCQlpZiAodGhpcy5mb3JtYXR0ZXIucHJlZmVyZW5jZXMuaW5z
ZXJ0X25ld19saW5lX2FmdGVyX2Fubm90YXRpb25fb25fdHlwZSkgewotCQkJCQkJCQkJCXNob3Vs
ZEFkZE5ld0xpbmUgPSBmb3VuZE5vbkFubm90TW9kaWZpZXJzID8gdGhpcy5mb3JtYXR0ZXIucHJl
ZmVyZW5jZXMuaW5zZXJ0X25ld19saW5lX2FmdGVyX3R5cGVfYW5ub3RhdGlvbiA6IHRydWU7CisJ
CQkJCQkJCQkJc2hvdWxkQWRkTmV3TGluZSA9IHRyZWF0TmV4dEFzVHlwZUFubm90YXRpb24gPyB0
aGlzLmZvcm1hdHRlci5wcmVmZXJlbmNlcy5pbnNlcnRfbmV3X2xpbmVfYWZ0ZXJfdHlwZV9hbm5v
dGF0aW9uIDogdHJ1ZTsKIAkJCQkJCQkJCX0KIAkJCQkJCQkJCWJyZWFrOwogCQkJCQkJCQljYXNl
IElDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkFOTk9UQVRJT05fT05fRklFTEQgOgogCQkJCQkJCQkJ
aWYgKHRoaXMuZm9ybWF0dGVyLnByZWZlcmVuY2VzLmluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5v
dGF0aW9uX29uX2ZpZWxkKSB7Ci0JCQkJCQkJCQkJc2hvdWxkQWRkTmV3TGluZSA9IGZvdW5kTm9u
QW5ub3RNb2RpZmllcnMgPyB0aGlzLmZvcm1hdHRlci5wcmVmZXJlbmNlcy5pbnNlcnRfbmV3X2xp
bmVfYWZ0ZXJfdHlwZV9hbm5vdGF0aW9uIDogdHJ1ZTsKKwkJCQkJCQkJCQlzaG91bGRBZGROZXdM
aW5lID0gdHJlYXROZXh0QXNUeXBlQW5ub3RhdGlvbiA/IHRoaXMuZm9ybWF0dGVyLnByZWZlcmVu
Y2VzLmluc2VydF9uZXdfbGluZV9hZnRlcl90eXBlX2Fubm90YXRpb24gOiB0cnVlOwogCQkJCQkJ
CQkJfQogCQkJCQkJCQkJYnJlYWs7CiAJCQkJCQkJCWNhc2UgSUNvZGVGb3JtYXR0ZXJDb25zdGFu
dHMuQU5OT1RBVElPTl9PTl9NRVRIT0QgOgogCQkJCQkJCQkJaWYgKHRoaXMuZm9ybWF0dGVyLnBy
ZWZlcmVuY2VzLmluc2VydF9uZXdfbGluZV9hZnRlcl9hbm5vdGF0aW9uX29uX21ldGhvZCkgewot
CQkJCQkJCQkJCXNob3VsZEFkZE5ld0xpbmUgPSBmb3VuZE5vbkFubm90TW9kaWZpZXJzID8gdGhp
cy5mb3JtYXR0ZXIucHJlZmVyZW5jZXMuaW5zZXJ0X25ld19saW5lX2FmdGVyX3R5cGVfYW5ub3Rh
dGlvbiA6IHRydWU7CisJCQkJCQkJCQkJc2hvdWxkQWRkTmV3TGluZSA9IHRyZWF0TmV4dEFzVHlw
ZUFubm90YXRpb24gPyB0aGlzLmZvcm1hdHRlci5wcmVmZXJlbmNlcy5pbnNlcnRfbmV3X2xpbmVf
YWZ0ZXJfdHlwZV9hbm5vdGF0aW9uIDogdHJ1ZTsKIAkJCQkJCQkJCX0KIAkJCQkJCQkJCWJyZWFr
OwogCQkJCQkJCQljYXNlIElDb2RlRm9ybWF0dGVyQ29uc3RhbnRzLkFOTk9UQVRJT05fT05fUEFD
S0FHRSA6CiAJCQkJCQkJCQlpZiAodGhpcy5mb3JtYXR0ZXIucHJlZmVyZW5jZXMuaW5zZXJ0X25l
d19saW5lX2FmdGVyX2Fubm90YXRpb25fb25fcGFja2FnZSkgewotCQkJCQkJCQkJCXNob3VsZEFk
ZE5ld0xpbmUgPSBmb3VuZE5vbkFubm90TW9kaWZpZXJzID8gdGhpcy5mb3JtYXR0ZXIucHJlZmVy
ZW5jZXMuaW5zZXJ0X25ld19saW5lX2FmdGVyX3R5cGVfYW5ub3RhdGlvbiA6IHRydWU7CisJCQkJ
CQkJCQkJc2hvdWxkQWRkTmV3TGluZSA9IHRyZWF0TmV4dEFzVHlwZUFubm90YXRpb24gPyB0aGlz
LmZvcm1hdHRlci5wcmVmZXJlbmNlcy5pbnNlcnRfbmV3X2xpbmVfYWZ0ZXJfdHlwZV9hbm5vdGF0
aW9uIDogdHJ1ZTsKIAkJCQkJCQkJCX0KIAkJCQkJCQkJCWJyZWFrOwogCQkJCQkJCQljYXNlIElD
b2RlRm9ybWF0dGVyQ29uc3RhbnRzLkFOTk9UQVRJT05fT05fUEFSQU1FVEVSIDoKIAkJCQkJCQkJ
CWlmICh0aGlzLmZvcm1hdHRlci5wcmVmZXJlbmNlcy5pbnNlcnRfbmV3X2xpbmVfYWZ0ZXJfYW5u
b3RhdGlvbl9vbl9wYXJhbWV0ZXIpIHsKLQkJCQkJCQkJCQlzaG91bGRBZGROZXdMaW5lID0gZm91
bmROb25Bbm5vdE1vZGlmaWVycyA/IHRoaXMuZm9ybWF0dGVyLnByZWZlcmVuY2VzLmluc2VydF9u
ZXdfbGluZV9hZnRlcl90eXBlX2Fubm90YXRpb24gOiB0cnVlOworCQkJCQkJCQkJCXNob3VsZEFk
ZE5ld0xpbmUgPSB0cmVhdE5leHRBc1R5cGVBbm5vdGF0aW9uID8gdGhpcy5mb3JtYXR0ZXIucHJl
ZmVyZW5jZXMuaW5zZXJ0X25ld19saW5lX2FmdGVyX3R5cGVfYW5ub3RhdGlvbiA6IHRydWU7CiAJ
CQkJCQkJCQl9CiAJCQkJCQkJCQlicmVhazsKIAkJCQkJCQkJY2FzZSBJQ29kZUZvcm1hdHRlckNv
bnN0YW50cy5BTk5PVEFUSU9OX09OX0xPQ0FMX1ZBUklBQkxFIDoKIAkJCQkJCQkJCWlmICh0aGlz
LmZvcm1hdHRlci5wcmVmZXJlbmNlcy5pbnNlcnRfbmV3X2xpbmVfYWZ0ZXJfYW5ub3RhdGlvbl9v
bl9sb2NhbF92YXJpYWJsZSkgewotCQkJCQkJCQkJCXNob3VsZEFkZE5ld0xpbmUgPSBmb3VuZE5v
bkFubm90TW9kaWZpZXJzID8gdGhpcy5mb3JtYXR0ZXIucHJlZmVyZW5jZXMuaW5zZXJ0X25ld19s
aW5lX2FmdGVyX3R5cGVfYW5ub3RhdGlvbiA6IHRydWU7CisJCQkJCQkJCQkJc2hvdWxkQWRkTmV3
TGluZSA9IHRyZWF0TmV4dEFzVHlwZUFubm90YXRpb24gPyB0aGlzLmZvcm1hdHRlci5wcmVmZXJl
bmNlcy5pbnNlcnRfbmV3X2xpbmVfYWZ0ZXJfdHlwZV9hbm5vdGF0aW9uIDogdHJ1ZTsKIAkJCQkJ
CQkJCX0KIAkJCQkJCQkJCWJyZWFrOwogCQkJCQkJCQlkZWZhdWx0Og==
</data>

          </attachment>
      

    </bug>

</bugzilla>