<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>442868</bug_id>
          
          <creation_ts>2014-08-29 06:09:00 -0400</creation_ts>
          <short_desc>[content assist] No type completion on 2nd+ parameter in anonymous classes</short_desc>
          <delta_ts>2014-10-29 01:32:54 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.5 M3</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Marcel Bruch">marcel.bruch</reporter>
          <assigned_to name="Jay Arthanareeswaran">jarthana</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>frederic_fusier</cc>
    
    <cc>jarthana</cc>
    
    <cc>noopur_gupta</cc>
    
    <cc>shankhba</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="63457"
          type_id="1"
          status="+"
          setter="srikanth_sankaran"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2445379</commentid>
    <comment_count>0</comment_count>
    <who name="Marcel Bruch">marcel.bruch</who>
    <bug_when>2014-08-29 06:09:18 -0400</bug_when>
    <thetext>While running some smoke tests I found that triggering JDT content assist on the second argument of m() marked with a &apos;$&apos;, JDT does not propose any types. Whereas when I trigger content assist on the first type I get all types as expected.




package __test;

import java.util.List;

public class Weird {
	private static void weird() {
		new Other() {

			@Override
			public void m(String s, L$ist l, Object o) {
			}
		};
	}
}

abstract class Other {
	public abstract void m(String s, List l, Object o);
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2445949</commentid>
    <comment_count>1</comment_count>
    <who name="Noopur Gupta">noopur_gupta</who>
    <bug_when>2014-09-01 04:23:48 -0400</bug_when>
    <thetext>Reproducible in Eclipse 4.5 I20140812-0800.
Also note that if there is a compile error in the example code by deleting any opening or closing brace, we get the proposals correctly.
Moving to JDT Core for comments.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2450169</commentid>
    <comment_count>2</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-09-11 03:18:56 -0400</bug_when>
    <thetext>I see that the presence of the first parameters gets added as a RecoveredLocalVariable and this results in a new block being added and eventually the methods body is assumed to have begun, but the assist invocation site isn&apos;t quite inside the method body.

I don&apos;t know how it works outside the anonymous type, for e.g. the same use case works alright in the Other#m() declaration. Needs to investigated further.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2450198</commentid>
    <comment_count>3</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-09-11 04:05:54 -0400</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #2)
&gt; I don&apos;t know how it works outside the anonymous type, for e.g. the same use
&gt; case works alright in the Other#m() declaration. Needs to investigated
&gt; further.

This takes a different path as the method involved is a top level member and doesn&apos;t involve parsing block statements.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2450225</commentid>
    <comment_count>4</comment_count>
      <attachid>246949</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-09-11 05:16:41 -0400</bug_when>
    <thetext>Created attachment 246949
Draft patch under test

New tests to be added.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2450421</commentid>
    <comment_count>5</comment_count>
      <attachid>246963</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-09-11 11:06:21 -0400</bug_when>
    <thetext>Created attachment 246963
Proposed fix + test

Srikanth, can you review this patch please? Thanks!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2452102</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-16 00:46:51 -0400</bug_when>
    <thetext>I think this does fix the problem, but let us see if we can do better in
recovering the parse tree with more fidelity.

When completion is happening in Other.m&apos;s argument type, the parse tree
looks like:


import java.util.List;
abstract class Other {
  Other() {
  }
  public abstract void m(String s, &lt;CompleteOnType:Obj&gt; l, Object o);
}
public class Weird {
  public Weird() {
  }
  private static void weird() {
  }
}

When completion is happening in inside the anonymous type&apos;s m&apos;s argument type,
the parse tree looks like:

import java.util.List;
abstract class Other {
  Other() {
  }
  public abstract void m(String s, Object l, Object o);
}
public class Weird {
  public Weird() {
  }
  private static void weird() {
    new Other() {
      &lt;CompleteOnType:Obj&gt;;
      Object o;
      {
      }
      public @Override void m(String s) {
      }
    };
  }
}

I suggest spending a bounded period of time on this - this can also be
a good exercise in understanding parse tree recovery during completion.

However, we know many things are broken with anonymous classes, if this
exercise is taking longer than a couple of days, we can go with the
present patch itself.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2461384</commentid>
    <comment_count>7</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-10-08 03:07:54 -0400</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #6)
&gt; I suggest spending a bounded period of time on this - this can also be
&gt; a good exercise in understanding parse tree recovery during completion.

It looks like a design decision to add parameters as local variables and put them in a block. But in case of parameter, there was no need to make the local variable to be the current RecoveredElement or introduce braces and blocks.

The fix is released here:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=19ed6515960d03123d69a9f3f7b64066c1bf212b</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2461388</commentid>
    <comment_count>8</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-10-08 03:09:45 -0400</bug_when>
    <thetext>*** Bug 76572 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2461403</commentid>
    <comment_count>9</comment_count>
    <who name="Marcel Bruch">marcel.bruch</who>
    <bug_when>2014-10-08 03:40:06 -0400</bug_when>
    <thetext>Thank you for the fix.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2473192</commentid>
    <comment_count>10</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-10-29 01:32:54 -0400</bug_when>
    <thetext>Verified for 4.5 M3 using  I20141027-2000 build.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>246949</attachid>
            <date>2014-09-11 05:16:00 -0400</date>
            <delta_ts>2014-09-11 11:06:21 -0400</delta_ts>
            <desc>Draft patch under test</desc>
            <filename>Fixed-Bug-442868.patch</filename>
            <type>text/plain</type>
            <size>1960</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMAojUCBvcmcuZWNsaXBzZS5qZHQuY29yZQpk
aWZmIC0tZ2l0IGNvZGVhc3Npc3Qvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvZGVhc3Npc3Qv
aW1wbC9Bc3Npc3RQYXJzZXIuamF2YSBjb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb2RlYXNzaXN0L2ltcGwvQXNzaXN0UGFyc2VyLmphdmEKaW5kZXggYjdiNmU1Ni4uMDFiOGYw
NSAxMDA2NDQKLS0tIGNvZGVhc3Npc3Qvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvZGVhc3Np
c3QvaW1wbC9Bc3Npc3RQYXJzZXIuamF2YQorKysgY29kZWFzc2lzdC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29kZWFzc2lzdC9pbXBsL0Fzc2lzdFBhcnNlci5qYXZhCkBAIC0yNTgsNSArMjU4
LDkgQEAKIAkJCQl9CiAJCQl9IGVsc2UgewotCQkJCWVsZW1lbnQgPSBlbGVtZW50LmFkZChsb2Nh
bCwgMCk7CisJCQkJaWYgKCFsb2NhbC5pc0FyZ3VtZW50KCkpIHsKKwkJCQkJZWxlbWVudCA9IGVs
ZW1lbnQuYWRkKGxvY2FsLCAwKTsKKwkJCQl9IGVsc2UgeworCQkJCQllbGVtZW50LmFkZChsb2Nh
bCwgMCk7CisJCQkJfQogCQkJCXRoaXMubGFzdENoZWNrUG9pbnQgPSBsb2NhbC5kZWNsYXJhdGlv
blNvdXJjZUVuZCArIDE7CiAJCQl9CmRpZmYgLS1naXQgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9SZWNvdmVyZWRNZXRob2QuamF2YSBjb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1JlY292ZXJlZE1ldGhvZC5q
YXZhCmluZGV4IDAzMTc5OWMuLmViY2VkOTIgMTAwNjQ0Ci0tLSBjb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1JlY292ZXJlZE1ldGhvZC5qYXZhCisrKyBj
b21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcGFyc2VyL1JlY292ZXJl
ZE1ldGhvZC5qYXZhCkBAIC03NSw0ICs3NSw3IEBACiAgKi8KIHB1YmxpYyBSZWNvdmVyZWRFbGVt
ZW50IGFkZChCbG9jayBuZXN0ZWRCbG9ja0RlY2xhcmF0aW9uLCBpbnQgYnJhY2tldEJhbGFuY2VW
YWx1ZSkgeworCXJldHVybiB0aGlzLmFkZChuZXN0ZWRCbG9ja0RlY2xhcmF0aW9uLCBicmFja2V0
QmFsYW5jZVZhbHVlLCBmYWxzZSk7Cit9CitwdWJsaWMgUmVjb3ZlcmVkRWxlbWVudCBhZGQoQmxv
Y2sgbmVzdGVkQmxvY2tEZWNsYXJhdGlvbiwgaW50IGJyYWNrZXRCYWxhbmNlVmFsdWUsIGJvb2xl
YW4gaXNBcmd1bWVudCkgewogCS8qIGRlZmF1bHQgYmVoYXZpb3IgaXMgdG8gZGVsZWdhdGUgcmVj
b3JkaW5nIHRvIHBhcmVudCBpZiBhbnksCiAJZG8gbm90IGNvbnNpZGVyIGVsZW1lbnRzIHBhc3Nl
ZCB0aGUga25vd24gZW5kIChpZiBzZXQpCkBAIC05MCw1ICs5Myw1IEBACiAJfQogCS8qIGNvbnNp
ZGVyIHRoYXQgaWYgdGhlIG9wZW5pbmcgYnJhY2Ugd2FzIG5vdCBmb3VuZCwgaXQgaXMgdGhlcmUg
Ki8KLQlpZiAoIXRoaXMuZm91bmRPcGVuaW5nQnJhY2UpeworCWlmICghdGhpcy5mb3VuZE9wZW5p
bmdCcmFjZSAmJiAhaXNBcmd1bWVudCl7CiAJCXRoaXMuZm91bmRPcGVuaW5nQnJhY2UgPSB0cnVl
OwogCQl0aGlzLmJyYWNrZXRCYWxhbmNlKys7CkBAIC0xNzUsNSArMTc4LDUgQEAKIAkJQmxvY2sg
YmxvY2sgPSBuZXcgQmxvY2soMCk7CiAJCWJsb2NrLnNvdXJjZVN0YXJ0ID0gdGhpcy5tZXRob2RE
ZWNsYXJhdGlvbi5ib2R5U3RhcnQ7Ci0JCVJlY292ZXJlZEVsZW1lbnQgY3VycmVudEJsb2NrID0g
dGhpcy5hZGQoYmxvY2ssIDEpOworCQlSZWNvdmVyZWRFbGVtZW50IGN1cnJlbnRCbG9jayA9IHRo
aXMuYWRkKGJsb2NrLCAxLCBsb2NhbERlY2xhcmF0aW9uLmlzQXJndW1lbnQoKSk7CiAJCWlmICh0
aGlzLmJyYWNrZXRCYWxhbmNlID4gMCl7CiAJCQlmb3IgKGludCBpID0gMDsgaSA8IHRoaXMuYnJh
Y2tldEJhbGFuY2UgLSAxOyBpKyspew==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>246963</attachid>
            <date>2014-09-11 11:06:00 -0400</date>
            <delta_ts>2014-09-11 11:06:21 -0400</delta_ts>
            <desc>Proposed fix + test</desc>
            <filename>Fixed-Bug-442868.patch</filename>
            <type>text/plain</type>
            <size>4475</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMAojUCBvcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5tb2RlbApkaWZmIC0tZ2l0IHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2Rl
bC9Db21wbGV0aW9uVGVzdHMxOC5qYXZhIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9t
b2RlbC9Db21wbGV0aW9uVGVzdHMxOC5qYXZhCmluZGV4IDUwODhjMGIuLjMxYzQzZDcgMTAwNjQ0
Ci0tLSBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvQ29tcGxldGlvblRlc3Rz
MTguamF2YQorKysgc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0NvbXBsZXRp
b25UZXN0czE4LmphdmEKQEAgLTE1OTMsNSArMTU5Myw1IEBACiAJYXNzZXJ0UmVzdWx0cygibmV3
W0tFWVdPUkRde25ldywgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbmV3LCBudWxsLCBbMTgzLCAx
ODVdLCAiICsgCiAJCQkJCQkJCQkJCShSZWxldmFuY2VDb25zdGFudHMuUl9ERUZBVUxUICsgUmVs
ZXZhbmNlQ29uc3RhbnRzLlJfUkVTT0xWRUQgKyBSZWxldmFuY2VDb25zdGFudHMuUl9JTlRFUkVT
VElORyArIFJlbGV2YW5jZUNvbnN0YW50cy5SX05PTl9SRVNUUklDVEVECi0JCQkJCQkJCQkJCSsg
UmVsZXZhbmNlQ29uc3RhbnRzLlJfQ0FTRSArIFJlbGV2YW5jZUNvbnN0YW50cy5SX0NPTlNUUlVD
VE9SKSArICJ9IiwgcmVxdWVzdG9yLmdldFJlc3VsdHMoKSk7CisJCQkJCQkJCQkJCSsgUmVsZXZh
bmNlQ29uc3RhbnRzLlJfQ0FTRSArIFJlbGV2YW5jZUNvbnN0YW50cy5SX1VOUVVBTElGSUVEKSAr
ICJ9IiwgcmVxdWVzdG9yLmdldFJlc3VsdHMoKSk7CiB9CiAvL2h0dHBzOi8vYnVncy5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MzMxNzgKZGlmZiAtLWdpdCBzcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvQ29tcGxldGlvblRlc3RzMi5qYXZhIHNyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9Db21wbGV0aW9uVGVzdHMyLmphdmEKaW5kZXggNjY4
OGNjYS4uMjBmMzUwZiAxMDA2NDQKLS0tIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9t
b2RlbC9Db21wbGV0aW9uVGVzdHMyLmphdmEKKysrIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90
ZXN0cy9tb2RlbC9Db21wbGV0aW9uVGVzdHMyLmphdmEKQEAgLTY0MTcsMyArNjQxNywzMSBAQAog
CX0KIH0KKy8vaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQ0
Mjg2OAorcHVibGljIHZvaWQgdGVzdDQ0Mjg2OCgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24g
eworCXRoaXMud29ya2luZ0NvcGllcyA9IG5ldyBJQ29tcGlsYXRpb25Vbml0WzFdOworCXRoaXMu
d29ya2luZ0NvcGllc1swXSA9IGdldFdvcmtpbmdDb3B5KAorCQkJIi9Db21wbGV0aW9uL3NyYy9Y
LmphdmEiLAorCQkJImltcG9ydCBqYXZhLnV0aWwuTGlzdDtcbiIgKworCQkJImFic3RyYWN0IGNs
YXNzIE90aGVyIHtcbiIgKworCQkJIglwdWJsaWMgYWJzdHJhY3Qgdm9pZCBtKFN0cmluZyBzLCBP
YmplY3QgbCwgT2JqZWN0IG8pO1xuIiArCisJCQkifVxuIiArCisJCQkicHVibGljIGNsYXNzIFdl
aXJkIHtcbiIgKworCQkJIglwcml2YXRlIHN0YXRpYyB2b2lkIHdlaXJkKCkge1xuIiArCisJCQki
CQluZXcgT3RoZXIoKSB7XG4iICsKKwkJCSIJCQlAT3ZlcnJpZGVcbiIgKworCQkJIgkJCXB1Ymxp
YyB2b2lkIG0oU3RyaW5nIHMsIE9iaiBsLCBPYmplY3Qgbykge1xuIiArCisJCQkiCQkJfVxuIiAr
CisJCQkiCQl9O1xuIiArCisJCQkiCX1cbiIgKworCQkJIn1cbiIpOworCUNvbXBsZXRpb25UZXN0
c1JlcXVlc3RvcjIgcmVxdWVzdG9yID0gbmV3IENvbXBsZXRpb25UZXN0c1JlcXVlc3RvcjIodHJ1
ZSwgdHJ1ZSwgdHJ1ZSwgZmFsc2UpOworCXJlcXVlc3Rvci5hbGxvd0FsbFJlcXVpcmVkUHJvcG9z
YWxzKCk7CisJU3RyaW5nIHN0ciA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRTb3VyY2UoKTsK
KwlTdHJpbmcgY29tcGxldGVCZWhpbmQgPSAiT2JqIjsKKwlpbnQgY3Vyc29yTG9jYXRpb24gPSBz
dHIubGFzdEluZGV4T2YoY29tcGxldGVCZWhpbmQpICsgY29tcGxldGVCZWhpbmQubGVuZ3RoKCk7
CisJdGhpcy53b3JraW5nQ29waWVzWzBdLmNvZGVDb21wbGV0ZShjdXJzb3JMb2NhdGlvbiwgcmVx
dWVzdG9yLCB0aGlzLndjT3duZXIpOworCWFzc2VydFJlc3VsdHMoIk9iamVjdFtUWVBFX1JFRl17
T2JqZWN0LCBqYXZhLmxhbmcsIExqYXZhLmxhbmcuT2JqZWN0OywgbnVsbCwgbnVsbCwgbnVsbCwg
bnVsbCwgWzIxOCwgMjI0XSwgIiArCisJCQkoUmVsZXZhbmNlQ29uc3RhbnRzLlJfREVGQVVMVCAr
IFJlbGV2YW5jZUNvbnN0YW50cy5SX1JFU09MVkVEICsgUmVsZXZhbmNlQ29uc3RhbnRzLlJfSU5U
RVJFU1RJTkcgKyBSZWxldmFuY2VDb25zdGFudHMuUl9OT05fUkVTVFJJQ1RFRAorCQkJKyBSZWxl
dmFuY2VDb25zdGFudHMuUl9DQVNFICsgUmVsZXZhbmNlQ29uc3RhbnRzLlJfVU5RVUFMSUZJRUQp
ICsgIn0iLCByZXF1ZXN0b3IuZ2V0UmVzdWx0cygpKTsKK30KIH0KI1Agb3JnLmVjbGlwc2UuamR0
LmNvcmUKZGlmZiAtLWdpdCBjb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb2Rl
YXNzaXN0L2ltcGwvQXNzaXN0UGFyc2VyLmphdmEgY29kZWFzc2lzdC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29kZWFzc2lzdC9pbXBsL0Fzc2lzdFBhcnNlci5qYXZhCmluZGV4IGI3YjZlNTYu
LjAxYjhmMDUgMTAwNjQ0Ci0tLSBjb2RlYXNzaXN0L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b2RlYXNzaXN0L2ltcGwvQXNzaXN0UGFyc2VyLmphdmEKKysrIGNvZGVhc3Npc3Qvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvZGVhc3Npc3QvaW1wbC9Bc3Npc3RQYXJzZXIuamF2YQpAQCAtMjU4
LDUgKzI1OCw5IEBACiAJCQkJfQogCQkJfSBlbHNlIHsKLQkJCQllbGVtZW50ID0gZWxlbWVudC5h
ZGQobG9jYWwsIDApOworCQkJCWlmICghbG9jYWwuaXNBcmd1bWVudCgpKSB7CisJCQkJCWVsZW1l
bnQgPSBlbGVtZW50LmFkZChsb2NhbCwgMCk7CisJCQkJfSBlbHNlIHsKKwkJCQkJZWxlbWVudC5h
ZGQobG9jYWwsIDApOworCQkJCX0KIAkJCQl0aGlzLmxhc3RDaGVja1BvaW50ID0gbG9jYWwuZGVj
bGFyYXRpb25Tb3VyY2VFbmQgKyAxOwogCQkJfQpkaWZmIC0tZ2l0IGNvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wYXJzZXIvUmVjb3ZlcmVkTWV0aG9kLmphdmEgY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9SZWNvdmVyZWRN
ZXRob2QuamF2YQppbmRleCAwMzE3OTljLi5lYmNlZDkyIDEwMDY0NAotLS0gY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9SZWNvdmVyZWRNZXRob2QuamF2
YQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3BhcnNlci9S
ZWNvdmVyZWRNZXRob2QuamF2YQpAQCAtNzUsNCArNzUsNyBAQAogICovCiBwdWJsaWMgUmVjb3Zl
cmVkRWxlbWVudCBhZGQoQmxvY2sgbmVzdGVkQmxvY2tEZWNsYXJhdGlvbiwgaW50IGJyYWNrZXRC
YWxhbmNlVmFsdWUpIHsKKwlyZXR1cm4gdGhpcy5hZGQobmVzdGVkQmxvY2tEZWNsYXJhdGlvbiwg
YnJhY2tldEJhbGFuY2VWYWx1ZSwgZmFsc2UpOworfQorcHVibGljIFJlY292ZXJlZEVsZW1lbnQg
YWRkKEJsb2NrIG5lc3RlZEJsb2NrRGVjbGFyYXRpb24sIGludCBicmFja2V0QmFsYW5jZVZhbHVl
LCBib29sZWFuIGlzQXJndW1lbnQpIHsKIAkvKiBkZWZhdWx0IGJlaGF2aW9yIGlzIHRvIGRlbGVn
YXRlIHJlY29yZGluZyB0byBwYXJlbnQgaWYgYW55LAogCWRvIG5vdCBjb25zaWRlciBlbGVtZW50
cyBwYXNzZWQgdGhlIGtub3duIGVuZCAoaWYgc2V0KQpAQCAtOTAsNSArOTMsNSBAQAogCX0KIAkv
KiBjb25zaWRlciB0aGF0IGlmIHRoZSBvcGVuaW5nIGJyYWNlIHdhcyBub3QgZm91bmQsIGl0IGlz
IHRoZXJlICovCi0JaWYgKCF0aGlzLmZvdW5kT3BlbmluZ0JyYWNlKXsKKwlpZiAoIXRoaXMuZm91
bmRPcGVuaW5nQnJhY2UgJiYgIWlzQXJndW1lbnQpewogCQl0aGlzLmZvdW5kT3BlbmluZ0JyYWNl
ID0gdHJ1ZTsKIAkJdGhpcy5icmFja2V0QmFsYW5jZSsrOwpAQCAtMTc1LDUgKzE3OCw1IEBACiAJ
CUJsb2NrIGJsb2NrID0gbmV3IEJsb2NrKDApOwogCQlibG9jay5zb3VyY2VTdGFydCA9IHRoaXMu
bWV0aG9kRGVjbGFyYXRpb24uYm9keVN0YXJ0OwotCQlSZWNvdmVyZWRFbGVtZW50IGN1cnJlbnRC
bG9jayA9IHRoaXMuYWRkKGJsb2NrLCAxKTsKKwkJUmVjb3ZlcmVkRWxlbWVudCBjdXJyZW50Qmxv
Y2sgPSB0aGlzLmFkZChibG9jaywgMSwgbG9jYWxEZWNsYXJhdGlvbi5pc0FyZ3VtZW50KCkpOwog
CQlpZiAodGhpcy5icmFja2V0QmFsYW5jZSA+IDApewogCQkJZm9yIChpbnQgaSA9IDA7IGkgPCB0
aGlzLmJyYWNrZXRCYWxhbmNlIC0gMTsgaSsrKXs=
</data>

          </attachment>
      

    </bug>

</bugzilla>