<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>405225</bug_id>
          
          <creation_ts>2013-04-08 21:35:00 -0400</creation_ts>
          <short_desc>BatchCompiler throws NPE in Java 7</short_desc>
          <delta_ts>2014-07-13 15:41:12 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>APT</component>
          <version>4.2.1</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          <see_also>https://bugs.eclipse.org/bugs/show_bug.cgi?id=439494</see_also>
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>critical</bug_severity>
          <target_milestone>4.3 M7</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Igal .">igal</reporter>
          <assigned_to name="Jay Arthanareeswaran">jarthana</assigned_to>
          <cc>igal</cc>
    
    <cc>jarthana</cc>
    
    <cc>Olivier_Thomann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2241225</commentid>
    <comment_count>0</comment_count>
    <who name="Igal .">igal</who>
    <bug_when>2013-04-08 21:35:01 -0400</bug_when>
    <thetext>when compiling a project via the BatchCompiler on Java 7 I get an NPE thrown from org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager.concatFiles(EclipseFileManager.java:202)

the problem seem to be at line 573:

    return this.locations.get(location.getName());

which works fine in Java 6, but returns null for Java 7.  location.getName() is &quot;PLATFORM_CLASS_PATH&quot; at that point.

building the same project with Java 6 works fine.

see more details at:
http://stackoverflow.com/questions/15819926/eclipse-jdt-compiler-ecj-throws-npe-in-java-1-7

stacktrace:
java.lang.NullPointerException
    at org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager.concatFiles(EclipseFileManager.java:202)
    at org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager.handleOption(EclipseFileManager.java:669)
    at org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl.(BatchProcessingEnvImpl.java:88)
    at org.eclipse.jdt.internal.compiler.apt.dispatch.BatchAnnotationProcessorManager.configure(BatchAnnotationProcessorManager.java:69)
    at org.eclipse.jdt.internal.compiler.batch.Main.initializeAnnotationProcessorManager(Main.java:3632)
    at org.eclipse.jdt.internal.compiler.batch.Main.performCompilation(Main.java:3737)
    at org.eclipse.jdt.internal.compiler.batch.Main.compile(Main.java:1679)
    at org.eclipse.jdt.internal.compiler.batch.Main.compile(Main.java:1372)
    at org.eclipse.jdt.core.compiler.batch.BatchCompiler.compile(BatchCompiler.java:80)
    at org.eclipse.jdt.core.compiler.batch.BatchCompiler.compile(BatchCompiler.java:52)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:601)
...
    at java.lang.Thread.run(Thread.java:722)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2241227</commentid>
    <comment_count>1</comment_count>
    <who name="Igal .">igal</who>
    <bug_when>2013-04-08 22:10:53 -0400</bug_when>
    <thetext>I&apos;m running this on Windows 7 64bit with Java 7u17 64bit.

the only keys I have in this.locations (in EclipseFileManager) for Java 7 are:

    ANNOTATION_PROCESSOR_PATH
    CLASS_PATH

when I run the same code in Java 6 I have 3 keys there:

    ANNOTATION_PROCESSOR_PATH
    CLASS_PATH
    PLATFORM_CLASS_PATH</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2241240</commentid>
    <comment_count>2</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-04-09 01:30:12 -0400</bug_when>
    <thetext>For the record, from the stack overflow thread, here is the command used:

-g -1.6 -extdirs &quot;F:/Workspace/git/igal-getrailo/railo-java/libs;C:\Apps\railo-builder\webapps\railo-builder\WEB-INF\railo\lib\compile&quot; -sourcepath F:/Workspace/git/igal-getrailo/railo-java/railo-loader/src[-d none] -d F:/Workspace/railo-build/railo-4.0.5.001-patch-d/__railo-core-bin F:/Workspace/railo-build/railo-4.0.5.001-patch-d/__railo-core-src 

There is something about the path - there are possibly some non ASCII characters. To be more precise, some characters that can&apos;t be represented by ISO-8859-1 at ?? in the following path:

C:\Apps\railo-builder\webapps\ra??ilo-builder\WEB-INF\railo\lib\compile

I am not sure if this is what is causing it, but it&apos;s better to check that out.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2241242</commentid>
    <comment_count>3</comment_count>
    <who name="Igal .">igal</who>
    <bug_when>2013-04-09 01:44:29 -0400</bug_when>
    <thetext>(In reply to comment #2)

thank you for looking into this.  the ?? is an encoding issue on StackOverflow or email encoding.

I can replicate the problem with the main method below which produces the following commandLine:

-g -1.6 -extdirs F:\Workspace\git\igal-getrailo\railo-java\libs;C:\Apps\railo-builder\webapps\railo-builder\WEB-INF\railo\lib\compile -sourcepath F:\Workspace\git\igal-getrailo\railo-java\railo-loader\src[-d none] -d F:\Workspace\railo-build\testjre7\__railo-core-bin F:\Workspace\railo-build\testjre7\__railo-core-src


public static void main(String[] args) {

		PrintWriter out = new PrintWriter( System.out, true );
		PrintWriter err = new PrintWriter( System.err, true );
		
		String srcDir = &quot;F:/Workspace/railo-build/testjre7/__railo-core-src&quot;;
		String dstDir = &quot;F:/Workspace/railo-build/testjre7/__railo-core-bin&quot;;
		
		String extDir = &quot;F:/Workspace/git/igal-getrailo/railo-java/libs;C:/Apps/railo-builder/webapps/railo-builder/WEB-INF/railo/lib/compile&quot;;
		
		String cmdLine = &quot;-g -1.6 -extdirs &quot; + extDir + &quot; -sourcepath F:/Workspace/git/igal-getrailo/railo-java/railo-loader/src[-d none]&quot;;
	
		cmdLine += &quot; -d &quot; + dstDir + &quot; &quot; + srcDir;
		
		cmdLine = cmdLine.replace( &apos;/&apos;, &apos;\\&apos; );

		System.out.println( cmdLine );
		
		boolean result = BatchCompiler.compile( cmdLine, out, err, null );
		
		System.out.println( &quot;\r\ndone.\tresult: &quot; + result );
	}


the stacktrace of the NPE thrown by the method above is:

java.lang.NullPointerException
	at org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager.concatFiles(EclipseFileManager.java:202)
	at org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager.handleOption(EclipseFileManager.java:669)
	at org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl.&lt;init&gt;(BatchProcessingEnvImpl.java:88)
	at org.eclipse.jdt.internal.compiler.apt.dispatch.BatchAnnotationProcessorManager.configure(BatchAnnotationProcessorManager.java:69)
	at org.eclipse.jdt.internal.compiler.batch.Main.initializeAnnotationProcessorManager(Main.java:3758)
	at org.eclipse.jdt.internal.compiler.batch.Main.performCompilation(Main.java:3876)
	at org.eclipse.jdt.internal.compiler.batch.Main.compile(Main.java:1684)
	at org.eclipse.jdt.internal.compiler.batch.Main.compile(Main.java:1377)
	at org.eclipse.jdt.core.compiler.batch.BatchCompiler.compile(BatchCompiler.java:80)
	at org.eclipse.jdt.core.compiler.batch.BatchCompiler.compile(BatchCompiler.java:52)
	at Test.main(Test.java:31)





&gt; For the record, from the stack overflow thread, here is the command used:
&gt; 
&gt; -g -1.6 -extdirs
&gt; &quot;F:/Workspace/git/igal-getrailo/railo-java/libs;C:\Apps\railo-
&gt; builder\webapps\railo-builder\WEB-INF\railo\lib\compile&quot; -sourcepath
&gt; F:/Workspace/git/igal-getrailo/railo-java/railo-loader/src[-d none] -d
&gt; F:/Workspace/railo-build/railo-4.0.5.001-patch-d/__railo-core-bin
&gt; F:/Workspace/railo-build/railo-4.0.5.001-patch-d/__railo-core-src 
&gt; 
&gt; There is something about the path - there are possibly some non ASCII
&gt; characters. To be more precise, some characters that can&apos;t be represented by
&gt; ISO-8859-1 at ?? in the following path:
&gt; 
&gt; C:\Apps\railo-builder\webapps\ra??ilo-builder\WEB-INF\railo\lib\compile
&gt; 
&gt; I am not sure if this is what is causing it, but it&apos;s better to check that
&gt; out.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2241244</commentid>
    <comment_count>4</comment_count>
    <who name="Igal .">igal</who>
    <bug_when>2013-04-09 01:50:08 -0400</bug_when>
    <thetext>please note that this might be a Windows-specific issue.

I have two colleagues who tried this code:  one of them tried it on Windows and experienced the NPE like I did.  the other tested it on Mac and manage to compile the code with Java 7.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2241258</commentid>
    <comment_count>5</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-04-09 02:24:10 -0400</bug_when>
    <thetext>Reproduced in master. Will look into this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2241264</commentid>
    <comment_count>6</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-04-09 02:37:24 -0400</bug_when>
    <thetext>Looks like this code in EclipseFileManager#getDefaultBootclasspath is the problem:

	if (javaversion != null &amp;&amp; !javaversion.startsWith(&quot;1.6&quot;)) { 

This should be a &gt;= or an equivalent test.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2241341</commentid>
    <comment_count>7</comment_count>
      <attachid>229489</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-04-09 05:48:09 -0400</bug_when>
    <thetext>Created attachment 229489
Proposed fix

Fix expands the java version check to 1.7 and above. I have made a similar change to org.eclipse.jdt.internal.compiler.tool.EclipseFileManager, whose code is mostly duplicate of org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager.

I think we should use this opportunity to make the BatchCompilerTest to be run at compliance levels &gt; 1.5. It&apos;s currently being only run at this level. The patch includes the change for that as well. The tests pass at all levels.

Olivier, do you know why the tests were run only at 1.5 level?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2241838</commentid>
    <comment_count>8</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-04-10 02:51:00 -0400</bug_when>
    <thetext>Released the fix via commit:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=933d7ac89005a6db0ba2e9aa90dfe242d592e5e5</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2242043</commentid>
    <comment_count>9</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2013-04-10 10:59:53 -0400</bug_when>
    <thetext>(In reply to comment #7)
&gt; Olivier, do you know why the tests were run only at 1.5 level?
Probable for historical reasons. Tests are written at time where 1.7 or 1.8 were not in the picture. So this kind of changes might be required.
Good catch!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2242066</commentid>
    <comment_count>10</comment_count>
    <who name="Igal .">igal</who>
    <bug_when>2013-04-10 11:27:18 -0400</bug_when>
    <thetext>thanks for the fast and efficient resolution on this issue.

is there a scheduled release date for version 4.3?  or an estimated release date?  is there an announce mailing list that I can subscribe to and be notified?

thanks again,


Igal</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2243454</commentid>
    <comment_count>11</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-04-15 01:33:00 -0400</bug_when>
    <thetext>(In reply to comment #10)
&gt; is there a scheduled release date for version 4.3?  or an estimated release
&gt; date?  is there an announce mailing list that I can subscribe to and be
&gt; notified?

4.3 is slated to be out by June end. Or you can grab one of the developer build from here:

http://download.eclipse.org/eclipse/downloads

And you can find more on the timelines here:

http://wiki.eclipse.org/Kepler/Simultaneous_Release_Plan</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2277438</commentid>
    <comment_count>12</comment_count>
    <who name="Igal .">igal</who>
    <bug_when>2013-06-26 11:54:27 -0400</bug_when>
    <thetext>is the ECJ 4.3 jar available for download anywhere?

I downloaded the new Eclipse 4.3 but the jdt core jar
org.eclipse.jdt.core_3.9.0.v20130604-1421.jar shows version 3.9.0

is that the correct file?  does it contain this patch?  I expected the version to show 4.3

thanks,


Igal</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2277440</commentid>
    <comment_count>13</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-06-26 12:00:20 -0400</bug_when>
    <thetext>(In reply to comment #12)
&gt; is the ECJ 4.3 jar available for download anywhere?
&gt; 
&gt; I downloaded the new Eclipse 4.3 but the jdt core jar
&gt; org.eclipse.jdt.core_3.9.0.v20130604-1421.jar shows version 3.9.0
&gt; 
&gt; is that the correct file?  does it contain this patch?  I expected the
&gt; version to show 4.3

What you are having is the right one. The version you are talking about is the plug-in version, which can be different from the SDK version.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2319264</commentid>
    <comment_count>14</comment_count>
    <who name="Igal .">igal</who>
    <bug_when>2013-10-17 00:52:31 -0400</bug_when>
    <thetext>hi,

I downloaded ECJ 4.3.1 from 
http://www.eclipse.org/downloads/download.php?file=/eclipse/downloads/drops4/R-4.3.1-201309111000/ecj-4.3.1.jar&amp;mirror_id=272

and I still get the NPE.  I thought that it should be fixed for Eclipse 4.3?  Thank you.

java.lang.NullPointerException
	at org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager.concatFiles(EclipseFileManager.java:202)
	at org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager.handleOption(EclipseFileManager.java:669)
	at org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl.(BatchProcessingEnvImpl.java:88)
	at org.eclipse.jdt.internal.compiler.apt.dispatch.BatchAnnotationProcessorManager.configure(BatchAnnotationProcessorManager.java:69)
	at org.eclipse.jdt.internal.compiler.batch.Main.initializeAnnotationProcessorManager(Main.java:3632)
	at org.eclipse.jdt.internal.compiler.batch.Main.performCompilation(Main.java:3737)
	at org.eclipse.jdt.internal.compiler.batch.Main.compile(Main.java:1679)
	at org.eclipse.jdt.internal.compiler.batch.Main.compile(Main.java:1372)
	at org.eclipse.jdt.core.compiler.batch.BatchCompiler.compile(BatchCompiler.java:80)
	at org.eclipse.jdt.core.compiler.batch.BatchCompiler.compile(BatchCompiler.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at railo.runtime.reflection.pairs.MethodInstance.invoke(MethodInstance.java:37)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2321843</commentid>
    <comment_count>15</comment_count>
    <who name="Igal .">igal</who>
    <bug_when>2013-10-22 14:28:34 -0400</bug_when>
    <thetext>still getting the same error on 4.3.1 

I downloaded ECJ 4.3.1 from 
http://www.eclipse.org/downloads/download.php?file=/eclipse/downloads/drops4/R-4.3.1-201309111000/ecj-4.3.1.jar&amp;mirror_id=272</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2327014</commentid>
    <comment_count>16</comment_count>
    <who name="Igal .">igal</who>
    <bug_when>2013-11-05 21:16:39 -0500</bug_when>
    <thetext>is there a reason this was not fixed?  can anyone please comment on the status of this bug?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2328173</commentid>
    <comment_count>17</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2013-11-08 11:42:11 -0500</bug_when>
    <thetext>Are you sure that you are using the right jar?
I tried with 4.3.1 and I could not get the NPE. I tried the same command line with 4.2.2 jar and I could get it.
If you still get it with 4.3.1 (make sure 4.3.0 or previous is not on your VM classpath), send me a command line I could use and I&apos;ll take a look.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2328201</commentid>
    <comment_count>18</comment_count>
    <who name="Igal .">igal</who>
    <bug_when>2013-11-08 12:19:56 -0500</bug_when>
    <thetext>hi Olivier, 

my apologies.

I am not running this from a command line per se, but inside a servlet that is running inside Jetty;  

apparently Jetty 8.1.12 ships with the jdt-core lib 3.7 which is in the classpath and I was not aware of.  I updated it to jdt-core 3.9 and it seems to work fine.

sorry to have wasted your time, and thank you for your help.


Igal</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>229489</attachid>
            <date>2013-04-09 05:48:00 -0400</date>
            <delta_ts>2013-04-09 05:48:09 -0400</delta_ts>
            <desc>Proposed fix</desc>
            <filename>Fix-for-bug-405225.patch</filename>
            <type>text/plain</type>
            <size>5626</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb21waWxlci5hcHQvc3JjL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9hcHQvdXRpbC9FY2xpcHNlRmlsZU1hbmFnZXIuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb21waWxlci5hcHQvc3JjL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9hcHQvdXRpbC9FY2xpcHNlRmlsZU1hbmFnZXIuamF2YQppbmRleCAyNTFiY2Nl
Li40MzAxNGQyIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29tcGlsZXIuYXB0L3NyYy9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXB0L3V0aWwvRWNsaXBzZUZpbGVNYW5h
Z2VyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVyLmFwdC9zcmMvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FwdC91dGlsL0VjbGlwc2VGaWxlTWFuYWdlci5qYXZh
CkBAIC0xLDQgKzEsNCBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAo
YykgMjAwNiwgMjAxMCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAo
YykgMjAwNiwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMg
cmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAq
IGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGlj
IExpY2Vuc2UgdjEuMApAQCAtNDIsNyArNDIsOSBAQAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb21waWxlci5iYXRjaC5NYWluOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5iYXRjaC5NYWluLlJlc291cmNlQnVuZGxlRmFjdG9yeTsKK2ltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuY2xhc3NmbXQuQ2xhc3NGaWxlQ29uc3Rh
bnRzOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5lbnYuQWNjZXNz
UmVzdHJpY3Rpb247CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmVu
di5BY2Nlc3NSdWxlOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5l
bnYuQWNjZXNzUnVsZVNldDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIuaW1wbC5Db21waWxlck9wdGlvbnM7CiAKIC8qKgpAQCAtMjgyLDYgKzI4NCw5IEBACiAJCUFy
cmF5TGlzdDxGaWxlPiBmaWxlcyA9IG5ldyBBcnJheUxpc3Q8RmlsZT4oKTsKIAkJU3RyaW5nIGph
dmF2ZXJzaW9uID0gU3lzdGVtLmdldFByb3BlcnR5KCJqYXZhLnZlcnNpb24iKTsvLyROT04tTkxT
LTEkCi0JCWlmIChqYXZhdmVyc2lvbiAhPSBudWxsICYmICFqYXZhdmVyc2lvbi5zdGFydHNXaXRo
KCIxLjYiKSkgeyAvLyROT04tTkxTLTEkCQotCQkJLy8gd3JvbmcgamRrIC0gMS42IGlzIHJlcXVp
cmVkCisJCWlmKGphdmF2ZXJzaW9uLmxlbmd0aCgpID4gMykKKwkJCWphdmF2ZXJzaW9uID0gamF2
YXZlcnNpb24uc3Vic3RyaW5nKDAsIDMpOworCQlsb25nIGpka0xldmVsID0gQ29tcGlsZXJPcHRp
b25zLnZlcnNpb25Ub0pka0xldmVsKGphdmF2ZXJzaW9uKTsKKwkJaWYgKGpka0xldmVsIDwgQ2xh
c3NGaWxlQ29uc3RhbnRzLkpESzFfNikgeworCQkJLy8gd3JvbmcgamRrIC0gMS42IG9yIGFib3Zl
IGlzIHJlcXVpcmVkCiAJCQlyZXR1cm4gbnVsbDsKIAkJfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvbXBpbGVyLnRvb2wvc3JjL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci90b29sL0VjbGlwc2VGaWxlTWFuYWdlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvbXBpbGVy
LnRvb2wvc3JjL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci90b29sL0VjbGlwc2VG
aWxlTWFuYWdlci5qYXZhCmluZGV4IDA3ODJlMTMuLjNmNTIxMjkgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb21waWxlci50b29sL3NyYy9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvdG9vbC9FY2xpcHNlRmlsZU1hbmFnZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQu
Y29tcGlsZXIudG9vbC9zcmMvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Rvb2wv
RWNsaXBzZUZpbGVNYW5hZ2VyLmphdmEKQEAgLTEsNCArMSw0IEBACiAvKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDA2LCAyMDEwIElCTSBDb3Jwb3JhdGlvbiBhbmQg
b3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDA2LCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQg
b3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNj
b21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJt
cyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCkBAIC00Miw3ICs0Miw5IEBACiBp
bXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmJhdGNoLk1haW47CiBpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmJhdGNoLk1haW4uUmVzb3VyY2VC
dW5kbGVGYWN0b3J5OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5j
bGFzc2ZtdC5DbGFzc0ZpbGVDb25zdGFudHM7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmVudi5BY2Nlc3NSZXN0cmljdGlvbjsKIGltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIuZW52LkFjY2Vzc1J1bGU7CiBpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLmVudi5BY2Nlc3NSdWxlU2V0OworaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5pbXBsLkNvbXBpbGVyT3B0aW9uczsKIAogLyoqCkBA
IC0yODUsNiArMjg3LDkgQEAKIAkJQXJyYXlMaXN0PEZpbGU+IGZpbGVzID0gbmV3IEFycmF5TGlz
dDxGaWxlPigpOwogCQlTdHJpbmcgamF2YXZlcnNpb24gPSBTeXN0ZW0uZ2V0UHJvcGVydHkoImph
dmEudmVyc2lvbiIpOy8vJE5PTi1OTFMtMSQKLQkJaWYgKGphdmF2ZXJzaW9uICE9IG51bGwgJiYg
IWphdmF2ZXJzaW9uLnN0YXJ0c1dpdGgoIjEuNiIpKSB7IC8vJE5PTi1OTFMtMSQJCi0JCQkvLyB3
cm9uZyBqZGsgLSAxLjYgaXMgcmVxdWlyZWQKKwkJaWYoamF2YXZlcnNpb24ubGVuZ3RoKCkgPiAz
KQorCQkJamF2YXZlcnNpb24gPSBqYXZhdmVyc2lvbi5zdWJzdHJpbmcoMCwgMyk7CisJCWxvbmcg
amRrTGV2ZWwgPSBDb21waWxlck9wdGlvbnMudmVyc2lvblRvSmRrTGV2ZWwoamF2YXZlcnNpb24p
OworCQlpZiAoamRrTGV2ZWwgPCBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV82KSB7CisJCQkvLyB3
cm9uZyBqZGsgLSAxLjYgb3IgYWJvdmUgaXMgcmVxdWlyZWQKIAkJCXJldHVybiBudWxsOwogCQl9
CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9CYXRjaENvbXBpbGVy
VGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQmF0Y2hDb21waWxlclRl
c3QuamF2YQppbmRleCBhMzY2Y2E0Li41NTE0YWM2IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29t
cGlsZXIvcmVncmVzc2lvbi9CYXRjaENvbXBpbGVyVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9j
b21waWxlci9yZWdyZXNzaW9uL0JhdGNoQ29tcGlsZXJUZXN0LmphdmEKQEAgLTEsNCArMSw0IEBA
CiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBw
cm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxh
YmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCkBA
IC01MSw1ICs1MSw0IEBACiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVy
LmJhdGNoLkNsYXNzcGF0aExvY2F0aW9uOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb21waWxlci5iYXRjaC5NYWluOwotaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5jbGFzc2ZtdC5DbGFzc0ZpbGVDb25zdGFudHM7CiBpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLnV0aWwuTWFuaWZlc3RBbmFseXplcjsKIApAQCAtMTAwLDUg
Kzk5LDUgQEAKICAqLwogcHVibGljIHN0YXRpYyBUZXN0IHN1aXRlKCkgewotCXJldHVybiBidWls
ZFVuaXF1ZUNvbXBsaWFuY2VUZXN0U3VpdGUodGVzdENsYXNzKCksIENsYXNzRmlsZUNvbnN0YW50
cy5KREsxXzUpOworCXJldHVybiBidWlsZE1pbmltYWxDb21wbGlhbmNlVGVzdFN1aXRlKHRlc3RD
bGFzcygpLCBGXzFfNSk7CiB9CiBwdWJsaWMgc3RhdGljIENsYXNzIHRlc3RDbGFzcygpIHsKQEAg
LTEzNzgwLDMgKzEzNzc5LDI0IEBACiAJCXRydWUpOwogfQorLy8gaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwNTIyNQorcHVibGljIHZvaWQgdGVzdDQwNTIy
NV9leHRkaXJzKCkgeworCS8vIGNoZWNrIHRoZSBvcHRpb24gaW50cm9kdWNlZCBpbiBidWcgMzU5
NzIxCisJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEi
LAorCQkJImltcG9ydCBqYXZhLmlvLkZpbGVSZWFkZXI7XG4iICsKKwkJCSJwdWJsaWMgY2xhc3Mg
WCB7XG4iICsKKwkJCSIgIHZvaWQgZm9vKCkgdGhyb3dzIGphdmEuaW8uSU9FeGNlcHRpb24ge1xu
IiArCisJCQkiICAgICAgRmlsZVJlYWRlciByID0gbmV3IEZpbGVSZWFkZXIoXCJmMVwiKTtcbiIg
KworCQkJIiAgICAgIGNoYXJbXSBjcyA9IG5ldyBjaGFyWzEwMjRdO1xuIiArCisJCQkiCSAgIHIu
cmVhZChjcyk7XG4iICsKKwkJCSIgIH1cbiIgKworCQkJIn1cbiIKKwkJfSwKKwkJIlwiIiArIE9V
VFBVVF9ESVIgKyAgRmlsZS5zZXBhcmF0b3IgKyAiWC5qYXZhXCIiCisJCSsgIiAtd2FybjotcmVz
b3VyY2UgLTEuNyAtZXh0ZGlycyBcIiIgKyBMSUJfRElSICsgIlwiIC1kIFwiIiArIE9VVFBVVF9E
SVIgKyAiXCIiLAorCQkiIiwKKwkJIiIsCisJCXRydWUpOworfQogfQ==
</data>

          </attachment>
      

    </bug>

</bugzilla>