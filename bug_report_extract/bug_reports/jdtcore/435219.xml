<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>435219</bug_id>
          
          <creation_ts>2014-05-19 11:48:00 -0400</creation_ts>
          <short_desc>[1.8][content assist] No proposals for some closure cases</short_desc>
          <delta_ts>2015-01-20 05:06:22 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.4.2</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Johannes Dorn">johannes.dorn</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>jarthana</cc>
    
    <cc>manpalat</cc>
    
    <cc>saammana</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2403762</commentid>
    <comment_count>0</comment_count>
    <who name="Johannes Dorn">johannes.dorn</who>
    <bug_when>2014-05-19 11:48:08 -0400</bug_when>
    <thetext>Here are a few cases where i don&apos;t get any code completion in closures using Luna M7

I&apos;ve written the places where i trigger code completion in the line above
.n means no proposals
.y means completion works fine
 
Case 1
                          .n  .n              .y
   new Thread(() -&gt; System.out.println(&quot;foo&quot;)).start();


Case 2

   List&lt;Integer&gt; list = Arrays.asList(1, 2, 3);

                                 .y                              :n
   list.stream().map((x) -&gt; x * x.hashCode()).forEach(System.out::println);

Case 3

   List&lt;Integer&gt; costBeforeTax = Arrays.asList(100, 200, 300);
   double bill = costBeforeTax.stream().map((cost) -&gt; cost + 0.19 * cost)
                                .y                   .n             .y
      .reduce((sum, cost) -&gt; sum.doubleValue() + cost.doubleValue()).get();

That last case is particulary interesting as i don&apos;t even get an empty list of proposals. JDT doesn&apos;t seem to think you can trigger code completion here.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2450112</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-10 22:41:16 -0400</bug_when>
    <thetext>I&apos;ll investigate for 4.5 M3.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2451287</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-13 03:10:25 -0400</bug_when>
    <thetext>Thanks for the many cases Johannes. I released a partial fix with tests here:
http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=246ca33259b64e75a96042ce92db878077ac86aa
that addresses all but the completion problem at cost.| that you have called
out.

Basically, for code assist, we can&apos;t apply the rigorous rules of lambda shape
analysis during overload resolution:

For example 

    new Thread(() -&gt; System.|

Is the lambda expression value/void compatible ? There is no way to know until
the completion is done and completion cannot be done until this is known.

I have relaxed the degree of rigor in the code for code assist path so we make
not-unreasonable assumptions.

The one case that is still broken seems to be due to bad recovered parse tree.
Looking into it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2451313</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-13 09:39:25 -0400</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #2)
&gt; Thanks for the many cases Johannes. I released a partial fix with tests here:
&gt; http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/
&gt; ?id=246ca33259b64e75a96042ce92db878077ac86aa
&gt; that addresses all but the completion problem at cost.| that you have called
&gt; out.

This case is addressed too here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=784f86ce6732cf119976248cf85d648b31a1b3eb.

Note to verifier: Please test the field initialization scenario with similar
snippets and raise follow up defects as required - this takes a different path
and I didn&apos;t quite test it - the reported cases are way more common.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2451345</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-13 14:19:08 -0400</bug_when>
    <thetext>See also https://bugs.eclipse.org/bugs/show_bug.cgi?id=435682#c2</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2452871</commentid>
    <comment_count>5</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2014-09-17 02:36:01 -0400</bug_when>
    <thetext>Verified fixed for 4.5 M2 using I20140916-2000 build</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2452872</commentid>
    <comment_count>6</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2014-09-17 02:36:54 -0400</bug_when>
    <thetext>bug 444300 exists for proposals in field declarations</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2453232</commentid>
    <comment_count>7</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-09-17 13:31:04 -0400</bug_when>
    <thetext>(In reply to Sasikanth Bharadwaj from comment #6)
&gt; bug 444300 exists for proposals in field declarations

This is fixed, thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2488520</commentid>
    <comment_count>8</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-11-24 23:39:01 -0500</bug_when>
    <thetext>This has been back ported to 4.4.2 due as a prereq for bug 446765:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=R4_4_maintenance&amp;id=b5d4962805d144dd16c9a9826c25e19144f99350

and here:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=R4_4_maintenance&amp;id=338938a574b837a6199112df2f9a81892480b606</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2507741</commentid>
    <comment_count>9</comment_count>
    <who name="Sasikanth Bharadwaj">saammana</who>
    <bug_when>2015-01-20 05:06:22 -0500</bug_when>
    <thetext>Verified for 442 using build M-4.4.2RC1-201501141500</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>