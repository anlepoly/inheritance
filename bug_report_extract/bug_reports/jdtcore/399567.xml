<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>399567</bug_id>
          
          <creation_ts>2013-01-30 17:13:00 -0500</creation_ts>
          <short_desc>[1.8] Different error message from the reference compiler</short_desc>
          <delta_ts>2013-02-20 03:13:50 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>380501</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Manoj Palat Away Until May 11 2015">manpalat</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>jarthana</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2210191</commentid>
    <comment_count>0</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-01-30 17:13:29 -0500</bug_when>
    <thetext>[org.eclipse.jdt.core.tests.compiler.regression.AmbiguousMethodTest._test009()]

Similar error message though, but different for the following code:

import java.util.*;
public class T {
   void test() {
   	OrderedSet&lt;String&gt; os = null;
   	os.add(&quot;hello&quot;);
   	OrderedSet&lt;Integer&gt; os2 = null;
   	os2.add(1);
   }
}interface OrderedSet&lt;E&gt; extends List&lt;E&gt;, Set&lt;E&gt; { boolean add(E o); }

JDT Core reports two errors and two warnings [b74 build]

Errors for the last line:
Multiple markers at this line
	- Duplicate methods named parallelStream with the parameters () and () are inherited from the types Set&lt;E&gt; and 
	 List&lt;E&gt;
	- implements java.util.List&lt;E&gt;.add
	- Duplicate methods named stream with the parameters () and () are inherited from the types Set&lt;E&gt; and List&lt;E&gt;

Warnings for os(2).add lines:
Null pointer access: The variable os can only be null at this location
Null pointer access: The variable os2 can only be null at this location

Reference compiler reports:
$/lambda-8-b74-windows-x64-21_jan_2013/jdk1.8.0/bin/javac.exe T.java
T.java:10: error: interface OrderedSet&lt;E&gt; inherits unrelated defaults for parallelStream() from types List and Set
}interface OrderedSet&lt;E&gt; extends List&lt;E&gt;, Set&lt;E&gt; {
 ^
  where E is a type-variable:
    E extends Object declared in interface OrderedSet
1 error


$lambda-8-b74-windows-x64-21_jan_2013/jdk1.8.0/bin/javac.exe -version
javac 1.8.0-ea</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2210223</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-01-30 19:29:14 -0500</bug_when>
    <thetext>Stephan, please take a look to see if our additional error is justified. TIA</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2210976</commentid>
    <comment_count>2</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-02-01 04:01:37 -0500</bug_when>
    <thetext>Stephan: Please note that this test has been disabled as part of bug 399452 and hence once this is fixed, re-enable the same.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2210987</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-02-01 04:35:37 -0500</bug_when>
    <thetext>(In reply to comment #0)
&gt; [org.eclipse.jdt.core.tests.compiler.regression.AmbiguousMethodTest.
&gt; _test009()]
&gt; 
&gt; Similar error message though, but different for the following code:
&gt; 
&gt; import java.util.*;
&gt; public class T {
&gt;    void test() {
&gt;    	OrderedSet&lt;String&gt; os = null;
&gt;    	os.add(&quot;hello&quot;);
&gt;    	OrderedSet&lt;Integer&gt; os2 = null;
&gt;    	os2.add(1);
&gt;    }
&gt; }interface OrderedSet&lt;E&gt; extends List&lt;E&gt;, Set&lt;E&gt; { boolean add(E o); }


Isn&apos;t this an example of valid Java 7 code rendered invalid by Java 8 ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2218788</commentid>
    <comment_count>4</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-02-19 12:35:18 -0500</bug_when>
    <thetext>The error is justified by this para in the summary of Part H:

  It is a compile-time error if I or C inherits a default method whose signature is override-equivalent with another method inherited by I. This is the case whether the other method is abstract or not. 
  
Srikanth, do you think we should give a more specific message, like javac does, by mentioning that a default method is involved in the conflict?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2218796</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-02-19 12:53:50 -0500</bug_when>
    <thetext>(In reply to comment #4)

&gt; Srikanth, do you think we should give a more specific message, like javac
&gt; does, by mentioning that a default method is involved in the conflict?

I think our message is clear enough, so it is your call, remember to re-enable
the test as you close, TIA.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2219072</commentid>
    <comment_count>6</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-02-20 03:13:50 -0500</bug_when>
    <thetext>Released for BETA_JAVA8 via commit c06e07ca77c0b109ce7d4e6c3f60180a3777bc7d:

Diversify the test into three scenarios:
* original test at 1.7-
* same input at 1.8 on 1.8 JRE: expect new error
* on 1.8 JRE: disambiguate by new methods in OrderedSet</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>