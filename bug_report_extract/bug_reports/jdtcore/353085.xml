<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>353085</bug_id>
          
          <creation_ts>2011-07-26 05:32:00 -0400</creation_ts>
          <short_desc>[1.7] Cannot cast from Object to boolean</short_desc>
          <delta_ts>2011-09-14 11:18:22 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.7</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.7.1</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Volker Berlin">volker.berlin</reporter>
          <assigned_to name="Ayushman Jain">amj87.iitr</assigned_to>
          <cc>amj87.iitr</cc>
    
    <cc>Olivier_Thomann</cc>
    
    <cc>remy.suen</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1970106</commentid>
    <comment_count>0</comment_count>
    <who name="Volker Berlin">volker.berlin</who>
    <bug_when>2011-07-26 05:32:58 -0400</bug_when>
    <thetext>The follow small test case show the compiler error &quot;Cannot cast from Object to boolean&quot;. But it compile with the Java 7 compiler. The same problem occur also with all other native types like int and char. This construct is used in the Java 7 sources. For example in sun.invoke.util.ValueConversions


public class CompilerTest {
	public static void main(String[] args) {
		Object x = Boolean.TRUE;
		boolean y = (boolean)x;
	}
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1970115</commentid>
    <comment_count>1</comment_count>
    <who name="Volker Berlin">volker.berlin</who>
    <bug_when>2011-07-26 05:52:10 -0400</bug_when>
    <thetext>In my compiler error/warnings settings I have no errors. I have only ignore and warnings.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1970124</commentid>
    <comment_count>2</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-07-26 06:08:55 -0400</bug_when>
    <thetext>I think this is the same as bug http://bugs.sun.com/view_bug.do?bug_id=7038363. Fixed in javac 7b147, but not in ECJ. :(</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1970126</commentid>
    <comment_count>3</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-07-26 06:10:20 -0400</bug_when>
    <thetext>Olivier/Srikanth, you know of any section in the spec that talks about why this cast is allowed now?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1970562</commentid>
    <comment_count>4</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-07-26 15:31:12 -0400</bug_when>
    <thetext>This seems to have changed. Check the table 5.1 in the latest JLS in chapter 5.5.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1970568</commentid>
    <comment_count>5</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-07-26 15:35:32 -0400</bug_when>
    <thetext>We should use the source level to decide if this is legal or not.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1970998</commentid>
    <comment_count>6</comment_count>
      <attachid>200449</attachid>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-07-27 09:50:16 -0400</bug_when>
    <thetext>Created attachment 200449
proposed fix

The patch makes the primitive to Object conversions possible. Also works fine for all legal casts  such as
public class Conversion {
	public static void main ( String[] args ) {
		Object a = new Integer (1);
		int abc = (int) a;
		System.out.println (abc); 
	}  
} 

However, for 
public class Conversion {
	public static void main ( String[] args ) {
		Object a = new Float (1.123);
		int abc = (int) a;
		System.out.println (abc); 
	}  
} 

I get a verifyError on running the code. While in java command line, i get a CCE. Olivier, does something more need to be done for codegen?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1971011</commentid>
    <comment_count>7</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-07-27 10:08:48 -0400</bug_when>
    <thetext>(In reply to comment #6)
&gt; I get a verifyError on running the code. While in java command line, i get a
&gt; CCE. Olivier, does something more need to be done for codegen?
I&apos;ll take a look at the patch.
You probably need to insert a checkcast bytecode.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1971110</commentid>
    <comment_count>8</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-07-27 12:07:07 -0400</bug_when>
    <thetext>(In reply to comment #7)
&gt; (In reply to comment #6)
&gt; &gt; I get a verifyError on running the code. While in java command line, i get a
&gt; &gt; CCE. Olivier, does something more need to be done for codegen?
&gt; I&apos;ll take a look at the patch.
&gt; You probably need to insert a checkcast bytecode.

I think there&apos;s more. We may also need an unboxing conversion code here</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1971125</commentid>
    <comment_count>9</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-07-27 12:43:04 -0400</bug_when>
    <thetext>I think we need to handle more cases in the generation of implicit conversion.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1971145</commentid>
    <comment_count>10</comment_count>
      <attachid>200462</attachid>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-07-27 13:11:51 -0400</bug_when>
    <thetext>Created attachment 200462
proposed fix v2.0

This patch adds more implicit conversion id&apos;s in TypeIds.java ie. Object2X where X = int, byte, short, etc... as per the table 5.1 in JLS 5.5

A check cast and an unboxing conversion is generated for any such conversion.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1971317</commentid>
    <comment_count>11</comment_count>
      <attachid>200482</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-07-27 21:30:19 -0400</bug_when>
    <thetext>Created attachment 200482
Proposed fix + regression tests

Patch based on the previous one with a fix for char, short and byte and some cleanup.
Ayushman, please review.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1971367</commentid>
    <comment_count>12</comment_count>
      <attachid>200492</attachid>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-07-28 02:44:26 -0400</bug_when>
    <thetext>Created attachment 200492
fix v2.1 + more tests + comments

Thanks Olivier.
Same fix as above, added more tests to check negative cases where JVM issues a CCE, and added a test to check bytecode gen.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1971635</commentid>
    <comment_count>13</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-07-28 10:33:02 -0400</bug_when>
    <thetext>A few comments.

Try to catch the CCE in the code and print something predictable. Printing the stacktrace directly can create failures on different VMS.
Also remove the new test from ConformTest and move the check for disassembled code into one of the cast test.

Everything else is fine. Thanks for the patch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1971764</commentid>
    <comment_count>14</comment_count>
      <attachid>200548</attachid>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-07-28 14:06:12 -0400</bug_when>
    <thetext>Created attachment 200548
patch v2.2

Done above mentioned changes.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1972341</commentid>
    <comment_count>15</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2011-08-01 01:41:57 -0400</bug_when>
    <thetext>Released in HEAD for 3.8M1 and in R3_7_maintenance for 3.7.1</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1984245</commentid>
    <comment_count>16</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-08-25 05:10:21 -0400</bug_when>
    <thetext>Verified for 3.7.1 RC2 using build id: M20110824-0800</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1993457</commentid>
    <comment_count>17</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-09-14 11:18:22 -0400</bug_when>
    <thetext>Verified for 3.8M1.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>200449</attachid>
            <date>2011-07-27 09:50:00 -0400</date>
            <delta_ts>2011-07-27 13:11:51 -0400</delta_ts>
            <desc>proposed fix</desc>
            <filename>patch353085.txt</filename>
            <type>text/plain</type>
            <size>2026</size>
            <attacher name="Ayushman Jain">amj87.iitr</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0V4
cHJlc3Npb24uamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2FzdC9FeHByZXNzaW9uLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjEzMy4yLjUN
CmRpZmYgLXUgLXIxLjEzMy4yLjUgRXhwcmVzc2lvbi5qYXZhDQotLS0gY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9FeHByZXNzaW9uLmphdmEJMzEgTWFyIDIw
MTEgMDc6MjA6MjUgLTAwMDAJMS4xMzMuMi41DQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2FzdC9FeHByZXNzaW9uLmphdmEJMjcgSnVsIDIwMTEgMTM6NDQ6
NTEgLTAwMDANCkBAIC0yNDMsNiArMjQzLDcgQEANCiAJLy8gaWRlbnRpdHkgY29udmVyc2lvbiBj
YW5ub3QgYmUgcGVyZm9ybWVkIHVwZnJvbnQsIGR1ZSB0byBzaWRlLWVmZmVjdHMNCiAJLy8gbGlr
ZSBjb25zdGFudCBwcm9wYWdhdGlvbg0KIAlib29sZWFuIHVzZTE1c3BlY2lmaWNzID0gc2NvcGUu
Y29tcGlsZXJPcHRpb25zKCkuc291cmNlTGV2ZWwgPj0gQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFf
NTsNCisJYm9vbGVhbiB1c2UxN3NwZWNpZmljcyA9IHNjb3BlLmNvbXBpbGVyT3B0aW9ucygpLnNv
dXJjZUxldmVsID49IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzc7DQogCWlmIChjYXN0VHlwZS5p
c0Jhc2VUeXBlKCkpIHsNCiAJCWlmIChleHByZXNzaW9uVHlwZS5pc0Jhc2VUeXBlKCkpIHsNCiAJ
CQlpZiAoZXhwcmVzc2lvblR5cGUgPT0gY2FzdFR5cGUpIHsNCkBAIC0yNjUsNiArMjY2LDggQEAN
CiAJCQkJcmV0dXJuIHRydWU7DQogDQogCQkJfQ0KKwkJfSBlbHNlIGlmICh1c2UxN3NwZWNpZmlj
cyAmJiBleHByZXNzaW9uVHlwZS5pZCA9PSBUeXBlSWRzLlRfSmF2YUxhbmdPYmplY3Qpew0KKwkJ
CXJldHVybiB0cnVlOw0KIAkJfSBlbHNlIGlmICh1c2UxNXNwZWNpZmljcw0KIAkJCQkJCQkmJiBz
Y29wZS5lbnZpcm9ubWVudCgpLmNvbXB1dGVCb3hpbmdUeXBlKGV4cHJlc3Npb25UeXBlKS5pc0Nv
bXBhdGlibGVXaXRoKGNhc3RUeXBlKSkgeyAvLyB1bmJveGluZyAtIG9ubHkgd2lkZW5pbmcgbWF0
Y2ggaXMgYWxsb3dlZA0KIAkJCXRhZ0FzVW5uZWNlc3NhcnlDYXN0KHNjb3BlLCBjYXN0VHlwZSk7
DQpAQCAtNTcyLDcgKzU3NSwxMiBAQA0KIAkvLyBvciB0byBiZWNvbWUgYW4gaW50IGJlZm9yZSBi
b3hlZCBpbnRvIGFuIEludGVnZXINCiAJaWYgKHJ1bnRpbWVUeXBlICE9IFR5cGVCaW5kaW5nLk5V
TEwgJiYgcnVudGltZVR5cGUuaXNCYXNlVHlwZSgpKSB7DQogCQlpZiAoIWNvbXBpbGVUaW1lVHlw
ZS5pc0Jhc2VUeXBlKCkpIHsNCi0JCQlUeXBlQmluZGluZyB1bmJveGVkVHlwZSA9IHNjb3BlLmVu
dmlyb25tZW50KCkuY29tcHV0ZUJveGluZ1R5cGUoY29tcGlsZVRpbWVUeXBlKTsNCisJCQlUeXBl
QmluZGluZyB1bmJveGVkVHlwZTsNCisJCQlpZiAoY29tcGlsZVRpbWVUeXBlLmlkID09IFR5cGVJ
ZHMuVF9KYXZhTGFuZ09iamVjdCkgew0KKwkJCQl1bmJveGVkVHlwZSA9IHJ1bnRpbWVUeXBlOw0K
KwkJCX0gZWxzZSB7DQorCQkJCXVuYm94ZWRUeXBlID0gc2NvcGUuZW52aXJvbm1lbnQoKS5jb21w
dXRlQm94aW5nVHlwZShjb21waWxlVGltZVR5cGUpOw0KKwkJCX0NCiAJCQl0aGlzLmltcGxpY2l0
Q29udmVyc2lvbiA9IFR5cGVJZHMuVU5CT1hJTkc7DQogCQkJc2NvcGUucHJvYmxlbVJlcG9ydGVy
KCkuYXV0b2JveGluZyh0aGlzLCBjb21waWxlVGltZVR5cGUsIHJ1bnRpbWVUeXBlKTsNCiAJCQlj
b21waWxlVGltZVR5cGUgPSB1bmJveGVkVHlwZTsNCg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>200462</attachid>
            <date>2011-07-27 13:11:00 -0400</date>
            <delta_ts>2011-07-27 21:30:19 -0400</delta_ts>
            <desc>proposed fix v2.0</desc>
            <filename>patch353085.txt</filename>
            <type>text/plain</type>
            <size>6532</size>
            <attacher name="Ayushman Jain">amj87.iitr</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0Nh
c3RFeHByZXNzaW9uLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNl
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9hc3QvQ2FzdEV4cHJlc3Npb24uamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEu
MTM3LjIuNQ0KZGlmZiAtdSAtcjEuMTM3LjIuNSBDYXN0RXhwcmVzc2lvbi5qYXZhDQotLS0gY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9DYXN0RXhwcmVzc2lv
bi5qYXZhCTcgSnVuIDIwMTEgMTY6MTQ6MTAgLTAwMDAJMS4xMzcuMi41DQorKysgY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9DYXN0RXhwcmVzc2lvbi5qYXZh
CTI3IEp1bCAyMDExIDE3OjEwOjA0IC0wMDAwDQpAQCAtNDIyLDcgKzQyMiw5IEBADQogCQljb2Rl
U3RyZWFtLnJlY29yZFBvc2l0aW9uc0Zyb20ocGMsIHRoaXMuc291cmNlU3RhcnQpOw0KIAkJcmV0
dXJuOw0KIAl9DQorDQogCXRoaXMuZXhwcmVzc2lvbi5nZW5lcmF0ZUNvZGUoY3VycmVudFNjb3Bl
LCBjb2RlU3RyZWFtLCB2YWx1ZVJlcXVpcmVkIHx8IG5lZWRSdW50aW1lQ2hlY2tjYXN0KTsNCisJ
DQogCWlmIChuZWVkUnVudGltZUNoZWNrY2FzdCAmJiB0aGlzLmV4cHJlc3Npb24ucG9zdENvbnZl
cnNpb25UeXBlKGN1cnJlbnRTY29wZSkgIT0gdGhpcy5yZXNvbHZlZFR5cGUuZXJhc3VyZSgpKSB7
IC8vIG5vIG5lZWQgdG8gaXNzdWUgYSBjaGVja2Nhc3QgaWYgYWxyZWFkeSBkb25lIGFzIGdlbmVy
aWNDYXN0DQogCQljb2RlU3RyZWFtLmNoZWNrY2FzdCh0aGlzLnJlc29sdmVkVHlwZSk7DQogCX0N
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0V4
cHJlc3Npb24uamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2FzdC9FeHByZXNzaW9uLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjEzMy4yLjUN
CmRpZmYgLXUgLXIxLjEzMy4yLjUgRXhwcmVzc2lvbi5qYXZhDQotLS0gY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9FeHByZXNzaW9uLmphdmEJMzEgTWFyIDIw
MTEgMDc6MjA6MjUgLTAwMDAJMS4xMzMuMi41DQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2FzdC9FeHByZXNzaW9uLmphdmEJMjcgSnVsIDIwMTEgMTc6MTA6
MDYgLTAwMDANCkBAIC0yNDMsNiArMjQzLDcgQEANCiAJLy8gaWRlbnRpdHkgY29udmVyc2lvbiBj
YW5ub3QgYmUgcGVyZm9ybWVkIHVwZnJvbnQsIGR1ZSB0byBzaWRlLWVmZmVjdHMNCiAJLy8gbGlr
ZSBjb25zdGFudCBwcm9wYWdhdGlvbg0KIAlib29sZWFuIHVzZTE1c3BlY2lmaWNzID0gc2NvcGUu
Y29tcGlsZXJPcHRpb25zKCkuc291cmNlTGV2ZWwgPj0gQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFf
NTsNCisJYm9vbGVhbiB1c2UxN3NwZWNpZmljcyA9IHNjb3BlLmNvbXBpbGVyT3B0aW9ucygpLnNv
dXJjZUxldmVsID49IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzc7DQogCWlmIChjYXN0VHlwZS5p
c0Jhc2VUeXBlKCkpIHsNCiAJCWlmIChleHByZXNzaW9uVHlwZS5pc0Jhc2VUeXBlKCkpIHsNCiAJ
CQlpZiAoZXhwcmVzc2lvblR5cGUgPT0gY2FzdFR5cGUpIHsNCkBAIC0yNjUsNiArMjY2LDkgQEAN
CiAJCQkJcmV0dXJuIHRydWU7DQogDQogCQkJfQ0KKwkJfSBlbHNlIGlmICh1c2UxN3NwZWNpZmlj
cyAmJiBleHByZXNzaW9uVHlwZS5pZCA9PSBUeXBlSWRzLlRfSmF2YUxhbmdPYmplY3Qpew0KKwkJ
CXRhZ0FzTmVlZENoZWNrQ2FzdCgpOw0KKwkJCXJldHVybiB0cnVlOw0KIAkJfSBlbHNlIGlmICh1
c2UxNXNwZWNpZmljcw0KIAkJCQkJCQkmJiBzY29wZS5lbnZpcm9ubWVudCgpLmNvbXB1dGVCb3hp
bmdUeXBlKGV4cHJlc3Npb25UeXBlKS5pc0NvbXBhdGlibGVXaXRoKGNhc3RUeXBlKSkgeyAvLyB1
bmJveGluZyAtIG9ubHkgd2lkZW5pbmcgbWF0Y2ggaXMgYWxsb3dlZA0KIAkJCXRhZ0FzVW5uZWNl
c3NhcnlDYXN0KHNjb3BlLCBjYXN0VHlwZSk7DQpAQCAtNTcyLDcgKzU3NiwxMiBAQA0KIAkvLyBv
ciB0byBiZWNvbWUgYW4gaW50IGJlZm9yZSBib3hlZCBpbnRvIGFuIEludGVnZXINCiAJaWYgKHJ1
bnRpbWVUeXBlICE9IFR5cGVCaW5kaW5nLk5VTEwgJiYgcnVudGltZVR5cGUuaXNCYXNlVHlwZSgp
KSB7DQogCQlpZiAoIWNvbXBpbGVUaW1lVHlwZS5pc0Jhc2VUeXBlKCkpIHsNCi0JCQlUeXBlQmlu
ZGluZyB1bmJveGVkVHlwZSA9IHNjb3BlLmVudmlyb25tZW50KCkuY29tcHV0ZUJveGluZ1R5cGUo
Y29tcGlsZVRpbWVUeXBlKTsNCisJCQlUeXBlQmluZGluZyB1bmJveGVkVHlwZTsNCisvLwkJCWlm
IChjb21waWxlVGltZVR5cGUuaWQgPT0gVHlwZUlkcy5UX0phdmFMYW5nT2JqZWN0KSB7DQorLy8J
CQkJdW5ib3hlZFR5cGUgPSBydW50aW1lVHlwZTsNCisvLwkJCX0gZWxzZSB7DQorCQkJCXVuYm94
ZWRUeXBlID0gc2NvcGUuZW52aXJvbm1lbnQoKS5jb21wdXRlQm94aW5nVHlwZShjb21waWxlVGlt
ZVR5cGUpOw0KKwkJCS8vfQ0KIAkJCXRoaXMuaW1wbGljaXRDb252ZXJzaW9uID0gVHlwZUlkcy5V
TkJPWElORzsNCiAJCQlzY29wZS5wcm9ibGVtUmVwb3J0ZXIoKS5hdXRvYm94aW5nKHRoaXMsIGNv
bXBpbGVUaW1lVHlwZSwgcnVudGltZVR5cGUpOw0KIAkJCWNvbXBpbGVUaW1lVHlwZSA9IHVuYm94
ZWRUeXBlOw0KSW5kZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9hc3QvU2luZ2xlTmFtZVJlZmVyZW5jZS5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2
c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1NpbmdsZU5hbWVSZWZlcmVuY2UuamF2YSx2DQpyZXRy
aWV2aW5nIHJldmlzaW9uIDEuMTI5LjIuMQ0KZGlmZiAtdSAtcjEuMTI5LjIuMSBTaW5nbGVOYW1l
UmVmZXJlbmNlLmphdmENCi0tLSBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvYXN0L1NpbmdsZU5hbWVSZWZlcmVuY2UuamF2YQk1IE1hciAyMDExIDE4OjEyOjU2IC0w
MDAwCTEuMTI5LjIuMQ0KKysrIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9hc3QvU2luZ2xlTmFtZVJlZmVyZW5jZS5qYXZhCTI3IEp1bCAyMDExIDE3OjEwOjA4IC0w
MDAwDQpAQCAtODc1LDcgKzg3NSwxMCBAQA0KIAlUeXBlQmluZGluZyBjb252ZXJ0ZWRUeXBlID0g
dGhpcy5yZXNvbHZlZFR5cGU7DQogCWlmICh0aGlzLmdlbmVyaWNDYXN0ICE9IG51bGwpDQogCQlj
b252ZXJ0ZWRUeXBlID0gdGhpcy5nZW5lcmljQ2FzdDsNCisvLwlpbnQgbWFza2VkSW1wbGljaXRD
b252ZXJzaW9uICA9KHRoaXMuaW1wbGljaXRDb252ZXJzaW9uICYgVHlwZUlkcy5JTVBMSUNJVF9D
T05WRVJTSU9OX01BU0spOw0KIAlpbnQgcnVudGltZVR5cGUgPSAodGhpcy5pbXBsaWNpdENvbnZl
cnNpb24gJiBUeXBlSWRzLklNUExJQ0lUX0NPTlZFUlNJT05fTUFTSykgPj4gNDsNCisvLwlpZiAo
Y29udmVydGVkVHlwZS5pZCA9PSBUeXBlSWRzLlRfSmF2YUxhbmdPYmplY3QpDQorLy8JCXJldHVy
biBjb252ZXJ0ZWRUeXBlOw0KIAlzd2l0Y2ggKHJ1bnRpbWVUeXBlKSB7DQogCQljYXNlIFRfYm9v
bGVhbiA6DQogCQkJY29udmVydGVkVHlwZSA9IFR5cGVCaW5kaW5nLkJPT0xFQU47DQpJbmRleDog
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NvZGVnZW4vQ29kZVN0
cmVhbS5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
Y29kZWdlbi9Db2RlU3RyZWFtLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjE4MC4yLjIN
CmRpZmYgLXUgLXIxLjE4MC4yLjIgQ29kZVN0cmVhbS5qYXZhDQotLS0gY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NvZGVnZW4vQ29kZVN0cmVhbS5qYXZhCTggTWFy
IDIwMTEgMjM6MzY6MTIgLTAwMDAJMS4xODAuMi4yDQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvbXBpbGVyL2NvZGVnZW4vQ29kZVN0cmVhbS5qYXZhCTI3IEp1bCAyMDEx
IDE3OjEwOjEzIC0wMDAwDQpAQCAtMjA1Miw2ICsyMDUyLDE5IEBADQogCQkJYnJlYWs7DQogCQlj
YXNlIFR5cGVJZHMuRmxvYXQyTG9uZyA6DQogCQkJZjJsKCk7DQorCQkJYnJlYWs7DQorCQljYXNl
IFR5cGVJZHMuT2JqZWN0MmJvb2xlYW46DQorCQljYXNlIFR5cGVJZHMuT2JqZWN0MmJ5dGU6DQor
CQljYXNlIFR5cGVJZHMuT2JqZWN0MnNob3J0Og0KKwkJY2FzZSBUeXBlSWRzLk9iamVjdDJpbnQ6
DQorCQljYXNlIFR5cGVJZHMuT2JqZWN0Mmxvbmc6DQorCQljYXNlIFR5cGVJZHMuT2JqZWN0MmZs
b2F0Og0KKwkJY2FzZSBUeXBlSWRzLk9iamVjdDJjaGFyOg0KKwkJY2FzZSBUeXBlSWRzLk9iamVj
dDJkb3VibGU6DQorCQkJaW50IHJ1bnRpbWVUeXBlID0gKGltcGxpY2l0Q29udmVyc2lvbkNvZGUg
JiBUeXBlSWRzLklNUExJQ0lUX0NPTlZFUlNJT05fTUFTSykgPj4gNDsNCisJCQljaGVja2Nhc3Qo
cnVudGltZVR5cGUpOw0KKwkJCWdlbmVyYXRlVW5ib3hpbmdDb252ZXJzaW9uKHJ1bnRpbWVUeXBl
KTsNCisJCQlicmVhazsJDQogCX0NCiAJaWYgKChpbXBsaWNpdENvbnZlcnNpb25Db2RlICYgVHlw
ZUlkcy5CT1hJTkcpICE9IDApIHsNCiAJCS8vIG5lZWQgdG8gdW5ib3gvYm94IHRoZSBjb25zdGFu
dA0KSW5kZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29r
dXAvVHlwZUlkcy5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvbG9va3VwL1R5cGVJZHMuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMzYuMi41
DQpkaWZmIC11IC1yMS4zNi4yLjUgVHlwZUlkcy5qYXZhDQotLS0gY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlSWRzLmphdmEJMjggSnVuIDIwMTEg
MTU6MzU6MDcgLTAwMDAJMS4zNi4yLjUNCisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVJZHMuamF2YQkyNyBKdWwgMjAxMSAxNzoxMDoxNCAt
MDAwMA0KQEAgLTE3MSw2ICsxNzEsMTQgQEANCiAJZmluYWwgaW50IE51bGwyTnVsbCA9IFRfbnVs
bCArIChUX251bGwgPDwgNCk7DQogCWZpbmFsIGludCBOdWxsMlN0cmluZyA9IFRfbnVsbCArIChU
X0phdmFMYW5nU3RyaW5nIDw8IDQpOw0KIAlmaW5hbCBpbnQgT2JqZWN0Mk9iamVjdCA9IFRfSmF2
YUxhbmdPYmplY3QgKyAoVF9KYXZhTGFuZ09iamVjdCA8PCA0KTsNCisJZmluYWwgaW50IE9iamVj
dDJieXRlID0gVF9KYXZhTGFuZ09iamVjdCArIChUX2J5dGUgPDwgNCk7DQorCWZpbmFsIGludCBP
YmplY3Qyc2hvcnQgPSBUX0phdmFMYW5nT2JqZWN0ICsgKFRfc2hvcnQgPDwgNCk7DQorCWZpbmFs
IGludCBPYmplY3QyY2hhciA9IFRfSmF2YUxhbmdPYmplY3QgKyAoVF9jaGFyIDw8IDQpOw0KKwlm
aW5hbCBpbnQgT2JqZWN0MmludCA9IFRfSmF2YUxhbmdPYmplY3QgKyAoVF9pbnQgPDwgNCk7DQor
CWZpbmFsIGludCBPYmplY3QybG9uZyA9IFRfSmF2YUxhbmdPYmplY3QgKyAoVF9sb25nIDw8IDQp
Ow0KKwlmaW5hbCBpbnQgT2JqZWN0MmZsb2F0ID0gVF9KYXZhTGFuZ09iamVjdCArIChUX2Zsb2F0
IDw8IDQpOw0KKwlmaW5hbCBpbnQgT2JqZWN0MmRvdWJsZSA9IFRfSmF2YUxhbmdPYmplY3QgKyAo
VF9kb3VibGUgPDwgNCk7DQorCWZpbmFsIGludCBPYmplY3QyYm9vbGVhbiA9IFRfSmF2YUxhbmdP
YmplY3QgKyAoVF9ib29sZWFuIDw8IDQpOw0KIAlmaW5hbCBpbnQgQk9YSU5HID0gMHgyMDA7DQog
CWZpbmFsIGludCBVTkJPWElORyA9IDB4NDAwOw0KIH0NCg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>200482</attachid>
            <date>2011-07-27 21:30:00 -0400</date>
            <delta_ts>2011-07-28 02:44:26 -0400</delta_ts>
            <desc>Proposed fix + regression tests</desc>
            <filename>patch_353085.txt</filename>
            <type>text/plain</type>
            <size>13339</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0V4
cHJlc3Npb24uamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2FzdC9FeHByZXNzaW9uLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjEzMy4yLjUN
CmRpZmYgLXUgLXIxLjEzMy4yLjUgRXhwcmVzc2lvbi5qYXZhDQotLS0gY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9FeHByZXNzaW9uLmphdmEJMzEgTWFyIDIw
MTEgMDc6MjA6MjUgLTAwMDAJMS4xMzMuMi41DQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2FzdC9FeHByZXNzaW9uLmphdmEJMjggSnVsIDIwMTEgMDE6Mjk6
MTYgLTAwMDANCkBAIC0yNDMsNiArMjQzLDcgQEANCiAJLy8gaWRlbnRpdHkgY29udmVyc2lvbiBj
YW5ub3QgYmUgcGVyZm9ybWVkIHVwZnJvbnQsIGR1ZSB0byBzaWRlLWVmZmVjdHMNCiAJLy8gbGlr
ZSBjb25zdGFudCBwcm9wYWdhdGlvbg0KIAlib29sZWFuIHVzZTE1c3BlY2lmaWNzID0gc2NvcGUu
Y29tcGlsZXJPcHRpb25zKCkuc291cmNlTGV2ZWwgPj0gQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFf
NTsNCisJYm9vbGVhbiB1c2UxN3NwZWNpZmljcyA9IHNjb3BlLmNvbXBpbGVyT3B0aW9ucygpLnNv
dXJjZUxldmVsID49IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzc7DQogCWlmIChjYXN0VHlwZS5p
c0Jhc2VUeXBlKCkpIHsNCiAJCWlmIChleHByZXNzaW9uVHlwZS5pc0Jhc2VUeXBlKCkpIHsNCiAJ
CQlpZiAoZXhwcmVzc2lvblR5cGUgPT0gY2FzdFR5cGUpIHsNCkBAIC0yNjUsNiArMjY2LDggQEAN
CiAJCQkJcmV0dXJuIHRydWU7DQogDQogCQkJfQ0KKwkJfSBlbHNlIGlmICh1c2UxN3NwZWNpZmlj
cyAmJiBleHByZXNzaW9uVHlwZS5pZCA9PSBUeXBlSWRzLlRfSmF2YUxhbmdPYmplY3Qpew0KKwkJ
CXJldHVybiB0cnVlOw0KIAkJfSBlbHNlIGlmICh1c2UxNXNwZWNpZmljcw0KIAkJCQkJCQkmJiBz
Y29wZS5lbnZpcm9ubWVudCgpLmNvbXB1dGVCb3hpbmdUeXBlKGV4cHJlc3Npb25UeXBlKS5pc0Nv
bXBhdGlibGVXaXRoKGNhc3RUeXBlKSkgeyAvLyB1bmJveGluZyAtIG9ubHkgd2lkZW5pbmcgbWF0
Y2ggaXMgYWxsb3dlZA0KIAkJCXRhZ0FzVW5uZWNlc3NhcnlDYXN0KHNjb3BlLCBjYXN0VHlwZSk7
DQpAQCAtNTk2LDcgKzU5OSwxMSBAQA0KIAkJY2FzZSBUX2J5dGUgOg0KIAkJY2FzZSBUX3Nob3J0
IDoNCiAJCWNhc2UgVF9jaGFyIDoNCi0JCQl0aGlzLmltcGxpY2l0Q29udmVyc2lvbiB8PSAoVHlw
ZUlkcy5UX2ludCA8PCA0KSArIGNvbXBpbGVUaW1lVHlwZUlEOw0KKwkJCWlmIChjb21waWxlVGlt
ZVR5cGVJRCA9PSBUeXBlSWRzLlRfSmF2YUxhbmdPYmplY3QpIHsNCisJCQkJdGhpcy5pbXBsaWNp
dENvbnZlcnNpb24gfD0gKHJ1bnRpbWVUeXBlSUQgPDwgNCkgKyBjb21waWxlVGltZVR5cGVJRDsN
CisJCQl9IGVsc2Ugew0KKwkJCQl0aGlzLmltcGxpY2l0Q29udmVyc2lvbiB8PSAoVHlwZUlkcy5U
X2ludCA8PCA0KSArIGNvbXBpbGVUaW1lVHlwZUlEOw0KKwkJCX0NCiAJCQlicmVhazsNCiAJCWNh
c2UgVF9KYXZhTGFuZ1N0cmluZyA6DQogCQljYXNlIFRfZmxvYXQgOg0KSW5kZXg6IGNvbXBpbGVy
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jb2RlZ2VuL0NvZGVTdHJlYW0uamF2
YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NvZGVnZW4v
Q29kZVN0cmVhbS5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4xODAuMi4yDQpkaWZmIC11
IC1yMS4xODAuMi4yIENvZGVTdHJlYW0uamF2YQ0KLS0tIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9jb2RlZ2VuL0NvZGVTdHJlYW0uamF2YQk4IE1hciAyMDExIDIz
OjM2OjEyIC0wMDAwCTEuMTgwLjIuMg0KKysrIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9jb2RlZ2VuL0NvZGVTdHJlYW0uamF2YQkyOCBKdWwgMjAxMSAwMToyOTox
OCAtMDAwMA0KQEAgLTIwNTIsNiArMjA1MiwxOSBAQA0KIAkJCWJyZWFrOw0KIAkJY2FzZSBUeXBl
SWRzLkZsb2F0MkxvbmcgOg0KIAkJCWYybCgpOw0KKwkJCWJyZWFrOw0KKwkJY2FzZSBUeXBlSWRz
Lk9iamVjdDJib29sZWFuOg0KKwkJY2FzZSBUeXBlSWRzLk9iamVjdDJieXRlOg0KKwkJY2FzZSBU
eXBlSWRzLk9iamVjdDJzaG9ydDoNCisJCWNhc2UgVHlwZUlkcy5PYmplY3QyaW50Og0KKwkJY2Fz
ZSBUeXBlSWRzLk9iamVjdDJsb25nOg0KKwkJY2FzZSBUeXBlSWRzLk9iamVjdDJmbG9hdDoNCisJ
CWNhc2UgVHlwZUlkcy5PYmplY3QyY2hhcjoNCisJCWNhc2UgVHlwZUlkcy5PYmplY3QyZG91Ymxl
Og0KKwkJCWludCBydW50aW1lVHlwZSA9IChpbXBsaWNpdENvbnZlcnNpb25Db2RlICYgVHlwZUlk
cy5JTVBMSUNJVF9DT05WRVJTSU9OX01BU0spID4+IDQ7DQorCQkJY2hlY2tjYXN0KHJ1bnRpbWVU
eXBlKTsNCisJCQlnZW5lcmF0ZVVuYm94aW5nQ29udmVyc2lvbihydW50aW1lVHlwZSk7DQorCQkJ
YnJlYWs7CQ0KIAl9DQogCWlmICgoaW1wbGljaXRDb252ZXJzaW9uQ29kZSAmIFR5cGVJZHMuQk9Y
SU5HKSAhPSAwKSB7DQogCQkvLyBuZWVkIHRvIHVuYm94L2JveCB0aGUgY29uc3RhbnQNCkluZGV4
OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVJ
ZHMuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xv
b2t1cC9UeXBlSWRzLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjM2LjIuNQ0KZGlmZiAt
dSAtcjEuMzYuMi41IFR5cGVJZHMuamF2YQ0KLS0tIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZUlkcy5qYXZhCTI4IEp1biAyMDExIDE1OjM1OjA3
IC0wMDAwCTEuMzYuMi41DQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2Nv
bXBpbGVyL2xvb2t1cC9UeXBlSWRzLmphdmEJMjggSnVsIDIwMTEgMDE6Mjk6MTggLTAwMDANCkBA
IC0xNzEsNiArMTcxLDE0IEBADQogCWZpbmFsIGludCBOdWxsMk51bGwgPSBUX251bGwgKyAoVF9u
dWxsIDw8IDQpOw0KIAlmaW5hbCBpbnQgTnVsbDJTdHJpbmcgPSBUX251bGwgKyAoVF9KYXZhTGFu
Z1N0cmluZyA8PCA0KTsNCiAJZmluYWwgaW50IE9iamVjdDJPYmplY3QgPSBUX0phdmFMYW5nT2Jq
ZWN0ICsgKFRfSmF2YUxhbmdPYmplY3QgPDwgNCk7DQorCWZpbmFsIGludCBPYmplY3QyYnl0ZSA9
IFRfSmF2YUxhbmdPYmplY3QgKyAoVF9ieXRlIDw8IDQpOw0KKwlmaW5hbCBpbnQgT2JqZWN0MnNo
b3J0ID0gVF9KYXZhTGFuZ09iamVjdCArIChUX3Nob3J0IDw8IDQpOw0KKwlmaW5hbCBpbnQgT2Jq
ZWN0MmNoYXIgPSBUX0phdmFMYW5nT2JqZWN0ICsgKFRfY2hhciA8PCA0KTsNCisJZmluYWwgaW50
IE9iamVjdDJpbnQgPSBUX0phdmFMYW5nT2JqZWN0ICsgKFRfaW50IDw8IDQpOw0KKwlmaW5hbCBp
bnQgT2JqZWN0MmxvbmcgPSBUX0phdmFMYW5nT2JqZWN0ICsgKFRfbG9uZyA8PCA0KTsNCisJZmlu
YWwgaW50IE9iamVjdDJmbG9hdCA9IFRfSmF2YUxhbmdPYmplY3QgKyAoVF9mbG9hdCA8PCA0KTsN
CisJZmluYWwgaW50IE9iamVjdDJkb3VibGUgPSBUX0phdmFMYW5nT2JqZWN0ICsgKFRfZG91Ymxl
IDw8IDQpOw0KKwlmaW5hbCBpbnQgT2JqZWN0MmJvb2xlYW4gPSBUX0phdmFMYW5nT2JqZWN0ICsg
KFRfYm9vbGVhbiA8PCA0KTsNCiAJZmluYWwgaW50IEJPWElORyA9IDB4MjAwOw0KIAlmaW5hbCBp
bnQgVU5CT1hJTkcgPSAweDQwMDsNCiB9DQojUCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5j
b21waWxlcg0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9y
ZWdyZXNzaW9uL0Nhc3RUZXN0LmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9l
Y2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0Nhc3RUZXN0LmphdmEsdg0KcmV0
cmlldmluZyByZXZpc2lvbiAxLjUyDQpkaWZmIC11IC1yMS41MiBDYXN0VGVzdC5qYXZhDQotLS0g
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQ2FzdFRl
c3QuamF2YQkxMSBNYXkgMjAxMCAxODo1Mzo1MCAtMDAwMAkxLjUyDQorKysgc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQ2FzdFRlc3QuamF2YQkyOCBK
dWwgMjAxMSAwMToyOToxOSAtMDAwMA0KQEAgLTEsNSArMSw1IEBADQogLyoqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDMsIDIwMTAgSUJNIENvcnBvcmF0aW9uIGFu
ZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAyMDAzLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhl
IGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhl
IHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2Nv
bXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KQEAgLTIyLDcg
KzIyLDkgQEANCiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmltcGwu
Q29tcGlsZXJPcHRpb25zOw0KIA0KIHB1YmxpYyBjbGFzcyBDYXN0VGVzdCBleHRlbmRzIEFic3Ry
YWN0UmVncmVzc2lvblRlc3Qgew0KLQ0KK3N0YXRpYyB7DQorLy8JVEVTVFNfTlVNQkVSUyA9IG5l
dyBpbnRbXSB7IDU4IH07DQorfQ0KIHB1YmxpYyBDYXN0VGVzdChTdHJpbmcgbmFtZSkgew0KIAlz
dXBlcihuYW1lKTsNCiB9DQpAQCAtMTg2OSw2ICsxODcxLDMwMiBAQA0KIAkJIi0tLS0tLS0tLS1c
biINCiAJKTsNCiB9DQorLy9odHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9MzUzMDg1DQorcHVibGljIHZvaWQgdGVzdDA1MSgpIHsNCisJQ29tcGlsZXJPcHRpb25z
IG9wdGlvbnMgPSBuZXcgQ29tcGlsZXJPcHRpb25zKGdldENvbXBpbGVyT3B0aW9ucygpKTsNCisJ
U3RyaW5nIHNvdXJjZSA9DQorCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKyANCisJCQkiCXB1Ymxp
YyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKyANCisJCQkiCQlPYmplY3Qg
eCA9IGZvbygpO1xuIiArIA0KKwkJCSIJCWJvb2xlYW4geSA9IChib29sZWFuKSB4O1xuIiArIA0K
KwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbih5KTtcbiIgKyANCisJCQkiCX1cbiIgKyANCisJCQki
CXB1YmxpYyBzdGF0aWMgT2JqZWN0IGZvbygpIHtcbiIgKyANCisJCQkiCQlyZXR1cm4gQm9vbGVh
bi5UUlVFO1xuIiArIA0KKwkJCSIJfVxuIiArIA0KKwkJCSJ9IjsNCisJaWYgKG9wdGlvbnMuc291
cmNlTGV2ZWwgPCBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV83KSB7DQorCQl0aGlzLnJ1bk5lZ2F0
aXZlVGVzdCgNCisJCQkJbmV3IFN0cmluZ1tdIHsNCisJCQkJCSJYLmphdmEiLA0KKwkJCQkJc291
cmNlDQorCQkJCX0sDQorCQkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJCSIxLiBFUlJPUiBpbiBY
LmphdmEgKGF0IGxpbmUgNClcbiIgKyANCisJCQkJIglib29sZWFuIHkgPSAoYm9vbGVhbikgeDtc
biIgKyANCisJCQkJIgkgICAgICAgICAgICBeXl5eXl5eXl5eXlxuIiArIA0KKwkJCQkiQ2Fubm90
IGNhc3QgZnJvbSBPYmplY3QgdG8gYm9vbGVhblxuIiArIA0KKwkJCQkiLS0tLS0tLS0tLVxuIg0K
KwkJCSk7DQorCX0gZWxzZSB7DQorCQl0aGlzLnJ1bkNvbmZvcm1UZXN0KA0KKwkJCQluZXcgU3Ry
aW5nW10gew0KKwkJCQkJIlguamF2YSIsDQorCQkJCQlzb3VyY2UNCisJCQkJfSwNCisJCQkJInRy
dWUiDQorCQkJKTsNCisJfQ0KK30NCisvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3No
b3dfYnVnLmNnaT9pZD0zNTMwODUNCitwdWJsaWMgdm9pZCB0ZXN0MDUyKCkgew0KKwlDb21waWxl
ck9wdGlvbnMgb3B0aW9ucyA9IG5ldyBDb21waWxlck9wdGlvbnMoZ2V0Q29tcGlsZXJPcHRpb25z
KCkpOw0KKwlTdHJpbmcgc291cmNlID0NCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArIA0KKwkJ
CSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIiArIA0KKwkJCSIJ
CU9iamVjdCB4ID0gZm9vKCk7XG4iICsgDQorCQkJIgkJYnl0ZSB5ID0gKGJ5dGUpIHg7XG4iICsg
DQorCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKHkpO1xuIiArIA0KKwkJCSIJfVxuIiArIA0KKwkJ
CSIJcHVibGljIHN0YXRpYyBPYmplY3QgZm9vKCkge1xuIiArIA0KKwkJCSIJCXJldHVybiBuZXcg
Qnl0ZSgoYnl0ZSkxKTtcbiIgKyANCisJCQkiCX1cbiIgKyANCisJCQkifSI7DQorCWlmIChvcHRp
b25zLnNvdXJjZUxldmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfNykgew0KKwkJdGhpcy5y
dW5OZWdhdGl2ZVRlc3QoDQorCQkJCW5ldyBTdHJpbmdbXSB7DQorCQkJCQkiWC5qYXZhIiwNCisJ
CQkJCXNvdXJjZQ0KKwkJCQl9LA0KKwkJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCQkiMS4gRVJS
T1IgaW4gWC5qYXZhIChhdCBsaW5lIDQpXG4iICsgDQorCQkJCSIJYnl0ZSB5ID0gKGJ5dGUpIHg7
XG4iICsgDQorCQkJCSIJICAgICAgICAgXl5eXl5eXl5cbiIgKyANCisJCQkJIkNhbm5vdCBjYXN0
IGZyb20gT2JqZWN0IHRvIGJ5dGVcbiIgKyANCisJCQkJIi0tLS0tLS0tLS1cbiINCisJCQkpOw0K
Kwl9IGVsc2Ugew0KKwkJdGhpcy5ydW5Db25mb3JtVGVzdCgNCisJCQkJbmV3IFN0cmluZ1tdIHsN
CisJCQkJCSJYLmphdmEiLA0KKwkJCQkJc291cmNlDQorCQkJCX0sDQorCQkJCSIxIg0KKwkJCSk7
DQorCX0NCit9DQorLy9odHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/
aWQ9MzUzMDg1DQorcHVibGljIHZvaWQgdGVzdDA1MygpIHsNCisJQ29tcGlsZXJPcHRpb25zIG9w
dGlvbnMgPSBuZXcgQ29tcGlsZXJPcHRpb25zKGdldENvbXBpbGVyT3B0aW9ucygpKTsNCisJU3Ry
aW5nIHNvdXJjZSA9DQorCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKyANCisJCQkiCXB1YmxpYyBz
dGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKyANCisJCQkiCQlPYmplY3QgeCA9
IGZvbygpO1xuIiArIA0KKwkJCSIJCWNoYXIgeSA9IChjaGFyKSB4O1xuIiArIA0KKwkJCSIJCVN5
c3RlbS5vdXQucHJpbnRsbih5KTtcbiIgKyANCisJCQkiCX1cbiIgKyANCisJCQkiCXB1YmxpYyBz
dGF0aWMgT2JqZWN0IGZvbygpIHtcbiIgKyANCisJCQkiCQlyZXR1cm4gbmV3IENoYXJhY3Rlcign
ZCcpO1xuIiArIA0KKwkJCSIJfVxuIiArIA0KKwkJCSJ9IjsNCisJaWYgKG9wdGlvbnMuc291cmNl
TGV2ZWwgPCBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV83KSB7DQorCQl0aGlzLnJ1bk5lZ2F0aXZl
VGVzdCgNCisJCQkJbmV3IFN0cmluZ1tdIHsNCisJCQkJCSJYLmphdmEiLA0KKwkJCQkJc291cmNl
DQorCQkJCX0sDQorCQkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJCSIxLiBFUlJPUiBpbiBYLmph
dmEgKGF0IGxpbmUgNClcbiIgKyANCisJCQkJIgljaGFyIHkgPSAoY2hhcikgeDtcbiIgKyANCisJ
CQkJIgkgICAgICAgICBeXl5eXl5eXlxuIiArIA0KKwkJCQkiQ2Fubm90IGNhc3QgZnJvbSBPYmpl
Y3QgdG8gY2hhclxuIiArIA0KKwkJCQkiLS0tLS0tLS0tLVxuIg0KKwkJCSk7DQorCX0gZWxzZSB7
DQorCQl0aGlzLnJ1bkNvbmZvcm1UZXN0KA0KKwkJCQluZXcgU3RyaW5nW10gew0KKwkJCQkJIlgu
amF2YSIsDQorCQkJCQlzb3VyY2UNCisJCQkJfSwNCisJCQkJImQiDQorCQkJKTsNCisJfQ0KK30N
CisvL2h0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zNTMwODUN
CitwdWJsaWMgdm9pZCB0ZXN0MDU0KCkgew0KKwlDb21waWxlck9wdGlvbnMgb3B0aW9ucyA9IG5l
dyBDb21waWxlck9wdGlvbnMoZ2V0Q29tcGlsZXJPcHRpb25zKCkpOw0KKwlTdHJpbmcgc291cmNl
ID0NCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArIA0KKwkJCSIJcHVibGljIHN0YXRpYyB2b2lk
IG1haW4oU3RyaW5nW10gYXJncykge1xuIiArIA0KKwkJCSIJCU9iamVjdCB4ID0gZm9vKCk7XG4i
ICsgDQorCQkJIgkJaW50IHkgPSAoaW50KSB4O1xuIiArIA0KKwkJCSIJCVN5c3RlbS5vdXQucHJp
bnRsbih5KTtcbiIgKyANCisJCQkiCX1cbiIgKyANCisJCQkiCXB1YmxpYyBzdGF0aWMgT2JqZWN0
IGZvbygpIHtcbiIgKyANCisJCQkiCQlyZXR1cm4gbmV3IEludGVnZXIoMCk7XG4iICsgDQorCQkJ
Igl9XG4iICsgDQorCQkJIn0iOw0KKwlpZiAob3B0aW9ucy5zb3VyY2VMZXZlbCA8IENsYXNzRmls
ZUNvbnN0YW50cy5KREsxXzcpIHsNCisJCXRoaXMucnVuTmVnYXRpdmVUZXN0KA0KKwkJCQluZXcg
U3RyaW5nW10gew0KKwkJCQkJIlguamF2YSIsDQorCQkJCQlzb3VyY2UNCisJCQkJfSwNCisJCQkJ
Ii0tLS0tLS0tLS1cbiIgKyANCisJCQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA0KVxu
IiArIA0KKwkJCQkiCWludCB5ID0gKGludCkgeDtcbiIgKyANCisJCQkJIgkgICAgICAgIF5eXl5e
Xl5cbiIgKyANCisJCQkJIkNhbm5vdCBjYXN0IGZyb20gT2JqZWN0IHRvIGludFxuIiArIA0KKwkJ
CQkiLS0tLS0tLS0tLVxuIg0KKwkJCSk7DQorCX0gZWxzZSB7DQorCQl0aGlzLnJ1bkNvbmZvcm1U
ZXN0KA0KKwkJCQluZXcgU3RyaW5nW10gew0KKwkJCQkJIlguamF2YSIsDQorCQkJCQlzb3VyY2UN
CisJCQkJfSwNCisJCQkJIjAiDQorCQkJKTsNCisJfQ0KK30NCisvL2h0dHBzOi8vYnVncy5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zNTMwODUNCitwdWJsaWMgdm9pZCB0ZXN0MDU1
KCkgew0KKwlDb21waWxlck9wdGlvbnMgb3B0aW9ucyA9IG5ldyBDb21waWxlck9wdGlvbnMoZ2V0
Q29tcGlsZXJPcHRpb25zKCkpOw0KKwlTdHJpbmcgc291cmNlID0NCisJCQkicHVibGljIGNsYXNz
IFgge1xuIiArIA0KKwkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykg
e1xuIiArIA0KKwkJCSIJCU9iamVjdCB4ID0gZm9vKCk7XG4iICsgDQorCQkJIgkJbG9uZyB5ID0g
KGxvbmcpIHg7XG4iICsgDQorCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKHkpO1xuIiArIA0KKwkJ
CSIJfVxuIiArIA0KKwkJCSIJcHVibGljIHN0YXRpYyBPYmplY3QgZm9vKCkge1xuIiArIA0KKwkJ
CSIJCXJldHVybiBuZXcgTG9uZyhMb25nLk1BWF9WQUxVRSk7XG4iICsgDQorCQkJIgl9XG4iICsg
DQorCQkJIn0iOw0KKwlpZiAob3B0aW9ucy5zb3VyY2VMZXZlbCA8IENsYXNzRmlsZUNvbnN0YW50
cy5KREsxXzcpIHsNCisJCXRoaXMucnVuTmVnYXRpdmVUZXN0KA0KKwkJCQluZXcgU3RyaW5nW10g
ew0KKwkJCQkJIlguamF2YSIsDQorCQkJCQlzb3VyY2UNCisJCQkJfSwNCisJCQkJIi0tLS0tLS0t
LS1cbiIgKyANCisJCQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA0KVxuIiArIA0KKwkJ
CQkiCWxvbmcgeSA9IChsb25nKSB4O1xuIiArIA0KKwkJCQkiCSAgICAgICAgIF5eXl5eXl5eXG4i
ICsgDQorCQkJCSJDYW5ub3QgY2FzdCBmcm9tIE9iamVjdCB0byBsb25nXG4iICsgDQorCQkJCSIt
LS0tLS0tLS0tXG4iDQorCQkJKTsNCisJfSBlbHNlIHsNCisJCXRoaXMucnVuQ29uZm9ybVRlc3Qo
DQorCQkJCW5ldyBTdHJpbmdbXSB7DQorCQkJCQkiWC5qYXZhIiwNCisJCQkJCXNvdXJjZQ0KKwkJ
CQl9LA0KKwkJCQkiOTIyMzM3MjAzNjg1NDc3NTgwNyINCisJCQkpOw0KKwl9DQorfQ0KKy8vaHR0
cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM1MzA4NQ0KK3B1Ymxp
YyB2b2lkIHRlc3QwNTYoKSB7DQorCUNvbXBpbGVyT3B0aW9ucyBvcHRpb25zID0gbmV3IENvbXBp
bGVyT3B0aW9ucyhnZXRDb21waWxlck9wdGlvbnMoKSk7DQorCVN0cmluZyBzb3VyY2UgPQ0KKwkJ
CSJwdWJsaWMgY2xhc3MgWCB7XG4iICsgDQorCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihT
dHJpbmdbXSBhcmdzKSB7XG4iICsgDQorCQkJIgkJT2JqZWN0IHggPSBmb28oKTtcbiIgKyANCisJ
CQkiCQlzaG9ydCB5ID0gKHNob3J0KSB4O1xuIiArIA0KKwkJCSIJCVN5c3RlbS5vdXQucHJpbnRs
bih5KTtcbiIgKyANCisJCQkiCX1cbiIgKyANCisJCQkiCXB1YmxpYyBzdGF0aWMgT2JqZWN0IGZv
bygpIHtcbiIgKyANCisJCQkiCQlyZXR1cm4gbmV3IFNob3J0KChzaG9ydCkgMSk7XG4iICsgDQor
CQkJIgl9XG4iICsgDQorCQkJIn0iOw0KKwlpZiAob3B0aW9ucy5zb3VyY2VMZXZlbCA8IENsYXNz
RmlsZUNvbnN0YW50cy5KREsxXzcpIHsNCisJCXRoaXMucnVuTmVnYXRpdmVUZXN0KA0KKwkJCQlu
ZXcgU3RyaW5nW10gew0KKwkJCQkJIlguamF2YSIsDQorCQkJCQlzb3VyY2UNCisJCQkJfSwNCisJ
CQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA0
KVxuIiArIA0KKwkJCQkiCXNob3J0IHkgPSAoc2hvcnQpIHg7XG4iICsgDQorCQkJCSIJICAgICAg
ICAgIF5eXl5eXl5eXlxuIiArIA0KKwkJCQkiQ2Fubm90IGNhc3QgZnJvbSBPYmplY3QgdG8gc2hv
cnRcbiIgKyANCisJCQkJIi0tLS0tLS0tLS1cbiINCisJCQkpOw0KKwl9IGVsc2Ugew0KKwkJdGhp
cy5ydW5Db25mb3JtVGVzdCgNCisJCQkJbmV3IFN0cmluZ1tdIHsNCisJCQkJCSJYLmphdmEiLA0K
KwkJCQkJc291cmNlDQorCQkJCX0sDQorCQkJCSIxIg0KKwkJCSk7DQorCX0NCit9DQorLy9odHRw
czovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzUzMDg1DQorcHVibGlj
IHZvaWQgdGVzdDA1NygpIHsNCisJQ29tcGlsZXJPcHRpb25zIG9wdGlvbnMgPSBuZXcgQ29tcGls
ZXJPcHRpb25zKGdldENvbXBpbGVyT3B0aW9ucygpKTsNCisJU3RyaW5nIHNvdXJjZSA9DQorCQkJ
InB1YmxpYyBjbGFzcyBYIHtcbiIgKyANCisJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0
cmluZ1tdIGFyZ3MpIHtcbiIgKyANCisJCQkiCQlPYmplY3QgeCA9IGZvbygpO1xuIiArIA0KKwkJ
CSIJCWRvdWJsZSB5ID0gKGRvdWJsZSkgeDtcbiIgKyANCisJCQkiCQlTeXN0ZW0ub3V0LnByaW50
bG4oeSk7XG4iICsgDQorCQkJIgl9XG4iICsgDQorCQkJIglwdWJsaWMgc3RhdGljIE9iamVjdCBm
b28oKSB7XG4iICsgDQorCQkJIgkJcmV0dXJuIG5ldyBEb3VibGUoMS4wKTtcbiIgKyANCisJCQki
CX1cbiIgKyANCisJCQkifSI7DQorCWlmIChvcHRpb25zLnNvdXJjZUxldmVsIDwgQ2xhc3NGaWxl
Q29uc3RhbnRzLkpESzFfNykgew0KKwkJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoDQorCQkJCW5ldyBT
dHJpbmdbXSB7DQorCQkJCQkiWC5qYXZhIiwNCisJCQkJCXNvdXJjZQ0KKwkJCQl9LA0KKwkJCQki
LS0tLS0tLS0tLVxuIiArIA0KKwkJCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDQpXG4i
ICsgDQorCQkJCSIJZG91YmxlIHkgPSAoZG91YmxlKSB4O1xuIiArIA0KKwkJCQkiCSAgICAgICAg
ICAgXl5eXl5eXl5eXlxuIiArIA0KKwkJCQkiQ2Fubm90IGNhc3QgZnJvbSBPYmplY3QgdG8gZG91
YmxlXG4iICsgDQorCQkJCSItLS0tLS0tLS0tXG4iDQorCQkJKTsNCisJfSBlbHNlIHsNCisJCXRo
aXMucnVuQ29uZm9ybVRlc3QoDQorCQkJCW5ldyBTdHJpbmdbXSB7DQorCQkJCQkiWC5qYXZhIiwN
CisJCQkJCXNvdXJjZQ0KKwkJCQl9LA0KKwkJCQkiMS4wIg0KKwkJCSk7DQorCX0NCit9DQorLy9o
dHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzUzMDg1DQorcHVi
bGljIHZvaWQgdGVzdDA1OCgpIHsNCisJQ29tcGlsZXJPcHRpb25zIG9wdGlvbnMgPSBuZXcgQ29t
cGlsZXJPcHRpb25zKGdldENvbXBpbGVyT3B0aW9ucygpKTsNCisJU3RyaW5nIHNvdXJjZSA9DQor
CQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKyANCisJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWlu
KFN0cmluZ1tdIGFyZ3MpIHtcbiIgKyANCisJCQkiCQlPYmplY3QgeCA9IGZvbygpO1xuIiArIA0K
KwkJCSIJCWZsb2F0IHkgPSAoZmxvYXQpIHg7XG4iICsgDQorCQkJIgkJU3lzdGVtLm91dC5wcmlu
dGxuKHkpO1xuIiArIA0KKwkJCSIJfVxuIiArIA0KKwkJCSIJcHVibGljIHN0YXRpYyBPYmplY3Qg
Zm9vKCkge1xuIiArIA0KKwkJCSIJCXJldHVybiBuZXcgRmxvYXQoMS4wZik7XG4iICsgDQorCQkJ
Igl9XG4iICsgDQorCQkJIn0iOw0KKwlpZiAob3B0aW9ucy5zb3VyY2VMZXZlbCA8IENsYXNzRmls
ZUNvbnN0YW50cy5KREsxXzcpIHsNCisJCXRoaXMucnVuTmVnYXRpdmVUZXN0KA0KKwkJCQluZXcg
U3RyaW5nW10gew0KKwkJCQkJIlguamF2YSIsDQorCQkJCQlzb3VyY2UNCisJCQkJfSwNCisJCQkJ
Ii0tLS0tLS0tLS1cbiIgKyANCisJCQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA0KVxu
IiArIA0KKwkJCQkiCWZsb2F0IHkgPSAoZmxvYXQpIHg7XG4iICsgDQorCQkJCSIJICAgICAgICAg
IF5eXl5eXl5eXlxuIiArIA0KKwkJCQkiQ2Fubm90IGNhc3QgZnJvbSBPYmplY3QgdG8gZmxvYXRc
biIgKyANCisJCQkJIi0tLS0tLS0tLS1cbiINCisJCQkpOw0KKwl9IGVsc2Ugew0KKwkJdGhpcy5y
dW5Db25mb3JtVGVzdCgNCisJCQkJbmV3IFN0cmluZ1tdIHsNCisJCQkJCSJYLmphdmEiLA0KKwkJ
CQkJc291cmNlDQorCQkJCX0sDQorCQkJCSIxLjAiDQorCQkJKTsNCisJfQ0KK30NCiBwdWJsaWMg
c3RhdGljIENsYXNzIHRlc3RDbGFzcygpIHsNCiAJcmV0dXJuIENhc3RUZXN0LmNsYXNzOw0KIH0N
Cg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>200492</attachid>
            <date>2011-07-28 02:44:00 -0400</date>
            <delta_ts>2011-07-28 14:06:12 -0400</delta_ts>
            <desc>fix v2.1 + more tests + comments</desc>
            <filename>patch353085.txt</filename>
            <type>text/plain</type>
            <size>23206</size>
            <attacher name="Ayushman Jain">amj87.iitr</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0V4
cHJlc3Npb24uamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2FzdC9FeHByZXNzaW9uLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjEzMy4yLjUN
CmRpZmYgLXUgLXIxLjEzMy4yLjUgRXhwcmVzc2lvbi5qYXZhDQotLS0gY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9FeHByZXNzaW9uLmphdmEJMzEgTWFyIDIw
MTEgMDc6MjA6MjUgLTAwMDAJMS4xMzMuMi41DQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2FzdC9FeHByZXNzaW9uLmphdmEJMjggSnVsIDIwMTEgMDY6NDE6
NTQgLTAwMDANCkBAIC0yNDMsNiArMjQzLDcgQEANCiAJLy8gaWRlbnRpdHkgY29udmVyc2lvbiBj
YW5ub3QgYmUgcGVyZm9ybWVkIHVwZnJvbnQsIGR1ZSB0byBzaWRlLWVmZmVjdHMNCiAJLy8gbGlr
ZSBjb25zdGFudCBwcm9wYWdhdGlvbg0KIAlib29sZWFuIHVzZTE1c3BlY2lmaWNzID0gc2NvcGUu
Y29tcGlsZXJPcHRpb25zKCkuc291cmNlTGV2ZWwgPj0gQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFf
NTsNCisJYm9vbGVhbiB1c2UxN3NwZWNpZmljcyA9IHNjb3BlLmNvbXBpbGVyT3B0aW9ucygpLnNv
dXJjZUxldmVsID49IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzc7DQogCWlmIChjYXN0VHlwZS5p
c0Jhc2VUeXBlKCkpIHsNCiAJCWlmIChleHByZXNzaW9uVHlwZS5pc0Jhc2VUeXBlKCkpIHsNCiAJ
CQlpZiAoZXhwcmVzc2lvblR5cGUgPT0gY2FzdFR5cGUpIHsNCkBAIC0yNjUsNiArMjY2LDkgQEAN
CiAJCQkJcmV0dXJuIHRydWU7DQogDQogCQkJfQ0KKwkJfSBlbHNlIGlmICh1c2UxN3NwZWNpZmlj
cyAmJiBleHByZXNzaW9uVHlwZS5pZCA9PSBUeXBlSWRzLlRfSmF2YUxhbmdPYmplY3Qpew0KKwkJ
CS8vIGNhc3QgZnJvbSBPYmplY3QgdG8gYmFzZSB0eXBlIGFsbG93ZWQgZnJvbSAxLjcsIHNlZSBK
TFMgJDUuNQ0KKwkJCXJldHVybiB0cnVlOw0KIAkJfSBlbHNlIGlmICh1c2UxNXNwZWNpZmljcw0K
IAkJCQkJCQkmJiBzY29wZS5lbnZpcm9ubWVudCgpLmNvbXB1dGVCb3hpbmdUeXBlKGV4cHJlc3Np
b25UeXBlKS5pc0NvbXBhdGlibGVXaXRoKGNhc3RUeXBlKSkgeyAvLyB1bmJveGluZyAtIG9ubHkg
d2lkZW5pbmcgbWF0Y2ggaXMgYWxsb3dlZA0KIAkJCXRhZ0FzVW5uZWNlc3NhcnlDYXN0KHNjb3Bl
LCBjYXN0VHlwZSk7DQpAQCAtNTk2LDcgKzYwMCwxMSBAQA0KIAkJY2FzZSBUX2J5dGUgOg0KIAkJ
Y2FzZSBUX3Nob3J0IDoNCiAJCWNhc2UgVF9jaGFyIDoNCi0JCQl0aGlzLmltcGxpY2l0Q29udmVy
c2lvbiB8PSAoVHlwZUlkcy5UX2ludCA8PCA0KSArIGNvbXBpbGVUaW1lVHlwZUlEOw0KKwkJCWlm
IChjb21waWxlVGltZVR5cGVJRCA9PSBUeXBlSWRzLlRfSmF2YUxhbmdPYmplY3QpIHsNCisJCQkJ
dGhpcy5pbXBsaWNpdENvbnZlcnNpb24gfD0gKHJ1bnRpbWVUeXBlSUQgPDwgNCkgKyBjb21waWxl
VGltZVR5cGVJRDsNCisJCQl9IGVsc2Ugew0KKwkJCQl0aGlzLmltcGxpY2l0Q29udmVyc2lvbiB8
PSAoVHlwZUlkcy5UX2ludCA8PCA0KSArIGNvbXBpbGVUaW1lVHlwZUlEOw0KKwkJCX0NCiAJCQli
cmVhazsNCiAJCWNhc2UgVF9KYXZhTGFuZ1N0cmluZyA6DQogCQljYXNlIFRfZmxvYXQgOg0KSW5k
ZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jb2RlZ2VuL0Nv
ZGVTdHJlYW0uamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2NvZGVnZW4vQ29kZVN0cmVhbS5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4xODAu
Mi4yDQpkaWZmIC11IC1yMS4xODAuMi4yIENvZGVTdHJlYW0uamF2YQ0KLS0tIGNvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jb2RlZ2VuL0NvZGVTdHJlYW0uamF2YQk4
IE1hciAyMDExIDIzOjM2OjEyIC0wMDAwCTEuMTgwLjIuMg0KKysrIGNvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jb2RlZ2VuL0NvZGVTdHJlYW0uamF2YQkyOCBKdWwg
MjAxMSAwNjo0MjowMSAtMDAwMA0KQEAgLTIwNTIsNiArMjA1MiwyMiBAQA0KIAkJCWJyZWFrOw0K
IAkJY2FzZSBUeXBlSWRzLkZsb2F0MkxvbmcgOg0KIAkJCWYybCgpOw0KKwkJCWJyZWFrOw0KKwkJ
Y2FzZSBUeXBlSWRzLk9iamVjdDJib29sZWFuOg0KKwkJY2FzZSBUeXBlSWRzLk9iamVjdDJieXRl
Og0KKwkJY2FzZSBUeXBlSWRzLk9iamVjdDJzaG9ydDoNCisJCWNhc2UgVHlwZUlkcy5PYmplY3Qy
aW50Og0KKwkJY2FzZSBUeXBlSWRzLk9iamVjdDJsb25nOg0KKwkJY2FzZSBUeXBlSWRzLk9iamVj
dDJmbG9hdDoNCisJCWNhc2UgVHlwZUlkcy5PYmplY3QyY2hhcjoNCisJCWNhc2UgVHlwZUlkcy5P
YmplY3QyZG91YmxlOg0KKwkJCS8vIHNlZSB0YWJsZSA1LjEgaW4gSkxTIFM1LjUNCisJCQkvLyBh
biBPYmplY3QgdG8geCBjb252ZXJzaW9uIHNob3VsZCBoYXZlIGEgY2hlY2sgY2FzdA0KKwkJCS8v
IGFuZCBhbiB1bmJveGluZyBjb252ZXJzaW9uLg0KKwkJCWludCBydW50aW1lVHlwZSA9IChpbXBs
aWNpdENvbnZlcnNpb25Db2RlICYgVHlwZUlkcy5JTVBMSUNJVF9DT05WRVJTSU9OX01BU0spID4+
IDQ7DQorCQkJY2hlY2tjYXN0KHJ1bnRpbWVUeXBlKTsNCisJCQlnZW5lcmF0ZVVuYm94aW5nQ29u
dmVyc2lvbihydW50aW1lVHlwZSk7DQorCQkJYnJlYWs7CQ0KIAl9DQogCWlmICgoaW1wbGljaXRD
b252ZXJzaW9uQ29kZSAmIFR5cGVJZHMuQk9YSU5HKSAhPSAwKSB7DQogCQkvLyBuZWVkIHRvIHVu
Ym94L2JveCB0aGUgY29uc3RhbnQNCkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVJZHMuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6
IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlSWRzLmphdmEsdg0KcmV0cmlldmlu
ZyByZXZpc2lvbiAxLjM2LjIuNQ0KZGlmZiAtdSAtcjEuMzYuMi41IFR5cGVJZHMuamF2YQ0KLS0t
IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZUlk
cy5qYXZhCTI4IEp1biAyMDExIDE1OjM1OjA3IC0wMDAwCTEuMzYuMi41DQorKysgY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlSWRzLmphdmEJMjgg
SnVsIDIwMTEgMDY6NDI6MDEgLTAwMDANCkBAIC0xNzEsNiArMTcxLDE0IEBADQogCWZpbmFsIGlu
dCBOdWxsMk51bGwgPSBUX251bGwgKyAoVF9udWxsIDw8IDQpOw0KIAlmaW5hbCBpbnQgTnVsbDJT
dHJpbmcgPSBUX251bGwgKyAoVF9KYXZhTGFuZ1N0cmluZyA8PCA0KTsNCiAJZmluYWwgaW50IE9i
amVjdDJPYmplY3QgPSBUX0phdmFMYW5nT2JqZWN0ICsgKFRfSmF2YUxhbmdPYmplY3QgPDwgNCk7
DQorCWZpbmFsIGludCBPYmplY3QyYnl0ZSA9IFRfSmF2YUxhbmdPYmplY3QgKyAoVF9ieXRlIDw8
IDQpOw0KKwlmaW5hbCBpbnQgT2JqZWN0MnNob3J0ID0gVF9KYXZhTGFuZ09iamVjdCArIChUX3No
b3J0IDw8IDQpOw0KKwlmaW5hbCBpbnQgT2JqZWN0MmNoYXIgPSBUX0phdmFMYW5nT2JqZWN0ICsg
KFRfY2hhciA8PCA0KTsNCisJZmluYWwgaW50IE9iamVjdDJpbnQgPSBUX0phdmFMYW5nT2JqZWN0
ICsgKFRfaW50IDw8IDQpOw0KKwlmaW5hbCBpbnQgT2JqZWN0MmxvbmcgPSBUX0phdmFMYW5nT2Jq
ZWN0ICsgKFRfbG9uZyA8PCA0KTsNCisJZmluYWwgaW50IE9iamVjdDJmbG9hdCA9IFRfSmF2YUxh
bmdPYmplY3QgKyAoVF9mbG9hdCA8PCA0KTsNCisJZmluYWwgaW50IE9iamVjdDJkb3VibGUgPSBU
X0phdmFMYW5nT2JqZWN0ICsgKFRfZG91YmxlIDw8IDQpOw0KKwlmaW5hbCBpbnQgT2JqZWN0MmJv
b2xlYW4gPSBUX0phdmFMYW5nT2JqZWN0ICsgKFRfYm9vbGVhbiA8PCA0KTsNCiAJZmluYWwgaW50
IEJPWElORyA9IDB4MjAwOw0KIAlmaW5hbCBpbnQgVU5CT1hJTkcgPSAweDQwMDsNCiB9DQojUCBv
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cw0KSW5kZXg6IEVjbGlwc2UgSmF2YSBUZXN0cyBDb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9Db25mb3JtVGVz
dC5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2hvbWUvY3ZzL251bWJhdC9vcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy9FY2xpcHNlIEphdmEgVGVzdHMgQ29tcGlsZXIvb3JnL2VjbGlwc2Uv
amR0L3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQ29uZm9ybVRlc3QuamF2YSx2DQpyZXRyaWV2
aW5nIHJldmlzaW9uIDEuMTU2LjYuMg0KZGlmZiAtdSAtcjEuMTU2LjYuMiBDb25mb3JtVGVzdC5q
YXZhDQotLS0gRWNsaXBzZSBKYXZhIFRlc3RzIENvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC90ZXN0
cy9jb21waWxlci9yZWdyZXNzaW9uL0NvbmZvcm1UZXN0LmphdmEJMTMgSnVsIDIwMTEgMTI6MzQ6
NTkgLTAwMDAJMS4xNTYuNi4yDQorKysgRWNsaXBzZSBKYXZhIFRlc3RzIENvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0NvbmZvcm1UZXN0LmphdmEJMjgg
SnVsIDIwMTEgMDY6NDI6NDIgLTAwMDANCkBAIC03NjAyLDcgKzc2MDIsNzkgQEANCiAJCQkifVxu
IiwNCiAJCX0pOyAvLyBjdXN0b20gcmVxdWVzdG9yDQogfQ0KLQ0KKy8vIGh0dHBzOi8vYnVncy5l
Y2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zNTMwODUNCisvLyBDb25mb3JtIHRoYXQg
YSBjaGVjayBjYXN0IGFuZCB1bmJveGluZyBjb252ZXJzaW9uIGFyZSBnZW5lcmF0ZWQuDQorcHVi
bGljIHZvaWQgdGVzdEJ1ZzM1MzA4NSgpIHRocm93cyBFeGNlcHRpb257DQorCUNvbXBpbGVyT3B0
aW9ucyBvcHRpb25zID0gbmV3IENvbXBpbGVyT3B0aW9ucyhnZXRDb21waWxlck9wdGlvbnMoKSk7
DQorCVN0cmluZyBzb3VyY2UgPQ0KKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsgDQorCQkJIglw
dWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iICsgDQorCQkJIgkJT2Jq
ZWN0IHggPSBmb28oKTtcbiIgKyANCisJCQkiCQlpbnQgeSA9IChpbnQpIHg7XG4iICsgDQorCQkJ
IgkJU3lzdGVtLm91dC5wcmludGxuKHkpO1xuIiArIA0KKwkJCSIJfVxuIiArIA0KKwkJCSIJcHVi
bGljIHN0YXRpYyBPYmplY3QgZm9vKCkge1xuIiArIA0KKwkJCSIJCXJldHVybiBuZXcgSW50ZWdl
cigxKTtcbiIgKyANCisJCQkiCX1cbiIgKyANCisJCQkifSI7DQorCWlmIChvcHRpb25zLnNvdXJj
ZUxldmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfNykgew0KKwkJdGhpcy5ydW5OZWdhdGl2
ZVRlc3QoDQorCQkJCW5ldyBTdHJpbmdbXSB7DQorCQkJCQkiWC5qYXZhIiwNCisJCQkJCXNvdXJj
ZQ0KKwkJCQl9LA0KKwkJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCQkiMS4gRVJST1IgaW4gWC5q
YXZhIChhdCBsaW5lIDQpXG4iICsgDQorCQkJCSIJaW50IHkgPSAoaW50KSB4O1xuIiArIA0KKwkJ
CQkiCSAgICAgICAgXl5eXl5eXlxuIiArIA0KKwkJCQkiQ2Fubm90IGNhc3QgZnJvbSBPYmplY3Qg
dG8gaW50XG4iICsgDQorCQkJCSItLS0tLS0tLS0tXG4iDQorCQkJKTsNCisJfSBlbHNlIHsNCisJ
CXRoaXMucnVuQ29uZm9ybVRlc3QoDQorCQkJCW5ldyBTdHJpbmdbXSB7DQorCQkJCQkiWC5qYXZh
IiwNCisJCQkJCXNvdXJjZQ0KKwkJCQl9LA0KKwkJCQkiMSINCisJCQkpOw0KKwkJU3RyaW5nIGV4
cGVjdGVkT3V0cHV0ID0gDQorCQkJCSIgIC8vIE1ldGhvZCBkZXNjcmlwdG9yICMxNSAoW0xqYXZh
L2xhbmcvU3RyaW5nOylWXG4iICsgDQorCQkJCSIgIC8vIFN0YWNrOiAyLCBMb2NhbHM6IDNcbiIg
KyANCisJCQkJIiAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oamF2YS5sYW5nLlN0cmluZ1tdIGFy
Z3MpO1xuIiArIA0KKwkJCQkiICAgICAwICBpbnZva2VzdGF0aWMgWC5mb28oKSA6IGphdmEubGFu
Zy5PYmplY3QgWzE2XVxuIiArIA0KKwkJCQkiICAgICAzICBhc3RvcmVfMSBbeF1cbiIgKyANCisJ
CQkJIiAgICAgNCAgYWxvYWRfMSBbeF1cbiIgKyANCisJCQkJIiAgICAgNSAgY2hlY2tjYXN0IGph
dmEubGFuZy5JbnRlZ2VyIFsyMF1cbiIgKyANCisJCQkJIiAgICAgOCAgaW52b2tldmlydHVhbCBq
YXZhLmxhbmcuSW50ZWdlci5pbnRWYWx1ZSgpIDogaW50IFsyMl1cbiIgKyANCisJCQkJIiAgICAx
MSAgaXN0b3JlXzIgW3ldXG4iICsgDQorCQkJCSIgICAgMTIgIGdldHN0YXRpYyBqYXZhLmxhbmcu
U3lzdGVtLm91dCA6IGphdmEuaW8uUHJpbnRTdHJlYW0gWzI2XVxuIiArIA0KKwkJCQkiICAgIDE1
ICBpbG9hZF8yIFt5XVxuIiArIA0KKwkJCQkiICAgIDE2ICBpbnZva2V2aXJ0dWFsIGphdmEuaW8u
UHJpbnRTdHJlYW0ucHJpbnRsbihpbnQpIDogdm9pZCBbMzJdXG4iICsgDQorCQkJCSIgICAgMTkg
IHJldHVyblxuIiArIA0KKwkJCQkiICAgICAgTGluZSBudW1iZXJzOlxuIiArIA0KKwkJCQkiICAg
ICAgICBbcGM6IDAsIGxpbmU6IDNdXG4iICsgDQorCQkJCSIgICAgICAgIFtwYzogNCwgbGluZTog
NF1cbiIgKyANCisJCQkJIiAgICAgICAgW3BjOiAxMiwgbGluZTogNV1cbiIgKyANCisJCQkJIiAg
ICAgICAgW3BjOiAxOSwgbGluZTogNl1cbiIgKyANCisJCQkJIiAgICAgIExvY2FsIHZhcmlhYmxl
IHRhYmxlOlxuIiArIA0KKwkJCQkiICAgICAgICBbcGM6IDAsIHBjOiAyMF0gbG9jYWw6IGFyZ3Mg
aW5kZXg6IDAgdHlwZTogamF2YS5sYW5nLlN0cmluZ1tdXG4iICsgDQorCQkJCSIgICAgICAgIFtw
YzogNCwgcGM6IDIwXSBsb2NhbDogeCBpbmRleDogMSB0eXBlOiBqYXZhLmxhbmcuT2JqZWN0XG4i
ICsgDQorCQkJCSIgICAgICAgIFtwYzogMTIsIHBjOiAyMF0gbG9jYWw6IHkgaW5kZXg6IDIgdHlw
ZTogaW50XG4iICsgDQorCQkJCSIgIFxuIjsNCisJCUZpbGUgZiA9IG5ldyBGaWxlKE9VVFBVVF9E
SVIgKyBGaWxlLnNlcGFyYXRvciArICJYLmNsYXNzIik7DQorCQlieXRlW10gY2xhc3NGaWxlQnl0
ZXMgPSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIudXRpbC5VdGlsLmdldEZpbGVC
eXRlQ29udGVudChmKTsNCisJCUNsYXNzRmlsZUJ5dGVzRGlzYXNzZW1ibGVyIGRpc2Fzc2VtYmxl
ciA9IFRvb2xGYWN0b3J5LmNyZWF0ZURlZmF1bHRDbGFzc0ZpbGVCeXRlc0Rpc2Fzc2VtYmxlcigp
Ow0KKwkJU3RyaW5nIHJlc3VsdCA9IGRpc2Fzc2VtYmxlci5kaXNhc3NlbWJsZShjbGFzc0ZpbGVC
eXRlcywgIlxuIiwgQ2xhc3NGaWxlQnl0ZXNEaXNhc3NlbWJsZXIuREVUQUlMRUQpOw0KKwkJaW50
IGluZGV4ID0gcmVzdWx0LmluZGV4T2YoZXhwZWN0ZWRPdXRwdXQpOw0KKwkJaWYgKGluZGV4ID09
IC0xIHx8IGV4cGVjdGVkT3V0cHV0Lmxlbmd0aCgpID09IDApIHsNCisJCQlTeXN0ZW0ub3V0LnBy
aW50bG4oVXRpbC5kaXNwbGF5U3RyaW5nKHJlc3VsdCwgMykpOw0KKwkJfQ0KKwkJaWYgKGluZGV4
ID09IC0xKSB7DQorCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBjb250ZW50cyIsIGV4cGVjdGVkT3V0
cHV0LCByZXN1bHQpOw0KKwkJfQ0KKwl9DQorfQ0KIHB1YmxpYyBzdGF0aWMgQ2xhc3MgdGVzdENs
YXNzKCkgew0KIAlyZXR1cm4gQ29uZm9ybVRlc3QuY2xhc3M7DQogfQ0KI1Agb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXINCkluZGV4OiBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9DYXN0VGVzdC5qYXZhDQo9PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1Mg
ZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxl
ci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9DYXN0
VGVzdC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS41Mg0KZGlmZiAtdSAtcjEuNTIgQ2Fz
dFRlc3QuamF2YQ0KLS0tIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9y
ZWdyZXNzaW9uL0Nhc3RUZXN0LmphdmEJMTEgTWF5IDIwMTAgMTg6NTM6NTAgLTAwMDAJMS41Mg0K
KysrIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0Nh
c3RUZXN0LmphdmEJMjggSnVsIDIwMTEgMDY6NDI6NDYgLTAwMDANCkBAIC0xLDUgKzEsNSBAQA0K
IC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDAzLCAyMDEwIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAoYykgMjAwMywgMjAxMSBJ
Qk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlz
IHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQogICogYXJlIG1hZGUgYXZh
aWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4w
DQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFi
bGUgYXQNCkBAIC0yMiw3ICsyMiw5IEBADQogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb21waWxlci5pbXBsLkNvbXBpbGVyT3B0aW9uczsNCiANCiBwdWJsaWMgY2xhc3MgQ2FzdFRl
c3QgZXh0ZW5kcyBBYnN0cmFjdFJlZ3Jlc3Npb25UZXN0IHsNCi0NCitzdGF0aWMgew0KKy8vCVRF
U1RTX05VTUJFUlMgPSBuZXcgaW50W10geyA1OCB9Ow0KK30NCiBwdWJsaWMgQ2FzdFRlc3QoU3Ry
aW5nIG5hbWUpIHsNCiAJc3VwZXIobmFtZSk7DQogfQ0KQEAgLTE4NjksNiArMTg3MSw0OTUgQEAN
CiAJCSItLS0tLS0tLS0tXG4iDQogCSk7DQogfQ0KKy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zNTMwODUNCitwdWJsaWMgdm9pZCB0ZXN0MDUxKCkgew0K
KwlDb21waWxlck9wdGlvbnMgb3B0aW9ucyA9IG5ldyBDb21waWxlck9wdGlvbnMoZ2V0Q29tcGls
ZXJPcHRpb25zKCkpOw0KKwlTdHJpbmcgc291cmNlID0NCisJCQkicHVibGljIGNsYXNzIFgge1xu
IiArIA0KKwkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIiAr
IA0KKwkJCSIJCU9iamVjdCB4ID0gZm9vKCk7XG4iICsgDQorCQkJIgkJYm9vbGVhbiB5ID0gKGJv
b2xlYW4pIHg7XG4iICsgDQorCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKHkpO1xuIiArIA0KKwkJ
CSIJfVxuIiArIA0KKwkJCSIJcHVibGljIHN0YXRpYyBPYmplY3QgZm9vKCkge1xuIiArIA0KKwkJ
CSIJCXJldHVybiBCb29sZWFuLlRSVUU7XG4iICsgDQorCQkJIgl9XG4iICsgDQorCQkJIn0iOw0K
KwlpZiAob3B0aW9ucy5zb3VyY2VMZXZlbCA8IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzcpIHsN
CisJCXRoaXMucnVuTmVnYXRpdmVUZXN0KA0KKwkJCQluZXcgU3RyaW5nW10gew0KKwkJCQkJIlgu
amF2YSIsDQorCQkJCQlzb3VyY2UNCisJCQkJfSwNCisJCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJ
CQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA0KVxuIiArIA0KKwkJCQkiCWJvb2xlYW4g
eSA9IChib29sZWFuKSB4O1xuIiArIA0KKwkJCQkiCSAgICAgICAgICAgIF5eXl5eXl5eXl5eXG4i
ICsgDQorCQkJCSJDYW5ub3QgY2FzdCBmcm9tIE9iamVjdCB0byBib29sZWFuXG4iICsgDQorCQkJ
CSItLS0tLS0tLS0tXG4iDQorCQkJKTsNCisJfSBlbHNlIHsNCisJCXRoaXMucnVuQ29uZm9ybVRl
c3QoDQorCQkJCW5ldyBTdHJpbmdbXSB7DQorCQkJCQkiWC5qYXZhIiwNCisJCQkJCXNvdXJjZQ0K
KwkJCQl9LA0KKwkJCQkidHJ1ZSINCisJCQkpOw0KKwl9DQorfQ0KKy8vIGh0dHBzOi8vYnVncy5l
Y2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zNTMwODUNCitwdWJsaWMgdm9pZCB0ZXN0
MDUyKCkgew0KKwlDb21waWxlck9wdGlvbnMgb3B0aW9ucyA9IG5ldyBDb21waWxlck9wdGlvbnMo
Z2V0Q29tcGlsZXJPcHRpb25zKCkpOw0KKwlTdHJpbmcgc291cmNlID0NCisJCQkicHVibGljIGNs
YXNzIFgge1xuIiArIA0KKwkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJn
cykge1xuIiArIA0KKwkJCSIJCU9iamVjdCB4ID0gZm9vKCk7XG4iICsgDQorCQkJIgkJYnl0ZSB5
ID0gKGJ5dGUpIHg7XG4iICsgDQorCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKHkpO1xuIiArIA0K
KwkJCSIJfVxuIiArIA0KKwkJCSIJcHVibGljIHN0YXRpYyBPYmplY3QgZm9vKCkge1xuIiArIA0K
KwkJCSIJCXJldHVybiBuZXcgQnl0ZSgoYnl0ZSkxKTtcbiIgKyANCisJCQkiCX1cbiIgKyANCisJ
CQkifSI7DQorCWlmIChvcHRpb25zLnNvdXJjZUxldmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRzLkpE
SzFfNykgew0KKwkJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoDQorCQkJCW5ldyBTdHJpbmdbXSB7DQor
CQkJCQkiWC5qYXZhIiwNCisJCQkJCXNvdXJjZQ0KKwkJCQl9LA0KKwkJCQkiLS0tLS0tLS0tLVxu
IiArIA0KKwkJCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDQpXG4iICsgDQorCQkJCSIJ
Ynl0ZSB5ID0gKGJ5dGUpIHg7XG4iICsgDQorCQkJCSIJICAgICAgICAgXl5eXl5eXl5cbiIgKyAN
CisJCQkJIkNhbm5vdCBjYXN0IGZyb20gT2JqZWN0IHRvIGJ5dGVcbiIgKyANCisJCQkJIi0tLS0t
LS0tLS1cbiINCisJCQkpOw0KKwl9IGVsc2Ugew0KKwkJdGhpcy5ydW5Db25mb3JtVGVzdCgNCisJ
CQkJbmV3IFN0cmluZ1tdIHsNCisJCQkJCSJYLmphdmEiLA0KKwkJCQkJc291cmNlDQorCQkJCX0s
DQorCQkJCSIxIg0KKwkJCSk7DQorCX0NCit9DQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3Jn
L2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM1MzA4NQ0KK3B1YmxpYyB2b2lkIHRlc3QwNTMoKSB7DQor
CUNvbXBpbGVyT3B0aW9ucyBvcHRpb25zID0gbmV3IENvbXBpbGVyT3B0aW9ucyhnZXRDb21waWxl
ck9wdGlvbnMoKSk7DQorCVN0cmluZyBzb3VyY2UgPQ0KKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4i
ICsgDQorCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iICsg
DQorCQkJIgkJT2JqZWN0IHggPSBmb28oKTtcbiIgKyANCisJCQkiCQljaGFyIHkgPSAoY2hhcikg
eDtcbiIgKyANCisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oeSk7XG4iICsgDQorCQkJIgl9XG4i
ICsgDQorCQkJIglwdWJsaWMgc3RhdGljIE9iamVjdCBmb28oKSB7XG4iICsgDQorCQkJIgkJcmV0
dXJuIG5ldyBDaGFyYWN0ZXIoJ2QnKTtcbiIgKyANCisJCQkiCX1cbiIgKyANCisJCQkifSI7DQor
CWlmIChvcHRpb25zLnNvdXJjZUxldmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfNykgew0K
KwkJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoDQorCQkJCW5ldyBTdHJpbmdbXSB7DQorCQkJCQkiWC5q
YXZhIiwNCisJCQkJCXNvdXJjZQ0KKwkJCQl9LA0KKwkJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJ
CQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDQpXG4iICsgDQorCQkJCSIJY2hhciB5ID0g
KGNoYXIpIHg7XG4iICsgDQorCQkJCSIJICAgICAgICAgXl5eXl5eXl5cbiIgKyANCisJCQkJIkNh
bm5vdCBjYXN0IGZyb20gT2JqZWN0IHRvIGNoYXJcbiIgKyANCisJCQkJIi0tLS0tLS0tLS1cbiIN
CisJCQkpOw0KKwl9IGVsc2Ugew0KKwkJdGhpcy5ydW5Db25mb3JtVGVzdCgNCisJCQkJbmV3IFN0
cmluZ1tdIHsNCisJCQkJCSJYLmphdmEiLA0KKwkJCQkJc291cmNlDQorCQkJCX0sDQorCQkJCSJk
Ig0KKwkJCSk7DQorCX0NCit9DQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hv
d19idWcuY2dpP2lkPTM1MzA4NQ0KK3B1YmxpYyB2b2lkIHRlc3QwNTQoKSB7DQorCUNvbXBpbGVy
T3B0aW9ucyBvcHRpb25zID0gbmV3IENvbXBpbGVyT3B0aW9ucyhnZXRDb21waWxlck9wdGlvbnMo
KSk7DQorCVN0cmluZyBzb3VyY2UgPQ0KKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsgDQorCQkJ
IglwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iICsgDQorCQkJIgkJ
T2JqZWN0IHggPSBmb28oKTtcbiIgKyANCisJCQkiCQlpbnQgeSA9IChpbnQpIHg7XG4iICsgDQor
CQkJIgkJU3lzdGVtLm91dC5wcmludGxuKHkpO1xuIiArIA0KKwkJCSIJfVxuIiArIA0KKwkJCSIJ
cHVibGljIHN0YXRpYyBPYmplY3QgZm9vKCkge1xuIiArIA0KKwkJCSIJCXJldHVybiBuZXcgSW50
ZWdlcigwKTtcbiIgKyANCisJCQkiCX1cbiIgKyANCisJCQkifSI7DQorCWlmIChvcHRpb25zLnNv
dXJjZUxldmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfNykgew0KKwkJdGhpcy5ydW5OZWdh
dGl2ZVRlc3QoDQorCQkJCW5ldyBTdHJpbmdbXSB7DQorCQkJCQkiWC5qYXZhIiwNCisJCQkJCXNv
dXJjZQ0KKwkJCQl9LA0KKwkJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCQkiMS4gRVJST1IgaW4g
WC5qYXZhIChhdCBsaW5lIDQpXG4iICsgDQorCQkJCSIJaW50IHkgPSAoaW50KSB4O1xuIiArIA0K
KwkJCQkiCSAgICAgICAgXl5eXl5eXlxuIiArIA0KKwkJCQkiQ2Fubm90IGNhc3QgZnJvbSBPYmpl
Y3QgdG8gaW50XG4iICsgDQorCQkJCSItLS0tLS0tLS0tXG4iDQorCQkJKTsNCisJfSBlbHNlIHsN
CisJCXRoaXMucnVuQ29uZm9ybVRlc3QoDQorCQkJCW5ldyBTdHJpbmdbXSB7DQorCQkJCQkiWC5q
YXZhIiwNCisJCQkJCXNvdXJjZQ0KKwkJCQl9LA0KKwkJCQkiMCINCisJCQkpOw0KKwl9DQorfQ0K
Ky8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zNTMwODUN
CitwdWJsaWMgdm9pZCB0ZXN0MDU1KCkgew0KKwlDb21waWxlck9wdGlvbnMgb3B0aW9ucyA9IG5l
dyBDb21waWxlck9wdGlvbnMoZ2V0Q29tcGlsZXJPcHRpb25zKCkpOw0KKwlTdHJpbmcgc291cmNl
ID0NCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArIA0KKwkJCSIJcHVibGljIHN0YXRpYyB2b2lk
IG1haW4oU3RyaW5nW10gYXJncykge1xuIiArIA0KKwkJCSIJCU9iamVjdCB4ID0gZm9vKCk7XG4i
ICsgDQorCQkJIgkJbG9uZyB5ID0gKGxvbmcpIHg7XG4iICsgDQorCQkJIgkJU3lzdGVtLm91dC5w
cmludGxuKHkpO1xuIiArIA0KKwkJCSIJfVxuIiArIA0KKwkJCSIJcHVibGljIHN0YXRpYyBPYmpl
Y3QgZm9vKCkge1xuIiArIA0KKwkJCSIJCXJldHVybiBuZXcgTG9uZyhMb25nLk1BWF9WQUxVRSk7
XG4iICsgDQorCQkJIgl9XG4iICsgDQorCQkJIn0iOw0KKwlpZiAob3B0aW9ucy5zb3VyY2VMZXZl
bCA8IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzcpIHsNCisJCXRoaXMucnVuTmVnYXRpdmVUZXN0
KA0KKwkJCQluZXcgU3RyaW5nW10gew0KKwkJCQkJIlguamF2YSIsDQorCQkJCQlzb3VyY2UNCisJ
CQkJfSwNCisJCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkJIjEuIEVSUk9SIGluIFguamF2YSAo
YXQgbGluZSA0KVxuIiArIA0KKwkJCQkiCWxvbmcgeSA9IChsb25nKSB4O1xuIiArIA0KKwkJCQki
CSAgICAgICAgIF5eXl5eXl5eXG4iICsgDQorCQkJCSJDYW5ub3QgY2FzdCBmcm9tIE9iamVjdCB0
byBsb25nXG4iICsgDQorCQkJCSItLS0tLS0tLS0tXG4iDQorCQkJKTsNCisJfSBlbHNlIHsNCisJ
CXRoaXMucnVuQ29uZm9ybVRlc3QoDQorCQkJCW5ldyBTdHJpbmdbXSB7DQorCQkJCQkiWC5qYXZh
IiwNCisJCQkJCXNvdXJjZQ0KKwkJCQl9LA0KKwkJCQkiOTIyMzM3MjAzNjg1NDc3NTgwNyINCisJ
CQkpOw0KKwl9DQorfQ0KKy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVn
LmNnaT9pZD0zNTMwODUNCitwdWJsaWMgdm9pZCB0ZXN0MDU2KCkgew0KKwlDb21waWxlck9wdGlv
bnMgb3B0aW9ucyA9IG5ldyBDb21waWxlck9wdGlvbnMoZ2V0Q29tcGlsZXJPcHRpb25zKCkpOw0K
KwlTdHJpbmcgc291cmNlID0NCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArIA0KKwkJCSIJcHVi
bGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIiArIA0KKwkJCSIJCU9iamVj
dCB4ID0gZm9vKCk7XG4iICsgDQorCQkJIgkJc2hvcnQgeSA9IChzaG9ydCkgeDtcbiIgKyANCisJ
CQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oeSk7XG4iICsgDQorCQkJIgl9XG4iICsgDQorCQkJIglw
dWJsaWMgc3RhdGljIE9iamVjdCBmb28oKSB7XG4iICsgDQorCQkJIgkJcmV0dXJuIG5ldyBTaG9y
dCgoc2hvcnQpIDEpO1xuIiArIA0KKwkJCSIJfVxuIiArIA0KKwkJCSJ9IjsNCisJaWYgKG9wdGlv
bnMuc291cmNlTGV2ZWwgPCBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV83KSB7DQorCQl0aGlzLnJ1
bk5lZ2F0aXZlVGVzdCgNCisJCQkJbmV3IFN0cmluZ1tdIHsNCisJCQkJCSJYLmphdmEiLA0KKwkJ
CQkJc291cmNlDQorCQkJCX0sDQorCQkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJCSIxLiBFUlJP
UiBpbiBYLmphdmEgKGF0IGxpbmUgNClcbiIgKyANCisJCQkJIglzaG9ydCB5ID0gKHNob3J0KSB4
O1xuIiArIA0KKwkJCQkiCSAgICAgICAgICBeXl5eXl5eXl5cbiIgKyANCisJCQkJIkNhbm5vdCBj
YXN0IGZyb20gT2JqZWN0IHRvIHNob3J0XG4iICsgDQorCQkJCSItLS0tLS0tLS0tXG4iDQorCQkJ
KTsNCisJfSBlbHNlIHsNCisJCXRoaXMucnVuQ29uZm9ybVRlc3QoDQorCQkJCW5ldyBTdHJpbmdb
XSB7DQorCQkJCQkiWC5qYXZhIiwNCisJCQkJCXNvdXJjZQ0KKwkJCQl9LA0KKwkJCQkiMSINCisJ
CQkpOw0KKwl9DQorfQ0KKy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVn
LmNnaT9pZD0zNTMwODUNCitwdWJsaWMgdm9pZCB0ZXN0MDU3KCkgew0KKwlDb21waWxlck9wdGlv
bnMgb3B0aW9ucyA9IG5ldyBDb21waWxlck9wdGlvbnMoZ2V0Q29tcGlsZXJPcHRpb25zKCkpOw0K
KwlTdHJpbmcgc291cmNlID0NCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArIA0KKwkJCSIJcHVi
bGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIiArIA0KKwkJCSIJCU9iamVj
dCB4ID0gZm9vKCk7XG4iICsgDQorCQkJIgkJZG91YmxlIHkgPSAoZG91YmxlKSB4O1xuIiArIA0K
KwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbih5KTtcbiIgKyANCisJCQkiCX1cbiIgKyANCisJCQki
CXB1YmxpYyBzdGF0aWMgT2JqZWN0IGZvbygpIHtcbiIgKyANCisJCQkiCQlyZXR1cm4gbmV3IERv
dWJsZSgxLjApO1xuIiArIA0KKwkJCSIJfVxuIiArIA0KKwkJCSJ9IjsNCisJaWYgKG9wdGlvbnMu
c291cmNlTGV2ZWwgPCBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV83KSB7DQorCQl0aGlzLnJ1bk5l
Z2F0aXZlVGVzdCgNCisJCQkJbmV3IFN0cmluZ1tdIHsNCisJCQkJCSJYLmphdmEiLA0KKwkJCQkJ
c291cmNlDQorCQkJCX0sDQorCQkJCSItLS0tLS0tLS0tXG4iICsgDQorCQkJCSIxLiBFUlJPUiBp
biBYLmphdmEgKGF0IGxpbmUgNClcbiIgKyANCisJCQkJIglkb3VibGUgeSA9IChkb3VibGUpIHg7
XG4iICsgDQorCQkJCSIJICAgICAgICAgICBeXl5eXl5eXl5eXG4iICsgDQorCQkJCSJDYW5ub3Qg
Y2FzdCBmcm9tIE9iamVjdCB0byBkb3VibGVcbiIgKyANCisJCQkJIi0tLS0tLS0tLS1cbiINCisJ
CQkpOw0KKwl9IGVsc2Ugew0KKwkJdGhpcy5ydW5Db25mb3JtVGVzdCgNCisJCQkJbmV3IFN0cmlu
Z1tdIHsNCisJCQkJCSJYLmphdmEiLA0KKwkJCQkJc291cmNlDQorCQkJCX0sDQorCQkJCSIxLjAi
DQorCQkJKTsNCisJfQ0KK30NCisvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93
X2J1Zy5jZ2k/aWQ9MzUzMDg1DQorcHVibGljIHZvaWQgdGVzdDA1OCgpIHsNCisJQ29tcGlsZXJP
cHRpb25zIG9wdGlvbnMgPSBuZXcgQ29tcGlsZXJPcHRpb25zKGdldENvbXBpbGVyT3B0aW9ucygp
KTsNCisJU3RyaW5nIHNvdXJjZSA9DQorCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKyANCisJCQki
CXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKyANCisJCQkiCQlP
YmplY3QgeCA9IGZvbygpO1xuIiArIA0KKwkJCSIJCWZsb2F0IHkgPSAoZmxvYXQpIHg7XG4iICsg
DQorCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKHkpO1xuIiArIA0KKwkJCSIJfVxuIiArIA0KKwkJ
CSIJcHVibGljIHN0YXRpYyBPYmplY3QgZm9vKCkge1xuIiArIA0KKwkJCSIJCXJldHVybiBuZXcg
RmxvYXQoMS4wZik7XG4iICsgDQorCQkJIgl9XG4iICsgDQorCQkJIn0iOw0KKwlpZiAob3B0aW9u
cy5zb3VyY2VMZXZlbCA8IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzcpIHsNCisJCXRoaXMucnVu
TmVnYXRpdmVUZXN0KA0KKwkJCQluZXcgU3RyaW5nW10gew0KKwkJCQkJIlguamF2YSIsDQorCQkJ
CQlzb3VyY2UNCisJCQkJfSwNCisJCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkJIjEuIEVSUk9S
IGluIFguamF2YSAoYXQgbGluZSA0KVxuIiArIA0KKwkJCQkiCWZsb2F0IHkgPSAoZmxvYXQpIHg7
XG4iICsgDQorCQkJCSIJICAgICAgICAgIF5eXl5eXl5eXlxuIiArIA0KKwkJCQkiQ2Fubm90IGNh
c3QgZnJvbSBPYmplY3QgdG8gZmxvYXRcbiIgKyANCisJCQkJIi0tLS0tLS0tLS1cbiINCisJCQkp
Ow0KKwl9IGVsc2Ugew0KKwkJdGhpcy5ydW5Db25mb3JtVGVzdCgNCisJCQkJbmV3IFN0cmluZ1td
IHsNCisJCQkJCSJYLmphdmEiLA0KKwkJCQkJc291cmNlDQorCQkJCX0sDQorCQkJCSIxLjAiDQor
CQkJKTsNCisJfQ0KK30NCisvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1
Zy5jZ2k/aWQ9MzUzMDg1DQorcHVibGljIHZvaWQgdGVzdDA1OSgpIHsNCisJQ29tcGlsZXJPcHRp
b25zIG9wdGlvbnMgPSBuZXcgQ29tcGlsZXJPcHRpb25zKGdldENvbXBpbGVyT3B0aW9ucygpKTsN
CisJU3RyaW5nIHNvdXJjZSA9DQorCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKyANCisJCQkiCXB1
YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKyANCisJCQkiCQlPYmpl
Y3QgeCA9IGZvbygpO1xuIiArIA0KKwkJCSIJCWludCB5ID0gKGludCkgeDtcbiIgKyANCisJCQki
CQlTeXN0ZW0ub3V0LnByaW50bG4oeSk7XG4iICsgDQorCQkJIgl9XG4iICsgDQorCQkJIglwdWJs
aWMgc3RhdGljIE9iamVjdCBmb28oKSB7XG4iICsgDQorCQkJIgkJcmV0dXJuIG5ldyBGbG9hdCgx
LjBmKTtcbiIgKyANCisJCQkiCX1cbiIgKyANCisJCQkifSI7DQorCWlmIChvcHRpb25zLnNvdXJj
ZUxldmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfNykgew0KKwkJdGhpcy5ydW5OZWdhdGl2
ZVRlc3QoDQorCQkJCW5ldyBTdHJpbmdbXSB7DQorCQkJCQkiWC5qYXZhIiwNCisJCQkJCXNvdXJj
ZQ0KKwkJCQl9LA0KKwkJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCQkiMS4gRVJST1IgaW4gWC5q
YXZhIChhdCBsaW5lIDQpXG4iICsgDQorCQkJCSIJaW50IHkgPSAoaW50KSB4O1xuIiArIA0KKwkJ
CQkiCSAgICAgICAgXl5eXl5eXlxuIiArIA0KKwkJCQkiQ2Fubm90IGNhc3QgZnJvbSBPYmplY3Qg
dG8gaW50XG4iICsgDQorCQkJCSItLS0tLS0tLS0tXG4iDQorCQkJKTsNCisJfSBlbHNlIHsNCisJ
CXRoaXMucnVuQ29uZm9ybVRlc3QoDQorCQkJCXRydWUsDQorCQkJCW5ldyBTdHJpbmdbXSB7DQor
CQkJCQkiWC5qYXZhIiwNCisJCQkJCXNvdXJjZQ0KKwkJCQl9LA0KKwkJCQludWxsLA0KKwkJCQki
IiwNCisJCQkJImphdmEubGFuZy5DbGFzc0Nhc3RFeGNlcHRpb246IGphdmEubGFuZy5GbG9hdCBj
YW5ub3QgYmUgY2FzdCB0byBqYXZhLmxhbmcuSW50ZWdlclxuIiArIA0KKwkJCQkiCWF0IFgubWFp
bihYLmphdmE6NClcbiIgKyANCisJCQkJIglhdCBzdW4ucmVmbGVjdC5OYXRpdmVNZXRob2RBY2Nl
c3NvckltcGwuaW52b2tlMChOYXRpdmUgTWV0aG9kKVxuIiArIA0KKwkJCQkiCWF0IHN1bi5yZWZs
ZWN0Lk5hdGl2ZU1ldGhvZEFjY2Vzc29ySW1wbC5pbnZva2UoTmF0aXZlTWV0aG9kQWNjZXNzb3JJ
bXBsLmphdmE6NTcpXG4iICsgDQorCQkJCSIJYXQgc3VuLnJlZmxlY3QuRGVsZWdhdGluZ01ldGhv
ZEFjY2Vzc29ySW1wbC5pbnZva2UoRGVsZWdhdGluZ01ldGhvZEFjY2Vzc29ySW1wbC5qYXZhOjQz
KVxuIiArIA0KKwkJCQkiCWF0IGphdmEubGFuZy5yZWZsZWN0Lk1ldGhvZC5pbnZva2UoTWV0aG9k
LmphdmE6NjAxKVxuIiArIA0KKwkJCQkiCWF0IiwNCisJCQkJSmF2YWNUZXN0T3B0aW9ucy5ERUZB
VUxUDQorCQkJKTsNCisJfQ0KK30NCisvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9z
aG93X2J1Zy5jZ2k/aWQ9MzUzMDg1DQorcHVibGljIHZvaWQgdGVzdDA1OWIoKSB7DQorCUNvbXBp
bGVyT3B0aW9ucyBvcHRpb25zID0gbmV3IENvbXBpbGVyT3B0aW9ucyhnZXRDb21waWxlck9wdGlv
bnMoKSk7DQorCVN0cmluZyBzb3VyY2UgPQ0KKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsgDQor
CQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iICsgDQorCQkJ
IgkJT2JqZWN0IHggPSBmb28oKTtcbiIgKyANCisJCQkiCQlpbnQgeSA9IChpbnQpIHg7XG4iICsg
DQorCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKHkpO1xuIiArIA0KKwkJCSIJfVxuIiArIA0KKwkJ
CSIJcHVibGljIHN0YXRpYyBPYmplY3QgZm9vKCkge1xuIiArIA0KKwkJCSIJCXJldHVybiBCb29s
ZWFuLlRSVUU7XG4iICsgDQorCQkJIgl9XG4iICsgDQorCQkJIn0iOw0KKwlpZiAob3B0aW9ucy5z
b3VyY2VMZXZlbCA8IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzcpIHsNCisJCXRoaXMucnVuTmVn
YXRpdmVUZXN0KA0KKwkJCQluZXcgU3RyaW5nW10gew0KKwkJCQkJIlguamF2YSIsDQorCQkJCQlz
b3VyY2UNCisJCQkJfSwNCisJCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkJIjEuIEVSUk9SIGlu
IFguamF2YSAoYXQgbGluZSA0KVxuIiArIA0KKwkJCQkiCWludCB5ID0gKGludCkgeDtcbiIgKyAN
CisJCQkJIgkgICAgICAgIF5eXl5eXl5cbiIgKyANCisJCQkJIkNhbm5vdCBjYXN0IGZyb20gT2Jq
ZWN0IHRvIGludFxuIiArIA0KKwkJCQkiLS0tLS0tLS0tLVxuIg0KKwkJCSk7DQorCX0gZWxzZSB7
DQorCQl0aGlzLnJ1bkNvbmZvcm1UZXN0KA0KKwkJCQl0cnVlLA0KKwkJCQluZXcgU3RyaW5nW10g
ew0KKwkJCQkJIlguamF2YSIsDQorCQkJCQlzb3VyY2UNCisJCQkJfSwNCisJCQkJbnVsbCwNCisJ
CQkJIiIsDQorCQkJCSJqYXZhLmxhbmcuQ2xhc3NDYXN0RXhjZXB0aW9uOiBqYXZhLmxhbmcuQm9v
bGVhbiBjYW5ub3QgYmUgY2FzdCB0byBqYXZhLmxhbmcuSW50ZWdlclxuIiArIA0KKwkJCQkiCWF0
IFgubWFpbihYLmphdmE6NClcbiIgKyANCisJCQkJIglhdCBzdW4ucmVmbGVjdC5OYXRpdmVNZXRo
b2RBY2Nlc3NvckltcGwuaW52b2tlMChOYXRpdmUgTWV0aG9kKVxuIiArIA0KKwkJCQkiCWF0IHN1
bi5yZWZsZWN0Lk5hdGl2ZU1ldGhvZEFjY2Vzc29ySW1wbC5pbnZva2UoTmF0aXZlTWV0aG9kQWNj
ZXNzb3JJbXBsLmphdmE6NTcpXG4iICsgDQorCQkJCSIJYXQgc3VuLnJlZmxlY3QuRGVsZWdhdGlu
Z01ldGhvZEFjY2Vzc29ySW1wbC5pbnZva2UoRGVsZWdhdGluZ01ldGhvZEFjY2Vzc29ySW1wbC5q
YXZhOjQzKVxuIiArIA0KKwkJCQkiCWF0IGphdmEubGFuZy5yZWZsZWN0Lk1ldGhvZC5pbnZva2Uo
TWV0aG9kLmphdmE6NjAxKVxuIiArIA0KKwkJCQkiCWF0IiwNCisJCQkJSmF2YWNUZXN0T3B0aW9u
cy5ERUZBVUxUDQorCQkJKTsNCisJfQ0KK30NCisvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzUzMDg1DQorcHVibGljIHZvaWQgdGVzdDA1OWMoKSB7DQor
CUNvbXBpbGVyT3B0aW9ucyBvcHRpb25zID0gbmV3IENvbXBpbGVyT3B0aW9ucyhnZXRDb21waWxl
ck9wdGlvbnMoKSk7DQorCVN0cmluZyBzb3VyY2UgPQ0KKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4i
ICsgDQorCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iICsg
DQorCQkJIgkJT2JqZWN0IHggPSBmb28oKTtcbiIgKyANCisJCQkiCQljaGFyIHkgPSAoY2hhcikg
eDtcbiIgKyANCisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oeSk7XG4iICsgDQorCQkJIgl9XG4i
ICsgDQorCQkJIglwdWJsaWMgc3RhdGljIE9iamVjdCBmb28oKSB7XG4iICsgDQorCQkJIgkJcmV0
dXJuIEJvb2xlYW4uVFJVRTtcbiIgKyANCisJCQkiCX1cbiIgKyANCisJCQkifSI7DQorCWlmIChv
cHRpb25zLnNvdXJjZUxldmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfNykgew0KKwkJdGhp
cy5ydW5OZWdhdGl2ZVRlc3QoDQorCQkJCW5ldyBTdHJpbmdbXSB7DQorCQkJCQkiWC5qYXZhIiwN
CisJCQkJCXNvdXJjZQ0KKwkJCQl9LA0KKwkJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCQkiMS4g
RVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDQpXG4iICsgDQorCQkJCSIJY2hhciB5ID0gKGNoYXIp
IHg7XG4iICsgDQorCQkJCSIJICAgICAgICAgXl5eXl5eXl5cbiIgKyANCisJCQkJIkNhbm5vdCBj
YXN0IGZyb20gT2JqZWN0IHRvIGNoYXJcbiIgKyANCisJCQkJIi0tLS0tLS0tLS1cbiINCisJCQkp
Ow0KKwl9IGVsc2Ugew0KKwkJdGhpcy5ydW5Db25mb3JtVGVzdCgNCisJCQkJdHJ1ZSwNCisJCQkJ
bmV3IFN0cmluZ1tdIHsNCisJCQkJCSJYLmphdmEiLA0KKwkJCQkJc291cmNlDQorCQkJCX0sDQor
CQkJCW51bGwsDQorCQkJCSIiLA0KKwkJCQkiamF2YS5sYW5nLkNsYXNzQ2FzdEV4Y2VwdGlvbjog
amF2YS5sYW5nLkJvb2xlYW4gY2Fubm90IGJlIGNhc3QgdG8gamF2YS5sYW5nLkNoYXJhY3Rlclxu
IiArIA0KKwkJCQkiCWF0IFgubWFpbihYLmphdmE6NClcbiIgKyANCisJCQkJIglhdCBzdW4ucmVm
bGVjdC5OYXRpdmVNZXRob2RBY2Nlc3NvckltcGwuaW52b2tlMChOYXRpdmUgTWV0aG9kKVxuIiAr
IA0KKwkJCQkiCWF0IHN1bi5yZWZsZWN0Lk5hdGl2ZU1ldGhvZEFjY2Vzc29ySW1wbC5pbnZva2Uo
TmF0aXZlTWV0aG9kQWNjZXNzb3JJbXBsLmphdmE6NTcpXG4iICsgDQorCQkJCSIJYXQgc3VuLnJl
ZmxlY3QuRGVsZWdhdGluZ01ldGhvZEFjY2Vzc29ySW1wbC5pbnZva2UoRGVsZWdhdGluZ01ldGhv
ZEFjY2Vzc29ySW1wbC5qYXZhOjQzKVxuIiArIA0KKwkJCQkiCWF0IGphdmEubGFuZy5yZWZsZWN0
Lk1ldGhvZC5pbnZva2UoTWV0aG9kLmphdmE6NjAxKVxuIiArIA0KKwkJCQkiCWF0IiwNCisJCQkJ
SmF2YWNUZXN0T3B0aW9ucy5ERUZBVUxUDQorCQkJKTsNCisJfQ0KK30NCisvLyBodHRwczovL2J1
Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzUzMDg1DQorcHVibGljIHZvaWQg
dGVzdDA2MCgpIHsNCisJU3RyaW5nIHNvdXJjZSA9DQorCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIg
KyANCisJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKyAN
CisJCQkiCQlPYmplY3QgeCA9IGZvbygpO1xuIiArIA0KKwkJCSIJCUJvb2xlYW4geSA9IChCb29s
ZWFuKSB4O1xuIiArIA0KKwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbih5KTtcbiIgKyANCisJCQki
CX1cbiIgKyANCisJCQkiCXB1YmxpYyBzdGF0aWMgT2JqZWN0IGZvbygpIHtcbiIgKyANCisJCQki
CQlyZXR1cm4gQm9vbGVhbi5UUlVFO1xuIiArIA0KKwkJCSIJfVxuIiArIA0KKwkJCSJ9IjsNCisJ
dGhpcy5ydW5Db25mb3JtVGVzdCgNCisJCQluZXcgU3RyaW5nW10gew0KKwkJCQkiWC5qYXZhIiwN
CisJCQkJc291cmNlDQorCQkJfSwNCisJCQkidHJ1ZSINCisJCSk7DQorfQ0KKy8vIGh0dHBzOi8v
YnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zNTMwODUNCitwdWJsaWMgdm9p
ZCB0ZXN0MDYxKCkgew0KKwlTdHJpbmcgc291cmNlID0NCisJCQkicHVibGljIGNsYXNzIFgge1xu
IiArIA0KKwkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIiAr
IA0KKwkJCSIJCU9iamVjdCB4ID0gZm9vKCk7XG4iICsgDQorCQkJIgkJRmxvYXQgeSA9IChGbG9h
dCkgeDtcbiIgKyANCisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oeSk7XG4iICsgDQorCQkJIgl9
XG4iICsgDQorCQkJIglwdWJsaWMgc3RhdGljIE9iamVjdCBmb28oKSB7XG4iICsgDQorCQkJIgkJ
cmV0dXJuIEJvb2xlYW4uVFJVRTtcbiIgKyANCisJCQkiCX1cbiIgKyANCisJCQkifSI7DQorCXRo
aXMucnVuQ29uZm9ybVRlc3QoDQorCQkJdHJ1ZSwNCisJCQluZXcgU3RyaW5nW10gew0KKwkJCQki
WC5qYXZhIiwNCisJCQkJc291cmNlDQorCQkJfSwNCisJCQludWxsLA0KKwkJCSIiLA0KKwkJCSJq
YXZhLmxhbmcuQ2xhc3NDYXN0RXhjZXB0aW9uOiBqYXZhLmxhbmcuQm9vbGVhbiBjYW5ub3QgYmUg
Y2FzdCB0byBqYXZhLmxhbmcuRmxvYXRcbiIgKyANCisJCQkiCWF0IFgubWFpbihYLmphdmE6NClc
biIgKyANCisJCQkiCWF0IHN1bi5yZWZsZWN0Lk5hdGl2ZU1ldGhvZEFjY2Vzc29ySW1wbC5pbnZv
a2UwKE5hdGl2ZSBNZXRob2QpXG4iICsgDQorCQkJIglhdCBzdW4ucmVmbGVjdC5OYXRpdmVNZXRo
b2RBY2Nlc3NvckltcGwuaW52b2tlKE5hdGl2ZU1ldGhvZEFjY2Vzc29ySW1wbC5qYXZhOjU3KVxu
IiArIA0KKwkJCSIJYXQgc3VuLnJlZmxlY3QuRGVsZWdhdGluZ01ldGhvZEFjY2Vzc29ySW1wbC5p
bnZva2UoRGVsZWdhdGluZ01ldGhvZEFjY2Vzc29ySW1wbC5qYXZhOjQzKVxuIiArIA0KKwkJCSIJ
YXQgamF2YS5sYW5nLnJlZmxlY3QuTWV0aG9kLmludm9rZShNZXRob2QuamF2YTo2MDEpXG4iICsg
DQorCQkJIglhdCIsDQorCQkJSmF2YWNUZXN0T3B0aW9ucy5ERUZBVUxUDQorCQkpOw0KK30NCiBw
dWJsaWMgc3RhdGljIENsYXNzIHRlc3RDbGFzcygpIHsNCiAJcmV0dXJuIENhc3RUZXN0LmNsYXNz
Ow0KIH0NCg==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>200548</attachid>
            <date>2011-07-28 14:06:00 -0400</date>
            <delta_ts>2011-07-28 14:06:12 -0400</delta_ts>
            <desc>patch v2.2</desc>
            <filename>patch353085.txt</filename>
            <type>text/plain</type>
            <size>19711</size>
            <attacher name="Ayushman Jain">amj87.iitr</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0V4
cHJlc3Npb24uamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2FzdC9FeHByZXNzaW9uLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjEzMy4yLjUN
CmRpZmYgLXUgLXIxLjEzMy4yLjUgRXhwcmVzc2lvbi5qYXZhDQotLS0gY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9FeHByZXNzaW9uLmphdmEJMzEgTWFyIDIw
MTEgMDc6MjA6MjUgLTAwMDAJMS4xMzMuMi41DQorKysgY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvbXBpbGVyL2FzdC9FeHByZXNzaW9uLmphdmEJMjggSnVsIDIwMTEgMTg6MDM6
MzkgLTAwMDANCkBAIC0yNDMsNiArMjQzLDcgQEANCiAJLy8gaWRlbnRpdHkgY29udmVyc2lvbiBj
YW5ub3QgYmUgcGVyZm9ybWVkIHVwZnJvbnQsIGR1ZSB0byBzaWRlLWVmZmVjdHMNCiAJLy8gbGlr
ZSBjb25zdGFudCBwcm9wYWdhdGlvbg0KIAlib29sZWFuIHVzZTE1c3BlY2lmaWNzID0gc2NvcGUu
Y29tcGlsZXJPcHRpb25zKCkuc291cmNlTGV2ZWwgPj0gQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFf
NTsNCisJYm9vbGVhbiB1c2UxN3NwZWNpZmljcyA9IHNjb3BlLmNvbXBpbGVyT3B0aW9ucygpLnNv
dXJjZUxldmVsID49IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzc7DQogCWlmIChjYXN0VHlwZS5p
c0Jhc2VUeXBlKCkpIHsNCiAJCWlmIChleHByZXNzaW9uVHlwZS5pc0Jhc2VUeXBlKCkpIHsNCiAJ
CQlpZiAoZXhwcmVzc2lvblR5cGUgPT0gY2FzdFR5cGUpIHsNCkBAIC0yNjUsNiArMjY2LDkgQEAN
CiAJCQkJcmV0dXJuIHRydWU7DQogDQogCQkJfQ0KKwkJfSBlbHNlIGlmICh1c2UxN3NwZWNpZmlj
cyAmJiBleHByZXNzaW9uVHlwZS5pZCA9PSBUeXBlSWRzLlRfSmF2YUxhbmdPYmplY3Qpew0KKwkJ
CS8vIGNhc3QgZnJvbSBPYmplY3QgdG8gYmFzZSB0eXBlIGFsbG93ZWQgZnJvbSAxLjcsIHNlZSBK
TFMgJDUuNQ0KKwkJCXJldHVybiB0cnVlOw0KIAkJfSBlbHNlIGlmICh1c2UxNXNwZWNpZmljcw0K
IAkJCQkJCQkmJiBzY29wZS5lbnZpcm9ubWVudCgpLmNvbXB1dGVCb3hpbmdUeXBlKGV4cHJlc3Np
b25UeXBlKS5pc0NvbXBhdGlibGVXaXRoKGNhc3RUeXBlKSkgeyAvLyB1bmJveGluZyAtIG9ubHkg
d2lkZW5pbmcgbWF0Y2ggaXMgYWxsb3dlZA0KIAkJCXRhZ0FzVW5uZWNlc3NhcnlDYXN0KHNjb3Bl
LCBjYXN0VHlwZSk7DQpAQCAtNTk2LDcgKzYwMCwxMSBAQA0KIAkJY2FzZSBUX2J5dGUgOg0KIAkJ
Y2FzZSBUX3Nob3J0IDoNCiAJCWNhc2UgVF9jaGFyIDoNCi0JCQl0aGlzLmltcGxpY2l0Q29udmVy
c2lvbiB8PSAoVHlwZUlkcy5UX2ludCA8PCA0KSArIGNvbXBpbGVUaW1lVHlwZUlEOw0KKwkJCWlm
IChjb21waWxlVGltZVR5cGVJRCA9PSBUeXBlSWRzLlRfSmF2YUxhbmdPYmplY3QpIHsNCisJCQkJ
dGhpcy5pbXBsaWNpdENvbnZlcnNpb24gfD0gKHJ1bnRpbWVUeXBlSUQgPDwgNCkgKyBjb21waWxl
VGltZVR5cGVJRDsNCisJCQl9IGVsc2Ugew0KKwkJCQl0aGlzLmltcGxpY2l0Q29udmVyc2lvbiB8
PSAoVHlwZUlkcy5UX2ludCA8PCA0KSArIGNvbXBpbGVUaW1lVHlwZUlEOw0KKwkJCX0NCiAJCQli
cmVhazsNCiAJCWNhc2UgVF9KYXZhTGFuZ1N0cmluZyA6DQogCQljYXNlIFRfZmxvYXQgOg0KSW5k
ZXg6IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jb2RlZ2VuL0Nv
ZGVTdHJlYW0uamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL2NvZGVnZW4vQ29kZVN0cmVhbS5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4xODAu
Mi4yDQpkaWZmIC11IC1yMS4xODAuMi4yIENvZGVTdHJlYW0uamF2YQ0KLS0tIGNvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jb2RlZ2VuL0NvZGVTdHJlYW0uamF2YQk4
IE1hciAyMDExIDIzOjM2OjEyIC0wMDAwCTEuMTgwLjIuMg0KKysrIGNvbXBpbGVyL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jb2RlZ2VuL0NvZGVTdHJlYW0uamF2YQkyOCBKdWwg
MjAxMSAxODowMzo0OCAtMDAwMA0KQEAgLTIwNTIsNiArMjA1MiwyMiBAQA0KIAkJCWJyZWFrOw0K
IAkJY2FzZSBUeXBlSWRzLkZsb2F0MkxvbmcgOg0KIAkJCWYybCgpOw0KKwkJCWJyZWFrOw0KKwkJ
Y2FzZSBUeXBlSWRzLk9iamVjdDJib29sZWFuOg0KKwkJY2FzZSBUeXBlSWRzLk9iamVjdDJieXRl
Og0KKwkJY2FzZSBUeXBlSWRzLk9iamVjdDJzaG9ydDoNCisJCWNhc2UgVHlwZUlkcy5PYmplY3Qy
aW50Og0KKwkJY2FzZSBUeXBlSWRzLk9iamVjdDJsb25nOg0KKwkJY2FzZSBUeXBlSWRzLk9iamVj
dDJmbG9hdDoNCisJCWNhc2UgVHlwZUlkcy5PYmplY3QyY2hhcjoNCisJCWNhc2UgVHlwZUlkcy5P
YmplY3QyZG91YmxlOg0KKwkJCS8vIHNlZSB0YWJsZSA1LjEgaW4gSkxTIFM1LjUNCisJCQkvLyBh
biBPYmplY3QgdG8geCBjb252ZXJzaW9uIHNob3VsZCBoYXZlIGEgY2hlY2sgY2FzdA0KKwkJCS8v
IGFuZCBhbiB1bmJveGluZyBjb252ZXJzaW9uLg0KKwkJCWludCBydW50aW1lVHlwZSA9IChpbXBs
aWNpdENvbnZlcnNpb25Db2RlICYgVHlwZUlkcy5JTVBMSUNJVF9DT05WRVJTSU9OX01BU0spID4+
IDQ7DQorCQkJY2hlY2tjYXN0KHJ1bnRpbWVUeXBlKTsNCisJCQlnZW5lcmF0ZVVuYm94aW5nQ29u
dmVyc2lvbihydW50aW1lVHlwZSk7DQorCQkJYnJlYWs7CQ0KIAl9DQogCWlmICgoaW1wbGljaXRD
b252ZXJzaW9uQ29kZSAmIFR5cGVJZHMuQk9YSU5HKSAhPSAwKSB7DQogCQkvLyBuZWVkIHRvIHVu
Ym94L2JveCB0aGUgY29uc3RhbnQNCkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVJZHMuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6
IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlSWRzLmphdmEsdg0KcmV0cmlldmlu
ZyByZXZpc2lvbiAxLjM2LjIuNQ0KZGlmZiAtdSAtcjEuMzYuMi41IFR5cGVJZHMuamF2YQ0KLS0t
IGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvVHlwZUlk
cy5qYXZhCTI4IEp1biAyMDExIDE1OjM1OjA3IC0wMDAwCTEuMzYuMi41DQorKysgY29tcGlsZXIv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlSWRzLmphdmEJMjgg
SnVsIDIwMTEgMTg6MDM6NDggLTAwMDANCkBAIC0xNzEsNiArMTcxLDE0IEBADQogCWZpbmFsIGlu
dCBOdWxsMk51bGwgPSBUX251bGwgKyAoVF9udWxsIDw8IDQpOw0KIAlmaW5hbCBpbnQgTnVsbDJT
dHJpbmcgPSBUX251bGwgKyAoVF9KYXZhTGFuZ1N0cmluZyA8PCA0KTsNCiAJZmluYWwgaW50IE9i
amVjdDJPYmplY3QgPSBUX0phdmFMYW5nT2JqZWN0ICsgKFRfSmF2YUxhbmdPYmplY3QgPDwgNCk7
DQorCWZpbmFsIGludCBPYmplY3QyYnl0ZSA9IFRfSmF2YUxhbmdPYmplY3QgKyAoVF9ieXRlIDw8
IDQpOw0KKwlmaW5hbCBpbnQgT2JqZWN0MnNob3J0ID0gVF9KYXZhTGFuZ09iamVjdCArIChUX3No
b3J0IDw8IDQpOw0KKwlmaW5hbCBpbnQgT2JqZWN0MmNoYXIgPSBUX0phdmFMYW5nT2JqZWN0ICsg
KFRfY2hhciA8PCA0KTsNCisJZmluYWwgaW50IE9iamVjdDJpbnQgPSBUX0phdmFMYW5nT2JqZWN0
ICsgKFRfaW50IDw8IDQpOw0KKwlmaW5hbCBpbnQgT2JqZWN0MmxvbmcgPSBUX0phdmFMYW5nT2Jq
ZWN0ICsgKFRfbG9uZyA8PCA0KTsNCisJZmluYWwgaW50IE9iamVjdDJmbG9hdCA9IFRfSmF2YUxh
bmdPYmplY3QgKyAoVF9mbG9hdCA8PCA0KTsNCisJZmluYWwgaW50IE9iamVjdDJkb3VibGUgPSBU
X0phdmFMYW5nT2JqZWN0ICsgKFRfZG91YmxlIDw8IDQpOw0KKwlmaW5hbCBpbnQgT2JqZWN0MmJv
b2xlYW4gPSBUX0phdmFMYW5nT2JqZWN0ICsgKFRfYm9vbGVhbiA8PCA0KTsNCiAJZmluYWwgaW50
IEJPWElORyA9IDB4MjAwOw0KIAlmaW5hbCBpbnQgVU5CT1hJTkcgPSAweDQwMDsNCiB9DQojUCBv
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlcg0KSW5kZXg6IHNyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0Nhc3RUZXN0LmphdmENCj09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdy
ZXNzaW9uL0Nhc3RUZXN0LmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjUyDQpkaWZmIC11
IC1yMS41MiBDYXN0VGVzdC5qYXZhDQotLS0gc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L2NvbXBpbGVyL3JlZ3Jlc3Npb24vQ2FzdFRlc3QuamF2YQkxMSBNYXkgMjAxMCAxODo1Mzo1MCAt
MDAwMAkxLjUyDQorKysgc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3Jl
Z3Jlc3Npb24vQ2FzdFRlc3QuamF2YQkyOCBKdWwgMjAxMSAxODowMzo1MiAtMDAwMA0KQEAgLTEs
NSArMSw1IEBADQogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIw
MDMsIDIwMTAgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQorICogQ29weXJpZ2h0IChjKSAy
MDAzLCAyMDExIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KICAqIEFsbCByaWdodHMgcmVz
ZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCiAgKiBh
cmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBM
aWNlbnNlIHYxLjANCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5k
IGlzIGF2YWlsYWJsZSBhdA0KQEAgLTE4NjksNiArMTg2OSw1MTEgQEANCiAJCSItLS0tLS0tLS0t
XG4iDQogCSk7DQogfQ0KKy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVn
LmNnaT9pZD0zNTMwODUNCitwdWJsaWMgdm9pZCB0ZXN0MDUxKCkgew0KKwlDb21waWxlck9wdGlv
bnMgb3B0aW9ucyA9IG5ldyBDb21waWxlck9wdGlvbnMoZ2V0Q29tcGlsZXJPcHRpb25zKCkpOw0K
KwlTdHJpbmcgc291cmNlID0NCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArIA0KKwkJCSIJcHVi
bGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIiArIA0KKwkJCSIJCU9iamVj
dCB4ID0gZm9vKCk7XG4iICsgDQorCQkJIgkJYm9vbGVhbiB5ID0gKGJvb2xlYW4pIHg7XG4iICsg
DQorCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKHkpO1xuIiArIA0KKwkJCSIJfVxuIiArIA0KKwkJ
CSIJcHVibGljIHN0YXRpYyBPYmplY3QgZm9vKCkge1xuIiArIA0KKwkJCSIJCXJldHVybiBCb29s
ZWFuLlRSVUU7XG4iICsgDQorCQkJIgl9XG4iICsgDQorCQkJIn0iOw0KKwlpZiAob3B0aW9ucy5z
b3VyY2VMZXZlbCA8IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzcpIHsNCisJCXRoaXMucnVuTmVn
YXRpdmVUZXN0KA0KKwkJCQluZXcgU3RyaW5nW10gew0KKwkJCQkJIlguamF2YSIsDQorCQkJCQlz
b3VyY2UNCisJCQkJfSwNCisJCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkJIjEuIEVSUk9SIGlu
IFguamF2YSAoYXQgbGluZSA0KVxuIiArIA0KKwkJCQkiCWJvb2xlYW4geSA9IChib29sZWFuKSB4
O1xuIiArIA0KKwkJCQkiCSAgICAgICAgICAgIF5eXl5eXl5eXl5eXG4iICsgDQorCQkJCSJDYW5u
b3QgY2FzdCBmcm9tIE9iamVjdCB0byBib29sZWFuXG4iICsgDQorCQkJCSItLS0tLS0tLS0tXG4i
DQorCQkJKTsNCisJfSBlbHNlIHsNCisJCXRoaXMucnVuQ29uZm9ybVRlc3QoDQorCQkJCW5ldyBT
dHJpbmdbXSB7DQorCQkJCQkiWC5qYXZhIiwNCisJCQkJCXNvdXJjZQ0KKwkJCQl9LA0KKwkJCQki
dHJ1ZSINCisJCQkpOw0KKwl9DQorfQ0KKy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdz
L3Nob3dfYnVnLmNnaT9pZD0zNTMwODUNCitwdWJsaWMgdm9pZCB0ZXN0MDUyKCkgew0KKwlDb21w
aWxlck9wdGlvbnMgb3B0aW9ucyA9IG5ldyBDb21waWxlck9wdGlvbnMoZ2V0Q29tcGlsZXJPcHRp
b25zKCkpOw0KKwlTdHJpbmcgc291cmNlID0NCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArIA0K
KwkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIiArIA0KKwkJ
CSIJCU9iamVjdCB4ID0gZm9vKCk7XG4iICsgDQorCQkJIgkJYnl0ZSB5ID0gKGJ5dGUpIHg7XG4i
ICsgDQorCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKHkpO1xuIiArIA0KKwkJCSIJfVxuIiArIA0K
KwkJCSIJcHVibGljIHN0YXRpYyBPYmplY3QgZm9vKCkge1xuIiArIA0KKwkJCSIJCXJldHVybiBu
ZXcgQnl0ZSgoYnl0ZSkxKTtcbiIgKyANCisJCQkiCX1cbiIgKyANCisJCQkifSI7DQorCWlmIChv
cHRpb25zLnNvdXJjZUxldmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfNykgew0KKwkJdGhp
cy5ydW5OZWdhdGl2ZVRlc3QoDQorCQkJCW5ldyBTdHJpbmdbXSB7DQorCQkJCQkiWC5qYXZhIiwN
CisJCQkJCXNvdXJjZQ0KKwkJCQl9LA0KKwkJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCQkiMS4g
RVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDQpXG4iICsgDQorCQkJCSIJYnl0ZSB5ID0gKGJ5dGUp
IHg7XG4iICsgDQorCQkJCSIJICAgICAgICAgXl5eXl5eXl5cbiIgKyANCisJCQkJIkNhbm5vdCBj
YXN0IGZyb20gT2JqZWN0IHRvIGJ5dGVcbiIgKyANCisJCQkJIi0tLS0tLS0tLS1cbiINCisJCQkp
Ow0KKwl9IGVsc2Ugew0KKwkJdGhpcy5ydW5Db25mb3JtVGVzdCgNCisJCQkJbmV3IFN0cmluZ1td
IHsNCisJCQkJCSJYLmphdmEiLA0KKwkJCQkJc291cmNlDQorCQkJCX0sDQorCQkJCSIxIg0KKwkJ
CSk7DQorCX0NCit9DQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTM1MzA4NQ0KK3B1YmxpYyB2b2lkIHRlc3QwNTMoKSB7DQorCUNvbXBpbGVyT3B0aW9u
cyBvcHRpb25zID0gbmV3IENvbXBpbGVyT3B0aW9ucyhnZXRDb21waWxlck9wdGlvbnMoKSk7DQor
CVN0cmluZyBzb3VyY2UgPQ0KKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsgDQorCQkJIglwdWJs
aWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iICsgDQorCQkJIgkJT2JqZWN0
IHggPSBmb28oKTtcbiIgKyANCisJCQkiCQljaGFyIHkgPSAoY2hhcikgeDtcbiIgKyANCisJCQki
CQlTeXN0ZW0ub3V0LnByaW50bG4oeSk7XG4iICsgDQorCQkJIgl9XG4iICsgDQorCQkJIglwdWJs
aWMgc3RhdGljIE9iamVjdCBmb28oKSB7XG4iICsgDQorCQkJIgkJcmV0dXJuIG5ldyBDaGFyYWN0
ZXIoJ2QnKTtcbiIgKyANCisJCQkiCX1cbiIgKyANCisJCQkifSI7DQorCWlmIChvcHRpb25zLnNv
dXJjZUxldmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfNykgew0KKwkJdGhpcy5ydW5OZWdh
dGl2ZVRlc3QoDQorCQkJCW5ldyBTdHJpbmdbXSB7DQorCQkJCQkiWC5qYXZhIiwNCisJCQkJCXNv
dXJjZQ0KKwkJCQl9LA0KKwkJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCQkiMS4gRVJST1IgaW4g
WC5qYXZhIChhdCBsaW5lIDQpXG4iICsgDQorCQkJCSIJY2hhciB5ID0gKGNoYXIpIHg7XG4iICsg
DQorCQkJCSIJICAgICAgICAgXl5eXl5eXl5cbiIgKyANCisJCQkJIkNhbm5vdCBjYXN0IGZyb20g
T2JqZWN0IHRvIGNoYXJcbiIgKyANCisJCQkJIi0tLS0tLS0tLS1cbiINCisJCQkpOw0KKwl9IGVs
c2Ugew0KKwkJdGhpcy5ydW5Db25mb3JtVGVzdCgNCisJCQkJbmV3IFN0cmluZ1tdIHsNCisJCQkJ
CSJYLmphdmEiLA0KKwkJCQkJc291cmNlDQorCQkJCX0sDQorCQkJCSJkIg0KKwkJCSk7DQorCX0N
Cit9DQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM1
MzA4NQ0KKy8vIEFsc28gY29uZmlybSB0aGF0IGEgY2hlY2sgY2FzdCBhbmQgdW5ib3hpbmcgY29u
dmVyc2lvbiBhcmUgZ2VuZXJhdGVkLg0KK3B1YmxpYyB2b2lkIHRlc3QwNTQoKSB0aHJvd3MgRXhj
ZXB0aW9uIHsNCisJQ29tcGlsZXJPcHRpb25zIG9wdGlvbnMgPSBuZXcgQ29tcGlsZXJPcHRpb25z
KGdldENvbXBpbGVyT3B0aW9ucygpKTsNCisJU3RyaW5nIHNvdXJjZSA9DQorCQkJInB1YmxpYyBj
bGFzcyBYIHtcbiIgKyANCisJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFy
Z3MpIHtcbiIgKyANCisJCQkiCQlPYmplY3QgeCA9IGZvbygpO1xuIiArIA0KKwkJCSIJCWludCB5
ID0gKGludCkgeDtcbiIgKyANCisJCQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oeSk7XG4iICsgDQor
CQkJIgl9XG4iICsgDQorCQkJIglwdWJsaWMgc3RhdGljIE9iamVjdCBmb28oKSB7XG4iICsgDQor
CQkJIgkJcmV0dXJuIG5ldyBJbnRlZ2VyKDEpO1xuIiArIA0KKwkJCSIJfVxuIiArIA0KKwkJCSJ9
IjsNCisJaWYgKG9wdGlvbnMuc291cmNlTGV2ZWwgPCBDbGFzc0ZpbGVDb25zdGFudHMuSkRLMV83
KSB7DQorCQl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgNCisJCQkJbmV3IFN0cmluZ1tdIHsNCisJCQkJ
CSJYLmphdmEiLA0KKwkJCQkJc291cmNlDQorCQkJCX0sDQorCQkJCSItLS0tLS0tLS0tXG4iICsg
DQorCQkJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNClcbiIgKyANCisJCQkJIglpbnQg
eSA9IChpbnQpIHg7XG4iICsgDQorCQkJCSIJICAgICAgICBeXl5eXl5eXG4iICsgDQorCQkJCSJD
YW5ub3QgY2FzdCBmcm9tIE9iamVjdCB0byBpbnRcbiIgKyANCisJCQkJIi0tLS0tLS0tLS1cbiIN
CisJCQkpOw0KKwl9IGVsc2Ugew0KKwkJdGhpcy5ydW5Db25mb3JtVGVzdCgNCisJCQkJbmV3IFN0
cmluZ1tdIHsNCisJCQkJCSJYLmphdmEiLA0KKwkJCQkJc291cmNlDQorCQkJCX0sDQorCQkJCSIx
Ig0KKwkJCSk7DQorCQlTdHJpbmcgZXhwZWN0ZWRPdXRwdXQgPSANCisJCQkJIiAgLy8gTWV0aG9k
IGRlc2NyaXB0b3IgIzE1IChbTGphdmEvbGFuZy9TdHJpbmc7KVZcbiIgKyANCisJCQkJIiAgLy8g
U3RhY2s6IDIsIExvY2FsczogM1xuIiArIA0KKwkJCQkiICBwdWJsaWMgc3RhdGljIHZvaWQgbWFp
bihqYXZhLmxhbmcuU3RyaW5nW10gYXJncyk7XG4iICsgDQorCQkJCSIgICAgIDAgIGludm9rZXN0
YXRpYyBYLmZvbygpIDogamF2YS5sYW5nLk9iamVjdCBbMTZdXG4iICsgDQorCQkJCSIgICAgIDMg
IGFzdG9yZV8xIFt4XVxuIiArIA0KKwkJCQkiICAgICA0ICBhbG9hZF8xIFt4XVxuIiArIA0KKwkJ
CQkiICAgICA1ICBjaGVja2Nhc3QgamF2YS5sYW5nLkludGVnZXIgWzIwXVxuIiArIA0KKwkJCQki
ICAgICA4ICBpbnZva2V2aXJ0dWFsIGphdmEubGFuZy5JbnRlZ2VyLmludFZhbHVlKCkgOiBpbnQg
WzIyXVxuIiArIA0KKwkJCQkiICAgIDExICBpc3RvcmVfMiBbeV1cbiIgKyANCisJCQkJIiAgICAx
MiAgZ2V0c3RhdGljIGphdmEubGFuZy5TeXN0ZW0ub3V0IDogamF2YS5pby5QcmludFN0cmVhbSBb
MjZdXG4iICsgDQorCQkJCSIgICAgMTUgIGlsb2FkXzIgW3ldXG4iICsgDQorCQkJCSIgICAgMTYg
IGludm9rZXZpcnR1YWwgamF2YS5pby5QcmludFN0cmVhbS5wcmludGxuKGludCkgOiB2b2lkIFsz
Ml1cbiIgKyANCisJCQkJIiAgICAxOSAgcmV0dXJuXG4iICsgDQorCQkJCSIgICAgICBMaW5lIG51
bWJlcnM6XG4iICsgDQorCQkJCSIgICAgICAgIFtwYzogMCwgbGluZTogM11cbiIgKyANCisJCQkJ
IiAgICAgICAgW3BjOiA0LCBsaW5lOiA0XVxuIiArIA0KKwkJCQkiICAgICAgICBbcGM6IDEyLCBs
aW5lOiA1XVxuIiArIA0KKwkJCQkiICAgICAgICBbcGM6IDE5LCBsaW5lOiA2XVxuIiArIA0KKwkJ
CQkiICAgICAgTG9jYWwgdmFyaWFibGUgdGFibGU6XG4iICsgDQorCQkJCSIgICAgICAgIFtwYzog
MCwgcGM6IDIwXSBsb2NhbDogYXJncyBpbmRleDogMCB0eXBlOiBqYXZhLmxhbmcuU3RyaW5nW11c
biIgKyANCisJCQkJIiAgICAgICAgW3BjOiA0LCBwYzogMjBdIGxvY2FsOiB4IGluZGV4OiAxIHR5
cGU6IGphdmEubGFuZy5PYmplY3RcbiIgKyANCisJCQkJIiAgICAgICAgW3BjOiAxMiwgcGM6IDIw
XSBsb2NhbDogeSBpbmRleDogMiB0eXBlOiBpbnRcbiIgKyANCisJCQkJIiAgXG4iOw0KKwkJRmls
ZSBmID0gbmV3IEZpbGUoT1VUUFVUX0RJUiArIEZpbGUuc2VwYXJhdG9yICsgIlguY2xhc3MiKTsN
CisJCWJ5dGVbXSBjbGFzc0ZpbGVCeXRlcyA9IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci51dGlsLlV0aWwuZ2V0RmlsZUJ5dGVDb250ZW50KGYpOw0KKwkJQ2xhc3NGaWxlQnl0ZXNE
aXNhc3NlbWJsZXIgZGlzYXNzZW1ibGVyID0gVG9vbEZhY3RvcnkuY3JlYXRlRGVmYXVsdENsYXNz
RmlsZUJ5dGVzRGlzYXNzZW1ibGVyKCk7DQorCQlTdHJpbmcgcmVzdWx0ID0gZGlzYXNzZW1ibGVy
LmRpc2Fzc2VtYmxlKGNsYXNzRmlsZUJ5dGVzLCAiXG4iLCBDbGFzc0ZpbGVCeXRlc0Rpc2Fzc2Vt
Ymxlci5ERVRBSUxFRCk7DQorCQlpbnQgaW5kZXggPSByZXN1bHQuaW5kZXhPZihleHBlY3RlZE91
dHB1dCk7DQorCQlpZiAoaW5kZXggPT0gLTEgfHwgZXhwZWN0ZWRPdXRwdXQubGVuZ3RoKCkgPT0g
MCkgew0KKwkJCVN5c3RlbS5vdXQucHJpbnRsbihVdGlsLmRpc3BsYXlTdHJpbmcocmVzdWx0LCAz
KSk7DQorCQl9DQorCQlpZiAoaW5kZXggPT0gLTEpIHsNCisJCQlhc3NlcnRFcXVhbHMoIldyb25n
IGNvbnRlbnRzIiwgZXhwZWN0ZWRPdXRwdXQsIHJlc3VsdCk7DQorCQl9DQorCX0NCit9DQorLy8g
aHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM1MzA4NQ0KK3B1
YmxpYyB2b2lkIHRlc3QwNTUoKSB7DQorCUNvbXBpbGVyT3B0aW9ucyBvcHRpb25zID0gbmV3IENv
bXBpbGVyT3B0aW9ucyhnZXRDb21waWxlck9wdGlvbnMoKSk7DQorCVN0cmluZyBzb3VyY2UgPQ0K
KwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsgDQorCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWFp
bihTdHJpbmdbXSBhcmdzKSB7XG4iICsgDQorCQkJIgkJT2JqZWN0IHggPSBmb28oKTtcbiIgKyAN
CisJCQkiCQlsb25nIHkgPSAobG9uZykgeDtcbiIgKyANCisJCQkiCQlTeXN0ZW0ub3V0LnByaW50
bG4oeSk7XG4iICsgDQorCQkJIgl9XG4iICsgDQorCQkJIglwdWJsaWMgc3RhdGljIE9iamVjdCBm
b28oKSB7XG4iICsgDQorCQkJIgkJcmV0dXJuIG5ldyBMb25nKExvbmcuTUFYX1ZBTFVFKTtcbiIg
KyANCisJCQkiCX1cbiIgKyANCisJCQkifSI7DQorCWlmIChvcHRpb25zLnNvdXJjZUxldmVsIDwg
Q2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfNykgew0KKwkJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoDQor
CQkJCW5ldyBTdHJpbmdbXSB7DQorCQkJCQkiWC5qYXZhIiwNCisJCQkJCXNvdXJjZQ0KKwkJCQl9
LA0KKwkJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBs
aW5lIDQpXG4iICsgDQorCQkJCSIJbG9uZyB5ID0gKGxvbmcpIHg7XG4iICsgDQorCQkJCSIJICAg
ICAgICAgXl5eXl5eXl5cbiIgKyANCisJCQkJIkNhbm5vdCBjYXN0IGZyb20gT2JqZWN0IHRvIGxv
bmdcbiIgKyANCisJCQkJIi0tLS0tLS0tLS1cbiINCisJCQkpOw0KKwl9IGVsc2Ugew0KKwkJdGhp
cy5ydW5Db25mb3JtVGVzdCgNCisJCQkJbmV3IFN0cmluZ1tdIHsNCisJCQkJCSJYLmphdmEiLA0K
KwkJCQkJc291cmNlDQorCQkJCX0sDQorCQkJCSI5MjIzMzcyMDM2ODU0Nzc1ODA3Ig0KKwkJCSk7
DQorCX0NCit9DQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTM1MzA4NQ0KK3B1YmxpYyB2b2lkIHRlc3QwNTYoKSB7DQorCUNvbXBpbGVyT3B0aW9ucyBv
cHRpb25zID0gbmV3IENvbXBpbGVyT3B0aW9ucyhnZXRDb21waWxlck9wdGlvbnMoKSk7DQorCVN0
cmluZyBzb3VyY2UgPQ0KKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsgDQorCQkJIglwdWJsaWMg
c3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iICsgDQorCQkJIgkJT2JqZWN0IHgg
PSBmb28oKTtcbiIgKyANCisJCQkiCQlzaG9ydCB5ID0gKHNob3J0KSB4O1xuIiArIA0KKwkJCSIJ
CVN5c3RlbS5vdXQucHJpbnRsbih5KTtcbiIgKyANCisJCQkiCX1cbiIgKyANCisJCQkiCXB1Ymxp
YyBzdGF0aWMgT2JqZWN0IGZvbygpIHtcbiIgKyANCisJCQkiCQlyZXR1cm4gbmV3IFNob3J0KChz
aG9ydCkgMSk7XG4iICsgDQorCQkJIgl9XG4iICsgDQorCQkJIn0iOw0KKwlpZiAob3B0aW9ucy5z
b3VyY2VMZXZlbCA8IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzcpIHsNCisJCXRoaXMucnVuTmVn
YXRpdmVUZXN0KA0KKwkJCQluZXcgU3RyaW5nW10gew0KKwkJCQkJIlguamF2YSIsDQorCQkJCQlz
b3VyY2UNCisJCQkJfSwNCisJCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkJIjEuIEVSUk9SIGlu
IFguamF2YSAoYXQgbGluZSA0KVxuIiArIA0KKwkJCQkiCXNob3J0IHkgPSAoc2hvcnQpIHg7XG4i
ICsgDQorCQkJCSIJICAgICAgICAgIF5eXl5eXl5eXlxuIiArIA0KKwkJCQkiQ2Fubm90IGNhc3Qg
ZnJvbSBPYmplY3QgdG8gc2hvcnRcbiIgKyANCisJCQkJIi0tLS0tLS0tLS1cbiINCisJCQkpOw0K
Kwl9IGVsc2Ugew0KKwkJdGhpcy5ydW5Db25mb3JtVGVzdCgNCisJCQkJbmV3IFN0cmluZ1tdIHsN
CisJCQkJCSJYLmphdmEiLA0KKwkJCQkJc291cmNlDQorCQkJCX0sDQorCQkJCSIxIg0KKwkJCSk7
DQorCX0NCit9DQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTM1MzA4NQ0KK3B1YmxpYyB2b2lkIHRlc3QwNTcoKSB7DQorCUNvbXBpbGVyT3B0aW9ucyBv
cHRpb25zID0gbmV3IENvbXBpbGVyT3B0aW9ucyhnZXRDb21waWxlck9wdGlvbnMoKSk7DQorCVN0
cmluZyBzb3VyY2UgPQ0KKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsgDQorCQkJIglwdWJsaWMg
c3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iICsgDQorCQkJIgkJT2JqZWN0IHgg
PSBmb28oKTtcbiIgKyANCisJCQkiCQlkb3VibGUgeSA9IChkb3VibGUpIHg7XG4iICsgDQorCQkJ
IgkJU3lzdGVtLm91dC5wcmludGxuKHkpO1xuIiArIA0KKwkJCSIJfVxuIiArIA0KKwkJCSIJcHVi
bGljIHN0YXRpYyBPYmplY3QgZm9vKCkge1xuIiArIA0KKwkJCSIJCXJldHVybiBuZXcgRG91Ymxl
KDEuMCk7XG4iICsgDQorCQkJIgl9XG4iICsgDQorCQkJIn0iOw0KKwlpZiAob3B0aW9ucy5zb3Vy
Y2VMZXZlbCA8IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzcpIHsNCisJCXRoaXMucnVuTmVnYXRp
dmVUZXN0KA0KKwkJCQluZXcgU3RyaW5nW10gew0KKwkJCQkJIlguamF2YSIsDQorCQkJCQlzb3Vy
Y2UNCisJCQkJfSwNCisJCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkJIjEuIEVSUk9SIGluIFgu
amF2YSAoYXQgbGluZSA0KVxuIiArIA0KKwkJCQkiCWRvdWJsZSB5ID0gKGRvdWJsZSkgeDtcbiIg
KyANCisJCQkJIgkgICAgICAgICAgIF5eXl5eXl5eXl5cbiIgKyANCisJCQkJIkNhbm5vdCBjYXN0
IGZyb20gT2JqZWN0IHRvIGRvdWJsZVxuIiArIA0KKwkJCQkiLS0tLS0tLS0tLVxuIg0KKwkJCSk7
DQorCX0gZWxzZSB7DQorCQl0aGlzLnJ1bkNvbmZvcm1UZXN0KA0KKwkJCQluZXcgU3RyaW5nW10g
ew0KKwkJCQkJIlguamF2YSIsDQorCQkJCQlzb3VyY2UNCisJCQkJfSwNCisJCQkJIjEuMCINCisJ
CQkpOw0KKwl9DQorfQ0KKy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVn
LmNnaT9pZD0zNTMwODUNCitwdWJsaWMgdm9pZCB0ZXN0MDU4KCkgew0KKwlDb21waWxlck9wdGlv
bnMgb3B0aW9ucyA9IG5ldyBDb21waWxlck9wdGlvbnMoZ2V0Q29tcGlsZXJPcHRpb25zKCkpOw0K
KwlTdHJpbmcgc291cmNlID0NCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArIA0KKwkJCSIJcHVi
bGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIiArIA0KKwkJCSIJCU9iamVj
dCB4ID0gZm9vKCk7XG4iICsgDQorCQkJIgkJZmxvYXQgeSA9IChmbG9hdCkgeDtcbiIgKyANCisJ
CQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oeSk7XG4iICsgDQorCQkJIgl9XG4iICsgDQorCQkJIglw
dWJsaWMgc3RhdGljIE9iamVjdCBmb28oKSB7XG4iICsgDQorCQkJIgkJcmV0dXJuIG5ldyBGbG9h
dCgxLjBmKTtcbiIgKyANCisJCQkiCX1cbiIgKyANCisJCQkifSI7DQorCWlmIChvcHRpb25zLnNv
dXJjZUxldmVsIDwgQ2xhc3NGaWxlQ29uc3RhbnRzLkpESzFfNykgew0KKwkJdGhpcy5ydW5OZWdh
dGl2ZVRlc3QoDQorCQkJCW5ldyBTdHJpbmdbXSB7DQorCQkJCQkiWC5qYXZhIiwNCisJCQkJCXNv
dXJjZQ0KKwkJCQl9LA0KKwkJCQkiLS0tLS0tLS0tLVxuIiArIA0KKwkJCQkiMS4gRVJST1IgaW4g
WC5qYXZhIChhdCBsaW5lIDQpXG4iICsgDQorCQkJCSIJZmxvYXQgeSA9IChmbG9hdCkgeDtcbiIg
KyANCisJCQkJIgkgICAgICAgICAgXl5eXl5eXl5eXG4iICsgDQorCQkJCSJDYW5ub3QgY2FzdCBm
cm9tIE9iamVjdCB0byBmbG9hdFxuIiArIA0KKwkJCQkiLS0tLS0tLS0tLVxuIg0KKwkJCSk7DQor
CX0gZWxzZSB7DQorCQl0aGlzLnJ1bkNvbmZvcm1UZXN0KA0KKwkJCQluZXcgU3RyaW5nW10gew0K
KwkJCQkJIlguamF2YSIsDQorCQkJCQlzb3VyY2UNCisJCQkJfSwNCisJCQkJIjEuMCINCisJCQkp
Ow0KKwl9DQorfQ0KKy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNn
aT9pZD0zNTMwODUNCitwdWJsaWMgdm9pZCB0ZXN0MDU5KCkgew0KKwlDb21waWxlck9wdGlvbnMg
b3B0aW9ucyA9IG5ldyBDb21waWxlck9wdGlvbnMoZ2V0Q29tcGlsZXJPcHRpb25zKCkpOw0KKwlT
dHJpbmcgc291cmNlID0NCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArIA0KKwkJCSIJcHVibGlj
IHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIiArIA0KKwkJCSIJCU9iamVjdCB4
ID0gZm9vKCk7XG4iICsNCisJCQkiCQl0cnkge1xuIiArIA0KKwkJCSIJCQlpbnQgeSA9IChpbnQp
IHg7XG4iICsNCisJCQkiCQl9IGNhdGNoIChDbGFzc0Nhc3RFeGNlcHRpb24gZSkge1xuIiArDQor
CQkJIgkJCVN5c3RlbS5vdXQucHJpbnRsbihcIlNVQ0NFU1NcIik7XG4iICsNCisJCQkiCQkJcmV0
dXJuO1xuIiArDQorCQkJIgkJfVxuIiArIA0KKwkJCSIJCVN5c3RlbS5vdXQucHJpbnRsbihcIkZB
SUxcIik7XG4iICsgDQorCQkJIgl9XG4iICsgDQorCQkJIglwdWJsaWMgc3RhdGljIE9iamVjdCBm
b28oKSB7XG4iICsgDQorCQkJIgkJcmV0dXJuIG5ldyBGbG9hdCgxLjBmKTtcbiIgKyANCisJCQki
CX1cbiIgKyANCisJCQkifSI7DQorCWlmIChvcHRpb25zLnNvdXJjZUxldmVsIDwgQ2xhc3NGaWxl
Q29uc3RhbnRzLkpESzFfNykgew0KKwkJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoDQorCQkJCW5ldyBT
dHJpbmdbXSB7DQorCQkJCQkiWC5qYXZhIiwNCisJCQkJCXNvdXJjZQ0KKwkJCQl9LA0KKwkJCQki
LS0tLS0tLS0tLVxuIiArIA0KKwkJCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDUpXG4i
ICsgDQorCQkJCSIJaW50IHkgPSAoaW50KSB4O1xuIiArIA0KKwkJCQkiCSAgICAgICAgXl5eXl5e
XlxuIiArIA0KKwkJCQkiQ2Fubm90IGNhc3QgZnJvbSBPYmplY3QgdG8gaW50XG4iICsgDQorCQkJ
CSItLS0tLS0tLS0tXG4iDQorCQkJKTsNCisJfSBlbHNlIHsNCisJCXRoaXMucnVuQ29uZm9ybVRl
c3QoDQorCQkJCW5ldyBTdHJpbmdbXSB7DQorCQkJCQkiWC5qYXZhIiwNCisJCQkJCXNvdXJjZQ0K
KwkJCQl9LA0KKwkJCQkiU1VDQ0VTUyINCisJCQkpOw0KKwl9DQorfQ0KKy8vIGh0dHBzOi8vYnVn
cy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zNTMwODUNCitwdWJsaWMgdm9pZCB0
ZXN0MDU5YigpIHsNCisJQ29tcGlsZXJPcHRpb25zIG9wdGlvbnMgPSBuZXcgQ29tcGlsZXJPcHRp
b25zKGdldENvbXBpbGVyT3B0aW9ucygpKTsNCisJU3RyaW5nIHNvdXJjZSA9DQorCQkJInB1Ymxp
YyBjbGFzcyBYIHtcbiIgKyANCisJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1td
IGFyZ3MpIHtcbiIgKyANCisJCQkiCQlPYmplY3QgeCA9IGZvbygpO1xuIiArIA0KKwkJCSIJCXRy
eSB7XG4iICsgDQorCQkJIgkJCWludCB5ID0gKGludCkgeDtcbiIgKw0KKwkJCSIJCX0gY2F0Y2gg
KENsYXNzQ2FzdEV4Y2VwdGlvbiBlKSB7XG4iICsNCisJCQkiCQkJU3lzdGVtLm91dC5wcmludGxu
KFwiU1VDQ0VTU1wiKTtcbiIgKw0KKwkJCSIJCQlyZXR1cm47XG4iICsNCisJCQkiCQl9XG4iICsg
DQorCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKFwiRkFJTFwiKTtcbiIgKw0KKwkJCSIJfVxuIiAr
IA0KKwkJCSIJcHVibGljIHN0YXRpYyBPYmplY3QgZm9vKCkge1xuIiArIA0KKwkJCSIJCXJldHVy
biBCb29sZWFuLlRSVUU7XG4iICsgDQorCQkJIgl9XG4iICsgDQorCQkJIn0iOw0KKwlpZiAob3B0
aW9ucy5zb3VyY2VMZXZlbCA8IENsYXNzRmlsZUNvbnN0YW50cy5KREsxXzcpIHsNCisJCXRoaXMu
cnVuTmVnYXRpdmVUZXN0KA0KKwkJCQluZXcgU3RyaW5nW10gew0KKwkJCQkJIlguamF2YSIsDQor
CQkJCQlzb3VyY2UNCisJCQkJfSwNCisJCQkJIi0tLS0tLS0tLS1cbiIgKyANCisJCQkJIjEuIEVS
Uk9SIGluIFguamF2YSAoYXQgbGluZSA1KVxuIiArIA0KKwkJCQkiCWludCB5ID0gKGludCkgeDtc
biIgKyANCisJCQkJIgkgICAgICAgIF5eXl5eXl5cbiIgKyANCisJCQkJIkNhbm5vdCBjYXN0IGZy
b20gT2JqZWN0IHRvIGludFxuIiArIA0KKwkJCQkiLS0tLS0tLS0tLVxuIg0KKwkJCSk7DQorCX0g
ZWxzZSB7DQorCQl0aGlzLnJ1bkNvbmZvcm1UZXN0KA0KKwkJCQluZXcgU3RyaW5nW10gew0KKwkJ
CQkJIlguamF2YSIsDQorCQkJCQlzb3VyY2UNCisJCQkJfSwNCisJCQkJIlNVQ0NFU1MiDQorCQkJ
KTsNCisJfQ0KK30NCisvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5j
Z2k/aWQ9MzUzMDg1DQorcHVibGljIHZvaWQgdGVzdDA1OWMoKSB7DQorCUNvbXBpbGVyT3B0aW9u
cyBvcHRpb25zID0gbmV3IENvbXBpbGVyT3B0aW9ucyhnZXRDb21waWxlck9wdGlvbnMoKSk7DQor
CVN0cmluZyBzb3VyY2UgPQ0KKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsgDQorCQkJIglwdWJs
aWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iICsgDQorCQkJIgkJT2JqZWN0
IHggPSBmb28oKTtcbiIgKyANCisJCQkiCQl0cnkge1xuIiArIA0KKwkJCSIJCQljaGFyIHkgPSAo
Y2hhcikgeDtcbiIgKw0KKwkJCSIJCX0gY2F0Y2ggKENsYXNzQ2FzdEV4Y2VwdGlvbiBlKSB7XG4i
ICsNCisJCQkiCQkJU3lzdGVtLm91dC5wcmludGxuKFwiU1VDQ0VTU1wiKTtcbiIgKw0KKwkJCSIJ
CQlyZXR1cm47XG4iICsNCisJCQkiCQl9XG4iICsgDQorCQkJIgkJU3lzdGVtLm91dC5wcmludGxu
KFwiRkFJTFwiKTtcbiIgKw0KKwkJCSIJfVxuIiArIA0KKwkJCSIJcHVibGljIHN0YXRpYyBPYmpl
Y3QgZm9vKCkge1xuIiArIA0KKwkJCSIJCXJldHVybiBCb29sZWFuLlRSVUU7XG4iICsgDQorCQkJ
Igl9XG4iICsgDQorCQkJIn0iOw0KKwlpZiAob3B0aW9ucy5zb3VyY2VMZXZlbCA8IENsYXNzRmls
ZUNvbnN0YW50cy5KREsxXzcpIHsNCisJCXRoaXMucnVuTmVnYXRpdmVUZXN0KA0KKwkJCQluZXcg
U3RyaW5nW10gew0KKwkJCQkJIlguamF2YSIsDQorCQkJCQlzb3VyY2UNCisJCQkJfSwNCisJCQkJ
Ii0tLS0tLS0tLS1cbiIgKyANCisJCQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA1KVxu
IiArIA0KKwkJCQkiCWNoYXIgeSA9IChjaGFyKSB4O1xuIiArIA0KKwkJCQkiCSAgICAgICAgIF5e
Xl5eXl5eXG4iICsgDQorCQkJCSJDYW5ub3QgY2FzdCBmcm9tIE9iamVjdCB0byBjaGFyXG4iICsg
DQorCQkJCSItLS0tLS0tLS0tXG4iDQorCQkJKTsNCisJfSBlbHNlIHsNCisJCXRoaXMucnVuQ29u
Zm9ybVRlc3QoDQorCQkJCW5ldyBTdHJpbmdbXSB7DQorCQkJCQkiWC5qYXZhIiwNCisJCQkJCXNv
dXJjZQ0KKwkJCQl9LA0KKwkJCQkiU1VDQ0VTUyINCisJCQkpOw0KKwl9DQorfQ0KKy8vIGh0dHBz
Oi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zNTMwODUNCitwdWJsaWMg
dm9pZCB0ZXN0MDYwKCkgew0KKwlTdHJpbmcgc291cmNlID0NCisJCQkicHVibGljIGNsYXNzIFgg
e1xuIiArIA0KKwkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xu
IiArIA0KKwkJCSIJCU9iamVjdCB4ID0gZm9vKCk7XG4iICsgDQorCQkJIgkJQm9vbGVhbiB5ID0g
KEJvb2xlYW4pIHg7XG4iICsgDQorCQkJIgkJU3lzdGVtLm91dC5wcmludGxuKHkpO1xuIiArIA0K
KwkJCSIJfVxuIiArIA0KKwkJCSIJcHVibGljIHN0YXRpYyBPYmplY3QgZm9vKCkge1xuIiArIA0K
KwkJCSIJCXJldHVybiBCb29sZWFuLlRSVUU7XG4iICsgDQorCQkJIgl9XG4iICsgDQorCQkJIn0i
Ow0KKwl0aGlzLnJ1bkNvbmZvcm1UZXN0KA0KKwkJCW5ldyBTdHJpbmdbXSB7DQorCQkJCSJYLmph
dmEiLA0KKwkJCQlzb3VyY2UNCisJCQl9LA0KKwkJCSJ0cnVlIg0KKwkJKTsNCit9DQorLy8gaHR0
cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM1MzA4NQ0KK3B1Ymxp
YyB2b2lkIHRlc3QwNjEoKSB7DQorCVN0cmluZyBzb3VyY2UgPQ0KKwkJCSJwdWJsaWMgY2xhc3Mg
WCB7XG4iICsgDQorCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7
XG4iICsgDQorCQkJIgkJT2JqZWN0IHggPSBmb28oKTtcbiIgKyANCisJCQkiCQl0cnkge1xuIiAr
IA0KKwkJCSIJCQlGbG9hdCB5ID0gKEZsb2F0KSB4O1xuIiArDQorCQkJIgkJfSBjYXRjaCAoQ2xh
c3NDYXN0RXhjZXB0aW9uIGUpIHtcbiIgKw0KKwkJCSIJCQlTeXN0ZW0ub3V0LnByaW50bG4oXCJT
VUNDRVNTXCIpO1xuIiArDQorCQkJIgkJCXJldHVybjtcbiIgKw0KKwkJCSIJCX1cbiIgKyANCisJ
CQkiCQlTeXN0ZW0ub3V0LnByaW50bG4oXCJGQUlMXCIpO1xuIiArDQorCQkJIgl9XG4iICsgDQor
CQkJIglwdWJsaWMgc3RhdGljIE9iamVjdCBmb28oKSB7XG4iICsgDQorCQkJIgkJcmV0dXJuIEJv
b2xlYW4uVFJVRTtcbiIgKyANCisJCQkiCX1cbiIgKyANCisJCQkifSI7DQorCXRoaXMucnVuQ29u
Zm9ybVRlc3QoDQorCQkJbmV3IFN0cmluZ1tdIHsNCisJCQkJIlguamF2YSIsDQorCQkJCXNvdXJj
ZQ0KKwkJCX0sDQorCQkJIlNVQ0NFU1MiDQorCQkpOw0KK30NCiBwdWJsaWMgc3RhdGljIENsYXNz
IHRlc3RDbGFzcygpIHsNCiAJcmV0dXJuIENhc3RUZXN0LmNsYXNzOw0KIH0NCg==
</data>

          </attachment>
      

    </bug>

</bugzilla>