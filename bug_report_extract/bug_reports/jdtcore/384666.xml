<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>384666</bug_id>
          
          <creation_ts>2012-07-09 17:46:00 -0400</creation_ts>
          <short_desc>[1.8][compiler] improve debuggability of the Parser wrt lambda expressions</short_desc>
          <delta_ts>2012-07-10 08:15:12 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.8</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Stephan Herrmann">stephan.herrmann</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>amj87.iitr</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2134745</commentid>
    <comment_count>0</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-07-09 17:46:30 -0400</bug_when>
    <thetext>While reviewing bug 380194 I have some small suggestions that might help
during future debugging of this code:


(1) Scanner.toString()
How about including this.nextToken in the output, e.g.,:
  
	if (this.nextToken != TerminalTokens.TokenNameNotAToken) {
		buffer.append(&quot;&lt;-- Ends here [regettable=&quot;+toStringAction(this.nextToken)+&quot;]\n===============================\n&quot;); //$NON-NLS-1$ //$NON-NLS-2$
	} else {
		buffer.append(&quot;&lt;-- Ends here\n===============================\n&quot;); //$NON-NLS-1$
	}


(2) LambdaExpression.printExpression():

In &quot;this.body.print(tab, output);&quot; &apos;tab&apos; should perhaps be passed only
conditionally, like if body is a Block?


(3) LambdaExpressionSyntaxTest:

I&apos;d personally prefer more explicit method names. Or, ensure that actually
all contained methods test lambda expressions (and move other tests like for
reference expressions to a separate file).
I was trying to debug parsing of lambda expressions and was surprised that
some tests didn&apos;t contain any, yet I found no pattern for selecting only
the relevant tests.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2134850</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-07-10 00:24:43 -0400</bug_when>
    <thetext>(In reply to comment #0)

&gt; (1) Scanner.toString()
&gt; How about including this.nextToken in the output, e.g.,:

Good one.

&gt; (2) LambdaExpression.printExpression():
&gt; 
&gt; In &quot;this.body.print(tab, output);&quot; &apos;tab&apos; should perhaps be passed only
&gt; conditionally, like if body is a Block?

Good one. I did notice some funny formatting, but let it lie for the
moment, I&apos;ll fix it.

&gt; (3) LambdaExpressionSyntaxTest:
&gt; 
&gt; I&apos;d personally prefer more explicit method names. Or, ensure that actually
&gt; all contained methods test lambda expressions (and move other tests like for
&gt; reference expressions to a separate file).

Every test has a descriptive comment above it that spells out what scenario
is being tested. Reference expressions equate to an implicit lambda, so I
chose to put it all in the same pile - I can break it down into two.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2135006</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-07-10 08:14:57 -0400</bug_when>
    <thetext>Fix and tests released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=3f60c9b8b6041548c5cf76290845b4be1c2aa43b

Reference expressions have now been moved to 
ReferenceExpressionSyntaxTest.java</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>