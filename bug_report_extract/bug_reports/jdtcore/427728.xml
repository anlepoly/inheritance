<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>427728</bug_id>
          
          <creation_ts>2014-02-08 11:09:00 -0500</creation_ts>
          <short_desc>[1.8] Type Inference rejects calls requiring boxing/unboxing</short_desc>
          <delta_ts>2014-02-21 06:36:36 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3.1</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Carsten Otto">eclipse</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>eclipse</cc>
    
    <cc>manpalat</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2360566</commentid>
    <comment_count>0</comment_count>
    <who name="Carsten Otto">eclipse</who>
    <bug_when>2014-02-08 11:09:12 -0500</bug_when>
    <thetext>The method max(int, int) in the type Math is not applicable for the arguments (int, Integer)

Does not compile:
Math.max(0, java.util.Collections.max(Collections.&lt;Integer&gt;emptySet()));

Compiles:
Math.max(0, java.util.Collections.&lt;Integer&gt;max(Collections.&lt;Integer&gt;emptySet()));

1.0.0.v20140208-0104_BETA_JAVA8</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360567</commentid>
    <comment_count>1</comment_count>
    <who name="Carsten Otto">eclipse</who>
    <bug_when>2014-02-08 11:14:30 -0500</bug_when>
    <thetext>Related (should I open a new bug)?

The method put(Test, Integer) in the type Map&lt;Test,Integer&gt; is not applicable for the arguments (null, int)

public static void main(String[] args) {
   Map&lt;Test, Integer&gt; map = new LinkedHashMap&lt;&gt;();
   map.put(null, Test.getInt());
}

private static &lt;T&gt; int getInt() {
   return 0;
}

It works without &lt;T&gt;:

private static int getInt() {
   return 0;
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360578</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-08 12:11:27 -0500</bug_when>
    <thetext>(In reply to Carsten Otto from comment #1)
&gt; Related (should I open a new bug)?

No, curiously, I had just reported this variant to Stephan before your bug came
in: 

public class X {

	static &lt;T&gt; int foo(T t) {
		return 0;
	}
	public static void main(String[] args) {
        goo(foo(10));
    }
	static void goo(Integer i) {
		
	}
}

basically, argument boxing and unboxing seems to be handled incorrectly
in the new inference engine.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360581</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-08 12:44:56 -0500</bug_when>
    <thetext>junits released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=d5ac975c618d30089a560c18456e768954cd9860

(disabled for 1.8)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360589</commentid>
    <comment_count>4</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-08 13:48:20 -0500</bug_when>
    <thetext>This got broken by the fix for bug 424631, but only because at that point the 1.8-specific code started to take more responsibility in determining parameter compatibility.

The root cause is: the 1.8-specific code only checks isCompatibleWith without doing the autoboxing checks. This is easily fixed by using Scope.parameterCompatibilityLevel(TypeBinding,TypeBinding) instead of isCompatibleWith. This stone kills all three birds reported above (excuse my metaphors :) ).

I made a comprehensive search for locations that might be affected by the same problem and found exactly two such locations, both inside Scope.compatibilityLevel18FromInner().

Released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=87c02024c35caa7b296fc7c28fa066d1219c7ebd</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360697</commentid>
    <comment_count>5</comment_count>
    <who name="Carsten Otto">eclipse</who>
    <bug_when>2014-02-09 10:47:54 -0500</bug_when>
    <thetext>Fixed in 1.0.0.v20140209-0103_BETA_JAVA8.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360699</commentid>
    <comment_count>6</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-02-09 11:01:16 -0500</bug_when>
    <thetext>(In reply to Carsten Otto from comment #5)
&gt; Fixed in 1.0.0.v20140209-0103_BETA_JAVA8.

Thanks for confirming.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2366679</commentid>
    <comment_count>7</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-02-21 06:36:36 -0500</bug_when>
    <thetext>Verified as working for Eclipse + Java 8 RC1 using Kepler SR2(RC4) +   
Eclipse Java Development Tools Patch for Java 8 Support (BETA)   
1.0.0.v20140220-2054</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>