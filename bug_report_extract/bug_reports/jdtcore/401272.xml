<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>401272</bug_id>
          
          <creation_ts>2013-02-20 03:47:00 -0500</creation_ts>
          <short_desc>[1.8][search] NPEs when searching for references to ArrayList#add(E) / get(int) from JRE8</short_desc>
          <delta_ts>2014-12-16 05:10:39 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Stephan Herrmann">stephan.herrmann</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>jarthana</cc>
    
    <cc>manpalat</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>vincent.kirsch</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="59554"
          type_id="1"
          status="+"
          setter="manpalat"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2219093</commentid>
    <comment_count>0</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-02-20 03:47:36 -0500</bug_when>
    <thetext>Build id: I20130204-1400

- configure a project for an early-access JRE8
- open class AbstractList
- search for references to method add(E e)

java.lang.NullPointerException
	at org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding$3.compare(ReferenceBinding.java:69)
	at java.util.TimSort.countRunAndMakeAscending(TimSort.java:329)
	at java.util.TimSort.sort(TimSort.java:189)
	at java.util.Arrays.sort(Arrays.java:727)
	at org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.sortMethods(ReferenceBinding.java:171)
	at org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.availableMethods(BinaryTypeBinding.java:265)
	at org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.locateMatches(ClassFileMatchLocator.java:200)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.process(MatchLocator.java:1699)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1143)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1184)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1316)
	at org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(JavaSearchParticipant.java:95)
	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches(BasicSearchEngine.java:231)
	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.search(BasicSearchEngine.java:515)
	at org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:584)
	at org.eclipse.jdt.internal.ui.search.JavaSearchQuery.run(JavaSearchQuery.java:144)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)
	
- search for references to get(int)

java.lang.NullPointerException
	at org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.directoryTable(ClasspathSourceDirectory.java:52)
	at org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.findClass(ClasspathSourceDirectory.java:109)
	at org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.findClass(JavaSearchNameEnvironment.java:146)
	at org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.findType(JavaSearchNameEnvironment.java:185)
	at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(LookupEnvironment.java:145)
	at org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getTypeOrPackage(PackageBinding.java:197)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.getTypeOrPackage(Scope.java:2798)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.getType(Scope.java:2516)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.getType(MatchLocator.java:899)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.getMethodBinding0(MatchLocator.java:955)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.getMethodBinding(MatchLocator.java:907)
	at org.eclipse.jdt.internal.core.search.matching.MethodLocator.matchMethod(MethodLocator.java:327)
	at org.eclipse.jdt.internal.core.search.matching.MethodLocator.resolveLevel(MethodLocator.java:664)
	at org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.locateMatches(ClassFileMatchLocator.java:209)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.process(MatchLocator.java:1699)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1143)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1184)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1316)
	at org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(JavaSearchParticipant.java:95)
	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches(BasicSearchEngine.java:231)
	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.search(BasicSearchEngine.java:515)
	at org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:584)
	at org.eclipse.jdt.internal.ui.search.JavaSearchQuery.run(JavaSearchQuery.java:144)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)
	
Neither of the problems occurs with JRE7.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2219123</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-02-20 04:31:57 -0500</bug_when>
    <thetext>Anirban, please take a look, TIA.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2219848</commentid>
    <comment_count>2</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-02-21 05:37:42 -0500</bug_when>
    <thetext>The second exception could be related to bug 377883, which would mean
it is relevant independent of the JRE version.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2301097</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-08-30 01:57:13 -0400</bug_when>
    <thetext>Reproduced with 8b100, Anirban, please follow up, TIA.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2315533</commentid>
    <comment_count>4</comment_count>
      <attachid>236211</attachid>
    <who name="ANIRBAN CHAKRABORTY">anchakrk</who>
    <bug_when>2013-10-08 08:36:54 -0400</bug_when>
    <thetext>Created attachment 236211
Patch

Hello,
Patch complies with http://www.eclipse.org/legal/CoO.php.
Manual testing is done for the error scenario. Regression is also run.
Thanks
Anirban</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2315574</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-10-08 09:20:00 -0400</bug_when>
    <thetext>Anirban, please include a test. We have a reproducible scenario and so
we should always include a test.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2319908</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-10-17 18:26:43 -0400</bug_when>
    <thetext>Anirban, this is a duplicate of bug 377883. As you can see there, quite
a few people are hitting this and we need to close this for M3.

*** This bug has been marked as a duplicate of bug 377883 ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2324271</commentid>
    <comment_count>7</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-10-29 04:48:03 -0400</bug_when>
    <thetext>Patch looks good.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2324386</commentid>
    <comment_count>8</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-10-29 09:56:15 -0400</bug_when>
    <thetext>The first NPE looks to be a bigger problem to me. I had a quick look and looks like some of the methods have null binding for this type:

private static final class com.sun.xml.internal.bind.v2.runtime.reflect.Lister$IDREFS&lt;BeanT extends java.lang.Object, PropT extends java.lang.Object&gt;

Anirban, please go ahead and release the fix against bug 377883. We will use this one to track the issue of null method bindings.

Srikanth/Stephan, is there ever valid case where we might allow null method bindings? It looks to be that some code that gets access to this array is the culprit. Will try and see what the issue is.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2324395</commentid>
    <comment_count>9</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-10-29 10:05:47 -0400</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #8)
&gt; Anirban, please go ahead and release the fix against bug 377883. We will use
&gt; this one to track the issue of null method bindings.

Sorry, I didn&apos;t notice that bug 377883 is actually targeting M4. So, I guess that can wait for M4.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2324431</commentid>
    <comment_count>10</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-10-29 10:51:14 -0400</bug_when>
    <thetext>Here&apos;s the root cause:

org.eclipse.jdt.internal.compiler.problem.AbortType: Pb(700) The class file Lister&lt;BeanT,PropT,ItemT,PackT&gt;.IDREFS&lt;BeanT,PropT&gt; contains a signature &apos;(Lcom/sun/xml/internal/bind/v2/runtime/reflect/Lister$IDREFS&lt;TBeanT;TPropT;&gt;.Pack;Ljava/lang/String;)V&apos; ill-formed at position 77
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.abort(TypeDeclaration.java:83)
	at org.eclipse.jdt.internal.compiler.problem.ProblemHandler.handle(ProblemHandler.java:179)
	at org.eclipse.jdt.internal.compiler.problem.ProblemReporter.handle(ProblemReporter.java:2147)
	at org.eclipse.jdt.internal.compiler.problem.ProblemReporter.handle(ProblemReporter.java:2210)
	at org.eclipse.jdt.internal.compiler.problem.ProblemReporter.corruptedSignature(ProblemReporter.java:1468)
	at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeFromSignature(LookupEnvironment.java:1306)
	at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeFromTypeSignature(LookupEnvironment.java:1351)
	at org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createMethod(BinaryTypeBinding.java:556)
	at org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createMethods(BinaryTypeBinding.java:661)
	at org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.cachePartsFrom(BinaryTypeBinding.java:377)
	at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(LookupEnvironment.java:700)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2343221</commentid>
    <comment_count>11</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-18 08:03:33 -0500</bug_when>
    <thetext>Stephan, I was trying to take a look at this problem, but now I get a CCE
in

java.lang.ClassCastException: org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding incompatible with org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
	at org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.rebindInnerPolies(InferenceContext18.java:683)
	at org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.computeCompatibleMethod(ParameterizedGenericMethodBinding.java:124)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.computeCompatibleMethod(Scope.java:703)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.computeCompatibleMethod(Scope.java:661)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.findMethod(Scope.java:1559)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.getMethod(Scope.java:2663)
	at org.eclipse.jdt.internal.compiler.ast.MessageSend.findMethodBinding(MessageSend.java:849)
	at org.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType(MessageSend.java:681)
	at org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.resolve(FieldDeclaration.java:264)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1145)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1319)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:570)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.process(MatchLocator.java:1730)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1147)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1188)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1320)
	at org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(JavaSearchParticipant.java:95)
	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches(BasicSearchEngine.java:231)
	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.search(BasicSearchEngine.java:515)
	at org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:584)
	at org.eclipse.jdt.internal.ui.search.JavaSearchQuery.run(JavaSearchQuery.java:144)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2343223</commentid>
    <comment_count>12</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-18 08:05:44 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #11)
&gt; Stephan, I was trying to take a look at this problem, but now I get a CCE
&gt; in
&gt; 
&gt; java.lang.ClassCastException:
&gt; org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
&gt; incompatible with org.eclipse.jdt.internal.compiler.lookup.ArrayBinding

Likely the same problem as https://bugs.eclipse.org/bugs/show_bug.cgi?id=424285
though the types involved are different.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2343233</commentid>
    <comment_count>13</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-12-18 08:29:33 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #11)
&gt; Stephan, I was trying to take a look at this problem, but now I get a CCE
&gt; in
&gt; 
&gt; java.lang.ClassCastException:
&gt; org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
&gt; incompatible with org.eclipse.jdt.internal.compiler.lookup.ArrayBinding

Using the example from bug 424285 and may latest workspace state I don&apos;t see the CCE. If you want to investigate the other bug you may avoid the CCE by changing this line in InferenceContext18.rebindInnerPolies:

	TypeBinding varArgsType = inferenceKind == CHECK_VARARG ? ((ArrayBinding)innerParameters[innerParameters.length-1]).elementsType() : null; 

Instead of 
   inferenceKind == CHECK_VARARG
try
   (inferenceKind == CHECK_VARARG &amp;&amp; innerMessage.isVarargs())
that&apos;s approximately what I have in may workspace.

Does that fix the CCE for you?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2343251</commentid>
    <comment_count>14</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-12-18 08:51:41 -0500</bug_when>
    <thetext>See also bug 424167 comment 8.

With that bug worked around in the debugger I now have an instance of the NPE in ClasspathSourceDirectory.directoryTable openly spread out on my desk for inspection :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2343280</commentid>
    <comment_count>15</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-12-18 09:20:20 -0500</bug_when>
    <thetext>Here&apos;s what I see at the time of the NPE in ClasspathSourceDirectory.directoryTable:

The following reference chain points to the ClasspathSourceDirectory, whose field directoryTable is null:

MatchLocator.unitScope.environment.nameEnvironment.locations[0]

Intermediate instances are of the expected types, nameEnvironment is a JavaSearchNameEnvironment.

The upper bound for the code area to investigate is JavaSearchParticipant.locateMatches(SearchDocument[], SearchPattern, IJavaSearchScope, SearchRequestor, IProgressMonitor): here we create the MatchLocator and I&apos;m quite sure that the unitScope is not passed in from outside, but must have been created inside.

The unitScope is assigned in 
- reportMatching(CompilationUnitDeclaration,boolean) 
the NPE is triggered (indirectly) from
- locateMatches(MatchLocator,ClassFile,IBinaryType)

Both methods are directly called from
- process(PossibleMatch,boolean)

Since inside process() locateMatches() comes *before* reportMatching() we are likely to see state from a previous invocation of process() spilling into the next, so focus of investigation is on the loop that calls process() for each MatchLocator.matchesToProcess.

I see that this loop &quot;finally&quot; does a possibleMatch.cleanUp() which should remove the scopes from AST, whereas the MatchLocator still holds onto its unitScope.

OTOH, the nameEnvironment.cleanup() that leads to nulling the field directoryTable is only invoked at the outer locateMatches(SearchDocument[]), as one of the very last actions there.

So much for the observed state, I&apos;ll try to rerun the bug to see how it comes into being.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2343322</commentid>
    <comment_count>16</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-12-18 10:15:44 -0500</bug_when>
    <thetext>Yep, the NPE in ClasspathSourceDirectory is reproduceable in the debugger (modulo the NPE in InferenceContext18, which needs working around).

I don&apos;t fully understand the protocol, but the usage of field MatchLocator.unitScope looks like explicitly asking for trouble:

The MatchLocator holds on to some unit scope (during report matching), I can&apos;t even see *any* cleanup of this field. However, the same MatchLocator happily calls nameEnvironment.cleanup() which makes this nameEnvironment unusable, while still the unit scope may hold on to that very name environment (indirectly).

Does anyone know, how this is supposed to work???

==== Here&apos;s how to fix this: ====

Everytime MatchLocator calls this.nameEnvironment.cleanup() it must also set this.unitScope = null; There are two such locations.

====

And here are some hints on how it might be possible to reproduce in a JUnit:

- one invocation of locateMatches(JavaProject,PossibleMatch[],int,int) 
  calls reportMatching with mustResolve==true and will assign this.unitScope
  This invocation terminates, then...
- in a next invocation of the same method we have a bunch of possibleMatches
  - one of the matches has a CUD that isEmpty()
    -&gt; triggers new ClassFileMatchLocator().locateMatches(..)
  - none of the matches preceeding the empty one have mustResolve==true
    -&gt; this.unitScope is not reassigned from reportMatching()

If all these bits can be arranged then we should be able to see the old unitScope leak into ClassFileMatchLocator.locateMatches which finds the unitScope and has no idea that it has been invalidated.

Invalidation happens in MatchLocator.initialize(..).

Does anyone have the time to use these instructions for building a JUnit?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2343328</commentid>
    <comment_count>17</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-12-18 10:24:59 -0500</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #13)
&gt; (In reply to Srikanth Sankaran from comment #11)
&gt; &gt; Stephan, I was trying to take a look at this problem, but now I get a CCE
&gt; &gt; in
&gt; &gt; 
&gt; &gt; java.lang.ClassCastException:
&gt; &gt; org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
&gt; &gt; incompatible with org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
&gt; 
&gt; Using the example from bug 424285 and may latest workspace state I don&apos;t see
&gt; the CCE. If you want to investigate the other bug you may avoid the CCE by
&gt; changing this line in InferenceContext18.rebindInnerPolies:
&gt; 
&gt; 	TypeBinding varArgsType = inferenceKind == CHECK_VARARG ?
&gt; ((ArrayBinding)innerParameters[innerParameters.length-1]).elementsType() :
&gt; null; 
&gt; 
&gt; Instead of 
&gt;    inferenceKind == CHECK_VARARG
&gt; try
&gt;    (inferenceKind == CHECK_VARARG &amp;&amp; innerMessage.isVarargs())
&gt; that&apos;s approximately what I have in may workspace.
&gt; 
&gt; Does that fix the CCE for you?

I&apos;ve pushed this fix as http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=18c4df4230cb68ef623d8983c23bc0f9428a5b47</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2344002</commentid>
    <comment_count>18</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-12-19 13:18:47 -0500</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #16)
&gt; And here are some hints on how it might be possible to reproduce in a JUnit:
&gt; 
&gt; - one invocation of locateMatches(JavaProject,PossibleMatch[],int,int) 
&gt;   calls reportMatching with mustResolve==true and will assign this.unitScope
&gt;   This invocation terminates, then...
&gt; - in a next invocation of the same method we have a bunch of possibleMatches
&gt;   - one of the matches has a CUD that isEmpty()
&gt;     -&gt; triggers new ClassFileMatchLocator().locateMatches(..)
&gt;   - none of the matches preceeding the empty one have mustResolve==true
&gt;     -&gt; this.unitScope is not reassigned from reportMatching()
&gt; 
&gt; If all these bits can be arranged then we should be able to see the old
&gt; unitScope leak into ClassFileMatchLocator.locateMatches which finds the
&gt; unitScope and has no idea that it has been invalidated.
&gt; 
&gt; Invalidation happens in MatchLocator.initialize(..).
&gt; 
&gt; Does anyone have the time to use these instructions for building a JUnit?

One thing I forgot to mention: the invocations of locateMatches(JavaProject,PossibleMatch[],int,int) split the full set of possible matches in chunks of MatchLocator.MAX_AT_ONCE. So, for creating a test you&apos;d either have to ensure more than 400 possible matches or somehow tweak this threshold - to ensure that the method is called more than once.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2344014</commentid>
    <comment_count>19</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-12-19 13:30:18 -0500</bug_when>
    <thetext>Hm, this bug has been moving from one exception to the other. Let me try to summarize:

1. NPE in ReferenceBinding$3.compare from comment 0:
Root cause is mentioned in comment 10. I haven&apos;t seen it lately, hope it can still be reproduced.

2. NPE in ClasspathSourceDirectory.directoryTable from comment 0:
Maybe the same as bug 377883. IMHO a must-fix for master ASAP. Instructions for writing a test (tricky) and for fixing (easy) contained in comment 16.

3. CCE from comment 11:
Fixed as of comment 17.

The bug is assigned to Anirban. Are you working on (1) and/or (2)?

I suggest to resolve (2) via bug 377883 (4.4 M5) and leave this bug for (1) only.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2344158</commentid>
    <comment_count>20</comment_count>
    <who name="ANIRBAN CHAKRABORTY">anchakrk</who>
    <bug_when>2013-12-19 23:25:51 -0500</bug_when>
    <thetext>Hello,
The other bug 377883 was impossible to reproduce this side.

But the original problem (NPE by ArrayList) was reproducible. I was working on that earlier, but had to divert focus for other requirement. But, I&apos;ll work on this again ASAP.
Apologies for the delay.

Thanks
Anirban</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2351499</commentid>
    <comment_count>21</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-01-18 12:24:48 -0500</bug_when>
    <thetext>The NPE in ClasspathSourceDirectory.directoryTable has been fixed in master via bug 377883.

Leaves us with only the NPE in ReferenceBinding$3.compare from comment 0 (I believe also comment 10 refers to that one, right?). Has anyone seen this NPE &quot;lately&quot;?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2362073</commentid>
    <comment_count>22</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-12 05:44:25 -0500</bug_when>
    <thetext>Stephan, I think you have much more context here. Thanks for taking this to 
closure.

(In reply to Stephan Herrmann from comment #21)
&gt; believe also comment 10 refers to that one, right?). Has anyone seen this
&gt; NPE &quot;lately&quot;?

Are the scenarios described in

https://bugs.eclipse.org/bugs/show_bug.cgi?id=401272
https://bugs.eclipse.org/bugs/show_bug.cgi?id=427000
https://bugs.eclipse.org/bugs/show_bug.cgi?id=369511
https://bugs.eclipse.org/bugs/show_bug.cgi?id=397159

useful ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2362117</commentid>
    <comment_count>23</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-12 07:48:32 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #22)
&gt; Stephan, I think you have much more context here. Thanks for taking this to 
&gt; closure.

Rereading this, I think this defect is ready for closing -  I am not able to 
reproduce the NPE for the problem scenario in comment#0 anymore, which I could
consistently do earlier. 

If there are other scenarios which produce similar crashes, they need to be
dealth with independently, we already have a bunch of reports.

&gt; https://bugs.eclipse.org/bugs/show_bug.cgi?id=401272
&gt; https://bugs.eclipse.org/bugs/show_bug.cgi?id=427000
&gt; https://bugs.eclipse.org/bugs/show_bug.cgi?id=369511
&gt; https://bugs.eclipse.org/bugs/show_bug.cgi?id=397159</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2366647</commentid>
    <comment_count>24</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-02-21 05:42:41 -0500</bug_when>
    <thetext>Verified for Java 8 RC1 using Kepler SR2 +  
Eclipse Java Development Tools Patch for Java 8 Support (BETA)   
1.0.0.v20140220-2054</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2497387</commentid>
    <comment_count>25</comment_count>
    <who name="Vincent Kirsch">vincent.kirsch</who>
    <bug_when>2014-12-16 03:43:37 -0500</bug_when>
    <thetext>Hi,

Sorry to crash the party, but I get this issue in some circumstances.

It happens when doing a &apos;References in workspace&apos; search (Ctrl+Shift+G) on a method. It&apos;s not systematic.

I&apos;m using Eclipse Kepler, and it is up-to-date (at least, searching for updates does not return any result).

The Error log indicates this:

java.lang.NullPointerException
	at org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.directoryTable(ClasspathSourceDirectory.java:52)
	at org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.findClass(ClasspathSourceDirectory.java:109)
	at org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.findClass(JavaSearchNameEnvironment.java:146)
	at org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.findType(JavaSearchNameEnvironment.java:185)
	at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(LookupEnvironment.java:145)
	at org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getTypeOrPackage(PackageBinding.java:197)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.getTypeOrPackage(Scope.java:2799)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.getType(Scope.java:2556)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.getType(MatchLocator.java:899)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.getMethodBinding0(MatchLocator.java:955)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.getMethodBinding(MatchLocator.java:907)
	at org.eclipse.jdt.internal.core.search.matching.MethodLocator.matchMethod(MethodLocator.java:327)
	at org.eclipse.jdt.internal.core.search.matching.MethodLocator.resolveLevel(MethodLocator.java:664)
	at org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.locateMatches(ClassFileMatchLocator.java:209)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.process(MatchLocator.java:1699)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1143)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1184)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1301)
	at org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(JavaSearchParticipant.java:95)
	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches(BasicSearchEngine.java:231)
	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.search(BasicSearchEngine.java:515)
	at org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:584)
	at org.eclipse.jdt.internal.ui.search.JavaSearchQuery.run(JavaSearchQuery.java:144)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)


Session data:

eclipse.buildId=4.3.2.M20140221-1700
java.version=1.7.0_51
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product -vm C:\Java\JDK\jdk1.7.0_51\jre\bin\server\jvm.dll
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product -vm C:\Java\JDK\jdk1.7.0_51\jre\bin\server\jvm.dll


It is **possible** but not certain that this started to happen after I changed the eclipse.ini file to use the jvm.dll (as can be seen in the session data above).

Please let me know if you need additional data.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2497419</commentid>
    <comment_count>26</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-12-16 05:10:39 -0500</bug_when>
    <thetext>(In reply to Vincent Kirsch from comment #25)
&gt; The Error log indicates this:
&gt; 
&gt; java.lang.NullPointerException
&gt; 	at
&gt; org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory.
&gt; directoryTable(ClasspathSourceDirectory.java:52)

This looks similar to the error reported in bug 377883, comment #5, which was fixed in 4.4. Can you grab either a latest 4.5 build or 4.4.1 final release and see if the problem is gone? Thanks!</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>236211</attachid>
            <date>2013-10-08 08:36:00 -0400</date>
            <delta_ts>2013-10-08 08:36:54 -0400</delta_ts>
            <desc>Patch</desc>
            <filename>Bug-401272.patch</filename>
            <type>text/plain</type>
            <size>1871</size>
            <attacher name="ANIRBAN CHAKRABORTY">anchakrk</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvQ2xhc3NwYXRoU291cmNlRGlyZWN0b3J5Lmph
dmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvcmUvc2VhcmNoL21hdGNoaW5nL0NsYXNzcGF0aFNvdXJjZURpcmVjdG9yeS5qYXZhCmluZGV4
IGU2MGM2MjUuLjg1YTg0MDUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJj
aC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvbWF0Y2hpbmcvQ2xhc3NwYXRo
U291cmNlRGlyZWN0b3J5LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9tYXRjaGluZy9DbGFzc3BhdGhTb3Vy
Y2VEaXJlY3RvcnkuamF2YQpAQCAtMSwxMiArMSwxNiBAQAogLyoqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVy
cy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVy
cy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFu
eWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2Yg
dGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhp
cyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBz
ZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCiAgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlv
biBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2
YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0
ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3Qg
Y29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKiAKICAqIENv
bnRyaWJ1dG9yczoKICAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1w
bGVtZW50YXRpb24KICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29yZS5zZWFyY2gubWF0Y2hpbmc7CiAKQEAgLTQ3LDEwICs1MSwxMyBA
QAogcHVibGljIHZvaWQgY2xlYW51cCgpIHsKIAl0aGlzLmRpcmVjdG9yeUNhY2hlID0gbnVsbDsK
IH0KIAogU2ltcGxlTG9va3VwVGFibGUgZGlyZWN0b3J5VGFibGUoU3RyaW5nIHF1YWxpZmllZFBh
Y2thZ2VOYW1lKSB7CisJaWYgKHRoaXMuZGlyZWN0b3J5Q2FjaGUgPT0gbnVsbCkgeworCQlyZXR1
cm4gbnVsbDsKKwl9CiAJU2ltcGxlTG9va3VwVGFibGUgZGlyVGFibGUgPSAoU2ltcGxlTG9va3Vw
VGFibGUpIHRoaXMuZGlyZWN0b3J5Q2FjaGUuZ2V0KHF1YWxpZmllZFBhY2thZ2VOYW1lKTsKIAlp
ZiAoZGlyVGFibGUgPT0gdGhpcy5taXNzaW5nUGFja2FnZUhvbGRlcikgcmV0dXJuIG51bGw7IC8v
IHBhY2thZ2UgZXhpc3RzIGluIGFub3RoZXIgY2xhc3NwYXRoIGRpcmVjdG9yeSBvciBqYXIKIAlp
ZiAoZGlyVGFibGUgIT0gbnVsbCkgcmV0dXJuIGRpclRhYmxlOwogCiAJdHJ5IHs=
</data>
<flag name="review"
          id="59552"
          type_id="6"
          status="?"
          setter="anchakrk"
    />
          </attachment>
      

    </bug>

</bugzilla>