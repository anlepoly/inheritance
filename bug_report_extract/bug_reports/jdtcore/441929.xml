<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>441929</bug_id>
          
          <creation_ts>2014-08-17 16:32:00 -0400</creation_ts>
          <short_desc>[1.8][compiler] @SuppressWarnings(&quot;unchecked&quot;) not accepted on local variable</short_desc>
          <delta_ts>2015-01-20 03:51:54 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.4.2</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Luke Hutchison">luke.hutch</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>jarthana</cc>
    
    <cc>manpalat</cc>
    
    <cc>shankhba</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2439762</commentid>
    <comment_count>0</comment_count>
    <who name="Luke Hutchison">luke.hutch</who>
    <bug_when>2014-08-17 16:32:23 -0400</bug_when>
    <thetext>Given the following code, Eclipse gives a warning of &quot;Unnecessary @SuppressWarnings(&quot;unchecked&quot;)&quot;. However, if I remove that annotation, I get &quot;Type safety: Unchecked cast from Class&lt;capture#10-of ?&gt; to Class&lt;? extends T&gt;&quot;.



    public &lt;T&gt; ClasspathScanner matchClassesImplementing(final Class&lt;T&gt; iface, final InterfaceMatchProcessor&lt;T&gt; interfaceMatchProcessor) {
        if (!iface.isInterface()) {
            throw new RuntimeException(iface.getName() + &quot; is not an interface&quot;);
        }
        classMatchers.add(() -&gt; {
            // Call class loader for all classes implementing the specified interface, and call classMatchProcessor with these classes
                ArrayList&lt;String&gt; classesImplementingIface = interfaceToClasses.get(iface.getName());
                if (classesImplementingIface != null) {
                    for (String implClass : classesImplementingIface) {
                        try {
                            @SuppressWarnings(&quot;unchecked&quot;)
                            Class&lt;? extends T&gt; klass = (Class&lt;? extends T&gt;) Class.forName(implClass);
                            interfaceMatchProcessor.processMatch(klass);
                        } catch (ClassNotFoundException | NoClassDefFoundError e) {
                            throw new RuntimeException(e);
                        }
                    }
                } else {
                    Log.info(&quot;No classes found implementing interface &quot; + iface.getName());
                }
            });
        return this;
    }</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2441114</commentid>
    <comment_count>1</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-08-20 02:07:48 -0400</bug_when>
    <thetext>I can reproduce. The warning on Unnecessary @SuppressWarnings goes away if the lambda is not present.

Srikanth please investigate.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2445259</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-08-29 01:59:10 -0400</bug_when>
    <thetext>Can you please post a full example ? I get a bunch of compile errors and
no warning about suppress warning token.

Jay, what did you have to do to reproduce ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2445328</commentid>
    <comment_count>3</comment_count>
      <attachid>246527</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-08-29 04:46:14 -0400</bug_when>
    <thetext>Created attachment 246527
Example that compiles

Srikanth, try this one. I just used quick fixes to create the missing types/methods.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2445332</commentid>
    <comment_count>4</comment_count>
    <who name="Luke Hutchison">luke.hutch</who>
    <bug_when>2014-08-29 04:53:43 -0400</bug_when>
    <thetext>Sure, here&apos;s a minimal version (I just stripped out the irrelevant stuff). You get a warning on line (1), but if you remove it, you get a warning on line (2).

public class Y {

    @FunctionalInterface
    interface X {
        public void x();
    }

    public void z(X x) {
    }

    public &lt;T&gt; void test() {
        z(() -&gt; {
            try {
                @SuppressWarnings(&quot;unchecked&quot;)   // (1)
                Class&lt;? extends T&gt; klass = (Class&lt;? extends T&gt;) Class.forName(&quot;java.lang.Object&quot;);   // (2)
                System.out.println(klass.getName());
            } catch (Exception e) {
                e.printStackTrace();
            }
        });
    }
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2445450</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-08-29 08:41:21 -0400</bug_when>
    <thetext>Thanks Luke &amp; Jay, I plan to fix this for 4.4 M2.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2445503</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-08-29 10:18:32 -0400</bug_when>
    <thetext>This is an interesting bug. It is not that we don&apos;t accept suppresswarning
annotations on locals - we over accept them :)

Basically lambda expressions could resolved much many more times than just once.
We add a suupresswarning annotation for each resolution and then find that some
of them have nothing to suppress.

Fix will follow shortly.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2445509</commentid>
    <comment_count>7</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-08-29 10:25:37 -0400</bug_when>
    <thetext>Fix and tests available here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=aa23b2a14c48eb2e68c0b76ca03ad3cd13f67188</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2445715</commentid>
    <comment_count>8</comment_count>
    <who name="Luke Hutchison">luke.hutch</who>
    <bug_when>2014-08-29 20:35:53 -0400</bug_when>
    <thetext>Nice work, thanks for fixing this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2452671</commentid>
    <comment_count>9</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-09-16 13:54:29 -0400</bug_when>
    <thetext>Verified Fixed for Eclipse Mars 4.5 M2 Build id: I20140915-2000</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2460290</commentid>
    <comment_count>10</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-10-06 05:13:55 -0400</bug_when>
    <thetext>*** Bug 445909 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2473922</commentid>
    <comment_count>11</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-10-30 03:16:23 -0400</bug_when>
    <thetext>Srikanth, what&apos;s your take on this for 4.4.2?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2473983</commentid>
    <comment_count>12</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-10-30 05:17:53 -0400</bug_when>
    <thetext>This would be a good - I think the fix is small &amp; safe.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2474183</commentid>
    <comment_count>13</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-10-30 12:21:42 -0400</bug_when>
    <thetext>Reopening for back port.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2477668</commentid>
    <comment_count>14</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-11-06 03:24:24 -0500</bug_when>
    <thetext>Released in R4_4_maintenance via commit(s):

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=R4_4_maintenance&amp;id=3c32c3bfe179c26cb53eb37db6916a1aad240a19</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2507685</commentid>
    <comment_count>15</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2015-01-20 03:50:40 -0500</bug_when>
    <thetext>Verified for 4.4.2 RC1 using build M20150114-1500.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>246527</attachid>
            <date>2014-08-29 04:46:00 -0400</date>
            <delta_ts>2014-08-29 04:46:14 -0400</delta_ts>
            <desc>Example that compiles</desc>
            <filename>ClasspathScanner.java</filename>
            <type>text/x-java</type>
            <size>1704</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">cGFja2FnZSBzbmlwcGV0Ow0KDQppbXBvcnQgamF2YS51dGlsLkFycmF5TGlzdDsNCmltcG9ydCBq
YXZhLnV0aWwuSGFzaE1hcDsNCg0KcHVibGljIGNsYXNzIENsYXNzcGF0aFNjYW5uZXIgew0KDQoN
CglwdWJsaWMgPFQ+IENsYXNzcGF0aFNjYW5uZXIgbWF0Y2hDbGFzc2VzSW1wbGVtZW50aW5nKGZp
bmFsIENsYXNzPFQ+IGlmYWNlLCBmaW5hbCBJbnRlcmZhY2VNYXRjaFByb2Nlc3NvcjxUPiBpbnRl
cmZhY2VNYXRjaFByb2Nlc3Nvcikgew0KCQlDbGFzc3BhdGhTY2FubmVyIGNsYXNzTWF0Y2hlcnMg
PSBuZXcgQ2xhc3NwYXRoU2Nhbm5lcigpOw0KCSAgICAgICAgaWYgKCFpZmFjZS5pc0ludGVyZmFj
ZSgpKSB7DQoJICAgICAgICAgICAgdGhyb3cgbmV3IFJ1bnRpbWVFeGNlcHRpb24oaWZhY2UuZ2V0
TmFtZSgpICsgIiBpcyBub3QgYW4gaW50ZXJmYWNlIik7DQoJICAgICAgICB9DQoJICAgICAgICBI
YXNoTWFwPFN0cmluZywgQXJyYXlMaXN0PFN0cmluZz4+IGludGVyZmFjZVRvQ2xhc3NlcyA9IG5l
dyBIYXNoTWFwPFN0cmluZywgQXJyYXlMaXN0PFN0cmluZz4+KCk7DQoJICAgICAgICBjbGFzc01h
dGNoZXJzLmFkZCgoKSAtPiB7DQoJICAgICAgICAgICAgLy8gQ2FsbCBjbGFzcyBsb2FkZXIgZm9y
IGFsbCBjbGFzc2VzIGltcGxlbWVudGluZyB0aGUgc3BlY2lmaWVkIGludGVyZmFjZSwgYW5kIGNh
bGwgY2xhc3NNYXRjaFByb2Nlc3NvciB3aXRoIHRoZXNlIGNsYXNzZXMNCgkgICAgICAgICAgICAg
ICAgQXJyYXlMaXN0PFN0cmluZz4gY2xhc3Nlc0ltcGxlbWVudGluZ0lmYWNlID0gaW50ZXJmYWNl
VG9DbGFzc2VzLmdldChpZmFjZS5nZXROYW1lKCkpOw0KCSAgICAgICAgICAgICAgICBpZiAoY2xh
c3Nlc0ltcGxlbWVudGluZ0lmYWNlICE9IG51bGwpIHsNCgkgICAgICAgICAgICAgICAgICAgIGZv
ciAoU3RyaW5nIGltcGxDbGFzcyA6IGNsYXNzZXNJbXBsZW1lbnRpbmdJZmFjZSkgew0KCSAgICAg
ICAgICAgICAgICAgICAgICAgIHRyeSB7DQoJICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8v
QFN1cHByZXNzV2FybmluZ3MoInVuY2hlY2tlZCIpDQoJICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIENsYXNzPD8gZXh0ZW5kcyBUPiBrbGFzcyA9IChDbGFzczw/IGV4dGVuZHMgVD4pIENsYXNz
LmZvck5hbWUoaW1wbENsYXNzKTsNCgkgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW50ZXJm
YWNlTWF0Y2hQcm9jZXNzb3IucHJvY2Vzc01hdGNoKGtsYXNzKTsNCgkgICAgICAgICAgICAgICAg
ICAgICAgICB9IGNhdGNoIChDbGFzc05vdEZvdW5kRXhjZXB0aW9uIHwgTm9DbGFzc0RlZkZvdW5k
RXJyb3IgZSkgew0KCSAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgUnVudGlt
ZUV4Y2VwdGlvbihlKTsNCgkgICAgICAgICAgICAgICAgICAgICAgICB9DQoJICAgICAgICAgICAg
ICAgICAgICB9DQoJICAgICAgICAgICAgICAgIH0gZWxzZSB7DQoJICAgICAgICAgICAgICAgICAg
ICAvL0xvZy5pbmZvKCJObyBjbGFzc2VzIGZvdW5kIGltcGxlbWVudGluZyBpbnRlcmZhY2UgIiAr
IGlmYWNlLmdldE5hbWUoKSk7DQoJICAgICAgICAgICAgICAgIH0NCgkgICAgICAgICAgICB9KTsN
CgkgICAgICAgIHJldHVybiB0aGlzOw0KCSAgICB9DQoJcHVibGljIHZvaWQgYWRkKEZJIGkpew0K
CQkNCgl9DQp9DQoNCmludGVyZmFjZSBGSSB7DQoJcHVibGljIHZvaWQgYWRkKCk7DQp9
</data>

          </attachment>
      

    </bug>

</bugzilla>