<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>424154</bug_id>
          
          <creation_ts>2013-12-16 12:26:00 -0500</creation_ts>
          <short_desc>[1.8][compiler] PolyTypeBinding must not render the full lambda body in error messages</short_desc>
          <delta_ts>2014-04-29 08:58:46 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.4 M7</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Markus Keller">markus_keller</reporter>
          <assigned_to name="shankha banerjee">shankhba</assigned_to>
          <cc>jarthana</cc>
    
    <cc>markus_keller</cc>
    
    <cc>shankhba</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="62034"
          type_id="1"
          status="+"
          setter="jarthana"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2342418</commentid>
    <comment_count>0</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-12-16 12:26:28 -0500</bug_when>
    <thetext>PolyTypeBindings must not render the full lambda body in error messages.

(In reply to Srikanth Sankaran from bug 423584 comment #4)
&gt; (2) PolyTypeBinding&apos;s are supposed to transient short lived objects that
&gt; should not &quot;escape&quot; the overload resolution context.

I&apos;m not sure if they can be totally avoided if the code contains compile errors.

- Example where the lambda has too many arguments:

import java.util.List;
public class Snippet {
    void foo(List&lt;Process&gt; list) {
        list.removeIf((x, y) -&gt; {
            System.out.println(&quot;very&quot;);
            System.out.println(&quot;long&quot;);
            System.out.println(&quot;lamda&quot;);
            System.out.println(&quot;body&quot;);
            return true;
        }, &quot;bee&quot;);
    }
}


- Error message:

The method removeIf(Predicate&lt;? super Process&gt;) in the type Collection&lt;Process&gt; is not applicable for the arguments ((&lt;no type&gt; x, &lt;no type&gt; y) -&gt; {
  System.out.println(&quot;very&quot;);
  System.out.println(&quot;long&quot;);
  System.out.println(&quot;lamda&quot;);
  System.out.println(&quot;body&quot;);
  return true;
}, String) 

=&gt; Either PolyTypeBindings never show up in error messages, or their rendering must be reduced, like e.g. for anonymous type ...

        list.removeIf(new Runnable() {
            @Override
            public void run() {
                System.out.println(&quot;hi&quot;);
            }
        });

... the error message is:

The method removeIf(Predicate&lt;? super Process&gt;) in the type Collection&lt;Process&gt; is not applicable for the arguments (new Runnable(){})


If the argument count is correct, then I don&apos;t see PolyTypeBindings any more, but the error message can show illegal types. E.g. for ...

        list.removeIf((int x) -&gt; &quot;yep&quot;);

... the error message is:

The method removeIf(Predicate&lt;? super Process&gt;) in the type Collection&lt;Process&gt; is not applicable for the arguments (Predicate&lt;int&gt;)

=&gt; Predicate&lt;int&gt; gives me a good hint that there&apos;s something wrong with the &apos;int&apos;, although the type is not correct Java.


I think the best solution would be a custom notation for the type of the lambda that just lists the lambda&apos;s parameters, followed by &apos;-&gt; {}&apos;, e.g.:

For the first example:
The method removeIf(Predicate&lt;? super Process&gt;) in the type Collection&lt;Process&gt; is not applicable for the arguments ((? x, ? y) -&gt; {}, String)

For &apos;list.removeIf((int x) -&gt; &quot;yep&quot;);&apos; :
The method removeIf(Predicate&lt;? super Process&gt;) in the type Collection&lt;Process&gt; is not applicable for the arguments ((int x) -&gt; {})</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2342559</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-12-16 19:50:33 -0500</bug_when>
    <thetext>(In reply to Markus Keller from comment #0)
&gt; PolyTypeBindings must not render the full lambda body in error messages.
&gt; 
&gt; (In reply to Srikanth Sankaran from bug 423584 comment #4)
&gt; &gt; (2) PolyTypeBinding&apos;s are supposed to transient short lived objects that
&gt; &gt; should not &quot;escape&quot; the overload resolution context.
&gt; 
&gt; I&apos;m not sure if they can be totally avoided if the code contains compile
&gt; errors.

Technically, what is being exposed is the lambda AST, not the PolyTypeBinding.
Thanks, we will take a look.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2346057</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-06 09:20:38 -0500</bug_when>
    <thetext>Shankha, please take a look, assigning to you since you worked on similar
issue before.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2347252</commentid>
    <comment_count>3</comment_count>
      <attachid>238803</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-01-09 01:17:26 -0500</bug_when>
    <thetext>Created attachment 238803
Modified Patch which can be integrated into latest code

Following files could not be applied through git:
org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/SerializableLambdaTest.java
org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/RunOnlyJava8Tests.java
org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FunctionalExpression.java
org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java

These files were applied manually.


The patch could be applied through git for the following files:

org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java
org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileConstants.java
org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java
org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java
org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/IntersectionCastTypeBinding.java
org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java
org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java
org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SyntheticMethodBinding.java
org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeConstants.java


---------------------------------------------------------------------

I have changed the copyright of all the files to 2014  and few indentation issues.

---------------------------------------------------------------------

The compilation results in two erros:

Description	Resource	Path	Location	Type
StringBuilder cannot be resolved to a type	SerializableLambdaTest.java	/org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression	line 1141	Java Problem
StringBuilder cannot be resolved to a type	SerializableLambdaTest.java	/org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression	line 1141	Java Problem


Have modified StringBuilder to StringBuffer.


Test results for SerializableLambdaTest are green.

The generated patch can be successfully applied on the JAVA8 branch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2347258</commentid>
    <comment_count>4</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-01-09 01:41:08 -0500</bug_when>
    <thetext>(In reply to shankha banerjee from comment #3)
&gt; Created attachment 238803 [details]
&gt; Modified Patch which can be integrated into latest code
&gt; 
&gt; Following files could not be applied through git:
&gt; org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/
&gt; regression/SerializableLambdaTest.java
&gt; org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/
&gt; RunOnlyJava8Tests.java
&gt; org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/
&gt; FunctionalExpression.java
&gt; org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/
&gt; LambdaExpression.java
&gt; 
&gt; These files were applied manually.
&gt; 
&gt; 
&gt; The patch could be applied through git for the following files:
&gt; 
&gt; org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.
&gt; java
&gt; org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/
&gt; ClassFileConstants.java
&gt; org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/
&gt; CodeStream.java
&gt; org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/
&gt; ConstantPool.java
&gt; org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/
&gt; IntersectionCastTypeBinding.java
&gt; org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.
&gt; java
&gt; org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/
&gt; SourceTypeBinding.java
&gt; org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/
&gt; SyntheticMethodBinding.java
&gt; org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/
&gt; TypeConstants.java
&gt; 
&gt; 
&gt; ---------------------------------------------------------------------
&gt; 
&gt; I have changed the copyright of all the files to 2014  and few indentation
&gt; issues.
&gt; 
&gt; ---------------------------------------------------------------------
&gt; 
&gt; The compilation results in two erros:
&gt; 
&gt; Description	Resource	Path	Location	Type
&gt; StringBuilder cannot be resolved to a type	SerializableLambdaTest.java
&gt; /org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/
&gt; regression	line 1141	Java Problem
&gt; StringBuilder cannot be resolved to a type	SerializableLambdaTest.java
&gt; /org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/
&gt; regression	line 1141	Java Problem
&gt; 
&gt; 
&gt; Have modified StringBuilder to StringBuffer.
&gt; 
&gt; 
&gt; Test results for SerializableLambdaTest are green.
&gt; 
&gt; The generated patch can be successfully applied on the JAVA8 branch.

Sorry. Please ignore. This was for Bug 405104.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2347333</commentid>
    <comment_count>5</comment_count>
      <attachid>238810</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-01-09 04:59:33 -0500</bug_when>
    <thetext>Created attachment 238810
Patch

For  the example(Comment 0):
list.removeIf((int x) -&gt; &quot;yep&quot;);
test424154a

org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java

Error Message:
The method removeIf(Predicate&lt;? super Process&gt;) in the type Collection&lt;Process&gt; is not applicable for the arguments ((? x) -&gt; {}, boolean)

Please see the return value of the lambdaExpression is interpreted as boolean
as that is what one interprets from function declaration.

There are some differences in reporting without considering the changes. 

e.g.

Consider the test:
test424154b
org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java

foo(0, (int x, int y) -&gt; {return 2;}, 0);

Before we would have printed the lambda expression in the error message.
e.g. (int x, int y) -&gt; {return 2;}

With the patch we would print it like:

(? x, ? y) -&gt; {},  ?)

It is not possible or I do not know of a way to figure out the 
type of return value. 

This is not the case for the case 

foo2((int x) -&gt; \&quot;\&quot;)

where we have the bindings resolved. 

(? x) -&gt; {}, int)


Please review.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2379075</commentid>
    <comment_count>6</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-03-24 06:52:02 -0400</bug_when>
    <thetext>Thanks Shankha! I will review the patch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2379432</commentid>
    <comment_count>7</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-03-24 13:46:22 -0400</bug_when>
    <thetext>(In reply to Markus Keller from comment #0)
&gt; I think the best solution would be a custom notation for the type of the
&gt; lambda that just lists the lambda&apos;s parameters, followed by &apos;-&gt; {}&apos;, e.g.:
&gt; 
&gt; For the first example:
&gt; The method removeIf(Predicate&lt;? super Process&gt;) in the type
&gt; Collection&lt;Process&gt; is not applicable for the arguments
&gt; ((? x, ? y) -&gt; {}, String)

This was referring to the example

&gt;         list.removeIf((x, y) -&gt; {
&gt;             System.out.println(&quot;very&quot;);
&gt;             System.out.println(&quot;long&quot;);
&gt;             System.out.println(&quot;lamda&quot;);
&gt;             System.out.println(&quot;body&quot;);
&gt;             return true;
&gt;         }, &quot;bee&quot;);

The &quot;, String&quot; at the end of the proposed message for this example is because the method invocation has a second argument &quot;bee&quot; of type String.

The patch seems to use the &quot;, xxx&quot; notation for something else, which I don&apos;t really understand. Is that supposed to be the expected return type of the SAM? If we add more information about the SAM, then we would have to print the expected argument types as well. But I don&apos;t think we have space for this in the error message. But we could include the inferred return type of the lambda expression. E.g. after the &quot;-&gt;&quot; instead of the &quot;{}&quot; like this:

... is not applicable for the arguments ((? x, ? y) -&gt; boolean, String)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2383517</commentid>
    <comment_count>8</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-04-02 09:29:53 -0400</bug_when>
    <thetext>(In reply to Markus Keller from comment #7)
&gt; (In reply to Markus Keller from comment #0)

&gt; The &quot;, String&quot; at the end of the proposed message for this example is
&gt; because the method invocation has a second argument &quot;bee&quot; of type String.
&gt; 

Hi Markus,
I made a mistake in interpreting the example. I am attaching a new patch with the return type mentioned after &quot;-&gt;&quot;, without brackets &quot;{}&quot;.

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2383519</commentid>
    <comment_count>9</comment_count>
      <attachid>241509</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-04-02 09:30:59 -0400</bug_when>
    <thetext>Created attachment 241509
Patch

Test results are green.

Hi Jay,
Could you please review.

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2385222</commentid>
    <comment_count>10</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-04-07 00:42:06 -0400</bug_when>
    <thetext>Here are my comments on the patch:

1. I think it&apos;s better if we move all the new code to PolyTypeBinding#shortReadableName(). It might be even be possible to move some code inside LambdaExpresion, but I am not very particular about it. If we do that, the code should become lot simpler/smaller, for we can get rid of all the &apos;instanceof&apos; checks that is being done in ProblemReporter#parameterNames(). With this change, there is no need for the new method PolyTypeBinding#getExpression(). If you do it right, there should be no change required in ProblemReporter.

2. This patch doesn&apos;t seem to effect some tests, for e.g. NegativeLambdaExpressionsTest.test406614().

3. Some files need their copyright to be updated.

Please fix these and post a new patch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2385550</commentid>
    <comment_count>11</comment_count>
      <attachid>241677</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-04-07 09:57:09 -0400</bug_when>
    <thetext>Created attachment 241677
Patch

Patch: All test results are green.
Review comments (Comment 10) incorporated.
Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2385907</commentid>
    <comment_count>12</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-04-08 01:02:20 -0400</bug_when>
    <thetext>(In reply to shankha banerjee from comment #11)
&gt; Created attachment 241677 [details]
&gt; Patch

Here are some more comments:

1. The patch changes the implementation of PolyTypeBinding#readableName(). This is not only unnecessary, but also has side effects. For e.g., LambdaExpression#printExpression() is no longer invoked unless when directly invoked on the expression itself.

2. PolyTypeBinding#shortReadableName() calls super.shortReadableName() for non lambda expressions. This is &apos;probably&apos; not correct. &apos;super&apos; here will be a TypeBinding and it will not know anything of any expression and hence unlikely to return anything useful. May be, we can continue to use readableName() for such cases.

3. We should try to reuse as much code as we can from LambdaExpression#printExpression(). With the patch, we have some duplicate code between that method and LambdaExpression#readableName(). Besides, readableName() is also missing certain things like additional parenthesis if any.

4. In the following code:
       Argument[] args = this.arguments();
   There is no need to invoke the method, nor is a need for a local array. You can simply use this.arguments, just like it&apos;s done in printExpression().</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2386087</commentid>
    <comment_count>13</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-04-08 06:07:06 -0400</bug_when>
    <thetext>Hi Markus,

Is it okay to print the type of the lambda parameters  in place of &apos;?&apos; in the error message.

e.g 
Instead of ((? x, ? y) -&gt; boolean,
                    
           ((int x, int y) -&gt; boolean,

That seems to be format with other LambdaError messages.

LambdaExpression#printExpression

calls: this.arguments[i].print(0, output);

which in turn prints the type:

Argument#printExpression

if (this.type == null) {
    output.append(&quot;&lt;no type&gt; &quot;); //$NON-NLS-1$
} else {
    this.type.print(0, output).append(&apos; &apos;);
}

Thanks,
Shankha</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2386103</commentid>
    <comment_count>14</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-04-08 06:45:47 -0400</bug_when>
    <thetext>I think we should get rid of the &apos;?&apos; altogether when there are no types available or print &lt;no type&gt; like we already do. Using &apos;?&apos; might cause confusion since everyone associates it with wildcards and it could be even more confusing if there are already wildcards in the code.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2386320</commentid>
    <comment_count>15</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-04-08 11:35:24 -0400</bug_when>
    <thetext>I agree: Either print the inferred type or &quot;&lt;no type&gt;&quot;, but not &quot;?&quot;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2386798</commentid>
    <comment_count>16</comment_count>
      <attachid>241773</attachid>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-04-09 06:23:22 -0400</bug_when>
    <thetext>Created attachment 241773
Patch

Review comments incorporated with respect to Comment 12.

1) Withdrew the changes in PolyTypeBinding#readableName().
2) PolyTypeBinding#shortReadableName() calls PolyTypeBinding#readableName() for non - lambda expressions.
3) Removed LambdaExpression#readableName() and added changes to LambdaExpression#printExpression(.

Test results are good.

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2386989</commentid>
    <comment_count>17</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-04-09 10:53:34 -0400</bug_when>
    <thetext>(In reply to shankha banerjee from comment #16)
&gt; Created attachment 241773 [details]
&gt; Patch

Shankha, sorry I didn&apos;t spot this earlier, but some of the tests, we print &lt;no type&gt; for the return type. This is not correct. What happens is, at some point, the CU is not yet resolved and the return type has not yet been resolved. So, we will not be able to print the return type in all cases.

If we are not able to produce a consistent error message, I think we should go back to Markus&apos; initial suggestion of just printing (int x)-&gt; {}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2386992</commentid>
    <comment_count>18</comment_count>
      <attachid>241793</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-04-09 10:55:00 -0400</bug_when>
    <thetext>Created attachment 241793
Updated patch

Shankha, I just made that one small change I mentioned. Let me know if this is fine by you. Tests have been updated accordingly.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2386998</commentid>
    <comment_count>19</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-04-09 10:59:05 -0400</bug_when>
    <thetext>Hi Jay,
The only change I noticed is: 

+			output.append(&quot;{}&quot;); //$NON-NLS-1$

LambdaExpression.printExpression
and corresponding changes in test cases.

I am fine with the changes.

Thanks,
Shankha</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2387228</commentid>
    <comment_count>20</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-04-09 23:56:57 -0400</bug_when>
    <thetext>Thanks Shankha, patch was good. With those minor adjustments to tests I mentioned, released in master via:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=3655fb3ae21ac46b5060eb9e240a41cd2462bac2</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2394721</commentid>
    <comment_count>21</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-04-29 08:58:46 -0400</bug_when>
    <thetext>Verified for 4.4 M7 with build I20140428-2000</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>238803</attachid>
            <date>2014-01-09 01:17:00 -0500</date>
            <delta_ts>2014-01-09 01:42:17 -0500</delta_ts>
            <desc>Modified Patch which can be integrated into latest code</desc>
            <filename>Bug405104.patch</filename>
            <type>text/plain</type>
            <size>110679</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1NlcmlhbGl6YWJsZUxh
bWJkYVRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL1NlcmlhbGl6YWJs
ZUxhbWJkYVRlc3QuamF2YQpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwLi41NzI1
N2M3Ci0tLSAvZGV2L251bGwKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGls
ZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vU2Vy
aWFsaXphYmxlTGFtYmRhVGVzdC5qYXZhCkBAIC0wLDAgKzEsMTIxMyBAQAorLyoqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioKKyAqIENvcHlyaWdodCAoYykgMjAxNCBHb1Bpdm90YWwsIEluYy4gQWxsIFJp
Z2h0cyBSZXNlcnZlZC4KKyAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQg
dGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKKyAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0
aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAorICogd2hpY2ggYWNj
b21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKKyAqIGh0dHA6
Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sCisgKgorICogVGhpcyBpcyBhbiBp
bXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVjaWZpY2F0aW9uIGRldmVsb3BlZCB1
bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3MgKEpDUCkgYW5kIGlzIG1hZGUgYXZh
aWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1cnBvc2VzCisgKiBvbmx5LiBUaGUg
Y29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBKQ1Au
CisgKiAKKyAqIENvbnRyaWJ1dG9yczoKKyAqICAgICAgICBBbmR5IENsZW1lbnQgKEdvUGl2b3Rh
bCwgSW5jKSBhY2xlbWVudEBnb3Bpdm90YWwuY29tIC0gQ29udHJpYnV0aW9ucyBmb3IKKyAqICAg
ICAgICAgICAgICAgICAgICAgICAgICBCdWcgNDA1MTA0IC0gWzEuOF1bY29tcGlsZXJdW2NvZGVn
ZW5dIEltcGxlbWVudCBzdXBwb3J0IGZvciBzZXJpYWxpemVhYmxlIGxhbWJkYXMKKyAqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqLworcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21w
aWxlci5yZWdyZXNzaW9uOworCitpbXBvcnQgamF2YS5pby5GaWxlOworaW1wb3J0IGphdmEubGFu
Zy5yZWZsZWN0Lk1vZGlmaWVyOworaW1wb3J0IGphdmEudXRpbC5NYXA7CisKK2ltcG9ydCBvcmcu
ZWNsaXBzZS5qZHQuY29yZS5Ub29sRmFjdG9yeTsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29y
ZS51dGlsLkNsYXNzRmlsZUJ5dGVzRGlzYXNzZW1ibGVyOworaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5jb3JlLnV0aWwuSUJvb3RzdHJhcE1ldGhvZHNFbnRyeTsKK2ltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuY29yZS51dGlsLklDbGFzc0ZpbGVBdHRyaWJ1dGU7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmNvcmUudXRpbC5JQ2xhc3NGaWxlUmVhZGVyOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3Jl
LnV0aWwuSUNvbnN0YW50UG9vbDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS51dGlsLklD
b25zdGFudFBvb2xDb25zdGFudDsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS51dGlsLklD
b25zdGFudFBvb2xFbnRyeTsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS51dGlsLklDb25z
dGFudFBvb2xFbnRyeTI7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUudXRpbC5JTWV0aG9k
SW5mbzsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuaW1wbC5Db21w
aWxlck9wdGlvbnM7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUudXRpbC5C
b290c3RyYXBNZXRob2RzQXR0cmlidXRlOworCitpbXBvcnQganVuaXQuZnJhbWV3b3JrLlRlc3Q7
CisKK3B1YmxpYyBjbGFzcyBTZXJpYWxpemFibGVMYW1iZGFUZXN0IGV4dGVuZHMgQWJzdHJhY3RS
ZWdyZXNzaW9uVGVzdCB7CisKKwlzdGF0aWMgeworLy8JCVRFU1RTX05VTUJFUlMgPSBuZXcgaW50
IFtdIHsgNDAgfTsKKy8vCQlURVNUU19OQU1FUyA9IG5ldyBTdHJpbmdbXSB7ICJ0ZXN0VHlwZVZh
cmlhYmxlIiB9OworCX0KKwkKKwlwdWJsaWMgc3RhdGljIENsYXNzIHRlc3RDbGFzcygpIHsKKwkJ
cmV0dXJuIFNlcmlhbGl6YWJsZUxhbWJkYVRlc3QuY2xhc3M7CisJfQorCXB1YmxpYyBzdGF0aWMg
VGVzdCBzdWl0ZSgpIHsKKwkJcmV0dXJuIGJ1aWxkTWluaW1hbENvbXBsaWFuY2VUZXN0U3VpdGUo
dGVzdENsYXNzKCksIEZfMV84KTsKKwl9CisJcHVibGljIFNlcmlhbGl6YWJsZUxhbWJkYVRlc3Qo
U3RyaW5nIHRlc3ROYW1lKXsKKwkJc3VwZXIodGVzdE5hbWUpOworCX0KKworCS8vIEVuYWJsZXMg
dGhlIHRlc3RzIHRvIHJ1biBpbmRpdmlkdWFsbHkKKwlwcm90ZWN0ZWQgTWFwIGdldENvbXBpbGVy
T3B0aW9ucygpIHsKKwkJTWFwIGRlZmF1bHRPcHRpb25zID0gc3VwZXIuZ2V0Q29tcGlsZXJPcHRp
b25zKCk7CisJCWRlZmF1bHRPcHRpb25zLnB1dChDb21waWxlck9wdGlvbnMuT1BUSU9OX0NvbXBs
aWFuY2UsIENvbXBpbGVyT3B0aW9ucy5WRVJTSU9OXzFfOCk7CisJCWRlZmF1bHRPcHRpb25zLnB1
dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1NvdXJjZSwgQ29tcGlsZXJPcHRpb25zLlZFUlNJT05f
MV84KTsKKwkJZGVmYXVsdE9wdGlvbnMucHV0KENvbXBpbGVyT3B0aW9ucy5PUFRJT05fVGFyZ2V0
UGxhdGZvcm0sIENvbXBpbGVyT3B0aW9ucy5WRVJTSU9OXzFfOCk7CisJCXJldHVybiBkZWZhdWx0
T3B0aW9uczsKKwl9CisJCisJcHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgUlVOTkVSX0NMQVNT
ID0gCisJCSJwdWJsaWMgY2xhc3MgWSB7XG4iKworCQkiICBwdWJsaWMgc3RhdGljIHZvaWQgbWFp
bihTdHJpbmdbXWFyZ3MpIHtcbiIrCisJCSIgICAgY29tLmZvby5YLm1haW4oYXJncyk7XG4iKwor
CQkiICB9XG4iKworCQkifSI7CisJCisJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEhFTFBF
Ul9DTEFTUyA9CisJCSJwYWNrYWdlIHV0aWw7XG4iKworCQkiaW1wb3J0IGphdmEuaW8uKjtcbiIr
CisJCSJwdWJsaWMgY2xhc3MgSGVscGVyIHtcbiIrCisJCSJwdWJsaWMgc3RhdGljIHZvaWQgcHJp
bnQoT2JqZWN0IG8gKSB7U3lzdGVtLmVyci5wcmludGxuKG8pO31cbiIrCisJICAgICJzdGF0aWMg
Ynl0ZVtdW10gZGF0YTtcbiIrCisJICAgICJcbiIrCisJICAgICJwdWJsaWMgc3RhdGljIHZvaWQg
d3JpdGUoT2JqZWN0IG8pIHsgd3JpdGUoMCxvKTsgfVxuIisKKwkgICAgInB1YmxpYyBzdGF0aWMg
dm9pZCB3cml0ZShpbnQgaSwgT2JqZWN0IG8pIHtcbiIrCisJICAgICIgICAgaWYgKGRhdGE9PW51
bGwpIGRhdGE9bmV3IGJ5dGVbMTBdW107XG4iKworCSAgICAiICAgIHRyeSB7XG4iKworCSAgICAi
ICAgICAgICBCeXRlQXJyYXlPdXRwdXRTdHJlYW0gYmFvcyA9IG5ldyBCeXRlQXJyYXlPdXRwdXRT
dHJlYW0oKTtcbiIrCisJICAgICIgICAgICAgIE9iamVjdE91dHB1dFN0cmVhbSBvb3MgPSBuZXcg
T2JqZWN0T3V0cHV0U3RyZWFtKGJhb3MpO1xuIisKKwkgICAgIiAgICAgICAgb29zLndyaXRlT2Jq
ZWN0KG8pO1xuIisKKwkgICAgIiAgICAgICAgb29zLmZsdXNoKCk7XG4iKworCSAgICAiICAgICAg
ICBvb3MuY2xvc2UoKTtcbiIrCisJICAgICIgICAgICAgIGRhdGFbaV0gPSBiYW9zLnRvQnl0ZUFy
cmF5KCk7XG4iKworCSAgICAiICAgIH0gY2F0Y2ggKEV4Y2VwdGlvbiBlKSB7XG4iKworCSAgICAi
ICAgIH1cbiIrCisJICAgICJ9XG4iKworCSAgICAiXG4iKworCSAgICAicHVibGljIHN0YXRpYyBP
YmplY3QgcmVhZCgpIHsgcmV0dXJuIHJlYWQoMCk7IH1cbiIrCisJICAgICJwdWJsaWMgc3RhdGlj
IE9iamVjdCByZWFkKGludCBpKSB7XG4iKworCSAgICAiICAgIHRyeSB7XG4iKworCSAgICAiICAg
ICAgICBCeXRlQXJyYXlJbnB1dFN0cmVhbSBiYWlzID0gbmV3IEJ5dGVBcnJheUlucHV0U3RyZWFt
KGRhdGFbaV0pO1xuIisKKwkgICAgIiAgICAgICAgT2JqZWN0SW5wdXRTdHJlYW0gb2lzID0gbmV3
IE9iamVjdElucHV0U3RyZWFtKGJhaXMpO1xuIisKKwkgICAgIiAgICAgICAgT2JqZWN0IG8gPSBv
aXMucmVhZE9iamVjdCgpO1xuIisKKwkgICAgIiAgICAgICAgb2lzLmNsb3NlKCk7XG4iKworCSAg
ICAiICAgICAgICByZXR1cm4gbztcbiIrCisJICAgICIgICAgfSBjYXRjaCAoRXhjZXB0aW9uIGUp
IHtcbiIrCisJICAgICIgICAgfVxuIisKKwkgICAgIiAgICByZXR1cm4gbnVsbDtcbiIrCisJICAg
ICJ9XG4iKworCQkifVxuIjsJCisKKwkvKioKKwkgKiBWZXJpZmllcyB0aGF0IGFmdGVyIGRlc2Vy
aWFsaXppbmcgaXQgaXMgdXNhYmxlLCBhbHNvIHRoYXQgdGhlIGJvb3RzdHJhcCBtZXRob2RzIGF0
dHJpYnV0ZSBpbmRpY2F0ZXMgdXNlIG9mIGFsdE1ldGFmYWN0b3J5CisJICovCisJcHVibGljIHZv
aWQgdGVzdDAwMV9zaW1wbGUoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwkJdGhpcy5ydW5Db25mb3Jt
VGVzdCgKKwkJCQluZXcgU3RyaW5nW117CisJCQkJCSJYLmphdmEiLAorCQkJCQkiaW1wb3J0IGph
dmEuaW8uKjtcbiIrCisJCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iKworCQkJCQkiICAgIGludGVy
ZmFjZSBGb28gZXh0ZW5kcyBTZXJpYWxpemFibGUgeyBpbnQgbSgpOyB9XG4iKworCQkJCQkiXG4i
KworCQkJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIr
CisJCQkJCSIgICAgICAgIEZvbyBmMSA9IG51bGw7XG4iKworCQkJCQkiICAgICAgICBmMSA9ICgp
IC0+IDM7XG4iKworCQkJCQkiICAgICAgICB1dGlsLkhlbHBlci53cml0ZShmMSk7XG4iKworCQkJ
CQkiICAgICAgICBmMSA9IChGb28pdXRpbC5IZWxwZXIucmVhZCgpO1xuIisKKwkJCQkJIiAgICAg
ICAgU3lzdGVtLm91dC5wcmludGxuKGYxLm0oKSk7XG4iKworCQkJCQkiICAgIH1cbiIrCisJCQkJ
CSJ9XG4iLAorCQkJCQkiSGVscGVyLmphdmEiLEhFTFBFUl9DTEFTUywKKwkJCQkJfSwKKwkJCQkJ
IjMiLAorCQkJCQludWxsLAorCQkJCQl0cnVlLAorCQkJCQluZXcgU3RyaW5nIFtdIHsgIi1EZHVt
bXkiIH0pOyAvLyBOb3Qgc3VyZSwgdW5sZXNzIHdlIGZvcmNlIHRoZSBWTSB0byBub3QgYmUgcmV1
c2VkIGJ5IHBhc3NpbmcgZHVtbXkgdm0gYXJndW1lbnQsIHRoZSBnZW5lcmF0ZWQgcHJvZ3JhbSBh
Ym9ydHMgbWlkd2F5IHRocm91Z2ggaXRzIGV4ZWN1dGlvbi4KKwkJU3RyaW5nIGV4cGVjdGVkT3V0
cHV0ID0KKwkJCQkiMDogaW52b2tlc3RhdGljIGphdmEvbGFuZy9pbnZva2UvTGFtYmRhTWV0YWZh
Y3RvcnkuYWx0TWV0YWZhY3Rvcnk6KExqYXZhL2xhbmcvaW52b2tlL01ldGhvZEhhbmRsZXMkTG9v
a3VwO0xqYXZhL2xhbmcvU3RyaW5nO0xqYXZhL2xhbmcvaW52b2tlL01ldGhvZFR5cGU7W0xqYXZh
L2xhbmcvT2JqZWN0OylMamF2YS9sYW5nL2ludm9rZS9DYWxsU2l0ZTtcbiIrCisJCQkJIiAgTWV0
aG9kIGFyZ3VtZW50czpcbiIrCisJCQkJIiAgICAoKUlcbiIrCisJCQkJIiAgICBpbnZva2VzdGF0
aWMgWC5sYW1iZGEkMDooKUlcbiIrCisJCQkJIiAgICAoKUlcbiIrCisJCQkJIiAgICAxXG4iOwor
CQlTdHJpbmcgZGF0YSA9IHByaW50Qm9vdHN0cmFwTWV0aG9kc0F0dHJpYnV0ZShPVVRQVVRfRElS
ICsgRmlsZS5zZXBhcmF0b3IgKyAiWC5jbGFzcyIpOworCQljaGVja0V4cGVjdGVkKGV4cGVjdGVk
T3V0cHV0LGRhdGEpOworCX0KKwkKKwkvKioKKwkgKiBTYW5pdHkgdGVzdCwgbm9uIHNlcmlhbGl6
YWJsZSBzaG91bGQgaGF2ZSBib290c3RyYXAgbWV0aG9kcyBhdHRyaWJ1dGUgcmVmZXJlbmNlIHRv
IG1ldGFmYWN0b3J5LgorCSAqLworCXB1YmxpYyB2b2lkIHRlc3QwMDJfc2ltcGxlTm9uU2VyaWFs
aXphYmxlKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQkJ
bmV3IFN0cmluZ1tdeworCQkJCQkiWC5qYXZhIiwKKwkJCQkJImltcG9ydCBqYXZhLmlvLio7XG4i
KworCQkJCQkicHVibGljIGNsYXNzIFgge1xuIisKKwkJCQkJIiAgICBpbnRlcmZhY2UgRm9vIHsg
aW50IG0oKTsgfVxuIisKKwkJCQkJIlxuIisKKwkJCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQg
bWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iKworCQkJCQkiICAgICAgICBGb28gZjEgPSBudWxsO1xu
IisKKwkJCQkJIiAgICAgICAgZjEgPSAoKSAtPiAzO1xuIisKKwkJCQkJIiAgICAgICAgU3lzdGVt
Lm91dC5wcmludGxuKGYxLm0oKSk7XG4iKworCQkJCQkiICAgIH1cbiIrCisJCQkJCSJ9XG4iLAor
CQkJCQkiSGVscGVyLmphdmEiLEhFTFBFUl9DTEFTUywKKwkJCQkJfSwKKwkJCQkJIjMiKTsKKwkJ
U3RyaW5nIGV4cGVjdGVkT3V0cHV0ID0KKwkJCQkiMDogaW52b2tlc3RhdGljIGphdmEvbGFuZy9p
bnZva2UvTGFtYmRhTWV0YWZhY3RvcnkubWV0YWZhY3Rvcnk6KExqYXZhL2xhbmcvaW52b2tlL01l
dGhvZEhhbmRsZXMkTG9va3VwO0xqYXZhL2xhbmcvU3RyaW5nO0xqYXZhL2xhbmcvaW52b2tlL01l
dGhvZFR5cGU7TGphdmEvbGFuZy9pbnZva2UvTWV0aG9kVHlwZTtMamF2YS9sYW5nL2ludm9rZS9N
ZXRob2RIYW5kbGU7TGphdmEvbGFuZy9pbnZva2UvTWV0aG9kVHlwZTspTGphdmEvbGFuZy9pbnZv
a2UvQ2FsbFNpdGU7XG4iKworCQkJCSIgIE1ldGhvZCBhcmd1bWVudHM6XG4iKworCQkJCSIgICAg
KClJXG4iKworCQkJCSIgICAgaW52b2tlc3RhdGljIFgubGFtYmRhJDA6KClJXG4iKworCQkJCSIg
ICAgKClJXG4iOworCQlTdHJpbmcgZGF0YSA9IHByaW50Qm9vdHN0cmFwTWV0aG9kc0F0dHJpYnV0
ZShPVVRQVVRfRElSICsgRmlsZS5zZXBhcmF0b3IgKyAiWC5jbGFzcyIpOworCQljaGVja0V4cGVj
dGVkKGV4cGVjdGVkT3V0cHV0LGRhdGEpOworCX0KKworCS8qKgorCSAqIEJhc2ljIHRlc3QgdGhh
dCBkZXNlcmlhbGl6ZUxhbWJkYSBjYW4gY29wZSB3aXRoIHR3byBsYW1iZGEgZXhwcmVzc2lvbnMu
CisJICovCisJcHVibGljIHZvaWQgdGVzdDAwM190d29TZXJpYWxpemVkTGFtYmRhcygpIHRocm93
cyBFeGNlcHRpb24geworCQl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQkJCW5ldyBTdHJpbmdbXXsK
KwkJCQkJIlguamF2YSIsCisJCQkJCSJpbXBvcnQgamF2YS5pby4qO1xuIisKKwkJCQkJInB1Ymxp
YyBjbGFzcyBYIHtcbiIrCisJCQkJCSIgICAgaW50ZXJmYWNlIEZvbyBleHRlbmRzIFNlcmlhbGl6
YWJsZSB7IGludCBtKCk7IH1cbiIrCisJCQkJCSJcbiIrCisJCQkJCSIgICAgcHVibGljIHN0YXRp
YyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIisKKwkJCQkJIiAgICAgICAgRm9vIGYxID0g
bnVsbCwgZjIgPSBudWxsO1xuIisKKwkJCQkJIiAgICAgICAgZjEgPSAoKSAtPiAzMztcbiIrCisJ
CQkJCSIgICAgICAgIGYyID0gKCkgLT4gOTk7XG4iKworCQkJCQkiICAgICAgICB1dGlsLkhlbHBl
ci53cml0ZSgwLGYxKTtcbiIrCisJCQkJCSIgICAgICAgIHV0aWwuSGVscGVyLndyaXRlKDEsZjIp
O1xuIisKKwkJCQkJIiAgICAgICAgZjIgPSAoRm9vKXV0aWwuSGVscGVyLnJlYWQoMSk7XG4iKwor
CQkJCQkiICAgICAgICBmMSA9IChGb28pdXRpbC5IZWxwZXIucmVhZCgwKTtcbiIrCisJCQkJCSIg
ICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihmMS5tKCkpO1xuIisKKwkJCQkJIiAgICAgICAgU3lz
dGVtLm91dC5wcmludGxuKGYyLm0oKSk7XG4iKworCQkJCQkiICAgIH1cbiIrCisJCQkJCSJ9XG4i
LAorCQkJCQkiSGVscGVyLmphdmEiLEhFTFBFUl9DTEFTUywKKwkJCQkJfSwKKwkJCQkJIjMzXG45
OSIsCisJCQkJCW51bGwsCisJCQkJCXRydWUsCisJCQkJCW5ldyBTdHJpbmcgW10geyAiLURkdW1t
eSIgfSk7IC8vIE5vdCBzdXJlLCB1bmxlc3Mgd2UgZm9yY2UgdGhlIFZNIHRvIG5vdCBiZSByZXVz
ZWQgYnkgcGFzc2luZyBkdW1teSB2bSBhcmd1bWVudCwgdGhlIGdlbmVyYXRlZCBwcm9ncmFtIGFi
b3J0cyBtaWR3YXkgdGhyb3VnaCBpdHMgZXhlY3V0aW9uLgorCQlTdHJpbmcgZXhwZWN0ZWRPdXRw
dXQgPQorCQkJCSIwOiBpbnZva2VzdGF0aWMgamF2YS9sYW5nL2ludm9rZS9MYW1iZGFNZXRhZmFj
dG9yeS5hbHRNZXRhZmFjdG9yeTooTGphdmEvbGFuZy9pbnZva2UvTWV0aG9kSGFuZGxlcyRMb29r
dXA7TGphdmEvbGFuZy9TdHJpbmc7TGphdmEvbGFuZy9pbnZva2UvTWV0aG9kVHlwZTtbTGphdmEv
bGFuZy9PYmplY3Q7KUxqYXZhL2xhbmcvaW52b2tlL0NhbGxTaXRlO1xuIisKKwkJCQkiICBNZXRo
b2QgYXJndW1lbnRzOlxuIisKKwkJCQkiICAgICgpSVxuIisKKwkJCQkiICAgIGludm9rZXN0YXRp
YyBYLmxhbWJkYSQwOigpSVxuIisKKwkJCQkiICAgICgpSVxuIisKKwkJCQkiICAgIDFcbiIrCisJ
CQkJIjE6IGludm9rZXN0YXRpYyBqYXZhL2xhbmcvaW52b2tlL0xhbWJkYU1ldGFmYWN0b3J5LmFs
dE1ldGFmYWN0b3J5OihMamF2YS9sYW5nL2ludm9rZS9NZXRob2RIYW5kbGVzJExvb2t1cDtMamF2
YS9sYW5nL1N0cmluZztMamF2YS9sYW5nL2ludm9rZS9NZXRob2RUeXBlO1tMamF2YS9sYW5nL09i
amVjdDspTGphdmEvbGFuZy9pbnZva2UvQ2FsbFNpdGU7XG4iKworCQkJCSIgIE1ldGhvZCBhcmd1
bWVudHM6XG4iKworCQkJCSIgICAgKClJXG4iKworCQkJCSIgICAgaW52b2tlc3RhdGljIFgubGFt
YmRhJDE6KClJXG4iKworCQkJCSIgICAgKClJXG4iKworCQkJCSIgICAgMVxuIjsKKwkJU3RyaW5n
IGRhdGEgPSBwcmludEJvb3RzdHJhcE1ldGhvZHNBdHRyaWJ1dGUoT1VUUFVUX0RJUiArIEZpbGUu
c2VwYXJhdG9yICsgIlguY2xhc3MiKTsKKwkJY2hlY2tFeHBlY3RlZChleHBlY3RlZE91dHB1dCxk
YXRhKTsKKwl9CisJCisJcHVibGljIHZvaWQgdGVzdDAwNF9sYW1iZGFXaXRoUGFyYW1ldGVySW5Q
YWNrYWdlKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQkJ
bmV3IFN0cmluZ1tdeworCQkJCQkiWS5qYXZhIiwKKwkJCQkJInB1YmxpYyBjbGFzcyBZIHtcbiIr
CisJCQkJCSIgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdYXJncykge1xuIisKKwkJ
CQkJIiAgICBjb20uZm9vLlgubWFpbihhcmdzKTtcbiIrCisJCQkJCSIgIH1cbiIrCisJCQkJCSJ9
IiwKKwkJCQkJIlguamF2YSIsCisJCQkJCSJwYWNrYWdlIGNvbS5mb287XG4iKworCQkJCQkiaW1w
b3J0IGphdmEuaW8uKjtcbiIrCisJCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iKworCQkJCQkiICAg
IGludGVyZmFjZSBGb28gZXh0ZW5kcyBTZXJpYWxpemFibGUgeyBpbnQgbShpbnQgaSk7IH1cbiIr
CisJCQkJCSJcbiIrCisJCQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10g
YXJncykge1xuIisKKwkJCQkJIiAgICAgICAgRm9vIGYxID0gbnVsbCwgZjIgPSBudWxsO1xuIisK
KwkJCQkJIiAgICAgICAgZjEgPSAoaSkgLT4gaSoyO1xuIisKKwkJCQkJIiAgICAgICAgdXRpbC5I
ZWxwZXIud3JpdGUoZjEpO1xuIisKKwkJCQkJIiAgICAgICAgZjEgPSAoRm9vKXV0aWwuSGVscGVy
LnJlYWQoKTtcbiIrCisJCQkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihmMS5tKDQpKTtc
biIrCisJCQkJCSIgICAgfVxuIisKKwkJCQkJIn1cbiIsCisJCQkJCSJIZWxwZXIuamF2YSIsSEVM
UEVSX0NMQVNTLAorCQkJCQl9LAorCQkJCQkiOCIsCisJCQkJCW51bGwsCisJCQkJCXRydWUsCisJ
CQkJCW5ldyBTdHJpbmcgW10geyAiLURkdW1teSIgfSk7IC8vIE5vdCBzdXJlLCB1bmxlc3Mgd2Ug
Zm9yY2UgdGhlIFZNIHRvIG5vdCBiZSByZXVzZWQgYnkgcGFzc2luZyBkdW1teSB2bSBhcmd1bWVu
dCwgdGhlIGdlbmVyYXRlZCBwcm9ncmFtIGFib3J0cyBtaWR3YXkgdGhyb3VnaCBpdHMgZXhlY3V0
aW9uLgorCQlTdHJpbmcgZXhwZWN0ZWRPdXRwdXQgPQorCQkJCSIwOiBpbnZva2VzdGF0aWMgamF2
YS9sYW5nL2ludm9rZS9MYW1iZGFNZXRhZmFjdG9yeS5hbHRNZXRhZmFjdG9yeTooTGphdmEvbGFu
Zy9pbnZva2UvTWV0aG9kSGFuZGxlcyRMb29rdXA7TGphdmEvbGFuZy9TdHJpbmc7TGphdmEvbGFu
Zy9pbnZva2UvTWV0aG9kVHlwZTtbTGphdmEvbGFuZy9PYmplY3Q7KUxqYXZhL2xhbmcvaW52b2tl
L0NhbGxTaXRlO1xuIisKKwkJCQkiICBNZXRob2QgYXJndW1lbnRzOlxuIisKKwkJCQkiICAgIChJ
KUlcbiIrCisJCQkJIiAgICBpbnZva2VzdGF0aWMgY29tL2Zvby9YLmxhbWJkYSQwOihJKUlcbiIr
CisJCQkJIiAgICAoSSlJXG4iKworCQkJCSIgICAgMVxuIjsKKwkJU3RyaW5nIGRhdGEgPSBwcmlu
dEJvb3RzdHJhcE1ldGhvZHNBdHRyaWJ1dGUoT1VUUFVUX0RJUiArIEZpbGUuc2VwYXJhdG9yICsg
ImNvbSIrRmlsZS5zZXBhcmF0b3IrImZvbyIrRmlsZS5zZXBhcmF0b3IrIlguY2xhc3MiKTsKKwkJ
Y2hlY2tFeHBlY3RlZChleHBlY3RlZE91dHB1dCxkYXRhKTsKKwl9CisJCisJcHVibGljIHZvaWQg
dGVzdDAwNV9jYXB0dXJpbmdWYXJpYWJsZUxhbWJkYVdpdGhQYXJhbWV0ZXJJblBhY2thZ2UoKSB0
aHJvd3MgRXhjZXB0aW9uIHsKKwkJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJCQluZXcgU3RyaW5n
W117CisJCQkJCSJZLmphdmEiLAorCQkJCQkicHVibGljIGNsYXNzIFkge1xuIisKKwkJCQkJIiAg
cHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW11hcmdzKSB7XG4iKworCQkJCQkiICAgIGNv
bS5mb28uWC5tYWluKGFyZ3MpO1xuIisKKwkJCQkJIiAgfVxuIisKKwkJCQkJIn0iLAorCQkJCQki
WC5qYXZhIiwKKwkJCQkJInBhY2thZ2UgY29tLmZvbztcbiIrCisJCQkJCSJpbXBvcnQgamF2YS5p
by4qO1xuIisKKwkJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIrCisJCQkJCSIgICAgaW50ZXJmYWNl
IEZvbyBleHRlbmRzIFNlcmlhbGl6YWJsZSB7IGludCBtKGludCBpKTsgfVxuIisKKwkJCQkJIlxu
IisKKwkJCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4i
KworCQkJCQkiICAgICAgICBGb28gZjEgPSBudWxsO1xuIisKKwkJCQkJIiAgICAgICAgaW50IG11
bHRpcGxpZXIgPSAzO1xuIisKKwkJCQkJIiAgICAgICAgZjEgPSAoaSkgLT4gaSAqIG11bHRpcGxp
ZXI7XG4iKworCQkJCQkiICAgICAgICB1dGlsLkhlbHBlci53cml0ZShmMSk7XG4iKworCQkJCQki
ICAgICAgICBmMSA9IChGb28pdXRpbC5IZWxwZXIucmVhZCgpO1xuIisKKwkJCQkJIiAgICAgICAg
U3lzdGVtLm91dC5wcmludGxuKGYxLm0oNCkpO1xuIisKKwkJCQkJIiAgICB9XG4iKworCQkJCQki
fVxuIiwKKwkJCQkJIkhlbHBlci5qYXZhIixIRUxQRVJfQ0xBU1MsCisJCQkJCX0sCisJCQkJCSIx
MiIsCisJCQkJCW51bGwsCisJCQkJCXRydWUsCisJCQkJCW5ldyBTdHJpbmcgW10geyAiLURkdW1t
eSIgfSk7IC8vIE5vdCBzdXJlLCB1bmxlc3Mgd2UgZm9yY2UgdGhlIFZNIHRvIG5vdCBiZSByZXVz
ZWQgYnkgcGFzc2luZyBkdW1teSB2bSBhcmd1bWVudCwgdGhlIGdlbmVyYXRlZCBwcm9ncmFtIGFi
b3J0cyBtaWR3YXkgdGhyb3VnaCBpdHMgZXhlY3V0aW9uLgorCQlTdHJpbmcgZXhwZWN0ZWRPdXRw
dXQgPQorCQkJCSIwOiBpbnZva2VzdGF0aWMgamF2YS9sYW5nL2ludm9rZS9MYW1iZGFNZXRhZmFj
dG9yeS5hbHRNZXRhZmFjdG9yeTooTGphdmEvbGFuZy9pbnZva2UvTWV0aG9kSGFuZGxlcyRMb29r
dXA7TGphdmEvbGFuZy9TdHJpbmc7TGphdmEvbGFuZy9pbnZva2UvTWV0aG9kVHlwZTtbTGphdmEv
bGFuZy9PYmplY3Q7KUxqYXZhL2xhbmcvaW52b2tlL0NhbGxTaXRlO1xuIisKKwkJCQkiICBNZXRo
b2QgYXJndW1lbnRzOlxuIisKKwkJCQkiICAgIChJKUlcbiIrCisJCQkJIiAgICBpbnZva2VzdGF0
aWMgY29tL2Zvby9YLmxhbWJkYSQwOihJSSlJXG4iKworCQkJCSIgICAgKEkpSVxuIisKKwkJCQki
ICAgIDFcbiI7CisJCVN0cmluZyBkYXRhID0gcHJpbnRCb290c3RyYXBNZXRob2RzQXR0cmlidXRl
KE9VVFBVVF9ESVIgKyBGaWxlLnNlcGFyYXRvciArICJjb20iK0ZpbGUuc2VwYXJhdG9yKyJmb28i
K0ZpbGUuc2VwYXJhdG9yKyJYLmNsYXNzIik7CisJCWNoZWNrRXhwZWN0ZWQoZXhwZWN0ZWRPdXRw
dXQsZGF0YSk7CisJfQorCisJLy8gZGlmZmVyaW5nIHR5cGVzLCBub3QganVzdCBpbnQKKwlwdWJs
aWMgdm9pZCB0ZXN0MDA2X2NhcHR1cmluZ1ZhcmlhYmxlTGFtYmRhV2l0aFBhcmFtZXRlckluUGFj
a2FnZSgpIHRocm93cyBFeGNlcHRpb24geworCQl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQkJCW5l
dyBTdHJpbmdbXXsKKwkJCQkJIlkuamF2YSIsCisJCQkJCSJwdWJsaWMgY2xhc3MgWSB7XG4iKwor
CQkJCQkiICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXWFyZ3MpIHtcbiIrCisJCQkJ
CSIgICAgY29tLmZvby5YLm1haW4oYXJncyk7XG4iKworCQkJCQkiICB9XG4iKworCQkJCQkifSIs
CisJCQkJCSJYLmphdmEiLAorCQkJCQkicGFja2FnZSBjb20uZm9vO1xuIisKKwkJCQkJImltcG9y
dCBqYXZhLmlvLio7XG4iKworCQkJCQkicHVibGljIGNsYXNzIFgge1xuIisKKwkJCQkJIiAgICBp
bnRlcmZhY2UgRm9vIGV4dGVuZHMgU2VyaWFsaXphYmxlIHsgaW50IG0oU3RyaW5nIG4pOyB9XG4i
KworCQkJCQkiXG4iKworCQkJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1td
IGFyZ3MpIHtcbiIrCisJCQkJCSIgICAgICAgIEZvbyBmMSA9IG51bGw7XG4iKworCQkJCQkiICAg
ICAgICBpbnQgbXVsdGlwbGllciA9IDM7XG4iKworCQkJCQkiICAgICAgICBmMSA9IChuKSAtPiBJ
bnRlZ2VyLnZhbHVlT2YobikgKiBtdWx0aXBsaWVyO1xuIisKKwkJCQkJIiAgICAgICAgdXRpbC5I
ZWxwZXIud3JpdGUoZjEpO1xuIisKKwkJCQkJIiAgICAgICAgZjEgPSAoRm9vKXV0aWwuSGVscGVy
LnJlYWQoKTtcbiIrCisJCQkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihmMS5tKFwiMzNc
IikpO1xuIisKKwkJCQkJIiAgICB9XG4iKworCQkJCQkifVxuIiwKKwkJCQkJIkhlbHBlci5qYXZh
IixIRUxQRVJfQ0xBU1MsCisJCQkJCX0sCisJCQkJCSI5OSIsCisJCQkJCW51bGwsCisJCQkJCXRy
dWUsCisJCQkJCW5ldyBTdHJpbmcgW10geyAiLURkdW1teSIgfSk7IC8vIE5vdCBzdXJlLCB1bmxl
c3Mgd2UgZm9yY2UgdGhlIFZNIHRvIG5vdCBiZSByZXVzZWQgYnkgcGFzc2luZyBkdW1teSB2bSBh
cmd1bWVudCwgdGhlIGdlbmVyYXRlZCBwcm9ncmFtIGFib3J0cyBtaWR3YXkgdGhyb3VnaCBpdHMg
ZXhlY3V0aW9uLgorCQlTdHJpbmcgZXhwZWN0ZWRPdXRwdXQgPQorCQkJCSIwOiBpbnZva2VzdGF0
aWMgamF2YS9sYW5nL2ludm9rZS9MYW1iZGFNZXRhZmFjdG9yeS5hbHRNZXRhZmFjdG9yeTooTGph
dmEvbGFuZy9pbnZva2UvTWV0aG9kSGFuZGxlcyRMb29rdXA7TGphdmEvbGFuZy9TdHJpbmc7TGph
dmEvbGFuZy9pbnZva2UvTWV0aG9kVHlwZTtbTGphdmEvbGFuZy9PYmplY3Q7KUxqYXZhL2xhbmcv
aW52b2tlL0NhbGxTaXRlO1xuIisKKwkJCQkiICBNZXRob2QgYXJndW1lbnRzOlxuIisKKwkJCQki
ICAgIChMamF2YS9sYW5nL1N0cmluZzspSVxuIisKKwkJCQkiICAgIGludm9rZXN0YXRpYyBjb20v
Zm9vL1gubGFtYmRhJDA6KElMamF2YS9sYW5nL1N0cmluZzspSVxuIisKKwkJCQkiICAgIChMamF2
YS9sYW5nL1N0cmluZzspSVxuIisKKwkJCQkiICAgIDFcbiI7CisJCVN0cmluZyBkYXRhID0gcHJp
bnRCb290c3RyYXBNZXRob2RzQXR0cmlidXRlKE9VVFBVVF9ESVIgKyBGaWxlLnNlcGFyYXRvciAr
ICJjb20iK0ZpbGUuc2VwYXJhdG9yKyJmb28iK0ZpbGUuc2VwYXJhdG9yKyJYLmNsYXNzIik7CisJ
CWNoZWNrRXhwZWN0ZWQoZXhwZWN0ZWRPdXRwdXQsZGF0YSk7CisJfQorCQorCS8vIEZhaWxzIHRo
ZSBzYW1lIHdheSBhcyBqYXZhYyByaWdodCBub3cuLi4gd2l0aCBOUEUgKGIxMjApCisJcHVibGlj
IHZvaWQgeHRlc3QwMDdfY2FwdHVyaW5nRmllbGRMYW1iZGFXaXRoUGFyYW1ldGVySW5QYWNrYWdl
KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQkJbmV3IFN0
cmluZ1tdeworCQkJCQkiWS5qYXZhIiwKKwkJCQkJInB1YmxpYyBjbGFzcyBZIHtcbiIrCisJCQkJ
CSIgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdYXJncykge1xuIisKKwkJCQkJIiAg
ICBjb20uZm9vLlgubWFpbihhcmdzKTtcbiIrCisJCQkJCSIgIH1cbiIrCisJCQkJCSJ9IiwKKwkJ
CQkJIlguamF2YSIsCisJCQkJCSJwYWNrYWdlIGNvbS5mb287XG4iKworCQkJCQkiaW1wb3J0IGph
dmEuaW8uKjtcbiIrCisJCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iKworCQkJCQkiICAgIGludCBt
dWx0aXBsaWVyID0gMztcbiIrCisJCQkJCSIgICAgaW50ZXJmYWNlIEZvbyBleHRlbmRzIFNlcmlh
bGl6YWJsZSB7IGludCBtKGludCBpKTsgfVxuIisKKwkJCQkJIlxuIisKKwkJCQkJIiAgICBwdWJs
aWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iKworCQkJCQkiICAgICAgbmV3
IFgoKS5ydW4oKTtcbiIrCisJCQkJCSIgICAgfVxuIisKKwkJCQkJIiAgICBwdWJsaWMgdm9pZCBy
dW4oKSB7XG4iKworCQkJCQkiICAgICAgICBGb28gZjEgPSBudWxsO1xuIisKKwkJCQkJIiAgICAg
ICAgZjEgPSAoaSkgLT4gaSAqIHRoaXMubXVsdGlwbGllcjtcbiIrCisJCQkJCSIgICAgICAgIHV0
aWwuSGVscGVyLndyaXRlKGYxKTtcbiIrCisJCQkJCSIgICAgICAgIGYxID0gKEZvbyl1dGlsLkhl
bHBlci5yZWFkKCk7XG4iKworCQkJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oZjEubSg0
KSk7XG4iKworCQkJCQkiICAgIH1cbiIrCisJCQkJCSJ9XG4iLAorCQkJCQkiSGVscGVyLmphdmEi
LEhFTFBFUl9DTEFTUywKKwkJCQkJfSwKKwkJCQkJIjEyIiwKKwkJCQkJbnVsbCwKKwkJCQkJdHJ1
ZSwKKwkJCQkJbmV3IFN0cmluZyBbXSB7ICItRGR1bW15IiB9KTsgLy8gTm90IHN1cmUsIHVubGVz
cyB3ZSBmb3JjZSB0aGUgVk0gdG8gbm90IGJlIHJldXNlZCBieSBwYXNzaW5nIGR1bW15IHZtIGFy
Z3VtZW50LCB0aGUgZ2VuZXJhdGVkIHByb2dyYW0gYWJvcnRzIG1pZHdheSB0aHJvdWdoIGl0cyBl
eGVjdXRpb24uCisJCVN0cmluZyBleHBlY3RlZE91dHB1dCA9CisJCQkJIjA6IGludm9rZXN0YXRp
YyBqYXZhL2xhbmcvaW52b2tlL0xhbWJkYU1ldGFmYWN0b3J5LmFsdE1ldGFmYWN0b3J5OihMamF2
YS9sYW5nL2ludm9rZS9NZXRob2RIYW5kbGVzJExvb2t1cDtMamF2YS9sYW5nL1N0cmluZztMamF2
YS9sYW5nL2ludm9rZS9NZXRob2RUeXBlO1tMamF2YS9sYW5nL09iamVjdDspTGphdmEvbGFuZy9p
bnZva2UvQ2FsbFNpdGU7XG4iKworCQkJCSIgIE1ldGhvZCBhcmd1bWVudHM6XG4iKworCQkJCSIg
ICAgKEkpSVxuIisKKwkJCQkiICAgIGludm9rZXN0YXRpYyBjb20vZm9vL1gubGFtYmRhJDA6KElJ
KUlcbiIrCisJCQkJIiAgICAoSSlJXG4iKworCQkJCSIgICAgMVxuIjsKKwkJU3RyaW5nIGRhdGEg
PSBwcmludEJvb3RzdHJhcE1ldGhvZHNBdHRyaWJ1dGUoT1VUUFVUX0RJUiArIEZpbGUuc2VwYXJh
dG9yICsgImNvbSIrRmlsZS5zZXBhcmF0b3IrImZvbyIrRmlsZS5zZXBhcmF0b3IrIlguY2xhc3Mi
KTsKKwkJY2hlY2tFeHBlY3RlZChleHBlY3RlZE91dHB1dCxkYXRhKTsKKwl9CisJCisJcHVibGlj
IHZvaWQgdGVzdDAwOF9jYXB0dXJpbmdUd29WYXJpYWJsZUxhbWJkYVdpdGhQYXJhbWV0ZXJJblBh
Y2thZ2UoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwkJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJCQlu
ZXcgU3RyaW5nW117CisJCQkJCSJZLmphdmEiLAorCQkJCQkicHVibGljIGNsYXNzIFkge1xuIisK
KwkJCQkJIiAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW11hcmdzKSB7XG4iKworCQkJ
CQkiICAgIGNvbS5mb28uWC5tYWluKGFyZ3MpO1xuIisKKwkJCQkJIiAgfVxuIisKKwkJCQkJIn0i
LAorCQkJCQkiWC5qYXZhIiwKKwkJCQkJInBhY2thZ2UgY29tLmZvbztcbiIrCisJCQkJCSJpbXBv
cnQgamF2YS5pby4qO1xuIisKKwkJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIrCisJCQkJCSIgICAg
aW50ZXJmYWNlIEZvbyBleHRlbmRzIFNlcmlhbGl6YWJsZSB7IGZsb2F0IG0oaW50IGksIGZsb2F0
IGYpOyB9XG4iKworCQkJCQkiXG4iKworCQkJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWlu
KFN0cmluZ1tdIGFyZ3MpIHtcbiIrCisJCQkJCSIgICAgICBuZXcgWCgpLnJ1bigpO1xuIisKKwkJ
CQkJIiAgICB9XG4iKworCQkJCQkiICAgIHB1YmxpYyB2b2lkIHJ1bigpIHtcbiIrCisJCQkJCSIg
ICAgICAgIEZvbyBmMSA9IG51bGw7XG4iKworCQkJCQkiICAgICAgICBmMSA9IChpLGYpIC0+ICgo
ZmxvYXQpaSkgKiBmO1xuIisKKwkJCQkJIiAgICAgICAgdXRpbC5IZWxwZXIud3JpdGUoZjEpO1xu
IisKKwkJCQkJIiAgICAgICAgZjEgPSAoRm9vKXV0aWwuSGVscGVyLnJlYWQoKTtcbiIrCisJCQkJ
CSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihmMS5tKDMsNC4wZikpO1xuIisKKwkJCQkJIiAg
ICB9XG4iKworCQkJCQkifVxuIiwKKwkJCQkJIkhlbHBlci5qYXZhIixIRUxQRVJfQ0xBU1MsCisJ
CQkJCX0sCisJCQkJCSIxMi4wIiwKKwkJCQkJbnVsbCwKKwkJCQkJdHJ1ZSwKKwkJCQkJbmV3IFN0
cmluZyBbXSB7ICItRGR1bW15IiB9KTsgLy8gTm90IHN1cmUsIHVubGVzcyB3ZSBmb3JjZSB0aGUg
Vk0gdG8gbm90IGJlIHJldXNlZCBieSBwYXNzaW5nIGR1bW15IHZtIGFyZ3VtZW50LCB0aGUgZ2Vu
ZXJhdGVkIHByb2dyYW0gYWJvcnRzIG1pZHdheSB0aHJvdWdoIGl0cyBleGVjdXRpb24uCisJCVN0
cmluZyBleHBlY3RlZE91dHB1dCA9CisJCQkJIjA6IGludm9rZXN0YXRpYyBqYXZhL2xhbmcvaW52
b2tlL0xhbWJkYU1ldGFmYWN0b3J5LmFsdE1ldGFmYWN0b3J5OihMamF2YS9sYW5nL2ludm9rZS9N
ZXRob2RIYW5kbGVzJExvb2t1cDtMamF2YS9sYW5nL1N0cmluZztMamF2YS9sYW5nL2ludm9rZS9N
ZXRob2RUeXBlO1tMamF2YS9sYW5nL09iamVjdDspTGphdmEvbGFuZy9pbnZva2UvQ2FsbFNpdGU7
XG4iKworCQkJCSIgIE1ldGhvZCBhcmd1bWVudHM6XG4iKworCQkJCSIgICAgKElGKUZcbiIrCisJ
CQkJIiAgICBpbnZva2VzdGF0aWMgY29tL2Zvby9YLmxhbWJkYSQwOihJRilGXG4iKworCQkJCSIg
ICAgKElGKUZcbiIrCisJCQkJIiAgICAxXG4iOworCQlTdHJpbmcgZGF0YSA9IHByaW50Qm9vdHN0
cmFwTWV0aG9kc0F0dHJpYnV0ZShPVVRQVVRfRElSICsgRmlsZS5zZXBhcmF0b3IgKyAiY29tIitG
aWxlLnNlcGFyYXRvcisiZm9vIitGaWxlLnNlcGFyYXRvcisiWC5jbGFzcyIpOworCQljaGVja0V4
cGVjdGVkKGV4cGVjdGVkT3V0cHV0LGRhdGEpOworCX0KKwkKKwlwdWJsaWMgdm9pZCB0ZXN0MDA5
X2NhcHR1cmluZ1R3b1Nsb3RWYXJpYWJsZXNMYW1iZGFXaXRoUGFyYW1ldGVySW5QYWNrYWdlKCkg
dGhyb3dzIEV4Y2VwdGlvbiB7CisJCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQkJbmV3IFN0cmlu
Z1tdeworCQkJCQkiWS5qYXZhIixSVU5ORVJfQ0xBU1MsCisJCQkJCSJYLmphdmEiLAorCQkJCQki
cGFja2FnZSBjb20uZm9vO1xuIisKKwkJCQkJImltcG9ydCBqYXZhLmlvLio7XG4iKworCQkJCQki
cHVibGljIGNsYXNzIFgge1xuIisKKwkJCQkJIiAgICBpbnRlcmZhY2UgRm9vIGV4dGVuZHMgU2Vy
aWFsaXphYmxlIHsgZG91YmxlIG0oaW50IGksIGxvbmcgbCk7IH1cbiIrCisJCQkJCSJcbiIrCisJ
CQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIisKKwkJ
CQkJIiAgICAgIG5ldyBYKCkucnVuKCk7XG4iKworCQkJCQkiICAgIH1cbiIrCisJCQkJCSIgICAg
cHVibGljIHZvaWQgcnVuKCkge1xuIisKKwkJCQkJIiAgICAgICAgRm9vIGYxID0gbnVsbDtcbiIr
CisJCQkJCSIgICAgICAgIGYxID0gKGksbCkgLT4gKGRvdWJsZSkoaSpsKTtcbiIrCisJCQkJCSIg
ICAgICAgIHV0aWwuSGVscGVyLndyaXRlKGYxKTtcbiIrCisJCQkJCSIgICAgICAgIGYxID0gKEZv
byl1dGlsLkhlbHBlci5yZWFkKCk7XG4iKworCQkJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50
bG4oZjEubSgzLDQwTCkpO1xuIisKKwkJCQkJIiAgICB9XG4iKworCQkJCQkifVxuIiwKKwkJCQkJ
IkhlbHBlci5qYXZhIixIRUxQRVJfQ0xBU1MsCisJCQkJCX0sCisJCQkJCSIxMjAuMCIsCisJCQkJ
CW51bGwsCisJCQkJCXRydWUsCisJCQkJCW5ldyBTdHJpbmcgW10geyAiLURkdW1teSIgfSk7IC8v
IE5vdCBzdXJlLCB1bmxlc3Mgd2UgZm9yY2UgdGhlIFZNIHRvIG5vdCBiZSByZXVzZWQgYnkgcGFz
c2luZyBkdW1teSB2bSBhcmd1bWVudCwgdGhlIGdlbmVyYXRlZCBwcm9ncmFtIGFib3J0cyBtaWR3
YXkgdGhyb3VnaCBpdHMgZXhlY3V0aW9uLgorCQlTdHJpbmcgZXhwZWN0ZWRPdXRwdXQgPQorCQkJ
CSIwOiBpbnZva2VzdGF0aWMgamF2YS9sYW5nL2ludm9rZS9MYW1iZGFNZXRhZmFjdG9yeS5hbHRN
ZXRhZmFjdG9yeTooTGphdmEvbGFuZy9pbnZva2UvTWV0aG9kSGFuZGxlcyRMb29rdXA7TGphdmEv
bGFuZy9TdHJpbmc7TGphdmEvbGFuZy9pbnZva2UvTWV0aG9kVHlwZTtbTGphdmEvbGFuZy9PYmpl
Y3Q7KUxqYXZhL2xhbmcvaW52b2tlL0NhbGxTaXRlO1xuIisKKwkJCQkiICBNZXRob2QgYXJndW1l
bnRzOlxuIisKKwkJCQkiICAgIChJSilEXG4iKworCQkJCSIgICAgaW52b2tlc3RhdGljIGNvbS9m
b28vWC5sYW1iZGEkMDooSUopRFxuIisKKwkJCQkiICAgIChJSilEXG4iKworCQkJCSIgICAgMVxu
IjsKKwkJU3RyaW5nIGRhdGEgPSBwcmludEJvb3RzdHJhcE1ldGhvZHNBdHRyaWJ1dGUoT1VUUFVU
X0RJUiArIEZpbGUuc2VwYXJhdG9yICsgImNvbSIrRmlsZS5zZXBhcmF0b3IrImZvbyIrRmlsZS5z
ZXBhcmF0b3IrIlguY2xhc3MiKTsKKwkJY2hlY2tFeHBlY3RlZChleHBlY3RlZE91dHB1dCxkYXRh
KTsKKwl9CisJCisJcHVibGljIHZvaWQgdGVzdDAxMF9WYXJhcmdzTGFtYmRhRXhwcmVzc2lvbigp
IHRocm93cyBFeGNlcHRpb24geworCQl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQkJCW5ldyBTdHJp
bmdbXXsKKwkJCQkJIlkuamF2YSIsUlVOTkVSX0NMQVNTLAorCQkJCQkiWC5qYXZhIiwKKwkJCQkJ
InBhY2thZ2UgY29tLmZvbztcbiIrCisJCQkJCSJpbXBvcnQgamF2YS5pby4qO1xuIisKKwkJCQkJ
InB1YmxpYyBjbGFzcyBYIHtcbiIrCisJCQkJCSIgICAgaW50ZXJmYWNlIEZvbyBleHRlbmRzIFNl
cmlhbGl6YWJsZSB7IFN0cmluZyBtKFN0cmluZy4uLiBzcyk7IH1cbiIrCisJCQkJCSJcbiIrCisJ
CQkJCSIgICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIisKKwkJ
CQkJIiAgICAgIG5ldyBYKCkucnVuKCk7XG4iKworCQkJCQkiICAgIH1cbiIrCisJCQkJCSIgICAg
cHVibGljIHZvaWQgcnVuKCkge1xuIisKKwkJCQkJIiAgICAgICAgRm9vIGYxID0gbnVsbDtcbiIr
CisJCQkJCSIgICAgICAgIGYxID0gKHN0cmluZ3MpIC0+IHN0cmluZ3NbMF0rc3RyaW5nc1sxXTtc
biIrCisJCQkJCSIgICAgICAgIHV0aWwuSGVscGVyLndyaXRlKGYxKTtcbiIrCisJCQkJCSIgICAg
ICAgIGYxID0gKEZvbyl1dGlsLkhlbHBlci5yZWFkKCk7XG4iKworCQkJCQkiICAgICAgICBTeXN0
ZW0ub3V0LnByaW50bG4oZjEubShcImFiY1wiLFwiZGVmXCIpKTtcbiIrCisJCQkJCSIgICAgfVxu
IisKKwkJCQkJIn1cbiIsCisJCQkJCSJIZWxwZXIuamF2YSIsSEVMUEVSX0NMQVNTLAorCQkJCQl9
LAorCQkJCQkiYWJjZGVmIiwKKwkJCQkJbnVsbCwKKwkJCQkJdHJ1ZSwKKwkJCQkJbmV3IFN0cmlu
ZyBbXSB7ICItRGR1bW15IiB9KTsgLy8gTm90IHN1cmUsIHVubGVzcyB3ZSBmb3JjZSB0aGUgVk0g
dG8gbm90IGJlIHJldXNlZCBieSBwYXNzaW5nIGR1bW15IHZtIGFyZ3VtZW50LCB0aGUgZ2VuZXJh
dGVkIHByb2dyYW0gYWJvcnRzIG1pZHdheSB0aHJvdWdoIGl0cyBleGVjdXRpb24uCisJCVN0cmlu
ZyBleHBlY3RlZE91dHB1dCA9CisJCQkJIjA6IGludm9rZXN0YXRpYyBqYXZhL2xhbmcvaW52b2tl
L0xhbWJkYU1ldGFmYWN0b3J5LmFsdE1ldGFmYWN0b3J5OihMamF2YS9sYW5nL2ludm9rZS9NZXRo
b2RIYW5kbGVzJExvb2t1cDtMamF2YS9sYW5nL1N0cmluZztMamF2YS9sYW5nL2ludm9rZS9NZXRo
b2RUeXBlO1tMamF2YS9sYW5nL09iamVjdDspTGphdmEvbGFuZy9pbnZva2UvQ2FsbFNpdGU7XG4i
KworCQkJCSIgIE1ldGhvZCBhcmd1bWVudHM6XG4iKworCQkJCSIgICAgKFtMamF2YS9sYW5nL1N0
cmluZzspTGphdmEvbGFuZy9TdHJpbmc7XG4iKworCQkJCSIgICAgaW52b2tlc3RhdGljIGNvbS9m
b28vWC5sYW1iZGEkMDooW0xqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1N0cmluZztcbiIr
CisJCQkJIiAgICAoW0xqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1N0cmluZztcbiIrCisJ
CQkJIiAgICAxXG4iOworCQlTdHJpbmcgZGF0YSA9IHByaW50Qm9vdHN0cmFwTWV0aG9kc0F0dHJp
YnV0ZShPVVRQVVRfRElSICsgRmlsZS5zZXBhcmF0b3IgKyAiY29tIitGaWxlLnNlcGFyYXRvcisi
Zm9vIitGaWxlLnNlcGFyYXRvcisiWC5jbGFzcyIpOworCQljaGVja0V4cGVjdGVkKGV4cGVjdGVk
T3V0cHV0LGRhdGEpOworCX0KKwkKKwkvLyBGYWlscyBzYW1lIHdheSBhcyBqYXZhYyByaWdodCBu
b3cuLi4gd2l0aCBhbiBOUEUgKGIxMjApCisJcHVibGljIHZvaWQgeHRlc3QwMTFfQ2FwdHVyaW5n
SW5zdGFuY2UoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwkJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJ
CQluZXcgU3RyaW5nW117CisJCQkJCSJZLmphdmEiLFJVTk5FUl9DTEFTUywKKwkJCQkJIlguamF2
YSIsCisJCQkJCSJwYWNrYWdlIGNvbS5mb287XG4iKworCQkJCQkiaW1wb3J0IGphdmEuaW8uKjtc
biIrCisJCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iKworCQkJCQkiICAgIGludGVyZmFjZSBGb28g
ZXh0ZW5kcyBTZXJpYWxpemFibGUgeyBTdHJpbmcgbSgpOyB9XG4iKworCQkJCQkiXG4iKworCQkJ
CQkiICAgIFN0cmluZyBmaWVsZFZhbHVlID0gXCJoZWxsb1wiO1xuIisKKwkJCQkJIiAgICBwdWJs
aWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iKworCQkJCQkiICAgICAgbmV3
IFgoKS5ydW4oKTtcbiIrCisJCQkJCSIgICAgfVxuIisKKwkJCQkJIiAgICBwdWJsaWMgdm9pZCBy
dW4oKSB7XG4iKworCQkJCQkiICAgICAgICBGb28gZjEgPSBudWxsO1xuIisKKwkJCQkJIiAgICAg
ICAgZjEgPSAoKSAtPiB0aGlzLmZpZWxkVmFsdWU7XG4iKworCQkJCQkiICAgICAgICB1dGlsLkhl
bHBlci53cml0ZShmMSk7XG4iKworCQkJCQkiICAgICAgICBmMSA9IChGb28pdXRpbC5IZWxwZXIu
cmVhZCgpO1xuIisKKwkJCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGYxLm0oKSk7XG4i
KworCQkJCQkiICAgIH1cbiIrCisJCQkJCSJ9XG4iLAorCQkJCQkiSGVscGVyLmphdmEiLEhFTFBF
Ul9DTEFTUywKKwkJCQkJfSwKKwkJCQkJImFiY2RlZiIsCisJCQkJCW51bGwsCisJCQkJCXRydWUs
CisJCQkJCW5ldyBTdHJpbmcgW10geyAiLURkdW1teSIgfSk7IC8vIE5vdCBzdXJlLCB1bmxlc3Mg
d2UgZm9yY2UgdGhlIFZNIHRvIG5vdCBiZSByZXVzZWQgYnkgcGFzc2luZyBkdW1teSB2bSBhcmd1
bWVudCwgdGhlIGdlbmVyYXRlZCBwcm9ncmFtIGFib3J0cyBtaWR3YXkgdGhyb3VnaCBpdHMgZXhl
Y3V0aW9uLgorCQlTdHJpbmcgZXhwZWN0ZWRPdXRwdXQgPQorCQkJCSIwOiBpbnZva2VzdGF0aWMg
amF2YS9sYW5nL2ludm9rZS9MYW1iZGFNZXRhZmFjdG9yeS5hbHRNZXRhZmFjdG9yeTooTGphdmEv
bGFuZy9pbnZva2UvTWV0aG9kSGFuZGxlcyRMb29rdXA7TGphdmEvbGFuZy9TdHJpbmc7TGphdmEv
bGFuZy9pbnZva2UvTWV0aG9kVHlwZTtbTGphdmEvbGFuZy9PYmplY3Q7KUxqYXZhL2xhbmcvaW52
b2tlL0NhbGxTaXRlO1xuIisKKwkJCQkiICBNZXRob2QgYXJndW1lbnRzOlxuIisKKwkJCQkiICAg
IChbTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL2xhbmcvU3RyaW5nO1xuIisKKwkJCQkiICAgIGlu
dm9rZXN0YXRpYyBjb20vZm9vL1gubGFtYmRhJDA6KFtMamF2YS9sYW5nL1N0cmluZzspTGphdmEv
bGFuZy9TdHJpbmc7XG4iKworCQkJCSIgICAgKFtMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFu
Zy9TdHJpbmc7XG4iKworCQkJCSIgICAgMVxuIjsKKwkJU3RyaW5nIGRhdGEgPSBwcmludEJvb3Rz
dHJhcE1ldGhvZHNBdHRyaWJ1dGUoT1VUUFVUX0RJUiArIEZpbGUuc2VwYXJhdG9yICsgImNvbSIr
RmlsZS5zZXBhcmF0b3IrImZvbyIrRmlsZS5zZXBhcmF0b3IrIlguY2xhc3MiKTsKKwkJY2hlY2tF
eHBlY3RlZChleHBlY3RlZE91dHB1dCxkYXRhKTsKKwl9CisKKwlwdWJsaWMgdm9pZCB0ZXN0MDEy
X2ludGVyc2VjdGlvbkNhc3QoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwkJdGhpcy5ydW5Db25mb3Jt
VGVzdCgKKwkJCQluZXcgU3RyaW5nW117CisJCQkJCSJYLmphdmEiLAorCQkJCQkiaW1wb3J0IGph
dmEuaW8uKjtcbiIrCisJCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iKworCQkJCQkiICAgIGludGVy
ZmFjZSBGb28gZXh0ZW5kcyBTZXJpYWxpemFibGUgeyBpbnQgbSgpOyB9XG4iKworCQkJCQkiICAg
IGludGVyZmFjZSBNYXJrZXIge31cbiIrCisJCQkJCSJcbiIrCisJCQkJCSIgICAgcHVibGljIHN0
YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIisKKwkJCQkJIiAgICAgICAgRm9vIGYx
ID0gbnVsbDtcbiIrCisJCQkJCSIgICAgICAgIGYxID0gKEZvbyAmIE1hcmtlcikgKCkgLT4gMztc
biIrCisJCQkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcImlzTWFya2VyP1wiKyhmMSBp
bnN0YW5jZW9mIE1hcmtlcikpO1xuIisKKwkJCQkJIiAgICAgICAgdXRpbC5IZWxwZXIud3JpdGUo
ZjEpO1xuIisKKwkJCQkJIiAgICAgICAgZjEgPSAoRm9vKXV0aWwuSGVscGVyLnJlYWQoKTtcbiIr
CisJCQkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihmMS5tKCkpO1xuIisKKwkJCQkJIiAg
ICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwiaXNNYXJrZXI/XCIrKGYxIGluc3RhbmNlb2YgTWFy
a2VyKSk7XG4iKworCQkJCQkiICAgIH1cbiIrCisJCQkJCSJ9XG4iLAorCQkJCQkiSGVscGVyLmph
dmEiLEhFTFBFUl9DTEFTUywKKwkJCQkJfSwKKwkJCQkJImlzTWFya2VyP3RydWVcbjNcbmlzTWFy
a2VyP3RydWUiLAorCQkJCQludWxsLAorCQkJCQl0cnVlLAorCQkJCQluZXcgU3RyaW5nIFtdIHsg
Ii1EZHVtbXkiIH0pOyAvLyBOb3Qgc3VyZSwgdW5sZXNzIHdlIGZvcmNlIHRoZSBWTSB0byBub3Qg
YmUgcmV1c2VkIGJ5IHBhc3NpbmcgZHVtbXkgdm0gYXJndW1lbnQsIHRoZSBnZW5lcmF0ZWQgcHJv
Z3JhbSBhYm9ydHMgbWlkd2F5IHRocm91Z2ggaXRzIGV4ZWN1dGlvbi4KKwkJU3RyaW5nIGV4cGVj
dGVkT3V0cHV0ID0KKwkJCQkiMDogaW52b2tlc3RhdGljIGphdmEvbGFuZy9pbnZva2UvTGFtYmRh
TWV0YWZhY3RvcnkuYWx0TWV0YWZhY3Rvcnk6KExqYXZhL2xhbmcvaW52b2tlL01ldGhvZEhhbmRs
ZXMkTG9va3VwO0xqYXZhL2xhbmcvU3RyaW5nO0xqYXZhL2xhbmcvaW52b2tlL01ldGhvZFR5cGU7
W0xqYXZhL2xhbmcvT2JqZWN0OylMamF2YS9sYW5nL2ludm9rZS9DYWxsU2l0ZTtcbiIrCisJCQkJ
IiAgTWV0aG9kIGFyZ3VtZW50czpcbiIrCisJCQkJIiAgICAoKUlcbiIrCisJCQkJIiAgICBpbnZv
a2VzdGF0aWMgWC5sYW1iZGEkMDooKUlcbiIrCisJCQkJIiAgICAoKUlcbiIrCisJCQkJIiAgICAz
XG4iKyAvLyBCaXRGbGFnczogMHgwMSA9IEZMQUdfU0VSSUFMSVpBQkxFIDB4MDIgPSBGTEFHX01B
UktFUgorCQkJCSIgICAgMVxuIisgLy8gTWFya2VyIGludGVyZmFjZSBjb3VudAorCQkJCSIgICAg
WCRNYXJrZXJcbiI7CisJCVN0cmluZyBkYXRhID0gcHJpbnRCb290c3RyYXBNZXRob2RzQXR0cmli
dXRlKE9VVFBVVF9ESVIgKyBGaWxlLnNlcGFyYXRvciArICJYLmNsYXNzIik7CisJCWNoZWNrRXhw
ZWN0ZWQoZXhwZWN0ZWRPdXRwdXQsZGF0YSk7CisJfQorCisJcHVibGljIHZvaWQgdGVzdDAxM19p
bnRlcnNlY3Rpb25DYXN0KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCXRoaXMucnVuQ29uZm9ybVRl
c3QoCisJCQkJbmV3IFN0cmluZ1tdeworCQkJCQkiWC5qYXZhIiwKKwkJCQkJImltcG9ydCBqYXZh
LmlvLio7XG4iKworCQkJCQkiaW50ZXJmYWNlIEdvbyB7fVxuIisKKwkJCQkJInB1YmxpYyBjbGFz
cyBYIHtcbiIrCisJCQkJCSIgICAgaW50ZXJmYWNlIEZvbyBleHRlbmRzIFNlcmlhbGl6YWJsZSB7
IGludCBtKCk7IH1cbiIrCisJCQkJCSIgICAgaW50ZXJmYWNlIE1hcmtlciB7fVxuIisKKwkJCQkJ
IlxuIisKKwkJCQkJIiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7
XG4iKworCQkJCQkiICAgICAgICBGb28gZjEgPSBudWxsO1xuIisKKwkJCQkJIiAgICAgICAgZjEg
PSAoRm9vICYgR29vICYgU2VyaWFsaXphYmxlICYgTWFya2VyKSAoKSAtPiAzO1xuIisKKwkJCQkJ
IiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwiaXNNYXJrZXI/XCIrKGYxIGluc3RhbmNlb2Yg
TWFya2VyKSk7XG4iKworCQkJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oXCJpc0dvbz9c
IisoZjEgaW5zdGFuY2VvZiBHb28pKTtcbiIrCisJCQkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJp
bnRsbihcImlzU2VyaWFsaXphYmxlP1wiKyhmMSBpbnN0YW5jZW9mIFNlcmlhbGl6YWJsZSkpO1xu
IisKKwkJCQkJIiAgICAgICAgdXRpbC5IZWxwZXIud3JpdGUoZjEpO1xuIisKKwkJCQkJIiAgICAg
ICAgZjEgPSAoRm9vKXV0aWwuSGVscGVyLnJlYWQoKTtcbiIrCisJCQkJCSIgICAgICAgIFN5c3Rl
bS5vdXQucHJpbnRsbihmMS5tKCkpO1xuIisKKwkJCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmlu
dGxuKFwiaXNNYXJrZXI/XCIrKGYxIGluc3RhbmNlb2YgTWFya2VyKSk7XG4iKworCQkJCQkiICAg
ICAgICBTeXN0ZW0ub3V0LnByaW50bG4oXCJpc0dvbz9cIisoZjEgaW5zdGFuY2VvZiBHb28pKTtc
biIrCisJCQkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcImlzU2VyaWFsaXphYmxlP1wi
KyhmMSBpbnN0YW5jZW9mIFNlcmlhbGl6YWJsZSkpO1xuIisKKwkJCQkJIiAgICB9XG4iKworCQkJ
CQkifVxuIiwKKwkJCQkJIkhlbHBlci5qYXZhIixIRUxQRVJfQ0xBU1MsCisJCQkJCX0sCisJCQkJ
CSJpc01hcmtlcj90cnVlXG5pc0dvbz90cnVlXG5pc1NlcmlhbGl6YWJsZT90cnVlXG4zXG5pc01h
cmtlcj90cnVlXG5pc0dvbz90cnVlXG5pc1NlcmlhbGl6YWJsZT90cnVlIiwKKwkJCQkJbnVsbCwK
KwkJCQkJdHJ1ZSwKKwkJCQkJbmV3IFN0cmluZyBbXSB7ICItRGR1bW15IiB9KTsgLy8gTm90IHN1
cmUsIHVubGVzcyB3ZSBmb3JjZSB0aGUgVk0gdG8gbm90IGJlIHJldXNlZCBieSBwYXNzaW5nIGR1
bW15IHZtIGFyZ3VtZW50LCB0aGUgZ2VuZXJhdGVkIHByb2dyYW0gYWJvcnRzIG1pZHdheSB0aHJv
dWdoIGl0cyBleGVjdXRpb24uCisJCVN0cmluZyBleHBlY3RlZE91dHB1dCA9CisJCQkJIjA6IGlu
dm9rZXN0YXRpYyBqYXZhL2xhbmcvaW52b2tlL0xhbWJkYU1ldGFmYWN0b3J5LmFsdE1ldGFmYWN0
b3J5OihMamF2YS9sYW5nL2ludm9rZS9NZXRob2RIYW5kbGVzJExvb2t1cDtMamF2YS9sYW5nL1N0
cmluZztMamF2YS9sYW5nL2ludm9rZS9NZXRob2RUeXBlO1tMamF2YS9sYW5nL09iamVjdDspTGph
dmEvbGFuZy9pbnZva2UvQ2FsbFNpdGU7XG4iKworCQkJCSIgIE1ldGhvZCBhcmd1bWVudHM6XG4i
KworCQkJCSIgICAgKClJXG4iKworCQkJCSIgICAgaW52b2tlc3RhdGljIFgubGFtYmRhJDA6KClJ
XG4iKworCQkJCSIgICAgKClJXG4iKworCQkJCSIgICAgM1xuIisgLy8gQml0RmxhZ3M6IDB4MDEg
PSBGTEFHX1NFUklBTElaQUJMRSAweDAyID0gRkxBR19NQVJLRVIKKwkJCQkiICAgIDJcbiIrIC8v
IE1hcmtlciBpbnRlcmZhY2UgY291bnQKKwkJCQkiICAgIEdvb1xuIisKKwkJCQkiICAgIFgkTWFy
a2VyXG4iOworCQlTdHJpbmcgZGF0YSA9IHByaW50Qm9vdHN0cmFwTWV0aG9kc0F0dHJpYnV0ZShP
VVRQVVRfRElSICsgRmlsZS5zZXBhcmF0b3IgKyAiWC5jbGFzcyIpOworCQljaGVja0V4cGVjdGVk
KGV4cGVjdGVkT3V0cHV0LGRhdGEpOworCX0KKwkKKwlwdWJsaWMgdm9pZCB0ZXN0MDE0X2ludGVy
c2VjdGlvbkNhc3RBbmROb3RTZXJpYWxpemFibGUoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwkJdGhp
cy5ydW5Db25mb3JtVGVzdCgKKwkJCQluZXcgU3RyaW5nW117CisJCQkJCSJYLmphdmEiLAorCQkJ
CQkiaW1wb3J0IGphdmEuaW8uKjtcbiIrCisJCQkJCSJpbnRlcmZhY2UgR29vIHt9XG4iKworCQkJ
CQkicHVibGljIGNsYXNzIFgge1xuIisKKwkJCQkJIiAgICBpbnRlcmZhY2UgRm9vIHsgaW50IG0o
KTsgfVxuIisKKwkJCQkJIiAgICBpbnRlcmZhY2UgTWFya2VyIHt9XG4iKworCQkJCQkiXG4iKwor
CQkJCQkiICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIrCisJ
CQkJCSIgICAgICAgIEZvbyBmMSA9IG51bGw7XG4iKworCQkJCQkiICAgICAgICBmMSA9IChGb28g
JiBHb28gJiBNYXJrZXIpICgpIC0+IDM7XG4iKworCQkJCQkiICAgICAgICBTeXN0ZW0ub3V0LnBy
aW50bG4oXCJpc01hcmtlcj9cIisoZjEgaW5zdGFuY2VvZiBNYXJrZXIpKTtcbiIrCisJCQkJCSIg
ICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcImlzR29vP1wiKyhmMSBpbnN0YW5jZW9mIEdvbykp
O1xuIisKKwkJCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwiaXNTZXJpYWxpemFibGU/
XCIrKGYxIGluc3RhbmNlb2YgU2VyaWFsaXphYmxlKSk7XG4iKworCQkJCQkiICAgICAgICBTeXN0
ZW0ub3V0LnByaW50bG4oZjEubSgpKTtcbiIrCisJCQkJCSIgICAgfVxuIisKKwkJCQkJIn1cbiIs
CisJCQkJCSJIZWxwZXIuamF2YSIsSEVMUEVSX0NMQVNTLAorCQkJCQl9LAorCQkJCQkiaXNNYXJr
ZXI/dHJ1ZVxuaXNHb28/dHJ1ZVxuaXNTZXJpYWxpemFibGU/ZmFsc2VcbjMiLAorCQkJCQludWxs
LAorCQkJCQl0cnVlLAorCQkJCQluZXcgU3RyaW5nIFtdIHsgIi1EZHVtbXkiIH0pOyAvLyBOb3Qg
c3VyZSwgdW5sZXNzIHdlIGZvcmNlIHRoZSBWTSB0byBub3QgYmUgcmV1c2VkIGJ5IHBhc3Npbmcg
ZHVtbXkgdm0gYXJndW1lbnQsIHRoZSBnZW5lcmF0ZWQgcHJvZ3JhbSBhYm9ydHMgbWlkd2F5IHRo
cm91Z2ggaXRzIGV4ZWN1dGlvbi4KKwkJU3RyaW5nIGV4cGVjdGVkT3V0cHV0ID0KKwkJCQkiMDog
aW52b2tlc3RhdGljIGphdmEvbGFuZy9pbnZva2UvTGFtYmRhTWV0YWZhY3RvcnkuYWx0TWV0YWZh
Y3Rvcnk6KExqYXZhL2xhbmcvaW52b2tlL01ldGhvZEhhbmRsZXMkTG9va3VwO0xqYXZhL2xhbmcv
U3RyaW5nO0xqYXZhL2xhbmcvaW52b2tlL01ldGhvZFR5cGU7W0xqYXZhL2xhbmcvT2JqZWN0OylM
amF2YS9sYW5nL2ludm9rZS9DYWxsU2l0ZTtcbiIrCisJCQkJIiAgTWV0aG9kIGFyZ3VtZW50czpc
biIrCisJCQkJIiAgICAoKUlcbiIrCisJCQkJIiAgICBpbnZva2VzdGF0aWMgWC5sYW1iZGEkMDoo
KUlcbiIrCisJCQkJIiAgICAoKUlcbiIrCisJCQkJIiAgICAyXG4iKyAvLyBCaXRGbGFnczogMHgw
MiA9IEZMQUdfTUFSS0VSCisJCQkJIiAgICAyXG4iKyAvLyBNYXJrZXIgaW50ZXJmYWNlIGNvdW50
CisJCQkJIiAgICBHb29cbiIrCisJCQkJIiAgICBYJE1hcmtlclxuIjsKKwkJU3RyaW5nIGRhdGEg
PSBwcmludEJvb3RzdHJhcE1ldGhvZHNBdHRyaWJ1dGUoT1VUUFVUX0RJUiArIEZpbGUuc2VwYXJh
dG9yICsgIlguY2xhc3MiKTsKKwkJY2hlY2tFeHBlY3RlZChleHBlY3RlZE91dHB1dCxkYXRhKTsK
Kwl9CisJCisJcHVibGljIHZvaWQgdGVzdDAxNV9zZXJpYWxpemFibGVWaWFJbnRlcnNlY3Rpb25D
YXN0KCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQkJbmV3
IFN0cmluZ1tdeworCQkJCQkiWC5qYXZhIiwKKwkJCQkJImltcG9ydCBqYXZhLmlvLio7XG4iKwor
CQkJCQkiaW50ZXJmYWNlIEdvbyB7fVxuIisKKwkJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIrCisJ
CQkJCSIgICAgaW50ZXJmYWNlIEZvbyB7IGludCBtKCk7IH1cbiIrCisJCQkJCSIgICAgaW50ZXJm
YWNlIE1hcmtlciB7fVxuIisKKwkJCQkJIlxuIisKKwkJCQkJIiAgICBwdWJsaWMgc3RhdGljIHZv
aWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7XG4iKworCQkJCQkiICAgICAgICBGb28gZjEgPSBudWxs
O1xuIisKKwkJCQkJIiAgICAgICAgZjEgPSAoRm9vICYgR29vICYgU2VyaWFsaXphYmxlICYgTWFy
a2VyKSAoKSAtPiAzO1xuIisKKwkJCQkJIiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwiaXNN
YXJrZXI/XCIrKGYxIGluc3RhbmNlb2YgTWFya2VyKSk7XG4iKworCQkJCQkiICAgICAgICBTeXN0
ZW0ub3V0LnByaW50bG4oXCJpc0dvbz9cIisoZjEgaW5zdGFuY2VvZiBHb28pKTtcbiIrCisJCQkJ
CSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcImlzU2VyaWFsaXphYmxlP1wiKyhmMSBpbnN0
YW5jZW9mIFNlcmlhbGl6YWJsZSkpO1xuIisKKwkJCQkJIiAgICAgICAgdXRpbC5IZWxwZXIud3Jp
dGUoZjEpO1xuIisKKwkJCQkJIiAgICAgICAgZjEgPSAoRm9vKXV0aWwuSGVscGVyLnJlYWQoKTtc
biIrCisJCQkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihmMS5tKCkpO1xuIisKKwkJCQkJ
IiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwiaXNNYXJrZXI/XCIrKGYxIGluc3RhbmNlb2Yg
TWFya2VyKSk7XG4iKworCQkJCQkiICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oXCJpc0dvbz9c
IisoZjEgaW5zdGFuY2VvZiBHb28pKTtcbiIrCisJCQkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJp
bnRsbihcImlzU2VyaWFsaXphYmxlP1wiKyhmMSBpbnN0YW5jZW9mIFNlcmlhbGl6YWJsZSkpO1xu
IisKKwkJCQkJIiAgICB9XG4iKworCQkJCQkifVxuIiwKKwkJCQkJIkhlbHBlci5qYXZhIixIRUxQ
RVJfQ0xBU1MsCisJCQkJCX0sCisJCQkJCSJpc01hcmtlcj90cnVlXG5pc0dvbz90cnVlXG5pc1Nl
cmlhbGl6YWJsZT90cnVlXG4zXG5pc01hcmtlcj90cnVlXG5pc0dvbz90cnVlXG5pc1NlcmlhbGl6
YWJsZT90cnVlIiwKKwkJCQkJbnVsbCwKKwkJCQkJdHJ1ZSwKKwkJCQkJbmV3IFN0cmluZyBbXSB7
ICItRGR1bW15IiB9KTsgLy8gTm90IHN1cmUsIHVubGVzcyB3ZSBmb3JjZSB0aGUgVk0gdG8gbm90
IGJlIHJldXNlZCBieSBwYXNzaW5nIGR1bW15IHZtIGFyZ3VtZW50LCB0aGUgZ2VuZXJhdGVkIHBy
b2dyYW0gYWJvcnRzIG1pZHdheSB0aHJvdWdoIGl0cyBleGVjdXRpb24uCisJCVN0cmluZyBleHBl
Y3RlZE91dHB1dCA9CisJCQkJIjA6IGludm9rZXN0YXRpYyBqYXZhL2xhbmcvaW52b2tlL0xhbWJk
YU1ldGFmYWN0b3J5LmFsdE1ldGFmYWN0b3J5OihMamF2YS9sYW5nL2ludm9rZS9NZXRob2RIYW5k
bGVzJExvb2t1cDtMamF2YS9sYW5nL1N0cmluZztMamF2YS9sYW5nL2ludm9rZS9NZXRob2RUeXBl
O1tMamF2YS9sYW5nL09iamVjdDspTGphdmEvbGFuZy9pbnZva2UvQ2FsbFNpdGU7XG4iKworCQkJ
CSIgIE1ldGhvZCBhcmd1bWVudHM6XG4iKworCQkJCSIgICAgKClJXG4iKworCQkJCSIgICAgaW52
b2tlc3RhdGljIFgubGFtYmRhJDA6KClJXG4iKworCQkJCSIgICAgKClJXG4iKworCQkJCSIgICAg
M1xuIisgLy8gQml0RmxhZ3M6IDB4MDEgPSBGTEFHX1NFUklBTElaQUJMRSAweDAyID0gRkxBR19N
QVJLRVIKKwkJCQkiICAgIDJcbiIrIC8vIE1hcmtlciBpbnRlcmZhY2UgY291bnQKKwkJCQkiICAg
IEdvb1xuIisKKwkJCQkiICAgIFgkTWFya2VyXG4iOworCQlTdHJpbmcgZGF0YSA9IHByaW50Qm9v
dHN0cmFwTWV0aG9kc0F0dHJpYnV0ZShPVVRQVVRfRElSICsgRmlsZS5zZXBhcmF0b3IgKyAiWC5j
bGFzcyIpOworCQljaGVja0V4cGVjdGVkKGV4cGVjdGVkT3V0cHV0LGRhdGEpOworCX0KKwkKKwkv
LyBTQU0gdHlwZSBub3QgZmlyc3QgaW4gaW50ZXJzZWN0aW9uIGNhc3QKKwlwdWJsaWMgdm9pZCB0
ZXN0MDE2X2J1ZzQyNDIxMSgpIHRocm93cyBFeGNlcHRpb24geworCQl0aGlzLnJ1bkNvbmZvcm1U
ZXN0KAorCQkJCW5ldyBTdHJpbmdbXXsKKwkJCQkJIlguamF2YSIsCisJCQkJCSJpbXBvcnQgamF2
YS5pby5TZXJpYWxpemFibGU7XG4iKworCQkJCQkicHVibGljIGNsYXNzIFgge1xuIisKKwkJCQkJ
IglwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgYXJndltdKSB0aHJvd3MgRXhjZXB0aW9u
IHtcbiIrCisJCQkJCSIJCUF1dG9DbG9zZWFibGUgb25lID0gKChTZXJpYWxpemFibGUgJiBBdXRv
Q2xvc2VhYmxlKSAoKCkgLT4ge30pKTtcbiIrCisJCQkJCSIJCW9uZS5jbG9zZSgpO1xuIisKKwkJ
CQkJIgl9XG4iKworCQkJCQkifSIKKwkJCQkJfSwKKwkJCQkJIiIsCisJCQkJCW51bGwsCisJCQkJ
CXRydWUsCisJCQkJCW5ldyBTdHJpbmcgW10geyAiLURkdW1teSIgfSk7IC8vIE5vdCBzdXJlLCB1
bmxlc3Mgd2UgZm9yY2UgdGhlIFZNIHRvIG5vdCBiZSByZXVzZWQgYnkgcGFzc2luZyBkdW1teSB2
bSBhcmd1bWVudCwgdGhlIGdlbmVyYXRlZCBwcm9ncmFtIGFib3J0cyBtaWR3YXkgdGhyb3VnaCBp
dHMgZXhlY3V0aW9uLgorCQlTdHJpbmcgZXhwZWN0ZWRPdXRwdXQgPQorCQkJCSIwOiBpbnZva2Vz
dGF0aWMgamF2YS9sYW5nL2ludm9rZS9MYW1iZGFNZXRhZmFjdG9yeS5hbHRNZXRhZmFjdG9yeToo
TGphdmEvbGFuZy9pbnZva2UvTWV0aG9kSGFuZGxlcyRMb29rdXA7TGphdmEvbGFuZy9TdHJpbmc7
TGphdmEvbGFuZy9pbnZva2UvTWV0aG9kVHlwZTtbTGphdmEvbGFuZy9PYmplY3Q7KUxqYXZhL2xh
bmcvaW52b2tlL0NhbGxTaXRlO1xuIisKKwkJCQkiICBNZXRob2QgYXJndW1lbnRzOlxuIisKKwkJ
CQkiICAgICgpVlxuIisKKwkJCQkiICAgIGludm9rZXN0YXRpYyBYLmxhbWJkYSQwOigpVlxuIisK
KwkJCQkiICAgICgpVlxuIisKKwkJCQkiICAgIDFcbiI7CisJCVN0cmluZyBkYXRhID0gcHJpbnRC
b290c3RyYXBNZXRob2RzQXR0cmlidXRlKE9VVFBVVF9ESVIgKyBGaWxlLnNlcGFyYXRvciArICJY
LmNsYXNzIik7CisJCWNoZWNrRXhwZWN0ZWQoZXhwZWN0ZWRPdXRwdXQsZGF0YSk7CisJfQorCQor
CS8vIE5vdyBTQU0gdHlwZSBmaXJzdAorCXB1YmxpYyB2b2lkIHRlc3QwMTdfYnVnNDI0MjExKCkg
dGhyb3dzIEV4Y2VwdGlvbiB7CisJCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQkJbmV3IFN0cmlu
Z1tdeworCQkJCQkiWC5qYXZhIiwKKwkJCQkJImltcG9ydCBqYXZhLmlvLlNlcmlhbGl6YWJsZTtc
biIrCisJCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iKworCQkJCQkiCXB1YmxpYyBzdGF0aWMgdm9p
ZCBtYWluKFN0cmluZyBhcmd2W10pIHRocm93cyBFeGNlcHRpb24ge1xuIisKKwkJCQkJIgkJQXV0
b0Nsb3NlYWJsZSBvbmUgPSAoKEF1dG9DbG9zZWFibGUgJiBTZXJpYWxpemFibGUpICgoKSAtPiB7
fSkpO1xuIisKKwkJCQkJIgkJb25lLmNsb3NlKCk7XG4iKworCQkJCQkiCX1cbiIrCisJCQkJCSJ9
IgorCQkJCQl9LAorCQkJCQkiIiwKKwkJCQkJbnVsbCwKKwkJCQkJdHJ1ZSwKKwkJCQkJbmV3IFN0
cmluZyBbXSB7ICItRGR1bW15IiB9KTsgLy8gTm90IHN1cmUsIHVubGVzcyB3ZSBmb3JjZSB0aGUg
Vk0gdG8gbm90IGJlIHJldXNlZCBieSBwYXNzaW5nIGR1bW15IHZtIGFyZ3VtZW50LCB0aGUgZ2Vu
ZXJhdGVkIHByb2dyYW0gYWJvcnRzIG1pZHdheSB0aHJvdWdoIGl0cyBleGVjdXRpb24uCisJCVN0
cmluZyBleHBlY3RlZE91dHB1dCA9CisJCQkJIjA6IGludm9rZXN0YXRpYyBqYXZhL2xhbmcvaW52
b2tlL0xhbWJkYU1ldGFmYWN0b3J5LmFsdE1ldGFmYWN0b3J5OihMamF2YS9sYW5nL2ludm9rZS9N
ZXRob2RIYW5kbGVzJExvb2t1cDtMamF2YS9sYW5nL1N0cmluZztMamF2YS9sYW5nL2ludm9rZS9N
ZXRob2RUeXBlO1tMamF2YS9sYW5nL09iamVjdDspTGphdmEvbGFuZy9pbnZva2UvQ2FsbFNpdGU7
XG4iKworCQkJCSIgIE1ldGhvZCBhcmd1bWVudHM6XG4iKworCQkJCSIgICAgKClWXG4iKworCQkJ
CSIgICAgaW52b2tlc3RhdGljIFgubGFtYmRhJDA6KClWXG4iKworCQkJCSIgICAgKClWXG4iKwor
CQkJCSIgICAgMVxuIjsKKwkJU3RyaW5nIGRhdGEgPSBwcmludEJvb3RzdHJhcE1ldGhvZHNBdHRy
aWJ1dGUoT1VUUFVUX0RJUiArIEZpbGUuc2VwYXJhdG9yICsgIlguY2xhc3MiKTsKKwkJY2hlY2tF
eHBlY3RlZChleHBlY3RlZE91dHB1dCxkYXRhKTsKKwl9CisJCisJLy8gTm90IFNlcmlhbGl6YWJs
ZSBidXQgYSByZWd1bGFyIG1hcmtlciBpbnRlcmZhY2UKKwlwdWJsaWMgdm9pZCB0ZXN0MDE4X2J1
ZzQyNDIxMSgpIHRocm93cyBFeGNlcHRpb24geworCQl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQkJ
CW5ldyBTdHJpbmdbXXsKKwkJCQkJIlguamF2YSIsCisJCQkJCSJpbXBvcnQgamF2YS5pby5TZXJp
YWxpemFibGU7XG4iKworCQkJCQkiaW50ZXJmYWNlIE1hcmtlciB7fVxuIisKKwkJCQkJInB1Ymxp
YyBjbGFzcyBYIHtcbiIrCisJCQkJCSIJcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIGFy
Z3ZbXSkgdGhyb3dzIEV4Y2VwdGlvbiB7XG4iKworCQkJCQkiCQlBdXRvQ2xvc2VhYmxlIG9uZSA9
ICgoTWFya2VyICYgQXV0b0Nsb3NlYWJsZSkgKCgpIC0+IHt9KSk7XG4iKworCQkJCQkiCQlvbmUu
Y2xvc2UoKTtcbiIrCisJCQkJCSIJfVxuIisKKwkJCQkJIn0iCisJCQkJCX0sCisJCQkJCSIiLAor
CQkJCQludWxsLAorCQkJCQl0cnVlLAorCQkJCQluZXcgU3RyaW5nIFtdIHsgIi1EZHVtbXkiIH0p
OyAvLyBOb3Qgc3VyZSwgdW5sZXNzIHdlIGZvcmNlIHRoZSBWTSB0byBub3QgYmUgcmV1c2VkIGJ5
IHBhc3NpbmcgZHVtbXkgdm0gYXJndW1lbnQsIHRoZSBnZW5lcmF0ZWQgcHJvZ3JhbSBhYm9ydHMg
bWlkd2F5IHRocm91Z2ggaXRzIGV4ZWN1dGlvbi4KKwkJU3RyaW5nIGV4cGVjdGVkT3V0cHV0ID0K
KwkJCQkiMDogaW52b2tlc3RhdGljIGphdmEvbGFuZy9pbnZva2UvTGFtYmRhTWV0YWZhY3Rvcnku
YWx0TWV0YWZhY3Rvcnk6KExqYXZhL2xhbmcvaW52b2tlL01ldGhvZEhhbmRsZXMkTG9va3VwO0xq
YXZhL2xhbmcvU3RyaW5nO0xqYXZhL2xhbmcvaW52b2tlL01ldGhvZFR5cGU7W0xqYXZhL2xhbmcv
T2JqZWN0OylMamF2YS9sYW5nL2ludm9rZS9DYWxsU2l0ZTtcbiIrCisJCQkJIiAgTWV0aG9kIGFy
Z3VtZW50czpcbiIrCisJCQkJIiAgICAoKVZcbiIrCisJCQkJIiAgICBpbnZva2VzdGF0aWMgWC5s
YW1iZGEkMDooKVZcbiIrCisJCQkJIiAgICAoKVZcbiIrCisJCQkJIiAgICAyXG4iKworCQkJCSIg
ICAgMVxuIisKKwkJCQkiICAgIE1hcmtlclxuIjsKKwkJU3RyaW5nIGRhdGEgPSBwcmludEJvb3Rz
dHJhcE1ldGhvZHNBdHRyaWJ1dGUoT1VUUFVUX0RJUiArIEZpbGUuc2VwYXJhdG9yICsgIlguY2xh
c3MiKTsKKwkJY2hlY2tFeHBlY3RlZChleHBlY3RlZE91dHB1dCxkYXRhKTsKKwl9CisJCisJLy8g
Tm93IFNBTSB0eXBlIG5vdCBmaXJzdCBhbmQgc2VyaWFsaXphdGlvbiBvY2N1cnJpbmcKKwlwdWJs
aWMgdm9pZCB0ZXN0MDE5X2J1ZzQyNDIxMSgpIHRocm93cyBFeGNlcHRpb24geworCQl0aGlzLnJ1
bkNvbmZvcm1UZXN0KAorCQkJCW5ldyBTdHJpbmdbXXsKKwkJCQkJIlguamF2YSIsCisJCQkJCSJp
bXBvcnQgamF2YS5pby5TZXJpYWxpemFibGU7XG4iKworCQkJCQkiaW50ZXJmYWNlIFNBTSB7aW50
IG0oKTt9XG4iKworCQkJCQkicHVibGljIGNsYXNzIFgge1xuIisKKwkJCQkJIglwdWJsaWMgc3Rh
dGljIHZvaWQgbWFpbihTdHJpbmcgYXJndltdKSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIrCisJCQkJ
CSIJCVNBTSBvbmUgPSAoKFNlcmlhbGl6YWJsZSAmIFNBTSkgKCgpIC0+IDMpKTtcbiIrCisJCQkJ
CSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihvbmUubSgpKTtcbiIrCisJCQkJCSIgICAgICAg
IHV0aWwuSGVscGVyLndyaXRlKG9uZSk7XG4iKworCQkJCQkiICAgICAgICBvbmUgPSAoU0FNKXV0
aWwuSGVscGVyLnJlYWQoKTtcbiIrCisJCQkJCSIgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihv
bmUubSgpKTtcbiIrCisJCQkJCSIJfVxuIisKKwkJCQkJIn0iLAorCQkJCQkiSGVscGVyLmphdmEi
LEhFTFBFUl9DTEFTUywKKwkJCQkJfSwKKwkJCQkJIjNcbjMiLAorCQkJCQludWxsLAorCQkJCQl0
cnVlLAorCQkJCQluZXcgU3RyaW5nIFtdIHsgIi1EZHVtbXkiIH0pOyAvLyBOb3Qgc3VyZSwgdW5s
ZXNzIHdlIGZvcmNlIHRoZSBWTSB0byBub3QgYmUgcmV1c2VkIGJ5IHBhc3NpbmcgZHVtbXkgdm0g
YXJndW1lbnQsIHRoZSBnZW5lcmF0ZWQgcHJvZ3JhbSBhYm9ydHMgbWlkd2F5IHRocm91Z2ggaXRz
IGV4ZWN1dGlvbi4KKwkJU3RyaW5nIGV4cGVjdGVkT3V0cHV0ID0KKwkJCQkiMDogaW52b2tlc3Rh
dGljIGphdmEvbGFuZy9pbnZva2UvTGFtYmRhTWV0YWZhY3RvcnkuYWx0TWV0YWZhY3Rvcnk6KExq
YXZhL2xhbmcvaW52b2tlL01ldGhvZEhhbmRsZXMkTG9va3VwO0xqYXZhL2xhbmcvU3RyaW5nO0xq
YXZhL2xhbmcvaW52b2tlL01ldGhvZFR5cGU7W0xqYXZhL2xhbmcvT2JqZWN0OylMamF2YS9sYW5n
L2ludm9rZS9DYWxsU2l0ZTtcbiIrCisJCQkJIiAgTWV0aG9kIGFyZ3VtZW50czpcbiIrCisJCQkJ
IiAgICAoKUlcbiIrCisJCQkJIiAgICBpbnZva2VzdGF0aWMgWC5sYW1iZGEkMDooKUlcbiIrCisJ
CQkJIiAgICAoKUlcbiIrCisJCQkJIiAgICAxXG4iOworCQlTdHJpbmcgZGF0YSA9IHByaW50Qm9v
dHN0cmFwTWV0aG9kc0F0dHJpYnV0ZShPVVRQVVRfRElSICsgRmlsZS5zZXBhcmF0b3IgKyAiWC5j
bGFzcyIpOworCQljaGVja0V4cGVjdGVkKGV4cGVjdGVkT3V0cHV0LGRhdGEpOworCX0KKwkKKwlw
dWJsaWMgdm9pZCB0ZXN0MDIwX2xhbWJkYU5hbWVzKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCXRo
aXMucnVuQ29uZm9ybVRlc3QoCisJCQkJbmV3IFN0cmluZ1tdeworCQkJCQkiWC5qYXZhIiwKKwkJ
CQkJImltcG9ydCBqYXZhLmlvLlNlcmlhbGl6YWJsZTtcbiIrCisJCQkJCSJpbnRlcmZhY2UgRm9v
IHtpbnQgbSgpO31cbiIrCisJCQkJCSJpbnRlcmZhY2UgRm9vTiBleHRlbmRzIFNlcmlhbGl6YWJs
ZSB7aW50IG0oKTt9XG4iKworCQkJCQkicHVibGljIGNsYXNzIFgge1xuIisKKwkJCQkJIglwdWJs
aWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgYXJndltdKSB0aHJvd3MgRXhjZXB0aW9uIHtcbiIr
CisJCQkJCSIJCUF1dG9DbG9zZWFibGUgb25lID0gKCkgLT4ge307XG4iKworCQkJCQkiICAgICAg
IG5ldyBYKCkubSgpO1xuIisKKwkJCQkJIiAgICAgICBvbmUuY2xvc2UoKTtcbiIrCisJCQkJCSIJ
fVxuIisKKwkJCQkJIiAgIHB1YmxpYyB2b2lkIG0oKSB7IEZvbyBmID0gKCkgLT4gMzsgU3lzdGVt
Lm91dC5wcmludGxuKGYubSgpKTt9XG4iKworCQkJCQkiICAgcHVibGljIHZvaWQgbigpIHsgRm9v
TiBmID0gKCkgLT4gMzsgU3lzdGVtLm91dC5wcmludGxuKGYubSgpKTt9XG4iKworCQkJCQkifSIK
KwkJCQkJfSwKKwkJCQkJIjMiLAorCQkJCQludWxsLAorCQkJCQl0cnVlLAorCQkJCQluZXcgU3Ry
aW5nIFtdIHsgIi1EZHVtbXkiIH0pOyAvLyBOb3Qgc3VyZSwgdW5sZXNzIHdlIGZvcmNlIHRoZSBW
TSB0byBub3QgYmUgcmV1c2VkIGJ5IHBhc3NpbmcgZHVtbXkgdm0gYXJndW1lbnQsIHRoZSBnZW5l
cmF0ZWQgcHJvZ3JhbSBhYm9ydHMgbWlkd2F5IHRocm91Z2ggaXRzIGV4ZWN1dGlvbi4KKwkJU3Ry
aW5nIGV4cGVjdGVkT3V0cHV0ID0KKwkJCSIgIHByaXZhdGUgc3RhdGljIHN5bnRoZXRpYyB2b2lk
IGxhbWJkYSQwKCkgdGhyb3dzIGphdmEubGFuZy5FeGNlcHRpb247XG4iOworCQljaGVja0Rpc2Fz
c2VtYmxlZENsYXNzRmlsZShPVVRQVVRfRElSICsgRmlsZS5zZXBhcmF0b3IgKyAiWC5jbGFzcyIs
ICJYIiwgZXhwZWN0ZWRPdXRwdXQsIENsYXNzRmlsZUJ5dGVzRGlzYXNzZW1ibGVyLlNZU1RFTSk7
CisJCWV4cGVjdGVkT3V0cHV0ID0KKwkJCSIgIHByaXZhdGUgc3RhdGljIHN5bnRoZXRpYyBpbnQg
bGFtYmRhJDEoKTtcbiI7CisJCWNoZWNrRGlzYXNzZW1ibGVkQ2xhc3NGaWxlKE9VVFBVVF9ESVIg
KyBGaWxlLnNlcGFyYXRvciArICJYLmNsYXNzIiwgIlgiLCBleHBlY3RlZE91dHB1dCwgQ2xhc3NG
aWxlQnl0ZXNEaXNhc3NlbWJsZXIuU1lTVEVNKTsKKwl9CisJCisJcHVibGljIHZvaWQgdGVzdDAy
MV9sYW1iZGFOYW1lc1ZhcmlhbnRzKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJCXRoaXMucnVuQ29u
Zm9ybVRlc3QoCisJCQkJbmV3IFN0cmluZ1tdeworCQkJCQkiWC5qYXZhIiwKKwkJCQkJImltcG9y
dCBqYXZhLmlvLlNlcmlhbGl6YWJsZTtcbiIrCisJCQkJCSJpbnRlcmZhY2UgRm9vIHtpbnQgbSgp
O31cbiIrCisJCQkJCSJpbnRlcmZhY2UgRm9vU2VyIGV4dGVuZHMgU2VyaWFsaXphYmxlIHtpbnQg
bSgpO31cbiIrCisJCQkJCSJpbnRlcmZhY2UgRm9vSSB7aW50IG0oaW50IGkpO31cbiIrCisJCQkJ
CSJpbnRlcmZhY2UgRm9vU2VySSBleHRlbmRzIFNlcmlhbGl6YWJsZSB7aW50IG0oaW50IGkpO31c
biIrCisJCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iKworCQkJCQkiXG4iKworCQkJCQkiICAgRm9v
IGluc3RhbmNlRmllbGQgPSAoKSAtPiAxO1xuIisKKwkJCQkJIiAgIEZvb1NlciBpbnN0YW5jZUZp
ZWxkU2VyID0gKCkgLT4gMjtcbiIrCisJCQkJCSIgICBzdGF0aWMgRm9vIHN0YXRpY0ZpZWxkID0g
KCkgLT4gMztcbiIrCisJCQkJCSIgICBzdGF0aWMgRm9vU2VyIHN0YXRpY0ZpZWxkU2VyID0gKCkg
LT4gNDtcbiIrCisJCQkJCSIgICBGb29JIGluc3RhbmNlRmllbGRJID0gKGkpIC0+IDU7XG4iKwor
CQkJCQkiICAgRm9vU2VySSBpbnN0YW5jZUZpZWxkU2VySSA9IChpKSAtPiA2O1xuIisKKwkJCQkJ
IlxuIisKKwkJCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgYXJndltdKSB0aHJv
d3MgRXhjZXB0aW9uIHtcbiIrCisJCQkJCSIgICAgIGludCB4ID0gNDtcbiIrCisJCQkJCSIgICAg
IEZvbyBhID0gKCkgLT4gMTtcbiIrCisJCQkJCSIgICAgIEZvb1NlciBiID0gKCkgLT4gMjtcbiIr
CisJCQkJCSIgICAgIEZvb0kgYyA9IChpKSAtPiAzO1xuIisKKwkJCQkJIiAgICAgRm9vU2VySSBk
ID0gKGkpIC0+IDQ7XG4iKworCQkJCQkiICAgICBGb28gZSA9ICgpIC0+IHg7XG4iKworCQkJCQki
ICAgICBGb29TZXIgZiA9ICgpIC0+IHgrMTtcbiIrCisJCQkJCSIgICAgIEZvb0kgZyA9IChpKSAt
PiB4KzI7XG4iKworCQkJCQkiICAgICBGb29TZXJJIGggPSAoaSkgLT4geCszO1xuIisKKwkJCQkJ
Igl9XG4iKworCQkJCQkifSIKKwkJCQkJfSwKKwkJCQkJIiIsCisJCQkJCW51bGwsCisJCQkJCXRy
dWUsCisJCQkJCW5ldyBTdHJpbmcgW10geyAiLURkdW1teSIgfSk7IC8vIE5vdCBzdXJlLCB1bmxl
c3Mgd2UgZm9yY2UgdGhlIFZNIHRvIG5vdCBiZSByZXVzZWQgYnkgcGFzc2luZyBkdW1teSB2bSBh
cmd1bWVudCwgdGhlIGdlbmVyYXRlZCBwcm9ncmFtIGFib3J0cyBtaWR3YXkgdGhyb3VnaCBpdHMg
ZXhlY3V0aW9uLgorCQlTdHJpbmcgZXhwZWN0ZWRPdXRwdXQgPQorCQkJCSJzdGF0aWMgbGFtYmRh
JDAoKUlcbiIrCisJCQkJInN0YXRpYyBsYW1iZGEkMSgpSVxuIisKKwkJCQkic3RhdGljIGxhbWJk
YSQyKClJXG4iKworCQkJCSJzdGF0aWMgbGFtYmRhJDMoKUlcbiIrCisJCQkJInN0YXRpYyBsYW1i
ZGEkNChJKUlcbiIrCisJCQkJInN0YXRpYyBsYW1iZGEkNShJKUlcbiIrCisJCQkJInN0YXRpYyBs
YW1iZGEkNigpSVxuIisKKwkJCQkic3RhdGljIGxhbWJkYSQ3KClJXG4iKworCQkJCSJzdGF0aWMg
bGFtYmRhJDgoSSlJXG4iKworCQkJCSJzdGF0aWMgbGFtYmRhJDkoSSlJXG4iKworCQkJCSJzdGF0
aWMgbGFtYmRhJDEwKEkpSVxuIisKKwkJCQkic3RhdGljIGxhbWJkYSQxMShJKUlcbiIrCisJCQkJ
InN0YXRpYyBsYW1iZGEkMTIoSUkpSVxuIisKKwkJCQkic3RhdGljIGxhbWJkYSQxMyhJSSlJXG4i
OworCQlTdHJpbmcgYWN0dWFsT3V0cHV0ID0gcHJpbnRMYW1iZGFNZXRob2RzKE9VVFBVVF9ESVIg
KyBGaWxlLnNlcGFyYXRvciArICJYLmNsYXNzIik7CisJCWlmICghYWN0dWFsT3V0cHV0LmVxdWFs
cyhleHBlY3RlZE91dHB1dCkpIHsKKwkJCXByaW50SXQoYWN0dWFsT3V0cHV0KTsKKwkJCWFzc2Vy
dEVxdWFscyhleHBlY3RlZE91dHB1dCxhY3R1YWxPdXRwdXQpOworCQl9CisJfQorCQorCXB1Ymxp
YyB2b2lkIHRlc3QwMjJfbmVzdGVkTGFtYmRhcygpIHRocm93cyBFeGNlcHRpb24geworCQl0aGlz
LnJ1bkNvbmZvcm1UZXN0KAorCQkJCW5ldyBTdHJpbmdbXXsKKwkJCQkJIlguamF2YSIsCisJCQkJ
CSJpbXBvcnQgamF2YS5pby5TZXJpYWxpemFibGU7XG4iKworCQkJCQkiaW50ZXJmYWNlIEZvbyBl
eHRlbmRzIFNlcmlhbGl6YWJsZSB7aW50IG0oKTt9XG4iKworCQkJCQkicHVibGljIGNsYXNzIFgg
e1xuIisKKwkJCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgYXJndltdKSB0aHJv
d3MgRXhjZXB0aW9uIHtcbiIrCisJCQkJCSIJCUZvbyBmID0gKCkgLT4geyByZXR1cm4gKChGb28p
KCktPjMzKS5tKCk7fTtcbiIrCisJCQkJCSIgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGYubSgp
KTtcbiIrCisJCQkJCSIgICAgICAgdXRpbC5IZWxwZXIud3JpdGUoZik7XG4iKworCQkJCQkiICAg
ICAgIGYgPSAoRm9vKXV0aWwuSGVscGVyLnJlYWQoKTtcbiIrCisJCQkJCSIgICAgICAgU3lzdGVt
Lm91dC5wcmludGxuKGYubSgpKTtcbiIrCisJCQkJCSIJfVxuIisKKwkJCQkJIn0iLAorCQkJCQki
SGVscGVyLmphdmEiLEhFTFBFUl9DTEFTUywKKwkJCQkJfSwKKwkJCQkJIjMzXG4zMyIsCisJCQkJ
CW51bGwsCisJCQkJCXRydWUsCisJCQkJCW5ldyBTdHJpbmcgW10geyAiLURkdW1teSIgfSk7IC8v
IE5vdCBzdXJlLCB1bmxlc3Mgd2UgZm9yY2UgdGhlIFZNIHRvIG5vdCBiZSByZXVzZWQgYnkgcGFz
c2luZyBkdW1teSB2bSBhcmd1bWVudCwgdGhlIGdlbmVyYXRlZCBwcm9ncmFtIGFib3J0cyBtaWR3
YXkgdGhyb3VnaCBpdHMgZXhlY3V0aW9uLgorCQlTdHJpbmcgZXhwZWN0ZWRPdXRwdXQgPQorCQkJ
CSIwOiBpbnZva2VzdGF0aWMgamF2YS9sYW5nL2ludm9rZS9MYW1iZGFNZXRhZmFjdG9yeS5hbHRN
ZXRhZmFjdG9yeTooTGphdmEvbGFuZy9pbnZva2UvTWV0aG9kSGFuZGxlcyRMb29rdXA7TGphdmEv
bGFuZy9TdHJpbmc7TGphdmEvbGFuZy9pbnZva2UvTWV0aG9kVHlwZTtbTGphdmEvbGFuZy9PYmpl
Y3Q7KUxqYXZhL2xhbmcvaW52b2tlL0NhbGxTaXRlO1xuIisKKwkJCQkiICBNZXRob2QgYXJndW1l
bnRzOlxuIisKKwkJCQkiICAgICgpSVxuIisKKwkJCQkiICAgIGludm9rZXN0YXRpYyBYLmxhbWJk
YSQwOigpSVxuIisKKwkJCQkiICAgICgpSVxuIisKKwkJCQkiICAgIDFcbiIrCisJCQkJIjE6IGlu
dm9rZXN0YXRpYyBqYXZhL2xhbmcvaW52b2tlL0xhbWJkYU1ldGFmYWN0b3J5LmFsdE1ldGFmYWN0
b3J5OihMamF2YS9sYW5nL2ludm9rZS9NZXRob2RIYW5kbGVzJExvb2t1cDtMamF2YS9sYW5nL1N0
cmluZztMamF2YS9sYW5nL2ludm9rZS9NZXRob2RUeXBlO1tMamF2YS9sYW5nL09iamVjdDspTGph
dmEvbGFuZy9pbnZva2UvQ2FsbFNpdGU7XG4iKworCQkJCSIgIE1ldGhvZCBhcmd1bWVudHM6XG4i
KworCQkJCSIgICAgKClJXG4iKworCQkJCSIgICAgaW52b2tlc3RhdGljIFgubGFtYmRhJDE6KClJ
XG4iKworCQkJCSIgICAgKClJXG4iKworCQkJCSIgICAgMVxuIjsKKwkJU3RyaW5nIGRhdGEgPSBw
cmludEJvb3RzdHJhcE1ldGhvZHNBdHRyaWJ1dGUoT1VUUFVUX0RJUiArIEZpbGUuc2VwYXJhdG9y
ICsgIlguY2xhc3MiKTsKKwkJY2hlY2tFeHBlY3RlZChleHBlY3RlZE91dHB1dCxkYXRhKTsKKwl9
CisJCisJcHVibGljIHZvaWQgdGVzdDAyM19sYW1iZGFzSW5PdGhlclBsYWNlc19GaWVsZCgpIHRo
cm93cyBFeGNlcHRpb24geworCQl0aGlzLnJ1bkNvbmZvcm1UZXN0KAorCQkJCW5ldyBTdHJpbmdb
XXsKKwkJCQkJIlguamF2YSIsCisJCQkJCSJpbXBvcnQgamF2YS5pby5TZXJpYWxpemFibGU7XG4i
KworCQkJCQkiaW50ZXJmYWNlIEZvbyBleHRlbmRzIFNlcmlhbGl6YWJsZSB7aW50IG0oKTt9XG4i
KworCQkJCQkicHVibGljIGNsYXNzIFgge1xuIisKKwkJCQkJIiAgIEZvbyBmID0gKCkgLT4gOTk7
XG4iICsKKwkJCQkJIglwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmcgYXJndltdKSB0aHJv
d3MgRXhjZXB0aW9uIHtcbiIrCisJCQkJCSIgICAgIG5ldyBYKCkucnVuKCk7XG4iKworCQkJCQki
ICAgfVxuIisKKwkJCQkJIiAgIHB1YmxpYyB2b2lkIHJ1bigpIHtcbiIrCisJCQkJCSIgICAgICAg
U3lzdGVtLm91dC5wcmludGxuKGYubSgpKTtcbiIrCisJCQkJCSIgICAgICAgdXRpbC5IZWxwZXIu
d3JpdGUoZik7XG4iKworCQkJCQkiICAgICAgIGYgPSAoRm9vKXV0aWwuSGVscGVyLnJlYWQoKTtc
biIrCisJCQkJCSIgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGYubSgpKTtcbiIrCisJCQkJCSIJ
fVxuIisKKwkJCQkJIn0iLAorCQkJCQkiSGVscGVyLmphdmEiLEhFTFBFUl9DTEFTUywKKwkJCQkJ
fSwKKwkJCQkJIjk5XG45OSIsCisJCQkJCW51bGwsCisJCQkJCXRydWUsCisJCQkJCW5ldyBTdHJp
bmcgW10geyAiLURkdW1teSIgfSk7IC8vIE5vdCBzdXJlLCB1bmxlc3Mgd2UgZm9yY2UgdGhlIFZN
IHRvIG5vdCBiZSByZXVzZWQgYnkgcGFzc2luZyBkdW1teSB2bSBhcmd1bWVudCwgdGhlIGdlbmVy
YXRlZCBwcm9ncmFtIGFib3J0cyBtaWR3YXkgdGhyb3VnaCBpdHMgZXhlY3V0aW9uLgorCQlTdHJp
bmcgZXhwZWN0ZWRPdXRwdXQgPQorCQkJCSIwOiBpbnZva2VzdGF0aWMgamF2YS9sYW5nL2ludm9r
ZS9MYW1iZGFNZXRhZmFjdG9yeS5hbHRNZXRhZmFjdG9yeTooTGphdmEvbGFuZy9pbnZva2UvTWV0
aG9kSGFuZGxlcyRMb29rdXA7TGphdmEvbGFuZy9TdHJpbmc7TGphdmEvbGFuZy9pbnZva2UvTWV0
aG9kVHlwZTtbTGphdmEvbGFuZy9PYmplY3Q7KUxqYXZhL2xhbmcvaW52b2tlL0NhbGxTaXRlO1xu
IisKKwkJCQkiICBNZXRob2QgYXJndW1lbnRzOlxuIisKKwkJCQkiICAgICgpSVxuIisKKwkJCQki
ICAgIGludm9rZXN0YXRpYyBYLmxhbWJkYSQwOigpSVxuIisKKwkJCQkiICAgICgpSVxuIisKKwkJ
CQkiICAgIDFcbiI7CisJCVN0cmluZyBkYXRhID0gcHJpbnRCb290c3RyYXBNZXRob2RzQXR0cmli
dXRlKE9VVFBVVF9ESVIgKyBGaWxlLnNlcGFyYXRvciArICJYLmNsYXNzIik7CisJCWNoZWNrRXhw
ZWN0ZWQoZXhwZWN0ZWRPdXRwdXQsZGF0YSk7CisJfQorCQorCXB1YmxpYyB2b2lkIHRlc3QwMjRf
bGFtYmRhc0luT3RoZXJQbGFjZXNfTWV0aG9kUGFyYW1ldGVyKCkgdGhyb3dzIEV4Y2VwdGlvbiB7
CisJCXRoaXMucnVuQ29uZm9ybVRlc3QoCisJCQkJbmV3IFN0cmluZ1tdeworCQkJCQkiWC5qYXZh
IiwKKwkJCQkJImltcG9ydCBqYXZhLmlvLlNlcmlhbGl6YWJsZTtcbiIrCisJCQkJCSJpbnRlcmZh
Y2UgRm9vIGV4dGVuZHMgU2VyaWFsaXphYmxlIHtpbnQgbSgpO31cbiIrCisJCQkJCSJwdWJsaWMg
Y2xhc3MgWCB7XG4iKworCQkJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBhcmd2
W10pIHRocm93cyBFeGNlcHRpb24ge1xuIisKKwkJCQkJIiAgICAgICBuZXcgWCgpLnJ1bigoKS0+
MzMpO1xuIisKKwkJCQkJIiAgIH1cbiIrCisJCQkJCSIgICBwdWJsaWMgdm9pZCBydW4oRm9vIGYp
IHtcbiIrCisJCQkJCSIgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGYubSgpKTtcbiIrCisJCQkJ
CSIgICAgICAgdXRpbC5IZWxwZXIud3JpdGUoZik7XG4iKworCQkJCQkiICAgICAgIGYgPSAoRm9v
KXV0aWwuSGVscGVyLnJlYWQoKTtcbiIrCisJCQkJCSIgICAgICAgU3lzdGVtLm91dC5wcmludGxu
KGYubSgpKTtcbiIrCisJCQkJCSIJfVxuIisKKwkJCQkJIn0iLAorCQkJCQkiSGVscGVyLmphdmEi
LEhFTFBFUl9DTEFTUywKKwkJCQkJfSwKKwkJCQkJIjMzXG4zMyIsCisJCQkJCW51bGwsCisJCQkJ
CXRydWUsCisJCQkJCW5ldyBTdHJpbmcgW10geyAiLURkdW1teSIgfSk7IC8vIE5vdCBzdXJlLCB1
bmxlc3Mgd2UgZm9yY2UgdGhlIFZNIHRvIG5vdCBiZSByZXVzZWQgYnkgcGFzc2luZyBkdW1teSB2
bSBhcmd1bWVudCwgdGhlIGdlbmVyYXRlZCBwcm9ncmFtIGFib3J0cyBtaWR3YXkgdGhyb3VnaCBp
dHMgZXhlY3V0aW9uLgorCQlTdHJpbmcgZXhwZWN0ZWRPdXRwdXQgPQorCQkJCSIwOiBpbnZva2Vz
dGF0aWMgamF2YS9sYW5nL2ludm9rZS9MYW1iZGFNZXRhZmFjdG9yeS5hbHRNZXRhZmFjdG9yeToo
TGphdmEvbGFuZy9pbnZva2UvTWV0aG9kSGFuZGxlcyRMb29rdXA7TGphdmEvbGFuZy9TdHJpbmc7
TGphdmEvbGFuZy9pbnZva2UvTWV0aG9kVHlwZTtbTGphdmEvbGFuZy9PYmplY3Q7KUxqYXZhL2xh
bmcvaW52b2tlL0NhbGxTaXRlO1xuIisKKwkJCQkiICBNZXRob2QgYXJndW1lbnRzOlxuIisKKwkJ
CQkiICAgICgpSVxuIisKKwkJCQkiICAgIGludm9rZXN0YXRpYyBYLmxhbWJkYSQwOigpSVxuIisK
KwkJCQkiICAgICgpSVxuIisKKwkJCQkiICAgIDFcbiI7CisJCVN0cmluZyBkYXRhID0gcHJpbnRC
b290c3RyYXBNZXRob2RzQXR0cmlidXRlKE9VVFBVVF9ESVIgKyBGaWxlLnNlcGFyYXRvciArICJY
LmNsYXNzIik7CisJCWNoZWNrRXhwZWN0ZWQoZXhwZWN0ZWRPdXRwdXQsZGF0YSk7CisJfQorCQor
CXB1YmxpYyB2b2lkIHRlc3QwMjVfbGFtYmRhc1dpdGhHZW5lcmljSW5mZXJlbmNpbmcoKSB0aHJv
d3MgRXhjZXB0aW9uIHsKKwkJdGhpcy5ydW5Db25mb3JtVGVzdCgKKwkJCQluZXcgU3RyaW5nW117
CisJCQkJCSJYLmphdmEiLAorCQkJCQkiaW1wb3J0IGphdmEuaW8uU2VyaWFsaXphYmxlO1xuIisK
KwkJCQkJImltcG9ydCBqYXZhLnV0aWwuZnVuY3Rpb24uKjtcbiIrCisJCQkJCSJwdWJsaWMgY2xh
c3MgWCB7XG4iKworCQkJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBhcmd2W10p
IHRocm93cyBFeGNlcHRpb24ge1xuIisKKwkJCQkJIiAgICAgICBuZXcgWCgpLnJ1bigpO1xuIisK
KwkJCQkJIiAgIH1cbiIrCisJCQkJCSIgICBwdWJsaWMgdm9pZCBydW4oKSB7XG4iKworCQkJCQki
ICAgICAgIEludEZ1bmN0aW9uPEludGVnZXI+IHRpbWVzMyA9IChJbnRGdW5jdGlvbjxJbnRlZ2Vy
PiAmIFNlcmlhbGl6YWJsZSkgKHRyaXBsZSkgLT4gMyAqIHRyaXBsZTtcbiIrCisJCQkJCSIgICAg
ICAgU3lzdGVtLm91dC5wcmludGxuKHRpbWVzMy5hcHBseSg0KSk7XG4iKworCQkJCQkiICAgICAg
IHV0aWwuSGVscGVyLndyaXRlKHRpbWVzMyk7XG4iKworCQkJCQkiICAgICAgIHRpbWVzMyA9IChJ
bnRGdW5jdGlvbjxJbnRlZ2VyPil1dGlsLkhlbHBlci5yZWFkKCk7XG4iKworCQkJCQkiICAgICAg
IFN5c3RlbS5vdXQucHJpbnRsbih0aW1lczMuYXBwbHkoNCkpO1xuIisKKwkJCQkJIgl9XG4iKwor
CQkJCQkifSIsCisJCQkJCSJIZWxwZXIuamF2YSIsSEVMUEVSX0NMQVNTLAorCQkJCQl9LAorCQkJ
CQkiMTJcbjEyIiwKKwkJCQkJbnVsbCwKKwkJCQkJdHJ1ZSwKKwkJCQkJbmV3IFN0cmluZyBbXSB7
ICItRGR1bW15IiB9KTsgLy8gTm90IHN1cmUsIHVubGVzcyB3ZSBmb3JjZSB0aGUgVk0gdG8gbm90
IGJlIHJldXNlZCBieSBwYXNzaW5nIGR1bW15IHZtIGFyZ3VtZW50LCB0aGUgZ2VuZXJhdGVkIHBy
b2dyYW0gYWJvcnRzIG1pZHdheSB0aHJvdWdoIGl0cyBleGVjdXRpb24uCisJCVN0cmluZyBleHBl
Y3RlZE91dHB1dCA9CisJCQkJIjA6IGludm9rZXN0YXRpYyBqYXZhL2xhbmcvaW52b2tlL0xhbWJk
YU1ldGFmYWN0b3J5LmFsdE1ldGFmYWN0b3J5OihMamF2YS9sYW5nL2ludm9rZS9NZXRob2RIYW5k
bGVzJExvb2t1cDtMamF2YS9sYW5nL1N0cmluZztMamF2YS9sYW5nL2ludm9rZS9NZXRob2RUeXBl
O1tMamF2YS9sYW5nL09iamVjdDspTGphdmEvbGFuZy9pbnZva2UvQ2FsbFNpdGU7XG4iKworCQkJ
CSIgIE1ldGhvZCBhcmd1bWVudHM6XG4iKworCQkJCSIgICAgKEkpTGphdmEvbGFuZy9PYmplY3Q7
XG4iKworCQkJCSIgICAgaW52b2tlc3RhdGljIFgubGFtYmRhJDA6KEkpTGphdmEvbGFuZy9JbnRl
Z2VyO1xuIisKKwkJCQkiICAgIChJKUxqYXZhL2xhbmcvSW50ZWdlcjtcbiIrCisJCQkJIiAgICAx
XG4iOworCQlTdHJpbmcgZGF0YSA9IHByaW50Qm9vdHN0cmFwTWV0aG9kc0F0dHJpYnV0ZShPVVRQ
VVRfRElSICsgRmlsZS5zZXBhcmF0b3IgKyAiWC5jbGFzcyIpOworCQljaGVja0V4cGVjdGVkKGV4
cGVjdGVkT3V0cHV0LGRhdGEpOworCX0KKwlwdWJsaWMgdm9pZCB0ZXN0MDI2X2xhbWJkYXNJbk90
aGVyUGxhY2VzX0NsaW5pdCgpIHRocm93cyBFeGNlcHRpb24geworCQl0aGlzLnJ1bkNvbmZvcm1U
ZXN0KAorCQkJCW5ldyBTdHJpbmdbXXsKKwkJCQkJIlguamF2YSIsCisJCQkJCSJpbXBvcnQgamF2
YS5pby5TZXJpYWxpemFibGU7XG4iKworCQkJCQkiaW50ZXJmYWNlIEZvbyBleHRlbmRzIFNlcmlh
bGl6YWJsZSB7aW50IG0oKTt9XG4iKworCQkJCQkicHVibGljIGNsYXNzIFgge1xuIisKKwkJCQkJ
IiAgIHN0YXRpYyB7XG4iKworCQkJCQkiICAgICBGb28gZiA9ICgpIC0+IDk5O1xuIiArCisJCQkJ
CSIgICB9XG4iKworCQkJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZyBhcmd2W10p
IHRocm93cyBFeGNlcHRpb24ge1xuIisKKwkJCQkJIiAgICAgbmV3IFgoKS5ydW4oKTtcbiIrCisJ
CQkJCSIgICB9XG4iKworCQkJCQkiICAgcHVibGljIHZvaWQgcnVuKCkge1xuIisKKwkJCQkJIiAg
ICAgICBGb28gZiA9ICgpLT45OTtcbiIrCisJCQkJCSIgICAgICAgU3lzdGVtLm91dC5wcmludGxu
KGYubSgpKTtcbiIrCisJCQkJCSIgICAgICAgdXRpbC5IZWxwZXIud3JpdGUoZik7XG4iKworCQkJ
CQkiICAgICAgIGYgPSAoRm9vKXV0aWwuSGVscGVyLnJlYWQoKTtcbiIrCisJCQkJCSIgICAgICAg
U3lzdGVtLm91dC5wcmludGxuKGYubSgpKTtcbiIrCisJCQkJCSIJfVxuIisKKwkJCQkJIn0iLAor
CQkJCQkiSGVscGVyLmphdmEiLEhFTFBFUl9DTEFTUywKKwkJCQkJfSwKKwkJCQkJIjk5XG45OSIs
CisJCQkJCW51bGwsCisJCQkJCXRydWUsCisJCQkJCW5ldyBTdHJpbmcgW10geyAiLURkdW1teSIg
fSk7IC8vIE5vdCBzdXJlLCB1bmxlc3Mgd2UgZm9yY2UgdGhlIFZNIHRvIG5vdCBiZSByZXVzZWQg
YnkgcGFzc2luZyBkdW1teSB2bSBhcmd1bWVudCwgdGhlIGdlbmVyYXRlZCBwcm9ncmFtIGFib3J0
cyBtaWR3YXkgdGhyb3VnaCBpdHMgZXhlY3V0aW9uLgorCQlTdHJpbmcgZXhwZWN0ZWRPdXRwdXQg
PQorCQkJCSIwOiBpbnZva2VzdGF0aWMgamF2YS9sYW5nL2ludm9rZS9MYW1iZGFNZXRhZmFjdG9y
eS5hbHRNZXRhZmFjdG9yeTooTGphdmEvbGFuZy9pbnZva2UvTWV0aG9kSGFuZGxlcyRMb29rdXA7
TGphdmEvbGFuZy9TdHJpbmc7TGphdmEvbGFuZy9pbnZva2UvTWV0aG9kVHlwZTtbTGphdmEvbGFu
Zy9PYmplY3Q7KUxqYXZhL2xhbmcvaW52b2tlL0NhbGxTaXRlO1xuIisKKwkJCQkiICBNZXRob2Qg
YXJndW1lbnRzOlxuIisKKwkJCQkiICAgICgpSVxuIisKKwkJCQkiICAgIGludm9rZXN0YXRpYyBY
LmxhbWJkYSQwOigpSVxuIisKKwkJCQkiICAgICgpSVxuIisKKwkJCQkiICAgIDFcbiIrCisJCQkJ
IjE6IGludm9rZXN0YXRpYyBqYXZhL2xhbmcvaW52b2tlL0xhbWJkYU1ldGFmYWN0b3J5LmFsdE1l
dGFmYWN0b3J5OihMamF2YS9sYW5nL2ludm9rZS9NZXRob2RIYW5kbGVzJExvb2t1cDtMamF2YS9s
YW5nL1N0cmluZztMamF2YS9sYW5nL2ludm9rZS9NZXRob2RUeXBlO1tMamF2YS9sYW5nL09iamVj
dDspTGphdmEvbGFuZy9pbnZva2UvQ2FsbFNpdGU7XG4iKworCQkJCSIgIE1ldGhvZCBhcmd1bWVu
dHM6XG4iKworCQkJCSIgICAgKClJXG4iKworCQkJCSIgICAgaW52b2tlc3RhdGljIFgubGFtYmRh
JDE6KClJXG4iKworCQkJCSIgICAgKClJXG4iKworCQkJCSIgICAgMVxuIjsKKwkJU3RyaW5nIGRh
dGEgPSBwcmludEJvb3RzdHJhcE1ldGhvZHNBdHRyaWJ1dGUoT1VUUFVUX0RJUiArIEZpbGUuc2Vw
YXJhdG9yICsgIlguY2xhc3MiKTsKKwkJY2hlY2tFeHBlY3RlZChleHBlY3RlZE91dHB1dCxkYXRh
KTsKKwl9CisJCisJCisJLy8gLS0tCisJCisJcHJpdmF0ZSB2b2lkIGNoZWNrRXhwZWN0ZWQoU3Ry
aW5nIGV4cGVjdGVkLCBTdHJpbmcgYWN0dWFsKSB7CisJCWlmICghZXhwZWN0ZWQuZXF1YWxzKGFj
dHVhbCkpIHsKKwkJCXByaW50SXQoYWN0dWFsKTsKKwkJfQorCQlhc3NlcnRFcXVhbHMoZXhwZWN0
ZWQsYWN0dWFsKTsKKwl9CisJCisJLyoqCisJICogUHJpbnQgYSBwaWVjZSBvZiB0ZXh0IHdpdGgg
dGhlIG5lY2Vzc2FyeSBleHRyYSBxdW90ZXMgYW5kIG5ld2xpbmVzIHNvIHRoYXQgaXQgY2FuIGJl
IGN1dC9wYXN0ZWQgaW50bworCSAqIHRoZSB0ZXN0IHNvdXJjZSBmaWxlLgorCSAqLworCXByaXZh
dGUgdm9pZCBwcmludEl0KFN0cmluZyB0ZXh0KSB7CisJCVN0cmluZyBxdW90ZWRUZXh0ID0gdGV4
dDsKKwkJaWYgKCFxdW90ZWRUZXh0LnN0YXJ0c1dpdGgoIlwiIikpIHsKKwkJCXF1b3RlZFRleHQg
PSAiXCIiK3F1b3RlZFRleHQucmVwbGFjZUFsbCgiXG4iLCAiXFxcXG5cIitcblwiIik7CisJCQlx
dW90ZWRUZXh0ID0gcXVvdGVkVGV4dC5zdWJzdHJpbmcoMCxxdW90ZWRUZXh0Lmxlbmd0aCgpLTMp
OworCQl9CisJCVN5c3RlbS5vdXQucHJpbnRsbihxdW90ZWRUZXh0KTsKKwl9CisJCisJLyoqCisJ
ICogUHJpbnQgdGhlIGJvb3RzdHJhcCBtZXRob2RzIGF0dHJpYnV0ZSBpbiBhIHZlcnkgc2ltaWxh
ciBmYXNoaW9uIHRvIGphdmFwIGZvciBjaGVja2luZy4KKwkgKiBVbmxpa2UgamF2YXAgdGhlIGNv
bnN0YW50IHBvb2wgaW5kZXhlcyBhcmUgbm90IGluY2x1ZGVkLCB0byBtYWtlIHRoZSB0ZXN0IGEg
bGl0dGxlIGxlc3MKKwkgKiBmcmFnaWxlLgorCSAqLworCXByaXZhdGUgU3RyaW5nIHByaW50Qm9v
dHN0cmFwTWV0aG9kc0F0dHJpYnV0ZShTdHJpbmcgZmlsZXBhdGgpIHsKKwkJSUNsYXNzRmlsZVJl
YWRlciBjZnIgPSBUb29sRmFjdG9yeS5jcmVhdGVEZWZhdWx0Q2xhc3NGaWxlUmVhZGVyKGZpbGVw
YXRoLCBJQ2xhc3NGaWxlUmVhZGVyLkNMQVNTRklMRV9BVFRSSUJVVEVTKTsKKwkJQm9vdHN0cmFw
TWV0aG9kc0F0dHJpYnV0ZSBib290c3RyYXBNZXRob2RzQXR0cmlidXRlID0gbnVsbDsKKwkJSUNs
YXNzRmlsZUF0dHJpYnV0ZVtdIGF0dHJzID0gY2ZyLmdldEF0dHJpYnV0ZXMoKTsKKwkJZm9yIChp
bnQgaT0wLG1heD1hdHRycy5sZW5ndGg7aTxtYXg7aSsrKSB7CisJCQlpZiAobmV3IFN0cmluZyhh
dHRyc1tpXS5nZXRBdHRyaWJ1dGVOYW1lKCkpLmVxdWFscygiQm9vdHN0cmFwTWV0aG9kcyIpKSB7
CisJCQkJYm9vdHN0cmFwTWV0aG9kc0F0dHJpYnV0ZSA9IChCb290c3RyYXBNZXRob2RzQXR0cmli
dXRlKWF0dHJzW2ldOworCQkJfQorCQl9CisJCWlmIChib290c3RyYXBNZXRob2RzQXR0cmlidXRl
PT1udWxsKSB7CisJCQlyZXR1cm4gIiI7CisJCX0KKwkJSUNvbnN0YW50UG9vbCBjcCA9IGNmci5n
ZXRDb25zdGFudFBvb2woKTsKKwkJU3RyaW5nQnVmZmVyIHNiID0gbmV3IFN0cmluZ0J1ZmZlcigp
OworCQlpbnQgYm1hTGVuZ3RoID0gYm9vdHN0cmFwTWV0aG9kc0F0dHJpYnV0ZS5nZXRCb290c3Ry
YXBNZXRob2RzTGVuZ3RoKCk7CisJCWZvciAoaW50IGk9MDtpPGJtYUxlbmd0aDtpKyspIHsKKwkJ
CUlCb290c3RyYXBNZXRob2RzRW50cnkgZW50cnkgPSBib290c3RyYXBNZXRob2RzQXR0cmlidXRl
LmdldEJvb3RzdHJhcE1ldGhvZHMoKVtpXTsKKwkJCWludCBtciA9IGVudHJ5LmdldEJvb3RzdHJh
cE1ldGhvZFJlZmVyZW5jZSgpOworCQkJSUNvbnN0YW50UG9vbEVudHJ5MiBpY3BlID0gKElDb25z
dGFudFBvb2xFbnRyeTIpY2ZyLmdldENvbnN0YW50UG9vbCgpLmRlY29kZUVudHJ5KG1yKTsKKwkJ
CQorCQkJc2IuYXBwZW5kKGkpLmFwcGVuZCgiOiAiKS5hcHBlbmQoZm9ybWF0UmVmZXJlbmNlS2lu
ZChpY3BlLmdldFJlZmVyZW5jZUtpbmQoKSkpOworCQkJc2IuYXBwZW5kKCIgIikuYXBwZW5kKGZv
cm1hdChjcCxpY3BlLmdldFJlZmVyZW5jZUluZGV4KCkpKTsJCisJCQlzYi5hcHBlbmQoIlxuIik7
CisJCQlpbnRbXSBhcmdzID0gZW50cnkuZ2V0Qm9vdHN0cmFwQXJndW1lbnRzKCk7CisJCQlzYi5h
cHBlbmQoIiAgTWV0aG9kIGFyZ3VtZW50czpcbiIpOworCQkJZm9yIChpbnQgYT0wO2E8YXJncy5s
ZW5ndGg7YSsrKSB7CisJCQkJc2IuYXBwZW5kKCIgICAgIikuYXBwZW5kKGZvcm1hdChjcCxhcmdz
W2FdKSkuYXBwZW5kKCJcbiIpOworCQkJfQorCQl9CisJCXJldHVybiBzYi50b1N0cmluZygpOwor
CX0KKwkKKwlwcml2YXRlIFN0cmluZyBwcmludExhbWJkYU1ldGhvZHMoU3RyaW5nIGZpbGVwYXRo
KSB7CisJCUlDbGFzc0ZpbGVSZWFkZXIgY2ZyID0gVG9vbEZhY3RvcnkuY3JlYXRlRGVmYXVsdENs
YXNzRmlsZVJlYWRlcihmaWxlcGF0aCwgSUNsYXNzRmlsZVJlYWRlci5NRVRIT0RfSU5GT1MpOwor
CQlJTWV0aG9kSW5mb1tdIG1ldGhvZEluZm9zID0gY2ZyLmdldE1ldGhvZEluZm9zKCk7CisJCVN0
cmluZ0J1ZmZlciBidWYgPSBuZXcgU3RyaW5nQnVmZmVyKCk7CisJCWZvciAoaW50IGkgPSAwLCBt
YXggPSBtZXRob2RJbmZvcy5sZW5ndGg7IGkgPCBtYXg7IGkrKykgeworCQkJSU1ldGhvZEluZm8g
bWV0aG9kSW5mbyA9IG1ldGhvZEluZm9zW2ldOworCQkJaWYgKCFuZXcgU3RyaW5nKG1ldGhvZElu
Zm8uZ2V0TmFtZSgpKS5zdGFydHNXaXRoKCJsYW1iZGEiKSkgCisJCQkJY29udGludWU7CisJCQlp
bnQgYWNjZXNzRmxhZ3MgPSBtZXRob2RJbmZvLmdldEFjY2Vzc0ZsYWdzKCk7CisJCQlpZiAoTW9k
aWZpZXIuaXNTdGF0aWMoYWNjZXNzRmxhZ3MpKSB7CisJCQkJYnVmLmFwcGVuZCgic3RhdGljICIp
OworCQkJfQorCQkJYnVmLmFwcGVuZChtZXRob2RJbmZvLmdldE5hbWUoKSk7CisJCQlidWYuYXBw
ZW5kKG1ldGhvZEluZm8uZ2V0RGVzY3JpcHRvcigpKTsKKwkJCWJ1Zi5hcHBlbmQoIlxuIik7CisJ
CX0KKwkJcmV0dXJuIGJ1Zi50b1N0cmluZygpOworCX0KKwkKKwlTdHJpbmcgZm9ybWF0UmVmZXJl
bmNlS2luZChpbnQga2luZCkgeworCQlzd2l0Y2ggKGtpbmQpIHsKKwkJCWNhc2UgSUNvbnN0YW50
UG9vbENvbnN0YW50Lk1FVEhPRF9UWVBFX1JFRl9JbnZva2VTdGF0aWM6CisJCQkJcmV0dXJuICJp
bnZva2VzdGF0aWMiOworCQkJZGVmYXVsdDoKKwkJCQl0aHJvdyBuZXcgSWxsZWdhbFN0YXRlRXhj
ZXB0aW9uKCJueWkgZm9yICIra2luZCk7CisJCX0KKwl9CisJCisJU3RyaW5nIGZvcm1hdChJQ29u
c3RhbnRQb29sIGNwLCBpbnQgZW50cnlOdW1iZXIpIHsKKwkJSUNvbnN0YW50UG9vbEVudHJ5IGVu
dHJ5ID0gY3AuZGVjb2RlRW50cnkoZW50cnlOdW1iZXIpOworCQlpZiAoZW50cnkgPT0gbnVsbCkg
eworCQkJcmV0dXJuICJudWxsIjsKKwkJfQorCQlzd2l0Y2ggKGVudHJ5LmdldEtpbmQoKSkgewor
CQkJY2FzZSBJQ29uc3RhbnRQb29sQ29uc3RhbnQuQ09OU1RBTlRfSW50ZWdlcjoKKwkJCQlyZXR1
cm4gSW50ZWdlci50b1N0cmluZyhlbnRyeS5nZXRJbnRlZ2VyVmFsdWUoKSk7CisJCQljYXNlIElD
b25zdGFudFBvb2xDb25zdGFudC5DT05TVEFOVF9VdGY4OgorCQkJCXJldHVybiBuZXcgU3RyaW5n
KGVudHJ5LmdldFV0ZjhWYWx1ZSgpKTsKKwkJCWNhc2UgSUNvbnN0YW50UG9vbENvbnN0YW50LkNP
TlNUQU5UX01ldGhvZHJlZjoKKwkJCQlyZXR1cm4gbmV3IFN0cmluZyhlbnRyeS5nZXRDbGFzc05h
bWUoKSkrIi4iK25ldyBTdHJpbmcoZW50cnkuZ2V0TWV0aG9kTmFtZSgpKSsiOiIrbmV3IFN0cmlu
ZyhlbnRyeS5nZXRNZXRob2REZXNjcmlwdG9yKCkpOworCQkJY2FzZSBJQ29uc3RhbnRQb29sQ29u
c3RhbnQuQ09OU1RBTlRfTWV0aG9kSGFuZGxlOgorCQkJCUlDb25zdGFudFBvb2xFbnRyeTIgZW50
cnkyID0gKElDb25zdGFudFBvb2xFbnRyeTIpZW50cnk7CisJCQkJcmV0dXJuIGZvcm1hdFJlZmVy
ZW5jZUtpbmQoZW50cnkyLmdldFJlZmVyZW5jZUtpbmQoKSkrIiAiK2Zvcm1hdChjcCxlbnRyeTIu
Z2V0UmVmZXJlbmNlSW5kZXgoKSk7CisJCQljYXNlIElDb25zdGFudFBvb2xDb25zdGFudC5DT05T
VEFOVF9NZXRob2RUeXBlOgorCQkJCXJldHVybiBmb3JtYXQoY3AsKChJQ29uc3RhbnRQb29sRW50
cnkyKWVudHJ5KS5nZXREZXNjcmlwdG9ySW5kZXgoKSk7CisJCQljYXNlIElDb25zdGFudFBvb2xD
b25zdGFudC5DT05TVEFOVF9DbGFzczoKKwkJCQlyZXR1cm4gbmV3IFN0cmluZyhlbnRyeS5nZXRD
bGFzc0luZm9OYW1lKCkpOworCQkJZGVmYXVsdDoKKwkJCQkJdGhyb3cgbmV3IElsbGVnYWxTdGF0
ZUV4Y2VwdGlvbigibnlpIGZvciAiK2VudHJ5LmdldEtpbmQoKSk7CisJCX0KKwl9CisJCit9CisK
ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9SdW5Pbmx5SmF2YThUZXN0cy5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL1J1bk9u
bHlKYXZhOFRlc3RzLmphdmEKaW5kZXggMGVlMzUwNS4uMzU0ZGQxNCAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL1J1bk9ubHlKYXZhOFRlc3RzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL1J1bk9ubHlKYXZhOFRlc3Rz
LmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJp
Z2h0IChjKSAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChj
KSAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZl
ZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1h
ZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5z
ZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2
YWlsYWJsZSBhdApAQCAtMTEsNiArMTEsOCBAQAogICoKICAqIENvbnRyaWJ1dG9yczoKICAqICAg
ICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KKyAqICAg
ICBBbmR5IENsZW1lbnQgKEdvUGl2b3RhbCwgSW5jKSBhY2xlbWVudEBnb3Bpdm90YWwuY29tIC0g
Q29udHJpYnV0aW9ucyBmb3IKKyAqICAgICAgICAgICAgICAgICAgICAgICBCdWcgNDA1MTA0IC0g
WzEuOF1bY29tcGlsZXJdW2NvZGVnZW5dIEltcGxlbWVudCBzdXBwb3J0IGZvciBzZXJpYWxpemVh
YmxlIGxhbWJkYXMKICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0czsKIApAQCAtNDcsNiArNDksNyBAQCBpbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIucmVncmVzc2lvbi5OZWdhdGl2ZVR5cGVBbm5vdGF0aW9u
VGVzdAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyLnJlZ3Jlc3Np
b24uTnVsbFR5cGVBbm5vdGF0aW9uVGVzdDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5jb21waWxlci5yZWdyZXNzaW9uLk92ZXJsb2FkUmVzb2x1dGlvblRlc3Q4OwogaW1wb3J0
IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyLnJlZ3Jlc3Npb24uUmVwZWF0YWJs
ZUFubm90YXRpb25UZXN0OworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBp
bGVyLnJlZ3Jlc3Npb24uU2VyaWFsaXphYmxlTGFtYmRhVGVzdDsKIGltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci5yZWdyZXNzaW9uLlR5cGVBbm5vdGF0aW9uVGVzdDsK
IGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5kb20uQVNUQ29udmVydGVyMTVKTFM4
VGVzdDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5kb20uQVNUQ29udmVydGVy
MThUZXN0OwpAQCAtNzMsNiArNzYsNyBAQCBwdWJsaWMgY2xhc3MgUnVuT25seUphdmE4VGVzdHMg
ZXh0ZW5kcyBUZXN0Q2FzZSB7CiAJCQlMYW1iZGFFeHByZXNzaW9uU3ludGF4VGVzdC5jbGFzcywK
IAkJCU5lZ2F0aXZlTGFtYmRhRXhwcmVzc2lvbnNUZXN0LmNsYXNzLAogCQkJTGFtYmRhRXhwcmVz
c2lvbnNUZXN0LmNsYXNzLAorCQkJU2VyaWFsaXphYmxlTGFtYmRhVGVzdC5jbGFzcywKIAkJCU92
ZXJsb2FkUmVzb2x1dGlvblRlc3Q4LmNsYXNzLAogCQkJSlNSMzM1Q2xhc3NGaWxlVGVzdC5jbGFz
cywKIAkJCU5lZ2F0aXZlVHlwZUFubm90YXRpb25UZXN0LmNsYXNzLApkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBp
bGVyL0NsYXNzRmlsZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL0NsYXNzRmlsZS5qYXZhCmluZGV4IGRhNmFkZDAu
LmI5MGVlYmIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9DbGFzc0ZpbGUuamF2YQorKysgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
Q2xhc3NGaWxlLmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgot
ICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgor
ICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgog
ICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5n
IG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUg
RWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRp
c3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtMTYsMTMgKzE2LDE0IEBACiAgKgkJ
CQkJCQlCdWcgNDA2OTgyIC0gWzEuOF1bY29tcGlsZXJdIEdlbmVyYXRpb24gb2YgTWV0aG9kUGFy
YW1ldGVycyBBdHRyaWJ1dGUgaW4gY2xhc3NmaWxlCiAgKgkJCQkJCQlCdWcgNDE2ODg1IC0gWzEu
OF1bY29tcGlsZXJdSW5jb21wYXRpYmxlQ2xhc3NDaGFuZ2UgZXJyb3IgKGVkaXQpCiAgKgkJCQkJ
CQlCdWcgNDEyMTQ5IC0gWzEuOF1bY29tcGlsZXJdIEVtaXQgcmVwZWF0ZWQgYW5ub3RhdGlvbnMg
aW50byB0aGUgZGVzaWduYXRlZCBjb250YWluZXIKLSAqICAgICAgICBBbmR5IENsZW1lbnQgKEdv
UGl2b3RhbCwgSW5jKSBhY2xlbWVudEBnb3Bpdm90YWwuY29tIC0gQ29udHJpYnV0aW9ucyBmb3IK
KyAqICAgICBBbmR5IENsZW1lbnQgKEdvUGl2b3RhbCwgSW5jKSBhY2xlbWVudEBnb3Bpdm90YWwu
Y29tIC0gQ29udHJpYnV0aW9ucyBmb3IKICAqICAgICAgICAgICAgICAgICAgICAgICAgICBCdWcg
MzgzNjI0IC0gWzEuOF1bY29tcGlsZXJdIFJldml2ZSBjb2RlIGdlbmVyYXRpb24gc3VwcG9ydCBm
b3IgdHlwZSBhbm5vdGF0aW9ucyAoZnJvbSBPbGl2aWVyJ3Mgd29yaykKICAqICAgICAgICAgICAg
ICAgICAgICAgICAgICBCdWcgNDA5MjM2IC0gWzEuOF1bY29tcGlsZXJdIFR5cGUgYW5ub3RhdGlv
bnMgb24gaW50ZXJzZWN0aW9uIGNhc3QgdHlwZXMgZHJvcHBlZCBieSBjb2RlIGdlbmVyYXRvcgog
ICogICAgICAgICAgICAgICAgICAgICAgICAgIEJ1ZyA0MDkyNDYgLSBbMS44XVtjb21waWxlcl0g
VHlwZSBhbm5vdGF0aW9ucyBvbiBjYXRjaCBwYXJhbWV0ZXJzIG5vdCBoYW5kbGVkIHByb3Blcmx5
CiAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgQnVnIDQxNTU0MSAtIFsxLjhdW2NvbXBpbGVy
XSBUeXBlIGFubm90YXRpb25zIGluIHRoZSBib2R5IG9mIHN0YXRpYyBpbml0aWFsaXplciBnZXQg
ZHJvcHBlZAogICogICAgICAgICAgICAgICAgICAgICAgICAgIEJ1ZyA0MTUzOTkgLSBbMS44XVtj
b21waWxlcl0gVHlwZSBhbm5vdGF0aW9ucyBvbiBjb25zdHJ1Y3RvciByZXN1bHRzIGRyb3BwZWQg
YnkgdGhlIGNvZGUgZ2VuZXJhdG9yCiAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgQnVnIDQx
NTQ3MCAtIFsxLjhdW2NvbXBpbGVyXSBUeXBlIGFubm90YXRpb25zIG9uIGNsYXNzIGRlY2xhcmF0
aW9uIGdvIHZhbmlzaGluZworICogICAgICAgICAgICAgICAgICAgICAgICAgIEJ1ZyA0MDUxMDQg
LSBbMS44XVtjb21waWxlcl1bY29kZWdlbl0gSW1wbGVtZW50IHN1cHBvcnQgZm9yIHNlcmlhbGl6
ZWFibGUgbGFtYmRhcwogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlcjsKIApAQCAtOTMyLDYgKzkzMywxMCBAQCBwdWJsaWMg
Y2xhc3MgQ2xhc3NGaWxlIGltcGxlbWVudHMgVHlwZUNvbnN0YW50cywgVHlwZUlkcyB7CiAJCQkJ
CQljYXNlIFN5bnRoZXRpY01ldGhvZEJpbmRpbmcuRmFjdG9yeU1ldGhvZDoKIAkJCQkJCQlhZGRT
eW50aGV0aWNGYWN0b3J5TWV0aG9kKHN5bnRoZXRpY01ldGhvZCk7CiAJCQkJCQkJYnJlYWs7CQor
CQkJCQkJY2FzZSBTeW50aGV0aWNNZXRob2RCaW5kaW5nLkRlc2VyaWFsaXplTGFtYmRhOgorCQkJ
CQkJCS8vIFRPRE8gW2FuZHldIGRvIHdlIG5lZWQgdG8gZG8gdGhpcyBhZnRlciB0aGUgbG9vcCB0
byBlbnN1cmUgaXQgaXMgZG9uZSBsYXN0PworCQkJCQkJCWFkZFN5bnRoZXRpY0Rlc2VyaWFsaXpl
TGFtYmRhKHN5bnRoZXRpY01ldGhvZCx0aGlzLnJlZmVyZW5jZUJpbmRpbmcuc3ludGhldGljTWV0
aG9kcygpKTsgCisJCQkJCQkJYnJlYWs7CiAJCQkJCX0KIAkJCQl9CiAJCQkJZW1pdHRlZFN5bnRo
ZXRpY3NDb3VudCA9IGN1cnJlbnRTeW50aGV0aWNzQ291bnQ7CkBAIC0yODQ3LDUyICsyODUyLDEz
MSBAQCBwdWJsaWMgY2xhc3MgQ2xhc3NGaWxlIGltcGxlbWVudHMgVHlwZUNvbnN0YW50cywgVHlw
ZUlkcyB7CiAJCWlmIChtZXRob2RIYW5kbGVzTG9va3VwID09IG51bGwpIHJldHVybiAwOyAvLyBz
a2lwIGJvb3RzdHJhcCBzZWN0aW9uLCBjbGFzcyBwYXRoIHByb2JsZW0gYWxyZWFkeSByZXBvcnRl
ZCwganVzdCBhdm9pZCBOUEUuCiAJCXJlY29yZElubmVyQ2xhc3NlcyhtZXRob2RIYW5kbGVzTG9v
a3VwKTsgLy8gU2hvdWxkIGJlIGRvbmUsIGl0J3Mgd2hhdCBqYXZhYyBkb2VzIGFsc28KIAkJUmVm
ZXJlbmNlQmluZGluZyBqYXZhTGFuZ0ludm9rZUxhbWJkYU1ldGFmYWN0b3J5ID0gdGhpcy5yZWZl
cmVuY2VCaW5kaW5nLnNjb3BlLmdldEphdmFMYW5nSW52b2tlTGFtYmRhTWV0YWZhY3RvcnkoKTsg
Ci0JCWludCBpbmRleEZvck1ldGFGYWN0b3J5ID0gdGhpcy5jb25zdGFudFBvb2wubGl0ZXJhbElu
ZGV4Rm9yTWV0aG9kSGFuZGxlKENsYXNzRmlsZUNvbnN0YW50cy5NZXRob2RIYW5kbGVSZWZLaW5k
SW52b2tlU3RhdGljLCBqYXZhTGFuZ0ludm9rZUxhbWJkYU1ldGFmYWN0b3J5LCAKLQkJCQlDb25z
dGFudFBvb2wuTUVUQUZBQ1RPUlksIENvbnN0YW50UG9vbC5KQVZBX0xBTkdfSU5WT0tFX0xBTUJE
QU1FVEFGQUNUT1JZX01FVEFGQUNUT1JZX1NJR05BVFVSRSwgZmFsc2UpOworCQkKKwkJLy8gRGVw
ZW5kaW5nIG9uIHRoZSBjb21wbGV4aXR5IG9mIHRoZSBleHByZXNzaW9uIGl0IG1heSBiZSBuZWNl
c3NhcnkgdG8gdXNlIHRoZSBhbHRNZXRhZmFjdG9yeSgpIHJhdGhlciB0aGFuIHRoZSBtZXRhZmFj
dG9yeSgpCisJCWludCBpbmRleEZvck1ldGFGYWN0b3J5ID0gMDsKKwkJaW50IGluZGV4Rm9yQWx0
TWV0YUZhY3RvcnkgPSAwOwogCiAJCWludCBudW1iZXJPZkJvb3RzdHJhcHMgPSBmdW5jdGlvbmFs
RXhwcmVzc2lvbkxpc3Quc2l6ZSgpOwogCQlpbnQgbG9jYWxDb250ZW50c09mZnNldCA9IHRoaXMu
Y29udGVudHNPZmZzZXQ7CiAJCS8vIEdlbmVyYXRlIHRoZSBib290IHN0cmFwIGF0dHJpYnV0ZSAt
IHNpbmNlIHdlIGFyZSBvbmx5IG1ha2luZyBsYW1iZGFzIGFuZAogCQkvLyBmdW5jdGlvbmFsIGV4
cHJlc3Npb25zLCB3ZSBrbm93IHRoZSBzaXplIGFoZWFkIG9mIHRpbWUgLSB0aGlzIGxlc3MgZ2Vu
ZXJhbAogCQkvLyB0aGFuIHRoZSBmdWxsIGludm9rZWR5bmFtaWMgc2NvcGUsIGJ1dCBmaW5lIGZv
ciBKYXZhIDgKKwkJCiAJCWludCBleFNpemUgPSAxMCAqIG51bWJlck9mQm9vdHN0cmFwcyArIDg7
CiAJCWlmIChleFNpemUgKyBsb2NhbENvbnRlbnRzT2Zmc2V0ID49IHRoaXMuY29udGVudHMubGVu
Z3RoKSB7CiAJCQlyZXNpemVDb250ZW50cyhleFNpemUpOwogCQl9Ci0JCXRoaXMuY29udGVudHNP
ZmZzZXQgKz0gZXhTaXplOwogCQkKIAkJaW50IGF0dHJpYnV0ZU5hbWVJbmRleCA9CiAJCQl0aGlz
LmNvbnN0YW50UG9vbC5saXRlcmFsSW5kZXgoQXR0cmlidXRlTmFtZXNDb25zdGFudHMuQm9vdHN0
cmFwTWV0aG9kc05hbWUpOwogCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10g
PSAoYnl0ZSkgKGF0dHJpYnV0ZU5hbWVJbmRleCA+PiA4KTsKIAkJdGhpcy5jb250ZW50c1tsb2Nh
bENvbnRlbnRzT2Zmc2V0KytdID0gKGJ5dGUpIGF0dHJpYnV0ZU5hbWVJbmRleDsKLQkJaW50IHZh
bHVlID0gKG51bWJlck9mQm9vdHN0cmFwcyAqIDEwKSArIDI7Ci0JCXRoaXMuY29udGVudHNbbG9j
YWxDb250ZW50c09mZnNldCsrXSA9IChieXRlKSAodmFsdWUgPj4gMjQpOwotCQl0aGlzLmNvbnRl
bnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgKHZhbHVlID4+IDE2KTsKLQkJdGhp
cy5jb250ZW50c1tsb2NhbENvbnRlbnRzT2Zmc2V0KytdID0gKGJ5dGUpICh2YWx1ZSA+PiA4KTsK
LQkJdGhpcy5jb250ZW50c1tsb2NhbENvbnRlbnRzT2Zmc2V0KytdID0gKGJ5dGUpIHZhbHVlOwor
CQkvLyBsZWF2ZSBzcGFjZSBmb3IgYXR0cmlidXRlX2xlbmd0aCBhbmQgcmVtZW1iZXIgd2hlcmUg
dG8gaW5zZXJ0IGl0CisJCWludCBhdHRyaWJ1dGVMZW5ndGhQb3NpdGlvbiA9IGxvY2FsQ29udGVu
dHNPZmZzZXQ7CisJCWxvY2FsQ29udGVudHNPZmZzZXQgKz0gNDsKIAkJdGhpcy5jb250ZW50c1ts
b2NhbENvbnRlbnRzT2Zmc2V0KytdID0gKGJ5dGUpIChudW1iZXJPZkJvb3RzdHJhcHMgPj4gOCk7
CiAJCXRoaXMuY29udGVudHNbbG9jYWxDb250ZW50c09mZnNldCsrXSA9IChieXRlKSBudW1iZXJP
ZkJvb3RzdHJhcHM7CiAJCWZvciAoaW50IGkgPSAwOyBpIDwgbnVtYmVyT2ZCb290c3RyYXBzOyBp
KyspIHsKIAkJCUZ1bmN0aW9uYWxFeHByZXNzaW9uIGZ1bmN0aW9uYWwgPSAoRnVuY3Rpb25hbEV4
cHJlc3Npb24pIGZ1bmN0aW9uYWxFeHByZXNzaW9uTGlzdC5nZXQoaSk7Ci0JCQl0aGlzLmNvbnRl
bnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgKGluZGV4Rm9yTWV0YUZhY3Rvcnkg
Pj4gOCk7Ci0JCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkg
aW5kZXhGb3JNZXRhRmFjdG9yeTsKIAkJCQotCQkJdGhpcy5jb250ZW50c1tsb2NhbENvbnRlbnRz
T2Zmc2V0KytdID0gMDsKLQkJCXRoaXMuY29udGVudHNbbG9jYWxDb250ZW50c09mZnNldCsrXSA9
IChieXRlKSAzOwotCQkJCi0JCQlpbnQgZnVuY3Rpb25hbERlc2NyaXB0b3JJbmRleCA9IHRoaXMu
Y29uc3RhbnRQb29sLmxpdGVyYWxJbmRleEZvck1ldGhvZFR5cGUoZnVuY3Rpb25hbC5kZXNjcmlw
dG9yLm9yaWdpbmFsKCkuc2lnbmF0dXJlKCkpOwotCQkJdGhpcy5jb250ZW50c1tsb2NhbENvbnRl
bnRzT2Zmc2V0KytdID0gKGJ5dGUpIChmdW5jdGlvbmFsRGVzY3JpcHRvckluZGV4ID4+IDgpOwot
CQkJdGhpcy5jb250ZW50c1tsb2NhbENvbnRlbnRzT2Zmc2V0KytdID0gKGJ5dGUpIGZ1bmN0aW9u
YWxEZXNjcmlwdG9ySW5kZXg7Ci0KLQkJCWludCBtZXRob2RIYW5kbGVJbmRleCA9IHRoaXMuY29u
c3RhbnRQb29sLmxpdGVyYWxJbmRleEZvck1ldGhvZEhhbmRsZShmdW5jdGlvbmFsLmJpbmRpbmcu
b3JpZ2luYWwoKSk7IC8vIFNwZWFrIG9mICIgaW1wbGVtZW50YXRpb24iIChlcmFzZWQpIHZlcnNp
b24gaGVyZSwgYWRhcHRhdGlvbnMgZGVzY3JpYmVkIGJlbG93LgotCQkJdGhpcy5jb250ZW50c1ts
b2NhbENvbnRlbnRzT2Zmc2V0KytdID0gKGJ5dGUpIChtZXRob2RIYW5kbGVJbmRleCA+PiA4KTsK
LQkJCXRoaXMuY29udGVudHNbbG9jYWxDb250ZW50c09mZnNldCsrXSA9IChieXRlKSBtZXRob2RI
YW5kbGVJbmRleDsKLQotCQkJY2hhciBbXSBpbnN0YW50aWF0ZWRTaWduYXR1cmUgPSBmdW5jdGlv
bmFsLmRlc2NyaXB0b3Iuc2lnbmF0dXJlKCk7Ci0JCQlpbnQgbWV0aG9kVHlwZUluZGV4ID0gdGhp
cy5jb25zdGFudFBvb2wubGl0ZXJhbEluZGV4Rm9yTWV0aG9kVHlwZShpbnN0YW50aWF0ZWRTaWdu
YXR1cmUpOwotCQkJdGhpcy5jb250ZW50c1tsb2NhbENvbnRlbnRzT2Zmc2V0KytdID0gKGJ5dGUp
IChtZXRob2RUeXBlSW5kZXggPj4gOCk7Ci0JCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVudHNP
ZmZzZXQrK10gPSAoYnl0ZSkgbWV0aG9kVHlwZUluZGV4OworCQkJVHlwZUJpbmRpbmdbXSBtYXJr
ZXJJbnRlcmZhY2VzID0gbnVsbDsKKwkJCWlmIChmdW5jdGlvbmFsIGluc3RhbmNlb2YgTGFtYmRh
RXhwcmVzc2lvbiAmJiAKKwkJCQkgICAoKChtYXJrZXJJbnRlcmZhY2VzPSgoTGFtYmRhRXhwcmVz
c2lvbilmdW5jdGlvbmFsKS5nZXRNYXJrZXJJbnRlcmZhY2VzKCkpICE9IG51bGwpIHx8CisJCQkJ
ICAgCSgoTGFtYmRhRXhwcmVzc2lvbilmdW5jdGlvbmFsKS5pc1NlcmlhbGl6YWJsZSkpIHsKKwkJ
CQkKKwkJCQlMYW1iZGFFeHByZXNzaW9uIGxhbWJkYUV4ID0gKExhbWJkYUV4cHJlc3Npb24pZnVu
Y3Rpb25hbDsKKwkJCQkvLyBtYXkgbmVlZCBldmVuIG1vcmUgc3BhY2UKKwkJCQlpbnQgZXh0cmFT
cGFjZSA9IDI7IC8vIGF0IGxlYXN0IDIgbW9yZSB0aGFuIHdoZW4gdGhlIG5vcm1hbCBtZXRhZmFj
dG9yeSBpcyB1c2VkLCBmb3IgdGhlIGJpdGZsYWdzIGVudHJ5CisJCQkJaWYgKG1hcmtlckludGVy
ZmFjZXMgIT0gbnVsbCkgeworCQkJCQkvLyAyIGZvciB0aGUgbWFya2VyIGludGVyZmFjZSBsaXN0
IHNpemUgdGhlbiAyIHBlciBtYXJrZXIgaW50ZXJmYWNlIGluZGV4CisJCQkJCWV4dHJhU3BhY2Ug
Kz0gKDIgKyAyICogbWFya2VySW50ZXJmYWNlcy5sZW5ndGgpOworCQkJCX0KKwkJCQlpZiAoZXh0
cmFTcGFjZSArIGxvY2FsQ29udGVudHNPZmZzZXQgPj0gdGhpcy5jb250ZW50cy5sZW5ndGgpIHsK
KwkJCQkJcmVzaXplQ29udGVudHMoZXh0cmFTcGFjZSk7CisJCQkJfSAKKwkJCQkKKwkJCQlpZiAo
aW5kZXhGb3JBbHRNZXRhRmFjdG9yeSA9PSAwKSB7CisJCQkJCWluZGV4Rm9yQWx0TWV0YUZhY3Rv
cnkgPSAKKwkJCQkJCXRoaXMuY29uc3RhbnRQb29sLmxpdGVyYWxJbmRleEZvck1ldGhvZEhhbmRs
ZShDbGFzc0ZpbGVDb25zdGFudHMuTWV0aG9kSGFuZGxlUmVmS2luZEludm9rZVN0YXRpYywgamF2
YUxhbmdJbnZva2VMYW1iZGFNZXRhZmFjdG9yeSwgCisJCQkJCQlDb25zdGFudFBvb2wuQUxUTUVU
QUZBQ1RPUlksIENvbnN0YW50UG9vbC5KQVZBX0xBTkdfSU5WT0tFX0xBTUJEQU1FVEFGQUNUT1JZ
X0FMVE1FVEFGQUNUT1JZX1NJR05BVFVSRSwgZmFsc2UpOworCQkJCX0KKwkJCQl0aGlzLmNvbnRl
bnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgKGluZGV4Rm9yQWx0TWV0YUZhY3Rv
cnkgPj4gOCk7CisJCQkJdGhpcy5jb250ZW50c1tsb2NhbENvbnRlbnRzT2Zmc2V0KytdID0gKGJ5
dGUpIGluZGV4Rm9yQWx0TWV0YUZhY3Rvcnk7CisJCQkJCisJCQkJLy8gdTIgbnVtX2Jvb3RzdHJh
cF9hcmd1bWVudHMKKwkJCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10gPSAw
OworCQkJCXRoaXMuY29udGVudHNbbG9jYWxDb250ZW50c09mZnNldCsrXSA9IChieXRlKSAoNCso
bWFya2VySW50ZXJmYWNlcz09bnVsbD8wOjErbWFya2VySW50ZXJmYWNlcy5sZW5ndGgpKTsKKwkJ
CQkKKwkJCQlpbnQgZnVuY3Rpb25hbERlc2NyaXB0b3JJbmRleCA9IHRoaXMuY29uc3RhbnRQb29s
LmxpdGVyYWxJbmRleEZvck1ldGhvZFR5cGUoZnVuY3Rpb25hbC5kZXNjcmlwdG9yLm9yaWdpbmFs
KCkuc2lnbmF0dXJlKCkpOworCQkJCXRoaXMuY29udGVudHNbbG9jYWxDb250ZW50c09mZnNldCsr
XSA9IChieXRlKSAoZnVuY3Rpb25hbERlc2NyaXB0b3JJbmRleCA+PiA4KTsKKwkJCQl0aGlzLmNv
bnRlbnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgZnVuY3Rpb25hbERlc2NyaXB0
b3JJbmRleDsKKwkKKwkJCQlpbnQgbWV0aG9kSGFuZGxlSW5kZXggPSB0aGlzLmNvbnN0YW50UG9v
bC5saXRlcmFsSW5kZXhGb3JNZXRob2RIYW5kbGUoZnVuY3Rpb25hbC5iaW5kaW5nLm9yaWdpbmFs
KCkpOyAvLyBTcGVhayBvZiAiIGltcGxlbWVudGF0aW9uIiAoZXJhc2VkKSB2ZXJzaW9uIGhlcmUs
IGFkYXB0YXRpb25zIGRlc2NyaWJlZCBiZWxvdy4KKwkJCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29u
dGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgKG1ldGhvZEhhbmRsZUluZGV4ID4+IDgpOworCQkJCXRo
aXMuY29udGVudHNbbG9jYWxDb250ZW50c09mZnNldCsrXSA9IChieXRlKSBtZXRob2RIYW5kbGVJ
bmRleDsKKwkKKwkJCQljaGFyIFtdIGluc3RhbnRpYXRlZFNpZ25hdHVyZSA9IGZ1bmN0aW9uYWwu
ZGVzY3JpcHRvci5zaWduYXR1cmUoKTsKKwkJCQlpbnQgbWV0aG9kVHlwZUluZGV4ID0gdGhpcy5j
b25zdGFudFBvb2wubGl0ZXJhbEluZGV4Rm9yTWV0aG9kVHlwZShpbnN0YW50aWF0ZWRTaWduYXR1
cmUpOworCQkJCXRoaXMuY29udGVudHNbbG9jYWxDb250ZW50c09mZnNldCsrXSA9IChieXRlKSAo
bWV0aG9kVHlwZUluZGV4ID4+IDgpOworCQkJCXRoaXMuY29udGVudHNbbG9jYWxDb250ZW50c09m
ZnNldCsrXSA9IChieXRlKSBtZXRob2RUeXBlSW5kZXg7CisKKwkJCQkvLyBEb2VzIHRoaXMgYmxv
Y2sgaGF2ZSB0byBkZWFsIHdpdGggRkxBR19CUklER0U/IFdoZW4gaXMgaXQgbmVlZGVkPworCQkJ
CWludCBiaXRmbGFncyA9IDA7CisJCQkJaWYgKGxhbWJkYUV4LmlzU2VyaWFsaXphYmxlKSB7CisJ
CQkJCWJpdGZsYWdzIHw9IENsYXNzRmlsZUNvbnN0YW50cy5GTEFHX1NFUklBTElaQUJMRTsKKwkJ
CQl9CisJCQkJaWYgKG1hcmtlckludGVyZmFjZXMhPW51bGwpIHsKKwkJCQkJYml0ZmxhZ3MgfD0g
Q2xhc3NGaWxlQ29uc3RhbnRzLkZMQUdfTUFSS0VSUzsKKwkJCQl9CisJCQkJaW50IGluZGV4Rm9y
Qml0ZmxhZ3MgPSB0aGlzLmNvbnN0YW50UG9vbC5saXRlcmFsSW5kZXgoYml0ZmxhZ3MpOworCQkJ
CQorCQkJCXRoaXMuY29udGVudHNbbG9jYWxDb250ZW50c09mZnNldCsrXSA9IChieXRlKShpbmRl
eEZvckJpdGZsYWdzPj44KTsKKwkJCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVudHNPZmZzZXQr
K10gPSAoYnl0ZSkoaW5kZXhGb3JCaXRmbGFncyk7CisJCQkJCisJCQkJaWYgKG1hcmtlckludGVy
ZmFjZXMgIT0gbnVsbCkgeworCQkJCQlpbnQgbWFya2VySW50ZXJmYWNlQ291bnRJbmRleCA9ICB0
aGlzLmNvbnN0YW50UG9vbC5saXRlcmFsSW5kZXgobWFya2VySW50ZXJmYWNlcy5sZW5ndGgpOwor
CQkJCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkobWFya2Vy
SW50ZXJmYWNlQ291bnRJbmRleD4+OCk7CisJCQkJCXRoaXMuY29udGVudHNbbG9jYWxDb250ZW50
c09mZnNldCsrXSA9IChieXRlKShtYXJrZXJJbnRlcmZhY2VDb3VudEluZGV4KTsKKwkJCQkJZm9y
IChpbnQgbSA9IDAsIG1heG0gPSBtYXJrZXJJbnRlcmZhY2VzLmxlbmd0aDsgbSA8IG1heG07IG0r
KykgeworCQkJCQkJaW50IGNsYXNzVHlwZUluZGV4ID0gdGhpcy5jb25zdGFudFBvb2wubGl0ZXJh
bEluZGV4Rm9yVHlwZShtYXJrZXJJbnRlcmZhY2VzW21dKTsKKwkJCQkJCXRoaXMuY29udGVudHNb
bG9jYWxDb250ZW50c09mZnNldCsrXSA9IChieXRlKShjbGFzc1R5cGVJbmRleD4+OCk7CisJCQkJ
CQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkoY2xhc3NUeXBl
SW5kZXgpOworCQkJCQl9CQkJCQkKKwkJCQl9CisJCQl9IGVsc2UgeworCQkJCWlmIChpbmRleEZv
ck1ldGFGYWN0b3J5ID09IDApIHsKKwkJCQkJaW5kZXhGb3JNZXRhRmFjdG9yeSA9IHRoaXMuY29u
c3RhbnRQb29sLmxpdGVyYWxJbmRleEZvck1ldGhvZEhhbmRsZShDbGFzc0ZpbGVDb25zdGFudHMu
TWV0aG9kSGFuZGxlUmVmS2luZEludm9rZVN0YXRpYywgamF2YUxhbmdJbnZva2VMYW1iZGFNZXRh
ZmFjdG9yeSwgCisJCQkJCQkJQ29uc3RhbnRQb29sLk1FVEFGQUNUT1JZLCBDb25zdGFudFBvb2wu
SkFWQV9MQU5HX0lOVk9LRV9MQU1CREFNRVRBRkFDVE9SWV9NRVRBRkFDVE9SWV9TSUdOQVRVUkUs
IGZhbHNlKTsKKwkJCQl9CisJCQkJdGhpcy5jb250ZW50c1tsb2NhbENvbnRlbnRzT2Zmc2V0Kytd
ID0gKGJ5dGUpIChpbmRleEZvck1ldGFGYWN0b3J5ID4+IDgpOworCQkJCXRoaXMuY29udGVudHNb
bG9jYWxDb250ZW50c09mZnNldCsrXSA9IChieXRlKSBpbmRleEZvck1ldGFGYWN0b3J5OworCQkJ
CQorCQkJCS8vIHUyIG51bV9ib290c3RyYXBfYXJndW1lbnRzCisJCQkJdGhpcy5jb250ZW50c1ts
b2NhbENvbnRlbnRzT2Zmc2V0KytdID0gMDsKKwkJCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVu
dHNPZmZzZXQrK10gPSAoYnl0ZSkgMzsKKwkJCQkKKwkJCQlpbnQgZnVuY3Rpb25hbERlc2NyaXB0
b3JJbmRleCA9IHRoaXMuY29uc3RhbnRQb29sLmxpdGVyYWxJbmRleEZvck1ldGhvZFR5cGUoZnVu
Y3Rpb25hbC5kZXNjcmlwdG9yLm9yaWdpbmFsKCkuc2lnbmF0dXJlKCkpOworCQkJCXRoaXMuY29u
dGVudHNbbG9jYWxDb250ZW50c09mZnNldCsrXSA9IChieXRlKSAoZnVuY3Rpb25hbERlc2NyaXB0
b3JJbmRleCA+PiA4KTsKKwkJCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10g
PSAoYnl0ZSkgZnVuY3Rpb25hbERlc2NyaXB0b3JJbmRleDsKKwkKKwkJCQlpbnQgbWV0aG9kSGFu
ZGxlSW5kZXggPSB0aGlzLmNvbnN0YW50UG9vbC5saXRlcmFsSW5kZXhGb3JNZXRob2RIYW5kbGUo
ZnVuY3Rpb25hbC5iaW5kaW5nLm9yaWdpbmFsKCkpOyAvLyBTcGVhayBvZiAiIGltcGxlbWVudGF0
aW9uIiAoZXJhc2VkKSB2ZXJzaW9uIGhlcmUsIGFkYXB0YXRpb25zIGRlc2NyaWJlZCBiZWxvdy4K
KwkJCQl0aGlzLmNvbnRlbnRzW2xvY2FsQ29udGVudHNPZmZzZXQrK10gPSAoYnl0ZSkgKG1ldGhv
ZEhhbmRsZUluZGV4ID4+IDgpOworCQkJCXRoaXMuY29udGVudHNbbG9jYWxDb250ZW50c09mZnNl
dCsrXSA9IChieXRlKSBtZXRob2RIYW5kbGVJbmRleDsKKwkKKwkJCQljaGFyIFtdIGluc3RhbnRp
YXRlZFNpZ25hdHVyZSA9IGZ1bmN0aW9uYWwuZGVzY3JpcHRvci5zaWduYXR1cmUoKTsKKwkJCQlp
bnQgbWV0aG9kVHlwZUluZGV4ID0gdGhpcy5jb25zdGFudFBvb2wubGl0ZXJhbEluZGV4Rm9yTWV0
aG9kVHlwZShpbnN0YW50aWF0ZWRTaWduYXR1cmUpOworCQkJCXRoaXMuY29udGVudHNbbG9jYWxD
b250ZW50c09mZnNldCsrXSA9IChieXRlKSAobWV0aG9kVHlwZUluZGV4ID4+IDgpOworCQkJCXRo
aXMuY29udGVudHNbbG9jYWxDb250ZW50c09mZnNldCsrXSA9IChieXRlKSBtZXRob2RUeXBlSW5k
ZXg7CQkJCQorCQkJfQogCQl9CisKKwkJaW50IGF0dHJpYnV0ZUxlbmd0aCA9IGxvY2FsQ29udGVu
dHNPZmZzZXQgLSBhdHRyaWJ1dGVMZW5ndGhQb3NpdGlvbiAtIDQ7CisJCXRoaXMuY29udGVudHNb
YXR0cmlidXRlTGVuZ3RoUG9zaXRpb24rK10gPSAoYnl0ZSkgKGF0dHJpYnV0ZUxlbmd0aCA+PiAy
NCk7CisJCXRoaXMuY29udGVudHNbYXR0cmlidXRlTGVuZ3RoUG9zaXRpb24rK10gPSAoYnl0ZSkg
KGF0dHJpYnV0ZUxlbmd0aCA+PiAxNik7CisJCXRoaXMuY29udGVudHNbYXR0cmlidXRlTGVuZ3Ro
UG9zaXRpb24rK10gPSAoYnl0ZSkgKGF0dHJpYnV0ZUxlbmd0aCA+PiA4KTsKKwkJdGhpcy5jb250
ZW50c1thdHRyaWJ1dGVMZW5ndGhQb3NpdGlvbisrXSA9IChieXRlKSBhdHRyaWJ1dGVMZW5ndGg7
CisJCXRoaXMuY29udGVudHNPZmZzZXQgPSBsb2NhbENvbnRlbnRzT2Zmc2V0OwogCQlyZXR1cm4g
MTsKIAl9CiAJcHJpdmF0ZSBpbnQgZ2VuZXJhdGVMaW5lTnVtYmVyQXR0cmlidXRlKCkgewpAQCAt
MzI5Myw2ICszMzc3LDMzIEBAIHB1YmxpYyBjbGFzcyBDbGFzc0ZpbGUgaW1wbGVtZW50cyBUeXBl
Q29uc3RhbnRzLCBUeXBlSWRzIHsKIAkJdGhpcy5jb250ZW50c1t0aGlzLmNvbnRlbnRzT2Zmc2V0
KytdID0gKGJ5dGUpIChkZXNjcmlwdG9ySW5kZXggPj4gOCk7CiAJCXRoaXMuY29udGVudHNbdGhp
cy5jb250ZW50c09mZnNldCsrXSA9IChieXRlKSBkZXNjcmlwdG9ySW5kZXg7CiAJfQorCQorCXB1
YmxpYyB2b2lkIGFkZFN5bnRoZXRpY0Rlc2VyaWFsaXplTGFtYmRhKFN5bnRoZXRpY01ldGhvZEJp
bmRpbmcgbWV0aG9kQmluZGluZywgU3ludGhldGljTWV0aG9kQmluZGluZ1tdIHN5bnRoZXRpY01l
dGhvZEJpbmRpbmdzICkgeworCQlnZW5lcmF0ZU1ldGhvZEluZm9IZWFkZXIobWV0aG9kQmluZGlu
Zyk7CisJCWludCBtZXRob2RBdHRyaWJ1dGVPZmZzZXQgPSB0aGlzLmNvbnRlbnRzT2Zmc2V0Owor
CQkvLyB0aGlzIHdpbGwgYWRkIGV4Y2VwdGlvbiBhdHRyaWJ1dGUsIHN5bnRoZXRpYyBhdHRyaWJ1
dGUsIGRlcHJlY2F0ZWQgYXR0cmlidXRlLC4uLgorCQlpbnQgYXR0cmlidXRlTnVtYmVyID0gZ2Vu
ZXJhdGVNZXRob2RJbmZvQXR0cmlidXRlcyhtZXRob2RCaW5kaW5nKTsKKwkJLy8gQ29kZSBhdHRy
aWJ1dGUKKwkJaW50IGNvZGVBdHRyaWJ1dGVPZmZzZXQgPSB0aGlzLmNvbnRlbnRzT2Zmc2V0Owor
CQlhdHRyaWJ1dGVOdW1iZXIrKzsgLy8gYWRkIGNvZGUgYXR0cmlidXRlCisJCWdlbmVyYXRlQ29k
ZUF0dHJpYnV0ZUhlYWRlcigpOworCQl0aGlzLmNvZGVTdHJlYW0uaW5pdCh0aGlzKTsKKwkJdGhp
cy5jb2RlU3RyZWFtLmdlbmVyYXRlU3ludGhldGljQm9keUZvckRlc2VyaWFsaXplTGFtYmRhKG1l
dGhvZEJpbmRpbmcsIHN5bnRoZXRpY01ldGhvZEJpbmRpbmdzKTsKKwkJY29tcGxldGVDb2RlQXR0
cmlidXRlRm9yU3ludGhldGljTWV0aG9kKAorCQkJbWV0aG9kQmluZGluZywKKwkJCWNvZGVBdHRy
aWJ1dGVPZmZzZXQsCisJCQkoKFNvdXJjZVR5cGVCaW5kaW5nKSBtZXRob2RCaW5kaW5nLmRlY2xh
cmluZ0NsYXNzKQorCQkJCS5zY29wZQorCQkJCS5yZWZlcmVuY2VDb21waWxhdGlvblVuaXQoKQor
CQkJCS5jb21waWxhdGlvblJlc3VsdAorCQkJCS5nZXRMaW5lU2VwYXJhdG9yUG9zaXRpb25zKCkp
OworCQkvLyB1cGRhdGUgdGhlIG51bWJlciBvZiBhdHRyaWJ1dGVzCisJCWlmICgodGhpcy5wcm9k
dWNlQXR0cmlidXRlcyAmIENsYXNzRmlsZUNvbnN0YW50cy5BVFRSX01FVEhPRF9QQVJBTUVURVJT
KSAhPSAwKSB7CisJCQlhdHRyaWJ1dGVOdW1iZXIgKz0gZ2VuZXJhdGVNZXRob2RQYXJhbWV0ZXJz
KG1ldGhvZEJpbmRpbmcpOworCQl9CisJCXRoaXMuY29udGVudHNbbWV0aG9kQXR0cmlidXRlT2Zm
c2V0KytdID0gKGJ5dGUpIChhdHRyaWJ1dGVOdW1iZXIgPj4gOCk7CisJCXRoaXMuY29udGVudHNb
bWV0aG9kQXR0cmlidXRlT2Zmc2V0XSA9IChieXRlKSBhdHRyaWJ1dGVOdW1iZXI7CisJfQkKIAog
CS8qKgogCSAqIElOVEVSTkFMIFVTRS1PTkxZCkBAIC00OTE3LDYgKzUwMjgsMTIgQEAgcHVibGlj
IGNsYXNzIENsYXNzRmlsZSBpbXBsZW1lbnRzIFR5cGVDb25zdGFudHMsIFR5cGVJZHMgewogCQkJ
CWlmICgoYXJndW1lbnRzID0gbWV0aG9kQmluZGluZy5wYXJhbWV0ZXJzKSAhPSBudWxsKSB7CiAJ
CQkJCWZvciAoaW50IGkgPSAwLCBtYXggPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbWF4OyBpKysp
IHsKIAkJCQkJCWZpbmFsIFR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gYXJndW1lbnRzW2ldOwor
CQkJCQkJLy8gRm9yIHRoZSBicmFuY2hpbmcgY29tcGxleGl0aWVzIGluIHRoZSBnZW5lcmF0ZWQg
JGRlc2VyaWFsaXplTGFtYmRhJCB3ZSBuZWVkIHRoZSBsb2NhbCB2YXJpYWJsZQorCQkJCQkJTG9j
YWxWYXJpYWJsZUJpbmRpbmcgbG9jYWxWYXJpYWJsZUJpbmRpbmcgPSBuZXcgTG9jYWxWYXJpYWJs
ZUJpbmRpbmcoKCIgc3ludGhldGljIitpKS50b0NoYXJBcnJheSgpLCB0eXBlQmluZGluZywgMCwg
dHJ1ZSk7IC8vJE5PTi1OTFMtMSQKKwkJCQkJCWxvY2FsVmFyaWFibGVCaW5kaW5nLnJlc29sdmVk
UG9zaXRpb24gPSBpOworCQkJCQkJdGhpcy5jb2RlU3RyZWFtLnJlY29yZChsb2NhbFZhcmlhYmxl
QmluZGluZyk7CisJCQkJCQlsb2NhbFZhcmlhYmxlQmluZGluZy5yZWNvcmRJbml0aWFsaXphdGlv
blN0YXJ0UEMoMCk7CisJCQkJCQlsb2NhbFZhcmlhYmxlQmluZGluZy5yZWNvcmRJbml0aWFsaXph
dGlvbkVuZFBDKGNvZGVMZW5ndGgpOwogCQkJCQkJZnJhbWUucHV0TG9jYWwocmVzb2x2ZWRQb3Np
dGlvbiwKIAkJCQkJCQkJbmV3IFZlcmlmaWNhdGlvblR5cGVJbmZvKHR5cGVCaW5kaW5nKSk7CiAJ
CQkJCQlzd2l0Y2ggKHR5cGVCaW5kaW5nLmlkKSB7CkBAIC00OTk5LDYgKzUxMTYsOCBAQCBwdWJs
aWMgY2xhc3MgQ2xhc3NGaWxlIGltcGxlbWVudHMgVHlwZUNvbnN0YW50cywgVHlwZUlkcyB7CiAJ
CQl0aGlzLmJvb3RzdHJhcE1ldGhvZHMgPSBuZXcgQXJyYXlMaXN0KCk7CiAJCX0KIAkJdGhpcy5i
b290c3RyYXBNZXRob2RzLmFkZChleHByZXNzaW9uKTsKKwkJLy8gUmVjb3JkIHdoaWNoIGJvb3Rz
dHJhcCBtZXRob2Qgd2FzIGFzc2lnbmVkIHRvIHRoZSBleHByZXNzaW9uCisJCWV4cHJlc3Npb24u
Ym9vdHN0cmFwTWV0aG9kTnVtYmVyID0gdGhpcy5ib290c3RyYXBNZXRob2RzLnNpemUoKSAtIDE7
CiAJCXJldHVybiB0aGlzLmJvb3RzdHJhcE1ldGhvZHMuc2l6ZSgpIC0gMTsKIAl9CiAKZGlmZiAt
LWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb21waWxlci9hc3QvRnVuY3Rpb25hbEV4cHJlc3Npb24uamF2YSBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3Qv
RnVuY3Rpb25hbEV4cHJlc3Npb24uamF2YQppbmRleCA2Y2MwOTJlLi41NzgyMjU4IDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvYXN0L0Z1bmN0aW9uYWxFeHByZXNzaW9uLmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Fz
dC9GdW5jdGlvbmFsRXhwcmVzc2lvbi5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90
aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
ICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWlu
ZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhl
IEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBk
aXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTE3LDYgKzE3LDggQEAKICAqICAg
ICBTdGVwaGFuIEhlcnJtYW5uIC0gQ29udHJpYnV0aW9uIGZvcgogICoJCQkJCQkJQnVnIDQwMDg3
NCAtIFsxLjhdW2NvbXBpbGVyXSBJbmZlcmVuY2UgaW5mcmFzdHJ1Y3R1cmUgc2hvdWxkIGV2b2x2
ZSB0byBtZWV0IEpMUzggMTgueCAoUGFydCBHIG9mIEpTUjMzNSBzcGVjKQogICoJCQkJCQkJQnVn
IDQyMzUwNCAtIFsxLjhdIEltcGxlbWVudCAiMTguNS4zIEZ1bmN0aW9uYWwgSW50ZXJmYWNlIFBh
cmFtZXRlcml6YXRpb24gSW5mZXJlbmNlIgorICogICAgIEFuZHkgQ2xlbWVudCAoR29QaXZvdGFs
LCBJbmMpIGFjbGVtZW50QGdvcGl2b3RhbC5jb20gLSBDb250cmlidXRpb25zIGZvcgorICogICAg
ICAgICAgICAgICAgICAgICAgICAgIEJ1ZyA0MDUxMDQgLSBbMS44XVtjb21waWxlcl1bY29kZWdl
bl0gSW1wbGVtZW50IHN1cHBvcnQgZm9yIHNlcmlhbGl6ZWFibGUgbGFtYmRhcwogICoqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxl
ci5hc3Q7CiAKQEAgLTQ5LDYgKzUxLDcgQEAgcHVibGljIGFic3RyYWN0IGNsYXNzIEZ1bmN0aW9u
YWxFeHByZXNzaW9uIGV4dGVuZHMgRXhwcmVzc2lvbiB7CiAJcHJvdGVjdGVkIENvbXBpbGF0aW9u
UmVzdWx0IGNvbXBpbGF0aW9uUmVzdWx0OwogCXB1YmxpYyBCbG9ja1Njb3BlIGVuY2xvc2luZ1Nj
b3BlOwogCXByb3RlY3RlZCBib29sZWFuIGVsbGlwc2lzQXJndW1lbnQ7CisJcHVibGljIGludCBi
b290c3RyYXBNZXRob2ROdW1iZXIgPSAtMTsKIAlwcm90ZWN0ZWQgc3RhdGljIElFcnJvckhhbmRs
aW5nUG9saWN5IHNpbGVudEVycm9ySGFuZGxpbmdQb2xpY3kgPSBEZWZhdWx0RXJyb3JIYW5kbGlu
Z1BvbGljaWVzLmlnbm9yZUFsbFByb2JsZW1zKCk7CiAKIAlwdWJsaWMgRnVuY3Rpb25hbEV4cHJl
c3Npb24oQ29tcGlsYXRpb25SZXN1bHQgY29tcGlsYXRpb25SZXN1bHQpIHsKZGlmZiAtLWdpdCBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9hc3QvTGFtYmRhRXhwcmVzc2lvbi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUv
Y29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9MYW1iZGFFeHBy
ZXNzaW9uLmphdmEKaW5kZXggMDQ3ZTJiMi4uMzAwYTljYiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Fz
dC9MYW1iZGFFeHByZXNzaW9uLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9MYW1iZGFFeHByZXNzaW9u
LmphdmEKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJp
Z2h0IChjKSAyMDAwLCAyMDE0IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJp
Z2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFs
cwogICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQ
dWJsaWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlv
biwgYW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtMjEsOSArMjEsMTQgQEAKICAqCQkJCQkJCUJ1ZyAz
OTIyMzggLSBbMS44XVtjb21waWxlcl1bbnVsbF0gRGV0ZWN0IHNlbWFudGljYWxseSBpbnZhbGlk
IG51bGwgdHlwZSBhbm5vdGF0aW9ucwogICoJCQkJCQkJQnVnIDQwMDg3NCAtIFsxLjhdW2NvbXBp
bGVyXSBJbmZlcmVuY2UgaW5mcmFzdHJ1Y3R1cmUgc2hvdWxkIGV2b2x2ZSB0byBtZWV0IEpMUzgg
MTgueCAoUGFydCBHIG9mIEpTUjMzNSBzcGVjKQogICoJCQkJCQkJQnVnIDQyMzUwNCAtIFsxLjhd
IEltcGxlbWVudCAiMTguNS4zIEZ1bmN0aW9uYWwgSW50ZXJmYWNlIFBhcmFtZXRlcml6YXRpb24g
SW5mZXJlbmNlIgorICogICAgIEFuZHkgQ2xlbWVudCAoR29QaXZvdGFsLCBJbmMpIGFjbGVtZW50
QGdvcGl2b3RhbC5jb20gLSBDb250cmlidXRpb25zIGZvcgorICogICAgICAgICAgICAgICAgICAg
ICAgICAgIEJ1ZyA0MDUxMDQgLSBbMS44XVtjb21waWxlcl1bY29kZWdlbl0gSW1wbGVtZW50IHN1
cHBvcnQgZm9yIHNlcmlhbGl6ZWFibGUgbGFtYmRhcwogICoqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiov
CiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3Q7CiAKK2ltcG9y
dCBqYXZhLnV0aWwuTGlua2VkSGFzaFNldDsKK2ltcG9ydCBqYXZhLnV0aWwuU2V0OworCiBpbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIuQ2F0ZWdvcml6ZWRQcm9ibGVtOwogaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLkNoYXJPcGVyYXRpb247CiBpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIuSVByb2JsZW07CkBAIC00Niw2ICs1MSw3IEBA
IGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkJsb2NrU2Nv
cGU7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5DbGFz
c1Njb3BlOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAu
RXh0cmFDb21waWxlck1vZGlmaWVyczsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIubG9va3VwLkluZmVyZW5jZUNvbnRleHQxODsKK2ltcG9ydCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkludGVyc2VjdGlvbkNhc3RUeXBlQmluZGluZzsK
IGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLkxvY2FsVmFy
aWFibGVCaW5kaW5nOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5s
b29rdXAuTG9va3VwRW52aXJvbm1lbnQ7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmxvb2t1cC5NZXRob2RCaW5kaW5nOwpAQCAtODMsOSArODksMTAgQEAgcHVibGlj
IGNsYXNzIExhbWJkYUV4cHJlc3Npb24gZXh0ZW5kcyBGdW5jdGlvbmFsRXhwcmVzc2lvbiBpbXBs
ZW1lbnRzIFJlZmVyZW5jZUMKIAlib29sZWFuIHZhbHVlQ29tcGF0aWJsZSA9IGZhbHNlOwogCXBy
aXZhdGUgYm9vbGVhbiBzaGFwZUFuYWx5c2lzQ29tcGxldGUgPSBmYWxzZTsKIAlib29sZWFuIHJl
dHVybnNWYWx1ZTsKKwlwdWJsaWMgYm9vbGVhbiBpc1NlcmlhbGl6YWJsZTsKIAlib29sZWFuIHJl
dHVybnNWb2lkOwogCXByaXZhdGUgTGFtYmRhRXhwcmVzc2lvbiBvcmlnaW5hbCA9IHRoaXM7Ci0J
cHJpdmF0ZSBTeW50aGV0aWNBcmd1bWVudEJpbmRpbmdbXSBvdXRlckxvY2FsVmFyaWFibGVzID0g
Tk9fU1lOVEhFVElDX0FSR1VNRU5UUzsKKwlwdWJsaWMgU3ludGhldGljQXJndW1lbnRCaW5kaW5n
W10gb3V0ZXJMb2NhbFZhcmlhYmxlcyA9IE5PX1NZTlRIRVRJQ19BUkdVTUVOVFM7CiAJcHJpdmF0
ZSBpbnQgb3V0ZXJMb2NhbFZhcmlhYmxlc1Nsb3RTaXplID0gMDsKIAlwdWJsaWMgYm9vbGVhbiBz
aG91bGRDYXB0dXJlSW5zdGFuY2UgPSBmYWxzZTsKIAlwcml2YXRlIGJvb2xlYW4gYXNzaXN0Tm9k
ZSA9IGZhbHNlOwpAQCAtMTU5LDcgKzE2NiwxMSBAQCBwdWJsaWMgY2xhc3MgTGFtYmRhRXhwcmVz
c2lvbiBleHRlbmRzIEZ1bmN0aW9uYWxFeHByZXNzaW9uIGltcGxlbWVudHMgUmVmZXJlbmNlQwog
CQkJY29kZVN0cmVhbS5nZW5lcmF0ZU91dGVyQWNjZXNzKHBhdGgsIHRoaXMsIGNhcHR1cmVkT3V0
ZXJMb2NhbCwgY3VycmVudFNjb3BlKTsKIAkJfQogCQlzaWduYXR1cmUuYXBwZW5kKCcpJyk7Ci0J
CXNpZ25hdHVyZS5hcHBlbmQodGhpcy5leHBlY3RlZFR5cGUuc2lnbmF0dXJlKCkpOworCQlpZiAo
dGhpcy5leHBlY3RlZFR5cGUgaW5zdGFuY2VvZiBJbnRlcnNlY3Rpb25DYXN0VHlwZUJpbmRpbmcp
IHsKKwkJCXNpZ25hdHVyZS5hcHBlbmQoKChJbnRlcnNlY3Rpb25DYXN0VHlwZUJpbmRpbmcpdGhp
cy5leHBlY3RlZFR5cGUpLmdldFNBTVR5cGUoY3VycmVudFNjb3BlKS5zaWduYXR1cmUoKSk7CisJ
CX0gZWxzZSB7CisJCQlzaWduYXR1cmUuYXBwZW5kKHRoaXMuZXhwZWN0ZWRUeXBlLnNpZ25hdHVy
ZSgpKTsKKwkJfQogCQlpbnQgaW52b2tlRHluYW1pY051bWJlciA9IGNvZGVTdHJlYW0uY2xhc3NG
aWxlLnJlY29yZEJvb3RzdHJhcE1ldGhvZCh0aGlzKTsKIAkJY29kZVN0cmVhbS5pbnZva2VEeW5h
bWljKGludm9rZUR5bmFtaWNOdW1iZXIsICh0aGlzLnNob3VsZENhcHR1cmVJbnN0YW5jZSA/IDEg
OiAwKSArIHRoaXMub3V0ZXJMb2NhbFZhcmlhYmxlc1Nsb3RTaXplLCAxLCB0aGlzLmRlc2NyaXB0
b3Iuc2VsZWN0b3IsIHNpZ25hdHVyZS50b1N0cmluZygpLnRvQ2hhckFycmF5KCkpOwogCQlpZiAo
IXZhbHVlUmVxdWlyZWQpCkBAIC0zNjYsNiArMzc3LDE5IEBAIHB1YmxpYyBjbGFzcyBMYW1iZGFF
eHByZXNzaW9uIGV4dGVuZHMgRnVuY3Rpb25hbEV4cHJlc3Npb24gaW1wbGVtZW50cyBSZWZlcmVu
Y2VDCiAJCX0gZWxzZSB7CiAJCQl0aGlzLmJvZHkucmVzb2x2ZSh0aGlzLnNjb3BlKTsKIAkJfQor
CQkvLyBUT0RPIGV4cGVjdGVkVHlwZSBvciByZXNvbHZlZFR5cGUgb3IgZG9lcyBpdCBtYXR0ZXI/
CisJCWlmICh0aGlzLmV4cGVjdGVkVHlwZSBpbnN0YW5jZW9mIEludGVyc2VjdGlvbkNhc3RUeXBl
QmluZGluZykgeworCQkJUmVmZXJlbmNlQmluZGluZ1tdIGludGVyc2VjdGluZ1R5cGVzID0gICgo
SW50ZXJzZWN0aW9uQ2FzdFR5cGVCaW5kaW5nKXRoaXMuZXhwZWN0ZWRUeXBlKS5pbnRlcnNlY3Rp
bmdUeXBlczsKKwkJCWZvciAoaW50IHQgPSAwLCBtYXggPSBpbnRlcnNlY3RpbmdUeXBlcy5sZW5n
dGg7IHQgPCBtYXg7IHQrKykgeworCQkJCWlmIChpbnRlcnNlY3RpbmdUeXBlc1t0XS5maW5kU3Vw
ZXJUeXBlT3JpZ2luYXRpbmdGcm9tKFR5cGVJZHMuVF9KYXZhSW9TZXJpYWxpemFibGUsIGZhbHNl
IC8qU2VyaWFsaXphYmxlIGlzIG5vdCBhIGNsYXNzKi8pICE9IG51bGwpIHsKKwkJCQkJdGhpcy5p
c1NlcmlhbGl6YWJsZSA9IHRydWU7CisJCQkJCWJyZWFrOworCQkJCX0KKwkJCX0KKwkJfSBlbHNl
IGlmICh0aGlzLmV4cGVjdGVkVHlwZSAhPSBudWxsICYmIAorCQkJCSAgIHRoaXMuZXhwZWN0ZWRU
eXBlLmZpbmRTdXBlclR5cGVPcmlnaW5hdGluZ0Zyb20oVHlwZUlkcy5UX0phdmFJb1NlcmlhbGl6
YWJsZSwgZmFsc2UgLypTZXJpYWxpemFibGUgaXMgbm90IGEgY2xhc3MqLykgIT0gbnVsbCkgewor
CQkJdGhpcy5pc1NlcmlhbGl6YWJsZSA9IHRydWU7CisJCX0KIAkJcmV0dXJuIHRoaXMucmVzb2x2
ZWRUeXBlOwogCX0KIApAQCAtMTA5Myw0ICsxMTE3LDI5IEBAIHB1YmxpYyBjbGFzcyBMYW1iZGFF
eHByZXNzaW9uIGV4dGVuZHMgRnVuY3Rpb25hbEV4cHJlc3Npb24gaW1wbGVtZW50cyBSZWZlcmVu
Y2VDCiAJcHVibGljIGludCBkaWFnbm9zdGljc1NvdXJjZUVuZCgpIHsKIAkJcmV0dXJuIHRoaXMu
Ym9keSBpbnN0YW5jZW9mIEJsb2NrID8gdGhpcy5hcnJvd1Bvc2l0aW9uIDogdGhpcy5zb3VyY2VF
bmQ7CiAJfQorCisJcHVibGljIFR5cGVCaW5kaW5nW10gZ2V0TWFya2VySW50ZXJmYWNlcygpIHsK
KwkJaWYgKHRoaXMuZXhwZWN0ZWRUeXBlIGluc3RhbmNlb2YgSW50ZXJzZWN0aW9uQ2FzdFR5cGVC
aW5kaW5nKSB7CisJCQlTZXQgbWFya2VyQmluZGluZ3MgPSBuZXcgTGlua2VkSGFzaFNldCgpOwor
CQkJVHlwZUJpbmRpbmdbXSBpbnRlcnNlY3Rpb25UeXBlcyA9ICgoSW50ZXJzZWN0aW9uQ2FzdFR5
cGVCaW5kaW5nKXRoaXMuZXhwZWN0ZWRUeXBlKS5pbnRlcnNlY3RpbmdUeXBlczsKKwkJCWZvciAo
aW50IGk9MCxtYXg9aW50ZXJzZWN0aW9uVHlwZXMubGVuZ3RoO2k8bWF4O2krKykgeworCQkJCVR5
cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gaW50ZXJzZWN0aW9uVHlwZXNbaV07CisJCQkJTWV0aG9k
QmluZGluZyBtZXRob2RCaW5kaW5nID0gdHlwZUJpbmRpbmcuZ2V0U2luZ2xlQWJzdHJhY3RNZXRo
b2QodGhpcy5zY29wZSwgZmFsc2UpOworCQkJCS8vIFdoeSBkb2Vzbid0IGdldFNpbmdsZUFic3Ry
YWN0TWV0aG9kIGRvIGFzIHRoZSBqYXZhZG9jIHNheXMsIGFuZCByZXR1cm4gbnVsbAorCQkJCS8v
IHdoZW4gaXQgaXMgbm90IGEgU0FNIHR5cGUKKwkJCQlpZiAoIShtZXRob2RCaW5kaW5nIGluc3Rh
bmNlb2YgUHJvYmxlbU1ldGhvZEJpbmRpbmcgJiYgKChQcm9ibGVtTWV0aG9kQmluZGluZyltZXRo
b2RCaW5kaW5nKS5wcm9ibGVtSWQoKT09UHJvYmxlbVJlYXNvbnMuTm9TdWNoU2luZ2xlQWJzdHJh
Y3RNZXRob2QpKSB7CisJCQkJCWNvbnRpbnVlOworCQkJCX0KKwkJCQlpZiAodHlwZUJpbmRpbmcu
aWQgPT0gVHlwZUlkcy5UX0phdmFJb1NlcmlhbGl6YWJsZSkgeworCQkJCQkvLyBTZXJpYWxpemFi
bGUgaXMgY2FwdHVyZWQgYXMgYSBiaXRmbGFnCisJCQkJCWNvbnRpbnVlOworCQkJCX0KKwkJCQlt
YXJrZXJCaW5kaW5ncy5hZGQodHlwZUJpbmRpbmcpOworCQkJfQorCQkJaWYgKG1hcmtlckJpbmRp
bmdzLnNpemUoKT4wKSB7CisJCQkJcmV0dXJuIChUeXBlQmluZGluZ1tdKW1hcmtlckJpbmRpbmdz
LnRvQXJyYXkobmV3IFR5cGVCaW5kaW5nW21hcmtlckJpbmRpbmdzLnNpemUoKV0pOworCQkJfQor
CQl9CisJCXJldHVybiBudWxsOworCX0KIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jbGFzc2ZtdC9D
bGFzc0ZpbGVDb25zdGFudHMuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jbGFzc2ZtdC9DbGFzc0ZpbGVDb25zdGFu
dHMuamF2YQppbmRleCBiOWZhMzk1Li5mNjIzYWQxIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY2xhc3Nm
bXQvQ2xhc3NGaWxlQ29uc3RhbnRzLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NsYXNzZm10L0NsYXNzRmls
ZUNvbnN0YW50cy5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioK
LSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
KyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
ICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWlu
ZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhl
IEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBk
aXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTE0LDYgKzE0LDggQEAKICAqICAg
ICBKZXNwZXIgUyBNb2xsZXIgLSBDb250cmlidXRpb25zIGZvcgogICoJCQkJCQkJQnVnIDQwNTA2
NiAtIFsxLjhdW2NvbXBpbGVyXVtjb2RlZ2VuXSBJbXBsZW1lbnQgY29kZSBnZW5lcmF0aW9uIGlu
ZnJhc3RydWN0dXJlIGZvciBKU1IzMzUgICAgICAgICAgICAgCiAgKgkJCQkJCQlCdWcgNDA2OTgy
IC0gWzEuOF1bY29tcGlsZXJdIEdlbmVyYXRpb24gb2YgTWV0aG9kUGFyYW1ldGVycyBBdHRyaWJ1
dGUgaW4gY2xhc3NmaWxlCisgKiAgICAgQW5keSBDbGVtZW50IChHb1Bpdm90YWwsIEluYykgYWNs
ZW1lbnRAZ29waXZvdGFsLmNvbSAtIENvbnRyaWJ1dGlvbnMgZm9yCisgKiAgICAgICAgICAgICAg
ICAgICAgICAgICAgQnVnIDQwNTEwNCAtIFsxLjhdW2NvbXBpbGVyXVtjb2RlZ2VuXSBJbXBsZW1l
bnQgc3VwcG9ydCBmb3Igc2VyaWFsaXplYWJsZSBsYW1iZGFzCiAgKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNsYXNzZm10
OwogCkBAIC0xNTUsNCArMTU3LDkgQEAgcHVibGljIGludGVyZmFjZSBDbGFzc0ZpbGVDb25zdGFu
dHMgewogCWludCBBVFRSX1NUQUNLX01BUCA9IDB4MTA7IC8vIFN0YWNrIG1hcCBhdHRyaWJ1dGU6
IGNsZGMKIAlpbnQgQVRUUl9UWVBFX0FOTk9UQVRJT04gPSAweDIwOyAvLyB0eXBlIGFubm90YXRp
b24gYXR0cmlidXRlIChqc3IgMzA4KQogCWludCBBVFRSX01FVEhPRF9QQVJBTUVURVJTID0gMHg0
MDsgLy8gbWV0aG9kIHBhcmFtZXRlcnMgYXR0cmlidXRlIChqZXAgMTE4KQorCisJLy8gU2VlIGph
dmEubGFuZy5pbnZva2UuTGFtYmRhTWV0YWZhY3RvcnkgY29uc3RhbnRzIC0gb3B0aW9uIGJpdGZs
YWdzIHdoZW4gY2FsbGluZyBhbHRNZXRhRmFjdG9yeSgpCisJaW50IEZMQUdfU0VSSUFMSVpBQkxF
ID0gMHgwMTsKKwlpbnQgRkxBR19NQVJLRVJTID0gMHgwMjsKKwlpbnQgRkxBR19CUklER0VTID0g
MHgwNDsKIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9jb2RlZ2VuL0NvZGVTdHJlYW0uamF2YSBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21w
aWxlci9jb2RlZ2VuL0NvZGVTdHJlYW0uamF2YQppbmRleCAyZjhmOGI3Li41NjM0OTI1IDEwMDY0
NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvY29kZWdlbi9Db2RlU3RyZWFtLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2NvZGVn
ZW4vQ29kZVN0cmVhbS5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVy
cy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVy
cy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFu
eWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2Yg
dGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhp
cyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTE3LDE0ICsxNywyMiBAQAog
ICoJCQkJCQkJCWJ1ZyA0MjE1NDMgLSBbMS44XVtjb21waWxlcl0gQ29tcGlsZXIgZmFpbHMgdG8g
cmVjb2duaXplIGRlZmF1bHQgbWV0aG9kIGJlaW5nIHR1cm5lZCBpbnRvIGFic3RyYWN0IGJ5IHN1
YnR5dHBlCiAgKiAgICAgSmVzcGVyIFMgTW9sbGVyIC0gQ29udHJpYnV0aW9ucyBmb3IKICAqCQkJ
CQkJCUJ1ZyA0MDUwNjYgLSBbMS44XVtjb21waWxlcl1bY29kZWdlbl0gSW1wbGVtZW50IGNvZGUg
Z2VuZXJhdGlvbiBpbmZyYXN0cnVjdHVyZSBmb3IgSlNSMzM1ICAgICAgICAKLSAqICAgICAgICBB
bmR5IENsZW1lbnQgKEdvUGl2b3RhbCwgSW5jKSBhY2xlbWVudEBnb3Bpdm90YWwuY29tIC0gQ29u
dHJpYnV0aW9ucyBmb3IKKyAqICAgICBBbmR5IENsZW1lbnQgKEdvUGl2b3RhbCwgSW5jKSBhY2xl
bWVudEBnb3Bpdm90YWwuY29tIC0gQ29udHJpYnV0aW9ucyBmb3IKICAqICAgICAgICAgICAgICAg
ICAgICAgICAgICBCdWcgMzgzNjI0IC0gWzEuOF1bY29tcGlsZXJdIFJldml2ZSBjb2RlIGdlbmVy
YXRpb24gc3VwcG9ydCBmb3IgdHlwZSBhbm5vdGF0aW9ucyAoZnJvbSBPbGl2aWVyJ3Mgd29yaykK
ICAqICAgICAgICAgICAgICAgICAgICAgICAgICBCdWcgNDA5MjQ3IC0gWzEuOF1bY29tcGlsZXJd
IFZlcmlmeSBlcnJvciB3aXRoIGNvZGUgYWxsb2NhdGluZyBtdWx0aWRpbWVuc2lvbmFsIGFycmF5
CiAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgQnVnIDQwOTIzNiAtIFsxLjhdW2NvbXBpbGVy
XSBUeXBlIGFubm90YXRpb25zIG9uIGludGVyc2VjdGlvbiBjYXN0IHR5cGVzIGRyb3BwZWQgYnkg
Y29kZSBnZW5lcmF0b3IKICAqICAgICAgICAgICAgICAgICAgICAgICAgICBCdWcgNDA5MjUwIC0g
WzEuOF1bY29tcGlsZXJdIFZhcmlvdXMgbG9vc2UgZW5kcyBpbiAzMDggY29kZSBnZW5lcmF0aW9u
CisgKiAgICAgICAgICAgICAgICAgICAgICAgICAgQnVnIDQwNTEwNCAtIFsxLjhdW2NvbXBpbGVy
XVtjb2RlZ2VuXSBJbXBsZW1lbnQgc3VwcG9ydCBmb3Igc2VyaWFsaXplYWJsZSBsYW1iZGFzCiAg
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvbXBpbGVyLmNvZGVnZW47CiAKK2ltcG9ydCBqYXZhLnV0aWwuQXJyYXlMaXN0OworaW1wb3J0
IGphdmEudXRpbC5JdGVyYXRvcjsKK2ltcG9ydCBqYXZhLnV0aWwuTGlua2VkSGFzaE1hcDsKK2lt
cG9ydCBqYXZhLnV0aWwuTGlzdDsKK2ltcG9ydCBqYXZhLnV0aWwuTWFwOworaW1wb3J0IGphdmEu
dXRpbC5TZXQ7CisKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5jb21waWxlci5DaGFyT3Bl
cmF0aW9uOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5DbGFzc0Zp
bGU7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLkNvbXBpbGF0aW9u
UmVzdWx0OwpAQCAtMjUwNyw2ICsyNTE1LDI2OCBAQCBwdWJsaWMgdm9pZCBnZW5lcmF0ZVN5bnRo
ZXRpY0JvZHlGb3JFbnVtVmFsdWVPZihTeW50aGV0aWNNZXRob2RCaW5kaW5nIG1ldGhvZEJpbgog
CWFyZXR1cm4oKTsKIH0KIAorLy8gVE9ETyB3aGF0IGFib3V0IGJsb3dpbmcgdGhlIG1ldGhvZCBs
aW1pdD8gSWdub3JlIGZvciBub3c/CisvKioKKyAqIFRoaXMgaXMgaW50ZW5kZWQgdG8gbWF0Y2gg
d2hhdCBqYXZhYyBnZW5lcmF0ZXMuIEZpcnN0IHRoZXJlIGlzIGEgc3dpdGNoIHN0YXRlbWVudCBv
biB0aGUgaGFzaGNvZGUgb2YgdGhlIGxhbWJkYSBtZXRob2QgbmFtZSAtIGJhc2VkIG9uIHRoYXQK
KyAqIGFuIGlkIGlzIGNvbXB1dGVkICgwLi5OKS4gQW4gdW5yZWNvZ25pemVkIGhhc2ggZ2V0cyB0
aGUgaWQgLTEuIFRoZW4gYSBzZWNvbmQgc3dpdGNoIGlzIG9uIHRoZSBpZCBhbmQgZWFjaCBjYXNl
IGhlcmUgY2hlY2tzIGFsbCB0aGUgcHJvcGVydGllcworICogb2YgdGhlIHNlcmlhbGl6ZWQgbGFt
YmRhLiBJZiB0aGV5IGFsbCBjaGVja291dCBPSyBhbiBpbnZva2VkeW5hbWljIGNhbGwgdG8gYSBi
b290c3RyYXAgbWV0aG9kIHRhcmdldGluZyB0aGUgYWx0TWV0YWZhY3RvcnkuIElmIGFueSBvZiB0
aGUgdGVzdHMKKyAqIGZhaWwgYW4gSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uIGlzIHRocm93bi4g
VGhpcyBleGNlcHRpb24gaXMgbm90IHR5cGljYWxseSBzZWVuIGJ5IHRoZSAndXNlcicsIGluc3Rl
YWQgdGhleSBzZWVtIHRvIHNlZSBhIE5QRSB3aGVuCisgKiB0aGUgbGFtYmRhIGRvZXMgbm90IGRl
c2VyaWFsaXplIHByb3Blcmx5LgorICovCitwdWJsaWMgdm9pZCBnZW5lcmF0ZVN5bnRoZXRpY0Jv
ZHlGb3JEZXNlcmlhbGl6ZUxhbWJkYShTeW50aGV0aWNNZXRob2RCaW5kaW5nIG1ldGhvZEJpbmRp
bmcsU3ludGhldGljTWV0aG9kQmluZGluZ1tdIHN5bnRoZXRpY01ldGhvZEJpbmRpbmdzKSB7CisJ
aW5pdGlhbGl6ZU1heExvY2FscyhtZXRob2RCaW5kaW5nKTsKKwkKKwkvLyBDb21wdXRlIHRoZSBs
aXN0IG9mIHRoZSBzZXJpYWxpemFibGUgbGFtYmRhcyBmcm9tIHRoZSBmdWxsIHNldCBvZiBzeW50
aGV0aWMgbWV0aG9kIGJpbmRpbmdzCisJLy8gQWxzbyBjb21wdXRlIGEgbWFwIG9mIGhhc2hjb2Rl
cyB0byBhIGxpc3Qgb2Ygc2VyaWFsaXphYmxlIGxhbWJkYXMgd2hvc2UgbmFtZXMgc2hhcmUgYSBo
YXNoY29kZSAKKwlMaXN0IHN5bnRoZXRpY3NGb3JTZXJpYWxpemFibGVMYW1iZGFzID0gbmV3IEFy
cmF5TGlzdCgpOwkKKwlNYXAgaGFzaGNvZGVzVG9MYW1iZGFzID0gbmV3IExpbmtlZEhhc2hNYXAo
KTsKKwlmb3IgKGludCBpPTAsbWF4PXN5bnRoZXRpY01ldGhvZEJpbmRpbmdzLmxlbmd0aDtpPG1h
eDtpKyspIHsKKwkJU3ludGhldGljTWV0aG9kQmluZGluZyBzeW50aGV0aWNNZXRob2RCaW5kaW5n
ID0gc3ludGhldGljTWV0aG9kQmluZGluZ3NbaV07CisJCWlmIChzeW50aGV0aWNNZXRob2RCaW5k
aW5nLmxhbWJkYSE9bnVsbCAmJiBzeW50aGV0aWNNZXRob2RCaW5kaW5nLmxhbWJkYS5pc1Nlcmlh
bGl6YWJsZSkgeworCQkJc3ludGhldGljc0ZvclNlcmlhbGl6YWJsZUxhbWJkYXMuYWRkKHN5bnRo
ZXRpY01ldGhvZEJpbmRpbmcpOworCQkJLy8gVE9ETyBjYW4gSSB1c2UgPiBKYXZhIDEuNCBmZWF0
dXJlcyBoZXJlPworCQkJSW50ZWdlciBoYXNoY29kZSA9IG5ldyBJbnRlZ2VyKG5ldyBTdHJpbmco
c3ludGhldGljTWV0aG9kQmluZGluZy5zZWxlY3RvcikuaGFzaENvZGUoKSk7CisJCQlMaXN0IGxh
bWJkYXNGb3JUaGlzSGFzaGNvZGUgPSAoTGlzdCloYXNoY29kZXNUb0xhbWJkYXMuZ2V0KGhhc2hj
b2RlKTsKKwkJCWlmIChoYXNoY29kZXNUb0xhbWJkYXMuZ2V0KGhhc2hjb2RlKT09bnVsbCkgewor
CQkJCWxhbWJkYXNGb3JUaGlzSGFzaGNvZGUgPSBuZXcgQXJyYXlMaXN0KCk7CisJCQkJaGFzaGNv
ZGVzVG9MYW1iZGFzLnB1dChoYXNoY29kZSxsYW1iZGFzRm9yVGhpc0hhc2hjb2RlKTsKKwkJCX0K
KwkJCWxhbWJkYXNGb3JUaGlzSGFzaGNvZGUuYWRkKHN5bnRoZXRpY01ldGhvZEJpbmRpbmcpOwor
CQl9CisJfQorCWludCBsYW1iZGFDb3VudCA9IHN5bnRoZXRpY3NGb3JTZXJpYWxpemFibGVMYW1i
ZGFzLnNpemUoKTsKKwlDbGFzc1Njb3BlIHNjb3BlID0gKChTb3VyY2VUeXBlQmluZGluZyltZXRo
b2RCaW5kaW5nLmRlY2xhcmluZ0NsYXNzKS5zY29wZTsKKwkKKwkKKwkvLyBHZW5lcmF0ZSB0aGUg
Zmlyc3Qgc3dpdGNoLCBvbiBtZXRob2QgbmFtZSBoYXNoY29kZQorCWFsb2FkXzAoKTsKKwlpbnZv
a2UoT3Bjb2Rlcy5PUENfaW52b2tldmlydHVhbCwgMSwgMSwgQ29uc3RhbnRQb29sLkphdmFMYW5n
SW52b2tlU2VyaWFsaXplZExhbWJkYUNvbnN0YW50UG9vbE5hbWUsIENvbnN0YW50UG9vbC5HZXRJ
bXBsTWV0aG9kTmFtZSwgQ29uc3RhbnRQb29sLkdldEltcGxNZXRob2ROYW1lU2lnbmF0dXJlKTsK
Kwlhc3RvcmVfMSgpOworCUxvY2FsVmFyaWFibGVCaW5kaW5nIGx2YjEgPSBuZXcgTG9jYWxWYXJp
YWJsZUJpbmRpbmcoImhhc2hjb2RlIi50b0NoYXJBcnJheSgpLHNjb3BlLmdldEphdmFMYW5nU3Ry
aW5nKCksMCxmYWxzZSk7IC8vJE5PTi1OTFMtMSQKKwlsdmIxLnJlc29sdmVkUG9zaXRpb24gPSAx
OworCWFkZFZhcmlhYmxlKGx2YjEpOworCWljb25zdF9tMSgpOworCWlzdG9yZV8yKCk7CisJTG9j
YWxWYXJpYWJsZUJpbmRpbmcgbHZiMiA9IG5ldyBMb2NhbFZhcmlhYmxlQmluZGluZygiaWQiLnRv
Q2hhckFycmF5KCksVHlwZUJpbmRpbmcuSU5ULDAsZmFsc2UpOyAvLyROT04tTkxTLTEkCisJbHZi
Mi5yZXNvbHZlZFBvc2l0aW9uID0gMjsKKwlhZGRWYXJpYWJsZShsdmIyKTsKKwlhbG9hZF8xKCk7
CisJaW52b2tlU3RyaW5nSGFzaENvZGUoKTsKKwkKKwlCcmFuY2hMYWJlbCBsYWJlbCA9IG5ldyBC
cmFuY2hMYWJlbCh0aGlzKTsKKwlDYXNlTGFiZWwgZGVmYXVsdExhYmVsID0gbmV3IENhc2VMYWJl
bCh0aGlzKTsKKwlpbnQgbnVtYmVyT2ZIYXNoY29kZXMgPSBoYXNoY29kZXNUb0xhbWJkYXMuc2l6
ZSgpOworCUNhc2VMYWJlbFtdIHN3aXRjaExhYmVscyA9IG5ldyBDYXNlTGFiZWxbbnVtYmVyT2ZI
YXNoY29kZXNdOworCWludFtdIGtleXMgPSBuZXcgaW50W251bWJlck9mSGFzaGNvZGVzXTsKKwlp
bnRbXSBzb3J0ZWRJbmRleGVzID0gbmV3IGludFtudW1iZXJPZkhhc2hjb2Rlc107CisJU2V0IGhh
c2hjb2RlcyA9IGhhc2hjb2Rlc1RvTGFtYmRhcy5rZXlTZXQoKTsKKwlJdGVyYXRvciBoYXNoY29k
ZUl0ZXJhdG9yID0gaGFzaGNvZGVzLml0ZXJhdG9yKCk7CisJaW50IGluZGV4PTA7CisJd2hpbGUg
KGhhc2hjb2RlSXRlcmF0b3IuaGFzTmV4dCgpKSB7CisJCUludGVnZXIgaGFzaGNvZGUgPSAoSW50
ZWdlciloYXNoY29kZUl0ZXJhdG9yLm5leHQoKTsKKwkJc3dpdGNoTGFiZWxzW2luZGV4XSA9IG5l
dyBDYXNlTGFiZWwodGhpcyk7CisJCWtleXNbaW5kZXhdID0gaGFzaGNvZGUuaW50VmFsdWUoKTsK
KwkJc29ydGVkSW5kZXhlc1tpbmRleF0gPSBpbmRleDsKKwkJaW5kZXgrKzsKKwl9CisJaW50W10g
bG9jYWxLZXlzQ29weTsKKwlTeXN0ZW0uYXJyYXljb3B5KGtleXMsMCwobG9jYWxLZXlzQ29weSA9
IG5ldyBpbnRbbnVtYmVyT2ZIYXNoY29kZXNdKSwwLG51bWJlck9mSGFzaGNvZGVzKTsKKwlzb3J0
KGxvY2FsS2V5c0NvcHksIDAsIG51bWJlck9mSGFzaGNvZGVzLTEsIHNvcnRlZEluZGV4ZXMpOwor
CS8vIFRPRE8gbmVlZCB0byB1c2UgYSB0YWJsZXN3aXRjaCBhdCBzb21lIHNpemUgdGhyZXNob2xk
PworCWxvb2t1cHN3aXRjaChkZWZhdWx0TGFiZWwsIGtleXMsIHNvcnRlZEluZGV4ZXMsIHN3aXRj
aExhYmVscyk7CisJLy8gVE9ETyBjb3BlIHdpdGggbXVsdGlwbGUgbmFtZXMgdGhhdCBzaGFyZSB0
aGUgc2FtZSBoYXNoY29kZQkKKwloYXNoY29kZUl0ZXJhdG9yID0gaGFzaGNvZGVzLml0ZXJhdG9y
KCk7CisJaW5kZXggPSAwOworCXdoaWxlIChoYXNoY29kZUl0ZXJhdG9yLmhhc05leHQoKSkgewor
CQlJbnRlZ2VyIGhhc2hjb2RlID0gKEludGVnZXIpaGFzaGNvZGVJdGVyYXRvci5uZXh0KCk7CisJ
CUxpc3QgbGFtYmRhcyA9IChMaXN0KWhhc2hjb2Rlc1RvTGFtYmRhcy5nZXQoaGFzaGNvZGUpOwor
CQlzd2l0Y2hMYWJlbHNbaW5kZXhdLnBsYWNlKCk7CisJCUJyYW5jaExhYmVsIG5leHRPbmUgPSBu
ZXcgQnJhbmNoTGFiZWwodGhpcyk7CisJCS8vIExvb3AgdGhyb3VnaCBhbGwgbGFtYmRhcyB0aGF0
IHNoYXJlIHRoZSBzYW1lIGhhc2hjb2RlCisJCWZvciAoaW50IGo9MCxtYXg9bGFtYmRhcy5zaXpl
KCk7ajxtYXg7aisrKSB7CisJCQlTeW50aGV0aWNNZXRob2RCaW5kaW5nIHN5bnRoZXRpY01ldGhv
ZEJpbmRpbmcgPSAoU3ludGhldGljTWV0aG9kQmluZGluZylsYW1iZGFzLmdldChqKTsKKwkJCWFs
b2FkXzEoKTsKKwkJCWxkYyhuZXcgU3RyaW5nKHN5bnRoZXRpY01ldGhvZEJpbmRpbmcuc2VsZWN0
b3IpKTsKKwkJCWludm9rZVN0cmluZ0VxdWFscygpOworCQkJaWZlcShuZXh0T25lKTsKKwkJCWxv
YWRJbnQoaW5kZXgrKyk7CisJCQlpc3RvcmVfMigpOworCQkJZ290b18obGFiZWwpOworCQkJbmV4
dE9uZS5wbGFjZSgpOworCQkJbmV4dE9uZSA9IG5ldyBCcmFuY2hMYWJlbCh0aGlzKTsKKwkJfQor
CQlnb3RvXyhsYWJlbCk7CisJfQorCWRlZmF1bHRMYWJlbC5wbGFjZSgpOworCWxhYmVsLnBsYWNl
KCk7CisJCisJLy8gU2Vjb25kIGJsb2NrIGlzIHN3aXRjaGluZyBvbiB0aGUgbGFtYmRhIGlkLCAt
MSBpcyB0aGUgZXJyb3IgKHVucmVjb2duaXplZCkgY2FzZQorCXN3aXRjaExhYmVscyA9IG5ldyBD
YXNlTGFiZWxbbGFtYmRhQ291bnRdOworCWtleXMgPSBuZXcgaW50W2xhbWJkYUNvdW50XTsKKwlz
b3J0ZWRJbmRleGVzID0gbmV3IGludFtsYW1iZGFDb3VudF07CisJQnJhbmNoTGFiZWwgZXJyb3JM
YWJlbCA9IG5ldyBCcmFuY2hMYWJlbCh0aGlzKTsKKwlkZWZhdWx0TGFiZWwgPSBuZXcgQ2FzZUxh
YmVsKHRoaXMpOworCWlsb2FkXzIoKTsKKwlmb3IgKGludCBqPTA7ajxsYW1iZGFDb3VudDtqKysp
IHsKKwkJc3dpdGNoTGFiZWxzW2pdID0gbmV3IENhc2VMYWJlbCh0aGlzKTsKKwkJa2V5c1tqXSA9
IGo7CisJCXNvcnRlZEluZGV4ZXNbal0gPSBqOworCX0KKwlTeXN0ZW0uYXJyYXljb3B5KGtleXMs
MCwobG9jYWxLZXlzQ29weSA9IG5ldyBpbnRbbGFtYmRhQ291bnRdKSwwLGxhbWJkYUNvdW50KTsK
KwkvLyBUT0RPIG5vIG5lZWQgdG8gc29ydCBoZXJlPyBUaGV5IHNob3VsZCBhbGwgYmUgaW4gb3Jk
ZXIKKwlzb3J0KGxvY2FsS2V5c0NvcHksIDAsIGxhbWJkYUNvdW50LTEsIHNvcnRlZEluZGV4ZXMp
OworCS8vIFRPRE8gbmVlZCB0byB1c2UgYSB0YWJsZXN3aXRjaCBhdCBzb21lIHNpemUgdGhyZXNo
b2xkPworCWxvb2t1cHN3aXRjaChkZWZhdWx0TGFiZWwsIGtleXMsIHNvcnRlZEluZGV4ZXMsIHN3
aXRjaExhYmVscyk7CisJZm9yIChpbnQgaT0wO2k8bGFtYmRhQ291bnQ7aSsrKSB7CisJCVN5bnRo
ZXRpY01ldGhvZEJpbmRpbmcgc3ludGhldGljTWV0aG9kQmluZGluZyA9IChTeW50aGV0aWNNZXRo
b2RCaW5kaW5nKXN5bnRoZXRpY3NGb3JTZXJpYWxpemFibGVMYW1iZGFzLmdldChpKTsKKwkJc3dp
dGNoTGFiZWxzW2ldLnBsYWNlKCk7CisJCQorCQkvLyBDb21wYXJlIEltcGxNZXRob2RLaW5kCisJ
CWFsb2FkXzAoKTsKKwkJTGFtYmRhRXhwcmVzc2lvbiBsYW1iZGFFeCA9IHN5bnRoZXRpY01ldGhv
ZEJpbmRpbmcubGFtYmRhOworCQlNZXRob2RCaW5kaW5nIG1iID0gbGFtYmRhRXguYmluZGluZzsK
KwkJaW52b2tlKE9wY29kZXMuT1BDX2ludm9rZXZpcnR1YWwsIDEsIDEsIENvbnN0YW50UG9vbC5K
YXZhTGFuZ0ludm9rZVNlcmlhbGl6ZWRMYW1iZGFDb25zdGFudFBvb2xOYW1lLCAKKwkJCQlDb25z
dGFudFBvb2wuR2V0SW1wbE1ldGhvZEtpbmQsIENvbnN0YW50UG9vbC5HZXRJbXBsTWV0aG9kS2lu
ZFNpZ25hdHVyZSk7CisJCWJ5dGUgbWV0aG9kS2luZCA9IDA7CisJCWlmIChtYi5pc1N0YXRpYygp
KSB7CisJCQltZXRob2RLaW5kID0gQ2xhc3NGaWxlQ29uc3RhbnRzLk1ldGhvZEhhbmRsZVJlZktp
bmRJbnZva2VTdGF0aWM7CisJCX0gZWxzZSBpZiAobWIuaXNQcml2YXRlKCkpIHsKKwkJCW1ldGhv
ZEtpbmQgPSBDbGFzc0ZpbGVDb25zdGFudHMuTWV0aG9kSGFuZGxlUmVmS2luZEludm9rZVNwZWNp
YWw7CisJCX0gZWxzZSB7CisJCQltZXRob2RLaW5kID0gQ2xhc3NGaWxlQ29uc3RhbnRzLk1ldGhv
ZEhhbmRsZVJlZktpbmRJbnZva2VWaXJ0dWFsOworCQl9CisJCWJpcHVzaChtZXRob2RLaW5kKTsv
LyBUT0RPIHNlZSB0YWJsZSBiZWxvdworCQlpZl9pY21wbmUoZXJyb3JMYWJlbCk7CisKKwkJLy8g
Q29tcGFyZSBGdW5jdGlvbmFsSW50ZXJmYWNlQ2xhc3MKKwkJYWxvYWRfMCgpOworCQlpbnZva2Uo
T3Bjb2Rlcy5PUENfaW52b2tldmlydHVhbCwgMSwgMSwgQ29uc3RhbnRQb29sLkphdmFMYW5nSW52
b2tlU2VyaWFsaXplZExhbWJkYUNvbnN0YW50UG9vbE5hbWUsIAorCQkJCUNvbnN0YW50UG9vbC5H
ZXRGdW5jdGlvbmFsSW50ZXJmYWNlQ2xhc3MsIENvbnN0YW50UG9vbC5HZXRGdW5jdGlvbmFsSW50
ZXJmYWNlQ2xhc3NTaWduYXR1cmUpOworCQlsZGMobmV3IFN0cmluZyhDaGFyT3BlcmF0aW9uLmNv
bmNhdFdpdGgobGFtYmRhRXguZGVzY3JpcHRvci5kZWNsYXJpbmdDbGFzcy5jb21wb3VuZE5hbWUs
Jy8nKSkpOyAvLyBlLmcuICJjb20vZm9vL1gkRm9vIgorCQlpbnZva2VPYmplY3RFcXVhbHMoKTsK
KwkJaWZlcShlcnJvckxhYmVsKTsKKwkJCisJCS8vIENvbXBhcmUgRnVuY3Rpb25hbEludGVyZmFj
ZU1ldGhvZE5hbWUKKwkJYWxvYWRfMCgpOworCQlpbnZva2UoT3Bjb2Rlcy5PUENfaW52b2tldmly
dHVhbCwgMSwgMSwgQ29uc3RhbnRQb29sLkphdmFMYW5nSW52b2tlU2VyaWFsaXplZExhbWJkYUNv
bnN0YW50UG9vbE5hbWUsIAorCQkJCUNvbnN0YW50UG9vbC5HZXRGdW5jdGlvbmFsSW50ZXJmYWNl
TWV0aG9kTmFtZSwgQ29uc3RhbnRQb29sLkdldEZ1bmN0aW9uYWxJbnRlcmZhY2VNZXRob2ROYW1l
U2lnbmF0dXJlKTsKKwkJbGRjKG5ldyBTdHJpbmcobGFtYmRhRXguZGVzY3JpcHRvci5zZWxlY3Rv
cikpOyAvLyBlLmcuICJtIgorCQlpbnZva2VPYmplY3RFcXVhbHMoKTsKKwkJaWZlcShlcnJvckxh
YmVsKTsKKworCQkvLyBDb21wYXJlIEZ1bmN0aW9uYWxJbnRlcmZhY2VNZXRob2RTaWduYXR1cmUK
KwkJYWxvYWRfMCgpOworCQlpbnZva2UoT3Bjb2Rlcy5PUENfaW52b2tldmlydHVhbCwgMSwgMSwg
Q29uc3RhbnRQb29sLkphdmFMYW5nSW52b2tlU2VyaWFsaXplZExhbWJkYUNvbnN0YW50UG9vbE5h
bWUsIAorCQkJCUNvbnN0YW50UG9vbC5HZXRGdW5jdGlvbmFsSW50ZXJmYWNlTWV0aG9kU2lnbmF0
dXJlLCBDb25zdGFudFBvb2wuR2V0RnVuY3Rpb25hbEludGVyZmFjZU1ldGhvZFNpZ25hdHVyZVNp
Z25hdHVyZSk7CisJCWxkYyhuZXcgU3RyaW5nKGxhbWJkYUV4LmRlc2NyaXB0b3Iub3JpZ2luYWwo
KS5zaWduYXR1cmUoKSkpOyAvLyBlLmcgIigpSSIKKwkJaW52b2tlT2JqZWN0RXF1YWxzKCk7CisJ
CWlmZXEoZXJyb3JMYWJlbCk7CisKKwkJLy8gQ29tcGFyZSBJbXBsQ2xhc3MKKwkJYWxvYWRfMCgp
OworCQlpbnZva2UoT3Bjb2Rlcy5PUENfaW52b2tldmlydHVhbCwgMSwgMSwgQ29uc3RhbnRQb29s
LkphdmFMYW5nSW52b2tlU2VyaWFsaXplZExhbWJkYUNvbnN0YW50UG9vbE5hbWUsIAorCQkJCUNv
bnN0YW50UG9vbC5HZXRJbXBsQ2xhc3MsIENvbnN0YW50UG9vbC5HZXRJbXBsQ2xhc3NTaWduYXR1
cmUpOworCQlsZGMobmV3IFN0cmluZyhDaGFyT3BlcmF0aW9uLmNvbmNhdFdpdGgobWIuZGVjbGFy
aW5nQ2xhc3MuY29tcG91bmROYW1lLCcvJykpKTsgLy8gZS5nLiAiY29tL2Zvby9YIgorCQlpbnZv
a2VPYmplY3RFcXVhbHMoKTsKKwkJaWZlcShlcnJvckxhYmVsKTsKKworCQkvLyBDb21wYXJlIElt
cGxNZXRob2RTaWduYXR1cmUKKwkJYWxvYWRfMCgpOworCQlpbnZva2UoT3Bjb2Rlcy5PUENfaW52
b2tldmlydHVhbCwgMSwgMSwgQ29uc3RhbnRQb29sLkphdmFMYW5nSW52b2tlU2VyaWFsaXplZExh
bWJkYUNvbnN0YW50UG9vbE5hbWUsIAorCQkJCUNvbnN0YW50UG9vbC5HZXRJbXBsTWV0aG9kU2ln
bmF0dXJlLCBDb25zdGFudFBvb2wuR2V0SW1wbE1ldGhvZFNpZ25hdHVyZVNpZ25hdHVyZSk7CisJ
CWxkYyhuZXcgU3RyaW5nKG1iLnNpZ25hdHVyZSgpKSk7IC8vIGUuZy4gIihJKUkiCisJCWludm9r
ZU9iamVjdEVxdWFscygpOworCQlpZmVxKGVycm9yTGFiZWwpOworCisJCS8vIENhcHR1cmVkIGFy
Z3VtZW50cworCQlTdHJpbmdCdWZmZXIgc2lnID0gbmV3IFN0cmluZ0J1ZmZlcigiKCIpOyAvLyRO
T04tTkxTLTEkCisJCWluZGV4ID0gMDsKKwkJaWYgKGxhbWJkYUV4LnNob3VsZENhcHR1cmVJbnN0
YW5jZSkgeworCQkJYWxvYWRfMCgpOworCQkJbG9hZEludChpbmRleCsrKTsKKwkJCWludm9rZShP
cGNvZGVzLk9QQ19pbnZva2V2aXJ0dWFsLCAxLCAxLCBDb25zdGFudFBvb2wuSmF2YUxhbmdJbnZv
a2VTZXJpYWxpemVkTGFtYmRhQ29uc3RhbnRQb29sTmFtZSwgCisJCQkJCUNvbnN0YW50UG9vbC5H
ZXRDYXB0dXJlZEFyZywgQ29uc3RhbnRQb29sLkdldENhcHR1cmVkQXJnU2lnbmF0dXJlKTsKKwkJ
CWNoZWNrY2FzdChtYi5kZWNsYXJpbmdDbGFzcyk7CisJCQlzaWcuYXBwZW5kKG1iLmRlY2xhcmlu
Z0NsYXNzLnNpZ25hdHVyZSgpKTsKKwkJfQorCQkKKwkJU3ludGhldGljQXJndW1lbnRCaW5kaW5n
W10gb3V0ZXJMb2NhbFZhcmlhYmxlcyA9IGxhbWJkYUV4Lm91dGVyTG9jYWxWYXJpYWJsZXM7CisJ
CWZvciAoaW50IHA9MCxtYXg9b3V0ZXJMb2NhbFZhcmlhYmxlcy5sZW5ndGg7cDxtYXg7cCsrKSB7
CisJCQlhbG9hZF8wKCk7CisJCQlsb2FkSW50KHApOworCQkJaW52b2tlKE9wY29kZXMuT1BDX2lu
dm9rZXZpcnR1YWwsIDEsIDEsIENvbnN0YW50UG9vbC5KYXZhTGFuZ0ludm9rZVNlcmlhbGl6ZWRM
YW1iZGFDb25zdGFudFBvb2xOYW1lLCAKKwkJCQkJQ29uc3RhbnRQb29sLkdldENhcHR1cmVkQXJn
LCBDb25zdGFudFBvb2wuR2V0Q2FwdHVyZWRBcmdTaWduYXR1cmUpOworCQkJVHlwZUJpbmRpbmcg
dmFyVHlwZSA9IG91dGVyTG9jYWxWYXJpYWJsZXNbcF0udHlwZTsKKwkJCWlmICh2YXJUeXBlLmlz
QmFzZVR5cGUoKSkgeworCQkJCWNoZWNrY2FzdChzY29wZS5ib3hpbmcodmFyVHlwZSkpOworCQkJ
CWdlbmVyYXRlVW5ib3hpbmdDb252ZXJzaW9uKHZhclR5cGUuaWQpOworCQkJCWlmICh2YXJUeXBl
LmlkID09IFR5cGVJZHMuVF9KYXZhTGFuZ0xvbmcgfHwgdmFyVHlwZS5pZCA9PSBUeXBlSWRzLlRf
SmF2YUxhbmdEb3VibGUpIHsKKwkJCQkJaW5kZXgrKzsKKwkJCQl9CisJCQl9IGVsc2UgeworCQkJ
CWNoZWNrY2FzdCh2YXJUeXBlKTsKKwkJCX0KKwkJCWluZGV4Kys7CisJCQlzaWcuYXBwZW5kKHZh
clR5cGUuc2lnbmF0dXJlKCkpOworCQl9CisJCXNpZy5hcHBlbmQoIikiKTsgLy8kTk9OLU5MUy0x
JAorCQlpZiAobGFtYmRhRXgucmVzb2x2ZWRUeXBlIGluc3RhbmNlb2YgSW50ZXJzZWN0aW9uQ2Fz
dFR5cGVCaW5kaW5nKSB7CisJCQlzaWcuYXBwZW5kKCgoSW50ZXJzZWN0aW9uQ2FzdFR5cGVCaW5k
aW5nKWxhbWJkYUV4LnJlc29sdmVkVHlwZSkuZ2V0U0FNVHlwZShzY29wZSkuc2lnbmF0dXJlKCkp
OworCQl9IGVsc2UgeworCQkJc2lnLmFwcGVuZChsYW1iZGFFeC5yZXNvbHZlZFR5cGUuc2lnbmF0
dXJlKCkpOworCQl9CisJCS8vIEV4YW1wbGU6IGludm9rZUR5bmFtaWMoMCwgMCwgMSwgIm0iLnRv
Q2hhckFycmF5KCksICIoKUxjb20vZm9vL1gkRm9vOyIudG9DaGFyQXJyYXkoKSk7CisJCWludm9r
ZUR5bmFtaWMobGFtYmRhRXguYm9vdHN0cmFwTWV0aG9kTnVtYmVyLCBpbmRleCwgMSwgbGFtYmRh
RXguZGVzY3JpcHRvci5zZWxlY3Rvciwgc2lnLnRvU3RyaW5nKCkudG9DaGFyQXJyYXkoKSk7CisJ
CWFyZXR1cm4oKTsKKwl9CisJCisJcmVtb3ZlVmFyaWFibGUobHZiMSk7CisJcmVtb3ZlVmFyaWFi
bGUobHZiMik7CisJZGVmYXVsdExhYmVsLnBsYWNlKCk7CisJZXJyb3JMYWJlbC5wbGFjZSgpOwor
CS8vIENvZGU6IHRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oIkludmFsaWQgbGFt
YmRhIGRlc2VyaWFsaXphdGlvbiIpCisJbmV3XyhzY29wZS5nZXRKYXZhTGFuZ0lsbGVnYWxBcmd1
bWVudEV4Y2VwdGlvbigpKTsKKwlkdXAoKTsKKwlsZGMoIkludmFsaWQgbGFtYmRhIGRlc2VyaWFs
aXphdGlvbiIpOyAvLyROT04tTkxTLTEkIC8vIFRPRE8gaW50byBhIGNvbnN0YW50PwkJCisJLy8g
aW52b2tlc3BlY2lhbDogamF2YS5sYW5nLklsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbi48aW5pdD4o
TGphdmEvbGFuZy9TdHJpbmc7KVYKKwlpbnZva2UoCisJCQlPcGNvZGVzLk9QQ19pbnZva2VzcGVj
aWFsLAorCQkJMiwgLy8gcmVjZWl2ZXJBbmRBcmdzU2l6ZQorCQkJMCwgLy8gcmV0dXJuIHR5cGUg
c2l6ZQorCQkJQ29uc3RhbnRQb29sLkphdmFMYW5nSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uQ29u
c3RhbnRQb29sTmFtZSwKKwkJCUNvbnN0YW50UG9vbC5Jbml0LAorCQkJQ29uc3RhbnRQb29sLkls
bGVnYWxBcmd1bWVudEV4Y2VwdGlvbkNvbnN0cnVjdG9yU2lnbmF0dXJlKTsKKwlhdGhyb3coKTsK
K30KKworLyoqCisgKiBCYXNlZCBvbiB0aGUgc3VwcGxpZWQgdmFsdWUgYWRkIHRoZSBtb3N0IGVm
ZmljaWVudCBsb2FkIGluc3RydWN0aW9uIHRvIHRoZSBjb2RlIHN0cmVhbSBmb3IgdGhhdCB2YWx1
ZS4KKyAqIE5vdGU6IERvZXMgbm90IGhhbmRsZSAgbmVnYXRpdmUgdmFsdWVzLgorICovCitwdWJs
aWMgdm9pZCBsb2FkSW50KGludCB2YWx1ZSkgeworCWlmICh2YWx1ZTw2KSB7CisJCWlmICh2YWx1
ZT09MCkgeworCQkJaWNvbnN0XzAoKTsKKwkJfSBlbHNlIGlmICh2YWx1ZT09MSkgeworCQkJaWNv
bnN0XzEoKTsKKwkJfSBlbHNlIGlmICh2YWx1ZT09MikgeworCQkJaWNvbnN0XzIoKTsKKwkJfSBl
bHNlIGlmICh2YWx1ZT09MykgeworCQkJaWNvbnN0XzMoKTsKKwkJfSBlbHNlIGlmICh2YWx1ZT09
NCkgeworCQkJaWNvbnN0XzQoKTsKKwkJfSBlbHNlIGlmICh2YWx1ZT09NSkgeworCQkJaWNvbnN0
XzUoKTsKKwkJfQorCX0gZWxzZSBpZiAodmFsdWUgPCAxMjgpIHsKKwkJLy8gVE9ETyBbYW5keV0g
dGVzdGNhc2VzIHRoYXQgaGl0IHRoaXMKKwkJYmlwdXNoKChieXRlKXZhbHVlKTsKKwl9IGVsc2Ug
eworCQkvLyBUT0RPIFthbmR5XSB0ZXN0Y2FzZXMgdGhhdCBoaXQgdGhpcywgeWlrZXMKKwkJbGRj
KHZhbHVlKTsKKwl9Cit9CisKIC8vc3RhdGljIFhbXSB2YWx1ZXMoKSB7CiAvLyBYW10gdmFsdWVz
OwogLy8gaW50IGxlbmd0aDsKQEAgLTI5MzAsNiArMzIwMCw3IEBAIHB1YmxpYyB2b2lkIGdlbmVy
YXRlVW5ib3hpbmdDb252ZXJzaW9uKGludCB1bmJveGVkVHlwZUlEKSB7CiAJfQogfQogCisKIC8q
CiAgKiBXaWRlIGNvbmRpdGlvbmFsIGJyYW5jaCBjb21wYXJlLCBpbXByb3ZlZCBieSBzd2FwcGlu
ZyBjb21wYXJpc29uIG9wY29kZQogICogICBpZmVxIFdpZGVUYXJnZXQKQEAgLTQ2NTgsNiArNDky
OSwxNiBAQCBwdWJsaWMgdm9pZCBpbnZva2VTdHJpbmdFcXVhbHMoKSB7CiAJCQlDb25zdGFudFBv
b2wuRXF1YWxzLAogCQkJQ29uc3RhbnRQb29sLkVxdWFsc1NpZ25hdHVyZSk7CiB9CitwdWJsaWMg
dm9pZCBpbnZva2VPYmplY3RFcXVhbHMoKSB7CisJLy8gaW52b2tldmlydHVhbDogamF2YS5sYW5n
Lk9iamVjdC5lcXVhbHMoKQorCWludm9rZSgKKwkJCU9wY29kZXMuT1BDX2ludm9rZXZpcnR1YWws
CisJCQkyLCAvLyByZWNlaXZlckFuZEFyZ3NTaXplCisJCQkxLCAvLyByZXR1cm4gdHlwZSBzaXpl
CisJCQlDb25zdGFudFBvb2wuSmF2YUxhbmdPYmplY3RDb25zdGFudFBvb2xOYW1lLAorCQkJQ29u
c3RhbnRQb29sLkVxdWFscywKKwkJCUNvbnN0YW50UG9vbC5FcXVhbHNTaWduYXR1cmUpOworfQog
cHVibGljIHZvaWQgaW52b2tlU3RyaW5nSGFzaENvZGUoKSB7CiAJLy8gaW52b2tldmlydHVhbDog
amF2YS5sYW5nLlN0cmluZy5oYXNoQ29kZSgpCiAJaW52b2tlKApkaWZmIC0tZ2l0IGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2NvZGVnZW4vQ29uc3RhbnRQb29sLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY29kZWdlbi9Db25zdGFudFBvb2wu
amF2YQppbmRleCAwNjE0NGFkLi4wYzQ2NDEzIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY29kZWdlbi9D
b25zdGFudFBvb2wuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvY29kZWdlbi9Db25zdGFudFBvb2wuamF2YQpA
QCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMp
IDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMp
IDIwMDAsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJl
c2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBh
cmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBM
aWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQg
aXMgYXZhaWxhYmxlIGF0CkBAIC0xNiw2ICsxNiw4IEBACiAgKgkJCQkJCQlCdWcgNDA2OTgyIC0g
WzEuOF1bY29tcGlsZXJdIEdlbmVyYXRpb24gb2YgTWV0aG9kUGFyYW1ldGVycyBBdHRyaWJ1dGUg
aW4gY2xhc3NmaWxlCiAgKgkJCQkJCQlCdWcgNDE2ODg1IC0gWzEuOF1bY29tcGlsZXJdSW5jb21w
YXRpYmxlQ2xhc3NDaGFuZ2UgZXJyb3IgKGVkaXQpCiAgKgkJCQkJCQlCdWcgNDEyMTUzIC0gWzEu
OF1bY29tcGlsZXJdIENoZWNrIHZhbGlkaXR5IG9mIGFubm90YXRpb25zIHdoaWNoIG1heSBiZSBy
ZXBlYXRhYmxlCisgKiAgICAgQW5keSBDbGVtZW50IChHb1Bpdm90YWwsIEluYykgYWNsZW1lbnRA
Z29waXZvdGFsLmNvbSAtIENvbnRyaWJ1dGlvbnMgZm9yCisgKiAgICAgICAgICAgICAgICAgICAg
ICAgICAgQnVnIDQwNTEwNCAtIFsxLjhdW2NvbXBpbGVyXVtjb2RlZ2VuXSBJbXBsZW1lbnQgc3Vw
cG9ydCBmb3Igc2VyaWFsaXplYWJsZSBsYW1iZGFzCiAgKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8K
IHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNvZGVnZW47CiAKQEAg
LTE0Nyw2ICsxNDksNyBAQCBwdWJsaWMgY2xhc3MgQ29uc3RhbnRQb29sIGltcGxlbWVudHMgQ2xh
c3NGaWxlQ29uc3RhbnRzLCBUeXBlSWRzIHsKIAlwdWJsaWMgc3RhdGljIGZpbmFsIGNoYXJbXSBJ
TlZPS0VfTUVUSE9EX01FVEhPRF9TSUdOQVRVUkUgPSAiKExqYXZhL2xhbmcvT2JqZWN0O1tMamF2
YS9sYW5nL09iamVjdDspTGphdmEvbGFuZy9PYmplY3Q7Ii50b0NoYXJBcnJheSgpOyAvLyROT04t
TkxTLTEkCiAJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyW11bXSBKQVZBX0xBTkdfUkVGTEVDVF9B
Q0NFU1NJQkxFT0JKRUNUID0gbmV3IGNoYXJbXVtdIHtUeXBlQ29uc3RhbnRzLkpBVkEsIFR5cGVD
b25zdGFudHMuTEFORywgVHlwZUNvbnN0YW50cy5SRUZMRUNULCAiQWNjZXNzaWJsZU9iamVjdCIu
dG9DaGFyQXJyYXkoKX07IC8vJE5PTi1OTFMtMSQKIAlwdWJsaWMgc3RhdGljIGZpbmFsIGNoYXJb
XVtdIEpBVkFfTEFOR19SRUZMRUNUX0FSUkFZID0gbmV3IGNoYXJbXVtdIHtUeXBlQ29uc3RhbnRz
LkpBVkEsIFR5cGVDb25zdGFudHMuTEFORywgVHlwZUNvbnN0YW50cy5SRUZMRUNULCAiQXJyYXki
LnRvQ2hhckFycmF5KCl9OyAvLyROT04tTkxTLTEkCisJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFy
W10gSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uQ29uc3RydWN0b3JTaWduYXR1cmUgPSAiKExqYXZh
L2xhbmcvU3RyaW5nOylWIi50b0NoYXJBcnJheSgpOyAvLyROT04tTkxTLTEkCiAJLy8gcHJlZGVm
aW5lZCB0eXBlIGNvbnN0YW50IG5hbWVzCiAJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyW10gSmF2
YUlvUHJpbnRTdHJlYW1TaWduYXR1cmUgPSAiTGphdmEvaW8vUHJpbnRTdHJlYW07Ii50b0NoYXJB
cnJheSgpOyAvLyROT04tTkxTLTEkCiAJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyW10gSmF2YUxh
bmdBc3NlcnRpb25FcnJvckNvbnN0YW50UG9vbE5hbWUgPSAiamF2YS9sYW5nL0Fzc2VydGlvbkVy
cm9yIi50b0NoYXJBcnJheSgpOyAvLyROT04tTkxTLTEkCkBAIC0xODAsNiArMTgzLDcgQEAgcHVi
bGljIGNsYXNzIENvbnN0YW50UG9vbCBpbXBsZW1lbnRzIENsYXNzRmlsZUNvbnN0YW50cywgVHlw
ZUlkcyB7CiAJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyW10gSmF2YUxhbmdPYmplY3RTaWduYXR1
cmUgPSAiTGphdmEvbGFuZy9PYmplY3Q7Ii50b0NoYXJBcnJheSgpOyAvLyROT04tTkxTLTEkCiAJ
cHVibGljIHN0YXRpYyBmaW5hbCBjaGFyW10gSmF2YUxhbmdTeXN0ZW1Db25zdGFudFBvb2xOYW1l
ID0gImphdmEvbGFuZy9TeXN0ZW0iLnRvQ2hhckFycmF5KCk7IC8vJE5PTi1OTFMtMSQKIAlwdWJs
aWMgc3RhdGljIGZpbmFsIGNoYXJbXSBKYXZhTGFuZ1Rocm93YWJsZUNvbnN0YW50UG9vbE5hbWUg
PSAiamF2YS9sYW5nL1Rocm93YWJsZSIudG9DaGFyQXJyYXkoKTsgLy8kTk9OLU5MUy0xJAorCXB1
YmxpYyBzdGF0aWMgZmluYWwgY2hhcltdIEphdmFMYW5nSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9u
Q29uc3RhbnRQb29sTmFtZSA9ICJqYXZhL2xhbmcvSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uIi50
b0NoYXJBcnJheSgpOyAvLyROT04tTkxTLTEkCiAJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyW10g
SmF2YUxhbmdWb2lkQ29uc3RhbnRQb29sTmFtZSA9ICJqYXZhL2xhbmcvVm9pZCIudG9DaGFyQXJy
YXkoKTsgLy8kTk9OLU5MUy0xJAogCXB1YmxpYyBzdGF0aWMgZmluYWwgY2hhcltdIEphdmFVdGls
SXRlcmF0b3JDb25zdGFudFBvb2xOYW1lID0gImphdmEvdXRpbC9JdGVyYXRvciIudG9DaGFyQXJy
YXkoKTsgLy8kTk9OLU5MUy0xJAogCXB1YmxpYyBzdGF0aWMgZmluYWwgY2hhcltdIExvbmdDb25z
dHJTaWduYXR1cmUgPSAiKEopViIudG9DaGFyQXJyYXkoKTsgLy8kTk9OLU5MUy0xJApAQCAtMjY0
LDYgKzI2OCwyNyBAQCBwdWJsaWMgY2xhc3MgQ29uc3RhbnRQb29sIGltcGxlbWVudHMgQ2xhc3NG
aWxlQ29uc3RhbnRzLCBUeXBlSWRzIHsKIAkvLyBKYXZhIDggbGFtYmRhIHN1cHBvcnQKIAlwdWJs
aWMgc3RhdGljIGZpbmFsIGNoYXJbXSBNRVRBRkFDVE9SWSA9ICJtZXRhZmFjdG9yeSIudG9DaGFy
QXJyYXkoKTsgLy8kTk9OLU5MUy0xJAogCXB1YmxpYyBzdGF0aWMgZmluYWwgY2hhcltdIEpBVkFf
TEFOR19JTlZPS0VfTEFNQkRBTUVUQUZBQ1RPUllfTUVUQUZBQ1RPUllfU0lHTkFUVVJFID0gIihM
amF2YS9sYW5nL2ludm9rZS9NZXRob2RIYW5kbGVzJExvb2t1cDtMamF2YS9sYW5nL1N0cmluZztM
amF2YS9sYW5nL2ludm9rZS9NZXRob2RUeXBlO0xqYXZhL2xhbmcvaW52b2tlL01ldGhvZFR5cGU7
TGphdmEvbGFuZy9pbnZva2UvTWV0aG9kSGFuZGxlO0xqYXZhL2xhbmcvaW52b2tlL01ldGhvZFR5
cGU7KUxqYXZhL2xhbmcvaW52b2tlL0NhbGxTaXRlOyIudG9DaGFyQXJyYXkoKTsgLy8kTk9OLU5M
Uy0xJAorCXB1YmxpYyBzdGF0aWMgZmluYWwgY2hhcltdIEFMVE1FVEFGQUNUT1JZID0gImFsdE1l
dGFmYWN0b3J5Ii50b0NoYXJBcnJheSgpOyAvLyROT04tTkxTLTEkCisJcHVibGljIHN0YXRpYyBm
aW5hbCBjaGFyW10gSkFWQV9MQU5HX0lOVk9LRV9MQU1CREFNRVRBRkFDVE9SWV9BTFRNRVRBRkFD
VE9SWV9TSUdOQVRVUkUgPSAKKwkJCSIoTGphdmEvbGFuZy9pbnZva2UvTWV0aG9kSGFuZGxlcyRM
b29rdXA7TGphdmEvbGFuZy9TdHJpbmc7TGphdmEvbGFuZy9pbnZva2UvTWV0aG9kVHlwZTtbTGph
dmEvbGFuZy9PYmplY3Q7KUxqYXZhL2xhbmcvaW52b2tlL0NhbGxTaXRlOyIudG9DaGFyQXJyYXko
KTsgLy8kTk9OLU5MUy0xJAorCXB1YmxpYyBzdGF0aWMgZmluYWwgY2hhcltdIEphdmFMYW5nSW52
b2tlU2VyaWFsaXplZExhbWJkYSA9ICJMamF2YS9sYW5nL2ludm9rZS9TZXJpYWxpemVkTGFtYmRh
OyIudG9DaGFyQXJyYXkoKTsgLy8kTk9OLU5MUy0xJAorCXB1YmxpYyBzdGF0aWMgZmluYWwgY2hh
cltdIEphdmFMYW5nSW52b2tlU2VyaWFsaXplZExhbWJkYUNvbnN0YW50UG9vbE5hbWUgPSAiamF2
YS9sYW5nL2ludm9rZS9TZXJpYWxpemVkTGFtYmRhIi50b0NoYXJBcnJheSgpOyAvLyROT04tTkxT
LTEkCisJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyW10gR2V0SW1wbE1ldGhvZE5hbWUgPSAiZ2V0
SW1wbE1ldGhvZE5hbWUiLnRvQ2hhckFycmF5KCk7IC8vJE5PTi1OTFMtMSQKKwlwdWJsaWMgc3Rh
dGljIGZpbmFsIGNoYXJbXSBHZXRJbXBsTWV0aG9kTmFtZVNpZ25hdHVyZSA9ICIoKUxqYXZhL2xh
bmcvU3RyaW5nOyIudG9DaGFyQXJyYXkoKTsgLy8kTk9OLU5MUy0xJAorCXB1YmxpYyBzdGF0aWMg
ZmluYWwgY2hhcltdIEdldEltcGxNZXRob2RLaW5kID0gImdldEltcGxNZXRob2RLaW5kIi50b0No
YXJBcnJheSgpOyAvLyROT04tTkxTLTEkCisJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyW10gR2V0
SW1wbE1ldGhvZEtpbmRTaWduYXR1cmUgPSAiKClJIi50b0NoYXJBcnJheSgpOyAvLyROT04tTkxT
LTEkCisJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyW10gR2V0RnVuY3Rpb25hbEludGVyZmFjZUNs
YXNzID0gImdldEZ1bmN0aW9uYWxJbnRlcmZhY2VDbGFzcyIudG9DaGFyQXJyYXkoKTsgLy8kTk9O
LU5MUy0xJAorCXB1YmxpYyBzdGF0aWMgZmluYWwgY2hhcltdIEdldEZ1bmN0aW9uYWxJbnRlcmZh
Y2VDbGFzc1NpZ25hdHVyZSA9ICIoKUxqYXZhL2xhbmcvU3RyaW5nOyIudG9DaGFyQXJyYXkoKTsg
Ly8kTk9OLU5MUy0xJAorCXB1YmxpYyBzdGF0aWMgZmluYWwgY2hhcltdIEdldEZ1bmN0aW9uYWxJ
bnRlcmZhY2VNZXRob2ROYW1lID0gImdldEZ1bmN0aW9uYWxJbnRlcmZhY2VNZXRob2ROYW1lIi50
b0NoYXJBcnJheSgpOyAvLyROT04tTkxTLTEkCisJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyW10g
R2V0RnVuY3Rpb25hbEludGVyZmFjZU1ldGhvZE5hbWVTaWduYXR1cmUgPSAiKClMamF2YS9sYW5n
L1N0cmluZzsiLnRvQ2hhckFycmF5KCk7IC8vJE5PTi1OTFMtMSQKKwlwdWJsaWMgc3RhdGljIGZp
bmFsIGNoYXJbXSBHZXRGdW5jdGlvbmFsSW50ZXJmYWNlTWV0aG9kU2lnbmF0dXJlID0gImdldEZ1
bmN0aW9uYWxJbnRlcmZhY2VNZXRob2RTaWduYXR1cmUiLnRvQ2hhckFycmF5KCk7IC8vJE5PTi1O
TFMtMSQKKwlwdWJsaWMgc3RhdGljIGZpbmFsIGNoYXJbXSBHZXRGdW5jdGlvbmFsSW50ZXJmYWNl
TWV0aG9kU2lnbmF0dXJlU2lnbmF0dXJlID0gIigpTGphdmEvbGFuZy9TdHJpbmc7Ii50b0NoYXJB
cnJheSgpOyAvLyROT04tTkxTLTEkCisJcHVibGljIHN0YXRpYyBmaW5hbCBjaGFyW10gR2V0SW1w
bENsYXNzID0gImdldEltcGxDbGFzcyIudG9DaGFyQXJyYXkoKTsgLy8kTk9OLU5MUy0xJAorCXB1
YmxpYyBzdGF0aWMgZmluYWwgY2hhcltdIEdldEltcGxDbGFzc1NpZ25hdHVyZSA9ICIoKUxqYXZh
L2xhbmcvU3RyaW5nOyIudG9DaGFyQXJyYXkoKTsgLy8kTk9OLU5MUy0xJAorCXB1YmxpYyBzdGF0
aWMgZmluYWwgY2hhcltdIEdldEltcGxNZXRob2RTaWduYXR1cmUgPSAiZ2V0SW1wbE1ldGhvZFNp
Z25hdHVyZSIudG9DaGFyQXJyYXkoKTsgLy8kTk9OLU5MUy0xJAorCXB1YmxpYyBzdGF0aWMgZmlu
YWwgY2hhcltdIEdldEltcGxNZXRob2RTaWduYXR1cmVTaWduYXR1cmUgPSAiKClMamF2YS9sYW5n
L1N0cmluZzsiLnRvQ2hhckFycmF5KCk7IC8vJE5PTi1OTFMtMSQKKwlwdWJsaWMgc3RhdGljIGZp
bmFsIGNoYXJbXSBHZXRDYXB0dXJlZEFyZyA9ICJnZXRDYXB0dXJlZEFyZyIudG9DaGFyQXJyYXko
KTsgLy8kTk9OLU5MUy0xJAorCXB1YmxpYyBzdGF0aWMgZmluYWwgY2hhcltdIEdldENhcHR1cmVk
QXJnU2lnbmF0dXJlID0gIihJKUxqYXZhL2xhbmcvT2JqZWN0OyIudG9DaGFyQXJyYXkoKTsgLy8k
Tk9OLU5MUy0xJAogCS8vIEphdmEgOCByZXBlYXRhYmxlIGFubm90YXRpb24gc3VwcG9ydAogCXB1
YmxpYyBzdGF0aWMgZmluYWwgY2hhcltdIEpBVkFfTEFOR19BTk5PVEFUSU9OX1JFUEVBVEFCTEUg
PSAiTGphdmEvbGFuZy9hbm5vdGF0aW9uL1JlcGVhdGFibGU7Ii50b0NoYXJBcnJheSgpOyAvLyRO
T04tTkxTLTEkCiAKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvSW50ZXJzZWN0aW9uQ2FzdFR5
cGVCaW5kaW5nLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL0ludGVyc2VjdGlvbkNhc3RUeXBlQmluZGlu
Zy5qYXZhCmluZGV4IDFkYjU1OTMuLjk3ODc2OWQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAv
SW50ZXJzZWN0aW9uQ2FzdFR5cGVCaW5kaW5nLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9JbnRl
cnNlY3Rpb25DYXN0VHlwZUJpbmRpbmcuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9u
IGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTQgSUJNIENvcnBvcmF0aW9u
IGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRo
ZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhl
IHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29t
cGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0xMyw2ICsx
Myw4IEBACiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVu
dGF0aW9uCiAgKiAgICAgU3RlcGhhbiBIZXJybWFubiAtIENvbnRyaWJ1dGlvbiBmb3IKICAqCQkJ
CQkJCUJ1ZyA0MjM1MDQgLSBbMS44XSBJbXBsZW1lbnQgIjE4LjUuMyBGdW5jdGlvbmFsIEludGVy
ZmFjZSBQYXJhbWV0ZXJpemF0aW9uIEluZmVyZW5jZSIKKyAqICAgICBBbmR5IENsZW1lbnQgKEdv
UGl2b3RhbCwgSW5jKSBhY2xlbWVudEBnb3Bpdm90YWwuY29tIC0gQ29udHJpYnV0aW9ucyBmb3IK
KyAqICAgICAgICAgICAgICAgICAgICAgICAgICBCdWcgNDA1MTA0IC0gWzEuOF1bY29tcGlsZXJd
W2NvZGVnZW5dIEltcGxlbWVudCBzdXBwb3J0IGZvciBzZXJpYWxpemVhYmxlIGxhbWJkYXMKICAq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqLwogCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb21waWxlci5sb29rdXA7CkBAIC0xNzksNCArMTgxLDIyIEBAIHB1YmxpYyBjbGFzcyBJbnRl
cnNlY3Rpb25DYXN0VHlwZUJpbmRpbmcgZXh0ZW5kcyBSZWZlcmVuY2VCaW5kaW5nIHsKIAlwdWJs
aWMgU3RyaW5nIHRvU3RyaW5nKCkgewogCSAgICByZXR1cm4gZGVidWdOYW1lKCk7CiAJfQorCisJ
cHVibGljIFR5cGVCaW5kaW5nIGdldFNBTVR5cGUoU2NvcGUgc2NvcGUpIHsKKwkJVHlwZUJpbmRp
bmcgc2FtVHlwZSA9IG51bGw7CisJCWZvciAoaW50IGkgPSAwLCBtYXggPSB0aGlzLmludGVyc2Vj
dGluZ1R5cGVzLmxlbmd0aDsgaSA8IG1heDsgaSsrKSB7CisJCQlUeXBlQmluZGluZyB0eXBlQmlu
ZGluZyA9IHRoaXMuaW50ZXJzZWN0aW5nVHlwZXNbaV07CisJCQlNZXRob2RCaW5kaW5nIG1ldGhv
ZEJpbmRpbmcgPSB0eXBlQmluZGluZy5nZXRTaW5nbGVBYnN0cmFjdE1ldGhvZChzY29wZSwgZmFs
c2UpOworCQkJLy8gV2h5IGRvZXNuJ3QgZ2V0U2luZ2xlQWJzdHJhY3RNZXRob2QgZG8gYXMgdGhl
IGphdmFkb2Mgc2F5cywgYW5kIHJldHVybiBudWxsCisJCQkvLyB3aGVuIGl0IGlzIG5vdCBhIFNB
TSB0eXBlCisJCQlpZiAobWV0aG9kQmluZGluZyBpbnN0YW5jZW9mIFByb2JsZW1NZXRob2RCaW5k
aW5nICYmICgoUHJvYmxlbU1ldGhvZEJpbmRpbmcpbWV0aG9kQmluZGluZykucHJvYmxlbUlkKCk9
PVByb2JsZW1SZWFzb25zLk5vU3VjaFNpbmdsZUFic3RyYWN0TWV0aG9kKSB7CisJCQkJY29udGlu
dWU7CisJCQl9CisJCQlpZiAoc2FtVHlwZSE9bnVsbCkgeworCQkJCXJldHVybiBudWxsOyAvLyBU
aGVyZSBpcyBtb3JlIHRoYW4gb25lICghKSwgc28gd2UgZG9uJ3Qga25vdyB3aGljaAorCQkJfQor
CQkJc2FtVHlwZSA9IHR5cGVCaW5kaW5nOworCQl9CisJCXJldHVybiBzYW1UeXBlOworCX0KIH0K
ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvU2NvcGUuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvU2Nv
cGUuamF2YQppbmRleCAzMTliYWRmLi4zOWU2ODJjIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3Vw
L1Njb3BlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9TY29wZS5qYXZhCkBAIC0xLDUgKzEsNSBA
QAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJ
Qk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxNCBJ
Qk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMg
cHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWls
YWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAog
ICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUg
YXQKQEAgLTI4LDYgKzI4LDggQEAKICAqICAgICBKZXNwZXIgUyBNb2xsZXIgLSBDb250cmlidXRp
b25zIGZvcgogICoJCQkJCQkJCUJ1ZyAzNzg2NzQgLSAiVGhlIG1ldGhvZCBjYW4gYmUgZGVjbGFy
ZWQgYXMgc3RhdGljIiBpcyB3cm9uZwogICogIAkJCQkJCQlCdWcgNDA1MDY2IC0gWzEuOF1bY29t
cGlsZXJdW2NvZGVnZW5dIEltcGxlbWVudCBjb2RlIGdlbmVyYXRpb24gaW5mcmFzdHJ1Y3R1cmUg
Zm9yIEpTUjMzNQorICogICAgIEFuZHkgQ2xlbWVudCAoR29QaXZvdGFsLCBJbmMpIGFjbGVtZW50
QGdvcGl2b3RhbC5jb20gLSBDb250cmlidXRpb25zIGZvcgorICogICAgICAgICAgICAgICAgICAg
ICAgICAgIAlCdWcgNDA1MTA0IC0gWzEuOF1bY29tcGlsZXJdW2NvZGVnZW5dIEltcGxlbWVudCBz
dXBwb3J0IGZvciBzZXJpYWxpemVhYmxlIGxhbWJkYXMKICAqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
LwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwOwogCkBA
IC0yNjgyLDYgKzI2ODQsMTIgQEAgcHVibGljIGFic3RyYWN0IGNsYXNzIFNjb3BlIHsKIAkJdW5p
dFNjb3BlLnJlY29yZFF1YWxpZmllZFJlZmVyZW5jZShUeXBlQ29uc3RhbnRzLkpBVkFfTEFOR19J
TlZPS0VfTEFNQkRBTUVUQUZBQ1RPUlkpOwogCQlyZXR1cm4gdW5pdFNjb3BlLmVudmlyb25tZW50
LmdldFJlc29sdmVkVHlwZShUeXBlQ29uc3RhbnRzLkpBVkFfTEFOR19JTlZPS0VfTEFNQkRBTUVU
QUZBQ1RPUlksIHRoaXMpOwogCX0KKwkKKwlwdWJsaWMgZmluYWwgUmVmZXJlbmNlQmluZGluZyBn
ZXRKYXZhTGFuZ0ludm9rZVNlcmlhbGl6ZWRMYW1iZGEoKSB7CisJCUNvbXBpbGF0aW9uVW5pdFNj
b3BlIHVuaXRTY29wZSA9IGNvbXBpbGF0aW9uVW5pdFNjb3BlKCk7CisJCXVuaXRTY29wZS5yZWNv
cmRRdWFsaWZpZWRSZWZlcmVuY2UoVHlwZUNvbnN0YW50cy5KQVZBX0xBTkdfSU5WT0tFX1NFUklB
TElaRURMQU1CREEpOworCQlyZXR1cm4gdW5pdFNjb3BlLmVudmlyb25tZW50LmdldFJlc29sdmVk
VHlwZShUeXBlQ29uc3RhbnRzLkpBVkFfTEFOR19JTlZPS0VfU0VSSUFMSVpFRExBTUJEQSwgdGhp
cyk7CisJfQogCiAJcHVibGljIGZpbmFsIFJlZmVyZW5jZUJpbmRpbmcgZ2V0SmF2YUxhbmdJbnZv
a2VNZXRob2RIYW5kbGVzTG9va3VwKCkgewogCQlDb21waWxhdGlvblVuaXRTY29wZSB1bml0U2Nv
cGUgPSBjb21waWxhdGlvblVuaXRTY29wZSgpOwpAQCAtMjcxMiw2ICsyNzIwLDEzIEBAIHB1Ymxp
YyBhYnN0cmFjdCBjbGFzcyBTY29wZSB7CiAJCXVuaXRTY29wZS5yZWNvcmRRdWFsaWZpZWRSZWZl
cmVuY2UoVHlwZUNvbnN0YW50cy5KQVZBX0xBTkdfVEhST1dBQkxFKTsKIAkJcmV0dXJuIHVuaXRT
Y29wZS5lbnZpcm9ubWVudC5nZXRSZXNvbHZlZFR5cGUoVHlwZUNvbnN0YW50cy5KQVZBX0xBTkdf
VEhST1dBQkxFLCB0aGlzKTsKIAl9CisJCisJcHVibGljIGZpbmFsIFJlZmVyZW5jZUJpbmRpbmcg
Z2V0SmF2YUxhbmdJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oKSB7CisJCUNvbXBpbGF0aW9uVW5p
dFNjb3BlIHVuaXRTY29wZSA9IGNvbXBpbGF0aW9uVW5pdFNjb3BlKCk7CisJCXVuaXRTY29wZS5y
ZWNvcmRRdWFsaWZpZWRSZWZlcmVuY2UoVHlwZUNvbnN0YW50cy5KQVZBX0xBTkdfSUxMRUdBTEFS
R1VNRU5URVhDRVBUSU9OKTsKKwkJcmV0dXJuIHVuaXRTY29wZS5lbnZpcm9ubWVudC5nZXRSZXNv
bHZlZFR5cGUoVHlwZUNvbnN0YW50cy5KQVZBX0xBTkdfSUxMRUdBTEFSR1VNRU5URVhDRVBUSU9O
LCB0aGlzKTsKKwl9CisJCiAJcHVibGljIGZpbmFsIFJlZmVyZW5jZUJpbmRpbmcgZ2V0SmF2YVV0
aWxJdGVyYXRvcigpIHsKIAkJQ29tcGlsYXRpb25Vbml0U2NvcGUgdW5pdFNjb3BlID0gY29tcGls
YXRpb25Vbml0U2NvcGUoKTsKIAkJdW5pdFNjb3BlLnJlY29yZFF1YWxpZmllZFJlZmVyZW5jZShU
eXBlQ29uc3RhbnRzLkpBVkFfVVRJTF9JVEVSQVRPUik7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9v
a3VwL1NvdXJjZVR5cGVCaW5kaW5nLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxl
ci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1NvdXJjZVR5cGVCaW5k
aW5nLmphdmEKaW5kZXggMjE1ODg0Zi4uZmM4MjExYiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1
cC9Tb3VyY2VUeXBlQmluZGluZy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvU291cmNlVHlwZUJp
bmRpbmcuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBD
b3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBD
b3B5cmlnaHQgKGMpIDIwMDAsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBB
bGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0
ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xp
cHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJp
YnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0zNCw4ICszNCwxMCBAQAogICoJCQkJCQkJ
CUJ1ZyA0MTcyOTUgLSBbMS44W1tudWxsXSBNYXNzYWdlIHR5cGUgYW5ub3RhdGVkIG51bGwgYW5h
bHlzaXMgdG8gZ2VsIHdlbGwgd2l0aCBkZWVwIGVuY29kZWQgdHlwZSBiaW5kaW5ncy4KICAqICAg
ICAgSmVzcGVyIFMgTW9sbGVyIDxqZXNwZXJAc2Vsc2thYmV0Lm9yZz4gLSAgQ29udHJpYnV0aW9u
cyBmb3IKICAqCQkJCQkJCQlCdWcgNDEyMTUzIC0gWzEuOF1bY29tcGlsZXJdIENoZWNrIHZhbGlk
aXR5IG9mIGFubm90YXRpb25zIHdoaWNoIG1heSBiZSByZXBlYXRhYmxlCi0gKiAgICAgVGlsbCBC
cnljaGN5IC0gQ29udHJpYnV0aW9ucyBmb3IKKyAqICAgICAgVGlsbCBCcnljaGN5IC0gQ29udHJp
YnV0aW9ucyBmb3IKICAqICAgICAJCQkJCQkJYnVnIDQxNTI2OSAtIE5vbk51bGxCeURlZmF1bHQg
aXMgbm90IGFsd2F5cyBpbmhlcml0ZWQgdG8gbmVzdGVkIGNsYXNzZXMKKyAqICAgICAgQW5keSBD
bGVtZW50IChHb1Bpdm90YWwsIEluYykgYWNsZW1lbnRAZ29waXZvdGFsLmNvbSAtIENvbnRyaWJ1
dGlvbnMgZm9yCisgKiAgICAgICAgICAgICAgICAgICAgICAgICAgCUJ1ZyA0MDUxMDQgLSBbMS44
XVtjb21waWxlcl1bY29kZWdlbl0gSW1wbGVtZW50IHN1cHBvcnQgZm9yIHNlcmlhbGl6ZWFibGUg
bGFtYmRhcwogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5sb29rdXA7CiAKQEAgLTYwMSw2ICs2MDMsMTcgQEAgcHVibGlj
IFN5bnRoZXRpY01ldGhvZEJpbmRpbmcgYWRkU3ludGhldGljTWV0aG9kKExhbWJkYUV4cHJlc3Np
b24gbGFtYmRhKSB7CiAJfSBlbHNlIHsKIAkJbGFtYmRhTWV0aG9kID0gbGFtYmRhTWV0aG9kc1sw
XTsKIAl9CisJCisJLy8gQ3JlYXRlIGEgJGRlc2VyaWFsaXplTGFtYmRhJCBtZXRob2QgaWYgbmVj
ZXNzYXJ5LCBvbmUgaXMgc2hhcmVkIGFtb25nc3QgYWxsIGxhbWJkYXMKKwlpZiAobGFtYmRhLmlz
U2VyaWFsaXphYmxlKSB7CisJCVN5bnRoZXRpY01ldGhvZEJpbmRpbmdbXSBkZXNlcmlhbGl6ZUxh
bWJkYU1ldGhvZHMgPSAoU3ludGhldGljTWV0aG9kQmluZGluZ1tdKSB0aGlzLnN5bnRoZXRpY3Nb
U291cmNlVHlwZUJpbmRpbmcuTUVUSE9EX0VNVUxdLmdldChUeXBlQ29uc3RhbnRzLkRFU0VSSUFM
SVpFX0xBTUJEQSk7CisJCWlmIChkZXNlcmlhbGl6ZUxhbWJkYU1ldGhvZHMgPT0gbnVsbCkgewor
CQkJU3ludGhldGljTWV0aG9kQmluZGluZyBkZXNlcmlhbGl6ZUxhbWJkYU1ldGhvZCA9IG5ldyBT
eW50aGV0aWNNZXRob2RCaW5kaW5nKHRoaXMpOworCQkJdGhpcy5zeW50aGV0aWNzW1NvdXJjZVR5
cGVCaW5kaW5nLk1FVEhPRF9FTVVMXS5wdXQoVHlwZUNvbnN0YW50cy5ERVNFUklBTElaRV9MQU1C
REEsZGVzZXJpYWxpemVMYW1iZGFNZXRob2RzID0gbmV3IFN5bnRoZXRpY01ldGhvZEJpbmRpbmdb
MV0pOworCQkJZGVzZXJpYWxpemVMYW1iZGFNZXRob2RzWzBdID0gZGVzZXJpYWxpemVMYW1iZGFN
ZXRob2Q7CisJCX0KKwl9CisJCiAJcmV0dXJuIGxhbWJkYU1ldGhvZDsKIH0KIApkaWZmIC0tZ2l0
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2xvb2t1cC9TeW50aGV0aWNNZXRob2RCaW5kaW5nLmphdmEgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9v
a3VwL1N5bnRoZXRpY01ldGhvZEJpbmRpbmcuamF2YQppbmRleCBiMjkzYWQ0Li5kMTE4MDViIDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1N5bnRoZXRpY01ldGhvZEJpbmRpbmcuamF2YQorKysg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvbG9va3VwL1N5bnRoZXRpY01ldGhvZEJpbmRpbmcuamF2YQpAQCAtMSw1ICsxLDUg
QEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMg
SUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTQg
SUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlz
IHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFp
bGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAK
ICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxl
IGF0CkBAIC0xMyw2ICsxMyw4IEBACiAgKgkJSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkg
YW5kIGltcGxlbWVudGF0aW9uCiAgKgkJU3RlcGhhbiBIZXJybWFubiAtIENvbnRyaWJ1dGlvbiBm
b3IKICAqCQkJCQkJCQlidWcgNDAwNzEwIC0gWzEuOF1bY29tcGlsZXJdIHN5bnRoZXRpYyBhY2Nl
c3MgdG8gZGVmYXVsdCBtZXRob2QgZ2VuZXJhdGVzIHdyb25nIGNvZGUKKyAqICAgICAgQW5keSBD
bGVtZW50IChHb1Bpdm90YWwsIEluYykgYWNsZW1lbnRAZ29waXZvdGFsLmNvbSAtIENvbnRyaWJ1
dGlvbnMgZm9yCisgKiAgICAgICAgICAgICAgICAgICAgICAgICAgCUJ1ZyA0MDUxMDQgLSBbMS44
XVtjb21waWxlcl1bY29kZWdlbl0gSW1wbGVtZW50IHN1cHBvcnQgZm9yIHNlcmlhbGl6ZWFibGUg
bGFtYmRhcwogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5sb29rdXA7CiAKQEAgLTUyLDYgKzU0LDcgQEAgcHVibGljIGNs
YXNzIFN5bnRoZXRpY01ldGhvZEJpbmRpbmcgZXh0ZW5kcyBNZXRob2RCaW5kaW5nIHsKIAlwdWJs
aWMgZmluYWwgc3RhdGljIGludCBBcnJheUNvbnN0cnVjdG9yID0gMTQ7IC8vIFhbXTo6bmV3CiAJ
cHVibGljIHN0YXRpYyBmaW5hbCBpbnQgQXJyYXlDbG9uZSA9IDE1OyAvLyBYW106OmNsb25lCiAg
ICAgcHVibGljIHN0YXRpYyBmaW5hbCBpbnQgRmFjdG9yeU1ldGhvZCA9IDE2OyAvLyBmb3IgaW5k
eSBjYWxsIHRvIHByaXZhdGUgY29uc3RydWN0b3IuCisgICAgcHVibGljIHN0YXRpYyBmaW5hbCBp
bnQgRGVzZXJpYWxpemVMYW1iZGEgPSAxNzsgLy8gRm9yIHN1cHBvcnRpbmcgbGFtYmRhIGRlc2Vy
aWFsaXphdGlvbi4KICAgICAKIAlwdWJsaWMgaW50IHNvdXJjZVN0YXJ0ID0gMDsgLy8gc3RhcnQg
cG9zaXRpb24gb2YgdGhlIG1hdGNoaW5nIGRlY2xhcmF0aW9uCiAJcHVibGljIGludCBpbmRleDsg
Ly8gdXNlZCBmb3Igc29ydGluZyBhY2Nlc3MgbWV0aG9kcyBpbiB0aGUgY2xhc3MgZmlsZQpAQCAt
Mjg0LDYgKzI4NywyMyBAQCBwdWJsaWMgY2xhc3MgU3ludGhldGljTWV0aG9kQmluZGluZyBleHRl
bmRzIE1ldGhvZEJpbmRpbmcgewogCX0KIAkKIAkvKioKKwkgKiBDb25zdHJ1Y3QgJGRlc2VyaWFs
aXplTGFtYmRhJCBtZXRob2QKKwkgKi8KKwlwdWJsaWMgU3ludGhldGljTWV0aG9kQmluZGluZyhT
b3VyY2VUeXBlQmluZGluZyBkZWNsYXJpbmdDbGFzcykgeworCQl0aGlzLmRlY2xhcmluZ0NsYXNz
ID0gZGVjbGFyaW5nQ2xhc3M7CisJCXRoaXMuc2VsZWN0b3IgPSBUeXBlQ29uc3RhbnRzLkRFU0VS
SUFMSVpFX0xBTUJEQTsKKwkJdGhpcy5tb2RpZmllcnMgPSBDbGFzc0ZpbGVDb25zdGFudHMuQWNj
UHJpdmF0ZSB8IENsYXNzRmlsZUNvbnN0YW50cy5BY2NTdGF0aWMgfCBDbGFzc0ZpbGVDb25zdGFu
dHMuQWNjU3ludGhldGljOworCQl0aGlzLnRhZ0JpdHMgfD0gKFRhZ0JpdHMuQW5ub3RhdGlvblJl
c29sdmVkIHwgVGFnQml0cy5EZXByZWNhdGVkQW5ub3RhdGlvblJlc29sdmVkKTsKKwkJdGhpcy50
aHJvd25FeGNlcHRpb25zID0gQmluZGluZy5OT19FWENFUFRJT05TOworCQl0aGlzLnJldHVyblR5
cGUgPSBkZWNsYXJpbmdDbGFzcy5zY29wZS5nZXRKYXZhTGFuZ09iamVjdCgpOworCSAgICB0aGlz
LnBhcmFtZXRlcnMgPSBuZXcgVHlwZUJpbmRpbmdbXXtkZWNsYXJpbmdDbGFzcy5zY29wZS5nZXRK
YXZhTGFuZ0ludm9rZVNlcmlhbGl6ZWRMYW1iZGEoKX07CisJICAgIHRoaXMucHVycG9zZSA9IFN5
bnRoZXRpY01ldGhvZEJpbmRpbmcuRGVzZXJpYWxpemVMYW1iZGE7CisJCVN5bnRoZXRpY01ldGhv
ZEJpbmRpbmdbXSBrbm93bkFjY2Vzc01ldGhvZHMgPSBkZWNsYXJpbmdDbGFzcy5zeW50aGV0aWNN
ZXRob2RzKCk7CisJCWludCBtZXRob2RJZCA9IGtub3duQWNjZXNzTWV0aG9kcyA9PSBudWxsID8g
MCA6IGtub3duQWNjZXNzTWV0aG9kcy5sZW5ndGg7CisJCXRoaXMuaW5kZXggPSBtZXRob2RJZDsK
Kwl9CisJCisJLyoqCiAJICogQ29uc3RydWN0IGVudW0gc3BlY2lhbCBtZXRob2RzOiB2YWx1ZXMg
b3IgdmFsdWVPZiBtZXRob2RzCiAJICovCiAJcHVibGljIFN5bnRoZXRpY01ldGhvZEJpbmRpbmco
U291cmNlVHlwZUJpbmRpbmcgZGVjbGFyaW5nRW51bSwgaW50IHN0YXJ0SW5kZXgsIGludCBlbmRJ
bmRleCkgewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9UeXBlQ29uc3RhbnRzLmphdmEgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvbG9va3VwL1R5cGVDb25zdGFudHMuamF2YQppbmRleCBmYWRhMjg2Li4zYjFmMzg2IDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1R5cGVDb25zdGFudHMuamF2YQorKysgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
bG9va3VwL1R5cGVDb25zdGFudHMuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFu
ZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFu
ZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBh
Y2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRl
cm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFu
aWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0yMSw2ICsyMSw4
IEBACiAgKiAgICBKZXNwZXIgUyBNb2xsZXIgLSBDb250cmlidXRpb25zIGZvcgogICoJCQkJCQkJ
CUJ1ZyA0MDUwNjYgLSBbMS44XVtjb21waWxlcl1bY29kZWdlbl0gSW1wbGVtZW50IGNvZGUgZ2Vu
ZXJhdGlvbiBpbmZyYXN0cnVjdHVyZSBmb3IgSlNSMzM1CiAgKgkJCQkJCQkJQnVnIDQxMjE1MyAt
IFsxLjhdW2NvbXBpbGVyXSBDaGVjayB2YWxpZGl0eSBvZiBhbm5vdGF0aW9ucyB3aGljaCBtYXkg
YmUgcmVwZWF0YWJsZQorICogICAgQW5keSBDbGVtZW50IChHb1Bpdm90YWwsIEluYykgYWNsZW1l
bnRAZ29waXZvdGFsLmNvbSAtIENvbnRyaWJ1dGlvbnMgZm9yCisgKiAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgIEJ1ZyA0MDUxMDQgLSBbMS44XVtjb21waWxlcl1bY29kZWdlbl0gSW1wbGVt
ZW50IHN1cHBvcnQgZm9yIHNlcmlhbGl6ZWFibGUgbGFtYmRhcwogICoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXA7
CiAKQEAgLTkyLDYgKzk0LDcgQEAgcHVibGljIGludGVyZmFjZSBUeXBlQ29uc3RhbnRzIHsKICAg
ICBjaGFyW10gVVBQRVJfQU5OT1RBVElPTl9UWVBFID0gIkFOTk9UQVRJT05fVFlQRSIudG9DaGFy
QXJyYXkoKTsgLy8kTk9OLU5MUy0xJAogICAgIGNoYXJbXSBVUFBFUl9QQUNLQUdFID0gIlBBQ0tB
R0UiLnRvQ2hhckFycmF5KCk7IC8vJE5PTi1OTFMtMSQKICAgICBjaGFyW10gQU5PTllNT1VTX01F
VEhPRCA9ICJsYW1iZGEkIi50b0NoYXJBcnJheSgpOyAvLyROT04tTkxTLTEkCisgICAgY2hhcltd
IERFU0VSSUFMSVpFX0xBTUJEQSA9ICIkZGVzZXJpYWxpemVMYW1iZGEkIi50b0NoYXJBcnJheSgp
OyAvLyROT04tTkxTLTEkCiAgICAgCiAJLy8ganNyMzA4CiAJY2hhcltdIFRZUEVfVVNFX1RBUkdF
VCAgPSAiVFlQRV9VU0UiLnRvQ2hhckFycmF5KCk7IC8vJE5PTi1OTFMtMSQKQEAgLTE5Myw2ICsx
OTYsNyBAQCBwdWJsaWMgaW50ZXJmYWNlIFR5cGVDb25zdGFudHMgewogCQkJIk1ldGhvZEhhbmRs
ZSRQb2x5bW9ycGhpY1NpZ25hdHVyZSIudG9DaGFyQXJyYXkoKSAvLyROT04tTkxTLTEkCiAJfTsK
IAljaGFyW11bXSBKQVZBX0xBTkdfSU5WT0tFX0xBTUJEQU1FVEFGQUNUT1JZID0ge0pBVkEsIExB
TkcsIElOVk9LRSwgIkxhbWJkYU1ldGFmYWN0b3J5Ii50b0NoYXJBcnJheSgpfTsgLy8kTk9OLU5M
Uy0xJAorCWNoYXJbXVtdIEpBVkFfTEFOR19JTlZPS0VfU0VSSUFMSVpFRExBTUJEQSA9IHtKQVZB
LCBMQU5HLCBJTlZPS0UsICJTZXJpYWxpemVkTGFtYmRhIi50b0NoYXJBcnJheSgpfTsgLy8kTk9O
LU5MUy0xJAogCWNoYXJbXVtdIEpBVkFfTEFOR19JTlZPS0VfTUVUSE9ESEFORExFUyA9IHtKQVZB
LCBMQU5HLCBJTlZPS0UsICJNZXRob2RIYW5kbGVzIi50b0NoYXJBcnJheSgpfTsgLy8kTk9OLU5M
Uy0xJAogCWNoYXJbXVtdIEpBVkFfTEFOR19BVVRPQ0xPU0VBQkxFID0gIHtKQVZBLCBMQU5HLCAi
QXV0b0Nsb3NlYWJsZSIudG9DaGFyQXJyYXkoKX07IC8vJE5PTi1OTFMtMSQKIAljaGFyW10gQ0xP
U0UgPSAiY2xvc2UiLnRvQ2hhckFycmF5KCk7IC8vJE5PTi1OTFMtMSQK
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>238810</attachid>
            <date>2014-01-09 04:59:00 -0500</date>
            <delta_ts>2014-04-02 09:30:59 -0400</delta_ts>
            <desc>Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>16163</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL05lZ2F0aXZlTGFtYmRh
RXhwcmVzc2lvbnNUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxl
ci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9OZWdh
dGl2ZUxhbWJkYUV4cHJlc3Npb25zVGVzdC5qYXZhCmluZGV4IDJkNDY4MDAuLjhiYWE0MzIgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL05lZ2F0aXZlTGFtYmRhRXhw
cmVzc2lvbnNUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGls
ZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTmVn
YXRpdmVMYW1iZGFFeHByZXNzaW9uc1Rlc3QuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMTEsIDIwMTMgSUJNIENvcnBvcmF0
aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMTEsIDIwMTQgSUJNIENvcnBvcmF0
aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5k
IHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIg
dGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFj
Y29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC01MDQ2
LDggKzUwNDYsNyBAQCB0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKIAkJCQkiMS4gRVJST1IgaW4gWC5q
YXZhIChhdCBsaW5lIDIwKVxuIiArIAogCQkJCSIJbmV3IFgoKS5mb28oKHMpLT57fSk7XG4iICsg
CiAJCQkJIgkgICAgICAgIF5eXlxuIiArIAotCQkJCSJUaGUgbWV0aG9kIGZvbyhJKSBpbiB0aGUg
dHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoPG5vIHR5cGU+IHMp
IC0+IHtcbiIgKyAKLQkJCQkifSlcbiIgKyAKKwkJCQkiVGhlIG1ldGhvZCBmb28oSSkgaW4gdGhl
IHR5cGUgWCBpcyBub3QgYXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoKD8gcykgLT4ge30s
IHZvaWQpKVxuIiArCiAJCQkJIi0tLS0tLS0tLS1cbiIgKyAKIAkJCQkiMi4gRVJST1IgaW4gWC5q
YXZhIChhdCBsaW5lIDIwKVxuIiArIAogCQkJCSIJbmV3IFgoKS5mb28oKHMpLT57fSk7XG4iICsg
CkBAIC01MDg5LDkgKzUwODgsNyBAQCB0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKIAkJCQkiMS4gRVJS
T1IgaW4gWC5qYXZhIChhdCBsaW5lIDE1KVxuIiArIAogCQkJCSIJbmV3IFgoKS5mb28oKCktPnsg
cmV0dXJuIFwiXCI7fSk7XG4iICsgCiAJCQkJIgkgICAgICAgIF5eXlxuIiArIAotCQkJCSJUaGUg
bWV0aG9kIGZvbyhJKSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJn
dW1lbnRzICgoKSAtPiB7XG4iICsgCi0JCQkJIiAgcmV0dXJuIFwiXCI7XG4iICsgCi0JCQkJIn0p
XG4iICsgCisJCQkJIlRoZSBtZXRob2QgZm9vKEkpIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxp
Y2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKCgpIC0+IHt9LCB2b2lkKSlcbiIgKwogCQkJCSItLS0t
LS0tLS0tXG4iICsgCiAJCQkJIjIuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxNSlcbiIgKyAK
IAkJCQkiCW5ldyBYKCkuZm9vKCgpLT57IHJldHVybiBcIlwiO30pO1xuIiArIApAQCAtNTI0Miw5
ICs1MjM5LDcgQEAgdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCiAJCQkJIjEuIEVSUk9SIGluIFguamF2
YSAoYXQgbGluZSAxMSlcbiIgKyAKIAkJCQkiCW5ldyBYKCkuZm9vKCgpLT57IHJldHVybiAxMDsg
fSk7XG4iICsgCiAJCQkJIgkgICAgICAgIF5eXlxuIiArIAotCQkJCSJUaGUgbWV0aG9kIGZvbyhJ
KSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoKSAt
PiB7XG4iICsgCi0JCQkJIiAgcmV0dXJuIDEwO1xuIiArIAotCQkJCSJ9KVxuIiArIAorCQkJCSJU
aGUgbWV0aG9kIGZvbyhJKSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUg
YXJndW1lbnRzICgoKSAtPiB7fSwgdm9pZCkpXG4iICsKIAkJCQkiLS0tLS0tLS0tLVxuIiArIAog
CQkJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTEpXG4iICsgCiAJCQkJIgluZXcgWCgp
LmZvbygoKS0+eyByZXR1cm4gMTA7IH0pO1xuIiArIApAQCAtNTI5OCw4ICs1MjkzLDcgQEAgdGhp
cy5ydW5OZWdhdGl2ZVRlc3QoCiAJCQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxMSlc
biIgKyAKIAkJCQkiCW5ldyBYKCkuZm9vKChPYmplY3QgbyktPnt9KTtcbiIgKyAKIAkJCQkiCSAg
ICAgICAgXl5eXG4iICsgCi0JCQkJIlRoZSBtZXRob2QgZm9vKEkpIGluIHRoZSB0eXBlIFggaXMg
bm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKChPYmplY3QgbykgLT4ge1xuIiArIAot
CQkJCSJ9KVxuIiArIAorCQkJCSJUaGUgbWV0aG9kIGZvbyhJKSBpbiB0aGUgdHlwZSBYIGlzIG5v
dCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoPyBvKSAtPiB7fSwgdm9pZCkpXG4iICsK
IAkJCQkiLS0tLS0tLS0tLVxuIiArIAogCQkJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUg
MTEpXG4iICsgCiAJCQkJIgluZXcgWCgpLmZvbygoT2JqZWN0IG8pLT57fSk7XG4iICsgCkBAIC01
NTE0LDkgKzU1MDgsNyBAQCBwdWJsaWMgdm9pZCB0ZXN0NDAxODQ1YSgpIHsKIAkJCSIzLiBFUlJP
UiBpbiBYLmphdmEgKGF0IGxpbmUgOSlcbiIgKyAKIAkJCSIJZm9vKCh4KS0+IHtyZXR1cm4gMTA7
fSk7XG4iICsgCiAJCQkiCV5eXlxuIiArIAotCQkJIlRoZSBtZXRob2QgZm9vKElbXS4uLikgaW4g
dGhlIHR5cGUgWCBpcyBub3QgYXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoKDxubyB0eXBl
PiB4KSAtPiB7XG4iICsgCi0JCQkiICByZXR1cm4gMTA7XG4iICsgCi0JCQkifSlcbiIgKyAKKwkJ
CSJUaGUgbWV0aG9kIGZvbyhJW10uLi4pIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2FibGUg
Zm9yIHRoZSBhcmd1bWVudHMgKCg/IHgpIC0+IHt9LCAgPykpXG4iICsKIAkJCSItLS0tLS0tLS0t
XG4iICsgCiAJCQkiNC4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDkpXG4iICsgCiAJCQkiCWZv
bygoeCktPiB7cmV0dXJuIDEwO30pO1xuIiArIApAQCAtNTc0NywxMCArNTczOSw3IEBAIHB1Ymxp
YyB2b2lkIHRlc3Q0MDE5MzlhKCkgewogCQkJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUg
OClcbiIgKyAKIAkJCQkiCWZvbygoKS0+eyBpZiAoMSA9PSAyKSB0aHJvdyBuZXcgUnVudGltZUV4
Y2VwdGlvbigpOyB9KTtcbiIgKyAKIAkJCQkiCV5eXlxuIiArIAotCQkJCSJUaGUgbWV0aG9kIGZv
byhJKSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgo
KSAtPiB7XG4iICsgCi0JCQkJIiAgaWYgKCgxID09IDIpKVxuIiArIAotCQkJCSIgICAgICB0aHJv
dyBuZXcgUnVudGltZUV4Y2VwdGlvbigpO1xuIiArIAotCQkJCSJ9KVxuIiArIAorCQkJCSJUaGUg
bWV0aG9kIGZvbyhJKSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJn
dW1lbnRzICgoKSAtPiB7fSwgaW50KSlcbiIgKwogCQkJCSItLS0tLS0tLS0tXG4iKTsKIH0KIC8v
IGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MDE5MzksIFsx
LjhdW2NvbXBpbGVyXSBJbmNvcnJlY3Qgc2hhcGUgYW5hbHlzaXMgbGVhZHMgdG8gbWV0aG9kIHJl
c29sdXRpb24gZmFpbHVyZSAuCkBAIC03OTIwLDYgKzc5MDksNzUgQEAgcHVibGljIHZvaWQgdGVz
dDQyNDQ0NCgpIHRocm93cyBFeGNlcHRpb24gewogCQkiQ29uc3RydWN0ZWQgYXJyYXkgaW50W10g
Y2Fubm90IGJlIGFzc2lnbmVkIHRvIEludGVnZXJbXSBhcyByZXF1aXJlZCBpbiB0aGUgaW50ZXJm
YWNlIGRlc2NyaXB0b3IgIFxuIiArIAogCQkiLS0tLS0tLS0tLVxuIik7CiB9CisvLyBodHRwczov
L2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDI0MTU0CisvLyBFeGFtcGxl
IGNvcGllZCBmcm9tIGJ1ZyByZXBvcnQuCitwdWJsaWMgdm9pZCB0ZXN0NDI0MTU0YSgpIHRocm93
cyBFeGNlcHRpb24geworCXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQluZXcgU3RyaW5nW10gewor
CQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEudXRpbC5MaXN0OyIgKworCQkJInB1YmxpYyBj
bGFzcyBYIHtcbiIgKworCQkJIgl2b2lkIGZvbyhMaXN0PFByb2Nlc3M+IGxpc3QpIHtcbiIgKwor
CQkJIgkJbGlzdC5yZW1vdmVJZigoaW50IHgpIC0+IFwiXCIpO1xuIiArCisJCQkiCX1cbiIgKwor
CQkJIn1cbiIsCisJCX0sCisJCSItLS0tLS0tLS0tXG4iICsKKwkJIjEuIEVSUk9SIGluIFguamF2
YSAoYXQgbGluZSAzKVxuIiArCisJCSIJbGlzdC5yZW1vdmVJZigoaW50IHgpIC0+IFwiXCIpO1xu
IiArCisJICAgICAiCSAgICAgXl5eXl5eXl5cbiIgKworCSAgICAgIlRoZSBtZXRob2QgcmVtb3Zl
SWYoUHJlZGljYXRlPD8gc3VwZXIgUHJvY2Vzcz4pIGluIHRoZSB0eXBlIENvbGxlY3Rpb248UHJv
Y2Vzcz4gaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKCg/IHgpIC0+IHt9LCBi
b29sZWFuKSlcbiIgKworCSAgICAgIi0tLS0tLS0tLS1cbiIgKworCSAgICAgIjIuIEVSUk9SIGlu
IFguamF2YSAoYXQgbGluZSAzKVxuIiArCisJICAgICAiCWxpc3QucmVtb3ZlSWYoKGludCB4KSAt
PiBcIlwiKTtcbiIgKworCSAgICAgIgkgICAgICAgICAgICAgIF5eXl5eXl5eXl5eXl5cbiIgKwor
CSAgICAgIlR5cGUgbWlzbWF0Y2g6IGNhbm5vdCBjb252ZXJ0IGZyb20gUHJlZGljYXRlPGludD4g
dG8gUHJlZGljYXRlPD8gc3VwZXIgUHJvY2Vzcz5cbiIgKworCSAgICAgIi0tLS0tLS0tLS1cbiIp
OworfQorLy9odHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDI0
MTU0CisvL1ZhcmlhdGlvbnMgd2hlcmUgcmV0dXJuIHR5cGVzIG9yIGFyZ3VtZW50cyBtaXNtYXRj
aCBvciBib3RoLgorcHVibGljIHZvaWQgdGVzdDQyNDE1NGIoKSB0aHJvd3MgRXhjZXB0aW9uIHsK
Kwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKKwkJCW5ldyBTdHJpbmdbXSB7CisJCQkJIlguamF2YSIs
CisJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJCSIJaW50ZXJmYWNlIEkge2ludCBmb28o
aW50IHgpO31cbiIgKworCQkJCSIJdm9pZCBmb28yKEkgaSkge31cbiIgKworCQkJCSIJdm9pZCBm
b28oKSB7fVxuIiArCisJCQkJIgl2b2lkIGJhcigpIHtcbiIgKworCQkJCSIJCWZvbygwLCAoaW50
IHgsIGludCB5KSAtPiB7cmV0dXJuIDI7fSwgMCk7XG4iICsKKwkJCQkiCQlmb28yKChpbnQgeCkg
LT4gXCJcIik7XG4iKworCQkJCSIJCWZvbzIoKGZsb2F0IHgpIC0+IDApO1xuIiArCisJCQkJIiAg
IH1cbiIgKworCQkJCSJ9XG4iCisJCQl9LAorCQkJIi0tLS0tLS0tLS1cbiIgKworCQkJIjEuIEVS
Uk9SIGluIFguamF2YSAoYXQgbGluZSA2KVxuIiArCisJCQkiCWZvbygwLCAoaW50IHgsIGludCB5
KSAtPiB7cmV0dXJuIDI7fSwgMCk7XG4iICsKKwkJCSIJXl5eXG4iICsKKwkJCSJUaGUgbWV0aG9k
IGZvbygpIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMg
KGludCwgKD8geCwgPyB5KSAtPiB7fSwgID8pLCBpbnQpXG4iICsKKwkJCSItLS0tLS0tLS0tXG4i
ICsKKwkJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNylcbiIgKworCQkJIglmb28yKChp
bnQgeCkgLT4gXCJcIik7XG4iICsKKwkJCSIJXl5eXlxuIiArCisJCQkiVGhlIG1ldGhvZCBmb28y
KFguSSkgaW4gdGhlIHR5cGUgWCBpcyBub3QgYXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAo
KD8geCkgLT4ge30sIGludCkpXG4iICsKKwkJCSItLS0tLS0tLS0tXG4iICsKKwkJCSIzLiBFUlJP
UiBpbiBYLmphdmEgKGF0IGxpbmUgNylcbiIgKworCQkJIglmb28yKChpbnQgeCkgLT4gXCJcIik7
XG4iICsKKwkJCSIJICAgICAgICAgICAgICAgIF5eXG4iICsKKwkJCSJUeXBlIG1pc21hdGNoOiBj
YW5ub3QgY29udmVydCBmcm9tIFN0cmluZyB0byBpbnRcbiIgKworCQkJIi0tLS0tLS0tLS1cbiIg
KworCQkJIjQuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA4KVxuIiArCisJCQkiCWZvbzIoKGZs
b2F0IHgpIC0+IDApO1xuIiArCisJCQkiCV5eXl5cbiIgKworCQkJIlRoZSBtZXRob2QgZm9vMihY
LkkpIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKCg/
IHgpIC0+IHt9LCBpbnQpKVxuIiArCisJCQkiLS0tLS0tLS0tLVxuIiArCisJCQkiNS4gRVJST1Ig
aW4gWC5qYXZhIChhdCBsaW5lIDgpXG4iICsKKwkJCSIJZm9vMigoZmxvYXQgeCkgLT4gMCk7XG4i
ICsKKwkJCSIJICAgICAgXl5eXl5cbiIgKworCQkJIkxhbWJkYSBleHByZXNzaW9uJ3MgcGFyYW1l
dGVyIHggaXMgZXhwZWN0ZWQgdG8gYmUgb2YgdHlwZSBpbnRcbiIgKworCQkJIi0tLS0tLS0tLS1c
biIpOworfQogcHVibGljIHN0YXRpYyBDbGFzcyB0ZXN0Q2xhc3MoKSB7CiAJcmV0dXJuIE5lZ2F0
aXZlTGFtYmRhRXhwcmVzc2lvbnNUZXN0LmNsYXNzOwogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Rv
bS9BU1RDb252ZXJ0ZXIxN1Rlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1v
ZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMTdUZXN0
LmphdmEKaW5kZXggMzc1MTZhZS4uZjM3ZDE2YSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RD
b252ZXJ0ZXIxN1Rlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2Rl
bC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlcjE3VGVzdC5q
YXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdo
dCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdo
dCAoYykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdo
dHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMK
ICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVi
bGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24s
IGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTg5OCw3ICs4OTgsNyBAQCBwdWJsaWMgY2xhc3MgQVNU
Q29udmVydGVyMTdUZXN0IGV4dGVuZHMgQ29udmVydGVyVGVzdFNldHVwIHsKIAkJCiAJCVN0cmlu
ZyBlcnJvciA9ICJMYW1iZGEgZXhwcmVzc2lvbnMgYXJlIGFsbG93ZWQgb25seSBhdCBzb3VyY2Ug
bGV2ZWwgMS44IG9yIGFib3ZlXG4iICsgCiAJCQkJIkxhbWJkYSBleHByZXNzaW9ucyBhcmUgYWxs
b3dlZCBvbmx5IGF0IHNvdXJjZSBsZXZlbCAxLjggb3IgYWJvdmVcbiIgKyAKLQkJCQkiVGhlIG1l
dGhvZCBmb28oWC5TdHJpbmdUb0ludCkgaW4gdGhlIHR5cGUgWCBpcyBub3QgYXBwbGljYWJsZSBm
b3IgdGhlIGFyZ3VtZW50cyAoKFN0cmluZyBzKSAtPiBzLmxlbmd0aCgpKVxuIiArIAorCQkJCSJU
aGUgbWV0aG9kIGZvbyhYLlN0cmluZ1RvSW50KSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNh
YmxlIGZvciB0aGUgYXJndW1lbnRzICgoPyBzKSAtPiB7fSwgID8pKSlcbiIgKwogCQkJCSJMYW1i
ZGEgZXhwcmVzc2lvbnMgYXJlIGFsbG93ZWQgb25seSBhdCBzb3VyY2UgbGV2ZWwgMS44IG9yIGFi
b3ZlXG4iICsgCiAJCQkJIkxhbWJkYSBleHByZXNzaW9ucyBhcmUgYWxsb3dlZCBvbmx5IGF0IHNv
dXJjZSBsZXZlbCAxLjggb3IgYWJvdmVcbiIgKyAKIAkJCQkiVGhlIG1ldGhvZCBiYXIoWC5SZWR1
Y2VJbnQpIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMg
KChpbnQgeCwgaW50IHkpIC0+ICh4ICsgeSkpXG4iICsgCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9t
L0FTVENvbnZlcnRlcjE4VGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9k
ZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxOFRlc3Qu
amF2YQppbmRleCA1YTY1OTU2Li41N2U0ZWY2IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENv
bnZlcnRlcjE4VGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVs
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0Lmph
dmEKQEAgLTM2NzksNyArMzY3OSw3IEBAIHB1YmxpYyBjbGFzcyBBU1RDb252ZXJ0ZXIxOFRlc3Qg
ZXh0ZW5kcyBDb252ZXJ0ZXJUZXN0U2V0dXAgewogCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVChj
b250ZW50cywgdGhpcy53b3JraW5nQ29weSwgZmFsc2UpOwogCQlhc3NlcnRFcXVhbHMoIk5vdCBh
IGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9k
ZVR5cGUoKSk7CiAJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRp
b25Vbml0KSBub2RlOwotCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAyLCAi
VGhlIG1ldGhvZCBnb28oSSkgaW4gdGhlIHR5cGUgWCBpcyBub3QgYXBwbGljYWJsZSBmb3IgdGhl
IGFyZ3VtZW50cyAoKDxubyB0eXBlPiBzKSAtPiAwKVxuIiArIAorCQlhc3NlcnRQcm9ibGVtc1Np
emUoY29tcGlsYXRpb25Vbml0LCAyLCAiVGhlIG1ldGhvZCBnb28oSSkgaW4gdGhlIHR5cGUgWCBp
cyBub3QgYXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoKD8gcykgLT4ge30sICA/KSlcbiIg
KwogCQkJCQkJCQkJCQkJIlRoZSB0YXJnZXQgdHlwZSBvZiB0aGlzIGV4cHJlc3Npb24gbXVzdCBi
ZSBhIGZ1bmN0aW9uYWwgaW50ZXJmYWNlIik7CiAJCW5vZGUgPSBnZXRBU1ROb2RlKGNvbXBpbGF0
aW9uVW5pdCwgMSk7CiAJCWFzc2VydEVxdWFscygiTm90IGEgdHlwZSBkZWNsYXJhdGlvbiIsIEFT
VE5vZGUuVFlQRV9ERUNMQVJBVElPTiwgbm9kZS5nZXROb2RlVHlwZSgpKTsKZGlmZiAtLWdpdCBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9jb3JlL2NvbXBp
bGVyL0lQcm9ibGVtLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvY29yZS9jb21waWxlci9JUHJvYmxlbS5qYXZhCmluZGV4IGUwMWZiZjMuLmU0YjM0
ZmUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9jb3JlL2NvbXBpbGVyL0lQcm9ibGVtLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2NvcmUvY29tcGlsZXIvSVByb2JsZW0uamF2YQpA
QCAtNDkyLDYgKzQ5Miw4IEBAIHZvaWQgc2V0U291cmNlU3RhcnQoaW50IHNvdXJjZVN0YXJ0KTsK
IAlpbnQgQm9keUZvck5hdGl2ZU1ldGhvZCA9IEludGVybmFsICsgTWV0aG9kUmVsYXRlZCArIDEx
MjsKIAlpbnQgQm9keUZvckFic3RyYWN0TWV0aG9kID0gSW50ZXJuYWwgKyBNZXRob2RSZWxhdGVk
ICsgMTEzOwogCWludCBOb01lc3NhZ2VTZW5kT25CYXNlVHlwZSA9IE1ldGhvZFJlbGF0ZWQgKyAx
MTQ7CisgICAgLy8gVGhpcyBtZXNzYWdlIG5lZWRzIHRvIGJlIG1vZGlmaWVkLgorCS8vIFNlZSBp
ZiB0aGUgZXJyb3Igb2NjdXJzIGZvciBwYXJhbWV0ZXIgbWlzbWF0Y2ggb3IgZXJyb3IgbWlzbWF0
Y2guCiAJaW50IFBhcmFtZXRlck1pc21hdGNoID0gTWV0aG9kUmVsYXRlZCArIDExNTsKIAlpbnQg
Tm9NZXNzYWdlU2VuZE9uQXJyYXlUeXBlID0gTWV0aG9kUmVsYXRlZCArIDExNjsKIAkvKiogQHNp
bmNlIDIuMSAqLwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Qb2x5VHlwZUJpbmRpbmcuamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9sb29rdXAvUG9seVR5cGVCaW5kaW5nLmphdmEKaW5kZXggNWI4MTUxMC4uZmQ0
YzI5MCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Qb2x5VHlwZUJpbmRpbmcuamF2YQorKysg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29tcGlsZXIvbG9va3VwL1BvbHlUeXBlQmluZGluZy5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAxMyBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFj
Y29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVy
bXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5p
ZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTYxLDQgKzYxLDgg
QEAgcHVibGljIGNsYXNzIFBvbHlUeXBlQmluZGluZyBleHRlbmRzIFR5cGVCaW5kaW5nIHsKIAlw
dWJsaWMgaW50IGtpbmQoKSB7CiAJCXJldHVybiBCaW5kaW5nLlBPTFlfVFlQRTsKIAl9CisKKwlw
dWJsaWMgRXhwcmVzc2lvbiBnZXRFeHByZXNzaW9uKCkgeworCQlyZXR1cm4gdGhpcy5leHByZXNz
aW9uOworCX0KIH0KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlCmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvcHJvYmxlbS9Qcm9ibGVtUmVwb3J0ZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL1Byb2JsZW1S
ZXBvcnRlci5qYXZhCmluZGV4IDM3MmYzYjEuLjNjNGQwMmQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9w
cm9ibGVtL1Byb2JsZW1SZXBvcnRlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9wcm9ibGVtL1Byb2JsZW1S
ZXBvcnRlci5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAq
IENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAq
IENvcHlyaWdodCAoYykgMjAwMCwgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAq
IEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBt
YXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVj
bGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0
cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTE1MCw2ICsxNTAsNyBAQCBpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5NZXRob2RCaW5kaW5nOwog
aW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuTWV0aG9kU2Nv
cGU7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5QYWNr
YWdlQmluZGluZzsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9v
a3VwLlBhcmFtZXRlcml6ZWRHZW5lcmljTWV0aG9kQmluZGluZzsKK2ltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlBvbHlUeXBlQmluZGluZzsKIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlByb2JsZW1NZXRob2RCaW5k
aW5nOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuUHJv
YmxlbVJlYXNvbnM7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxv
b2t1cC5Qcm9ibGVtUmVmZXJlbmNlQmluZGluZzsKQEAgLTM5OTEsNiArMzk5Miw1MCBAQCBwdWJs
aWMgdm9pZCBpbnZhbGlkRmlsZU5hbWVGb3JQYWNrYWdlQW5ub3RhdGlvbnMoQW5ub3RhdGlvbiBh
bm5vdGF0aW9uKSB7CiAJCQlhbm5vdGF0aW9uLnNvdXJjZUVuZCk7CiB9CiAKK3ByaXZhdGUgU3Ry
aW5nIHBhcmFtZXRlck5hbWVzKFR5cGVCaW5kaW5nW10gdHlwZXMsIGJvb2xlYW4gbWFrZVNob3J0
LCBib29sZWFuIHNob3dOdWxsQW5ub3RhdGlvbnMpIHsKKwlTdHJpbmdbXSBlcnJTdHIgPSBuZXcg
U3RyaW5nW3R5cGVzLmxlbmd0aF07CisJZm9yIChpbnQgaSA9IDA7IGkgPCB0eXBlcy5sZW5ndGg7
IGkrKykgeworCQlUeXBlQmluZGluZyBwYXJhbSA9IHR5cGVzW2ldOworCQlpZiAoIShwYXJhbSBp
bnN0YW5jZW9mIFBvbHlUeXBlQmluZGluZykpIHsKKwkJCWVyclN0cltpXSA9IHR5cGVzQXNTdHJp
bmcobmV3IFR5cGVCaW5kaW5nW117cGFyYW19LCBtYWtlU2hvcnQsIHNob3dOdWxsQW5ub3RhdGlv
bnMpOworCQkJY29udGludWU7CisJCX0KKwkJUG9seVR5cGVCaW5kaW5nIHBvbHlUeXBlQmluZGlu
ZyA9IChQb2x5VHlwZUJpbmRpbmcpIHBhcmFtOworCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBw
b2x5VHlwZUJpbmRpbmcuZ2V0RXhwcmVzc2lvbigpOworCQlpZiAoIShleHByZXNzaW9uIGluc3Rh
bmNlb2YgTGFtYmRhRXhwcmVzc2lvbikpIHsKKwkJCWVyclN0cltpXSA9IHR5cGVzQXNTdHJpbmco
bmV3IFR5cGVCaW5kaW5nW117cGFyYW19LCBtYWtlU2hvcnQsIHNob3dOdWxsQW5ub3RhdGlvbnMp
OworCQkJY29udGludWU7CisJCX0KKwkJTGFtYmRhRXhwcmVzc2lvbiBsYW1iZGFFeHByZXNzaW9u
ID0gKExhbWJkYUV4cHJlc3Npb24pIGV4cHJlc3Npb247CisJCUFyZ3VtZW50W10gYXJndW1lbnRz
ID0gbGFtYmRhRXhwcmVzc2lvbi5hcmd1bWVudHMoKTsKKwkJU3RyaW5nQnVmZmVyIGJ1ZmZlciA9
IG5ldyBTdHJpbmdCdWZmZXIoMTApOworCQlidWZmZXIuYXBwZW5kKCcoJyk7CisJCWZvciAoaW50
IGogPSAwOyBqIDwgYXJndW1lbnRzLmxlbmd0aDsgaisrKSB7CisJCQlpZiAoaiAhPSAwKSB7CisJ
CQkJYnVmZmVyLmFwcGVuZCgiLCAiKTsgLy8kTk9OLU5MUy0xJAorCQkJfQorCQkJYnVmZmVyLmFw
cGVuZCgiPyAiKTsgLy8kTk9OLU5MUy0xJAorCQkJYnVmZmVyLmFwcGVuZChuZXcgU3RyaW5nKGFy
Z3VtZW50c1tqXS5uYW1lKSk7CisJCX0KKwkJYnVmZmVyLmFwcGVuZCgiKSAtPiB7fSwgIik7IC8v
JE5PTi1OTFMtMSQKKwkJaWYgKGxhbWJkYUV4cHJlc3Npb24uYmluZGluZyAhPSBudWxsKSB7CisJ
CQlidWZmZXIuYXBwZW5kKHR5cGVzQXNTdHJpbmcobmV3IFR5cGVCaW5kaW5nW117bGFtYmRhRXhw
cmVzc2lvbi5iaW5kaW5nLnJldHVyblR5cGV9LCBtYWtlU2hvcnQsIHNob3dOdWxsQW5ub3RhdGlv
bnMpKTsKKwkJfSBlbHNlIHsKKwkJCWJ1ZmZlci5hcHBlbmQoIiA/Iik7IC8vJE5PTi1OTFMtMSQK
KwkJfQorCQlidWZmZXIuYXBwZW5kKCIpIik7IC8vJE5PTi1OTFMtMSQKKwkJZXJyU3RyW2ldID0g
YnVmZmVyLnRvU3RyaW5nKCk7CisJfQorCVN0cmluZ0J1ZmZlciBidWZmZXIgPSBuZXcgU3RyaW5n
QnVmZmVyKDEwKTsKKwlmb3IgKGludCBpID0gMDsgaSA8IGVyclN0ci5sZW5ndGg7IGkrKykgewor
CQlpZiAoaSAhPSAwKSB7CisJCQlidWZmZXIuYXBwZW5kKCIsICIpOyAvLyROT04tTkxTLTEkCisJ
CX0KKwkJYnVmZmVyLmFwcGVuZChlcnJTdHJbaV0pOworCX0KKwlyZXR1cm4gYnVmZmVyLnRvU3Ry
aW5nKCk7Cit9CisKIHB1YmxpYyB2b2lkIGludmFsaWRNZXRob2QoTWVzc2FnZVNlbmQgbWVzc2Fn
ZVNlbmQsIE1ldGhvZEJpbmRpbmcgbWV0aG9kKSB7CiAJaWYgKGlzUmVjb3ZlcmVkTmFtZShtZXNz
YWdlU2VuZC5zZWxlY3RvcikpIHJldHVybjsKIApAQCAtNDAxNCwxNyArNDA1OSwxOCBAQCBwdWJs
aWMgdm9pZCBpbnZhbGlkTWV0aG9kKE1lc3NhZ2VTZW5kIG1lc3NhZ2VTZW5kLCBNZXRob2RCaW5k
aW5nIG1ldGhvZCkgewogCQkJICAgIAlpZiAoKHNob3duTWV0aG9kLnRhZ0JpdHMgJiBUYWdCaXRz
Lkhhc01pc3NpbmdUeXBlKSAhPSAwKSB7CiAJCQkJCQltaXNzaW5nVHlwZUluTWV0aG9kKG1lc3Nh
Z2VTZW5kLCBzaG93bk1ldGhvZCk7CiAJCQkJCQlyZXR1cm47Ci0JCQkgICAgCX0KKwkJCQkJfQor
CiAJCQkJCVN0cmluZyBjbG9zZXN0UGFyYW1ldGVyVHlwZU5hbWVzID0gdHlwZXNBc1N0cmluZyhz
aG93bk1ldGhvZCwgZmFsc2UpOwogCQkJCQlTdHJpbmcgcGFyYW1ldGVyVHlwZU5hbWVzID0gdHlw
ZXNBc1N0cmluZyhwcm9ibGVtTWV0aG9kLnBhcmFtZXRlcnMsIGZhbHNlKTsKIAkJCQkJU3RyaW5n
IGNsb3Nlc3RQYXJhbWV0ZXJUeXBlU2hvcnROYW1lcyA9IHR5cGVzQXNTdHJpbmcoc2hvd25NZXRo
b2QsIHRydWUpOwotCQkJCQlTdHJpbmcgcGFyYW1ldGVyVHlwZVNob3J0TmFtZXMgPSB0eXBlc0Fz
U3RyaW5nKHByb2JsZW1NZXRob2QucGFyYW1ldGVycywgdHJ1ZSk7CisJCQkJCVN0cmluZyBwYXJh
bWV0ZXJUeXBlU2hvcnROYW1lcyA9IHBhcmFtZXRlck5hbWVzKHByb2JsZW1NZXRob2QucGFyYW1l
dGVycywgdHJ1ZSwgZmFsc2UpOwogCQkJCQlpZiAoY2xvc2VzdFBhcmFtZXRlclR5cGVOYW1lcy5l
cXVhbHMocGFyYW1ldGVyVHlwZU5hbWVzKSkgewogCQkJCQkJLy8gaW5jbHVkZSBudWxsIGFubm90
YXRpb25zLCBtYXliZSB0aGV5IHNob3cgdGhlIGRpZmZlcmVuY2U6CiAJCQkJCQljbG9zZXN0UGFy
YW1ldGVyVHlwZU5hbWVzID0gdHlwZXNBc1N0cmluZyhzaG93bk1ldGhvZCwgZmFsc2UsIHRydWUp
OwogCQkJCQkJcGFyYW1ldGVyVHlwZU5hbWVzID0gdHlwZXNBc1N0cmluZyhwcm9ibGVtTWV0aG9k
LnBhcmFtZXRlcnMsIGZhbHNlLCB0cnVlKTsKIAkJCQkJCWNsb3Nlc3RQYXJhbWV0ZXJUeXBlU2hv
cnROYW1lcyA9IHR5cGVzQXNTdHJpbmcoc2hvd25NZXRob2QsIHRydWUsIHRydWUpOwotCQkJCQkJ
cGFyYW1ldGVyVHlwZVNob3J0TmFtZXMgPSB0eXBlc0FzU3RyaW5nKHByb2JsZW1NZXRob2QucGFy
YW1ldGVycywgdHJ1ZSwgdHJ1ZSk7CisJCQkJCQlwYXJhbWV0ZXJUeXBlU2hvcnROYW1lcyA9IHBh
cmFtZXRlck5hbWVzKHByb2JsZW1NZXRob2QucGFyYW1ldGVycywgdHJ1ZSwgdHJ1ZSk7CiAJCQkJ
CX0KIAkJCQkJaWYgKGNsb3Nlc3RQYXJhbWV0ZXJUeXBlU2hvcnROYW1lcy5lcXVhbHMocGFyYW1l
dGVyVHlwZVNob3J0TmFtZXMpKSB7CiAJCQkJCQljbG9zZXN0UGFyYW1ldGVyVHlwZVNob3J0TmFt
ZXMgPSBjbG9zZXN0UGFyYW1ldGVyVHlwZU5hbWVzOwo=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>241509</attachid>
            <date>2014-04-02 09:30:00 -0400</date>
            <delta_ts>2014-04-07 09:57:09 -0400</delta_ts>
            <desc>Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>19355</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0dlbmVyaWNzUmVncmVz
c2lvblRlc3RfMV84LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9HZW5lcmlj
c1JlZ3Jlc3Npb25UZXN0XzFfOC5qYXZhCmluZGV4IDE0OTM1YjEuLmVkMTJlNWMgMTAwNjQ0Ci0t
LSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0dlbmVyaWNzUmVncmVzc2lvblRlc3Rf
MV84LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vR2VuZXJpY3NSZWdy
ZXNzaW9uVGVzdF8xXzguamF2YQpAQCAtMTc1Niw3ICsxNzU2LDcgQEAgcHVibGljIHZvaWQgdGVz
dEJ1ZzQyNzE2OCgpIHsKIAkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA3KVxuIiArIAog
CQkiCXBlcmZvcm0oKCkgLT4gMTMpOyBcbiIgKyAKIAkJIgleXl5eXl5eXG4iICsgCi0JCSJUaGUg
bWV0aG9kIHBlcmZvcm0oUHJvZHVjZXI8VD4pIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2Fi
bGUgZm9yIHRoZSBhcmd1bWVudHMgKCgpIC0+IDEzKVxuIiArIAorCQkiVGhlIG1ldGhvZCBwZXJm
b3JtKFByb2R1Y2VyPFQ+KSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUg
YXJndW1lbnRzICgoKSAtPiA/KVxuIiArIAogCQkiLS0tLS0tLS0tLVxuIiArIAogCQkiMi4gRVJS
T1IgaW4gWC5qYXZhIChhdCBsaW5lIDcpXG4iICsgCiAJCSIJcGVyZm9ybSgoKSAtPiAxMyk7IFxu
IiArIApAQCAtMjQ1MSw4ICsyNDUxLDcgQEAgcHVibGljIHZvaWQgdGVzdEJ1ZzQyOTA5MF9jb21t
ZW50MSgpIHsKIAkJIjEuIEVSUk9SIGluIEp1bmsxMC5qYXZhIChhdCBsaW5lIDE3KVxuIiArIAog
CQkiCWFkZExpc3RlbmVyKG51bGwsIChTZXRDaGFuZ2VMaXN0ZW5lci5DaGFuZ2U8Pz4gYykgLT4g
e30pO1xuIiArIAogCQkiCV5eXl5eXl5eXl5eXG4iICsgCi0JCSJUaGUgbWV0aG9kIGFkZExpc3Rl
bmVyKEp1bmsxMC5TZXRMaXN0ZW5lckhlbHBlcjxFPiwgSnVuazEwLlNldENoYW5nZUxpc3RlbmVy
PD8gc3VwZXIgRT4pIGluIHRoZSB0eXBlIEp1bmsxMCBpcyBub3QgYXBwbGljYWJsZSBmb3IgdGhl
IGFyZ3VtZW50cyAobnVsbCwgKFNldENoYW5nZUxpc3RlbmVyLkNoYW5nZTw/PiBjKSAtPiB7XG4i
ICsgCi0JCSJ9KVxuIiArIAorCQkiVGhlIG1ldGhvZCBhZGRMaXN0ZW5lcihKdW5rMTAuU2V0TGlz
dGVuZXJIZWxwZXI8RT4sIEp1bmsxMC5TZXRDaGFuZ2VMaXN0ZW5lcjw/IHN1cGVyIEU+KSBpbiB0
aGUgdHlwZSBKdW5rMTAgaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKG51bGws
ICg/IGMpIC0+IHZvaWQpXG4iICsgCiAJCSItLS0tLS0tLS0tXG4iICsgCiAJCSIyLiBFUlJPUiBp
biBKdW5rMTAuamF2YSAoYXQgbGluZSAxNylcbiIgKyAKIAkJIglhZGRMaXN0ZW5lcihudWxsLCAo
U2V0Q2hhbmdlTGlzdGVuZXIuQ2hhbmdlPD8+IGMpIC0+IHt9KTtcbiIgKyAKZGlmZiAtLWdpdCBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL05lZ2F0aXZlTGFtYmRhRXhwcmVzc2lvbnNU
ZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9OZWdhdGl2ZUxhbWJkYUV4
cHJlc3Npb25zVGVzdC5qYXZhCmluZGV4IDU0NTUzMjQuLjUzOGJkZWEgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL05lZ2F0aXZlTGFtYmRhRXhwcmVzc2lvbnNUZXN0
LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTmVnYXRpdmVMYW1iZGFF
eHByZXNzaW9uc1Rlc3QuamF2YQpAQCAtNTAzMyw4ICs1MDMzLDcgQEAgdGhpcy5ydW5OZWdhdGl2
ZVRlc3QoCiAJCQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAyMClcbiIgKyAKIAkJCQki
CW5ldyBYKCkuZm9vKChzKS0+e30pO1xuIiArIAogCQkJCSIJICAgICAgICBeXl5cbiIgKyAKLQkJ
CQkiVGhlIG1ldGhvZCBmb28oSSkgaW4gdGhlIHR5cGUgWCBpcyBub3QgYXBwbGljYWJsZSBmb3Ig
dGhlIGFyZ3VtZW50cyAoKDxubyB0eXBlPiBzKSAtPiB7XG4iICsgCi0JCQkJIn0pXG4iICsgCisJ
CQkJIlRoZSBtZXRob2QgZm9vKEkpIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9y
IHRoZSBhcmd1bWVudHMgKCg/IHMpIC0+IHZvaWQpXG4iICsgCiAJCQkJIi0tLS0tLS0tLS1cbiIg
KyAKIAkJCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDIwKVxuIiArIAogCQkJCSIJbmV3
IFgoKS5mb28oKHMpLT57fSk7XG4iICsgCkBAIC01MDc2LDkgKzUwNzUsNyBAQCB0aGlzLnJ1bk5l
Z2F0aXZlVGVzdCgKIAkJCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDE1KVxuIiArIAog
CQkJCSIJbmV3IFgoKS5mb28oKCktPnsgcmV0dXJuIFwiXCI7fSk7XG4iICsgCiAJCQkJIgkgICAg
ICAgIF5eXlxuIiArIAotCQkJCSJUaGUgbWV0aG9kIGZvbyhJKSBpbiB0aGUgdHlwZSBYIGlzIG5v
dCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoKSAtPiB7XG4iICsgCi0JCQkJIiAgcmV0
dXJuIFwiXCI7XG4iICsgCi0JCQkJIn0pXG4iICsgCisJCQkJIlRoZSBtZXRob2QgZm9vKEkpIGlu
IHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKCgpIC0+IHZv
aWQpXG4iICsgCiAJCQkJIi0tLS0tLS0tLS1cbiIgKyAKIAkJCQkiMi4gRVJST1IgaW4gWC5qYXZh
IChhdCBsaW5lIDE1KVxuIiArIAogCQkJCSIJbmV3IFgoKS5mb28oKCktPnsgcmV0dXJuIFwiXCI7
fSk7XG4iICsgCkBAIC01MDg4LDcgKzUwODUsNyBAQCB0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKIAkJ
CQkiMy4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDE2KVxuIiArIAogCQkJCSIJbmV3IFgoKS5m
b28oKCktPiAxMCk7XG4iICsgCiAJCQkJIgkgICAgICAgIF5eXlxuIiArIAotCQkJCSJUaGUgbWV0
aG9kIGZvbyhJKSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1l
bnRzICgoKSAtPiAxMClcbiIgKyAKKwkJCQkiVGhlIG1ldGhvZCBmb28oSSkgaW4gdGhlIHR5cGUg
WCBpcyBub3QgYXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoKCkgLT4gdm9pZClcbiIgKyAK
IAkJCQkiLS0tLS0tLS0tLVxuIiArIAogCQkJCSI0LiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUg
MTYpXG4iICsgCiAJCQkJIgluZXcgWCgpLmZvbygoKS0+IDEwKTtcbiIgKyAKQEAgLTUyMzQsOSAr
NTIzMSw3IEBAIHRoaXMucnVuTmVnYXRpdmVUZXN0KAogCQkJCSIxLiBFUlJPUiBpbiBYLmphdmEg
KGF0IGxpbmUgMTEpXG4iICsgCiAJCQkJIgluZXcgWCgpLmZvbygoKS0+eyByZXR1cm4gMTA7IH0p
O1xuIiArIAogCQkJCSIJICAgICAgICBeXl5cbiIgKyAKLQkJCQkiVGhlIG1ldGhvZCBmb28oSSkg
aW4gdGhlIHR5cGUgWCBpcyBub3QgYXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoKCkgLT4g
e1xuIiArIAotCQkJCSIgIHJldHVybiAxMDtcbiIgKyAKLQkJCQkifSlcbiIgKyAKKwkJCQkiVGhl
IG1ldGhvZCBmb28oSSkgaW4gdGhlIHR5cGUgWCBpcyBub3QgYXBwbGljYWJsZSBmb3IgdGhlIGFy
Z3VtZW50cyAoKCkgLT4gdm9pZClcbiIgKyAKIAkJCQkiLS0tLS0tLS0tLVxuIiArIAogCQkJCSIy
LiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTEpXG4iICsgCiAJCQkJIgluZXcgWCgpLmZvbygo
KS0+eyByZXR1cm4gMTA7IH0pO1xuIiArIApAQCAtNTI5MCw4ICs1Mjg1LDcgQEAgdGhpcy5ydW5O
ZWdhdGl2ZVRlc3QoCiAJCQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxMSlcbiIgKyAK
IAkJCQkiCW5ldyBYKCkuZm9vKChPYmplY3QgbyktPnt9KTtcbiIgKyAKIAkJCQkiCSAgICAgICAg
Xl5eXG4iICsgCi0JCQkJIlRoZSBtZXRob2QgZm9vKEkpIGluIHRoZSB0eXBlIFggaXMgbm90IGFw
cGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKChPYmplY3QgbykgLT4ge1xuIiArIAotCQkJCSJ9
KVxuIiArIAorCQkJCSJUaGUgbWV0aG9kIGZvbyhJKSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBs
aWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoPyBvKSAtPiB2b2lkKVxuIiArIAogCQkJCSItLS0t
LS0tLS0tXG4iICsgCiAJCQkJIjIuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxMSlcbiIgKyAK
IAkJCQkiCW5ldyBYKCkuZm9vKChPYmplY3QgbyktPnt9KTtcbiIgKyAKQEAgLTU1MDYsOSArNTUw
MCw3IEBAIHB1YmxpYyB2b2lkIHRlc3Q0MDE4NDVhKCkgewogCQkJIjMuIEVSUk9SIGluIFguamF2
YSAoYXQgbGluZSA5KVxuIiArIAogCQkJIglmb28oKHgpLT4ge3JldHVybiAxMDt9KTtcbiIgKyAK
IAkJCSIJXl5eXG4iICsgCi0JCQkiVGhlIG1ldGhvZCBmb28oSVtdLi4uKSBpbiB0aGUgdHlwZSBY
IGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoPG5vIHR5cGU+IHgpIC0+IHtc
biIgKyAKLQkJCSIgIHJldHVybiAxMDtcbiIgKyAKLQkJCSJ9KVxuIiArIAorCQkJIlRoZSBtZXRo
b2QgZm9vKElbXS4uLikgaW4gdGhlIHR5cGUgWCBpcyBub3QgYXBwbGljYWJsZSBmb3IgdGhlIGFy
Z3VtZW50cyAoKD8geCkgLT4gPylcbiIgKyAKIAkJCSItLS0tLS0tLS0tXG4iICsgCiAJCQkiNC4g
RVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDkpXG4iICsgCiAJCQkiCWZvbygoeCktPiB7cmV0dXJu
IDEwO30pO1xuIiArIApAQCAtNTczOSwxMCArNTczMSw3IEBAIHB1YmxpYyB2b2lkIHRlc3Q0MDE5
MzlhKCkgewogCQkJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgOClcbiIgKyAKIAkJCQki
CWZvbygoKS0+eyBpZiAoMSA9PSAyKSB0aHJvdyBuZXcgUnVudGltZUV4Y2VwdGlvbigpOyB9KTtc
biIgKyAKIAkJCQkiCV5eXlxuIiArIAotCQkJCSJUaGUgbWV0aG9kIGZvbyhJKSBpbiB0aGUgdHlw
ZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoKSAtPiB7XG4iICsgCi0J
CQkJIiAgaWYgKCgxID09IDIpKVxuIiArIAotCQkJCSIgICAgICB0aHJvdyBuZXcgUnVudGltZUV4
Y2VwdGlvbigpO1xuIiArIAotCQkJCSJ9KVxuIiArIAorCQkJCSJUaGUgbWV0aG9kIGZvbyhJKSBp
biB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoKSAtPiBp
bnQpXG4iICsgCiAJCQkJIi0tLS0tLS0tLS1cbiIpOwogfQogLy8gaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMTkzOSwgWzEuOF1bY29tcGlsZXJdIEluY29y
cmVjdCBzaGFwZSBhbmFseXNpcyBsZWFkcyB0byBtZXRob2QgcmVzb2x1dGlvbiBmYWlsdXJlIC4K
QEAgLTcwMTYsNyArNzAwNSw3IEBAIHB1YmxpYyB2b2lkIHRlc3Q0MTI2NTAoKSB7CiAJCSIxLiBF
UlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNylcbiIgKyAKIAkJIglmb28oKCkgLT4gZm9vKFg6Omdl
dEludCkpO1xuIiArIAogCQkiCV5eXlxuIiArIAotCQkiVGhlIG1ldGhvZCBmb28oSSkgaW4gdGhl
IHR5cGUgWCBpcyBub3QgYXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoKCkgLT4gZm9vKFg6
OmdldEludCkpXG4iICsgCisJCSJUaGUgbWV0aG9kIGZvbyhJKSBpbiB0aGUgdHlwZSBYIGlzIG5v
dCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoKSAtPiBTdHJpbmcpXG4iICsgCiAJCSIt
LS0tLS0tLS0tXG4iICsgCiAJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNylcbiIgKyAK
IAkJIglmb28oKCkgLT4gZm9vKFg6OmdldEludCkpO1xuIiArIApAQCAtODk4Myw2ICs4OTcyLDc1
IEBAIHB1YmxpYyB2b2lkIHRlc3Q0MzAzMTAoKSB7CiAJCQkiSW52YWxpZCBcJ0BGdW5jdGlvbmFs
SW50ZXJmYWNlXCcgYW5ub3RhdGlvbjsgRjI8VDEsUj4gaXMgbm90IGEgZnVuY3Rpb25hbCBpbnRl
cmZhY2VcbiIgKyAKIAkJCSItLS0tLS0tLS0tXG4iKTsKIH0KKy8vIGh0dHBzOi8vYnVncy5lY2xp
cHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MjQxNTQsIFsxLjhdW2NvbXBpbGVyXSBQb2x5
VHlwZUJpbmRpbmcgbXVzdCBub3QgcmVuZGVyIHRoZSBmdWxsIGxhbWJkYSBib2R5IGluIGVycm9y
IG1lc3NhZ2VzCisvL0V4YW1wbGUgY29waWVkIGZyb20gYnVnIHJlcG9ydC4KK3B1YmxpYyB2b2lk
IHRlc3Q0MjQxNTRhKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3Qo
CisJCW5ldyBTdHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS51dGlsLkxp
c3Q7IiArCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCXZvaWQgZm9vKExpc3Q8UHJv
Y2Vzcz4gbGlzdCkge1xuIiArCisJCQkiCQlsaXN0LnJlbW92ZUlmKChpbnQgeCkgLT4gXCJcIik7
XG4iICsKKwkJCSIJfVxuIiArCisJCQkifVxuIiwKKwkJfSwKKwkJIi0tLS0tLS0tLS1cbiIgKwor
CQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDMpXG4iICsKKwkJIglsaXN0LnJlbW92ZUlm
KChpbnQgeCkgLT4gXCJcIik7XG4iICsKKwkgICAgIgkgICAgIF5eXl5eXl5eXG4iICsKKwkgICAg
IlRoZSBtZXRob2QgcmVtb3ZlSWYoUHJlZGljYXRlPD8gc3VwZXIgUHJvY2Vzcz4pIGluIHRoZSB0
eXBlIENvbGxlY3Rpb248UHJvY2Vzcz4gaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVu
dHMgKCg/IHgpIC0+IGJvb2xlYW4pXG4iICsKKwkgICAgIi0tLS0tLS0tLS1cbiIgKworCSAgICAi
Mi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDMpXG4iICsKKwkgICAgIglsaXN0LnJlbW92ZUlm
KChpbnQgeCkgLT4gXCJcIik7XG4iICsKKwkgICAgIgkgICAgICAgICAgICAgIF5eXl5eXl5eXl5e
Xl5cbiIgKworCSAgICAiVGhlIHRhcmdldCB0eXBlIG9mIHRoaXMgZXhwcmVzc2lvbiBpcyBub3Qg
YSB3ZWxsIGZvcm1lZCBwYXJhbWV0ZXJpemVkIHR5cGUgZHVlIHRvIGJvdW5kKHMpIG1pc21hdGNo
XG4iICsKKwkgICAgIi0tLS0tLS0tLS1cbiIpOworfQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uu
b3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQyNDE1NCwgIFsxLjhdW2NvbXBpbGVyXSBQb2x5VHlw
ZUJpbmRpbmcgbXVzdCBub3QgcmVuZGVyIHRoZSBmdWxsIGxhbWJkYSBib2R5IGluIGVycm9yIG1l
c3NhZ2VzCisvL1ZhcmlhdGlvbnMgd2hlcmUgcmV0dXJuIHR5cGVzIG9yIGFyZ3VtZW50cyBtaXNt
YXRjaCBvciBib3RoLgorcHVibGljIHZvaWQgdGVzdDQyNDE1NGIoKSB0aHJvd3MgRXhjZXB0aW9u
IHsKKwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEi
LAorCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIglpbnRlcmZhY2UgSSB7aW50IGZvbyhp
bnQgeCk7fVxuIiArCisJCQkiCXZvaWQgZm9vMihJIGkpIHt9XG4iICsKKwkJCSIJdm9pZCBmb28o
KSB7fVxuIiArCisJCQkiCXZvaWQgYmFyKCkge1xuIiArCisJCQkiCQlmb28oMCwgKGludCB4LCBp
bnQgeSkgLT4ge3JldHVybiAyO30sIDApO1xuIiArCisJCQkiCQlmb28yKChpbnQgeCkgLT4gXCJc
Iik7XG4iKworCQkJIgkJZm9vMigoZmxvYXQgeCkgLT4gMCk7XG4iICsKKwkJCSIgICB9XG4iICsK
KwkJCSJ9XG4iCisJCX0sCisJCSItLS0tLS0tLS0tXG4iICsKKwkJIjEuIEVSUk9SIGluIFguamF2
YSAoYXQgbGluZSA2KVxuIiArCisJCSIJZm9vKDAsIChpbnQgeCwgaW50IHkpIC0+IHtyZXR1cm4g
Mjt9LCAwKTtcbiIgKworCQkiCV5eXlxuIiArCisJCSJUaGUgbWV0aG9kIGZvbygpIGluIHRoZSB0
eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKGludCwgKD8geCwgPyB5
KSAtPiA/LCBpbnQpXG4iICsKKwkJIi0tLS0tLS0tLS1cbiIgKworCQkiMi4gRVJST1IgaW4gWC5q
YXZhIChhdCBsaW5lIDcpXG4iICsKKwkJIglmb28yKChpbnQgeCkgLT4gXCJcIik7XG4iICsKKwkJ
IgleXl5eXG4iICsKKwkJIlRoZSBtZXRob2QgZm9vMihYLkkpIGluIHRoZSB0eXBlIFggaXMgbm90
IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKCg/IHgpIC0+IGludClcbiIgKworCQkiLS0t
LS0tLS0tLVxuIiArCisJCSIzLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNylcbiIgKworCQki
CWZvbzIoKGludCB4KSAtPiBcIlwiKTtcbiIgKworCQkiCSAgICAgICAgICAgICAgICBeXlxuIiAr
CisJCSJUeXBlIG1pc21hdGNoOiBjYW5ub3QgY29udmVydCBmcm9tIFN0cmluZyB0byBpbnRcbiIg
KworCQkiLS0tLS0tLS0tLVxuIiArCisJCSI0LiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgOClc
biIgKworCQkiCWZvbzIoKGZsb2F0IHgpIC0+IDApO1xuIiArCisJCSIJXl5eXlxuIiArCisJCSJU
aGUgbWV0aG9kIGZvbzIoWC5JKSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0
aGUgYXJndW1lbnRzICgoPyB4KSAtPiBpbnQpXG4iICsKKwkJIi0tLS0tLS0tLS1cbiIgKworCQki
NS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDgpXG4iICsKKwkJIglmb28yKChmbG9hdCB4KSAt
PiAwKTtcbiIgKworCQkiCSAgICAgIF5eXl5eXG4iICsKKwkJIkxhbWJkYSBleHByZXNzaW9uJ3Mg
cGFyYW1ldGVyIHggaXMgZXhwZWN0ZWQgdG8gYmUgb2YgdHlwZSBpbnRcbiIgKworCQkiLS0tLS0t
LS0tLVxuIik7Cit9CiBwdWJsaWMgc3RhdGljIENsYXNzIHRlc3RDbGFzcygpIHsKIAlyZXR1cm4g
TmVnYXRpdmVMYW1iZGFFeHByZXNzaW9uc1Rlc3QuY2xhc3M7CiB9CmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9PdmVybG9hZFJlc29sdXRpb25UZXN0OC5qYXZhIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vT3ZlcmxvYWRSZXNvbHV0aW9uVGVzdDguamF2
YQppbmRleCBkYjExODMxLi44NTRmNjViIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIv
cmVncmVzc2lvbi9PdmVybG9hZFJlc29sdXRpb25UZXN0OC5qYXZhCisrKyBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9j
b21waWxlci9yZWdyZXNzaW9uL092ZXJsb2FkUmVzb2x1dGlvblRlc3Q4LmphdmEKQEAgLTE1MCwy
NyArMTUwLDIxIEBAIHB1YmxpYyB2b2lkIHRlc3QwMDQoKSB7CiAJCQkJIn1cbiIsCiAJCQl9LAog
CQkJLy8gbm9uZSBvZiB0aGUgbGFtYmRhcyBpcyBjb21wYXRpYmxlIGJlY2F1c2Ugbm9uZSBpcyB2
YWx1ZS1jb21wYXRpYmxlLCB3aGVyZWFzIGZvbygpIG5lZWRzIHRvIHJldHVybiBpbnQuCi0JCQki
LS0tLS0tLS0tLVxuIiArIAotCQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxMSlcbiIg
KyAKLQkJCSIJZ29vKCgpLT4geyBcbiIgKyAKLQkJCSIJXl5eXG4iICsgCi0JCQkiVGhlIG1ldGhv
ZCBnb28oSikgaW4gdGhlIHR5cGUgWCBpcyBub3QgYXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50
cyAoKCkgLT4ge1xuIiArIAotCQkJIiAgYm9vbGVhbiB5ID0gdHJ1ZTtcbiIgKyAKLQkJCSIgIHdo
aWxlICh5KSAgICA7XG4iICsgCi0JCQkifSlcbiIgKyAKLQkJCSItLS0tLS0tLS0tXG4yLiBFUlJP
UiBpbiBYLmphdmEgKGF0IGxpbmUgMTUpXG4iICsgCi0JCQkiCWdvbygoKS0+IHsgXG4iICsgCi0J
CQkiCV5eXlxuIiArIAotCQkJIlRoZSBtZXRob2QgZ29vKEopIGluIHRoZSB0eXBlIFggaXMgbm90
IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKCgpIC0+IHtcbiIgKyAKLQkJCSIgIHdoaWxl
ICh4KSAgICA7XG4iICsgCi0JCQkifSlcbiIgKyAKLQkJCSItLS0tLS0tLS0tXG4iICsgCi0JCQki
My4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDE4KVxuIiArIAotCQkJIglnb28oKCktPiB7IFxu
IiArIAotCQkJIgleXl5cbiIgKyAKLQkJCSJUaGUgbWV0aG9kIGdvbyhKKSBpbiB0aGUgdHlwZSBY
IGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoKSAtPiB7XG4iICsgCi0JCQki
ICB3aGlsZSAoZikgICAgO1xuIiArIAotCQkJIn0pXG4iICsgCisJCQkiLS0tLS0tLS0tLVxuIiAr
CisJCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDExKVxuIiArCisJCQkiCWdvbygoKS0+
IHsgXG4iICsKKwkJCSIJXl5eXG4iICsKKwkJCSJUaGUgbWV0aG9kIGdvbyhKKSBpbiB0aGUgdHlw
ZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoKSAtPiBpbnQpXG4iICsK
KwkJCSItLS0tLS0tLS0tXG4iICsKKwkJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTUp
XG4iICsKKwkJCSIJZ29vKCgpLT4geyBcbiIgKworCQkJIgleXl5cbiIgKworCQkJIlRoZSBtZXRo
b2QgZ29vKEopIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVu
dHMgKCgpIC0+IGludClcbiIgKworCQkJIi0tLS0tLS0tLS1cbiIgKworCQkJIjMuIEVSUk9SIGlu
IFguamF2YSAoYXQgbGluZSAxOClcbiIgKworCQkJIglnb28oKCktPiB7IFxuIiArCisJCQkiCV5e
XlxuIiArCisJCQkiVGhlIG1ldGhvZCBnb28oSikgaW4gdGhlIHR5cGUgWCBpcyBub3QgYXBwbGlj
YWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoKCkgLT4gaW50KVxuIiArCiAJCQkiLS0tLS0tLS0tLVxu
Iik7CiB9CiBwdWJsaWMgdm9pZCB0ZXN0MDA1KCkgewpAQCAtMjA0LDkgKzE5OCw3IEBAIHB1Ymxp
YyB2b2lkIHRlc3QwMDUoKSB7CiAJCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDE4KVxu
IiArIAogCQkJIglnb28oKCktPiB7IFxuIiArIAogCQkJIgleXl5cbiIgKyAKLQkJCSJUaGUgbWV0
aG9kIGdvbyhKKSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1l
bnRzICgoKSAtPiB7XG4iICsgLy8gYmVjYXVzZSBsYW1iZGEgaGFzIGVycm9ycyAtPiBub3QgdmFs
dWVDb21wYXRpYmxlIAotCQkJIiAgd2hpbGUgKGYpICAgIDtcbiIgKyAKLQkJCSJ9KVxuIiArIAor
CQkJIlRoZSBtZXRob2QgZ29vKEopIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9y
IHRoZSBhcmd1bWVudHMgKCgpIC0+IGludClcbiIgKyAvLyBiZWNhdXNlIGxhbWJkYSBoYXMgZXJy
b3JzIC0+IG5vdCB2YWx1ZUNvbXBhdGlibGUgCiAJCQkiLS0tLS0tLS0tLVxuIiArCiAJCQkiMi4g
RVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDE5KVxuIiArIAogCQkJIgl3aGlsZSAoZik7IFxuIiAr
IApAQCAtMjU4LDcgKzI1MCw3IEBAIHB1YmxpYyB2b2lkIHRlc3QwMDcoKSB7CiAJCQkiMS4gRVJS
T1IgaW4gWC5qYXZhIChhdCBsaW5lIDkpXG4iICsgCiAJCQkiCWdvbygoKS0+IDEwKTsgXG4iICsg
CiAJCQkiCV5eXlxuIiArIAotCQkJIlRoZSBtZXRob2QgZ29vKEopIGluIHRoZSB0eXBlIFggaXMg
bm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKCgpIC0+IDEwKVxuIiArIAorCQkJIlRo
ZSBtZXRob2QgZ29vKEopIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBh
cmd1bWVudHMgKCgpIC0+IHZvaWQpXG4iICsgCiAJCQkiLS0tLS0tLS0tLVxuIiArIAogCQkJIjIu
IEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA5KVxuIiArIAogCQkJIglnb28oKCktPiAxMCk7IFxu
IiArIApkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxN1Rlc3QuamF2YSBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90
ZXN0cy9kb20vQVNUQ29udmVydGVyMTdUZXN0LmphdmEKaW5kZXggZjNiOTdlNi4uOTA4NTZkZCAx
MDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxN1Rlc3QuamF2YQorKysgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvZG9tL0FTVENvbnZlcnRlcjE3VGVzdC5qYXZhCkBAIC04OTQsMTAgKzg5NCwxMCBAQCBwdWJs
aWMgY2xhc3MgQVNUQ29udmVydGVyMTdUZXN0IGV4dGVuZHMgQ29udmVydGVyVGVzdFNldHVwIHsK
IAkJCiAJCVN0cmluZyBlcnJvciA9ICJMYW1iZGEgZXhwcmVzc2lvbnMgYXJlIGFsbG93ZWQgb25s
eSBhdCBzb3VyY2UgbGV2ZWwgMS44IG9yIGFib3ZlXG4iICsgCiAJCQkJIkxhbWJkYSBleHByZXNz
aW9ucyBhcmUgYWxsb3dlZCBvbmx5IGF0IHNvdXJjZSBsZXZlbCAxLjggb3IgYWJvdmVcbiIgKyAK
LQkJCQkiVGhlIG1ldGhvZCBmb28oWC5TdHJpbmdUb0ludCkgaW4gdGhlIHR5cGUgWCBpcyBub3Qg
YXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoKFN0cmluZyBzKSAtPiBzLmxlbmd0aCgpKVxu
IiArIAorCQkJCSJUaGUgbWV0aG9kIGZvbyhYLlN0cmluZ1RvSW50KSBpbiB0aGUgdHlwZSBYIGlz
IG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoPyBzKSAtPiA/KVxuIiArIAogCQkJ
CSJMYW1iZGEgZXhwcmVzc2lvbnMgYXJlIGFsbG93ZWQgb25seSBhdCBzb3VyY2UgbGV2ZWwgMS44
IG9yIGFib3ZlXG4iICsgCiAJCQkJIkxhbWJkYSBleHByZXNzaW9ucyBhcmUgYWxsb3dlZCBvbmx5
IGF0IHNvdXJjZSBsZXZlbCAxLjggb3IgYWJvdmVcbiIgKyAKLQkJCQkiVGhlIG1ldGhvZCBiYXIo
WC5SZWR1Y2VJbnQpIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1
bWVudHMgKChpbnQgeCwgaW50IHkpIC0+ICh4ICsgeSkpXG4iICsgCisJCQkJIlRoZSBtZXRob2Qg
YmFyKFguUmVkdWNlSW50KSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUg
YXJndW1lbnRzICgoPyB4LCA/IHkpIC0+ID8pXG4iICsgCiAJCQkJIkxhbWJkYSBleHByZXNzaW9u
cyBhcmUgYWxsb3dlZCBvbmx5IGF0IHNvdXJjZSBsZXZlbCAxLjggb3IgYWJvdmUiOwogCQlhc3Nl
cnRQcm9ibGVtc1NpemUodW5pdCwgNywgZXJyb3IpOwogCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9t
L0FTVENvbnZlcnRlcjE4VGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9k
ZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxOFRlc3Qu
amF2YQppbmRleCAzODU2NjhmLi5iYTFiZjAxIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENv
bnZlcnRlcjE4VGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVs
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0Lmph
dmEKQEAgLTM2NjYsNyArMzY2Niw3IEBAIHB1YmxpYyBjbGFzcyBBU1RDb252ZXJ0ZXIxOFRlc3Qg
ZXh0ZW5kcyBDb252ZXJ0ZXJUZXN0U2V0dXAgewogCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVChj
b250ZW50cywgdGhpcy53b3JraW5nQ29weSwgZmFsc2UpOwogCQlhc3NlcnRFcXVhbHMoIk5vdCBh
IGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9k
ZVR5cGUoKSk7CiAJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAoQ29tcGlsYXRp
b25Vbml0KSBub2RlOwotCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAyLCAi
VGhlIG1ldGhvZCBnb28oSSkgaW4gdGhlIHR5cGUgWCBpcyBub3QgYXBwbGljYWJsZSBmb3IgdGhl
IGFyZ3VtZW50cyAoKDxubyB0eXBlPiBzKSAtPiAwKVxuIiArIAorCQlhc3NlcnRQcm9ibGVtc1Np
emUoY29tcGlsYXRpb25Vbml0LCAyLCAiVGhlIG1ldGhvZCBnb28oSSkgaW4gdGhlIHR5cGUgWCBp
cyBub3QgYXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoKD8gcykgLT4gPylcbiIgKyAKIAkJ
CQkJCQkJCQkJCSJUaGUgdGFyZ2V0IHR5cGUgb2YgdGhpcyBleHByZXNzaW9uIG11c3QgYmUgYSBm
dW5jdGlvbmFsIGludGVyZmFjZSIpOwogCQlub2RlID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVu
aXQsIDEpOwogCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHR5cGUgZGVjbGFyYXRpb24iLCBBU1ROb2Rl
LlRZUEVfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGls
ZXIvbG9va3VwL1BvbHlUeXBlQmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29t
cGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Qb2x5VHlwZUJp
bmRpbmcuamF2YQppbmRleCBlMjQ1ODVjLi45NDgzOTNlIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9v
a3VwL1BvbHlUeXBlQmluZGluZy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBp
bGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvUG9seVR5cGVCaW5k
aW5nLmphdmEKQEAgLTY2LDQgKzY2LDggQEAgcHVibGljIGNsYXNzIFBvbHlUeXBlQmluZGluZyBl
eHRlbmRzIFR5cGVCaW5kaW5nIHsKIAkJdHlwZS52YW5pbGxhQ29tcGF0aWJpbHR5ID0gIXRoaXMu
dmFuaWxsYUNvbXBhdGliaWx0eTsKIAkJcmV0dXJuIHR5cGU7CiAJfQorCisJcHVibGljIEV4cHJl
c3Npb24gZ2V0RXhwcmVzc2lvbigpIHsKKwkJcmV0dXJuIHRoaXMuZXhwcmVzc2lvbjsKKwl9CiB9
ClwgTm8gbmV3bGluZSBhdCBlbmQgb2YgZmlsZQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL3Byb2JsZW0v
UHJvYmxlbVJlcG9ydGVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVtUmVwb3J0ZXIuamF2
YQppbmRleCA3YTNhZTllLi5lYjg0YjY5IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9i
bGVtUmVwb3J0ZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvcHJvYmxlbS9Qcm9ibGVtUmVwb3J0ZXIuamF2
YQpAQCAtMTUyLDYgKzE1Miw3IEBAIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIubG9va3VwLk1ldGhvZEJpbmRpbmc7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmxvb2t1cC5NZXRob2RTY29wZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlBhY2thZ2VCaW5kaW5nOwogaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXAuUGFyYW1ldGVyaXplZEdlbmVyaWNNZXRo
b2RCaW5kaW5nOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29r
dXAuUG9seVR5cGVCaW5kaW5nOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5sb29rdXAuUHJvYmxlbU1ldGhvZEJpbmRpbmc7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLmxvb2t1cC5Qcm9ibGVtUmVhc29uczsKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIubG9va3VwLlByb2JsZW1SZWZlcmVuY2VCaW5kaW5n
OwpAQCAtNDAwMyw2ICs0MDA0LDQ5IEBAIHB1YmxpYyB2b2lkIGludmFsaWRGaWxlTmFtZUZvclBh
Y2thZ2VBbm5vdGF0aW9ucyhBbm5vdGF0aW9uIGFubm90YXRpb24pIHsKIAkJCWFubm90YXRpb24u
c291cmNlRW5kKTsKIH0KIAorcHJpdmF0ZSBTdHJpbmcgcGFyYW1ldGVyTmFtZXMoVHlwZUJpbmRp
bmdbXSB0eXBlcywgYm9vbGVhbiBtYWtlU2hvcnQsIGJvb2xlYW4gc2hvd051bGxBbm5vdGF0aW9u
cykgeworCVN0cmluZ1tdIGVyclN0ciA9IG5ldyBTdHJpbmdbdHlwZXMubGVuZ3RoXTsKKwlmb3Ig
KGludCBpID0gMDsgaSA8IHR5cGVzLmxlbmd0aDsgaSsrKSB7CisJCVR5cGVCaW5kaW5nIHBhcmFt
ID0gdHlwZXNbaV07CisJCWlmICghKHBhcmFtIGluc3RhbmNlb2YgUG9seVR5cGVCaW5kaW5nKSkg
eworCQkJZXJyU3RyW2ldID0gdHlwZXNBc1N0cmluZyhuZXcgVHlwZUJpbmRpbmdbXXtwYXJhbX0s
IG1ha2VTaG9ydCwgc2hvd051bGxBbm5vdGF0aW9ucyk7CisJCQljb250aW51ZTsKKwkJfQorCQlQ
b2x5VHlwZUJpbmRpbmcgcG9seVR5cGVCaW5kaW5nID0gKFBvbHlUeXBlQmluZGluZykgcGFyYW07
CisJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IHBvbHlUeXBlQmluZGluZy5nZXRFeHByZXNzaW9u
KCk7CisJCWlmICghKGV4cHJlc3Npb24gaW5zdGFuY2VvZiBMYW1iZGFFeHByZXNzaW9uKSkgewor
CQkJZXJyU3RyW2ldID0gdHlwZXNBc1N0cmluZyhuZXcgVHlwZUJpbmRpbmdbXXtwYXJhbX0sIG1h
a2VTaG9ydCwgc2hvd051bGxBbm5vdGF0aW9ucyk7CisJCQljb250aW51ZTsKKwkJfQorCQlMYW1i
ZGFFeHByZXNzaW9uIGxhbWJkYUV4cHJlc3Npb24gPSAoTGFtYmRhRXhwcmVzc2lvbikgZXhwcmVz
c2lvbjsKKwkJQXJndW1lbnRbXSBhcmd1bWVudHMgPSBsYW1iZGFFeHByZXNzaW9uLmFyZ3VtZW50
cygpOworCQlTdHJpbmdCdWZmZXIgYnVmZmVyID0gbmV3IFN0cmluZ0J1ZmZlcigxMCk7CisJCWJ1
ZmZlci5hcHBlbmQoJygnKTsKKwkJZm9yIChpbnQgaiA9IDA7IGogPCBhcmd1bWVudHMubGVuZ3Ro
OyBqKyspIHsKKwkJCWlmIChqICE9IDApIHsKKwkJCQlidWZmZXIuYXBwZW5kKCIsICIpOyAvLyRO
T04tTkxTLTEkCisJCQl9CisJCQlidWZmZXIuYXBwZW5kKCI/ICIpOyAvLyROT04tTkxTLTEkCisJ
CQlidWZmZXIuYXBwZW5kKG5ldyBTdHJpbmcoYXJndW1lbnRzW2pdLm5hbWUpKTsKKwkJfQorCQli
dWZmZXIuYXBwZW5kKCIpIC0+ICIpOyAvLyROT04tTkxTLTEkCisJCWlmIChsYW1iZGFFeHByZXNz
aW9uLmJpbmRpbmcgIT0gbnVsbCkgeworCQkJYnVmZmVyLmFwcGVuZCh0eXBlc0FzU3RyaW5nKG5l
dyBUeXBlQmluZGluZ1tde2xhbWJkYUV4cHJlc3Npb24uYmluZGluZy5yZXR1cm5UeXBlfSwgbWFr
ZVNob3J0LCBzaG93TnVsbEFubm90YXRpb25zKSk7CisJCX0gZWxzZSB7CisJCQlidWZmZXIuYXBw
ZW5kKCI/Iik7IC8vJE5PTi1OTFMtMSQKKwkJfQorCQllcnJTdHJbaV0gPSBidWZmZXIudG9TdHJp
bmcoKTsKKwl9CisJU3RyaW5nQnVmZmVyIGJ1ZmZlciA9IG5ldyBTdHJpbmdCdWZmZXIoMTApOwor
CWZvciAoaW50IGkgPSAwOyBpIDwgZXJyU3RyLmxlbmd0aDsgaSsrKSB7CisJCWlmIChpICE9IDAp
IHsKKwkJCWJ1ZmZlci5hcHBlbmQoIiwgIik7IC8vJE5PTi1OTFMtMSQKKwkJfQorCQlidWZmZXIu
YXBwZW5kKGVyclN0cltpXSk7CisJfQorCXJldHVybiBidWZmZXIudG9TdHJpbmcoKTsKK30KKwog
cHVibGljIHZvaWQgaW52YWxpZE1ldGhvZChNZXNzYWdlU2VuZCBtZXNzYWdlU2VuZCwgTWV0aG9k
QmluZGluZyBtZXRob2QpIHsKIAlpZiAoaXNSZWNvdmVyZWROYW1lKG1lc3NhZ2VTZW5kLnNlbGVj
dG9yKSkgcmV0dXJuOwogCkBAIC00MDMwLDEzICs0MDc0LDEzIEBAIHB1YmxpYyB2b2lkIGludmFs
aWRNZXRob2QoTWVzc2FnZVNlbmQgbWVzc2FnZVNlbmQsIE1ldGhvZEJpbmRpbmcgbWV0aG9kKSB7
CiAJCQkJCVN0cmluZyBjbG9zZXN0UGFyYW1ldGVyVHlwZU5hbWVzID0gdHlwZXNBc1N0cmluZyhz
aG93bk1ldGhvZCwgZmFsc2UpOwogCQkJCQlTdHJpbmcgcGFyYW1ldGVyVHlwZU5hbWVzID0gdHlw
ZXNBc1N0cmluZyhwcm9ibGVtTWV0aG9kLnBhcmFtZXRlcnMsIGZhbHNlKTsKIAkJCQkJU3RyaW5n
IGNsb3Nlc3RQYXJhbWV0ZXJUeXBlU2hvcnROYW1lcyA9IHR5cGVzQXNTdHJpbmcoc2hvd25NZXRo
b2QsIHRydWUpOwotCQkJCQlTdHJpbmcgcGFyYW1ldGVyVHlwZVNob3J0TmFtZXMgPSB0eXBlc0Fz
U3RyaW5nKHByb2JsZW1NZXRob2QucGFyYW1ldGVycywgdHJ1ZSk7CisJCQkJCVN0cmluZyBwYXJh
bWV0ZXJUeXBlU2hvcnROYW1lcyA9IHBhcmFtZXRlck5hbWVzKHByb2JsZW1NZXRob2QucGFyYW1l
dGVycywgdHJ1ZSwgZmFsc2UpOwogCQkJCQlpZiAoY2xvc2VzdFBhcmFtZXRlclR5cGVOYW1lcy5l
cXVhbHMocGFyYW1ldGVyVHlwZU5hbWVzKSkgewogCQkJCQkJLy8gaW5jbHVkZSBudWxsIGFubm90
YXRpb25zLCBtYXliZSB0aGV5IHNob3cgdGhlIGRpZmZlcmVuY2U6CiAJCQkJCQljbG9zZXN0UGFy
YW1ldGVyVHlwZU5hbWVzID0gdHlwZXNBc1N0cmluZyhzaG93bk1ldGhvZCwgZmFsc2UsIHRydWUp
OwogCQkJCQkJcGFyYW1ldGVyVHlwZU5hbWVzID0gdHlwZXNBc1N0cmluZyhwcm9ibGVtTWV0aG9k
LnBhcmFtZXRlcnMsIGZhbHNlLCB0cnVlKTsKIAkJCQkJCWNsb3Nlc3RQYXJhbWV0ZXJUeXBlU2hv
cnROYW1lcyA9IHR5cGVzQXNTdHJpbmcoc2hvd25NZXRob2QsIHRydWUsIHRydWUpOwotCQkJCQkJ
cGFyYW1ldGVyVHlwZVNob3J0TmFtZXMgPSB0eXBlc0FzU3RyaW5nKHByb2JsZW1NZXRob2QucGFy
YW1ldGVycywgdHJ1ZSwgdHJ1ZSk7CisJCQkJCQlwYXJhbWV0ZXJUeXBlU2hvcnROYW1lcyA9IHBh
cmFtZXRlck5hbWVzKHByb2JsZW1NZXRob2QucGFyYW1ldGVycywgdHJ1ZSwgdHJ1ZSk7CiAJCQkJ
CX0KIAkJCQkJaWYgKGNsb3Nlc3RQYXJhbWV0ZXJUeXBlU2hvcnROYW1lcy5lcXVhbHMocGFyYW1l
dGVyVHlwZVNob3J0TmFtZXMpKSB7CiAJCQkJCQljbG9zZXN0UGFyYW1ldGVyVHlwZVNob3J0TmFt
ZXMgPSBjbG9zZXN0UGFyYW1ldGVyVHlwZU5hbWVzOwo=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>241677</attachid>
            <date>2014-04-07 09:57:00 -0400</date>
            <delta_ts>2014-04-09 06:23:22 -0400</delta_ts>
            <desc>Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>22989</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0dlbmVyaWNzUmVncmVz
c2lvblRlc3RfMV84LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9HZW5lcmlj
c1JlZ3Jlc3Npb25UZXN0XzFfOC5qYXZhCmluZGV4IDE0OTM1YjEuLmEzMjZiZWYgMTAwNjQ0Ci0t
LSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0dlbmVyaWNzUmVncmVzc2lvblRlc3Rf
MV84LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vR2VuZXJpY3NSZWdy
ZXNzaW9uVGVzdF8xXzguamF2YQpAQCAtMTc1Niw3ICsxNzU2LDcgQEAgcHVibGljIHZvaWQgdGVz
dEJ1ZzQyNzE2OCgpIHsKIAkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA3KVxuIiArIAog
CQkiCXBlcmZvcm0oKCkgLT4gMTMpOyBcbiIgKyAKIAkJIgleXl5eXl5eXG4iICsgCi0JCSJUaGUg
bWV0aG9kIHBlcmZvcm0oUHJvZHVjZXI8VD4pIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2Fi
bGUgZm9yIHRoZSBhcmd1bWVudHMgKCgpIC0+IDEzKVxuIiArIAorCQkiVGhlIG1ldGhvZCBwZXJm
b3JtKFByb2R1Y2VyPFQ+KSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUg
YXJndW1lbnRzICgoKSAtPiA/KVxuIiArIAogCQkiLS0tLS0tLS0tLVxuIiArIAogCQkiMi4gRVJS
T1IgaW4gWC5qYXZhIChhdCBsaW5lIDcpXG4iICsgCiAJCSIJcGVyZm9ybSgoKSAtPiAxMyk7IFxu
IiArIApAQCAtMjQ1MSw4ICsyNDUxLDcgQEAgcHVibGljIHZvaWQgdGVzdEJ1ZzQyOTA5MF9jb21t
ZW50MSgpIHsKIAkJIjEuIEVSUk9SIGluIEp1bmsxMC5qYXZhIChhdCBsaW5lIDE3KVxuIiArIAog
CQkiCWFkZExpc3RlbmVyKG51bGwsIChTZXRDaGFuZ2VMaXN0ZW5lci5DaGFuZ2U8Pz4gYykgLT4g
e30pO1xuIiArIAogCQkiCV5eXl5eXl5eXl5eXG4iICsgCi0JCSJUaGUgbWV0aG9kIGFkZExpc3Rl
bmVyKEp1bmsxMC5TZXRMaXN0ZW5lckhlbHBlcjxFPiwgSnVuazEwLlNldENoYW5nZUxpc3RlbmVy
PD8gc3VwZXIgRT4pIGluIHRoZSB0eXBlIEp1bmsxMCBpcyBub3QgYXBwbGljYWJsZSBmb3IgdGhl
IGFyZ3VtZW50cyAobnVsbCwgKFNldENoYW5nZUxpc3RlbmVyLkNoYW5nZTw/PiBjKSAtPiB7XG4i
ICsgCi0JCSJ9KVxuIiArIAorCQkiVGhlIG1ldGhvZCBhZGRMaXN0ZW5lcihKdW5rMTAuU2V0TGlz
dGVuZXJIZWxwZXI8RT4sIEp1bmsxMC5TZXRDaGFuZ2VMaXN0ZW5lcjw/IHN1cGVyIEU+KSBpbiB0
aGUgdHlwZSBKdW5rMTAgaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKG51bGws
ICg/IGMpIC0+IHZvaWQpXG4iICsgCiAJCSItLS0tLS0tLS0tXG4iICsgCiAJCSIyLiBFUlJPUiBp
biBKdW5rMTAuamF2YSAoYXQgbGluZSAxNylcbiIgKyAKIAkJIglhZGRMaXN0ZW5lcihudWxsLCAo
U2V0Q2hhbmdlTGlzdGVuZXIuQ2hhbmdlPD8+IGMpIC0+IHt9KTtcbiIgKyAKQEAgLTI1NzMsMTAg
KzI1NzIsNyBAQCBwdWJsaWMgdm9pZCB0ZXN0QnVnNDI4ODExKCkgewogCQkiMS4gRVJST1IgaW4g
TW9yZUNvbGxlY3RvcnMuamF2YSAoYXQgbGluZSAxNilcbiIgKyAKIAkJIglyZXR1cm4gQ29sbGVj
dG9yLm9mKEFycmF5TGlzdDxUPjo6bmV3LFxuIiArIAogCQkiCSAgICAgICAgICAgICAgICAgXl5c
biIgKyAKLQkJIlRoZSBtZXRob2Qgb2YoQXJyYXlMaXN0PFQ+OjpuZXcsIExpc3Q8VD46OmFkZCwg
KDxubyB0eXBlPiBsZWZ0LCA8bm8gdHlwZT4gcmlnaHQpIC0+IHtcbiIgKyAKLQkJIiAgbGVmdC5h
ZGRBbGwocmlnaHQpO1xuIiArIAotCQkiICByZXR1cm4gbGVmdDtcbiIgKyAKLQkJIn0sIEltbXV0
YWJsZUxpc3Q6OmNvcHlPZikgaXMgdW5kZWZpbmVkIGZvciB0aGUgdHlwZSBDb2xsZWN0b3JcbiIg
KyAKKwkJIlRoZSBtZXRob2Qgb2YoQXJyYXlMaXN0PFQ+OjpuZXcsIExpc3Q8VD46OmFkZCwgKD8g
bGVmdCwgPyByaWdodCkgLT4gPywgSW1tdXRhYmxlTGlzdDo6Y29weU9mKSBpcyB1bmRlZmluZWQg
Zm9yIHRoZSB0eXBlIENvbGxlY3RvclxuIiArIAogCQkiLS0tLS0tLS0tLVxuIiArIAogCQkiMi4g
V0FSTklORyBpbiBNb3JlQ29sbGVjdG9ycy5qYXZhIChhdCBsaW5lIDIzKVxuIiArIAogCQkiCXB1
YmxpYyBzdGF0aWMgPFQ+IEltbXV0YWJsZUxpc3Q8VD4gY29weU9mIChDb2xsZWN0aW9uPFQ+IGMp
IHtcbiIgKyAKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVy
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0xhbWJk
YUV4cHJlc3Npb25zVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGls
ZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTGFt
YmRhRXhwcmVzc2lvbnNUZXN0LmphdmEKaW5kZXggZDgzMGQ5ZS4uMzFmOGRkZiAxMDA2NDQKLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pk
dC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTGFtYmRhRXhwcmVzc2lvbnNUZXN0Lmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTGFtYmRhRXhwcmVzc2lvbnNU
ZXN0LmphdmEKQEAgLTIxNDcsNyArMjE0Nyw3IEBAIHB1YmxpYyB2b2lkIHRlc3RCdWc0MjQ3NDIo
KSB7CiAJCSIxLiBFUlJPUiBpbiBUZXN0SW5saW5lTGFtYmRhQXJyYXkuamF2YSAoYXQgbGluZSA0
KVxuIiArIAogCQkiCVRlc3RJbmxpbmVMYW1iZGFBcnJheSBoID0gbmV3IFRlc3RJbmxpbmVMYW1i
ZGFBcnJheSh4IC0+IHgrKyk7CS8vIFs5XVxuIiArIAogCQkiCSAgICAgICAgICAgICAgICAgICAg
ICAgICAgXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIgKyAKLQkJIlRoZSBj
b25zdHJ1Y3RvciBUZXN0SW5saW5lTGFtYmRhQXJyYXkoKDxubyB0eXBlPiB4KSAtPiB4ICsrKSBp
cyB1bmRlZmluZWRcbiIgKyAKKwkJIlRoZSBjb25zdHJ1Y3RvciBUZXN0SW5saW5lTGFtYmRhQXJy
YXkoKD8geCkgLT4gPykgaXMgdW5kZWZpbmVkXG4iICsgCiAJCSItLS0tLS0tLS0tXG4iICsgCiAJ
CSIyLiBFUlJPUiBpbiBUZXN0SW5saW5lTGFtYmRhQXJyYXkuamF2YSAoYXQgbGluZSA1KVxuIiAr
IAogCQkiCXB1YmxpYyBUZXN0SW5saW5lTGFtYmRhKEZJIGZpKSB7fVxuIiArIApkaWZmIC0tZ2l0
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pk
dC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTmVnYXRpdmVMYW1iZGFFeHByZXNzaW9u
c1Rlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL05lZ2F0aXZlTGFtYmRh
RXhwcmVzc2lvbnNUZXN0LmphdmEKaW5kZXggNTQ1NTMyNC4uY2Q4ZmRjNiAxMDA2NDQKLS0tIGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTmVnYXRpdmVMYW1iZGFFeHByZXNzaW9uc1Rl
c3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9OZWdhdGl2ZUxhbWJk
YUV4cHJlc3Npb25zVGVzdC5qYXZhCkBAIC01MDMzLDggKzUwMzMsNyBAQCB0aGlzLnJ1bk5lZ2F0
aXZlVGVzdCgKIAkJCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDIwKVxuIiArIAogCQkJ
CSIJbmV3IFgoKS5mb28oKHMpLT57fSk7XG4iICsgCiAJCQkJIgkgICAgICAgIF5eXlxuIiArIAot
CQkJCSJUaGUgbWV0aG9kIGZvbyhJKSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZv
ciB0aGUgYXJndW1lbnRzICgoPG5vIHR5cGU+IHMpIC0+IHtcbiIgKyAKLQkJCQkifSlcbiIgKyAK
KwkJCQkiVGhlIG1ldGhvZCBmb28oSSkgaW4gdGhlIHR5cGUgWCBpcyBub3QgYXBwbGljYWJsZSBm
b3IgdGhlIGFyZ3VtZW50cyAoKD8gcykgLT4gdm9pZClcbiIgKyAKIAkJCQkiLS0tLS0tLS0tLVxu
IiArIAogCQkJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMjApXG4iICsgCiAJCQkJIglu
ZXcgWCgpLmZvbygocyktPnt9KTtcbiIgKyAKQEAgLTUwNzYsOSArNTA3NSw3IEBAIHRoaXMucnVu
TmVnYXRpdmVUZXN0KAogCQkJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTUpXG4iICsg
CiAJCQkJIgluZXcgWCgpLmZvbygoKS0+eyByZXR1cm4gXCJcIjt9KTtcbiIgKyAKIAkJCQkiCSAg
ICAgICAgXl5eXG4iICsgCi0JCQkJIlRoZSBtZXRob2QgZm9vKEkpIGluIHRoZSB0eXBlIFggaXMg
bm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKCgpIC0+IHtcbiIgKyAKLQkJCQkiICBy
ZXR1cm4gXCJcIjtcbiIgKyAKLQkJCQkifSlcbiIgKyAKKwkJCQkiVGhlIG1ldGhvZCBmb28oSSkg
aW4gdGhlIHR5cGUgWCBpcyBub3QgYXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoKCkgLT4g
dm9pZClcbiIgKyAKIAkJCQkiLS0tLS0tLS0tLVxuIiArIAogCQkJCSIyLiBFUlJPUiBpbiBYLmph
dmEgKGF0IGxpbmUgMTUpXG4iICsgCiAJCQkJIgluZXcgWCgpLmZvbygoKS0+eyByZXR1cm4gXCJc
Ijt9KTtcbiIgKyAKQEAgLTUwODgsNyArNTA4NSw3IEBAIHRoaXMucnVuTmVnYXRpdmVUZXN0KAog
CQkJCSIzLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTYpXG4iICsgCiAJCQkJIgluZXcgWCgp
LmZvbygoKS0+IDEwKTtcbiIgKyAKIAkJCQkiCSAgICAgICAgXl5eXG4iICsgCi0JCQkJIlRoZSBt
ZXRob2QgZm9vKEkpIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1
bWVudHMgKCgpIC0+IDEwKVxuIiArIAorCQkJCSJUaGUgbWV0aG9kIGZvbyhJKSBpbiB0aGUgdHlw
ZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoKSAtPiB2b2lkKVxuIiAr
IAogCQkJCSItLS0tLS0tLS0tXG4iICsgCiAJCQkJIjQuIEVSUk9SIGluIFguamF2YSAoYXQgbGlu
ZSAxNilcbiIgKyAKIAkJCQkiCW5ldyBYKCkuZm9vKCgpLT4gMTApO1xuIiArIApAQCAtNTIzNCw5
ICs1MjMxLDcgQEAgdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCiAJCQkJIjEuIEVSUk9SIGluIFguamF2
YSAoYXQgbGluZSAxMSlcbiIgKyAKIAkJCQkiCW5ldyBYKCkuZm9vKCgpLT57IHJldHVybiAxMDsg
fSk7XG4iICsgCiAJCQkJIgkgICAgICAgIF5eXlxuIiArIAotCQkJCSJUaGUgbWV0aG9kIGZvbyhJ
KSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoKSAt
PiB7XG4iICsgCi0JCQkJIiAgcmV0dXJuIDEwO1xuIiArIAotCQkJCSJ9KVxuIiArIAorCQkJCSJU
aGUgbWV0aG9kIGZvbyhJKSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUg
YXJndW1lbnRzICgoKSAtPiB2b2lkKVxuIiArIAogCQkJCSItLS0tLS0tLS0tXG4iICsgCiAJCQkJ
IjIuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxMSlcbiIgKyAKIAkJCQkiCW5ldyBYKCkuZm9v
KCgpLT57IHJldHVybiAxMDsgfSk7XG4iICsgCkBAIC01MjkwLDggKzUyODUsNyBAQCB0aGlzLnJ1
bk5lZ2F0aXZlVGVzdCgKIAkJCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDExKVxuIiAr
IAogCQkJCSIJbmV3IFgoKS5mb28oKE9iamVjdCBvKS0+e30pO1xuIiArIAogCQkJCSIJICAgICAg
ICBeXl5cbiIgKyAKLQkJCQkiVGhlIG1ldGhvZCBmb28oSSkgaW4gdGhlIHR5cGUgWCBpcyBub3Qg
YXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoKE9iamVjdCBvKSAtPiB7XG4iICsgCi0JCQkJ
In0pXG4iICsgCisJCQkJIlRoZSBtZXRob2QgZm9vKEkpIGluIHRoZSB0eXBlIFggaXMgbm90IGFw
cGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKCg/IG8pIC0+IHZvaWQpXG4iICsgCiAJCQkJIi0t
LS0tLS0tLS1cbiIgKyAKIAkJCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDExKVxuIiAr
IAogCQkJCSIJbmV3IFgoKS5mb28oKE9iamVjdCBvKS0+e30pO1xuIiArIApAQCAtNTUwNiw5ICs1
NTAwLDcgQEAgcHVibGljIHZvaWQgdGVzdDQwMTg0NWEoKSB7CiAJCQkiMy4gRVJST1IgaW4gWC5q
YXZhIChhdCBsaW5lIDkpXG4iICsgCiAJCQkiCWZvbygoeCktPiB7cmV0dXJuIDEwO30pO1xuIiAr
IAogCQkJIgleXl5cbiIgKyAKLQkJCSJUaGUgbWV0aG9kIGZvbyhJW10uLi4pIGluIHRoZSB0eXBl
IFggaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKCg8bm8gdHlwZT4geCkgLT4g
e1xuIiArIAotCQkJIiAgcmV0dXJuIDEwO1xuIiArIAotCQkJIn0pXG4iICsgCisJCQkiVGhlIG1l
dGhvZCBmb28oSVtdLi4uKSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUg
YXJndW1lbnRzICgoPyB4KSAtPiA/KVxuIiArIAogCQkJIi0tLS0tLS0tLS1cbiIgKyAKIAkJCSI0
LiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgOSlcbiIgKyAKIAkJCSIJZm9vKCh4KS0+IHtyZXR1
cm4gMTA7fSk7XG4iICsgCkBAIC01NzM5LDEwICs1NzMxLDcgQEAgcHVibGljIHZvaWQgdGVzdDQw
MTkzOWEoKSB7CiAJCQkJIjIuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA4KVxuIiArIAogCQkJ
CSIJZm9vKCgpLT57IGlmICgxID09IDIpIHRocm93IG5ldyBSdW50aW1lRXhjZXB0aW9uKCk7IH0p
O1xuIiArIAogCQkJCSIJXl5eXG4iICsgCi0JCQkJIlRoZSBtZXRob2QgZm9vKEkpIGluIHRoZSB0
eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKCgpIC0+IHtcbiIgKyAK
LQkJCQkiICBpZiAoKDEgPT0gMikpXG4iICsgCi0JCQkJIiAgICAgIHRocm93IG5ldyBSdW50aW1l
RXhjZXB0aW9uKCk7XG4iICsgCi0JCQkJIn0pXG4iICsgCisJCQkJIlRoZSBtZXRob2QgZm9vKEkp
IGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKCgpIC0+
IGludClcbiIgKyAKIAkJCQkiLS0tLS0tLS0tLVxuIik7CiB9CiAvLyBodHRwczovL2J1Z3MuZWNs
aXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDAxOTM5LCBbMS44XVtjb21waWxlcl0gSW5j
b3JyZWN0IHNoYXBlIGFuYWx5c2lzIGxlYWRzIHRvIG1ldGhvZCByZXNvbHV0aW9uIGZhaWx1cmUg
LgpAQCAtNjQ5NCw3ICs2NDgzLDcgQEAgcHVibGljIHZvaWQgdGVzdDQwNjYxNCgpIHsKIAkJCSIx
LiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgOSlcbiIgKyAKIAkJCSIJdGhpcygoKSAtPiB0aGlz
LmYpO1xuIiArIAogCQkJIgleXl5eXl5eXl5eXl5eXl5eXl5eXG4iICsgCi0JCQkiVGhlIGNvbnN0
cnVjdG9yIFgoKCkgLT4gdGhpcy5mKSBpcyB1bmRlZmluZWRcbiIgKyAKKwkJCSJUaGUgY29uc3Ry
dWN0b3IgWCgoKSAtPiBpbnQpIGlzIHVuZGVmaW5lZFxuIiArIAogCQkJIi0tLS0tLS0tLS1cbiIg
KyAKIAkJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgOSlcbiIgKyAKIAkJCSIJdGhpcygo
KSAtPiB0aGlzLmYpO1xuIiArIApAQCAtNjUwNCw3ICs2NDkzLDcgQEAgcHVibGljIHZvaWQgdGVz
dDQwNjYxNCgpIHsKIAkJCSIzLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTIpXG4iICsgCiAJ
CQkiCXRoaXMoKCkgLT4gdGhpcy5nKCkpO1xuIiArIAogCQkJIgleXl5eXl5eXl5eXl5eXl5eXl5e
Xl5cbiIgKyAKLQkJCSJUaGUgY29uc3RydWN0b3IgWCgoKSAtPiB0aGlzLmcoKSkgaXMgdW5kZWZp
bmVkXG4iICsgCisJCQkiVGhlIGNvbnN0cnVjdG9yIFgoKCkgLT4gaW50KSBpcyB1bmRlZmluZWRc
biIgKyAKIAkJCSItLS0tLS0tLS0tXG4iICsgCiAJCQkiNC4gRVJST1IgaW4gWC5qYXZhIChhdCBs
aW5lIDEyKVxuIiArIAogCQkJIgl0aGlzKCgpIC0+IHRoaXMuZygpKTtcbiIgKyAKQEAgLTY1MTQs
NyArNjUwMyw3IEBAIHB1YmxpYyB2b2lkIHRlc3Q0MDY2MTQoKSB7CiAJCQkiNS4gRVJST1IgaW4g
WC5qYXZhIChhdCBsaW5lIDE1KVxuIiArIAogCQkJIgl0aGlzKCgpIC0+IGYpO1xuIiArIAogCQkJ
IgleXl5eXl5eXl5eXl5eXlxuIiArIAotCQkJIlRoZSBjb25zdHJ1Y3RvciBYKCgpIC0+IGYpIGlz
IHVuZGVmaW5lZFxuIiArIAorCQkJIlRoZSBjb25zdHJ1Y3RvciBYKCgpIC0+IGludCkgaXMgdW5k
ZWZpbmVkXG4iICsgCiAJCQkiLS0tLS0tLS0tLVxuIiArIAogCQkJIjYuIEVSUk9SIGluIFguamF2
YSAoYXQgbGluZSAxNSlcbiIgKyAKIAkJCSIJdGhpcygoKSAtPiBmKTtcbiIgKyAKQEAgLTcwMTYs
NyArNzAwNSw3IEBAIHB1YmxpYyB2b2lkIHRlc3Q0MTI2NTAoKSB7CiAJCSIxLiBFUlJPUiBpbiBY
LmphdmEgKGF0IGxpbmUgNylcbiIgKyAKIAkJIglmb28oKCkgLT4gZm9vKFg6OmdldEludCkpO1xu
IiArIAogCQkiCV5eXlxuIiArIAotCQkiVGhlIG1ldGhvZCBmb28oSSkgaW4gdGhlIHR5cGUgWCBp
cyBub3QgYXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoKCkgLT4gZm9vKFg6OmdldEludCkp
XG4iICsgCisJCSJUaGUgbWV0aG9kIGZvbyhJKSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNh
YmxlIGZvciB0aGUgYXJndW1lbnRzICgoKSAtPiBTdHJpbmcpXG4iICsgCiAJCSItLS0tLS0tLS0t
XG4iICsgCiAJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNylcbiIgKyAKIAkJIglmb28o
KCkgLT4gZm9vKFg6OmdldEludCkpO1xuIiArIApAQCAtODk4Myw2ICs4OTcyLDc1IEBAIHB1Ymxp
YyB2b2lkIHRlc3Q0MzAzMTAoKSB7CiAJCQkiSW52YWxpZCBcJ0BGdW5jdGlvbmFsSW50ZXJmYWNl
XCcgYW5ub3RhdGlvbjsgRjI8VDEsUj4gaXMgbm90IGEgZnVuY3Rpb25hbCBpbnRlcmZhY2VcbiIg
KyAKIAkJCSItLS0tLS0tLS0tXG4iKTsKIH0KKy8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD00MjQxNTQsIFsxLjhdW2NvbXBpbGVyXSBQb2x5VHlwZUJpbmRp
bmcgbXVzdCBub3QgcmVuZGVyIHRoZSBmdWxsIGxhbWJkYSBib2R5IGluIGVycm9yIG1lc3NhZ2Vz
CisvL0V4YW1wbGUgY29waWVkIGZyb20gYnVnIHJlcG9ydC4KK3B1YmxpYyB2b2lkIHRlc3Q0MjQx
NTRhKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CisJdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCisJCW5ldyBT
dHJpbmdbXSB7CisJCQkiWC5qYXZhIiwKKwkJCSJpbXBvcnQgamF2YS51dGlsLkxpc3Q7IiArCisJ
CQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCXZvaWQgZm9vKExpc3Q8UHJvY2Vzcz4gbGlz
dCkge1xuIiArCisJCQkiCQlsaXN0LnJlbW92ZUlmKChpbnQgeCkgLT4gXCJcIik7XG4iICsKKwkJ
CSIJfVxuIiArCisJCQkifVxuIiwKKwkJfSwKKwkJIi0tLS0tLS0tLS1cbiIgKworCQkiMS4gRVJS
T1IgaW4gWC5qYXZhIChhdCBsaW5lIDMpXG4iICsKKwkJIglsaXN0LnJlbW92ZUlmKChpbnQgeCkg
LT4gXCJcIik7XG4iICsKKwkgICAgIgkgICAgIF5eXl5eXl5eXG4iICsKKwkgICAgIlRoZSBtZXRo
b2QgcmVtb3ZlSWYoUHJlZGljYXRlPD8gc3VwZXIgUHJvY2Vzcz4pIGluIHRoZSB0eXBlIENvbGxl
Y3Rpb248UHJvY2Vzcz4gaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKCg/IHgp
IC0+IGJvb2xlYW4pXG4iICsKKwkgICAgIi0tLS0tLS0tLS1cbiIgKworCSAgICAiMi4gRVJST1Ig
aW4gWC5qYXZhIChhdCBsaW5lIDMpXG4iICsKKwkgICAgIglsaXN0LnJlbW92ZUlmKChpbnQgeCkg
LT4gXCJcIik7XG4iICsKKwkgICAgIgkgICAgICAgICAgICAgIF5eXl5eXl5eXl5eXl5cbiIgKwor
CSAgICAiVGhlIHRhcmdldCB0eXBlIG9mIHRoaXMgZXhwcmVzc2lvbiBpcyBub3QgYSB3ZWxsIGZv
cm1lZCBwYXJhbWV0ZXJpemVkIHR5cGUgZHVlIHRvIGJvdW5kKHMpIG1pc21hdGNoXG4iICsKKwkg
ICAgIi0tLS0tLS0tLS1cbiIpOworfQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mv
c2hvd19idWcuY2dpP2lkPTQyNDE1NCwgIFsxLjhdW2NvbXBpbGVyXSBQb2x5VHlwZUJpbmRpbmcg
bXVzdCBub3QgcmVuZGVyIHRoZSBmdWxsIGxhbWJkYSBib2R5IGluIGVycm9yIG1lc3NhZ2VzCisv
L1ZhcmlhdGlvbnMgd2hlcmUgcmV0dXJuIHR5cGVzIG9yIGFyZ3VtZW50cyBtaXNtYXRjaCBvciBi
b3RoLgorcHVibGljIHZvaWQgdGVzdDQyNDE1NGIoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwl0aGlz
LnJ1bk5lZ2F0aXZlVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJInB1
YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIglpbnRlcmZhY2UgSSB7aW50IGZvbyhpbnQgeCk7fVxu
IiArCisJCQkiCXZvaWQgZm9vMihJIGkpIHt9XG4iICsKKwkJCSIJdm9pZCBmb28oKSB7fVxuIiAr
CisJCQkiCXZvaWQgYmFyKCkge1xuIiArCisJCQkiCQlmb28oMCwgKGludCB4LCBpbnQgeSkgLT4g
e3JldHVybiAyO30sIDApO1xuIiArCisJCQkiCQlmb28yKChpbnQgeCkgLT4gXCJcIik7XG4iKwor
CQkJIgkJZm9vMigoZmxvYXQgeCkgLT4gMCk7XG4iICsKKwkJCSIgICB9XG4iICsKKwkJCSJ9XG4i
CisJCX0sCisJCSItLS0tLS0tLS0tXG4iICsKKwkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGlu
ZSA2KVxuIiArCisJCSIJZm9vKDAsIChpbnQgeCwgaW50IHkpIC0+IHtyZXR1cm4gMjt9LCAwKTtc
biIgKworCQkiCV5eXlxuIiArCisJCSJUaGUgbWV0aG9kIGZvbygpIGluIHRoZSB0eXBlIFggaXMg
bm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKGludCwgKD8geCwgPyB5KSAtPiA/LCBp
bnQpXG4iICsKKwkJIi0tLS0tLS0tLS1cbiIgKworCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBs
aW5lIDcpXG4iICsKKwkJIglmb28yKChpbnQgeCkgLT4gXCJcIik7XG4iICsKKwkJIgleXl5eXG4i
ICsKKwkJIlRoZSBtZXRob2QgZm9vMihYLkkpIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2Fi
bGUgZm9yIHRoZSBhcmd1bWVudHMgKCg/IHgpIC0+IGludClcbiIgKworCQkiLS0tLS0tLS0tLVxu
IiArCisJCSIzLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNylcbiIgKworCQkiCWZvbzIoKGlu
dCB4KSAtPiBcIlwiKTtcbiIgKworCQkiCSAgICAgICAgICAgICAgICBeXlxuIiArCisJCSJUeXBl
IG1pc21hdGNoOiBjYW5ub3QgY29udmVydCBmcm9tIFN0cmluZyB0byBpbnRcbiIgKworCQkiLS0t
LS0tLS0tLVxuIiArCisJCSI0LiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgOClcbiIgKworCQki
CWZvbzIoKGZsb2F0IHgpIC0+IDApO1xuIiArCisJCSIJXl5eXlxuIiArCisJCSJUaGUgbWV0aG9k
IGZvbzIoWC5JKSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1l
bnRzICgoPyB4KSAtPiBpbnQpXG4iICsKKwkJIi0tLS0tLS0tLS1cbiIgKworCQkiNS4gRVJST1Ig
aW4gWC5qYXZhIChhdCBsaW5lIDgpXG4iICsKKwkJIglmb28yKChmbG9hdCB4KSAtPiAwKTtcbiIg
KworCQkiCSAgICAgIF5eXl5eXG4iICsKKwkJIkxhbWJkYSBleHByZXNzaW9uJ3MgcGFyYW1ldGVy
IHggaXMgZXhwZWN0ZWQgdG8gYmUgb2YgdHlwZSBpbnRcbiIgKworCQkiLS0tLS0tLS0tLVxuIik7
Cit9CiBwdWJsaWMgc3RhdGljIENsYXNzIHRlc3RDbGFzcygpIHsKIAlyZXR1cm4gTmVnYXRpdmVM
YW1iZGFFeHByZXNzaW9uc1Rlc3QuY2xhc3M7CiB9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29t
cGlsZXIvcmVncmVzc2lvbi9OdWxsQW5ub3RhdGlvblRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21w
aWxlci9yZWdyZXNzaW9uL051bGxBbm5vdGF0aW9uVGVzdC5qYXZhCmluZGV4IGZmZTk5N2IuLmQ4
YzlkMzQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3Ny
Yy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL051bGxBbm5v
dGF0aW9uVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVy
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL051bGxB
bm5vdGF0aW9uVGVzdC5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioKLSAqIENvcHlyaWdodCAoYykgMjAxMCwgMjAxNCBHSyBTb2Z0d2FyZSBBRyBhbmQgb3RoZXJz
LgorICogQ29weXJpZ2h0IChjKSAyMDEwLCAyMDE0IEdLIFNvZnR3YXJlIEFHLCBJQk0gYW5kIG90
aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29t
cGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMg
b2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMg
dGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKZGlmZiAtLWdpdCBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90
ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL051bGxUeXBlQW5ub3RhdGlvblRlc3QuamF2YSBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL051bGxUeXBlQW5ub3RhdGlvblRlc3QuamF2YQpp
bmRleCAyYWVkOGFjLi4yZDYxZGE5IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVn
cmVzc2lvbi9OdWxsVHlwZUFubm90YXRpb25UZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBp
bGVyL3JlZ3Jlc3Npb24vTnVsbFR5cGVBbm5vdGF0aW9uVGVzdC5qYXZhCkBAIC0zODEyLDkgKzM4
MTIsNyBAQCBwdWJsaWMgY2xhc3MgTnVsbFR5cGVBbm5vdGF0aW9uVGVzdCBleHRlbmRzIEFic3Ry
YWN0TnVsbEFubm90YXRpb25UZXN0IHsKIAkJCSIJCQlyZXR1cm4gbzEuY29tcGFyZVRvSWdub3Jl
Q2FzZShvMSk7XG4iICsgCiAJCQkiCQl9KTtcbiIgKyAKIAkJCSIJXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXl5eXl5eXl5eXG4iICsgCi0JCQkiVHlwZSBzYWZldHk6IFVuY2hlY2tlZCBpbnZvY2F0
aW9uIHNvcnQoQXJyYXlMaXN0LCAoPG5vIHR5cGU+IG8xLCA8bm8gdHlwZT4gbzIpIC0+IHtcbiIg
KyAKLQkJCSIgIHJldHVybiBvMS5jb21wYXJlVG9JZ25vcmVDYXNlKG8xKTtcbiIgKyAKLQkJCSJ9
KSBvZiB0aGUgZ2VuZXJpYyBtZXRob2Qgc29ydChMaXN0PFQ+LCBDb21wYXJhdG9yPD8gc3VwZXIg
VD4pIG9mIHR5cGUgQ29sbGVjdGlvbnNcbiIgKyAKKwkJCSJUeXBlIHNhZmV0eTogVW5jaGVja2Vk
IGludm9jYXRpb24gc29ydChBcnJheUxpc3QsICg/IG8xLCA/IG8yKSAtPiBpbnQpIG9mIHRoZSBn
ZW5lcmljIG1ldGhvZCBzb3J0KExpc3Q8VD4sIENvbXBhcmF0b3I8PyBzdXBlciBUPikgb2YgdHlw
ZSBDb2xsZWN0aW9uc1xuIiArIAogCQkJIi0tLS0tLS0tLS1cbiIgKyAKIAkJCSIyLiBXQVJOSU5H
IGluIFguamF2YSAoYXQgbGluZSA1KVxuIiArIAogCQkJIglDb2xsZWN0aW9ucy5zb3J0KG5ldyBB
cnJheUxpc3QoKSwgKG8xLCBvMikgLT4ge1xuIiArIApkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vT3ZlcmxvYWRSZXNvbHV0aW9uVGVzdDguamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9jb21waWxlci9yZWdyZXNzaW9uL092ZXJsb2FkUmVzb2x1dGlvblRlc3Q4LmphdmEKaW5kZXgg
ZGIxMTgzMS4uODU0ZjY1YiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
Y29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Np
b24vT3ZlcmxvYWRSZXNvbHV0aW9uVGVzdDguamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIv
cmVncmVzc2lvbi9PdmVybG9hZFJlc29sdXRpb25UZXN0OC5qYXZhCkBAIC0xNTAsMjcgKzE1MCwy
MSBAQCBwdWJsaWMgdm9pZCB0ZXN0MDA0KCkgewogCQkJCSJ9XG4iLAogCQkJfSwKIAkJCS8vIG5v
bmUgb2YgdGhlIGxhbWJkYXMgaXMgY29tcGF0aWJsZSBiZWNhdXNlIG5vbmUgaXMgdmFsdWUtY29t
cGF0aWJsZSwgd2hlcmVhcyBmb28oKSBuZWVkcyB0byByZXR1cm4gaW50LgotCQkJIi0tLS0tLS0t
LS1cbiIgKyAKLQkJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTEpXG4iICsgCi0JCQki
CWdvbygoKS0+IHsgXG4iICsgCi0JCQkiCV5eXlxuIiArIAotCQkJIlRoZSBtZXRob2QgZ29vKEop
IGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKCgpIC0+
IHtcbiIgKyAKLQkJCSIgIGJvb2xlYW4geSA9IHRydWU7XG4iICsgCi0JCQkiICB3aGlsZSAoeSkg
ICAgO1xuIiArIAotCQkJIn0pXG4iICsgCi0JCQkiLS0tLS0tLS0tLVxuMi4gRVJST1IgaW4gWC5q
YXZhIChhdCBsaW5lIDE1KVxuIiArIAotCQkJIglnb28oKCktPiB7IFxuIiArIAotCQkJIgleXl5c
biIgKyAKLQkJCSJUaGUgbWV0aG9kIGdvbyhKKSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNh
YmxlIGZvciB0aGUgYXJndW1lbnRzICgoKSAtPiB7XG4iICsgCi0JCQkiICB3aGlsZSAoeCkgICAg
O1xuIiArIAotCQkJIn0pXG4iICsgCi0JCQkiLS0tLS0tLS0tLVxuIiArIAotCQkJIjMuIEVSUk9S
IGluIFguamF2YSAoYXQgbGluZSAxOClcbiIgKyAKLQkJCSIJZ29vKCgpLT4geyBcbiIgKyAKLQkJ
CSIJXl5eXG4iICsgCi0JCQkiVGhlIG1ldGhvZCBnb28oSikgaW4gdGhlIHR5cGUgWCBpcyBub3Qg
YXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoKCkgLT4ge1xuIiArIAotCQkJIiAgd2hpbGUg
KGYpICAgIDtcbiIgKyAKLQkJCSJ9KVxuIiArIAorCQkJIi0tLS0tLS0tLS1cbiIgKworCQkJIjEu
IEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxMSlcbiIgKworCQkJIglnb28oKCktPiB7IFxuIiAr
CisJCQkiCV5eXlxuIiArCisJCQkiVGhlIG1ldGhvZCBnb28oSikgaW4gdGhlIHR5cGUgWCBpcyBu
b3QgYXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoKCkgLT4gaW50KVxuIiArCisJCQkiLS0t
LS0tLS0tLVxuIiArCisJCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDE1KVxuIiArCisJ
CQkiCWdvbygoKS0+IHsgXG4iICsKKwkJCSIJXl5eXG4iICsKKwkJCSJUaGUgbWV0aG9kIGdvbyhK
KSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoKSAt
PiBpbnQpXG4iICsKKwkJCSItLS0tLS0tLS0tXG4iICsKKwkJCSIzLiBFUlJPUiBpbiBYLmphdmEg
KGF0IGxpbmUgMTgpXG4iICsKKwkJCSIJZ29vKCgpLT4geyBcbiIgKworCQkJIgleXl5cbiIgKwor
CQkJIlRoZSBtZXRob2QgZ29vKEopIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9y
IHRoZSBhcmd1bWVudHMgKCgpIC0+IGludClcbiIgKwogCQkJIi0tLS0tLS0tLS1cbiIpOwogfQog
cHVibGljIHZvaWQgdGVzdDAwNSgpIHsKQEAgLTIwNCw5ICsxOTgsNyBAQCBwdWJsaWMgdm9pZCB0
ZXN0MDA1KCkgewogCQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxOClcbiIgKyAKIAkJ
CSIJZ29vKCgpLT4geyBcbiIgKyAKIAkJCSIJXl5eXG4iICsgCi0JCQkiVGhlIG1ldGhvZCBnb28o
SikgaW4gdGhlIHR5cGUgWCBpcyBub3QgYXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoKCkg
LT4ge1xuIiArIC8vIGJlY2F1c2UgbGFtYmRhIGhhcyBlcnJvcnMgLT4gbm90IHZhbHVlQ29tcGF0
aWJsZSAKLQkJCSIgIHdoaWxlIChmKSAgICA7XG4iICsgCi0JCQkifSlcbiIgKyAKKwkJCSJUaGUg
bWV0aG9kIGdvbyhKKSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJn
dW1lbnRzICgoKSAtPiBpbnQpXG4iICsgLy8gYmVjYXVzZSBsYW1iZGEgaGFzIGVycm9ycyAtPiBu
b3QgdmFsdWVDb21wYXRpYmxlIAogCQkJIi0tLS0tLS0tLS1cbiIgKwogCQkJIjIuIEVSUk9SIGlu
IFguamF2YSAoYXQgbGluZSAxOSlcbiIgKyAKIAkJCSIJd2hpbGUgKGYpOyBcbiIgKyAKQEAgLTI1
OCw3ICsyNTAsNyBAQCBwdWJsaWMgdm9pZCB0ZXN0MDA3KCkgewogCQkJIjEuIEVSUk9SIGluIFgu
amF2YSAoYXQgbGluZSA5KVxuIiArIAogCQkJIglnb28oKCktPiAxMCk7IFxuIiArIAogCQkJIgle
Xl5cbiIgKyAKLQkJCSJUaGUgbWV0aG9kIGdvbyhKKSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBs
aWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoKSAtPiAxMClcbiIgKyAKKwkJCSJUaGUgbWV0aG9k
IGdvbyhKKSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRz
ICgoKSAtPiB2b2lkKVxuIiArIAogCQkJIi0tLS0tLS0tLS1cbiIgKyAKIAkJCSIyLiBFUlJPUiBp
biBYLmphdmEgKGF0IGxpbmUgOSlcbiIgKyAKIAkJCSIJZ29vKCgpLT4gMTApOyBcbiIgKyAKZGlm
ZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMTdUZXN0LmphdmEgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9t
L0FTVENvbnZlcnRlcjE3VGVzdC5qYXZhCmluZGV4IGYzYjk3ZTYuLjkyMTI0OGYgMTAwNjQ0Ci0t
LSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMTdUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9B
U1RDb252ZXJ0ZXIxN1Rlc3QuamF2YQpAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBv
dGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFuZCBv
dGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2Nv
bXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1z
IG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVz
IHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC04OTQsMTAgKzg5NCwx
MCBAQCBwdWJsaWMgY2xhc3MgQVNUQ29udmVydGVyMTdUZXN0IGV4dGVuZHMgQ29udmVydGVyVGVz
dFNldHVwIHsKIAkJCiAJCVN0cmluZyBlcnJvciA9ICJMYW1iZGEgZXhwcmVzc2lvbnMgYXJlIGFs
bG93ZWQgb25seSBhdCBzb3VyY2UgbGV2ZWwgMS44IG9yIGFib3ZlXG4iICsgCiAJCQkJIkxhbWJk
YSBleHByZXNzaW9ucyBhcmUgYWxsb3dlZCBvbmx5IGF0IHNvdXJjZSBsZXZlbCAxLjggb3IgYWJv
dmVcbiIgKyAKLQkJCQkiVGhlIG1ldGhvZCBmb28oWC5TdHJpbmdUb0ludCkgaW4gdGhlIHR5cGUg
WCBpcyBub3QgYXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoKFN0cmluZyBzKSAtPiBzLmxl
bmd0aCgpKVxuIiArIAorCQkJCSJUaGUgbWV0aG9kIGZvbyhYLlN0cmluZ1RvSW50KSBpbiB0aGUg
dHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoPyBzKSAtPiA/KVxu
IiArIAogCQkJCSJMYW1iZGEgZXhwcmVzc2lvbnMgYXJlIGFsbG93ZWQgb25seSBhdCBzb3VyY2Ug
bGV2ZWwgMS44IG9yIGFib3ZlXG4iICsgCiAJCQkJIkxhbWJkYSBleHByZXNzaW9ucyBhcmUgYWxs
b3dlZCBvbmx5IGF0IHNvdXJjZSBsZXZlbCAxLjggb3IgYWJvdmVcbiIgKyAKLQkJCQkiVGhlIG1l
dGhvZCBiYXIoWC5SZWR1Y2VJbnQpIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9y
IHRoZSBhcmd1bWVudHMgKChpbnQgeCwgaW50IHkpIC0+ICh4ICsgeSkpXG4iICsgCisJCQkJIlRo
ZSBtZXRob2QgYmFyKFguUmVkdWNlSW50KSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxl
IGZvciB0aGUgYXJndW1lbnRzICgoPyB4LCA/IHkpIC0+ID8pXG4iICsgCiAJCQkJIkxhbWJkYSBl
eHByZXNzaW9ucyBhcmUgYWxsb3dlZCBvbmx5IGF0IHNvdXJjZSBsZXZlbCAxLjggb3IgYWJvdmUi
OwogCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgNywgZXJyb3IpOwogCmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUu
dGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0
ZXIxOFRlc3QuamF2YQppbmRleCAzODU2NjhmLi5iYTFiZjAxIDEwMDY0NAotLS0gYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
ZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVy
MThUZXN0LmphdmEKQEAgLTM2NjYsNyArMzY2Niw3IEBAIHB1YmxpYyBjbGFzcyBBU1RDb252ZXJ0
ZXIxOFRlc3QgZXh0ZW5kcyBDb252ZXJ0ZXJUZXN0U2V0dXAgewogCQlBU1ROb2RlIG5vZGUgPSBi
dWlsZEFTVChjb250ZW50cywgdGhpcy53b3JraW5nQ29weSwgZmFsc2UpOwogCQlhc3NlcnRFcXVh
bHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5v
ZGUuZ2V0Tm9kZVR5cGUoKSk7CiAJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlvblVuaXQgPSAo
Q29tcGlsYXRpb25Vbml0KSBub2RlOwotCQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25V
bml0LCAyLCAiVGhlIG1ldGhvZCBnb28oSSkgaW4gdGhlIHR5cGUgWCBpcyBub3QgYXBwbGljYWJs
ZSBmb3IgdGhlIGFyZ3VtZW50cyAoKDxubyB0eXBlPiBzKSAtPiAwKVxuIiArIAorCQlhc3NlcnRQ
cm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAyLCAiVGhlIG1ldGhvZCBnb28oSSkgaW4gdGhl
IHR5cGUgWCBpcyBub3QgYXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoKD8gcykgLT4gPylc
biIgKyAKIAkJCQkJCQkJCQkJCSJUaGUgdGFyZ2V0IHR5cGUgb2YgdGhpcyBleHByZXNzaW9uIG11
c3QgYmUgYSBmdW5jdGlvbmFsIGludGVyZmFjZSIpOwogCQlub2RlID0gZ2V0QVNUTm9kZShjb21w
aWxhdGlvblVuaXQsIDEpOwogCQlhc3NlcnRFcXVhbHMoIk5vdCBhIHR5cGUgZGVjbGFyYXRpb24i
LCBBU1ROb2RlLlRZUEVfREVDTEFSQVRJT04sIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CmRpZmYgLS1n
aXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29tcGlsZXIvYXN0L0xhbWJkYUV4cHJlc3Npb24uamF2YSBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTGFtYmRh
RXhwcmVzc2lvbi5qYXZhCmluZGV4IGY2NjkxMTEuLmJlOWIyNWUgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxl
ci9hc3QvTGFtYmRhRXhwcmVzc2lvbi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Nv
bXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvTGFtYmRhRXhwcmVz
c2lvbi5qYXZhCkBAIC0xMjYxLDQgKzEyNjEsMzAgQEAgcHVibGljIGNsYXNzIExhbWJkYUV4cHJl
c3Npb24gZXh0ZW5kcyBGdW5jdGlvbmFsRXhwcmVzc2lvbiBpbXBsZW1lbnRzIFJlZmVyZW5jZUMK
IAkJfQogCQlyZXR1cm4gdGhpcy5jbGFzc1R5cGUgPSBuZXcgTGFtYmRhVHlwZUJpbmRpbmcoKTsK
IAl9CisKKwlwdWJsaWMgY2hhcltdIHJlYWRhYmxlTmFtZShib29sZWFuIG1ha2VTaG9ydCkgewor
CQlBcmd1bWVudFtdIGFyZ3MgPSB0aGlzLmFyZ3VtZW50cygpOworCisJCVN0cmluZ0J1ZmZlciBi
dWZmZXIgPSBuZXcgU3RyaW5nQnVmZmVyKDEwKTsKKwkJYnVmZmVyLmFwcGVuZCgnKCcpOworCQlm
b3IgKGludCBqID0gMDsgaiA8IGFyZ3MubGVuZ3RoOyBqKyspIHsKKwkJCWlmIChqICE9IDApIHsK
KwkJCQlidWZmZXIuYXBwZW5kKCIsICIpOyAvLyROT04tTkxTLTEkCisJCQl9CisJCQlidWZmZXIu
YXBwZW5kKCI/ICIpOyAvLyROT04tTkxTLTEkCisJCQlidWZmZXIuYXBwZW5kKG5ldyBTdHJpbmco
YXJnc1tqXS5uYW1lKSk7CisJCX0KKwkJYnVmZmVyLmFwcGVuZCgiKSAtPiAiKTsgLy8kTk9OLU5M
Uy0xJAorCisJCU1ldGhvZEJpbmRpbmcgbWQgPSB0aGlzLmJpbmRpbmc7CisJCWlmIChtZCAhPSBu
dWxsKSB7CisJCQlpZiAobWFrZVNob3J0KQorCQkJCWJ1ZmZlci5hcHBlbmQobWQucmV0dXJuVHlw
ZS5zaG9ydFJlYWRhYmxlTmFtZSgpKTsKKwkJCWVsc2UKKwkJCQlidWZmZXIuYXBwZW5kKG1kLnJl
dHVyblR5cGUucmVhZGFibGVOYW1lKCkpOworCQl9IGVsc2UgeworCQkJYnVmZmVyLmFwcGVuZCgi
PyIpOyAvLyROT04tTkxTLTEkCisJCX0KKwkJcmV0dXJuIGJ1ZmZlci50b1N0cmluZygpLnRvQ2hh
ckFycmF5KCk7CisJfQogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGls
ZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Qb2x5VHlwZUJpbmRp
bmcuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9sb29rdXAvUG9seVR5cGVCaW5kaW5nLmphdmEKaW5kZXggZTI0NTg1
Yy4uN2E3ZWE2NiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Qb2x5VHlwZUJpbmRpbmcuamF2
YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29tcGlsZXIvbG9va3VwL1BvbHlUeXBlQmluZGluZy5qYXZhCkBAIC0xNCw2ICsxNCw3
IEBACiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5sb29rdXA7CiAK
IGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkV4cHJlc3Npb247
CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5MYW1iZGFFeHBy
ZXNzaW9uOwogCiBwdWJsaWMgY2xhc3MgUG9seVR5cGVCaW5kaW5nIGV4dGVuZHMgVHlwZUJpbmRp
bmcgewogCkBAIC00NSw5ICs0NiwxMSBAQCBwdWJsaWMgY2xhc3MgUG9seVR5cGVCaW5kaW5nIGV4
dGVuZHMgVHlwZUJpbmRpbmcgewogCX0KIAogCXB1YmxpYyBjaGFyW10gcmVhZGFibGVOYW1lKCkg
ewotCQlyZXR1cm4gdGhpcy5leHByZXNzaW9uLnByaW50RXhwcmVzc2lvbigwLCAgbmV3IFN0cmlu
Z0J1ZmZlcigpKS50b1N0cmluZygpLnRvQ2hhckFycmF5KCk7CisJCXJldHVybiB0aGlzLmV4cHJl
c3Npb24gaW5zdGFuY2VvZiBMYW1iZGFFeHByZXNzaW9uID8KKwkJCQkoKExhbWJkYUV4cHJlc3Np
b24pIHRoaXMuZXhwcmVzc2lvbikucmVhZGFibGVOYW1lKGZhbHNlKSA6CisJCQkJCXRoaXMuZXhw
cmVzc2lvbi5wcmludEV4cHJlc3Npb24oMCwgIG5ldyBTdHJpbmdCdWZmZXIoKSkudG9TdHJpbmco
KS50b0NoYXJBcnJheSgpOwogCX0KLQkKKwogCXB1YmxpYyBib29sZWFuIHNJc01vcmVTcGVjaWZp
YyhUeXBlQmluZGluZyBzLCBUeXBlQmluZGluZyB0LCBTY29wZSBzY29wZSkgewogCQlyZXR1cm4g
dGhpcy5leHByZXNzaW9uLnNJc01vcmVTcGVjaWZpYyhzLCB0LCBzY29wZSk7CiAJfQpAQCAtNjYs
NCArNjksOSBAQCBwdWJsaWMgY2xhc3MgUG9seVR5cGVCaW5kaW5nIGV4dGVuZHMgVHlwZUJpbmRp
bmcgewogCQl0eXBlLnZhbmlsbGFDb21wYXRpYmlsdHkgPSAhdGhpcy52YW5pbGxhQ29tcGF0aWJp
bHR5OwogCQlyZXR1cm4gdHlwZTsKIAl9CisKKwlwdWJsaWMgY2hhcltdIHNob3J0UmVhZGFibGVO
YW1lKCkgeworCQlyZXR1cm4gdGhpcy5leHByZXNzaW9uIGluc3RhbmNlb2YgTGFtYmRhRXhwcmVz
c2lvbiA/CisJCQkJKChMYW1iZGFFeHByZXNzaW9uKSB0aGlzLmV4cHJlc3Npb24pLnJlYWRhYmxl
TmFtZSh0cnVlKSA6IHN1cGVyLnNob3J0UmVhZGFibGVOYW1lKCk7CisJfQogfQpcIE5vIG5ld2xp
bmUgYXQgZW5kIG9mIGZpbGUK
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>241773</attachid>
            <date>2014-04-09 06:23:00 -0400</date>
            <delta_ts>2014-04-09 06:23:22 -0400</delta_ts>
            <desc>Patch</desc>
            <filename>patch.patch</filename>
            <type>text/plain</type>
            <size>20316</size>
            <attacher name="shankha banerjee">shankhba</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0dlbmVyaWNzUmVncmVz
c2lvblRlc3RfMV84LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9HZW5lcmlj
c1JlZ3Jlc3Npb25UZXN0XzFfOC5qYXZhCmluZGV4IDE0OTM1YjEuLmFiYjgwZjYgMTAwNjQ0Ci0t
LSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0dlbmVyaWNzUmVncmVzc2lvblRlc3Rf
MV84LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vR2VuZXJpY3NSZWdy
ZXNzaW9uVGVzdF8xXzguamF2YQpAQCAtMTc1Niw3ICsxNzU2LDcgQEAgcHVibGljIHZvaWQgdGVz
dEJ1ZzQyNzE2OCgpIHsKIAkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA3KVxuIiArIAog
CQkiCXBlcmZvcm0oKCkgLT4gMTMpOyBcbiIgKyAKIAkJIgleXl5eXl5eXG4iICsgCi0JCSJUaGUg
bWV0aG9kIHBlcmZvcm0oUHJvZHVjZXI8VD4pIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2Fi
bGUgZm9yIHRoZSBhcmd1bWVudHMgKCgpIC0+IDEzKVxuIiArIAorCQkiVGhlIG1ldGhvZCBwZXJm
b3JtKFByb2R1Y2VyPFQ+KSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUg
YXJndW1lbnRzICgoKSAtPiA8bm8gdHlwZT4gKVxuIiArIAogCQkiLS0tLS0tLS0tLVxuIiArIAog
CQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDcpXG4iICsgCiAJCSIJcGVyZm9ybSgoKSAt
PiAxMyk7IFxuIiArIApAQCAtMjQ1MSw4ICsyNDUxLDcgQEAgcHVibGljIHZvaWQgdGVzdEJ1ZzQy
OTA5MF9jb21tZW50MSgpIHsKIAkJIjEuIEVSUk9SIGluIEp1bmsxMC5qYXZhIChhdCBsaW5lIDE3
KVxuIiArIAogCQkiCWFkZExpc3RlbmVyKG51bGwsIChTZXRDaGFuZ2VMaXN0ZW5lci5DaGFuZ2U8
Pz4gYykgLT4ge30pO1xuIiArIAogCQkiCV5eXl5eXl5eXl5eXG4iICsgCi0JCSJUaGUgbWV0aG9k
IGFkZExpc3RlbmVyKEp1bmsxMC5TZXRMaXN0ZW5lckhlbHBlcjxFPiwgSnVuazEwLlNldENoYW5n
ZUxpc3RlbmVyPD8gc3VwZXIgRT4pIGluIHRoZSB0eXBlIEp1bmsxMCBpcyBub3QgYXBwbGljYWJs
ZSBmb3IgdGhlIGFyZ3VtZW50cyAobnVsbCwgKFNldENoYW5nZUxpc3RlbmVyLkNoYW5nZTw/PiBj
KSAtPiB7XG4iICsgCi0JCSJ9KVxuIiArIAorCQkiVGhlIG1ldGhvZCBhZGRMaXN0ZW5lcihKdW5r
MTAuU2V0TGlzdGVuZXJIZWxwZXI8RT4sIEp1bmsxMC5TZXRDaGFuZ2VMaXN0ZW5lcjw/IHN1cGVy
IEU+KSBpbiB0aGUgdHlwZSBKdW5rMTAgaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVu
dHMgKG51bGwsIChTZXRDaGFuZ2VMaXN0ZW5lci5DaGFuZ2U8Pz4gYykgLT4gdm9pZClcbiIgKyAK
IAkJIi0tLS0tLS0tLS1cbiIgKyAKIAkJIjIuIEVSUk9SIGluIEp1bmsxMC5qYXZhIChhdCBsaW5l
IDE3KVxuIiArIAogCQkiCWFkZExpc3RlbmVyKG51bGwsIChTZXRDaGFuZ2VMaXN0ZW5lci5DaGFu
Z2U8Pz4gYykgLT4ge30pO1xuIiArIApAQCAtMjU3MywxMCArMjU3Miw4IEBAIHB1YmxpYyB2b2lk
IHRlc3RCdWc0Mjg4MTEoKSB7CiAJCSIxLiBFUlJPUiBpbiBNb3JlQ29sbGVjdG9ycy5qYXZhIChh
dCBsaW5lIDE2KVxuIiArIAogCQkiCXJldHVybiBDb2xsZWN0b3Iub2YoQXJyYXlMaXN0PFQ+Ojpu
ZXcsXG4iICsgCiAJCSIJICAgICAgICAgICAgICAgICBeXlxuIiArIAotCQkiVGhlIG1ldGhvZCBv
ZihBcnJheUxpc3Q8VD46Om5ldywgTGlzdDxUPjo6YWRkLCAoPG5vIHR5cGU+IGxlZnQsIDxubyB0
eXBlPiByaWdodCkgLT4ge1xuIiArIAotCQkiICBsZWZ0LmFkZEFsbChyaWdodCk7XG4iICsgCi0J
CSIgIHJldHVybiBsZWZ0O1xuIiArIAotCQkifSwgSW1tdXRhYmxlTGlzdDo6Y29weU9mKSBpcyB1
bmRlZmluZWQgZm9yIHRoZSB0eXBlIENvbGxlY3RvclxuIiArIAorCQkiVGhlIG1ldGhvZCBvZihB
cnJheUxpc3Q8VD46Om5ldywgTGlzdDxUPjo6YWRkLCAoPG5vIHR5cGU+IGxlZnQsIDxubyB0eXBl
PiByaWdodCkgLT4gPG5vIHR5cGU+IFxuIiArIAorCQkiLCBJbW11dGFibGVMaXN0Ojpjb3B5T2Yp
IGlzIHVuZGVmaW5lZCBmb3IgdGhlIHR5cGUgQ29sbGVjdG9yXG4iICsgCiAJCSItLS0tLS0tLS0t
XG4iICsgCiAJCSIyLiBXQVJOSU5HIGluIE1vcmVDb2xsZWN0b3JzLmphdmEgKGF0IGxpbmUgMjMp
XG4iICsgCiAJCSIJcHVibGljIHN0YXRpYyA8VD4gSW1tdXRhYmxlTGlzdDxUPiBjb3B5T2YgKENv
bGxlY3Rpb248VD4gYykge1xuIiArIApkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUu
dGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3Jl
Z3Jlc3Npb24vTGFtYmRhRXhwcmVzc2lvbnNUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIv
cmVncmVzc2lvbi9MYW1iZGFFeHByZXNzaW9uc1Rlc3QuamF2YQppbmRleCBkODMwZDllLi4zMzFm
MmI3IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9MYW1iZGFFeHBy
ZXNzaW9uc1Rlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxl
ci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9MYW1i
ZGFFeHByZXNzaW9uc1Rlc3QuamF2YQpAQCAtMjE0Nyw3ICsyMTQ3LDcgQEAgcHVibGljIHZvaWQg
dGVzdEJ1ZzQyNDc0MigpIHsKIAkJIjEuIEVSUk9SIGluIFRlc3RJbmxpbmVMYW1iZGFBcnJheS5q
YXZhIChhdCBsaW5lIDQpXG4iICsgCiAJCSIJVGVzdElubGluZUxhbWJkYUFycmF5IGggPSBuZXcg
VGVzdElubGluZUxhbWJkYUFycmF5KHggLT4geCsrKTsJLy8gWzldXG4iICsgCiAJCSIJICAgICAg
ICAgICAgICAgICAgICAgICAgICBeXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXlxu
IiArIAotCQkiVGhlIGNvbnN0cnVjdG9yIFRlc3RJbmxpbmVMYW1iZGFBcnJheSgoPG5vIHR5cGU+
IHgpIC0+IHggKyspIGlzIHVuZGVmaW5lZFxuIiArIAorCQkiVGhlIGNvbnN0cnVjdG9yIFRlc3RJ
bmxpbmVMYW1iZGFBcnJheSgoPG5vIHR5cGU+IHgpIC0+IDxubyB0eXBlPiApIGlzIHVuZGVmaW5l
ZFxuIiArIAogCQkiLS0tLS0tLS0tLVxuIiArIAogCQkiMi4gRVJST1IgaW4gVGVzdElubGluZUxh
bWJkYUFycmF5LmphdmEgKGF0IGxpbmUgNSlcbiIgKyAKIAkJIglwdWJsaWMgVGVzdElubGluZUxh
bWJkYShGSSBmaSkge31cbiIgKyAKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdy
ZXNzaW9uL05lZ2F0aXZlTGFtYmRhRXhwcmVzc2lvbnNUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29t
cGlsZXIvcmVncmVzc2lvbi9OZWdhdGl2ZUxhbWJkYUV4cHJlc3Npb25zVGVzdC5qYXZhCmluZGV4
IDU0NTUzMjQuLmNkNmJiOWYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3Rz
LmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNz
aW9uL05lZ2F0aXZlTGFtYmRhRXhwcmVzc2lvbnNUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Nv
bXBpbGVyL3JlZ3Jlc3Npb24vTmVnYXRpdmVMYW1iZGFFeHByZXNzaW9uc1Rlc3QuamF2YQpAQCAt
NTAzMyw4ICs1MDMzLDcgQEAgdGhpcy5ydW5OZWdhdGl2ZVRlc3QoCiAJCQkJIjEuIEVSUk9SIGlu
IFguamF2YSAoYXQgbGluZSAyMClcbiIgKyAKIAkJCQkiCW5ldyBYKCkuZm9vKChzKS0+e30pO1xu
IiArIAogCQkJCSIJICAgICAgICBeXl5cbiIgKyAKLQkJCQkiVGhlIG1ldGhvZCBmb28oSSkgaW4g
dGhlIHR5cGUgWCBpcyBub3QgYXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoKDxubyB0eXBl
PiBzKSAtPiB7XG4iICsgCi0JCQkJIn0pXG4iICsgCisJCQkJIlRoZSBtZXRob2QgZm9vKEkpIGlu
IHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKCg8bm8gdHlw
ZT4gcykgLT4gdm9pZClcbiIgKyAKIAkJCQkiLS0tLS0tLS0tLVxuIiArIAogCQkJCSIyLiBFUlJP
UiBpbiBYLmphdmEgKGF0IGxpbmUgMjApXG4iICsgCiAJCQkJIgluZXcgWCgpLmZvbygocyktPnt9
KTtcbiIgKyAKQEAgLTUwNzYsOSArNTA3NSw3IEBAIHRoaXMucnVuTmVnYXRpdmVUZXN0KAogCQkJ
CSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTUpXG4iICsgCiAJCQkJIgluZXcgWCgpLmZv
bygoKS0+eyByZXR1cm4gXCJcIjt9KTtcbiIgKyAKIAkJCQkiCSAgICAgICAgXl5eXG4iICsgCi0J
CQkJIlRoZSBtZXRob2QgZm9vKEkpIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9y
IHRoZSBhcmd1bWVudHMgKCgpIC0+IHtcbiIgKyAKLQkJCQkiICByZXR1cm4gXCJcIjtcbiIgKyAK
LQkJCQkifSlcbiIgKyAKKwkJCQkiVGhlIG1ldGhvZCBmb28oSSkgaW4gdGhlIHR5cGUgWCBpcyBu
b3QgYXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoKCkgLT4gdm9pZClcbiIgKyAKIAkJCQki
LS0tLS0tLS0tLVxuIiArIAogCQkJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTUpXG4i
ICsgCiAJCQkJIgluZXcgWCgpLmZvbygoKS0+eyByZXR1cm4gXCJcIjt9KTtcbiIgKyAKQEAgLTUw
ODgsNyArNTA4NSw3IEBAIHRoaXMucnVuTmVnYXRpdmVUZXN0KAogCQkJCSIzLiBFUlJPUiBpbiBY
LmphdmEgKGF0IGxpbmUgMTYpXG4iICsgCiAJCQkJIgluZXcgWCgpLmZvbygoKS0+IDEwKTtcbiIg
KyAKIAkJCQkiCSAgICAgICAgXl5eXG4iICsgCi0JCQkJIlRoZSBtZXRob2QgZm9vKEkpIGluIHRo
ZSB0eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKCgpIC0+IDEwKVxu
IiArIAorCQkJCSJUaGUgbWV0aG9kIGZvbyhJKSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNh
YmxlIGZvciB0aGUgYXJndW1lbnRzICgoKSAtPiB2b2lkKVxuIiArIAogCQkJCSItLS0tLS0tLS0t
XG4iICsgCiAJCQkJIjQuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxNilcbiIgKyAKIAkJCQki
CW5ldyBYKCkuZm9vKCgpLT4gMTApO1xuIiArIApAQCAtNTIzNCw5ICs1MjMxLDcgQEAgdGhpcy5y
dW5OZWdhdGl2ZVRlc3QoCiAJCQkJIjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxMSlcbiIg
KyAKIAkJCQkiCW5ldyBYKCkuZm9vKCgpLT57IHJldHVybiAxMDsgfSk7XG4iICsgCiAJCQkJIgkg
ICAgICAgIF5eXlxuIiArIAotCQkJCSJUaGUgbWV0aG9kIGZvbyhJKSBpbiB0aGUgdHlwZSBYIGlz
IG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoKSAtPiB7XG4iICsgCi0JCQkJIiAg
cmV0dXJuIDEwO1xuIiArIAotCQkJCSJ9KVxuIiArIAorCQkJCSJUaGUgbWV0aG9kIGZvbyhJKSBp
biB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoKSAtPiB2
b2lkKVxuIiArIAogCQkJCSItLS0tLS0tLS0tXG4iICsgCiAJCQkJIjIuIEVSUk9SIGluIFguamF2
YSAoYXQgbGluZSAxMSlcbiIgKyAKIAkJCQkiCW5ldyBYKCkuZm9vKCgpLT57IHJldHVybiAxMDsg
fSk7XG4iICsgCkBAIC01MjkwLDggKzUyODUsNyBAQCB0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKIAkJ
CQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDExKVxuIiArIAogCQkJCSIJbmV3IFgoKS5m
b28oKE9iamVjdCBvKS0+e30pO1xuIiArIAogCQkJCSIJICAgICAgICBeXl5cbiIgKyAKLQkJCQki
VGhlIG1ldGhvZCBmb28oSSkgaW4gdGhlIHR5cGUgWCBpcyBub3QgYXBwbGljYWJsZSBmb3IgdGhl
IGFyZ3VtZW50cyAoKE9iamVjdCBvKSAtPiB7XG4iICsgCi0JCQkJIn0pXG4iICsgCisJCQkJIlRo
ZSBtZXRob2QgZm9vKEkpIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBh
cmd1bWVudHMgKChPYmplY3QgbykgLT4gdm9pZClcbiIgKyAKIAkJCQkiLS0tLS0tLS0tLVxuIiAr
IAogCQkJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTEpXG4iICsgCiAJCQkJIgluZXcg
WCgpLmZvbygoT2JqZWN0IG8pLT57fSk7XG4iICsgCkBAIC01NTA2LDkgKzU1MDAsNyBAQCBwdWJs
aWMgdm9pZCB0ZXN0NDAxODQ1YSgpIHsKIAkJCSIzLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUg
OSlcbiIgKyAKIAkJCSIJZm9vKCh4KS0+IHtyZXR1cm4gMTA7fSk7XG4iICsgCiAJCQkiCV5eXlxu
IiArIAotCQkJIlRoZSBtZXRob2QgZm9vKElbXS4uLikgaW4gdGhlIHR5cGUgWCBpcyBub3QgYXBw
bGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoKDxubyB0eXBlPiB4KSAtPiB7XG4iICsgCi0JCQki
ICByZXR1cm4gMTA7XG4iICsgCi0JCQkifSlcbiIgKyAKKwkJCSJUaGUgbWV0aG9kIGZvbyhJW10u
Li4pIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKCg8
bm8gdHlwZT4geCkgLT4gPG5vIHR5cGU+IClcbiIgKyAKIAkJCSItLS0tLS0tLS0tXG4iICsgCiAJ
CQkiNC4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDkpXG4iICsgCiAJCQkiCWZvbygoeCktPiB7
cmV0dXJuIDEwO30pO1xuIiArIApAQCAtNTczOSwxMCArNTczMSw3IEBAIHB1YmxpYyB2b2lkIHRl
c3Q0MDE5MzlhKCkgewogCQkJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgOClcbiIgKyAK
IAkJCQkiCWZvbygoKS0+eyBpZiAoMSA9PSAyKSB0aHJvdyBuZXcgUnVudGltZUV4Y2VwdGlvbigp
OyB9KTtcbiIgKyAKIAkJCQkiCV5eXlxuIiArIAotCQkJCSJUaGUgbWV0aG9kIGZvbyhJKSBpbiB0
aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoKSAtPiB7XG4i
ICsgCi0JCQkJIiAgaWYgKCgxID09IDIpKVxuIiArIAotCQkJCSIgICAgICB0aHJvdyBuZXcgUnVu
dGltZUV4Y2VwdGlvbigpO1xuIiArIAotCQkJCSJ9KVxuIiArIAorCQkJCSJUaGUgbWV0aG9kIGZv
byhJKSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgo
KSAtPiBpbnQpXG4iICsgCiAJCQkJIi0tLS0tLS0tLS1cbiIpOwogfQogLy8gaHR0cHM6Ly9idWdz
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwMTkzOSwgWzEuOF1bY29tcGlsZXJd
IEluY29ycmVjdCBzaGFwZSBhbmFseXNpcyBsZWFkcyB0byBtZXRob2QgcmVzb2x1dGlvbiBmYWls
dXJlIC4KQEAgLTY0OTQsNyArNjQ4Myw3IEBAIHB1YmxpYyB2b2lkIHRlc3Q0MDY2MTQoKSB7CiAJ
CQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDkpXG4iICsgCiAJCQkiCXRoaXMoKCkgLT4g
dGhpcy5mKTtcbiIgKyAKIAkJCSIJXl5eXl5eXl5eXl5eXl5eXl5eXlxuIiArIAotCQkJIlRoZSBj
b25zdHJ1Y3RvciBYKCgpIC0+IHRoaXMuZikgaXMgdW5kZWZpbmVkXG4iICsgCisJCQkiVGhlIGNv
bnN0cnVjdG9yIFgoKCkgLT4gaW50KSBpcyB1bmRlZmluZWRcbiIgKyAKIAkJCSItLS0tLS0tLS0t
XG4iICsgCiAJCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDkpXG4iICsgCiAJCQkiCXRo
aXMoKCkgLT4gdGhpcy5mKTtcbiIgKyAKQEAgLTY1MDQsNyArNjQ5Myw3IEBAIHB1YmxpYyB2b2lk
IHRlc3Q0MDY2MTQoKSB7CiAJCQkiMy4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDEyKVxuIiAr
IAogCQkJIgl0aGlzKCgpIC0+IHRoaXMuZygpKTtcbiIgKyAKIAkJCSIJXl5eXl5eXl5eXl5eXl5e
Xl5eXl5eXG4iICsgCi0JCQkiVGhlIGNvbnN0cnVjdG9yIFgoKCkgLT4gdGhpcy5nKCkpIGlzIHVu
ZGVmaW5lZFxuIiArIAorCQkJIlRoZSBjb25zdHJ1Y3RvciBYKCgpIC0+IGludCkgaXMgdW5kZWZp
bmVkXG4iICsgCiAJCQkiLS0tLS0tLS0tLVxuIiArIAogCQkJIjQuIEVSUk9SIGluIFguamF2YSAo
YXQgbGluZSAxMilcbiIgKyAKIAkJCSIJdGhpcygoKSAtPiB0aGlzLmcoKSk7XG4iICsgCkBAIC02
NTE0LDcgKzY1MDMsNyBAQCBwdWJsaWMgdm9pZCB0ZXN0NDA2NjE0KCkgewogCQkJIjUuIEVSUk9S
IGluIFguamF2YSAoYXQgbGluZSAxNSlcbiIgKyAKIAkJCSIJdGhpcygoKSAtPiBmKTtcbiIgKyAK
IAkJCSIJXl5eXl5eXl5eXl5eXl5cbiIgKyAKLQkJCSJUaGUgY29uc3RydWN0b3IgWCgoKSAtPiBm
KSBpcyB1bmRlZmluZWRcbiIgKyAKKwkJCSJUaGUgY29uc3RydWN0b3IgWCgoKSAtPiBpbnQpIGlz
IHVuZGVmaW5lZFxuIiArIAogCQkJIi0tLS0tLS0tLS1cbiIgKyAKIAkJCSI2LiBFUlJPUiBpbiBY
LmphdmEgKGF0IGxpbmUgMTUpXG4iICsgCiAJCQkiCXRoaXMoKCkgLT4gZik7XG4iICsgCkBAIC03
MDE2LDcgKzcwMDUsNyBAQCBwdWJsaWMgdm9pZCB0ZXN0NDEyNjUwKCkgewogCQkiMS4gRVJST1Ig
aW4gWC5qYXZhIChhdCBsaW5lIDcpXG4iICsgCiAJCSIJZm9vKCgpIC0+IGZvbyhYOjpnZXRJbnQp
KTtcbiIgKyAKIAkJIgleXl5cbiIgKyAKLQkJIlRoZSBtZXRob2QgZm9vKEkpIGluIHRoZSB0eXBl
IFggaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKCgpIC0+IGZvbyhYOjpnZXRJ
bnQpKVxuIiArIAorCQkiVGhlIG1ldGhvZCBmb28oSSkgaW4gdGhlIHR5cGUgWCBpcyBub3QgYXBw
bGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoKCkgLT4gU3RyaW5nKVxuIiArIAogCQkiLS0tLS0t
LS0tLVxuIiArIAogCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDcpXG4iICsgCiAJCSIJ
Zm9vKCgpIC0+IGZvbyhYOjpnZXRJbnQpKTtcbiIgKyAKQEAgLTg5ODMsNiArODk3Miw3NSBAQCBw
dWJsaWMgdm9pZCB0ZXN0NDMwMzEwKCkgewogCQkJIkludmFsaWQgXCdARnVuY3Rpb25hbEludGVy
ZmFjZVwnIGFubm90YXRpb247IEYyPFQxLFI+IGlzIG5vdCBhIGZ1bmN0aW9uYWwgaW50ZXJmYWNl
XG4iICsgCiAJCQkiLS0tLS0tLS0tLVxuIik7CiB9CisvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5v
cmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDI0MTU0LCBbMS44XVtjb21waWxlcl0gUG9seVR5cGVC
aW5kaW5nIG11c3Qgbm90IHJlbmRlciB0aGUgZnVsbCBsYW1iZGEgYm9keSBpbiBlcnJvciBtZXNz
YWdlcworLy9FeGFtcGxlIGNvcGllZCBmcm9tIGJ1ZyByZXBvcnQuCitwdWJsaWMgdm9pZCB0ZXN0
NDI0MTU0YSgpIHRocm93cyBFeGNlcHRpb24geworCXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQlu
ZXcgU3RyaW5nW10geworCQkJIlguamF2YSIsCisJCQkiaW1wb3J0IGphdmEudXRpbC5MaXN0OyIg
KworCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIgl2b2lkIGZvbyhMaXN0PFByb2Nlc3M+
IGxpc3QpIHtcbiIgKworCQkJIgkJbGlzdC5yZW1vdmVJZigoaW50IHgpIC0+IFwiXCIpO1xuIiAr
CisJCQkiCX1cbiIgKworCQkJIn1cbiIsCisJCX0sCisJCSItLS0tLS0tLS0tXG4iICsKKwkJIjEu
IEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAzKVxuIiArCisJCSIJbGlzdC5yZW1vdmVJZigoaW50
IHgpIC0+IFwiXCIpO1xuIiArCisJICAgICIJICAgICBeXl5eXl5eXlxuIiArCisJICAgICJUaGUg
bWV0aG9kIHJlbW92ZUlmKFByZWRpY2F0ZTw/IHN1cGVyIFByb2Nlc3M+KSBpbiB0aGUgdHlwZSBD
b2xsZWN0aW9uPFByb2Nlc3M+IGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgo
aW50IHgpIC0+IGJvb2xlYW4pXG4iICsKKwkgICAgIi0tLS0tLS0tLS1cbiIgKworCSAgICAiMi4g
RVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDMpXG4iICsKKwkgICAgIglsaXN0LnJlbW92ZUlmKChp
bnQgeCkgLT4gXCJcIik7XG4iICsKKwkgICAgIgkgICAgICAgICAgICAgIF5eXl5eXl5eXl5eXl5c
biIgKworCSAgICAiVGhlIHRhcmdldCB0eXBlIG9mIHRoaXMgZXhwcmVzc2lvbiBpcyBub3QgYSB3
ZWxsIGZvcm1lZCBwYXJhbWV0ZXJpemVkIHR5cGUgZHVlIHRvIGJvdW5kKHMpIG1pc21hdGNoXG4i
ICsKKwkgICAgIi0tLS0tLS0tLS1cbiIpOworfQorLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3Jn
L2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQyNDE1NCwgIFsxLjhdW2NvbXBpbGVyXSBQb2x5VHlwZUJp
bmRpbmcgbXVzdCBub3QgcmVuZGVyIHRoZSBmdWxsIGxhbWJkYSBib2R5IGluIGVycm9yIG1lc3Nh
Z2VzCisvL1ZhcmlhdGlvbnMgd2hlcmUgcmV0dXJuIHR5cGVzIG9yIGFyZ3VtZW50cyBtaXNtYXRj
aCBvciBib3RoLgorcHVibGljIHZvaWQgdGVzdDQyNDE1NGIoKSB0aHJvd3MgRXhjZXB0aW9uIHsK
Kwl0aGlzLnJ1bk5lZ2F0aXZlVGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAor
CQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKworCQkJIglpbnRlcmZhY2UgSSB7aW50IGZvbyhpbnQg
eCk7fVxuIiArCisJCQkiCXZvaWQgZm9vMihJIGkpIHt9XG4iICsKKwkJCSIJdm9pZCBmb28oKSB7
fVxuIiArCisJCQkiCXZvaWQgYmFyKCkge1xuIiArCisJCQkiCQlmb28oMCwgKGludCB4LCBpbnQg
eSkgLT4ge3JldHVybiAyO30sIDApO1xuIiArCisJCQkiCQlmb28yKChpbnQgeCkgLT4gXCJcIik7
XG4iKworCQkJIgkJZm9vMigoZmxvYXQgeCkgLT4gMCk7XG4iICsKKwkJCSIgICB9XG4iICsKKwkJ
CSJ9XG4iCisJCX0sCisJCSItLS0tLS0tLS0tXG4iICsKKwkJIjEuIEVSUk9SIGluIFguamF2YSAo
YXQgbGluZSA2KVxuIiArCisJCSIJZm9vKDAsIChpbnQgeCwgaW50IHkpIC0+IHtyZXR1cm4gMjt9
LCAwKTtcbiIgKworCQkiCV5eXlxuIiArCisJCSJUaGUgbWV0aG9kIGZvbygpIGluIHRoZSB0eXBl
IFggaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKGludCwgKGludCB4LCBpbnQg
eSkgLT4gPG5vIHR5cGU+ICwgaW50KVxuIiArCisJCSItLS0tLS0tLS0tXG4iICsKKwkJIjIuIEVS
Uk9SIGluIFguamF2YSAoYXQgbGluZSA3KVxuIiArCisJCSIJZm9vMigoaW50IHgpIC0+IFwiXCIp
O1xuIiArCisJCSIJXl5eXlxuIiArCisJCSJUaGUgbWV0aG9kIGZvbzIoWC5JKSBpbiB0aGUgdHlw
ZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoaW50IHgpIC0+IGludClc
biIgKworCQkiLS0tLS0tLS0tLVxuIiArCisJCSIzLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUg
NylcbiIgKworCQkiCWZvbzIoKGludCB4KSAtPiBcIlwiKTtcbiIgKworCQkiCSAgICAgICAgICAg
ICAgICBeXlxuIiArCisJCSJUeXBlIG1pc21hdGNoOiBjYW5ub3QgY29udmVydCBmcm9tIFN0cmlu
ZyB0byBpbnRcbiIgKworCQkiLS0tLS0tLS0tLVxuIiArCisJCSI0LiBFUlJPUiBpbiBYLmphdmEg
KGF0IGxpbmUgOClcbiIgKworCQkiCWZvbzIoKGZsb2F0IHgpIC0+IDApO1xuIiArCisJCSIJXl5e
XlxuIiArCisJCSJUaGUgbWV0aG9kIGZvbzIoWC5JKSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBs
aWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoZmxvYXQgeCkgLT4gaW50KVxuIiArCisJCSItLS0t
LS0tLS0tXG4iICsKKwkJIjUuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA4KVxuIiArCisJCSIJ
Zm9vMigoZmxvYXQgeCkgLT4gMCk7XG4iICsKKwkJIgkgICAgICBeXl5eXlxuIiArCisJCSJMYW1i
ZGEgZXhwcmVzc2lvbidzIHBhcmFtZXRlciB4IGlzIGV4cGVjdGVkIHRvIGJlIG9mIHR5cGUgaW50
XG4iICsKKwkJIi0tLS0tLS0tLS1cbiIpOworfQogcHVibGljIHN0YXRpYyBDbGFzcyB0ZXN0Q2xh
c3MoKSB7CiAJcmV0dXJuIE5lZ2F0aXZlTGFtYmRhRXhwcmVzc2lvbnNUZXN0LmNsYXNzOwogfQpk
aWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vT3ZlcmxvYWRSZXNvbHV0
aW9uVGVzdDguamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL092ZXJsb2FkUmVz
b2x1dGlvblRlc3Q4LmphdmEKaW5kZXggZGIxMTgzMS4uYWQ3ZjgwZSAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vT3ZlcmxvYWRSZXNvbHV0aW9uVGVzdDguamF2YQor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9PdmVybG9hZFJlc29sdXRpb25UZXN0
OC5qYXZhCkBAIC0xNTQsMjMgKzE1NCwxNiBAQCBwdWJsaWMgdm9pZCB0ZXN0MDA0KCkgewogCQkJ
IjEuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAxMSlcbiIgKyAKIAkJCSIJZ29vKCgpLT4geyBc
biIgKyAKIAkJCSIJXl5eXG4iICsgCi0JCQkiVGhlIG1ldGhvZCBnb28oSikgaW4gdGhlIHR5cGUg
WCBpcyBub3QgYXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoKCkgLT4ge1xuIiArIAotCQkJ
IiAgYm9vbGVhbiB5ID0gdHJ1ZTtcbiIgKyAKLQkJCSIgIHdoaWxlICh5KSAgICA7XG4iICsgCi0J
CQkifSlcbiIgKyAKKwkJCSJUaGUgbWV0aG9kIGdvbyhKKSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBh
cHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoKSAtPiBpbnQpXG4iICsgCiAJCQkiLS0tLS0t
LS0tLVxuMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDE1KVxuIiArIAogCQkJIglnb28oKCkt
PiB7IFxuIiArIAogCQkJIgleXl5cbiIgKyAKLQkJCSJUaGUgbWV0aG9kIGdvbyhKKSBpbiB0aGUg
dHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoKSAtPiB7XG4iICsg
Ci0JCQkiICB3aGlsZSAoeCkgICAgO1xuIiArIAotCQkJIn0pXG4iICsgCisJCQkiVGhlIG1ldGhv
ZCBnb28oSikgaW4gdGhlIHR5cGUgWCBpcyBub3QgYXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50
cyAoKCkgLT4gaW50KVxuIiArIAogCQkJIi0tLS0tLS0tLS1cbiIgKyAKIAkJCSIzLiBFUlJPUiBp
biBYLmphdmEgKGF0IGxpbmUgMTgpXG4iICsgCiAJCQkiCWdvbygoKS0+IHsgXG4iICsgCiAJCQki
CV5eXlxuIiArIAotCQkJIlRoZSBtZXRob2QgZ29vKEopIGluIHRoZSB0eXBlIFggaXMgbm90IGFw
cGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKCgpIC0+IHtcbiIgKyAKLQkJCSIgIHdoaWxlIChm
KSAgICA7XG4iICsgCi0JCQkifSlcbiIgKyAKKwkJCSJUaGUgbWV0aG9kIGdvbyhKKSBpbiB0aGUg
dHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoKSAtPiBpbnQpXG4i
ICsgCiAJCQkiLS0tLS0tLS0tLVxuIik7CiB9CiBwdWJsaWMgdm9pZCB0ZXN0MDA1KCkgewpAQCAt
MjA0LDkgKzE5Nyw3IEBAIHB1YmxpYyB2b2lkIHRlc3QwMDUoKSB7CiAJCQkiMS4gRVJST1IgaW4g
WC5qYXZhIChhdCBsaW5lIDE4KVxuIiArIAogCQkJIglnb28oKCktPiB7IFxuIiArIAogCQkJIgle
Xl5cbiIgKyAKLQkJCSJUaGUgbWV0aG9kIGdvbyhKKSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBs
aWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoKSAtPiB7XG4iICsgLy8gYmVjYXVzZSBsYW1iZGEg
aGFzIGVycm9ycyAtPiBub3QgdmFsdWVDb21wYXRpYmxlIAotCQkJIiAgd2hpbGUgKGYpICAgIDtc
biIgKyAKLQkJCSJ9KVxuIiArIAorCQkJIlRoZSBtZXRob2QgZ29vKEopIGluIHRoZSB0eXBlIFgg
aXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKCgpIC0+IGludClcbiIgKyAvLyBi
ZWNhdXNlIGxhbWJkYSBoYXMgZXJyb3JzIC0+IG5vdCB2YWx1ZUNvbXBhdGlibGUgCiAJCQkiLS0t
LS0tLS0tLVxuIiArCiAJCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDE5KVxuIiArIAog
CQkJIgl3aGlsZSAoZik7IFxuIiArIApAQCAtMjU4LDcgKzI0OSw3IEBAIHB1YmxpYyB2b2lkIHRl
c3QwMDcoKSB7CiAJCQkiMS4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDkpXG4iICsgCiAJCQki
CWdvbygoKS0+IDEwKTsgXG4iICsgCiAJCQkiCV5eXlxuIiArIAotCQkJIlRoZSBtZXRob2QgZ29v
KEopIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKCgp
IC0+IDEwKVxuIiArIAorCQkJIlRoZSBtZXRob2QgZ29vKEopIGluIHRoZSB0eXBlIFggaXMgbm90
IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKCgpIC0+IHZvaWQpXG4iICsgCiAJCQkiLS0t
LS0tLS0tLVxuIiArIAogCQkJIjIuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA5KVxuIiArIAog
CQkJIglnb28oKCktPiAxMCk7IFxuIiArIApkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252
ZXJ0ZXIxN1Rlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMTdUZXN0LmphdmEKaW5k
ZXggZjNiOTdlNi4uNGJmZjI5ZCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIx
N1Rlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlcjE3VGVzdC5qYXZhCkBAIC0x
LDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAw
MCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAw
MCwgMjAxNCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2
ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBt
YWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vu
c2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBh
dmFpbGFibGUgYXQKQEAgLTg5NCwxMCArODk0LDEwIEBAIHB1YmxpYyBjbGFzcyBBU1RDb252ZXJ0
ZXIxN1Rlc3QgZXh0ZW5kcyBDb252ZXJ0ZXJUZXN0U2V0dXAgewogCQkKIAkJU3RyaW5nIGVycm9y
ID0gIkxhbWJkYSBleHByZXNzaW9ucyBhcmUgYWxsb3dlZCBvbmx5IGF0IHNvdXJjZSBsZXZlbCAx
Ljggb3IgYWJvdmVcbiIgKyAKIAkJCQkiTGFtYmRhIGV4cHJlc3Npb25zIGFyZSBhbGxvd2VkIG9u
bHkgYXQgc291cmNlIGxldmVsIDEuOCBvciBhYm92ZVxuIiArIAotCQkJCSJUaGUgbWV0aG9kIGZv
byhYLlN0cmluZ1RvSW50KSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUg
YXJndW1lbnRzICgoU3RyaW5nIHMpIC0+IHMubGVuZ3RoKCkpXG4iICsgCisJCQkJIlRoZSBtZXRo
b2QgZm9vKFguU3RyaW5nVG9JbnQpIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9y
IHRoZSBhcmd1bWVudHMgKChTdHJpbmcgcykgLT4gPG5vIHR5cGU+IClcbiIgKyAKIAkJCQkiTGFt
YmRhIGV4cHJlc3Npb25zIGFyZSBhbGxvd2VkIG9ubHkgYXQgc291cmNlIGxldmVsIDEuOCBvciBh
Ym92ZVxuIiArIAogCQkJCSJMYW1iZGEgZXhwcmVzc2lvbnMgYXJlIGFsbG93ZWQgb25seSBhdCBz
b3VyY2UgbGV2ZWwgMS44IG9yIGFib3ZlXG4iICsgCi0JCQkJIlRoZSBtZXRob2QgYmFyKFguUmVk
dWNlSW50KSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRz
ICgoaW50IHgsIGludCB5KSAtPiAoeCArIHkpKVxuIiArIAorCQkJCSJUaGUgbWV0aG9kIGJhcihY
LlJlZHVjZUludCkgaW4gdGhlIHR5cGUgWCBpcyBub3QgYXBwbGljYWJsZSBmb3IgdGhlIGFyZ3Vt
ZW50cyAoKGludCB4LCBpbnQgeSkgLT4gPG5vIHR5cGU+IClcbiIgKyAKIAkJCQkiTGFtYmRhIGV4
cHJlc3Npb25zIGFyZSBhbGxvd2VkIG9ubHkgYXQgc291cmNlIGxldmVsIDEuOCBvciBhYm92ZSI7
CiAJCWFzc2VydFByb2JsZW1zU2l6ZSh1bml0LCA3LCBlcnJvcik7CiAKZGlmZiAtLWdpdCBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90
ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRl
cjE4VGVzdC5qYXZhCmluZGV4IGQxODI2OTUuLmQ1YTQwZTAgMTAwNjQ0Ci0tLSBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9k
b20vQVNUQ29udmVydGVyMThUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIx
OFRlc3QuamF2YQpAQCAtMzY2Nyw3ICszNjY3LDcgQEAgcHVibGljIGNsYXNzIEFTVENvbnZlcnRl
cjE4VGVzdCBleHRlbmRzIENvbnZlcnRlclRlc3RTZXR1cCB7CiAJCUFTVE5vZGUgbm9kZSA9IGJ1
aWxkQVNUKGNvbnRlbnRzLCB0aGlzLndvcmtpbmdDb3B5LCBmYWxzZSk7CiAJCWFzc2VydEVxdWFs
cygiTm90IGEgY29tcGlsYXRpb24gdW5pdCIsIEFTVE5vZGUuQ09NUElMQVRJT05fVU5JVCwgbm9k
ZS5nZXROb2RlVHlwZSgpKTsKIAkJQ29tcGlsYXRpb25Vbml0IGNvbXBpbGF0aW9uVW5pdCA9IChD
b21waWxhdGlvblVuaXQpIG5vZGU7Ci0JCWFzc2VydFByb2JsZW1zU2l6ZShjb21waWxhdGlvblVu
aXQsIDIsICJUaGUgbWV0aG9kIGdvbyhJKSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxl
IGZvciB0aGUgYXJndW1lbnRzICgoPG5vIHR5cGU+IHMpIC0+IDApXG4iICsgCisJCWFzc2VydFBy
b2JsZW1zU2l6ZShjb21waWxhdGlvblVuaXQsIDIsICJUaGUgbWV0aG9kIGdvbyhJKSBpbiB0aGUg
dHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoPG5vIHR5cGU+IHMp
IC0+IDxubyB0eXBlPiApXG4iICsgCiAJCQkJCQkJCQkJCQkiVGhlIHRhcmdldCB0eXBlIG9mIHRo
aXMgZXhwcmVzc2lvbiBtdXN0IGJlIGEgZnVuY3Rpb25hbCBpbnRlcmZhY2UiKTsKIAkJbm9kZSA9
IGdldEFTVE5vZGUoY29tcGlsYXRpb25Vbml0LCAxKTsKIAkJYXNzZXJ0RXF1YWxzKCJOb3QgYSB0
eXBlIGRlY2xhcmF0aW9uIiwgQVNUTm9kZS5UWVBFX0RFQ0xBUkFUSU9OLCBub2RlLmdldE5vZGVU
eXBlKCkpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2FzdC9MYW1iZGFFeHByZXNzaW9uLmphdmEgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29t
cGlsZXIvYXN0L0xhbWJkYUV4cHJlc3Npb24uamF2YQppbmRleCBmNjY5MTExLi4zY2U0MDcxIDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29tcGlsZXIvYXN0L0xhbWJkYUV4cHJlc3Npb24uamF2YQorKysgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIv
YXN0L0xhbWJkYUV4cHJlc3Npb24uamF2YQpAQCAtNjAyLDYgKzYwMiwxMCBAQCBwdWJsaWMgY2xh
c3MgTGFtYmRhRXhwcmVzc2lvbiBleHRlbmRzIEZ1bmN0aW9uYWxFeHByZXNzaW9uIGltcGxlbWVu
dHMgUmVmZXJlbmNlQwogCX0KIAkKIAlwdWJsaWMgU3RyaW5nQnVmZmVyIHByaW50RXhwcmVzc2lv
bihpbnQgdGFiLCBTdHJpbmdCdWZmZXIgb3V0cHV0KSB7CisJCXJldHVybiBwcmludEV4cHJlc3Np
b24odGFiLCBvdXRwdXQsIGZhbHNlKTsKKwl9CisKKwlwdWJsaWMgU3RyaW5nQnVmZmVyIHByaW50
RXhwcmVzc2lvbihpbnQgdGFiLCBTdHJpbmdCdWZmZXIgb3V0cHV0LCBib29sZWFuIG1ha2VTaG9y
dCkgewogCQlpbnQgcGFyZW50aGVzZXNDb3VudCA9ICh0aGlzLmJpdHMgJiBBU1ROb2RlLlBhcmVu
dGhlc2l6ZWRNQVNLKSA+PiBBU1ROb2RlLlBhcmVudGhlc2l6ZWRTSElGVDsKIAkJU3RyaW5nIHN1
ZmZpeCA9ICIiOyAvLyROT04tTkxTLTEkCiAJCWZvcihpbnQgaSA9IDA7IGkgPCBwYXJlbnRoZXNl
c0NvdW50OyBpKyspIHsKQEAgLTYxNiwxMCArNjIwLDE1IEBAIHB1YmxpYyBjbGFzcyBMYW1iZGFF
eHByZXNzaW9uIGV4dGVuZHMgRnVuY3Rpb25hbEV4cHJlc3Npb24gaW1wbGVtZW50cyBSZWZlcmVu
Y2VDCiAJCQl9CiAJCX0KIAkJb3V0cHV0LmFwcGVuZCgiKSAtPiAiICk7IC8vJE5PTi1OTFMtMSQK
LQkJaWYgKHRoaXMuYm9keSAhPSBudWxsKQotCQkJdGhpcy5ib2R5LnByaW50KHRoaXMuYm9keSBp
bnN0YW5jZW9mIEJsb2NrID8gdGFiIDogMCwgb3V0cHV0KTsKLQkJZWxzZSAKLQkJCW91dHB1dC5h
cHBlbmQoIjxAaW5jdWJhdG9yPiIpOyAvLyROT04tTkxTLTEkCisJCWlmIChtYWtlU2hvcnQpIHsK
KwkJCW91dHB1dC5hcHBlbmQodGhpcy5iaW5kaW5nICE9IG51bGwgJiYgdGhpcy5iaW5kaW5nLnJl
dHVyblR5cGUgIT0gbnVsbCA/CisJCQkJCXRoaXMuYmluZGluZy5yZXR1cm5UeXBlLnNob3J0UmVh
ZGFibGVOYW1lKCkgOiAiPG5vIHR5cGU+ICIpOyAvLyROT04tTkxTLTEkCisJCX0gZWxzZSB7CisJ
CQlpZiAodGhpcy5ib2R5ICE9IG51bGwpCisJCQkJdGhpcy5ib2R5LnByaW50KHRoaXMuYm9keSBp
bnN0YW5jZW9mIEJsb2NrID8gdGFiIDogMCwgb3V0cHV0KTsKKwkJCWVsc2UKKwkJCQlvdXRwdXQu
YXBwZW5kKCI8QGluY3ViYXRvcj4iKTsgLy8kTk9OLU5MUy0xJAorCQl9CiAJCXJldHVybiBvdXRw
dXQuYXBwZW5kKHN1ZmZpeCk7CiAJfQogCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1BvbHlU
eXBlQmluZGluZy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Qb2x5VHlwZUJpbmRpbmcuamF2YQppbmRl
eCBlMjQ1ODVjLi44ZTM4ZTg4IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21w
aWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3VwL1BvbHlUeXBlQmlu
ZGluZy5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29rdXAvUG9seVR5cGVCaW5kaW5nLmphdmEKQEAgLTE0
LDYgKzE0LDcgQEAKIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmxv
b2t1cDsKIAogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuRXhw
cmVzc2lvbjsKK2ltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0Lkxh
bWJkYUV4cHJlc3Npb247CiAKIHB1YmxpYyBjbGFzcyBQb2x5VHlwZUJpbmRpbmcgZXh0ZW5kcyBU
eXBlQmluZGluZyB7CiAKQEAgLTY2LDQgKzY3LDkgQEAgcHVibGljIGNsYXNzIFBvbHlUeXBlQmlu
ZGluZyBleHRlbmRzIFR5cGVCaW5kaW5nIHsKIAkJdHlwZS52YW5pbGxhQ29tcGF0aWJpbHR5ID0g
IXRoaXMudmFuaWxsYUNvbXBhdGliaWx0eTsKIAkJcmV0dXJuIHR5cGU7CiAJfQorCisJcHVibGlj
IGNoYXJbXSBzaG9ydFJlYWRhYmxlTmFtZSgpIHsKKwkJcmV0dXJuIHRoaXMuZXhwcmVzc2lvbiBp
bnN0YW5jZW9mIExhbWJkYUV4cHJlc3Npb24gPworCQkJCSgoTGFtYmRhRXhwcmVzc2lvbikgdGhp
cy5leHByZXNzaW9uKS5wcmludEV4cHJlc3Npb24oMCwgIG5ldyBTdHJpbmdCdWZmZXIoKSwgdHJ1
ZSkudG9TdHJpbmcoKS50b0NoYXJBcnJheSgpIDogcmVhZGFibGVOYW1lKCk7CisJfQogfQpcIE5v
IG5ld2xpbmUgYXQgZW5kIG9mIGZpbGUK
</data>
<flag name="review"
          id="62033"
          type_id="6"
          status="?"
          setter="shankhba"
    />
          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>241793</attachid>
            <date>2014-04-09 10:55:00 -0400</date>
            <delta_ts>2014-04-09 10:55:00 -0400</delta_ts>
            <desc>Updated patch</desc>
            <filename>Bug-424154.patch</filename>
            <type>text/plain</type>
            <size>17346</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0dlbmVyaWNzUmVncmVz
c2lvblRlc3RfMV84LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9HZW5lcmlj
c1JlZ3Jlc3Npb25UZXN0XzFfOC5qYXZhCmluZGV4IDE0OTM1YjEuLjFhOWFlNGEgMTAwNjQ0Ci0t
LSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0dlbmVyaWNzUmVncmVzc2lvblRlc3Rf
MV84LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vR2VuZXJpY3NSZWdy
ZXNzaW9uVGVzdF8xXzguamF2YQpAQCAtMTc1Nyw1ICsxNzU3LDUgQEAKIAkJIglwZXJmb3JtKCgp
IC0+IDEzKTsgXG4iICsgCiAJCSIJXl5eXl5eXlxuIiArIAotCQkiVGhlIG1ldGhvZCBwZXJmb3Jt
KFByb2R1Y2VyPFQ+KSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJn
dW1lbnRzICgoKSAtPiAxMylcbiIgKyAKKwkJIlRoZSBtZXRob2QgcGVyZm9ybShQcm9kdWNlcjxU
PikgaW4gdGhlIHR5cGUgWCBpcyBub3QgYXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoKCkg
LT4ge30pXG4iICsgCiAJCSItLS0tLS0tLS0tXG4iICsgCiAJCSIyLiBFUlJPUiBpbiBYLmphdmEg
KGF0IGxpbmUgNylcbiIgKyAKQEAgLTI0NTIsNiArMjQ1Miw1IEBACiAJCSIJYWRkTGlzdGVuZXIo
bnVsbCwgKFNldENoYW5nZUxpc3RlbmVyLkNoYW5nZTw/PiBjKSAtPiB7fSk7XG4iICsgCiAJCSIJ
Xl5eXl5eXl5eXl5cbiIgKyAKLQkJIlRoZSBtZXRob2QgYWRkTGlzdGVuZXIoSnVuazEwLlNldExp
c3RlbmVySGVscGVyPEU+LCBKdW5rMTAuU2V0Q2hhbmdlTGlzdGVuZXI8PyBzdXBlciBFPikgaW4g
dGhlIHR5cGUgSnVuazEwIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzIChudWxs
LCAoU2V0Q2hhbmdlTGlzdGVuZXIuQ2hhbmdlPD8+IGMpIC0+IHtcbiIgKyAKLQkJIn0pXG4iICsg
CisJCSJUaGUgbWV0aG9kIGFkZExpc3RlbmVyKEp1bmsxMC5TZXRMaXN0ZW5lckhlbHBlcjxFPiwg
SnVuazEwLlNldENoYW5nZUxpc3RlbmVyPD8gc3VwZXIgRT4pIGluIHRoZSB0eXBlIEp1bmsxMCBp
cyBub3QgYXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAobnVsbCwgKFNldENoYW5nZUxpc3Rl
bmVyLkNoYW5nZTw/PiBjKSAtPiB7fSlcbiIgKyAKIAkJIi0tLS0tLS0tLS1cbiIgKyAKIAkJIjIu
IEVSUk9SIGluIEp1bmsxMC5qYXZhIChhdCBsaW5lIDE3KVxuIiArIApAQCAtMjU3NCw4ICsyNTcz
LDYgQEAKIAkJIglyZXR1cm4gQ29sbGVjdG9yLm9mKEFycmF5TGlzdDxUPjo6bmV3LFxuIiArIAog
CQkiCSAgICAgICAgICAgICAgICAgXl5cbiIgKyAKLQkJIlRoZSBtZXRob2Qgb2YoQXJyYXlMaXN0
PFQ+OjpuZXcsIExpc3Q8VD46OmFkZCwgKDxubyB0eXBlPiBsZWZ0LCA8bm8gdHlwZT4gcmlnaHQp
IC0+IHtcbiIgKyAKLQkJIiAgbGVmdC5hZGRBbGwocmlnaHQpO1xuIiArIAotCQkiICByZXR1cm4g
bGVmdDtcbiIgKyAKLQkJIn0sIEltbXV0YWJsZUxpc3Q6OmNvcHlPZikgaXMgdW5kZWZpbmVkIGZv
ciB0aGUgdHlwZSBDb2xsZWN0b3JcbiIgKyAKKwkJIlRoZSBtZXRob2Qgb2YoQXJyYXlMaXN0PFQ+
OjpuZXcsIExpc3Q8VD46OmFkZCwgKDxubyB0eXBlPiBsZWZ0LCA8bm8gdHlwZT4gcmlnaHQpIC0+
IHt9IiArIAorCQkiLCBJbW11dGFibGVMaXN0Ojpjb3B5T2YpIGlzIHVuZGVmaW5lZCBmb3IgdGhl
IHR5cGUgQ29sbGVjdG9yXG4iICsgCiAJCSItLS0tLS0tLS0tXG4iICsgCiAJCSIyLiBXQVJOSU5H
IGluIE1vcmVDb2xsZWN0b3JzLmphdmEgKGF0IGxpbmUgMjMpXG4iICsgCmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9MYW1iZGFFeHByZXNzaW9uc1Rlc3QuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0xhbWJkYUV4cHJlc3Npb25zVGVzdC5qYXZh
CmluZGV4IGQ4MzBkOWUuLjRiNDk4ZGYgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9y
ZWdyZXNzaW9uL0xhbWJkYUV4cHJlc3Npb25zVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21w
aWxlci9yZWdyZXNzaW9uL0xhbWJkYUV4cHJlc3Npb25zVGVzdC5qYXZhCkBAIC0yMTQ4LDUgKzIx
NDgsNSBAQAogCQkiCVRlc3RJbmxpbmVMYW1iZGFBcnJheSBoID0gbmV3IFRlc3RJbmxpbmVMYW1i
ZGFBcnJheSh4IC0+IHgrKyk7CS8vIFs5XVxuIiArIAogCQkiCSAgICAgICAgICAgICAgICAgICAg
ICAgICAgXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIgKyAKLQkJIlRoZSBj
b25zdHJ1Y3RvciBUZXN0SW5saW5lTGFtYmRhQXJyYXkoKDxubyB0eXBlPiB4KSAtPiB4ICsrKSBp
cyB1bmRlZmluZWRcbiIgKyAKKwkJIlRoZSBjb25zdHJ1Y3RvciBUZXN0SW5saW5lTGFtYmRhQXJy
YXkoKDxubyB0eXBlPiB4KSAtPiB7fSApIGlzIHVuZGVmaW5lZFxuIiArIAogCQkiLS0tLS0tLS0t
LVxuIiArIAogCQkiMi4gRVJST1IgaW4gVGVzdElubGluZUxhbWJkYUFycmF5LmphdmEgKGF0IGxp
bmUgNSlcbiIgKyAKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBp
bGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL05l
Z2F0aXZlTGFtYmRhRXhwcmVzc2lvbnNUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVn
cmVzc2lvbi9OZWdhdGl2ZUxhbWJkYUV4cHJlc3Npb25zVGVzdC5qYXZhCmluZGV4IDU0NTUzMjQu
LjhjYjZjYTQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVy
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL05lZ2F0
aXZlTGFtYmRhRXhwcmVzc2lvbnNUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUu
dGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3Jl
Z3Jlc3Npb24vTmVnYXRpdmVMYW1iZGFFeHByZXNzaW9uc1Rlc3QuamF2YQpAQCAtNTAzNCw2ICs1
MDM0LDUgQEAKIAkJCQkiCW5ldyBYKCkuZm9vKChzKS0+e30pO1xuIiArIAogCQkJCSIJICAgICAg
ICBeXl5cbiIgKyAKLQkJCQkiVGhlIG1ldGhvZCBmb28oSSkgaW4gdGhlIHR5cGUgWCBpcyBub3Qg
YXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoKDxubyB0eXBlPiBzKSAtPiB7XG4iICsgCi0J
CQkJIn0pXG4iICsgCisJCQkJIlRoZSBtZXRob2QgZm9vKEkpIGluIHRoZSB0eXBlIFggaXMgbm90
IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKCg8bm8gdHlwZT4gcykgLT4ge30pXG4iICsg
CiAJCQkJIi0tLS0tLS0tLS1cbiIgKyAKIAkJCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5l
IDIwKVxuIiArIApAQCAtNTA3Nyw3ICs1MDc2LDUgQEAKIAkJCQkiCW5ldyBYKCkuZm9vKCgpLT57
IHJldHVybiBcIlwiO30pO1xuIiArIAogCQkJCSIJICAgICAgICBeXl5cbiIgKyAKLQkJCQkiVGhl
IG1ldGhvZCBmb28oSSkgaW4gdGhlIHR5cGUgWCBpcyBub3QgYXBwbGljYWJsZSBmb3IgdGhlIGFy
Z3VtZW50cyAoKCkgLT4ge1xuIiArIAotCQkJCSIgIHJldHVybiBcIlwiO1xuIiArIAotCQkJCSJ9
KVxuIiArIAorCQkJCSJUaGUgbWV0aG9kIGZvbyhJKSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBs
aWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoKSAtPiB7fSlcbiIgKyAKIAkJCQkiLS0tLS0tLS0t
LVxuIiArIAogCQkJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMTUpXG4iICsgCkBAIC01
MDg5LDUgKzUwODYsNSBAQAogCQkJCSIJbmV3IFgoKS5mb28oKCktPiAxMCk7XG4iICsgCiAJCQkJ
IgkgICAgICAgIF5eXlxuIiArIAotCQkJCSJUaGUgbWV0aG9kIGZvbyhJKSBpbiB0aGUgdHlwZSBY
IGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoKSAtPiAxMClcbiIgKyAKKwkJ
CQkiVGhlIG1ldGhvZCBmb28oSSkgaW4gdGhlIHR5cGUgWCBpcyBub3QgYXBwbGljYWJsZSBmb3Ig
dGhlIGFyZ3VtZW50cyAoKCkgLT4ge30pXG4iICsgCiAJCQkJIi0tLS0tLS0tLS1cbiIgKyAKIAkJ
CQkiNC4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDE2KVxuIiArIApAQCAtNTIzNSw3ICs1MjMy
LDUgQEAKIAkJCQkiCW5ldyBYKCkuZm9vKCgpLT57IHJldHVybiAxMDsgfSk7XG4iICsgCiAJCQkJ
IgkgICAgICAgIF5eXlxuIiArIAotCQkJCSJUaGUgbWV0aG9kIGZvbyhJKSBpbiB0aGUgdHlwZSBY
IGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoKSAtPiB7XG4iICsgCi0JCQkJ
IiAgcmV0dXJuIDEwO1xuIiArIAotCQkJCSJ9KVxuIiArIAorCQkJCSJUaGUgbWV0aG9kIGZvbyhJ
KSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoKSAt
PiB7fSlcbiIgKyAKIAkJCQkiLS0tLS0tLS0tLVxuIiArIAogCQkJCSIyLiBFUlJPUiBpbiBYLmph
dmEgKGF0IGxpbmUgMTEpXG4iICsgCkBAIC01MjkxLDYgKzUyODYsNSBAQAogCQkJCSIJbmV3IFgo
KS5mb28oKE9iamVjdCBvKS0+e30pO1xuIiArIAogCQkJCSIJICAgICAgICBeXl5cbiIgKyAKLQkJ
CQkiVGhlIG1ldGhvZCBmb28oSSkgaW4gdGhlIHR5cGUgWCBpcyBub3QgYXBwbGljYWJsZSBmb3Ig
dGhlIGFyZ3VtZW50cyAoKE9iamVjdCBvKSAtPiB7XG4iICsgCi0JCQkJIn0pXG4iICsgCisJCQkJ
IlRoZSBtZXRob2QgZm9vKEkpIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9yIHRo
ZSBhcmd1bWVudHMgKChPYmplY3QgbykgLT4ge30pXG4iICsgCiAJCQkJIi0tLS0tLS0tLS1cbiIg
KyAKIAkJCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDExKVxuIiArIApAQCAtNTUwNyw3
ICs1NTAxLDUgQEAKIAkJCSIJZm9vKCh4KS0+IHtyZXR1cm4gMTA7fSk7XG4iICsgCiAJCQkiCV5e
XlxuIiArIAotCQkJIlRoZSBtZXRob2QgZm9vKElbXS4uLikgaW4gdGhlIHR5cGUgWCBpcyBub3Qg
YXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoKDxubyB0eXBlPiB4KSAtPiB7XG4iICsgCi0J
CQkiICByZXR1cm4gMTA7XG4iICsgCi0JCQkifSlcbiIgKyAKKwkJCSJUaGUgbWV0aG9kIGZvbyhJ
W10uLi4pIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMg
KCg8bm8gdHlwZT4geCkgLT4ge30pXG4iICsgCiAJCQkiLS0tLS0tLS0tLVxuIiArIAogCQkJIjQu
IEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA5KVxuIiArIApAQCAtNTc0MCw4ICs1NzMyLDUgQEAK
IAkJCQkiCWZvbygoKS0+eyBpZiAoMSA9PSAyKSB0aHJvdyBuZXcgUnVudGltZUV4Y2VwdGlvbigp
OyB9KTtcbiIgKyAKIAkJCQkiCV5eXlxuIiArIAotCQkJCSJUaGUgbWV0aG9kIGZvbyhJKSBpbiB0
aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoKSAtPiB7XG4i
ICsgCi0JCQkJIiAgaWYgKCgxID09IDIpKVxuIiArIAotCQkJCSIgICAgICB0aHJvdyBuZXcgUnVu
dGltZUV4Y2VwdGlvbigpO1xuIiArIAotCQkJCSJ9KVxuIiArIAorCQkJCSJUaGUgbWV0aG9kIGZv
byhJKSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgo
KSAtPiB7fSlcbiIgKyAKIAkJCQkiLS0tLS0tLS0tLVxuIik7CiB9CkBAIC02NDk1LDUgKzY0ODQs
NSBAQAogCQkJIgl0aGlzKCgpIC0+IHRoaXMuZik7XG4iICsgCiAJCQkiCV5eXl5eXl5eXl5eXl5e
Xl5eXl5cbiIgKyAKLQkJCSJUaGUgY29uc3RydWN0b3IgWCgoKSAtPiB0aGlzLmYpIGlzIHVuZGVm
aW5lZFxuIiArIAorCQkJIlRoZSBjb25zdHJ1Y3RvciBYKCgpIC0+IHt9KSBpcyB1bmRlZmluZWRc
biIgKyAKIAkJCSItLS0tLS0tLS0tXG4iICsgCiAJCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBs
aW5lIDkpXG4iICsgCkBAIC02NTA1LDUgKzY0OTQsNSBAQAogCQkJIgl0aGlzKCgpIC0+IHRoaXMu
ZygpKTtcbiIgKyAKIAkJCSIJXl5eXl5eXl5eXl5eXl5eXl5eXl5eXG4iICsgCi0JCQkiVGhlIGNv
bnN0cnVjdG9yIFgoKCkgLT4gdGhpcy5nKCkpIGlzIHVuZGVmaW5lZFxuIiArIAorCQkJIlRoZSBj
b25zdHJ1Y3RvciBYKCgpIC0+IHt9KSBpcyB1bmRlZmluZWRcbiIgKyAKIAkJCSItLS0tLS0tLS0t
XG4iICsgCiAJCQkiNC4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDEyKVxuIiArIApAQCAtNjUx
NSw1ICs2NTA0LDUgQEAKIAkJCSIJdGhpcygoKSAtPiBmKTtcbiIgKyAKIAkJCSIJXl5eXl5eXl5e
Xl5eXl5cbiIgKyAKLQkJCSJUaGUgY29uc3RydWN0b3IgWCgoKSAtPiBmKSBpcyB1bmRlZmluZWRc
biIgKyAKKwkJCSJUaGUgY29uc3RydWN0b3IgWCgoKSAtPiB7fSkgaXMgdW5kZWZpbmVkXG4iICsg
CiAJCQkiLS0tLS0tLS0tLVxuIiArIAogCQkJIjYuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSAx
NSlcbiIgKyAKQEAgLTcwMTcsNSArNzAwNiw1IEBACiAJCSIJZm9vKCgpIC0+IGZvbyhYOjpnZXRJ
bnQpKTtcbiIgKyAKIAkJIgleXl5cbiIgKyAKLQkJIlRoZSBtZXRob2QgZm9vKEkpIGluIHRoZSB0
eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKCgpIC0+IGZvbyhYOjpn
ZXRJbnQpKVxuIiArIAorCQkiVGhlIG1ldGhvZCBmb28oSSkgaW4gdGhlIHR5cGUgWCBpcyBub3Qg
YXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoKCkgLT4ge30pXG4iICsgCiAJCSItLS0tLS0t
LS0tXG4iICsgCiAJCSIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgNylcbiIgKyAKQEAgLTg5
ODQsNCArODk3Myw3MyBAQAogCQkJIi0tLS0tLS0tLS1cbiIpOwogfQorLy8gaHR0cHM6Ly9idWdz
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQyNDE1NCwgWzEuOF1bY29tcGlsZXJd
IFBvbHlUeXBlQmluZGluZyBtdXN0IG5vdCByZW5kZXIgdGhlIGZ1bGwgbGFtYmRhIGJvZHkgaW4g
ZXJyb3IgbWVzc2FnZXMKKy8vRXhhbXBsZSBjb3BpZWQgZnJvbSBidWcgcmVwb3J0LgorcHVibGlj
IHZvaWQgdGVzdDQyNDE1NGEoKSB0aHJvd3MgRXhjZXB0aW9uIHsKKwl0aGlzLnJ1bk5lZ2F0aXZl
VGVzdCgKKwkJbmV3IFN0cmluZ1tdIHsKKwkJCSJYLmphdmEiLAorCQkJImltcG9ydCBqYXZhLnV0
aWwuTGlzdDsiICsKKwkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKKwkJCSIJdm9pZCBmb28oTGlz
dDxQcm9jZXNzPiBsaXN0KSB7XG4iICsKKwkJCSIJCWxpc3QucmVtb3ZlSWYoKGludCB4KSAtPiBc
IlwiKTtcbiIgKworCQkJIgl9XG4iICsKKwkJCSJ9XG4iLAorCQl9LAorCQkiLS0tLS0tLS0tLVxu
IiArCisJCSIxLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMylcbiIgKworCQkiCWxpc3QucmVt
b3ZlSWYoKGludCB4KSAtPiBcIlwiKTtcbiIgKworCSAgICAiCSAgICAgXl5eXl5eXl5cbiIgKwor
CSAgICAiVGhlIG1ldGhvZCByZW1vdmVJZihQcmVkaWNhdGU8PyBzdXBlciBQcm9jZXNzPikgaW4g
dGhlIHR5cGUgQ29sbGVjdGlvbjxQcm9jZXNzPiBpcyBub3QgYXBwbGljYWJsZSBmb3IgdGhlIGFy
Z3VtZW50cyAoKGludCB4KSAtPiB7fSlcbiIgKworCSAgICAiLS0tLS0tLS0tLVxuIiArCisJICAg
ICIyLiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgMylcbiIgKworCSAgICAiCWxpc3QucmVtb3Zl
SWYoKGludCB4KSAtPiBcIlwiKTtcbiIgKworCSAgICAiCSAgICAgICAgICAgICAgXl5eXl5eXl5e
Xl5eXlxuIiArCisJICAgICJUaGUgdGFyZ2V0IHR5cGUgb2YgdGhpcyBleHByZXNzaW9uIGlzIG5v
dCBhIHdlbGwgZm9ybWVkIHBhcmFtZXRlcml6ZWQgdHlwZSBkdWUgdG8gYm91bmQocykgbWlzbWF0
Y2hcbiIgKworCSAgICAiLS0tLS0tLS0tLVxuIik7Cit9CisvLyBodHRwczovL2J1Z3MuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDI0MTU0LCAgWzEuOF1bY29tcGlsZXJdIFBvbHlU
eXBlQmluZGluZyBtdXN0IG5vdCByZW5kZXIgdGhlIGZ1bGwgbGFtYmRhIGJvZHkgaW4gZXJyb3Ig
bWVzc2FnZXMKKy8vVmFyaWF0aW9ucyB3aGVyZSByZXR1cm4gdHlwZXMgb3IgYXJndW1lbnRzIG1p
c21hdGNoIG9yIGJvdGguCitwdWJsaWMgdm9pZCB0ZXN0NDI0MTU0YigpIHRocm93cyBFeGNlcHRp
b24geworCXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJIlguamF2
YSIsCisJCQkicHVibGljIGNsYXNzIFgge1xuIiArCisJCQkiCWludGVyZmFjZSBJIHtpbnQgZm9v
KGludCB4KTt9XG4iICsKKwkJCSIJdm9pZCBmb28yKEkgaSkge31cbiIgKworCQkJIgl2b2lkIGZv
bygpIHt9XG4iICsKKwkJCSIJdm9pZCBiYXIoKSB7XG4iICsKKwkJCSIJCWZvbygwLCAoaW50IHgs
IGludCB5KSAtPiB7cmV0dXJuIDI7fSwgMCk7XG4iICsKKwkJCSIJCWZvbzIoKGludCB4KSAtPiBc
IlwiKTtcbiIrCisJCQkiCQlmb28yKChmbG9hdCB4KSAtPiAwKTtcbiIgKworCQkJIiAgIH1cbiIg
KworCQkJIn1cbiIKKwkJfSwKKwkJIi0tLS0tLS0tLS1cbiIgKworCQkiMS4gRVJST1IgaW4gWC5q
YXZhIChhdCBsaW5lIDYpXG4iICsKKwkJIglmb28oMCwgKGludCB4LCBpbnQgeSkgLT4ge3JldHVy
biAyO30sIDApO1xuIiArCisJCSIJXl5eXG4iICsKKwkJIlRoZSBtZXRob2QgZm9vKCkgaW4gdGhl
IHR5cGUgWCBpcyBub3QgYXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoaW50LCAoaW50IHgs
IGludCB5KSAtPiB7fSwgaW50KVxuIiArCisJCSItLS0tLS0tLS0tXG4iICsKKwkJIjIuIEVSUk9S
IGluIFguamF2YSAoYXQgbGluZSA3KVxuIiArCisJCSIJZm9vMigoaW50IHgpIC0+IFwiXCIpO1xu
IiArCisJCSIJXl5eXlxuIiArCisJCSJUaGUgbWV0aG9kIGZvbzIoWC5JKSBpbiB0aGUgdHlwZSBY
IGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoaW50IHgpIC0+IHt9KVxuIiAr
CisJCSItLS0tLS0tLS0tXG4iICsKKwkJIjMuIEVSUk9SIGluIFguamF2YSAoYXQgbGluZSA3KVxu
IiArCisJCSIJZm9vMigoaW50IHgpIC0+IFwiXCIpO1xuIiArCisJCSIJICAgICAgICAgICAgICAg
IF5eXG4iICsKKwkJIlR5cGUgbWlzbWF0Y2g6IGNhbm5vdCBjb252ZXJ0IGZyb20gU3RyaW5nIHRv
IGludFxuIiArCisJCSItLS0tLS0tLS0tXG4iICsKKwkJIjQuIEVSUk9SIGluIFguamF2YSAoYXQg
bGluZSA4KVxuIiArCisJCSIJZm9vMigoZmxvYXQgeCkgLT4gMCk7XG4iICsKKwkJIgleXl5eXG4i
ICsKKwkJIlRoZSBtZXRob2QgZm9vMihYLkkpIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2Fi
bGUgZm9yIHRoZSBhcmd1bWVudHMgKChmbG9hdCB4KSAtPiB7fSlcbiIgKworCQkiLS0tLS0tLS0t
LVxuIiArCisJCSI1LiBFUlJPUiBpbiBYLmphdmEgKGF0IGxpbmUgOClcbiIgKworCQkiCWZvbzIo
KGZsb2F0IHgpIC0+IDApO1xuIiArCisJCSIJICAgICAgXl5eXl5cbiIgKworCQkiTGFtYmRhIGV4
cHJlc3Npb24ncyBwYXJhbWV0ZXIgeCBpcyBleHBlY3RlZCB0byBiZSBvZiB0eXBlIGludFxuIiAr
CisJCSItLS0tLS0tLS0tXG4iKTsKK30KIHB1YmxpYyBzdGF0aWMgQ2xhc3MgdGVzdENsYXNzKCkg
ewogCXJldHVybiBOZWdhdGl2ZUxhbWJkYUV4cHJlc3Npb25zVGVzdC5jbGFzczsKZGlmZiAtLWdp
dCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL092ZXJsb2FkUmVzb2x1dGlvblRlc3Q4
LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9PdmVybG9hZFJlc29sdXRpb25U
ZXN0OC5qYXZhCmluZGV4IGRiMTE4MzEuLjViZjc1Y2UgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9j
b21waWxlci9yZWdyZXNzaW9uL092ZXJsb2FkUmVzb2x1dGlvblRlc3Q4LmphdmEKKysrIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vT3ZlcmxvYWRSZXNvbHV0aW9uVGVzdDguamF2YQpA
QCAtMTU1LDIxICsxNTUsMTQgQEAKIAkJCSIJZ29vKCgpLT4geyBcbiIgKyAKIAkJCSIJXl5eXG4i
ICsgCi0JCQkiVGhlIG1ldGhvZCBnb28oSikgaW4gdGhlIHR5cGUgWCBpcyBub3QgYXBwbGljYWJs
ZSBmb3IgdGhlIGFyZ3VtZW50cyAoKCkgLT4ge1xuIiArIAotCQkJIiAgYm9vbGVhbiB5ID0gdHJ1
ZTtcbiIgKyAKLQkJCSIgIHdoaWxlICh5KSAgICA7XG4iICsgCi0JCQkifSlcbiIgKyAKKwkJCSJU
aGUgbWV0aG9kIGdvbyhKKSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUg
YXJndW1lbnRzICgoKSAtPiB7fSlcbiIgKyAKIAkJCSItLS0tLS0tLS0tXG4yLiBFUlJPUiBpbiBY
LmphdmEgKGF0IGxpbmUgMTUpXG4iICsgCiAJCQkiCWdvbygoKS0+IHsgXG4iICsgCiAJCQkiCV5e
XlxuIiArIAotCQkJIlRoZSBtZXRob2QgZ29vKEopIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxp
Y2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKCgpIC0+IHtcbiIgKyAKLQkJCSIgIHdoaWxlICh4KSAg
ICA7XG4iICsgCi0JCQkifSlcbiIgKyAKKwkJCSJUaGUgbWV0aG9kIGdvbyhKKSBpbiB0aGUgdHlw
ZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoKSAtPiB7fSlcbiIgKyAK
IAkJCSItLS0tLS0tLS0tXG4iICsgCiAJCQkiMy4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDE4
KVxuIiArIAogCQkJIglnb28oKCktPiB7IFxuIiArIAogCQkJIgleXl5cbiIgKyAKLQkJCSJUaGUg
bWV0aG9kIGdvbyhKKSBpbiB0aGUgdHlwZSBYIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJn
dW1lbnRzICgoKSAtPiB7XG4iICsgCi0JCQkiICB3aGlsZSAoZikgICAgO1xuIiArIAotCQkJIn0p
XG4iICsgCisJCQkiVGhlIG1ldGhvZCBnb28oSikgaW4gdGhlIHR5cGUgWCBpcyBub3QgYXBwbGlj
YWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoKCkgLT4ge30pXG4iICsgCiAJCQkiLS0tLS0tLS0tLVxu
Iik7CiB9CkBAIC0yMDUsNyArMTk4LDUgQEAKIAkJCSIJZ29vKCgpLT4geyBcbiIgKyAKIAkJCSIJ
Xl5eXG4iICsgCi0JCQkiVGhlIG1ldGhvZCBnb28oSikgaW4gdGhlIHR5cGUgWCBpcyBub3QgYXBw
bGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoKCkgLT4ge1xuIiArIC8vIGJlY2F1c2UgbGFtYmRh
IGhhcyBlcnJvcnMgLT4gbm90IHZhbHVlQ29tcGF0aWJsZSAKLQkJCSIgIHdoaWxlIChmKSAgICA7
XG4iICsgCi0JCQkifSlcbiIgKyAKKwkJCSJUaGUgbWV0aG9kIGdvbyhKKSBpbiB0aGUgdHlwZSBY
IGlzIG5vdCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoKSAtPiB7fSlcbiIgKyAvLyBi
ZWNhdXNlIGxhbWJkYSBoYXMgZXJyb3JzIC0+IG5vdCB2YWx1ZUNvbXBhdGlibGUgCiAJCQkiLS0t
LS0tLS0tLVxuIiArCiAJCQkiMi4gRVJST1IgaW4gWC5qYXZhIChhdCBsaW5lIDE5KVxuIiArIApA
QCAtMjU5LDUgKzI1MCw1IEBACiAJCQkiCWdvbygoKS0+IDEwKTsgXG4iICsgCiAJCQkiCV5eXlxu
IiArIAotCQkJIlRoZSBtZXRob2QgZ29vKEopIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2Fi
bGUgZm9yIHRoZSBhcmd1bWVudHMgKCgpIC0+IDEwKVxuIiArIAorCQkJIlRoZSBtZXRob2QgZ29v
KEopIGluIHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKCgp
IC0+IHt9KVxuIiArIAogCQkJIi0tLS0tLS0tLS1cbiIgKyAKIAkJCSIyLiBFUlJPUiBpbiBYLmph
dmEgKGF0IGxpbmUgOSlcbiIgKyAKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVy
MTdUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlcjE3VGVzdC5qYXZhCmluZGV4IGYz
Yjk3ZTYuLjRhN2ZkNzkgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1v
ZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMTdUZXN0
LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxN1Rlc3QuamF2YQpAQCAtMSw0ICsx
LDQgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIw
MTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIw
MTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBU
aGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBh
dmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYx
LjAKQEAgLTg5NSw4ICs4OTUsOCBAQAogCQlTdHJpbmcgZXJyb3IgPSAiTGFtYmRhIGV4cHJlc3Np
b25zIGFyZSBhbGxvd2VkIG9ubHkgYXQgc291cmNlIGxldmVsIDEuOCBvciBhYm92ZVxuIiArIAog
CQkJCSJMYW1iZGEgZXhwcmVzc2lvbnMgYXJlIGFsbG93ZWQgb25seSBhdCBzb3VyY2UgbGV2ZWwg
MS44IG9yIGFib3ZlXG4iICsgCi0JCQkJIlRoZSBtZXRob2QgZm9vKFguU3RyaW5nVG9JbnQpIGlu
IHRoZSB0eXBlIFggaXMgbm90IGFwcGxpY2FibGUgZm9yIHRoZSBhcmd1bWVudHMgKChTdHJpbmcg
cykgLT4gcy5sZW5ndGgoKSlcbiIgKyAKKwkJCQkiVGhlIG1ldGhvZCBmb28oWC5TdHJpbmdUb0lu
dCkgaW4gdGhlIHR5cGUgWCBpcyBub3QgYXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoKFN0
cmluZyBzKSAtPiB7fSlcbiIgKyAKIAkJCQkiTGFtYmRhIGV4cHJlc3Npb25zIGFyZSBhbGxvd2Vk
IG9ubHkgYXQgc291cmNlIGxldmVsIDEuOCBvciBhYm92ZVxuIiArIAogCQkJCSJMYW1iZGEgZXhw
cmVzc2lvbnMgYXJlIGFsbG93ZWQgb25seSBhdCBzb3VyY2UgbGV2ZWwgMS44IG9yIGFib3ZlXG4i
ICsgCi0JCQkJIlRoZSBtZXRob2QgYmFyKFguUmVkdWNlSW50KSBpbiB0aGUgdHlwZSBYIGlzIG5v
dCBhcHBsaWNhYmxlIGZvciB0aGUgYXJndW1lbnRzICgoaW50IHgsIGludCB5KSAtPiAoeCArIHkp
KVxuIiArIAorCQkJCSJUaGUgbWV0aG9kIGJhcihYLlJlZHVjZUludCkgaW4gdGhlIHR5cGUgWCBp
cyBub3QgYXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoKGludCB4LCBpbnQgeSkgLT4ge30p
XG4iICsgCiAJCQkJIkxhbWJkYSBleHByZXNzaW9ucyBhcmUgYWxsb3dlZCBvbmx5IGF0IHNvdXJj
ZSBsZXZlbCAxLjggb3IgYWJvdmUiOwogCQlhc3NlcnRQcm9ibGVtc1NpemUodW5pdCwgNywgZXJy
b3IpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YSBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90
ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEKaW5kZXggZDE4MjY5NS4uZTJkNGYxMyAx
MDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YQorKysgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZhCkBAIC0zNjY4LDUgKzM2NjgsNSBAQAogCQlh
c3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9O
X1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CiAJCUNvbXBpbGF0aW9uVW5pdCBjb21waWxhdGlv
blVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSBub2RlOwotCQlhc3NlcnRQcm9ibGVtc1NpemUoY29t
cGlsYXRpb25Vbml0LCAyLCAiVGhlIG1ldGhvZCBnb28oSSkgaW4gdGhlIHR5cGUgWCBpcyBub3Qg
YXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoKDxubyB0eXBlPiBzKSAtPiAwKVxuIiArIAor
CQlhc3NlcnRQcm9ibGVtc1NpemUoY29tcGlsYXRpb25Vbml0LCAyLCAiVGhlIG1ldGhvZCBnb28o
SSkgaW4gdGhlIHR5cGUgWCBpcyBub3QgYXBwbGljYWJsZSBmb3IgdGhlIGFyZ3VtZW50cyAoKDxu
byB0eXBlPiBzKSAtPiB7fSlcbiIgKyAKIAkJCQkJCQkJCQkJCSJUaGUgdGFyZ2V0IHR5cGUgb2Yg
dGhpcyBleHByZXNzaW9uIG11c3QgYmUgYSBmdW5jdGlvbmFsIGludGVyZmFjZSIpOwogCQlub2Rl
ID0gZ2V0QVNUTm9kZShjb21waWxhdGlvblVuaXQsIDEpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2Fz
dC9MYW1iZGFFeHByZXNzaW9uLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0xhbWJkYUV4cHJlc3Npb24uamF2
YQppbmRleCBmNjY5MTExLi45MDYzMWJmIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0xhbWJkYUV4
cHJlc3Npb24uamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0xhbWJkYUV4cHJlc3Npb24uamF2YQpAQCAt
NjAzLDQgKzYwMyw4IEBACiAJCiAJcHVibGljIFN0cmluZ0J1ZmZlciBwcmludEV4cHJlc3Npb24o
aW50IHRhYiwgU3RyaW5nQnVmZmVyIG91dHB1dCkgeworCQlyZXR1cm4gcHJpbnRFeHByZXNzaW9u
KHRhYiwgb3V0cHV0LCBmYWxzZSk7CisJfQorCisJcHVibGljIFN0cmluZ0J1ZmZlciBwcmludEV4
cHJlc3Npb24oaW50IHRhYiwgU3RyaW5nQnVmZmVyIG91dHB1dCwgYm9vbGVhbiBtYWtlU2hvcnQp
IHsKIAkJaW50IHBhcmVudGhlc2VzQ291bnQgPSAodGhpcy5iaXRzICYgQVNUTm9kZS5QYXJlbnRo
ZXNpemVkTUFTSykgPj4gQVNUTm9kZS5QYXJlbnRoZXNpemVkU0hJRlQ7CiAJCVN0cmluZyBzdWZm
aXggPSAiIjsgLy8kTk9OLU5MUy0xJApAQCAtNjE3LDggKzYyMSwxMiBAQAogCQl9CiAJCW91dHB1
dC5hcHBlbmQoIikgLT4gIiApOyAvLyROT04tTkxTLTEkCi0JCWlmICh0aGlzLmJvZHkgIT0gbnVs
bCkKLQkJCXRoaXMuYm9keS5wcmludCh0aGlzLmJvZHkgaW5zdGFuY2VvZiBCbG9jayA/IHRhYiA6
IDAsIG91dHB1dCk7Ci0JCWVsc2UgCi0JCQlvdXRwdXQuYXBwZW5kKCI8QGluY3ViYXRvcj4iKTsg
Ly8kTk9OLU5MUy0xJAorCQlpZiAobWFrZVNob3J0KSB7CisJCQlvdXRwdXQuYXBwZW5kKCJ7fSIp
OyAvLyROT04tTkxTLTEkCisJCX0gZWxzZSB7CisJCQlpZiAodGhpcy5ib2R5ICE9IG51bGwpCisJ
CQkJdGhpcy5ib2R5LnByaW50KHRoaXMuYm9keSBpbnN0YW5jZW9mIEJsb2NrID8gdGFiIDogMCwg
b3V0cHV0KTsKKwkJCWVsc2UKKwkJCQlvdXRwdXQuYXBwZW5kKCI8QGluY3ViYXRvcj4iKTsgLy8k
Tk9OLU5MUy0xJAorCQl9CiAJCXJldHVybiBvdXRwdXQuYXBwZW5kKHN1ZmZpeCk7CiAJfQpkaWZm
IC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvbXBpbGVyL2xvb2t1cC9Qb2x5VHlwZUJpbmRpbmcuamF2YSBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb21waWxlci9sb29r
dXAvUG9seVR5cGVCaW5kaW5nLmphdmEKaW5kZXggZTI0NTg1Yy4uNjg4NDZmYyAxMDA2NDQKLS0t
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2xvb2t1cC9Qb2x5VHlwZUJpbmRpbmcuamF2YQorKysgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9jb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvbG9va3Vw
L1BvbHlUeXBlQmluZGluZy5qYXZhCkBAIC0xNSw0ICsxNSw1IEBACiAKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkV4cHJlc3Npb247CitpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5MYW1iZGFFeHByZXNzaW9uOwogCiBwdWJs
aWMgY2xhc3MgUG9seVR5cGVCaW5kaW5nIGV4dGVuZHMgVHlwZUJpbmRpbmcgewpAQCAtNDgsNSAr
NDksMTAgQEAKIAkJcmV0dXJuIHRoaXMuZXhwcmVzc2lvbi5wcmludEV4cHJlc3Npb24oMCwgIG5l
dyBTdHJpbmdCdWZmZXIoKSkudG9TdHJpbmcoKS50b0NoYXJBcnJheSgpOwogCX0KLQkKKworCXB1
YmxpYyBjaGFyW10gc2hvcnRSZWFkYWJsZU5hbWUoKSB7CisJCXJldHVybiB0aGlzLmV4cHJlc3Np
b24gaW5zdGFuY2VvZiBMYW1iZGFFeHByZXNzaW9uID8KKwkJCQkoKExhbWJkYUV4cHJlc3Npb24p
IHRoaXMuZXhwcmVzc2lvbikucHJpbnRFeHByZXNzaW9uKDAsICBuZXcgU3RyaW5nQnVmZmVyKCks
IHRydWUpLnRvU3RyaW5nKCkudG9DaGFyQXJyYXkoKSA6IHJlYWRhYmxlTmFtZSgpOworCX0KKwog
CXB1YmxpYyBib29sZWFuIHNJc01vcmVTcGVjaWZpYyhUeXBlQmluZGluZyBzLCBUeXBlQmluZGlu
ZyB0LCBTY29wZSBzY29wZSkgewogCQlyZXR1cm4gdGhpcy5leHByZXNzaW9uLnNJc01vcmVTcGVj
aWZpYyhzLCB0LCBzY29wZSk7
</data>

          </attachment>
      

    </bug>

</bugzilla>