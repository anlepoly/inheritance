<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>404451</bug_id>
          
          <creation_ts>2013-03-27 10:48:00 -0400</creation_ts>
          <short_desc>[dom ast] ASTRewrite should verify the type of ASTNodes based on the StructuralPropertyDescriptor</short_desc>
          <delta_ts>2013-05-02 05:47:27 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>trivial</bug_severity>
          <target_milestone>4.3 M7</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Markus Keller">markus_keller</reporter>
          <assigned_to name="Markus Keller">markus_keller</assigned_to>
          <cc>anchakrk</cc>
    
    <cc>daniel_megert</cc>
    
    <cc>deepakazad</cc>
    
    <cc>jarthana</cc>
    
    <cc>manju656</cc>
    
    <cc>markus_keller</cc>
    
    <cc>noopur_gupta</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2237205</commentid>
    <comment_count>0</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-03-27 10:48:03 -0400</bug_when>
    <thetext>The DOM AST APIs are pretty type safe. ASTNode#checkNewChild(..) is used everywhere to ensure that new nodes are of the right type.

ASTRewrite is currently unsafe, since it doesn&apos;t do the type tests in ASTRewrite#set(..) and in ListRewriteEvent#insert(..) etc.

These tests should be added, so that type errors can be detected early. The API Javadoc already tell that an IllegalArgumentException is thrown &quot;if the described modification is invalid&quot;.

However, before releasing the fix, we need to check fallout from bad client code that was accepted before. If it turns out this happens everywhere, then we maybe have to deprecate ASTRewrite.create(AST) and only ensure sanity in a new creation method.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2239341</commentid>
    <comment_count>1</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-04-03 15:13:36 -0400</bug_when>
    <thetext>Implemented in master with http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=f1f25c6cdf998a1ec590849c8e88206d0ec0f3ca

The verification currently only runs if this debug option is set to true (it&apos;s false by default):

org.eclipse.jdt.core/debug/dom/rewrite=true

I also fixed 3 test failures in ASTRewritingTypeDeclTest (bad test code). I didn&apos;t fix the 2 test failures in ASTRewritingMethodDeclTest, because these are already fixed in BETA_JAVA8, and I didn&apos;t want to cause merge conflicts.


Unfortunately, there were about 140 test failures in JDT UI&apos;s AllAllRefactoringTests.
Some of them are indeed bad client code, but others are just bending the rules where they are too restrictive. The basic problem is that the AST has too many constructs for the &quot;.&quot; operator: All of QualifiedName, QualifiedType, FieldAccess, SuperFieldAccess, ThisExpression, MethodInvocation, SuperMethodInvocation, SuperConstructorInvocation and ClassInstanceCreation can have a &quot;.&quot; operator. Some refactorings convert code that was originally parsed to one node type into another type. This is not an issue as long as the rewrite results in correct code.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2250932</commentid>
    <comment_count>2</comment_count>
    <who name="ANIRBAN CHAKRABORTY">anchakrk</who>
    <bug_when>2013-05-01 03:32:21 -0400</bug_when>
    <thetext>Verified for M7 build I20130428-2000</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>