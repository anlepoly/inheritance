<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>413913</bug_id>
          
          <creation_ts>2013-07-29 07:31:00 -0400</creation_ts>
          <short_desc>[1.8] Investigate failures against b100</short_desc>
          <delta_ts>2013-09-10 02:55:00 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>396139</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Manoj Palat Away Until May 11 2015">manpalat</reporter>
          <assigned_to name="Manoj Palat Away Until May 11 2015">manpalat</assigned_to>
          <cc>aclement</cc>
    
    <cc>daniel_megert</cc>
    
    <cc>jarthana</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="58932"
          type_id="1"
          status="+"
          setter="srikanth_sankaran"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2289122</commentid>
    <comment_count>0</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-07-29 07:31:22 -0400</bug_when>
    <thetext></thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2289488</commentid>
    <comment_count>1</comment_count>
      <attachid>233915</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-07-29 20:06:31 -0400</bug_when>
    <thetext>Created attachment 233915
Proposed Patch</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2290464</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-08-01 01:47:28 -0400</bug_when>
    <thetext>Patch looks good.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2290466</commentid>
    <comment_count>3</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-08-01 02:14:47 -0400</bug_when>
    <thetext>Committed via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=baa4a9e4edb300fb0af04795d1bd24822786128a</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2290802</commentid>
    <comment_count>4</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-08-01 16:58:05 -0400</bug_when>
    <thetext>Running org.eclipse.jdt.core.tests.compiler.regression.TestAll at compliance 1.8 with b100 on Linux I see 80 failures, all like this:

java.lang.IncompatibleClassChangeError
	at java.lang.invoke.MethodHandleNatives.linkMethodHandleConstant(MethodHandleNatives.java:383)
	at X.main(X.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:491)
	at 

The last line is indeed truncated.
Some failing tests in NegativeLambdaExpressionsTest are
 test401610f, test401610f, test049, test401610, etc.

Is anybody else seeing this?

Should I assume my jdk download is corrupt (I did check the md5 though).

Switching back to b92 makes the failures disappear.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2290808</commentid>
    <comment_count>5</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-08-01 17:11:49 -0400</bug_when>
    <thetext>Update:
I just downloaded b99, and it shows the same failures, so it seems to be s.t. real.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2293766</commentid>
    <comment_count>6</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-08-12 11:02:35 -0400</bug_when>
    <thetext>(In reply to comment #5)
&gt; Update:
&gt; I just downloaded b99, and it shows the same failures, so it seems to be
&gt; s.t. real.

I was able to reproduce the issue in linux although the same (all) tests pass in windows. On further investigation, it is found to be an issue with b100 JRE itself.

Taking a sample failing test case X.java:
$ cat X.java 
interface I {
	abstract void doit(); 
}
public class X { 
  public static void main(String[] args) { 
	int var = 2; 
	I x2 = () -&gt; { 
		  System.out.println(&quot;Hello World&quot;);
		};
		
	x2.doit();
	var=2; 
  } 
}

Decompiled class files&apos; relevant portions are shown below:

Eclipse JDT Core compiled:
  BootstrapMethods:
    0: #39 invokestatic java/lang/invoke/LambdaMetafactory.metaFactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
      Method arguments:
        #41 invokeinterface I.doit:()V
        #44 invokestatic X.lambda$0:()V
        #45 ()V

b100 command line compiled

  BootstrapMethods:
    0: #20 invokestatic java/lang/invoke/LambdaMetafactory.metaFactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
      Method arguments:
        #21 invokeinterface I.doit:()V
        #22 invokestatic X.lambda$0:()V
        #23 ()V

In addition, the class files compiled by both b100 as well Eclipse JDT from Windows, when ran on linux, gave the same error.

One immediate workaround for this issue is to disable these failing tests using os specific switch until this issue is addressed.

Stephan: I can provide a patch to this end if this workaround helps for the time being.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2293862</commentid>
    <comment_count>7</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-08-12 14:02:44 -0400</bug_when>
    <thetext>(In reply to comment #6)
&gt; Stephan: I can provide a patch to this end if this workaround helps for the
&gt; time being.

Thanks for the offer. I&apos;m still using b92 which works fine for my so far.

Has the JRE problem been reported to them?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2294065</commentid>
    <comment_count>8</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-08-13 04:14:32 -0400</bug_when>
    <thetext>(In reply to comment #7)

&gt; Has the JRE problem been reported to them?
No.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2298800</commentid>
    <comment_count>9</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-08-26 01:16:57 -0400</bug_when>
    <thetext>(In reply to comment #8)
&gt; (In reply to comment #7)
&gt; 
&gt; &gt; Has the JRE problem been reported to them?
&gt; No.

Yes, and so we are ready to close this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2303764</commentid>
    <comment_count>10</comment_count>
    <who name="Andrew Clement">aclement</who>
    <bug_when>2013-09-06 11:34:19 -0400</bug_when>
    <thetext>Is there some kind of bug reference we can track for when this is fixed? My users are getting really frustrated with this problem coming out.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2303770</commentid>
    <comment_count>11</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-09-06 11:41:12 -0400</bug_when>
    <thetext>Manoj, please provide any details you have on this. In the meantime, we
heard from Tom on jdt-core-dev about a possible meta factory method signature
change seen at 8b105.

http://dev.eclipse.org/mhonarc/lists/jdt-core-dev/msg02324.html

What Manoj observed was that 8b100 on windows would run a program successfully
while the same class files presented to 8b100 on Linux would fail.

I had not heard of any recent changes in meta factory API through the EG
forums.

We will test shortly on 8b105 and see what needs to be done - (we have a long
weekend in India, so it could be Tuesday next at the earliest.)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2304677</commentid>
    <comment_count>12</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-09-10 02:55:00 -0400</bug_when>
    <thetext>(In reply to Andrew Clement from comment #10)
&gt; Is there some kind of bug reference we can track for when this is fixed? My
&gt; users are getting really frustrated with this problem coming out.

Have not heard from them on this at all. Neither does the search provide any info. Anyway, with the latest we have access to, ie b104, we do get the same error with windows as well (Linux continues to fail on b104). Bug 416885 will track further updates.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>233915</attachid>
            <date>2013-07-29 20:06:00 -0400</date>
            <delta_ts>2013-07-29 20:06:31 -0400</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Fix-for-Bug-413913-18-Investigate-failures-against-b.patch</filename>
            <type>text/plain</type>
            <size>7464</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0Fic3RyYWN0UmVncmVz
c2lvblRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL0Fic3RyYWN0UmVn
cmVzc2lvblRlc3QuamF2YQppbmRleCBkZjBlZjdjLi5lYTNkMDE5IDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9BYnN0cmFjdFJlZ3Jlc3Npb25UZXN0LmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGlsZXIvc3JjL29yZy9lY2xpcHNlL2pk
dC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vQWJzdHJhY3RSZWdyZXNzaW9uVGVzdC5q
YXZhCkBAIC05NywxNCArOTcsMTggQEAKIAkJaWYgKElTX0pSRV84KSB7IC8vIFRPRE8oc3RlcGhh
bikgYWNjb21tb2RhdGUgZnV0dXJlIHZlcnNpb25zIC4uLgogCQkJQ09NUEFSQVRPUl9JTVBMX0pS
RTggPSAvLyByZXBsYWNlICcqJyB3aXRoIFQsICclJyB3aXRoIFUsICQgd2l0aCBTCiAJCQkJIglw
dWJsaWMgamF2YS51dGlsLkNvbXBhcmF0b3I8Kj4gcmV2ZXJzZU9yZGVyKCkgeyByZXR1cm4gbnVs
bDt9XG4iICsKKwkJCQkiCXB1YmxpYyBqYXZhLnV0aWwuQ29tcGFyYXRvcjwqPiByZXZlcnNlZCgp
IHsgcmV0dXJuIG51bGw7fVxuIiArCiAJCQkJIglwdWJsaWMgamF2YS51dGlsLkNvbXBhcmF0b3I8
Kj4gdGhlbkNvbXBhcmluZyhqYXZhLnV0aWwuQ29tcGFyYXRvcjw/IHN1cGVyICo+IG90aGVyKSB7
IHJldHVybiBudWxsO31cbiIgKworCQkJCSIJcHVibGljIDwlIGV4dGVuZHMgamF2YS5sYW5nLkNv
bXBhcmFibGU8PyBzdXBlciAlPj4gamF2YS51dGlsLkNvbXBhcmF0b3I8Kj4gdGhlbkNvbXBhcmlu
ZyhqYXZhLnV0aWwuZnVuY3Rpb24uRnVuY3Rpb248PyBzdXBlciAqLCA/IGV4dGVuZHMgJT4ga2V5
RXh0cmFjdG9yLCBqYXZhLnV0aWwuQ29tcGFyYXRvcjw/IHN1cGVyICU+IGtleUNvbXBhcmF0b3Ip
IHsgcmV0dXJuIG51bGw7fVxuIiArCiAJCQkJIglwdWJsaWMgPCUgZXh0ZW5kcyBqYXZhLmxhbmcu
Q29tcGFyYWJsZTw/IHN1cGVyICU+PiBqYXZhLnV0aWwuQ29tcGFyYXRvcjwqPiB0aGVuQ29tcGFy
aW5nKGphdmEudXRpbC5mdW5jdGlvbi5GdW5jdGlvbjw/IHN1cGVyICosID8gZXh0ZW5kcyAlPiBr
ZXlFeHRyYWN0b3IpIHsgcmV0dXJuIG51bGw7fVxuIiArCiAJCQkJIglwdWJsaWMgamF2YS51dGls
LkNvbXBhcmF0b3I8Kj4gdGhlbkNvbXBhcmluZyhqYXZhLnV0aWwuZnVuY3Rpb24uVG9JbnRGdW5j
dGlvbjw/IHN1cGVyICo+IGtleUV4dHJhY3RvcikgeyByZXR1cm4gbnVsbDt9XG4iICsKIAkJCQki
CXB1YmxpYyBqYXZhLnV0aWwuQ29tcGFyYXRvcjwqPiB0aGVuQ29tcGFyaW5nKGphdmEudXRpbC5m
dW5jdGlvbi5Ub0xvbmdGdW5jdGlvbjw/IHN1cGVyICo+IGtleUV4dHJhY3RvcikgeyByZXR1cm4g
bnVsbDt9XG4iICsKIAkJCQkiCXB1YmxpYyBqYXZhLnV0aWwuQ29tcGFyYXRvcjwqPiB0aGVuQ29t
cGFyaW5nKGphdmEudXRpbC5mdW5jdGlvbi5Ub0RvdWJsZUZ1bmN0aW9uPD8gc3VwZXIgKj4ga2V5
RXh0cmFjdG9yKSB7IHJldHVybiBudWxsO31cbiI7CiAJCQlDT01QQVJBVE9SX1JBV19JTVBMX0pS
RTggPQogCQkJCSIJcHVibGljIGphdmEudXRpbC5Db21wYXJhdG9yIHJldmVyc2VPcmRlcigpIHsg
cmV0dXJuIG51bGw7fVxuIiArCisJCQkJIglwdWJsaWMgamF2YS51dGlsLkNvbXBhcmF0b3IgcmV2
ZXJzZWQoKSB7IHJldHVybiBudWxsO31cbiIgKwogCQkJCSIJcHVibGljIGphdmEudXRpbC5Db21w
YXJhdG9yIHRoZW5Db21wYXJpbmcoamF2YS51dGlsLkNvbXBhcmF0b3Igb3RoZXIpIHsgcmV0dXJu
IG51bGw7fVxuIiArCisJCQkJIglwdWJsaWMgamF2YS51dGlsLkNvbXBhcmF0b3IgdGhlbkNvbXBh
cmluZyhqYXZhLnV0aWwuZnVuY3Rpb24uRnVuY3Rpb24ga2V5RXh0cmFjdG9yLCBqYXZhLnV0aWwu
Q29tcGFyYXRvciBrZXlDb21wYXJhdG9yKSB7IHJldHVybiBudWxsO31cbiIgKwogCQkJCSIJcHVi
bGljIGphdmEudXRpbC5Db21wYXJhdG9yIHRoZW5Db21wYXJpbmcoamF2YS51dGlsLmZ1bmN0aW9u
LkZ1bmN0aW9uIGtleUV4dHJhY3RvcikgeyByZXR1cm4gbnVsbDt9XG4iICsKIAkJCQkiCXB1Ymxp
YyBqYXZhLnV0aWwuQ29tcGFyYXRvciB0aGVuQ29tcGFyaW5nKGphdmEudXRpbC5mdW5jdGlvbi5U
b0ludEZ1bmN0aW9uIGtleUV4dHJhY3RvcikgeyByZXR1cm4gbnVsbDt9XG4iICsKIAkJCQkiCXB1
YmxpYyBqYXZhLnV0aWwuQ29tcGFyYXRvciB0aGVuQ29tcGFyaW5nKGphdmEudXRpbC5mdW5jdGlv
bi5Ub0xvbmdGdW5jdGlvbiBrZXlFeHRyYWN0b3IpIHsgcmV0dXJuIG51bGw7fVxuIiArCkBAIC0x
MTMsMTQgKzExNywxMiBAQAogCQkJCSIJcHVibGljIGJvb2xlYW4gcmVtb3ZlQWxsKGphdmEudXRp
bC5mdW5jdGlvbi5QcmVkaWNhdGU8PyBzdXBlciAqPiBmaWx0ZXIpIHsgcmV0dXJuIGZhbHNlO31c
biIgKwogCQkJCSIJcHVibGljIGJvb2xlYW4gcmVtb3ZlSWYoamF2YS51dGlsLmZ1bmN0aW9uLlBy
ZWRpY2F0ZTw/IHN1cGVyICo+IGZpbHRlcikgeyByZXR1cm4gZmFsc2U7fVxuIiArCiAJCQkJIglw
dWJsaWMgamF2YS51dGlsLnN0cmVhbS5TdHJlYW08Kj4gc3RyZWFtKCkgeyByZXR1cm4gbnVsbDt9
XG4iICsKLQkJCQkiCXB1YmxpYyBqYXZhLnV0aWwuc3RyZWFtLlN0cmVhbTwqPiBwYXJhbGxlbFN0
cmVhbSgpIHsgcmV0dXJuIG51bGw7fVxuIiArCi0JCQkJIglwdWJsaWMgamF2YS51dGlsLlNwbGl0
ZXJhdG9yPCo+IHNwbGl0ZXJhdG9yKCkgeyByZXR1cm4gbnVsbDsgfVxuIjsKKwkJCQkiCXB1Ymxp
YyBqYXZhLnV0aWwuc3RyZWFtLlN0cmVhbTwqPiBwYXJhbGxlbFN0cmVhbSgpIHsgcmV0dXJuIG51
bGw7fVxuIjsKIAkJCUNPTExFQ1RJT05fQU5EX0xJU1RfSU1QTF9KUkU4ID0KIAkJCQkiCXB1Ymxp
YyBib29sZWFuIHJlbW92ZUFsbChqYXZhLnV0aWwuZnVuY3Rpb24uUHJlZGljYXRlPD8gc3VwZXIg
Kj4gZmlsdGVyKSB7IHJldHVybiBmYWxzZTt9XG4iICsKIAkJCQkiCXB1YmxpYyBib29sZWFuIHJl
bW92ZUlmKGphdmEudXRpbC5mdW5jdGlvbi5QcmVkaWNhdGU8PyBzdXBlciAqPiBmaWx0ZXIpIHsg
cmV0dXJuIGZhbHNlO31cbiIgKwogCQkJCSIJcHVibGljIGphdmEudXRpbC5zdHJlYW0uU3RyZWFt
PCo+IHN0cmVhbSgpIHsgcmV0dXJuIG51bGw7fVxuIiArCiAJCQkJIglwdWJsaWMgamF2YS51dGls
LnN0cmVhbS5TdHJlYW08Kj4gcGFyYWxsZWxTdHJlYW0oKSB7IHJldHVybiBudWxsO31cbiIgKwot
CQkJCSIJcHVibGljIGphdmEudXRpbC5TcGxpdGVyYXRvcjwqPiBzcGxpdGVyYXRvcigpIHsgcmV0
dXJuIG51bGw7IH1cbiIgKwogCQkJCSIJcHVibGljIHZvaWQgc29ydChqYXZhLnV0aWwuQ29tcGFy
YXRvcjw/IHN1cGVyICo+IGNvbXBhcmF0b3IpIHt9XG4iICsKIAkJCQkiCXB1YmxpYyB2b2lkIHBh
cmFsbGVsU29ydChqYXZhLnV0aWwuQ29tcGFyYXRvcjw/IHN1cGVyICo+IGNvbXBhcmF0b3IpIHt9
XG4iICsKIAkJCQkiCXB1YmxpYyB2b2lkIHJlcGxhY2VBbGwoamF2YS51dGlsLmZ1bmN0aW9uLlVu
YXJ5T3BlcmF0b3I8Kj4gb3BlcmF0b3IpIHt9XG4iOwpAQCAtMTI4LDMzICsxMzAsMzEgQEAKIAkJ
CQkiCXB1YmxpYyBAU3VwcHJlc3NXYXJuaW5ncyhcInJhd3R5cGVzXCIpIGJvb2xlYW4gcmVtb3Zl
QWxsKGphdmEudXRpbC5mdW5jdGlvbi5QcmVkaWNhdGUgZmlsdGVyKSB7IHJldHVybiBmYWxzZTt9
XG4iICsKIAkJCQkiCXB1YmxpYyBAU3VwcHJlc3NXYXJuaW5ncyhcInJhd3R5cGVzXCIpIGJvb2xl
YW4gcmVtb3ZlSWYoamF2YS51dGlsLmZ1bmN0aW9uLlByZWRpY2F0ZSBmaWx0ZXIpIHsgcmV0dXJu
IGZhbHNlO31cbiIgKwogCQkJCSIJcHVibGljIEBTdXBwcmVzc1dhcm5pbmdzKFwicmF3dHlwZXNc
IikgamF2YS51dGlsLnN0cmVhbS5TdHJlYW0gc3RyZWFtKCkgeyByZXR1cm4gbnVsbDt9XG4iICsK
LQkJCQkiCXB1YmxpYyBAU3VwcHJlc3NXYXJuaW5ncyhcInJhd3R5cGVzXCIpIGphdmEudXRpbC5z
dHJlYW0uU3RyZWFtIHBhcmFsbGVsU3RyZWFtKCkgeyByZXR1cm4gbnVsbDt9XG4iICsKLQkJCQki
CXB1YmxpYyBAU3VwcHJlc3NXYXJuaW5ncyhcInJhd3R5cGVzXCIpIGphdmEudXRpbC5TcGxpdGVy
YXRvciBzcGxpdGVyYXRvcigpIHsgcmV0dXJuIG51bGw7IH1cbiI7CisJCQkJIglwdWJsaWMgQFN1
cHByZXNzV2FybmluZ3MoXCJyYXd0eXBlc1wiKSBqYXZhLnV0aWwuc3RyZWFtLlN0cmVhbSBwYXJh
bGxlbFN0cmVhbSgpIHsgcmV0dXJuIG51bGw7fVxuIjsKIAkJCUxJU1RfSU1QTF9KUkU4ID0gLy8g
cmVwbGFjZSAnKicgd2l0aCB5b3VyIGNvbmNyZXRlIHR5cGUgYXJndW1lbnQKIAkJCQkiCXB1Ymxp
YyB2b2lkIHNvcnQoamF2YS51dGlsLkNvbXBhcmF0b3I8PyBzdXBlciAqPiBjb21wYXJhdG9yKSB7
fVxuIiArCiAJCQkJIglwdWJsaWMgdm9pZCBwYXJhbGxlbFNvcnQoamF2YS51dGlsLkNvbXBhcmF0
b3I8PyBzdXBlciAqPiBjb21wYXJhdG9yKSB7fVxuIiArCi0JCQkJIglwdWJsaWMgdm9pZCByZXBs
YWNlQWxsKGphdmEudXRpbC5mdW5jdGlvbi5VbmFyeU9wZXJhdG9yPCo+IG9wZXJhdG9yKSB7fVxu
IiArCi0JCQkJIglwdWJsaWMgamF2YS51dGlsLlNwbGl0ZXJhdG9yPCo+IHNwbGl0ZXJhdG9yKCkg
eyByZXR1cm4gbnVsbDsgfVxuIjsKKwkJCQkiCXB1YmxpYyB2b2lkIHJlcGxhY2VBbGwoamF2YS51
dGlsLmZ1bmN0aW9uLlVuYXJ5T3BlcmF0b3I8Kj4gb3BlcmF0b3IpIHt9XG4iOwogCQkJTElTVF9S
QVdfSU1QTF9KUkU4ID0KIAkJCQkiCXB1YmxpYyBAU3VwcHJlc3NXYXJuaW5ncyhcInJhd3R5cGVz
XCIpIHZvaWQgc29ydChqYXZhLnV0aWwuQ29tcGFyYXRvciBjb21wYXJhdG9yKSB7fVxuIiArCiAJ
CQkJIglwdWJsaWMgQFN1cHByZXNzV2FybmluZ3MoXCJyYXd0eXBlc1wiKSB2b2lkIHBhcmFsbGVs
U29ydChqYXZhLnV0aWwuQ29tcGFyYXRvciBjb21wYXJhdG9yKSB7fVxuIiArCi0JCQkJIglwdWJs
aWMgQFN1cHByZXNzV2FybmluZ3MoXCJyYXd0eXBlc1wiKSB2b2lkIHJlcGxhY2VBbGwoamF2YS51
dGlsLmZ1bmN0aW9uLlVuYXJ5T3BlcmF0b3Igb3BlcmF0b3IpIHt9XG4iICsKLQkJCQkiCXB1Ymxp
YyBAU3VwcHJlc3NXYXJuaW5ncyhcInJhd3R5cGVzXCIpIGphdmEudXRpbC5TcGxpdGVyYXRvciBz
cGxpdGVyYXRvcigpIHsgcmV0dXJuIG51bGw7IH1cbiI7CisJCQkJIglwdWJsaWMgQFN1cHByZXNz
V2FybmluZ3MoXCJyYXd0eXBlc1wiKSB2b2lkIHJlcGxhY2VBbGwoamF2YS51dGlsLmZ1bmN0aW9u
LlVuYXJ5T3BlcmF0b3Igb3BlcmF0b3IpIHt9XG4iOwogCQkJQ09MTEVDVElPTl9BTkRfTElTVF9S
QVdfSU1QTF9KUkU4ID0KIAkJCQkiCXB1YmxpYyBAU3VwcHJlc3NXYXJuaW5ncyhcInJhd3R5cGVz
XCIpIGJvb2xlYW4gcmVtb3ZlQWxsKGphdmEudXRpbC5mdW5jdGlvbi5QcmVkaWNhdGUgZmlsdGVy
KSB7IHJldHVybiBmYWxzZTt9XG4iICsKIAkJCQkiCXB1YmxpYyBAU3VwcHJlc3NXYXJuaW5ncyhc
InJhd3R5cGVzXCIpIGJvb2xlYW4gcmVtb3ZlSWYoamF2YS51dGlsLmZ1bmN0aW9uLlByZWRpY2F0
ZSBmaWx0ZXIpIHsgcmV0dXJuIGZhbHNlO31cbiIgKwogCQkJCSIJcHVibGljIEBTdXBwcmVzc1dh
cm5pbmdzKFwicmF3dHlwZXNcIikgamF2YS51dGlsLnN0cmVhbS5TdHJlYW0gc3RyZWFtKCkgeyBy
ZXR1cm4gbnVsbDt9XG4iICsKIAkJCQkiCXB1YmxpYyBAU3VwcHJlc3NXYXJuaW5ncyhcInJhd3R5
cGVzXCIpIGphdmEudXRpbC5zdHJlYW0uU3RyZWFtIHBhcmFsbGVsU3RyZWFtKCkgeyByZXR1cm4g
bnVsbDt9XG4iICsKLQkJCQkiCXB1YmxpYyBAU3VwcHJlc3NXYXJuaW5ncyhcInJhd3R5cGVzXCIp
IGphdmEudXRpbC5TcGxpdGVyYXRvciBzcGxpdGVyYXRvcigpIHsgcmV0dXJuIG51bGw7IH1cbiIg
KwogCQkJCSIJcHVibGljIEBTdXBwcmVzc1dhcm5pbmdzKFwicmF3dHlwZXNcIikgdm9pZCBzb3J0
KGphdmEudXRpbC5Db21wYXJhdG9yIGNvbXBhcmF0b3IpIHt9XG4iICsKIAkJCQkiCXB1YmxpYyBA
U3VwcHJlc3NXYXJuaW5ncyhcInJhd3R5cGVzXCIpIHZvaWQgcGFyYWxsZWxTb3J0KGphdmEudXRp
bC5Db21wYXJhdG9yIGNvbXBhcmF0b3IpIHt9XG4iICsKIAkJCQkiCXB1YmxpYyBAU3VwcHJlc3NX
YXJuaW5ncyhcInJhd3R5cGVzXCIpIHZvaWQgcmVwbGFjZUFsbChqYXZhLnV0aWwuZnVuY3Rpb24u
VW5hcnlPcGVyYXRvciBvcGVyYXRvcikge31cbiI7CiAJCQlJVEVSQUJMRV9JTVBMX0pSRTggPSAv
LyByZXBsYWNlICcqJyB3aXRoIHlvdXIgY29uY3JldGUgdHlwZSBhcmd1bWVudAogCQkJCSIJcHVi
bGljIHZvaWQgZm9yRWFjaChqYXZhLnV0aWwuZnVuY3Rpb24uQ29uc3VtZXI8PyBzdXBlciAqPiBi
bG9jayl7fVxuIiArCi0JCQkJIglwdWJsaWMgdm9pZCBmb3JFYWNoUmVtYWluaW5nKGphdmEudXRp
bC5mdW5jdGlvbi5Db25zdW1lcjw/IHN1cGVyICo+IGFjdGlvbikge31cbiI7CisJCQkJIglwdWJs
aWMgdm9pZCBmb3JFYWNoUmVtYWluaW5nKGphdmEudXRpbC5mdW5jdGlvbi5Db25zdW1lcjw/IHN1
cGVyICo+IGFjdGlvbikge31cbiIgKworCQkJCSIJcHVibGljIGphdmEudXRpbC5TcGxpdGVyYXRv
cjwqPiBzcGxpdGVyYXRvcigpIHtyZXR1cm4gbnVsbDt9XG4iOwogCQkJSVRFUkFCTEVfUkFXX0lN
UExfSlJFOCA9CiAJCQkJIglwdWJsaWMgQFN1cHByZXNzV2FybmluZ3MoXCJyYXd0eXBlc1wiKSB2
b2lkIGZvckVhY2goamF2YS51dGlsLmZ1bmN0aW9uLkNvbnN1bWVyIGFjdGlvbikge31cbiIgKwot
CQkJCSIJcHVibGljIEBTdXBwcmVzc1dhcm5pbmdzKFwicmF3dHlwZXNcIikgdm9pZCBmb3JFYWNo
UmVtYWluaW5nKGphdmEudXRpbC5mdW5jdGlvbi5Db25zdW1lciBhY3Rpb24pIHt9XG4iOworCQkJ
CSIJcHVibGljIEBTdXBwcmVzc1dhcm5pbmdzKFwicmF3dHlwZXNcIikgdm9pZCBmb3JFYWNoUmVt
YWluaW5nKGphdmEudXRpbC5mdW5jdGlvbi5Db25zdW1lciBhY3Rpb24pIHt9XG4iICsKKwkJCQki
CXB1YmxpYyBAU3VwcHJlc3NXYXJuaW5ncyhcInJhd3R5cGVzXCIpIGphdmEudXRpbC5TcGxpdGVy
YXRvciBzcGxpdGVyYXRvcigpIHtyZXR1cm4gbnVsbDt9XG4iOwogCQkJSVRFUkFUT1JfSU1QTF9K
UkU4ID0gLy8gcmVwbGFjZSAnKicgd2l0aCB5b3VyIGNvbmNyZXRlIHR5cGUgYXJndW1lbnQKIAkJ
CQkJInB1YmxpYyB2b2lkIGZvckVhY2goamF2YS51dGlsLmZ1bmN0aW9uLkNvbnN1bWVyPD8gc3Vw
ZXIgKj4gYWN0aW9uKSB7fVxuIiArCiAJCQkJCSJwdWJsaWMgdm9pZCBmb3JFYWNoUmVtYWluaW5n
KGphdmEudXRpbC5mdW5jdGlvbi5Db25zdW1lcjw/IHN1cGVyICo+IGFjdGlvbikge31cbiI7
</data>

          </attachment>
      

    </bug>

</bugzilla>