<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>431963</bug_id>
          
          <creation_ts>2014-04-03 22:41:00 -0400</creation_ts>
          <short_desc>[1.8][DOM] Confusion about type annotations of varargs method parameter</short_desc>
          <delta_ts>2014-04-29 00:49:58 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.4 M7</target_milestone>
          
          <blocked>420116</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Manju Mathew">manju656</reporter>
          <assigned_to name="Markus Keller">markus_keller</assigned_to>
          <cc>jarthana</cc>
    
    <cc>manpalat</cc>
    
    <cc>markus_keller</cc>
    
    <cc>noopur_gupta</cc>
    
    <cc>shankhba</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2384485</commentid>
    <comment_count>0</comment_count>
    <who name="Manju Mathew">manju656</who>
    <bug_when>2014-04-03 22:41:53 -0400</bug_when>
    <thetext>From bug 420116 comment 9, consider the below code snippet:
interface A {
	int foo2C(Object @NonNull [] @Nullable... o2);
}


parameter#getTypeAnnotations() invoked on o2 returns only @NonNull annotation which results in:

class C implements A {

	@Override
	public int foo2C(Object[] @NonNull... o2) { // @Nullable is missing
		// TODO Auto-generated method stub
		return 0;
	}
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2384499</commentid>
    <comment_count>1</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-04-04 00:01:22 -0400</bug_when>
    <thetext>Shankha, please take a look.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2384524</commentid>
    <comment_count>2</comment_count>
    <who name="Noopur Gupta">noopur_gupta</who>
    <bug_when>2014-04-04 02:37:52 -0400</bug_when>
    <thetext>The current behavior of TypeBinding#getTypeAnnotations is as expected.
See JLS8 9.7.4 : type annotations on array type.

For an array type binding, the type annotations on dimensions can be obtained via #getTypeAnnotations on its #getComponentType.
See bug 417937 comment #35.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2384546</commentid>
    <comment_count>3</comment_count>
    <who name="Manju Mathew">manju656</who>
    <bug_when>2014-04-04 03:36:52 -0400</bug_when>
    <thetext>Bug 417937 comment #35 says that &quot;Type annotations on dimensions can be accessed via getComponentType().&quot; 
Consider the below code snippet:
package typeAnnotation;

import java.lang.annotation.ElementType;
import java.lang.annotation.Target;

@Target({ ElementType.TYPE_USE })
@interface OnDimension {
}

@Target({ ElementType.TYPE_USE })
@interface OnVarArg {
}

interface A {
	
	int foo2C(Object @OnDimension [] @OnVarArg... o1);
}

o1TypeBinding.getTypeAnnotation returns @OnDimension and o1TypeBinding.getComponentType().getTypeAnnotation returns @OnVarArg, which looks wrong after reading bug 417937 comment #35.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2384576</commentid>
    <comment_count>4</comment_count>
    <who name="Manju Mathew">manju656</who>
    <bug_when>2014-04-04 04:45:04 -0400</bug_when>
    <thetext>Consider:
int foo2C(Object @A [] @B [] @C... o1);

When we have multi-dimensional array, which is the right API that will return all the type annotations on the extra dimensions when using TypeBinding of the parameter?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2384694</commentid>
    <comment_count>5</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-04-04 07:42:23 -0400</bug_when>
    <thetext>(In reply to Manju Mathew from comment #3)
&gt; o1TypeBinding.getTypeAnnotation returns @OnDimension and
&gt; o1TypeBinding.getComponentType().getTypeAnnotation returns @OnVarArg, which
&gt; looks wrong after reading bug 417937 comment #35.

No, the results of getTypeAnnotation() are correct. The spec is incomplete, but JLS8 9.7.4 at least has this informal part:

&gt;    @C int @A [] @B [] f;
&gt;
&gt; @A applies to the array type int[][], @B applies to its component type int[],
&gt; and @C applies to the element type int.

The annotation on the outermost array type is written on the leftmost []. Its component type is @C int @B[] (not @C int @A[]!), and that type has type annotation @B.



(In reply to Manju Mathew from comment #4)
&gt; When we have multi-dimensional array, which is the right API that will
&gt; return all the type annotations on the extra dimensions when using
&gt; TypeBinding of the parameter?

There is no explicit API for that. The right way to retrieve annotations on dimensions is to iterate over the component types and use getTypeAnnotations() on each one. Usually, there&apos;s a fundamental problem in your code if you think you need a list of type annotations for all dimensions. I&apos;ll follow up in bug 420116.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2384712</commentid>
    <comment_count>6</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-04-04 08:16:37 -0400</bug_when>
    <thetext>There&apos;s a fundamental problem with the definition of the varargs syntax on array types. These methods should have the same argument type, but that clashes with the order of annotations on array dimensions:

	int var(Object @A [] @B ... v);
	int arr(Object @A [] @B [] v);

If @B in var applies to ..., then that means it applies to the outermost array type Object[][]. But in arr, @B applies to the component type Object[].

I&apos;ll write this down for the type-annotations-spec-comments list.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2384785</commentid>
    <comment_count>7</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-04-04 10:16:50 -0400</bug_when>
    <thetext>(In reply to Markus Keller from comment #6)
&gt; I&apos;ll write this down for the type-annotations-spec-comments list.

See http://mail.openjdk.java.net/pipermail/type-annotations-spec-comments/2014-April/000076.html</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2385181</commentid>
    <comment_count>8</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-04-06 16:26:19 -0400</bug_when>
    <thetext>I&apos;ve added some warnings to the Javadoc of SingleVariableDeclaration:
http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=c07d1de5d7d0cb27a2b8f130f50debdfad6b4fb4</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2385182</commentid>
    <comment_count>9</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-04-06 16:29:53 -0400</bug_when>
    <thetext>(In reply to Markus Keller from comment #6)
&gt; 
&gt; 	int var(Object @A [] @B ... v);
&gt; 	int arr(Object @A [] @B [] v);
&gt; 

The conclusion was that @B in method var() doesn&apos;t apply to the outermost array dimension that constitutes the vararg, but it applies to the innermost array dimension, like @B in method arr(). JLS8 will be fixed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2394385</commentid>
    <comment_count>10</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-04-29 00:49:58 -0400</bug_when>
    <thetext>Verified for Eclipse Luna 4.4 M7 Build id: I20140428-2000</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>