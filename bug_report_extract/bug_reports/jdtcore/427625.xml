<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>427625</bug_id>
          
          <creation_ts>2014-02-07 02:43:00 -0500</creation_ts>
          <short_desc>NPE at org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.generateCode(ConditionalExpression.java:283)</short_desc>
          <delta_ts>2014-02-21 07:00:35 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3.1</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Mathieu Croizard">mcr</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>sarika.sinha</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2359967</commentid>
    <comment_count>0</comment_count>
    <who name="Mathieu Croizard">mcr</who>
    <bug_when>2014-02-07 02:43:23 -0500</bug_when>
    <thetext>Hello,
I had a new compilation issue will compiling this piece of code :

import java.util.Collection;
import java.util.List;

public class G {

	public void error(Collection&lt;Object&gt; c)
	{
		boolean b  =true;
		
		c.add(b ? new Integer(1)
		        : c==null ? null 
				  : c instanceof List ? Integer.valueOf(1) 
				                      : o()); 
	}
	
	public Object o()
	{
		return null;
	}
}


the stack
Error in JDT Core during AST creation
java.lang.NullPointerException
	at org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.generateCode(ConditionalExpression.java:283)
	at org.eclipse.jdt.internal.compiler.ast.Statement.generateArguments(Statement.java:265)
	at org.eclipse.jdt.internal.compiler.ast.MessageSend.generateCode(MessageSend.java:426)
	at org.eclipse.jdt.internal.compiler.ast.Expression.generateCode(Expression.java:699)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:328)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:273)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:570)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:639)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:370)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1214)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:693)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1187)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:548)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:541)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:484)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:132)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)


Good luck!
Mathieu.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2359968</commentid>
    <comment_count>1</comment_count>
    <who name="Mathieu Croizard">mcr</who>
    <bug_when>2014-02-07 02:44:45 -0500</bug_when>
    <thetext>* Using : 1.0.0.v20140207-0104_BETA_JAVA8</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360068</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-07 06:11:32 -0500</bug_when>
    <thetext>Thanks for the test case, I know the problem, a fix is underway.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360140</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-07 08:29:04 -0500</bug_when>
    <thetext>ConditionalExpression.isPolyExpression was out of sync with the spec evolution.

I have gone over the relevant parts and reimplemented this method. In crucial
bug was that we were use either or logic when we should be using &apos;and/both&apos; logic.

With this fix in place, the problem is solved.

Good news: This fix completes the eliminates the need for https://bugs.eclipse.org/bugs/show_bug.cgi?id=418537

In fact I am able to enable the disabled test in NullTypeAnnotationTest and
have it pass as well as see improved messages for existing enabled tests.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360142</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-07 08:29:44 -0500</bug_when>
    <thetext>Stephan, See comment#3.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360333</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-07 12:11:59 -0500</bug_when>
    <thetext>There were several i&apos;s that needed dotting and several t&apos;s that needed
crossing when it came to poly reference conditionals treatment. The patch
here addresses most of them and passes the test in comment#0.

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=a6f21a01110fe95a43760ec08fc8cc1e27e1c4bc

I&apos;ll leave this open as I need to add more tests, fix some null annotation
related tests that actually see improved results with proper polyconditional
handling and a round of code review.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360372</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-07 13:43:33 -0500</bug_when>
    <thetext>Thanks Mathieu.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2366546</commentid>
    <comment_count>7</comment_count>
    <who name="Sarika Sinha">sarika.sinha</who>
    <bug_when>2014-02-21 04:03:00 -0500</bug_when>
    <thetext>Verified as working for Eclipse + Java 8 RC1 using Kepler SR2(RC4) +   
Eclipse Java Development Tools Patch for Java 8 Support (BETA)	
1.0.0.v20140220-2054</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>