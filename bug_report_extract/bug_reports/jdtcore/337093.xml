<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>337093</bug_id>
          
          <creation_ts>2011-02-14 04:16:00 -0500</creation_ts>
          <short_desc>[compiler][generics] Javac-warning on vararg missing in Eclipse</short_desc>
          <delta_ts>2011-03-07 06:32:29 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.7</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows XP</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.7 M6</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Holger Klene">h.klene</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>amj87.iitr</cc>
    
    <cc>jarthana</cc>
    
    <cc>Olivier_Thomann</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="39272"
          type_id="1"
          status="?"
          setter="srikanth_sankaran"
          requestee="amj87.iitr"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1882860</commentid>
    <comment_count>0</comment_count>
    <who name="Holger Klene">h.klene</who>
    <bug_when>2011-02-14 04:16:25 -0500</bug_when>
    <thetext>Build Identifier: 20100218-1602

Eclipse has only 1 Warning on the given Code, while javac results to 2 Warnings:

D:\holger\wba-Performance\JavaPlayGround\src&gt;\holger\jdk1.6.0_21\bin\javac Gener
icsWarning.java -Xlint:unchecked
GenericsWarning.java:42: warning: [unchecked] unchecked generic array creation o
f type java.util.Collection&lt;? extends java.lang.Number&gt;[] for varargs parameter
        for (Iterator&lt;Number&gt; iter = new IteratorChain&lt;Number&gt;(a, b, c); iter.ha
sNext(); ) {
                                     ^
GenericsWarning.java:48: warning: [unchecked] unchecked generic array creation o
f type java.util.Collection&lt;? extends java.lang.Number&gt;[] for varargs parameter
        new IteratorChain&lt;Number&gt;(a, b);
        ^
2 warnings

Reproducible: Always

Steps to Reproduce:
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;


public class GenericsWarning {

    public static class IteratorChain&lt;T&gt; implements Iterator&lt;T&gt; {

        /**
         * Minimum of two Collections, eventually more
         */
        public IteratorChain(Collection&lt;? extends T&gt; a, Collection&lt;? extends T&gt; b,
            Collection&lt;? extends T&gt; ... collections) {
            // implementation skipped for simplicity
        }

        @Override
        public boolean hasNext() {
            return false;
        }

        @Override
        public T next() {
            return null;
        }

        @Override
        public void remove() {
            throw new UnsupportedOperationException();
        }

    }

    public static void main(String[] args) {
        List&lt;Integer&gt; a = new ArrayList&lt;Integer&gt;();
        List&lt;Long&gt; b = new ArrayList&lt;Long&gt;();
        List&lt;Double&gt; c = new ArrayList&lt;Double&gt;();

        // Eclipse and javac both issue a warning for creating an Array of a generic type
        for (Iterator&lt;Number&gt; iter = new IteratorChain&lt;Number&gt;(a, b, c); iter.hasNext(); ) {
            Number n = iter.next();
            System.out.println(n.intValue());
        }

        // Eclipse does not complain about this, while javac does!
        new IteratorChain&lt;Number&gt;(a, b);
    }

}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1883086</commentid>
    <comment_count>1</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2011-02-14 10:29:24 -0500</bug_when>
    <thetext>We don&apos;t blame the second one, because this is not really using the varargs argument of the constructor.
This might be debatable.
Srikanth, your call. I don&apos;t think this is actually a problem.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1883105</commentid>
    <comment_count>2</comment_count>
    <who name="Holger Klene">h.klene</who>
    <bug_when>2011-02-14 11:07:17 -0500</bug_when>
    <thetext>Our problem was, that the automatic build (using javac) was set to fail, in case of any warnings. As Eclipse didn&apos;t show warnings, we were quite surprised to find the build failed next morning.

The first fix was to add a @SuppressWarnings(&quot;unchecked&quot;) ... but now Eclipse was complaining about the superfluous annotation :-(

Actually the varargs parameter won&apos;t be null ... therefore it really creates an array of length 0.

I&apos;ve posted this report, as I rate the compatibility with the javac compiler higher. But as you say: It can be seen differently.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1883457</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-02-15 03:43:31 -0500</bug_when>
    <thetext>(In reply to comment #2)

&gt; Actually the varargs parameter won&apos;t be null ... therefore it really creates an
&gt; array of length 0.

Yes, Also see that in the following program we do emit a warning - so to be
consistent I&apos;ll see what it would take to fix this.

import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;
public class GenericsWarning {
    public static class IteratorChain&lt;T&gt; implements Iterator&lt;T&gt; {
        public IteratorChain(Collection&lt;? extends T&gt; ... collections) {}

        public boolean hasNext() { return false; }

        public T next() { return null; }

        public void remove() { throw new UnsupportedOperationException(); }

        public static void main(String[] args) {
	        List&lt;Integer&gt; a = new ArrayList&lt;Integer&gt;();
	        List&lt;Long&gt; b = new ArrayList&lt;Long&gt;();
	        List&lt;Double&gt; c = new ArrayList&lt;Double&gt;();
	
	        for (Iterator&lt;Number&gt; iter = new IteratorChain&lt;Number&gt;(); iter.hasNext(); ) {
	            Number n = iter.next();
	            System.out.println(n.intValue());
	        }
        }
    }
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1883477</commentid>
    <comment_count>4</comment_count>
      <attachid>188982</attachid>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-02-15 04:41:32 -0500</bug_when>
    <thetext>Created attachment 188982
Patch under test

This patch makes eclipse behavior self consistent as well
as consistent with javac.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1883521</commentid>
    <comment_count>5</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-02-15 06:10:18 -0500</bug_when>
    <thetext>Passes all tests, Ayush, please review, TIA</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1884060</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2011-02-16 03:25:46 -0500</bug_when>
    <thetext>Released in HEAD for 3.7 M6</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1894104</commentid>
    <comment_count>7</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2011-03-07 06:32:29 -0500</bug_when>
    <thetext>Verified for 3.7M6 using build I20110301-1537.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>188982</attachid>
            <date>2011-02-15 04:41:00 -0500</date>
            <delta_ts>2011-02-15 04:41:32 -0500</delta_ts>
            <desc>Patch under test</desc>
            <filename>patch.txt</filename>
            <type>text/plain</type>
            <size>3833</size>
            <attacher name="Srikanth Sankaran">srikanth_sankaran</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUN
CkluZGV4OiBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0FT
VE5vZGUuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVj
bGlwc2UuamR0LmNvcmUvY29tcGlsZXIvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2FzdC9BU1ROb2RlLmphdmEsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjEwNw0KZGlmZiAtdSAt
cjEuMTA3IEFTVE5vZGUuamF2YQ0KLS0tIGNvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb21waWxlci9hc3QvQVNUTm9kZS5qYXZhCTggRmViIDIwMTEgMDU6MTY6MjAgLTAwMDAJMS4x
MDcNCisrKyBjb21waWxlci9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L0FT
VE5vZGUuamF2YQkxNSBGZWIgMjAxMSAwOTozOToyNyAtMDAwMA0KQEAgLTI5Niw3ICsyOTYsNyBA
QA0KIAkJCQkJaW52b2NhdGlvblN0YXR1cyB8PSBjaGVja0ludm9jYXRpb25Bcmd1bWVudChzY29w
ZSwgYXJndW1lbnRzW2ldLCBwYXJhbXNbaV0gLCBhcmd1bWVudFR5cGVzW2ldLCBvcmlnaW5hbFJh
d1BhcmFtKTsNCiAJCQkJfQ0KIAkJCSAgIGludCBhcmdMZW5ndGggPSBhcmd1bWVudHMubGVuZ3Ro
Ow0KLQkJCSAgIGlmIChsYXN0SW5kZXggPCBhcmdMZW5ndGgpIHsgLy8gdmFyYXJnIGFyZ3VtZW50
IHdhcyBwcm92aWRlZA0KKwkJCSAgIGlmIChsYXN0SW5kZXggPD0gYXJnTGVuZ3RoKSB7IC8vIGh0
dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMzcwOTMNCiAJCQkJ
ICAgCVR5cGVCaW5kaW5nIHBhcmFtZXRlclR5cGUgPSBwYXJhbXNbbGFzdEluZGV4XTsNCiAJCQkJ
CVR5cGVCaW5kaW5nIG9yaWdpbmFsUmF3UGFyYW0gPSBudWxsOw0KIA0KI1Agb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMuY29tcGlsZXINCkluZGV4OiBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9WYXJhcmdzVGVzdC5qYXZhDQo9PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpS
Q1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21w
aWxlci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9W
YXJhcmdzVGVzdC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS42Mg0KZGlmZiAtdSAtcjEu
NjIgVmFyYXJnc1Rlc3QuamF2YQ0KLS0tIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9j
b21waWxlci9yZWdyZXNzaW9uL1ZhcmFyZ3NUZXN0LmphdmEJMjAgT2N0IDIwMTAgMTQ6MjU6MDkg
LTAwMDAJMS42Mg0KKysrIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9y
ZWdyZXNzaW9uL1ZhcmFyZ3NUZXN0LmphdmEJMTUgRmViIDIwMTEgMDk6Mzk6NDcgLTAwMDANCkBA
IC0xLDUgKzEsNSBAQA0KIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChj
KSAyMDA1LCAyMDEwIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KKyAqIENvcHlyaWdodCAo
YykgMjAwNSwgMjAxMSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCiAgKiBBbGwgcmlnaHRz
IHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQog
ICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJs
aWMgTGljZW5zZSB2MS4wDQogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24s
IGFuZCBpcyBhdmFpbGFibGUgYXQNCkBAIC0yMTk2LDQgKzIxOTYsNDIgQEANCiAJCQkiICBYJDEo
WCBhcmcwLCBqYXZhLmxhbmcuSW50ZWdlciAkYW5vbnltb3VzMCwgamF2YS5sYW5nLlN0cmluZy4u
LiAkYW5vbnltb3VzMSwgamF2YS5sYW5nLkZsb2F0IGFyZzMpO1xuIjsNCiAJCWNoZWNrRGlzYXNz
ZW1ibGVkQ2xhc3NGaWxlKE9VVFBVVF9ESVIgKyBGaWxlLnNlcGFyYXRvciArICJYJDEuY2xhc3Mi
LCAiWCQxIiwgZXhwZWN0ZWRPdXRwdXQpOw0KIAl9DQorCS8vIGh0dHBzOi8vYnVncy5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0zMzcwOTMNCisJcHVibGljIHZvaWQgdGVzdDA2Mygp
IHsNCisJCU1hcCBvcHRpb25zID0gZ2V0Q29tcGlsZXJPcHRpb25zKCk7DQorCQlvcHRpb25zLnB1
dChDb21waWxlck9wdGlvbnMuT1BUSU9OX1JlcG9ydE1pc3NpbmdPdmVycmlkZUFubm90YXRpb25G
b3JJbnRlcmZhY2VNZXRob2RJbXBsZW1lbnRhdGlvbiwgQ29tcGlsZXJPcHRpb25zLkRJU0FCTEVE
KTsNCisJCXRoaXMucnVuTmVnYXRpdmVUZXN0KA0KKwkJCQluZXcgU3RyaW5nW10gew0KKwkJCQkJ
IlguamF2YSIsDQorCQkJCQkiaW1wb3J0IGphdmEudXRpbC5Db2xsZWN0aW9uO1xuIiArDQorCQkJ
CQkiaW1wb3J0IGphdmEudXRpbC5JdGVyYXRvcjtcbiIgKw0KKwkJCQkJInB1YmxpYyBjbGFzcyBY
IHtcbiIgKw0KKwkJCQkJIiAgICBwdWJsaWMgc3RhdGljIGNsYXNzIEl0ZXJhdG9yQ2hhaW48VD4g
aW1wbGVtZW50cyBJdGVyYXRvcjxUPiB7XG4iICsNCisJCQkJCSIgICAgICAgcHVibGljIEl0ZXJh
dG9yQ2hhaW4oQ29sbGVjdGlvbjw/IGV4dGVuZHMgVD4gYSwgQ29sbGVjdGlvbjw/IGV4dGVuZHMg
VD4gYiwgQ29sbGVjdGlvbjw/IGV4dGVuZHMgVD4gLi4uIGNvbGxlY3Rpb25zKSB7XG4iICsNCisJ
CQkJCSIgICAgICAgIH1cbiIgKw0KKwkJCQkJIiAgICAgICAgcHVibGljIGJvb2xlYW4gaGFzTmV4
dCgpIHtcbiIgKw0KKwkJCQkJIiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiIgKw0KKwkJCQkJ
IiAgICAgICAgfVxuIiArDQorCQkJCQkiICAgICAgICBwdWJsaWMgVCBuZXh0KCkge1xuIiArDQor
CQkJCQkiICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4iICsNCisJCQkJCSIgICAgICAgIH1cbiIg
Kw0KKwkJCQkJIiAgICAgICAgcHVibGljIHZvaWQgcmVtb3ZlKCkge1xuIiArDQorCQkJCQkiICAg
ICAgICAgICAgdGhyb3cgbmV3IFVuc3VwcG9ydGVkT3BlcmF0aW9uRXhjZXB0aW9uKCk7XG4iICsN
CisJCQkJCSIgICAgICAgIH1cbiIgKw0KKwkJCQkJIiAgICB9XG4iICsNCisJCQkJCSIgICAgcHVi
bGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuIiArDQorCQkJCQkiICAgICAg
ICBuZXcgSXRlcmF0b3JDaGFpbjxOdW1iZXI+KG51bGwsIG51bGwpO1xuIiArDQorCQkJCQkiICAg
IH1cbiIgKw0KKwkJCQkJIn1cbiIsIC8vID09PT09PT09PT09PT09PT09DQorCQkJCX0sDQorCQkJ
CSItLS0tLS0tLS0tXG4iICsgDQorCQkJCSIxLiBXQVJOSU5HIGluIFguamF2YSAoYXQgbGluZSAx
OClcbiIgKyANCisJCQkJIgluZXcgSXRlcmF0b3JDaGFpbjxOdW1iZXI+KG51bGwsIG51bGwpO1xu
IiArIA0KKwkJCQkiCV5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cbiIgKyAN
CisJCQkJIlR5cGUgc2FmZXR5IDogQSBnZW5lcmljIGFycmF5IG9mIENvbGxlY3Rpb248PyBleHRl
bmRzIE51bWJlcj4gaXMgY3JlYXRlZCBmb3IgYSB2YXJhcmdzIHBhcmFtZXRlclxuIiArIA0KKwkJ
CQkiLS0tLS0tLS0tLVxuIiwNCisJCQkJbnVsbCwgDQorCQkJCXRydWUsDQorCQkJCW9wdGlvbnMp
OwkJDQorCX0NCiB9DQo=
</data>

          </attachment>
      

    </bug>

</bugzilla>