<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>427538</bug_id>
          
          <creation_ts>2014-02-06 03:05:00 -0500</creation_ts>
          <short_desc>[1.8][infrastructure] Enable CompletionTests18 &amp; ResolveTests18 to run with rtstubs18.jar</short_desc>
          <delta_ts>2014-02-21 05:49:16 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3.1</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Srikanth Sankaran">srikanth_sankaran</reporter>
          <assigned_to name="Jay Arthanareeswaran">jarthana</assigned_to>
          <cc>manpalat</cc>
    
    <cc>markus_keller</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2359453</commentid>
    <comment_count>0</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-06 03:05:09 -0500</bug_when>
    <thetext>Presently writing completion and selection tests from user provided problem
snippets is a pain because these tests run against minimal version of libraries
(JCLMIN) that don&apos;t even have java.lang.String in some incarnations of them.

For example given:

import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;


public class Bug419048 {
	void test1(List&lt;Person&gt; roster) {
        Map&lt;String, Person&gt; map = 
                roster
                    .stream()
                    .collect(
                        Collectors.toMap(
                            p -&gt; p.getLast(), //[1]
                            p -&gt; p            //[2]
                        ));
	}
}

one needs to transform all the symbols that originate from JRE into local
types or otherwise rewrite the test into shape.

Historically the UI project has maintained their some of their tests against
a stubbed version of JRE and recently Markus created the JDK8 version of it.
See http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?h=BETA_JAVA8&amp;id=4505fb3550ef580808061e75a5a925cfe9d3b9d2

We need CompletionTests18 and ResolveTests18 to similarly run against
a version of library that has all the types in tact (but for method
bodies which are stubbed out) to make it easy to write tests.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2359454</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-02-06 03:07:42 -0500</bug_when>
    <thetext>Jay, thanks for following up. I am thinking we can hack the code in
org.eclipse.jdt.core.tests.model.AbstractJavaModelTests.setUpProjectCompliance(IJavaProject, String) so for specific tests the fuller rtstubs18 get picked up.

I suspect the reason we don&apos;t run completion tests against the full JRE is perhaps
to avoid frequent indexing ? (Not sure)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360025</commentid>
    <comment_count>2</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2014-02-07 05:02:50 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #1)
&gt; I suspect the reason we don&apos;t run completion tests against the full JRE is
&gt; perhaps
&gt; to avoid frequent indexing ? (Not sure)

Another argument for running tests against a fixed stub library (and not against the JRE that is used to run the tests): You get stable test results.

Depending on the actual JRE/platform version, you can get different completions, import conflicts, generic/non-generic types, etc.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360082</commentid>
    <comment_count>3</comment_count>
      <attachid>239733</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-02-07 06:32:41 -0500</bug_when>
    <thetext>Created attachment 239733
Patch with updated tests

The patch requires the rt stub to be present at &quot;/org.eclipse.jdt.core.tests.model/JCL/jclFull1.8.jar&quot; - This is just a renamed version of &quot;org.eclipse.jdt.ui.tests/testresources/rtstubs18.jar&quot;

Several tests in CompletionTests18 and ResolveTests18 had to be updated to make them pass as the new jar contains lot more types and methods than what we had earlier.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2360306</commentid>
    <comment_count>4</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-02-07 11:44:31 -0500</bug_when>
    <thetext>Fix has been released via commit:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=bca01eadc82a3abb71100149fcbedb07d33a04ad</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2361318</commentid>
    <comment_count>5</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-02-11 00:37:46 -0500</bug_when>
    <thetext>After this fix went in, there were some failures in certain completion tests when run as part of RunCompletionModelTests. This has been fixed via:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=a435d5911504d8f414ca9e9a9003b7f07711d2a4</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2366651</commentid>
    <comment_count>6</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-02-21 05:49:16 -0500</bug_when>
    <thetext>Verified as working for Eclipse + Java 8 RC1 using Kepler SR2(RC4) +   
Eclipse Java Development Tools Patch for Java 8 Support (BETA)   
1.0.0.v20140220-2054</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>239733</attachid>
            <date>2014-02-07 06:32:00 -0500</date>
            <delta_ts>2014-02-07 06:32:41 -0500</delta_ts>
            <desc>Patch with updated tests</desc>
            <filename>Bug-427538.patch</filename>
            <type>text/plain</type>
            <size>29559</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL0pDTC9qY2xGdWxs
MS44LmphciBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL0pDTC9qY2xGdWxsMS44
LmphcgpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwLi4wMjIzOGFhCi0tLSAvZGV2
L251bGwKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvSkNML2pjbEZ1bGwx
LjguamFyCkJpbmFyeSBmaWxlcyBkaWZmZXIKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQ29udmVy
dGVyVGVzdFNldHVwLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0NvbnZlcnRlclRlc3RTZXR1cC5qYXZhCmlu
ZGV4IGNkZTJjYzQuLmU0MTY5NjkgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQ29udmVydGVyVGVz
dFNldHVwLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9Db252ZXJ0ZXJUZXN0U2V0dXAuamF2YQpAQCAt
MSw0ICsxLDQgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIw
MDAsIDIwMTMgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIw
MDAsIDIwMTQgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2Vy
dmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUg
bWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNl
bnNlIHYxLjAKQEAgLTEwOSw1ICsxMDksNSBAQAogCX0KIAotCXB1YmxpYyB2b2lkIHNldFVwSkNM
Q2xhc3NwYXRoVmFyaWFibGVzKFN0cmluZyBjb21wbGlhbmNlKSB0aHJvd3MgSmF2YU1vZGVsRXhj
ZXB0aW9uLCBJT0V4Y2VwdGlvbiB7CisJcHVibGljIHZvaWQgc2V0VXBKQ0xDbGFzc3BhdGhWYXJp
YWJsZXMoU3RyaW5nIGNvbXBsaWFuY2UsIGJvb2xlYW4gdXNlRnVsbEpDTCkgdGhyb3dzIEphdmFN
b2RlbEV4Y2VwdGlvbiwgSU9FeGNlcHRpb24gewogCQlpZiAoIjEuNSIuZXF1YWxzKGNvbXBsaWFu
Y2UpCiAJCQkJfHwgIjEuNiIuZXF1YWxzKGNvbXBsaWFuY2UpKSB7CmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvbW9kZWwvQWJzdHJhY3RKYXZhTW9kZWxUZXN0cy5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0Fic3Ry
YWN0SmF2YU1vZGVsVGVzdHMuamF2YQppbmRleCBjMThmODM2Li5jZjRjMDY3IDEwMDY0NAotLS0g
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvbW9kZWwvQWJzdHJhY3RKYXZhTW9kZWxUZXN0cy5qYXZhCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9t
b2RlbC9BYnN0cmFjdEphdmFNb2RlbFRlc3RzLmphdmEKQEAgLTEzMTAsNCArMTMxMCwyNiBAQAog
CQkJKTsKIAl9CisJcHJvdGVjdGVkIElKYXZhUHJvamVjdCBjcmVhdGVKYXZhUHJvamVjdChTdHJp
bmcgcHJvamVjdE5hbWUsIFN0cmluZ1tdIHNvdXJjZUZvbGRlcnMsIFN0cmluZ1tdIGxpYnJhcmll
cywgU3RyaW5nIG91dHB1dCwgU3RyaW5nIGNvbXBsaWFuY2UsIGJvb2xlYW4gdXNlRnVsbEpDTCkg
dGhyb3dzIENvcmVFeGNlcHRpb24geworCQlyZXR1cm4KKwkJCQl0aGlzLmNyZWF0ZUphdmFQcm9q
ZWN0KAorCQkJCQlwcm9qZWN0TmFtZSwKKwkJCQkJc291cmNlRm9sZGVycywKKwkJCQkJbGlicmFy
aWVzLAorCQkJCQludWxsLypubyBpbmNsdXNpb24gcGF0dGVybiovLAorCQkJCQludWxsLypubyBl
eGNsdXNpb24gcGF0dGVybiovLAorCQkJCQludWxsLypubyBwcm9qZWN0Ki8sCisJCQkJCW51bGwv
Km5vIGluY2x1c2lvbiBwYXR0ZXJuKi8sCisJCQkJCW51bGwvKm5vIGV4Y2x1c2lvbiBwYXR0ZXJu
Ki8sCisJCQkJCXRydWUsCisJCQkJCW51bGwvKm5vIGV4cG9ydGVkIHByb2plY3QqLywKKwkJCQkJ
b3V0cHV0LAorCQkJCQludWxsLypubyBzb3VyY2Ugb3V0cHV0cyovLAorCQkJCQludWxsLypubyBp
bmNsdXNpb24gcGF0dGVybiovLAorCQkJCQludWxsLypubyBleGNsdXNpb24gcGF0dGVybiovLAor
CQkJCQljb21wbGlhbmNlLAorCQkJCQl1c2VGdWxsSkNMLAorCQkJCQlmYWxzZQorCQkJCSk7CisJ
fQogCXByb3RlY3RlZCBJSmF2YVByb2plY3QgY3JlYXRlSmF2YVByb2plY3QoU3RyaW5nIHByb2pl
Y3ROYW1lLCBTdHJpbmdbXSBzb3VyY2VGb2xkZXJzLCBTdHJpbmdbXSBsaWJyYXJpZXMsIFN0cmlu
ZyBvdXRwdXQsIFN0cmluZyBjb21wbGlhbmNlKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CiAJCXJl
dHVybgpAQCAtMTQ2NSw0ICsxNDg3LDQxIEBACiAJCQlmaW5hbCBTdHJpbmcgY29tcGxpYW5jZSwK
IAkJCWZpbmFsIGJvb2xlYW4gc2ltdWxhdGVJbXBvcnQpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsK
KwkJcmV0dXJuIGNyZWF0ZUphdmFQcm9qZWN0KAorCQkJCXByb2plY3ROYW1lLCAKKwkJCQlzb3Vy
Y2VGb2xkZXJzLCAKKwkJCQlsaWJyYXJpZXMsIAorCQkJCWxpYnJhcmllc0luY2x1c2lvblBhdHRl
cm5zLCAKKwkJCQlsaWJyYXJpZXNFeGNsdXNpb25QYXR0ZXJucywgCisJCQkJcHJvamVjdHMsIAor
CQkJCXByb2plY3RzSW5jbHVzaW9uUGF0dGVybnMsIAorCQkJCXByb2plY3RzRXhjbHVzaW9uUGF0
dGVybnMsIAorCQkJCWNvbWJpbmVBY2Nlc3NSZXN0cmljdGlvbnMsIAorCQkJCWV4cG9ydGVkUHJv
amVjdHMsIAorCQkJCXByb2plY3RPdXRwdXQsIAorCQkJCXNvdXJjZU91dHB1dHMsIAorCQkJCWlu
Y2x1c2lvblBhdHRlcm5zLCAKKwkJCQlleGNsdXNpb25QYXR0ZXJucywgCisJCQkJY29tcGxpYW5j
ZSwgCisJCQkJZmFsc2UsIAorCQkJCXNpbXVsYXRlSW1wb3J0KTsKKwl9CisJcHJvdGVjdGVkIElK
YXZhUHJvamVjdCBjcmVhdGVKYXZhUHJvamVjdCgKKwkJCWZpbmFsIFN0cmluZyBwcm9qZWN0TmFt
ZSwKKwkJCWZpbmFsIFN0cmluZ1tdIHNvdXJjZUZvbGRlcnMsCisJCQlmaW5hbCBTdHJpbmdbXSBs
aWJyYXJpZXMsCisJCQlmaW5hbCBTdHJpbmdbXVtdIGxpYnJhcmllc0luY2x1c2lvblBhdHRlcm5z
LAorCQkJZmluYWwgU3RyaW5nW11bXSBsaWJyYXJpZXNFeGNsdXNpb25QYXR0ZXJucywKKwkJCWZp
bmFsIFN0cmluZ1tdIHByb2plY3RzLAorCQkJZmluYWwgU3RyaW5nW11bXSBwcm9qZWN0c0luY2x1
c2lvblBhdHRlcm5zLAorCQkJZmluYWwgU3RyaW5nW11bXSBwcm9qZWN0c0V4Y2x1c2lvblBhdHRl
cm5zLAorCQkJZmluYWwgYm9vbGVhbiBjb21iaW5lQWNjZXNzUmVzdHJpY3Rpb25zLAorCQkJZmlu
YWwgYm9vbGVhbltdIGV4cG9ydGVkUHJvamVjdHMsCisJCQlmaW5hbCBTdHJpbmcgcHJvamVjdE91
dHB1dCwKKwkJCWZpbmFsIFN0cmluZ1tdIHNvdXJjZU91dHB1dHMsCisJCQlmaW5hbCBTdHJpbmdb
XVtdIGluY2x1c2lvblBhdHRlcm5zLAorCQkJZmluYWwgU3RyaW5nW11bXSBleGNsdXNpb25QYXR0
ZXJucywKKwkJCWZpbmFsIFN0cmluZyBjb21wbGlhbmNlLAorCQkJZmluYWwgYm9vbGVhbiBmdWxs
SkNMLAorCQkJZmluYWwgYm9vbGVhbiBzaW11bGF0ZUltcG9ydCkgdGhyb3dzIENvcmVFeGNlcHRp
b24gewogCQlmaW5hbCBJSmF2YVByb2plY3RbXSByZXN1bHQgPSBuZXcgSUphdmFQcm9qZWN0WzFd
OwogCQlJV29ya3NwYWNlUnVubmFibGUgY3JlYXRlID0gbmV3IElXb3Jrc3BhY2VSdW5uYWJsZSgp
IHsKQEAgLTE1NDYsNSArMTYwNSw1IEBACiAJCQkJCQl0cnkgewogCQkJCQkJCS8vIGVuc3VyZSBK
Q0wgdmFyaWFibGVzIGFyZSBzZXQKLQkJCQkJCQlzZXRVcEpDTENsYXNzcGF0aFZhcmlhYmxlcyhj
b21wbGlhbmNlKTsKKwkJCQkJCQlzZXRVcEpDTENsYXNzcGF0aFZhcmlhYmxlcyhjb21wbGlhbmNl
LCBmdWxsSkNMKTsKIAkJCQkJCX0gY2F0Y2ggKElPRXhjZXB0aW9uIGUpIHsKIAkJCQkJCQllLnBy
aW50U3RhY2tUcmFjZSgpOwpAQCAtMTkzNCw0ICsxOTkzLDExIEBACiAJcHJvdGVjdGVkIFN0cmlu
ZyBnZXRFeHRlcm5hbEpDTFBhdGhTdHJpbmcoU3RyaW5nIGNvbXBsaWFuY2UpIHsKIAkJcmV0dXJu
IGdldEV4dGVybmFsUGF0aCgpICsgImpjbE1pbiIgKyBjb21wbGlhbmNlICsgIi5qYXIiOworCX0K
Kwlwcm90ZWN0ZWQgU3RyaW5nIGdldEV4dGVybmFsSkNMUGF0aFN0cmluZyhTdHJpbmcgY29tcGxp
YW5jZSwgYm9vbGVhbiB1c2VGdWxsSkNMKSB7CisJCWlmICh1c2VGdWxsSkNMKSB7CisJCQlyZXR1
cm4gZ2V0RXh0ZXJuYWxQYXRoKCkgKyAiamNsRnVsbCIgKyBjb21wbGlhbmNlICsgIi5qYXIiOwor
CQl9IGVsc2UgeworCQkJcmV0dXJuIGdldEV4dGVybmFsSkNMUGF0aFN0cmluZyhjb21wbGlhbmNl
KTsKKwkJfQogCX0KIAkvKioKQEAgLTI2ODksNCArMjc1NSw3IEBACiAJfQogCXByb3RlY3RlZCBJ
SmF2YVByb2plY3Qgc2V0VXBKYXZhUHJvamVjdChmaW5hbCBTdHJpbmcgcHJvamVjdE5hbWUsIFN0
cmluZyBjb21wbGlhbmNlKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiwgSU9FeGNlcHRpb24geworCQly
ZXR1cm4gc2V0VXBKYXZhUHJvamVjdChwcm9qZWN0TmFtZSwgY29tcGxpYW5jZSwgZmFsc2UpOwor
CX0KKwlwcm90ZWN0ZWQgSUphdmFQcm9qZWN0IHNldFVwSmF2YVByb2plY3QoZmluYWwgU3RyaW5n
IHByb2plY3ROYW1lLCBTdHJpbmcgY29tcGxpYW5jZSwgYm9vbGVhbiB1c2VGdWxsSkNMKSB0aHJv
d3MgQ29yZUV4Y2VwdGlvbiwgSU9FeGNlcHRpb24gewogCQkvLyBjb3B5IGZpbGVzIGluIHByb2pl
Y3QgZnJvbSBzb3VyY2Ugd29ya3NwYWNlIHRvIHRhcmdldCB3b3Jrc3BhY2UKIAkJU3RyaW5nIHNv
dXJjZVdvcmtzcGFjZVBhdGggPSBnZXRTb3VyY2VXb3Jrc3BhY2VQYXRoKCk7CkBAIC0yNjk1LDUg
KzI3NjQsNSBAQAogCiAJCS8vIGVuc3VyZSB2YXJpYWJsZXMgYXJlIHNldAotCQlzZXRVcEpDTENs
YXNzcGF0aFZhcmlhYmxlcyhjb21wbGlhbmNlKTsKKwkJc2V0VXBKQ0xDbGFzc3BhdGhWYXJpYWJs
ZXMoY29tcGxpYW5jZSwgdXNlRnVsbEpDTCk7CiAKIAkJLy8gY3JlYXRlIHByb2plY3QKQEAgLTI3
MDcsNSArMjc3Niw1IEBACiAJCWdldFdvcmtzcGFjZSgpLnJ1bihwb3B1bGF0ZSwgbnVsbCk7CiAJ
CUlKYXZhUHJvamVjdCBqYXZhUHJvamVjdCA9IEphdmFDb3JlLmNyZWF0ZShwcm9qZWN0KTsKLQkJ
c2V0VXBQcm9qZWN0Q29tcGxpYW5jZShqYXZhUHJvamVjdCwgY29tcGxpYW5jZSk7CisJCXNldFVw
UHJvamVjdENvbXBsaWFuY2UoamF2YVByb2plY3QsIGNvbXBsaWFuY2UsIHVzZUZ1bGxKQ0wpOwog
CQlqYXZhUHJvamVjdC5zZXRPcHRpb24oSmF2YUNvcmUuQ09NUElMRVJfUEJfVU5VU0VEX0xPQ0FM
LCBKYXZhQ29yZS5JR05PUkUpOwogCQlqYXZhUHJvamVjdC5zZXRPcHRpb24oSmF2YUNvcmUuQ09N
UElMRVJfUEJfVU5VU0VEX1BSSVZBVEVfTUVNQkVSLCBKYXZhQ29yZS5JR05PUkUpOwpAQCAtMjcx
NSw2ICsyNzg0LDggQEAKIAkJcmV0dXJuIGphdmFQcm9qZWN0OwogCX0KLQogCXByb3RlY3RlZCB2
b2lkIHNldFVwUHJvamVjdENvbXBsaWFuY2UoSUphdmFQcm9qZWN0IGphdmFQcm9qZWN0LCBTdHJp
bmcgY29tcGxpYW5jZSkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiwgSU9FeGNlcHRpb24gewor
CQlzZXRVcFByb2plY3RDb21wbGlhbmNlKGphdmFQcm9qZWN0LCBjb21wbGlhbmNlLCBmYWxzZSk7
CisJfQorCXByb3RlY3RlZCB2b2lkIHNldFVwUHJvamVjdENvbXBsaWFuY2UoSUphdmFQcm9qZWN0
IGphdmFQcm9qZWN0LCBTdHJpbmcgY29tcGxpYW5jZSwgYm9vbGVhbiB1c2VGdWxsSkNMKSB0aHJv
d3MgSmF2YU1vZGVsRXhjZXB0aW9uLCBJT0V4Y2VwdGlvbiB7CiAJCS8vIExvb2sgZm9yIHZlcnNp
b24gdG8gc2V0IGFuZCByZXR1cm4gaWYgdGhhdCdzIGFscmVhZHkgZG9uZQogCQlTdHJpbmcgdmVy
c2lvbiA9IGNvbXBsaWFuY2U7IC8vIGFzc3VtZSB0aGF0IHRoZSB2YWx1ZXMgb2YgQ29tcGlsZXJP
cHRpb25zLlZFUlNJT05fKiBhcmUgdXNlZApAQCAtMjc0MSw1ICsyODEyLDUgQEAKIAogCQkvLyBl
bnN1cmUgdmFyaWFibGVzIGFyZSBzZXQKLQkJc2V0VXBKQ0xDbGFzc3BhdGhWYXJpYWJsZXMoY29t
cGxpYW5jZSk7CisJCXNldFVwSkNMQ2xhc3NwYXRoVmFyaWFibGVzKGNvbXBsaWFuY2UsIHVzZUZ1
bGxKQ0wpOwogCiAJCS8vIHNldCBvcHRpb25zCkBAIC0yNzYwLDcgKzI4MzEsNyBAQAogCQkJSUNs
YXNzcGF0aEVudHJ5IGVudHJ5ID0gY2xhc3NwYXRoW2ldOwogCQkJZmluYWwgSVBhdGggcGF0aCA9
IGVudHJ5LmdldFBhdGgoKTsKLQkJCWlmIChwYXRoLmVxdWFscyhqY2xMaWIpIHx8IChjb21wbGlh
bmNlMThQbHVzICYmIHBhdGguZXF1YWxzKGpjbDVMaWIpKSB8fCAoIWNvbXBsaWFuY2UxOFBsdXMg
JiYgcGF0aC5lcXVhbHMoamNsOExpYikpKSB7CisJCQlpZiAodXNlRnVsbEpDTCkgewogCQkJCWNs
YXNzcGF0aFtpXSA9IEphdmFDb3JlLm5ld1ZhcmlhYmxlRW50cnkoCi0JCQkJCQluZXcgUGF0aChu
ZXdKY2xMaWJTdHJpbmcpLAorCQkJCQkJbmV3IFBhdGgoIkpDTDE4X0ZVTEwiKSwKIAkJCQkJCW5l
dyBQYXRoKG5ld0pjbFNyY1N0cmluZyksCiAJCQkJCQllbnRyeS5nZXRTb3VyY2VBdHRhY2htZW50
Um9vdFBhdGgoKSwKQEAgLTI3NjksNCArMjg0MCwxMyBAQAogCQkJCQkJZW50cnkuaXNFeHBvcnRl
ZCgpKTsKIAkJCQlicmVhazsKKwkJCX0gZWxzZSBpZiAocGF0aC5lcXVhbHMoamNsTGliKSB8fCAo
Y29tcGxpYW5jZTE4UGx1cyAmJiBwYXRoLmVxdWFscyhqY2w1TGliKSkgfHwgKCFjb21wbGlhbmNl
MThQbHVzICYmIHBhdGguZXF1YWxzKGpjbDhMaWIpKSkgeworCQkJCQljbGFzc3BhdGhbaV0gPSBK
YXZhQ29yZS5uZXdWYXJpYWJsZUVudHJ5KAorCQkJCQkJCW5ldyBQYXRoKG5ld0pjbExpYlN0cmlu
ZyksCisJCQkJCQkJbmV3IFBhdGgobmV3SmNsU3JjU3RyaW5nKSwKKwkJCQkJCQllbnRyeS5nZXRT
b3VyY2VBdHRhY2htZW50Um9vdFBhdGgoKSwKKwkJCQkJCQllbnRyeS5nZXRBY2Nlc3NSdWxlcygp
LAorCQkJCQkJCW5ldyBJQ2xhc3NwYXRoQXR0cmlidXRlWzBdLAorCQkJCQkJCWVudHJ5LmlzRXhw
b3J0ZWQoKSk7CisJCQkJCWJyZWFrOwogCQkJfQogCQl9CkBAIC0yNzc0LDQgKzI4NTQsNyBAQAog
CX0KIAlwdWJsaWMgdm9pZCBzZXRVcEpDTENsYXNzcGF0aFZhcmlhYmxlcyhTdHJpbmcgY29tcGxp
YW5jZSkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiwgSU9FeGNlcHRpb24geworCQlzZXRVcEpD
TENsYXNzcGF0aFZhcmlhYmxlcyhjb21wbGlhbmNlLCBmYWxzZSk7CisJfQorCXB1YmxpYyB2b2lk
IHNldFVwSkNMQ2xhc3NwYXRoVmFyaWFibGVzKFN0cmluZyBjb21wbGlhbmNlLCBib29sZWFuIHVz
ZUZ1bGxKQ0wpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24sIElPRXhjZXB0aW9uIHsKIAkJaWYg
KCIxLjUiLmVxdWFscyhjb21wbGlhbmNlKSB8fCAiMS42Ii5lcXVhbHMoY29tcGxpYW5jZSkpIHsK
IAkJCWlmIChKYXZhQ29yZS5nZXRDbGFzc3BhdGhWYXJpYWJsZSgiSkNMMTVfTElCIikgPT0gbnVs
bCkgewpAQCAtMjc5MSwxMSArMjg3NCwyMCBAQAogCQkJfQogCQl9IGVsc2UgaWYgKCIxLjgiLmVx
dWFscyhjb21wbGlhbmNlKSkgewotCQkJaWYgKEphdmFDb3JlLmdldENsYXNzcGF0aFZhcmlhYmxl
KCJKQ0wxOF9MSUIiKSA9PSBudWxsKSB7Ci0JCQkJc2V0dXBFeHRlcm5hbEpDTCgiamNsTWluMS44
Iik7Ci0JCQkJSmF2YUNvcmUuc2V0Q2xhc3NwYXRoVmFyaWFibGVzKAotCQkJCQluZXcgU3RyaW5n
W10geyJKQ0wxOF9MSUIiLCAiSkNMMThfU1JDIiwgIkpDTF9TUkNST09UIn0sCi0JCQkJCW5ldyBJ
UGF0aFtdIHtnZXRFeHRlcm5hbEpDTFBhdGgoIjEuOCIpLCBnZXRFeHRlcm5hbEpDTFNvdXJjZVBh
dGgoIjEuOCIpLCBnZXRFeHRlcm5hbEpDTFJvb3RTb3VyY2VQYXRoKCl9LAotCQkJCQludWxsKTsK
LQkJCX0JCisJCQlpZiAodXNlRnVsbEpDTCkgeworCQkJCWlmIChKYXZhQ29yZS5nZXRDbGFzc3Bh
dGhWYXJpYWJsZSgiSkNMMThfRlVMTCIpID09IG51bGwpIHsKKwkJCQkJc2V0dXBFeHRlcm5hbEpD
TCgiamNsTWluMS44Iik7IC8vIENyZWF0ZSB0aGUgd2hvbGUgbWluaW5tYWwgMS44IHNldCwgdGhv
dWdoIHdlIHdpbGwgbmVlZCBvbmx5IHRoZSBzb3VyY2UgemlwCisJCQkJCXNldHVwRXh0ZXJuYWxK
Q0woImpjbEZ1bGwxLjgiKTsKKwkJCQkJSmF2YUNvcmUuc2V0Q2xhc3NwYXRoVmFyaWFibGVzKAor
CQkJCQkJbmV3IFN0cmluZ1tdIHsiSkNMMThfRlVMTCIsICJKQ0wxOF9TUkMiLCAiSkNMX1NSQ1JP
T1QifSwKKwkJCQkJCW5ldyBJUGF0aFtdIHtuZXcgUGF0aChnZXRFeHRlcm5hbEpDTFBhdGhTdHJp
bmcoIjEuOCIsIHRydWUpKSwgZ2V0RXh0ZXJuYWxKQ0xTb3VyY2VQYXRoKCIxLjgiKSwgZ2V0RXh0
ZXJuYWxKQ0xSb290U291cmNlUGF0aCgpfSwKKwkJCQkJCW51bGwpOworCQkJCX0gCisJCQl9IGVs
c2UgaWYgKEphdmFDb3JlLmdldENsYXNzcGF0aFZhcmlhYmxlKCJKQ0wxOF9MSUIiKSA9PSBudWxs
KSB7CisJCQkJCQlzZXR1cEV4dGVybmFsSkNMKCJqY2xNaW4xLjgiKTsKKwkJCQkJCUphdmFDb3Jl
LnNldENsYXNzcGF0aFZhcmlhYmxlcygKKwkJCQkJCQluZXcgU3RyaW5nW10geyJKQ0wxOF9MSUIi
LCAiSkNMMThfU1JDIiwgIkpDTF9TUkNST09UIn0sCisJCQkJCQkJbmV3IElQYXRoW10ge2dldEV4
dGVybmFsSkNMUGF0aCgiMS44IiksIGdldEV4dGVybmFsSkNMU291cmNlUGF0aCgiMS44IiksIGdl
dEV4dGVybmFsSkNMUm9vdFNvdXJjZVBhdGgoKX0sCisJCQkJCQkJbnVsbCk7CisJCQl9CiAJCX0g
ZWxzZSB7CiAJCQlpZiAoSmF2YUNvcmUuZ2V0Q2xhc3NwYXRoVmFyaWFibGUoIkpDTF9MSUIiKSA9
PSBudWxsKSB7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvQ29tcGxldGlvblRlc3RzMTguamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9tb2RlbC9Db21wbGV0aW9uVGVzdHMxOC5qYXZhCmluZGV4IDVlOTFmZGYuLjJk
MTdkZGQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9Db21wbGV0aW9uVGVzdHMxOC5qYXZhCisr
KyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9tb2RlbC9Db21wbGV0aW9uVGVzdHMxOC5qYXZhCkBAIC0zMyw3ICszMyw3IEBA
CiBwdWJsaWMgdm9pZCBzZXRVcFN1aXRlKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAJaWYgKENPTVBM
RVRJT05fUFJPSkVDVCA9PSBudWxsKSAgewotCQlDT01QTEVUSU9OX1BST0pFQ1QgPSBzZXRVcEph
dmFQcm9qZWN0KCJDb21wbGV0aW9uIiwgIjEuOCIpOworCQlDT01QTEVUSU9OX1BST0pFQ1QgPSBz
ZXRVcEphdmFQcm9qZWN0KCJDb21wbGV0aW9uIiwgIjEuOCIsIHRydWUpOwogCX0gZWxzZSB7Ci0J
CXNldFVwUHJvamVjdENvbXBsaWFuY2UoQ09NUExFVElPTl9QUk9KRUNULCAiMS44Iik7CisJCXNl
dFVwUHJvamVjdENvbXBsaWFuY2UoQ09NUExFVElPTl9QUk9KRUNULCAiMS44IiwgdHJ1ZSk7CiAJ
fQogCXN1cGVyLnNldFVwU3VpdGUoKTsKQEAgLTUxLDUgKzUxLDUgQEAKIAkJCSJ9XG4iICsKIAkJ
CSJpbnRlcmZhY2UgWCBleHRlbmRzIEZvb3tcbiIgKwotCQkJIiAgc3RhdGljIEZvbyBmID0gKGZp
cnN0LCBzZWNvbmQpIC0+IFN5c3RlbS5vdXQucHJpbnQoZmkpO1xuIiArCisJCQkiICBzdGF0aWMg
Rm9vIGYgPSAoZmlyc3QsIHNlY29uZCkgLT4gU3lzdGVtLm91dC5wcmludChmaXIpO1xuIiArCiAJ
CQkifVxuIik7CiAKQEAgLTU3LDUgKzU3LDUgQEAKIAlyZXF1ZXN0b3IuYWxsb3dBbGxSZXF1aXJl
ZFByb3Bvc2FscygpOwogCVN0cmluZyBzdHIgPSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uZ2V0U291
cmNlKCk7Ci0JU3RyaW5nIGNvbXBsZXRlQmVoaW5kID0gImZpIjsKKwlTdHJpbmcgY29tcGxldGVC
ZWhpbmQgPSAiZmlyIjsKIAlpbnQgY3Vyc29yTG9jYXRpb24gPSBzdHIubGFzdEluZGV4T2YoY29t
cGxldGVCZWhpbmQpICsgY29tcGxldGVCZWhpbmQubGVuZ3RoKCk7CiAJdGhpcy53b3JraW5nQ29w
aWVzWzBdLmNvZGVDb21wbGV0ZShjdXJzb3JMb2NhdGlvbiwgcmVxdWVzdG9yLCB0aGlzLndjT3du
ZXIpOwpAQCAtNzMsNSArNzMsNSBAQAogCQkJImludGVyZmFjZSBYIGV4dGVuZHMgRm9vIHtcbiIg
KwogCQkJIiAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nIFtdIGFyZ3MpIHtcbiIgKwot
CQkJIiAgICAgIEZvbyBmID0gKGZpcnN0LCBzZWNvbmQpIC0+IFN5c3RlbS5vdXQucHJpbnQoZmkp
O1xuIiArCisJCQkiICAgICAgRm9vIGYgPSAoZmlyc3QsIHNlY29uZCkgLT4gU3lzdGVtLm91dC5w
cmludChmaXIpO1xuIiArCiAJCQkiICB9XG4iICsKIAkJCSJ9XG4iKTsKQEAgLTgwLDUgKzgwLDUg
QEAKIAlyZXF1ZXN0b3IuYWxsb3dBbGxSZXF1aXJlZFByb3Bvc2FscygpOwogCVN0cmluZyBzdHIg
PSB0aGlzLndvcmtpbmdDb3BpZXNbMF0uZ2V0U291cmNlKCk7Ci0JU3RyaW5nIGNvbXBsZXRlQmVo
aW5kID0gImZpIjsKKwlTdHJpbmcgY29tcGxldGVCZWhpbmQgPSAiZmlyIjsKIAlpbnQgY3Vyc29y
TG9jYXRpb24gPSBzdHIubGFzdEluZGV4T2YoY29tcGxldGVCZWhpbmQpICsgY29tcGxldGVCZWhp
bmQubGVuZ3RoKCk7CiAJdGhpcy53b3JraW5nQ29waWVzWzBdLmNvZGVDb21wbGV0ZShjdXJzb3JM
b2NhdGlvbiwgcmVxdWVzdG9yLCB0aGlzLndjT3duZXIpOwpAQCAtMTA0LDUgKzEwNCw1IEBACiAJ
CQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKwogCQkJIgkJ
Z29vICgoZmlyc3QsIHNlY29uZCkgLT4ge1xuIiArCi0JCQkiCQkJcmV0dXJuICh4eXosIHBxcikg
LT4gZmlyc3QuXG4iICsKKwkJCSIJCQlyZXR1cm4gKHh5eiwgcHFyKSAtPiBmaXJzdC5jXG4iICsK
IAkJCSIJCX0pO1xuIiArCiAJCQkiCX1cbiIgKwpAQCAtMTEyLDIwICsxMTIsMjQgQEAKIAlyZXF1
ZXN0b3IuYWxsb3dBbGxSZXF1aXJlZFByb3Bvc2FscygpOwogCVN0cmluZyBzdHIgPSB0aGlzLndv
cmtpbmdDb3BpZXNbMF0uZ2V0U291cmNlKCk7Ci0JU3RyaW5nIGNvbXBsZXRlQmVoaW5kID0gImZp
cnN0LiI7CisJU3RyaW5nIGNvbXBsZXRlQmVoaW5kID0gImZpcnN0LmMiOwogCWludCBjdXJzb3JM
b2NhdGlvbiA9IHN0ci5sYXN0SW5kZXhPZihjb21wbGV0ZUJlaGluZCkgKyBjb21wbGV0ZUJlaGlu
ZC5sZW5ndGgoKTsKIAl0aGlzLndvcmtpbmdDb3BpZXNbMF0uY29kZUNvbXBsZXRlKGN1cnNvckxv
Y2F0aW9uLCByZXF1ZXN0b3IsIHRoaXMud2NPd25lcik7CiAJYXNzZXJ0UmVzdWx0cygKKwkJCSJD
QVNFX0lOU0VOU0lUSVZFX09SREVSW0ZJRUxEX1JFRl17Q0FTRV9JTlNFTlNJVElWRV9PUkRFUiwg
TGphdmEubGFuZy5TdHJpbmc7LCBMamF2YS51dGlsLkNvbXBhcmF0b3I8TGphdmEubGFuZy5TdHJp
bmc7PjssIENBU0VfSU5TRU5TSVRJVkVfT1JERVIsIG51bGwsIDE0fVxuIiArCisJCQkiY29weVZh
bHVlT2ZbTUVUSE9EX1JFRl17Y29weVZhbHVlT2YoKSwgTGphdmEubGFuZy5TdHJpbmc7LCAoW0Mp
TGphdmEubGFuZy5TdHJpbmc7LCBjb3B5VmFsdWVPZiwgKGFyZzApLCAyNH1cbiIgKworCQkJImNv
cHlWYWx1ZU9mW01FVEhPRF9SRUZde2NvcHlWYWx1ZU9mKCksIExqYXZhLmxhbmcuU3RyaW5nOywg
KFtDSUkpTGphdmEubGFuZy5TdHJpbmc7LCBjb3B5VmFsdWVPZiwgKGFyZzAsIGFyZzEsIGFyZzIp
LCAyNH1cbiIgKworCQkJImNoYXJBdFtNRVRIT0RfUkVGXXtjaGFyQXQoKSwgTGphdmEubGFuZy5T
dHJpbmc7LCAoSSlDLCBjaGFyQXQsIChhcmcwKSwgMzV9XG4iICsKKwkJCSJjaGFyc1tNRVRIT0Rf
UkVGXXtjaGFycygpLCBMamF2YS5sYW5nLkNoYXJTZXF1ZW5jZTssICgpTGphdmEudXRpbC5zdHJl
YW0uSW50U3RyZWFtOywgY2hhcnMsIG51bGwsIDM1fVxuIiArCiAJCQkiY2xvbmVbTUVUSE9EX1JF
Rl17Y2xvbmUoKSwgTGphdmEubGFuZy5PYmplY3Q7LCAoKUxqYXZhLmxhbmcuT2JqZWN0OywgY2xv
bmUsIG51bGwsIDM1fVxuIiArCi0JCQkiZXF1YWxzW01FVEhPRF9SRUZde2VxdWFscygpLCBMamF2
YS5sYW5nLk9iamVjdDssIChMamF2YS5sYW5nLk9iamVjdDspWiwgZXF1YWxzLCAob2JqKSwgMzV9
XG4iICsKLQkJCSJmaW5hbGl6ZVtNRVRIT0RfUkVGXXtmaW5hbGl6ZSgpLCBMamF2YS5sYW5nLk9i
amVjdDssICgpViwgZmluYWxpemUsIG51bGwsIDM1fVxuIiArCi0JCQkiZ2V0Q2xhc3NbTUVUSE9E
X1JFRl17Z2V0Q2xhc3MoKSwgTGphdmEubGFuZy5PYmplY3Q7LCAoKUxqYXZhLmxhbmcuQ2xhc3M8
K0xqYXZhLmxhbmcuT2JqZWN0Oz47LCBnZXRDbGFzcywgbnVsbCwgMzV9XG4iICsKLQkJCSJoYXNo
Q29kZVtNRVRIT0RfUkVGXXtoYXNoQ29kZSgpLCBMamF2YS5sYW5nLk9iamVjdDssICgpSSwgaGFz
aENvZGUsIG51bGwsIDM1fVxuIiArCi0JCQkibGVuZ3RoW01FVEhPRF9SRUZde2xlbmd0aCgpLCBM
amF2YS5sYW5nLlN0cmluZzssICgpSSwgbGVuZ3RoLCBudWxsLCAzNX1cbiIgKwotCQkJIm5vdGlm
eVtNRVRIT0RfUkVGXXtub3RpZnkoKSwgTGphdmEubGFuZy5PYmplY3Q7LCAoKVYsIG5vdGlmeSwg
bnVsbCwgMzV9XG4iICsKLQkJCSJub3RpZnlBbGxbTUVUSE9EX1JFRl17bm90aWZ5QWxsKCksIExq
YXZhLmxhbmcuT2JqZWN0OywgKClWLCBub3RpZnlBbGwsIG51bGwsIDM1fVxuIiArCi0JCQkidG9T
dHJpbmdbTUVUSE9EX1JFRl17dG9TdHJpbmcoKSwgTGphdmEubGFuZy5PYmplY3Q7LCAoKUxqYXZh
LmxhbmcuU3RyaW5nOywgdG9TdHJpbmcsIG51bGwsIDM1fVxuIiArCi0JCQkid2FpdFtNRVRIT0Rf
UkVGXXt3YWl0KCksIExqYXZhLmxhbmcuT2JqZWN0OywgKClWLCB3YWl0LCBudWxsLCAzNX1cbiIg
KwotCQkJIndhaXRbTUVUSE9EX1JFRl17d2FpdCgpLCBMamF2YS5sYW5nLk9iamVjdDssIChKKVYs
IHdhaXQsIChtaWxsaXMpLCAzNX1cbiIgKwotCQkJIndhaXRbTUVUSE9EX1JFRl17d2FpdCgpLCBM
amF2YS5sYW5nLk9iamVjdDssIChKSSlWLCB3YWl0LCAobWlsbGlzLCBuYW5vcyksIDM1fSIsCisJ
CQkiY29kZVBvaW50QXRbTUVUSE9EX1JFRl17Y29kZVBvaW50QXQoKSwgTGphdmEubGFuZy5TdHJp
bmc7LCAoSSlJLCBjb2RlUG9pbnRBdCwgKGFyZzApLCAzNX1cbiIgKworCQkJImNvZGVQb2ludEJl
Zm9yZVtNRVRIT0RfUkVGXXtjb2RlUG9pbnRCZWZvcmUoKSwgTGphdmEubGFuZy5TdHJpbmc7LCAo
SSlJLCBjb2RlUG9pbnRCZWZvcmUsIChhcmcwKSwgMzV9XG4iICsKKwkJCSJjb2RlUG9pbnRDb3Vu
dFtNRVRIT0RfUkVGXXtjb2RlUG9pbnRDb3VudCgpLCBMamF2YS5sYW5nLlN0cmluZzssIChJSSlJ
LCBjb2RlUG9pbnRDb3VudCwgKGFyZzAsIGFyZzEpLCAzNX1cbiIgKworCQkJImNvZGVQb2ludHNb
TUVUSE9EX1JFRl17Y29kZVBvaW50cygpLCBMamF2YS5sYW5nLkNoYXJTZXF1ZW5jZTssICgpTGph
dmEudXRpbC5zdHJlYW0uSW50U3RyZWFtOywgY29kZVBvaW50cywgbnVsbCwgMzV9XG4iICsKKwkJ
CSJjb21wYXJlVG9bTUVUSE9EX1JFRl17Y29tcGFyZVRvKCksIExqYXZhLmxhbmcuU3RyaW5nOywg
KExqYXZhLmxhbmcuU3RyaW5nOylJLCBjb21wYXJlVG8sIChhcmcwKSwgMzV9XG4iICsKKwkJCSJj
b21wYXJlVG9JZ25vcmVDYXNlW01FVEhPRF9SRUZde2NvbXBhcmVUb0lnbm9yZUNhc2UoKSwgTGph
dmEubGFuZy5TdHJpbmc7LCAoTGphdmEubGFuZy5TdHJpbmc7KUksIGNvbXBhcmVUb0lnbm9yZUNh
c2UsIChhcmcwKSwgMzV9XG4iICsKKwkJCSJjb25jYXRbTUVUSE9EX1JFRl17Y29uY2F0KCksIExq
YXZhLmxhbmcuU3RyaW5nOywgKExqYXZhLmxhbmcuU3RyaW5nOylMamF2YS5sYW5nLlN0cmluZzss
IGNvbmNhdCwgKGFyZzApLCAzNX1cbiIgKworCQkJImNvbnRhaW5zW01FVEhPRF9SRUZde2NvbnRh
aW5zKCksIExqYXZhLmxhbmcuU3RyaW5nOywgKExqYXZhLmxhbmcuQ2hhclNlcXVlbmNlOylaLCBj
b250YWlucywgKGFyZzApLCAzNX1cbiIgKworCQkJImNvbnRlbnRFcXVhbHNbTUVUSE9EX1JFRl17
Y29udGVudEVxdWFscygpLCBMamF2YS5sYW5nLlN0cmluZzssIChMamF2YS5sYW5nLkNoYXJTZXF1
ZW5jZTspWiwgY29udGVudEVxdWFscywgKGFyZzApLCAzNX1cbiIgKworCQkJImNvbnRlbnRFcXVh
bHNbTUVUSE9EX1JFRl17Y29udGVudEVxdWFscygpLCBMamF2YS5sYW5nLlN0cmluZzssIChMamF2
YS5sYW5nLlN0cmluZ0J1ZmZlcjspWiwgY29udGVudEVxdWFscywgKGFyZzApLCAzNX0iLAogCQkJ
cmVxdWVzdG9yLmdldFJlc3VsdHMoKSk7CiB9CkBAIC0zNjUsNSArMzY5LDUgQEAKIAkJCSJlcXVh
bHNbTUVUSE9EX1JFRl17ZXF1YWxzKCksIExqYXZhLmxhbmcuT2JqZWN0OywgKExqYXZhLmxhbmcu
T2JqZWN0OylaLCBlcXVhbHMsIChvYmopLCAzNX1cbiIgKwogCQkJImZpbmFsaXplW01FVEhPRF9S
RUZde2ZpbmFsaXplKCksIExqYXZhLmxhbmcuT2JqZWN0OywgKClWLCBmaW5hbGl6ZSwgbnVsbCwg
MzV9XG4iICsKLQkJCSJnZXRDbGFzc1tNRVRIT0RfUkVGXXtnZXRDbGFzcygpLCBMamF2YS5sYW5n
Lk9iamVjdDssICgpTGphdmEubGFuZy5DbGFzczwrTGphdmEubGFuZy5PYmplY3Q7PjssIGdldENs
YXNzLCBudWxsLCAzNX1cbiIgKworCQkJImdldENsYXNzW01FVEhPRF9SRUZde2dldENsYXNzKCks
IExqYXZhLmxhbmcuT2JqZWN0OywgKClMamF2YS5sYW5nLkNsYXNzPCo+OywgZ2V0Q2xhc3MsIG51
bGwsIDM1fVxuIiArCiAJCQkiaGFzaENvZGVbTUVUSE9EX1JFRl17aGFzaENvZGUoKSwgTGphdmEu
bGFuZy5PYmplY3Q7LCAoKUksIGhhc2hDb2RlLCBudWxsLCAzNX1cbiIgKwogCQkJIm5vdGlmeVtN
RVRIT0RfUkVGXXtub3RpZnkoKSwgTGphdmEubGFuZy5PYmplY3Q7LCAoKVYsIG5vdGlmeSwgbnVs
bCwgMzV9XG4iICsKQEAgLTQ4MCw1ICs0ODQsNSBAQAogCQkJIiAgICAgICBpbnQgW10gYXJyYXlP
ZkludHMgPSBudWxsO1xuIiArCiAJCQkiCQlJIGkgPSAoKSAtPiB7XG4iICsKLQkJCSIgICAgICAg
ICAgIHJldHVybiBhcnJheVxuIiArCisJCQkiICAgICAgICAgICByZXR1cm4gYXJyYXlPXG4iICsK
IAkJCSIJCX07XG4iICsKIAkJCSIJfVxuIiArCkBAIC00ODgsOSArNDkyLDkgQEAKIAlyZXF1ZXN0
b3IuYWxsb3dBbGxSZXF1aXJlZFByb3Bvc2FscygpOwogCVN0cmluZyBzdHIgPSB0aGlzLndvcmtp
bmdDb3BpZXNbMF0uZ2V0U291cmNlKCk7Ci0JU3RyaW5nIGNvbXBsZXRlQmVoaW5kID0gImFycmF5
IjsKKwlTdHJpbmcgY29tcGxldGVCZWhpbmQgPSAiYXJyYXlPIjsKIAlpbnQgY3Vyc29yTG9jYXRp
b24gPSBzdHIubGFzdEluZGV4T2YoY29tcGxldGVCZWhpbmQpICsgY29tcGxldGVCZWhpbmQubGVu
Z3RoKCk7CiAJdGhpcy53b3JraW5nQ29waWVzWzBdLmNvZGVDb21wbGV0ZShjdXJzb3JMb2NhdGlv
biwgcmVxdWVzdG9yLCB0aGlzLndjT3duZXIpOwotCWFzc2VydFJlc3VsdHMoImFycmF5T2ZTdHJp
bmdzW0xPQ0FMX1ZBUklBQkxFX1JFRl17YXJyYXlPZlN0cmluZ3MsIG51bGwsIFtMamF2YS5sYW5n
LlN0cmluZzssIG51bGwsIG51bGwsIGFycmF5T2ZTdHJpbmdzLCBudWxsLCBbMTY4LCAxNzNdLCAy
N31cbiIgKwotCQkJCQkiYXJyYXlPZkludHNbTE9DQUxfVkFSSUFCTEVfUkVGXXthcnJheU9mSW50
cywgbnVsbCwgW0ksIG51bGwsIG51bGwsIGFycmF5T2ZJbnRzLCBudWxsLCBbMTY4LCAxNzNdLCA1
N30iLCByZXF1ZXN0b3IuZ2V0UmVzdWx0cygpKTsKKwlhc3NlcnRSZXN1bHRzKCJhcnJheU9mU3Ry
aW5nc1tMT0NBTF9WQVJJQUJMRV9SRUZde2FycmF5T2ZTdHJpbmdzLCBudWxsLCBbTGphdmEubGFu
Zy5TdHJpbmc7LCBudWxsLCBudWxsLCBhcnJheU9mU3RyaW5ncywgbnVsbCwgWzE2OCwgMTc0XSwg
Mjd9XG4iICsKKwkJCQkJImFycmF5T2ZJbnRzW0xPQ0FMX1ZBUklBQkxFX1JFRl17YXJyYXlPZklu
dHMsIG51bGwsIFtJLCBudWxsLCBudWxsLCBhcnJheU9mSW50cywgbnVsbCwgWzE2OCwgMTc0XSwg
NTd9IiwgcmVxdWVzdG9yLmdldFJlc3VsdHMoKSk7CiB9CiAvLyBodHRwczovL2J1Z3MuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDIyOTAxLCBbMS44XVtjb2RlIGFzc2lzdF0gQ29k
ZSBhc3Npc3RhbnQgc2Vuc2l0aXZlIHRvIHNjb3BlLnJlZmVyZW5jZUNvbnRleHQgdHlwZSBpZGVu
dGl0eS4KQEAgLTY4MCw2ICs2ODQsNiBAQAogCQkJImNvbXBsZXRpb24gdG9rZW49XCJcIlxuIiAr
CiAJCQkiY29tcGxldGlvbiB0b2tlbiBraW5kPVRPS0VOX0tJTkRfTkFNRVxuIiArCi0JCQkiZXhw
ZWN0ZWRUeXBlc1NpZ25hdHVyZXM9bnVsbFxuIiArCi0JCQkiZXhwZWN0ZWRUeXBlc0tleXM9bnVs
bFxuIiArCisJCQkiZXhwZWN0ZWRUeXBlc1NpZ25hdHVyZXM9e1osQyxJLEosRixELFtDLExqYXZh
LmxhbmcuU3RyaW5nOyxMamF2YS5sYW5nLk9iamVjdDt9XG4iICsKKwkJCSJleHBlY3RlZFR5cGVz
S2V5cz17WixDLEksSixGLEQsW0MsTGphdmEvbGFuZy9TdHJpbmc7LExqYXZhL2xhbmcvT2JqZWN0
O31cbiIgKwogCQkJImNvbXBsZXRpb24gdG9rZW4gbG9jYXRpb249VU5LTk9XTlxuIiArCiAJCQki
dmlzaWJsZUVsZW1lbnRzPXtcbiIgKwpAQCAtNzAyLDUgKzcwNiw1IEBACiAJCQkiCXB1YmxpYyBz
dGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKwogCQkJIgkJZ29vKChTdHJpbmdQ
YXJhbWV0ZXIpIC0+IHtcbiIgKwotCQkJIgkJCVN0clxuIiArCisJCQkiCQkJU3RyaVxuIiArCiAJ
CQkiCQl9KTtcbiIgKwogCQkJIgl9IFxuIiArCkBAIC03MTAsOSArNzE0LDIxIEBACiAJcmVxdWVz
dG9yLmFsbG93QWxsUmVxdWlyZWRQcm9wb3NhbHMoKTsKIAlTdHJpbmcgc3RyID0gdGhpcy53b3Jr
aW5nQ29waWVzWzBdLmdldFNvdXJjZSgpOwotCVN0cmluZyBjb21wbGV0ZUJlaGluZCA9ICJTdHIi
OworCVN0cmluZyBjb21wbGV0ZUJlaGluZCA9ICJTdHJpIjsKIAlpbnQgY3Vyc29yTG9jYXRpb24g
PSBzdHIubGFzdEluZGV4T2YoY29tcGxldGVCZWhpbmQpICsgY29tcGxldGVCZWhpbmQubGVuZ3Ro
KCk7CiAJdGhpcy53b3JraW5nQ29waWVzWzBdLmNvZGVDb21wbGV0ZShjdXJzb3JMb2NhdGlvbiwg
cmVxdWVzdG9yLCB0aGlzLndjT3duZXIpOwotCWFzc2VydFJlc3VsdHMoIlN0cmluZ1tUWVBFX1JF
Rl17U3RyaW5nLCBqYXZhLmxhbmcsIExqYXZhLmxhbmcuU3RyaW5nOywgbnVsbCwgbnVsbCwgbnVs
bCwgbnVsbCwgWzE1NSwgMTU4XSwgMjd9XG4iICsKLSAgICAgICAgICAgICAgICAgICJTdHJpbmdQ
YXJhbWV0ZXJbTE9DQUxfVkFSSUFCTEVfUkVGXXtTdHJpbmdQYXJhbWV0ZXIsIG51bGwsIExYOywg
bnVsbCwgbnVsbCwgU3RyaW5nUGFyYW1ldGVyLCBudWxsLCBbMTU1LCAxNThdLCAyN30iLCByZXF1
ZXN0b3IuZ2V0UmVzdWx0cygpKTsKKwlhc3NlcnRSZXN1bHRzKCJTdHJpbmdCdWZmZXJJbnB1dFN0
cmVhbVtUWVBFX1JFRl17amF2YS5pby5TdHJpbmdCdWZmZXJJbnB1dFN0cmVhbSwgamF2YS5pbywg
TGphdmEuaW8uU3RyaW5nQnVmZmVySW5wdXRTdHJlYW07LCBudWxsLCBudWxsLCBudWxsLCBudWxs
LCBbMTU1LCAxNTldLCAyNH1cbiIgKworCQkJIlN0cmluZ0NoYXJCdWZmZXJbVFlQRV9SRUZde2ph
dmEubmlvLlN0cmluZ0NoYXJCdWZmZXIsIGphdmEubmlvLCBMamF2YS5uaW8uU3RyaW5nQ2hhckJ1
ZmZlcjssIG51bGwsIG51bGwsIG51bGwsIG51bGwsIFsxNTUsIDE1OV0sIDI0fVxuIiArCisJCQki
U3RyaW5nQ2hhcmFjdGVySXRlcmF0b3JbVFlQRV9SRUZde2phdmEudGV4dC5TdHJpbmdDaGFyYWN0
ZXJJdGVyYXRvciwgamF2YS50ZXh0LCBMamF2YS50ZXh0LlN0cmluZ0NoYXJhY3Rlckl0ZXJhdG9y
OywgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgWzE1NSwgMTU5XSwgMjR9XG4iICsKKwkJCSJTdHJp
bmdKb2luZXJbVFlQRV9SRUZde2phdmEudXRpbC5TdHJpbmdKb2luZXIsIGphdmEudXRpbCwgTGph
dmEudXRpbC5TdHJpbmdKb2luZXI7LCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBbMTU1LCAxNTld
LCAyNH1cbiIgKworCQkJIlN0cmluZ1JlYWRlcltUWVBFX1JFRl17amF2YS5pby5TdHJpbmdSZWFk
ZXIsIGphdmEuaW8sIExqYXZhLmlvLlN0cmluZ1JlYWRlcjssIG51bGwsIG51bGwsIG51bGwsIG51
bGwsIFsxNTUsIDE1OV0sIDI0fVxuIiArCisJCQkiU3RyaW5nVG9rZW5pemVyW1RZUEVfUkVGXXtq
YXZhLnV0aWwuU3RyaW5nVG9rZW5pemVyLCBqYXZhLnV0aWwsIExqYXZhLnV0aWwuU3RyaW5nVG9r
ZW5pemVyOywgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgWzE1NSwgMTU5XSwgMjR9XG4iICsKKwkJ
CSJTdHJpbmdXcml0ZXJbVFlQRV9SRUZde2phdmEuaW8uU3RyaW5nV3JpdGVyLCBqYXZhLmlvLCBM
amF2YS5pby5TdHJpbmdXcml0ZXI7LCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBbMTU1LCAxNTld
LCAyNH1cbiIgKworCQkJIlN0cmljdE1hdGhbVFlQRV9SRUZde1N0cmljdE1hdGgsIGphdmEubGFu
ZywgTGphdmEubGFuZy5TdHJpY3RNYXRoOywgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgWzE1NSwg
MTU5XSwgMjd9XG4iICsKKwkJCSJTdHJpbmdbVFlQRV9SRUZde1N0cmluZywgamF2YS5sYW5nLCBM
amF2YS5sYW5nLlN0cmluZzssIG51bGwsIG51bGwsIG51bGwsIG51bGwsIFsxNTUsIDE1OV0sIDI3
fVxuIiArCisJCQkiU3RyaW5nQnVmZmVyW1RZUEVfUkVGXXtTdHJpbmdCdWZmZXIsIGphdmEubGFu
ZywgTGphdmEubGFuZy5TdHJpbmdCdWZmZXI7LCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBbMTU1
LCAxNTldLCAyN31cbiIgKworCQkJIlN0cmluZ0J1aWxkZXJbVFlQRV9SRUZde1N0cmluZ0J1aWxk
ZXIsIGphdmEubGFuZywgTGphdmEubGFuZy5TdHJpbmdCdWlsZGVyOywgbnVsbCwgbnVsbCwgbnVs
bCwgbnVsbCwgWzE1NSwgMTU5XSwgMjd9XG4iICsKKwkJCSJTdHJpbmdDb2RpbmdbVFlQRV9SRUZd
e1N0cmluZ0NvZGluZywgamF2YS5sYW5nLCBMamF2YS5sYW5nLlN0cmluZ0NvZGluZzssIG51bGws
IG51bGwsIG51bGwsIG51bGwsIFsxNTUsIDE1OV0sIDI3fVxuIiArCisJCQkiU3RyaW5nSW5kZXhP
dXRPZkJvdW5kc0V4Y2VwdGlvbltUWVBFX1JFRl17U3RyaW5nSW5kZXhPdXRPZkJvdW5kc0V4Y2Vw
dGlvbiwgamF2YS5sYW5nLCBMamF2YS5sYW5nLlN0cmluZ0luZGV4T3V0T2ZCb3VuZHNFeGNlcHRp
b247LCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBbMTU1LCAxNTldLCAyN31cbiIgKworCQkJIlN0
cmluZ1BhcmFtZXRlcltMT0NBTF9WQVJJQUJMRV9SRUZde1N0cmluZ1BhcmFtZXRlciwgbnVsbCwg
TFg7LCBudWxsLCBudWxsLCBTdHJpbmdQYXJhbWV0ZXIsIG51bGwsIFsxNTUsIDE1OV0sIDI3fSIs
IHJlcXVlc3Rvci5nZXRSZXN1bHRzKCkpOwogfQogcHVibGljIHZvaWQgdGVzdEJyb2tlbk1ldGhv
ZENhbGwoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsgLy8gZW5zdXJlIGNvbXBsZXRpb24g
d29ya3Mgd2hlbiB0aGUgY29udGFpbmluZyBjYWxsIGlzIG5vdCB0ZXJtaW5hdGVkIHByb3Blcmx5
LgpAQCAtNzI4LDUgKzc0NCw1IEBACiAJCQkiCXB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmlu
Z1tdIGFyZ3MpIHtcbiIgKwogCQkJIgkJZ29vKChTdHJpbmdQYXJhbWV0ZXIpIC0+IHtcbiIgKwot
CQkJIgkJCVN0clxuIiArCisJCQkiCQkJU3RyaW5nUFxuIiArCiAJCQkiCQl9KVxuIiArCiAJCQki
CX0gXG4iICsKQEAgLTczNiw5ICs3NTIsOCBAQAogCXJlcXVlc3Rvci5hbGxvd0FsbFJlcXVpcmVk
UHJvcG9zYWxzKCk7CiAJU3RyaW5nIHN0ciA9IHRoaXMud29ya2luZ0NvcGllc1swXS5nZXRTb3Vy
Y2UoKTsKLQlTdHJpbmcgY29tcGxldGVCZWhpbmQgPSAiU3RyIjsKKwlTdHJpbmcgY29tcGxldGVC
ZWhpbmQgPSAiU3RyaW5nUCI7CiAJaW50IGN1cnNvckxvY2F0aW9uID0gc3RyLmxhc3RJbmRleE9m
KGNvbXBsZXRlQmVoaW5kKSArIGNvbXBsZXRlQmVoaW5kLmxlbmd0aCgpOwogCXRoaXMud29ya2lu
Z0NvcGllc1swXS5jb2RlQ29tcGxldGUoY3Vyc29yTG9jYXRpb24sIHJlcXVlc3RvciwgdGhpcy53
Y093bmVyKTsKLQlhc3NlcnRSZXN1bHRzKCJTdHJpbmdbVFlQRV9SRUZde1N0cmluZywgamF2YS5s
YW5nLCBMamF2YS5sYW5nLlN0cmluZzssIG51bGwsIG51bGwsIG51bGwsIG51bGwsIFsxNTUsIDE1
OF0sIDI3fVxuIiArCi0gICAgICAgICAgICAgICAgICAiU3RyaW5nUGFyYW1ldGVyW0xPQ0FMX1ZB
UklBQkxFX1JFRl17U3RyaW5nUGFyYW1ldGVyLCBudWxsLCBMWDssIG51bGwsIG51bGwsIFN0cmlu
Z1BhcmFtZXRlciwgbnVsbCwgWzE1NSwgMTU4XSwgMjd9IiwgcmVxdWVzdG9yLmdldFJlc3VsdHMo
KSk7CisJYXNzZXJ0UmVzdWx0cygiU3RyaW5nUGFyYW1ldGVyW0xPQ0FMX1ZBUklBQkxFX1JFRl17
U3RyaW5nUGFyYW1ldGVyLCBudWxsLCBMWDssIG51bGwsIG51bGwsIFN0cmluZ1BhcmFtZXRlciwg
bnVsbCwgWzE1NSwgMTYyXSwgMjd9IiwgcmVxdWVzdG9yLmdldFJlc3VsdHMoKSk7CiB9CiBwdWJs
aWMgdm9pZCB0ZXN0RXhwcmVzc2lvbkJvZHkoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsK
QEAgLTc3Miw1ICs3ODcsNSBAQAogCQkJImZpbmFsaXplW01FVEhPRF9SRUZde2ZpbmFsaXplKCks
IExqYXZhLmxhbmcuT2JqZWN0OywgKClWLCBudWxsLCBudWxsLCBmaW5hbGl6ZSwgbnVsbCwgWzE3
MywgMTczXSwgMzV9XG4iICsKIAkJCSJmb29bTUVUSE9EX1JFRl17Zm9vKCksIExYOywgKClWLCBu
dWxsLCBudWxsLCBmb28sIG51bGwsIFsxNzMsIDE3M10sIDM1fVxuIiArCi0JCQkiZ2V0Q2xhc3Nb
TUVUSE9EX1JFRl17Z2V0Q2xhc3MoKSwgTGphdmEubGFuZy5PYmplY3Q7LCAoKUxqYXZhLmxhbmcu
Q2xhc3M8K0xqYXZhLmxhbmcuT2JqZWN0Oz47LCBudWxsLCBudWxsLCBnZXRDbGFzcywgbnVsbCwg
WzE3MywgMTczXSwgMzV9XG4iICsKKwkJCSJnZXRDbGFzc1tNRVRIT0RfUkVGXXtnZXRDbGFzcygp
LCBMamF2YS5sYW5nLk9iamVjdDssICgpTGphdmEubGFuZy5DbGFzczwqPjssIG51bGwsIG51bGws
IGdldENsYXNzLCBudWxsLCBbMTczLCAxNzNdLCAzNX1cbiIgKwogCQkJImhhc2hDb2RlW01FVEhP
RF9SRUZde2hhc2hDb2RlKCksIExqYXZhLmxhbmcuT2JqZWN0OywgKClJLCBudWxsLCBudWxsLCBo
YXNoQ29kZSwgbnVsbCwgWzE3MywgMTczXSwgMzV9XG4iICsKIAkJCSJub3RpZnlbTUVUSE9EX1JF
Rl17bm90aWZ5KCksIExqYXZhLmxhbmcuT2JqZWN0OywgKClWLCBudWxsLCBudWxsLCBub3RpZnks
IG51bGwsIFsxNzMsIDE3M10sIDM1fVxuIiArCkBAIC04MTEsNSArODI2LDUgQEAKIAkJCSJmaW5h
bGl6ZVtNRVRIT0RfUkVGXXtmaW5hbGl6ZSgpLCBMamF2YS5sYW5nLk9iamVjdDssICgpViwgbnVs
bCwgbnVsbCwgZmluYWxpemUsIG51bGwsIFsxNzMsIDE3M10sIDM1fVxuIiArCiAJCQkiZm9vW01F
VEhPRF9SRUZde2ZvbygpLCBMWDssICgpViwgbnVsbCwgbnVsbCwgZm9vLCBudWxsLCBbMTczLCAx
NzNdLCAzNX1cbiIgKwotCQkJImdldENsYXNzW01FVEhPRF9SRUZde2dldENsYXNzKCksIExqYXZh
LmxhbmcuT2JqZWN0OywgKClMamF2YS5sYW5nLkNsYXNzPCtMamF2YS5sYW5nLk9iamVjdDs+Oywg
bnVsbCwgbnVsbCwgZ2V0Q2xhc3MsIG51bGwsIFsxNzMsIDE3M10sIDM1fVxuIiArCisJCQkiZ2V0
Q2xhc3NbTUVUSE9EX1JFRl17Z2V0Q2xhc3MoKSwgTGphdmEubGFuZy5PYmplY3Q7LCAoKUxqYXZh
LmxhbmcuQ2xhc3M8Kj47LCBudWxsLCBudWxsLCBnZXRDbGFzcywgbnVsbCwgWzE3MywgMTczXSwg
MzV9XG4iICsKIAkJCSJoYXNoQ29kZVtNRVRIT0RfUkVGXXtoYXNoQ29kZSgpLCBMamF2YS5sYW5n
Lk9iamVjdDssICgpSSwgbnVsbCwgbnVsbCwgaGFzaENvZGUsIG51bGwsIFsxNzMsIDE3M10sIDM1
fVxuIiArCiAJCQkibm90aWZ5W01FVEhPRF9SRUZde25vdGlmeSgpLCBMamF2YS5sYW5nLk9iamVj
dDssICgpViwgbnVsbCwgbnVsbCwgbm90aWZ5LCBudWxsLCBbMTczLCAxNzNdLCAzNX1cbiIgKwpA
QCAtODMwLDcgKzg0NSw3IEBACiAJCQkJIn1cbiIgKwogCQkJCSJpbnRlcmZhY2UgQiB7XG4iICsK
LQkJCQkiCXN0YXRpYyBGb28gZiA9IChpbnQgeDUsIGludCB4MikgLT4gdHdcbiIgKworCQkJCSIJ
c3RhdGljIEZvbyBmID0gKGludCB4NSwgaW50IHgyKSAtPiBiYXJcbiIgKwogCQkJCSIJc3RhdGlj
IGludCB4NCA9IDM7XG4iICsKLQkJCQkiICAJc3RhdGljIGludCB0d28gKCkgeyByZXR1cm4gMjsg
fVxuIiArCisJCQkJIiAgCXN0YXRpYyBpbnQgYmFycyAoKSB7IHJldHVybiAyOyB9XG4iICsKIAkJ
CQkifSIpOwogCkBAIC04NDIsMTAgKzg1NywxMCBAQAogCQogCSAgICBTdHJpbmcgc3RyID0gdGhp
cy53b3JraW5nQ29waWVzWzBdLmdldFNvdXJjZSgpOwotCSAgICBTdHJpbmcgY29tcGxldGVCZWhp
bmQgPSAiKGludCB4NSwgaW50IHgyKSAtPiB0dyI7CisJICAgIFN0cmluZyBjb21wbGV0ZUJlaGlu
ZCA9ICIoaW50IHg1LCBpbnQgeDIpIC0+IGJhciI7CiAJICAgIGludCBjdXJzb3JMb2NhdGlvbiA9
IHN0ci5sYXN0SW5kZXhPZihjb21wbGV0ZUJlaGluZCkgKyBjb21wbGV0ZUJlaGluZC5sZW5ndGgo
KTsKIAkgICAgdGhpcy53b3JraW5nQ29waWVzWzBdLmNvZGVDb21wbGV0ZShjdXJzb3JMb2NhdGlv
biwgcmVxdWVzdG9yLCB0aGlzLndjT3duZXIpOwogCSAgICAKIAkgICAgYXNzZXJ0UmVzdWx0cygK
LQkgICAgCSJ0d29bTUVUSE9EX1JFRl17dHdvKCksIExCOywgKClJLCB0d28sIG51bGwsIDI3fSIs
CisJICAgIAkiYmFyc1tNRVRIT0RfUkVGXXtiYXJzKCksIExCOywgKClJLCBiYXJzLCBudWxsLCAy
N30iLAogCSAgICAJcmVxdWVzdG9yLmdldFJlc3VsdHMoKSk7CiB9CmRpZmYgLS1naXQgYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvbW9kZWwvUmVzb2x2ZVRlc3RzMTguamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3Rz
Lm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9SZXNvbHZlVGVzdHMx
OC5qYXZhCmluZGV4IDI4NWU1ZDYuLjUyY2EzMmEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9S
ZXNvbHZlVGVzdHMxOC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVs
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9SZXNvbHZlVGVzdHMxOC5qYXZh
CkBAIC0xLDQgKzEsNCBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAo
YykgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAx
NCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRo
aXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2
YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEu
MApAQCAtNDUsNSArNDUsNSBAQAogCXN1cGVyLnNldFVwU3VpdGUoKTsKIAotCXNldFVwSmF2YVBy
b2plY3QoIlJlc29sdmUiLCAiMS44Iik7CisJc2V0VXBKYXZhUHJvamVjdCgiUmVzb2x2ZSIsICIx
LjgiLCB0cnVlKTsKIAogCXdhaXRVbnRpbEluZGV4ZXNSZWFkeSgpOwpAQCAtNTgyLDUgKzU4Miw1
IEBACiAJYXNzZXJ0RWxlbWVudHNFcXVhbCgKIAkJIlVuZXhwZWN0ZWQgZWxlbWVudHMiLAotCQki
aGFzaENvZGUoKSBbaW4gT2JqZWN0IFtpbiBPYmplY3QuY2xhc3MgW2luIGphdmEubGFuZyBbaW4g
IisgZ2V0RXh0ZXJuYWxQYXRoKCkgKyAiamNsTWluMS44Lmphcl1dXV0iLAorCQkiaGFzaENvZGUo
KSBbaW4gT2JqZWN0IFtpbiBPYmplY3QuY2xhc3MgW2luIGphdmEubGFuZyBbaW4gIisgZ2V0RXh0
ZXJuYWxQYXRoKCkgKyAiamNsRnVsbDEuOC5qYXJdXV1dIiwKIAkJZWxlbWVudHMKIAkpOwpAQCAt
NjA4LDUgKzYwOCw1IEBACiAJYXNzZXJ0RWxlbWVudHNFcXVhbCgKIAkJIlVuZXhwZWN0ZWQgZWxl
bWVudHMiLAotCQkiaGFzaENvZGUoKSBbaW4gT2JqZWN0IFtpbiBPYmplY3QuY2xhc3MgW2luIGph
dmEubGFuZyBbaW4gIisgZ2V0RXh0ZXJuYWxQYXRoKCkgKyAiamNsTWluMS44Lmphcl1dXV0iLAor
CQkiaGFzaENvZGUoKSBbaW4gT2JqZWN0IFtpbiBPYmplY3QuY2xhc3MgW2luIGphdmEubGFuZyBb
aW4gIisgZ2V0RXh0ZXJuYWxQYXRoKCkgKyAiamNsRnVsbDEuOC5qYXJdXV1dIiwKIAkJZWxlbWVu
dHMKIAkpOwpAQCAtMTAwMSw1ICsxMDAxLDUgQEAKIHB1YmxpYyB2b2lkIHRlc3RCdWc0MDgyMzBh
KCkgdGhyb3dzIENvcmVFeGNlcHRpb24gewogCXRyeSB7Ci0JCWNyZWF0ZUphdmFQcm9qZWN0KCJQ
IiwgbmV3IFN0cmluZ1tdIHsic3JjIn0sIG5ldyBTdHJpbmdbXSB7IkpDTDE4X0xJQiJ9LCAiYmlu
IiwgIjEuOCIpOworCQljcmVhdGVKYXZhUHJvamVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7InNyYyJ9
LCBuZXcgU3RyaW5nW10geyJKQ0wxOF9MSUIifSwgImJpbiIsICIxLjgiLCB0cnVlKTsKIAkJU3Ry
aW5nIHNvdXJjZSA9ICJwYWNrYWdlIHA7XG4iICsKIAkJCQkicHVibGljIGNsYXNzIFgge1xuIiAr
CkBAIC0xMDI0LDUgKzEwMjQsNSBAQAogcHVibGljIHZvaWQgdGVzdEJ1ZzQwODIzMGIoKSB0aHJv
d3MgQ29yZUV4Y2VwdGlvbiB7CiAJdHJ5IHsKLQkJY3JlYXRlSmF2YVByb2plY3QoIlAiLCBuZXcg
U3RyaW5nW10geyJzcmMifSwgbmV3IFN0cmluZ1tdIHsiSkNMMThfTElCIn0sICJiaW4iLCAiMS44
Iik7CisJCWNyZWF0ZUphdmFQcm9qZWN0KCJQIiwgbmV3IFN0cmluZ1tdIHsic3JjIn0sIG5ldyBT
dHJpbmdbXSB7IkpDTDE4X0xJQiJ9LCAiYmluIiwgIjEuOCIsIHRydWUpOwogCQlTdHJpbmcgc291
cmNlID0gInBhY2thZ2UgcDtcbiIgKwogCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKQEAgLTEw
NDksNSArMTA0OSw1IEBACiBwdWJsaWMgdm9pZCB0ZXN0QnVnNDA4MjMwYygpIHRocm93cyBDb3Jl
RXhjZXB0aW9uIHsKIAl0cnkgewotCQljcmVhdGVKYXZhUHJvamVjdCgiUCIsIG5ldyBTdHJpbmdb
XSB7InNyYyJ9LCBuZXcgU3RyaW5nW10geyJKQ0wxOF9MSUIifSwgImJpbiIsICIxLjgiKTsKKwkJ
Y3JlYXRlSmF2YVByb2plY3QoIlAiLCBuZXcgU3RyaW5nW10geyJzcmMifSwgbmV3IFN0cmluZ1td
IHsiSkNMMThfTElCIn0sICJiaW4iLCAiMS44IiwgdHJ1ZSk7CiAJCVN0cmluZyBzb3VyY2UgPSAi
cGFja2FnZSBwO1xuIiArCiAJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwpAQCAtMTA3NCw1ICsx
MDc0LDUgQEAKIHB1YmxpYyB2b2lkIHRlc3RCdWc0MDgyMzBkKCkgdGhyb3dzIENvcmVFeGNlcHRp
b24gewogCXRyeSB7Ci0JCWNyZWF0ZUphdmFQcm9qZWN0KCJQIiwgbmV3IFN0cmluZ1tdIHsic3Jj
In0sIG5ldyBTdHJpbmdbXSB7IkpDTDE4X0xJQiJ9LCAiYmluIiwgIjEuOCIpOworCQljcmVhdGVK
YXZhUHJvamVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7InNyYyJ9LCBuZXcgU3RyaW5nW10geyJKQ0wx
OF9MSUIifSwgImJpbiIsICIxLjgiLCB0cnVlKTsKIAkJU3RyaW5nIHNvdXJjZSA9ICJwYWNrYWdl
IHA7XG4iICsKIAkJCQkicHVibGljIGNsYXNzIFgge1xuIiArCkBAIC0xMDk3LDUgKzEwOTcsNSBA
QAogcHVibGljIHZvaWQgdGVzdEJ1ZzQwODIzMGUoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CiAJ
dHJ5IHsKLQkJY3JlYXRlSmF2YVByb2plY3QoIlAiLCBuZXcgU3RyaW5nW10geyJzcmMifSwgbmV3
IFN0cmluZ1tdIHsiSkNMMThfTElCIn0sICJiaW4iLCAiMS44Iik7CisJCWNyZWF0ZUphdmFQcm9q
ZWN0KCJQIiwgbmV3IFN0cmluZ1tdIHsic3JjIn0sIG5ldyBTdHJpbmdbXSB7IkpDTDE4X0xJQiJ9
LCAiYmluIiwgIjEuOCIsIHRydWUpOwogCQlTdHJpbmcgc291cmNlID0gInBhY2thZ2UgcDtcbiIg
KwogCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKQEAgLTExMjAsNSArMTEyMCw1IEBACiBwdWJs
aWMgdm9pZCB0ZXN0QnVnNDA4MjMwZigpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKIAl0cnkgewot
CQljcmVhdGVKYXZhUHJvamVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7InNyYyJ9LCBuZXcgU3RyaW5n
W10geyJKQ0wxOF9MSUIifSwgImJpbiIsICIxLjgiKTsKKwkJY3JlYXRlSmF2YVByb2plY3QoIlAi
LCBuZXcgU3RyaW5nW10geyJzcmMifSwgbmV3IFN0cmluZ1tdIHsiSkNMMThfTElCIn0sICJiaW4i
LCAiMS44IiwgdHJ1ZSk7CiAJCVN0cmluZyBzb3VyY2UgPSAicGFja2FnZSBwO1xuIiArCiAJCQkJ
InB1YmxpYyBjbGFzcyBYIHtcbiIgKwpAQCAtMTE0Myw1ICsxMTQzLDUgQEAKIHB1YmxpYyB2b2lk
IHRlc3RCdWc0MDgyMzBnKCkgdGhyb3dzIENvcmVFeGNlcHRpb24gewogCXRyeSB7Ci0JCWNyZWF0
ZUphdmFQcm9qZWN0KCJQIiwgbmV3IFN0cmluZ1tdIHsic3JjIn0sIG5ldyBTdHJpbmdbXSB7IkpD
TDE4X0xJQiJ9LCAiYmluIiwgIjEuOCIpOworCQljcmVhdGVKYXZhUHJvamVjdCgiUCIsIG5ldyBT
dHJpbmdbXSB7InNyYyJ9LCBuZXcgU3RyaW5nW10geyJKQ0wxOF9MSUIifSwgImJpbiIsICIxLjgi
LCB0cnVlKTsKIAkJU3RyaW5nIHNvdXJjZSA9ICJwYWNrYWdlIHA7XG4iICsKIAkJCQkicHVibGlj
IGNsYXNzIFgge1xuIiArCkBAIC0xMTY5LDUgKzExNjksNSBAQAogcHVibGljIHZvaWQgdGVzdEJ1
ZzQwODIzMGgoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CiAJdHJ5IHsKLQkJY3JlYXRlSmF2YVBy
b2plY3QoIlAiLCBuZXcgU3RyaW5nW10geyJzcmMifSwgbmV3IFN0cmluZ1tdIHsiSkNMMThfTElC
In0sICJiaW4iLCAiMS44Iik7CisJCWNyZWF0ZUphdmFQcm9qZWN0KCJQIiwgbmV3IFN0cmluZ1td
IHsic3JjIn0sIG5ldyBTdHJpbmdbXSB7IkpDTDE4X0xJQiJ9LCAiYmluIiwgIjEuOCIsIHRydWUp
OwogCQlTdHJpbmcgc291cmNlID0gInBhY2thZ2UgcDtcbiIgKwogCQkJCSJwdWJsaWMgY2xhc3Mg
WCB7XG4iICsKQEAgLTExOTUsNSArMTE5NSw1IEBACiBwdWJsaWMgdm9pZCB0ZXN0QnVnNDA4MjMw
aSgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKIAl0cnkgewotCQljcmVhdGVKYXZhUHJvamVjdCgi
UCIsIG5ldyBTdHJpbmdbXSB7InNyYyJ9LCBuZXcgU3RyaW5nW10geyJKQ0wxOF9MSUIifSwgImJp
biIsICIxLjgiKTsKKwkJY3JlYXRlSmF2YVByb2plY3QoIlAiLCBuZXcgU3RyaW5nW10geyJzcmMi
fSwgbmV3IFN0cmluZ1tdIHsiSkNMMThfTElCIn0sICJiaW4iLCAiMS44IiwgdHJ1ZSk7CiAJCVN0
cmluZyBzb3VyY2UgPSAicGFja2FnZSBwO1xuIiArCiAJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIg
KwpAQCAtMTIyMSw1ICsxMjIxLDUgQEAKIHB1YmxpYyB2b2lkIHRlc3RCdWc0MDgyMzBqKCkgdGhy
b3dzIENvcmVFeGNlcHRpb24gewogCXRyeSB7Ci0JCWNyZWF0ZUphdmFQcm9qZWN0KCJQIiwgbmV3
IFN0cmluZ1tdIHsic3JjIn0sIG5ldyBTdHJpbmdbXSB7IkpDTDE4X0xJQiJ9LCAiYmluIiwgIjEu
OCIpOworCQljcmVhdGVKYXZhUHJvamVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7InNyYyJ9LCBuZXcg
U3RyaW5nW10geyJKQ0wxOF9MSUIifSwgImJpbiIsICIxLjgiLCB0cnVlKTsKIAkJU3RyaW5nIHNv
dXJjZSA9ICJwYWNrYWdlIHA7XG4iICsKIAkJCQkicHVibGljIGNsYXNzIFgge1xuIiArCkBAIC0x
MjQ3LDUgKzEyNDcsNSBAQAogcHVibGljIHZvaWQgdGVzdEJ1ZzQwODIzMGsoKSB0aHJvd3MgQ29y
ZUV4Y2VwdGlvbiB7CiAJdHJ5IHsKLQkJY3JlYXRlSmF2YVByb2plY3QoIlAiLCBuZXcgU3RyaW5n
W10geyJzcmMifSwgbmV3IFN0cmluZ1tdIHsiSkNMMThfTElCIn0sICJiaW4iLCAiMS44Iik7CisJ
CWNyZWF0ZUphdmFQcm9qZWN0KCJQIiwgbmV3IFN0cmluZ1tdIHsic3JjIn0sIG5ldyBTdHJpbmdb
XSB7IkpDTDE4X0xJQiJ9LCAiYmluIiwgIjEuOCIsIHRydWUpOwogCQlTdHJpbmcgc291cmNlID0g
InBhY2thZ2UgcDtcbiIgKwogCQkJCSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKQEAgLTEyNzMsNSAr
MTI3Myw1IEBACiBwdWJsaWMgdm9pZCB0ZXN0QnVnNDA4MjMwbCgpIHRocm93cyBDb3JlRXhjZXB0
aW9uIHsKIAl0cnkgewotCQljcmVhdGVKYXZhUHJvamVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7InNy
YyJ9LCBuZXcgU3RyaW5nW10geyJKQ0wxOF9MSUIifSwgImJpbiIsICIxLjgiKTsKKwkJY3JlYXRl
SmF2YVByb2plY3QoIlAiLCBuZXcgU3RyaW5nW10geyJzcmMifSwgbmV3IFN0cmluZ1tdIHsiSkNM
MThfTElCIn0sICJiaW4iLCAiMS44IiwgdHJ1ZSk7CiAJCVN0cmluZyBzb3VyY2UgPSAicGFja2Fn
ZSBwO1xuIiArCiAJCQkJInB1YmxpYyBjbGFzcyBYIHtcbiIgKwpAQCAtMTI5OSw1ICsxMjk5LDUg
QEAKIHB1YmxpYyB2b2lkIHRlc3RCdWc0MDgyMzBtKCkgdGhyb3dzIENvcmVFeGNlcHRpb24gewog
CXRyeSB7Ci0JCWNyZWF0ZUphdmFQcm9qZWN0KCJQIiwgbmV3IFN0cmluZ1tdIHsic3JjIn0sIG5l
dyBTdHJpbmdbXSB7IkpDTDE4X0xJQiJ9LCAiYmluIiwgIjEuOCIpOworCQljcmVhdGVKYXZhUHJv
amVjdCgiUCIsIG5ldyBTdHJpbmdbXSB7InNyYyJ9LCBuZXcgU3RyaW5nW10geyJKQ0wxOF9MSUIi
fSwgImJpbiIsICIxLjgiLCB0cnVlKTsKIAkJU3RyaW5nIHNvdXJjZSA9ICJwYWNrYWdlIHA7XG4i
ICsKIAkJCQkicHVibGljIGNsYXNzIFgge1xuIiArCkBAIC0xMzI1LDUgKzEzMjUsNSBAQAogcHVi
bGljIHZvaWQgdGVzdEJ1ZzQwODIzMG4oKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CiAJdHJ5IHsK
LQkJY3JlYXRlSmF2YVByb2plY3QoIlAiLCBuZXcgU3RyaW5nW10geyJzcmMifSwgbmV3IFN0cmlu
Z1tdIHsiSkNMMThfTElCIn0sICJiaW4iLCAiMS44Iik7CisJCWNyZWF0ZUphdmFQcm9qZWN0KCJQ
IiwgbmV3IFN0cmluZ1tdIHsic3JjIn0sIG5ldyBTdHJpbmdbXSB7IkpDTDE4X0xJQiJ9LCAiYmlu
IiwgIjEuOCIsIHRydWUpOwogCQlTdHJpbmcgc291cmNlID0gInBhY2thZ2UgcDtcbiIgKwogCQkJ
CSJwdWJsaWMgY2xhc3MgWCB7XG4iICsKQEAgLTE1NjIsNSArMTU2Miw1IEBACiAJYXNzZXJ0RWxl
bWVudHNFcXVhbCgKIAkJIlVuZXhwZWN0ZWQgZWxlbWVudHMiLAotCQkibGVuZ3RoKCkgW2luIFN0
cmluZyBbaW4gU3RyaW5nLmNsYXNzIFtpbiBqYXZhLmxhbmcgW2luICIrIGdldEV4dGVybmFsUGF0
aCgpICsgImpjbE1pbjEuOC5qYXJdXV1dIiwKKwkJImxlbmd0aCgpIFtpbiBTdHJpbmcgW2luIFN0
cmluZy5jbGFzcyBbaW4gamF2YS5sYW5nIFtpbiAiKyBnZXRFeHRlcm5hbFBhdGgoKSArICJqY2xG
dWxsMS44Lmphcl1dXV0iLAogCQllbGVtZW50cwogCSk7
</data>

          </attachment>
      

    </bug>

</bugzilla>