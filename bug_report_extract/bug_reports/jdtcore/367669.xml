<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>367669</bug_id>
          
          <creation_ts>2011-12-30 13:51:00 -0500</creation_ts>
          <short_desc>IAE during setRawClasspath(..) due to missing link to external</short_desc>
          <delta_ts>2013-03-28 03:00:38 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>Platform</product>
          <component>Resources</component>
          <version>3.8</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.8 RC2</target_milestone>
          <dependson>244315</dependson>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Stephan Herrmann">stephan.herrmann</reporter>
          <assigned_to name="Szymon Brandys">Szymon.Brandys</assigned_to>
          <cc>andrew.eisenberg</cc>
    
    <cc>daniel_megert</cc>
    
    <cc>jarthana</cc>
    
    <cc>john_arthorne</cc>
    
    <cc>kdevolder</cc>
    
    <cc>markus_keller</cc>
    
    <cc>satyam.kandula</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stefan.schedl</cc>
    
    <cc>Szymon.Brandys</cc>
    
    <cc>szymon.ptaszkiewicz</cc>
          
          <votes>1</votes>

      

      

      <flag name="review"
          id="51133"
          type_id="1"
          status="+"
          setter="szymon.ptaszkiewicz"
    />
    <flag name="review"
          id="51137"
          type_id="1"
          status="+"
          setter="john_arthorne"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2045109</commentid>
    <comment_count>0</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-12-30 13:51:25 -0500</bug_when>
    <thetext>In the Object Teams tests I&apos;m intermittently seeing the 
following exception:

java.lang.IllegalArgumentException: Element not found: /.org.eclipse.jdt.core.external.folders/.link15.
	at org.eclipse.core.internal.watson.ElementTree.elementNotFound(ElementTree.java:256)
	at org.eclipse.core.internal.watson.ElementTree.createElement(ElementTree.java:184)
	at org.eclipse.core.internal.resources.Workspace.createResource(Workspace.java:1369)
	at org.eclipse.core.internal.resources.Workspace.createResource(Workspace.java:1322)
	at org.eclipse.core.internal.localstore.RefreshLocalVisitor.createResource(RefreshLocalVisitor.java:80)
	at org.eclipse.core.internal.localstore.RefreshLocalAliasVisitor.createResource(RefreshLocalAliasVisitor.java:38)
	at org.eclipse.core.internal.localstore.RefreshLocalVisitor.synchronizeExistence(RefreshLocalVisitor.java:219)
	at org.eclipse.core.internal.localstore.RefreshLocalVisitor.visit(RefreshLocalVisitor.java:293)
	at org.eclipse.core.internal.localstore.UnifiedTree.accept(UnifiedTree.java:110)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.refreshResource(FileSystemResourceManager.java:920)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.refresh(FileSystemResourceManager.java:904)
	at org.eclipse.core.internal.resources.Resource.refreshLocal(Resource.java:1694)
	at org.eclipse.core.internal.resources.Resource.createLink(Resource.java:711)
	at org.eclipse.core.internal.resources.Resource.createLink(Resource.java:647)
	at org.eclipse.jdt.internal.core.ExternalFoldersManager.createLinkFolder(ExternalFoldersManager.java:153)
	at org.eclipse.jdt.internal.core.ExternalFoldersManager.createLinkFolder(ExternalFoldersManager.java:145)
	at org.eclipse.jdt.internal.core.ExternalFolderChange.updateExternalFoldersIfNecessary(ExternalFolderChange.java:48)
	at org.eclipse.jdt.internal.core.ChangeClasspathOperation.classpathChanged(ChangeClasspathOperation.java:62)
	at org.eclipse.jdt.internal.core.SetClasspathOperation.executeOperation(SetClasspathOperation.java:74)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2344)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:793)
	at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(JavaProject.java:3147)
	at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(JavaProject.java:3109)
	at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(JavaProject.java:3162)


I suspect that the missing linked resource corresponds to a 
classpath container. The container initializer uses a path obtained
using these steps:

installDirectory = bundle.getEntry(&quot;/&quot;) 
  -&gt; yields s.t. like bundleentry://537.fwk23545827/
FileLocator.toFileURL(installDirectory).getPath()
  -&gt; yields an absolute path into the area at
     configuration/org.eclipse.osgi/bundles/537/2/.cp/

At a closer look the above scheme is more complicated than
needed and I&apos;m hoping to work around the issue by an easier
scheme. Still the IAE looks suspicious to me.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2045176</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-12-31 11:29:01 -0500</bug_when>
    <thetext>For an occurrence in regular JDT tests see
 http://download.eclipse.org/eclipse/downloads/drops/I20111230-0735/testresults/html/org.eclipse.jdt.core.tests.model_macosx.cocoa.x86_5.0.html


For investigation please use the following stack trace (the OT variant
has slightly different line numbers in JavaProject):

Element not found: /.org.eclipse.jdt.core.external.folders/.link13.

java.lang.IllegalArgumentException: Element not found: /.org.eclipse.jdt.core.external.folders/.link13.
at org.eclipse.core.internal.watson.ElementTree.elementNotFound(ElementTree.java:256)
at org.eclipse.core.internal.watson.ElementTree.createElement(ElementTree.java:184)
at org.eclipse.core.internal.resources.Workspace.createResource(Workspace.java:1369)
at org.eclipse.core.internal.resources.Workspace.createResource(Workspace.java:1322)
at org.eclipse.core.internal.localstore.RefreshLocalVisitor.createResource(RefreshLocalVisitor.java:80)
at org.eclipse.core.internal.localstore.RefreshLocalAliasVisitor.createResource(RefreshLocalAliasVisitor.java:38)
at org.eclipse.core.internal.localstore.RefreshLocalVisitor.synchronizeExistence(RefreshLocalVisitor.java:219)
at org.eclipse.core.internal.localstore.RefreshLocalVisitor.visit(RefreshLocalVisitor.java:293)
at org.eclipse.core.internal.localstore.UnifiedTree.accept(UnifiedTree.java:110)
at org.eclipse.core.internal.localstore.FileSystemResourceManager.refreshResource(FileSystemResourceManager.java:920)
at org.eclipse.core.internal.localstore.FileSystemResourceManager.refresh(FileSystemResourceManager.java:904)
at org.eclipse.core.internal.resources.Resource.refreshLocal(Resource.java:1694)
at org.eclipse.core.internal.resources.Resource.createLink(Resource.java:711)
at org.eclipse.core.internal.resources.Resource.createLink(Resource.java:647)
at org.eclipse.jdt.internal.core.ExternalFoldersManager.createLinkFolder(ExternalFoldersManager.java:153)
at org.eclipse.jdt.internal.core.ExternalFoldersManager.createLinkFolder(ExternalFoldersManager.java:145)
at org.eclipse.jdt.internal.core.ExternalFolderChange.updateExternalFoldersIfNecessary(ExternalFolderChange.java:48)
at org.eclipse.jdt.internal.core.ChangeClasspathOperation.classpathChanged(ChangeClasspathOperation.java:62)
at org.eclipse.jdt.internal.core.SetClasspathOperation.executeOperation(SetClasspathOperation.java:74)
at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2344)
at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:793)
at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(JavaProject.java:3095)
at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(JavaProject.java:3057)
at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(JavaProject.java:3069)
at org.eclipse.jdt.core.tests.model.AbstractJavaModelTests$4.run(AbstractJavaModelTests.java:1638)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2344)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2326)
at org.eclipse.jdt.core.tests.model.AbstractJavaModelTests.createJavaProject(AbstractJavaModelTests.java:1658)
at org.eclipse.jdt.core.tests.model.AbstractJavaModelTests.createJavaProject(AbstractJavaModelTests.java:1268)
at org.eclipse.jdt.core.tests.model.AttachSourceTests.testExternalFolder5(AttachSourceTests.java:506)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2045362</commentid>
    <comment_count>2</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-02 16:37:58 -0500</bug_when>
    <thetext>*** Bug 367221 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2058512</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-31 05:37:26 -0500</bug_when>
    <thetext>I actually see this exception quite frequently, both in Object Teams builds and also in official Eclipse SDK builds.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2064671</commentid>
    <comment_count>4</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-02-12 23:31:56 -0500</bug_when>
    <thetext>This occurred again in the last nightly build (N20120210-2000).

Stephan, since you said you see this in your environment, may I ask for some help in terms of additional information if the failure occurs again? The things I am looking for are: whether it&apos;s the same resource (what you mentioned earlier) that has trouble all the time, whether or not the resource being linked exists, contents of the external folders project&apos;s .project file etc.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2068410</commentid>
    <comment_count>5</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-02-20 18:28:40 -0500</bug_when>
    <thetext>I&apos;m not sure the bug let&apos;s me get that close that I could answer your questions first hand.

I suggest we design some test harness that should log the desired information, when it happens again during testing, what do you think?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2068469</commentid>
    <comment_count>6</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-02-21 02:56:49 -0500</bug_when>
    <thetext>(In reply to comment #5)
&gt; I suggest we design some test harness that should log the desired information,
&gt; when it happens again during testing, what do you think?

Makes sense. I will add some debugging information to the failing test.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2069066</commentid>
    <comment_count>7</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-02-22 01:47:44 -0500</bug_when>
    <thetext>Added some debugging code in case the test fails again. Hopefully this will reveal what&apos;s going on.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2069067</commentid>
    <comment_count>8</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-02-22 01:48:50 -0500</bug_when>
    <thetext>(In reply to comment #7)
&gt; Added some debugging code in case the test fails again. Hopefully this will
&gt; reveal what&apos;s going on.

For the record, it&apos;s here:
http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=189e4902a8cd4c72cdcb57f23d61ddb627236e43</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2070643</commentid>
    <comment_count>9</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2012-02-24 06:40:53 -0500</bug_when>
    <thetext>We also get this occasionally in JDT/UI tests, mostly on Linux. This time, it was FatJarExportTests.testExternalClassFolder in I20120223-0928.

Bug 244315 is a Platform/Resources bug for the same issue.

java.lang.IllegalArgumentException: Element not found: /.org.eclipse.jdt.core.external.folders/.link0.
at org.eclipse.core.internal.watson.ElementTree.elementNotFound(ElementTree.java:256)
at org.eclipse.core.internal.watson.ElementTree.createElement(ElementTree.java:184)
at org.eclipse.core.internal.resources.Workspace.createResource(Workspace.java:1369)
at org.eclipse.core.internal.resources.Workspace.createResource(Workspace.java:1322)
at org.eclipse.core.internal.localstore.RefreshLocalVisitor.createResource(RefreshLocalVisitor.java:80)
at org.eclipse.core.internal.localstore.RefreshLocalAliasVisitor.createResource(RefreshLocalAliasVisitor.java:38)
at org.eclipse.core.internal.localstore.RefreshLocalVisitor.synchronizeExistence(RefreshLocalVisitor.java:219)
at org.eclipse.core.internal.localstore.RefreshLocalVisitor.visit(RefreshLocalVisitor.java:293)
at org.eclipse.core.internal.localstore.UnifiedTree.accept(UnifiedTree.java:110)
at org.eclipse.core.internal.localstore.FileSystemResourceManager.refreshResource(FileSystemResourceManager.java:920)
at org.eclipse.core.internal.localstore.FileSystemResourceManager.refresh(FileSystemResourceManager.java:904)
at org.eclipse.core.internal.resources.Resource.refreshLocal(Resource.java:1694)
at org.eclipse.core.internal.resources.Resource.createLink(Resource.java:711)
at org.eclipse.core.internal.resources.Resource.createLink(Resource.java:647)
at org.eclipse.jdt.internal.core.ExternalFoldersManager.createLinkFolder(ExternalFoldersManager.java:153)
at org.eclipse.jdt.internal.core.ExternalFoldersManager.createLinkFolder(ExternalFoldersManager.java:145)
at org.eclipse.jdt.internal.core.ExternalFolderChange.updateExternalFoldersIfNecessary(ExternalFolderChange.java:48)
at org.eclipse.jdt.internal.core.ChangeClasspathOperation.classpathChanged(ChangeClasspathOperation.java:62)
at org.eclipse.jdt.internal.core.SetClasspathOperation.executeOperation(SetClasspathOperation.java:74)
at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2344)
at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:793)
at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(JavaProject.java:3095)
at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(JavaProject.java:3057)
at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(JavaProject.java:3110)
at org.eclipse.jdt.testplugin.JavaProjectHelper.addToClasspath(JavaProjectHelper.java:738)
at org.eclipse.jdt.testplugin.JavaProjectHelper.addLibrary(JavaProjectHelper.java:504)
at org.eclipse.jdt.ui.tests.jarexport.FatJarExportTests.testExternalClassFolder(FatJarExportTests.java:981)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2072093</commentid>
    <comment_count>10</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-02-28 09:07:07 -0500</bug_when>
    <thetext>This bug manifested itself in today&apos;s nightly build (N20120227-2000) again. I had put in some code to debug. But unfortunately, it&apos;s a different test that failed this time. Here is a part of the stack:

at org.eclipse.jdt.core.tests.model.AbstractJavaModelTests.createJavaProject(AbstractJavaModelTests.java:1268)
at org.eclipse.jdt.core.tests.model.JavaProjectTests.testPackageFragmentRootNonJavaResources8(JavaProjectTests.java:1557)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2075799</commentid>
    <comment_count>11</comment_count>
    <who name="Stefan Schedl">stefan.schedl</who>
    <bug_when>2012-03-06 06:54:42 -0500</bug_when>
    <thetext>Hi,

I also get this bug in my own junit test, which creates a java project. But my target platform is Eclipse 3.7.2. with 3.7.1. i didn&apos;t get this error.
 

java.lang.IllegalArgumentException: Element not found /.org.eclipse.jdt.core.external.folders/.link9.
	at org.eclipse.core.internal.watson.ElementTree.elementNotFound(ElementTree.java:256)
	at org.eclipse.core.internal.watson.ElementTree.createElement(ElementTree.java:184)
	at org.eclipse.core.internal.resources.Workspace.createResource(Workspace.java:1369)
	at org.eclipse.core.internal.resources.Workspace.createResource(Workspace.java:1322)
	at org.eclipse.core.internal.localstore.RefreshLocalVisitor.createResource(RefreshLocalVisitor.java:80)
	at org.eclipse.core.internal.localstore.RefreshLocalAliasVisitor.createResource(RefreshLocalAliasVisitor.java:38)
	at org.eclipse.core.internal.localstore.RefreshLocalVisitor.synchronizeExistence(RefreshLocalVisitor.java:219)
	at org.eclipse.core.internal.localstore.RefreshLocalVisitor.visit(RefreshLocalVisitor.java:293)
	at org.eclipse.core.internal.localstore.UnifiedTree.accept(UnifiedTree.java:110)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.refreshResource(FileSystemResourceManager.java:920)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.refresh(FileSystemResourceManager.java:904)
	at org.eclipse.core.internal.resources.Resource.refreshLocal(Resource.java:1663)
	at org.eclipse.core.internal.resources.Resource.createLink(Resource.java:687)
	at org.eclipse.core.internal.resources.Resource.createLink(Resource.java:623)
	at org.eclipse.jdt.internal.core.ExternalFoldersManager.createLinkFolder(ExternalFoldersManager.java:153)
	at org.eclipse.jdt.internal.core.ExternalFoldersManager.createLinkFolder(ExternalFoldersManager.java:145)
	at org.eclipse.jdt.internal.core.ExternalFolderChange.updateExternalFoldersIfNecessary(ExternalFolderChange.java:48)
	at org.eclipse.jdt.internal.core.ChangeClasspathOperation.classpathChanged(ChangeClasspathOperation.java:62)
	at org.eclipse.jdt.internal.core.SetClasspathOperation.executeOperation(SetClasspathOperation.java:74)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2344)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:793)
	at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(JavaProject.java:3093)
	at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(JavaProject.java:3055)
	at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(JavaProject.java:3067)
	at</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2081111</commentid>
    <comment_count>12</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2012-03-15 08:27:19 -0400</bug_when>
    <thetext>We got this twice over the past 2 days. Please look into this during M7.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2081550</commentid>
    <comment_count>13</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-03-15 19:11:02 -0400</bug_when>
    <thetext>Jay, given the number of tests that potentially trigger this bug, what about moving the test harness into the core (e.g., ExternalFoldersManager#createLinkFolder()) guarded by a flag that defaults to false and is set to true from a place like AbstractJavaModelTest?

Wouldn&apos;t that increase our chance of getting more information?

Hopefully, we can remove everything again during M7.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2081656</commentid>
    <comment_count>14</comment_count>
      <attachid>212774</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-03-16 05:54:35 -0400</bug_when>
    <thetext>Created attachment 212774
More troubleshooting logs

Thanks, Stephan. I have added some code in the ExternalFoldersManager to log the state in case of an exception. To help us enable this in other environments (like Stefan&apos;s, where he recently reported), the flag is in the form of a system property.

Also, I am assuming the Core tests are run before JDT/UI tests. Else, we will have to pass the property via a VM argument.

Stephan, can you look the patch and see if you think any other information such as pendingFolders would help?

I will push this changes to master once M6 is out.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2081951</commentid>
    <comment_count>15</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2012-03-16 12:55:17 -0400</bug_when>
    <thetext>(In reply to comment #14)
&gt; Also, I am assuming the Core tests are run before JDT/UI tests. Else, we will
&gt; have to pass the property via a VM argument.

Tests from different plug-ins are run in separate VMs, so the property will not be passed (test.xml launches the tests).

But I just set the property in the UI tests now: http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=7bbe9b200e2038f2a18dd4bf9b010385f95ab3de</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2082389</commentid>
    <comment_count>16</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-03-18 23:22:30 -0400</bug_when>
    <thetext>(In reply to comment #15)
&gt; But I just set the property in the UI tests now:
&gt; http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=7bbe9b200e2038f2a18dd4bf9b010385f95ab3de

Thanks, Markus!

Now that M6 is out, I have pushed the troubleshooting changes here:
http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=e84db8d4c6681c452df342e0bb55c2450eb0a239</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2083617</commentid>
    <comment_count>17</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2012-03-21 01:38:09 -0400</bug_when>
    <thetext>(In reply to comment #16)

&gt; Now that M6 is out, I have pushed the troubleshooting changes here:
&gt; http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=e84db8d4c6681c452df342e0bb55c2450eb0a239

Satyam, given these changes may be left in for a while and we
are in M7, let us get it reviewed. Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2083627</commentid>
    <comment_count>18</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-03-21 02:56:35 -0400</bug_when>
    <thetext>+1 for the logging code.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2095506</commentid>
    <comment_count>19</comment_count>
    <who name="Kris De Volder">kdevolder</who>
    <bug_when>2012-04-18 19:05:41 -0400</bug_when>
    <thetext>I&apos;m also seeing that error in my test runs for the STS Gradle tooling.

It is causing somewhat &apos;random&apos; test failures. I have 1 or 2 out of 100 tests failing on a typical test run. They are always different tests failing with a similar stack trace.

I think the error has something to do with the fact that the classpath in my projects typically contains a classpath container which in turn resolves to something that contains references to folders (rather than just jar files).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2096859</commentid>
    <comment_count>20</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-04-23 01:12:56 -0400</bug_when>
    <thetext>(In reply to comment #19)
&gt; I&apos;m also seeing that error in my test runs for the STS Gradle tooling.

Could you by any chance try with the HEAD version of JDT/Core, if you aren&apos;t already doing that and share what you have in your .log file? We have added some trouble-shooting logs in the code that would give us some information on the state when the failure occurs.

&gt; I think the error has something to do with the fact that the classpath in my
&gt; projects typically contains a classpath container which in turn resolves to
&gt; something that contains references to folders (rather than just jar files).

That is expected since the external folder manager, which is failing, is meant for folders.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2098328</commentid>
    <comment_count>21</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-04-25 12:07:53 -0400</bug_when>
    <thetext>Fix for bug 376724 could fix potentially fix this. However, as tests are not running, we will not be able to confirm if this is fixed by M7. Hence, moving to RC1.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2098573</commentid>
    <comment_count>22</comment_count>
    <who name="Kris De Volder">kdevolder</who>
    <bug_when>2012-04-25 18:19:56 -0400</bug_when>
    <thetext>Unfortunately it is not practical for us to run with JDT head. The reason is that Gradle and Groovy tools are patching JDT core. The patch is for a very specific version of JDT core and needs to be redone for every new version we want to support. 

We are however rather certain that the bug within the original code, not our patches. 

I feel like this bug is really very annoying and we sure want to get it fixed and help you as much as possible. 

I have put together a small eclipse plugin project containing a JUnit plugin test that relatively reliably reproduces the bug when I run it with target platform = Unmodified Eclipse 3.7.2 RCP.

From experience seeing the bug, we figured it comes about when this sequence of events happen:
 - java project created
 - classpath container with folders (instead of just jars) added
 - project deleted
 - project with same name and similar features created

It doesn&apos;t always happen, but it seems repeating this enough times is almost
certain to trigger exception eventually.

I have some code that does this kind of thing in a loop.
It usually hits the error after about 100 iterations for me.
Sometimes sooner (I&apos;ve seen it once after only 10 iterations).

Hopefully this can help you determine the exact cause of the problem and whether or not you have indeed fixed it with 
https://bugs.eclipse.org/bugs/show_bug.cgi?id=376724</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2098574</commentid>
    <comment_count>23</comment_count>
      <attachid>214571</attachid>
    <who name="Kris De Volder">kdevolder</who>
    <bug_when>2012-04-25 18:21:05 -0400</bug_when>
    <thetext>Created attachment 214571
plugin project containing JUnit plugin test that reproduces the exception</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2098583</commentid>
    <comment_count>24</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-04-25 18:51:29 -0400</bug_when>
    <thetext>(In reply to comment #23)
&gt; Created attachment 214571 [details]
&gt; plugin project containing JUnit plugin test that reproduces the exception

This is cool, thanks, Kris!

Running this test with -Djdt.bug.367669=non-null I see output like this:

java.lang.IllegalArgumentException: Element not found: /.org.eclipse.jdt.core.external.folders/.link145.
&lt;&lt;Stack trace omitted&gt;&gt;
============================================================================================================
The following logs are created for troubleshooting bug: https://bugs.eclipse.org/bugs/show_bug.cgi?id=367669
Exteral folder: /home/stephan/workspaces/jdt-core-git/bug367669-external-folders/dslSupport
Link folder: F/.org.eclipse.jdt.core.external.folders/.link146
External folder exists
Link for folder exists
External Folder Project exists with following content:
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;projectDescription&gt;
	&lt;name&gt;.org.eclipse.jdt.core.external.folders&lt;/name&gt;
	&lt;comment&gt;&lt;/comment&gt;
	&lt;projects&gt;
	&lt;/projects&gt;
	&lt;buildSpec&gt;
	&lt;/buildSpec&gt;
	&lt;natures&gt;
	&lt;/natures&gt;
	&lt;linkedResources&gt;
		&lt;link&gt;
			&lt;name&gt;.link146&lt;/name&gt;
			&lt;type&gt;2&lt;/type&gt;
			&lt;location&gt;/home/stephan/workspaces/jdt-core-git/bug367669-external-folders/dslSupport&lt;/location&gt;
		&lt;/link&gt;
	&lt;/linkedResources&gt;
&lt;/projectDescription&gt;

========================================== Debug information ends ==========================================

Using &quot;Run&quot; I see the test failing most the time, however, in debug mode I couldn&apos;t yet reproduce.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2098591</commentid>
    <comment_count>25</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-04-25 18:58:51 -0400</bug_when>
    <thetext>Here&apos;s the bad news: Kris&apos; test still reproduces the bug when I apply attachment 214487 from Bug 376724 comment 3.

But maybe this observation helps: I consistently see that the IAE is reported against .link&lt;n&gt; whereas the debug output shows a linked resource .link&lt;n+1&gt;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2098594</commentid>
    <comment_count>26</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-04-25 19:00:00 -0400</bug_when>
    <thetext>(In reply to comment #25)
&gt; Here&apos;s the bad news: Kris&apos; test still reproduces the bug when I apply
&gt; attachment 214487 [details] from Bug 376724 comment 3.

correct: from Bug 376724 comment 5.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2098735</commentid>
    <comment_count>27</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-04-26 04:48:06 -0400</bug_when>
    <thetext>(In reply to comment #25)
&gt; But maybe this observation helps: I consistently see that the IAE is reported
&gt; against .link&lt;n&gt; whereas the debug output shows a linked resource .link&lt;n+1&gt;.

Interesting. Either there is another folder involved while refreshing, which is unlikely or there is a problem while simultaneously accessing &quot;this.counter&quot;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2098744</commentid>
    <comment_count>28</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-04-26 05:11:33 -0400</bug_when>
    <thetext>I have my questions about the thread safety of the code that post increments &apos;counter&apos;. However, it&apos;s only theoretical assessment and unfortunately I don&apos;t have a linux or mac environment to try with. And this doesn&apos;t happen with windows.

Stephan, could you try this following code inside ExternalFoldersManageraddFolder()?

		do {
			String linkName = null;
			synchronized (this) {
				linkName = LINKED_FOLDER_NAME + this.counter++;
			}
			result = externalFoldersProject.getFolder(linkName);
		} while (result.exists());

Okay, I admit, I don&apos;t like the way ExternalFoldersManager looks with so many synchronized methods, blocks and even collections :(</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2098799</commentid>
    <comment_count>29</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-04-26 07:11:08 -0400</bug_when>
    <thetext>I&apos;m approaching the problem from the opposite direction: with sysout debugging in core.resources code I found this:

RefreshLocalAliasVisitor is creating a resource like so:
 - createResource
    node = &quot;/.org.eclipse.jdt.core.external.folders/.link76/dsld&quot;
    target = &quot;F/.org.eclipse.jdt.core.external.folders/.link76/dsld&quot;
 - then the alias manager finds this alias:
    &quot;F/.org.eclipse.jdt.core.external.folders/.link75/dsld&quot;
- createResource tries to create the resource for this path
  -&gt; fails because the parent handle does not exist: &quot;/.org.eclipse.jdt.core.external.folders/.link75&quot;
  
Wouldn&apos;t that mean that the alias manager is answering outdated aliases?

This is supported by additional sysout in AliasManager.LocationMap.matchingResourcesDo(..):
normally this method isn&apos;t even called but directly before the exception I&apos;m seeing plenty of invocations incl. two yielding non-null values:
  value=P/.org.eclipse.jdt.core.external.folders
  value=[F/.org.eclipse.jdt.core.external.folders/.link75, F/.org.eclipse.jdt.core.external.folders/.link76]

Next I added sysout to AliasManager.hasNoAliases(..) yielding this printout:
- normally 14 hits, all with noAliases==true
- in the exception case:
Creating: 76
no aliases L/bork/.project = true
no aliases P/bork = true
no aliases L/bork/.project = true
no aliases L/bork/.classpath = true
no aliases F/bork/src = true
no aliases L/.org.eclipse.jdt.core.external.folders/.project = true
no aliases P/.org.eclipse.jdt.core.external.folders = true
no aliases L/bork/.classpath = true
no aliases L/.org.eclipse.jdt.core.external.folders/.project = true
no aliases P/.org.eclipse.jdt.core.external.folders = true
Try creating F/.org.eclipse.jdt.core.external.folders/.link76
no aliases L/.org.eclipse.jdt.core.external.folders/.project = false

The &quot;Try creating ...&quot; line is from ExternalFoldersManager.createLinkFolder before calling createLink(..).
After this line hasNoAliases() apparently *should* still answer true but in the buggy case it says false,
and from there on outdated aliases drive us deeper into trouble.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2098819</commentid>
    <comment_count>30</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-04-26 07:59:03 -0400</bug_when>
    <thetext>Here&apos;s the stack from a bogus call that creates an alias to the external folders project:
java.lang.RuntimeException: resource = P/.org.eclipse.jdt.core.external.folders
	at org.eclipse.core.internal.resources.AliasManager$AddToCollectionDoit.doit(AliasManager.java:60)
	at org.eclipse.core.internal.resources.AliasManager$LocationMap.overLappingResourcesDo(AliasManager.java:233)
	at org.eclipse.core.internal.resources.AliasManager.buildAliasedProjectsSet(AliasManager.java:398)
	at org.eclipse.core.internal.resources.AliasManager.updateStructureChanges(AliasManager.java:772)
	at org.eclipse.core.internal.resources.AliasManager.hasNoAliases(AliasManager.java:626)
	at org.eclipse.core.internal.resources.AliasManager.updateAliases(AliasManager.java:723)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.internalWrite(FileSystemResourceManager.java:649)
	at org.eclipse.core.internal.resources.Project.writeDescription(Project.java:1465)
	at org.eclipse.core.internal.resources.Project.writeDescription(Project.java:1446)
	at org.eclipse.core.internal.resources.Resource.createLink(Resource.java:696)
	at org.eclipse.core.internal.resources.Resource.createLink(Resource.java:647)
	at org.eclipse.jdt.internal.core.ExternalFoldersManager.createLinkFolder(ExternalFoldersManager.java:167)
	at org.eclipse.jdt.internal.core.ExternalFoldersManager.createLinkFolder(ExternalFoldersManager.java:153)
	at org.eclipse.jdt.internal.core.ExternalFolderChange.updateExternalFoldersIfNecessary(ExternalFolderChange.java:48)
	at org.eclipse.jdt.internal.core.ChangeClasspathOperation.classpathChanged(ChangeClasspathOperation.java:62)
	at org.eclipse.jdt.internal.core.SetClasspathOperation.executeOperation(SetClasspathOperation.java:74)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2344)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:793)
	at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(JavaProject.java:3095)
	at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(JavaProject.java:3057)
	at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(JavaProject.java:3110)
	at com.springsource.sts.gradle.core.dsld.GradleDSLDClasspathContainer.addTo(GradleDSLDClasspathContainer.java:98)
	at bug367669.external.folders.BugTest.testIt(BugTest.java:53)
	
immediately after this things go havoc:
no aliases P/.org.eclipse.jdt.core.external.folders = false
AliasManager value=P/.org.eclipse.jdt.core.external.folders
etc. like in the previous comment.

I assume the external links project should never be aliased?

I&apos;m yet to find any impact of concurrency</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2098878</commentid>
    <comment_count>31</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-04-26 09:31:22 -0400</bug_when>
    <thetext>Here&apos;s how concurrency plays into the issue:

On the main thread SetClasspathOperation is working (see stacks in previous comments).

On another thread deletion of the project from the previous test iteration is still working:
	at org.eclipse.core.internal.resources.ResourceTree.deletedFolder(ResourceTree.java:146)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:339)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFolder(ResourceTree.java:798)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1978)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:804)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:770)
	at org.eclipse.jdt.internal.core.ExternalFoldersManager.cleanUp(ExternalFoldersManager.java:246)
	at org.eclipse.jdt.internal.core.JavaModelManager.saving(JavaModelManager.java:4249)
	at org.eclipse.core.internal.resources.SaveManager.executeLifecycle(SaveManager.java:383)
	at org.eclipse.core.internal.resources.SaveManager$1.run(SaveManager.java:192)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.resources.SaveManager.broadcastLifecycle(SaveManager.java:195)
	at org.eclipse.core.internal.resources.SaveManager.save(SaveManager.java:1130)
	at org.eclipse.core.internal.resources.SaveManager.save(SaveManager.java:1109)
	at org.eclipse.core.internal.resources.DelayedSnapshotJob.run(DelayedSnapshotJob.java:51)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
	
That&apos;s the common part, from where I can see one remove (OK) and one add (NOK):

removing F/.org.eclipse.jdt.core.external.folders/.link332 at /home/stephan/workspaces/jdt-core-git/bug367669-external-folders/dslSupport
	at org.eclipse.core.internal.resources.AliasManager$LocationMap.remove(AliasManager.java:284)
	at org.eclipse.core.internal.resources.AliasManager.removeFromLocationsMap(AliasManager.java:687)
	at org.eclipse.core.internal.resources.AliasManager.handleEvent(AliasManager.java:610)
	at org.eclipse.core.internal.resources.Workspace.broadcastEvent(Workspace.java:390)
	at org.eclipse.core.internal.resources.Resource.deleteResource(Resource.java:870)
	at org.eclipse.core.internal.resources.ResourceTree.deletedFolder(ResourceTree.java:146)
	
adding F/.org.eclipse.jdt.core.external.folders/.link332 at /home/stephan/workspaces/jdt-core-git/bug367669-external-folders/dslSupport
	at org.eclipse.core.internal.resources.AliasManager$LocationMap.add(AliasManager.java:143)
	at org.eclipse.core.internal.resources.AliasManager.addToLocationsMap(AliasManager.java:397)
	at org.eclipse.core.internal.resources.AliasManager.updateStructureChanges(AliasManager.java:786)
	at org.eclipse.core.internal.resources.AliasManager.hasNoAliases(AliasManager.java:645)
	at org.eclipse.core.internal.resources.AliasManager.updateAliases(AliasManager.java:742)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.internalWrite(FileSystemResourceManager.java:649)
	at org.eclipse.core.internal.resources.Project.writeDescription(Project.java:1465)
	at org.eclipse.core.internal.resources.Project.writeDescription(Project.java:1446)
	at org.eclipse.core.internal.resources.Resource.deleteResource(Resource.java:886)
	at org.eclipse.core.internal.resources.ResourceTree.deletedFolder(ResourceTree.java:146)
	
What&apos;s that? We are removing .link332 and while doing so we re-add it again??

The next test iteration creates .link333 to point to the same location which is recognized as a duplicate - hence we start creating bogus aliases.

Looks like racing between removing old links and adding new links.

I made a quick experiment with protecting methods creadLinkFolder and cleanUp in ExternalFoldersManager with a modifyRule for the project.
Unfortunately, even with this protection the bug still occurs. I&apos;m not sure why ExternalFoldersManager is not using scheduling rules. Should we coordinate createLinkFolder and cleanUp using synchronized?

Maybe I&apos;m still missing a piece in my analysis, but I think this looks like a promising track.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2100046</commentid>
    <comment_count>32</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-04-28 10:17:29 -0400</bug_when>
    <thetext>From all my analysis little points towards the ExternalFoldersManager, most is happening inside the AliasManager. Hence I&apos;m moving the bug to platform resources for advice.

Let me summarize my findings:

We have a loop of creation and deletion of identical projects.

During setRawClasspath of project n+1 someone is trying to re-create a linked folder for project n, which has already been deleted.

I never succeeded to see the bug in debug mode but it is fairly stable in run mode, thus all the analysis is based on sysout.

Here&apos;s what a good run does:
- delete project n
- create project n+1
- before opening project n+1 a DelayedSnapshotJob triggers ExternalFoldersManager.cleanUp which invokes ResourceTree.deleteFolder
  - during AliasManager.updateStructureChanges we find changedProjects == true and setup a clean new locationsMap
- only later when project n+1 sets up its linked folder do we see calls to addToLocationsMap for the new linked folder.

Here&apos;s what a bad run does:
- delete project n
- create project n+1
- proceed initializing project n+1 incl. adding JRE to its raw classpath
  - intermediate steps keep adding the *old* linked folder to the locationsMap (addToLocationsMap)
- only then the DelayedSnapshotJob invokes ResourceTree.deleteFolder as mentioned above, but now this goes awry:
  - in updateStructureChanges() the flag changedProjects is no longer true
  - we find the old linked folder in changedLinks (because it&apos;s being deleted), find it is still [*] isLinked() and thus re-add it to the locationsMap!
- when adding the *new* linked folder, an alias for the external folders project is detected
- somehow this triggers that a resource for the old link folder is being created, which then throws the IAE because the file system entry has long gone.

I don&apos;t see any fine grained concurrency but only a question of how the top level actions in the test interleave with the DelayedSnapshotJob.
Note that the latter is protected with a workspace rule.

Question:
- Is it wrong to defer ResourceTree.deleteFolder to the DelayedSnapshotJob?

[*] perhaps here&apos;s the crux: don&apos;t we just find the link *target* existing? Do we prematurely conclude that the resource itself (the link) also exists?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2100047</commentid>
    <comment_count>33</comment_count>
      <attachid>214761</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-04-28 10:18:51 -0400</bug_when>
    <thetext>Created attachment 214761
console log of a good test run</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2100048</commentid>
    <comment_count>34</comment_count>
      <attachid>214762</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-04-28 10:19:25 -0400</bug_when>
    <thetext>Created attachment 214762
console log of a bad iteration</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2100049</commentid>
    <comment_count>35</comment_count>
      <attachid>214763</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-04-28 10:20:53 -0400</bug_when>
    <thetext>Created attachment 214763
AliasManager.java with debug sysouts</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2100050</commentid>
    <comment_count>36</comment_count>
      <attachid>214764</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-04-28 10:22:17 -0400</bug_when>
    <thetext>Created attachment 214764
stack traces at some interesting points in time</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2100052</commentid>
    <comment_count>37</comment_count>
      <attachid>214765</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-04-28 10:24:57 -0400</bug_when>
    <thetext>Created attachment 214765
test main with debug sysouts</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2100054</commentid>
    <comment_count>38</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-04-28 10:26:59 -0400</bug_when>
    <thetext>(In reply to comment #37)
&gt; Created attachment 214765 [details]
&gt; test main with debug sysouts

This also contains scheduling of another job which makes the bug a bit more stable on my machine (the more debug output I added, the less frequently the bug occurred).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2100508</commentid>
    <comment_count>39</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-04-30 09:57:22 -0400</bug_when>
    <thetext>Today while running JDT/Core tests, I saw these in the log file, even though the tests themselves passed. The error looks relevant, even though not same as the ones reported here.

!ENTRY org.eclipse.jdt.core 4 4 2012-04-30 19:14:47.691
!MESSAGE Error while creating a link for external folder :C:/work/JDT/externalLib
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Cannot create linked resource &apos;/.org.eclipse.jdt.core.external.folders/.link59&apos;.  The parent resource is not accessible.
	at org.eclipse.core.internal.resources.Resource.assertLinkRequirements(Resource.java:181)
	at org.eclipse.core.internal.resources.Resource.createLink(Resource.java:673)
	at org.eclipse.core.internal.resources.Resource.createLink(Resource.java:647)
	at org.eclipse.jdt.internal.core.ExternalFoldersManager.createLinkFolder(ExternalFoldersManager.java:166)
	at org.eclipse.jdt.internal.core.ExternalFoldersManager.createPendingFolders(ExternalFoldersManager.java:230)
	at org.eclipse.jdt.core.JavaCore.initializeAfterLoad(JavaCore.java:3944)
	at org.eclipse.jdt.core.tests.model.ExternalJarDeltaTests.testExternalJarChanged5(ExternalJarDeltaTests.java:262)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2100570</commentid>
    <comment_count>40</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-04-30 11:17:51 -0400</bug_when>
    <thetext>(In reply to comment #39)
&gt; Today while running JDT/Core tests, I saw these in the log file, even though
&gt; the tests themselves passed. The error looks relevant, even though not same as
&gt; the ones reported here.

I&apos;d say its another symptom of the same root cause, probably.
Only one thing looks significantly different to me:
in that test we have a simulated exit/restart cycle, which means the DelayedSnapshotJob should be gone by then. But from my observations, once we&apos;re in the bad state that can be quite sticky.

Did you also see any of or debug output?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2100621</commentid>
    <comment_count>41</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2012-04-30 12:16:40 -0400</bug_when>
    <thetext>(In reply to comment #40)
&gt; Did you also see any of or debug output?

No, if you meant &apos;our&apos;, I didn&apos;t. Also, On subsequent runs, the error was gone.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2100843</commentid>
    <comment_count>42</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-04-30 18:12:03 -0400</bug_when>
    <thetext>(In reply to comment #41)
&gt; (In reply to comment #40)
&gt; &gt; Did you also see any of or debug output?
&gt; 
&gt; No, if you meant &apos;our&apos;, ...

sure did, thanks for mind reading :)


One more observations: 

I could only observe the bug when removing the last link to external and thus removing the external folders project itself. Just the presence of another equally shaped project seems to prevent the bug.

A possible solution:

I could prevent the bug from happening by this change in AliasManager.resourceChanged(..):
-		if (delta.getAffectedChildren(IResourceDelta.ADDED | IResourceDelta.REMOVED).length &gt; 0)
+		if (delta.getAffectedChildren(IResourceDelta.ADDED | IResourceDelta.REMOVED, IContainer.INCLUDE_HIDDEN).length &gt; 0)
This makes a difference when ExternalFoldersManager#cleanUp() calls project.delete(..) because the external folders project is in fact *hidden*!
The change ensures that AliasManager.updateStructureChanges() enters the good branch, where no undead links are resurrected.

I don&apos;t know for sure, if this fixes the root cause are just masks the problem, but it&apos;s the best proposal I have for now.
Any comments from platform resources?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2104630</commentid>
    <comment_count>43</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-05-08 13:15:42 -0400</bug_when>
    <thetext>(In reply to comment #42)
&gt; Any comments from platform resources?

ping?

This bug is causing test failures on a regular basis.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2104644</commentid>
    <comment_count>44</comment_count>
    <who name="Andrew Eisenberg">andrew.eisenberg</who>
    <bug_when>2012-05-08 13:28:57 -0400</bug_when>
    <thetext>We are seeing this problem on our builds as well.  It is causing so much havoc that we are considering downgrading our build system to test against 37.0 instead of 3.7.2 or later.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2104659</commentid>
    <comment_count>45</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-05-08 13:49:48 -0400</bug_when>
    <thetext>I know this bug has gotten a bit long documenting my debugging trail.

However, please note that comment 42 has a possible solution!

I don&apos;t think you really need to read anything prior to comment 32, where my findings up-to that point are summarized.

To correlate debugging output with the sources, please refer to comment 37.

HTH.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2105517</commentid>
    <comment_count>46</comment_count>
    <who name="Andrew Eisenberg">andrew.eisenberg</who>
    <bug_when>2012-05-09 15:52:14 -0400</bug_when>
    <thetext>I created a feature patch and an update site here:

https://bugs.eclipse.org/bugs/show_bug.cgi?id=367669

This works for me locally/  We will be trying this in our builds to make sure it works there as well.

This feature patch works against 3.7.2 only.  If there is a need, I will create a patch for 4.2 as well, but since 4.2 is a moving target and patches need a precise version range, it will be tricky to get right.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2105650</commentid>
    <comment_count>47</comment_count>
    <who name="Satyam Kandula">satyam.kandula</who>
    <bug_when>2012-05-10 00:03:21 -0400</bug_when>
    <thetext>(In reply to comment #46)
&gt; I created a feature patch and an update site here:
&gt; 
&gt; https://bugs.eclipse.org/bugs/show_bug.cgi?id=367669
&gt; 
&gt; This works for me locally/  We will be trying this in our builds to make sure
&gt; it works there as well.
&gt; 
&gt; This feature patch works against 3.7.2 only.  If there is a need, I will create
&gt; a patch for 4.2 as well, but since 4.2 is a moving target and patches need a
&gt; precise version range, it will be tricky to get right.
Hi Andrew, 
The update site that you have mentioned is this bug url :). Can you please give the correct url? Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2105651</commentid>
    <comment_count>48</comment_count>
    <who name="Andrew Eisenberg">andrew.eisenberg</who>
    <bug_when>2012-05-10 00:08:44 -0400</bug_when>
    <thetext>&gt; Hi Andrew, 
&gt; The update site that you have mentioned is this bug url :). Can you please give
&gt; the correct url? Thanks.

Ha!  That was certainly not intentional.

Try this:

http://dist.springsource.com/release/TOOLS/patches/bug367669</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2106969</commentid>
    <comment_count>49</comment_count>
    <who name="John Arthorne">john_arthorne</who>
    <bug_when>2012-05-11 16:35:29 -0400</bug_when>
    <thetext>(In reply to comment #46)
&gt; This feature patch works against 3.7.2 only.  If there is a need, I will create
&gt; a patch for 4.2 as well, but since 4.2 is a moving target and patches need a
&gt; precise version range, it will be tricky to get right.

Andrew, is this just a packaging of Stephan&apos;s recommended fix from comment #42? I can&apos;t actually see anything at the URL you gave. I just see:

&lt;Error&gt;&lt;Code&gt;AccessDenied&lt;/Code&gt;&lt;Message&gt;Access Denied&lt;/Message&gt;&lt;RequestId&gt;E4596C7A86670BBE&lt;/RequestId&gt;&lt;HostId&gt;miTIDxQuVyR4DFd/dLVsQ9xjJbPfTnDE2gI1fP/5VdDSnsrHeYu/EKXNtVGYW5Q/&lt;/HostId&gt;&lt;/Error&gt;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2106993</commentid>
    <comment_count>50</comment_count>
    <who name="Andrew Eisenberg">andrew.eisenberg</who>
    <bug_when>2012-05-11 17:12:23 -0400</bug_when>
    <thetext>Yes, this is just a packaging of Stephan&apos;s proposed fix.

http://dist.springsource.com/release/TOOLS/patches/bug367669/artifacts.jar

should work for you.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2110983</commentid>
    <comment_count>51</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-05-21 09:47:56 -0400</bug_when>
    <thetext>Ping - any chance to address this for RC2?

Also, Andrew, if you have been running tests against the patch,
could you please report whether it reliably solved the issue /
created new issues? Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2111049</commentid>
    <comment_count>52</comment_count>
    <who name="Szymon Brandys">Szymon.Brandys</who>
    <bug_when>2012-05-21 10:48:54 -0400</bug_when>
    <thetext>(In reply to comment #51)
&gt; Ping - any chance to address this for RC2?

Yes. I&apos;m looking at it for 3.8. Was just distracted by other tasks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2111253</commentid>
    <comment_count>53</comment_count>
    <who name="Andrew Eisenberg">andrew.eisenberg</who>
    <bug_when>2012-05-21 16:24:47 -0400</bug_when>
    <thetext>Hi Stephan,

The feature patch is based off of Eclipse 3.7.2 and so will not install into 3.8 or 4.2.  I did run it against Kris&apos;s test case, as well as all of Groovy-Eclipse&apos;s and SpringSource Tool Suite tests.  All are passing.  This is of course not definitive, but since this patch is only going into test target platforms, it is sufficient for my purposes.

Szymon, thanks for taking a look at this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2111493</commentid>
    <comment_count>54</comment_count>
    <who name="Szymon Brandys">Szymon.Brandys</who>
    <bug_when>2012-05-22 05:33:48 -0400</bug_when>
    <thetext>Stephan, just to double check. I&apos;m looking at the suggestion in comment 42. Is there any other code I should look at?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2111527</commentid>
    <comment_count>55</comment_count>
    <who name="Szymon Brandys">Szymon.Brandys</who>
    <bug_when>2012-05-22 06:49:11 -0400</bug_when>
    <thetext>The fix makes sense. Stephan, could you also prepare a JUnit for it?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2111531</commentid>
    <comment_count>56</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-05-22 06:52:08 -0400</bug_when>
    <thetext>(In reply to comment #54)
&gt; Stephan, just to double check. I&apos;m looking at the suggestion in comment 42. Is
&gt; there any other code I should look at?

That&apos;s the only change I proposed and it seems to fix the problem.

I didn&apos;t fully understand, why one branch in AliasManager.updateStructureChanges() would actually create the bad result, but the proposed change prevents that branch to be executed in this specific situation. You may want to check if there&apos;s more lurking here, but JDT/Core tests should be fine with just my simple change.

(In reply to comment #55)
&gt; The fix makes sense. Stephan, could you also prepare a JUnit for it?

Can you use the contributed test from comment 23?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2111686</commentid>
    <comment_count>57</comment_count>
    <who name="Szymon Ptaszkiewicz">szymon.ptaszkiewicz</who>
    <bug_when>2012-05-22 10:08:19 -0400</bug_when>
    <thetext>+1 for the suggestion in comment 42.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2111952</commentid>
    <comment_count>58</comment_count>
    <who name="John Arthorne">john_arthorne</who>
    <bug_when>2012-05-22 13:47:45 -0400</bug_when>
    <thetext>I see a fix was already released, but I don&apos;t think it is sufficient. There is a second call to getAffectedChildren in this method that I believe should also iterate over hidden resources. The test case would be someone manually adding/removing a link in the project description file of a hidden project.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2112121</commentid>
    <comment_count>59</comment_count>
    <who name="John Arthorne">john_arthorne</who>
    <bug_when>2012-05-22 16:39:26 -0400</bug_when>
    <thetext>I fixed the other code path in AliasManager#resourceChanged and released.

I spent a couple of hours trying to create a regression test with no luck. Kris de Volder&apos;s test case didn&apos;t reproduce for me, even after increasing to 5000 iterations. My theory is this fix, while valid, is only solving the sporadic test problems through dumb luck. The underlying problem is covered in bug 244315. Refresh did not handle the case where the parent of an alias had not yet been created. This could happen in a hidden project as in this bug, or in a simpler case where there was no resource change event between creation of the overlapping resource and some child of that resource. So, I will take everyone&apos;s word for it that it fixes their problem, but I would not be surprised to see it crop up again until the root cause in bug 244315 is fixed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2112131</commentid>
    <comment_count>60</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-05-22 16:50:06 -0400</bug_when>
    <thetext>Many thanks Szymon, Szymon and John!

(In reply to comment #59)
&gt;  ... Kris
&gt; de Volder&apos;s test case didn&apos;t reproduce for me, even after increasing to 5000
&gt; iterations.

That&apos;s weird. So the timing on our machines must be completely different.
I saw the bug just about every time within 500 iterations, many times much
earlier.

I&apos;m confident that it fixes this particular issue, but I share your doubts
that this was the whole story.

good luck for bug 244315  :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2112180</commentid>
    <comment_count>61</comment_count>
    <who name="Andrew Eisenberg">andrew.eisenberg</who>
    <bug_when>2012-05-22 18:14:30 -0400</bug_when>
    <thetext>Yes, thanks.  This is very helpful for us.  Our test runs have had a &lt; 50% success rate because of this problem.  The feature patch fixes the problem for 3.7.2 and this will fix the problem on 3.8/4.2.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2114739</commentid>
    <comment_count>62</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-05-26 13:46:11 -0400</bug_when>
    <thetext>On my first RC2-based build I still see this bug, which made me look at the
plugin version in that build:
   org.eclipse.core.resources_3.8.0.v20120511-1410.jar
Looking at the git history it looks like platform resources forgot to
contribute to RC2? Integration hasn&apos;t been updated for 10 days.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2114804</commentid>
    <comment_count>63</comment_count>
    <who name="John Arthorne">john_arthorne</who>
    <bug_when>2012-05-27 14:25:16 -0400</bug_when>
    <thetext>(In reply to comment #62)
&gt; On my first RC2-based build I still see this bug, which made me look at the
&gt; plugin version in that build:
&gt;    org.eclipse.core.resources_3.8.0.v20120511-1410.jar
&gt; Looking at the git history it looks like platform resources forgot to
&gt; contribute to RC2? Integration hasn&apos;t been updated for 10 days.

You&apos;re right. This extra manual step is too error prone. I have updated integration.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2122171</commentid>
    <comment_count>64</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-06-10 10:45:29 -0400</bug_when>
    <thetext>The bug has not occurred in the Object Teams build since adopting the fix.

Thanks!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2236576</commentid>
    <comment_count>65</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-03-26 06:10:23 -0400</bug_when>
    <thetext>(In reply to comment #16)
&gt; Now that M6 is out, I have pushed the troubleshooting changes here:
&gt; http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/
&gt; ?id=e84db8d4c6681c452df342e0bb55c2450eb0a239

This code is still present in master and we don&apos;t need it anymore. I will remove it for M7.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2237561</commentid>
    <comment_count>66</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-03-28 03:00:38 -0400</bug_when>
    <thetext>(In reply to comment #65)
&gt; This code is still present in master and we don&apos;t need it anymore. I will
&gt; remove it for M7.

Done via df26c679ec361eae61785b6b440639645b574764.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>212774</attachid>
            <date>2012-03-16 05:54:00 -0400</date>
            <delta_ts>2012-03-16 05:54:35 -0400</delta_ts>
            <desc>More troubleshooting logs</desc>
            <filename>Bug367669.patch</filename>
            <type>text/plain</type>
            <size>7408</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9BYnN0cmFjdEphdmFNb2RlbFRlc3RzLmphdmEgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvbW9kZWwvQWJzdHJhY3RKYXZhTW9kZWxUZXN0cy5qYXZhCmluZGV4IDM3ZWRkY2QuLjhh
NmEwYzggMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9BYnN0cmFjdEphdmFNb2RlbFRlc3RzLmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL21vZGVsL0Fic3RyYWN0SmF2YU1vZGVsVGVzdHMuamF2YQpAQCAtMjc0
OSw3ICsyNzQ5LDYgQEAKIAl9CiAJcHVibGljIHZvaWQgc2V0VXBTdWl0ZSgpIHRocm93cyBFeGNl
cHRpb24gewogCQlzdXBlci5zZXRVcFN1aXRlKCk7Ci0KIAkJLy8gZW5zdXJlIGF1dG9idWlsZGlu
ZyBpcyB0dXJuZWQgb2ZmCiAJCUlXb3Jrc3BhY2VEZXNjcmlwdGlvbiBkZXNjcmlwdGlvbiA9IGdl
dFdvcmtzcGFjZSgpLmdldERlc2NyaXB0aW9uKCk7CiAJCWlmIChkZXNjcmlwdGlvbi5pc0F1dG9C
dWlsZGluZygpKSB7CkBAIC0yNzU5LDcgKzI3NTgsNyBAQAogCX0KIAlwcm90ZWN0ZWQgdm9pZCBz
ZXRVcCAoKSB0aHJvd3MgRXhjZXB0aW9uIHsKIAkJc3VwZXIuc2V0VXAoKTsKLQorCQlTeXN0ZW0u
c2V0UHJvcGVydHkoImpkdC5idWcuMzY3NjY5IiwgIm5vbi1udWxsIik7CiAJCWlmIChOYW1lTG9v
a3VwLlZFUkJPU0UgfHwgQmFzaWNTZWFyY2hFbmdpbmUuVkVSQk9TRSB8fCBKYXZhTW9kZWxNYW5h
Z2VyLlZFUkJPU0UpIHsKIAkJCVN5c3RlbS5vdXQucHJpbnRsbigiLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0iKTsKIAkJCVN5c3RlbS5vdXQucHJpbnRsbigiUnVubmluZyB0ZXN0ICIrZ2V0TmFtZSgp
KyIuLi4iKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3Ny
Yy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9BdHRhY2hTb3VyY2VUZXN0cy5qYXZh
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL21vZGVsL0F0dGFjaFNvdXJjZVRlc3RzLmphdmEKaW5kZXggMjZhNjJlMS4uMzNh
MDNlNSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0F0dGFjaFNvdXJjZVRlc3RzLmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL21vZGVsL0F0dGFjaFNvdXJjZVRlc3RzLmphdmEKQEAgLTEwLDcgKzEwLDYgQEAK
ICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5tb2RlbDsKIAotaW1wb3J0IGphdmEuaW8uQnVmZmVyZWRJbnB1dFN0cmVhbTsKIGltcG9y
dCBqYXZhLmlvLkZpbGU7CiBpbXBvcnQgamF2YS5pby5GaWxlT3V0cHV0U3RyZWFtOwogaW1wb3J0
IGphdmEuaW8uSU9FeGNlcHRpb247CkBAIC01MSw3ICs1MCw2IEBACiBpbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLmNsYXNzZm10LkNsYXNzRmlsZUNvbnN0YW50czsKIGlt
cG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5FeHRlcm5hbEZvbGRlcnNNYW5hZ2Vy
OwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkphclBhY2thZ2VGcmFnbWVu
dFJvb3Q7Ci1pbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuSmF2YU1vZGVsTWFu
YWdlcjsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5KYXZhUHJvamVjdDsK
IGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS51dGlsLlV0aWw7CiAKQEAgLTUw
NywzMyArNTA1LDcgQEAKIAogCQlTdHJpbmcgZXh0ZXJuYWxMaWIgPSBleHRlcm5hbEZvbGRlciAr
ICIvbGliIjsKIAkJSUphdmFQcm9qZWN0IGphdmFQcm9qZWN0ID0gbnVsbDsKLQkJdHJ5IHsKLQkJ
CWphdmFQcm9qZWN0ID0gY3JlYXRlSmF2YVByb2plY3QoIlAiLCBuZXcgU3RyaW5nWzBdLCBuZXcg
U3RyaW5nW10ge2V4dGVybmFsTGlifSwgIiIpOwotCQl9Ci0JCWNhdGNoIChFeGNlcHRpb24gZSkg
ewotCQkJSUZvbGRlciBmb2xkZXIgPSBnZXRGb2xkZXIoZXh0ZXJuYWxMaWIpOwotCQkJU3lzdGVt
Lm91dC5wcmludGxuKCItLS0tLS0tLS0tICBUaGlzIGluZm9ybWF0aW9uIGlzIGxvZ2dlZCBmb3Ig
ZGVidWdnaW5nIHB1cnBvc2VzIGFzIHRoaXMgdGVzdCBmYWlscyBzcG9yYWRpY2FsbHkuLS0tLS0t
LS0tIik7Ci0JCQlTeXN0ZW0ub3V0LnByaW50bG4oIkZhaWxpbmcgd2hlbiBjcmVhdGluZyBMaW5r
IGZvbGRlciBmb3I6ICIgKyBleHRlcm5hbEZvbGRlcik7Ci0JCQlTeXN0ZW0ub3V0LnByaW50bG4o
IkV4aXN0aW5nPyAiICsgZm9sZGVyLmV4aXN0cygpKTsKLQkJCUlQcm9qZWN0IGV4dGVybmFsRm9s
ZGVyUHJvamVjdCA9IEphdmFNb2RlbE1hbmFnZXIuZ2V0RXh0ZXJuYWxNYW5hZ2VyKCkuZ2V0RXh0
ZXJuYWxGb2xkZXJzUHJvamVjdCgpOwotCQkJSUZpbGUgZXh0ZXJuYWxQcm9qZWN0RmlsZSA9IGV4
dGVybmFsRm9sZGVyUHJvamVjdC5nZXRGaWxlKCIucHJvamVjdCIpOwotCQkJaWYgKGV4dGVybmFs
UHJvamVjdEZpbGUuZXhpc3RzKCkpIHsKLQkJCQlTeXN0ZW0ub3V0LnByaW50bG4oIkV4dGVybmFs
IEZvbGRlciBQcm9qZWN0IGV4aXN0cyB3aXRoIGZvbGxvd2luZyBjb250ZW50OiIpOwotCQkJCUJ1
ZmZlcmVkSW5wdXRTdHJlYW0gYnMgPSBuZXcgQnVmZmVyZWRJbnB1dFN0cmVhbShleHRlcm5hbFBy
b2plY3RGaWxlLmdldENvbnRlbnRzKCkpOwotCQkJCWludCBhdmFpbGFibGUgPSAwOwotCQkJCXdo
aWxlICgoYXZhaWxhYmxlID0gYnMuYXZhaWxhYmxlKCkpID4gMCkgewotCQkJCQlieXRlW10gY29u
dGVudHMgPSBuZXcgYnl0ZVthdmFpbGFibGVdOwotCQkJCQlicy5yZWFkKGNvbnRlbnRzKTsKLQkJ
CQkJU3lzdGVtLm91dC5wcmludGxuKG5ldyBTdHJpbmcoY29udGVudHMpKTsKLQkJCQl9Ci0JCQkJ
YnMuY2xvc2UoKTsKLQkJCX0KLQkJCWVsc2UgewotCQkJCVN5c3RlbS5vdXQucHJpbnRsbigiRXh0
ZXJuYWwgZm9sZGVycyBwcm9qZWN0IGRvZXNuJ3QgZXhpc3QuIik7Ci0JCQl9Ci0JCQlTeXN0ZW0u
b3V0LnByaW50bG4oIi0tLS0tLS0tLS0gIERlYnVnIGluZm9ybWF0aW9uIGVuZHMgLS0tLS0tLS0t
Iik7Ci0JCQl0aHJvdyBlOwotCQl9CisJCWphdmFQcm9qZWN0ID0gY3JlYXRlSmF2YVByb2plY3Qo
IlAiLCBuZXcgU3RyaW5nWzBdLCBuZXcgU3RyaW5nW10ge2V4dGVybmFsTGlifSwgIiIpOwogCQlJ
UGFja2FnZUZyYWdtZW50Um9vdCByb290ID0gamF2YVByb2plY3QuZ2V0UGFja2FnZUZyYWdtZW50
Um9vdChleHRlcm5hbExpYik7CiAJCWF0dGFjaFNvdXJjZShyb290LCBleHRlcm5hbEZvbGRlciAr
ICIvc3JjMjI4NjM5IiwgIiIpOwogCQlJVHlwZSB0eXBlID0gcm9vdC5nZXRQYWNrYWdlRnJhZ21l
bnQoInAiKS5nZXRDbGFzc0ZpbGUoIlguY2xhc3MiKS5nZXRUeXBlKCk7CmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9F
eHRlcm5hbEZvbGRlcnNNYW5hZ2VyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9tb2RlbC9v
cmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9FeHRlcm5hbEZvbGRlcnNNYW5hZ2VyLmphdmEK
aW5kZXggOTI4YjZkMS4uOWFkNzNjOCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
bW9kZWwvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvRXh0ZXJuYWxGb2xkZXJzTWFuYWdl
ci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL21vZGVsL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb3JlL0V4dGVybmFsRm9sZGVyc01hbmFnZXIuamF2YQpAQCAtMTEsNiArMTEsNyBA
QAogICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb3JlOwogCitpbXBvcnQgamF2YS5pby5CdWZmZXJlZElucHV0U3RyZWFtOwogaW1wb3J0
IGphdmEuaW8uRmlsZTsKIGltcG9ydCBqYXZhLmlvLkZpbGVPdXRwdXRTdHJlYW07CiBpbXBvcnQg
amF2YS5pby5JT0V4Y2VwdGlvbjsKQEAgLTI0LDYgKzI1LDcgQEAKIGltcG9ydCBqYXZhLnV0aWwu
U2V0OwogaW1wb3J0IGphdmEudXRpbC5WZWN0b3I7CiAKK2ltcG9ydCBvcmcuZWNsaXBzZS5jb3Jl
LnJlc291cmNlcy5JRmlsZTsKIGltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJlc291cmNlcy5JRm9s
ZGVyOwogaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucmVzb3VyY2VzLklQcm9qZWN0OwogaW1wb3J0
IG9yZy5lY2xpcHNlLmNvcmUucmVzb3VyY2VzLklQcm9qZWN0RGVzY3JpcHRpb247CkBAIC0xNDks
MTAgKzE1MSw0NiBAQAogCQkJCQkJCQkJSVByb2plY3QgZXh0ZXJuYWxGb2xkZXJzUHJvamVjdCwg
SVByb2dyZXNzTW9uaXRvciBtb25pdG9yKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CiAJCQogCQlJ
Rm9sZGVyIHJlc3VsdCA9IGFkZEZvbGRlcihleHRlcm5hbEZvbGRlclBhdGgsIGV4dGVybmFsRm9s
ZGVyc1Byb2plY3QsIGZhbHNlKTsKLQkJaWYgKCFyZXN1bHQuZXhpc3RzKCkpCi0JCQlyZXN1bHQu
Y3JlYXRlTGluayhleHRlcm5hbEZvbGRlclBhdGgsIElSZXNvdXJjZS5BTExPV19NSVNTSU5HX0xP
Q0FMLCBtb25pdG9yKTsKLQkJZWxzZSBpZiAocmVmcmVzaElmRXhpc3RBbHJlYWR5KQotCQkJcmVz
dWx0LnJlZnJlc2hMb2NhbChJUmVzb3VyY2UuREVQVEhfSU5GSU5JVEUsICBtb25pdG9yKTsKKwkJ
dHJ5IHsKKwkJCWlmICghcmVzdWx0LmV4aXN0cygpKQorCQkJCXJlc3VsdC5jcmVhdGVMaW5rKGV4
dGVybmFsRm9sZGVyUGF0aCwgSVJlc291cmNlLkFMTE9XX01JU1NJTkdfTE9DQUwsIG1vbml0b3Ip
OworCQkJZWxzZSBpZiAocmVmcmVzaElmRXhpc3RBbHJlYWR5KQorCQkJCXJlc3VsdC5yZWZyZXNo
TG9jYWwoSVJlc291cmNlLkRFUFRIX0lORklOSVRFLCAgbW9uaXRvcik7CisJCX0KKwkJY2F0Y2go
SWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uIGUpIHsKKwkJCWlmIChTeXN0ZW0uZ2V0UHJvcGVydHko
ImpkdC5idWcuMzY3NjY5IikgIT0gbnVsbCkgeyAvLyROT04tTkxTLTEkCisJCQkJU3lzdGVtLm91
dC5wcmludGxuKCI9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT0iKTsgLy8kTk9OLU5MUy0xJAorCQkJCVN5c3RlbS5vdXQucHJpbnRsbigiVGhlIGZvbGxv
d2luZyBsb2dzIGFyZSBjcmVhdGVkIGZvciB0cm91Ymxlc2hvb3RpbmcgYnVnOiBodHRwczovL2J1
Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzY3NjY5Iik7IC8vJE5PTi1OTFMt
MSQKKwkJCQlTeXN0ZW0ub3V0LnByaW50bG4oIkV4dGVyYWwgZm9sZGVyOiAiICsgZXh0ZXJuYWxG
b2xkZXJQYXRoKTsgLy8kTk9OLU5MUy0xJAorCQkJCVN5c3RlbS5vdXQucHJpbnRsbigiTGluayBm
b2xkZXI6ICIgKyByZXN1bHQudG9TdHJpbmcoKSk7IC8vJE5PTi1OTFMtMSQKKwkJCQlGaWxlIGV4
dGVybmFsRmlsZSA9IG5ldyBGaWxlKGV4dGVybmFsRm9sZGVyUGF0aC50b09TU3RyaW5nKCkpOwor
CQkJCVN5c3RlbS5vdXQucHJpbnRsbihleHRlcm5hbEZpbGUuZXhpc3RzKCkgPyAiRXh0ZXJuYWwg
Zm9sZGVyIGV4aXN0cyIgOiAiRVJST1I6IEV4dGVybmFsIGZvbGRlciBET0VTIE5PVCBleGlzdCIp
OyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJCQlTeXN0ZW0ub3V0LnByaW50bG4ocmVz
dWx0LmV4aXN0cygpID8gIkxpbmsgZm9yIGZvbGRlciBleGlzdHMiIDogIkVSUk9SOiBMaW5rIGZv
ciBmb2xkZXIgZG9lcyBub3QgZXhpc3QiKTsgIC8vJE5PTi1OTFMtMSQvLyROT04tTkxTLTIkCisJ
CQkJSVByb2plY3QgZXh0ZXJuYWxGb2xkZXJQcm9qZWN0ID0gZ2V0RXh0ZXJuYWxGb2xkZXJzUHJv
amVjdCgpOworCQkJCUlGaWxlIGV4dGVybmFsUHJvamVjdEZpbGUgPSBleHRlcm5hbEZvbGRlclBy
b2plY3QuZ2V0RmlsZShJUHJvamVjdERlc2NyaXB0aW9uLkRFU0NSSVBUSU9OX0ZJTEVfTkFNRSk7
CisJCQkJaWYgKGV4dGVybmFsUHJvamVjdEZpbGUuZXhpc3RzKCkpIHsKKwkJCQkJU3lzdGVtLm91
dC5wcmludGxuKCJFeHRlcm5hbCBGb2xkZXIgUHJvamVjdCBleGlzdHMgd2l0aCBmb2xsb3dpbmcg
Y29udGVudDoiKTsgLy8kTk9OLU5MUy0xJAorCQkJCQlCdWZmZXJlZElucHV0U3RyZWFtIGJzID0g
bmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0oZXh0ZXJuYWxQcm9qZWN0RmlsZS5nZXRDb250ZW50cygp
KTsKKwkJCQkJaW50IGF2YWlsYWJsZSA9IDA7CisJCQkJCXRyeSB7CisJCQkJCQl3aGlsZSAoKGF2
YWlsYWJsZSA9IGJzLmF2YWlsYWJsZSgpKSA+IDApIHsKKwkJCQkJCQlieXRlW10gY29udGVudHMg
PSBuZXcgYnl0ZVthdmFpbGFibGVdOworCQkJCQkJCWJzLnJlYWQoY29udGVudHMpOworCQkJCQkJ
CVN5c3RlbS5vdXQucHJpbnRsbihuZXcgU3RyaW5nKGNvbnRlbnRzKSk7CisJCQkJCQl9CisJCQkJ
CQlicy5jbG9zZSgpOworCQkJCQl9IGNhdGNoIChJT0V4Y2VwdGlvbiBlMSkgeworCQkJCQkJU3lz
dGVtLm91dC5wcmludGxuKCJFcnJvciByZWFkaW5nIGV4dGVybmFsIGZvbGRlciBwcm9qZWN0IGZp
bGU6IEhlcmUgaXMgdGhlIHN0YWNrIHRyYWNlOiIpOyAvLyROT04tTkxTLTEkCisJCQkJCQllMS5w
cmludFN0YWNrVHJhY2UoKTsKKwkJCQkJfQorCQkJCX0KKwkJCQllbHNlIHsKKwkJCQkJU3lzdGVt
Lm91dC5wcmludGxuKCJFUlJPUjogRXh0ZXJuYWwgZm9sZGVycyBwcm9qZWN0IGRvZXNuJ3QgZXhp
c3QuIik7IC8vJE5PTi1OTFMtMSQKKwkJCQl9CisJCQkJU3lzdGVtLm91dC5wcmludGxuKCI9PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gRGVidWcgaW5mb3JtYXRpb24g
ZW5kcyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0iKTsgLy8kTk9O
LU5MUy0xJAorCQkJfQorCQkJdGhyb3cgZTsKKwkJfQogCQlyZXR1cm4gcmVzdWx0OwogCX0KIA==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>214571</attachid>
            <date>2012-04-25 18:21:00 -0400</date>
            <delta_ts>2012-04-25 18:21:05 -0400</delta_ts>
            <desc>plugin project containing JUnit plugin test that reproduces the exception</desc>
            <filename>bug367669-test-project.zip</filename>
            <type>application/zip</type>
            <size>7669</size>
            <attacher name="Kris De Volder">kdevolder</attacher>
            
              <data encoding="base64">UEsDBBQACAAIAEtwmUAAAAAAAAAAAAAAAAAlAAAAYnVnMzY3NjY5LWV4dGVybmFsLWZvbGRlcnMv
LmNsYXNzcGF0aJWQwWoCMRCGz/UpltydrZfiYVcpZQsV1KJbryUmwzptOomTROrb60KlRWiht/mH
bz5+ppp+frjigBLJc61GcKsKZOMtcVerl/ZxOFbTyaAyTscYdNpNBjffATnJsXgntrUynlXRL2vl
pQM0jkJEeLMJnM5sdmcjzFbN68Ny0d4/LZpVec0RJxTWDixucweZvi5RYJ00Wy12M2+PAcuZPuh1
MxzBnSr/2yhYBOMFQXCfSdA+u9wRxz9MUczF1I+/gz6nkNOF3RL3bFX++N4JUEsHCElK+7bOAAAA
cQEAAFBLAwQUAAgACABLcJlAAAAAAAAAAAAAAAAAIwAAAGJ1ZzM2NzY2OS1leHRlcm5hbC1mb2xk
ZXJzLy5wcm9qZWN0vZLdSgMxEIWv7VOUvd+sRVgV0i1U8U4Rqg+QJtOYkkxCfkof3+xuWtyKIAje
nTM5Mx/MhK6ORs8P4IOyuKwW5LqaA3IrFMpl9f72VN9Vq25Gnbd74PERAvfKxRzuZlcUmYFum+RN
e9u29zUcI3hkut5ZLfJI2gyBHOTWGMDY0eakcrHMDL1uvpptUlpsHPBsinvIbQxFXyhY6yUBrpUL
QPYiEm59FuzAhjz4Mzw3MC9TTw2jbSaeNpeE3yCdAPLMUO0gxPW/ETf8Awz7M68UyoozKiYPY3TU
38CvOkmFL8Njzx1CP+Qn18DLlpPMuPPVJ9/qE1BLBwi6Dq059AAAAJMCAABQSwMEFAAIAAgA7XOZ
QAAAAAAAAAAAAAAAACsAAABidWczNjc2NjktZXh0ZXJuYWwtZm9sZGVycy9idWlsZC5wcm9wZXJ0
aWVzK84vLUpO1dNTsFUoLkrW58ovLSkoLQHzkzLz9LmAhF5mXnJOaUpqMVDM1zXEUdfTz01fJ4ZL
ARXoYQoV5JSmA/VX5OZwAQBQSwcIVCxpykcAAABoAAAAUEsDBBQACAAIAO1zmUAAAAAAAAAAAAAA
AAAlAAAAYnVnMzY3NjY5LWV4dGVybmFsLWZvbGRlcnMvcGx1Z2luLnhtbH2QsW7DMAxEd3+FoL10
gnbIINuDgxQFujX9AEEiHAYKJYhKEfTrm9hJjC7mJvHwjnemu5yC+sEsFLnRa1hpheyiJx4a/b3f
vWx011amQxcoCc7SV3gbNymcB+K2UkoZvBTk2/r2miZF4tLomAe4I+DoC7iYEVywIsmWQx+5WGLM
H0yFbKBfzLq9Q8yibHa6zqhstIsnkJSvESSes0OQIjBk6wNOxl6Ch/fxY/v1ue0X7/jnQH4ZP5Kf
B7sHbw5TL6aZaqyfPbZVZepHw39QSwcI7ROQo80AAACsAQAAUEsDBBQACAAIAEtwmUAAAAAAAAAA
AAAAAAA/AAAAYnVnMzY3NjY5LWV4dGVybmFsLWZvbGRlcnMvLnNldHRpbmdzL29yZy5lY2xpcHNl
LmpkdC5jb3JlLnByZWZzlY6xCgIxEER7P2bhGrs0dlr5C/Eyd6wkmzCbE/x7I1zv2QzDMA8e5qzN
IY1YQNgMlxfoWi1Mp8pVsD+eqctciRGlaQZHSVhhopbVcHNe3h3fMcDiIyMd5Hvkin7PsS+VJUxy
/gmWljUO2QPnxjpcikR3sF8TrOuiYABZeRCGbeVP1OvGXfADUEsHCASgyI+HAAAAZQEAAFBLAwQU
AAgACAAkdplAAAAAAAAAAAAAAAAALwAAAGJ1ZzM2NzY2OS1leHRlcm5hbC1mb2xkZXJzL01FVEEt
SU5GL01BTklGRVNULk1GfZBBTsMwEEX3OUXUNbZoQQFSdUGlbJCKEJXYO84kTOWM6diOGk5P2sQV
VBXyzu99z3xvFGENzosPYIeW8nQub5N1oMqA2EzwzBaRvKoW8nQdmrvsIcueBBw8MCkjamuqwY7e
tm9La1CPfhl9GX05+UuH1Bjww5CV5wAx/3ur4eyDMlgjcOTP2mOnvOX/HpdnK3mHfUAGMcbz1HIj
QRv8ciC1ZZAcyGMLN8kJ7QKhX5bjrG7cZTW7l49yMZuUv2lwNrAGdwF3lT8JV66NCqQ/h/YXlYZJ
b8ef6/PUqO8+0qlAVRxAh6NUUIdsqQXyefqiOrUtxFxmyQ9QSwcIcuzPXvgAAADZAQAAUEsDBBQA
CAAIACCCM0AAAAAAAAAAAAAAAAA6AAAAYnVnMzY3NjY5LWV4dGVybmFsLWZvbGRlcnMvZHNsU3Vw
cG9ydC9kc2xkL0dyYWRsZURTTEQuZHNsZKVSy07DMBA8x19h5dAkEkruIE4tElwQov0B194EU2NH
awdRofLtbNpEuFVpqTj4sI+Zndl1K+RKNMCVN+qGMQU1X3baqLlE3QZ+y2tt4O4jgPXa2TxtUCgD
acEn/KsvPYo3yFMPIWjb+HIsb4nG7B7XKUCL7hVk3xlrmHDZIYINi3ULeeawGVClaHX5tMNkBWP5
Pkr7xQu9HlQUpZASKP3JWULDZ2CgEQHOUCZVpYZOv3A8UPc1/62dbUjCaGHCwUrjPJmcCmO2rjOE
ljLBoQafRZrOSxIYdC1k8CUdqnweedb3wlIL/lXqORq24ec8KGjBKir808Ns5Ik80AKr6uCKP2KG
X/BAICLSgHn6Dth/yzTWUVVJtIh8HpD0Fwnlj9HHn6QP7ZQMd7iLLjnhwdjLDzjoWxonV7OYaW/k
1cU3LY6SSmdr3XQoAu3vNO00bqUgCG23vOwbUEsHCEbn15ZYAQAAPQQAAFBLAwQUAAgACACEc5lA
AAAAAAAAAAAAAAAASAAAAGJ1ZzM2NzY2OS1leHRlcm5hbC1mb2xkZXJzL3NyYy9idWczNjc2Njkv
ZXh0ZXJuYWwvZm9sZGVycy9BY3RpdmF0b3IuamF2Ya2ST0sDMRDFz5tPMdTLVjA9CBUpgn+RiqhQ
PEs2na6x2cySzLYV6Xc3bteVFaUiPSUkeb95byal0nOVI2RVfjg8Gg6PJa4YvVNWzshO0YeREKYo
yTOQzyWF3MiZVwUuyc/leeWmFs80m4Vi8qOtTy/IcawQoWWVWaNBWxUCtASIAIsFOg7wDQ5vQiSN
KrDiuMxMNAoT9sbl8HD7eD2+expfwgn0fs/TG4kkcvwHFD9BHXOgW5PJj/c5crNN+9FVknjkyrsv
XbKO0sG+SGAfUkfu4EYt1JR0vz45DYh/aOZerO053dbKmjloO7MgM4WNsms664iAnz0tA1ytNJZs
yNU52tqyiRJbmXXntqtoVP4zWRTuJpirrG3ydH9VXchSnt5nL6gZcDPkyWtgLCRVLOPvcWxdiv0N
QKzFO1BLBwiTPvOFOwEAAEkDAABQSwMEFAAIAAgAV3iZQAAAAAAAAAAAAAAAAEYAAABidWczNjc2
NjktZXh0ZXJuYWwtZm9sZGVycy9zcmMvYnVnMzY3NjY5L2V4dGVybmFsL2ZvbGRlcnMvQnVnVGVz
dC5qYXZhxVXfb9s2EH6O/oqDn+QmobMUS9G5HZbZTuc0cQ3b7R6GIWAkWmZKkwJ5susW/d97pH7Y
TdIkeygmSDZFfne877s7qvPsp10RPIOeyTdWZguEOGnD8dEvxzDNrdTZ1BQ2EQfAIZUr6aTRYObw
4XLNLc0OdcLgVCkItg6scMKuRMrI50+7OlHOk488E3BdZM9PXpycvGTiEwqruWJzo1JhXTeK5DI3
FuGGrzgrUCp2ai3fXEiH3btr5XQzX2iJbG75UqyN/chmwmGPO7FFGJsxkSiZO8ESYwUj5kEpx4Zn
IYTuU6Bja25Egk/CTqrhU8A11o1VkUn9gEmhUS4FGxVKUTAZuXCXhtib+wncpFgaDnuKO5dzXAw0
2s0j4HMS+iGuDdIDezT4IUrxQicLKswAnZThb/OSmCVzoXBLAZhDxzLLU1URTp1K2Zsw0Z9e9BsW
PaORS72Tt0ddhcIZcSyseE9DX3OdspsoLMCFdMDphnNfTZCHTABSKTGYcZsJP8dxbuwSCFqRPJQ6
lZk5nPTGh9PJsW8k8M8fvMCFsfDWErYv4EMoMlqhbiiulUwg8VTgzyLz1Qq+IXTqoC5d+BJFe8Rm
xVGAQ45kMZfUMTBFzxHGk3fng97sanR6OYDX0Lqmwm91vVHpfmVkGqIfYtwmdtasHQw+JSJHfyh8
ifb2iArEUiNIcnDUpb9X8OuRH+zvtwNib7pxKJbMFMi8tKh03OpZQeHo7Ddo7ct218P80+mEBUEK
4iaXCYXqUw55WUceUvdPPUfb3qp8RjL/TUwox4mI2/51YgyWo8o63qVe7l/5Y0mIINZiDfd0SNz+
Hm1yoR/D7tQLE9rROK7MD+CHpgdQ9wUbnc7eTwZXw37pbrezwnE2bpRoTCoS1TZbgf2Z9+pWH/9e
lpF/Jxc+oObUvAONS1eNAeNpGu90pZe4L+a8UHg+GTQNFoxrOXZCZo5yw9fNJvHWMZoQRdD2VhT/
bFFOfqYU/9t+QMgt+eqUBmeTavS6riIfdzkXt2i5VRo1wFpPtAV9AcvfRza8K1FIDFmVn9dSku0O
PgDvzavQ/r+Veuiw9HxmJt6J7fuOsGJOXhcXhro3br5grD8Yz/66Go7OhqPhbPCkKO47OPpCiVsH
R71x6pf+U47o+Rr5O/oafQNQSwcID+jiBGIDAABtCQAAUEsDBBQACAAIAKBzmUAAAAAAAAAAAAAA
AABmAAAAYnVnMzY3NjY5LWV4dGVybmFsLWZvbGRlcnMvc3JjL2NvbS9zcHJpbmdzb3VyY2Uvc3Rz
L2dyYWRsZS9jb3JlL2RzbGQvR3JhZGxlRFNMRENsYXNzcGF0aENvbnRhaW5lci5qYXZhtVZtUxs3
EP6Mf8XiD+EcGJE0M3Qa1526Nsm4GPAEmi+dDCPu1rbgfHIkHeB0+O9dSSffnV8wX+IBny3tPvv6
7Pr47U97NeAt9OR8ocRkaiCKW/DLu/fv4WquRDa5krmK8Qg4JOJBaCEzkGP4ev7IFZ0OsphBN03B
6WpQqFE9YMII86e9jhtzHt/zCUIsZ0w7N7Vzk2mj2UTxJEUWS4Us0WnSbjTEbC6VgTv+wJmQ7JNI
sb16OLg8fYpxbijC+l1uRMq6SvHFUGiz7U5vuPDy4VyqCcM4FXNdOKfyzIgZOneGMuZGqvZO4cGI
m+lusYs8TUdKTqgg+lxm4lXYr4MepdyMpZptlLxLjJce9FKu9ZwQezIzXGS42YENCqeZUYsdwn9T
kim+O4zNy5JWsEcfdkudywTT9R6w8lJPBBsrPsNHqe7ZX3mW2A4KIrf55MPJrycnvzF8MqgynrKx
TBNUmnVjIx58ZRvHnmp/8txMpYIzJTT0Eb46Ubqhvs5vUxFDbDMBn10f96+G/fVUAllOcYYZcW5D
puG/xl5jr0DThht6jAX5BVfGsgUGfehA8yX6WOawOCDHAbnZdsjKBoWwUrN/vwF5pARqQs+oAyno
4MW66ARN7YzUopb1fE+MISqAOh2L44/3liT8fQXtD2fXXVnL+AjbRaNW22LxJLGp/eSSHy3V/WUZ
xfKCGekwI4u+GkwppcUPjFrfHMwz/Ss0ucpCWtrQoNMyfw9SJFD35DUx+nTQF58W347Uhe7RgUBQ
Rhn2d9GyDdlo+M/nwcXNoO8jtbOn0HQfO1CZRiWAPYy8mNezJaqo7ft6w5s3FTBiAzlri1o/Frov
FBFXqkXUKkrrHaGmu8rnjlO+jBW79uMRNEuRpvfEuVKe1oxWjjca3SsLR1WIwqxgZHoobhVXC5d6
V3M7HKt2jPRcIrQjF3x4H/NUY6tw7hmQvgVzZRlSOYmaPZmnSXZgLDeTj3DQPCzxD5sHIUDbR3Wg
FZxrJYlkCDyOadxbfptpqKqD3VD+wyZw7bZ6kRUG8RTje1LlBgT9aSjWbOIkMzjAp3lKQzLxPRH8
s+49AzVMPIWoskUBA21r3mLgxnNlRhVjifqtjzpWwgEU06CgUNPPQ7BcAV20QLvgk0cRmbEQZ5TN
uu6GEcnObrqj0XDQ614PLi/qOG7HWiRX8xrSshM8gSpKxZi9lTJFSpbQl5mz6qUr+wrm/rnC4vUB
uZy+RIZCxzLyC39cihbDjNhOqa8DAMLHEiJ0vCWL0JXVEvLhGx1LahQBG5VjtQ2rxV7fmrtqHlAd
R9r1YbiWwK1erkVaKxHud8IsQpsvJ+N7otNZUWW90elN7/Liuju4OP2yVPF1ZxondsVG71oMv+fk
8taqh0F+LbeU2kyVfNSwIWNh4e3XOyZoFvk8Pr7M0oU14bg5pndtJwcRXSEs0FihzWuj2kY7VqP/
Jcu4ttfR1p4rhtsSeG14rtSrSpr6fAwm9IqJEvqltVtKhbV75CLc8OOXnLbL18+dxnPjf1BLBwiz
tBqPdQQAAE8NAABQSwMEFAAIAAgAZXOZQAAAAAAAAAAAAAAAAHEAAABidWczNjc2NjktZXh0ZXJu
YWwtZm9sZGVycy9zcmMvY29tL3NwcmluZ3NvdXJjZS9zdHMvZ3JhZGxlL2NvcmUvZHNsZC9HcmFk
bGVEU0xEQ2xhc3NwYXRoQ29udGFpbmVySW5pdGlhbGl6ZXIuamF2YZWUz27bMAzGz/JT8DYnCNQH
CAJsSIohw7YWWG/DDopNu+ocSROltF2Rdx8l51/TLNkOhiHr44/kJ8pOVT9Vi1DZpSTntWnJRl+h
pECy9aruUFbWo6ypq8dFoZfO+gDWtxKrTjvabPtogl6i/ECEPowv6qa8uH6q0AVtzWX5/FaF+8uy
r7Hrbr1tPRJ9sUYH6y8H/RX9UIdeOe0UkWPZ1JqgtEE/Z7ZWnf6NpxPsQudvYy8EfFIrxT08YHXa
xp0yCZONfCouLjpdQZVywcd8arNvn2dn6wZ8CmhqKoQ4r3spCnE1HBYChnB3j2ANgjI1v7tn0IaC
MhV/bSDwZp8cUnaeqQ1NQjmN3qMJHMEqj++oD2fWCBYxMCeHNzFEj5BzZSEs1TMsEGrdNJgIeypB
jY474JllzmH2FW/yWMmEuSoEj/VKBQSuNLBL5/xJlP1iAoYHalwIZvQO/6O35YBdE2s27v0NF+N1
jTvEyuqa291qyzza+67SagSHUwCufw+4OG8fCV7dnZRI9LdOarrzEctXLIm/ouqoNPgIaV2ea0HO
Z4PBgBsWuoHy0IvJJFmR2xLi2CRGn6OWmbjmZzuykjCc0B2ZkFKJBD904/sPeNkYsh7l1CeuWBId
FrlRnvg9lLnddTrit0d1s8j+t1ysXTrlNVkzn/3PiSW7PPJMG6Do2OBj1hFlG5hrKtbFH1BLBwj8
T9TIDQIAAJ8FAABQSwMEFAAIAAgADHGZQAAAAAAAAAAAAAAAAFUAAABidWczNjc2NjktZXh0ZXJu
YWwtZm9sZGVycy9zcmMvY29tL3NwcmluZ3NvdXJjZS9zdHMvZ3JhZGxlL2NvcmUvdXRpbC9OYXR1
cmVVdGlscy5qYXZh3VTBUtswED3HX7Gc6jAZpfRYCkMGaOtpCR0CXDoMI+yNLbAlV5KTUoZ/70q2
Sdy6wAUOzcDE1mp33759L+PNF/sEsAn7qrzVIs0shPEQ3r3d2oJZqYVMZ6rSMY6AQyIWwgglQc3h
/GjJNZ1GMmYwyXPwuQY0GtQLTBjVfLHPOCh5fMNThFgVzHiYxsNkxhqWap7kyGKlkVVW5NtBIIpS
aQvXfMH9Efsq5A0mn7nJZmi3/4770/ZY6ZRhnIvSNFVpSt/OsOibVtcYr0o84+4BmliL0hKVz0o7
aR4fuVxJKwpk+/Ry+DPGp2o31x2glBqZIyWFVZomHtdq2OOVzZSGL1oYOEA4V3mCmiJEfXWVixji
nBsDU24rjWfEmIG7IBi49AHlH/EbBEMhkk1ZTw0ZN/Qmq+IKtZOQxh+V0JiA9EUMg2gONsP2HUhg
IJWFW7RUhIQlLckwSdylgiJL5nvt2UyrpYHO8OBC42DQoDWWW/paKJEASgcsbLfR4iMt/0EHFEqO
YGadvBhjDnA9rxlCb8+7YDDoWTIk9Aw7bSOW4no0HG5TWt3l+wUQ0U2TidaU5HJdRn0YJaa5j/ZD
nbP7wNcOSFxCR9ntnTppTjOF9QlIeN8ZyGEftJsgkkPpU+570joQH80UcwjbiBG/MBzudpJZjjK1
WVNjPJ6pYrX+lFZP5TBxMU+DWaehrWsVFeK3oZu9YbHb8mLo8Qxa+k2Xfld55FZdowbMDbZ4pspT
+iBIh2YEV5WlYxKuVUDFQFj3RCzF6NblNa00+YWwvAb2hx8INjk/jg4up5PTs5PDy/3j6cfo09po
Af2tLHqChVqgt6RvCXOtipVdGZxm5P1E0RUyYeaWL2p/toZ2MfnGGXuBa8Zl/7ae9j17rNeqq2Go
34v/iev67OOMsiEZ/SLyvJVHlAybaI+7vL36Lbax86TH6nXW23hde9G/l+F98BtQSwcIbRZNsc8C
AADQCAAAUEsBAhQAFAAIAAgAS3CZQElK+7bOAAAAcQEAACUAAAAAAAAAAAAAAAAAAAAAAGJ1ZzM2
NzY2OS1leHRlcm5hbC1mb2xkZXJzLy5jbGFzc3BhdGhQSwECFAAUAAgACABLcJlAug6tOfQAAACT
AgAAIwAAAAAAAAAAAAAAAAAhAQAAYnVnMzY3NjY5LWV4dGVybmFsLWZvbGRlcnMvLnByb2plY3RQ
SwECFAAUAAgACADtc5lAVCxpykcAAABoAAAAKwAAAAAAAAAAAAAAAABmAgAAYnVnMzY3NjY5LWV4
dGVybmFsLWZvbGRlcnMvYnVpbGQucHJvcGVydGllc1BLAQIUABQACAAIAO1zmUDtE5CjzQAAAKwB
AAAlAAAAAAAAAAAAAAAAAAYDAABidWczNjc2NjktZXh0ZXJuYWwtZm9sZGVycy9wbHVnaW4ueG1s
UEsBAhQAFAAIAAgAS3CZQASgyI+HAAAAZQEAAD8AAAAAAAAAAAAAAAAAJgQAAGJ1ZzM2NzY2OS1l
eHRlcm5hbC1mb2xkZXJzLy5zZXR0aW5ncy9vcmcuZWNsaXBzZS5qZHQuY29yZS5wcmVmc1BLAQIU
ABQACAAIACR2mUBy7M9e+AAAANkBAAAvAAAAAAAAAAAAAAAAABoFAABidWczNjc2NjktZXh0ZXJu
YWwtZm9sZGVycy9NRVRBLUlORi9NQU5JRkVTVC5NRlBLAQIUABQACAAIACCCM0BG59eWWAEAAD0E
AAA6AAAAAAAAAAAAAAAAAG8GAABidWczNjc2NjktZXh0ZXJuYWwtZm9sZGVycy9kc2xTdXBwb3J0
L2RzbGQvR3JhZGxlRFNMRC5kc2xkUEsBAhQAFAAIAAgAhHOZQJM+84U7AQAASQMAAEgAAAAAAAAA
AAAAAAAALwgAAGJ1ZzM2NzY2OS1leHRlcm5hbC1mb2xkZXJzL3NyYy9idWczNjc2NjkvZXh0ZXJu
YWwvZm9sZGVycy9BY3RpdmF0b3IuamF2YVBLAQIUABQACAAIAFd4mUAP6OIEYgMAAG0JAABGAAAA
AAAAAAAAAAAAAOAJAABidWczNjc2NjktZXh0ZXJuYWwtZm9sZGVycy9zcmMvYnVnMzY3NjY5L2V4
dGVybmFsL2ZvbGRlcnMvQnVnVGVzdC5qYXZhUEsBAhQAFAAIAAgAoHOZQLO0Go91BAAATw0AAGYA
AAAAAAAAAAAAAAAAtg0AAGJ1ZzM2NzY2OS1leHRlcm5hbC1mb2xkZXJzL3NyYy9jb20vc3ByaW5n
c291cmNlL3N0cy9ncmFkbGUvY29yZS9kc2xkL0dyYWRsZURTTERDbGFzc3BhdGhDb250YWluZXIu
amF2YVBLAQIUABQACAAIAGVzmUD8T9TIDQIAAJ8FAABxAAAAAAAAAAAAAAAAAL8SAABidWczNjc2
NjktZXh0ZXJuYWwtZm9sZGVycy9zcmMvY29tL3NwcmluZ3NvdXJjZS9zdHMvZ3JhZGxlL2NvcmUv
ZHNsZC9HcmFkbGVEU0xEQ2xhc3NwYXRoQ29udGFpbmVySW5pdGlhbGl6ZXIuamF2YVBLAQIUABQA
CAAIAAxxmUBtFk2xzwIAANAIAABVAAAAAAAAAAAAAAAAAGsVAABidWczNjc2NjktZXh0ZXJuYWwt
Zm9sZGVycy9zcmMvY29tL3NwcmluZ3NvdXJjZS9zdHMvZ3JhZGxlL2NvcmUvdXRpbC9OYXR1cmVV
dGlscy5qYXZhUEsFBgAAAAAMAAwAIgUAAL0YAAAAAA==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>214761</attachid>
            <date>2012-04-28 10:18:00 -0400</date>
            <delta_ts>2012-04-28 10:18:51 -0400</delta_ts>
            <desc>console log of a good test run</desc>
            <filename>GOOD.txt</filename>
            <type>text/plain</type>
            <size>2809</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">RGVsZXRpbmc6IDc4CltUaHJlYWRbbWFpbiw1LG1haW5dXSBub0FsaWFzZXMgUC9ib3JrID0gdHJ1
ZQpbVGhyZWFkW21haW4sNSxtYWluXV0gY2hhbmdlZFByb2plY3RzPXRydWUgKDEpCkNyZWF0aW5n
OiA3OQo9PTE9PQo9PTI9PQpbVGhyZWFkW1dvcmtlci00LDUsbWFpbl1dIE1fTElOSwpbVGhyZWFk
W1dvcmtlci00LDUsbWFpbl1dIE1fTElOSwpbVGhyZWFkW1dvcmtlci00LDUsbWFpbl1dIFBSRV9M
SU5LX0RFTEVURTogRi8ub3JnLmVjbGlwc2UuamR0LmNvcmUuZXh0ZXJuYWwuZm9sZGVycy8ubGlu
azc4CltUaHJlYWRbV29ya2VyLTQsNSxtYWluXV0gTV9MSU5LCltUaHJlYWRbV29ya2VyLTQsNSxt
YWluXV0gPj4+IFJFTU9WRSBGLy5vcmcuZWNsaXBzZS5qZHQuY29yZS5leHRlcm5hbC5mb2xkZXJz
Ly5saW5rNzggYXQgL2hvbWUvc3RlcGhhbi93b3Jrc3BhY2VzL2pkdC1jb3JlLWdpdC9idWczNjc2
NjktZXh0ZXJuYWwtZm9sZGVycy9kc2xTdXBwb3J0CltUaHJlYWRbV29ya2VyLTQsNSxtYWluXV0g
PDwgUkVNT1ZFIG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwucmVzb3VyY2VzLkFsaWFzTWFuYWdl
ciRMb2NhdGlvbk1hcEAxZTA2ZGU4IGZhbHNlCltUaHJlYWRbV29ya2VyLTQsNSxtYWluXV0gdXBk
YXRlU3RydWN0dXJlQ2hhbmdlcyBjaGFuZ2VkUHJvamVjdHM9dHJ1ZQpbVGhyZWFkW1dvcmtlci00
LDUsbWFpbl1dIG5vQWxpYXNlcyBQLy5vcmcuZWNsaXBzZS5qZHQuY29yZS5leHRlcm5hbC5mb2xk
ZXJzID0gdHJ1ZQpbVGhyZWFkW1dvcmtlci00LDUsbWFpbl1dIG5vQWxpYXNlcyBQLy5vcmcuZWNs
aXBzZS5qZHQuY29yZS5leHRlcm5hbC5mb2xkZXJzID0gdHJ1ZQpbVGhyZWFkW21haW4sNSxtYWlu
XV0gbm9BbGlhc2VzIFAvYm9yayA9IHRydWUKW1RocmVhZFttYWluLDUsbWFpbl1dIGNoYW5nZWRQ
cm9qZWN0cz10cnVlICgxKQo9PTM9PQpbVGhyZWFkW21haW4sNSxtYWluXV0gdXBkYXRlU3RydWN0
dXJlQ2hhbmdlcyBjaGFuZ2VkUHJvamVjdHM9dHJ1ZQpbVGhyZWFkW21haW4sNSxtYWluXV0gbm9B
bGlhc2VzIFAvYm9yayA9IHRydWUKW1RocmVhZFttYWluLDUsbWFpbl1dY2hhbmdlZFByb2plY3Rz
PXRydWUgKDIpIGNoYW5nZWQ9W1Jlc291cmNlRGVsdGEoL2JvcmspXQo9PTQ9PQpbVGhyZWFkW21h
aW4sNSxtYWluXV0gdXBkYXRlU3RydWN0dXJlQ2hhbmdlcyBjaGFuZ2VkUHJvamVjdHM9dHJ1ZQpb
VGhyZWFkW21haW4sNSxtYWluXV0gbm9BbGlhc2VzIFAvYm9yayA9IHRydWUKW1RocmVhZFttYWlu
LDUsbWFpbl1dY2hhbmdlZFByb2plY3RzPXRydWUgKDIpIGNoYW5nZWQ9W1Jlc291cmNlRGVsdGEo
L2JvcmspXQo9PTU9PQo9PTY9PQpbVGhyZWFkW21haW4sNSxtYWluXV0gdXBkYXRlU3RydWN0dXJl
Q2hhbmdlcyBjaGFuZ2VkUHJvamVjdHM9dHJ1ZQpbVGhyZWFkW21haW4sNSxtYWluXV0gbm9BbGlh
c2VzIFAvYm9yayA9IHRydWUKPT03PT0KPT04PT0KW1RocmVhZFttYWluLDUsbWFpbl1dIG5vQWxp
YXNlcyBQL2JvcmsgPSB0cnVlCj09OT09Cj09QT09CltUaHJlYWRbbWFpbiw1LG1haW5dXSBub0Fs
aWFzZXMgUC9ib3JrID0gdHJ1ZQo9PUI9PQpbVGhyZWFkW21haW4sNSxtYWluXV0gbm9BbGlhc2Vz
IFAvLm9yZy5lY2xpcHNlLmpkdC5jb3JlLmV4dGVybmFsLmZvbGRlcnMgPSB0cnVlCltUaHJlYWRb
bWFpbiw1LG1haW5dXSBub0FsaWFzZXMgUC8ub3JnLmVjbGlwc2UuamR0LmNvcmUuZXh0ZXJuYWwu
Zm9sZGVycyA9IHRydWUKVHJ5IGNyZWF0aW5nIEYvLm9yZy5lY2xpcHNlLmpkdC5jb3JlLmV4dGVy
bmFsLmZvbGRlcnMvLmxpbms3OQpbVGhyZWFkW21haW4sNSxtYWluXV0gUFJFX0xJTktfQ1JFQVRF
OiBGLy5vcmcuZWNsaXBzZS5qZHQuY29yZS5leHRlcm5hbC5mb2xkZXJzLy5saW5rNzkKW1RocmVh
ZFttYWluLDUsbWFpbl1dIHVwZGF0ZVN0cnVjdHVyZUNoYW5nZXMgY2hhbmdlZFByb2plY3RzPWZh
bHNlCltUaHJlYWRbbWFpbiw1LG1haW5dXSBNX0xJTksKW1RocmVhZFttYWluLDUsbWFpbl1dIGxp
bmtlZDogRi8ub3JnLmVjbGlwc2UuamR0LmNvcmUuZXh0ZXJuYWwuZm9sZGVycy8ubGluazc5CltU
aHJlYWRbbWFpbiw1LG1haW5dXSBhZGRUb0xvY2F0aW9uc01hcDpGLy5vcmcuZWNsaXBzZS5qZHQu
Y29yZS5leHRlcm5hbC5mb2xkZXJzLy5saW5rNzkgc3RvcmUgL2hvbWUvc3RlcGhhbi93b3Jrc3Bh
Y2VzL2pkdC1jb3JlLWdpdC9idWczNjc2NjktZXh0ZXJuYWwtZm9sZGVycy9kc2xTdXBwb3J0CltU
aHJlYWRbbWFpbiw1LG1haW5dXSBub0FsaWFzZXMgUC8ub3JnLmVjbGlwc2UuamR0LmNvcmUuZXh0
ZXJuYWwuZm9sZGVycyA9IHRydWUKY3JlYXRlIHJlc291cmNlIE5vZGU6IC8ub3JnLmVjbGlwc2Uu
amR0LmNvcmUuZXh0ZXJuYWwuZm9sZGVycy8ubGluazc5L2RzbGQgdG8gRi8ub3JnLmVjbGlwc2Uu
amR0LmNvcmUuZXh0ZXJuYWwuZm9sZGVycy8ubGluazc5L2RzbGQKW1RocmVhZFttYWluLDUsbWFp
bl1dIG5vQWxpYXNlcyBQLy5vcmcuZWNsaXBzZS5qZHQuY29yZS5leHRlcm5hbC5mb2xkZXJzID0g
dHJ1ZQpjcmVhdGUgcmVzb3VyY2UgTm9kZTogLy5vcmcuZWNsaXBzZS5qZHQuY29yZS5leHRlcm5h
bC5mb2xkZXJzLy5saW5rNzkvZHNsZC9HcmFkbGVEU0xELmRzbGQgdG8gTC8ub3JnLmVjbGlwc2Uu
amR0LmNvcmUuZXh0ZXJuYWwuZm9sZGVycy8ubGluazc5L2RzbGQvR3JhZGxlRFNMRC5kc2xkCltU
aHJlYWRbbWFpbiw1LG1haW5dXSBub0FsaWFzZXMgUC8ub3JnLmVjbGlwc2UuamR0LmNvcmUuZXh0
ZXJuYWwuZm9sZGVycyA9IHRydWUKW1RocmVhZFttYWluLDUsbWFpbl1dIG5vQWxpYXNlcyBQL2Jv
cmsgPSB0cnVlCj09Qz09Cg==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>214762</attachid>
            <date>2012-04-28 10:19:00 -0400</date>
            <delta_ts>2012-04-28 10:19:25 -0400</delta_ts>
            <desc>console log of a bad iteration</desc>
            <filename>BAD.txt</filename>
            <type>text/plain</type>
            <size>3839</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">RGVsZXRpbmc6IDc5CltUaHJlYWRbbWFpbiw1LG1haW5dXSBub0FsaWFzZXMgUC9ib3JrID0gdHJ1
ZQpbVGhyZWFkW21haW4sNSxtYWluXV0gY2hhbmdlZFByb2plY3RzPXRydWUgKDEpCkNyZWF0aW5n
OiA4MAo9PTE9PQo9PTI9PQpbVGhyZWFkW21haW4sNSxtYWluXV0gdXBkYXRlU3RydWN0dXJlQ2hh
bmdlcyBjaGFuZ2VkUHJvamVjdHM9dHJ1ZQpbVGhyZWFkW21haW4sNSxtYWluXV0gYWRkVG9Mb2Nh
dGlvbnNNYXA6Ri8ub3JnLmVjbGlwc2UuamR0LmNvcmUuZXh0ZXJuYWwuZm9sZGVycy8ubGluazc5
IHN0b3JlIC9ob21lL3N0ZXBoYW4vd29ya3NwYWNlcy9qZHQtY29yZS1naXQvYnVnMzY3NjY5LWV4
dGVybmFsLWZvbGRlcnMvZHNsU3VwcG9ydApbVGhyZWFkW21haW4sNSxtYWluXV0gbm9BbGlhc2Vz
IFAvYm9yayA9IHRydWUKW1RocmVhZFttYWluLDUsbWFpbl1dIGNoYW5nZWRQcm9qZWN0cz10cnVl
ICgxKQo9PTM9PQpbVGhyZWFkW21haW4sNSxtYWluXV0gdXBkYXRlU3RydWN0dXJlQ2hhbmdlcyBj
aGFuZ2VkUHJvamVjdHM9dHJ1ZQpbVGhyZWFkW21haW4sNSxtYWluXV0gYWRkVG9Mb2NhdGlvbnNN
YXA6Ri8ub3JnLmVjbGlwc2UuamR0LmNvcmUuZXh0ZXJuYWwuZm9sZGVycy8ubGluazc5IHN0b3Jl
IC9ob21lL3N0ZXBoYW4vd29ya3NwYWNlcy9qZHQtY29yZS1naXQvYnVnMzY3NjY5LWV4dGVybmFs
LWZvbGRlcnMvZHNsU3VwcG9ydApbVGhyZWFkW21haW4sNSxtYWluXV0gbm9BbGlhc2VzIFAvYm9y
ayA9IHRydWUKW1RocmVhZFttYWluLDUsbWFpbl1dY2hhbmdlZFByb2plY3RzPXRydWUgKDIpIGNo
YW5nZWQ9W1Jlc291cmNlRGVsdGEoL2JvcmspXQo9PTQ9PQpbVGhyZWFkW21haW4sNSxtYWluXV0g
dXBkYXRlU3RydWN0dXJlQ2hhbmdlcyBjaGFuZ2VkUHJvamVjdHM9dHJ1ZQpbVGhyZWFkW21haW4s
NSxtYWluXV0gYWRkVG9Mb2NhdGlvbnNNYXA6Ri8ub3JnLmVjbGlwc2UuamR0LmNvcmUuZXh0ZXJu
YWwuZm9sZGVycy8ubGluazc5IHN0b3JlIC9ob21lL3N0ZXBoYW4vd29ya3NwYWNlcy9qZHQtY29y
ZS1naXQvYnVnMzY3NjY5LWV4dGVybmFsLWZvbGRlcnMvZHNsU3VwcG9ydApbVGhyZWFkW21haW4s
NSxtYWluXV0gbm9BbGlhc2VzIFAvYm9yayA9IHRydWUKW1RocmVhZFttYWluLDUsbWFpbl1dY2hh
bmdlZFByb2plY3RzPXRydWUgKDIpIGNoYW5nZWQ9W1Jlc291cmNlRGVsdGEoL2JvcmspXQo9PTU9
PQo9PTY9PQpbVGhyZWFkW21haW4sNSxtYWluXV0gdXBkYXRlU3RydWN0dXJlQ2hhbmdlcyBjaGFu
Z2VkUHJvamVjdHM9dHJ1ZQpbVGhyZWFkW21haW4sNSxtYWluXV0gYWRkVG9Mb2NhdGlvbnNNYXA6
Ri8ub3JnLmVjbGlwc2UuamR0LmNvcmUuZXh0ZXJuYWwuZm9sZGVycy8ubGluazc5IHN0b3JlIC9o
b21lL3N0ZXBoYW4vd29ya3NwYWNlcy9qZHQtY29yZS1naXQvYnVnMzY3NjY5LWV4dGVybmFsLWZv
bGRlcnMvZHNsU3VwcG9ydApbVGhyZWFkW21haW4sNSxtYWluXV0gbm9BbGlhc2VzIFAvYm9yayA9
IHRydWUKPT03PT0KPT04PT0KW1RocmVhZFtXb3JrZXItMiw1LG1haW5dXSBNX0xJTksKW1RocmVh
ZFtXb3JrZXItMiw1LG1haW5dXSBNX0xJTksKW1RocmVhZFtXb3JrZXItMiw1LG1haW5dXSBQUkVf
TElOS19ERUxFVEU6IEYvLm9yZy5lY2xpcHNlLmpkdC5jb3JlLmV4dGVybmFsLmZvbGRlcnMvLmxp
bms3OQpbVGhyZWFkW1dvcmtlci0yLDUsbWFpbl1dIE1fTElOSwpbVGhyZWFkW1dvcmtlci0yLDUs
bWFpbl1dID4+PiBSRU1PVkUgRi8ub3JnLmVjbGlwc2UuamR0LmNvcmUuZXh0ZXJuYWwuZm9sZGVy
cy8ubGluazc5IGF0IC9ob21lL3N0ZXBoYW4vd29ya3NwYWNlcy9qZHQtY29yZS1naXQvYnVnMzY3
NjY5LWV4dGVybmFsLWZvbGRlcnMvZHNsU3VwcG9ydApbVGhyZWFkW1dvcmtlci0yLDUsbWFpbl1d
IDw8IFJFTU9WRSBvcmcuZWNsaXBzZS5jb3JlLmludGVybmFsLnJlc291cmNlcy5BbGlhc01hbmFn
ZXIkTG9jYXRpb25NYXBAMWUwNmRlOCBmYWxzZQpbVGhyZWFkW1dvcmtlci0yLDUsbWFpbl1dIHVw
ZGF0ZVN0cnVjdHVyZUNoYW5nZXMgY2hhbmdlZFByb2plY3RzPWZhbHNlCltUaHJlYWRbV29ya2Vy
LTIsNSxtYWluXV0gTV9MSU5LCltUaHJlYWRbV29ya2VyLTIsNSxtYWluXV0gbGlua2VkOiBGLy5v
cmcuZWNsaXBzZS5qZHQuY29yZS5leHRlcm5hbC5mb2xkZXJzLy5saW5rNzkKW1RocmVhZFtXb3Jr
ZXItMiw1LG1haW5dXSBhZGRUb0xvY2F0aW9uc01hcDpGLy5vcmcuZWNsaXBzZS5qZHQuY29yZS5l
eHRlcm5hbC5mb2xkZXJzLy5saW5rNzkgc3RvcmUgL2hvbWUvc3RlcGhhbi93b3Jrc3BhY2VzL2pk
dC1jb3JlLWdpdC9idWczNjc2NjktZXh0ZXJuYWwtZm9sZGVycy9kc2xTdXBwb3J0CltUaHJlYWRb
V29ya2VyLTIsNSxtYWluXV0gbm9BbGlhc2VzIFAvLm9yZy5lY2xpcHNlLmpkdC5jb3JlLmV4dGVy
bmFsLmZvbGRlcnMgPSB0cnVlCltUaHJlYWRbV29ya2VyLTIsNSxtYWluXV0gbm9BbGlhc2VzIFAv
Lm9yZy5lY2xpcHNlLmpkdC5jb3JlLmV4dGVybmFsLmZvbGRlcnMgPSB0cnVlCltUaHJlYWRbbWFp
biw1LG1haW5dXSBub0FsaWFzZXMgUC9ib3JrID0gdHJ1ZQo9PTk9PQo9PUE9PQpbVGhyZWFkW21h
aW4sNSxtYWluXV0gbm9BbGlhc2VzIFAvYm9yayA9IHRydWUKPT1CPT0KW1RocmVhZFttYWluLDUs
bWFpbl1dIG5vQWxpYXNlcyBQLy5vcmcuZWNsaXBzZS5qZHQuY29yZS5leHRlcm5hbC5mb2xkZXJz
ID0gdHJ1ZQpbVGhyZWFkW21haW4sNSxtYWluXV0gbm9BbGlhc2VzIFAvLm9yZy5lY2xpcHNlLmpk
dC5jb3JlLmV4dGVybmFsLmZvbGRlcnMgPSB0cnVlClRyeSBjcmVhdGluZyBGLy5vcmcuZWNsaXBz
ZS5qZHQuY29yZS5leHRlcm5hbC5mb2xkZXJzLy5saW5rODAKW1RocmVhZFttYWluLDUsbWFpbl1d
IFBSRV9MSU5LX0NSRUFURTogRi8ub3JnLmVjbGlwc2UuamR0LmNvcmUuZXh0ZXJuYWwuZm9sZGVy
cy8ubGluazgwCltUaHJlYWRbbWFpbiw1LG1haW5dXSB1cGRhdGVTdHJ1Y3R1cmVDaGFuZ2VzIGNo
YW5nZWRQcm9qZWN0cz1mYWxzZQpbVGhyZWFkW21haW4sNSxtYWluXV0gTV9MSU5LCltUaHJlYWRb
bWFpbiw1LG1haW5dXSBsaW5rZWQ6IEYvLm9yZy5lY2xpcHNlLmpkdC5jb3JlLmV4dGVybmFsLmZv
bGRlcnMvLmxpbms4MApbVGhyZWFkW21haW4sNSxtYWluXV0gYWRkVG9Mb2NhdGlvbnNNYXA6Ri8u
b3JnLmVjbGlwc2UuamR0LmNvcmUuZXh0ZXJuYWwuZm9sZGVycy8ubGluazgwIHN0b3JlIC9ob21l
L3N0ZXBoYW4vd29ya3NwYWNlcy9qZHQtY29yZS1naXQvYnVnMzY3NjY5LWV4dGVybmFsLWZvbGRl
cnMvZHNsU3VwcG9ydApbVGhyZWFkW21haW4sNSxtYWluXV0gbm9BbGlhc2VzIFAvLm9yZy5lY2xp
cHNlLmpkdC5jb3JlLmV4dGVybmFsLmZvbGRlcnMgPSBmYWxzZQpbVGhyZWFkW21haW4sNSxtYWlu
XV1BbGlhc01hbmFnZXIgdmFsdWU9UC8ub3JnLmVjbGlwc2UuamR0LmNvcmUuZXh0ZXJuYWwuZm9s
ZGVycwpjcmVhdGUgcmVzb3VyY2UgTm9kZTogLy5vcmcuZWNsaXBzZS5qZHQuY29yZS5leHRlcm5h
bC5mb2xkZXJzLy5saW5rODAvZHNsZCB0byBGLy5vcmcuZWNsaXBzZS5qZHQuY29yZS5leHRlcm5h
bC5mb2xkZXJzLy5saW5rODAvZHNsZApbVGhyZWFkW21haW4sNSxtYWluXV0gbm9BbGlhc2VzIFAv
Lm9yZy5lY2xpcHNlLmpkdC5jb3JlLmV4dGVybmFsLmZvbGRlcnMgPSBmYWxzZQpbVGhyZWFkW21h
aW4sNSxtYWluXV1BbGlhc01hbmFnZXIgdmFsdWU9W0YvLm9yZy5lY2xpcHNlLmpkdC5jb3JlLmV4
dGVybmFsLmZvbGRlcnMvLmxpbms3OSwgRi8ub3JnLmVjbGlwc2UuamR0LmNvcmUuZXh0ZXJuYWwu
Zm9sZGVycy8ubGluazgwXQpBTElBUyBGLy5vcmcuZWNsaXBzZS5qZHQuY29yZS5leHRlcm5hbC5m
b2xkZXJzLy5saW5rNzkvZHNsZAo=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>214763</attachid>
            <date>2012-04-28 10:20:00 -0400</date>
            <delta_ts>2012-04-28 10:20:53 -0400</delta_ts>
            <desc>AliasManager.java with debug sysouts</desc>
            <filename>AliasManager.java</filename>
            <type>text/x-java</type>
            <size>29247</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioKICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEyIElCTSBD
b3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dy
YW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1
bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogKiB3aGlj
aCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdAogKiBo
dHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAogKiAKICogQ29udHJpYnV0
b3JzOgogKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0
aW9uCiAqICAgICBtYW5rbHVAd2ViLmRlIC0gZml4IGZvciBidWcgMTU2MDgyCiAqICAgICBCZXJ0
IFZpbmdlcmhvZXRzIC0gZml4IGZvciBidWcgMTY5OTc1CiAqICAgICBTZXJnZSBCZWF1Y2hhbXAg
KEZyZWVzY2FsZSBTZW1pY29uZHVjdG9yKSAtIFsyMjk2MzNdIEZpeCBDb25jdXJlbmN5IEV4Y2Vw
dGlvbgogKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KcGFja2FnZSBvcmcuZWNsaXBzZS5jb3JlLmlu
dGVybmFsLnJlc291cmNlczsKCmltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuSVBhdGg7
CgppbXBvcnQgamF2YS5uZXQuVVJJOwppbXBvcnQgamF2YS51dGlsLio7CmltcG9ydCBvcmcuZWNs
aXBzZS5jb3JlLmZpbGVzeXN0ZW0uRUZTOwppbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5maWxlc3lz
dGVtLklGaWxlU3RvcmU7CmltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLmludGVybmFsLmV2ZW50cy5J
TGlmZWN5Y2xlTGlzdGVuZXI7CmltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLmludGVybmFsLmV2ZW50
cy5MaWZlY3ljbGVFdmVudDsKaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwubG9jYWxz
dG9yZS5GaWxlU3lzdGVtUmVzb3VyY2VNYW5hZ2VyOwppbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5p
bnRlcm5hbC51dGlscy5NZXNzYWdlczsKaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwu
dXRpbHMuUG9saWN5OwppbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5yZXNvdXJjZXMuKjsKaW1wb3J0
IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS4qOwppbXBvcnQgb3JnLmVjbGlwc2Uub3NnaS51dGls
Lk5MUzsKCi8qKgogKiBBbiBhbGlhcyBpcyBhIHJlc291cmNlIHRoYXQgb2NjdXBpZXMgdGhlIHNh
bWUgZmlsZSBzeXN0ZW0gbG9jYXRpb24gYXMgYW5vdGhlcgogKiByZXNvdXJjZSBpbiB0aGUgd29y
a3NwYWNlLiAgV2hlbiBhIHJlc291cmNlIGlzIG1vZGlmaWVkIGluIGEgd2F5IHRoYXQgYWZmZWN0
cwogKiB0aGUgZmlsZSBvbiBkaXNrLCBhbGwgYWxpYXNlcyBuZWVkIHRvIGJlIHVwZGF0ZWQuICBU
aGlzIGNsYXNzIGlzIHVzZWQgdG8KICogbWFpbnRhaW4gZGF0YSBzdHJ1Y3R1cmVzIGZvciBxdWlj
a2x5IGNvbXB1dGluZyB0aGUgc2V0IG9mIGFsaWFzZXMgZm9yIGEgZ2l2ZW4KICogcmVzb3VyY2Us
IGFuZCBmb3IgZWZmaWNpZW50bHkgdXBkYXRpbmcgYWxsIGFsaWFzZXMgd2hlbiBhIHJlc291cmNl
IGNoYW5nZXMgb24KICogZGlzay4KICogCiAqIFRoZSBhcHByb2FjaCBmb3IgY29tcHV0aW5nIGFs
aWFzZXMgaXMgb3B0aW1pemVkIGZvciBhbGlhcy1mcmVlIHdvcmtzcGFjZXMgYW5kCiAqIGFsaWFz
LWZyZWUgcHJvamVjdHMuICBUaGF0IGlzLCBpZiB0aGUgd29ya3NwYWNlIGNvbnRhaW5zIG5vIGFs
aWFzZXMsIHRoZW4KICogdXBkYXRpbmcgc2hvdWxkIGJlIHZlcnkgcXVpY2suICBJZiBhIHJlc291
cmNlIGlzIGNoYW5nZWQgaW4gYSBwcm9qZWN0IHRoYXQKICogY29udGFpbnMgbm8gYWxpYXNlcywg
aXQgc2hvdWxkIGFsc28gYmUgdmVyeSBmYXN0LgogKiAKICogVGhlIGRhdGEgc3RydWN0dXJlcyBt
YWludGFpbmVkIGJ5IHRoZSBhbGlhcyBtYW5hZ2VyIGNhbiBiZSBzZWVuIGFzIGEgY2FjaGUsCiAq
IHRoYXQgaXMsIHRoZXkgc3RvcmUgbm8gaW5mb3JtYXRpb24gdGhhdCBjYW5ub3QgYmUgcmVjb21w
dXRlZCBmcm9tIG90aGVyCiAqIGF2YWlsYWJsZSBpbmZvcm1hdGlvbi4gIE9uIHNodXRkb3duLCB0
aGUgYWxpYXMgbWFuYWdlciBkaXNjYXJkcyBhbGwgc3RhdGU7IG9uCiAqIHN0YXJ0dXAsIHRoZSBh
bGlhcyBtYW5hZ2VyIGVhZ2VybHkgcmVidWlsZHMgaXRzIHN0YXRlLiAgVGhlIHJlYXNvbmluZyBp
cwogKiB0aGF0IGl0J3MgYmV0dGVyIHRvIGluY3VyIHRoaXMgY29zdCBvbiBzdGFydHVwIHRoYW4g
b24gdGhlIGZpcnN0IGF0dGVtcHQgdG8KICogbW9kaWZ5IGEgcmVzb3VyY2UuICBBZnRlciBzdGFy
dHVwLCB0aGUgc3RhdGUgaXMgdXBkYXRlZCBpbmNyZW1lbnRhbGx5IG9uIHRoZQogKiBmb2xsb3dp
bmcgb2NjYXNpb25zOiAKICogIC0gIHdoZW4gcHJvamVjdHMgYXJlIGRlbGV0ZWQsIG9wZW5lZCwg
Y2xvc2VkLCBvciBtb3ZlZCAKICogIC0gd2hlbiBsaW5rZWQgcmVzb3VyY2VzIGFyZSBjcmVhdGVk
LCBkZWxldGVkLCBvciBtb3ZlZC4KICovCnB1YmxpYyBjbGFzcyBBbGlhc01hbmFnZXIgaW1wbGVt
ZW50cyBJTWFuYWdlciwgSUxpZmVjeWNsZUxpc3RlbmVyLCBJUmVzb3VyY2VDaGFuZ2VMaXN0ZW5l
ciB7CglwdWJsaWMgY2xhc3MgQWRkVG9Db2xsZWN0aW9uRG9pdCBpbXBsZW1lbnRzIERvaXQgewoJ
CUNvbGxlY3Rpb248SVJlc291cmNlPiBjb2xsZWN0aW9uOwoKCQlwdWJsaWMgdm9pZCBkb2l0KElS
ZXNvdXJjZSByZXNvdXJjZSkgewppZiAoY29sbGVjdGlvbiA9PSBhbGlhc2VkUHJvamVjdHMpCglu
ZXcgUnVudGltZUV4Y2VwdGlvbigiWyIrVGhyZWFkLmN1cnJlbnRUaHJlYWQoKSsiXSBhZGQgdG8g
Y29sbGVjdGlvbiAiK3Jlc291cmNlKS5wcmludFN0YWNrVHJhY2UoU3lzdGVtLm91dCk7CgkJCWNv
bGxlY3Rpb24uYWRkKHJlc291cmNlKTsKCQl9CgoJCXB1YmxpYyB2b2lkIHNldENvbGxlY3Rpb24o
Q29sbGVjdGlvbjxJUmVzb3VyY2U+IGNvbGxlY3Rpb24pIHsKCQkJdGhpcy5jb2xsZWN0aW9uID0g
Y29sbGVjdGlvbjsKCQl9Cgl9CgoJaW50ZXJmYWNlIERvaXQgewoJCXB1YmxpYyB2b2lkIGRvaXQo
SVJlc291cmNlIHJlc291cmNlKTsKCX0KCgljbGFzcyBGaW5kQWxpYXNlc0RvaXQgaW1wbGVtZW50
cyBEb2l0IHsKCQlwcml2YXRlIGludCBhbGlhc1R5cGU7CgkJcHJpdmF0ZSBJUGF0aCBzZWFyY2hQ
YXRoOwoKCQlwdWJsaWMgdm9pZCBkb2l0KElSZXNvdXJjZSBtYXRjaCkgewoJCQkvL2Rvbid0IHJl
Y29yZCB0aGUgcmVzb3VyY2Ugd2UncmUgY29tcHV0aW5nIGFsaWFzZXMgYWdhaW5zdCBhcyBhIG1h
dGNoCgkJCWlmIChtYXRjaC5nZXRGdWxsUGF0aCgpLmlzUHJlZml4T2Yoc2VhcmNoUGF0aCkpCgkJ
CQlyZXR1cm47CgkJCUlQYXRoIGFsaWFzUGF0aCA9IG51bGw7CgkJCXN3aXRjaCAobWF0Y2guZ2V0
VHlwZSgpKSB7CgkJCQljYXNlIElSZXNvdXJjZS5QUk9KRUNUIDoKCQkJCQkvL2ZpcnN0IGNoZWNr
IGlmIHRoZXJlIGlzIGEgbGlua2VkIHJlc291cmNlIHRoYXQgYmxvY2tzIHRoZSBwcm9qZWN0IGxv
Y2F0aW9uCgkJCQkJaWYgKHN1ZmZpeC5zZWdtZW50Q291bnQoKSA+IDApIHsKCQkJCQkJSVJlc291
cmNlIHRlc3RSZXNvdXJjZSA9ICgoSVByb2plY3QpIG1hdGNoKS5maW5kTWVtYmVyKHN1ZmZpeC5z
ZWdtZW50KDApKTsKCQkJCQkJaWYgKHRlc3RSZXNvdXJjZSAhPSBudWxsICYmIHRlc3RSZXNvdXJj
ZS5pc0xpbmtlZCgpKQoJCQkJCQkJcmV0dXJuOwoJCQkJCX0KCQkJCQkvL3RoZXJlIGlzIGFuIGFs
aWFzIHVuZGVyIHRoaXMgcHJvamVjdAoJCQkJCWFsaWFzUGF0aCA9IG1hdGNoLmdldEZ1bGxQYXRo
KCkuYXBwZW5kKHN1ZmZpeCk7CgkJCQkJYnJlYWs7CgkJCQljYXNlIElSZXNvdXJjZS5GT0xERVIg
OgoJCQkJCWFsaWFzUGF0aCA9IG1hdGNoLmdldEZ1bGxQYXRoKCkuYXBwZW5kKHN1ZmZpeCk7CgkJ
CQkJYnJlYWs7CgkJCQljYXNlIElSZXNvdXJjZS5GSUxFIDoKCQkJCQlpZiAoc3VmZml4LnNlZ21l
bnRDb3VudCgpID09IDApCgkJCQkJCWFsaWFzUGF0aCA9IG1hdGNoLmdldEZ1bGxQYXRoKCk7CgkJ
CQkJYnJlYWs7CgkJCX0KCQkJaWYgKGFsaWFzUGF0aCAhPSBudWxsKQoJCQkJaWYgKGFsaWFzVHlw
ZSA9PSBJUmVzb3VyY2UuRklMRSkgewoJCQkJCWFsaWFzZXMuYWRkKHdvcmtzcGFjZS5nZXRSb290
KCkuZ2V0RmlsZShhbGlhc1BhdGgpKTsKCQkJCX0gZWxzZSB7CgkJCQkJaWYgKGFsaWFzUGF0aC5z
ZWdtZW50Q291bnQoKSA9PSAxKQoJCQkJCQlhbGlhc2VzLmFkZCh3b3Jrc3BhY2UuZ2V0Um9vdCgp
LmdldFByb2plY3QoYWxpYXNQYXRoLmxhc3RTZWdtZW50KCkpKTsKCQkJCQllbHNlCgkJCQkJCWFs
aWFzZXMuYWRkKHdvcmtzcGFjZS5nZXRSb290KCkuZ2V0Rm9sZGVyKGFsaWFzUGF0aCkpOwoJCQkJ
fQoJCX0KCgkJLyoqCgkJICogU2V0cyB0aGUgcmVzb3VyY2UgdGhhdCB3ZSBhcmUgc2VhcmNoaW5n
IGZvciBhbGlhc2VzIGZvci4KCQkgKi8KCQlwdWJsaWMgdm9pZCBzZXRTZWFyY2hBbGlhcyhJUmVz
b3VyY2UgYWxpYXNSZXNvdXJjZSkgewoJCQl0aGlzLmFsaWFzVHlwZSA9IGFsaWFzUmVzb3VyY2Uu
Z2V0VHlwZSgpOwoJCQl0aGlzLnNlYXJjaFBhdGggPSBhbGlhc1Jlc291cmNlLmdldEZ1bGxQYXRo
KCk7CgkJfQoJfQoKCS8qKgoJICogTWFpbnRhaW5zIGEgbWFwcGluZyBvZiBGaWxlU3RvcmUtPklS
ZXNvdXJjZSwgc3VjaCB0aGF0IG11bHRpcGxlIHJlc291cmNlcwoJICogbWFwcGVkIGZyb20gdGhl
IHNhbWUgbG9jYXRpb24gYXJlIHRvbGVyYXRlZC4KCSAqLwoJY2xhc3MgTG9jYXRpb25NYXAgewoJ
CS8qKgoJCSAqIE1hcCBvZiBGaWxlU3RvcmUtPklSZXNvdXJjZSBPUiBGaWxlU3RvcmUtPkFycmF5
TGlzdCBvZiAoSVJlc291cmNlKQoJCSAqLwoJCXByaXZhdGUgZmluYWwgU29ydGVkTWFwPElGaWxl
U3RvcmUsIE9iamVjdD4gbWFwID0gbmV3IFRyZWVNYXA8SUZpbGVTdG9yZSxPYmplY3Q+KGdldENv
bXBhcmF0b3IoKSk7CgoJCUV4Y2VwdGlvbiBmaXJzdEFkZCA9IG51bGw7CgoJCXByaXZhdGUgUnVu
dGltZUV4Y2VwdGlvbiByZW1vdmU7CgkJLyoqCgkJICogQWRkcyB0aGUgZ2l2ZW4gcmVzb3VyY2Ug
dG8gdGhlIG1hcCwga2V5ZWQgYnkgdGhlIGdpdmVuIGxvY2F0aW9uLgoJCSAqIFJldHVybnMgdHJ1
ZSBpZiBhIG5ldyBlbnRyeSB3YXMgYWRkZWQsIGFuZCBmYWxzZSBvdGhlcndpc2UuCgkJICovCgkJ
cHVibGljIGJvb2xlYW4gYWRkKElGaWxlU3RvcmUgbG9jYXRpb24sIElSZXNvdXJjZSByZXNvdXJj
ZSkgewoJCQlPYmplY3Qgb2xkVmFsdWUgPSBtYXAuZ2V0KGxvY2F0aW9uKTsKCQkJaWYgKG9sZFZh
bHVlID09IG51bGwpIHsKCQkJCW1hcC5wdXQobG9jYXRpb24sIHJlc291cmNlKTsKaWYgKGxvY2F0
aW9uLnRvU3RyaW5nKCkuZXF1YWxzKCIvaG9tZS9zdGVwaGFuL3dvcmtzcGFjZXMvamR0LWNvcmUt
Z2l0L2J1ZzM2NzY2OS1leHRlcm5hbC1mb2xkZXJzL2RzbFN1cHBvcnQiKSkKICB0aGlzLmZpcnN0
QWRkID0gbmV3IFJ1bnRpbWVFeGNlcHRpb24oIlsiK1RocmVhZC5jdXJyZW50VGhyZWFkKCkrIl1B
REQgRklSU1Q6ICIrdGhpcysiICIrcmVzb3VyY2UrIiBhdCAiK2xvY2F0aW9uKTsKCQkJCXJldHVy
biB0cnVlOwoJCQl9CgkJCWlmIChvbGRWYWx1ZSBpbnN0YW5jZW9mIElSZXNvdXJjZSkgewoJCQkJ
aWYgKHJlc291cmNlLmVxdWFscyhvbGRWYWx1ZSkpCgkJCQkJcmV0dXJuIGZhbHNlOy8vZHVwbGlj
YXRlCmlmICh0aGlzLnJlbW92ZSAhPSBudWxsKQoJdGhpcy5yZW1vdmUucHJpbnRTdGFja1RyYWNl
KCk7CmlmICh0aGlzLmZpcnN0QWRkICE9IG51bGwpCgl0aGlzLmZpcnN0QWRkLnByaW50U3RhY2tU
cmFjZSgpOwpuZXcgUnVudGltZUV4Y2VwdGlvbigiWyIrVGhyZWFkLmN1cnJlbnRUaHJlYWQoKSsi
XUFERCBEVVAgIit0aGlzKyIgIitvbGRWYWx1ZSsiICIrcmVzb3VyY2UrIiBhdCAiK2xvY2F0aW9u
KS5wcmludFN0YWNrVHJhY2UoU3lzdGVtLm91dCk7CgkJCQlBcnJheUxpc3Q8T2JqZWN0PiBuZXdW
YWx1ZSA9IG5ldyBBcnJheUxpc3Q8T2JqZWN0PigyKTsKCQkJCW5ld1ZhbHVlLmFkZChvbGRWYWx1
ZSk7CgkJCQluZXdWYWx1ZS5hZGQocmVzb3VyY2UpOwoJCQkJbWFwLnB1dChsb2NhdGlvbiwgbmV3
VmFsdWUpOwoJCQkJcmV0dXJuIHRydWU7CgkJCX0KCQkJQFN1cHByZXNzV2FybmluZ3MoInVuY2hl
Y2tlZCIpCgkJCUFycmF5TGlzdDxJUmVzb3VyY2U+IGxpc3QgPSAoQXJyYXlMaXN0PElSZXNvdXJj
ZT4pIG9sZFZhbHVlOwoJCQlpZiAobGlzdC5jb250YWlucyhyZXNvdXJjZSkpCgkJCQlyZXR1cm4g
ZmFsc2U7Ly9kdXBsaWNhdGUKCQkJbGlzdC5hZGQocmVzb3VyY2UpOwoJCQlyZXR1cm4gdHJ1ZTsK
CQl9CgoJCS8qKgoJCSAqIE1ldGhvZCBjbGVhci4KCQkgKi8KCQlwdWJsaWMgdm9pZCBjbGVhcigp
IHsKdGhpcy5maXJzdEFkZCA9IG51bGw7CnRoaXMucmVtb3ZlID0gbnVsbDsKCQkJbWFwLmNsZWFy
KCk7CgkJfQoKCQkvKioKCQkgKiBJbnZva2UgdGhlIGdpdmVuIGRvaXQgZm9yIGV2ZXJ5IHJlc291
cmNlIHdob3NlIGxvY2F0aW9uIGhhcyB0aGUKCQkgKiBnaXZlbiBsb2NhdGlvbiBhcyBhIHByZWZp
eC4KCQkgKi8KCQlwdWJsaWMgdm9pZCBtYXRjaGluZ1ByZWZpeERvKElGaWxlU3RvcmUgcHJlZml4
LCBEb2l0IGRvaXQpIHsKCQkJU29ydGVkTWFwPElGaWxlU3RvcmUsIE9iamVjdD4gbWF0Y2hpbmc7
CgkJCUlGaWxlU3RvcmUgcHJlZml4UGFyZW50ID0gcHJlZml4LmdldFBhcmVudCgpOwoJCQlpZiAo
cHJlZml4UGFyZW50ICE9IG51bGwpIHsKCQkJCS8vZW5kUG9pbnQgaXMgdGhlIHNtYWxsZXN0IHBv
c3NpYmxlIHBhdGggZ3JlYXRlciB0aGFuIHRoZSBwcmVmaXggdGhhdCBkb2Vzbid0CgkJCQkvL21h
dGNoIHRoZSBwcmVmaXgKCQkJCUlGaWxlU3RvcmUgZW5kUG9pbnQgPSBwcmVmaXhQYXJlbnQuZ2V0
Q2hpbGQocHJlZml4LmdldE5hbWUoKSArICJcMCIpOyAvLyROT04tTkxTLTEkCgkJCQltYXRjaGlu
ZyA9IG1hcC5zdWJNYXAocHJlZml4LCBlbmRQb2ludCk7CgkJCX0gZWxzZSB7CgkJCQltYXRjaGlu
ZyA9IG1hcDsKCQkJfQoJCQlmb3IgKEl0ZXJhdG9yPE9iamVjdD4gaXQgPSBtYXRjaGluZy52YWx1
ZXMoKS5pdGVyYXRvcigpOyBpdC5oYXNOZXh0KCk7KSB7CgkJCQlPYmplY3QgdmFsdWUgPSBpdC5u
ZXh0KCk7CgkJCQlpZiAodmFsdWUgPT0gbnVsbCkKCQkJCQlyZXR1cm47CgkJCQlpZiAodmFsdWUg
aW5zdGFuY2VvZiBMaXN0KSB7CgkJCQkJQFN1cHByZXNzV2FybmluZ3MoInVuY2hlY2tlZCIpCgkJ
CQkJSXRlcmF0b3I8SVJlc291cmNlPiBkdXBsaWNhdGVzID0gKChMaXN0PElSZXNvdXJjZT4pIHZh
bHVlKS5pdGVyYXRvcigpOwoJCQkJCXdoaWxlIChkdXBsaWNhdGVzLmhhc05leHQoKSkKCQkJCQkJ
ZG9pdC5kb2l0KGR1cGxpY2F0ZXMubmV4dCgpKTsKCQkJCX0gZWxzZSB7CgkJCQkJZG9pdC5kb2l0
KChJUmVzb3VyY2UpIHZhbHVlKTsKCQkJCX0KCQkJfQoJCX0KCgkJLyoqCgkJICogSW52b2tlIHRo
ZSBnaXZlbiBkb2l0IGZvciBldmVyeSByZXNvdXJjZSB0aGF0IG1hdGNoZXMgdGhlIGdpdmVuCgkJ
ICogbG9jYXRpb24uCgkJICovCgkJcHVibGljIHZvaWQgbWF0Y2hpbmdSZXNvdXJjZXNEbyhJRmls
ZVN0b3JlIGxvY2F0aW9uLCBEb2l0IGRvaXQpIHsKCQkJT2JqZWN0IHZhbHVlID0gbWFwLmdldChs
b2NhdGlvbik7CgkJCWlmICh2YWx1ZSA9PSBudWxsKQoJCQkJcmV0dXJuOwpTeXN0ZW0ub3V0LnBy
aW50bG4oIlsiK1RocmVhZC5jdXJyZW50VGhyZWFkKCkrIl1BbGlhc01hbmFnZXIgdmFsdWU9Iit2
YWx1ZSk7CgkJCWlmICh2YWx1ZSBpbnN0YW5jZW9mIExpc3QpIHsKCQkJCUBTdXBwcmVzc1dhcm5p
bmdzKCJ1bmNoZWNrZWQiKQoJCQkJSXRlcmF0b3I8SVJlc291cmNlPiBkdXBsaWNhdGVzID0gKChM
aXN0PElSZXNvdXJjZT4pIHZhbHVlKS5pdGVyYXRvcigpOwoJCQkJd2hpbGUgKGR1cGxpY2F0ZXMu
aGFzTmV4dCgpKQoJCQkJCWRvaXQuZG9pdChkdXBsaWNhdGVzLm5leHQoKSk7CgkJCX0gZWxzZSB7
CgkJCQlkb2l0LmRvaXQoKElSZXNvdXJjZSkgdmFsdWUpOwoJCQl9CgkJfQoKCQkvKioKCQkgKiBD
YWxscyB0aGUgZ2l2ZW4gZG9pdCB3aXRoIHRoZSBwcm9qZWN0IG9mIGV2ZXJ5IHJlc291cmNlIGlu
IHRoZSBtYXAKCQkgKiB3aG9zZSBsb2NhdGlvbiBvdmVybGFwcyBhbm90aGVyIHJlc291cmNlIGlu
IHRoZSBtYXAuCgkJICovCgkJcHVibGljIHZvaWQgb3ZlckxhcHBpbmdSZXNvdXJjZXNEbyhEb2l0
IGRvaXQpIHsKCQkJSXRlcmF0b3I8TWFwLkVudHJ5PElGaWxlU3RvcmUsT2JqZWN0Pj4gZW50cmll
cyA9IG1hcC5lbnRyeVNldCgpLml0ZXJhdG9yKCk7CgkJCUlGaWxlU3RvcmUgcHJldmlvdXNTdG9y
ZSA9IG51bGw7CgkJCUlSZXNvdXJjZSBwcmV2aW91c1Jlc291cmNlID0gbnVsbDsKCQkJd2hpbGUg
KGVudHJpZXMuaGFzTmV4dCgpKSB7CgkJCQlNYXAuRW50cnk8SUZpbGVTdG9yZSxPYmplY3Q+IGN1
cnJlbnQgPSBlbnRyaWVzLm5leHQoKTsKCQkJCS8vdmFsdWUgaXMgZWl0aGVyIHNpbmdsZSByZXNv
dXJjZSBvciBMaXN0IG9mIHJlc291cmNlcwoJCQkJSUZpbGVTdG9yZSBjdXJyZW50U3RvcmUgPSBj
dXJyZW50LmdldEtleSgpOwoJCQkJSVJlc291cmNlIGN1cnJlbnRSZXNvdXJjZSA9IG51bGw7CgkJ
CQlPYmplY3QgdmFsdWUgPSBjdXJyZW50LmdldFZhbHVlKCk7CgkJCQlpZiAodmFsdWUgaW5zdGFu
Y2VvZiBMaXN0KSB7CgkJCQkJLy9pZiB0aGVyZSBhcmUgc2V2ZXJhbCB0aGVuIHRoZXkncmUgYWxs
IG92ZXJsYXBwaW5nCgkJCQkJQFN1cHByZXNzV2FybmluZ3MoInVuY2hlY2tlZCIpCgkJCQkJSXRl
cmF0b3I8SVJlc291cmNlPiBkdXBsaWNhdGVzID0gKChMaXN0PElSZXNvdXJjZT4pIHZhbHVlKS5p
dGVyYXRvcigpOwoJCQkJCXdoaWxlIChkdXBsaWNhdGVzLmhhc05leHQoKSkgewoJCQkJCQlJUmVz
b3VyY2UgZHVwID0gZHVwbGljYXRlcy5uZXh0KCk7ClN5c3RlbS5vdXQucHJpbnRsbigiWyIrVGhy
ZWFkLmN1cnJlbnRUaHJlYWQoKSsiXURVUDogIitkdXApOwoJCQkJCQlkb2l0LmRvaXQoZHVwLmdl
dFByb2plY3QoKSk7CgkJCQkJfQoJCQkJfSBlbHNlIHsKCQkJCQkvL3ZhbHVlIGlzIGEgc2luZ2xl
IHJlc291cmNlCgkJCQkJY3VycmVudFJlc291cmNlID0gKElSZXNvdXJjZSkgdmFsdWU7CgkJCQl9
CgkJCQlpZiAocHJldmlvdXNTdG9yZSAhPSBudWxsKSB7CgkJCQkJLy9jaGVjayBmb3Igb3Zlcmxh
cCB3aXRoIHByZXZpb3VzCgkJCQkJLy9Ob3RlOiBwcmV2aW91cyBpcyBhbHdheXMgc2hvcnRlciBk
dWUgdG8gbWFwIHNvcnRpbmcgcnVsZXMKCQkJCQlpZiAocHJldmlvdXNTdG9yZS5pc1BhcmVudE9m
KGN1cnJlbnRTdG9yZSkpIHsKCQkJCQkJLy9yZXNvdXJjZXMgd2lsbCBiZSBudWxsIGlmIHRoZXkg
d2VyZSBpbiBhIGxpc3QsIGluIHdoaWNoIGNhc2UgCgkJCQkJCS8vdGhleSd2ZSBhbHJlYWR5IGJl
ZW4gcGFzc2VkIHRvIHRoZSBkb2l0CgkJCQkJCWlmIChwcmV2aW91c1Jlc291cmNlICE9IG51bGwp
IHsKCQkJCQkJCWRvaXQuZG9pdChwcmV2aW91c1Jlc291cmNlLmdldFByb2plY3QoKSk7CgkJCQkJ
CQkvL251bGwgb3V0IHByZXZpb3VzIHJlc291cmNlIHNvIHdlIGRvbid0IGNhbGwgZG9pdCB0d2lj
ZSB3aXRoIHNhbWUgcmVzb3VyY2UKCQkJCQkJCXByZXZpb3VzUmVzb3VyY2UgPSBudWxsOwoJCQkJ
CQl9CgkJCQkJCWlmIChjdXJyZW50UmVzb3VyY2UgIT0gbnVsbCkKCQkJCQkJCWRvaXQuZG9pdChj
dXJyZW50UmVzb3VyY2UuZ2V0UHJvamVjdCgpKTsKCQkJCQkJLy9rZWVwIGl0ZXJhdGluZyB3aXRo
IHRoZSBzYW1lIHByZXZpb3VzIHN0b3JlIGJlY2F1c2UgdGhlcmUgbWF5IGJlIG1vcmUgb3Zlcmxh
cHMKCQkJCQkJY29udGludWU7CgkJCQkJfQoJCQkJfQoJCQkJcHJldmlvdXNTdG9yZSA9IGN1cnJl
bnRTdG9yZTsKCQkJCXByZXZpb3VzUmVzb3VyY2UgPSBjdXJyZW50UmVzb3VyY2U7CgkJCX0KCQl9
CgoJCS8qKgoJCSAqIFJlbW92ZXMgdGhlIGdpdmVuIGxvY2F0aW9uIGZyb20gdGhlIG1hcC4gIFJl
dHVybnMgdHJ1ZSBpZiBhbnl0aGluZwoJCSAqIHdhcyBhY3R1YWxseSByZW1vdmVkLCBhbmQgZmFs
c2Ugb3RoZXJ3aXNlLgoJCSAqLwoJCXB1YmxpYyBib29sZWFuIHJlbW92ZShJRmlsZVN0b3JlIGxv
Y2F0aW9uLCBJUmVzb3VyY2UgcmVzb3VyY2UpIHsKCQkJT2JqZWN0IG9sZFZhbHVlID0gbWFwLmdl
dChsb2NhdGlvbik7CgkJCWlmIChvbGRWYWx1ZSA9PSBudWxsKQoJCQkJcmV0dXJuIGZhbHNlOwpT
eXN0ZW0ub3V0LnByaW50bG4oIlsiK1RocmVhZC5jdXJyZW50VGhyZWFkKCkrIl0gPj4+IFJFTU9W
RSAiK3Jlc291cmNlKyIgYXQgIitsb2NhdGlvbik7CnRoaXMucmVtb3ZlID0gbmV3IFJ1bnRpbWVF
eGNlcHRpb24oInJlbW92ZWQgIityZXNvdXJjZSsiIGF0ICIrbG9jYXRpb24pOwoJCQlpZiAob2xk
VmFsdWUgaW5zdGFuY2VvZiBJUmVzb3VyY2UpIHsKCQkJCWlmIChyZXNvdXJjZS5lcXVhbHMob2xk
VmFsdWUpKSB7CgkJCQkJbWFwLnJlbW92ZShsb2NhdGlvbik7ClN5c3RlbS5vdXQucHJpbnRsbigi
WyIrVGhyZWFkLmN1cnJlbnRUaHJlYWQoKSsiXSA8PCBSRU1PVkUgIit0aGlzKyIgIittYXAuY29u
dGFpbnNLZXkobG9jYXRpb24pKTsKCQkJCQlyZXR1cm4gdHJ1ZTsKCQkJCX0KU3lzdGVtLm91dC5w
cmludGxuKCJbIitUaHJlYWQuY3VycmVudFRocmVhZCgpKyJdIDw8PCBSRU1PVkUiKTsKCQkJCXJl
dHVybiBmYWxzZTsKCQkJfQoJCQlAU3VwcHJlc3NXYXJuaW5ncygidW5jaGVja2VkIikKCQkJQXJy
YXlMaXN0PElSZXNvdXJjZT4gbGlzdCA9IChBcnJheUxpc3Q8SVJlc291cmNlPikgb2xkVmFsdWU7
CgkJCWJvb2xlYW4gd2FzUmVtb3ZlZCA9IGxpc3QucmVtb3ZlKHJlc291cmNlKTsKCQkJaWYgKGxp
c3Quc2l6ZSgpID09IDApCgkJCQltYXAucmVtb3ZlKGxvY2F0aW9uKTsKU3lzdGVtLm91dC5wcmlu
dGxuKCJbIitUaHJlYWQuY3VycmVudFRocmVhZCgpKyJdIDw8PDwgUkVNT1ZFICIrd2FzUmVtb3Zl
ZCk7CgkJCXJldHVybiB3YXNSZW1vdmVkOwoJCX0KCX0KCgkvKioKCSAqIERvaXQgY29udmVuaWVu
Y2UgY2xhc3MgZm9yIGFkZGluZyBpdGVtcyB0byBhIGxpc3QKCSAqLwoJcHJpdmF0ZSBmaW5hbCBB
ZGRUb0NvbGxlY3Rpb25Eb2l0IGFkZFRvQ29sbGVjdGlvbiA9IG5ldyBBZGRUb0NvbGxlY3Rpb25E
b2l0KCk7CgoJLyoqCgkgKiBUaGUgc2V0IG9mIElQcm9qZWN0cyB0aGF0IGhhdmUgYWxpYXNlcy4K
CSAqLwoJcHJvdGVjdGVkIGZpbmFsIFNldDxJUmVzb3VyY2U+IGFsaWFzZWRQcm9qZWN0cyA9IG5l
dyBIYXNoU2V0PElSZXNvdXJjZT4oKTsKCgkvKioKCSAqIEEgdGVtcG9yYXJ5IHNldCBvZiBhbGlh
c2VzLiAgVXNlZCBkdXJpbmcgY29tcHV0ZUFsaWFzZXMsIGJ1dCBtYWludGFpbmVkCgkgKiBhcyBh
IGZpZWxkIGFzIGFuIG9wdGltaXphdGlvbiB0byBwcmV2ZW50IHJlY3JlYXRpbmcgdGhlIHNldC4K
CSAqLwoJcHJvdGVjdGVkIGZpbmFsIEhhc2hTZXQ8SVJlc291cmNlPiBhbGlhc2VzID0gbmV3IEhh
c2hTZXQ8SVJlc291cmNlPigpOwoKCS8qKgoJICogVGhlIHNldCBvZiByZXNvdXJjZXMgdGhhdCBo
YXZlIGhhZCBzdHJ1Y3R1cmUgY2hhbmdlcyB0aGF0IG1pZ2h0CgkgKiBpbnZhbGlkYXRlIHRoZSBs
b2NhdGlvbnMgbWFwIG9yIGFsaWFzZWQgcHJvamVjdHMgc2V0LiAgVGhlc2Ugd2lsbCBiZQoJICog
dXBkYXRlZCBpbmNyZW1lbnRhbGx5IG9uIHRoZSBuZXh0IGFsaWFzIHJlcXVlc3QuCgkgKi8KCXBy
aXZhdGUgZmluYWwgU2V0PElSZXNvdXJjZT4gY2hhbmdlZExpbmtzID0gbmV3IEhhc2hTZXQ8SVJl
c291cmNlPigpOwoKCS8qKgoJICogVGhpcyBmbGFnIGlzIHRydWUgd2hlbiBwcm9qZWN0cyBoYXZl
IGJlZW4gY3JlYXRlZCBvciBkZWxldGVkIGFuZCB0aGUKCSAqIGxvY2F0aW9uIG1hcCBoYXMgbm90
IGJlZW4gdXBkYXRlZCBhY2NvcmRpbmdseS4KCSAqLwoJcHJpdmF0ZSBib29sZWFuIGNoYW5nZWRQ
cm9qZWN0cyA9IGZhbHNlOwoKCS8qKgoJICogVGhlIERvaXQgY2xhc3MgdXNlZCBmb3IgZmluZGlu
ZyBhbGlhc2VzLgoJICovCglwcml2YXRlIGZpbmFsIEZpbmRBbGlhc2VzRG9pdCBmaW5kQWxpYXNl
cyA9IG5ldyBGaW5kQWxpYXNlc0RvaXQoKTsKCgkvKioKCSAqIFRoaXMgbWFwcyBJRmlsZVN0b3Jl
IC0+SVJlc291cmNlLCBhc3NvY2lhdGluZyBhIGZpbGUgc3lzdGVtIGxvY2F0aW9uCgkgKiB3aXRo
IHRoZSBwcm9qZWN0cyBhbmQvb3IgbGlua2VkIHJlc291cmNlcyB0aGF0IGFyZSByb290ZWQgYXQg
dGhhdCBsb2NhdGlvbi4KCSAqLwoJcHJvdGVjdGVkIGZpbmFsIExvY2F0aW9uTWFwIGxvY2F0aW9u
c01hcCA9IG5ldyBMb2NhdGlvbk1hcCgpOwoJLyoqCgkgKiBUaGUgdG90YWwgbnVtYmVyIG9mIHJl
c291cmNlcyBpbiB0aGUgd29ya3NwYWNlIHRoYXQgYXJlIG5vdCBpbiB0aGUgZGVmYXVsdAoJICog
bG9jYXRpb24uIFRoaXMgaW5jbHVkZXMgYWxsIGxpbmtlZCByZXNvdXJjZXMsIGluY2x1ZGluZyBs
aW5rZWQgcmVzb3VyY2VzCgkgKiB0aGF0IGRvbid0IGN1cnJlbnRseSBoYXZlIHZhbGlkIGxvY2F0
aW9ucyBkdWUgdG8gYW4gdW5kZWZpbmVkIHBhdGggdmFyaWFibGUuCgkgKiBUaGlzIGFsc28gaW5j
bHVkZXMgcHJvamVjdHMgdGhhdCBhcmUgbm90IGluIHRoZWlyIGRlZmF1bHQgbG9jYXRpb24uCgkg
KiBUaGlzIHZhbHVlIGlzIHVzZWQgYXMgYSBxdWljayBvcHRpbWl6YXRpb24sIGJlY2F1c2UgYSB3
b3Jrc3BhY2Ugd2l0aAoJICogYWxsIHJlc291cmNlcyBpbiB0aGVpciBkZWZhdWx0IGxvY2F0aW9u
cyBjYW5ub3QgaGF2ZSBhbnkgYWxpYXNlcy4KCSAqLwoJcHJpdmF0ZSBpbnQgbm9uRGVmYXVsdFJl
c291cmNlQ291bnQgPSAwOwoKCS8qKgoJICogVGhlIHN1ZmZpeCBvYmplY3QgaXMgYWxzbyB1c2Vk
IG9ubHkgZHVyaW5nIHRoZSBjb21wdXRlQWxpYXNlcyBtZXRob2QuCgkgKiBJbiB0aGlzIGNhc2Ug
aXQgaXMgYSBmaWVsZCBiZWNhdXNlIGl0IGlzIHJlZmVyZW5jZWQgZnJvbSBhbiBpbm5lciBjbGFz
cwoJICogYW5kIHdlIHdhbnQgdG8gYXZvaWQgY3JlYXRpbmcgYSBwb2ludGVyIGFycmF5LiAgSXQg
aXMgcHVibGljIHRvIGVsaW1pbmF0ZQoJICogdGhlIG5lZWQgZm9yIHN5bnRoZXRpYyBhY2Nlc3Nv
ciBtZXRob2RzLgoJICovCglwdWJsaWMgSVBhdGggc3VmZml4OwoKCS8qKiB0aGUgd29ya3NwYWNl
ICovCglwcm90ZWN0ZWQgZmluYWwgV29ya3NwYWNlIHdvcmtzcGFjZTsKCglwdWJsaWMgQWxpYXNN
YW5hZ2VyKFdvcmtzcGFjZSB3b3Jrc3BhY2UpIHsKCQl0aGlzLndvcmtzcGFjZSA9IHdvcmtzcGFj
ZTsKCX0KCglwcml2YXRlIHZvaWQgYWRkVG9Mb2NhdGlvbnNNYXAoSVByb2plY3QgcHJvamVjdCkg
ewoJCUlGaWxlU3RvcmUgbG9jYXRpb24gPSAoKFJlc291cmNlKSBwcm9qZWN0KS5nZXRTdG9yZSgp
OwoJCWlmIChsb2NhdGlvbiAhPSBudWxsKQoJCQlsb2NhdGlvbnNNYXAuYWRkKGxvY2F0aW9uLCBw
cm9qZWN0KTsKCQlQcm9qZWN0RGVzY3JpcHRpb24gZGVzY3JpcHRpb24gPSAoKFByb2plY3QpIHBy
b2plY3QpLmludGVybmFsR2V0RGVzY3JpcHRpb24oKTsKCQlpZiAoZGVzY3JpcHRpb24gPT0gbnVs
bCkKCQkJcmV0dXJuOwoJCWlmIChkZXNjcmlwdGlvbi5nZXRMb2NhdGlvblVSSSgpICE9IG51bGwp
CgkJCW5vbkRlZmF1bHRSZXNvdXJjZUNvdW50Kys7CgkJSGFzaE1hcDxJUGF0aCxMaW5rRGVzY3Jp
cHRpb24+IGxpbmtzID0gZGVzY3JpcHRpb24uZ2V0TGlua3MoKTsKCQlpZiAobGlua3MgPT0gbnVs
bCkKCQkJcmV0dXJuOwoJCWZvciAoTGlua0Rlc2NyaXB0aW9uIGxpbmtEZXNjIDogbGlua3MudmFs
dWVzKCkpIHsKCQkJSVJlc291cmNlIGxpbmsgPSBwcm9qZWN0LmZpbmRNZW1iZXIobGlua0Rlc2Mu
Z2V0UHJvamVjdFJlbGF0aXZlUGF0aCgpKTsKCQkJaWYgKGxpbmsgIT0gbnVsbCkgewoJCQkJdHJ5
IHsKCQkJCQlVUkkgbG9jYXRpb25VUkkgPSBsaW5rRGVzYy5nZXRMb2NhdGlvblVSSSgpOwoJCQkJ
CWxvY2F0aW9uVVJJID0gbGluay5nZXRQYXRoVmFyaWFibGVNYW5hZ2VyKCkucmVzb2x2ZVVSSShs
b2NhdGlvblVSSSk7CgkJCQkJYWRkVG9Mb2NhdGlvbnNNYXAobGluaywgRUZTLmdldFN0b3JlKGxv
Y2F0aW9uVVJJKSk7CgkJCQl9IGNhdGNoIChDb3JlRXhjZXB0aW9uIGUpIHsKCQkJCQkvL2lnbm9y
ZSBsaW5rcyB3aXRoIGludmFsaWQgbG9jYXRpb25zCgkJCQl9CgkJCX0KCQl9Cgl9CgoJcHJpdmF0
ZSB2b2lkIGFkZFRvTG9jYXRpb25zTWFwKElSZXNvdXJjZSBsaW5rLCBJRmlsZVN0b3JlIGxvY2F0
aW9uKSB7CgkJU3lzdGVtLm91dC5wcmludGxuKCJbIitUaHJlYWQuY3VycmVudFRocmVhZCgpKyJd
IGFkZFRvTG9jYXRpb25zTWFwOiIrbGluaysiIHN0b3JlICIrbG9jYXRpb24pOwoJCWlmIChsb2Nh
dGlvbiAhPSBudWxsICYmICFsaW5rLmlzVmlydHVhbCgpKQoJCQlpZiAobG9jYXRpb25zTWFwLmFk
ZChsb2NhdGlvbiwgbGluaykpCgkJCQlub25EZWZhdWx0UmVzb3VyY2VDb3VudCsrOwovLwkJSUNv
bnRhaW5lciBwYXJlbnQgPSBsaW5rLmdldFBhcmVudCgpOwovLwkJSUZpbGVTdG9yZSBzdG9yZSA9
ICgoUmVzb3VyY2UpcGFyZW50KS5nZXRTdG9yZSgpOwovLwkJaWYgKHN0b3JlICE9IG51bGwpIHsK
Ly8JCQlJUHJvamVjdCBwcm9qZWN0ID0gbGluay5nZXRQcm9qZWN0KCk7Ci8vCQkJYm9vbGVhbiBu
b0FsaWFzZXMgPSAhYWxpYXNlZFByb2plY3RzLmNvbnRhaW5zKHByb2plY3QpOwovLwkJCVN5c3Rl
bS5vdXQucHJpbnRsbigiTm8gYWxpYXNlcyBmb3IgIitwcm9qZWN0KyIgYWZ0ZXIgYWRkVG9Mb2Nh
dGlvbnNNYXAoKSA9ICIrbm9BbGlhc2VzKTsKLy8JCX0KCX0KCgkvKioKCSAqIEJ1aWxkcyB0aGUg
dGFibGUgb2YgYWxpYXNlZCBwcm9qZWN0cyBmcm9tIHNjcmF0Y2guCgkgKi8KCXByaXZhdGUgdm9p
ZCBidWlsZEFsaWFzZWRQcm9qZWN0c1NldCgpIHsKCQlhbGlhc2VkUHJvamVjdHMuY2xlYXIoKTsK
CQkvL2lmIHRoZXJlIGFyZSBubyByZXNvdXJjZXMgaW4gbm9uLWRlZmF1bHQgbG9jYXRpb25zIHRo
ZW4gdGhlcmUgY2FuJ3QgYmUgYW55IGFsaWFzZWQgcHJvamVjdHMKCQlpZiAobm9uRGVmYXVsdFJl
c291cmNlQ291bnQgPD0gMCkKCQkJcmV0dXJuOwoJCS8vZm9yIGV2ZXJ5IHJlc291cmNlIHRoYXQg
b3ZlcmxhcHMgYW5vdGhlciwgbWFya2VkIGl0cyBwcm9qZWN0IGFzIGFsaWFzZWQKCQlhZGRUb0Nv
bGxlY3Rpb24uc2V0Q29sbGVjdGlvbihhbGlhc2VkUHJvamVjdHMpOwoJCWxvY2F0aW9uc01hcC5v
dmVyTGFwcGluZ1Jlc291cmNlc0RvKGFkZFRvQ29sbGVjdGlvbik7Cgl9CgoJLyoqCgkgKiBCdWls
ZHMgdGhlIHRhYmxlIG9mIHJlc291cmNlIGxvY2F0aW9ucyBmcm9tIHNjcmF0Y2guICBBbHNvIGNv
bXB1dGVzIGFuCgkgKiBpbml0aWFsIHZhbHVlIGZvciB0aGUgbGlua2VkIHJlc291cmNlIGNvdW50
ZXIuCgkgKi8KCXByaXZhdGUgdm9pZCBidWlsZExvY2F0aW9uc01hcCgpIHsKCQlsb2NhdGlvbnNN
YXAuY2xlYXIoKTsKCQlub25EZWZhdWx0UmVzb3VyY2VDb3VudCA9IDA7CgkJLy9idWlsZCB0YWJs
ZSBvZiBJUGF0aCAoZmlsZSBzeXN0ZW0gbG9jYXRpb24pIC0+IElSZXNvdXJjZSAocHJvamVjdCBv
ciBsaW5rZWQgcmVzb3VyY2UpCgkJSVByb2plY3RbXSBwcm9qZWN0cyA9IHdvcmtzcGFjZS5nZXRS
b290KCkuZ2V0UHJvamVjdHMoSUNvbnRhaW5lci5JTkNMVURFX0hJRERFTik7CgkJZm9yIChpbnQg
aSA9IDA7IGkgPCBwcm9qZWN0cy5sZW5ndGg7IGkrKykKCQkJaWYgKHByb2plY3RzW2ldLmlzQWNj
ZXNzaWJsZSgpKQoJCQkJYWRkVG9Mb2NhdGlvbnNNYXAocHJvamVjdHNbaV0pOwoJfQoKCS8qKgoJ
ICogQSBwcm9qZWN0IGFsaWFzIG5lZWRzIHVwZGF0aW5nLiAgSWYgdGhlIHByb2plY3QgbG9jYXRp
b24gaGFzIGJlZW4gZGVsZXRlZCwKCSAqIHRoZW4gdGhlIHByb2plY3Qgc2hvdWxkIGJlIGRlbGV0
ZWQgZnJvbSB0aGUgd29ya3NwYWNlLiAgVGhpcyBkaWZmZXJzCgkgKiBmcm9tIHRoZSByZWZyZXNo
IGxvY2FsIHN0cmF0ZWd5LCBidXQgb3BlcmF0aW9ucyBwZXJmb3JtZWQgZnJvbSB3aXRoaW4KCSAq
IHRoZSB3b3Jrc3BhY2UgbXVzdCBuZXZlciBsZWF2ZSBhIHJlc291cmNlIG91dCBvZiBzeW5jLgoJ
ICogQHBhcmFtIHByb2plY3QgVGhlIHByb2plY3QgdG8gY2hlY2sgZm9yIGRlbGV0aW9uCgkgKiBA
cGFyYW0gbG9jYXRpb24gVGhlIHByb2plY3QgbG9jYXRpb24KCSAqIEByZXR1cm4gPGNvZGU+dHJ1
ZTwvY29kZT4gaWYgdGhlIHByb2plY3QgaGFzIGJlZW4gZGVsZXRlZCwgYW5kIDxjb2RlPmZhbHNl
PC9jb2RlPiBvdGhlcndpc2UKCSAqIEBleGNlcHRpb24gQ29yZUV4Y2VwdGlvbgoJICovCglwcml2
YXRlIGJvb2xlYW4gY2hlY2tEZWxldGlvbihQcm9qZWN0IHByb2plY3QsIElGaWxlU3RvcmUgbG9j
YXRpb24pIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKCQlpZiAocHJvamVjdC5leGlzdHMoKSAmJiAh
bG9jYXRpb24uZmV0Y2hJbmZvKCkuZXhpc3RzKCkpIHsKCQkJLy9wZXJmb3JtIGludGVybmFsIGRl
bGV0aW9uIG9mIHByb2plY3QgZnJvbSB3b3Jrc3BhY2UgdHJlZSBiZWNhdXNlCgkJCS8vIGl0IGlz
IGFscmVhZHkgZGVsZXRlZCBmcm9tIGRpc2sgYW5kIHdlIGNhbid0IGFjcXVpcmUgYSBkaWZmZXJl
bnQKCQkJLy9zY2hlZHVsaW5nIHJ1bGUgaW4gdGhpcyBjb250ZXh0IChub25lIGlzIG5lZWRlZCBi
ZWNhdXNlIHdlIGFyZQoJCQkvL3dpdGhpbiBzY29wZSBvZiB0aGUgd29ya3NwYWNlIGxvY2spCgkJ
CUFzc2VydC5pc1RydWUod29ya3NwYWNlLmdldFdvcmtNYW5hZ2VyKCkuZ2V0TG9jaygpLmdldERl
cHRoKCkgPiAwKTsKCQkJcHJvamVjdC5kZWxldGVSZXNvdXJjZShmYWxzZSwgbnVsbCk7CgkJCXJl
dHVybiB0cnVlOwoJCX0KCQlyZXR1cm4gZmFsc2U7Cgl9CgoJLyoqCgkgKiBSZXR1cm5zIGFsbCBh
bGlhc2VzIG9mIHRoZSBnaXZlbiByZXNvdXJjZSwgb3IgbnVsbCBpZiB0aGVyZSBhcmUgbm9uZS4K
CSAqLwoJcHVibGljIElSZXNvdXJjZVtdIGNvbXB1dGVBbGlhc2VzKGZpbmFsIElSZXNvdXJjZSBy
ZXNvdXJjZSwgSUZpbGVTdG9yZSBsb2NhdGlvbikgewoJCS8vbm90aGluZyB0byBkbyBpZiB3ZSBh
cmUgb3Igd2VyZSBpbiBhbiBhbGlhcy1mcmVlIHdvcmtzcGFjZSBvciBwcm9qZWN0CgkJaWYgKGhh
c05vQWxpYXNlcyhyZXNvdXJjZSkpCgkJCXJldHVybiBudWxsOwoKCQlhbGlhc2VzLmNsZWFyKCk7
CgkJaW50ZXJuYWxDb21wdXRlQWxpYXNlcyhyZXNvdXJjZSwgbG9jYXRpb24pOwoJCWludCBzaXpl
ID0gYWxpYXNlcy5zaXplKCk7CgkJaWYgKHNpemUgPT0gMCkKCQkJcmV0dXJuIG51bGw7CgkJcmV0
dXJuIGFsaWFzZXMudG9BcnJheShuZXcgSVJlc291cmNlW3NpemVdKTsKCX0KCgkvKioKCSAqIFJl
dHVybnMgYWxsIHJlc291cmNlcyBwb2ludGluZyB0byB0aGUgZ2l2ZW4gbG9jYXRpb24sIG9yIGFu
IGVtcHR5IGFycmF5IGlmIHRoZXJlIGFyZSBub25lLgoJICovCglwdWJsaWMgSVJlc291cmNlW10g
ZmluZFJlc291cmNlcyhJRmlsZVN0b3JlIGxvY2F0aW9uKSB7CgkJZmluYWwgQXJyYXlMaXN0PElS
ZXNvdXJjZT4gcmVzb3VyY2VzID0gbmV3IEFycmF5TGlzdDxJUmVzb3VyY2U+KCk7CgkJbG9jYXRp
b25zTWFwLm1hdGNoaW5nUmVzb3VyY2VzRG8obG9jYXRpb24sIG5ldyBEb2l0KCkgewoJCQlwdWJs
aWMgdm9pZCBkb2l0KElSZXNvdXJjZSByZXNvdXJjZSkgewoJCQkJcmVzb3VyY2VzLmFkZChyZXNv
dXJjZSk7CgkJCX0KCQl9KTsKCQlyZXR1cm4gcmVzb3VyY2VzLnRvQXJyYXkobmV3IElSZXNvdXJj
ZVswXSk7Cgl9CgoKCS8qKgoJICogUmV0dXJucyBhbGwgYWxpYXNlcyBvZiB0aGlzIHJlc291cmNl
LCBhbmQgYW55IGFsaWFzZXMgb2Ygc3VidHJlZXMgb2YgdGhpcwoJICogcmVzb3VyY2UuICBSZXR1
cm5zIG51bGwgaWYgbm8gYWxpYXNlcyBhcmUgZm91bmQuCgkgKi8KCXByaXZhdGUgdm9pZCBjb21w
dXRlRGVlcEFsaWFzZXMoSVJlc291cmNlIHJlc291cmNlLCBJRmlsZVN0b3JlIGxvY2F0aW9uKSB7
CgkJLy9pZiB0aGUgbG9jYXRpb24gaXMgaW52YWxpZCB0aGVuIHRoZXJlIHdvbid0IGJlIGFueSBh
bGlhc2VzIHRvIHVwZGF0ZQoJCWlmIChsb2NhdGlvbiA9PSBudWxsKQoJCQlyZXR1cm47CgkJLy9n
ZXQgdGhlIG5vcm1hbCBhbGlhc2VzIChyZXNvdXJjZXMgcm9vdGVkIGluIHBhcmVudCBsb2NhdGlv
bnMpCgkJaW50ZXJuYWxDb21wdXRlQWxpYXNlcyhyZXNvdXJjZSwgbG9jYXRpb24pOwoJCS8vZ2V0
IGFsbCByZXNvdXJjZXMgcm9vdGVkIGJlbG93IHRoaXMgcmVzb3VyY2UncyBsb2NhdGlvbgoJCWFk
ZFRvQ29sbGVjdGlvbi5zZXRDb2xsZWN0aW9uKGFsaWFzZXMpOwoJCWxvY2F0aW9uc01hcC5tYXRj
aGluZ1ByZWZpeERvKGxvY2F0aW9uLCBhZGRUb0NvbGxlY3Rpb24pOwoJCS8vaWYgdGhpcyBpcyBh
IHByb2plY3QsIGdldCBhbGwgcmVzb3VyY2VzIHJvb3RlZCBiZWxvdyBsaW5rcyBpbiB0aGlzIHBy
b2plY3QKCQlpZiAocmVzb3VyY2UuZ2V0VHlwZSgpID09IElSZXNvdXJjZS5QUk9KRUNUKSB7CgkJ
CXRyeSB7CgkJCQlJUmVzb3VyY2VbXSBtZW1iZXJzID0gKChJUHJvamVjdCkgcmVzb3VyY2UpLm1l
bWJlcnMoKTsKCQkJCWZpbmFsIEZpbGVTeXN0ZW1SZXNvdXJjZU1hbmFnZXIgbG9jYWxNYW5hZ2Vy
ID0gd29ya3NwYWNlLmdldEZpbGVTeXN0ZW1NYW5hZ2VyKCk7CgkJCQlmb3IgKGludCBpID0gMDsg
aSA8IG1lbWJlcnMubGVuZ3RoOyBpKyspIHsKCQkJCQlpZiAobWVtYmVyc1tpXS5pc0xpbmtlZCgp
KSB7CgkJCQkJCUlGaWxlU3RvcmUgbGlua0xvY2F0aW9uID0gbG9jYWxNYW5hZ2VyLmdldFN0b3Jl
KG1lbWJlcnNbaV0pOwoJCQkJCQlpZiAobGlua0xvY2F0aW9uICE9IG51bGwpCgkJCQkJCQlsb2Nh
dGlvbnNNYXAubWF0Y2hpbmdQcmVmaXhEbyhsaW5rTG9jYXRpb24sIGFkZFRvQ29sbGVjdGlvbik7
CgkJCQkJfQoJCQkJfQoJCQl9IGNhdGNoIChDb3JlRXhjZXB0aW9uIGUpIHsKCQkJCS8vc2tpcCBp
bmFjY2Vzc2libGUgcHJvamVjdHMKCQkJfQoJCX0KCX0KCgkvKioKCSAqIFJldHVybnMgdGhlIGNv
bXBhcmF0b3IgdG8gdXNlIHdoZW4gc29ydGluZyB0aGUgbG9jYXRpb25zIG1hcC4gIENvbXBhcmlz
b24KCSAqIGlzIGJhc2VkIG9uIHNlZ21lbnRzLCBzbyB0aGF0IHBhdGhzIHdpdGggdGhlIG1vc3Qg
c2VnbWVudHMgaW4gY29tbW9uIHdpbGwKCSAqIGFsd2F5cyBiZSBhZGphY2VudC4gIFRoaXMgaXMg
ZXF1aXZhbGVudCB0byB0aGUgbmF0dXJhbCBvcmRlciBvbiB0aGUgcGF0aAoJICogc3RyaW5ncywg
d2l0aCB0aGUgZXh0cmEgY29uZGl0aW9uIHRoYXQgdGhlIHBhdGggc2VwYXJhdG9yIGlzIG9yZGVy
ZWQKCSAqIGJlZm9yZSBhbGwgb3RoZXIgY2hhcmFjdGVycy4gKEV4OiAiL2ZvbyIgPCAiL2Zvby96
enoiIDwgIi9mb29hYWEiKS4KCSAqLwoJQ29tcGFyYXRvcjxJRmlsZVN0b3JlPiBnZXRDb21wYXJh
dG9yKCkgewoJCXJldHVybiBuZXcgQ29tcGFyYXRvcjxJRmlsZVN0b3JlPigpIHsKCQkJcHVibGlj
IGludCBjb21wYXJlKElGaWxlU3RvcmUgc3RvcmUxLCBJRmlsZVN0b3JlIHN0b3JlMikgewoJCQkJ
Ly9zY2hlbWUgdGFrZXMgcHJlY2VkZW5jZSBvdmVyIGFsbCBlbHNlCgkJCQlpbnQgY29tcGFyZSA9
IGNvbXBhcmVTdHJpbmdPck51bGwoc3RvcmUxLmdldEZpbGVTeXN0ZW0oKS5nZXRTY2hlbWUoKSwg
c3RvcmUyLmdldEZpbGVTeXN0ZW0oKS5nZXRTY2hlbWUoKSk7CgkJCQlpZiAoY29tcGFyZSAhPSAw
KQoJCQkJCXJldHVybiBjb21wYXJlOwoJCQkJLy8gY29tcGFyZSBiYXNlZCBvbiBVUkkgcGF0aCBz
ZWdtZW50IHZhbHVlcyAKCQkJCWZpbmFsIFVSSSB1cmkxOwoJCQkJZmluYWwgVVJJIHVyaTI7CgkJ
CQl0cnkgewoJCQkJCXVyaTEgPSBzdG9yZTEudG9VUkkoKTsKCQkJCQl1cmkyID0gc3RvcmUyLnRv
VVJJKCk7CgkJCQl9IGNhdGNoIChFeGNlcHRpb24gZSkgewoJCQkJCS8vcHJvdGVjdCBhZ2FpbnN0
IG1pc2JlaGF2aW5nIDNyZCBwYXJ0eSBjb2RlIGluIGZpbGUgc3lzdGVtIGltcGxlbWVudGF0aW9u
cwoJCQkJCVBvbGljeS5sb2coZSk7CgkJCQkJcmV0dXJuIDE7CgkJCQl9CgoJCQkJLy8gY29tcGFy
ZSBob3N0cwoJCQkJY29tcGFyZSA9IGNvbXBhcmVTdHJpbmdPck51bGwodXJpMS5nZXRIb3N0KCks
IHVyaTIuZ2V0SG9zdCgpKTsKCQkJCWlmIChjb21wYXJlICE9IDApCgkJCQkJcmV0dXJuIGNvbXBh
cmU7CgkJCQkvLyBjb21wYXJlIHVzZXIgaW5mb3MKCQkJCWNvbXBhcmUgPSBjb21wYXJlU3RyaW5n
T3JOdWxsKHVyaTEuZ2V0VXNlckluZm8oKSwgdXJpMi5nZXRVc2VySW5mbygpKTsKCQkJCWlmIChj
b21wYXJlICE9IDApCgkJCQkJcmV0dXJuIGNvbXBhcmU7CgkJCQkvLyBjb21wYXJlIHBvcnRzCgkJ
CQlpbnQgcG9ydDEgPSB1cmkxLmdldFBvcnQoKTsKCQkJCWludCBwb3J0MiA9IHVyaTIuZ2V0UG9y
dCgpOwoJCQkJaWYgKHBvcnQxICE9IHBvcnQyKQoJCQkJCXJldHVybiBwb3J0MSAtIHBvcnQyOwoK
CQkJCUlQYXRoIHBhdGgxID0gbmV3IFBhdGgodXJpMS5nZXRQYXRoKCkpOwoJCQkJSVBhdGggcGF0
aDIgPSBuZXcgUGF0aCh1cmkyLmdldFBhdGgoKSk7CgkJCQkvLyBjb21wYXJlIGRldmljZXMKCQkJ
CWNvbXBhcmUgPSBjb21wYXJlU3RyaW5nT3JOdWxsKHBhdGgxLmdldERldmljZSgpLCBwYXRoMi5n
ZXREZXZpY2UoKSk7CgkJCQlpZiAoY29tcGFyZSAhPSAwKQoJCQkJCXJldHVybiBjb21wYXJlOwoJ
CQkJLy8gY29tcGFyZSBzZWdtZW50cwoJCQkJaW50IHNlZ21lbnRDb3VudDEgPSBwYXRoMS5zZWdt
ZW50Q291bnQoKTsKCQkJCWludCBzZWdtZW50Q291bnQyID0gcGF0aDIuc2VnbWVudENvdW50KCk7
CgkJCQlmb3IgKGludCBpID0gMDsgKGkgPCBzZWdtZW50Q291bnQxKSAmJiAoaSA8IHNlZ21lbnRD
b3VudDIpOyBpKyspIHsKCQkJCQljb21wYXJlID0gcGF0aDEuc2VnbWVudChpKS5jb21wYXJlVG8o
cGF0aDIuc2VnbWVudChpKSk7CgkJCQkJaWYgKGNvbXBhcmUgIT0gMCkKCQkJCQkJcmV0dXJuIGNv
bXBhcmU7CgkJCQl9CgkJCQkvL2FsbCBzZWdtZW50cyBhcmUgZXF1YWwsIHNvIGNvbXBhcmUgYmFz
ZWQgb24gbnVtYmVyIG9mIHNlZ21lbnRzCgkJCQljb21wYXJlID0gc2VnbWVudENvdW50MSAtIHNl
Z21lbnRDb3VudDI7CgkJCQlpZiAoY29tcGFyZSAhPSAwKQoJCQkJCXJldHVybiBjb21wYXJlOwoJ
CQkJLy9zYW1lIG51bWJlciBvZiBzZWdtZW50cywgc28gY29tcGFyZSBxdWVyeQoJCQkJcmV0dXJu
IGNvbXBhcmVTdHJpbmdPck51bGwodXJpMS5nZXRRdWVyeSgpLCB1cmkyLmdldFF1ZXJ5KCkpOwoJ
CQl9CgoJCQkvKioKCQkJICogQ29tcGFyZXMgdHdvIHN0cmluZ3MgdGhhdCBhcmUgcG9zc2libHkg
bnVsbC4KCQkJICovCgkJCXByaXZhdGUgaW50IGNvbXBhcmVTdHJpbmdPck51bGwoU3RyaW5nIHN0
cmluZzEsIFN0cmluZyBzdHJpbmcyKSB7CgkJCQlpZiAoc3RyaW5nMSA9PSBudWxsKSB7CgkJCQkJ
aWYgKHN0cmluZzIgPT0gbnVsbCkKCQkJCQkJcmV0dXJuIDA7CgkJCQkJcmV0dXJuIDE7CgkJCQl9
CgkJCQlpZiAoc3RyaW5nMiA9PSBudWxsKQoJCQkJCXJldHVybiAtMTsKCQkJCXJldHVybiBzdHJp
bmcxLmNvbXBhcmVUbyhzdHJpbmcyKTsKCgkJCX0KCQl9OwoJfQoKCXB1YmxpYyB2b2lkIGhhbmRs
ZUV2ZW50KExpZmVjeWNsZUV2ZW50IGV2ZW50KSB7CgkJLyoKCQkgKiBXZSBjYW4ndCBkZXRlcm1p
bmUgdGhlIGVuZCBzdGF0ZSBmb3IgbW9zdCBvcGVyYXRpb25zIGJlY2F1c2UgdGhleSBtYXkKCQkg
KiBmYWlsIGFmdGVyIHdlIHJlY2VpdmUgcHJlLW5vdGlmaWNhdGlvbi4gIEluIHRoZXNlIGNhc2Vz
LCB3ZSByZW1lbWJlcgoJCSAqIHRoZSBpbnZhbGlkYXRlZCByZXNvdXJjZXMgYW5kIHJlY29tcHV0
ZSB0aGVpciBzdGF0ZSBsYXppbHkgb24gdGhlCgkJICogbmV4dCBhbGlhcyByZXF1ZXN0LgoJCSAq
LwoJCXN3aXRjaCAoZXZlbnQua2luZCkgewoJCQljYXNlIExpZmVjeWNsZUV2ZW50LlBSRV9MSU5L
X0NIQU5HRToKCQkJY2FzZSBMaWZlY3ljbGVFdmVudC5QUkVfTElOS19ERUxFVEUgOgoJCQkJUmVz
b3VyY2UgbGluayA9IChSZXNvdXJjZSkgZXZlbnQucmVzb3VyY2U7ClN5c3RlbS5vdXQucHJpbnRs
bigiWyIrVGhyZWFkLmN1cnJlbnRUaHJlYWQoKSsiXSBQUkVfTElOS19ERUxFVEU6ICIrZXZlbnQu
cmVzb3VyY2UpOwoJCQkJaWYgKGxpbmsuaXNMaW5rZWQoKSkKCQkJCQlyZW1vdmVGcm9tTG9jYXRp
b25zTWFwKGxpbmssIGxpbmsuZ2V0U3RvcmUoKSk7CgkJCQkvL2ZhbGwgdGhyb3VnaAoJCQljYXNl
IExpZmVjeWNsZUV2ZW50LlBSRV9GSUxURVJfQUREOgkKCQkJCWNoYW5nZWRMaW5rcy5hZGQoZXZl
bnQucmVzb3VyY2UpOwoJCQkJYnJlYWs7CgkJCWNhc2UgTGlmZWN5Y2xlRXZlbnQuUFJFX0ZJTFRF
Ul9SRU1PVkU6CgkJCQljaGFuZ2VkTGlua3MuYWRkKGV2ZW50LnJlc291cmNlKTsKCQkJCWJyZWFr
OwoJCQljYXNlIExpZmVjeWNsZUV2ZW50LlBSRV9MSU5LX0NSRUFURSA6ClN5c3RlbS5vdXQucHJp
bnRsbigiWyIrVGhyZWFkLmN1cnJlbnRUaHJlYWQoKSsiXSBQUkVfTElOS19DUkVBVEU6ICIrZXZl
bnQucmVzb3VyY2UpOwoJCQkJY2hhbmdlZExpbmtzLmFkZChldmVudC5yZXNvdXJjZSk7CgkJCQli
cmVhazsKCQkJY2FzZSBMaWZlY3ljbGVFdmVudC5QUkVfTElOS19DT1BZIDoKCQkJCWNoYW5nZWRM
aW5rcy5hZGQoZXZlbnQubmV3UmVzb3VyY2UpOwoJCQkJYnJlYWs7CgkJCWNhc2UgTGlmZWN5Y2xl
RXZlbnQuUFJFX0xJTktfTU9WRSA6CgkJCQlsaW5rID0gKFJlc291cmNlKSBldmVudC5yZXNvdXJj
ZTsKCQkJCWlmIChsaW5rLmlzTGlua2VkKCkpCgkJCQkJcmVtb3ZlRnJvbUxvY2F0aW9uc01hcChs
aW5rLCBsaW5rLmdldFN0b3JlKCkpOwoJCQkJY2hhbmdlZExpbmtzLmFkZChldmVudC5uZXdSZXNv
dXJjZSk7CgkJCQlicmVhazsKCQl9Cgl9CgoJLyoqCgkgKiBSZXR1cm5zIHRydWUgaWYgdGhpcyBy
ZXNvdXJjZSBpcyBndWFyYW50ZWVkIHRvIGhhdmUgbm8gYWxpYXNlcywgYW5kIGZhbHNlCgkgKiBv
dGhlcndpc2UuCgkgKi8KCXB1YmxpYyBib29sZWFuIGhhc05vQWxpYXNlcyhmaW5hbCBJUmVzb3Vy
Y2UgcmVzb3VyY2UpIHsKCQkvL2NoZWNrIGlmIHdlJ3JlIGluIGFuIGFsaWFzZWQgcHJvamVjdCBv
ciB3b3Jrc3BhY2UgYmVmb3JlIHVwZGF0aW5nIHN0cnVjdHVyZSBjaGFuZ2VzLiAgSW4gdGhlIAoJ
CS8vZGVsZXRpb24gY2FzZSwgd2UgbmVlZCB0byBrbm93IGlmIHRoZSByZXNvdXJjZSB3YXMgaW4g
YW4gYWxpYXNlZCBwcm9qZWN0ICpiZWZvcmUqIGRlbGV0aW9uLgoJCUlQcm9qZWN0IHByb2plY3Qg
PSByZXNvdXJjZS5nZXRQcm9qZWN0KCk7CgkJYm9vbGVhbiBub0FsaWFzZXMgPSAhYWxpYXNlZFBy
b2plY3RzLmNvbnRhaW5zKHByb2plY3QpOwoKCQkvL25vdyB1cGRhdGUgYW55IHN0cnVjdHVyZSBj
aGFuZ2VzIGFuZCBjaGVjayBhZ2FpbiBpZiBhbiB1cGRhdGUgaXMgbmVlZGVkCgkJaWYgKGhhc1N0
cnVjdHVyZUNoYW5nZXMoKSkgewoJCQl1cGRhdGVTdHJ1Y3R1cmVDaGFuZ2VzKCk7CgkJCW5vQWxp
YXNlcyAmPSBub25EZWZhdWx0UmVzb3VyY2VDb3VudCA8PSAwIHx8ICFhbGlhc2VkUHJvamVjdHMu
Y29udGFpbnMocHJvamVjdCk7CgkJfQpTeXN0ZW0ub3V0LnByaW50bG4oIlsiK1RocmVhZC5jdXJy
ZW50VGhyZWFkKCkrIl0gbm9BbGlhc2VzICIrcHJvamVjdCsiID0gIitub0FsaWFzZXMpOwoJCXJl
dHVybiBub0FsaWFzZXM7Cgl9CgoJLyoqCgkgKiBSZXR1cm5zIHdoZXRoZXIgdGhlcmUgYXJlIGFu
eSBzdHJ1Y3R1cmUgY2hhbmdlcyB0aGF0IHdlIGhhdmUgbm90IHlldCBwcm9jZXNzZWQuCgkgKi8K
CXByaXZhdGUgYm9vbGVhbiBoYXNTdHJ1Y3R1cmVDaGFuZ2VzKCkgewoJCXJldHVybiBjaGFuZ2Vk
UHJvamVjdHMgfHwgIWNoYW5nZWRMaW5rcy5pc0VtcHR5KCk7Cgl9CgoJLyoqCgkgKiBDb21wdXRl
cyB0aGUgYWxpYXNlcyBvZiB0aGUgZ2l2ZW4gcmVzb3VyY2UgYXQgdGhlIGdpdmVuIGxvY2F0aW9u
LCBhbmQKCSAqIGFkZHMgdGhlbSB0byB0aGUgImFsaWFzZXMiIGNvbGxlY3Rpb24uCgkgKi8KCXBy
aXZhdGUgdm9pZCBpbnRlcm5hbENvbXB1dGVBbGlhc2VzKElSZXNvdXJjZSByZXNvdXJjZSwgSUZp
bGVTdG9yZSBsb2NhdGlvbikgewoJCUlGaWxlU3RvcmUgc2VhcmNoTG9jYXRpb24gPSBsb2NhdGlv
bjsKCQlpZiAoc2VhcmNoTG9jYXRpb24gPT0gbnVsbCkKCQkJc2VhcmNoTG9jYXRpb24gPSAoKFJl
c291cmNlKSByZXNvdXJjZSkuZ2V0U3RvcmUoKTsKCQkvL2lmIHRoZSBsb2NhdGlvbiBpcyBpbnZh
bGlkIHRoZW4gdGhlcmUgd29uJ3QgYmUgYW55IGFsaWFzZXMgdG8gdXBkYXRlCgkJaWYgKHNlYXJj
aExvY2F0aW9uID09IG51bGwpCgkJCXJldHVybjsKCgkJc3VmZml4ID0gUGF0aC5FTVBUWTsKCQlm
aW5kQWxpYXNlcy5zZXRTZWFyY2hBbGlhcyhyZXNvdXJjZSk7CgkJLyoKCQkgKiBXYWxrIHVwIHRo
ZSBsb2NhdGlvbiBzZWdtZW50cyBmb3IgdGhpcyByZXNvdXJjZSwgbG9va2luZyBmb3IgYQoJCSAq
IHJlc291cmNlIHdpdGggYSBtYXRjaGluZyBsb2NhdGlvbi4gIEFsbCBtYXRjaGVzIGFyZSB0aGVu
IGFkZGVkIHRvIHRoZQoJCSAqICJhbGlhc2VzIiBzZXQuCgkJICovCgkJZG8gewoJCQlsb2NhdGlv
bnNNYXAubWF0Y2hpbmdSZXNvdXJjZXNEbyhzZWFyY2hMb2NhdGlvbiwgZmluZEFsaWFzZXMpOwoJ
CQlzdWZmaXggPSBuZXcgUGF0aChzZWFyY2hMb2NhdGlvbi5nZXROYW1lKCkpLmFwcGVuZChzdWZm
aXgpOwoJCQlzZWFyY2hMb2NhdGlvbiA9IHNlYXJjaExvY2F0aW9uLmdldFBhcmVudCgpOwoJCX0g
d2hpbGUgKHNlYXJjaExvY2F0aW9uICE9IG51bGwpOwoJfQoKCXByaXZhdGUgdm9pZCByZW1vdmVG
cm9tTG9jYXRpb25zTWFwKElSZXNvdXJjZSBsaW5rLCBJRmlsZVN0b3JlIGxvY2F0aW9uKSB7CgkJ
aWYgKGxvY2F0aW9uICE9IG51bGwpCgkJCWlmIChsb2NhdGlvbnNNYXAucmVtb3ZlKGxvY2F0aW9u
LCBsaW5rKSkKCQkJCW5vbkRlZmF1bHRSZXNvdXJjZUNvdW50LS07Cgl9CgoJcHVibGljIHZvaWQg
cmVzb3VyY2VDaGFuZ2VkKElSZXNvdXJjZUNoYW5nZUV2ZW50IGV2ZW50KSB7CgkJZmluYWwgSVJl
c291cmNlRGVsdGEgZGVsdGEgPSBldmVudC5nZXREZWx0YSgpOwoJCWlmIChkZWx0YSA9PSBudWxs
KQoJCQlyZXR1cm47CgkJLy9pbnZhbGlkYXRlIGxvY2F0aW9uIG1hcCBpZiB0aGVyZSBhcmUgYWRk
ZWQgb3IgcmVtb3ZlZCBwcm9qZWN0cy4KCQlpZiAoZGVsdGEuZ2V0QWZmZWN0ZWRDaGlsZHJlbihJ
UmVzb3VyY2VEZWx0YS5BRERFRCB8IElSZXNvdXJjZURlbHRhLlJFTU9WRUQpLmxlbmd0aCA+IDAp
IHsKU3lzdGVtLm91dC5wcmludGxuKCJbIitUaHJlYWQuY3VycmVudFRocmVhZCgpKyJdIGNoYW5n
ZWRQcm9qZWN0cz10cnVlICgxKSIpOwoJCQljaGFuZ2VkUHJvamVjdHMgPSB0cnVlOwoJCX0KCQkK
CQkvLyBpbnZhbGlkYXRlIGxvY2F0aW9uIG1hcCBpZiBhbnkgcHJvamVjdCBoYXMgdGhlIGRlc2Ny
aXB0aW9uIGNoYW5nZWQKCQkvLyBvciB3YXMgY2xvc2VkL29wZW5lZAoJCUlSZXNvdXJjZURlbHRh
W10gY2hhbmdlZCA9IGRlbHRhLmdldEFmZmVjdGVkQ2hpbGRyZW4oSVJlc291cmNlRGVsdGEuQ0hB
TkdFRCk7CgkJZm9yIChpbnQgaSA9IDA7IGkgPCBjaGFuZ2VkLmxlbmd0aDsgaSsrKSB7CgkJCWlm
ICgoY2hhbmdlZFtpXS5nZXRGbGFncygpICYgSVJlc291cmNlRGVsdGEuREVTQ1JJUFRJT04pID09
IElSZXNvdXJjZURlbHRhLkRFU0NSSVBUSU9OIAoJCQkJCXx8IChjaGFuZ2VkW2ldLmdldEZsYWdz
KCkgJiBJUmVzb3VyY2VEZWx0YS5PUEVOKSA9PSBJUmVzb3VyY2VEZWx0YS5PUEVOKSB7ClN5c3Rl
bS5vdXQucHJpbnRsbigiWyIrVGhyZWFkLmN1cnJlbnRUaHJlYWQoKSsiXWNoYW5nZWRQcm9qZWN0
cz10cnVlICgyKSBjaGFuZ2VkPSIrQXJyYXlzLnRvU3RyaW5nKGNoYW5nZWQpKTsKCQkJCWNoYW5n
ZWRQcm9qZWN0cyA9IHRydWU7CgkJCQlicmVhazsKCQkJfQoJCX0KCX0KCgoJLyogKG5vbi1KYXZh
ZG9jKQoJICogQHNlZSBJTWFuYWdlciNzaHV0ZG93bihJUHJvZ3Jlc3NNb25pdG9yKQoJICovCglw
dWJsaWMgdm9pZCBzaHV0ZG93bihJUHJvZ3Jlc3NNb25pdG9yIG1vbml0b3IpIHsKCQl3b3Jrc3Bh
Y2UucmVtb3ZlUmVzb3VyY2VDaGFuZ2VMaXN0ZW5lcih0aGlzKTsKCQlsb2NhdGlvbnNNYXAuY2xl
YXIoKTsKCX0KCgkvKiAobm9uLUphdmFkb2MpCgkgKiBAc2VlIElNYW5hZ2VyI3N0YXJ0dXAoSVBy
b2dyZXNzTW9uaXRvcikKCSAqLwoJcHVibGljIHZvaWQgc3RhcnR1cChJUHJvZ3Jlc3NNb25pdG9y
IG1vbml0b3IpIHsKCQl3b3Jrc3BhY2UuYWRkTGlmZWN5Y2xlTGlzdGVuZXIodGhpcyk7CgkJd29y
a3NwYWNlLmFkZFJlc291cmNlQ2hhbmdlTGlzdGVuZXIodGhpcywgSVJlc291cmNlQ2hhbmdlRXZl
bnQuUE9TVF9DSEFOR0UpOwoJCWJ1aWxkTG9jYXRpb25zTWFwKCk7CgkJYnVpbGRBbGlhc2VkUHJv
amVjdHNTZXQoKTsKCX0KCgkvKioKCSAqIFRoZSBmaWxlIHVuZGVybHlpbmcgdGhlIGdpdmVuIHJl
c291cmNlIGhhcyBjaGFuZ2VkIG9uIGRpc2suICBDb21wdXRlIGFsbAoJICogYWxpYXNlcyBmb3Ig
dGhpcyByZXNvdXJjZSBhbmQgdXBkYXRlIHRoZW0uICBUaGlzIG1ldGhvZCB3aWxsIG5vdCBhdHRl
bXB0CgkgKiB0byBpbmN1ciBhbnkgdW5pdHMgb2Ygd29yayBvbiB0aGUgZ2l2ZW4gcHJvZ3Jlc3Mg
bW9uaXRvciwgYnV0IGl0IG1heQoJICogdXBkYXRlIHRoZSBzdWJ0YXNrIHRvIHJlZmxlY3Qgd2hh
dCBhbGlhc2VzIGFyZSBiZWluZyB1cGRhdGVkLgoJICogQHBhcmFtIHJlc291cmNlIHRoZSByZXNv
dXJjZSB0byBjb21wdXRlIGFsaWFzZXMgZm9yCgkgKiBAcGFyYW0gbG9jYXRpb24gdGhlIGZpbGUg
c3lzdGVtIGxvY2F0aW9uIG9mIHRoZSByZXNvdXJjZSAocGFzc2VkIGFzIGEKCSAqIHBhcmFtZXRl
ciBiZWNhdXNlIGluIHRoZSBwcm9qZWN0IGRlbGV0aW9uIGNhc2UgdGhlIHJlc291cmNlIGlzIG5v
IGxvbmdlcgoJICogYWNjZXNzaWJsZSBhdCB0aW1lIG9mIHVwZGF0ZSkuCgkgKiBAcGFyYW0gZGVw
dGggd2hldGhlciB0byBzZWFyY2ggZm9yIGFsaWFzZXMgb24gYWxsIGNoaWxkcmVuIG9mIHRoZSBn
aXZlbgoJICogcmVzb3VyY2UuICBPbmx5IGRlcHRoIFpFUk8gYW5kIElORklOSVRFIGFyZSB1c2Vk
LgoJICovCglwdWJsaWMgdm9pZCB1cGRhdGVBbGlhc2VzKElSZXNvdXJjZSByZXNvdXJjZSwgSUZp
bGVTdG9yZSBsb2NhdGlvbiwgaW50IGRlcHRoLCBJUHJvZ3Jlc3NNb25pdG9yIG1vbml0b3IpIHRo
cm93cyBDb3JlRXhjZXB0aW9uIHsKCQlpZiAoaGFzTm9BbGlhc2VzKHJlc291cmNlKSkKCQkJcmV0
dXJuOwoJCWFsaWFzZXMuY2xlYXIoKTsKCQlpZiAoZGVwdGggPT0gSVJlc291cmNlLkRFUFRIX1pF
Uk8pCgkJCWludGVybmFsQ29tcHV0ZUFsaWFzZXMocmVzb3VyY2UsIGxvY2F0aW9uKTsKCQllbHNl
CgkJCWNvbXB1dGVEZWVwQWxpYXNlcyhyZXNvdXJjZSwgbG9jYXRpb24pOwoJCWlmIChhbGlhc2Vz
LnNpemUoKSA9PSAwKQoJCQlyZXR1cm47CgkJRmlsZVN5c3RlbVJlc291cmNlTWFuYWdlciBsb2Nh
bE1hbmFnZXIgPSB3b3Jrc3BhY2UuZ2V0RmlsZVN5c3RlbU1hbmFnZXIoKTsKCQlAU3VwcHJlc3NX
YXJuaW5ncygidW5jaGVja2VkIikKCQlIYXNoU2V0PElSZXNvdXJjZT4gYWxpYXNlc0NvcHkgPSAo
SGFzaFNldDxJUmVzb3VyY2U+KSBhbGlhc2VzLmNsb25lKCk7CgkJZm9yIChJdGVyYXRvcjxJUmVz
b3VyY2U+IGl0ID0gYWxpYXNlc0NvcHkuaXRlcmF0b3IoKTsgaXQuaGFzTmV4dCgpOykgewoJCQlJ
UmVzb3VyY2UgYWxpYXMgPSBpdC5uZXh0KCk7CgkJCW1vbml0b3Iuc3ViVGFzayhOTFMuYmluZChN
ZXNzYWdlcy5saW5rc191cGRhdGluZ0R1cGxpY2F0ZSwgYWxpYXMuZ2V0RnVsbFBhdGgoKSkpOwoJ
CQlpZiAoYWxpYXMuZ2V0VHlwZSgpID09IElSZXNvdXJjZS5QUk9KRUNUKSB7CgkJCQlpZiAoY2hl
Y2tEZWxldGlvbigoUHJvamVjdCkgYWxpYXMsIGxvY2F0aW9uKSkKCQkJCQljb250aW51ZTsKCQkJ
CS8vcHJvamVjdCBkaWQgbm90IHJlcXVpcmUgZGVsZXRpb24sIHNvIGZhbGwgdGhyb3VnaCBiZWxv
dyBhbmQgcmVmcmVzaCBpdAoJCQl9CgkJCWlmICghKChSZXNvdXJjZSlhbGlhcykuaXNGaWx0ZXJl
ZCgpKQoJCQkJbG9jYWxNYW5hZ2VyLnJlZnJlc2goYWxpYXMsIElSZXNvdXJjZS5ERVBUSF9JTkZJ
TklURSwgZmFsc2UsIG51bGwpOwoJCX0KCX0KCgkvKioKCSAqIFByb2Nlc3MgYW55IHN0cnVjdHVy
YWwgY2hhbmdlcyB0aGF0IGhhdmUgb2NjdXJyZWQgc2luY2UgdGhlIGxhc3QgYWxpYXMKCSAqIHJl
cXVlc3QuCgkgKi8KCXByaXZhdGUgdm9pZCB1cGRhdGVTdHJ1Y3R1cmVDaGFuZ2VzKCkgewpTeXN0
ZW0ub3V0LnByaW50bG4oIlsiK1RocmVhZC5jdXJyZW50VGhyZWFkKCkrIl0gdXBkYXRlU3RydWN0
dXJlQ2hhbmdlcyBjaGFuZ2VkUHJvamVjdHM9Iit0aGlzLmNoYW5nZWRQcm9qZWN0cyk7CgkJYm9v
bGVhbiBoYWRDaGFuZ2VzID0gZmFsc2U7CgkJaWYgKGNoYW5nZWRQcm9qZWN0cykgewoJCQkvL2lm
IGEgcHJvamVjdCBpcyBhZGRlZCBvciByZW1vdmVkLCBqdXN0IHJlY29tcHV0ZSB0aGUgd2hvbGUg
d29ybGQKCQkJY2hhbmdlZFByb2plY3RzID0gZmFsc2U7CgkJCWhhZENoYW5nZXMgPSB0cnVlOwoJ
CQlidWlsZExvY2F0aW9uc01hcCgpOwoJCX0gZWxzZSB7CgkJCS8vaW5jcmVtZW50YWxseSB1cGRh
dGUgbG9jYXRpb24gbWFwIGZvciBjaGFuZ2VkIGxpbmtzCgkJCWZvciAoSXRlcmF0b3I8SVJlc291
cmNlPiBpdCA9IGNoYW5nZWRMaW5rcy5pdGVyYXRvcigpOyBpdC5oYXNOZXh0KCk7KSB7CgkJCQlJ
UmVzb3VyY2UgcmVzb3VyY2UgPSBpdC5uZXh0KCk7CgkJCQloYWRDaGFuZ2VzID0gdHJ1ZTsKCQkJ
CWlmICghcmVzb3VyY2UuaXNBY2Nlc3NpYmxlKCkpIHsKCQkJCQlTeXN0ZW0ub3V0LnByaW50bG4o
IkluYWNjZXNzaWJsZTogIityZXNvdXJjZSk7CgkJCQkJY29udGludWU7CgkJCQl9CgkJCQlpZiAo
cmVzb3VyY2UuaXNMaW5rZWQoKSkgewoJCQkJCVN5c3RlbS5vdXQucHJpbnRsbigiWyIrVGhyZWFk
LmN1cnJlbnRUaHJlYWQoKSsiXSBsaW5rZWQ6ICIrcmVzb3VyY2UpOwoJCQkJCWFkZFRvTG9jYXRp
b25zTWFwKHJlc291cmNlLCAoKFJlc291cmNlKSByZXNvdXJjZSkuZ2V0U3RvcmUoKSk7CgkJCQl9
IGVsc2UgewoJCQkJCVN5c3RlbS5vdXQucHJpbnRsbigibm90IGxpbmtlZDogIityZXNvdXJjZSk7
CgkJCQl9CgkJCX0KCQl9CgkJY2hhbmdlZExpbmtzLmNsZWFyKCk7CgkJaWYgKGhhZENoYW5nZXMp
CgkJCWJ1aWxkQWxpYXNlZFByb2plY3RzU2V0KCk7CgkJY2hhbmdlZFByb2plY3RzID0gZmFsc2U7
Cgl9Cn0K
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>214764</attachid>
            <date>2012-04-28 10:22:00 -0400</date>
            <delta_ts>2012-04-28 10:22:17 -0400</delta_ts>
            <desc>stack traces at some interesting points in time</desc>
            <filename>EXCEPTIONS.txt</filename>
            <type>text/plain</type>
            <size>32874</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">amF2YS5sYW5nLlJ1bnRpbWVFeGNlcHRpb246IHJlbW92ZWQgRi8ub3JnLmVjbGlwc2UuamR0LmNv
cmUuZXh0ZXJuYWwuZm9sZGVycy8ubGluazc5IGF0IC9ob21lL3N0ZXBoYW4vd29ya3NwYWNlcy9q
ZHQtY29yZS1naXQvYnVnMzY3NjY5LWV4dGVybmFsLWZvbGRlcnMvZHNsU3VwcG9ydAoJYXQgb3Jn
LmVjbGlwc2UuY29yZS5pbnRlcm5hbC5yZXNvdXJjZXMuQWxpYXNNYW5hZ2VyJExvY2F0aW9uTWFw
LnJlbW92ZShBbGlhc01hbmFnZXIuamF2YToyODQpCglhdCBvcmcuZWNsaXBzZS5jb3JlLmludGVy
bmFsLnJlc291cmNlcy5BbGlhc01hbmFnZXIucmVtb3ZlRnJvbUxvY2F0aW9uc01hcChBbGlhc01h
bmFnZXIuamF2YTo2ODkpCglhdCBvcmcuZWNsaXBzZS5jb3JlLmludGVybmFsLnJlc291cmNlcy5B
bGlhc01hbmFnZXIuaGFuZGxlRXZlbnQoQWxpYXNNYW5hZ2VyLmphdmE6NjExKQoJYXQgb3JnLmVj
bGlwc2UuY29yZS5pbnRlcm5hbC5yZXNvdXJjZXMuV29ya3NwYWNlLmJyb2FkY2FzdEV2ZW50KFdv
cmtzcGFjZS5qYXZhOjM5MCkKCWF0IG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwucmVzb3VyY2Vz
LlJlc291cmNlLmRlbGV0ZVJlc291cmNlKFJlc291cmNlLmphdmE6ODcwKQoJYXQgb3JnLmVjbGlw
c2UuY29yZS5pbnRlcm5hbC5yZXNvdXJjZXMuUmVzb3VyY2VUcmVlLmRlbGV0ZWRGb2xkZXIoUmVz
b3VyY2VUcmVlLmphdmE6MTQ2KQoJYXQgb3JnLmVjbGlwc2UuY29yZS5pbnRlcm5hbC5yZXNvdXJj
ZXMuUmVzb3VyY2VUcmVlLmludGVybmFsRGVsZXRlRm9sZGVyKFJlc291cmNlVHJlZS5qYXZhOjMz
OSkKCWF0IG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwucmVzb3VyY2VzLlJlc291cmNlVHJlZS5z
dGFuZGFyZERlbGV0ZUZvbGRlcihSZXNvdXJjZVRyZWUuamF2YTo3OTgpCglhdCBvcmcuZWNsaXBz
ZS5jb3JlLmludGVybmFsLnJlc291cmNlcy5SZXNvdXJjZS51bnByb3RlY3RlZERlbGV0ZShSZXNv
dXJjZS5qYXZhOjE5ODEpCglhdCBvcmcuZWNsaXBzZS5jb3JlLmludGVybmFsLnJlc291cmNlcy5S
ZXNvdXJjZS5kZWxldGUoUmVzb3VyY2UuamF2YTo4MDQpCglhdCBvcmcuZWNsaXBzZS5jb3JlLmlu
dGVybmFsLnJlc291cmNlcy5SZXNvdXJjZS5kZWxldGUoUmVzb3VyY2UuamF2YTo3NzApCglhdCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5FeHRlcm5hbEZvbGRlcnNNYW5hZ2VyJDIucnVu
KEV4dGVybmFsRm9sZGVyc01hbmFnZXIuamF2YToyNTYpCglhdCBvcmcuZWNsaXBzZS5jb3JlLmlu
dGVybmFsLnJlc291cmNlcy5Xb3Jrc3BhY2UucnVuKFdvcmtzcGFjZS5qYXZhOjIzNDQpCglhdCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5FeHRlcm5hbEZvbGRlcnNNYW5hZ2VyLmNsZWFu
VXAoRXh0ZXJuYWxGb2xkZXJzTWFuYWdlci5qYXZhOjI1MSkKCWF0IG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb3JlLkphdmFNb2RlbE1hbmFnZXIuc2F2aW5nKEphdmFNb2RlbE1hbmFnZXIuamF2
YTo0MjQ5KQoJYXQgb3JnLmVjbGlwc2UuY29yZS5pbnRlcm5hbC5yZXNvdXJjZXMuU2F2ZU1hbmFn
ZXIuZXhlY3V0ZUxpZmVjeWNsZShTYXZlTWFuYWdlci5qYXZhOjM4MykKCWF0IG9yZy5lY2xpcHNl
LmNvcmUuaW50ZXJuYWwucmVzb3VyY2VzLlNhdmVNYW5hZ2VyJDEucnVuKFNhdmVNYW5hZ2VyLmph
dmE6MTkyKQoJYXQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLlNhZmVSdW5uZXIucnVuKFNhZmVS
dW5uZXIuamF2YTo0MikKCWF0IG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwucmVzb3VyY2VzLlNh
dmVNYW5hZ2VyLmJyb2FkY2FzdExpZmVjeWNsZShTYXZlTWFuYWdlci5qYXZhOjE5NSkKCWF0IG9y
Zy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwucmVzb3VyY2VzLlNhdmVNYW5hZ2VyLnNhdmUoU2F2ZU1h
bmFnZXIuamF2YToxMTMwKQoJYXQgb3JnLmVjbGlwc2UuY29yZS5pbnRlcm5hbC5yZXNvdXJjZXMu
U2F2ZU1hbmFnZXIuc2F2ZShTYXZlTWFuYWdlci5qYXZhOjExMDkpCglhdCBvcmcuZWNsaXBzZS5j
b3JlLmludGVybmFsLnJlc291cmNlcy5EZWxheWVkU25hcHNob3RKb2IucnVuKERlbGF5ZWRTbmFw
c2hvdEpvYi5qYXZhOjUxKQoJYXQgb3JnLmVjbGlwc2UuY29yZS5pbnRlcm5hbC5qb2JzLldvcmtl
ci5ydW4oV29ya2VyLmphdmE6NTQpCmphdmEubGFuZy5SdW50aW1lRXhjZXB0aW9uOiBbVGhyZWFk
W1dvcmtlci0yLDUsbWFpbl1dQUREIEZJUlNUOiBvcmcuZWNsaXBzZS5jb3JlLmludGVybmFsLnJl
c291cmNlcy5BbGlhc01hbmFnZXIkTG9jYXRpb25NYXBAMWUwNmRlOCBGLy5vcmcuZWNsaXBzZS5q
ZHQuY29yZS5leHRlcm5hbC5mb2xkZXJzLy5saW5rNzkgYXQgL2hvbWUvc3RlcGhhbi93b3Jrc3Bh
Y2VzL2pkdC1jb3JlLWdpdC9idWczNjc2NjktZXh0ZXJuYWwtZm9sZGVycy9kc2xTdXBwb3J0Cglh
dCBvcmcuZWNsaXBzZS5jb3JlLmludGVybmFsLnJlc291cmNlcy5BbGlhc01hbmFnZXIkTG9jYXRp
b25NYXAuYWRkKEFsaWFzTWFuYWdlci5qYXZhOjE0MykKCWF0IG9yZy5lY2xpcHNlLmNvcmUuaW50
ZXJuYWwucmVzb3VyY2VzLkFsaWFzTWFuYWdlci5hZGRUb0xvY2F0aW9uc01hcChBbGlhc01hbmFn
ZXIuamF2YTozOTcpCglhdCBvcmcuZWNsaXBzZS5jb3JlLmludGVybmFsLnJlc291cmNlcy5BbGlh
c01hbmFnZXIudXBkYXRlU3RydWN0dXJlQ2hhbmdlcyhBbGlhc01hbmFnZXIuamF2YTo3OTYpCglh
dCBvcmcuZWNsaXBzZS5jb3JlLmludGVybmFsLnJlc291cmNlcy5BbGlhc01hbmFnZXIuaGFzTm9B
bGlhc2VzKEFsaWFzTWFuYWdlci5qYXZhOjY0NykKCWF0IG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJu
YWwucmVzb3VyY2VzLkFsaWFzTWFuYWdlci51cGRhdGVBbGlhc2VzKEFsaWFzTWFuYWdlci5qYXZh
Ojc0OCkKCWF0IG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwubG9jYWxzdG9yZS5GaWxlU3lzdGVt
UmVzb3VyY2VNYW5hZ2VyLmludGVybmFsV3JpdGUoRmlsZVN5c3RlbVJlc291cmNlTWFuYWdlci5q
YXZhOjY0OSkKCWF0IG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwucmVzb3VyY2VzLlByb2plY3Qu
d3JpdGVEZXNjcmlwdGlvbihQcm9qZWN0LmphdmE6MTQ2NSkKCWF0IG9yZy5lY2xpcHNlLmNvcmUu
aW50ZXJuYWwucmVzb3VyY2VzLlByb2plY3Qud3JpdGVEZXNjcmlwdGlvbihQcm9qZWN0LmphdmE6
MTQ0NikKCWF0IG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwucmVzb3VyY2VzLlJlc291cmNlLmRl
bGV0ZVJlc291cmNlKFJlc291cmNlLmphdmE6ODg2KQoJYXQgb3JnLmVjbGlwc2UuY29yZS5pbnRl
cm5hbC5yZXNvdXJjZXMuUmVzb3VyY2VUcmVlLmRlbGV0ZWRGb2xkZXIoUmVzb3VyY2VUcmVlLmph
dmE6MTQ2KQoJYXQgb3JnLmVjbGlwc2UuY29yZS5pbnRlcm5hbC5yZXNvdXJjZXMuUmVzb3VyY2VU
cmVlLmludGVybmFsRGVsZXRlRm9sZGVyKFJlc291cmNlVHJlZS5qYXZhOjMzOSkKCWF0IG9yZy5l
Y2xpcHNlLmNvcmUuaW50ZXJuYWwucmVzb3VyY2VzLlJlc291cmNlVHJlZS5zdGFuZGFyZERlbGV0
ZUZvbGRlcihSZXNvdXJjZVRyZWUuamF2YTo3OTgpCglhdCBvcmcuZWNsaXBzZS5jb3JlLmludGVy
bmFsLnJlc291cmNlcy5SZXNvdXJjZS51bnByb3RlY3RlZERlbGV0ZShSZXNvdXJjZS5qYXZhOjE5
ODEpCglhdCBvcmcuZWNsaXBzZS5jb3JlLmludGVybmFsLnJlc291cmNlcy5SZXNvdXJjZS5kZWxl
dGUoUmVzb3VyY2UuamF2YTo4MDQpCglhdCBvcmcuZWNsaXBzZS5jb3JlLmludGVybmFsLnJlc291
cmNlcy5SZXNvdXJjZS5kZWxldGUoUmVzb3VyY2UuamF2YTo3NzApCglhdCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29yZS5FeHRlcm5hbEZvbGRlcnNNYW5hZ2VyJDIucnVuKEV4dGVybmFsRm9s
ZGVyc01hbmFnZXIuamF2YToyNTYpCglhdCBvcmcuZWNsaXBzZS5jb3JlLmludGVybmFsLnJlc291
cmNlcy5Xb3Jrc3BhY2UucnVuKFdvcmtzcGFjZS5qYXZhOjIzNDQpCglhdCBvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29yZS5FeHRlcm5hbEZvbGRlcnNNYW5hZ2VyLmNsZWFuVXAoRXh0ZXJuYWxG
b2xkZXJzTWFuYWdlci5qYXZhOjI1MSkKCWF0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3Jl
LkphdmFNb2RlbE1hbmFnZXIuc2F2aW5nKEphdmFNb2RlbE1hbmFnZXIuamF2YTo0MjQ5KQoJYXQg
b3JnLmVjbGlwc2UuY29yZS5pbnRlcm5hbC5yZXNvdXJjZXMuU2F2ZU1hbmFnZXIuZXhlY3V0ZUxp
ZmVjeWNsZShTYXZlTWFuYWdlci5qYXZhOjM4MykKCWF0IG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJu
YWwucmVzb3VyY2VzLlNhdmVNYW5hZ2VyJDEucnVuKFNhdmVNYW5hZ2VyLmphdmE6MTkyKQoJYXQg
b3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLlNhZmVSdW5uZXIucnVuKFNhZmVSdW5uZXIuamF2YTo0
MikKCWF0IG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwucmVzb3VyY2VzLlNhdmVNYW5hZ2VyLmJy
b2FkY2FzdExpZmVjeWNsZShTYXZlTWFuYWdlci5qYXZhOjE5NSkKCWF0IG9yZy5lY2xpcHNlLmNv
cmUuaW50ZXJuYWwucmVzb3VyY2VzLlNhdmVNYW5hZ2VyLnNhdmUoU2F2ZU1hbmFnZXIuamF2YTox
MTMwKQoJYXQgb3JnLmVjbGlwc2UuY29yZS5pbnRlcm5hbC5yZXNvdXJjZXMuU2F2ZU1hbmFnZXIu
c2F2ZShTYXZlTWFuYWdlci5qYXZhOjExMDkpCglhdCBvcmcuZWNsaXBzZS5jb3JlLmludGVybmFs
LnJlc291cmNlcy5EZWxheWVkU25hcHNob3RKb2IucnVuKERlbGF5ZWRTbmFwc2hvdEpvYi5qYXZh
OjUxKQoJYXQgb3JnLmVjbGlwc2UuY29yZS5pbnRlcm5hbC5qb2JzLldvcmtlci5ydW4oV29ya2Vy
LmphdmE6NTQpCmphdmEubGFuZy5SdW50aW1lRXhjZXB0aW9uOiBbVGhyZWFkW21haW4sNSxtYWlu
XV1BREQgRFVQIG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwucmVzb3VyY2VzLkFsaWFzTWFuYWdl
ciRMb2NhdGlvbk1hcEAxZTA2ZGU4IEYvLm9yZy5lY2xpcHNlLmpkdC5jb3JlLmV4dGVybmFsLmZv
bGRlcnMvLmxpbms3OSBGLy5vcmcuZWNsaXBzZS5qZHQuY29yZS5leHRlcm5hbC5mb2xkZXJzLy5s
aW5rODAgYXQgL2hvbWUvc3RlcGhhbi93b3Jrc3BhY2VzL2pkdC1jb3JlLWdpdC9idWczNjc2Njkt
ZXh0ZXJuYWwtZm9sZGVycy9kc2xTdXBwb3J0CglhdCBvcmcuZWNsaXBzZS5jb3JlLmludGVybmFs
LnJlc291cmNlcy5BbGlhc01hbmFnZXIkTG9jYXRpb25NYXAuYWRkKEFsaWFzTWFuYWdlci5qYXZh
OjE1MykKCWF0IG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwucmVzb3VyY2VzLkFsaWFzTWFuYWdl
ci5hZGRUb0xvY2F0aW9uc01hcChBbGlhc01hbmFnZXIuamF2YTozOTcpCglhdCBvcmcuZWNsaXBz
ZS5jb3JlLmludGVybmFsLnJlc291cmNlcy5BbGlhc01hbmFnZXIudXBkYXRlU3RydWN0dXJlQ2hh
bmdlcyhBbGlhc01hbmFnZXIuamF2YTo3OTYpCglhdCBvcmcuZWNsaXBzZS5jb3JlLmludGVybmFs
LnJlc291cmNlcy5BbGlhc01hbmFnZXIuaGFzTm9BbGlhc2VzKEFsaWFzTWFuYWdlci5qYXZhOjY0
NykKCWF0IG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwucmVzb3VyY2VzLkFsaWFzTWFuYWdlci51
cGRhdGVBbGlhc2VzKEFsaWFzTWFuYWdlci5qYXZhOjc0OCkKCWF0IG9yZy5lY2xpcHNlLmNvcmUu
aW50ZXJuYWwubG9jYWxzdG9yZS5GaWxlU3lzdGVtUmVzb3VyY2VNYW5hZ2VyLmludGVybmFsV3Jp
dGUoRmlsZVN5c3RlbVJlc291cmNlTWFuYWdlci5qYXZhOjY0OSkKCWF0IG9yZy5lY2xpcHNlLmNv
cmUuaW50ZXJuYWwucmVzb3VyY2VzLlByb2plY3Qud3JpdGVEZXNjcmlwdGlvbihQcm9qZWN0Lmph
dmE6MTQ2NSkKCWF0IG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwucmVzb3VyY2VzLlByb2plY3Qu
d3JpdGVEZXNjcmlwdGlvbihQcm9qZWN0LmphdmE6MTQ0NikKCWF0IG9yZy5lY2xpcHNlLmNvcmUu
aW50ZXJuYWwucmVzb3VyY2VzLlJlc291cmNlLmNyZWF0ZUxpbmsoUmVzb3VyY2UuamF2YTo2OTYp
CglhdCBvcmcuZWNsaXBzZS5jb3JlLmludGVybmFsLnJlc291cmNlcy5SZXNvdXJjZS5jcmVhdGVM
aW5rKFJlc291cmNlLmphdmE6NjQ3KQoJYXQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUu
RXh0ZXJuYWxGb2xkZXJzTWFuYWdlciQxLnJ1bihFeHRlcm5hbEZvbGRlcnNNYW5hZ2VyLmphdmE6
MTcxKQoJYXQgb3JnLmVjbGlwc2UuY29yZS5pbnRlcm5hbC5yZXNvdXJjZXMuV29ya3NwYWNlLnJ1
bihXb3Jrc3BhY2UuamF2YToyMzQ0KQoJYXQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUu
RXh0ZXJuYWxGb2xkZXJzTWFuYWdlci5jcmVhdGVMaW5rRm9sZGVyKEV4dGVybmFsRm9sZGVyc01h
bmFnZXIuamF2YToxNjkpCglhdCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5FeHRlcm5h
bEZvbGRlcnNNYW5hZ2VyLmNyZWF0ZUxpbmtGb2xkZXIoRXh0ZXJuYWxGb2xkZXJzTWFuYWdlci5q
YXZhOjE1NSkKCWF0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkV4dGVybmFsRm9sZGVy
Q2hhbmdlLnVwZGF0ZUV4dGVybmFsRm9sZGVyc0lmTmVjZXNzYXJ5KEV4dGVybmFsRm9sZGVyQ2hh
bmdlLmphdmE6NDgpCglhdCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5DaGFuZ2VDbGFz
c3BhdGhPcGVyYXRpb24uY2xhc3NwYXRoQ2hhbmdlZChDaGFuZ2VDbGFzc3BhdGhPcGVyYXRpb24u
amF2YTo2MikKCWF0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLlNldENsYXNzcGF0aE9w
ZXJhdGlvbi5leGVjdXRlT3BlcmF0aW9uKFNldENsYXNzcGF0aE9wZXJhdGlvbi5qYXZhOjc0KQoJ
YXQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuSmF2YU1vZGVsT3BlcmF0aW9uLnJ1bihK
YXZhTW9kZWxPcGVyYXRpb24uamF2YTo3MjgpCglhdCBvcmcuZWNsaXBzZS5jb3JlLmludGVybmFs
LnJlc291cmNlcy5Xb3Jrc3BhY2UucnVuKFdvcmtzcGFjZS5qYXZhOjIzNDQpCglhdCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29yZS5KYXZhTW9kZWxPcGVyYXRpb24ucnVuT3BlcmF0aW9uKEph
dmFNb2RlbE9wZXJhdGlvbi5qYXZhOjc5MykKCWF0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b3JlLkphdmFQcm9qZWN0LnNldFJhd0NsYXNzcGF0aChKYXZhUHJvamVjdC5qYXZhOjMwOTUpCglh
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5KYXZhUHJvamVjdC5zZXRSYXdDbGFzc3Bh
dGgoSmF2YVByb2plY3QuamF2YTozMDU3KQoJYXQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
cmUuSmF2YVByb2plY3Quc2V0UmF3Q2xhc3NwYXRoKEphdmFQcm9qZWN0LmphdmE6MzExMCkKCWF0
IGNvbS5zcHJpbmdzb3VyY2Uuc3RzLmdyYWRsZS5jb3JlLmRzbGQuR3JhZGxlRFNMRENsYXNzcGF0
aENvbnRhaW5lci5hZGRUbyhHcmFkbGVEU0xEQ2xhc3NwYXRoQ29udGFpbmVyLmphdmE6OTgpCglh
dCBidWczNjc2NjkuZXh0ZXJuYWwuZm9sZGVycy5CdWdUZXN0LnRlc3RJdChCdWdUZXN0LmphdmE6
NzEpCglhdCBzdW4ucmVmbGVjdC5OYXRpdmVNZXRob2RBY2Nlc3NvckltcGwuaW52b2tlMChOYXRp
dmUgTWV0aG9kKQoJYXQgc3VuLnJlZmxlY3QuTmF0aXZlTWV0aG9kQWNjZXNzb3JJbXBsLmludm9r
ZShOYXRpdmVNZXRob2RBY2Nlc3NvckltcGwuamF2YTozOSkKCWF0IHN1bi5yZWZsZWN0LkRlbGVn
YXRpbmdNZXRob2RBY2Nlc3NvckltcGwuaW52b2tlKERlbGVnYXRpbmdNZXRob2RBY2Nlc3Nvcklt
cGwuamF2YToyNSkKCWF0IGphdmEubGFuZy5yZWZsZWN0Lk1ldGhvZC5pbnZva2UoTWV0aG9kLmph
dmE6NTk3KQoJYXQganVuaXQuZnJhbWV3b3JrLlRlc3RDYXNlLnJ1blRlc3QoVGVzdENhc2UuamF2
YToxNjgpCglhdCBqdW5pdC5mcmFtZXdvcmsuVGVzdENhc2UucnVuQmFyZShUZXN0Q2FzZS5qYXZh
OjEzNCkKCWF0IGp1bml0LmZyYW1ld29yay5UZXN0UmVzdWx0JDEucHJvdGVjdChUZXN0UmVzdWx0
LmphdmE6MTEwKQoJYXQganVuaXQuZnJhbWV3b3JrLlRlc3RSZXN1bHQucnVuUHJvdGVjdGVkKFRl
c3RSZXN1bHQuamF2YToxMjgpCglhdCBqdW5pdC5mcmFtZXdvcmsuVGVzdFJlc3VsdC5ydW4oVGVz
dFJlc3VsdC5qYXZhOjExMykKCWF0IGp1bml0LmZyYW1ld29yay5UZXN0Q2FzZS5ydW4oVGVzdENh
c2UuamF2YToxMjQpCglhdCBqdW5pdC5mcmFtZXdvcmsuVGVzdFN1aXRlLnJ1blRlc3QoVGVzdFN1
aXRlLmphdmE6MjQzKQoJYXQganVuaXQuZnJhbWV3b3JrLlRlc3RTdWl0ZS5ydW4oVGVzdFN1aXRl
LmphdmE6MjM4KQoJYXQgb3JnLmp1bml0LmludGVybmFsLnJ1bm5lcnMuSlVuaXQzOENsYXNzUnVu
bmVyLnJ1bihKVW5pdDM4Q2xhc3NSdW5uZXIuamF2YTo4MykKCWF0IG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5qdW5pdDQucnVubmVyLkpVbml0NFRlc3RSZWZlcmVuY2UucnVuKEpVbml0NFRlc3RS
ZWZlcmVuY2UuamF2YTo1MCkKCWF0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5qdW5pdC5ydW5u
ZXIuVGVzdEV4ZWN1dGlvbi5ydW4oVGVzdEV4ZWN1dGlvbi5qYXZhOjM4KQoJYXQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmp1bml0LnJ1bm5lci5SZW1vdGVUZXN0UnVubmVyLnJ1blRlc3RzKFJl
bW90ZVRlc3RSdW5uZXIuamF2YTo0NjcpCglhdCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuanVu
aXQucnVubmVyLlJlbW90ZVRlc3RSdW5uZXIucnVuVGVzdHMoUmVtb3RlVGVzdFJ1bm5lci5qYXZh
OjY4MykKCWF0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5qdW5pdC5ydW5uZXIuUmVtb3RlVGVz
dFJ1bm5lci5ydW4oUmVtb3RlVGVzdFJ1bm5lci5qYXZhOjM5MCkKCWF0IG9yZy5lY2xpcHNlLnBk
ZS5pbnRlcm5hbC5qdW5pdC5ydW50aW1lLlJlbW90ZVBsdWdpblRlc3RSdW5uZXIubWFpbihSZW1v
dGVQbHVnaW5UZXN0UnVubmVyLmphdmE6NjIpCglhdCBvcmcuZWNsaXBzZS5wZGUuaW50ZXJuYWwu
anVuaXQucnVudGltZS5Db3JlVGVzdEFwcGxpY2F0aW9uLnJ1bihDb3JlVGVzdEFwcGxpY2F0aW9u
LmphdmE6MjMpCglhdCBzdW4ucmVmbGVjdC5OYXRpdmVNZXRob2RBY2Nlc3NvckltcGwuaW52b2tl
MChOYXRpdmUgTWV0aG9kKQoJYXQgc3VuLnJlZmxlY3QuTmF0aXZlTWV0aG9kQWNjZXNzb3JJbXBs
Lmludm9rZShOYXRpdmVNZXRob2RBY2Nlc3NvckltcGwuamF2YTozOSkKCWF0IHN1bi5yZWZsZWN0
LkRlbGVnYXRpbmdNZXRob2RBY2Nlc3NvckltcGwuaW52b2tlKERlbGVnYXRpbmdNZXRob2RBY2Nl
c3NvckltcGwuamF2YToyNSkKCWF0IGphdmEubGFuZy5yZWZsZWN0Lk1ldGhvZC5pbnZva2UoTWV0
aG9kLmphdmE6NTk3KQoJYXQgb3JnLmVjbGlwc2UuZXF1aW5veC5pbnRlcm5hbC5hcHAuRWNsaXBz
ZUFwcENvbnRhaW5lci5jYWxsTWV0aG9kV2l0aEV4Y2VwdGlvbihFY2xpcHNlQXBwQ29udGFpbmVy
LmphdmE6NTg3KQoJYXQgb3JnLmVjbGlwc2UuZXF1aW5veC5pbnRlcm5hbC5hcHAuRWNsaXBzZUFw
cEhhbmRsZS5ydW4oRWNsaXBzZUFwcEhhbmRsZS5qYXZhOjE5OCkKCWF0IG9yZy5lY2xpcHNlLmNv
cmUucnVudGltZS5pbnRlcm5hbC5hZGFwdG9yLkVjbGlwc2VBcHBMYXVuY2hlci5ydW5BcHBsaWNh
dGlvbihFY2xpcHNlQXBwTGF1bmNoZXIuamF2YToxMTApCglhdCBvcmcuZWNsaXBzZS5jb3JlLnJ1
bnRpbWUuaW50ZXJuYWwuYWRhcHRvci5FY2xpcHNlQXBwTGF1bmNoZXIuc3RhcnQoRWNsaXBzZUFw
cExhdW5jaGVyLmphdmE6NzkpCglhdCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuYWRhcHRvci5F
Y2xpcHNlU3RhcnRlci5ydW4oRWNsaXBzZVN0YXJ0ZXIuamF2YTozNTMpCglhdCBvcmcuZWNsaXBz
ZS5jb3JlLnJ1bnRpbWUuYWRhcHRvci5FY2xpcHNlU3RhcnRlci5ydW4oRWNsaXBzZVN0YXJ0ZXIu
amF2YToxODApCglhdCBzdW4ucmVmbGVjdC5OYXRpdmVNZXRob2RBY2Nlc3NvckltcGwuaW52b2tl
MChOYXRpdmUgTWV0aG9kKQoJYXQgc3VuLnJlZmxlY3QuTmF0aXZlTWV0aG9kQWNjZXNzb3JJbXBs
Lmludm9rZShOYXRpdmVNZXRob2RBY2Nlc3NvckltcGwuamF2YTozOSkKCWF0IHN1bi5yZWZsZWN0
LkRlbGVnYXRpbmdNZXRob2RBY2Nlc3NvckltcGwuaW52b2tlKERlbGVnYXRpbmdNZXRob2RBY2Nl
c3NvckltcGwuamF2YToyNSkKCWF0IGphdmEubGFuZy5yZWZsZWN0Lk1ldGhvZC5pbnZva2UoTWV0
aG9kLmphdmE6NTk3KQoJYXQgb3JnLmVjbGlwc2UuZXF1aW5veC5sYXVuY2hlci5NYWluLmludm9r
ZUZyYW1ld29yayhNYWluLmphdmE6NjI5KQoJYXQgb3JnLmVjbGlwc2UuZXF1aW5veC5sYXVuY2hl
ci5NYWluLmJhc2ljUnVuKE1haW4uamF2YTo1ODQpCglhdCBvcmcuZWNsaXBzZS5lcXVpbm94Lmxh
dW5jaGVyLk1haW4ucnVuKE1haW4uamF2YToxNDM4KQoJYXQgb3JnLmVjbGlwc2UuZXF1aW5veC5s
YXVuY2hlci5NYWluLm1haW4oTWFpbi5qYXZhOjE0MTQpCltUaHJlYWRbbWFpbiw1LG1haW5dXURV
UDogRi8ub3JnLmVjbGlwc2UuamR0LmNvcmUuZXh0ZXJuYWwuZm9sZGVycy8ubGluazc5CmphdmEu
bGFuZy5SdW50aW1lRXhjZXB0aW9uOiBbVGhyZWFkW21haW4sNSxtYWluXV0gYWRkIHRvIGNvbGxl
Y3Rpb24gUC8ub3JnLmVjbGlwc2UuamR0LmNvcmUuZXh0ZXJuYWwuZm9sZGVycwoJYXQgb3JnLmVj
bGlwc2UuY29yZS5pbnRlcm5hbC5yZXNvdXJjZXMuQWxpYXNNYW5hZ2VyJEFkZFRvQ29sbGVjdGlv
bkRvaXQuZG9pdChBbGlhc01hbmFnZXIuamF2YTo2MCkKCWF0IG9yZy5lY2xpcHNlLmNvcmUuaW50
ZXJuYWwucmVzb3VyY2VzLkFsaWFzTWFuYWdlciRMb2NhdGlvbk1hcC5vdmVyTGFwcGluZ1Jlc291
cmNlc0RvKEFsaWFzTWFuYWdlci5qYXZhOjI0NykKCWF0IG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJu
YWwucmVzb3VyY2VzLkFsaWFzTWFuYWdlci5idWlsZEFsaWFzZWRQcm9qZWN0c1NldChBbGlhc01h
bmFnZXIuamF2YTo0MTgpCglhdCBvcmcuZWNsaXBzZS5jb3JlLmludGVybmFsLnJlc291cmNlcy5B
bGlhc01hbmFnZXIudXBkYXRlU3RydWN0dXJlQ2hhbmdlcyhBbGlhc01hbmFnZXIuamF2YTo4MDQp
CglhdCBvcmcuZWNsaXBzZS5jb3JlLmludGVybmFsLnJlc291cmNlcy5BbGlhc01hbmFnZXIuaGFz
Tm9BbGlhc2VzKEFsaWFzTWFuYWdlci5qYXZhOjY0NykKCWF0IG9yZy5lY2xpcHNlLmNvcmUuaW50
ZXJuYWwucmVzb3VyY2VzLkFsaWFzTWFuYWdlci51cGRhdGVBbGlhc2VzKEFsaWFzTWFuYWdlci5q
YXZhOjc0OCkKCWF0IG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwubG9jYWxzdG9yZS5GaWxlU3lz
dGVtUmVzb3VyY2VNYW5hZ2VyLmludGVybmFsV3JpdGUoRmlsZVN5c3RlbVJlc291cmNlTWFuYWdl
ci5qYXZhOjY0OSkKCWF0IG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwucmVzb3VyY2VzLlByb2pl
Y3Qud3JpdGVEZXNjcmlwdGlvbihQcm9qZWN0LmphdmE6MTQ2NSkKCWF0IG9yZy5lY2xpcHNlLmNv
cmUuaW50ZXJuYWwucmVzb3VyY2VzLlByb2plY3Qud3JpdGVEZXNjcmlwdGlvbihQcm9qZWN0Lmph
dmE6MTQ0NikKCWF0IG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwucmVzb3VyY2VzLlJlc291cmNl
LmNyZWF0ZUxpbmsoUmVzb3VyY2UuamF2YTo2OTYpCglhdCBvcmcuZWNsaXBzZS5jb3JlLmludGVy
bmFsLnJlc291cmNlcy5SZXNvdXJjZS5jcmVhdGVMaW5rKFJlc291cmNlLmphdmE6NjQ3KQoJYXQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuRXh0ZXJuYWxGb2xkZXJzTWFuYWdlciQxLnJ1
bihFeHRlcm5hbEZvbGRlcnNNYW5hZ2VyLmphdmE6MTcxKQoJYXQgb3JnLmVjbGlwc2UuY29yZS5p
bnRlcm5hbC5yZXNvdXJjZXMuV29ya3NwYWNlLnJ1bihXb3Jrc3BhY2UuamF2YToyMzQ0KQoJYXQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuRXh0ZXJuYWxGb2xkZXJzTWFuYWdlci5jcmVh
dGVMaW5rRm9sZGVyKEV4dGVybmFsRm9sZGVyc01hbmFnZXIuamF2YToxNjkpCglhdCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29yZS5FeHRlcm5hbEZvbGRlcnNNYW5hZ2VyLmNyZWF0ZUxpbmtG
b2xkZXIoRXh0ZXJuYWxGb2xkZXJzTWFuYWdlci5qYXZhOjE1NSkKCWF0IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb3JlLkV4dGVybmFsRm9sZGVyQ2hhbmdlLnVwZGF0ZUV4dGVybmFsRm9sZGVy
c0lmTmVjZXNzYXJ5KEV4dGVybmFsRm9sZGVyQ2hhbmdlLmphdmE6NDgpCglhdCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29yZS5DaGFuZ2VDbGFzc3BhdGhPcGVyYXRpb24uY2xhc3NwYXRoQ2hh
bmdlZChDaGFuZ2VDbGFzc3BhdGhPcGVyYXRpb24uamF2YTo2MikKCWF0IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb3JlLlNldENsYXNzcGF0aE9wZXJhdGlvbi5leGVjdXRlT3BlcmF0aW9uKFNl
dENsYXNzcGF0aE9wZXJhdGlvbi5qYXZhOjc0KQoJYXQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvcmUuSmF2YU1vZGVsT3BlcmF0aW9uLnJ1bihKYXZhTW9kZWxPcGVyYXRpb24uamF2YTo3Mjgp
CglhdCBvcmcuZWNsaXBzZS5jb3JlLmludGVybmFsLnJlc291cmNlcy5Xb3Jrc3BhY2UucnVuKFdv
cmtzcGFjZS5qYXZhOjIzNDQpCglhdCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5KYXZh
TW9kZWxPcGVyYXRpb24ucnVuT3BlcmF0aW9uKEphdmFNb2RlbE9wZXJhdGlvbi5qYXZhOjc5MykK
CWF0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkphdmFQcm9qZWN0LnNldFJhd0NsYXNz
cGF0aChKYXZhUHJvamVjdC5qYXZhOjMwOTUpCglhdCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29yZS5KYXZhUHJvamVjdC5zZXRSYXdDbGFzc3BhdGgoSmF2YVByb2plY3QuamF2YTozMDU3KQoJ
YXQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuSmF2YVByb2plY3Quc2V0UmF3Q2xhc3Nw
YXRoKEphdmFQcm9qZWN0LmphdmE6MzExMCkKCWF0IGNvbS5zcHJpbmdzb3VyY2Uuc3RzLmdyYWRs
ZS5jb3JlLmRzbGQuR3JhZGxlRFNMRENsYXNzcGF0aENvbnRhaW5lci5hZGRUbyhHcmFkbGVEU0xE
Q2xhc3NwYXRoQ29udGFpbmVyLmphdmE6OTgpCglhdCBidWczNjc2NjkuZXh0ZXJuYWwuZm9sZGVy
cy5CdWdUZXN0LnRlc3RJdChCdWdUZXN0LmphdmE6NzEpCglhdCBzdW4ucmVmbGVjdC5OYXRpdmVN
ZXRob2RBY2Nlc3NvckltcGwuaW52b2tlMChOYXRpdmUgTWV0aG9kKQoJYXQgc3VuLnJlZmxlY3Qu
TmF0aXZlTWV0aG9kQWNjZXNzb3JJbXBsLmludm9rZShOYXRpdmVNZXRob2RBY2Nlc3NvckltcGwu
amF2YTozOSkKCWF0IHN1bi5yZWZsZWN0LkRlbGVnYXRpbmdNZXRob2RBY2Nlc3NvckltcGwuaW52
b2tlKERlbGVnYXRpbmdNZXRob2RBY2Nlc3NvckltcGwuamF2YToyNSkKCWF0IGphdmEubGFuZy5y
ZWZsZWN0Lk1ldGhvZC5pbnZva2UoTWV0aG9kLmphdmE6NTk3KQoJYXQganVuaXQuZnJhbWV3b3Jr
LlRlc3RDYXNlLnJ1blRlc3QoVGVzdENhc2UuamF2YToxNjgpCglhdCBqdW5pdC5mcmFtZXdvcmsu
VGVzdENhc2UucnVuQmFyZShUZXN0Q2FzZS5qYXZhOjEzNCkKCWF0IGp1bml0LmZyYW1ld29yay5U
ZXN0UmVzdWx0JDEucHJvdGVjdChUZXN0UmVzdWx0LmphdmE6MTEwKQoJYXQganVuaXQuZnJhbWV3
b3JrLlRlc3RSZXN1bHQucnVuUHJvdGVjdGVkKFRlc3RSZXN1bHQuamF2YToxMjgpCglhdCBqdW5p
dC5mcmFtZXdvcmsuVGVzdFJlc3VsdC5ydW4oVGVzdFJlc3VsdC5qYXZhOjExMykKCWF0IGp1bml0
LmZyYW1ld29yay5UZXN0Q2FzZS5ydW4oVGVzdENhc2UuamF2YToxMjQpCglhdCBqdW5pdC5mcmFt
ZXdvcmsuVGVzdFN1aXRlLnJ1blRlc3QoVGVzdFN1aXRlLmphdmE6MjQzKQoJYXQganVuaXQuZnJh
bWV3b3JrLlRlc3RTdWl0ZS5ydW4oVGVzdFN1aXRlLmphdmE6MjM4KQoJYXQgb3JnLmp1bml0Lmlu
dGVybmFsLnJ1bm5lcnMuSlVuaXQzOENsYXNzUnVubmVyLnJ1bihKVW5pdDM4Q2xhc3NSdW5uZXIu
amF2YTo4MykKCWF0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5qdW5pdDQucnVubmVyLkpVbml0
NFRlc3RSZWZlcmVuY2UucnVuKEpVbml0NFRlc3RSZWZlcmVuY2UuamF2YTo1MCkKCWF0IG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5qdW5pdC5ydW5uZXIuVGVzdEV4ZWN1dGlvbi5ydW4oVGVzdEV4
ZWN1dGlvbi5qYXZhOjM4KQoJYXQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmp1bml0LnJ1bm5l
ci5SZW1vdGVUZXN0UnVubmVyLnJ1blRlc3RzKFJlbW90ZVRlc3RSdW5uZXIuamF2YTo0NjcpCglh
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuanVuaXQucnVubmVyLlJlbW90ZVRlc3RSdW5uZXIu
cnVuVGVzdHMoUmVtb3RlVGVzdFJ1bm5lci5qYXZhOjY4MykKCWF0IG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5qdW5pdC5ydW5uZXIuUmVtb3RlVGVzdFJ1bm5lci5ydW4oUmVtb3RlVGVzdFJ1bm5l
ci5qYXZhOjM5MCkKCWF0IG9yZy5lY2xpcHNlLnBkZS5pbnRlcm5hbC5qdW5pdC5ydW50aW1lLlJl
bW90ZVBsdWdpblRlc3RSdW5uZXIubWFpbihSZW1vdGVQbHVnaW5UZXN0UnVubmVyLmphdmE6NjIp
CglhdCBvcmcuZWNsaXBzZS5wZGUuaW50ZXJuYWwuanVuaXQucnVudGltZS5Db3JlVGVzdEFwcGxp
Y2F0aW9uLnJ1bihDb3JlVGVzdEFwcGxpY2F0aW9uLmphdmE6MjMpCglhdCBzdW4ucmVmbGVjdC5O
YXRpdmVNZXRob2RBY2Nlc3NvckltcGwuaW52b2tlMChOYXRpdmUgTWV0aG9kKQoJYXQgc3VuLnJl
ZmxlY3QuTmF0aXZlTWV0aG9kQWNjZXNzb3JJbXBsLmludm9rZShOYXRpdmVNZXRob2RBY2Nlc3Nv
ckltcGwuamF2YTozOSkKCWF0IHN1bi5yZWZsZWN0LkRlbGVnYXRpbmdNZXRob2RBY2Nlc3Nvcklt
cGwuaW52b2tlKERlbGVnYXRpbmdNZXRob2RBY2Nlc3NvckltcGwuamF2YToyNSkKCWF0IGphdmEu
bGFuZy5yZWZsZWN0Lk1ldGhvZC5pbnZva2UoTWV0aG9kLmphdmE6NTk3KQoJYXQgb3JnLmVjbGlw
c2UuZXF1aW5veC5pbnRlcm5hbC5hcHAuRWNsaXBzZUFwcENvbnRhaW5lci5jYWxsTWV0aG9kV2l0
aEV4Y2VwdGlvbihFY2xpcHNlQXBwQ29udGFpbmVyLmphdmE6NTg3KQoJYXQgb3JnLmVjbGlwc2Uu
ZXF1aW5veC5pbnRlcm5hbC5hcHAuRWNsaXBzZUFwcEhhbmRsZS5ydW4oRWNsaXBzZUFwcEhhbmRs
ZS5qYXZhOjE5OCkKCWF0IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5pbnRlcm5hbC5hZGFwdG9y
LkVjbGlwc2VBcHBMYXVuY2hlci5ydW5BcHBsaWNhdGlvbihFY2xpcHNlQXBwTGF1bmNoZXIuamF2
YToxMTApCglhdCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuaW50ZXJuYWwuYWRhcHRvci5FY2xp
cHNlQXBwTGF1bmNoZXIuc3RhcnQoRWNsaXBzZUFwcExhdW5jaGVyLmphdmE6NzkpCglhdCBvcmcu
ZWNsaXBzZS5jb3JlLnJ1bnRpbWUuYWRhcHRvci5FY2xpcHNlU3RhcnRlci5ydW4oRWNsaXBzZVN0
YXJ0ZXIuamF2YTozNTMpCglhdCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuYWRhcHRvci5FY2xp
cHNlU3RhcnRlci5ydW4oRWNsaXBzZVN0YXJ0ZXIuamF2YToxODApCglhdCBzdW4ucmVmbGVjdC5O
YXRpdmVNZXRob2RBY2Nlc3NvckltcGwuaW52b2tlMChOYXRpdmUgTWV0aG9kKQoJYXQgc3VuLnJl
ZmxlY3QuTmF0aXZlTWV0aG9kQWNjZXNzb3JJbXBsLmludm9rZShOYXRpdmVNZXRob2RBY2Nlc3Nv
ckltcGwuamF2YTozOSkKCWF0IHN1bi5yZWZsZWN0LkRlbGVnYXRpbmdNZXRob2RBY2Nlc3Nvcklt
cGwuaW52b2tlKERlbGVnYXRpbmdNZXRob2RBY2Nlc3NvckltcGwuamF2YToyNSkKCWF0IGphdmEu
bGFuZy5yZWZsZWN0Lk1ldGhvZC5pbnZva2UoTWV0aG9kLmphdmE6NTk3KQoJYXQgb3JnLmVjbGlw
c2UuZXF1aW5veC5sYXVuY2hlci5NYWluLmludm9rZUZyYW1ld29yayhNYWluLmphdmE6NjI5KQoJ
YXQgb3JnLmVjbGlwc2UuZXF1aW5veC5sYXVuY2hlci5NYWluLmJhc2ljUnVuKE1haW4uamF2YTo1
ODQpCglhdCBvcmcuZWNsaXBzZS5lcXVpbm94LmxhdW5jaGVyLk1haW4ucnVuKE1haW4uamF2YTox
NDM4KQoJYXQgb3JnLmVjbGlwc2UuZXF1aW5veC5sYXVuY2hlci5NYWluLm1haW4oTWFpbi5qYXZh
OjE0MTQpCltUaHJlYWRbbWFpbiw1LG1haW5dXURVUDogRi8ub3JnLmVjbGlwc2UuamR0LmNvcmUu
ZXh0ZXJuYWwuZm9sZGVycy8ubGluazgwCmphdmEubGFuZy5SdW50aW1lRXhjZXB0aW9uOiBbVGhy
ZWFkW21haW4sNSxtYWluXV0gYWRkIHRvIGNvbGxlY3Rpb24gUC8ub3JnLmVjbGlwc2UuamR0LmNv
cmUuZXh0ZXJuYWwuZm9sZGVycwoJYXQgb3JnLmVjbGlwc2UuY29yZS5pbnRlcm5hbC5yZXNvdXJj
ZXMuQWxpYXNNYW5hZ2VyJEFkZFRvQ29sbGVjdGlvbkRvaXQuZG9pdChBbGlhc01hbmFnZXIuamF2
YTo2MCkKCWF0IG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwucmVzb3VyY2VzLkFsaWFzTWFuYWdl
ciRMb2NhdGlvbk1hcC5vdmVyTGFwcGluZ1Jlc291cmNlc0RvKEFsaWFzTWFuYWdlci5qYXZhOjI0
NykKCWF0IG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwucmVzb3VyY2VzLkFsaWFzTWFuYWdlci5i
dWlsZEFsaWFzZWRQcm9qZWN0c1NldChBbGlhc01hbmFnZXIuamF2YTo0MTgpCglhdCBvcmcuZWNs
aXBzZS5jb3JlLmludGVybmFsLnJlc291cmNlcy5BbGlhc01hbmFnZXIudXBkYXRlU3RydWN0dXJl
Q2hhbmdlcyhBbGlhc01hbmFnZXIuamF2YTo4MDQpCglhdCBvcmcuZWNsaXBzZS5jb3JlLmludGVy
bmFsLnJlc291cmNlcy5BbGlhc01hbmFnZXIuaGFzTm9BbGlhc2VzKEFsaWFzTWFuYWdlci5qYXZh
OjY0NykKCWF0IG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwucmVzb3VyY2VzLkFsaWFzTWFuYWdl
ci51cGRhdGVBbGlhc2VzKEFsaWFzTWFuYWdlci5qYXZhOjc0OCkKCWF0IG9yZy5lY2xpcHNlLmNv
cmUuaW50ZXJuYWwubG9jYWxzdG9yZS5GaWxlU3lzdGVtUmVzb3VyY2VNYW5hZ2VyLmludGVybmFs
V3JpdGUoRmlsZVN5c3RlbVJlc291cmNlTWFuYWdlci5qYXZhOjY0OSkKCWF0IG9yZy5lY2xpcHNl
LmNvcmUuaW50ZXJuYWwucmVzb3VyY2VzLlByb2plY3Qud3JpdGVEZXNjcmlwdGlvbihQcm9qZWN0
LmphdmE6MTQ2NSkKCWF0IG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwucmVzb3VyY2VzLlByb2pl
Y3Qud3JpdGVEZXNjcmlwdGlvbihQcm9qZWN0LmphdmE6MTQ0NikKCWF0IG9yZy5lY2xpcHNlLmNv
cmUuaW50ZXJuYWwucmVzb3VyY2VzLlJlc291cmNlLmNyZWF0ZUxpbmsoUmVzb3VyY2UuamF2YTo2
OTYpCglhdCBvcmcuZWNsaXBzZS5jb3JlLmludGVybmFsLnJlc291cmNlcy5SZXNvdXJjZS5jcmVh
dGVMaW5rKFJlc291cmNlLmphdmE6NjQ3KQoJYXQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
cmUuRXh0ZXJuYWxGb2xkZXJzTWFuYWdlciQxLnJ1bihFeHRlcm5hbEZvbGRlcnNNYW5hZ2VyLmph
dmE6MTcxKQoJYXQgb3JnLmVjbGlwc2UuY29yZS5pbnRlcm5hbC5yZXNvdXJjZXMuV29ya3NwYWNl
LnJ1bihXb3Jrc3BhY2UuamF2YToyMzQ0KQoJYXQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
cmUuRXh0ZXJuYWxGb2xkZXJzTWFuYWdlci5jcmVhdGVMaW5rRm9sZGVyKEV4dGVybmFsRm9sZGVy
c01hbmFnZXIuamF2YToxNjkpCglhdCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5FeHRl
cm5hbEZvbGRlcnNNYW5hZ2VyLmNyZWF0ZUxpbmtGb2xkZXIoRXh0ZXJuYWxGb2xkZXJzTWFuYWdl
ci5qYXZhOjE1NSkKCWF0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkV4dGVybmFsRm9s
ZGVyQ2hhbmdlLnVwZGF0ZUV4dGVybmFsRm9sZGVyc0lmTmVjZXNzYXJ5KEV4dGVybmFsRm9sZGVy
Q2hhbmdlLmphdmE6NDgpCglhdCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5DaGFuZ2VD
bGFzc3BhdGhPcGVyYXRpb24uY2xhc3NwYXRoQ2hhbmdlZChDaGFuZ2VDbGFzc3BhdGhPcGVyYXRp
b24uamF2YTo2MikKCWF0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLlNldENsYXNzcGF0
aE9wZXJhdGlvbi5leGVjdXRlT3BlcmF0aW9uKFNldENsYXNzcGF0aE9wZXJhdGlvbi5qYXZhOjc0
KQoJYXQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuSmF2YU1vZGVsT3BlcmF0aW9uLnJ1
bihKYXZhTW9kZWxPcGVyYXRpb24uamF2YTo3MjgpCglhdCBvcmcuZWNsaXBzZS5jb3JlLmludGVy
bmFsLnJlc291cmNlcy5Xb3Jrc3BhY2UucnVuKFdvcmtzcGFjZS5qYXZhOjIzNDQpCglhdCBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5KYXZhTW9kZWxPcGVyYXRpb24ucnVuT3BlcmF0aW9u
KEphdmFNb2RlbE9wZXJhdGlvbi5qYXZhOjc5MykKCWF0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb3JlLkphdmFQcm9qZWN0LnNldFJhd0NsYXNzcGF0aChKYXZhUHJvamVjdC5qYXZhOjMwOTUp
CglhdCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5KYXZhUHJvamVjdC5zZXRSYXdDbGFz
c3BhdGgoSmF2YVByb2plY3QuamF2YTozMDU3KQoJYXQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
LmNvcmUuSmF2YVByb2plY3Quc2V0UmF3Q2xhc3NwYXRoKEphdmFQcm9qZWN0LmphdmE6MzExMCkK
CWF0IGNvbS5zcHJpbmdzb3VyY2Uuc3RzLmdyYWRsZS5jb3JlLmRzbGQuR3JhZGxlRFNMRENsYXNz
cGF0aENvbnRhaW5lci5hZGRUbyhHcmFkbGVEU0xEQ2xhc3NwYXRoQ29udGFpbmVyLmphdmE6OTgp
CglhdCBidWczNjc2NjkuZXh0ZXJuYWwuZm9sZGVycy5CdWdUZXN0LnRlc3RJdChCdWdUZXN0Lmph
dmE6NzEpCglhdCBzdW4ucmVmbGVjdC5OYXRpdmVNZXRob2RBY2Nlc3NvckltcGwuaW52b2tlMChO
YXRpdmUgTWV0aG9kKQoJYXQgc3VuLnJlZmxlY3QuTmF0aXZlTWV0aG9kQWNjZXNzb3JJbXBsLmlu
dm9rZShOYXRpdmVNZXRob2RBY2Nlc3NvckltcGwuamF2YTozOSkKCWF0IHN1bi5yZWZsZWN0LkRl
bGVnYXRpbmdNZXRob2RBY2Nlc3NvckltcGwuaW52b2tlKERlbGVnYXRpbmdNZXRob2RBY2Nlc3Nv
ckltcGwuamF2YToyNSkKCWF0IGphdmEubGFuZy5yZWZsZWN0Lk1ldGhvZC5pbnZva2UoTWV0aG9k
LmphdmE6NTk3KQoJYXQganVuaXQuZnJhbWV3b3JrLlRlc3RDYXNlLnJ1blRlc3QoVGVzdENhc2Uu
amF2YToxNjgpCglhdCBqdW5pdC5mcmFtZXdvcmsuVGVzdENhc2UucnVuQmFyZShUZXN0Q2FzZS5q
YXZhOjEzNCkKCWF0IGp1bml0LmZyYW1ld29yay5UZXN0UmVzdWx0JDEucHJvdGVjdChUZXN0UmVz
dWx0LmphdmE6MTEwKQoJYXQganVuaXQuZnJhbWV3b3JrLlRlc3RSZXN1bHQucnVuUHJvdGVjdGVk
KFRlc3RSZXN1bHQuamF2YToxMjgpCglhdCBqdW5pdC5mcmFtZXdvcmsuVGVzdFJlc3VsdC5ydW4o
VGVzdFJlc3VsdC5qYXZhOjExMykKCWF0IGp1bml0LmZyYW1ld29yay5UZXN0Q2FzZS5ydW4oVGVz
dENhc2UuamF2YToxMjQpCglhdCBqdW5pdC5mcmFtZXdvcmsuVGVzdFN1aXRlLnJ1blRlc3QoVGVz
dFN1aXRlLmphdmE6MjQzKQoJYXQganVuaXQuZnJhbWV3b3JrLlRlc3RTdWl0ZS5ydW4oVGVzdFN1
aXRlLmphdmE6MjM4KQoJYXQgb3JnLmp1bml0LmludGVybmFsLnJ1bm5lcnMuSlVuaXQzOENsYXNz
UnVubmVyLnJ1bihKVW5pdDM4Q2xhc3NSdW5uZXIuamF2YTo4MykKCWF0IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5qdW5pdDQucnVubmVyLkpVbml0NFRlc3RSZWZlcmVuY2UucnVuKEpVbml0NFRl
c3RSZWZlcmVuY2UuamF2YTo1MCkKCWF0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5qdW5pdC5y
dW5uZXIuVGVzdEV4ZWN1dGlvbi5ydW4oVGVzdEV4ZWN1dGlvbi5qYXZhOjM4KQoJYXQgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmp1bml0LnJ1bm5lci5SZW1vdGVUZXN0UnVubmVyLnJ1blRlc3Rz
KFJlbW90ZVRlc3RSdW5uZXIuamF2YTo0NjcpCglhdCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
anVuaXQucnVubmVyLlJlbW90ZVRlc3RSdW5uZXIucnVuVGVzdHMoUmVtb3RlVGVzdFJ1bm5lci5q
YXZhOjY4MykKCWF0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5qdW5pdC5ydW5uZXIuUmVtb3Rl
VGVzdFJ1bm5lci5ydW4oUmVtb3RlVGVzdFJ1bm5lci5qYXZhOjM5MCkKCWF0IG9yZy5lY2xpcHNl
LnBkZS5pbnRlcm5hbC5qdW5pdC5ydW50aW1lLlJlbW90ZVBsdWdpblRlc3RSdW5uZXIubWFpbihS
ZW1vdGVQbHVnaW5UZXN0UnVubmVyLmphdmE6NjIpCglhdCBvcmcuZWNsaXBzZS5wZGUuaW50ZXJu
YWwuanVuaXQucnVudGltZS5Db3JlVGVzdEFwcGxpY2F0aW9uLnJ1bihDb3JlVGVzdEFwcGxpY2F0
aW9uLmphdmE6MjMpCglhdCBzdW4ucmVmbGVjdC5OYXRpdmVNZXRob2RBY2Nlc3NvckltcGwuaW52
b2tlMChOYXRpdmUgTWV0aG9kKQoJYXQgc3VuLnJlZmxlY3QuTmF0aXZlTWV0aG9kQWNjZXNzb3JJ
bXBsLmludm9rZShOYXRpdmVNZXRob2RBY2Nlc3NvckltcGwuamF2YTozOSkKCWF0IHN1bi5yZWZs
ZWN0LkRlbGVnYXRpbmdNZXRob2RBY2Nlc3NvckltcGwuaW52b2tlKERlbGVnYXRpbmdNZXRob2RB
Y2Nlc3NvckltcGwuamF2YToyNSkKCWF0IGphdmEubGFuZy5yZWZsZWN0Lk1ldGhvZC5pbnZva2Uo
TWV0aG9kLmphdmE6NTk3KQoJYXQgb3JnLmVjbGlwc2UuZXF1aW5veC5pbnRlcm5hbC5hcHAuRWNs
aXBzZUFwcENvbnRhaW5lci5jYWxsTWV0aG9kV2l0aEV4Y2VwdGlvbihFY2xpcHNlQXBwQ29udGFp
bmVyLmphdmE6NTg3KQoJYXQgb3JnLmVjbGlwc2UuZXF1aW5veC5pbnRlcm5hbC5hcHAuRWNsaXBz
ZUFwcEhhbmRsZS5ydW4oRWNsaXBzZUFwcEhhbmRsZS5qYXZhOjE5OCkKCWF0IG9yZy5lY2xpcHNl
LmNvcmUucnVudGltZS5pbnRlcm5hbC5hZGFwdG9yLkVjbGlwc2VBcHBMYXVuY2hlci5ydW5BcHBs
aWNhdGlvbihFY2xpcHNlQXBwTGF1bmNoZXIuamF2YToxMTApCglhdCBvcmcuZWNsaXBzZS5jb3Jl
LnJ1bnRpbWUuaW50ZXJuYWwuYWRhcHRvci5FY2xpcHNlQXBwTGF1bmNoZXIuc3RhcnQoRWNsaXBz
ZUFwcExhdW5jaGVyLmphdmE6NzkpCglhdCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuYWRhcHRv
ci5FY2xpcHNlU3RhcnRlci5ydW4oRWNsaXBzZVN0YXJ0ZXIuamF2YTozNTMpCglhdCBvcmcuZWNs
aXBzZS5jb3JlLnJ1bnRpbWUuYWRhcHRvci5FY2xpcHNlU3RhcnRlci5ydW4oRWNsaXBzZVN0YXJ0
ZXIuamF2YToxODApCglhdCBzdW4ucmVmbGVjdC5OYXRpdmVNZXRob2RBY2Nlc3NvckltcGwuaW52
b2tlMChOYXRpdmUgTWV0aG9kKQoJYXQgc3VuLnJlZmxlY3QuTmF0aXZlTWV0aG9kQWNjZXNzb3JJ
bXBsLmludm9rZShOYXRpdmVNZXRob2RBY2Nlc3NvckltcGwuamF2YTozOSkKCWF0IHN1bi5yZWZs
ZWN0LkRlbGVnYXRpbmdNZXRob2RBY2Nlc3NvckltcGwuaW52b2tlKERlbGVnYXRpbmdNZXRob2RB
Y2Nlc3NvckltcGwuamF2YToyNSkKCWF0IGphdmEubGFuZy5yZWZsZWN0Lk1ldGhvZC5pbnZva2Uo
TWV0aG9kLmphdmE6NTk3KQoJYXQgb3JnLmVjbGlwc2UuZXF1aW5veC5sYXVuY2hlci5NYWluLmlu
dm9rZUZyYW1ld29yayhNYWluLmphdmE6NjI5KQoJYXQgb3JnLmVjbGlwc2UuZXF1aW5veC5sYXVu
Y2hlci5NYWluLmJhc2ljUnVuKE1haW4uamF2YTo1ODQpCglhdCBvcmcuZWNsaXBzZS5lcXVpbm94
LmxhdW5jaGVyLk1haW4ucnVuKE1haW4uamF2YToxNDM4KQoJYXQgb3JnLmVjbGlwc2UuZXF1aW5v
eC5sYXVuY2hlci5NYWluLm1haW4oTWFpbi5qYXZhOjE0MTQpCm9yZy5lY2xpcHNlLmNvcmUuaW50
ZXJuYWwuZHRyZWUuT2JqZWN0Tm90Rm91bmRFeGNlcHRpb246IFRyZWUgZWxlbWVudCAnLy5vcmcu
ZWNsaXBzZS5qZHQuY29yZS5leHRlcm5hbC5mb2xkZXJzLy5saW5rNzknIG5vdCBmb3VuZC4KCWF0
IG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwuZHRyZWUuQWJzdHJhY3REYXRhVHJlZS5oYW5kbGVO
b3RGb3VuZChBYnN0cmFjdERhdGFUcmVlLmphdmE6MjU3KQoJYXQgb3JnLmVjbGlwc2UuY29yZS5p
bnRlcm5hbC5kdHJlZS5EZWx0YURhdGFUcmVlLmFkZENoaWxkKERlbHRhRGF0YVRyZWUuamF2YTo3
MykKCWF0IG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwuZHRyZWUuRGVsdGFEYXRhVHJlZS5jcmVh
dGVDaGlsZChEZWx0YURhdGFUcmVlLmphdmE6MzMwKQoJYXQgb3JnLmVjbGlwc2UuY29yZS5pbnRl
cm5hbC53YXRzb24uRWxlbWVudFRyZWUuY3JlYXRlRWxlbWVudChFbGVtZW50VHJlZS5qYXZhOjE4
MikKCWF0IG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwucmVzb3VyY2VzLldvcmtzcGFjZS5jcmVh
dGVSZXNvdXJjZShXb3Jrc3BhY2UuamF2YToxMzY5KQoJYXQgb3JnLmVjbGlwc2UuY29yZS5pbnRl
cm5hbC5yZXNvdXJjZXMuV29ya3NwYWNlLmNyZWF0ZVJlc291cmNlKFdvcmtzcGFjZS5qYXZhOjEz
MjIpCglhdCBvcmcuZWNsaXBzZS5jb3JlLmludGVybmFsLmxvY2Fsc3RvcmUuUmVmcmVzaExvY2Fs
VmlzaXRvci5jcmVhdGVSZXNvdXJjZShSZWZyZXNoTG9jYWxWaXNpdG9yLmphdmE6ODApCglhdCBv
cmcuZWNsaXBzZS5jb3JlLmludGVybmFsLmxvY2Fsc3RvcmUuUmVmcmVzaExvY2FsQWxpYXNWaXNp
dG9yLmNyZWF0ZVJlc291cmNlKFJlZnJlc2hMb2NhbEFsaWFzVmlzaXRvci5qYXZhOjQwKQoJYXQg
b3JnLmVjbGlwc2UuY29yZS5pbnRlcm5hbC5sb2NhbHN0b3JlLlJlZnJlc2hMb2NhbFZpc2l0b3Iu
c3luY2hyb25pemVFeGlzdGVuY2UoUmVmcmVzaExvY2FsVmlzaXRvci5qYXZhOjIxOSkKCWF0IG9y
Zy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwubG9jYWxzdG9yZS5SZWZyZXNoTG9jYWxWaXNpdG9yLnZp
c2l0KFJlZnJlc2hMb2NhbFZpc2l0b3IuamF2YToyOTMpCglhdCBvcmcuZWNsaXBzZS5jb3JlLmlu
dGVybmFsLmxvY2Fsc3RvcmUuVW5pZmllZFRyZWUuYWNjZXB0KFVuaWZpZWRUcmVlLmphdmE6MTEw
KQoJYXQgb3JnLmVjbGlwc2UuY29yZS5pbnRlcm5hbC5sb2NhbHN0b3JlLkZpbGVTeXN0ZW1SZXNv
dXJjZU1hbmFnZXIucmVmcmVzaFJlc291cmNlKEZpbGVTeXN0ZW1SZXNvdXJjZU1hbmFnZXIuamF2
YTo5MjApCglhdCBvcmcuZWNsaXBzZS5jb3JlLmludGVybmFsLmxvY2Fsc3RvcmUuRmlsZVN5c3Rl
bVJlc291cmNlTWFuYWdlci5yZWZyZXNoKEZpbGVTeXN0ZW1SZXNvdXJjZU1hbmFnZXIuamF2YTo5
MDQpCglhdCBvcmcuZWNsaXBzZS5jb3JlLmludGVybmFsLnJlc291cmNlcy5SZXNvdXJjZS5yZWZy
ZXNoTG9jYWwoUmVzb3VyY2UuamF2YToxNzAzKQoJYXQgb3JnLmVjbGlwc2UuY29yZS5pbnRlcm5h
bC5yZXNvdXJjZXMuUmVzb3VyY2UuY3JlYXRlTGluayhSZXNvdXJjZS5qYXZhOjcxMSkKCWF0IG9y
Zy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwucmVzb3VyY2VzLlJlc291cmNlLmNyZWF0ZUxpbmsoUmVz
b3VyY2UuamF2YTo2NDcpCglhdCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5FeHRlcm5h
bEZvbGRlcnNNYW5hZ2VyJDEucnVuKEV4dGVybmFsRm9sZGVyc01hbmFnZXIuamF2YToxNzEpCglh
dCBvcmcuZWNsaXBzZS5jb3JlLmludGVybmFsLnJlc291cmNlcy5Xb3Jrc3BhY2UucnVuKFdvcmtz
cGFjZS5qYXZhOjIzNDQpCglhdCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5FeHRlcm5h
bEZvbGRlcnNNYW5hZ2VyLmNyZWF0ZUxpbmtGb2xkZXIoRXh0ZXJuYWxGb2xkZXJzTWFuYWdlci5q
YXZhOjE2OSkKCWF0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkV4dGVybmFsRm9sZGVy
c01hbmFnZXIuY3JlYXRlTGlua0ZvbGRlcihFeHRlcm5hbEZvbGRlcnNNYW5hZ2VyLmphdmE6MTU1
KQoJYXQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuRXh0ZXJuYWxGb2xkZXJDaGFuZ2Uu
dXBkYXRlRXh0ZXJuYWxGb2xkZXJzSWZOZWNlc3NhcnkoRXh0ZXJuYWxGb2xkZXJDaGFuZ2UuamF2
YTo0OCkKCWF0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkNoYW5nZUNsYXNzcGF0aE9w
ZXJhdGlvbi5jbGFzc3BhdGhDaGFuZ2VkKENoYW5nZUNsYXNzcGF0aE9wZXJhdGlvbi5qYXZhOjYy
KQoJYXQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuU2V0Q2xhc3NwYXRoT3BlcmF0aW9u
LmV4ZWN1dGVPcGVyYXRpb24oU2V0Q2xhc3NwYXRoT3BlcmF0aW9uLmphdmE6NzQpCglhdCBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5KYXZhTW9kZWxPcGVyYXRpb24ucnVuKEphdmFNb2Rl
bE9wZXJhdGlvbi5qYXZhOjcyOCkKCWF0IG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwucmVzb3Vy
Y2VzLldvcmtzcGFjZS5ydW4oV29ya3NwYWNlLmphdmE6MjM0NCkKCWF0IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb3JlLkphdmFNb2RlbE9wZXJhdGlvbi5ydW5PcGVyYXRpb24oSmF2YU1vZGVs
T3BlcmF0aW9uLmphdmE6NzkzKQoJYXQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuSmF2
YVByb2plY3Quc2V0UmF3Q2xhc3NwYXRoKEphdmFQcm9qZWN0LmphdmE6MzA5NSkKCWF0IG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkphdmFQcm9qZWN0LnNldFJhd0NsYXNzcGF0aChKYXZh
UHJvamVjdC5qYXZhOjMwNTcpCglhdCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5KYXZh
UHJvamVjdC5zZXRSYXdDbGFzc3BhdGgoSmF2YVByb2plY3QuamF2YTozMTEwKQoJYXQgY29tLnNw
cmluZ3NvdXJjZS5zdHMuZ3JhZGxlLmNvcmUuZHNsZC5HcmFkbGVEU0xEQ2xhc3NwYXRoQ29udGFp
bmVyLmFkZFRvKEdyYWRsZURTTERDbGFzc3BhdGhDb250YWluZXIuamF2YTo5OCkKCWF0IGJ1ZzM2
NzY2OS5leHRlcm5hbC5mb2xkZXJzLkJ1Z1Rlc3QudGVzdEl0KEJ1Z1Rlc3QuamF2YTo3MSkKCWF0
IHN1bi5yZWZsZWN0Lk5hdGl2ZU1ldGhvZEFjY2Vzc29ySW1wbC5pbnZva2UwKE5hdGl2ZSBNZXRo
b2QpCglhdCBzdW4ucmVmbGVjdC5OYXRpdmVNZXRob2RBY2Nlc3NvckltcGwuaW52b2tlKE5hdGl2
ZU1ldGhvZEFjY2Vzc29ySW1wbC5qYXZhOjM5KQoJYXQgc3VuLnJlZmxlY3QuRGVsZWdhdGluZ01l
dGhvZEFjY2Vzc29ySW1wbC5pbnZva2UoRGVsZWdhdGluZ01ldGhvZEFjY2Vzc29ySW1wbC5qYXZh
OjI1KQoJYXQgamF2YS5sYW5nLnJlZmxlY3QuTWV0aG9kLmludm9rZShNZXRob2QuamF2YTo1OTcp
CglhdCBqdW5pdC5mcmFtZXdvcmsuVGVzdENhc2UucnVuVGVzdChUZXN0Q2FzZS5qYXZhOjE2OCkK
CWF0IGp1bml0LmZyYW1ld29yay5UZXN0Q2FzZS5ydW5CYXJlKFRlc3RDYXNlLmphdmE6MTM0KQoJ
YXQganVuaXQuZnJhbWV3b3JrLlRlc3RSZXN1bHQkMS5wcm90ZWN0KFRlc3RSZXN1bHQuamF2YTox
MTApCglhdCBqdW5pdC5mcmFtZXdvcmsuVGVzdFJlc3VsdC5ydW5Qcm90ZWN0ZWQoVGVzdFJlc3Vs
dC5qYXZhOjEyOCkKCWF0IGp1bml0LmZyYW1ld29yay5UZXN0UmVzdWx0LnJ1bihUZXN0UmVzdWx0
LmphdmE6MTEzKQoJYXQganVuaXQuZnJhbWV3b3JrLlRlc3RDYXNlLnJ1bihUZXN0Q2FzZS5qYXZh
OjEyNCkKCWF0IGp1bml0LmZyYW1ld29yay5UZXN0U3VpdGUucnVuVGVzdChUZXN0U3VpdGUuamF2
YToyNDMpCglhdCBqdW5pdC5mcmFtZXdvcmsuVGVzdFN1aXRlLnJ1bihUZXN0U3VpdGUuamF2YToy
MzgpCglhdCBvcmcuanVuaXQuaW50ZXJuYWwucnVubmVycy5KVW5pdDM4Q2xhc3NSdW5uZXIucnVu
KEpVbml0MzhDbGFzc1J1bm5lci5qYXZhOjgzKQoJYXQgb3JnLmVjbGlwc2UuamR0LmludGVybmFs
Lmp1bml0NC5ydW5uZXIuSlVuaXQ0VGVzdFJlZmVyZW5jZS5ydW4oSlVuaXQ0VGVzdFJlZmVyZW5j
ZS5qYXZhOjUwKQoJYXQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmp1bml0LnJ1bm5lci5UZXN0
RXhlY3V0aW9uLnJ1bihUZXN0RXhlY3V0aW9uLmphdmE6MzgpCglhdCBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuanVuaXQucnVubmVyLlJlbW90ZVRlc3RSdW5uZXIucnVuVGVzdHMoUmVtb3RlVGVz
dFJ1bm5lci5qYXZhOjQ2NykKCWF0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5qdW5pdC5ydW5u
ZXIuUmVtb3RlVGVzdFJ1bm5lci5ydW5UZXN0cyhSZW1vdGVUZXN0UnVubmVyLmphdmE6NjgzKQoJ
YXQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmp1bml0LnJ1bm5lci5SZW1vdGVUZXN0UnVubmVy
LnJ1bihSZW1vdGVUZXN0UnVubmVyLmphdmE6MzkwKQoJYXQgb3JnLmVjbGlwc2UucGRlLmludGVy
bmFsLmp1bml0LnJ1bnRpbWUuUmVtb3RlUGx1Z2luVGVzdFJ1bm5lci5tYWluKFJlbW90ZVBsdWdp
blRlc3RSdW5uZXIuamF2YTo2MikKCWF0IG9yZy5lY2xpcHNlLnBkZS5pbnRlcm5hbC5qdW5pdC5y
dW50aW1lLkNvcmVUZXN0QXBwbGljYXRpb24ucnVuKENvcmVUZXN0QXBwbGljYXRpb24uamF2YToy
MykKCWF0IHN1bi5yZWZsZWN0Lk5hdGl2ZU1ldGhvZEFjY2Vzc29ySW1wbC5pbnZva2UwKE5hdGl2
ZSBNZXRob2QpCglhdCBzdW4ucmVmbGVjdC5OYXRpdmVNZXRob2RBY2Nlc3NvckltcGwuaW52b2tl
KE5hdGl2ZU1ldGhvZEFjY2Vzc29ySW1wbC5qYXZhOjM5KQoJYXQgc3VuLnJlZmxlY3QuRGVsZWdh
dGluZ01ldGhvZEFjY2Vzc29ySW1wbC5pbnZva2UoRGVsZWdhdGluZ01ldGhvZEFjY2Vzc29ySW1w
bC5qYXZhOjI1KQoJYXQgamF2YS5sYW5nLnJlZmxlY3QuTWV0aG9kLmludm9rZShNZXRob2QuamF2
YTo1OTcpCglhdCBvcmcuZWNsaXBzZS5lcXVpbm94LmludGVybmFsLmFwcC5FY2xpcHNlQXBwQ29u
dGFpbmVyLmNhbGxNZXRob2RXaXRoRXhjZXB0aW9uKEVjbGlwc2VBcHBDb250YWluZXIuamF2YTo1
ODcpCglhdCBvcmcuZWNsaXBzZS5lcXVpbm94LmludGVybmFsLmFwcC5FY2xpcHNlQXBwSGFuZGxl
LnJ1bihFY2xpcHNlQXBwSGFuZGxlLmphdmE6MTk4KQoJYXQgb3JnLmVjbGlwc2UuY29yZS5ydW50
aW1lLmludGVybmFsLmFkYXB0b3IuRWNsaXBzZUFwcExhdW5jaGVyLnJ1bkFwcGxpY2F0aW9uKEVj
bGlwc2VBcHBMYXVuY2hlci5qYXZhOjExMCkKCWF0IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5p
bnRlcm5hbC5hZGFwdG9yLkVjbGlwc2VBcHBMYXVuY2hlci5zdGFydChFY2xpcHNlQXBwTGF1bmNo
ZXIuamF2YTo3OSkKCWF0IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5hZGFwdG9yLkVjbGlwc2VT
dGFydGVyLnJ1bihFY2xpcHNlU3RhcnRlci5qYXZhOjM1MykKCWF0IG9yZy5lY2xpcHNlLmNvcmUu
cnVudGltZS5hZGFwdG9yLkVjbGlwc2VTdGFydGVyLnJ1bihFY2xpcHNlU3RhcnRlci5qYXZhOjE4
MCkKCWF0IHN1bi5yZWZsZWN0Lk5hdGl2ZU1ldGhvZEFjY2Vzc29ySW1wbC5pbnZva2UwKE5hdGl2
ZSBNZXRob2QpCglhdCBzdW4ucmVmbGVjdC5OYXRpdmVNZXRob2RBY2Nlc3NvckltcGwuaW52b2tl
KE5hdGl2ZU1ldGhvZEFjY2Vzc29ySW1wbC5qYXZhOjM5KQoJYXQgc3VuLnJlZmxlY3QuRGVsZWdh
dGluZ01ldGhvZEFjY2Vzc29ySW1wbC5pbnZva2UoRGVsZWdhdGluZ01ldGhvZEFjY2Vzc29ySW1w
bC5qYXZhOjI1KQoJYXQgamF2YS5sYW5nLnJlZmxlY3QuTWV0aG9kLmludm9rZShNZXRob2QuamF2
YTo1OTcpCglhdCBvcmcuZWNsaXBzZS5lcXVpbm94LmxhdW5jaGVyLk1haW4uaW52b2tlRnJhbWV3
b3JrKE1haW4uamF2YTo2MjkpCglhdCBvcmcuZWNsaXBzZS5lcXVpbm94LmxhdW5jaGVyLk1haW4u
YmFzaWNSdW4oTWFpbi5qYXZhOjU4NCkKCWF0IG9yZy5lY2xpcHNlLmVxdWlub3gubGF1bmNoZXIu
TWFpbi5ydW4oTWFpbi5qYXZhOjE0MzgpCglhdCBvcmcuZWNsaXBzZS5lcXVpbm94LmxhdW5jaGVy
Lk1haW4ubWFpbihNYWluLmphdmE6MTQxNCkKamF2YS5sYW5nLklsbGVnYWxBcmd1bWVudEV4Y2Vw
dGlvbjogRWxlbWVudCBub3QgZm91bmQ6IC8ub3JnLmVjbGlwc2UuamR0LmNvcmUuZXh0ZXJuYWwu
Zm9sZGVycy8ubGluazc5LgoJYXQgb3JnLmVjbGlwc2UuY29yZS5pbnRlcm5hbC53YXRzb24uRWxl
bWVudFRyZWUuZWxlbWVudE5vdEZvdW5kKEVsZW1lbnRUcmVlLmphdmE6MjU3KQoJYXQgb3JnLmVj
bGlwc2UuY29yZS5pbnRlcm5hbC53YXRzb24uRWxlbWVudFRyZWUuY3JlYXRlRWxlbWVudChFbGVt
ZW50VHJlZS5qYXZhOjE4NSkKCWF0IG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwucmVzb3VyY2Vz
LldvcmtzcGFjZS5jcmVhdGVSZXNvdXJjZShXb3Jrc3BhY2UuamF2YToxMzY5KQoJYXQgb3JnLmVj
bGlwc2UuY29yZS5pbnRlcm5hbC5yZXNvdXJjZXMuV29ya3NwYWNlLmNyZWF0ZVJlc291cmNlKFdv
cmtzcGFjZS5qYXZhOjEzMjIpCglhdCBvcmcuZWNsaXBzZS5jb3JlLmludGVybmFsLmxvY2Fsc3Rv
cmUuUmVmcmVzaExvY2FsVmlzaXRvci5jcmVhdGVSZXNvdXJjZShSZWZyZXNoTG9jYWxWaXNpdG9y
LmphdmE6ODApCglhdCBvcmcuZWNsaXBzZS5jb3JlLmludGVybmFsLmxvY2Fsc3RvcmUuUmVmcmVz
aExvY2FsQWxpYXNWaXNpdG9yLmNyZWF0ZVJlc291cmNlKFJlZnJlc2hMb2NhbEFsaWFzVmlzaXRv
ci5qYXZhOjQwKQoJYXQgb3JnLmVjbGlwc2UuY29yZS5pbnRlcm5hbC5sb2NhbHN0b3JlLlJlZnJl
c2hMb2NhbFZpc2l0b3Iuc3luY2hyb25pemVFeGlzdGVuY2UoUmVmcmVzaExvY2FsVmlzaXRvci5q
YXZhOjIxOSkKCWF0IG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwubG9jYWxzdG9yZS5SZWZyZXNo
TG9jYWxWaXNpdG9yLnZpc2l0KFJlZnJlc2hMb2NhbFZpc2l0b3IuamF2YToyOTMpCglhdCBvcmcu
ZWNsaXBzZS5jb3JlLmludGVybmFsLmxvY2Fsc3RvcmUuVW5pZmllZFRyZWUuYWNjZXB0KFVuaWZp
ZWRUcmVlLmphdmE6MTEwKQoJYXQgb3JnLmVjbGlwc2UuY29yZS5pbnRlcm5hbC5sb2NhbHN0b3Jl
LkZpbGVTeXN0ZW1SZXNvdXJjZU1hbmFnZXIucmVmcmVzaFJlc291cmNlKEZpbGVTeXN0ZW1SZXNv
dXJjZU1hbmFnZXIuamF2YTo5MjApCglhdCBvcmcuZWNsaXBzZS5jb3JlLmludGVybmFsLmxvY2Fs
c3RvcmUuRmlsZVN5c3RlbVJlc291cmNlTWFuYWdlci5yZWZyZXNoKEZpbGVTeXN0ZW1SZXNvdXJj
ZU1hbmFnZXIuamF2YTo5MDQpCglhdCBvcmcuZWNsaXBzZS5jb3JlLmludGVybmFsLnJlc291cmNl
cy5SZXNvdXJjZS5yZWZyZXNoTG9jYWwoUmVzb3VyY2UuamF2YToxNzAzKQoJYXQgb3JnLmVjbGlw
c2UuY29yZS5pbnRlcm5hbC5yZXNvdXJjZXMuUmVzb3VyY2UuY3JlYXRlTGluayhSZXNvdXJjZS5q
YXZhOjcxMSkKCWF0IG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwucmVzb3VyY2VzLlJlc291cmNl
LmNyZWF0ZUxpbmsoUmVzb3VyY2UuamF2YTo2NDcpCglhdCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29yZS5FeHRlcm5hbEZvbGRlcnNNYW5hZ2VyJDEucnVuKEV4dGVybmFsRm9sZGVyc01hbmFn
ZXIuamF2YToxNzEpCglhdCBvcmcuZWNsaXBzZS5jb3JlLmludGVybmFsLnJlc291cmNlcy5Xb3Jr
c3BhY2UucnVuKFdvcmtzcGFjZS5qYXZhOjIzNDQpCglhdCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29yZS5FeHRlcm5hbEZvbGRlcnNNYW5hZ2VyLmNyZWF0ZUxpbmtGb2xkZXIoRXh0ZXJuYWxG
b2xkZXJzTWFuYWdlci5qYXZhOjE2OSkKCWF0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3Jl
LkV4dGVybmFsRm9sZGVyc01hbmFnZXIuY3JlYXRlTGlua0ZvbGRlcihFeHRlcm5hbEZvbGRlcnNN
YW5hZ2VyLmphdmE6MTU1KQoJYXQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuRXh0ZXJu
YWxGb2xkZXJDaGFuZ2UudXBkYXRlRXh0ZXJuYWxGb2xkZXJzSWZOZWNlc3NhcnkoRXh0ZXJuYWxG
b2xkZXJDaGFuZ2UuamF2YTo0OCkKCWF0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkNo
YW5nZUNsYXNzcGF0aE9wZXJhdGlvbi5jbGFzc3BhdGhDaGFuZ2VkKENoYW5nZUNsYXNzcGF0aE9w
ZXJhdGlvbi5qYXZhOjYyKQoJYXQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuU2V0Q2xh
c3NwYXRoT3BlcmF0aW9uLmV4ZWN1dGVPcGVyYXRpb24oU2V0Q2xhc3NwYXRoT3BlcmF0aW9uLmph
dmE6NzQpCglhdCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5KYXZhTW9kZWxPcGVyYXRp
b24ucnVuKEphdmFNb2RlbE9wZXJhdGlvbi5qYXZhOjcyOCkKCWF0IG9yZy5lY2xpcHNlLmNvcmUu
aW50ZXJuYWwucmVzb3VyY2VzLldvcmtzcGFjZS5ydW4oV29ya3NwYWNlLmphdmE6MjM0NCkKCWF0
IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkphdmFNb2RlbE9wZXJhdGlvbi5ydW5PcGVy
YXRpb24oSmF2YU1vZGVsT3BlcmF0aW9uLmphdmE6NzkzKQoJYXQgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvcmUuSmF2YVByb2plY3Quc2V0UmF3Q2xhc3NwYXRoKEphdmFQcm9qZWN0LmphdmE6
MzA5NSkKCWF0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkphdmFQcm9qZWN0LnNldFJh
d0NsYXNzcGF0aChKYXZhUHJvamVjdC5qYXZhOjMwNTcpCglhdCBvcmcuZWNsaXBzZS5qZHQuaW50
ZXJuYWwuY29yZS5KYXZhUHJvamVjdC5zZXRSYXdDbGFzc3BhdGgoSmF2YVByb2plY3QuamF2YToz
MTEwKQoJYXQgY29tLnNwcmluZ3NvdXJjZS5zdHMuZ3JhZGxlLmNvcmUuZHNsZC5HcmFkbGVEU0xE
Q2xhc3NwYXRoQ29udGFpbmVyLmFkZFRvKEdyYWRsZURTTERDbGFzc3BhdGhDb250YWluZXIuamF2
YTo5OCkKCWF0IGJ1ZzM2NzY2OS5leHRlcm5hbC5mb2xkZXJzLkJ1Z1Rlc3QudGVzdEl0KEJ1Z1Rl
c3QuamF2YTo3MSkKCWF0IHN1bi5yZWZsZWN0Lk5hdGl2ZU1ldGhvZEFjY2Vzc29ySW1wbC5pbnZv
a2UwKE5hdGl2ZSBNZXRob2QpCglhdCBzdW4ucmVmbGVjdC5OYXRpdmVNZXRob2RBY2Nlc3Nvcklt
cGwuaW52b2tlKE5hdGl2ZU1ldGhvZEFjY2Vzc29ySW1wbC5qYXZhOjM5KQoJYXQgc3VuLnJlZmxl
Y3QuRGVsZWdhdGluZ01ldGhvZEFjY2Vzc29ySW1wbC5pbnZva2UoRGVsZWdhdGluZ01ldGhvZEFj
Y2Vzc29ySW1wbC5qYXZhOjI1KQoJYXQgamF2YS5sYW5nLnJlZmxlY3QuTWV0aG9kLmludm9rZShN
ZXRob2QuamF2YTo1OTcpCglhdCBqdW5pdC5mcmFtZXdvcmsuVGVzdENhc2UucnVuVGVzdChUZXN0
Q2FzZS5qYXZhOjE2OCkKCWF0IGp1bml0LmZyYW1ld29yay5UZXN0Q2FzZS5ydW5CYXJlKFRlc3RD
YXNlLmphdmE6MTM0KQoJYXQganVuaXQuZnJhbWV3b3JrLlRlc3RSZXN1bHQkMS5wcm90ZWN0KFRl
c3RSZXN1bHQuamF2YToxMTApCglhdCBqdW5pdC5mcmFtZXdvcmsuVGVzdFJlc3VsdC5ydW5Qcm90
ZWN0ZWQoVGVzdFJlc3VsdC5qYXZhOjEyOCkKCWF0IGp1bml0LmZyYW1ld29yay5UZXN0UmVzdWx0
LnJ1bihUZXN0UmVzdWx0LmphdmE6MTEzKQoJYXQganVuaXQuZnJhbWV3b3JrLlRlc3RDYXNlLnJ1
bihUZXN0Q2FzZS5qYXZhOjEyNCkKCWF0IGp1bml0LmZyYW1ld29yay5UZXN0U3VpdGUucnVuVGVz
dChUZXN0U3VpdGUuamF2YToyNDMpCglhdCBqdW5pdC5mcmFtZXdvcmsuVGVzdFN1aXRlLnJ1bihU
ZXN0U3VpdGUuamF2YToyMzgpCglhdCBvcmcuanVuaXQuaW50ZXJuYWwucnVubmVycy5KVW5pdDM4
Q2xhc3NSdW5uZXIucnVuKEpVbml0MzhDbGFzc1J1bm5lci5qYXZhOjgzKQoJYXQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmp1bml0NC5ydW5uZXIuSlVuaXQ0VGVzdFJlZmVyZW5jZS5ydW4oSlVu
aXQ0VGVzdFJlZmVyZW5jZS5qYXZhOjUwKQoJYXQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmp1
bml0LnJ1bm5lci5UZXN0RXhlY3V0aW9uLnJ1bihUZXN0RXhlY3V0aW9uLmphdmE6MzgpCglhdCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuanVuaXQucnVubmVyLlJlbW90ZVRlc3RSdW5uZXIucnVu
VGVzdHMoUmVtb3RlVGVzdFJ1bm5lci5qYXZhOjQ2NykKCWF0IG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5qdW5pdC5ydW5uZXIuUmVtb3RlVGVzdFJ1bm5lci5ydW5UZXN0cyhSZW1vdGVUZXN0UnVu
bmVyLmphdmE6NjgzKQoJYXQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmp1bml0LnJ1bm5lci5S
ZW1vdGVUZXN0UnVubmVyLnJ1bihSZW1vdGVUZXN0UnVubmVyLmphdmE6MzkwKQoJYXQgb3JnLmVj
bGlwc2UucGRlLmludGVybmFsLmp1bml0LnJ1bnRpbWUuUmVtb3RlUGx1Z2luVGVzdFJ1bm5lci5t
YWluKFJlbW90ZVBsdWdpblRlc3RSdW5uZXIuamF2YTo2MikKCWF0IG9yZy5lY2xpcHNlLnBkZS5p
bnRlcm5hbC5qdW5pdC5ydW50aW1lLkNvcmVUZXN0QXBwbGljYXRpb24ucnVuKENvcmVUZXN0QXBw
bGljYXRpb24uamF2YToyMykKCWF0IHN1bi5yZWZsZWN0Lk5hdGl2ZU1ldGhvZEFjY2Vzc29ySW1w
bC5pbnZva2UwKE5hdGl2ZSBNZXRob2QpCglhdCBzdW4ucmVmbGVjdC5OYXRpdmVNZXRob2RBY2Nl
c3NvckltcGwuaW52b2tlKE5hdGl2ZU1ldGhvZEFjY2Vzc29ySW1wbC5qYXZhOjM5KQoJYXQgc3Vu
LnJlZmxlY3QuRGVsZWdhdGluZ01ldGhvZEFjY2Vzc29ySW1wbC5pbnZva2UoRGVsZWdhdGluZ01l
dGhvZEFjY2Vzc29ySW1wbC5qYXZhOjI1KQoJYXQgamF2YS5sYW5nLnJlZmxlY3QuTWV0aG9kLmlu
dm9rZShNZXRob2QuamF2YTo1OTcpCglhdCBvcmcuZWNsaXBzZS5lcXVpbm94LmludGVybmFsLmFw
cC5FY2xpcHNlQXBwQ29udGFpbmVyLmNhbGxNZXRob2RXaXRoRXhjZXB0aW9uKEVjbGlwc2VBcHBD
b250YWluZXIuamF2YTo1ODcpCglhdCBvcmcuZWNsaXBzZS5lcXVpbm94LmludGVybmFsLmFwcC5F
Y2xpcHNlQXBwSGFuZGxlLnJ1bihFY2xpcHNlQXBwSGFuZGxlLmphdmE6MTk4KQoJYXQgb3JnLmVj
bGlwc2UuY29yZS5ydW50aW1lLmludGVybmFsLmFkYXB0b3IuRWNsaXBzZUFwcExhdW5jaGVyLnJ1
bkFwcGxpY2F0aW9uKEVjbGlwc2VBcHBMYXVuY2hlci5qYXZhOjExMCkKCWF0IG9yZy5lY2xpcHNl
LmNvcmUucnVudGltZS5pbnRlcm5hbC5hZGFwdG9yLkVjbGlwc2VBcHBMYXVuY2hlci5zdGFydChF
Y2xpcHNlQXBwTGF1bmNoZXIuamF2YTo3OSkKCWF0IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5h
ZGFwdG9yLkVjbGlwc2VTdGFydGVyLnJ1bihFY2xpcHNlU3RhcnRlci5qYXZhOjM1MykKCWF0IG9y
Zy5lY2xpcHNlLmNvcmUucnVudGltZS5hZGFwdG9yLkVjbGlwc2VTdGFydGVyLnJ1bihFY2xpcHNl
U3RhcnRlci5qYXZhOjE4MCkKCWF0IHN1bi5yZWZsZWN0Lk5hdGl2ZU1ldGhvZEFjY2Vzc29ySW1w
bC5pbnZva2UwKE5hdGl2ZSBNZXRob2QpCglhdCBzdW4ucmVmbGVjdC5OYXRpdmVNZXRob2RBY2Nl
c3NvckltcGwuaW52b2tlKE5hdGl2ZU1ldGhvZEFjY2Vzc29ySW1wbC5qYXZhOjM5KQoJYXQgc3Vu
LnJlZmxlY3QuRGVsZWdhdGluZ01ldGhvZEFjY2Vzc29ySW1wbC5pbnZva2UoRGVsZWdhdGluZ01l
dGhvZEFjY2Vzc29ySW1wbC5qYXZhOjI1KQoJYXQgamF2YS5sYW5nLnJlZmxlY3QuTWV0aG9kLmlu
dm9rZShNZXRob2QuamF2YTo1OTcpCglhdCBvcmcuZWNsaXBzZS5lcXVpbm94LmxhdW5jaGVyLk1h
aW4uaW52b2tlRnJhbWV3b3JrKE1haW4uamF2YTo2MjkpCglhdCBvcmcuZWNsaXBzZS5lcXVpbm94
LmxhdW5jaGVyLk1haW4uYmFzaWNSdW4oTWFpbi5qYXZhOjU4NCkKCWF0IG9yZy5lY2xpcHNlLmVx
dWlub3gubGF1bmNoZXIuTWFpbi5ydW4oTWFpbi5qYXZhOjE0MzgpCglhdCBvcmcuZWNsaXBzZS5l
cXVpbm94LmxhdW5jaGVyLk1haW4ubWFpbihNYWluLmphdmE6MTQxNCkK
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>214765</attachid>
            <date>2012-04-28 10:24:00 -0400</date>
            <delta_ts>2012-04-28 10:24:57 -0400</delta_ts>
            <desc>test main with debug sysouts</desc>
            <filename>BugTest.java</filename>
            <type>text/plain</type>
            <size>3374</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgogKiBDb3B5cmlnaHQgKGMpIDIwMTIg
U3ByaW5nU291cmNlLCBhIGRpdmlzaW9uIG9mIFZNd2FyZSwgSW5jLiBBbGwgcmlnaHRzIHJlc2Vy
dmVkLgogKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwpwYWNrYWdlIGJ1ZzM2NzY2
OS5leHRlcm5hbC5mb2xkZXJzOwoKaW1wb3J0IGphdmEudXRpbC5BcnJheUxpc3Q7CmltcG9ydCBq
YXZhLnV0aWwuTGlzdDsKCmltcG9ydCBqdW5pdC5mcmFtZXdvcmsuVGVzdENhc2U7CgppbXBvcnQg
b3JnLmVjbGlwc2UuY29yZS5yZXNvdXJjZXMuSUZvbGRlcjsKaW1wb3J0IG9yZy5lY2xpcHNlLmNv
cmUucmVzb3VyY2VzLklQcm9qZWN0OwppbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5yZXNvdXJjZXMu
SVJlc291cmNlOwppbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5yZXNvdXJjZXMuSVdvcmtzcGFjZTsK
aW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucmVzb3VyY2VzLklXb3Jrc3BhY2VSdW5uYWJsZTsKaW1w
b3J0IG9yZy5lY2xpcHNlLmNvcmUucmVzb3VyY2VzLlJlc291cmNlc1BsdWdpbjsKaW1wb3J0IG9y
Zy5lY2xpcHNlLmNvcmUucnVudGltZS5Db3JlRXhjZXB0aW9uOwppbXBvcnQgb3JnLmVjbGlwc2Uu
Y29yZS5ydW50aW1lLklQcm9ncmVzc01vbml0b3I7CmltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1
bnRpbWUuSVN0YXR1czsKaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5OdWxsUHJvZ3Jl
c3NNb25pdG9yOwppbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLlN0YXR1czsKaW1wb3J0
IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5qb2JzLkpvYjsKaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5jb3JlLklDbGFzc3BhdGhFbnRyeTsKaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLklKYXZh
UHJvamVjdDsKaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLkphdmFDb3JlOwppbXBvcnQgb3Jn
LmVjbGlwc2UuamR0LmxhdW5jaGluZy5KYXZhUnVudGltZTsKCmltcG9ydCBjb20uc3ByaW5nc291
cmNlLnN0cy5ncmFkbGUuY29yZS5kc2xkLkdyYWRsZURTTERDbGFzc3BhdGhDb250YWluZXI7Cmlt
cG9ydCBjb20uc3ByaW5nc291cmNlLnN0cy5ncmFkbGUuY29yZS51dGlsLk5hdHVyZVV0aWxzOwoK
LyoqCiAqIFJ1biB0aGlzIGFzIGEgSnVuaXQgcGx1Z2luIHRlc3QuIFRhcmdldCBwbGF0Zm9ybSBp
cyBlY2xpcHNlLWluZGlnby1SQ1AtU1IyLgogKiAKICogQGF1dGhvciBLcmlzIERlIFZvbGRlcgog
Ki8KcHVibGljIGNsYXNzIEJ1Z1Rlc3QgZXh0ZW5kcyBUZXN0Q2FzZSB7CgoJcHJpdmF0ZSBzdGF0
aWMgZmluYWwgU3RyaW5nIFBST0pFQ1RfTkFNRSA9ICJib3JrIjsKCgkKCXB1YmxpYyB2b2lkIHRl
c3RJdCgpIHRocm93cyBFeGNlcHRpb24gewoJCWZvciAoaW50IGkgPSAwOyBpIDwgNTAwOyBpKysp
IHsKCQkJU3lzdGVtLm91dC5wcmludGxuKCJDcmVhdGluZzogIitpKTsKCQkJCgkJCS8vQ3JlYXRl
IGEgdHlwaWNhbCBKYXZhIHByb2plY3QKU3lzdGVtLm91dC5wcmludGxuKCI9PTE9PSIpOwoJCQlJ
UHJvamVjdCBwcm9qZWN0ID0gUmVzb3VyY2VzUGx1Z2luLmdldFdvcmtzcGFjZSgpLmdldFJvb3Qo
KS5nZXRQcm9qZWN0KFBST0pFQ1RfTkFNRSk7ClN5c3RlbS5vdXQucHJpbnRsbigiPT0yPT0iKTsK
CQkJcHJvamVjdC5jcmVhdGUobmV3IE51bGxQcm9ncmVzc01vbml0b3IoKSk7ClN5c3RlbS5vdXQu
cHJpbnRsbigiPT0zPT0iKTsKCQkJcHJvamVjdC5vcGVuKG5ldyBOdWxsUHJvZ3Jlc3NNb25pdG9y
KCkpOwpTeXN0ZW0ub3V0LnByaW50bG4oIj09ND09Iik7CgkJCU5hdHVyZVV0aWxzLmVuc3VyZShw
cm9qZWN0LCBuZXcgTnVsbFByb2dyZXNzTW9uaXRvcigpLCBKYXZhQ29yZS5OQVRVUkVfSUQpOwpT
eXN0ZW0ub3V0LnByaW50bG4oIj09NT09Iik7CgkJCUlKYXZhUHJvamVjdCBqYXZhUHJvamVjdCA9
IEphdmFDb3JlLmNyZWF0ZShwcm9qZWN0KTsKU3lzdGVtLm91dC5wcmludGxuKCI9PTY9PSIpOwoJ
CQkKCQkJTGlzdDxJQ2xhc3NwYXRoRW50cnk+IGNsYXNzcGF0aCA9IG5ldyBBcnJheUxpc3Q8SUNs
YXNzcGF0aEVudHJ5PigpOwoJCQljbGFzc3BhdGguYWRkKEphdmFSdW50aW1lLmdldERlZmF1bHRK
UkVDb250YWluZXJFbnRyeSgpKTsKCQkJamF2YVByb2plY3Quc2V0UmF3Q2xhc3NwYXRoKGNsYXNz
cGF0aC50b0FycmF5KG5ldyBJQ2xhc3NwYXRoRW50cnlbY2xhc3NwYXRoLnNpemUoKV0pLCBuZXcg
TnVsbFByb2dyZXNzTW9uaXRvcigpKTsKU3lzdGVtLm91dC5wcmludGxuKCI9PTc9PSIpOwoJCQkK
CQkJSUZvbGRlciBzcmNGb2xkZXIgPSBwcm9qZWN0LmdldEZvbGRlcigic3JjIik7ClN5c3RlbS5v
dXQucHJpbnRsbigiPT04PT0iKTsKCQkJc3JjRm9sZGVyLmNyZWF0ZSh0cnVlLCB0cnVlLCBuZXcg
TnVsbFByb2dyZXNzTW9uaXRvcigpKTsKU3lzdGVtLm91dC5wcmludGxuKCI9PTk9PSIpOwoJCQlj
bGFzc3BhdGguYWRkKEphdmFDb3JlLm5ld1NvdXJjZUVudHJ5KHNyY0ZvbGRlci5nZXRGdWxsUGF0
aCgpKSk7ClN5c3RlbS5vdXQucHJpbnRsbigiPT1BPT0iKTsKCQkJamF2YVByb2plY3Quc2V0UmF3
Q2xhc3NwYXRoKGNsYXNzcGF0aC50b0FycmF5KG5ldyBJQ2xhc3NwYXRoRW50cnlbY2xhc3NwYXRo
LnNpemUoKV0pLCBuZXcgTnVsbFByb2dyZXNzTW9uaXRvcigpKTsKU3lzdGVtLm91dC5wcmludGxu
KCI9PUI9PSIpOwoJCQlHcmFkbGVEU0xEQ2xhc3NwYXRoQ29udGFpbmVyLmFkZFRvKGphdmFQcm9q
ZWN0KTsKU3lzdGVtLm91dC5wcmludGxuKCI9PUM9PSIpOwoJCQlwcm9qZWN0LnJlZnJlc2hMb2Nh
bChJUmVzb3VyY2UuREVQVEhfSU5GSU5JVEUsIG5ldyBOdWxsUHJvZ3Jlc3NNb25pdG9yKCkpOwoJ
CQkKCQkJSVdvcmtzcGFjZSB3cyA9IHByb2plY3QuZ2V0V29ya3NwYWNlKCk7CgkJCUpvYiBqb2Ig
PSBuZXcgSm9iKCJodWh1IikgewoJCQkJcHVibGljIElTdGF0dXMgcnVuKElQcm9ncmVzc01vbml0
b3IgbW9uaXRvcikgewoJCQkJCXRyeSB7CgkJCQkJCVRocmVhZC5zbGVlcCgyMCk7CgkJCQkJfSBj
YXRjaCAoSW50ZXJydXB0ZWRFeGNlcHRpb24gaWUpIHt9CgkJCQkJcmV0dXJuIFN0YXR1cy5PS19T
VEFUVVM7CgkJCQl9CgkJCX07CgkJCWpvYi5zZXRSdWxlKHdzLmdldFJvb3QoKSk7CgkJCWpvYi5z
Y2hlZHVsZSgxKTsKCgkJCVN5c3RlbS5vdXQucHJpbnRsbigiRGVsZXRpbmc6ICIraSk7CgkJCXBy
b2plY3QuZGVsZXRlKHRydWUsIHRydWUsIG5ldyBOdWxsUHJvZ3Jlc3NNb25pdG9yKCkpOwoJCQkK
CQl9Cgl9CgkKfQo=
</data>

          </attachment>
      

    </bug>

</bugzilla>