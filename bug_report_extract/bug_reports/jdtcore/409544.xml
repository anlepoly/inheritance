<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>409544</bug_id>
          
          <creation_ts>2013-05-30 18:53:00 -0400</creation_ts>
          <short_desc>[1.8][compiler] Any local variable used but not declared in a lambda body must be definitely assigned  before the lambda body.</short_desc>
          <delta_ts>2013-08-26 00:53:02 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Deepak">dvohra09</reporter>
          <assigned_to name="ANIRBAN CHAKRABORTY">anchakrk</assigned_to>
          <cc>anchakrk</cc>
    
    <cc>jarthana</cc>
    
    <cc>jesper</cc>
    
    <cc>pwebster</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      <flag name="review"
          id="59131"
          type_id="1"
          status="+"
          setter="srikanth_sankaran"
    />

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2265977</commentid>
    <comment_count>0</comment_count>
    <who name="Deepak">dvohra09</who>
    <bug_when>2013-05-30 18:53:45 -0400</bug_when>
    <thetext>According to Lambda specification
&quot;Any local variable used but not declared in a lambda body must be definitely assigned  before the lambda body.&quot;
http://cr.openjdk.java.net/~dlsmith/jsr335-0.6.1/B.html

Eclipse 4.3 permits assigning a local variable before a lambda expression within the lambda expression.

public class Sample{

interface Int {
		void setInt(int[] i);

	}
public static void main(String[] args) {
 

int j;
		

		Int int1 = (int... i) -&gt; {
			j=10;
		};

}

}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2266039</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-05-31 02:41:47 -0400</bug_when>
    <thetext>Jesper, please take a look.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2266220</commentid>
    <comment_count>2</comment_count>
    <who name="Deepak">dvohra09</who>
    <bug_when>2013-05-31 09:47:20 -0400</bug_when>
    <thetext>(In reply to comment #0)
&gt; According to Lambda specification
&gt; &quot;Any local variable used but not declared in a lambda body must be
&gt; definitely assigned  before the lambda body.&quot;
&gt; http://cr.openjdk.java.net/~dlsmith/jsr335-0.6.1/B.html
&gt; 
&gt; Eclipse 4.3 permits assigning a local variable declared before a lambda expression
&gt; within the lambda expression.
&gt; 
&gt; public class Sample{
&gt; 
&gt; interface Int {
&gt; 		void setInt(int[] i);
&gt; 
&gt; 	}
&gt; public static void main(String[] args) {
&gt;  
&gt; 
&gt; int j;
&gt; 		
&gt; 
&gt; 		Int int1 = (int... i) -&gt; {
&gt; 			j=10;
&gt; 		};
&gt; 
&gt; }
&gt; 
&gt; }</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2286765</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-07-22 07:21:47 -0400</bug_when>
    <thetext>Jesper, OK to assign this to Anirban so you can focus on JEP118 + 120 ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2288991</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-07-29 02:34:57 -0400</bug_when>
    <thetext>I&apos;ll assume the absence of objection implies consent. Anirban, please take this forward.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2292538</commentid>
    <comment_count>5</comment_count>
    <who name="Jesper Moller">jesper</who>
    <bug_when>2013-08-07 20:08:34 -0400</bug_when>
    <thetext>(In reply to comment #4)
&gt; I&apos;ll assume the absence of objection implies consent. Anirban, please take
&gt; this forward.

Certainly, I&apos;ve  been vacationing, and back to JEP118/120 work now</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2292585</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-08-08 01:59:00 -0400</bug_when>
    <thetext>(In reply to comment #5)
&gt; (In reply to comment #4)
&gt; &gt; I&apos;ll assume the absence of objection implies consent. Anirban, please take
&gt; &gt; this forward.
&gt; 
&gt; Certainly, I&apos;ve  been vacationing, and back to JEP118/120 work now

Excellent, welcome back ! My plan is to leave your plate uncluttered so that
you are able to make progress on 118/120 without context switches.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2298715</commentid>
    <comment_count>7</comment_count>
    <who name="ANIRBAN CHAKRABORTY">anchakrk</who>
    <bug_when>2013-08-25 10:13:19 -0400</bug_when>
    <thetext>Hello,

After running the previous testcase in javac, I see the following error:

Sample.java:14: error: local variables referenced from a lambda expression must
be final or effectively final
                        j=10;
                        ^
1 error



Eclipse IDE does not give the error, hence, discrepancy, needs to be fixed.


But, the point to be noted is, there might be one of the two possible cases possible:

* if the variable (in this case j) is not initialized and, inside the lambda expression the L-value is used, the error reported is &quot;variable should be effectively final&quot;.

* if the variable (in this case j) is not initialized and, inside the lambda expression the R-value is used, then the error reported will be &quot;variable might not have been initialized&quot;.


So, in either case, there does not seem to be a situation where an error of type : &quot;unitialized variable being used in lambda expression&quot; being reported.

Is there any situation that I&apos;m missing?

Thanks
Anirban</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2298726</commentid>
    <comment_count>8</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-08-25 12:24:33 -0400</bug_when>
    <thetext>(In reply to comment #7)

&gt; But, the point to be noted is, there might be one of the two possible cases
&gt; possible:
&gt; 
&gt; * if the variable (in this case j) is not initialized and, inside the lambda
&gt; expression the L-value is used, the error reported is &quot;variable should be
&gt; effectively final&quot;.
&gt; 
&gt; * if the variable (in this case j) is not initialized and, inside the lambda
&gt; expression the R-value is used, then the error reported will be &quot;variable
&gt; might not have been initialized&quot;.
&gt; 
&gt; 
&gt; So, in either case, there does not seem to be a situation where an error of
&gt; type : &quot;unitialized variable being used in lambda expression&quot; being reported.
&gt; 
&gt; Is there any situation that I&apos;m missing?

Anirban, I am not sure what is the question here. How is &quot;&quot;unitialized variable being used in lambda expression&quot; different from the second bullet viz &quot;variable
&gt; might not have been initialized&quot; ???</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2298794</commentid>
    <comment_count>9</comment_count>
      <attachid>234733</attachid>
    <who name="ANIRBAN CHAKRABORTY">anchakrk</who>
    <bug_when>2013-08-26 00:18:36 -0400</bug_when>
    <thetext>Created attachment 234733
Patch for the fix

Patch for the fix</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2298797</commentid>
    <comment_count>10</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-08-26 00:53:02 -0400</bug_when>
    <thetext>Released the fix with the following changes:

(1) Added one more test for anonymous classes.
(2) Changed:

	boolean bVal;
	if ((bVal = flowInfo.isPotentiallyAssigned(localBinding)) || (!bVal &amp;&amp; (this.bits &amp; ASTNode.IsCapturedOuterLocal) != 0)) {

to be:

if (flowInfo.isPotentiallyAssigned(localBinding) || (this.bits &amp; ASTNode.IsCapturedOuterLocal) != 0) {

Since Java uses short circuiting for || and &amp;&amp; evaluation, the use of bVal
does not make sense.

Thanks Anirban.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>234733</attachid>
            <date>2013-08-26 00:18:00 -0400</date>
            <delta_ts>2013-08-26 00:18:36 -0400</delta_ts>
            <desc>Patch for the fix</desc>
            <filename>Bug-409544.patch</filename>
            <type>text/plain</type>
            <size>2768</size>
            <attacher name="ANIRBAN CHAKRABORTY">anchakrk</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL05lZ2F0aXZlTGFtYmRh
RXhwcmVzc2lvbnNUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5jb21waWxl
ci9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvY29tcGlsZXIvcmVncmVzc2lvbi9OZWdh
dGl2ZUxhbWJkYUV4cHJlc3Npb25zVGVzdC5qYXZhCmluZGV4IDg5YzI4MDYuLmEzYmIxMWIgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLmNvbXBpbGVyL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9jb21waWxlci9yZWdyZXNzaW9uL05lZ2F0aXZlTGFtYmRhRXhw
cmVzc2lvbnNUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMuY29tcGls
ZXIvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2NvbXBpbGVyL3JlZ3Jlc3Npb24vTmVn
YXRpdmVMYW1iZGFFeHByZXNzaW9uc1Rlc3QuamF2YQpAQCAtNjg0Nyw5ICs2ODQ3LDM2IEBACiAJ
CW51bGwgLyogbm8gZXh0cmEgY2xhc3MgbGlicmFyaWVzICovLAogCQl0cnVlIC8qIGZsdXNoIG91
dHB1dCBkaXJlY3RvcnkgKi8sCiAJCW51bGwgLyogY3VzdG9tIG9wdGlvbnMgKi8KIAkpOwogfQor
Ly8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQwOTU0NAor
Ly8gQnVnIDQwOTU0NCAtIFsxLjhdW2NvbXBpbGVyXSBBbnkgbG9jYWwgdmFyaWFibGUgdXNlZCBi
dXQgbm90IGRlY2xhcmVkIGluIGEgbGFtYmRhIGJvZHkgbXVzdCBiZSBkZWZpbml0ZWx5IGFzc2ln
bmVkIGJlZm9yZSB0aGUgbGFtYmRhIGJvZHkuCitwdWJsaWMgdm9pZCB0ZXN0NDA5NTQ0KCkgewor
CXRoaXMucnVuTmVnYXRpdmVUZXN0KAorCQluZXcgU3RyaW5nW10geworCQkJCSJTYW1wbGUuamF2
YSIsCisJCQkJInB1YmxpYyBjbGFzcyBTYW1wbGV7XG4iICsgCisJCQkJIglpbnRlcmZhY2UgSW50
IHsgdm9pZCBzZXRJbnQoaW50W10gaSk7IH1cbiIgKyAKKwkJCQkiCXB1YmxpYyBzdGF0aWMgdm9p
ZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiIgKworCQkJCSIJCWludCBqO1xuIiArCisJCQkJIgkJ
SW50IGludDEgPSAoaW50Li4uIGkpIC0+IHtcbiIgKworCQkJCSIJCQkJCQkJCQkJaj0xMDtcbiIg
KworCQkJCSIJCQkJCQkJCX07XG4iICsKKwkJCQkiCX1cbiIgKworCQkJCSJ9XG4iCisJCX0sCisJ
CSItLS0tLS0tLS0tXG4iICsgCisJCSIxLiBFUlJPUiBpbiBTYW1wbGUuamF2YSAoYXQgbGluZSA2
KVxuIiArCisJCSIJaj0xMDtcbiIgKworCQkiCV5cbiIgKworCQkiVmFyaWFibGUgaiBpcyByZXF1
aXJlZCB0byBiZSBmaW5hbCBvciBlZmZlY3RpdmVseSBmaW5hbFxuIiArCisJCSItLS0tLS0tLS0t
XG4iLAorCQludWxsIC8qIG5vIGV4dHJhIGNsYXNzIGxpYnJhcmllcyAqLywKKwkJdHJ1ZSAvKiBm
bHVzaCBvdXRwdXQgZGlyZWN0b3J5ICovLAorCQludWxsIC8qIGN1c3RvbSBvcHRpb25zICovCisJ
KTsKK30KIHB1YmxpYyBzdGF0aWMgQ2xhc3MgdGVzdENsYXNzKCkgewogCXJldHVybiBOZWdhdGl2
ZUxhbWJkYUV4cHJlc3Npb25zVGVzdC5jbGFzczsKIH0KIH0KXCBObyBuZXdsaW5lIGF0IGVuZCBv
ZiBmaWxlCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9jb21waWxlci9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29tcGlsZXIvYXN0L1NpbmdsZU5hbWVSZWZlcmVuY2UuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9hc3QvU2luZ2xlTmFtZVJlZmVyZW5jZS5qYXZhCmluZGV4IDQ3NjZmNmQuLjM4YTQz
MmIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9hc3QvU2luZ2xlTmFtZVJlZmVyZW5jZS5qYXZhCisrKyBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2NvbXBpbGVyL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b21waWxlci9hc3QvU2luZ2xlTmFtZVJlZmVyZW5jZS5qYXZhCkBAIC0xMzUsMTEgKzEzNSwxMiBA
QAogCQkJaWYgKCFmbG93SW5mby5pc0RlZmluaXRlbHlBc3NpZ25lZChsb2NhbEJpbmRpbmcpKXsv
LyBmb3IgbG9jYWwgdmFyaWFibGUgZGVidWcgYXR0cmlidXRlcwogCQkJCXRoaXMuYml0cyB8PSBB
U1ROb2RlLkZpcnN0QXNzaWdubWVudFRvTG9jYWw7CiAJCQl9IGVsc2UgewogCQkJCXRoaXMuYml0
cyAmPSB+QVNUTm9kZS5GaXJzdEFzc2lnbm1lbnRUb0xvY2FsOwogCQkJfQotCQkJaWYgKGZsb3dJ
bmZvLmlzUG90ZW50aWFsbHlBc3NpZ25lZChsb2NhbEJpbmRpbmcpKSB7CisJCQlib29sZWFuIGJW
YWw7CisJCQlpZiAoKGJWYWwgPSBmbG93SW5mby5pc1BvdGVudGlhbGx5QXNzaWduZWQobG9jYWxC
aW5kaW5nKSkgfHwgKCFiVmFsICYmICh0aGlzLmJpdHMgJiBBU1ROb2RlLklzQ2FwdHVyZWRPdXRl
ckxvY2FsKSAhPSAwKSkgewogCQkJCWxvY2FsQmluZGluZy50YWdCaXRzICY9IH5UYWdCaXRzLklz
RWZmZWN0aXZlbHlGaW5hbDsKIAkJCQlpZiAoIWlzRmluYWwgJiYgKHRoaXMuYml0cyAmIEFTVE5v
ZGUuSXNDYXB0dXJlZE91dGVyTG9jYWwpICE9IDApIHsKIAkJCQkJY3VycmVudFNjb3BlLnByb2Js
ZW1SZXBvcnRlcigpLmNhbm5vdFJlZmVyVG9Ob25FZmZlY3RpdmVseUZpbmFsT3V0ZXJMb2NhbChs
b2NhbEJpbmRpbmcsIHRoaXMpOwogCQkJCX0KIAkJCX0=
</data>
<flag name="review"
          id="59130"
          type_id="6"
          status="?"
          setter="anchakrk"
    />
          </attachment>
      

    </bug>

</bugzilla>