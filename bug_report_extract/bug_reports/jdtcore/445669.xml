<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>445669</bug_id>
          
          <creation_ts>2014-10-01 10:24:00 -0400</creation_ts>
          <short_desc>java.lang.IllegalStateException at org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.clone(UnresolvedReferenceBinding.java:43)</short_desc>
          <delta_ts>2014-11-14 05:46:00 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.4.2</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Tom van den Berge">tom.vandenberge</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>jarthana</cc>
    
    <cc>manpalat</cc>
    
    <cc>shankhba</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2458655</commentid>
    <comment_count>0</comment_count>
    <who name="Tom van den Berge">tom.vandenberge</who>
    <bug_when>2014-10-01 10:24:29 -0400</bug_when>
    <thetext>When compiling classes, I frequently get the error below. 

It happens when the compiled source contains an error (e.g. a syntax error). Unfortunately, I can&apos;t isolate a piece of code to reproduce the bug. Maybe it has something to do with the state of my eclipse project.

I&apos;m using 4.4.1 and java 8.


java.lang.IllegalStateException
	at org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.clone(UnresolvedReferenceBinding.java:43)
	at org.eclipse.jdt.internal.compiler.lookup.AnnotatableTypeSystem.getAnnotatedType(AnnotatableTypeSystem.java:339)
	at org.eclipse.jdt.internal.compiler.lookup.AnnotatableTypeSystem.getAnnotatedType(AnnotatableTypeSystem.java:268)
	at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createAnnotatedType(LookupEnvironment.java:989)
	at org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.scanFieldForNullAnnotation(BinaryTypeBinding.java:1482)
	at org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.cachePartsFrom(BinaryTypeBinding.java:493)
	at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(LookupEnvironment.java:696)
	at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(LookupEnvironment.java:679)
	at org.eclipse.jdt.internal.compiler.Compiler.accept(Compiler.java:299)
	at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(LookupEnvironment.java:140)
	at org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.resolve(UnresolvedReferenceBinding.java:99)
	at org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveType(BinaryTypeBinding.java:180)
	at org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getTypeOrPackage(PackageBinding.java:186)
	at org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findImport(CompilationUnitScope.java:468)
	at org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findSingleImport(CompilationUnitScope.java:522)
	at org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInImports(CompilationUnitScope.java:399)
	at org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInTypes(CompilationUnitScope.java:447)
	at org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:763)
	at org.eclipse.jdt.internal.compiler.ProcessTaskManager.run(ProcessTaskManager.java:137)
	at java.lang.Thread.run(Thread.java:744)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2458925</commentid>
    <comment_count>1</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-10-01 21:14:24 -0400</bug_when>
    <thetext>Bug 445630.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2460461</commentid>
    <comment_count>2</comment_count>
    <who name="shankha banerjee">shankhba</who>
    <bug_when>2014-10-06 11:45:59 -0400</bug_when>
    <thetext>Hi Tom,
Will it be possible for you to provide us a test case.

Thanks</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2460675</commentid>
    <comment_count>3</comment_count>
    <who name="Tom van den Berge">tom.vandenberge</who>
    <bug_when>2014-10-06 16:22:29 -0400</bug_when>
    <thetext>(In reply to shankha banerjee from comment #2)
&gt; Hi Tom,
&gt; Will it be possible for you to provide us a test case.
&gt; 
&gt; Thanks

I can&apos;t. I&apos;ve tried many things, but it seems to have something to do with my project. It&apos;s not a specific piece of code that always gives this error.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2461032</commentid>
    <comment_count>4</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-10-07 10:35:52 -0400</bug_when>
    <thetext>(In reply to Tom van den Berge from comment #3)
&gt; (In reply to shankha banerjee from comment #2)
&gt; &gt; Hi Tom,
&gt; &gt; Will it be possible for you to provide us a test case.
&gt; &gt; 
&gt; &gt; Thanks
&gt; 
&gt; I can&apos;t. I&apos;ve tried many things, but it seems to have something to do with
&gt; my project. It&apos;s not a specific piece of code that always gives this error.

Tom, did you say you are on 4.4.1 ? I think this is likely the same bug as 
https://bugs.eclipse.org/bugs/show_bug.cgi?id=432977 which was resolved only
for 4.5 M2. If you verify the problem is not there on M2, I can backport the
fix for you.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2461185</commentid>
    <comment_count>5</comment_count>
    <who name="Tom van den Berge">tom.vandenberge</who>
    <bug_when>2014-10-07 15:38:10 -0400</bug_when>
    <thetext>&gt; I think this is likely the same bug as 
&gt; https://bugs.eclipse.org/bugs/show_bug.cgi?id=432977 which was resolved only
&gt; for 4.5 M2. 

This bug bug was fixed (or at least it disappeared) in 4.4. Stephan mentions this in comment #9, and I have confirmed the fix in comment #10. I can&apos;t reproduce this particular bug in 4.4.1 either.

The bug in question here is unfortunately very hard to reproduce. When I reported it, I could reproduce it in many different classes, but today I can&apos;t anymore. Neither the code nor my Eclipse installation have changed. I&apos;m puzzled ;)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2463523</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-10-12 22:53:06 -0400</bug_when>
    <thetext>I can readily get rid of this ISE - as it is not strictly speaking a 
correctness issue at the point it is thrown - It is just that the type
system is still holding onto some handles it should not be. Cleanest
would be to understand how that happens and address it, but looks like
without a test case we are not going to be able to do that ....</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2463627</commentid>
    <comment_count>7</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-10-13 04:22:32 -0400</bug_when>
    <thetext>OK, I managed to reproduce with a junit.

Sorry, the bug is due to my fault. The throw of IllegalStateException is 
completely unjustified - I was under the impression that once a URB is 
resolved, the resolution propagates itself all over leaving no trace of 
the URB.

I realize now that this is not so. The resolution propagates itself all
over source types yes, but binary types could still be legitimately holding
handles to the URB.

Fix is simply to remove the throw and forward the clone call to the resolved
type.

Fix and tests released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=f316b069838038f8089cd2fbc2dd1992644b54d4.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2463628</commentid>
    <comment_count>8</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-10-13 04:24:37 -0400</bug_when>
    <thetext>Jay, this needs to be backported too.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2467014</commentid>
    <comment_count>9</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-10-17 00:53:57 -0400</bug_when>
    <thetext>Reopening for back porting.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2477777</commentid>
    <comment_count>10</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-11-06 05:30:23 -0500</bug_when>
    <thetext>In this case, I think you are waiting for the missed out verification during
4.5 M3 ? Anyways updated thw white board content.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2478423</commentid>
    <comment_count>11</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-11-06 21:24:25 -0500</bug_when>
    <thetext>Manoj, can you verify this for M3 so Jay can backport this ? TIA</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2480283</commentid>
    <comment_count>12</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-11-10 20:24:59 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #11)
&gt; Manoj, can you verify this for M3 so Jay can backport this ? TIA

Manoj, can you verify this for M3 so Jay can backport this ? TIA</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2480970</commentid>
    <comment_count>13</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-11-11 21:27:52 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #12)
&gt; (In reply to Srikanth Sankaran from comment #11)
&gt; &gt; Manoj, can you verify this for M3 so Jay can backport this ? TIA
&gt; 
&gt; Manoj, can you verify this for M3 so Jay can backport this ? TIA

Manoj, can you please verify this so Jay can backport this ? TIA.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2480971</commentid>
    <comment_count>14</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-11-11 21:31:44 -0500</bug_when>
    <thetext>Verified for 4.5 M3 by code inspection.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2480981</commentid>
    <comment_count>15</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-11-11 23:03:32 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #14)
&gt; Verified for 4.5 M3 by code inspection.

Thanks Jay. Now if commit order is not important, I can release this
in the maintenance branch right now - if commit order is important, I suggest 
let us leave this resolved for M3 with whiteboard already tagged for 4.4.2

and

reopen it just in time for backport. (I am not even sure, we need to reopen
to adjust target). Leaving a bug in reopened state for several weeks is 
very unhelpful IMHO. 

Let me know what you would like to do, Thanks Jay.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2480992</commentid>
    <comment_count>16</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-11-12 00:38:09 -0500</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #15)
&gt; Thanks Jay. Now if commit order is not important, I can release this
&gt; in the maintenance branch right now - if commit order is important, I
&gt; suggest 
&gt; let us leave this resolved for M3 with whiteboard already tagged for 4.4.2

It&apos;s not important, but in certain cases of M2 candidates, I found dependencies and hence tried the same order. Looks like in this case, there is none, so this can be released already.

&gt; reopen it just in time for backport. (I am not even sure, we need to reopen
&gt; to adjust target). Leaving a bug in reopened state for several weeks is 
&gt; very unhelpful IMHO. 

I understand and I am okay with this. The reason I wanted to do it that way was to differentiate bugs that are being back ported in current batch and bugs that are being considered in future batches. I guess I can just maintain a list locally.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2480999</commentid>
    <comment_count>17</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-11-12 01:37:37 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #16)


&gt;Looks like in this case, there
&gt; is none, so this can be released already.

Thanks, released for Luna SR2 here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=R4_4_maintenance&amp;id=38586fcf09747ed185b551296a6070b2be6702ab</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2482689</commentid>
    <comment_count>18</comment_count>
    <who name="Tom van den Berge">tom.vandenberge</who>
    <bug_when>2014-11-14 04:09:02 -0500</bug_when>
    <thetext>I just upgraded to 4.4.1.M20141112-0800, but I&apos;m still getting the same exception :(</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2482711</commentid>
    <comment_count>19</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-11-14 04:17:54 -0500</bug_when>
    <thetext>(In reply to Tom van den Berge from comment #18)
&gt; I just upgraded to 4.4.1.M20141112-0800, but I&apos;m still getting the same
&gt; exception :(

Sorry to hear that. How did you upgrade? Did you download the full build or through the update site? In any case, can you check what version you have for org.eclipse.jdt.core bundle? Thanks!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2482742</commentid>
    <comment_count>20</comment_count>
    <who name="Tom van den Berge">tom.vandenberge</who>
    <bug_when>2014-11-14 04:50:18 -0500</bug_when>
    <thetext>I upgraded through the update site , and I currently have 3.10.0.v20140902-0626 (under Plug-ins), which is not good I guess.

I just updated it again through the update site, and now I have 3.10.2.v20141112-0635. Maybe I did something wrong the first time, but it seems ok now.

I&apos;ll let you know if the bug shows up again or not. Thanks!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2482765</commentid>
    <comment_count>21</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-11-14 05:04:50 -0500</bug_when>
    <thetext>As per comment #20, marking as verified.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2482826</commentid>
    <comment_count>22</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-11-14 05:46:00 -0500</bug_when>
    <thetext>(In reply to Tom van den Berge from comment #20)
&gt; I upgraded through the update site , and I currently have
&gt; 3.10.0.v20140902-0626 (under Plug-ins), which is not good I guess.
&gt; 
&gt; I just updated it again through the update site, and now I have
&gt; 3.10.2.v20141112-0635. Maybe I did something wrong the first time, but it
&gt; seems ok now.
&gt; 
&gt; I&apos;ll let you know if the bug shows up again or not. Thanks!

Thanks, this particular one cannot show up - it is physically impossible as
UnresolvedReferenceBinding.clone() does not throw ISE any more :)

I am more interested in https://bugs.eclipse.org/bugs/show_bug.cgi?id=445630#c15 since we think it should go away, but have no proof that
it should. 

Thanks Tom.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>