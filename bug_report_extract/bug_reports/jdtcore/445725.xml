<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>445725</bug_id>
          
          <creation_ts>2014-10-01 18:35:00 -0400</creation_ts>
          <short_desc>[1.8][inference] Type inference not occurring with lambda expression and constructor reference</short_desc>
          <delta_ts>2014-10-28 05:40:24 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>Macintosh</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>4.5 M3</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Kyle Winter">kwinter</reporter>
          <assigned_to name="Srikanth Sankaran">srikanth_sankaran</assigned_to>
          <cc>manpalat</cc>
    
    <cc>srikanth_sankaran</cc>
    
    <cc>stephan.herrmann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2458891</commentid>
    <comment_count>0</comment_count>
      <attachid>247553</attachid>
    <who name="Kyle Winter">kwinter</who>
    <bug_when>2014-10-01 18:35:47 -0400</bug_when>
    <thetext>Created attachment 247553
example of compiler errors

Similar to https://bugs.eclipse.org/bugs/show_bug.cgi?id=435689 and others, it seems that it&apos;s not picking up the type for a constructor that extends a parameterized class.  Eclipse gives a compiler error, but javac compiles it just fine.

Note - I&apos;m still seeing this with 4.4.1, but that version isn&apos;t in the list of choices yet.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2458892</commentid>
    <comment_count>1</comment_count>
    <who name="Kyle Winter">kwinter</who>
    <bug_when>2014-10-01 18:37:49 -0400</bug_when>
    <thetext>It was working prior to Luna with the Kepler update.  Using simplified types has the same problem:

  public static &lt;FROM, TO, RESULT&gt; RESULT mapped(Stream&lt;FROM&gt; stream,
                                                 Function&lt;FROM, TO&gt; mapper,
                                                 Function&lt;Collection&lt;TO&gt;, RESULT&gt; finisher)
  {
    return finisher.apply(stream.map(mapper).collect(Collectors.toList()));
  }</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2458922</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-10-01 20:55:06 -0400</bug_when>
    <thetext>I&apos;ll take a look.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2460216</commentid>
    <comment_count>3</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-10-05 22:57:54 -0400</bug_when>
    <thetext>Can you post full code to eliminate any guess work. I neither see lambdas nor
method/sonstructor reference in your snippet.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2460219</commentid>
    <comment_count>4</comment_count>
    <who name="Kyle Winter">kwinter</who>
    <bug_when>2014-10-05 23:35:06 -0400</bug_when>
    <thetext>Sure, it should be included as an attachment but here it is inline as well:

/**
   * Takes a collection, applies a mapper to it, and then passes the result into the finishing
   * function
   */
  public static &lt;FROM, TO, RESULT&gt; RESULT mapped(Collection&lt;FROM&gt; collection,
                                                 Function&lt;? super FROM, ? extends TO&gt; mapper,
                                                 Function&lt;? super Collection&lt;TO&gt;, RESULT&gt; finisher)
  {
    return mapped(collection.stream(), mapper, finisher);
  }

  /**
   * Takes a stream, applies a mapper to it, and then passes the result into the finishing function
   */
  public static &lt;FROM, TO, RESULT&gt; RESULT mapped(Stream&lt;FROM&gt; stream,
                                                 Function&lt;? super FROM, ? extends TO&gt; mapper,
                                                 Function&lt;? super Collection&lt;TO&gt;, RESULT&gt; finisher)
  {
    return finisher.apply(stream.map(mapper).collect(Collectors.toList()));
  }

  public static void example()
  {
    mapped(Stream.of(&quot;1, 2, 3&quot;), Integer::parseInt, ArrayList&lt;Integer&gt;::new);
    mapped(Arrays.asList(&quot;1, 2, 3&quot;), Integer::parseInt, ArrayList&lt;Integer&gt;::new);

    mapped(Stream.of(&quot;1, 2, 3&quot;), Integer::parseInt, IntCollection::new);
    mapped(Arrays.asList(&quot;1, 2, 3&quot;), Integer::parseInt, IntCollection::new);
  }

  public static class IntCollection extends ArrayList&lt;Integer&gt;
  {
    public IntCollection(Collection&lt;Integer&gt; numbers)
    {
      super(numbers);
    }
  }</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2460220</commentid>
    <comment_count>5</comment_count>
    <who name="Kyle Winter">kwinter</who>
    <bug_when>2014-10-05 23:39:29 -0400</bug_when>
    <thetext>The last two lines in public static void example() that reference IntCollection::new are what fail.

The mapping functions were taken directly from our code, but the example method and IntCollection were added as a simple mirror of our calling code.  I can post our real files if needed</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2462469</commentid>
    <comment_count>6</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-10-09 14:16:13 -0400</bug_when>
    <thetext>(In reply to Kyle Winter from comment #5)
&gt; The last two lines in public static void example() that reference
&gt; IntCollection::new are what fail.
&gt; 
&gt; The mapping functions were taken directly from our code, but the example
&gt; method and IntCollection were added as a simple mirror of our calling code. 
&gt; I can post our real files if needed

That is not what I call a full code :) I had to type in a few lines here
and there, fill in missing imports etc.

Anyways, good news I am able to compile this on my workspace with the
set of patches from 

https://bugs.eclipse.org/bugs/show_bug.cgi?id=437444

That is a big project, is under code review - we expect to make it to M3.

Thanks!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2471803</commentid>
    <comment_count>7</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-10-25 13:10:55 -0400</bug_when>
    <thetext>This is fixed as part of http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=f357f309273e0bfe8345ff708d18fa83c6a34931 made on behalf of 
https://bugs.eclipse.org/bugs/show_bug.cgi?id=437444

I released a junit here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=b00fa1db92208aba25130872792b5257a8a769b0</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2472833</commentid>
    <comment_count>8</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2014-10-28 05:40:24 -0400</bug_when>
    <thetext>Verified fixed for Eclipse Mars 4.5 M3 Build id: I20141027-2000</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>247553</attachid>
            <date>2014-10-01 18:35:00 -0400</date>
            <delta_ts>2014-10-01 18:35:47 -0400</delta_ts>
            <desc>example of compiler errors</desc>
            <filename>file_445725.txt</filename>
            <type>text/plain</type>
            <size>1464</size>
            <attacher name="Kyle Winter">kwinter</attacher>
            
              <data encoding="base64">LyoqDQogICAqIFRha2VzIGEgY29sbGVjdGlvbiwgYXBwbGllcyBhIG1hcHBlciB0byBpdCwgYW5k
IHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgaW50byB0aGUgZmluaXNoaW5nDQogICAqIGZ1bmN0aW9u
DQogICAqLw0KICBwdWJsaWMgc3RhdGljIDxGUk9NLCBUTywgUkVTVUxUPiBSRVNVTFQgbWFwcGVk
KENvbGxlY3Rpb248RlJPTT4gY29sbGVjdGlvbiwNCiAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICBGdW5jdGlvbjw/IHN1cGVyIEZST00sID8gZXh0ZW5kcyBU
Tz4gbWFwcGVyLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIEZ1bmN0aW9uPD8gc3VwZXIgQ29sbGVjdGlvbjxUTz4sIFJFU1VMVD4gZmluaXNoZXIpDQog
IHsNCiAgICByZXR1cm4gbWFwcGVkKGNvbGxlY3Rpb24uc3RyZWFtKCksIG1hcHBlciwgZmluaXNo
ZXIpOw0KICB9DQoNCiAgLyoqDQogICAqIFRha2VzIGEgc3RyZWFtLCBhcHBsaWVzIGEgbWFwcGVy
IHRvIGl0LCBhbmQgdGhlbiBwYXNzZXMgdGhlIHJlc3VsdCBpbnRvIHRoZSBmaW5pc2hpbmcgZnVu
Y3Rpb24NCiAgICovDQogIHB1YmxpYyBzdGF0aWMgPEZST00sIFRPLCBSRVNVTFQ+IFJFU1VMVCBt
YXBwZWQoU3RyZWFtPEZST00+IHN0cmVhbSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICBGdW5jdGlvbjw/IHN1cGVyIEZST00sID8gZXh0ZW5kcyBUTz4g
bWFwcGVyLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
IEZ1bmN0aW9uPD8gc3VwZXIgQ29sbGVjdGlvbjxUTz4sIFJFU1VMVD4gZmluaXNoZXIpDQogIHsN
CiAgICByZXR1cm4gZmluaXNoZXIuYXBwbHkoc3RyZWFtLm1hcChtYXBwZXIpLmNvbGxlY3QoQ29s
bGVjdG9ycy50b0xpc3QoKSkpOw0KICB9DQoNCiAgcHVibGljIHN0YXRpYyB2b2lkIGV4YW1wbGUo
KQ0KICB7DQogICAgbWFwcGVkKFN0cmVhbS5vZigiMSwgMiwgMyIpLCBJbnRlZ2VyOjpwYXJzZUlu
dCwgQXJyYXlMaXN0PEludGVnZXI+OjpuZXcpOw0KICAgIG1hcHBlZChBcnJheXMuYXNMaXN0KCIx
LCAyLCAzIiksIEludGVnZXI6OnBhcnNlSW50LCBBcnJheUxpc3Q8SW50ZWdlcj46Om5ldyk7DQoN
CiAgICBtYXBwZWQoU3RyZWFtLm9mKCIxLCAyLCAzIiksIEludGVnZXI6OnBhcnNlSW50LCBJbnRD
b2xsZWN0aW9uOjpuZXcpOw0KICAgIG1hcHBlZChBcnJheXMuYXNMaXN0KCIxLCAyLCAzIiksIElu
dGVnZXI6OnBhcnNlSW50LCBJbnRDb2xsZWN0aW9uOjpuZXcpOw0KICB9DQoNCiAgcHVibGljIHN0
YXRpYyBjbGFzcyBJbnRDb2xsZWN0aW9uIGV4dGVuZHMgQXJyYXlMaXN0PEludGVnZXI+DQogIHsN
CiAgICBwdWJsaWMgSW50Q29sbGVjdGlvbihDb2xsZWN0aW9uPEludGVnZXI+IG51bWJlcnMpDQog
ICAgew0KICAgICAgc3VwZXIobnVtYmVycyk7DQogICAgfQ0KICB9
</data>

          </attachment>
      

    </bug>

</bugzilla>