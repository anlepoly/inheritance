<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>417072</bug_id>
          
          <creation_ts>2013-09-12 06:59:00 -0400</creation_ts>
          <short_desc>compiler.version should not have to be manually set</short_desc>
          <delta_ts>2013-12-10 04:59:21 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>4.4 M4</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Dani Megert">daniel_megert</reporter>
          <assigned_to name="Jay Arthanareeswaran">jarthana</assigned_to>
          <cc>david_williams</cc>
    
    <cc>jan.sievers</cc>
    
    <cc>jarthana</cc>
    
    <cc>manpalat</cc>
    
    <cc>stephan.herrmann</cc>
    
    <cc>thanh.ha</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2305772</commentid>
    <comment_count>0</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-09-12 06:59:24 -0400</bug_when>
    <thetext>4.3 and 4.3.1.

Currently the &apos;compiler.version&apos; in 
/org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/messages.properties
has to be updated manually when the version changes. Only the qualifier is a variable. This can lead to mismatches (see e.g. bug 416780). We should use (create if not yet there) bundle_version instead, i.e.
compiler.version = bundle_version</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2305779</commentid>
    <comment_count>1</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-09-12 07:13:30 -0400</bug_when>
    <thetext>We will also use this bug to investigate how the MANIFEST files in the ecj.jar and ecj-src.jar have the correct version, even though they don&apos;t reflect the one inside the org.eclipse.jdt.core/scripts/META-INF/MANIFEST.MF. There is also additional information being put in the bundle&apos;s manifest files. This needs to be investigated as well.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2327944</commentid>
    <comment_count>2</comment_count>
      <attachid>237303</attachid>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-11-08 04:14:00 -0500</bug_when>
    <thetext>Created attachment 237303
Proposed fix

This patch automates the entire version in the properties file. I have also fixed the versions in the manifest of the ecj bundles (both binary and src) to address the issue mentioned in comment #1.

Couple of issues still remain:

1. The MANIFEST in the src bundle contains this:

Eclipse-SourceBundle: org.eclipse.jdt.core.compiler.batch;version=&quot;3.10.0.qualifier&quot;;roots:=&quot;.&quot;

Note the &quot;qualifier&quot; doesn&apos;t get replaced, even though the Bundle-Version does get the correct qualifier in the same manifest.

2. We have four places where we enter the bundle version for org.eclipse.jdt.core (including the main MANIFEST and pom.xml). But looks like this is something we have to live with (unless someone comes up with a fix)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2327945</commentid>
    <comment_count>3</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-11-08 04:15:13 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #2)
&gt; 1. The MANIFEST in the src bundle contains this:
&gt; 
&gt; Eclipse-SourceBundle:
&gt; org.eclipse.jdt.core.compiler.batch;version=&quot;3.10.0.qualifier&quot;;roots:=&quot;.&quot;
&gt; 
&gt; Note the &quot;qualifier&quot; doesn&apos;t get replaced, even though the Bundle-Version
&gt; does get the correct qualifier in the same manifest.

Thanh, is this something you can help us with?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2327950</commentid>
    <comment_count>4</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-11-08 04:22:49 -0500</bug_when>
    <thetext>Thanh, it would also be great if you can look at the patch and confirm that ${unqualifiedVersion} will work in the build environment. I have tested it locally and verified that it produces the expected result. TIA!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2327986</commentid>
    <comment_count>5</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2013-11-08 05:35:27 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #4)
&gt; Thanh, it would also be great if you can look at the patch and confirm that
&gt; ${unqualifiedVersion} will work in the build environment. I have tested it
&gt; locally and verified that it produces the expected result. TIA!

You could upload it to Gerrit and see how the build goes.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2328018</commentid>
    <comment_count>6</comment_count>
    <who name="Thanh Ha">thanh.ha</who>
    <bug_when>2013-11-08 06:49:25 -0500</bug_when>
    <thetext>I&apos;m on vacation and am out of town, but I can take a look when I am back on Nov. 18th if that&apos;s not too late for you.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2328406</commentid>
    <comment_count>7</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-11-08 23:24:21 -0500</bug_when>
    <thetext>It&apos;s here:

https://git.eclipse.org/r/#/c/18244/

But I was hoping I would be able to see the contents of the JARs produced. Is that not possible?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2328425</commentid>
    <comment_count>8</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2013-11-09 09:53:38 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #7)
&gt; It&apos;s here:
&gt; 
&gt; https://git.eclipse.org/r/#/c/18244/
&gt; 
&gt; But I was hoping I would be able to see the contents of the JARs produced.
&gt; Is that not possible?

Jay, have a look at https://hudson.eclipse.org/platform/job/eclipse.jdt.core-Gerrit/ws/org.eclipse.jdt.core/target/
The workspace is not linked from each particular build, you have to go up to the project and then find the workspace to drill into.

You may need to be quick to get the results for a particular build, since the next gerrit trigger will overwrite the workspace.

You are looking for details inside org.eclipse.jdt.core-3.10.0-SNAPSHOT-batch-compiler.jar, resp. org.eclipse.jdt.core-3.10.0-SNAPSHOT-batch-compiler-src.jar?

MANIFEST.MF in the src jar:
Manifest-Version: 1.0
Archiver-Version: Plexus Archiver
Created-By: Apache Maven
Built-By: genie.eclipse.platform
Build-Jdk: 1.7.0_25
Bundle-Vendor: Eclipse.org
Eclipse-SourceBundle: org.eclipse.jdt.core.compiler.batch;version=&quot;3.1
 0.0.qualifier&quot;;roots:=&quot;.&quot;
Bundle-Version: 3.10.0.v20131108-0902
Bundle-Name: Source of Eclipse Compiler for Java(TM)
Bundle-ManifestVersion: 2
Bundle-SymbolicName: org.eclipse.jdt.core.compiler.batch.source

messages.properties:
...
### compiler
#Format: compiler.name = word1 word2 word3
compiler.name = Eclipse Compiler for Java(TM)
#Format: compiler.version = (The place holders will be automatically filled. Do not remove or alter it)
compiler.version = v20131108-0902, 3.10.0
compiler.copyright = Copyright IBM Corp 2000, 2013. All rights reserved.
...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2328575</commentid>
    <comment_count>9</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-11-11 00:52:43 -0500</bug_when>
    <thetext>(In reply to Stephan Herrmann from comment #8)
&gt; Jay, have a look at
&gt; https://hudson.eclipse.org/platform/job/eclipse.jdt.core-Gerrit/ws/org.
&gt; eclipse.jdt.core/target/
&gt; The workspace is not linked from each particular build, you have to go up to
&gt; the project and then find the workspace to drill into.
&gt; 
&gt; You may need to be quick to get the results for a particular build, since
&gt; the next gerrit trigger will overwrite the workspace.

Thanks a lot, Stephan! That&apos;s what I was looking for. I have also verified that the binary&apos;s manifest gets the right version. So, we have just one place left where the qualifier is not updated (recorded in comment #2 - point 1). I have sought some help from Thanh and wait for him to come back from his vacation. 

Meanwhile, I have pushed the fix for the rest here:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=ef173207edef63b7e96a8faa70a699ef0bc0ce6a</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2329041</commentid>
    <comment_count>10</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-11-12 04:12:47 -0500</bug_when>
    <thetext>(In reply to Thanh Ha from comment #6)
&gt; I&apos;m on vacation and am out of town, but I can take a look when I am back on
&gt; Nov. 18th if that&apos;s not too late for you.

That would be fine as we have had this issue for a while now. Thanks for looking into this!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2331920</commentid>
    <comment_count>11</comment_count>
    <who name="Thanh Ha">thanh.ha</who>
    <bug_when>2013-11-19 10:34:11 -0500</bug_when>
    <thetext>From what I understand it looks like we&apos;re using the tycho-custom-bundle-plugin to produce these jars. I&apos;m not sure if it is possible to replace the .qualifier in the Eclipse-SourceBundle attribute via this plugin.

Adding Jan in case he has any ideas.


Perhaps we need to extend Tycho to allow search and replace in this plugin for the MANIFEST.MF file. Unless there exists something similar to the packaging plugin where I can call additionalFileSets?


The reason &quot;Bundle-Version: 3.10.0.qualifier&quot; is properly configured is due to this line as far as I can tell [1].

http://git.eclipse.org/c/tycho/org.eclipse.tycho.extras.git/tree/tycho-custom-bundle-plugin/src/main/java/org/eclipse/tycho/extras/custombundle/CustomBundleMojo.java#n155</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2331954</commentid>
    <comment_count>12</comment_count>
    <who name="Jan Sievers">jan.sievers</who>
    <bug_when>2013-11-19 11:13:07 -0500</bug_when>
    <thetext>(In reply to Thanh Ha from comment #11)
&gt; From what I understand it looks like we&apos;re using the
&gt; tycho-custom-bundle-plugin to produce these jars. I&apos;m not sure if it is
&gt; possible to replace the .qualifier in the Eclipse-SourceBundle attribute via
&gt; this plugin.
&gt; 
&gt; Adding Jan in case he has any ideas.
&gt; 
&gt; 
&gt; Perhaps we need to extend Tycho to allow search and replace in this plugin
&gt; for the MANIFEST.MF file. Unless there exists something similar to the
&gt; packaging plugin where I can call additionalFileSets?
&gt; 
&gt; 
&gt; The reason &quot;Bundle-Version: 3.10.0.qualifier&quot; is properly configured is due
&gt; to this line as far as I can tell [1].
&gt; 
&gt; http://git.eclipse.org/c/tycho/org.eclipse.tycho.extras.git/tree/tycho-
&gt; custom-bundle-plugin/src/main/java/org/eclipse/tycho/extras/custombundle/
&gt; CustomBundleMojo.java#n155

Not sure how this custom mojo is supposed to be used, it seems it was implemented by Igor specifically for JDT [1].

Regarding source bundle generation, this is normally handled by OsgiSourceMojo but it seems this is also handled in a custom/different way here.

If you want to replace &quot;.qualifier&quot; in text files, you can use pom property ${buildQualifier}

[1] http://git.eclipse.org/c/tycho/org.eclipse.tycho.git/commit/?id=e065f60fd5f7b1f5e5cae14dfef286bdf04f9223</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2331960</commentid>
    <comment_count>13</comment_count>
    <who name="Thanh Ha">thanh.ha</who>
    <bug_when>2013-11-19 11:26:17 -0500</bug_when>
    <thetext>(In reply to Jan Sievers from comment #12)
&gt; If you want to replace &quot;.qualifier&quot; in text files, you can use pom property
&gt; ${buildQualifier}
&gt; 

To be clear, did you mean replacing using something like the maven-resources-plugin?

Doesn&apos;t appear to be a way to replace from inside the custom-bundle-plugin as far as I can tell.

Although poking around a bit in the scripts directory structure I think I have an idea of a possible workaround.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2332017</commentid>
    <comment_count>14</comment_count>
    <who name="Thanh Ha">thanh.ha</who>
    <bug_when>2013-11-19 13:48:44 -0500</bug_when>
    <thetext>Proposed patch: https://git.eclipse.org/r/18580

I used maven-resources-plugin&apos;s filtering to copy the files to target/ and then used the new version in target/ as the &lt;bundleLocation&gt;. This seems to work.


Not sure if it should be a separate patch or if I&apos;m doing too much but I also used the same method to remove the maven-antrun-plugin call in favour of reusing the maven-resources-plugin for the messages.properties filtering as well.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2332120</commentid>
    <comment_count>15</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-11-19 23:36:59 -0500</bug_when>
    <thetext>(In reply to Thanh Ha from comment #14)
&gt; Proposed patch: https://git.eclipse.org/r/18580

Thanks for looking into this, Thanh!

I don&apos;t have much knowledge in this area, so I can&apos;t comment on the change. But just looked at the custom source bundle created and the messages.properties doesn&apos;t appear to be processed. The version and qualifier are not applied. The MANIFEST got them alright, though.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2332547</commentid>
    <comment_count>16</comment_count>
    <who name="Thanh Ha">thanh.ha</who>
    <bug_when>2013-11-20 14:24:36 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #15)
&gt; (In reply to Thanh Ha from comment #14)
&gt; &gt; Proposed patch: https://git.eclipse.org/r/18580
&gt; 
&gt; Thanks for looking into this, Thanh!
&gt; 
&gt; I don&apos;t have much knowledge in this area, so I can&apos;t comment on the change.
&gt; But just looked at the custom source bundle created and the
&gt; messages.properties doesn&apos;t appear to be processed. The version and
&gt; qualifier are not applied. The MANIFEST got them alright, though.

To be clear which file are we talking about?



I noticed even before my patch this file &quot;org.eclipse.jdt.core-3.10.0-SNAPSHOT-batch-compiler-src.jar&quot; had unprocessed MANIFEST.MF and messages.properties.

While the file &quot;org.eclipse.jdt.core-3.10.0-SNAPSHOT-sources.jar&quot; had processed MANIFEST.MF but unprocessed messages.properties.

So I wasn&apos;t sure what my patch should be doing. Should the files in these 2 jars be processed or unprocessed?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2332731</commentid>
    <comment_count>17</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-11-21 03:30:34 -0500</bug_when>
    <thetext>(In reply to Thanh Ha from comment #16)
&gt; So I wasn&apos;t sure what my patch should be doing. Should the files in these 2
&gt; jars be processed or unprocessed?

That would be too much to expect and unnecessary as well. So, I can confirm we have all we need at the moment.

I will push your gerrit contribution after a rebasing. Thanks for the help!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2332737</commentid>
    <comment_count>18</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-11-21 03:36:26 -0500</bug_when>
    <thetext>Looks unrelated to the patch, but Hudson failed with the following error:

[ERROR] Internal error: java.lang.RuntimeException: Could not resolve target platform specification artifact org.eclipse:eclipse-sdk-prereqs:target:4.4.0-SNAPSHOT -&gt; [Help 1]
org.apache.maven.InternalErrorException: Internal error: java.lang.RuntimeException: Could not resolve target platform specification artifact org.eclipse:eclipse-sdk-prereqs:target:4.4.0-SNAPSHOT
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:168)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
Caused by: java.lang.RuntimeException: Could not resolve target platform specification artifact org.eclipse:eclipse-sdk-prereqs:target:4.4.0-SNAPSHOT
	at org.eclipse.tycho.core.resolver.DefaultTargetPlatformConfigurationReader.addTargetArtifact(DefaultTargetPlatformConfigurationReader.java:319)
	at org.eclipse.tycho.core.resolver.DefaultTargetPlatformConfigurationReader.setTarget(DefaultTargetPlatformConfigurationReader.java:273)
	at org.eclipse.tycho.core.resolver.DefaultTargetPlatformConfigurationReader.getTargetPlatformConfiguration(DefaultTargetPlatformConfigurationReader.java:71)
	at org.eclipse.tycho.core.resolver.DefaultTychoDependencyResolver.setupProject(DefaultTychoDependencyResolver.java:78)
	at org.eclipse.tycho.core.maven.TychoMavenLifecycleParticipant.afterProjectsRead(TychoMavenLifecycleParticipant.java:70)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2333878</commentid>
    <comment_count>19</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-11-25 04:53:21 -0500</bug_when>
    <thetext>The subsequent builds in Hudson went alright. But I couldn&apos;t figure out how to get kick off the Hudson job through the gerrit contribution or a rebase. Pulled the changes directly from my local repo:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=ca172e14f3d28ca6ba95b665c76bb5be5714334e</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2334251</commentid>
    <comment_count>20</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2013-11-25 16:45:40 -0500</bug_when>
    <thetext>To give a &quot;heads up&quot; doing local test builds today (for reasons unrelated to this bug) showed an increase of about 70 JUnit failures ... many of which had messages in the log that included: 

Error Message

can&apos;t parse argument number: buildQualifier

Stacktrace

java.lang.IllegalArgumentException: can&apos;t parse argument number: buildQualifier


Such as some of the tests were 
org.eclipse.jdt.compiler.tool.tests.CompilerInvocationTests.test021_output_streams - 1.6
org.eclipse.jdt.compiler.tool.tests.CompilerInvocationTests.test022_output_streams - 1.6
org.eclipse.jdt.core.tests.compiler.regression.BatchCompilerTest.test013 - 1.5
org.eclipse.jdt.core.tests.compiler.regression.BatchCompilerTest.test012 - 1.5
org.eclipse.jdt.core.tests.compiler.regression.BatchCompilerTest.test014 - 1.5
org.eclipse.jdt.core.tests.compiler.regression.BatchCompilerTest.test015 - 1.5

And, there was a large number in &quot;PDE Build&quot; tests that said, essentially, &quot;could not complete the compile&quot;. 

You can wait and see how N/I builds goes .... or, if you can test these builds locally, and see similar failures, then you might want to revert?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2334324</commentid>
    <comment_count>21</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-11-25 23:43:37 -0500</bug_when>
    <thetext>(In reply to David Williams from comment #20)
&gt; To give a &quot;heads up&quot; doing local test builds today (for reasons unrelated to
&gt; this bug) showed an increase of about 70 JUnit failures ... many of which
&gt; had messages in the log that included: 
&gt;  ...
&gt; You can wait and see how N/I builds goes .... or, if you can test these
&gt; builds locally, and see similar failures, then you might want to revert?

My bad, I should have run the tests before pushing the changes. I see the tests failing locally and they would fail in the builds too. Will wait for the tests to complete and reopen/revert and come up with an alternate fix.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2334326</commentid>
    <comment_count>22</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2013-11-26 00:02:32 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #21)
&gt; (In reply to David Williams from comment #20)
&gt; &gt; To give a &quot;heads up&quot; doing local test builds today (for reasons unrelated to
&gt; &gt; this bug) showed an increase of about 70 JUnit failures ... many of which
&gt; &gt; had messages in the log that included: 
&gt; &gt;  ...
&gt; &gt; You can wait and see how N/I builds goes .... or, if you can test these
&gt; &gt; builds locally, and see similar failures, then you might want to revert?
&gt; 
&gt; My bad, I should have run the tests before pushing the changes. I see the
&gt; tests failing locally and they would fail in the builds too. Will wait for
&gt; the tests to complete and reopen/revert and come up with an alternate fix.

In my local build, the &quot;built&quot; version of message.properties, in 
org/eclipse/jdt/internal/compiler/batch/messages.properties

 clearly says 

compiler.version = ${buildQualifier}, ${unqualifiedVersion}

I believe the technique Thanh describes in 
https://bugs.eclipse.org/bugs/show_bug.cgi?id=362252#c10

has to be employed here (i.e. files in &apos;bin.includes&apos; must copied/modified and then normal &quot;bin.includes&quot; behavior overridden with 

            &lt;groupId&gt;org.eclipse.tycho&lt;/groupId&gt;
            &lt;artifactId&gt;tycho-packaging-plugin&lt;/artifactId&gt;
            &lt;version&gt;${tycho.version}&lt;/version&gt;
            &lt;configuration&gt;
              &lt;additionalFileSets&gt;

(to give a short snippet). 

I&apos;ve not looked at the actual source code pom in detail, but didn&apos;t see this &quot;additionalFileSet&quot; technique in the patch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2334330</commentid>
    <comment_count>23</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-11-26 00:24:19 -0500</bug_when>
    <thetext>(In reply to David Williams from comment #22)
&gt; In my local build, the &quot;built&quot; version of message.properties, in 
&gt; org/eclipse/jdt/internal/compiler/batch/messages.properties
&gt; 
&gt;  clearly says 
&gt; 
&gt; compiler.version = ${buildQualifier}, ${unqualifiedVersion}

Even if we did fix that, we would still have problems in our development environment where each developer is supposed to run all tests before pushing any change in. The tests would anyway fail there because there&apos;s no filtering happening here. So, I guess we can&apos;t have the &apos;{}&apos; around the tags that we want to be replaced.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2334333</commentid>
    <comment_count>24</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-11-26 01:02:22 -0500</bug_when>
    <thetext>I have partially reverted the changes - basically kept the old code in the pom.xml that was handling messages.properties and retained Thanh&apos;s code for updating the MANIFEST.

Thanh/David, could you please check if this is alright:

https://git.eclipse.org/r/#/c/18877/

The Hudson build went well and I have checked that the tests run fine locally.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2334398</commentid>
    <comment_count>25</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-11-26 04:32:11 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #24)
&gt; https://git.eclipse.org/r/#/c/18877/

I have reverted part of Thanh&apos;s fix through this so we have a good I build tonight:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=ab8c02c44a008f2de315de55f5173248fa4552c7</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2334468</commentid>
    <comment_count>26</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2013-11-26 07:36:53 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #24)
&gt; I have partially reverted the changes - basically kept the old code in the
&gt; pom.xml that was handling messages.properties and retained Thanh&apos;s code for
&gt; updating the MANIFEST.
&gt; 
&gt; Thanh/David, could you please check if this is alright:
&gt; 
&gt; https://git.eclipse.org/r/#/c/18877/
&gt; 

Conceptually it sounds ok, but, I&apos;m not sure I&apos;m familiar enough with that code (its purpose, etc.) to (easily) review technically. 

It is unclear to me how 

compiler.version = bundle_qualifier, bundle_version

works with local PDE builds/testing better than does
 
compiler.version = ${buildQualifier}, ${unqualifiedVersion}

As far as I know, bundle_qualifier and bundle_version are not automatically &quot;filled in&quot; during PDE build? (But, I could easily simply not know). 

I know that p2.inf files &quot;recognize&quot; $qualifier$ and $version$ ... which I give as a misc. fact ... doubt its related or helpful in this case. 

I do think fine to try your fix in I-build .... as long as someone is around to revert if doesn&apos;t work, so we can get a clean I-build (which I say partially since the I-build last week was &quot;not very good&quot;).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2334473</commentid>
    <comment_count>27</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-11-26 07:43:52 -0500</bug_when>
    <thetext>(In reply to David Williams from comment #26)
&gt; It is unclear to me how 
&gt; 
&gt; compiler.version = bundle_qualifier, bundle_version
&gt; 
&gt; works with local PDE builds/testing better than does
&gt;  
&gt; compiler.version = ${buildQualifier}, ${unqualifiedVersion}
&gt; 
&gt; As far as I know, bundle_qualifier and bundle_version are not automatically
&gt; &quot;filled in&quot; during PDE build? (But, I could easily simply not know). 

No, they are not and that&apos;s why the tests fail. The properties file encodes dynamic values in the form of {}, which get replaced later. But these place holders are expected to be a number and this causes problems. Simply put, anything that appears in the messages.properties file that is enclosed in {} has to be a number.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2334477</commentid>
    <comment_count>28</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-11-26 07:53:31 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #27)
&gt; No, they are not and that&apos;s why the tests fail. The properties file encodes
&gt; dynamic values in the form of {}, which get replaced later. But these place
&gt; holders are expected to be a number and this causes problems. Simply put,
&gt; anything that appears in the messages.properties file that is enclosed in {}
&gt; has to be a number.

By the way, we don&apos;t even make a PDE build. We just run the tests with the projects imported into the dev workspace.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2334511</commentid>
    <comment_count>29</comment_count>
    <who name="David Williams">david_williams</who>
    <bug_when>2013-11-26 08:59:23 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #28)
&gt; (In reply to Jayaprakash Arthanareeswaran from comment #27)
&gt; &gt; No, they are not and that&apos;s why the tests fail. The properties file encodes
&gt; &gt; dynamic values in the form of {}, which get replaced later. But these place
&gt; &gt; holders are expected to be a number and this causes problems. Simply put,
&gt; &gt; anything that appears in the messages.properties file that is enclosed in {}
&gt; &gt; has to be a number.

This explains, partially, why this form does not work ... 
compiler.version = ${buildQualifier}, ${unqualifiedVersion}
but I&apos;m left wondering how this form does work, in PDE environment: 
compiler.version = bundle_qualifier, bundle_version

They would still not be &quot;numbers&quot;, right? 

&gt; By the way, we don&apos;t even make a PDE build. We just run the tests with the
&gt; projects imported into the dev workspace.

Yes, well ... I meant that the way the workbench &quot;builds things&quot; when you import them as a project is basically doing a &quot;PDE Build&quot; (under the covers) ... but, yes, I understand not a PDE Batch Build. 

To illustrate what I mean, in the top level source, messages.properties has 

#Format: compiler.version = (The place holders will be automatically filled. Do not remove or alter it)
compiler.version = bundle_qualifier, bundle_version

And if I look &quot;deep&quot; in the /bin folders, 
/org.eclipse.jdt.core/bin/org/eclipse/jdt/internal/compiler/batch/messages.properties
I (still) see 
#Format: compiler.version = (The place holders will be automatically filled. Do not remove or alter it)
compiler.version = bundle_qualifier, bundle_version

So, still &quot;not a number&quot;. 

Previous, attempted fix, had 
#Format: compiler.version = (The place holders will be automatically filled. Do not remove or alter it)
compiler.version = ${buildQualifier}, ${unqualifiedVersion}

(both in top level source, and in deep &apos;bin&apos; directory) 

So, I&apos;m just wondering why one works and the other doesn&apos;t. 
= = = = =
And I think, now that I&apos;ve stared at it this long ... I&apos;m beginning to understand. 

Much of the rest of the &quot;messages.properties&quot; file has &quot;message format&quot; brackets, such as 
compile.repetition = [repetition {0}/{1}]

So, I think part of what you are saying is that in the &quot;unbuilt&quot; case, it is the &quot;message locale formatter&quot; that is throwing exception on the the ${buildQualifier} type of value?

I&apos;m not sure I&apos;m helping solve this issue :) ... just trying to understand. 

Guess it _might_ help if 
compiler.version = ${buildQualifier}, ${unqualifiedVersion}
was in its own file, and it was never ran through the locale message formatter .... 

But, honestly, don&apos;t think its worth the effort ... we&apos;ll be living with &quot;antrun&quot; for a long time :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2334517</commentid>
    <comment_count>30</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-11-26 09:08:06 -0500</bug_when>
    <thetext>(In reply to David Williams from comment #29)
&gt; They would still not be &quot;numbers&quot;, right? 

As you have already figured out, it&apos;s the {} that doesn&apos;t contain a number that has the problem. That&apos;s why bundle_qualifier would be alright but anything like {bundle_qualifier} will cause trouble. We certainly don&apos;t want to make changes to the part of the code that parses the properties file. So, I guess we will have to live with this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2334608</commentid>
    <comment_count>31</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-11-26 11:29:01 -0500</bug_when>
    <thetext>Things are looking good again with I20131126-0800.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2334643</commentid>
    <comment_count>32</comment_count>
    <who name="Thanh Ha">thanh.ha</who>
    <bug_when>2013-11-26 12:26:46 -0500</bug_when>
    <thetext>(In reply to Jayaprakash Arthanareeswaran from comment #24)
&gt; Thanh/David, could you please check if this is alright:
&gt; 
&gt; https://git.eclipse.org/r/#/c/18877/
&gt; 

This change looks ok to me. It&apos;s too bad we have to stick with the antrun call but I guess there&apos;s not much we can do in this case.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2339758</commentid>
    <comment_count>33</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-12-10 04:59:21 -0500</bug_when>
    <thetext>Verified for Eclipse   Luna 4.4M4 Build id: I20131209-2000</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>237303</attachid>
            <date>2013-11-08 04:14:00 -0500</date>
            <delta_ts>2013-11-08 04:14:00 -0500</delta_ts>
            <desc>Proposed fix</desc>
            <filename>Bug-417072.patch</filename>
            <type>text/plain</type>
            <size>2689</size>
            <attacher name="Jay Arthanareeswaran">jarthana</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2JhdGNoL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb21waWxlci9iYXRjaC9tZXNzYWdlcy5wcm9wZXJ0aWVzIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvYmF0Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2JhdGNoL21l
c3NhZ2VzLnByb3BlcnRpZXMKaW5kZXggNjM3NGViMS4uNGE1NTMzNiAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvYmF0Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVy
L2JhdGNoL21lc3NhZ2VzLnByb3BlcnRpZXMKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvYmF0
Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvbXBpbGVyL2JhdGNoL21lc3NhZ2VzLnByb3Bl
cnRpZXMKQEAgLTIzLDYgKzIzLDYgQEAKICNGb3JtYXQ6IGNvbXBpbGVyLm5hbWUgPSB3b3JkMSB3
b3JkMiB3b3JkMwogY29tcGlsZXIubmFtZSA9IEVjbGlwc2UgQ29tcGlsZXIgZm9yIEphdmEoVE0p
Ci0jRm9ybWF0OiBjb21waWxlci52ZXJzaW9uID0gKFRoZSBwbGFjZWhvbGRlciAnYnVuZGxlX3F1
YWxpZmllcicgd2lsbCBiZSBhdXRvbWF0aWNhbGx5IGZpbGxlZC4gRG8gbm90IHJlbW92ZSBvciBh
bHRlciBpdCkKLWNvbXBpbGVyLnZlcnNpb24gPSBidW5kbGVfcXVhbGlmaWVyLCAzLjEwLjAKKyNG
b3JtYXQ6IGNvbXBpbGVyLnZlcnNpb24gPSAoVGhlIHBsYWNlIGhvbGRlcnMgd2lsbCBiZSBhdXRv
bWF0aWNhbGx5IGZpbGxlZC4gRG8gbm90IHJlbW92ZSBvciBhbHRlciBpdCkKK2NvbXBpbGVyLnZl
cnNpb24gPSBidW5kbGVfcXVhbGlmaWVyLCBidW5kbGVfdmVyc2lvbgogY29tcGlsZXIuY29weXJp
Z2h0ID0gQ29weXJpZ2h0IElCTSBDb3JwIDIwMDAsIDIwMTMuIEFsbCByaWdodHMgcmVzZXJ2ZWQu
CiAKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL3BvbS54bWwgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9wb20ueG1sCmluZGV4IDdjYzVlNTEuLmY3MWY0MTcgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL3BvbS54bWwKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvcG9t
LnhtbApAQCAtMzgsNCArMzgsNyBAQAogCQkJCQkJCTxpbmNsdWRlIG5hbWU9Im9yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb21waWxlci9iYXRjaC9tZXNzYWdlcy5wcm9wZXJ0aWVzIi8+CiAJCQkJ
CQk8L3JlcGxhY2U+CisJCQkJCQk8cmVwbGFjZSB0b2tlbj0iYnVuZGxlX3ZlcnNpb24iIHZhbHVl
PSIke3VucXVhbGlmaWVkVmVyc2lvbn0iIGRpcj0iJHtwcm9qZWN0LmJ1aWxkLmRpcmVjdG9yeX0v
Y2xhc3NlcyI+CisJCQkJCQkJPGluY2x1ZGUgbmFtZT0ib3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvbXBpbGVyL2JhdGNoL21lc3NhZ2VzLnByb3BlcnRpZXMiIC8+CisJCQkJCQk8L3JlcGxhY2U+
CiAJCQkJCTwvdGFza3M+CiAJCQkJPC9jb25maWd1cmF0aW9uPgpkaWZmIC0tZ2l0IGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvc2NyaXB0cy9iaW5hcnkvTUVUQS1JTkYvTUFOSUZFU1QuTUYgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9zY3JpcHRzL2JpbmFyeS9NRVRBLUlORi9NQU5JRkVTVC5NRgppbmRl
eCBhYTdiOTIzLi41MzJkOGRhIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zY3Jp
cHRzL2JpbmFyeS9NRVRBLUlORi9NQU5JRkVTVC5NRgorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9zY3JpcHRzL2JpbmFyeS9NRVRBLUlORi9NQU5JRkVTVC5NRgpAQCAtNCw1ICs0LDUgQEAKIEJ1
bmRsZS1OYW1lOiBFY2xpcHNlIENvbXBpbGVyIGZvciBKYXZhKFRNKQogQnVuZGxlLVN5bWJvbGlj
TmFtZTogb3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIuYmF0Y2gKLUJ1bmRsZS1WZXJzaW9u
OiAzLjkuMC5xdWFsaWZpZXIKK0J1bmRsZS1WZXJzaW9uOiAzLjEwLjAucXVhbGlmaWVyCiBCdW5k
bGUtQ2xhc3NQYXRoOiAuCiBCdW5kbGUtVmVuZG9yOiBFY2xpcHNlLm9yZwpkaWZmIC0tZ2l0IGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvc2NyaXB0cy9zb3VyY2UvTUVUQS1JTkYvTUFOSUZFU1QuTUYg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9zY3JpcHRzL3NvdXJjZS9NRVRBLUlORi9NQU5JRkVTVC5N
RgppbmRleCBiOGE0NjAxLi4xNDIyODllIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9zY3JpcHRzL3NvdXJjZS9NRVRBLUlORi9NQU5JRkVTVC5NRgorKysgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9zY3JpcHRzL3NvdXJjZS9NRVRBLUlORi9NQU5JRkVTVC5NRgpAQCAtMyw1ICszLDUg
QEAKIEJ1bmRsZS1OYW1lOiBTb3VyY2Ugb2YgRWNsaXBzZSBDb21waWxlciBmb3IgSmF2YShUTSkK
IEJ1bmRsZS1TeW1ib2xpY05hbWU6IG9yZy5lY2xpcHNlLmpkdC5jb3JlLmNvbXBpbGVyLmJhdGNo
LnNvdXJjZQotQnVuZGxlLVZlcnNpb246IDMuOS4wLnF1YWxpZmllcgorQnVuZGxlLVZlcnNpb246
IDMuMTAuMC5xdWFsaWZpZXIKIEJ1bmRsZS1WZW5kb3I6IEVjbGlwc2Uub3JnCi1FY2xpcHNlLVNv
dXJjZUJ1bmRsZTogb3JnLmVjbGlwc2UuamR0LmNvcmUuY29tcGlsZXIuYmF0Y2g7dmVyc2lvbj0i
My45LjAucXVhbGlmaWVyIjtyb290czo9Ii4iCitFY2xpcHNlLVNvdXJjZUJ1bmRsZTogb3JnLmVj
bGlwc2UuamR0LmNvcmUuY29tcGlsZXIuYmF0Y2g7dmVyc2lvbj0iMy4xMC4wLnF1YWxpZmllciI7
cm9vdHM6PSIuIg==
</data>

          </attachment>
      

    </bug>

</bugzilla>