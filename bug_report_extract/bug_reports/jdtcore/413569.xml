<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>413569</bug_id>
          
          <creation_ts>2013-07-23 15:22:00 -0400</creation_ts>
          <short_desc>[1.8][dom ast] AST for annotated multi-dimensional array type is not well-formed</short_desc>
          <delta_ts>2013-12-05 13:56:09 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.3</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          <dependson>417660</dependson>
          <blocked>391847</blocked>
    
    <blocked>403927</blocked>
    
    <blocked>417923</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Markus Keller">markus_keller</reporter>
          <assigned_to name="Manoj Palat Away Until May 11 2015">manpalat</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>deepakazad</cc>
    
    <cc>jarthana</cc>
    
    <cc>manju656</cc>
    
    <cc>manpalat</cc>
    
    <cc>noopur_gupta</cc>
    
    <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2287539</commentid>
    <comment_count>0</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-07-23 15:22:50 -0400</bug_when>
    <thetext>The AST for a multi-dimensional array type with annotations on the array dimensions is not well-formed. The problem is that for ArrayType nodes, the linearization of the AST (i.e. the source order of AST nodes) doesn&apos;t correspond to the language model. This is a new problem, not bug 403834 or bug 391894 comment 4.

Example:

import java.lang.annotation.*;

@Target(ElementType.TYPE_USE)
@Retention(RetentionPolicy.RUNTIME)
@Documented
@interface A {
	int value() default 0;
}

public class TestArrayAnnotations {
	@A(3) String @A(1)[] @A(2)[] arr =
			new @A(3) String @A(1)[11] @A(2)[12];
}

The AST node for the type of field &apos;arr&apos; is:

ASTNode type/property  Source range
---------------------  ---------------------------------
ArrayType              String @A(1)[] @A(2)[]
+annotations                          @A(2)
+componentType         String @A(1)[]
 +annotations                 @A(1)
 +componentType        String
  +name                String

The problem is that this componentType is just a parsing artifact, but it doesn&apos;t make sense from a semantic point of view. As http://types.cs.washington.edu/jsr308/specification/java-annotation-design.html#array-syntax explains, the type nesting in the language model is actually going like this:

ArrayType        @A(3) String @A(1)[] @A(2)[]
+annotations                  @A(1)
+componentType   @A(3) String         @A(2)[]
 +annotations                         @A(2)
 +componentType  @A(3) String
  +annotations   @A(3)
  +name                String

As long as nobody could actually distinguish the different array brackets, we could live with that. I.e. it usually doesn&apos;t matter whether the component type of String[][] is String[] with the first or with the second set of brackets.

But as soon as we add annotations, the picture changes. With the current AST node structure, it&apos;s e.g. impossible to implement bug 409586 correctly, because the top-level ArrayType&apos;s annotation is &quot;@A(2)&quot;, but the binding of the top-level ArrayType must have annotation &quot;@A(1)&quot;, because that&apos;s the annotation on the outermost array brackets.

The type &quot;String @A(1)[]&quot; doesn&apos;t exist from a language point of view, because the annotation &quot;@A(1)&quot; annotates the type String[][], not a String[].

The only way I see how we could reconcile AST nodes and bindings would be to replace the nestable ArrayType by a FlatArrayType node with these properties:
+componentType: Type (cannot be another FlatArrayType)
+dimensions: List&lt;ExtraDimension&gt;

Then, the binding of the FlatArrayType would be identical to the binding of the leftmost dimension.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2287792</commentid>
    <comment_count>1</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-07-24 08:13:37 -0400</bug_when>
    <thetext>A less drastic change than replacing ArrayType with a new FlatArrayType would be to keep ArrayType but change the way multi-level array types are represented in JLS8 ASTs:
- add property &quot;extraDimensions&quot; of type List&lt;ExtraDimension&gt; which represents &quot;deeper&quot; array levels along with their annotations
- explain the problem with nested ArrayTypes and that the ASTParser doesn&apos;t create them any more
- this would effectively change the meaning of ArrayType#get/setComponentType() for multi-dimensional array types, since that property would then always contain the (non-array) element type</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2289102</commentid>
    <comment_count>2</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-07-29 06:39:00 -0400</bug_when>
    <thetext>Markus/others: Two discussion points - Please comment.

1) The source range for AST node has a startposition and a length. For the given example @A(3) String @A(1)[] @A(2)[], the component type (first level) will have &quot; @A(3) String         @A(2)[]&quot;  which would not be continous in the source. This would have to be taken care by providing a list of source positions (say an array of sourcestart and base) rather than a single pair for this node [The astviewer code/other clients may also be affected]. 

2) Regarding set/getComponent(): I think the current meaning is more logical as it returns the component of the current level and hence the first solution itself looks better and more intuitive, though more drastic. Prefer the first proposal of FlatArrayType (with modifications, if any)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2289309</commentid>
    <comment_count>3</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-07-29 14:12:47 -0400</bug_when>
    <thetext>(In reply to comment #2)
The goal of comment 1 was to keep the API stable for the common case where there&apos;s only one array dimension. If we keep the ArrayType API as it is, but just turn the nesting around so that it matches the second structure from comment 0, then we would accept that there are ArrayTypes with gaps in their source range.

I don&apos;t think many clients would be interested in the actual non-contiguous source positions. That&apos;s mostly the ASTRewrite&apos;s business. More problematic is that NodeFinder can&apos;t distinguish the top-level ArrayType from the first component type &quot;@A(3) String         @A(2)[]&quot; if they both have the same outer source range. Adding more NodeFinder methods that can also deal with gaps doesn&apos;t sound worth the hassle.

Re 2), I agree that changing the meaning of set/getComponent() probably makes it even harder for clients to correctly adapt to JLS8, so I think we have to go with FlatArrayType. Let&apos;s call it ArrayType2, so that it appears in content assist next to the old ArrayType.

Class ExtraDimension should be renamed to Dimension or ArrayDimension, but existing &quot;extraDimensions&quot; properties should keep that name.

ArrayCreation also needs to use the new ArrayType2.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2290576</commentid>
    <comment_count>4</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-08-01 09:00:42 -0400</bug_when>
    <thetext>(In reply to comment #3)
With existing ArrayType itself, we can model the array by changing the association of annotations to reflect the tree shown in comment 1 (reproduced below for the sake of clarity)

ArrayType        @A(3) String @A(1)[] @A(2)[] --&gt; ArrayType
+annotations                  @A(1)           --&gt; for Outermost dimension
+componentType   @A(3) String         @A(2)[] --&gt; ComponenType will be ArrayType
 +annotations                         @A(2)   --&gt; for inner dimension
 +componentType  @A(3) String                 --&gt; Type
  +annotations   @A(3)                        --&gt; for the basic element
  +name                String

Keeping this type would also mean no change to get/set ComponentType() as well.

&gt;  More problematic
&gt; is that NodeFinder can&apos;t distinguish the top-level ArrayType from the first
&gt; component type &quot;@A(3) String         @A(2)[]&quot; if they both have the same
&gt; outer source range. Adding more NodeFinder methods that can also deal with
&gt; gaps doesn&apos;t sound worth the hassle.

It can be noted that there can be utmost one gap for a legitimate selection represented by a node. We can model this gap by a ASTNode.(gapStart, gapLength) which can be an additional check in the NodeFinder methods to differentiate between the nodes having same outer ranges.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2291393</commentid>
    <comment_count>5</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-08-05 03:00:13 -0400</bug_when>
    <thetext>(In reply to comment #1)
&gt; A less drastic change than replacing ArrayType with a new FlatArrayType
&gt; would be to keep ArrayType but change the way multi-level array types are
&gt; represented in JLS8 ASTs:
&gt; - add property &quot;extraDimensions&quot; of type List&lt;ExtraDimension&gt; which
&gt; represents &quot;deeper&quot; array levels along with their annotations
&gt; - explain the problem with nested ArrayTypes and that the ASTParser doesn&apos;t
&gt; create them any more
&gt; - this would effectively change the meaning of
&gt; ArrayType#get/setComponentType() for multi-dimensional array types, since
&gt; that property would then always contain the (non-array) element type

I prefer this for the following reason:

Looks like we have to make a compromise one way or other. Either we can logically represent the array type or the way it&apos;s written (left to right). And considering that the former has still issues we don&apos;t have answer to, my vote is for altering the Array type to return it&apos;s leaf type (SimpleType etc.) and set of annotatable dimensions. Only change I would like to propose is:

Instead of using the existing component type, if we come up with new ones and deprecating the current ones, that will simplify a lot of things.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2292803</commentid>
    <comment_count>6</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-08-08 11:38:30 -0400</bug_when>
    <thetext>(In reply to comment #5)
I&apos;m not completely sure what exactly you propose. Do you want to keep ArrayType, but
- deprecate and disable get/setComponentType() and property &quot;componentType&quot; for level JLS8 ASTs, and instead
- add a new property &quot;elementType&quot; of type Type (reuse getter, add setter) and
- add a new property &quot;dimensions&quot; of type List&lt;ExtraDimension&gt;?

That would be similar to the FlatArrayType or ArrayType2 from comment 3, but without adding a new ASTNode class. That also sounds good to me. It would spare existing clients from changing the type of ArrayType variables and keep Type#isArrayType() straightforward.


(In reply to comment #4)
Yes, that could work, but it would still violate the guarantee in ASTParser#setKind(int): &quot;Source ranges nest properly: the source range for a child is always within the source range of its parent, and the source ranges of sibling nodes never overlap.&quot;

In the example, the source ranges of siblings would overlap:
&gt; +annotations                  @A(1) []
&gt; +componentType   @A(3) String          @A(2)[]

And since this change will break existing clients anyway, we better go for a solution that doesn&apos;t have these problems.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2293548</commentid>
    <comment_count>7</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-08-12 00:07:31 -0400</bug_when>
    <thetext>(In reply to comment #6)
&gt; (In reply to comment #5)
&gt; I&apos;m not completely sure what exactly you propose. Do you want to keep
&gt; ArrayType, but
&gt; - deprecate and disable get/setComponentType() and property &quot;componentType&quot;
&gt; for level JLS8 ASTs, and instead
&gt; - add a new property &quot;elementType&quot; of type Type (reuse getter, add setter)
&gt; and
&gt; - add a new property &quot;dimensions&quot; of type List&lt;ExtraDimension&gt;?
&gt; 
&gt; That would be similar to the FlatArrayType or ArrayType2 from comment 3, but
&gt; without adding a new ASTNode class. That also sounds good to me. It would
&gt; spare existing clients from changing the type of ArrayType variables and
&gt; keep Type#isArrayType() straightforward.

Yes, that&apos;s what I meant.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2293773</commentid>
    <comment_count>8</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-08-12 11:12:09 -0400</bug_when>
    <thetext>OK, looks like we have a conclusion. The fix should also take bug 413942 into account: First revert the bad parts of c3894f02481a65e7c5a6b2e211e3716b20cd9dd8 and 01023454337af8ada2f5699e5de8fcd7a8d40840 (and maybe other commits) until ArrayType and the array-related changes in ASTConverter look like before JLS8. Then make sure the new implementation for JLS8 considers bug 413942 comment 0:

&gt; The strategy should not be to scan over annotations, but to use the
&gt; annotation nodes&apos; source ranges to update the start position and then only
&gt; scan for the brackets after the annotation node.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2304076</commentid>
    <comment_count>9</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-09-08 11:49:33 -0400</bug_when>
    <thetext>The existing AST#newArrayType(..) APIs will also have to be deprecated and replaced by an API that doesn&apos;t rely on ArrayType#setComponentType().

I don&apos;t think an AST#new* API should deep-inspect the given argument node, so the &quot;elementType&quot; argument should not be allowed to be an ArrayType. The new API could be:

* @param elementType the element type (must not be an ArrayType)
* @param dimensions the dimensions, or &lt;code&gt;null&lt;/code&gt; to create an un-annotated one-dimensional array type
*/
public ArrayType newArrayType(Type elementType, List&lt;ExtraDimension&gt; dimensions)


Note that this bug is the main blocker for progress in JDT UI.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2306830</commentid>
    <comment_count>10</comment_count>
      <attachid>235485</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-09-14 07:18:52 -0400</bug_when>
    <thetext>Created attachment 235485
Proposed Patch

New ArrayType implementation with ElementType and Dimensions as concluded for JLS8 and above.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2307610</commentid>
    <comment_count>11</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-09-17 01:54:14 -0400</bug_when>
    <thetext>have the debug options at https://bugs.eclipse.org/bugs/show_bug.cgi?id=404986 used to verify proper nesting of nodes ? Have other such options Markus has pointed in the past been used to verify all is well ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2308826</commentid>
    <comment_count>12</comment_count>
      <attachid>235631</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-09-19 10:09:37 -0400</bug_when>
    <thetext>Created attachment 235631
Proposed Patch - WIP

Thanks Srikanth for the comment. Some of the issues were not addressed fully in the earlier patch. Adding a WIP patch which addresses the issues. In addition, there are some errors thrown when dom/ast/debug is true (tracing as suggested by Markus), which are not related to ArrayType but have been missed out - just that these came into light while debugging ArrayTypes. Will raise separate bugs for the same.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2309058</commentid>
    <comment_count>13</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-09-19 22:24:57 -0400</bug_when>
    <thetext>(In reply to Manoj Palat from comment #12)

&gt; Will raise separate bugs for the same.
An umbrella bug 417659 raised.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2309131</commentid>
    <comment_count>14</comment_count>
      <attachid>235650</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-09-20 04:22:39 -0400</bug_when>
    <thetext>Created attachment 235650
Proposed Patch

Given that this is a blocker, uploading the patch for review asap. Please note that all the tests specified in bug 413942 have been checked manually at level JLS1.8 (and malformed to be at level &lt;1.8 as the case may be) and some of these tests have been added in the patch (remaining ones will be added as a patch to bug 413942)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2309340</commentid>
    <comment_count>15</comment_count>
      <attachid>235670</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-09-20 12:37:26 -0400</bug_when>
    <thetext>Created attachment 235670
Proposed Patch

Jay: This patch includes all the test cases listed in bug 413942 and more, and some corrections/additions.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2309501</commentid>
    <comment_count>16</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-09-21 11:15:15 -0400</bug_when>
    <thetext>Manoj, here are my comments:

1. NaivASTFlattener#getArrayTypeComponentType - Method needs a better name, it doesn&apos;t get/return anything. E.g. visitArrayComponentType()

ArrayType:

2. Since ArrayType#componentType and elementType are mutually exclusive, and private anyway, can we use the same field internally for both properties?

3. There is one warning about deprecate method being used.

4. org.eclipse.jdt.core.dom.ArrayType.COMPONENT_TYPE_PROPERTY java doc should mention not being supported for JLS 8.

Similarly, ELEMENT_TYPE_PROPERTY should mention that it is supported only from JLS8

5. getDimensionNo() could use a better name, perhaps, getDimension() or getDimensionAt() ?

ASTConverter:

6. In annotateType(), the first assignment to the local variable &apos;annotationsStart&apos; is not necessary.

7. In the same method, the following can be reduced to a simple if condition. I agree it was an existing code, nevertheless, it&apos;s unncessary.

8. convert(ArrayAllocationExpression expression) - the local variable &apos;savedStart&apos; can be avoided or its declaration can be pushed further down.

9. setArrayTypeAnnotationsAndSource() - local variable &apos;lastIndex&apos; can be avoided or the - 1 operation can be avoided at the least. Similar code is present in convertToArray()

10. The method convertToArray() is called twice, but only once is it preceded by retrieveEndOfDimensionsPosition(). This needs to be understood.

11. The code that sets the source ranges for dimensions on array allocation expression and source ranges for annotations in convertType() can be combined? Also consider moving relevant codes that constructs the array type can be moved to one or two methods that can be reused.

This review doesn&apos;t cover ASTRewriteAnalyzer. Will add if found anything later.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2309653</commentid>
    <comment_count>17</comment_count>
      <attachid>235703</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-09-23 02:49:35 -0400</bug_when>
    <thetext>Created attachment 235703
Proposed Patch

Jay: Thanks for the quick review. Have reworked based on the comments. Since some of the comments applied to the existing code as well, have done some cleanup to the existing code to avoid repetitions/multiple calls etc though did not attempt to do a major refactoring of the existing code since that may affect the stability of clients. These changes are primarily in ASTConverter(most) and some in rewriter code.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2309809</commentid>
    <comment_count>18</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2013-09-23 09:31:37 -0400</bug_when>
    <thetext>(In reply to Manoj Palat from comment #17)
&gt; Created attachment 235703 [details]
&gt; Proposed Patch

Manoj, here are some more comments after reviewing the latest patch and AST rewrite part.

ASTConverter:

1. else if (token == TerminalTokens.TokenNameRPAREN) {--lParenCount; continue;}

This code is not consistent with our format style. Please reformat. Can you also auto format all the newly added code to fix other inconsistent formatting too?

2. Method convertToArray() - the parameter &apos;int noDimensions&apos; better sounds as &apos;dimensions&apos; or noOfDimensions. I prefer the former.

ASTRewriteAnalyzer:
3. Methods internalExtraDimensionRewrite() and internalExtraDimensionAddition():
These methods do not have any relevant code for (astLevelGTE8 == false) and we don&apos;t need the parameter for anything else. Hence it can simply be rewritten without that parameter and invoked with a (astLevelGTE8 == true) check.

4. The following code at AST level JLS4, doesn&apos;t show any of the nodes as malformed in the ASTView.

public int [] foo() @Marker(value = &quot;three&quot;) [] {return null;}

When I debugged, I do found the array type being flagged as MALFORMED, but it doesn&apos;t get added to the method declaration node or any other node (in JLS 4 and below) as method declaration in JLS 4 and below only encoded the extra dimension as an int value. However, the following works alright in JLS4:

int [] [] i = new int [2] @Marker(value = &quot;three&quot;) [3];

I am wondering if we should treat the extra dimensions for methods case specially for JLS4 and below and not create the enclosing array types for the extra dimensions?

AST: 

5. In the javadoc, it&apos;s more helpful if you provide a code link or type name instead of &apos;annotatable type&apos;, e.g. &lt;code&gt;IAnnotatableType&gt;&lt;/code&gt;

6. Please make &apos;&lt; JLS8&apos;, &apos;&gt;= JLS8&apos; etc. to be consistent with other phrases, such as &apos;less than JLS8&apos; etc.

7. Remove the irrelevant whitespace change around &apos;wouldblow&apos;

ArrayType:

8. In the type&apos;s Javadoc, shouldn&apos;t we refer to ExtraDimension instead of literals &apos;[]&apos; for level 8 and above? Plus, we should also document multiple dimensions, like &apos;{ExtraDimension}&apos;.

9. ArrayType#DIMENSIONS_PROPERTY - Javadoc should have &apos;@link ExtraDimension&apos; and not &apos;@link Annotation&apos;

10. Nitpicking, method getDimensions() - If your idea is to keep the code easier to understand in a procedural way, it makes more sense if the if/else is reversed.

11. ASTConverterTestAST8_2 - Some test method directly call the deprecated API instead of the deprecated local methods. They should call the local ones and the test methods themselves should not be deprecated.

12. Similar changes requires for ASTTest.java

13. ASTRewritingStatementsTest - Last whitespace change is irrelevant.

14. Same file, last test has two additional white spaced after removal of annotatons on dimensions. Please look at it and see if they are required.

15. TypeAnnotationsConverterTest -  String [] [] [] [] - do we need these spaces if there are no annotations on dimensions?

That&apos;s all I have. You might want to check with Markus if he wants to do additional testing too.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2310282</commentid>
    <comment_count>19</comment_count>
      <attachid>235766</attachid>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-09-24 10:22:51 -0400</bug_when>
    <thetext>Created attachment 235766
Proposed Patch

&gt; 4. The following code at AST level JLS4, doesn&apos;t show any of the nodes as
&gt; malformed in the ASTView.
&gt; ...

Good catch Jay. This was found to be an issue with the existing ArrayType implementation and manifests not only in the MD node, but also in (around 5 more places) where array type is not used but the element type of the same is used. Corrected at all these places. The enclosing node is now flagged as malformed.

For the last two space related items for which bug 417923 has been raised. Rest addressed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2310292</commentid>
    <comment_count>20</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-09-24 10:34:05 -0400</bug_when>
    <thetext>(In reply to Manoj Palat from comment #19)
&gt; Created attachment 235766 [details]
&gt; Proposed Patch
This patch also addresses a) all the testcases mentioned in bug 413942 comment 0 and b) 4 (out of 16) failures mentioned in bug 417659 comment 0.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2310623</commentid>
    <comment_count>21</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-09-25 05:14:58 -0400</bug_when>
    <thetext>I plan to review the patch in a day or two, but if Jay&apos;s review is complete
please go ahead and release - my review can happen post release and any
issues found could be addressed in follow ups. Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2310624</commentid>
    <comment_count>22</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-09-25 05:18:35 -0400</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #21)
&gt; I plan to review the patch in a day or two, but if Jay&apos;s review is complete
&gt; please go ahead and release - my review can happen post release and any
&gt; issues found could be addressed in follow ups. Thanks.

Thanks Srikanth.
Released by http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=b3031b3455034eac76b444fd20cbebeea6a2f5ff</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2310625</commentid>
    <comment_count>23</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-09-25 05:22:47 -0400</bug_when>
    <thetext>Fixed</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2311386</commentid>
    <comment_count>24</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-09-27 00:52:44 -0400</bug_when>
    <thetext>(In reply to Manoj Palat from comment #22)

&gt; Released by
&gt; http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/
&gt; ?id=b3031b3455034eac76b444fd20cbebeea6a2f5ff

Note for additional reviwewers: 

1. The checkin comment for the commit id refers to a wrong bug.

2. The meat of the changes are in: 

dom/AST.java
dom/ASTConverter.java
dom/ASTMatcher.java
dom/ArrayType.java
dom/NaiveASTFlattener.java
dom/rewrite/ASTRewriteAnalyzer.java
dom/rewrite/ASTRewriteFlattener.java

I am yet to review these files, but I have reviewed all others that were
part of the commit and here are the comments so far:

1. getDimensionAt(0) - would return the right most dimension. Is this what 
really we want ? This looks like ripe grounds for confusion since 
ArrayType#dimensions().get(0) would return the leftmost dimension.
I don&apos;t see a right or wrong ordering per se, not even sure there is a
natural ordering. Perhaps we can get rid of this method altogether ?
It is a convenience method after all ? I don&apos;t see a request for it
on this bug either. If we choose to retain this method, the javadoc should
clearly call out what clients should expect.

2. ArrayType.getElementType() - Javadoc needs polish. (the part about
&quot;until it reaches a non-array type until JLS4&quot; reads odd) In fact we may
be able to get rid of the second para altogether ?

3. org.eclipse.jdt.core.dom.ArrayType.getComponentType() needs polish.
&quot;@deprecated from JLS8 and later, the recursive structure is not valid&quot; We
could rid of the part about &quot;the recursive structure is not valid&quot; and
simply point clients to use getElementType() instead. 

4. Javadoc of org.eclipse.jdt.core.dom.ArrayType.ELEMENT_TYPE_PROPERTY 
should call out that this can never be an array.

5. Is there a cycle risk in ArrayType.ELEMENT_TYPE_PROPERTY ? Given 4, 
I don&apos;t think so.

6. Should we rename ExtraDimension to be just Dimension ? We don&apos;t use 
these for just extra dimensions anymore. The type could just be 
Dimension and the property could be EXTRA_DIMENSIONS_PROPERTY where it 
actually captures extra dimensions.

7. Again, is there a cycle risk in ArrayType#DIMENSIONS_PROPERTY ?
 
8. In tests such as testBug409586, it is convenient if before each block of
AST travel and assertion chunk, the relevant source code line is copied as
a comment. Otherwise, a future reviewer has to keep flipping back and forth
to confirm the test is doing the right thing.

9. ASTConverterJavadocFlattener.visit(ArrayType): Please hoist the calls to
node.getDimensions() and node.dimensions() to outside the loop.

10. Please take one more look at 
ASTRewritingStatementsTest.testBug400568_a_since_8() and
ASTRewritingStatementsTest.testBug400568_since_8() to make sure they are
doing what is intended.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2311402</commentid>
    <comment_count>25</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-09-27 03:12:40 -0400</bug_when>
    <thetext>11. Javadoc of AST.newArrayType(Type):

   - an AnnotatableType instead of a AnnotatableType.
   - @param: level*s* less than JLS8
   - @exception IllegalArgumentException if
         level is greater than or equal to JLS8 and type not an array type ???

12. Javadoc of AST.newArrayType(Type, int):
    - @param elementType the element type (can be an array type for JLS8 ...
      Is this true ? This is not what the code is doing - it throws an IAE.
    - @exception: the number of dimensions is greater than 1000
      We can restrict to 255. Java does not allow 256 or above.
    - @exception IllegalArgumentException if:
      for levels from JLS8 and later, if the element type is not an array type ???

13. NaiveASTFlattener.visit(ArrayType): pull dimensions.size() to the
    initializer of the for loop.

14. ArrayType.ELEMENT_TYPE_PROPERTY: Should this encode AnnotatableType instead
    of Type ? (in both javadoc and code)

15. ArrayType.componentType: javadoc, capitalize R in reused.

16. ArrayType.dimensions: javadoc, first line, remove &quot;extra&quot;

17. ArrayType#memSize: should be 3 * 4 and not 2 * 4.

18. ASTRewriteFlattener.visit(ArrayCreation):
    - astLevelGTE8 = node.getAST().apiLevel() &gt;= AST.JLS8 ? true : false;
      could simply be:
      astLevelGTE8 = node.getAST().apiLevel() &gt;= AST.JLS8 ?
   - for (int i= 0; i &lt; list.size(); i++)
     pull up list.size() to for loop&apos;s initializer.
   - I think this is dead code:
     // add &quot;&lt;annotations&gt; []&quot; for each extra array dimension
     for (int i= list.size(); i &lt; dimensions; i++) {
	internalVisitExtraDimensionAnnotations(arrayType, i, astLevelGTE8);
	this.result.append(&quot;[]&quot;); //$NON-NLS-1$
     }
19. ASTRewriteAnalyzer.visit(ArrayCreation):
    - astLevelGTE8 = node.getAST().apiLevel() &gt;= AST.JLS8 ? true : false;
      could simply be:
      astLevelGTE8 = node.getAST().apiLevel() &gt;= AST.JLS8 ?

20. ASTRewriteAnalyzer.internalExtraDimensionAddition: is this better
named as insertAnnotationsOnDimension, Likewise is internalExtraDimensionRewrite
better named as rewriteAnnotationsOnDimension.  I didn&apos;t fully understand
the change in visit(ArrayCreation) - I hope we have some torture tests
that exercise this code ? 

I have just ASTConverter left to do.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2311495</commentid>
    <comment_count>26</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-09-27 08:03:05 -0400</bug_when>
    <thetext>Via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=1ca61ba390ea54fcabd09223853d7a3d6816c249, I released a bunch
of clean ups: Basically more verbose - more consistent names for methods/variables
(e.g annotation not annot, dimensions not dims etc, given we have a good
code completion facility, we don&apos;t have to worry about typing long names :))

My review is complete, Thanks for following up on the comments posted
Manoj. Just release any changes you make, no need for another look through.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2318057</commentid>
    <comment_count>27</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-10-14 21:24:55 -0400</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #26)

&gt; My review is complete, Thanks for following up on the comments posted
&gt; Manoj. Just release any changes you make, no need for another look through.

Let us wait on the AnnotatableType use in element
type - others can be pursued and closed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2318305</commentid>
    <comment_count>28</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-10-15 10:13:37 -0400</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #27)
Manoj, please wait with this until tomorrow.

I&apos;m about to release a bunch of additional fixes for this bug. I&apos;ll also rename ExtraDimension to Dimension.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2318495</commentid>
    <comment_count>29</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-10-15 15:03:42 -0400</bug_when>
    <thetext>&gt; I&apos;m about to release a bunch of additional fixes for this bug.

Done with http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=810d2a46e73e304780d3a58f117d6c63103b4e72

General rule for Javadocs: The main audience is users of the latest API level. Always put the contract for the current and future API levels first. Only mention the &quot;in JLS4 and earlier&quot; case at the end.

&gt; 1. getDimensionAt(0)

This method was badly documented, redundant, and the only call to it in ASTConverter was wrong, e.g. for this method declaration:
    void foo(@A int @B[] @C[] @D... arg)
Removed the method, fixed the callers, and added ASTConverter18Test#test413569().

&gt; 5. Is there a cycle risk in ArrayType.ELEMENT_TYPE_PROPERTY ? Given 4, I don&apos;t think so.

Yes, there is a cycle risk. Cycle risk is based on ASTNode types, not on semantic constraints. See ChildPropertyDescriptor#cycleRisk(). The &quot;instanceof ArrayType&quot; check in ArrayType#setElementType(Type) only protects against a 1-level cycle, but the ArrayType node could be inserted into one of its descendants at a deeper level (e.g. as type arguments of a ParameterizedType).

&gt; 14. ArrayType.ELEMENT_TYPE_PROPERTY: Should this encode AnnotatableType instead of Type?

No, can also be a ParameterizedType.

---

Remaining issues to be investigated:

a) ASTRewriteAnalyzer#visit(ArrayType): The rewriteNodeList(..., &quot; &quot;) call looks fishy. In the normal case (no annotations on dimensions), I wouldn&apos;t expect a space between consecutive [], e.g.: int[][]. No DOM test failed when I changed the last argument to &quot;&quot;.
ASTRewriteFlattener#visit(ArrayType) looks similar: I&apos;d expect the separator to be &quot;&quot;, not &quot; &quot;.

Please write two ASTRewrite tests that don&apos;t use any annotations:
- create a new ArrayType with n &gt; 1 dimensions
- rewrite an existing ArrayType and insert a dimension

b) The examples in bug 413942 seem to work now, but ASTConverter still does too much scanning. In essence, every retrieve*(..) method that counts nesting levels or skips over unknown tokens is bad. Some of this skipping code even seems to be unused nowadays. I saw this pattern in retrieveEndOfElementTypeNamePosition, retrieveEndOfPotentialExtendedDimensions, retrieveExtraDimension, retrieveDimensionAndSetPositions, retrieveRightBrace.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2318542</commentid>
    <comment_count>30</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-10-15 15:58:58 -0400</bug_when>
    <thetext>ASTConverter#extractSubArrayType() needs proper Javadoc.

(In reply to Markus Keller from comment #29)
&gt; a) ASTRewriteAnalyzer#visit(ArrayType): The rewriteNodeList(..., &quot; &quot;) call
&gt; looks fishy....

Sorry, I didn&apos;t see bug 417923. This can be addressed there.

&gt; I&apos;ll also rename ExtraDimension to Dimension.

Done with http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=43bf242c384a6b4ad5daf26c5b4617ec68564235

I have no more planned changes in JDT Core.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2318640</commentid>
    <comment_count>31</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-10-15 23:34:45 -0400</bug_when>
    <thetext>(In reply to Markus Keller from comment #29)

&gt; &gt; 14. ArrayType.ELEMENT_TYPE_PROPERTY: Should this encode AnnotatableType instead of Type?
&gt; 
&gt; No, can also be a ParameterizedType.

Thanks a lot for the changes Markus. The comments are getting scattered
across multiple bugs, thinking a bit more, here is what I suggest as a
possible course of action as follow up to 

https://bugs.eclipse.org/bugs/show_bug.cgi?id=418782#c4 and
https://bugs.eclipse.org/bugs/show_bug.cgi?id=418782#c5:

Let us say this is as good as it gets for now and wait for the AST switch
in the UI project and for things to stabilize. Once things are in a good
shape, we can revisit this issue of whether the abstraction AnnotatableType
could be done away with altogether - perhaps in 4-6 weeks time, we will be in a
better position to evaluate this question.

Given we are going to live with these APIs for several years to come, I would
like to believe that my concerns are misplaced. I have a strong gut feel that
the present abstractions are the not the cleanest and that

    - Doing away with AnnotatableType and moving to a has-a model than is-a
      model with respect to annotations.
    - Making the abstract type Type return an unmodifiable empty list for
      annotations() and having the various other annotatable abstractions 
      override and return a modifiable but possibly empty list for annotations()
    - Making ArrayType and ParameterizedType directly annotatable - in fact
      everything other than UnionType and IntersectionType should be
      annotatable, because only these two are prohibited by the language
      from being annotated.
    - Ensuring that it is not allowed to come/end up with 
     (@NonNull List)&lt;String&gt;, likewise for other places where there could
      be more than one place to annotate a type.
    - Moving Dimension back to ExtraDimension and making ArrayType be
      implicitly an one dimensional array and store only extra dimensions
      in its dimensions property

may result in a cleaner solution. I can believe I may have 
overlooked/oversimplified somethings, but this is the gist.

All this amounts to rework which could have been avoided if these points
were raised earlier, but you know the excuse :)

I fully agree that we should declare the present APIs frozen for now and
not churn until UI absorbs these and stabilizes.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2319785</commentid>
    <comment_count>32</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2013-10-17 14:38:48 -0400</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #31)
&gt;     - Making ArrayType and ParameterizedType directly annotatable - in fact
&gt;       everything other than UnionType and IntersectionType should be
&gt;       annotatable, because only these two are prohibited by the language
&gt;       from being annotated.

I don&apos;t think that would be an improvement. I think the difference between the DOM AST and on the other hand compiler ast / type bindings / javax.lang.model is that the DOM AST is mostly a syntactic device with pattern matching and ASTRewrite as major usages. For these usages, it&apos;s important that the AST structure is as simple, predictable, and uniform as possible, and with properly nested source ranges.

If we allowed annotations on a ParameterizedType node as well as on the PT&apos;s type property (a simple or qualified type), then we would have multiple ways of representing the same source code in the AST, since the annotations could be on both types. That calls for trouble and makes refactoring implementations very hard to get right. In the compiler / bindings world, it&apos;s fine to have just one representation of a parameterized type (without access to the simple/qualified name any more), because once a type is resolved, the compiler&apos;s job is done and you know you will never care about the source form any more.

The compiler rarely has to care about the simple name of a type anymore after everything is resolved. But for refactorings and for users of the IDE, a simple name node is usually the base entity, and type arguments / array dimensions are a mere &quot;decoration&quot;.

Maybe we could come up with a better design if we could start the simple/qualified type/name story from scratch now, but that train has left 10 years ago.


&gt;     - Moving Dimension back to ExtraDimension and making ArrayType be
&gt;       implicitly an one dimensional array and store only extra dimensions
&gt;       in its dimensions property

This sounds intriguing, but puts additional load on clients that have to manipulate array types. Instead of a uniform access to all dimensions, clients would have to write everything twice: first for the primary dimension, and then for all the other dimensions.

A good (i.e. bad) precedent for this is the InfixExpression node. The structure

     Expression InfixOperator Expression { InfixOperator Expression }

is a huge pain in practice since everyone forgets about the extendedOperands first, and when they realize the problem, they have to add horrible hacks to make it also work for more than 2 operands. Simple things like processing all operands or removing an operand (bug 418924) become unnecessarily complicated. The whole org.eclipse.jdt.internal.corext.dom.fragments package is devoted to this problem.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2319929</commentid>
    <comment_count>33</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2013-10-17 19:31:00 -0400</bug_when>
    <thetext>(In reply to Markus Keller from comment #32)
&gt; (In reply to Srikanth Sankaran from comment #31)
&gt; &gt;     - Making ArrayType and ParameterizedType directly annotatable - in fact
&gt; &gt;       everything other than UnionType and IntersectionType should be
&gt; &gt;       annotatable, because only these two are prohibited by the language
&gt; &gt;       from being annotated.


&gt; For these usages, it&apos;s
&gt; important that the AST structure is as simple, predictable, and uniform as
&gt; possible, and with properly nested source ranges.

&gt; If we allowed annotations on a ParameterizedType node as well as on the PT&apos;s
&gt; type property (a simple or qualified type), then we would have multiple ways
&gt; of representing the same source code in the AST, since the annotations could
&gt; be on both types.

This was not the suggestion. The suggestion was to document as well enforce
one way of annotating a parameterized type.

&gt; Maybe we could come up with a better design if we could start the
&gt; simple/qualified type/name story from scratch now, but that train has left
&gt; 10 years ago.

I miss the connection between this point and whether AnnotatableType 
should/could be done away with and making annotations a has-a property.

&gt; &gt;     - Moving Dimension back to ExtraDimension and making ArrayType be
&gt; &gt;       implicitly an one dimensional array and store only extra dimensions
&gt; &gt;       in its dimensions property
&gt; 
&gt; This sounds intriguing, but puts additional load on clients that have to
&gt; manipulate array types. 

Great point. This does not preclude ArrayType from being an AnnotableType.
annotations() on ArrayType could simply defect to dimensions()[0].annotations()
providing uniform access to someone everyone who requires it - This would
amount to providing two ways of doing the same thing, but they fall in 
either/or mode as opposed to this and that with the infix extended operands
case. This will also serve to removing the discrimination between what could 
be AnnotatableType and what could not and making them look closer and closer
together at which point the need for AnnotatableType could go away.

(As it is I think your changes to https://bugs.eclipse.org/bugs/show_bug.cgi?id=419748 and potential changes from https://bugs.eclipse.org/bugs/show_bug.cgi?id=419748#c2 make AnnotableType less referred to in JDT/Core.)

I am conscious about clogging your inbox with this discussion while other
more pressing work is engaging you - by all means, let us defer it by a few
weeks - in the mean time we will also have better feel for the API from
actual adoption stand point.

(Also, just a note that I am not dogmatic about it, just want a well considered
decision, well before the API freeze - even if it is only to say &quot;this works,
just no need to change anything&quot;)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2323681</commentid>
    <comment_count>34</comment_count>
    <who name="Manoj Palat Away Until May 11 2015">manpalat</who>
    <bug_when>2013-10-27 01:21:46 -0400</bug_when>
    <thetext>(In reply to Srikanth Sankaran from comment #25)

released commits for comment 24 as well (except for point 17 and dead code for point 18 as they are valid)
http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=e56e767173dc5b5ba970e3e7ca9256e9541ebffc</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>235485</attachid>
            <date>2013-09-14 07:18:00 -0400</date>
            <delta_ts>2013-09-19 10:09:37 -0400</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Fix-for-Bug-413569-18dom-ast-AST-for-annotated-multi.patch</filename>
            <type>text/plain</type>
            <size>91213</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMTVKTFM4VGVzdC5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2RvbS9BU1RDb252ZXJ0ZXIxNUpMUzhUZXN0LmphdmEKaW5kZXggZjRiMTUyOC4uZTJjNDQw
NCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxNUpMUzhUZXN0LmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxNUpMUzhUZXN0LmphdmEKQEAgLTEsNSArMSw1IEBA
CiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDExLCAyMDEyIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDExLCAyMDEzIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBw
cm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxh
YmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAg
KiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBh
dApAQCAtMTcwOCw3ICsxNzA4LDcgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiU3RyaW5n
W10iLCBzb3VyY2UpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNB
cnJheVR5cGUoKSk7CiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwot
CQljaGVja1NvdXJjZVJhbmdlKGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCksICJTdHJpbmci
LCBzb3VyY2UpOworCQljaGVja1NvdXJjZVJhbmdlKGFycmF5VHlwZS5nZXRFbGVtZW50VHlwZSgp
LCAiU3RyaW5nIiwgc291cmNlKTsKIAkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBleHRyYSBkaW1lbnNp
b25zIiwgMSwgc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbi5nZXRFeHRyYURpbWVuc2lvbnMoKSk7
CiAJfQogCkBAIC0xNzM2LDcgKzE3MzYsNyBAQAogCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJT
dHJpbmdbXSIsIHNvdXJjZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgdHlw
ZS5pc0FycmF5VHlwZSgpKTsKIAkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5
cGU7Ci0JCWNoZWNrU291cmNlUmFuZ2UoYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKSwgIlN0
cmluZyIsIHNvdXJjZSk7CisJCWNoZWNrU291cmNlUmFuZ2UoYXJyYXlUeXBlLmdldEVsZW1lbnRU
eXBlKCksICJTdHJpbmciLCBzb3VyY2UpOwogCQlhc3NlcnRFcXVhbHMoIldyb25nIGV4dHJhIGRp
bWVuc2lvbnMiLCAwLCBzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLmdldEV4dHJhRGltZW5zaW9u
cygpKTsKIAl9CiAJLyoqCkBAIC0yNDI3LDEyICsyNDI3LDkgQEAKIAkJY2hlY2tTb3VyY2VSYW5n
ZSh0eXBlLCAiTWFwPFN0cmluZywgRG91YmxlPltdW10iLCBzb3VyY2UpOwogCQlhc3NlcnRFcXVh
bHMoIndyb25nIHR5cGUiLCBBU1ROb2RlLkFSUkFZX1RZUEUsIHR5cGUuZ2V0Tm9kZVR5cGUoKSk7
CiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQl0eXBlID0gYXJy
YXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiTWFw
PFN0cmluZywgRG91YmxlPltdIiwgc291cmNlKTsKLQkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBl
IiwgQVNUTm9kZS5BUlJBWV9UWVBFLCB0eXBlLmdldE5vZGVUeXBlKCkpOwotCQlhcnJheVR5cGUg
PSAoQXJyYXlUeXBlKSB0eXBlOwotCQl0eXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUo
KTsKKwkJdHlwZSA9IGFycmF5VHlwZS5nZXRFbGVtZW50VHlwZSgpOwogCQljaGVja1NvdXJjZVJh
bmdlKHR5cGUsICJNYXA8U3RyaW5nLCBEb3VibGU+Iiwgc291cmNlKTsKKwkJYXNzZXJ0RXF1YWxz
KCJ3cm9uZyB0eXBlIiwgQVNUTm9kZS5QQVJBTUVURVJJWkVEX1RZUEUsIHR5cGUuZ2V0Tm9kZVR5
cGUoKSk7CiAJfQogCiAJLyoKQEAgLTI0NTQsMTIgKzI0NTEsOSBAQAogCQljaGVja1NvdXJjZVJh
bmdlKHR5cGUsICJqYXZhLnV0aWwuTWFwPFN0cmluZywgRG91YmxlPltdW10iLCBzb3VyY2UpOwog
CQlhc3NlcnRFcXVhbHMoIndyb25nIHR5cGUiLCBBU1ROb2RlLkFSUkFZX1RZUEUsIHR5cGUuZ2V0
Tm9kZVR5cGUoKSk7CiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwot
CQl0eXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJY2hlY2tTb3VyY2VSYW5n
ZSh0eXBlLCAiamF2YS51dGlsLk1hcDxTdHJpbmcsIERvdWJsZT5bXSIsIHNvdXJjZSk7Ci0JCWFz
c2VydEVxdWFscygid3JvbmcgdHlwZSIsIEFTVE5vZGUuQVJSQVlfVFlQRSwgdHlwZS5nZXROb2Rl
VHlwZSgpKTsKLQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJdHlwZSA9IGFycmF5
VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCXR5cGUgPSBhcnJheVR5cGUuZ2V0RWxlbWVudFR5
cGUoKTsKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiamF2YS51dGlsLk1hcDxTdHJpbmcsIERv
dWJsZT4iLCBzb3VyY2UpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHR5cGUiLCBBU1ROb2RlLlBB
UkFNRVRFUklaRURfVFlQRSwgdHlwZS5nZXROb2RlVHlwZSgpKTsKIAl9CiAKIAkvKgpAQCAtNDEx
OCw3ICs0MTEyLDcgQEAKICAgICAJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBkaW1lbnNpb25zIiwgMSwg
dHlwZUJpbmRpbmcuZ2V0RGltZW5zaW9ucygpKTsKICAgICAJQXJyYXlUeXBlIGFycmF5VHlwZSA9
IChBcnJheVR5cGUpIHR5cGU7CiAgICAgCWFzc2VydEVxdWFscygiV3JvbmcgZGltZW5zaW9uIiwg
MSwgYXJyYXlUeXBlLmdldERpbWVuc2lvbnMoKSk7Ci0gICAgCXR5cGUgPSBhcnJheVR5cGUuZ2V0
Q29tcG9uZW50VHlwZSgpOworICAgIAl0eXBlID0gYXJyYXlUeXBlLmdldEVsZW1lbnRUeXBlKCk7
CiAgICAgCWFzc2VydFRydWUoIk5vdCBhIHNpbXBsZSB0eXBlIiwgdHlwZS5pc1NpbXBsZVR5cGUo
KSk7CiAgICAgCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIlN0cmluZyIsIGNvbnRlbnRzKTsKICAg
ICAJYXNzZXJ0RXF1YWxzKCJXcm9uZyBleHRyYSBkaW1lbnNpb24iLCAxLCBzaW5nbGVWYXJpYWJs
ZURlY2xhcmF0aW9uLmdldEV4dHJhRGltZW5zaW9ucygpKTsKQEAgLTQ1MDIsNyArNDQ5Niw3IEBA
CiAgICAgCWFzc2VydEVxdWFscygid3JvbmcgZGltZW5zaW9ucyIsIDEsIHR5cGVCaW5kaW5nLmdl
dERpbWVuc2lvbnMoKSk7CiAgICAgCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0
eXBlOwogICAgIAlhc3NlcnRFcXVhbHMoIldyb25nIGRpbWVuc2lvbiIsIDEsIGFycmF5VHlwZS5n
ZXREaW1lbnNpb25zKCkpOwotICAgIAl0eXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUo
KTsKKyAgICAJdHlwZSA9IGFycmF5VHlwZS5nZXRFbGVtZW50VHlwZSgpOwogICAgIAlhc3NlcnRU
cnVlKCJOb3QgYSBzaW1wbGUgdHlwZSIsIHR5cGUuaXNTaW1wbGVUeXBlKCkpOwogICAgIAljaGVj
a1NvdXJjZVJhbmdlKHR5cGUsICJTdHJpbmciLCBjb250ZW50cyk7CiAgICAgCWFzc2VydEVxdWFs
cygiV3JvbmcgZXh0cmEgZGltZW5zaW9uIiwgMCwgc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbi5n
ZXRFeHRyYURpbWVuc2lvbnMoKSk7CkBAIC0xMTE4Niw3ICsxMTE4MCw3IEBACiAJCUlUeXBlQmlu
ZGluZyBiaW5kaW5nID0gdHlwZS5yZXNvbHZlQmluZGluZygpOwogCQlhc3NlcnROb3ROdWxsKCJO
byBiaW5kaW5nIiwgYmluZGluZyk7CiAJCWFzc2VydEVxdWFscygiV3JvbmcgcXVhbGlmaWVkIG5h
bWUiLCAidGVzdDAzNDcuT3V0ZXI8amF2YS5sYW5nLkludGVnZXI+LklubmVyPGphdmEubGFuZy5E
b3VibGU+W10iLCBiaW5kaW5nLmdldFF1YWxpZmllZE5hbWUoKSk7Ci0JCVR5cGUgY29tcG9uZW50
VHlwZSA9IHR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlUeXBlIGNvbXBvbmVudFR5cGUgPSB0
eXBlLmdldEVsZW1lbnRUeXBlKCk7CiAJCWJpbmRpbmcgPSBjb21wb25lbnRUeXBlLnJlc29sdmVC
aW5kaW5nKCk7CiAJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsKIAkJYXNz
ZXJ0RXF1YWxzKCJXcm9uZyBxdWFsaWZpZWQgbmFtZSIsICJ0ZXN0MDM0Ny5PdXRlcjxqYXZhLmxh
bmcuSW50ZWdlcj4uSW5uZXI8amF2YS5sYW5nLkRvdWJsZT4iLCBiaW5kaW5nLmdldFF1YWxpZmll
ZE5hbWUoKSk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZh
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YQppbmRleCAwNjUyNmM5Li40YzM3
YTg3IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZhCisrKyBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEKQEAgLTI3MywxMyArMjczLDEzIEBA
CiAJCUlUeXBlQmluZGluZyBiaW5kaW5nID0gdHlwZS5yZXNvbHZlQmluZGluZygpOwogCQlhc3Nl
cnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7CiAJCWFzc2VydEVxdWFscygiV3Jvbmcg
cXVhbGlmaWVkIG5hbWUiLCAidGVzdDAwMDQuT3V0ZXI8amF2YS5sYW5nLkludGVnZXI+LklubmVy
PGphdmEubGFuZy5Eb3VibGU+W10iLCBiaW5kaW5nLmdldFF1YWxpZmllZE5hbWUoKSk7Ci0JCVR5
cGUgY29tcG9uZW50VHlwZSA9IHR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQliaW5kaW5nID0g
Y29tcG9uZW50VHlwZS5yZXNvbHZlQmluZGluZygpOworCQlUeXBlIGVsZW1lbnRUeXBlID0gdHlw
ZS5nZXRFbGVtZW50VHlwZSgpOworCQliaW5kaW5nID0gZWxlbWVudFR5cGUucmVzb2x2ZUJpbmRp
bmcoKTsKIAkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOwogCQlhc3NlcnRF
cXVhbHMoIldyb25nIHF1YWxpZmllZCBuYW1lIiwKIAkJCQkidGVzdDAwMDQuT3V0ZXI8amF2YS5s
YW5nLkludGVnZXI+LklubmVyPGphdmEubGFuZy5Eb3VibGU+IiwgYmluZGluZy5nZXRRdWFsaWZp
ZWROYW1lKCkpOwotCQlhc3NlcnRUcnVlKCJOb3QgcGFyYW1ldGVyaXplZCIsIGNvbXBvbmVudFR5
cGUuaXNQYXJhbWV0ZXJpemVkVHlwZSgpKTsKLQkJUGFyYW1ldGVyaXplZFR5cGUgcGFyYW1ldGVy
aXplZFR5cGUgPSAoUGFyYW1ldGVyaXplZFR5cGUpIGNvbXBvbmVudFR5cGU7CisJCWFzc2VydFRy
dWUoIk5vdCBwYXJhbWV0ZXJpemVkIiwgZWxlbWVudFR5cGUuaXNQYXJhbWV0ZXJpemVkVHlwZSgp
KTsKKwkJUGFyYW1ldGVyaXplZFR5cGUgcGFyYW1ldGVyaXplZFR5cGUgPSAoUGFyYW1ldGVyaXpl
ZFR5cGUpIGVsZW1lbnRUeXBlOwogCQlUeXBlIHR5cGUyID0gcGFyYW1ldGVyaXplZFR5cGUuZ2V0
VHlwZSgpOwogCQlhc3NlcnRUcnVlKCJOb3QgcXVhbGlmaWVkIiwgdHlwZTIuaXNRdWFsaWZpZWRU
eXBlKCkpOwogCQlRdWFsaWZpZWRUeXBlIHF1YWxpZmllZFR5cGUgPSAoUXVhbGlmaWVkVHlwZSkg
dHlwZTI7CkBAIC0xMTM5LDEzICsxMTM5LDEyIEBACiAJCVR5cGUgdHlwZSA9IGNyZWF0aW9uLmdl
dFR5cGUoKTsKIAkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgdHlwZSIsIHRydWUsIHR5cGUuaXNB
cnJheVR5cGUoKSk7CiAJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIkBNYXJrZXIyIGludCBATWFy
a2VyIEBNYXJrZXIyIFsyXSBATWFya2VyMiBATWFya2VyMyBbYmFyKCldIEBNYXJrZXIzIEBNYXJr
ZXIgW10iLCBjb250ZW50cy50b0NoYXJBcnJheSgpKTsKLQkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJl
Y3QgYW5ub3RhdGlvbnMiLCAiQE1hcmtlcjMgQE1hcmtlciAiLCBjb252ZXJ0QW5ub3RhdGlvbnNM
aXN0KCgoQXJyYXlUeXBlKSB0eXBlKS5hbm5vdGF0aW9ucygpKSk7Ci0JCXR5cGUgPSAoKEFycmF5
VHlwZSkgdHlwZSkuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlhc3NlcnRFcXVhbHMoIkluY29ycmVj
dCB0eXBlIiwgdHJ1ZSwgdHlwZS5pc0FycmF5VHlwZSgpKTsKLQkJYXNzZXJ0RXF1YWxzKCJJbmNv
cnJlY3QgYW5ub3RhdGlvbnMiLCAiQE1hcmtlcjIgQE1hcmtlcjMgIiwgY29udmVydEFubm90YXRp
b25zTGlzdCgoKEFycmF5VHlwZSkgdHlwZSkuYW5ub3RhdGlvbnMoKSkpOwotCQl0eXBlID0gKChB
cnJheVR5cGUpIHR5cGUpLmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNzZXJ0RXF1YWxzKCJJbmNv
cnJlY3QgdHlwZSIsIHRydWUsIHR5cGUuaXNBcnJheVR5cGUoKSk7Ci0JCWFzc2VydEVxdWFscygi
SW5jb3JyZWN0IGFubm90YXRpb25zIiwgIkBNYXJrZXIgQE1hcmtlcjIgIiwgY29udmVydEFubm90
YXRpb25zTGlzdCgoKEFycmF5VHlwZSkgdHlwZSkuYW5ub3RhdGlvbnMoKSkpOworCQlFeHRyYURp
bWVuc2lvbiBleHRyYURpbWVuc2lvbiA9ICgoQXJyYXlUeXBlKSB0eXBlKS5nZXREaW1lbnNpb25O
bygwKTsKKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgYW5ub3RhdGlvbnMiLCAiQE1hcmtlcjMg
QE1hcmtlciAiLCBjb252ZXJ0QW5ub3RhdGlvbnNMaXN0KGV4dHJhRGltZW5zaW9uLmFubm90YXRp
b25zKCkpKTsKKwkJZXh0cmFEaW1lbnNpb24gPSAoKEFycmF5VHlwZSkgdHlwZSkuZ2V0RGltZW5z
aW9uTm8oMSk7CisJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IGFubm90YXRpb25zIiwgIkBNYXJr
ZXIyIEBNYXJrZXIzICIsIGNvbnZlcnRBbm5vdGF0aW9uc0xpc3QoZXh0cmFEaW1lbnNpb24uYW5u
b3RhdGlvbnMoKSkpOworCQlleHRyYURpbWVuc2lvbiA9ICgoQXJyYXlUeXBlKSB0eXBlKS5nZXRE
aW1lbnNpb25ObygyKTsKKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgYW5ub3RhdGlvbnMiLCAi
QE1hcmtlciBATWFya2VyMiAiLCBjb252ZXJ0QW5ub3RhdGlvbnNMaXN0KGV4dHJhRGltZW5zaW9u
LmFubm90YXRpb25zKCkpKTsKIAkJTGlzdCBkaW1lbnNpb25zID0gY3JlYXRpb24uZGltZW5zaW9u
cygpOwogCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCBleHByZXNzaW9ucyIsIDIsIGRpbWVuc2lv
bnMuc2l6ZSgpKTsKIAkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgZXhwcmVzc2lvbnMiLCAiMiIs
IGRpbWVuc2lvbnMuZ2V0KDApLnRvU3RyaW5nKCkpOwpAQCAtMTE1OSwxMyArMTE1OCwxMiBAQAog
CQkKIAkJdHlwZSA9IGNyZWF0aW9uLmdldFR5cGUoKTsKIAkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJl
Y3QgdHlwZSIsIHRydWUsIHR5cGUuaXNBcnJheVR5cGUoKSk7Ci0JCWFzc2VydEVxdWFscygiSW5j
b3JyZWN0IGFubm90YXRpb25zIiwgIkBNYXJrZXIyIEBNYXJrZXIzICIsIGNvbnZlcnRBbm5vdGF0
aW9uc0xpc3QoKChBcnJheVR5cGUpIHR5cGUpLmFubm90YXRpb25zKCkpKTsKLQkJdHlwZSA9ICgo
QXJyYXlUeXBlKSB0eXBlKS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWFzc2VydEVxdWFscygiSW5j
b3JyZWN0IHR5cGUiLCB0cnVlLCB0eXBlLmlzQXJyYXlUeXBlKCkpOwotCQlhc3NlcnRFcXVhbHMo
IkluY29ycmVjdCBhbm5vdGF0aW9ucyIsICJATWFya2VyIEBNYXJrZXIyICIsIGNvbnZlcnRBbm5v
dGF0aW9uc0xpc3QoKChBcnJheVR5cGUpIHR5cGUpLmFubm90YXRpb25zKCkpKTsKLQkJdHlwZSA9
ICgoQXJyYXlUeXBlKSB0eXBlKS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWFzc2VydEVxdWFscygi
SW5jb3JyZWN0IHR5cGUiLCB0cnVlLCB0eXBlLmlzQXJyYXlUeXBlKCkpOwotCQlhc3NlcnRFcXVh
bHMoIkluY29ycmVjdCBhbm5vdGF0aW9ucyIsICJATWFya2VyMyBATWFya2VyICIsIGNvbnZlcnRB
bm5vdGF0aW9uc0xpc3QoKChBcnJheVR5cGUpIHR5cGUpLmFubm90YXRpb25zKCkpKTsKKwkJZXh0
cmFEaW1lbnNpb24gPSAoKEFycmF5VHlwZSkgdHlwZSkuZ2V0RGltZW5zaW9uTm8oMCk7CisJCWFz
c2VydEVxdWFscygiSW5jb3JyZWN0IGFubm90YXRpb25zIiwgIkBNYXJrZXIyIEBNYXJrZXIzICIs
IGNvbnZlcnRBbm5vdGF0aW9uc0xpc3QoZXh0cmFEaW1lbnNpb24uYW5ub3RhdGlvbnMoKSkpOwor
CQlleHRyYURpbWVuc2lvbiA9ICgoQXJyYXlUeXBlKSB0eXBlKS5nZXREaW1lbnNpb25ObygxKTsK
KwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgYW5ub3RhdGlvbnMiLCAiQE1hcmtlciBATWFya2Vy
MiAiLCBjb252ZXJ0QW5ub3RhdGlvbnNMaXN0KGV4dHJhRGltZW5zaW9uLmFubm90YXRpb25zKCkp
KTsKKwkJZXh0cmFEaW1lbnNpb24gPSAoKEFycmF5VHlwZSkgdHlwZSkuZ2V0RGltZW5zaW9uTm8o
Mik7CisJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IGFubm90YXRpb25zIiwgIkBNYXJrZXIzIEBN
YXJrZXIgIiwgY29udmVydEFubm90YXRpb25zTGlzdChleHRyYURpbWVuc2lvbi5hbm5vdGF0aW9u
cygpKSk7CiAJCWRpbWVuc2lvbnMgPSBjcmVhdGlvbi5kaW1lbnNpb25zKCk7CiAJCWFzc2VydEVx
dWFscygiSW5jb3JyZWN0IGV4cHJlc3Npb25zIiwgMiwgZGltZW5zaW9ucy5zaXplKCkpOwogCQlh
c3NlcnRFcXVhbHMoIkluY29ycmVjdCBleHByZXNzaW9ucyIsICIyIiwgZGltZW5zaW9ucy5nZXQo
MCkudG9TdHJpbmcoKSk7CkBAIC0xMjM2LDEyICsxMjM0LDYgQEAKIAkJVmFyaWFibGVEZWNsYXJh
dGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgbGlz
dC5nZXQoMCk7CiAJCUFycmF5Q3JlYXRpb24gY3JlYXRpb24gPSAoQXJyYXlDcmVhdGlvbikgZnJh
Z21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKIAkJVHlwZSB0eXBlID0gY3JlYXRpb24uZ2V0VHlwZSgp
OwotCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCB0eXBlIiwgdHJ1ZSwgdHlwZS5pc0FycmF5VHlw
ZSgpKTsKLQkJYXNzZXJ0RXF1YWxzKCJUeXBlIHNob3VsZCBiZSBtYWxmb3JtZWQiLCBBU1ROb2Rl
Lk1BTEZPUk1FRCwgKHR5cGUuZ2V0RmxhZ3MoKSAmIEFTVE5vZGUuTUFMRk9STUVEKSk7Ci0JCXR5
cGUgPSAoKEFycmF5VHlwZSkgdHlwZSkuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlhc3NlcnRFcXVh
bHMoIkluY29ycmVjdCB0eXBlIiwgdHJ1ZSwgdHlwZS5pc0FycmF5VHlwZSgpKTsKLQkJYXNzZXJ0
RXF1YWxzKCJUeXBlIHNob3VsZCBiZSBtYWxmb3JtZWQiLCBBU1ROb2RlLk1BTEZPUk1FRCwgKHR5
cGUuZ2V0RmxhZ3MoKSAmIEFTVE5vZGUuTUFMRk9STUVEKSk7Ci0JCXR5cGUgPSAoKEFycmF5VHlw
ZSkgdHlwZSkuZ2V0Q29tcG9uZW50VHlwZSgpOwogCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCB0
eXBlIiwgdHJ1ZSwgdHlwZS5pc0FycmF5VHlwZSgpKTsKIAkJYXNzZXJ0RXF1YWxzKCJUeXBlIHNo
b3VsZCBiZSBtYWxmb3JtZWQiLCBBU1ROb2RlLk1BTEZPUk1FRCwgKHR5cGUuZ2V0RmxhZ3MoKSAm
IEFTVE5vZGUuTUFMRk9STUVEKSk7CiAJfQpAQCAtMTYxNCwxNCArMTYwNiwxNCBAQAogCQlFeHBy
ZXNzaW9uIGV4cHJlc3Npb24gPSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOwogCQlhc3NlcnRU
cnVlKGV4cHJlc3Npb24gaW5zdGFuY2VvZiBMYW1iZGFFeHByZXNzaW9uKTsKIAkJTGFtYmRhRXhw
cmVzc2lvbiBsYW1iZGFFeHByZXNzaW9uID0gKExhbWJkYUV4cHJlc3Npb24pZXhwcmVzc2lvbjsK
LQkJYXNzZXJ0RXF1YWxzKCIoaW50W10gaWEpIC0+IHtcbiAgcmV0dXJuIGlhLmNsb25lKCk7XG59
XG4iLCBsYW1iZGFFeHByZXNzaW9uLnRvU3RyaW5nKCkpOworCQlhc3NlcnRFcXVhbHMoIihpbnQg
W10gaWEpIC0+IHtcbiAgcmV0dXJuIGlhLmNsb25lKCk7XG59XG4iLCBsYW1iZGFFeHByZXNzaW9u
LnRvU3RyaW5nKCkpOwogCQlJTWV0aG9kQmluZGluZyBiaW5kaW5nID0gbGFtYmRhRXhwcmVzc2lv
bi5yZXNvbHZlTWV0aG9kQmluZGluZygpOwogCQlhc3NlcnRFcXVhbHMoInByaXZhdGUgc3RhdGlj
IGphdmEubGFuZy5PYmplY3QgbGFtYmRhJDAoaW50W10pICIsIGJpbmRpbmcudG9TdHJpbmcoKSk7
CiAJCWFzc2VydFRydWUobGFtYmRhRXhwcmVzc2lvbi5wYXJhbWV0ZXJzKCkuc2l6ZSgpID09IDEp
OwogCQlWYXJpYWJsZURlY2xhcmF0aW9uIHZhcmlhYmxlRGVjbGFyYXRpb24gPSAoVmFyaWFibGVE
ZWNsYXJhdGlvbikgbGFtYmRhRXhwcmVzc2lvbi5wYXJhbWV0ZXJzKCkuZ2V0KDApOwogCQlhc3Nl
cnRUcnVlKHZhcmlhYmxlRGVjbGFyYXRpb24gaW5zdGFuY2VvZiBTaW5nbGVWYXJpYWJsZURlY2xh
cmF0aW9uKTsKIAkJU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiBzaW5nbGVWYXJpYWJsZURlY2xh
cmF0aW9uID0gKFNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24pdmFyaWFibGVEZWNsYXJhdGlvbjsK
LQkJYXNzZXJ0RXF1YWxzKCJpbnRbXSBpYSIsIHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24udG9T
dHJpbmcoKSk7CQkKKwkJYXNzZXJ0RXF1YWxzKCJpbnQgW10gaWEiLCBzaW5nbGVWYXJpYWJsZURl
Y2xhcmF0aW9uLnRvU3RyaW5nKCkpOwkJCiAJfQogCiAJLyoqCmRpZmYgLS1naXQgYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
ZG9tL0FTVENvbnZlcnRlckFTVDhUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0
cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlckFT
VDhUZXN0LmphdmEKaW5kZXggY2UwZmNjNC4uZDQxMzBlNSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Rv
bS9BU1RDb252ZXJ0ZXJBU1Q4VGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVy
QVNUOFRlc3QuamF2YQpAQCAtNzY2MiwxNSArNzY2Miw5IEBACiAJCUlUeXBlQmluZGluZyB0eXBl
QmluZGluZyA9IGFycmF5VHlwZS5yZXNvbHZlQmluZGluZygpOwogCQljaGVja1NvdXJjZVJhbmdl
KHR5cGUsICJqYXZhLmxhbmcuT2JqZWN0W11bXSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKIAkJ
YXNzZXJ0Tm90TnVsbCgiTm8gdHlwZSBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOyAvLyROT04tTkxT
LTEkCi0JCVR5cGUgZWxlbWVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwot
CQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcyID0gZWxlbWVudFR5cGUucmVzb2x2ZUJpbmRpbmco
KTsKLQkJYXNzZXJ0Tm90TnVsbCgiTm8gdHlwZSBiaW5kaW5nMiIsIHR5cGVCaW5kaW5nMik7IC8v
JE5PTi1OTFMtMSQKLQkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBkaW1lbnNpb24iLCAxLCB0eXBlQmlu
ZGluZzIuZ2V0RGltZW5zaW9ucygpKTsgLy8kTk9OLU5MUy0xJAotCQlhc3NlcnRFcXVhbHMoIndy
b25nIG5hbWUiLCAiT2JqZWN0W10iLCB0eXBlQmluZGluZzIuZ2V0TmFtZSgpKTsJCSAvLyROT04t
TkxTLTEkIC8vJE5PTi1OTFMtMiQKLQkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5cGUiLCBl
bGVtZW50VHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAotCQlUeXBlIGVsZW1lbnRU
eXBlMiA9ICgoQXJyYXlUeXBlKSBlbGVtZW50VHlwZSkuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlh
c3NlcnRUcnVlKCJOb3QgYSBzaW1wbGUgdHlwZSIsIGVsZW1lbnRUeXBlMi5pc1NpbXBsZVR5cGUo
KSk7IC8vJE5PTi1OTFMtMSQKLQkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nMyA9IGVsZW1lbnRU
eXBlMi5yZXNvbHZlQmluZGluZygpOworCQlUeXBlIGVsZW1lbnRUeXBlID0gYXJyYXlUeXBlLmdl
dEVsZW1lbnRUeXBlKCk7CisJCWFzc2VydFRydWUoIk5vdCBhIHNpbXBsZSB0eXBlIiwgZWxlbWVu
dFR5cGUuaXNTaW1wbGVUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJCUlUeXBlQmluZGluZyB0eXBl
QmluZGluZzMgPSBlbGVtZW50VHlwZS5yZXNvbHZlQmluZGluZygpOwogCQlhc3NlcnROb3ROdWxs
KCJObyB0eXBlIGJpbmRpbmczIiwgdHlwZUJpbmRpbmczKTsgLy8kTk9OLU5MUy0xJAogCQlhc3Nl
cnRFcXVhbHMoIndyb25nIGRpbWVuc2lvbiIsIDAsIHR5cGVCaW5kaW5nMy5nZXREaW1lbnNpb25z
KCkpOyAvLyROT04tTkxTLTEkCiAJCWFzc2VydEVxdWFscygid3JvbmcgbmFtZSIsICJPYmplY3Qi
LCB0eXBlQmluZGluZzMuZ2V0TmFtZSgpKTsJCSAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQK
QEAgLTgwMDksMTIgKzgwMDMsMTAgQEAKIAkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nMyA9IHNp
bXBsZVR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKIAkJYXNzZXJ0Tm90TnVsbCgibm8gdHlwZSBiaW5k
aW5nMyIsIHR5cGVCaW5kaW5nMyk7IC8vJE5PTi1OTFMtMSQKIAkJYXNzZXJ0RXF1YWxzKCJ3cm9u
ZyBuYW1lIiwgIk9iamVjdCIsIHR5cGVCaW5kaW5nMy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEk
IC8vJE5PTi1OTFMtMiQKLQkJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0J
CWFzc2VydFRydWUoIk5vdCBhbiBhcnJheSB0eXBlIiwgdHlwZSBpbnN0YW5jZW9mIEFycmF5VHlw
ZSk7IC8vJE5PTi1OTFMtMSQKLQkJQXJyYXlUeXBlIGFycmF5VHlwZTIgPSAoQXJyYXlUeXBlKSB0
eXBlOwotCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmc0ID0gYXJyYXlUeXBlMi5yZXNvbHZlQmlu
ZGluZygpOworCQl0eXBlID0gYXJyYXlUeXBlLmdldEVsZW1lbnRUeXBlKCk7CisJCUlUeXBlQmlu
ZGluZyB0eXBlQmluZGluZzQgPSB0eXBlLnJlc29sdmVCaW5kaW5nKCk7CiAJCWFzc2VydE5vdE51
bGwoIm5vIHR5cGUgYmluZGluZzQiLCB0eXBlQmluZGluZzQpOyAvLyROT04tTkxTLTEkCi0JCWFz
c2VydEVxdWFscygid3JvbmcgbmFtZSIsICJPYmplY3RbXSIsIHR5cGVCaW5kaW5nNC5nZXROYW1l
KCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBu
YW1lIiwgIk9iamVjdCIsIHR5cGVCaW5kaW5nNC5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8v
JE5PTi1OTFMtMiQKIAl9CiAKIAkvKioKQEAgLTgwNTEsMjAgKzgwNDMsMTAgQEAKIAkJSVR5cGVC
aW5kaW5nIHR5cGVCaW5kaW5nMyA9IHNpbXBsZVR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKIAkJYXNz
ZXJ0Tm90TnVsbCgibm8gdHlwZSBiaW5kaW5nMyIsIHR5cGVCaW5kaW5nMyk7IC8vJE5PTi1OTFMt
MSQKIAkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgIk9iamVjdCIsIHR5cGVCaW5kaW5nMy5n
ZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKLQkJdHlwZSA9IGFycmF5VHlw
ZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWFzc2VydFRydWUoIk5vdCBhbiBhcnJheSB0eXBlIiwg
dHlwZSBpbnN0YW5jZW9mIEFycmF5VHlwZSk7IC8vJE5PTi1OTFMtMSQKLQkJQXJyYXlUeXBlIGFy
cmF5VHlwZTIgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQljaGVja1NvdXJjZVJhbmdlKGFycmF5VHlw
ZTIsICJPYmplY3RbMTBdW10iLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCi0JCUlUeXBlQmluZGlu
ZyB0eXBlQmluZGluZzQgPSBhcnJheVR5cGUyLnJlc29sdmVCaW5kaW5nKCk7CisJCXR5cGUgPSBh
cnJheVR5cGUuZ2V0RWxlbWVudFR5cGUoKTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nNCA9
IHR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKIAkJYXNzZXJ0Tm90TnVsbCgibm8gdHlwZSBiaW5kaW5n
NCIsIHR5cGVCaW5kaW5nNCk7IC8vJE5PTi1OTFMtMSQKLQkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBu
YW1lIiwgIk9iamVjdFtdW10iLCB0eXBlQmluZGluZzQuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0x
JCAvLyROT04tTkxTLTIkCi0JCXR5cGUgPSBhcnJheVR5cGUyLmdldENvbXBvbmVudFR5cGUoKTsK
LQkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5cGUiLCB0eXBlIGluc3RhbmNlb2YgQXJyYXlU
eXBlKTsgLy8kTk9OLU5MUy0xJAotCQlBcnJheVR5cGUgYXJyYXlUeXBlMyA9IChBcnJheVR5cGUp
IHR5cGU7Ci0JCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzUgPSBhcnJheVR5cGUzLnJlc29sdmVC
aW5kaW5nKCk7Ci0JCWFzc2VydE5vdE51bGwoIm5vIHR5cGUgYmluZGluZzUiLCB0eXBlQmluZGlu
ZzUpOyAvLyROT04tTkxTLTEkCi0JCWFzc2VydEVxdWFscygid3JvbmcgbmFtZSIsICJPYmplY3Rb
XSIsIHR5cGVCaW5kaW5nNS5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQK
LQkJY2hlY2tTb3VyY2VSYW5nZShhcnJheVR5cGUzLCAiT2JqZWN0WzEwXSIsIHNvdXJjZSk7IC8v
JE5PTi1OTFMtMSQKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgIk9iamVjdCIsIHR5cGVC
aW5kaW5nNC5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKIAl9CiAKIApk
aWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXJUZXN0QVNUOF8yLmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvZG9tL0FTVENvbnZlcnRlclRlc3RBU1Q4XzIuamF2YQppbmRleCBmYjMyZTc1Li44NmM1NzZh
IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlclRlc3RBU1Q4XzIuamF2YQorKysg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlclRlc3RBU1Q4XzIuamF2YQpAQCAtMjcxMCw2ICsyNzEw
LDcgQEAKIAogCS8qKgogCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTQyODM5CisJICogQGRlcHJlY2F0ZWQgdXNlcyBkZXByZWNhdGVkIG1ldGhvZHMKIAkg
Ki8KIAlwdWJsaWMgdm9pZCB0ZXN0MDQ5MygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewog
CQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZl
cnRlciIgLCAic3JjIiwgInRlc3QwNDkzIiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5P
Ti1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCkBAIC0yNzI1LDEzICsyNzI2LDE4
IEBACiAJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIkNsYXNzW11bXSIsIHNvdXJjZSk7CiAJCWFz
c2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgdHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9O
LU5MUy0xJAogCQlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJVHlw
ZSBjb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNzZXJ0
VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAv
LyROT04tTkxTLTEkCi0JCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzW10i
LCBzb3VyY2UpOwotCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBlOwotCQlj
b21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNzZXJ0VHJ1
ZSgiaXMgYW4gYXJyYXkgdHlwZSIsICFjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyRO
T04tTkxTLTEkCi0JCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzIiwgc291
cmNlKTsKKwkJaWYgKHRoaXMuYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgeworCQkJVHlwZSBj
b21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJCWFzc2VydFRy
dWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlwZS5pc0FycmF5VHlwZSgpKTsgLy8k
Tk9OLU5MUy0xJAorCQkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXSIs
IHNvdXJjZSk7CisJCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBlOworCQkJ
Y29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCQlhc3NlcnRU
cnVlKCJpcyBhbiBhcnJheSB0eXBlIiwgIWNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8v
JE5PTi1OTFMtMSQKKwkJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzIiwg
c291cmNlKTsKKwkJfSBlbHNlIHsKKwkJCVR5cGUgZWxlbWVudFR5cGUgPSBhcnJheVR5cGUuZ2V0
RWxlbWVudFR5cGUoKTsKKwkJCWNoZWNrU291cmNlUmFuZ2UoZWxlbWVudFR5cGUsICJDbGFzcyIs
IHNvdXJjZSk7CisJCX0KIAl9CiAKIAkvKioKQEAgLTI3NTEsMjEgKzI3NTcsMjcgQEAKIAkJY2hl
Y2tTb3VyY2VSYW5nZSh0eXBlLCAiQ2xhc3NbXVtdW10iLCBzb3VyY2UpOwogCQlhc3NlcnRUcnVl
KCJub3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQK
IAkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7Ci0JCVR5cGUgY29tcG9u
ZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWFzc2VydFRydWUoIm5v
dCBhbiBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5M
Uy0xJAotCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJDbGFzc1tdW10iLCBzb3Vy
Y2UpOwotCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBlOwotCQljb21wb25l
bnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNzZXJ0VHJ1ZSgibm90
IGFuIGFycmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxT
LTEkCi0JCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzW10iLCBzb3VyY2Up
OwotCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBlOwotCQljb21wb25lbnRU
eXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNzZXJ0VHJ1ZSgiaXMgYW4g
YXJyYXkgdHlwZSIsICFjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEk
Ci0JCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzIiwgc291cmNlKTsKKwkJ
aWYgKHRoaXMuYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgeworCQkJVHlwZSBjb21wb25lbnRU
eXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJCWFzc2VydFRydWUoIm5vdCBh
biBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0x
JAorCQkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXVtdIiwgc291cmNl
KTsKKwkJCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7CisJCQljb21wb25l
bnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJCWFzc2VydFRydWUoIm5v
dCBhbiBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5M
Uy0xJAorCQkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXSIsIHNvdXJj
ZSk7CisJCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBlOworCQkJY29tcG9u
ZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCQlhc3NlcnRUcnVlKCJp
cyBhbiBhcnJheSB0eXBlIiwgIWNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1O
TFMtMSQKKwkJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzIiwgc291cmNl
KTsKKwkJfSBlbHNlIHsKKwkJCVR5cGUgZWxlbWVudFR5cGUgPSBhcnJheVR5cGUuZ2V0RWxlbWVu
dFR5cGUoKTsKKwkJCWNoZWNrU291cmNlUmFuZ2UoZWxlbWVudFR5cGUsICJDbGFzcyIsIHNvdXJj
ZSk7CisJCX0KIAl9CiAKIAkvKioKIAkgKiBodHRwOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3No
b3dfYnVnLmNnaT9pZD00MjgzOQorCSAqIEBkZXByZWNhdGVkIHVzZXMgZGVwcmVjYXRlZCBtZXRo
b2RzCiAJICovCiAJcHVibGljIHZvaWQgdGVzdDA0OTUoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0
aW9uIHsKIAkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0
KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDQ5NSIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0x
JCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JApAQCAtMjc4MSwxMyAr
Mjc5MywxOCBAQAogCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJDbGFzc1tdW10iLCBzb3VyY2Up
OwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNBcnJheVR5cGUoKSk7
IC8vJE5PTi1OTFMtMSQKIAkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7
Ci0JCVR5cGUgY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0J
CWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlwZS5pc0FycmF5VHlw
ZSgpKTsgLy8kTk9OLU5MUy0xJAotCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJD
bGFzc1tdIiwgc291cmNlKTsKLQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgY29tcG9uZW50VHlw
ZTsKLQkJY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWFz
c2VydFRydWUoImlzIGFuIGFycmF5IHR5cGUiLCAhY29tcG9uZW50VHlwZS5pc0FycmF5VHlwZSgp
KTsgLy8kTk9OLU5MUy0xJAotCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJDbGFz
cyIsIHNvdXJjZSk7CisJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsKKwkJ
CVR5cGUgY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCQlh
c3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUo
KSk7IC8vJE5PTi1OTFMtMSQKKwkJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNs
YXNzW10iLCBzb3VyY2UpOworCQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgY29tcG9uZW50VHlw
ZTsKKwkJCWNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQkJ
YXNzZXJ0VHJ1ZSgiaXMgYW4gYXJyYXkgdHlwZSIsICFjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBl
KCkpOyAvLyROT04tTkxTLTEkCisJCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJD
bGFzcyIsIHNvdXJjZSk7CisJCX0gZWxzZSB7CisJCQlUeXBlIGVsZW1lbnRUeXBlID0gYXJyYXlU
eXBlLmdldEVsZW1lbnRUeXBlKCk7CisJCQljaGVja1NvdXJjZVJhbmdlKGVsZW1lbnRUeXBlLCAi
Q2xhc3MiLCBzb3VyY2UpOworCQl9CiAJCUxpc3QgZnJhZ21lbnRzID0gZmllbGREZWNsYXJhdGlv
bi5mcmFnbWVudHMoKTsKIAkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBzaXplIiwgMSwgZnJhZ21lbnRz
LnNpemUoKSk7CiAJCVZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCBmcmFnbWVudCA9IChWYXJp
YWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMCk7CkBAIC0yNzk2LDYgKzI4
MTMsNyBAQAogCiAJLyoqCiAJICogaHR0cDovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1
Zy5jZ2k/aWQ9NDI4MzkKKwkgKiBAZGVwcmVjYXRlZCB1c2VzIGRlcHJlY2F0ZWQgbWV0aG9kcwog
CSAqLwogCXB1YmxpYyB2b2lkIHRlc3QwNDk2KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7
CiAJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29u
dmVydGVyIiAsICJzcmMiLCAidGVzdDA0OTYiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8k
Tk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKQEAgLTI4MTEsMjUgKzI4Mjks
MzEgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiQ2xhc3NbXVtdW11bXSIsIHNvdXJjZSk7
CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgdHlwZS5pc0FycmF5VHlwZSgpKTsg
Ly8kTk9OLU5MUy0xJAogCQlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsK
LQkJVHlwZSBjb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJ
YXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBl
KCkpOyAvLyROT04tTkxTLTEkCi0JCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNs
YXNzW11bXVtdIiwgc291cmNlKTsKLQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgY29tcG9uZW50
VHlwZTsKLQkJY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0J
CWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlwZS5pc0FycmF5VHlw
ZSgpKTsgLy8kTk9OLU5MUy0xJAotCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJD
bGFzc1tdW10iLCBzb3VyY2UpOwotCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRU
eXBlOwotCQljb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJ
YXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBl
KCkpOyAvLyROT04tTkxTLTEkCi0JCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNs
YXNzW10iLCBzb3VyY2UpOwotCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBl
OwotCQljb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNz
ZXJ0VHJ1ZSgiaXMgYW4gYXJyYXkgdHlwZSIsICFjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkp
OyAvLyROT04tTkxTLTEkCi0JCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNz
Iiwgc291cmNlKTsKKwkJaWYgKHRoaXMuYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgeworCQkJ
VHlwZSBjb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJCWFz
c2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlwZS5pc0FycmF5VHlwZSgp
KTsgLy8kTk9OLU5MUy0xJAorCQkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xh
c3NbXVtdW10iLCBzb3VyY2UpOworCQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgY29tcG9uZW50
VHlwZTsKKwkJCWNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwor
CQkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlU
eXBlKCkpOyAvLyROT04tTkxTLTEkCisJCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUs
ICJDbGFzc1tdW10iLCBzb3VyY2UpOworCQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgY29tcG9u
ZW50VHlwZTsKKwkJCWNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgp
OworCQkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJy
YXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5
cGUsICJDbGFzc1tdIiwgc291cmNlKTsKKwkJCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBv
bmVudFR5cGU7CisJCQljb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUo
KTsKKwkJCWFzc2VydFRydWUoImlzIGFuIGFycmF5IHR5cGUiLCAhY29tcG9uZW50VHlwZS5pc0Fy
cmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRU
eXBlLCAiQ2xhc3MiLCBzb3VyY2UpOworCQl9IGVsc2UgeworCQkJVHlwZSBlbGVtZW50VHlwZSA9
IGFycmF5VHlwZS5nZXRFbGVtZW50VHlwZSgpOworCQkJY2hlY2tTb3VyY2VSYW5nZShlbGVtZW50
VHlwZSwgIkNsYXNzIiwgc291cmNlKTsKKwkJfQogCX0KIAogCS8qKgogCSAqIGh0dHA6Ly9idWdz
LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQyODM5CisJICogQGRlcHJlY2F0ZWQg
dXNlcyBkZXByZWNhdGVkIG1ldGhvZHMKIAkgKi8KIAlwdWJsaWMgdm9pZCB0ZXN0MDQ5NygpIHRo
cm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewogCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQg
PSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwNDk3IiwgIkEu
amF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04t
TkxTLTQkCkBAIC0yODQ1LDkgKzI4NjksOSBAQAogCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJD
bGFzc1tdIiwgc291cmNlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCB0eXBl
LmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAo
QXJyYXlUeXBlKSB0eXBlOwotCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29t
cG9uZW50VHlwZSgpOwotCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJheSB0eXBlIiwgIWNvbXBvbmVu
dFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKLQkJY2hlY2tTb3VyY2VSYW5nZShj
b21wb25lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2UpOworCQl0eXBlID0gdGhpcy5hc3QuYXBpTGV2
ZWwoKSA8IEFTVC5KTFM4ID8gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKSA6IGFycmF5VHlw
ZS5nZXRFbGVtZW50VHlwZSgpOworCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJheSB0eXBlIiwgIXR5
cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBl
LCAiQ2xhc3MiLCBzb3VyY2UpOwogCX0KIAogCS8qKgpAQCAtOTUyOCw2ICs5NTUyLDcgQEAKIAog
CS8qKgogCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MTk2
NTE0CisJICogQGRlcHJlY2F0ZWQgdXNlcyBkZXByZWNhdGVkIG1ldGhvZHMKIAkgKi8KIAlwdWJs
aWMgdm9pZCB0ZXN0MDY4MygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewogCQlJQ29tcGls
YXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAi
c3JjIiwgInRlc3QwNjgzIiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMt
MiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCkBAIC05NTQ4LDE0ICs5NTczLDE5IEBACiAJ
CUFycmF5Q3JlYXRpb24gYXJyYXlDcmVhdGlvbiA9IChBcnJheUNyZWF0aW9uKSBub2RlOwogCQlB
cnJheVR5cGUgYXJyYXlUeXBlID0gYXJyYXlDcmVhdGlvbi5nZXRUeXBlKCk7CiAJCWNoZWNrU291
cmNlUmFuZ2UoYXJyYXlUeXBlLCAiU3RyaW5nWzBdW2JbMTBdXVtdIiwgc291cmNlVW5pdC5nZXRT
b3VyY2UoKSk7Ci0JCW5vZGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlhc3Nl
cnRFcXVhbHMoIk5vdCBhbiBhcnJheSB0eXBlIiwgQVNUTm9kZS5BUlJBWV9UWVBFLCBub2RlLmdl
dE5vZGVUeXBlKCkpOwotCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKW5vZGU7Ci0JCWNoZWNrU291
cmNlUmFuZ2UoYXJyYXlUeXBlLCAiU3RyaW5nWzBdW2JbMTBdXSIsIHNvdXJjZVVuaXQuZ2V0U291
cmNlKCkpOwotCQlub2RlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNzZXJ0
RXF1YWxzKCJOb3QgYW4gYXJyYXkgdHlwZSIsIEFTVE5vZGUuQVJSQVlfVFlQRSwgbm9kZS5nZXRO
b2RlVHlwZSgpKTsKLQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSlub2RlOwotCQljaGVja1NvdXJj
ZVJhbmdlKGFycmF5VHlwZSwgIlN0cmluZ1swXSIsIHNvdXJjZVVuaXQuZ2V0U291cmNlKCkpOwor
CQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQlub2RlID0gYXJyYXlU
eXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGFuIGFycmF5IHR5
cGUiLCBBU1ROb2RlLkFSUkFZX1RZUEUsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlhcnJheVR5
cGUgPSAoQXJyYXlUeXBlKW5vZGU7CisJCQljaGVja1NvdXJjZVJhbmdlKGFycmF5VHlwZSwgIlN0
cmluZ1swXVtiWzEwXV0iLCBzb3VyY2VVbml0LmdldFNvdXJjZSgpKTsKKwkJCW5vZGUgPSBhcnJh
eVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gYXJyYXkg
dHlwZSIsIEFTVE5vZGUuQVJSQVlfVFlQRSwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJCWFycmF5
VHlwZSA9IChBcnJheVR5cGUpbm9kZTsKKwkJCWNoZWNrU291cmNlUmFuZ2UoYXJyYXlUeXBlLCAi
U3RyaW5nWzBdIiwgc291cmNlVW5pdC5nZXRTb3VyY2UoKSk7CisJCX0gZWxzZSB7CisJCQlub2Rl
ID0gYXJyYXlUeXBlLmdldEVsZW1lbnRUeXBlKCk7CisJCQljaGVja1NvdXJjZVJhbmdlKG5vZGUs
ICJTdHJpbmciLCBzb3VyY2VVbml0LmdldFNvdXJjZSgpKTsKKwkJfQogCX0KIAogCS8qKgpkaWZm
IC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RTdHJ1Y3R1cmFsUHJvcGVydHlUZXN0LmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvZG9tL0FTVFN0cnVjdHVyYWxQcm9wZXJ0eVRlc3QuamF2YQppbmRleCAyYmY0Yjg3Li5iMzky
ODExIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFN0cnVjdHVyYWxQcm9wZXJ0eVRlc3QuamF2
YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvZG9tL0FTVFN0cnVjdHVyYWxQcm9wZXJ0eVRlc3QuamF2YQpAQCAtMTcy
LDcgKzE3Miw3IEBACiAJCQkJYnJlYWs7CiAJCQljYXNlIEFTVC5KTFM4IDoKIAkJCQlhc3NlcnRF
cXVhbHMoIldyb25nIG51bWJlciBvZiB2aXNpdGVkIG5vZGUgY2xhc3NlcyIsIDg0LCBub2RlQ2xh
c3Nlcy5zaXplKCkpOwotCQkJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHZpc2l0ZWQg
cHJvcGVydGllcyIsIDEwNSwgdmlzaXRlZFByb3BlcnRpZXMuc2l6ZSgpKTsKKwkJCQlhc3NlcnRF
cXVhbHMoIldyb25nIG51bWJlciBvZiB2aXNpdGVkIHByb3BlcnRpZXMiLCAxMDYsIHZpc2l0ZWRQ
cm9wZXJ0aWVzLnNpemUoKSk7CiAJCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2Ygc2lt
cGxlIHByb3BlcnRpZXMiLCAyMSwgc2ltcGxlUHJvcGVydGllcy5zaXplKCkpOwogCQkJCWFzc2Vy
dEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIGNoaWxkIHByb3BlcnRpZXMiLCAxMTgsIGNoaWxkUHJv
cGVydGllcy5zaXplKCkpOwogCQkJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIGNoaWxk
IGxpc3QgcHJvcGVydGllcyIsIDY2LCBjaGlsZExpc3RQcm9wZXJ0aWVzLnNpemUoKSk7CmRpZmYg
LS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvdGVzdHMvZG9tL0FTVFRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUVGVzdC5qYXZh
CmluZGV4IDZlYjMwYTkuLmNjZmIzN2MgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUVGVzdC5q
YXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUVGVzdC5qYXZhCkBAIC0yMDU3LDYgKzIwNTcsNyBAQAog
CQlhc3NlcnRUcnVlKFByaW1pdGl2ZVR5cGUudG9Db2RlKCJub3QtYS10eXBlIikgPT0gbnVsbCk7
IC8vJE5PTi1OTFMtMSQKIAl9CiAKKwkvKiogQGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVjYXRlZCBj
b2RlICovCiAJcHVibGljIHZvaWQgdGVzdEFycmF5VHlwZSgpIHsKIAkJU2ltcGxlTmFtZSB4MSA9
IHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoIlN0cmluZyIpOyAvLyROT04tTkxTLTEkCiAJCVNpbXBs
ZVR5cGUgeDIgPSB0aGlzLmFzdC5uZXdTaW1wbGVUeXBlKHgxKTsKQEAgLTIwNjYsNyArMjA2Nywx
MSBAQAogCQlwcmV2aW91c0NvdW50ID0gdGhpcy5hc3QubW9kaWZpY2F0aW9uQ291bnQoKTsKIAkJ
YXNzZXJ0VHJ1ZSh4LmdldEFTVCgpID09IHRoaXMuYXN0KTsKIAkJYXNzZXJ0VHJ1ZSh4LmdldFBh
cmVudCgpID09IG51bGwpOwotCQlhc3NlcnRUcnVlKHguZ2V0Q29tcG9uZW50VHlwZSgpLmdldFBh
cmVudCgpID09IHgpOworCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJ
CQlhc3NlcnRUcnVlKHguZ2V0Q29tcG9uZW50VHlwZSgpLmdldFBhcmVudCgpID09IHgpOworCQl9
IGVsc2UgeworCQkJYXNzZXJ0VHJ1ZSh4LmdldEVsZW1lbnRUeXBlKCkuZ2V0UGFyZW50KCkgPT0g
eCk7CisJCX0KIAkJLy8gbWFrZSBzdXJlIHRoYXQgcmVhZGluZyBkaWQgbm90IGNoYW5nZSBtb2Rp
ZmljYXRpb24gY291bnQKIAkJYXNzZXJ0VHJ1ZSh0aGlzLmFzdC5tb2RpZmljYXRpb25Db3VudCgp
ID09IHByZXZpb3VzQ291bnQpOwogCQlhc3NlcnRUcnVlKCF4LmlzU2ltcGxlVHlwZSgpKTsKQEAg
LTIwODEsMzkgKzIwODYsNjkgQEAKIAkJYXNzZXJ0VHJ1ZSh4LmdldERpbWVuc2lvbnMoKSA9PSAx
KTsKIAkJYXNzZXJ0VHJ1ZSh4LmdldEVsZW1lbnRUeXBlKCkgPT0geDIpOwogCi0JCWdlbmVyaWNQ
cm9wZXJ0eVRlc3QoeCwgbmV3IFByb3BlcnR5KCJDb21wb25lbnRUeXBlIiwgdHJ1ZSwgVHlwZS5j
bGFzcykgeyAvLyROT04tTkxTLTEkCi0JCQlwdWJsaWMgQVNUTm9kZSBzYW1wbGUoQVNUIHRhcmdl
dEFzdCwgYm9vbGVhbiBwYXJlbnRlZCkgewotCQkJCVNpbXBsZVR5cGUgcmVzdWx0ID0gdGFyZ2V0
QXN0Lm5ld1NpbXBsZVR5cGUoCi0JCQkJCXRhcmdldEFzdC5uZXdTaW1wbGVOYW1lKCJhIikpOyAv
LyROT04tTkxTLTEkCi0JCQkJaWYgKHBhcmVudGVkKSB7Ci0JCQkJCXRhcmdldEFzdC5uZXdBcnJh
eVR5cGUocmVzdWx0KTsKKwkJaWYgKHRoaXMuYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgewor
CQkJZ2VuZXJpY1Byb3BlcnR5VGVzdCh4LCBuZXcgUHJvcGVydHkoIkNvbXBvbmVudFR5cGUiLCB0
cnVlLCBUeXBlLmNsYXNzKSB7IC8vJE5PTi1OTFMtMSQKKwkJCQlwdWJsaWMgQVNUTm9kZSBzYW1w
bGUoQVNUIHRhcmdldEFzdCwgYm9vbGVhbiBwYXJlbnRlZCkgeworCQkJCQlTaW1wbGVUeXBlIHJl
c3VsdCA9IHRhcmdldEFzdC5uZXdTaW1wbGVUeXBlKAorCQkJCQkJdGFyZ2V0QXN0Lm5ld1NpbXBs
ZU5hbWUoImEiKSk7IC8vJE5PTi1OTFMtMSQKKwkJCQkJaWYgKHBhcmVudGVkKSB7CisJCQkJCQl0
YXJnZXRBc3QubmV3QXJyYXlUeXBlKHJlc3VsdCk7CisJCQkJCX0KKwkJCQkJcmV0dXJuIHJlc3Vs
dDsKIAkJCQl9Ci0JCQkJcmV0dXJuIHJlc3VsdDsKLQkJCX0KLQkJCXB1YmxpYyBBU1ROb2RlIHdy
YXAoKSB7Ci0JCQkJQXJyYXlUeXBlIHJlc3VsdCA9IEFTVFRlc3QudGhpcy5hc3QubmV3QXJyYXlU
eXBlKHgpOwotCQkJCXJldHVybiByZXN1bHQ7Ci0JCQl9Ci0JCQlwdWJsaWMgdm9pZCB1bndyYXAo
KSB7Ci0JCQkJQXJyYXlUeXBlIGEgPSAoQXJyYXlUeXBlKSB4LmdldFBhcmVudCgpOwotCQkJCWEu
c2V0Q29tcG9uZW50VHlwZShBU1RUZXN0LnRoaXMuYXN0Lm5ld1ByaW1pdGl2ZVR5cGUoUHJpbWl0
aXZlVHlwZS5JTlQpKTsKLQkJCX0KLQkJCXB1YmxpYyBBU1ROb2RlIGdldCgpIHsKLQkJCQlyZXR1
cm4geC5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCQl9Ci0JCQlwdWJsaWMgdm9pZCBzZXQoQVNUTm9k
ZSB2YWx1ZSkgewotCQkJCXguc2V0Q29tcG9uZW50VHlwZSgoVHlwZSkgdmFsdWUpOwotCQkJfQot
CQl9KTsKKwkJCQlwdWJsaWMgQVNUTm9kZSB3cmFwKCkgeworCQkJCQlBcnJheVR5cGUgcmVzdWx0
ID0gQVNUVGVzdC50aGlzLmFzdC5uZXdBcnJheVR5cGUoeCk7CisJCQkJCXJldHVybiByZXN1bHQ7
CisJCQkJfQorCQkJCXB1YmxpYyB2b2lkIHVud3JhcCgpIHsKKwkJCQkJQXJyYXlUeXBlIGEgPSAo
QXJyYXlUeXBlKSB4LmdldFBhcmVudCgpOworCQkJCQlhLnNldENvbXBvbmVudFR5cGUoQVNUVGVz
dC50aGlzLmFzdC5uZXdQcmltaXRpdmVUeXBlKFByaW1pdGl2ZVR5cGUuSU5UKSk7CisJCQkJfQor
CQkJCXB1YmxpYyBBU1ROb2RlIGdldCgpIHsKKwkJCQkJcmV0dXJuIHguZ2V0Q29tcG9uZW50VHlw
ZSgpOworCQkJCX0KKwkJCQlwdWJsaWMgdm9pZCBzZXQoQVNUTm9kZSB2YWx1ZSkgeworCQkJCQl4
LnNldENvbXBvbmVudFR5cGUoKFR5cGUpIHZhbHVlKTsKKwkJCQl9CisJCQl9KTsKIAotCQl4LnNl
dENvbXBvbmVudFR5cGUoCi0JCQl0aGlzLmFzdC5uZXdBcnJheVR5cGUodGhpcy5hc3QubmV3UHJp
bWl0aXZlVHlwZShQcmltaXRpdmVUeXBlLklOVCksIDQpKTsKKwkJCXguc2V0Q29tcG9uZW50VHlw
ZSgKKwkJCQl0aGlzLmFzdC5uZXdBcnJheVR5cGUodGhpcy5hc3QubmV3UHJpbWl0aXZlVHlwZShQ
cmltaXRpdmVUeXBlLklOVCksIDQpKTsKKwkJCWFzc2VydFRydWUoeC5nZXREaW1lbnNpb25zKCkg
PT0gNSk7CisJCQlhc3NlcnRUcnVlKHguZ2V0RWxlbWVudFR5cGUoKS5pc1ByaW1pdGl2ZVR5cGUo
KSk7CisJCQlmaW5hbCBBcnJheVR5cGUgeDMgPSB0aGlzLmFzdC5uZXdBcnJheVR5cGUoeCwgMik7
CisJCQlhc3NlcnRUcnVlKHgzLmdldERpbWVuc2lvbnMoKSA9PSA3KTsKKwkJfSBlbHNlIHsKKwkJ
CWdlbmVyaWNQcm9wZXJ0eVRlc3QoeCwgbmV3IFByb3BlcnR5KCJFbGVtZW50VHlwZSIsIHRydWUs
IFR5cGUuY2xhc3MpIHsgLy8kTk9OLU5MUy0xJAorCQkJCXB1YmxpYyBBU1ROb2RlIHNhbXBsZShB
U1QgdGFyZ2V0QXN0LCBib29sZWFuIHBhcmVudGVkKSB7CisJCQkJCVNpbXBsZVR5cGUgcmVzdWx0
ID0gdGFyZ2V0QXN0Lm5ld1NpbXBsZVR5cGUoCisJCQkJCQl0YXJnZXRBc3QubmV3U2ltcGxlTmFt
ZSgiYSIpKTsgLy8kTk9OLU5MUy0xJAorCQkJCQlpZiAocGFyZW50ZWQpIHsKKwkJCQkJCXRhcmdl
dEFzdC5uZXdBcnJheVR5cGUocmVzdWx0KTsKKwkJCQkJfQorCQkJCQlyZXR1cm4gcmVzdWx0Owor
CQkJCX0KKwkJCQlwdWJsaWMgQVNUTm9kZSB3cmFwKCkgeworCQkJCQlBcnJheVR5cGUgcmVzdWx0
ID0gQVNUVGVzdC50aGlzLmFzdC5uZXdBcnJheVR5cGUoeCwgNSk7CisJCQkJCXJldHVybiByZXN1
bHQ7CisJCQkJfQorCQkJCXB1YmxpYyB2b2lkIHVud3JhcCgpIHsKKwkJCQkJQXJyYXlUeXBlIGEg
PSAoQXJyYXlUeXBlKSB4LmdldFBhcmVudCgpOworCQkJCQlhLnNldEVsZW1lbnRUeXBlKEFTVFRl
c3QudGhpcy5hc3QubmV3UHJpbWl0aXZlVHlwZShQcmltaXRpdmVUeXBlLklOVCkpOworCQkJCX0K
KwkJCQlwdWJsaWMgQVNUTm9kZSBnZXQoKSB7CisJCQkJCXJldHVybiB4LmdldEVsZW1lbnRUeXBl
KCk7CisJCQkJfQorCQkJCXB1YmxpYyB2b2lkIHNldChBU1ROb2RlIHZhbHVlKSB7CisJCQkJCXgu
c2V0RWxlbWVudFR5cGUoKFR5cGUpIHZhbHVlKTsKKwkJCQl9CisJCQl9KTsKIAotCQlhc3NlcnRU
cnVlKHguZ2V0RGltZW5zaW9ucygpID09IDUpOwotCQlhc3NlcnRUcnVlKHguZ2V0RWxlbWVudFR5
cGUoKS5pc1ByaW1pdGl2ZVR5cGUoKSk7Ci0JCWZpbmFsIEFycmF5VHlwZSB4MyA9IHRoaXMuYXN0
Lm5ld0FycmF5VHlwZSh4LCAyKTsKLQkJYXNzZXJ0VHJ1ZSh4My5nZXREaW1lbnNpb25zKCkgPT0g
Nyk7Ci0JCQorCQkJeC5zZXRFbGVtZW50VHlwZSh0aGlzLmFzdC5uZXdQcmltaXRpdmVUeXBlKFBy
aW1pdGl2ZVR5cGUuSU5UKSk7CisJCQlhc3NlcnRUcnVlKHguZ2V0RGltZW5zaW9ucygpID09IDEp
OworCQkJYXNzZXJ0VHJ1ZSh4LmdldEVsZW1lbnRUeXBlKCkuaXNQcmltaXRpdmVUeXBlKCkpOwor
CQl9CisKIAkJdHJ5IHsKIAkJCXRoaXMuYXN0Lm5ld0FycmF5VHlwZShudWxsLCAyKTsKIAkJfSBj
YXRjaChJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24gZSkgewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Rv
bS9BU1RWaXNpdG9yVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwv
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RWaXNpdG9yVGVzdC5qYXZhCmlu
ZGV4IGE5NGNiMjQuLjA3NmQ0NmEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUVmlzaXRvclRl
c3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFZpc2l0b3JUZXN0LmphdmEKQEAgLTExNTcsNyAr
MTE1Nyw4IEBACiAJCXRoaXMuYi5zZXRMZW5ndGgoMCk7CiAJCXgxLmFjY2VwdCh2MSk7CiAJCVN0
cmluZyByZXN1bHQgPSB0aGlzLmIudG9TdHJpbmcoKTsKLQkJYXNzZXJ0VHJ1ZSgiWyh0QVsodFBj
aGFyY2hhcnRQKV10QSldIi5lcXVhbHMocmVzdWx0KSk7IC8vJE5PTi1OTFMtMSQKKwkJU3RyaW5n
IGV4cGVjdGVkID0gdGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4ID8gIlsodEFbKHRQY2hh
cmNoYXJ0UClddEEpXSIgOiAiWyh0QVsodFBjaGFyY2hhcnRQKV1bKEBFREBFRClddEEpXSI7CisJ
CWFzc2VydFRydWUoZXhwZWN0ZWQuZXF1YWxzKHJlc3VsdCkpOyAvLyROT04tTkxTLTEkCiAJfQog
CiAJLyoqIEBkZXByZWNhdGVkIHVzaW5nIGRlcHJlY2F0ZWQgY29kZSAqLwpAQCAtMTI1NCw3ICsx
MjU1LDggQEAKIAkJdGhpcy5iLnNldExlbmd0aCgwKTsKIAkJeDEuYWNjZXB0KHYxKTsKIAkJU3Ry
aW5nIHJlc3VsdCA9IHRoaXMuYi50b1N0cmluZygpOwotCQlhc3NlcnRUcnVlKHJlc3VsdC5lcXVh
bHMoIlsoZUFDIisiWyh0QSIrdGhpcy5UMVMrInRBKV0iK3RoaXMuRTFTK3RoaXMuRTJTKyJbKGVB
SWVBSSldZUFDKV0iKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMk
IC8vJE5PTi1OTFMtNCQKKwkJU3RyaW5nIGRpbSA9IHRoaXMuYXN0LmFwaUxldmVsKCkgPCBBU1Qu
SkxTOCA/ICIiIDogIlsoQEVEQEVEKV0iOworCQlhc3NlcnRUcnVlKHJlc3VsdC5lcXVhbHMoIlso
ZUFDIisiWyh0QSIrdGhpcy5UMVMrIGRpbSArInRBKV0iK3RoaXMuRTFTK3RoaXMuRTJTKyJbKGVB
SWVBSSldZUFDKV0iKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMk
IC8vJE5PTi1OTFMtNCQKIAl9CiAJcHVibGljIHZvaWQgdGVzdEFycmF5SW5pdGlhbGl6ZXIoKSB7
CiAJCUFycmF5SW5pdGlhbGl6ZXIgeDEgPSB0aGlzLmFzdC5uZXdBcnJheUluaXRpYWxpemVyKCk7
CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL1R5cGVBbm5vdGF0aW9uc0NvbnZlcnRlclRlc3QuamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9kb20vVHlwZUFubm90YXRpb25zQ29udmVydGVyVGVzdC5qYXZhCmluZGV4IDFj
YTBjYjMuLmM3ZWZlYjAgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1v
ZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vVHlwZUFubm90YXRpb25zQ29u
dmVydGVyVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3Ny
Yy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vVHlwZUFubm90YXRpb25zQ29udmVydGVy
VGVzdC5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENv
cHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENv
cHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFs
bCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRl
cmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlw
c2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmli
dXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTE2Miw3ICsxNjIsNyBAQAogCQkJCSJjbGFz
cyBaPFE+IHtcbiIgKyAKIAkJCQkiICAgIH1cbiIgKyAKIAkJCQkiICB9XG4iICsgCi0JCQkJIiAg
T2JqZWN0IG89KEBNYXJrZXIgWDxATWFya2VyIFN0cmluZz4uQE1hcmtlciBZPEBNYXJrZXIgSW50
ZWdlcj4uQE1hcmtlciBaPEBNYXJrZXIgT2JqZWN0PkBNYXJrZXIgW11bXUBNYXJrZXIgW11bXSlu
dWxsO1xuIiArIAorCQkJCSIgIE9iamVjdCBvPShATWFya2VyIFg8QE1hcmtlciBTdHJpbmc+LkBN
YXJrZXIgWTxATWFya2VyIEludGVnZXI+LkBNYXJrZXIgWjxATWFya2VyIE9iamVjdD4gQE1hcmtl
ciBbXSBbXSBATWFya2VyIFtdIFtdKW51bGw7XG4iICsgCiAJCQkJIiAgQGphdmEubGFuZy5hbm5v
dGF0aW9uLlRhcmdldChqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZS5UWVBFX1VTRSkg
QGludGVyZmFjZSBNYXJrZXIge31cbiIgKyAKIAkJCQkifVxuIjsKIAkJYXNzZXJ0QVNUTm9kZUVx
dWFscyhleHBlY3RlZE91dHB1dCwgbm9kZSk7CkBAIC0xOTEsNyArMTkxLDcgQEAKIAkJCQkiY2xh
c3MgWjxRPiB7XG4iICsgCiAJCQkJIiAgICB9XG4iICsgCiAJCQkJIiAgfVxuIiArIAotCQkJCSIg
IE9iamVjdCBvPShATWFya2VyIFg8QE1hcmtlciBTdHJpbmc+LkBNYXJrZXIgWTxATWFya2VyIElu
dGVnZXI+LkBNYXJrZXIgWjxATWFya2VyIE9iamVjdD5bXUBNYXJrZXIgW11bXUBNYXJrZXIgW10p
bnVsbDtcbiIgKyAKKwkJCQkiICBPYmplY3Qgbz0oQE1hcmtlciBYPEBNYXJrZXIgU3RyaW5nPi5A
TWFya2VyIFk8QE1hcmtlciBJbnRlZ2VyPi5ATWFya2VyIFo8QE1hcmtlciBPYmplY3Q+IFtdIEBN
YXJrZXIgW10gW10gQE1hcmtlciBbXSludWxsO1xuIiArIAogCQkJCSIgIEBqYXZhLmxhbmcuYW5u
b3RhdGlvbi5UYXJnZXQoamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGUuVFlQRV9VU0Up
IEBpbnRlcmZhY2UgTWFya2VyIHt9XG4iICsgCiAJCQkJIn1cbiI7CiAJCWFzc2VydEFTVE5vZGVF
cXVhbHMoZXhwZWN0ZWRPdXRwdXQsIG5vZGUpOwpAQCAtMjIwLDcgKzIyMCw3IEBACiAJCQkJImNs
YXNzIFo8UT4ge1xuIiArIAogCQkJCSIgICAgfVxuIiArIAogCQkJCSIgIH1cbiIgKyAKLQkJCQki
ICBpbnRbXVtdW11bXSBvPShAT25lIGludFtdQFR3byBbXVtdQFRocmVlIFtdKW51bGw7XG4iICsg
CisJCQkJIiAgaW50IFtdIFtdIFtdIFtdIG89KEBPbmUgaW50IFtdIEBUd28gW10gW10gQFRocmVl
IFtdKW51bGw7XG4iICsgCiAJCQkJIiAgQGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldChqYXZh
LmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZS5UWVBFX1VTRSkgQGludGVyZmFjZSBNYXJrZXIg
e31cbiIgKyAKIAkJCQkifVxuIjsKIAkJYXNzZXJ0QVNUTm9kZUVxdWFscyhleHBlY3RlZE91dHB1
dCwgbm9kZSk7CkBAIC0yNDksNyArMjQ5LDcgQEAKIAkJCQkiY2xhc3MgWjxRPiB7XG4iICsgCiAJ
CQkJIiAgICB9XG4iICsgCiAJCQkJIiAgfVxuIiArIAotCQkJCSIgIFN0cmluZ1tdW11bXVtdIG89
KEBPbmUgU3RyaW5nW11AVHdvIFtdW11AVGhyZWUgW10pbnVsbDtcbiIgKyAKKwkJCQkiICBTdHJp
bmcgW10gW10gW10gW10gbz0oQE9uZSBTdHJpbmcgW10gQFR3byBbXSBbXSBAVGhyZWUgW10pbnVs
bDtcbiIgKyAKIAkJCQkiICBAamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0KGphdmEubGFuZy5h
bm5vdGF0aW9uLkVsZW1lbnRUeXBlLlRZUEVfVVNFKSBAaW50ZXJmYWNlIE1hcmtlciB7fVxuIiAr
IAogCQkJCSJ9XG4iOwogCQlhc3NlcnRBU1ROb2RlRXF1YWxzKGV4cGVjdGVkT3V0cHV0LCBub2Rl
KTsKQEAgLTI3OCw3ICsyNzgsNyBAQAogCQkJCSJjbGFzcyBaPFE+IHtcbiIgKyAKIAkJCQkiICAg
IH1cbiIgKyAKIAkJCQkiICB9XG4iICsgCi0JCQkJIiAgT2JqZWN0IG89KEBPbmUgWDxTdHJpbmc+
W11AVHdvIFtdW11AVGhyZWUgW10pbnVsbDtcbiIgKyAKKwkJCQkiICBPYmplY3Qgbz0oQE9uZSBY
PFN0cmluZz4gW10gQFR3byBbXSBbXSBAVGhyZWUgW10pbnVsbDtcbiIgKyAKIAkJCQkiICBAamF2
YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0KGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBl
LlRZUEVfVVNFKSBAaW50ZXJmYWNlIE1hcmtlciB7fVxuIiArIAogCQkJCSJ9XG4iOwogCQlhc3Nl
cnRBU1ROb2RlRXF1YWxzKGV4cGVjdGVkT3V0cHV0LCBub2RlKTsKZGlmZiAtLWdpdCBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nRXhwcmVzc2lvbnNUZXN0LmphdmEgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ0V4cHJlc3Npb25zVGVzdC5qYXZh
CmluZGV4IDBhZmY0ZjguLjllOGVkZWQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2Ny
aWJpbmcvQVNUUmV3cml0aW5nRXhwcmVzc2lvbnNUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3Jp
dGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdFeHByZXNzaW9uc1Rlc3QuamF2YQpAQCAtMjYzLDIz
ICsyNjMsMjUgQEAKIAkJCW1lbWJlclZhbHVlUGFpci5zZXROYW1lKGFzdC5uZXdTaW1wbGVOYW1l
KCJ2IikpOwogCQkJbWVtYmVyVmFsdWVQYWlyLnNldFZhbHVlKGFzdC5uZXdOdW1iZXJMaXRlcmFs
KCI5OSIpKTsKIAkJCWFubm90YXRpb25DLnZhbHVlcygpLmFkZChtZW1iZXJWYWx1ZVBhaXIpOwot
CQkJYXJyYXlUeXBlLmFubm90YXRpb25zKCkuYWRkKGFubm90YXRpb25DKTsKKwkJCUV4dHJhRGlt
ZW5zaW9uIGRpbTAgPSBhcnJheVR5cGUuZ2V0RGltZW5zaW9uTm8oMCk7CisJCQlkaW0wLmFubm90
YXRpb25zKCkuYWRkKGFubm90YXRpb25DKTsKIAkJCQotCQkJYXJyYXlUeXBlPSBhc3QubmV3QXJy
YXlUeXBlKGFycmF5VHlwZSk7CiAJCQlTaW5nbGVNZW1iZXJBbm5vdGF0aW9uIGFubm90YXRpb25C
PSBhc3QubmV3U2luZ2xlTWVtYmVyQW5ub3RhdGlvbigpOwogCQkJYW5ub3RhdGlvbkIuc2V0VHlw
ZU5hbWUoYXN0Lm5ld1NpbXBsZU5hbWUoIkIiKSk7CiAJCQlhbm5vdGF0aW9uQi5zZXRWYWx1ZShh
c3QubmV3TnVtYmVyTGl0ZXJhbCgiMCIpKTsKLQkJCWFycmF5VHlwZS5hbm5vdGF0aW9ucygpLmFk
ZChhbm5vdGF0aW9uQik7CisJCQlFeHRyYURpbWVuc2lvbiBkaW0xID0gYXN0Lm5ld0V4dHJhRGlt
ZW5zaW9uKCk7CisJCQlkaW0xLmFubm90YXRpb25zKCkuYWRkKGFubm90YXRpb25CKTsKKwkJCWFy
cmF5VHlwZS5kaW1lbnNpb25zKCkuYWRkKDAsIGRpbTEpOwogCQkJCi0JCQlhcnJheVR5cGU9IGFz
dC5uZXdBcnJheVR5cGUoYXJyYXlUeXBlKTsKIAkJCU1hcmtlckFubm90YXRpb24gYW5ub3RhdGlv
bkE9IGFzdC5uZXdNYXJrZXJBbm5vdGF0aW9uKCk7CiAJCQlhbm5vdGF0aW9uQS5zZXRUeXBlTmFt
ZShhc3QubmV3U2ltcGxlTmFtZSgiQSIpKTsKLQkJCWFycmF5VHlwZS5hbm5vdGF0aW9ucygpLmFk
ZChhbm5vdGF0aW9uQSk7Ci0JCQkKLQkJCWFycmF5Q3JlYXRpb24uc2V0VHlwZShhcnJheVR5cGUp
OworCQkJRXh0cmFEaW1lbnNpb24gZGltMiA9IGFzdC5uZXdFeHRyYURpbWVuc2lvbigpOworCQkJ
ZGltMi5hbm5vdGF0aW9ucygpLmFkZChhbm5vdGF0aW9uQSk7CisJCQlhcnJheVR5cGUuZGltZW5z
aW9ucygpLmFkZCgwLCBkaW0yKTsKIAkJCQogCQkJYXJyYXlDcmVhdGlvbi5kaW1lbnNpb25zKCku
YWRkKGFzdC5uZXdOdW1iZXJMaXRlcmFsKCIxIikpOwogCQkJYXJyYXlDcmVhdGlvbi5kaW1lbnNp
b25zKCkuYWRkKGFzdC5uZXdOdW1iZXJMaXRlcmFsKCIyIikpOworCQkJYXJyYXlDcmVhdGlvbi5z
ZXRUeXBlKGFycmF5VHlwZSk7CiAJCQkKIAkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUoaW52b2Nh
dGlvbiwgTWV0aG9kSW52b2NhdGlvbi5BUkdVTUVOVFNfUFJPUEVSVFkpLmluc2VydExhc3QoYXJy
YXlDcmVhdGlvbiwgbnVsbCk7CiAJCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2Ny
aWJpbmcvQVNUUmV3cml0aW5nTWV0aG9kRGVjbFRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rl
c2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0aG9kRGVjbFRlc3QuamF2YQppbmRleCA3YTIxMjI1Li41
ZGEwMjYyIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGlu
Z01ldGhvZERlY2xUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9k
ZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RS
ZXdyaXRpbmdNZXRob2REZWNsVGVzdC5qYXZhCkBAIC0xMTEsNyArMTExLDcgQEAKIAkJCQlsaXN0
UmV3cml0ZS5yZW1vdmUoZXh0cmFEaW1lbnNpb24sIG51bGwpOwogCQkJfQogCQkJZm9yIChpbnQg
aT0gMDsgaSA8IGV4dHJhRGltZW5zaW9uczsgaSsrKSB7Ci0JCQkJbGlzdFJld3JpdGUuaW5zZXJ0
TGFzdChtZXRob2REZWNsLmdldEFTVCgpLm5ld0V4dHJhRGltZW5zaW9uKCksIG51bGwpOworCQkJ
CWxpc3RSZXdyaXRlLmluc2VydEZpcnN0KG1ldGhvZERlY2wuZ2V0QVNUKCkubmV3RXh0cmFEaW1l
bnNpb24oKSwgbnVsbCk7CiAJCQl9CiAJCX0KIAl9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0
ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ1N0YXRlbWVudHNUZXN0LmphdmEgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3
cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ1N0YXRlbWVudHNUZXN0LmphdmEKaW5kZXggMDgy
ZmE1Ny4uM2EyMjQ0NyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9k
ZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RS
ZXdyaXRpbmdTdGF0ZW1lbnRzVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJp
bmcvQVNUUmV3cml0aW5nU3RhdGVtZW50c1Rlc3QuamF2YQpAQCAtNTk0MiwyNCArNTk0MiwyNSBA
QAogCQkJTGlzdFJld3JpdGUgbGlzdFJld3JpdGU9IHJld3JpdGUuZ2V0TGlzdFJld3JpdGUoZnJh
Z21lbnQsIFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5FWFRSQV9ESU1FTlNJT05TMl9QUk9Q
RVJUWSk7CiAJCQlFeHRyYURpbWVuc2lvbiBkaW09IGFzdC5uZXdFeHRyYURpbWVuc2lvbigpOwog
CQkJTWFya2VyQW5ub3RhdGlvbiBtYXJrZXJBbm5vdGF0aW9uOwotCQkJbGlzdFJld3JpdGUuaW5z
ZXJ0QXQoZGltLCAwLCBudWxsKTsKKwkJCWxpc3RSZXdyaXRlLmluc2VydEZpcnN0KGRpbSwgbnVs
bCk7CiAKIAkJCUFycmF5VHlwZSBjcmVhdGlvblR5cGUgPSBjcmVhdGlvbi5nZXRUeXBlKCk7Ci0J
CQlBcnJheVR5cGUgbmV3QXJyYXlUeXBlID0gYXN0Lm5ld0FycmF5VHlwZSgoQXJyYXlUeXBlKSBB
U1ROb2RlLmNvcHlTdWJ0cmVlKGFzdCwgY3JlYXRpb25UeXBlKSk7Ci0JCQluZXdBcnJheVR5cGUg
PSBhc3QubmV3QXJyYXlUeXBlKG5ld0FycmF5VHlwZSk7Ci0JCQlyZXdyaXRlLnNldChjcmVhdGlv
biwgQXJyYXlDcmVhdGlvbi5UWVBFX1BST1BFUlRZLCBuZXdBcnJheVR5cGUsIG51bGwpOwotCi0J
CQlsaXN0UmV3cml0ZT0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShuZXdBcnJheVR5cGUsIEFycmF5
VHlwZS5BTk5PVEFUSU9OU19QUk9QRVJUWSk7CisJCQlBcnJheVR5cGUgbmV3QXJyYXlUeXBlID0g
KEFycmF5VHlwZSkgQVNUTm9kZS5jb3B5U3VidHJlZShhc3QsIGNyZWF0aW9uVHlwZSk7CisJCQlu
ZXdBcnJheVR5cGUuZGltZW5zaW9ucygpLmFkZChhc3QubmV3RXh0cmFEaW1lbnNpb24oKSk7CisJ
CQkKKwkJCUV4dHJhRGltZW5zaW9uIGRpbTAgPSBhc3QubmV3RXh0cmFEaW1lbnNpb24oKTsKIAkJ
CW1hcmtlckFubm90YXRpb249IGFzdC5uZXdNYXJrZXJBbm5vdGF0aW9uKCk7CiAJCQltYXJrZXJB
bm5vdGF0aW9uLnNldFR5cGVOYW1lKGFzdC5uZXdTaW1wbGVOYW1lKCJBbm5vdDMiKSk7Ci0JCQls
aXN0UmV3cml0ZS5pbnNlcnRBdChtYXJrZXJBbm5vdGF0aW9uLCAwLCBudWxsKTsKLQkJCW5ld0Fy
cmF5VHlwZS5hbm5vdGF0aW9ucygpLmFkZChtYXJrZXJBbm5vdGF0aW9uKTsKKwkJCWRpbTAuYW5u
b3RhdGlvbnMoKS5hZGQobWFya2VyQW5ub3RhdGlvbik7CiAJCQltYXJrZXJBbm5vdGF0aW9uPSBh
c3QubmV3TWFya2VyQW5ub3RhdGlvbigpOwogCQkJbWFya2VyQW5ub3RhdGlvbi5zZXRUeXBlTmFt
ZShhc3QubmV3U2ltcGxlTmFtZSgiQW5ub3QyIikpOwotCQkJbGlzdFJld3JpdGUuaW5zZXJ0QXQo
bWFya2VyQW5ub3RhdGlvbiwgMSwgbnVsbCk7CisJCQlkaW0wLmFubm90YXRpb25zKCkuYWRkKG1h
cmtlckFubm90YXRpb24pOwogCQkJbWFya2VyQW5ub3RhdGlvbj0gYXN0Lm5ld01hcmtlckFubm90
YXRpb24oKTsKIAkJCW1hcmtlckFubm90YXRpb24uc2V0VHlwZU5hbWUoYXN0Lm5ld1NpbXBsZU5h
bWUoIkFubm90MSIpKTsKLQkJCWxpc3RSZXdyaXRlLmluc2VydEF0KG1hcmtlckFubm90YXRpb24s
IDIsIG51bGwpOworCQkJZGltMC5hbm5vdGF0aW9ucygpLmFkZChtYXJrZXJBbm5vdGF0aW9uKTsK
KwkJCW5ld0FycmF5VHlwZS5kaW1lbnNpb25zKCkuYWRkKGRpbTApOworCQkJcmV3cml0ZS5zZXQo
Y3JlYXRpb24sIEFycmF5Q3JlYXRpb24uVFlQRV9QUk9QRVJUWSwgbmV3QXJyYXlUeXBlLCBudWxs
KTsKKwogCQl9CiAJCXsKIAkJCXN0YXRlbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVt
ZW50KSBzdGF0ZW1lbnRzLmdldCgxKTsKQEAgLTU5NzgsNDMgKzU5NzksNDQgQEAKIAkJCUV4cHJl
c3Npb24gZXhwID0gKEV4cHJlc3Npb24pIGV4cHJlc3Npb25zLmdldCgxKTsKIAkJCWxpc3RSZXdy
aXRlLnJlbW92ZShleHAsIG51bGwpOwogCi0JCQlsaXN0UmV3cml0ZSA9IHJld3JpdGUuZ2V0TGlz
dFJld3JpdGUoY3JlYXRpb25UeXBlLCBBcnJheVR5cGUuQU5OT1RBVElPTlNfUFJPUEVSVFkpOwot
CQkJTWFya2VyQW5ub3RhdGlvbiBhbm5vdGF0aW9uID0gKE1hcmtlckFubm90YXRpb24pIGNyZWF0
aW9uVHlwZS5hbm5vdGF0aW9ucygpLmdldCgwKTsKKwkJCUV4dHJhRGltZW5zaW9uIGRpbSA9IGNy
ZWF0aW9uVHlwZS5nZXREaW1lbnNpb25ObygyKTsKKwkJCWxpc3RSZXdyaXRlID0gcmV3cml0ZS5n
ZXRMaXN0UmV3cml0ZShkaW0sIEV4dHJhRGltZW5zaW9uLkFOTk9UQVRJT05TX1BST1BFUlRZKTsK
KwkJCU1hcmtlckFubm90YXRpb24gYW5ub3RhdGlvbiA9IChNYXJrZXJBbm5vdGF0aW9uKSBkaW0u
YW5ub3RhdGlvbnMoKS5nZXQoMCk7CiAJCQlsaXN0UmV3cml0ZS5yZW1vdmUoYW5ub3RhdGlvbiwg
bnVsbCk7CiAKLQkJCWNyZWF0aW9uVHlwZSA9IChBcnJheVR5cGUpIGNyZWF0aW9uVHlwZS5nZXRD
b21wb25lbnRUeXBlKCk7Ci0JCQlsaXN0UmV3cml0ZSA9IHJld3JpdGUuZ2V0TGlzdFJld3JpdGUo
Y3JlYXRpb25UeXBlLCBBcnJheVR5cGUuQU5OT1RBVElPTlNfUFJPUEVSVFkpOwotCQkJYW5ub3Rh
dGlvbiA9IChNYXJrZXJBbm5vdGF0aW9uKSBjcmVhdGlvblR5cGUuYW5ub3RhdGlvbnMoKS5nZXQo
MSk7CisJCQlkaW0gPSBjcmVhdGlvblR5cGUuZ2V0RGltZW5zaW9uTm8oMSk7CisJCQlsaXN0UmV3
cml0ZSA9IHJld3JpdGUuZ2V0TGlzdFJld3JpdGUoZGltLCBFeHRyYURpbWVuc2lvbi5BTk5PVEFU
SU9OU19QUk9QRVJUWSk7CisJCQlhbm5vdGF0aW9uID0gKE1hcmtlckFubm90YXRpb24pIGRpbS5h
bm5vdGF0aW9ucygpLmdldCgxKTsKIAkJCWxpc3RSZXdyaXRlLnJlbW92ZShhbm5vdGF0aW9uLCBu
dWxsKTsKIAotCQkJY3JlYXRpb25UeXBlID0gKEFycmF5VHlwZSkgY3JlYXRpb25UeXBlLmdldENv
bXBvbmVudFR5cGUoKTsKLQkJCWxpc3RSZXdyaXRlID0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShj
cmVhdGlvblR5cGUsIEFycmF5VHlwZS5BTk5PVEFUSU9OU19QUk9QRVJUWSk7Ci0JCQlhbm5vdGF0
aW9uID0gKE1hcmtlckFubm90YXRpb24pIGNyZWF0aW9uVHlwZS5hbm5vdGF0aW9ucygpLmdldCgx
KTsKKwkJCWRpbSA9IGNyZWF0aW9uVHlwZS5nZXREaW1lbnNpb25ObygwKTsKKwkJCWxpc3RSZXdy
aXRlID0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShkaW0sIEV4dHJhRGltZW5zaW9uLkFOTk9UQVRJ
T05TX1BST1BFUlRZKTsKKwkJCWFubm90YXRpb24gPSAoTWFya2VyQW5ub3RhdGlvbikgZGltLmFu
bm90YXRpb25zKCkuZ2V0KDEpOwogCQkJbGlzdFJld3JpdGUucmVtb3ZlKGFubm90YXRpb24sIG51
bGwpOwogCiAJCQlmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdt
ZW50cy5nZXQoMSk7CiAKIAkJCWNyZWF0aW9uID0gKEFycmF5Q3JlYXRpb24pIGZyYWdtZW50Lmdl
dEluaXRpYWxpemVyKCk7CiAJCQljcmVhdGlvblR5cGUgPSBjcmVhdGlvbi5nZXRUeXBlKCk7Ci0K
LQkJCWxpc3RSZXdyaXRlID0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShjcmVhdGlvblR5cGUsIEFy
cmF5VHlwZS5BTk5PVEFUSU9OU19QUk9QRVJUWSk7Ci0JCQlhbm5vdGF0aW9uID0gKE1hcmtlckFu
bm90YXRpb24pIGNyZWF0aW9uVHlwZS5hbm5vdGF0aW9ucygpLmdldCgwKTsKKwkJCWRpbSA9IGNy
ZWF0aW9uVHlwZS5nZXREaW1lbnNpb25ObygyKTsKKwkJCWxpc3RSZXdyaXRlID0gcmV3cml0ZS5n
ZXRMaXN0UmV3cml0ZShkaW0sIEV4dHJhRGltZW5zaW9uLkFOTk9UQVRJT05TX1BST1BFUlRZKTsK
KwkJCWFubm90YXRpb24gPSAoTWFya2VyQW5ub3RhdGlvbikgZGltLmFubm90YXRpb25zKCkuZ2V0
KDEpOwogCQkJbGlzdFJld3JpdGUucmVtb3ZlKGFubm90YXRpb24sIG51bGwpOwotCQkJYW5ub3Rh
dGlvbiA9IChNYXJrZXJBbm5vdGF0aW9uKSBjcmVhdGlvblR5cGUuYW5ub3RhdGlvbnMoKS5nZXQo
MSk7CisJCQlhbm5vdGF0aW9uID0gKE1hcmtlckFubm90YXRpb24pIGRpbS5hbm5vdGF0aW9ucygp
LmdldCgwKTsKIAkJCWxpc3RSZXdyaXRlLnJlbW92ZShhbm5vdGF0aW9uLCBudWxsKTsKIAotCQkJ
Y3JlYXRpb25UeXBlID0gKEFycmF5VHlwZSkgY3JlYXRpb25UeXBlLmdldENvbXBvbmVudFR5cGUo
KTsKLQkJCWxpc3RSZXdyaXRlID0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShjcmVhdGlvblR5cGUs
IEFycmF5VHlwZS5BTk5PVEFUSU9OU19QUk9QRVJUWSk7Ci0JCQlhbm5vdGF0aW9uID0gKE1hcmtl
ckFubm90YXRpb24pIGNyZWF0aW9uVHlwZS5hbm5vdGF0aW9ucygpLmdldCgwKTsKKwkJCWRpbSA9
IGNyZWF0aW9uVHlwZS5nZXREaW1lbnNpb25ObygxKTsKKwkJCWxpc3RSZXdyaXRlID0gcmV3cml0
ZS5nZXRMaXN0UmV3cml0ZShkaW0sIEV4dHJhRGltZW5zaW9uLkFOTk9UQVRJT05TX1BST1BFUlRZ
KTsKKwkJCWFubm90YXRpb24gPSAoTWFya2VyQW5ub3RhdGlvbikgZGltLmFubm90YXRpb25zKCku
Z2V0KDEpOwogCQkJbGlzdFJld3JpdGUucmVtb3ZlKGFubm90YXRpb24sIG51bGwpOwotCQkJYW5u
b3RhdGlvbiA9IChNYXJrZXJBbm5vdGF0aW9uKSBjcmVhdGlvblR5cGUuYW5ub3RhdGlvbnMoKS5n
ZXQoMSk7CisJCQlhbm5vdGF0aW9uID0gKE1hcmtlckFubm90YXRpb24pIGRpbS5hbm5vdGF0aW9u
cygpLmdldCgwKTsKIAkJCWxpc3RSZXdyaXRlLnJlbW92ZShhbm5vdGF0aW9uLCBudWxsKTsKIAot
CQkJY3JlYXRpb25UeXBlID0gKEFycmF5VHlwZSkgY3JlYXRpb25UeXBlLmdldENvbXBvbmVudFR5
cGUoKTsKLQkJCWxpc3RSZXdyaXRlID0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShjcmVhdGlvblR5
cGUsIEFycmF5VHlwZS5BTk5PVEFUSU9OU19QUk9QRVJUWSk7Ci0JCQlhbm5vdGF0aW9uID0gKE1h
cmtlckFubm90YXRpb24pIGNyZWF0aW9uVHlwZS5hbm5vdGF0aW9ucygpLmdldCgwKTsKKwkJCWRp
bSA9IGNyZWF0aW9uVHlwZS5nZXREaW1lbnNpb25ObygwKTsKKwkJCWxpc3RSZXdyaXRlID0gcmV3
cml0ZS5nZXRMaXN0UmV3cml0ZShkaW0sIEV4dHJhRGltZW5zaW9uLkFOTk9UQVRJT05TX1BST1BF
UlRZKTsKKwkJCWFubm90YXRpb24gPSAoTWFya2VyQW5ub3RhdGlvbikgZGltLmFubm90YXRpb25z
KCkuZ2V0KDEpOwogCQkJbGlzdFJld3JpdGUucmVtb3ZlKGFubm90YXRpb24sIG51bGwpOwotCQkJ
YW5ub3RhdGlvbiA9IChNYXJrZXJBbm5vdGF0aW9uKSBjcmVhdGlvblR5cGUuYW5ub3RhdGlvbnMo
KS5nZXQoMSk7CisJCQlhbm5vdGF0aW9uID0gKE1hcmtlckFubm90YXRpb24pIGRpbS5hbm5vdGF0
aW9ucygpLmdldCgwKTsKIAkJCWxpc3RSZXdyaXRlLnJlbW92ZShhbm5vdGF0aW9uLCBudWxsKTsK
IAogCQkJZXhwcmVzc2lvbnMgPSBjcmVhdGlvbi5kaW1lbnNpb25zKCk7CkBAIC02MDM1LDggKzYw
MzcsOCBAQAogCQlidWYuYXBwZW5kKCJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVu
dFR5cGU7XG4iKTsKIAkJYnVmLmFwcGVuZCgicHVibGljIGNsYXNzIEUge1xuIik7CiAJCWJ1Zi5h
cHBlbmQoIiAgICBwdWJsaWMgdm9pZCBmb28oKSB7XG4iKTsKLQkJYnVmLmFwcGVuZCgiICAgIAlp
bnQgW10gaSBbXSBAQW5ub3QxIEBBbm5vdDIgW10gQEFubm90MSBAQW5ub3QzIFtdID0gbmV3IGlu
dCBAQW5ub3QxIEBBbm5vdDIgIFsyXSBAQW5ub3QyIEBBbm5vdDMgW3NpemUoKV0gQEFubm90MiBA
QW5ub3QxIFtdW10gQEFubm90MyBAQW5ub3QyIEBBbm5vdDFbXTtcbiIpOwotCQlidWYuYXBwZW5k
KCIgICAgCWludCBbXSBqIFtdW10gPSBuZXcgaW50IEBBbm5vdDEgWzJdIEBBbm5vdDIgW10gQEFu
bm90MyBbXSwgayBbXVtdID0gbmV3IGludFsyXVsxMF1bc2l6ZSgpXTtcbiIpOworCQlidWYuYXBw
ZW5kKCIgICAgCWludCBbXSBpIFtdIEBBbm5vdDEgQEFubm90MiBbXSBAQW5ub3QxIEBBbm5vdDMg
W10gPSBuZXcgaW50IEBBbm5vdDEgQEFubm90MiAgWzJdIEBBbm5vdDIgQEFubm90MyBbc2l6ZSgp
XSBAQW5ub3QyIEBBbm5vdDEgW11bXUBBbm5vdDMgQEFubm90MiBAQW5ub3QxIFtdO1xuIik7CisJ
CWJ1Zi5hcHBlbmQoIiAgICAJaW50IFtdIGogW11bXSA9IG5ldyBpbnQgQEFubm90MiBbMl0gQEFu
bm90MiBbXSBAQW5ub3QxIFtdLCBrIFtdW10gPSBuZXcgaW50IFsyXSBbMTBdIFtzaXplKCldO1xu
Iik7CiAJCWJ1Zi5hcHBlbmQoIiAgICB9XG4iKTsKIAkJYnVmLmFwcGVuZCgiICAgIHB1YmxpYyBp
bnQgc2l6ZSgpIHsgcmV0dXJuIDI7IH1cbiIpOwogCQlidWYuYXBwZW5kKCJ9XG4iKTsKQEAgLTYw
ODYsMTAgKzYwODgsMTAgQEAKIAkJCUFycmF5Q3JlYXRpb24gY3JlYXRpb24gPSAoQXJyYXlDcmVh
dGlvbikgZnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKIAogCQkJQXJyYXlUeXBlIGFycmF5VHlw
ZSA9IGNyZWF0aW9uLmdldFR5cGUoKTsKLQkJCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGFycmF5
VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCQlMaXN0UmV3cml0ZSBsaXN0UmV3cml0ZT0gcmV3
cml0ZS5nZXRMaXN0UmV3cml0ZShhcnJheVR5cGUsIEFycmF5VHlwZS5BTk5PVEFUSU9OU19QUk9Q
RVJUWSk7Ci0JCQlsaXN0UmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpYXJyYXlUeXBlLmFubm90YXRp
b25zKCkuZ2V0KDApLCBudWxsKTsKLQkJCWxpc3RSZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSlhcnJh
eVR5cGUuYW5ub3RhdGlvbnMoKS5nZXQoMSksIG51bGwpOworCQkJRXh0cmFEaW1lbnNpb24gZGlt
ID0gYXJyYXlUeXBlLmdldERpbWVuc2lvbk5vKDEpOworCQkJTGlzdFJld3JpdGUgbGlzdFJld3Jp
dGU9IHJld3JpdGUuZ2V0TGlzdFJld3JpdGUoZGltLCBFeHRyYURpbWVuc2lvbi5BTk5PVEFUSU9O
U19QUk9QRVJUWSk7CisJCQlsaXN0UmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpZGltLmFubm90YXRp
b25zKCkuZ2V0KDApLCBudWxsKTsKKwkJCWxpc3RSZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSlkaW0u
YW5ub3RhdGlvbnMoKS5nZXQoMSksIG51bGwpOwogCQkJcmV3cml0ZS5zZXQoY3JlYXRpb24sIEFy
cmF5Q3JlYXRpb24uVFlQRV9QUk9QRVJUWSwgYXJyYXlUeXBlLCBudWxsKTsKIAkJfQogCQl7CkBA
IC02MTAxLDE2ICs2MTAzLDEyIEBACiAJCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCB0eXBlIiwg
QVNUTm9kZS5BUlJBWV9UWVBFLCB0eXBlLmdldE5vZGVUeXBlKCkpOwogCQkJQXJyYXlDcmVhdGlv
biBjcmVhdGlvbiA9IChBcnJheUNyZWF0aW9uKSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOwog
CQkJQXJyYXlUeXBlIGNyZWF0aW9uVHlwZSA9IGNyZWF0aW9uLmdldFR5cGUoKTsKLQotCQkJQXJy
YXlUeXBlIG5ld0FycmF5VHlwZSA9IChBcnJheVR5cGUpIGNyZWF0aW9uVHlwZS5nZXRDb21wb25l
bnRUeXBlKCk7Ci0JCQlyZXdyaXRlLnNldChjcmVhdGlvbiwgQXJyYXlDcmVhdGlvbi5UWVBFX1BS
T1BFUlRZLCBuZXdBcnJheVR5cGUsIG51bGwpOwotCisJCQlyZXdyaXRlLnJlbW92ZShjcmVhdGlv
blR5cGUuZ2V0RGltZW5zaW9uTm8oMCksIG51bGwpOwogCQkJZnJhZ21lbnQgPSAoVmFyaWFibGVE
ZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDEpOwogCQkJY3JlYXRpb24gPSAoQXJy
YXlDcmVhdGlvbikgZnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKIAkJCWNyZWF0aW9uVHlwZSA9
IGNyZWF0aW9uLmdldFR5cGUoKTsKIAotCQkJbmV3QXJyYXlUeXBlID0gKEFycmF5VHlwZSkgY3Jl
YXRpb25UeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJCXJld3JpdGUuc2V0KGNyZWF0aW9uLCBB
cnJheUNyZWF0aW9uLlRZUEVfUFJPUEVSVFksIG5ld0FycmF5VHlwZSwgbnVsbCk7CisJCQlyZXdy
aXRlLnJlbW92ZShjcmVhdGlvblR5cGUuZ2V0RGltZW5zaW9uTm8oMCksIG51bGwpOwogCQl9CiAJ
CS8vIEdldCBuZXcgY29kZQogCQlTdHJpbmcgcHJldmlldz0gZXZhbHVhdGVSZXdyaXRlKGN1LCBy
ZXdyaXRlKTsKQEAgLTYxMjAsNyArNjExOCw3IEBACiAJCWJ1Zi5hcHBlbmQoImltcG9ydCBqYXZh
LmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZTtcbiIpOwogCQlidWYuYXBwZW5kKCJwdWJsaWMg
Y2xhc3MgRSB7XG4iKTsKIAkJYnVmLmFwcGVuZCgiICAgIHB1YmxpYyB2b2lkIGZvbygpIHtcbiIp
OwotCQlidWYuYXBwZW5kKCIgICAgCWludCBbXSBpIFtdW10gPSBuZXcgaW50IEBBbm5vdDEgQEFu
bm90MiAgWzJdW3NpemUobmV3IGludFtdW117fSldO1xuIik7CisJCWJ1Zi5hcHBlbmQoIiAgICAJ
aW50IFtdIGkgW11bXSA9IG5ldyBpbnQgQEFubm90MSBAQW5ub3QyICBbMl0gIFtzaXplKG5ldyBp
bnRbXVtde30pXSBbXTtcbiIpOwogCQlidWYuYXBwZW5kKCIgICAgCWludCBbXSBqIFtdW10gPSBu
ZXcgaW50IEBBbm5vdDEgQEFubm90MiBbMl0gQEFubm90MiBAQW5ub3QzIFtzaXplKG5ldyBpbnRb
XXt9KV0sIGsgW11bXSA9IG5ldyBpbnQgQEFubm90MSBAQW5ub3QyIFsyXSBAQW5ub3QyIEBBbm5v
dDMgWzEwXTtcbiIpOwogCQlidWYuYXBwZW5kKCIgICAgfVxuIik7CiAJCWJ1Zi5hcHBlbmQoIiAg
ICBwdWJsaWMgaW50IHNpemUoT2JqZWN0IG9iaikgeyByZXR1cm4gMjsgfVxuIik7CkBAIC02MTM3
LDMgKzYxMzUsNCBAQAogCiAKIAorCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9k
b20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1QuamF2YQppbmRleCA3OGY4OWNmLi4w
N2IwMzlmIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2Uv
amR0L2NvcmUvZG9tL0FTVC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcv
ZWNsaXBzZS9qZHQvY29yZS9kb20vQVNULmphdmEKQEAgLTk5OSw2ICs5OTksMTMgQEAKIAl9CiAK
IAkvKioKKwkgKiBBIGxvY2FsIG1ldGhvZCB0byB3b3JrYXJvdW5kIGNhbGxpbmcgZGVwcmVjYXRl
ZCBtZXRob2QgaW4gYXJyYXkgdHlwZS4KKwkgKi8KKwlwcml2YXRlIHZvaWQgc2V0QXJyYXlDb21w
b25lbnRUeXBlKEFycmF5VHlwZSBhcnJheVR5cGUsIFR5cGUgdHlwZSkgeworCQlhcnJheVR5cGUu
c2V0Q29tcG9uZW50VHlwZSh0eXBlKTsKKwl9CisKKwkvKioKIAkgKiBDcmVhdGVzIGFuZCByZXR1
cm5zIGEgbmV3IHVucGFyZW50ZWQgYW5ub3RhdGlvbiB0eXBlIGRlY2xhcmF0aW9uCiAJICogbm9k
ZSBmb3IgYW4gdW5zcGVjaWZpZWQsIGJ1dCBsZWdhbCwgbmFtZTsgbm8gbW9kaWZpZXJzOyBubyBq
YXZhZG9jOwogCSAqIGFuZCBhbiBlbXB0eSBsaXN0IG9mIG1lbWJlciBkZWNsYXJhdGlvbnMuCkBA
IC0xMTA5LDE5ICsxMTE2LDMxIEBACiAKIAkvKioKIAkgKiBDcmVhdGVzIGFuZCByZXR1cm5zIGEg
bmV3IHVucGFyZW50ZWQgYXJyYXkgdHlwZSBub2RlIHdpdGggdGhlIGdpdmVuCi0JICogY29tcG9u
ZW50IHR5cGUsIHdoaWNoIG1heSBiZSBhbm90aGVyIGFycmF5IHR5cGUuCisJICogY29tcG9uZW50
IHR5cGUsIHdoaWNoIG1heSBiZSBhbm90aGVyIGFycmF5IHR5cGUgZm9yIGxldmVscyBsZXNzIHRo
YW4gSkxTOC4KKwkgKiBGb3IgSkxTOCBhbmQgYWJvdmUgdGhpcyB0eXBlIGhhcyB0byBiZSBhbiBh
bm5vdGF0YWJsZSB0eXBlLgogCSAqCi0JICogQHBhcmFtIGNvbXBvbmVudFR5cGUgdGhlIGNvbXBv
bmVudCB0eXBlIChwb3NzaWJseSBhbm90aGVyIGFycmF5IHR5cGUpCisJICogQHBhcmFtIHR5cGUg
dGhlIGNvbXBvbmVudCB0eXBlIChwb3NzaWJseSBhbm90aGVyIGFycmF5IHR5cGUpIGZvciBsZXZl
bCA8IEpMUzgsIAorCSAqIGEgYW5ub3RhdGFibGUgdHlwZSBmb3IgSkxTOCBhbmQgYWJvdmUKIAkg
KiBAcmV0dXJuIGEgbmV3IHVucGFyZW50ZWQgYXJyYXkgdHlwZSBub2RlCiAJICogQGV4Y2VwdGlv
biBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24gaWY6CiAJICogPHVsPgogCSAqIDxsaT50aGUgbm9k
ZSBiZWxvbmdzIHRvIGEgZGlmZmVyZW50IEFTVDwvbGk+CiAJICogPGxpPnRoZSBub2RlIGFscmVh
ZHkgaGFzIGEgcGFyZW50PC9saT4KKwkgKiA8bGk+IGxldmVsID49IEpMUzggYW5kIHR5cGUgbm90
IGFuIGFycmF5IHR5cGU8L2xpPgogCSAqIDwvdWw+CiAJICovCi0JcHVibGljIEFycmF5VHlwZSBu
ZXdBcnJheVR5cGUoVHlwZSBjb21wb25lbnRUeXBlKSB7Ci0JCUFycmF5VHlwZSByZXN1bHQgPSBu
ZXcgQXJyYXlUeXBlKHRoaXMpOwotCQlyZXN1bHQuc2V0Q29tcG9uZW50VHlwZShjb21wb25lbnRU
eXBlKTsKKwlwdWJsaWMgQXJyYXlUeXBlIG5ld0FycmF5VHlwZShUeXBlIHR5cGUpIHsKKwkJQXJy
YXlUeXBlIHJlc3VsdDsKKwkJaWYgKHRoaXMuYXBpTGV2ZWwgPCBBU1QuSkxTOCkgeworCQkJcmVz
dWx0ID0gbmV3IEFycmF5VHlwZSh0aGlzKTsKKwkJCXNldEFycmF5Q29tcG9uZW50VHlwZShyZXN1
bHQsIHR5cGUpOworCQkJcmV0dXJuIHJlc3VsdDsKKwkJfQorCQlpZiAodHlwZS5pc0FycmF5VHlw
ZSgpKSB7CisJCQl0aHJvdyBuZXcgSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uKCk7CisJCX0KKwkJ
cmVzdWx0ID0gbmV3IEFycmF5VHlwZSh0aGlzKTsKKwkJcmVzdWx0LnNldEVsZW1lbnRUeXBlKHR5
cGUpOwogCQlyZXR1cm4gcmVzdWx0OwogCX0KIApAQCAtMTEzMyw3ICsxMTUyLDcgQEAKIAkgKiBl
bGVtZW50IHR5cGUgb2YgdGhlIHJlc3VsdCB3aWxsIG5vdCBiZSB0aGUgc2FtZSBhcyB3aGF0IHdh
cyBwYXNzZWQgaW4uCiAJICogPC9wPgogCSAqCi0JICogQHBhcmFtIGVsZW1lbnRUeXBlIHRoZSBl
bGVtZW50IHR5cGUgKGNhbiBiZSBhbiBhcnJheSB0eXBlKQorCSAqIEBwYXJhbSBlbGVtZW50VHlw
ZSB0aGUgZWxlbWVudCB0eXBlIChjYW4gYmUgYW4gYXJyYXkgdHlwZSBmb3IgSkxTOC4gRm9yID5K
TFM4IHRoaXMgc2hvdWxkIGJlIGFuIGFubm90YXRhYmxlIHR5cGUpCiAJICogQHBhcmFtIGRpbWVu
c2lvbnMgdGhlIG51bWJlciBvZiBkaW1lbnNpb25zLCBhIHBvc2l0aXZlIG51bWJlcgogCSAqIEBy
ZXR1cm4gYSBuZXcgdW5wYXJlbnRlZCBhcnJheSB0eXBlIG5vZGUKIAkgKiBAZXhjZXB0aW9uIEls
bGVnYWxBcmd1bWVudEV4Y2VwdGlvbiBpZjoKQEAgLTExNDMsNiArMTE2Miw3IEBACiAJICogPGxp
PnRoZSBlbGVtZW50IHR5cGUgaXMgbnVsbDwvbGk+CiAJICogPGxpPnRoZSBudW1iZXIgb2YgZGlt
ZW5zaW9ucyBpcyBsb3dlciB0aGFuIDE8L2xpPgogCSAqIDxsaT50aGUgbnVtYmVyIG9mIGRpbWVu
c2lvbnMgaXMgZ3JlYXRlciB0aGFuIDEwMDA8L2xpPgorCSAqIDxsaT5mb3IgbGV2ZWxzIGZyb20g
SkxTOCBhbmQgbGF0ZXIsIGlmIHRoZSBlbGVtZW50IHR5cGUgaXMgbm90IGFuIGFycmF5IHR5cGUg
PC9saT4KIAkgKiA8L3VsPgogCSAqLwogCXB1YmxpYyBBcnJheVR5cGUgbmV3QXJyYXlUeXBlKFR5
cGUgZWxlbWVudFR5cGUsIGludCBkaW1lbnNpb25zKSB7CkBAIC0xMTUwLDEzICsxMTcwLDI3IEBA
CiAJCQl0aHJvdyBuZXcgSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uKCk7CiAJCX0KIAkJaWYgKGRp
bWVuc2lvbnMgPCAxIHx8IGRpbWVuc2lvbnMgPiAxMDAwKSB7Ci0JCQkvLyB3ZSB3b3VsZCBibG93
IG91ciBzdGFja3MgYW55d2F5IHdpdGggYSAxMDAwLUQgYXJyYXkKKwkJCS8vIHdlIHdvdWxkYmxv
dyBvdXIgc3RhY2tzIGFueXdheSB3aXRoIGEgMTAwMC1EIGFycmF5CiAJCQl0aHJvdyBuZXcgSWxs
ZWdhbEFyZ3VtZW50RXhjZXB0aW9uKCk7CiAJCX0KLQkJQXJyYXlUeXBlIHJlc3VsdCA9IG5ldyBB
cnJheVR5cGUodGhpcyk7Ci0JCXJlc3VsdC5zZXRDb21wb25lbnRUeXBlKGVsZW1lbnRUeXBlKTsK
LQkJZm9yIChpbnQgaSA9IDI7IGkgPD0gZGltZW5zaW9uczsgaSsrKSB7Ci0JCQlyZXN1bHQgPSBu
ZXdBcnJheVR5cGUocmVzdWx0KTsKKwkJQXJyYXlUeXBlIHJlc3VsdDsKKwkJaWYgKHRoaXMuYXBp
TGV2ZWwgPCBBU1QuSkxTOCkgeworCQkJcmVzdWx0ID0gbmV3IEFycmF5VHlwZSh0aGlzKTsKKwkJ
CXNldEFycmF5Q29tcG9uZW50VHlwZShyZXN1bHQsIGVsZW1lbnRUeXBlKTsKKwkJCWZvciAoaW50
IGkgPSAyOyBpIDw9IGRpbWVuc2lvbnM7IGkrKykgeworCQkJCXJlc3VsdCA9IG5ld0FycmF5VHlw
ZShyZXN1bHQpOworCQkJfQorCQkJcmV0dXJuIHJlc3VsdDsKKwkJfQorCQkvL2xldmVsID49IEpM
UzgKKwkJaWYgKGVsZW1lbnRUeXBlLmlzQXJyYXlUeXBlKCkpIHsKKwkJCXRocm93IG5ldyBJbGxl
Z2FsQXJndW1lbnRFeGNlcHRpb24oKTsKKwkJfQorCQlyZXN1bHQgPSBuZXcgQXJyYXlUeXBlKHRo
aXMpOworCQlyZXN1bHQuc2V0RWxlbWVudFR5cGUoZWxlbWVudFR5cGUpOworCQkvLyBpbmRleCBz
dGFydGluZyBmcm9tIDEgc2luY2UgdGhlcmUgaXMgYSBkaW1lbnNpb24gYWxyZWFkeSBhdmFpbGFi
bGUgYnkgZGVmYXVsdC4KKwkJZm9yIChpbnQgaSA9IDE7IGkgPCBkaW1lbnNpb25zOyArK2kpIHsK
KwkJCXJlc3VsdC5kaW1lbnNpb25zKCkuYWRkKG5ldyBFeHRyYURpbWVuc2lvbih0aGlzKSk7CiAJ
CX0KIAkJcmV0dXJuIHJlc3VsdDsKIApkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUv
ZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIuamF2YSBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUQ29udmVydGVyLmph
dmEKaW5kZXggNzlmOTMzMS4uNWRlMDZmOCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIuamF2YQorKysgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVENvbnZl
cnRlci5qYXZhCkBAIC00NjUsNiArNDY1LDExIEBACiAKIAlwcm90ZWN0ZWQgdm9pZCBjb21wbGV0
ZVJlY29yZChBcnJheVR5cGUgYXJyYXlUeXBlLCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIuYXN0LkFTVE5vZGUgYXN0Tm9kZSkgewogCQlBcnJheVR5cGUgYXJyYXkgPSBhcnJheVR5
cGU7CisJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCgpID49IEFTVC5KTFM4KSB7CisJCQl0aGlzLnJl
Y29yZE5vZGVzKGFycmF5VHlwZSwgYXN0Tm9kZSk7CisJCQl0aGlzLnJlY29yZE5vZGVzKGFycmF5
VHlwZS5nZXRFbGVtZW50VHlwZSgpLCBhc3ROb2RlKTsKKwkJCXJldHVybjsKKwkJfQogCQlpbnQg
ZGltZW5zaW9ucyA9IGFycmF5LmdldERpbWVuc2lvbnMoKTsKIAkJZm9yIChpbnQgaSA9IDA7IGkg
PCBkaW1lbnNpb25zOyBpKyspIHsKIAkJCVR5cGUgY29tcG9uZW50VHlwZSA9IGFycmF5LmdldENv
bXBvbmVudFR5cGUoKTsKQEAgLTkwOSwxMiArOTE0LDE4IEBACiAJCWlmIChpc1ZhckFyZ3MpIHsK
IAkJCXNldFR5cGVGb3JTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uKHZhcmlhYmxlRGVjbCwgdHlw
ZSwgZXh0cmFEaW1lbnNpb25zICsgMSk7CiAJCQkvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzkxODk4Ci0JCQlpZiAodHlwZS5pc0Fubm90YXRhYmxlKCkp
IHsKLQkJCQlBbm5vdGF0YWJsZVR5cGUgYW5ub3RhdGFibGVUeXBlID0gKEFubm90YXRhYmxlVHlw
ZSkgdHlwZTsKLQkJCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA+PSBBU1QuSkxTOCAmJiAhYW5u
b3RhdGFibGVUeXBlLmFubm90YXRpb25zKCkuaXNFbXB0eSgpKSB7Ci0JCQkJCUl0ZXJhdG9yIGFu
bm90YXRpb25zID0gYW5ub3RhdGFibGVUeXBlLmFubm90YXRpb25zKCkuaXRlcmF0b3IoKTsKLQkJ
CQkJd2hpbGUgKGFubm90YXRpb25zLmhhc05leHQoKSkgewotCQkJCQkJQW5ub3RhdGlvbiBhbm5v
dGF0aW9uID0gKEFubm90YXRpb24pIGFubm90YXRpb25zLm5leHQoKTsKKwkJCWlmICh0aGlzLmFz
dC5hcGlMZXZlbCgpID49IEFTVC5KTFM4KSB7CisJCQkJTGlzdCBhbm5vdGF0aW9ucyAgPSBudWxs
OworCQkJCWlmICh0eXBlLmlzQW5ub3RhdGFibGUoKSkgeworCQkJCQlhbm5vdGF0aW9ucyA9ICgo
QW5ub3RhdGFibGVUeXBlKSB0eXBlKS5hbm5vdGF0aW9ucygpOworCQkJCX0gZWxzZSBpZiAodHlw
ZS5pc0FycmF5VHlwZSgpKSB7CisJCQkJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBl
KSB0eXBlOworCQkJCQlhbm5vdGF0aW9ucyA9IGFycmF5VHlwZS5kaW1lbnNpb25zKCkuaXNFbXB0
eSgpID8gbnVsbCA6ICgoYXJyYXlUeXBlLmdldERpbWVuc2lvbk5vKDApKS5hbm5vdGF0aW9ucygp
KTsKKwkJCQl9CisJCQkJaWYgKGFubm90YXRpb25zICE9IG51bGwpIHsKKwkJCQkJSXRlcmF0b3Ig
aXRlciA9IGFubm90YXRpb25zLml0ZXJhdG9yKCk7CisJCQkJCXdoaWxlIChpdGVyLmhhc05leHQo
KSkgeworCQkJCQkJQW5ub3RhdGlvbiBhbm5vdGF0aW9uID0gKEFubm90YXRpb24pIGl0ZXIubmV4
dCgpOwogCQkJCQkJYW5ub3RhdGlvbi5zZXRQYXJlbnQobnVsbCwgbnVsbCk7CiAJCQkJCQl2YXJp
YWJsZURlY2wudmFyYXJnc0Fubm90YXRpb25zKCkuYWRkKGFubm90YXRpb24pOwogCQkJCQl9CkBA
IC05NzksNiArOTkwLDcgQEAKIAkJCXJlY29yZE5vZGVzKHR5cGUsIGV4cHJlc3Npb24udHlwZSk7
CiAJCX0KIAkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IG51bGw7CisJCWludCBzYXZlZFN0YXJ0ID0g
LTE7CiAJCWlmICh0eXBlLmlzQXJyYXlUeXBlKCkpIHsKIAkJCWFycmF5VHlwZSA9IChBcnJheVR5
cGUpIHR5cGU7CiAJCX0gZWxzZSB7CkBAIC05ODksMTUgKzEwMDEsMzQgQEAKIAkJCWludCBzdGFy
dCA9IHR5cGUuZ2V0U3RhcnRQb3NpdGlvbigpOwogCQkJaW50IGVuZCA9IHR5cGUuZ2V0U3RhcnRQ
b3NpdGlvbigpICsgdHlwZS5nZXRMZW5ndGgoKTsKIAkJCWludCBwcmV2aW91c1NlYXJjaFN0YXJ0
ID0gZW5kIC0gMTsKLQkJCUFycmF5VHlwZSBjb21wb25lbnRUeXBlID0gKEFycmF5VHlwZSkgdHlw
ZS5nZXRQYXJlbnQoKTsKLQkJCWZvciAoaW50IGkgPSAwOyBpIDwgZGltZW5zaW9uc0xlbmd0aDsg
aSsrKSB7Ci0JCQkJcHJldmlvdXNTZWFyY2hTdGFydCA9IHJldHJpZXZlUmlnaHRCcmFja2V0UG9z
aXRpb24ocHJldmlvdXNTZWFyY2hTdGFydCArIDEsIHRoaXMuY29tcGlsYXRpb25Vbml0U291cmNl
TGVuZ3RoKTsKLQkJCQljb21wb25lbnRUeXBlLnNldFNvdXJjZVJhbmdlKHN0YXJ0LCBwcmV2aW91
c1NlYXJjaFN0YXJ0IC0gc3RhcnQgKyAxKTsKLQkJCQljb21wb25lbnRUeXBlID0gKEFycmF5VHlw
ZSkgY29tcG9uZW50VHlwZS5nZXRQYXJlbnQoKTsKKwkJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCgp
IDwgQVNULkpMUzgpIHsKKwkJCQlBcnJheVR5cGUgY29tcG9uZW50VHlwZSA9IChBcnJheVR5cGUp
IHR5cGUuZ2V0UGFyZW50KCk7CisJCQkJZm9yIChpbnQgaSA9IDA7IGkgPCBkaW1lbnNpb25zTGVu
Z3RoOyBpKyspIHsKKwkJCQkJcHJldmlvdXNTZWFyY2hTdGFydCA9IHJldHJpZXZlUmlnaHRCcmFj
a2V0UG9zaXRpb24ocHJldmlvdXNTZWFyY2hTdGFydCArIDEsIHRoaXMuY29tcGlsYXRpb25Vbml0
U291cmNlTGVuZ3RoKTsKKwkJCQkJY29tcG9uZW50VHlwZS5zZXRTb3VyY2VSYW5nZShzdGFydCwg
cHJldmlvdXNTZWFyY2hTdGFydCAtIHN0YXJ0ICsgMSk7CisJCQkJCWNvbXBvbmVudFR5cGUgPSAo
QXJyYXlUeXBlKSBjb21wb25lbnRUeXBlLmdldFBhcmVudCgpOworCQkJCX0KKwkJCX0gZWxzZSB7
CisJCQkJc2F2ZWRTdGFydCA9IHN0YXJ0OworCQkJCXN0YXJ0ID0gdHlwZS5nZXRTdGFydFBvc2l0
aW9uKCkgKyB0eXBlLmdldExlbmd0aCgpOworCQkJCWVuZCA9IHN0YXJ0IC0gMTsKKworCQkJCWZv
ciAoaW50IGkgPSAwOyBpIDw9IGRpbWVuc2lvbnNMZW5ndGggLSAxOyBpKyspIHsKKwkJCQkJRXh0
cmFEaW1lbnNpb24gY3VycmVudERpbWVuc2lvbiA9IChFeHRyYURpbWVuc2lvbikgYXJyYXlUeXBl
LmRpbWVuc2lvbnMoKS5nZXQoaSk7CisJCQkJCWVuZCA9IHJldHJpZXZlUmlnaHRCcmFja2V0UG9z
aXRpb24oc3RhcnQsIHRoaXMuY29tcGlsYXRpb25Vbml0U291cmNlTGVuZ3RoKTsKKwkJCQkJY3Vy
cmVudERpbWVuc2lvbi5zZXRTb3VyY2VSYW5nZShzdGFydCwgZW5kIC0gc3RhcnQgKyAxKTsKKwkJ
CQkJc3RhcnQgPSBlbmQgKyAxOworCQkJCX0KKworCQkJCWFycmF5VHlwZS5zZXRTb3VyY2VSYW5n
ZShzYXZlZFN0YXJ0LCBlbmQgLSBzYXZlZFN0YXJ0ICsgMSk7CiAJCQl9CiAJCX0KIAkJaWYgKGV4
cHJlc3Npb24uYW5ub3RhdGlvbnNPbkRpbWVuc2lvbnMgIT0gbnVsbCkgewotCQkJYW5ub3RhdGVU
eXBlKGFycmF5VHlwZSwgZXhwcmVzc2lvbi5hbm5vdGF0aW9uc09uRGltZW5zaW9ucyk7CisJCQlp
ZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQkJYXJyYXlUeXBlLnNldEZs
YWdzKGFycmF5VHlwZS5nZXRGbGFncygpIHwgQVNUTm9kZS5NQUxGT1JNRUQpOworCQkJfSBlbHNl
IHsKKwkJCQlzZXRBcnJheVR5cGVBbm5vdGF0aW9uc0FuZFNvdXJjZShhcnJheVR5cGUsIGV4cHJl
c3Npb24uYW5ub3RhdGlvbnNPbkRpbWVuc2lvbnMpOworCQkJfQogCQl9CiAJCWFycmF5Q3JlYXRp
b24uc2V0VHlwZShhcnJheVR5cGUpOwogCQlpZiAodGhpcy5yZXNvbHZlQmluZGluZ3MpIHsKQEAg
LTMxMjEsNiArMzE1Miw0MSBAQAogCQlyZXR1cm4gcGFja2FnZURlY2xhcmF0aW9uOwogCX0KIAor
CXByaXZhdGUgQXJyYXlUeXBlIGNvbnZlcnRUb0FycmF5KFR5cGVSZWZlcmVuY2UgdHlwZSwgVHlw
ZSBzdWJUeXBlLCBpbnQgc291cmNlU3RhcnQsIGludCBsZW5ndGgsIGludCBub0RpbWVuc2lvbnMp
IHsKKwkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IHRoaXMuYXN0Lm5ld0FycmF5VHlwZShzdWJUeXBl
LCBub0RpbWVuc2lvbnMpOworCQlhcnJheVR5cGUuc2V0U291cmNlUmFuZ2Uoc291cmNlU3RhcnQs
IGxlbmd0aCk7CisJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQW5ub3Rh
dGlvbltdW10gYW5ub3RhdGlvbnNPbkRpbXMgPSB0eXBlLmdldEFubm90YXRpb25zT25EaW1lbnNp
b25zKCk7CisJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsKKwkJCWlmIChh
bm5vdGF0aW9uc09uRGltcyAhPSBudWxsKSB7CisJCQkJYXJyYXlUeXBlLnNldEZsYWdzKGFycmF5
VHlwZS5nZXRGbGFncygpIHwgQVNUTm9kZS5NQUxGT1JNRUQpOworCQkJfQorCQkJQXJyYXlUeXBl
IHN1YmFycmF5VHlwZSA9IGFycmF5VHlwZTsKKwkJCWludCBpbmRleCA9IG5vRGltZW5zaW9ucyAt
IDE7CisJCQl3aGlsZSAoaW5kZXggPiAwKSB7CisJCQkJc3ViYXJyYXlUeXBlID0gKEFycmF5VHlw
ZSkgc3ViYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJCQlpbnQgZW5kID0gcmV0cmll
dmVQcm9wZXJSaWdodEJyYWNrZXRQb3NpdGlvbihpbmRleCwgc291cmNlU3RhcnQpOworCQkJCXN1
YmFycmF5VHlwZS5zZXRTb3VyY2VSYW5nZShzb3VyY2VTdGFydCwgZW5kIC0gc291cmNlU3RhcnQg
KyAxKTsKKwkJCQlpbmRleC0tOworCQkJfQorCQkJcmV0dXJuIGFycmF5VHlwZTsKKwkJfQorCisJ
CWlmIChhbm5vdGF0aW9uc09uRGltcyAhPSBudWxsKSB7CisJCQlzZXRBcnJheVR5cGVBbm5vdGF0
aW9uc0FuZFNvdXJjZShhcnJheVR5cGUsIGFubm90YXRpb25zT25EaW1zKTsKKwkJfSBlbHNlIHsK
KwkJCWludCBzdGFydCA9IHN1YlR5cGUuZ2V0U3RhcnRQb3NpdGlvbigpICsgc3ViVHlwZS5nZXRM
ZW5ndGgoKTsKKwkJCWludCBlbmQgPSBhcnJheVR5cGUuZ2V0U3RhcnRQb3NpdGlvbigpICsgYXJy
YXlUeXBlLmdldExlbmd0aCgpOworCQkJaW50IGxhc3RJbmRleCA9IG5vRGltZW5zaW9ucyAtIDE7
CisKKwkJCWZvciAoaW50IGkgPSAwOyBpIDw9IGxhc3RJbmRleDsgaSsrKSB7CisJCQkJRXh0cmFE
aW1lbnNpb24gY3VycmVudERpbWVuc2lvbiA9IChFeHRyYURpbWVuc2lvbikgYXJyYXlUeXBlLmRp
bWVuc2lvbnMoKS5nZXQoaSk7CisJCQkJcmV0cmlldmVEaW1lbnNpb25BbmRTZXRQb3NpdGlvbnMo
c3RhcnQsIGVuZCwgY3VycmVudERpbWVuc2lvbik7CisJCQkJc3RhcnQgPSBjdXJyZW50RGltZW5z
aW9uLmdldFN0YXJ0UG9zaXRpb24oKSArIGN1cnJlbnREaW1lbnNpb24uZ2V0TGVuZ3RoKCk7CisJ
CQl9CisJCX0KKwkJcmV0dXJuIGFycmF5VHlwZTsKKwl9CisKIAlwcml2YXRlIEVudW1EZWNsYXJh
dGlvbiBjb252ZXJ0VG9FbnVtRGVjbGFyYXRpb24ob3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmFzdC5UeXBlRGVjbGFyYXRpb24gdHlwZURlY2xhcmF0aW9uKSB7CiAJCWNoZWNrQ2Fu
Y2VsZWQoKTsKIAkJLy8gZW51bSBkZWNsYXJhdGlvbiBjYW5ub3QgYmUgYnVpbHQgaWYgdGhlIHNv
dXJjZSBpcyBub3QgPj0gMS41LCBzaW5jZSBlbnVtIGlzIHRoZW4gc2VlbiBhcyBhbiBpZGVudGlm
aWVyCkBAIC0zMzUxLDYgKzM0MTcsMjggQEAKIAkJfQogCX0KIAorCXByaXZhdGUgdm9pZCBzZXRB
cnJheVR5cGVBbm5vdGF0aW9uc0FuZFNvdXJjZShBcnJheVR5cGUgYXJyYXlUeXBlLAorCQkJb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uW11bXSBhbm5vdGF0
aW9uc09uRGltcykgeworCQlMaXN0IGRpbWVuc2lvbnMgPSBhcnJheVR5cGUuZGltZW5zaW9ucygp
OworCQlUeXBlIGVsZW1UeXBlID0gYXJyYXlUeXBlLmdldEVsZW1lbnRUeXBlKCk7CisJCWludCBz
dGFydCA9IGVsZW1UeXBlLmdldFN0YXJ0UG9zaXRpb24oKSArIGVsZW1UeXBlLmdldExlbmd0aCgp
OworCQlpbnQgZW5kID0gYXJyYXlUeXBlLmdldFN0YXJ0UG9zaXRpb24oKSArIGFycmF5VHlwZS5n
ZXRMZW5ndGgoKTsKKwkJaW50IGxhc3RJbmRleCA9IGRpbWVuc2lvbnMuc2l6ZSgpIC0gMTsKKwor
CQlmb3IgKGludCBpID0gMDsgaSA8PSBsYXN0SW5kZXg7IGkrKykgeworCQkJb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uW10gYW5ub3RhdGlvbiA9IGFubm90
YXRpb25zT25EaW1zW2ldOworCQkJRXh0cmFEaW1lbnNpb24gY3VycmVudERpbWVuc2lvbiA9IChF
eHRyYURpbWVuc2lvbikgZGltZW5zaW9ucy5nZXQoaSk7CisJCQlpZiAoYW5ub3RhdGlvbiAhPSBu
dWxsKSB7CisJCQkJZm9yIChpbnQgaiA9IDA7IGogPCBhbm5vdGF0aW9uLmxlbmd0aDsgaisrKSB7
CisJCQkJCUFubm90YXRpb24gYW5ub3QgPSBjb252ZXJ0KGFubm90YXRpb25bal0pOworCQkJCQlj
dXJyZW50RGltZW5zaW9uLmFubm90YXRpb25zKCkuYWRkKGFubm90KTsKKwkJCQl9CisJCQl9CisJ
CQlyZXRyaWV2ZURpbWVuc2lvbkFuZFNldFBvc2l0aW9ucyhzdGFydCwgZW5kLCBjdXJyZW50RGlt
ZW5zaW9uKTsKKwkJCXN0YXJ0ID0gY3VycmVudERpbWVuc2lvbi5nZXRTdGFydFBvc2l0aW9uKCkg
KyBjdXJyZW50RGltZW5zaW9uLmdldExlbmd0aCgpOworCQl9CisJfQorCiAJcHJvdGVjdGVkIFZh
cmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgY29udmVydFRvVmFyaWFibGVEZWNsYXJhdGlvblN0
YXRlbWVudChvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkxvY2FsRGVjbGFy
YXRpb24gbG9jYWxEZWNsYXJhdGlvbikgewogCQlmaW5hbCBWYXJpYWJsZURlY2xhcmF0aW9uRnJh
Z21lbnQgdmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50ID0gY29udmVydFRvVmFyaWFibGVEZWNs
YXJhdGlvbkZyYWdtZW50KGxvY2FsRGVjbGFyYXRpb24pOwogCQlmaW5hbCBWYXJpYWJsZURlY2xh
cmF0aW9uU3RhdGVtZW50IHZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgPSBuZXcgVmFyaWFi
bGVEZWNsYXJhdGlvblN0YXRlbWVudCh0aGlzLmFzdCk7CkBAIC0zMzgzLDE3ICszNDcxLDYgQEAK
IAkJCQkJCXR5cGUuYW5ub3RhdGlvbnMoKS5hZGQoYW5ub3RhdGlvbik7CiAJCQkJCX0KIAkJCQl9
Ci0JCX0KLQl9Ci0JcHJpdmF0ZSB2b2lkIGFubm90YXRlVHlwZShUeXBlIHR5cGUsIG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQW5ub3RhdGlvbltdW10gYW5ub3RhdGlvbnMp
IHsKLQkJaW50IGxldmVsID0gYW5ub3RhdGlvbnMubGVuZ3RoIC0gMTsKLQkJd2hpbGUodHlwZS5p
c0FycmF5VHlwZSgpKSB7Ci0JCQlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlw
ZTsKLQkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQW5ub3RhdGlvbltd
IHR5cGVBbm5vdGF0aW9ucyA9IGFubm90YXRpb25zW2xldmVsLS1dOwotCQkJaWYgKHR5cGVBbm5v
dGF0aW9ucyAhPSBudWxsKSB7Ci0JCQkJYW5ub3RhdGVUeXBlKGFycmF5VHlwZSwgdHlwZUFubm90
YXRpb25zKTsKLQkJCX0KLQkJCXR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwog
CQl9CiAJfQogCkBAIC0zNTQ0LDIzICszNjIxLDcgQEAKIAkJCQl9CiAJCQl9CiAJCQlpZiAoZGlt
ZW5zaW9ucyAhPSAwKSB7Ci0JCQkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFz
dC5Bbm5vdGF0aW9uW11bXSBhbm5vdGF0aW9uc09uRGltZW5zaW9ucyA9IHR5cGVSZWZlcmVuY2Uu
Z2V0QW5ub3RhdGlvbnNPbkRpbWVuc2lvbnMoKTsKLQkJCQl0eXBlID0gdGhpcy5hc3QubmV3QXJy
YXlUeXBlKHR5cGUsIGRpbWVuc2lvbnMpOwotCQkJCXR5cGUuc2V0U291cmNlUmFuZ2Uoc291cmNl
U3RhcnQsIGxlbmd0aCk7Ci0JCQkJQXJyYXlUeXBlIHN1YmFycmF5VHlwZSA9IChBcnJheVR5cGUp
IHR5cGU7Ci0JCQkJaW50IGluZGV4ID0gZGltZW5zaW9ucyAtIDE7Ci0JCQkJd2hpbGUgKGluZGV4
ID4gMCkgewotCQkJCQlpZiAoYW5ub3RhdGlvbnNPbkRpbWVuc2lvbnMgIT0gbnVsbCAmJiAoYW5u
b3RhdGlvbnMgPSBhbm5vdGF0aW9uc09uRGltZW5zaW9uc1tpbmRleF0pICE9IG51bGwpIHsKLQkJ
CQkJCWFubm90YXRlVHlwZShzdWJhcnJheVR5cGUsIGFubm90YXRpb25zKTsKLQkJCQkJfQotCQkJ
CQlzdWJhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBzdWJhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlw
ZSgpOwotCQkJCQlpbnQgZW5kID0gcmV0cmlldmVQcm9wZXJSaWdodEJyYWNrZXRQb3NpdGlvbihp
bmRleCwgc291cmNlU3RhcnQpOwotCQkJCQlzdWJhcnJheVR5cGUuc2V0U291cmNlUmFuZ2Uoc291
cmNlU3RhcnQsIGVuZCAtIHNvdXJjZVN0YXJ0ICsgMSk7Ci0JCQkJCWluZGV4LS07Ci0JCQkJfQot
CQkJCWlmIChhbm5vdGF0aW9uc09uRGltZW5zaW9ucyAhPSBudWxsICYmIChhbm5vdGF0aW9ucyA9
IGFubm90YXRpb25zT25EaW1lbnNpb25zWzBdKSAhPSBudWxsKSB7Ci0JCQkJCWFubm90YXRlVHlw
ZShzdWJhcnJheVR5cGUsIGFubm90YXRpb25zKTsKLQkJCQl9CisJCQkJdHlwZSA9IGNvbnZlcnRU
b0FycmF5KHR5cGVSZWZlcmVuY2UsIHR5cGUsIHNvdXJjZVN0YXJ0LCBsZW5ndGgsIGRpbWVuc2lv
bnMpOwogCQkJCWlmICh0aGlzLnJlc29sdmVCaW5kaW5ncykgewogCQkJCQkvLyBzdG9yZSBrZXlz
IGZvciBpbm5lciB0eXBlcwogCQkJCQljb21wbGV0ZVJlY29yZCgoQXJyYXlUeXBlKSB0eXBlLCB0
eXBlUmVmZXJlbmNlKTsKQEAgLTM4MTIsMzAgKzM4NzMsMTAgQEAKIAogCQkJbGVuZ3RoID0gdHlw
ZVJlZmVyZW5jZS5zb3VyY2VFbmQgLSBzb3VyY2VTdGFydCArIDE7CiAJCQlpZiAoZGltZW5zaW9u
cyAhPSAwKSB7Ci0JCQkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5v
dGF0aW9uW11bXSBhbm5vdGF0aW9uc09uRGltZW5zaW9ucyA9IHR5cGVSZWZlcmVuY2UuZ2V0QW5u
b3RhdGlvbnNPbkRpbWVuc2lvbnMoKTsKLQkJCQl0eXBlID0gdGhpcy5hc3QubmV3QXJyYXlUeXBl
KHR5cGUsIGRpbWVuc2lvbnMpOworCQkJCWludCBlbmQgPSByZXRyaWV2ZUVuZE9mRGltZW5zaW9u
c1Bvc2l0aW9uKHNvdXJjZVN0YXJ0K2xlbmd0aCwgdGhpcy5jb21waWxhdGlvblVuaXRTb3VyY2VM
ZW5ndGgpOworCQkJCXR5cGUgPSBjb252ZXJ0VG9BcnJheSh0eXBlUmVmZXJlbmNlLCB0eXBlLCBz
b3VyY2VTdGFydCwgZW5kICE9IC0xID8gZW5kIC0gc291cmNlU3RhcnQgKyAxIDogbGVuZ3RoLCBk
aW1lbnNpb25zKTsKIAkJCQlpZiAodGhpcy5yZXNvbHZlQmluZGluZ3MpIHsKIAkJCQkJY29tcGxl
dGVSZWNvcmQoKEFycmF5VHlwZSkgdHlwZSwgdHlwZVJlZmVyZW5jZSk7Ci0JCQkJfQotCQkJCWlu
dCBlbmQgPSByZXRyaWV2ZUVuZE9mRGltZW5zaW9uc1Bvc2l0aW9uKHNvdXJjZVN0YXJ0K2xlbmd0
aCwgdGhpcy5jb21waWxhdGlvblVuaXRTb3VyY2VMZW5ndGgpOwotCQkJCWlmIChlbmQgIT0gLTEp
IHsKLQkJCQkJdHlwZS5zZXRTb3VyY2VSYW5nZShzb3VyY2VTdGFydCwgZW5kIC0gc291cmNlU3Rh
cnQgKyAxKTsKLQkJCQl9IGVsc2UgewotCQkJCQl0eXBlLnNldFNvdXJjZVJhbmdlKHNvdXJjZVN0
YXJ0LCBsZW5ndGgpOwotCQkJCX0KLQkJCQlBcnJheVR5cGUgc3ViYXJyYXlUeXBlID0gKEFycmF5
VHlwZSkgdHlwZTsKLQkJCQlpbnQgaW5kZXggPSBkaW1lbnNpb25zIC0gMTsKLQkJCQl3aGlsZSAo
aW5kZXggPiAwKSB7Ci0JCQkJCWlmIChhbm5vdGF0aW9uc09uRGltZW5zaW9ucyAhPSBudWxsICAm
JiAoYW5ub3RhdGlvbnMgPSBhbm5vdGF0aW9uc09uRGltZW5zaW9uc1tpbmRleF0pICE9IG51bGwp
IHsKLQkJCQkJCWFubm90YXRlVHlwZShzdWJhcnJheVR5cGUsIGFubm90YXRpb25zKTsKLQkJCQkJ
fQotCQkJCQlzdWJhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBzdWJhcnJheVR5cGUuZ2V0Q29tcG9u
ZW50VHlwZSgpOwotCQkJCQllbmQgPSByZXRyaWV2ZVByb3BlclJpZ2h0QnJhY2tldFBvc2l0aW9u
KGluZGV4LCBzb3VyY2VTdGFydCk7Ci0JCQkJCXN1YmFycmF5VHlwZS5zZXRTb3VyY2VSYW5nZShz
b3VyY2VTdGFydCwgZW5kIC0gc291cmNlU3RhcnQgKyAxKTsKLQkJCQkJaW5kZXgtLTsKLQkJCQl9
Ci0JCQkJaWYgKGFubm90YXRpb25zT25EaW1lbnNpb25zICE9IG51bGwgICYmIChhbm5vdGF0aW9u
cyA9IGFubm90YXRpb25zT25EaW1lbnNpb25zWzBdKSAhPSBudWxsKSB7Ci0JCQkJCWFubm90YXRl
VHlwZShzdWJhcnJheVR5cGUsIGFubm90YXRpb25zKTsKIAkJCQl9CiAJCQl9CiAJCX0KQEAgLTQ3
NDgsNiArNDc4OSw3IEBACiAJcHJvdGVjdGVkIHZvaWQgcmV0cmlldmVEaW1lbnNpb25BbmRTZXRQ
b3NpdGlvbnMoaW50IHN0YXJ0LCBpbnQgZW5kLCBFeHRyYURpbWVuc2lvbiBkaW0pIHsKIAkJdGhp
cy5zY2FubmVyLnJlc2V0VG8oc3RhcnQsIGVuZCk7CiAJCWludCB0b2tlbjsKKwkJaW50IGNvdW50
ID0gMDsKIAkJYm9vbGVhbiBzdGFydFNldCA9IGZhbHNlOwogCQl0cnkgewogCQkJd2hpbGUoKHRv
a2VuID0gdGhpcy5zY2FubmVyLmdldE5leHRUb2tlbigpKSAhPSBUZXJtaW5hbFRva2Vucy5Ub2tl
bk5hbWVFT0YpICB7CkBAIC00NzU1LDkgKzQ3OTcsMTMgQEAKIAkJCQkJY2FzZSBUZXJtaW5hbFRv
a2Vucy5Ub2tlbk5hbWVXSElURVNQQUNFOgogCQkJCQkJYnJlYWs7CiAJCQkJCWNhc2UgVGVybWlu
YWxUb2tlbnMuVG9rZW5OYW1lUkJSQUNLRVQ6CisJCQkJCQktLWNvdW50OworCQkJCQkJaWYgKGNv
dW50ID4gMCkgYnJlYWs7CiAJCQkJCQlpbnQgZW5kRGltID0gdGhpcy5zY2FubmVyLmN1cnJlbnRQ
b3NpdGlvbiAtIDE7CiAJCQkJCQlkaW0uc2V0U291cmNlUmFuZ2Uoc3RhcnQsIGVuZERpbSAtIHN0
YXJ0ICsgMSk7CiAJCQkJCQlyZXR1cm47CisJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5O
YW1lTEJSQUNLRVQ6CisJCQkJCQljb3VudCsrOwogCQkJCQlkZWZhdWx0OgogCQkJCQkJaWYgKCFz
dGFydFNldCkgewogCQkJCQkJCXN0YXJ0ID0gdGhpcy5zY2FubmVyLnN0YXJ0UG9zaXRpb247CkBA
IC01NjQzLDMyICs1Njg5LDUwIEBACiAJCQkJCXRoaXMuYXN0LmdldEJpbmRpbmdSZXNvbHZlcigp
LnVwZGF0ZUtleSh0eXBlLCBlbGVtZW50VHlwZSk7CiAJCQkJCWZpZWxkRGVjbGFyYXRpb24uc2V0
VHlwZShlbGVtZW50VHlwZSk7CiAJCQkJfSBlbHNlIHsKLQkJCQkJaW50IHN0YXJ0ID0gdHlwZS5n
ZXRTdGFydFBvc2l0aW9uKCk7Ci0JCQkJCUFycmF5VHlwZSBzdWJhcnJheVR5cGUgPSBhcnJheVR5
cGU7Ci0JCQkJCWludCBpbmRleCA9IGV4dHJhRGltZW5zaW9uOwotCQkJCQl3aGlsZSAoaW5kZXgg
PiAwKSB7Ci0JCQkJCQlzdWJhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBzdWJhcnJheVR5cGUuZ2V0
Q29tcG9uZW50VHlwZSgpOwotCQkJCQkJaW5kZXgtLTsKLQkJCQkJfQotCQkJCQlpbnQgZW5kID0g
cmV0cmlldmVQcm9wZXJSaWdodEJyYWNrZXRQb3NpdGlvbihyZW1haW5pbmdEaW1lbnNpb25zLCBz
dGFydCk7Ci0JCQkJCXN1YmFycmF5VHlwZS5zZXRTb3VyY2VSYW5nZShzdGFydCwgZW5kIC0gc3Rh
cnQgKyAxKTsKLQkJCQkJLy8gY3V0IHRoZSBjaGlsZCBsb29zZSBmcm9tIGl0cyBwYXJlbnQgKHdp
dGhvdXQgY3JlYXRpbmcgZ2FyYmFnZSkKLQkJCQkJc3ViYXJyYXlUeXBlLnNldFBhcmVudChudWxs
LCBudWxsKTsKKwkJCQkJQXJyYXlUeXBlIHN1YmFycmF5VHlwZSA9IGV4dHJhY3RTdWJBcnJheVR5
cGUoYXJyYXlUeXBlLCByZW1haW5pbmdEaW1lbnNpb25zLCBleHRyYURpbWVuc2lvbik7CiAJCQkJ
CWZpZWxkRGVjbGFyYXRpb24uc2V0VHlwZShzdWJhcnJheVR5cGUpOwotCQkJCQl1cGRhdGVJbm5l
clBvc2l0aW9ucyhzdWJhcnJheVR5cGUsIHJlbWFpbmluZ0RpbWVuc2lvbnMpOwogCQkJCQl0aGlz
LmFzdC5nZXRCaW5kaW5nUmVzb2x2ZXIoKS51cGRhdGVLZXkodHlwZSwgc3ViYXJyYXlUeXBlKTsK
IAkJCQl9CiAJCQl9IGVsc2UgewogCQkJCWZpZWxkRGVjbGFyYXRpb24uc2V0VHlwZSh0eXBlKTsK
IAkJCX0KIAkJfSBlbHNlIHsKLQkJCWlmICh0eXBlLmlzQXJyYXlUeXBlKCkpIHsKKwkJCWlmICh0
eXBlLmlzQXJyYXlUeXBlKCkgJiYgKHRoaXMuYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCkpIHsK
IAkJCQkvLyB1cGRhdGUgcG9zaXRpb25zIG9mIHRoZSBjb21wb25lbnQgdHlwZXMgb2YgdGhlIGFy
cmF5IHR5cGUKIAkJCQlpbnQgZGltZW5zaW9ucyA9ICgoQXJyYXlUeXBlKSB0eXBlKS5nZXREaW1l
bnNpb25zKCk7CiAJCQkJdXBkYXRlSW5uZXJQb3NpdGlvbnModHlwZSwgZGltZW5zaW9ucyk7CiAJ
CQl9CiAJCQlmaWVsZERlY2xhcmF0aW9uLnNldFR5cGUodHlwZSk7CiAJCX0KKwl9CisKKwkvKiog
ZXh0cmFjdHMgdGhlIHN1YkFycmF5VHlwZSBmb3IgYSBnaXZlbiBkZWNsYXJhdGlvbiBmb3IgQVNU
IGxldmVscyBsZXNzCisJICogQHBhcmFtIGFycmF5VHlwZSBwYXJlbnQgdHlwZQorCSAqIEBwYXJh
bSByZW1haW5pbmdEaW1lbnNpb25zIAorCSAqIEBwYXJhbSBleHRyYURpbWVuc2lvbnMKKwkgKiBA
cmV0dXJuIGFuIEFycmF5VHlwZQorCSAqLworCXByaXZhdGUgQXJyYXlUeXBlIGV4dHJhY3RTdWJB
cnJheVR5cGUoQXJyYXlUeXBlIGFycmF5VHlwZSwgaW50IHJlbWFpbmluZ0RpbWVuc2lvbnMsIGlu
dCBleHRyYURpbWVuc2lvbnMpIHsKKwkJQXJyYXlUeXBlIHN1YkFycmF5VHlwZSA9IGFycmF5VHlw
ZTsKKwkJaW50IHN0YXJ0ID0gc3ViQXJyYXlUeXBlLmdldFN0YXJ0UG9zaXRpb24oKTsKKwkJaWYg
KHRoaXMuYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgeworCQkJd2hpbGUgKGV4dHJhRGltZW5z
aW9ucyA+IDAgKSB7CisJCQkJc3ViQXJyYXlUeXBlID0gKEFycmF5VHlwZSkgc3ViQXJyYXlUeXBl
LmdldENvbXBvbmVudFR5cGUoKTsKKwkJCQlleHRyYURpbWVuc2lvbnMtLTsKKwkJCX0KKwkJCXVw
ZGF0ZUlubmVyUG9zaXRpb25zKHN1YkFycmF5VHlwZSwgcmVtYWluaW5nRGltZW5zaW9ucyk7CisJ
CX0gZWxzZSB7CisJCQlMaXN0IGRpbWVuc2lvbnMgPSBzdWJBcnJheVR5cGUuZGltZW5zaW9ucygp
OworCQkJd2hpbGUgKGV4dHJhRGltZW5zaW9ucyA+IDAgKSB7CisJCQkJZGltZW5zaW9ucy5yZW1v
dmUoZGltZW5zaW9ucy5zaXplKCkgLSAxKTsKKwkJCQlleHRyYURpbWVuc2lvbnMtLTsKKwkJCX0K
KwkJfQorCQlpbnQgZW5kID0gcmV0cmlldmVQcm9wZXJSaWdodEJyYWNrZXRQb3NpdGlvbihyZW1h
aW5pbmdEaW1lbnNpb25zLCBzdGFydCk7CisJCXN1YkFycmF5VHlwZS5zZXRTb3VyY2VSYW5nZShz
dGFydCwgZW5kIC0gc3RhcnQgKyAxKTsKKwkJLy8gY3V0IHRoZSBjaGlsZCBsb29zZSBmcm9tIGl0
cyBwYXJlbnQgKHdpdGhvdXQgY3JlYXRpbmcgZ2FyYmFnZSkKKwkJc3ViQXJyYXlUeXBlLnNldFBh
cmVudChudWxsLCBudWxsKTsKKwkJcmV0dXJuIHN1YkFycmF5VHlwZTsKIAl9CiAKIAlwcm90ZWN0
ZWQgdm9pZCBzZXRUeXBlRm9yTWV0aG9kRGVjbGFyYXRpb24oTWV0aG9kRGVjbGFyYXRpb24gbWV0
aG9kRGVjbGFyYXRpb24sIFR5cGUgdHlwZSwgaW50IGV4dHJhRGltZW5zaW9uKSB7CkBAIC01Njkx
LDE4ICs1NzU1LDcgQEAKIAkJCQkJCWJyZWFrOwogCQkJCQl9CiAJCQkJfSBlbHNlIHsKLQkJCQkJ
aW50IHN0YXJ0ID0gdHlwZS5nZXRTdGFydFBvc2l0aW9uKCk7Ci0JCQkJCUFycmF5VHlwZSBzdWJh
cnJheVR5cGUgPSBhcnJheVR5cGU7Ci0JCQkJCWludCBpbmRleCA9IGV4dHJhRGltZW5zaW9uOwot
CQkJCQl3aGlsZSAoaW5kZXggPiAwKSB7Ci0JCQkJCQlzdWJhcnJheVR5cGUgPSAoQXJyYXlUeXBl
KSBzdWJhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQkJCQkJaW5kZXgtLTsKLQkJCQkJ
fQotCQkJCQlpbnQgZW5kID0gcmV0cmlldmVQcm9wZXJSaWdodEJyYWNrZXRQb3NpdGlvbihyZW1h
aW5pbmdEaW1lbnNpb25zLCBzdGFydCk7Ci0JCQkJCXN1YmFycmF5VHlwZS5zZXRTb3VyY2VSYW5n
ZShzdGFydCwgZW5kIC0gc3RhcnQgKyAxKTsKLQkJCQkJLy8gY3V0IHRoZSBjaGlsZCBsb29zZSBm
cm9tIGl0cyBwYXJlbnQgKHdpdGhvdXQgY3JlYXRpbmcgZ2FyYmFnZSkKLQkJCQkJc3ViYXJyYXlU
eXBlLnNldFBhcmVudChudWxsLCBudWxsKTsKLQkJCQkJdXBkYXRlSW5uZXJQb3NpdGlvbnMoc3Vi
YXJyYXlUeXBlLCByZW1haW5pbmdEaW1lbnNpb25zKTsKKwkJCQkJQXJyYXlUeXBlIHN1YmFycmF5
VHlwZSA9IGV4dHJhY3RTdWJBcnJheVR5cGUoYXJyYXlUeXBlLCByZW1haW5pbmdEaW1lbnNpb25z
LCBleHRyYURpbWVuc2lvbik7CiAJCQkJCXN3aXRjaCh0aGlzLmFzdC5hcGlMZXZlbCkgewogCQkJ
CQkJY2FzZSBBU1QuSkxTMl9JTlRFUk5BTCA6CiAJCQkJCQkJbWV0aG9kRGVjbGFyYXRpb24uaW50
ZXJuYWxTZXRSZXR1cm5UeXBlKHN1YmFycmF5VHlwZSk7CkBAIC01NzUyLDIwICs1ODA1LDkgQEAK
IAkJCQkJdGhpcy5hc3QuZ2V0QmluZGluZ1Jlc29sdmVyKCkudXBkYXRlS2V5KHR5cGUsIGVsZW1l
bnRUeXBlKTsKIAkJCQkJc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbi5zZXRUeXBlKGVsZW1lbnRU
eXBlKTsKIAkJCQl9IGVsc2UgewotCQkJCQlpbnQgc3RhcnQgPSB0eXBlLmdldFN0YXJ0UG9zaXRp
b24oKTsKLQkJCQkJQXJyYXlUeXBlIHN1YmFycmF5VHlwZSA9IGFycmF5VHlwZTsKLQkJCQkJaW50
IGluZGV4ID0gZXh0cmFEaW1lbnNpb247Ci0JCQkJCXdoaWxlIChpbmRleCA+IDApIHsKLQkJCQkJ
CXN1YmFycmF5VHlwZSA9IChBcnJheVR5cGUpIHN1YmFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBl
KCk7Ci0JCQkJCQlpbmRleC0tOwotCQkJCQl9Ci0JCQkJCWludCBlbmQgPSByZXRyaWV2ZVByb3Bl
clJpZ2h0QnJhY2tldFBvc2l0aW9uKHJlbWFpbmluZ0RpbWVuc2lvbnMsIHN0YXJ0KTsKLQkJCQkJ
c3ViYXJyYXlUeXBlLnNldFNvdXJjZVJhbmdlKHN0YXJ0LCBlbmQgLSBzdGFydCArIDEpOwotCQkJ
CQkvLyBjdXQgdGhlIGNoaWxkIGxvb3NlIGZyb20gaXRzIHBhcmVudCAod2l0aG91dCBjcmVhdGlu
ZyBnYXJiYWdlKQotCQkJCQlzdWJhcnJheVR5cGUuc2V0UGFyZW50KG51bGwsIG51bGwpOwotCQkJ
CQl1cGRhdGVJbm5lclBvc2l0aW9ucyhzdWJhcnJheVR5cGUsIHJlbWFpbmluZ0RpbWVuc2lvbnMp
OwotCQkJCQlzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLnNldFR5cGUoc3ViYXJyYXlUeXBlKTsK
KwkJCQkJQXJyYXlUeXBlIHN1YmFycmF5VHlwZSA9IGV4dHJhY3RTdWJBcnJheVR5cGUoYXJyYXlU
eXBlLCByZW1haW5pbmdEaW1lbnNpb25zLCBleHRyYURpbWVuc2lvbik7CiAJCQkJCXRoaXMuYXN0
LmdldEJpbmRpbmdSZXNvbHZlcigpLnVwZGF0ZUtleSh0eXBlLCBzdWJhcnJheVR5cGUpOworCQkJ
CQlzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLnNldFR5cGUoc3ViYXJyYXlUeXBlKTsKIAkJCQl9
CiAJCQl9IGVsc2UgewogCQkJCXNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24uc2V0VHlwZSh0eXBl
KTsKQEAgLTU3ODgsMTggKzU4MzAsNyBAQAogCQkJCQl0aGlzLmFzdC5nZXRCaW5kaW5nUmVzb2x2
ZXIoKS51cGRhdGVLZXkodHlwZSwgZWxlbWVudFR5cGUpOwogCQkJCQl2YXJpYWJsZURlY2xhcmF0
aW9uRXhwcmVzc2lvbi5zZXRUeXBlKGVsZW1lbnRUeXBlKTsKIAkJCQl9IGVsc2UgewotCQkJCQlp
bnQgc3RhcnQgPSB0eXBlLmdldFN0YXJ0UG9zaXRpb24oKTsKLQkJCQkJQXJyYXlUeXBlIHN1YmFy
cmF5VHlwZSA9IGFycmF5VHlwZTsKLQkJCQkJaW50IGluZGV4ID0gZXh0cmFEaW1lbnNpb247Ci0J
CQkJCXdoaWxlIChpbmRleCA+IDApIHsKLQkJCQkJCXN1YmFycmF5VHlwZSA9IChBcnJheVR5cGUp
IHN1YmFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCQkJCQlpbmRleC0tOwotCQkJCQl9
Ci0JCQkJCWludCBlbmQgPSByZXRyaWV2ZVByb3BlclJpZ2h0QnJhY2tldFBvc2l0aW9uKHJlbWFp
bmluZ0RpbWVuc2lvbnMsIHN0YXJ0KTsKLQkJCQkJc3ViYXJyYXlUeXBlLnNldFNvdXJjZVJhbmdl
KHN0YXJ0LCBlbmQgLSBzdGFydCArIDEpOwotCQkJCQkvLyBjdXQgdGhlIGNoaWxkIGxvb3NlIGZy
b20gaXRzIHBhcmVudCAod2l0aG91dCBjcmVhdGluZyBnYXJiYWdlKQotCQkJCQlzdWJhcnJheVR5
cGUuc2V0UGFyZW50KG51bGwsIG51bGwpOwotCQkJCQl1cGRhdGVJbm5lclBvc2l0aW9ucyhzdWJh
cnJheVR5cGUsIHJlbWFpbmluZ0RpbWVuc2lvbnMpOworCQkJCQlBcnJheVR5cGUgc3ViYXJyYXlU
eXBlID0gZXh0cmFjdFN1YkFycmF5VHlwZShhcnJheVR5cGUsIHJlbWFpbmluZ0RpbWVuc2lvbnMs
IGV4dHJhRGltZW5zaW9uKTsKIAkJCQkJdmFyaWFibGVEZWNsYXJhdGlvbkV4cHJlc3Npb24uc2V0
VHlwZShzdWJhcnJheVR5cGUpOwogCQkJCQl0aGlzLmFzdC5nZXRCaW5kaW5nUmVzb2x2ZXIoKS51
cGRhdGVLZXkodHlwZSwgc3ViYXJyYXlUeXBlKTsKIAkJCQl9CkBAIC01ODI0LDE4ICs1ODU1LDcg
QEAKIAkJCQkJdGhpcy5hc3QuZ2V0QmluZGluZ1Jlc29sdmVyKCkudXBkYXRlS2V5KHR5cGUsIGVs
ZW1lbnRUeXBlKTsKIAkJCQkJdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudC5zZXRUeXBlKGVs
ZW1lbnRUeXBlKTsKIAkJCQl9IGVsc2UgewotCQkJCQlpbnQgc3RhcnQgPSB0eXBlLmdldFN0YXJ0
UG9zaXRpb24oKTsKLQkJCQkJQXJyYXlUeXBlIHN1YmFycmF5VHlwZSA9IGFycmF5VHlwZTsKLQkJ
CQkJaW50IGluZGV4ID0gZXh0cmFEaW1lbnNpb247Ci0JCQkJCXdoaWxlIChpbmRleCA+IDApIHsK
LQkJCQkJCXN1YmFycmF5VHlwZSA9IChBcnJheVR5cGUpIHN1YmFycmF5VHlwZS5nZXRDb21wb25l
bnRUeXBlKCk7Ci0JCQkJCQlpbmRleC0tOwotCQkJCQl9Ci0JCQkJCWludCBlbmQgPSByZXRyaWV2
ZVByb3BlclJpZ2h0QnJhY2tldFBvc2l0aW9uKHJlbWFpbmluZ0RpbWVuc2lvbnMsIHN0YXJ0KTsK
LQkJCQkJc3ViYXJyYXlUeXBlLnNldFNvdXJjZVJhbmdlKHN0YXJ0LCBlbmQgLSBzdGFydCArIDEp
OwotCQkJCQkvLyBjdXQgdGhlIGNoaWxkIGxvb3NlIGZyb20gaXRzIHBhcmVudCAod2l0aG91dCBj
cmVhdGluZyBnYXJiYWdlKQotCQkJCQlzdWJhcnJheVR5cGUuc2V0UGFyZW50KG51bGwsIG51bGwp
OwotCQkJCQl1cGRhdGVJbm5lclBvc2l0aW9ucyhzdWJhcnJheVR5cGUsIHJlbWFpbmluZ0RpbWVu
c2lvbnMpOworCQkJCQlBcnJheVR5cGUgc3ViYXJyYXlUeXBlID0gZXh0cmFjdFN1YkFycmF5VHlw
ZShhcnJheVR5cGUsIHJlbWFpbmluZ0RpbWVuc2lvbnMsIGV4dHJhRGltZW5zaW9uKTsKIAkJCQkJ
dmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudC5zZXRUeXBlKHN1YmFycmF5VHlwZSk7CiAJCQkJ
CXRoaXMuYXN0LmdldEJpbmRpbmdSZXNvbHZlcigpLnVwZGF0ZUtleSh0eXBlLCBzdWJhcnJheVR5
cGUpOwogCQkJCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNs
aXBzZS9qZHQvY29yZS9kb20vQVNUTWF0Y2hlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUv
ZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RNYXRjaGVyLmphdmEKaW5kZXggZjMzYzVl
Mi4uMjk3MDJkNiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xp
cHNlL2pkdC9jb3JlL2RvbS9BU1RNYXRjaGVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RNYXRjaGVyLmphdmEKQEAgLTMzMSw4
ICszMzEsMTEgQEAKIAkJfQogCQlBcnJheVR5cGUgbyA9IChBcnJheVR5cGUpIG90aGVyOwogCQlp
bnQgbGV2ZWwgPSBub2RlLmdldEFTVCgpLmFwaUxldmVsOwotCQlyZXR1cm4gc2FmZVN1YnRyZWVN
YXRjaChub2RlLmdldENvbXBvbmVudFR5cGUoKSwgby5nZXRDb21wb25lbnRUeXBlKCkpCi0JCQkJ
JiYgKGxldmVsID49IEFTVC5KTFM4ID8gc2FmZVN1YnRyZWVMaXN0TWF0Y2gobm9kZS5hbm5vdGF0
aW9ucygpLCBvLmFubm90YXRpb25zKCkpIDogdHJ1ZSk7CisJCWlmIChsZXZlbCA8IEFTVC5KTFM4
KSB7CisJCQlyZXR1cm4gc2FmZVN1YnRyZWVNYXRjaChub2RlLmdldENvbXBvbmVudFR5cGUoKSwg
by5nZXRDb21wb25lbnRUeXBlKCkpOworCQl9CisJCXJldHVybiBzYWZlU3VidHJlZU1hdGNoKG5v
ZGUuZ2V0RWxlbWVudFR5cGUoKSwgby5nZXRFbGVtZW50VHlwZSgpKQorCQkJCSYmIHNhZmVTdWJ0
cmVlTGlzdE1hdGNoKG5vZGUuZGltZW5zaW9ucygpLCBvLmRpbWVuc2lvbnMoKSk7CiAJfQogCiAJ
LyoqCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0
L2NvcmUvZG9tL0FycmF5VHlwZS5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL2RvbS9BcnJheVR5cGUuamF2YQppbmRleCBjZDFkZDgzLi5kNjJmYmE5
IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2Nv
cmUvZG9tL0FycmF5VHlwZS5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcv
ZWNsaXBzZS9qZHQvY29yZS9kb20vQXJyYXlUeXBlLmphdmEKQEAgLTIxLDcgKzIxLDkgQEAKIC8q
KgogICogVHlwZSBub2RlIGZvciBhbiBhcnJheSB0eXBlLgogICogPHA+Ci0gKiBBcnJheSB0eXBl
cyBhcmUgZXhwcmVzc2VkIGluIGEgcmVjdXJzaXZlIG1hbm5lciwgb25lIGRpbWVuc2lvbiBhdCBh
IHRpbWUuCisgKiBBcnJheSB0eXBlcyBhcmUgZXhwcmVzc2VkIGluIGEgcmVjdXJzaXZlIG1hbm5l
ciwgb25lIGRpbWVuc2lvbiBhdCBhIHRpbWUuIEZyb20gSkxTOCBvbndhcmRzLAorICogaW5zdGVh
ZCBvZiB0aGlzIHJlY3Vyc2l2ZSBtYW5uZXIsIGFycmF5cyBhcmUgcmVwcmVzZW50ZWQgYnkgYSBi
YXNlIGVsZW1lbnQgdHlwZSAod2hpY2ggY2Fubm90CisgKiBiZSBhbiBBcnJheSB0eXBlKSBhbmQg
YSBsaXN0IG9mIGRpbWVuc2lvbnMgZWFjaCBvZiB3aGljaCBtYXkgaGF2ZSBhIGxpc3Qgb2YgYW5u
b3RhdGlvbnMuCiAgKiA8L3A+CiAgKiA8cHJlPgogICogQXJyYXlUeXBlOgpAQCAtMzEsNyArMzMs
NyBAQAogICogQHNpbmNlIDIuMAogICogQG5vaW5zdGFudGlhdGUgVGhpcyBjbGFzcyBpcyBub3Qg
aW50ZW5kZWQgdG8gYmUgaW5zdGFudGlhdGVkIGJ5IGNsaWVudHMuCiAgKi8KLXB1YmxpYyBjbGFz
cyBBcnJheVR5cGUgZXh0ZW5kcyBBbm5vdGF0YWJsZVR5cGUgeworcHVibGljIGNsYXNzIEFycmF5
VHlwZSBleHRlbmRzIFR5cGUgewogCiAJLyoqCiAJICogVGhlICJjb21wb25lbnRUeXBlIiBzdHJ1
Y3R1cmFsIHByb3BlcnR5IG9mIHRoaXMgbm9kZSB0eXBlIChjaGlsZCB0eXBlOiB7QGxpbmsgVHlw
ZX0pLgpAQCAtNDEsMTIgKzQzLDE4IEBACiAJCW5ldyBDaGlsZFByb3BlcnR5RGVzY3JpcHRvcihB
cnJheVR5cGUuY2xhc3MsICJjb21wb25lbnRUeXBlIiwgVHlwZS5jbGFzcywgTUFOREFUT1JZLCBD
WUNMRV9SSVNLKTsgLy8kTk9OLU5MUy0xJAogCiAJLyoqCi0JICogVGhlICJhbm5vdGF0aW9ucyIg
c3RydWN0dXJhbCBwcm9wZXJ0eSBvZiB0aGlzIG5vZGUgdHlwZSAoZWxlbWVudCB0eXBlOiB7QGxp
bmsgQW5ub3RhdGlvbn0pLgorCSAqIFRoZSAiZWxlbWVudFR5cGUiIHN0cnVjdHVyYWwgcHJvcGVy
dHkgb2YgdGhpcyBub2RlIHR5cGUgKGNoaWxkIHR5cGU6IHtAbGluayBUeXBlfSkuCiAJICogQHNp
bmNlIDMuOSBCRVRBX0pBVkE4CiAJICovCi0JcHVibGljIHN0YXRpYyBmaW5hbCBDaGlsZExpc3RQ
cm9wZXJ0eURlc2NyaXB0b3IgQU5OT1RBVElPTlNfUFJPUEVSVFkgPQotCQkJaW50ZXJuYWxBbm5v
dGF0aW9uc1Byb3BlcnR5RmFjdG9yeShBcnJheVR5cGUuY2xhc3MpOworCXB1YmxpYyBzdGF0aWMg
ZmluYWwgQ2hpbGRQcm9wZXJ0eURlc2NyaXB0b3IgRUxFTUVOVF9UWVBFX1BST1BFUlRZID0KKwkJ
CW5ldyBDaGlsZFByb3BlcnR5RGVzY3JpcHRvcihBcnJheVR5cGUuY2xhc3MsICJlbGVtZW50VHlw
ZSIsIFR5cGUuY2xhc3MsIE1BTkRBVE9SWSwgQ1lDTEVfUklTSyk7IC8vJE5PTi1OTFMtMSQJCiAJ
CisJLyoqCisJICogVGhlICJkaW1lbnNpb25zIiBzdHJ1Y3R1cmFsIHByb3BlcnR5IG9mIHRoaXMg
bm9kZSB0eXBlIChlbGVtZW50IHR5cGU6IHtAbGluayBBbm5vdGF0aW9ufSkuCisJICogQHNpbmNl
IDMuOSBCRVRBX0pBVkE4CisJICovCisJcHVibGljIHN0YXRpYyBmaW5hbCBDaGlsZExpc3RQcm9w
ZXJ0eURlc2NyaXB0b3IgRElNRU5TSU9OU19QUk9QRVJUWSA9CisJCQluZXcgQ2hpbGRMaXN0UHJv
cGVydHlEZXNjcmlwdG9yKEFycmF5VHlwZS5jbGFzcywgImRpbWVuc2lvbnMiLCBFeHRyYURpbWVu
c2lvbi5jbGFzcywgQ1lDTEVfUklTSyk7IC8vJE5PTi1OTFMtMSQJCiAJLyoqCiAJICogQSBsaXN0
IG9mIHByb3BlcnR5IGRlc2NyaXB0b3JzIChlbGVtZW50IHR5cGU6CiAJICoge0BsaW5rIFN0cnVj
dHVyYWxQcm9wZXJ0eURlc2NyaXB0b3J9KSwKQEAgLTY5LDggKzc3LDggQEAKIAogCQlwcm9wZXJ0
eUxpc3QgPSBuZXcgQXJyYXlMaXN0KDMpOwogCQljcmVhdGVQcm9wZXJ0eUxpc3QoQXJyYXlUeXBl
LmNsYXNzLCBwcm9wZXJ0eUxpc3QpOwotCQlhZGRQcm9wZXJ0eShDT01QT05FTlRfVFlQRV9QUk9Q
RVJUWSwgcHJvcGVydHlMaXN0KTsKLQkJYWRkUHJvcGVydHkoQU5OT1RBVElPTlNfUFJPUEVSVFks
IHByb3BlcnR5TGlzdCk7CisJCWFkZFByb3BlcnR5KEVMRU1FTlRfVFlQRV9QUk9QRVJUWSwgcHJv
cGVydHlMaXN0KTsKKwkJYWRkUHJvcGVydHkoRElNRU5TSU9OU19QUk9QRVJUWSwgcHJvcGVydHlM
aXN0KTsKIAkJUFJPUEVSVFlfREVTQ1JJUFRPUlNfOF8wID0gcmVhcFByb3BlcnR5TGlzdChwcm9w
ZXJ0eUxpc3QpOwogCX0KIApAQCAtOTgsOSArMTA2LDI1IEBACiAKIAkvKioKIAkgKiBUaGUgY29t
cG9uZW50IHR5cGU7IGxhemlseSBpbml0aWFsaXplZDsgZGVmYXVsdHMgdG8gYSBzaW1wbGUgdHlw
ZSB3aXRoCi0JICogYW4gdW5zcGVjaWZpZWQsIGJ1dCBsZWdhbCwgbmFtZS4KKwkgKiBhbiB1bnNw
ZWNpZmllZCwgYnV0IGxlZ2FsLCBuYW1lLiBOdWxsIGZyb20gSkxTOCBvbndhcmRzLgogCSAqLwog
CXByaXZhdGUgVHlwZSBjb21wb25lbnRUeXBlID0gbnVsbDsKKworCS8qKgorCSAqIFRoZSBlbGVt
ZW50IHR5cGU7IGxhemlseSBpbml0aWFsaXplZDsgZGVmYXVsdHMgdG8gYSBzaW1wbGUgdHlwZSB3
aXRoCisJICogYW4gdW5zcGVjaWZpZWQsIGJ1dCBsZWdhbCwgbmFtZS4KKwkgKi8KKwlwcml2YXRl
IFR5cGUgZWxlbWVudFR5cGUgPSBudWxsOworCisJLyoqCisJICogTGlzdCBvZiBleHRyYSBkaW1l
bnNpb25zIHRoaXMgbm9kZSBoYXMgd2l0aCBvcHRpb25hbCBhbm5vdGF0aW9ucworCSAqIChlbGVt
ZW50IHR5cGU6IHtAbGluayBFeHRyYURpbWVuc2lvbn0pLgorCSAqIE51bGwgYmVmb3JlIEpMUzgu
IEFkZGVkIGluIEpMUzg7IGRlZmF1bHRzIHRvIGEgbGlzdCB3aXRoIG9uZSBlbGVtZW50CisJICog
KHNlZSBjb25zdHJ1Y3RvcikuCisJICogCisJICogQHNpbmNlIDMuOSBCRVRBX0pBVkE4CisJICov
CisJcHJpdmF0ZSBBU1ROb2RlLk5vZGVMaXN0IGRpbWVuc2lvbnMgPSBudWxsOwogCiAJLyoqCiAJ
ICogQ3JlYXRlcyBhIG5ldyB1bnBhcmVudGVkIG5vZGUgZm9yIGFuIGFycmF5IHR5cGUgb3duZWQg
YnkgdGhlIGdpdmVuIEFTVC4KQEAgLTExMywxNCArMTM3LDMxIEBACiAJICovCiAJQXJyYXlUeXBl
KEFTVCBhc3QpIHsKIAkJc3VwZXIoYXN0KTsKKwkJaWYgKGFzdC5hcGlMZXZlbCA+PSBBU1QuSkxT
OCkgeworCQkJdGhpcy5kaW1lbnNpb25zID0gbmV3IEFTVE5vZGUuTm9kZUxpc3QoRElNRU5TSU9O
U19QUk9QRVJUWSk7CisJCQkvLyBzaW5nbGUgZGltZW5zaW9uIGFycmF5IGlzIHRoZSBkZWZhdWx0
CisJCQl0aGlzLmRpbWVuc2lvbnMoKS5hZGQodGhpcy5hc3QubmV3RXh0cmFEaW1lbnNpb24oKSk7
CisJCX0KIAl9CiAKLQkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKLQkgKiBNZXRo
b2QgZGVjbGFyZWQgb24gQW5ub3RhdGFibGVUeXBlLgotCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZB
OAotCSAqLwotCWZpbmFsIENoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBpbnRlcm5hbEFubm90
YXRpb25zUHJvcGVydHkoKSB7Ci0JCXJldHVybiBBTk5PVEFUSU9OU19QUk9QRVJUWTsKKwkvKioK
KwkqIENyZWF0ZXMgYSBuZXcgdW5wYXJlbnRlZCBub2RlIGZvciBhbiBhcnJheSB0eXBlIG93bmVk
IGJ5IHRoZSBnaXZlbiBBU1QuCisJKiA8cD4KKwkqIE4uQi4gVGhpcyBjb25zdHJ1Y3RvciBpcyBw
cml2YXRlLgorCSogPC9wPgorCSoKKwkqIEBwYXJhbSBhc3QgdGhlIEFTVCB0aGF0IGlzIHRvIG93
biB0aGlzIG5vZGUKKwkqIEBwYXJhbSBkaW1lbnNpb25zIG5vIG9mIGRpbWVuc2lvbnMgLSBjYW4g
YmUgemVybworCSoKKwkqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAorCSovCisJcHJpdmF0ZSBBcnJh
eVR5cGUoQVNUIGFzdCwgaW50IGRpbWVuc2lvbnMpIHsKKwkJc3VwZXIoYXN0KTsKKwkJdW5zdXBw
b3J0ZWRJbjJfM180KCk7CisJCXRoaXMuZGltZW5zaW9ucyA9IG5ldyBBU1ROb2RlLk5vZGVMaXN0
KERJTUVOU0lPTlNfUFJPUEVSVFkpOworCQlmb3IgKGludCBpID0gMDsgaSA8IGRpbWVuc2lvbnM7
ICsraSkgeworCQkJdGhpcy5kaW1lbnNpb25zKCkuYWRkKHRoaXMuYXN0Lm5ld0V4dHJhRGltZW5z
aW9uKCkpOworCQl9CiAJfQogCiAJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCkBA
IC0xMzQsOCArMTc1LDggQEAKIAkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KIAkgKi8K
IAlmaW5hbCBMaXN0IGludGVybmFsR2V0Q2hpbGRMaXN0UHJvcGVydHkoQ2hpbGRMaXN0UHJvcGVy
dHlEZXNjcmlwdG9yIHByb3BlcnR5KSB7Ci0JCWlmIChwcm9wZXJ0eSA9PSBBTk5PVEFUSU9OU19Q
Uk9QRVJUWSkgewotCQkJcmV0dXJuIGFubm90YXRpb25zKCk7CisJCWlmIChwcm9wZXJ0eSA9PSBE
SU1FTlNJT05TX1BST1BFUlRZKSB7CisJCQlyZXR1cm4gZGltZW5zaW9ucygpOwogCQl9CiAJCS8v
IGFsbG93IGRlZmF1bHQgaW1wbGVtZW50YXRpb24gdG8gZmxhZyB0aGUgZXJyb3IKIAkJcmV0dXJu
IHN1cGVyLmludGVybmFsR2V0Q2hpbGRMaXN0UHJvcGVydHkocHJvcGVydHkpOwpAQCAtMTUwLDYg
KzE5MSwxMyBAQAogCQkJCXJldHVybiBnZXRDb21wb25lbnRUeXBlKCk7CiAJCQl9IGVsc2Ugewog
CQkJCXNldENvbXBvbmVudFR5cGUoKFR5cGUpIGNoaWxkKTsKKwkJCQlyZXR1cm4gbnVsbDsKKwkJ
CX0KKwkJfSBlbHNlIGlmIChwcm9wZXJ0eSA9PSBFTEVNRU5UX1RZUEVfUFJPUEVSVFkpIHsKKwkJ
CWlmIChnZXQpIHsKKwkJCQlyZXR1cm4gZ2V0RWxlbWVudFR5cGUoKTsKKwkJCX0gZWxzZSB7CisJ
CQkJc2V0RWxlbWVudFR5cGUoKFR5cGUpIGNoaWxkKTsKIAkJCQlyZXR1cm4gbnVsbDsKIAkJCX0K
IAkJfQpAQCAtMTY4LDEzICsyMTYsMTcgQEAKIAkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9k
ZS4KIAkgKi8KIAlBU1ROb2RlIGNsb25lMChBU1QgdGFyZ2V0KSB7Ci0JCUFycmF5VHlwZSByZXN1
bHQgPSBuZXcgQXJyYXlUeXBlKHRhcmdldCk7Ci0JCXJlc3VsdC5zZXRTb3VyY2VSYW5nZShnZXRT
dGFydFBvc2l0aW9uKCksIGdldExlbmd0aCgpKTsKLQkJcmVzdWx0LnNldENvbXBvbmVudFR5cGUo
KFR5cGUpIGdldENvbXBvbmVudFR5cGUoKS5jbG9uZSh0YXJnZXQpKTsKLQkJaWYgKHRoaXMuYXN0
LmFwaUxldmVsID49IEFTVC5KTFM4KSB7Ci0JCQlyZXN1bHQuYW5ub3RhdGlvbnMoKS5hZGRBbGwo
Ci0JCQkJCUFTVE5vZGUuY29weVN1YnRyZWVzKHRhcmdldCwgYW5ub3RhdGlvbnMoKSkpOworCQlB
cnJheVR5cGUgcmVzdWx0OworCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwgPCBBU1QuSkxTOCkgewor
CQkJcmVzdWx0ID0gbmV3IEFycmF5VHlwZSh0YXJnZXQpOworCQkJcmVzdWx0LnNldENvbXBvbmVu
dFR5cGUoKFR5cGUpIGdldENvbXBvbmVudFR5cGUoKS5jbG9uZSh0YXJnZXQpKTsJCQkKKwkJfSBl
bHNlIHsKKwkJCXJlc3VsdCA9IG5ldyBBcnJheVR5cGUodGFyZ2V0LCAwKTsKKwkJCXJlc3VsdC5z
ZXRFbGVtZW50VHlwZSgoVHlwZSkgZ2V0RWxlbWVudFR5cGUoKS5jbG9uZSh0YXJnZXQpKTsKKwkJ
CXJlc3VsdC5kaW1lbnNpb25zKCkuYWRkQWxsKAorCQkJCQlBU1ROb2RlLmNvcHlTdWJ0cmVlcyh0
YXJnZXQsIGRpbWVuc2lvbnMoKSkpOwogCQl9CisJCXJlc3VsdC5zZXRTb3VyY2VSYW5nZShnZXRT
dGFydFBvc2l0aW9uKCksIGdldExlbmd0aCgpKTsKIAkJcmV0dXJuIHJlc3VsdDsKIAl9CiAKQEAg
LTE5Myw5ICsyNDUsMTEgQEAKIAkJYm9vbGVhbiB2aXNpdENoaWxkcmVuID0gdmlzaXRvci52aXNp
dCh0aGlzKTsKIAkJaWYgKHZpc2l0Q2hpbGRyZW4pIHsKIAkJCS8vIHZpc2l0IGNoaWxkcmVuIGlu
IG5vcm1hbCBsZWZ0IHRvIHJpZ2h0IHJlYWRpbmcgb3JkZXIKLQkJCWFjY2VwdENoaWxkKHZpc2l0
b3IsIGdldENvbXBvbmVudFR5cGUoKSk7Ci0JCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwgPj0gQVNU
LkpMUzgpIHsKLQkJCQlhY2NlcHRDaGlsZHJlbih2aXNpdG9yLCB0aGlzLmFubm90YXRpb25zKTsK
KwkJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCA8IEFTVC5KTFM4KSB7CisJCQkJYWNjZXB0Q2hpbGQo
dmlzaXRvciwgZ2V0Q29tcG9uZW50VHlwZSgpKTsJCQkJCisJCQl9IGVsc2UgeworCQkJCWFjY2Vw
dENoaWxkKHZpc2l0b3IsIGdldEVsZW1lbnRUeXBlKCkpOworCQkJCWFjY2VwdENoaWxkcmVuKHZp
c2l0b3IsIHRoaXMuZGltZW5zaW9ucyk7CiAJCQl9CiAJCX0KIAkJdmlzaXRvci5lbmRWaXNpdCh0
aGlzKTsKQEAgLTIwNiw4ICsyNjAsMTAgQEAKIAkgKiBtYXkgYmUgYW5vdGhlciBhcnJheSB0eXBl
LgogCSAqCiAJICogQHJldHVybiB0aGUgY29tcG9uZW50IHR5cGUgbm9kZQorCSAqIEBkZXByZWNh
dGVkIGZyb20gSkxTOCBhbmQgbGF0ZXIsIHRoZSByZWN1cnNpdmUgc3RydWN0dXJlIGlzIG5vdCB2
YWxpZAogCSAqLwogCXB1YmxpYyBUeXBlIGdldENvbXBvbmVudFR5cGUoKSB7CisJCXN1cHBvcnRl
ZE9ubHlJbjJfM180KCk7CiAJCWlmICh0aGlzLmNvbXBvbmVudFR5cGUgPT0gbnVsbCkgewogCQkJ
Ly8gbGF6eSBpbml0IG11c3QgYmUgdGhyZWFkLXNhZmUgZm9yIHJlYWRlcnMKIAkJCXN5bmNocm9u
aXplZCAodGhpcykgewpAQCAtMjMyLDggKzI4OCwxMCBAQAogCSAqIDxsaT50aGUgbm9kZSBhbHJl
YWR5IGhhcyBhIHBhcmVudDwvbGk+CiAJICogPGxpPmEgY3ljbGUgaW4gd291bGQgYmUgY3JlYXRl
ZDwvbGk+CiAJICogPC91bD4KKwkgKiBAZGVwcmVjYXRlZCBmcm9tIEpMUzggYW5kIGxhdGVyLCB0
aGUgcmVjdXJzaXZlIHN0cnVjdHVyZSBpcyBub3QgdmFsaWQKIAkgKi8KIAlwdWJsaWMgdm9pZCBz
ZXRDb21wb25lbnRUeXBlKFR5cGUgY29tcG9uZW50VHlwZSkgeworCQlzdXBwb3J0ZWRPbmx5SW4y
XzNfNCgpOwogCQlpZiAoY29tcG9uZW50VHlwZSA9PSBudWxsKSB7CiAJCQl0aHJvdyBuZXcgSWxs
ZWdhbEFyZ3VtZW50RXhjZXB0aW9uKCk7CiAJCX0KQEAgLTI0OCw0MyArMzA2LDExOCBAQAogCSAq
IG5ldmVyIGFuIGFycmF5IHR5cGUuCiAJICogPHA+CiAJICogVGhpcyBpcyBhIGNvbnZlbmllbmNl
IG1ldGhvZCB0aGF0IGRlc2NlbmRzIGEgY2hhaW4gb2YgbmVzdGVkIGFycmF5IHR5cGVzCi0JICog
dW50aWwgaXQgcmVhY2hlcyBhIG5vbi1hcnJheSB0eXBlLgorCSAqIHVudGlsIGl0IHJlYWNoZXMg
YSBub24tYXJyYXkgdHlwZSB1bnRpbCBKTFM0LiBGcm9tIEpMUzggYW5kIGxhdGVyLCB0aGlzIHJl
dHVybnMgdGhlCisJICogZWxlbWVudCB0eXBlIGRpcmVjdGx5LgogCSAqIDwvcD4KIAkgKgotCSAq
IEByZXR1cm4gdGhlIGNvbXBvbmVudCB0eXBlIG5vZGUKKwkgKiBAcmV0dXJuIHRoZSBlbGVtZW50
IHR5cGUgbm9kZQogCSAqLwogCXB1YmxpYyBUeXBlIGdldEVsZW1lbnRUeXBlKCkgewotCQlUeXBl
IHQgPSBnZXRDb21wb25lbnRUeXBlKCk7Ci0JCXdoaWxlICh0LmlzQXJyYXlUeXBlKCkpIHsKLQkJ
CXQgPSAoKEFycmF5VHlwZSkgdCkuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlpZiAodGhpcy5hc3Qu
YXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQlUeXBlIHQgPSBnZXRDb21wb25lbnRUeXBlKCk7
CisJCQl3aGlsZSAodC5pc0FycmF5VHlwZSgpKSB7CisJCQkJdCA9ICgoQXJyYXlUeXBlKSB0KS5n
ZXRDb21wb25lbnRUeXBlKCk7CisJCQl9CisJCQlyZXR1cm4gdDsKIAkJfQotCQlyZXR1cm4gdDsK
KwkJaWYgKHRoaXMuZWxlbWVudFR5cGUgPT0gbnVsbCkgeworCQkJLy8gbGF6eSBpbml0IG11c3Qg
YmUgdGhyZWFkLXNhZmUgZm9yIHJlYWRlcnMKKwkJCXN5bmNocm9uaXplZCAodGhpcykgeworCQkJ
CWlmICh0aGlzLmVsZW1lbnRUeXBlID09IG51bGwpIHsKKwkJCQkJcHJlTGF6eUluaXQoKTsKKwkJ
CQkJdGhpcy5lbGVtZW50VHlwZSA9IG5ldyBTaW1wbGVUeXBlKHRoaXMuYXN0KTsKKwkJCQkJcG9z
dExhenlJbml0KHRoaXMuZWxlbWVudFR5cGUsIEVMRU1FTlRfVFlQRV9QUk9QRVJUWSk7CisJCQkJ
fQorCQkJfQorCQl9CisJCXJldHVybiB0aGlzLmVsZW1lbnRUeXBlOworCX0KKworCS8qKgorCSAq
IFNldHMgdGhlIGVsZW1lbnQgdHlwZSBvZiB0aGUgYXJyYXkuCisJICoKKwkgKiBAcGFyYW0gY2hp
bGQgdGhlIG5ldyB0eXBlCisJICogQGV4Y2VwdGlvbiBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24g
aWY6CisJICogPHVsPgorCSAqIDxsaT50aGUgbm9kZSBiZWxvbmdzIHRvIGEgZGlmZmVyZW50IEFT
VDwvbGk+CisJICogPGxpPnRoZSBub2RlIGFscmVhZHkgaGFzIGEgcGFyZW50PC9saT4KKwkgKiA8
bGk+dGhlIG5vZGUgaXMgYW4gYXJyYXkgdHlwZTwvbGk+CisJICogPC91bD4KKwkgKiBAc2luY2Ug
My45IEJFVEFfSkFWQTgKKwkgKi8KKwlwdWJsaWMgdm9pZCBzZXRFbGVtZW50VHlwZShUeXBlIGNo
aWxkKSB7CisJCWlmIChjaGlsZCA9PSBudWxsIHx8IGNoaWxkIGluc3RhbmNlb2YgQXJyYXlUeXBl
KSB7CisJCQl0aHJvdyBuZXcgSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uKCk7CisJCX0KKwkJQVNU
Tm9kZSBvbGRDaGlsZCA9IHRoaXMuZWxlbWVudFR5cGU7CisJCXByZVJlcGxhY2VDaGlsZChvbGRD
aGlsZCwgY2hpbGQsIEVMRU1FTlRfVFlQRV9QUk9QRVJUWSk7CisJCXRoaXMuZWxlbWVudFR5cGUg
PSBjaGlsZDsKKwkJcG9zdFJlcGxhY2VDaGlsZChvbGRDaGlsZCwgY2hpbGQsIEVMRU1FTlRfVFlQ
RV9QUk9QRVJUWSk7CiAJfQogCiAJLyoqCiAJICogUmV0dXJucyB0aGUgbnVtYmVyIG9mIGRpbWVu
c2lvbnMgaW4gdGhpcyBhcnJheSB0eXBlLgogCSAqIDxwPgogCSAqIFRoaXMgaXMgYSBjb252ZW5p
ZW5jZSBtZXRob2QgdGhhdCBkZXNjZW5kcyBhIGNoYWluIG9mIG5lc3RlZCBhcnJheSB0eXBlcwot
CSAqIHVudGlsIGl0IHJlYWNoZXMgYSBub24tYXJyYXkgdHlwZS4KKwkgKiB1bnRpbCBpdCByZWFj
aGVzIGEgbm9uLWFycmF5IHR5cGUgKHVudGlsIEpMUzQpLiBGcm9tIEpMUzggb253YXJkcywgCisJ
ICogdGhpcyByZXR1cm5zIHRoZSBzaXplIG9mIHRoZSBkaW1lbnNpb25zIGxpc3QuCiAJICogPC9w
PgogCSAqCiAJICogQHJldHVybiB0aGUgbnVtYmVyIG9mIGRpbWVuc2lvbnMgKGFsd2F5cyBwb3Np
dGl2ZSkKIAkgKi8KIAlwdWJsaWMgaW50IGdldERpbWVuc2lvbnMoKSB7Ci0JCVR5cGUgdCA9IGdl
dENvbXBvbmVudFR5cGUoKTsKLQkJaW50IGRpbWVuc2lvbnMgPSAxOyAvLyBhbHdheXMgaW5jbHVk
ZSB0aGlzIGFycmF5IHR5cGUKLQkJd2hpbGUgKHQuaXNBcnJheVR5cGUoKSkgewotCQkJZGltZW5z
aW9ucysrOwotCQkJdCA9ICgoQXJyYXlUeXBlKSB0KS5nZXRDb21wb25lbnRUeXBlKCk7CisJCWlm
ICh0aGlzLmFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsKKwkJCVR5cGUgdCA9IGdldENvbXBv
bmVudFR5cGUoKTsKKwkJCWludCBkaW1lbnNpb24gPSAxOyAvLyBhbHdheXMgaW5jbHVkZSB0aGlz
IGFycmF5IHR5cGUKKwkJCXdoaWxlICh0LmlzQXJyYXlUeXBlKCkpIHsKKwkJCQlkaW1lbnNpb24r
KzsKKwkJCQl0ID0gKChBcnJheVR5cGUpIHQpLmdldENvbXBvbmVudFR5cGUoKTsKKwkJCX0KKwkJ
CXJldHVybiBkaW1lbnNpb247CQkJCiAJCX0KLQkJcmV0dXJuIGRpbWVuc2lvbnM7CisJCXJldHVy
biBkaW1lbnNpb25zKCkuc2l6ZSgpOworCX0KKworCS8qKgorCSAqIFJldHVybnMgdGhlIGRpbWVu
c2lvbiBkIGluIHRoaXMgYXJyYXkgdHlwZS4KKwkgKiA8cD4KKwkgKiBUaGlzIGlzIGEgY29udmVu
aWVuY2UgbWV0aG9kIHRoYXQgcmV0dXJucyB0aGUgZGltZW5zaW9uIGF0IHRoZSBnaXZlbiBudW1i
ZXIgZC4KKwkgKiA8L3A+CisJICogQHBhcmFtIGQgZGltZW5zaW9uIG5vCisJICogQHJldHVybiBE
aW1lbnNpb24gYXQgbnVtYmVyIGQsIG51bGwgaWYgZCBvdXQgb2YgcmFuZ2UKKwkgKiAKKwkgKiBA
c2luY2UgMy45IEJFVEFfSkFWQTgKKwkgKi8KKwlwdWJsaWMgRXh0cmFEaW1lbnNpb24gZ2V0RGlt
ZW5zaW9uTm8oaW50IGQpIHsKKwkJdW5zdXBwb3J0ZWRJbjJfM180KCk7CisJCUV4dHJhRGltZW5z
aW9uIGV4dHJhRGltZW5zaW9uID0gbnVsbDsKKwkJaW50IG4gPSBnZXREaW1lbnNpb25zKCkgLSAx
OworCQlpZiAoZCA+PSAwICYmIGQgPD0gbikgeworCQkJZXh0cmFEaW1lbnNpb24gPSAoRXh0cmFE
aW1lbnNpb24pIGRpbWVuc2lvbnMoKS5nZXQobiAtIGQpOworCQl9CisJCXJldHVybiBleHRyYURp
bWVuc2lvbjsKKwl9CisKKwkvKioKKwkgKiBSZXR1cm5zIHRoZSBsaXZlIG9yZGVyZWQgbGlzdCBv
ZiBkaW1lbnNpb25zIHdpdGggb3B0aW9uYWwgYW5ub3RhdGlvbnMgKGFkZGVkIGluIEpMUzggQVBJ
KS4KKwkgKiAKKwkgKiBAcmV0dXJuIHRoZSBsaXZlIGxpc3Qgb2YgZGltZW5zaW9ucyB3aXRoIG9w
dGlvbmFsIGFubm90YXRpb25zIChlbGVtZW50IHR5cGU6IHtAbGluayBFeHRyYURpbWVuc2lvbn0p
CisJICogQGV4Y2VwdGlvbiBVbnN1cHBvcnRlZE9wZXJhdGlvbkV4Y2VwdGlvbiBpZiB0aGlzIG9w
ZXJhdGlvbiBpcyB1c2VkIGJlbG93IEpMUzgKKwkgKiBAc2luY2UgMy45IEJFVEFfSkFWQTgKKwkg
Ki8KKwlwdWJsaWMgTGlzdCBkaW1lbnNpb25zKCkgeworCQkvLyBtb3JlIGVmZmljaWVudCB0aGFu
IGp1c3QgY2FsbGluZyB1bnN1cHBvcnRlZEluMl8zXzQoKSB0byBjaGVjaworCQlpZiAodGhpcy5k
aW1lbnNpb25zID09IG51bGwpIHsKKwkJCXVuc3VwcG9ydGVkSW4yXzNfNCgpOworCQl9CisJCXJl
dHVybiB0aGlzLmRpbWVuc2lvbnM7CiAJfQogCiAJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBt
ZXRob2QpCiAJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCiAJICovCiAJaW50IG1lbVNp
emUoKSB7Ci0JCXJldHVybiBCQVNFX05PREVfU0laRSArIDIgKiA0OworCQlyZXR1cm4gQkFTRV9O
T0RFX1NJWkUgKyAzICogNDsKIAl9CiAKIAkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhv
ZCkKQEAgLTI5Myw4ICs0MjYsOSBAQAogCWludCB0cmVlU2l6ZSgpIHsKIAkJcmV0dXJuCiAJCQlt
ZW1TaXplKCkKLQkJCSsgKHRoaXMuY29tcG9uZW50VHlwZSA9PSBudWxsID8gMCA6IGdldENvbXBv
bmVudFR5cGUoKS50cmVlU2l6ZSgpKQotCQkJKyAodGhpcy5hbm5vdGF0aW9ucyA9PSBudWxsID8g
MCA6IHRoaXMuYW5ub3RhdGlvbnMubGlzdFNpemUoKSk7CisJCQkrICh0aGlzLmNvbXBvbmVudFR5
cGUgPT0gbnVsbCA/IDAgOiBnZXRDb21wb25lbnRUeXBlKCkudHJlZVNpemUoKQorCQkJKyAodGhp
cy5kaW1lbnNpb25zID09IG51bGwgPyAwIDogdGhpcy5kaW1lbnNpb25zLmxpc3RTaXplKCkpCisJ
CQkrICh0aGlzLmVsZW1lbnRUeXBlID09IG51bGwgPyAwIDogZ2V0RWxlbWVudFR5cGUoKS50cmVl
U2l6ZSgpKSk7CiAJfQogfQogCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20v
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL05haXZlQVNURmxhdHRlbmVyLmphdmEg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUv
ZG9tL05haXZlQVNURmxhdHRlbmVyLmphdmEKaW5kZXggYjczNWRlYS4uMzU3N2I2OCAxMDA2NDQK
LS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b3JlL2RvbS9OYWl2ZUFTVEZsYXR0ZW5lci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vTmFpdmVBU1RGbGF0dGVuZXIu
amF2YQpAQCAtMzcwLDEyICszNzAsMjcgQEAKIAkgKiBAc2VlIEFTVFZpc2l0b3IjdmlzaXQoQXJy
YXlUeXBlKQogCSAqLwogCXB1YmxpYyBib29sZWFuIHZpc2l0KEFycmF5VHlwZSBub2RlKSB7Ci0J
CW5vZGUuZ2V0Q29tcG9uZW50VHlwZSgpLmFjY2VwdCh0aGlzKTsKLQkJdmlzaXRUeXBlQW5ub3Rh
dGlvbnMobm9kZSk7Ci0JCXRoaXMuYnVmZmVyLmFwcGVuZCgiW10iKTsvLyROT04tTkxTLTEkCisJ
CWlmIChub2RlLmdldEFTVCgpLmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgeworCQkJZ2V0QXJyYXlU
eXBlQ29tcG9uZW50VHlwZShub2RlKTsKKwkJCXRoaXMuYnVmZmVyLmFwcGVuZCgiW10iKTsvLyRO
T04tTkxTLTEkCisJCX0gZWxzZSB7CisJCQlub2RlLmdldEVsZW1lbnRUeXBlKCkuYWNjZXB0KHRo
aXMpOworCQkJTGlzdCBkaW1lbnNpb25zID0gbm9kZS5kaW1lbnNpb25zKCk7CisJCQlmb3IgKGlu
dCBpID0gMDsgaSA8IGRpbWVuc2lvbnMuc2l6ZSgpIDsgaSsrKSB7CisJCQkJRXh0cmFEaW1lbnNp
b24gYURpbWVuc2lvbiA9IChFeHRyYURpbWVuc2lvbikgZGltZW5zaW9ucy5nZXQoaSk7CisJCQkJ
YURpbWVuc2lvbi5hY2NlcHQodGhpcyk7CisJCQl9CisJCX0KIAkJcmV0dXJuIGZhbHNlOwogCX0K
IAorCS8qKgorCSAqIEBwYXJhbSBub2RlIGFycmF5IAorCSAqLworCXByaXZhdGUgdm9pZCBnZXRB
cnJheVR5cGVDb21wb25lbnRUeXBlKEFycmF5VHlwZSBub2RlKSB7CisJCW5vZGUuZ2V0Q29tcG9u
ZW50VHlwZSgpLmFjY2VwdCh0aGlzKTsKKwl9CisKIAkvKgogCSAqIEBzZWUgQVNUVmlzaXRvciN2
aXNpdChBc3NlcnRTdGF0ZW1lbnQpCiAJICovCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL3Jld3JpdGUvQVNUUmV3
cml0ZUFuYWx5emVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvcmUvZG9tL3Jld3JpdGUvQVNUUmV3cml0ZUFuYWx5emVyLmphdmEKaW5k
ZXggNmNmNDRhOS4uOGJhMzExYSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9t
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9yZXdyaXRlL0FTVFJld3JpdGVBbmFs
eXplci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9BU1RSZXdyaXRlQW5hbHl6ZXIuamF2YQpAQCAtMjA1
OCw2ICsyMDU4LDcgQEAKIAogCQlUZXh0RWRpdEdyb3VwIGVkaXRHcm91cD0gbnVsbDsKIAkJUmV3
cml0ZUV2ZW50IHR5cGVFdmVudD0gZ2V0RXZlbnQobm9kZSwgQXJyYXlDcmVhdGlvbi5UWVBFX1BS
T1BFUlRZKTsKKwkJYm9vbGVhbiBsZXZlbExlc3NUaGFuOCA9IG5vZGUuZ2V0QVNUKCkuYXBpTGV2
ZWwoKSA8IEFTVC5KTFM4ID8gdHJ1ZSA6IGZhbHNlOwogCQlpZiAodHlwZUV2ZW50ICE9IG51bGwg
JiYgdHlwZUV2ZW50LmdldENoYW5nZUtpbmQoKSA9PSBSZXdyaXRlRXZlbnQuUkVQTEFDRUQpIHsg
Ly8gY2hhbmdlZCBhcnJheXR5cGUgY2FuIGhhdmUgZGlmZmVyZW50IGRpbWVuc2lvbiBvciB0eXBl
IG5hbWUKIAkJCXJlcGxhY2luZ1R5cGU9IChBcnJheVR5cGUpIHR5cGVFdmVudC5nZXROZXdWYWx1
ZSgpOwogCQkJZWRpdEdyb3VwPSBnZXRFZGl0R3JvdXAodHlwZUV2ZW50KTsKQEAgLTIwNzcsMTUg
KzIwNzgsMTggQEAKIAkJCVJld3JpdGVFdmVudCBkaW1FdmVudD0gZ2V0RXZlbnQobm9kZSwgQXJy
YXlDcmVhdGlvbi5ESU1FTlNJT05TX1BST1BFUlRZKTsKIAkJCWJvb2xlYW4gaGFzRGltZW5zaW9u
Q2hhbmdlcz0gKGRpbUV2ZW50ICE9IG51bGwgJiYgZGltRXZlbnQuZ2V0Q2hhbmdlS2luZCgpICE9
IFJld3JpdGVFdmVudC5VTkNIQU5HRUQpOwogCQkJUmV3cml0ZUV2ZW50W10gZXZlbnRzPSBoYXNE
aW1lbnNpb25DaGFuZ2VzID8gZGltRXZlbnQuZ2V0Q2hpbGRyZW4oKSA6IG51bGw7Ci0JCQlBcnJh
eVR5cGUgY3VycmVudExldmVsPSAoQXJyYXlUeXBlKSByZXBsYWNpbmdUeXBlLmdldEVsZW1lbnRU
eXBlKCkuZ2V0UGFyZW50KCk7CisJCQlBcnJheVR5cGUgY3VycmVudExldmVsID0gbGV2ZWxMZXNz
VGhhbjggPyAoQXJyYXlUeXBlKSByZXBsYWNpbmdUeXBlLmdldEVsZW1lbnRUeXBlKCkuZ2V0UGFy
ZW50KCkgOiBudWxsOworCQkJaW50IGN1cnJlbnREaW1lbnNpb24gPSBsZXZlbExlc3NUaGFuOCA/
IC0xIDogMDsKKwkJCWludCByZXBsYWNpbmdUeXBlRGltZW5zaW9ucyA9IHJlcGxhY2luZ1R5cGUu
Z2V0RGltZW5zaW9ucygpOwogCQkJaW50IGk9MCwgZGltU2l6ZT0gKGV2ZW50cyA9PSBudWxsKSA/
IDAgOiBldmVudHMubGVuZ3RoOwogCQkJVHlwZSBlbGVtZW50VHlwZT0gYXJyYXlUeXBlLmdldEVs
ZW1lbnRUeXBlKCk7CiAJCQlpbnQgb2Zmc2V0PSBlbGVtZW50VHlwZS5nZXRTdGFydFBvc2l0aW9u
KCkgKyBlbGVtZW50VHlwZS5nZXRMZW5ndGgoKTsKLQkJCXdoaWxlKGN1cnJlbnRMZXZlbCAhPSBu
dWxsKSB7Ci0JCQkJaWYgKG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA+PSBBU1QuSkxTOCkgewot
CQkJCQlyZXdyaXRlVHlwZUFubm90YXRpb25zKGN1cnJlbnRMZXZlbCwgQXJyYXlUeXBlLkFOTk9U
QVRJT05TX1BST1BFUlRZLCBvZmZzZXQpOwotCQkJCX0KKwkJCXdoaWxlKGN1cnJlbnRMZXZlbCAh
PSBudWxsIHx8IGN1cnJlbnREaW1lbnNpb24gIT0gLTEpIHsKIAkJCQlpZiAoaSA8IGRpbVNpemUp
IHsKKwkJCQkJaWYgKCFsZXZlbExlc3NUaGFuOCkgeworCQkJCQkJRXh0cmFEaW1lbnNpb24gZGlt
ID0gKEV4dHJhRGltZW5zaW9uKSByZXBsYWNpbmdUeXBlLmRpbWVuc2lvbnMoKS5nZXQoaSk7CisJ
CQkJCQlyZXdyaXRlVHlwZUFubm90YXRpb25zKGRpbSwgRXh0cmFEaW1lbnNpb24uQU5OT1RBVElP
TlNfUFJPUEVSVFksIG9mZnNldCk7CisJCQkJCX0KIAkJCQkJIG9mZnNldD0gZ2V0U2Nhbm5lcigp
LmdldFRva2VuRW5kT2Zmc2V0KFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUxCUkFDS0VULCBvZmZz
ZXQpOwogCQkJCQlpZiAoaGFzRGltZW5zaW9uQ2hhbmdlcykgewogCQkJCQkJUmV3cml0ZUV2ZW50
IGV2ZW50PSBldmVudHNbaV07CkBAIC0yMTIwLDEzICsyMTI0LDMzIEBACiAJCQkJCQlvZmZzZXQ9
IHJldHJpZXZlUmlnaHRCcmFja2V0RW5kUG9zaXRpb24ob2Zmc2V0LCAxLCB0cnVlKTsKIAkJCQkJ
fQogCQkJCX0gZWxzZSBpZiAoaSA8IG5PbGRCcmFja2V0cykgeworCQkJCQlpZiAoIWxldmVsTGVz
c1RoYW44KSB7CisJCQkJCQlFeHRyYURpbWVuc2lvbiBkaW0gPSAoRXh0cmFEaW1lbnNpb24pIHJl
cGxhY2luZ1R5cGUuZGltZW5zaW9ucygpLmdldChpKTsKKwkJCQkJCXJld3JpdGVUeXBlQW5ub3Rh
dGlvbnMoZGltLCBFeHRyYURpbWVuc2lvbi5BTk5PVEFUSU9OU19QUk9QRVJUWSwgb2Zmc2V0KTsK
KwkJCQkJfQogCQkJCQlvZmZzZXQ9IHJldHJpZXZlUmlnaHRCcmFja2V0RW5kUG9zaXRpb24ob2Zm
c2V0LCAxLCBmYWxzZSk7CiAJCQkJfSBlbHNlIHsKKwkJCQkJaWYgKCFsZXZlbExlc3NUaGFuOCkg
eworCQkJCQkJRXh0cmFEaW1lbnNpb24gZGltID0gKEV4dHJhRGltZW5zaW9uKSByZXBsYWNpbmdU
eXBlLmRpbWVuc2lvbnMoKS5nZXQoaSk7CisJCQkJCQlMaXN0IGFubm90YXRpb25zID0gZGltLmFu
bm90YXRpb25zKCk7CisJCQkJCQlpZiAoYW5ub3RhdGlvbnMgIT0gbnVsbCkgeworCQkJCQkJCWZv
ciAoaW50IGogPSAwOyBqIDwgYW5ub3RhdGlvbnMuc2l6ZSgpOyBqKyspIHsKKwkJCQkJCQkJQW5u
b3RhdGlvbiBhbm5vdGF0aW9uID0gKEFubm90YXRpb24pIGFubm90YXRpb25zLmdldChqKTsKKwkJ
CQkJCQkJZG9UZXh0SW5zZXJ0KG9mZnNldCwgYW5ub3RhdGlvbi50b1N0cmluZygpICsgIiAiLCBl
ZGl0R3JvdXApOyAvLyROT04tTkxTLTEkCisJCQkJCQkJfQorCQkJCQkJCQorCQkJCQkJfQorCQkJ
CQl9CiAJCQkJCWRvVGV4dEluc2VydChvZmZzZXQsICJbXSIsIGVkaXRHcm91cCk7IC8vJE5PTi1O
TFMtMSQKIAkJCQl9CiAJCQkJaSsrOwotCQkJCWlmIChjdXJyZW50TGV2ZWwgPT0gcmVwbGFjaW5n
VHlwZSkgYnJlYWs7Ci0JCQkJY3VycmVudExldmVsPSAoQXJyYXlUeXBlKSBjdXJyZW50TGV2ZWwu
Z2V0UGFyZW50KCk7CisJCQkJaWYgKGxldmVsTGVzc1RoYW44KSB7CisJCQkJCWlmIChjdXJyZW50
TGV2ZWwgPT0gcmVwbGFjaW5nVHlwZSkgYnJlYWs7CisJCQkJCWN1cnJlbnRMZXZlbD0gKEFycmF5
VHlwZSkgY3VycmVudExldmVsLmdldFBhcmVudCgpOworCQkJCX0gZWxzZSB7CisJCQkJCSsrY3Vy
cmVudERpbWVuc2lvbjsKKwkJCQkJaWYgKGN1cnJlbnREaW1lbnNpb24gPT0gcmVwbGFjaW5nVHlw
ZURpbWVuc2lvbnMpIGJyZWFrOworCQkJCX0KIAkJCX0KIAkJCWlmIChpIDwgbk9sZEJyYWNrZXRz
KSB7CiAJCQkJaW50IGVuZFBvcz0gcmV0cmlldmVSaWdodEJyYWNrZXRFbmRQb3NpdGlvbihvZmZz
ZXQsIG5PbGRCcmFja2V0cyAtIGksIGZhbHNlKTsKQEAgLTIxNzUsMjEgKzIxOTksMjkgQEAKIAl9
CiAKIAlwcml2YXRlIFR5cGUgZ2V0RWxlbWVudFR5cGUoQXJyYXlUeXBlIHBhcmVudCkgewotCQlU
eXBlIHQgPSAoVHlwZSkgZ2V0T3JpZ2luYWxWYWx1ZShwYXJlbnQsIEFycmF5VHlwZS5DT01QT05F
TlRfVFlQRV9QUk9QRVJUWSk7Ci0JCXdoaWxlICh0LmlzQXJyYXlUeXBlKCkpIHsKLQkJCXQgPSAo
VHlwZSkgZ2V0T3JpZ2luYWxWYWx1ZSh0LCBBcnJheVR5cGUuQ09NUE9ORU5UX1RZUEVfUFJPUEVS
VFkpOworCQlpZiAocGFyZW50LmdldEFTVCgpLmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgeworCQkJ
VHlwZSB0ID0gKFR5cGUpIGdldE9yaWdpbmFsVmFsdWUocGFyZW50LCBBcnJheVR5cGUuQ09NUE9O
RU5UX1RZUEVfUFJPUEVSVFkpOworCQkJd2hpbGUgKHQuaXNBcnJheVR5cGUoKSkgeworCQkJCXQg
PSAoVHlwZSkgZ2V0T3JpZ2luYWxWYWx1ZSh0LCBBcnJheVR5cGUuQ09NUE9ORU5UX1RZUEVfUFJP
UEVSVFkpOworCQkJfQorCQkJcmV0dXJuIHQ7CiAJCX0KKwkJVHlwZSB0ID0gKFR5cGUpIGdldE9y
aWdpbmFsVmFsdWUocGFyZW50LCBBcnJheVR5cGUuRUxFTUVOVF9UWVBFX1BST1BFUlRZKTsKIAkJ
cmV0dXJuIHQ7CiAJfQogCiAJcHJpdmF0ZSBpbnQgZ2V0RGltZW5zaW9ucyhBcnJheVR5cGUgcGFy
ZW50KSB7Ci0JCVR5cGUgdCA9IChUeXBlKSBnZXRPcmlnaW5hbFZhbHVlKHBhcmVudCwgQXJyYXlU
eXBlLkNPTVBPTkVOVF9UWVBFX1BST1BFUlRZKTsKLQkJaW50IGRpbWVuc2lvbnMgPSAxOyAvLyBh
bHdheXMgaW5jbHVkZSB0aGlzIGFycmF5IHR5cGUKLQkJd2hpbGUgKHQuaXNBcnJheVR5cGUoKSkg
ewotCQkJZGltZW5zaW9ucysrOwotCQkJdCA9IChUeXBlKSBnZXRPcmlnaW5hbFZhbHVlKHQsIEFy
cmF5VHlwZS5DT01QT05FTlRfVFlQRV9QUk9QRVJUWSk7CisJCWlmIChwYXJlbnQuZ2V0QVNUKCku
YXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQlUeXBlIHQgPSAoVHlwZSkgZ2V0T3JpZ2luYWxW
YWx1ZShwYXJlbnQsIEFycmF5VHlwZS5DT01QT05FTlRfVFlQRV9QUk9QRVJUWSk7CisJCQlpbnQg
ZGltZW5zaW9ucyA9IDE7IC8vIGFsd2F5cyBpbmNsdWRlIHRoaXMgYXJyYXkgdHlwZQorCQkJd2hp
bGUgKHQuaXNBcnJheVR5cGUoKSkgeworCQkJCWRpbWVuc2lvbnMrKzsKKwkJCQl0ID0gKFR5cGUp
IGdldE9yaWdpbmFsVmFsdWUodCwgQXJyYXlUeXBlLkNPTVBPTkVOVF9UWVBFX1BST1BFUlRZKTsK
KwkJCX0KKwkJCXJldHVybiBkaW1lbnNpb25zOwogCQl9Ci0JCXJldHVybiBkaW1lbnNpb25zOwor
CQlMaXN0IGRpbWVuc2lvbnMgPSAoTGlzdCkgZ2V0T3JpZ2luYWxWYWx1ZShwYXJlbnQsIEFycmF5
VHlwZS5ESU1FTlNJT05TX1BST1BFUlRZKTsKKwkJcmV0dXJuIGRpbWVuc2lvbnMuc2l6ZSgpOwog
CX0KIAogCS8qIChub24tSmF2YWRvYykKQEAgLTIyMTQsOSArMjI0NiwxMiBAQAogCQlpZiAoIWhh
c0NoaWxkcmVuQ2hhbmdlcyhub2RlKSkgewogCQkJcmV0dXJuIGRvVmlzaXRVbmNoYW5nZWRDaGls
ZHJlbihub2RlKTsKIAkJfQotCQlpbnQgcG9zID0gcmV3cml0ZVJlcXVpcmVkTm9kZShub2RlLCBB
cnJheVR5cGUuQ09NUE9ORU5UX1RZUEVfUFJPUEVSVFkpOwotCQlpZiAobm9kZS5nZXRBU1QoKS5h
cGlMZXZlbCgpID49IEFTVC5KTFM4KSB7Ci0JCQlyZXdyaXRlVHlwZUFubm90YXRpb25zKG5vZGUs
IEFycmF5VHlwZS5BTk5PVEFUSU9OU19QUk9QRVJUWSwgcG9zKTsKKwkJaWYgKG5vZGUuZ2V0QVNU
KCkuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQlyZXdyaXRlUmVxdWlyZWROb2RlKG5vZGUs
IEFycmF5VHlwZS5DT01QT05FTlRfVFlQRV9QUk9QRVJUWSk7CisJCX0gZWxzZSB7CisJCQlyZXdy
aXRlUmVxdWlyZWROb2RlKG5vZGUsIEFycmF5VHlwZS5FTEVNRU5UX1RZUEVfUFJPUEVSVFkpOwor
CQkJaW50IHBvcyA9ICgoRXh0cmFEaW1lbnNpb24pIG5vZGUuZGltZW5zaW9ucygpLmdldCgwKSku
Z2V0U3RhcnRQb3NpdGlvbigpOworCQkJcmV3cml0ZU5vZGVMaXN0KG5vZGUsIEFycmF5VHlwZS5E
SU1FTlNJT05TX1BST1BFUlRZLCBwb3MsIFV0aWwuRU1QVFlfU1RSSU5HLCBVdGlsLkVNUFRZX1NU
UklORyk7CiAJCX0KIAkJcmV0dXJuIGZhbHNlOwogCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9B
U1RSZXdyaXRlRmxhdHRlbmVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL3Jld3JpdGUvQVNUUmV3cml0ZUZsYXR0ZW5lci5q
YXZhCmluZGV4IDIwZjY2ZTMuLjUyYWNmMzQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9BU1RSZXdy
aXRlRmxhdHRlbmVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9yZXdyaXRlL0FTVFJld3JpdGVGbGF0dGVuZXIuamF2
YQpAQCAtMjM2LDIyICsyMzYsMzAgQEAKIAkJQXJyYXlUeXBlIGFycmF5VHlwZT0gKEFycmF5VHlw
ZSkgZ2V0Q2hpbGROb2RlKG5vZGUsIEFycmF5Q3JlYXRpb24uVFlQRV9QUk9QRVJUWSk7CiAKIAkJ
Ly8gZ2V0IHRoZSBlbGVtZW50IHR5cGUgYW5kIGNvdW50IGRpbWVuc2lvbnMKLQkJVHlwZSBlbGVt
ZW50VHlwZT0gKFR5cGUpIGdldENoaWxkTm9kZShhcnJheVR5cGUsIEFycmF5VHlwZS5DT01QT05F
TlRfVFlQRV9QUk9QRVJUWSk7Ci0JCWludCBkaW1lbnNpb25zPSAxOyAvLyBhbHdheXMgaW5jbHVk
ZSB0aGlzIGFycmF5IHR5cGUKLQkJd2hpbGUgKGVsZW1lbnRUeXBlLmlzQXJyYXlUeXBlKCkpIHsK
LQkJCWRpbWVuc2lvbnMrKzsKLQkJCWVsZW1lbnRUeXBlID0gKFR5cGUpIGdldENoaWxkTm9kZShl
bGVtZW50VHlwZSwgQXJyYXlUeXBlLkNPTVBPTkVOVF9UWVBFX1BST1BFUlRZKTsKKwkJVHlwZSBl
bGVtZW50VHlwZTsKKwkJaW50IGRpbWVuc2lvbnM7CisJCWlmIChub2RlLmdldEFTVCgpLmFwaUxl
dmVsKCkgPCBBU1QuSkxTOCkgeworCQkJZWxlbWVudFR5cGUgPSAoVHlwZSkgZ2V0Q2hpbGROb2Rl
KGFycmF5VHlwZSwgQXJyYXlUeXBlLkNPTVBPTkVOVF9UWVBFX1BST1BFUlRZKTsKKwkJCWRpbWVu
c2lvbnMgPSAxOyAvLyBhbHdheXMgaW5jbHVkZSB0aGlzIGFycmF5IHR5cGUKKwkJCXdoaWxlIChl
bGVtZW50VHlwZS5pc0FycmF5VHlwZSgpKSB7CisJCQkJZGltZW5zaW9ucysrOworCQkJCWVsZW1l
bnRUeXBlID0gKFR5cGUpIGdldENoaWxkTm9kZShlbGVtZW50VHlwZSwgQXJyYXlUeXBlLkNPTVBP
TkVOVF9UWVBFX1BST1BFUlRZKTsKKwkJCX0KKwkJfSBlbHNlIHsKKwkJCWVsZW1lbnRUeXBlID0g
KFR5cGUpIGdldENoaWxkTm9kZShhcnJheVR5cGUsIEFycmF5VHlwZS5FTEVNRU5UX1RZUEVfUFJP
UEVSVFkpOworCQkJZGltZW5zaW9ucyA9IGFycmF5VHlwZS5nZXREaW1lbnNpb25zKCk7CiAJCX0K
IAogCQllbGVtZW50VHlwZS5hY2NlcHQodGhpcyk7CiAKIAkJLy8gYWRkICI8YW5ub3RhdGlvbnM+
IFsgPGRpbWVuc2lvbj4gXSIgZm9yIGVhY2ggZGltZW5zaW9uIGV4cHJlc3Npb24KLQkJVHlwZSB0
eXBlPSBhcnJheVR5cGU7CiAJCUxpc3QgbGlzdD0gZ2V0Q2hpbGRMaXN0KG5vZGUsIEFycmF5Q3Jl
YXRpb24uRElNRU5TSU9OU19QUk9QRVJUWSk7Ci0JCWZvciAoaW50IGk9IDA7IGkgPCBsaXN0LnNp
emUoKTsgaSsrKSB7Ci0JCQlpZiAobm9kZS5nZXRBU1QoKS5hcGlMZXZlbCgpID49IEFTVC5KTFM4
ICYmIHR5cGUgaW5zdGFuY2VvZiBBcnJheVR5cGUpIHsKLQkJCQl2aXNpdExpc3QodHlwZSwgQXJy
YXlUeXBlLkFOTk9UQVRJT05TX1BST1BFUlRZLCBTdHJpbmcudmFsdWVPZignICcpLCBVdGlsLkVN
UFRZX1NUUklORywgU3RyaW5nLnZhbHVlT2YoJyAnKSk7Ci0JCQkJdHlwZSA9IChUeXBlKSBnZXRD
aGlsZE5vZGUodHlwZSwgQXJyYXlUeXBlLkNPTVBPTkVOVF9UWVBFX1BST1BFUlRZKTsKKwkJLS1k
aW1lbnNpb25zOworCQlpbnQgaTsKKwkJZm9yIChpPSAwOyBpIDwgbGlzdC5zaXplKCk7IGkrKykg
eworCQkJaWYgKG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA+PSBBU1QuSkxTOCkgeworCQkJCUV4
dHJhRGltZW5zaW9uIGV4dHJhRGltZW5zaW9uID0gKEV4dHJhRGltZW5zaW9uKSBhcnJheVR5cGUu
ZGltZW5zaW9ucygpLmdldChpKTsKKwkJCQl2aXNpdExpc3QoZXh0cmFEaW1lbnNpb24sIEV4dHJh
RGltZW5zaW9uLkFOTk9UQVRJT05TX1BST1BFUlRZLCBTdHJpbmcudmFsdWVPZignICcpLCBTdHJp
bmcudmFsdWVPZignICcpLCBVdGlsLkVNUFRZX1NUUklORyk7CiAJCQl9CiAJCQl0aGlzLnJlc3Vs
dC5hcHBlbmQoJ1snKTsKIAkJCSgoQVNUTm9kZSkgbGlzdC5nZXQoaSkpLmFjY2VwdCh0aGlzKTsK
QEAgLTI2MCwxMiArMjY4LDEzIEBACiAJCX0KIAogCQkvLyBhZGQgIjxhbm5vdGF0aW9ucz4gW10i
IGZvciBlYWNoIGV4dHJhIGFycmF5IGRpbWVuc2lvbgotCQlmb3IgKGludCBpPSAwOyBpIDwgZGlt
ZW5zaW9uczsgaSsrKSB7Ci0JCQlpZiAobm9kZS5nZXRBU1QoKS5hcGlMZXZlbCgpID49IEFTVC5K
TFM4ICYmIHR5cGUgaW5zdGFuY2VvZiBBcnJheVR5cGUpIHsKLQkJCQl2aXNpdExpc3QodHlwZSwg
QXJyYXlUeXBlLkFOTk9UQVRJT05TX1BST1BFUlRZLCBTdHJpbmcudmFsdWVPZignICcpLCBVdGls
LkVNUFRZX1NUUklORywgU3RyaW5nLnZhbHVlT2YoJyAnKSk7Ci0JCQkJdHlwZSA9IChUeXBlKSBn
ZXRDaGlsZE5vZGUodHlwZSwgQXJyYXlUeXBlLkNPTVBPTkVOVF9UWVBFX1BST1BFUlRZKTsKKwkJ
d2hpbGUgKGRpbWVuc2lvbnMgPj0gMCkgeworCQkJaWYgKG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwo
KSA+PSBBU1QuSkxTOCkgeworCQkJCUV4dHJhRGltZW5zaW9uIGV4dHJhRGltZW5zaW9uID0gKEV4
dHJhRGltZW5zaW9uKSBhcnJheVR5cGUuZGltZW5zaW9ucygpLmdldChpKTsKKwkJCQl2aXNpdExp
c3QoZXh0cmFEaW1lbnNpb24sIEV4dHJhRGltZW5zaW9uLkFOTk9UQVRJT05TX1BST1BFUlRZLCBT
dHJpbmcudmFsdWVPZignICcpLCBVdGlsLkVNUFRZX1NUUklORywgU3RyaW5nLnZhbHVlT2YoJyAn
KSk7CiAJCQl9CiAJCQl0aGlzLnJlc3VsdC5hcHBlbmQoIltdIik7IC8vJE5PTi1OTFMtMSQKKwkJ
CS0tZGltZW5zaW9uczsKIAkJfQogCiAJCUFTVE5vZGUgaW5pdGlhbGl6ZXI9IGdldENoaWxkTm9k
ZShub2RlLCBBcnJheUNyZWF0aW9uLklOSVRJQUxJWkVSX1BST1BFUlRZKTsKQEAgLTI4OSwxMSAr
Mjk4LDEzIEBACiAJICogQHNlZSBBU1RWaXNpdG9yI3Zpc2l0KEFycmF5VHlwZSkKIAkgKi8KIAlw
dWJsaWMgYm9vbGVhbiB2aXNpdChBcnJheVR5cGUgbm9kZSkgewotCQlnZXRDaGlsZE5vZGUobm9k
ZSwgQXJyYXlUeXBlLkNPTVBPTkVOVF9UWVBFX1BST1BFUlRZKS5hY2NlcHQodGhpcyk7Ci0JCWlm
IChub2RlLmdldEFTVCgpLmFwaUxldmVsKCkgPj0gQVNULkpMUzgpIHsKLQkJCXZpc2l0TGlzdChu
b2RlLCBBcnJheVR5cGUuQU5OT1RBVElPTlNfUFJPUEVSVFksIFN0cmluZy52YWx1ZU9mKCcgJyks
IFV0aWwuRU1QVFlfU1RSSU5HLCBTdHJpbmcudmFsdWVPZignICcpKTsKKwkJaWYgKG5vZGUuZ2V0
QVNUKCkuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQlnZXRDaGlsZE5vZGUobm9kZSwgQXJy
YXlUeXBlLkNPTVBPTkVOVF9UWVBFX1BST1BFUlRZKS5hY2NlcHQodGhpcyk7CisJCQl0aGlzLnJl
c3VsdC5hcHBlbmQoIltdIik7IC8vJE5PTi1OTFMtMSQKKwkJfSBlbHNlIHsKKwkJCWdldENoaWxk
Tm9kZShub2RlLCBBcnJheVR5cGUuRUxFTUVOVF9UWVBFX1BST1BFUlRZKS5hY2NlcHQodGhpcyk7
CisJCQl2aXNpdExpc3Qobm9kZSwgQXJyYXlUeXBlLkRJTUVOU0lPTlNfUFJPUEVSVFksIFN0cmlu
Zy52YWx1ZU9mKCcgJyksIFV0aWwuRU1QVFlfU1RSSU5HLCBTdHJpbmcudmFsdWVPZignICcpKTsK
IAkJfQotCQl0aGlzLnJlc3VsdC5hcHBlbmQoIltdIik7IC8vJE5PTi1OTFMtMSQKIAkJcmV0dXJu
IGZhbHNlOwogCX0KIA==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>235631</attachid>
            <date>2013-09-19 10:09:00 -0400</date>
            <delta_ts>2013-09-20 04:22:39 -0400</delta_ts>
            <desc>Proposed Patch - WIP</desc>
            <filename>Fix-for-Bug-413569-18dom-ast-AST-for-annotated-multi.WIP.patch</filename>
            <type>text/plain</type>
            <size>99948</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMTVKTFM4VGVzdC5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2RvbS9BU1RDb252ZXJ0ZXIxNUpMUzhUZXN0LmphdmEKaW5kZXggZjRiMTUyOC4uZTJjNDQw
NCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxNUpMUzhUZXN0LmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxNUpMUzhUZXN0LmphdmEKQEAgLTEsNSArMSw1IEBA
CiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDExLCAyMDEyIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDExLCAyMDEzIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBw
cm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxh
YmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAg
KiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBh
dApAQCAtMTcwOCw3ICsxNzA4LDcgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiU3RyaW5n
W10iLCBzb3VyY2UpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNB
cnJheVR5cGUoKSk7CiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwot
CQljaGVja1NvdXJjZVJhbmdlKGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCksICJTdHJpbmci
LCBzb3VyY2UpOworCQljaGVja1NvdXJjZVJhbmdlKGFycmF5VHlwZS5nZXRFbGVtZW50VHlwZSgp
LCAiU3RyaW5nIiwgc291cmNlKTsKIAkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBleHRyYSBkaW1lbnNp
b25zIiwgMSwgc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbi5nZXRFeHRyYURpbWVuc2lvbnMoKSk7
CiAJfQogCkBAIC0xNzM2LDcgKzE3MzYsNyBAQAogCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJT
dHJpbmdbXSIsIHNvdXJjZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgdHlw
ZS5pc0FycmF5VHlwZSgpKTsKIAkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5
cGU7Ci0JCWNoZWNrU291cmNlUmFuZ2UoYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKSwgIlN0
cmluZyIsIHNvdXJjZSk7CisJCWNoZWNrU291cmNlUmFuZ2UoYXJyYXlUeXBlLmdldEVsZW1lbnRU
eXBlKCksICJTdHJpbmciLCBzb3VyY2UpOwogCQlhc3NlcnRFcXVhbHMoIldyb25nIGV4dHJhIGRp
bWVuc2lvbnMiLCAwLCBzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLmdldEV4dHJhRGltZW5zaW9u
cygpKTsKIAl9CiAJLyoqCkBAIC0yNDI3LDEyICsyNDI3LDkgQEAKIAkJY2hlY2tTb3VyY2VSYW5n
ZSh0eXBlLCAiTWFwPFN0cmluZywgRG91YmxlPltdW10iLCBzb3VyY2UpOwogCQlhc3NlcnRFcXVh
bHMoIndyb25nIHR5cGUiLCBBU1ROb2RlLkFSUkFZX1RZUEUsIHR5cGUuZ2V0Tm9kZVR5cGUoKSk7
CiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQl0eXBlID0gYXJy
YXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiTWFw
PFN0cmluZywgRG91YmxlPltdIiwgc291cmNlKTsKLQkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBl
IiwgQVNUTm9kZS5BUlJBWV9UWVBFLCB0eXBlLmdldE5vZGVUeXBlKCkpOwotCQlhcnJheVR5cGUg
PSAoQXJyYXlUeXBlKSB0eXBlOwotCQl0eXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUo
KTsKKwkJdHlwZSA9IGFycmF5VHlwZS5nZXRFbGVtZW50VHlwZSgpOwogCQljaGVja1NvdXJjZVJh
bmdlKHR5cGUsICJNYXA8U3RyaW5nLCBEb3VibGU+Iiwgc291cmNlKTsKKwkJYXNzZXJ0RXF1YWxz
KCJ3cm9uZyB0eXBlIiwgQVNUTm9kZS5QQVJBTUVURVJJWkVEX1RZUEUsIHR5cGUuZ2V0Tm9kZVR5
cGUoKSk7CiAJfQogCiAJLyoKQEAgLTI0NTQsMTIgKzI0NTEsOSBAQAogCQljaGVja1NvdXJjZVJh
bmdlKHR5cGUsICJqYXZhLnV0aWwuTWFwPFN0cmluZywgRG91YmxlPltdW10iLCBzb3VyY2UpOwog
CQlhc3NlcnRFcXVhbHMoIndyb25nIHR5cGUiLCBBU1ROb2RlLkFSUkFZX1RZUEUsIHR5cGUuZ2V0
Tm9kZVR5cGUoKSk7CiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwot
CQl0eXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJY2hlY2tTb3VyY2VSYW5n
ZSh0eXBlLCAiamF2YS51dGlsLk1hcDxTdHJpbmcsIERvdWJsZT5bXSIsIHNvdXJjZSk7Ci0JCWFz
c2VydEVxdWFscygid3JvbmcgdHlwZSIsIEFTVE5vZGUuQVJSQVlfVFlQRSwgdHlwZS5nZXROb2Rl
VHlwZSgpKTsKLQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJdHlwZSA9IGFycmF5
VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCXR5cGUgPSBhcnJheVR5cGUuZ2V0RWxlbWVudFR5
cGUoKTsKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiamF2YS51dGlsLk1hcDxTdHJpbmcsIERv
dWJsZT4iLCBzb3VyY2UpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHR5cGUiLCBBU1ROb2RlLlBB
UkFNRVRFUklaRURfVFlQRSwgdHlwZS5nZXROb2RlVHlwZSgpKTsKIAl9CiAKIAkvKgpAQCAtNDEx
OCw3ICs0MTEyLDcgQEAKICAgICAJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBkaW1lbnNpb25zIiwgMSwg
dHlwZUJpbmRpbmcuZ2V0RGltZW5zaW9ucygpKTsKICAgICAJQXJyYXlUeXBlIGFycmF5VHlwZSA9
IChBcnJheVR5cGUpIHR5cGU7CiAgICAgCWFzc2VydEVxdWFscygiV3JvbmcgZGltZW5zaW9uIiwg
MSwgYXJyYXlUeXBlLmdldERpbWVuc2lvbnMoKSk7Ci0gICAgCXR5cGUgPSBhcnJheVR5cGUuZ2V0
Q29tcG9uZW50VHlwZSgpOworICAgIAl0eXBlID0gYXJyYXlUeXBlLmdldEVsZW1lbnRUeXBlKCk7
CiAgICAgCWFzc2VydFRydWUoIk5vdCBhIHNpbXBsZSB0eXBlIiwgdHlwZS5pc1NpbXBsZVR5cGUo
KSk7CiAgICAgCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIlN0cmluZyIsIGNvbnRlbnRzKTsKICAg
ICAJYXNzZXJ0RXF1YWxzKCJXcm9uZyBleHRyYSBkaW1lbnNpb24iLCAxLCBzaW5nbGVWYXJpYWJs
ZURlY2xhcmF0aW9uLmdldEV4dHJhRGltZW5zaW9ucygpKTsKQEAgLTQ1MDIsNyArNDQ5Niw3IEBA
CiAgICAgCWFzc2VydEVxdWFscygid3JvbmcgZGltZW5zaW9ucyIsIDEsIHR5cGVCaW5kaW5nLmdl
dERpbWVuc2lvbnMoKSk7CiAgICAgCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0
eXBlOwogICAgIAlhc3NlcnRFcXVhbHMoIldyb25nIGRpbWVuc2lvbiIsIDEsIGFycmF5VHlwZS5n
ZXREaW1lbnNpb25zKCkpOwotICAgIAl0eXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUo
KTsKKyAgICAJdHlwZSA9IGFycmF5VHlwZS5nZXRFbGVtZW50VHlwZSgpOwogICAgIAlhc3NlcnRU
cnVlKCJOb3QgYSBzaW1wbGUgdHlwZSIsIHR5cGUuaXNTaW1wbGVUeXBlKCkpOwogICAgIAljaGVj
a1NvdXJjZVJhbmdlKHR5cGUsICJTdHJpbmciLCBjb250ZW50cyk7CiAgICAgCWFzc2VydEVxdWFs
cygiV3JvbmcgZXh0cmEgZGltZW5zaW9uIiwgMCwgc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbi5n
ZXRFeHRyYURpbWVuc2lvbnMoKSk7CkBAIC0xMTE4Niw3ICsxMTE4MCw3IEBACiAJCUlUeXBlQmlu
ZGluZyBiaW5kaW5nID0gdHlwZS5yZXNvbHZlQmluZGluZygpOwogCQlhc3NlcnROb3ROdWxsKCJO
byBiaW5kaW5nIiwgYmluZGluZyk7CiAJCWFzc2VydEVxdWFscygiV3JvbmcgcXVhbGlmaWVkIG5h
bWUiLCAidGVzdDAzNDcuT3V0ZXI8amF2YS5sYW5nLkludGVnZXI+LklubmVyPGphdmEubGFuZy5E
b3VibGU+W10iLCBiaW5kaW5nLmdldFF1YWxpZmllZE5hbWUoKSk7Ci0JCVR5cGUgY29tcG9uZW50
VHlwZSA9IHR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlUeXBlIGNvbXBvbmVudFR5cGUgPSB0
eXBlLmdldEVsZW1lbnRUeXBlKCk7CiAJCWJpbmRpbmcgPSBjb21wb25lbnRUeXBlLnJlc29sdmVC
aW5kaW5nKCk7CiAJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsKIAkJYXNz
ZXJ0RXF1YWxzKCJXcm9uZyBxdWFsaWZpZWQgbmFtZSIsICJ0ZXN0MDM0Ny5PdXRlcjxqYXZhLmxh
bmcuSW50ZWdlcj4uSW5uZXI8amF2YS5sYW5nLkRvdWJsZT4iLCBiaW5kaW5nLmdldFF1YWxpZmll
ZE5hbWUoKSk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZh
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YQppbmRleCAwNjUyNmM5Li5iNjM1
OGNjIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZhCisrKyBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEKQEAgLTUyLDcgKzUyLDcgQEAKIAlz
dGF0aWMgewogLy8JCVRFU1RTX05VTUJFUlMgPSBuZXcgaW50W10geyAxOSB9OwogLy8JCVRFU1RT
X1JBTkdFID0gbmV3IGludFtdIHsgMSwgLTEgfTsKLS8vCQlURVNUU19OQU1FUyA9IG5ldyBTdHJp
bmdbXSB7InRlc3QwMDAxIn07CisvLwkJVEVTVFNfTkFNRVMgPSBuZXcgU3RyaW5nW10geyJ0ZXN0
QnVnNDEzOTQyIn07CiAJfQogCXB1YmxpYyBzdGF0aWMgVGVzdCBzdWl0ZSgpIHsKIAkJcmV0dXJu
IGJ1aWxkTW9kZWxUZXN0U3VpdGUoQVNUQ29udmVydGVyMThUZXN0LmNsYXNzKTsKQEAgLTI3Mywx
MyArMjczLDEzIEBACiAJCUlUeXBlQmluZGluZyBiaW5kaW5nID0gdHlwZS5yZXNvbHZlQmluZGlu
ZygpOwogCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7CiAJCWFzc2VydEVx
dWFscygiV3JvbmcgcXVhbGlmaWVkIG5hbWUiLCAidGVzdDAwMDQuT3V0ZXI8amF2YS5sYW5nLklu
dGVnZXI+LklubmVyPGphdmEubGFuZy5Eb3VibGU+W10iLCBiaW5kaW5nLmdldFF1YWxpZmllZE5h
bWUoKSk7Ci0JCVR5cGUgY29tcG9uZW50VHlwZSA9IHR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwot
CQliaW5kaW5nID0gY29tcG9uZW50VHlwZS5yZXNvbHZlQmluZGluZygpOworCQlUeXBlIGVsZW1l
bnRUeXBlID0gdHlwZS5nZXRFbGVtZW50VHlwZSgpOworCQliaW5kaW5nID0gZWxlbWVudFR5cGUu
cmVzb2x2ZUJpbmRpbmcoKTsKIAkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcp
OwogCQlhc3NlcnRFcXVhbHMoIldyb25nIHF1YWxpZmllZCBuYW1lIiwKIAkJCQkidGVzdDAwMDQu
T3V0ZXI8amF2YS5sYW5nLkludGVnZXI+LklubmVyPGphdmEubGFuZy5Eb3VibGU+IiwgYmluZGlu
Zy5nZXRRdWFsaWZpZWROYW1lKCkpOwotCQlhc3NlcnRUcnVlKCJOb3QgcGFyYW1ldGVyaXplZCIs
IGNvbXBvbmVudFR5cGUuaXNQYXJhbWV0ZXJpemVkVHlwZSgpKTsKLQkJUGFyYW1ldGVyaXplZFR5
cGUgcGFyYW1ldGVyaXplZFR5cGUgPSAoUGFyYW1ldGVyaXplZFR5cGUpIGNvbXBvbmVudFR5cGU7
CisJCWFzc2VydFRydWUoIk5vdCBwYXJhbWV0ZXJpemVkIiwgZWxlbWVudFR5cGUuaXNQYXJhbWV0
ZXJpemVkVHlwZSgpKTsKKwkJUGFyYW1ldGVyaXplZFR5cGUgcGFyYW1ldGVyaXplZFR5cGUgPSAo
UGFyYW1ldGVyaXplZFR5cGUpIGVsZW1lbnRUeXBlOwogCQlUeXBlIHR5cGUyID0gcGFyYW1ldGVy
aXplZFR5cGUuZ2V0VHlwZSgpOwogCQlhc3NlcnRUcnVlKCJOb3QgcXVhbGlmaWVkIiwgdHlwZTIu
aXNRdWFsaWZpZWRUeXBlKCkpOwogCQlRdWFsaWZpZWRUeXBlIHF1YWxpZmllZFR5cGUgPSAoUXVh
bGlmaWVkVHlwZSkgdHlwZTI7CkBAIC0xMTM5LDEzICsxMTM5LDEyIEBACiAJCVR5cGUgdHlwZSA9
IGNyZWF0aW9uLmdldFR5cGUoKTsKIAkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgdHlwZSIsIHRy
dWUsIHR5cGUuaXNBcnJheVR5cGUoKSk7CiAJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIkBNYXJr
ZXIyIGludCBATWFya2VyIEBNYXJrZXIyIFsyXSBATWFya2VyMiBATWFya2VyMyBbYmFyKCldIEBN
YXJrZXIzIEBNYXJrZXIgW10iLCBjb250ZW50cy50b0NoYXJBcnJheSgpKTsKLQkJYXNzZXJ0RXF1
YWxzKCJJbmNvcnJlY3QgYW5ub3RhdGlvbnMiLCAiQE1hcmtlcjMgQE1hcmtlciAiLCBjb252ZXJ0
QW5ub3RhdGlvbnNMaXN0KCgoQXJyYXlUeXBlKSB0eXBlKS5hbm5vdGF0aW9ucygpKSk7Ci0JCXR5
cGUgPSAoKEFycmF5VHlwZSkgdHlwZSkuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlhc3NlcnRFcXVh
bHMoIkluY29ycmVjdCB0eXBlIiwgdHJ1ZSwgdHlwZS5pc0FycmF5VHlwZSgpKTsKLQkJYXNzZXJ0
RXF1YWxzKCJJbmNvcnJlY3QgYW5ub3RhdGlvbnMiLCAiQE1hcmtlcjIgQE1hcmtlcjMgIiwgY29u
dmVydEFubm90YXRpb25zTGlzdCgoKEFycmF5VHlwZSkgdHlwZSkuYW5ub3RhdGlvbnMoKSkpOwot
CQl0eXBlID0gKChBcnJheVR5cGUpIHR5cGUpLmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNzZXJ0
RXF1YWxzKCJJbmNvcnJlY3QgdHlwZSIsIHRydWUsIHR5cGUuaXNBcnJheVR5cGUoKSk7Ci0JCWFz
c2VydEVxdWFscygiSW5jb3JyZWN0IGFubm90YXRpb25zIiwgIkBNYXJrZXIgQE1hcmtlcjIgIiwg
Y29udmVydEFubm90YXRpb25zTGlzdCgoKEFycmF5VHlwZSkgdHlwZSkuYW5ub3RhdGlvbnMoKSkp
OworCQlFeHRyYURpbWVuc2lvbiBleHRyYURpbWVuc2lvbiA9ICgoQXJyYXlUeXBlKSB0eXBlKS5n
ZXREaW1lbnNpb25ObygwKTsKKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgYW5ub3RhdGlvbnMi
LCAiQE1hcmtlcjMgQE1hcmtlciAiLCBjb252ZXJ0QW5ub3RhdGlvbnNMaXN0KGV4dHJhRGltZW5z
aW9uLmFubm90YXRpb25zKCkpKTsKKwkJZXh0cmFEaW1lbnNpb24gPSAoKEFycmF5VHlwZSkgdHlw
ZSkuZ2V0RGltZW5zaW9uTm8oMSk7CisJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IGFubm90YXRp
b25zIiwgIkBNYXJrZXIyIEBNYXJrZXIzICIsIGNvbnZlcnRBbm5vdGF0aW9uc0xpc3QoZXh0cmFE
aW1lbnNpb24uYW5ub3RhdGlvbnMoKSkpOworCQlleHRyYURpbWVuc2lvbiA9ICgoQXJyYXlUeXBl
KSB0eXBlKS5nZXREaW1lbnNpb25ObygyKTsKKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgYW5u
b3RhdGlvbnMiLCAiQE1hcmtlciBATWFya2VyMiAiLCBjb252ZXJ0QW5ub3RhdGlvbnNMaXN0KGV4
dHJhRGltZW5zaW9uLmFubm90YXRpb25zKCkpKTsKIAkJTGlzdCBkaW1lbnNpb25zID0gY3JlYXRp
b24uZGltZW5zaW9ucygpOwogCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCBleHByZXNzaW9ucyIs
IDIsIGRpbWVuc2lvbnMuc2l6ZSgpKTsKIAkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgZXhwcmVz
c2lvbnMiLCAiMiIsIGRpbWVuc2lvbnMuZ2V0KDApLnRvU3RyaW5nKCkpOwpAQCAtMTE1OSwxMyAr
MTE1OCwxMiBAQAogCQkKIAkJdHlwZSA9IGNyZWF0aW9uLmdldFR5cGUoKTsKIAkJYXNzZXJ0RXF1
YWxzKCJJbmNvcnJlY3QgdHlwZSIsIHRydWUsIHR5cGUuaXNBcnJheVR5cGUoKSk7Ci0JCWFzc2Vy
dEVxdWFscygiSW5jb3JyZWN0IGFubm90YXRpb25zIiwgIkBNYXJrZXIyIEBNYXJrZXIzICIsIGNv
bnZlcnRBbm5vdGF0aW9uc0xpc3QoKChBcnJheVR5cGUpIHR5cGUpLmFubm90YXRpb25zKCkpKTsK
LQkJdHlwZSA9ICgoQXJyYXlUeXBlKSB0eXBlKS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWFzc2Vy
dEVxdWFscygiSW5jb3JyZWN0IHR5cGUiLCB0cnVlLCB0eXBlLmlzQXJyYXlUeXBlKCkpOwotCQlh
c3NlcnRFcXVhbHMoIkluY29ycmVjdCBhbm5vdGF0aW9ucyIsICJATWFya2VyIEBNYXJrZXIyICIs
IGNvbnZlcnRBbm5vdGF0aW9uc0xpc3QoKChBcnJheVR5cGUpIHR5cGUpLmFubm90YXRpb25zKCkp
KTsKLQkJdHlwZSA9ICgoQXJyYXlUeXBlKSB0eXBlKS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWFz
c2VydEVxdWFscygiSW5jb3JyZWN0IHR5cGUiLCB0cnVlLCB0eXBlLmlzQXJyYXlUeXBlKCkpOwot
CQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCBhbm5vdGF0aW9ucyIsICJATWFya2VyMyBATWFya2Vy
ICIsIGNvbnZlcnRBbm5vdGF0aW9uc0xpc3QoKChBcnJheVR5cGUpIHR5cGUpLmFubm90YXRpb25z
KCkpKTsKKwkJZXh0cmFEaW1lbnNpb24gPSAoKEFycmF5VHlwZSkgdHlwZSkuZ2V0RGltZW5zaW9u
Tm8oMCk7CisJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IGFubm90YXRpb25zIiwgIkBNYXJrZXIy
IEBNYXJrZXIzICIsIGNvbnZlcnRBbm5vdGF0aW9uc0xpc3QoZXh0cmFEaW1lbnNpb24uYW5ub3Rh
dGlvbnMoKSkpOworCQlleHRyYURpbWVuc2lvbiA9ICgoQXJyYXlUeXBlKSB0eXBlKS5nZXREaW1l
bnNpb25ObygxKTsKKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgYW5ub3RhdGlvbnMiLCAiQE1h
cmtlciBATWFya2VyMiAiLCBjb252ZXJ0QW5ub3RhdGlvbnNMaXN0KGV4dHJhRGltZW5zaW9uLmFu
bm90YXRpb25zKCkpKTsKKwkJZXh0cmFEaW1lbnNpb24gPSAoKEFycmF5VHlwZSkgdHlwZSkuZ2V0
RGltZW5zaW9uTm8oMik7CisJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IGFubm90YXRpb25zIiwg
IkBNYXJrZXIzIEBNYXJrZXIgIiwgY29udmVydEFubm90YXRpb25zTGlzdChleHRyYURpbWVuc2lv
bi5hbm5vdGF0aW9ucygpKSk7CiAJCWRpbWVuc2lvbnMgPSBjcmVhdGlvbi5kaW1lbnNpb25zKCk7
CiAJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IGV4cHJlc3Npb25zIiwgMiwgZGltZW5zaW9ucy5z
aXplKCkpOwogCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCBleHByZXNzaW9ucyIsICIyIiwgZGlt
ZW5zaW9ucy5nZXQoMCkudG9TdHJpbmcoKSk7CkBAIC0xMjM2LDEyICsxMjM0LDYgQEAKIAkJVmFy
aWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25G
cmFnbWVudCkgbGlzdC5nZXQoMCk7CiAJCUFycmF5Q3JlYXRpb24gY3JlYXRpb24gPSAoQXJyYXlD
cmVhdGlvbikgZnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKIAkJVHlwZSB0eXBlID0gY3JlYXRp
b24uZ2V0VHlwZSgpOwotCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCB0eXBlIiwgdHJ1ZSwgdHlw
ZS5pc0FycmF5VHlwZSgpKTsKLQkJYXNzZXJ0RXF1YWxzKCJUeXBlIHNob3VsZCBiZSBtYWxmb3Jt
ZWQiLCBBU1ROb2RlLk1BTEZPUk1FRCwgKHR5cGUuZ2V0RmxhZ3MoKSAmIEFTVE5vZGUuTUFMRk9S
TUVEKSk7Ci0JCXR5cGUgPSAoKEFycmF5VHlwZSkgdHlwZSkuZ2V0Q29tcG9uZW50VHlwZSgpOwot
CQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCB0eXBlIiwgdHJ1ZSwgdHlwZS5pc0FycmF5VHlwZSgp
KTsKLQkJYXNzZXJ0RXF1YWxzKCJUeXBlIHNob3VsZCBiZSBtYWxmb3JtZWQiLCBBU1ROb2RlLk1B
TEZPUk1FRCwgKHR5cGUuZ2V0RmxhZ3MoKSAmIEFTVE5vZGUuTUFMRk9STUVEKSk7Ci0JCXR5cGUg
PSAoKEFycmF5VHlwZSkgdHlwZSkuZ2V0Q29tcG9uZW50VHlwZSgpOwogCQlhc3NlcnRFcXVhbHMo
IkluY29ycmVjdCB0eXBlIiwgdHJ1ZSwgdHlwZS5pc0FycmF5VHlwZSgpKTsKIAkJYXNzZXJ0RXF1
YWxzKCJUeXBlIHNob3VsZCBiZSBtYWxmb3JtZWQiLCBBU1ROb2RlLk1BTEZPUk1FRCwgKHR5cGUu
Z2V0RmxhZ3MoKSAmIEFTVE5vZGUuTUFMRk9STUVEKSk7CiAJfQpAQCAtMTYxNCwxNCArMTYwNiwx
NCBAQAogCQlFeHByZXNzaW9uIGV4cHJlc3Npb24gPSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigp
OwogCQlhc3NlcnRUcnVlKGV4cHJlc3Npb24gaW5zdGFuY2VvZiBMYW1iZGFFeHByZXNzaW9uKTsK
IAkJTGFtYmRhRXhwcmVzc2lvbiBsYW1iZGFFeHByZXNzaW9uID0gKExhbWJkYUV4cHJlc3Npb24p
ZXhwcmVzc2lvbjsKLQkJYXNzZXJ0RXF1YWxzKCIoaW50W10gaWEpIC0+IHtcbiAgcmV0dXJuIGlh
LmNsb25lKCk7XG59XG4iLCBsYW1iZGFFeHByZXNzaW9uLnRvU3RyaW5nKCkpOworCQlhc3NlcnRF
cXVhbHMoIihpbnQgW10gaWEpIC0+IHtcbiAgcmV0dXJuIGlhLmNsb25lKCk7XG59XG4iLCBsYW1i
ZGFFeHByZXNzaW9uLnRvU3RyaW5nKCkpOwogCQlJTWV0aG9kQmluZGluZyBiaW5kaW5nID0gbGFt
YmRhRXhwcmVzc2lvbi5yZXNvbHZlTWV0aG9kQmluZGluZygpOwogCQlhc3NlcnRFcXVhbHMoInBy
aXZhdGUgc3RhdGljIGphdmEubGFuZy5PYmplY3QgbGFtYmRhJDAoaW50W10pICIsIGJpbmRpbmcu
dG9TdHJpbmcoKSk7CiAJCWFzc2VydFRydWUobGFtYmRhRXhwcmVzc2lvbi5wYXJhbWV0ZXJzKCku
c2l6ZSgpID09IDEpOwogCQlWYXJpYWJsZURlY2xhcmF0aW9uIHZhcmlhYmxlRGVjbGFyYXRpb24g
PSAoVmFyaWFibGVEZWNsYXJhdGlvbikgbGFtYmRhRXhwcmVzc2lvbi5wYXJhbWV0ZXJzKCkuZ2V0
KDApOwogCQlhc3NlcnRUcnVlKHZhcmlhYmxlRGVjbGFyYXRpb24gaW5zdGFuY2VvZiBTaW5nbGVW
YXJpYWJsZURlY2xhcmF0aW9uKTsKIAkJU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiBzaW5nbGVW
YXJpYWJsZURlY2xhcmF0aW9uID0gKFNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24pdmFyaWFibGVE
ZWNsYXJhdGlvbjsKLQkJYXNzZXJ0RXF1YWxzKCJpbnRbXSBpYSIsIHNpbmdsZVZhcmlhYmxlRGVj
bGFyYXRpb24udG9TdHJpbmcoKSk7CQkKKwkJYXNzZXJ0RXF1YWxzKCJpbnQgW10gaWEiLCBzaW5n
bGVWYXJpYWJsZURlY2xhcmF0aW9uLnRvU3RyaW5nKCkpOwkJCiAJfQogCiAJLyoqCkBAIC0yNjQ4
LDUgKzI2NDAsODkgQEAKIAkJdHlwZUJpbmRpbmcgPSB0eXBlLnJlc29sdmVCaW5kaW5nKCk7CiAJ
CWFzc2VydEZhbHNlKCJBIEZ1bmN0aW9uYWwgaW50ZXJmYWNlIiwgdHlwZUJpbmRpbmcuaXNGdW5j
dGlvbmFsSW50ZXJmYWNlKCkpOwogCX0KKwkvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVn
cy9zaG93X2J1Zy5jZ2k/aWQ9NDEyNzI2CisJcHVibGljIHZvaWQgdGVzdEJ1ZzQxMzk0MigpIHRo
cm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlTdHJpbmcgY29udGVudHMgPQorCQkiaW1wb3J0
IGphdmEubGFuZy5hbm5vdGF0aW9uLio7XG4iICsKKwkJImltcG9ydCBqYXZhLnV0aWwuQXJyYXlM
aXN0O1xuIiArCisJCSJcbiIgKworCQkicHVibGljIGNsYXNzIFggLyogZXh0ZW5kcyBATm9uTnVs
bChpbnRbXS5jbGFzcykgT2JqZWN0ICovIHtcbiIgKworLy8JCSIgICAgT2JqZWN0IGZpZWxkID0g
bmV3IEFycmF5TGlzdDwgQE5vbkVtcHR5KDApIGludCBATm9uTnVsbCh2YWx1ZTEgPSAxKSBbXSBA
Tm9uRW1wdHkoMSkgWyBdPigpIDtcbiIgKworLy8JCSIgICAgQEFubm90IGludCBAQW5ub3QxIFtd
IGExIEBBbm5vdDIgQEFubm90MyBbLyogW10gKi8gXSBAQW5ub3QzIEBBbm5vdDIgW10gQEFubm90
NCBbXTtcbiIgKworLy8JCSIgICAgaW50W11bXSB4eHg7XG4iICsKKy8vCQkiICAgIEFycmF5TGlz
dDxpbnRbXT4gW11bXSB5eXk7IC8vIHNvdXJjZSByYW5nZXMgYWxyZWFkeSBicm9rZW4gaW4gQVNU
LkpMUzRcbiIgKworLy8JCSIgICAgQXJyYXlMaXN0PGludFtdW10+IFtdW11bXVtdIHp6ejtcbiIg
KworLy8JCSIgICAgQXJyYXlMaXN0PEZsb2F0PiBbXVtdW10genp6MjtcbiIgKworLy8JCSIgICAg
T2JqZWN0IGEgPSBuZXcgQXJyYXlMaXN0PC8qIFtdICovIEBUYWtlVHlwZShpbnRbXS8qIFtdICov
LmNsYXNzKSBpbnQgQFRha2VUeXBlKGZsb2F0LmNsYXNzKSBbXSBAVGFrZVR5cGUoZG91YmxlLmNs
YXNzKSBbXT4oKSA7XG4iICsKKwkJIiAgICBPYmplY3QgYiA9IG5ldyBATm9uTnVsbCh2YWx1ZTEg
PSBNYXRoLlBJKSBBcnJheUxpc3Q8ID4oKSA7XG4iICsKKy8vCQkiICAgIE9iamVjdCBjID0gbmV3
IEFycmF5TGlzdDxATm9uTnVsbCh2YWx1ZTE9IE1hdGguUEkgKSBPYmplY3RbXT4oKSA7XG4iICsK
KwkJIlxuIiArCisJCSIgICAgdm9pZCBmb28oaW50IGkpIHtcbiIgKworLy8JCSIgICAgICAgIGZv
ciAoU3RyaW5nIHRhYkBUYWtlVHlwZShpbnRbXS5jbGFzcykgW10gPSBudWxsOzsgKytpKSB7IGJy
ZWFrOyB9XG4iICsKKy8vCQkiICAgICAgICBmb3IgKEBEZXByZWNhdGVkIFN0cmluZyB0YWJAVGFr
ZVR5cGUoaW50W10uY2xhc3MpIFtdW10gID0gbnVsbDs7ICsraSkge31cbiIgKworCQkiICAgIH1c
biIgKworCQkifVxuIiArCisJCSJcbiIgKworCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VT
RSlcbiIgKworCQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3kuUlVOVElNRSlcbiIgKworCQki
QERvY3VtZW50ZWRcbiIgKworCQkiQGludGVyZmFjZSBOb25OdWxsIHtcbiIgKworCQkiCUNsYXNz
IHZhbHVlKCkgZGVmYXVsdCBpbnQuY2xhc3M7XG4iICsKKwkJIglkb3VibGUgdmFsdWUxKCkgZGVm
YXVsdCAwO1xuIiArCisJCSJ9XG4iICsKKwkJIlxuIiArCisJCSJAVGFyZ2V0KEVsZW1lbnRUeXBl
LlRZUEVfVVNFKVxuIiArCisJCSJAUmV0ZW50aW9uKFJldGVudGlvblBvbGljeS5SVU5USU1FKVxu
IiArCisJCSJARG9jdW1lbnRlZFxuIiArCisJCSJAaW50ZXJmYWNlIE5vbkVtcHR5IHtcbiIgKwor
CQkiCWludCB2YWx1ZSgpIGRlZmF1bHQgMDtcbiIgKworCQkifVxuIiArCisJCSJcbiIgKworCQki
QFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKworCQkiQFJldGVudGlvbihSZXRlbnRp
b25Qb2xpY3kuUlVOVElNRSlcbiIgKworCQkiQERvY3VtZW50ZWRcbiIgKworCQkiQGludGVyZmFj
ZSBUYWtlVHlwZSB7XG4iICsKKwkJIglDbGFzcyB2YWx1ZSgpIGRlZmF1bHQgaW50W10uY2xhc3M7
XG4iICsKKwkJIn1cbiIgKworCQkiXG4iICsKKwkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9V
U0UpXG4iICsKKwkJIkBSZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LlJVTlRJTUUpXG4iICsKKwkJ
IkBEb2N1bWVudGVkXG4iICsKKwkJIkBpbnRlcmZhY2UgQW5ub3Qge31cbiIgKworCQkiXG4iICsK
KwkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJIkBSZXRlbnRpb24oUmV0
ZW50aW9uUG9saWN5LlJVTlRJTUUpXG4iICsKKwkJIkBEb2N1bWVudGVkXG4iICsKKwkJIkBpbnRl
cmZhY2UgQW5ub3QxIHt9XG4iICsKKwkJIlxuIiArCisJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZ
UEVfVVNFKVxuIiArCisJCSJAUmV0ZW50aW9uKFJldGVudGlvblBvbGljeS5SVU5USU1FKVxuIiAr
CisJCSJARG9jdW1lbnRlZFxuIiArCisJCSJAaW50ZXJmYWNlIEFubm90MiB7fVxuIiArCisJCSJc
biIgKworCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKworCQkiQFJldGVudGlv
bihSZXRlbnRpb25Qb2xpY3kuUlVOVElNRSlcbiIgKworCQkiQERvY3VtZW50ZWRcbiIgKworCQki
QGludGVyZmFjZSBBbm5vdDMge31cbiIgKworCQkiXG4iICsKKwkJIkBUYXJnZXQoRWxlbWVudFR5
cGUuVFlQRV9VU0UpXG4iICsKKwkJIkBSZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LlJVTlRJTUUp
XG4iICsKKwkJIkBEb2N1bWVudGVkXG4iICsKKwkJIkBpbnRlcmZhY2UgQW5ub3Q0IHt9XG4iICsK
KwkJIlxuIjsKKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5KCIvQ29udmVydGVy
MTgvc3JjL1guamF2YSIsIHRydWUpOworCQlBU1ROb2RlIG5vZGUgPSBidWlsZEFTVChjb250ZW50
cywgdGhpcy53b3JraW5nQ29weSwgZmFsc2UpOworCQlhc3NlcnRFcXVhbHMoIk5vdCBhIGNvbXBp
bGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUuZ2V0Tm9kZVR5cGUo
KSk7CisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5pdCkgbm9kZTsKKwkJ
LyogY2FzZSAwOiB2YW5pbGxhIGNhc2UgLSBpbnRlcmZhY2Ugd2l0aCBvbmUgYWJzdHJhY3QgbWV0
aG9kICovCisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlID0gIChUeXBlRGVjbGFyYXRpb24pIHVuaXQu
dHlwZXMoKS5nZXQoMCk7CisJCUZpZWxkRGVjbGFyYXRpb24gZmllbGQgPSAoRmllbGREZWNsYXJh
dGlvbikgdHlwZS5ib2R5RGVjbGFyYXRpb25zKCkuZ2V0KDApOworCQlWYXJpYWJsZURlY2xhcmF0
aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmaWVs
ZC5mcmFnbWVudHMoKS5nZXQoMCk7CisJCUNsYXNzSW5zdGFuY2VDcmVhdGlvbiBjbGFzc0luc3Rh
bmNlQ3JlYXRpb24gPSAoQ2xhc3NJbnN0YW5jZUNyZWF0aW9uKSBmcmFnbWVudC5nZXRJbml0aWFs
aXplcigpOworCQlQYXJhbWV0ZXJpemVkVHlwZSBwYXJhbWV0ZXJpemVkVHlwZSA9IChQYXJhbWV0
ZXJpemVkVHlwZSkgY2xhc3NJbnN0YW5jZUNyZWF0aW9uLmdldFR5cGUoKTsKKwkJQXJyYXlUeXBl
IGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHBhcmFtZXRlcml6ZWRUeXBlLnR5cGVBcmd1bWVudHMo
KS5nZXQoMCk7CisJCQorCQkKKwl9CiAKIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29u
dmVydGVyQVNUOFRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3Ny
Yy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyQVNUOFRlc3QuamF2
YQppbmRleCBjZTBmY2M0Li5kNDEzMGU1IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZl
cnRlckFTVDhUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwv
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXJBU1Q4VGVzdC5q
YXZhCkBAIC03NjYyLDE1ICs3NjYyLDkgQEAKIAkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0g
YXJyYXlUeXBlLnJlc29sdmVCaW5kaW5nKCk7CiAJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgImph
dmEubGFuZy5PYmplY3RbXVtdIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAogCQlhc3NlcnROb3RO
dWxsKCJObyB0eXBlIGJpbmRpbmciLCB0eXBlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKLQkJVHlw
ZSBlbGVtZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCUlUeXBlQmlu
ZGluZyB0eXBlQmluZGluZzIgPSBlbGVtZW50VHlwZS5yZXNvbHZlQmluZGluZygpOwotCQlhc3Nl
cnROb3ROdWxsKCJObyB0eXBlIGJpbmRpbmcyIiwgdHlwZUJpbmRpbmcyKTsgLy8kTk9OLU5MUy0x
JAotCQlhc3NlcnRFcXVhbHMoIndyb25nIGRpbWVuc2lvbiIsIDEsIHR5cGVCaW5kaW5nMi5nZXRE
aW1lbnNpb25zKCkpOyAvLyROT04tTkxTLTEkCi0JCWFzc2VydEVxdWFscygid3JvbmcgbmFtZSIs
ICJPYmplY3RbXSIsIHR5cGVCaW5kaW5nMi5nZXROYW1lKCkpOwkJIC8vJE5PTi1OTFMtMSQgLy8k
Tk9OLU5MUy0yJAotCQlhc3NlcnRUcnVlKCJOb3QgYW4gYXJyYXkgdHlwZSIsIGVsZW1lbnRUeXBl
LmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCi0JCVR5cGUgZWxlbWVudFR5cGUyID0gKChB
cnJheVR5cGUpIGVsZW1lbnRUeXBlKS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWFzc2VydFRydWUo
Ik5vdCBhIHNpbXBsZSB0eXBlIiwgZWxlbWVudFR5cGUyLmlzU2ltcGxlVHlwZSgpKTsgLy8kTk9O
LU5MUy0xJAotCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmczID0gZWxlbWVudFR5cGUyLnJlc29s
dmVCaW5kaW5nKCk7CisJCVR5cGUgZWxlbWVudFR5cGUgPSBhcnJheVR5cGUuZ2V0RWxlbWVudFR5
cGUoKTsKKwkJYXNzZXJ0VHJ1ZSgiTm90IGEgc2ltcGxlIHR5cGUiLCBlbGVtZW50VHlwZS5pc1Np
bXBsZVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nMyA9
IGVsZW1lbnRUeXBlLnJlc29sdmVCaW5kaW5nKCk7CiAJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUg
YmluZGluZzMiLCB0eXBlQmluZGluZzMpOyAvLyROT04tTkxTLTEkCiAJCWFzc2VydEVxdWFscygi
d3JvbmcgZGltZW5zaW9uIiwgMCwgdHlwZUJpbmRpbmczLmdldERpbWVuc2lvbnMoKSk7IC8vJE5P
Ti1OTFMtMSQKIAkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgIk9iamVjdCIsIHR5cGVCaW5k
aW5nMy5nZXROYW1lKCkpOwkJIC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJApAQCAtODAwOSwx
MiArODAwMywxMCBAQAogCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmczID0gc2ltcGxlVHlwZS5y
ZXNvbHZlQmluZGluZygpOwogCQlhc3NlcnROb3ROdWxsKCJubyB0eXBlIGJpbmRpbmczIiwgdHlw
ZUJpbmRpbmczKTsgLy8kTk9OLU5MUy0xJAogCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAi
T2JqZWN0IiwgdHlwZUJpbmRpbmczLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5M
Uy0yJAotCQl0eXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNzZXJ0VHJ1
ZSgiTm90IGFuIGFycmF5IHR5cGUiLCB0eXBlIGluc3RhbmNlb2YgQXJyYXlUeXBlKTsgLy8kTk9O
LU5MUy0xJAotCQlBcnJheVR5cGUgYXJyYXlUeXBlMiA9IChBcnJheVR5cGUpIHR5cGU7Ci0JCUlU
eXBlQmluZGluZyB0eXBlQmluZGluZzQgPSBhcnJheVR5cGUyLnJlc29sdmVCaW5kaW5nKCk7CisJ
CXR5cGUgPSBhcnJheVR5cGUuZ2V0RWxlbWVudFR5cGUoKTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVC
aW5kaW5nNCA9IHR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKIAkJYXNzZXJ0Tm90TnVsbCgibm8gdHlw
ZSBiaW5kaW5nNCIsIHR5cGVCaW5kaW5nNCk7IC8vJE5PTi1OTFMtMSQKLQkJYXNzZXJ0RXF1YWxz
KCJ3cm9uZyBuYW1lIiwgIk9iamVjdFtdIiwgdHlwZUJpbmRpbmc0LmdldE5hbWUoKSk7IC8vJE5P
Ti1OTFMtMSQgLy8kTk9OLU5MUy0yJAorCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAiT2Jq
ZWN0IiwgdHlwZUJpbmRpbmc0LmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0y
JAogCX0KIAogCS8qKgpAQCAtODA1MSwyMCArODA0MywxMCBAQAogCQlJVHlwZUJpbmRpbmcgdHlw
ZUJpbmRpbmczID0gc2ltcGxlVHlwZS5yZXNvbHZlQmluZGluZygpOwogCQlhc3NlcnROb3ROdWxs
KCJubyB0eXBlIGJpbmRpbmczIiwgdHlwZUJpbmRpbmczKTsgLy8kTk9OLU5MUy0xJAogCQlhc3Nl
cnRFcXVhbHMoIndyb25nIG5hbWUiLCAiT2JqZWN0IiwgdHlwZUJpbmRpbmczLmdldE5hbWUoKSk7
IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAotCQl0eXBlID0gYXJyYXlUeXBlLmdldENvbXBv
bmVudFR5cGUoKTsKLQkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5cGUiLCB0eXBlIGluc3Rh
bmNlb2YgQXJyYXlUeXBlKTsgLy8kTk9OLU5MUy0xJAotCQlBcnJheVR5cGUgYXJyYXlUeXBlMiA9
IChBcnJheVR5cGUpIHR5cGU7Ci0JCWNoZWNrU291cmNlUmFuZ2UoYXJyYXlUeXBlMiwgIk9iamVj
dFsxMF1bXSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKLQkJSVR5cGVCaW5kaW5nIHR5cGVCaW5k
aW5nNCA9IGFycmF5VHlwZTIucmVzb2x2ZUJpbmRpbmcoKTsKKwkJdHlwZSA9IGFycmF5VHlwZS5n
ZXRFbGVtZW50VHlwZSgpOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmc0ID0gdHlwZS5yZXNv
bHZlQmluZGluZygpOwogCQlhc3NlcnROb3ROdWxsKCJubyB0eXBlIGJpbmRpbmc0IiwgdHlwZUJp
bmRpbmc0KTsgLy8kTk9OLU5MUy0xJAotCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAiT2Jq
ZWN0W11bXSIsIHR5cGVCaW5kaW5nNC5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1O
TFMtMiQKLQkJdHlwZSA9IGFycmF5VHlwZTIuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlhc3NlcnRU
cnVlKCJOb3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUgaW5zdGFuY2VvZiBBcnJheVR5cGUpOyAvLyRO
T04tTkxTLTEkCi0JCUFycmF5VHlwZSBhcnJheVR5cGUzID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJ
SVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nNSA9IGFycmF5VHlwZTMucmVzb2x2ZUJpbmRpbmcoKTsK
LQkJYXNzZXJ0Tm90TnVsbCgibm8gdHlwZSBiaW5kaW5nNSIsIHR5cGVCaW5kaW5nNSk7IC8vJE5P
Ti1OTFMtMSQKLQkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgIk9iamVjdFtdIiwgdHlwZUJp
bmRpbmc1LmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAotCQljaGVja1Nv
dXJjZVJhbmdlKGFycmF5VHlwZTMsICJPYmplY3RbMTBdIiwgc291cmNlKTsgLy8kTk9OLU5MUy0x
JAorCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAiT2JqZWN0IiwgdHlwZUJpbmRpbmc0Lmdl
dE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAogCX0KIAogCmRpZmYgLS1naXQg
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlclRlc3RBU1Q4XzIuamF2YSBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNU
Q29udmVydGVyVGVzdEFTVDhfMi5qYXZhCmluZGV4IGZiMzJlNzUuLjg2YzU3NmEgMTAwNjQ0Ci0t
LSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyVGVzdEFTVDhfMi5qYXZhCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9k
b20vQVNUQ29udmVydGVyVGVzdEFTVDhfMi5qYXZhCkBAIC0yNzEwLDYgKzI3MTAsNyBAQAogCiAJ
LyoqCiAJICogaHR0cDovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDI4
MzkKKwkgKiBAZGVwcmVjYXRlZCB1c2VzIGRlcHJlY2F0ZWQgbWV0aG9kcwogCSAqLwogCXB1Ymxp
YyB2b2lkIHRlc3QwNDkzKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CiAJCUlDb21waWxh
dGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJz
cmMiLCAidGVzdDA0OTMiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAv
LyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKQEAgLTI3MjUsMTMgKzI3MjYsMTggQEAKIAkJY2hl
Y2tTb3VyY2VSYW5nZSh0eXBlLCAiQ2xhc3NbXVtdIiwgc291cmNlKTsKIAkJYXNzZXJ0VHJ1ZSgi
bm90IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJ
CUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQlUeXBlIGNvbXBvbmVu
dFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlhc3NlcnRUcnVlKCJub3Qg
YW4gYXJyYXkgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMt
MSQKLQkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXSIsIHNvdXJjZSk7
Ci0JCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7Ci0JCWNvbXBvbmVudFR5
cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlhc3NlcnRUcnVlKCJpcyBhbiBh
cnJheSB0eXBlIiwgIWNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQK
LQkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2UpOworCQlp
ZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQlUeXBlIGNvbXBvbmVudFR5
cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQkJYXNzZXJ0VHJ1ZSgibm90IGFu
IGFycmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEk
CisJCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJDbGFzc1tdIiwgc291cmNlKTsK
KwkJCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7CisJCQljb21wb25lbnRU
eXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJCWFzc2VydFRydWUoImlzIGFu
IGFycmF5IHR5cGUiLCAhY29tcG9uZW50VHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0x
JAorCQkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2UpOwor
CQl9IGVsc2UgeworCQkJVHlwZSBlbGVtZW50VHlwZSA9IGFycmF5VHlwZS5nZXRFbGVtZW50VHlw
ZSgpOworCQkJY2hlY2tTb3VyY2VSYW5nZShlbGVtZW50VHlwZSwgIkNsYXNzIiwgc291cmNlKTsK
KwkJfQogCX0KIAogCS8qKgpAQCAtMjc1MSwyMSArMjc1NywyNyBAQAogCQljaGVja1NvdXJjZVJh
bmdlKHR5cGUsICJDbGFzc1tdW11bXSIsIHNvdXJjZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBh
cnJheSB0eXBlIiwgdHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQlBcnJheVR5
cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJVHlwZSBjb21wb25lbnRUeXBlID0g
YXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5
IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCi0JCWNo
ZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzW11bXSIsIHNvdXJjZSk7Ci0JCWFy
cmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7Ci0JCWNvbXBvbmVudFR5cGUgPSBh
cnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkg
dHlwZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKLQkJY2hl
Y2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXSIsIHNvdXJjZSk7Ci0JCWFycmF5
VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7Ci0JCWNvbXBvbmVudFR5cGUgPSBhcnJh
eVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJheSB0eXBl
IiwgIWNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKLQkJY2hlY2tT
b3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2UpOworCQlpZiAodGhpcy5h
c3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJh
eVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5
cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJCQljaGVj
a1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJDbGFzc1tdW10iLCBzb3VyY2UpOworCQkJYXJy
YXlUeXBlID0gKEFycmF5VHlwZSkgY29tcG9uZW50VHlwZTsKKwkJCWNvbXBvbmVudFR5cGUgPSBh
cnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5
IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJCQlj
aGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJDbGFzc1tdIiwgc291cmNlKTsKKwkJCWFy
cmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7CisJCQljb21wb25lbnRUeXBlID0g
YXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJCWFzc2VydFRydWUoImlzIGFuIGFycmF5
IHR5cGUiLCAhY29tcG9uZW50VHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQkJ
Y2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2UpOworCQl9IGVs
c2UgeworCQkJVHlwZSBlbGVtZW50VHlwZSA9IGFycmF5VHlwZS5nZXRFbGVtZW50VHlwZSgpOwor
CQkJY2hlY2tTb3VyY2VSYW5nZShlbGVtZW50VHlwZSwgIkNsYXNzIiwgc291cmNlKTsKKwkJfQog
CX0KIAogCS8qKgogCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dp
P2lkPTQyODM5CisJICogQGRlcHJlY2F0ZWQgdXNlcyBkZXByZWNhdGVkIG1ldGhvZHMKIAkgKi8K
IAlwdWJsaWMgdm9pZCB0ZXN0MDQ5NSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewogCQlJ
Q29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRl
ciIgLCAic3JjIiwgInRlc3QwNDk1IiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1O
TFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCkBAIC0yNzgxLDEzICsyNzkzLDE4IEBA
CiAJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIkNsYXNzW11bXSIsIHNvdXJjZSk7CiAJCWFzc2Vy
dFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgdHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5M
Uy0xJAogCQlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJVHlwZSBj
b21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNzZXJ0VHJ1
ZSgibm90IGFuIGFycmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyRO
T04tTkxTLTEkCi0JCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzW10iLCBz
b3VyY2UpOwotCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBlOwotCQljb21w
b25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNzZXJ0VHJ1ZSgi
aXMgYW4gYXJyYXkgdHlwZSIsICFjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04t
TkxTLTEkCi0JCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzIiwgc291cmNl
KTsKKwkJaWYgKHRoaXMuYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgeworCQkJVHlwZSBjb21w
b25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJCWFzc2VydFRydWUo
Im5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9O
LU5MUy0xJAorCQkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXSIsIHNv
dXJjZSk7CisJCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBlOworCQkJY29t
cG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCQlhc3NlcnRUcnVl
KCJpcyBhbiBhcnJheSB0eXBlIiwgIWNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5P
Ti1OTFMtMSQKKwkJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzIiwgc291
cmNlKTsKKwkJfSBlbHNlIHsKKwkJCVR5cGUgZWxlbWVudFR5cGUgPSBhcnJheVR5cGUuZ2V0RWxl
bWVudFR5cGUoKTsKKwkJCWNoZWNrU291cmNlUmFuZ2UoZWxlbWVudFR5cGUsICJDbGFzcyIsIHNv
dXJjZSk7CisJCX0KIAkJTGlzdCBmcmFnbWVudHMgPSBmaWVsZERlY2xhcmF0aW9uLmZyYWdtZW50
cygpOwogCQlhc3NlcnRFcXVhbHMoIndyb25nIHNpemUiLCAxLCBmcmFnbWVudHMuc2l6ZSgpKTsK
IAkJVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFy
YXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgwKTsKQEAgLTI3OTYsNiArMjgxMyw3IEBACiAK
IAkvKioKIAkgKiBodHRwOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00
MjgzOQorCSAqIEBkZXByZWNhdGVkIHVzZXMgZGVwcmVjYXRlZCBtZXRob2RzCiAJICovCiAJcHVi
bGljIHZvaWQgdGVzdDA0OTYoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKIAkJSUNvbXBp
bGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwg
InNyYyIsICJ0ZXN0MDQ5NiIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIk
IC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JApAQCAtMjgxMSwyNSArMjgyOSwzMSBAQAogCQlj
aGVja1NvdXJjZVJhbmdlKHR5cGUsICJDbGFzc1tdW11bXVtdIiwgc291cmNlKTsKIAkJYXNzZXJ0
VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxT
LTEkCiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQlUeXBlIGNv
bXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlhc3NlcnRUcnVl
KCJub3QgYW4gYXJyYXkgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5P
Ti1OTFMtMSQKLQkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXVtdW10i
LCBzb3VyY2UpOwotCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBlOwotCQlj
b21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNzZXJ0VHJ1
ZSgibm90IGFuIGFycmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyRO
T04tTkxTLTEkCi0JCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzW11bXSIs
IHNvdXJjZSk7Ci0JCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7Ci0JCWNv
bXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlhc3NlcnRUcnVl
KCJub3QgYW4gYXJyYXkgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5P
Ti1OTFMtMSQKLQkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXSIsIHNv
dXJjZSk7Ci0JCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7Ci0JCWNvbXBv
bmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlhc3NlcnRUcnVlKCJp
cyBhbiBhcnJheSB0eXBlIiwgIWNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1O
TFMtMSQKLQkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2Up
OworCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQlUeXBlIGNvbXBv
bmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQkJYXNzZXJ0VHJ1ZSgi
bm90IGFuIGFycmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04t
TkxTLTEkCisJCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJDbGFzc1tdW11bXSIs
IHNvdXJjZSk7CisJCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBlOworCQkJ
Y29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCQlhc3NlcnRU
cnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8v
JE5PTi1OTFMtMSQKKwkJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzW11b
XSIsIHNvdXJjZSk7CisJCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBlOwor
CQkJY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCQlhc3Nl
cnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7
IC8vJE5PTi1OTFMtMSQKKwkJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNz
W10iLCBzb3VyY2UpOworCQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgY29tcG9uZW50VHlwZTsK
KwkJCWNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQkJYXNz
ZXJ0VHJ1ZSgiaXMgYW4gYXJyYXkgdHlwZSIsICFjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkp
OyAvLyROT04tTkxTLTEkCisJCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJDbGFz
cyIsIHNvdXJjZSk7CisJCX0gZWxzZSB7CisJCQlUeXBlIGVsZW1lbnRUeXBlID0gYXJyYXlUeXBl
LmdldEVsZW1lbnRUeXBlKCk7CisJCQljaGVja1NvdXJjZVJhbmdlKGVsZW1lbnRUeXBlLCAiQ2xh
c3MiLCBzb3VyY2UpOworCQl9CiAJfQogCiAJLyoqCiAJICogaHR0cDovL2J1Z3MuZWNsaXBzZS5v
cmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDI4MzkKKwkgKiBAZGVwcmVjYXRlZCB1c2VzIGRlcHJl
Y2F0ZWQgbWV0aG9kcwogCSAqLwogCXB1YmxpYyB2b2lkIHRlc3QwNDk3KCkgdGhyb3dzIEphdmFN
b2RlbEV4Y2VwdGlvbiB7CiAJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBp
bGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDA0OTciLCAiQS5qYXZhIik7IC8v
JE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKQEAg
LTI4NDUsOSArMjg2OSw5IEBACiAJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIkNsYXNzW10iLCBz
b3VyY2UpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNBcnJheVR5
cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUp
IHR5cGU7Ci0JCVR5cGUgY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBl
KCk7Ci0JCWFzc2VydFRydWUoImlzIGFuIGFycmF5IHR5cGUiLCAhY29tcG9uZW50VHlwZS5pc0Fy
cmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAotCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5
cGUsICJDbGFzcyIsIHNvdXJjZSk7CisJCXR5cGUgPSB0aGlzLmFzdC5hcGlMZXZlbCgpIDwgQVNU
LkpMUzggPyBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpIDogYXJyYXlUeXBlLmdldEVsZW1l
bnRUeXBlKCk7CisJCWFzc2VydFRydWUoImlzIGFuIGFycmF5IHR5cGUiLCAhdHlwZS5pc0FycmF5
VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJDbGFzcyIs
IHNvdXJjZSk7CiAJfQogCiAJLyoqCkBAIC05NTI4LDYgKzk1NTIsNyBAQAogCiAJLyoqCiAJICog
aHR0cDovL2Rldi5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xOTY1MTQKKwkgKiBA
ZGVwcmVjYXRlZCB1c2VzIGRlcHJlY2F0ZWQgbWV0aG9kcwogCSAqLwogCXB1YmxpYyB2b2lkIHRl
c3QwNjgzKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CiAJCUlDb21waWxhdGlvblVuaXQg
c291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVz
dDA2ODMiLCAiVGVzdC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04t
TkxTLTMkIC8vJE5PTi1OTFMtNCQKQEAgLTk1NDgsMTQgKzk1NzMsMTkgQEAKIAkJQXJyYXlDcmVh
dGlvbiBhcnJheUNyZWF0aW9uID0gKEFycmF5Q3JlYXRpb24pIG5vZGU7CiAJCUFycmF5VHlwZSBh
cnJheVR5cGUgPSBhcnJheUNyZWF0aW9uLmdldFR5cGUoKTsKIAkJY2hlY2tTb3VyY2VSYW5nZShh
cnJheVR5cGUsICJTdHJpbmdbMF1bYlsxMF1dW10iLCBzb3VyY2VVbml0LmdldFNvdXJjZSgpKTsK
LQkJbm9kZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWFzc2VydEVxdWFscygi
Tm90IGFuIGFycmF5IHR5cGUiLCBBU1ROb2RlLkFSUkFZX1RZUEUsIG5vZGUuZ2V0Tm9kZVR5cGUo
KSk7Ci0JCWFycmF5VHlwZSA9IChBcnJheVR5cGUpbm9kZTsKLQkJY2hlY2tTb3VyY2VSYW5nZShh
cnJheVR5cGUsICJTdHJpbmdbMF1bYlsxMF1dIiwgc291cmNlVW5pdC5nZXRTb3VyY2UoKSk7Ci0J
CW5vZGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlhc3NlcnRFcXVhbHMoIk5v
dCBhbiBhcnJheSB0eXBlIiwgQVNUTm9kZS5BUlJBWV9UWVBFLCBub2RlLmdldE5vZGVUeXBlKCkp
OwotCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKW5vZGU7Ci0JCWNoZWNrU291cmNlUmFuZ2UoYXJy
YXlUeXBlLCAiU3RyaW5nWzBdIiwgc291cmNlVW5pdC5nZXRTb3VyY2UoKSk7CisJCWlmICh0aGlz
LmFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsKKwkJCW5vZGUgPSBhcnJheVR5cGUuZ2V0Q29t
cG9uZW50VHlwZSgpOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gYXJyYXkgdHlwZSIsIEFTVE5v
ZGUuQVJSQVlfVFlQRSwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJCWFycmF5VHlwZSA9IChBcnJh
eVR5cGUpbm9kZTsKKwkJCWNoZWNrU291cmNlUmFuZ2UoYXJyYXlUeXBlLCAiU3RyaW5nWzBdW2Jb
MTBdXSIsIHNvdXJjZVVuaXQuZ2V0U291cmNlKCkpOworCQkJbm9kZSA9IGFycmF5VHlwZS5nZXRD
b21wb25lbnRUeXBlKCk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBhcnJheSB0eXBlIiwgQVNU
Tm9kZS5BUlJBWV9UWVBFLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJYXJyYXlUeXBlID0gKEFy
cmF5VHlwZSlub2RlOworCQkJY2hlY2tTb3VyY2VSYW5nZShhcnJheVR5cGUsICJTdHJpbmdbMF0i
LCBzb3VyY2VVbml0LmdldFNvdXJjZSgpKTsKKwkJfSBlbHNlIHsKKwkJCW5vZGUgPSBhcnJheVR5
cGUuZ2V0RWxlbWVudFR5cGUoKTsKKwkJCWNoZWNrU291cmNlUmFuZ2Uobm9kZSwgIlN0cmluZyIs
IHNvdXJjZVVuaXQuZ2V0U291cmNlKCkpOworCQl9CiAJfQogCiAJLyoqCmRpZmYgLS1naXQgYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvZG9tL0FTVFN0cnVjdHVyYWxQcm9wZXJ0eVRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNU
U3RydWN0dXJhbFByb3BlcnR5VGVzdC5qYXZhCmluZGV4IDJiZjRiODcuLmIzOTI4MTEgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9kb20vQVNUU3RydWN0dXJhbFByb3BlcnR5VGVzdC5qYXZhCisrKyBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90
ZXN0cy9kb20vQVNUU3RydWN0dXJhbFByb3BlcnR5VGVzdC5qYXZhCkBAIC0xNzIsNyArMTcyLDcg
QEAKIAkJCQlicmVhazsKIAkJCWNhc2UgQVNULkpMUzggOgogCQkJCWFzc2VydEVxdWFscygiV3Jv
bmcgbnVtYmVyIG9mIHZpc2l0ZWQgbm9kZSBjbGFzc2VzIiwgODQsIG5vZGVDbGFzc2VzLnNpemUo
KSk7Ci0JCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgdmlzaXRlZCBwcm9wZXJ0aWVz
IiwgMTA1LCB2aXNpdGVkUHJvcGVydGllcy5zaXplKCkpOworCQkJCWFzc2VydEVxdWFscygiV3Jv
bmcgbnVtYmVyIG9mIHZpc2l0ZWQgcHJvcGVydGllcyIsIDEwNiwgdmlzaXRlZFByb3BlcnRpZXMu
c2l6ZSgpKTsKIAkJCQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBzaW1wbGUgcHJvcGVy
dGllcyIsIDIxLCBzaW1wbGVQcm9wZXJ0aWVzLnNpemUoKSk7CiAJCQkJYXNzZXJ0RXF1YWxzKCJX
cm9uZyBudW1iZXIgb2YgY2hpbGQgcHJvcGVydGllcyIsIDExOCwgY2hpbGRQcm9wZXJ0aWVzLnNp
emUoKSk7CiAJCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgY2hpbGQgbGlzdCBwcm9w
ZXJ0aWVzIiwgNjYsIGNoaWxkTGlzdFByb3BlcnRpZXMuc2l6ZSgpKTsKZGlmZiAtLWdpdCBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90
ZXN0cy9kb20vQVNUVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwv
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RUZXN0LmphdmEKaW5kZXggNmVi
MzBhOS4uY2NmYjM3YyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9k
ZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RUZXN0LmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL2RvbS9BU1RUZXN0LmphdmEKQEAgLTIwNTcsNiArMjA1Nyw3IEBACiAJCWFzc2VydFRy
dWUoUHJpbWl0aXZlVHlwZS50b0NvZGUoIm5vdC1hLXR5cGUiKSA9PSBudWxsKTsgLy8kTk9OLU5M
Uy0xJAogCX0KIAorCS8qKiBAZGVwcmVjYXRlZCB1c2luZyBkZXByZWNhdGVkIGNvZGUgKi8KIAlw
dWJsaWMgdm9pZCB0ZXN0QXJyYXlUeXBlKCkgewogCQlTaW1wbGVOYW1lIHgxID0gdGhpcy5hc3Qu
bmV3U2ltcGxlTmFtZSgiU3RyaW5nIik7IC8vJE5PTi1OTFMtMSQKIAkJU2ltcGxlVHlwZSB4MiA9
IHRoaXMuYXN0Lm5ld1NpbXBsZVR5cGUoeDEpOwpAQCAtMjA2Niw3ICsyMDY3LDExIEBACiAJCXBy
ZXZpb3VzQ291bnQgPSB0aGlzLmFzdC5tb2RpZmljYXRpb25Db3VudCgpOwogCQlhc3NlcnRUcnVl
KHguZ2V0QVNUKCkgPT0gdGhpcy5hc3QpOwogCQlhc3NlcnRUcnVlKHguZ2V0UGFyZW50KCkgPT0g
bnVsbCk7Ci0JCWFzc2VydFRydWUoeC5nZXRDb21wb25lbnRUeXBlKCkuZ2V0UGFyZW50KCkgPT0g
eCk7CisJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsKKwkJCWFzc2VydFRy
dWUoeC5nZXRDb21wb25lbnRUeXBlKCkuZ2V0UGFyZW50KCkgPT0geCk7CisJCX0gZWxzZSB7CisJ
CQlhc3NlcnRUcnVlKHguZ2V0RWxlbWVudFR5cGUoKS5nZXRQYXJlbnQoKSA9PSB4KTsKKwkJfQog
CQkvLyBtYWtlIHN1cmUgdGhhdCByZWFkaW5nIGRpZCBub3QgY2hhbmdlIG1vZGlmaWNhdGlvbiBj
b3VudAogCQlhc3NlcnRUcnVlKHRoaXMuYXN0Lm1vZGlmaWNhdGlvbkNvdW50KCkgPT0gcHJldmlv
dXNDb3VudCk7CiAJCWFzc2VydFRydWUoIXguaXNTaW1wbGVUeXBlKCkpOwpAQCAtMjA4MSwzOSAr
MjA4Niw2OSBAQAogCQlhc3NlcnRUcnVlKHguZ2V0RGltZW5zaW9ucygpID09IDEpOwogCQlhc3Nl
cnRUcnVlKHguZ2V0RWxlbWVudFR5cGUoKSA9PSB4Mik7CiAKLQkJZ2VuZXJpY1Byb3BlcnR5VGVz
dCh4LCBuZXcgUHJvcGVydHkoIkNvbXBvbmVudFR5cGUiLCB0cnVlLCBUeXBlLmNsYXNzKSB7IC8v
JE5PTi1OTFMtMSQKLQkJCXB1YmxpYyBBU1ROb2RlIHNhbXBsZShBU1QgdGFyZ2V0QXN0LCBib29s
ZWFuIHBhcmVudGVkKSB7Ci0JCQkJU2ltcGxlVHlwZSByZXN1bHQgPSB0YXJnZXRBc3QubmV3U2lt
cGxlVHlwZSgKLQkJCQkJdGFyZ2V0QXN0Lm5ld1NpbXBsZU5hbWUoImEiKSk7IC8vJE5PTi1OTFMt
MSQKLQkJCQlpZiAocGFyZW50ZWQpIHsKLQkJCQkJdGFyZ2V0QXN0Lm5ld0FycmF5VHlwZShyZXN1
bHQpOworCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQlnZW5lcmlj
UHJvcGVydHlUZXN0KHgsIG5ldyBQcm9wZXJ0eSgiQ29tcG9uZW50VHlwZSIsIHRydWUsIFR5cGUu
Y2xhc3MpIHsgLy8kTk9OLU5MUy0xJAorCQkJCXB1YmxpYyBBU1ROb2RlIHNhbXBsZShBU1QgdGFy
Z2V0QXN0LCBib29sZWFuIHBhcmVudGVkKSB7CisJCQkJCVNpbXBsZVR5cGUgcmVzdWx0ID0gdGFy
Z2V0QXN0Lm5ld1NpbXBsZVR5cGUoCisJCQkJCQl0YXJnZXRBc3QubmV3U2ltcGxlTmFtZSgiYSIp
KTsgLy8kTk9OLU5MUy0xJAorCQkJCQlpZiAocGFyZW50ZWQpIHsKKwkJCQkJCXRhcmdldEFzdC5u
ZXdBcnJheVR5cGUocmVzdWx0KTsKKwkJCQkJfQorCQkJCQlyZXR1cm4gcmVzdWx0OwogCQkJCX0K
LQkJCQlyZXR1cm4gcmVzdWx0OwotCQkJfQotCQkJcHVibGljIEFTVE5vZGUgd3JhcCgpIHsKLQkJ
CQlBcnJheVR5cGUgcmVzdWx0ID0gQVNUVGVzdC50aGlzLmFzdC5uZXdBcnJheVR5cGUoeCk7Ci0J
CQkJcmV0dXJuIHJlc3VsdDsKLQkJCX0KLQkJCXB1YmxpYyB2b2lkIHVud3JhcCgpIHsKLQkJCQlB
cnJheVR5cGUgYSA9IChBcnJheVR5cGUpIHguZ2V0UGFyZW50KCk7Ci0JCQkJYS5zZXRDb21wb25l
bnRUeXBlKEFTVFRlc3QudGhpcy5hc3QubmV3UHJpbWl0aXZlVHlwZShQcmltaXRpdmVUeXBlLklO
VCkpOwotCQkJfQotCQkJcHVibGljIEFTVE5vZGUgZ2V0KCkgewotCQkJCXJldHVybiB4LmdldENv
bXBvbmVudFR5cGUoKTsKLQkJCX0KLQkJCXB1YmxpYyB2b2lkIHNldChBU1ROb2RlIHZhbHVlKSB7
Ci0JCQkJeC5zZXRDb21wb25lbnRUeXBlKChUeXBlKSB2YWx1ZSk7Ci0JCQl9Ci0JCX0pOworCQkJ
CXB1YmxpYyBBU1ROb2RlIHdyYXAoKSB7CisJCQkJCUFycmF5VHlwZSByZXN1bHQgPSBBU1RUZXN0
LnRoaXMuYXN0Lm5ld0FycmF5VHlwZSh4KTsKKwkJCQkJcmV0dXJuIHJlc3VsdDsKKwkJCQl9CisJ
CQkJcHVibGljIHZvaWQgdW53cmFwKCkgeworCQkJCQlBcnJheVR5cGUgYSA9IChBcnJheVR5cGUp
IHguZ2V0UGFyZW50KCk7CisJCQkJCWEuc2V0Q29tcG9uZW50VHlwZShBU1RUZXN0LnRoaXMuYXN0
Lm5ld1ByaW1pdGl2ZVR5cGUoUHJpbWl0aXZlVHlwZS5JTlQpKTsKKwkJCQl9CisJCQkJcHVibGlj
IEFTVE5vZGUgZ2V0KCkgeworCQkJCQlyZXR1cm4geC5nZXRDb21wb25lbnRUeXBlKCk7CisJCQkJ
fQorCQkJCXB1YmxpYyB2b2lkIHNldChBU1ROb2RlIHZhbHVlKSB7CisJCQkJCXguc2V0Q29tcG9u
ZW50VHlwZSgoVHlwZSkgdmFsdWUpOworCQkJCX0KKwkJCX0pOwogCi0JCXguc2V0Q29tcG9uZW50
VHlwZSgKLQkJCXRoaXMuYXN0Lm5ld0FycmF5VHlwZSh0aGlzLmFzdC5uZXdQcmltaXRpdmVUeXBl
KFByaW1pdGl2ZVR5cGUuSU5UKSwgNCkpOworCQkJeC5zZXRDb21wb25lbnRUeXBlKAorCQkJCXRo
aXMuYXN0Lm5ld0FycmF5VHlwZSh0aGlzLmFzdC5uZXdQcmltaXRpdmVUeXBlKFByaW1pdGl2ZVR5
cGUuSU5UKSwgNCkpOworCQkJYXNzZXJ0VHJ1ZSh4LmdldERpbWVuc2lvbnMoKSA9PSA1KTsKKwkJ
CWFzc2VydFRydWUoeC5nZXRFbGVtZW50VHlwZSgpLmlzUHJpbWl0aXZlVHlwZSgpKTsKKwkJCWZp
bmFsIEFycmF5VHlwZSB4MyA9IHRoaXMuYXN0Lm5ld0FycmF5VHlwZSh4LCAyKTsKKwkJCWFzc2Vy
dFRydWUoeDMuZ2V0RGltZW5zaW9ucygpID09IDcpOworCQl9IGVsc2UgeworCQkJZ2VuZXJpY1By
b3BlcnR5VGVzdCh4LCBuZXcgUHJvcGVydHkoIkVsZW1lbnRUeXBlIiwgdHJ1ZSwgVHlwZS5jbGFz
cykgeyAvLyROT04tTkxTLTEkCisJCQkJcHVibGljIEFTVE5vZGUgc2FtcGxlKEFTVCB0YXJnZXRB
c3QsIGJvb2xlYW4gcGFyZW50ZWQpIHsKKwkJCQkJU2ltcGxlVHlwZSByZXN1bHQgPSB0YXJnZXRB
c3QubmV3U2ltcGxlVHlwZSgKKwkJCQkJCXRhcmdldEFzdC5uZXdTaW1wbGVOYW1lKCJhIikpOyAv
LyROT04tTkxTLTEkCisJCQkJCWlmIChwYXJlbnRlZCkgeworCQkJCQkJdGFyZ2V0QXN0Lm5ld0Fy
cmF5VHlwZShyZXN1bHQpOworCQkJCQl9CisJCQkJCXJldHVybiByZXN1bHQ7CisJCQkJfQorCQkJ
CXB1YmxpYyBBU1ROb2RlIHdyYXAoKSB7CisJCQkJCUFycmF5VHlwZSByZXN1bHQgPSBBU1RUZXN0
LnRoaXMuYXN0Lm5ld0FycmF5VHlwZSh4LCA1KTsKKwkJCQkJcmV0dXJuIHJlc3VsdDsKKwkJCQl9
CisJCQkJcHVibGljIHZvaWQgdW53cmFwKCkgeworCQkJCQlBcnJheVR5cGUgYSA9IChBcnJheVR5
cGUpIHguZ2V0UGFyZW50KCk7CisJCQkJCWEuc2V0RWxlbWVudFR5cGUoQVNUVGVzdC50aGlzLmFz
dC5uZXdQcmltaXRpdmVUeXBlKFByaW1pdGl2ZVR5cGUuSU5UKSk7CisJCQkJfQorCQkJCXB1Ymxp
YyBBU1ROb2RlIGdldCgpIHsKKwkJCQkJcmV0dXJuIHguZ2V0RWxlbWVudFR5cGUoKTsKKwkJCQl9
CisJCQkJcHVibGljIHZvaWQgc2V0KEFTVE5vZGUgdmFsdWUpIHsKKwkJCQkJeC5zZXRFbGVtZW50
VHlwZSgoVHlwZSkgdmFsdWUpOworCQkJCX0KKwkJCX0pOwogCi0JCWFzc2VydFRydWUoeC5nZXRE
aW1lbnNpb25zKCkgPT0gNSk7Ci0JCWFzc2VydFRydWUoeC5nZXRFbGVtZW50VHlwZSgpLmlzUHJp
bWl0aXZlVHlwZSgpKTsKLQkJZmluYWwgQXJyYXlUeXBlIHgzID0gdGhpcy5hc3QubmV3QXJyYXlU
eXBlKHgsIDIpOwotCQlhc3NlcnRUcnVlKHgzLmdldERpbWVuc2lvbnMoKSA9PSA3KTsKLQkJCisJ
CQl4LnNldEVsZW1lbnRUeXBlKHRoaXMuYXN0Lm5ld1ByaW1pdGl2ZVR5cGUoUHJpbWl0aXZlVHlw
ZS5JTlQpKTsKKwkJCWFzc2VydFRydWUoeC5nZXREaW1lbnNpb25zKCkgPT0gMSk7CisJCQlhc3Nl
cnRUcnVlKHguZ2V0RWxlbWVudFR5cGUoKS5pc1ByaW1pdGl2ZVR5cGUoKSk7CisJCX0KKwogCQl0
cnkgewogCQkJdGhpcy5hc3QubmV3QXJyYXlUeXBlKG51bGwsIDIpOwogCQl9IGNhdGNoKElsbGVn
YWxBcmd1bWVudEV4Y2VwdGlvbiBlKSB7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFZpc2l0
b3JUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFZpc2l0b3JUZXN0LmphdmEKaW5kZXggYTk0Y2Iy
NC4uMDc2ZDQ2YSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwv
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RWaXNpdG9yVGVzdC5qYXZhCisr
KyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9kb20vQVNUVmlzaXRvclRlc3QuamF2YQpAQCAtMTE1Nyw3ICsxMTU3LDggQEAK
IAkJdGhpcy5iLnNldExlbmd0aCgwKTsKIAkJeDEuYWNjZXB0KHYxKTsKIAkJU3RyaW5nIHJlc3Vs
dCA9IHRoaXMuYi50b1N0cmluZygpOwotCQlhc3NlcnRUcnVlKCJbKHRBWyh0UGNoYXJjaGFydFAp
XXRBKV0iLmVxdWFscyhyZXN1bHQpKTsgLy8kTk9OLU5MUy0xJAorCQlTdHJpbmcgZXhwZWN0ZWQg
PSB0aGlzLmFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzggPyAiWyh0QVsodFBjaGFyY2hhcnRQKV10
QSldIiA6ICJbKHRBWyh0UGNoYXJjaGFydFApXVsoQEVEQEVEKV10QSldIjsKKwkJYXNzZXJ0VHJ1
ZShleHBlY3RlZC5lcXVhbHMocmVzdWx0KSk7IC8vJE5PTi1OTFMtMSQKIAl9CiAKIAkvKiogQGRl
cHJlY2F0ZWQgdXNpbmcgZGVwcmVjYXRlZCBjb2RlICovCkBAIC0xMjU0LDcgKzEyNTUsOCBAQAog
CQl0aGlzLmIuc2V0TGVuZ3RoKDApOwogCQl4MS5hY2NlcHQodjEpOwogCQlTdHJpbmcgcmVzdWx0
ID0gdGhpcy5iLnRvU3RyaW5nKCk7Ci0JCWFzc2VydFRydWUocmVzdWx0LmVxdWFscygiWyhlQUMi
KyJbKHRBIit0aGlzLlQxUysidEEpXSIrdGhpcy5FMVMrdGhpcy5FMlMrIlsoZUFJZUFJKV1lQUMp
XSIpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5M
Uy00JAorCQlTdHJpbmcgZGltID0gdGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4ID8gIiIg
OiAiWyhARURARUQpXSI7CisJCWFzc2VydFRydWUocmVzdWx0LmVxdWFscygiWyhlQUMiKyJbKHRB
Iit0aGlzLlQxUysgZGltICsidEEpXSIrdGhpcy5FMVMrdGhpcy5FMlMrIlsoZUFJZUFJKV1lQUMp
XSIpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5M
Uy00JAogCX0KIAlwdWJsaWMgdm9pZCB0ZXN0QXJyYXlJbml0aWFsaXplcigpIHsKIAkJQXJyYXlJ
bml0aWFsaXplciB4MSA9IHRoaXMuYXN0Lm5ld0FycmF5SW5pdGlhbGl6ZXIoKTsKZGlmZiAtLWdp
dCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQv
Y29yZS90ZXN0cy9kb20vVHlwZUFubm90YXRpb25zQ29udmVydGVyVGVzdC5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L2RvbS9UeXBlQW5ub3RhdGlvbnNDb252ZXJ0ZXJUZXN0LmphdmEKaW5kZXggMWNhMGNiMy4uYzdl
ZmViMCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9UeXBlQW5ub3RhdGlvbnNDb252ZXJ0ZXJUZXN0
LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9UeXBlQW5ub3RhdGlvbnNDb252ZXJ0ZXJUZXN0LmphdmEK
QEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChj
KSAyMDAwLCAyMDEyIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChj
KSAyMDAwLCAyMDEzIElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyBy
ZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICog
YXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMg
TGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5k
IGlzIGF2YWlsYWJsZSBhdApAQCAtMTYyLDcgKzE2Miw3IEBACiAJCQkJImNsYXNzIFo8UT4ge1xu
IiArIAogCQkJCSIgICAgfVxuIiArIAogCQkJCSIgIH1cbiIgKyAKLQkJCQkiICBPYmplY3Qgbz0o
QE1hcmtlciBYPEBNYXJrZXIgU3RyaW5nPi5ATWFya2VyIFk8QE1hcmtlciBJbnRlZ2VyPi5ATWFy
a2VyIFo8QE1hcmtlciBPYmplY3Q+QE1hcmtlciBbXVtdQE1hcmtlciBbXVtdKW51bGw7XG4iICsg
CisJCQkJIiAgT2JqZWN0IG89KEBNYXJrZXIgWDxATWFya2VyIFN0cmluZz4uQE1hcmtlciBZPEBN
YXJrZXIgSW50ZWdlcj4uQE1hcmtlciBaPEBNYXJrZXIgT2JqZWN0PiBATWFya2VyIFtdIFtdIEBN
YXJrZXIgW10gW10pbnVsbDtcbiIgKyAKIAkJCQkiICBAamF2YS5sYW5nLmFubm90YXRpb24uVGFy
Z2V0KGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlLlRZUEVfVVNFKSBAaW50ZXJmYWNl
IE1hcmtlciB7fVxuIiArIAogCQkJCSJ9XG4iOwogCQlhc3NlcnRBU1ROb2RlRXF1YWxzKGV4cGVj
dGVkT3V0cHV0LCBub2RlKTsKQEAgLTE5MSw3ICsxOTEsNyBAQAogCQkJCSJjbGFzcyBaPFE+IHtc
biIgKyAKIAkJCQkiICAgIH1cbiIgKyAKIAkJCQkiICB9XG4iICsgCi0JCQkJIiAgT2JqZWN0IG89
KEBNYXJrZXIgWDxATWFya2VyIFN0cmluZz4uQE1hcmtlciBZPEBNYXJrZXIgSW50ZWdlcj4uQE1h
cmtlciBaPEBNYXJrZXIgT2JqZWN0PltdQE1hcmtlciBbXVtdQE1hcmtlciBbXSludWxsO1xuIiAr
IAorCQkJCSIgIE9iamVjdCBvPShATWFya2VyIFg8QE1hcmtlciBTdHJpbmc+LkBNYXJrZXIgWTxA
TWFya2VyIEludGVnZXI+LkBNYXJrZXIgWjxATWFya2VyIE9iamVjdD4gW10gQE1hcmtlciBbXSBb
XSBATWFya2VyIFtdKW51bGw7XG4iICsgCiAJCQkJIiAgQGphdmEubGFuZy5hbm5vdGF0aW9uLlRh
cmdldChqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZS5UWVBFX1VTRSkgQGludGVyZmFj
ZSBNYXJrZXIge31cbiIgKyAKIAkJCQkifVxuIjsKIAkJYXNzZXJ0QVNUTm9kZUVxdWFscyhleHBl
Y3RlZE91dHB1dCwgbm9kZSk7CkBAIC0yMjAsNyArMjIwLDcgQEAKIAkJCQkiY2xhc3MgWjxRPiB7
XG4iICsgCiAJCQkJIiAgICB9XG4iICsgCiAJCQkJIiAgfVxuIiArIAotCQkJCSIgIGludFtdW11b
XVtdIG89KEBPbmUgaW50W11AVHdvIFtdW11AVGhyZWUgW10pbnVsbDtcbiIgKyAKKwkJCQkiICBp
bnQgW10gW10gW10gW10gbz0oQE9uZSBpbnQgW10gQFR3byBbXSBbXSBAVGhyZWUgW10pbnVsbDtc
biIgKyAKIAkJCQkiICBAamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0KGphdmEubGFuZy5hbm5v
dGF0aW9uLkVsZW1lbnRUeXBlLlRZUEVfVVNFKSBAaW50ZXJmYWNlIE1hcmtlciB7fVxuIiArIAog
CQkJCSJ9XG4iOwogCQlhc3NlcnRBU1ROb2RlRXF1YWxzKGV4cGVjdGVkT3V0cHV0LCBub2RlKTsK
QEAgLTI0OSw3ICsyNDksNyBAQAogCQkJCSJjbGFzcyBaPFE+IHtcbiIgKyAKIAkJCQkiICAgIH1c
biIgKyAKIAkJCQkiICB9XG4iICsgCi0JCQkJIiAgU3RyaW5nW11bXVtdW10gbz0oQE9uZSBTdHJp
bmdbXUBUd28gW11bXUBUaHJlZSBbXSludWxsO1xuIiArIAorCQkJCSIgIFN0cmluZyBbXSBbXSBb
XSBbXSBvPShAT25lIFN0cmluZyBbXSBAVHdvIFtdIFtdIEBUaHJlZSBbXSludWxsO1xuIiArIAog
CQkJCSIgIEBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQoamF2YS5sYW5nLmFubm90YXRpb24u
RWxlbWVudFR5cGUuVFlQRV9VU0UpIEBpbnRlcmZhY2UgTWFya2VyIHt9XG4iICsgCiAJCQkJIn1c
biI7CiAJCWFzc2VydEFTVE5vZGVFcXVhbHMoZXhwZWN0ZWRPdXRwdXQsIG5vZGUpOwpAQCAtMjc4
LDcgKzI3OCw3IEBACiAJCQkJImNsYXNzIFo8UT4ge1xuIiArIAogCQkJCSIgICAgfVxuIiArIAog
CQkJCSIgIH1cbiIgKyAKLQkJCQkiICBPYmplY3Qgbz0oQE9uZSBYPFN0cmluZz5bXUBUd28gW11b
XUBUaHJlZSBbXSludWxsO1xuIiArIAorCQkJCSIgIE9iamVjdCBvPShAT25lIFg8U3RyaW5nPiBb
XSBAVHdvIFtdIFtdIEBUaHJlZSBbXSludWxsO1xuIiArIAogCQkJCSIgIEBqYXZhLmxhbmcuYW5u
b3RhdGlvbi5UYXJnZXQoamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGUuVFlQRV9VU0Up
IEBpbnRlcmZhY2UgTWFya2VyIHt9XG4iICsgCiAJCQkJIn1cbiI7CiAJCWFzc2VydEFTVE5vZGVF
cXVhbHMoZXhwZWN0ZWRPdXRwdXQsIG5vZGUpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUv
ZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdFeHByZXNzaW9uc1Rlc3QuamF2YSBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdy
aXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nRXhwcmVzc2lvbnNUZXN0LmphdmEKaW5kZXggMGFm
ZjRmOC4uOWU4ZWRlZCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9k
ZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RS
ZXdyaXRpbmdFeHByZXNzaW9uc1Rlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmli
aW5nL0FTVFJld3JpdGluZ0V4cHJlc3Npb25zVGVzdC5qYXZhCkBAIC0yNjMsMjMgKzI2MywyNSBA
QAogCQkJbWVtYmVyVmFsdWVQYWlyLnNldE5hbWUoYXN0Lm5ld1NpbXBsZU5hbWUoInYiKSk7CiAJ
CQltZW1iZXJWYWx1ZVBhaXIuc2V0VmFsdWUoYXN0Lm5ld051bWJlckxpdGVyYWwoIjk5IikpOwog
CQkJYW5ub3RhdGlvbkMudmFsdWVzKCkuYWRkKG1lbWJlclZhbHVlUGFpcik7Ci0JCQlhcnJheVR5
cGUuYW5ub3RhdGlvbnMoKS5hZGQoYW5ub3RhdGlvbkMpOworCQkJRXh0cmFEaW1lbnNpb24gZGlt
MCA9IGFycmF5VHlwZS5nZXREaW1lbnNpb25ObygwKTsKKwkJCWRpbTAuYW5ub3RhdGlvbnMoKS5h
ZGQoYW5ub3RhdGlvbkMpOwogCQkJCi0JCQlhcnJheVR5cGU9IGFzdC5uZXdBcnJheVR5cGUoYXJy
YXlUeXBlKTsKIAkJCVNpbmdsZU1lbWJlckFubm90YXRpb24gYW5ub3RhdGlvbkI9IGFzdC5uZXdT
aW5nbGVNZW1iZXJBbm5vdGF0aW9uKCk7CiAJCQlhbm5vdGF0aW9uQi5zZXRUeXBlTmFtZShhc3Qu
bmV3U2ltcGxlTmFtZSgiQiIpKTsKIAkJCWFubm90YXRpb25CLnNldFZhbHVlKGFzdC5uZXdOdW1i
ZXJMaXRlcmFsKCIwIikpOwotCQkJYXJyYXlUeXBlLmFubm90YXRpb25zKCkuYWRkKGFubm90YXRp
b25CKTsKKwkJCUV4dHJhRGltZW5zaW9uIGRpbTEgPSBhc3QubmV3RXh0cmFEaW1lbnNpb24oKTsK
KwkJCWRpbTEuYW5ub3RhdGlvbnMoKS5hZGQoYW5ub3RhdGlvbkIpOworCQkJYXJyYXlUeXBlLmRp
bWVuc2lvbnMoKS5hZGQoMCwgZGltMSk7CiAJCQkKLQkJCWFycmF5VHlwZT0gYXN0Lm5ld0FycmF5
VHlwZShhcnJheVR5cGUpOwogCQkJTWFya2VyQW5ub3RhdGlvbiBhbm5vdGF0aW9uQT0gYXN0Lm5l
d01hcmtlckFubm90YXRpb24oKTsKIAkJCWFubm90YXRpb25BLnNldFR5cGVOYW1lKGFzdC5uZXdT
aW1wbGVOYW1lKCJBIikpOwotCQkJYXJyYXlUeXBlLmFubm90YXRpb25zKCkuYWRkKGFubm90YXRp
b25BKTsKLQkJCQotCQkJYXJyYXlDcmVhdGlvbi5zZXRUeXBlKGFycmF5VHlwZSk7CisJCQlFeHRy
YURpbWVuc2lvbiBkaW0yID0gYXN0Lm5ld0V4dHJhRGltZW5zaW9uKCk7CisJCQlkaW0yLmFubm90
YXRpb25zKCkuYWRkKGFubm90YXRpb25BKTsKKwkJCWFycmF5VHlwZS5kaW1lbnNpb25zKCkuYWRk
KDAsIGRpbTIpOwogCQkJCiAJCQlhcnJheUNyZWF0aW9uLmRpbWVuc2lvbnMoKS5hZGQoYXN0Lm5l
d051bWJlckxpdGVyYWwoIjEiKSk7CiAJCQlhcnJheUNyZWF0aW9uLmRpbWVuc2lvbnMoKS5hZGQo
YXN0Lm5ld051bWJlckxpdGVyYWwoIjIiKSk7CisJCQlhcnJheUNyZWF0aW9uLnNldFR5cGUoYXJy
YXlUeXBlKTsKIAkJCQogCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShpbnZvY2F0aW9uLCBNZXRo
b2RJbnZvY2F0aW9uLkFSR1VNRU5UU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChhcnJheUNyZWF0aW9u
LCBudWxsKTsKIAkJfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9k
ZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RS
ZXdyaXRpbmdNZXRob2REZWNsVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
bW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9B
U1RSZXdyaXRpbmdNZXRob2REZWNsVGVzdC5qYXZhCmluZGV4IDdhMjEyMjUuLjVkYTAyNjIgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0aG9kRGVj
bFRlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ01l
dGhvZERlY2xUZXN0LmphdmEKQEAgLTExMSw3ICsxMTEsNyBAQAogCQkJCWxpc3RSZXdyaXRlLnJl
bW92ZShleHRyYURpbWVuc2lvbiwgbnVsbCk7CiAJCQl9CiAJCQlmb3IgKGludCBpPSAwOyBpIDwg
ZXh0cmFEaW1lbnNpb25zOyBpKyspIHsKLQkJCQlsaXN0UmV3cml0ZS5pbnNlcnRMYXN0KG1ldGhv
ZERlY2wuZ2V0QVNUKCkubmV3RXh0cmFEaW1lbnNpb24oKSwgbnVsbCk7CisJCQkJbGlzdFJld3Jp
dGUuaW5zZXJ0Rmlyc3QobWV0aG9kRGVjbC5nZXRBU1QoKS5uZXdFeHRyYURpbWVuc2lvbigpLCBu
dWxsKTsKIAkJCX0KIAkJfQogCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJp
bmcvQVNUUmV3cml0aW5nU3RhdGVtZW50c1Rlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2Ny
aWJpbmcvQVNUUmV3cml0aW5nU3RhdGVtZW50c1Rlc3QuamF2YQppbmRleCAwODJmYTU3Li4zYTIy
NDQ3IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ1N0
YXRlbWVudHNUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwv
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdy
aXRpbmdTdGF0ZW1lbnRzVGVzdC5qYXZhCkBAIC01OTQyLDI0ICs1OTQyLDI1IEBACiAJCQlMaXN0
UmV3cml0ZSBsaXN0UmV3cml0ZT0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShmcmFnbWVudCwgVmFy
aWFibGVEZWNsYXJhdGlvbkZyYWdtZW50LkVYVFJBX0RJTUVOU0lPTlMyX1BST1BFUlRZKTsKIAkJ
CUV4dHJhRGltZW5zaW9uIGRpbT0gYXN0Lm5ld0V4dHJhRGltZW5zaW9uKCk7CiAJCQlNYXJrZXJB
bm5vdGF0aW9uIG1hcmtlckFubm90YXRpb247Ci0JCQlsaXN0UmV3cml0ZS5pbnNlcnRBdChkaW0s
IDAsIG51bGwpOworCQkJbGlzdFJld3JpdGUuaW5zZXJ0Rmlyc3QoZGltLCBudWxsKTsKIAogCQkJ
QXJyYXlUeXBlIGNyZWF0aW9uVHlwZSA9IGNyZWF0aW9uLmdldFR5cGUoKTsKLQkJCUFycmF5VHlw
ZSBuZXdBcnJheVR5cGUgPSBhc3QubmV3QXJyYXlUeXBlKChBcnJheVR5cGUpIEFTVE5vZGUuY29w
eVN1YnRyZWUoYXN0LCBjcmVhdGlvblR5cGUpKTsKLQkJCW5ld0FycmF5VHlwZSA9IGFzdC5uZXdB
cnJheVR5cGUobmV3QXJyYXlUeXBlKTsKLQkJCXJld3JpdGUuc2V0KGNyZWF0aW9uLCBBcnJheUNy
ZWF0aW9uLlRZUEVfUFJPUEVSVFksIG5ld0FycmF5VHlwZSwgbnVsbCk7Ci0KLQkJCWxpc3RSZXdy
aXRlPSByZXdyaXRlLmdldExpc3RSZXdyaXRlKG5ld0FycmF5VHlwZSwgQXJyYXlUeXBlLkFOTk9U
QVRJT05TX1BST1BFUlRZKTsKKwkJCUFycmF5VHlwZSBuZXdBcnJheVR5cGUgPSAoQXJyYXlUeXBl
KSBBU1ROb2RlLmNvcHlTdWJ0cmVlKGFzdCwgY3JlYXRpb25UeXBlKTsKKwkJCW5ld0FycmF5VHlw
ZS5kaW1lbnNpb25zKCkuYWRkKGFzdC5uZXdFeHRyYURpbWVuc2lvbigpKTsKKwkJCQorCQkJRXh0
cmFEaW1lbnNpb24gZGltMCA9IGFzdC5uZXdFeHRyYURpbWVuc2lvbigpOwogCQkJbWFya2VyQW5u
b3RhdGlvbj0gYXN0Lm5ld01hcmtlckFubm90YXRpb24oKTsKIAkJCW1hcmtlckFubm90YXRpb24u
c2V0VHlwZU5hbWUoYXN0Lm5ld1NpbXBsZU5hbWUoIkFubm90MyIpKTsKLQkJCWxpc3RSZXdyaXRl
Lmluc2VydEF0KG1hcmtlckFubm90YXRpb24sIDAsIG51bGwpOwotCQkJbmV3QXJyYXlUeXBlLmFu
bm90YXRpb25zKCkuYWRkKG1hcmtlckFubm90YXRpb24pOworCQkJZGltMC5hbm5vdGF0aW9ucygp
LmFkZChtYXJrZXJBbm5vdGF0aW9uKTsKIAkJCW1hcmtlckFubm90YXRpb249IGFzdC5uZXdNYXJr
ZXJBbm5vdGF0aW9uKCk7CiAJCQltYXJrZXJBbm5vdGF0aW9uLnNldFR5cGVOYW1lKGFzdC5uZXdT
aW1wbGVOYW1lKCJBbm5vdDIiKSk7Ci0JCQlsaXN0UmV3cml0ZS5pbnNlcnRBdChtYXJrZXJBbm5v
dGF0aW9uLCAxLCBudWxsKTsKKwkJCWRpbTAuYW5ub3RhdGlvbnMoKS5hZGQobWFya2VyQW5ub3Rh
dGlvbik7CiAJCQltYXJrZXJBbm5vdGF0aW9uPSBhc3QubmV3TWFya2VyQW5ub3RhdGlvbigpOwog
CQkJbWFya2VyQW5ub3RhdGlvbi5zZXRUeXBlTmFtZShhc3QubmV3U2ltcGxlTmFtZSgiQW5ub3Qx
IikpOwotCQkJbGlzdFJld3JpdGUuaW5zZXJ0QXQobWFya2VyQW5ub3RhdGlvbiwgMiwgbnVsbCk7
CisJCQlkaW0wLmFubm90YXRpb25zKCkuYWRkKG1hcmtlckFubm90YXRpb24pOworCQkJbmV3QXJy
YXlUeXBlLmRpbWVuc2lvbnMoKS5hZGQoZGltMCk7CisJCQlyZXdyaXRlLnNldChjcmVhdGlvbiwg
QXJyYXlDcmVhdGlvbi5UWVBFX1BST1BFUlRZLCBuZXdBcnJheVR5cGUsIG51bGwpOworCiAJCX0K
IAkJewogCQkJc3RhdGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIHN0YXRl
bWVudHMuZ2V0KDEpOwpAQCAtNTk3OCw0MyArNTk3OSw0NCBAQAogCQkJRXhwcmVzc2lvbiBleHAg
PSAoRXhwcmVzc2lvbikgZXhwcmVzc2lvbnMuZ2V0KDEpOwogCQkJbGlzdFJld3JpdGUucmVtb3Zl
KGV4cCwgbnVsbCk7CiAKLQkJCWxpc3RSZXdyaXRlID0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShj
cmVhdGlvblR5cGUsIEFycmF5VHlwZS5BTk5PVEFUSU9OU19QUk9QRVJUWSk7Ci0JCQlNYXJrZXJB
bm5vdGF0aW9uIGFubm90YXRpb24gPSAoTWFya2VyQW5ub3RhdGlvbikgY3JlYXRpb25UeXBlLmFu
bm90YXRpb25zKCkuZ2V0KDApOworCQkJRXh0cmFEaW1lbnNpb24gZGltID0gY3JlYXRpb25UeXBl
LmdldERpbWVuc2lvbk5vKDIpOworCQkJbGlzdFJld3JpdGUgPSByZXdyaXRlLmdldExpc3RSZXdy
aXRlKGRpbSwgRXh0cmFEaW1lbnNpb24uQU5OT1RBVElPTlNfUFJPUEVSVFkpOworCQkJTWFya2Vy
QW5ub3RhdGlvbiBhbm5vdGF0aW9uID0gKE1hcmtlckFubm90YXRpb24pIGRpbS5hbm5vdGF0aW9u
cygpLmdldCgwKTsKIAkJCWxpc3RSZXdyaXRlLnJlbW92ZShhbm5vdGF0aW9uLCBudWxsKTsKIAot
CQkJY3JlYXRpb25UeXBlID0gKEFycmF5VHlwZSkgY3JlYXRpb25UeXBlLmdldENvbXBvbmVudFR5
cGUoKTsKLQkJCWxpc3RSZXdyaXRlID0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShjcmVhdGlvblR5
cGUsIEFycmF5VHlwZS5BTk5PVEFUSU9OU19QUk9QRVJUWSk7Ci0JCQlhbm5vdGF0aW9uID0gKE1h
cmtlckFubm90YXRpb24pIGNyZWF0aW9uVHlwZS5hbm5vdGF0aW9ucygpLmdldCgxKTsKKwkJCWRp
bSA9IGNyZWF0aW9uVHlwZS5nZXREaW1lbnNpb25ObygxKTsKKwkJCWxpc3RSZXdyaXRlID0gcmV3
cml0ZS5nZXRMaXN0UmV3cml0ZShkaW0sIEV4dHJhRGltZW5zaW9uLkFOTk9UQVRJT05TX1BST1BF
UlRZKTsKKwkJCWFubm90YXRpb24gPSAoTWFya2VyQW5ub3RhdGlvbikgZGltLmFubm90YXRpb25z
KCkuZ2V0KDEpOwogCQkJbGlzdFJld3JpdGUucmVtb3ZlKGFubm90YXRpb24sIG51bGwpOwogCi0J
CQljcmVhdGlvblR5cGUgPSAoQXJyYXlUeXBlKSBjcmVhdGlvblR5cGUuZ2V0Q29tcG9uZW50VHlw
ZSgpOwotCQkJbGlzdFJld3JpdGUgPSByZXdyaXRlLmdldExpc3RSZXdyaXRlKGNyZWF0aW9uVHlw
ZSwgQXJyYXlUeXBlLkFOTk9UQVRJT05TX1BST1BFUlRZKTsKLQkJCWFubm90YXRpb24gPSAoTWFy
a2VyQW5ub3RhdGlvbikgY3JlYXRpb25UeXBlLmFubm90YXRpb25zKCkuZ2V0KDEpOworCQkJZGlt
ID0gY3JlYXRpb25UeXBlLmdldERpbWVuc2lvbk5vKDApOworCQkJbGlzdFJld3JpdGUgPSByZXdy
aXRlLmdldExpc3RSZXdyaXRlKGRpbSwgRXh0cmFEaW1lbnNpb24uQU5OT1RBVElPTlNfUFJPUEVS
VFkpOworCQkJYW5ub3RhdGlvbiA9IChNYXJrZXJBbm5vdGF0aW9uKSBkaW0uYW5ub3RhdGlvbnMo
KS5nZXQoMSk7CiAJCQlsaXN0UmV3cml0ZS5yZW1vdmUoYW5ub3RhdGlvbiwgbnVsbCk7CiAKIAkJ
CWZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgx
KTsKIAogCQkJY3JlYXRpb24gPSAoQXJyYXlDcmVhdGlvbikgZnJhZ21lbnQuZ2V0SW5pdGlhbGl6
ZXIoKTsKIAkJCWNyZWF0aW9uVHlwZSA9IGNyZWF0aW9uLmdldFR5cGUoKTsKLQotCQkJbGlzdFJl
d3JpdGUgPSByZXdyaXRlLmdldExpc3RSZXdyaXRlKGNyZWF0aW9uVHlwZSwgQXJyYXlUeXBlLkFO
Tk9UQVRJT05TX1BST1BFUlRZKTsKLQkJCWFubm90YXRpb24gPSAoTWFya2VyQW5ub3RhdGlvbikg
Y3JlYXRpb25UeXBlLmFubm90YXRpb25zKCkuZ2V0KDApOworCQkJZGltID0gY3JlYXRpb25UeXBl
LmdldERpbWVuc2lvbk5vKDIpOworCQkJbGlzdFJld3JpdGUgPSByZXdyaXRlLmdldExpc3RSZXdy
aXRlKGRpbSwgRXh0cmFEaW1lbnNpb24uQU5OT1RBVElPTlNfUFJPUEVSVFkpOworCQkJYW5ub3Rh
dGlvbiA9IChNYXJrZXJBbm5vdGF0aW9uKSBkaW0uYW5ub3RhdGlvbnMoKS5nZXQoMSk7CiAJCQls
aXN0UmV3cml0ZS5yZW1vdmUoYW5ub3RhdGlvbiwgbnVsbCk7Ci0JCQlhbm5vdGF0aW9uID0gKE1h
cmtlckFubm90YXRpb24pIGNyZWF0aW9uVHlwZS5hbm5vdGF0aW9ucygpLmdldCgxKTsKKwkJCWFu
bm90YXRpb24gPSAoTWFya2VyQW5ub3RhdGlvbikgZGltLmFubm90YXRpb25zKCkuZ2V0KDApOwog
CQkJbGlzdFJld3JpdGUucmVtb3ZlKGFubm90YXRpb24sIG51bGwpOwogCi0JCQljcmVhdGlvblR5
cGUgPSAoQXJyYXlUeXBlKSBjcmVhdGlvblR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQkJbGlz
dFJld3JpdGUgPSByZXdyaXRlLmdldExpc3RSZXdyaXRlKGNyZWF0aW9uVHlwZSwgQXJyYXlUeXBl
LkFOTk9UQVRJT05TX1BST1BFUlRZKTsKLQkJCWFubm90YXRpb24gPSAoTWFya2VyQW5ub3RhdGlv
bikgY3JlYXRpb25UeXBlLmFubm90YXRpb25zKCkuZ2V0KDApOworCQkJZGltID0gY3JlYXRpb25U
eXBlLmdldERpbWVuc2lvbk5vKDEpOworCQkJbGlzdFJld3JpdGUgPSByZXdyaXRlLmdldExpc3RS
ZXdyaXRlKGRpbSwgRXh0cmFEaW1lbnNpb24uQU5OT1RBVElPTlNfUFJPUEVSVFkpOworCQkJYW5u
b3RhdGlvbiA9IChNYXJrZXJBbm5vdGF0aW9uKSBkaW0uYW5ub3RhdGlvbnMoKS5nZXQoMSk7CiAJ
CQlsaXN0UmV3cml0ZS5yZW1vdmUoYW5ub3RhdGlvbiwgbnVsbCk7Ci0JCQlhbm5vdGF0aW9uID0g
KE1hcmtlckFubm90YXRpb24pIGNyZWF0aW9uVHlwZS5hbm5vdGF0aW9ucygpLmdldCgxKTsKKwkJ
CWFubm90YXRpb24gPSAoTWFya2VyQW5ub3RhdGlvbikgZGltLmFubm90YXRpb25zKCkuZ2V0KDAp
OwogCQkJbGlzdFJld3JpdGUucmVtb3ZlKGFubm90YXRpb24sIG51bGwpOwogCi0JCQljcmVhdGlv
blR5cGUgPSAoQXJyYXlUeXBlKSBjcmVhdGlvblR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQkJ
bGlzdFJld3JpdGUgPSByZXdyaXRlLmdldExpc3RSZXdyaXRlKGNyZWF0aW9uVHlwZSwgQXJyYXlU
eXBlLkFOTk9UQVRJT05TX1BST1BFUlRZKTsKLQkJCWFubm90YXRpb24gPSAoTWFya2VyQW5ub3Rh
dGlvbikgY3JlYXRpb25UeXBlLmFubm90YXRpb25zKCkuZ2V0KDApOworCQkJZGltID0gY3JlYXRp
b25UeXBlLmdldERpbWVuc2lvbk5vKDApOworCQkJbGlzdFJld3JpdGUgPSByZXdyaXRlLmdldExp
c3RSZXdyaXRlKGRpbSwgRXh0cmFEaW1lbnNpb24uQU5OT1RBVElPTlNfUFJPUEVSVFkpOworCQkJ
YW5ub3RhdGlvbiA9IChNYXJrZXJBbm5vdGF0aW9uKSBkaW0uYW5ub3RhdGlvbnMoKS5nZXQoMSk7
CiAJCQlsaXN0UmV3cml0ZS5yZW1vdmUoYW5ub3RhdGlvbiwgbnVsbCk7Ci0JCQlhbm5vdGF0aW9u
ID0gKE1hcmtlckFubm90YXRpb24pIGNyZWF0aW9uVHlwZS5hbm5vdGF0aW9ucygpLmdldCgxKTsK
KwkJCWFubm90YXRpb24gPSAoTWFya2VyQW5ub3RhdGlvbikgZGltLmFubm90YXRpb25zKCkuZ2V0
KDApOwogCQkJbGlzdFJld3JpdGUucmVtb3ZlKGFubm90YXRpb24sIG51bGwpOwogCiAJCQlleHBy
ZXNzaW9ucyA9IGNyZWF0aW9uLmRpbWVuc2lvbnMoKTsKQEAgLTYwMzUsOCArNjAzNyw4IEBACiAJ
CWJ1Zi5hcHBlbmQoImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZTtcbiIp
OwogCQlidWYuYXBwZW5kKCJwdWJsaWMgY2xhc3MgRSB7XG4iKTsKIAkJYnVmLmFwcGVuZCgiICAg
IHB1YmxpYyB2b2lkIGZvbygpIHtcbiIpOwotCQlidWYuYXBwZW5kKCIgICAgCWludCBbXSBpIFtd
IEBBbm5vdDEgQEFubm90MiBbXSBAQW5ub3QxIEBBbm5vdDMgW10gPSBuZXcgaW50IEBBbm5vdDEg
QEFubm90MiAgWzJdIEBBbm5vdDIgQEFubm90MyBbc2l6ZSgpXSBAQW5ub3QyIEBBbm5vdDEgW11b
XSBAQW5ub3QzIEBBbm5vdDIgQEFubm90MVtdO1xuIik7Ci0JCWJ1Zi5hcHBlbmQoIiAgICAJaW50
IFtdIGogW11bXSA9IG5ldyBpbnQgQEFubm90MSBbMl0gQEFubm90MiBbXSBAQW5ub3QzIFtdLCBr
IFtdW10gPSBuZXcgaW50WzJdWzEwXVtzaXplKCldO1xuIik7CisJCWJ1Zi5hcHBlbmQoIiAgICAJ
aW50IFtdIGkgW10gQEFubm90MSBAQW5ub3QyIFtdIEBBbm5vdDEgQEFubm90MyBbXSA9IG5ldyBp
bnQgQEFubm90MSBAQW5ub3QyICBbMl0gQEFubm90MiBAQW5ub3QzIFtzaXplKCldIEBBbm5vdDIg
QEFubm90MSBbXVtdQEFubm90MyBAQW5ub3QyIEBBbm5vdDEgW107XG4iKTsKKwkJYnVmLmFwcGVu
ZCgiICAgIAlpbnQgW10gaiBbXVtdID0gbmV3IGludCBAQW5ub3QyIFsyXSBAQW5ub3QyIFtdIEBB
bm5vdDEgW10sIGsgW11bXSA9IG5ldyBpbnQgWzJdIFsxMF0gW3NpemUoKV07XG4iKTsKIAkJYnVm
LmFwcGVuZCgiICAgIH1cbiIpOwogCQlidWYuYXBwZW5kKCIgICAgcHVibGljIGludCBzaXplKCkg
eyByZXR1cm4gMjsgfVxuIik7CiAJCWJ1Zi5hcHBlbmQoIn1cbiIpOwpAQCAtNjA4NiwxMCArNjA4
OCwxMCBAQAogCQkJQXJyYXlDcmVhdGlvbiBjcmVhdGlvbiA9IChBcnJheUNyZWF0aW9uKSBmcmFn
bWVudC5nZXRJbml0aWFsaXplcigpOwogCiAJCQlBcnJheVR5cGUgYXJyYXlUeXBlID0gY3JlYXRp
b24uZ2V0VHlwZSgpOwotCQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgYXJyYXlUeXBlLmdldENv
bXBvbmVudFR5cGUoKTsKLQkJCUxpc3RSZXdyaXRlIGxpc3RSZXdyaXRlPSByZXdyaXRlLmdldExp
c3RSZXdyaXRlKGFycmF5VHlwZSwgQXJyYXlUeXBlLkFOTk9UQVRJT05TX1BST1BFUlRZKTsKLQkJ
CWxpc3RSZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSlhcnJheVR5cGUuYW5ub3RhdGlvbnMoKS5nZXQo
MCksIG51bGwpOwotCQkJbGlzdFJld3JpdGUucmVtb3ZlKChBU1ROb2RlKWFycmF5VHlwZS5hbm5v
dGF0aW9ucygpLmdldCgxKSwgbnVsbCk7CisJCQlFeHRyYURpbWVuc2lvbiBkaW0gPSBhcnJheVR5
cGUuZ2V0RGltZW5zaW9uTm8oMSk7CisJCQlMaXN0UmV3cml0ZSBsaXN0UmV3cml0ZT0gcmV3cml0
ZS5nZXRMaXN0UmV3cml0ZShkaW0sIEV4dHJhRGltZW5zaW9uLkFOTk9UQVRJT05TX1BST1BFUlRZ
KTsKKwkJCWxpc3RSZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSlkaW0uYW5ub3RhdGlvbnMoKS5nZXQo
MCksIG51bGwpOworCQkJbGlzdFJld3JpdGUucmVtb3ZlKChBU1ROb2RlKWRpbS5hbm5vdGF0aW9u
cygpLmdldCgxKSwgbnVsbCk7CiAJCQlyZXdyaXRlLnNldChjcmVhdGlvbiwgQXJyYXlDcmVhdGlv
bi5UWVBFX1BST1BFUlRZLCBhcnJheVR5cGUsIG51bGwpOwogCQl9CiAJCXsKQEAgLTYxMDEsMTYg
KzYxMDMsMTIgQEAKIAkJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IHR5cGUiLCBBU1ROb2RlLkFS
UkFZX1RZUEUsIHR5cGUuZ2V0Tm9kZVR5cGUoKSk7CiAJCQlBcnJheUNyZWF0aW9uIGNyZWF0aW9u
ID0gKEFycmF5Q3JlYXRpb24pIGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CiAJCQlBcnJheVR5
cGUgY3JlYXRpb25UeXBlID0gY3JlYXRpb24uZ2V0VHlwZSgpOwotCi0JCQlBcnJheVR5cGUgbmV3
QXJyYXlUeXBlID0gKEFycmF5VHlwZSkgY3JlYXRpb25UeXBlLmdldENvbXBvbmVudFR5cGUoKTsK
LQkJCXJld3JpdGUuc2V0KGNyZWF0aW9uLCBBcnJheUNyZWF0aW9uLlRZUEVfUFJPUEVSVFksIG5l
d0FycmF5VHlwZSwgbnVsbCk7Ci0KKwkJCXJld3JpdGUucmVtb3ZlKGNyZWF0aW9uVHlwZS5nZXRE
aW1lbnNpb25ObygwKSwgbnVsbCk7CiAJCQlmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9u
RnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMSk7CiAJCQljcmVhdGlvbiA9IChBcnJheUNyZWF0aW9u
KSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOwogCQkJY3JlYXRpb25UeXBlID0gY3JlYXRpb24u
Z2V0VHlwZSgpOwogCi0JCQluZXdBcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjcmVhdGlvblR5cGUu
Z2V0Q29tcG9uZW50VHlwZSgpOwotCQkJcmV3cml0ZS5zZXQoY3JlYXRpb24sIEFycmF5Q3JlYXRp
b24uVFlQRV9QUk9QRVJUWSwgbmV3QXJyYXlUeXBlLCBudWxsKTsKKwkJCXJld3JpdGUucmVtb3Zl
KGNyZWF0aW9uVHlwZS5nZXREaW1lbnNpb25ObygwKSwgbnVsbCk7CiAJCX0KIAkJLy8gR2V0IG5l
dyBjb2RlCiAJCVN0cmluZyBwcmV2aWV3PSBldmFsdWF0ZVJld3JpdGUoY3UsIHJld3JpdGUpOwpA
QCAtNjEyMCw3ICs2MTE4LDcgQEAKIAkJYnVmLmFwcGVuZCgiaW1wb3J0IGphdmEubGFuZy5hbm5v
dGF0aW9uLkVsZW1lbnRUeXBlO1xuIik7CiAJCWJ1Zi5hcHBlbmQoInB1YmxpYyBjbGFzcyBFIHtc
biIpOwogCQlidWYuYXBwZW5kKCIgICAgcHVibGljIHZvaWQgZm9vKCkge1xuIik7Ci0JCWJ1Zi5h
cHBlbmQoIiAgICAJaW50IFtdIGkgW11bXSA9IG5ldyBpbnQgQEFubm90MSBAQW5ub3QyICBbMl1b
c2l6ZShuZXcgaW50W11bXXt9KV07XG4iKTsKKwkJYnVmLmFwcGVuZCgiICAgIAlpbnQgW10gaSBb
XVtdID0gbmV3IGludCBAQW5ub3QxIEBBbm5vdDIgIFsyXSAgW3NpemUobmV3IGludFtdW117fSld
IFtdO1xuIik7CiAJCWJ1Zi5hcHBlbmQoIiAgICAJaW50IFtdIGogW11bXSA9IG5ldyBpbnQgQEFu
bm90MSBAQW5ub3QyIFsyXSBAQW5ub3QyIEBBbm5vdDMgW3NpemUobmV3IGludFtde30pXSwgayBb
XVtdID0gbmV3IGludCBAQW5ub3QxIEBBbm5vdDIgWzJdIEBBbm5vdDIgQEFubm90MyBbMTBdO1xu
Iik7CiAJCWJ1Zi5hcHBlbmQoIiAgICB9XG4iKTsKIAkJYnVmLmFwcGVuZCgiICAgIHB1YmxpYyBp
bnQgc2l6ZShPYmplY3Qgb2JqKSB7IHJldHVybiAyOyB9XG4iKTsKQEAgLTYxMzcsMyArNjEzNSw0
IEBACiAKIAogCisKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNs
aXBzZS9qZHQvY29yZS9kb20vQVNULmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3Jn
L2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVC5qYXZhCmluZGV4IDc4Zjg5Y2YuLjA3YjAzOWYgMTAw
NjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9k
b20vQVNULmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pk
dC9jb3JlL2RvbS9BU1QuamF2YQpAQCAtOTk5LDYgKzk5OSwxMyBAQAogCX0KIAogCS8qKgorCSAq
IEEgbG9jYWwgbWV0aG9kIHRvIHdvcmthcm91bmQgY2FsbGluZyBkZXByZWNhdGVkIG1ldGhvZCBp
biBhcnJheSB0eXBlLgorCSAqLworCXByaXZhdGUgdm9pZCBzZXRBcnJheUNvbXBvbmVudFR5cGUo
QXJyYXlUeXBlIGFycmF5VHlwZSwgVHlwZSB0eXBlKSB7CisJCWFycmF5VHlwZS5zZXRDb21wb25l
bnRUeXBlKHR5cGUpOworCX0KKworCS8qKgogCSAqIENyZWF0ZXMgYW5kIHJldHVybnMgYSBuZXcg
dW5wYXJlbnRlZCBhbm5vdGF0aW9uIHR5cGUgZGVjbGFyYXRpb24KIAkgKiBub2RlIGZvciBhbiB1
bnNwZWNpZmllZCwgYnV0IGxlZ2FsLCBuYW1lOyBubyBtb2RpZmllcnM7IG5vIGphdmFkb2M7CiAJ
ICogYW5kIGFuIGVtcHR5IGxpc3Qgb2YgbWVtYmVyIGRlY2xhcmF0aW9ucy4KQEAgLTExMDksMTkg
KzExMTYsMzEgQEAKIAogCS8qKgogCSAqIENyZWF0ZXMgYW5kIHJldHVybnMgYSBuZXcgdW5wYXJl
bnRlZCBhcnJheSB0eXBlIG5vZGUgd2l0aCB0aGUgZ2l2ZW4KLQkgKiBjb21wb25lbnQgdHlwZSwg
d2hpY2ggbWF5IGJlIGFub3RoZXIgYXJyYXkgdHlwZS4KKwkgKiBjb21wb25lbnQgdHlwZSwgd2hp
Y2ggbWF5IGJlIGFub3RoZXIgYXJyYXkgdHlwZSBmb3IgbGV2ZWxzIGxlc3MgdGhhbiBKTFM4Lgor
CSAqIEZvciBKTFM4IGFuZCBhYm92ZSB0aGlzIHR5cGUgaGFzIHRvIGJlIGFuIGFubm90YXRhYmxl
IHR5cGUuCiAJICoKLQkgKiBAcGFyYW0gY29tcG9uZW50VHlwZSB0aGUgY29tcG9uZW50IHR5cGUg
KHBvc3NpYmx5IGFub3RoZXIgYXJyYXkgdHlwZSkKKwkgKiBAcGFyYW0gdHlwZSB0aGUgY29tcG9u
ZW50IHR5cGUgKHBvc3NpYmx5IGFub3RoZXIgYXJyYXkgdHlwZSkgZm9yIGxldmVsIDwgSkxTOCwg
CisJICogYSBhbm5vdGF0YWJsZSB0eXBlIGZvciBKTFM4IGFuZCBhYm92ZQogCSAqIEByZXR1cm4g
YSBuZXcgdW5wYXJlbnRlZCBhcnJheSB0eXBlIG5vZGUKIAkgKiBAZXhjZXB0aW9uIElsbGVnYWxB
cmd1bWVudEV4Y2VwdGlvbiBpZjoKIAkgKiA8dWw+CiAJICogPGxpPnRoZSBub2RlIGJlbG9uZ3Mg
dG8gYSBkaWZmZXJlbnQgQVNUPC9saT4KIAkgKiA8bGk+dGhlIG5vZGUgYWxyZWFkeSBoYXMgYSBw
YXJlbnQ8L2xpPgorCSAqIDxsaT4gbGV2ZWwgPj0gSkxTOCBhbmQgdHlwZSBub3QgYW4gYXJyYXkg
dHlwZTwvbGk+CiAJICogPC91bD4KIAkgKi8KLQlwdWJsaWMgQXJyYXlUeXBlIG5ld0FycmF5VHlw
ZShUeXBlIGNvbXBvbmVudFR5cGUpIHsKLQkJQXJyYXlUeXBlIHJlc3VsdCA9IG5ldyBBcnJheVR5
cGUodGhpcyk7Ci0JCXJlc3VsdC5zZXRDb21wb25lbnRUeXBlKGNvbXBvbmVudFR5cGUpOworCXB1
YmxpYyBBcnJheVR5cGUgbmV3QXJyYXlUeXBlKFR5cGUgdHlwZSkgeworCQlBcnJheVR5cGUgcmVz
dWx0OworCQlpZiAodGhpcy5hcGlMZXZlbCA8IEFTVC5KTFM4KSB7CisJCQlyZXN1bHQgPSBuZXcg
QXJyYXlUeXBlKHRoaXMpOworCQkJc2V0QXJyYXlDb21wb25lbnRUeXBlKHJlc3VsdCwgdHlwZSk7
CisJCQlyZXR1cm4gcmVzdWx0OworCQl9CisJCWlmICh0eXBlLmlzQXJyYXlUeXBlKCkpIHsKKwkJ
CXRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oKTsKKwkJfQorCQlyZXN1bHQgPSBu
ZXcgQXJyYXlUeXBlKHRoaXMpOworCQlyZXN1bHQuc2V0RWxlbWVudFR5cGUodHlwZSk7CiAJCXJl
dHVybiByZXN1bHQ7CiAJfQogCkBAIC0xMTMzLDcgKzExNTIsNyBAQAogCSAqIGVsZW1lbnQgdHlw
ZSBvZiB0aGUgcmVzdWx0IHdpbGwgbm90IGJlIHRoZSBzYW1lIGFzIHdoYXQgd2FzIHBhc3NlZCBp
bi4KIAkgKiA8L3A+CiAJICoKLQkgKiBAcGFyYW0gZWxlbWVudFR5cGUgdGhlIGVsZW1lbnQgdHlw
ZSAoY2FuIGJlIGFuIGFycmF5IHR5cGUpCisJICogQHBhcmFtIGVsZW1lbnRUeXBlIHRoZSBlbGVt
ZW50IHR5cGUgKGNhbiBiZSBhbiBhcnJheSB0eXBlIGZvciBKTFM4LiBGb3IgPkpMUzggdGhpcyBz
aG91bGQgYmUgYW4gYW5ub3RhdGFibGUgdHlwZSkKIAkgKiBAcGFyYW0gZGltZW5zaW9ucyB0aGUg
bnVtYmVyIG9mIGRpbWVuc2lvbnMsIGEgcG9zaXRpdmUgbnVtYmVyCiAJICogQHJldHVybiBhIG5l
dyB1bnBhcmVudGVkIGFycmF5IHR5cGUgbm9kZQogCSAqIEBleGNlcHRpb24gSWxsZWdhbEFyZ3Vt
ZW50RXhjZXB0aW9uIGlmOgpAQCAtMTE0Myw2ICsxMTYyLDcgQEAKIAkgKiA8bGk+dGhlIGVsZW1l
bnQgdHlwZSBpcyBudWxsPC9saT4KIAkgKiA8bGk+dGhlIG51bWJlciBvZiBkaW1lbnNpb25zIGlz
IGxvd2VyIHRoYW4gMTwvbGk+CiAJICogPGxpPnRoZSBudW1iZXIgb2YgZGltZW5zaW9ucyBpcyBn
cmVhdGVyIHRoYW4gMTAwMDwvbGk+CisJICogPGxpPmZvciBsZXZlbHMgZnJvbSBKTFM4IGFuZCBs
YXRlciwgaWYgdGhlIGVsZW1lbnQgdHlwZSBpcyBub3QgYW4gYXJyYXkgdHlwZSA8L2xpPgogCSAq
IDwvdWw+CiAJICovCiAJcHVibGljIEFycmF5VHlwZSBuZXdBcnJheVR5cGUoVHlwZSBlbGVtZW50
VHlwZSwgaW50IGRpbWVuc2lvbnMpIHsKQEAgLTExNTAsMTMgKzExNzAsMjcgQEAKIAkJCXRocm93
IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oKTsKIAkJfQogCQlpZiAoZGltZW5zaW9ucyA8
IDEgfHwgZGltZW5zaW9ucyA+IDEwMDApIHsKLQkJCS8vIHdlIHdvdWxkIGJsb3cgb3VyIHN0YWNr
cyBhbnl3YXkgd2l0aCBhIDEwMDAtRCBhcnJheQorCQkJLy8gd2Ugd291bGRibG93IG91ciBzdGFj
a3MgYW55d2F5IHdpdGggYSAxMDAwLUQgYXJyYXkKIAkJCXRocm93IG5ldyBJbGxlZ2FsQXJndW1l
bnRFeGNlcHRpb24oKTsKIAkJfQotCQlBcnJheVR5cGUgcmVzdWx0ID0gbmV3IEFycmF5VHlwZSh0
aGlzKTsKLQkJcmVzdWx0LnNldENvbXBvbmVudFR5cGUoZWxlbWVudFR5cGUpOwotCQlmb3IgKGlu
dCBpID0gMjsgaSA8PSBkaW1lbnNpb25zOyBpKyspIHsKLQkJCXJlc3VsdCA9IG5ld0FycmF5VHlw
ZShyZXN1bHQpOworCQlBcnJheVR5cGUgcmVzdWx0OworCQlpZiAodGhpcy5hcGlMZXZlbCA8IEFT
VC5KTFM4KSB7CisJCQlyZXN1bHQgPSBuZXcgQXJyYXlUeXBlKHRoaXMpOworCQkJc2V0QXJyYXlD
b21wb25lbnRUeXBlKHJlc3VsdCwgZWxlbWVudFR5cGUpOworCQkJZm9yIChpbnQgaSA9IDI7IGkg
PD0gZGltZW5zaW9uczsgaSsrKSB7CisJCQkJcmVzdWx0ID0gbmV3QXJyYXlUeXBlKHJlc3VsdCk7
CisJCQl9CisJCQlyZXR1cm4gcmVzdWx0OworCQl9CisJCS8vbGV2ZWwgPj0gSkxTOAorCQlpZiAo
ZWxlbWVudFR5cGUuaXNBcnJheVR5cGUoKSkgeworCQkJdGhyb3cgbmV3IElsbGVnYWxBcmd1bWVu
dEV4Y2VwdGlvbigpOworCQl9CisJCXJlc3VsdCA9IG5ldyBBcnJheVR5cGUodGhpcyk7CisJCXJl
c3VsdC5zZXRFbGVtZW50VHlwZShlbGVtZW50VHlwZSk7CisJCS8vIGluZGV4IHN0YXJ0aW5nIGZy
b20gMSBzaW5jZSB0aGVyZSBpcyBhIGRpbWVuc2lvbiBhbHJlYWR5IGF2YWlsYWJsZSBieSBkZWZh
dWx0LgorCQlmb3IgKGludCBpID0gMTsgaSA8IGRpbWVuc2lvbnM7ICsraSkgeworCQkJcmVzdWx0
LmRpbWVuc2lvbnMoKS5hZGQobmV3IEV4dHJhRGltZW5zaW9uKHRoaXMpKTsKIAkJfQogCQlyZXR1
cm4gcmVzdWx0OwogCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2NvcmUvZG9tL0FTVENvbnZlcnRlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIuamF2YQppbmRleCA3
OWY5MzMxLi4zYTExMDJlIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3Jn
L2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVENvbnZlcnRlci5qYXZhCisrKyBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUQ29udmVydGVyLmphdmEK
QEAgLTQ2NSw2ICs0NjUsMTEgQEAKIAogCXByb3RlY3RlZCB2b2lkIGNvbXBsZXRlUmVjb3JkKEFy
cmF5VHlwZSBhcnJheVR5cGUsIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3Qu
QVNUTm9kZSBhc3ROb2RlKSB7CiAJCUFycmF5VHlwZSBhcnJheSA9IGFycmF5VHlwZTsKKwkJaWYg
KHRoaXMuYXN0LmFwaUxldmVsKCkgPj0gQVNULkpMUzgpIHsKKwkJCXRoaXMucmVjb3JkTm9kZXMo
YXJyYXlUeXBlLCBhc3ROb2RlKTsKKwkJCXRoaXMucmVjb3JkTm9kZXMoYXJyYXlUeXBlLmdldEVs
ZW1lbnRUeXBlKCksIGFzdE5vZGUpOworCQkJcmV0dXJuOworCQl9CiAJCWludCBkaW1lbnNpb25z
ID0gYXJyYXkuZ2V0RGltZW5zaW9ucygpOwogCQlmb3IgKGludCBpID0gMDsgaSA8IGRpbWVuc2lv
bnM7IGkrKykgewogCQkJVHlwZSBjb21wb25lbnRUeXBlID0gYXJyYXkuZ2V0Q29tcG9uZW50VHlw
ZSgpOwpAQCAtOTA5LDEyICs5MTQsMTggQEAKIAkJaWYgKGlzVmFyQXJncykgewogCQkJc2V0VHlw
ZUZvclNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24odmFyaWFibGVEZWNsLCB0eXBlLCBleHRyYURp
bWVuc2lvbnMgKyAxKTsKIAkJCS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3df
YnVnLmNnaT9pZD0zOTE4OTgKLQkJCWlmICh0eXBlLmlzQW5ub3RhdGFibGUoKSkgewotCQkJCUFu
bm90YXRhYmxlVHlwZSBhbm5vdGF0YWJsZVR5cGUgPSAoQW5ub3RhdGFibGVUeXBlKSB0eXBlOwot
CQkJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCgpID49IEFTVC5KTFM4ICYmICFhbm5vdGF0YWJsZVR5
cGUuYW5ub3RhdGlvbnMoKS5pc0VtcHR5KCkpIHsKLQkJCQkJSXRlcmF0b3IgYW5ub3RhdGlvbnMg
PSBhbm5vdGF0YWJsZVR5cGUuYW5ub3RhdGlvbnMoKS5pdGVyYXRvcigpOwotCQkJCQl3aGlsZSAo
YW5ub3RhdGlvbnMuaGFzTmV4dCgpKSB7Ci0JCQkJCQlBbm5vdGF0aW9uIGFubm90YXRpb24gPSAo
QW5ub3RhdGlvbikgYW5ub3RhdGlvbnMubmV4dCgpOworCQkJaWYgKHRoaXMuYXN0LmFwaUxldmVs
KCkgPj0gQVNULkpMUzgpIHsKKwkJCQlMaXN0IGFubm90YXRpb25zICA9IG51bGw7CisJCQkJaWYg
KHR5cGUuaXNBbm5vdGF0YWJsZSgpKSB7CisJCQkJCWFubm90YXRpb25zID0gKChBbm5vdGF0YWJs
ZVR5cGUpIHR5cGUpLmFubm90YXRpb25zKCk7CisJCQkJfSBlbHNlIGlmICh0eXBlLmlzQXJyYXlU
eXBlKCkpIHsKKwkJCQkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7CisJ
CQkJCWFubm90YXRpb25zID0gYXJyYXlUeXBlLmRpbWVuc2lvbnMoKS5pc0VtcHR5KCkgPyBudWxs
IDogKChhcnJheVR5cGUuZ2V0RGltZW5zaW9uTm8oMCkpLmFubm90YXRpb25zKCkpOworCQkJCX0K
KwkJCQlpZiAoYW5ub3RhdGlvbnMgIT0gbnVsbCkgeworCQkJCQlJdGVyYXRvciBpdGVyID0gYW5u
b3RhdGlvbnMuaXRlcmF0b3IoKTsKKwkJCQkJd2hpbGUgKGl0ZXIuaGFzTmV4dCgpKSB7CisJCQkJ
CQlBbm5vdGF0aW9uIGFubm90YXRpb24gPSAoQW5ub3RhdGlvbikgaXRlci5uZXh0KCk7CiAJCQkJ
CQlhbm5vdGF0aW9uLnNldFBhcmVudChudWxsLCBudWxsKTsKIAkJCQkJCXZhcmlhYmxlRGVjbC52
YXJhcmdzQW5ub3RhdGlvbnMoKS5hZGQoYW5ub3RhdGlvbik7CiAJCQkJCX0KQEAgLTk3OSw2ICs5
OTAsNyBAQAogCQkJcmVjb3JkTm9kZXModHlwZSwgZXhwcmVzc2lvbi50eXBlKTsKIAkJfQogCQlB
cnJheVR5cGUgYXJyYXlUeXBlID0gbnVsbDsKKwkJaW50IHNhdmVkU3RhcnQgPSAtMTsKIAkJaWYg
KHR5cGUuaXNBcnJheVR5cGUoKSkgewogCQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsK
IAkJfSBlbHNlIHsKQEAgLTk4OSwxNSArMTAwMSwzNCBAQAogCQkJaW50IHN0YXJ0ID0gdHlwZS5n
ZXRTdGFydFBvc2l0aW9uKCk7CiAJCQlpbnQgZW5kID0gdHlwZS5nZXRTdGFydFBvc2l0aW9uKCkg
KyB0eXBlLmdldExlbmd0aCgpOwogCQkJaW50IHByZXZpb3VzU2VhcmNoU3RhcnQgPSBlbmQgLSAx
OwotCQkJQXJyYXlUeXBlIGNvbXBvbmVudFR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlLmdldFBhcmVu
dCgpOwotCQkJZm9yIChpbnQgaSA9IDA7IGkgPCBkaW1lbnNpb25zTGVuZ3RoOyBpKyspIHsKLQkJ
CQlwcmV2aW91c1NlYXJjaFN0YXJ0ID0gcmV0cmlldmVSaWdodEJyYWNrZXRQb3NpdGlvbihwcmV2
aW91c1NlYXJjaFN0YXJ0ICsgMSwgdGhpcy5jb21waWxhdGlvblVuaXRTb3VyY2VMZW5ndGgpOwot
CQkJCWNvbXBvbmVudFR5cGUuc2V0U291cmNlUmFuZ2Uoc3RhcnQsIHByZXZpb3VzU2VhcmNoU3Rh
cnQgLSBzdGFydCArIDEpOwotCQkJCWNvbXBvbmVudFR5cGUgPSAoQXJyYXlUeXBlKSBjb21wb25l
bnRUeXBlLmdldFBhcmVudCgpOworCQkJaWYgKHRoaXMuYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxT
OCkgeworCQkJCUFycmF5VHlwZSBjb21wb25lbnRUeXBlID0gKEFycmF5VHlwZSkgdHlwZS5nZXRQ
YXJlbnQoKTsKKwkJCQlmb3IgKGludCBpID0gMDsgaSA8IGRpbWVuc2lvbnNMZW5ndGg7IGkrKykg
eworCQkJCQlwcmV2aW91c1NlYXJjaFN0YXJ0ID0gcmV0cmlldmVSaWdodEJyYWNrZXRQb3NpdGlv
bihwcmV2aW91c1NlYXJjaFN0YXJ0ICsgMSwgdGhpcy5jb21waWxhdGlvblVuaXRTb3VyY2VMZW5n
dGgpOworCQkJCQljb21wb25lbnRUeXBlLnNldFNvdXJjZVJhbmdlKHN0YXJ0LCBwcmV2aW91c1Nl
YXJjaFN0YXJ0IC0gc3RhcnQgKyAxKTsKKwkJCQkJY29tcG9uZW50VHlwZSA9IChBcnJheVR5cGUp
IGNvbXBvbmVudFR5cGUuZ2V0UGFyZW50KCk7CisJCQkJfQorCQkJfSBlbHNlIHsKKwkJCQlzYXZl
ZFN0YXJ0ID0gc3RhcnQ7CisJCQkJc3RhcnQgPSB0eXBlLmdldFN0YXJ0UG9zaXRpb24oKSArIHR5
cGUuZ2V0TGVuZ3RoKCk7CisJCQkJZW5kID0gc3RhcnQgLSAxOworCisJCQkJZm9yIChpbnQgaSA9
IDA7IGkgPD0gZGltZW5zaW9uc0xlbmd0aCAtIDE7IGkrKykgeworCQkJCQlFeHRyYURpbWVuc2lv
biBjdXJyZW50RGltZW5zaW9uID0gKEV4dHJhRGltZW5zaW9uKSBhcnJheVR5cGUuZGltZW5zaW9u
cygpLmdldChpKTsKKwkJCQkJZW5kID0gcmV0cmlldmVSaWdodEJyYWNrZXRQb3NpdGlvbihzdGFy
dCwgdGhpcy5jb21waWxhdGlvblVuaXRTb3VyY2VMZW5ndGgpOworCQkJCQljdXJyZW50RGltZW5z
aW9uLnNldFNvdXJjZVJhbmdlKHN0YXJ0LCBlbmQgLSBzdGFydCArIDEpOworCQkJCQlzdGFydCA9
IGVuZCArIDE7CisJCQkJfQorCisJCQkJYXJyYXlUeXBlLnNldFNvdXJjZVJhbmdlKHNhdmVkU3Rh
cnQsIGVuZCAtIHNhdmVkU3RhcnQgKyAxKTsKIAkJCX0KIAkJfQogCQlpZiAoZXhwcmVzc2lvbi5h
bm5vdGF0aW9uc09uRGltZW5zaW9ucyAhPSBudWxsKSB7Ci0JCQlhbm5vdGF0ZVR5cGUoYXJyYXlU
eXBlLCBleHByZXNzaW9uLmFubm90YXRpb25zT25EaW1lbnNpb25zKTsKKwkJCWlmICh0aGlzLmFz
dC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsKKwkJCQlhcnJheVR5cGUuc2V0RmxhZ3MoYXJyYXlU
eXBlLmdldEZsYWdzKCkgfCBBU1ROb2RlLk1BTEZPUk1FRCk7CisJCQl9IGVsc2UgeworCQkJCXNl
dEFycmF5VHlwZUFubm90YXRpb25zQW5kU291cmNlKGFycmF5VHlwZSwgZXhwcmVzc2lvbi5hbm5v
dGF0aW9uc09uRGltZW5zaW9ucyk7CisJCQl9CiAJCX0KIAkJYXJyYXlDcmVhdGlvbi5zZXRUeXBl
KGFycmF5VHlwZSk7CiAJCWlmICh0aGlzLnJlc29sdmVCaW5kaW5ncykgewpAQCAtMzEyMSw2ICsz
MTUyLDQzIEBACiAJCXJldHVybiBwYWNrYWdlRGVjbGFyYXRpb247CiAJfQogCisJcHJpdmF0ZSBB
cnJheVR5cGUgY29udmVydFRvQXJyYXkoVHlwZVJlZmVyZW5jZSB0eXBlLCBUeXBlIHN1YlR5cGUs
IGludCBzb3VyY2VTdGFydCwgaW50IGxlbmd0aCwgaW50IG5vRGltZW5zaW9ucykgeworCQlBcnJh
eVR5cGUgYXJyYXlUeXBlID0gdGhpcy5hc3QubmV3QXJyYXlUeXBlKHN1YlR5cGUsIG5vRGltZW5z
aW9ucyk7CisJCWludCBwb3NzaWJsZUVuZCA9IHJldHJpZXZlUHJvcGVyUmlnaHRCcmFja2V0UG9z
aXRpb24oMSwgc291cmNlU3RhcnQpOworCQlpbnQgcG9zc2libGVMZW5ndGggPSBwb3NzaWJsZUVu
ZCAtIHNvdXJjZVN0YXJ0ICsgMTsKKwkJYXJyYXlUeXBlLnNldFNvdXJjZVJhbmdlKHNvdXJjZVN0
YXJ0LCBsZW5ndGggPCBwb3NzaWJsZUxlbmd0aCA/IHBvc3NpYmxlTGVuZ3RoIDogbGVuZ3RoKTsK
KwkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uW11bXSBh
bm5vdGF0aW9uc09uRGltcyA9IHR5cGUuZ2V0QW5ub3RhdGlvbnNPbkRpbWVuc2lvbnMoKTsKKwkJ
aWYgKHRoaXMuYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgeworCQkJaWYgKGFubm90YXRpb25z
T25EaW1zICE9IG51bGwpIHsKKwkJCQlhcnJheVR5cGUuc2V0RmxhZ3MoYXJyYXlUeXBlLmdldEZs
YWdzKCkgfCBBU1ROb2RlLk1BTEZPUk1FRCk7CisJCQl9CisJCQlBcnJheVR5cGUgc3ViYXJyYXlU
eXBlID0gYXJyYXlUeXBlOworCQkJaW50IGluZGV4ID0gbm9EaW1lbnNpb25zIC0gMTsKKwkJCXdo
aWxlIChpbmRleCA+IDApIHsKKwkJCQlzdWJhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBzdWJhcnJh
eVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQkJCWludCBlbmQgPSByZXRyaWV2ZVByb3BlclJp
Z2h0QnJhY2tldFBvc2l0aW9uKGluZGV4LCBzb3VyY2VTdGFydCk7CisJCQkJc3ViYXJyYXlUeXBl
LnNldFNvdXJjZVJhbmdlKHNvdXJjZVN0YXJ0LCBlbmQgLSBzb3VyY2VTdGFydCArIDEpOworCQkJ
CWluZGV4LS07CisJCQl9CisJCQlyZXR1cm4gYXJyYXlUeXBlOworCQl9CisKKwkJaWYgKGFubm90
YXRpb25zT25EaW1zICE9IG51bGwpIHsKKwkJCXNldEFycmF5VHlwZUFubm90YXRpb25zQW5kU291
cmNlKGFycmF5VHlwZSwgYW5ub3RhdGlvbnNPbkRpbXMpOworCQl9IGVsc2UgeworCQkJaW50IHN0
YXJ0ID0gc3ViVHlwZS5nZXRTdGFydFBvc2l0aW9uKCkgKyBzdWJUeXBlLmdldExlbmd0aCgpOwor
CQkJaW50IGVuZCA9IGFycmF5VHlwZS5nZXRTdGFydFBvc2l0aW9uKCkgKyBhcnJheVR5cGUuZ2V0
TGVuZ3RoKCk7CisJCQlpbnQgbGFzdEluZGV4ID0gbm9EaW1lbnNpb25zIC0gMTsKKworCQkJZm9y
IChpbnQgaSA9IDA7IGkgPD0gbGFzdEluZGV4OyBpKyspIHsKKwkJCQlFeHRyYURpbWVuc2lvbiBj
dXJyZW50RGltZW5zaW9uID0gKEV4dHJhRGltZW5zaW9uKSBhcnJheVR5cGUuZGltZW5zaW9ucygp
LmdldChpKTsKKwkJCQlyZXRyaWV2ZURpbWVuc2lvbkFuZFNldFBvc2l0aW9ucyhzdGFydCwgZW5k
LCBjdXJyZW50RGltZW5zaW9uKTsKKwkJCQlzdGFydCA9IGN1cnJlbnREaW1lbnNpb24uZ2V0U3Rh
cnRQb3NpdGlvbigpICsgY3VycmVudERpbWVuc2lvbi5nZXRMZW5ndGgoKTsKKwkJCX0KKwkJfQor
CQlyZXR1cm4gYXJyYXlUeXBlOworCX0KKwogCXByaXZhdGUgRW51bURlY2xhcmF0aW9uIGNvbnZl
cnRUb0VudW1EZWNsYXJhdGlvbihvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0
LlR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24pIHsKIAkJY2hlY2tDYW5jZWxlZCgpOwog
CQkvLyBlbnVtIGRlY2xhcmF0aW9uIGNhbm5vdCBiZSBidWlsdCBpZiB0aGUgc291cmNlIGlzIG5v
dCA+PSAxLjUsIHNpbmNlIGVudW0gaXMgdGhlbiBzZWVuIGFzIGFuIGlkZW50aWZpZXIKQEAgLTMz
NTEsNiArMzQxOSwyOCBAQAogCQl9CiAJfQogCisJcHJpdmF0ZSB2b2lkIHNldEFycmF5VHlwZUFu
bm90YXRpb25zQW5kU291cmNlKEFycmF5VHlwZSBhcnJheVR5cGUsCisJCQlvcmcuZWNsaXBzZS5q
ZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFubm90YXRpb25bXVtdIGFubm90YXRpb25zT25EaW1z
KSB7CisJCUxpc3QgZGltZW5zaW9ucyA9IGFycmF5VHlwZS5kaW1lbnNpb25zKCk7CisJCVR5cGUg
ZWxlbVR5cGUgPSBhcnJheVR5cGUuZ2V0RWxlbWVudFR5cGUoKTsKKwkJaW50IHN0YXJ0ID0gZWxl
bVR5cGUuZ2V0U3RhcnRQb3NpdGlvbigpICsgZWxlbVR5cGUuZ2V0TGVuZ3RoKCk7CisJCWludCBl
bmQgPSBhcnJheVR5cGUuZ2V0U3RhcnRQb3NpdGlvbigpICsgYXJyYXlUeXBlLmdldExlbmd0aCgp
OworCQlpbnQgbGFzdEluZGV4ID0gZGltZW5zaW9ucy5zaXplKCkgLSAxOworCisJCWZvciAoaW50
IGkgPSAwOyBpIDw9IGxhc3RJbmRleDsgaSsrKSB7CisJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIuYXN0LkFubm90YXRpb25bXSBhbm5vdGF0aW9uID0gYW5ub3RhdGlvbnNPbkRp
bXNbaV07CisJCQlFeHRyYURpbWVuc2lvbiBjdXJyZW50RGltZW5zaW9uID0gKEV4dHJhRGltZW5z
aW9uKSBkaW1lbnNpb25zLmdldChpKTsKKwkJCWlmIChhbm5vdGF0aW9uICE9IG51bGwpIHsKKwkJ
CQlmb3IgKGludCBqID0gMDsgaiA8IGFubm90YXRpb24ubGVuZ3RoOyBqKyspIHsKKwkJCQkJQW5u
b3RhdGlvbiBhbm5vdCA9IGNvbnZlcnQoYW5ub3RhdGlvbltqXSk7CisJCQkJCWN1cnJlbnREaW1l
bnNpb24uYW5ub3RhdGlvbnMoKS5hZGQoYW5ub3QpOworCQkJCX0KKwkJCX0KKwkJCXJldHJpZXZl
RGltZW5zaW9uQW5kU2V0UG9zaXRpb25zKHN0YXJ0LCBlbmQsIGN1cnJlbnREaW1lbnNpb24pOwor
CQkJc3RhcnQgPSBjdXJyZW50RGltZW5zaW9uLmdldFN0YXJ0UG9zaXRpb24oKSArIGN1cnJlbnRE
aW1lbnNpb24uZ2V0TGVuZ3RoKCk7CisJCX0KKwl9CisKIAlwcm90ZWN0ZWQgVmFyaWFibGVEZWNs
YXJhdGlvblN0YXRlbWVudCBjb252ZXJ0VG9WYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuTG9jYWxEZWNsYXJhdGlvbiBsb2Nh
bERlY2xhcmF0aW9uKSB7CiAJCWZpbmFsIFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCB2YXJp
YWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgPSBjb252ZXJ0VG9WYXJpYWJsZURlY2xhcmF0aW9uRnJh
Z21lbnQobG9jYWxEZWNsYXJhdGlvbik7CiAJCWZpbmFsIFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0
ZW1lbnQgdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCA9IG5ldyBWYXJpYWJsZURlY2xhcmF0
aW9uU3RhdGVtZW50KHRoaXMuYXN0KTsKQEAgLTMzNzUsNiArMzQ2NSwxMCBAQAogCQkJCXR5cGUu
c2V0RmxhZ3ModHlwZS5nZXRGbGFncygpIHwgQVNUTm9kZS5NQUxGT1JNRUQpOwogCQkJCWJyZWFr
OwogCQkJZGVmYXVsdDoKKwkJCQlpZiAoYW5ub3RhdGlvbnMgPT0gbnVsbCkgYnJlYWs7CisJCQkJ
aW50IHN0YXJ0ID0gdHlwZS5nZXRTdGFydFBvc2l0aW9uKCk7CisJCQkJaW50IGFubm90YXRpb25z
U3RhcnQgPSBzdGFydDsKKwkJCQlpbnQgbGVuZ3RoID0gdHlwZS5nZXRMZW5ndGgoKTsKIAkJCQlp
bnQgYW5ub3RhdGlvbnNMZW5ndGggPSBhbm5vdGF0aW9ucy5sZW5ndGg7CiAJCQkJZm9yIChpbnQg
aSA9IDA7IGkgPCBhbm5vdGF0aW9uc0xlbmd0aDsgaSsrKSB7CiAJCQkJCW9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5hc3QuQW5ub3RhdGlvbiB0eXBlQW5ub3RhdGlvbiA9IGFubm90
YXRpb25zW2ldOwpAQCAtMzM4MywyMCArMzQ3NywxMyBAQAogCQkJCQkJdHlwZS5hbm5vdGF0aW9u
cygpLmFkZChhbm5vdGF0aW9uKTsKIAkJCQkJfQogCQkJCX0KKwkJCQlpZiAoYW5ub3RhdGlvbnNb
MF0gIT0gbnVsbCAmJiAoYW5ub3RhdGlvbnNTdGFydCA9IGFubm90YXRpb25zWzBdLnNvdXJjZVN0
YXJ0KSA8IHN0YXJ0KSB7CisJCQkJCWxlbmd0aCArPSBhbm5vdGF0aW9uc1N0YXJ0ID4gMCA/IHN0
YXJ0IC0gYW5ub3RhdGlvbnNTdGFydCA6IDA7CisJCQkJCXN0YXJ0ID0gYW5ub3RhdGlvbnNTdGFy
dDsKKwkJCQl9CisJCQkJdHlwZS5zZXRTb3VyY2VSYW5nZShzdGFydCwgbGVuZ3RoKTsKIAkJfQog
CX0KLQlwcml2YXRlIHZvaWQgYW5ub3RhdGVUeXBlKFR5cGUgdHlwZSwgb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uW11bXSBhbm5vdGF0aW9ucykgewotCQlp
bnQgbGV2ZWwgPSBhbm5vdGF0aW9ucy5sZW5ndGggLSAxOwotCQl3aGlsZSh0eXBlLmlzQXJyYXlU
eXBlKCkpIHsKLQkJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQkJ
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uW10gdHlwZUFu
bm90YXRpb25zID0gYW5ub3RhdGlvbnNbbGV2ZWwtLV07Ci0JCQlpZiAodHlwZUFubm90YXRpb25z
ICE9IG51bGwpIHsKLQkJCQlhbm5vdGF0ZVR5cGUoYXJyYXlUeXBlLCB0eXBlQW5ub3RhdGlvbnMp
OwotCQkJfQotCQkJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCX0KLQl9
Ci0KIAlwcml2YXRlIHZvaWQgYW5ub3RhdGVUeXBlUGFyYW1ldGVyKFR5cGVQYXJhbWV0ZXIgdHlw
ZVBhcmFtZXRlciwgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0
aW9uW10gYW5ub3RhdGlvbnMpIHsKIAkJc3dpdGNoKHRoaXMuYXN0LmFwaUxldmVsKSB7CiAJCQlj
YXNlIEFTVC5KTFMyX0lOVEVSTkFMIDoKQEAgLTM1NDQsMjMgKzM2MzEsNyBAQAogCQkJCX0KIAkJ
CX0KIAkJCWlmIChkaW1lbnNpb25zICE9IDApIHsKLQkJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIuYXN0LkFubm90YXRpb25bXVtdIGFubm90YXRpb25zT25EaW1lbnNpb25zID0g
dHlwZVJlZmVyZW5jZS5nZXRBbm5vdGF0aW9uc09uRGltZW5zaW9ucygpOwotCQkJCXR5cGUgPSB0
aGlzLmFzdC5uZXdBcnJheVR5cGUodHlwZSwgZGltZW5zaW9ucyk7Ci0JCQkJdHlwZS5zZXRTb3Vy
Y2VSYW5nZShzb3VyY2VTdGFydCwgbGVuZ3RoKTsKLQkJCQlBcnJheVR5cGUgc3ViYXJyYXlUeXBl
ID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJCQlpbnQgaW5kZXggPSBkaW1lbnNpb25zIC0gMTsKLQkJ
CQl3aGlsZSAoaW5kZXggPiAwKSB7Ci0JCQkJCWlmIChhbm5vdGF0aW9uc09uRGltZW5zaW9ucyAh
PSBudWxsICYmIChhbm5vdGF0aW9ucyA9IGFubm90YXRpb25zT25EaW1lbnNpb25zW2luZGV4XSkg
IT0gbnVsbCkgewotCQkJCQkJYW5ub3RhdGVUeXBlKHN1YmFycmF5VHlwZSwgYW5ub3RhdGlvbnMp
OwotCQkJCQl9Ci0JCQkJCXN1YmFycmF5VHlwZSA9IChBcnJheVR5cGUpIHN1YmFycmF5VHlwZS5n
ZXRDb21wb25lbnRUeXBlKCk7Ci0JCQkJCWludCBlbmQgPSByZXRyaWV2ZVByb3BlclJpZ2h0QnJh
Y2tldFBvc2l0aW9uKGluZGV4LCBzb3VyY2VTdGFydCk7Ci0JCQkJCXN1YmFycmF5VHlwZS5zZXRT
b3VyY2VSYW5nZShzb3VyY2VTdGFydCwgZW5kIC0gc291cmNlU3RhcnQgKyAxKTsKLQkJCQkJaW5k
ZXgtLTsKLQkJCQl9Ci0JCQkJaWYgKGFubm90YXRpb25zT25EaW1lbnNpb25zICE9IG51bGwgJiYg
KGFubm90YXRpb25zID0gYW5ub3RhdGlvbnNPbkRpbWVuc2lvbnNbMF0pICE9IG51bGwpIHsKLQkJ
CQkJYW5ub3RhdGVUeXBlKHN1YmFycmF5VHlwZSwgYW5ub3RhdGlvbnMpOwotCQkJCX0KKwkJCQl0
eXBlID0gY29udmVydFRvQXJyYXkodHlwZVJlZmVyZW5jZSwgdHlwZSwgc291cmNlU3RhcnQsIGxl
bmd0aCwgZGltZW5zaW9ucyk7CiAJCQkJaWYgKHRoaXMucmVzb2x2ZUJpbmRpbmdzKSB7CiAJCQkJ
CS8vIHN0b3JlIGtleXMgZm9yIGlubmVyIHR5cGVzCiAJCQkJCWNvbXBsZXRlUmVjb3JkKChBcnJh
eVR5cGUpIHR5cGUsIHR5cGVSZWZlcmVuY2UpOwpAQCAtMzgxMiwzMCArMzg4MywxMCBAQAogCiAJ
CQlsZW5ndGggPSB0eXBlUmVmZXJlbmNlLnNvdXJjZUVuZCAtIHNvdXJjZVN0YXJ0ICsgMTsKIAkJ
CWlmIChkaW1lbnNpb25zICE9IDApIHsKLQkJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIuYXN0LkFubm90YXRpb25bXVtdIGFubm90YXRpb25zT25EaW1lbnNpb25zID0gdHlwZVJl
ZmVyZW5jZS5nZXRBbm5vdGF0aW9uc09uRGltZW5zaW9ucygpOwotCQkJCXR5cGUgPSB0aGlzLmFz
dC5uZXdBcnJheVR5cGUodHlwZSwgZGltZW5zaW9ucyk7CisJCQkJaW50IGVuZCA9IHJldHJpZXZl
RW5kT2ZEaW1lbnNpb25zUG9zaXRpb24oc291cmNlU3RhcnQrbGVuZ3RoLCB0aGlzLmNvbXBpbGF0
aW9uVW5pdFNvdXJjZUxlbmd0aCk7CisJCQkJdHlwZSA9IGNvbnZlcnRUb0FycmF5KHR5cGVSZWZl
cmVuY2UsIHR5cGUsIHNvdXJjZVN0YXJ0LCBlbmQgIT0gLTEgPyBlbmQgLSBzb3VyY2VTdGFydCAr
IDEgOiBsZW5ndGgsIGRpbWVuc2lvbnMpOwogCQkJCWlmICh0aGlzLnJlc29sdmVCaW5kaW5ncykg
ewogCQkJCQljb21wbGV0ZVJlY29yZCgoQXJyYXlUeXBlKSB0eXBlLCB0eXBlUmVmZXJlbmNlKTsK
LQkJCQl9Ci0JCQkJaW50IGVuZCA9IHJldHJpZXZlRW5kT2ZEaW1lbnNpb25zUG9zaXRpb24oc291
cmNlU3RhcnQrbGVuZ3RoLCB0aGlzLmNvbXBpbGF0aW9uVW5pdFNvdXJjZUxlbmd0aCk7Ci0JCQkJ
aWYgKGVuZCAhPSAtMSkgewotCQkJCQl0eXBlLnNldFNvdXJjZVJhbmdlKHNvdXJjZVN0YXJ0LCBl
bmQgLSBzb3VyY2VTdGFydCArIDEpOwotCQkJCX0gZWxzZSB7Ci0JCQkJCXR5cGUuc2V0U291cmNl
UmFuZ2Uoc291cmNlU3RhcnQsIGxlbmd0aCk7Ci0JCQkJfQotCQkJCUFycmF5VHlwZSBzdWJhcnJh
eVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQkJCWludCBpbmRleCA9IGRpbWVuc2lvbnMgLSAx
OwotCQkJCXdoaWxlIChpbmRleCA+IDApIHsKLQkJCQkJaWYgKGFubm90YXRpb25zT25EaW1lbnNp
b25zICE9IG51bGwgICYmIChhbm5vdGF0aW9ucyA9IGFubm90YXRpb25zT25EaW1lbnNpb25zW2lu
ZGV4XSkgIT0gbnVsbCkgewotCQkJCQkJYW5ub3RhdGVUeXBlKHN1YmFycmF5VHlwZSwgYW5ub3Rh
dGlvbnMpOwotCQkJCQl9Ci0JCQkJCXN1YmFycmF5VHlwZSA9IChBcnJheVR5cGUpIHN1YmFycmF5
VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCQkJCWVuZCA9IHJldHJpZXZlUHJvcGVyUmlnaHRC
cmFja2V0UG9zaXRpb24oaW5kZXgsIHNvdXJjZVN0YXJ0KTsKLQkJCQkJc3ViYXJyYXlUeXBlLnNl
dFNvdXJjZVJhbmdlKHNvdXJjZVN0YXJ0LCBlbmQgLSBzb3VyY2VTdGFydCArIDEpOwotCQkJCQlp
bmRleC0tOwotCQkJCX0KLQkJCQlpZiAoYW5ub3RhdGlvbnNPbkRpbWVuc2lvbnMgIT0gbnVsbCAg
JiYgKGFubm90YXRpb25zID0gYW5ub3RhdGlvbnNPbkRpbWVuc2lvbnNbMF0pICE9IG51bGwpIHsK
LQkJCQkJYW5ub3RhdGVUeXBlKHN1YmFycmF5VHlwZSwgYW5ub3RhdGlvbnMpOwogCQkJCX0KIAkJ
CX0KIAkJfQpAQCAtMzg5OCwxNCArMzk0OSwxMCBAQAogCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIuYXN0LkFubm90YXRpb25bXSBhbm5vdGF0aW9uczsKIAkJaW50IGFubm90YXRp
b25zU3RhcnQgPSBzdGFydDsKIAkJaW50IGxlbmd0aCA9IGVuZCAtIHN0YXJ0ICsgMTsKKwkJYW5u
b3RhdGFibGVUeXBlLnNldFNvdXJjZVJhbmdlKHN0YXJ0LCBsZW5ndGgpOwogCQlpZiAodHlwZUFu
bm90YXRpb25zICE9IG51bGwgJiYgKGFubm90YXRpb25zID0gdHlwZUFubm90YXRpb25zW2luZGV4
XSkgIT0gbnVsbCkgewogCQkJYW5ub3RhdGVUeXBlKGFubm90YXRhYmxlVHlwZSwgYW5ub3RhdGlv
bnMpOwotCQkJaWYgKGFubm90YXRpb25zWzBdICE9IG51bGwgJiYgKGFubm90YXRpb25zU3RhcnQg
PSBhbm5vdGF0aW9uc1swXS5zb3VyY2VTdGFydCkgPCBzdGFydCkgewotCQkJCWxlbmd0aCArPSBh
bm5vdGF0aW9uc1N0YXJ0ID4gMCA/IHN0YXJ0IC0gYW5ub3RhdGlvbnNTdGFydCA6IDA7Ci0JCQkJ
c3RhcnQgPSBhbm5vdGF0aW9uc1N0YXJ0OwotCQkJfQogCQl9Ci0JCWFubm90YXRhYmxlVHlwZS5z
ZXRTb3VyY2VSYW5nZShzdGFydCwgbGVuZ3RoKTsKIAkJaWYgKHRoaXMucmVzb2x2ZUJpbmRpbmdz
KSB7CiAJCQlyZWNvcmROb2Rlcyhhbm5vdGF0YWJsZVR5cGUsIHR5cGVSZWZlcmVuY2UpOwogCQl9
CkBAIC00NjQ0LDggKzQ2OTEsMTUgQEAKIAkJYm9vbGVhbiBpc0Fubm90YXRpb24gPSBmYWxzZTsK
IAkJdHJ5IHsKIAkJCWludCB0b2tlbjsKKwkJCWludCBjb3VudCA9IDA7CiAJCQl3aGlsZSAoKHRv
a2VuID0gdGhpcy5zY2FubmVyLmdldE5leHRUb2tlbigpKSAhPSBUZXJtaW5hbFRva2Vucy5Ub2tl
bk5hbWVFT0YpIHsKIAkJCQlzd2l0Y2godG9rZW4pIHsKKwkJCQkJY2FzZSBUZXJtaW5hbFRva2Vu
cy5Ub2tlbk5hbWVMUEFSRU46CisJCQkJCQkrK2NvdW50OworCQkJCQkJYnJlYWs7CisJCQkJCWNh
c2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lUlBBUkVOOgorCQkJCQkJLS1jb3VudDsKKwkJCQkJ
CWJyZWFrOwogCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUFUOgogCQkJCQkJaXNB
bm5vdGF0aW9uID0gdHJ1ZTsKIAkJCQkJCWJyZWFrOwpAQCAtNDY2Myw2ICs0NzE3LDcgQEAKIAkJ
CQkJY2FzZSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVsb25nOgogCQkJCQljYXNlIFRlcm1pbmFs
VG9rZW5zLlRva2VuTmFtZXNob3J0OgogCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFt
ZWJvb2xlYW46CisJCQkJCQlpZiAoY291bnQgPiAwKSBicmVhazsKIAkJCQkJCXJldHVybiBuZXcg
aW50W117dGhpcy5zY2FubmVyLnN0YXJ0UG9zaXRpb24sIHRoaXMuc2Nhbm5lci5jdXJyZW50UG9z
aXRpb24gLSAxfTsKIAkJCQl9CiAJCQl9CkBAIC00NzEyLDkgKzQ3NjcsMTcgQEAKIAkJdGhpcy5z
Y2FubmVyLnJlc2V0VG8oc3RhcnQsIGVuZCk7CiAJCWludCBkaW1lbnNpb25zID0gMDsKIAkJdHJ5
IHsKLQkJCWludCB0b2tlbjsKLQkJCWJvb2xlYW4gaXNBbm5vdGF0aW9uID0gZmFsc2U7CisJCQlp
bnQgdG9rZW4sIGxQYXJlbkNvdW50ID0gMDsKKwkJCWJvb2xlYW4gaXNBbm5vdGF0aW9uID0gZmFs
c2UsIGZvdW5kQW5ub3RhdGlvbiA9IGZhbHNlOwogCQkJd2hpbGUgKCh0b2tlbiA9IHRoaXMuc2Nh
bm5lci5nZXROZXh0VG9rZW4oKSkgIT0gVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lRU9GKSB7CisJ
CQkJaWYgKGZvdW5kQW5ub3RhdGlvbikgeworCQkJCQlpZiAodG9rZW4gPT0gVGVybWluYWxUb2tl
bnMuVG9rZW5OYW1lTFBBUkVOKSArK2xQYXJlbkNvdW50OworCQkJCQllbHNlIGlmICh0b2tlbiA9
PSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVSUEFSRU4pIHsKKwkJCQkJCS0tbFBhcmVuQ291bnQ7
CisJCQkJCQljb250aW51ZTsKKwkJCQkJfQorCQkJCQlpZiAobFBhcmVuQ291bnQgPiAwKSBjb250
aW51ZTsKKwkJCQl9CiAJCQkJc3dpdGNoKHRva2VuKSB7CiAJCQkJCWNhc2UgVGVybWluYWxUb2tl
bnMuVG9rZW5OYW1lTEJSQUNLRVQ6CiAJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1l
Q09NTUVOVF9CTE9DSzoKQEAgLTQ3MjQsNiArNDc4Nyw3IEBACiAJCQkJCQlicmVhazsKIAkJCQkJ
Y2FzZSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVBVDoKIAkJCQkJCWlzQW5ub3RhdGlvbiA9IHRy
dWU7CisJCQkJCQlmb3VuZEFubm90YXRpb24gPSB0cnVlOyAvKiBjaGVjayBmb3IgcGFyYW1zICov
CiAJCQkJCQlicmVhazsKIAkJCQkJY2FzZSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVJZGVudGlm
aWVyOgogCQkJCQkJaWYgKCFpc0Fubm90YXRpb24pIHsKQEAgLTQ3NDgsMjIgKzQ4MTIsMzYgQEAK
IAlwcm90ZWN0ZWQgdm9pZCByZXRyaWV2ZURpbWVuc2lvbkFuZFNldFBvc2l0aW9ucyhpbnQgc3Rh
cnQsIGludCBlbmQsIEV4dHJhRGltZW5zaW9uIGRpbSkgewogCQl0aGlzLnNjYW5uZXIucmVzZXRU
byhzdGFydCwgZW5kKTsKIAkJaW50IHRva2VuOworCQlpbnQgY291bnQgPSAwLCBsUGFyZW5Db3Vu
dCA9IDA7CiAJCWJvb2xlYW4gc3RhcnRTZXQgPSBmYWxzZTsKIAkJdHJ5IHsKIAkJCXdoaWxlKCh0
b2tlbiA9IHRoaXMuc2Nhbm5lci5nZXROZXh0VG9rZW4oKSkgIT0gVGVybWluYWxUb2tlbnMuVG9r
ZW5OYW1lRU9GKSAgewotCQkJCXN3aXRjaCh0b2tlbikgewotCQkJCQljYXNlIFRlcm1pbmFsVG9r
ZW5zLlRva2VuTmFtZVdISVRFU1BBQ0U6Ci0JCQkJCQlicmVhazsKLQkJCQkJY2FzZSBUZXJtaW5h
bFRva2Vucy5Ub2tlbk5hbWVSQlJBQ0tFVDoKLQkJCQkJCWludCBlbmREaW0gPSB0aGlzLnNjYW5u
ZXIuY3VycmVudFBvc2l0aW9uIC0gMTsKLQkJCQkJCWRpbS5zZXRTb3VyY2VSYW5nZShzdGFydCwg
ZW5kRGltIC0gc3RhcnQgKyAxKTsKLQkJCQkJCXJldHVybjsKLQkJCQkJZGVmYXVsdDoKLQkJCQkJ
CWlmICghc3RhcnRTZXQpIHsKLQkJCQkJCQlzdGFydCA9IHRoaXMuc2Nhbm5lci5zdGFydFBvc2l0
aW9uOwotCQkJCQkJCXN0YXJ0U2V0ID0gdHJ1ZTsKLQkJCQkJCX0KLQkJCQkJCWJyZWFrOworCQkJ
CWlmICh0b2tlbiAhPSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVXSElURVNQQUNFKSB7CisJCQkJ
CWlmICghc3RhcnRTZXQpIHsKKwkJCQkJCXN0YXJ0ID0gdGhpcy5zY2FubmVyLnN0YXJ0UG9zaXRp
b247CisJCQkJCQlzdGFydFNldCA9IHRydWU7CisJCQkJCX0KKwkJCQkJc3dpdGNoKHRva2VuKSB7
CisJCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZVJCUkFDS0VUOgorCQkJCQkJCWlm
IChsUGFyZW5Db3VudCA+IDApIGJyZWFrOworCQkJCQkJCS0tY291bnQ7CisJCQkJCQkJaWYgKGNv
dW50ID4gMCkgYnJlYWs7CisJCQkJCQkJaW50IGVuZERpbSA9IHRoaXMuc2Nhbm5lci5jdXJyZW50
UG9zaXRpb24gLSAxOworCQkJCQkJCWRpbS5zZXRTb3VyY2VSYW5nZShzdGFydCwgZW5kRGltIC0g
c3RhcnQgKyAxKTsKKwkJCQkJCQlyZXR1cm47CisJCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRv
a2VuTmFtZUxCUkFDS0VUOgorCQkJCQkJCWlmIChsUGFyZW5Db3VudCA+IDApIGJyZWFrOworCQkJ
CQkJCWNvdW50Kys7CisJCQkJCQkJYnJlYWs7CisJCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRv
a2VuTmFtZUxQQVJFTjoKKwkJCQkJCQlsUGFyZW5Db3VudCsrOworCQkJCQkJCWJyZWFrOworCQkJ
CQkJY2FzZSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVSUEFSRU46CisJCQkJCQkJLS1sUGFyZW5D
b3VudDsKKwkJCQkJCQlicmVhazsKKwkJCQkJCWRlZmF1bHQ6CisJCQkJCQkJYnJlYWs7CisJCQkJ
CX0KIAkJCQl9CiAJCQl9CiAJCX0gY2F0Y2goSW52YWxpZElucHV0RXhjZXB0aW9uIGUpIHsKQEAg
LTQ4NzQsMTAgKzQ5NTIsMTcgQEAKIAlwcm90ZWN0ZWQgaW50IHJldHJpZXZlUHJvcGVyUmlnaHRC
cmFja2V0UG9zaXRpb24oaW50IGJyYWNrZXROdW1iZXIsIGludCBzdGFydCkgewogCQl0aGlzLnNj
YW5uZXIucmVzZXRUbyhzdGFydCwgdGhpcy5jb21waWxhdGlvblVuaXRTb3VyY2VMZW5ndGgpOwog
CQl0cnkgewotCQkJaW50IHRva2VuLCBjb3VudCA9IDA7CisJCQlpbnQgdG9rZW4sIGNvdW50ID0g
MCwgbFBhcmVudENvdW50ID0gMDsKIAkJCXdoaWxlICgodG9rZW4gPSB0aGlzLnNjYW5uZXIuZ2V0
TmV4dFRva2VuKCkpICE9IFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUVPRikgewogCQkJCXN3aXRj
aCh0b2tlbikgeworCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUxQQVJFTjoKKwkJ
CQkJCSsrbFBhcmVudENvdW50OworCQkJCQkJYnJlYWs7CisJCQkJCWNhc2UgVGVybWluYWxUb2tl
bnMuVG9rZW5OYW1lUlBBUkVOOgorCQkJCQkJLS1sUGFyZW50Q291bnQ7CisJCQkJCQlicmVhazsK
IAkJCQkJY2FzZSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVSQlJBQ0tFVDoKKwkJCQkJCWlmIChs
UGFyZW50Q291bnQgPiAwKSBicmVhazsKIAkJCQkJCWNvdW50Kys7CiAJCQkJCQlpZiAoY291bnQg
PT0gYnJhY2tldE51bWJlcikgewogCQkJCQkJCXJldHVybiB0aGlzLnNjYW5uZXIuY3VycmVudFBv
c2l0aW9uIC0gMTsKQEAgLTU2NDMsMzIgKzU3MjgsNTAgQEAKIAkJCQkJdGhpcy5hc3QuZ2V0Qmlu
ZGluZ1Jlc29sdmVyKCkudXBkYXRlS2V5KHR5cGUsIGVsZW1lbnRUeXBlKTsKIAkJCQkJZmllbGRE
ZWNsYXJhdGlvbi5zZXRUeXBlKGVsZW1lbnRUeXBlKTsKIAkJCQl9IGVsc2UgewotCQkJCQlpbnQg
c3RhcnQgPSB0eXBlLmdldFN0YXJ0UG9zaXRpb24oKTsKLQkJCQkJQXJyYXlUeXBlIHN1YmFycmF5
VHlwZSA9IGFycmF5VHlwZTsKLQkJCQkJaW50IGluZGV4ID0gZXh0cmFEaW1lbnNpb247Ci0JCQkJ
CXdoaWxlIChpbmRleCA+IDApIHsKLQkJCQkJCXN1YmFycmF5VHlwZSA9IChBcnJheVR5cGUpIHN1
YmFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCQkJCQlpbmRleC0tOwotCQkJCQl9Ci0J
CQkJCWludCBlbmQgPSByZXRyaWV2ZVByb3BlclJpZ2h0QnJhY2tldFBvc2l0aW9uKHJlbWFpbmlu
Z0RpbWVuc2lvbnMsIHN0YXJ0KTsKLQkJCQkJc3ViYXJyYXlUeXBlLnNldFNvdXJjZVJhbmdlKHN0
YXJ0LCBlbmQgLSBzdGFydCArIDEpOwotCQkJCQkvLyBjdXQgdGhlIGNoaWxkIGxvb3NlIGZyb20g
aXRzIHBhcmVudCAod2l0aG91dCBjcmVhdGluZyBnYXJiYWdlKQotCQkJCQlzdWJhcnJheVR5cGUu
c2V0UGFyZW50KG51bGwsIG51bGwpOworCQkJCQlBcnJheVR5cGUgc3ViYXJyYXlUeXBlID0gZXh0
cmFjdFN1YkFycmF5VHlwZShhcnJheVR5cGUsIHJlbWFpbmluZ0RpbWVuc2lvbnMsIGV4dHJhRGlt
ZW5zaW9uKTsKIAkJCQkJZmllbGREZWNsYXJhdGlvbi5zZXRUeXBlKHN1YmFycmF5VHlwZSk7Ci0J
CQkJCXVwZGF0ZUlubmVyUG9zaXRpb25zKHN1YmFycmF5VHlwZSwgcmVtYWluaW5nRGltZW5zaW9u
cyk7CiAJCQkJCXRoaXMuYXN0LmdldEJpbmRpbmdSZXNvbHZlcigpLnVwZGF0ZUtleSh0eXBlLCBz
dWJhcnJheVR5cGUpOwogCQkJCX0KIAkJCX0gZWxzZSB7CiAJCQkJZmllbGREZWNsYXJhdGlvbi5z
ZXRUeXBlKHR5cGUpOwogCQkJfQogCQl9IGVsc2UgewotCQkJaWYgKHR5cGUuaXNBcnJheVR5cGUo
KSkgeworCQkJaWYgKHR5cGUuaXNBcnJheVR5cGUoKSAmJiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA8
IEFTVC5KTFM4KSkgewogCQkJCS8vIHVwZGF0ZSBwb3NpdGlvbnMgb2YgdGhlIGNvbXBvbmVudCB0
eXBlcyBvZiB0aGUgYXJyYXkgdHlwZQogCQkJCWludCBkaW1lbnNpb25zID0gKChBcnJheVR5cGUp
IHR5cGUpLmdldERpbWVuc2lvbnMoKTsKIAkJCQl1cGRhdGVJbm5lclBvc2l0aW9ucyh0eXBlLCBk
aW1lbnNpb25zKTsKIAkJCX0KIAkJCWZpZWxkRGVjbGFyYXRpb24uc2V0VHlwZSh0eXBlKTsKIAkJ
fQorCX0KKworCS8qKiBleHRyYWN0cyB0aGUgc3ViQXJyYXlUeXBlIGZvciBhIGdpdmVuIGRlY2xh
cmF0aW9uIGZvciBBU1QgbGV2ZWxzIGxlc3MKKwkgKiBAcGFyYW0gYXJyYXlUeXBlIHBhcmVudCB0
eXBlCisJICogQHBhcmFtIHJlbWFpbmluZ0RpbWVuc2lvbnMgCisJICogQHBhcmFtIGV4dHJhRGlt
ZW5zaW9ucworCSAqIEByZXR1cm4gYW4gQXJyYXlUeXBlCisJICovCisJcHJpdmF0ZSBBcnJheVR5
cGUgZXh0cmFjdFN1YkFycmF5VHlwZShBcnJheVR5cGUgYXJyYXlUeXBlLCBpbnQgcmVtYWluaW5n
RGltZW5zaW9ucywgaW50IGV4dHJhRGltZW5zaW9ucykgeworCQlBcnJheVR5cGUgc3ViQXJyYXlU
eXBlID0gYXJyYXlUeXBlOworCQlpbnQgc3RhcnQgPSBzdWJBcnJheVR5cGUuZ2V0U3RhcnRQb3Np
dGlvbigpOworCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQl3aGls
ZSAoZXh0cmFEaW1lbnNpb25zID4gMCApIHsKKwkJCQlzdWJBcnJheVR5cGUgPSAoQXJyYXlUeXBl
KSBzdWJBcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQkJCWV4dHJhRGltZW5zaW9ucy0t
OworCQkJfQorCQkJdXBkYXRlSW5uZXJQb3NpdGlvbnMoc3ViQXJyYXlUeXBlLCByZW1haW5pbmdE
aW1lbnNpb25zKTsKKwkJfSBlbHNlIHsKKwkJCUxpc3QgZGltZW5zaW9ucyA9IHN1YkFycmF5VHlw
ZS5kaW1lbnNpb25zKCk7CisJCQl3aGlsZSAoZXh0cmFEaW1lbnNpb25zID4gMCApIHsKKwkJCQlk
aW1lbnNpb25zLnJlbW92ZShkaW1lbnNpb25zLnNpemUoKSAtIDEpOworCQkJCWV4dHJhRGltZW5z
aW9ucy0tOworCQkJfQorCQl9CisJCWludCBlbmQgPSByZXRyaWV2ZVByb3BlclJpZ2h0QnJhY2tl
dFBvc2l0aW9uKHJlbWFpbmluZ0RpbWVuc2lvbnMsIHN0YXJ0KTsKKwkJc3ViQXJyYXlUeXBlLnNl
dFNvdXJjZVJhbmdlKHN0YXJ0LCBlbmQgLSBzdGFydCArIDEpOworCQkvLyBjdXQgdGhlIGNoaWxk
IGxvb3NlIGZyb20gaXRzIHBhcmVudCAod2l0aG91dCBjcmVhdGluZyBnYXJiYWdlKQorCQlzdWJB
cnJheVR5cGUuc2V0UGFyZW50KG51bGwsIG51bGwpOworCQlyZXR1cm4gc3ViQXJyYXlUeXBlOwog
CX0KIAogCXByb3RlY3RlZCB2b2lkIHNldFR5cGVGb3JNZXRob2REZWNsYXJhdGlvbihNZXRob2RE
ZWNsYXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiwgVHlwZSB0eXBlLCBpbnQgZXh0cmFEaW1lbnNp
b24pIHsKQEAgLTU2OTEsMTggKzU3OTQsNyBAQAogCQkJCQkJYnJlYWs7CiAJCQkJCX0KIAkJCQl9
IGVsc2UgewotCQkJCQlpbnQgc3RhcnQgPSB0eXBlLmdldFN0YXJ0UG9zaXRpb24oKTsKLQkJCQkJ
QXJyYXlUeXBlIHN1YmFycmF5VHlwZSA9IGFycmF5VHlwZTsKLQkJCQkJaW50IGluZGV4ID0gZXh0
cmFEaW1lbnNpb247Ci0JCQkJCXdoaWxlIChpbmRleCA+IDApIHsKLQkJCQkJCXN1YmFycmF5VHlw
ZSA9IChBcnJheVR5cGUpIHN1YmFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCQkJCQlp
bmRleC0tOwotCQkJCQl9Ci0JCQkJCWludCBlbmQgPSByZXRyaWV2ZVByb3BlclJpZ2h0QnJhY2tl
dFBvc2l0aW9uKHJlbWFpbmluZ0RpbWVuc2lvbnMsIHN0YXJ0KTsKLQkJCQkJc3ViYXJyYXlUeXBl
LnNldFNvdXJjZVJhbmdlKHN0YXJ0LCBlbmQgLSBzdGFydCArIDEpOwotCQkJCQkvLyBjdXQgdGhl
IGNoaWxkIGxvb3NlIGZyb20gaXRzIHBhcmVudCAod2l0aG91dCBjcmVhdGluZyBnYXJiYWdlKQot
CQkJCQlzdWJhcnJheVR5cGUuc2V0UGFyZW50KG51bGwsIG51bGwpOwotCQkJCQl1cGRhdGVJbm5l
clBvc2l0aW9ucyhzdWJhcnJheVR5cGUsIHJlbWFpbmluZ0RpbWVuc2lvbnMpOworCQkJCQlBcnJh
eVR5cGUgc3ViYXJyYXlUeXBlID0gZXh0cmFjdFN1YkFycmF5VHlwZShhcnJheVR5cGUsIHJlbWFp
bmluZ0RpbWVuc2lvbnMsIGV4dHJhRGltZW5zaW9uKTsKIAkJCQkJc3dpdGNoKHRoaXMuYXN0LmFw
aUxldmVsKSB7CiAJCQkJCQljYXNlIEFTVC5KTFMyX0lOVEVSTkFMIDoKIAkJCQkJCQltZXRob2RE
ZWNsYXJhdGlvbi5pbnRlcm5hbFNldFJldHVyblR5cGUoc3ViYXJyYXlUeXBlKTsKQEAgLTU3NTIs
MjAgKzU4NDQsOSBAQAogCQkJCQl0aGlzLmFzdC5nZXRCaW5kaW5nUmVzb2x2ZXIoKS51cGRhdGVL
ZXkodHlwZSwgZWxlbWVudFR5cGUpOwogCQkJCQlzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLnNl
dFR5cGUoZWxlbWVudFR5cGUpOwogCQkJCX0gZWxzZSB7Ci0JCQkJCWludCBzdGFydCA9IHR5cGUu
Z2V0U3RhcnRQb3NpdGlvbigpOwotCQkJCQlBcnJheVR5cGUgc3ViYXJyYXlUeXBlID0gYXJyYXlU
eXBlOwotCQkJCQlpbnQgaW5kZXggPSBleHRyYURpbWVuc2lvbjsKLQkJCQkJd2hpbGUgKGluZGV4
ID4gMCkgewotCQkJCQkJc3ViYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgc3ViYXJyYXlUeXBlLmdl
dENvbXBvbmVudFR5cGUoKTsKLQkJCQkJCWluZGV4LS07Ci0JCQkJCX0KLQkJCQkJaW50IGVuZCA9
IHJldHJpZXZlUHJvcGVyUmlnaHRCcmFja2V0UG9zaXRpb24ocmVtYWluaW5nRGltZW5zaW9ucywg
c3RhcnQpOwotCQkJCQlzdWJhcnJheVR5cGUuc2V0U291cmNlUmFuZ2Uoc3RhcnQsIGVuZCAtIHN0
YXJ0ICsgMSk7Ci0JCQkJCS8vIGN1dCB0aGUgY2hpbGQgbG9vc2UgZnJvbSBpdHMgcGFyZW50ICh3
aXRob3V0IGNyZWF0aW5nIGdhcmJhZ2UpCi0JCQkJCXN1YmFycmF5VHlwZS5zZXRQYXJlbnQobnVs
bCwgbnVsbCk7Ci0JCQkJCXVwZGF0ZUlubmVyUG9zaXRpb25zKHN1YmFycmF5VHlwZSwgcmVtYWlu
aW5nRGltZW5zaW9ucyk7Ci0JCQkJCXNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24uc2V0VHlwZShz
dWJhcnJheVR5cGUpOworCQkJCQlBcnJheVR5cGUgc3ViYXJyYXlUeXBlID0gZXh0cmFjdFN1YkFy
cmF5VHlwZShhcnJheVR5cGUsIHJlbWFpbmluZ0RpbWVuc2lvbnMsIGV4dHJhRGltZW5zaW9uKTsK
IAkJCQkJdGhpcy5hc3QuZ2V0QmluZGluZ1Jlc29sdmVyKCkudXBkYXRlS2V5KHR5cGUsIHN1YmFy
cmF5VHlwZSk7CisJCQkJCXNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24uc2V0VHlwZShzdWJhcnJh
eVR5cGUpOwogCQkJCX0KIAkJCX0gZWxzZSB7CiAJCQkJc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlv
bi5zZXRUeXBlKHR5cGUpOwpAQCAtNTc4OCwxOCArNTg2OSw3IEBACiAJCQkJCXRoaXMuYXN0Lmdl
dEJpbmRpbmdSZXNvbHZlcigpLnVwZGF0ZUtleSh0eXBlLCBlbGVtZW50VHlwZSk7CiAJCQkJCXZh
cmlhYmxlRGVjbGFyYXRpb25FeHByZXNzaW9uLnNldFR5cGUoZWxlbWVudFR5cGUpOwogCQkJCX0g
ZWxzZSB7Ci0JCQkJCWludCBzdGFydCA9IHR5cGUuZ2V0U3RhcnRQb3NpdGlvbigpOwotCQkJCQlB
cnJheVR5cGUgc3ViYXJyYXlUeXBlID0gYXJyYXlUeXBlOwotCQkJCQlpbnQgaW5kZXggPSBleHRy
YURpbWVuc2lvbjsKLQkJCQkJd2hpbGUgKGluZGV4ID4gMCkgewotCQkJCQkJc3ViYXJyYXlUeXBl
ID0gKEFycmF5VHlwZSkgc3ViYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJCQkJCWlu
ZGV4LS07Ci0JCQkJCX0KLQkJCQkJaW50IGVuZCA9IHJldHJpZXZlUHJvcGVyUmlnaHRCcmFja2V0
UG9zaXRpb24ocmVtYWluaW5nRGltZW5zaW9ucywgc3RhcnQpOwotCQkJCQlzdWJhcnJheVR5cGUu
c2V0U291cmNlUmFuZ2Uoc3RhcnQsIGVuZCAtIHN0YXJ0ICsgMSk7Ci0JCQkJCS8vIGN1dCB0aGUg
Y2hpbGQgbG9vc2UgZnJvbSBpdHMgcGFyZW50ICh3aXRob3V0IGNyZWF0aW5nIGdhcmJhZ2UpCi0J
CQkJCXN1YmFycmF5VHlwZS5zZXRQYXJlbnQobnVsbCwgbnVsbCk7Ci0JCQkJCXVwZGF0ZUlubmVy
UG9zaXRpb25zKHN1YmFycmF5VHlwZSwgcmVtYWluaW5nRGltZW5zaW9ucyk7CisJCQkJCUFycmF5
VHlwZSBzdWJhcnJheVR5cGUgPSBleHRyYWN0U3ViQXJyYXlUeXBlKGFycmF5VHlwZSwgcmVtYWlu
aW5nRGltZW5zaW9ucywgZXh0cmFEaW1lbnNpb24pOwogCQkJCQl2YXJpYWJsZURlY2xhcmF0aW9u
RXhwcmVzc2lvbi5zZXRUeXBlKHN1YmFycmF5VHlwZSk7CiAJCQkJCXRoaXMuYXN0LmdldEJpbmRp
bmdSZXNvbHZlcigpLnVwZGF0ZUtleSh0eXBlLCBzdWJhcnJheVR5cGUpOwogCQkJCX0KQEAgLTU4
MjQsMTggKzU4OTQsNyBAQAogCQkJCQl0aGlzLmFzdC5nZXRCaW5kaW5nUmVzb2x2ZXIoKS51cGRh
dGVLZXkodHlwZSwgZWxlbWVudFR5cGUpOwogCQkJCQl2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVt
ZW50LnNldFR5cGUoZWxlbWVudFR5cGUpOwogCQkJCX0gZWxzZSB7Ci0JCQkJCWludCBzdGFydCA9
IHR5cGUuZ2V0U3RhcnRQb3NpdGlvbigpOwotCQkJCQlBcnJheVR5cGUgc3ViYXJyYXlUeXBlID0g
YXJyYXlUeXBlOwotCQkJCQlpbnQgaW5kZXggPSBleHRyYURpbWVuc2lvbjsKLQkJCQkJd2hpbGUg
KGluZGV4ID4gMCkgewotCQkJCQkJc3ViYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgc3ViYXJyYXlU
eXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJCQkJCWluZGV4LS07Ci0JCQkJCX0KLQkJCQkJaW50
IGVuZCA9IHJldHJpZXZlUHJvcGVyUmlnaHRCcmFja2V0UG9zaXRpb24ocmVtYWluaW5nRGltZW5z
aW9ucywgc3RhcnQpOwotCQkJCQlzdWJhcnJheVR5cGUuc2V0U291cmNlUmFuZ2Uoc3RhcnQsIGVu
ZCAtIHN0YXJ0ICsgMSk7Ci0JCQkJCS8vIGN1dCB0aGUgY2hpbGQgbG9vc2UgZnJvbSBpdHMgcGFy
ZW50ICh3aXRob3V0IGNyZWF0aW5nIGdhcmJhZ2UpCi0JCQkJCXN1YmFycmF5VHlwZS5zZXRQYXJl
bnQobnVsbCwgbnVsbCk7Ci0JCQkJCXVwZGF0ZUlubmVyUG9zaXRpb25zKHN1YmFycmF5VHlwZSwg
cmVtYWluaW5nRGltZW5zaW9ucyk7CisJCQkJCUFycmF5VHlwZSBzdWJhcnJheVR5cGUgPSBleHRy
YWN0U3ViQXJyYXlUeXBlKGFycmF5VHlwZSwgcmVtYWluaW5nRGltZW5zaW9ucywgZXh0cmFEaW1l
bnNpb24pOwogCQkJCQl2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50LnNldFR5cGUoc3ViYXJy
YXlUeXBlKTsKIAkJCQkJdGhpcy5hc3QuZ2V0QmluZGluZ1Jlc29sdmVyKCkudXBkYXRlS2V5KHR5
cGUsIHN1YmFycmF5VHlwZSk7CiAJCQkJfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RNYXRjaGVyLmphdmEgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVE1hdGNoZXIuamF2
YQppbmRleCBmMzNjNWUyLi4yOTcwMmQ2IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVE1hdGNoZXIuamF2YQorKysgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVE1hdGNoZXIu
amF2YQpAQCAtMzMxLDggKzMzMSwxMSBAQAogCQl9CiAJCUFycmF5VHlwZSBvID0gKEFycmF5VHlw
ZSkgb3RoZXI7CiAJCWludCBsZXZlbCA9IG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWw7Ci0JCXJldHVy
biBzYWZlU3VidHJlZU1hdGNoKG5vZGUuZ2V0Q29tcG9uZW50VHlwZSgpLCBvLmdldENvbXBvbmVu
dFR5cGUoKSkKLQkJCQkmJiAobGV2ZWwgPj0gQVNULkpMUzggPyBzYWZlU3VidHJlZUxpc3RNYXRj
aChub2RlLmFubm90YXRpb25zKCksIG8uYW5ub3RhdGlvbnMoKSkgOiB0cnVlKTsKKwkJaWYgKGxl
dmVsIDwgQVNULkpMUzgpIHsKKwkJCXJldHVybiBzYWZlU3VidHJlZU1hdGNoKG5vZGUuZ2V0Q29t
cG9uZW50VHlwZSgpLCBvLmdldENvbXBvbmVudFR5cGUoKSk7CisJCX0KKwkJcmV0dXJuIHNhZmVT
dWJ0cmVlTWF0Y2gobm9kZS5nZXRFbGVtZW50VHlwZSgpLCBvLmdldEVsZW1lbnRUeXBlKCkpCisJ
CQkJJiYgc2FmZVN1YnRyZWVMaXN0TWF0Y2gobm9kZS5kaW1lbnNpb25zKCksIG8uZGltZW5zaW9u
cygpKTsKIAl9CiAKIAkvKioKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9v
cmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQXJyYXlUeXBlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FycmF5VHlwZS5qYXZhCmluZGV4IGNk
MWRkODMuLmQ2MmZiYTkgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcv
ZWNsaXBzZS9qZHQvY29yZS9kb20vQXJyYXlUeXBlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BcnJheVR5cGUuamF2YQpAQCAtMjEs
NyArMjEsOSBAQAogLyoqCiAgKiBUeXBlIG5vZGUgZm9yIGFuIGFycmF5IHR5cGUuCiAgKiA8cD4K
LSAqIEFycmF5IHR5cGVzIGFyZSBleHByZXNzZWQgaW4gYSByZWN1cnNpdmUgbWFubmVyLCBvbmUg
ZGltZW5zaW9uIGF0IGEgdGltZS4KKyAqIEFycmF5IHR5cGVzIGFyZSBleHByZXNzZWQgaW4gYSBy
ZWN1cnNpdmUgbWFubmVyLCBvbmUgZGltZW5zaW9uIGF0IGEgdGltZS4gRnJvbSBKTFM4IG9ud2Fy
ZHMsCisgKiBpbnN0ZWFkIG9mIHRoaXMgcmVjdXJzaXZlIG1hbm5lciwgYXJyYXlzIGFyZSByZXBy
ZXNlbnRlZCBieSBhIGJhc2UgZWxlbWVudCB0eXBlICh3aGljaCBjYW5ub3QKKyAqIGJlIGFuIEFy
cmF5IHR5cGUpIGFuZCBhIGxpc3Qgb2YgZGltZW5zaW9ucyBlYWNoIG9mIHdoaWNoIG1heSBoYXZl
IGEgbGlzdCBvZiBhbm5vdGF0aW9ucy4KICAqIDwvcD4KICAqIDxwcmU+CiAgKiBBcnJheVR5cGU6
CkBAIC0zMSw3ICszMyw3IEBACiAgKiBAc2luY2UgMi4wCiAgKiBAbm9pbnN0YW50aWF0ZSBUaGlz
IGNsYXNzIGlzIG5vdCBpbnRlbmRlZCB0byBiZSBpbnN0YW50aWF0ZWQgYnkgY2xpZW50cy4KICAq
LwotcHVibGljIGNsYXNzIEFycmF5VHlwZSBleHRlbmRzIEFubm90YXRhYmxlVHlwZSB7CitwdWJs
aWMgY2xhc3MgQXJyYXlUeXBlIGV4dGVuZHMgVHlwZSB7CiAKIAkvKioKIAkgKiBUaGUgImNvbXBv
bmVudFR5cGUiIHN0cnVjdHVyYWwgcHJvcGVydHkgb2YgdGhpcyBub2RlIHR5cGUgKGNoaWxkIHR5
cGU6IHtAbGluayBUeXBlfSkuCkBAIC00MSwxMiArNDMsMTggQEAKIAkJbmV3IENoaWxkUHJvcGVy
dHlEZXNjcmlwdG9yKEFycmF5VHlwZS5jbGFzcywgImNvbXBvbmVudFR5cGUiLCBUeXBlLmNsYXNz
LCBNQU5EQVRPUlksIENZQ0xFX1JJU0spOyAvLyROT04tTkxTLTEkCiAKIAkvKioKLQkgKiBUaGUg
ImFubm90YXRpb25zIiBzdHJ1Y3R1cmFsIHByb3BlcnR5IG9mIHRoaXMgbm9kZSB0eXBlIChlbGVt
ZW50IHR5cGU6IHtAbGluayBBbm5vdGF0aW9ufSkuCisJICogVGhlICJlbGVtZW50VHlwZSIgc3Ry
dWN0dXJhbCBwcm9wZXJ0eSBvZiB0aGlzIG5vZGUgdHlwZSAoY2hpbGQgdHlwZToge0BsaW5rIFR5
cGV9KS4KIAkgKiBAc2luY2UgMy45IEJFVEFfSkFWQTgKIAkgKi8KLQlwdWJsaWMgc3RhdGljIGZp
bmFsIENoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBBTk5PVEFUSU9OU19QUk9QRVJUWSA9Ci0J
CQlpbnRlcm5hbEFubm90YXRpb25zUHJvcGVydHlGYWN0b3J5KEFycmF5VHlwZS5jbGFzcyk7CisJ
cHVibGljIHN0YXRpYyBmaW5hbCBDaGlsZFByb3BlcnR5RGVzY3JpcHRvciBFTEVNRU5UX1RZUEVf
UFJPUEVSVFkgPQorCQkJbmV3IENoaWxkUHJvcGVydHlEZXNjcmlwdG9yKEFycmF5VHlwZS5jbGFz
cywgImVsZW1lbnRUeXBlIiwgVHlwZS5jbGFzcywgTUFOREFUT1JZLCBDWUNMRV9SSVNLKTsgLy8k
Tk9OLU5MUy0xJAkKIAkKKwkvKioKKwkgKiBUaGUgImRpbWVuc2lvbnMiIHN0cnVjdHVyYWwgcHJv
cGVydHkgb2YgdGhpcyBub2RlIHR5cGUgKGVsZW1lbnQgdHlwZToge0BsaW5rIEFubm90YXRpb259
KS4KKwkgKiBAc2luY2UgMy45IEJFVEFfSkFWQTgKKwkgKi8KKwlwdWJsaWMgc3RhdGljIGZpbmFs
IENoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBESU1FTlNJT05TX1BST1BFUlRZID0KKwkJCW5l
dyBDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IoQXJyYXlUeXBlLmNsYXNzLCAiZGltZW5zaW9u
cyIsIEV4dHJhRGltZW5zaW9uLmNsYXNzLCBDWUNMRV9SSVNLKTsgLy8kTk9OLU5MUy0xJAkKIAkv
KioKIAkgKiBBIGxpc3Qgb2YgcHJvcGVydHkgZGVzY3JpcHRvcnMgKGVsZW1lbnQgdHlwZToKIAkg
KiB7QGxpbmsgU3RydWN0dXJhbFByb3BlcnR5RGVzY3JpcHRvcn0pLApAQCAtNjksOCArNzcsOCBA
QAogCiAJCXByb3BlcnR5TGlzdCA9IG5ldyBBcnJheUxpc3QoMyk7CiAJCWNyZWF0ZVByb3BlcnR5
TGlzdChBcnJheVR5cGUuY2xhc3MsIHByb3BlcnR5TGlzdCk7Ci0JCWFkZFByb3BlcnR5KENPTVBP
TkVOVF9UWVBFX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOwotCQlhZGRQcm9wZXJ0eShBTk5PVEFU
SU9OU19QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKKwkJYWRkUHJvcGVydHkoRUxFTUVOVF9UWVBF
X1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOworCQlhZGRQcm9wZXJ0eShESU1FTlNJT05TX1BST1BF
UlRZLCBwcm9wZXJ0eUxpc3QpOwogCQlQUk9QRVJUWV9ERVNDUklQVE9SU184XzAgPSByZWFwUHJv
cGVydHlMaXN0KHByb3BlcnR5TGlzdCk7CiAJfQogCkBAIC05OCw5ICsxMDYsMjUgQEAKIAogCS8q
KgogCSAqIFRoZSBjb21wb25lbnQgdHlwZTsgbGF6aWx5IGluaXRpYWxpemVkOyBkZWZhdWx0cyB0
byBhIHNpbXBsZSB0eXBlIHdpdGgKLQkgKiBhbiB1bnNwZWNpZmllZCwgYnV0IGxlZ2FsLCBuYW1l
LgorCSAqIGFuIHVuc3BlY2lmaWVkLCBidXQgbGVnYWwsIG5hbWUuIE51bGwgZnJvbSBKTFM4IG9u
d2FyZHMuCiAJICovCiAJcHJpdmF0ZSBUeXBlIGNvbXBvbmVudFR5cGUgPSBudWxsOworCisJLyoq
CisJICogVGhlIGVsZW1lbnQgdHlwZTsgbGF6aWx5IGluaXRpYWxpemVkOyBkZWZhdWx0cyB0byBh
IHNpbXBsZSB0eXBlIHdpdGgKKwkgKiBhbiB1bnNwZWNpZmllZCwgYnV0IGxlZ2FsLCBuYW1lLgor
CSAqLworCXByaXZhdGUgVHlwZSBlbGVtZW50VHlwZSA9IG51bGw7CisKKwkvKioKKwkgKiBMaXN0
IG9mIGV4dHJhIGRpbWVuc2lvbnMgdGhpcyBub2RlIGhhcyB3aXRoIG9wdGlvbmFsIGFubm90YXRp
b25zCisJICogKGVsZW1lbnQgdHlwZToge0BsaW5rIEV4dHJhRGltZW5zaW9ufSkuCisJICogTnVs
bCBiZWZvcmUgSkxTOC4gQWRkZWQgaW4gSkxTODsgZGVmYXVsdHMgdG8gYSBsaXN0IHdpdGggb25l
IGVsZW1lbnQKKwkgKiAoc2VlIGNvbnN0cnVjdG9yKS4KKwkgKiAKKwkgKiBAc2luY2UgMy45IEJF
VEFfSkFWQTgKKwkgKi8KKwlwcml2YXRlIEFTVE5vZGUuTm9kZUxpc3QgZGltZW5zaW9ucyA9IG51
bGw7CiAKIAkvKioKIAkgKiBDcmVhdGVzIGEgbmV3IHVucGFyZW50ZWQgbm9kZSBmb3IgYW4gYXJy
YXkgdHlwZSBvd25lZCBieSB0aGUgZ2l2ZW4gQVNULgpAQCAtMTEzLDE0ICsxMzcsMzEgQEAKIAkg
Ki8KIAlBcnJheVR5cGUoQVNUIGFzdCkgewogCQlzdXBlcihhc3QpOworCQlpZiAoYXN0LmFwaUxl
dmVsID49IEFTVC5KTFM4KSB7CisJCQl0aGlzLmRpbWVuc2lvbnMgPSBuZXcgQVNUTm9kZS5Ob2Rl
TGlzdChESU1FTlNJT05TX1BST1BFUlRZKTsKKwkJCS8vIHNpbmdsZSBkaW1lbnNpb24gYXJyYXkg
aXMgdGhlIGRlZmF1bHQKKwkJCXRoaXMuZGltZW5zaW9ucygpLmFkZCh0aGlzLmFzdC5uZXdFeHRy
YURpbWVuc2lvbigpKTsKKwkJfQogCX0KIAotCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0
aG9kKQotCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBbm5vdGF0YWJsZVR5cGUuCi0JICogQHNpbmNl
IDMuOSBCRVRBX0pBVkE4Ci0JICovCi0JZmluYWwgQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9y
IGludGVybmFsQW5ub3RhdGlvbnNQcm9wZXJ0eSgpIHsKLQkJcmV0dXJuIEFOTk9UQVRJT05TX1BS
T1BFUlRZOworCS8qKgorCSogQ3JlYXRlcyBhIG5ldyB1bnBhcmVudGVkIG5vZGUgZm9yIGFuIGFy
cmF5IHR5cGUgb3duZWQgYnkgdGhlIGdpdmVuIEFTVC4KKwkqIDxwPgorCSogTi5CLiBUaGlzIGNv
bnN0cnVjdG9yIGlzIHByaXZhdGUuCisJKiA8L3A+CisJKgorCSogQHBhcmFtIGFzdCB0aGUgQVNU
IHRoYXQgaXMgdG8gb3duIHRoaXMgbm9kZQorCSogQHBhcmFtIGRpbWVuc2lvbnMgbm8gb2YgZGlt
ZW5zaW9ucyAtIGNhbiBiZSB6ZXJvCisJKgorCSogQHNpbmNlIDMuOSBCRVRBX0pBVkE4CisJKi8K
Kwlwcml2YXRlIEFycmF5VHlwZShBU1QgYXN0LCBpbnQgZGltZW5zaW9ucykgeworCQlzdXBlcihh
c3QpOworCQl1bnN1cHBvcnRlZEluMl8zXzQoKTsKKwkJdGhpcy5kaW1lbnNpb25zID0gbmV3IEFT
VE5vZGUuTm9kZUxpc3QoRElNRU5TSU9OU19QUk9QRVJUWSk7CisJCWZvciAoaW50IGkgPSAwOyBp
IDwgZGltZW5zaW9uczsgKytpKSB7CisJCQl0aGlzLmRpbWVuc2lvbnMoKS5hZGQodGhpcy5hc3Qu
bmV3RXh0cmFEaW1lbnNpb24oKSk7CisJCX0KIAl9CiAKIAkvKiAob21pdCBqYXZhZG9jIGZvciB0
aGlzIG1ldGhvZCkKQEAgLTEzNCw4ICsxNzUsOCBAQAogCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBB
U1ROb2RlLgogCSAqLwogCWZpbmFsIExpc3QgaW50ZXJuYWxHZXRDaGlsZExpc3RQcm9wZXJ0eShD
aGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IgcHJvcGVydHkpIHsKLQkJaWYgKHByb3BlcnR5ID09
IEFOTk9UQVRJT05TX1BST1BFUlRZKSB7Ci0JCQlyZXR1cm4gYW5ub3RhdGlvbnMoKTsKKwkJaWYg
KHByb3BlcnR5ID09IERJTUVOU0lPTlNfUFJPUEVSVFkpIHsKKwkJCXJldHVybiBkaW1lbnNpb25z
KCk7CiAJCX0KIAkJLy8gYWxsb3cgZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiB0byBmbGFnIHRoZSBl
cnJvcgogCQlyZXR1cm4gc3VwZXIuaW50ZXJuYWxHZXRDaGlsZExpc3RQcm9wZXJ0eShwcm9wZXJ0
eSk7CkBAIC0xNTAsNiArMTkxLDEzIEBACiAJCQkJcmV0dXJuIGdldENvbXBvbmVudFR5cGUoKTsK
IAkJCX0gZWxzZSB7CiAJCQkJc2V0Q29tcG9uZW50VHlwZSgoVHlwZSkgY2hpbGQpOworCQkJCXJl
dHVybiBudWxsOworCQkJfQorCQl9IGVsc2UgaWYgKHByb3BlcnR5ID09IEVMRU1FTlRfVFlQRV9Q
Uk9QRVJUWSkgeworCQkJaWYgKGdldCkgeworCQkJCXJldHVybiBnZXRFbGVtZW50VHlwZSgpOwor
CQkJfSBlbHNlIHsKKwkJCQlzZXRFbGVtZW50VHlwZSgoVHlwZSkgY2hpbGQpOwogCQkJCXJldHVy
biBudWxsOwogCQkJfQogCQl9CkBAIC0xNjgsMTMgKzIxNiwxNyBAQAogCSAqIE1ldGhvZCBkZWNs
YXJlZCBvbiBBU1ROb2RlLgogCSAqLwogCUFTVE5vZGUgY2xvbmUwKEFTVCB0YXJnZXQpIHsKLQkJ
QXJyYXlUeXBlIHJlc3VsdCA9IG5ldyBBcnJheVR5cGUodGFyZ2V0KTsKLQkJcmVzdWx0LnNldFNv
dXJjZVJhbmdlKGdldFN0YXJ0UG9zaXRpb24oKSwgZ2V0TGVuZ3RoKCkpOwotCQlyZXN1bHQuc2V0
Q29tcG9uZW50VHlwZSgoVHlwZSkgZ2V0Q29tcG9uZW50VHlwZSgpLmNsb25lKHRhcmdldCkpOwot
CQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwgPj0gQVNULkpMUzgpIHsKLQkJCXJlc3VsdC5hbm5vdGF0
aW9ucygpLmFkZEFsbCgKLQkJCQkJQVNUTm9kZS5jb3B5U3VidHJlZXModGFyZ2V0LCBhbm5vdGF0
aW9ucygpKSk7CisJCUFycmF5VHlwZSByZXN1bHQ7CisJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCA8
IEFTVC5KTFM4KSB7CisJCQlyZXN1bHQgPSBuZXcgQXJyYXlUeXBlKHRhcmdldCk7CisJCQlyZXN1
bHQuc2V0Q29tcG9uZW50VHlwZSgoVHlwZSkgZ2V0Q29tcG9uZW50VHlwZSgpLmNsb25lKHRhcmdl
dCkpOwkJCQorCQl9IGVsc2UgeworCQkJcmVzdWx0ID0gbmV3IEFycmF5VHlwZSh0YXJnZXQsIDAp
OworCQkJcmVzdWx0LnNldEVsZW1lbnRUeXBlKChUeXBlKSBnZXRFbGVtZW50VHlwZSgpLmNsb25l
KHRhcmdldCkpOworCQkJcmVzdWx0LmRpbWVuc2lvbnMoKS5hZGRBbGwoCisJCQkJCUFTVE5vZGUu
Y29weVN1YnRyZWVzKHRhcmdldCwgZGltZW5zaW9ucygpKSk7CiAJCX0KKwkJcmVzdWx0LnNldFNv
dXJjZVJhbmdlKGdldFN0YXJ0UG9zaXRpb24oKSwgZ2V0TGVuZ3RoKCkpOwogCQlyZXR1cm4gcmVz
dWx0OwogCX0KIApAQCAtMTkzLDkgKzI0NSwxMSBAQAogCQlib29sZWFuIHZpc2l0Q2hpbGRyZW4g
PSB2aXNpdG9yLnZpc2l0KHRoaXMpOwogCQlpZiAodmlzaXRDaGlsZHJlbikgewogCQkJLy8gdmlz
aXQgY2hpbGRyZW4gaW4gbm9ybWFsIGxlZnQgdG8gcmlnaHQgcmVhZGluZyBvcmRlcgotCQkJYWNj
ZXB0Q2hpbGQodmlzaXRvciwgZ2V0Q29tcG9uZW50VHlwZSgpKTsKLQkJCWlmICh0aGlzLmFzdC5h
cGlMZXZlbCA+PSBBU1QuSkxTOCkgewotCQkJCWFjY2VwdENoaWxkcmVuKHZpc2l0b3IsIHRoaXMu
YW5ub3RhdGlvbnMpOworCQkJaWYgKHRoaXMuYXN0LmFwaUxldmVsIDwgQVNULkpMUzgpIHsKKwkJ
CQlhY2NlcHRDaGlsZCh2aXNpdG9yLCBnZXRDb21wb25lbnRUeXBlKCkpOwkJCQkKKwkJCX0gZWxz
ZSB7CisJCQkJYWNjZXB0Q2hpbGQodmlzaXRvciwgZ2V0RWxlbWVudFR5cGUoKSk7CisJCQkJYWNj
ZXB0Q2hpbGRyZW4odmlzaXRvciwgdGhpcy5kaW1lbnNpb25zKTsKIAkJCX0KIAkJfQogCQl2aXNp
dG9yLmVuZFZpc2l0KHRoaXMpOwpAQCAtMjA2LDggKzI2MCwxMCBAQAogCSAqIG1heSBiZSBhbm90
aGVyIGFycmF5IHR5cGUuCiAJICoKIAkgKiBAcmV0dXJuIHRoZSBjb21wb25lbnQgdHlwZSBub2Rl
CisJICogQGRlcHJlY2F0ZWQgZnJvbSBKTFM4IGFuZCBsYXRlciwgdGhlIHJlY3Vyc2l2ZSBzdHJ1
Y3R1cmUgaXMgbm90IHZhbGlkCiAJICovCiAJcHVibGljIFR5cGUgZ2V0Q29tcG9uZW50VHlwZSgp
IHsKKwkJc3VwcG9ydGVkT25seUluMl8zXzQoKTsKIAkJaWYgKHRoaXMuY29tcG9uZW50VHlwZSA9
PSBudWxsKSB7CiAJCQkvLyBsYXp5IGluaXQgbXVzdCBiZSB0aHJlYWQtc2FmZSBmb3IgcmVhZGVy
cwogCQkJc3luY2hyb25pemVkICh0aGlzKSB7CkBAIC0yMzIsOCArMjg4LDEwIEBACiAJICogPGxp
PnRoZSBub2RlIGFscmVhZHkgaGFzIGEgcGFyZW50PC9saT4KIAkgKiA8bGk+YSBjeWNsZSBpbiB3
b3VsZCBiZSBjcmVhdGVkPC9saT4KIAkgKiA8L3VsPgorCSAqIEBkZXByZWNhdGVkIGZyb20gSkxT
OCBhbmQgbGF0ZXIsIHRoZSByZWN1cnNpdmUgc3RydWN0dXJlIGlzIG5vdCB2YWxpZAogCSAqLwog
CXB1YmxpYyB2b2lkIHNldENvbXBvbmVudFR5cGUoVHlwZSBjb21wb25lbnRUeXBlKSB7CisJCXN1
cHBvcnRlZE9ubHlJbjJfM180KCk7CiAJCWlmIChjb21wb25lbnRUeXBlID09IG51bGwpIHsKIAkJ
CXRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oKTsKIAkJfQpAQCAtMjQ4LDQzICsz
MDYsMTE4IEBACiAJICogbmV2ZXIgYW4gYXJyYXkgdHlwZS4KIAkgKiA8cD4KIAkgKiBUaGlzIGlz
IGEgY29udmVuaWVuY2UgbWV0aG9kIHRoYXQgZGVzY2VuZHMgYSBjaGFpbiBvZiBuZXN0ZWQgYXJy
YXkgdHlwZXMKLQkgKiB1bnRpbCBpdCByZWFjaGVzIGEgbm9uLWFycmF5IHR5cGUuCisJICogdW50
aWwgaXQgcmVhY2hlcyBhIG5vbi1hcnJheSB0eXBlIHVudGlsIEpMUzQuIEZyb20gSkxTOCBhbmQg
bGF0ZXIsIHRoaXMgcmV0dXJucyB0aGUKKwkgKiBlbGVtZW50IHR5cGUgZGlyZWN0bHkuCiAJICog
PC9wPgogCSAqCi0JICogQHJldHVybiB0aGUgY29tcG9uZW50IHR5cGUgbm9kZQorCSAqIEByZXR1
cm4gdGhlIGVsZW1lbnQgdHlwZSBub2RlCiAJICovCiAJcHVibGljIFR5cGUgZ2V0RWxlbWVudFR5
cGUoKSB7Ci0JCVR5cGUgdCA9IGdldENvbXBvbmVudFR5cGUoKTsKLQkJd2hpbGUgKHQuaXNBcnJh
eVR5cGUoKSkgewotCQkJdCA9ICgoQXJyYXlUeXBlKSB0KS5nZXRDb21wb25lbnRUeXBlKCk7CisJ
CWlmICh0aGlzLmFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsKKwkJCVR5cGUgdCA9IGdldENv
bXBvbmVudFR5cGUoKTsKKwkJCXdoaWxlICh0LmlzQXJyYXlUeXBlKCkpIHsKKwkJCQl0ID0gKChB
cnJheVR5cGUpIHQpLmdldENvbXBvbmVudFR5cGUoKTsKKwkJCX0KKwkJCXJldHVybiB0OwogCQl9
Ci0JCXJldHVybiB0OworCQlpZiAodGhpcy5lbGVtZW50VHlwZSA9PSBudWxsKSB7CisJCQkvLyBs
YXp5IGluaXQgbXVzdCBiZSB0aHJlYWQtc2FmZSBmb3IgcmVhZGVycworCQkJc3luY2hyb25pemVk
ICh0aGlzKSB7CisJCQkJaWYgKHRoaXMuZWxlbWVudFR5cGUgPT0gbnVsbCkgeworCQkJCQlwcmVM
YXp5SW5pdCgpOworCQkJCQl0aGlzLmVsZW1lbnRUeXBlID0gbmV3IFNpbXBsZVR5cGUodGhpcy5h
c3QpOworCQkJCQlwb3N0TGF6eUluaXQodGhpcy5lbGVtZW50VHlwZSwgRUxFTUVOVF9UWVBFX1BS
T1BFUlRZKTsKKwkJCQl9CisJCQl9CisJCX0KKwkJcmV0dXJuIHRoaXMuZWxlbWVudFR5cGU7CisJ
fQorCisJLyoqCisJICogU2V0cyB0aGUgZWxlbWVudCB0eXBlIG9mIHRoZSBhcnJheS4KKwkgKgor
CSAqIEBwYXJhbSBjaGlsZCB0aGUgbmV3IHR5cGUKKwkgKiBAZXhjZXB0aW9uIElsbGVnYWxBcmd1
bWVudEV4Y2VwdGlvbiBpZjoKKwkgKiA8dWw+CisJICogPGxpPnRoZSBub2RlIGJlbG9uZ3MgdG8g
YSBkaWZmZXJlbnQgQVNUPC9saT4KKwkgKiA8bGk+dGhlIG5vZGUgYWxyZWFkeSBoYXMgYSBwYXJl
bnQ8L2xpPgorCSAqIDxsaT50aGUgbm9kZSBpcyBhbiBhcnJheSB0eXBlPC9saT4KKwkgKiA8L3Vs
PgorCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAorCSAqLworCXB1YmxpYyB2b2lkIHNldEVsZW1l
bnRUeXBlKFR5cGUgY2hpbGQpIHsKKwkJaWYgKGNoaWxkID09IG51bGwgfHwgY2hpbGQgaW5zdGFu
Y2VvZiBBcnJheVR5cGUpIHsKKwkJCXRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24o
KTsKKwkJfQorCQlBU1ROb2RlIG9sZENoaWxkID0gdGhpcy5lbGVtZW50VHlwZTsKKwkJcHJlUmVw
bGFjZUNoaWxkKG9sZENoaWxkLCBjaGlsZCwgRUxFTUVOVF9UWVBFX1BST1BFUlRZKTsKKwkJdGhp
cy5lbGVtZW50VHlwZSA9IGNoaWxkOworCQlwb3N0UmVwbGFjZUNoaWxkKG9sZENoaWxkLCBjaGls
ZCwgRUxFTUVOVF9UWVBFX1BST1BFUlRZKTsKIAl9CiAKIAkvKioKIAkgKiBSZXR1cm5zIHRoZSBu
dW1iZXIgb2YgZGltZW5zaW9ucyBpbiB0aGlzIGFycmF5IHR5cGUuCiAJICogPHA+CiAJICogVGhp
cyBpcyBhIGNvbnZlbmllbmNlIG1ldGhvZCB0aGF0IGRlc2NlbmRzIGEgY2hhaW4gb2YgbmVzdGVk
IGFycmF5IHR5cGVzCi0JICogdW50aWwgaXQgcmVhY2hlcyBhIG5vbi1hcnJheSB0eXBlLgorCSAq
IHVudGlsIGl0IHJlYWNoZXMgYSBub24tYXJyYXkgdHlwZSAodW50aWwgSkxTNCkuIEZyb20gSkxT
OCBvbndhcmRzLCAKKwkgKiB0aGlzIHJldHVybnMgdGhlIHNpemUgb2YgdGhlIGRpbWVuc2lvbnMg
bGlzdC4KIAkgKiA8L3A+CiAJICoKIAkgKiBAcmV0dXJuIHRoZSBudW1iZXIgb2YgZGltZW5zaW9u
cyAoYWx3YXlzIHBvc2l0aXZlKQogCSAqLwogCXB1YmxpYyBpbnQgZ2V0RGltZW5zaW9ucygpIHsK
LQkJVHlwZSB0ID0gZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlpbnQgZGltZW5zaW9ucyA9IDE7IC8v
IGFsd2F5cyBpbmNsdWRlIHRoaXMgYXJyYXkgdHlwZQotCQl3aGlsZSAodC5pc0FycmF5VHlwZSgp
KSB7Ci0JCQlkaW1lbnNpb25zKys7Ci0JCQl0ID0gKChBcnJheVR5cGUpIHQpLmdldENvbXBvbmVu
dFR5cGUoKTsKKwkJaWYgKHRoaXMuYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgeworCQkJVHlw
ZSB0ID0gZ2V0Q29tcG9uZW50VHlwZSgpOworCQkJaW50IGRpbWVuc2lvbiA9IDE7IC8vIGFsd2F5
cyBpbmNsdWRlIHRoaXMgYXJyYXkgdHlwZQorCQkJd2hpbGUgKHQuaXNBcnJheVR5cGUoKSkgewor
CQkJCWRpbWVuc2lvbisrOworCQkJCXQgPSAoKEFycmF5VHlwZSkgdCkuZ2V0Q29tcG9uZW50VHlw
ZSgpOworCQkJfQorCQkJcmV0dXJuIGRpbWVuc2lvbjsJCQkKIAkJfQotCQlyZXR1cm4gZGltZW5z
aW9uczsKKwkJcmV0dXJuIGRpbWVuc2lvbnMoKS5zaXplKCk7CisJfQorCisJLyoqCisJICogUmV0
dXJucyB0aGUgZGltZW5zaW9uIGQgaW4gdGhpcyBhcnJheSB0eXBlLgorCSAqIDxwPgorCSAqIFRo
aXMgaXMgYSBjb252ZW5pZW5jZSBtZXRob2QgdGhhdCByZXR1cm5zIHRoZSBkaW1lbnNpb24gYXQg
dGhlIGdpdmVuIG51bWJlciBkLgorCSAqIDwvcD4KKwkgKiBAcGFyYW0gZCBkaW1lbnNpb24gbm8K
KwkgKiBAcmV0dXJuIERpbWVuc2lvbiBhdCBudW1iZXIgZCwgbnVsbCBpZiBkIG91dCBvZiByYW5n
ZQorCSAqIAorCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAorCSAqLworCXB1YmxpYyBFeHRyYURp
bWVuc2lvbiBnZXREaW1lbnNpb25ObyhpbnQgZCkgeworCQl1bnN1cHBvcnRlZEluMl8zXzQoKTsK
KwkJRXh0cmFEaW1lbnNpb24gZXh0cmFEaW1lbnNpb24gPSBudWxsOworCQlpbnQgbiA9IGdldERp
bWVuc2lvbnMoKSAtIDE7CisJCWlmIChkID49IDAgJiYgZCA8PSBuKSB7CisJCQlleHRyYURpbWVu
c2lvbiA9IChFeHRyYURpbWVuc2lvbikgZGltZW5zaW9ucygpLmdldChuIC0gZCk7CisJCX0KKwkJ
cmV0dXJuIGV4dHJhRGltZW5zaW9uOworCX0KKworCS8qKgorCSAqIFJldHVybnMgdGhlIGxpdmUg
b3JkZXJlZCBsaXN0IG9mIGRpbWVuc2lvbnMgd2l0aCBvcHRpb25hbCBhbm5vdGF0aW9ucyAoYWRk
ZWQgaW4gSkxTOCBBUEkpLgorCSAqIAorCSAqIEByZXR1cm4gdGhlIGxpdmUgbGlzdCBvZiBkaW1l
bnNpb25zIHdpdGggb3B0aW9uYWwgYW5ub3RhdGlvbnMgKGVsZW1lbnQgdHlwZToge0BsaW5rIEV4
dHJhRGltZW5zaW9ufSkKKwkgKiBAZXhjZXB0aW9uIFVuc3VwcG9ydGVkT3BlcmF0aW9uRXhjZXB0
aW9uIGlmIHRoaXMgb3BlcmF0aW9uIGlzIHVzZWQgYmVsb3cgSkxTOAorCSAqIEBzaW5jZSAzLjkg
QkVUQV9KQVZBOAorCSAqLworCXB1YmxpYyBMaXN0IGRpbWVuc2lvbnMoKSB7CisJCS8vIG1vcmUg
ZWZmaWNpZW50IHRoYW4ganVzdCBjYWxsaW5nIHVuc3VwcG9ydGVkSW4yXzNfNCgpIHRvIGNoZWNr
CisJCWlmICh0aGlzLmRpbWVuc2lvbnMgPT0gbnVsbCkgeworCQkJdW5zdXBwb3J0ZWRJbjJfM180
KCk7CisJCX0KKwkJcmV0dXJuIHRoaXMuZGltZW5zaW9uczsKIAl9CiAKIAkvKiAob21pdCBqYXZh
ZG9jIGZvciB0aGlzIG1ldGhvZCkKIAkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KIAkg
Ki8KIAlpbnQgbWVtU2l6ZSgpIHsKLQkJcmV0dXJuIEJBU0VfTk9ERV9TSVpFICsgMiAqIDQ7CisJ
CXJldHVybiBCQVNFX05PREVfU0laRSArIDMgKiA0OwogCX0KIAogCS8qIChvbWl0IGphdmFkb2Mg
Zm9yIHRoaXMgbWV0aG9kKQpAQCAtMjkzLDggKzQyNiw5IEBACiAJaW50IHRyZWVTaXplKCkgewog
CQlyZXR1cm4KIAkJCW1lbVNpemUoKQotCQkJKyAodGhpcy5jb21wb25lbnRUeXBlID09IG51bGwg
PyAwIDogZ2V0Q29tcG9uZW50VHlwZSgpLnRyZWVTaXplKCkpCi0JCQkrICh0aGlzLmFubm90YXRp
b25zID09IG51bGwgPyAwIDogdGhpcy5hbm5vdGF0aW9ucy5saXN0U2l6ZSgpKTsKKwkJCSsgKHRo
aXMuY29tcG9uZW50VHlwZSA9PSBudWxsID8gMCA6IGdldENvbXBvbmVudFR5cGUoKS50cmVlU2l6
ZSgpCisJCQkrICh0aGlzLmRpbWVuc2lvbnMgPT0gbnVsbCA/IDAgOiB0aGlzLmRpbWVuc2lvbnMu
bGlzdFNpemUoKSkKKwkJCSsgKHRoaXMuZWxlbWVudFR5cGUgPT0gbnVsbCA/IDAgOiBnZXRFbGVt
ZW50VHlwZSgpLnRyZWVTaXplKCkpKTsKIAl9CiB9CiAKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vTmFpdmVBU1RG
bGF0dGVuZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQv
aW50ZXJuYWwvY29yZS9kb20vTmFpdmVBU1RGbGF0dGVuZXIuamF2YQppbmRleCBiNzM1ZGVhLi4z
NTc3YjY4IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvcmUvZG9tL05haXZlQVNURmxhdHRlbmVyLmphdmEKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9OYWl2
ZUFTVEZsYXR0ZW5lci5qYXZhCkBAIC0zNzAsMTIgKzM3MCwyNyBAQAogCSAqIEBzZWUgQVNUVmlz
aXRvciN2aXNpdChBcnJheVR5cGUpCiAJICovCiAJcHVibGljIGJvb2xlYW4gdmlzaXQoQXJyYXlU
eXBlIG5vZGUpIHsKLQkJbm9kZS5nZXRDb21wb25lbnRUeXBlKCkuYWNjZXB0KHRoaXMpOwotCQl2
aXNpdFR5cGVBbm5vdGF0aW9ucyhub2RlKTsKLQkJdGhpcy5idWZmZXIuYXBwZW5kKCJbXSIpOy8v
JE5PTi1OTFMtMSQKKwkJaWYgKG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7
CisJCQlnZXRBcnJheVR5cGVDb21wb25lbnRUeXBlKG5vZGUpOworCQkJdGhpcy5idWZmZXIuYXBw
ZW5kKCJbXSIpOy8vJE5PTi1OTFMtMSQKKwkJfSBlbHNlIHsKKwkJCW5vZGUuZ2V0RWxlbWVudFR5
cGUoKS5hY2NlcHQodGhpcyk7CisJCQlMaXN0IGRpbWVuc2lvbnMgPSBub2RlLmRpbWVuc2lvbnMo
KTsKKwkJCWZvciAoaW50IGkgPSAwOyBpIDwgZGltZW5zaW9ucy5zaXplKCkgOyBpKyspIHsKKwkJ
CQlFeHRyYURpbWVuc2lvbiBhRGltZW5zaW9uID0gKEV4dHJhRGltZW5zaW9uKSBkaW1lbnNpb25z
LmdldChpKTsKKwkJCQlhRGltZW5zaW9uLmFjY2VwdCh0aGlzKTsKKwkJCX0KKwkJfQogCQlyZXR1
cm4gZmFsc2U7CiAJfQogCisJLyoqCisJICogQHBhcmFtIG5vZGUgYXJyYXkgCisJICovCisJcHJp
dmF0ZSB2b2lkIGdldEFycmF5VHlwZUNvbXBvbmVudFR5cGUoQXJyYXlUeXBlIG5vZGUpIHsKKwkJ
bm9kZS5nZXRDb21wb25lbnRUeXBlKCkuYWNjZXB0KHRoaXMpOworCX0KKwogCS8qCiAJICogQHNl
ZSBBU1RWaXNpdG9yI3Zpc2l0KEFzc2VydFN0YXRlbWVudCkKIAkgKi8KZGlmZiAtLWdpdCBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20v
cmV3cml0ZS9BU1RSZXdyaXRlQW5hbHl6ZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Rv
bS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9BU1RSZXdyaXRlQW5h
bHl6ZXIuamF2YQppbmRleCA2Y2Y0NGE5Li44YmEzMTFhIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL3Jld3JpdGUv
QVNUUmV3cml0ZUFuYWx5emVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9yZXdyaXRlL0FTVFJld3JpdGVBbmFseXpl
ci5qYXZhCkBAIC0yMDU4LDYgKzIwNTgsNyBAQAogCiAJCVRleHRFZGl0R3JvdXAgZWRpdEdyb3Vw
PSBudWxsOwogCQlSZXdyaXRlRXZlbnQgdHlwZUV2ZW50PSBnZXRFdmVudChub2RlLCBBcnJheUNy
ZWF0aW9uLlRZUEVfUFJPUEVSVFkpOworCQlib29sZWFuIGxldmVsTGVzc1RoYW44ID0gbm9kZS5n
ZXRBU1QoKS5hcGlMZXZlbCgpIDwgQVNULkpMUzggPyB0cnVlIDogZmFsc2U7CiAJCWlmICh0eXBl
RXZlbnQgIT0gbnVsbCAmJiB0eXBlRXZlbnQuZ2V0Q2hhbmdlS2luZCgpID09IFJld3JpdGVFdmVu
dC5SRVBMQUNFRCkgeyAvLyBjaGFuZ2VkIGFycmF5dHlwZSBjYW4gaGF2ZSBkaWZmZXJlbnQgZGlt
ZW5zaW9uIG9yIHR5cGUgbmFtZQogCQkJcmVwbGFjaW5nVHlwZT0gKEFycmF5VHlwZSkgdHlwZUV2
ZW50LmdldE5ld1ZhbHVlKCk7CiAJCQllZGl0R3JvdXA9IGdldEVkaXRHcm91cCh0eXBlRXZlbnQp
OwpAQCAtMjA3NywxNSArMjA3OCwxOCBAQAogCQkJUmV3cml0ZUV2ZW50IGRpbUV2ZW50PSBnZXRF
dmVudChub2RlLCBBcnJheUNyZWF0aW9uLkRJTUVOU0lPTlNfUFJPUEVSVFkpOwogCQkJYm9vbGVh
biBoYXNEaW1lbnNpb25DaGFuZ2VzPSAoZGltRXZlbnQgIT0gbnVsbCAmJiBkaW1FdmVudC5nZXRD
aGFuZ2VLaW5kKCkgIT0gUmV3cml0ZUV2ZW50LlVOQ0hBTkdFRCk7CiAJCQlSZXdyaXRlRXZlbnRb
XSBldmVudHM9IGhhc0RpbWVuc2lvbkNoYW5nZXMgPyBkaW1FdmVudC5nZXRDaGlsZHJlbigpIDog
bnVsbDsKLQkJCUFycmF5VHlwZSBjdXJyZW50TGV2ZWw9IChBcnJheVR5cGUpIHJlcGxhY2luZ1R5
cGUuZ2V0RWxlbWVudFR5cGUoKS5nZXRQYXJlbnQoKTsKKwkJCUFycmF5VHlwZSBjdXJyZW50TGV2
ZWwgPSBsZXZlbExlc3NUaGFuOCA/IChBcnJheVR5cGUpIHJlcGxhY2luZ1R5cGUuZ2V0RWxlbWVu
dFR5cGUoKS5nZXRQYXJlbnQoKSA6IG51bGw7CisJCQlpbnQgY3VycmVudERpbWVuc2lvbiA9IGxl
dmVsTGVzc1RoYW44ID8gLTEgOiAwOworCQkJaW50IHJlcGxhY2luZ1R5cGVEaW1lbnNpb25zID0g
cmVwbGFjaW5nVHlwZS5nZXREaW1lbnNpb25zKCk7CiAJCQlpbnQgaT0wLCBkaW1TaXplPSAoZXZl
bnRzID09IG51bGwpID8gMCA6IGV2ZW50cy5sZW5ndGg7CiAJCQlUeXBlIGVsZW1lbnRUeXBlPSBh
cnJheVR5cGUuZ2V0RWxlbWVudFR5cGUoKTsKIAkJCWludCBvZmZzZXQ9IGVsZW1lbnRUeXBlLmdl
dFN0YXJ0UG9zaXRpb24oKSArIGVsZW1lbnRUeXBlLmdldExlbmd0aCgpOwotCQkJd2hpbGUoY3Vy
cmVudExldmVsICE9IG51bGwpIHsKLQkJCQlpZiAobm9kZS5nZXRBU1QoKS5hcGlMZXZlbCgpID49
IEFTVC5KTFM4KSB7Ci0JCQkJCXJld3JpdGVUeXBlQW5ub3RhdGlvbnMoY3VycmVudExldmVsLCBB
cnJheVR5cGUuQU5OT1RBVElPTlNfUFJPUEVSVFksIG9mZnNldCk7Ci0JCQkJfQorCQkJd2hpbGUo
Y3VycmVudExldmVsICE9IG51bGwgfHwgY3VycmVudERpbWVuc2lvbiAhPSAtMSkgewogCQkJCWlm
IChpIDwgZGltU2l6ZSkgeworCQkJCQlpZiAoIWxldmVsTGVzc1RoYW44KSB7CisJCQkJCQlFeHRy
YURpbWVuc2lvbiBkaW0gPSAoRXh0cmFEaW1lbnNpb24pIHJlcGxhY2luZ1R5cGUuZGltZW5zaW9u
cygpLmdldChpKTsKKwkJCQkJCXJld3JpdGVUeXBlQW5ub3RhdGlvbnMoZGltLCBFeHRyYURpbWVu
c2lvbi5BTk5PVEFUSU9OU19QUk9QRVJUWSwgb2Zmc2V0KTsKKwkJCQkJfQogCQkJCQkgb2Zmc2V0
PSBnZXRTY2FubmVyKCkuZ2V0VG9rZW5FbmRPZmZzZXQoVGVybWluYWxUb2tlbnMuVG9rZW5OYW1l
TEJSQUNLRVQsIG9mZnNldCk7CiAJCQkJCWlmIChoYXNEaW1lbnNpb25DaGFuZ2VzKSB7CiAJCQkJ
CQlSZXdyaXRlRXZlbnQgZXZlbnQ9IGV2ZW50c1tpXTsKQEAgLTIxMjAsMTMgKzIxMjQsMzMgQEAK
IAkJCQkJCW9mZnNldD0gcmV0cmlldmVSaWdodEJyYWNrZXRFbmRQb3NpdGlvbihvZmZzZXQsIDEs
IHRydWUpOwogCQkJCQl9CiAJCQkJfSBlbHNlIGlmIChpIDwgbk9sZEJyYWNrZXRzKSB7CisJCQkJ
CWlmICghbGV2ZWxMZXNzVGhhbjgpIHsKKwkJCQkJCUV4dHJhRGltZW5zaW9uIGRpbSA9IChFeHRy
YURpbWVuc2lvbikgcmVwbGFjaW5nVHlwZS5kaW1lbnNpb25zKCkuZ2V0KGkpOworCQkJCQkJcmV3
cml0ZVR5cGVBbm5vdGF0aW9ucyhkaW0sIEV4dHJhRGltZW5zaW9uLkFOTk9UQVRJT05TX1BST1BF
UlRZLCBvZmZzZXQpOworCQkJCQl9CiAJCQkJCW9mZnNldD0gcmV0cmlldmVSaWdodEJyYWNrZXRF
bmRQb3NpdGlvbihvZmZzZXQsIDEsIGZhbHNlKTsKIAkJCQl9IGVsc2UgeworCQkJCQlpZiAoIWxl
dmVsTGVzc1RoYW44KSB7CisJCQkJCQlFeHRyYURpbWVuc2lvbiBkaW0gPSAoRXh0cmFEaW1lbnNp
b24pIHJlcGxhY2luZ1R5cGUuZGltZW5zaW9ucygpLmdldChpKTsKKwkJCQkJCUxpc3QgYW5ub3Rh
dGlvbnMgPSBkaW0uYW5ub3RhdGlvbnMoKTsKKwkJCQkJCWlmIChhbm5vdGF0aW9ucyAhPSBudWxs
KSB7CisJCQkJCQkJZm9yIChpbnQgaiA9IDA7IGogPCBhbm5vdGF0aW9ucy5zaXplKCk7IGorKykg
eworCQkJCQkJCQlBbm5vdGF0aW9uIGFubm90YXRpb24gPSAoQW5ub3RhdGlvbikgYW5ub3RhdGlv
bnMuZ2V0KGopOworCQkJCQkJCQlkb1RleHRJbnNlcnQob2Zmc2V0LCBhbm5vdGF0aW9uLnRvU3Ry
aW5nKCkgKyAiICIsIGVkaXRHcm91cCk7IC8vJE5PTi1OTFMtMSQKKwkJCQkJCQl9CisJCQkJCQkJ
CisJCQkJCQl9CisJCQkJCX0KIAkJCQkJZG9UZXh0SW5zZXJ0KG9mZnNldCwgIltdIiwgZWRpdEdy
b3VwKTsgLy8kTk9OLU5MUy0xJAogCQkJCX0KIAkJCQlpKys7Ci0JCQkJaWYgKGN1cnJlbnRMZXZl
bCA9PSByZXBsYWNpbmdUeXBlKSBicmVhazsKLQkJCQljdXJyZW50TGV2ZWw9IChBcnJheVR5cGUp
IGN1cnJlbnRMZXZlbC5nZXRQYXJlbnQoKTsKKwkJCQlpZiAobGV2ZWxMZXNzVGhhbjgpIHsKKwkJ
CQkJaWYgKGN1cnJlbnRMZXZlbCA9PSByZXBsYWNpbmdUeXBlKSBicmVhazsKKwkJCQkJY3VycmVu
dExldmVsPSAoQXJyYXlUeXBlKSBjdXJyZW50TGV2ZWwuZ2V0UGFyZW50KCk7CisJCQkJfSBlbHNl
IHsKKwkJCQkJKytjdXJyZW50RGltZW5zaW9uOworCQkJCQlpZiAoY3VycmVudERpbWVuc2lvbiA9
PSByZXBsYWNpbmdUeXBlRGltZW5zaW9ucykgYnJlYWs7CisJCQkJfQogCQkJfQogCQkJaWYgKGkg
PCBuT2xkQnJhY2tldHMpIHsKIAkJCQlpbnQgZW5kUG9zPSByZXRyaWV2ZVJpZ2h0QnJhY2tldEVu
ZFBvc2l0aW9uKG9mZnNldCwgbk9sZEJyYWNrZXRzIC0gaSwgZmFsc2UpOwpAQCAtMjE3NSwyMSAr
MjE5OSwyOSBAQAogCX0KIAogCXByaXZhdGUgVHlwZSBnZXRFbGVtZW50VHlwZShBcnJheVR5cGUg
cGFyZW50KSB7Ci0JCVR5cGUgdCA9IChUeXBlKSBnZXRPcmlnaW5hbFZhbHVlKHBhcmVudCwgQXJy
YXlUeXBlLkNPTVBPTkVOVF9UWVBFX1BST1BFUlRZKTsKLQkJd2hpbGUgKHQuaXNBcnJheVR5cGUo
KSkgewotCQkJdCA9IChUeXBlKSBnZXRPcmlnaW5hbFZhbHVlKHQsIEFycmF5VHlwZS5DT01QT05F
TlRfVFlQRV9QUk9QRVJUWSk7CisJCWlmIChwYXJlbnQuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA8IEFT
VC5KTFM4KSB7CisJCQlUeXBlIHQgPSAoVHlwZSkgZ2V0T3JpZ2luYWxWYWx1ZShwYXJlbnQsIEFy
cmF5VHlwZS5DT01QT05FTlRfVFlQRV9QUk9QRVJUWSk7CisJCQl3aGlsZSAodC5pc0FycmF5VHlw
ZSgpKSB7CisJCQkJdCA9IChUeXBlKSBnZXRPcmlnaW5hbFZhbHVlKHQsIEFycmF5VHlwZS5DT01Q
T05FTlRfVFlQRV9QUk9QRVJUWSk7CisJCQl9CisJCQlyZXR1cm4gdDsKIAkJfQorCQlUeXBlIHQg
PSAoVHlwZSkgZ2V0T3JpZ2luYWxWYWx1ZShwYXJlbnQsIEFycmF5VHlwZS5FTEVNRU5UX1RZUEVf
UFJPUEVSVFkpOwogCQlyZXR1cm4gdDsKIAl9CiAKIAlwcml2YXRlIGludCBnZXREaW1lbnNpb25z
KEFycmF5VHlwZSBwYXJlbnQpIHsKLQkJVHlwZSB0ID0gKFR5cGUpIGdldE9yaWdpbmFsVmFsdWUo
cGFyZW50LCBBcnJheVR5cGUuQ09NUE9ORU5UX1RZUEVfUFJPUEVSVFkpOwotCQlpbnQgZGltZW5z
aW9ucyA9IDE7IC8vIGFsd2F5cyBpbmNsdWRlIHRoaXMgYXJyYXkgdHlwZQotCQl3aGlsZSAodC5p
c0FycmF5VHlwZSgpKSB7Ci0JCQlkaW1lbnNpb25zKys7Ci0JCQl0ID0gKFR5cGUpIGdldE9yaWdp
bmFsVmFsdWUodCwgQXJyYXlUeXBlLkNPTVBPTkVOVF9UWVBFX1BST1BFUlRZKTsKKwkJaWYgKHBh
cmVudC5nZXRBU1QoKS5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsKKwkJCVR5cGUgdCA9IChUeXBl
KSBnZXRPcmlnaW5hbFZhbHVlKHBhcmVudCwgQXJyYXlUeXBlLkNPTVBPTkVOVF9UWVBFX1BST1BF
UlRZKTsKKwkJCWludCBkaW1lbnNpb25zID0gMTsgLy8gYWx3YXlzIGluY2x1ZGUgdGhpcyBhcnJh
eSB0eXBlCisJCQl3aGlsZSAodC5pc0FycmF5VHlwZSgpKSB7CisJCQkJZGltZW5zaW9ucysrOwor
CQkJCXQgPSAoVHlwZSkgZ2V0T3JpZ2luYWxWYWx1ZSh0LCBBcnJheVR5cGUuQ09NUE9ORU5UX1RZ
UEVfUFJPUEVSVFkpOworCQkJfQorCQkJcmV0dXJuIGRpbWVuc2lvbnM7CiAJCX0KLQkJcmV0dXJu
IGRpbWVuc2lvbnM7CisJCUxpc3QgZGltZW5zaW9ucyA9IChMaXN0KSBnZXRPcmlnaW5hbFZhbHVl
KHBhcmVudCwgQXJyYXlUeXBlLkRJTUVOU0lPTlNfUFJPUEVSVFkpOworCQlyZXR1cm4gZGltZW5z
aW9ucy5zaXplKCk7CiAJfQogCiAJLyogKG5vbi1KYXZhZG9jKQpAQCAtMjIxNCw5ICsyMjQ2LDEy
IEBACiAJCWlmICghaGFzQ2hpbGRyZW5DaGFuZ2VzKG5vZGUpKSB7CiAJCQlyZXR1cm4gZG9WaXNp
dFVuY2hhbmdlZENoaWxkcmVuKG5vZGUpOwogCQl9Ci0JCWludCBwb3MgPSByZXdyaXRlUmVxdWly
ZWROb2RlKG5vZGUsIEFycmF5VHlwZS5DT01QT05FTlRfVFlQRV9QUk9QRVJUWSk7Ci0JCWlmIChu
b2RlLmdldEFTVCgpLmFwaUxldmVsKCkgPj0gQVNULkpMUzgpIHsKLQkJCXJld3JpdGVUeXBlQW5u
b3RhdGlvbnMobm9kZSwgQXJyYXlUeXBlLkFOTk9UQVRJT05TX1BST1BFUlRZLCBwb3MpOworCQlp
ZiAobm9kZS5nZXRBU1QoKS5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsKKwkJCXJld3JpdGVSZXF1
aXJlZE5vZGUobm9kZSwgQXJyYXlUeXBlLkNPTVBPTkVOVF9UWVBFX1BST1BFUlRZKTsKKwkJfSBl
bHNlIHsKKwkJCXJld3JpdGVSZXF1aXJlZE5vZGUobm9kZSwgQXJyYXlUeXBlLkVMRU1FTlRfVFlQ
RV9QUk9QRVJUWSk7CisJCQlpbnQgcG9zID0gKChFeHRyYURpbWVuc2lvbikgbm9kZS5kaW1lbnNp
b25zKCkuZ2V0KDApKS5nZXRTdGFydFBvc2l0aW9uKCk7CisJCQlyZXdyaXRlTm9kZUxpc3Qobm9k
ZSwgQXJyYXlUeXBlLkRJTUVOU0lPTlNfUFJPUEVSVFksIHBvcywgVXRpbC5FTVBUWV9TVFJJTkcs
IFV0aWwuRU1QVFlfU1RSSU5HKTsKIAkJfQogCQlyZXR1cm4gZmFsc2U7CiAJfQpkaWZmIC0tZ2l0
IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3Jl
L2RvbS9yZXdyaXRlL0FTVFJld3JpdGVGbGF0dGVuZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9BU1RSZXdy
aXRlRmxhdHRlbmVyLmphdmEKaW5kZXggMjBmNjZlMy4uNTJhY2YzNCAxMDA2NDQKLS0tIGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9y
ZXdyaXRlL0FTVFJld3JpdGVGbGF0dGVuZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL3Jld3JpdGUvQVNUUmV3cml0
ZUZsYXR0ZW5lci5qYXZhCkBAIC0yMzYsMjIgKzIzNiwzMCBAQAogCQlBcnJheVR5cGUgYXJyYXlU
eXBlPSAoQXJyYXlUeXBlKSBnZXRDaGlsZE5vZGUobm9kZSwgQXJyYXlDcmVhdGlvbi5UWVBFX1BS
T1BFUlRZKTsKIAogCQkvLyBnZXQgdGhlIGVsZW1lbnQgdHlwZSBhbmQgY291bnQgZGltZW5zaW9u
cwotCQlUeXBlIGVsZW1lbnRUeXBlPSAoVHlwZSkgZ2V0Q2hpbGROb2RlKGFycmF5VHlwZSwgQXJy
YXlUeXBlLkNPTVBPTkVOVF9UWVBFX1BST1BFUlRZKTsKLQkJaW50IGRpbWVuc2lvbnM9IDE7IC8v
IGFsd2F5cyBpbmNsdWRlIHRoaXMgYXJyYXkgdHlwZQotCQl3aGlsZSAoZWxlbWVudFR5cGUuaXNB
cnJheVR5cGUoKSkgewotCQkJZGltZW5zaW9ucysrOwotCQkJZWxlbWVudFR5cGUgPSAoVHlwZSkg
Z2V0Q2hpbGROb2RlKGVsZW1lbnRUeXBlLCBBcnJheVR5cGUuQ09NUE9ORU5UX1RZUEVfUFJPUEVS
VFkpOworCQlUeXBlIGVsZW1lbnRUeXBlOworCQlpbnQgZGltZW5zaW9uczsKKwkJaWYgKG5vZGUu
Z2V0QVNUKCkuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQllbGVtZW50VHlwZSA9IChUeXBl
KSBnZXRDaGlsZE5vZGUoYXJyYXlUeXBlLCBBcnJheVR5cGUuQ09NUE9ORU5UX1RZUEVfUFJPUEVS
VFkpOworCQkJZGltZW5zaW9ucyA9IDE7IC8vIGFsd2F5cyBpbmNsdWRlIHRoaXMgYXJyYXkgdHlw
ZQorCQkJd2hpbGUgKGVsZW1lbnRUeXBlLmlzQXJyYXlUeXBlKCkpIHsKKwkJCQlkaW1lbnNpb25z
Kys7CisJCQkJZWxlbWVudFR5cGUgPSAoVHlwZSkgZ2V0Q2hpbGROb2RlKGVsZW1lbnRUeXBlLCBB
cnJheVR5cGUuQ09NUE9ORU5UX1RZUEVfUFJPUEVSVFkpOworCQkJfQorCQl9IGVsc2UgeworCQkJ
ZWxlbWVudFR5cGUgPSAoVHlwZSkgZ2V0Q2hpbGROb2RlKGFycmF5VHlwZSwgQXJyYXlUeXBlLkVM
RU1FTlRfVFlQRV9QUk9QRVJUWSk7CisJCQlkaW1lbnNpb25zID0gYXJyYXlUeXBlLmdldERpbWVu
c2lvbnMoKTsKIAkJfQogCiAJCWVsZW1lbnRUeXBlLmFjY2VwdCh0aGlzKTsKIAogCQkvLyBhZGQg
Ijxhbm5vdGF0aW9ucz4gWyA8ZGltZW5zaW9uPiBdIiBmb3IgZWFjaCBkaW1lbnNpb24gZXhwcmVz
c2lvbgotCQlUeXBlIHR5cGU9IGFycmF5VHlwZTsKIAkJTGlzdCBsaXN0PSBnZXRDaGlsZExpc3Qo
bm9kZSwgQXJyYXlDcmVhdGlvbi5ESU1FTlNJT05TX1BST1BFUlRZKTsKLQkJZm9yIChpbnQgaT0g
MDsgaSA8IGxpc3Quc2l6ZSgpOyBpKyspIHsKLQkJCWlmIChub2RlLmdldEFTVCgpLmFwaUxldmVs
KCkgPj0gQVNULkpMUzggJiYgdHlwZSBpbnN0YW5jZW9mIEFycmF5VHlwZSkgewotCQkJCXZpc2l0
TGlzdCh0eXBlLCBBcnJheVR5cGUuQU5OT1RBVElPTlNfUFJPUEVSVFksIFN0cmluZy52YWx1ZU9m
KCcgJyksIFV0aWwuRU1QVFlfU1RSSU5HLCBTdHJpbmcudmFsdWVPZignICcpKTsKLQkJCQl0eXBl
ID0gKFR5cGUpIGdldENoaWxkTm9kZSh0eXBlLCBBcnJheVR5cGUuQ09NUE9ORU5UX1RZUEVfUFJP
UEVSVFkpOworCQktLWRpbWVuc2lvbnM7CisJCWludCBpOworCQlmb3IgKGk9IDA7IGkgPCBsaXN0
LnNpemUoKTsgaSsrKSB7CisJCQlpZiAobm9kZS5nZXRBU1QoKS5hcGlMZXZlbCgpID49IEFTVC5K
TFM4KSB7CisJCQkJRXh0cmFEaW1lbnNpb24gZXh0cmFEaW1lbnNpb24gPSAoRXh0cmFEaW1lbnNp
b24pIGFycmF5VHlwZS5kaW1lbnNpb25zKCkuZ2V0KGkpOworCQkJCXZpc2l0TGlzdChleHRyYURp
bWVuc2lvbiwgRXh0cmFEaW1lbnNpb24uQU5OT1RBVElPTlNfUFJPUEVSVFksIFN0cmluZy52YWx1
ZU9mKCcgJyksIFN0cmluZy52YWx1ZU9mKCcgJyksIFV0aWwuRU1QVFlfU1RSSU5HKTsKIAkJCX0K
IAkJCXRoaXMucmVzdWx0LmFwcGVuZCgnWycpOwogCQkJKChBU1ROb2RlKSBsaXN0LmdldChpKSku
YWNjZXB0KHRoaXMpOwpAQCAtMjYwLDEyICsyNjgsMTMgQEAKIAkJfQogCiAJCS8vIGFkZCAiPGFu
bm90YXRpb25zPiBbXSIgZm9yIGVhY2ggZXh0cmEgYXJyYXkgZGltZW5zaW9uCi0JCWZvciAoaW50
IGk9IDA7IGkgPCBkaW1lbnNpb25zOyBpKyspIHsKLQkJCWlmIChub2RlLmdldEFTVCgpLmFwaUxl
dmVsKCkgPj0gQVNULkpMUzggJiYgdHlwZSBpbnN0YW5jZW9mIEFycmF5VHlwZSkgewotCQkJCXZp
c2l0TGlzdCh0eXBlLCBBcnJheVR5cGUuQU5OT1RBVElPTlNfUFJPUEVSVFksIFN0cmluZy52YWx1
ZU9mKCcgJyksIFV0aWwuRU1QVFlfU1RSSU5HLCBTdHJpbmcudmFsdWVPZignICcpKTsKLQkJCQl0
eXBlID0gKFR5cGUpIGdldENoaWxkTm9kZSh0eXBlLCBBcnJheVR5cGUuQ09NUE9ORU5UX1RZUEVf
UFJPUEVSVFkpOworCQl3aGlsZSAoZGltZW5zaW9ucyA+PSAwKSB7CisJCQlpZiAobm9kZS5nZXRB
U1QoKS5hcGlMZXZlbCgpID49IEFTVC5KTFM4KSB7CisJCQkJRXh0cmFEaW1lbnNpb24gZXh0cmFE
aW1lbnNpb24gPSAoRXh0cmFEaW1lbnNpb24pIGFycmF5VHlwZS5kaW1lbnNpb25zKCkuZ2V0KGkp
OworCQkJCXZpc2l0TGlzdChleHRyYURpbWVuc2lvbiwgRXh0cmFEaW1lbnNpb24uQU5OT1RBVElP
TlNfUFJPUEVSVFksIFN0cmluZy52YWx1ZU9mKCcgJyksIFV0aWwuRU1QVFlfU1RSSU5HLCBTdHJp
bmcudmFsdWVPZignICcpKTsKIAkJCX0KIAkJCXRoaXMucmVzdWx0LmFwcGVuZCgiW10iKTsgLy8k
Tk9OLU5MUy0xJAorCQkJLS1kaW1lbnNpb25zOwogCQl9CiAKIAkJQVNUTm9kZSBpbml0aWFsaXpl
cj0gZ2V0Q2hpbGROb2RlKG5vZGUsIEFycmF5Q3JlYXRpb24uSU5JVElBTElaRVJfUFJPUEVSVFkp
OwpAQCAtMjg5LDExICsyOTgsMTMgQEAKIAkgKiBAc2VlIEFTVFZpc2l0b3IjdmlzaXQoQXJyYXlU
eXBlKQogCSAqLwogCXB1YmxpYyBib29sZWFuIHZpc2l0KEFycmF5VHlwZSBub2RlKSB7Ci0JCWdl
dENoaWxkTm9kZShub2RlLCBBcnJheVR5cGUuQ09NUE9ORU5UX1RZUEVfUFJPUEVSVFkpLmFjY2Vw
dCh0aGlzKTsKLQkJaWYgKG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA+PSBBU1QuSkxTOCkgewot
CQkJdmlzaXRMaXN0KG5vZGUsIEFycmF5VHlwZS5BTk5PVEFUSU9OU19QUk9QRVJUWSwgU3RyaW5n
LnZhbHVlT2YoJyAnKSwgVXRpbC5FTVBUWV9TVFJJTkcsIFN0cmluZy52YWx1ZU9mKCcgJykpOwor
CQlpZiAobm9kZS5nZXRBU1QoKS5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsKKwkJCWdldENoaWxk
Tm9kZShub2RlLCBBcnJheVR5cGUuQ09NUE9ORU5UX1RZUEVfUFJPUEVSVFkpLmFjY2VwdCh0aGlz
KTsKKwkJCXRoaXMucmVzdWx0LmFwcGVuZCgiW10iKTsgLy8kTk9OLU5MUy0xJAorCQl9IGVsc2Ug
eworCQkJZ2V0Q2hpbGROb2RlKG5vZGUsIEFycmF5VHlwZS5FTEVNRU5UX1RZUEVfUFJPUEVSVFkp
LmFjY2VwdCh0aGlzKTsKKwkJCXZpc2l0TGlzdChub2RlLCBBcnJheVR5cGUuRElNRU5TSU9OU19Q
Uk9QRVJUWSwgU3RyaW5nLnZhbHVlT2YoJyAnKSwgVXRpbC5FTVBUWV9TVFJJTkcsIFN0cmluZy52
YWx1ZU9mKCcgJykpOwogCQl9Ci0JCXRoaXMucmVzdWx0LmFwcGVuZCgiW10iKTsgLy8kTk9OLU5M
Uy0xJAogCQlyZXR1cm4gZmFsc2U7CiAJfQog
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>235650</attachid>
            <date>2013-09-20 04:22:00 -0400</date>
            <delta_ts>2013-09-20 12:37:26 -0400</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Fix-for-Bug-413569-18dom-ast-AST-for-annotated-multi.patch</filename>
            <type>text/plain</type>
            <size>100905</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMTVKTFM4VGVzdC5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2RvbS9BU1RDb252ZXJ0ZXIxNUpMUzhUZXN0LmphdmEKaW5kZXggZjRiMTUyOC4uZTJjNDQw
NCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxNUpMUzhUZXN0LmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxNUpMUzhUZXN0LmphdmEKQEAgLTEsNSArMSw1IEBA
CiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDExLCAyMDEyIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDExLCAyMDEzIElC
TSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBw
cm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZhaWxh
YmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wCiAg
KiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBh
dApAQCAtMTcwOCw3ICsxNzA4LDcgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiU3RyaW5n
W10iLCBzb3VyY2UpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNB
cnJheVR5cGUoKSk7CiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwot
CQljaGVja1NvdXJjZVJhbmdlKGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCksICJTdHJpbmci
LCBzb3VyY2UpOworCQljaGVja1NvdXJjZVJhbmdlKGFycmF5VHlwZS5nZXRFbGVtZW50VHlwZSgp
LCAiU3RyaW5nIiwgc291cmNlKTsKIAkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBleHRyYSBkaW1lbnNp
b25zIiwgMSwgc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbi5nZXRFeHRyYURpbWVuc2lvbnMoKSk7
CiAJfQogCkBAIC0xNzM2LDcgKzE3MzYsNyBAQAogCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJT
dHJpbmdbXSIsIHNvdXJjZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgdHlw
ZS5pc0FycmF5VHlwZSgpKTsKIAkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5
cGU7Ci0JCWNoZWNrU291cmNlUmFuZ2UoYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKSwgIlN0
cmluZyIsIHNvdXJjZSk7CisJCWNoZWNrU291cmNlUmFuZ2UoYXJyYXlUeXBlLmdldEVsZW1lbnRU
eXBlKCksICJTdHJpbmciLCBzb3VyY2UpOwogCQlhc3NlcnRFcXVhbHMoIldyb25nIGV4dHJhIGRp
bWVuc2lvbnMiLCAwLCBzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLmdldEV4dHJhRGltZW5zaW9u
cygpKTsKIAl9CiAJLyoqCkBAIC0yNDI3LDEyICsyNDI3LDkgQEAKIAkJY2hlY2tTb3VyY2VSYW5n
ZSh0eXBlLCAiTWFwPFN0cmluZywgRG91YmxlPltdW10iLCBzb3VyY2UpOwogCQlhc3NlcnRFcXVh
bHMoIndyb25nIHR5cGUiLCBBU1ROb2RlLkFSUkFZX1RZUEUsIHR5cGUuZ2V0Tm9kZVR5cGUoKSk7
CiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQl0eXBlID0gYXJy
YXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiTWFw
PFN0cmluZywgRG91YmxlPltdIiwgc291cmNlKTsKLQkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBl
IiwgQVNUTm9kZS5BUlJBWV9UWVBFLCB0eXBlLmdldE5vZGVUeXBlKCkpOwotCQlhcnJheVR5cGUg
PSAoQXJyYXlUeXBlKSB0eXBlOwotCQl0eXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUo
KTsKKwkJdHlwZSA9IGFycmF5VHlwZS5nZXRFbGVtZW50VHlwZSgpOwogCQljaGVja1NvdXJjZVJh
bmdlKHR5cGUsICJNYXA8U3RyaW5nLCBEb3VibGU+Iiwgc291cmNlKTsKKwkJYXNzZXJ0RXF1YWxz
KCJ3cm9uZyB0eXBlIiwgQVNUTm9kZS5QQVJBTUVURVJJWkVEX1RZUEUsIHR5cGUuZ2V0Tm9kZVR5
cGUoKSk7CiAJfQogCiAJLyoKQEAgLTI0NTQsMTIgKzI0NTEsOSBAQAogCQljaGVja1NvdXJjZVJh
bmdlKHR5cGUsICJqYXZhLnV0aWwuTWFwPFN0cmluZywgRG91YmxlPltdW10iLCBzb3VyY2UpOwog
CQlhc3NlcnRFcXVhbHMoIndyb25nIHR5cGUiLCBBU1ROb2RlLkFSUkFZX1RZUEUsIHR5cGUuZ2V0
Tm9kZVR5cGUoKSk7CiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwot
CQl0eXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJY2hlY2tTb3VyY2VSYW5n
ZSh0eXBlLCAiamF2YS51dGlsLk1hcDxTdHJpbmcsIERvdWJsZT5bXSIsIHNvdXJjZSk7Ci0JCWFz
c2VydEVxdWFscygid3JvbmcgdHlwZSIsIEFTVE5vZGUuQVJSQVlfVFlQRSwgdHlwZS5nZXROb2Rl
VHlwZSgpKTsKLQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJdHlwZSA9IGFycmF5
VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCXR5cGUgPSBhcnJheVR5cGUuZ2V0RWxlbWVudFR5
cGUoKTsKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiamF2YS51dGlsLk1hcDxTdHJpbmcsIERv
dWJsZT4iLCBzb3VyY2UpOworCQlhc3NlcnRFcXVhbHMoIndyb25nIHR5cGUiLCBBU1ROb2RlLlBB
UkFNRVRFUklaRURfVFlQRSwgdHlwZS5nZXROb2RlVHlwZSgpKTsKIAl9CiAKIAkvKgpAQCAtNDEx
OCw3ICs0MTEyLDcgQEAKICAgICAJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBkaW1lbnNpb25zIiwgMSwg
dHlwZUJpbmRpbmcuZ2V0RGltZW5zaW9ucygpKTsKICAgICAJQXJyYXlUeXBlIGFycmF5VHlwZSA9
IChBcnJheVR5cGUpIHR5cGU7CiAgICAgCWFzc2VydEVxdWFscygiV3JvbmcgZGltZW5zaW9uIiwg
MSwgYXJyYXlUeXBlLmdldERpbWVuc2lvbnMoKSk7Ci0gICAgCXR5cGUgPSBhcnJheVR5cGUuZ2V0
Q29tcG9uZW50VHlwZSgpOworICAgIAl0eXBlID0gYXJyYXlUeXBlLmdldEVsZW1lbnRUeXBlKCk7
CiAgICAgCWFzc2VydFRydWUoIk5vdCBhIHNpbXBsZSB0eXBlIiwgdHlwZS5pc1NpbXBsZVR5cGUo
KSk7CiAgICAgCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIlN0cmluZyIsIGNvbnRlbnRzKTsKICAg
ICAJYXNzZXJ0RXF1YWxzKCJXcm9uZyBleHRyYSBkaW1lbnNpb24iLCAxLCBzaW5nbGVWYXJpYWJs
ZURlY2xhcmF0aW9uLmdldEV4dHJhRGltZW5zaW9ucygpKTsKQEAgLTQ1MDIsNyArNDQ5Niw3IEBA
CiAgICAgCWFzc2VydEVxdWFscygid3JvbmcgZGltZW5zaW9ucyIsIDEsIHR5cGVCaW5kaW5nLmdl
dERpbWVuc2lvbnMoKSk7CiAgICAgCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0
eXBlOwogICAgIAlhc3NlcnRFcXVhbHMoIldyb25nIGRpbWVuc2lvbiIsIDEsIGFycmF5VHlwZS5n
ZXREaW1lbnNpb25zKCkpOwotICAgIAl0eXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUo
KTsKKyAgICAJdHlwZSA9IGFycmF5VHlwZS5nZXRFbGVtZW50VHlwZSgpOwogICAgIAlhc3NlcnRU
cnVlKCJOb3QgYSBzaW1wbGUgdHlwZSIsIHR5cGUuaXNTaW1wbGVUeXBlKCkpOwogICAgIAljaGVj
a1NvdXJjZVJhbmdlKHR5cGUsICJTdHJpbmciLCBjb250ZW50cyk7CiAgICAgCWFzc2VydEVxdWFs
cygiV3JvbmcgZXh0cmEgZGltZW5zaW9uIiwgMCwgc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbi5n
ZXRFeHRyYURpbWVuc2lvbnMoKSk7CkBAIC0xMTE4Niw3ICsxMTE4MCw3IEBACiAJCUlUeXBlQmlu
ZGluZyBiaW5kaW5nID0gdHlwZS5yZXNvbHZlQmluZGluZygpOwogCQlhc3NlcnROb3ROdWxsKCJO
byBiaW5kaW5nIiwgYmluZGluZyk7CiAJCWFzc2VydEVxdWFscygiV3JvbmcgcXVhbGlmaWVkIG5h
bWUiLCAidGVzdDAzNDcuT3V0ZXI8amF2YS5sYW5nLkludGVnZXI+LklubmVyPGphdmEubGFuZy5E
b3VibGU+W10iLCBiaW5kaW5nLmdldFF1YWxpZmllZE5hbWUoKSk7Ci0JCVR5cGUgY29tcG9uZW50
VHlwZSA9IHR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlUeXBlIGNvbXBvbmVudFR5cGUgPSB0
eXBlLmdldEVsZW1lbnRUeXBlKCk7CiAJCWJpbmRpbmcgPSBjb21wb25lbnRUeXBlLnJlc29sdmVC
aW5kaW5nKCk7CiAJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsKIAkJYXNz
ZXJ0RXF1YWxzKCJXcm9uZyBxdWFsaWZpZWQgbmFtZSIsICJ0ZXN0MDM0Ny5PdXRlcjxqYXZhLmxh
bmcuSW50ZWdlcj4uSW5uZXI8amF2YS5sYW5nLkRvdWJsZT4iLCBiaW5kaW5nLmdldFF1YWxpZmll
ZE5hbWUoKSk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZh
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YQppbmRleCBkZTI4MzYwLi44MjZk
NDQ2IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZhCisrKyBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0LmphdmEKQEAgLTI3MywxMyArMjczLDEzIEBA
CiAJCUlUeXBlQmluZGluZyBiaW5kaW5nID0gdHlwZS5yZXNvbHZlQmluZGluZygpOwogCQlhc3Nl
cnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7CiAJCWFzc2VydEVxdWFscygiV3Jvbmcg
cXVhbGlmaWVkIG5hbWUiLCAidGVzdDAwMDQuT3V0ZXI8amF2YS5sYW5nLkludGVnZXI+LklubmVy
PGphdmEubGFuZy5Eb3VibGU+W10iLCBiaW5kaW5nLmdldFF1YWxpZmllZE5hbWUoKSk7Ci0JCVR5
cGUgY29tcG9uZW50VHlwZSA9IHR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQliaW5kaW5nID0g
Y29tcG9uZW50VHlwZS5yZXNvbHZlQmluZGluZygpOworCQlUeXBlIGVsZW1lbnRUeXBlID0gdHlw
ZS5nZXRFbGVtZW50VHlwZSgpOworCQliaW5kaW5nID0gZWxlbWVudFR5cGUucmVzb2x2ZUJpbmRp
bmcoKTsKIAkJYXNzZXJ0Tm90TnVsbCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOwogCQlhc3NlcnRF
cXVhbHMoIldyb25nIHF1YWxpZmllZCBuYW1lIiwKIAkJCQkidGVzdDAwMDQuT3V0ZXI8amF2YS5s
YW5nLkludGVnZXI+LklubmVyPGphdmEubGFuZy5Eb3VibGU+IiwgYmluZGluZy5nZXRRdWFsaWZp
ZWROYW1lKCkpOwotCQlhc3NlcnRUcnVlKCJOb3QgcGFyYW1ldGVyaXplZCIsIGNvbXBvbmVudFR5
cGUuaXNQYXJhbWV0ZXJpemVkVHlwZSgpKTsKLQkJUGFyYW1ldGVyaXplZFR5cGUgcGFyYW1ldGVy
aXplZFR5cGUgPSAoUGFyYW1ldGVyaXplZFR5cGUpIGNvbXBvbmVudFR5cGU7CisJCWFzc2VydFRy
dWUoIk5vdCBwYXJhbWV0ZXJpemVkIiwgZWxlbWVudFR5cGUuaXNQYXJhbWV0ZXJpemVkVHlwZSgp
KTsKKwkJUGFyYW1ldGVyaXplZFR5cGUgcGFyYW1ldGVyaXplZFR5cGUgPSAoUGFyYW1ldGVyaXpl
ZFR5cGUpIGVsZW1lbnRUeXBlOwogCQlUeXBlIHR5cGUyID0gcGFyYW1ldGVyaXplZFR5cGUuZ2V0
VHlwZSgpOwogCQlhc3NlcnRUcnVlKCJOb3QgcXVhbGlmaWVkIiwgdHlwZTIuaXNRdWFsaWZpZWRU
eXBlKCkpOwogCQlRdWFsaWZpZWRUeXBlIHF1YWxpZmllZFR5cGUgPSAoUXVhbGlmaWVkVHlwZSkg
dHlwZTI7CkBAIC0xMTM5LDEzICsxMTM5LDEyIEBACiAJCVR5cGUgdHlwZSA9IGNyZWF0aW9uLmdl
dFR5cGUoKTsKIAkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgdHlwZSIsIHRydWUsIHR5cGUuaXNB
cnJheVR5cGUoKSk7CiAJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIkBNYXJrZXIyIGludCBATWFy
a2VyIEBNYXJrZXIyIFsyXSBATWFya2VyMiBATWFya2VyMyBbYmFyKCldIEBNYXJrZXIzIEBNYXJr
ZXIgW10iLCBjb250ZW50cy50b0NoYXJBcnJheSgpKTsKLQkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJl
Y3QgYW5ub3RhdGlvbnMiLCAiQE1hcmtlcjMgQE1hcmtlciAiLCBjb252ZXJ0QW5ub3RhdGlvbnNM
aXN0KCgoQXJyYXlUeXBlKSB0eXBlKS5hbm5vdGF0aW9ucygpKSk7Ci0JCXR5cGUgPSAoKEFycmF5
VHlwZSkgdHlwZSkuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlhc3NlcnRFcXVhbHMoIkluY29ycmVj
dCB0eXBlIiwgdHJ1ZSwgdHlwZS5pc0FycmF5VHlwZSgpKTsKLQkJYXNzZXJ0RXF1YWxzKCJJbmNv
cnJlY3QgYW5ub3RhdGlvbnMiLCAiQE1hcmtlcjIgQE1hcmtlcjMgIiwgY29udmVydEFubm90YXRp
b25zTGlzdCgoKEFycmF5VHlwZSkgdHlwZSkuYW5ub3RhdGlvbnMoKSkpOwotCQl0eXBlID0gKChB
cnJheVR5cGUpIHR5cGUpLmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNzZXJ0RXF1YWxzKCJJbmNv
cnJlY3QgdHlwZSIsIHRydWUsIHR5cGUuaXNBcnJheVR5cGUoKSk7Ci0JCWFzc2VydEVxdWFscygi
SW5jb3JyZWN0IGFubm90YXRpb25zIiwgIkBNYXJrZXIgQE1hcmtlcjIgIiwgY29udmVydEFubm90
YXRpb25zTGlzdCgoKEFycmF5VHlwZSkgdHlwZSkuYW5ub3RhdGlvbnMoKSkpOworCQlFeHRyYURp
bWVuc2lvbiBleHRyYURpbWVuc2lvbiA9ICgoQXJyYXlUeXBlKSB0eXBlKS5nZXREaW1lbnNpb25O
bygwKTsKKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgYW5ub3RhdGlvbnMiLCAiQE1hcmtlcjMg
QE1hcmtlciAiLCBjb252ZXJ0QW5ub3RhdGlvbnNMaXN0KGV4dHJhRGltZW5zaW9uLmFubm90YXRp
b25zKCkpKTsKKwkJZXh0cmFEaW1lbnNpb24gPSAoKEFycmF5VHlwZSkgdHlwZSkuZ2V0RGltZW5z
aW9uTm8oMSk7CisJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IGFubm90YXRpb25zIiwgIkBNYXJr
ZXIyIEBNYXJrZXIzICIsIGNvbnZlcnRBbm5vdGF0aW9uc0xpc3QoZXh0cmFEaW1lbnNpb24uYW5u
b3RhdGlvbnMoKSkpOworCQlleHRyYURpbWVuc2lvbiA9ICgoQXJyYXlUeXBlKSB0eXBlKS5nZXRE
aW1lbnNpb25ObygyKTsKKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgYW5ub3RhdGlvbnMiLCAi
QE1hcmtlciBATWFya2VyMiAiLCBjb252ZXJ0QW5ub3RhdGlvbnNMaXN0KGV4dHJhRGltZW5zaW9u
LmFubm90YXRpb25zKCkpKTsKIAkJTGlzdCBkaW1lbnNpb25zID0gY3JlYXRpb24uZGltZW5zaW9u
cygpOwogCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCBleHByZXNzaW9ucyIsIDIsIGRpbWVuc2lv
bnMuc2l6ZSgpKTsKIAkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgZXhwcmVzc2lvbnMiLCAiMiIs
IGRpbWVuc2lvbnMuZ2V0KDApLnRvU3RyaW5nKCkpOwpAQCAtMTE1OSwxMyArMTE1OCwxMiBAQAog
CQkKIAkJdHlwZSA9IGNyZWF0aW9uLmdldFR5cGUoKTsKIAkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJl
Y3QgdHlwZSIsIHRydWUsIHR5cGUuaXNBcnJheVR5cGUoKSk7Ci0JCWFzc2VydEVxdWFscygiSW5j
b3JyZWN0IGFubm90YXRpb25zIiwgIkBNYXJrZXIyIEBNYXJrZXIzICIsIGNvbnZlcnRBbm5vdGF0
aW9uc0xpc3QoKChBcnJheVR5cGUpIHR5cGUpLmFubm90YXRpb25zKCkpKTsKLQkJdHlwZSA9ICgo
QXJyYXlUeXBlKSB0eXBlKS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWFzc2VydEVxdWFscygiSW5j
b3JyZWN0IHR5cGUiLCB0cnVlLCB0eXBlLmlzQXJyYXlUeXBlKCkpOwotCQlhc3NlcnRFcXVhbHMo
IkluY29ycmVjdCBhbm5vdGF0aW9ucyIsICJATWFya2VyIEBNYXJrZXIyICIsIGNvbnZlcnRBbm5v
dGF0aW9uc0xpc3QoKChBcnJheVR5cGUpIHR5cGUpLmFubm90YXRpb25zKCkpKTsKLQkJdHlwZSA9
ICgoQXJyYXlUeXBlKSB0eXBlKS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWFzc2VydEVxdWFscygi
SW5jb3JyZWN0IHR5cGUiLCB0cnVlLCB0eXBlLmlzQXJyYXlUeXBlKCkpOwotCQlhc3NlcnRFcXVh
bHMoIkluY29ycmVjdCBhbm5vdGF0aW9ucyIsICJATWFya2VyMyBATWFya2VyICIsIGNvbnZlcnRB
bm5vdGF0aW9uc0xpc3QoKChBcnJheVR5cGUpIHR5cGUpLmFubm90YXRpb25zKCkpKTsKKwkJZXh0
cmFEaW1lbnNpb24gPSAoKEFycmF5VHlwZSkgdHlwZSkuZ2V0RGltZW5zaW9uTm8oMCk7CisJCWFz
c2VydEVxdWFscygiSW5jb3JyZWN0IGFubm90YXRpb25zIiwgIkBNYXJrZXIyIEBNYXJrZXIzICIs
IGNvbnZlcnRBbm5vdGF0aW9uc0xpc3QoZXh0cmFEaW1lbnNpb24uYW5ub3RhdGlvbnMoKSkpOwor
CQlleHRyYURpbWVuc2lvbiA9ICgoQXJyYXlUeXBlKSB0eXBlKS5nZXREaW1lbnNpb25ObygxKTsK
KwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgYW5ub3RhdGlvbnMiLCAiQE1hcmtlciBATWFya2Vy
MiAiLCBjb252ZXJ0QW5ub3RhdGlvbnNMaXN0KGV4dHJhRGltZW5zaW9uLmFubm90YXRpb25zKCkp
KTsKKwkJZXh0cmFEaW1lbnNpb24gPSAoKEFycmF5VHlwZSkgdHlwZSkuZ2V0RGltZW5zaW9uTm8o
Mik7CisJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IGFubm90YXRpb25zIiwgIkBNYXJrZXIzIEBN
YXJrZXIgIiwgY29udmVydEFubm90YXRpb25zTGlzdChleHRyYURpbWVuc2lvbi5hbm5vdGF0aW9u
cygpKSk7CiAJCWRpbWVuc2lvbnMgPSBjcmVhdGlvbi5kaW1lbnNpb25zKCk7CiAJCWFzc2VydEVx
dWFscygiSW5jb3JyZWN0IGV4cHJlc3Npb25zIiwgMiwgZGltZW5zaW9ucy5zaXplKCkpOwogCQlh
c3NlcnRFcXVhbHMoIkluY29ycmVjdCBleHByZXNzaW9ucyIsICIyIiwgZGltZW5zaW9ucy5nZXQo
MCkudG9TdHJpbmcoKSk7CkBAIC0xMjM2LDEyICsxMjM0LDYgQEAKIAkJVmFyaWFibGVEZWNsYXJh
dGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgbGlz
dC5nZXQoMCk7CiAJCUFycmF5Q3JlYXRpb24gY3JlYXRpb24gPSAoQXJyYXlDcmVhdGlvbikgZnJh
Z21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKIAkJVHlwZSB0eXBlID0gY3JlYXRpb24uZ2V0VHlwZSgp
OwotCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCB0eXBlIiwgdHJ1ZSwgdHlwZS5pc0FycmF5VHlw
ZSgpKTsKLQkJYXNzZXJ0RXF1YWxzKCJUeXBlIHNob3VsZCBiZSBtYWxmb3JtZWQiLCBBU1ROb2Rl
Lk1BTEZPUk1FRCwgKHR5cGUuZ2V0RmxhZ3MoKSAmIEFTVE5vZGUuTUFMRk9STUVEKSk7Ci0JCXR5
cGUgPSAoKEFycmF5VHlwZSkgdHlwZSkuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlhc3NlcnRFcXVh
bHMoIkluY29ycmVjdCB0eXBlIiwgdHJ1ZSwgdHlwZS5pc0FycmF5VHlwZSgpKTsKLQkJYXNzZXJ0
RXF1YWxzKCJUeXBlIHNob3VsZCBiZSBtYWxmb3JtZWQiLCBBU1ROb2RlLk1BTEZPUk1FRCwgKHR5
cGUuZ2V0RmxhZ3MoKSAmIEFTVE5vZGUuTUFMRk9STUVEKSk7Ci0JCXR5cGUgPSAoKEFycmF5VHlw
ZSkgdHlwZSkuZ2V0Q29tcG9uZW50VHlwZSgpOwogCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCB0
eXBlIiwgdHJ1ZSwgdHlwZS5pc0FycmF5VHlwZSgpKTsKIAkJYXNzZXJ0RXF1YWxzKCJUeXBlIHNo
b3VsZCBiZSBtYWxmb3JtZWQiLCBBU1ROb2RlLk1BTEZPUk1FRCwgKHR5cGUuZ2V0RmxhZ3MoKSAm
IEFTVE5vZGUuTUFMRk9STUVEKSk7CiAJfQpAQCAtMTYxNCwxNCArMTYwNiwxNCBAQAogCQlFeHBy
ZXNzaW9uIGV4cHJlc3Npb24gPSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOwogCQlhc3NlcnRU
cnVlKGV4cHJlc3Npb24gaW5zdGFuY2VvZiBMYW1iZGFFeHByZXNzaW9uKTsKIAkJTGFtYmRhRXhw
cmVzc2lvbiBsYW1iZGFFeHByZXNzaW9uID0gKExhbWJkYUV4cHJlc3Npb24pZXhwcmVzc2lvbjsK
LQkJYXNzZXJ0RXF1YWxzKCIoaW50W10gaWEpIC0+IHtcbiAgcmV0dXJuIGlhLmNsb25lKCk7XG59
XG4iLCBsYW1iZGFFeHByZXNzaW9uLnRvU3RyaW5nKCkpOworCQlhc3NlcnRFcXVhbHMoIihpbnQg
W10gaWEpIC0+IHtcbiAgcmV0dXJuIGlhLmNsb25lKCk7XG59XG4iLCBsYW1iZGFFeHByZXNzaW9u
LnRvU3RyaW5nKCkpOwogCQlJTWV0aG9kQmluZGluZyBiaW5kaW5nID0gbGFtYmRhRXhwcmVzc2lv
bi5yZXNvbHZlTWV0aG9kQmluZGluZygpOwogCQlhc3NlcnRFcXVhbHMoInByaXZhdGUgc3RhdGlj
IGphdmEubGFuZy5PYmplY3QgbGFtYmRhJDAoaW50W10pICIsIGJpbmRpbmcudG9TdHJpbmcoKSk7
CiAJCWFzc2VydFRydWUobGFtYmRhRXhwcmVzc2lvbi5wYXJhbWV0ZXJzKCkuc2l6ZSgpID09IDEp
OwogCQlWYXJpYWJsZURlY2xhcmF0aW9uIHZhcmlhYmxlRGVjbGFyYXRpb24gPSAoVmFyaWFibGVE
ZWNsYXJhdGlvbikgbGFtYmRhRXhwcmVzc2lvbi5wYXJhbWV0ZXJzKCkuZ2V0KDApOwogCQlhc3Nl
cnRUcnVlKHZhcmlhYmxlRGVjbGFyYXRpb24gaW5zdGFuY2VvZiBTaW5nbGVWYXJpYWJsZURlY2xh
cmF0aW9uKTsKIAkJU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiBzaW5nbGVWYXJpYWJsZURlY2xh
cmF0aW9uID0gKFNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24pdmFyaWFibGVEZWNsYXJhdGlvbjsK
LQkJYXNzZXJ0RXF1YWxzKCJpbnRbXSBpYSIsIHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24udG9T
dHJpbmcoKSk7CQkKKwkJYXNzZXJ0RXF1YWxzKCJpbnQgW10gaWEiLCBzaW5nbGVWYXJpYWJsZURl
Y2xhcmF0aW9uLnRvU3RyaW5nKCkpOwkJCiAJfQogCiAJLyoqCkBAIC0yNjQ4LDUgKzI2NDAsMTA3
IEBACiAJCXR5cGVCaW5kaW5nID0gdHlwZS5yZXNvbHZlQmluZGluZygpOwogCQlhc3NlcnRGYWxz
ZSgiQSBGdW5jdGlvbmFsIGludGVyZmFjZSIsIHR5cGVCaW5kaW5nLmlzRnVuY3Rpb25hbEludGVy
ZmFjZSgpKTsKIAl9CisJLy8gaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcu
Y2dpP2lkPTQxMzk0MgorCS8vIGFsc28gcmVmZXIgaHR0cHM6Ly9idWdzLmVjbGlwc2Uub3JnL2J1
Z3Mvc2hvd19idWcuY2dpP2lkPTQxMzU2OQorCXB1YmxpYyB2b2lkIHRlc3RCdWc0MTM5NDIoKSB0
aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJU3RyaW5nIGNvbnRlbnRzID0KKwkJInB1Ymxp
YyBjbGFzcyBYIGV4dGVuZHMgQE5vbk51bGwoaW50W10uY2xhc3MpIE9iamVjdCB7XG4iICsKKwkJ
IiAgICBPYmplY3QgZmllbGQgPSBuZXcgQXJyYXlMaXN0PCBATm9uRW1wdHkoMCkgaW50IEBOb25O
dWxsKHZhbHVlMSA9IDEpIFtdIEBOb25FbXB0eSgxKSBbIF0+KCkgO1xuIiArCisJCSIgICAgQEFu
bm90IGludCBAQW5ub3QxIFtdIGExIEBBbm5vdDIgQEFubm90MyBbLyogW10gKi8gXSBAQW5ub3Qz
IEBBbm5vdDIgW10gQEFubm90NCBbXTtcbiIgKworCQkiICAgIGludFtdW10geHh4O1xuIiArCisJ
CSIgICAgQXJyYXlMaXN0PGludFtdPiBbXVtdIHl5eTsgLy8gc291cmNlIHJhbmdlcyBhbHJlYWR5
IGJyb2tlbiBpbiBBU1QuSkxTNFxuIiArCisJCSIgICAgQXJyYXlMaXN0PGludFtdW10+IFtdW11b
XVtdIHp6ejtcbiIgKworCQkiICAgIEFycmF5TGlzdDxGbG9hdD4gW11bXVtdIHp6ejI7XG4iICsK
KwkJIiAgICBPYmplY3QgYSA9IG5ldyBBcnJheUxpc3Q8IEBUYWtlVHlwZShpbnRbXVtdLmNsYXNz
KSBpbnQgQFRha2VUeXBlKGZsb2F0LmNsYXNzKSBbXSBAVGFrZVR5cGUoZG91YmxlLmNsYXNzKSBb
XT4oKSA7XG4iICsKKwkJIiAgICBPYmplY3QgYiA9IG5ldyBATm9uTnVsbCh2YWx1ZTEgPSBNYXRo
LlBJKSBBcnJheUxpc3Q8ID4oKSA7IFxuIiArCisJCSIgICAgT2JqZWN0IGMgPSBuZXcgQXJyYXlM
aXN0PEBOb25OdWxsKHZhbHVlMT0gTWF0aC5QSSApIE9iamVjdFtdPigpIDtcbiIgKworCQkiXG4i
ICsKKwkJIiAgICBpbnQgZm9vKEBUYWtlVHlwZShpbnRbXS5jbGFzcylpbnQgaSApIEBUYWtlVHlw
ZShpbnRbXS5jbGFzcykgW10ge1xuIiArCisJCSIgICAgICAgIGludFtdIGFyciA9ICBuZXcgaW50
WzJdO1xuIiArCisJCSIgICAgICAgIGZvciAoU3RyaW5nIHRhYiBAVGFrZVR5cGUoaW50W10uY2xh
c3MpIFtdID0gbnVsbDs7ICsraSkgeyBicmVhazsgfVxuIiArCisJCSIgICAgICAgIGZvciAoQERl
cHJlY2F0ZWQgU3RyaW5nIHRhYkBUYWtlVHlwZShpbnRbXS5jbGFzcykgW11bXSAgPSBudWxsOzsg
KytpKSB7fVxuIiArCisJCSIgICAgfVxuIiArCisJCSIgICAgaW50IGJhcihpbnQgW10gLypAVGFr
ZVR5cGUoaW50W10uY2xhc3MpKi8gW10gYSApIHtcbiIgKworCQkiICAgIAlyZXR1cm4gMDtcbiIg
KworCQkiICAgIH1cbiIgKworCQkifVxuIiArCisJCSJcbiIgKworCQkiQFRhcmdldChFbGVtZW50
VHlwZS5UWVBFX1VTRSlcbiIgKworCQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3kuUlVOVElN
RSlcbiIgKworCQkiQERvY3VtZW50ZWRcbiIgKworCQkiQGludGVyZmFjZSBOb25OdWxsIHtcbiIg
KworCQkiCUNsYXNzIHZhbHVlKCkgZGVmYXVsdCBpbnQuY2xhc3M7XG4iICsKKwkJIglkb3VibGUg
dmFsdWUxKCkgZGVmYXVsdCAwO1xuIiArCisJCSJ9XG4iICsKKwkJIlxuIiArCisJCSJAVGFyZ2V0
KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCSJAUmV0ZW50aW9uKFJldGVudGlvblBvbGlj
eS5SVU5USU1FKVxuIiArCisJCSJARG9jdW1lbnRlZFxuIiArCisJCSJAaW50ZXJmYWNlIE5vbkVt
cHR5IHtcbiIgKworCQkiCWludCB2YWx1ZSgpIGRlZmF1bHQgMDtcbiIgKworCQkifVxuIiArCisJ
CSJcbiIgKworCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKworCQkiQFJldGVu
dGlvbihSZXRlbnRpb25Qb2xpY3kuUlVOVElNRSlcbiIgKworCQkiQERvY3VtZW50ZWRcbiIgKwor
CQkiQGludGVyZmFjZSBUYWtlVHlwZSB7XG4iICsKKwkJIglDbGFzcyB2YWx1ZSgpIGRlZmF1bHQg
aW50W10uY2xhc3M7XG4iICsKKwkJIn1cbiIgKworCQkiXG4iICsKKwkJIkBUYXJnZXQoRWxlbWVu
dFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJIkBSZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LlJVTlRJ
TUUpXG4iICsKKwkJIkBEb2N1bWVudGVkXG4iICsKKwkJIkBpbnRlcmZhY2UgQW5ub3Qge31cbiIg
KworCQkiXG4iICsKKwkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJIkBS
ZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LlJVTlRJTUUpXG4iICsKKwkJIkBEb2N1bWVudGVkXG4i
ICsKKwkJIkBpbnRlcmZhY2UgQW5ub3QxIHt9XG4iICsKKwkJIlxuIiArCisJCSJAVGFyZ2V0KEVs
ZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCSJAUmV0ZW50aW9uKFJldGVudGlvblBvbGljeS5S
VU5USU1FKVxuIiArCisJCSJARG9jdW1lbnRlZFxuIiArCisJCSJAaW50ZXJmYWNlIEFubm90MiB7
fVxuIiArCisJCSJcbiIgKworCQkiQFRhcmdldChFbGVtZW50VHlwZS5UWVBFX1VTRSlcbiIgKwor
CQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3kuUlVOVElNRSlcbiIgKworCQkiQERvY3VtZW50
ZWRcbiIgKworCQkiQGludGVyZmFjZSBBbm5vdDMge31cbiIgKworCQkiXG4iICsKKwkJIkBUYXJn
ZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJIkBSZXRlbnRpb24oUmV0ZW50aW9uUG9s
aWN5LlJVTlRJTUUpXG4iICsKKwkJIkBEb2N1bWVudGVkXG4iICsKKwkJIkBpbnRlcmZhY2UgQW5u
b3Q0IHt9XG4iICsKKwkJIlxuIjsKKwkJdGhpcy53b3JraW5nQ29weSA9IGdldFdvcmtpbmdDb3B5
KCIvQ29udmVydGVyMTgvc3JjL1guamF2YSIsIHRydWUpOworCQlBU1ROb2RlIG5vZGUgPSBidWls
ZEFTVChjb250ZW50cywgdGhpcy53b3JraW5nQ29weSwgZmFsc2UpOworCQlhc3NlcnRFcXVhbHMo
Ik5vdCBhIGNvbXBpbGF0aW9uIHVuaXQiLCBBU1ROb2RlLkNPTVBJTEFUSU9OX1VOSVQsIG5vZGUu
Z2V0Tm9kZVR5cGUoKSk7CisJCUNvbXBpbGF0aW9uVW5pdCB1bml0ID0gKENvbXBpbGF0aW9uVW5p
dCkgbm9kZTsKKwkJCisJCVR5cGVEZWNsYXJhdGlvbiB0eXBlID0gIChUeXBlRGVjbGFyYXRpb24p
IHVuaXQudHlwZXMoKS5nZXQoMCk7CisJCVNpbXBsZVR5cGUgc2ltcGxlVHlwZSA9ICAoU2ltcGxl
VHlwZSkgdHlwZS5nZXRTdXBlcmNsYXNzVHlwZSgpOworCQljaGVja1NvdXJjZVJhbmdlKHNpbXBs
ZVR5cGUsICJATm9uTnVsbChpbnRbXS5jbGFzcykgT2JqZWN0IiwgY29udGVudHMpOworCQlTaW5n
bGVNZW1iZXJBbm5vdGF0aW9uIHNpbmdsZU1lbWJlckFubm90YXRpb24gPSAoU2luZ2xlTWVtYmVy
QW5ub3RhdGlvbikgc2ltcGxlVHlwZS5hbm5vdGF0aW9ucygpLmdldCgwKTsKKwkJY2hlY2tTb3Vy
Y2VSYW5nZShzaW5nbGVNZW1iZXJBbm5vdGF0aW9uLCAiQE5vbk51bGwoaW50W10uY2xhc3MpIiwg
Y29udGVudHMpOworCQlUeXBlTGl0ZXJhbCB0eXBlTGl0ZXJhbCA9IChUeXBlTGl0ZXJhbCkgc2lu
Z2xlTWVtYmVyQW5ub3RhdGlvbi5nZXRWYWx1ZSgpOworCQljaGVja1NvdXJjZVJhbmdlKHR5cGVM
aXRlcmFsLCAiaW50W10uY2xhc3MiLCBjb250ZW50cyk7CisJCUFycmF5VHlwZSBhcnJheVR5cGUg
PSAoQXJyYXlUeXBlKSB0eXBlTGl0ZXJhbC5nZXRUeXBlKCk7CisJCWNoZWNrU291cmNlUmFuZ2Uo
YXJyYXlUeXBlLCAiaW50W10iLCBjb250ZW50cyk7CisJCQorCQlGaWVsZERlY2xhcmF0aW9uIGZp
ZWxkID0gKEZpZWxkRGVjbGFyYXRpb24pIHR5cGUuYm9keURlY2xhcmF0aW9ucygpLmdldCgwKTsK
KwkJY2hlY2tTb3VyY2VSYW5nZShmaWVsZCwgIk9iamVjdCBmaWVsZCA9IG5ldyBBcnJheUxpc3Q8
IEBOb25FbXB0eSgwKSBpbnQgQE5vbk51bGwodmFsdWUxID0gMSkgW10gQE5vbkVtcHR5KDEpIFsg
XT4oKSA7IiwgY29udGVudHMpOworCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21l
bnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmaWVsZC5mcmFnbWVudHMoKS5nZXQo
MCk7CisJCUNsYXNzSW5zdGFuY2VDcmVhdGlvbiBpbnN0YW5jZSA9IChDbGFzc0luc3RhbmNlQ3Jl
YXRpb24pIGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CisJCVBhcmFtZXRlcml6ZWRUeXBlIHBh
cmFtZXRlcml6ZWRUeXBlID0gKFBhcmFtZXRlcml6ZWRUeXBlKSBpbnN0YW5jZS5nZXRUeXBlKCk7
CisJCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIHBhcmFtZXRlcml6ZWRUeXBlLnR5cGVBcmd1bWVu
dHMoKS5nZXQoMCk7CisJCWNoZWNrU291cmNlUmFuZ2UoYXJyYXlUeXBlLCAiQE5vbkVtcHR5KDAp
IGludCBATm9uTnVsbCh2YWx1ZTEgPSAxKSBbXSBATm9uRW1wdHkoMSkgWyBdIiwgY29udGVudHMp
OworCQlQcmltaXRpdmVUeXBlIHByaW1pdGl2ZVR5cGUgPSAoUHJpbWl0aXZlVHlwZSkgYXJyYXlU
eXBlLmdldEVsZW1lbnRUeXBlKCk7CisJCWNoZWNrU291cmNlUmFuZ2UocHJpbWl0aXZlVHlwZSwg
IkBOb25FbXB0eSgwKSBpbnQiLCBjb250ZW50cyk7CisJCUV4dHJhRGltZW5zaW9uIGV4dHJhRGlt
ZW5zaW9uID0gYXJyYXlUeXBlLmdldERpbWVuc2lvbk5vKDEpOworCQljaGVja1NvdXJjZVJhbmdl
KGV4dHJhRGltZW5zaW9uLCAiQE5vbk51bGwodmFsdWUxID0gMSkgW10iLCBjb250ZW50cyk7CisJ
CWV4dHJhRGltZW5zaW9uID0gYXJyYXlUeXBlLmdldERpbWVuc2lvbk5vKDApOworCQljaGVja1Nv
dXJjZVJhbmdlKGV4dHJhRGltZW5zaW9uLCAiQE5vbkVtcHR5KDEpIFsgXSIsIGNvbnRlbnRzKTsK
KwkJCQkKKwl9CiAKIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1v
ZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyQVNUOFRl
c3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyQVNUOFRlc3QuamF2YQppbmRleCBjZTBm
Y2M0Li5kNDEzMGU1IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2Rl
bC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlckFTVDhUZXN0
LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXJBU1Q4VGVzdC5qYXZhCkBAIC03NjYy
LDE1ICs3NjYyLDkgQEAKIAkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nID0gYXJyYXlUeXBlLnJl
c29sdmVCaW5kaW5nKCk7CiAJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgImphdmEubGFuZy5PYmpl
Y3RbXVtdIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAogCQlhc3NlcnROb3ROdWxsKCJObyB0eXBl
IGJpbmRpbmciLCB0eXBlQmluZGluZyk7IC8vJE5PTi1OTFMtMSQKLQkJVHlwZSBlbGVtZW50VHlw
ZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCUlUeXBlQmluZGluZyB0eXBlQmlu
ZGluZzIgPSBlbGVtZW50VHlwZS5yZXNvbHZlQmluZGluZygpOwotCQlhc3NlcnROb3ROdWxsKCJO
byB0eXBlIGJpbmRpbmcyIiwgdHlwZUJpbmRpbmcyKTsgLy8kTk9OLU5MUy0xJAotCQlhc3NlcnRF
cXVhbHMoIndyb25nIGRpbWVuc2lvbiIsIDEsIHR5cGVCaW5kaW5nMi5nZXREaW1lbnNpb25zKCkp
OyAvLyROT04tTkxTLTEkCi0JCWFzc2VydEVxdWFscygid3JvbmcgbmFtZSIsICJPYmplY3RbXSIs
IHR5cGVCaW5kaW5nMi5nZXROYW1lKCkpOwkJIC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAot
CQlhc3NlcnRUcnVlKCJOb3QgYW4gYXJyYXkgdHlwZSIsIGVsZW1lbnRUeXBlLmlzQXJyYXlUeXBl
KCkpOyAvLyROT04tTkxTLTEkCi0JCVR5cGUgZWxlbWVudFR5cGUyID0gKChBcnJheVR5cGUpIGVs
ZW1lbnRUeXBlKS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWFzc2VydFRydWUoIk5vdCBhIHNpbXBs
ZSB0eXBlIiwgZWxlbWVudFR5cGUyLmlzU2ltcGxlVHlwZSgpKTsgLy8kTk9OLU5MUy0xJAotCQlJ
VHlwZUJpbmRpbmcgdHlwZUJpbmRpbmczID0gZWxlbWVudFR5cGUyLnJlc29sdmVCaW5kaW5nKCk7
CisJCVR5cGUgZWxlbWVudFR5cGUgPSBhcnJheVR5cGUuZ2V0RWxlbWVudFR5cGUoKTsKKwkJYXNz
ZXJ0VHJ1ZSgiTm90IGEgc2ltcGxlIHR5cGUiLCBlbGVtZW50VHlwZS5pc1NpbXBsZVR5cGUoKSk7
IC8vJE5PTi1OTFMtMSQKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nMyA9IGVsZW1lbnRUeXBl
LnJlc29sdmVCaW5kaW5nKCk7CiAJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUgYmluZGluZzMiLCB0
eXBlQmluZGluZzMpOyAvLyROT04tTkxTLTEkCiAJCWFzc2VydEVxdWFscygid3JvbmcgZGltZW5z
aW9uIiwgMCwgdHlwZUJpbmRpbmczLmdldERpbWVuc2lvbnMoKSk7IC8vJE5PTi1OTFMtMSQKIAkJ
YXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgIk9iamVjdCIsIHR5cGVCaW5kaW5nMy5nZXROYW1l
KCkpOwkJIC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJApAQCAtODAwOSwxMiArODAwMywxMCBA
QAogCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmczID0gc2ltcGxlVHlwZS5yZXNvbHZlQmluZGlu
ZygpOwogCQlhc3NlcnROb3ROdWxsKCJubyB0eXBlIGJpbmRpbmczIiwgdHlwZUJpbmRpbmczKTsg
Ly8kTk9OLU5MUy0xJAogCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAiT2JqZWN0IiwgdHlw
ZUJpbmRpbmczLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAotCQl0eXBl
ID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFy
cmF5IHR5cGUiLCB0eXBlIGluc3RhbmNlb2YgQXJyYXlUeXBlKTsgLy8kTk9OLU5MUy0xJAotCQlB
cnJheVR5cGUgYXJyYXlUeXBlMiA9IChBcnJheVR5cGUpIHR5cGU7Ci0JCUlUeXBlQmluZGluZyB0
eXBlQmluZGluZzQgPSBhcnJheVR5cGUyLnJlc29sdmVCaW5kaW5nKCk7CisJCXR5cGUgPSBhcnJh
eVR5cGUuZ2V0RWxlbWVudFR5cGUoKTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nNCA9IHR5
cGUucmVzb2x2ZUJpbmRpbmcoKTsKIAkJYXNzZXJ0Tm90TnVsbCgibm8gdHlwZSBiaW5kaW5nNCIs
IHR5cGVCaW5kaW5nNCk7IC8vJE5PTi1OTFMtMSQKLQkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1l
IiwgIk9iamVjdFtdIiwgdHlwZUJpbmRpbmc0LmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8k
Tk9OLU5MUy0yJAorCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAiT2JqZWN0IiwgdHlwZUJp
bmRpbmc0LmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAogCX0KIAogCS8q
KgpAQCAtODA1MSwyMCArODA0MywxMCBAQAogCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmczID0g
c2ltcGxlVHlwZS5yZXNvbHZlQmluZGluZygpOwogCQlhc3NlcnROb3ROdWxsKCJubyB0eXBlIGJp
bmRpbmczIiwgdHlwZUJpbmRpbmczKTsgLy8kTk9OLU5MUy0xJAogCQlhc3NlcnRFcXVhbHMoIndy
b25nIG5hbWUiLCAiT2JqZWN0IiwgdHlwZUJpbmRpbmczLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMt
MSQgLy8kTk9OLU5MUy0yJAotCQl0eXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsK
LQkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5cGUiLCB0eXBlIGluc3RhbmNlb2YgQXJyYXlU
eXBlKTsgLy8kTk9OLU5MUy0xJAotCQlBcnJheVR5cGUgYXJyYXlUeXBlMiA9IChBcnJheVR5cGUp
IHR5cGU7Ci0JCWNoZWNrU291cmNlUmFuZ2UoYXJyYXlUeXBlMiwgIk9iamVjdFsxMF1bXSIsIHNv
dXJjZSk7IC8vJE5PTi1OTFMtMSQKLQkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nNCA9IGFycmF5
VHlwZTIucmVzb2x2ZUJpbmRpbmcoKTsKKwkJdHlwZSA9IGFycmF5VHlwZS5nZXRFbGVtZW50VHlw
ZSgpOworCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmc0ID0gdHlwZS5yZXNvbHZlQmluZGluZygp
OwogCQlhc3NlcnROb3ROdWxsKCJubyB0eXBlIGJpbmRpbmc0IiwgdHlwZUJpbmRpbmc0KTsgLy8k
Tk9OLU5MUy0xJAotCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAiT2JqZWN0W11bXSIsIHR5
cGVCaW5kaW5nNC5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKLQkJdHlw
ZSA9IGFycmF5VHlwZTIuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlhc3NlcnRUcnVlKCJOb3QgYW4g
YXJyYXkgdHlwZSIsIHR5cGUgaW5zdGFuY2VvZiBBcnJheVR5cGUpOyAvLyROT04tTkxTLTEkCi0J
CUFycmF5VHlwZSBhcnJheVR5cGUzID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJSVR5cGVCaW5kaW5n
IHR5cGVCaW5kaW5nNSA9IGFycmF5VHlwZTMucmVzb2x2ZUJpbmRpbmcoKTsKLQkJYXNzZXJ0Tm90
TnVsbCgibm8gdHlwZSBiaW5kaW5nNSIsIHR5cGVCaW5kaW5nNSk7IC8vJE5PTi1OTFMtMSQKLQkJ
YXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgIk9iamVjdFtdIiwgdHlwZUJpbmRpbmc1LmdldE5h
bWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAotCQljaGVja1NvdXJjZVJhbmdlKGFy
cmF5VHlwZTMsICJPYmplY3RbMTBdIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAorCQlhc3NlcnRF
cXVhbHMoIndyb25nIG5hbWUiLCAiT2JqZWN0IiwgdHlwZUJpbmRpbmc0LmdldE5hbWUoKSk7IC8v
JE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAogCX0KIAogCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9t
L0FTVENvbnZlcnRlclRlc3RBU1Q4XzIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3Rz
Lm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyVGVz
dEFTVDhfMi5qYXZhCmluZGV4IGZiMzJlNzUuLjg2YzU3NmEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9k
b20vQVNUQ29udmVydGVyVGVzdEFTVDhfMi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
LnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVy
dGVyVGVzdEFTVDhfMi5qYXZhCkBAIC0yNzEwLDYgKzI3MTAsNyBAQAogCiAJLyoqCiAJICogaHR0
cDovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDI4MzkKKwkgKiBAZGVw
cmVjYXRlZCB1c2VzIGRlcHJlY2F0ZWQgbWV0aG9kcwogCSAqLwogCXB1YmxpYyB2b2lkIHRlc3Qw
NDkzKCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CiAJCUlDb21waWxhdGlvblVuaXQgc291
cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDA0
OTMiLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMk
IC8vJE5PTi1OTFMtNCQKQEAgLTI3MjUsMTMgKzI3MjYsMTggQEAKIAkJY2hlY2tTb3VyY2VSYW5n
ZSh0eXBlLCAiQ2xhc3NbXVtdIiwgc291cmNlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5
IHR5cGUiLCB0eXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJCUFycmF5VHlwZSBh
cnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJh
eVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlw
ZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKLQkJY2hlY2tT
b3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXSIsIHNvdXJjZSk7Ci0JCWFycmF5VHlw
ZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7Ci0JCWNvbXBvbmVudFR5cGUgPSBhcnJheVR5
cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJheSB0eXBlIiwg
IWNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKLQkJY2hlY2tTb3Vy
Y2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2UpOworCQlpZiAodGhpcy5hc3Qu
YXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJheVR5
cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUi
LCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJCQljaGVja1Nv
dXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJDbGFzc1tdIiwgc291cmNlKTsKKwkJCWFycmF5VHlw
ZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7CisJCQljb21wb25lbnRUeXBlID0gYXJyYXlU
eXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJCWFzc2VydFRydWUoImlzIGFuIGFycmF5IHR5cGUi
LCAhY29tcG9uZW50VHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQkJY2hlY2tT
b3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2UpOworCQl9IGVsc2Ugewor
CQkJVHlwZSBlbGVtZW50VHlwZSA9IGFycmF5VHlwZS5nZXRFbGVtZW50VHlwZSgpOworCQkJY2hl
Y2tTb3VyY2VSYW5nZShlbGVtZW50VHlwZSwgIkNsYXNzIiwgc291cmNlKTsKKwkJfQogCX0KIAog
CS8qKgpAQCAtMjc1MSwyMSArMjc1NywyNyBAQAogCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJD
bGFzc1tdW11bXSIsIHNvdXJjZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwg
dHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQlBcnJheVR5cGUgYXJyYXlUeXBl
ID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJVHlwZSBjb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdl
dENvbXBvbmVudFR5cGUoKTsKLQkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCBjb21w
b25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCi0JCWNoZWNrU291cmNlUmFu
Z2UoY29tcG9uZW50VHlwZSwgIkNsYXNzW11bXSIsIHNvdXJjZSk7Ci0JCWFycmF5VHlwZSA9IChB
cnJheVR5cGUpIGNvbXBvbmVudFR5cGU7Ci0JCWNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0
Q29tcG9uZW50VHlwZSgpOwotCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIGNvbXBv
bmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKLQkJY2hlY2tTb3VyY2VSYW5n
ZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXSIsIHNvdXJjZSk7Ci0JCWFycmF5VHlwZSA9IChBcnJh
eVR5cGUpIGNvbXBvbmVudFR5cGU7Ci0JCWNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29t
cG9uZW50VHlwZSgpOwotCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJheSB0eXBlIiwgIWNvbXBvbmVu
dFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKLQkJY2hlY2tTb3VyY2VSYW5nZShj
b21wb25lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2UpOworCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwo
KSA8IEFTVC5KTFM4KSB7CisJCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29t
cG9uZW50VHlwZSgpOworCQkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCBjb21wb25l
bnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJCQljaGVja1NvdXJjZVJhbmdl
KGNvbXBvbmVudFR5cGUsICJDbGFzc1tdW10iLCBzb3VyY2UpOworCQkJYXJyYXlUeXBlID0gKEFy
cmF5VHlwZSkgY29tcG9uZW50VHlwZTsKKwkJCWNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0
Q29tcG9uZW50VHlwZSgpOworCQkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCBjb21w
b25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJCQljaGVja1NvdXJjZVJh
bmdlKGNvbXBvbmVudFR5cGUsICJDbGFzc1tdIiwgc291cmNlKTsKKwkJCWFycmF5VHlwZSA9IChB
cnJheVR5cGUpIGNvbXBvbmVudFR5cGU7CisJCQljb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdl
dENvbXBvbmVudFR5cGUoKTsKKwkJCWFzc2VydFRydWUoImlzIGFuIGFycmF5IHR5cGUiLCAhY29t
cG9uZW50VHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQkJY2hlY2tTb3VyY2VS
YW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2UpOworCQl9IGVsc2UgeworCQkJVHlw
ZSBlbGVtZW50VHlwZSA9IGFycmF5VHlwZS5nZXRFbGVtZW50VHlwZSgpOworCQkJY2hlY2tTb3Vy
Y2VSYW5nZShlbGVtZW50VHlwZSwgIkNsYXNzIiwgc291cmNlKTsKKwkJfQogCX0KIAogCS8qKgog
CSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTQyODM5CisJ
ICogQGRlcHJlY2F0ZWQgdXNlcyBkZXByZWNhdGVkIG1ldGhvZHMKIAkgKi8KIAlwdWJsaWMgdm9p
ZCB0ZXN0MDQ5NSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewogCQlJQ29tcGlsYXRpb25V
bml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwg
InRlc3QwNDk1IiwgIkEuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9O
LU5MUy0zJCAvLyROT04tTkxTLTQkCkBAIC0yNzgxLDEzICsyNzkzLDE4IEBACiAJCWNoZWNrU291
cmNlUmFuZ2UodHlwZSwgIkNsYXNzW11bXSIsIHNvdXJjZSk7CiAJCWFzc2VydFRydWUoIm5vdCBh
biBhcnJheSB0eXBlIiwgdHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQlBcnJh
eVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJVHlwZSBjb21wb25lbnRUeXBl
ID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFy
cmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCi0J
CWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzW10iLCBzb3VyY2UpOwotCQlh
cnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBlOwotCQljb21wb25lbnRUeXBlID0g
YXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNzZXJ0VHJ1ZSgiaXMgYW4gYXJyYXkg
dHlwZSIsICFjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCi0JCWNo
ZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzIiwgc291cmNlKTsKKwkJaWYgKHRo
aXMuYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgeworCQkJVHlwZSBjb21wb25lbnRUeXBlID0g
YXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJh
eSB0eXBlIiwgY29tcG9uZW50VHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQkJ
Y2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXSIsIHNvdXJjZSk7CisJCQlh
cnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBlOworCQkJY29tcG9uZW50VHlwZSA9
IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJh
eSB0eXBlIiwgIWNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJ
CWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzIiwgc291cmNlKTsKKwkJfSBl
bHNlIHsKKwkJCVR5cGUgZWxlbWVudFR5cGUgPSBhcnJheVR5cGUuZ2V0RWxlbWVudFR5cGUoKTsK
KwkJCWNoZWNrU291cmNlUmFuZ2UoZWxlbWVudFR5cGUsICJDbGFzcyIsIHNvdXJjZSk7CisJCX0K
IAkJTGlzdCBmcmFnbWVudHMgPSBmaWVsZERlY2xhcmF0aW9uLmZyYWdtZW50cygpOwogCQlhc3Nl
cnRFcXVhbHMoIndyb25nIHNpemUiLCAxLCBmcmFnbWVudHMuc2l6ZSgpKTsKIAkJVmFyaWFibGVE
ZWNsYXJhdGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVu
dCkgZnJhZ21lbnRzLmdldCgwKTsKQEAgLTI3OTYsNiArMjgxMyw3IEBACiAKIAkvKioKIAkgKiBo
dHRwOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MjgzOQorCSAqIEBk
ZXByZWNhdGVkIHVzZXMgZGVwcmVjYXRlZCBtZXRob2RzCiAJICovCiAJcHVibGljIHZvaWQgdGVz
dDA0OTYoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKIAkJSUNvbXBpbGF0aW9uVW5pdCBz
b3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0
MDQ5NiIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMt
MyQgLy8kTk9OLU5MUy00JApAQCAtMjgxMSwyNSArMjgyOSwzMSBAQAogCQljaGVja1NvdXJjZVJh
bmdlKHR5cGUsICJDbGFzc1tdW11bXVtdIiwgc291cmNlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFu
IGFycmF5IHR5cGUiLCB0eXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJCUFycmF5
VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQlUeXBlIGNvbXBvbmVudFR5cGUg
PSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJy
YXkgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKLQkJ
Y2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXVtdW10iLCBzb3VyY2UpOwot
CQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBlOwotCQljb21wb25lbnRUeXBl
ID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFy
cmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCi0J
CWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzW11bXSIsIHNvdXJjZSk7Ci0J
CWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7Ci0JCWNvbXBvbmVudFR5cGUg
PSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJy
YXkgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKLQkJ
Y2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXSIsIHNvdXJjZSk7Ci0JCWFy
cmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7Ci0JCWNvbXBvbmVudFR5cGUgPSBh
cnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJheSB0
eXBlIiwgIWNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKLQkJY2hl
Y2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2UpOworCQlpZiAodGhp
cy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBh
cnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5
IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJCQlj
aGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJDbGFzc1tdW11bXSIsIHNvdXJjZSk7CisJ
CQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBlOworCQkJY29tcG9uZW50VHlw
ZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCQlhc3NlcnRUcnVlKCJub3QgYW4g
YXJyYXkgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQK
KwkJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzW11bXSIsIHNvdXJjZSk7
CisJCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBlOworCQkJY29tcG9uZW50
VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCQlhc3NlcnRUcnVlKCJub3Qg
YW4gYXJyYXkgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMt
MSQKKwkJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzW10iLCBzb3VyY2Up
OworCQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgY29tcG9uZW50VHlwZTsKKwkJCWNvbXBvbmVu
dFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQkJYXNzZXJ0VHJ1ZSgiaXMg
YW4gYXJyYXkgdHlwZSIsICFjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxT
LTEkCisJCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJDbGFzcyIsIHNvdXJjZSk7
CisJCX0gZWxzZSB7CisJCQlUeXBlIGVsZW1lbnRUeXBlID0gYXJyYXlUeXBlLmdldEVsZW1lbnRU
eXBlKCk7CisJCQljaGVja1NvdXJjZVJhbmdlKGVsZW1lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2Up
OworCQl9CiAJfQogCiAJLyoqCiAJICogaHR0cDovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93
X2J1Zy5jZ2k/aWQ9NDI4MzkKKwkgKiBAZGVwcmVjYXRlZCB1c2VzIGRlcHJlY2F0ZWQgbWV0aG9k
cwogCSAqLwogCXB1YmxpYyB2b2lkIHRlc3QwNDk3KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlv
biB7CiAJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0aW9uVW5pdCgi
Q29udmVydGVyIiAsICJzcmMiLCAidGVzdDA0OTciLCAiQS5qYXZhIik7IC8vJE5PTi1OTFMtMSQg
Ly8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKQEAgLTI4NDUsOSArMjg2
OSw5IEBACiAJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIkNsYXNzW10iLCBzb3VyY2UpOwogCQlh
c3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5P
Ti1OTFMtMSQKIAkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7Ci0JCVR5
cGUgY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWFzc2Vy
dFRydWUoImlzIGFuIGFycmF5IHR5cGUiLCAhY29tcG9uZW50VHlwZS5pc0FycmF5VHlwZSgpKTsg
Ly8kTk9OLU5MUy0xJAotCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJDbGFzcyIs
IHNvdXJjZSk7CisJCXR5cGUgPSB0aGlzLmFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzggPyBhcnJh
eVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpIDogYXJyYXlUeXBlLmdldEVsZW1lbnRUeXBlKCk7CisJ
CWFzc2VydFRydWUoImlzIGFuIGFycmF5IHR5cGUiLCAhdHlwZS5pc0FycmF5VHlwZSgpKTsgLy8k
Tk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJDbGFzcyIsIHNvdXJjZSk7CiAJ
fQogCiAJLyoqCkBAIC05NTI4LDYgKzk1NTIsNyBAQAogCiAJLyoqCiAJICogaHR0cDovL2Rldi5l
Y2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0xOTY1MTQKKwkgKiBAZGVwcmVjYXRlZCB1
c2VzIGRlcHJlY2F0ZWQgbWV0aG9kcwogCSAqLwogCXB1YmxpYyB2b2lkIHRlc3QwNjgzKCkgdGhy
b3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CiAJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9
IGdldENvbXBpbGF0aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDA2ODMiLCAiVGVz
dC5qYXZhIik7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5P
Ti1OTFMtNCQKQEAgLTk1NDgsMTQgKzk1NzMsMTkgQEAKIAkJQXJyYXlDcmVhdGlvbiBhcnJheUNy
ZWF0aW9uID0gKEFycmF5Q3JlYXRpb24pIG5vZGU7CiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSBh
cnJheUNyZWF0aW9uLmdldFR5cGUoKTsKIAkJY2hlY2tTb3VyY2VSYW5nZShhcnJheVR5cGUsICJT
dHJpbmdbMF1bYlsxMF1dW10iLCBzb3VyY2VVbml0LmdldFNvdXJjZSgpKTsKLQkJbm9kZSA9IGFy
cmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWFzc2VydEVxdWFscygiTm90IGFuIGFycmF5
IHR5cGUiLCBBU1ROb2RlLkFSUkFZX1RZUEUsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7Ci0JCWFycmF5
VHlwZSA9IChBcnJheVR5cGUpbm9kZTsKLQkJY2hlY2tTb3VyY2VSYW5nZShhcnJheVR5cGUsICJT
dHJpbmdbMF1bYlsxMF1dIiwgc291cmNlVW5pdC5nZXRTb3VyY2UoKSk7Ci0JCW5vZGUgPSBhcnJh
eVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBhcnJheSB0
eXBlIiwgQVNUTm9kZS5BUlJBWV9UWVBFLCBub2RlLmdldE5vZGVUeXBlKCkpOwotCQlhcnJheVR5
cGUgPSAoQXJyYXlUeXBlKW5vZGU7Ci0JCWNoZWNrU291cmNlUmFuZ2UoYXJyYXlUeXBlLCAiU3Ry
aW5nWzBdIiwgc291cmNlVW5pdC5nZXRTb3VyY2UoKSk7CisJCWlmICh0aGlzLmFzdC5hcGlMZXZl
bCgpIDwgQVNULkpMUzgpIHsKKwkJCW5vZGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgp
OworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gYXJyYXkgdHlwZSIsIEFTVE5vZGUuQVJSQVlfVFlQ
RSwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJCWFycmF5VHlwZSA9IChBcnJheVR5cGUpbm9kZTsK
KwkJCWNoZWNrU291cmNlUmFuZ2UoYXJyYXlUeXBlLCAiU3RyaW5nWzBdW2JbMTBdXSIsIHNvdXJj
ZVVuaXQuZ2V0U291cmNlKCkpOworCQkJbm9kZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBl
KCk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBhcnJheSB0eXBlIiwgQVNUTm9kZS5BUlJBWV9U
WVBFLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSlub2Rl
OworCQkJY2hlY2tTb3VyY2VSYW5nZShhcnJheVR5cGUsICJTdHJpbmdbMF0iLCBzb3VyY2VVbml0
LmdldFNvdXJjZSgpKTsKKwkJfSBlbHNlIHsKKwkJCW5vZGUgPSBhcnJheVR5cGUuZ2V0RWxlbWVu
dFR5cGUoKTsKKwkJCWNoZWNrU291cmNlUmFuZ2Uobm9kZSwgIlN0cmluZyIsIHNvdXJjZVVuaXQu
Z2V0U291cmNlKCkpOworCQl9CiAJfQogCiAJLyoqCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FT
VFN0cnVjdHVyYWxQcm9wZXJ0eVRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3Rz
Lm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUU3RydWN0dXJhbFBy
b3BlcnR5VGVzdC5qYXZhCmluZGV4IDJiZjRiODcuLmIzOTI4MTEgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9kb20vQVNUU3RydWN0dXJhbFByb3BlcnR5VGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNU
U3RydWN0dXJhbFByb3BlcnR5VGVzdC5qYXZhCkBAIC0xNzIsNyArMTcyLDcgQEAKIAkJCQlicmVh
azsKIAkJCWNhc2UgQVNULkpMUzggOgogCQkJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9m
IHZpc2l0ZWQgbm9kZSBjbGFzc2VzIiwgODQsIG5vZGVDbGFzc2VzLnNpemUoKSk7Ci0JCQkJYXNz
ZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgdmlzaXRlZCBwcm9wZXJ0aWVzIiwgMTA1LCB2aXNp
dGVkUHJvcGVydGllcy5zaXplKCkpOworCQkJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9m
IHZpc2l0ZWQgcHJvcGVydGllcyIsIDEwNiwgdmlzaXRlZFByb3BlcnRpZXMuc2l6ZSgpKTsKIAkJ
CQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiBzaW1wbGUgcHJvcGVydGllcyIsIDIxLCBz
aW1wbGVQcm9wZXJ0aWVzLnNpemUoKSk7CiAJCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIg
b2YgY2hpbGQgcHJvcGVydGllcyIsIDExOCwgY2hpbGRQcm9wZXJ0aWVzLnNpemUoKSk7CiAJCQkJ
YXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2YgY2hpbGQgbGlzdCBwcm9wZXJ0aWVzIiwgNjYs
IGNoaWxkTGlzdFByb3BlcnRpZXMuc2l6ZSgpKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNU
VGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RUZXN0LmphdmEKaW5kZXggNmViMzBhOS4uY2NmYjM3
YyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9B
U1RUZXN0LmphdmEKQEAgLTIwNTcsNiArMjA1Nyw3IEBACiAJCWFzc2VydFRydWUoUHJpbWl0aXZl
VHlwZS50b0NvZGUoIm5vdC1hLXR5cGUiKSA9PSBudWxsKTsgLy8kTk9OLU5MUy0xJAogCX0KIAor
CS8qKiBAZGVwcmVjYXRlZCB1c2luZyBkZXByZWNhdGVkIGNvZGUgKi8KIAlwdWJsaWMgdm9pZCB0
ZXN0QXJyYXlUeXBlKCkgewogCQlTaW1wbGVOYW1lIHgxID0gdGhpcy5hc3QubmV3U2ltcGxlTmFt
ZSgiU3RyaW5nIik7IC8vJE5PTi1OTFMtMSQKIAkJU2ltcGxlVHlwZSB4MiA9IHRoaXMuYXN0Lm5l
d1NpbXBsZVR5cGUoeDEpOwpAQCAtMjA2Niw3ICsyMDY3LDExIEBACiAJCXByZXZpb3VzQ291bnQg
PSB0aGlzLmFzdC5tb2RpZmljYXRpb25Db3VudCgpOwogCQlhc3NlcnRUcnVlKHguZ2V0QVNUKCkg
PT0gdGhpcy5hc3QpOwogCQlhc3NlcnRUcnVlKHguZ2V0UGFyZW50KCkgPT0gbnVsbCk7Ci0JCWFz
c2VydFRydWUoeC5nZXRDb21wb25lbnRUeXBlKCkuZ2V0UGFyZW50KCkgPT0geCk7CisJCWlmICh0
aGlzLmFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsKKwkJCWFzc2VydFRydWUoeC5nZXRDb21w
b25lbnRUeXBlKCkuZ2V0UGFyZW50KCkgPT0geCk7CisJCX0gZWxzZSB7CisJCQlhc3NlcnRUcnVl
KHguZ2V0RWxlbWVudFR5cGUoKS5nZXRQYXJlbnQoKSA9PSB4KTsKKwkJfQogCQkvLyBtYWtlIHN1
cmUgdGhhdCByZWFkaW5nIGRpZCBub3QgY2hhbmdlIG1vZGlmaWNhdGlvbiBjb3VudAogCQlhc3Nl
cnRUcnVlKHRoaXMuYXN0Lm1vZGlmaWNhdGlvbkNvdW50KCkgPT0gcHJldmlvdXNDb3VudCk7CiAJ
CWFzc2VydFRydWUoIXguaXNTaW1wbGVUeXBlKCkpOwpAQCAtMjA4MSwzOSArMjA4Niw2OSBAQAog
CQlhc3NlcnRUcnVlKHguZ2V0RGltZW5zaW9ucygpID09IDEpOwogCQlhc3NlcnRUcnVlKHguZ2V0
RWxlbWVudFR5cGUoKSA9PSB4Mik7CiAKLQkJZ2VuZXJpY1Byb3BlcnR5VGVzdCh4LCBuZXcgUHJv
cGVydHkoIkNvbXBvbmVudFR5cGUiLCB0cnVlLCBUeXBlLmNsYXNzKSB7IC8vJE5PTi1OTFMtMSQK
LQkJCXB1YmxpYyBBU1ROb2RlIHNhbXBsZShBU1QgdGFyZ2V0QXN0LCBib29sZWFuIHBhcmVudGVk
KSB7Ci0JCQkJU2ltcGxlVHlwZSByZXN1bHQgPSB0YXJnZXRBc3QubmV3U2ltcGxlVHlwZSgKLQkJ
CQkJdGFyZ2V0QXN0Lm5ld1NpbXBsZU5hbWUoImEiKSk7IC8vJE5PTi1OTFMtMSQKLQkJCQlpZiAo
cGFyZW50ZWQpIHsKLQkJCQkJdGFyZ2V0QXN0Lm5ld0FycmF5VHlwZShyZXN1bHQpOworCQlpZiAo
dGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQlnZW5lcmljUHJvcGVydHlUZXN0
KHgsIG5ldyBQcm9wZXJ0eSgiQ29tcG9uZW50VHlwZSIsIHRydWUsIFR5cGUuY2xhc3MpIHsgLy8k
Tk9OLU5MUy0xJAorCQkJCXB1YmxpYyBBU1ROb2RlIHNhbXBsZShBU1QgdGFyZ2V0QXN0LCBib29s
ZWFuIHBhcmVudGVkKSB7CisJCQkJCVNpbXBsZVR5cGUgcmVzdWx0ID0gdGFyZ2V0QXN0Lm5ld1Np
bXBsZVR5cGUoCisJCQkJCQl0YXJnZXRBc3QubmV3U2ltcGxlTmFtZSgiYSIpKTsgLy8kTk9OLU5M
Uy0xJAorCQkJCQlpZiAocGFyZW50ZWQpIHsKKwkJCQkJCXRhcmdldEFzdC5uZXdBcnJheVR5cGUo
cmVzdWx0KTsKKwkJCQkJfQorCQkJCQlyZXR1cm4gcmVzdWx0OwogCQkJCX0KLQkJCQlyZXR1cm4g
cmVzdWx0OwotCQkJfQotCQkJcHVibGljIEFTVE5vZGUgd3JhcCgpIHsKLQkJCQlBcnJheVR5cGUg
cmVzdWx0ID0gQVNUVGVzdC50aGlzLmFzdC5uZXdBcnJheVR5cGUoeCk7Ci0JCQkJcmV0dXJuIHJl
c3VsdDsKLQkJCX0KLQkJCXB1YmxpYyB2b2lkIHVud3JhcCgpIHsKLQkJCQlBcnJheVR5cGUgYSA9
IChBcnJheVR5cGUpIHguZ2V0UGFyZW50KCk7Ci0JCQkJYS5zZXRDb21wb25lbnRUeXBlKEFTVFRl
c3QudGhpcy5hc3QubmV3UHJpbWl0aXZlVHlwZShQcmltaXRpdmVUeXBlLklOVCkpOwotCQkJfQot
CQkJcHVibGljIEFTVE5vZGUgZ2V0KCkgewotCQkJCXJldHVybiB4LmdldENvbXBvbmVudFR5cGUo
KTsKLQkJCX0KLQkJCXB1YmxpYyB2b2lkIHNldChBU1ROb2RlIHZhbHVlKSB7Ci0JCQkJeC5zZXRD
b21wb25lbnRUeXBlKChUeXBlKSB2YWx1ZSk7Ci0JCQl9Ci0JCX0pOworCQkJCXB1YmxpYyBBU1RO
b2RlIHdyYXAoKSB7CisJCQkJCUFycmF5VHlwZSByZXN1bHQgPSBBU1RUZXN0LnRoaXMuYXN0Lm5l
d0FycmF5VHlwZSh4KTsKKwkJCQkJcmV0dXJuIHJlc3VsdDsKKwkJCQl9CisJCQkJcHVibGljIHZv
aWQgdW53cmFwKCkgeworCQkJCQlBcnJheVR5cGUgYSA9IChBcnJheVR5cGUpIHguZ2V0UGFyZW50
KCk7CisJCQkJCWEuc2V0Q29tcG9uZW50VHlwZShBU1RUZXN0LnRoaXMuYXN0Lm5ld1ByaW1pdGl2
ZVR5cGUoUHJpbWl0aXZlVHlwZS5JTlQpKTsKKwkJCQl9CisJCQkJcHVibGljIEFTVE5vZGUgZ2V0
KCkgeworCQkJCQlyZXR1cm4geC5nZXRDb21wb25lbnRUeXBlKCk7CisJCQkJfQorCQkJCXB1Ymxp
YyB2b2lkIHNldChBU1ROb2RlIHZhbHVlKSB7CisJCQkJCXguc2V0Q29tcG9uZW50VHlwZSgoVHlw
ZSkgdmFsdWUpOworCQkJCX0KKwkJCX0pOwogCi0JCXguc2V0Q29tcG9uZW50VHlwZSgKLQkJCXRo
aXMuYXN0Lm5ld0FycmF5VHlwZSh0aGlzLmFzdC5uZXdQcmltaXRpdmVUeXBlKFByaW1pdGl2ZVR5
cGUuSU5UKSwgNCkpOworCQkJeC5zZXRDb21wb25lbnRUeXBlKAorCQkJCXRoaXMuYXN0Lm5ld0Fy
cmF5VHlwZSh0aGlzLmFzdC5uZXdQcmltaXRpdmVUeXBlKFByaW1pdGl2ZVR5cGUuSU5UKSwgNCkp
OworCQkJYXNzZXJ0VHJ1ZSh4LmdldERpbWVuc2lvbnMoKSA9PSA1KTsKKwkJCWFzc2VydFRydWUo
eC5nZXRFbGVtZW50VHlwZSgpLmlzUHJpbWl0aXZlVHlwZSgpKTsKKwkJCWZpbmFsIEFycmF5VHlw
ZSB4MyA9IHRoaXMuYXN0Lm5ld0FycmF5VHlwZSh4LCAyKTsKKwkJCWFzc2VydFRydWUoeDMuZ2V0
RGltZW5zaW9ucygpID09IDcpOworCQl9IGVsc2UgeworCQkJZ2VuZXJpY1Byb3BlcnR5VGVzdCh4
LCBuZXcgUHJvcGVydHkoIkVsZW1lbnRUeXBlIiwgdHJ1ZSwgVHlwZS5jbGFzcykgeyAvLyROT04t
TkxTLTEkCisJCQkJcHVibGljIEFTVE5vZGUgc2FtcGxlKEFTVCB0YXJnZXRBc3QsIGJvb2xlYW4g
cGFyZW50ZWQpIHsKKwkJCQkJU2ltcGxlVHlwZSByZXN1bHQgPSB0YXJnZXRBc3QubmV3U2ltcGxl
VHlwZSgKKwkJCQkJCXRhcmdldEFzdC5uZXdTaW1wbGVOYW1lKCJhIikpOyAvLyROT04tTkxTLTEk
CisJCQkJCWlmIChwYXJlbnRlZCkgeworCQkJCQkJdGFyZ2V0QXN0Lm5ld0FycmF5VHlwZShyZXN1
bHQpOworCQkJCQl9CisJCQkJCXJldHVybiByZXN1bHQ7CisJCQkJfQorCQkJCXB1YmxpYyBBU1RO
b2RlIHdyYXAoKSB7CisJCQkJCUFycmF5VHlwZSByZXN1bHQgPSBBU1RUZXN0LnRoaXMuYXN0Lm5l
d0FycmF5VHlwZSh4LCA1KTsKKwkJCQkJcmV0dXJuIHJlc3VsdDsKKwkJCQl9CisJCQkJcHVibGlj
IHZvaWQgdW53cmFwKCkgeworCQkJCQlBcnJheVR5cGUgYSA9IChBcnJheVR5cGUpIHguZ2V0UGFy
ZW50KCk7CisJCQkJCWEuc2V0RWxlbWVudFR5cGUoQVNUVGVzdC50aGlzLmFzdC5uZXdQcmltaXRp
dmVUeXBlKFByaW1pdGl2ZVR5cGUuSU5UKSk7CisJCQkJfQorCQkJCXB1YmxpYyBBU1ROb2RlIGdl
dCgpIHsKKwkJCQkJcmV0dXJuIHguZ2V0RWxlbWVudFR5cGUoKTsKKwkJCQl9CisJCQkJcHVibGlj
IHZvaWQgc2V0KEFTVE5vZGUgdmFsdWUpIHsKKwkJCQkJeC5zZXRFbGVtZW50VHlwZSgoVHlwZSkg
dmFsdWUpOworCQkJCX0KKwkJCX0pOwogCi0JCWFzc2VydFRydWUoeC5nZXREaW1lbnNpb25zKCkg
PT0gNSk7Ci0JCWFzc2VydFRydWUoeC5nZXRFbGVtZW50VHlwZSgpLmlzUHJpbWl0aXZlVHlwZSgp
KTsKLQkJZmluYWwgQXJyYXlUeXBlIHgzID0gdGhpcy5hc3QubmV3QXJyYXlUeXBlKHgsIDIpOwot
CQlhc3NlcnRUcnVlKHgzLmdldERpbWVuc2lvbnMoKSA9PSA3KTsKLQkJCisJCQl4LnNldEVsZW1l
bnRUeXBlKHRoaXMuYXN0Lm5ld1ByaW1pdGl2ZVR5cGUoUHJpbWl0aXZlVHlwZS5JTlQpKTsKKwkJ
CWFzc2VydFRydWUoeC5nZXREaW1lbnNpb25zKCkgPT0gMSk7CisJCQlhc3NlcnRUcnVlKHguZ2V0
RWxlbWVudFR5cGUoKS5pc1ByaW1pdGl2ZVR5cGUoKSk7CisJCX0KKwogCQl0cnkgewogCQkJdGhp
cy5hc3QubmV3QXJyYXlUeXBlKG51bGwsIDIpOwogCQl9IGNhdGNoKElsbGVnYWxBcmd1bWVudEV4
Y2VwdGlvbiBlKSB7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2Rl
bC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFZpc2l0b3JUZXN0LmphdmEg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvZG9tL0FTVFZpc2l0b3JUZXN0LmphdmEKaW5kZXggYTk0Y2IyNC4uMDc2ZDQ2YSAx
MDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RWaXNpdG9yVGVzdC5qYXZhCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9k
b20vQVNUVmlzaXRvclRlc3QuamF2YQpAQCAtMTE1Nyw3ICsxMTU3LDggQEAKIAkJdGhpcy5iLnNl
dExlbmd0aCgwKTsKIAkJeDEuYWNjZXB0KHYxKTsKIAkJU3RyaW5nIHJlc3VsdCA9IHRoaXMuYi50
b1N0cmluZygpOwotCQlhc3NlcnRUcnVlKCJbKHRBWyh0UGNoYXJjaGFydFApXXRBKV0iLmVxdWFs
cyhyZXN1bHQpKTsgLy8kTk9OLU5MUy0xJAorCQlTdHJpbmcgZXhwZWN0ZWQgPSB0aGlzLmFzdC5h
cGlMZXZlbCgpIDwgQVNULkpMUzggPyAiWyh0QVsodFBjaGFyY2hhcnRQKV10QSldIiA6ICJbKHRB
Wyh0UGNoYXJjaGFydFApXVsoQEVEQEVEKV10QSldIjsKKwkJYXNzZXJ0VHJ1ZShleHBlY3RlZC5l
cXVhbHMocmVzdWx0KSk7IC8vJE5PTi1OTFMtMSQKIAl9CiAKIAkvKiogQGRlcHJlY2F0ZWQgdXNp
bmcgZGVwcmVjYXRlZCBjb2RlICovCkBAIC0xMjU0LDcgKzEyNTUsOCBAQAogCQl0aGlzLmIuc2V0
TGVuZ3RoKDApOwogCQl4MS5hY2NlcHQodjEpOwogCQlTdHJpbmcgcmVzdWx0ID0gdGhpcy5iLnRv
U3RyaW5nKCk7Ci0JCWFzc2VydFRydWUocmVzdWx0LmVxdWFscygiWyhlQUMiKyJbKHRBIit0aGlz
LlQxUysidEEpXSIrdGhpcy5FMVMrdGhpcy5FMlMrIlsoZUFJZUFJKV1lQUMpXSIpKTsgLy8kTk9O
LU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAorCQlTdHJp
bmcgZGltID0gdGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4ID8gIiIgOiAiWyhARURARUQp
XSI7CisJCWFzc2VydFRydWUocmVzdWx0LmVxdWFscygiWyhlQUMiKyJbKHRBIit0aGlzLlQxUysg
ZGltICsidEEpXSIrdGhpcy5FMVMrdGhpcy5FMlMrIlsoZUFJZUFJKV1lQUMpXSIpKTsgLy8kTk9O
LU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAogCX0KIAlw
dWJsaWMgdm9pZCB0ZXN0QXJyYXlJbml0aWFsaXplcigpIHsKIAkJQXJyYXlJbml0aWFsaXplciB4
MSA9IHRoaXMuYXN0Lm5ld0FycmF5SW5pdGlhbGl6ZXIoKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9k
b20vVHlwZUFubm90YXRpb25zQ29udmVydGVyVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9UeXBlQW5u
b3RhdGlvbnNDb252ZXJ0ZXJUZXN0LmphdmEKaW5kZXggMWNhMGNiMy4uYzdlZmViMCAxMDA2NDQK
LS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pk
dC9jb3JlL3Rlc3RzL2RvbS9UeXBlQW5ub3RhdGlvbnNDb252ZXJ0ZXJUZXN0LmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL2RvbS9UeXBlQW5ub3RhdGlvbnNDb252ZXJ0ZXJUZXN0LmphdmEKQEAgLTEsNSArMSw1
IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEy
IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0IChjKSAyMDAwLCAyMDEz
IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhp
cyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwogICogYXJlIG1hZGUgYXZh
aWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4w
CiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJs
ZSBhdApAQCAtMTYyLDcgKzE2Miw3IEBACiAJCQkJImNsYXNzIFo8UT4ge1xuIiArIAogCQkJCSIg
ICAgfVxuIiArIAogCQkJCSIgIH1cbiIgKyAKLQkJCQkiICBPYmplY3Qgbz0oQE1hcmtlciBYPEBN
YXJrZXIgU3RyaW5nPi5ATWFya2VyIFk8QE1hcmtlciBJbnRlZ2VyPi5ATWFya2VyIFo8QE1hcmtl
ciBPYmplY3Q+QE1hcmtlciBbXVtdQE1hcmtlciBbXVtdKW51bGw7XG4iICsgCisJCQkJIiAgT2Jq
ZWN0IG89KEBNYXJrZXIgWDxATWFya2VyIFN0cmluZz4uQE1hcmtlciBZPEBNYXJrZXIgSW50ZWdl
cj4uQE1hcmtlciBaPEBNYXJrZXIgT2JqZWN0PiBATWFya2VyIFtdIFtdIEBNYXJrZXIgW10gW10p
bnVsbDtcbiIgKyAKIAkJCQkiICBAamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0KGphdmEubGFu
Zy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlLlRZUEVfVVNFKSBAaW50ZXJmYWNlIE1hcmtlciB7fVxu
IiArIAogCQkJCSJ9XG4iOwogCQlhc3NlcnRBU1ROb2RlRXF1YWxzKGV4cGVjdGVkT3V0cHV0LCBu
b2RlKTsKQEAgLTE5MSw3ICsxOTEsNyBAQAogCQkJCSJjbGFzcyBaPFE+IHtcbiIgKyAKIAkJCQki
ICAgIH1cbiIgKyAKIAkJCQkiICB9XG4iICsgCi0JCQkJIiAgT2JqZWN0IG89KEBNYXJrZXIgWDxA
TWFya2VyIFN0cmluZz4uQE1hcmtlciBZPEBNYXJrZXIgSW50ZWdlcj4uQE1hcmtlciBaPEBNYXJr
ZXIgT2JqZWN0PltdQE1hcmtlciBbXVtdQE1hcmtlciBbXSludWxsO1xuIiArIAorCQkJCSIgIE9i
amVjdCBvPShATWFya2VyIFg8QE1hcmtlciBTdHJpbmc+LkBNYXJrZXIgWTxATWFya2VyIEludGVn
ZXI+LkBNYXJrZXIgWjxATWFya2VyIE9iamVjdD4gW10gQE1hcmtlciBbXSBbXSBATWFya2VyIFtd
KW51bGw7XG4iICsgCiAJCQkJIiAgQGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldChqYXZhLmxh
bmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZS5UWVBFX1VTRSkgQGludGVyZmFjZSBNYXJrZXIge31c
biIgKyAKIAkJCQkifVxuIjsKIAkJYXNzZXJ0QVNUTm9kZUVxdWFscyhleHBlY3RlZE91dHB1dCwg
bm9kZSk7CkBAIC0yMjAsNyArMjIwLDcgQEAKIAkJCQkiY2xhc3MgWjxRPiB7XG4iICsgCiAJCQkJ
IiAgICB9XG4iICsgCiAJCQkJIiAgfVxuIiArIAotCQkJCSIgIGludFtdW11bXVtdIG89KEBPbmUg
aW50W11AVHdvIFtdW11AVGhyZWUgW10pbnVsbDtcbiIgKyAKKwkJCQkiICBpbnQgW10gW10gW10g
W10gbz0oQE9uZSBpbnQgW10gQFR3byBbXSBbXSBAVGhyZWUgW10pbnVsbDtcbiIgKyAKIAkJCQki
ICBAamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0KGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1l
bnRUeXBlLlRZUEVfVVNFKSBAaW50ZXJmYWNlIE1hcmtlciB7fVxuIiArIAogCQkJCSJ9XG4iOwog
CQlhc3NlcnRBU1ROb2RlRXF1YWxzKGV4cGVjdGVkT3V0cHV0LCBub2RlKTsKQEAgLTI0OSw3ICsy
NDksNyBAQAogCQkJCSJjbGFzcyBaPFE+IHtcbiIgKyAKIAkJCQkiICAgIH1cbiIgKyAKIAkJCQki
ICB9XG4iICsgCi0JCQkJIiAgU3RyaW5nW11bXVtdW10gbz0oQE9uZSBTdHJpbmdbXUBUd28gW11b
XUBUaHJlZSBbXSludWxsO1xuIiArIAorCQkJCSIgIFN0cmluZyBbXSBbXSBbXSBbXSBvPShAT25l
IFN0cmluZyBbXSBAVHdvIFtdIFtdIEBUaHJlZSBbXSludWxsO1xuIiArIAogCQkJCSIgIEBqYXZh
LmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQoamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGUu
VFlQRV9VU0UpIEBpbnRlcmZhY2UgTWFya2VyIHt9XG4iICsgCiAJCQkJIn1cbiI7CiAJCWFzc2Vy
dEFTVE5vZGVFcXVhbHMoZXhwZWN0ZWRPdXRwdXQsIG5vZGUpOwpAQCAtMjc4LDcgKzI3OCw3IEBA
CiAJCQkJImNsYXNzIFo8UT4ge1xuIiArIAogCQkJCSIgICAgfVxuIiArIAogCQkJCSIgIH1cbiIg
KyAKLQkJCQkiICBPYmplY3Qgbz0oQE9uZSBYPFN0cmluZz5bXUBUd28gW11bXUBUaHJlZSBbXSlu
dWxsO1xuIiArIAorCQkJCSIgIE9iamVjdCBvPShAT25lIFg8U3RyaW5nPiBbXSBAVHdvIFtdIFtd
IEBUaHJlZSBbXSludWxsO1xuIiArIAogCQkJCSIgIEBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJn
ZXQoamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGUuVFlQRV9VU0UpIEBpbnRlcmZhY2Ug
TWFya2VyIHt9XG4iICsgCiAJCQkJIn1cbiI7CiAJCWFzc2VydEFTVE5vZGVFcXVhbHMoZXhwZWN0
ZWRPdXRwdXQsIG5vZGUpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
bW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9B
U1RSZXdyaXRpbmdFeHByZXNzaW9uc1Rlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJp
bmcvQVNUUmV3cml0aW5nRXhwcmVzc2lvbnNUZXN0LmphdmEKaW5kZXggMGFmZjRmOC4uOWU4ZWRl
ZCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdFeHBy
ZXNzaW9uc1Rlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3Jp
dGluZ0V4cHJlc3Npb25zVGVzdC5qYXZhCkBAIC0yNjMsMjMgKzI2MywyNSBAQAogCQkJbWVtYmVy
VmFsdWVQYWlyLnNldE5hbWUoYXN0Lm5ld1NpbXBsZU5hbWUoInYiKSk7CiAJCQltZW1iZXJWYWx1
ZVBhaXIuc2V0VmFsdWUoYXN0Lm5ld051bWJlckxpdGVyYWwoIjk5IikpOwogCQkJYW5ub3RhdGlv
bkMudmFsdWVzKCkuYWRkKG1lbWJlclZhbHVlUGFpcik7Ci0JCQlhcnJheVR5cGUuYW5ub3RhdGlv
bnMoKS5hZGQoYW5ub3RhdGlvbkMpOworCQkJRXh0cmFEaW1lbnNpb24gZGltMCA9IGFycmF5VHlw
ZS5nZXREaW1lbnNpb25ObygwKTsKKwkJCWRpbTAuYW5ub3RhdGlvbnMoKS5hZGQoYW5ub3RhdGlv
bkMpOwogCQkJCi0JCQlhcnJheVR5cGU9IGFzdC5uZXdBcnJheVR5cGUoYXJyYXlUeXBlKTsKIAkJ
CVNpbmdsZU1lbWJlckFubm90YXRpb24gYW5ub3RhdGlvbkI9IGFzdC5uZXdTaW5nbGVNZW1iZXJB
bm5vdGF0aW9uKCk7CiAJCQlhbm5vdGF0aW9uQi5zZXRUeXBlTmFtZShhc3QubmV3U2ltcGxlTmFt
ZSgiQiIpKTsKIAkJCWFubm90YXRpb25CLnNldFZhbHVlKGFzdC5uZXdOdW1iZXJMaXRlcmFsKCIw
IikpOwotCQkJYXJyYXlUeXBlLmFubm90YXRpb25zKCkuYWRkKGFubm90YXRpb25CKTsKKwkJCUV4
dHJhRGltZW5zaW9uIGRpbTEgPSBhc3QubmV3RXh0cmFEaW1lbnNpb24oKTsKKwkJCWRpbTEuYW5u
b3RhdGlvbnMoKS5hZGQoYW5ub3RhdGlvbkIpOworCQkJYXJyYXlUeXBlLmRpbWVuc2lvbnMoKS5h
ZGQoMCwgZGltMSk7CiAJCQkKLQkJCWFycmF5VHlwZT0gYXN0Lm5ld0FycmF5VHlwZShhcnJheVR5
cGUpOwogCQkJTWFya2VyQW5ub3RhdGlvbiBhbm5vdGF0aW9uQT0gYXN0Lm5ld01hcmtlckFubm90
YXRpb24oKTsKIAkJCWFubm90YXRpb25BLnNldFR5cGVOYW1lKGFzdC5uZXdTaW1wbGVOYW1lKCJB
IikpOwotCQkJYXJyYXlUeXBlLmFubm90YXRpb25zKCkuYWRkKGFubm90YXRpb25BKTsKLQkJCQot
CQkJYXJyYXlDcmVhdGlvbi5zZXRUeXBlKGFycmF5VHlwZSk7CisJCQlFeHRyYURpbWVuc2lvbiBk
aW0yID0gYXN0Lm5ld0V4dHJhRGltZW5zaW9uKCk7CisJCQlkaW0yLmFubm90YXRpb25zKCkuYWRk
KGFubm90YXRpb25BKTsKKwkJCWFycmF5VHlwZS5kaW1lbnNpb25zKCkuYWRkKDAsIGRpbTIpOwog
CQkJCiAJCQlhcnJheUNyZWF0aW9uLmRpbWVuc2lvbnMoKS5hZGQoYXN0Lm5ld051bWJlckxpdGVy
YWwoIjEiKSk7CiAJCQlhcnJheUNyZWF0aW9uLmRpbWVuc2lvbnMoKS5hZGQoYXN0Lm5ld051bWJl
ckxpdGVyYWwoIjIiKSk7CisJCQlhcnJheUNyZWF0aW9uLnNldFR5cGUoYXJyYXlUeXBlKTsKIAkJ
CQogCQkJcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShpbnZvY2F0aW9uLCBNZXRob2RJbnZvY2F0aW9u
LkFSR1VNRU5UU19QUk9QRVJUWSkuaW5zZXJ0TGFzdChhcnJheUNyZWF0aW9uLCBudWxsKTsKIAkJ
fQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdNZXRo
b2REZWNsVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdN
ZXRob2REZWNsVGVzdC5qYXZhCmluZGV4IDdhMjEyMjUuLjVkYTAyNjIgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90
ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0aG9kRGVjbFRlc3QuamF2YQor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ01ldGhvZERlY2xUZXN0
LmphdmEKQEAgLTExMSw3ICsxMTEsNyBAQAogCQkJCWxpc3RSZXdyaXRlLnJlbW92ZShleHRyYURp
bWVuc2lvbiwgbnVsbCk7CiAJCQl9CiAJCQlmb3IgKGludCBpPSAwOyBpIDwgZXh0cmFEaW1lbnNp
b25zOyBpKyspIHsKLQkJCQlsaXN0UmV3cml0ZS5pbnNlcnRMYXN0KG1ldGhvZERlY2wuZ2V0QVNU
KCkubmV3RXh0cmFEaW1lbnNpb24oKSwgbnVsbCk7CisJCQkJbGlzdFJld3JpdGUuaW5zZXJ0Rmly
c3QobWV0aG9kRGVjbC5nZXRBU1QoKS5uZXdFeHRyYURpbWVuc2lvbigpLCBudWxsKTsKIAkJCX0K
IAkJfQogCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3Ny
Yy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0
aW5nU3RhdGVtZW50c1Rlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVs
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3
cml0aW5nU3RhdGVtZW50c1Rlc3QuamF2YQppbmRleCAwODJmYTU3Li4zYTIyNDQ3IDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ1N0YXRlbWVudHNUZXN0
LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdTdGF0ZW1l
bnRzVGVzdC5qYXZhCkBAIC01OTQyLDI0ICs1OTQyLDI1IEBACiAJCQlMaXN0UmV3cml0ZSBsaXN0
UmV3cml0ZT0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShmcmFnbWVudCwgVmFyaWFibGVEZWNsYXJh
dGlvbkZyYWdtZW50LkVYVFJBX0RJTUVOU0lPTlMyX1BST1BFUlRZKTsKIAkJCUV4dHJhRGltZW5z
aW9uIGRpbT0gYXN0Lm5ld0V4dHJhRGltZW5zaW9uKCk7CiAJCQlNYXJrZXJBbm5vdGF0aW9uIG1h
cmtlckFubm90YXRpb247Ci0JCQlsaXN0UmV3cml0ZS5pbnNlcnRBdChkaW0sIDAsIG51bGwpOwor
CQkJbGlzdFJld3JpdGUuaW5zZXJ0Rmlyc3QoZGltLCBudWxsKTsKIAogCQkJQXJyYXlUeXBlIGNy
ZWF0aW9uVHlwZSA9IGNyZWF0aW9uLmdldFR5cGUoKTsKLQkJCUFycmF5VHlwZSBuZXdBcnJheVR5
cGUgPSBhc3QubmV3QXJyYXlUeXBlKChBcnJheVR5cGUpIEFTVE5vZGUuY29weVN1YnRyZWUoYXN0
LCBjcmVhdGlvblR5cGUpKTsKLQkJCW5ld0FycmF5VHlwZSA9IGFzdC5uZXdBcnJheVR5cGUobmV3
QXJyYXlUeXBlKTsKLQkJCXJld3JpdGUuc2V0KGNyZWF0aW9uLCBBcnJheUNyZWF0aW9uLlRZUEVf
UFJPUEVSVFksIG5ld0FycmF5VHlwZSwgbnVsbCk7Ci0KLQkJCWxpc3RSZXdyaXRlPSByZXdyaXRl
LmdldExpc3RSZXdyaXRlKG5ld0FycmF5VHlwZSwgQXJyYXlUeXBlLkFOTk9UQVRJT05TX1BST1BF
UlRZKTsKKwkJCUFycmF5VHlwZSBuZXdBcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBBU1ROb2RlLmNv
cHlTdWJ0cmVlKGFzdCwgY3JlYXRpb25UeXBlKTsKKwkJCW5ld0FycmF5VHlwZS5kaW1lbnNpb25z
KCkuYWRkKGFzdC5uZXdFeHRyYURpbWVuc2lvbigpKTsKKwkJCQorCQkJRXh0cmFEaW1lbnNpb24g
ZGltMCA9IGFzdC5uZXdFeHRyYURpbWVuc2lvbigpOwogCQkJbWFya2VyQW5ub3RhdGlvbj0gYXN0
Lm5ld01hcmtlckFubm90YXRpb24oKTsKIAkJCW1hcmtlckFubm90YXRpb24uc2V0VHlwZU5hbWUo
YXN0Lm5ld1NpbXBsZU5hbWUoIkFubm90MyIpKTsKLQkJCWxpc3RSZXdyaXRlLmluc2VydEF0KG1h
cmtlckFubm90YXRpb24sIDAsIG51bGwpOwotCQkJbmV3QXJyYXlUeXBlLmFubm90YXRpb25zKCku
YWRkKG1hcmtlckFubm90YXRpb24pOworCQkJZGltMC5hbm5vdGF0aW9ucygpLmFkZChtYXJrZXJB
bm5vdGF0aW9uKTsKIAkJCW1hcmtlckFubm90YXRpb249IGFzdC5uZXdNYXJrZXJBbm5vdGF0aW9u
KCk7CiAJCQltYXJrZXJBbm5vdGF0aW9uLnNldFR5cGVOYW1lKGFzdC5uZXdTaW1wbGVOYW1lKCJB
bm5vdDIiKSk7Ci0JCQlsaXN0UmV3cml0ZS5pbnNlcnRBdChtYXJrZXJBbm5vdGF0aW9uLCAxLCBu
dWxsKTsKKwkJCWRpbTAuYW5ub3RhdGlvbnMoKS5hZGQobWFya2VyQW5ub3RhdGlvbik7CiAJCQlt
YXJrZXJBbm5vdGF0aW9uPSBhc3QubmV3TWFya2VyQW5ub3RhdGlvbigpOwogCQkJbWFya2VyQW5u
b3RhdGlvbi5zZXRUeXBlTmFtZShhc3QubmV3U2ltcGxlTmFtZSgiQW5ub3QxIikpOwotCQkJbGlz
dFJld3JpdGUuaW5zZXJ0QXQobWFya2VyQW5ub3RhdGlvbiwgMiwgbnVsbCk7CisJCQlkaW0wLmFu
bm90YXRpb25zKCkuYWRkKG1hcmtlckFubm90YXRpb24pOworCQkJbmV3QXJyYXlUeXBlLmRpbWVu
c2lvbnMoKS5hZGQoZGltMCk7CisJCQlyZXdyaXRlLnNldChjcmVhdGlvbiwgQXJyYXlDcmVhdGlv
bi5UWVBFX1BST1BFUlRZLCBuZXdBcnJheVR5cGUsIG51bGwpOworCiAJCX0KIAkJewogCQkJc3Rh
dGVtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpIHN0YXRlbWVudHMuZ2V0KDEp
OwpAQCAtNTk3OCw0MyArNTk3OSw0NCBAQAogCQkJRXhwcmVzc2lvbiBleHAgPSAoRXhwcmVzc2lv
bikgZXhwcmVzc2lvbnMuZ2V0KDEpOwogCQkJbGlzdFJld3JpdGUucmVtb3ZlKGV4cCwgbnVsbCk7
CiAKLQkJCWxpc3RSZXdyaXRlID0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShjcmVhdGlvblR5cGUs
IEFycmF5VHlwZS5BTk5PVEFUSU9OU19QUk9QRVJUWSk7Ci0JCQlNYXJrZXJBbm5vdGF0aW9uIGFu
bm90YXRpb24gPSAoTWFya2VyQW5ub3RhdGlvbikgY3JlYXRpb25UeXBlLmFubm90YXRpb25zKCku
Z2V0KDApOworCQkJRXh0cmFEaW1lbnNpb24gZGltID0gY3JlYXRpb25UeXBlLmdldERpbWVuc2lv
bk5vKDIpOworCQkJbGlzdFJld3JpdGUgPSByZXdyaXRlLmdldExpc3RSZXdyaXRlKGRpbSwgRXh0
cmFEaW1lbnNpb24uQU5OT1RBVElPTlNfUFJPUEVSVFkpOworCQkJTWFya2VyQW5ub3RhdGlvbiBh
bm5vdGF0aW9uID0gKE1hcmtlckFubm90YXRpb24pIGRpbS5hbm5vdGF0aW9ucygpLmdldCgwKTsK
IAkJCWxpc3RSZXdyaXRlLnJlbW92ZShhbm5vdGF0aW9uLCBudWxsKTsKIAotCQkJY3JlYXRpb25U
eXBlID0gKEFycmF5VHlwZSkgY3JlYXRpb25UeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJCWxp
c3RSZXdyaXRlID0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShjcmVhdGlvblR5cGUsIEFycmF5VHlw
ZS5BTk5PVEFUSU9OU19QUk9QRVJUWSk7Ci0JCQlhbm5vdGF0aW9uID0gKE1hcmtlckFubm90YXRp
b24pIGNyZWF0aW9uVHlwZS5hbm5vdGF0aW9ucygpLmdldCgxKTsKKwkJCWRpbSA9IGNyZWF0aW9u
VHlwZS5nZXREaW1lbnNpb25ObygxKTsKKwkJCWxpc3RSZXdyaXRlID0gcmV3cml0ZS5nZXRMaXN0
UmV3cml0ZShkaW0sIEV4dHJhRGltZW5zaW9uLkFOTk9UQVRJT05TX1BST1BFUlRZKTsKKwkJCWFu
bm90YXRpb24gPSAoTWFya2VyQW5ub3RhdGlvbikgZGltLmFubm90YXRpb25zKCkuZ2V0KDEpOwog
CQkJbGlzdFJld3JpdGUucmVtb3ZlKGFubm90YXRpb24sIG51bGwpOwogCi0JCQljcmVhdGlvblR5
cGUgPSAoQXJyYXlUeXBlKSBjcmVhdGlvblR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQkJbGlz
dFJld3JpdGUgPSByZXdyaXRlLmdldExpc3RSZXdyaXRlKGNyZWF0aW9uVHlwZSwgQXJyYXlUeXBl
LkFOTk9UQVRJT05TX1BST1BFUlRZKTsKLQkJCWFubm90YXRpb24gPSAoTWFya2VyQW5ub3RhdGlv
bikgY3JlYXRpb25UeXBlLmFubm90YXRpb25zKCkuZ2V0KDEpOworCQkJZGltID0gY3JlYXRpb25U
eXBlLmdldERpbWVuc2lvbk5vKDApOworCQkJbGlzdFJld3JpdGUgPSByZXdyaXRlLmdldExpc3RS
ZXdyaXRlKGRpbSwgRXh0cmFEaW1lbnNpb24uQU5OT1RBVElPTlNfUFJPUEVSVFkpOworCQkJYW5u
b3RhdGlvbiA9IChNYXJrZXJBbm5vdGF0aW9uKSBkaW0uYW5ub3RhdGlvbnMoKS5nZXQoMSk7CiAJ
CQlsaXN0UmV3cml0ZS5yZW1vdmUoYW5ub3RhdGlvbiwgbnVsbCk7CiAKIAkJCWZyYWdtZW50ID0g
KFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJhZ21lbnRzLmdldCgxKTsKIAogCQkJY3Jl
YXRpb24gPSAoQXJyYXlDcmVhdGlvbikgZnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKIAkJCWNy
ZWF0aW9uVHlwZSA9IGNyZWF0aW9uLmdldFR5cGUoKTsKLQotCQkJbGlzdFJld3JpdGUgPSByZXdy
aXRlLmdldExpc3RSZXdyaXRlKGNyZWF0aW9uVHlwZSwgQXJyYXlUeXBlLkFOTk9UQVRJT05TX1BS
T1BFUlRZKTsKLQkJCWFubm90YXRpb24gPSAoTWFya2VyQW5ub3RhdGlvbikgY3JlYXRpb25UeXBl
LmFubm90YXRpb25zKCkuZ2V0KDApOworCQkJZGltID0gY3JlYXRpb25UeXBlLmdldERpbWVuc2lv
bk5vKDIpOworCQkJbGlzdFJld3JpdGUgPSByZXdyaXRlLmdldExpc3RSZXdyaXRlKGRpbSwgRXh0
cmFEaW1lbnNpb24uQU5OT1RBVElPTlNfUFJPUEVSVFkpOworCQkJYW5ub3RhdGlvbiA9IChNYXJr
ZXJBbm5vdGF0aW9uKSBkaW0uYW5ub3RhdGlvbnMoKS5nZXQoMSk7CiAJCQlsaXN0UmV3cml0ZS5y
ZW1vdmUoYW5ub3RhdGlvbiwgbnVsbCk7Ci0JCQlhbm5vdGF0aW9uID0gKE1hcmtlckFubm90YXRp
b24pIGNyZWF0aW9uVHlwZS5hbm5vdGF0aW9ucygpLmdldCgxKTsKKwkJCWFubm90YXRpb24gPSAo
TWFya2VyQW5ub3RhdGlvbikgZGltLmFubm90YXRpb25zKCkuZ2V0KDApOwogCQkJbGlzdFJld3Jp
dGUucmVtb3ZlKGFubm90YXRpb24sIG51bGwpOwogCi0JCQljcmVhdGlvblR5cGUgPSAoQXJyYXlU
eXBlKSBjcmVhdGlvblR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQkJbGlzdFJld3JpdGUgPSBy
ZXdyaXRlLmdldExpc3RSZXdyaXRlKGNyZWF0aW9uVHlwZSwgQXJyYXlUeXBlLkFOTk9UQVRJT05T
X1BST1BFUlRZKTsKLQkJCWFubm90YXRpb24gPSAoTWFya2VyQW5ub3RhdGlvbikgY3JlYXRpb25U
eXBlLmFubm90YXRpb25zKCkuZ2V0KDApOworCQkJZGltID0gY3JlYXRpb25UeXBlLmdldERpbWVu
c2lvbk5vKDEpOworCQkJbGlzdFJld3JpdGUgPSByZXdyaXRlLmdldExpc3RSZXdyaXRlKGRpbSwg
RXh0cmFEaW1lbnNpb24uQU5OT1RBVElPTlNfUFJPUEVSVFkpOworCQkJYW5ub3RhdGlvbiA9IChN
YXJrZXJBbm5vdGF0aW9uKSBkaW0uYW5ub3RhdGlvbnMoKS5nZXQoMSk7CiAJCQlsaXN0UmV3cml0
ZS5yZW1vdmUoYW5ub3RhdGlvbiwgbnVsbCk7Ci0JCQlhbm5vdGF0aW9uID0gKE1hcmtlckFubm90
YXRpb24pIGNyZWF0aW9uVHlwZS5hbm5vdGF0aW9ucygpLmdldCgxKTsKKwkJCWFubm90YXRpb24g
PSAoTWFya2VyQW5ub3RhdGlvbikgZGltLmFubm90YXRpb25zKCkuZ2V0KDApOwogCQkJbGlzdFJl
d3JpdGUucmVtb3ZlKGFubm90YXRpb24sIG51bGwpOwogCi0JCQljcmVhdGlvblR5cGUgPSAoQXJy
YXlUeXBlKSBjcmVhdGlvblR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQkJbGlzdFJld3JpdGUg
PSByZXdyaXRlLmdldExpc3RSZXdyaXRlKGNyZWF0aW9uVHlwZSwgQXJyYXlUeXBlLkFOTk9UQVRJ
T05TX1BST1BFUlRZKTsKLQkJCWFubm90YXRpb24gPSAoTWFya2VyQW5ub3RhdGlvbikgY3JlYXRp
b25UeXBlLmFubm90YXRpb25zKCkuZ2V0KDApOworCQkJZGltID0gY3JlYXRpb25UeXBlLmdldERp
bWVuc2lvbk5vKDApOworCQkJbGlzdFJld3JpdGUgPSByZXdyaXRlLmdldExpc3RSZXdyaXRlKGRp
bSwgRXh0cmFEaW1lbnNpb24uQU5OT1RBVElPTlNfUFJPUEVSVFkpOworCQkJYW5ub3RhdGlvbiA9
IChNYXJrZXJBbm5vdGF0aW9uKSBkaW0uYW5ub3RhdGlvbnMoKS5nZXQoMSk7CiAJCQlsaXN0UmV3
cml0ZS5yZW1vdmUoYW5ub3RhdGlvbiwgbnVsbCk7Ci0JCQlhbm5vdGF0aW9uID0gKE1hcmtlckFu
bm90YXRpb24pIGNyZWF0aW9uVHlwZS5hbm5vdGF0aW9ucygpLmdldCgxKTsKKwkJCWFubm90YXRp
b24gPSAoTWFya2VyQW5ub3RhdGlvbikgZGltLmFubm90YXRpb25zKCkuZ2V0KDApOwogCQkJbGlz
dFJld3JpdGUucmVtb3ZlKGFubm90YXRpb24sIG51bGwpOwogCiAJCQlleHByZXNzaW9ucyA9IGNy
ZWF0aW9uLmRpbWVuc2lvbnMoKTsKQEAgLTYwMzUsOCArNjAzNyw4IEBACiAJCWJ1Zi5hcHBlbmQo
ImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZTtcbiIpOwogCQlidWYuYXBw
ZW5kKCJwdWJsaWMgY2xhc3MgRSB7XG4iKTsKIAkJYnVmLmFwcGVuZCgiICAgIHB1YmxpYyB2b2lk
IGZvbygpIHtcbiIpOwotCQlidWYuYXBwZW5kKCIgICAgCWludCBbXSBpIFtdIEBBbm5vdDEgQEFu
bm90MiBbXSBAQW5ub3QxIEBBbm5vdDMgW10gPSBuZXcgaW50IEBBbm5vdDEgQEFubm90MiAgWzJd
IEBBbm5vdDIgQEFubm90MyBbc2l6ZSgpXSBAQW5ub3QyIEBBbm5vdDEgW11bXSBAQW5ub3QzIEBB
bm5vdDIgQEFubm90MVtdO1xuIik7Ci0JCWJ1Zi5hcHBlbmQoIiAgICAJaW50IFtdIGogW11bXSA9
IG5ldyBpbnQgQEFubm90MSBbMl0gQEFubm90MiBbXSBAQW5ub3QzIFtdLCBrIFtdW10gPSBuZXcg
aW50WzJdWzEwXVtzaXplKCldO1xuIik7CisJCWJ1Zi5hcHBlbmQoIiAgICAJaW50IFtdIGkgW10g
QEFubm90MSBAQW5ub3QyIFtdIEBBbm5vdDEgQEFubm90MyBbXSA9IG5ldyBpbnQgQEFubm90MSBA
QW5ub3QyICBbMl0gQEFubm90MiBAQW5ub3QzIFtzaXplKCldIEBBbm5vdDIgQEFubm90MSBbXVtd
QEFubm90MyBAQW5ub3QyIEBBbm5vdDEgW107XG4iKTsKKwkJYnVmLmFwcGVuZCgiICAgIAlpbnQg
W10gaiBbXVtdID0gbmV3IGludCBAQW5ub3QyIFsyXSBAQW5ub3QyIFtdIEBBbm5vdDEgW10sIGsg
W11bXSA9IG5ldyBpbnQgWzJdIFsxMF0gW3NpemUoKV07XG4iKTsKIAkJYnVmLmFwcGVuZCgiICAg
IH1cbiIpOwogCQlidWYuYXBwZW5kKCIgICAgcHVibGljIGludCBzaXplKCkgeyByZXR1cm4gMjsg
fVxuIik7CiAJCWJ1Zi5hcHBlbmQoIn1cbiIpOwpAQCAtNjA4NiwxMCArNjA4OCwxMCBAQAogCQkJ
QXJyYXlDcmVhdGlvbiBjcmVhdGlvbiA9IChBcnJheUNyZWF0aW9uKSBmcmFnbWVudC5nZXRJbml0
aWFsaXplcigpOwogCiAJCQlBcnJheVR5cGUgYXJyYXlUeXBlID0gY3JlYXRpb24uZ2V0VHlwZSgp
OwotCQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUo
KTsKLQkJCUxpc3RSZXdyaXRlIGxpc3RSZXdyaXRlPSByZXdyaXRlLmdldExpc3RSZXdyaXRlKGFy
cmF5VHlwZSwgQXJyYXlUeXBlLkFOTk9UQVRJT05TX1BST1BFUlRZKTsKLQkJCWxpc3RSZXdyaXRl
LnJlbW92ZSgoQVNUTm9kZSlhcnJheVR5cGUuYW5ub3RhdGlvbnMoKS5nZXQoMCksIG51bGwpOwot
CQkJbGlzdFJld3JpdGUucmVtb3ZlKChBU1ROb2RlKWFycmF5VHlwZS5hbm5vdGF0aW9ucygpLmdl
dCgxKSwgbnVsbCk7CisJCQlFeHRyYURpbWVuc2lvbiBkaW0gPSBhcnJheVR5cGUuZ2V0RGltZW5z
aW9uTm8oMSk7CisJCQlMaXN0UmV3cml0ZSBsaXN0UmV3cml0ZT0gcmV3cml0ZS5nZXRMaXN0UmV3
cml0ZShkaW0sIEV4dHJhRGltZW5zaW9uLkFOTk9UQVRJT05TX1BST1BFUlRZKTsKKwkJCWxpc3RS
ZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSlkaW0uYW5ub3RhdGlvbnMoKS5nZXQoMCksIG51bGwpOwor
CQkJbGlzdFJld3JpdGUucmVtb3ZlKChBU1ROb2RlKWRpbS5hbm5vdGF0aW9ucygpLmdldCgxKSwg
bnVsbCk7CiAJCQlyZXdyaXRlLnNldChjcmVhdGlvbiwgQXJyYXlDcmVhdGlvbi5UWVBFX1BST1BF
UlRZLCBhcnJheVR5cGUsIG51bGwpOwogCQl9CiAJCXsKQEAgLTYxMDEsMTYgKzYxMDMsMTIgQEAK
IAkJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IHR5cGUiLCBBU1ROb2RlLkFSUkFZX1RZUEUsIHR5
cGUuZ2V0Tm9kZVR5cGUoKSk7CiAJCQlBcnJheUNyZWF0aW9uIGNyZWF0aW9uID0gKEFycmF5Q3Jl
YXRpb24pIGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CiAJCQlBcnJheVR5cGUgY3JlYXRpb25U
eXBlID0gY3JlYXRpb24uZ2V0VHlwZSgpOwotCi0JCQlBcnJheVR5cGUgbmV3QXJyYXlUeXBlID0g
KEFycmF5VHlwZSkgY3JlYXRpb25UeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJCXJld3JpdGUu
c2V0KGNyZWF0aW9uLCBBcnJheUNyZWF0aW9uLlRZUEVfUFJPUEVSVFksIG5ld0FycmF5VHlwZSwg
bnVsbCk7Ci0KKwkJCXJld3JpdGUucmVtb3ZlKGNyZWF0aW9uVHlwZS5nZXREaW1lbnNpb25Obygw
KSwgbnVsbCk7CiAJCQlmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZy
YWdtZW50cy5nZXQoMSk7CiAJCQljcmVhdGlvbiA9IChBcnJheUNyZWF0aW9uKSBmcmFnbWVudC5n
ZXRJbml0aWFsaXplcigpOwogCQkJY3JlYXRpb25UeXBlID0gY3JlYXRpb24uZ2V0VHlwZSgpOwog
Ci0JCQluZXdBcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjcmVhdGlvblR5cGUuZ2V0Q29tcG9uZW50
VHlwZSgpOwotCQkJcmV3cml0ZS5zZXQoY3JlYXRpb24sIEFycmF5Q3JlYXRpb24uVFlQRV9QUk9Q
RVJUWSwgbmV3QXJyYXlUeXBlLCBudWxsKTsKKwkJCXJld3JpdGUucmVtb3ZlKGNyZWF0aW9uVHlw
ZS5nZXREaW1lbnNpb25ObygwKSwgbnVsbCk7CiAJCX0KIAkJLy8gR2V0IG5ldyBjb2RlCiAJCVN0
cmluZyBwcmV2aWV3PSBldmFsdWF0ZVJld3JpdGUoY3UsIHJld3JpdGUpOwpAQCAtNjEyMCw3ICs2
MTE4LDcgQEAKIAkJYnVmLmFwcGVuZCgiaW1wb3J0IGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1l
bnRUeXBlO1xuIik7CiAJCWJ1Zi5hcHBlbmQoInB1YmxpYyBjbGFzcyBFIHtcbiIpOwogCQlidWYu
YXBwZW5kKCIgICAgcHVibGljIHZvaWQgZm9vKCkge1xuIik7Ci0JCWJ1Zi5hcHBlbmQoIiAgICAJ
aW50IFtdIGkgW11bXSA9IG5ldyBpbnQgQEFubm90MSBAQW5ub3QyICBbMl1bc2l6ZShuZXcgaW50
W11bXXt9KV07XG4iKTsKKwkJYnVmLmFwcGVuZCgiICAgIAlpbnQgW10gaSBbXVtdID0gbmV3IGlu
dCBAQW5ub3QxIEBBbm5vdDIgIFsyXSAgW3NpemUobmV3IGludFtdW117fSldIFtdO1xuIik7CiAJ
CWJ1Zi5hcHBlbmQoIiAgICAJaW50IFtdIGogW11bXSA9IG5ldyBpbnQgQEFubm90MSBAQW5ub3Qy
IFsyXSBAQW5ub3QyIEBBbm5vdDMgW3NpemUobmV3IGludFtde30pXSwgayBbXVtdID0gbmV3IGlu
dCBAQW5ub3QxIEBBbm5vdDIgWzJdIEBBbm5vdDIgQEFubm90MyBbMTBdO1xuIik7CiAJCWJ1Zi5h
cHBlbmQoIiAgICB9XG4iKTsKIAkJYnVmLmFwcGVuZCgiICAgIHB1YmxpYyBpbnQgc2l6ZShPYmpl
Y3Qgb2JqKSB7IHJldHVybiAyOyB9XG4iKTsKQEAgLTYxMzcsMyArNjEzNSw0IEBACiAKIAogCisK
ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29y
ZS9kb20vQVNULmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0
L2NvcmUvZG9tL0FTVC5qYXZhCmluZGV4IDc4Zjg5Y2YuLjA3YjAzOWYgMTAwNjQ0Ci0tLSBhL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNULmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9B
U1QuamF2YQpAQCAtOTk5LDYgKzk5OSwxMyBAQAogCX0KIAogCS8qKgorCSAqIEEgbG9jYWwgbWV0
aG9kIHRvIHdvcmthcm91bmQgY2FsbGluZyBkZXByZWNhdGVkIG1ldGhvZCBpbiBhcnJheSB0eXBl
LgorCSAqLworCXByaXZhdGUgdm9pZCBzZXRBcnJheUNvbXBvbmVudFR5cGUoQXJyYXlUeXBlIGFy
cmF5VHlwZSwgVHlwZSB0eXBlKSB7CisJCWFycmF5VHlwZS5zZXRDb21wb25lbnRUeXBlKHR5cGUp
OworCX0KKworCS8qKgogCSAqIENyZWF0ZXMgYW5kIHJldHVybnMgYSBuZXcgdW5wYXJlbnRlZCBh
bm5vdGF0aW9uIHR5cGUgZGVjbGFyYXRpb24KIAkgKiBub2RlIGZvciBhbiB1bnNwZWNpZmllZCwg
YnV0IGxlZ2FsLCBuYW1lOyBubyBtb2RpZmllcnM7IG5vIGphdmFkb2M7CiAJICogYW5kIGFuIGVt
cHR5IGxpc3Qgb2YgbWVtYmVyIGRlY2xhcmF0aW9ucy4KQEAgLTExMDksMTkgKzExMTYsMzEgQEAK
IAogCS8qKgogCSAqIENyZWF0ZXMgYW5kIHJldHVybnMgYSBuZXcgdW5wYXJlbnRlZCBhcnJheSB0
eXBlIG5vZGUgd2l0aCB0aGUgZ2l2ZW4KLQkgKiBjb21wb25lbnQgdHlwZSwgd2hpY2ggbWF5IGJl
IGFub3RoZXIgYXJyYXkgdHlwZS4KKwkgKiBjb21wb25lbnQgdHlwZSwgd2hpY2ggbWF5IGJlIGFu
b3RoZXIgYXJyYXkgdHlwZSBmb3IgbGV2ZWxzIGxlc3MgdGhhbiBKTFM4LgorCSAqIEZvciBKTFM4
IGFuZCBhYm92ZSB0aGlzIHR5cGUgaGFzIHRvIGJlIGFuIGFubm90YXRhYmxlIHR5cGUuCiAJICoK
LQkgKiBAcGFyYW0gY29tcG9uZW50VHlwZSB0aGUgY29tcG9uZW50IHR5cGUgKHBvc3NpYmx5IGFu
b3RoZXIgYXJyYXkgdHlwZSkKKwkgKiBAcGFyYW0gdHlwZSB0aGUgY29tcG9uZW50IHR5cGUgKHBv
c3NpYmx5IGFub3RoZXIgYXJyYXkgdHlwZSkgZm9yIGxldmVsIDwgSkxTOCwgCisJICogYSBhbm5v
dGF0YWJsZSB0eXBlIGZvciBKTFM4IGFuZCBhYm92ZQogCSAqIEByZXR1cm4gYSBuZXcgdW5wYXJl
bnRlZCBhcnJheSB0eXBlIG5vZGUKIAkgKiBAZXhjZXB0aW9uIElsbGVnYWxBcmd1bWVudEV4Y2Vw
dGlvbiBpZjoKIAkgKiA8dWw+CiAJICogPGxpPnRoZSBub2RlIGJlbG9uZ3MgdG8gYSBkaWZmZXJl
bnQgQVNUPC9saT4KIAkgKiA8bGk+dGhlIG5vZGUgYWxyZWFkeSBoYXMgYSBwYXJlbnQ8L2xpPgor
CSAqIDxsaT4gbGV2ZWwgPj0gSkxTOCBhbmQgdHlwZSBub3QgYW4gYXJyYXkgdHlwZTwvbGk+CiAJ
ICogPC91bD4KIAkgKi8KLQlwdWJsaWMgQXJyYXlUeXBlIG5ld0FycmF5VHlwZShUeXBlIGNvbXBv
bmVudFR5cGUpIHsKLQkJQXJyYXlUeXBlIHJlc3VsdCA9IG5ldyBBcnJheVR5cGUodGhpcyk7Ci0J
CXJlc3VsdC5zZXRDb21wb25lbnRUeXBlKGNvbXBvbmVudFR5cGUpOworCXB1YmxpYyBBcnJheVR5
cGUgbmV3QXJyYXlUeXBlKFR5cGUgdHlwZSkgeworCQlBcnJheVR5cGUgcmVzdWx0OworCQlpZiAo
dGhpcy5hcGlMZXZlbCA8IEFTVC5KTFM4KSB7CisJCQlyZXN1bHQgPSBuZXcgQXJyYXlUeXBlKHRo
aXMpOworCQkJc2V0QXJyYXlDb21wb25lbnRUeXBlKHJlc3VsdCwgdHlwZSk7CisJCQlyZXR1cm4g
cmVzdWx0OworCQl9CisJCWlmICh0eXBlLmlzQXJyYXlUeXBlKCkpIHsKKwkJCXRocm93IG5ldyBJ
bGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oKTsKKwkJfQorCQlyZXN1bHQgPSBuZXcgQXJyYXlUeXBl
KHRoaXMpOworCQlyZXN1bHQuc2V0RWxlbWVudFR5cGUodHlwZSk7CiAJCXJldHVybiByZXN1bHQ7
CiAJfQogCkBAIC0xMTMzLDcgKzExNTIsNyBAQAogCSAqIGVsZW1lbnQgdHlwZSBvZiB0aGUgcmVz
dWx0IHdpbGwgbm90IGJlIHRoZSBzYW1lIGFzIHdoYXQgd2FzIHBhc3NlZCBpbi4KIAkgKiA8L3A+
CiAJICoKLQkgKiBAcGFyYW0gZWxlbWVudFR5cGUgdGhlIGVsZW1lbnQgdHlwZSAoY2FuIGJlIGFu
IGFycmF5IHR5cGUpCisJICogQHBhcmFtIGVsZW1lbnRUeXBlIHRoZSBlbGVtZW50IHR5cGUgKGNh
biBiZSBhbiBhcnJheSB0eXBlIGZvciBKTFM4LiBGb3IgPkpMUzggdGhpcyBzaG91bGQgYmUgYW4g
YW5ub3RhdGFibGUgdHlwZSkKIAkgKiBAcGFyYW0gZGltZW5zaW9ucyB0aGUgbnVtYmVyIG9mIGRp
bWVuc2lvbnMsIGEgcG9zaXRpdmUgbnVtYmVyCiAJICogQHJldHVybiBhIG5ldyB1bnBhcmVudGVk
IGFycmF5IHR5cGUgbm9kZQogCSAqIEBleGNlcHRpb24gSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9u
IGlmOgpAQCAtMTE0Myw2ICsxMTYyLDcgQEAKIAkgKiA8bGk+dGhlIGVsZW1lbnQgdHlwZSBpcyBu
dWxsPC9saT4KIAkgKiA8bGk+dGhlIG51bWJlciBvZiBkaW1lbnNpb25zIGlzIGxvd2VyIHRoYW4g
MTwvbGk+CiAJICogPGxpPnRoZSBudW1iZXIgb2YgZGltZW5zaW9ucyBpcyBncmVhdGVyIHRoYW4g
MTAwMDwvbGk+CisJICogPGxpPmZvciBsZXZlbHMgZnJvbSBKTFM4IGFuZCBsYXRlciwgaWYgdGhl
IGVsZW1lbnQgdHlwZSBpcyBub3QgYW4gYXJyYXkgdHlwZSA8L2xpPgogCSAqIDwvdWw+CiAJICov
CiAJcHVibGljIEFycmF5VHlwZSBuZXdBcnJheVR5cGUoVHlwZSBlbGVtZW50VHlwZSwgaW50IGRp
bWVuc2lvbnMpIHsKQEAgLTExNTAsMTMgKzExNzAsMjcgQEAKIAkJCXRocm93IG5ldyBJbGxlZ2Fs
QXJndW1lbnRFeGNlcHRpb24oKTsKIAkJfQogCQlpZiAoZGltZW5zaW9ucyA8IDEgfHwgZGltZW5z
aW9ucyA+IDEwMDApIHsKLQkJCS8vIHdlIHdvdWxkIGJsb3cgb3VyIHN0YWNrcyBhbnl3YXkgd2l0
aCBhIDEwMDAtRCBhcnJheQorCQkJLy8gd2Ugd291bGRibG93IG91ciBzdGFja3MgYW55d2F5IHdp
dGggYSAxMDAwLUQgYXJyYXkKIAkJCXRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24o
KTsKIAkJfQotCQlBcnJheVR5cGUgcmVzdWx0ID0gbmV3IEFycmF5VHlwZSh0aGlzKTsKLQkJcmVz
dWx0LnNldENvbXBvbmVudFR5cGUoZWxlbWVudFR5cGUpOwotCQlmb3IgKGludCBpID0gMjsgaSA8
PSBkaW1lbnNpb25zOyBpKyspIHsKLQkJCXJlc3VsdCA9IG5ld0FycmF5VHlwZShyZXN1bHQpOwor
CQlBcnJheVR5cGUgcmVzdWx0OworCQlpZiAodGhpcy5hcGlMZXZlbCA8IEFTVC5KTFM4KSB7CisJ
CQlyZXN1bHQgPSBuZXcgQXJyYXlUeXBlKHRoaXMpOworCQkJc2V0QXJyYXlDb21wb25lbnRUeXBl
KHJlc3VsdCwgZWxlbWVudFR5cGUpOworCQkJZm9yIChpbnQgaSA9IDI7IGkgPD0gZGltZW5zaW9u
czsgaSsrKSB7CisJCQkJcmVzdWx0ID0gbmV3QXJyYXlUeXBlKHJlc3VsdCk7CisJCQl9CisJCQly
ZXR1cm4gcmVzdWx0OworCQl9CisJCS8vbGV2ZWwgPj0gSkxTOAorCQlpZiAoZWxlbWVudFR5cGUu
aXNBcnJheVR5cGUoKSkgeworCQkJdGhyb3cgbmV3IElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbigp
OworCQl9CisJCXJlc3VsdCA9IG5ldyBBcnJheVR5cGUodGhpcyk7CisJCXJlc3VsdC5zZXRFbGVt
ZW50VHlwZShlbGVtZW50VHlwZSk7CisJCS8vIGluZGV4IHN0YXJ0aW5nIGZyb20gMSBzaW5jZSB0
aGVyZSBpcyBhIGRpbWVuc2lvbiBhbHJlYWR5IGF2YWlsYWJsZSBieSBkZWZhdWx0LgorCQlmb3Ig
KGludCBpID0gMTsgaSA8IGRpbWVuc2lvbnM7ICsraSkgeworCQkJcmVzdWx0LmRpbWVuc2lvbnMo
KS5hZGQobmV3IEV4dHJhRGltZW5zaW9uKHRoaXMpKTsKIAkJfQogCQlyZXR1cm4gcmVzdWx0Owog
CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2Nv
cmUvZG9tL0FTVENvbnZlcnRlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIuamF2YQppbmRleCA3OWY5MzMxLi4zYTEx
MDJlIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0
L2NvcmUvZG9tL0FTVENvbnZlcnRlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Rv
bS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUQ29udmVydGVyLmphdmEKQEAgLTQ2NSw2ICs0
NjUsMTEgQEAKIAogCXByb3RlY3RlZCB2b2lkIGNvbXBsZXRlUmVjb3JkKEFycmF5VHlwZSBhcnJh
eVR5cGUsIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQVNUTm9kZSBhc3RO
b2RlKSB7CiAJCUFycmF5VHlwZSBhcnJheSA9IGFycmF5VHlwZTsKKwkJaWYgKHRoaXMuYXN0LmFw
aUxldmVsKCkgPj0gQVNULkpMUzgpIHsKKwkJCXRoaXMucmVjb3JkTm9kZXMoYXJyYXlUeXBlLCBh
c3ROb2RlKTsKKwkJCXRoaXMucmVjb3JkTm9kZXMoYXJyYXlUeXBlLmdldEVsZW1lbnRUeXBlKCks
IGFzdE5vZGUpOworCQkJcmV0dXJuOworCQl9CiAJCWludCBkaW1lbnNpb25zID0gYXJyYXkuZ2V0
RGltZW5zaW9ucygpOwogCQlmb3IgKGludCBpID0gMDsgaSA8IGRpbWVuc2lvbnM7IGkrKykgewog
CQkJVHlwZSBjb21wb25lbnRUeXBlID0gYXJyYXkuZ2V0Q29tcG9uZW50VHlwZSgpOwpAQCAtOTA5
LDEyICs5MTQsMTggQEAKIAkJaWYgKGlzVmFyQXJncykgewogCQkJc2V0VHlwZUZvclNpbmdsZVZh
cmlhYmxlRGVjbGFyYXRpb24odmFyaWFibGVEZWNsLCB0eXBlLCBleHRyYURpbWVuc2lvbnMgKyAx
KTsKIAkJCS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0z
OTE4OTgKLQkJCWlmICh0eXBlLmlzQW5ub3RhdGFibGUoKSkgewotCQkJCUFubm90YXRhYmxlVHlw
ZSBhbm5vdGF0YWJsZVR5cGUgPSAoQW5ub3RhdGFibGVUeXBlKSB0eXBlOwotCQkJCWlmICh0aGlz
LmFzdC5hcGlMZXZlbCgpID49IEFTVC5KTFM4ICYmICFhbm5vdGF0YWJsZVR5cGUuYW5ub3RhdGlv
bnMoKS5pc0VtcHR5KCkpIHsKLQkJCQkJSXRlcmF0b3IgYW5ub3RhdGlvbnMgPSBhbm5vdGF0YWJs
ZVR5cGUuYW5ub3RhdGlvbnMoKS5pdGVyYXRvcigpOwotCQkJCQl3aGlsZSAoYW5ub3RhdGlvbnMu
aGFzTmV4dCgpKSB7Ci0JCQkJCQlBbm5vdGF0aW9uIGFubm90YXRpb24gPSAoQW5ub3RhdGlvbikg
YW5ub3RhdGlvbnMubmV4dCgpOworCQkJaWYgKHRoaXMuYXN0LmFwaUxldmVsKCkgPj0gQVNULkpM
UzgpIHsKKwkJCQlMaXN0IGFubm90YXRpb25zICA9IG51bGw7CisJCQkJaWYgKHR5cGUuaXNBbm5v
dGF0YWJsZSgpKSB7CisJCQkJCWFubm90YXRpb25zID0gKChBbm5vdGF0YWJsZVR5cGUpIHR5cGUp
LmFubm90YXRpb25zKCk7CisJCQkJfSBlbHNlIGlmICh0eXBlLmlzQXJyYXlUeXBlKCkpIHsKKwkJ
CQkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7CisJCQkJCWFubm90YXRp
b25zID0gYXJyYXlUeXBlLmRpbWVuc2lvbnMoKS5pc0VtcHR5KCkgPyBudWxsIDogKChhcnJheVR5
cGUuZ2V0RGltZW5zaW9uTm8oMCkpLmFubm90YXRpb25zKCkpOworCQkJCX0KKwkJCQlpZiAoYW5u
b3RhdGlvbnMgIT0gbnVsbCkgeworCQkJCQlJdGVyYXRvciBpdGVyID0gYW5ub3RhdGlvbnMuaXRl
cmF0b3IoKTsKKwkJCQkJd2hpbGUgKGl0ZXIuaGFzTmV4dCgpKSB7CisJCQkJCQlBbm5vdGF0aW9u
IGFubm90YXRpb24gPSAoQW5ub3RhdGlvbikgaXRlci5uZXh0KCk7CiAJCQkJCQlhbm5vdGF0aW9u
LnNldFBhcmVudChudWxsLCBudWxsKTsKIAkJCQkJCXZhcmlhYmxlRGVjbC52YXJhcmdzQW5ub3Rh
dGlvbnMoKS5hZGQoYW5ub3RhdGlvbik7CiAJCQkJCX0KQEAgLTk3OSw2ICs5OTAsNyBAQAogCQkJ
cmVjb3JkTm9kZXModHlwZSwgZXhwcmVzc2lvbi50eXBlKTsKIAkJfQogCQlBcnJheVR5cGUgYXJy
YXlUeXBlID0gbnVsbDsKKwkJaW50IHNhdmVkU3RhcnQgPSAtMTsKIAkJaWYgKHR5cGUuaXNBcnJh
eVR5cGUoKSkgewogCQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKIAkJfSBlbHNlIHsK
QEAgLTk4OSwxNSArMTAwMSwzNCBAQAogCQkJaW50IHN0YXJ0ID0gdHlwZS5nZXRTdGFydFBvc2l0
aW9uKCk7CiAJCQlpbnQgZW5kID0gdHlwZS5nZXRTdGFydFBvc2l0aW9uKCkgKyB0eXBlLmdldExl
bmd0aCgpOwogCQkJaW50IHByZXZpb3VzU2VhcmNoU3RhcnQgPSBlbmQgLSAxOwotCQkJQXJyYXlU
eXBlIGNvbXBvbmVudFR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlLmdldFBhcmVudCgpOwotCQkJZm9y
IChpbnQgaSA9IDA7IGkgPCBkaW1lbnNpb25zTGVuZ3RoOyBpKyspIHsKLQkJCQlwcmV2aW91c1Nl
YXJjaFN0YXJ0ID0gcmV0cmlldmVSaWdodEJyYWNrZXRQb3NpdGlvbihwcmV2aW91c1NlYXJjaFN0
YXJ0ICsgMSwgdGhpcy5jb21waWxhdGlvblVuaXRTb3VyY2VMZW5ndGgpOwotCQkJCWNvbXBvbmVu
dFR5cGUuc2V0U291cmNlUmFuZ2Uoc3RhcnQsIHByZXZpb3VzU2VhcmNoU3RhcnQgLSBzdGFydCAr
IDEpOwotCQkJCWNvbXBvbmVudFR5cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBlLmdldFBh
cmVudCgpOworCQkJaWYgKHRoaXMuYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgeworCQkJCUFy
cmF5VHlwZSBjb21wb25lbnRUeXBlID0gKEFycmF5VHlwZSkgdHlwZS5nZXRQYXJlbnQoKTsKKwkJ
CQlmb3IgKGludCBpID0gMDsgaSA8IGRpbWVuc2lvbnNMZW5ndGg7IGkrKykgeworCQkJCQlwcmV2
aW91c1NlYXJjaFN0YXJ0ID0gcmV0cmlldmVSaWdodEJyYWNrZXRQb3NpdGlvbihwcmV2aW91c1Nl
YXJjaFN0YXJ0ICsgMSwgdGhpcy5jb21waWxhdGlvblVuaXRTb3VyY2VMZW5ndGgpOworCQkJCQlj
b21wb25lbnRUeXBlLnNldFNvdXJjZVJhbmdlKHN0YXJ0LCBwcmV2aW91c1NlYXJjaFN0YXJ0IC0g
c3RhcnQgKyAxKTsKKwkJCQkJY29tcG9uZW50VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5
cGUuZ2V0UGFyZW50KCk7CisJCQkJfQorCQkJfSBlbHNlIHsKKwkJCQlzYXZlZFN0YXJ0ID0gc3Rh
cnQ7CisJCQkJc3RhcnQgPSB0eXBlLmdldFN0YXJ0UG9zaXRpb24oKSArIHR5cGUuZ2V0TGVuZ3Ro
KCk7CisJCQkJZW5kID0gc3RhcnQgLSAxOworCisJCQkJZm9yIChpbnQgaSA9IDA7IGkgPD0gZGlt
ZW5zaW9uc0xlbmd0aCAtIDE7IGkrKykgeworCQkJCQlFeHRyYURpbWVuc2lvbiBjdXJyZW50RGlt
ZW5zaW9uID0gKEV4dHJhRGltZW5zaW9uKSBhcnJheVR5cGUuZGltZW5zaW9ucygpLmdldChpKTsK
KwkJCQkJZW5kID0gcmV0cmlldmVSaWdodEJyYWNrZXRQb3NpdGlvbihzdGFydCwgdGhpcy5jb21w
aWxhdGlvblVuaXRTb3VyY2VMZW5ndGgpOworCQkJCQljdXJyZW50RGltZW5zaW9uLnNldFNvdXJj
ZVJhbmdlKHN0YXJ0LCBlbmQgLSBzdGFydCArIDEpOworCQkJCQlzdGFydCA9IGVuZCArIDE7CisJ
CQkJfQorCisJCQkJYXJyYXlUeXBlLnNldFNvdXJjZVJhbmdlKHNhdmVkU3RhcnQsIGVuZCAtIHNh
dmVkU3RhcnQgKyAxKTsKIAkJCX0KIAkJfQogCQlpZiAoZXhwcmVzc2lvbi5hbm5vdGF0aW9uc09u
RGltZW5zaW9ucyAhPSBudWxsKSB7Ci0JCQlhbm5vdGF0ZVR5cGUoYXJyYXlUeXBlLCBleHByZXNz
aW9uLmFubm90YXRpb25zT25EaW1lbnNpb25zKTsKKwkJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCgp
IDwgQVNULkpMUzgpIHsKKwkJCQlhcnJheVR5cGUuc2V0RmxhZ3MoYXJyYXlUeXBlLmdldEZsYWdz
KCkgfCBBU1ROb2RlLk1BTEZPUk1FRCk7CisJCQl9IGVsc2UgeworCQkJCXNldEFycmF5VHlwZUFu
bm90YXRpb25zQW5kU291cmNlKGFycmF5VHlwZSwgZXhwcmVzc2lvbi5hbm5vdGF0aW9uc09uRGlt
ZW5zaW9ucyk7CisJCQl9CiAJCX0KIAkJYXJyYXlDcmVhdGlvbi5zZXRUeXBlKGFycmF5VHlwZSk7
CiAJCWlmICh0aGlzLnJlc29sdmVCaW5kaW5ncykgewpAQCAtMzEyMSw2ICszMTUyLDQzIEBACiAJ
CXJldHVybiBwYWNrYWdlRGVjbGFyYXRpb247CiAJfQogCisJcHJpdmF0ZSBBcnJheVR5cGUgY29u
dmVydFRvQXJyYXkoVHlwZVJlZmVyZW5jZSB0eXBlLCBUeXBlIHN1YlR5cGUsIGludCBzb3VyY2VT
dGFydCwgaW50IGxlbmd0aCwgaW50IG5vRGltZW5zaW9ucykgeworCQlBcnJheVR5cGUgYXJyYXlU
eXBlID0gdGhpcy5hc3QubmV3QXJyYXlUeXBlKHN1YlR5cGUsIG5vRGltZW5zaW9ucyk7CisJCWlu
dCBwb3NzaWJsZUVuZCA9IHJldHJpZXZlUHJvcGVyUmlnaHRCcmFja2V0UG9zaXRpb24oMSwgc291
cmNlU3RhcnQpOworCQlpbnQgcG9zc2libGVMZW5ndGggPSBwb3NzaWJsZUVuZCAtIHNvdXJjZVN0
YXJ0ICsgMTsKKwkJYXJyYXlUeXBlLnNldFNvdXJjZVJhbmdlKHNvdXJjZVN0YXJ0LCBsZW5ndGgg
PCBwb3NzaWJsZUxlbmd0aCA/IHBvc3NpYmxlTGVuZ3RoIDogbGVuZ3RoKTsKKwkJb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uW11bXSBhbm5vdGF0aW9uc09u
RGltcyA9IHR5cGUuZ2V0QW5ub3RhdGlvbnNPbkRpbWVuc2lvbnMoKTsKKwkJaWYgKHRoaXMuYXN0
LmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgeworCQkJaWYgKGFubm90YXRpb25zT25EaW1zICE9IG51
bGwpIHsKKwkJCQlhcnJheVR5cGUuc2V0RmxhZ3MoYXJyYXlUeXBlLmdldEZsYWdzKCkgfCBBU1RO
b2RlLk1BTEZPUk1FRCk7CisJCQl9CisJCQlBcnJheVR5cGUgc3ViYXJyYXlUeXBlID0gYXJyYXlU
eXBlOworCQkJaW50IGluZGV4ID0gbm9EaW1lbnNpb25zIC0gMTsKKwkJCXdoaWxlIChpbmRleCA+
IDApIHsKKwkJCQlzdWJhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBzdWJhcnJheVR5cGUuZ2V0Q29t
cG9uZW50VHlwZSgpOworCQkJCWludCBlbmQgPSByZXRyaWV2ZVByb3BlclJpZ2h0QnJhY2tldFBv
c2l0aW9uKGluZGV4LCBzb3VyY2VTdGFydCk7CisJCQkJc3ViYXJyYXlUeXBlLnNldFNvdXJjZVJh
bmdlKHNvdXJjZVN0YXJ0LCBlbmQgLSBzb3VyY2VTdGFydCArIDEpOworCQkJCWluZGV4LS07CisJ
CQl9CisJCQlyZXR1cm4gYXJyYXlUeXBlOworCQl9CisKKwkJaWYgKGFubm90YXRpb25zT25EaW1z
ICE9IG51bGwpIHsKKwkJCXNldEFycmF5VHlwZUFubm90YXRpb25zQW5kU291cmNlKGFycmF5VHlw
ZSwgYW5ub3RhdGlvbnNPbkRpbXMpOworCQl9IGVsc2UgeworCQkJaW50IHN0YXJ0ID0gc3ViVHlw
ZS5nZXRTdGFydFBvc2l0aW9uKCkgKyBzdWJUeXBlLmdldExlbmd0aCgpOworCQkJaW50IGVuZCA9
IGFycmF5VHlwZS5nZXRTdGFydFBvc2l0aW9uKCkgKyBhcnJheVR5cGUuZ2V0TGVuZ3RoKCk7CisJ
CQlpbnQgbGFzdEluZGV4ID0gbm9EaW1lbnNpb25zIC0gMTsKKworCQkJZm9yIChpbnQgaSA9IDA7
IGkgPD0gbGFzdEluZGV4OyBpKyspIHsKKwkJCQlFeHRyYURpbWVuc2lvbiBjdXJyZW50RGltZW5z
aW9uID0gKEV4dHJhRGltZW5zaW9uKSBhcnJheVR5cGUuZGltZW5zaW9ucygpLmdldChpKTsKKwkJ
CQlyZXRyaWV2ZURpbWVuc2lvbkFuZFNldFBvc2l0aW9ucyhzdGFydCwgZW5kLCBjdXJyZW50RGlt
ZW5zaW9uKTsKKwkJCQlzdGFydCA9IGN1cnJlbnREaW1lbnNpb24uZ2V0U3RhcnRQb3NpdGlvbigp
ICsgY3VycmVudERpbWVuc2lvbi5nZXRMZW5ndGgoKTsKKwkJCX0KKwkJfQorCQlyZXR1cm4gYXJy
YXlUeXBlOworCX0KKwogCXByaXZhdGUgRW51bURlY2xhcmF0aW9uIGNvbnZlcnRUb0VudW1EZWNs
YXJhdGlvbihvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlR5cGVEZWNsYXJh
dGlvbiB0eXBlRGVjbGFyYXRpb24pIHsKIAkJY2hlY2tDYW5jZWxlZCgpOwogCQkvLyBlbnVtIGRl
Y2xhcmF0aW9uIGNhbm5vdCBiZSBidWlsdCBpZiB0aGUgc291cmNlIGlzIG5vdCA+PSAxLjUsIHNp
bmNlIGVudW0gaXMgdGhlbiBzZWVuIGFzIGFuIGlkZW50aWZpZXIKQEAgLTMzNTEsNiArMzQxOSwy
OCBAQAogCQl9CiAJfQogCisJcHJpdmF0ZSB2b2lkIHNldEFycmF5VHlwZUFubm90YXRpb25zQW5k
U291cmNlKEFycmF5VHlwZSBhcnJheVR5cGUsCisJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuYXN0LkFubm90YXRpb25bXVtdIGFubm90YXRpb25zT25EaW1zKSB7CisJCUxpc3Qg
ZGltZW5zaW9ucyA9IGFycmF5VHlwZS5kaW1lbnNpb25zKCk7CisJCVR5cGUgZWxlbVR5cGUgPSBh
cnJheVR5cGUuZ2V0RWxlbWVudFR5cGUoKTsKKwkJaW50IHN0YXJ0ID0gZWxlbVR5cGUuZ2V0U3Rh
cnRQb3NpdGlvbigpICsgZWxlbVR5cGUuZ2V0TGVuZ3RoKCk7CisJCWludCBlbmQgPSBhcnJheVR5
cGUuZ2V0U3RhcnRQb3NpdGlvbigpICsgYXJyYXlUeXBlLmdldExlbmd0aCgpOworCQlpbnQgbGFz
dEluZGV4ID0gZGltZW5zaW9ucy5zaXplKCkgLSAxOworCisJCWZvciAoaW50IGkgPSAwOyBpIDw9
IGxhc3RJbmRleDsgaSsrKSB7CisJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
YXN0LkFubm90YXRpb25bXSBhbm5vdGF0aW9uID0gYW5ub3RhdGlvbnNPbkRpbXNbaV07CisJCQlF
eHRyYURpbWVuc2lvbiBjdXJyZW50RGltZW5zaW9uID0gKEV4dHJhRGltZW5zaW9uKSBkaW1lbnNp
b25zLmdldChpKTsKKwkJCWlmIChhbm5vdGF0aW9uICE9IG51bGwpIHsKKwkJCQlmb3IgKGludCBq
ID0gMDsgaiA8IGFubm90YXRpb24ubGVuZ3RoOyBqKyspIHsKKwkJCQkJQW5ub3RhdGlvbiBhbm5v
dCA9IGNvbnZlcnQoYW5ub3RhdGlvbltqXSk7CisJCQkJCWN1cnJlbnREaW1lbnNpb24uYW5ub3Rh
dGlvbnMoKS5hZGQoYW5ub3QpOworCQkJCX0KKwkJCX0KKwkJCXJldHJpZXZlRGltZW5zaW9uQW5k
U2V0UG9zaXRpb25zKHN0YXJ0LCBlbmQsIGN1cnJlbnREaW1lbnNpb24pOworCQkJc3RhcnQgPSBj
dXJyZW50RGltZW5zaW9uLmdldFN0YXJ0UG9zaXRpb24oKSArIGN1cnJlbnREaW1lbnNpb24uZ2V0
TGVuZ3RoKCk7CisJCX0KKwl9CisKIAlwcm90ZWN0ZWQgVmFyaWFibGVEZWNsYXJhdGlvblN0YXRl
bWVudCBjb252ZXJ0VG9WYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb21waWxlci5hc3QuTG9jYWxEZWNsYXJhdGlvbiBsb2NhbERlY2xhcmF0aW9u
KSB7CiAJCWZpbmFsIFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCB2YXJpYWJsZURlY2xhcmF0
aW9uRnJhZ21lbnQgPSBjb252ZXJ0VG9WYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQobG9jYWxE
ZWNsYXJhdGlvbik7CiAJCWZpbmFsIFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgdmFyaWFi
bGVEZWNsYXJhdGlvblN0YXRlbWVudCA9IG5ldyBWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50
KHRoaXMuYXN0KTsKQEAgLTMzNzUsNiArMzQ2NSwxMCBAQAogCQkJCXR5cGUuc2V0RmxhZ3ModHlw
ZS5nZXRGbGFncygpIHwgQVNUTm9kZS5NQUxGT1JNRUQpOwogCQkJCWJyZWFrOwogCQkJZGVmYXVs
dDoKKwkJCQlpZiAoYW5ub3RhdGlvbnMgPT0gbnVsbCkgYnJlYWs7CisJCQkJaW50IHN0YXJ0ID0g
dHlwZS5nZXRTdGFydFBvc2l0aW9uKCk7CisJCQkJaW50IGFubm90YXRpb25zU3RhcnQgPSBzdGFy
dDsKKwkJCQlpbnQgbGVuZ3RoID0gdHlwZS5nZXRMZW5ndGgoKTsKIAkJCQlpbnQgYW5ub3RhdGlv
bnNMZW5ndGggPSBhbm5vdGF0aW9ucy5sZW5ndGg7CiAJCQkJZm9yIChpbnQgaSA9IDA7IGkgPCBh
bm5vdGF0aW9uc0xlbmd0aDsgaSsrKSB7CiAJCQkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5hc3QuQW5ub3RhdGlvbiB0eXBlQW5ub3RhdGlvbiA9IGFubm90YXRpb25zW2ldOwpA
QCAtMzM4MywyMCArMzQ3NywxMyBAQAogCQkJCQkJdHlwZS5hbm5vdGF0aW9ucygpLmFkZChhbm5v
dGF0aW9uKTsKIAkJCQkJfQogCQkJCX0KKwkJCQlpZiAoYW5ub3RhdGlvbnNbMF0gIT0gbnVsbCAm
JiAoYW5ub3RhdGlvbnNTdGFydCA9IGFubm90YXRpb25zWzBdLnNvdXJjZVN0YXJ0KSA8IHN0YXJ0
KSB7CisJCQkJCWxlbmd0aCArPSBhbm5vdGF0aW9uc1N0YXJ0ID4gMCA/IHN0YXJ0IC0gYW5ub3Rh
dGlvbnNTdGFydCA6IDA7CisJCQkJCXN0YXJ0ID0gYW5ub3RhdGlvbnNTdGFydDsKKwkJCQl9CisJ
CQkJdHlwZS5zZXRTb3VyY2VSYW5nZShzdGFydCwgbGVuZ3RoKTsKIAkJfQogCX0KLQlwcml2YXRl
IHZvaWQgYW5ub3RhdGVUeXBlKFR5cGUgdHlwZSwgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNv
bXBpbGVyLmFzdC5Bbm5vdGF0aW9uW11bXSBhbm5vdGF0aW9ucykgewotCQlpbnQgbGV2ZWwgPSBh
bm5vdGF0aW9ucy5sZW5ndGggLSAxOwotCQl3aGlsZSh0eXBlLmlzQXJyYXlUeXBlKCkpIHsKLQkJ
CUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQkJb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uW10gdHlwZUFubm90YXRpb25zID0g
YW5ub3RhdGlvbnNbbGV2ZWwtLV07Ci0JCQlpZiAodHlwZUFubm90YXRpb25zICE9IG51bGwpIHsK
LQkJCQlhbm5vdGF0ZVR5cGUoYXJyYXlUeXBlLCB0eXBlQW5ub3RhdGlvbnMpOwotCQkJfQotCQkJ
dHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCX0KLQl9Ci0KIAlwcml2YXRl
IHZvaWQgYW5ub3RhdGVUeXBlUGFyYW1ldGVyKFR5cGVQYXJhbWV0ZXIgdHlwZVBhcmFtZXRlciwg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uW10gYW5ub3Rh
dGlvbnMpIHsKIAkJc3dpdGNoKHRoaXMuYXN0LmFwaUxldmVsKSB7CiAJCQljYXNlIEFTVC5KTFMy
X0lOVEVSTkFMIDoKQEAgLTM1NDQsMjMgKzM2MzEsNyBAQAogCQkJCX0KIAkJCX0KIAkJCWlmIChk
aW1lbnNpb25zICE9IDApIHsKLQkJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
YXN0LkFubm90YXRpb25bXVtdIGFubm90YXRpb25zT25EaW1lbnNpb25zID0gdHlwZVJlZmVyZW5j
ZS5nZXRBbm5vdGF0aW9uc09uRGltZW5zaW9ucygpOwotCQkJCXR5cGUgPSB0aGlzLmFzdC5uZXdB
cnJheVR5cGUodHlwZSwgZGltZW5zaW9ucyk7Ci0JCQkJdHlwZS5zZXRTb3VyY2VSYW5nZShzb3Vy
Y2VTdGFydCwgbGVuZ3RoKTsKLQkJCQlBcnJheVR5cGUgc3ViYXJyYXlUeXBlID0gKEFycmF5VHlw
ZSkgdHlwZTsKLQkJCQlpbnQgaW5kZXggPSBkaW1lbnNpb25zIC0gMTsKLQkJCQl3aGlsZSAoaW5k
ZXggPiAwKSB7Ci0JCQkJCWlmIChhbm5vdGF0aW9uc09uRGltZW5zaW9ucyAhPSBudWxsICYmIChh
bm5vdGF0aW9ucyA9IGFubm90YXRpb25zT25EaW1lbnNpb25zW2luZGV4XSkgIT0gbnVsbCkgewot
CQkJCQkJYW5ub3RhdGVUeXBlKHN1YmFycmF5VHlwZSwgYW5ub3RhdGlvbnMpOwotCQkJCQl9Ci0J
CQkJCXN1YmFycmF5VHlwZSA9IChBcnJheVR5cGUpIHN1YmFycmF5VHlwZS5nZXRDb21wb25lbnRU
eXBlKCk7Ci0JCQkJCWludCBlbmQgPSByZXRyaWV2ZVByb3BlclJpZ2h0QnJhY2tldFBvc2l0aW9u
KGluZGV4LCBzb3VyY2VTdGFydCk7Ci0JCQkJCXN1YmFycmF5VHlwZS5zZXRTb3VyY2VSYW5nZShz
b3VyY2VTdGFydCwgZW5kIC0gc291cmNlU3RhcnQgKyAxKTsKLQkJCQkJaW5kZXgtLTsKLQkJCQl9
Ci0JCQkJaWYgKGFubm90YXRpb25zT25EaW1lbnNpb25zICE9IG51bGwgJiYgKGFubm90YXRpb25z
ID0gYW5ub3RhdGlvbnNPbkRpbWVuc2lvbnNbMF0pICE9IG51bGwpIHsKLQkJCQkJYW5ub3RhdGVU
eXBlKHN1YmFycmF5VHlwZSwgYW5ub3RhdGlvbnMpOwotCQkJCX0KKwkJCQl0eXBlID0gY29udmVy
dFRvQXJyYXkodHlwZVJlZmVyZW5jZSwgdHlwZSwgc291cmNlU3RhcnQsIGxlbmd0aCwgZGltZW5z
aW9ucyk7CiAJCQkJaWYgKHRoaXMucmVzb2x2ZUJpbmRpbmdzKSB7CiAJCQkJCS8vIHN0b3JlIGtl
eXMgZm9yIGlubmVyIHR5cGVzCiAJCQkJCWNvbXBsZXRlUmVjb3JkKChBcnJheVR5cGUpIHR5cGUs
IHR5cGVSZWZlcmVuY2UpOwpAQCAtMzgxMiwzMCArMzg4MywxMCBAQAogCiAJCQlsZW5ndGggPSB0
eXBlUmVmZXJlbmNlLnNvdXJjZUVuZCAtIHNvdXJjZVN0YXJ0ICsgMTsKIAkJCWlmIChkaW1lbnNp
b25zICE9IDApIHsKLQkJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFu
bm90YXRpb25bXVtdIGFubm90YXRpb25zT25EaW1lbnNpb25zID0gdHlwZVJlZmVyZW5jZS5nZXRB
bm5vdGF0aW9uc09uRGltZW5zaW9ucygpOwotCQkJCXR5cGUgPSB0aGlzLmFzdC5uZXdBcnJheVR5
cGUodHlwZSwgZGltZW5zaW9ucyk7CisJCQkJaW50IGVuZCA9IHJldHJpZXZlRW5kT2ZEaW1lbnNp
b25zUG9zaXRpb24oc291cmNlU3RhcnQrbGVuZ3RoLCB0aGlzLmNvbXBpbGF0aW9uVW5pdFNvdXJj
ZUxlbmd0aCk7CisJCQkJdHlwZSA9IGNvbnZlcnRUb0FycmF5KHR5cGVSZWZlcmVuY2UsIHR5cGUs
IHNvdXJjZVN0YXJ0LCBlbmQgIT0gLTEgPyBlbmQgLSBzb3VyY2VTdGFydCArIDEgOiBsZW5ndGgs
IGRpbWVuc2lvbnMpOwogCQkJCWlmICh0aGlzLnJlc29sdmVCaW5kaW5ncykgewogCQkJCQljb21w
bGV0ZVJlY29yZCgoQXJyYXlUeXBlKSB0eXBlLCB0eXBlUmVmZXJlbmNlKTsKLQkJCQl9Ci0JCQkJ
aW50IGVuZCA9IHJldHJpZXZlRW5kT2ZEaW1lbnNpb25zUG9zaXRpb24oc291cmNlU3RhcnQrbGVu
Z3RoLCB0aGlzLmNvbXBpbGF0aW9uVW5pdFNvdXJjZUxlbmd0aCk7Ci0JCQkJaWYgKGVuZCAhPSAt
MSkgewotCQkJCQl0eXBlLnNldFNvdXJjZVJhbmdlKHNvdXJjZVN0YXJ0LCBlbmQgLSBzb3VyY2VT
dGFydCArIDEpOwotCQkJCX0gZWxzZSB7Ci0JCQkJCXR5cGUuc2V0U291cmNlUmFuZ2Uoc291cmNl
U3RhcnQsIGxlbmd0aCk7Ci0JCQkJfQotCQkJCUFycmF5VHlwZSBzdWJhcnJheVR5cGUgPSAoQXJy
YXlUeXBlKSB0eXBlOwotCQkJCWludCBpbmRleCA9IGRpbWVuc2lvbnMgLSAxOwotCQkJCXdoaWxl
IChpbmRleCA+IDApIHsKLQkJCQkJaWYgKGFubm90YXRpb25zT25EaW1lbnNpb25zICE9IG51bGwg
ICYmIChhbm5vdGF0aW9ucyA9IGFubm90YXRpb25zT25EaW1lbnNpb25zW2luZGV4XSkgIT0gbnVs
bCkgewotCQkJCQkJYW5ub3RhdGVUeXBlKHN1YmFycmF5VHlwZSwgYW5ub3RhdGlvbnMpOwotCQkJ
CQl9Ci0JCQkJCXN1YmFycmF5VHlwZSA9IChBcnJheVR5cGUpIHN1YmFycmF5VHlwZS5nZXRDb21w
b25lbnRUeXBlKCk7Ci0JCQkJCWVuZCA9IHJldHJpZXZlUHJvcGVyUmlnaHRCcmFja2V0UG9zaXRp
b24oaW5kZXgsIHNvdXJjZVN0YXJ0KTsKLQkJCQkJc3ViYXJyYXlUeXBlLnNldFNvdXJjZVJhbmdl
KHNvdXJjZVN0YXJ0LCBlbmQgLSBzb3VyY2VTdGFydCArIDEpOwotCQkJCQlpbmRleC0tOwotCQkJ
CX0KLQkJCQlpZiAoYW5ub3RhdGlvbnNPbkRpbWVuc2lvbnMgIT0gbnVsbCAgJiYgKGFubm90YXRp
b25zID0gYW5ub3RhdGlvbnNPbkRpbWVuc2lvbnNbMF0pICE9IG51bGwpIHsKLQkJCQkJYW5ub3Rh
dGVUeXBlKHN1YmFycmF5VHlwZSwgYW5ub3RhdGlvbnMpOwogCQkJCX0KIAkJCX0KIAkJfQpAQCAt
Mzg5OCwxNCArMzk0OSwxMCBAQAogCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
YXN0LkFubm90YXRpb25bXSBhbm5vdGF0aW9uczsKIAkJaW50IGFubm90YXRpb25zU3RhcnQgPSBz
dGFydDsKIAkJaW50IGxlbmd0aCA9IGVuZCAtIHN0YXJ0ICsgMTsKKwkJYW5ub3RhdGFibGVUeXBl
LnNldFNvdXJjZVJhbmdlKHN0YXJ0LCBsZW5ndGgpOwogCQlpZiAodHlwZUFubm90YXRpb25zICE9
IG51bGwgJiYgKGFubm90YXRpb25zID0gdHlwZUFubm90YXRpb25zW2luZGV4XSkgIT0gbnVsbCkg
ewogCQkJYW5ub3RhdGVUeXBlKGFubm90YXRhYmxlVHlwZSwgYW5ub3RhdGlvbnMpOwotCQkJaWYg
KGFubm90YXRpb25zWzBdICE9IG51bGwgJiYgKGFubm90YXRpb25zU3RhcnQgPSBhbm5vdGF0aW9u
c1swXS5zb3VyY2VTdGFydCkgPCBzdGFydCkgewotCQkJCWxlbmd0aCArPSBhbm5vdGF0aW9uc1N0
YXJ0ID4gMCA/IHN0YXJ0IC0gYW5ub3RhdGlvbnNTdGFydCA6IDA7Ci0JCQkJc3RhcnQgPSBhbm5v
dGF0aW9uc1N0YXJ0OwotCQkJfQogCQl9Ci0JCWFubm90YXRhYmxlVHlwZS5zZXRTb3VyY2VSYW5n
ZShzdGFydCwgbGVuZ3RoKTsKIAkJaWYgKHRoaXMucmVzb2x2ZUJpbmRpbmdzKSB7CiAJCQlyZWNv
cmROb2Rlcyhhbm5vdGF0YWJsZVR5cGUsIHR5cGVSZWZlcmVuY2UpOwogCQl9CkBAIC00NjQ0LDgg
KzQ2OTEsMTUgQEAKIAkJYm9vbGVhbiBpc0Fubm90YXRpb24gPSBmYWxzZTsKIAkJdHJ5IHsKIAkJ
CWludCB0b2tlbjsKKwkJCWludCBjb3VudCA9IDA7CiAJCQl3aGlsZSAoKHRva2VuID0gdGhpcy5z
Y2FubmVyLmdldE5leHRUb2tlbigpKSAhPSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVFT0YpIHsK
IAkJCQlzd2l0Y2godG9rZW4pIHsKKwkJCQkJY2FzZSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVM
UEFSRU46CisJCQkJCQkrK2NvdW50OworCQkJCQkJYnJlYWs7CisJCQkJCWNhc2UgVGVybWluYWxU
b2tlbnMuVG9rZW5OYW1lUlBBUkVOOgorCQkJCQkJLS1jb3VudDsKKwkJCQkJCWJyZWFrOwogCQkJ
CQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUFUOgogCQkJCQkJaXNBbm5vdGF0aW9uID0g
dHJ1ZTsKIAkJCQkJCWJyZWFrOwpAQCAtNDY2Myw2ICs0NzE3LDcgQEAKIAkJCQkJY2FzZSBUZXJt
aW5hbFRva2Vucy5Ub2tlbk5hbWVsb25nOgogCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2Vu
TmFtZXNob3J0OgogCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZWJvb2xlYW46CisJ
CQkJCQlpZiAoY291bnQgPiAwKSBicmVhazsKIAkJCQkJCXJldHVybiBuZXcgaW50W117dGhpcy5z
Y2FubmVyLnN0YXJ0UG9zaXRpb24sIHRoaXMuc2Nhbm5lci5jdXJyZW50UG9zaXRpb24gLSAxfTsK
IAkJCQl9CiAJCQl9CkBAIC00NzEyLDkgKzQ3NjcsMTcgQEAKIAkJdGhpcy5zY2FubmVyLnJlc2V0
VG8oc3RhcnQsIGVuZCk7CiAJCWludCBkaW1lbnNpb25zID0gMDsKIAkJdHJ5IHsKLQkJCWludCB0
b2tlbjsKLQkJCWJvb2xlYW4gaXNBbm5vdGF0aW9uID0gZmFsc2U7CisJCQlpbnQgdG9rZW4sIGxQ
YXJlbkNvdW50ID0gMDsKKwkJCWJvb2xlYW4gaXNBbm5vdGF0aW9uID0gZmFsc2UsIGZvdW5kQW5u
b3RhdGlvbiA9IGZhbHNlOwogCQkJd2hpbGUgKCh0b2tlbiA9IHRoaXMuc2Nhbm5lci5nZXROZXh0
VG9rZW4oKSkgIT0gVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lRU9GKSB7CisJCQkJaWYgKGZvdW5k
QW5ub3RhdGlvbikgeworCQkJCQlpZiAodG9rZW4gPT0gVGVybWluYWxUb2tlbnMuVG9rZW5OYW1l
TFBBUkVOKSArK2xQYXJlbkNvdW50OworCQkJCQllbHNlIGlmICh0b2tlbiA9PSBUZXJtaW5hbFRv
a2Vucy5Ub2tlbk5hbWVSUEFSRU4pIHsKKwkJCQkJCS0tbFBhcmVuQ291bnQ7CisJCQkJCQljb250
aW51ZTsKKwkJCQkJfQorCQkJCQlpZiAobFBhcmVuQ291bnQgPiAwKSBjb250aW51ZTsKKwkJCQl9
CiAJCQkJc3dpdGNoKHRva2VuKSB7CiAJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1l
TEJSQUNLRVQ6CiAJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lQ09NTUVOVF9CTE9D
SzoKQEAgLTQ3MjQsNiArNDc4Nyw3IEBACiAJCQkJCQlicmVhazsKIAkJCQkJY2FzZSBUZXJtaW5h
bFRva2Vucy5Ub2tlbk5hbWVBVDoKIAkJCQkJCWlzQW5ub3RhdGlvbiA9IHRydWU7CisJCQkJCQlm
b3VuZEFubm90YXRpb24gPSB0cnVlOyAvKiBjaGVjayBmb3IgcGFyYW1zICovCiAJCQkJCQlicmVh
azsKIAkJCQkJY2FzZSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVJZGVudGlmaWVyOgogCQkJCQkJ
aWYgKCFpc0Fubm90YXRpb24pIHsKQEAgLTQ3NDgsMjIgKzQ4MTIsMzYgQEAKIAlwcm90ZWN0ZWQg
dm9pZCByZXRyaWV2ZURpbWVuc2lvbkFuZFNldFBvc2l0aW9ucyhpbnQgc3RhcnQsIGludCBlbmQs
IEV4dHJhRGltZW5zaW9uIGRpbSkgewogCQl0aGlzLnNjYW5uZXIucmVzZXRUbyhzdGFydCwgZW5k
KTsKIAkJaW50IHRva2VuOworCQlpbnQgY291bnQgPSAwLCBsUGFyZW5Db3VudCA9IDA7CiAJCWJv
b2xlYW4gc3RhcnRTZXQgPSBmYWxzZTsKIAkJdHJ5IHsKIAkJCXdoaWxlKCh0b2tlbiA9IHRoaXMu
c2Nhbm5lci5nZXROZXh0VG9rZW4oKSkgIT0gVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lRU9GKSAg
ewotCQkJCXN3aXRjaCh0b2tlbikgewotCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFt
ZVdISVRFU1BBQ0U6Ci0JCQkJCQlicmVhazsKLQkJCQkJY2FzZSBUZXJtaW5hbFRva2Vucy5Ub2tl
bk5hbWVSQlJBQ0tFVDoKLQkJCQkJCWludCBlbmREaW0gPSB0aGlzLnNjYW5uZXIuY3VycmVudFBv
c2l0aW9uIC0gMTsKLQkJCQkJCWRpbS5zZXRTb3VyY2VSYW5nZShzdGFydCwgZW5kRGltIC0gc3Rh
cnQgKyAxKTsKLQkJCQkJCXJldHVybjsKLQkJCQkJZGVmYXVsdDoKLQkJCQkJCWlmICghc3RhcnRT
ZXQpIHsKLQkJCQkJCQlzdGFydCA9IHRoaXMuc2Nhbm5lci5zdGFydFBvc2l0aW9uOwotCQkJCQkJ
CXN0YXJ0U2V0ID0gdHJ1ZTsKLQkJCQkJCX0KLQkJCQkJCWJyZWFrOworCQkJCWlmICh0b2tlbiAh
PSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVXSElURVNQQUNFKSB7CisJCQkJCWlmICghc3RhcnRT
ZXQpIHsKKwkJCQkJCXN0YXJ0ID0gdGhpcy5zY2FubmVyLnN0YXJ0UG9zaXRpb247CisJCQkJCQlz
dGFydFNldCA9IHRydWU7CisJCQkJCX0KKwkJCQkJc3dpdGNoKHRva2VuKSB7CisJCQkJCQljYXNl
IFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZVJCUkFDS0VUOgorCQkJCQkJCWlmIChsUGFyZW5Db3Vu
dCA+IDApIGJyZWFrOworCQkJCQkJCS0tY291bnQ7CisJCQkJCQkJaWYgKGNvdW50ID4gMCkgYnJl
YWs7CisJCQkJCQkJaW50IGVuZERpbSA9IHRoaXMuc2Nhbm5lci5jdXJyZW50UG9zaXRpb24gLSAx
OworCQkJCQkJCWRpbS5zZXRTb3VyY2VSYW5nZShzdGFydCwgZW5kRGltIC0gc3RhcnQgKyAxKTsK
KwkJCQkJCQlyZXR1cm47CisJCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUxCUkFD
S0VUOgorCQkJCQkJCWlmIChsUGFyZW5Db3VudCA+IDApIGJyZWFrOworCQkJCQkJCWNvdW50Kys7
CisJCQkJCQkJYnJlYWs7CisJCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUxQQVJF
TjoKKwkJCQkJCQlsUGFyZW5Db3VudCsrOworCQkJCQkJCWJyZWFrOworCQkJCQkJY2FzZSBUZXJt
aW5hbFRva2Vucy5Ub2tlbk5hbWVSUEFSRU46CisJCQkJCQkJLS1sUGFyZW5Db3VudDsKKwkJCQkJ
CQlicmVhazsKKwkJCQkJCWRlZmF1bHQ6CisJCQkJCQkJYnJlYWs7CisJCQkJCX0KIAkJCQl9CiAJ
CQl9CiAJCX0gY2F0Y2goSW52YWxpZElucHV0RXhjZXB0aW9uIGUpIHsKQEAgLTQ4NzQsMTAgKzQ5
NTIsMTcgQEAKIAlwcm90ZWN0ZWQgaW50IHJldHJpZXZlUHJvcGVyUmlnaHRCcmFja2V0UG9zaXRp
b24oaW50IGJyYWNrZXROdW1iZXIsIGludCBzdGFydCkgewogCQl0aGlzLnNjYW5uZXIucmVzZXRU
byhzdGFydCwgdGhpcy5jb21waWxhdGlvblVuaXRTb3VyY2VMZW5ndGgpOwogCQl0cnkgewotCQkJ
aW50IHRva2VuLCBjb3VudCA9IDA7CisJCQlpbnQgdG9rZW4sIGNvdW50ID0gMCwgbFBhcmVudENv
dW50ID0gMDsKIAkJCXdoaWxlICgodG9rZW4gPSB0aGlzLnNjYW5uZXIuZ2V0TmV4dFRva2VuKCkp
ICE9IFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUVPRikgewogCQkJCXN3aXRjaCh0b2tlbikgewor
CQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUxQQVJFTjoKKwkJCQkJCSsrbFBhcmVu
dENvdW50OworCQkJCQkJYnJlYWs7CisJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1l
UlBBUkVOOgorCQkJCQkJLS1sUGFyZW50Q291bnQ7CisJCQkJCQlicmVhazsKIAkJCQkJY2FzZSBU
ZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVSQlJBQ0tFVDoKKwkJCQkJCWlmIChsUGFyZW50Q291bnQg
PiAwKSBicmVhazsKIAkJCQkJCWNvdW50Kys7CiAJCQkJCQlpZiAoY291bnQgPT0gYnJhY2tldE51
bWJlcikgewogCQkJCQkJCXJldHVybiB0aGlzLnNjYW5uZXIuY3VycmVudFBvc2l0aW9uIC0gMTsK
QEAgLTU2NDMsMzIgKzU3MjgsNTAgQEAKIAkJCQkJdGhpcy5hc3QuZ2V0QmluZGluZ1Jlc29sdmVy
KCkudXBkYXRlS2V5KHR5cGUsIGVsZW1lbnRUeXBlKTsKIAkJCQkJZmllbGREZWNsYXJhdGlvbi5z
ZXRUeXBlKGVsZW1lbnRUeXBlKTsKIAkJCQl9IGVsc2UgewotCQkJCQlpbnQgc3RhcnQgPSB0eXBl
LmdldFN0YXJ0UG9zaXRpb24oKTsKLQkJCQkJQXJyYXlUeXBlIHN1YmFycmF5VHlwZSA9IGFycmF5
VHlwZTsKLQkJCQkJaW50IGluZGV4ID0gZXh0cmFEaW1lbnNpb247Ci0JCQkJCXdoaWxlIChpbmRl
eCA+IDApIHsKLQkJCQkJCXN1YmFycmF5VHlwZSA9IChBcnJheVR5cGUpIHN1YmFycmF5VHlwZS5n
ZXRDb21wb25lbnRUeXBlKCk7Ci0JCQkJCQlpbmRleC0tOwotCQkJCQl9Ci0JCQkJCWludCBlbmQg
PSByZXRyaWV2ZVByb3BlclJpZ2h0QnJhY2tldFBvc2l0aW9uKHJlbWFpbmluZ0RpbWVuc2lvbnMs
IHN0YXJ0KTsKLQkJCQkJc3ViYXJyYXlUeXBlLnNldFNvdXJjZVJhbmdlKHN0YXJ0LCBlbmQgLSBz
dGFydCArIDEpOwotCQkJCQkvLyBjdXQgdGhlIGNoaWxkIGxvb3NlIGZyb20gaXRzIHBhcmVudCAo
d2l0aG91dCBjcmVhdGluZyBnYXJiYWdlKQotCQkJCQlzdWJhcnJheVR5cGUuc2V0UGFyZW50KG51
bGwsIG51bGwpOworCQkJCQlBcnJheVR5cGUgc3ViYXJyYXlUeXBlID0gZXh0cmFjdFN1YkFycmF5
VHlwZShhcnJheVR5cGUsIHJlbWFpbmluZ0RpbWVuc2lvbnMsIGV4dHJhRGltZW5zaW9uKTsKIAkJ
CQkJZmllbGREZWNsYXJhdGlvbi5zZXRUeXBlKHN1YmFycmF5VHlwZSk7Ci0JCQkJCXVwZGF0ZUlu
bmVyUG9zaXRpb25zKHN1YmFycmF5VHlwZSwgcmVtYWluaW5nRGltZW5zaW9ucyk7CiAJCQkJCXRo
aXMuYXN0LmdldEJpbmRpbmdSZXNvbHZlcigpLnVwZGF0ZUtleSh0eXBlLCBzdWJhcnJheVR5cGUp
OwogCQkJCX0KIAkJCX0gZWxzZSB7CiAJCQkJZmllbGREZWNsYXJhdGlvbi5zZXRUeXBlKHR5cGUp
OwogCQkJfQogCQl9IGVsc2UgewotCQkJaWYgKHR5cGUuaXNBcnJheVR5cGUoKSkgeworCQkJaWYg
KHR5cGUuaXNBcnJheVR5cGUoKSAmJiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSkg
ewogCQkJCS8vIHVwZGF0ZSBwb3NpdGlvbnMgb2YgdGhlIGNvbXBvbmVudCB0eXBlcyBvZiB0aGUg
YXJyYXkgdHlwZQogCQkJCWludCBkaW1lbnNpb25zID0gKChBcnJheVR5cGUpIHR5cGUpLmdldERp
bWVuc2lvbnMoKTsKIAkJCQl1cGRhdGVJbm5lclBvc2l0aW9ucyh0eXBlLCBkaW1lbnNpb25zKTsK
IAkJCX0KIAkJCWZpZWxkRGVjbGFyYXRpb24uc2V0VHlwZSh0eXBlKTsKIAkJfQorCX0KKworCS8q
KiBleHRyYWN0cyB0aGUgc3ViQXJyYXlUeXBlIGZvciBhIGdpdmVuIGRlY2xhcmF0aW9uIGZvciBB
U1QgbGV2ZWxzIGxlc3MKKwkgKiBAcGFyYW0gYXJyYXlUeXBlIHBhcmVudCB0eXBlCisJICogQHBh
cmFtIHJlbWFpbmluZ0RpbWVuc2lvbnMgCisJICogQHBhcmFtIGV4dHJhRGltZW5zaW9ucworCSAq
IEByZXR1cm4gYW4gQXJyYXlUeXBlCisJICovCisJcHJpdmF0ZSBBcnJheVR5cGUgZXh0cmFjdFN1
YkFycmF5VHlwZShBcnJheVR5cGUgYXJyYXlUeXBlLCBpbnQgcmVtYWluaW5nRGltZW5zaW9ucywg
aW50IGV4dHJhRGltZW5zaW9ucykgeworCQlBcnJheVR5cGUgc3ViQXJyYXlUeXBlID0gYXJyYXlU
eXBlOworCQlpbnQgc3RhcnQgPSBzdWJBcnJheVR5cGUuZ2V0U3RhcnRQb3NpdGlvbigpOworCQlp
ZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQl3aGlsZSAoZXh0cmFEaW1l
bnNpb25zID4gMCApIHsKKwkJCQlzdWJBcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBzdWJBcnJheVR5
cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQkJCWV4dHJhRGltZW5zaW9ucy0tOworCQkJfQorCQkJ
dXBkYXRlSW5uZXJQb3NpdGlvbnMoc3ViQXJyYXlUeXBlLCByZW1haW5pbmdEaW1lbnNpb25zKTsK
KwkJfSBlbHNlIHsKKwkJCUxpc3QgZGltZW5zaW9ucyA9IHN1YkFycmF5VHlwZS5kaW1lbnNpb25z
KCk7CisJCQl3aGlsZSAoZXh0cmFEaW1lbnNpb25zID4gMCApIHsKKwkJCQlkaW1lbnNpb25zLnJl
bW92ZShkaW1lbnNpb25zLnNpemUoKSAtIDEpOworCQkJCWV4dHJhRGltZW5zaW9ucy0tOworCQkJ
fQorCQl9CisJCWludCBlbmQgPSByZXRyaWV2ZVByb3BlclJpZ2h0QnJhY2tldFBvc2l0aW9uKHJl
bWFpbmluZ0RpbWVuc2lvbnMsIHN0YXJ0KTsKKwkJc3ViQXJyYXlUeXBlLnNldFNvdXJjZVJhbmdl
KHN0YXJ0LCBlbmQgLSBzdGFydCArIDEpOworCQkvLyBjdXQgdGhlIGNoaWxkIGxvb3NlIGZyb20g
aXRzIHBhcmVudCAod2l0aG91dCBjcmVhdGluZyBnYXJiYWdlKQorCQlzdWJBcnJheVR5cGUuc2V0
UGFyZW50KG51bGwsIG51bGwpOworCQlyZXR1cm4gc3ViQXJyYXlUeXBlOwogCX0KIAogCXByb3Rl
Y3RlZCB2b2lkIHNldFR5cGVGb3JNZXRob2REZWNsYXJhdGlvbihNZXRob2REZWNsYXJhdGlvbiBt
ZXRob2REZWNsYXJhdGlvbiwgVHlwZSB0eXBlLCBpbnQgZXh0cmFEaW1lbnNpb24pIHsKQEAgLTU2
OTEsMTggKzU3OTQsNyBAQAogCQkJCQkJYnJlYWs7CiAJCQkJCX0KIAkJCQl9IGVsc2UgewotCQkJ
CQlpbnQgc3RhcnQgPSB0eXBlLmdldFN0YXJ0UG9zaXRpb24oKTsKLQkJCQkJQXJyYXlUeXBlIHN1
YmFycmF5VHlwZSA9IGFycmF5VHlwZTsKLQkJCQkJaW50IGluZGV4ID0gZXh0cmFEaW1lbnNpb247
Ci0JCQkJCXdoaWxlIChpbmRleCA+IDApIHsKLQkJCQkJCXN1YmFycmF5VHlwZSA9IChBcnJheVR5
cGUpIHN1YmFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCQkJCQlpbmRleC0tOwotCQkJ
CQl9Ci0JCQkJCWludCBlbmQgPSByZXRyaWV2ZVByb3BlclJpZ2h0QnJhY2tldFBvc2l0aW9uKHJl
bWFpbmluZ0RpbWVuc2lvbnMsIHN0YXJ0KTsKLQkJCQkJc3ViYXJyYXlUeXBlLnNldFNvdXJjZVJh
bmdlKHN0YXJ0LCBlbmQgLSBzdGFydCArIDEpOwotCQkJCQkvLyBjdXQgdGhlIGNoaWxkIGxvb3Nl
IGZyb20gaXRzIHBhcmVudCAod2l0aG91dCBjcmVhdGluZyBnYXJiYWdlKQotCQkJCQlzdWJhcnJh
eVR5cGUuc2V0UGFyZW50KG51bGwsIG51bGwpOwotCQkJCQl1cGRhdGVJbm5lclBvc2l0aW9ucyhz
dWJhcnJheVR5cGUsIHJlbWFpbmluZ0RpbWVuc2lvbnMpOworCQkJCQlBcnJheVR5cGUgc3ViYXJy
YXlUeXBlID0gZXh0cmFjdFN1YkFycmF5VHlwZShhcnJheVR5cGUsIHJlbWFpbmluZ0RpbWVuc2lv
bnMsIGV4dHJhRGltZW5zaW9uKTsKIAkJCQkJc3dpdGNoKHRoaXMuYXN0LmFwaUxldmVsKSB7CiAJ
CQkJCQljYXNlIEFTVC5KTFMyX0lOVEVSTkFMIDoKIAkJCQkJCQltZXRob2REZWNsYXJhdGlvbi5p
bnRlcm5hbFNldFJldHVyblR5cGUoc3ViYXJyYXlUeXBlKTsKQEAgLTU3NTIsMjAgKzU4NDQsOSBA
QAogCQkJCQl0aGlzLmFzdC5nZXRCaW5kaW5nUmVzb2x2ZXIoKS51cGRhdGVLZXkodHlwZSwgZWxl
bWVudFR5cGUpOwogCQkJCQlzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLnNldFR5cGUoZWxlbWVu
dFR5cGUpOwogCQkJCX0gZWxzZSB7Ci0JCQkJCWludCBzdGFydCA9IHR5cGUuZ2V0U3RhcnRQb3Np
dGlvbigpOwotCQkJCQlBcnJheVR5cGUgc3ViYXJyYXlUeXBlID0gYXJyYXlUeXBlOwotCQkJCQlp
bnQgaW5kZXggPSBleHRyYURpbWVuc2lvbjsKLQkJCQkJd2hpbGUgKGluZGV4ID4gMCkgewotCQkJ
CQkJc3ViYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgc3ViYXJyYXlUeXBlLmdldENvbXBvbmVudFR5
cGUoKTsKLQkJCQkJCWluZGV4LS07Ci0JCQkJCX0KLQkJCQkJaW50IGVuZCA9IHJldHJpZXZlUHJv
cGVyUmlnaHRCcmFja2V0UG9zaXRpb24ocmVtYWluaW5nRGltZW5zaW9ucywgc3RhcnQpOwotCQkJ
CQlzdWJhcnJheVR5cGUuc2V0U291cmNlUmFuZ2Uoc3RhcnQsIGVuZCAtIHN0YXJ0ICsgMSk7Ci0J
CQkJCS8vIGN1dCB0aGUgY2hpbGQgbG9vc2UgZnJvbSBpdHMgcGFyZW50ICh3aXRob3V0IGNyZWF0
aW5nIGdhcmJhZ2UpCi0JCQkJCXN1YmFycmF5VHlwZS5zZXRQYXJlbnQobnVsbCwgbnVsbCk7Ci0J
CQkJCXVwZGF0ZUlubmVyUG9zaXRpb25zKHN1YmFycmF5VHlwZSwgcmVtYWluaW5nRGltZW5zaW9u
cyk7Ci0JCQkJCXNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24uc2V0VHlwZShzdWJhcnJheVR5cGUp
OworCQkJCQlBcnJheVR5cGUgc3ViYXJyYXlUeXBlID0gZXh0cmFjdFN1YkFycmF5VHlwZShhcnJh
eVR5cGUsIHJlbWFpbmluZ0RpbWVuc2lvbnMsIGV4dHJhRGltZW5zaW9uKTsKIAkJCQkJdGhpcy5h
c3QuZ2V0QmluZGluZ1Jlc29sdmVyKCkudXBkYXRlS2V5KHR5cGUsIHN1YmFycmF5VHlwZSk7CisJ
CQkJCXNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24uc2V0VHlwZShzdWJhcnJheVR5cGUpOwogCQkJ
CX0KIAkJCX0gZWxzZSB7CiAJCQkJc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbi5zZXRUeXBlKHR5
cGUpOwpAQCAtNTc4OCwxOCArNTg2OSw3IEBACiAJCQkJCXRoaXMuYXN0LmdldEJpbmRpbmdSZXNv
bHZlcigpLnVwZGF0ZUtleSh0eXBlLCBlbGVtZW50VHlwZSk7CiAJCQkJCXZhcmlhYmxlRGVjbGFy
YXRpb25FeHByZXNzaW9uLnNldFR5cGUoZWxlbWVudFR5cGUpOwogCQkJCX0gZWxzZSB7Ci0JCQkJ
CWludCBzdGFydCA9IHR5cGUuZ2V0U3RhcnRQb3NpdGlvbigpOwotCQkJCQlBcnJheVR5cGUgc3Vi
YXJyYXlUeXBlID0gYXJyYXlUeXBlOwotCQkJCQlpbnQgaW5kZXggPSBleHRyYURpbWVuc2lvbjsK
LQkJCQkJd2hpbGUgKGluZGV4ID4gMCkgewotCQkJCQkJc3ViYXJyYXlUeXBlID0gKEFycmF5VHlw
ZSkgc3ViYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJCQkJCWluZGV4LS07Ci0JCQkJ
CX0KLQkJCQkJaW50IGVuZCA9IHJldHJpZXZlUHJvcGVyUmlnaHRCcmFja2V0UG9zaXRpb24ocmVt
YWluaW5nRGltZW5zaW9ucywgc3RhcnQpOwotCQkJCQlzdWJhcnJheVR5cGUuc2V0U291cmNlUmFu
Z2Uoc3RhcnQsIGVuZCAtIHN0YXJ0ICsgMSk7Ci0JCQkJCS8vIGN1dCB0aGUgY2hpbGQgbG9vc2Ug
ZnJvbSBpdHMgcGFyZW50ICh3aXRob3V0IGNyZWF0aW5nIGdhcmJhZ2UpCi0JCQkJCXN1YmFycmF5
VHlwZS5zZXRQYXJlbnQobnVsbCwgbnVsbCk7Ci0JCQkJCXVwZGF0ZUlubmVyUG9zaXRpb25zKHN1
YmFycmF5VHlwZSwgcmVtYWluaW5nRGltZW5zaW9ucyk7CisJCQkJCUFycmF5VHlwZSBzdWJhcnJh
eVR5cGUgPSBleHRyYWN0U3ViQXJyYXlUeXBlKGFycmF5VHlwZSwgcmVtYWluaW5nRGltZW5zaW9u
cywgZXh0cmFEaW1lbnNpb24pOwogCQkJCQl2YXJpYWJsZURlY2xhcmF0aW9uRXhwcmVzc2lvbi5z
ZXRUeXBlKHN1YmFycmF5VHlwZSk7CiAJCQkJCXRoaXMuYXN0LmdldEJpbmRpbmdSZXNvbHZlcigp
LnVwZGF0ZUtleSh0eXBlLCBzdWJhcnJheVR5cGUpOwogCQkJCX0KQEAgLTU4MjQsMTggKzU4OTQs
NyBAQAogCQkJCQl0aGlzLmFzdC5nZXRCaW5kaW5nUmVzb2x2ZXIoKS51cGRhdGVLZXkodHlwZSwg
ZWxlbWVudFR5cGUpOwogCQkJCQl2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50LnNldFR5cGUo
ZWxlbWVudFR5cGUpOwogCQkJCX0gZWxzZSB7Ci0JCQkJCWludCBzdGFydCA9IHR5cGUuZ2V0U3Rh
cnRQb3NpdGlvbigpOwotCQkJCQlBcnJheVR5cGUgc3ViYXJyYXlUeXBlID0gYXJyYXlUeXBlOwot
CQkJCQlpbnQgaW5kZXggPSBleHRyYURpbWVuc2lvbjsKLQkJCQkJd2hpbGUgKGluZGV4ID4gMCkg
ewotCQkJCQkJc3ViYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgc3ViYXJyYXlUeXBlLmdldENvbXBv
bmVudFR5cGUoKTsKLQkJCQkJCWluZGV4LS07Ci0JCQkJCX0KLQkJCQkJaW50IGVuZCA9IHJldHJp
ZXZlUHJvcGVyUmlnaHRCcmFja2V0UG9zaXRpb24ocmVtYWluaW5nRGltZW5zaW9ucywgc3RhcnQp
OwotCQkJCQlzdWJhcnJheVR5cGUuc2V0U291cmNlUmFuZ2Uoc3RhcnQsIGVuZCAtIHN0YXJ0ICsg
MSk7Ci0JCQkJCS8vIGN1dCB0aGUgY2hpbGQgbG9vc2UgZnJvbSBpdHMgcGFyZW50ICh3aXRob3V0
IGNyZWF0aW5nIGdhcmJhZ2UpCi0JCQkJCXN1YmFycmF5VHlwZS5zZXRQYXJlbnQobnVsbCwgbnVs
bCk7Ci0JCQkJCXVwZGF0ZUlubmVyUG9zaXRpb25zKHN1YmFycmF5VHlwZSwgcmVtYWluaW5nRGlt
ZW5zaW9ucyk7CisJCQkJCUFycmF5VHlwZSBzdWJhcnJheVR5cGUgPSBleHRyYWN0U3ViQXJyYXlU
eXBlKGFycmF5VHlwZSwgcmVtYWluaW5nRGltZW5zaW9ucywgZXh0cmFEaW1lbnNpb24pOwogCQkJ
CQl2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50LnNldFR5cGUoc3ViYXJyYXlUeXBlKTsKIAkJ
CQkJdGhpcy5hc3QuZ2V0QmluZGluZ1Jlc29sdmVyKCkudXBkYXRlS2V5KHR5cGUsIHN1YmFycmF5
VHlwZSk7CiAJCQkJfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RNYXRjaGVyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVE1hdGNoZXIuamF2YQppbmRleCBmMzNj
NWUyLi4yOTcwMmQ2IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2NvcmUvZG9tL0FTVE1hdGNoZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVE1hdGNoZXIuamF2YQpAQCAtMzMx
LDggKzMzMSwxMSBAQAogCQl9CiAJCUFycmF5VHlwZSBvID0gKEFycmF5VHlwZSkgb3RoZXI7CiAJ
CWludCBsZXZlbCA9IG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWw7Ci0JCXJldHVybiBzYWZlU3VidHJl
ZU1hdGNoKG5vZGUuZ2V0Q29tcG9uZW50VHlwZSgpLCBvLmdldENvbXBvbmVudFR5cGUoKSkKLQkJ
CQkmJiAobGV2ZWwgPj0gQVNULkpMUzggPyBzYWZlU3VidHJlZUxpc3RNYXRjaChub2RlLmFubm90
YXRpb25zKCksIG8uYW5ub3RhdGlvbnMoKSkgOiB0cnVlKTsKKwkJaWYgKGxldmVsIDwgQVNULkpM
UzgpIHsKKwkJCXJldHVybiBzYWZlU3VidHJlZU1hdGNoKG5vZGUuZ2V0Q29tcG9uZW50VHlwZSgp
LCBvLmdldENvbXBvbmVudFR5cGUoKSk7CisJCX0KKwkJcmV0dXJuIHNhZmVTdWJ0cmVlTWF0Y2go
bm9kZS5nZXRFbGVtZW50VHlwZSgpLCBvLmdldEVsZW1lbnRUeXBlKCkpCisJCQkJJiYgc2FmZVN1
YnRyZWVMaXN0TWF0Y2gobm9kZS5kaW1lbnNpb25zKCksIG8uZGltZW5zaW9ucygpKTsKIAl9CiAK
IAkvKioKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9q
ZHQvY29yZS9kb20vQXJyYXlUeXBlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3Jn
L2VjbGlwc2UvamR0L2NvcmUvZG9tL0FycmF5VHlwZS5qYXZhCmluZGV4IGNkMWRkODMuLmQ2MmZi
YTkgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQv
Y29yZS9kb20vQXJyYXlUeXBlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BcnJheVR5cGUuamF2YQpAQCAtMjEsNyArMjEsOSBAQAog
LyoqCiAgKiBUeXBlIG5vZGUgZm9yIGFuIGFycmF5IHR5cGUuCiAgKiA8cD4KLSAqIEFycmF5IHR5
cGVzIGFyZSBleHByZXNzZWQgaW4gYSByZWN1cnNpdmUgbWFubmVyLCBvbmUgZGltZW5zaW9uIGF0
IGEgdGltZS4KKyAqIEFycmF5IHR5cGVzIGFyZSBleHByZXNzZWQgaW4gYSByZWN1cnNpdmUgbWFu
bmVyLCBvbmUgZGltZW5zaW9uIGF0IGEgdGltZS4gRnJvbSBKTFM4IG9ud2FyZHMsCisgKiBpbnN0
ZWFkIG9mIHRoaXMgcmVjdXJzaXZlIG1hbm5lciwgYXJyYXlzIGFyZSByZXByZXNlbnRlZCBieSBh
IGJhc2UgZWxlbWVudCB0eXBlICh3aGljaCBjYW5ub3QKKyAqIGJlIGFuIEFycmF5IHR5cGUpIGFu
ZCBhIGxpc3Qgb2YgZGltZW5zaW9ucyBlYWNoIG9mIHdoaWNoIG1heSBoYXZlIGEgbGlzdCBvZiBh
bm5vdGF0aW9ucy4KICAqIDwvcD4KICAqIDxwcmU+CiAgKiBBcnJheVR5cGU6CkBAIC0zMSw3ICsz
Myw3IEBACiAgKiBAc2luY2UgMi4wCiAgKiBAbm9pbnN0YW50aWF0ZSBUaGlzIGNsYXNzIGlzIG5v
dCBpbnRlbmRlZCB0byBiZSBpbnN0YW50aWF0ZWQgYnkgY2xpZW50cy4KICAqLwotcHVibGljIGNs
YXNzIEFycmF5VHlwZSBleHRlbmRzIEFubm90YXRhYmxlVHlwZSB7CitwdWJsaWMgY2xhc3MgQXJy
YXlUeXBlIGV4dGVuZHMgVHlwZSB7CiAKIAkvKioKIAkgKiBUaGUgImNvbXBvbmVudFR5cGUiIHN0
cnVjdHVyYWwgcHJvcGVydHkgb2YgdGhpcyBub2RlIHR5cGUgKGNoaWxkIHR5cGU6IHtAbGluayBU
eXBlfSkuCkBAIC00MSwxMiArNDMsMTggQEAKIAkJbmV3IENoaWxkUHJvcGVydHlEZXNjcmlwdG9y
KEFycmF5VHlwZS5jbGFzcywgImNvbXBvbmVudFR5cGUiLCBUeXBlLmNsYXNzLCBNQU5EQVRPUlks
IENZQ0xFX1JJU0spOyAvLyROT04tTkxTLTEkCiAKIAkvKioKLQkgKiBUaGUgImFubm90YXRpb25z
IiBzdHJ1Y3R1cmFsIHByb3BlcnR5IG9mIHRoaXMgbm9kZSB0eXBlIChlbGVtZW50IHR5cGU6IHtA
bGluayBBbm5vdGF0aW9ufSkuCisJICogVGhlICJlbGVtZW50VHlwZSIgc3RydWN0dXJhbCBwcm9w
ZXJ0eSBvZiB0aGlzIG5vZGUgdHlwZSAoY2hpbGQgdHlwZToge0BsaW5rIFR5cGV9KS4KIAkgKiBA
c2luY2UgMy45IEJFVEFfSkFWQTgKIAkgKi8KLQlwdWJsaWMgc3RhdGljIGZpbmFsIENoaWxkTGlz
dFByb3BlcnR5RGVzY3JpcHRvciBBTk5PVEFUSU9OU19QUk9QRVJUWSA9Ci0JCQlpbnRlcm5hbEFu
bm90YXRpb25zUHJvcGVydHlGYWN0b3J5KEFycmF5VHlwZS5jbGFzcyk7CisJcHVibGljIHN0YXRp
YyBmaW5hbCBDaGlsZFByb3BlcnR5RGVzY3JpcHRvciBFTEVNRU5UX1RZUEVfUFJPUEVSVFkgPQor
CQkJbmV3IENoaWxkUHJvcGVydHlEZXNjcmlwdG9yKEFycmF5VHlwZS5jbGFzcywgImVsZW1lbnRU
eXBlIiwgVHlwZS5jbGFzcywgTUFOREFUT1JZLCBDWUNMRV9SSVNLKTsgLy8kTk9OLU5MUy0xJAkK
IAkKKwkvKioKKwkgKiBUaGUgImRpbWVuc2lvbnMiIHN0cnVjdHVyYWwgcHJvcGVydHkgb2YgdGhp
cyBub2RlIHR5cGUgKGVsZW1lbnQgdHlwZToge0BsaW5rIEFubm90YXRpb259KS4KKwkgKiBAc2lu
Y2UgMy45IEJFVEFfSkFWQTgKKwkgKi8KKwlwdWJsaWMgc3RhdGljIGZpbmFsIENoaWxkTGlzdFBy
b3BlcnR5RGVzY3JpcHRvciBESU1FTlNJT05TX1BST1BFUlRZID0KKwkJCW5ldyBDaGlsZExpc3RQ
cm9wZXJ0eURlc2NyaXB0b3IoQXJyYXlUeXBlLmNsYXNzLCAiZGltZW5zaW9ucyIsIEV4dHJhRGlt
ZW5zaW9uLmNsYXNzLCBDWUNMRV9SSVNLKTsgLy8kTk9OLU5MUy0xJAkKIAkvKioKIAkgKiBBIGxp
c3Qgb2YgcHJvcGVydHkgZGVzY3JpcHRvcnMgKGVsZW1lbnQgdHlwZToKIAkgKiB7QGxpbmsgU3Ry
dWN0dXJhbFByb3BlcnR5RGVzY3JpcHRvcn0pLApAQCAtNjksOCArNzcsOCBAQAogCiAJCXByb3Bl
cnR5TGlzdCA9IG5ldyBBcnJheUxpc3QoMyk7CiAJCWNyZWF0ZVByb3BlcnR5TGlzdChBcnJheVR5
cGUuY2xhc3MsIHByb3BlcnR5TGlzdCk7Ci0JCWFkZFByb3BlcnR5KENPTVBPTkVOVF9UWVBFX1BS
T1BFUlRZLCBwcm9wZXJ0eUxpc3QpOwotCQlhZGRQcm9wZXJ0eShBTk5PVEFUSU9OU19QUk9QRVJU
WSwgcHJvcGVydHlMaXN0KTsKKwkJYWRkUHJvcGVydHkoRUxFTUVOVF9UWVBFX1BST1BFUlRZLCBw
cm9wZXJ0eUxpc3QpOworCQlhZGRQcm9wZXJ0eShESU1FTlNJT05TX1BST1BFUlRZLCBwcm9wZXJ0
eUxpc3QpOwogCQlQUk9QRVJUWV9ERVNDUklQVE9SU184XzAgPSByZWFwUHJvcGVydHlMaXN0KHBy
b3BlcnR5TGlzdCk7CiAJfQogCkBAIC05OCw5ICsxMDYsMjUgQEAKIAogCS8qKgogCSAqIFRoZSBj
b21wb25lbnQgdHlwZTsgbGF6aWx5IGluaXRpYWxpemVkOyBkZWZhdWx0cyB0byBhIHNpbXBsZSB0
eXBlIHdpdGgKLQkgKiBhbiB1bnNwZWNpZmllZCwgYnV0IGxlZ2FsLCBuYW1lLgorCSAqIGFuIHVu
c3BlY2lmaWVkLCBidXQgbGVnYWwsIG5hbWUuIE51bGwgZnJvbSBKTFM4IG9ud2FyZHMuCiAJICov
CiAJcHJpdmF0ZSBUeXBlIGNvbXBvbmVudFR5cGUgPSBudWxsOworCisJLyoqCisJICogVGhlIGVs
ZW1lbnQgdHlwZTsgbGF6aWx5IGluaXRpYWxpemVkOyBkZWZhdWx0cyB0byBhIHNpbXBsZSB0eXBl
IHdpdGgKKwkgKiBhbiB1bnNwZWNpZmllZCwgYnV0IGxlZ2FsLCBuYW1lLgorCSAqLworCXByaXZh
dGUgVHlwZSBlbGVtZW50VHlwZSA9IG51bGw7CisKKwkvKioKKwkgKiBMaXN0IG9mIGV4dHJhIGRp
bWVuc2lvbnMgdGhpcyBub2RlIGhhcyB3aXRoIG9wdGlvbmFsIGFubm90YXRpb25zCisJICogKGVs
ZW1lbnQgdHlwZToge0BsaW5rIEV4dHJhRGltZW5zaW9ufSkuCisJICogTnVsbCBiZWZvcmUgSkxT
OC4gQWRkZWQgaW4gSkxTODsgZGVmYXVsdHMgdG8gYSBsaXN0IHdpdGggb25lIGVsZW1lbnQKKwkg
KiAoc2VlIGNvbnN0cnVjdG9yKS4KKwkgKiAKKwkgKiBAc2luY2UgMy45IEJFVEFfSkFWQTgKKwkg
Ki8KKwlwcml2YXRlIEFTVE5vZGUuTm9kZUxpc3QgZGltZW5zaW9ucyA9IG51bGw7CiAKIAkvKioK
IAkgKiBDcmVhdGVzIGEgbmV3IHVucGFyZW50ZWQgbm9kZSBmb3IgYW4gYXJyYXkgdHlwZSBvd25l
ZCBieSB0aGUgZ2l2ZW4gQVNULgpAQCAtMTEzLDE0ICsxMzcsMzEgQEAKIAkgKi8KIAlBcnJheVR5
cGUoQVNUIGFzdCkgewogCQlzdXBlcihhc3QpOworCQlpZiAoYXN0LmFwaUxldmVsID49IEFTVC5K
TFM4KSB7CisJCQl0aGlzLmRpbWVuc2lvbnMgPSBuZXcgQVNUTm9kZS5Ob2RlTGlzdChESU1FTlNJ
T05TX1BST1BFUlRZKTsKKwkJCS8vIHNpbmdsZSBkaW1lbnNpb24gYXJyYXkgaXMgdGhlIGRlZmF1
bHQKKwkJCXRoaXMuZGltZW5zaW9ucygpLmFkZCh0aGlzLmFzdC5uZXdFeHRyYURpbWVuc2lvbigp
KTsKKwkJfQogCX0KIAotCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQotCSAqIE1l
dGhvZCBkZWNsYXJlZCBvbiBBbm5vdGF0YWJsZVR5cGUuCi0JICogQHNpbmNlIDMuOSBCRVRBX0pB
VkE4Ci0JICovCi0JZmluYWwgQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yIGludGVybmFsQW5u
b3RhdGlvbnNQcm9wZXJ0eSgpIHsKLQkJcmV0dXJuIEFOTk9UQVRJT05TX1BST1BFUlRZOworCS8q
KgorCSogQ3JlYXRlcyBhIG5ldyB1bnBhcmVudGVkIG5vZGUgZm9yIGFuIGFycmF5IHR5cGUgb3du
ZWQgYnkgdGhlIGdpdmVuIEFTVC4KKwkqIDxwPgorCSogTi5CLiBUaGlzIGNvbnN0cnVjdG9yIGlz
IHByaXZhdGUuCisJKiA8L3A+CisJKgorCSogQHBhcmFtIGFzdCB0aGUgQVNUIHRoYXQgaXMgdG8g
b3duIHRoaXMgbm9kZQorCSogQHBhcmFtIGRpbWVuc2lvbnMgbm8gb2YgZGltZW5zaW9ucyAtIGNh
biBiZSB6ZXJvCisJKgorCSogQHNpbmNlIDMuOSBCRVRBX0pBVkE4CisJKi8KKwlwcml2YXRlIEFy
cmF5VHlwZShBU1QgYXN0LCBpbnQgZGltZW5zaW9ucykgeworCQlzdXBlcihhc3QpOworCQl1bnN1
cHBvcnRlZEluMl8zXzQoKTsKKwkJdGhpcy5kaW1lbnNpb25zID0gbmV3IEFTVE5vZGUuTm9kZUxp
c3QoRElNRU5TSU9OU19QUk9QRVJUWSk7CisJCWZvciAoaW50IGkgPSAwOyBpIDwgZGltZW5zaW9u
czsgKytpKSB7CisJCQl0aGlzLmRpbWVuc2lvbnMoKS5hZGQodGhpcy5hc3QubmV3RXh0cmFEaW1l
bnNpb24oKSk7CisJCX0KIAl9CiAKIAkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkK
QEAgLTEzNCw4ICsxNzUsOCBAQAogCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgogCSAq
LwogCWZpbmFsIExpc3QgaW50ZXJuYWxHZXRDaGlsZExpc3RQcm9wZXJ0eShDaGlsZExpc3RQcm9w
ZXJ0eURlc2NyaXB0b3IgcHJvcGVydHkpIHsKLQkJaWYgKHByb3BlcnR5ID09IEFOTk9UQVRJT05T
X1BST1BFUlRZKSB7Ci0JCQlyZXR1cm4gYW5ub3RhdGlvbnMoKTsKKwkJaWYgKHByb3BlcnR5ID09
IERJTUVOU0lPTlNfUFJPUEVSVFkpIHsKKwkJCXJldHVybiBkaW1lbnNpb25zKCk7CiAJCX0KIAkJ
Ly8gYWxsb3cgZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiB0byBmbGFnIHRoZSBlcnJvcgogCQlyZXR1
cm4gc3VwZXIuaW50ZXJuYWxHZXRDaGlsZExpc3RQcm9wZXJ0eShwcm9wZXJ0eSk7CkBAIC0xNTAs
NiArMTkxLDEzIEBACiAJCQkJcmV0dXJuIGdldENvbXBvbmVudFR5cGUoKTsKIAkJCX0gZWxzZSB7
CiAJCQkJc2V0Q29tcG9uZW50VHlwZSgoVHlwZSkgY2hpbGQpOworCQkJCXJldHVybiBudWxsOwor
CQkJfQorCQl9IGVsc2UgaWYgKHByb3BlcnR5ID09IEVMRU1FTlRfVFlQRV9QUk9QRVJUWSkgewor
CQkJaWYgKGdldCkgeworCQkJCXJldHVybiBnZXRFbGVtZW50VHlwZSgpOworCQkJfSBlbHNlIHsK
KwkJCQlzZXRFbGVtZW50VHlwZSgoVHlwZSkgY2hpbGQpOwogCQkJCXJldHVybiBudWxsOwogCQkJ
fQogCQl9CkBAIC0xNjgsMTMgKzIxNiwxNyBAQAogCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBU1RO
b2RlLgogCSAqLwogCUFTVE5vZGUgY2xvbmUwKEFTVCB0YXJnZXQpIHsKLQkJQXJyYXlUeXBlIHJl
c3VsdCA9IG5ldyBBcnJheVR5cGUodGFyZ2V0KTsKLQkJcmVzdWx0LnNldFNvdXJjZVJhbmdlKGdl
dFN0YXJ0UG9zaXRpb24oKSwgZ2V0TGVuZ3RoKCkpOwotCQlyZXN1bHQuc2V0Q29tcG9uZW50VHlw
ZSgoVHlwZSkgZ2V0Q29tcG9uZW50VHlwZSgpLmNsb25lKHRhcmdldCkpOwotCQlpZiAodGhpcy5h
c3QuYXBpTGV2ZWwgPj0gQVNULkpMUzgpIHsKLQkJCXJlc3VsdC5hbm5vdGF0aW9ucygpLmFkZEFs
bCgKLQkJCQkJQVNUTm9kZS5jb3B5U3VidHJlZXModGFyZ2V0LCBhbm5vdGF0aW9ucygpKSk7CisJ
CUFycmF5VHlwZSByZXN1bHQ7CisJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCA8IEFTVC5KTFM4KSB7
CisJCQlyZXN1bHQgPSBuZXcgQXJyYXlUeXBlKHRhcmdldCk7CisJCQlyZXN1bHQuc2V0Q29tcG9u
ZW50VHlwZSgoVHlwZSkgZ2V0Q29tcG9uZW50VHlwZSgpLmNsb25lKHRhcmdldCkpOwkJCQorCQl9
IGVsc2UgeworCQkJcmVzdWx0ID0gbmV3IEFycmF5VHlwZSh0YXJnZXQsIDApOworCQkJcmVzdWx0
LnNldEVsZW1lbnRUeXBlKChUeXBlKSBnZXRFbGVtZW50VHlwZSgpLmNsb25lKHRhcmdldCkpOwor
CQkJcmVzdWx0LmRpbWVuc2lvbnMoKS5hZGRBbGwoCisJCQkJCUFTVE5vZGUuY29weVN1YnRyZWVz
KHRhcmdldCwgZGltZW5zaW9ucygpKSk7CiAJCX0KKwkJcmVzdWx0LnNldFNvdXJjZVJhbmdlKGdl
dFN0YXJ0UG9zaXRpb24oKSwgZ2V0TGVuZ3RoKCkpOwogCQlyZXR1cm4gcmVzdWx0OwogCX0KIApA
QCAtMTkzLDkgKzI0NSwxMSBAQAogCQlib29sZWFuIHZpc2l0Q2hpbGRyZW4gPSB2aXNpdG9yLnZp
c2l0KHRoaXMpOwogCQlpZiAodmlzaXRDaGlsZHJlbikgewogCQkJLy8gdmlzaXQgY2hpbGRyZW4g
aW4gbm9ybWFsIGxlZnQgdG8gcmlnaHQgcmVhZGluZyBvcmRlcgotCQkJYWNjZXB0Q2hpbGQodmlz
aXRvciwgZ2V0Q29tcG9uZW50VHlwZSgpKTsKLQkJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCA+PSBB
U1QuSkxTOCkgewotCQkJCWFjY2VwdENoaWxkcmVuKHZpc2l0b3IsIHRoaXMuYW5ub3RhdGlvbnMp
OworCQkJaWYgKHRoaXMuYXN0LmFwaUxldmVsIDwgQVNULkpMUzgpIHsKKwkJCQlhY2NlcHRDaGls
ZCh2aXNpdG9yLCBnZXRDb21wb25lbnRUeXBlKCkpOwkJCQkKKwkJCX0gZWxzZSB7CisJCQkJYWNj
ZXB0Q2hpbGQodmlzaXRvciwgZ2V0RWxlbWVudFR5cGUoKSk7CisJCQkJYWNjZXB0Q2hpbGRyZW4o
dmlzaXRvciwgdGhpcy5kaW1lbnNpb25zKTsKIAkJCX0KIAkJfQogCQl2aXNpdG9yLmVuZFZpc2l0
KHRoaXMpOwpAQCAtMjA2LDggKzI2MCwxMCBAQAogCSAqIG1heSBiZSBhbm90aGVyIGFycmF5IHR5
cGUuCiAJICoKIAkgKiBAcmV0dXJuIHRoZSBjb21wb25lbnQgdHlwZSBub2RlCisJICogQGRlcHJl
Y2F0ZWQgZnJvbSBKTFM4IGFuZCBsYXRlciwgdGhlIHJlY3Vyc2l2ZSBzdHJ1Y3R1cmUgaXMgbm90
IHZhbGlkCiAJICovCiAJcHVibGljIFR5cGUgZ2V0Q29tcG9uZW50VHlwZSgpIHsKKwkJc3VwcG9y
dGVkT25seUluMl8zXzQoKTsKIAkJaWYgKHRoaXMuY29tcG9uZW50VHlwZSA9PSBudWxsKSB7CiAJ
CQkvLyBsYXp5IGluaXQgbXVzdCBiZSB0aHJlYWQtc2FmZSBmb3IgcmVhZGVycwogCQkJc3luY2hy
b25pemVkICh0aGlzKSB7CkBAIC0yMzIsOCArMjg4LDEwIEBACiAJICogPGxpPnRoZSBub2RlIGFs
cmVhZHkgaGFzIGEgcGFyZW50PC9saT4KIAkgKiA8bGk+YSBjeWNsZSBpbiB3b3VsZCBiZSBjcmVh
dGVkPC9saT4KIAkgKiA8L3VsPgorCSAqIEBkZXByZWNhdGVkIGZyb20gSkxTOCBhbmQgbGF0ZXIs
IHRoZSByZWN1cnNpdmUgc3RydWN0dXJlIGlzIG5vdCB2YWxpZAogCSAqLwogCXB1YmxpYyB2b2lk
IHNldENvbXBvbmVudFR5cGUoVHlwZSBjb21wb25lbnRUeXBlKSB7CisJCXN1cHBvcnRlZE9ubHlJ
bjJfM180KCk7CiAJCWlmIChjb21wb25lbnRUeXBlID09IG51bGwpIHsKIAkJCXRocm93IG5ldyBJ
bGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oKTsKIAkJfQpAQCAtMjQ4LDQzICszMDYsMTE4IEBACiAJ
ICogbmV2ZXIgYW4gYXJyYXkgdHlwZS4KIAkgKiA8cD4KIAkgKiBUaGlzIGlzIGEgY29udmVuaWVu
Y2UgbWV0aG9kIHRoYXQgZGVzY2VuZHMgYSBjaGFpbiBvZiBuZXN0ZWQgYXJyYXkgdHlwZXMKLQkg
KiB1bnRpbCBpdCByZWFjaGVzIGEgbm9uLWFycmF5IHR5cGUuCisJICogdW50aWwgaXQgcmVhY2hl
cyBhIG5vbi1hcnJheSB0eXBlIHVudGlsIEpMUzQuIEZyb20gSkxTOCBhbmQgbGF0ZXIsIHRoaXMg
cmV0dXJucyB0aGUKKwkgKiBlbGVtZW50IHR5cGUgZGlyZWN0bHkuCiAJICogPC9wPgogCSAqCi0J
ICogQHJldHVybiB0aGUgY29tcG9uZW50IHR5cGUgbm9kZQorCSAqIEByZXR1cm4gdGhlIGVsZW1l
bnQgdHlwZSBub2RlCiAJICovCiAJcHVibGljIFR5cGUgZ2V0RWxlbWVudFR5cGUoKSB7Ci0JCVR5
cGUgdCA9IGdldENvbXBvbmVudFR5cGUoKTsKLQkJd2hpbGUgKHQuaXNBcnJheVR5cGUoKSkgewot
CQkJdCA9ICgoQXJyYXlUeXBlKSB0KS5nZXRDb21wb25lbnRUeXBlKCk7CisJCWlmICh0aGlzLmFz
dC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsKKwkJCVR5cGUgdCA9IGdldENvbXBvbmVudFR5cGUo
KTsKKwkJCXdoaWxlICh0LmlzQXJyYXlUeXBlKCkpIHsKKwkJCQl0ID0gKChBcnJheVR5cGUpIHQp
LmdldENvbXBvbmVudFR5cGUoKTsKKwkJCX0KKwkJCXJldHVybiB0OwogCQl9Ci0JCXJldHVybiB0
OworCQlpZiAodGhpcy5lbGVtZW50VHlwZSA9PSBudWxsKSB7CisJCQkvLyBsYXp5IGluaXQgbXVz
dCBiZSB0aHJlYWQtc2FmZSBmb3IgcmVhZGVycworCQkJc3luY2hyb25pemVkICh0aGlzKSB7CisJ
CQkJaWYgKHRoaXMuZWxlbWVudFR5cGUgPT0gbnVsbCkgeworCQkJCQlwcmVMYXp5SW5pdCgpOwor
CQkJCQl0aGlzLmVsZW1lbnRUeXBlID0gbmV3IFNpbXBsZVR5cGUodGhpcy5hc3QpOworCQkJCQlw
b3N0TGF6eUluaXQodGhpcy5lbGVtZW50VHlwZSwgRUxFTUVOVF9UWVBFX1BST1BFUlRZKTsKKwkJ
CQl9CisJCQl9CisJCX0KKwkJcmV0dXJuIHRoaXMuZWxlbWVudFR5cGU7CisJfQorCisJLyoqCisJ
ICogU2V0cyB0aGUgZWxlbWVudCB0eXBlIG9mIHRoZSBhcnJheS4KKwkgKgorCSAqIEBwYXJhbSBj
aGlsZCB0aGUgbmV3IHR5cGUKKwkgKiBAZXhjZXB0aW9uIElsbGVnYWxBcmd1bWVudEV4Y2VwdGlv
biBpZjoKKwkgKiA8dWw+CisJICogPGxpPnRoZSBub2RlIGJlbG9uZ3MgdG8gYSBkaWZmZXJlbnQg
QVNUPC9saT4KKwkgKiA8bGk+dGhlIG5vZGUgYWxyZWFkeSBoYXMgYSBwYXJlbnQ8L2xpPgorCSAq
IDxsaT50aGUgbm9kZSBpcyBhbiBhcnJheSB0eXBlPC9saT4KKwkgKiA8L3VsPgorCSAqIEBzaW5j
ZSAzLjkgQkVUQV9KQVZBOAorCSAqLworCXB1YmxpYyB2b2lkIHNldEVsZW1lbnRUeXBlKFR5cGUg
Y2hpbGQpIHsKKwkJaWYgKGNoaWxkID09IG51bGwgfHwgY2hpbGQgaW5zdGFuY2VvZiBBcnJheVR5
cGUpIHsKKwkJCXRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oKTsKKwkJfQorCQlB
U1ROb2RlIG9sZENoaWxkID0gdGhpcy5lbGVtZW50VHlwZTsKKwkJcHJlUmVwbGFjZUNoaWxkKG9s
ZENoaWxkLCBjaGlsZCwgRUxFTUVOVF9UWVBFX1BST1BFUlRZKTsKKwkJdGhpcy5lbGVtZW50VHlw
ZSA9IGNoaWxkOworCQlwb3N0UmVwbGFjZUNoaWxkKG9sZENoaWxkLCBjaGlsZCwgRUxFTUVOVF9U
WVBFX1BST1BFUlRZKTsKIAl9CiAKIAkvKioKIAkgKiBSZXR1cm5zIHRoZSBudW1iZXIgb2YgZGlt
ZW5zaW9ucyBpbiB0aGlzIGFycmF5IHR5cGUuCiAJICogPHA+CiAJICogVGhpcyBpcyBhIGNvbnZl
bmllbmNlIG1ldGhvZCB0aGF0IGRlc2NlbmRzIGEgY2hhaW4gb2YgbmVzdGVkIGFycmF5IHR5cGVz
Ci0JICogdW50aWwgaXQgcmVhY2hlcyBhIG5vbi1hcnJheSB0eXBlLgorCSAqIHVudGlsIGl0IHJl
YWNoZXMgYSBub24tYXJyYXkgdHlwZSAodW50aWwgSkxTNCkuIEZyb20gSkxTOCBvbndhcmRzLCAK
KwkgKiB0aGlzIHJldHVybnMgdGhlIHNpemUgb2YgdGhlIGRpbWVuc2lvbnMgbGlzdC4KIAkgKiA8
L3A+CiAJICoKIAkgKiBAcmV0dXJuIHRoZSBudW1iZXIgb2YgZGltZW5zaW9ucyAoYWx3YXlzIHBv
c2l0aXZlKQogCSAqLwogCXB1YmxpYyBpbnQgZ2V0RGltZW5zaW9ucygpIHsKLQkJVHlwZSB0ID0g
Z2V0Q29tcG9uZW50VHlwZSgpOwotCQlpbnQgZGltZW5zaW9ucyA9IDE7IC8vIGFsd2F5cyBpbmNs
dWRlIHRoaXMgYXJyYXkgdHlwZQotCQl3aGlsZSAodC5pc0FycmF5VHlwZSgpKSB7Ci0JCQlkaW1l
bnNpb25zKys7Ci0JCQl0ID0gKChBcnJheVR5cGUpIHQpLmdldENvbXBvbmVudFR5cGUoKTsKKwkJ
aWYgKHRoaXMuYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgeworCQkJVHlwZSB0ID0gZ2V0Q29t
cG9uZW50VHlwZSgpOworCQkJaW50IGRpbWVuc2lvbiA9IDE7IC8vIGFsd2F5cyBpbmNsdWRlIHRo
aXMgYXJyYXkgdHlwZQorCQkJd2hpbGUgKHQuaXNBcnJheVR5cGUoKSkgeworCQkJCWRpbWVuc2lv
bisrOworCQkJCXQgPSAoKEFycmF5VHlwZSkgdCkuZ2V0Q29tcG9uZW50VHlwZSgpOworCQkJfQor
CQkJcmV0dXJuIGRpbWVuc2lvbjsJCQkKIAkJfQotCQlyZXR1cm4gZGltZW5zaW9uczsKKwkJcmV0
dXJuIGRpbWVuc2lvbnMoKS5zaXplKCk7CisJfQorCisJLyoqCisJICogUmV0dXJucyB0aGUgZGlt
ZW5zaW9uIGQgaW4gdGhpcyBhcnJheSB0eXBlLgorCSAqIDxwPgorCSAqIFRoaXMgaXMgYSBjb252
ZW5pZW5jZSBtZXRob2QgdGhhdCByZXR1cm5zIHRoZSBkaW1lbnNpb24gYXQgdGhlIGdpdmVuIG51
bWJlciBkLgorCSAqIDwvcD4KKwkgKiBAcGFyYW0gZCBkaW1lbnNpb24gbm8KKwkgKiBAcmV0dXJu
IERpbWVuc2lvbiBhdCBudW1iZXIgZCwgbnVsbCBpZiBkIG91dCBvZiByYW5nZQorCSAqIAorCSAq
IEBzaW5jZSAzLjkgQkVUQV9KQVZBOAorCSAqLworCXB1YmxpYyBFeHRyYURpbWVuc2lvbiBnZXRE
aW1lbnNpb25ObyhpbnQgZCkgeworCQl1bnN1cHBvcnRlZEluMl8zXzQoKTsKKwkJRXh0cmFEaW1l
bnNpb24gZXh0cmFEaW1lbnNpb24gPSBudWxsOworCQlpbnQgbiA9IGdldERpbWVuc2lvbnMoKSAt
IDE7CisJCWlmIChkID49IDAgJiYgZCA8PSBuKSB7CisJCQlleHRyYURpbWVuc2lvbiA9IChFeHRy
YURpbWVuc2lvbikgZGltZW5zaW9ucygpLmdldChuIC0gZCk7CisJCX0KKwkJcmV0dXJuIGV4dHJh
RGltZW5zaW9uOworCX0KKworCS8qKgorCSAqIFJldHVybnMgdGhlIGxpdmUgb3JkZXJlZCBsaXN0
IG9mIGRpbWVuc2lvbnMgd2l0aCBvcHRpb25hbCBhbm5vdGF0aW9ucyAoYWRkZWQgaW4gSkxTOCBB
UEkpLgorCSAqIAorCSAqIEByZXR1cm4gdGhlIGxpdmUgbGlzdCBvZiBkaW1lbnNpb25zIHdpdGgg
b3B0aW9uYWwgYW5ub3RhdGlvbnMgKGVsZW1lbnQgdHlwZToge0BsaW5rIEV4dHJhRGltZW5zaW9u
fSkKKwkgKiBAZXhjZXB0aW9uIFVuc3VwcG9ydGVkT3BlcmF0aW9uRXhjZXB0aW9uIGlmIHRoaXMg
b3BlcmF0aW9uIGlzIHVzZWQgYmVsb3cgSkxTOAorCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAor
CSAqLworCXB1YmxpYyBMaXN0IGRpbWVuc2lvbnMoKSB7CisJCS8vIG1vcmUgZWZmaWNpZW50IHRo
YW4ganVzdCBjYWxsaW5nIHVuc3VwcG9ydGVkSW4yXzNfNCgpIHRvIGNoZWNrCisJCWlmICh0aGlz
LmRpbWVuc2lvbnMgPT0gbnVsbCkgeworCQkJdW5zdXBwb3J0ZWRJbjJfM180KCk7CisJCX0KKwkJ
cmV0dXJuIHRoaXMuZGltZW5zaW9uczsKIAl9CiAKIAkvKiAob21pdCBqYXZhZG9jIGZvciB0aGlz
IG1ldGhvZCkKIAkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KIAkgKi8KIAlpbnQgbWVt
U2l6ZSgpIHsKLQkJcmV0dXJuIEJBU0VfTk9ERV9TSVpFICsgMiAqIDQ7CisJCXJldHVybiBCQVNF
X05PREVfU0laRSArIDMgKiA0OwogCX0KIAogCS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0
aG9kKQpAQCAtMjkzLDggKzQyNiw5IEBACiAJaW50IHRyZWVTaXplKCkgewogCQlyZXR1cm4KIAkJ
CW1lbVNpemUoKQotCQkJKyAodGhpcy5jb21wb25lbnRUeXBlID09IG51bGwgPyAwIDogZ2V0Q29t
cG9uZW50VHlwZSgpLnRyZWVTaXplKCkpCi0JCQkrICh0aGlzLmFubm90YXRpb25zID09IG51bGwg
PyAwIDogdGhpcy5hbm5vdGF0aW9ucy5saXN0U2l6ZSgpKTsKKwkJCSsgKHRoaXMuY29tcG9uZW50
VHlwZSA9PSBudWxsID8gMCA6IGdldENvbXBvbmVudFR5cGUoKS50cmVlU2l6ZSgpCisJCQkrICh0
aGlzLmRpbWVuc2lvbnMgPT0gbnVsbCA/IDAgOiB0aGlzLmRpbWVuc2lvbnMubGlzdFNpemUoKSkK
KwkJCSsgKHRoaXMuZWxlbWVudFR5cGUgPT0gbnVsbCA/IDAgOiBnZXRFbGVtZW50VHlwZSgpLnRy
ZWVTaXplKCkpKTsKIAl9CiB9CiAKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Rv
bS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vTmFpdmVBU1RGbGF0dGVuZXIuamF2
YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29y
ZS9kb20vTmFpdmVBU1RGbGF0dGVuZXIuamF2YQppbmRleCBiNzM1ZGVhLi4zNTc3YjY4IDEwMDY0
NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvcmUvZG9tL05haXZlQVNURmxhdHRlbmVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9OYWl2ZUFTVEZsYXR0ZW5l
ci5qYXZhCkBAIC0zNzAsMTIgKzM3MCwyNyBAQAogCSAqIEBzZWUgQVNUVmlzaXRvciN2aXNpdChB
cnJheVR5cGUpCiAJICovCiAJcHVibGljIGJvb2xlYW4gdmlzaXQoQXJyYXlUeXBlIG5vZGUpIHsK
LQkJbm9kZS5nZXRDb21wb25lbnRUeXBlKCkuYWNjZXB0KHRoaXMpOwotCQl2aXNpdFR5cGVBbm5v
dGF0aW9ucyhub2RlKTsKLQkJdGhpcy5idWZmZXIuYXBwZW5kKCJbXSIpOy8vJE5PTi1OTFMtMSQK
KwkJaWYgKG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQlnZXRBcnJh
eVR5cGVDb21wb25lbnRUeXBlKG5vZGUpOworCQkJdGhpcy5idWZmZXIuYXBwZW5kKCJbXSIpOy8v
JE5PTi1OTFMtMSQKKwkJfSBlbHNlIHsKKwkJCW5vZGUuZ2V0RWxlbWVudFR5cGUoKS5hY2NlcHQo
dGhpcyk7CisJCQlMaXN0IGRpbWVuc2lvbnMgPSBub2RlLmRpbWVuc2lvbnMoKTsKKwkJCWZvciAo
aW50IGkgPSAwOyBpIDwgZGltZW5zaW9ucy5zaXplKCkgOyBpKyspIHsKKwkJCQlFeHRyYURpbWVu
c2lvbiBhRGltZW5zaW9uID0gKEV4dHJhRGltZW5zaW9uKSBkaW1lbnNpb25zLmdldChpKTsKKwkJ
CQlhRGltZW5zaW9uLmFjY2VwdCh0aGlzKTsKKwkJCX0KKwkJfQogCQlyZXR1cm4gZmFsc2U7CiAJ
fQogCisJLyoqCisJICogQHBhcmFtIG5vZGUgYXJyYXkgCisJICovCisJcHJpdmF0ZSB2b2lkIGdl
dEFycmF5VHlwZUNvbXBvbmVudFR5cGUoQXJyYXlUeXBlIG5vZGUpIHsKKwkJbm9kZS5nZXRDb21w
b25lbnRUeXBlKCkuYWNjZXB0KHRoaXMpOworCX0KKwogCS8qCiAJICogQHNlZSBBU1RWaXNpdG9y
I3Zpc2l0KEFzc2VydFN0YXRlbWVudCkKIAkgKi8KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9BU1RS
ZXdyaXRlQW5hbHl6ZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9BU1RSZXdyaXRlQW5hbHl6ZXIuamF2YQpp
bmRleCA2Y2Y0NGE5Li44YmEzMTFhIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9k
b20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL3Jld3JpdGUvQVNUUmV3cml0ZUFu
YWx5emVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb3JlL2RvbS9yZXdyaXRlL0FTVFJld3JpdGVBbmFseXplci5qYXZhCkBAIC0y
MDU4LDYgKzIwNTgsNyBAQAogCiAJCVRleHRFZGl0R3JvdXAgZWRpdEdyb3VwPSBudWxsOwogCQlS
ZXdyaXRlRXZlbnQgdHlwZUV2ZW50PSBnZXRFdmVudChub2RlLCBBcnJheUNyZWF0aW9uLlRZUEVf
UFJPUEVSVFkpOworCQlib29sZWFuIGxldmVsTGVzc1RoYW44ID0gbm9kZS5nZXRBU1QoKS5hcGlM
ZXZlbCgpIDwgQVNULkpMUzggPyB0cnVlIDogZmFsc2U7CiAJCWlmICh0eXBlRXZlbnQgIT0gbnVs
bCAmJiB0eXBlRXZlbnQuZ2V0Q2hhbmdlS2luZCgpID09IFJld3JpdGVFdmVudC5SRVBMQUNFRCkg
eyAvLyBjaGFuZ2VkIGFycmF5dHlwZSBjYW4gaGF2ZSBkaWZmZXJlbnQgZGltZW5zaW9uIG9yIHR5
cGUgbmFtZQogCQkJcmVwbGFjaW5nVHlwZT0gKEFycmF5VHlwZSkgdHlwZUV2ZW50LmdldE5ld1Zh
bHVlKCk7CiAJCQllZGl0R3JvdXA9IGdldEVkaXRHcm91cCh0eXBlRXZlbnQpOwpAQCAtMjA3Nywx
NSArMjA3OCwxOCBAQAogCQkJUmV3cml0ZUV2ZW50IGRpbUV2ZW50PSBnZXRFdmVudChub2RlLCBB
cnJheUNyZWF0aW9uLkRJTUVOU0lPTlNfUFJPUEVSVFkpOwogCQkJYm9vbGVhbiBoYXNEaW1lbnNp
b25DaGFuZ2VzPSAoZGltRXZlbnQgIT0gbnVsbCAmJiBkaW1FdmVudC5nZXRDaGFuZ2VLaW5kKCkg
IT0gUmV3cml0ZUV2ZW50LlVOQ0hBTkdFRCk7CiAJCQlSZXdyaXRlRXZlbnRbXSBldmVudHM9IGhh
c0RpbWVuc2lvbkNoYW5nZXMgPyBkaW1FdmVudC5nZXRDaGlsZHJlbigpIDogbnVsbDsKLQkJCUFy
cmF5VHlwZSBjdXJyZW50TGV2ZWw9IChBcnJheVR5cGUpIHJlcGxhY2luZ1R5cGUuZ2V0RWxlbWVu
dFR5cGUoKS5nZXRQYXJlbnQoKTsKKwkJCUFycmF5VHlwZSBjdXJyZW50TGV2ZWwgPSBsZXZlbExl
c3NUaGFuOCA/IChBcnJheVR5cGUpIHJlcGxhY2luZ1R5cGUuZ2V0RWxlbWVudFR5cGUoKS5nZXRQ
YXJlbnQoKSA6IG51bGw7CisJCQlpbnQgY3VycmVudERpbWVuc2lvbiA9IGxldmVsTGVzc1RoYW44
ID8gLTEgOiAwOworCQkJaW50IHJlcGxhY2luZ1R5cGVEaW1lbnNpb25zID0gcmVwbGFjaW5nVHlw
ZS5nZXREaW1lbnNpb25zKCk7CiAJCQlpbnQgaT0wLCBkaW1TaXplPSAoZXZlbnRzID09IG51bGwp
ID8gMCA6IGV2ZW50cy5sZW5ndGg7CiAJCQlUeXBlIGVsZW1lbnRUeXBlPSBhcnJheVR5cGUuZ2V0
RWxlbWVudFR5cGUoKTsKIAkJCWludCBvZmZzZXQ9IGVsZW1lbnRUeXBlLmdldFN0YXJ0UG9zaXRp
b24oKSArIGVsZW1lbnRUeXBlLmdldExlbmd0aCgpOwotCQkJd2hpbGUoY3VycmVudExldmVsICE9
IG51bGwpIHsKLQkJCQlpZiAobm9kZS5nZXRBU1QoKS5hcGlMZXZlbCgpID49IEFTVC5KTFM4KSB7
Ci0JCQkJCXJld3JpdGVUeXBlQW5ub3RhdGlvbnMoY3VycmVudExldmVsLCBBcnJheVR5cGUuQU5O
T1RBVElPTlNfUFJPUEVSVFksIG9mZnNldCk7Ci0JCQkJfQorCQkJd2hpbGUoY3VycmVudExldmVs
ICE9IG51bGwgfHwgY3VycmVudERpbWVuc2lvbiAhPSAtMSkgewogCQkJCWlmIChpIDwgZGltU2l6
ZSkgeworCQkJCQlpZiAoIWxldmVsTGVzc1RoYW44KSB7CisJCQkJCQlFeHRyYURpbWVuc2lvbiBk
aW0gPSAoRXh0cmFEaW1lbnNpb24pIHJlcGxhY2luZ1R5cGUuZGltZW5zaW9ucygpLmdldChpKTsK
KwkJCQkJCXJld3JpdGVUeXBlQW5ub3RhdGlvbnMoZGltLCBFeHRyYURpbWVuc2lvbi5BTk5PVEFU
SU9OU19QUk9QRVJUWSwgb2Zmc2V0KTsKKwkJCQkJfQogCQkJCQkgb2Zmc2V0PSBnZXRTY2FubmVy
KCkuZ2V0VG9rZW5FbmRPZmZzZXQoVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lTEJSQUNLRVQsIG9m
ZnNldCk7CiAJCQkJCWlmIChoYXNEaW1lbnNpb25DaGFuZ2VzKSB7CiAJCQkJCQlSZXdyaXRlRXZl
bnQgZXZlbnQ9IGV2ZW50c1tpXTsKQEAgLTIxMjAsMTMgKzIxMjQsMzMgQEAKIAkJCQkJCW9mZnNl
dD0gcmV0cmlldmVSaWdodEJyYWNrZXRFbmRQb3NpdGlvbihvZmZzZXQsIDEsIHRydWUpOwogCQkJ
CQl9CiAJCQkJfSBlbHNlIGlmIChpIDwgbk9sZEJyYWNrZXRzKSB7CisJCQkJCWlmICghbGV2ZWxM
ZXNzVGhhbjgpIHsKKwkJCQkJCUV4dHJhRGltZW5zaW9uIGRpbSA9IChFeHRyYURpbWVuc2lvbikg
cmVwbGFjaW5nVHlwZS5kaW1lbnNpb25zKCkuZ2V0KGkpOworCQkJCQkJcmV3cml0ZVR5cGVBbm5v
dGF0aW9ucyhkaW0sIEV4dHJhRGltZW5zaW9uLkFOTk9UQVRJT05TX1BST1BFUlRZLCBvZmZzZXQp
OworCQkJCQl9CiAJCQkJCW9mZnNldD0gcmV0cmlldmVSaWdodEJyYWNrZXRFbmRQb3NpdGlvbihv
ZmZzZXQsIDEsIGZhbHNlKTsKIAkJCQl9IGVsc2UgeworCQkJCQlpZiAoIWxldmVsTGVzc1RoYW44
KSB7CisJCQkJCQlFeHRyYURpbWVuc2lvbiBkaW0gPSAoRXh0cmFEaW1lbnNpb24pIHJlcGxhY2lu
Z1R5cGUuZGltZW5zaW9ucygpLmdldChpKTsKKwkJCQkJCUxpc3QgYW5ub3RhdGlvbnMgPSBkaW0u
YW5ub3RhdGlvbnMoKTsKKwkJCQkJCWlmIChhbm5vdGF0aW9ucyAhPSBudWxsKSB7CisJCQkJCQkJ
Zm9yIChpbnQgaiA9IDA7IGogPCBhbm5vdGF0aW9ucy5zaXplKCk7IGorKykgeworCQkJCQkJCQlB
bm5vdGF0aW9uIGFubm90YXRpb24gPSAoQW5ub3RhdGlvbikgYW5ub3RhdGlvbnMuZ2V0KGopOwor
CQkJCQkJCQlkb1RleHRJbnNlcnQob2Zmc2V0LCBhbm5vdGF0aW9uLnRvU3RyaW5nKCkgKyAiICIs
IGVkaXRHcm91cCk7IC8vJE5PTi1OTFMtMSQKKwkJCQkJCQl9CisJCQkJCQkJCisJCQkJCQl9CisJ
CQkJCX0KIAkJCQkJZG9UZXh0SW5zZXJ0KG9mZnNldCwgIltdIiwgZWRpdEdyb3VwKTsgLy8kTk9O
LU5MUy0xJAogCQkJCX0KIAkJCQlpKys7Ci0JCQkJaWYgKGN1cnJlbnRMZXZlbCA9PSByZXBsYWNp
bmdUeXBlKSBicmVhazsKLQkJCQljdXJyZW50TGV2ZWw9IChBcnJheVR5cGUpIGN1cnJlbnRMZXZl
bC5nZXRQYXJlbnQoKTsKKwkJCQlpZiAobGV2ZWxMZXNzVGhhbjgpIHsKKwkJCQkJaWYgKGN1cnJl
bnRMZXZlbCA9PSByZXBsYWNpbmdUeXBlKSBicmVhazsKKwkJCQkJY3VycmVudExldmVsPSAoQXJy
YXlUeXBlKSBjdXJyZW50TGV2ZWwuZ2V0UGFyZW50KCk7CisJCQkJfSBlbHNlIHsKKwkJCQkJKytj
dXJyZW50RGltZW5zaW9uOworCQkJCQlpZiAoY3VycmVudERpbWVuc2lvbiA9PSByZXBsYWNpbmdU
eXBlRGltZW5zaW9ucykgYnJlYWs7CisJCQkJfQogCQkJfQogCQkJaWYgKGkgPCBuT2xkQnJhY2tl
dHMpIHsKIAkJCQlpbnQgZW5kUG9zPSByZXRyaWV2ZVJpZ2h0QnJhY2tldEVuZFBvc2l0aW9uKG9m
ZnNldCwgbk9sZEJyYWNrZXRzIC0gaSwgZmFsc2UpOwpAQCAtMjE3NSwyMSArMjE5OSwyOSBAQAog
CX0KIAogCXByaXZhdGUgVHlwZSBnZXRFbGVtZW50VHlwZShBcnJheVR5cGUgcGFyZW50KSB7Ci0J
CVR5cGUgdCA9IChUeXBlKSBnZXRPcmlnaW5hbFZhbHVlKHBhcmVudCwgQXJyYXlUeXBlLkNPTVBP
TkVOVF9UWVBFX1BST1BFUlRZKTsKLQkJd2hpbGUgKHQuaXNBcnJheVR5cGUoKSkgewotCQkJdCA9
IChUeXBlKSBnZXRPcmlnaW5hbFZhbHVlKHQsIEFycmF5VHlwZS5DT01QT05FTlRfVFlQRV9QUk9Q
RVJUWSk7CisJCWlmIChwYXJlbnQuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJ
CQlUeXBlIHQgPSAoVHlwZSkgZ2V0T3JpZ2luYWxWYWx1ZShwYXJlbnQsIEFycmF5VHlwZS5DT01Q
T05FTlRfVFlQRV9QUk9QRVJUWSk7CisJCQl3aGlsZSAodC5pc0FycmF5VHlwZSgpKSB7CisJCQkJ
dCA9IChUeXBlKSBnZXRPcmlnaW5hbFZhbHVlKHQsIEFycmF5VHlwZS5DT01QT05FTlRfVFlQRV9Q
Uk9QRVJUWSk7CisJCQl9CisJCQlyZXR1cm4gdDsKIAkJfQorCQlUeXBlIHQgPSAoVHlwZSkgZ2V0
T3JpZ2luYWxWYWx1ZShwYXJlbnQsIEFycmF5VHlwZS5FTEVNRU5UX1RZUEVfUFJPUEVSVFkpOwog
CQlyZXR1cm4gdDsKIAl9CiAKIAlwcml2YXRlIGludCBnZXREaW1lbnNpb25zKEFycmF5VHlwZSBw
YXJlbnQpIHsKLQkJVHlwZSB0ID0gKFR5cGUpIGdldE9yaWdpbmFsVmFsdWUocGFyZW50LCBBcnJh
eVR5cGUuQ09NUE9ORU5UX1RZUEVfUFJPUEVSVFkpOwotCQlpbnQgZGltZW5zaW9ucyA9IDE7IC8v
IGFsd2F5cyBpbmNsdWRlIHRoaXMgYXJyYXkgdHlwZQotCQl3aGlsZSAodC5pc0FycmF5VHlwZSgp
KSB7Ci0JCQlkaW1lbnNpb25zKys7Ci0JCQl0ID0gKFR5cGUpIGdldE9yaWdpbmFsVmFsdWUodCwg
QXJyYXlUeXBlLkNPTVBPTkVOVF9UWVBFX1BST1BFUlRZKTsKKwkJaWYgKHBhcmVudC5nZXRBU1Qo
KS5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsKKwkJCVR5cGUgdCA9IChUeXBlKSBnZXRPcmlnaW5h
bFZhbHVlKHBhcmVudCwgQXJyYXlUeXBlLkNPTVBPTkVOVF9UWVBFX1BST1BFUlRZKTsKKwkJCWlu
dCBkaW1lbnNpb25zID0gMTsgLy8gYWx3YXlzIGluY2x1ZGUgdGhpcyBhcnJheSB0eXBlCisJCQl3
aGlsZSAodC5pc0FycmF5VHlwZSgpKSB7CisJCQkJZGltZW5zaW9ucysrOworCQkJCXQgPSAoVHlw
ZSkgZ2V0T3JpZ2luYWxWYWx1ZSh0LCBBcnJheVR5cGUuQ09NUE9ORU5UX1RZUEVfUFJPUEVSVFkp
OworCQkJfQorCQkJcmV0dXJuIGRpbWVuc2lvbnM7CiAJCX0KLQkJcmV0dXJuIGRpbWVuc2lvbnM7
CisJCUxpc3QgZGltZW5zaW9ucyA9IChMaXN0KSBnZXRPcmlnaW5hbFZhbHVlKHBhcmVudCwgQXJy
YXlUeXBlLkRJTUVOU0lPTlNfUFJPUEVSVFkpOworCQlyZXR1cm4gZGltZW5zaW9ucy5zaXplKCk7
CiAJfQogCiAJLyogKG5vbi1KYXZhZG9jKQpAQCAtMjIxNCw5ICsyMjQ2LDEyIEBACiAJCWlmICgh
aGFzQ2hpbGRyZW5DaGFuZ2VzKG5vZGUpKSB7CiAJCQlyZXR1cm4gZG9WaXNpdFVuY2hhbmdlZENo
aWxkcmVuKG5vZGUpOwogCQl9Ci0JCWludCBwb3MgPSByZXdyaXRlUmVxdWlyZWROb2RlKG5vZGUs
IEFycmF5VHlwZS5DT01QT05FTlRfVFlQRV9QUk9QRVJUWSk7Ci0JCWlmIChub2RlLmdldEFTVCgp
LmFwaUxldmVsKCkgPj0gQVNULkpMUzgpIHsKLQkJCXJld3JpdGVUeXBlQW5ub3RhdGlvbnMobm9k
ZSwgQXJyYXlUeXBlLkFOTk9UQVRJT05TX1BST1BFUlRZLCBwb3MpOworCQlpZiAobm9kZS5nZXRB
U1QoKS5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsKKwkJCXJld3JpdGVSZXF1aXJlZE5vZGUobm9k
ZSwgQXJyYXlUeXBlLkNPTVBPTkVOVF9UWVBFX1BST1BFUlRZKTsKKwkJfSBlbHNlIHsKKwkJCXJl
d3JpdGVSZXF1aXJlZE5vZGUobm9kZSwgQXJyYXlUeXBlLkVMRU1FTlRfVFlQRV9QUk9QRVJUWSk7
CisJCQlpbnQgcG9zID0gKChFeHRyYURpbWVuc2lvbikgbm9kZS5kaW1lbnNpb25zKCkuZ2V0KDAp
KS5nZXRTdGFydFBvc2l0aW9uKCk7CisJCQlyZXdyaXRlTm9kZUxpc3Qobm9kZSwgQXJyYXlUeXBl
LkRJTUVOU0lPTlNfUFJPUEVSVFksIHBvcywgVXRpbC5FTVBUWV9TVFJJTkcsIFV0aWwuRU1QVFlf
U1RSSU5HKTsKIAkJfQogCQlyZXR1cm4gZmFsc2U7CiAJfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9yZXdyaXRl
L0FTVFJld3JpdGVGbGF0dGVuZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9BU1RSZXdyaXRlRmxhdHRlbmVy
LmphdmEKaW5kZXggMjBmNjZlMy4uNTJhY2YzNCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9yZXdyaXRlL0FTVFJl
d3JpdGVGbGF0dGVuZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL3Jld3JpdGUvQVNUUmV3cml0ZUZsYXR0ZW5lci5q
YXZhCkBAIC0yMzYsMjIgKzIzNiwzMCBAQAogCQlBcnJheVR5cGUgYXJyYXlUeXBlPSAoQXJyYXlU
eXBlKSBnZXRDaGlsZE5vZGUobm9kZSwgQXJyYXlDcmVhdGlvbi5UWVBFX1BST1BFUlRZKTsKIAog
CQkvLyBnZXQgdGhlIGVsZW1lbnQgdHlwZSBhbmQgY291bnQgZGltZW5zaW9ucwotCQlUeXBlIGVs
ZW1lbnRUeXBlPSAoVHlwZSkgZ2V0Q2hpbGROb2RlKGFycmF5VHlwZSwgQXJyYXlUeXBlLkNPTVBP
TkVOVF9UWVBFX1BST1BFUlRZKTsKLQkJaW50IGRpbWVuc2lvbnM9IDE7IC8vIGFsd2F5cyBpbmNs
dWRlIHRoaXMgYXJyYXkgdHlwZQotCQl3aGlsZSAoZWxlbWVudFR5cGUuaXNBcnJheVR5cGUoKSkg
ewotCQkJZGltZW5zaW9ucysrOwotCQkJZWxlbWVudFR5cGUgPSAoVHlwZSkgZ2V0Q2hpbGROb2Rl
KGVsZW1lbnRUeXBlLCBBcnJheVR5cGUuQ09NUE9ORU5UX1RZUEVfUFJPUEVSVFkpOworCQlUeXBl
IGVsZW1lbnRUeXBlOworCQlpbnQgZGltZW5zaW9uczsKKwkJaWYgKG5vZGUuZ2V0QVNUKCkuYXBp
TGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQllbGVtZW50VHlwZSA9IChUeXBlKSBnZXRDaGlsZE5v
ZGUoYXJyYXlUeXBlLCBBcnJheVR5cGUuQ09NUE9ORU5UX1RZUEVfUFJPUEVSVFkpOworCQkJZGlt
ZW5zaW9ucyA9IDE7IC8vIGFsd2F5cyBpbmNsdWRlIHRoaXMgYXJyYXkgdHlwZQorCQkJd2hpbGUg
KGVsZW1lbnRUeXBlLmlzQXJyYXlUeXBlKCkpIHsKKwkJCQlkaW1lbnNpb25zKys7CisJCQkJZWxl
bWVudFR5cGUgPSAoVHlwZSkgZ2V0Q2hpbGROb2RlKGVsZW1lbnRUeXBlLCBBcnJheVR5cGUuQ09N
UE9ORU5UX1RZUEVfUFJPUEVSVFkpOworCQkJfQorCQl9IGVsc2UgeworCQkJZWxlbWVudFR5cGUg
PSAoVHlwZSkgZ2V0Q2hpbGROb2RlKGFycmF5VHlwZSwgQXJyYXlUeXBlLkVMRU1FTlRfVFlQRV9Q
Uk9QRVJUWSk7CisJCQlkaW1lbnNpb25zID0gYXJyYXlUeXBlLmdldERpbWVuc2lvbnMoKTsKIAkJ
fQogCiAJCWVsZW1lbnRUeXBlLmFjY2VwdCh0aGlzKTsKIAogCQkvLyBhZGQgIjxhbm5vdGF0aW9u
cz4gWyA8ZGltZW5zaW9uPiBdIiBmb3IgZWFjaCBkaW1lbnNpb24gZXhwcmVzc2lvbgotCQlUeXBl
IHR5cGU9IGFycmF5VHlwZTsKIAkJTGlzdCBsaXN0PSBnZXRDaGlsZExpc3Qobm9kZSwgQXJyYXlD
cmVhdGlvbi5ESU1FTlNJT05TX1BST1BFUlRZKTsKLQkJZm9yIChpbnQgaT0gMDsgaSA8IGxpc3Qu
c2l6ZSgpOyBpKyspIHsKLQkJCWlmIChub2RlLmdldEFTVCgpLmFwaUxldmVsKCkgPj0gQVNULkpM
UzggJiYgdHlwZSBpbnN0YW5jZW9mIEFycmF5VHlwZSkgewotCQkJCXZpc2l0TGlzdCh0eXBlLCBB
cnJheVR5cGUuQU5OT1RBVElPTlNfUFJPUEVSVFksIFN0cmluZy52YWx1ZU9mKCcgJyksIFV0aWwu
RU1QVFlfU1RSSU5HLCBTdHJpbmcudmFsdWVPZignICcpKTsKLQkJCQl0eXBlID0gKFR5cGUpIGdl
dENoaWxkTm9kZSh0eXBlLCBBcnJheVR5cGUuQ09NUE9ORU5UX1RZUEVfUFJPUEVSVFkpOworCQkt
LWRpbWVuc2lvbnM7CisJCWludCBpOworCQlmb3IgKGk9IDA7IGkgPCBsaXN0LnNpemUoKTsgaSsr
KSB7CisJCQlpZiAobm9kZS5nZXRBU1QoKS5hcGlMZXZlbCgpID49IEFTVC5KTFM4KSB7CisJCQkJ
RXh0cmFEaW1lbnNpb24gZXh0cmFEaW1lbnNpb24gPSAoRXh0cmFEaW1lbnNpb24pIGFycmF5VHlw
ZS5kaW1lbnNpb25zKCkuZ2V0KGkpOworCQkJCXZpc2l0TGlzdChleHRyYURpbWVuc2lvbiwgRXh0
cmFEaW1lbnNpb24uQU5OT1RBVElPTlNfUFJPUEVSVFksIFN0cmluZy52YWx1ZU9mKCcgJyksIFN0
cmluZy52YWx1ZU9mKCcgJyksIFV0aWwuRU1QVFlfU1RSSU5HKTsKIAkJCX0KIAkJCXRoaXMucmVz
dWx0LmFwcGVuZCgnWycpOwogCQkJKChBU1ROb2RlKSBsaXN0LmdldChpKSkuYWNjZXB0KHRoaXMp
OwpAQCAtMjYwLDEyICsyNjgsMTMgQEAKIAkJfQogCiAJCS8vIGFkZCAiPGFubm90YXRpb25zPiBb
XSIgZm9yIGVhY2ggZXh0cmEgYXJyYXkgZGltZW5zaW9uCi0JCWZvciAoaW50IGk9IDA7IGkgPCBk
aW1lbnNpb25zOyBpKyspIHsKLQkJCWlmIChub2RlLmdldEFTVCgpLmFwaUxldmVsKCkgPj0gQVNU
LkpMUzggJiYgdHlwZSBpbnN0YW5jZW9mIEFycmF5VHlwZSkgewotCQkJCXZpc2l0TGlzdCh0eXBl
LCBBcnJheVR5cGUuQU5OT1RBVElPTlNfUFJPUEVSVFksIFN0cmluZy52YWx1ZU9mKCcgJyksIFV0
aWwuRU1QVFlfU1RSSU5HLCBTdHJpbmcudmFsdWVPZignICcpKTsKLQkJCQl0eXBlID0gKFR5cGUp
IGdldENoaWxkTm9kZSh0eXBlLCBBcnJheVR5cGUuQ09NUE9ORU5UX1RZUEVfUFJPUEVSVFkpOwor
CQl3aGlsZSAoZGltZW5zaW9ucyA+PSAwKSB7CisJCQlpZiAobm9kZS5nZXRBU1QoKS5hcGlMZXZl
bCgpID49IEFTVC5KTFM4KSB7CisJCQkJRXh0cmFEaW1lbnNpb24gZXh0cmFEaW1lbnNpb24gPSAo
RXh0cmFEaW1lbnNpb24pIGFycmF5VHlwZS5kaW1lbnNpb25zKCkuZ2V0KGkpOworCQkJCXZpc2l0
TGlzdChleHRyYURpbWVuc2lvbiwgRXh0cmFEaW1lbnNpb24uQU5OT1RBVElPTlNfUFJPUEVSVFks
IFN0cmluZy52YWx1ZU9mKCcgJyksIFV0aWwuRU1QVFlfU1RSSU5HLCBTdHJpbmcudmFsdWVPZign
ICcpKTsKIAkJCX0KIAkJCXRoaXMucmVzdWx0LmFwcGVuZCgiW10iKTsgLy8kTk9OLU5MUy0xJAor
CQkJLS1kaW1lbnNpb25zOwogCQl9CiAKIAkJQVNUTm9kZSBpbml0aWFsaXplcj0gZ2V0Q2hpbGRO
b2RlKG5vZGUsIEFycmF5Q3JlYXRpb24uSU5JVElBTElaRVJfUFJPUEVSVFkpOwpAQCAtMjg5LDEx
ICsyOTgsMTMgQEAKIAkgKiBAc2VlIEFTVFZpc2l0b3IjdmlzaXQoQXJyYXlUeXBlKQogCSAqLwog
CXB1YmxpYyBib29sZWFuIHZpc2l0KEFycmF5VHlwZSBub2RlKSB7Ci0JCWdldENoaWxkTm9kZShu
b2RlLCBBcnJheVR5cGUuQ09NUE9ORU5UX1RZUEVfUFJPUEVSVFkpLmFjY2VwdCh0aGlzKTsKLQkJ
aWYgKG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA+PSBBU1QuSkxTOCkgewotCQkJdmlzaXRMaXN0
KG5vZGUsIEFycmF5VHlwZS5BTk5PVEFUSU9OU19QUk9QRVJUWSwgU3RyaW5nLnZhbHVlT2YoJyAn
KSwgVXRpbC5FTVBUWV9TVFJJTkcsIFN0cmluZy52YWx1ZU9mKCcgJykpOworCQlpZiAobm9kZS5n
ZXRBU1QoKS5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsKKwkJCWdldENoaWxkTm9kZShub2RlLCBB
cnJheVR5cGUuQ09NUE9ORU5UX1RZUEVfUFJPUEVSVFkpLmFjY2VwdCh0aGlzKTsKKwkJCXRoaXMu
cmVzdWx0LmFwcGVuZCgiW10iKTsgLy8kTk9OLU5MUy0xJAorCQl9IGVsc2UgeworCQkJZ2V0Q2hp
bGROb2RlKG5vZGUsIEFycmF5VHlwZS5FTEVNRU5UX1RZUEVfUFJPUEVSVFkpLmFjY2VwdCh0aGlz
KTsKKwkJCXZpc2l0TGlzdChub2RlLCBBcnJheVR5cGUuRElNRU5TSU9OU19QUk9QRVJUWSwgU3Ry
aW5nLnZhbHVlT2YoJyAnKSwgVXRpbC5FTVBUWV9TVFJJTkcsIFN0cmluZy52YWx1ZU9mKCcgJykp
OwogCQl9Ci0JCXRoaXMucmVzdWx0LmFwcGVuZCgiW10iKTsgLy8kTk9OLU5MUy0xJAogCQlyZXR1
cm4gZmFsc2U7CiAJfQog
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>235670</attachid>
            <date>2013-09-20 12:37:00 -0400</date>
            <delta_ts>2013-09-23 02:49:35 -0400</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>41356920Sep2200.patch</filename>
            <type>text/plain</type>
            <size>151931</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMTVKTFM0VGVzdC5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2RvbS9BU1RDb252ZXJ0ZXIxNUpMUzRUZXN0LmphdmEKaW5kZXggZjAxNjExOS4uZGJjNmQz
ZSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxNUpMUzRUZXN0LmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxNUpMUzRUZXN0LmphdmEKQEAgLTEsMTAgKzEsMTQg
QEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMTEsIDIwMTIg
SUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMTEsIDIwMTMg
SUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlz
IHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFp
bGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAK
ICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxl
IGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAogICoKKyAq
IFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlv
biBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFu
ZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3Nlcwor
ICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlv
biBvZiB0aGUgSkNQLgorICogCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0
aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCiAgKiAgICAgU3RlcGhhbiBIZXJy
bWFubiAtIENvbnRyaWJ1dGlvbiBmb3IgYnVnIDE4NjM0MiAtIFtjb21waWxlcl1bbnVsbF0gVXNp
bmcgYW5ub3RhdGlvbnMgZm9yIG51bGwgY2hlY2tpbmcKQEAgLTYyLDYgKzY2LDEzIEBACiAJCQl0
aGlzLndvcmtpbmdDb3B5LmRpc2NhcmRXb3JraW5nQ29weSgpOwogCQkJdGhpcy53b3JraW5nQ29w
eSA9IG51bGw7CiAJCX0KKwl9CisKKwkvKioKKwkgKiBAZGVwcmVjYXRlZAorCSAqLworCXByaXZh
dGUgVHlwZSBjb21wb25lbnRUeXBlKEFycmF5VHlwZSBhcnJheSkgeworCQlyZXR1cm4gYXJyYXku
Z2V0Q29tcG9uZW50VHlwZSgpOwogCX0KIAogCS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD0yMzQ2MDkgQmluZGluZ0tleSN0b1NpZ25hdHVyZSgpIGZhaWxz
IHdpdGgga2V5IGZyb20gY3JlYXRlV2lsY2FyZFR5cGVCaW5kaW5nS2V5KC4uKQpAQCAtMTcwNCw3
ICsxNzE1LDcgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiU3RyaW5nW10iLCBzb3VyY2Up
OwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNBcnJheVR5cGUoKSk7
CiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQljaGVja1NvdXJj
ZVJhbmdlKGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCksICJTdHJpbmciLCBzb3VyY2UpOwor
CQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKSwgIlN0cmluZyIsIHNv
dXJjZSk7CiAJCWFzc2VydEVxdWFscygiV3JvbmcgZXh0cmEgZGltZW5zaW9ucyIsIDEsIHNpbmds
ZVZhcmlhYmxlRGVjbGFyYXRpb24uZ2V0RXh0cmFEaW1lbnNpb25zKCkpOwogCX0KIApAQCAtMTcz
Miw3ICsxNzQzLDcgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiU3RyaW5nW10iLCBzb3Vy
Y2UpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNBcnJheVR5cGUo
KSk7CiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQljaGVja1Nv
dXJjZVJhbmdlKGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCksICJTdHJpbmciLCBzb3VyY2Up
OworCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKSwgIlN0cmluZyIs
IHNvdXJjZSk7CiAJCWFzc2VydEVxdWFscygiV3JvbmcgZXh0cmEgZGltZW5zaW9ucyIsIDAsIHNp
bmdsZVZhcmlhYmxlRGVjbGFyYXRpb24uZ2V0RXh0cmFEaW1lbnNpb25zKCkpOwogCX0KIAkvKioK
QEAgLTI0MjMsMTEgKzI0MzQsMTEgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiTWFwPFN0
cmluZywgRG91YmxlPltdW10iLCBzb3VyY2UpOwogCQlhc3NlcnRFcXVhbHMoIndyb25nIHR5cGUi
LCBBU1ROb2RlLkFSUkFZX1RZUEUsIHR5cGUuZ2V0Tm9kZVR5cGUoKSk7CiAJCUFycmF5VHlwZSBh
cnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQl0eXBlID0gYXJyYXlUeXBlLmdldENvbXBv
bmVudFR5cGUoKTsKKwkJdHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJY2hlY2tT
b3VyY2VSYW5nZSh0eXBlLCAiTWFwPFN0cmluZywgRG91YmxlPltdIiwgc291cmNlKTsKIAkJYXNz
ZXJ0RXF1YWxzKCJ3cm9uZyB0eXBlIiwgQVNUTm9kZS5BUlJBWV9UWVBFLCB0eXBlLmdldE5vZGVU
eXBlKCkpOwogCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQl0eXBlID0gYXJyYXlU
eXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJdHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBl
KTsKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiTWFwPFN0cmluZywgRG91YmxlPiIsIHNvdXJj
ZSk7CiAJfQogCkBAIC0yNDUwLDExICsyNDYxLDExIEBACiAJCWNoZWNrU291cmNlUmFuZ2UodHlw
ZSwgImphdmEudXRpbC5NYXA8U3RyaW5nLCBEb3VibGU+W11bXSIsIHNvdXJjZSk7CiAJCWFzc2Vy
dEVxdWFscygid3JvbmcgdHlwZSIsIEFTVE5vZGUuQVJSQVlfVFlQRSwgdHlwZS5nZXROb2RlVHlw
ZSgpKTsKIAkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7Ci0JCXR5cGUg
PSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQl0eXBlID0gY29tcG9uZW50VHlwZShh
cnJheVR5cGUpOwogCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJqYXZhLnV0aWwuTWFwPFN0cmlu
ZywgRG91YmxlPltdIiwgc291cmNlKTsKIAkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBlIiwgQVNU
Tm9kZS5BUlJBWV9UWVBFLCB0eXBlLmdldE5vZGVUeXBlKCkpOwogCQlhcnJheVR5cGUgPSAoQXJy
YXlUeXBlKSB0eXBlOwotCQl0eXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJ
dHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBl
LCAiamF2YS51dGlsLk1hcDxTdHJpbmcsIERvdWJsZT4iLCBzb3VyY2UpOwogCX0KIApAQCAtNDEx
NCw3ICs0MTI1LDcgQEAKICAgICAJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBkaW1lbnNpb25zIiwgMSwg
dHlwZUJpbmRpbmcuZ2V0RGltZW5zaW9ucygpKTsKICAgICAJQXJyYXlUeXBlIGFycmF5VHlwZSA9
IChBcnJheVR5cGUpIHR5cGU7CiAgICAgCWFzc2VydEVxdWFscygiV3JvbmcgZGltZW5zaW9uIiwg
MSwgYXJyYXlUeXBlLmdldERpbWVuc2lvbnMoKSk7Ci0gICAgCXR5cGUgPSBhcnJheVR5cGUuZ2V0
Q29tcG9uZW50VHlwZSgpOworICAgIAl0eXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwog
ICAgIAlhc3NlcnRUcnVlKCJOb3QgYSBzaW1wbGUgdHlwZSIsIHR5cGUuaXNTaW1wbGVUeXBlKCkp
OwogICAgIAljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJTdHJpbmciLCBjb250ZW50cyk7CiAgICAg
CWFzc2VydEVxdWFscygiV3JvbmcgZXh0cmEgZGltZW5zaW9uIiwgMSwgc2luZ2xlVmFyaWFibGVE
ZWNsYXJhdGlvbi5nZXRFeHRyYURpbWVuc2lvbnMoKSk7CkBAIC00NDk4LDcgKzQ1MDksNyBAQAog
ICAgIAlhc3NlcnRFcXVhbHMoIndyb25nIGRpbWVuc2lvbnMiLCAxLCB0eXBlQmluZGluZy5nZXRE
aW1lbnNpb25zKCkpOwogICAgIAlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlw
ZTsKICAgICAJYXNzZXJ0RXF1YWxzKCJXcm9uZyBkaW1lbnNpb24iLCAxLCBhcnJheVR5cGUuZ2V0
RGltZW5zaW9ucygpKTsKLSAgICAJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7
CisgICAgCXR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7CiAgICAgCWFzc2VydFRydWUo
Ik5vdCBhIHNpbXBsZSB0eXBlIiwgdHlwZS5pc1NpbXBsZVR5cGUoKSk7CiAgICAgCWNoZWNrU291
cmNlUmFuZ2UodHlwZSwgIlN0cmluZyIsIGNvbnRlbnRzKTsKICAgICAJYXNzZXJ0RXF1YWxzKCJX
cm9uZyBleHRyYSBkaW1lbnNpb24iLCAwLCBzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLmdldEV4
dHJhRGltZW5zaW9ucygpKTsKQEAgLTExMTgyLDcgKzExMTkzLDcgQEAKIAkJSVR5cGVCaW5kaW5n
IGJpbmRpbmcgPSB0eXBlLnJlc29sdmVCaW5kaW5nKCk7CiAJCWFzc2VydE5vdE51bGwoIk5vIGJp
bmRpbmciLCBiaW5kaW5nKTsKIAkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBxdWFsaWZpZWQgbmFtZSIs
ICJ0ZXN0MDM0Ny5PdXRlcjxqYXZhLmxhbmcuSW50ZWdlcj4uSW5uZXI8amF2YS5sYW5nLkRvdWJs
ZT5bXSIsIGJpbmRpbmcuZ2V0UXVhbGlmaWVkTmFtZSgpKTsKLQkJVHlwZSBjb21wb25lbnRUeXBl
ID0gdHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCVR5cGUgY29tcG9uZW50VHlwZSA9IGNvbXBv
bmVudFR5cGUodHlwZSk7CiAJCWJpbmRpbmcgPSBjb21wb25lbnRUeXBlLnJlc29sdmVCaW5kaW5n
KCk7CiAJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsKIAkJYXNzZXJ0RXF1
YWxzKCJXcm9uZyBxdWFsaWZpZWQgbmFtZSIsICJ0ZXN0MDM0Ny5PdXRlcjxqYXZhLmxhbmcuSW50
ZWdlcj4uSW5uZXI8amF2YS5sYW5nLkRvdWJsZT4iLCBiaW5kaW5nLmdldFF1YWxpZmllZE5hbWUo
KSk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlcjE1SkxTOFRlc3QuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMTVKTFM4VGVzdC5qYXZhCmluZGV4IGY0YjE1MjguLmUy
YzQ0MDQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMTVKTFM4VGVzdC5qYXZh
CisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMTVKTFM4VGVzdC5qYXZhCkBAIC0xLDUgKzEs
NSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAxMSwgMjAx
MiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAxMSwgMjAx
MyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRo
aXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2
YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEu
MAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFi
bGUgYXQKQEAgLTE3MDgsNyArMTcwOCw3IEBACiAJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIlN0
cmluZ1tdIiwgc291cmNlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCB0eXBl
LmlzQXJyYXlUeXBlKCkpOwogCQlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlw
ZTsKLQkJY2hlY2tTb3VyY2VSYW5nZShhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpLCAiU3Ry
aW5nIiwgc291cmNlKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShhcnJheVR5cGUuZ2V0RWxlbWVudFR5
cGUoKSwgIlN0cmluZyIsIHNvdXJjZSk7CiAJCWFzc2VydEVxdWFscygiV3JvbmcgZXh0cmEgZGlt
ZW5zaW9ucyIsIDEsIHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24uZ2V0RXh0cmFEaW1lbnNpb25z
KCkpOwogCX0KIApAQCAtMTczNiw3ICsxNzM2LDcgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBl
LCAiU3RyaW5nW10iLCBzb3VyY2UpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIs
IHR5cGUuaXNBcnJheVR5cGUoKSk7CiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBl
KSB0eXBlOwotCQljaGVja1NvdXJjZVJhbmdlKGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCks
ICJTdHJpbmciLCBzb3VyY2UpOworCQljaGVja1NvdXJjZVJhbmdlKGFycmF5VHlwZS5nZXRFbGVt
ZW50VHlwZSgpLCAiU3RyaW5nIiwgc291cmNlKTsKIAkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBleHRy
YSBkaW1lbnNpb25zIiwgMCwgc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbi5nZXRFeHRyYURpbWVu
c2lvbnMoKSk7CiAJfQogCS8qKgpAQCAtMjQyNywxMiArMjQyNyw5IEBACiAJCWNoZWNrU291cmNl
UmFuZ2UodHlwZSwgIk1hcDxTdHJpbmcsIERvdWJsZT5bXVtdIiwgc291cmNlKTsKIAkJYXNzZXJ0
RXF1YWxzKCJ3cm9uZyB0eXBlIiwgQVNUTm9kZS5BUlJBWV9UWVBFLCB0eXBlLmdldE5vZGVUeXBl
KCkpOwogCQlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJdHlwZSA9
IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWNoZWNrU291cmNlUmFuZ2UodHlwZSwg
Ik1hcDxTdHJpbmcsIERvdWJsZT5bXSIsIHNvdXJjZSk7Ci0JCWFzc2VydEVxdWFscygid3Jvbmcg
dHlwZSIsIEFTVE5vZGUuQVJSQVlfVFlQRSwgdHlwZS5nZXROb2RlVHlwZSgpKTsKLQkJYXJyYXlU
eXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRU
eXBlKCk7CisJCXR5cGUgPSBhcnJheVR5cGUuZ2V0RWxlbWVudFR5cGUoKTsKIAkJY2hlY2tTb3Vy
Y2VSYW5nZSh0eXBlLCAiTWFwPFN0cmluZywgRG91YmxlPiIsIHNvdXJjZSk7CisJCWFzc2VydEVx
dWFscygid3JvbmcgdHlwZSIsIEFTVE5vZGUuUEFSQU1FVEVSSVpFRF9UWVBFLCB0eXBlLmdldE5v
ZGVUeXBlKCkpOwogCX0KIAogCS8qCkBAIC0yNDU0LDEyICsyNDUxLDkgQEAKIAkJY2hlY2tTb3Vy
Y2VSYW5nZSh0eXBlLCAiamF2YS51dGlsLk1hcDxTdHJpbmcsIERvdWJsZT5bXVtdIiwgc291cmNl
KTsKIAkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBlIiwgQVNUTm9kZS5BUlJBWV9UWVBFLCB0eXBl
LmdldE5vZGVUeXBlKCkpOwogCQlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlw
ZTsKLQkJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWNoZWNrU291cmNl
UmFuZ2UodHlwZSwgImphdmEudXRpbC5NYXA8U3RyaW5nLCBEb3VibGU+W10iLCBzb3VyY2UpOwot
CQlhc3NlcnRFcXVhbHMoIndyb25nIHR5cGUiLCBBU1ROb2RlLkFSUkFZX1RZUEUsIHR5cGUuZ2V0
Tm9kZVR5cGUoKSk7Ci0JCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7Ci0JCXR5cGUgPSBh
cnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQl0eXBlID0gYXJyYXlUeXBlLmdldEVsZW1l
bnRUeXBlKCk7CiAJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgImphdmEudXRpbC5NYXA8U3RyaW5n
LCBEb3VibGU+Iiwgc291cmNlKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBlIiwgQVNUTm9k
ZS5QQVJBTUVURVJJWkVEX1RZUEUsIHR5cGUuZ2V0Tm9kZVR5cGUoKSk7CiAJfQogCiAJLyoKQEAg
LTQxMTgsNyArNDExMiw3IEBACiAgICAgCWFzc2VydEVxdWFscygid3JvbmcgZGltZW5zaW9ucyIs
IDEsIHR5cGVCaW5kaW5nLmdldERpbWVuc2lvbnMoKSk7CiAgICAgCUFycmF5VHlwZSBhcnJheVR5
cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwogICAgIAlhc3NlcnRFcXVhbHMoIldyb25nIGRpbWVuc2lv
biIsIDEsIGFycmF5VHlwZS5nZXREaW1lbnNpb25zKCkpOwotICAgIAl0eXBlID0gYXJyYXlUeXBl
LmdldENvbXBvbmVudFR5cGUoKTsKKyAgICAJdHlwZSA9IGFycmF5VHlwZS5nZXRFbGVtZW50VHlw
ZSgpOwogICAgIAlhc3NlcnRUcnVlKCJOb3QgYSBzaW1wbGUgdHlwZSIsIHR5cGUuaXNTaW1wbGVU
eXBlKCkpOwogICAgIAljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJTdHJpbmciLCBjb250ZW50cyk7
CiAgICAgCWFzc2VydEVxdWFscygiV3JvbmcgZXh0cmEgZGltZW5zaW9uIiwgMSwgc2luZ2xlVmFy
aWFibGVEZWNsYXJhdGlvbi5nZXRFeHRyYURpbWVuc2lvbnMoKSk7CkBAIC00NTAyLDcgKzQ0OTYs
NyBAQAogICAgIAlhc3NlcnRFcXVhbHMoIndyb25nIGRpbWVuc2lvbnMiLCAxLCB0eXBlQmluZGlu
Zy5nZXREaW1lbnNpb25zKCkpOwogICAgIAlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlw
ZSkgdHlwZTsKICAgICAJYXNzZXJ0RXF1YWxzKCJXcm9uZyBkaW1lbnNpb24iLCAxLCBhcnJheVR5
cGUuZ2V0RGltZW5zaW9ucygpKTsKLSAgICAJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRU
eXBlKCk7CisgICAgCXR5cGUgPSBhcnJheVR5cGUuZ2V0RWxlbWVudFR5cGUoKTsKICAgICAJYXNz
ZXJ0VHJ1ZSgiTm90IGEgc2ltcGxlIHR5cGUiLCB0eXBlLmlzU2ltcGxlVHlwZSgpKTsKICAgICAJ
Y2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiU3RyaW5nIiwgY29udGVudHMpOwogICAgIAlhc3NlcnRF
cXVhbHMoIldyb25nIGV4dHJhIGRpbWVuc2lvbiIsIDAsIHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRp
b24uZ2V0RXh0cmFEaW1lbnNpb25zKCkpOwpAQCAtMTExODYsNyArMTExODAsNyBAQAogCQlJVHlw
ZUJpbmRpbmcgYmluZGluZyA9IHR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKIAkJYXNzZXJ0Tm90TnVs
bCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOwogCQlhc3NlcnRFcXVhbHMoIldyb25nIHF1YWxpZmll
ZCBuYW1lIiwgInRlc3QwMzQ3Lk91dGVyPGphdmEubGFuZy5JbnRlZ2VyPi5Jbm5lcjxqYXZhLmxh
bmcuRG91YmxlPltdIiwgYmluZGluZy5nZXRRdWFsaWZpZWROYW1lKCkpOwotCQlUeXBlIGNvbXBv
bmVudFR5cGUgPSB0eXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJVHlwZSBjb21wb25lbnRUeXBl
ID0gdHlwZS5nZXRFbGVtZW50VHlwZSgpOwogCQliaW5kaW5nID0gY29tcG9uZW50VHlwZS5yZXNv
bHZlQmluZGluZygpOwogCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7CiAJ
CWFzc2VydEVxdWFscygiV3JvbmcgcXVhbGlmaWVkIG5hbWUiLCAidGVzdDAzNDcuT3V0ZXI8amF2
YS5sYW5nLkludGVnZXI+LklubmVyPGphdmEubGFuZy5Eb3VibGU+IiwgYmluZGluZy5nZXRRdWFs
aWZpZWROYW1lKCkpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9k
ZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxNVRlc3Qu
amF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMTVUZXN0LmphdmEKaW5kZXggYWVjMWEzYy4u
MDk0ZDgxMyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxNVRlc3QuamF2YQor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlcjE1VGVzdC5qYXZhCkBAIC03OCw2ICs3OCwxMyBA
QAogCQl9CiAJfQogCisJLyoqCisJICogQGRlcHJlY2F0ZWQKKwkgKi8KKwlwcml2YXRlIFR5cGUg
Y29tcG9uZW50VHlwZShBcnJheVR5cGUgYXJyYXkpIHsKKwkJcmV0dXJuIGFycmF5LmdldENvbXBv
bmVudFR5cGUoKTsKKwl9CisKIAkvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93
X2J1Zy5jZ2k/aWQ9MjM0NjA5IEJpbmRpbmdLZXkjdG9TaWduYXR1cmUoKSBmYWlscyB3aXRoIGtl
eSBmcm9tIGNyZWF0ZVdpbGNhcmRUeXBlQmluZGluZ0tleSguLikKIAlwdWJsaWMgdm9pZCB0ZXN0
MjM0NjA5KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CiAKQEAgLTE3MTgsNyArMTcyNSw3
IEBACiAJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIlN0cmluZ1tdIiwgc291cmNlKTsKIAkJYXNz
ZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlzQXJyYXlUeXBlKCkpOwogCQlBcnJh
eVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJY2hlY2tTb3VyY2VSYW5nZShh
cnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpLCAiU3RyaW5nIiwgc291cmNlKTsKKwkJY2hlY2tT
b3VyY2VSYW5nZShjb21wb25lbnRUeXBlKGFycmF5VHlwZSksICJTdHJpbmciLCBzb3VyY2UpOwog
CQlhc3NlcnRFcXVhbHMoIldyb25nIGV4dHJhIGRpbWVuc2lvbnMiLCAxLCBzaW5nbGVWYXJpYWJs
ZURlY2xhcmF0aW9uLmdldEV4dHJhRGltZW5zaW9ucygpKTsKIAl9CiAKQEAgLTE3NDYsNyArMTc1
Myw3IEBACiAJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIlN0cmluZ1tdIiwgc291cmNlKTsKIAkJ
YXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlzQXJyYXlUeXBlKCkpOwogCQlB
cnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJY2hlY2tTb3VyY2VSYW5n
ZShhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpLCAiU3RyaW5nIiwgc291cmNlKTsKKwkJY2hl
Y2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlKGFycmF5VHlwZSksICJTdHJpbmciLCBzb3VyY2Up
OwogCQlhc3NlcnRFcXVhbHMoIldyb25nIGV4dHJhIGRpbWVuc2lvbnMiLCAwLCBzaW5nbGVWYXJp
YWJsZURlY2xhcmF0aW9uLmdldEV4dHJhRGltZW5zaW9ucygpKTsKIAl9CiAJLyoqCkBAIC0yNDM3
LDExICsyNDQ0LDExIEBACiAJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIk1hcDxTdHJpbmcsIERv
dWJsZT5bXVtdIiwgc291cmNlKTsKIAkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBlIiwgQVNUTm9k
ZS5BUlJBWV9UWVBFLCB0eXBlLmdldE5vZGVUeXBlKCkpOwogCQlBcnJheVR5cGUgYXJyYXlUeXBl
ID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBl
KCk7CisJCXR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7CiAJCWNoZWNrU291cmNlUmFu
Z2UodHlwZSwgIk1hcDxTdHJpbmcsIERvdWJsZT5bXSIsIHNvdXJjZSk7CiAJCWFzc2VydEVxdWFs
cygid3JvbmcgdHlwZSIsIEFTVE5vZGUuQVJSQVlfVFlQRSwgdHlwZS5nZXROb2RlVHlwZSgpKTsK
IAkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJdHlwZSA9IGFycmF5VHlwZS5nZXRD
b21wb25lbnRUeXBlKCk7CisJCXR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7CiAJCWNo
ZWNrU291cmNlUmFuZ2UodHlwZSwgIk1hcDxTdHJpbmcsIERvdWJsZT4iLCBzb3VyY2UpOwogCX0K
IApAQCAtMjQ2NCwxMSArMjQ3MSwxMSBAQAogCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJqYXZh
LnV0aWwuTWFwPFN0cmluZywgRG91YmxlPltdW10iLCBzb3VyY2UpOwogCQlhc3NlcnRFcXVhbHMo
Indyb25nIHR5cGUiLCBBU1ROb2RlLkFSUkFZX1RZUEUsIHR5cGUuZ2V0Tm9kZVR5cGUoKSk7CiAJ
CUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQl0eXBlID0gYXJyYXlU
eXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJdHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBl
KTsKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiamF2YS51dGlsLk1hcDxTdHJpbmcsIERvdWJs
ZT5bXSIsIHNvdXJjZSk7CiAJCWFzc2VydEVxdWFscygid3JvbmcgdHlwZSIsIEFTVE5vZGUuQVJS
QVlfVFlQRSwgdHlwZS5nZXROb2RlVHlwZSgpKTsKIAkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkg
dHlwZTsKLQkJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCXR5cGUgPSBj
b21wb25lbnRUeXBlKGFycmF5VHlwZSk7CiAJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgImphdmEu
dXRpbC5NYXA8U3RyaW5nLCBEb3VibGU+Iiwgc291cmNlKTsKIAl9CiAKQEAgLTQxMjgsNyArNDEz
NSw3IEBACiAgICAgCWFzc2VydEVxdWFscygid3JvbmcgZGltZW5zaW9ucyIsIDEsIHR5cGVCaW5k
aW5nLmdldERpbWVuc2lvbnMoKSk7CiAgICAgCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlU
eXBlKSB0eXBlOwogICAgIAlhc3NlcnRFcXVhbHMoIldyb25nIGRpbWVuc2lvbiIsIDEsIGFycmF5
VHlwZS5nZXREaW1lbnNpb25zKCkpOwotICAgIAl0eXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVu
dFR5cGUoKTsKKyAgICAJdHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKICAgICAJYXNz
ZXJ0VHJ1ZSgiTm90IGEgc2ltcGxlIHR5cGUiLCB0eXBlLmlzU2ltcGxlVHlwZSgpKTsKICAgICAJ
Y2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiU3RyaW5nIiwgY29udGVudHMpOwogICAgIAlhc3NlcnRF
cXVhbHMoIldyb25nIGV4dHJhIGRpbWVuc2lvbiIsIDEsIHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRp
b24uZ2V0RXh0cmFEaW1lbnNpb25zKCkpOwpAQCAtNDUxMiw3ICs0NTE5LDcgQEAKICAgICAJYXNz
ZXJ0RXF1YWxzKCJ3cm9uZyBkaW1lbnNpb25zIiwgMSwgdHlwZUJpbmRpbmcuZ2V0RGltZW5zaW9u
cygpKTsKICAgICAJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7CiAgICAg
CWFzc2VydEVxdWFscygiV3JvbmcgZGltZW5zaW9uIiwgMSwgYXJyYXlUeXBlLmdldERpbWVuc2lv
bnMoKSk7Ci0gICAgCXR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworICAgIAl0
eXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogICAgIAlhc3NlcnRUcnVlKCJOb3QgYSBz
aW1wbGUgdHlwZSIsIHR5cGUuaXNTaW1wbGVUeXBlKCkpOwogICAgIAljaGVja1NvdXJjZVJhbmdl
KHR5cGUsICJTdHJpbmciLCBjb250ZW50cyk7CiAgICAgCWFzc2VydEVxdWFscygiV3JvbmcgZXh0
cmEgZGltZW5zaW9uIiwgMCwgc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbi5nZXRFeHRyYURpbWVu
c2lvbnMoKSk7CkBAIC0xMTE5Nyw3ICsxMTIwNCw3IEBACiAJCUlUeXBlQmluZGluZyBiaW5kaW5n
ID0gdHlwZS5yZXNvbHZlQmluZGluZygpOwogCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwg
YmluZGluZyk7CiAJCWFzc2VydEVxdWFscygiV3JvbmcgcXVhbGlmaWVkIG5hbWUiLCAidGVzdDAz
NDcuT3V0ZXI8amF2YS5sYW5nLkludGVnZXI+LklubmVyPGphdmEubGFuZy5Eb3VibGU+W10iLCBi
aW5kaW5nLmdldFF1YWxpZmllZE5hbWUoKSk7Ci0JCVR5cGUgY29tcG9uZW50VHlwZSA9IHR5cGUu
Z2V0Q29tcG9uZW50VHlwZSgpOworCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRUeXBl
KHR5cGUpOwogCQliaW5kaW5nID0gY29tcG9uZW50VHlwZS5yZXNvbHZlQmluZGluZygpOwogCQlh
c3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7CiAJCWFzc2VydEVxdWFscygiV3Jv
bmcgcXVhbGlmaWVkIG5hbWUiLCAidGVzdDAzNDcuT3V0ZXI8amF2YS5sYW5nLkludGVnZXI+Lklu
bmVyPGphdmEubGFuZy5Eb3VibGU+IiwgYmluZGluZy5nZXRRdWFsaWZpZWROYW1lKCkpOwpAQCAt
MTEzMjMsNyArMTEzMzAsNyBAQAogCQlhc3NlcnRUcnVlKCJOb3QgYSBjb21waWxhdGlvbiB1bml0
IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsKIAkJ
Q29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CiAJCU1ldGhv
ZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBnZXRB
U1ROb2RlKHVuaXQsIDAsIDApOwotCQlUeXBlIGNvbXBvbmVudFR5cGUgPSAoKEFycmF5VHlwZSlt
ZXRob2REZWNsYXJhdGlvbi5nZXRSZXR1cm5UeXBlMigpKS5nZXRDb21wb25lbnRUeXBlKCk7CisJ
CVR5cGUgY29tcG9uZW50VHlwZSA9IGNvbXBvbmVudFR5cGUoKChBcnJheVR5cGUpbWV0aG9kRGVj
bGFyYXRpb24uZ2V0UmV0dXJuVHlwZTIoKSkpOwogCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcg
PSBjb21wb25lbnRUeXBlLnJlc29sdmVCaW5kaW5nKCk7CiAJCWFzc2VydEVxdWFscygiV3Jvbmcg
ZnVsbHkgcXVhbGlmaWVkIG5hbWUiLCAidGVzdDAzNTEuSTEiLCB0eXBlQmluZGluZy5nZXRRdWFs
aWZpZWROYW1lKCkpOwogCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3Rz
Lm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThU
ZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZhCmluZGV4IGE1Yzk0
NzAuLjBlMzE4NjggMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVs
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0Lmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YQpAQCAtMjczLDEzICsy
NzMsMTMgQEAKIAkJSVR5cGVCaW5kaW5nIGJpbmRpbmcgPSB0eXBlLnJlc29sdmVCaW5kaW5nKCk7
CiAJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsKIAkJYXNzZXJ0RXF1YWxz
KCJXcm9uZyBxdWFsaWZpZWQgbmFtZSIsICJ0ZXN0MDAwNC5PdXRlcjxqYXZhLmxhbmcuSW50ZWdl
cj4uSW5uZXI8amF2YS5sYW5nLkRvdWJsZT5bXSIsIGJpbmRpbmcuZ2V0UXVhbGlmaWVkTmFtZSgp
KTsKLQkJVHlwZSBjb21wb25lbnRUeXBlID0gdHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWJp
bmRpbmcgPSBjb21wb25lbnRUeXBlLnJlc29sdmVCaW5kaW5nKCk7CisJCVR5cGUgZWxlbWVudFR5
cGUgPSB0eXBlLmdldEVsZW1lbnRUeXBlKCk7CisJCWJpbmRpbmcgPSBlbGVtZW50VHlwZS5yZXNv
bHZlQmluZGluZygpOwogCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7CiAJ
CWFzc2VydEVxdWFscygiV3JvbmcgcXVhbGlmaWVkIG5hbWUiLAogCQkJCSJ0ZXN0MDAwNC5PdXRl
cjxqYXZhLmxhbmcuSW50ZWdlcj4uSW5uZXI8amF2YS5sYW5nLkRvdWJsZT4iLCBiaW5kaW5nLmdl
dFF1YWxpZmllZE5hbWUoKSk7Ci0JCWFzc2VydFRydWUoIk5vdCBwYXJhbWV0ZXJpemVkIiwgY29t
cG9uZW50VHlwZS5pc1BhcmFtZXRlcml6ZWRUeXBlKCkpOwotCQlQYXJhbWV0ZXJpemVkVHlwZSBw
YXJhbWV0ZXJpemVkVHlwZSA9IChQYXJhbWV0ZXJpemVkVHlwZSkgY29tcG9uZW50VHlwZTsKKwkJ
YXNzZXJ0VHJ1ZSgiTm90IHBhcmFtZXRlcml6ZWQiLCBlbGVtZW50VHlwZS5pc1BhcmFtZXRlcml6
ZWRUeXBlKCkpOworCQlQYXJhbWV0ZXJpemVkVHlwZSBwYXJhbWV0ZXJpemVkVHlwZSA9IChQYXJh
bWV0ZXJpemVkVHlwZSkgZWxlbWVudFR5cGU7CiAJCVR5cGUgdHlwZTIgPSBwYXJhbWV0ZXJpemVk
VHlwZS5nZXRUeXBlKCk7CiAJCWFzc2VydFRydWUoIk5vdCBxdWFsaWZpZWQiLCB0eXBlMi5pc1F1
YWxpZmllZFR5cGUoKSk7CiAJCVF1YWxpZmllZFR5cGUgcXVhbGlmaWVkVHlwZSA9IChRdWFsaWZp
ZWRUeXBlKSB0eXBlMjsKQEAgLTExMzksMTMgKzExMzksMTIgQEAKIAkJVHlwZSB0eXBlID0gY3Jl
YXRpb24uZ2V0VHlwZSgpOwogCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCB0eXBlIiwgdHJ1ZSwg
dHlwZS5pc0FycmF5VHlwZSgpKTsKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiQE1hcmtlcjIg
aW50IEBNYXJrZXIgQE1hcmtlcjIgWzJdIEBNYXJrZXIyIEBNYXJrZXIzIFtiYXIoKV0gQE1hcmtl
cjMgQE1hcmtlciBbXSIsIGNvbnRlbnRzLnRvQ2hhckFycmF5KCkpOwotCQlhc3NlcnRFcXVhbHMo
IkluY29ycmVjdCBhbm5vdGF0aW9ucyIsICJATWFya2VyMyBATWFya2VyICIsIGNvbnZlcnRBbm5v
dGF0aW9uc0xpc3QoKChBcnJheVR5cGUpIHR5cGUpLmFubm90YXRpb25zKCkpKTsKLQkJdHlwZSA9
ICgoQXJyYXlUeXBlKSB0eXBlKS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWFzc2VydEVxdWFscygi
SW5jb3JyZWN0IHR5cGUiLCB0cnVlLCB0eXBlLmlzQXJyYXlUeXBlKCkpOwotCQlhc3NlcnRFcXVh
bHMoIkluY29ycmVjdCBhbm5vdGF0aW9ucyIsICJATWFya2VyMiBATWFya2VyMyAiLCBjb252ZXJ0
QW5ub3RhdGlvbnNMaXN0KCgoQXJyYXlUeXBlKSB0eXBlKS5hbm5vdGF0aW9ucygpKSk7Ci0JCXR5
cGUgPSAoKEFycmF5VHlwZSkgdHlwZSkuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlhc3NlcnRFcXVh
bHMoIkluY29ycmVjdCB0eXBlIiwgdHJ1ZSwgdHlwZS5pc0FycmF5VHlwZSgpKTsKLQkJYXNzZXJ0
RXF1YWxzKCJJbmNvcnJlY3QgYW5ub3RhdGlvbnMiLCAiQE1hcmtlciBATWFya2VyMiAiLCBjb252
ZXJ0QW5ub3RhdGlvbnNMaXN0KCgoQXJyYXlUeXBlKSB0eXBlKS5hbm5vdGF0aW9ucygpKSk7CisJ
CUV4dHJhRGltZW5zaW9uIGV4dHJhRGltZW5zaW9uID0gKChBcnJheVR5cGUpIHR5cGUpLmdldERp
bWVuc2lvbk5vKDApOworCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCBhbm5vdGF0aW9ucyIsICJA
TWFya2VyMyBATWFya2VyICIsIGNvbnZlcnRBbm5vdGF0aW9uc0xpc3QoZXh0cmFEaW1lbnNpb24u
YW5ub3RhdGlvbnMoKSkpOworCQlleHRyYURpbWVuc2lvbiA9ICgoQXJyYXlUeXBlKSB0eXBlKS5n
ZXREaW1lbnNpb25ObygxKTsKKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgYW5ub3RhdGlvbnMi
LCAiQE1hcmtlcjIgQE1hcmtlcjMgIiwgY29udmVydEFubm90YXRpb25zTGlzdChleHRyYURpbWVu
c2lvbi5hbm5vdGF0aW9ucygpKSk7CisJCWV4dHJhRGltZW5zaW9uID0gKChBcnJheVR5cGUpIHR5
cGUpLmdldERpbWVuc2lvbk5vKDIpOworCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCBhbm5vdGF0
aW9ucyIsICJATWFya2VyIEBNYXJrZXIyICIsIGNvbnZlcnRBbm5vdGF0aW9uc0xpc3QoZXh0cmFE
aW1lbnNpb24uYW5ub3RhdGlvbnMoKSkpOwogCQlMaXN0IGRpbWVuc2lvbnMgPSBjcmVhdGlvbi5k
aW1lbnNpb25zKCk7CiAJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IGV4cHJlc3Npb25zIiwgMiwg
ZGltZW5zaW9ucy5zaXplKCkpOwogCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCBleHByZXNzaW9u
cyIsICIyIiwgZGltZW5zaW9ucy5nZXQoMCkudG9TdHJpbmcoKSk7CkBAIC0xMTU5LDEzICsxMTU4
LDEyIEBACiAJCQogCQl0eXBlID0gY3JlYXRpb24uZ2V0VHlwZSgpOwogCQlhc3NlcnRFcXVhbHMo
IkluY29ycmVjdCB0eXBlIiwgdHJ1ZSwgdHlwZS5pc0FycmF5VHlwZSgpKTsKLQkJYXNzZXJ0RXF1
YWxzKCJJbmNvcnJlY3QgYW5ub3RhdGlvbnMiLCAiQE1hcmtlcjIgQE1hcmtlcjMgIiwgY29udmVy
dEFubm90YXRpb25zTGlzdCgoKEFycmF5VHlwZSkgdHlwZSkuYW5ub3RhdGlvbnMoKSkpOwotCQl0
eXBlID0gKChBcnJheVR5cGUpIHR5cGUpLmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNzZXJ0RXF1
YWxzKCJJbmNvcnJlY3QgdHlwZSIsIHRydWUsIHR5cGUuaXNBcnJheVR5cGUoKSk7Ci0JCWFzc2Vy
dEVxdWFscygiSW5jb3JyZWN0IGFubm90YXRpb25zIiwgIkBNYXJrZXIgQE1hcmtlcjIgIiwgY29u
dmVydEFubm90YXRpb25zTGlzdCgoKEFycmF5VHlwZSkgdHlwZSkuYW5ub3RhdGlvbnMoKSkpOwot
CQl0eXBlID0gKChBcnJheVR5cGUpIHR5cGUpLmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNzZXJ0
RXF1YWxzKCJJbmNvcnJlY3QgdHlwZSIsIHRydWUsIHR5cGUuaXNBcnJheVR5cGUoKSk7Ci0JCWFz
c2VydEVxdWFscygiSW5jb3JyZWN0IGFubm90YXRpb25zIiwgIkBNYXJrZXIzIEBNYXJrZXIgIiwg
Y29udmVydEFubm90YXRpb25zTGlzdCgoKEFycmF5VHlwZSkgdHlwZSkuYW5ub3RhdGlvbnMoKSkp
OworCQlleHRyYURpbWVuc2lvbiA9ICgoQXJyYXlUeXBlKSB0eXBlKS5nZXREaW1lbnNpb25Obygw
KTsKKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgYW5ub3RhdGlvbnMiLCAiQE1hcmtlcjIgQE1h
cmtlcjMgIiwgY29udmVydEFubm90YXRpb25zTGlzdChleHRyYURpbWVuc2lvbi5hbm5vdGF0aW9u
cygpKSk7CisJCWV4dHJhRGltZW5zaW9uID0gKChBcnJheVR5cGUpIHR5cGUpLmdldERpbWVuc2lv
bk5vKDEpOworCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCBhbm5vdGF0aW9ucyIsICJATWFya2Vy
IEBNYXJrZXIyICIsIGNvbnZlcnRBbm5vdGF0aW9uc0xpc3QoZXh0cmFEaW1lbnNpb24uYW5ub3Rh
dGlvbnMoKSkpOworCQlleHRyYURpbWVuc2lvbiA9ICgoQXJyYXlUeXBlKSB0eXBlKS5nZXREaW1l
bnNpb25ObygyKTsKKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgYW5ub3RhdGlvbnMiLCAiQE1h
cmtlcjMgQE1hcmtlciAiLCBjb252ZXJ0QW5ub3RhdGlvbnNMaXN0KGV4dHJhRGltZW5zaW9uLmFu
bm90YXRpb25zKCkpKTsKIAkJZGltZW5zaW9ucyA9IGNyZWF0aW9uLmRpbWVuc2lvbnMoKTsKIAkJ
YXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgZXhwcmVzc2lvbnMiLCAyLCBkaW1lbnNpb25zLnNpemUo
KSk7CiAJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IGV4cHJlc3Npb25zIiwgIjIiLCBkaW1lbnNp
b25zLmdldCgwKS50b1N0cmluZygpKTsKQEAgLTEyMzYsMTIgKzEyMzQsNiBAQAogCQlWYXJpYWJs
ZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdt
ZW50KSBsaXN0LmdldCgwKTsKIAkJQXJyYXlDcmVhdGlvbiBjcmVhdGlvbiA9IChBcnJheUNyZWF0
aW9uKSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOwogCQlUeXBlIHR5cGUgPSBjcmVhdGlvbi5n
ZXRUeXBlKCk7Ci0JCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IHR5cGUiLCB0cnVlLCB0eXBlLmlz
QXJyYXlUeXBlKCkpOwotCQlhc3NlcnRFcXVhbHMoIlR5cGUgc2hvdWxkIGJlIG1hbGZvcm1lZCIs
IEFTVE5vZGUuTUFMRk9STUVELCAodHlwZS5nZXRGbGFncygpICYgQVNUTm9kZS5NQUxGT1JNRUQp
KTsKLQkJdHlwZSA9ICgoQXJyYXlUeXBlKSB0eXBlKS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWFz
c2VydEVxdWFscygiSW5jb3JyZWN0IHR5cGUiLCB0cnVlLCB0eXBlLmlzQXJyYXlUeXBlKCkpOwot
CQlhc3NlcnRFcXVhbHMoIlR5cGUgc2hvdWxkIGJlIG1hbGZvcm1lZCIsIEFTVE5vZGUuTUFMRk9S
TUVELCAodHlwZS5nZXRGbGFncygpICYgQVNUTm9kZS5NQUxGT1JNRUQpKTsKLQkJdHlwZSA9ICgo
QXJyYXlUeXBlKSB0eXBlKS5nZXRDb21wb25lbnRUeXBlKCk7CiAJCWFzc2VydEVxdWFscygiSW5j
b3JyZWN0IHR5cGUiLCB0cnVlLCB0eXBlLmlzQXJyYXlUeXBlKCkpOwogCQlhc3NlcnRFcXVhbHMo
IlR5cGUgc2hvdWxkIGJlIG1hbGZvcm1lZCIsIEFTVE5vZGUuTUFMRk9STUVELCAodHlwZS5nZXRG
bGFncygpICYgQVNUTm9kZS5NQUxGT1JNRUQpKTsKIAl9CkBAIC0xNjE0LDE0ICsxNjA2LDE0IEBA
CiAJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CiAJ
CWFzc2VydFRydWUoZXhwcmVzc2lvbiBpbnN0YW5jZW9mIExhbWJkYUV4cHJlc3Npb24pOwogCQlM
YW1iZGFFeHByZXNzaW9uIGxhbWJkYUV4cHJlc3Npb24gPSAoTGFtYmRhRXhwcmVzc2lvbilleHBy
ZXNzaW9uOwotCQlhc3NlcnRFcXVhbHMoIihpbnRbXSBpYSkgLT4ge1xuICByZXR1cm4gaWEuY2xv
bmUoKTtcbn1cbiIsIGxhbWJkYUV4cHJlc3Npb24udG9TdHJpbmcoKSk7CisJCWFzc2VydEVxdWFs
cygiKGludCBbXSBpYSkgLT4ge1xuICByZXR1cm4gaWEuY2xvbmUoKTtcbn1cbiIsIGxhbWJkYUV4
cHJlc3Npb24udG9TdHJpbmcoKSk7CiAJCUlNZXRob2RCaW5kaW5nIGJpbmRpbmcgPSBsYW1iZGFF
eHByZXNzaW9uLnJlc29sdmVNZXRob2RCaW5kaW5nKCk7CiAJCWFzc2VydEVxdWFscygicHJpdmF0
ZSBzdGF0aWMgamF2YS5sYW5nLk9iamVjdCBsYW1iZGEkMChpbnRbXSkgIiwgYmluZGluZy50b1N0
cmluZygpKTsKIAkJYXNzZXJ0VHJ1ZShsYW1iZGFFeHByZXNzaW9uLnBhcmFtZXRlcnMoKS5zaXpl
KCkgPT0gMSk7CiAJCVZhcmlhYmxlRGVjbGFyYXRpb24gdmFyaWFibGVEZWNsYXJhdGlvbiA9IChW
YXJpYWJsZURlY2xhcmF0aW9uKSBsYW1iZGFFeHByZXNzaW9uLnBhcmFtZXRlcnMoKS5nZXQoMCk7
CiAJCWFzc2VydFRydWUodmFyaWFibGVEZWNsYXJhdGlvbiBpbnN0YW5jZW9mIFNpbmdsZVZhcmlh
YmxlRGVjbGFyYXRpb24pOwogCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIHNpbmdsZVZhcmlh
YmxlRGVjbGFyYXRpb24gPSAoU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbil2YXJpYWJsZURlY2xh
cmF0aW9uOwotCQlhc3NlcnRFcXVhbHMoImludFtdIGlhIiwgc2luZ2xlVmFyaWFibGVEZWNsYXJh
dGlvbi50b1N0cmluZygpKTsJCQorCQlhc3NlcnRFcXVhbHMoImludCBbXSBpYSIsIHNpbmdsZVZh
cmlhYmxlRGVjbGFyYXRpb24udG9TdHJpbmcoKSk7CQkKIAl9CiAKIAkvKioKQEAgLTI2NTMsNSAr
MjY0NSwyMzIgQEAKIAkJdHlwZUJpbmRpbmcgPSB0eXBlLnJlc29sdmVCaW5kaW5nKCk7CiAJCWFz
c2VydEZhbHNlKCJBIEZ1bmN0aW9uYWwgaW50ZXJmYWNlIiwgdHlwZUJpbmRpbmcuaXNGdW5jdGlv
bmFsSW50ZXJmYWNlKCkpOwogCX0KKwkvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9z
aG93X2J1Zy5jZ2k/aWQ9NDEzOTQyCisJLy8gYWxzbyByZWZlciBodHRwczovL2J1Z3MuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDEzNTY5CisJcHVibGljIHZvaWQgdGVzdEJ1ZzQx
Mzk0MigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlTdHJpbmcgY29udGVudHMgPQor
CQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBATm9uTnVsbChpbnRbXS5jbGFzcykgT2JqZWN0IHtc
biIgKworCQkiICAgIE9iamVjdCBmaWVsZCA9IG5ldyBBcnJheUxpc3Q8IEBOb25FbXB0eSgwKSBp
bnQgQE5vbk51bGwodmFsdWUxID0gMSkgW10gQE5vbkVtcHR5KDEpIFsgXT4oKSA7XG4iICsKKwkJ
IiAgICBAQW5ub3QgaW50IEBBbm5vdDEgW10gYTEgQEFubm90MiBAQW5ub3QzIEBOb25OdWxsICh2
YWx1ZSA9IGludFtdLmNsYXNzLCB2YWx1ZTEgPSAwKVsvKiBbXSAqLyBdIEBBbm5vdDMgQEFubm90
MiBbXSBAQW5ub3Q0IFtdO1xuIiArCisJCSIgICAgaW50W10geHh4W107XG4iICsKKwkJIiAgICBp
bnQgW11bXSBpaSA9IG5ldyBpbnRbMl1bM107IiArCisJCSIgICAgQXJyYXlMaXN0PGludFtdPiBb
XVtdIHl5eTsgLy8gc291cmNlIHJhbmdlcyBhbHJlYWR5IGJyb2tlbiBpbiBBU1QuSkxTNFxuIiAr
CisJCSIgICAgQXJyYXlMaXN0PGludFtdW10+IFtdW11bXVtdIHp6ejtcbiIgKworCQkiICAgIEFy
cmF5TGlzdDxGbG9hdD4gW11bXVtdIHp6ejI7XG4iICsKKwkJIiAgICBPYmplY3QgYSA9IG5ldyBB
cnJheUxpc3Q8IEBUYWtlVHlwZShpbnRbXVtdLmNsYXNzKSBpbnQgQFRha2VUeXBlKGZsb2F0LmNs
YXNzKSBbXSBAVGFrZVR5cGUoZG91YmxlLmNsYXNzKSBbXT4oKSA7XG4iICsKKwkJIiAgICBPYmpl
Y3QgYiA9IG5ldyBATm9uTnVsbCh2YWx1ZTEgPSBNYXRoLlBJKSBBcnJheUxpc3Q8ID4oKSA7IFxu
IiArCisJCSIgICAgT2JqZWN0IGMgPSBuZXcgQXJyYXlMaXN0PEBOb25OdWxsKHZhbHVlMT0gTWF0
aC5QSSApIE9iamVjdFtdPigpIDtcbiIgKworCQkiXG4iICsKKwkJIiAgICBpbnQgZm9vKEBUYWtl
VHlwZShpbnRbXS5jbGFzcylpbnQgaSApIEBUYWtlVHlwZShpbnRbXS5jbGFzcykgW10ge1xuIiAr
CisJCSIgICAgICAgIGludFtdIGFyciA9ICBuZXcgaW50WzJdO1xuIiArCisJCSIgICAgICAgIGZv
ciAoU3RyaW5nIHRhYiBAVGFrZVR5cGUoaW50W10uY2xhc3MpIFtdID0gbnVsbDs7ICsraSkgeyBi
cmVhazsgfVxuIiArCisJCSIgICAgICAgIGZvciAoQERlcHJlY2F0ZWQgU3RyaW5nIHRhYkBUYWtl
VHlwZShpbnRbXS5jbGFzcykgW11bXSAgPSBudWxsOzsgKytpKSB7fVxuIiArCisJCSIgICAgfVxu
IiArCisJCSIgICAgaW50IGJhcihpbnQgW10gLypAVGFrZVR5cGUoaW50W10uY2xhc3MpKi8gW10g
YSApIHtcbiIgKworCQkiICAgIAlyZXR1cm4gMDtcbiIgKworCQkiICAgIH1cbiIgKworCQkicHVi
bGljIGludCB2YXIxKGludCBAVGFrZVR5cGUoaW50W10uY2xhc3MpLi4uIGFyZ3MpIHsgcmV0dXJu
IDA7fVxuIiArCisJCSJwdWJsaWMgaW50IHZhcjIoaW50IEBBbm5vdCAuLi4gYXJncykgeyByZXR1
cm4gMDt9XG4iICsKKwkJIn1cbiIgKworCQkiXG4iICsKKwkJIkBUYXJnZXQoRWxlbWVudFR5cGUu
VFlQRV9VU0UpXG4iICsKKwkJIkBSZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LlJVTlRJTUUpXG4i
ICsKKwkJIkBEb2N1bWVudGVkXG4iICsKKwkJIkBpbnRlcmZhY2UgTm9uTnVsbCB7XG4iICsKKwkJ
IglDbGFzcyB2YWx1ZSgpIGRlZmF1bHQgaW50LmNsYXNzO1xuIiArCisJCSIJZG91YmxlIHZhbHVl
MSgpIGRlZmF1bHQgMDtcbiIgKworCQkifVxuIiArCisJCSJcbiIgKworCQkiQFRhcmdldChFbGVt
ZW50VHlwZS5UWVBFX1VTRSlcbiIgKworCQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3kuUlVO
VElNRSlcbiIgKworCQkiQERvY3VtZW50ZWRcbiIgKworCQkiQGludGVyZmFjZSBOb25FbXB0eSB7
XG4iICsKKwkJIglpbnQgdmFsdWUoKSBkZWZhdWx0IDA7XG4iICsKKwkJIn1cbiIgKworCQkiXG4i
ICsKKwkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJIkBSZXRlbnRpb24o
UmV0ZW50aW9uUG9saWN5LlJVTlRJTUUpXG4iICsKKwkJIkBEb2N1bWVudGVkXG4iICsKKwkJIkBp
bnRlcmZhY2UgVGFrZVR5cGUge1xuIiArCisJCSIJQ2xhc3MgdmFsdWUoKSBkZWZhdWx0IGludFtd
LmNsYXNzO1xuIiArCisJCSJ9XG4iICsKKwkJIlxuIiArCisJCSJAVGFyZ2V0KEVsZW1lbnRUeXBl
LlRZUEVfVVNFKVxuIiArCisJCSJAUmV0ZW50aW9uKFJldGVudGlvblBvbGljeS5SVU5USU1FKVxu
IiArCisJCSJARG9jdW1lbnRlZFxuIiArCisJCSJAaW50ZXJmYWNlIEFubm90IHt9XG4iICsKKwkJ
IlxuIiArCisJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCSJAUmV0ZW50
aW9uKFJldGVudGlvblBvbGljeS5SVU5USU1FKVxuIiArCisJCSJARG9jdW1lbnRlZFxuIiArCisJ
CSJAaW50ZXJmYWNlIEFubm90MSB7fVxuIiArCisJCSJcbiIgKworCQkiQFRhcmdldChFbGVtZW50
VHlwZS5UWVBFX1VTRSlcbiIgKworCQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3kuUlVOVElN
RSlcbiIgKworCQkiQERvY3VtZW50ZWRcbiIgKworCQkiQGludGVyZmFjZSBBbm5vdDIge31cbiIg
KworCQkiXG4iICsKKwkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJIkBS
ZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LlJVTlRJTUUpXG4iICsKKwkJIkBEb2N1bWVudGVkXG4i
ICsKKwkJIkBpbnRlcmZhY2UgQW5ub3QzIHt9XG4iICsKKwkJIlxuIiArCisJCSJAVGFyZ2V0KEVs
ZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCSJAUmV0ZW50aW9uKFJldGVudGlvblBvbGljeS5S
VU5USU1FKVxuIiArCisJCSJARG9jdW1lbnRlZFxuIiArCisJCSJAaW50ZXJmYWNlIEFubm90NCB7
fVxuIiArCisJCSJcbiI7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0Nv
bnZlcnRlcjE4L3NyYy9YLmphdmEiLCB0cnVlKTsKKwkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1Qo
Y29udGVudHMsIHRoaXMud29ya2luZ0NvcHksIGZhbHNlKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3Qg
YSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5v
ZGVUeXBlKCkpOworCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5v
ZGU7CisJCQorCQlUeXBlRGVjbGFyYXRpb24gdHlwZSA9ICAoVHlwZURlY2xhcmF0aW9uKSB1bml0
LnR5cGVzKCkuZ2V0KDApOworCQlTaW1wbGVUeXBlIHNpbXBsZVR5cGUgPSAgKFNpbXBsZVR5cGUp
IHR5cGUuZ2V0U3VwZXJjbGFzc1R5cGUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShzaW1wbGVUeXBl
LCAiQE5vbk51bGwoaW50W10uY2xhc3MpIE9iamVjdCIsIGNvbnRlbnRzKTsKKwkJU2luZ2xlTWVt
YmVyQW5ub3RhdGlvbiBzaW5nbGVNZW1iZXJBbm5vdGF0aW9uID0gKFNpbmdsZU1lbWJlckFubm90
YXRpb24pIHNpbXBsZVR5cGUuYW5ub3RhdGlvbnMoKS5nZXQoMCk7CisJCWNoZWNrU291cmNlUmFu
Z2Uoc2luZ2xlTWVtYmVyQW5ub3RhdGlvbiwgIkBOb25OdWxsKGludFtdLmNsYXNzKSIsIGNvbnRl
bnRzKTsKKwkJVHlwZUxpdGVyYWwgdHlwZUxpdGVyYWwgPSAoVHlwZUxpdGVyYWwpIHNpbmdsZU1l
bWJlckFubm90YXRpb24uZ2V0VmFsdWUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlTGl0ZXJh
bCwgImludFtdLmNsYXNzIiwgY29udGVudHMpOworCQlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFy
cmF5VHlwZSkgdHlwZUxpdGVyYWwuZ2V0VHlwZSgpOworCQljaGVja1NvdXJjZVJhbmdlKGFycmF5
VHlwZSwgImludFtdIiwgY29udGVudHMpOworCQkKKwkJaW50IGNvdW50ID0gMDsKKwkJRmllbGRE
ZWNsYXJhdGlvbiBmaWVsZCA9IChGaWVsZERlY2xhcmF0aW9uKSB0eXBlLmJvZHlEZWNsYXJhdGlv
bnMoKS5nZXQoY291bnQrKyk7CisJCWNoZWNrU291cmNlUmFuZ2UoZmllbGQsICJPYmplY3QgZmll
bGQgPSBuZXcgQXJyYXlMaXN0PCBATm9uRW1wdHkoMCkgaW50IEBOb25OdWxsKHZhbHVlMSA9IDEp
IFtdIEBOb25FbXB0eSgxKSBbIF0+KCkgOyIsIGNvbnRlbnRzKTsKKwkJVmFyaWFibGVEZWNsYXJh
dGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZmll
bGQuZnJhZ21lbnRzKCkuZ2V0KDApOworCQlDbGFzc0luc3RhbmNlQ3JlYXRpb24gaW5zdGFuY2Ug
PSAoQ2xhc3NJbnN0YW5jZUNyZWF0aW9uKSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlQ
YXJhbWV0ZXJpemVkVHlwZSBwYXJhbWV0ZXJpemVkVHlwZSA9IChQYXJhbWV0ZXJpemVkVHlwZSkg
aW5zdGFuY2UuZ2V0VHlwZSgpOworCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBwYXJhbWV0ZXJp
emVkVHlwZS50eXBlQXJndW1lbnRzKCkuZ2V0KDApOworCQljaGVja1NvdXJjZVJhbmdlKGFycmF5
VHlwZSwgIkBOb25FbXB0eSgwKSBpbnQgQE5vbk51bGwodmFsdWUxID0gMSkgW10gQE5vbkVtcHR5
KDEpIFsgXSIsIGNvbnRlbnRzKTsKKwkJUHJpbWl0aXZlVHlwZSBwcmltaXRpdmVUeXBlID0gKFBy
aW1pdGl2ZVR5cGUpIGFycmF5VHlwZS5nZXRFbGVtZW50VHlwZSgpOworCQljaGVja1NvdXJjZVJh
bmdlKHByaW1pdGl2ZVR5cGUsICJATm9uRW1wdHkoMCkgaW50IiwgY29udGVudHMpOworCQlFeHRy
YURpbWVuc2lvbiBleHRyYURpbWVuc2lvbiA9IGFycmF5VHlwZS5nZXREaW1lbnNpb25ObygxKTsK
KwkJY2hlY2tTb3VyY2VSYW5nZShleHRyYURpbWVuc2lvbiwgIkBOb25OdWxsKHZhbHVlMSA9IDEp
IFtdIiwgY29udGVudHMpOworCQlleHRyYURpbWVuc2lvbiA9IGFycmF5VHlwZS5nZXREaW1lbnNp
b25ObygwKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShleHRyYURpbWVuc2lvbiwgIkBOb25FbXB0eSgx
KSBbIF0iLCBjb250ZW50cyk7CisJCQorCQlmaWVsZCA9IChGaWVsZERlY2xhcmF0aW9uKSB0eXBl
LmJvZHlEZWNsYXJhdGlvbnMoKS5nZXQoY291bnQrKyk7CisJCWNoZWNrU291cmNlUmFuZ2UoZmll
bGQsICJAQW5ub3QgaW50IEBBbm5vdDEgW10gYTEgQEFubm90MiBAQW5ub3QzIEBOb25OdWxsICh2
YWx1ZSA9IGludFtdLmNsYXNzLCB2YWx1ZTEgPSAwKVsvKiBbXSAqLyBdIEBBbm5vdDMgQEFubm90
MiBbXSBAQW5ub3Q0IFtdOyIsIGNvbnRlbnRzKTsKKwkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkg
ZmllbGQuZ2V0VHlwZSgpOworCQljaGVja1NvdXJjZVJhbmdlKGFycmF5VHlwZSwgImludCBAQW5u
b3QxIFtdIiwgY29udGVudHMpOworCQlmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJh
Z21lbnQpIGZpZWxkLmZyYWdtZW50cygpLmdldCgwKTsKKwkJZXh0cmFEaW1lbnNpb24gPSAoRXh0
cmFEaW1lbnNpb24pIGZyYWdtZW50LmV4dHJhRGltZW5zaW9ucygpLmdldCgwKTsKKwkJY2hlY2tT
b3VyY2VSYW5nZShleHRyYURpbWVuc2lvbiwgIkBBbm5vdDIgQEFubm90MyBATm9uTnVsbCAodmFs
dWUgPSBpbnRbXS5jbGFzcywgdmFsdWUxID0gMClbLyogW10gKi8gXSIsIGNvbnRlbnRzKTsKKwkJ
ZXh0cmFEaW1lbnNpb24gPSAoRXh0cmFEaW1lbnNpb24pIGZyYWdtZW50LmV4dHJhRGltZW5zaW9u
cygpLmdldCgxKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShleHRyYURpbWVuc2lvbiwgIkBBbm5vdDMg
QEFubm90MiBbXSIsIGNvbnRlbnRzKTsKKwkJCisJCWZpZWxkID0gKEZpZWxkRGVjbGFyYXRpb24p
IHR5cGUuYm9keURlY2xhcmF0aW9ucygpLmdldChjb3VudCsrKTsKKwkJY2hlY2tTb3VyY2VSYW5n
ZShmaWVsZCwgImludFtdIHh4eFtdOyIsIGNvbnRlbnRzKTsKKwkJYXNzZXJ0VHJ1ZShmaWVsZC5n
ZXRUeXBlKCkuaXNBcnJheVR5cGUoKSk7CisJCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGZpZWxk
LmdldFR5cGUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShhcnJheVR5cGUsICJpbnRbXSIsIGNvbnRl
bnRzKTsKKwkJCisJCWZpZWxkID0gKEZpZWxkRGVjbGFyYXRpb24pIHR5cGUuYm9keURlY2xhcmF0
aW9ucygpLmdldChjb3VudCsrKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShmaWVsZCwgImludCBbXVtd
IGlpID0gbmV3IGludFsyXVszXTsiLCBjb250ZW50cyk7CisJCWFycmF5VHlwZSA9IChBcnJheVR5
cGUpIGZpZWxkLmdldFR5cGUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShhcnJheVR5cGUsICJpbnQg
W11bXSIsIGNvbnRlbnRzKTsKKwkJZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdt
ZW50KSBmaWVsZC5mcmFnbWVudHMoKS5nZXQoMCk7CisJCUFycmF5Q3JlYXRpb24gYXJyYXlDcmVh
dGlvbiA9IChBcnJheUNyZWF0aW9uKSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlhcnJh
eVR5cGUgPSBhcnJheUNyZWF0aW9uLmdldFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZShhcnJheVR5cGUu
Z2V0RWxlbWVudFR5cGUoKS5pc1ByaW1pdGl2ZVR5cGUoKSk7CisJCWFzc2VydFRydWUoYXJyYXlU
eXBlLmdldERpbWVuc2lvbnMoKSA9PSAyKTsKKwkJCisJCWZpZWxkID0gKEZpZWxkRGVjbGFyYXRp
b24pIHR5cGUuYm9keURlY2xhcmF0aW9ucygpLmdldChjb3VudCsrKTsKKwkJY2hlY2tTb3VyY2VS
YW5nZShmaWVsZCwgIkFycmF5TGlzdDxpbnRbXT4gW11bXSB5eXk7IiwgY29udGVudHMpOworCQlh
cnJheVR5cGUgPSAoQXJyYXlUeXBlKSBmaWVsZC5nZXRUeXBlKCk7CisJCWNoZWNrU291cmNlUmFu
Z2UoYXJyYXlUeXBlLCAiQXJyYXlMaXN0PGludFtdPiBbXVtdIiwgY29udGVudHMpOworCisJCWZp
ZWxkID0gKEZpZWxkRGVjbGFyYXRpb24pIHR5cGUuYm9keURlY2xhcmF0aW9ucygpLmdldChjb3Vu
dCsrKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShmaWVsZCwgIkFycmF5TGlzdDxpbnRbXVtdPiBbXVtd
W11bXSB6eno7IiwgY29udGVudHMpOworCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBmaWVsZC5n
ZXRUeXBlKCk7CisJCWFzc2VydFRydWUoYXJyYXlUeXBlLmdldEVsZW1lbnRUeXBlKCkuaXNQYXJh
bWV0ZXJpemVkVHlwZSgpKTsKKwkJYXNzZXJ0VHJ1ZShhcnJheVR5cGUuZ2V0RGltZW5zaW9ucygp
ID09IDQpOworCQkKKwkJZmllbGQgPSAoRmllbGREZWNsYXJhdGlvbikgdHlwZS5ib2R5RGVjbGFy
YXRpb25zKCkuZ2V0KGNvdW50KyspOworCQljaGVja1NvdXJjZVJhbmdlKGZpZWxkLCAiQXJyYXlM
aXN0PEZsb2F0PiBbXVtdW10genp6MjsiLCBjb250ZW50cyk7CisJCWFycmF5VHlwZSA9IChBcnJh
eVR5cGUpIGZpZWxkLmdldFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZShhcnJheVR5cGUuZ2V0RWxlbWVu
dFR5cGUoKS5pc1BhcmFtZXRlcml6ZWRUeXBlKCkpOworCQlhc3NlcnRUcnVlKGFycmF5VHlwZS5n
ZXREaW1lbnNpb25zKCkgPT0gMyk7CisJCQorCQlmaWVsZCA9IChGaWVsZERlY2xhcmF0aW9uKSB0
eXBlLmJvZHlEZWNsYXJhdGlvbnMoKS5nZXQoY291bnQrKyk7CisJCWNoZWNrU291cmNlUmFuZ2Uo
ZmllbGQsICJPYmplY3QgYSA9IG5ldyBBcnJheUxpc3Q8IEBUYWtlVHlwZShpbnRbXVtdLmNsYXNz
KSBpbnQgQFRha2VUeXBlKGZsb2F0LmNsYXNzKSBbXSBAVGFrZVR5cGUoZG91YmxlLmNsYXNzKSBb
XT4oKSA7IiwgY29udGVudHMpOworCQlmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJh
Z21lbnQpIGZpZWxkLmZyYWdtZW50cygpLmdldCgwKTsKKwkJQ2xhc3NJbnN0YW5jZUNyZWF0aW9u
IGNsYXNzSW5zdGFuY2VDcmVhdGlvbiA9IChDbGFzc0luc3RhbmNlQ3JlYXRpb24pIGZyYWdtZW50
LmdldEluaXRpYWxpemVyKCk7CisJCXBhcmFtZXRlcml6ZWRUeXBlID0gKFBhcmFtZXRlcml6ZWRU
eXBlKSBjbGFzc0luc3RhbmNlQ3JlYXRpb24uZ2V0VHlwZSgpOworCQlhcnJheVR5cGUgPSAoQXJy
YXlUeXBlKSBwYXJhbWV0ZXJpemVkVHlwZS50eXBlQXJndW1lbnRzKCkuZ2V0KDApOworCQljaGVj
a1NvdXJjZVJhbmdlKGFycmF5VHlwZSwgIkBUYWtlVHlwZShpbnRbXVtdLmNsYXNzKSBpbnQgQFRh
a2VUeXBlKGZsb2F0LmNsYXNzKSBbXSBAVGFrZVR5cGUoZG91YmxlLmNsYXNzKSBbXSIsIGNvbnRl
bnRzKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShhcnJheVR5cGUuZ2V0RWxlbWVudFR5cGUoKSwgIkBU
YWtlVHlwZShpbnRbXVtdLmNsYXNzKSBpbnQiLCBjb250ZW50cyk7CisJCWFzc2VydFRydWUoYXJy
YXlUeXBlLmdldEVsZW1lbnRUeXBlKCkuaXNQcmltaXRpdmVUeXBlKCkpOworCQlleHRyYURpbWVu
c2lvbiA9IGFycmF5VHlwZS5nZXREaW1lbnNpb25ObygxKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShl
eHRyYURpbWVuc2lvbiwgIkBUYWtlVHlwZShmbG9hdC5jbGFzcykgW10iLCBjb250ZW50cyk7CisJ
CWV4dHJhRGltZW5zaW9uID0gYXJyYXlUeXBlLmdldERpbWVuc2lvbk5vKDApOworCQlBbm5vdGF0
aW9uIGFubm90YXRpb24gPSAoQW5ub3RhdGlvbikgZXh0cmFEaW1lbnNpb24uYW5ub3RhdGlvbnMo
KS5nZXQoMCk7CisJCWFzc2VydFRydWUoYW5ub3RhdGlvbi5pc1NpbmdsZU1lbWJlckFubm90YXRp
b24oKSk7CisJCXNpbmdsZU1lbWJlckFubm90YXRpb24gPSAoU2luZ2xlTWVtYmVyQW5ub3RhdGlv
bikgYW5ub3RhdGlvbjsKKwkJdHlwZUxpdGVyYWwgPSAoVHlwZUxpdGVyYWwpIHNpbmdsZU1lbWJl
ckFubm90YXRpb24uZ2V0VmFsdWUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlTGl0ZXJhbCwg
ImRvdWJsZS5jbGFzcyIsIGNvbnRlbnRzKTsKKwkJCisJCWZpZWxkID0gKEZpZWxkRGVjbGFyYXRp
b24pIHR5cGUuYm9keURlY2xhcmF0aW9ucygpLmdldChjb3VudCsrKTsKKwkJY2hlY2tTb3VyY2VS
YW5nZShmaWVsZCwgIk9iamVjdCBiID0gbmV3IEBOb25OdWxsKHZhbHVlMSA9IE1hdGguUEkpIEFy
cmF5TGlzdDwgPigpIDsiLCBjb250ZW50cyk7CisJCWZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFy
YXRpb25GcmFnbWVudCkgZmllbGQuZnJhZ21lbnRzKCkuZ2V0KDApOworCQljbGFzc0luc3RhbmNl
Q3JlYXRpb24gPSAoQ2xhc3NJbnN0YW5jZUNyZWF0aW9uKSBmcmFnbWVudC5nZXRJbml0aWFsaXpl
cigpOworCQlwYXJhbWV0ZXJpemVkVHlwZSA9IChQYXJhbWV0ZXJpemVkVHlwZSkgY2xhc3NJbnN0
YW5jZUNyZWF0aW9uLmdldFR5cGUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShwYXJhbWV0ZXJpemVk
VHlwZS5nZXRUeXBlKCksICJATm9uTnVsbCh2YWx1ZTEgPSBNYXRoLlBJKSBBcnJheUxpc3QiLCBj
b250ZW50cyk7CisJCQorCQlmaWVsZCA9IChGaWVsZERlY2xhcmF0aW9uKSB0eXBlLmJvZHlEZWNs
YXJhdGlvbnMoKS5nZXQoY291bnQrKyk7CisJCWNoZWNrU291cmNlUmFuZ2UoZmllbGQsICJPYmpl
Y3QgYyA9IG5ldyBBcnJheUxpc3Q8QE5vbk51bGwodmFsdWUxPSBNYXRoLlBJICkgT2JqZWN0W10+
KCkgOyIsIGNvbnRlbnRzKTsKKwkJZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdt
ZW50KSBmaWVsZC5mcmFnbWVudHMoKS5nZXQoMCk7CisJCWNsYXNzSW5zdGFuY2VDcmVhdGlvbiA9
IChDbGFzc0luc3RhbmNlQ3JlYXRpb24pIGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CisJCXBh
cmFtZXRlcml6ZWRUeXBlID0gKFBhcmFtZXRlcml6ZWRUeXBlKSBjbGFzc0luc3RhbmNlQ3JlYXRp
b24uZ2V0VHlwZSgpOworCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBwYXJhbWV0ZXJpemVkVHlw
ZS50eXBlQXJndW1lbnRzKCkuZ2V0KDApOworCQlhc3NlcnRUcnVlKGFycmF5VHlwZS5nZXREaW1l
bnNpb25zKCkgPT0gMSk7CisJCQorCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2QgPSAoTWV0aG9k
RGVjbGFyYXRpb24pIHR5cGUuYm9keURlY2xhcmF0aW9ucygpLmdldChjb3VudCsrKTsKKwkJZXh0
cmFEaW1lbnNpb24gPSAoRXh0cmFEaW1lbnNpb24pIG1ldGhvZC5leHRyYURpbWVuc2lvbnMoKS5n
ZXQoMCk7CisJCWNoZWNrU291cmNlUmFuZ2UoZXh0cmFEaW1lbnNpb24sICJAVGFrZVR5cGUoaW50
W10uY2xhc3MpIFtdIiwgY29udGVudHMpOworCQlzaW5nbGVNZW1iZXJBbm5vdGF0aW9uID0gKFNp
bmdsZU1lbWJlckFubm90YXRpb24pIGV4dHJhRGltZW5zaW9uLmFubm90YXRpb25zKCkuZ2V0KDAp
OworCQl0eXBlTGl0ZXJhbCA9IChUeXBlTGl0ZXJhbCkgc2luZ2xlTWVtYmVyQW5ub3RhdGlvbi5n
ZXRWYWx1ZSgpOworCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlTGl0ZXJhbC5nZXRUeXBl
KCk7CisJCWFzc2VydFRydWUoYXJyYXlUeXBlLmdldEVsZW1lbnRUeXBlKCkuaXNQcmltaXRpdmVU
eXBlKCkpOworCQlhc3NlcnRUcnVlKGFycmF5VHlwZS5nZXREaW1lbnNpb25zKCkgPT0gMSk7CisJ
CVNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiA9IChT
aW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uKSBtZXRob2QucGFyYW1ldGVycygpLmdldCgwKTsKKwkJ
c2luZ2xlTWVtYmVyQW5ub3RhdGlvbiA9IChTaW5nbGVNZW1iZXJBbm5vdGF0aW9uKSBzaW5nbGVW
YXJpYWJsZURlY2xhcmF0aW9uLm1vZGlmaWVycygpLmdldCgwKTsKKwkJY2hlY2tTb3VyY2VSYW5n
ZShzaW5nbGVNZW1iZXJBbm5vdGF0aW9uLCAiQFRha2VUeXBlKGludFtdLmNsYXNzKSIsIGNvbnRl
bnRzKTsKKwkJdHlwZUxpdGVyYWwgPSAoVHlwZUxpdGVyYWwpIHNpbmdsZU1lbWJlckFubm90YXRp
b24uZ2V0VmFsdWUoKTsKKwkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZUxpdGVyYWwuZ2V0
VHlwZSgpOworCQlhc3NlcnRUcnVlKGFycmF5VHlwZS5nZXRFbGVtZW50VHlwZSgpLmlzUHJpbWl0
aXZlVHlwZSgpKTsKKwkJYXNzZXJ0VHJ1ZShhcnJheVR5cGUuZ2V0RGltZW5zaW9ucygpID09IDEp
OworCQlGb3JTdGF0ZW1lbnQgZm9yU3RhdGVtZW50ID0gKEZvclN0YXRlbWVudCkgbWV0aG9kLmdl
dEJvZHkoKS5zdGF0ZW1lbnRzKCkuZ2V0KDEpOworCQlWYXJpYWJsZURlY2xhcmF0aW9uRXhwcmVz
c2lvbiB2YXJpYWJsZURlY2xhcmF0aW9uRXhwcmVzc2lvbiA9IChWYXJpYWJsZURlY2xhcmF0aW9u
RXhwcmVzc2lvbikgZm9yU3RhdGVtZW50LmluaXRpYWxpemVycygpLmdldCgwKTsKKwkJZnJhZ21l
bnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSB2YXJpYWJsZURlY2xhcmF0aW9uRXhw
cmVzc2lvbi5mcmFnbWVudHMoKS5nZXQoMCk7CisJCWV4dHJhRGltZW5zaW9uID0gKEV4dHJhRGlt
ZW5zaW9uKSBmcmFnbWVudC5leHRyYURpbWVuc2lvbnMoKS5nZXQoMCk7CisJCWNoZWNrU291cmNl
UmFuZ2UoZXh0cmFEaW1lbnNpb24sICJAVGFrZVR5cGUoaW50W10uY2xhc3MpIFtdIiwgY29udGVu
dHMpOworCQlmb3JTdGF0ZW1lbnQgPSAoRm9yU3RhdGVtZW50KSBtZXRob2QuZ2V0Qm9keSgpLnN0
YXRlbWVudHMoKS5nZXQoMSk7CisJCXZhcmlhYmxlRGVjbGFyYXRpb25FeHByZXNzaW9uID0gKFZh
cmlhYmxlRGVjbGFyYXRpb25FeHByZXNzaW9uKSBmb3JTdGF0ZW1lbnQuaW5pdGlhbGl6ZXJzKCku
Z2V0KDApOworCQlmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIHZhcmlh
YmxlRGVjbGFyYXRpb25FeHByZXNzaW9uLmZyYWdtZW50cygpLmdldCgwKTsKKwkJZXh0cmFEaW1l
bnNpb24gPSAoRXh0cmFEaW1lbnNpb24pIGZyYWdtZW50LmV4dHJhRGltZW5zaW9ucygpLmdldCgw
KTsKKwkJY2hlY2tTb3VyY2VSYW5nZShleHRyYURpbWVuc2lvbiwgIkBUYWtlVHlwZShpbnRbXS5j
bGFzcykgW10iLCBjb250ZW50cyk7CisJCQorCQltZXRob2QgPSAoTWV0aG9kRGVjbGFyYXRpb24p
IHR5cGUuYm9keURlY2xhcmF0aW9ucygpLmdldChjb3VudCsrKTsKKwkJc2luZ2xlVmFyaWFibGVE
ZWNsYXJhdGlvbiA9IChTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uKSBtZXRob2QucGFyYW1ldGVy
cygpLmdldCgwKTsKKwkJLy8gdGVzdCBjYXNlIGFjdGl2ZSBvbmx5IGFmdGVyIGJ1ZyA0MTc2NjAg
aXMgZml4ZWQgKHVuY29tbWVudCkKKwkJY2hlY2tTb3VyY2VSYW5nZShzaW5nbGVWYXJpYWJsZURl
Y2xhcmF0aW9uLCAiaW50IFtdIC8qQFRha2VUeXBlKGludFtdLmNsYXNzKSovIFtdIGEiLCBjb250
ZW50cyk7CisJCQorCQltZXRob2QgPSAoTWV0aG9kRGVjbGFyYXRpb24pIHR5cGUuYm9keURlY2xh
cmF0aW9ucygpLmdldChjb3VudCsrKTsKKwkJc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiA9IChT
aW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uKSBtZXRob2QucGFyYW1ldGVycygpLmdldCgwKTsKKwkJ
Y2hlY2tTb3VyY2VSYW5nZShzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLCAiaW50IEBUYWtlVHlw
ZShpbnRbXS5jbGFzcykuLi4gYXJncyIsIGNvbnRlbnRzKTsKKwkJc2luZ2xlTWVtYmVyQW5ub3Rh
dGlvbiA9IChTaW5nbGVNZW1iZXJBbm5vdGF0aW9uKSBzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9u
LnZhcmFyZ3NBbm5vdGF0aW9ucygpLmdldCgwKTsKKwkJdHlwZUxpdGVyYWwgPSAoVHlwZUxpdGVy
YWwpIHNpbmdsZU1lbWJlckFubm90YXRpb24uZ2V0VmFsdWUoKTsKKwkJYXJyYXlUeXBlID0gKEFy
cmF5VHlwZSkgdHlwZUxpdGVyYWwuZ2V0VHlwZSgpOworCQlhc3NlcnRUcnVlKGFycmF5VHlwZS5n
ZXRFbGVtZW50VHlwZSgpLmlzUHJpbWl0aXZlVHlwZSgpKTsKKwkJYXNzZXJ0VHJ1ZShhcnJheVR5
cGUuZ2V0RGltZW5zaW9ucygpID09IDEpOworCQkKKwkJbWV0aG9kID0gKE1ldGhvZERlY2xhcmF0
aW9uKSB0eXBlLmJvZHlEZWNsYXJhdGlvbnMoKS5nZXQoY291bnQrKyk7CisJCXNpbmdsZVZhcmlh
YmxlRGVjbGFyYXRpb24gPSAoU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbikgbWV0aG9kLnBhcmFt
ZXRlcnMoKS5nZXQoMCk7CisJCWNoZWNrU291cmNlUmFuZ2Uoc2luZ2xlVmFyaWFibGVEZWNsYXJh
dGlvbiwgImludCBAQW5ub3QgLi4uIGFyZ3MiLCBjb250ZW50cyk7CisJCWFzc2VydFRydWUoc2lu
Z2xlVmFyaWFibGVEZWNsYXJhdGlvbi52YXJhcmdzQW5ub3RhdGlvbnMoKS5zaXplKCkgPT0gMSk7
CisKKwl9CiAKIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVs
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyQVNUM1Rlc3Qu
amF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyQVNUM1Rlc3QuamF2YQppbmRleCA5ZDc3Zjcy
Li5hNjJiYWZkIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlckFTVDNUZXN0Lmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXJBU1QzVGVzdC5qYXZhCkBAIC01OSw2ICs1
OSwxMyBAQAogCQlyZXR1cm4gbWV0aG9kRGVjbGFyYXRpb24udGhyb3duRXhjZXB0aW9ucygpOwog
CX0KIAorCS8qKgorCSAqIEBkZXByZWNhdGVkCisJICovCisJcHJpdmF0ZSBUeXBlIGNvbXBvbmVu
dFR5cGUoQXJyYXlUeXBlIGFycmF5KSB7CisJCXJldHVybiBhcnJheS5nZXRDb21wb25lbnRUeXBl
KCk7CisJfQorCiAJcHVibGljIHZvaWQgdGVzdDAwMDEoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0
aW9uIHsKIAkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0
KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDAwMSIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5M
Uy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAogCQljaGFyW10g
c291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOwpAQCAtNzY1OSwx
MyArNzY2NiwxMyBAQAogCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSBhcnJheVR5cGUucmVz
b2x2ZUJpbmRpbmcoKTsKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiamF2YS5sYW5nLk9iamVj
dFtdW10iLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCiAJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUg
YmluZGluZyIsIHR5cGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAotCQlUeXBlIGVsZW1lbnRUeXBl
ID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJVHlwZSBlbGVtZW50VHlwZSA9IGNv
bXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nMiA9IGVs
ZW1lbnRUeXBlLnJlc29sdmVCaW5kaW5nKCk7CiAJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUgYmlu
ZGluZzIiLCB0eXBlQmluZGluZzIpOyAvLyROT04tTkxTLTEkCiAJCWFzc2VydEVxdWFscygid3Jv
bmcgZGltZW5zaW9uIiwgMSwgdHlwZUJpbmRpbmcyLmdldERpbWVuc2lvbnMoKSk7IC8vJE5PTi1O
TFMtMSQKIAkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgIk9iamVjdFtdIiwgdHlwZUJpbmRp
bmcyLmdldE5hbWUoKSk7CQkgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCiAJCWFzc2VydFRy
dWUoIk5vdCBhbiBhcnJheSB0eXBlIiwgZWxlbWVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5P
Ti1OTFMtMSQKLQkJVHlwZSBlbGVtZW50VHlwZTIgPSAoKEFycmF5VHlwZSkgZWxlbWVudFR5cGUp
LmdldENvbXBvbmVudFR5cGUoKTsKKwkJVHlwZSBlbGVtZW50VHlwZTIgPSBjb21wb25lbnRUeXBl
KCgoQXJyYXlUeXBlKSBlbGVtZW50VHlwZSkpOwogCQlhc3NlcnRUcnVlKCJOb3QgYSBzaW1wbGUg
dHlwZSIsIGVsZW1lbnRUeXBlMi5pc1NpbXBsZVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJSVR5
cGVCaW5kaW5nIHR5cGVCaW5kaW5nMyA9IGVsZW1lbnRUeXBlMi5yZXNvbHZlQmluZGluZygpOwog
CQlhc3NlcnROb3ROdWxsKCJObyB0eXBlIGJpbmRpbmczIiwgdHlwZUJpbmRpbmczKTsgLy8kTk9O
LU5MUy0xJApAQCAtODAwNiw3ICs4MDEzLDcgQEAKIAkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5n
MyA9IHNpbXBsZVR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKIAkJYXNzZXJ0Tm90TnVsbCgibm8gdHlw
ZSBiaW5kaW5nMyIsIHR5cGVCaW5kaW5nMyk7IC8vJE5PTi1OTFMtMSQKIAkJYXNzZXJ0RXF1YWxz
KCJ3cm9uZyBuYW1lIiwgIk9iamVjdCIsIHR5cGVCaW5kaW5nMy5nZXROYW1lKCkpOyAvLyROT04t
TkxTLTEkIC8vJE5PTi1OTFMtMiQKLQkJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBl
KCk7CisJCXR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7CiAJCWFzc2VydFRydWUoIk5v
dCBhbiBhcnJheSB0eXBlIiwgdHlwZSBpbnN0YW5jZW9mIEFycmF5VHlwZSk7IC8vJE5PTi1OTFMt
MSQKIAkJQXJyYXlUeXBlIGFycmF5VHlwZTIgPSAoQXJyYXlUeXBlKSB0eXBlOwogCQlJVHlwZUJp
bmRpbmcgdHlwZUJpbmRpbmc0ID0gYXJyYXlUeXBlMi5yZXNvbHZlQmluZGluZygpOwpAQCAtODA0
OCwxNCArODA1NSwxNCBAQAogCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmczID0gc2ltcGxlVHlw
ZS5yZXNvbHZlQmluZGluZygpOwogCQlhc3NlcnROb3ROdWxsKCJubyB0eXBlIGJpbmRpbmczIiwg
dHlwZUJpbmRpbmczKTsgLy8kTk9OLU5MUy0xJAogCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUi
LCAiT2JqZWN0IiwgdHlwZUJpbmRpbmczLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9O
LU5MUy0yJAotCQl0eXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJdHlwZSA9
IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5
cGUiLCB0eXBlIGluc3RhbmNlb2YgQXJyYXlUeXBlKTsgLy8kTk9OLU5MUy0xJAogCQlBcnJheVR5
cGUgYXJyYXlUeXBlMiA9IChBcnJheVR5cGUpIHR5cGU7CiAJCWNoZWNrU291cmNlUmFuZ2UoYXJy
YXlUeXBlMiwgIk9iamVjdFsxMF1bXSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKIAkJSVR5cGVC
aW5kaW5nIHR5cGVCaW5kaW5nNCA9IGFycmF5VHlwZTIucmVzb2x2ZUJpbmRpbmcoKTsKIAkJYXNz
ZXJ0Tm90TnVsbCgibm8gdHlwZSBiaW5kaW5nNCIsIHR5cGVCaW5kaW5nNCk7IC8vJE5PTi1OTFMt
MSQKIAkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgIk9iamVjdFtdW10iLCB0eXBlQmluZGlu
ZzQuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCi0JCXR5cGUgPSBhcnJh
eVR5cGUyLmdldENvbXBvbmVudFR5cGUoKTsKKwkJdHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlU
eXBlMik7CiAJCWFzc2VydFRydWUoIk5vdCBhbiBhcnJheSB0eXBlIiwgdHlwZSBpbnN0YW5jZW9m
IEFycmF5VHlwZSk7IC8vJE5PTi1OTFMtMSQKIAkJQXJyYXlUeXBlIGFycmF5VHlwZTMgPSAoQXJy
YXlUeXBlKSB0eXBlOwogCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmc1ID0gYXJyYXlUeXBlMy5y
ZXNvbHZlQmluZGluZygpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
bW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXJBU1Q0
VGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXJBU1Q0VGVzdC5qYXZhCmluZGV4IDhm
NDEwMTIuLmM1OGEyMTggMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1v
ZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyQVNUNFRl
c3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlckFTVDRUZXN0LmphdmEKQEAgLTU5
LDYgKzU5LDEzIEBACiAJCXJldHVybiBtZXRob2REZWNsYXJhdGlvbi50aHJvd25FeGNlcHRpb25z
KCk7CiAJfQogCisJLyoqCisJICogQGRlcHJlY2F0ZWQKKwkgKi8KKwlwcml2YXRlIFR5cGUgY29t
cG9uZW50VHlwZShBcnJheVR5cGUgYXJyYXkpIHsKKwkJcmV0dXJuIGFycmF5LmdldENvbXBvbmVu
dFR5cGUoKTsKKwl9CisKIAlwdWJsaWMgdm9pZCB0ZXN0MDAwMSgpIHRocm93cyBKYXZhTW9kZWxF
eGNlcHRpb24gewogCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlv
blVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMDAxIiwgIlRlc3QuamF2YSIpOyAvLyRO
T04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCiAJCWNo
YXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CkBAIC03
NjU5LDEzICs3NjY2LDEzIEBACiAJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IGFycmF5VHlw
ZS5yZXNvbHZlQmluZGluZygpOwogCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJqYXZhLmxhbmcu
T2JqZWN0W11bXSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKIAkJYXNzZXJ0Tm90TnVsbCgiTm8g
dHlwZSBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOyAvLyROT04tTkxTLTEkCi0JCVR5cGUgZWxlbWVu
dFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlUeXBlIGVsZW1lbnRUeXBl
ID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcy
ID0gZWxlbWVudFR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKIAkJYXNzZXJ0Tm90TnVsbCgiTm8gdHlw
ZSBiaW5kaW5nMiIsIHR5cGVCaW5kaW5nMik7IC8vJE5PTi1OTFMtMSQKIAkJYXNzZXJ0RXF1YWxz
KCJ3cm9uZyBkaW1lbnNpb24iLCAxLCB0eXBlQmluZGluZzIuZ2V0RGltZW5zaW9ucygpKTsgLy8k
Tk9OLU5MUy0xJAogCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAiT2JqZWN0W10iLCB0eXBl
QmluZGluZzIuZ2V0TmFtZSgpKTsJCSAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKIAkJYXNz
ZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5cGUiLCBlbGVtZW50VHlwZS5pc0FycmF5VHlwZSgpKTsg
Ly8kTk9OLU5MUy0xJAotCQlUeXBlIGVsZW1lbnRUeXBlMiA9ICgoQXJyYXlUeXBlKSBlbGVtZW50
VHlwZSkuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlUeXBlIGVsZW1lbnRUeXBlMiA9IGNvbXBvbmVu
dFR5cGUoKChBcnJheVR5cGUpIGVsZW1lbnRUeXBlKSk7CiAJCWFzc2VydFRydWUoIk5vdCBhIHNp
bXBsZSB0eXBlIiwgZWxlbWVudFR5cGUyLmlzU2ltcGxlVHlwZSgpKTsgLy8kTk9OLU5MUy0xJAog
CQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmczID0gZWxlbWVudFR5cGUyLnJlc29sdmVCaW5kaW5n
KCk7CiAJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUgYmluZGluZzMiLCB0eXBlQmluZGluZzMpOyAv
LyROT04tTkxTLTEkCkBAIC04MDA2LDcgKzgwMTMsNyBAQAogCQlJVHlwZUJpbmRpbmcgdHlwZUJp
bmRpbmczID0gc2ltcGxlVHlwZS5yZXNvbHZlQmluZGluZygpOwogCQlhc3NlcnROb3ROdWxsKCJu
byB0eXBlIGJpbmRpbmczIiwgdHlwZUJpbmRpbmczKTsgLy8kTk9OLU5MUy0xJAogCQlhc3NlcnRF
cXVhbHMoIndyb25nIG5hbWUiLCAiT2JqZWN0IiwgdHlwZUJpbmRpbmczLmdldE5hbWUoKSk7IC8v
JE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAotCQl0eXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVu
dFR5cGUoKTsKKwkJdHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNzZXJ0VHJ1
ZSgiTm90IGFuIGFycmF5IHR5cGUiLCB0eXBlIGluc3RhbmNlb2YgQXJyYXlUeXBlKTsgLy8kTk9O
LU5MUy0xJAogCQlBcnJheVR5cGUgYXJyYXlUeXBlMiA9IChBcnJheVR5cGUpIHR5cGU7CiAJCUlU
eXBlQmluZGluZyB0eXBlQmluZGluZzQgPSBhcnJheVR5cGUyLnJlc29sdmVCaW5kaW5nKCk7CkBA
IC04MDQ4LDE0ICs4MDU1LDE0IEBACiAJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzMgPSBzaW1w
bGVUeXBlLnJlc29sdmVCaW5kaW5nKCk7CiAJCWFzc2VydE5vdE51bGwoIm5vIHR5cGUgYmluZGlu
ZzMiLCB0eXBlQmluZGluZzMpOyAvLyROT04tTkxTLTEkCiAJCWFzc2VydEVxdWFscygid3Jvbmcg
bmFtZSIsICJPYmplY3QiLCB0eXBlQmluZGluZzMuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAv
LyROT04tTkxTLTIkCi0JCXR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQl0
eXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJOb3QgYW4gYXJy
YXkgdHlwZSIsIHR5cGUgaW5zdGFuY2VvZiBBcnJheVR5cGUpOyAvLyROT04tTkxTLTEkCiAJCUFy
cmF5VHlwZSBhcnJheVR5cGUyID0gKEFycmF5VHlwZSkgdHlwZTsKIAkJY2hlY2tTb3VyY2VSYW5n
ZShhcnJheVR5cGUyLCAiT2JqZWN0WzEwXVtdIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAogCQlJ
VHlwZUJpbmRpbmcgdHlwZUJpbmRpbmc0ID0gYXJyYXlUeXBlMi5yZXNvbHZlQmluZGluZygpOwog
CQlhc3NlcnROb3ROdWxsKCJubyB0eXBlIGJpbmRpbmc0IiwgdHlwZUJpbmRpbmc0KTsgLy8kTk9O
LU5MUy0xJAogCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAiT2JqZWN0W11bXSIsIHR5cGVC
aW5kaW5nNC5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKLQkJdHlwZSA9
IGFycmF5VHlwZTIuZ2V0Q29tcG9uZW50VHlwZSgpOworCQl0eXBlID0gY29tcG9uZW50VHlwZShh
cnJheVR5cGUyKTsKIAkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5cGUiLCB0eXBlIGluc3Rh
bmNlb2YgQXJyYXlUeXBlKTsgLy8kTk9OLU5MUy0xJAogCQlBcnJheVR5cGUgYXJyYXlUeXBlMyA9
IChBcnJheVR5cGUpIHR5cGU7CiAJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzUgPSBhcnJheVR5
cGUzLnJlc29sdmVCaW5kaW5nKCk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRl
ckFTVDhUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlckFTVDhUZXN0LmphdmEKaW5k
ZXggY2UwZmNjNC4uZDQxMzBlNSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXJB
U1Q4VGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyQVNUOFRlc3QuamF2YQpA
QCAtNzY2MiwxNSArNzY2Miw5IEBACiAJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IGFycmF5
VHlwZS5yZXNvbHZlQmluZGluZygpOwogCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJqYXZhLmxh
bmcuT2JqZWN0W11bXSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKIAkJYXNzZXJ0Tm90TnVsbCgi
Tm8gdHlwZSBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOyAvLyROT04tTkxTLTEkCi0JCVR5cGUgZWxl
bWVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlJVHlwZUJpbmRpbmcg
dHlwZUJpbmRpbmcyID0gZWxlbWVudFR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKLQkJYXNzZXJ0Tm90
TnVsbCgiTm8gdHlwZSBiaW5kaW5nMiIsIHR5cGVCaW5kaW5nMik7IC8vJE5PTi1OTFMtMSQKLQkJ
YXNzZXJ0RXF1YWxzKCJ3cm9uZyBkaW1lbnNpb24iLCAxLCB0eXBlQmluZGluZzIuZ2V0RGltZW5z
aW9ucygpKTsgLy8kTk9OLU5MUy0xJAotCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAiT2Jq
ZWN0W10iLCB0eXBlQmluZGluZzIuZ2V0TmFtZSgpKTsJCSAvLyROT04tTkxTLTEkIC8vJE5PTi1O
TFMtMiQKLQkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5cGUiLCBlbGVtZW50VHlwZS5pc0Fy
cmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAotCQlUeXBlIGVsZW1lbnRUeXBlMiA9ICgoQXJyYXlU
eXBlKSBlbGVtZW50VHlwZSkuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlhc3NlcnRUcnVlKCJOb3Qg
YSBzaW1wbGUgdHlwZSIsIGVsZW1lbnRUeXBlMi5pc1NpbXBsZVR5cGUoKSk7IC8vJE5PTi1OTFMt
MSQKLQkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nMyA9IGVsZW1lbnRUeXBlMi5yZXNvbHZlQmlu
ZGluZygpOworCQlUeXBlIGVsZW1lbnRUeXBlID0gYXJyYXlUeXBlLmdldEVsZW1lbnRUeXBlKCk7
CisJCWFzc2VydFRydWUoIk5vdCBhIHNpbXBsZSB0eXBlIiwgZWxlbWVudFR5cGUuaXNTaW1wbGVU
eXBlKCkpOyAvLyROT04tTkxTLTEkCisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzMgPSBlbGVt
ZW50VHlwZS5yZXNvbHZlQmluZGluZygpOwogCQlhc3NlcnROb3ROdWxsKCJObyB0eXBlIGJpbmRp
bmczIiwgdHlwZUJpbmRpbmczKTsgLy8kTk9OLU5MUy0xJAogCQlhc3NlcnRFcXVhbHMoIndyb25n
IGRpbWVuc2lvbiIsIDAsIHR5cGVCaW5kaW5nMy5nZXREaW1lbnNpb25zKCkpOyAvLyROT04tTkxT
LTEkCiAJCWFzc2VydEVxdWFscygid3JvbmcgbmFtZSIsICJPYmplY3QiLCB0eXBlQmluZGluZzMu
Z2V0TmFtZSgpKTsJCSAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKQEAgLTgwMDksMTIgKzgw
MDMsMTAgQEAKIAkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nMyA9IHNpbXBsZVR5cGUucmVzb2x2
ZUJpbmRpbmcoKTsKIAkJYXNzZXJ0Tm90TnVsbCgibm8gdHlwZSBiaW5kaW5nMyIsIHR5cGVCaW5k
aW5nMyk7IC8vJE5PTi1OTFMtMSQKIAkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgIk9iamVj
dCIsIHR5cGVCaW5kaW5nMy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQK
LQkJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWFzc2VydFRydWUoIk5v
dCBhbiBhcnJheSB0eXBlIiwgdHlwZSBpbnN0YW5jZW9mIEFycmF5VHlwZSk7IC8vJE5PTi1OTFMt
MSQKLQkJQXJyYXlUeXBlIGFycmF5VHlwZTIgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQlJVHlwZUJp
bmRpbmcgdHlwZUJpbmRpbmc0ID0gYXJyYXlUeXBlMi5yZXNvbHZlQmluZGluZygpOworCQl0eXBl
ID0gYXJyYXlUeXBlLmdldEVsZW1lbnRUeXBlKCk7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGlu
ZzQgPSB0eXBlLnJlc29sdmVCaW5kaW5nKCk7CiAJCWFzc2VydE5vdE51bGwoIm5vIHR5cGUgYmlu
ZGluZzQiLCB0eXBlQmluZGluZzQpOyAvLyROT04tTkxTLTEkCi0JCWFzc2VydEVxdWFscygid3Jv
bmcgbmFtZSIsICJPYmplY3RbXSIsIHR5cGVCaW5kaW5nNC5nZXROYW1lKCkpOyAvLyROT04tTkxT
LTEkIC8vJE5PTi1OTFMtMiQKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgIk9iamVjdCIs
IHR5cGVCaW5kaW5nNC5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKIAl9
CiAKIAkvKioKQEAgLTgwNTEsMjAgKzgwNDMsMTAgQEAKIAkJSVR5cGVCaW5kaW5nIHR5cGVCaW5k
aW5nMyA9IHNpbXBsZVR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKIAkJYXNzZXJ0Tm90TnVsbCgibm8g
dHlwZSBiaW5kaW5nMyIsIHR5cGVCaW5kaW5nMyk7IC8vJE5PTi1OTFMtMSQKIAkJYXNzZXJ0RXF1
YWxzKCJ3cm9uZyBuYW1lIiwgIk9iamVjdCIsIHR5cGVCaW5kaW5nMy5nZXROYW1lKCkpOyAvLyRO
T04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKLQkJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRU
eXBlKCk7Ci0JCWFzc2VydFRydWUoIk5vdCBhbiBhcnJheSB0eXBlIiwgdHlwZSBpbnN0YW5jZW9m
IEFycmF5VHlwZSk7IC8vJE5PTi1OTFMtMSQKLQkJQXJyYXlUeXBlIGFycmF5VHlwZTIgPSAoQXJy
YXlUeXBlKSB0eXBlOwotCQljaGVja1NvdXJjZVJhbmdlKGFycmF5VHlwZTIsICJPYmplY3RbMTBd
W10iLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCi0JCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzQg
PSBhcnJheVR5cGUyLnJlc29sdmVCaW5kaW5nKCk7CisJCXR5cGUgPSBhcnJheVR5cGUuZ2V0RWxl
bWVudFR5cGUoKTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nNCA9IHR5cGUucmVzb2x2ZUJp
bmRpbmcoKTsKIAkJYXNzZXJ0Tm90TnVsbCgibm8gdHlwZSBiaW5kaW5nNCIsIHR5cGVCaW5kaW5n
NCk7IC8vJE5PTi1OTFMtMSQKLQkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgIk9iamVjdFtd
W10iLCB0eXBlQmluZGluZzQuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIk
Ci0JCXR5cGUgPSBhcnJheVR5cGUyLmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNzZXJ0VHJ1ZSgi
Tm90IGFuIGFycmF5IHR5cGUiLCB0eXBlIGluc3RhbmNlb2YgQXJyYXlUeXBlKTsgLy8kTk9OLU5M
Uy0xJAotCQlBcnJheVR5cGUgYXJyYXlUeXBlMyA9IChBcnJheVR5cGUpIHR5cGU7Ci0JCUlUeXBl
QmluZGluZyB0eXBlQmluZGluZzUgPSBhcnJheVR5cGUzLnJlc29sdmVCaW5kaW5nKCk7Ci0JCWFz
c2VydE5vdE51bGwoIm5vIHR5cGUgYmluZGluZzUiLCB0eXBlQmluZGluZzUpOyAvLyROT04tTkxT
LTEkCi0JCWFzc2VydEVxdWFscygid3JvbmcgbmFtZSIsICJPYmplY3RbXSIsIHR5cGVCaW5kaW5n
NS5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKLQkJY2hlY2tTb3VyY2VS
YW5nZShhcnJheVR5cGUzLCAiT2JqZWN0WzEwXSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJ
YXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgIk9iamVjdCIsIHR5cGVCaW5kaW5nNC5nZXROYW1l
KCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKIAl9CiAKIApkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2RvbS9BU1RDb252ZXJ0ZXJKYXZhZG9jRmxhdHRlbmVyLmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FT
VENvbnZlcnRlckphdmFkb2NGbGF0dGVuZXIuamF2YQppbmRleCBkNThkYmRjLi4zZjM5NmI5IDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlckphdmFkb2NGbGF0dGVuZXIuamF2YQor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlckphdmFkb2NGbGF0dGVuZXIuamF2YQpAQCAtMSwx
MCArMSwxNCBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAw
MCwgMjAwOCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAw
MCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2
ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBt
YWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vu
c2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBh
dmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1s
CiAgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVj
aWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3Mg
KEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1
cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVj
aWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKiAKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0g
Q29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KICAqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqLwpAQCAtMzMsNiArMzcsMTMgQEAKIH0KIAogLyoqCisgKiBAZGVwcmVjYXRl
ZAorICovCitwcml2YXRlIFR5cGUgY29tcG9uZW50VHlwZShBcnJheVR5cGUgYXJyYXkpIHsKKwly
ZXR1cm4gYXJyYXkuZ2V0Q29tcG9uZW50VHlwZSgpOworfQorCisvKioKICAqIFJldHVybnMgdGhl
IHN0cmluZyBhY2N1bXVsYXRlZCBpbiB0aGUgdmlzaXQuCiAgKgogICogQHJldHVybiB0aGUgc2Vy
aWFsaXplZApAQCAtNTIsOCArNjMsMTUgQEAKICAqIEBzZWUgQVNUVmlzaXRvciN2aXNpdChBcnJh
eVR5cGUpCiAgKi8KIHB1YmxpYyBib29sZWFuIHZpc2l0KEFycmF5VHlwZSBub2RlKSB7Ci0Jbm9k
ZS5nZXRDb21wb25lbnRUeXBlKCkuYWNjZXB0KHRoaXMpOwotCXRoaXMuYnVmZmVyLmFwcGVuZCgi
W10iKTsvLyROT04tTkxTLTEkCisJaWYgKG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA8IEFTVC5K
TFM4KSB7CisJCWNvbXBvbmVudFR5cGUobm9kZSkuYWNjZXB0KHRoaXMpOworCQl0aGlzLmJ1ZmZl
ci5hcHBlbmQoIltdIik7Ly8kTk9OLU5MUy0xJAorCX0gZWxzZSB7CisJCW5vZGUuZ2V0RWxlbWVu
dFR5cGUoKS5hY2NlcHQodGhpcyk7CisJCWZvciAoaW50IGkgPSAwOyAgaSA8IG5vZGUuZ2V0RGlt
ZW5zaW9ucygpOyArK2kpIHsKKwkJCSgoRXh0cmFEaW1lbnNpb24pIG5vZGUuZGltZW5zaW9ucygp
LmdldChpKSkuYWNjZXB0KHRoaXMpOworCQl9CisJfQogCXJldHVybiBmYWxzZTsKIH0KIApkaWZm
IC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXJUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FT
VENvbnZlcnRlclRlc3QuamF2YQppbmRleCA4ZDYwNTUzLi5hYzZjMDJjIDEwMDY0NAotLS0gYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvZG9tL0FTVENvbnZlcnRlclRlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZl
cnRlclRlc3QuamF2YQpAQCAtNTIsNiArNTIsMTMgQEAKIAkJcmV0dXJuIG1ldGhvZERlY2xhcmF0
aW9uLnRocm93bkV4Y2VwdGlvbnMoKTsKIAl9CiAKKwkvKioKKwkgKiBAZGVwcmVjYXRlZAorCSAq
LworCXByaXZhdGUgVHlwZSBjb21wb25lbnRUeXBlKEFycmF5VHlwZSBhcnJheSkgeworCQlyZXR1
cm4gYXJyYXkuZ2V0Q29tcG9uZW50VHlwZSgpOworCX0KKwogCS8qKiBAZGVwcmVjYXRlZCB1c2lu
ZyBkZXByZWNhdGVkIGNvZGUgKi8KIAlwdWJsaWMgdm9pZCB0ZXN0MDAwMSgpIHRocm93cyBKYXZh
TW9kZWxFeGNlcHRpb24gewogCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21w
aWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMDAxIiwgIlRlc3QuamF2YSIp
OyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQk
CkBAIC03ODIxLDEzICs3ODI4LDEzIEBACiAJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IGFy
cmF5VHlwZS5yZXNvbHZlQmluZGluZygpOwogCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJqYXZh
LmxhbmcuT2JqZWN0W11bXSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKIAkJYXNzZXJ0Tm90TnVs
bCgiTm8gdHlwZSBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOyAvLyROT04tTkxTLTEkCi0JCVR5cGUg
ZWxlbWVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlUeXBlIGVsZW1l
bnRUeXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlJVHlwZUJpbmRpbmcgdHlwZUJp
bmRpbmcyID0gZWxlbWVudFR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKIAkJYXNzZXJ0Tm90TnVsbCgi
Tm8gdHlwZSBiaW5kaW5nMiIsIHR5cGVCaW5kaW5nMik7IC8vJE5PTi1OTFMtMSQKIAkJYXNzZXJ0
RXF1YWxzKCJ3cm9uZyBkaW1lbnNpb24iLCAxLCB0eXBlQmluZGluZzIuZ2V0RGltZW5zaW9ucygp
KTsgLy8kTk9OLU5MUy0xJAogCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAiT2JqZWN0W10i
LCB0eXBlQmluZGluZzIuZ2V0TmFtZSgpKTsJCSAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQK
IAkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5cGUiLCBlbGVtZW50VHlwZS5pc0FycmF5VHlw
ZSgpKTsgLy8kTk9OLU5MUy0xJAotCQlUeXBlIGVsZW1lbnRUeXBlMiA9ICgoQXJyYXlUeXBlKSBl
bGVtZW50VHlwZSkuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlUeXBlIGVsZW1lbnRUeXBlMiA9IGNv
bXBvbmVudFR5cGUoKChBcnJheVR5cGUpIGVsZW1lbnRUeXBlKSk7CiAJCWFzc2VydFRydWUoIk5v
dCBhIHNpbXBsZSB0eXBlIiwgZWxlbWVudFR5cGUyLmlzU2ltcGxlVHlwZSgpKTsgLy8kTk9OLU5M
Uy0xJAogCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmczID0gZWxlbWVudFR5cGUyLnJlc29sdmVC
aW5kaW5nKCk7CiAJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUgYmluZGluZzMiLCB0eXBlQmluZGlu
ZzMpOyAvLyROT04tTkxTLTEkCkBAIC04MTY4LDcgKzgxNzUsNyBAQAogCQlJVHlwZUJpbmRpbmcg
dHlwZUJpbmRpbmczID0gc2ltcGxlVHlwZS5yZXNvbHZlQmluZGluZygpOwogCQlhc3NlcnROb3RO
dWxsKCJubyB0eXBlIGJpbmRpbmczIiwgdHlwZUJpbmRpbmczKTsgLy8kTk9OLU5MUy0xJAogCQlh
c3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAiT2JqZWN0IiwgdHlwZUJpbmRpbmczLmdldE5hbWUo
KSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAotCQl0eXBlID0gYXJyYXlUeXBlLmdldENv
bXBvbmVudFR5cGUoKTsKKwkJdHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNz
ZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5cGUiLCB0eXBlIGluc3RhbmNlb2YgQXJyYXlUeXBlKTsg
Ly8kTk9OLU5MUy0xJAogCQlBcnJheVR5cGUgYXJyYXlUeXBlMiA9IChBcnJheVR5cGUpIHR5cGU7
CiAJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzQgPSBhcnJheVR5cGUyLnJlc29sdmVCaW5kaW5n
KCk7CkBAIC04MjEwLDE0ICs4MjE3LDE0IEBACiAJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzMg
PSBzaW1wbGVUeXBlLnJlc29sdmVCaW5kaW5nKCk7CiAJCWFzc2VydE5vdE51bGwoIm5vIHR5cGUg
YmluZGluZzMiLCB0eXBlQmluZGluZzMpOyAvLyROT04tTkxTLTEkCiAJCWFzc2VydEVxdWFscygi
d3JvbmcgbmFtZSIsICJPYmplY3QiLCB0eXBlQmluZGluZzMuZ2V0TmFtZSgpKTsgLy8kTk9OLU5M
Uy0xJCAvLyROT04tTkxTLTIkCi0JCXR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgp
OworCQl0eXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJOb3Qg
YW4gYXJyYXkgdHlwZSIsIHR5cGUgaW5zdGFuY2VvZiBBcnJheVR5cGUpOyAvLyROT04tTkxTLTEk
CiAJCUFycmF5VHlwZSBhcnJheVR5cGUyID0gKEFycmF5VHlwZSkgdHlwZTsKIAkJY2hlY2tTb3Vy
Y2VSYW5nZShhcnJheVR5cGUyLCAiT2JqZWN0WzEwXVtdIiwgc291cmNlKTsgLy8kTk9OLU5MUy0x
JAogCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmc0ID0gYXJyYXlUeXBlMi5yZXNvbHZlQmluZGlu
ZygpOwogCQlhc3NlcnROb3ROdWxsKCJubyB0eXBlIGJpbmRpbmc0IiwgdHlwZUJpbmRpbmc0KTsg
Ly8kTk9OLU5MUy0xJAogCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAiT2JqZWN0W11bXSIs
IHR5cGVCaW5kaW5nNC5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKLQkJ
dHlwZSA9IGFycmF5VHlwZTIuZ2V0Q29tcG9uZW50VHlwZSgpOworCQl0eXBlID0gY29tcG9uZW50
VHlwZShhcnJheVR5cGUyKTsKIAkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5cGUiLCB0eXBl
IGluc3RhbmNlb2YgQXJyYXlUeXBlKTsgLy8kTk9OLU5MUy0xJAogCQlBcnJheVR5cGUgYXJyYXlU
eXBlMyA9IChBcnJheVR5cGUpIHR5cGU7CiAJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzUgPSBh
cnJheVR5cGUzLnJlc29sdmVCaW5kaW5nKCk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENv
bnZlcnRlclRlc3QyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlclRlc3QyLmphdmEKaW5k
ZXggMTJhZDU2MC4uNjYxN2ZiYiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXJU
ZXN0Mi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyVGVzdDIuamF2YQpAQCAtNCw2
ICs0LDEwIEBACiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBF
Y2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlz
dHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3Jn
L2xlZ2FsL2VwbC12MTAuaHRtbAorICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2Yg
YW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAq
IENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGlu
ZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBh
dGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgogICogCiAgKiBDb250cmli
dXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVu
dGF0aW9uCkBAIC01NCw2ICs1OCwxMyBAQAogCSAqLwogCXByaXZhdGUgc3RhdGljIExpc3QgaW50
ZXJuYWxUaHJvd25FeGNlcHRpb25zKE1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9u
KSB7CiAJCXJldHVybiBtZXRob2REZWNsYXJhdGlvbi50aHJvd25FeGNlcHRpb25zKCk7CisJfQor
CisJLyoqCisJICogQGRlcHJlY2F0ZWQKKwkgKi8KKwlwcml2YXRlIFR5cGUgY29tcG9uZW50VHlw
ZShBcnJheVR5cGUgYXJyYXkpIHsKKwkJcmV0dXJuIGFycmF5LmdldENvbXBvbmVudFR5cGUoKTsK
IAl9CiAKIAkvKioKQEAgLTI2MzEsMTEgKzI2NDIsMTEgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0
eXBlLCAiQ2xhc3NbXVtdIiwgc291cmNlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5
cGUiLCB0eXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJCUFycmF5VHlwZSBhcnJh
eVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJheVR5
cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRU
eXBlKGFycmF5VHlwZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9u
ZW50VHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQljaGVja1NvdXJjZVJhbmdl
KGNvbXBvbmVudFR5cGUsICJDbGFzc1tdIiwgc291cmNlKTsKIAkJYXJyYXlUeXBlID0gKEFycmF5
VHlwZSkgY29tcG9uZW50VHlwZTsKLQkJY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21w
b25lbnRUeXBlKCk7CisJCWNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7
CiAJCWFzc2VydFRydWUoImlzIGFuIGFycmF5IHR5cGUiLCAhY29tcG9uZW50VHlwZS5pc0FycmF5
VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUs
ICJDbGFzcyIsIHNvdXJjZSk7CiAJfQpAQCAtMjY1NywxNSArMjY2OCwxNSBAQAogCQljaGVja1Nv
dXJjZVJhbmdlKHR5cGUsICJDbGFzc1tdW11bXSIsIHNvdXJjZSk7CiAJCWFzc2VydFRydWUoIm5v
dCBhbiBhcnJheSB0eXBlIiwgdHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQlB
cnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJVHlwZSBjb21wb25lbnRU
eXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJVHlwZSBjb21wb25lbnRUeXBl
ID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkg
dHlwZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJY2hl
Y2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXVtdIiwgc291cmNlKTsKIAkJYXJy
YXlUeXBlID0gKEFycmF5VHlwZSkgY29tcG9uZW50VHlwZTsKLQkJY29tcG9uZW50VHlwZSA9IGFy
cmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCWNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRU
eXBlKGFycmF5VHlwZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9u
ZW50VHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQljaGVja1NvdXJjZVJhbmdl
KGNvbXBvbmVudFR5cGUsICJDbGFzc1tdIiwgc291cmNlKTsKIAkJYXJyYXlUeXBlID0gKEFycmF5
VHlwZSkgY29tcG9uZW50VHlwZTsKLQkJY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21w
b25lbnRUeXBlKCk7CisJCWNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7
CiAJCWFzc2VydFRydWUoImlzIGFuIGFycmF5IHR5cGUiLCAhY29tcG9uZW50VHlwZS5pc0FycmF5
VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUs
ICJDbGFzcyIsIHNvdXJjZSk7CiAJfQpAQCAtMjY4NywxMSArMjY5OCwxMSBAQAogCQljaGVja1Nv
dXJjZVJhbmdlKHR5cGUsICJDbGFzc1tdW10iLCBzb3VyY2UpOwogCQlhc3NlcnRUcnVlKCJub3Qg
YW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJQXJy
YXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7Ci0JCVR5cGUgY29tcG9uZW50VHlw
ZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCVR5cGUgY29tcG9uZW50VHlwZSA9
IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5
cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJCWNoZWNr
U291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzW10iLCBzb3VyY2UpOwogCQlhcnJheVR5
cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBlOwotCQljb21wb25lbnRUeXBlID0gYXJyYXlU
eXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJY29tcG9uZW50VHlwZSA9IGNvbXBvbmVudFR5cGUo
YXJyYXlUeXBlKTsKIAkJYXNzZXJ0VHJ1ZSgiaXMgYW4gYXJyYXkgdHlwZSIsICFjb21wb25lbnRU
eXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJCWNoZWNrU291cmNlUmFuZ2UoY29t
cG9uZW50VHlwZSwgIkNsYXNzIiwgc291cmNlKTsKIAkJTGlzdCBmcmFnbWVudHMgPSBmaWVsZERl
Y2xhcmF0aW9uLmZyYWdtZW50cygpOwpAQCAtMjcxNywxOSArMjcyOCwxOSBAQAogCQljaGVja1Nv
dXJjZVJhbmdlKHR5cGUsICJDbGFzc1tdW11bXVtdIiwgc291cmNlKTsKIAkJYXNzZXJ0VHJ1ZSgi
bm90IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJ
CUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQlUeXBlIGNvbXBvbmVu
dFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlUeXBlIGNvbXBvbmVudFR5
cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJh
eSB0eXBlIiwgY29tcG9uZW50VHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQlj
aGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJDbGFzc1tdW11bXSIsIHNvdXJjZSk7CiAJ
CWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7Ci0JCWNvbXBvbmVudFR5cGUg
PSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQljb21wb25lbnRUeXBlID0gY29tcG9u
ZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIGNv
bXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJY2hlY2tTb3VyY2VS
YW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXVtdIiwgc291cmNlKTsKIAkJYXJyYXlUeXBlID0g
KEFycmF5VHlwZSkgY29tcG9uZW50VHlwZTsKLQkJY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5n
ZXRDb21wb25lbnRUeXBlKCk7CisJCWNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5
VHlwZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlwZS5p
c0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVu
dFR5cGUsICJDbGFzc1tdIiwgc291cmNlKTsKIAkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgY29t
cG9uZW50VHlwZTsKLQkJY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBl
KCk7CisJCWNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7CiAJCWFzc2Vy
dFRydWUoImlzIGFuIGFycmF5IHR5cGUiLCAhY29tcG9uZW50VHlwZS5pc0FycmF5VHlwZSgpKTsg
Ly8kTk9OLU5MUy0xJAogCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJDbGFzcyIs
IHNvdXJjZSk7CiAJfQpAQCAtMjc1MSw3ICsyNzYyLDcgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0
eXBlLCAiQ2xhc3NbXSIsIHNvdXJjZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBl
IiwgdHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQlBcnJheVR5cGUgYXJyYXlU
eXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJVHlwZSBjb21wb25lbnRUeXBlID0gYXJyYXlUeXBl
LmdldENvbXBvbmVudFR5cGUoKTsKKwkJVHlwZSBjb21wb25lbnRUeXBlID0gY29tcG9uZW50VHlw
ZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJheSB0eXBlIiwgIWNvbXBvbmVu
dFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJY2hlY2tTb3VyY2VSYW5nZShj
b21wb25lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2UpOwogCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9k
b20vQVNUQ29udmVydGVyVGVzdEFTVDNfMi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXJU
ZXN0QVNUM18yLmphdmEKaW5kZXggMGI5YTE3Ny4uN2I0OTc1NSAxMDA2NDQKLS0tIGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L2RvbS9BU1RDb252ZXJ0ZXJUZXN0QVNUM18yLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252
ZXJ0ZXJUZXN0QVNUM18yLmphdmEKQEAgLTE0Myw2ICsxNDMsMTMgQEAKIAl9CiAKIAkvKioKKwkg
KiBAZGVwcmVjYXRlZAorCSAqLworCXByaXZhdGUgVHlwZSBjb21wb25lbnRUeXBlKEFycmF5VHlw
ZSBhcnJheSkgeworCQlyZXR1cm4gYXJyYXkuZ2V0Q29tcG9uZW50VHlwZSgpOworCX0KKworCS8q
KgogCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjI1NjAK
IAkgKi8KIAlwdWJsaWMgdm9pZCB0ZXN0MDQwMSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24g
ewpAQCAtMjcxOCwxMSArMjcyNSwxMSBAQAogCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJDbGFz
c1tdW10iLCBzb3VyY2UpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUu
aXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChB
cnJheVR5cGUpIHR5cGU7Ci0JCVR5cGUgY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21w
b25lbnRUeXBlKCk7CisJCVR5cGUgY29tcG9uZW50VHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlU
eXBlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlz
QXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50
VHlwZSwgIkNsYXNzW10iLCBzb3VyY2UpOwogCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21w
b25lbnRUeXBlOwotCQljb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUo
KTsKKwkJY29tcG9uZW50VHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNzZXJ0
VHJ1ZSgiaXMgYW4gYXJyYXkgdHlwZSIsICFjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAv
LyROT04tTkxTLTEkCiAJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzIiwg
c291cmNlKTsKIAl9CkBAIC0yNzQ0LDE1ICsyNzUxLDE1IEBACiAJCWNoZWNrU291cmNlUmFuZ2Uo
dHlwZSwgIkNsYXNzW11bXVtdIiwgc291cmNlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5
IHR5cGUiLCB0eXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJCUFycmF5VHlwZSBh
cnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJh
eVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBjb21wb25l
bnRUeXBlKGFycmF5VHlwZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29t
cG9uZW50VHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQljaGVja1NvdXJjZVJh
bmdlKGNvbXBvbmVudFR5cGUsICJDbGFzc1tdW10iLCBzb3VyY2UpOwogCQlhcnJheVR5cGUgPSAo
QXJyYXlUeXBlKSBjb21wb25lbnRUeXBlOwotCQljb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdl
dENvbXBvbmVudFR5cGUoKTsKKwkJY29tcG9uZW50VHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlU
eXBlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlz
QXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50
VHlwZSwgIkNsYXNzW10iLCBzb3VyY2UpOwogCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21w
b25lbnRUeXBlOwotCQljb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUo
KTsKKwkJY29tcG9uZW50VHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNzZXJ0
VHJ1ZSgiaXMgYW4gYXJyYXkgdHlwZSIsICFjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAv
LyROT04tTkxTLTEkCiAJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzIiwg
c291cmNlKTsKIAl9CkBAIC0yNzc0LDExICsyNzgxLDExIEBACiAJCWNoZWNrU291cmNlUmFuZ2Uo
dHlwZSwgIkNsYXNzW11bXSIsIHNvdXJjZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0
eXBlIiwgdHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQlBcnJheVR5cGUgYXJy
YXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJVHlwZSBjb21wb25lbnRUeXBlID0gYXJyYXlU
eXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJVHlwZSBjb21wb25lbnRUeXBlID0gY29tcG9uZW50
VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIGNvbXBv
bmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJY2hlY2tTb3VyY2VSYW5n
ZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXSIsIHNvdXJjZSk7CiAJCWFycmF5VHlwZSA9IChBcnJh
eVR5cGUpIGNvbXBvbmVudFR5cGU7Ci0JCWNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29t
cG9uZW50VHlwZSgpOworCQljb21wb25lbnRUeXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUp
OwogCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJheSB0eXBlIiwgIWNvbXBvbmVudFR5cGUuaXNBcnJh
eVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBl
LCAiQ2xhc3MiLCBzb3VyY2UpOwogCQlMaXN0IGZyYWdtZW50cyA9IGZpZWxkRGVjbGFyYXRpb24u
ZnJhZ21lbnRzKCk7CkBAIC0yODA0LDE5ICsyODExLDE5IEBACiAJCWNoZWNrU291cmNlUmFuZ2Uo
dHlwZSwgIkNsYXNzW11bXVtdW10iLCBzb3VyY2UpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJy
YXkgdHlwZSIsIHR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJQXJyYXlUeXBl
IGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7Ci0JCVR5cGUgY29tcG9uZW50VHlwZSA9IGFy
cmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCVR5cGUgY29tcG9uZW50VHlwZSA9IGNvbXBv
bmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCBj
b21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJCWNoZWNrU291cmNl
UmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzW11bXVtdIiwgc291cmNlKTsKIAkJYXJyYXlUeXBl
ID0gKEFycmF5VHlwZSkgY29tcG9uZW50VHlwZTsKLQkJY29tcG9uZW50VHlwZSA9IGFycmF5VHlw
ZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCWNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRUeXBlKGFy
cmF5VHlwZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlw
ZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQljaGVja1NvdXJjZVJhbmdlKGNvbXBv
bmVudFR5cGUsICJDbGFzc1tdW10iLCBzb3VyY2UpOwogCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBl
KSBjb21wb25lbnRUeXBlOwotCQljb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVu
dFR5cGUoKTsKKwkJY29tcG9uZW50VHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJ
YXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBl
KCkpOyAvLyROT04tTkxTLTEkCiAJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNs
YXNzW10iLCBzb3VyY2UpOwogCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBl
OwotCQljb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJY29t
cG9uZW50VHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNzZXJ0VHJ1ZSgiaXMg
YW4gYXJyYXkgdHlwZSIsICFjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxT
LTEkCiAJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzIiwgc291cmNlKTsK
IAl9CkBAIC0yODM4LDcgKzI4NDUsNyBAQAogCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJDbGFz
c1tdIiwgc291cmNlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlz
QXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJy
YXlUeXBlKSB0eXBlOwotCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9u
ZW50VHlwZSgpOworCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlw
ZSk7CiAJCWFzc2VydFRydWUoImlzIGFuIGFycmF5IHR5cGUiLCAhY29tcG9uZW50VHlwZS5pc0Fy
cmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5
cGUsICJDbGFzcyIsIHNvdXJjZSk7CiAJfQpAQCAtNjU0OSw3ICs2NTU2LDcgQEAKIAkJCWNoZWNr
U291cmNlUmFuZ2UodHlwZSwgImJvb2xlYW5bXSIsIGNvbnRlbnRzKTsKIAkJCWFzc2VydFRydWUo
Ik5vdCBhbiBhcnJheSB0eXBlIiwgdHlwZS5pc0FycmF5VHlwZSgpKTsKIAkJCUFycmF5VHlwZSBh
cnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQkJVHlwZSBjb21wb25lbnRUeXBlID0gYXJy
YXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJCVR5cGUgY29tcG9uZW50VHlwZSA9IGNvbXBv
bmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJCWFzc2VydFRydWUoIk5vdCBhIHByaW1pdGl2ZSB0eXBl
IiwgY29tcG9uZW50VHlwZS5pc1ByaW1pdGl2ZVR5cGUoKSk7CiAJCQlQcmltaXRpdmVUeXBlIHBy
aW1pdGl2ZVR5cGUgPSAoUHJpbWl0aXZlVHlwZSkgY29tcG9uZW50VHlwZTsKIAkJCWFzc2VydEVx
dWFscygiTm90IGJvb2xlYW4iLCBQcmltaXRpdmVUeXBlLkJPT0xFQU4sIHByaW1pdGl2ZVR5cGUu
Z2V0UHJpbWl0aXZlVHlwZUNvZGUoKSk7CkBAIC05NTQxLDExICs5NTQ4LDExIEBACiAJCUFycmF5
Q3JlYXRpb24gYXJyYXlDcmVhdGlvbiA9IChBcnJheUNyZWF0aW9uKSBub2RlOwogCQlBcnJheVR5
cGUgYXJyYXlUeXBlID0gYXJyYXlDcmVhdGlvbi5nZXRUeXBlKCk7CiAJCWNoZWNrU291cmNlUmFu
Z2UoYXJyYXlUeXBlLCAiU3RyaW5nWzBdW2JbMTBdXVtdIiwgc291cmNlVW5pdC5nZXRTb3VyY2Uo
KSk7Ci0JCW5vZGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlub2RlID0gY29t
cG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBhcnJheSB0eXBl
IiwgQVNUTm9kZS5BUlJBWV9UWVBFLCBub2RlLmdldE5vZGVUeXBlKCkpOwogCQlhcnJheVR5cGUg
PSAoQXJyYXlUeXBlKW5vZGU7CiAJCWNoZWNrU291cmNlUmFuZ2UoYXJyYXlUeXBlLCAiU3RyaW5n
WzBdW2JbMTBdXSIsIHNvdXJjZVVuaXQuZ2V0U291cmNlKCkpOwotCQlub2RlID0gYXJyYXlUeXBl
LmdldENvbXBvbmVudFR5cGUoKTsKKwkJbm9kZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsK
IAkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gYXJyYXkgdHlwZSIsIEFTVE5vZGUuQVJSQVlfVFlQRSwg
bm9kZS5nZXROb2RlVHlwZSgpKTsKIAkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSlub2RlOwogCQlj
aGVja1NvdXJjZVJhbmdlKGFycmF5VHlwZSwgIlN0cmluZ1swXSIsIHNvdXJjZVVuaXQuZ2V0U291
cmNlKCkpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXJUZXN0QVNUNF8yLmph
dmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlclRlc3RBU1Q0XzIuamF2YQppbmRleCBhY2YwOGVm
Li4yNWY4OGE4IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlclRlc3RBU1Q0XzIu
amF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlclRlc3RBU1Q0XzIuamF2YQpAQCAtMTQx
LDYgKzE0MSwxMyBAQAogCX0KIAogCS8qKgorCSAqIEBkZXByZWNhdGVkCisJICovCisJcHJpdmF0
ZSBUeXBlIGNvbXBvbmVudFR5cGUoQXJyYXlUeXBlIGFycmF5KSB7CisJCXJldHVybiBhcnJheS5n
ZXRDb21wb25lbnRUeXBlKCk7CisJfQorCisJLyoqCiAJICogaHR0cDovL2Rldi5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yMjU2MAogCSAqLwogCXB1YmxpYyB2b2lkIHRlc3QwNDAx
KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CkBAIC0yNzE2LDExICsyNzIzLDExIEBACiAJ
CWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIkNsYXNzW11bXSIsIHNvdXJjZSk7CiAJCWFzc2VydFRy
dWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgdHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0x
JAogCQlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJVHlwZSBjb21w
b25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJVHlwZSBjb21wb25l
bnRUeXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4g
YXJyYXkgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQK
IAkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXSIsIHNvdXJjZSk7CiAJ
CWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7Ci0JCWNvbXBvbmVudFR5cGUg
PSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQljb21wb25lbnRUeXBlID0gY29tcG9u
ZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJheSB0eXBlIiwgIWNv
bXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJY2hlY2tTb3VyY2VS
YW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2UpOwogCX0KQEAgLTI3NDIsMTUgKzI3
NDksMTUgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiQ2xhc3NbXVtdW10iLCBzb3VyY2Up
OwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNBcnJheVR5cGUoKSk7
IC8vJE5PTi1OTFMtMSQKIAkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7
Ci0JCVR5cGUgY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJ
CVR5cGUgY29tcG9uZW50VHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNzZXJ0
VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAv
LyROT04tTkxTLTEkCiAJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzW11b
XSIsIHNvdXJjZSk7CiAJCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7Ci0J
CWNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQljb21wb25l
bnRUeXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4g
YXJyYXkgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQK
IAkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXSIsIHNvdXJjZSk7CiAJ
CWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7Ci0JCWNvbXBvbmVudFR5cGUg
PSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQljb21wb25lbnRUeXBlID0gY29tcG9u
ZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJheSB0eXBlIiwgIWNv
bXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJY2hlY2tTb3VyY2VS
YW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2UpOwogCX0KQEAgLTI3NzIsMTEgKzI3
NzksMTEgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiQ2xhc3NbXVtdIiwgc291cmNlKTsK
IAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlzQXJyYXlUeXBlKCkpOyAv
LyROT04tTkxTLTEkCiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwot
CQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlU
eXBlIGNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7CiAJCWFzc2VydFRy
dWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlwZS5pc0FycmF5VHlwZSgpKTsgLy8k
Tk9OLU5MUy0xJAogCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJDbGFzc1tdIiwg
c291cmNlKTsKIAkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgY29tcG9uZW50VHlwZTsKLQkJY29t
cG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCWNvbXBvbmVudFR5
cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7CiAJCWFzc2VydFRydWUoImlzIGFuIGFycmF5
IHR5cGUiLCAhY29tcG9uZW50VHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQlj
aGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJDbGFzcyIsIHNvdXJjZSk7CiAJCUxpc3Qg
ZnJhZ21lbnRzID0gZmllbGREZWNsYXJhdGlvbi5mcmFnbWVudHMoKTsKQEAgLTI4MDIsMTkgKzI4
MDksMTkgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiQ2xhc3NbXVtdW11bXSIsIHNvdXJj
ZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgdHlwZS5pc0FycmF5VHlwZSgp
KTsgLy8kTk9OLU5MUy0xJAogCQlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlw
ZTsKLQkJVHlwZSBjb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsK
KwkJVHlwZSBjb21wb25lbnRUeXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3Nl
cnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7
IC8vJE5PTi1OTFMtMSQKIAkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3Nb
XVtdW10iLCBzb3VyY2UpOwogCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBl
OwotCQljb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJY29t
cG9uZW50VHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90
IGFuIGFycmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxT
LTEkCiAJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzW11bXSIsIHNvdXJj
ZSk7CiAJCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7Ci0JCWNvbXBvbmVu
dFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQljb21wb25lbnRUeXBlID0g
Y29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlw
ZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJY2hlY2tT
b3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXSIsIHNvdXJjZSk7CiAJCWFycmF5VHlw
ZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7Ci0JCWNvbXBvbmVudFR5cGUgPSBhcnJheVR5
cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQljb21wb25lbnRUeXBlID0gY29tcG9uZW50VHlwZShh
cnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJheSB0eXBlIiwgIWNvbXBvbmVudFR5
cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJY2hlY2tTb3VyY2VSYW5nZShjb21w
b25lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2UpOwogCX0KQEAgLTI4MzYsNyArMjg0Myw3IEBACiAJ
CWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIkNsYXNzW10iLCBzb3VyY2UpOwogCQlhc3NlcnRUcnVl
KCJub3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQK
IAkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7Ci0JCVR5cGUgY29tcG9u
ZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCVR5cGUgY29tcG9uZW50
VHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNzZXJ0VHJ1ZSgiaXMgYW4gYXJy
YXkgdHlwZSIsICFjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJ
CWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzIiwgc291cmNlKTsKIAl9CkBA
IC02NTQ3LDcgKzY1NTQsNyBAQAogCQkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiYm9vbGVhbltd
IiwgY29udGVudHMpOwogCQkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlz
QXJyYXlUeXBlKCkpOwogCQkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7
Ci0JCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwor
CQkJVHlwZSBjb21wb25lbnRUeXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQkJYXNz
ZXJ0VHJ1ZSgiTm90IGEgcHJpbWl0aXZlIHR5cGUiLCBjb21wb25lbnRUeXBlLmlzUHJpbWl0aXZl
VHlwZSgpKTsKIAkJCVByaW1pdGl2ZVR5cGUgcHJpbWl0aXZlVHlwZSA9IChQcmltaXRpdmVUeXBl
KSBjb21wb25lbnRUeXBlOwogCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYm9vbGVhbiIsIFByaW1pdGl2
ZVR5cGUuQk9PTEVBTiwgcHJpbWl0aXZlVHlwZS5nZXRQcmltaXRpdmVUeXBlQ29kZSgpKTsKQEAg
LTk1MzksMTEgKzk1NDYsMTEgQEAKIAkJQXJyYXlDcmVhdGlvbiBhcnJheUNyZWF0aW9uID0gKEFy
cmF5Q3JlYXRpb24pIG5vZGU7CiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSBhcnJheUNyZWF0aW9u
LmdldFR5cGUoKTsKIAkJY2hlY2tTb3VyY2VSYW5nZShhcnJheVR5cGUsICJTdHJpbmdbMF1bYlsx
MF1dW10iLCBzb3VyY2VVbml0LmdldFNvdXJjZSgpKTsKLQkJbm9kZSA9IGFycmF5VHlwZS5nZXRD
b21wb25lbnRUeXBlKCk7CisJCW5vZGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7CiAJCWFz
c2VydEVxdWFscygiTm90IGFuIGFycmF5IHR5cGUiLCBBU1ROb2RlLkFSUkFZX1RZUEUsIG5vZGUu
Z2V0Tm9kZVR5cGUoKSk7CiAJCWFycmF5VHlwZSA9IChBcnJheVR5cGUpbm9kZTsKIAkJY2hlY2tT
b3VyY2VSYW5nZShhcnJheVR5cGUsICJTdHJpbmdbMF1bYlsxMF1dIiwgc291cmNlVW5pdC5nZXRT
b3VyY2UoKSk7Ci0JCW5vZGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlub2Rl
ID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBhcnJh
eSB0eXBlIiwgQVNUTm9kZS5BUlJBWV9UWVBFLCBub2RlLmdldE5vZGVUeXBlKCkpOwogCQlhcnJh
eVR5cGUgPSAoQXJyYXlUeXBlKW5vZGU7CiAJCWNoZWNrU291cmNlUmFuZ2UoYXJyYXlUeXBlLCAi
U3RyaW5nWzBdIiwgc291cmNlVW5pdC5nZXRTb3VyY2UoKSk7CmRpZmYgLS1naXQgYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
ZG9tL0FTVENvbnZlcnRlclRlc3RBU1Q4XzIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVy
VGVzdEFTVDhfMi5qYXZhCmluZGV4IGZiMzJlNzUuLjg4MGRmOGYgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9kb20vQVNUQ29udmVydGVyVGVzdEFTVDhfMi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29u
dmVydGVyVGVzdEFTVDhfMi5qYXZhCkBAIC0xNDEsNiArMTQxLDEzIEBACiAJfQogCiAJLyoqCisJ
ICogQGRlcHJlY2F0ZWQKKwkgKi8KKwlwcml2YXRlIFR5cGUgY29tcG9uZW50VHlwZShBcnJheVR5
cGUgYXJyYXkpIHsKKwkJcmV0dXJuIGFycmF5LmdldENvbXBvbmVudFR5cGUoKTsKKwl9CisKKwkv
KioKIAkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTIyNTYw
CiAJICovCiAJcHVibGljIHZvaWQgdGVzdDA0MDEoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKQEAgLTI3MTAsNiArMjcxNyw3IEBACiAKIAkvKioKIAkgKiBodHRwOi8vYnVncy5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MjgzOQorCSAqIEBkZXByZWNhdGVkIHVzZXMgZGVw
cmVjYXRlZCBtZXRob2RzCiAJICovCiAJcHVibGljIHZvaWQgdGVzdDA0OTMoKSB0aHJvd3MgSmF2
YU1vZGVsRXhjZXB0aW9uIHsKIAkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29t
cGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDQ5MyIsICJBLmphdmEiKTsg
Ly8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JApA
QCAtMjcyNSwxMyArMjczMywxOCBAQAogCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJDbGFzc1td
W10iLCBzb3VyY2UpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNB
cnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChBcnJh
eVR5cGUpIHR5cGU7Ci0JCVR5cGUgY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25l
bnRUeXBlKCk7Ci0JCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlw
ZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAotCQljaGVja1NvdXJjZVJhbmdlKGNvbXBv
bmVudFR5cGUsICJDbGFzc1tdIiwgc291cmNlKTsKLQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkg
Y29tcG9uZW50VHlwZTsKLQkJY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRU
eXBlKCk7Ci0JCWFzc2VydFRydWUoImlzIGFuIGFycmF5IHR5cGUiLCAhY29tcG9uZW50VHlwZS5p
c0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAotCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVu
dFR5cGUsICJDbGFzcyIsIHNvdXJjZSk7CisJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCgpIDwgQVNU
LkpMUzgpIHsKKwkJCVR5cGUgY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRU
eXBlKCk7CisJCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIGNvbXBvbmVudFR5cGUu
aXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9u
ZW50VHlwZSwgIkNsYXNzW10iLCBzb3VyY2UpOworCQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkg
Y29tcG9uZW50VHlwZTsKKwkJCWNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50
VHlwZSgpOworCQkJYXNzZXJ0VHJ1ZSgiaXMgYW4gYXJyYXkgdHlwZSIsICFjb21wb25lbnRUeXBl
LmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJCQljaGVja1NvdXJjZVJhbmdlKGNvbXBv
bmVudFR5cGUsICJDbGFzcyIsIHNvdXJjZSk7CisJCX0gZWxzZSB7CisJCQlUeXBlIGVsZW1lbnRU
eXBlID0gYXJyYXlUeXBlLmdldEVsZW1lbnRUeXBlKCk7CisJCQljaGVja1NvdXJjZVJhbmdlKGVs
ZW1lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2UpOworCQl9CiAJfQogCiAJLyoqCkBAIC0yNzUxLDIx
ICsyNzY0LDI3IEBACiAJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIkNsYXNzW11bXVtdIiwgc291
cmNlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlzQXJyYXlUeXBl
KCkpOyAvLyROT04tTkxTLTEkCiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0
eXBlOwotCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgp
OwotCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJh
eVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKLQkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBl
LCAiQ2xhc3NbXVtdIiwgc291cmNlKTsKLQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgY29tcG9u
ZW50VHlwZTsKLQkJY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7
Ci0JCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlwZS5pc0FycmF5
VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAotCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUs
ICJDbGFzc1tdIiwgc291cmNlKTsKLQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgY29tcG9uZW50
VHlwZTsKLQkJY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0J
CWFzc2VydFRydWUoImlzIGFuIGFycmF5IHR5cGUiLCAhY29tcG9uZW50VHlwZS5pc0FycmF5VHlw
ZSgpKTsgLy8kTk9OLU5MUy0xJAotCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJD
bGFzcyIsIHNvdXJjZSk7CisJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsK
KwkJCVR5cGUgY29tcG9uZW50VHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKKwkJCWFz
c2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlwZS5pc0FycmF5VHlwZSgp
KTsgLy8kTk9OLU5MUy0xJAorCQkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xh
c3NbXVtdIiwgc291cmNlKTsKKwkJCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5
cGU7CisJCQljb21wb25lbnRUeXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOworCQkJYXNz
ZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkp
OyAvLyROT04tTkxTLTEkCisJCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJDbGFz
c1tdIiwgc291cmNlKTsKKwkJCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7
CisJCQljb21wb25lbnRUeXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOworCQkJYXNzZXJ0
VHJ1ZSgiaXMgYW4gYXJyYXkgdHlwZSIsICFjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAv
LyROT04tTkxTLTEkCisJCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJDbGFzcyIs
IHNvdXJjZSk7CisJCX0gZWxzZSB7CisJCQlUeXBlIGVsZW1lbnRUeXBlID0gYXJyYXlUeXBlLmdl
dEVsZW1lbnRUeXBlKCk7CisJCQljaGVja1NvdXJjZVJhbmdlKGVsZW1lbnRUeXBlLCAiQ2xhc3Mi
LCBzb3VyY2UpOworCQl9CiAJfQogCiAJLyoqCiAJICogaHR0cDovL2J1Z3MuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDI4MzkKKwkgKiBAZGVwcmVjYXRlZCB1c2VzIGRlcHJlY2F0
ZWQgbWV0aG9kcwogCSAqLwogCXB1YmxpYyB2b2lkIHRlc3QwNDk1KCkgdGhyb3dzIEphdmFNb2Rl
bEV4Y2VwdGlvbiB7CiAJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0
aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDA0OTUiLCAiQS5qYXZhIik7IC8vJE5P
Ti1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKQEAgLTI3
ODEsMTMgKzI4MDAsMTggQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiQ2xhc3NbXVtdIiwg
c291cmNlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlzQXJyYXlU
eXBlKCkpOyAvLyROT04tTkxTLTEkCiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBl
KSB0eXBlOwotCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlw
ZSgpOwotCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNB
cnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKLQkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRU
eXBlLCAiQ2xhc3NbXSIsIHNvdXJjZSk7Ci0JCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBv
bmVudFR5cGU7Ci0JCWNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgp
OwotCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJheSB0eXBlIiwgIWNvbXBvbmVudFR5cGUuaXNBcnJh
eVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKLQkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBl
LCAiQ2xhc3MiLCBzb3VyY2UpOworCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4
KSB7CisJCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgp
OworCQkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJy
YXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5
cGUsICJDbGFzc1tdIiwgc291cmNlKTsKKwkJCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBv
bmVudFR5cGU7CisJCQljb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUo
KTsKKwkJCWFzc2VydFRydWUoImlzIGFuIGFycmF5IHR5cGUiLCAhY29tcG9uZW50VHlwZS5pc0Fy
cmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRU
eXBlLCAiQ2xhc3MiLCBzb3VyY2UpOworCQl9IGVsc2UgeworCQkJVHlwZSBlbGVtZW50VHlwZSA9
IGFycmF5VHlwZS5nZXRFbGVtZW50VHlwZSgpOworCQkJY2hlY2tTb3VyY2VSYW5nZShlbGVtZW50
VHlwZSwgIkNsYXNzIiwgc291cmNlKTsKKwkJfQogCQlMaXN0IGZyYWdtZW50cyA9IGZpZWxkRGVj
bGFyYXRpb24uZnJhZ21lbnRzKCk7CiAJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDEsIGZy
YWdtZW50cy5zaXplKCkpOwogCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQg
PSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDApOwpAQCAtMjc5
Niw2ICsyODIwLDcgQEAKIAogCS8qKgogCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mv
c2hvd19idWcuY2dpP2lkPTQyODM5CisJICogQGRlcHJlY2F0ZWQgdXNlcyBkZXByZWNhdGVkIG1l
dGhvZHMKIAkgKi8KIAlwdWJsaWMgdm9pZCB0ZXN0MDQ5NigpIHRocm93cyBKYXZhTW9kZWxFeGNl
cHRpb24gewogCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVu
aXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwNDk2IiwgIkEuamF2YSIpOyAvLyROT04tTkxT
LTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCkBAIC0yODExLDI1
ICsyODM2LDMxIEBACiAJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIkNsYXNzW11bXVtdW10iLCBz
b3VyY2UpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNBcnJheVR5
cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUp
IHR5cGU7Ci0JCVR5cGUgY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBl
KCk7Ci0JCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlwZS5pc0Fy
cmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAotCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5
cGUsICJDbGFzc1tdW11bXSIsIHNvdXJjZSk7Ci0JCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNv
bXBvbmVudFR5cGU7Ci0JCWNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlw
ZSgpOwotCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNB
cnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKLQkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRU
eXBlLCAiQ2xhc3NbXVtdIiwgc291cmNlKTsKLQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgY29t
cG9uZW50VHlwZTsKLQkJY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBl
KCk7Ci0JCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlwZS5pc0Fy
cmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAotCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5
cGUsICJDbGFzc1tdIiwgc291cmNlKTsKLQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgY29tcG9u
ZW50VHlwZTsKLQkJY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7
Ci0JCWFzc2VydFRydWUoImlzIGFuIGFycmF5IHR5cGUiLCAhY29tcG9uZW50VHlwZS5pc0FycmF5
VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAotCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUs
ICJDbGFzcyIsIHNvdXJjZSk7CisJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgp
IHsKKwkJCVR5cGUgY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7
CisJCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJh
eVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlw
ZSwgIkNsYXNzW11bXVtdIiwgc291cmNlKTsKKwkJCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNv
bXBvbmVudFR5cGU7CisJCQljb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5
cGUoKTsKKwkJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlwZS5p
c0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25l
bnRUeXBlLCAiQ2xhc3NbXVtdIiwgc291cmNlKTsKKwkJCWFycmF5VHlwZSA9IChBcnJheVR5cGUp
IGNvbXBvbmVudFR5cGU7CisJCQljb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVu
dFR5cGUoKTsKKwkJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlw
ZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQkJY2hlY2tTb3VyY2VSYW5nZShjb21w
b25lbnRUeXBlLCAiQ2xhc3NbXSIsIHNvdXJjZSk7CisJCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBl
KSBjb21wb25lbnRUeXBlOworCQkJY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25l
bnRUeXBlKCk7CisJCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJheSB0eXBlIiwgIWNvbXBvbmVudFR5
cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJCWNoZWNrU291cmNlUmFuZ2UoY29t
cG9uZW50VHlwZSwgIkNsYXNzIiwgc291cmNlKTsKKwkJfSBlbHNlIHsKKwkJCVR5cGUgZWxlbWVu
dFR5cGUgPSBhcnJheVR5cGUuZ2V0RWxlbWVudFR5cGUoKTsKKwkJCWNoZWNrU291cmNlUmFuZ2Uo
ZWxlbWVudFR5cGUsICJDbGFzcyIsIHNvdXJjZSk7CisJCX0KIAl9CiAKIAkvKioKIAkgKiBodHRw
Oi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MjgzOQorCSAqIEBkZXBy
ZWNhdGVkIHVzZXMgZGVwcmVjYXRlZCBtZXRob2RzCiAJICovCiAJcHVibGljIHZvaWQgdGVzdDA0
OTcoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKIAkJSUNvbXBpbGF0aW9uVW5pdCBzb3Vy
Y2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDQ5
NyIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQg
Ly8kTk9OLU5MUy00JApAQCAtMjg0NSw5ICsyODc2LDkgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0
eXBlLCAiQ2xhc3NbXSIsIHNvdXJjZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBl
IiwgdHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQlBcnJheVR5cGUgYXJyYXlU
eXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJVHlwZSBjb21wb25lbnRUeXBlID0gYXJyYXlUeXBl
LmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNzZXJ0VHJ1ZSgiaXMgYW4gYXJyYXkgdHlwZSIsICFj
b21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCi0JCWNoZWNrU291cmNl
UmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzIiwgc291cmNlKTsKKwkJdHlwZSA9IHRoaXMuYXN0
LmFwaUxldmVsKCkgPCBBU1QuSkxTOCA/IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCkgOiBh
cnJheVR5cGUuZ2V0RWxlbWVudFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZSgiaXMgYW4gYXJyYXkgdHlw
ZSIsICF0eXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFu
Z2UodHlwZSwgIkNsYXNzIiwgc291cmNlKTsKIAl9CiAKIAkvKioKQEAgLTY1NTYsNyArNjU4Nyw3
IEBACiAJCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJib29sZWFuW10iLCBjb250ZW50cyk7CiAJ
CQlhc3NlcnRUcnVlKCJOb3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNBcnJheVR5cGUoKSk7CiAJ
CQlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJCVR5cGUgY29tcG9u
ZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCQlUeXBlIGNvbXBvbmVu
dFR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7CiAJCQlhc3NlcnRUcnVlKCJOb3QgYSBw
cmltaXRpdmUgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNQcmltaXRpdmVUeXBlKCkpOwogCQkJUHJp
bWl0aXZlVHlwZSBwcmltaXRpdmVUeXBlID0gKFByaW1pdGl2ZVR5cGUpIGNvbXBvbmVudFR5cGU7
CiAJCQlhc3NlcnRFcXVhbHMoIk5vdCBib29sZWFuIiwgUHJpbWl0aXZlVHlwZS5CT09MRUFOLCBw
cmltaXRpdmVUeXBlLmdldFByaW1pdGl2ZVR5cGVDb2RlKCkpOwpAQCAtOTUyOCw2ICs5NTU5LDcg
QEAKIAogCS8qKgogCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/
aWQ9MTk2NTE0CisJICogQGRlcHJlY2F0ZWQgdXNlcyBkZXByZWNhdGVkIG1ldGhvZHMKIAkgKi8K
IAlwdWJsaWMgdm9pZCB0ZXN0MDY4MygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewogCQlJ
Q29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRl
ciIgLCAic3JjIiwgInRlc3QwNjgzIiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5P
Ti1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCkBAIC05NTQ4LDE0ICs5NTgwLDE5
IEBACiAJCUFycmF5Q3JlYXRpb24gYXJyYXlDcmVhdGlvbiA9IChBcnJheUNyZWF0aW9uKSBub2Rl
OwogCQlBcnJheVR5cGUgYXJyYXlUeXBlID0gYXJyYXlDcmVhdGlvbi5nZXRUeXBlKCk7CiAJCWNo
ZWNrU291cmNlUmFuZ2UoYXJyYXlUeXBlLCAiU3RyaW5nWzBdW2JbMTBdXVtdIiwgc291cmNlVW5p
dC5nZXRTb3VyY2UoKSk7Ci0JCW5vZGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwot
CQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBhcnJheSB0eXBlIiwgQVNUTm9kZS5BUlJBWV9UWVBFLCBu
b2RlLmdldE5vZGVUeXBlKCkpOwotCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKW5vZGU7Ci0JCWNo
ZWNrU291cmNlUmFuZ2UoYXJyYXlUeXBlLCAiU3RyaW5nWzBdW2JbMTBdXSIsIHNvdXJjZVVuaXQu
Z2V0U291cmNlKCkpOwotCQlub2RlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJ
YXNzZXJ0RXF1YWxzKCJOb3QgYW4gYXJyYXkgdHlwZSIsIEFTVE5vZGUuQVJSQVlfVFlQRSwgbm9k
ZS5nZXROb2RlVHlwZSgpKTsKLQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSlub2RlOwotCQljaGVj
a1NvdXJjZVJhbmdlKGFycmF5VHlwZSwgIlN0cmluZ1swXSIsIHNvdXJjZVVuaXQuZ2V0U291cmNl
KCkpOworCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQlub2RlID0g
YXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGFuIGFy
cmF5IHR5cGUiLCBBU1ROb2RlLkFSUkFZX1RZUEUsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlh
cnJheVR5cGUgPSAoQXJyYXlUeXBlKW5vZGU7CisJCQljaGVja1NvdXJjZVJhbmdlKGFycmF5VHlw
ZSwgIlN0cmluZ1swXVtiWzEwXV0iLCBzb3VyY2VVbml0LmdldFNvdXJjZSgpKTsKKwkJCW5vZGUg
PSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4g
YXJyYXkgdHlwZSIsIEFTVE5vZGUuQVJSQVlfVFlQRSwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJ
CWFycmF5VHlwZSA9IChBcnJheVR5cGUpbm9kZTsKKwkJCWNoZWNrU291cmNlUmFuZ2UoYXJyYXlU
eXBlLCAiU3RyaW5nWzBdIiwgc291cmNlVW5pdC5nZXRTb3VyY2UoKSk7CisJCX0gZWxzZSB7CisJ
CQlub2RlID0gYXJyYXlUeXBlLmdldEVsZW1lbnRUeXBlKCk7CisJCQljaGVja1NvdXJjZVJhbmdl
KG5vZGUsICJTdHJpbmciLCBzb3VyY2VVbml0LmdldFNvdXJjZSgpKTsKKwkJfQogCX0KIAogCS8q
KgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RTdHJ1Y3R1cmFsUHJvcGVydHlUZXN0LmphdmEg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvZG9tL0FTVFN0cnVjdHVyYWxQcm9wZXJ0eVRlc3QuamF2YQppbmRleCAyYmY0Yjg3
Li5iMzkyODExIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFN0cnVjdHVyYWxQcm9wZXJ0eVRl
c3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFN0cnVjdHVyYWxQcm9wZXJ0eVRlc3QuamF2YQpA
QCAtMTcyLDcgKzE3Miw3IEBACiAJCQkJYnJlYWs7CiAJCQljYXNlIEFTVC5KTFM4IDoKIAkJCQlh
c3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiB2aXNpdGVkIG5vZGUgY2xhc3NlcyIsIDg0LCBu
b2RlQ2xhc3Nlcy5zaXplKCkpOwotCQkJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHZp
c2l0ZWQgcHJvcGVydGllcyIsIDEwNSwgdmlzaXRlZFByb3BlcnRpZXMuc2l6ZSgpKTsKKwkJCQlh
c3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiB2aXNpdGVkIHByb3BlcnRpZXMiLCAxMDYsIHZp
c2l0ZWRQcm9wZXJ0aWVzLnNpemUoKSk7CiAJCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIg
b2Ygc2ltcGxlIHByb3BlcnRpZXMiLCAyMSwgc2ltcGxlUHJvcGVydGllcy5zaXplKCkpOwogCQkJ
CWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIGNoaWxkIHByb3BlcnRpZXMiLCAxMTgsIGNo
aWxkUHJvcGVydGllcy5zaXplKCkpOwogCQkJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9m
IGNoaWxkIGxpc3QgcHJvcGVydGllcyIsIDY2LCBjaGlsZExpc3RQcm9wZXJ0aWVzLnNpemUoKSk7
CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUVGVz
dC5qYXZhCmluZGV4IDZlYjMwYTkuLmNjZmIzN2MgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNU
VGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUVGVzdC5qYXZhCkBAIC0yMDU3LDYgKzIwNTcs
NyBAQAogCQlhc3NlcnRUcnVlKFByaW1pdGl2ZVR5cGUudG9Db2RlKCJub3QtYS10eXBlIikgPT0g
bnVsbCk7IC8vJE5PTi1OTFMtMSQKIAl9CiAKKwkvKiogQGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVj
YXRlZCBjb2RlICovCiAJcHVibGljIHZvaWQgdGVzdEFycmF5VHlwZSgpIHsKIAkJU2ltcGxlTmFt
ZSB4MSA9IHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoIlN0cmluZyIpOyAvLyROT04tTkxTLTEkCiAJ
CVNpbXBsZVR5cGUgeDIgPSB0aGlzLmFzdC5uZXdTaW1wbGVUeXBlKHgxKTsKQEAgLTIwNjYsNyAr
MjA2NywxMSBAQAogCQlwcmV2aW91c0NvdW50ID0gdGhpcy5hc3QubW9kaWZpY2F0aW9uQ291bnQo
KTsKIAkJYXNzZXJ0VHJ1ZSh4LmdldEFTVCgpID09IHRoaXMuYXN0KTsKIAkJYXNzZXJ0VHJ1ZSh4
LmdldFBhcmVudCgpID09IG51bGwpOwotCQlhc3NlcnRUcnVlKHguZ2V0Q29tcG9uZW50VHlwZSgp
LmdldFBhcmVudCgpID09IHgpOworCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4
KSB7CisJCQlhc3NlcnRUcnVlKHguZ2V0Q29tcG9uZW50VHlwZSgpLmdldFBhcmVudCgpID09IHgp
OworCQl9IGVsc2UgeworCQkJYXNzZXJ0VHJ1ZSh4LmdldEVsZW1lbnRUeXBlKCkuZ2V0UGFyZW50
KCkgPT0geCk7CisJCX0KIAkJLy8gbWFrZSBzdXJlIHRoYXQgcmVhZGluZyBkaWQgbm90IGNoYW5n
ZSBtb2RpZmljYXRpb24gY291bnQKIAkJYXNzZXJ0VHJ1ZSh0aGlzLmFzdC5tb2RpZmljYXRpb25D
b3VudCgpID09IHByZXZpb3VzQ291bnQpOwogCQlhc3NlcnRUcnVlKCF4LmlzU2ltcGxlVHlwZSgp
KTsKQEAgLTIwODEsMzkgKzIwODYsNjkgQEAKIAkJYXNzZXJ0VHJ1ZSh4LmdldERpbWVuc2lvbnMo
KSA9PSAxKTsKIAkJYXNzZXJ0VHJ1ZSh4LmdldEVsZW1lbnRUeXBlKCkgPT0geDIpOwogCi0JCWdl
bmVyaWNQcm9wZXJ0eVRlc3QoeCwgbmV3IFByb3BlcnR5KCJDb21wb25lbnRUeXBlIiwgdHJ1ZSwg
VHlwZS5jbGFzcykgeyAvLyROT04tTkxTLTEkCi0JCQlwdWJsaWMgQVNUTm9kZSBzYW1wbGUoQVNU
IHRhcmdldEFzdCwgYm9vbGVhbiBwYXJlbnRlZCkgewotCQkJCVNpbXBsZVR5cGUgcmVzdWx0ID0g
dGFyZ2V0QXN0Lm5ld1NpbXBsZVR5cGUoCi0JCQkJCXRhcmdldEFzdC5uZXdTaW1wbGVOYW1lKCJh
IikpOyAvLyROT04tTkxTLTEkCi0JCQkJaWYgKHBhcmVudGVkKSB7Ci0JCQkJCXRhcmdldEFzdC5u
ZXdBcnJheVR5cGUocmVzdWx0KTsKKwkJaWYgKHRoaXMuYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxT
OCkgeworCQkJZ2VuZXJpY1Byb3BlcnR5VGVzdCh4LCBuZXcgUHJvcGVydHkoIkNvbXBvbmVudFR5
cGUiLCB0cnVlLCBUeXBlLmNsYXNzKSB7IC8vJE5PTi1OTFMtMSQKKwkJCQlwdWJsaWMgQVNUTm9k
ZSBzYW1wbGUoQVNUIHRhcmdldEFzdCwgYm9vbGVhbiBwYXJlbnRlZCkgeworCQkJCQlTaW1wbGVU
eXBlIHJlc3VsdCA9IHRhcmdldEFzdC5uZXdTaW1wbGVUeXBlKAorCQkJCQkJdGFyZ2V0QXN0Lm5l
d1NpbXBsZU5hbWUoImEiKSk7IC8vJE5PTi1OTFMtMSQKKwkJCQkJaWYgKHBhcmVudGVkKSB7CisJ
CQkJCQl0YXJnZXRBc3QubmV3QXJyYXlUeXBlKHJlc3VsdCk7CisJCQkJCX0KKwkJCQkJcmV0dXJu
IHJlc3VsdDsKIAkJCQl9Ci0JCQkJcmV0dXJuIHJlc3VsdDsKLQkJCX0KLQkJCXB1YmxpYyBBU1RO
b2RlIHdyYXAoKSB7Ci0JCQkJQXJyYXlUeXBlIHJlc3VsdCA9IEFTVFRlc3QudGhpcy5hc3QubmV3
QXJyYXlUeXBlKHgpOwotCQkJCXJldHVybiByZXN1bHQ7Ci0JCQl9Ci0JCQlwdWJsaWMgdm9pZCB1
bndyYXAoKSB7Ci0JCQkJQXJyYXlUeXBlIGEgPSAoQXJyYXlUeXBlKSB4LmdldFBhcmVudCgpOwot
CQkJCWEuc2V0Q29tcG9uZW50VHlwZShBU1RUZXN0LnRoaXMuYXN0Lm5ld1ByaW1pdGl2ZVR5cGUo
UHJpbWl0aXZlVHlwZS5JTlQpKTsKLQkJCX0KLQkJCXB1YmxpYyBBU1ROb2RlIGdldCgpIHsKLQkJ
CQlyZXR1cm4geC5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCQl9Ci0JCQlwdWJsaWMgdm9pZCBzZXQo
QVNUTm9kZSB2YWx1ZSkgewotCQkJCXguc2V0Q29tcG9uZW50VHlwZSgoVHlwZSkgdmFsdWUpOwot
CQkJfQotCQl9KTsKKwkJCQlwdWJsaWMgQVNUTm9kZSB3cmFwKCkgeworCQkJCQlBcnJheVR5cGUg
cmVzdWx0ID0gQVNUVGVzdC50aGlzLmFzdC5uZXdBcnJheVR5cGUoeCk7CisJCQkJCXJldHVybiBy
ZXN1bHQ7CisJCQkJfQorCQkJCXB1YmxpYyB2b2lkIHVud3JhcCgpIHsKKwkJCQkJQXJyYXlUeXBl
IGEgPSAoQXJyYXlUeXBlKSB4LmdldFBhcmVudCgpOworCQkJCQlhLnNldENvbXBvbmVudFR5cGUo
QVNUVGVzdC50aGlzLmFzdC5uZXdQcmltaXRpdmVUeXBlKFByaW1pdGl2ZVR5cGUuSU5UKSk7CisJ
CQkJfQorCQkJCXB1YmxpYyBBU1ROb2RlIGdldCgpIHsKKwkJCQkJcmV0dXJuIHguZ2V0Q29tcG9u
ZW50VHlwZSgpOworCQkJCX0KKwkJCQlwdWJsaWMgdm9pZCBzZXQoQVNUTm9kZSB2YWx1ZSkgewor
CQkJCQl4LnNldENvbXBvbmVudFR5cGUoKFR5cGUpIHZhbHVlKTsKKwkJCQl9CisJCQl9KTsKIAot
CQl4LnNldENvbXBvbmVudFR5cGUoCi0JCQl0aGlzLmFzdC5uZXdBcnJheVR5cGUodGhpcy5hc3Qu
bmV3UHJpbWl0aXZlVHlwZShQcmltaXRpdmVUeXBlLklOVCksIDQpKTsKKwkJCXguc2V0Q29tcG9u
ZW50VHlwZSgKKwkJCQl0aGlzLmFzdC5uZXdBcnJheVR5cGUodGhpcy5hc3QubmV3UHJpbWl0aXZl
VHlwZShQcmltaXRpdmVUeXBlLklOVCksIDQpKTsKKwkJCWFzc2VydFRydWUoeC5nZXREaW1lbnNp
b25zKCkgPT0gNSk7CisJCQlhc3NlcnRUcnVlKHguZ2V0RWxlbWVudFR5cGUoKS5pc1ByaW1pdGl2
ZVR5cGUoKSk7CisJCQlmaW5hbCBBcnJheVR5cGUgeDMgPSB0aGlzLmFzdC5uZXdBcnJheVR5cGUo
eCwgMik7CisJCQlhc3NlcnRUcnVlKHgzLmdldERpbWVuc2lvbnMoKSA9PSA3KTsKKwkJfSBlbHNl
IHsKKwkJCWdlbmVyaWNQcm9wZXJ0eVRlc3QoeCwgbmV3IFByb3BlcnR5KCJFbGVtZW50VHlwZSIs
IHRydWUsIFR5cGUuY2xhc3MpIHsgLy8kTk9OLU5MUy0xJAorCQkJCXB1YmxpYyBBU1ROb2RlIHNh
bXBsZShBU1QgdGFyZ2V0QXN0LCBib29sZWFuIHBhcmVudGVkKSB7CisJCQkJCVNpbXBsZVR5cGUg
cmVzdWx0ID0gdGFyZ2V0QXN0Lm5ld1NpbXBsZVR5cGUoCisJCQkJCQl0YXJnZXRBc3QubmV3U2lt
cGxlTmFtZSgiYSIpKTsgLy8kTk9OLU5MUy0xJAorCQkJCQlpZiAocGFyZW50ZWQpIHsKKwkJCQkJ
CXRhcmdldEFzdC5uZXdBcnJheVR5cGUocmVzdWx0KTsKKwkJCQkJfQorCQkJCQlyZXR1cm4gcmVz
dWx0OworCQkJCX0KKwkJCQlwdWJsaWMgQVNUTm9kZSB3cmFwKCkgeworCQkJCQlBcnJheVR5cGUg
cmVzdWx0ID0gQVNUVGVzdC50aGlzLmFzdC5uZXdBcnJheVR5cGUoeCwgNSk7CisJCQkJCXJldHVy
biByZXN1bHQ7CisJCQkJfQorCQkJCXB1YmxpYyB2b2lkIHVud3JhcCgpIHsKKwkJCQkJQXJyYXlU
eXBlIGEgPSAoQXJyYXlUeXBlKSB4LmdldFBhcmVudCgpOworCQkJCQlhLnNldEVsZW1lbnRUeXBl
KEFTVFRlc3QudGhpcy5hc3QubmV3UHJpbWl0aXZlVHlwZShQcmltaXRpdmVUeXBlLklOVCkpOwor
CQkJCX0KKwkJCQlwdWJsaWMgQVNUTm9kZSBnZXQoKSB7CisJCQkJCXJldHVybiB4LmdldEVsZW1l
bnRUeXBlKCk7CisJCQkJfQorCQkJCXB1YmxpYyB2b2lkIHNldChBU1ROb2RlIHZhbHVlKSB7CisJ
CQkJCXguc2V0RWxlbWVudFR5cGUoKFR5cGUpIHZhbHVlKTsKKwkJCQl9CisJCQl9KTsKIAotCQlh
c3NlcnRUcnVlKHguZ2V0RGltZW5zaW9ucygpID09IDUpOwotCQlhc3NlcnRUcnVlKHguZ2V0RWxl
bWVudFR5cGUoKS5pc1ByaW1pdGl2ZVR5cGUoKSk7Ci0JCWZpbmFsIEFycmF5VHlwZSB4MyA9IHRo
aXMuYXN0Lm5ld0FycmF5VHlwZSh4LCAyKTsKLQkJYXNzZXJ0VHJ1ZSh4My5nZXREaW1lbnNpb25z
KCkgPT0gNyk7Ci0JCQorCQkJeC5zZXRFbGVtZW50VHlwZSh0aGlzLmFzdC5uZXdQcmltaXRpdmVU
eXBlKFByaW1pdGl2ZVR5cGUuSU5UKSk7CisJCQlhc3NlcnRUcnVlKHguZ2V0RGltZW5zaW9ucygp
ID09IDEpOworCQkJYXNzZXJ0VHJ1ZSh4LmdldEVsZW1lbnRUeXBlKCkuaXNQcmltaXRpdmVUeXBl
KCkpOworCQl9CisKIAkJdHJ5IHsKIAkJCXRoaXMuYXN0Lm5ld0FycmF5VHlwZShudWxsLCAyKTsK
IAkJfSBjYXRjaChJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24gZSkgewpkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2RvbS9BU1RWaXNpdG9yVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
bW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RWaXNpdG9yVGVzdC5q
YXZhCmluZGV4IGE5NGNiMjQuLjA3NmQ0NmEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUVmlz
aXRvclRlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFZpc2l0b3JUZXN0LmphdmEKQEAgLTEx
NTcsNyArMTE1Nyw4IEBACiAJCXRoaXMuYi5zZXRMZW5ndGgoMCk7CiAJCXgxLmFjY2VwdCh2MSk7
CiAJCVN0cmluZyByZXN1bHQgPSB0aGlzLmIudG9TdHJpbmcoKTsKLQkJYXNzZXJ0VHJ1ZSgiWyh0
QVsodFBjaGFyY2hhcnRQKV10QSldIi5lcXVhbHMocmVzdWx0KSk7IC8vJE5PTi1OTFMtMSQKKwkJ
U3RyaW5nIGV4cGVjdGVkID0gdGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4ID8gIlsodEFb
KHRQY2hhcmNoYXJ0UClddEEpXSIgOiAiWyh0QVsodFBjaGFyY2hhcnRQKV1bKEBFREBFRClddEEp
XSI7CisJCWFzc2VydFRydWUoZXhwZWN0ZWQuZXF1YWxzKHJlc3VsdCkpOyAvLyROT04tTkxTLTEk
CiAJfQogCiAJLyoqIEBkZXByZWNhdGVkIHVzaW5nIGRlcHJlY2F0ZWQgY29kZSAqLwpAQCAtMTI1
NCw3ICsxMjU1LDggQEAKIAkJdGhpcy5iLnNldExlbmd0aCgwKTsKIAkJeDEuYWNjZXB0KHYxKTsK
IAkJU3RyaW5nIHJlc3VsdCA9IHRoaXMuYi50b1N0cmluZygpOwotCQlhc3NlcnRUcnVlKHJlc3Vs
dC5lcXVhbHMoIlsoZUFDIisiWyh0QSIrdGhpcy5UMVMrInRBKV0iK3RoaXMuRTFTK3RoaXMuRTJT
KyJbKGVBSWVBSSldZUFDKV0iKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04t
TkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJU3RyaW5nIGRpbSA9IHRoaXMuYXN0LmFwaUxldmVsKCkg
PCBBU1QuSkxTOCA/ICIiIDogIlsoQEVEQEVEKV0iOworCQlhc3NlcnRUcnVlKHJlc3VsdC5lcXVh
bHMoIlsoZUFDIisiWyh0QSIrdGhpcy5UMVMrIGRpbSArInRBKV0iK3RoaXMuRTFTK3RoaXMuRTJT
KyJbKGVBSWVBSSldZUFDKV0iKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04t
TkxTLTMkIC8vJE5PTi1OTFMtNCQKIAl9CiAJcHVibGljIHZvaWQgdGVzdEFycmF5SW5pdGlhbGl6
ZXIoKSB7CiAJCUFycmF5SW5pdGlhbGl6ZXIgeDEgPSB0aGlzLmFzdC5uZXdBcnJheUluaXRpYWxp
emVyKCk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL1R5cGVBbm5vdGF0aW9uc0NvbnZlcnRlclRl
c3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9kb20vVHlwZUFubm90YXRpb25zQ29udmVydGVyVGVzdC5qYXZhCmlu
ZGV4IDFjYTBjYjMuLmM3ZWZlYjAgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vVHlwZUFubm90YXRp
b25zQ29udmVydGVyVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1v
ZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vVHlwZUFubm90YXRpb25zQ29u
dmVydGVyVGVzdC5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioK
LSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
KyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
ICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWlu
ZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhl
IEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBk
aXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTE2Miw3ICsxNjIsNyBAQAogCQkJ
CSJjbGFzcyBaPFE+IHtcbiIgKyAKIAkJCQkiICAgIH1cbiIgKyAKIAkJCQkiICB9XG4iICsgCi0J
CQkJIiAgT2JqZWN0IG89KEBNYXJrZXIgWDxATWFya2VyIFN0cmluZz4uQE1hcmtlciBZPEBNYXJr
ZXIgSW50ZWdlcj4uQE1hcmtlciBaPEBNYXJrZXIgT2JqZWN0PkBNYXJrZXIgW11bXUBNYXJrZXIg
W11bXSludWxsO1xuIiArIAorCQkJCSIgIE9iamVjdCBvPShATWFya2VyIFg8QE1hcmtlciBTdHJp
bmc+LkBNYXJrZXIgWTxATWFya2VyIEludGVnZXI+LkBNYXJrZXIgWjxATWFya2VyIE9iamVjdD4g
QE1hcmtlciBbXSBbXSBATWFya2VyIFtdIFtdKW51bGw7XG4iICsgCiAJCQkJIiAgQGphdmEubGFu
Zy5hbm5vdGF0aW9uLlRhcmdldChqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZS5UWVBF
X1VTRSkgQGludGVyZmFjZSBNYXJrZXIge31cbiIgKyAKIAkJCQkifVxuIjsKIAkJYXNzZXJ0QVNU
Tm9kZUVxdWFscyhleHBlY3RlZE91dHB1dCwgbm9kZSk7CkBAIC0xOTEsNyArMTkxLDcgQEAKIAkJ
CQkiY2xhc3MgWjxRPiB7XG4iICsgCiAJCQkJIiAgICB9XG4iICsgCiAJCQkJIiAgfVxuIiArIAot
CQkJCSIgIE9iamVjdCBvPShATWFya2VyIFg8QE1hcmtlciBTdHJpbmc+LkBNYXJrZXIgWTxATWFy
a2VyIEludGVnZXI+LkBNYXJrZXIgWjxATWFya2VyIE9iamVjdD5bXUBNYXJrZXIgW11bXUBNYXJr
ZXIgW10pbnVsbDtcbiIgKyAKKwkJCQkiICBPYmplY3Qgbz0oQE1hcmtlciBYPEBNYXJrZXIgU3Ry
aW5nPi5ATWFya2VyIFk8QE1hcmtlciBJbnRlZ2VyPi5ATWFya2VyIFo8QE1hcmtlciBPYmplY3Q+
IFtdIEBNYXJrZXIgW10gW10gQE1hcmtlciBbXSludWxsO1xuIiArIAogCQkJCSIgIEBqYXZhLmxh
bmcuYW5ub3RhdGlvbi5UYXJnZXQoamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGUuVFlQ
RV9VU0UpIEBpbnRlcmZhY2UgTWFya2VyIHt9XG4iICsgCiAJCQkJIn1cbiI7CiAJCWFzc2VydEFT
VE5vZGVFcXVhbHMoZXhwZWN0ZWRPdXRwdXQsIG5vZGUpOwpAQCAtMjIwLDcgKzIyMCw3IEBACiAJ
CQkJImNsYXNzIFo8UT4ge1xuIiArIAogCQkJCSIgICAgfVxuIiArIAogCQkJCSIgIH1cbiIgKyAK
LQkJCQkiICBpbnRbXVtdW11bXSBvPShAT25lIGludFtdQFR3byBbXVtdQFRocmVlIFtdKW51bGw7
XG4iICsgCisJCQkJIiAgaW50IFtdIFtdIFtdIFtdIG89KEBPbmUgaW50IFtdIEBUd28gW10gW10g
QFRocmVlIFtdKW51bGw7XG4iICsgCiAJCQkJIiAgQGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdl
dChqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZS5UWVBFX1VTRSkgQGludGVyZmFjZSBN
YXJrZXIge31cbiIgKyAKIAkJCQkifVxuIjsKIAkJYXNzZXJ0QVNUTm9kZUVxdWFscyhleHBlY3Rl
ZE91dHB1dCwgbm9kZSk7CkBAIC0yNDksNyArMjQ5LDcgQEAKIAkJCQkiY2xhc3MgWjxRPiB7XG4i
ICsgCiAJCQkJIiAgICB9XG4iICsgCiAJCQkJIiAgfVxuIiArIAotCQkJCSIgIFN0cmluZ1tdW11b
XVtdIG89KEBPbmUgU3RyaW5nW11AVHdvIFtdW11AVGhyZWUgW10pbnVsbDtcbiIgKyAKKwkJCQki
ICBTdHJpbmcgW10gW10gW10gW10gbz0oQE9uZSBTdHJpbmcgW10gQFR3byBbXSBbXSBAVGhyZWUg
W10pbnVsbDtcbiIgKyAKIAkJCQkiICBAamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0KGphdmEu
bGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlLlRZUEVfVVNFKSBAaW50ZXJmYWNlIE1hcmtlciB7
fVxuIiArIAogCQkJCSJ9XG4iOwogCQlhc3NlcnRBU1ROb2RlRXF1YWxzKGV4cGVjdGVkT3V0cHV0
LCBub2RlKTsKQEAgLTI3OCw3ICsyNzgsNyBAQAogCQkJCSJjbGFzcyBaPFE+IHtcbiIgKyAKIAkJ
CQkiICAgIH1cbiIgKyAKIAkJCQkiICB9XG4iICsgCi0JCQkJIiAgT2JqZWN0IG89KEBPbmUgWDxT
dHJpbmc+W11AVHdvIFtdW11AVGhyZWUgW10pbnVsbDtcbiIgKyAKKwkJCQkiICBPYmplY3Qgbz0o
QE9uZSBYPFN0cmluZz4gW10gQFR3byBbXSBbXSBAVGhyZWUgW10pbnVsbDtcbiIgKyAKIAkJCQki
ICBAamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0KGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1l
bnRUeXBlLlRZUEVfVVNFKSBAaW50ZXJmYWNlIE1hcmtlciB7fVxuIiArIAogCQkJCSJ9XG4iOwog
CQlhc3NlcnRBU1ROb2RlRXF1YWxzKGV4cGVjdGVkT3V0cHV0LCBub2RlKTsKZGlmZiAtLWdpdCBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nRXhwcmVzc2lvbnNUZXN0Lmph
dmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ0V4cHJlc3Npb25zVGVz
dC5qYXZhCmluZGV4IDBhZmY0ZjguLjllOGVkZWQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRl
L2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nRXhwcmVzc2lvbnNUZXN0LmphdmEKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdFeHByZXNzaW9uc1Rlc3QuamF2YQpAQCAt
MjYzLDIzICsyNjMsMjUgQEAKIAkJCW1lbWJlclZhbHVlUGFpci5zZXROYW1lKGFzdC5uZXdTaW1w
bGVOYW1lKCJ2IikpOwogCQkJbWVtYmVyVmFsdWVQYWlyLnNldFZhbHVlKGFzdC5uZXdOdW1iZXJM
aXRlcmFsKCI5OSIpKTsKIAkJCWFubm90YXRpb25DLnZhbHVlcygpLmFkZChtZW1iZXJWYWx1ZVBh
aXIpOwotCQkJYXJyYXlUeXBlLmFubm90YXRpb25zKCkuYWRkKGFubm90YXRpb25DKTsKKwkJCUV4
dHJhRGltZW5zaW9uIGRpbTAgPSBhcnJheVR5cGUuZ2V0RGltZW5zaW9uTm8oMCk7CisJCQlkaW0w
LmFubm90YXRpb25zKCkuYWRkKGFubm90YXRpb25DKTsKIAkJCQotCQkJYXJyYXlUeXBlPSBhc3Qu
bmV3QXJyYXlUeXBlKGFycmF5VHlwZSk7CiAJCQlTaW5nbGVNZW1iZXJBbm5vdGF0aW9uIGFubm90
YXRpb25CPSBhc3QubmV3U2luZ2xlTWVtYmVyQW5ub3RhdGlvbigpOwogCQkJYW5ub3RhdGlvbkIu
c2V0VHlwZU5hbWUoYXN0Lm5ld1NpbXBsZU5hbWUoIkIiKSk7CiAJCQlhbm5vdGF0aW9uQi5zZXRW
YWx1ZShhc3QubmV3TnVtYmVyTGl0ZXJhbCgiMCIpKTsKLQkJCWFycmF5VHlwZS5hbm5vdGF0aW9u
cygpLmFkZChhbm5vdGF0aW9uQik7CisJCQlFeHRyYURpbWVuc2lvbiBkaW0xID0gYXN0Lm5ld0V4
dHJhRGltZW5zaW9uKCk7CisJCQlkaW0xLmFubm90YXRpb25zKCkuYWRkKGFubm90YXRpb25CKTsK
KwkJCWFycmF5VHlwZS5kaW1lbnNpb25zKCkuYWRkKDAsIGRpbTEpOwogCQkJCi0JCQlhcnJheVR5
cGU9IGFzdC5uZXdBcnJheVR5cGUoYXJyYXlUeXBlKTsKIAkJCU1hcmtlckFubm90YXRpb24gYW5u
b3RhdGlvbkE9IGFzdC5uZXdNYXJrZXJBbm5vdGF0aW9uKCk7CiAJCQlhbm5vdGF0aW9uQS5zZXRU
eXBlTmFtZShhc3QubmV3U2ltcGxlTmFtZSgiQSIpKTsKLQkJCWFycmF5VHlwZS5hbm5vdGF0aW9u
cygpLmFkZChhbm5vdGF0aW9uQSk7Ci0JCQkKLQkJCWFycmF5Q3JlYXRpb24uc2V0VHlwZShhcnJh
eVR5cGUpOworCQkJRXh0cmFEaW1lbnNpb24gZGltMiA9IGFzdC5uZXdFeHRyYURpbWVuc2lvbigp
OworCQkJZGltMi5hbm5vdGF0aW9ucygpLmFkZChhbm5vdGF0aW9uQSk7CisJCQlhcnJheVR5cGUu
ZGltZW5zaW9ucygpLmFkZCgwLCBkaW0yKTsKIAkJCQogCQkJYXJyYXlDcmVhdGlvbi5kaW1lbnNp
b25zKCkuYWRkKGFzdC5uZXdOdW1iZXJMaXRlcmFsKCIxIikpOwogCQkJYXJyYXlDcmVhdGlvbi5k
aW1lbnNpb25zKCkuYWRkKGFzdC5uZXdOdW1iZXJMaXRlcmFsKCIyIikpOworCQkJYXJyYXlDcmVh
dGlvbi5zZXRUeXBlKGFycmF5VHlwZSk7CiAJCQkKIAkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUo
aW52b2NhdGlvbiwgTWV0aG9kSW52b2NhdGlvbi5BUkdVTUVOVFNfUFJPUEVSVFkpLmluc2VydExh
c3QoYXJyYXlDcmVhdGlvbiwgbnVsbCk7CiAJCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRl
L2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0aG9kRGVjbFRlc3QuamF2YSBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdy
aXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0aG9kRGVjbFRlc3QuamF2YQppbmRleCA3YTIx
MjI1Li41ZGEwMjYyIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2Rl
bC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJl
d3JpdGluZ01ldGhvZERlY2xUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmlu
Zy9BU1RSZXdyaXRpbmdNZXRob2REZWNsVGVzdC5qYXZhCkBAIC0xMTEsNyArMTExLDcgQEAKIAkJ
CQlsaXN0UmV3cml0ZS5yZW1vdmUoZXh0cmFEaW1lbnNpb24sIG51bGwpOwogCQkJfQogCQkJZm9y
IChpbnQgaT0gMDsgaSA8IGV4dHJhRGltZW5zaW9uczsgaSsrKSB7Ci0JCQkJbGlzdFJld3JpdGUu
aW5zZXJ0TGFzdChtZXRob2REZWNsLmdldEFTVCgpLm5ld0V4dHJhRGltZW5zaW9uKCksIG51bGwp
OworCQkJCWxpc3RSZXdyaXRlLmluc2VydEZpcnN0KG1ldGhvZERlY2wuZ2V0QVNUKCkubmV3RXh0
cmFEaW1lbnNpb24oKSwgbnVsbCk7CiAJCQl9CiAJCX0KIAl9CmRpZmYgLS1naXQgYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
cmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ1N0YXRlbWVudHNUZXN0LmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ1N0YXRlbWVudHNUZXN0LmphdmEKaW5k
ZXggMDgyZmE1Ny4uM2EyMjQ0NyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmlu
Zy9BU1RSZXdyaXRpbmdTdGF0ZW1lbnRzVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rl
c2NyaWJpbmcvQVNUUmV3cml0aW5nU3RhdGVtZW50c1Rlc3QuamF2YQpAQCAtNTk0MiwyNCArNTk0
MiwyNSBAQAogCQkJTGlzdFJld3JpdGUgbGlzdFJld3JpdGU9IHJld3JpdGUuZ2V0TGlzdFJld3Jp
dGUoZnJhZ21lbnQsIFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5FWFRSQV9ESU1FTlNJT05T
Ml9QUk9QRVJUWSk7CiAJCQlFeHRyYURpbWVuc2lvbiBkaW09IGFzdC5uZXdFeHRyYURpbWVuc2lv
bigpOwogCQkJTWFya2VyQW5ub3RhdGlvbiBtYXJrZXJBbm5vdGF0aW9uOwotCQkJbGlzdFJld3Jp
dGUuaW5zZXJ0QXQoZGltLCAwLCBudWxsKTsKKwkJCWxpc3RSZXdyaXRlLmluc2VydEZpcnN0KGRp
bSwgbnVsbCk7CiAKIAkJCUFycmF5VHlwZSBjcmVhdGlvblR5cGUgPSBjcmVhdGlvbi5nZXRUeXBl
KCk7Ci0JCQlBcnJheVR5cGUgbmV3QXJyYXlUeXBlID0gYXN0Lm5ld0FycmF5VHlwZSgoQXJyYXlU
eXBlKSBBU1ROb2RlLmNvcHlTdWJ0cmVlKGFzdCwgY3JlYXRpb25UeXBlKSk7Ci0JCQluZXdBcnJh
eVR5cGUgPSBhc3QubmV3QXJyYXlUeXBlKG5ld0FycmF5VHlwZSk7Ci0JCQlyZXdyaXRlLnNldChj
cmVhdGlvbiwgQXJyYXlDcmVhdGlvbi5UWVBFX1BST1BFUlRZLCBuZXdBcnJheVR5cGUsIG51bGwp
OwotCi0JCQlsaXN0UmV3cml0ZT0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShuZXdBcnJheVR5cGUs
IEFycmF5VHlwZS5BTk5PVEFUSU9OU19QUk9QRVJUWSk7CisJCQlBcnJheVR5cGUgbmV3QXJyYXlU
eXBlID0gKEFycmF5VHlwZSkgQVNUTm9kZS5jb3B5U3VidHJlZShhc3QsIGNyZWF0aW9uVHlwZSk7
CisJCQluZXdBcnJheVR5cGUuZGltZW5zaW9ucygpLmFkZChhc3QubmV3RXh0cmFEaW1lbnNpb24o
KSk7CisJCQkKKwkJCUV4dHJhRGltZW5zaW9uIGRpbTAgPSBhc3QubmV3RXh0cmFEaW1lbnNpb24o
KTsKIAkJCW1hcmtlckFubm90YXRpb249IGFzdC5uZXdNYXJrZXJBbm5vdGF0aW9uKCk7CiAJCQlt
YXJrZXJBbm5vdGF0aW9uLnNldFR5cGVOYW1lKGFzdC5uZXdTaW1wbGVOYW1lKCJBbm5vdDMiKSk7
Ci0JCQlsaXN0UmV3cml0ZS5pbnNlcnRBdChtYXJrZXJBbm5vdGF0aW9uLCAwLCBudWxsKTsKLQkJ
CW5ld0FycmF5VHlwZS5hbm5vdGF0aW9ucygpLmFkZChtYXJrZXJBbm5vdGF0aW9uKTsKKwkJCWRp
bTAuYW5ub3RhdGlvbnMoKS5hZGQobWFya2VyQW5ub3RhdGlvbik7CiAJCQltYXJrZXJBbm5vdGF0
aW9uPSBhc3QubmV3TWFya2VyQW5ub3RhdGlvbigpOwogCQkJbWFya2VyQW5ub3RhdGlvbi5zZXRU
eXBlTmFtZShhc3QubmV3U2ltcGxlTmFtZSgiQW5ub3QyIikpOwotCQkJbGlzdFJld3JpdGUuaW5z
ZXJ0QXQobWFya2VyQW5ub3RhdGlvbiwgMSwgbnVsbCk7CisJCQlkaW0wLmFubm90YXRpb25zKCku
YWRkKG1hcmtlckFubm90YXRpb24pOwogCQkJbWFya2VyQW5ub3RhdGlvbj0gYXN0Lm5ld01hcmtl
ckFubm90YXRpb24oKTsKIAkJCW1hcmtlckFubm90YXRpb24uc2V0VHlwZU5hbWUoYXN0Lm5ld1Np
bXBsZU5hbWUoIkFubm90MSIpKTsKLQkJCWxpc3RSZXdyaXRlLmluc2VydEF0KG1hcmtlckFubm90
YXRpb24sIDIsIG51bGwpOworCQkJZGltMC5hbm5vdGF0aW9ucygpLmFkZChtYXJrZXJBbm5vdGF0
aW9uKTsKKwkJCW5ld0FycmF5VHlwZS5kaW1lbnNpb25zKCkuYWRkKGRpbTApOworCQkJcmV3cml0
ZS5zZXQoY3JlYXRpb24sIEFycmF5Q3JlYXRpb24uVFlQRV9QUk9QRVJUWSwgbmV3QXJyYXlUeXBl
LCBudWxsKTsKKwogCQl9CiAJCXsKIAkJCXN0YXRlbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9u
U3RhdGVtZW50KSBzdGF0ZW1lbnRzLmdldCgxKTsKQEAgLTU5NzgsNDMgKzU5NzksNDQgQEAKIAkJ
CUV4cHJlc3Npb24gZXhwID0gKEV4cHJlc3Npb24pIGV4cHJlc3Npb25zLmdldCgxKTsKIAkJCWxp
c3RSZXdyaXRlLnJlbW92ZShleHAsIG51bGwpOwogCi0JCQlsaXN0UmV3cml0ZSA9IHJld3JpdGUu
Z2V0TGlzdFJld3JpdGUoY3JlYXRpb25UeXBlLCBBcnJheVR5cGUuQU5OT1RBVElPTlNfUFJPUEVS
VFkpOwotCQkJTWFya2VyQW5ub3RhdGlvbiBhbm5vdGF0aW9uID0gKE1hcmtlckFubm90YXRpb24p
IGNyZWF0aW9uVHlwZS5hbm5vdGF0aW9ucygpLmdldCgwKTsKKwkJCUV4dHJhRGltZW5zaW9uIGRp
bSA9IGNyZWF0aW9uVHlwZS5nZXREaW1lbnNpb25ObygyKTsKKwkJCWxpc3RSZXdyaXRlID0gcmV3
cml0ZS5nZXRMaXN0UmV3cml0ZShkaW0sIEV4dHJhRGltZW5zaW9uLkFOTk9UQVRJT05TX1BST1BF
UlRZKTsKKwkJCU1hcmtlckFubm90YXRpb24gYW5ub3RhdGlvbiA9IChNYXJrZXJBbm5vdGF0aW9u
KSBkaW0uYW5ub3RhdGlvbnMoKS5nZXQoMCk7CiAJCQlsaXN0UmV3cml0ZS5yZW1vdmUoYW5ub3Rh
dGlvbiwgbnVsbCk7CiAKLQkJCWNyZWF0aW9uVHlwZSA9IChBcnJheVR5cGUpIGNyZWF0aW9uVHlw
ZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCQlsaXN0UmV3cml0ZSA9IHJld3JpdGUuZ2V0TGlzdFJl
d3JpdGUoY3JlYXRpb25UeXBlLCBBcnJheVR5cGUuQU5OT1RBVElPTlNfUFJPUEVSVFkpOwotCQkJ
YW5ub3RhdGlvbiA9IChNYXJrZXJBbm5vdGF0aW9uKSBjcmVhdGlvblR5cGUuYW5ub3RhdGlvbnMo
KS5nZXQoMSk7CisJCQlkaW0gPSBjcmVhdGlvblR5cGUuZ2V0RGltZW5zaW9uTm8oMSk7CisJCQls
aXN0UmV3cml0ZSA9IHJld3JpdGUuZ2V0TGlzdFJld3JpdGUoZGltLCBFeHRyYURpbWVuc2lvbi5B
Tk5PVEFUSU9OU19QUk9QRVJUWSk7CisJCQlhbm5vdGF0aW9uID0gKE1hcmtlckFubm90YXRpb24p
IGRpbS5hbm5vdGF0aW9ucygpLmdldCgxKTsKIAkJCWxpc3RSZXdyaXRlLnJlbW92ZShhbm5vdGF0
aW9uLCBudWxsKTsKIAotCQkJY3JlYXRpb25UeXBlID0gKEFycmF5VHlwZSkgY3JlYXRpb25UeXBl
LmdldENvbXBvbmVudFR5cGUoKTsKLQkJCWxpc3RSZXdyaXRlID0gcmV3cml0ZS5nZXRMaXN0UmV3
cml0ZShjcmVhdGlvblR5cGUsIEFycmF5VHlwZS5BTk5PVEFUSU9OU19QUk9QRVJUWSk7Ci0JCQlh
bm5vdGF0aW9uID0gKE1hcmtlckFubm90YXRpb24pIGNyZWF0aW9uVHlwZS5hbm5vdGF0aW9ucygp
LmdldCgxKTsKKwkJCWRpbSA9IGNyZWF0aW9uVHlwZS5nZXREaW1lbnNpb25ObygwKTsKKwkJCWxp
c3RSZXdyaXRlID0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShkaW0sIEV4dHJhRGltZW5zaW9uLkFO
Tk9UQVRJT05TX1BST1BFUlRZKTsKKwkJCWFubm90YXRpb24gPSAoTWFya2VyQW5ub3RhdGlvbikg
ZGltLmFubm90YXRpb25zKCkuZ2V0KDEpOwogCQkJbGlzdFJld3JpdGUucmVtb3ZlKGFubm90YXRp
b24sIG51bGwpOwogCiAJCQlmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQp
IGZyYWdtZW50cy5nZXQoMSk7CiAKIAkJCWNyZWF0aW9uID0gKEFycmF5Q3JlYXRpb24pIGZyYWdt
ZW50LmdldEluaXRpYWxpemVyKCk7CiAJCQljcmVhdGlvblR5cGUgPSBjcmVhdGlvbi5nZXRUeXBl
KCk7Ci0KLQkJCWxpc3RSZXdyaXRlID0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShjcmVhdGlvblR5
cGUsIEFycmF5VHlwZS5BTk5PVEFUSU9OU19QUk9QRVJUWSk7Ci0JCQlhbm5vdGF0aW9uID0gKE1h
cmtlckFubm90YXRpb24pIGNyZWF0aW9uVHlwZS5hbm5vdGF0aW9ucygpLmdldCgwKTsKKwkJCWRp
bSA9IGNyZWF0aW9uVHlwZS5nZXREaW1lbnNpb25ObygyKTsKKwkJCWxpc3RSZXdyaXRlID0gcmV3
cml0ZS5nZXRMaXN0UmV3cml0ZShkaW0sIEV4dHJhRGltZW5zaW9uLkFOTk9UQVRJT05TX1BST1BF
UlRZKTsKKwkJCWFubm90YXRpb24gPSAoTWFya2VyQW5ub3RhdGlvbikgZGltLmFubm90YXRpb25z
KCkuZ2V0KDEpOwogCQkJbGlzdFJld3JpdGUucmVtb3ZlKGFubm90YXRpb24sIG51bGwpOwotCQkJ
YW5ub3RhdGlvbiA9IChNYXJrZXJBbm5vdGF0aW9uKSBjcmVhdGlvblR5cGUuYW5ub3RhdGlvbnMo
KS5nZXQoMSk7CisJCQlhbm5vdGF0aW9uID0gKE1hcmtlckFubm90YXRpb24pIGRpbS5hbm5vdGF0
aW9ucygpLmdldCgwKTsKIAkJCWxpc3RSZXdyaXRlLnJlbW92ZShhbm5vdGF0aW9uLCBudWxsKTsK
IAotCQkJY3JlYXRpb25UeXBlID0gKEFycmF5VHlwZSkgY3JlYXRpb25UeXBlLmdldENvbXBvbmVu
dFR5cGUoKTsKLQkJCWxpc3RSZXdyaXRlID0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShjcmVhdGlv
blR5cGUsIEFycmF5VHlwZS5BTk5PVEFUSU9OU19QUk9QRVJUWSk7Ci0JCQlhbm5vdGF0aW9uID0g
KE1hcmtlckFubm90YXRpb24pIGNyZWF0aW9uVHlwZS5hbm5vdGF0aW9ucygpLmdldCgwKTsKKwkJ
CWRpbSA9IGNyZWF0aW9uVHlwZS5nZXREaW1lbnNpb25ObygxKTsKKwkJCWxpc3RSZXdyaXRlID0g
cmV3cml0ZS5nZXRMaXN0UmV3cml0ZShkaW0sIEV4dHJhRGltZW5zaW9uLkFOTk9UQVRJT05TX1BS
T1BFUlRZKTsKKwkJCWFubm90YXRpb24gPSAoTWFya2VyQW5ub3RhdGlvbikgZGltLmFubm90YXRp
b25zKCkuZ2V0KDEpOwogCQkJbGlzdFJld3JpdGUucmVtb3ZlKGFubm90YXRpb24sIG51bGwpOwot
CQkJYW5ub3RhdGlvbiA9IChNYXJrZXJBbm5vdGF0aW9uKSBjcmVhdGlvblR5cGUuYW5ub3RhdGlv
bnMoKS5nZXQoMSk7CisJCQlhbm5vdGF0aW9uID0gKE1hcmtlckFubm90YXRpb24pIGRpbS5hbm5v
dGF0aW9ucygpLmdldCgwKTsKIAkJCWxpc3RSZXdyaXRlLnJlbW92ZShhbm5vdGF0aW9uLCBudWxs
KTsKIAotCQkJY3JlYXRpb25UeXBlID0gKEFycmF5VHlwZSkgY3JlYXRpb25UeXBlLmdldENvbXBv
bmVudFR5cGUoKTsKLQkJCWxpc3RSZXdyaXRlID0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShjcmVh
dGlvblR5cGUsIEFycmF5VHlwZS5BTk5PVEFUSU9OU19QUk9QRVJUWSk7Ci0JCQlhbm5vdGF0aW9u
ID0gKE1hcmtlckFubm90YXRpb24pIGNyZWF0aW9uVHlwZS5hbm5vdGF0aW9ucygpLmdldCgwKTsK
KwkJCWRpbSA9IGNyZWF0aW9uVHlwZS5nZXREaW1lbnNpb25ObygwKTsKKwkJCWxpc3RSZXdyaXRl
ID0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShkaW0sIEV4dHJhRGltZW5zaW9uLkFOTk9UQVRJT05T
X1BST1BFUlRZKTsKKwkJCWFubm90YXRpb24gPSAoTWFya2VyQW5ub3RhdGlvbikgZGltLmFubm90
YXRpb25zKCkuZ2V0KDEpOwogCQkJbGlzdFJld3JpdGUucmVtb3ZlKGFubm90YXRpb24sIG51bGwp
OwotCQkJYW5ub3RhdGlvbiA9IChNYXJrZXJBbm5vdGF0aW9uKSBjcmVhdGlvblR5cGUuYW5ub3Rh
dGlvbnMoKS5nZXQoMSk7CisJCQlhbm5vdGF0aW9uID0gKE1hcmtlckFubm90YXRpb24pIGRpbS5h
bm5vdGF0aW9ucygpLmdldCgwKTsKIAkJCWxpc3RSZXdyaXRlLnJlbW92ZShhbm5vdGF0aW9uLCBu
dWxsKTsKIAogCQkJZXhwcmVzc2lvbnMgPSBjcmVhdGlvbi5kaW1lbnNpb25zKCk7CkBAIC02MDM1
LDggKzYwMzcsOCBAQAogCQlidWYuYXBwZW5kKCJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24u
RWxlbWVudFR5cGU7XG4iKTsKIAkJYnVmLmFwcGVuZCgicHVibGljIGNsYXNzIEUge1xuIik7CiAJ
CWJ1Zi5hcHBlbmQoIiAgICBwdWJsaWMgdm9pZCBmb28oKSB7XG4iKTsKLQkJYnVmLmFwcGVuZCgi
ICAgIAlpbnQgW10gaSBbXSBAQW5ub3QxIEBBbm5vdDIgW10gQEFubm90MSBAQW5ub3QzIFtdID0g
bmV3IGludCBAQW5ub3QxIEBBbm5vdDIgIFsyXSBAQW5ub3QyIEBBbm5vdDMgW3NpemUoKV0gQEFu
bm90MiBAQW5ub3QxIFtdW10gQEFubm90MyBAQW5ub3QyIEBBbm5vdDFbXTtcbiIpOwotCQlidWYu
YXBwZW5kKCIgICAgCWludCBbXSBqIFtdW10gPSBuZXcgaW50IEBBbm5vdDEgWzJdIEBBbm5vdDIg
W10gQEFubm90MyBbXSwgayBbXVtdID0gbmV3IGludFsyXVsxMF1bc2l6ZSgpXTtcbiIpOworCQli
dWYuYXBwZW5kKCIgICAgCWludCBbXSBpIFtdIEBBbm5vdDEgQEFubm90MiBbXSBAQW5ub3QxIEBB
bm5vdDMgW10gPSBuZXcgaW50IEBBbm5vdDEgQEFubm90MiAgWzJdIEBBbm5vdDIgQEFubm90MyBb
c2l6ZSgpXSBAQW5ub3QyIEBBbm5vdDEgW11bXUBBbm5vdDMgQEFubm90MiBAQW5ub3QxIFtdO1xu
Iik7CisJCWJ1Zi5hcHBlbmQoIiAgICAJaW50IFtdIGogW11bXSA9IG5ldyBpbnQgQEFubm90MiBb
Ml0gQEFubm90MiBbXSBAQW5ub3QxIFtdLCBrIFtdW10gPSBuZXcgaW50IFsyXSBbMTBdIFtzaXpl
KCldO1xuIik7CiAJCWJ1Zi5hcHBlbmQoIiAgICB9XG4iKTsKIAkJYnVmLmFwcGVuZCgiICAgIHB1
YmxpYyBpbnQgc2l6ZSgpIHsgcmV0dXJuIDI7IH1cbiIpOwogCQlidWYuYXBwZW5kKCJ9XG4iKTsK
QEAgLTYwODYsMTAgKzYwODgsMTAgQEAKIAkJCUFycmF5Q3JlYXRpb24gY3JlYXRpb24gPSAoQXJy
YXlDcmVhdGlvbikgZnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKIAogCQkJQXJyYXlUeXBlIGFy
cmF5VHlwZSA9IGNyZWF0aW9uLmdldFR5cGUoKTsKLQkJCWFycmF5VHlwZSA9IChBcnJheVR5cGUp
IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCQlMaXN0UmV3cml0ZSBsaXN0UmV3cml0
ZT0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShhcnJheVR5cGUsIEFycmF5VHlwZS5BTk5PVEFUSU9O
U19QUk9QRVJUWSk7Ci0JCQlsaXN0UmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpYXJyYXlUeXBlLmFu
bm90YXRpb25zKCkuZ2V0KDApLCBudWxsKTsKLQkJCWxpc3RSZXdyaXRlLnJlbW92ZSgoQVNUTm9k
ZSlhcnJheVR5cGUuYW5ub3RhdGlvbnMoKS5nZXQoMSksIG51bGwpOworCQkJRXh0cmFEaW1lbnNp
b24gZGltID0gYXJyYXlUeXBlLmdldERpbWVuc2lvbk5vKDEpOworCQkJTGlzdFJld3JpdGUgbGlz
dFJld3JpdGU9IHJld3JpdGUuZ2V0TGlzdFJld3JpdGUoZGltLCBFeHRyYURpbWVuc2lvbi5BTk5P
VEFUSU9OU19QUk9QRVJUWSk7CisJCQlsaXN0UmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpZGltLmFu
bm90YXRpb25zKCkuZ2V0KDApLCBudWxsKTsKKwkJCWxpc3RSZXdyaXRlLnJlbW92ZSgoQVNUTm9k
ZSlkaW0uYW5ub3RhdGlvbnMoKS5nZXQoMSksIG51bGwpOwogCQkJcmV3cml0ZS5zZXQoY3JlYXRp
b24sIEFycmF5Q3JlYXRpb24uVFlQRV9QUk9QRVJUWSwgYXJyYXlUeXBlLCBudWxsKTsKIAkJfQog
CQl7CkBAIC02MTAxLDE2ICs2MTAzLDEyIEBACiAJCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCB0
eXBlIiwgQVNUTm9kZS5BUlJBWV9UWVBFLCB0eXBlLmdldE5vZGVUeXBlKCkpOwogCQkJQXJyYXlD
cmVhdGlvbiBjcmVhdGlvbiA9IChBcnJheUNyZWF0aW9uKSBmcmFnbWVudC5nZXRJbml0aWFsaXpl
cigpOwogCQkJQXJyYXlUeXBlIGNyZWF0aW9uVHlwZSA9IGNyZWF0aW9uLmdldFR5cGUoKTsKLQot
CQkJQXJyYXlUeXBlIG5ld0FycmF5VHlwZSA9IChBcnJheVR5cGUpIGNyZWF0aW9uVHlwZS5nZXRD
b21wb25lbnRUeXBlKCk7Ci0JCQlyZXdyaXRlLnNldChjcmVhdGlvbiwgQXJyYXlDcmVhdGlvbi5U
WVBFX1BST1BFUlRZLCBuZXdBcnJheVR5cGUsIG51bGwpOwotCisJCQlyZXdyaXRlLnJlbW92ZShj
cmVhdGlvblR5cGUuZ2V0RGltZW5zaW9uTm8oMCksIG51bGwpOwogCQkJZnJhZ21lbnQgPSAoVmFy
aWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDEpOwogCQkJY3JlYXRpb24g
PSAoQXJyYXlDcmVhdGlvbikgZnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKIAkJCWNyZWF0aW9u
VHlwZSA9IGNyZWF0aW9uLmdldFR5cGUoKTsKIAotCQkJbmV3QXJyYXlUeXBlID0gKEFycmF5VHlw
ZSkgY3JlYXRpb25UeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJCXJld3JpdGUuc2V0KGNyZWF0
aW9uLCBBcnJheUNyZWF0aW9uLlRZUEVfUFJPUEVSVFksIG5ld0FycmF5VHlwZSwgbnVsbCk7CisJ
CQlyZXdyaXRlLnJlbW92ZShjcmVhdGlvblR5cGUuZ2V0RGltZW5zaW9uTm8oMCksIG51bGwpOwog
CQl9CiAJCS8vIEdldCBuZXcgY29kZQogCQlTdHJpbmcgcHJldmlldz0gZXZhbHVhdGVSZXdyaXRl
KGN1LCByZXdyaXRlKTsKQEAgLTYxMjAsNyArNjExOCw3IEBACiAJCWJ1Zi5hcHBlbmQoImltcG9y
dCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZTtcbiIpOwogCQlidWYuYXBwZW5kKCJw
dWJsaWMgY2xhc3MgRSB7XG4iKTsKIAkJYnVmLmFwcGVuZCgiICAgIHB1YmxpYyB2b2lkIGZvbygp
IHtcbiIpOwotCQlidWYuYXBwZW5kKCIgICAgCWludCBbXSBpIFtdW10gPSBuZXcgaW50IEBBbm5v
dDEgQEFubm90MiAgWzJdW3NpemUobmV3IGludFtdW117fSldO1xuIik7CisJCWJ1Zi5hcHBlbmQo
IiAgICAJaW50IFtdIGkgW11bXSA9IG5ldyBpbnQgQEFubm90MSBAQW5ub3QyICBbMl0gIFtzaXpl
KG5ldyBpbnRbXVtde30pXSBbXTtcbiIpOwogCQlidWYuYXBwZW5kKCIgICAgCWludCBbXSBqIFtd
W10gPSBuZXcgaW50IEBBbm5vdDEgQEFubm90MiBbMl0gQEFubm90MiBAQW5ub3QzIFtzaXplKG5l
dyBpbnRbXXt9KV0sIGsgW11bXSA9IG5ldyBpbnQgQEFubm90MSBAQW5ub3QyIFsyXSBAQW5ub3Qy
IEBBbm5vdDMgWzEwXTtcbiIpOwogCQlidWYuYXBwZW5kKCIgICAgfVxuIik7CiAJCWJ1Zi5hcHBl
bmQoIiAgICBwdWJsaWMgaW50IHNpemUoT2JqZWN0IG9iaikgeyByZXR1cm4gMjsgfVxuIik7CkBA
IC02MTM3LDMgKzYxMzUsNCBAQAogCiAKIAorCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVC5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1QuamF2YQppbmRleCA3OGY4
OWNmLi4wN2IwMzlmIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2NvcmUvZG9tL0FTVC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Rv
bS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNULmphdmEKQEAgLTk5OSw2ICs5OTksMTMgQEAK
IAl9CiAKIAkvKioKKwkgKiBBIGxvY2FsIG1ldGhvZCB0byB3b3JrYXJvdW5kIGNhbGxpbmcgZGVw
cmVjYXRlZCBtZXRob2QgaW4gYXJyYXkgdHlwZS4KKwkgKi8KKwlwcml2YXRlIHZvaWQgc2V0QXJy
YXlDb21wb25lbnRUeXBlKEFycmF5VHlwZSBhcnJheVR5cGUsIFR5cGUgdHlwZSkgeworCQlhcnJh
eVR5cGUuc2V0Q29tcG9uZW50VHlwZSh0eXBlKTsKKwl9CisKKwkvKioKIAkgKiBDcmVhdGVzIGFu
ZCByZXR1cm5zIGEgbmV3IHVucGFyZW50ZWQgYW5ub3RhdGlvbiB0eXBlIGRlY2xhcmF0aW9uCiAJ
ICogbm9kZSBmb3IgYW4gdW5zcGVjaWZpZWQsIGJ1dCBsZWdhbCwgbmFtZTsgbm8gbW9kaWZpZXJz
OyBubyBqYXZhZG9jOwogCSAqIGFuZCBhbiBlbXB0eSBsaXN0IG9mIG1lbWJlciBkZWNsYXJhdGlv
bnMuCkBAIC0xMTA5LDE5ICsxMTE2LDMxIEBACiAKIAkvKioKIAkgKiBDcmVhdGVzIGFuZCByZXR1
cm5zIGEgbmV3IHVucGFyZW50ZWQgYXJyYXkgdHlwZSBub2RlIHdpdGggdGhlIGdpdmVuCi0JICog
Y29tcG9uZW50IHR5cGUsIHdoaWNoIG1heSBiZSBhbm90aGVyIGFycmF5IHR5cGUuCisJICogY29t
cG9uZW50IHR5cGUsIHdoaWNoIG1heSBiZSBhbm90aGVyIGFycmF5IHR5cGUgZm9yIGxldmVscyBs
ZXNzIHRoYW4gSkxTOC4KKwkgKiBGb3IgSkxTOCBhbmQgYWJvdmUgdGhpcyB0eXBlIGhhcyB0byBi
ZSBhbiBhbm5vdGF0YWJsZSB0eXBlLgogCSAqCi0JICogQHBhcmFtIGNvbXBvbmVudFR5cGUgdGhl
IGNvbXBvbmVudCB0eXBlIChwb3NzaWJseSBhbm90aGVyIGFycmF5IHR5cGUpCisJICogQHBhcmFt
IHR5cGUgdGhlIGNvbXBvbmVudCB0eXBlIChwb3NzaWJseSBhbm90aGVyIGFycmF5IHR5cGUpIGZv
ciBsZXZlbCA8IEpMUzgsIAorCSAqIGEgYW5ub3RhdGFibGUgdHlwZSBmb3IgSkxTOCBhbmQgYWJv
dmUKIAkgKiBAcmV0dXJuIGEgbmV3IHVucGFyZW50ZWQgYXJyYXkgdHlwZSBub2RlCiAJICogQGV4
Y2VwdGlvbiBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24gaWY6CiAJICogPHVsPgogCSAqIDxsaT50
aGUgbm9kZSBiZWxvbmdzIHRvIGEgZGlmZmVyZW50IEFTVDwvbGk+CiAJICogPGxpPnRoZSBub2Rl
IGFscmVhZHkgaGFzIGEgcGFyZW50PC9saT4KKwkgKiA8bGk+IGxldmVsID49IEpMUzggYW5kIHR5
cGUgbm90IGFuIGFycmF5IHR5cGU8L2xpPgogCSAqIDwvdWw+CiAJICovCi0JcHVibGljIEFycmF5
VHlwZSBuZXdBcnJheVR5cGUoVHlwZSBjb21wb25lbnRUeXBlKSB7Ci0JCUFycmF5VHlwZSByZXN1
bHQgPSBuZXcgQXJyYXlUeXBlKHRoaXMpOwotCQlyZXN1bHQuc2V0Q29tcG9uZW50VHlwZShjb21w
b25lbnRUeXBlKTsKKwlwdWJsaWMgQXJyYXlUeXBlIG5ld0FycmF5VHlwZShUeXBlIHR5cGUpIHsK
KwkJQXJyYXlUeXBlIHJlc3VsdDsKKwkJaWYgKHRoaXMuYXBpTGV2ZWwgPCBBU1QuSkxTOCkgewor
CQkJcmVzdWx0ID0gbmV3IEFycmF5VHlwZSh0aGlzKTsKKwkJCXNldEFycmF5Q29tcG9uZW50VHlw
ZShyZXN1bHQsIHR5cGUpOworCQkJcmV0dXJuIHJlc3VsdDsKKwkJfQorCQlpZiAodHlwZS5pc0Fy
cmF5VHlwZSgpKSB7CisJCQl0aHJvdyBuZXcgSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uKCk7CisJ
CX0KKwkJcmVzdWx0ID0gbmV3IEFycmF5VHlwZSh0aGlzKTsKKwkJcmVzdWx0LnNldEVsZW1lbnRU
eXBlKHR5cGUpOwogCQlyZXR1cm4gcmVzdWx0OwogCX0KIApAQCAtMTEzMyw3ICsxMTUyLDcgQEAK
IAkgKiBlbGVtZW50IHR5cGUgb2YgdGhlIHJlc3VsdCB3aWxsIG5vdCBiZSB0aGUgc2FtZSBhcyB3
aGF0IHdhcyBwYXNzZWQgaW4uCiAJICogPC9wPgogCSAqCi0JICogQHBhcmFtIGVsZW1lbnRUeXBl
IHRoZSBlbGVtZW50IHR5cGUgKGNhbiBiZSBhbiBhcnJheSB0eXBlKQorCSAqIEBwYXJhbSBlbGVt
ZW50VHlwZSB0aGUgZWxlbWVudCB0eXBlIChjYW4gYmUgYW4gYXJyYXkgdHlwZSBmb3IgSkxTOC4g
Rm9yID5KTFM4IHRoaXMgc2hvdWxkIGJlIGFuIGFubm90YXRhYmxlIHR5cGUpCiAJICogQHBhcmFt
IGRpbWVuc2lvbnMgdGhlIG51bWJlciBvZiBkaW1lbnNpb25zLCBhIHBvc2l0aXZlIG51bWJlcgog
CSAqIEByZXR1cm4gYSBuZXcgdW5wYXJlbnRlZCBhcnJheSB0eXBlIG5vZGUKIAkgKiBAZXhjZXB0
aW9uIElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbiBpZjoKQEAgLTExNDMsNiArMTE2Miw3IEBACiAJ
ICogPGxpPnRoZSBlbGVtZW50IHR5cGUgaXMgbnVsbDwvbGk+CiAJICogPGxpPnRoZSBudW1iZXIg
b2YgZGltZW5zaW9ucyBpcyBsb3dlciB0aGFuIDE8L2xpPgogCSAqIDxsaT50aGUgbnVtYmVyIG9m
IGRpbWVuc2lvbnMgaXMgZ3JlYXRlciB0aGFuIDEwMDA8L2xpPgorCSAqIDxsaT5mb3IgbGV2ZWxz
IGZyb20gSkxTOCBhbmQgbGF0ZXIsIGlmIHRoZSBlbGVtZW50IHR5cGUgaXMgbm90IGFuIGFycmF5
IHR5cGUgPC9saT4KIAkgKiA8L3VsPgogCSAqLwogCXB1YmxpYyBBcnJheVR5cGUgbmV3QXJyYXlU
eXBlKFR5cGUgZWxlbWVudFR5cGUsIGludCBkaW1lbnNpb25zKSB7CkBAIC0xMTUwLDEzICsxMTcw
LDI3IEBACiAJCQl0aHJvdyBuZXcgSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uKCk7CiAJCX0KIAkJ
aWYgKGRpbWVuc2lvbnMgPCAxIHx8IGRpbWVuc2lvbnMgPiAxMDAwKSB7Ci0JCQkvLyB3ZSB3b3Vs
ZCBibG93IG91ciBzdGFja3MgYW55d2F5IHdpdGggYSAxMDAwLUQgYXJyYXkKKwkJCS8vIHdlIHdv
dWxkYmxvdyBvdXIgc3RhY2tzIGFueXdheSB3aXRoIGEgMTAwMC1EIGFycmF5CiAJCQl0aHJvdyBu
ZXcgSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uKCk7CiAJCX0KLQkJQXJyYXlUeXBlIHJlc3VsdCA9
IG5ldyBBcnJheVR5cGUodGhpcyk7Ci0JCXJlc3VsdC5zZXRDb21wb25lbnRUeXBlKGVsZW1lbnRU
eXBlKTsKLQkJZm9yIChpbnQgaSA9IDI7IGkgPD0gZGltZW5zaW9uczsgaSsrKSB7Ci0JCQlyZXN1
bHQgPSBuZXdBcnJheVR5cGUocmVzdWx0KTsKKwkJQXJyYXlUeXBlIHJlc3VsdDsKKwkJaWYgKHRo
aXMuYXBpTGV2ZWwgPCBBU1QuSkxTOCkgeworCQkJcmVzdWx0ID0gbmV3IEFycmF5VHlwZSh0aGlz
KTsKKwkJCXNldEFycmF5Q29tcG9uZW50VHlwZShyZXN1bHQsIGVsZW1lbnRUeXBlKTsKKwkJCWZv
ciAoaW50IGkgPSAyOyBpIDw9IGRpbWVuc2lvbnM7IGkrKykgeworCQkJCXJlc3VsdCA9IG5ld0Fy
cmF5VHlwZShyZXN1bHQpOworCQkJfQorCQkJcmV0dXJuIHJlc3VsdDsKKwkJfQorCQkvL2xldmVs
ID49IEpMUzgKKwkJaWYgKGVsZW1lbnRUeXBlLmlzQXJyYXlUeXBlKCkpIHsKKwkJCXRocm93IG5l
dyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oKTsKKwkJfQorCQlyZXN1bHQgPSBuZXcgQXJyYXlU
eXBlKHRoaXMpOworCQlyZXN1bHQuc2V0RWxlbWVudFR5cGUoZWxlbWVudFR5cGUpOworCQkvLyBp
bmRleCBzdGFydGluZyBmcm9tIDEgc2luY2UgdGhlcmUgaXMgYSBkaW1lbnNpb24gYWxyZWFkeSBh
dmFpbGFibGUgYnkgZGVmYXVsdC4KKwkJZm9yIChpbnQgaSA9IDE7IGkgPCBkaW1lbnNpb25zOyAr
K2kpIHsKKwkJCXJlc3VsdC5kaW1lbnNpb25zKCkuYWRkKG5ldyBFeHRyYURpbWVuc2lvbih0aGlz
KSk7CiAJCX0KIAkJcmV0dXJuIHJlc3VsdDsKIApkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIuamF2YSBiL29y
Zy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUQ29udmVy
dGVyLmphdmEKaW5kZXggNzlmOTMzMS4uZDU0YTEwYSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIuamF2YQor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FT
VENvbnZlcnRlci5qYXZhCkBAIC00NjUsMTQgKzQ2NSwyNiBAQAogCiAJcHJvdGVjdGVkIHZvaWQg
Y29tcGxldGVSZWNvcmQoQXJyYXlUeXBlIGFycmF5VHlwZSwgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmFzdC5BU1ROb2RlIGFzdE5vZGUpIHsKIAkJQXJyYXlUeXBlIGFycmF5ID0g
YXJyYXlUeXBlOworCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA+PSBBU1QuSkxTOCkgeworCQkJ
dGhpcy5yZWNvcmROb2RlcyhhcnJheVR5cGUsIGFzdE5vZGUpOworCQkJdGhpcy5yZWNvcmROb2Rl
cyhhcnJheVR5cGUuZ2V0RWxlbWVudFR5cGUoKSwgYXN0Tm9kZSk7CisJCQlyZXR1cm47CisJCX0K
IAkJaW50IGRpbWVuc2lvbnMgPSBhcnJheS5nZXREaW1lbnNpb25zKCk7CiAJCWZvciAoaW50IGkg
PSAwOyBpIDwgZGltZW5zaW9uczsgaSsrKSB7Ci0JCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJh
eS5nZXRDb21wb25lbnRUeXBlKCk7CisJCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRU
eXBlKGFycmF5KTsKIAkJCXRoaXMucmVjb3JkTm9kZXMoY29tcG9uZW50VHlwZSwgYXN0Tm9kZSk7
CiAJCQlpZiAoY29tcG9uZW50VHlwZS5pc0FycmF5VHlwZSgpKSB7CiAJCQkJYXJyYXkgPSAoQXJy
YXlUeXBlKSBjb21wb25lbnRUeXBlOwogCQkJfQogCQl9CisJfQorCQorCS8qKgorCSAqIEBkZXBy
ZWNhdGVkCisJICovCisJcHJpdmF0ZSBUeXBlIGNvbXBvbmVudFR5cGUoQXJyYXlUeXBlIGFycmF5
KSB7CisJCXJldHVybiBhcnJheS5nZXRDb21wb25lbnRUeXBlKCk7CiAJfQogCiAJcHVibGljIEFT
VE5vZGUgY29udmVydChib29sZWFuIGlzSW50ZXJmYWNlLCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJu
YWwuY29tcGlsZXIuYXN0LkFic3RyYWN0TWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbGFyYXRp
b24pIHsKQEAgLTkwOSwxMiArOTIxLDE4IEBACiAJCWlmIChpc1ZhckFyZ3MpIHsKIAkJCXNldFR5
cGVGb3JTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uKHZhcmlhYmxlRGVjbCwgdHlwZSwgZXh0cmFE
aW1lbnNpb25zICsgMSk7CiAJCQkvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93
X2J1Zy5jZ2k/aWQ9MzkxODk4Ci0JCQlpZiAodHlwZS5pc0Fubm90YXRhYmxlKCkpIHsKLQkJCQlB
bm5vdGF0YWJsZVR5cGUgYW5ub3RhdGFibGVUeXBlID0gKEFubm90YXRhYmxlVHlwZSkgdHlwZTsK
LQkJCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA+PSBBU1QuSkxTOCAmJiAhYW5ub3RhdGFibGVU
eXBlLmFubm90YXRpb25zKCkuaXNFbXB0eSgpKSB7Ci0JCQkJCUl0ZXJhdG9yIGFubm90YXRpb25z
ID0gYW5ub3RhdGFibGVUeXBlLmFubm90YXRpb25zKCkuaXRlcmF0b3IoKTsKLQkJCQkJd2hpbGUg
KGFubm90YXRpb25zLmhhc05leHQoKSkgewotCQkJCQkJQW5ub3RhdGlvbiBhbm5vdGF0aW9uID0g
KEFubm90YXRpb24pIGFubm90YXRpb25zLm5leHQoKTsKKwkJCWlmICh0aGlzLmFzdC5hcGlMZXZl
bCgpID49IEFTVC5KTFM4KSB7CisJCQkJTGlzdCBhbm5vdGF0aW9ucyAgPSBudWxsOworCQkJCWlm
ICh0eXBlLmlzQW5ub3RhdGFibGUoKSkgeworCQkJCQlhbm5vdGF0aW9ucyA9ICgoQW5ub3RhdGFi
bGVUeXBlKSB0eXBlKS5hbm5vdGF0aW9ucygpOworCQkJCX0gZWxzZSBpZiAodHlwZS5pc0FycmF5
VHlwZSgpKSB7CisJCQkJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwor
CQkJCQlhbm5vdGF0aW9ucyA9IGFycmF5VHlwZS5kaW1lbnNpb25zKCkuaXNFbXB0eSgpID8gbnVs
bCA6ICgoYXJyYXlUeXBlLmdldERpbWVuc2lvbk5vKDApKS5hbm5vdGF0aW9ucygpKTsKKwkJCQl9
CisJCQkJaWYgKGFubm90YXRpb25zICE9IG51bGwpIHsKKwkJCQkJSXRlcmF0b3IgaXRlciA9IGFu
bm90YXRpb25zLml0ZXJhdG9yKCk7CisJCQkJCXdoaWxlIChpdGVyLmhhc05leHQoKSkgeworCQkJ
CQkJQW5ub3RhdGlvbiBhbm5vdGF0aW9uID0gKEFubm90YXRpb24pIGl0ZXIubmV4dCgpOwogCQkJ
CQkJYW5ub3RhdGlvbi5zZXRQYXJlbnQobnVsbCwgbnVsbCk7CiAJCQkJCQl2YXJpYWJsZURlY2wu
dmFyYXJnc0Fubm90YXRpb25zKCkuYWRkKGFubm90YXRpb24pOwogCQkJCQl9CkBAIC05NzksNiAr
OTk3LDcgQEAKIAkJCXJlY29yZE5vZGVzKHR5cGUsIGV4cHJlc3Npb24udHlwZSk7CiAJCX0KIAkJ
QXJyYXlUeXBlIGFycmF5VHlwZSA9IG51bGw7CisJCWludCBzYXZlZFN0YXJ0ID0gLTE7CiAJCWlm
ICh0eXBlLmlzQXJyYXlUeXBlKCkpIHsKIAkJCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7
CiAJCX0gZWxzZSB7CkBAIC05ODksMTUgKzEwMDgsMzQgQEAKIAkJCWludCBzdGFydCA9IHR5cGUu
Z2V0U3RhcnRQb3NpdGlvbigpOwogCQkJaW50IGVuZCA9IHR5cGUuZ2V0U3RhcnRQb3NpdGlvbigp
ICsgdHlwZS5nZXRMZW5ndGgoKTsKIAkJCWludCBwcmV2aW91c1NlYXJjaFN0YXJ0ID0gZW5kIC0g
MTsKLQkJCUFycmF5VHlwZSBjb21wb25lbnRUeXBlID0gKEFycmF5VHlwZSkgdHlwZS5nZXRQYXJl
bnQoKTsKLQkJCWZvciAoaW50IGkgPSAwOyBpIDwgZGltZW5zaW9uc0xlbmd0aDsgaSsrKSB7Ci0J
CQkJcHJldmlvdXNTZWFyY2hTdGFydCA9IHJldHJpZXZlUmlnaHRCcmFja2V0UG9zaXRpb24ocHJl
dmlvdXNTZWFyY2hTdGFydCArIDEsIHRoaXMuY29tcGlsYXRpb25Vbml0U291cmNlTGVuZ3RoKTsK
LQkJCQljb21wb25lbnRUeXBlLnNldFNvdXJjZVJhbmdlKHN0YXJ0LCBwcmV2aW91c1NlYXJjaFN0
YXJ0IC0gc3RhcnQgKyAxKTsKLQkJCQljb21wb25lbnRUeXBlID0gKEFycmF5VHlwZSkgY29tcG9u
ZW50VHlwZS5nZXRQYXJlbnQoKTsKKwkJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCgpIDwgQVNULkpM
UzgpIHsKKwkJCQlBcnJheVR5cGUgY29tcG9uZW50VHlwZSA9IChBcnJheVR5cGUpIHR5cGUuZ2V0
UGFyZW50KCk7CisJCQkJZm9yIChpbnQgaSA9IDA7IGkgPCBkaW1lbnNpb25zTGVuZ3RoOyBpKysp
IHsKKwkJCQkJcHJldmlvdXNTZWFyY2hTdGFydCA9IHJldHJpZXZlUmlnaHRCcmFja2V0UG9zaXRp
b24ocHJldmlvdXNTZWFyY2hTdGFydCArIDEsIHRoaXMuY29tcGlsYXRpb25Vbml0U291cmNlTGVu
Z3RoKTsKKwkJCQkJY29tcG9uZW50VHlwZS5zZXRTb3VyY2VSYW5nZShzdGFydCwgcHJldmlvdXNT
ZWFyY2hTdGFydCAtIHN0YXJ0ICsgMSk7CisJCQkJCWNvbXBvbmVudFR5cGUgPSAoQXJyYXlUeXBl
KSBjb21wb25lbnRUeXBlLmdldFBhcmVudCgpOworCQkJCX0KKwkJCX0gZWxzZSB7CisJCQkJc2F2
ZWRTdGFydCA9IHN0YXJ0OworCQkJCXN0YXJ0ID0gdHlwZS5nZXRTdGFydFBvc2l0aW9uKCkgKyB0
eXBlLmdldExlbmd0aCgpOworCQkJCWVuZCA9IHN0YXJ0IC0gMTsKKworCQkJCWZvciAoaW50IGkg
PSAwOyBpIDw9IGRpbWVuc2lvbnNMZW5ndGggLSAxOyBpKyspIHsKKwkJCQkJRXh0cmFEaW1lbnNp
b24gY3VycmVudERpbWVuc2lvbiA9IChFeHRyYURpbWVuc2lvbikgYXJyYXlUeXBlLmRpbWVuc2lv
bnMoKS5nZXQoaSk7CisJCQkJCWVuZCA9IHJldHJpZXZlUmlnaHRCcmFja2V0UG9zaXRpb24oc3Rh
cnQsIHRoaXMuY29tcGlsYXRpb25Vbml0U291cmNlTGVuZ3RoKTsKKwkJCQkJY3VycmVudERpbWVu
c2lvbi5zZXRTb3VyY2VSYW5nZShzdGFydCwgZW5kIC0gc3RhcnQgKyAxKTsKKwkJCQkJc3RhcnQg
PSBlbmQgKyAxOworCQkJCX0KKworCQkJCWFycmF5VHlwZS5zZXRTb3VyY2VSYW5nZShzYXZlZFN0
YXJ0LCBlbmQgLSBzYXZlZFN0YXJ0ICsgMSk7CiAJCQl9CiAJCX0KIAkJaWYgKGV4cHJlc3Npb24u
YW5ub3RhdGlvbnNPbkRpbWVuc2lvbnMgIT0gbnVsbCkgewotCQkJYW5ub3RhdGVUeXBlKGFycmF5
VHlwZSwgZXhwcmVzc2lvbi5hbm5vdGF0aW9uc09uRGltZW5zaW9ucyk7CisJCQlpZiAodGhpcy5h
c3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQkJYXJyYXlUeXBlLnNldEZsYWdzKGFycmF5
VHlwZS5nZXRGbGFncygpIHwgQVNUTm9kZS5NQUxGT1JNRUQpOworCQkJfSBlbHNlIHsKKwkJCQlz
ZXRBcnJheVR5cGVBbm5vdGF0aW9uc0FuZFNvdXJjZShhcnJheVR5cGUsIGV4cHJlc3Npb24uYW5u
b3RhdGlvbnNPbkRpbWVuc2lvbnMpOworCQkJfQogCQl9CiAJCWFycmF5Q3JlYXRpb24uc2V0VHlw
ZShhcnJheVR5cGUpOwogCQlpZiAodGhpcy5yZXNvbHZlQmluZGluZ3MpIHsKQEAgLTMxMjEsNiAr
MzE1OSw0MSBAQAogCQlyZXR1cm4gcGFja2FnZURlY2xhcmF0aW9uOwogCX0KIAorCXByaXZhdGUg
QXJyYXlUeXBlIGNvbnZlcnRUb0FycmF5KFR5cGVSZWZlcmVuY2UgdHlwZSwgVHlwZSBzdWJUeXBl
LCBpbnQgc291cmNlU3RhcnQsIGludCBsZW5ndGgsIGludCBub0RpbWVuc2lvbnMpIHsKKwkJQXJy
YXlUeXBlIGFycmF5VHlwZSA9IHRoaXMuYXN0Lm5ld0FycmF5VHlwZShzdWJUeXBlLCBub0RpbWVu
c2lvbnMpOworCQlhcnJheVR5cGUuc2V0U291cmNlUmFuZ2Uoc291cmNlU3RhcnQsIGxlbmd0aCk7
CisJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQW5ub3RhdGlvbltdW10g
YW5ub3RhdGlvbnNPbkRpbXMgPSB0eXBlLmdldEFubm90YXRpb25zT25EaW1lbnNpb25zKCk7CisJ
CWlmICh0aGlzLmFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsKKwkJCWlmIChhbm5vdGF0aW9u
c09uRGltcyAhPSBudWxsKSB7CisJCQkJYXJyYXlUeXBlLnNldEZsYWdzKGFycmF5VHlwZS5nZXRG
bGFncygpIHwgQVNUTm9kZS5NQUxGT1JNRUQpOworCQkJfQorCQkJQXJyYXlUeXBlIHN1YmFycmF5
VHlwZSA9IGFycmF5VHlwZTsKKwkJCWludCBpbmRleCA9IG5vRGltZW5zaW9ucyAtIDE7CisJCQl3
aGlsZSAoaW5kZXggPiAwKSB7CisJCQkJc3ViYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgY29tcG9u
ZW50VHlwZShzdWJhcnJheVR5cGUpOworCQkJCWludCBlbmQgPSByZXRyaWV2ZVByb3BlclJpZ2h0
QnJhY2tldFBvc2l0aW9uKGluZGV4LCBzb3VyY2VTdGFydCk7CisJCQkJc3ViYXJyYXlUeXBlLnNl
dFNvdXJjZVJhbmdlKHNvdXJjZVN0YXJ0LCBlbmQgLSBzb3VyY2VTdGFydCArIDEpOworCQkJCWlu
ZGV4LS07CisJCQl9CisJCQlyZXR1cm4gYXJyYXlUeXBlOworCQl9CisKKwkJaWYgKGFubm90YXRp
b25zT25EaW1zICE9IG51bGwpIHsKKwkJCXNldEFycmF5VHlwZUFubm90YXRpb25zQW5kU291cmNl
KGFycmF5VHlwZSwgYW5ub3RhdGlvbnNPbkRpbXMpOworCQl9IGVsc2UgeworCQkJaW50IHN0YXJ0
ID0gc3ViVHlwZS5nZXRTdGFydFBvc2l0aW9uKCkgKyBzdWJUeXBlLmdldExlbmd0aCgpOworCQkJ
aW50IGVuZCA9IGFycmF5VHlwZS5nZXRTdGFydFBvc2l0aW9uKCkgKyBhcnJheVR5cGUuZ2V0TGVu
Z3RoKCk7CisJCQlpbnQgbGFzdEluZGV4ID0gbm9EaW1lbnNpb25zIC0gMTsKKworCQkJZm9yIChp
bnQgaSA9IDA7IGkgPD0gbGFzdEluZGV4OyBpKyspIHsKKwkJCQlFeHRyYURpbWVuc2lvbiBjdXJy
ZW50RGltZW5zaW9uID0gKEV4dHJhRGltZW5zaW9uKSBhcnJheVR5cGUuZGltZW5zaW9ucygpLmdl
dChpKTsKKwkJCQlyZXRyaWV2ZURpbWVuc2lvbkFuZFNldFBvc2l0aW9ucyhzdGFydCwgZW5kLCBj
dXJyZW50RGltZW5zaW9uKTsKKwkJCQlzdGFydCA9IGN1cnJlbnREaW1lbnNpb24uZ2V0U3RhcnRQ
b3NpdGlvbigpICsgY3VycmVudERpbWVuc2lvbi5nZXRMZW5ndGgoKTsKKwkJCX0KKwkJfQorCQly
ZXR1cm4gYXJyYXlUeXBlOworCX0KKwogCXByaXZhdGUgRW51bURlY2xhcmF0aW9uIGNvbnZlcnRU
b0VudW1EZWNsYXJhdGlvbihvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LlR5
cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24pIHsKIAkJY2hlY2tDYW5jZWxlZCgpOwogCQkv
LyBlbnVtIGRlY2xhcmF0aW9uIGNhbm5vdCBiZSBidWlsdCBpZiB0aGUgc291cmNlIGlzIG5vdCA+
PSAxLjUsIHNpbmNlIGVudW0gaXMgdGhlbiBzZWVuIGFzIGFuIGlkZW50aWZpZXIKQEAgLTMzNTEs
NiArMzQyNCwyOCBAQAogCQl9CiAJfQogCisJcHJpdmF0ZSB2b2lkIHNldEFycmF5VHlwZUFubm90
YXRpb25zQW5kU291cmNlKEFycmF5VHlwZSBhcnJheVR5cGUsCisJCQlvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29tcGlsZXIuYXN0LkFubm90YXRpb25bXVtdIGFubm90YXRpb25zT25EaW1zKSB7
CisJCUxpc3QgZGltZW5zaW9ucyA9IGFycmF5VHlwZS5kaW1lbnNpb25zKCk7CisJCVR5cGUgZWxl
bVR5cGUgPSBhcnJheVR5cGUuZ2V0RWxlbWVudFR5cGUoKTsKKwkJaW50IHN0YXJ0ID0gZWxlbVR5
cGUuZ2V0U3RhcnRQb3NpdGlvbigpICsgZWxlbVR5cGUuZ2V0TGVuZ3RoKCk7CisJCWludCBlbmQg
PSBhcnJheVR5cGUuZ2V0U3RhcnRQb3NpdGlvbigpICsgYXJyYXlUeXBlLmdldExlbmd0aCgpOwor
CQlpbnQgbGFzdEluZGV4ID0gZGltZW5zaW9ucy5zaXplKCkgLSAxOworCisJCWZvciAoaW50IGkg
PSAwOyBpIDw9IGxhc3RJbmRleDsgaSsrKSB7CisJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuYXN0LkFubm90YXRpb25bXSBhbm5vdGF0aW9uID0gYW5ub3RhdGlvbnNPbkRpbXNb
aV07CisJCQlFeHRyYURpbWVuc2lvbiBjdXJyZW50RGltZW5zaW9uID0gKEV4dHJhRGltZW5zaW9u
KSBkaW1lbnNpb25zLmdldChpKTsKKwkJCWlmIChhbm5vdGF0aW9uICE9IG51bGwpIHsKKwkJCQlm
b3IgKGludCBqID0gMDsgaiA8IGFubm90YXRpb24ubGVuZ3RoOyBqKyspIHsKKwkJCQkJQW5ub3Rh
dGlvbiBhbm5vdCA9IGNvbnZlcnQoYW5ub3RhdGlvbltqXSk7CisJCQkJCWN1cnJlbnREaW1lbnNp
b24uYW5ub3RhdGlvbnMoKS5hZGQoYW5ub3QpOworCQkJCX0KKwkJCX0KKwkJCXJldHJpZXZlRGlt
ZW5zaW9uQW5kU2V0UG9zaXRpb25zKHN0YXJ0LCBlbmQsIGN1cnJlbnREaW1lbnNpb24pOworCQkJ
c3RhcnQgPSBjdXJyZW50RGltZW5zaW9uLmdldFN0YXJ0UG9zaXRpb24oKSArIGN1cnJlbnREaW1l
bnNpb24uZ2V0TGVuZ3RoKCk7CisJCX0KKwl9CisKIAlwcm90ZWN0ZWQgVmFyaWFibGVEZWNsYXJh
dGlvblN0YXRlbWVudCBjb252ZXJ0VG9WYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuTG9jYWxEZWNsYXJhdGlvbiBsb2NhbERl
Y2xhcmF0aW9uKSB7CiAJCWZpbmFsIFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCB2YXJpYWJs
ZURlY2xhcmF0aW9uRnJhZ21lbnQgPSBjb252ZXJ0VG9WYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21l
bnQobG9jYWxEZWNsYXJhdGlvbik7CiAJCWZpbmFsIFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1l
bnQgdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCA9IG5ldyBWYXJpYWJsZURlY2xhcmF0aW9u
U3RhdGVtZW50KHRoaXMuYXN0KTsKQEAgLTMzNzUsNiArMzQ3MCwxMCBAQAogCQkJCXR5cGUuc2V0
RmxhZ3ModHlwZS5nZXRGbGFncygpIHwgQVNUTm9kZS5NQUxGT1JNRUQpOwogCQkJCWJyZWFrOwog
CQkJZGVmYXVsdDoKKwkJCQlpZiAoYW5ub3RhdGlvbnMgPT0gbnVsbCkgYnJlYWs7CisJCQkJaW50
IHN0YXJ0ID0gdHlwZS5nZXRTdGFydFBvc2l0aW9uKCk7CisJCQkJaW50IGFubm90YXRpb25zU3Rh
cnQgPSBzdGFydDsKKwkJCQlpbnQgbGVuZ3RoID0gdHlwZS5nZXRMZW5ndGgoKTsKIAkJCQlpbnQg
YW5ub3RhdGlvbnNMZW5ndGggPSBhbm5vdGF0aW9ucy5sZW5ndGg7CiAJCQkJZm9yIChpbnQgaSA9
IDA7IGkgPCBhbm5vdGF0aW9uc0xlbmd0aDsgaSsrKSB7CiAJCQkJCW9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb21waWxlci5hc3QuQW5ub3RhdGlvbiB0eXBlQW5ub3RhdGlvbiA9IGFubm90YXRp
b25zW2ldOwpAQCAtMzM4MywyMCArMzQ4MiwxMyBAQAogCQkJCQkJdHlwZS5hbm5vdGF0aW9ucygp
LmFkZChhbm5vdGF0aW9uKTsKIAkJCQkJfQogCQkJCX0KKwkJCQlpZiAoYW5ub3RhdGlvbnNbMF0g
IT0gbnVsbCAmJiAoYW5ub3RhdGlvbnNTdGFydCA9IGFubm90YXRpb25zWzBdLnNvdXJjZVN0YXJ0
KSA8IHN0YXJ0KSB7CisJCQkJCWxlbmd0aCArPSBhbm5vdGF0aW9uc1N0YXJ0ID4gMCA/IHN0YXJ0
IC0gYW5ub3RhdGlvbnNTdGFydCA6IDA7CisJCQkJCXN0YXJ0ID0gYW5ub3RhdGlvbnNTdGFydDsK
KwkJCQl9CisJCQkJdHlwZS5zZXRTb3VyY2VSYW5nZShzdGFydCwgbGVuZ3RoKTsKIAkJfQogCX0K
LQlwcml2YXRlIHZvaWQgYW5ub3RhdGVUeXBlKFR5cGUgdHlwZSwgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uW11bXSBhbm5vdGF0aW9ucykgewotCQlpbnQg
bGV2ZWwgPSBhbm5vdGF0aW9ucy5sZW5ndGggLSAxOwotCQl3aGlsZSh0eXBlLmlzQXJyYXlUeXBl
KCkpIHsKLQkJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQkJb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uW10gdHlwZUFubm90
YXRpb25zID0gYW5ub3RhdGlvbnNbbGV2ZWwtLV07Ci0JCQlpZiAodHlwZUFubm90YXRpb25zICE9
IG51bGwpIHsKLQkJCQlhbm5vdGF0ZVR5cGUoYXJyYXlUeXBlLCB0eXBlQW5ub3RhdGlvbnMpOwot
CQkJfQotCQkJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCX0KLQl9Ci0K
IAlwcml2YXRlIHZvaWQgYW5ub3RhdGVUeXBlUGFyYW1ldGVyKFR5cGVQYXJhbWV0ZXIgdHlwZVBh
cmFtZXRlciwgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9u
W10gYW5ub3RhdGlvbnMpIHsKIAkJc3dpdGNoKHRoaXMuYXN0LmFwaUxldmVsKSB7CiAJCQljYXNl
IEFTVC5KTFMyX0lOVEVSTkFMIDoKQEAgLTM1NDQsMjMgKzM2MzYsNyBAQAogCQkJCX0KIAkJCX0K
IAkJCWlmIChkaW1lbnNpb25zICE9IDApIHsKLQkJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuYXN0LkFubm90YXRpb25bXVtdIGFubm90YXRpb25zT25EaW1lbnNpb25zID0gdHlw
ZVJlZmVyZW5jZS5nZXRBbm5vdGF0aW9uc09uRGltZW5zaW9ucygpOwotCQkJCXR5cGUgPSB0aGlz
LmFzdC5uZXdBcnJheVR5cGUodHlwZSwgZGltZW5zaW9ucyk7Ci0JCQkJdHlwZS5zZXRTb3VyY2VS
YW5nZShzb3VyY2VTdGFydCwgbGVuZ3RoKTsKLQkJCQlBcnJheVR5cGUgc3ViYXJyYXlUeXBlID0g
KEFycmF5VHlwZSkgdHlwZTsKLQkJCQlpbnQgaW5kZXggPSBkaW1lbnNpb25zIC0gMTsKLQkJCQl3
aGlsZSAoaW5kZXggPiAwKSB7Ci0JCQkJCWlmIChhbm5vdGF0aW9uc09uRGltZW5zaW9ucyAhPSBu
dWxsICYmIChhbm5vdGF0aW9ucyA9IGFubm90YXRpb25zT25EaW1lbnNpb25zW2luZGV4XSkgIT0g
bnVsbCkgewotCQkJCQkJYW5ub3RhdGVUeXBlKHN1YmFycmF5VHlwZSwgYW5ub3RhdGlvbnMpOwot
CQkJCQl9Ci0JCQkJCXN1YmFycmF5VHlwZSA9IChBcnJheVR5cGUpIHN1YmFycmF5VHlwZS5nZXRD
b21wb25lbnRUeXBlKCk7Ci0JCQkJCWludCBlbmQgPSByZXRyaWV2ZVByb3BlclJpZ2h0QnJhY2tl
dFBvc2l0aW9uKGluZGV4LCBzb3VyY2VTdGFydCk7Ci0JCQkJCXN1YmFycmF5VHlwZS5zZXRTb3Vy
Y2VSYW5nZShzb3VyY2VTdGFydCwgZW5kIC0gc291cmNlU3RhcnQgKyAxKTsKLQkJCQkJaW5kZXgt
LTsKLQkJCQl9Ci0JCQkJaWYgKGFubm90YXRpb25zT25EaW1lbnNpb25zICE9IG51bGwgJiYgKGFu
bm90YXRpb25zID0gYW5ub3RhdGlvbnNPbkRpbWVuc2lvbnNbMF0pICE9IG51bGwpIHsKLQkJCQkJ
YW5ub3RhdGVUeXBlKHN1YmFycmF5VHlwZSwgYW5ub3RhdGlvbnMpOwotCQkJCX0KKwkJCQl0eXBl
ID0gY29udmVydFRvQXJyYXkodHlwZVJlZmVyZW5jZSwgdHlwZSwgc291cmNlU3RhcnQsIGxlbmd0
aCwgZGltZW5zaW9ucyk7CiAJCQkJaWYgKHRoaXMucmVzb2x2ZUJpbmRpbmdzKSB7CiAJCQkJCS8v
IHN0b3JlIGtleXMgZm9yIGlubmVyIHR5cGVzCiAJCQkJCWNvbXBsZXRlUmVjb3JkKChBcnJheVR5
cGUpIHR5cGUsIHR5cGVSZWZlcmVuY2UpOwpAQCAtMzgxMiwzMCArMzg4OCwxMCBAQAogCiAJCQls
ZW5ndGggPSB0eXBlUmVmZXJlbmNlLnNvdXJjZUVuZCAtIHNvdXJjZVN0YXJ0ICsgMTsKIAkJCWlm
IChkaW1lbnNpb25zICE9IDApIHsKLQkJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGls
ZXIuYXN0LkFubm90YXRpb25bXVtdIGFubm90YXRpb25zT25EaW1lbnNpb25zID0gdHlwZVJlZmVy
ZW5jZS5nZXRBbm5vdGF0aW9uc09uRGltZW5zaW9ucygpOwotCQkJCXR5cGUgPSB0aGlzLmFzdC5u
ZXdBcnJheVR5cGUodHlwZSwgZGltZW5zaW9ucyk7CisJCQkJaW50IGVuZCA9IHJldHJpZXZlRW5k
T2ZEaW1lbnNpb25zUG9zaXRpb24oc291cmNlU3RhcnQrbGVuZ3RoLCB0aGlzLmNvbXBpbGF0aW9u
VW5pdFNvdXJjZUxlbmd0aCk7CisJCQkJdHlwZSA9IGNvbnZlcnRUb0FycmF5KHR5cGVSZWZlcmVu
Y2UsIHR5cGUsIHNvdXJjZVN0YXJ0LCBlbmQgIT0gLTEgPyBlbmQgLSBzb3VyY2VTdGFydCArIDEg
OiBsZW5ndGgsIGRpbWVuc2lvbnMpOwogCQkJCWlmICh0aGlzLnJlc29sdmVCaW5kaW5ncykgewog
CQkJCQljb21wbGV0ZVJlY29yZCgoQXJyYXlUeXBlKSB0eXBlLCB0eXBlUmVmZXJlbmNlKTsKLQkJ
CQl9Ci0JCQkJaW50IGVuZCA9IHJldHJpZXZlRW5kT2ZEaW1lbnNpb25zUG9zaXRpb24oc291cmNl
U3RhcnQrbGVuZ3RoLCB0aGlzLmNvbXBpbGF0aW9uVW5pdFNvdXJjZUxlbmd0aCk7Ci0JCQkJaWYg
KGVuZCAhPSAtMSkgewotCQkJCQl0eXBlLnNldFNvdXJjZVJhbmdlKHNvdXJjZVN0YXJ0LCBlbmQg
LSBzb3VyY2VTdGFydCArIDEpOwotCQkJCX0gZWxzZSB7Ci0JCQkJCXR5cGUuc2V0U291cmNlUmFu
Z2Uoc291cmNlU3RhcnQsIGxlbmd0aCk7Ci0JCQkJfQotCQkJCUFycmF5VHlwZSBzdWJhcnJheVR5
cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQkJCWludCBpbmRleCA9IGRpbWVuc2lvbnMgLSAxOwot
CQkJCXdoaWxlIChpbmRleCA+IDApIHsKLQkJCQkJaWYgKGFubm90YXRpb25zT25EaW1lbnNpb25z
ICE9IG51bGwgICYmIChhbm5vdGF0aW9ucyA9IGFubm90YXRpb25zT25EaW1lbnNpb25zW2luZGV4
XSkgIT0gbnVsbCkgewotCQkJCQkJYW5ub3RhdGVUeXBlKHN1YmFycmF5VHlwZSwgYW5ub3RhdGlv
bnMpOwotCQkJCQl9Ci0JCQkJCXN1YmFycmF5VHlwZSA9IChBcnJheVR5cGUpIHN1YmFycmF5VHlw
ZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCQkJCWVuZCA9IHJldHJpZXZlUHJvcGVyUmlnaHRCcmFj
a2V0UG9zaXRpb24oaW5kZXgsIHNvdXJjZVN0YXJ0KTsKLQkJCQkJc3ViYXJyYXlUeXBlLnNldFNv
dXJjZVJhbmdlKHNvdXJjZVN0YXJ0LCBlbmQgLSBzb3VyY2VTdGFydCArIDEpOwotCQkJCQlpbmRl
eC0tOwotCQkJCX0KLQkJCQlpZiAoYW5ub3RhdGlvbnNPbkRpbWVuc2lvbnMgIT0gbnVsbCAgJiYg
KGFubm90YXRpb25zID0gYW5ub3RhdGlvbnNPbkRpbWVuc2lvbnNbMF0pICE9IG51bGwpIHsKLQkJ
CQkJYW5ub3RhdGVUeXBlKHN1YmFycmF5VHlwZSwgYW5ub3RhdGlvbnMpOwogCQkJCX0KIAkJCX0K
IAkJfQpAQCAtMzg5NiwxNiArMzk1MiwxMSBAQAogCXByaXZhdGUgdm9pZCBzZXRTb3VyY2VSYW5n
ZUFubm90YXRpb25zQW5kUmVjb3JkTm9kZXMoVHlwZVJlZmVyZW5jZSB0eXBlUmVmZXJlbmNlLCBB
bm5vdGF0YWJsZVR5cGUgYW5ub3RhdGFibGVUeXBlLAogCQkJb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uW11bXSB0eXBlQW5ub3RhdGlvbnMsIGludCBpbmRl
eCwgaW50IHN0YXJ0LCBpbnQgZW5kKSB7CiAJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5hc3QuQW5ub3RhdGlvbltdIGFubm90YXRpb25zOwotCQlpbnQgYW5ub3RhdGlvbnNTdGFy
dCA9IHN0YXJ0OwogCQlpbnQgbGVuZ3RoID0gZW5kIC0gc3RhcnQgKyAxOworCQlhbm5vdGF0YWJs
ZVR5cGUuc2V0U291cmNlUmFuZ2Uoc3RhcnQsIGxlbmd0aCk7CiAJCWlmICh0eXBlQW5ub3RhdGlv
bnMgIT0gbnVsbCAmJiAoYW5ub3RhdGlvbnMgPSB0eXBlQW5ub3RhdGlvbnNbaW5kZXhdKSAhPSBu
dWxsKSB7CiAJCQlhbm5vdGF0ZVR5cGUoYW5ub3RhdGFibGVUeXBlLCBhbm5vdGF0aW9ucyk7Ci0J
CQlpZiAoYW5ub3RhdGlvbnNbMF0gIT0gbnVsbCAmJiAoYW5ub3RhdGlvbnNTdGFydCA9IGFubm90
YXRpb25zWzBdLnNvdXJjZVN0YXJ0KSA8IHN0YXJ0KSB7Ci0JCQkJbGVuZ3RoICs9IGFubm90YXRp
b25zU3RhcnQgPiAwID8gc3RhcnQgLSBhbm5vdGF0aW9uc1N0YXJ0IDogMDsKLQkJCQlzdGFydCA9
IGFubm90YXRpb25zU3RhcnQ7Ci0JCQl9CiAJCX0KLQkJYW5ub3RhdGFibGVUeXBlLnNldFNvdXJj
ZVJhbmdlKHN0YXJ0LCBsZW5ndGgpOwogCQlpZiAodGhpcy5yZXNvbHZlQmluZGluZ3MpIHsKIAkJ
CXJlY29yZE5vZGVzKGFubm90YXRhYmxlVHlwZSwgdHlwZVJlZmVyZW5jZSk7CiAJCX0KQEAgLTQ2
NDQsOCArNDY5NSwxNSBAQAogCQlib29sZWFuIGlzQW5ub3RhdGlvbiA9IGZhbHNlOwogCQl0cnkg
ewogCQkJaW50IHRva2VuOworCQkJaW50IGNvdW50ID0gMDsKIAkJCXdoaWxlICgodG9rZW4gPSB0
aGlzLnNjYW5uZXIuZ2V0TmV4dFRva2VuKCkpICE9IFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUVP
RikgewogCQkJCXN3aXRjaCh0b2tlbikgeworCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2Vu
TmFtZUxQQVJFTjoKKwkJCQkJCSsrY291bnQ7CisJCQkJCQlicmVhazsKKwkJCQkJY2FzZSBUZXJt
aW5hbFRva2Vucy5Ub2tlbk5hbWVSUEFSRU46CisJCQkJCQktLWNvdW50OworCQkJCQkJYnJlYWs7
CiAJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lQVQ6CiAJCQkJCQlpc0Fubm90YXRp
b24gPSB0cnVlOwogCQkJCQkJYnJlYWs7CkBAIC00NjYzLDYgKzQ3MjEsNyBAQAogCQkJCQljYXNl
IFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZWxvbmc6CiAJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMu
VG9rZW5OYW1lc2hvcnQ6CiAJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lYm9vbGVh
bjoKKwkJCQkJCWlmIChjb3VudCA+IDApIGJyZWFrOwogCQkJCQkJcmV0dXJuIG5ldyBpbnRbXXt0
aGlzLnNjYW5uZXIuc3RhcnRQb3NpdGlvbiwgdGhpcy5zY2FubmVyLmN1cnJlbnRQb3NpdGlvbiAt
IDF9OwogCQkJCX0KIAkJCX0KQEAgLTQ3MTIsOSArNDc3MSwxNyBAQAogCQl0aGlzLnNjYW5uZXIu
cmVzZXRUbyhzdGFydCwgZW5kKTsKIAkJaW50IGRpbWVuc2lvbnMgPSAwOwogCQl0cnkgewotCQkJ
aW50IHRva2VuOwotCQkJYm9vbGVhbiBpc0Fubm90YXRpb24gPSBmYWxzZTsKKwkJCWludCB0b2tl
biwgbFBhcmVuQ291bnQgPSAwOworCQkJYm9vbGVhbiBpc0Fubm90YXRpb24gPSBmYWxzZSwgZm91
bmRBbm5vdGF0aW9uID0gZmFsc2U7CiAJCQl3aGlsZSAoKHRva2VuID0gdGhpcy5zY2FubmVyLmdl
dE5leHRUb2tlbigpKSAhPSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVFT0YpIHsKKwkJCQlpZiAo
Zm91bmRBbm5vdGF0aW9uKSB7CisJCQkJCWlmICh0b2tlbiA9PSBUZXJtaW5hbFRva2Vucy5Ub2tl
bk5hbWVMUEFSRU4pICsrbFBhcmVuQ291bnQ7CisJCQkJCWVsc2UgaWYgKHRva2VuID09IFRlcm1p
bmFsVG9rZW5zLlRva2VuTmFtZVJQQVJFTikgeworCQkJCQkJLS1sUGFyZW5Db3VudDsKKwkJCQkJ
CWNvbnRpbnVlOworCQkJCQl9CisJCQkJCWlmIChsUGFyZW5Db3VudCA+IDApIGNvbnRpbnVlOwor
CQkJCX0KIAkJCQlzd2l0Y2godG9rZW4pIHsKIAkJCQkJY2FzZSBUZXJtaW5hbFRva2Vucy5Ub2tl
bk5hbWVMQlJBQ0tFVDoKIAkJCQkJY2FzZSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVDT01NRU5U
X0JMT0NLOgpAQCAtNDcyNCw2ICs0NzkxLDcgQEAKIAkJCQkJCWJyZWFrOwogCQkJCQljYXNlIFRl
cm1pbmFsVG9rZW5zLlRva2VuTmFtZUFUOgogCQkJCQkJaXNBbm5vdGF0aW9uID0gdHJ1ZTsKKwkJ
CQkJCWZvdW5kQW5ub3RhdGlvbiA9IHRydWU7IC8qIGNoZWNrIGZvciBwYXJhbXMgKi8KIAkJCQkJ
CWJyZWFrOwogCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUlkZW50aWZpZXI6CiAJ
CQkJCQlpZiAoIWlzQW5ub3RhdGlvbikgewpAQCAtNDc0OCwyMiArNDgxNiwzNiBAQAogCXByb3Rl
Y3RlZCB2b2lkIHJldHJpZXZlRGltZW5zaW9uQW5kU2V0UG9zaXRpb25zKGludCBzdGFydCwgaW50
IGVuZCwgRXh0cmFEaW1lbnNpb24gZGltKSB7CiAJCXRoaXMuc2Nhbm5lci5yZXNldFRvKHN0YXJ0
LCBlbmQpOwogCQlpbnQgdG9rZW47CisJCWludCBjb3VudCA9IDAsIGxQYXJlbkNvdW50ID0gMDsK
IAkJYm9vbGVhbiBzdGFydFNldCA9IGZhbHNlOwogCQl0cnkgewogCQkJd2hpbGUoKHRva2VuID0g
dGhpcy5zY2FubmVyLmdldE5leHRUb2tlbigpKSAhPSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVF
T0YpICB7Ci0JCQkJc3dpdGNoKHRva2VuKSB7Ci0JCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9r
ZW5OYW1lV0hJVEVTUEFDRToKLQkJCQkJCWJyZWFrOwotCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5z
LlRva2VuTmFtZVJCUkFDS0VUOgotCQkJCQkJaW50IGVuZERpbSA9IHRoaXMuc2Nhbm5lci5jdXJy
ZW50UG9zaXRpb24gLSAxOwotCQkJCQkJZGltLnNldFNvdXJjZVJhbmdlKHN0YXJ0LCBlbmREaW0g
LSBzdGFydCArIDEpOwotCQkJCQkJcmV0dXJuOwotCQkJCQlkZWZhdWx0OgotCQkJCQkJaWYgKCFz
dGFydFNldCkgewotCQkJCQkJCXN0YXJ0ID0gdGhpcy5zY2FubmVyLnN0YXJ0UG9zaXRpb247Ci0J
CQkJCQkJc3RhcnRTZXQgPSB0cnVlOwotCQkJCQkJfQotCQkJCQkJYnJlYWs7CisJCQkJaWYgKHRv
a2VuICE9IFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZVdISVRFU1BBQ0UpIHsKKwkJCQkJaWYgKCFz
dGFydFNldCkgeworCQkJCQkJc3RhcnQgPSB0aGlzLnNjYW5uZXIuc3RhcnRQb3NpdGlvbjsKKwkJ
CQkJCXN0YXJ0U2V0ID0gdHJ1ZTsKKwkJCQkJfQorCQkJCQlzd2l0Y2godG9rZW4pIHsKKwkJCQkJ
CWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lUkJSQUNLRVQ6CisJCQkJCQkJaWYgKGxQYXJl
bkNvdW50ID4gMCkgYnJlYWs7CisJCQkJCQkJLS1jb3VudDsKKwkJCQkJCQlpZiAoY291bnQgPiAw
KSBicmVhazsKKwkJCQkJCQlpbnQgZW5kRGltID0gdGhpcy5zY2FubmVyLmN1cnJlbnRQb3NpdGlv
biAtIDE7CisJCQkJCQkJZGltLnNldFNvdXJjZVJhbmdlKHN0YXJ0LCBlbmREaW0gLSBzdGFydCAr
IDEpOworCQkJCQkJCXJldHVybjsKKwkJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1l
TEJSQUNLRVQ6CisJCQkJCQkJaWYgKGxQYXJlbkNvdW50ID4gMCkgYnJlYWs7CisJCQkJCQkJY291
bnQrKzsKKwkJCQkJCQlicmVhazsKKwkJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1l
TFBBUkVOOgorCQkJCQkJCWxQYXJlbkNvdW50Kys7CisJCQkJCQkJYnJlYWs7CisJCQkJCQljYXNl
IFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZVJQQVJFTjoKKwkJCQkJCQktLWxQYXJlbkNvdW50Owor
CQkJCQkJCWJyZWFrOworCQkJCQkJZGVmYXVsdDoKKwkJCQkJCQlicmVhazsKKwkJCQkJfQogCQkJ
CX0KIAkJCX0KIAkJfSBjYXRjaChJbnZhbGlkSW5wdXRFeGNlcHRpb24gZSkgewpAQCAtNDg0MSwx
MCArNDkyMywxOSBAQAogCQlpbnQgYmFsYW5jZSA9IDA7CiAJCWludCBwb3MgPSBpbml0aWFsaXpl
ckVuZCA+IG5hbWVFbmQgPyBpbml0aWFsaXplckVuZCAtIDEgOiBuYW1lRW5kOwogCQl0cnkgewot
CQkJaW50IHRva2VuOworCQkJaW50IHRva2VuLCBsUGFyZW5Db3VudCA9IDA7CisJCQlib29sZWFu
IGhhc0Fubm90YXRpb25zID0gZmFsc2U7CiAJCQl3aGlsZSAoKHRva2VuID0gdGhpcy5zY2FubmVy
LmdldE5leHRUb2tlbigpKSAhPSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVFT0YpIHsKIAkJCQlo
YXNUb2tlbnMgPSB0cnVlOworCQkJCWlmIChoYXNBbm5vdGF0aW9ucykgeworCQkJCQlpZiAodG9r
ZW4gPT0gVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lTFBBUkVOKSArK2xQYXJlbkNvdW50OworCQkJ
CQllbHNlIGlmICh0b2tlbiA9PSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVSUEFSRU4pIHstLWxQ
YXJlbkNvdW50OyBjb250aW51ZTt9CisJCQkJCWlmIChsUGFyZW5Db3VudCA+IDApIGNvbnRpbnVl
OworCQkJCX0KIAkJCQlzd2l0Y2godG9rZW4pIHsKKwkJCQkJY2FzZSBUZXJtaW5hbFRva2Vucy5U
b2tlbk5hbWVBVDoKKwkJCQkJCWhhc0Fubm90YXRpb25zID0gdHJ1ZTsKKwkJCQkJCWJyZWFrOwog
CQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUxCUkFDRSA6CiAJCQkJCWNhc2UgVGVy
bWluYWxUb2tlbnMuVG9rZW5OYW1lTEJSQUNLRVQgOgogCQkJCQkJYmFsYW5jZSsrOwpAQCAtNDg3
NCwxMCArNDk2NSwxNyBAQAogCXByb3RlY3RlZCBpbnQgcmV0cmlldmVQcm9wZXJSaWdodEJyYWNr
ZXRQb3NpdGlvbihpbnQgYnJhY2tldE51bWJlciwgaW50IHN0YXJ0KSB7CiAJCXRoaXMuc2Nhbm5l
ci5yZXNldFRvKHN0YXJ0LCB0aGlzLmNvbXBpbGF0aW9uVW5pdFNvdXJjZUxlbmd0aCk7CiAJCXRy
eSB7Ci0JCQlpbnQgdG9rZW4sIGNvdW50ID0gMDsKKwkJCWludCB0b2tlbiwgY291bnQgPSAwLCBs
UGFyZW50Q291bnQgPSAwOwogCQkJd2hpbGUgKCh0b2tlbiA9IHRoaXMuc2Nhbm5lci5nZXROZXh0
VG9rZW4oKSkgIT0gVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lRU9GKSB7CiAJCQkJc3dpdGNoKHRv
a2VuKSB7CisJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lTFBBUkVOOgorCQkJCQkJ
KytsUGFyZW50Q291bnQ7CisJCQkJCQlicmVhazsKKwkJCQkJY2FzZSBUZXJtaW5hbFRva2Vucy5U
b2tlbk5hbWVSUEFSRU46CisJCQkJCQktLWxQYXJlbnRDb3VudDsKKwkJCQkJCWJyZWFrOwogCQkJ
CQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZVJCUkFDS0VUOgorCQkJCQkJaWYgKGxQYXJl
bnRDb3VudCA+IDApIGJyZWFrOwogCQkJCQkJY291bnQrKzsKIAkJCQkJCWlmIChjb3VudCA9PSBi
cmFja2V0TnVtYmVyKSB7CiAJCQkJCQkJcmV0dXJuIHRoaXMuc2Nhbm5lci5jdXJyZW50UG9zaXRp
b24gLSAxOwpAQCAtNTY0MywzMiArNTc0MSw1MCBAQAogCQkJCQl0aGlzLmFzdC5nZXRCaW5kaW5n
UmVzb2x2ZXIoKS51cGRhdGVLZXkodHlwZSwgZWxlbWVudFR5cGUpOwogCQkJCQlmaWVsZERlY2xh
cmF0aW9uLnNldFR5cGUoZWxlbWVudFR5cGUpOwogCQkJCX0gZWxzZSB7Ci0JCQkJCWludCBzdGFy
dCA9IHR5cGUuZ2V0U3RhcnRQb3NpdGlvbigpOwotCQkJCQlBcnJheVR5cGUgc3ViYXJyYXlUeXBl
ID0gYXJyYXlUeXBlOwotCQkJCQlpbnQgaW5kZXggPSBleHRyYURpbWVuc2lvbjsKLQkJCQkJd2hp
bGUgKGluZGV4ID4gMCkgewotCQkJCQkJc3ViYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgc3ViYXJy
YXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJCQkJCWluZGV4LS07Ci0JCQkJCX0KLQkJCQkJ
aW50IGVuZCA9IHJldHJpZXZlUHJvcGVyUmlnaHRCcmFja2V0UG9zaXRpb24ocmVtYWluaW5nRGlt
ZW5zaW9ucywgc3RhcnQpOwotCQkJCQlzdWJhcnJheVR5cGUuc2V0U291cmNlUmFuZ2Uoc3RhcnQs
IGVuZCAtIHN0YXJ0ICsgMSk7Ci0JCQkJCS8vIGN1dCB0aGUgY2hpbGQgbG9vc2UgZnJvbSBpdHMg
cGFyZW50ICh3aXRob3V0IGNyZWF0aW5nIGdhcmJhZ2UpCi0JCQkJCXN1YmFycmF5VHlwZS5zZXRQ
YXJlbnQobnVsbCwgbnVsbCk7CisJCQkJCUFycmF5VHlwZSBzdWJhcnJheVR5cGUgPSBleHRyYWN0
U3ViQXJyYXlUeXBlKGFycmF5VHlwZSwgcmVtYWluaW5nRGltZW5zaW9ucywgZXh0cmFEaW1lbnNp
b24pOwogCQkJCQlmaWVsZERlY2xhcmF0aW9uLnNldFR5cGUoc3ViYXJyYXlUeXBlKTsKLQkJCQkJ
dXBkYXRlSW5uZXJQb3NpdGlvbnMoc3ViYXJyYXlUeXBlLCByZW1haW5pbmdEaW1lbnNpb25zKTsK
IAkJCQkJdGhpcy5hc3QuZ2V0QmluZGluZ1Jlc29sdmVyKCkudXBkYXRlS2V5KHR5cGUsIHN1YmFy
cmF5VHlwZSk7CiAJCQkJfQogCQkJfSBlbHNlIHsKIAkJCQlmaWVsZERlY2xhcmF0aW9uLnNldFR5
cGUodHlwZSk7CiAJCQl9CiAJCX0gZWxzZSB7Ci0JCQlpZiAodHlwZS5pc0FycmF5VHlwZSgpKSB7
CisJCQlpZiAodHlwZS5pc0FycmF5VHlwZSgpICYmICh0aGlzLmFzdC5hcGlMZXZlbCgpIDwgQVNU
LkpMUzgpKSB7CiAJCQkJLy8gdXBkYXRlIHBvc2l0aW9ucyBvZiB0aGUgY29tcG9uZW50IHR5cGVz
IG9mIHRoZSBhcnJheSB0eXBlCiAJCQkJaW50IGRpbWVuc2lvbnMgPSAoKEFycmF5VHlwZSkgdHlw
ZSkuZ2V0RGltZW5zaW9ucygpOwogCQkJCXVwZGF0ZUlubmVyUG9zaXRpb25zKHR5cGUsIGRpbWVu
c2lvbnMpOwogCQkJfQogCQkJZmllbGREZWNsYXJhdGlvbi5zZXRUeXBlKHR5cGUpOwogCQl9CisJ
fQorCisJLyoqIGV4dHJhY3RzIHRoZSBzdWJBcnJheVR5cGUgZm9yIGEgZ2l2ZW4gZGVjbGFyYXRp
b24gZm9yIEFTVCBsZXZlbHMgbGVzcworCSAqIEBwYXJhbSBhcnJheVR5cGUgcGFyZW50IHR5cGUK
KwkgKiBAcGFyYW0gcmVtYWluaW5nRGltZW5zaW9ucyAKKwkgKiBAcGFyYW0gZXh0cmFEaW1lbnNp
b25zCisJICogQHJldHVybiBhbiBBcnJheVR5cGUKKwkgKi8KKwlwcml2YXRlIEFycmF5VHlwZSBl
eHRyYWN0U3ViQXJyYXlUeXBlKEFycmF5VHlwZSBhcnJheVR5cGUsIGludCByZW1haW5pbmdEaW1l
bnNpb25zLCBpbnQgZXh0cmFEaW1lbnNpb25zKSB7CisJCUFycmF5VHlwZSBzdWJBcnJheVR5cGUg
PSBhcnJheVR5cGU7CisJCWludCBzdGFydCA9IHN1YkFycmF5VHlwZS5nZXRTdGFydFBvc2l0aW9u
KCk7CisJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsKKwkJCXdoaWxlIChl
eHRyYURpbWVuc2lvbnMgPiAwICkgeworCQkJCXN1YkFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNv
bXBvbmVudFR5cGUoc3ViQXJyYXlUeXBlKTsKKwkJCQlleHRyYURpbWVuc2lvbnMtLTsKKwkJCX0K
KwkJCXVwZGF0ZUlubmVyUG9zaXRpb25zKHN1YkFycmF5VHlwZSwgcmVtYWluaW5nRGltZW5zaW9u
cyk7CisJCX0gZWxzZSB7CisJCQlMaXN0IGRpbWVuc2lvbnMgPSBzdWJBcnJheVR5cGUuZGltZW5z
aW9ucygpOworCQkJd2hpbGUgKGV4dHJhRGltZW5zaW9ucyA+IDAgKSB7CisJCQkJZGltZW5zaW9u
cy5yZW1vdmUoZGltZW5zaW9ucy5zaXplKCkgLSAxKTsKKwkJCQlleHRyYURpbWVuc2lvbnMtLTsK
KwkJCX0KKwkJfQorCQlpbnQgZW5kID0gcmV0cmlldmVQcm9wZXJSaWdodEJyYWNrZXRQb3NpdGlv
bihyZW1haW5pbmdEaW1lbnNpb25zLCBzdGFydCk7CisJCXN1YkFycmF5VHlwZS5zZXRTb3VyY2VS
YW5nZShzdGFydCwgZW5kIC0gc3RhcnQgKyAxKTsKKwkJLy8gY3V0IHRoZSBjaGlsZCBsb29zZSBm
cm9tIGl0cyBwYXJlbnQgKHdpdGhvdXQgY3JlYXRpbmcgZ2FyYmFnZSkKKwkJc3ViQXJyYXlUeXBl
LnNldFBhcmVudChudWxsLCBudWxsKTsKKwkJcmV0dXJuIHN1YkFycmF5VHlwZTsKIAl9CiAKIAlw
cm90ZWN0ZWQgdm9pZCBzZXRUeXBlRm9yTWV0aG9kRGVjbGFyYXRpb24oTWV0aG9kRGVjbGFyYXRp
b24gbWV0aG9kRGVjbGFyYXRpb24sIFR5cGUgdHlwZSwgaW50IGV4dHJhRGltZW5zaW9uKSB7CkBA
IC01NjkxLDE4ICs1ODA3LDcgQEAKIAkJCQkJCWJyZWFrOwogCQkJCQl9CiAJCQkJfSBlbHNlIHsK
LQkJCQkJaW50IHN0YXJ0ID0gdHlwZS5nZXRTdGFydFBvc2l0aW9uKCk7Ci0JCQkJCUFycmF5VHlw
ZSBzdWJhcnJheVR5cGUgPSBhcnJheVR5cGU7Ci0JCQkJCWludCBpbmRleCA9IGV4dHJhRGltZW5z
aW9uOwotCQkJCQl3aGlsZSAoaW5kZXggPiAwKSB7Ci0JCQkJCQlzdWJhcnJheVR5cGUgPSAoQXJy
YXlUeXBlKSBzdWJhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQkJCQkJaW5kZXgtLTsK
LQkJCQkJfQotCQkJCQlpbnQgZW5kID0gcmV0cmlldmVQcm9wZXJSaWdodEJyYWNrZXRQb3NpdGlv
bihyZW1haW5pbmdEaW1lbnNpb25zLCBzdGFydCk7Ci0JCQkJCXN1YmFycmF5VHlwZS5zZXRTb3Vy
Y2VSYW5nZShzdGFydCwgZW5kIC0gc3RhcnQgKyAxKTsKLQkJCQkJLy8gY3V0IHRoZSBjaGlsZCBs
b29zZSBmcm9tIGl0cyBwYXJlbnQgKHdpdGhvdXQgY3JlYXRpbmcgZ2FyYmFnZSkKLQkJCQkJc3Vi
YXJyYXlUeXBlLnNldFBhcmVudChudWxsLCBudWxsKTsKLQkJCQkJdXBkYXRlSW5uZXJQb3NpdGlv
bnMoc3ViYXJyYXlUeXBlLCByZW1haW5pbmdEaW1lbnNpb25zKTsKKwkJCQkJQXJyYXlUeXBlIHN1
YmFycmF5VHlwZSA9IGV4dHJhY3RTdWJBcnJheVR5cGUoYXJyYXlUeXBlLCByZW1haW5pbmdEaW1l
bnNpb25zLCBleHRyYURpbWVuc2lvbik7CiAJCQkJCXN3aXRjaCh0aGlzLmFzdC5hcGlMZXZlbCkg
ewogCQkJCQkJY2FzZSBBU1QuSkxTMl9JTlRFUk5BTCA6CiAJCQkJCQkJbWV0aG9kRGVjbGFyYXRp
b24uaW50ZXJuYWxTZXRSZXR1cm5UeXBlKHN1YmFycmF5VHlwZSk7CkBAIC01NzUyLDIwICs1ODU3
LDkgQEAKIAkJCQkJdGhpcy5hc3QuZ2V0QmluZGluZ1Jlc29sdmVyKCkudXBkYXRlS2V5KHR5cGUs
IGVsZW1lbnRUeXBlKTsKIAkJCQkJc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbi5zZXRUeXBlKGVs
ZW1lbnRUeXBlKTsKIAkJCQl9IGVsc2UgewotCQkJCQlpbnQgc3RhcnQgPSB0eXBlLmdldFN0YXJ0
UG9zaXRpb24oKTsKLQkJCQkJQXJyYXlUeXBlIHN1YmFycmF5VHlwZSA9IGFycmF5VHlwZTsKLQkJ
CQkJaW50IGluZGV4ID0gZXh0cmFEaW1lbnNpb247Ci0JCQkJCXdoaWxlIChpbmRleCA+IDApIHsK
LQkJCQkJCXN1YmFycmF5VHlwZSA9IChBcnJheVR5cGUpIHN1YmFycmF5VHlwZS5nZXRDb21wb25l
bnRUeXBlKCk7Ci0JCQkJCQlpbmRleC0tOwotCQkJCQl9Ci0JCQkJCWludCBlbmQgPSByZXRyaWV2
ZVByb3BlclJpZ2h0QnJhY2tldFBvc2l0aW9uKHJlbWFpbmluZ0RpbWVuc2lvbnMsIHN0YXJ0KTsK
LQkJCQkJc3ViYXJyYXlUeXBlLnNldFNvdXJjZVJhbmdlKHN0YXJ0LCBlbmQgLSBzdGFydCArIDEp
OwotCQkJCQkvLyBjdXQgdGhlIGNoaWxkIGxvb3NlIGZyb20gaXRzIHBhcmVudCAod2l0aG91dCBj
cmVhdGluZyBnYXJiYWdlKQotCQkJCQlzdWJhcnJheVR5cGUuc2V0UGFyZW50KG51bGwsIG51bGwp
OwotCQkJCQl1cGRhdGVJbm5lclBvc2l0aW9ucyhzdWJhcnJheVR5cGUsIHJlbWFpbmluZ0RpbWVu
c2lvbnMpOwotCQkJCQlzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLnNldFR5cGUoc3ViYXJyYXlU
eXBlKTsKKwkJCQkJQXJyYXlUeXBlIHN1YmFycmF5VHlwZSA9IGV4dHJhY3RTdWJBcnJheVR5cGUo
YXJyYXlUeXBlLCByZW1haW5pbmdEaW1lbnNpb25zLCBleHRyYURpbWVuc2lvbik7CiAJCQkJCXRo
aXMuYXN0LmdldEJpbmRpbmdSZXNvbHZlcigpLnVwZGF0ZUtleSh0eXBlLCBzdWJhcnJheVR5cGUp
OworCQkJCQlzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLnNldFR5cGUoc3ViYXJyYXlUeXBlKTsK
IAkJCQl9CiAJCQl9IGVsc2UgewogCQkJCXNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24uc2V0VHlw
ZSh0eXBlKTsKQEAgLTU3ODgsMTggKzU4ODIsNyBAQAogCQkJCQl0aGlzLmFzdC5nZXRCaW5kaW5n
UmVzb2x2ZXIoKS51cGRhdGVLZXkodHlwZSwgZWxlbWVudFR5cGUpOwogCQkJCQl2YXJpYWJsZURl
Y2xhcmF0aW9uRXhwcmVzc2lvbi5zZXRUeXBlKGVsZW1lbnRUeXBlKTsKIAkJCQl9IGVsc2Ugewot
CQkJCQlpbnQgc3RhcnQgPSB0eXBlLmdldFN0YXJ0UG9zaXRpb24oKTsKLQkJCQkJQXJyYXlUeXBl
IHN1YmFycmF5VHlwZSA9IGFycmF5VHlwZTsKLQkJCQkJaW50IGluZGV4ID0gZXh0cmFEaW1lbnNp
b247Ci0JCQkJCXdoaWxlIChpbmRleCA+IDApIHsKLQkJCQkJCXN1YmFycmF5VHlwZSA9IChBcnJh
eVR5cGUpIHN1YmFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCQkJCQlpbmRleC0tOwot
CQkJCQl9Ci0JCQkJCWludCBlbmQgPSByZXRyaWV2ZVByb3BlclJpZ2h0QnJhY2tldFBvc2l0aW9u
KHJlbWFpbmluZ0RpbWVuc2lvbnMsIHN0YXJ0KTsKLQkJCQkJc3ViYXJyYXlUeXBlLnNldFNvdXJj
ZVJhbmdlKHN0YXJ0LCBlbmQgLSBzdGFydCArIDEpOwotCQkJCQkvLyBjdXQgdGhlIGNoaWxkIGxv
b3NlIGZyb20gaXRzIHBhcmVudCAod2l0aG91dCBjcmVhdGluZyBnYXJiYWdlKQotCQkJCQlzdWJh
cnJheVR5cGUuc2V0UGFyZW50KG51bGwsIG51bGwpOwotCQkJCQl1cGRhdGVJbm5lclBvc2l0aW9u
cyhzdWJhcnJheVR5cGUsIHJlbWFpbmluZ0RpbWVuc2lvbnMpOworCQkJCQlBcnJheVR5cGUgc3Vi
YXJyYXlUeXBlID0gZXh0cmFjdFN1YkFycmF5VHlwZShhcnJheVR5cGUsIHJlbWFpbmluZ0RpbWVu
c2lvbnMsIGV4dHJhRGltZW5zaW9uKTsKIAkJCQkJdmFyaWFibGVEZWNsYXJhdGlvbkV4cHJlc3Np
b24uc2V0VHlwZShzdWJhcnJheVR5cGUpOwogCQkJCQl0aGlzLmFzdC5nZXRCaW5kaW5nUmVzb2x2
ZXIoKS51cGRhdGVLZXkodHlwZSwgc3ViYXJyYXlUeXBlKTsKIAkJCQl9CkBAIC01ODI0LDE4ICs1
OTA3LDcgQEAKIAkJCQkJdGhpcy5hc3QuZ2V0QmluZGluZ1Jlc29sdmVyKCkudXBkYXRlS2V5KHR5
cGUsIGVsZW1lbnRUeXBlKTsKIAkJCQkJdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudC5zZXRU
eXBlKGVsZW1lbnRUeXBlKTsKIAkJCQl9IGVsc2UgewotCQkJCQlpbnQgc3RhcnQgPSB0eXBlLmdl
dFN0YXJ0UG9zaXRpb24oKTsKLQkJCQkJQXJyYXlUeXBlIHN1YmFycmF5VHlwZSA9IGFycmF5VHlw
ZTsKLQkJCQkJaW50IGluZGV4ID0gZXh0cmFEaW1lbnNpb247Ci0JCQkJCXdoaWxlIChpbmRleCA+
IDApIHsKLQkJCQkJCXN1YmFycmF5VHlwZSA9IChBcnJheVR5cGUpIHN1YmFycmF5VHlwZS5nZXRD
b21wb25lbnRUeXBlKCk7Ci0JCQkJCQlpbmRleC0tOwotCQkJCQl9Ci0JCQkJCWludCBlbmQgPSBy
ZXRyaWV2ZVByb3BlclJpZ2h0QnJhY2tldFBvc2l0aW9uKHJlbWFpbmluZ0RpbWVuc2lvbnMsIHN0
YXJ0KTsKLQkJCQkJc3ViYXJyYXlUeXBlLnNldFNvdXJjZVJhbmdlKHN0YXJ0LCBlbmQgLSBzdGFy
dCArIDEpOwotCQkJCQkvLyBjdXQgdGhlIGNoaWxkIGxvb3NlIGZyb20gaXRzIHBhcmVudCAod2l0
aG91dCBjcmVhdGluZyBnYXJiYWdlKQotCQkJCQlzdWJhcnJheVR5cGUuc2V0UGFyZW50KG51bGws
IG51bGwpOwotCQkJCQl1cGRhdGVJbm5lclBvc2l0aW9ucyhzdWJhcnJheVR5cGUsIHJlbWFpbmlu
Z0RpbWVuc2lvbnMpOworCQkJCQlBcnJheVR5cGUgc3ViYXJyYXlUeXBlID0gZXh0cmFjdFN1YkFy
cmF5VHlwZShhcnJheVR5cGUsIHJlbWFpbmluZ0RpbWVuc2lvbnMsIGV4dHJhRGltZW5zaW9uKTsK
IAkJCQkJdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudC5zZXRUeXBlKHN1YmFycmF5VHlwZSk7
CiAJCQkJCXRoaXMuYXN0LmdldEJpbmRpbmdSZXNvbHZlcigpLnVwZGF0ZUtleSh0eXBlLCBzdWJh
cnJheVR5cGUpOwogCQkJCX0KQEAgLTU4NTEsMTMgKzU5MjMsMTMgQEAKIAkJaWYgKGRpbWVuc2lv
bnMgPiAxKSB7CiAJCQkvLyBuZWVkIHRvIHNldCBwb3NpdGlvbnMgZm9yIGludGVybWVkaWF0ZSBh
cnJheSB0eXBlIHNlZSA0MjgzOQogCQkJaW50IHN0YXJ0ID0gdHlwZS5nZXRTdGFydFBvc2l0aW9u
KCk7Ci0JCQlUeXBlIGN1cnJlbnRDb21wb25lbnRUeXBlID0gKChBcnJheVR5cGUpIHR5cGUpLmdl
dENvbXBvbmVudFR5cGUoKTsKKwkJCVR5cGUgY3VycmVudENvbXBvbmVudFR5cGUgPSBjb21wb25l
bnRUeXBlKCgoQXJyYXlUeXBlKSB0eXBlKSk7CiAJCQlpbnQgc2VhcmNoZWREaW1lbnNpb24gPSBk
aW1lbnNpb25zIC0gMTsKIAkJCWludCByaWdodEJyYWNrZXRFbmRQb3NpdGlvbiA9IHN0YXJ0Owog
CQkJd2hpbGUgKGN1cnJlbnRDb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpIHsKIAkJCQlyaWdo
dEJyYWNrZXRFbmRQb3NpdGlvbiA9IHJldHJpZXZlUHJvcGVyUmlnaHRCcmFja2V0UG9zaXRpb24o
c2VhcmNoZWREaW1lbnNpb24sIHN0YXJ0KTsKIAkJCQljdXJyZW50Q29tcG9uZW50VHlwZS5zZXRT
b3VyY2VSYW5nZShzdGFydCwgcmlnaHRCcmFja2V0RW5kUG9zaXRpb24gLSBzdGFydCArIDEpOwot
CQkJCWN1cnJlbnRDb21wb25lbnRUeXBlID0gKChBcnJheVR5cGUpIGN1cnJlbnRDb21wb25lbnRU
eXBlKS5nZXRDb21wb25lbnRUeXBlKCk7CisJCQkJY3VycmVudENvbXBvbmVudFR5cGUgPSBjb21w
b25lbnRUeXBlKCgoQXJyYXlUeXBlKSBjdXJyZW50Q29tcG9uZW50VHlwZSkpOwogCQkJCXNlYXJj
aGVkRGltZW5zaW9uLS07CiAJCQl9CiAJCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUTWF0Y2hlci5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RNYXRjaGVyLmph
dmEKaW5kZXggZjMzYzVlMi4uYjA0MzM2NSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RNYXRjaGVyLmphdmEKKysrIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RNYXRjaGVy
LmphdmEKQEAgLTE2NCw2ICsxNjQsMTMgQEAKIAl9CiAKIAkvKioKKwkgKiBAZGVwcmVjYXRlZAor
CSAqLworCXByaXZhdGUgVHlwZSBjb21wb25lbnRUeXBlKEFycmF5VHlwZSBhcnJheSkgeworCQly
ZXR1cm4gYXJyYXkuZ2V0Q29tcG9uZW50VHlwZSgpOworCX0KKworCS8qKgogCSAqIFJldHVybnMg
d2hldGhlciB0aGUgZ2l2ZW4gbm9kZSBhbmQgdGhlIG90aGVyIG9iamVjdCBtYXRjaC4KIAkgKiA8
cD4KIAkgKiBUaGUgZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiBwcm92aWRlZCBieSB0aGlzIGNsYXNz
IHRlc3RzIHdoZXRoZXIgdGhlCkBAIC0zMzEsOCArMzM4LDExIEBACiAJCX0KIAkJQXJyYXlUeXBl
IG8gPSAoQXJyYXlUeXBlKSBvdGhlcjsKIAkJaW50IGxldmVsID0gbm9kZS5nZXRBU1QoKS5hcGlM
ZXZlbDsKLQkJcmV0dXJuIHNhZmVTdWJ0cmVlTWF0Y2gobm9kZS5nZXRDb21wb25lbnRUeXBlKCks
IG8uZ2V0Q29tcG9uZW50VHlwZSgpKQotCQkJCSYmIChsZXZlbCA+PSBBU1QuSkxTOCA/IHNhZmVT
dWJ0cmVlTGlzdE1hdGNoKG5vZGUuYW5ub3RhdGlvbnMoKSwgby5hbm5vdGF0aW9ucygpKSA6IHRy
dWUpOworCQlpZiAobGV2ZWwgPCBBU1QuSkxTOCkgeworCQkJcmV0dXJuIHNhZmVTdWJ0cmVlTWF0
Y2goY29tcG9uZW50VHlwZShub2RlKSwgY29tcG9uZW50VHlwZShvKSk7CisJCX0KKwkJcmV0dXJu
IHNhZmVTdWJ0cmVlTWF0Y2gobm9kZS5nZXRFbGVtZW50VHlwZSgpLCBvLmdldEVsZW1lbnRUeXBl
KCkpCisJCQkJJiYgc2FmZVN1YnRyZWVMaXN0TWF0Y2gobm9kZS5kaW1lbnNpb25zKCksIG8uZGlt
ZW5zaW9ucygpKTsKIAl9CiAKIAkvKioKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQXJyYXlUeXBlLmphdmEgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FycmF5VHlwZS5qYXZhCmlu
ZGV4IGNkMWRkODMuLmQ2MmZiYTkgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Rv
bS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQXJyYXlUeXBlLmphdmEKKysrIGIvb3JnLmVjbGlw
c2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BcnJheVR5cGUuamF2YQpA
QCAtMjEsNyArMjEsOSBAQAogLyoqCiAgKiBUeXBlIG5vZGUgZm9yIGFuIGFycmF5IHR5cGUuCiAg
KiA8cD4KLSAqIEFycmF5IHR5cGVzIGFyZSBleHByZXNzZWQgaW4gYSByZWN1cnNpdmUgbWFubmVy
LCBvbmUgZGltZW5zaW9uIGF0IGEgdGltZS4KKyAqIEFycmF5IHR5cGVzIGFyZSBleHByZXNzZWQg
aW4gYSByZWN1cnNpdmUgbWFubmVyLCBvbmUgZGltZW5zaW9uIGF0IGEgdGltZS4gRnJvbSBKTFM4
IG9ud2FyZHMsCisgKiBpbnN0ZWFkIG9mIHRoaXMgcmVjdXJzaXZlIG1hbm5lciwgYXJyYXlzIGFy
ZSByZXByZXNlbnRlZCBieSBhIGJhc2UgZWxlbWVudCB0eXBlICh3aGljaCBjYW5ub3QKKyAqIGJl
IGFuIEFycmF5IHR5cGUpIGFuZCBhIGxpc3Qgb2YgZGltZW5zaW9ucyBlYWNoIG9mIHdoaWNoIG1h
eSBoYXZlIGEgbGlzdCBvZiBhbm5vdGF0aW9ucy4KICAqIDwvcD4KICAqIDxwcmU+CiAgKiBBcnJh
eVR5cGU6CkBAIC0zMSw3ICszMyw3IEBACiAgKiBAc2luY2UgMi4wCiAgKiBAbm9pbnN0YW50aWF0
ZSBUaGlzIGNsYXNzIGlzIG5vdCBpbnRlbmRlZCB0byBiZSBpbnN0YW50aWF0ZWQgYnkgY2xpZW50
cy4KICAqLwotcHVibGljIGNsYXNzIEFycmF5VHlwZSBleHRlbmRzIEFubm90YXRhYmxlVHlwZSB7
CitwdWJsaWMgY2xhc3MgQXJyYXlUeXBlIGV4dGVuZHMgVHlwZSB7CiAKIAkvKioKIAkgKiBUaGUg
ImNvbXBvbmVudFR5cGUiIHN0cnVjdHVyYWwgcHJvcGVydHkgb2YgdGhpcyBub2RlIHR5cGUgKGNo
aWxkIHR5cGU6IHtAbGluayBUeXBlfSkuCkBAIC00MSwxMiArNDMsMTggQEAKIAkJbmV3IENoaWxk
UHJvcGVydHlEZXNjcmlwdG9yKEFycmF5VHlwZS5jbGFzcywgImNvbXBvbmVudFR5cGUiLCBUeXBl
LmNsYXNzLCBNQU5EQVRPUlksIENZQ0xFX1JJU0spOyAvLyROT04tTkxTLTEkCiAKIAkvKioKLQkg
KiBUaGUgImFubm90YXRpb25zIiBzdHJ1Y3R1cmFsIHByb3BlcnR5IG9mIHRoaXMgbm9kZSB0eXBl
IChlbGVtZW50IHR5cGU6IHtAbGluayBBbm5vdGF0aW9ufSkuCisJICogVGhlICJlbGVtZW50VHlw
ZSIgc3RydWN0dXJhbCBwcm9wZXJ0eSBvZiB0aGlzIG5vZGUgdHlwZSAoY2hpbGQgdHlwZToge0Bs
aW5rIFR5cGV9KS4KIAkgKiBAc2luY2UgMy45IEJFVEFfSkFWQTgKIAkgKi8KLQlwdWJsaWMgc3Rh
dGljIGZpbmFsIENoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBBTk5PVEFUSU9OU19QUk9QRVJU
WSA9Ci0JCQlpbnRlcm5hbEFubm90YXRpb25zUHJvcGVydHlGYWN0b3J5KEFycmF5VHlwZS5jbGFz
cyk7CisJcHVibGljIHN0YXRpYyBmaW5hbCBDaGlsZFByb3BlcnR5RGVzY3JpcHRvciBFTEVNRU5U
X1RZUEVfUFJPUEVSVFkgPQorCQkJbmV3IENoaWxkUHJvcGVydHlEZXNjcmlwdG9yKEFycmF5VHlw
ZS5jbGFzcywgImVsZW1lbnRUeXBlIiwgVHlwZS5jbGFzcywgTUFOREFUT1JZLCBDWUNMRV9SSVNL
KTsgLy8kTk9OLU5MUy0xJAkKIAkKKwkvKioKKwkgKiBUaGUgImRpbWVuc2lvbnMiIHN0cnVjdHVy
YWwgcHJvcGVydHkgb2YgdGhpcyBub2RlIHR5cGUgKGVsZW1lbnQgdHlwZToge0BsaW5rIEFubm90
YXRpb259KS4KKwkgKiBAc2luY2UgMy45IEJFVEFfSkFWQTgKKwkgKi8KKwlwdWJsaWMgc3RhdGlj
IGZpbmFsIENoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBESU1FTlNJT05TX1BST1BFUlRZID0K
KwkJCW5ldyBDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IoQXJyYXlUeXBlLmNsYXNzLCAiZGlt
ZW5zaW9ucyIsIEV4dHJhRGltZW5zaW9uLmNsYXNzLCBDWUNMRV9SSVNLKTsgLy8kTk9OLU5MUy0x
JAkKIAkvKioKIAkgKiBBIGxpc3Qgb2YgcHJvcGVydHkgZGVzY3JpcHRvcnMgKGVsZW1lbnQgdHlw
ZToKIAkgKiB7QGxpbmsgU3RydWN0dXJhbFByb3BlcnR5RGVzY3JpcHRvcn0pLApAQCAtNjksOCAr
NzcsOCBAQAogCiAJCXByb3BlcnR5TGlzdCA9IG5ldyBBcnJheUxpc3QoMyk7CiAJCWNyZWF0ZVBy
b3BlcnR5TGlzdChBcnJheVR5cGUuY2xhc3MsIHByb3BlcnR5TGlzdCk7Ci0JCWFkZFByb3BlcnR5
KENPTVBPTkVOVF9UWVBFX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOwotCQlhZGRQcm9wZXJ0eShB
Tk5PVEFUSU9OU19QUk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKKwkJYWRkUHJvcGVydHkoRUxFTUVO
VF9UWVBFX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOworCQlhZGRQcm9wZXJ0eShESU1FTlNJT05T
X1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOwogCQlQUk9QRVJUWV9ERVNDUklQVE9SU184XzAgPSBy
ZWFwUHJvcGVydHlMaXN0KHByb3BlcnR5TGlzdCk7CiAJfQogCkBAIC05OCw5ICsxMDYsMjUgQEAK
IAogCS8qKgogCSAqIFRoZSBjb21wb25lbnQgdHlwZTsgbGF6aWx5IGluaXRpYWxpemVkOyBkZWZh
dWx0cyB0byBhIHNpbXBsZSB0eXBlIHdpdGgKLQkgKiBhbiB1bnNwZWNpZmllZCwgYnV0IGxlZ2Fs
LCBuYW1lLgorCSAqIGFuIHVuc3BlY2lmaWVkLCBidXQgbGVnYWwsIG5hbWUuIE51bGwgZnJvbSBK
TFM4IG9ud2FyZHMuCiAJICovCiAJcHJpdmF0ZSBUeXBlIGNvbXBvbmVudFR5cGUgPSBudWxsOwor
CisJLyoqCisJICogVGhlIGVsZW1lbnQgdHlwZTsgbGF6aWx5IGluaXRpYWxpemVkOyBkZWZhdWx0
cyB0byBhIHNpbXBsZSB0eXBlIHdpdGgKKwkgKiBhbiB1bnNwZWNpZmllZCwgYnV0IGxlZ2FsLCBu
YW1lLgorCSAqLworCXByaXZhdGUgVHlwZSBlbGVtZW50VHlwZSA9IG51bGw7CisKKwkvKioKKwkg
KiBMaXN0IG9mIGV4dHJhIGRpbWVuc2lvbnMgdGhpcyBub2RlIGhhcyB3aXRoIG9wdGlvbmFsIGFu
bm90YXRpb25zCisJICogKGVsZW1lbnQgdHlwZToge0BsaW5rIEV4dHJhRGltZW5zaW9ufSkuCisJ
ICogTnVsbCBiZWZvcmUgSkxTOC4gQWRkZWQgaW4gSkxTODsgZGVmYXVsdHMgdG8gYSBsaXN0IHdp
dGggb25lIGVsZW1lbnQKKwkgKiAoc2VlIGNvbnN0cnVjdG9yKS4KKwkgKiAKKwkgKiBAc2luY2Ug
My45IEJFVEFfSkFWQTgKKwkgKi8KKwlwcml2YXRlIEFTVE5vZGUuTm9kZUxpc3QgZGltZW5zaW9u
cyA9IG51bGw7CiAKIAkvKioKIAkgKiBDcmVhdGVzIGEgbmV3IHVucGFyZW50ZWQgbm9kZSBmb3Ig
YW4gYXJyYXkgdHlwZSBvd25lZCBieSB0aGUgZ2l2ZW4gQVNULgpAQCAtMTEzLDE0ICsxMzcsMzEg
QEAKIAkgKi8KIAlBcnJheVR5cGUoQVNUIGFzdCkgewogCQlzdXBlcihhc3QpOworCQlpZiAoYXN0
LmFwaUxldmVsID49IEFTVC5KTFM4KSB7CisJCQl0aGlzLmRpbWVuc2lvbnMgPSBuZXcgQVNUTm9k
ZS5Ob2RlTGlzdChESU1FTlNJT05TX1BST1BFUlRZKTsKKwkJCS8vIHNpbmdsZSBkaW1lbnNpb24g
YXJyYXkgaXMgdGhlIGRlZmF1bHQKKwkJCXRoaXMuZGltZW5zaW9ucygpLmFkZCh0aGlzLmFzdC5u
ZXdFeHRyYURpbWVuc2lvbigpKTsKKwkJfQogCX0KIAotCS8qIChvbWl0IGphdmFkb2MgZm9yIHRo
aXMgbWV0aG9kKQotCSAqIE1ldGhvZCBkZWNsYXJlZCBvbiBBbm5vdGF0YWJsZVR5cGUuCi0JICog
QHNpbmNlIDMuOSBCRVRBX0pBVkE4Ci0JICovCi0JZmluYWwgQ2hpbGRMaXN0UHJvcGVydHlEZXNj
cmlwdG9yIGludGVybmFsQW5ub3RhdGlvbnNQcm9wZXJ0eSgpIHsKLQkJcmV0dXJuIEFOTk9UQVRJ
T05TX1BST1BFUlRZOworCS8qKgorCSogQ3JlYXRlcyBhIG5ldyB1bnBhcmVudGVkIG5vZGUgZm9y
IGFuIGFycmF5IHR5cGUgb3duZWQgYnkgdGhlIGdpdmVuIEFTVC4KKwkqIDxwPgorCSogTi5CLiBU
aGlzIGNvbnN0cnVjdG9yIGlzIHByaXZhdGUuCisJKiA8L3A+CisJKgorCSogQHBhcmFtIGFzdCB0
aGUgQVNUIHRoYXQgaXMgdG8gb3duIHRoaXMgbm9kZQorCSogQHBhcmFtIGRpbWVuc2lvbnMgbm8g
b2YgZGltZW5zaW9ucyAtIGNhbiBiZSB6ZXJvCisJKgorCSogQHNpbmNlIDMuOSBCRVRBX0pBVkE4
CisJKi8KKwlwcml2YXRlIEFycmF5VHlwZShBU1QgYXN0LCBpbnQgZGltZW5zaW9ucykgeworCQlz
dXBlcihhc3QpOworCQl1bnN1cHBvcnRlZEluMl8zXzQoKTsKKwkJdGhpcy5kaW1lbnNpb25zID0g
bmV3IEFTVE5vZGUuTm9kZUxpc3QoRElNRU5TSU9OU19QUk9QRVJUWSk7CisJCWZvciAoaW50IGkg
PSAwOyBpIDwgZGltZW5zaW9uczsgKytpKSB7CisJCQl0aGlzLmRpbWVuc2lvbnMoKS5hZGQodGhp
cy5hc3QubmV3RXh0cmFEaW1lbnNpb24oKSk7CisJCX0KIAl9CiAKIAkvKiAob21pdCBqYXZhZG9j
IGZvciB0aGlzIG1ldGhvZCkKQEAgLTEzNCw4ICsxNzUsOCBAQAogCSAqIE1ldGhvZCBkZWNsYXJl
ZCBvbiBBU1ROb2RlLgogCSAqLwogCWZpbmFsIExpc3QgaW50ZXJuYWxHZXRDaGlsZExpc3RQcm9w
ZXJ0eShDaGlsZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IgcHJvcGVydHkpIHsKLQkJaWYgKHByb3Bl
cnR5ID09IEFOTk9UQVRJT05TX1BST1BFUlRZKSB7Ci0JCQlyZXR1cm4gYW5ub3RhdGlvbnMoKTsK
KwkJaWYgKHByb3BlcnR5ID09IERJTUVOU0lPTlNfUFJPUEVSVFkpIHsKKwkJCXJldHVybiBkaW1l
bnNpb25zKCk7CiAJCX0KIAkJLy8gYWxsb3cgZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiB0byBmbGFn
IHRoZSBlcnJvcgogCQlyZXR1cm4gc3VwZXIuaW50ZXJuYWxHZXRDaGlsZExpc3RQcm9wZXJ0eShw
cm9wZXJ0eSk7CkBAIC0xNTAsNiArMTkxLDEzIEBACiAJCQkJcmV0dXJuIGdldENvbXBvbmVudFR5
cGUoKTsKIAkJCX0gZWxzZSB7CiAJCQkJc2V0Q29tcG9uZW50VHlwZSgoVHlwZSkgY2hpbGQpOwor
CQkJCXJldHVybiBudWxsOworCQkJfQorCQl9IGVsc2UgaWYgKHByb3BlcnR5ID09IEVMRU1FTlRf
VFlQRV9QUk9QRVJUWSkgeworCQkJaWYgKGdldCkgeworCQkJCXJldHVybiBnZXRFbGVtZW50VHlw
ZSgpOworCQkJfSBlbHNlIHsKKwkJCQlzZXRFbGVtZW50VHlwZSgoVHlwZSkgY2hpbGQpOwogCQkJ
CXJldHVybiBudWxsOwogCQkJfQogCQl9CkBAIC0xNjgsMTMgKzIxNiwxNyBAQAogCSAqIE1ldGhv
ZCBkZWNsYXJlZCBvbiBBU1ROb2RlLgogCSAqLwogCUFTVE5vZGUgY2xvbmUwKEFTVCB0YXJnZXQp
IHsKLQkJQXJyYXlUeXBlIHJlc3VsdCA9IG5ldyBBcnJheVR5cGUodGFyZ2V0KTsKLQkJcmVzdWx0
LnNldFNvdXJjZVJhbmdlKGdldFN0YXJ0UG9zaXRpb24oKSwgZ2V0TGVuZ3RoKCkpOwotCQlyZXN1
bHQuc2V0Q29tcG9uZW50VHlwZSgoVHlwZSkgZ2V0Q29tcG9uZW50VHlwZSgpLmNsb25lKHRhcmdl
dCkpOwotCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwgPj0gQVNULkpMUzgpIHsKLQkJCXJlc3VsdC5h
bm5vdGF0aW9ucygpLmFkZEFsbCgKLQkJCQkJQVNUTm9kZS5jb3B5U3VidHJlZXModGFyZ2V0LCBh
bm5vdGF0aW9ucygpKSk7CisJCUFycmF5VHlwZSByZXN1bHQ7CisJCWlmICh0aGlzLmFzdC5hcGlM
ZXZlbCA8IEFTVC5KTFM4KSB7CisJCQlyZXN1bHQgPSBuZXcgQXJyYXlUeXBlKHRhcmdldCk7CisJ
CQlyZXN1bHQuc2V0Q29tcG9uZW50VHlwZSgoVHlwZSkgZ2V0Q29tcG9uZW50VHlwZSgpLmNsb25l
KHRhcmdldCkpOwkJCQorCQl9IGVsc2UgeworCQkJcmVzdWx0ID0gbmV3IEFycmF5VHlwZSh0YXJn
ZXQsIDApOworCQkJcmVzdWx0LnNldEVsZW1lbnRUeXBlKChUeXBlKSBnZXRFbGVtZW50VHlwZSgp
LmNsb25lKHRhcmdldCkpOworCQkJcmVzdWx0LmRpbWVuc2lvbnMoKS5hZGRBbGwoCisJCQkJCUFT
VE5vZGUuY29weVN1YnRyZWVzKHRhcmdldCwgZGltZW5zaW9ucygpKSk7CiAJCX0KKwkJcmVzdWx0
LnNldFNvdXJjZVJhbmdlKGdldFN0YXJ0UG9zaXRpb24oKSwgZ2V0TGVuZ3RoKCkpOwogCQlyZXR1
cm4gcmVzdWx0OwogCX0KIApAQCAtMTkzLDkgKzI0NSwxMSBAQAogCQlib29sZWFuIHZpc2l0Q2hp
bGRyZW4gPSB2aXNpdG9yLnZpc2l0KHRoaXMpOwogCQlpZiAodmlzaXRDaGlsZHJlbikgewogCQkJ
Ly8gdmlzaXQgY2hpbGRyZW4gaW4gbm9ybWFsIGxlZnQgdG8gcmlnaHQgcmVhZGluZyBvcmRlcgot
CQkJYWNjZXB0Q2hpbGQodmlzaXRvciwgZ2V0Q29tcG9uZW50VHlwZSgpKTsKLQkJCWlmICh0aGlz
LmFzdC5hcGlMZXZlbCA+PSBBU1QuSkxTOCkgewotCQkJCWFjY2VwdENoaWxkcmVuKHZpc2l0b3Is
IHRoaXMuYW5ub3RhdGlvbnMpOworCQkJaWYgKHRoaXMuYXN0LmFwaUxldmVsIDwgQVNULkpMUzgp
IHsKKwkJCQlhY2NlcHRDaGlsZCh2aXNpdG9yLCBnZXRDb21wb25lbnRUeXBlKCkpOwkJCQkKKwkJ
CX0gZWxzZSB7CisJCQkJYWNjZXB0Q2hpbGQodmlzaXRvciwgZ2V0RWxlbWVudFR5cGUoKSk7CisJ
CQkJYWNjZXB0Q2hpbGRyZW4odmlzaXRvciwgdGhpcy5kaW1lbnNpb25zKTsKIAkJCX0KIAkJfQog
CQl2aXNpdG9yLmVuZFZpc2l0KHRoaXMpOwpAQCAtMjA2LDggKzI2MCwxMCBAQAogCSAqIG1heSBi
ZSBhbm90aGVyIGFycmF5IHR5cGUuCiAJICoKIAkgKiBAcmV0dXJuIHRoZSBjb21wb25lbnQgdHlw
ZSBub2RlCisJICogQGRlcHJlY2F0ZWQgZnJvbSBKTFM4IGFuZCBsYXRlciwgdGhlIHJlY3Vyc2l2
ZSBzdHJ1Y3R1cmUgaXMgbm90IHZhbGlkCiAJICovCiAJcHVibGljIFR5cGUgZ2V0Q29tcG9uZW50
VHlwZSgpIHsKKwkJc3VwcG9ydGVkT25seUluMl8zXzQoKTsKIAkJaWYgKHRoaXMuY29tcG9uZW50
VHlwZSA9PSBudWxsKSB7CiAJCQkvLyBsYXp5IGluaXQgbXVzdCBiZSB0aHJlYWQtc2FmZSBmb3Ig
cmVhZGVycwogCQkJc3luY2hyb25pemVkICh0aGlzKSB7CkBAIC0yMzIsOCArMjg4LDEwIEBACiAJ
ICogPGxpPnRoZSBub2RlIGFscmVhZHkgaGFzIGEgcGFyZW50PC9saT4KIAkgKiA8bGk+YSBjeWNs
ZSBpbiB3b3VsZCBiZSBjcmVhdGVkPC9saT4KIAkgKiA8L3VsPgorCSAqIEBkZXByZWNhdGVkIGZy
b20gSkxTOCBhbmQgbGF0ZXIsIHRoZSByZWN1cnNpdmUgc3RydWN0dXJlIGlzIG5vdCB2YWxpZAog
CSAqLwogCXB1YmxpYyB2b2lkIHNldENvbXBvbmVudFR5cGUoVHlwZSBjb21wb25lbnRUeXBlKSB7
CisJCXN1cHBvcnRlZE9ubHlJbjJfM180KCk7CiAJCWlmIChjb21wb25lbnRUeXBlID09IG51bGwp
IHsKIAkJCXRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oKTsKIAkJfQpAQCAtMjQ4
LDQzICszMDYsMTE4IEBACiAJICogbmV2ZXIgYW4gYXJyYXkgdHlwZS4KIAkgKiA8cD4KIAkgKiBU
aGlzIGlzIGEgY29udmVuaWVuY2UgbWV0aG9kIHRoYXQgZGVzY2VuZHMgYSBjaGFpbiBvZiBuZXN0
ZWQgYXJyYXkgdHlwZXMKLQkgKiB1bnRpbCBpdCByZWFjaGVzIGEgbm9uLWFycmF5IHR5cGUuCisJ
ICogdW50aWwgaXQgcmVhY2hlcyBhIG5vbi1hcnJheSB0eXBlIHVudGlsIEpMUzQuIEZyb20gSkxT
OCBhbmQgbGF0ZXIsIHRoaXMgcmV0dXJucyB0aGUKKwkgKiBlbGVtZW50IHR5cGUgZGlyZWN0bHku
CiAJICogPC9wPgogCSAqCi0JICogQHJldHVybiB0aGUgY29tcG9uZW50IHR5cGUgbm9kZQorCSAq
IEByZXR1cm4gdGhlIGVsZW1lbnQgdHlwZSBub2RlCiAJICovCiAJcHVibGljIFR5cGUgZ2V0RWxl
bWVudFR5cGUoKSB7Ci0JCVR5cGUgdCA9IGdldENvbXBvbmVudFR5cGUoKTsKLQkJd2hpbGUgKHQu
aXNBcnJheVR5cGUoKSkgewotCQkJdCA9ICgoQXJyYXlUeXBlKSB0KS5nZXRDb21wb25lbnRUeXBl
KCk7CisJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsKKwkJCVR5cGUgdCA9
IGdldENvbXBvbmVudFR5cGUoKTsKKwkJCXdoaWxlICh0LmlzQXJyYXlUeXBlKCkpIHsKKwkJCQl0
ID0gKChBcnJheVR5cGUpIHQpLmdldENvbXBvbmVudFR5cGUoKTsKKwkJCX0KKwkJCXJldHVybiB0
OwogCQl9Ci0JCXJldHVybiB0OworCQlpZiAodGhpcy5lbGVtZW50VHlwZSA9PSBudWxsKSB7CisJ
CQkvLyBsYXp5IGluaXQgbXVzdCBiZSB0aHJlYWQtc2FmZSBmb3IgcmVhZGVycworCQkJc3luY2hy
b25pemVkICh0aGlzKSB7CisJCQkJaWYgKHRoaXMuZWxlbWVudFR5cGUgPT0gbnVsbCkgeworCQkJ
CQlwcmVMYXp5SW5pdCgpOworCQkJCQl0aGlzLmVsZW1lbnRUeXBlID0gbmV3IFNpbXBsZVR5cGUo
dGhpcy5hc3QpOworCQkJCQlwb3N0TGF6eUluaXQodGhpcy5lbGVtZW50VHlwZSwgRUxFTUVOVF9U
WVBFX1BST1BFUlRZKTsKKwkJCQl9CisJCQl9CisJCX0KKwkJcmV0dXJuIHRoaXMuZWxlbWVudFR5
cGU7CisJfQorCisJLyoqCisJICogU2V0cyB0aGUgZWxlbWVudCB0eXBlIG9mIHRoZSBhcnJheS4K
KwkgKgorCSAqIEBwYXJhbSBjaGlsZCB0aGUgbmV3IHR5cGUKKwkgKiBAZXhjZXB0aW9uIElsbGVn
YWxBcmd1bWVudEV4Y2VwdGlvbiBpZjoKKwkgKiA8dWw+CisJICogPGxpPnRoZSBub2RlIGJlbG9u
Z3MgdG8gYSBkaWZmZXJlbnQgQVNUPC9saT4KKwkgKiA8bGk+dGhlIG5vZGUgYWxyZWFkeSBoYXMg
YSBwYXJlbnQ8L2xpPgorCSAqIDxsaT50aGUgbm9kZSBpcyBhbiBhcnJheSB0eXBlPC9saT4KKwkg
KiA8L3VsPgorCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAorCSAqLworCXB1YmxpYyB2b2lkIHNl
dEVsZW1lbnRUeXBlKFR5cGUgY2hpbGQpIHsKKwkJaWYgKGNoaWxkID09IG51bGwgfHwgY2hpbGQg
aW5zdGFuY2VvZiBBcnJheVR5cGUpIHsKKwkJCXRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNl
cHRpb24oKTsKKwkJfQorCQlBU1ROb2RlIG9sZENoaWxkID0gdGhpcy5lbGVtZW50VHlwZTsKKwkJ
cHJlUmVwbGFjZUNoaWxkKG9sZENoaWxkLCBjaGlsZCwgRUxFTUVOVF9UWVBFX1BST1BFUlRZKTsK
KwkJdGhpcy5lbGVtZW50VHlwZSA9IGNoaWxkOworCQlwb3N0UmVwbGFjZUNoaWxkKG9sZENoaWxk
LCBjaGlsZCwgRUxFTUVOVF9UWVBFX1BST1BFUlRZKTsKIAl9CiAKIAkvKioKIAkgKiBSZXR1cm5z
IHRoZSBudW1iZXIgb2YgZGltZW5zaW9ucyBpbiB0aGlzIGFycmF5IHR5cGUuCiAJICogPHA+CiAJ
ICogVGhpcyBpcyBhIGNvbnZlbmllbmNlIG1ldGhvZCB0aGF0IGRlc2NlbmRzIGEgY2hhaW4gb2Yg
bmVzdGVkIGFycmF5IHR5cGVzCi0JICogdW50aWwgaXQgcmVhY2hlcyBhIG5vbi1hcnJheSB0eXBl
LgorCSAqIHVudGlsIGl0IHJlYWNoZXMgYSBub24tYXJyYXkgdHlwZSAodW50aWwgSkxTNCkuIEZy
b20gSkxTOCBvbndhcmRzLCAKKwkgKiB0aGlzIHJldHVybnMgdGhlIHNpemUgb2YgdGhlIGRpbWVu
c2lvbnMgbGlzdC4KIAkgKiA8L3A+CiAJICoKIAkgKiBAcmV0dXJuIHRoZSBudW1iZXIgb2YgZGlt
ZW5zaW9ucyAoYWx3YXlzIHBvc2l0aXZlKQogCSAqLwogCXB1YmxpYyBpbnQgZ2V0RGltZW5zaW9u
cygpIHsKLQkJVHlwZSB0ID0gZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlpbnQgZGltZW5zaW9ucyA9
IDE7IC8vIGFsd2F5cyBpbmNsdWRlIHRoaXMgYXJyYXkgdHlwZQotCQl3aGlsZSAodC5pc0FycmF5
VHlwZSgpKSB7Ci0JCQlkaW1lbnNpb25zKys7Ci0JCQl0ID0gKChBcnJheVR5cGUpIHQpLmdldENv
bXBvbmVudFR5cGUoKTsKKwkJaWYgKHRoaXMuYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgewor
CQkJVHlwZSB0ID0gZ2V0Q29tcG9uZW50VHlwZSgpOworCQkJaW50IGRpbWVuc2lvbiA9IDE7IC8v
IGFsd2F5cyBpbmNsdWRlIHRoaXMgYXJyYXkgdHlwZQorCQkJd2hpbGUgKHQuaXNBcnJheVR5cGUo
KSkgeworCQkJCWRpbWVuc2lvbisrOworCQkJCXQgPSAoKEFycmF5VHlwZSkgdCkuZ2V0Q29tcG9u
ZW50VHlwZSgpOworCQkJfQorCQkJcmV0dXJuIGRpbWVuc2lvbjsJCQkKIAkJfQotCQlyZXR1cm4g
ZGltZW5zaW9uczsKKwkJcmV0dXJuIGRpbWVuc2lvbnMoKS5zaXplKCk7CisJfQorCisJLyoqCisJ
ICogUmV0dXJucyB0aGUgZGltZW5zaW9uIGQgaW4gdGhpcyBhcnJheSB0eXBlLgorCSAqIDxwPgor
CSAqIFRoaXMgaXMgYSBjb252ZW5pZW5jZSBtZXRob2QgdGhhdCByZXR1cm5zIHRoZSBkaW1lbnNp
b24gYXQgdGhlIGdpdmVuIG51bWJlciBkLgorCSAqIDwvcD4KKwkgKiBAcGFyYW0gZCBkaW1lbnNp
b24gbm8KKwkgKiBAcmV0dXJuIERpbWVuc2lvbiBhdCBudW1iZXIgZCwgbnVsbCBpZiBkIG91dCBv
ZiByYW5nZQorCSAqIAorCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAorCSAqLworCXB1YmxpYyBF
eHRyYURpbWVuc2lvbiBnZXREaW1lbnNpb25ObyhpbnQgZCkgeworCQl1bnN1cHBvcnRlZEluMl8z
XzQoKTsKKwkJRXh0cmFEaW1lbnNpb24gZXh0cmFEaW1lbnNpb24gPSBudWxsOworCQlpbnQgbiA9
IGdldERpbWVuc2lvbnMoKSAtIDE7CisJCWlmIChkID49IDAgJiYgZCA8PSBuKSB7CisJCQlleHRy
YURpbWVuc2lvbiA9IChFeHRyYURpbWVuc2lvbikgZGltZW5zaW9ucygpLmdldChuIC0gZCk7CisJ
CX0KKwkJcmV0dXJuIGV4dHJhRGltZW5zaW9uOworCX0KKworCS8qKgorCSAqIFJldHVybnMgdGhl
IGxpdmUgb3JkZXJlZCBsaXN0IG9mIGRpbWVuc2lvbnMgd2l0aCBvcHRpb25hbCBhbm5vdGF0aW9u
cyAoYWRkZWQgaW4gSkxTOCBBUEkpLgorCSAqIAorCSAqIEByZXR1cm4gdGhlIGxpdmUgbGlzdCBv
ZiBkaW1lbnNpb25zIHdpdGggb3B0aW9uYWwgYW5ub3RhdGlvbnMgKGVsZW1lbnQgdHlwZToge0Bs
aW5rIEV4dHJhRGltZW5zaW9ufSkKKwkgKiBAZXhjZXB0aW9uIFVuc3VwcG9ydGVkT3BlcmF0aW9u
RXhjZXB0aW9uIGlmIHRoaXMgb3BlcmF0aW9uIGlzIHVzZWQgYmVsb3cgSkxTOAorCSAqIEBzaW5j
ZSAzLjkgQkVUQV9KQVZBOAorCSAqLworCXB1YmxpYyBMaXN0IGRpbWVuc2lvbnMoKSB7CisJCS8v
IG1vcmUgZWZmaWNpZW50IHRoYW4ganVzdCBjYWxsaW5nIHVuc3VwcG9ydGVkSW4yXzNfNCgpIHRv
IGNoZWNrCisJCWlmICh0aGlzLmRpbWVuc2lvbnMgPT0gbnVsbCkgeworCQkJdW5zdXBwb3J0ZWRJ
bjJfM180KCk7CisJCX0KKwkJcmV0dXJuIHRoaXMuZGltZW5zaW9uczsKIAl9CiAKIAkvKiAob21p
dCBqYXZhZG9jIGZvciB0aGlzIG1ldGhvZCkKIAkgKiBNZXRob2QgZGVjbGFyZWQgb24gQVNUTm9k
ZS4KIAkgKi8KIAlpbnQgbWVtU2l6ZSgpIHsKLQkJcmV0dXJuIEJBU0VfTk9ERV9TSVpFICsgMiAq
IDQ7CisJCXJldHVybiBCQVNFX05PREVfU0laRSArIDMgKiA0OwogCX0KIAogCS8qIChvbWl0IGph
dmFkb2MgZm9yIHRoaXMgbWV0aG9kKQpAQCAtMjkzLDggKzQyNiw5IEBACiAJaW50IHRyZWVTaXpl
KCkgewogCQlyZXR1cm4KIAkJCW1lbVNpemUoKQotCQkJKyAodGhpcy5jb21wb25lbnRUeXBlID09
IG51bGwgPyAwIDogZ2V0Q29tcG9uZW50VHlwZSgpLnRyZWVTaXplKCkpCi0JCQkrICh0aGlzLmFu
bm90YXRpb25zID09IG51bGwgPyAwIDogdGhpcy5hbm5vdGF0aW9ucy5saXN0U2l6ZSgpKTsKKwkJ
CSsgKHRoaXMuY29tcG9uZW50VHlwZSA9PSBudWxsID8gMCA6IGdldENvbXBvbmVudFR5cGUoKS50
cmVlU2l6ZSgpCisJCQkrICh0aGlzLmRpbWVuc2lvbnMgPT0gbnVsbCA/IDAgOiB0aGlzLmRpbWVu
c2lvbnMubGlzdFNpemUoKSkKKwkJCSsgKHRoaXMuZWxlbWVudFR5cGUgPT0gbnVsbCA/IDAgOiBn
ZXRFbGVtZW50VHlwZSgpLnRyZWVTaXplKCkpKTsKIAl9CiB9CiAKZGlmZiAtLWdpdCBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vTmFp
dmVBU1RGbGF0dGVuZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vTmFpdmVBU1RGbGF0dGVuZXIuamF2YQppbmRleCBiNzM1
ZGVhLi45OTM0OTU0IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL05haXZlQVNURmxhdHRlbmVyLmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2Rv
bS9OYWl2ZUFTVEZsYXR0ZW5lci5qYXZhCkBAIC0zNzAsMTIgKzM3MCwyNyBAQAogCSAqIEBzZWUg
QVNUVmlzaXRvciN2aXNpdChBcnJheVR5cGUpCiAJICovCiAJcHVibGljIGJvb2xlYW4gdmlzaXQo
QXJyYXlUeXBlIG5vZGUpIHsKLQkJbm9kZS5nZXRDb21wb25lbnRUeXBlKCkuYWNjZXB0KHRoaXMp
OwotCQl2aXNpdFR5cGVBbm5vdGF0aW9ucyhub2RlKTsKLQkJdGhpcy5idWZmZXIuYXBwZW5kKCJb
XSIpOy8vJE5PTi1OTFMtMSQKKwkJaWYgKG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA8IEFTVC5K
TFM4KSB7CisJCQlnZXRBcnJheVR5cGVDb21wb25lbnRUeXBlKG5vZGUpOworCQkJdGhpcy5idWZm
ZXIuYXBwZW5kKCJbXSIpOy8vJE5PTi1OTFMtMSQKKwkJfSBlbHNlIHsKKwkJCW5vZGUuZ2V0RWxl
bWVudFR5cGUoKS5hY2NlcHQodGhpcyk7CisJCQlMaXN0IGRpbWVuc2lvbnMgPSBub2RlLmRpbWVu
c2lvbnMoKTsKKwkJCWZvciAoaW50IGkgPSAwOyBpIDwgZGltZW5zaW9ucy5zaXplKCkgOyBpKysp
IHsKKwkJCQlFeHRyYURpbWVuc2lvbiBhRGltZW5zaW9uID0gKEV4dHJhRGltZW5zaW9uKSBkaW1l
bnNpb25zLmdldChpKTsKKwkJCQlhRGltZW5zaW9uLmFjY2VwdCh0aGlzKTsKKwkJCX0KKwkJfQog
CQlyZXR1cm4gZmFsc2U7CiAJfQogCisJLyoqCisJICogQGRlcHJlY2F0ZWQKKwkgKi8KKwlwcml2
YXRlIHZvaWQgZ2V0QXJyYXlUeXBlQ29tcG9uZW50VHlwZShBcnJheVR5cGUgbm9kZSkgeworCQlu
b2RlLmdldENvbXBvbmVudFR5cGUoKS5hY2NlcHQodGhpcyk7CisJfQorCiAJLyoKIAkgKiBAc2Vl
IEFTVFZpc2l0b3IjdmlzaXQoQXNzZXJ0U3RhdGVtZW50KQogCSAqLwpkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9y
ZXdyaXRlL0FTVFJld3JpdGVBbmFseXplci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9t
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9yZXdyaXRlL0FTVFJld3JpdGVBbmFs
eXplci5qYXZhCmluZGV4IDZjZjQ0YTkuLjhiYTMxMWEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNl
LmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9B
U1RSZXdyaXRlQW5hbHl6ZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL3Jld3JpdGUvQVNUUmV3cml0ZUFuYWx5emVy
LmphdmEKQEAgLTIwNTgsNiArMjA1OCw3IEBACiAKIAkJVGV4dEVkaXRHcm91cCBlZGl0R3JvdXA9
IG51bGw7CiAJCVJld3JpdGVFdmVudCB0eXBlRXZlbnQ9IGdldEV2ZW50KG5vZGUsIEFycmF5Q3Jl
YXRpb24uVFlQRV9QUk9QRVJUWSk7CisJCWJvb2xlYW4gbGV2ZWxMZXNzVGhhbjggPSBub2RlLmdl
dEFTVCgpLmFwaUxldmVsKCkgPCBBU1QuSkxTOCA/IHRydWUgOiBmYWxzZTsKIAkJaWYgKHR5cGVF
dmVudCAhPSBudWxsICYmIHR5cGVFdmVudC5nZXRDaGFuZ2VLaW5kKCkgPT0gUmV3cml0ZUV2ZW50
LlJFUExBQ0VEKSB7IC8vIGNoYW5nZWQgYXJyYXl0eXBlIGNhbiBoYXZlIGRpZmZlcmVudCBkaW1l
bnNpb24gb3IgdHlwZSBuYW1lCiAJCQlyZXBsYWNpbmdUeXBlPSAoQXJyYXlUeXBlKSB0eXBlRXZl
bnQuZ2V0TmV3VmFsdWUoKTsKIAkJCWVkaXRHcm91cD0gZ2V0RWRpdEdyb3VwKHR5cGVFdmVudCk7
CkBAIC0yMDc3LDE1ICsyMDc4LDE4IEBACiAJCQlSZXdyaXRlRXZlbnQgZGltRXZlbnQ9IGdldEV2
ZW50KG5vZGUsIEFycmF5Q3JlYXRpb24uRElNRU5TSU9OU19QUk9QRVJUWSk7CiAJCQlib29sZWFu
IGhhc0RpbWVuc2lvbkNoYW5nZXM9IChkaW1FdmVudCAhPSBudWxsICYmIGRpbUV2ZW50LmdldENo
YW5nZUtpbmQoKSAhPSBSZXdyaXRlRXZlbnQuVU5DSEFOR0VEKTsKIAkJCVJld3JpdGVFdmVudFtd
IGV2ZW50cz0gaGFzRGltZW5zaW9uQ2hhbmdlcyA/IGRpbUV2ZW50LmdldENoaWxkcmVuKCkgOiBu
dWxsOwotCQkJQXJyYXlUeXBlIGN1cnJlbnRMZXZlbD0gKEFycmF5VHlwZSkgcmVwbGFjaW5nVHlw
ZS5nZXRFbGVtZW50VHlwZSgpLmdldFBhcmVudCgpOworCQkJQXJyYXlUeXBlIGN1cnJlbnRMZXZl
bCA9IGxldmVsTGVzc1RoYW44ID8gKEFycmF5VHlwZSkgcmVwbGFjaW5nVHlwZS5nZXRFbGVtZW50
VHlwZSgpLmdldFBhcmVudCgpIDogbnVsbDsKKwkJCWludCBjdXJyZW50RGltZW5zaW9uID0gbGV2
ZWxMZXNzVGhhbjggPyAtMSA6IDA7CisJCQlpbnQgcmVwbGFjaW5nVHlwZURpbWVuc2lvbnMgPSBy
ZXBsYWNpbmdUeXBlLmdldERpbWVuc2lvbnMoKTsKIAkJCWludCBpPTAsIGRpbVNpemU9IChldmVu
dHMgPT0gbnVsbCkgPyAwIDogZXZlbnRzLmxlbmd0aDsKIAkJCVR5cGUgZWxlbWVudFR5cGU9IGFy
cmF5VHlwZS5nZXRFbGVtZW50VHlwZSgpOwogCQkJaW50IG9mZnNldD0gZWxlbWVudFR5cGUuZ2V0
U3RhcnRQb3NpdGlvbigpICsgZWxlbWVudFR5cGUuZ2V0TGVuZ3RoKCk7Ci0JCQl3aGlsZShjdXJy
ZW50TGV2ZWwgIT0gbnVsbCkgewotCQkJCWlmIChub2RlLmdldEFTVCgpLmFwaUxldmVsKCkgPj0g
QVNULkpMUzgpIHsKLQkJCQkJcmV3cml0ZVR5cGVBbm5vdGF0aW9ucyhjdXJyZW50TGV2ZWwsIEFy
cmF5VHlwZS5BTk5PVEFUSU9OU19QUk9QRVJUWSwgb2Zmc2V0KTsKLQkJCQl9CisJCQl3aGlsZShj
dXJyZW50TGV2ZWwgIT0gbnVsbCB8fCBjdXJyZW50RGltZW5zaW9uICE9IC0xKSB7CiAJCQkJaWYg
KGkgPCBkaW1TaXplKSB7CisJCQkJCWlmICghbGV2ZWxMZXNzVGhhbjgpIHsKKwkJCQkJCUV4dHJh
RGltZW5zaW9uIGRpbSA9IChFeHRyYURpbWVuc2lvbikgcmVwbGFjaW5nVHlwZS5kaW1lbnNpb25z
KCkuZ2V0KGkpOworCQkJCQkJcmV3cml0ZVR5cGVBbm5vdGF0aW9ucyhkaW0sIEV4dHJhRGltZW5z
aW9uLkFOTk9UQVRJT05TX1BST1BFUlRZLCBvZmZzZXQpOworCQkJCQl9CiAJCQkJCSBvZmZzZXQ9
IGdldFNjYW5uZXIoKS5nZXRUb2tlbkVuZE9mZnNldChUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVM
QlJBQ0tFVCwgb2Zmc2V0KTsKIAkJCQkJaWYgKGhhc0RpbWVuc2lvbkNoYW5nZXMpIHsKIAkJCQkJ
CVJld3JpdGVFdmVudCBldmVudD0gZXZlbnRzW2ldOwpAQCAtMjEyMCwxMyArMjEyNCwzMyBAQAog
CQkJCQkJb2Zmc2V0PSByZXRyaWV2ZVJpZ2h0QnJhY2tldEVuZFBvc2l0aW9uKG9mZnNldCwgMSwg
dHJ1ZSk7CiAJCQkJCX0KIAkJCQl9IGVsc2UgaWYgKGkgPCBuT2xkQnJhY2tldHMpIHsKKwkJCQkJ
aWYgKCFsZXZlbExlc3NUaGFuOCkgeworCQkJCQkJRXh0cmFEaW1lbnNpb24gZGltID0gKEV4dHJh
RGltZW5zaW9uKSByZXBsYWNpbmdUeXBlLmRpbWVuc2lvbnMoKS5nZXQoaSk7CisJCQkJCQlyZXdy
aXRlVHlwZUFubm90YXRpb25zKGRpbSwgRXh0cmFEaW1lbnNpb24uQU5OT1RBVElPTlNfUFJPUEVS
VFksIG9mZnNldCk7CisJCQkJCX0KIAkJCQkJb2Zmc2V0PSByZXRyaWV2ZVJpZ2h0QnJhY2tldEVu
ZFBvc2l0aW9uKG9mZnNldCwgMSwgZmFsc2UpOwogCQkJCX0gZWxzZSB7CisJCQkJCWlmICghbGV2
ZWxMZXNzVGhhbjgpIHsKKwkJCQkJCUV4dHJhRGltZW5zaW9uIGRpbSA9IChFeHRyYURpbWVuc2lv
bikgcmVwbGFjaW5nVHlwZS5kaW1lbnNpb25zKCkuZ2V0KGkpOworCQkJCQkJTGlzdCBhbm5vdGF0
aW9ucyA9IGRpbS5hbm5vdGF0aW9ucygpOworCQkJCQkJaWYgKGFubm90YXRpb25zICE9IG51bGwp
IHsKKwkJCQkJCQlmb3IgKGludCBqID0gMDsgaiA8IGFubm90YXRpb25zLnNpemUoKTsgaisrKSB7
CisJCQkJCQkJCUFubm90YXRpb24gYW5ub3RhdGlvbiA9IChBbm5vdGF0aW9uKSBhbm5vdGF0aW9u
cy5nZXQoaik7CisJCQkJCQkJCWRvVGV4dEluc2VydChvZmZzZXQsIGFubm90YXRpb24udG9TdHJp
bmcoKSArICIgIiwgZWRpdEdyb3VwKTsgLy8kTk9OLU5MUy0xJAorCQkJCQkJCX0KKwkJCQkJCQkK
KwkJCQkJCX0KKwkJCQkJfQogCQkJCQlkb1RleHRJbnNlcnQob2Zmc2V0LCAiW10iLCBlZGl0R3Jv
dXApOyAvLyROT04tTkxTLTEkCiAJCQkJfQogCQkJCWkrKzsKLQkJCQlpZiAoY3VycmVudExldmVs
ID09IHJlcGxhY2luZ1R5cGUpIGJyZWFrOwotCQkJCWN1cnJlbnRMZXZlbD0gKEFycmF5VHlwZSkg
Y3VycmVudExldmVsLmdldFBhcmVudCgpOworCQkJCWlmIChsZXZlbExlc3NUaGFuOCkgeworCQkJ
CQlpZiAoY3VycmVudExldmVsID09IHJlcGxhY2luZ1R5cGUpIGJyZWFrOworCQkJCQljdXJyZW50
TGV2ZWw9IChBcnJheVR5cGUpIGN1cnJlbnRMZXZlbC5nZXRQYXJlbnQoKTsKKwkJCQl9IGVsc2Ug
eworCQkJCQkrK2N1cnJlbnREaW1lbnNpb247CisJCQkJCWlmIChjdXJyZW50RGltZW5zaW9uID09
IHJlcGxhY2luZ1R5cGVEaW1lbnNpb25zKSBicmVhazsKKwkJCQl9CiAJCQl9CiAJCQlpZiAoaSA8
IG5PbGRCcmFja2V0cykgewogCQkJCWludCBlbmRQb3M9IHJldHJpZXZlUmlnaHRCcmFja2V0RW5k
UG9zaXRpb24ob2Zmc2V0LCBuT2xkQnJhY2tldHMgLSBpLCBmYWxzZSk7CkBAIC0yMTc1LDIxICsy
MTk5LDI5IEBACiAJfQogCiAJcHJpdmF0ZSBUeXBlIGdldEVsZW1lbnRUeXBlKEFycmF5VHlwZSBw
YXJlbnQpIHsKLQkJVHlwZSB0ID0gKFR5cGUpIGdldE9yaWdpbmFsVmFsdWUocGFyZW50LCBBcnJh
eVR5cGUuQ09NUE9ORU5UX1RZUEVfUFJPUEVSVFkpOwotCQl3aGlsZSAodC5pc0FycmF5VHlwZSgp
KSB7Ci0JCQl0ID0gKFR5cGUpIGdldE9yaWdpbmFsVmFsdWUodCwgQXJyYXlUeXBlLkNPTVBPTkVO
VF9UWVBFX1BST1BFUlRZKTsKKwkJaWYgKHBhcmVudC5nZXRBU1QoKS5hcGlMZXZlbCgpIDwgQVNU
LkpMUzgpIHsKKwkJCVR5cGUgdCA9IChUeXBlKSBnZXRPcmlnaW5hbFZhbHVlKHBhcmVudCwgQXJy
YXlUeXBlLkNPTVBPTkVOVF9UWVBFX1BST1BFUlRZKTsKKwkJCXdoaWxlICh0LmlzQXJyYXlUeXBl
KCkpIHsKKwkJCQl0ID0gKFR5cGUpIGdldE9yaWdpbmFsVmFsdWUodCwgQXJyYXlUeXBlLkNPTVBP
TkVOVF9UWVBFX1BST1BFUlRZKTsKKwkJCX0KKwkJCXJldHVybiB0OwogCQl9CisJCVR5cGUgdCA9
IChUeXBlKSBnZXRPcmlnaW5hbFZhbHVlKHBhcmVudCwgQXJyYXlUeXBlLkVMRU1FTlRfVFlQRV9Q
Uk9QRVJUWSk7CiAJCXJldHVybiB0OwogCX0KIAogCXByaXZhdGUgaW50IGdldERpbWVuc2lvbnMo
QXJyYXlUeXBlIHBhcmVudCkgewotCQlUeXBlIHQgPSAoVHlwZSkgZ2V0T3JpZ2luYWxWYWx1ZShw
YXJlbnQsIEFycmF5VHlwZS5DT01QT05FTlRfVFlQRV9QUk9QRVJUWSk7Ci0JCWludCBkaW1lbnNp
b25zID0gMTsgLy8gYWx3YXlzIGluY2x1ZGUgdGhpcyBhcnJheSB0eXBlCi0JCXdoaWxlICh0Lmlz
QXJyYXlUeXBlKCkpIHsKLQkJCWRpbWVuc2lvbnMrKzsKLQkJCXQgPSAoVHlwZSkgZ2V0T3JpZ2lu
YWxWYWx1ZSh0LCBBcnJheVR5cGUuQ09NUE9ORU5UX1RZUEVfUFJPUEVSVFkpOworCQlpZiAocGFy
ZW50LmdldEFTVCgpLmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgeworCQkJVHlwZSB0ID0gKFR5cGUp
IGdldE9yaWdpbmFsVmFsdWUocGFyZW50LCBBcnJheVR5cGUuQ09NUE9ORU5UX1RZUEVfUFJPUEVS
VFkpOworCQkJaW50IGRpbWVuc2lvbnMgPSAxOyAvLyBhbHdheXMgaW5jbHVkZSB0aGlzIGFycmF5
IHR5cGUKKwkJCXdoaWxlICh0LmlzQXJyYXlUeXBlKCkpIHsKKwkJCQlkaW1lbnNpb25zKys7CisJ
CQkJdCA9IChUeXBlKSBnZXRPcmlnaW5hbFZhbHVlKHQsIEFycmF5VHlwZS5DT01QT05FTlRfVFlQ
RV9QUk9QRVJUWSk7CisJCQl9CisJCQlyZXR1cm4gZGltZW5zaW9uczsKIAkJfQotCQlyZXR1cm4g
ZGltZW5zaW9uczsKKwkJTGlzdCBkaW1lbnNpb25zID0gKExpc3QpIGdldE9yaWdpbmFsVmFsdWUo
cGFyZW50LCBBcnJheVR5cGUuRElNRU5TSU9OU19QUk9QRVJUWSk7CisJCXJldHVybiBkaW1lbnNp
b25zLnNpemUoKTsKIAl9CiAKIAkvKiAobm9uLUphdmFkb2MpCkBAIC0yMjE0LDkgKzIyNDYsMTIg
QEAKIAkJaWYgKCFoYXNDaGlsZHJlbkNoYW5nZXMobm9kZSkpIHsKIAkJCXJldHVybiBkb1Zpc2l0
VW5jaGFuZ2VkQ2hpbGRyZW4obm9kZSk7CiAJCX0KLQkJaW50IHBvcyA9IHJld3JpdGVSZXF1aXJl
ZE5vZGUobm9kZSwgQXJyYXlUeXBlLkNPTVBPTkVOVF9UWVBFX1BST1BFUlRZKTsKLQkJaWYgKG5v
ZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA+PSBBU1QuSkxTOCkgewotCQkJcmV3cml0ZVR5cGVBbm5v
dGF0aW9ucyhub2RlLCBBcnJheVR5cGUuQU5OT1RBVElPTlNfUFJPUEVSVFksIHBvcyk7CisJCWlm
IChub2RlLmdldEFTVCgpLmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgeworCQkJcmV3cml0ZVJlcXVp
cmVkTm9kZShub2RlLCBBcnJheVR5cGUuQ09NUE9ORU5UX1RZUEVfUFJPUEVSVFkpOworCQl9IGVs
c2UgeworCQkJcmV3cml0ZVJlcXVpcmVkTm9kZShub2RlLCBBcnJheVR5cGUuRUxFTUVOVF9UWVBF
X1BST1BFUlRZKTsKKwkJCWludCBwb3MgPSAoKEV4dHJhRGltZW5zaW9uKSBub2RlLmRpbWVuc2lv
bnMoKS5nZXQoMCkpLmdldFN0YXJ0UG9zaXRpb24oKTsKKwkJCXJld3JpdGVOb2RlTGlzdChub2Rl
LCBBcnJheVR5cGUuRElNRU5TSU9OU19QUk9QRVJUWSwgcG9zLCBVdGlsLkVNUFRZX1NUUklORywg
VXRpbC5FTVBUWV9TVFJJTkcpOwogCQl9CiAJCXJldHVybiBmYWxzZTsKIAl9CmRpZmYgLS1naXQg
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUv
ZG9tL3Jld3JpdGUvQVNUUmV3cml0ZUZsYXR0ZW5lci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9yZXdyaXRlL0FTVFJld3Jp
dGVGbGF0dGVuZXIuamF2YQppbmRleCAyMGY2NmUzLi41MmFjZjM0IDEwMDY0NAotLS0gYS9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL3Jl
d3JpdGUvQVNUUmV3cml0ZUZsYXR0ZW5lci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9BU1RSZXdyaXRl
RmxhdHRlbmVyLmphdmEKQEAgLTIzNiwyMiArMjM2LDMwIEBACiAJCUFycmF5VHlwZSBhcnJheVR5
cGU9IChBcnJheVR5cGUpIGdldENoaWxkTm9kZShub2RlLCBBcnJheUNyZWF0aW9uLlRZUEVfUFJP
UEVSVFkpOwogCiAJCS8vIGdldCB0aGUgZWxlbWVudCB0eXBlIGFuZCBjb3VudCBkaW1lbnNpb25z
Ci0JCVR5cGUgZWxlbWVudFR5cGU9IChUeXBlKSBnZXRDaGlsZE5vZGUoYXJyYXlUeXBlLCBBcnJh
eVR5cGUuQ09NUE9ORU5UX1RZUEVfUFJPUEVSVFkpOwotCQlpbnQgZGltZW5zaW9ucz0gMTsgLy8g
YWx3YXlzIGluY2x1ZGUgdGhpcyBhcnJheSB0eXBlCi0JCXdoaWxlIChlbGVtZW50VHlwZS5pc0Fy
cmF5VHlwZSgpKSB7Ci0JCQlkaW1lbnNpb25zKys7Ci0JCQllbGVtZW50VHlwZSA9IChUeXBlKSBn
ZXRDaGlsZE5vZGUoZWxlbWVudFR5cGUsIEFycmF5VHlwZS5DT01QT05FTlRfVFlQRV9QUk9QRVJU
WSk7CisJCVR5cGUgZWxlbWVudFR5cGU7CisJCWludCBkaW1lbnNpb25zOworCQlpZiAobm9kZS5n
ZXRBU1QoKS5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsKKwkJCWVsZW1lbnRUeXBlID0gKFR5cGUp
IGdldENoaWxkTm9kZShhcnJheVR5cGUsIEFycmF5VHlwZS5DT01QT05FTlRfVFlQRV9QUk9QRVJU
WSk7CisJCQlkaW1lbnNpb25zID0gMTsgLy8gYWx3YXlzIGluY2x1ZGUgdGhpcyBhcnJheSB0eXBl
CisJCQl3aGlsZSAoZWxlbWVudFR5cGUuaXNBcnJheVR5cGUoKSkgeworCQkJCWRpbWVuc2lvbnMr
KzsKKwkJCQllbGVtZW50VHlwZSA9IChUeXBlKSBnZXRDaGlsZE5vZGUoZWxlbWVudFR5cGUsIEFy
cmF5VHlwZS5DT01QT05FTlRfVFlQRV9QUk9QRVJUWSk7CisJCQl9CisJCX0gZWxzZSB7CisJCQll
bGVtZW50VHlwZSA9IChUeXBlKSBnZXRDaGlsZE5vZGUoYXJyYXlUeXBlLCBBcnJheVR5cGUuRUxF
TUVOVF9UWVBFX1BST1BFUlRZKTsKKwkJCWRpbWVuc2lvbnMgPSBhcnJheVR5cGUuZ2V0RGltZW5z
aW9ucygpOwogCQl9CiAKIAkJZWxlbWVudFR5cGUuYWNjZXB0KHRoaXMpOwogCiAJCS8vIGFkZCAi
PGFubm90YXRpb25zPiBbIDxkaW1lbnNpb24+IF0iIGZvciBlYWNoIGRpbWVuc2lvbiBleHByZXNz
aW9uCi0JCVR5cGUgdHlwZT0gYXJyYXlUeXBlOwogCQlMaXN0IGxpc3Q9IGdldENoaWxkTGlzdChu
b2RlLCBBcnJheUNyZWF0aW9uLkRJTUVOU0lPTlNfUFJPUEVSVFkpOwotCQlmb3IgKGludCBpPSAw
OyBpIDwgbGlzdC5zaXplKCk7IGkrKykgewotCQkJaWYgKG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwo
KSA+PSBBU1QuSkxTOCAmJiB0eXBlIGluc3RhbmNlb2YgQXJyYXlUeXBlKSB7Ci0JCQkJdmlzaXRM
aXN0KHR5cGUsIEFycmF5VHlwZS5BTk5PVEFUSU9OU19QUk9QRVJUWSwgU3RyaW5nLnZhbHVlT2Yo
JyAnKSwgVXRpbC5FTVBUWV9TVFJJTkcsIFN0cmluZy52YWx1ZU9mKCcgJykpOwotCQkJCXR5cGUg
PSAoVHlwZSkgZ2V0Q2hpbGROb2RlKHR5cGUsIEFycmF5VHlwZS5DT01QT05FTlRfVFlQRV9QUk9Q
RVJUWSk7CisJCS0tZGltZW5zaW9uczsKKwkJaW50IGk7CisJCWZvciAoaT0gMDsgaSA8IGxpc3Qu
c2l6ZSgpOyBpKyspIHsKKwkJCWlmIChub2RlLmdldEFTVCgpLmFwaUxldmVsKCkgPj0gQVNULkpM
UzgpIHsKKwkJCQlFeHRyYURpbWVuc2lvbiBleHRyYURpbWVuc2lvbiA9IChFeHRyYURpbWVuc2lv
bikgYXJyYXlUeXBlLmRpbWVuc2lvbnMoKS5nZXQoaSk7CisJCQkJdmlzaXRMaXN0KGV4dHJhRGlt
ZW5zaW9uLCBFeHRyYURpbWVuc2lvbi5BTk5PVEFUSU9OU19QUk9QRVJUWSwgU3RyaW5nLnZhbHVl
T2YoJyAnKSwgU3RyaW5nLnZhbHVlT2YoJyAnKSwgVXRpbC5FTVBUWV9TVFJJTkcpOwogCQkJfQog
CQkJdGhpcy5yZXN1bHQuYXBwZW5kKCdbJyk7CiAJCQkoKEFTVE5vZGUpIGxpc3QuZ2V0KGkpKS5h
Y2NlcHQodGhpcyk7CkBAIC0yNjAsMTIgKzI2OCwxMyBAQAogCQl9CiAKIAkJLy8gYWRkICI8YW5u
b3RhdGlvbnM+IFtdIiBmb3IgZWFjaCBleHRyYSBhcnJheSBkaW1lbnNpb24KLQkJZm9yIChpbnQg
aT0gMDsgaSA8IGRpbWVuc2lvbnM7IGkrKykgewotCQkJaWYgKG5vZGUuZ2V0QVNUKCkuYXBpTGV2
ZWwoKSA+PSBBU1QuSkxTOCAmJiB0eXBlIGluc3RhbmNlb2YgQXJyYXlUeXBlKSB7Ci0JCQkJdmlz
aXRMaXN0KHR5cGUsIEFycmF5VHlwZS5BTk5PVEFUSU9OU19QUk9QRVJUWSwgU3RyaW5nLnZhbHVl
T2YoJyAnKSwgVXRpbC5FTVBUWV9TVFJJTkcsIFN0cmluZy52YWx1ZU9mKCcgJykpOwotCQkJCXR5
cGUgPSAoVHlwZSkgZ2V0Q2hpbGROb2RlKHR5cGUsIEFycmF5VHlwZS5DT01QT05FTlRfVFlQRV9Q
Uk9QRVJUWSk7CisJCXdoaWxlIChkaW1lbnNpb25zID49IDApIHsKKwkJCWlmIChub2RlLmdldEFT
VCgpLmFwaUxldmVsKCkgPj0gQVNULkpMUzgpIHsKKwkJCQlFeHRyYURpbWVuc2lvbiBleHRyYURp
bWVuc2lvbiA9IChFeHRyYURpbWVuc2lvbikgYXJyYXlUeXBlLmRpbWVuc2lvbnMoKS5nZXQoaSk7
CisJCQkJdmlzaXRMaXN0KGV4dHJhRGltZW5zaW9uLCBFeHRyYURpbWVuc2lvbi5BTk5PVEFUSU9O
U19QUk9QRVJUWSwgU3RyaW5nLnZhbHVlT2YoJyAnKSwgVXRpbC5FTVBUWV9TVFJJTkcsIFN0cmlu
Zy52YWx1ZU9mKCcgJykpOwogCQkJfQogCQkJdGhpcy5yZXN1bHQuYXBwZW5kKCJbXSIpOyAvLyRO
T04tTkxTLTEkCisJCQktLWRpbWVuc2lvbnM7CiAJCX0KIAogCQlBU1ROb2RlIGluaXRpYWxpemVy
PSBnZXRDaGlsZE5vZGUobm9kZSwgQXJyYXlDcmVhdGlvbi5JTklUSUFMSVpFUl9QUk9QRVJUWSk7
CkBAIC0yODksMTEgKzI5OCwxMyBAQAogCSAqIEBzZWUgQVNUVmlzaXRvciN2aXNpdChBcnJheVR5
cGUpCiAJICovCiAJcHVibGljIGJvb2xlYW4gdmlzaXQoQXJyYXlUeXBlIG5vZGUpIHsKLQkJZ2V0
Q2hpbGROb2RlKG5vZGUsIEFycmF5VHlwZS5DT01QT05FTlRfVFlQRV9QUk9QRVJUWSkuYWNjZXB0
KHRoaXMpOwotCQlpZiAobm9kZS5nZXRBU1QoKS5hcGlMZXZlbCgpID49IEFTVC5KTFM4KSB7Ci0J
CQl2aXNpdExpc3Qobm9kZSwgQXJyYXlUeXBlLkFOTk9UQVRJT05TX1BST1BFUlRZLCBTdHJpbmcu
dmFsdWVPZignICcpLCBVdGlsLkVNUFRZX1NUUklORywgU3RyaW5nLnZhbHVlT2YoJyAnKSk7CisJ
CWlmIChub2RlLmdldEFTVCgpLmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgeworCQkJZ2V0Q2hpbGRO
b2RlKG5vZGUsIEFycmF5VHlwZS5DT01QT05FTlRfVFlQRV9QUk9QRVJUWSkuYWNjZXB0KHRoaXMp
OworCQkJdGhpcy5yZXN1bHQuYXBwZW5kKCJbXSIpOyAvLyROT04tTkxTLTEkCisJCX0gZWxzZSB7
CisJCQlnZXRDaGlsZE5vZGUobm9kZSwgQXJyYXlUeXBlLkVMRU1FTlRfVFlQRV9QUk9QRVJUWSku
YWNjZXB0KHRoaXMpOworCQkJdmlzaXRMaXN0KG5vZGUsIEFycmF5VHlwZS5ESU1FTlNJT05TX1BS
T1BFUlRZLCBTdHJpbmcudmFsdWVPZignICcpLCBVdGlsLkVNUFRZX1NUUklORywgU3RyaW5nLnZh
bHVlT2YoJyAnKSk7CiAJCX0KLQkJdGhpcy5yZXN1bHQuYXBwZW5kKCJbXSIpOyAvLyROT04tTkxT
LTEkCiAJCXJldHVybiBmYWxzZTsKIAl9CiA=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>235703</attachid>
            <date>2013-09-23 02:49:00 -0400</date>
            <delta_ts>2013-09-24 10:22:51 -0400</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Fix-for-Bug-413569-18dom-ast-AST-for-annotated-multi.patch</filename>
            <type>text/plain</type>
            <size>153332</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMTVKTFM0VGVzdC5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2RvbS9BU1RDb252ZXJ0ZXIxNUpMUzRUZXN0LmphdmEKaW5kZXggZjAxNjExOS4uZGJjNmQz
ZSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxNUpMUzRUZXN0LmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxNUpMUzRUZXN0LmphdmEKQEAgLTEsMTAgKzEsMTQg
QEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMTEsIDIwMTIg
SUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMTEsIDIwMTMg
SUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlz
IHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFp
bGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAK
ICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxl
IGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAogICoKKyAq
IFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlv
biBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFu
ZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3Nlcwor
ICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlv
biBvZiB0aGUgSkNQLgorICogCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0
aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCiAgKiAgICAgU3RlcGhhbiBIZXJy
bWFubiAtIENvbnRyaWJ1dGlvbiBmb3IgYnVnIDE4NjM0MiAtIFtjb21waWxlcl1bbnVsbF0gVXNp
bmcgYW5ub3RhdGlvbnMgZm9yIG51bGwgY2hlY2tpbmcKQEAgLTYyLDYgKzY2LDEzIEBACiAJCQl0
aGlzLndvcmtpbmdDb3B5LmRpc2NhcmRXb3JraW5nQ29weSgpOwogCQkJdGhpcy53b3JraW5nQ29w
eSA9IG51bGw7CiAJCX0KKwl9CisKKwkvKioKKwkgKiBAZGVwcmVjYXRlZAorCSAqLworCXByaXZh
dGUgVHlwZSBjb21wb25lbnRUeXBlKEFycmF5VHlwZSBhcnJheSkgeworCQlyZXR1cm4gYXJyYXku
Z2V0Q29tcG9uZW50VHlwZSgpOwogCX0KIAogCS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD0yMzQ2MDkgQmluZGluZ0tleSN0b1NpZ25hdHVyZSgpIGZhaWxz
IHdpdGgga2V5IGZyb20gY3JlYXRlV2lsY2FyZFR5cGVCaW5kaW5nS2V5KC4uKQpAQCAtMTcwNCw3
ICsxNzE1LDcgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiU3RyaW5nW10iLCBzb3VyY2Up
OwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNBcnJheVR5cGUoKSk7
CiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQljaGVja1NvdXJj
ZVJhbmdlKGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCksICJTdHJpbmciLCBzb3VyY2UpOwor
CQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKSwgIlN0cmluZyIsIHNv
dXJjZSk7CiAJCWFzc2VydEVxdWFscygiV3JvbmcgZXh0cmEgZGltZW5zaW9ucyIsIDEsIHNpbmds
ZVZhcmlhYmxlRGVjbGFyYXRpb24uZ2V0RXh0cmFEaW1lbnNpb25zKCkpOwogCX0KIApAQCAtMTcz
Miw3ICsxNzQzLDcgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiU3RyaW5nW10iLCBzb3Vy
Y2UpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNBcnJheVR5cGUo
KSk7CiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQljaGVja1Nv
dXJjZVJhbmdlKGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCksICJTdHJpbmciLCBzb3VyY2Up
OworCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKSwgIlN0cmluZyIs
IHNvdXJjZSk7CiAJCWFzc2VydEVxdWFscygiV3JvbmcgZXh0cmEgZGltZW5zaW9ucyIsIDAsIHNp
bmdsZVZhcmlhYmxlRGVjbGFyYXRpb24uZ2V0RXh0cmFEaW1lbnNpb25zKCkpOwogCX0KIAkvKioK
QEAgLTI0MjMsMTEgKzI0MzQsMTEgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiTWFwPFN0
cmluZywgRG91YmxlPltdW10iLCBzb3VyY2UpOwogCQlhc3NlcnRFcXVhbHMoIndyb25nIHR5cGUi
LCBBU1ROb2RlLkFSUkFZX1RZUEUsIHR5cGUuZ2V0Tm9kZVR5cGUoKSk7CiAJCUFycmF5VHlwZSBh
cnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQl0eXBlID0gYXJyYXlUeXBlLmdldENvbXBv
bmVudFR5cGUoKTsKKwkJdHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJY2hlY2tT
b3VyY2VSYW5nZSh0eXBlLCAiTWFwPFN0cmluZywgRG91YmxlPltdIiwgc291cmNlKTsKIAkJYXNz
ZXJ0RXF1YWxzKCJ3cm9uZyB0eXBlIiwgQVNUTm9kZS5BUlJBWV9UWVBFLCB0eXBlLmdldE5vZGVU
eXBlKCkpOwogCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQl0eXBlID0gYXJyYXlU
eXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJdHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBl
KTsKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiTWFwPFN0cmluZywgRG91YmxlPiIsIHNvdXJj
ZSk7CiAJfQogCkBAIC0yNDUwLDExICsyNDYxLDExIEBACiAJCWNoZWNrU291cmNlUmFuZ2UodHlw
ZSwgImphdmEudXRpbC5NYXA8U3RyaW5nLCBEb3VibGU+W11bXSIsIHNvdXJjZSk7CiAJCWFzc2Vy
dEVxdWFscygid3JvbmcgdHlwZSIsIEFTVE5vZGUuQVJSQVlfVFlQRSwgdHlwZS5nZXROb2RlVHlw
ZSgpKTsKIAkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7Ci0JCXR5cGUg
PSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQl0eXBlID0gY29tcG9uZW50VHlwZShh
cnJheVR5cGUpOwogCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJqYXZhLnV0aWwuTWFwPFN0cmlu
ZywgRG91YmxlPltdIiwgc291cmNlKTsKIAkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBlIiwgQVNU
Tm9kZS5BUlJBWV9UWVBFLCB0eXBlLmdldE5vZGVUeXBlKCkpOwogCQlhcnJheVR5cGUgPSAoQXJy
YXlUeXBlKSB0eXBlOwotCQl0eXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJ
dHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBl
LCAiamF2YS51dGlsLk1hcDxTdHJpbmcsIERvdWJsZT4iLCBzb3VyY2UpOwogCX0KIApAQCAtNDEx
NCw3ICs0MTI1LDcgQEAKICAgICAJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBkaW1lbnNpb25zIiwgMSwg
dHlwZUJpbmRpbmcuZ2V0RGltZW5zaW9ucygpKTsKICAgICAJQXJyYXlUeXBlIGFycmF5VHlwZSA9
IChBcnJheVR5cGUpIHR5cGU7CiAgICAgCWFzc2VydEVxdWFscygiV3JvbmcgZGltZW5zaW9uIiwg
MSwgYXJyYXlUeXBlLmdldERpbWVuc2lvbnMoKSk7Ci0gICAgCXR5cGUgPSBhcnJheVR5cGUuZ2V0
Q29tcG9uZW50VHlwZSgpOworICAgIAl0eXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwog
ICAgIAlhc3NlcnRUcnVlKCJOb3QgYSBzaW1wbGUgdHlwZSIsIHR5cGUuaXNTaW1wbGVUeXBlKCkp
OwogICAgIAljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJTdHJpbmciLCBjb250ZW50cyk7CiAgICAg
CWFzc2VydEVxdWFscygiV3JvbmcgZXh0cmEgZGltZW5zaW9uIiwgMSwgc2luZ2xlVmFyaWFibGVE
ZWNsYXJhdGlvbi5nZXRFeHRyYURpbWVuc2lvbnMoKSk7CkBAIC00NDk4LDcgKzQ1MDksNyBAQAog
ICAgIAlhc3NlcnRFcXVhbHMoIndyb25nIGRpbWVuc2lvbnMiLCAxLCB0eXBlQmluZGluZy5nZXRE
aW1lbnNpb25zKCkpOwogICAgIAlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlw
ZTsKICAgICAJYXNzZXJ0RXF1YWxzKCJXcm9uZyBkaW1lbnNpb24iLCAxLCBhcnJheVR5cGUuZ2V0
RGltZW5zaW9ucygpKTsKLSAgICAJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7
CisgICAgCXR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7CiAgICAgCWFzc2VydFRydWUo
Ik5vdCBhIHNpbXBsZSB0eXBlIiwgdHlwZS5pc1NpbXBsZVR5cGUoKSk7CiAgICAgCWNoZWNrU291
cmNlUmFuZ2UodHlwZSwgIlN0cmluZyIsIGNvbnRlbnRzKTsKICAgICAJYXNzZXJ0RXF1YWxzKCJX
cm9uZyBleHRyYSBkaW1lbnNpb24iLCAwLCBzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLmdldEV4
dHJhRGltZW5zaW9ucygpKTsKQEAgLTExMTgyLDcgKzExMTkzLDcgQEAKIAkJSVR5cGVCaW5kaW5n
IGJpbmRpbmcgPSB0eXBlLnJlc29sdmVCaW5kaW5nKCk7CiAJCWFzc2VydE5vdE51bGwoIk5vIGJp
bmRpbmciLCBiaW5kaW5nKTsKIAkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBxdWFsaWZpZWQgbmFtZSIs
ICJ0ZXN0MDM0Ny5PdXRlcjxqYXZhLmxhbmcuSW50ZWdlcj4uSW5uZXI8amF2YS5sYW5nLkRvdWJs
ZT5bXSIsIGJpbmRpbmcuZ2V0UXVhbGlmaWVkTmFtZSgpKTsKLQkJVHlwZSBjb21wb25lbnRUeXBl
ID0gdHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCVR5cGUgY29tcG9uZW50VHlwZSA9IGNvbXBv
bmVudFR5cGUodHlwZSk7CiAJCWJpbmRpbmcgPSBjb21wb25lbnRUeXBlLnJlc29sdmVCaW5kaW5n
KCk7CiAJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsKIAkJYXNzZXJ0RXF1
YWxzKCJXcm9uZyBxdWFsaWZpZWQgbmFtZSIsICJ0ZXN0MDM0Ny5PdXRlcjxqYXZhLmxhbmcuSW50
ZWdlcj4uSW5uZXI8amF2YS5sYW5nLkRvdWJsZT4iLCBiaW5kaW5nLmdldFF1YWxpZmllZE5hbWUo
KSk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlcjE1SkxTOFRlc3QuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMTVKTFM4VGVzdC5qYXZhCmluZGV4IGY0YjE1MjguLmUy
YzQ0MDQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMTVKTFM4VGVzdC5qYXZh
CisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMTVKTFM4VGVzdC5qYXZhCkBAIC0xLDUgKzEs
NSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAxMSwgMjAx
MiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAxMSwgMjAx
MyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRo
aXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2
YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEu
MAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFi
bGUgYXQKQEAgLTE3MDgsNyArMTcwOCw3IEBACiAJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIlN0
cmluZ1tdIiwgc291cmNlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCB0eXBl
LmlzQXJyYXlUeXBlKCkpOwogCQlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlw
ZTsKLQkJY2hlY2tTb3VyY2VSYW5nZShhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpLCAiU3Ry
aW5nIiwgc291cmNlKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShhcnJheVR5cGUuZ2V0RWxlbWVudFR5
cGUoKSwgIlN0cmluZyIsIHNvdXJjZSk7CiAJCWFzc2VydEVxdWFscygiV3JvbmcgZXh0cmEgZGlt
ZW5zaW9ucyIsIDEsIHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24uZ2V0RXh0cmFEaW1lbnNpb25z
KCkpOwogCX0KIApAQCAtMTczNiw3ICsxNzM2LDcgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBl
LCAiU3RyaW5nW10iLCBzb3VyY2UpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIs
IHR5cGUuaXNBcnJheVR5cGUoKSk7CiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBl
KSB0eXBlOwotCQljaGVja1NvdXJjZVJhbmdlKGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCks
ICJTdHJpbmciLCBzb3VyY2UpOworCQljaGVja1NvdXJjZVJhbmdlKGFycmF5VHlwZS5nZXRFbGVt
ZW50VHlwZSgpLCAiU3RyaW5nIiwgc291cmNlKTsKIAkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBleHRy
YSBkaW1lbnNpb25zIiwgMCwgc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbi5nZXRFeHRyYURpbWVu
c2lvbnMoKSk7CiAJfQogCS8qKgpAQCAtMjQyNywxMiArMjQyNyw5IEBACiAJCWNoZWNrU291cmNl
UmFuZ2UodHlwZSwgIk1hcDxTdHJpbmcsIERvdWJsZT5bXVtdIiwgc291cmNlKTsKIAkJYXNzZXJ0
RXF1YWxzKCJ3cm9uZyB0eXBlIiwgQVNUTm9kZS5BUlJBWV9UWVBFLCB0eXBlLmdldE5vZGVUeXBl
KCkpOwogCQlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJdHlwZSA9
IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWNoZWNrU291cmNlUmFuZ2UodHlwZSwg
Ik1hcDxTdHJpbmcsIERvdWJsZT5bXSIsIHNvdXJjZSk7Ci0JCWFzc2VydEVxdWFscygid3Jvbmcg
dHlwZSIsIEFTVE5vZGUuQVJSQVlfVFlQRSwgdHlwZS5nZXROb2RlVHlwZSgpKTsKLQkJYXJyYXlU
eXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRU
eXBlKCk7CisJCXR5cGUgPSBhcnJheVR5cGUuZ2V0RWxlbWVudFR5cGUoKTsKIAkJY2hlY2tTb3Vy
Y2VSYW5nZSh0eXBlLCAiTWFwPFN0cmluZywgRG91YmxlPiIsIHNvdXJjZSk7CisJCWFzc2VydEVx
dWFscygid3JvbmcgdHlwZSIsIEFTVE5vZGUuUEFSQU1FVEVSSVpFRF9UWVBFLCB0eXBlLmdldE5v
ZGVUeXBlKCkpOwogCX0KIAogCS8qCkBAIC0yNDU0LDEyICsyNDUxLDkgQEAKIAkJY2hlY2tTb3Vy
Y2VSYW5nZSh0eXBlLCAiamF2YS51dGlsLk1hcDxTdHJpbmcsIERvdWJsZT5bXVtdIiwgc291cmNl
KTsKIAkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBlIiwgQVNUTm9kZS5BUlJBWV9UWVBFLCB0eXBl
LmdldE5vZGVUeXBlKCkpOwogCQlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlw
ZTsKLQkJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWNoZWNrU291cmNl
UmFuZ2UodHlwZSwgImphdmEudXRpbC5NYXA8U3RyaW5nLCBEb3VibGU+W10iLCBzb3VyY2UpOwot
CQlhc3NlcnRFcXVhbHMoIndyb25nIHR5cGUiLCBBU1ROb2RlLkFSUkFZX1RZUEUsIHR5cGUuZ2V0
Tm9kZVR5cGUoKSk7Ci0JCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7Ci0JCXR5cGUgPSBh
cnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQl0eXBlID0gYXJyYXlUeXBlLmdldEVsZW1l
bnRUeXBlKCk7CiAJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgImphdmEudXRpbC5NYXA8U3RyaW5n
LCBEb3VibGU+Iiwgc291cmNlKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBlIiwgQVNUTm9k
ZS5QQVJBTUVURVJJWkVEX1RZUEUsIHR5cGUuZ2V0Tm9kZVR5cGUoKSk7CiAJfQogCiAJLyoKQEAg
LTQxMTgsNyArNDExMiw3IEBACiAgICAgCWFzc2VydEVxdWFscygid3JvbmcgZGltZW5zaW9ucyIs
IDEsIHR5cGVCaW5kaW5nLmdldERpbWVuc2lvbnMoKSk7CiAgICAgCUFycmF5VHlwZSBhcnJheVR5
cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwogICAgIAlhc3NlcnRFcXVhbHMoIldyb25nIGRpbWVuc2lv
biIsIDEsIGFycmF5VHlwZS5nZXREaW1lbnNpb25zKCkpOwotICAgIAl0eXBlID0gYXJyYXlUeXBl
LmdldENvbXBvbmVudFR5cGUoKTsKKyAgICAJdHlwZSA9IGFycmF5VHlwZS5nZXRFbGVtZW50VHlw
ZSgpOwogICAgIAlhc3NlcnRUcnVlKCJOb3QgYSBzaW1wbGUgdHlwZSIsIHR5cGUuaXNTaW1wbGVU
eXBlKCkpOwogICAgIAljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJTdHJpbmciLCBjb250ZW50cyk7
CiAgICAgCWFzc2VydEVxdWFscygiV3JvbmcgZXh0cmEgZGltZW5zaW9uIiwgMSwgc2luZ2xlVmFy
aWFibGVEZWNsYXJhdGlvbi5nZXRFeHRyYURpbWVuc2lvbnMoKSk7CkBAIC00NTAyLDcgKzQ0OTYs
NyBAQAogICAgIAlhc3NlcnRFcXVhbHMoIndyb25nIGRpbWVuc2lvbnMiLCAxLCB0eXBlQmluZGlu
Zy5nZXREaW1lbnNpb25zKCkpOwogICAgIAlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlw
ZSkgdHlwZTsKICAgICAJYXNzZXJ0RXF1YWxzKCJXcm9uZyBkaW1lbnNpb24iLCAxLCBhcnJheVR5
cGUuZ2V0RGltZW5zaW9ucygpKTsKLSAgICAJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRU
eXBlKCk7CisgICAgCXR5cGUgPSBhcnJheVR5cGUuZ2V0RWxlbWVudFR5cGUoKTsKICAgICAJYXNz
ZXJ0VHJ1ZSgiTm90IGEgc2ltcGxlIHR5cGUiLCB0eXBlLmlzU2ltcGxlVHlwZSgpKTsKICAgICAJ
Y2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiU3RyaW5nIiwgY29udGVudHMpOwogICAgIAlhc3NlcnRF
cXVhbHMoIldyb25nIGV4dHJhIGRpbWVuc2lvbiIsIDAsIHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRp
b24uZ2V0RXh0cmFEaW1lbnNpb25zKCkpOwpAQCAtMTExODYsNyArMTExODAsNyBAQAogCQlJVHlw
ZUJpbmRpbmcgYmluZGluZyA9IHR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKIAkJYXNzZXJ0Tm90TnVs
bCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOwogCQlhc3NlcnRFcXVhbHMoIldyb25nIHF1YWxpZmll
ZCBuYW1lIiwgInRlc3QwMzQ3Lk91dGVyPGphdmEubGFuZy5JbnRlZ2VyPi5Jbm5lcjxqYXZhLmxh
bmcuRG91YmxlPltdIiwgYmluZGluZy5nZXRRdWFsaWZpZWROYW1lKCkpOwotCQlUeXBlIGNvbXBv
bmVudFR5cGUgPSB0eXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJVHlwZSBjb21wb25lbnRUeXBl
ID0gdHlwZS5nZXRFbGVtZW50VHlwZSgpOwogCQliaW5kaW5nID0gY29tcG9uZW50VHlwZS5yZXNv
bHZlQmluZGluZygpOwogCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7CiAJ
CWFzc2VydEVxdWFscygiV3JvbmcgcXVhbGlmaWVkIG5hbWUiLCAidGVzdDAzNDcuT3V0ZXI8amF2
YS5sYW5nLkludGVnZXI+LklubmVyPGphdmEubGFuZy5Eb3VibGU+IiwgYmluZGluZy5nZXRRdWFs
aWZpZWROYW1lKCkpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9k
ZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxNVRlc3Qu
amF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMTVUZXN0LmphdmEKaW5kZXggYWVjMWEzYy4u
MDk0ZDgxMyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxNVRlc3QuamF2YQor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlcjE1VGVzdC5qYXZhCkBAIC03OCw2ICs3OCwxMyBA
QAogCQl9CiAJfQogCisJLyoqCisJICogQGRlcHJlY2F0ZWQKKwkgKi8KKwlwcml2YXRlIFR5cGUg
Y29tcG9uZW50VHlwZShBcnJheVR5cGUgYXJyYXkpIHsKKwkJcmV0dXJuIGFycmF5LmdldENvbXBv
bmVudFR5cGUoKTsKKwl9CisKIAkvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93
X2J1Zy5jZ2k/aWQ9MjM0NjA5IEJpbmRpbmdLZXkjdG9TaWduYXR1cmUoKSBmYWlscyB3aXRoIGtl
eSBmcm9tIGNyZWF0ZVdpbGNhcmRUeXBlQmluZGluZ0tleSguLikKIAlwdWJsaWMgdm9pZCB0ZXN0
MjM0NjA5KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CiAKQEAgLTE3MTgsNyArMTcyNSw3
IEBACiAJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIlN0cmluZ1tdIiwgc291cmNlKTsKIAkJYXNz
ZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlzQXJyYXlUeXBlKCkpOwogCQlBcnJh
eVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJY2hlY2tTb3VyY2VSYW5nZShh
cnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpLCAiU3RyaW5nIiwgc291cmNlKTsKKwkJY2hlY2tT
b3VyY2VSYW5nZShjb21wb25lbnRUeXBlKGFycmF5VHlwZSksICJTdHJpbmciLCBzb3VyY2UpOwog
CQlhc3NlcnRFcXVhbHMoIldyb25nIGV4dHJhIGRpbWVuc2lvbnMiLCAxLCBzaW5nbGVWYXJpYWJs
ZURlY2xhcmF0aW9uLmdldEV4dHJhRGltZW5zaW9ucygpKTsKIAl9CiAKQEAgLTE3NDYsNyArMTc1
Myw3IEBACiAJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIlN0cmluZ1tdIiwgc291cmNlKTsKIAkJ
YXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlzQXJyYXlUeXBlKCkpOwogCQlB
cnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJY2hlY2tTb3VyY2VSYW5n
ZShhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpLCAiU3RyaW5nIiwgc291cmNlKTsKKwkJY2hl
Y2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlKGFycmF5VHlwZSksICJTdHJpbmciLCBzb3VyY2Up
OwogCQlhc3NlcnRFcXVhbHMoIldyb25nIGV4dHJhIGRpbWVuc2lvbnMiLCAwLCBzaW5nbGVWYXJp
YWJsZURlY2xhcmF0aW9uLmdldEV4dHJhRGltZW5zaW9ucygpKTsKIAl9CiAJLyoqCkBAIC0yNDM3
LDExICsyNDQ0LDExIEBACiAJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIk1hcDxTdHJpbmcsIERv
dWJsZT5bXVtdIiwgc291cmNlKTsKIAkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBlIiwgQVNUTm9k
ZS5BUlJBWV9UWVBFLCB0eXBlLmdldE5vZGVUeXBlKCkpOwogCQlBcnJheVR5cGUgYXJyYXlUeXBl
ID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBl
KCk7CisJCXR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7CiAJCWNoZWNrU291cmNlUmFu
Z2UodHlwZSwgIk1hcDxTdHJpbmcsIERvdWJsZT5bXSIsIHNvdXJjZSk7CiAJCWFzc2VydEVxdWFs
cygid3JvbmcgdHlwZSIsIEFTVE5vZGUuQVJSQVlfVFlQRSwgdHlwZS5nZXROb2RlVHlwZSgpKTsK
IAkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJdHlwZSA9IGFycmF5VHlwZS5nZXRD
b21wb25lbnRUeXBlKCk7CisJCXR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7CiAJCWNo
ZWNrU291cmNlUmFuZ2UodHlwZSwgIk1hcDxTdHJpbmcsIERvdWJsZT4iLCBzb3VyY2UpOwogCX0K
IApAQCAtMjQ2NCwxMSArMjQ3MSwxMSBAQAogCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJqYXZh
LnV0aWwuTWFwPFN0cmluZywgRG91YmxlPltdW10iLCBzb3VyY2UpOwogCQlhc3NlcnRFcXVhbHMo
Indyb25nIHR5cGUiLCBBU1ROb2RlLkFSUkFZX1RZUEUsIHR5cGUuZ2V0Tm9kZVR5cGUoKSk7CiAJ
CUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQl0eXBlID0gYXJyYXlU
eXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJdHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBl
KTsKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiamF2YS51dGlsLk1hcDxTdHJpbmcsIERvdWJs
ZT5bXSIsIHNvdXJjZSk7CiAJCWFzc2VydEVxdWFscygid3JvbmcgdHlwZSIsIEFTVE5vZGUuQVJS
QVlfVFlQRSwgdHlwZS5nZXROb2RlVHlwZSgpKTsKIAkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkg
dHlwZTsKLQkJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCXR5cGUgPSBj
b21wb25lbnRUeXBlKGFycmF5VHlwZSk7CiAJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgImphdmEu
dXRpbC5NYXA8U3RyaW5nLCBEb3VibGU+Iiwgc291cmNlKTsKIAl9CiAKQEAgLTQxMjgsNyArNDEz
NSw3IEBACiAgICAgCWFzc2VydEVxdWFscygid3JvbmcgZGltZW5zaW9ucyIsIDEsIHR5cGVCaW5k
aW5nLmdldERpbWVuc2lvbnMoKSk7CiAgICAgCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlU
eXBlKSB0eXBlOwogICAgIAlhc3NlcnRFcXVhbHMoIldyb25nIGRpbWVuc2lvbiIsIDEsIGFycmF5
VHlwZS5nZXREaW1lbnNpb25zKCkpOwotICAgIAl0eXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVu
dFR5cGUoKTsKKyAgICAJdHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKICAgICAJYXNz
ZXJ0VHJ1ZSgiTm90IGEgc2ltcGxlIHR5cGUiLCB0eXBlLmlzU2ltcGxlVHlwZSgpKTsKICAgICAJ
Y2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiU3RyaW5nIiwgY29udGVudHMpOwogICAgIAlhc3NlcnRF
cXVhbHMoIldyb25nIGV4dHJhIGRpbWVuc2lvbiIsIDEsIHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRp
b24uZ2V0RXh0cmFEaW1lbnNpb25zKCkpOwpAQCAtNDUxMiw3ICs0NTE5LDcgQEAKICAgICAJYXNz
ZXJ0RXF1YWxzKCJ3cm9uZyBkaW1lbnNpb25zIiwgMSwgdHlwZUJpbmRpbmcuZ2V0RGltZW5zaW9u
cygpKTsKICAgICAJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7CiAgICAg
CWFzc2VydEVxdWFscygiV3JvbmcgZGltZW5zaW9uIiwgMSwgYXJyYXlUeXBlLmdldERpbWVuc2lv
bnMoKSk7Ci0gICAgCXR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworICAgIAl0
eXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogICAgIAlhc3NlcnRUcnVlKCJOb3QgYSBz
aW1wbGUgdHlwZSIsIHR5cGUuaXNTaW1wbGVUeXBlKCkpOwogICAgIAljaGVja1NvdXJjZVJhbmdl
KHR5cGUsICJTdHJpbmciLCBjb250ZW50cyk7CiAgICAgCWFzc2VydEVxdWFscygiV3JvbmcgZXh0
cmEgZGltZW5zaW9uIiwgMCwgc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbi5nZXRFeHRyYURpbWVu
c2lvbnMoKSk7CkBAIC0xMTE5Nyw3ICsxMTIwNCw3IEBACiAJCUlUeXBlQmluZGluZyBiaW5kaW5n
ID0gdHlwZS5yZXNvbHZlQmluZGluZygpOwogCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwg
YmluZGluZyk7CiAJCWFzc2VydEVxdWFscygiV3JvbmcgcXVhbGlmaWVkIG5hbWUiLCAidGVzdDAz
NDcuT3V0ZXI8amF2YS5sYW5nLkludGVnZXI+LklubmVyPGphdmEubGFuZy5Eb3VibGU+W10iLCBi
aW5kaW5nLmdldFF1YWxpZmllZE5hbWUoKSk7Ci0JCVR5cGUgY29tcG9uZW50VHlwZSA9IHR5cGUu
Z2V0Q29tcG9uZW50VHlwZSgpOworCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRUeXBl
KHR5cGUpOwogCQliaW5kaW5nID0gY29tcG9uZW50VHlwZS5yZXNvbHZlQmluZGluZygpOwogCQlh
c3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7CiAJCWFzc2VydEVxdWFscygiV3Jv
bmcgcXVhbGlmaWVkIG5hbWUiLCAidGVzdDAzNDcuT3V0ZXI8amF2YS5sYW5nLkludGVnZXI+Lklu
bmVyPGphdmEubGFuZy5Eb3VibGU+IiwgYmluZGluZy5nZXRRdWFsaWZpZWROYW1lKCkpOwpAQCAt
MTEzMjMsNyArMTEzMzAsNyBAQAogCQlhc3NlcnRUcnVlKCJOb3QgYSBjb21waWxhdGlvbiB1bml0
IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsKIAkJ
Q29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CiAJCU1ldGhv
ZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBnZXRB
U1ROb2RlKHVuaXQsIDAsIDApOwotCQlUeXBlIGNvbXBvbmVudFR5cGUgPSAoKEFycmF5VHlwZSlt
ZXRob2REZWNsYXJhdGlvbi5nZXRSZXR1cm5UeXBlMigpKS5nZXRDb21wb25lbnRUeXBlKCk7CisJ
CVR5cGUgY29tcG9uZW50VHlwZSA9IGNvbXBvbmVudFR5cGUoKChBcnJheVR5cGUpbWV0aG9kRGVj
bGFyYXRpb24uZ2V0UmV0dXJuVHlwZTIoKSkpOwogCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcg
PSBjb21wb25lbnRUeXBlLnJlc29sdmVCaW5kaW5nKCk7CiAJCWFzc2VydEVxdWFscygiV3Jvbmcg
ZnVsbHkgcXVhbGlmaWVkIG5hbWUiLCAidGVzdDAzNTEuSTEiLCB0eXBlQmluZGluZy5nZXRRdWFs
aWZpZWROYW1lKCkpOwogCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3Rz
Lm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThU
ZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZhCmluZGV4IGE1Yzk0
NzAuLjMxYjViYzggMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVs
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0Lmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YQpAQCAtMjczLDEzICsy
NzMsMTMgQEAKIAkJSVR5cGVCaW5kaW5nIGJpbmRpbmcgPSB0eXBlLnJlc29sdmVCaW5kaW5nKCk7
CiAJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsKIAkJYXNzZXJ0RXF1YWxz
KCJXcm9uZyBxdWFsaWZpZWQgbmFtZSIsICJ0ZXN0MDAwNC5PdXRlcjxqYXZhLmxhbmcuSW50ZWdl
cj4uSW5uZXI8amF2YS5sYW5nLkRvdWJsZT5bXSIsIGJpbmRpbmcuZ2V0UXVhbGlmaWVkTmFtZSgp
KTsKLQkJVHlwZSBjb21wb25lbnRUeXBlID0gdHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWJp
bmRpbmcgPSBjb21wb25lbnRUeXBlLnJlc29sdmVCaW5kaW5nKCk7CisJCVR5cGUgZWxlbWVudFR5
cGUgPSB0eXBlLmdldEVsZW1lbnRUeXBlKCk7CisJCWJpbmRpbmcgPSBlbGVtZW50VHlwZS5yZXNv
bHZlQmluZGluZygpOwogCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7CiAJ
CWFzc2VydEVxdWFscygiV3JvbmcgcXVhbGlmaWVkIG5hbWUiLAogCQkJCSJ0ZXN0MDAwNC5PdXRl
cjxqYXZhLmxhbmcuSW50ZWdlcj4uSW5uZXI8amF2YS5sYW5nLkRvdWJsZT4iLCBiaW5kaW5nLmdl
dFF1YWxpZmllZE5hbWUoKSk7Ci0JCWFzc2VydFRydWUoIk5vdCBwYXJhbWV0ZXJpemVkIiwgY29t
cG9uZW50VHlwZS5pc1BhcmFtZXRlcml6ZWRUeXBlKCkpOwotCQlQYXJhbWV0ZXJpemVkVHlwZSBw
YXJhbWV0ZXJpemVkVHlwZSA9IChQYXJhbWV0ZXJpemVkVHlwZSkgY29tcG9uZW50VHlwZTsKKwkJ
YXNzZXJ0VHJ1ZSgiTm90IHBhcmFtZXRlcml6ZWQiLCBlbGVtZW50VHlwZS5pc1BhcmFtZXRlcml6
ZWRUeXBlKCkpOworCQlQYXJhbWV0ZXJpemVkVHlwZSBwYXJhbWV0ZXJpemVkVHlwZSA9IChQYXJh
bWV0ZXJpemVkVHlwZSkgZWxlbWVudFR5cGU7CiAJCVR5cGUgdHlwZTIgPSBwYXJhbWV0ZXJpemVk
VHlwZS5nZXRUeXBlKCk7CiAJCWFzc2VydFRydWUoIk5vdCBxdWFsaWZpZWQiLCB0eXBlMi5pc1F1
YWxpZmllZFR5cGUoKSk7CiAJCVF1YWxpZmllZFR5cGUgcXVhbGlmaWVkVHlwZSA9IChRdWFsaWZp
ZWRUeXBlKSB0eXBlMjsKQEAgLTExMzksMTMgKzExMzksMTIgQEAKIAkJVHlwZSB0eXBlID0gY3Jl
YXRpb24uZ2V0VHlwZSgpOwogCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCB0eXBlIiwgdHJ1ZSwg
dHlwZS5pc0FycmF5VHlwZSgpKTsKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiQE1hcmtlcjIg
aW50IEBNYXJrZXIgQE1hcmtlcjIgWzJdIEBNYXJrZXIyIEBNYXJrZXIzIFtiYXIoKV0gQE1hcmtl
cjMgQE1hcmtlciBbXSIsIGNvbnRlbnRzLnRvQ2hhckFycmF5KCkpOwotCQlhc3NlcnRFcXVhbHMo
IkluY29ycmVjdCBhbm5vdGF0aW9ucyIsICJATWFya2VyMyBATWFya2VyICIsIGNvbnZlcnRBbm5v
dGF0aW9uc0xpc3QoKChBcnJheVR5cGUpIHR5cGUpLmFubm90YXRpb25zKCkpKTsKLQkJdHlwZSA9
ICgoQXJyYXlUeXBlKSB0eXBlKS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWFzc2VydEVxdWFscygi
SW5jb3JyZWN0IHR5cGUiLCB0cnVlLCB0eXBlLmlzQXJyYXlUeXBlKCkpOwotCQlhc3NlcnRFcXVh
bHMoIkluY29ycmVjdCBhbm5vdGF0aW9ucyIsICJATWFya2VyMiBATWFya2VyMyAiLCBjb252ZXJ0
QW5ub3RhdGlvbnNMaXN0KCgoQXJyYXlUeXBlKSB0eXBlKS5hbm5vdGF0aW9ucygpKSk7Ci0JCXR5
cGUgPSAoKEFycmF5VHlwZSkgdHlwZSkuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlhc3NlcnRFcXVh
bHMoIkluY29ycmVjdCB0eXBlIiwgdHJ1ZSwgdHlwZS5pc0FycmF5VHlwZSgpKTsKLQkJYXNzZXJ0
RXF1YWxzKCJJbmNvcnJlY3QgYW5ub3RhdGlvbnMiLCAiQE1hcmtlciBATWFya2VyMiAiLCBjb252
ZXJ0QW5ub3RhdGlvbnNMaXN0KCgoQXJyYXlUeXBlKSB0eXBlKS5hbm5vdGF0aW9ucygpKSk7CisJ
CUV4dHJhRGltZW5zaW9uIGV4dHJhRGltZW5zaW9uID0gKChBcnJheVR5cGUpIHR5cGUpLmdldERp
bWVuc2lvbkF0KDApOworCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCBhbm5vdGF0aW9ucyIsICJA
TWFya2VyMyBATWFya2VyICIsIGNvbnZlcnRBbm5vdGF0aW9uc0xpc3QoZXh0cmFEaW1lbnNpb24u
YW5ub3RhdGlvbnMoKSkpOworCQlleHRyYURpbWVuc2lvbiA9ICgoQXJyYXlUeXBlKSB0eXBlKS5n
ZXREaW1lbnNpb25BdCgxKTsKKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgYW5ub3RhdGlvbnMi
LCAiQE1hcmtlcjIgQE1hcmtlcjMgIiwgY29udmVydEFubm90YXRpb25zTGlzdChleHRyYURpbWVu
c2lvbi5hbm5vdGF0aW9ucygpKSk7CisJCWV4dHJhRGltZW5zaW9uID0gKChBcnJheVR5cGUpIHR5
cGUpLmdldERpbWVuc2lvbkF0KDIpOworCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCBhbm5vdGF0
aW9ucyIsICJATWFya2VyIEBNYXJrZXIyICIsIGNvbnZlcnRBbm5vdGF0aW9uc0xpc3QoZXh0cmFE
aW1lbnNpb24uYW5ub3RhdGlvbnMoKSkpOwogCQlMaXN0IGRpbWVuc2lvbnMgPSBjcmVhdGlvbi5k
aW1lbnNpb25zKCk7CiAJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IGV4cHJlc3Npb25zIiwgMiwg
ZGltZW5zaW9ucy5zaXplKCkpOwogCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCBleHByZXNzaW9u
cyIsICIyIiwgZGltZW5zaW9ucy5nZXQoMCkudG9TdHJpbmcoKSk7CkBAIC0xMTU5LDEzICsxMTU4
LDEyIEBACiAJCQogCQl0eXBlID0gY3JlYXRpb24uZ2V0VHlwZSgpOwogCQlhc3NlcnRFcXVhbHMo
IkluY29ycmVjdCB0eXBlIiwgdHJ1ZSwgdHlwZS5pc0FycmF5VHlwZSgpKTsKLQkJYXNzZXJ0RXF1
YWxzKCJJbmNvcnJlY3QgYW5ub3RhdGlvbnMiLCAiQE1hcmtlcjIgQE1hcmtlcjMgIiwgY29udmVy
dEFubm90YXRpb25zTGlzdCgoKEFycmF5VHlwZSkgdHlwZSkuYW5ub3RhdGlvbnMoKSkpOwotCQl0
eXBlID0gKChBcnJheVR5cGUpIHR5cGUpLmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNzZXJ0RXF1
YWxzKCJJbmNvcnJlY3QgdHlwZSIsIHRydWUsIHR5cGUuaXNBcnJheVR5cGUoKSk7Ci0JCWFzc2Vy
dEVxdWFscygiSW5jb3JyZWN0IGFubm90YXRpb25zIiwgIkBNYXJrZXIgQE1hcmtlcjIgIiwgY29u
dmVydEFubm90YXRpb25zTGlzdCgoKEFycmF5VHlwZSkgdHlwZSkuYW5ub3RhdGlvbnMoKSkpOwot
CQl0eXBlID0gKChBcnJheVR5cGUpIHR5cGUpLmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNzZXJ0
RXF1YWxzKCJJbmNvcnJlY3QgdHlwZSIsIHRydWUsIHR5cGUuaXNBcnJheVR5cGUoKSk7Ci0JCWFz
c2VydEVxdWFscygiSW5jb3JyZWN0IGFubm90YXRpb25zIiwgIkBNYXJrZXIzIEBNYXJrZXIgIiwg
Y29udmVydEFubm90YXRpb25zTGlzdCgoKEFycmF5VHlwZSkgdHlwZSkuYW5ub3RhdGlvbnMoKSkp
OworCQlleHRyYURpbWVuc2lvbiA9ICgoQXJyYXlUeXBlKSB0eXBlKS5nZXREaW1lbnNpb25BdCgw
KTsKKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgYW5ub3RhdGlvbnMiLCAiQE1hcmtlcjIgQE1h
cmtlcjMgIiwgY29udmVydEFubm90YXRpb25zTGlzdChleHRyYURpbWVuc2lvbi5hbm5vdGF0aW9u
cygpKSk7CisJCWV4dHJhRGltZW5zaW9uID0gKChBcnJheVR5cGUpIHR5cGUpLmdldERpbWVuc2lv
bkF0KDEpOworCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCBhbm5vdGF0aW9ucyIsICJATWFya2Vy
IEBNYXJrZXIyICIsIGNvbnZlcnRBbm5vdGF0aW9uc0xpc3QoZXh0cmFEaW1lbnNpb24uYW5ub3Rh
dGlvbnMoKSkpOworCQlleHRyYURpbWVuc2lvbiA9ICgoQXJyYXlUeXBlKSB0eXBlKS5nZXREaW1l
bnNpb25BdCgyKTsKKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgYW5ub3RhdGlvbnMiLCAiQE1h
cmtlcjMgQE1hcmtlciAiLCBjb252ZXJ0QW5ub3RhdGlvbnNMaXN0KGV4dHJhRGltZW5zaW9uLmFu
bm90YXRpb25zKCkpKTsKIAkJZGltZW5zaW9ucyA9IGNyZWF0aW9uLmRpbWVuc2lvbnMoKTsKIAkJ
YXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgZXhwcmVzc2lvbnMiLCAyLCBkaW1lbnNpb25zLnNpemUo
KSk7CiAJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IGV4cHJlc3Npb25zIiwgIjIiLCBkaW1lbnNp
b25zLmdldCgwKS50b1N0cmluZygpKTsKQEAgLTEyMzYsMTIgKzEyMzQsNiBAQAogCQlWYXJpYWJs
ZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdt
ZW50KSBsaXN0LmdldCgwKTsKIAkJQXJyYXlDcmVhdGlvbiBjcmVhdGlvbiA9IChBcnJheUNyZWF0
aW9uKSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOwogCQlUeXBlIHR5cGUgPSBjcmVhdGlvbi5n
ZXRUeXBlKCk7Ci0JCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IHR5cGUiLCB0cnVlLCB0eXBlLmlz
QXJyYXlUeXBlKCkpOwotCQlhc3NlcnRFcXVhbHMoIlR5cGUgc2hvdWxkIGJlIG1hbGZvcm1lZCIs
IEFTVE5vZGUuTUFMRk9STUVELCAodHlwZS5nZXRGbGFncygpICYgQVNUTm9kZS5NQUxGT1JNRUQp
KTsKLQkJdHlwZSA9ICgoQXJyYXlUeXBlKSB0eXBlKS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWFz
c2VydEVxdWFscygiSW5jb3JyZWN0IHR5cGUiLCB0cnVlLCB0eXBlLmlzQXJyYXlUeXBlKCkpOwot
CQlhc3NlcnRFcXVhbHMoIlR5cGUgc2hvdWxkIGJlIG1hbGZvcm1lZCIsIEFTVE5vZGUuTUFMRk9S
TUVELCAodHlwZS5nZXRGbGFncygpICYgQVNUTm9kZS5NQUxGT1JNRUQpKTsKLQkJdHlwZSA9ICgo
QXJyYXlUeXBlKSB0eXBlKS5nZXRDb21wb25lbnRUeXBlKCk7CiAJCWFzc2VydEVxdWFscygiSW5j
b3JyZWN0IHR5cGUiLCB0cnVlLCB0eXBlLmlzQXJyYXlUeXBlKCkpOwogCQlhc3NlcnRFcXVhbHMo
IlR5cGUgc2hvdWxkIGJlIG1hbGZvcm1lZCIsIEFTVE5vZGUuTUFMRk9STUVELCAodHlwZS5nZXRG
bGFncygpICYgQVNUTm9kZS5NQUxGT1JNRUQpKTsKIAl9CkBAIC0xNjE0LDE0ICsxNjA2LDE0IEBA
CiAJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CiAJ
CWFzc2VydFRydWUoZXhwcmVzc2lvbiBpbnN0YW5jZW9mIExhbWJkYUV4cHJlc3Npb24pOwogCQlM
YW1iZGFFeHByZXNzaW9uIGxhbWJkYUV4cHJlc3Npb24gPSAoTGFtYmRhRXhwcmVzc2lvbilleHBy
ZXNzaW9uOwotCQlhc3NlcnRFcXVhbHMoIihpbnRbXSBpYSkgLT4ge1xuICByZXR1cm4gaWEuY2xv
bmUoKTtcbn1cbiIsIGxhbWJkYUV4cHJlc3Npb24udG9TdHJpbmcoKSk7CisJCWFzc2VydEVxdWFs
cygiKGludCBbXSBpYSkgLT4ge1xuICByZXR1cm4gaWEuY2xvbmUoKTtcbn1cbiIsIGxhbWJkYUV4
cHJlc3Npb24udG9TdHJpbmcoKSk7CiAJCUlNZXRob2RCaW5kaW5nIGJpbmRpbmcgPSBsYW1iZGFF
eHByZXNzaW9uLnJlc29sdmVNZXRob2RCaW5kaW5nKCk7CiAJCWFzc2VydEVxdWFscygicHJpdmF0
ZSBzdGF0aWMgamF2YS5sYW5nLk9iamVjdCBsYW1iZGEkMChpbnRbXSkgIiwgYmluZGluZy50b1N0
cmluZygpKTsKIAkJYXNzZXJ0VHJ1ZShsYW1iZGFFeHByZXNzaW9uLnBhcmFtZXRlcnMoKS5zaXpl
KCkgPT0gMSk7CiAJCVZhcmlhYmxlRGVjbGFyYXRpb24gdmFyaWFibGVEZWNsYXJhdGlvbiA9IChW
YXJpYWJsZURlY2xhcmF0aW9uKSBsYW1iZGFFeHByZXNzaW9uLnBhcmFtZXRlcnMoKS5nZXQoMCk7
CiAJCWFzc2VydFRydWUodmFyaWFibGVEZWNsYXJhdGlvbiBpbnN0YW5jZW9mIFNpbmdsZVZhcmlh
YmxlRGVjbGFyYXRpb24pOwogCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIHNpbmdsZVZhcmlh
YmxlRGVjbGFyYXRpb24gPSAoU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbil2YXJpYWJsZURlY2xh
cmF0aW9uOwotCQlhc3NlcnRFcXVhbHMoImludFtdIGlhIiwgc2luZ2xlVmFyaWFibGVEZWNsYXJh
dGlvbi50b1N0cmluZygpKTsJCQorCQlhc3NlcnRFcXVhbHMoImludCBbXSBpYSIsIHNpbmdsZVZh
cmlhYmxlRGVjbGFyYXRpb24udG9TdHJpbmcoKSk7CQkKIAl9CiAKIAkvKioKQEAgLTI2NTMsNSAr
MjY0NSwyMzIgQEAKIAkJdHlwZUJpbmRpbmcgPSB0eXBlLnJlc29sdmVCaW5kaW5nKCk7CiAJCWFz
c2VydEZhbHNlKCJBIEZ1bmN0aW9uYWwgaW50ZXJmYWNlIiwgdHlwZUJpbmRpbmcuaXNGdW5jdGlv
bmFsSW50ZXJmYWNlKCkpOwogCX0KKwkvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9z
aG93X2J1Zy5jZ2k/aWQ9NDEzOTQyCisJLy8gYWxzbyByZWZlciBodHRwczovL2J1Z3MuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDEzNTY5CisJcHVibGljIHZvaWQgdGVzdEJ1ZzQx
Mzk0MigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlTdHJpbmcgY29udGVudHMgPQor
CQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBATm9uTnVsbChpbnRbXS5jbGFzcykgT2JqZWN0IHtc
biIgKworCQkiICAgIE9iamVjdCBmaWVsZCA9IG5ldyBBcnJheUxpc3Q8IEBOb25FbXB0eSgwKSBp
bnQgQE5vbk51bGwodmFsdWUxID0gMSkgW10gQE5vbkVtcHR5KDEpIFsgXT4oKSA7XG4iICsKKwkJ
IiAgICBAQW5ub3QgaW50IEBBbm5vdDEgW10gYTEgQEFubm90MiBAQW5ub3QzIEBOb25OdWxsICh2
YWx1ZSA9IGludFtdLmNsYXNzLCB2YWx1ZTEgPSAwKVsvKiBbXSAqLyBdIEBBbm5vdDMgQEFubm90
MiBbXSBAQW5ub3Q0IFtdO1xuIiArCisJCSIgICAgaW50W10geHh4W107XG4iICsKKwkJIiAgICBp
bnQgW11bXSBpaSA9IG5ldyBpbnRbMl1bM107IiArCisJCSIgICAgQXJyYXlMaXN0PGludFtdPiBb
XVtdIHl5eTsgLy8gc291cmNlIHJhbmdlcyBhbHJlYWR5IGJyb2tlbiBpbiBBU1QuSkxTNFxuIiAr
CisJCSIgICAgQXJyYXlMaXN0PGludFtdW10+IFtdW11bXVtdIHp6ejtcbiIgKworCQkiICAgIEFy
cmF5TGlzdDxGbG9hdD4gW11bXVtdIHp6ejI7XG4iICsKKwkJIiAgICBPYmplY3QgYSA9IG5ldyBB
cnJheUxpc3Q8IEBUYWtlVHlwZShpbnRbXVtdLmNsYXNzKSBpbnQgQFRha2VUeXBlKGZsb2F0LmNs
YXNzKSBbXSBAVGFrZVR5cGUoZG91YmxlLmNsYXNzKSBbXT4oKSA7XG4iICsKKwkJIiAgICBPYmpl
Y3QgYiA9IG5ldyBATm9uTnVsbCh2YWx1ZTEgPSBNYXRoLlBJKSBBcnJheUxpc3Q8ID4oKSA7IFxu
IiArCisJCSIgICAgT2JqZWN0IGMgPSBuZXcgQXJyYXlMaXN0PEBOb25OdWxsKHZhbHVlMT0gTWF0
aC5QSSApIE9iamVjdFtdPigpIDtcbiIgKworCQkiXG4iICsKKwkJIiAgICBpbnQgZm9vKEBUYWtl
VHlwZShpbnRbXS5jbGFzcylpbnQgaSApIEBUYWtlVHlwZShpbnRbXS5jbGFzcykgW10ge1xuIiAr
CisJCSIgICAgICAgIGludFtdIGFyciA9ICBuZXcgaW50WzJdO1xuIiArCisJCSIgICAgICAgIGZv
ciAoU3RyaW5nIHRhYiBAVGFrZVR5cGUoaW50W10uY2xhc3MpIFtdID0gbnVsbDs7ICsraSkgeyBi
cmVhazsgfVxuIiArCisJCSIgICAgICAgIGZvciAoQERlcHJlY2F0ZWQgU3RyaW5nIHRhYkBUYWtl
VHlwZShpbnRbXS5jbGFzcykgW11bXSAgPSBudWxsOzsgKytpKSB7fVxuIiArCisJCSIgICAgfVxu
IiArCisJCSIgICAgaW50IGJhcihpbnQgW10gLypAVGFrZVR5cGUoaW50W10uY2xhc3MpKi8gW10g
YSApIHtcbiIgKworCQkiICAgIAlyZXR1cm4gMDtcbiIgKworCQkiICAgIH1cbiIgKworCQkicHVi
bGljIGludCB2YXIxKGludCBAVGFrZVR5cGUoaW50W10uY2xhc3MpLi4uIGFyZ3MpIHsgcmV0dXJu
IDA7fVxuIiArCisJCSJwdWJsaWMgaW50IHZhcjIoaW50IEBBbm5vdCAuLi4gYXJncykgeyByZXR1
cm4gMDt9XG4iICsKKwkJIn1cbiIgKworCQkiXG4iICsKKwkJIkBUYXJnZXQoRWxlbWVudFR5cGUu
VFlQRV9VU0UpXG4iICsKKwkJIkBSZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LlJVTlRJTUUpXG4i
ICsKKwkJIkBEb2N1bWVudGVkXG4iICsKKwkJIkBpbnRlcmZhY2UgTm9uTnVsbCB7XG4iICsKKwkJ
IglDbGFzcyB2YWx1ZSgpIGRlZmF1bHQgaW50LmNsYXNzO1xuIiArCisJCSIJZG91YmxlIHZhbHVl
MSgpIGRlZmF1bHQgMDtcbiIgKworCQkifVxuIiArCisJCSJcbiIgKworCQkiQFRhcmdldChFbGVt
ZW50VHlwZS5UWVBFX1VTRSlcbiIgKworCQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3kuUlVO
VElNRSlcbiIgKworCQkiQERvY3VtZW50ZWRcbiIgKworCQkiQGludGVyZmFjZSBOb25FbXB0eSB7
XG4iICsKKwkJIglpbnQgdmFsdWUoKSBkZWZhdWx0IDA7XG4iICsKKwkJIn1cbiIgKworCQkiXG4i
ICsKKwkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJIkBSZXRlbnRpb24o
UmV0ZW50aW9uUG9saWN5LlJVTlRJTUUpXG4iICsKKwkJIkBEb2N1bWVudGVkXG4iICsKKwkJIkBp
bnRlcmZhY2UgVGFrZVR5cGUge1xuIiArCisJCSIJQ2xhc3MgdmFsdWUoKSBkZWZhdWx0IGludFtd
LmNsYXNzO1xuIiArCisJCSJ9XG4iICsKKwkJIlxuIiArCisJCSJAVGFyZ2V0KEVsZW1lbnRUeXBl
LlRZUEVfVVNFKVxuIiArCisJCSJAUmV0ZW50aW9uKFJldGVudGlvblBvbGljeS5SVU5USU1FKVxu
IiArCisJCSJARG9jdW1lbnRlZFxuIiArCisJCSJAaW50ZXJmYWNlIEFubm90IHt9XG4iICsKKwkJ
IlxuIiArCisJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCSJAUmV0ZW50
aW9uKFJldGVudGlvblBvbGljeS5SVU5USU1FKVxuIiArCisJCSJARG9jdW1lbnRlZFxuIiArCisJ
CSJAaW50ZXJmYWNlIEFubm90MSB7fVxuIiArCisJCSJcbiIgKworCQkiQFRhcmdldChFbGVtZW50
VHlwZS5UWVBFX1VTRSlcbiIgKworCQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3kuUlVOVElN
RSlcbiIgKworCQkiQERvY3VtZW50ZWRcbiIgKworCQkiQGludGVyZmFjZSBBbm5vdDIge31cbiIg
KworCQkiXG4iICsKKwkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJIkBS
ZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LlJVTlRJTUUpXG4iICsKKwkJIkBEb2N1bWVudGVkXG4i
ICsKKwkJIkBpbnRlcmZhY2UgQW5ub3QzIHt9XG4iICsKKwkJIlxuIiArCisJCSJAVGFyZ2V0KEVs
ZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCSJAUmV0ZW50aW9uKFJldGVudGlvblBvbGljeS5S
VU5USU1FKVxuIiArCisJCSJARG9jdW1lbnRlZFxuIiArCisJCSJAaW50ZXJmYWNlIEFubm90NCB7
fVxuIiArCisJCSJcbiI7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0Nv
bnZlcnRlcjE4L3NyYy9YLmphdmEiLCB0cnVlKTsKKwkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1Qo
Y29udGVudHMsIHRoaXMud29ya2luZ0NvcHksIGZhbHNlKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3Qg
YSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5v
ZGVUeXBlKCkpOworCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5v
ZGU7CisJCQorCQlUeXBlRGVjbGFyYXRpb24gdHlwZSA9ICAoVHlwZURlY2xhcmF0aW9uKSB1bml0
LnR5cGVzKCkuZ2V0KDApOworCQlTaW1wbGVUeXBlIHNpbXBsZVR5cGUgPSAgKFNpbXBsZVR5cGUp
IHR5cGUuZ2V0U3VwZXJjbGFzc1R5cGUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShzaW1wbGVUeXBl
LCAiQE5vbk51bGwoaW50W10uY2xhc3MpIE9iamVjdCIsIGNvbnRlbnRzKTsKKwkJU2luZ2xlTWVt
YmVyQW5ub3RhdGlvbiBzaW5nbGVNZW1iZXJBbm5vdGF0aW9uID0gKFNpbmdsZU1lbWJlckFubm90
YXRpb24pIHNpbXBsZVR5cGUuYW5ub3RhdGlvbnMoKS5nZXQoMCk7CisJCWNoZWNrU291cmNlUmFu
Z2Uoc2luZ2xlTWVtYmVyQW5ub3RhdGlvbiwgIkBOb25OdWxsKGludFtdLmNsYXNzKSIsIGNvbnRl
bnRzKTsKKwkJVHlwZUxpdGVyYWwgdHlwZUxpdGVyYWwgPSAoVHlwZUxpdGVyYWwpIHNpbmdsZU1l
bWJlckFubm90YXRpb24uZ2V0VmFsdWUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlTGl0ZXJh
bCwgImludFtdLmNsYXNzIiwgY29udGVudHMpOworCQlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFy
cmF5VHlwZSkgdHlwZUxpdGVyYWwuZ2V0VHlwZSgpOworCQljaGVja1NvdXJjZVJhbmdlKGFycmF5
VHlwZSwgImludFtdIiwgY29udGVudHMpOworCQkKKwkJaW50IGNvdW50ID0gMDsKKwkJRmllbGRE
ZWNsYXJhdGlvbiBmaWVsZCA9IChGaWVsZERlY2xhcmF0aW9uKSB0eXBlLmJvZHlEZWNsYXJhdGlv
bnMoKS5nZXQoY291bnQrKyk7CisJCWNoZWNrU291cmNlUmFuZ2UoZmllbGQsICJPYmplY3QgZmll
bGQgPSBuZXcgQXJyYXlMaXN0PCBATm9uRW1wdHkoMCkgaW50IEBOb25OdWxsKHZhbHVlMSA9IDEp
IFtdIEBOb25FbXB0eSgxKSBbIF0+KCkgOyIsIGNvbnRlbnRzKTsKKwkJVmFyaWFibGVEZWNsYXJh
dGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZmll
bGQuZnJhZ21lbnRzKCkuZ2V0KDApOworCQlDbGFzc0luc3RhbmNlQ3JlYXRpb24gaW5zdGFuY2Ug
PSAoQ2xhc3NJbnN0YW5jZUNyZWF0aW9uKSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlQ
YXJhbWV0ZXJpemVkVHlwZSBwYXJhbWV0ZXJpemVkVHlwZSA9IChQYXJhbWV0ZXJpemVkVHlwZSkg
aW5zdGFuY2UuZ2V0VHlwZSgpOworCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBwYXJhbWV0ZXJp
emVkVHlwZS50eXBlQXJndW1lbnRzKCkuZ2V0KDApOworCQljaGVja1NvdXJjZVJhbmdlKGFycmF5
VHlwZSwgIkBOb25FbXB0eSgwKSBpbnQgQE5vbk51bGwodmFsdWUxID0gMSkgW10gQE5vbkVtcHR5
KDEpIFsgXSIsIGNvbnRlbnRzKTsKKwkJUHJpbWl0aXZlVHlwZSBwcmltaXRpdmVUeXBlID0gKFBy
aW1pdGl2ZVR5cGUpIGFycmF5VHlwZS5nZXRFbGVtZW50VHlwZSgpOworCQljaGVja1NvdXJjZVJh
bmdlKHByaW1pdGl2ZVR5cGUsICJATm9uRW1wdHkoMCkgaW50IiwgY29udGVudHMpOworCQlFeHRy
YURpbWVuc2lvbiBleHRyYURpbWVuc2lvbiA9IGFycmF5VHlwZS5nZXREaW1lbnNpb25BdCgxKTsK
KwkJY2hlY2tTb3VyY2VSYW5nZShleHRyYURpbWVuc2lvbiwgIkBOb25OdWxsKHZhbHVlMSA9IDEp
IFtdIiwgY29udGVudHMpOworCQlleHRyYURpbWVuc2lvbiA9IGFycmF5VHlwZS5nZXREaW1lbnNp
b25BdCgwKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShleHRyYURpbWVuc2lvbiwgIkBOb25FbXB0eSgx
KSBbIF0iLCBjb250ZW50cyk7CisJCQorCQlmaWVsZCA9IChGaWVsZERlY2xhcmF0aW9uKSB0eXBl
LmJvZHlEZWNsYXJhdGlvbnMoKS5nZXQoY291bnQrKyk7CisJCWNoZWNrU291cmNlUmFuZ2UoZmll
bGQsICJAQW5ub3QgaW50IEBBbm5vdDEgW10gYTEgQEFubm90MiBAQW5ub3QzIEBOb25OdWxsICh2
YWx1ZSA9IGludFtdLmNsYXNzLCB2YWx1ZTEgPSAwKVsvKiBbXSAqLyBdIEBBbm5vdDMgQEFubm90
MiBbXSBAQW5ub3Q0IFtdOyIsIGNvbnRlbnRzKTsKKwkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkg
ZmllbGQuZ2V0VHlwZSgpOworCQljaGVja1NvdXJjZVJhbmdlKGFycmF5VHlwZSwgImludCBAQW5u
b3QxIFtdIiwgY29udGVudHMpOworCQlmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJh
Z21lbnQpIGZpZWxkLmZyYWdtZW50cygpLmdldCgwKTsKKwkJZXh0cmFEaW1lbnNpb24gPSAoRXh0
cmFEaW1lbnNpb24pIGZyYWdtZW50LmV4dHJhRGltZW5zaW9ucygpLmdldCgwKTsKKwkJY2hlY2tT
b3VyY2VSYW5nZShleHRyYURpbWVuc2lvbiwgIkBBbm5vdDIgQEFubm90MyBATm9uTnVsbCAodmFs
dWUgPSBpbnRbXS5jbGFzcywgdmFsdWUxID0gMClbLyogW10gKi8gXSIsIGNvbnRlbnRzKTsKKwkJ
ZXh0cmFEaW1lbnNpb24gPSAoRXh0cmFEaW1lbnNpb24pIGZyYWdtZW50LmV4dHJhRGltZW5zaW9u
cygpLmdldCgxKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShleHRyYURpbWVuc2lvbiwgIkBBbm5vdDMg
QEFubm90MiBbXSIsIGNvbnRlbnRzKTsKKwkJCisJCWZpZWxkID0gKEZpZWxkRGVjbGFyYXRpb24p
IHR5cGUuYm9keURlY2xhcmF0aW9ucygpLmdldChjb3VudCsrKTsKKwkJY2hlY2tTb3VyY2VSYW5n
ZShmaWVsZCwgImludFtdIHh4eFtdOyIsIGNvbnRlbnRzKTsKKwkJYXNzZXJ0VHJ1ZShmaWVsZC5n
ZXRUeXBlKCkuaXNBcnJheVR5cGUoKSk7CisJCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGZpZWxk
LmdldFR5cGUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShhcnJheVR5cGUsICJpbnRbXSIsIGNvbnRl
bnRzKTsKKwkJCisJCWZpZWxkID0gKEZpZWxkRGVjbGFyYXRpb24pIHR5cGUuYm9keURlY2xhcmF0
aW9ucygpLmdldChjb3VudCsrKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShmaWVsZCwgImludCBbXVtd
IGlpID0gbmV3IGludFsyXVszXTsiLCBjb250ZW50cyk7CisJCWFycmF5VHlwZSA9IChBcnJheVR5
cGUpIGZpZWxkLmdldFR5cGUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShhcnJheVR5cGUsICJpbnQg
W11bXSIsIGNvbnRlbnRzKTsKKwkJZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdt
ZW50KSBmaWVsZC5mcmFnbWVudHMoKS5nZXQoMCk7CisJCUFycmF5Q3JlYXRpb24gYXJyYXlDcmVh
dGlvbiA9IChBcnJheUNyZWF0aW9uKSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlhcnJh
eVR5cGUgPSBhcnJheUNyZWF0aW9uLmdldFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZShhcnJheVR5cGUu
Z2V0RWxlbWVudFR5cGUoKS5pc1ByaW1pdGl2ZVR5cGUoKSk7CisJCWFzc2VydFRydWUoYXJyYXlU
eXBlLmdldERpbWVuc2lvbnMoKSA9PSAyKTsKKwkJCisJCWZpZWxkID0gKEZpZWxkRGVjbGFyYXRp
b24pIHR5cGUuYm9keURlY2xhcmF0aW9ucygpLmdldChjb3VudCsrKTsKKwkJY2hlY2tTb3VyY2VS
YW5nZShmaWVsZCwgIkFycmF5TGlzdDxpbnRbXT4gW11bXSB5eXk7IiwgY29udGVudHMpOworCQlh
cnJheVR5cGUgPSAoQXJyYXlUeXBlKSBmaWVsZC5nZXRUeXBlKCk7CisJCWNoZWNrU291cmNlUmFu
Z2UoYXJyYXlUeXBlLCAiQXJyYXlMaXN0PGludFtdPiBbXVtdIiwgY29udGVudHMpOworCisJCWZp
ZWxkID0gKEZpZWxkRGVjbGFyYXRpb24pIHR5cGUuYm9keURlY2xhcmF0aW9ucygpLmdldChjb3Vu
dCsrKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShmaWVsZCwgIkFycmF5TGlzdDxpbnRbXVtdPiBbXVtd
W11bXSB6eno7IiwgY29udGVudHMpOworCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBmaWVsZC5n
ZXRUeXBlKCk7CisJCWFzc2VydFRydWUoYXJyYXlUeXBlLmdldEVsZW1lbnRUeXBlKCkuaXNQYXJh
bWV0ZXJpemVkVHlwZSgpKTsKKwkJYXNzZXJ0VHJ1ZShhcnJheVR5cGUuZ2V0RGltZW5zaW9ucygp
ID09IDQpOworCQkKKwkJZmllbGQgPSAoRmllbGREZWNsYXJhdGlvbikgdHlwZS5ib2R5RGVjbGFy
YXRpb25zKCkuZ2V0KGNvdW50KyspOworCQljaGVja1NvdXJjZVJhbmdlKGZpZWxkLCAiQXJyYXlM
aXN0PEZsb2F0PiBbXVtdW10genp6MjsiLCBjb250ZW50cyk7CisJCWFycmF5VHlwZSA9IChBcnJh
eVR5cGUpIGZpZWxkLmdldFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZShhcnJheVR5cGUuZ2V0RWxlbWVu
dFR5cGUoKS5pc1BhcmFtZXRlcml6ZWRUeXBlKCkpOworCQlhc3NlcnRUcnVlKGFycmF5VHlwZS5n
ZXREaW1lbnNpb25zKCkgPT0gMyk7CisJCQorCQlmaWVsZCA9IChGaWVsZERlY2xhcmF0aW9uKSB0
eXBlLmJvZHlEZWNsYXJhdGlvbnMoKS5nZXQoY291bnQrKyk7CisJCWNoZWNrU291cmNlUmFuZ2Uo
ZmllbGQsICJPYmplY3QgYSA9IG5ldyBBcnJheUxpc3Q8IEBUYWtlVHlwZShpbnRbXVtdLmNsYXNz
KSBpbnQgQFRha2VUeXBlKGZsb2F0LmNsYXNzKSBbXSBAVGFrZVR5cGUoZG91YmxlLmNsYXNzKSBb
XT4oKSA7IiwgY29udGVudHMpOworCQlmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJh
Z21lbnQpIGZpZWxkLmZyYWdtZW50cygpLmdldCgwKTsKKwkJQ2xhc3NJbnN0YW5jZUNyZWF0aW9u
IGNsYXNzSW5zdGFuY2VDcmVhdGlvbiA9IChDbGFzc0luc3RhbmNlQ3JlYXRpb24pIGZyYWdtZW50
LmdldEluaXRpYWxpemVyKCk7CisJCXBhcmFtZXRlcml6ZWRUeXBlID0gKFBhcmFtZXRlcml6ZWRU
eXBlKSBjbGFzc0luc3RhbmNlQ3JlYXRpb24uZ2V0VHlwZSgpOworCQlhcnJheVR5cGUgPSAoQXJy
YXlUeXBlKSBwYXJhbWV0ZXJpemVkVHlwZS50eXBlQXJndW1lbnRzKCkuZ2V0KDApOworCQljaGVj
a1NvdXJjZVJhbmdlKGFycmF5VHlwZSwgIkBUYWtlVHlwZShpbnRbXVtdLmNsYXNzKSBpbnQgQFRh
a2VUeXBlKGZsb2F0LmNsYXNzKSBbXSBAVGFrZVR5cGUoZG91YmxlLmNsYXNzKSBbXSIsIGNvbnRl
bnRzKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShhcnJheVR5cGUuZ2V0RWxlbWVudFR5cGUoKSwgIkBU
YWtlVHlwZShpbnRbXVtdLmNsYXNzKSBpbnQiLCBjb250ZW50cyk7CisJCWFzc2VydFRydWUoYXJy
YXlUeXBlLmdldEVsZW1lbnRUeXBlKCkuaXNQcmltaXRpdmVUeXBlKCkpOworCQlleHRyYURpbWVu
c2lvbiA9IGFycmF5VHlwZS5nZXREaW1lbnNpb25BdCgxKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShl
eHRyYURpbWVuc2lvbiwgIkBUYWtlVHlwZShmbG9hdC5jbGFzcykgW10iLCBjb250ZW50cyk7CisJ
CWV4dHJhRGltZW5zaW9uID0gYXJyYXlUeXBlLmdldERpbWVuc2lvbkF0KDApOworCQlBbm5vdGF0
aW9uIGFubm90YXRpb24gPSAoQW5ub3RhdGlvbikgZXh0cmFEaW1lbnNpb24uYW5ub3RhdGlvbnMo
KS5nZXQoMCk7CisJCWFzc2VydFRydWUoYW5ub3RhdGlvbi5pc1NpbmdsZU1lbWJlckFubm90YXRp
b24oKSk7CisJCXNpbmdsZU1lbWJlckFubm90YXRpb24gPSAoU2luZ2xlTWVtYmVyQW5ub3RhdGlv
bikgYW5ub3RhdGlvbjsKKwkJdHlwZUxpdGVyYWwgPSAoVHlwZUxpdGVyYWwpIHNpbmdsZU1lbWJl
ckFubm90YXRpb24uZ2V0VmFsdWUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlTGl0ZXJhbCwg
ImRvdWJsZS5jbGFzcyIsIGNvbnRlbnRzKTsKKwkJCisJCWZpZWxkID0gKEZpZWxkRGVjbGFyYXRp
b24pIHR5cGUuYm9keURlY2xhcmF0aW9ucygpLmdldChjb3VudCsrKTsKKwkJY2hlY2tTb3VyY2VS
YW5nZShmaWVsZCwgIk9iamVjdCBiID0gbmV3IEBOb25OdWxsKHZhbHVlMSA9IE1hdGguUEkpIEFy
cmF5TGlzdDwgPigpIDsiLCBjb250ZW50cyk7CisJCWZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFy
YXRpb25GcmFnbWVudCkgZmllbGQuZnJhZ21lbnRzKCkuZ2V0KDApOworCQljbGFzc0luc3RhbmNl
Q3JlYXRpb24gPSAoQ2xhc3NJbnN0YW5jZUNyZWF0aW9uKSBmcmFnbWVudC5nZXRJbml0aWFsaXpl
cigpOworCQlwYXJhbWV0ZXJpemVkVHlwZSA9IChQYXJhbWV0ZXJpemVkVHlwZSkgY2xhc3NJbnN0
YW5jZUNyZWF0aW9uLmdldFR5cGUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShwYXJhbWV0ZXJpemVk
VHlwZS5nZXRUeXBlKCksICJATm9uTnVsbCh2YWx1ZTEgPSBNYXRoLlBJKSBBcnJheUxpc3QiLCBj
b250ZW50cyk7CisJCQorCQlmaWVsZCA9IChGaWVsZERlY2xhcmF0aW9uKSB0eXBlLmJvZHlEZWNs
YXJhdGlvbnMoKS5nZXQoY291bnQrKyk7CisJCWNoZWNrU291cmNlUmFuZ2UoZmllbGQsICJPYmpl
Y3QgYyA9IG5ldyBBcnJheUxpc3Q8QE5vbk51bGwodmFsdWUxPSBNYXRoLlBJICkgT2JqZWN0W10+
KCkgOyIsIGNvbnRlbnRzKTsKKwkJZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdt
ZW50KSBmaWVsZC5mcmFnbWVudHMoKS5nZXQoMCk7CisJCWNsYXNzSW5zdGFuY2VDcmVhdGlvbiA9
IChDbGFzc0luc3RhbmNlQ3JlYXRpb24pIGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CisJCXBh
cmFtZXRlcml6ZWRUeXBlID0gKFBhcmFtZXRlcml6ZWRUeXBlKSBjbGFzc0luc3RhbmNlQ3JlYXRp
b24uZ2V0VHlwZSgpOworCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBwYXJhbWV0ZXJpemVkVHlw
ZS50eXBlQXJndW1lbnRzKCkuZ2V0KDApOworCQlhc3NlcnRUcnVlKGFycmF5VHlwZS5nZXREaW1l
bnNpb25zKCkgPT0gMSk7CisJCQorCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2QgPSAoTWV0aG9k
RGVjbGFyYXRpb24pIHR5cGUuYm9keURlY2xhcmF0aW9ucygpLmdldChjb3VudCsrKTsKKwkJZXh0
cmFEaW1lbnNpb24gPSAoRXh0cmFEaW1lbnNpb24pIG1ldGhvZC5leHRyYURpbWVuc2lvbnMoKS5n
ZXQoMCk7CisJCWNoZWNrU291cmNlUmFuZ2UoZXh0cmFEaW1lbnNpb24sICJAVGFrZVR5cGUoaW50
W10uY2xhc3MpIFtdIiwgY29udGVudHMpOworCQlzaW5nbGVNZW1iZXJBbm5vdGF0aW9uID0gKFNp
bmdsZU1lbWJlckFubm90YXRpb24pIGV4dHJhRGltZW5zaW9uLmFubm90YXRpb25zKCkuZ2V0KDAp
OworCQl0eXBlTGl0ZXJhbCA9IChUeXBlTGl0ZXJhbCkgc2luZ2xlTWVtYmVyQW5ub3RhdGlvbi5n
ZXRWYWx1ZSgpOworCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlTGl0ZXJhbC5nZXRUeXBl
KCk7CisJCWFzc2VydFRydWUoYXJyYXlUeXBlLmdldEVsZW1lbnRUeXBlKCkuaXNQcmltaXRpdmVU
eXBlKCkpOworCQlhc3NlcnRUcnVlKGFycmF5VHlwZS5nZXREaW1lbnNpb25zKCkgPT0gMSk7CisJ
CVNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiA9IChT
aW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uKSBtZXRob2QucGFyYW1ldGVycygpLmdldCgwKTsKKwkJ
c2luZ2xlTWVtYmVyQW5ub3RhdGlvbiA9IChTaW5nbGVNZW1iZXJBbm5vdGF0aW9uKSBzaW5nbGVW
YXJpYWJsZURlY2xhcmF0aW9uLm1vZGlmaWVycygpLmdldCgwKTsKKwkJY2hlY2tTb3VyY2VSYW5n
ZShzaW5nbGVNZW1iZXJBbm5vdGF0aW9uLCAiQFRha2VUeXBlKGludFtdLmNsYXNzKSIsIGNvbnRl
bnRzKTsKKwkJdHlwZUxpdGVyYWwgPSAoVHlwZUxpdGVyYWwpIHNpbmdsZU1lbWJlckFubm90YXRp
b24uZ2V0VmFsdWUoKTsKKwkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZUxpdGVyYWwuZ2V0
VHlwZSgpOworCQlhc3NlcnRUcnVlKGFycmF5VHlwZS5nZXRFbGVtZW50VHlwZSgpLmlzUHJpbWl0
aXZlVHlwZSgpKTsKKwkJYXNzZXJ0VHJ1ZShhcnJheVR5cGUuZ2V0RGltZW5zaW9ucygpID09IDEp
OworCQlGb3JTdGF0ZW1lbnQgZm9yU3RhdGVtZW50ID0gKEZvclN0YXRlbWVudCkgbWV0aG9kLmdl
dEJvZHkoKS5zdGF0ZW1lbnRzKCkuZ2V0KDEpOworCQlWYXJpYWJsZURlY2xhcmF0aW9uRXhwcmVz
c2lvbiB2YXJpYWJsZURlY2xhcmF0aW9uRXhwcmVzc2lvbiA9IChWYXJpYWJsZURlY2xhcmF0aW9u
RXhwcmVzc2lvbikgZm9yU3RhdGVtZW50LmluaXRpYWxpemVycygpLmdldCgwKTsKKwkJZnJhZ21l
bnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSB2YXJpYWJsZURlY2xhcmF0aW9uRXhw
cmVzc2lvbi5mcmFnbWVudHMoKS5nZXQoMCk7CisJCWV4dHJhRGltZW5zaW9uID0gKEV4dHJhRGlt
ZW5zaW9uKSBmcmFnbWVudC5leHRyYURpbWVuc2lvbnMoKS5nZXQoMCk7CisJCWNoZWNrU291cmNl
UmFuZ2UoZXh0cmFEaW1lbnNpb24sICJAVGFrZVR5cGUoaW50W10uY2xhc3MpIFtdIiwgY29udGVu
dHMpOworCQlmb3JTdGF0ZW1lbnQgPSAoRm9yU3RhdGVtZW50KSBtZXRob2QuZ2V0Qm9keSgpLnN0
YXRlbWVudHMoKS5nZXQoMSk7CisJCXZhcmlhYmxlRGVjbGFyYXRpb25FeHByZXNzaW9uID0gKFZh
cmlhYmxlRGVjbGFyYXRpb25FeHByZXNzaW9uKSBmb3JTdGF0ZW1lbnQuaW5pdGlhbGl6ZXJzKCku
Z2V0KDApOworCQlmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIHZhcmlh
YmxlRGVjbGFyYXRpb25FeHByZXNzaW9uLmZyYWdtZW50cygpLmdldCgwKTsKKwkJZXh0cmFEaW1l
bnNpb24gPSAoRXh0cmFEaW1lbnNpb24pIGZyYWdtZW50LmV4dHJhRGltZW5zaW9ucygpLmdldCgw
KTsKKwkJY2hlY2tTb3VyY2VSYW5nZShleHRyYURpbWVuc2lvbiwgIkBUYWtlVHlwZShpbnRbXS5j
bGFzcykgW10iLCBjb250ZW50cyk7CisJCQorCQltZXRob2QgPSAoTWV0aG9kRGVjbGFyYXRpb24p
IHR5cGUuYm9keURlY2xhcmF0aW9ucygpLmdldChjb3VudCsrKTsKKwkJc2luZ2xlVmFyaWFibGVE
ZWNsYXJhdGlvbiA9IChTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uKSBtZXRob2QucGFyYW1ldGVy
cygpLmdldCgwKTsKKwkJLy8gdGVzdCBjYXNlIGFjdGl2ZSBvbmx5IGFmdGVyIGJ1ZyA0MTc2NjAg
aXMgZml4ZWQgKHVuY29tbWVudCkKKwkJY2hlY2tTb3VyY2VSYW5nZShzaW5nbGVWYXJpYWJsZURl
Y2xhcmF0aW9uLCAiaW50IFtdIC8qQFRha2VUeXBlKGludFtdLmNsYXNzKSovIFtdIGEiLCBjb250
ZW50cyk7CisJCQorCQltZXRob2QgPSAoTWV0aG9kRGVjbGFyYXRpb24pIHR5cGUuYm9keURlY2xh
cmF0aW9ucygpLmdldChjb3VudCsrKTsKKwkJc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiA9IChT
aW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uKSBtZXRob2QucGFyYW1ldGVycygpLmdldCgwKTsKKwkJ
Y2hlY2tTb3VyY2VSYW5nZShzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLCAiaW50IEBUYWtlVHlw
ZShpbnRbXS5jbGFzcykuLi4gYXJncyIsIGNvbnRlbnRzKTsKKwkJc2luZ2xlTWVtYmVyQW5ub3Rh
dGlvbiA9IChTaW5nbGVNZW1iZXJBbm5vdGF0aW9uKSBzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9u
LnZhcmFyZ3NBbm5vdGF0aW9ucygpLmdldCgwKTsKKwkJdHlwZUxpdGVyYWwgPSAoVHlwZUxpdGVy
YWwpIHNpbmdsZU1lbWJlckFubm90YXRpb24uZ2V0VmFsdWUoKTsKKwkJYXJyYXlUeXBlID0gKEFy
cmF5VHlwZSkgdHlwZUxpdGVyYWwuZ2V0VHlwZSgpOworCQlhc3NlcnRUcnVlKGFycmF5VHlwZS5n
ZXRFbGVtZW50VHlwZSgpLmlzUHJpbWl0aXZlVHlwZSgpKTsKKwkJYXNzZXJ0VHJ1ZShhcnJheVR5
cGUuZ2V0RGltZW5zaW9ucygpID09IDEpOworCQkKKwkJbWV0aG9kID0gKE1ldGhvZERlY2xhcmF0
aW9uKSB0eXBlLmJvZHlEZWNsYXJhdGlvbnMoKS5nZXQoY291bnQrKyk7CisJCXNpbmdsZVZhcmlh
YmxlRGVjbGFyYXRpb24gPSAoU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbikgbWV0aG9kLnBhcmFt
ZXRlcnMoKS5nZXQoMCk7CisJCWNoZWNrU291cmNlUmFuZ2Uoc2luZ2xlVmFyaWFibGVEZWNsYXJh
dGlvbiwgImludCBAQW5ub3QgLi4uIGFyZ3MiLCBjb250ZW50cyk7CisJCWFzc2VydFRydWUoc2lu
Z2xlVmFyaWFibGVEZWNsYXJhdGlvbi52YXJhcmdzQW5ub3RhdGlvbnMoKS5zaXplKCkgPT0gMSk7
CisKKwl9CiAKIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVs
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyQVNUM1Rlc3Qu
amF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyQVNUM1Rlc3QuamF2YQppbmRleCA5ZDc3Zjcy
Li5hNjJiYWZkIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlckFTVDNUZXN0Lmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXJBU1QzVGVzdC5qYXZhCkBAIC01OSw2ICs1
OSwxMyBAQAogCQlyZXR1cm4gbWV0aG9kRGVjbGFyYXRpb24udGhyb3duRXhjZXB0aW9ucygpOwog
CX0KIAorCS8qKgorCSAqIEBkZXByZWNhdGVkCisJICovCisJcHJpdmF0ZSBUeXBlIGNvbXBvbmVu
dFR5cGUoQXJyYXlUeXBlIGFycmF5KSB7CisJCXJldHVybiBhcnJheS5nZXRDb21wb25lbnRUeXBl
KCk7CisJfQorCiAJcHVibGljIHZvaWQgdGVzdDAwMDEoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0
aW9uIHsKIAkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0
KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDAwMSIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5M
Uy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAogCQljaGFyW10g
c291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOwpAQCAtNzY1OSwx
MyArNzY2NiwxMyBAQAogCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSBhcnJheVR5cGUucmVz
b2x2ZUJpbmRpbmcoKTsKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiamF2YS5sYW5nLk9iamVj
dFtdW10iLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCiAJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUg
YmluZGluZyIsIHR5cGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAotCQlUeXBlIGVsZW1lbnRUeXBl
ID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJVHlwZSBlbGVtZW50VHlwZSA9IGNv
bXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nMiA9IGVs
ZW1lbnRUeXBlLnJlc29sdmVCaW5kaW5nKCk7CiAJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUgYmlu
ZGluZzIiLCB0eXBlQmluZGluZzIpOyAvLyROT04tTkxTLTEkCiAJCWFzc2VydEVxdWFscygid3Jv
bmcgZGltZW5zaW9uIiwgMSwgdHlwZUJpbmRpbmcyLmdldERpbWVuc2lvbnMoKSk7IC8vJE5PTi1O
TFMtMSQKIAkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgIk9iamVjdFtdIiwgdHlwZUJpbmRp
bmcyLmdldE5hbWUoKSk7CQkgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCiAJCWFzc2VydFRy
dWUoIk5vdCBhbiBhcnJheSB0eXBlIiwgZWxlbWVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5P
Ti1OTFMtMSQKLQkJVHlwZSBlbGVtZW50VHlwZTIgPSAoKEFycmF5VHlwZSkgZWxlbWVudFR5cGUp
LmdldENvbXBvbmVudFR5cGUoKTsKKwkJVHlwZSBlbGVtZW50VHlwZTIgPSBjb21wb25lbnRUeXBl
KCgoQXJyYXlUeXBlKSBlbGVtZW50VHlwZSkpOwogCQlhc3NlcnRUcnVlKCJOb3QgYSBzaW1wbGUg
dHlwZSIsIGVsZW1lbnRUeXBlMi5pc1NpbXBsZVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJSVR5
cGVCaW5kaW5nIHR5cGVCaW5kaW5nMyA9IGVsZW1lbnRUeXBlMi5yZXNvbHZlQmluZGluZygpOwog
CQlhc3NlcnROb3ROdWxsKCJObyB0eXBlIGJpbmRpbmczIiwgdHlwZUJpbmRpbmczKTsgLy8kTk9O
LU5MUy0xJApAQCAtODAwNiw3ICs4MDEzLDcgQEAKIAkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5n
MyA9IHNpbXBsZVR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKIAkJYXNzZXJ0Tm90TnVsbCgibm8gdHlw
ZSBiaW5kaW5nMyIsIHR5cGVCaW5kaW5nMyk7IC8vJE5PTi1OTFMtMSQKIAkJYXNzZXJ0RXF1YWxz
KCJ3cm9uZyBuYW1lIiwgIk9iamVjdCIsIHR5cGVCaW5kaW5nMy5nZXROYW1lKCkpOyAvLyROT04t
TkxTLTEkIC8vJE5PTi1OTFMtMiQKLQkJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBl
KCk7CisJCXR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7CiAJCWFzc2VydFRydWUoIk5v
dCBhbiBhcnJheSB0eXBlIiwgdHlwZSBpbnN0YW5jZW9mIEFycmF5VHlwZSk7IC8vJE5PTi1OTFMt
MSQKIAkJQXJyYXlUeXBlIGFycmF5VHlwZTIgPSAoQXJyYXlUeXBlKSB0eXBlOwogCQlJVHlwZUJp
bmRpbmcgdHlwZUJpbmRpbmc0ID0gYXJyYXlUeXBlMi5yZXNvbHZlQmluZGluZygpOwpAQCAtODA0
OCwxNCArODA1NSwxNCBAQAogCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmczID0gc2ltcGxlVHlw
ZS5yZXNvbHZlQmluZGluZygpOwogCQlhc3NlcnROb3ROdWxsKCJubyB0eXBlIGJpbmRpbmczIiwg
dHlwZUJpbmRpbmczKTsgLy8kTk9OLU5MUy0xJAogCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUi
LCAiT2JqZWN0IiwgdHlwZUJpbmRpbmczLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9O
LU5MUy0yJAotCQl0eXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJdHlwZSA9
IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5
cGUiLCB0eXBlIGluc3RhbmNlb2YgQXJyYXlUeXBlKTsgLy8kTk9OLU5MUy0xJAogCQlBcnJheVR5
cGUgYXJyYXlUeXBlMiA9IChBcnJheVR5cGUpIHR5cGU7CiAJCWNoZWNrU291cmNlUmFuZ2UoYXJy
YXlUeXBlMiwgIk9iamVjdFsxMF1bXSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKIAkJSVR5cGVC
aW5kaW5nIHR5cGVCaW5kaW5nNCA9IGFycmF5VHlwZTIucmVzb2x2ZUJpbmRpbmcoKTsKIAkJYXNz
ZXJ0Tm90TnVsbCgibm8gdHlwZSBiaW5kaW5nNCIsIHR5cGVCaW5kaW5nNCk7IC8vJE5PTi1OTFMt
MSQKIAkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgIk9iamVjdFtdW10iLCB0eXBlQmluZGlu
ZzQuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCi0JCXR5cGUgPSBhcnJh
eVR5cGUyLmdldENvbXBvbmVudFR5cGUoKTsKKwkJdHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlU
eXBlMik7CiAJCWFzc2VydFRydWUoIk5vdCBhbiBhcnJheSB0eXBlIiwgdHlwZSBpbnN0YW5jZW9m
IEFycmF5VHlwZSk7IC8vJE5PTi1OTFMtMSQKIAkJQXJyYXlUeXBlIGFycmF5VHlwZTMgPSAoQXJy
YXlUeXBlKSB0eXBlOwogCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmc1ID0gYXJyYXlUeXBlMy5y
ZXNvbHZlQmluZGluZygpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
bW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXJBU1Q0
VGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXJBU1Q0VGVzdC5qYXZhCmluZGV4IDhm
NDEwMTIuLmM1OGEyMTggMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1v
ZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyQVNUNFRl
c3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlckFTVDRUZXN0LmphdmEKQEAgLTU5
LDYgKzU5LDEzIEBACiAJCXJldHVybiBtZXRob2REZWNsYXJhdGlvbi50aHJvd25FeGNlcHRpb25z
KCk7CiAJfQogCisJLyoqCisJICogQGRlcHJlY2F0ZWQKKwkgKi8KKwlwcml2YXRlIFR5cGUgY29t
cG9uZW50VHlwZShBcnJheVR5cGUgYXJyYXkpIHsKKwkJcmV0dXJuIGFycmF5LmdldENvbXBvbmVu
dFR5cGUoKTsKKwl9CisKIAlwdWJsaWMgdm9pZCB0ZXN0MDAwMSgpIHRocm93cyBKYXZhTW9kZWxF
eGNlcHRpb24gewogCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlv
blVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMDAxIiwgIlRlc3QuamF2YSIpOyAvLyRO
T04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCiAJCWNo
YXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CkBAIC03
NjU5LDEzICs3NjY2LDEzIEBACiAJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IGFycmF5VHlw
ZS5yZXNvbHZlQmluZGluZygpOwogCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJqYXZhLmxhbmcu
T2JqZWN0W11bXSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKIAkJYXNzZXJ0Tm90TnVsbCgiTm8g
dHlwZSBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOyAvLyROT04tTkxTLTEkCi0JCVR5cGUgZWxlbWVu
dFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlUeXBlIGVsZW1lbnRUeXBl
ID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcy
ID0gZWxlbWVudFR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKIAkJYXNzZXJ0Tm90TnVsbCgiTm8gdHlw
ZSBiaW5kaW5nMiIsIHR5cGVCaW5kaW5nMik7IC8vJE5PTi1OTFMtMSQKIAkJYXNzZXJ0RXF1YWxz
KCJ3cm9uZyBkaW1lbnNpb24iLCAxLCB0eXBlQmluZGluZzIuZ2V0RGltZW5zaW9ucygpKTsgLy8k
Tk9OLU5MUy0xJAogCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAiT2JqZWN0W10iLCB0eXBl
QmluZGluZzIuZ2V0TmFtZSgpKTsJCSAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKIAkJYXNz
ZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5cGUiLCBlbGVtZW50VHlwZS5pc0FycmF5VHlwZSgpKTsg
Ly8kTk9OLU5MUy0xJAotCQlUeXBlIGVsZW1lbnRUeXBlMiA9ICgoQXJyYXlUeXBlKSBlbGVtZW50
VHlwZSkuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlUeXBlIGVsZW1lbnRUeXBlMiA9IGNvbXBvbmVu
dFR5cGUoKChBcnJheVR5cGUpIGVsZW1lbnRUeXBlKSk7CiAJCWFzc2VydFRydWUoIk5vdCBhIHNp
bXBsZSB0eXBlIiwgZWxlbWVudFR5cGUyLmlzU2ltcGxlVHlwZSgpKTsgLy8kTk9OLU5MUy0xJAog
CQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmczID0gZWxlbWVudFR5cGUyLnJlc29sdmVCaW5kaW5n
KCk7CiAJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUgYmluZGluZzMiLCB0eXBlQmluZGluZzMpOyAv
LyROT04tTkxTLTEkCkBAIC04MDA2LDcgKzgwMTMsNyBAQAogCQlJVHlwZUJpbmRpbmcgdHlwZUJp
bmRpbmczID0gc2ltcGxlVHlwZS5yZXNvbHZlQmluZGluZygpOwogCQlhc3NlcnROb3ROdWxsKCJu
byB0eXBlIGJpbmRpbmczIiwgdHlwZUJpbmRpbmczKTsgLy8kTk9OLU5MUy0xJAogCQlhc3NlcnRF
cXVhbHMoIndyb25nIG5hbWUiLCAiT2JqZWN0IiwgdHlwZUJpbmRpbmczLmdldE5hbWUoKSk7IC8v
JE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAotCQl0eXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVu
dFR5cGUoKTsKKwkJdHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNzZXJ0VHJ1
ZSgiTm90IGFuIGFycmF5IHR5cGUiLCB0eXBlIGluc3RhbmNlb2YgQXJyYXlUeXBlKTsgLy8kTk9O
LU5MUy0xJAogCQlBcnJheVR5cGUgYXJyYXlUeXBlMiA9IChBcnJheVR5cGUpIHR5cGU7CiAJCUlU
eXBlQmluZGluZyB0eXBlQmluZGluZzQgPSBhcnJheVR5cGUyLnJlc29sdmVCaW5kaW5nKCk7CkBA
IC04MDQ4LDE0ICs4MDU1LDE0IEBACiAJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzMgPSBzaW1w
bGVUeXBlLnJlc29sdmVCaW5kaW5nKCk7CiAJCWFzc2VydE5vdE51bGwoIm5vIHR5cGUgYmluZGlu
ZzMiLCB0eXBlQmluZGluZzMpOyAvLyROT04tTkxTLTEkCiAJCWFzc2VydEVxdWFscygid3Jvbmcg
bmFtZSIsICJPYmplY3QiLCB0eXBlQmluZGluZzMuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAv
LyROT04tTkxTLTIkCi0JCXR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQl0
eXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJOb3QgYW4gYXJy
YXkgdHlwZSIsIHR5cGUgaW5zdGFuY2VvZiBBcnJheVR5cGUpOyAvLyROT04tTkxTLTEkCiAJCUFy
cmF5VHlwZSBhcnJheVR5cGUyID0gKEFycmF5VHlwZSkgdHlwZTsKIAkJY2hlY2tTb3VyY2VSYW5n
ZShhcnJheVR5cGUyLCAiT2JqZWN0WzEwXVtdIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAogCQlJ
VHlwZUJpbmRpbmcgdHlwZUJpbmRpbmc0ID0gYXJyYXlUeXBlMi5yZXNvbHZlQmluZGluZygpOwog
CQlhc3NlcnROb3ROdWxsKCJubyB0eXBlIGJpbmRpbmc0IiwgdHlwZUJpbmRpbmc0KTsgLy8kTk9O
LU5MUy0xJAogCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAiT2JqZWN0W11bXSIsIHR5cGVC
aW5kaW5nNC5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKLQkJdHlwZSA9
IGFycmF5VHlwZTIuZ2V0Q29tcG9uZW50VHlwZSgpOworCQl0eXBlID0gY29tcG9uZW50VHlwZShh
cnJheVR5cGUyKTsKIAkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5cGUiLCB0eXBlIGluc3Rh
bmNlb2YgQXJyYXlUeXBlKTsgLy8kTk9OLU5MUy0xJAogCQlBcnJheVR5cGUgYXJyYXlUeXBlMyA9
IChBcnJheVR5cGUpIHR5cGU7CiAJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzUgPSBhcnJheVR5
cGUzLnJlc29sdmVCaW5kaW5nKCk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRl
ckFTVDhUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlckFTVDhUZXN0LmphdmEKaW5k
ZXggY2UwZmNjNC4uZDQxMzBlNSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXJB
U1Q4VGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyQVNUOFRlc3QuamF2YQpA
QCAtNzY2MiwxNSArNzY2Miw5IEBACiAJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IGFycmF5
VHlwZS5yZXNvbHZlQmluZGluZygpOwogCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJqYXZhLmxh
bmcuT2JqZWN0W11bXSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKIAkJYXNzZXJ0Tm90TnVsbCgi
Tm8gdHlwZSBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOyAvLyROT04tTkxTLTEkCi0JCVR5cGUgZWxl
bWVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlJVHlwZUJpbmRpbmcg
dHlwZUJpbmRpbmcyID0gZWxlbWVudFR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKLQkJYXNzZXJ0Tm90
TnVsbCgiTm8gdHlwZSBiaW5kaW5nMiIsIHR5cGVCaW5kaW5nMik7IC8vJE5PTi1OTFMtMSQKLQkJ
YXNzZXJ0RXF1YWxzKCJ3cm9uZyBkaW1lbnNpb24iLCAxLCB0eXBlQmluZGluZzIuZ2V0RGltZW5z
aW9ucygpKTsgLy8kTk9OLU5MUy0xJAotCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAiT2Jq
ZWN0W10iLCB0eXBlQmluZGluZzIuZ2V0TmFtZSgpKTsJCSAvLyROT04tTkxTLTEkIC8vJE5PTi1O
TFMtMiQKLQkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5cGUiLCBlbGVtZW50VHlwZS5pc0Fy
cmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAotCQlUeXBlIGVsZW1lbnRUeXBlMiA9ICgoQXJyYXlU
eXBlKSBlbGVtZW50VHlwZSkuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlhc3NlcnRUcnVlKCJOb3Qg
YSBzaW1wbGUgdHlwZSIsIGVsZW1lbnRUeXBlMi5pc1NpbXBsZVR5cGUoKSk7IC8vJE5PTi1OTFMt
MSQKLQkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nMyA9IGVsZW1lbnRUeXBlMi5yZXNvbHZlQmlu
ZGluZygpOworCQlUeXBlIGVsZW1lbnRUeXBlID0gYXJyYXlUeXBlLmdldEVsZW1lbnRUeXBlKCk7
CisJCWFzc2VydFRydWUoIk5vdCBhIHNpbXBsZSB0eXBlIiwgZWxlbWVudFR5cGUuaXNTaW1wbGVU
eXBlKCkpOyAvLyROT04tTkxTLTEkCisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzMgPSBlbGVt
ZW50VHlwZS5yZXNvbHZlQmluZGluZygpOwogCQlhc3NlcnROb3ROdWxsKCJObyB0eXBlIGJpbmRp
bmczIiwgdHlwZUJpbmRpbmczKTsgLy8kTk9OLU5MUy0xJAogCQlhc3NlcnRFcXVhbHMoIndyb25n
IGRpbWVuc2lvbiIsIDAsIHR5cGVCaW5kaW5nMy5nZXREaW1lbnNpb25zKCkpOyAvLyROT04tTkxT
LTEkCiAJCWFzc2VydEVxdWFscygid3JvbmcgbmFtZSIsICJPYmplY3QiLCB0eXBlQmluZGluZzMu
Z2V0TmFtZSgpKTsJCSAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKQEAgLTgwMDksMTIgKzgw
MDMsMTAgQEAKIAkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nMyA9IHNpbXBsZVR5cGUucmVzb2x2
ZUJpbmRpbmcoKTsKIAkJYXNzZXJ0Tm90TnVsbCgibm8gdHlwZSBiaW5kaW5nMyIsIHR5cGVCaW5k
aW5nMyk7IC8vJE5PTi1OTFMtMSQKIAkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgIk9iamVj
dCIsIHR5cGVCaW5kaW5nMy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQK
LQkJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWFzc2VydFRydWUoIk5v
dCBhbiBhcnJheSB0eXBlIiwgdHlwZSBpbnN0YW5jZW9mIEFycmF5VHlwZSk7IC8vJE5PTi1OTFMt
MSQKLQkJQXJyYXlUeXBlIGFycmF5VHlwZTIgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQlJVHlwZUJp
bmRpbmcgdHlwZUJpbmRpbmc0ID0gYXJyYXlUeXBlMi5yZXNvbHZlQmluZGluZygpOworCQl0eXBl
ID0gYXJyYXlUeXBlLmdldEVsZW1lbnRUeXBlKCk7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGlu
ZzQgPSB0eXBlLnJlc29sdmVCaW5kaW5nKCk7CiAJCWFzc2VydE5vdE51bGwoIm5vIHR5cGUgYmlu
ZGluZzQiLCB0eXBlQmluZGluZzQpOyAvLyROT04tTkxTLTEkCi0JCWFzc2VydEVxdWFscygid3Jv
bmcgbmFtZSIsICJPYmplY3RbXSIsIHR5cGVCaW5kaW5nNC5nZXROYW1lKCkpOyAvLyROT04tTkxT
LTEkIC8vJE5PTi1OTFMtMiQKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgIk9iamVjdCIs
IHR5cGVCaW5kaW5nNC5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKIAl9
CiAKIAkvKioKQEAgLTgwNTEsMjAgKzgwNDMsMTAgQEAKIAkJSVR5cGVCaW5kaW5nIHR5cGVCaW5k
aW5nMyA9IHNpbXBsZVR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKIAkJYXNzZXJ0Tm90TnVsbCgibm8g
dHlwZSBiaW5kaW5nMyIsIHR5cGVCaW5kaW5nMyk7IC8vJE5PTi1OTFMtMSQKIAkJYXNzZXJ0RXF1
YWxzKCJ3cm9uZyBuYW1lIiwgIk9iamVjdCIsIHR5cGVCaW5kaW5nMy5nZXROYW1lKCkpOyAvLyRO
T04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKLQkJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRU
eXBlKCk7Ci0JCWFzc2VydFRydWUoIk5vdCBhbiBhcnJheSB0eXBlIiwgdHlwZSBpbnN0YW5jZW9m
IEFycmF5VHlwZSk7IC8vJE5PTi1OTFMtMSQKLQkJQXJyYXlUeXBlIGFycmF5VHlwZTIgPSAoQXJy
YXlUeXBlKSB0eXBlOwotCQljaGVja1NvdXJjZVJhbmdlKGFycmF5VHlwZTIsICJPYmplY3RbMTBd
W10iLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCi0JCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzQg
PSBhcnJheVR5cGUyLnJlc29sdmVCaW5kaW5nKCk7CisJCXR5cGUgPSBhcnJheVR5cGUuZ2V0RWxl
bWVudFR5cGUoKTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nNCA9IHR5cGUucmVzb2x2ZUJp
bmRpbmcoKTsKIAkJYXNzZXJ0Tm90TnVsbCgibm8gdHlwZSBiaW5kaW5nNCIsIHR5cGVCaW5kaW5n
NCk7IC8vJE5PTi1OTFMtMSQKLQkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgIk9iamVjdFtd
W10iLCB0eXBlQmluZGluZzQuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIk
Ci0JCXR5cGUgPSBhcnJheVR5cGUyLmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNzZXJ0VHJ1ZSgi
Tm90IGFuIGFycmF5IHR5cGUiLCB0eXBlIGluc3RhbmNlb2YgQXJyYXlUeXBlKTsgLy8kTk9OLU5M
Uy0xJAotCQlBcnJheVR5cGUgYXJyYXlUeXBlMyA9IChBcnJheVR5cGUpIHR5cGU7Ci0JCUlUeXBl
QmluZGluZyB0eXBlQmluZGluZzUgPSBhcnJheVR5cGUzLnJlc29sdmVCaW5kaW5nKCk7Ci0JCWFz
c2VydE5vdE51bGwoIm5vIHR5cGUgYmluZGluZzUiLCB0eXBlQmluZGluZzUpOyAvLyROT04tTkxT
LTEkCi0JCWFzc2VydEVxdWFscygid3JvbmcgbmFtZSIsICJPYmplY3RbXSIsIHR5cGVCaW5kaW5n
NS5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKLQkJY2hlY2tTb3VyY2VS
YW5nZShhcnJheVR5cGUzLCAiT2JqZWN0WzEwXSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJ
YXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgIk9iamVjdCIsIHR5cGVCaW5kaW5nNC5nZXROYW1l
KCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKIAl9CiAKIApkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2RvbS9BU1RDb252ZXJ0ZXJKYXZhZG9jRmxhdHRlbmVyLmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FT
VENvbnZlcnRlckphdmFkb2NGbGF0dGVuZXIuamF2YQppbmRleCBkNThkYmRjLi4zZjM5NmI5IDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlckphdmFkb2NGbGF0dGVuZXIuamF2YQor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlckphdmFkb2NGbGF0dGVuZXIuamF2YQpAQCAtMSwx
MCArMSwxNCBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAw
MCwgMjAwOCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAw
MCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2
ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBt
YWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vu
c2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBh
dmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1s
CiAgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVj
aWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3Mg
KEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1
cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVj
aWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKiAKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0g
Q29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KICAqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqLwpAQCAtMzMsNiArMzcsMTMgQEAKIH0KIAogLyoqCisgKiBAZGVwcmVjYXRl
ZAorICovCitwcml2YXRlIFR5cGUgY29tcG9uZW50VHlwZShBcnJheVR5cGUgYXJyYXkpIHsKKwly
ZXR1cm4gYXJyYXkuZ2V0Q29tcG9uZW50VHlwZSgpOworfQorCisvKioKICAqIFJldHVybnMgdGhl
IHN0cmluZyBhY2N1bXVsYXRlZCBpbiB0aGUgdmlzaXQuCiAgKgogICogQHJldHVybiB0aGUgc2Vy
aWFsaXplZApAQCAtNTIsOCArNjMsMTUgQEAKICAqIEBzZWUgQVNUVmlzaXRvciN2aXNpdChBcnJh
eVR5cGUpCiAgKi8KIHB1YmxpYyBib29sZWFuIHZpc2l0KEFycmF5VHlwZSBub2RlKSB7Ci0Jbm9k
ZS5nZXRDb21wb25lbnRUeXBlKCkuYWNjZXB0KHRoaXMpOwotCXRoaXMuYnVmZmVyLmFwcGVuZCgi
W10iKTsvLyROT04tTkxTLTEkCisJaWYgKG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA8IEFTVC5K
TFM4KSB7CisJCWNvbXBvbmVudFR5cGUobm9kZSkuYWNjZXB0KHRoaXMpOworCQl0aGlzLmJ1ZmZl
ci5hcHBlbmQoIltdIik7Ly8kTk9OLU5MUy0xJAorCX0gZWxzZSB7CisJCW5vZGUuZ2V0RWxlbWVu
dFR5cGUoKS5hY2NlcHQodGhpcyk7CisJCWZvciAoaW50IGkgPSAwOyAgaSA8IG5vZGUuZ2V0RGlt
ZW5zaW9ucygpOyArK2kpIHsKKwkJCSgoRXh0cmFEaW1lbnNpb24pIG5vZGUuZGltZW5zaW9ucygp
LmdldChpKSkuYWNjZXB0KHRoaXMpOworCQl9CisJfQogCXJldHVybiBmYWxzZTsKIH0KIApkaWZm
IC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXJUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FT
VENvbnZlcnRlclRlc3QuamF2YQppbmRleCA4ZDYwNTUzLi5hYzZjMDJjIDEwMDY0NAotLS0gYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvZG9tL0FTVENvbnZlcnRlclRlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZl
cnRlclRlc3QuamF2YQpAQCAtNTIsNiArNTIsMTMgQEAKIAkJcmV0dXJuIG1ldGhvZERlY2xhcmF0
aW9uLnRocm93bkV4Y2VwdGlvbnMoKTsKIAl9CiAKKwkvKioKKwkgKiBAZGVwcmVjYXRlZAorCSAq
LworCXByaXZhdGUgVHlwZSBjb21wb25lbnRUeXBlKEFycmF5VHlwZSBhcnJheSkgeworCQlyZXR1
cm4gYXJyYXkuZ2V0Q29tcG9uZW50VHlwZSgpOworCX0KKwogCS8qKiBAZGVwcmVjYXRlZCB1c2lu
ZyBkZXByZWNhdGVkIGNvZGUgKi8KIAlwdWJsaWMgdm9pZCB0ZXN0MDAwMSgpIHRocm93cyBKYXZh
TW9kZWxFeGNlcHRpb24gewogCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21w
aWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMDAxIiwgIlRlc3QuamF2YSIp
OyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQk
CkBAIC03ODIxLDEzICs3ODI4LDEzIEBACiAJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IGFy
cmF5VHlwZS5yZXNvbHZlQmluZGluZygpOwogCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJqYXZh
LmxhbmcuT2JqZWN0W11bXSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKIAkJYXNzZXJ0Tm90TnVs
bCgiTm8gdHlwZSBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOyAvLyROT04tTkxTLTEkCi0JCVR5cGUg
ZWxlbWVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlUeXBlIGVsZW1l
bnRUeXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlJVHlwZUJpbmRpbmcgdHlwZUJp
bmRpbmcyID0gZWxlbWVudFR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKIAkJYXNzZXJ0Tm90TnVsbCgi
Tm8gdHlwZSBiaW5kaW5nMiIsIHR5cGVCaW5kaW5nMik7IC8vJE5PTi1OTFMtMSQKIAkJYXNzZXJ0
RXF1YWxzKCJ3cm9uZyBkaW1lbnNpb24iLCAxLCB0eXBlQmluZGluZzIuZ2V0RGltZW5zaW9ucygp
KTsgLy8kTk9OLU5MUy0xJAogCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAiT2JqZWN0W10i
LCB0eXBlQmluZGluZzIuZ2V0TmFtZSgpKTsJCSAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQK
IAkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5cGUiLCBlbGVtZW50VHlwZS5pc0FycmF5VHlw
ZSgpKTsgLy8kTk9OLU5MUy0xJAotCQlUeXBlIGVsZW1lbnRUeXBlMiA9ICgoQXJyYXlUeXBlKSBl
bGVtZW50VHlwZSkuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlUeXBlIGVsZW1lbnRUeXBlMiA9IGNv
bXBvbmVudFR5cGUoKChBcnJheVR5cGUpIGVsZW1lbnRUeXBlKSk7CiAJCWFzc2VydFRydWUoIk5v
dCBhIHNpbXBsZSB0eXBlIiwgZWxlbWVudFR5cGUyLmlzU2ltcGxlVHlwZSgpKTsgLy8kTk9OLU5M
Uy0xJAogCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmczID0gZWxlbWVudFR5cGUyLnJlc29sdmVC
aW5kaW5nKCk7CiAJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUgYmluZGluZzMiLCB0eXBlQmluZGlu
ZzMpOyAvLyROT04tTkxTLTEkCkBAIC04MTY4LDcgKzgxNzUsNyBAQAogCQlJVHlwZUJpbmRpbmcg
dHlwZUJpbmRpbmczID0gc2ltcGxlVHlwZS5yZXNvbHZlQmluZGluZygpOwogCQlhc3NlcnROb3RO
dWxsKCJubyB0eXBlIGJpbmRpbmczIiwgdHlwZUJpbmRpbmczKTsgLy8kTk9OLU5MUy0xJAogCQlh
c3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAiT2JqZWN0IiwgdHlwZUJpbmRpbmczLmdldE5hbWUo
KSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAotCQl0eXBlID0gYXJyYXlUeXBlLmdldENv
bXBvbmVudFR5cGUoKTsKKwkJdHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNz
ZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5cGUiLCB0eXBlIGluc3RhbmNlb2YgQXJyYXlUeXBlKTsg
Ly8kTk9OLU5MUy0xJAogCQlBcnJheVR5cGUgYXJyYXlUeXBlMiA9IChBcnJheVR5cGUpIHR5cGU7
CiAJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzQgPSBhcnJheVR5cGUyLnJlc29sdmVCaW5kaW5n
KCk7CkBAIC04MjEwLDE0ICs4MjE3LDE0IEBACiAJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzMg
PSBzaW1wbGVUeXBlLnJlc29sdmVCaW5kaW5nKCk7CiAJCWFzc2VydE5vdE51bGwoIm5vIHR5cGUg
YmluZGluZzMiLCB0eXBlQmluZGluZzMpOyAvLyROT04tTkxTLTEkCiAJCWFzc2VydEVxdWFscygi
d3JvbmcgbmFtZSIsICJPYmplY3QiLCB0eXBlQmluZGluZzMuZ2V0TmFtZSgpKTsgLy8kTk9OLU5M
Uy0xJCAvLyROT04tTkxTLTIkCi0JCXR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgp
OworCQl0eXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJOb3Qg
YW4gYXJyYXkgdHlwZSIsIHR5cGUgaW5zdGFuY2VvZiBBcnJheVR5cGUpOyAvLyROT04tTkxTLTEk
CiAJCUFycmF5VHlwZSBhcnJheVR5cGUyID0gKEFycmF5VHlwZSkgdHlwZTsKIAkJY2hlY2tTb3Vy
Y2VSYW5nZShhcnJheVR5cGUyLCAiT2JqZWN0WzEwXVtdIiwgc291cmNlKTsgLy8kTk9OLU5MUy0x
JAogCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmc0ID0gYXJyYXlUeXBlMi5yZXNvbHZlQmluZGlu
ZygpOwogCQlhc3NlcnROb3ROdWxsKCJubyB0eXBlIGJpbmRpbmc0IiwgdHlwZUJpbmRpbmc0KTsg
Ly8kTk9OLU5MUy0xJAogCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAiT2JqZWN0W11bXSIs
IHR5cGVCaW5kaW5nNC5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKLQkJ
dHlwZSA9IGFycmF5VHlwZTIuZ2V0Q29tcG9uZW50VHlwZSgpOworCQl0eXBlID0gY29tcG9uZW50
VHlwZShhcnJheVR5cGUyKTsKIAkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5cGUiLCB0eXBl
IGluc3RhbmNlb2YgQXJyYXlUeXBlKTsgLy8kTk9OLU5MUy0xJAogCQlBcnJheVR5cGUgYXJyYXlU
eXBlMyA9IChBcnJheVR5cGUpIHR5cGU7CiAJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzUgPSBh
cnJheVR5cGUzLnJlc29sdmVCaW5kaW5nKCk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENv
bnZlcnRlclRlc3QyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlclRlc3QyLmphdmEKaW5k
ZXggMTJhZDU2MC4uNjYxN2ZiYiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXJU
ZXN0Mi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyVGVzdDIuamF2YQpAQCAtNCw2
ICs0LDEwIEBACiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBF
Y2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlz
dHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3Jn
L2xlZ2FsL2VwbC12MTAuaHRtbAorICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2Yg
YW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAq
IENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGlu
ZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBh
dGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgogICogCiAgKiBDb250cmli
dXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVu
dGF0aW9uCkBAIC01NCw2ICs1OCwxMyBAQAogCSAqLwogCXByaXZhdGUgc3RhdGljIExpc3QgaW50
ZXJuYWxUaHJvd25FeGNlcHRpb25zKE1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9u
KSB7CiAJCXJldHVybiBtZXRob2REZWNsYXJhdGlvbi50aHJvd25FeGNlcHRpb25zKCk7CisJfQor
CisJLyoqCisJICogQGRlcHJlY2F0ZWQKKwkgKi8KKwlwcml2YXRlIFR5cGUgY29tcG9uZW50VHlw
ZShBcnJheVR5cGUgYXJyYXkpIHsKKwkJcmV0dXJuIGFycmF5LmdldENvbXBvbmVudFR5cGUoKTsK
IAl9CiAKIAkvKioKQEAgLTI2MzEsMTEgKzI2NDIsMTEgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0
eXBlLCAiQ2xhc3NbXVtdIiwgc291cmNlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5
cGUiLCB0eXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJCUFycmF5VHlwZSBhcnJh
eVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJheVR5
cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRU
eXBlKGFycmF5VHlwZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9u
ZW50VHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQljaGVja1NvdXJjZVJhbmdl
KGNvbXBvbmVudFR5cGUsICJDbGFzc1tdIiwgc291cmNlKTsKIAkJYXJyYXlUeXBlID0gKEFycmF5
VHlwZSkgY29tcG9uZW50VHlwZTsKLQkJY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21w
b25lbnRUeXBlKCk7CisJCWNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7
CiAJCWFzc2VydFRydWUoImlzIGFuIGFycmF5IHR5cGUiLCAhY29tcG9uZW50VHlwZS5pc0FycmF5
VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUs
ICJDbGFzcyIsIHNvdXJjZSk7CiAJfQpAQCAtMjY1NywxNSArMjY2OCwxNSBAQAogCQljaGVja1Nv
dXJjZVJhbmdlKHR5cGUsICJDbGFzc1tdW11bXSIsIHNvdXJjZSk7CiAJCWFzc2VydFRydWUoIm5v
dCBhbiBhcnJheSB0eXBlIiwgdHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQlB
cnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJVHlwZSBjb21wb25lbnRU
eXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJVHlwZSBjb21wb25lbnRUeXBl
ID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkg
dHlwZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJY2hl
Y2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXVtdIiwgc291cmNlKTsKIAkJYXJy
YXlUeXBlID0gKEFycmF5VHlwZSkgY29tcG9uZW50VHlwZTsKLQkJY29tcG9uZW50VHlwZSA9IGFy
cmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCWNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRU
eXBlKGFycmF5VHlwZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9u
ZW50VHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQljaGVja1NvdXJjZVJhbmdl
KGNvbXBvbmVudFR5cGUsICJDbGFzc1tdIiwgc291cmNlKTsKIAkJYXJyYXlUeXBlID0gKEFycmF5
VHlwZSkgY29tcG9uZW50VHlwZTsKLQkJY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21w
b25lbnRUeXBlKCk7CisJCWNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7
CiAJCWFzc2VydFRydWUoImlzIGFuIGFycmF5IHR5cGUiLCAhY29tcG9uZW50VHlwZS5pc0FycmF5
VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUs
ICJDbGFzcyIsIHNvdXJjZSk7CiAJfQpAQCAtMjY4NywxMSArMjY5OCwxMSBAQAogCQljaGVja1Nv
dXJjZVJhbmdlKHR5cGUsICJDbGFzc1tdW10iLCBzb3VyY2UpOwogCQlhc3NlcnRUcnVlKCJub3Qg
YW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJQXJy
YXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7Ci0JCVR5cGUgY29tcG9uZW50VHlw
ZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCVR5cGUgY29tcG9uZW50VHlwZSA9
IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5
cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJCWNoZWNr
U291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzW10iLCBzb3VyY2UpOwogCQlhcnJheVR5
cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBlOwotCQljb21wb25lbnRUeXBlID0gYXJyYXlU
eXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJY29tcG9uZW50VHlwZSA9IGNvbXBvbmVudFR5cGUo
YXJyYXlUeXBlKTsKIAkJYXNzZXJ0VHJ1ZSgiaXMgYW4gYXJyYXkgdHlwZSIsICFjb21wb25lbnRU
eXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJCWNoZWNrU291cmNlUmFuZ2UoY29t
cG9uZW50VHlwZSwgIkNsYXNzIiwgc291cmNlKTsKIAkJTGlzdCBmcmFnbWVudHMgPSBmaWVsZERl
Y2xhcmF0aW9uLmZyYWdtZW50cygpOwpAQCAtMjcxNywxOSArMjcyOCwxOSBAQAogCQljaGVja1Nv
dXJjZVJhbmdlKHR5cGUsICJDbGFzc1tdW11bXVtdIiwgc291cmNlKTsKIAkJYXNzZXJ0VHJ1ZSgi
bm90IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJ
CUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQlUeXBlIGNvbXBvbmVu
dFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlUeXBlIGNvbXBvbmVudFR5
cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJh
eSB0eXBlIiwgY29tcG9uZW50VHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQlj
aGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJDbGFzc1tdW11bXSIsIHNvdXJjZSk7CiAJ
CWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7Ci0JCWNvbXBvbmVudFR5cGUg
PSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQljb21wb25lbnRUeXBlID0gY29tcG9u
ZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIGNv
bXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJY2hlY2tTb3VyY2VS
YW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXVtdIiwgc291cmNlKTsKIAkJYXJyYXlUeXBlID0g
KEFycmF5VHlwZSkgY29tcG9uZW50VHlwZTsKLQkJY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5n
ZXRDb21wb25lbnRUeXBlKCk7CisJCWNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5
VHlwZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlwZS5p
c0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVu
dFR5cGUsICJDbGFzc1tdIiwgc291cmNlKTsKIAkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgY29t
cG9uZW50VHlwZTsKLQkJY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBl
KCk7CisJCWNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7CiAJCWFzc2Vy
dFRydWUoImlzIGFuIGFycmF5IHR5cGUiLCAhY29tcG9uZW50VHlwZS5pc0FycmF5VHlwZSgpKTsg
Ly8kTk9OLU5MUy0xJAogCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJDbGFzcyIs
IHNvdXJjZSk7CiAJfQpAQCAtMjc1MSw3ICsyNzYyLDcgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0
eXBlLCAiQ2xhc3NbXSIsIHNvdXJjZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBl
IiwgdHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQlBcnJheVR5cGUgYXJyYXlU
eXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJVHlwZSBjb21wb25lbnRUeXBlID0gYXJyYXlUeXBl
LmdldENvbXBvbmVudFR5cGUoKTsKKwkJVHlwZSBjb21wb25lbnRUeXBlID0gY29tcG9uZW50VHlw
ZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJheSB0eXBlIiwgIWNvbXBvbmVu
dFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJY2hlY2tTb3VyY2VSYW5nZShj
b21wb25lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2UpOwogCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9k
b20vQVNUQ29udmVydGVyVGVzdEFTVDNfMi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXJU
ZXN0QVNUM18yLmphdmEKaW5kZXggMGI5YTE3Ny4uN2I0OTc1NSAxMDA2NDQKLS0tIGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L2RvbS9BU1RDb252ZXJ0ZXJUZXN0QVNUM18yLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252
ZXJ0ZXJUZXN0QVNUM18yLmphdmEKQEAgLTE0Myw2ICsxNDMsMTMgQEAKIAl9CiAKIAkvKioKKwkg
KiBAZGVwcmVjYXRlZAorCSAqLworCXByaXZhdGUgVHlwZSBjb21wb25lbnRUeXBlKEFycmF5VHlw
ZSBhcnJheSkgeworCQlyZXR1cm4gYXJyYXkuZ2V0Q29tcG9uZW50VHlwZSgpOworCX0KKworCS8q
KgogCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjI1NjAK
IAkgKi8KIAlwdWJsaWMgdm9pZCB0ZXN0MDQwMSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24g
ewpAQCAtMjcxOCwxMSArMjcyNSwxMSBAQAogCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJDbGFz
c1tdW10iLCBzb3VyY2UpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUu
aXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChB
cnJheVR5cGUpIHR5cGU7Ci0JCVR5cGUgY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21w
b25lbnRUeXBlKCk7CisJCVR5cGUgY29tcG9uZW50VHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlU
eXBlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlz
QXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50
VHlwZSwgIkNsYXNzW10iLCBzb3VyY2UpOwogCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21w
b25lbnRUeXBlOwotCQljb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUo
KTsKKwkJY29tcG9uZW50VHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNzZXJ0
VHJ1ZSgiaXMgYW4gYXJyYXkgdHlwZSIsICFjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAv
LyROT04tTkxTLTEkCiAJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzIiwg
c291cmNlKTsKIAl9CkBAIC0yNzQ0LDE1ICsyNzUxLDE1IEBACiAJCWNoZWNrU291cmNlUmFuZ2Uo
dHlwZSwgIkNsYXNzW11bXVtdIiwgc291cmNlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5
IHR5cGUiLCB0eXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJCUFycmF5VHlwZSBh
cnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJh
eVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBjb21wb25l
bnRUeXBlKGFycmF5VHlwZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29t
cG9uZW50VHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQljaGVja1NvdXJjZVJh
bmdlKGNvbXBvbmVudFR5cGUsICJDbGFzc1tdW10iLCBzb3VyY2UpOwogCQlhcnJheVR5cGUgPSAo
QXJyYXlUeXBlKSBjb21wb25lbnRUeXBlOwotCQljb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdl
dENvbXBvbmVudFR5cGUoKTsKKwkJY29tcG9uZW50VHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlU
eXBlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlz
QXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50
VHlwZSwgIkNsYXNzW10iLCBzb3VyY2UpOwogCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21w
b25lbnRUeXBlOwotCQljb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUo
KTsKKwkJY29tcG9uZW50VHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNzZXJ0
VHJ1ZSgiaXMgYW4gYXJyYXkgdHlwZSIsICFjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAv
LyROT04tTkxTLTEkCiAJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzIiwg
c291cmNlKTsKIAl9CkBAIC0yNzc0LDExICsyNzgxLDExIEBACiAJCWNoZWNrU291cmNlUmFuZ2Uo
dHlwZSwgIkNsYXNzW11bXSIsIHNvdXJjZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0
eXBlIiwgdHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQlBcnJheVR5cGUgYXJy
YXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJVHlwZSBjb21wb25lbnRUeXBlID0gYXJyYXlU
eXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJVHlwZSBjb21wb25lbnRUeXBlID0gY29tcG9uZW50
VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIGNvbXBv
bmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJY2hlY2tTb3VyY2VSYW5n
ZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXSIsIHNvdXJjZSk7CiAJCWFycmF5VHlwZSA9IChBcnJh
eVR5cGUpIGNvbXBvbmVudFR5cGU7Ci0JCWNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29t
cG9uZW50VHlwZSgpOworCQljb21wb25lbnRUeXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUp
OwogCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJheSB0eXBlIiwgIWNvbXBvbmVudFR5cGUuaXNBcnJh
eVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBl
LCAiQ2xhc3MiLCBzb3VyY2UpOwogCQlMaXN0IGZyYWdtZW50cyA9IGZpZWxkRGVjbGFyYXRpb24u
ZnJhZ21lbnRzKCk7CkBAIC0yODA0LDE5ICsyODExLDE5IEBACiAJCWNoZWNrU291cmNlUmFuZ2Uo
dHlwZSwgIkNsYXNzW11bXVtdW10iLCBzb3VyY2UpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJy
YXkgdHlwZSIsIHR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJQXJyYXlUeXBl
IGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7Ci0JCVR5cGUgY29tcG9uZW50VHlwZSA9IGFy
cmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCVR5cGUgY29tcG9uZW50VHlwZSA9IGNvbXBv
bmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCBj
b21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJCWNoZWNrU291cmNl
UmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzW11bXVtdIiwgc291cmNlKTsKIAkJYXJyYXlUeXBl
ID0gKEFycmF5VHlwZSkgY29tcG9uZW50VHlwZTsKLQkJY29tcG9uZW50VHlwZSA9IGFycmF5VHlw
ZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCWNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRUeXBlKGFy
cmF5VHlwZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlw
ZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQljaGVja1NvdXJjZVJhbmdlKGNvbXBv
bmVudFR5cGUsICJDbGFzc1tdW10iLCBzb3VyY2UpOwogCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBl
KSBjb21wb25lbnRUeXBlOwotCQljb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVu
dFR5cGUoKTsKKwkJY29tcG9uZW50VHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJ
YXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBl
KCkpOyAvLyROT04tTkxTLTEkCiAJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNs
YXNzW10iLCBzb3VyY2UpOwogCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBl
OwotCQljb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJY29t
cG9uZW50VHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNzZXJ0VHJ1ZSgiaXMg
YW4gYXJyYXkgdHlwZSIsICFjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxT
LTEkCiAJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzIiwgc291cmNlKTsK
IAl9CkBAIC0yODM4LDcgKzI4NDUsNyBAQAogCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJDbGFz
c1tdIiwgc291cmNlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlz
QXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJy
YXlUeXBlKSB0eXBlOwotCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9u
ZW50VHlwZSgpOworCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlw
ZSk7CiAJCWFzc2VydFRydWUoImlzIGFuIGFycmF5IHR5cGUiLCAhY29tcG9uZW50VHlwZS5pc0Fy
cmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5
cGUsICJDbGFzcyIsIHNvdXJjZSk7CiAJfQpAQCAtNjU0OSw3ICs2NTU2LDcgQEAKIAkJCWNoZWNr
U291cmNlUmFuZ2UodHlwZSwgImJvb2xlYW5bXSIsIGNvbnRlbnRzKTsKIAkJCWFzc2VydFRydWUo
Ik5vdCBhbiBhcnJheSB0eXBlIiwgdHlwZS5pc0FycmF5VHlwZSgpKTsKIAkJCUFycmF5VHlwZSBh
cnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQkJVHlwZSBjb21wb25lbnRUeXBlID0gYXJy
YXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJCVR5cGUgY29tcG9uZW50VHlwZSA9IGNvbXBv
bmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJCWFzc2VydFRydWUoIk5vdCBhIHByaW1pdGl2ZSB0eXBl
IiwgY29tcG9uZW50VHlwZS5pc1ByaW1pdGl2ZVR5cGUoKSk7CiAJCQlQcmltaXRpdmVUeXBlIHBy
aW1pdGl2ZVR5cGUgPSAoUHJpbWl0aXZlVHlwZSkgY29tcG9uZW50VHlwZTsKIAkJCWFzc2VydEVx
dWFscygiTm90IGJvb2xlYW4iLCBQcmltaXRpdmVUeXBlLkJPT0xFQU4sIHByaW1pdGl2ZVR5cGUu
Z2V0UHJpbWl0aXZlVHlwZUNvZGUoKSk7CkBAIC05NTQxLDExICs5NTQ4LDExIEBACiAJCUFycmF5
Q3JlYXRpb24gYXJyYXlDcmVhdGlvbiA9IChBcnJheUNyZWF0aW9uKSBub2RlOwogCQlBcnJheVR5
cGUgYXJyYXlUeXBlID0gYXJyYXlDcmVhdGlvbi5nZXRUeXBlKCk7CiAJCWNoZWNrU291cmNlUmFu
Z2UoYXJyYXlUeXBlLCAiU3RyaW5nWzBdW2JbMTBdXVtdIiwgc291cmNlVW5pdC5nZXRTb3VyY2Uo
KSk7Ci0JCW5vZGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlub2RlID0gY29t
cG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBhcnJheSB0eXBl
IiwgQVNUTm9kZS5BUlJBWV9UWVBFLCBub2RlLmdldE5vZGVUeXBlKCkpOwogCQlhcnJheVR5cGUg
PSAoQXJyYXlUeXBlKW5vZGU7CiAJCWNoZWNrU291cmNlUmFuZ2UoYXJyYXlUeXBlLCAiU3RyaW5n
WzBdW2JbMTBdXSIsIHNvdXJjZVVuaXQuZ2V0U291cmNlKCkpOwotCQlub2RlID0gYXJyYXlUeXBl
LmdldENvbXBvbmVudFR5cGUoKTsKKwkJbm9kZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsK
IAkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gYXJyYXkgdHlwZSIsIEFTVE5vZGUuQVJSQVlfVFlQRSwg
bm9kZS5nZXROb2RlVHlwZSgpKTsKIAkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSlub2RlOwogCQlj
aGVja1NvdXJjZVJhbmdlKGFycmF5VHlwZSwgIlN0cmluZ1swXSIsIHNvdXJjZVVuaXQuZ2V0U291
cmNlKCkpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXJUZXN0QVNUNF8yLmph
dmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlclRlc3RBU1Q0XzIuamF2YQppbmRleCBhY2YwOGVm
Li4yNWY4OGE4IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlclRlc3RBU1Q0XzIu
amF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlclRlc3RBU1Q0XzIuamF2YQpAQCAtMTQx
LDYgKzE0MSwxMyBAQAogCX0KIAogCS8qKgorCSAqIEBkZXByZWNhdGVkCisJICovCisJcHJpdmF0
ZSBUeXBlIGNvbXBvbmVudFR5cGUoQXJyYXlUeXBlIGFycmF5KSB7CisJCXJldHVybiBhcnJheS5n
ZXRDb21wb25lbnRUeXBlKCk7CisJfQorCisJLyoqCiAJICogaHR0cDovL2Rldi5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yMjU2MAogCSAqLwogCXB1YmxpYyB2b2lkIHRlc3QwNDAx
KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CkBAIC0yNzE2LDExICsyNzIzLDExIEBACiAJ
CWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIkNsYXNzW11bXSIsIHNvdXJjZSk7CiAJCWFzc2VydFRy
dWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgdHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0x
JAogCQlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJVHlwZSBjb21w
b25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJVHlwZSBjb21wb25l
bnRUeXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4g
YXJyYXkgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQK
IAkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXSIsIHNvdXJjZSk7CiAJ
CWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7Ci0JCWNvbXBvbmVudFR5cGUg
PSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQljb21wb25lbnRUeXBlID0gY29tcG9u
ZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJheSB0eXBlIiwgIWNv
bXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJY2hlY2tTb3VyY2VS
YW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2UpOwogCX0KQEAgLTI3NDIsMTUgKzI3
NDksMTUgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiQ2xhc3NbXVtdW10iLCBzb3VyY2Up
OwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNBcnJheVR5cGUoKSk7
IC8vJE5PTi1OTFMtMSQKIAkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7
Ci0JCVR5cGUgY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJ
CVR5cGUgY29tcG9uZW50VHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNzZXJ0
VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAv
LyROT04tTkxTLTEkCiAJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzW11b
XSIsIHNvdXJjZSk7CiAJCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7Ci0J
CWNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQljb21wb25l
bnRUeXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4g
YXJyYXkgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQK
IAkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXSIsIHNvdXJjZSk7CiAJ
CWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7Ci0JCWNvbXBvbmVudFR5cGUg
PSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQljb21wb25lbnRUeXBlID0gY29tcG9u
ZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJheSB0eXBlIiwgIWNv
bXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJY2hlY2tTb3VyY2VS
YW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2UpOwogCX0KQEAgLTI3NzIsMTEgKzI3
NzksMTEgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiQ2xhc3NbXVtdIiwgc291cmNlKTsK
IAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlzQXJyYXlUeXBlKCkpOyAv
LyROT04tTkxTLTEkCiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwot
CQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlU
eXBlIGNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7CiAJCWFzc2VydFRy
dWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlwZS5pc0FycmF5VHlwZSgpKTsgLy8k
Tk9OLU5MUy0xJAogCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJDbGFzc1tdIiwg
c291cmNlKTsKIAkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgY29tcG9uZW50VHlwZTsKLQkJY29t
cG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCWNvbXBvbmVudFR5
cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7CiAJCWFzc2VydFRydWUoImlzIGFuIGFycmF5
IHR5cGUiLCAhY29tcG9uZW50VHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQlj
aGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJDbGFzcyIsIHNvdXJjZSk7CiAJCUxpc3Qg
ZnJhZ21lbnRzID0gZmllbGREZWNsYXJhdGlvbi5mcmFnbWVudHMoKTsKQEAgLTI4MDIsMTkgKzI4
MDksMTkgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiQ2xhc3NbXVtdW11bXSIsIHNvdXJj
ZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgdHlwZS5pc0FycmF5VHlwZSgp
KTsgLy8kTk9OLU5MUy0xJAogCQlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlw
ZTsKLQkJVHlwZSBjb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsK
KwkJVHlwZSBjb21wb25lbnRUeXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3Nl
cnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7
IC8vJE5PTi1OTFMtMSQKIAkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3Nb
XVtdW10iLCBzb3VyY2UpOwogCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBl
OwotCQljb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJY29t
cG9uZW50VHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90
IGFuIGFycmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxT
LTEkCiAJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzW11bXSIsIHNvdXJj
ZSk7CiAJCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7Ci0JCWNvbXBvbmVu
dFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQljb21wb25lbnRUeXBlID0g
Y29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlw
ZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJY2hlY2tT
b3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXSIsIHNvdXJjZSk7CiAJCWFycmF5VHlw
ZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7Ci0JCWNvbXBvbmVudFR5cGUgPSBhcnJheVR5
cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQljb21wb25lbnRUeXBlID0gY29tcG9uZW50VHlwZShh
cnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJheSB0eXBlIiwgIWNvbXBvbmVudFR5
cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJY2hlY2tTb3VyY2VSYW5nZShjb21w
b25lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2UpOwogCX0KQEAgLTI4MzYsNyArMjg0Myw3IEBACiAJ
CWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIkNsYXNzW10iLCBzb3VyY2UpOwogCQlhc3NlcnRUcnVl
KCJub3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQK
IAkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7Ci0JCVR5cGUgY29tcG9u
ZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCVR5cGUgY29tcG9uZW50
VHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNzZXJ0VHJ1ZSgiaXMgYW4gYXJy
YXkgdHlwZSIsICFjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJ
CWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzIiwgc291cmNlKTsKIAl9CkBA
IC02NTQ3LDcgKzY1NTQsNyBAQAogCQkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiYm9vbGVhbltd
IiwgY29udGVudHMpOwogCQkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlz
QXJyYXlUeXBlKCkpOwogCQkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7
Ci0JCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwor
CQkJVHlwZSBjb21wb25lbnRUeXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQkJYXNz
ZXJ0VHJ1ZSgiTm90IGEgcHJpbWl0aXZlIHR5cGUiLCBjb21wb25lbnRUeXBlLmlzUHJpbWl0aXZl
VHlwZSgpKTsKIAkJCVByaW1pdGl2ZVR5cGUgcHJpbWl0aXZlVHlwZSA9IChQcmltaXRpdmVUeXBl
KSBjb21wb25lbnRUeXBlOwogCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYm9vbGVhbiIsIFByaW1pdGl2
ZVR5cGUuQk9PTEVBTiwgcHJpbWl0aXZlVHlwZS5nZXRQcmltaXRpdmVUeXBlQ29kZSgpKTsKQEAg
LTk1MzksMTEgKzk1NDYsMTEgQEAKIAkJQXJyYXlDcmVhdGlvbiBhcnJheUNyZWF0aW9uID0gKEFy
cmF5Q3JlYXRpb24pIG5vZGU7CiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSBhcnJheUNyZWF0aW9u
LmdldFR5cGUoKTsKIAkJY2hlY2tTb3VyY2VSYW5nZShhcnJheVR5cGUsICJTdHJpbmdbMF1bYlsx
MF1dW10iLCBzb3VyY2VVbml0LmdldFNvdXJjZSgpKTsKLQkJbm9kZSA9IGFycmF5VHlwZS5nZXRD
b21wb25lbnRUeXBlKCk7CisJCW5vZGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7CiAJCWFz
c2VydEVxdWFscygiTm90IGFuIGFycmF5IHR5cGUiLCBBU1ROb2RlLkFSUkFZX1RZUEUsIG5vZGUu
Z2V0Tm9kZVR5cGUoKSk7CiAJCWFycmF5VHlwZSA9IChBcnJheVR5cGUpbm9kZTsKIAkJY2hlY2tT
b3VyY2VSYW5nZShhcnJheVR5cGUsICJTdHJpbmdbMF1bYlsxMF1dIiwgc291cmNlVW5pdC5nZXRT
b3VyY2UoKSk7Ci0JCW5vZGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlub2Rl
ID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBhcnJh
eSB0eXBlIiwgQVNUTm9kZS5BUlJBWV9UWVBFLCBub2RlLmdldE5vZGVUeXBlKCkpOwogCQlhcnJh
eVR5cGUgPSAoQXJyYXlUeXBlKW5vZGU7CiAJCWNoZWNrU291cmNlUmFuZ2UoYXJyYXlUeXBlLCAi
U3RyaW5nWzBdIiwgc291cmNlVW5pdC5nZXRTb3VyY2UoKSk7CmRpZmYgLS1naXQgYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
ZG9tL0FTVENvbnZlcnRlclRlc3RBU1Q4XzIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVy
VGVzdEFTVDhfMi5qYXZhCmluZGV4IGZiMzJlNzUuLjg4MGRmOGYgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9kb20vQVNUQ29udmVydGVyVGVzdEFTVDhfMi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29u
dmVydGVyVGVzdEFTVDhfMi5qYXZhCkBAIC0xNDEsNiArMTQxLDEzIEBACiAJfQogCiAJLyoqCisJ
ICogQGRlcHJlY2F0ZWQKKwkgKi8KKwlwcml2YXRlIFR5cGUgY29tcG9uZW50VHlwZShBcnJheVR5
cGUgYXJyYXkpIHsKKwkJcmV0dXJuIGFycmF5LmdldENvbXBvbmVudFR5cGUoKTsKKwl9CisKKwkv
KioKIAkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTIyNTYw
CiAJICovCiAJcHVibGljIHZvaWQgdGVzdDA0MDEoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKQEAgLTI3MTAsNiArMjcxNyw3IEBACiAKIAkvKioKIAkgKiBodHRwOi8vYnVncy5lY2xpcHNl
Lm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MjgzOQorCSAqIEBkZXByZWNhdGVkIHVzZXMgZGVw
cmVjYXRlZCBtZXRob2RzCiAJICovCiAJcHVibGljIHZvaWQgdGVzdDA0OTMoKSB0aHJvd3MgSmF2
YU1vZGVsRXhjZXB0aW9uIHsKIAkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29t
cGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDQ5MyIsICJBLmphdmEiKTsg
Ly8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JApA
QCAtMjcyNSwxMyArMjczMywxOCBAQAogCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJDbGFzc1td
W10iLCBzb3VyY2UpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNB
cnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChBcnJh
eVR5cGUpIHR5cGU7Ci0JCVR5cGUgY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25l
bnRUeXBlKCk7Ci0JCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlw
ZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAotCQljaGVja1NvdXJjZVJhbmdlKGNvbXBv
bmVudFR5cGUsICJDbGFzc1tdIiwgc291cmNlKTsKLQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkg
Y29tcG9uZW50VHlwZTsKLQkJY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRU
eXBlKCk7Ci0JCWFzc2VydFRydWUoImlzIGFuIGFycmF5IHR5cGUiLCAhY29tcG9uZW50VHlwZS5p
c0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAotCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVu
dFR5cGUsICJDbGFzcyIsIHNvdXJjZSk7CisJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCgpIDwgQVNU
LkpMUzgpIHsKKwkJCVR5cGUgY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRU
eXBlKCk7CisJCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIGNvbXBvbmVudFR5cGUu
aXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9u
ZW50VHlwZSwgIkNsYXNzW10iLCBzb3VyY2UpOworCQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkg
Y29tcG9uZW50VHlwZTsKKwkJCWNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50
VHlwZSgpOworCQkJYXNzZXJ0VHJ1ZSgiaXMgYW4gYXJyYXkgdHlwZSIsICFjb21wb25lbnRUeXBl
LmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJCQljaGVja1NvdXJjZVJhbmdlKGNvbXBv
bmVudFR5cGUsICJDbGFzcyIsIHNvdXJjZSk7CisJCX0gZWxzZSB7CisJCQlUeXBlIGVsZW1lbnRU
eXBlID0gYXJyYXlUeXBlLmdldEVsZW1lbnRUeXBlKCk7CisJCQljaGVja1NvdXJjZVJhbmdlKGVs
ZW1lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2UpOworCQl9CiAJfQogCiAJLyoqCkBAIC0yNzUxLDIx
ICsyNzY0LDI3IEBACiAJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIkNsYXNzW11bXVtdIiwgc291
cmNlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlzQXJyYXlUeXBl
KCkpOyAvLyROT04tTkxTLTEkCiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0
eXBlOwotCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgp
OwotCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJh
eVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKLQkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBl
LCAiQ2xhc3NbXVtdIiwgc291cmNlKTsKLQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgY29tcG9u
ZW50VHlwZTsKLQkJY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7
Ci0JCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlwZS5pc0FycmF5
VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAotCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUs
ICJDbGFzc1tdIiwgc291cmNlKTsKLQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgY29tcG9uZW50
VHlwZTsKLQkJY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0J
CWFzc2VydFRydWUoImlzIGFuIGFycmF5IHR5cGUiLCAhY29tcG9uZW50VHlwZS5pc0FycmF5VHlw
ZSgpKTsgLy8kTk9OLU5MUy0xJAotCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJD
bGFzcyIsIHNvdXJjZSk7CisJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsK
KwkJCVR5cGUgY29tcG9uZW50VHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKKwkJCWFz
c2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlwZS5pc0FycmF5VHlwZSgp
KTsgLy8kTk9OLU5MUy0xJAorCQkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xh
c3NbXVtdIiwgc291cmNlKTsKKwkJCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5
cGU7CisJCQljb21wb25lbnRUeXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOworCQkJYXNz
ZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkp
OyAvLyROT04tTkxTLTEkCisJCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJDbGFz
c1tdIiwgc291cmNlKTsKKwkJCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7
CisJCQljb21wb25lbnRUeXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOworCQkJYXNzZXJ0
VHJ1ZSgiaXMgYW4gYXJyYXkgdHlwZSIsICFjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAv
LyROT04tTkxTLTEkCisJCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJDbGFzcyIs
IHNvdXJjZSk7CisJCX0gZWxzZSB7CisJCQlUeXBlIGVsZW1lbnRUeXBlID0gYXJyYXlUeXBlLmdl
dEVsZW1lbnRUeXBlKCk7CisJCQljaGVja1NvdXJjZVJhbmdlKGVsZW1lbnRUeXBlLCAiQ2xhc3Mi
LCBzb3VyY2UpOworCQl9CiAJfQogCiAJLyoqCiAJICogaHR0cDovL2J1Z3MuZWNsaXBzZS5vcmcv
YnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDI4MzkKKwkgKiBAZGVwcmVjYXRlZCB1c2VzIGRlcHJlY2F0
ZWQgbWV0aG9kcwogCSAqLwogCXB1YmxpYyB2b2lkIHRlc3QwNDk1KCkgdGhyb3dzIEphdmFNb2Rl
bEV4Y2VwdGlvbiB7CiAJCUlDb21waWxhdGlvblVuaXQgc291cmNlVW5pdCA9IGdldENvbXBpbGF0
aW9uVW5pdCgiQ29udmVydGVyIiAsICJzcmMiLCAidGVzdDA0OTUiLCAiQS5qYXZhIik7IC8vJE5P
Ti1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKQEAgLTI3
ODEsMTMgKzI4MDAsMTggQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiQ2xhc3NbXVtdIiwg
c291cmNlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlzQXJyYXlU
eXBlKCkpOyAvLyROT04tTkxTLTEkCiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBl
KSB0eXBlOwotCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlw
ZSgpOwotCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNB
cnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKLQkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRU
eXBlLCAiQ2xhc3NbXSIsIHNvdXJjZSk7Ci0JCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBv
bmVudFR5cGU7Ci0JCWNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgp
OwotCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJheSB0eXBlIiwgIWNvbXBvbmVudFR5cGUuaXNBcnJh
eVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKLQkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBl
LCAiQ2xhc3MiLCBzb3VyY2UpOworCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4
KSB7CisJCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgp
OworCQkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJy
YXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5
cGUsICJDbGFzc1tdIiwgc291cmNlKTsKKwkJCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBv
bmVudFR5cGU7CisJCQljb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUo
KTsKKwkJCWFzc2VydFRydWUoImlzIGFuIGFycmF5IHR5cGUiLCAhY29tcG9uZW50VHlwZS5pc0Fy
cmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRU
eXBlLCAiQ2xhc3MiLCBzb3VyY2UpOworCQl9IGVsc2UgeworCQkJVHlwZSBlbGVtZW50VHlwZSA9
IGFycmF5VHlwZS5nZXRFbGVtZW50VHlwZSgpOworCQkJY2hlY2tTb3VyY2VSYW5nZShlbGVtZW50
VHlwZSwgIkNsYXNzIiwgc291cmNlKTsKKwkJfQogCQlMaXN0IGZyYWdtZW50cyA9IGZpZWxkRGVj
bGFyYXRpb24uZnJhZ21lbnRzKCk7CiAJCWFzc2VydEVxdWFscygid3Jvbmcgc2l6ZSIsIDEsIGZy
YWdtZW50cy5zaXplKCkpOwogCQlWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQg
PSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDApOwpAQCAtMjc5
Niw2ICsyODIwLDcgQEAKIAogCS8qKgogCSAqIGh0dHA6Ly9idWdzLmVjbGlwc2Uub3JnL2J1Z3Mv
c2hvd19idWcuY2dpP2lkPTQyODM5CisJICogQGRlcHJlY2F0ZWQgdXNlcyBkZXByZWNhdGVkIG1l
dGhvZHMKIAkgKi8KIAlwdWJsaWMgdm9pZCB0ZXN0MDQ5NigpIHRocm93cyBKYXZhTW9kZWxFeGNl
cHRpb24gewogCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVu
aXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwNDk2IiwgIkEuamF2YSIpOyAvLyROT04tTkxT
LTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCkBAIC0yODExLDI1
ICsyODM2LDMxIEBACiAJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIkNsYXNzW11bXVtdW10iLCBz
b3VyY2UpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNBcnJheVR5
cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUp
IHR5cGU7Ci0JCVR5cGUgY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBl
KCk7Ci0JCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlwZS5pc0Fy
cmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAotCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5
cGUsICJDbGFzc1tdW11bXSIsIHNvdXJjZSk7Ci0JCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNv
bXBvbmVudFR5cGU7Ci0JCWNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlw
ZSgpOwotCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNB
cnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKLQkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRU
eXBlLCAiQ2xhc3NbXVtdIiwgc291cmNlKTsKLQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgY29t
cG9uZW50VHlwZTsKLQkJY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBl
KCk7Ci0JCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlwZS5pc0Fy
cmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAotCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5
cGUsICJDbGFzc1tdIiwgc291cmNlKTsKLQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgY29tcG9u
ZW50VHlwZTsKLQkJY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7
Ci0JCWFzc2VydFRydWUoImlzIGFuIGFycmF5IHR5cGUiLCAhY29tcG9uZW50VHlwZS5pc0FycmF5
VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAotCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUs
ICJDbGFzcyIsIHNvdXJjZSk7CisJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgp
IHsKKwkJCVR5cGUgY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7
CisJCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJh
eVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlw
ZSwgIkNsYXNzW11bXVtdIiwgc291cmNlKTsKKwkJCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNv
bXBvbmVudFR5cGU7CisJCQljb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5
cGUoKTsKKwkJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlwZS5p
c0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25l
bnRUeXBlLCAiQ2xhc3NbXVtdIiwgc291cmNlKTsKKwkJCWFycmF5VHlwZSA9IChBcnJheVR5cGUp
IGNvbXBvbmVudFR5cGU7CisJCQljb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVu
dFR5cGUoKTsKKwkJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlw
ZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQkJY2hlY2tTb3VyY2VSYW5nZShjb21w
b25lbnRUeXBlLCAiQ2xhc3NbXSIsIHNvdXJjZSk7CisJCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBl
KSBjb21wb25lbnRUeXBlOworCQkJY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25l
bnRUeXBlKCk7CisJCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJheSB0eXBlIiwgIWNvbXBvbmVudFR5
cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJCWNoZWNrU291cmNlUmFuZ2UoY29t
cG9uZW50VHlwZSwgIkNsYXNzIiwgc291cmNlKTsKKwkJfSBlbHNlIHsKKwkJCVR5cGUgZWxlbWVu
dFR5cGUgPSBhcnJheVR5cGUuZ2V0RWxlbWVudFR5cGUoKTsKKwkJCWNoZWNrU291cmNlUmFuZ2Uo
ZWxlbWVudFR5cGUsICJDbGFzcyIsIHNvdXJjZSk7CisJCX0KIAl9CiAKIAkvKioKIAkgKiBodHRw
Oi8vYnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD00MjgzOQorCSAqIEBkZXBy
ZWNhdGVkIHVzZXMgZGVwcmVjYXRlZCBtZXRob2RzCiAJICovCiAJcHVibGljIHZvaWQgdGVzdDA0
OTcoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKIAkJSUNvbXBpbGF0aW9uVW5pdCBzb3Vy
Y2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDQ5
NyIsICJBLmphdmEiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQg
Ly8kTk9OLU5MUy00JApAQCAtMjg0NSw5ICsyODc2LDkgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0
eXBlLCAiQ2xhc3NbXSIsIHNvdXJjZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBl
IiwgdHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQlBcnJheVR5cGUgYXJyYXlU
eXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJVHlwZSBjb21wb25lbnRUeXBlID0gYXJyYXlUeXBl
LmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNzZXJ0VHJ1ZSgiaXMgYW4gYXJyYXkgdHlwZSIsICFj
b21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCi0JCWNoZWNrU291cmNl
UmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzIiwgc291cmNlKTsKKwkJdHlwZSA9IHRoaXMuYXN0
LmFwaUxldmVsKCkgPCBBU1QuSkxTOCA/IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCkgOiBh
cnJheVR5cGUuZ2V0RWxlbWVudFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZSgiaXMgYW4gYXJyYXkgdHlw
ZSIsICF0eXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJCWNoZWNrU291cmNlUmFu
Z2UodHlwZSwgIkNsYXNzIiwgc291cmNlKTsKIAl9CiAKIAkvKioKQEAgLTY1NTYsNyArNjU4Nyw3
IEBACiAJCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJib29sZWFuW10iLCBjb250ZW50cyk7CiAJ
CQlhc3NlcnRUcnVlKCJOb3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNBcnJheVR5cGUoKSk7CiAJ
CQlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJCVR5cGUgY29tcG9u
ZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCQlUeXBlIGNvbXBvbmVu
dFR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7CiAJCQlhc3NlcnRUcnVlKCJOb3QgYSBw
cmltaXRpdmUgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNQcmltaXRpdmVUeXBlKCkpOwogCQkJUHJp
bWl0aXZlVHlwZSBwcmltaXRpdmVUeXBlID0gKFByaW1pdGl2ZVR5cGUpIGNvbXBvbmVudFR5cGU7
CiAJCQlhc3NlcnRFcXVhbHMoIk5vdCBib29sZWFuIiwgUHJpbWl0aXZlVHlwZS5CT09MRUFOLCBw
cmltaXRpdmVUeXBlLmdldFByaW1pdGl2ZVR5cGVDb2RlKCkpOwpAQCAtOTUyOCw2ICs5NTU5LDcg
QEAKIAogCS8qKgogCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/
aWQ9MTk2NTE0CisJICogQGRlcHJlY2F0ZWQgdXNlcyBkZXByZWNhdGVkIG1ldGhvZHMKIAkgKi8K
IAlwdWJsaWMgdm9pZCB0ZXN0MDY4MygpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewogCQlJ
Q29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlvblVuaXQoIkNvbnZlcnRl
ciIgLCAic3JjIiwgInRlc3QwNjgzIiwgIlRlc3QuamF2YSIpOyAvLyROT04tTkxTLTEkIC8vJE5P
Ti1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCkBAIC05NTQ4LDE0ICs5NTgwLDE5
IEBACiAJCUFycmF5Q3JlYXRpb24gYXJyYXlDcmVhdGlvbiA9IChBcnJheUNyZWF0aW9uKSBub2Rl
OwogCQlBcnJheVR5cGUgYXJyYXlUeXBlID0gYXJyYXlDcmVhdGlvbi5nZXRUeXBlKCk7CiAJCWNo
ZWNrU291cmNlUmFuZ2UoYXJyYXlUeXBlLCAiU3RyaW5nWzBdW2JbMTBdXVtdIiwgc291cmNlVW5p
dC5nZXRTb3VyY2UoKSk7Ci0JCW5vZGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwot
CQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBhcnJheSB0eXBlIiwgQVNUTm9kZS5BUlJBWV9UWVBFLCBu
b2RlLmdldE5vZGVUeXBlKCkpOwotCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKW5vZGU7Ci0JCWNo
ZWNrU291cmNlUmFuZ2UoYXJyYXlUeXBlLCAiU3RyaW5nWzBdW2JbMTBdXSIsIHNvdXJjZVVuaXQu
Z2V0U291cmNlKCkpOwotCQlub2RlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJ
YXNzZXJ0RXF1YWxzKCJOb3QgYW4gYXJyYXkgdHlwZSIsIEFTVE5vZGUuQVJSQVlfVFlQRSwgbm9k
ZS5nZXROb2RlVHlwZSgpKTsKLQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSlub2RlOwotCQljaGVj
a1NvdXJjZVJhbmdlKGFycmF5VHlwZSwgIlN0cmluZ1swXSIsIHNvdXJjZVVuaXQuZ2V0U291cmNl
KCkpOworCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQlub2RlID0g
YXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJCWFzc2VydEVxdWFscygiTm90IGFuIGFy
cmF5IHR5cGUiLCBBU1ROb2RlLkFSUkFZX1RZUEUsIG5vZGUuZ2V0Tm9kZVR5cGUoKSk7CisJCQlh
cnJheVR5cGUgPSAoQXJyYXlUeXBlKW5vZGU7CisJCQljaGVja1NvdXJjZVJhbmdlKGFycmF5VHlw
ZSwgIlN0cmluZ1swXVtiWzEwXV0iLCBzb3VyY2VVbml0LmdldFNvdXJjZSgpKTsKKwkJCW5vZGUg
PSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4g
YXJyYXkgdHlwZSIsIEFTVE5vZGUuQVJSQVlfVFlQRSwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJ
CWFycmF5VHlwZSA9IChBcnJheVR5cGUpbm9kZTsKKwkJCWNoZWNrU291cmNlUmFuZ2UoYXJyYXlU
eXBlLCAiU3RyaW5nWzBdIiwgc291cmNlVW5pdC5nZXRTb3VyY2UoKSk7CisJCX0gZWxzZSB7CisJ
CQlub2RlID0gYXJyYXlUeXBlLmdldEVsZW1lbnRUeXBlKCk7CisJCQljaGVja1NvdXJjZVJhbmdl
KG5vZGUsICJTdHJpbmciLCBzb3VyY2VVbml0LmdldFNvdXJjZSgpKTsKKwkJfQogCX0KIAogCS8q
KgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RTdHJ1Y3R1cmFsUHJvcGVydHlUZXN0LmphdmEg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvZG9tL0FTVFN0cnVjdHVyYWxQcm9wZXJ0eVRlc3QuamF2YQppbmRleCAyYmY0Yjg3
Li5iMzkyODExIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFN0cnVjdHVyYWxQcm9wZXJ0eVRl
c3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFN0cnVjdHVyYWxQcm9wZXJ0eVRlc3QuamF2YQpA
QCAtMTcyLDcgKzE3Miw3IEBACiAJCQkJYnJlYWs7CiAJCQljYXNlIEFTVC5KTFM4IDoKIAkJCQlh
c3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiB2aXNpdGVkIG5vZGUgY2xhc3NlcyIsIDg0LCBu
b2RlQ2xhc3Nlcy5zaXplKCkpOwotCQkJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHZp
c2l0ZWQgcHJvcGVydGllcyIsIDEwNSwgdmlzaXRlZFByb3BlcnRpZXMuc2l6ZSgpKTsKKwkJCQlh
c3NlcnRFcXVhbHMoIldyb25nIG51bWJlciBvZiB2aXNpdGVkIHByb3BlcnRpZXMiLCAxMDYsIHZp
c2l0ZWRQcm9wZXJ0aWVzLnNpemUoKSk7CiAJCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIg
b2Ygc2ltcGxlIHByb3BlcnRpZXMiLCAyMSwgc2ltcGxlUHJvcGVydGllcy5zaXplKCkpOwogCQkJ
CWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIGNoaWxkIHByb3BlcnRpZXMiLCAxMTgsIGNo
aWxkUHJvcGVydGllcy5zaXplKCkpOwogCQkJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9m
IGNoaWxkIGxpc3QgcHJvcGVydGllcyIsIDY2LCBjaGlsZExpc3RQcm9wZXJ0aWVzLnNpemUoKSk7
CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUVGVz
dC5qYXZhCmluZGV4IDZlYjMwYTkuLmNjZmIzN2MgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNU
VGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUVGVzdC5qYXZhCkBAIC0yMDU3LDYgKzIwNTcs
NyBAQAogCQlhc3NlcnRUcnVlKFByaW1pdGl2ZVR5cGUudG9Db2RlKCJub3QtYS10eXBlIikgPT0g
bnVsbCk7IC8vJE5PTi1OTFMtMSQKIAl9CiAKKwkvKiogQGRlcHJlY2F0ZWQgdXNpbmcgZGVwcmVj
YXRlZCBjb2RlICovCiAJcHVibGljIHZvaWQgdGVzdEFycmF5VHlwZSgpIHsKIAkJU2ltcGxlTmFt
ZSB4MSA9IHRoaXMuYXN0Lm5ld1NpbXBsZU5hbWUoIlN0cmluZyIpOyAvLyROT04tTkxTLTEkCiAJ
CVNpbXBsZVR5cGUgeDIgPSB0aGlzLmFzdC5uZXdTaW1wbGVUeXBlKHgxKTsKQEAgLTIwNjYsNyAr
MjA2NywxMSBAQAogCQlwcmV2aW91c0NvdW50ID0gdGhpcy5hc3QubW9kaWZpY2F0aW9uQ291bnQo
KTsKIAkJYXNzZXJ0VHJ1ZSh4LmdldEFTVCgpID09IHRoaXMuYXN0KTsKIAkJYXNzZXJ0VHJ1ZSh4
LmdldFBhcmVudCgpID09IG51bGwpOwotCQlhc3NlcnRUcnVlKHguZ2V0Q29tcG9uZW50VHlwZSgp
LmdldFBhcmVudCgpID09IHgpOworCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4
KSB7CisJCQlhc3NlcnRUcnVlKHguZ2V0Q29tcG9uZW50VHlwZSgpLmdldFBhcmVudCgpID09IHgp
OworCQl9IGVsc2UgeworCQkJYXNzZXJ0VHJ1ZSh4LmdldEVsZW1lbnRUeXBlKCkuZ2V0UGFyZW50
KCkgPT0geCk7CisJCX0KIAkJLy8gbWFrZSBzdXJlIHRoYXQgcmVhZGluZyBkaWQgbm90IGNoYW5n
ZSBtb2RpZmljYXRpb24gY291bnQKIAkJYXNzZXJ0VHJ1ZSh0aGlzLmFzdC5tb2RpZmljYXRpb25D
b3VudCgpID09IHByZXZpb3VzQ291bnQpOwogCQlhc3NlcnRUcnVlKCF4LmlzU2ltcGxlVHlwZSgp
KTsKQEAgLTIwODEsMzkgKzIwODYsNjkgQEAKIAkJYXNzZXJ0VHJ1ZSh4LmdldERpbWVuc2lvbnMo
KSA9PSAxKTsKIAkJYXNzZXJ0VHJ1ZSh4LmdldEVsZW1lbnRUeXBlKCkgPT0geDIpOwogCi0JCWdl
bmVyaWNQcm9wZXJ0eVRlc3QoeCwgbmV3IFByb3BlcnR5KCJDb21wb25lbnRUeXBlIiwgdHJ1ZSwg
VHlwZS5jbGFzcykgeyAvLyROT04tTkxTLTEkCi0JCQlwdWJsaWMgQVNUTm9kZSBzYW1wbGUoQVNU
IHRhcmdldEFzdCwgYm9vbGVhbiBwYXJlbnRlZCkgewotCQkJCVNpbXBsZVR5cGUgcmVzdWx0ID0g
dGFyZ2V0QXN0Lm5ld1NpbXBsZVR5cGUoCi0JCQkJCXRhcmdldEFzdC5uZXdTaW1wbGVOYW1lKCJh
IikpOyAvLyROT04tTkxTLTEkCi0JCQkJaWYgKHBhcmVudGVkKSB7Ci0JCQkJCXRhcmdldEFzdC5u
ZXdBcnJheVR5cGUocmVzdWx0KTsKKwkJaWYgKHRoaXMuYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxT
OCkgeworCQkJZ2VuZXJpY1Byb3BlcnR5VGVzdCh4LCBuZXcgUHJvcGVydHkoIkNvbXBvbmVudFR5
cGUiLCB0cnVlLCBUeXBlLmNsYXNzKSB7IC8vJE5PTi1OTFMtMSQKKwkJCQlwdWJsaWMgQVNUTm9k
ZSBzYW1wbGUoQVNUIHRhcmdldEFzdCwgYm9vbGVhbiBwYXJlbnRlZCkgeworCQkJCQlTaW1wbGVU
eXBlIHJlc3VsdCA9IHRhcmdldEFzdC5uZXdTaW1wbGVUeXBlKAorCQkJCQkJdGFyZ2V0QXN0Lm5l
d1NpbXBsZU5hbWUoImEiKSk7IC8vJE5PTi1OTFMtMSQKKwkJCQkJaWYgKHBhcmVudGVkKSB7CisJ
CQkJCQl0YXJnZXRBc3QubmV3QXJyYXlUeXBlKHJlc3VsdCk7CisJCQkJCX0KKwkJCQkJcmV0dXJu
IHJlc3VsdDsKIAkJCQl9Ci0JCQkJcmV0dXJuIHJlc3VsdDsKLQkJCX0KLQkJCXB1YmxpYyBBU1RO
b2RlIHdyYXAoKSB7Ci0JCQkJQXJyYXlUeXBlIHJlc3VsdCA9IEFTVFRlc3QudGhpcy5hc3QubmV3
QXJyYXlUeXBlKHgpOwotCQkJCXJldHVybiByZXN1bHQ7Ci0JCQl9Ci0JCQlwdWJsaWMgdm9pZCB1
bndyYXAoKSB7Ci0JCQkJQXJyYXlUeXBlIGEgPSAoQXJyYXlUeXBlKSB4LmdldFBhcmVudCgpOwot
CQkJCWEuc2V0Q29tcG9uZW50VHlwZShBU1RUZXN0LnRoaXMuYXN0Lm5ld1ByaW1pdGl2ZVR5cGUo
UHJpbWl0aXZlVHlwZS5JTlQpKTsKLQkJCX0KLQkJCXB1YmxpYyBBU1ROb2RlIGdldCgpIHsKLQkJ
CQlyZXR1cm4geC5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCQl9Ci0JCQlwdWJsaWMgdm9pZCBzZXQo
QVNUTm9kZSB2YWx1ZSkgewotCQkJCXguc2V0Q29tcG9uZW50VHlwZSgoVHlwZSkgdmFsdWUpOwot
CQkJfQotCQl9KTsKKwkJCQlwdWJsaWMgQVNUTm9kZSB3cmFwKCkgeworCQkJCQlBcnJheVR5cGUg
cmVzdWx0ID0gQVNUVGVzdC50aGlzLmFzdC5uZXdBcnJheVR5cGUoeCk7CisJCQkJCXJldHVybiBy
ZXN1bHQ7CisJCQkJfQorCQkJCXB1YmxpYyB2b2lkIHVud3JhcCgpIHsKKwkJCQkJQXJyYXlUeXBl
IGEgPSAoQXJyYXlUeXBlKSB4LmdldFBhcmVudCgpOworCQkJCQlhLnNldENvbXBvbmVudFR5cGUo
QVNUVGVzdC50aGlzLmFzdC5uZXdQcmltaXRpdmVUeXBlKFByaW1pdGl2ZVR5cGUuSU5UKSk7CisJ
CQkJfQorCQkJCXB1YmxpYyBBU1ROb2RlIGdldCgpIHsKKwkJCQkJcmV0dXJuIHguZ2V0Q29tcG9u
ZW50VHlwZSgpOworCQkJCX0KKwkJCQlwdWJsaWMgdm9pZCBzZXQoQVNUTm9kZSB2YWx1ZSkgewor
CQkJCQl4LnNldENvbXBvbmVudFR5cGUoKFR5cGUpIHZhbHVlKTsKKwkJCQl9CisJCQl9KTsKIAot
CQl4LnNldENvbXBvbmVudFR5cGUoCi0JCQl0aGlzLmFzdC5uZXdBcnJheVR5cGUodGhpcy5hc3Qu
bmV3UHJpbWl0aXZlVHlwZShQcmltaXRpdmVUeXBlLklOVCksIDQpKTsKKwkJCXguc2V0Q29tcG9u
ZW50VHlwZSgKKwkJCQl0aGlzLmFzdC5uZXdBcnJheVR5cGUodGhpcy5hc3QubmV3UHJpbWl0aXZl
VHlwZShQcmltaXRpdmVUeXBlLklOVCksIDQpKTsKKwkJCWFzc2VydFRydWUoeC5nZXREaW1lbnNp
b25zKCkgPT0gNSk7CisJCQlhc3NlcnRUcnVlKHguZ2V0RWxlbWVudFR5cGUoKS5pc1ByaW1pdGl2
ZVR5cGUoKSk7CisJCQlmaW5hbCBBcnJheVR5cGUgeDMgPSB0aGlzLmFzdC5uZXdBcnJheVR5cGUo
eCwgMik7CisJCQlhc3NlcnRUcnVlKHgzLmdldERpbWVuc2lvbnMoKSA9PSA3KTsKKwkJfSBlbHNl
IHsKKwkJCWdlbmVyaWNQcm9wZXJ0eVRlc3QoeCwgbmV3IFByb3BlcnR5KCJFbGVtZW50VHlwZSIs
IHRydWUsIFR5cGUuY2xhc3MpIHsgLy8kTk9OLU5MUy0xJAorCQkJCXB1YmxpYyBBU1ROb2RlIHNh
bXBsZShBU1QgdGFyZ2V0QXN0LCBib29sZWFuIHBhcmVudGVkKSB7CisJCQkJCVNpbXBsZVR5cGUg
cmVzdWx0ID0gdGFyZ2V0QXN0Lm5ld1NpbXBsZVR5cGUoCisJCQkJCQl0YXJnZXRBc3QubmV3U2lt
cGxlTmFtZSgiYSIpKTsgLy8kTk9OLU5MUy0xJAorCQkJCQlpZiAocGFyZW50ZWQpIHsKKwkJCQkJ
CXRhcmdldEFzdC5uZXdBcnJheVR5cGUocmVzdWx0KTsKKwkJCQkJfQorCQkJCQlyZXR1cm4gcmVz
dWx0OworCQkJCX0KKwkJCQlwdWJsaWMgQVNUTm9kZSB3cmFwKCkgeworCQkJCQlBcnJheVR5cGUg
cmVzdWx0ID0gQVNUVGVzdC50aGlzLmFzdC5uZXdBcnJheVR5cGUoeCwgNSk7CisJCQkJCXJldHVy
biByZXN1bHQ7CisJCQkJfQorCQkJCXB1YmxpYyB2b2lkIHVud3JhcCgpIHsKKwkJCQkJQXJyYXlU
eXBlIGEgPSAoQXJyYXlUeXBlKSB4LmdldFBhcmVudCgpOworCQkJCQlhLnNldEVsZW1lbnRUeXBl
KEFTVFRlc3QudGhpcy5hc3QubmV3UHJpbWl0aXZlVHlwZShQcmltaXRpdmVUeXBlLklOVCkpOwor
CQkJCX0KKwkJCQlwdWJsaWMgQVNUTm9kZSBnZXQoKSB7CisJCQkJCXJldHVybiB4LmdldEVsZW1l
bnRUeXBlKCk7CisJCQkJfQorCQkJCXB1YmxpYyB2b2lkIHNldChBU1ROb2RlIHZhbHVlKSB7CisJ
CQkJCXguc2V0RWxlbWVudFR5cGUoKFR5cGUpIHZhbHVlKTsKKwkJCQl9CisJCQl9KTsKIAotCQlh
c3NlcnRUcnVlKHguZ2V0RGltZW5zaW9ucygpID09IDUpOwotCQlhc3NlcnRUcnVlKHguZ2V0RWxl
bWVudFR5cGUoKS5pc1ByaW1pdGl2ZVR5cGUoKSk7Ci0JCWZpbmFsIEFycmF5VHlwZSB4MyA9IHRo
aXMuYXN0Lm5ld0FycmF5VHlwZSh4LCAyKTsKLQkJYXNzZXJ0VHJ1ZSh4My5nZXREaW1lbnNpb25z
KCkgPT0gNyk7Ci0JCQorCQkJeC5zZXRFbGVtZW50VHlwZSh0aGlzLmFzdC5uZXdQcmltaXRpdmVU
eXBlKFByaW1pdGl2ZVR5cGUuSU5UKSk7CisJCQlhc3NlcnRUcnVlKHguZ2V0RGltZW5zaW9ucygp
ID09IDEpOworCQkJYXNzZXJ0VHJ1ZSh4LmdldEVsZW1lbnRUeXBlKCkuaXNQcmltaXRpdmVUeXBl
KCkpOworCQl9CisKIAkJdHJ5IHsKIAkJCXRoaXMuYXN0Lm5ld0FycmF5VHlwZShudWxsLCAyKTsK
IAkJfSBjYXRjaChJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24gZSkgewpkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2RvbS9BU1RWaXNpdG9yVGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
bW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RWaXNpdG9yVGVzdC5q
YXZhCmluZGV4IGE5NGNiMjQuLjA3NmQ0NmEgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUVmlz
aXRvclRlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFZpc2l0b3JUZXN0LmphdmEKQEAgLTEx
NTcsNyArMTE1Nyw4IEBACiAJCXRoaXMuYi5zZXRMZW5ndGgoMCk7CiAJCXgxLmFjY2VwdCh2MSk7
CiAJCVN0cmluZyByZXN1bHQgPSB0aGlzLmIudG9TdHJpbmcoKTsKLQkJYXNzZXJ0VHJ1ZSgiWyh0
QVsodFBjaGFyY2hhcnRQKV10QSldIi5lcXVhbHMocmVzdWx0KSk7IC8vJE5PTi1OTFMtMSQKKwkJ
U3RyaW5nIGV4cGVjdGVkID0gdGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4ID8gIlsodEFb
KHRQY2hhcmNoYXJ0UClddEEpXSIgOiAiWyh0QVsodFBjaGFyY2hhcnRQKV1bKEBFREBFRClddEEp
XSI7CisJCWFzc2VydFRydWUoZXhwZWN0ZWQuZXF1YWxzKHJlc3VsdCkpOyAvLyROT04tTkxTLTEk
CiAJfQogCiAJLyoqIEBkZXByZWNhdGVkIHVzaW5nIGRlcHJlY2F0ZWQgY29kZSAqLwpAQCAtMTI1
NCw3ICsxMjU1LDggQEAKIAkJdGhpcy5iLnNldExlbmd0aCgwKTsKIAkJeDEuYWNjZXB0KHYxKTsK
IAkJU3RyaW5nIHJlc3VsdCA9IHRoaXMuYi50b1N0cmluZygpOwotCQlhc3NlcnRUcnVlKHJlc3Vs
dC5lcXVhbHMoIlsoZUFDIisiWyh0QSIrdGhpcy5UMVMrInRBKV0iK3RoaXMuRTFTK3RoaXMuRTJT
KyJbKGVBSWVBSSldZUFDKV0iKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04t
TkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJU3RyaW5nIGRpbSA9IHRoaXMuYXN0LmFwaUxldmVsKCkg
PCBBU1QuSkxTOCA/ICIiIDogIlsoQEVEQEVEKV0iOworCQlhc3NlcnRUcnVlKHJlc3VsdC5lcXVh
bHMoIlsoZUFDIisiWyh0QSIrdGhpcy5UMVMrIGRpbSArInRBKV0iK3RoaXMuRTFTK3RoaXMuRTJT
KyJbKGVBSWVBSSldZUFDKV0iKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04t
TkxTLTMkIC8vJE5PTi1OTFMtNCQKIAl9CiAJcHVibGljIHZvaWQgdGVzdEFycmF5SW5pdGlhbGl6
ZXIoKSB7CiAJCUFycmF5SW5pdGlhbGl6ZXIgeDEgPSB0aGlzLmFzdC5uZXdBcnJheUluaXRpYWxp
emVyKCk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL1R5cGVBbm5vdGF0aW9uc0NvbnZlcnRlclRl
c3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBz
ZS9qZHQvY29yZS90ZXN0cy9kb20vVHlwZUFubm90YXRpb25zQ29udmVydGVyVGVzdC5qYXZhCmlu
ZGV4IDFjYTBjYjMuLmM3ZWZlYjAgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vVHlwZUFubm90YXRp
b25zQ29udmVydGVyVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1v
ZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vVHlwZUFubm90YXRpb25zQ29u
dmVydGVyVGVzdC5qYXZhCkBAIC0xLDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioK
LSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
KyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4K
ICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWlu
ZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhl
IEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBk
aXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTE2Miw3ICsxNjIsNyBAQAogCQkJ
CSJjbGFzcyBaPFE+IHtcbiIgKyAKIAkJCQkiICAgIH1cbiIgKyAKIAkJCQkiICB9XG4iICsgCi0J
CQkJIiAgT2JqZWN0IG89KEBNYXJrZXIgWDxATWFya2VyIFN0cmluZz4uQE1hcmtlciBZPEBNYXJr
ZXIgSW50ZWdlcj4uQE1hcmtlciBaPEBNYXJrZXIgT2JqZWN0PkBNYXJrZXIgW11bXUBNYXJrZXIg
W11bXSludWxsO1xuIiArIAorCQkJCSIgIE9iamVjdCBvPShATWFya2VyIFg8QE1hcmtlciBTdHJp
bmc+LkBNYXJrZXIgWTxATWFya2VyIEludGVnZXI+LkBNYXJrZXIgWjxATWFya2VyIE9iamVjdD4g
QE1hcmtlciBbXSBbXSBATWFya2VyIFtdIFtdKW51bGw7XG4iICsgCiAJCQkJIiAgQGphdmEubGFu
Zy5hbm5vdGF0aW9uLlRhcmdldChqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZS5UWVBF
X1VTRSkgQGludGVyZmFjZSBNYXJrZXIge31cbiIgKyAKIAkJCQkifVxuIjsKIAkJYXNzZXJ0QVNU
Tm9kZUVxdWFscyhleHBlY3RlZE91dHB1dCwgbm9kZSk7CkBAIC0xOTEsNyArMTkxLDcgQEAKIAkJ
CQkiY2xhc3MgWjxRPiB7XG4iICsgCiAJCQkJIiAgICB9XG4iICsgCiAJCQkJIiAgfVxuIiArIAot
CQkJCSIgIE9iamVjdCBvPShATWFya2VyIFg8QE1hcmtlciBTdHJpbmc+LkBNYXJrZXIgWTxATWFy
a2VyIEludGVnZXI+LkBNYXJrZXIgWjxATWFya2VyIE9iamVjdD5bXUBNYXJrZXIgW11bXUBNYXJr
ZXIgW10pbnVsbDtcbiIgKyAKKwkJCQkiICBPYmplY3Qgbz0oQE1hcmtlciBYPEBNYXJrZXIgU3Ry
aW5nPi5ATWFya2VyIFk8QE1hcmtlciBJbnRlZ2VyPi5ATWFya2VyIFo8QE1hcmtlciBPYmplY3Q+
IFtdIEBNYXJrZXIgW10gW10gQE1hcmtlciBbXSludWxsO1xuIiArIAogCQkJCSIgIEBqYXZhLmxh
bmcuYW5ub3RhdGlvbi5UYXJnZXQoamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGUuVFlQ
RV9VU0UpIEBpbnRlcmZhY2UgTWFya2VyIHt9XG4iICsgCiAJCQkJIn1cbiI7CiAJCWFzc2VydEFT
VE5vZGVFcXVhbHMoZXhwZWN0ZWRPdXRwdXQsIG5vZGUpOwpAQCAtMjIwLDcgKzIyMCw3IEBACiAJ
CQkJImNsYXNzIFo8UT4ge1xuIiArIAogCQkJCSIgICAgfVxuIiArIAogCQkJCSIgIH1cbiIgKyAK
LQkJCQkiICBpbnRbXVtdW11bXSBvPShAT25lIGludFtdQFR3byBbXVtdQFRocmVlIFtdKW51bGw7
XG4iICsgCisJCQkJIiAgaW50IFtdIFtdIFtdIFtdIG89KEBPbmUgaW50IFtdIEBUd28gW10gW10g
QFRocmVlIFtdKW51bGw7XG4iICsgCiAJCQkJIiAgQGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdl
dChqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZS5UWVBFX1VTRSkgQGludGVyZmFjZSBN
YXJrZXIge31cbiIgKyAKIAkJCQkifVxuIjsKIAkJYXNzZXJ0QVNUTm9kZUVxdWFscyhleHBlY3Rl
ZE91dHB1dCwgbm9kZSk7CkBAIC0yNDksNyArMjQ5LDcgQEAKIAkJCQkiY2xhc3MgWjxRPiB7XG4i
ICsgCiAJCQkJIiAgICB9XG4iICsgCiAJCQkJIiAgfVxuIiArIAotCQkJCSIgIFN0cmluZ1tdW11b
XVtdIG89KEBPbmUgU3RyaW5nW11AVHdvIFtdW11AVGhyZWUgW10pbnVsbDtcbiIgKyAKKwkJCQki
ICBTdHJpbmcgW10gW10gW10gW10gbz0oQE9uZSBTdHJpbmcgW10gQFR3byBbXSBbXSBAVGhyZWUg
W10pbnVsbDtcbiIgKyAKIAkJCQkiICBAamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0KGphdmEu
bGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlLlRZUEVfVVNFKSBAaW50ZXJmYWNlIE1hcmtlciB7
fVxuIiArIAogCQkJCSJ9XG4iOwogCQlhc3NlcnRBU1ROb2RlRXF1YWxzKGV4cGVjdGVkT3V0cHV0
LCBub2RlKTsKQEAgLTI3OCw3ICsyNzgsNyBAQAogCQkJCSJjbGFzcyBaPFE+IHtcbiIgKyAKIAkJ
CQkiICAgIH1cbiIgKyAKIAkJCQkiICB9XG4iICsgCi0JCQkJIiAgT2JqZWN0IG89KEBPbmUgWDxT
dHJpbmc+W11AVHdvIFtdW11AVGhyZWUgW10pbnVsbDtcbiIgKyAKKwkJCQkiICBPYmplY3Qgbz0o
QE9uZSBYPFN0cmluZz4gW10gQFR3byBbXSBbXSBAVGhyZWUgW10pbnVsbDtcbiIgKyAKIAkJCQki
ICBAamF2YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0KGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1l
bnRUeXBlLlRZUEVfVVNFKSBAaW50ZXJmYWNlIE1hcmtlciB7fVxuIiArIAogCQkJCSJ9XG4iOwog
CQlhc3NlcnRBU1ROb2RlRXF1YWxzKGV4cGVjdGVkT3V0cHV0LCBub2RlKTsKZGlmZiAtLWdpdCBh
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nRXhwcmVzc2lvbnNUZXN0Lmph
dmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ0V4cHJlc3Npb25zVGVz
dC5qYXZhCmluZGV4IDBhZmY0ZjguLjgzNWZiOGIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRl
L2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nRXhwcmVzc2lvbnNUZXN0LmphdmEKKysrIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdFeHByZXNzaW9uc1Rlc3QuamF2YQpAQCAt
MjYzLDIzICsyNjMsMjUgQEAKIAkJCW1lbWJlclZhbHVlUGFpci5zZXROYW1lKGFzdC5uZXdTaW1w
bGVOYW1lKCJ2IikpOwogCQkJbWVtYmVyVmFsdWVQYWlyLnNldFZhbHVlKGFzdC5uZXdOdW1iZXJM
aXRlcmFsKCI5OSIpKTsKIAkJCWFubm90YXRpb25DLnZhbHVlcygpLmFkZChtZW1iZXJWYWx1ZVBh
aXIpOwotCQkJYXJyYXlUeXBlLmFubm90YXRpb25zKCkuYWRkKGFubm90YXRpb25DKTsKKwkJCUV4
dHJhRGltZW5zaW9uIGRpbTAgPSBhcnJheVR5cGUuZ2V0RGltZW5zaW9uQXQoMCk7CisJCQlkaW0w
LmFubm90YXRpb25zKCkuYWRkKGFubm90YXRpb25DKTsKIAkJCQotCQkJYXJyYXlUeXBlPSBhc3Qu
bmV3QXJyYXlUeXBlKGFycmF5VHlwZSk7CiAJCQlTaW5nbGVNZW1iZXJBbm5vdGF0aW9uIGFubm90
YXRpb25CPSBhc3QubmV3U2luZ2xlTWVtYmVyQW5ub3RhdGlvbigpOwogCQkJYW5ub3RhdGlvbkIu
c2V0VHlwZU5hbWUoYXN0Lm5ld1NpbXBsZU5hbWUoIkIiKSk7CiAJCQlhbm5vdGF0aW9uQi5zZXRW
YWx1ZShhc3QubmV3TnVtYmVyTGl0ZXJhbCgiMCIpKTsKLQkJCWFycmF5VHlwZS5hbm5vdGF0aW9u
cygpLmFkZChhbm5vdGF0aW9uQik7CisJCQlFeHRyYURpbWVuc2lvbiBkaW0xID0gYXN0Lm5ld0V4
dHJhRGltZW5zaW9uKCk7CisJCQlkaW0xLmFubm90YXRpb25zKCkuYWRkKGFubm90YXRpb25CKTsK
KwkJCWFycmF5VHlwZS5kaW1lbnNpb25zKCkuYWRkKDAsIGRpbTEpOwogCQkJCi0JCQlhcnJheVR5
cGU9IGFzdC5uZXdBcnJheVR5cGUoYXJyYXlUeXBlKTsKIAkJCU1hcmtlckFubm90YXRpb24gYW5u
b3RhdGlvbkE9IGFzdC5uZXdNYXJrZXJBbm5vdGF0aW9uKCk7CiAJCQlhbm5vdGF0aW9uQS5zZXRU
eXBlTmFtZShhc3QubmV3U2ltcGxlTmFtZSgiQSIpKTsKLQkJCWFycmF5VHlwZS5hbm5vdGF0aW9u
cygpLmFkZChhbm5vdGF0aW9uQSk7Ci0JCQkKLQkJCWFycmF5Q3JlYXRpb24uc2V0VHlwZShhcnJh
eVR5cGUpOworCQkJRXh0cmFEaW1lbnNpb24gZGltMiA9IGFzdC5uZXdFeHRyYURpbWVuc2lvbigp
OworCQkJZGltMi5hbm5vdGF0aW9ucygpLmFkZChhbm5vdGF0aW9uQSk7CisJCQlhcnJheVR5cGUu
ZGltZW5zaW9ucygpLmFkZCgwLCBkaW0yKTsKIAkJCQogCQkJYXJyYXlDcmVhdGlvbi5kaW1lbnNp
b25zKCkuYWRkKGFzdC5uZXdOdW1iZXJMaXRlcmFsKCIxIikpOwogCQkJYXJyYXlDcmVhdGlvbi5k
aW1lbnNpb25zKCkuYWRkKGFzdC5uZXdOdW1iZXJMaXRlcmFsKCIyIikpOworCQkJYXJyYXlDcmVh
dGlvbi5zZXRUeXBlKGFycmF5VHlwZSk7CiAJCQkKIAkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUo
aW52b2NhdGlvbiwgTWV0aG9kSW52b2NhdGlvbi5BUkdVTUVOVFNfUFJPUEVSVFkpLmluc2VydExh
c3QoYXJyYXlDcmVhdGlvbiwgbnVsbCk7CiAJCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpk
dC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRl
L2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0aG9kRGVjbFRlc3QuamF2YSBiL29yZy5lY2xpcHNl
LmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdy
aXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0aG9kRGVjbFRlc3QuamF2YQppbmRleCA3YTIx
MjI1Li41ZGEwMjYyIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2Rl
bC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJl
d3JpdGluZ01ldGhvZERlY2xUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmlu
Zy9BU1RSZXdyaXRpbmdNZXRob2REZWNsVGVzdC5qYXZhCkBAIC0xMTEsNyArMTExLDcgQEAKIAkJ
CQlsaXN0UmV3cml0ZS5yZW1vdmUoZXh0cmFEaW1lbnNpb24sIG51bGwpOwogCQkJfQogCQkJZm9y
IChpbnQgaT0gMDsgaSA8IGV4dHJhRGltZW5zaW9uczsgaSsrKSB7Ci0JCQkJbGlzdFJld3JpdGUu
aW5zZXJ0TGFzdChtZXRob2REZWNsLmdldEFTVCgpLm5ld0V4dHJhRGltZW5zaW9uKCksIG51bGwp
OworCQkJCWxpc3RSZXdyaXRlLmluc2VydEZpcnN0KG1ldGhvZERlY2wuZ2V0QVNUKCkubmV3RXh0
cmFEaW1lbnNpb24oKSwgbnVsbCk7CiAJCQl9CiAJCX0KIAl9CmRpZmYgLS1naXQgYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
cmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ1N0YXRlbWVudHNUZXN0LmphdmEgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVz
dHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ1N0YXRlbWVudHNUZXN0LmphdmEKaW5k
ZXggMDgyZmE1Ny4uZGZkZDJkZSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmlu
Zy9BU1RSZXdyaXRpbmdTdGF0ZW1lbnRzVGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rl
c2NyaWJpbmcvQVNUUmV3cml0aW5nU3RhdGVtZW50c1Rlc3QuamF2YQpAQCAtNTk0MiwyNCArNTk0
MiwyNSBAQAogCQkJTGlzdFJld3JpdGUgbGlzdFJld3JpdGU9IHJld3JpdGUuZ2V0TGlzdFJld3Jp
dGUoZnJhZ21lbnQsIFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudC5FWFRSQV9ESU1FTlNJT05T
Ml9QUk9QRVJUWSk7CiAJCQlFeHRyYURpbWVuc2lvbiBkaW09IGFzdC5uZXdFeHRyYURpbWVuc2lv
bigpOwogCQkJTWFya2VyQW5ub3RhdGlvbiBtYXJrZXJBbm5vdGF0aW9uOwotCQkJbGlzdFJld3Jp
dGUuaW5zZXJ0QXQoZGltLCAwLCBudWxsKTsKKwkJCWxpc3RSZXdyaXRlLmluc2VydEZpcnN0KGRp
bSwgbnVsbCk7CiAKIAkJCUFycmF5VHlwZSBjcmVhdGlvblR5cGUgPSBjcmVhdGlvbi5nZXRUeXBl
KCk7Ci0JCQlBcnJheVR5cGUgbmV3QXJyYXlUeXBlID0gYXN0Lm5ld0FycmF5VHlwZSgoQXJyYXlU
eXBlKSBBU1ROb2RlLmNvcHlTdWJ0cmVlKGFzdCwgY3JlYXRpb25UeXBlKSk7Ci0JCQluZXdBcnJh
eVR5cGUgPSBhc3QubmV3QXJyYXlUeXBlKG5ld0FycmF5VHlwZSk7Ci0JCQlyZXdyaXRlLnNldChj
cmVhdGlvbiwgQXJyYXlDcmVhdGlvbi5UWVBFX1BST1BFUlRZLCBuZXdBcnJheVR5cGUsIG51bGwp
OwotCi0JCQlsaXN0UmV3cml0ZT0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShuZXdBcnJheVR5cGUs
IEFycmF5VHlwZS5BTk5PVEFUSU9OU19QUk9QRVJUWSk7CisJCQlBcnJheVR5cGUgbmV3QXJyYXlU
eXBlID0gKEFycmF5VHlwZSkgQVNUTm9kZS5jb3B5U3VidHJlZShhc3QsIGNyZWF0aW9uVHlwZSk7
CisJCQluZXdBcnJheVR5cGUuZGltZW5zaW9ucygpLmFkZChhc3QubmV3RXh0cmFEaW1lbnNpb24o
KSk7CisJCQkKKwkJCUV4dHJhRGltZW5zaW9uIGRpbTAgPSBhc3QubmV3RXh0cmFEaW1lbnNpb24o
KTsKIAkJCW1hcmtlckFubm90YXRpb249IGFzdC5uZXdNYXJrZXJBbm5vdGF0aW9uKCk7CiAJCQlt
YXJrZXJBbm5vdGF0aW9uLnNldFR5cGVOYW1lKGFzdC5uZXdTaW1wbGVOYW1lKCJBbm5vdDMiKSk7
Ci0JCQlsaXN0UmV3cml0ZS5pbnNlcnRBdChtYXJrZXJBbm5vdGF0aW9uLCAwLCBudWxsKTsKLQkJ
CW5ld0FycmF5VHlwZS5hbm5vdGF0aW9ucygpLmFkZChtYXJrZXJBbm5vdGF0aW9uKTsKKwkJCWRp
bTAuYW5ub3RhdGlvbnMoKS5hZGQobWFya2VyQW5ub3RhdGlvbik7CiAJCQltYXJrZXJBbm5vdGF0
aW9uPSBhc3QubmV3TWFya2VyQW5ub3RhdGlvbigpOwogCQkJbWFya2VyQW5ub3RhdGlvbi5zZXRU
eXBlTmFtZShhc3QubmV3U2ltcGxlTmFtZSgiQW5ub3QyIikpOwotCQkJbGlzdFJld3JpdGUuaW5z
ZXJ0QXQobWFya2VyQW5ub3RhdGlvbiwgMSwgbnVsbCk7CisJCQlkaW0wLmFubm90YXRpb25zKCku
YWRkKG1hcmtlckFubm90YXRpb24pOwogCQkJbWFya2VyQW5ub3RhdGlvbj0gYXN0Lm5ld01hcmtl
ckFubm90YXRpb24oKTsKIAkJCW1hcmtlckFubm90YXRpb24uc2V0VHlwZU5hbWUoYXN0Lm5ld1Np
bXBsZU5hbWUoIkFubm90MSIpKTsKLQkJCWxpc3RSZXdyaXRlLmluc2VydEF0KG1hcmtlckFubm90
YXRpb24sIDIsIG51bGwpOworCQkJZGltMC5hbm5vdGF0aW9ucygpLmFkZChtYXJrZXJBbm5vdGF0
aW9uKTsKKwkJCW5ld0FycmF5VHlwZS5kaW1lbnNpb25zKCkuYWRkKGRpbTApOworCQkJcmV3cml0
ZS5zZXQoY3JlYXRpb24sIEFycmF5Q3JlYXRpb24uVFlQRV9QUk9QRVJUWSwgbmV3QXJyYXlUeXBl
LCBudWxsKTsKKwogCQl9CiAJCXsKIAkJCXN0YXRlbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9u
U3RhdGVtZW50KSBzdGF0ZW1lbnRzLmdldCgxKTsKQEAgLTU5NzgsNDMgKzU5NzksNDQgQEAKIAkJ
CUV4cHJlc3Npb24gZXhwID0gKEV4cHJlc3Npb24pIGV4cHJlc3Npb25zLmdldCgxKTsKIAkJCWxp
c3RSZXdyaXRlLnJlbW92ZShleHAsIG51bGwpOwogCi0JCQlsaXN0UmV3cml0ZSA9IHJld3JpdGUu
Z2V0TGlzdFJld3JpdGUoY3JlYXRpb25UeXBlLCBBcnJheVR5cGUuQU5OT1RBVElPTlNfUFJPUEVS
VFkpOwotCQkJTWFya2VyQW5ub3RhdGlvbiBhbm5vdGF0aW9uID0gKE1hcmtlckFubm90YXRpb24p
IGNyZWF0aW9uVHlwZS5hbm5vdGF0aW9ucygpLmdldCgwKTsKKwkJCUV4dHJhRGltZW5zaW9uIGRp
bSA9IGNyZWF0aW9uVHlwZS5nZXREaW1lbnNpb25BdCgyKTsKKwkJCWxpc3RSZXdyaXRlID0gcmV3
cml0ZS5nZXRMaXN0UmV3cml0ZShkaW0sIEV4dHJhRGltZW5zaW9uLkFOTk9UQVRJT05TX1BST1BF
UlRZKTsKKwkJCU1hcmtlckFubm90YXRpb24gYW5ub3RhdGlvbiA9IChNYXJrZXJBbm5vdGF0aW9u
KSBkaW0uYW5ub3RhdGlvbnMoKS5nZXQoMCk7CiAJCQlsaXN0UmV3cml0ZS5yZW1vdmUoYW5ub3Rh
dGlvbiwgbnVsbCk7CiAKLQkJCWNyZWF0aW9uVHlwZSA9IChBcnJheVR5cGUpIGNyZWF0aW9uVHlw
ZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCQlsaXN0UmV3cml0ZSA9IHJld3JpdGUuZ2V0TGlzdFJl
d3JpdGUoY3JlYXRpb25UeXBlLCBBcnJheVR5cGUuQU5OT1RBVElPTlNfUFJPUEVSVFkpOwotCQkJ
YW5ub3RhdGlvbiA9IChNYXJrZXJBbm5vdGF0aW9uKSBjcmVhdGlvblR5cGUuYW5ub3RhdGlvbnMo
KS5nZXQoMSk7CisJCQlkaW0gPSBjcmVhdGlvblR5cGUuZ2V0RGltZW5zaW9uQXQoMSk7CisJCQls
aXN0UmV3cml0ZSA9IHJld3JpdGUuZ2V0TGlzdFJld3JpdGUoZGltLCBFeHRyYURpbWVuc2lvbi5B
Tk5PVEFUSU9OU19QUk9QRVJUWSk7CisJCQlhbm5vdGF0aW9uID0gKE1hcmtlckFubm90YXRpb24p
IGRpbS5hbm5vdGF0aW9ucygpLmdldCgxKTsKIAkJCWxpc3RSZXdyaXRlLnJlbW92ZShhbm5vdGF0
aW9uLCBudWxsKTsKIAotCQkJY3JlYXRpb25UeXBlID0gKEFycmF5VHlwZSkgY3JlYXRpb25UeXBl
LmdldENvbXBvbmVudFR5cGUoKTsKLQkJCWxpc3RSZXdyaXRlID0gcmV3cml0ZS5nZXRMaXN0UmV3
cml0ZShjcmVhdGlvblR5cGUsIEFycmF5VHlwZS5BTk5PVEFUSU9OU19QUk9QRVJUWSk7Ci0JCQlh
bm5vdGF0aW9uID0gKE1hcmtlckFubm90YXRpb24pIGNyZWF0aW9uVHlwZS5hbm5vdGF0aW9ucygp
LmdldCgxKTsKKwkJCWRpbSA9IGNyZWF0aW9uVHlwZS5nZXREaW1lbnNpb25BdCgwKTsKKwkJCWxp
c3RSZXdyaXRlID0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShkaW0sIEV4dHJhRGltZW5zaW9uLkFO
Tk9UQVRJT05TX1BST1BFUlRZKTsKKwkJCWFubm90YXRpb24gPSAoTWFya2VyQW5ub3RhdGlvbikg
ZGltLmFubm90YXRpb25zKCkuZ2V0KDEpOwogCQkJbGlzdFJld3JpdGUucmVtb3ZlKGFubm90YXRp
b24sIG51bGwpOwogCiAJCQlmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQp
IGZyYWdtZW50cy5nZXQoMSk7CiAKIAkJCWNyZWF0aW9uID0gKEFycmF5Q3JlYXRpb24pIGZyYWdt
ZW50LmdldEluaXRpYWxpemVyKCk7CiAJCQljcmVhdGlvblR5cGUgPSBjcmVhdGlvbi5nZXRUeXBl
KCk7Ci0KLQkJCWxpc3RSZXdyaXRlID0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShjcmVhdGlvblR5
cGUsIEFycmF5VHlwZS5BTk5PVEFUSU9OU19QUk9QRVJUWSk7Ci0JCQlhbm5vdGF0aW9uID0gKE1h
cmtlckFubm90YXRpb24pIGNyZWF0aW9uVHlwZS5hbm5vdGF0aW9ucygpLmdldCgwKTsKKwkJCWRp
bSA9IGNyZWF0aW9uVHlwZS5nZXREaW1lbnNpb25BdCgyKTsKKwkJCWxpc3RSZXdyaXRlID0gcmV3
cml0ZS5nZXRMaXN0UmV3cml0ZShkaW0sIEV4dHJhRGltZW5zaW9uLkFOTk9UQVRJT05TX1BST1BF
UlRZKTsKKwkJCWFubm90YXRpb24gPSAoTWFya2VyQW5ub3RhdGlvbikgZGltLmFubm90YXRpb25z
KCkuZ2V0KDEpOwogCQkJbGlzdFJld3JpdGUucmVtb3ZlKGFubm90YXRpb24sIG51bGwpOwotCQkJ
YW5ub3RhdGlvbiA9IChNYXJrZXJBbm5vdGF0aW9uKSBjcmVhdGlvblR5cGUuYW5ub3RhdGlvbnMo
KS5nZXQoMSk7CisJCQlhbm5vdGF0aW9uID0gKE1hcmtlckFubm90YXRpb24pIGRpbS5hbm5vdGF0
aW9ucygpLmdldCgwKTsKIAkJCWxpc3RSZXdyaXRlLnJlbW92ZShhbm5vdGF0aW9uLCBudWxsKTsK
IAotCQkJY3JlYXRpb25UeXBlID0gKEFycmF5VHlwZSkgY3JlYXRpb25UeXBlLmdldENvbXBvbmVu
dFR5cGUoKTsKLQkJCWxpc3RSZXdyaXRlID0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShjcmVhdGlv
blR5cGUsIEFycmF5VHlwZS5BTk5PVEFUSU9OU19QUk9QRVJUWSk7Ci0JCQlhbm5vdGF0aW9uID0g
KE1hcmtlckFubm90YXRpb24pIGNyZWF0aW9uVHlwZS5hbm5vdGF0aW9ucygpLmdldCgwKTsKKwkJ
CWRpbSA9IGNyZWF0aW9uVHlwZS5nZXREaW1lbnNpb25BdCgxKTsKKwkJCWxpc3RSZXdyaXRlID0g
cmV3cml0ZS5nZXRMaXN0UmV3cml0ZShkaW0sIEV4dHJhRGltZW5zaW9uLkFOTk9UQVRJT05TX1BS
T1BFUlRZKTsKKwkJCWFubm90YXRpb24gPSAoTWFya2VyQW5ub3RhdGlvbikgZGltLmFubm90YXRp
b25zKCkuZ2V0KDEpOwogCQkJbGlzdFJld3JpdGUucmVtb3ZlKGFubm90YXRpb24sIG51bGwpOwot
CQkJYW5ub3RhdGlvbiA9IChNYXJrZXJBbm5vdGF0aW9uKSBjcmVhdGlvblR5cGUuYW5ub3RhdGlv
bnMoKS5nZXQoMSk7CisJCQlhbm5vdGF0aW9uID0gKE1hcmtlckFubm90YXRpb24pIGRpbS5hbm5v
dGF0aW9ucygpLmdldCgwKTsKIAkJCWxpc3RSZXdyaXRlLnJlbW92ZShhbm5vdGF0aW9uLCBudWxs
KTsKIAotCQkJY3JlYXRpb25UeXBlID0gKEFycmF5VHlwZSkgY3JlYXRpb25UeXBlLmdldENvbXBv
bmVudFR5cGUoKTsKLQkJCWxpc3RSZXdyaXRlID0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShjcmVh
dGlvblR5cGUsIEFycmF5VHlwZS5BTk5PVEFUSU9OU19QUk9QRVJUWSk7Ci0JCQlhbm5vdGF0aW9u
ID0gKE1hcmtlckFubm90YXRpb24pIGNyZWF0aW9uVHlwZS5hbm5vdGF0aW9ucygpLmdldCgwKTsK
KwkJCWRpbSA9IGNyZWF0aW9uVHlwZS5nZXREaW1lbnNpb25BdCgwKTsKKwkJCWxpc3RSZXdyaXRl
ID0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShkaW0sIEV4dHJhRGltZW5zaW9uLkFOTk9UQVRJT05T
X1BST1BFUlRZKTsKKwkJCWFubm90YXRpb24gPSAoTWFya2VyQW5ub3RhdGlvbikgZGltLmFubm90
YXRpb25zKCkuZ2V0KDEpOwogCQkJbGlzdFJld3JpdGUucmVtb3ZlKGFubm90YXRpb24sIG51bGwp
OwotCQkJYW5ub3RhdGlvbiA9IChNYXJrZXJBbm5vdGF0aW9uKSBjcmVhdGlvblR5cGUuYW5ub3Rh
dGlvbnMoKS5nZXQoMSk7CisJCQlhbm5vdGF0aW9uID0gKE1hcmtlckFubm90YXRpb24pIGRpbS5h
bm5vdGF0aW9ucygpLmdldCgwKTsKIAkJCWxpc3RSZXdyaXRlLnJlbW92ZShhbm5vdGF0aW9uLCBu
dWxsKTsKIAogCQkJZXhwcmVzc2lvbnMgPSBjcmVhdGlvbi5kaW1lbnNpb25zKCk7CkBAIC02MDM1
LDggKzYwMzcsOCBAQAogCQlidWYuYXBwZW5kKCJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24u
RWxlbWVudFR5cGU7XG4iKTsKIAkJYnVmLmFwcGVuZCgicHVibGljIGNsYXNzIEUge1xuIik7CiAJ
CWJ1Zi5hcHBlbmQoIiAgICBwdWJsaWMgdm9pZCBmb28oKSB7XG4iKTsKLQkJYnVmLmFwcGVuZCgi
ICAgIAlpbnQgW10gaSBbXSBAQW5ub3QxIEBBbm5vdDIgW10gQEFubm90MSBAQW5ub3QzIFtdID0g
bmV3IGludCBAQW5ub3QxIEBBbm5vdDIgIFsyXSBAQW5ub3QyIEBBbm5vdDMgW3NpemUoKV0gQEFu
bm90MiBAQW5ub3QxIFtdW10gQEFubm90MyBAQW5ub3QyIEBBbm5vdDFbXTtcbiIpOwotCQlidWYu
YXBwZW5kKCIgICAgCWludCBbXSBqIFtdW10gPSBuZXcgaW50IEBBbm5vdDEgWzJdIEBBbm5vdDIg
W10gQEFubm90MyBbXSwgayBbXVtdID0gbmV3IGludFsyXVsxMF1bc2l6ZSgpXTtcbiIpOworCQli
dWYuYXBwZW5kKCIgICAgCWludCBbXSBpIFtdIEBBbm5vdDEgQEFubm90MiBbXSBAQW5ub3QxIEBB
bm5vdDMgW10gPSBuZXcgaW50IEBBbm5vdDEgQEFubm90MiAgWzJdIEBBbm5vdDIgQEFubm90MyBb
c2l6ZSgpXSBAQW5ub3QyIEBBbm5vdDEgW11bXUBBbm5vdDMgQEFubm90MiBAQW5ub3QxIFtdO1xu
Iik7CisJCWJ1Zi5hcHBlbmQoIiAgICAJaW50IFtdIGogW11bXSA9IG5ldyBpbnQgQEFubm90MiBb
Ml0gQEFubm90MiBbXSBAQW5ub3QxIFtdLCBrIFtdW10gPSBuZXcgaW50IFsyXSBbMTBdIFtzaXpl
KCldO1xuIik7CiAJCWJ1Zi5hcHBlbmQoIiAgICB9XG4iKTsKIAkJYnVmLmFwcGVuZCgiICAgIHB1
YmxpYyBpbnQgc2l6ZSgpIHsgcmV0dXJuIDI7IH1cbiIpOwogCQlidWYuYXBwZW5kKCJ9XG4iKTsK
QEAgLTYwODYsMTAgKzYwODgsMTAgQEAKIAkJCUFycmF5Q3JlYXRpb24gY3JlYXRpb24gPSAoQXJy
YXlDcmVhdGlvbikgZnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKIAogCQkJQXJyYXlUeXBlIGFy
cmF5VHlwZSA9IGNyZWF0aW9uLmdldFR5cGUoKTsKLQkJCWFycmF5VHlwZSA9IChBcnJheVR5cGUp
IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCQlMaXN0UmV3cml0ZSBsaXN0UmV3cml0
ZT0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShhcnJheVR5cGUsIEFycmF5VHlwZS5BTk5PVEFUSU9O
U19QUk9QRVJUWSk7Ci0JCQlsaXN0UmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpYXJyYXlUeXBlLmFu
bm90YXRpb25zKCkuZ2V0KDApLCBudWxsKTsKLQkJCWxpc3RSZXdyaXRlLnJlbW92ZSgoQVNUTm9k
ZSlhcnJheVR5cGUuYW5ub3RhdGlvbnMoKS5nZXQoMSksIG51bGwpOworCQkJRXh0cmFEaW1lbnNp
b24gZGltID0gYXJyYXlUeXBlLmdldERpbWVuc2lvbkF0KDEpOworCQkJTGlzdFJld3JpdGUgbGlz
dFJld3JpdGU9IHJld3JpdGUuZ2V0TGlzdFJld3JpdGUoZGltLCBFeHRyYURpbWVuc2lvbi5BTk5P
VEFUSU9OU19QUk9QRVJUWSk7CisJCQlsaXN0UmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpZGltLmFu
bm90YXRpb25zKCkuZ2V0KDApLCBudWxsKTsKKwkJCWxpc3RSZXdyaXRlLnJlbW92ZSgoQVNUTm9k
ZSlkaW0uYW5ub3RhdGlvbnMoKS5nZXQoMSksIG51bGwpOwogCQkJcmV3cml0ZS5zZXQoY3JlYXRp
b24sIEFycmF5Q3JlYXRpb24uVFlQRV9QUk9QRVJUWSwgYXJyYXlUeXBlLCBudWxsKTsKIAkJfQog
CQl7CkBAIC02MTAxLDE2ICs2MTAzLDEyIEBACiAJCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCB0
eXBlIiwgQVNUTm9kZS5BUlJBWV9UWVBFLCB0eXBlLmdldE5vZGVUeXBlKCkpOwogCQkJQXJyYXlD
cmVhdGlvbiBjcmVhdGlvbiA9IChBcnJheUNyZWF0aW9uKSBmcmFnbWVudC5nZXRJbml0aWFsaXpl
cigpOwogCQkJQXJyYXlUeXBlIGNyZWF0aW9uVHlwZSA9IGNyZWF0aW9uLmdldFR5cGUoKTsKLQot
CQkJQXJyYXlUeXBlIG5ld0FycmF5VHlwZSA9IChBcnJheVR5cGUpIGNyZWF0aW9uVHlwZS5nZXRD
b21wb25lbnRUeXBlKCk7Ci0JCQlyZXdyaXRlLnNldChjcmVhdGlvbiwgQXJyYXlDcmVhdGlvbi5U
WVBFX1BST1BFUlRZLCBuZXdBcnJheVR5cGUsIG51bGwpOwotCisJCQlyZXdyaXRlLnJlbW92ZShj
cmVhdGlvblR5cGUuZ2V0RGltZW5zaW9uQXQoMCksIG51bGwpOwogCQkJZnJhZ21lbnQgPSAoVmFy
aWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBmcmFnbWVudHMuZ2V0KDEpOwogCQkJY3JlYXRpb24g
PSAoQXJyYXlDcmVhdGlvbikgZnJhZ21lbnQuZ2V0SW5pdGlhbGl6ZXIoKTsKIAkJCWNyZWF0aW9u
VHlwZSA9IGNyZWF0aW9uLmdldFR5cGUoKTsKIAotCQkJbmV3QXJyYXlUeXBlID0gKEFycmF5VHlw
ZSkgY3JlYXRpb25UeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJCXJld3JpdGUuc2V0KGNyZWF0
aW9uLCBBcnJheUNyZWF0aW9uLlRZUEVfUFJPUEVSVFksIG5ld0FycmF5VHlwZSwgbnVsbCk7CisJ
CQlyZXdyaXRlLnJlbW92ZShjcmVhdGlvblR5cGUuZ2V0RGltZW5zaW9uQXQoMCksIG51bGwpOwog
CQl9CiAJCS8vIEdldCBuZXcgY29kZQogCQlTdHJpbmcgcHJldmlldz0gZXZhbHVhdGVSZXdyaXRl
KGN1LCByZXdyaXRlKTsKQEAgLTYxMjAsNyArNjExOCw3IEBACiAJCWJ1Zi5hcHBlbmQoImltcG9y
dCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZTtcbiIpOwogCQlidWYuYXBwZW5kKCJw
dWJsaWMgY2xhc3MgRSB7XG4iKTsKIAkJYnVmLmFwcGVuZCgiICAgIHB1YmxpYyB2b2lkIGZvbygp
IHtcbiIpOwotCQlidWYuYXBwZW5kKCIgICAgCWludCBbXSBpIFtdW10gPSBuZXcgaW50IEBBbm5v
dDEgQEFubm90MiAgWzJdW3NpemUobmV3IGludFtdW117fSldO1xuIik7CisJCWJ1Zi5hcHBlbmQo
IiAgICAJaW50IFtdIGkgW11bXSA9IG5ldyBpbnQgQEFubm90MSBAQW5ub3QyICBbMl0gIFtzaXpl
KG5ldyBpbnRbXVtde30pXSBbXTtcbiIpOwogCQlidWYuYXBwZW5kKCIgICAgCWludCBbXSBqIFtd
W10gPSBuZXcgaW50IEBBbm5vdDEgQEFubm90MiBbMl0gQEFubm90MiBAQW5ub3QzIFtzaXplKG5l
dyBpbnRbXXt9KV0sIGsgW11bXSA9IG5ldyBpbnQgQEFubm90MSBAQW5ub3QyIFsyXSBAQW5ub3Qy
IEBBbm5vdDMgWzEwXTtcbiIpOwogCQlidWYuYXBwZW5kKCIgICAgfVxuIik7CiAJCWJ1Zi5hcHBl
bmQoIiAgICBwdWJsaWMgaW50IHNpemUoT2JqZWN0IG9iaikgeyByZXR1cm4gMjsgfVxuIik7CkBA
IC02MTM3LDMgKzYxMzUsNCBAQAogCiAKIAorCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVC5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1QuamF2YQppbmRleCA3OGY4
OWNmLi5kNTM4ZmNhIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2NvcmUvZG9tL0FTVC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Rv
bS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNULmphdmEKQEAgLTk5OSw2ICs5OTksMTQgQEAK
IAl9CiAKIAkvKioKKwkgKiBBIGxvY2FsIG1ldGhvZCB0byB3b3JrYXJvdW5kIGNhbGxpbmcgZGVw
cmVjYXRlZCBtZXRob2QgaW4gYXJyYXkgdHlwZS4KKwkgKiBAZGVwcmVjYXRlZAorCSAqLworCXBy
aXZhdGUgdm9pZCBzZXRBcnJheUNvbXBvbmVudFR5cGUoQXJyYXlUeXBlIGFycmF5VHlwZSwgVHlw
ZSB0eXBlKSB7CisJCWFycmF5VHlwZS5zZXRDb21wb25lbnRUeXBlKHR5cGUpOworCX0KKworCS8q
KgogCSAqIENyZWF0ZXMgYW5kIHJldHVybnMgYSBuZXcgdW5wYXJlbnRlZCBhbm5vdGF0aW9uIHR5
cGUgZGVjbGFyYXRpb24KIAkgKiBub2RlIGZvciBhbiB1bnNwZWNpZmllZCwgYnV0IGxlZ2FsLCBu
YW1lOyBubyBtb2RpZmllcnM7IG5vIGphdmFkb2M7CiAJICogYW5kIGFuIGVtcHR5IGxpc3Qgb2Yg
bWVtYmVyIGRlY2xhcmF0aW9ucy4KQEAgLTExMDksMTkgKzExMTcsMzEgQEAKIAogCS8qKgogCSAq
IENyZWF0ZXMgYW5kIHJldHVybnMgYSBuZXcgdW5wYXJlbnRlZCBhcnJheSB0eXBlIG5vZGUgd2l0
aCB0aGUgZ2l2ZW4KLQkgKiBjb21wb25lbnQgdHlwZSwgd2hpY2ggbWF5IGJlIGFub3RoZXIgYXJy
YXkgdHlwZS4KKwkgKiBjb21wb25lbnQgdHlwZSwgd2hpY2ggbWF5IGJlIGFub3RoZXIgYXJyYXkg
dHlwZSBmb3IgbGV2ZWxzIGxlc3MgdGhhbiBKTFM4LgorCSAqIEZvciBKTFM4IGFuZCBhYm92ZSB0
aGlzIHR5cGUgaGFzIHRvIGJlIGFuIGFubm90YXRhYmxlIHR5cGUuCiAJICoKLQkgKiBAcGFyYW0g
Y29tcG9uZW50VHlwZSB0aGUgY29tcG9uZW50IHR5cGUgKHBvc3NpYmx5IGFub3RoZXIgYXJyYXkg
dHlwZSkKKwkgKiBAcGFyYW0gdHlwZSB0aGUgY29tcG9uZW50IHR5cGUgKHBvc3NpYmx5IGFub3Ro
ZXIgYXJyYXkgdHlwZSkgZm9yIGxldmVsIDwgSkxTOCwgCisJICogYSBhbm5vdGF0YWJsZSB0eXBl
IGZvciBKTFM4IGFuZCBhYm92ZQogCSAqIEByZXR1cm4gYSBuZXcgdW5wYXJlbnRlZCBhcnJheSB0
eXBlIG5vZGUKIAkgKiBAZXhjZXB0aW9uIElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbiBpZjoKIAkg
KiA8dWw+CiAJICogPGxpPnRoZSBub2RlIGJlbG9uZ3MgdG8gYSBkaWZmZXJlbnQgQVNUPC9saT4K
IAkgKiA8bGk+dGhlIG5vZGUgYWxyZWFkeSBoYXMgYSBwYXJlbnQ8L2xpPgorCSAqIDxsaT4gbGV2
ZWwgPj0gSkxTOCBhbmQgdHlwZSBub3QgYW4gYXJyYXkgdHlwZTwvbGk+CiAJICogPC91bD4KIAkg
Ki8KLQlwdWJsaWMgQXJyYXlUeXBlIG5ld0FycmF5VHlwZShUeXBlIGNvbXBvbmVudFR5cGUpIHsK
LQkJQXJyYXlUeXBlIHJlc3VsdCA9IG5ldyBBcnJheVR5cGUodGhpcyk7Ci0JCXJlc3VsdC5zZXRD
b21wb25lbnRUeXBlKGNvbXBvbmVudFR5cGUpOworCXB1YmxpYyBBcnJheVR5cGUgbmV3QXJyYXlU
eXBlKFR5cGUgdHlwZSkgeworCQlBcnJheVR5cGUgcmVzdWx0OworCQlpZiAodGhpcy5hcGlMZXZl
bCA8IEFTVC5KTFM4KSB7CisJCQlyZXN1bHQgPSBuZXcgQXJyYXlUeXBlKHRoaXMpOworCQkJc2V0
QXJyYXlDb21wb25lbnRUeXBlKHJlc3VsdCwgdHlwZSk7CisJCQlyZXR1cm4gcmVzdWx0OworCQl9
CisJCWlmICh0eXBlLmlzQXJyYXlUeXBlKCkpIHsKKwkJCXRocm93IG5ldyBJbGxlZ2FsQXJndW1l
bnRFeGNlcHRpb24oKTsKKwkJfQorCQlyZXN1bHQgPSBuZXcgQXJyYXlUeXBlKHRoaXMpOworCQly
ZXN1bHQuc2V0RWxlbWVudFR5cGUodHlwZSk7CiAJCXJldHVybiByZXN1bHQ7CiAJfQogCkBAIC0x
MTMzLDcgKzExNTMsNyBAQAogCSAqIGVsZW1lbnQgdHlwZSBvZiB0aGUgcmVzdWx0IHdpbGwgbm90
IGJlIHRoZSBzYW1lIGFzIHdoYXQgd2FzIHBhc3NlZCBpbi4KIAkgKiA8L3A+CiAJICoKLQkgKiBA
cGFyYW0gZWxlbWVudFR5cGUgdGhlIGVsZW1lbnQgdHlwZSAoY2FuIGJlIGFuIGFycmF5IHR5cGUp
CisJICogQHBhcmFtIGVsZW1lbnRUeXBlIHRoZSBlbGVtZW50IHR5cGUgKGNhbiBiZSBhbiBhcnJh
eSB0eXBlIGZvciBKTFM4LiBGb3IgPkpMUzggdGhpcyBzaG91bGQgYmUgYW4gYW5ub3RhdGFibGUg
dHlwZSkKIAkgKiBAcGFyYW0gZGltZW5zaW9ucyB0aGUgbnVtYmVyIG9mIGRpbWVuc2lvbnMsIGEg
cG9zaXRpdmUgbnVtYmVyCiAJICogQHJldHVybiBhIG5ldyB1bnBhcmVudGVkIGFycmF5IHR5cGUg
bm9kZQogCSAqIEBleGNlcHRpb24gSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uIGlmOgpAQCAtMTE0
Myw2ICsxMTYzLDcgQEAKIAkgKiA8bGk+dGhlIGVsZW1lbnQgdHlwZSBpcyBudWxsPC9saT4KIAkg
KiA8bGk+dGhlIG51bWJlciBvZiBkaW1lbnNpb25zIGlzIGxvd2VyIHRoYW4gMTwvbGk+CiAJICog
PGxpPnRoZSBudW1iZXIgb2YgZGltZW5zaW9ucyBpcyBncmVhdGVyIHRoYW4gMTAwMDwvbGk+CisJ
ICogPGxpPmZvciBsZXZlbHMgZnJvbSBKTFM4IGFuZCBsYXRlciwgaWYgdGhlIGVsZW1lbnQgdHlw
ZSBpcyBub3QgYW4gYXJyYXkgdHlwZSA8L2xpPgogCSAqIDwvdWw+CiAJICovCiAJcHVibGljIEFy
cmF5VHlwZSBuZXdBcnJheVR5cGUoVHlwZSBlbGVtZW50VHlwZSwgaW50IGRpbWVuc2lvbnMpIHsK
QEAgLTExNTAsMTMgKzExNzEsMjcgQEAKIAkJCXRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNl
cHRpb24oKTsKIAkJfQogCQlpZiAoZGltZW5zaW9ucyA8IDEgfHwgZGltZW5zaW9ucyA+IDEwMDAp
IHsKLQkJCS8vIHdlIHdvdWxkIGJsb3cgb3VyIHN0YWNrcyBhbnl3YXkgd2l0aCBhIDEwMDAtRCBh
cnJheQorCQkJLy8gd2Ugd291bGRibG93IG91ciBzdGFja3MgYW55d2F5IHdpdGggYSAxMDAwLUQg
YXJyYXkKIAkJCXRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oKTsKIAkJfQotCQlB
cnJheVR5cGUgcmVzdWx0ID0gbmV3IEFycmF5VHlwZSh0aGlzKTsKLQkJcmVzdWx0LnNldENvbXBv
bmVudFR5cGUoZWxlbWVudFR5cGUpOwotCQlmb3IgKGludCBpID0gMjsgaSA8PSBkaW1lbnNpb25z
OyBpKyspIHsKLQkJCXJlc3VsdCA9IG5ld0FycmF5VHlwZShyZXN1bHQpOworCQlBcnJheVR5cGUg
cmVzdWx0OworCQlpZiAodGhpcy5hcGlMZXZlbCA8IEFTVC5KTFM4KSB7CisJCQlyZXN1bHQgPSBu
ZXcgQXJyYXlUeXBlKHRoaXMpOworCQkJc2V0QXJyYXlDb21wb25lbnRUeXBlKHJlc3VsdCwgZWxl
bWVudFR5cGUpOworCQkJZm9yIChpbnQgaSA9IDI7IGkgPD0gZGltZW5zaW9uczsgaSsrKSB7CisJ
CQkJcmVzdWx0ID0gbmV3QXJyYXlUeXBlKHJlc3VsdCk7CisJCQl9CisJCQlyZXR1cm4gcmVzdWx0
OworCQl9CisJCS8vbGV2ZWwgPj0gSkxTOAorCQlpZiAoZWxlbWVudFR5cGUuaXNBcnJheVR5cGUo
KSkgeworCQkJdGhyb3cgbmV3IElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbigpOworCQl9CisJCXJl
c3VsdCA9IG5ldyBBcnJheVR5cGUodGhpcyk7CisJCXJlc3VsdC5zZXRFbGVtZW50VHlwZShlbGVt
ZW50VHlwZSk7CisJCS8vIGluZGV4IHN0YXJ0aW5nIGZyb20gMSBzaW5jZSB0aGVyZSBpcyBhIGRp
bWVuc2lvbiBhbHJlYWR5IGF2YWlsYWJsZSBieSBkZWZhdWx0LgorCQlmb3IgKGludCBpID0gMTsg
aSA8IGRpbWVuc2lvbnM7ICsraSkgeworCQkJcmVzdWx0LmRpbWVuc2lvbnMoKS5hZGQobmV3IEV4
dHJhRGltZW5zaW9uKHRoaXMpKTsKIAkJfQogCQlyZXR1cm4gcmVzdWx0OwogCmRpZmYgLS1naXQg
YS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVENv
bnZlcnRlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9j
b3JlL2RvbS9BU1RDb252ZXJ0ZXIuamF2YQppbmRleCA3OWY5MzMxLi42Yjk0OTAxIDEwMDY0NAot
LS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FT
VENvbnZlcnRlci5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBz
ZS9qZHQvY29yZS9kb20vQVNUQ29udmVydGVyLmphdmEKQEAgLTQ2NSwxNCArNDY1LDI2IEBACiAK
IAlwcm90ZWN0ZWQgdm9pZCBjb21wbGV0ZVJlY29yZChBcnJheVR5cGUgYXJyYXlUeXBlLCBvcmcu
ZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFTVE5vZGUgYXN0Tm9kZSkgewogCQlB
cnJheVR5cGUgYXJyYXkgPSBhcnJheVR5cGU7CisJCXRoaXMucmVjb3JkTm9kZXMoYXJyYXlUeXBl
LCBhc3ROb2RlKTsKKwkJaWYgKHRoaXMuYXN0LmFwaUxldmVsKCkgPj0gQVNULkpMUzgpIHsKKwkJ
CXRoaXMucmVjb3JkTm9kZXMoYXJyYXlUeXBlLmdldEVsZW1lbnRUeXBlKCksIGFzdE5vZGUpOwor
CQkJcmV0dXJuOworCQl9CiAJCWludCBkaW1lbnNpb25zID0gYXJyYXkuZ2V0RGltZW5zaW9ucygp
OwogCQlmb3IgKGludCBpID0gMDsgaSA8IGRpbWVuc2lvbnM7IGkrKykgewotCQkJVHlwZSBjb21w
b25lbnRUeXBlID0gYXJyYXkuZ2V0Q29tcG9uZW50VHlwZSgpOworCQkJVHlwZSBjb21wb25lbnRU
eXBlID0gY29tcG9uZW50VHlwZShhcnJheSk7CiAJCQl0aGlzLnJlY29yZE5vZGVzKGNvbXBvbmVu
dFR5cGUsIGFzdE5vZGUpOwogCQkJaWYgKGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSkgewog
CQkJCWFycmF5ID0gKEFycmF5VHlwZSkgY29tcG9uZW50VHlwZTsKIAkJCX0KIAkJfQorCX0KKwkK
KwkvKioKKwkgKiBAZGVwcmVjYXRlZAorCSAqLworCXByaXZhdGUgVHlwZSBjb21wb25lbnRUeXBl
KEFycmF5VHlwZSBhcnJheSkgeworCQlyZXR1cm4gYXJyYXkuZ2V0Q29tcG9uZW50VHlwZSgpOwog
CX0KIAogCXB1YmxpYyBBU1ROb2RlIGNvbnZlcnQoYm9vbGVhbiBpc0ludGVyZmFjZSwgb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5BYnN0cmFjdE1ldGhvZERlY2xhcmF0aW9u
IG1ldGhvZERlY2xhcmF0aW9uKSB7CkBAIC05MDksMTIgKzkyMSwxOCBAQAogCQlpZiAoaXNWYXJB
cmdzKSB7CiAJCQlzZXRUeXBlRm9yU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbih2YXJpYWJsZURl
Y2wsIHR5cGUsIGV4dHJhRGltZW5zaW9ucyArIDEpOwogCQkJLy8gaHR0cHM6Ly9idWdzLmVjbGlw
c2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTM5MTg5OAotCQkJaWYgKHR5cGUuaXNBbm5vdGF0
YWJsZSgpKSB7Ci0JCQkJQW5ub3RhdGFibGVUeXBlIGFubm90YXRhYmxlVHlwZSA9IChBbm5vdGF0
YWJsZVR5cGUpIHR5cGU7Ci0JCQkJaWYgKHRoaXMuYXN0LmFwaUxldmVsKCkgPj0gQVNULkpMUzgg
JiYgIWFubm90YXRhYmxlVHlwZS5hbm5vdGF0aW9ucygpLmlzRW1wdHkoKSkgewotCQkJCQlJdGVy
YXRvciBhbm5vdGF0aW9ucyA9IGFubm90YXRhYmxlVHlwZS5hbm5vdGF0aW9ucygpLml0ZXJhdG9y
KCk7Ci0JCQkJCXdoaWxlIChhbm5vdGF0aW9ucy5oYXNOZXh0KCkpIHsKLQkJCQkJCUFubm90YXRp
b24gYW5ub3RhdGlvbiA9IChBbm5vdGF0aW9uKSBhbm5vdGF0aW9ucy5uZXh0KCk7CisJCQlpZiAo
dGhpcy5hc3QuYXBpTGV2ZWwoKSA+PSBBU1QuSkxTOCkgeworCQkJCUxpc3QgYW5ub3RhdGlvbnMg
ID0gbnVsbDsKKwkJCQlpZiAodHlwZS5pc0Fubm90YXRhYmxlKCkpIHsKKwkJCQkJYW5ub3RhdGlv
bnMgPSAoKEFubm90YXRhYmxlVHlwZSkgdHlwZSkuYW5ub3RhdGlvbnMoKTsKKwkJCQl9IGVsc2Ug
aWYgKHR5cGUuaXNBcnJheVR5cGUoKSkgeworCQkJCQlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFy
cmF5VHlwZSkgdHlwZTsKKwkJCQkJYW5ub3RhdGlvbnMgPSBhcnJheVR5cGUuZGltZW5zaW9ucygp
LmlzRW1wdHkoKSA/IG51bGwgOiAoKGFycmF5VHlwZS5nZXREaW1lbnNpb25BdCgwKSkuYW5ub3Rh
dGlvbnMoKSk7CisJCQkJfQorCQkJCWlmIChhbm5vdGF0aW9ucyAhPSBudWxsKSB7CisJCQkJCUl0
ZXJhdG9yIGl0ZXIgPSBhbm5vdGF0aW9ucy5pdGVyYXRvcigpOworCQkJCQl3aGlsZSAoaXRlci5o
YXNOZXh0KCkpIHsKKwkJCQkJCUFubm90YXRpb24gYW5ub3RhdGlvbiA9IChBbm5vdGF0aW9uKSBp
dGVyLm5leHQoKTsKIAkJCQkJCWFubm90YXRpb24uc2V0UGFyZW50KG51bGwsIG51bGwpOwogCQkJ
CQkJdmFyaWFibGVEZWNsLnZhcmFyZ3NBbm5vdGF0aW9ucygpLmFkZChhbm5vdGF0aW9uKTsKIAkJ
CQkJfQpAQCAtOTgxLDI3ICs5OTksMTkgQEAKIAkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IG51bGw7
CiAJCWlmICh0eXBlLmlzQXJyYXlUeXBlKCkpIHsKIAkJCWFycmF5VHlwZSA9IChBcnJheVR5cGUp
IHR5cGU7CisJCQlpZiAoZXhwcmVzc2lvbi5hbm5vdGF0aW9uc09uRGltZW5zaW9ucyAhPSBudWxs
KSB7CisJCQkJaWYgKHRoaXMuYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgeworCQkJCQlhcnJh
eVR5cGUuc2V0RmxhZ3MoYXJyYXlUeXBlLmdldEZsYWdzKCkgfCBBU1ROb2RlLk1BTEZPUk1FRCk7
CisJCQkJfSBlbHNlIHsKKwkJCQkJc2V0QXJyYXlUeXBlQW5ub3RhdGlvbnNBbmRTb3VyY2UoYXJy
YXlUeXBlLCBleHByZXNzaW9uLmFubm90YXRpb25zT25EaW1lbnNpb25zKTsKKwkJCQl9CisJCQl9
CiAJCX0gZWxzZSB7Ci0JCQlhcnJheVR5cGUgPSB0aGlzLmFzdC5uZXdBcnJheVR5cGUodHlwZSwg
ZGltZW5zaW9uc0xlbmd0aCk7Ci0JCQlpZiAodGhpcy5yZXNvbHZlQmluZGluZ3MpIHsKLQkJCQlj
b21wbGV0ZVJlY29yZChhcnJheVR5cGUsIGV4cHJlc3Npb24pOwotCQkJfQotCQkJaW50IHN0YXJ0
ID0gdHlwZS5nZXRTdGFydFBvc2l0aW9uKCk7Ci0JCQlpbnQgZW5kID0gdHlwZS5nZXRTdGFydFBv
c2l0aW9uKCkgKyB0eXBlLmdldExlbmd0aCgpOwotCQkJaW50IHByZXZpb3VzU2VhcmNoU3RhcnQg
PSBlbmQgLSAxOwotCQkJQXJyYXlUeXBlIGNvbXBvbmVudFR5cGUgPSAoQXJyYXlUeXBlKSB0eXBl
LmdldFBhcmVudCgpOwotCQkJZm9yIChpbnQgaSA9IDA7IGkgPCBkaW1lbnNpb25zTGVuZ3RoOyBp
KyspIHsKLQkJCQlwcmV2aW91c1NlYXJjaFN0YXJ0ID0gcmV0cmlldmVSaWdodEJyYWNrZXRQb3Np
dGlvbihwcmV2aW91c1NlYXJjaFN0YXJ0ICsgMSwgdGhpcy5jb21waWxhdGlvblVuaXRTb3VyY2VM
ZW5ndGgpOwotCQkJCWNvbXBvbmVudFR5cGUuc2V0U291cmNlUmFuZ2Uoc3RhcnQsIHByZXZpb3Vz
U2VhcmNoU3RhcnQgLSBzdGFydCArIDEpOwotCQkJCWNvbXBvbmVudFR5cGUgPSAoQXJyYXlUeXBl
KSBjb21wb25lbnRUeXBlLmdldFBhcmVudCgpOwotCQkJfQotCQl9Ci0JCWlmIChleHByZXNzaW9u
LmFubm90YXRpb25zT25EaW1lbnNpb25zICE9IG51bGwpIHsKLQkJCWFubm90YXRlVHlwZShhcnJh
eVR5cGUsIGV4cHJlc3Npb24uYW5ub3RhdGlvbnNPbkRpbWVuc2lvbnMpOworCQkJYXJyYXlUeXBl
ID0gY29udmVydFRvQXJyYXkodHlwZSwgdHlwZS5nZXRTdGFydFBvc2l0aW9uKCksIC0xLCBkaW1l
bnNpb25zTGVuZ3RoLCBleHByZXNzaW9uLmFubm90YXRpb25zT25EaW1lbnNpb25zKTsKIAkJfQog
CQlhcnJheUNyZWF0aW9uLnNldFR5cGUoYXJyYXlUeXBlKTsKIAkJaWYgKHRoaXMucmVzb2x2ZUJp
bmRpbmdzKSB7Ci0JCQlyZWNvcmROb2RlcyhhcnJheVR5cGUsIGV4cHJlc3Npb24pOworCQkJY29t
cGxldGVSZWNvcmQoYXJyYXlUeXBlLCBleHByZXNzaW9uKTsKIAkJfQogCQlpZiAoZXhwcmVzc2lv
bi5pbml0aWFsaXplciAhPSBudWxsKSB7CiAJCQlhcnJheUNyZWF0aW9uLnNldEluaXRpYWxpemVy
KGNvbnZlcnQoZXhwcmVzc2lvbi5pbml0aWFsaXplcikpOwpAQCAtMzEyMSw2ICszMTMxLDMxIEBA
CiAJCXJldHVybiBwYWNrYWdlRGVjbGFyYXRpb247CiAJfQogCisJcHJpdmF0ZSBBcnJheVR5cGUg
Y29udmVydFRvQXJyYXkoVHlwZSBzdWJUeXBlLCBpbnQgc291cmNlU3RhcnQsIGludCBsZW5ndGgs
IGludCBub0RpbWVuc2lvbnMsCisJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
YXN0LkFubm90YXRpb25bXVtdIGFubm90YXRpb25zT25EaW1zKSB7CisJCUFycmF5VHlwZSBhcnJh
eVR5cGUgPSB0aGlzLmFzdC5uZXdBcnJheVR5cGUoc3ViVHlwZSwgbm9EaW1lbnNpb25zKTsKKwkJ
aWYgKGxlbmd0aCA+IDApIGFycmF5VHlwZS5zZXRTb3VyY2VSYW5nZShzb3VyY2VTdGFydCwgbGVu
Z3RoKTsKKwkJaWYgKHRoaXMuYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgeworCQkJaWYgKGFu
bm90YXRpb25zT25EaW1zICE9IG51bGwpIHsKKwkJCQlhcnJheVR5cGUuc2V0RmxhZ3MoYXJyYXlU
eXBlLmdldEZsYWdzKCkgfCBBU1ROb2RlLk1BTEZPUk1FRCk7CisJCQl9CisJCQlBcnJheVR5cGUg
c3ViYXJyYXlUeXBlID0gYXJyYXlUeXBlOworCQkJaW50IGluZGV4ID0gbm9EaW1lbnNpb25zIC0g
MTsKKwkJCWludCBhcnJheUVuZCA9IHJldHJpZXZlUHJvcGVyUmlnaHRCcmFja2V0UG9zaXRpb24o
bm9EaW1lbnNpb25zLCBzb3VyY2VTdGFydCk7CisJCQl3aGlsZSAoaW5kZXggPiAwKSB7CisJCQkJ
c3ViYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgY29tcG9uZW50VHlwZShzdWJhcnJheVR5cGUpOwor
CQkJCWludCBlbmQgPSByZXRyaWV2ZVByb3BlclJpZ2h0QnJhY2tldFBvc2l0aW9uKGluZGV4LCBz
b3VyY2VTdGFydCk7CisJCQkJc3ViYXJyYXlUeXBlLnNldFNvdXJjZVJhbmdlKHNvdXJjZVN0YXJ0
LCBlbmQgLSBzb3VyY2VTdGFydCArIDEpOworCQkJCWluZGV4LS07CisJCQl9CisJCQlpZiAobGVu
Z3RoIDw9IDApIGFycmF5VHlwZS5zZXRTb3VyY2VSYW5nZShzb3VyY2VTdGFydCwgYXJyYXlFbmQg
LSBzb3VyY2VTdGFydCArIDEpOworCQkJcmV0dXJuIGFycmF5VHlwZTsKKwkJfQorCisJCXNldEFy
cmF5VHlwZUFubm90YXRpb25zQW5kU291cmNlKGFycmF5VHlwZSwgYW5ub3RhdGlvbnNPbkRpbXMp
OworCQlyZXR1cm4gYXJyYXlUeXBlOworCX0KKwogCXByaXZhdGUgRW51bURlY2xhcmF0aW9uIGNv
bnZlcnRUb0VudW1EZWNsYXJhdGlvbihvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
YXN0LlR5cGVEZWNsYXJhdGlvbiB0eXBlRGVjbGFyYXRpb24pIHsKIAkJY2hlY2tDYW5jZWxlZCgp
OwogCQkvLyBlbnVtIGRlY2xhcmF0aW9uIGNhbm5vdCBiZSBidWlsdCBpZiB0aGUgc291cmNlIGlz
IG5vdCA+PSAxLjUsIHNpbmNlIGVudW0gaXMgdGhlbiBzZWVuIGFzIGFuIGlkZW50aWZpZXIKQEAg
LTMzNTEsNiArMzM4NiwzNyBAQAogCQl9CiAJfQogCisJcHJpdmF0ZSB2b2lkIHNldEFycmF5VHlw
ZUFubm90YXRpb25zKEV4dHJhRGltZW5zaW9uIGN1cnJlbnREaW1lbnNpb24sCisJCQlvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFubm90YXRpb25bXVtdIGFubm90YXRpb25z
T25EaW1zLCBpbnQgaW5kZXgpIHsKKwkJaWYgKGFubm90YXRpb25zT25EaW1zID09IG51bGwpIHJl
dHVybjsKKwkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9u
W10gYW5ub3RhdGlvbiA9IGFubm90YXRpb25zT25EaW1zW2luZGV4XTsKKwkJaWYgKGFubm90YXRp
b24gIT0gbnVsbCkgeworCQkJZm9yIChpbnQgaiA9IDA7IGogPCBhbm5vdGF0aW9uLmxlbmd0aDsg
aisrKSB7CisJCQkJQW5ub3RhdGlvbiBhbm5vdCA9IGNvbnZlcnQoYW5ub3RhdGlvbltqXSk7CisJ
CQkJY3VycmVudERpbWVuc2lvbi5hbm5vdGF0aW9ucygpLmFkZChhbm5vdCk7CisJCQl9CisJCX0K
Kwl9CisJCisJcHJpdmF0ZSB2b2lkIHNldEFycmF5VHlwZUFubm90YXRpb25zQW5kU291cmNlKEFy
cmF5VHlwZSBhcnJheVR5cGUsCisJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIu
YXN0LkFubm90YXRpb25bXVtdIGFubm90YXRpb25zT25EaW1zKSB7CisJCUxpc3QgZGltZW5zaW9u
cyA9IGFycmF5VHlwZS5kaW1lbnNpb25zKCk7CisJCVR5cGUgZWxlbVR5cGUgPSBhcnJheVR5cGUu
Z2V0RWxlbWVudFR5cGUoKTsKKwkJaW50IHN0YXJ0ID0gZWxlbVR5cGUuZ2V0U3RhcnRQb3NpdGlv
bigpOworCQlpbnQgZW5kRWxlbWVudCA9IHN0YXJ0ICsgZWxlbVR5cGUuZ2V0TGVuZ3RoKCk7CisJ
CWludCBsZW5ndGggPSBhcnJheVR5cGUuZ2V0TGVuZ3RoKCk7CisJCWludCBlbmQgPSAobGVuZ3Ro
IDw9IDApID8gcmV0cmlldmVQcm9wZXJSaWdodEJyYWNrZXRQb3NpdGlvbihkaW1lbnNpb25zLnNp
emUoKSwgZW5kRWxlbWVudCkgOiBzdGFydCArIGxlbmd0aCAtIDE7CisJCWFycmF5VHlwZS5zZXRT
b3VyY2VSYW5nZShzdGFydCwgZW5kIC0gc3RhcnQgKyAxKTsKKwkJCisJCXN0YXJ0ID0gZW5kRWxl
bWVudDsKKwkJZm9yIChpbnQgaSA9IDA7IGkgPCBkaW1lbnNpb25zLnNpemUoKTsgaSsrKSB7CisJ
CQlFeHRyYURpbWVuc2lvbiBjdXJyZW50RGltZW5zaW9uID0gKEV4dHJhRGltZW5zaW9uKSBkaW1l
bnNpb25zLmdldChpKTsKKwkJCXNldEFycmF5VHlwZUFubm90YXRpb25zKGN1cnJlbnREaW1lbnNp
b24sIGFubm90YXRpb25zT25EaW1zLCBpKTsKKwkJCXJldHJpZXZlRGltZW5zaW9uQW5kU2V0UG9z
aXRpb25zKHN0YXJ0LCBlbmQsIGN1cnJlbnREaW1lbnNpb24pOworCQkJc3RhcnQgPSBjdXJyZW50
RGltZW5zaW9uLmdldFN0YXJ0UG9zaXRpb24oKSArIGN1cnJlbnREaW1lbnNpb24uZ2V0TGVuZ3Ro
KCk7CisJCX0KKwl9CisKIAlwcm90ZWN0ZWQgVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCBj
b252ZXJ0VG9WYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KG9yZy5lY2xpcHNlLmpkdC5pbnRl
cm5hbC5jb21waWxlci5hc3QuTG9jYWxEZWNsYXJhdGlvbiBsb2NhbERlY2xhcmF0aW9uKSB7CiAJ
CWZpbmFsIFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCB2YXJpYWJsZURlY2xhcmF0aW9uRnJh
Z21lbnQgPSBjb252ZXJ0VG9WYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQobG9jYWxEZWNsYXJh
dGlvbik7CiAJCWZpbmFsIFZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQgdmFyaWFibGVEZWNs
YXJhdGlvblN0YXRlbWVudCA9IG5ldyBWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KHRoaXMu
YXN0KTsKQEAgLTMzNzUsNiArMzQ0MSw5IEBACiAJCQkJdHlwZS5zZXRGbGFncyh0eXBlLmdldEZs
YWdzKCkgfCBBU1ROb2RlLk1BTEZPUk1FRCk7CiAJCQkJYnJlYWs7CiAJCQlkZWZhdWx0OgorCQkJ
CWlmIChhbm5vdGF0aW9ucyA9PSBudWxsKSBicmVhazsKKwkJCQlpbnQgc3RhcnQgPSB0eXBlLmdl
dFN0YXJ0UG9zaXRpb24oKTsKKwkJCQlpbnQgbGVuZ3RoID0gdHlwZS5nZXRMZW5ndGgoKTsKIAkJ
CQlpbnQgYW5ub3RhdGlvbnNMZW5ndGggPSBhbm5vdGF0aW9ucy5sZW5ndGg7CiAJCQkJZm9yIChp
bnQgaSA9IDA7IGkgPCBhbm5vdGF0aW9uc0xlbmd0aDsgaSsrKSB7CiAJCQkJCW9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQW5ub3RhdGlvbiB0eXBlQW5ub3RhdGlvbiA9IGFu
bm90YXRpb25zW2ldOwpAQCAtMzM4MywyMCArMzQ1MiwxNCBAQAogCQkJCQkJdHlwZS5hbm5vdGF0
aW9ucygpLmFkZChhbm5vdGF0aW9uKTsKIAkJCQkJfQogCQkJCX0KKwkJCQlpbnQgYW5ub3RhdGlv
bnNTdGFydDsKKwkJCQlpZiAoYW5ub3RhdGlvbnNbMF0gIT0gbnVsbCAmJiAoYW5ub3RhdGlvbnNT
dGFydCA9IGFubm90YXRpb25zWzBdLnNvdXJjZVN0YXJ0KSA8IHN0YXJ0ICYmIGFubm90YXRpb25z
U3RhcnQgPiAwKSB7CisJCQkJCWxlbmd0aCArPSAgc3RhcnQgLSBhbm5vdGF0aW9uc1N0YXJ0Owor
CQkJCQlzdGFydCA9IGFubm90YXRpb25zU3RhcnQ7CisJCQkJfQorCQkJCXR5cGUuc2V0U291cmNl
UmFuZ2Uoc3RhcnQsIGxlbmd0aCk7CiAJCX0KIAl9Ci0JcHJpdmF0ZSB2b2lkIGFubm90YXRlVHlw
ZShUeXBlIHR5cGUsIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQW5ub3Rh
dGlvbltdW10gYW5ub3RhdGlvbnMpIHsKLQkJaW50IGxldmVsID0gYW5ub3RhdGlvbnMubGVuZ3Ro
IC0gMTsKLQkJd2hpbGUodHlwZS5pc0FycmF5VHlwZSgpKSB7Ci0JCQlBcnJheVR5cGUgYXJyYXlU
eXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5hc3QuQW5ub3RhdGlvbltdIHR5cGVBbm5vdGF0aW9ucyA9IGFubm90YXRpb25zW2xldmVs
LS1dOwotCQkJaWYgKHR5cGVBbm5vdGF0aW9ucyAhPSBudWxsKSB7Ci0JCQkJYW5ub3RhdGVUeXBl
KGFycmF5VHlwZSwgdHlwZUFubm90YXRpb25zKTsKLQkJCX0KLQkJCXR5cGUgPSBhcnJheVR5cGUu
Z2V0Q29tcG9uZW50VHlwZSgpOwotCQl9Ci0JfQotCiAJcHJpdmF0ZSB2b2lkIGFubm90YXRlVHlw
ZVBhcmFtZXRlcihUeXBlUGFyYW1ldGVyIHR5cGVQYXJhbWV0ZXIsIG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb21waWxlci5hc3QuQW5ub3RhdGlvbltdIGFubm90YXRpb25zKSB7CiAJCXN3aXRj
aCh0aGlzLmFzdC5hcGlMZXZlbCkgewogCQkJY2FzZSBBU1QuSkxTMl9JTlRFUk5BTCA6CkBAIC0z
NTQ0LDIzICszNjA3LDcgQEAKIAkJCQl9CiAJCQl9CiAJCQlpZiAoZGltZW5zaW9ucyAhPSAwKSB7
Ci0JCQkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uW11b
XSBhbm5vdGF0aW9uc09uRGltZW5zaW9ucyA9IHR5cGVSZWZlcmVuY2UuZ2V0QW5ub3RhdGlvbnNP
bkRpbWVuc2lvbnMoKTsKLQkJCQl0eXBlID0gdGhpcy5hc3QubmV3QXJyYXlUeXBlKHR5cGUsIGRp
bWVuc2lvbnMpOwotCQkJCXR5cGUuc2V0U291cmNlUmFuZ2Uoc291cmNlU3RhcnQsIGxlbmd0aCk7
Ci0JCQkJQXJyYXlUeXBlIHN1YmFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7Ci0JCQkJaW50
IGluZGV4ID0gZGltZW5zaW9ucyAtIDE7Ci0JCQkJd2hpbGUgKGluZGV4ID4gMCkgewotCQkJCQlp
ZiAoYW5ub3RhdGlvbnNPbkRpbWVuc2lvbnMgIT0gbnVsbCAmJiAoYW5ub3RhdGlvbnMgPSBhbm5v
dGF0aW9uc09uRGltZW5zaW9uc1tpbmRleF0pICE9IG51bGwpIHsKLQkJCQkJCWFubm90YXRlVHlw
ZShzdWJhcnJheVR5cGUsIGFubm90YXRpb25zKTsKLQkJCQkJfQotCQkJCQlzdWJhcnJheVR5cGUg
PSAoQXJyYXlUeXBlKSBzdWJhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQkJCQlpbnQg
ZW5kID0gcmV0cmlldmVQcm9wZXJSaWdodEJyYWNrZXRQb3NpdGlvbihpbmRleCwgc291cmNlU3Rh
cnQpOwotCQkJCQlzdWJhcnJheVR5cGUuc2V0U291cmNlUmFuZ2Uoc291cmNlU3RhcnQsIGVuZCAt
IHNvdXJjZVN0YXJ0ICsgMSk7Ci0JCQkJCWluZGV4LS07Ci0JCQkJfQotCQkJCWlmIChhbm5vdGF0
aW9uc09uRGltZW5zaW9ucyAhPSBudWxsICYmIChhbm5vdGF0aW9ucyA9IGFubm90YXRpb25zT25E
aW1lbnNpb25zWzBdKSAhPSBudWxsKSB7Ci0JCQkJCWFubm90YXRlVHlwZShzdWJhcnJheVR5cGUs
IGFubm90YXRpb25zKTsKLQkJCQl9CisJCQkJdHlwZSA9IGNvbnZlcnRUb0FycmF5KHR5cGUsIHNv
dXJjZVN0YXJ0LCBsZW5ndGgsIGRpbWVuc2lvbnMsIHR5cGVSZWZlcmVuY2UuZ2V0QW5ub3RhdGlv
bnNPbkRpbWVuc2lvbnMoKSk7CiAJCQkJaWYgKHRoaXMucmVzb2x2ZUJpbmRpbmdzKSB7CiAJCQkJ
CS8vIHN0b3JlIGtleXMgZm9yIGlubmVyIHR5cGVzCiAJCQkJCWNvbXBsZXRlUmVjb3JkKChBcnJh
eVR5cGUpIHR5cGUsIHR5cGVSZWZlcmVuY2UpOwpAQCAtMzgxMiwzMCArMzg1OSw5IEBACiAKIAkJ
CWxlbmd0aCA9IHR5cGVSZWZlcmVuY2Uuc291cmNlRW5kIC0gc291cmNlU3RhcnQgKyAxOwogCQkJ
aWYgKGRpbWVuc2lvbnMgIT0gMCkgewotCQkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21w
aWxlci5hc3QuQW5ub3RhdGlvbltdW10gYW5ub3RhdGlvbnNPbkRpbWVuc2lvbnMgPSB0eXBlUmVm
ZXJlbmNlLmdldEFubm90YXRpb25zT25EaW1lbnNpb25zKCk7Ci0JCQkJdHlwZSA9IHRoaXMuYXN0
Lm5ld0FycmF5VHlwZSh0eXBlLCBkaW1lbnNpb25zKTsKKwkJCQl0eXBlID0gY29udmVydFRvQXJy
YXkodHlwZSwgc291cmNlU3RhcnQsIC0xLCBkaW1lbnNpb25zLCB0eXBlUmVmZXJlbmNlLmdldEFu
bm90YXRpb25zT25EaW1lbnNpb25zKCkpOwogCQkJCWlmICh0aGlzLnJlc29sdmVCaW5kaW5ncykg
ewogCQkJCQljb21wbGV0ZVJlY29yZCgoQXJyYXlUeXBlKSB0eXBlLCB0eXBlUmVmZXJlbmNlKTsK
LQkJCQl9Ci0JCQkJaW50IGVuZCA9IHJldHJpZXZlRW5kT2ZEaW1lbnNpb25zUG9zaXRpb24oc291
cmNlU3RhcnQrbGVuZ3RoLCB0aGlzLmNvbXBpbGF0aW9uVW5pdFNvdXJjZUxlbmd0aCk7Ci0JCQkJ
aWYgKGVuZCAhPSAtMSkgewotCQkJCQl0eXBlLnNldFNvdXJjZVJhbmdlKHNvdXJjZVN0YXJ0LCBl
bmQgLSBzb3VyY2VTdGFydCArIDEpOwotCQkJCX0gZWxzZSB7Ci0JCQkJCXR5cGUuc2V0U291cmNl
UmFuZ2Uoc291cmNlU3RhcnQsIGxlbmd0aCk7Ci0JCQkJfQotCQkJCUFycmF5VHlwZSBzdWJhcnJh
eVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQkJCWludCBpbmRleCA9IGRpbWVuc2lvbnMgLSAx
OwotCQkJCXdoaWxlIChpbmRleCA+IDApIHsKLQkJCQkJaWYgKGFubm90YXRpb25zT25EaW1lbnNp
b25zICE9IG51bGwgICYmIChhbm5vdGF0aW9ucyA9IGFubm90YXRpb25zT25EaW1lbnNpb25zW2lu
ZGV4XSkgIT0gbnVsbCkgewotCQkJCQkJYW5ub3RhdGVUeXBlKHN1YmFycmF5VHlwZSwgYW5ub3Rh
dGlvbnMpOwotCQkJCQl9Ci0JCQkJCXN1YmFycmF5VHlwZSA9IChBcnJheVR5cGUpIHN1YmFycmF5
VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCQkJCWVuZCA9IHJldHJpZXZlUHJvcGVyUmlnaHRC
cmFja2V0UG9zaXRpb24oaW5kZXgsIHNvdXJjZVN0YXJ0KTsKLQkJCQkJc3ViYXJyYXlUeXBlLnNl
dFNvdXJjZVJhbmdlKHNvdXJjZVN0YXJ0LCBlbmQgLSBzb3VyY2VTdGFydCArIDEpOwotCQkJCQlp
bmRleC0tOwotCQkJCX0KLQkJCQlpZiAoYW5ub3RhdGlvbnNPbkRpbWVuc2lvbnMgIT0gbnVsbCAg
JiYgKGFubm90YXRpb25zID0gYW5ub3RhdGlvbnNPbkRpbWVuc2lvbnNbMF0pICE9IG51bGwpIHsK
LQkJCQkJYW5ub3RhdGVUeXBlKHN1YmFycmF5VHlwZSwgYW5ub3RhdGlvbnMpOwogCQkJCX0KIAkJ
CX0KIAkJfQpAQCAtMzg5NiwxNiArMzkyMiwxMSBAQAogCXByaXZhdGUgdm9pZCBzZXRTb3VyY2VS
YW5nZUFubm90YXRpb25zQW5kUmVjb3JkTm9kZXMoVHlwZVJlZmVyZW5jZSB0eXBlUmVmZXJlbmNl
LCBBbm5vdGF0YWJsZVR5cGUgYW5ub3RhdGFibGVUeXBlLAogCQkJb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uW11bXSB0eXBlQW5ub3RhdGlvbnMsIGludCBp
bmRleCwgaW50IHN0YXJ0LCBpbnQgZW5kKSB7CiAJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b21waWxlci5hc3QuQW5ub3RhdGlvbltdIGFubm90YXRpb25zOwotCQlpbnQgYW5ub3RhdGlvbnNT
dGFydCA9IHN0YXJ0OwogCQlpbnQgbGVuZ3RoID0gZW5kIC0gc3RhcnQgKyAxOworCQlhbm5vdGF0
YWJsZVR5cGUuc2V0U291cmNlUmFuZ2Uoc3RhcnQsIGxlbmd0aCk7CiAJCWlmICh0eXBlQW5ub3Rh
dGlvbnMgIT0gbnVsbCAmJiAoYW5ub3RhdGlvbnMgPSB0eXBlQW5ub3RhdGlvbnNbaW5kZXhdKSAh
PSBudWxsKSB7CiAJCQlhbm5vdGF0ZVR5cGUoYW5ub3RhdGFibGVUeXBlLCBhbm5vdGF0aW9ucyk7
Ci0JCQlpZiAoYW5ub3RhdGlvbnNbMF0gIT0gbnVsbCAmJiAoYW5ub3RhdGlvbnNTdGFydCA9IGFu
bm90YXRpb25zWzBdLnNvdXJjZVN0YXJ0KSA8IHN0YXJ0KSB7Ci0JCQkJbGVuZ3RoICs9IGFubm90
YXRpb25zU3RhcnQgPiAwID8gc3RhcnQgLSBhbm5vdGF0aW9uc1N0YXJ0IDogMDsKLQkJCQlzdGFy
dCA9IGFubm90YXRpb25zU3RhcnQ7Ci0JCQl9CiAJCX0KLQkJYW5ub3RhdGFibGVUeXBlLnNldFNv
dXJjZVJhbmdlKHN0YXJ0LCBsZW5ndGgpOwogCQlpZiAodGhpcy5yZXNvbHZlQmluZGluZ3MpIHsK
IAkJCXJlY29yZE5vZGVzKGFubm90YXRhYmxlVHlwZSwgdHlwZVJlZmVyZW5jZSk7CiAJCX0KQEAg
LTQ2MDMsMzggKzQ2MjQsNiBAQAogCX0KIAogCS8qKgotCSAqIFRoaXMgbWV0aG9kIGlzIHVzZWQg
dG8gcmV0cmlldmUgdGhlIGVuZGluZyBwb3NpdGlvbiBmb3IgYSB0eXBlIGRlY2xhcmF0aW9uIHdo
ZW4gdGhlIGRpbWVuc2lvbiBpcyByaWdodCBhZnRlciB0aGUgdHlwZQotCSAqIG5hbWUuCi0JICog
Rm9yIGV4YW1wbGU6Ci0JICogICAgaW50W10gaTsgPT4gcmV0dXJuIDUsIGJ1dCBpbnQgaVtdID0+
IHJldHVybiAtMTsKLQkgKiBAcmV0dXJuIGludCB0aGUgZGltZW5zaW9uIGZvdW5kCi0JICovCi0J
cHJvdGVjdGVkIGludCByZXRyaWV2ZUVuZE9mRGltZW5zaW9uc1Bvc2l0aW9uKGludCBzdGFydCwg
aW50IGVuZCkgewotCQl0aGlzLnNjYW5uZXIucmVzZXRUbyhzdGFydCwgZW5kKTsKLQkJaW50IGZv
dW5kUG9zaXRpb24gPSAtMTsKLQkJdHJ5IHsKLQkJCWludCB0b2tlbjsKLQkJCXdoaWxlICgodG9r
ZW4gPSB0aGlzLnNjYW5uZXIuZ2V0TmV4dFRva2VuKCkpICE9IFRlcm1pbmFsVG9rZW5zLlRva2Vu
TmFtZUVPRikgewotCQkJCXN3aXRjaCh0b2tlbikgewotCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5z
LlRva2VuTmFtZUxCUkFDS0VUOgotCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUNP
TU1FTlRfQkxPQ0s6Ci0JCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lQ09NTUVOVF9K
QVZBRE9DOgotCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUNPTU1FTlRfTElORToK
LQkJCQkJCWJyZWFrOwotCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZVJCUkFDS0VU
Oi8vMTY2Ci0JCQkJCQlmb3VuZFBvc2l0aW9uID0gdGhpcy5zY2FubmVyLmN1cnJlbnRQb3NpdGlv
biAtIDE7Ci0JCQkJCQlicmVhazsKLQkJCQkJZGVmYXVsdDoKLQkJCQkJCXJldHVybiBmb3VuZFBv
c2l0aW9uOwotCQkJCX0KLQkJCX0KLQkJfSBjYXRjaChJbnZhbGlkSW5wdXRFeGNlcHRpb24gZSkg
ewotCQkJLy8gaWdub3JlCi0JCX0KLQkJcmV0dXJuIGZvdW5kUG9zaXRpb247Ci0JfQotCi0JLyoq
CiAJICogVGhpcyBtZXRob2QgaXMgdXNlZCB0byByZXRyaWV2ZSB0aGUgc3RhcnQgYW5kIGVuZCBw
b3NpdGlvbiBvZiBhIG5hbWUgb3IgcHJpbWl0aXZlIHR5cGUgdG9rZW4uCiAJICogCiAJICogQHJl
dHVybiBpbnRbXSBhIHNpbmdsZSBkaW1lbnNpb25hbCBhcnJheSwgd2l0aCB0d28gZWxlbWVudHMs
IGZvciB0aGUgc3RhcnQgYW5kIGVuZCBwb3NpdGlvbnMgb2YgdGhlIG5hbWUgcmVzcGVjdGl2ZWx5
CkBAIC00NjQ0LDggKzQ2MzMsMTUgQEAKIAkJYm9vbGVhbiBpc0Fubm90YXRpb24gPSBmYWxzZTsK
IAkJdHJ5IHsKIAkJCWludCB0b2tlbjsKKwkJCWludCBjb3VudCA9IDA7CiAJCQl3aGlsZSAoKHRv
a2VuID0gdGhpcy5zY2FubmVyLmdldE5leHRUb2tlbigpKSAhPSBUZXJtaW5hbFRva2Vucy5Ub2tl
bk5hbWVFT0YpIHsKIAkJCQlzd2l0Y2godG9rZW4pIHsKKwkJCQkJY2FzZSBUZXJtaW5hbFRva2Vu
cy5Ub2tlbk5hbWVMUEFSRU46CisJCQkJCQkrK2NvdW50OworCQkJCQkJYnJlYWs7CisJCQkJCWNh
c2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lUlBBUkVOOgorCQkJCQkJLS1jb3VudDsKKwkJCQkJ
CWJyZWFrOwogCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUFUOgogCQkJCQkJaXNB
bm5vdGF0aW9uID0gdHJ1ZTsKIAkJCQkJCWJyZWFrOwpAQCAtNDY2Myw2ICs0NjU5LDcgQEAKIAkJ
CQkJY2FzZSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVsb25nOgogCQkJCQljYXNlIFRlcm1pbmFs
VG9rZW5zLlRva2VuTmFtZXNob3J0OgogCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFt
ZWJvb2xlYW46CisJCQkJCQlpZiAoY291bnQgPiAwKSBicmVhazsKIAkJCQkJCXJldHVybiBuZXcg
aW50W117dGhpcy5zY2FubmVyLnN0YXJ0UG9zaXRpb24sIHRoaXMuc2Nhbm5lci5jdXJyZW50UG9z
aXRpb24gLSAxfTsKIAkJCQl9CiAJCQl9CkBAIC00NzEyLDkgKzQ3MDksMTcgQEAKIAkJdGhpcy5z
Y2FubmVyLnJlc2V0VG8oc3RhcnQsIGVuZCk7CiAJCWludCBkaW1lbnNpb25zID0gMDsKIAkJdHJ5
IHsKLQkJCWludCB0b2tlbjsKLQkJCWJvb2xlYW4gaXNBbm5vdGF0aW9uID0gZmFsc2U7CisJCQlp
bnQgdG9rZW4sIGxQYXJlbkNvdW50ID0gMDsKKwkJCWJvb2xlYW4gaXNBbm5vdGF0aW9uID0gZmFs
c2UsIGZvdW5kQW5ub3RhdGlvbiA9IGZhbHNlOwogCQkJd2hpbGUgKCh0b2tlbiA9IHRoaXMuc2Nh
bm5lci5nZXROZXh0VG9rZW4oKSkgIT0gVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lRU9GKSB7CisJ
CQkJaWYgKGZvdW5kQW5ub3RhdGlvbikgeworCQkJCQlpZiAodG9rZW4gPT0gVGVybWluYWxUb2tl
bnMuVG9rZW5OYW1lTFBBUkVOKSArK2xQYXJlbkNvdW50OworCQkJCQllbHNlIGlmICh0b2tlbiA9
PSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVSUEFSRU4pIHsKKwkJCQkJCS0tbFBhcmVuQ291bnQ7
CisJCQkJCQljb250aW51ZTsKKwkJCQkJfQorCQkJCQlpZiAobFBhcmVuQ291bnQgPiAwKSBjb250
aW51ZTsKKwkJCQl9CiAJCQkJc3dpdGNoKHRva2VuKSB7CiAJCQkJCWNhc2UgVGVybWluYWxUb2tl
bnMuVG9rZW5OYW1lTEJSQUNLRVQ6CiAJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1l
Q09NTUVOVF9CTE9DSzoKQEAgLTQ3MjQsNiArNDcyOSw3IEBACiAJCQkJCQlicmVhazsKIAkJCQkJ
Y2FzZSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVBVDoKIAkJCQkJCWlzQW5ub3RhdGlvbiA9IHRy
dWU7CisJCQkJCQlmb3VuZEFubm90YXRpb24gPSB0cnVlOyAvKiBjaGVjayBmb3IgcGFyYW1zICov
CiAJCQkJCQlicmVhazsKIAkJCQkJY2FzZSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVJZGVudGlm
aWVyOgogCQkJCQkJaWYgKCFpc0Fubm90YXRpb24pIHsKQEAgLTQ3NDgsMjIgKzQ3NTQsMzYgQEAK
IAlwcm90ZWN0ZWQgdm9pZCByZXRyaWV2ZURpbWVuc2lvbkFuZFNldFBvc2l0aW9ucyhpbnQgc3Rh
cnQsIGludCBlbmQsIEV4dHJhRGltZW5zaW9uIGRpbSkgewogCQl0aGlzLnNjYW5uZXIucmVzZXRU
byhzdGFydCwgZW5kKTsKIAkJaW50IHRva2VuOworCQlpbnQgY291bnQgPSAwLCBsUGFyZW5Db3Vu
dCA9IDA7CiAJCWJvb2xlYW4gc3RhcnRTZXQgPSBmYWxzZTsKIAkJdHJ5IHsKIAkJCXdoaWxlKCh0
b2tlbiA9IHRoaXMuc2Nhbm5lci5nZXROZXh0VG9rZW4oKSkgIT0gVGVybWluYWxUb2tlbnMuVG9r
ZW5OYW1lRU9GKSAgewotCQkJCXN3aXRjaCh0b2tlbikgewotCQkJCQljYXNlIFRlcm1pbmFsVG9r
ZW5zLlRva2VuTmFtZVdISVRFU1BBQ0U6Ci0JCQkJCQlicmVhazsKLQkJCQkJY2FzZSBUZXJtaW5h
bFRva2Vucy5Ub2tlbk5hbWVSQlJBQ0tFVDoKLQkJCQkJCWludCBlbmREaW0gPSB0aGlzLnNjYW5u
ZXIuY3VycmVudFBvc2l0aW9uIC0gMTsKLQkJCQkJCWRpbS5zZXRTb3VyY2VSYW5nZShzdGFydCwg
ZW5kRGltIC0gc3RhcnQgKyAxKTsKLQkJCQkJCXJldHVybjsKLQkJCQkJZGVmYXVsdDoKLQkJCQkJ
CWlmICghc3RhcnRTZXQpIHsKLQkJCQkJCQlzdGFydCA9IHRoaXMuc2Nhbm5lci5zdGFydFBvc2l0
aW9uOwotCQkJCQkJCXN0YXJ0U2V0ID0gdHJ1ZTsKLQkJCQkJCX0KLQkJCQkJCWJyZWFrOworCQkJ
CWlmICh0b2tlbiAhPSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVXSElURVNQQUNFKSB7CisJCQkJ
CWlmICghc3RhcnRTZXQpIHsKKwkJCQkJCXN0YXJ0ID0gdGhpcy5zY2FubmVyLnN0YXJ0UG9zaXRp
b247CisJCQkJCQlzdGFydFNldCA9IHRydWU7CisJCQkJCX0KKwkJCQkJc3dpdGNoKHRva2VuKSB7
CisJCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZVJCUkFDS0VUOgorCQkJCQkJCWlm
IChsUGFyZW5Db3VudCA+IDApIGJyZWFrOworCQkJCQkJCS0tY291bnQ7CisJCQkJCQkJaWYgKGNv
dW50ID4gMCkgYnJlYWs7CisJCQkJCQkJaW50IGVuZERpbSA9IHRoaXMuc2Nhbm5lci5jdXJyZW50
UG9zaXRpb24gLSAxOworCQkJCQkJCWRpbS5zZXRTb3VyY2VSYW5nZShzdGFydCwgZW5kRGltIC0g
c3RhcnQgKyAxKTsKKwkJCQkJCQlyZXR1cm47CisJCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRv
a2VuTmFtZUxCUkFDS0VUOgorCQkJCQkJCWlmIChsUGFyZW5Db3VudCA+IDApIGJyZWFrOworCQkJ
CQkJCWNvdW50Kys7CisJCQkJCQkJYnJlYWs7CisJCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRv
a2VuTmFtZUxQQVJFTjoKKwkJCQkJCQlsUGFyZW5Db3VudCsrOworCQkJCQkJCWJyZWFrOworCQkJ
CQkJY2FzZSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVSUEFSRU46CisJCQkJCQkJLS1sUGFyZW5D
b3VudDsKKwkJCQkJCQlicmVhazsKKwkJCQkJCWRlZmF1bHQ6CisJCQkJCQkJYnJlYWs7CisJCQkJ
CX0KIAkJCQl9CiAJCQl9CiAJCX0gY2F0Y2goSW52YWxpZElucHV0RXhjZXB0aW9uIGUpIHsKQEAg
LTQ4NDEsMTAgKzQ4NjEsMTkgQEAKIAkJaW50IGJhbGFuY2UgPSAwOwogCQlpbnQgcG9zID0gaW5p
dGlhbGl6ZXJFbmQgPiBuYW1lRW5kID8gaW5pdGlhbGl6ZXJFbmQgLSAxIDogbmFtZUVuZDsKIAkJ
dHJ5IHsKLQkJCWludCB0b2tlbjsKKwkJCWludCB0b2tlbiwgbFBhcmVuQ291bnQgPSAwOworCQkJ
Ym9vbGVhbiBoYXNBbm5vdGF0aW9ucyA9IGZhbHNlOwogCQkJd2hpbGUgKCh0b2tlbiA9IHRoaXMu
c2Nhbm5lci5nZXROZXh0VG9rZW4oKSkgIT0gVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lRU9GKSB7
CiAJCQkJaGFzVG9rZW5zID0gdHJ1ZTsKKwkJCQlpZiAoaGFzQW5ub3RhdGlvbnMpIHsKKwkJCQkJ
aWYgKHRva2VuID09IFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUxQQVJFTikgKytsUGFyZW5Db3Vu
dDsKKwkJCQkJZWxzZSBpZiAodG9rZW4gPT0gVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lUlBBUkVO
KSB7LS1sUGFyZW5Db3VudDsgY29udGludWU7fQorCQkJCQlpZiAobFBhcmVuQ291bnQgPiAwKSBj
b250aW51ZTsKKwkJCQl9CiAJCQkJc3dpdGNoKHRva2VuKSB7CisJCQkJCWNhc2UgVGVybWluYWxU
b2tlbnMuVG9rZW5OYW1lQVQ6CisJCQkJCQloYXNBbm5vdGF0aW9ucyA9IHRydWU7CisJCQkJCQli
cmVhazsKIAkJCQkJY2FzZSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVMQlJBQ0UgOgogCQkJCQlj
YXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUxCUkFDS0VUIDoKIAkJCQkJCWJhbGFuY2UrKzsK
QEAgLTQ4NzQsMTAgKzQ5MDMsMjIgQEAKIAlwcm90ZWN0ZWQgaW50IHJldHJpZXZlUHJvcGVyUmln
aHRCcmFja2V0UG9zaXRpb24oaW50IGJyYWNrZXROdW1iZXIsIGludCBzdGFydCkgewogCQl0aGlz
LnNjYW5uZXIucmVzZXRUbyhzdGFydCwgdGhpcy5jb21waWxhdGlvblVuaXRTb3VyY2VMZW5ndGgp
OwogCQl0cnkgewotCQkJaW50IHRva2VuLCBjb3VudCA9IDA7CisJCQlpbnQgdG9rZW4sIGNvdW50
ID0gMCwgbFBhcmVudENvdW50ID0gMCwgYmFsYW5jZSA9IDA7CiAJCQl3aGlsZSAoKHRva2VuID0g
dGhpcy5zY2FubmVyLmdldE5leHRUb2tlbigpKSAhPSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVF
T0YpIHsKIAkJCQlzd2l0Y2godG9rZW4pIHsKKwkJCQkJY2FzZSBUZXJtaW5hbFRva2Vucy5Ub2tl
bk5hbWVMUEFSRU46CisJCQkJCQkrK2xQYXJlbnRDb3VudDsKKwkJCQkJCWJyZWFrOworCQkJCQlj
YXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZVJQQVJFTjoKKwkJCQkJCS0tbFBhcmVudENvdW50
OworCQkJCQkJYnJlYWs7CisJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lTEJSQUNL
RVQ6CisJCQkJCQkrK2JhbGFuY2U7CisJCQkJCQlicmVhazsKIAkJCQkJY2FzZSBUZXJtaW5hbFRv
a2Vucy5Ub2tlbk5hbWVSQlJBQ0tFVDoKKwkJCQkJCS0tYmFsYW5jZTsKKwkJCQkJCWlmIChsUGFy
ZW50Q291bnQgPiAwKSBicmVhazsKKwkJCQkJCWlmIChiYWxhbmNlID4gMCkgYnJlYWs7CiAJCQkJ
CQljb3VudCsrOwogCQkJCQkJaWYgKGNvdW50ID09IGJyYWNrZXROdW1iZXIpIHsKIAkJCQkJCQly
ZXR1cm4gdGhpcy5zY2FubmVyLmN1cnJlbnRQb3NpdGlvbiAtIDE7CkBAIC00OTI0LDMyICs0OTY1
LDYgQEAKIAkJCQlzd2l0Y2godG9rZW4pIHsKIAkJCQkJY2FzZSBUZXJtaW5hbFRva2Vucy5Ub2tl
bk5hbWVSQlJBQ0UgOgogCQkJCQkJcmV0dXJuIHRoaXMuc2Nhbm5lci5jdXJyZW50UG9zaXRpb24g
LSAxOwotCQkJCX0KLQkJCX0KLQkJfSBjYXRjaChJbnZhbGlkSW5wdXRFeGNlcHRpb24gZSkgewot
CQkJLy8gaWdub3JlCi0JCX0KLQkJcmV0dXJuIC0xOwotCX0KLQotCS8qKgotCSAqIFRoaXMgbWV0
aG9kIGlzIHVzZWQgdG8gcmV0cmlldmUgdGhlIHBvc2l0aW9uIG9mIHRoZSByaWdodCBicmFja2V0
LgotCSAqIEByZXR1cm4gaW50IHRoZSBkaW1lbnNpb24gZm91bmQsIC0xIGlmIG5vbmUKLQkgKi8K
LQlwcm90ZWN0ZWQgaW50IHJldHJpZXZlUmlnaHRCcmFja2V0UG9zaXRpb24oaW50IHN0YXJ0LCBp
bnQgZW5kKSB7Ci0JCXRoaXMuc2Nhbm5lci5yZXNldFRvKHN0YXJ0LCBlbmQpOwotCQl0cnkgewot
CQkJaW50IHRva2VuOwotCQkJaW50IGJhbGFuY2UgPSAwOwotCQkJd2hpbGUgKCh0b2tlbiA9IHRo
aXMuc2Nhbm5lci5nZXROZXh0VG9rZW4oKSkgIT0gVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lRU9G
KSB7Ci0JCQkJc3dpdGNoKHRva2VuKSB7Ci0JCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5O
YW1lTEJSQUNLRVQgOgotCQkJCQkJYmFsYW5jZSsrOwotCQkJCQkJYnJlYWs7Ci0JCQkJCWNhc2Ug
VGVybWluYWxUb2tlbnMuVG9rZW5OYW1lUkJSQUNLRVQgOgotCQkJCQkJYmFsYW5jZS0tOwotCQkJ
CQkJaWYgKGJhbGFuY2UgPT0gMCkgcmV0dXJuIHRoaXMuc2Nhbm5lci5jdXJyZW50UG9zaXRpb24g
LSAxOwotCQkJCQkJYnJlYWs7CiAJCQkJfQogCQkJfQogCQl9IGNhdGNoKEludmFsaWRJbnB1dEV4
Y2VwdGlvbiBlKSB7CkBAIC01NjQzLDMyICs1NjU4LDUwIEBACiAJCQkJCXRoaXMuYXN0LmdldEJp
bmRpbmdSZXNvbHZlcigpLnVwZGF0ZUtleSh0eXBlLCBlbGVtZW50VHlwZSk7CiAJCQkJCWZpZWxk
RGVjbGFyYXRpb24uc2V0VHlwZShlbGVtZW50VHlwZSk7CiAJCQkJfSBlbHNlIHsKLQkJCQkJaW50
IHN0YXJ0ID0gdHlwZS5nZXRTdGFydFBvc2l0aW9uKCk7Ci0JCQkJCUFycmF5VHlwZSBzdWJhcnJh
eVR5cGUgPSBhcnJheVR5cGU7Ci0JCQkJCWludCBpbmRleCA9IGV4dHJhRGltZW5zaW9uOwotCQkJ
CQl3aGlsZSAoaW5kZXggPiAwKSB7Ci0JCQkJCQlzdWJhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBz
dWJhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQkJCQkJaW5kZXgtLTsKLQkJCQkJfQot
CQkJCQlpbnQgZW5kID0gcmV0cmlldmVQcm9wZXJSaWdodEJyYWNrZXRQb3NpdGlvbihyZW1haW5p
bmdEaW1lbnNpb25zLCBzdGFydCk7Ci0JCQkJCXN1YmFycmF5VHlwZS5zZXRTb3VyY2VSYW5nZShz
dGFydCwgZW5kIC0gc3RhcnQgKyAxKTsKLQkJCQkJLy8gY3V0IHRoZSBjaGlsZCBsb29zZSBmcm9t
IGl0cyBwYXJlbnQgKHdpdGhvdXQgY3JlYXRpbmcgZ2FyYmFnZSkKLQkJCQkJc3ViYXJyYXlUeXBl
LnNldFBhcmVudChudWxsLCBudWxsKTsKKwkJCQkJQXJyYXlUeXBlIHN1YmFycmF5VHlwZSA9IGV4
dHJhY3RTdWJBcnJheVR5cGUoYXJyYXlUeXBlLCByZW1haW5pbmdEaW1lbnNpb25zLCBleHRyYURp
bWVuc2lvbik7CiAJCQkJCWZpZWxkRGVjbGFyYXRpb24uc2V0VHlwZShzdWJhcnJheVR5cGUpOwot
CQkJCQl1cGRhdGVJbm5lclBvc2l0aW9ucyhzdWJhcnJheVR5cGUsIHJlbWFpbmluZ0RpbWVuc2lv
bnMpOwogCQkJCQl0aGlzLmFzdC5nZXRCaW5kaW5nUmVzb2x2ZXIoKS51cGRhdGVLZXkodHlwZSwg
c3ViYXJyYXlUeXBlKTsKIAkJCQl9CiAJCQl9IGVsc2UgewogCQkJCWZpZWxkRGVjbGFyYXRpb24u
c2V0VHlwZSh0eXBlKTsKIAkJCX0KIAkJfSBlbHNlIHsKLQkJCWlmICh0eXBlLmlzQXJyYXlUeXBl
KCkpIHsKKwkJCWlmICh0eXBlLmlzQXJyYXlUeXBlKCkgJiYgKHRoaXMuYXN0LmFwaUxldmVsKCkg
PCBBU1QuSkxTOCkpIHsKIAkJCQkvLyB1cGRhdGUgcG9zaXRpb25zIG9mIHRoZSBjb21wb25lbnQg
dHlwZXMgb2YgdGhlIGFycmF5IHR5cGUKIAkJCQlpbnQgZGltZW5zaW9ucyA9ICgoQXJyYXlUeXBl
KSB0eXBlKS5nZXREaW1lbnNpb25zKCk7CiAJCQkJdXBkYXRlSW5uZXJQb3NpdGlvbnModHlwZSwg
ZGltZW5zaW9ucyk7CiAJCQl9CiAJCQlmaWVsZERlY2xhcmF0aW9uLnNldFR5cGUodHlwZSk7CiAJ
CX0KKwl9CisKKwkvKiogZXh0cmFjdHMgdGhlIHN1YkFycmF5VHlwZSBmb3IgYSBnaXZlbiBkZWNs
YXJhdGlvbiBmb3IgQVNUIGxldmVscyBsZXNzCisJICogQHBhcmFtIGFycmF5VHlwZSBwYXJlbnQg
dHlwZQorCSAqIEBwYXJhbSByZW1haW5pbmdEaW1lbnNpb25zIAorCSAqIEBwYXJhbSBleHRyYURp
bWVuc2lvbnMKKwkgKiBAcmV0dXJuIGFuIEFycmF5VHlwZQorCSAqLworCXByaXZhdGUgQXJyYXlU
eXBlIGV4dHJhY3RTdWJBcnJheVR5cGUoQXJyYXlUeXBlIGFycmF5VHlwZSwgaW50IHJlbWFpbmlu
Z0RpbWVuc2lvbnMsIGludCBleHRyYURpbWVuc2lvbnMpIHsKKwkJQXJyYXlUeXBlIHN1YkFycmF5
VHlwZSA9IGFycmF5VHlwZTsKKwkJaW50IHN0YXJ0ID0gc3ViQXJyYXlUeXBlLmdldFN0YXJ0UG9z
aXRpb24oKTsKKwkJaWYgKHRoaXMuYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgeworCQkJd2hp
bGUgKGV4dHJhRGltZW5zaW9ucyA+IDAgKSB7CisJCQkJc3ViQXJyYXlUeXBlID0gKEFycmF5VHlw
ZSkgY29tcG9uZW50VHlwZShzdWJBcnJheVR5cGUpOworCQkJCWV4dHJhRGltZW5zaW9ucy0tOwor
CQkJfQorCQkJdXBkYXRlSW5uZXJQb3NpdGlvbnMoc3ViQXJyYXlUeXBlLCByZW1haW5pbmdEaW1l
bnNpb25zKTsKKwkJfSBlbHNlIHsKKwkJCUxpc3QgZGltZW5zaW9ucyA9IHN1YkFycmF5VHlwZS5k
aW1lbnNpb25zKCk7CisJCQl3aGlsZSAoZXh0cmFEaW1lbnNpb25zID4gMCApIHsKKwkJCQlkaW1l
bnNpb25zLnJlbW92ZShkaW1lbnNpb25zLnNpemUoKSAtIDEpOworCQkJCWV4dHJhRGltZW5zaW9u
cy0tOworCQkJfQorCQl9CisJCWludCBlbmQgPSByZXRyaWV2ZVByb3BlclJpZ2h0QnJhY2tldFBv
c2l0aW9uKHJlbWFpbmluZ0RpbWVuc2lvbnMsIHN0YXJ0KTsKKwkJc3ViQXJyYXlUeXBlLnNldFNv
dXJjZVJhbmdlKHN0YXJ0LCBlbmQgLSBzdGFydCArIDEpOworCQkvLyBjdXQgdGhlIGNoaWxkIGxv
b3NlIGZyb20gaXRzIHBhcmVudCAod2l0aG91dCBjcmVhdGluZyBnYXJiYWdlKQorCQlzdWJBcnJh
eVR5cGUuc2V0UGFyZW50KG51bGwsIG51bGwpOworCQlyZXR1cm4gc3ViQXJyYXlUeXBlOwogCX0K
IAogCXByb3RlY3RlZCB2b2lkIHNldFR5cGVGb3JNZXRob2REZWNsYXJhdGlvbihNZXRob2REZWNs
YXJhdGlvbiBtZXRob2REZWNsYXJhdGlvbiwgVHlwZSB0eXBlLCBpbnQgZXh0cmFEaW1lbnNpb24p
IHsKQEAgLTU2OTEsMTggKzU3MjQsNyBAQAogCQkJCQkJYnJlYWs7CiAJCQkJCX0KIAkJCQl9IGVs
c2UgewotCQkJCQlpbnQgc3RhcnQgPSB0eXBlLmdldFN0YXJ0UG9zaXRpb24oKTsKLQkJCQkJQXJy
YXlUeXBlIHN1YmFycmF5VHlwZSA9IGFycmF5VHlwZTsKLQkJCQkJaW50IGluZGV4ID0gZXh0cmFE
aW1lbnNpb247Ci0JCQkJCXdoaWxlIChpbmRleCA+IDApIHsKLQkJCQkJCXN1YmFycmF5VHlwZSA9
IChBcnJheVR5cGUpIHN1YmFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCQkJCQlpbmRl
eC0tOwotCQkJCQl9Ci0JCQkJCWludCBlbmQgPSByZXRyaWV2ZVByb3BlclJpZ2h0QnJhY2tldFBv
c2l0aW9uKHJlbWFpbmluZ0RpbWVuc2lvbnMsIHN0YXJ0KTsKLQkJCQkJc3ViYXJyYXlUeXBlLnNl
dFNvdXJjZVJhbmdlKHN0YXJ0LCBlbmQgLSBzdGFydCArIDEpOwotCQkJCQkvLyBjdXQgdGhlIGNo
aWxkIGxvb3NlIGZyb20gaXRzIHBhcmVudCAod2l0aG91dCBjcmVhdGluZyBnYXJiYWdlKQotCQkJ
CQlzdWJhcnJheVR5cGUuc2V0UGFyZW50KG51bGwsIG51bGwpOwotCQkJCQl1cGRhdGVJbm5lclBv
c2l0aW9ucyhzdWJhcnJheVR5cGUsIHJlbWFpbmluZ0RpbWVuc2lvbnMpOworCQkJCQlBcnJheVR5
cGUgc3ViYXJyYXlUeXBlID0gZXh0cmFjdFN1YkFycmF5VHlwZShhcnJheVR5cGUsIHJlbWFpbmlu
Z0RpbWVuc2lvbnMsIGV4dHJhRGltZW5zaW9uKTsKIAkJCQkJc3dpdGNoKHRoaXMuYXN0LmFwaUxl
dmVsKSB7CiAJCQkJCQljYXNlIEFTVC5KTFMyX0lOVEVSTkFMIDoKIAkJCQkJCQltZXRob2REZWNs
YXJhdGlvbi5pbnRlcm5hbFNldFJldHVyblR5cGUoc3ViYXJyYXlUeXBlKTsKQEAgLTU3NTIsMjAg
KzU3NzQsOSBAQAogCQkJCQl0aGlzLmFzdC5nZXRCaW5kaW5nUmVzb2x2ZXIoKS51cGRhdGVLZXko
dHlwZSwgZWxlbWVudFR5cGUpOwogCQkJCQlzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLnNldFR5
cGUoZWxlbWVudFR5cGUpOwogCQkJCX0gZWxzZSB7Ci0JCQkJCWludCBzdGFydCA9IHR5cGUuZ2V0
U3RhcnRQb3NpdGlvbigpOwotCQkJCQlBcnJheVR5cGUgc3ViYXJyYXlUeXBlID0gYXJyYXlUeXBl
OwotCQkJCQlpbnQgaW5kZXggPSBleHRyYURpbWVuc2lvbjsKLQkJCQkJd2hpbGUgKGluZGV4ID4g
MCkgewotCQkJCQkJc3ViYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgc3ViYXJyYXlUeXBlLmdldENv
bXBvbmVudFR5cGUoKTsKLQkJCQkJCWluZGV4LS07Ci0JCQkJCX0KLQkJCQkJaW50IGVuZCA9IHJl
dHJpZXZlUHJvcGVyUmlnaHRCcmFja2V0UG9zaXRpb24ocmVtYWluaW5nRGltZW5zaW9ucywgc3Rh
cnQpOwotCQkJCQlzdWJhcnJheVR5cGUuc2V0U291cmNlUmFuZ2Uoc3RhcnQsIGVuZCAtIHN0YXJ0
ICsgMSk7Ci0JCQkJCS8vIGN1dCB0aGUgY2hpbGQgbG9vc2UgZnJvbSBpdHMgcGFyZW50ICh3aXRo
b3V0IGNyZWF0aW5nIGdhcmJhZ2UpCi0JCQkJCXN1YmFycmF5VHlwZS5zZXRQYXJlbnQobnVsbCwg
bnVsbCk7Ci0JCQkJCXVwZGF0ZUlubmVyUG9zaXRpb25zKHN1YmFycmF5VHlwZSwgcmVtYWluaW5n
RGltZW5zaW9ucyk7Ci0JCQkJCXNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24uc2V0VHlwZShzdWJh
cnJheVR5cGUpOworCQkJCQlBcnJheVR5cGUgc3ViYXJyYXlUeXBlID0gZXh0cmFjdFN1YkFycmF5
VHlwZShhcnJheVR5cGUsIHJlbWFpbmluZ0RpbWVuc2lvbnMsIGV4dHJhRGltZW5zaW9uKTsKIAkJ
CQkJdGhpcy5hc3QuZ2V0QmluZGluZ1Jlc29sdmVyKCkudXBkYXRlS2V5KHR5cGUsIHN1YmFycmF5
VHlwZSk7CisJCQkJCXNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24uc2V0VHlwZShzdWJhcnJheVR5
cGUpOwogCQkJCX0KIAkJCX0gZWxzZSB7CiAJCQkJc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbi5z
ZXRUeXBlKHR5cGUpOwpAQCAtNTc4OCwxOCArNTc5OSw3IEBACiAJCQkJCXRoaXMuYXN0LmdldEJp
bmRpbmdSZXNvbHZlcigpLnVwZGF0ZUtleSh0eXBlLCBlbGVtZW50VHlwZSk7CiAJCQkJCXZhcmlh
YmxlRGVjbGFyYXRpb25FeHByZXNzaW9uLnNldFR5cGUoZWxlbWVudFR5cGUpOwogCQkJCX0gZWxz
ZSB7Ci0JCQkJCWludCBzdGFydCA9IHR5cGUuZ2V0U3RhcnRQb3NpdGlvbigpOwotCQkJCQlBcnJh
eVR5cGUgc3ViYXJyYXlUeXBlID0gYXJyYXlUeXBlOwotCQkJCQlpbnQgaW5kZXggPSBleHRyYURp
bWVuc2lvbjsKLQkJCQkJd2hpbGUgKGluZGV4ID4gMCkgewotCQkJCQkJc3ViYXJyYXlUeXBlID0g
KEFycmF5VHlwZSkgc3ViYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJCQkJCWluZGV4
LS07Ci0JCQkJCX0KLQkJCQkJaW50IGVuZCA9IHJldHJpZXZlUHJvcGVyUmlnaHRCcmFja2V0UG9z
aXRpb24ocmVtYWluaW5nRGltZW5zaW9ucywgc3RhcnQpOwotCQkJCQlzdWJhcnJheVR5cGUuc2V0
U291cmNlUmFuZ2Uoc3RhcnQsIGVuZCAtIHN0YXJ0ICsgMSk7Ci0JCQkJCS8vIGN1dCB0aGUgY2hp
bGQgbG9vc2UgZnJvbSBpdHMgcGFyZW50ICh3aXRob3V0IGNyZWF0aW5nIGdhcmJhZ2UpCi0JCQkJ
CXN1YmFycmF5VHlwZS5zZXRQYXJlbnQobnVsbCwgbnVsbCk7Ci0JCQkJCXVwZGF0ZUlubmVyUG9z
aXRpb25zKHN1YmFycmF5VHlwZSwgcmVtYWluaW5nRGltZW5zaW9ucyk7CisJCQkJCUFycmF5VHlw
ZSBzdWJhcnJheVR5cGUgPSBleHRyYWN0U3ViQXJyYXlUeXBlKGFycmF5VHlwZSwgcmVtYWluaW5n
RGltZW5zaW9ucywgZXh0cmFEaW1lbnNpb24pOwogCQkJCQl2YXJpYWJsZURlY2xhcmF0aW9uRXhw
cmVzc2lvbi5zZXRUeXBlKHN1YmFycmF5VHlwZSk7CiAJCQkJCXRoaXMuYXN0LmdldEJpbmRpbmdS
ZXNvbHZlcigpLnVwZGF0ZUtleSh0eXBlLCBzdWJhcnJheVR5cGUpOwogCQkJCX0KQEAgLTU4MjQs
MTggKzU4MjQsNyBAQAogCQkJCQl0aGlzLmFzdC5nZXRCaW5kaW5nUmVzb2x2ZXIoKS51cGRhdGVL
ZXkodHlwZSwgZWxlbWVudFR5cGUpOwogCQkJCQl2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50
LnNldFR5cGUoZWxlbWVudFR5cGUpOwogCQkJCX0gZWxzZSB7Ci0JCQkJCWludCBzdGFydCA9IHR5
cGUuZ2V0U3RhcnRQb3NpdGlvbigpOwotCQkJCQlBcnJheVR5cGUgc3ViYXJyYXlUeXBlID0gYXJy
YXlUeXBlOwotCQkJCQlpbnQgaW5kZXggPSBleHRyYURpbWVuc2lvbjsKLQkJCQkJd2hpbGUgKGlu
ZGV4ID4gMCkgewotCQkJCQkJc3ViYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgc3ViYXJyYXlUeXBl
LmdldENvbXBvbmVudFR5cGUoKTsKLQkJCQkJCWluZGV4LS07Ci0JCQkJCX0KLQkJCQkJaW50IGVu
ZCA9IHJldHJpZXZlUHJvcGVyUmlnaHRCcmFja2V0UG9zaXRpb24ocmVtYWluaW5nRGltZW5zaW9u
cywgc3RhcnQpOwotCQkJCQlzdWJhcnJheVR5cGUuc2V0U291cmNlUmFuZ2Uoc3RhcnQsIGVuZCAt
IHN0YXJ0ICsgMSk7Ci0JCQkJCS8vIGN1dCB0aGUgY2hpbGQgbG9vc2UgZnJvbSBpdHMgcGFyZW50
ICh3aXRob3V0IGNyZWF0aW5nIGdhcmJhZ2UpCi0JCQkJCXN1YmFycmF5VHlwZS5zZXRQYXJlbnQo
bnVsbCwgbnVsbCk7Ci0JCQkJCXVwZGF0ZUlubmVyUG9zaXRpb25zKHN1YmFycmF5VHlwZSwgcmVt
YWluaW5nRGltZW5zaW9ucyk7CisJCQkJCUFycmF5VHlwZSBzdWJhcnJheVR5cGUgPSBleHRyYWN0
U3ViQXJyYXlUeXBlKGFycmF5VHlwZSwgcmVtYWluaW5nRGltZW5zaW9ucywgZXh0cmFEaW1lbnNp
b24pOwogCQkJCQl2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50LnNldFR5cGUoc3ViYXJyYXlU
eXBlKTsKIAkJCQkJdGhpcy5hc3QuZ2V0QmluZGluZ1Jlc29sdmVyKCkudXBkYXRlS2V5KHR5cGUs
IHN1YmFycmF5VHlwZSk7CiAJCQkJfQpAQCAtNTg1MSwxMyArNTg0MCwxMyBAQAogCQlpZiAoZGlt
ZW5zaW9ucyA+IDEpIHsKIAkJCS8vIG5lZWQgdG8gc2V0IHBvc2l0aW9ucyBmb3IgaW50ZXJtZWRp
YXRlIGFycmF5IHR5cGUgc2VlIDQyODM5CiAJCQlpbnQgc3RhcnQgPSB0eXBlLmdldFN0YXJ0UG9z
aXRpb24oKTsKLQkJCVR5cGUgY3VycmVudENvbXBvbmVudFR5cGUgPSAoKEFycmF5VHlwZSkgdHlw
ZSkuZ2V0Q29tcG9uZW50VHlwZSgpOworCQkJVHlwZSBjdXJyZW50Q29tcG9uZW50VHlwZSA9IGNv
bXBvbmVudFR5cGUoKChBcnJheVR5cGUpIHR5cGUpKTsKIAkJCWludCBzZWFyY2hlZERpbWVuc2lv
biA9IGRpbWVuc2lvbnMgLSAxOwogCQkJaW50IHJpZ2h0QnJhY2tldEVuZFBvc2l0aW9uID0gc3Rh
cnQ7CiAJCQl3aGlsZSAoY3VycmVudENvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSkgewogCQkJ
CXJpZ2h0QnJhY2tldEVuZFBvc2l0aW9uID0gcmV0cmlldmVQcm9wZXJSaWdodEJyYWNrZXRQb3Np
dGlvbihzZWFyY2hlZERpbWVuc2lvbiwgc3RhcnQpOwogCQkJCWN1cnJlbnRDb21wb25lbnRUeXBl
LnNldFNvdXJjZVJhbmdlKHN0YXJ0LCByaWdodEJyYWNrZXRFbmRQb3NpdGlvbiAtIHN0YXJ0ICsg
MSk7Ci0JCQkJY3VycmVudENvbXBvbmVudFR5cGUgPSAoKEFycmF5VHlwZSkgY3VycmVudENvbXBv
bmVudFR5cGUpLmdldENvbXBvbmVudFR5cGUoKTsKKwkJCQljdXJyZW50Q29tcG9uZW50VHlwZSA9
IGNvbXBvbmVudFR5cGUoKChBcnJheVR5cGUpIGN1cnJlbnRDb21wb25lbnRUeXBlKSk7CiAJCQkJ
c2VhcmNoZWREaW1lbnNpb24tLTsKIAkJCX0KIAkJfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RNYXRjaGVyLmphdmEgYi9v
cmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVE1hdGNo
ZXIuamF2YQppbmRleCBmMzNjNWUyLi5iMDQzMzY1IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVE1hdGNoZXIuamF2YQorKysg
Yi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVE1h
dGNoZXIuamF2YQpAQCAtMTY0LDYgKzE2NCwxMyBAQAogCX0KIAogCS8qKgorCSAqIEBkZXByZWNh
dGVkCisJICovCisJcHJpdmF0ZSBUeXBlIGNvbXBvbmVudFR5cGUoQXJyYXlUeXBlIGFycmF5KSB7
CisJCXJldHVybiBhcnJheS5nZXRDb21wb25lbnRUeXBlKCk7CisJfQorCisJLyoqCiAJICogUmV0
dXJucyB3aGV0aGVyIHRoZSBnaXZlbiBub2RlIGFuZCB0aGUgb3RoZXIgb2JqZWN0IG1hdGNoLgog
CSAqIDxwPgogCSAqIFRoZSBkZWZhdWx0IGltcGxlbWVudGF0aW9uIHByb3ZpZGVkIGJ5IHRoaXMg
Y2xhc3MgdGVzdHMgd2hldGhlciB0aGUKQEAgLTMzMSw4ICszMzgsMTEgQEAKIAkJfQogCQlBcnJh
eVR5cGUgbyA9IChBcnJheVR5cGUpIG90aGVyOwogCQlpbnQgbGV2ZWwgPSBub2RlLmdldEFTVCgp
LmFwaUxldmVsOwotCQlyZXR1cm4gc2FmZVN1YnRyZWVNYXRjaChub2RlLmdldENvbXBvbmVudFR5
cGUoKSwgby5nZXRDb21wb25lbnRUeXBlKCkpCi0JCQkJJiYgKGxldmVsID49IEFTVC5KTFM4ID8g
c2FmZVN1YnRyZWVMaXN0TWF0Y2gobm9kZS5hbm5vdGF0aW9ucygpLCBvLmFubm90YXRpb25zKCkp
IDogdHJ1ZSk7CisJCWlmIChsZXZlbCA8IEFTVC5KTFM4KSB7CisJCQlyZXR1cm4gc2FmZVN1YnRy
ZWVNYXRjaChjb21wb25lbnRUeXBlKG5vZGUpLCBjb21wb25lbnRUeXBlKG8pKTsKKwkJfQorCQly
ZXR1cm4gc2FmZVN1YnRyZWVNYXRjaChub2RlLmdldEVsZW1lbnRUeXBlKCksIG8uZ2V0RWxlbWVu
dFR5cGUoKSkKKwkJCQkmJiBzYWZlU3VidHJlZUxpc3RNYXRjaChub2RlLmRpbWVuc2lvbnMoKSwg
by5kaW1lbnNpb25zKCkpOwogCX0KIAogCS8qKgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0
LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BcnJheVR5cGUuamF2YSBiL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQXJyYXlUeXBlLmph
dmEKaW5kZXggY2QxZGQ4My4uNzM4ZWE2ZCAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNv
cmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BcnJheVR5cGUuamF2YQorKysgYi9vcmcu
ZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FycmF5VHlwZS5q
YXZhCkBAIC0yMSw3ICsyMSw5IEBACiAvKioKICAqIFR5cGUgbm9kZSBmb3IgYW4gYXJyYXkgdHlw
ZS4KICAqIDxwPgotICogQXJyYXkgdHlwZXMgYXJlIGV4cHJlc3NlZCBpbiBhIHJlY3Vyc2l2ZSBt
YW5uZXIsIG9uZSBkaW1lbnNpb24gYXQgYSB0aW1lLgorICogQXJyYXkgdHlwZXMgYXJlIGV4cHJl
c3NlZCBpbiBhIHJlY3Vyc2l2ZSBtYW5uZXIsIG9uZSBkaW1lbnNpb24gYXQgYSB0aW1lLiBGcm9t
IEpMUzggb253YXJkcywKKyAqIGluc3RlYWQgb2YgdGhpcyByZWN1cnNpdmUgbWFubmVyLCBhcnJh
eXMgYXJlIHJlcHJlc2VudGVkIGJ5IGEgYmFzZSBlbGVtZW50IHR5cGUgKHdoaWNoIGNhbm5vdAor
ICogYmUgYW4gQXJyYXkgdHlwZSkgYW5kIGEgbGlzdCBvZiBkaW1lbnNpb25zIGVhY2ggb2Ygd2hp
Y2ggbWF5IGhhdmUgYSBsaXN0IG9mIGFubm90YXRpb25zLgogICogPC9wPgogICogPHByZT4KICAq
IEFycmF5VHlwZToKQEAgLTMxLDIyICszMywyOSBAQAogICogQHNpbmNlIDIuMAogICogQG5vaW5z
dGFudGlhdGUgVGhpcyBjbGFzcyBpcyBub3QgaW50ZW5kZWQgdG8gYmUgaW5zdGFudGlhdGVkIGJ5
IGNsaWVudHMuCiAgKi8KLXB1YmxpYyBjbGFzcyBBcnJheVR5cGUgZXh0ZW5kcyBBbm5vdGF0YWJs
ZVR5cGUgeworcHVibGljIGNsYXNzIEFycmF5VHlwZSBleHRlbmRzIFR5cGUgewogCiAJLyoqCiAJ
ICogVGhlICJjb21wb25lbnRUeXBlIiBzdHJ1Y3R1cmFsIHByb3BlcnR5IG9mIHRoaXMgbm9kZSB0
eXBlIChjaGlsZCB0eXBlOiB7QGxpbmsgVHlwZX0pLgorCSAqIE5vdCBzdXBwb3J0ZWQgZnJvbSBK
TFM4IG9ud2FyZHMuCiAJICogQHNpbmNlIDMuMAogCSAqLwogCXB1YmxpYyBzdGF0aWMgZmluYWwg
Q2hpbGRQcm9wZXJ0eURlc2NyaXB0b3IgQ09NUE9ORU5UX1RZUEVfUFJPUEVSVFkgPQogCQluZXcg
Q2hpbGRQcm9wZXJ0eURlc2NyaXB0b3IoQXJyYXlUeXBlLmNsYXNzLCAiY29tcG9uZW50VHlwZSIs
IFR5cGUuY2xhc3MsIE1BTkRBVE9SWSwgQ1lDTEVfUklTSyk7IC8vJE5PTi1OTFMtMSQKIAogCS8q
KgotCSAqIFRoZSAiYW5ub3RhdGlvbnMiIHN0cnVjdHVyYWwgcHJvcGVydHkgb2YgdGhpcyBub2Rl
IHR5cGUgKGVsZW1lbnQgdHlwZToge0BsaW5rIEFubm90YXRpb259KS4KKwkgKiBUaGUgImVsZW1l
bnRUeXBlIiBzdHJ1Y3R1cmFsIHByb3BlcnR5IG9mIHRoaXMgbm9kZSB0eXBlIChjaGlsZCB0eXBl
OiB7QGxpbmsgVHlwZX0pIChhZGRlZCBpbiBKTFM4IEFQSSkuCiAJICogQHNpbmNlIDMuOSBCRVRB
X0pBVkE4CiAJICovCi0JcHVibGljIHN0YXRpYyBmaW5hbCBDaGlsZExpc3RQcm9wZXJ0eURlc2Ny
aXB0b3IgQU5OT1RBVElPTlNfUFJPUEVSVFkgPQotCQkJaW50ZXJuYWxBbm5vdGF0aW9uc1Byb3Bl
cnR5RmFjdG9yeShBcnJheVR5cGUuY2xhc3MpOworCXB1YmxpYyBzdGF0aWMgZmluYWwgQ2hpbGRQ
cm9wZXJ0eURlc2NyaXB0b3IgRUxFTUVOVF9UWVBFX1BST1BFUlRZID0KKwkJCW5ldyBDaGlsZFBy
b3BlcnR5RGVzY3JpcHRvcihBcnJheVR5cGUuY2xhc3MsICJlbGVtZW50VHlwZSIsIFR5cGUuY2xh
c3MsIE1BTkRBVE9SWSwgQ1lDTEVfUklTSyk7IC8vJE5PTi1OTFMtMSQJCiAJCisJLyoqCisJICog
VGhlICJkaW1lbnNpb25zIiBzdHJ1Y3R1cmFsIHByb3BlcnR5IG9mIHRoaXMgbm9kZSB0eXBlIChl
bGVtZW50IHR5cGU6IHtAbGluayBBbm5vdGF0aW9ufSkgKGFkZGVkIGluIEpMUzggQVBJKS4KKwkg
KiBAc2luY2UgMy45IEJFVEFfSkFWQTgKKwkgKi8KKwlwdWJsaWMgc3RhdGljIGZpbmFsIENoaWxk
TGlzdFByb3BlcnR5RGVzY3JpcHRvciBESU1FTlNJT05TX1BST1BFUlRZID0KKwkJCW5ldyBDaGls
ZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IoQXJyYXlUeXBlLmNsYXNzLCAiZGltZW5zaW9ucyIsIEV4
dHJhRGltZW5zaW9uLmNsYXNzLCBDWUNMRV9SSVNLKTsgLy8kTk9OLU5MUy0xJAkKIAkvKioKIAkg
KiBBIGxpc3Qgb2YgcHJvcGVydHkgZGVzY3JpcHRvcnMgKGVsZW1lbnQgdHlwZToKIAkgKiB7QGxp
bmsgU3RydWN0dXJhbFByb3BlcnR5RGVzY3JpcHRvcn0pLApAQCAtNjksOCArNzgsOCBAQAogCiAJ
CXByb3BlcnR5TGlzdCA9IG5ldyBBcnJheUxpc3QoMyk7CiAJCWNyZWF0ZVByb3BlcnR5TGlzdChB
cnJheVR5cGUuY2xhc3MsIHByb3BlcnR5TGlzdCk7Ci0JCWFkZFByb3BlcnR5KENPTVBPTkVOVF9U
WVBFX1BST1BFUlRZLCBwcm9wZXJ0eUxpc3QpOwotCQlhZGRQcm9wZXJ0eShBTk5PVEFUSU9OU19Q
Uk9QRVJUWSwgcHJvcGVydHlMaXN0KTsKKwkJYWRkUHJvcGVydHkoRUxFTUVOVF9UWVBFX1BST1BF
UlRZLCBwcm9wZXJ0eUxpc3QpOworCQlhZGRQcm9wZXJ0eShESU1FTlNJT05TX1BST1BFUlRZLCBw
cm9wZXJ0eUxpc3QpOwogCQlQUk9QRVJUWV9ERVNDUklQVE9SU184XzAgPSByZWFwUHJvcGVydHlM
aXN0KHByb3BlcnR5TGlzdCk7CiAJfQogCkBAIC05OCw5ICsxMDcsMTkgQEAKIAogCS8qKgogCSAq
IFRoZSBjb21wb25lbnQgdHlwZTsgbGF6aWx5IGluaXRpYWxpemVkOyBkZWZhdWx0cyB0byBhIHNp
bXBsZSB0eXBlIHdpdGgKLQkgKiBhbiB1bnNwZWNpZmllZCwgYnV0IGxlZ2FsLCBuYW1lLgorCSAq
IGFuIHVuc3BlY2lmaWVkLCBidXQgbGVnYWwsIG5hbWUuIHJldXNlZCBmb3IgZWxlbWVudCB0eXBl
IGZyb20gSkxTOCBvbndhcmRzLgogCSAqLwogCXByaXZhdGUgVHlwZSBjb21wb25lbnRUeXBlID0g
bnVsbDsKKworCS8qKgorCSAqIExpc3Qgb2YgZXh0cmEgZGltZW5zaW9ucyB0aGlzIG5vZGUgaGFz
IHdpdGggb3B0aW9uYWwgYW5ub3RhdGlvbnMKKwkgKiAoZWxlbWVudCB0eXBlOiB7QGxpbmsgRXh0
cmFEaW1lbnNpb259KS4KKwkgKiBOdWxsIGJlZm9yZSBKTFM4LiBBZGRlZCBpbiBKTFM4OyBkZWZh
dWx0cyB0byBhIGxpc3Qgd2l0aCBvbmUgZWxlbWVudAorCSAqIChzZWUgY29uc3RydWN0b3IpLgor
CSAqIAorCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAorCSAqLworCXByaXZhdGUgQVNUTm9kZS5O
b2RlTGlzdCBkaW1lbnNpb25zID0gbnVsbDsKIAogCS8qKgogCSAqIENyZWF0ZXMgYSBuZXcgdW5w
YXJlbnRlZCBub2RlIGZvciBhbiBhcnJheSB0eXBlIG93bmVkIGJ5IHRoZSBnaXZlbiBBU1QuCkBA
IC0xMTMsMTQgKzEzMiwzMSBAQAogCSAqLwogCUFycmF5VHlwZShBU1QgYXN0KSB7CiAJCXN1cGVy
KGFzdCk7CisJCWlmIChhc3QuYXBpTGV2ZWwgPj0gQVNULkpMUzgpIHsKKwkJCXRoaXMuZGltZW5z
aW9ucyA9IG5ldyBBU1ROb2RlLk5vZGVMaXN0KERJTUVOU0lPTlNfUFJPUEVSVFkpOworCQkJLy8g
c2luZ2xlIGRpbWVuc2lvbiBhcnJheSBpcyB0aGUgZGVmYXVsdAorCQkJdGhpcy5kaW1lbnNpb25z
KCkuYWRkKHRoaXMuYXN0Lm5ld0V4dHJhRGltZW5zaW9uKCkpOworCQl9CiAJfQogCi0JLyogKG9t
aXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCi0JICogTWV0aG9kIGRlY2xhcmVkIG9uIEFubm90
YXRhYmxlVHlwZS4KLQkgKiBAc2luY2UgMy45IEJFVEFfSkFWQTgKLQkgKi8KLQlmaW5hbCBDaGls
ZExpc3RQcm9wZXJ0eURlc2NyaXB0b3IgaW50ZXJuYWxBbm5vdGF0aW9uc1Byb3BlcnR5KCkgewot
CQlyZXR1cm4gQU5OT1RBVElPTlNfUFJPUEVSVFk7CisJLyoqCisJKiBDcmVhdGVzIGEgbmV3IHVu
cGFyZW50ZWQgbm9kZSBmb3IgYW4gYXJyYXkgdHlwZSBvd25lZCBieSB0aGUgZ2l2ZW4gQVNULgor
CSogPHA+CisJKiBOLkIuIFRoaXMgY29uc3RydWN0b3IgaXMgcHJpdmF0ZS4KKwkqIDwvcD4KKwkq
CisJKiBAcGFyYW0gYXN0IHRoZSBBU1QgdGhhdCBpcyB0byBvd24gdGhpcyBub2RlCisJKiBAcGFy
YW0gZGltZW5zaW9ucyBubyBvZiBkaW1lbnNpb25zIC0gY2FuIGJlIHplcm8KKwkqCisJKiBAc2lu
Y2UgMy45IEJFVEFfSkFWQTgKKwkqLworCXByaXZhdGUgQXJyYXlUeXBlKEFTVCBhc3QsIGludCBk
aW1lbnNpb25zKSB7CisJCXN1cGVyKGFzdCk7CisJCXVuc3VwcG9ydGVkSW4yXzNfNCgpOworCQl0
aGlzLmRpbWVuc2lvbnMgPSBuZXcgQVNUTm9kZS5Ob2RlTGlzdChESU1FTlNJT05TX1BST1BFUlRZ
KTsKKwkJZm9yIChpbnQgaSA9IDA7IGkgPCBkaW1lbnNpb25zOyArK2kpIHsKKwkJCXRoaXMuZGlt
ZW5zaW9ucygpLmFkZCh0aGlzLmFzdC5uZXdFeHRyYURpbWVuc2lvbigpKTsKKwkJfQogCX0KIAog
CS8qIChvbWl0IGphdmFkb2MgZm9yIHRoaXMgbWV0aG9kKQpAQCAtMTM0LDggKzE3MCw4IEBACiAJ
ICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCiAJICovCiAJZmluYWwgTGlzdCBpbnRlcm5h
bEdldENoaWxkTGlzdFByb3BlcnR5KENoaWxkTGlzdFByb3BlcnR5RGVzY3JpcHRvciBwcm9wZXJ0
eSkgewotCQlpZiAocHJvcGVydHkgPT0gQU5OT1RBVElPTlNfUFJPUEVSVFkpIHsKLQkJCXJldHVy
biBhbm5vdGF0aW9ucygpOworCQlpZiAocHJvcGVydHkgPT0gRElNRU5TSU9OU19QUk9QRVJUWSkg
eworCQkJcmV0dXJuIGRpbWVuc2lvbnMoKTsKIAkJfQogCQkvLyBhbGxvdyBkZWZhdWx0IGltcGxl
bWVudGF0aW9uIHRvIGZsYWcgdGhlIGVycm9yCiAJCXJldHVybiBzdXBlci5pbnRlcm5hbEdldENo
aWxkTGlzdFByb3BlcnR5KHByb3BlcnR5KTsKQEAgLTE1MCw2ICsxODYsMTMgQEAKIAkJCQlyZXR1
cm4gZ2V0Q29tcG9uZW50VHlwZSgpOwogCQkJfSBlbHNlIHsKIAkJCQlzZXRDb21wb25lbnRUeXBl
KChUeXBlKSBjaGlsZCk7CisJCQkJcmV0dXJuIG51bGw7CisJCQl9CisJCX0gZWxzZSBpZiAocHJv
cGVydHkgPT0gRUxFTUVOVF9UWVBFX1BST1BFUlRZKSB7CisJCQlpZiAoZ2V0KSB7CisJCQkJcmV0
dXJuIGdldEVsZW1lbnRUeXBlKCk7CisJCQl9IGVsc2UgeworCQkJCXNldEVsZW1lbnRUeXBlKChU
eXBlKSBjaGlsZCk7CiAJCQkJcmV0dXJuIG51bGw7CiAJCQl9CiAJCX0KQEAgLTE2OCwxMyArMjEx
LDE3IEBACiAJICogTWV0aG9kIGRlY2xhcmVkIG9uIEFTVE5vZGUuCiAJICovCiAJQVNUTm9kZSBj
bG9uZTAoQVNUIHRhcmdldCkgewotCQlBcnJheVR5cGUgcmVzdWx0ID0gbmV3IEFycmF5VHlwZSh0
YXJnZXQpOwotCQlyZXN1bHQuc2V0U291cmNlUmFuZ2UoZ2V0U3RhcnRQb3NpdGlvbigpLCBnZXRM
ZW5ndGgoKSk7Ci0JCXJlc3VsdC5zZXRDb21wb25lbnRUeXBlKChUeXBlKSBnZXRDb21wb25lbnRU
eXBlKCkuY2xvbmUodGFyZ2V0KSk7Ci0JCWlmICh0aGlzLmFzdC5hcGlMZXZlbCA+PSBBU1QuSkxT
OCkgewotCQkJcmVzdWx0LmFubm90YXRpb25zKCkuYWRkQWxsKAotCQkJCQlBU1ROb2RlLmNvcHlT
dWJ0cmVlcyh0YXJnZXQsIGFubm90YXRpb25zKCkpKTsKKwkJQXJyYXlUeXBlIHJlc3VsdDsKKwkJ
aWYgKHRoaXMuYXN0LmFwaUxldmVsIDwgQVNULkpMUzgpIHsKKwkJCXJlc3VsdCA9IG5ldyBBcnJh
eVR5cGUodGFyZ2V0KTsKKwkJCXJlc3VsdC5zZXRDb21wb25lbnRUeXBlKChUeXBlKSBnZXRDb21w
b25lbnRUeXBlKCkuY2xvbmUodGFyZ2V0KSk7CQkJCisJCX0gZWxzZSB7CisJCQlyZXN1bHQgPSBu
ZXcgQXJyYXlUeXBlKHRhcmdldCwgMCk7CisJCQlyZXN1bHQuc2V0RWxlbWVudFR5cGUoKFR5cGUp
IGdldEVsZW1lbnRUeXBlKCkuY2xvbmUodGFyZ2V0KSk7CisJCQlyZXN1bHQuZGltZW5zaW9ucygp
LmFkZEFsbCgKKwkJCQkJQVNUTm9kZS5jb3B5U3VidHJlZXModGFyZ2V0LCBkaW1lbnNpb25zKCkp
KTsKIAkJfQorCQlyZXN1bHQuc2V0U291cmNlUmFuZ2UoZ2V0U3RhcnRQb3NpdGlvbigpLCBnZXRM
ZW5ndGgoKSk7CiAJCXJldHVybiByZXN1bHQ7CiAJfQogCkBAIC0xOTMsOSArMjQwLDExIEBACiAJ
CWJvb2xlYW4gdmlzaXRDaGlsZHJlbiA9IHZpc2l0b3IudmlzaXQodGhpcyk7CiAJCWlmICh2aXNp
dENoaWxkcmVuKSB7CiAJCQkvLyB2aXNpdCBjaGlsZHJlbiBpbiBub3JtYWwgbGVmdCB0byByaWdo
dCByZWFkaW5nIG9yZGVyCi0JCQlhY2NlcHRDaGlsZCh2aXNpdG9yLCBnZXRDb21wb25lbnRUeXBl
KCkpOwotCQkJaWYgKHRoaXMuYXN0LmFwaUxldmVsID49IEFTVC5KTFM4KSB7Ci0JCQkJYWNjZXB0
Q2hpbGRyZW4odmlzaXRvciwgdGhpcy5hbm5vdGF0aW9ucyk7CisJCQlpZiAodGhpcy5hc3QuYXBp
TGV2ZWwgPCBBU1QuSkxTOCkgeworCQkJCWFjY2VwdENoaWxkKHZpc2l0b3IsIGdldENvbXBvbmVu
dFR5cGUoKSk7CQkJCQorCQkJfSBlbHNlIHsKKwkJCQlhY2NlcHRDaGlsZCh2aXNpdG9yLCBnZXRF
bGVtZW50VHlwZSgpKTsKKwkJCQlhY2NlcHRDaGlsZHJlbih2aXNpdG9yLCB0aGlzLmRpbWVuc2lv
bnMpOwogCQkJfQogCQl9CiAJCXZpc2l0b3IuZW5kVmlzaXQodGhpcyk7CkBAIC0yMDYsMTUgKzI1
NSwyMSBAQAogCSAqIG1heSBiZSBhbm90aGVyIGFycmF5IHR5cGUuCiAJICoKIAkgKiBAcmV0dXJu
IHRoZSBjb21wb25lbnQgdHlwZSBub2RlCisJICogQGRlcHJlY2F0ZWQgZnJvbSBKTFM4IGFuZCBs
YXRlciwgdGhlIHJlY3Vyc2l2ZSBzdHJ1Y3R1cmUgaXMgbm90IHZhbGlkCiAJICovCiAJcHVibGlj
IFR5cGUgZ2V0Q29tcG9uZW50VHlwZSgpIHsKKwkJc3VwcG9ydGVkT25seUluMl8zXzQoKTsKKwkJ
cmV0dXJuIGludGVybmFsR2V0Q29tcG9uZW50VHlwZShDT01QT05FTlRfVFlQRV9QUk9QRVJUWSk7
CisJfQorCisJcHJpdmF0ZSBUeXBlIGludGVybmFsR2V0Q29tcG9uZW50VHlwZShDaGlsZFByb3Bl
cnR5RGVzY3JpcHRvciBwcm9wZXJ0eSkgewogCQlpZiAodGhpcy5jb21wb25lbnRUeXBlID09IG51
bGwpIHsKIAkJCS8vIGxhenkgaW5pdCBtdXN0IGJlIHRocmVhZC1zYWZlIGZvciByZWFkZXJzCiAJ
CQlzeW5jaHJvbml6ZWQgKHRoaXMpIHsKIAkJCQlpZiAodGhpcy5jb21wb25lbnRUeXBlID09IG51
bGwpIHsKIAkJCQkJcHJlTGF6eUluaXQoKTsKIAkJCQkJdGhpcy5jb21wb25lbnRUeXBlID0gbmV3
IFNpbXBsZVR5cGUodGhpcy5hc3QpOwotCQkJCQlwb3N0TGF6eUluaXQodGhpcy5jb21wb25lbnRU
eXBlLCBDT01QT05FTlRfVFlQRV9QUk9QRVJUWSk7CisJCQkJCXBvc3RMYXp5SW5pdCh0aGlzLmNv
bXBvbmVudFR5cGUsIHByb3BlcnR5KTsKIAkJCQl9CiAJCQl9CiAJCX0KQEAgLTIzMiwxNSArMjg3
LDIxIEBACiAJICogPGxpPnRoZSBub2RlIGFscmVhZHkgaGFzIGEgcGFyZW50PC9saT4KIAkgKiA8
bGk+YSBjeWNsZSBpbiB3b3VsZCBiZSBjcmVhdGVkPC9saT4KIAkgKiA8L3VsPgorCSAqIEBkZXBy
ZWNhdGVkIGZyb20gSkxTOCBhbmQgbGF0ZXIsIHRoZSByZWN1cnNpdmUgc3RydWN0dXJlIGlzIG5v
dCB2YWxpZAogCSAqLwogCXB1YmxpYyB2b2lkIHNldENvbXBvbmVudFR5cGUoVHlwZSBjb21wb25l
bnRUeXBlKSB7CisJCXN1cHBvcnRlZE9ubHlJbjJfM180KCk7CiAJCWlmIChjb21wb25lbnRUeXBl
ID09IG51bGwpIHsKIAkJCXRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oKTsKIAkJ
fQorCQlpbnRlcm5hbFNldENvbXBvbmVudFR5cGUoY29tcG9uZW50VHlwZSwgQ09NUE9ORU5UX1RZ
UEVfUFJPUEVSVFkpOworCX0KKworCXByaXZhdGUgdm9pZCBpbnRlcm5hbFNldENvbXBvbmVudFR5
cGUoVHlwZSB0eXBlLCBDaGlsZFByb3BlcnR5RGVzY3JpcHRvciBwcm9wZXJ0eSkgewogCQlBU1RO
b2RlIG9sZENoaWxkID0gdGhpcy5jb21wb25lbnRUeXBlOwotCQlwcmVSZXBsYWNlQ2hpbGQob2xk
Q2hpbGQsIGNvbXBvbmVudFR5cGUsIENPTVBPTkVOVF9UWVBFX1BST1BFUlRZKTsKLQkJdGhpcy5j
b21wb25lbnRUeXBlID0gY29tcG9uZW50VHlwZTsKLQkJcG9zdFJlcGxhY2VDaGlsZChvbGRDaGls
ZCwgY29tcG9uZW50VHlwZSwgQ09NUE9ORU5UX1RZUEVfUFJPUEVSVFkpOworCQlwcmVSZXBsYWNl
Q2hpbGQob2xkQ2hpbGQsIHR5cGUsIHByb3BlcnR5KTsKKwkJdGhpcy5jb21wb25lbnRUeXBlID0g
dHlwZTsKKwkJcG9zdFJlcGxhY2VDaGlsZChvbGRDaGlsZCwgdHlwZSwgcHJvcGVydHkpOwogCX0K
IAogCS8qKgpAQCAtMjQ4LDM2ICszMDksOTggQEAKIAkgKiBuZXZlciBhbiBhcnJheSB0eXBlLgog
CSAqIDxwPgogCSAqIFRoaXMgaXMgYSBjb252ZW5pZW5jZSBtZXRob2QgdGhhdCBkZXNjZW5kcyBh
IGNoYWluIG9mIG5lc3RlZCBhcnJheSB0eXBlcwotCSAqIHVudGlsIGl0IHJlYWNoZXMgYSBub24t
YXJyYXkgdHlwZS4KKwkgKiB1bnRpbCBpdCByZWFjaGVzIGEgbm9uLWFycmF5IHR5cGUgdW50aWwg
SkxTNC4gRnJvbSBKTFM4IGFuZCBsYXRlciwgdGhpcyByZXR1cm5zIHRoZQorCSAqIGVsZW1lbnQg
dHlwZSBkaXJlY3RseS4KIAkgKiA8L3A+CiAJICoKLQkgKiBAcmV0dXJuIHRoZSBjb21wb25lbnQg
dHlwZSBub2RlCisJICogQHJldHVybiB0aGUgZWxlbWVudCB0eXBlIG5vZGUKIAkgKi8KIAlwdWJs
aWMgVHlwZSBnZXRFbGVtZW50VHlwZSgpIHsKLQkJVHlwZSB0ID0gZ2V0Q29tcG9uZW50VHlwZSgp
OwotCQl3aGlsZSAodC5pc0FycmF5VHlwZSgpKSB7Ci0JCQl0ID0gKChBcnJheVR5cGUpIHQpLmdl
dENvbXBvbmVudFR5cGUoKTsKKwkJaWYgKHRoaXMuYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCkg
eworCQkJVHlwZSB0ID0gZ2V0Q29tcG9uZW50VHlwZSgpOworCQkJd2hpbGUgKHQuaXNBcnJheVR5
cGUoKSkgeworCQkJCXQgPSAoKEFycmF5VHlwZSkgdCkuZ2V0Q29tcG9uZW50VHlwZSgpOworCQkJ
fQorCQkJcmV0dXJuIHQ7CiAJCX0KLQkJcmV0dXJuIHQ7CisJCXJldHVybiBpbnRlcm5hbEdldENv
bXBvbmVudFR5cGUoRUxFTUVOVF9UWVBFX1BST1BFUlRZKTsKKwl9CisKKwkvKioKKwkgKiBTZXRz
IHRoZSBlbGVtZW50IHR5cGUgb2YgdGhlIGFycmF5LgorCSAqCisJICogQHBhcmFtIHR5cGUgdGhl
IG5ldyB0eXBlCisJICogQGV4Y2VwdGlvbiBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24gaWY6CisJ
ICogPHVsPgorCSAqIDxsaT50aGUgbm9kZSBiZWxvbmdzIHRvIGEgZGlmZmVyZW50IEFTVDwvbGk+
CisJICogPGxpPnRoZSBub2RlIGFscmVhZHkgaGFzIGEgcGFyZW50PC9saT4KKwkgKiA8bGk+dGhl
IG5vZGUgaXMgYW4gYXJyYXkgdHlwZTwvbGk+CisJICogPC91bD4KKwkgKiBAc2luY2UgMy45IEJF
VEFfSkFWQTgKKwkgKi8KKwlwdWJsaWMgdm9pZCBzZXRFbGVtZW50VHlwZShUeXBlIHR5cGUpIHsK
KwkJaWYgKHR5cGUgPT0gbnVsbCB8fCB0eXBlIGluc3RhbmNlb2YgQXJyYXlUeXBlKSB7CisJCQl0
aHJvdyBuZXcgSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uKCk7CisJCX0KKwkJaW50ZXJuYWxTZXRD
b21wb25lbnRUeXBlKHR5cGUsIEVMRU1FTlRfVFlQRV9QUk9QRVJUWSk7CiAJfQogCiAJLyoqCiAJ
ICogUmV0dXJucyB0aGUgbnVtYmVyIG9mIGRpbWVuc2lvbnMgaW4gdGhpcyBhcnJheSB0eXBlLgog
CSAqIDxwPgogCSAqIFRoaXMgaXMgYSBjb252ZW5pZW5jZSBtZXRob2QgdGhhdCBkZXNjZW5kcyBh
IGNoYWluIG9mIG5lc3RlZCBhcnJheSB0eXBlcwotCSAqIHVudGlsIGl0IHJlYWNoZXMgYSBub24t
YXJyYXkgdHlwZS4KKwkgKiB1bnRpbCBpdCByZWFjaGVzIGEgbm9uLWFycmF5IHR5cGUgKHVudGls
IEpMUzQpLiBGcm9tIEpMUzggb253YXJkcywgCisJICogdGhpcyByZXR1cm5zIHRoZSBzaXplIG9m
IHRoZSBkaW1lbnNpb25zIGxpc3QuCiAJICogPC9wPgogCSAqCiAJICogQHJldHVybiB0aGUgbnVt
YmVyIG9mIGRpbWVuc2lvbnMgKGFsd2F5cyBwb3NpdGl2ZSkKIAkgKi8KIAlwdWJsaWMgaW50IGdl
dERpbWVuc2lvbnMoKSB7Ci0JCVR5cGUgdCA9IGdldENvbXBvbmVudFR5cGUoKTsKLQkJaW50IGRp
bWVuc2lvbnMgPSAxOyAvLyBhbHdheXMgaW5jbHVkZSB0aGlzIGFycmF5IHR5cGUKLQkJd2hpbGUg
KHQuaXNBcnJheVR5cGUoKSkgewotCQkJZGltZW5zaW9ucysrOwotCQkJdCA9ICgoQXJyYXlUeXBl
KSB0KS5nZXRDb21wb25lbnRUeXBlKCk7CisJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCgpIDwgQVNU
LkpMUzgpIHsKKwkJCVR5cGUgdCA9IGdldENvbXBvbmVudFR5cGUoKTsKKwkJCWludCBkaW1lbnNp
b24gPSAxOyAvLyBhbHdheXMgaW5jbHVkZSB0aGlzIGFycmF5IHR5cGUKKwkJCXdoaWxlICh0Lmlz
QXJyYXlUeXBlKCkpIHsKKwkJCQlkaW1lbnNpb24rKzsKKwkJCQl0ID0gKChBcnJheVR5cGUpIHQp
LmdldENvbXBvbmVudFR5cGUoKTsKKwkJCX0KKwkJCXJldHVybiBkaW1lbnNpb247CQkJCiAJCX0K
LQkJcmV0dXJuIGRpbWVuc2lvbnM7CisJCXJldHVybiBkaW1lbnNpb25zKCkuc2l6ZSgpOworCX0K
KworCS8qKgorCSAqIFJldHVybnMgdGhlIGRpbWVuc2lvbiBkIGluIHRoaXMgYXJyYXkgdHlwZS4K
KwkgKiA8cD4KKwkgKiBUaGlzIGlzIGEgY29udmVuaWVuY2UgbWV0aG9kIHRoYXQgcmV0dXJucyB0
aGUgZGltZW5zaW9uIGF0IHRoZSBnaXZlbiBudW1iZXIgZC4KKwkgKiA8L3A+CisJICogQHBhcmFt
IGQgZGltZW5zaW9uIG5vCisJICogQHJldHVybiBEaW1lbnNpb24gYXQgbnVtYmVyIGQsIG51bGwg
aWYgZCBvdXQgb2YgcmFuZ2UKKwkgKiAKKwkgKiBAc2luY2UgMy45IEJFVEFfSkFWQTgKKwkgKi8K
KwlwdWJsaWMgRXh0cmFEaW1lbnNpb24gZ2V0RGltZW5zaW9uQXQoaW50IGQpIHsKKwkJdW5zdXBw
b3J0ZWRJbjJfM180KCk7CisJCUV4dHJhRGltZW5zaW9uIGV4dHJhRGltZW5zaW9uID0gbnVsbDsK
KwkJaW50IG4gPSBnZXREaW1lbnNpb25zKCkgLSAxOworCQlpZiAoZCA+PSAwICYmIGQgPD0gbikg
eworCQkJZXh0cmFEaW1lbnNpb24gPSAoRXh0cmFEaW1lbnNpb24pIGRpbWVuc2lvbnMoKS5nZXQo
biAtIGQpOworCQl9CisJCXJldHVybiBleHRyYURpbWVuc2lvbjsKKwl9CisKKwkvKioKKwkgKiBS
ZXR1cm5zIHRoZSBsaXZlIG9yZGVyZWQgbGlzdCBvZiBkaW1lbnNpb25zIHdpdGggb3B0aW9uYWwg
YW5ub3RhdGlvbnMgKGFkZGVkIGluIEpMUzggQVBJKS4KKwkgKiAKKwkgKiBAcmV0dXJuIHRoZSBs
aXZlIGxpc3Qgb2YgZGltZW5zaW9ucyB3aXRoIG9wdGlvbmFsIGFubm90YXRpb25zIChlbGVtZW50
IHR5cGU6IHtAbGluayBFeHRyYURpbWVuc2lvbn0pCisJICogQGV4Y2VwdGlvbiBVbnN1cHBvcnRl
ZE9wZXJhdGlvbkV4Y2VwdGlvbiBpZiB0aGlzIG9wZXJhdGlvbiBpcyB1c2VkIGJlbG93IEpMUzgK
KwkgKiBAc2luY2UgMy45IEJFVEFfSkFWQTgKKwkgKi8KKwlwdWJsaWMgTGlzdCBkaW1lbnNpb25z
KCkgeworCQkvLyBtb3JlIGVmZmljaWVudCB0aGFuIGp1c3QgY2FsbGluZyB1bnN1cHBvcnRlZElu
Ml8zXzQoKSB0byBjaGVjaworCQlpZiAodGhpcy5kaW1lbnNpb25zID09IG51bGwpIHsKKwkJCXVu
c3VwcG9ydGVkSW4yXzNfNCgpOworCQl9CisJCXJldHVybiB0aGlzLmRpbWVuc2lvbnM7CiAJfQog
CiAJLyogKG9taXQgamF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCkBAIC0yOTMsOCArNDE2LDggQEAK
IAlpbnQgdHJlZVNpemUoKSB7CiAJCXJldHVybgogCQkJbWVtU2l6ZSgpCi0JCQkrICh0aGlzLmNv
bXBvbmVudFR5cGUgPT0gbnVsbCA/IDAgOiBnZXRDb21wb25lbnRUeXBlKCkudHJlZVNpemUoKSkK
LQkJCSsgKHRoaXMuYW5ub3RhdGlvbnMgPT0gbnVsbCA/IDAgOiB0aGlzLmFubm90YXRpb25zLmxp
c3RTaXplKCkpOworCQkJKyAodGhpcy5jb21wb25lbnRUeXBlID09IG51bGwgPyAwIDogKHRoaXMu
YXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCA/IGdldENvbXBvbmVudFR5cGUoKS50cmVlU2l6ZSgp
IDogZ2V0RWxlbWVudFR5cGUoKS50cmVlU2l6ZSgpKQorCQkJKyAodGhpcy5kaW1lbnNpb25zID09
IG51bGwgPyAwIDogdGhpcy5kaW1lbnNpb25zLmxpc3RTaXplKCkpKTsKIAl9CiB9CiAKZGlmZiAt
LWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwv
Y29yZS9kb20vTmFpdmVBU1RGbGF0dGVuZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Rv
bS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vTmFpdmVBU1RGbGF0dGVuZXIuamF2
YQppbmRleCBiNzM1ZGVhLi42ZDU1NmMzIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL05haXZlQVNURmxhdHRlbmVy
LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL2RvbS9OYWl2ZUFTVEZsYXR0ZW5lci5qYXZhCkBAIC0zNzAsOSArMzcwLDE3IEBA
CiAJICogQHNlZSBBU1RWaXNpdG9yI3Zpc2l0KEFycmF5VHlwZSkKIAkgKi8KIAlwdWJsaWMgYm9v
bGVhbiB2aXNpdChBcnJheVR5cGUgbm9kZSkgewotCQlub2RlLmdldENvbXBvbmVudFR5cGUoKS5h
Y2NlcHQodGhpcyk7Ci0JCXZpc2l0VHlwZUFubm90YXRpb25zKG5vZGUpOwotCQl0aGlzLmJ1ZmZl
ci5hcHBlbmQoIltdIik7Ly8kTk9OLU5MUy0xJAorCQlpZiAobm9kZS5nZXRBU1QoKS5hcGlMZXZl
bCgpIDwgQVNULkpMUzgpIHsKKwkJCXZpc2l0Q29tcG9uZW50VHlwZShub2RlKTsKKwkJCXRoaXMu
YnVmZmVyLmFwcGVuZCgiW10iKTsvLyROT04tTkxTLTEkCisJCX0gZWxzZSB7CisJCQlub2RlLmdl
dEVsZW1lbnRUeXBlKCkuYWNjZXB0KHRoaXMpOworCQkJTGlzdCBkaW1lbnNpb25zID0gbm9kZS5k
aW1lbnNpb25zKCk7CisJCQlmb3IgKGludCBpID0gMDsgaSA8IGRpbWVuc2lvbnMuc2l6ZSgpIDsg
aSsrKSB7CisJCQkJRXh0cmFEaW1lbnNpb24gYURpbWVuc2lvbiA9IChFeHRyYURpbWVuc2lvbikg
ZGltZW5zaW9ucy5nZXQoaSk7CisJCQkJYURpbWVuc2lvbi5hY2NlcHQodGhpcyk7CisJCQl9CisJ
CX0KIAkJcmV0dXJuIGZhbHNlOwogCX0KIApAQCAtMTk0NCw0ICsxOTUyLDExIEBACiAJCXJldHVy
biBmYWxzZTsKIAl9CiAKKwkvKioKKwkgKiBAZGVwcmVjYXRlZAorCSAqLworCXByaXZhdGUgdm9p
ZCB2aXNpdENvbXBvbmVudFR5cGUoQXJyYXlUeXBlIG5vZGUpIHsKKwkJbm9kZS5nZXRDb21wb25l
bnRUeXBlKCkuYWNjZXB0KHRoaXMpOworCX0KKwogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9yZXdyaXRlL0FT
VFJld3JpdGVBbmFseXplci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9yZXdyaXRlL0FTVFJld3JpdGVBbmFseXplci5qYXZh
CmluZGV4IDZjZjQ0YTkuLjM4Njk4NGQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9BU1RSZXdyaXRl
QW5hbHl6ZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvcmUvZG9tL3Jld3JpdGUvQVNUUmV3cml0ZUFuYWx5emVyLmphdmEKQEAg
LTIwNzcsMTUgKzIwNzcsMTUgQEAKIAkJCVJld3JpdGVFdmVudCBkaW1FdmVudD0gZ2V0RXZlbnQo
bm9kZSwgQXJyYXlDcmVhdGlvbi5ESU1FTlNJT05TX1BST1BFUlRZKTsKIAkJCWJvb2xlYW4gaGFz
RGltZW5zaW9uQ2hhbmdlcz0gKGRpbUV2ZW50ICE9IG51bGwgJiYgZGltRXZlbnQuZ2V0Q2hhbmdl
S2luZCgpICE9IFJld3JpdGVFdmVudC5VTkNIQU5HRUQpOwogCQkJUmV3cml0ZUV2ZW50W10gZXZl
bnRzPSBoYXNEaW1lbnNpb25DaGFuZ2VzID8gZGltRXZlbnQuZ2V0Q2hpbGRyZW4oKSA6IG51bGw7
Ci0JCQlBcnJheVR5cGUgY3VycmVudExldmVsPSAoQXJyYXlUeXBlKSByZXBsYWNpbmdUeXBlLmdl
dEVsZW1lbnRUeXBlKCkuZ2V0UGFyZW50KCk7CisJCQlib29sZWFuIGFzdExldmVsR1RFOCA9IG5v
ZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA+PSBBU1QuSkxTOCA/IHRydWUgOiBmYWxzZTsKKwkJCUFy
cmF5VHlwZSBjdXJyZW50TGV2ZWwgPSBhc3RMZXZlbEdURTggPyBudWxsIDogKEFycmF5VHlwZSkg
cmVwbGFjaW5nVHlwZS5nZXRFbGVtZW50VHlwZSgpLmdldFBhcmVudCgpOworCQkJaW50IHJlcGxh
Y2luZ1R5cGVEaW1lbnNpb25zID0gcmVwbGFjaW5nVHlwZS5nZXREaW1lbnNpb25zKCk7CiAJCQlp
bnQgaT0wLCBkaW1TaXplPSAoZXZlbnRzID09IG51bGwpID8gMCA6IGV2ZW50cy5sZW5ndGg7CiAJ
CQlUeXBlIGVsZW1lbnRUeXBlPSBhcnJheVR5cGUuZ2V0RWxlbWVudFR5cGUoKTsKIAkJCWludCBv
ZmZzZXQ9IGVsZW1lbnRUeXBlLmdldFN0YXJ0UG9zaXRpb24oKSArIGVsZW1lbnRUeXBlLmdldExl
bmd0aCgpOwotCQkJd2hpbGUoY3VycmVudExldmVsICE9IG51bGwpIHsKLQkJCQlpZiAobm9kZS5n
ZXRBU1QoKS5hcGlMZXZlbCgpID49IEFTVC5KTFM4KSB7Ci0JCQkJCXJld3JpdGVUeXBlQW5ub3Rh
dGlvbnMoY3VycmVudExldmVsLCBBcnJheVR5cGUuQU5OT1RBVElPTlNfUFJPUEVSVFksIG9mZnNl
dCk7Ci0JCQkJfQorCQkJd2hpbGUoY3VycmVudExldmVsICE9IG51bGwgfHwgYXN0TGV2ZWxHVEU4
KSB7CiAJCQkJaWYgKGkgPCBkaW1TaXplKSB7CisJCQkJCWludGVybmFsRXh0cmFEaW1lbnNpb25S
ZXdyaXRlKHJlcGxhY2luZ1R5cGUsIGksIG9mZnNldCwgYXN0TGV2ZWxHVEU4KTsKIAkJCQkJIG9m
ZnNldD0gZ2V0U2Nhbm5lcigpLmdldFRva2VuRW5kT2Zmc2V0KFRlcm1pbmFsVG9rZW5zLlRva2Vu
TmFtZUxCUkFDS0VULCBvZmZzZXQpOwogCQkJCQlpZiAoaGFzRGltZW5zaW9uQ2hhbmdlcykgewog
CQkJCQkJUmV3cml0ZUV2ZW50IGV2ZW50PSBldmVudHNbaV07CkBAIC0yMTIwLDEzICsyMTIwLDE5
IEBACiAJCQkJCQlvZmZzZXQ9IHJldHJpZXZlUmlnaHRCcmFja2V0RW5kUG9zaXRpb24ob2Zmc2V0
LCAxLCB0cnVlKTsKIAkJCQkJfQogCQkJCX0gZWxzZSBpZiAoaSA8IG5PbGRCcmFja2V0cykgewor
CQkJCQlpbnRlcm5hbEV4dHJhRGltZW5zaW9uUmV3cml0ZShyZXBsYWNpbmdUeXBlLCBpLCBvZmZz
ZXQsIGFzdExldmVsR1RFOCk7CiAJCQkJCW9mZnNldD0gcmV0cmlldmVSaWdodEJyYWNrZXRFbmRQ
b3NpdGlvbihvZmZzZXQsIDEsIGZhbHNlKTsKIAkJCQl9IGVsc2UgeworCQkJCQlpbnRlcm5hbEV4
dHJhRGltZW5zaW9uQWRkaXRpb24ocmVwbGFjaW5nVHlwZSwgaSwgb2Zmc2V0LCBlZGl0R3JvdXAs
IGFzdExldmVsR1RFOCk7CiAJCQkJCWRvVGV4dEluc2VydChvZmZzZXQsICJbXSIsIGVkaXRHcm91
cCk7IC8vJE5PTi1OTFMtMSQKIAkJCQl9CiAJCQkJaSsrOwotCQkJCWlmIChjdXJyZW50TGV2ZWwg
PT0gcmVwbGFjaW5nVHlwZSkgYnJlYWs7Ci0JCQkJY3VycmVudExldmVsPSAoQXJyYXlUeXBlKSBj
dXJyZW50TGV2ZWwuZ2V0UGFyZW50KCk7CisJCQkJaWYgKGFzdExldmVsR1RFOCkgeworCQkJCQlp
ZiAoaSA9PSByZXBsYWNpbmdUeXBlRGltZW5zaW9ucykgYnJlYWs7CisJCQkJfSBlbHNlIHsKKwkJ
CQkJaWYgKGN1cnJlbnRMZXZlbCA9PSByZXBsYWNpbmdUeXBlKSBicmVhazsKKwkJCQkJY3VycmVu
dExldmVsPSAoQXJyYXlUeXBlKSBjdXJyZW50TGV2ZWwuZ2V0UGFyZW50KCk7CisJCQkJfQogCQkJ
fQogCQkJaWYgKGkgPCBuT2xkQnJhY2tldHMpIHsKIAkJCQlpbnQgZW5kUG9zPSByZXRyaWV2ZVJp
Z2h0QnJhY2tldEVuZFBvc2l0aW9uKG9mZnNldCwgbk9sZEJyYWNrZXRzIC0gaSwgZmFsc2UpOwpA
QCAtMjE0NCw2ICsyMTUwLDI4IEBACiAJCQloYW5kbGVFeGNlcHRpb24oZSk7CiAJCX0KIAkJcmV0
dXJuIGZhbHNlOworCX0KKworCXByaXZhdGUgdm9pZCBpbnRlcm5hbEV4dHJhRGltZW5zaW9uQWRk
aXRpb24oQXJyYXlUeXBlIHJlcGxhY2luZ1R5cGUsIGludCBpbmRleCwgaW50IHBvcywgVGV4dEVk
aXRHcm91cCBlZGl0R3JvdXAsCisJCQlib29sZWFuIGFzdExldmVsR1RFOCkgeworCQlpZiAoYXN0
TGV2ZWxHVEU4KSB7CisJCQlFeHRyYURpbWVuc2lvbiBkaW0gPSAoRXh0cmFEaW1lbnNpb24pIHJl
cGxhY2luZ1R5cGUuZGltZW5zaW9ucygpLmdldChpbmRleCk7CisJCQlMaXN0IGFubm90YXRpb25z
ID0gZGltLmFubm90YXRpb25zKCk7CisJCQlpZiAoYW5ub3RhdGlvbnMgIT0gbnVsbCkgeworCQkJ
CWZvciAoaW50IGogPSAwOyBqIDwgYW5ub3RhdGlvbnMuc2l6ZSgpOyBqKyspIHsKKwkJCQkJQW5u
b3RhdGlvbiBhbm5vdGF0aW9uID0gKEFubm90YXRpb24pIGFubm90YXRpb25zLmdldChqKTsKKwkJ
CQkJZG9UZXh0SW5zZXJ0KHBvcywgYW5ub3RhdGlvbi50b1N0cmluZygpICsgIiAiLCBlZGl0R3Jv
dXApOyAvLyROT04tTkxTLTEkCisJCQkJfQorCQkJCQorCQkJfQorCQl9CisJfQorCisJcHJpdmF0
ZSB2b2lkIGludGVybmFsRXh0cmFEaW1lbnNpb25SZXdyaXRlKEFycmF5VHlwZSByZXBsYWNpbmdU
eXBlLCBpbnQgaW5kZXgsIGludCBwb3MsIGJvb2xlYW4gYXN0TGV2ZWxHVEU4KSB7CisJCWlmIChh
c3RMZXZlbEdURTgpIHsKKwkJCUV4dHJhRGltZW5zaW9uIGRpbSA9IChFeHRyYURpbWVuc2lvbikg
cmVwbGFjaW5nVHlwZS5kaW1lbnNpb25zKCkuZ2V0KGluZGV4KTsKKwkJCXJld3JpdGVUeXBlQW5u
b3RhdGlvbnMoZGltLCBFeHRyYURpbWVuc2lvbi5BTk5PVEFUSU9OU19QUk9QRVJUWSwgcG9zKTsK
KwkJfQogCX0KIAogCS8qKgpAQCAtMjE3NSw2ICsyMjAzLDkgQEAKIAl9CiAKIAlwcml2YXRlIFR5
cGUgZ2V0RWxlbWVudFR5cGUoQXJyYXlUeXBlIHBhcmVudCkgeworCQlpZiAocGFyZW50LmdldEFT
VCgpLmFwaUxldmVsKCkgPj0gQVNULkpMUzgpIHsKKwkJCXJldHVybiAoVHlwZSkgZ2V0T3JpZ2lu
YWxWYWx1ZShwYXJlbnQsIEFycmF5VHlwZS5FTEVNRU5UX1RZUEVfUFJPUEVSVFkpOworCQl9CiAJ
CVR5cGUgdCA9IChUeXBlKSBnZXRPcmlnaW5hbFZhbHVlKHBhcmVudCwgQXJyYXlUeXBlLkNPTVBP
TkVOVF9UWVBFX1BST1BFUlRZKTsKIAkJd2hpbGUgKHQuaXNBcnJheVR5cGUoKSkgewogCQkJdCA9
IChUeXBlKSBnZXRPcmlnaW5hbFZhbHVlKHQsIEFycmF5VHlwZS5DT01QT05FTlRfVFlQRV9QUk9Q
RVJUWSk7CkBAIC0yMTgzLDYgKzIyMTQsOSBAQAogCX0KIAogCXByaXZhdGUgaW50IGdldERpbWVu
c2lvbnMoQXJyYXlUeXBlIHBhcmVudCkgeworCQlpZiAocGFyZW50LmdldEFTVCgpLmFwaUxldmVs
KCkgPj0gQVNULkpMUzgpIHsKKwkJCXJldHVybiAoKExpc3QpIGdldE9yaWdpbmFsVmFsdWUocGFy
ZW50LCBBcnJheVR5cGUuRElNRU5TSU9OU19QUk9QRVJUWSkpLnNpemUoKTsKKwkJfQogCQlUeXBl
IHQgPSAoVHlwZSkgZ2V0T3JpZ2luYWxWYWx1ZShwYXJlbnQsIEFycmF5VHlwZS5DT01QT05FTlRf
VFlQRV9QUk9QRVJUWSk7CiAJCWludCBkaW1lbnNpb25zID0gMTsgLy8gYWx3YXlzIGluY2x1ZGUg
dGhpcyBhcnJheSB0eXBlCiAJCXdoaWxlICh0LmlzQXJyYXlUeXBlKCkpIHsKQEAgLTIyMTQsOSAr
MjI0OCwxMiBAQAogCQlpZiAoIWhhc0NoaWxkcmVuQ2hhbmdlcyhub2RlKSkgewogCQkJcmV0dXJu
IGRvVmlzaXRVbmNoYW5nZWRDaGlsZHJlbihub2RlKTsKIAkJfQotCQlpbnQgcG9zID0gcmV3cml0
ZVJlcXVpcmVkTm9kZShub2RlLCBBcnJheVR5cGUuQ09NUE9ORU5UX1RZUEVfUFJPUEVSVFkpOwot
CQlpZiAobm9kZS5nZXRBU1QoKS5hcGlMZXZlbCgpID49IEFTVC5KTFM4KSB7Ci0JCQlyZXdyaXRl
VHlwZUFubm90YXRpb25zKG5vZGUsIEFycmF5VHlwZS5BTk5PVEFUSU9OU19QUk9QRVJUWSwgcG9z
KTsKKwkJaWYgKG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQlyZXdy
aXRlUmVxdWlyZWROb2RlKG5vZGUsIEFycmF5VHlwZS5DT01QT05FTlRfVFlQRV9QUk9QRVJUWSk7
CisJCX0gZWxzZSB7CisJCQlyZXdyaXRlUmVxdWlyZWROb2RlKG5vZGUsIEFycmF5VHlwZS5FTEVN
RU5UX1RZUEVfUFJPUEVSVFkpOworCQkJaW50IHBvcyA9ICgoRXh0cmFEaW1lbnNpb24pIG5vZGUu
ZGltZW5zaW9ucygpLmdldCgwKSkuZ2V0U3RhcnRQb3NpdGlvbigpOworCQkJcmV3cml0ZU5vZGVM
aXN0KG5vZGUsIEFycmF5VHlwZS5ESU1FTlNJT05TX1BST1BFUlRZLCBwb3MsIFV0aWwuRU1QVFlf
U1RSSU5HLCBVdGlsLkVNUFRZX1NUUklORyk7CiAJCX0KIAkJcmV0dXJuIGZhbHNlOwogCX0KZGlm
ZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29yZS9kb20vcmV3cml0ZS9BU1RSZXdyaXRlRmxhdHRlbmVyLmphdmEgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL3Jld3JpdGUv
QVNUUmV3cml0ZUZsYXR0ZW5lci5qYXZhCmluZGV4IDIwZjY2ZTMuLjAzM2I0OTYgMTAwNjQ0Ci0t
LSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29y
ZS9kb20vcmV3cml0ZS9BU1RSZXdyaXRlRmxhdHRlbmVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9yZXdyaXRlL0FT
VFJld3JpdGVGbGF0dGVuZXIuamF2YQpAQCAtMjM2LDM1ICsyMzYsMzUgQEAKIAkJQXJyYXlUeXBl
IGFycmF5VHlwZT0gKEFycmF5VHlwZSkgZ2V0Q2hpbGROb2RlKG5vZGUsIEFycmF5Q3JlYXRpb24u
VFlQRV9QUk9QRVJUWSk7CiAKIAkJLy8gZ2V0IHRoZSBlbGVtZW50IHR5cGUgYW5kIGNvdW50IGRp
bWVuc2lvbnMKLQkJVHlwZSBlbGVtZW50VHlwZT0gKFR5cGUpIGdldENoaWxkTm9kZShhcnJheVR5
cGUsIEFycmF5VHlwZS5DT01QT05FTlRfVFlQRV9QUk9QRVJUWSk7Ci0JCWludCBkaW1lbnNpb25z
PSAxOyAvLyBhbHdheXMgaW5jbHVkZSB0aGlzIGFycmF5IHR5cGUKLQkJd2hpbGUgKGVsZW1lbnRU
eXBlLmlzQXJyYXlUeXBlKCkpIHsKLQkJCWRpbWVuc2lvbnMrKzsKLQkJCWVsZW1lbnRUeXBlID0g
KFR5cGUpIGdldENoaWxkTm9kZShlbGVtZW50VHlwZSwgQXJyYXlUeXBlLkNPTVBPTkVOVF9UWVBF
X1BST1BFUlRZKTsKKwkJVHlwZSBlbGVtZW50VHlwZTsKKwkJaW50IGRpbWVuc2lvbnM7CisJCWJv
b2xlYW4gYXN0TGV2ZWxHVEU4ID0gbm9kZS5nZXRBU1QoKS5hcGlMZXZlbCgpID49IEFTVC5KTFM4
ID8gdHJ1ZSA6IGZhbHNlOworCQlpZiAoYXN0TGV2ZWxHVEU4KSB7CisJCQllbGVtZW50VHlwZSA9
IChUeXBlKSBnZXRDaGlsZE5vZGUoYXJyYXlUeXBlLCBBcnJheVR5cGUuRUxFTUVOVF9UWVBFX1BS
T1BFUlRZKTsKKwkJCWRpbWVuc2lvbnMgPSBnZXRDaGlsZExpc3QoYXJyYXlUeXBlLCBBcnJheVR5
cGUuRElNRU5TSU9OU19QUk9QRVJUWSkuc2l6ZSgpOworCQl9IGVsc2UgeworCQkJZWxlbWVudFR5
cGUgPSAoVHlwZSkgZ2V0Q2hpbGROb2RlKGFycmF5VHlwZSwgQXJyYXlUeXBlLkNPTVBPTkVOVF9U
WVBFX1BST1BFUlRZKTsKKwkJCWRpbWVuc2lvbnMgPSAxOyAvLyBhbHdheXMgaW5jbHVkZSB0aGlz
IGFycmF5IHR5cGUKKwkJCXdoaWxlIChlbGVtZW50VHlwZS5pc0FycmF5VHlwZSgpKSB7CisJCQkJ
ZGltZW5zaW9ucysrOworCQkJCWVsZW1lbnRUeXBlID0gKFR5cGUpIGdldENoaWxkTm9kZShlbGVt
ZW50VHlwZSwgQXJyYXlUeXBlLkNPTVBPTkVOVF9UWVBFX1BST1BFUlRZKTsKKwkJCX0KIAkJfQog
CiAJCWVsZW1lbnRUeXBlLmFjY2VwdCh0aGlzKTsKIAogCQkvLyBhZGQgIjxhbm5vdGF0aW9ucz4g
WyA8ZGltZW5zaW9uPiBdIiBmb3IgZWFjaCBkaW1lbnNpb24gZXhwcmVzc2lvbgotCQlUeXBlIHR5
cGU9IGFycmF5VHlwZTsKIAkJTGlzdCBsaXN0PSBnZXRDaGlsZExpc3Qobm9kZSwgQXJyYXlDcmVh
dGlvbi5ESU1FTlNJT05TX1BST1BFUlRZKTsKIAkJZm9yIChpbnQgaT0gMDsgaSA8IGxpc3Quc2l6
ZSgpOyBpKyspIHsKLQkJCWlmIChub2RlLmdldEFTVCgpLmFwaUxldmVsKCkgPj0gQVNULkpMUzgg
JiYgdHlwZSBpbnN0YW5jZW9mIEFycmF5VHlwZSkgewotCQkJCXZpc2l0TGlzdCh0eXBlLCBBcnJh
eVR5cGUuQU5OT1RBVElPTlNfUFJPUEVSVFksIFN0cmluZy52YWx1ZU9mKCcgJyksIFV0aWwuRU1Q
VFlfU1RSSU5HLCBTdHJpbmcudmFsdWVPZignICcpKTsKLQkJCQl0eXBlID0gKFR5cGUpIGdldENo
aWxkTm9kZSh0eXBlLCBBcnJheVR5cGUuQ09NUE9ORU5UX1RZUEVfUFJPUEVSVFkpOwotCQkJfQor
CQkJaW50ZXJuYWxWaXNpdEV4dHJhRGltZW5zaW9uQW5ub3RhdGlvbnMoYXJyYXlUeXBlLCBpLCBh
c3RMZXZlbEdURTgpOwogCQkJdGhpcy5yZXN1bHQuYXBwZW5kKCdbJyk7CiAJCQkoKEFTVE5vZGUp
IGxpc3QuZ2V0KGkpKS5hY2NlcHQodGhpcyk7CiAJCQl0aGlzLnJlc3VsdC5hcHBlbmQoJ10nKTsK
LQkJCWRpbWVuc2lvbnMtLTsKIAkJfQogCiAJCS8vIGFkZCAiPGFubm90YXRpb25zPiBbXSIgZm9y
IGVhY2ggZXh0cmEgYXJyYXkgZGltZW5zaW9uCi0JCWZvciAoaW50IGk9IDA7IGkgPCBkaW1lbnNp
b25zOyBpKyspIHsKLQkJCWlmIChub2RlLmdldEFTVCgpLmFwaUxldmVsKCkgPj0gQVNULkpMUzgg
JiYgdHlwZSBpbnN0YW5jZW9mIEFycmF5VHlwZSkgewotCQkJCXZpc2l0TGlzdCh0eXBlLCBBcnJh
eVR5cGUuQU5OT1RBVElPTlNfUFJPUEVSVFksIFN0cmluZy52YWx1ZU9mKCcgJyksIFV0aWwuRU1Q
VFlfU1RSSU5HLCBTdHJpbmcudmFsdWVPZignICcpKTsKLQkJCQl0eXBlID0gKFR5cGUpIGdldENo
aWxkTm9kZSh0eXBlLCBBcnJheVR5cGUuQ09NUE9ORU5UX1RZUEVfUFJPUEVSVFkpOwotCQkJfQor
CQlmb3IgKGludCBpPSBsaXN0LnNpemUoKTsgaSA8IGRpbWVuc2lvbnM7IGkrKykgeworCQkJaW50
ZXJuYWxWaXNpdEV4dHJhRGltZW5zaW9uQW5ub3RhdGlvbnMoYXJyYXlUeXBlLCBpLCBhc3RMZXZl
bEdURTgpOwogCQkJdGhpcy5yZXN1bHQuYXBwZW5kKCJbXSIpOyAvLyROT04tTkxTLTEkCiAJCX0K
IApAQCAtMjczLDYgKzI3MywxMyBAQAogCQkJZ2V0Q2hpbGROb2RlKG5vZGUsIEFycmF5Q3JlYXRp
b24uSU5JVElBTElaRVJfUFJPUEVSVFkpLmFjY2VwdCh0aGlzKTsKIAkJfQogCQlyZXR1cm4gZmFs
c2U7CisJfQorCisJcHJpdmF0ZSB2b2lkIGludGVybmFsVmlzaXRFeHRyYURpbWVuc2lvbkFubm90
YXRpb25zKEFycmF5VHlwZSBhcnJheVR5cGUsIGludCBpbmRleCwgYm9vbGVhbiBhc3RMZXZlbEdU
RTgpIHsKKwkJaWYgKGFzdExldmVsR1RFOCkgeworCQkJRXh0cmFEaW1lbnNpb24gZXh0cmFEaW1l
bnNpb24gPSAoRXh0cmFEaW1lbnNpb24pIGFycmF5VHlwZS5kaW1lbnNpb25zKCkuZ2V0KGluZGV4
KTsKKwkJCXZpc2l0TGlzdChleHRyYURpbWVuc2lvbiwgRXh0cmFEaW1lbnNpb24uQU5OT1RBVElP
TlNfUFJPUEVSVFksIFN0cmluZy52YWx1ZU9mKCcgJyksIFV0aWwuRU1QVFlfU1RSSU5HLCBTdHJp
bmcudmFsdWVPZignICcpKTsKKwkJfQogCX0KIAogCS8qCkBAIC0yODksMTEgKzI5NiwxMyBAQAog
CSAqIEBzZWUgQVNUVmlzaXRvciN2aXNpdChBcnJheVR5cGUpCiAJICovCiAJcHVibGljIGJvb2xl
YW4gdmlzaXQoQXJyYXlUeXBlIG5vZGUpIHsKLQkJZ2V0Q2hpbGROb2RlKG5vZGUsIEFycmF5VHlw
ZS5DT01QT05FTlRfVFlQRV9QUk9QRVJUWSkuYWNjZXB0KHRoaXMpOwotCQlpZiAobm9kZS5nZXRB
U1QoKS5hcGlMZXZlbCgpID49IEFTVC5KTFM4KSB7Ci0JCQl2aXNpdExpc3Qobm9kZSwgQXJyYXlU
eXBlLkFOTk9UQVRJT05TX1BST1BFUlRZLCBTdHJpbmcudmFsdWVPZignICcpLCBVdGlsLkVNUFRZ
X1NUUklORywgU3RyaW5nLnZhbHVlT2YoJyAnKSk7CisJCWlmIChub2RlLmdldEFTVCgpLmFwaUxl
dmVsKCkgPCBBU1QuSkxTOCkgeworCQkJZ2V0Q2hpbGROb2RlKG5vZGUsIEFycmF5VHlwZS5DT01Q
T05FTlRfVFlQRV9QUk9QRVJUWSkuYWNjZXB0KHRoaXMpOworCQkJdGhpcy5yZXN1bHQuYXBwZW5k
KCJbXSIpOyAvLyROT04tTkxTLTEkCisJCX0gZWxzZSB7CisJCQlnZXRDaGlsZE5vZGUobm9kZSwg
QXJyYXlUeXBlLkVMRU1FTlRfVFlQRV9QUk9QRVJUWSkuYWNjZXB0KHRoaXMpOworCQkJdmlzaXRM
aXN0KG5vZGUsIEFycmF5VHlwZS5ESU1FTlNJT05TX1BST1BFUlRZLCBTdHJpbmcudmFsdWVPZign
ICcpLCBVdGlsLkVNUFRZX1NUUklORywgU3RyaW5nLnZhbHVlT2YoJyAnKSk7CiAJCX0KLQkJdGhp
cy5yZXN1bHQuYXBwZW5kKCJbXSIpOyAvLyROT04tTkxTLTEkCiAJCXJldHVybiBmYWxzZTsKIAl9
CiA=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>235766</attachid>
            <date>2013-09-24 10:22:00 -0400</date>
            <delta_ts>2013-09-24 10:22:51 -0400</delta_ts>
            <desc>Proposed Patch</desc>
            <filename>Fix-for-Bug-413569-18dom-ast-AST-for-annotated-multi.patch</filename>
            <type>text/plain</type>
            <size>152695</size>
            <attacher name="Manoj Palat Away Until May 11 2015">manpalat</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMTVKTFM0VGVzdC5qYXZhIGIvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2RvbS9BU1RDb252ZXJ0ZXIxNUpMUzRUZXN0LmphdmEKaW5kZXggZjAxNjExOS4uZGJjNmQz
ZSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9l
Y2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxNUpMUzRUZXN0LmphdmEKKysr
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxNUpMUzRUZXN0LmphdmEKQEAgLTEsMTAgKzEsMTQg
QEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMTEsIDIwMTIg
SUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMTEsIDIwMTMg
SUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlz
IHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFp
bGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAK
ICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxl
IGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbAogICoKKyAq
IFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgYW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlv
biBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAqIENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFu
ZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGluZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3Nlcwor
ICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlv
biBvZiB0aGUgSkNQLgorICogCiAgKiBDb250cmlidXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0
aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCiAgKiAgICAgU3RlcGhhbiBIZXJy
bWFubiAtIENvbnRyaWJ1dGlvbiBmb3IgYnVnIDE4NjM0MiAtIFtjb21waWxlcl1bbnVsbF0gVXNp
bmcgYW5ub3RhdGlvbnMgZm9yIG51bGwgY2hlY2tpbmcKQEAgLTYyLDYgKzY2LDEzIEBACiAJCQl0
aGlzLndvcmtpbmdDb3B5LmRpc2NhcmRXb3JraW5nQ29weSgpOwogCQkJdGhpcy53b3JraW5nQ29w
eSA9IG51bGw7CiAJCX0KKwl9CisKKwkvKioKKwkgKiBAZGVwcmVjYXRlZAorCSAqLworCXByaXZh
dGUgVHlwZSBjb21wb25lbnRUeXBlKEFycmF5VHlwZSBhcnJheSkgeworCQlyZXR1cm4gYXJyYXku
Z2V0Q29tcG9uZW50VHlwZSgpOwogCX0KIAogCS8vIGh0dHBzOi8vYnVncy5lY2xpcHNlLm9yZy9i
dWdzL3Nob3dfYnVnLmNnaT9pZD0yMzQ2MDkgQmluZGluZ0tleSN0b1NpZ25hdHVyZSgpIGZhaWxz
IHdpdGgga2V5IGZyb20gY3JlYXRlV2lsY2FyZFR5cGVCaW5kaW5nS2V5KC4uKQpAQCAtMTcwNCw3
ICsxNzE1LDcgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiU3RyaW5nW10iLCBzb3VyY2Up
OwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNBcnJheVR5cGUoKSk7
CiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQljaGVja1NvdXJj
ZVJhbmdlKGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCksICJTdHJpbmciLCBzb3VyY2UpOwor
CQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKSwgIlN0cmluZyIsIHNv
dXJjZSk7CiAJCWFzc2VydEVxdWFscygiV3JvbmcgZXh0cmEgZGltZW5zaW9ucyIsIDEsIHNpbmds
ZVZhcmlhYmxlRGVjbGFyYXRpb24uZ2V0RXh0cmFEaW1lbnNpb25zKCkpOwogCX0KIApAQCAtMTcz
Miw3ICsxNzQzLDcgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiU3RyaW5nW10iLCBzb3Vy
Y2UpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNBcnJheVR5cGUo
KSk7CiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQljaGVja1Nv
dXJjZVJhbmdlKGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCksICJTdHJpbmciLCBzb3VyY2Up
OworCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKSwgIlN0cmluZyIs
IHNvdXJjZSk7CiAJCWFzc2VydEVxdWFscygiV3JvbmcgZXh0cmEgZGltZW5zaW9ucyIsIDAsIHNp
bmdsZVZhcmlhYmxlRGVjbGFyYXRpb24uZ2V0RXh0cmFEaW1lbnNpb25zKCkpOwogCX0KIAkvKioK
QEAgLTI0MjMsMTEgKzI0MzQsMTEgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiTWFwPFN0
cmluZywgRG91YmxlPltdW10iLCBzb3VyY2UpOwogCQlhc3NlcnRFcXVhbHMoIndyb25nIHR5cGUi
LCBBU1ROb2RlLkFSUkFZX1RZUEUsIHR5cGUuZ2V0Tm9kZVR5cGUoKSk7CiAJCUFycmF5VHlwZSBh
cnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQl0eXBlID0gYXJyYXlUeXBlLmdldENvbXBv
bmVudFR5cGUoKTsKKwkJdHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJY2hlY2tT
b3VyY2VSYW5nZSh0eXBlLCAiTWFwPFN0cmluZywgRG91YmxlPltdIiwgc291cmNlKTsKIAkJYXNz
ZXJ0RXF1YWxzKCJ3cm9uZyB0eXBlIiwgQVNUTm9kZS5BUlJBWV9UWVBFLCB0eXBlLmdldE5vZGVU
eXBlKCkpOwogCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQl0eXBlID0gYXJyYXlU
eXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJdHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBl
KTsKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiTWFwPFN0cmluZywgRG91YmxlPiIsIHNvdXJj
ZSk7CiAJfQogCkBAIC0yNDUwLDExICsyNDYxLDExIEBACiAJCWNoZWNrU291cmNlUmFuZ2UodHlw
ZSwgImphdmEudXRpbC5NYXA8U3RyaW5nLCBEb3VibGU+W11bXSIsIHNvdXJjZSk7CiAJCWFzc2Vy
dEVxdWFscygid3JvbmcgdHlwZSIsIEFTVE5vZGUuQVJSQVlfVFlQRSwgdHlwZS5nZXROb2RlVHlw
ZSgpKTsKIAkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7Ci0JCXR5cGUg
PSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQl0eXBlID0gY29tcG9uZW50VHlwZShh
cnJheVR5cGUpOwogCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJqYXZhLnV0aWwuTWFwPFN0cmlu
ZywgRG91YmxlPltdIiwgc291cmNlKTsKIAkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBlIiwgQVNU
Tm9kZS5BUlJBWV9UWVBFLCB0eXBlLmdldE5vZGVUeXBlKCkpOwogCQlhcnJheVR5cGUgPSAoQXJy
YXlUeXBlKSB0eXBlOwotCQl0eXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJ
dHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBl
LCAiamF2YS51dGlsLk1hcDxTdHJpbmcsIERvdWJsZT4iLCBzb3VyY2UpOwogCX0KIApAQCAtNDEx
NCw3ICs0MTI1LDcgQEAKICAgICAJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBkaW1lbnNpb25zIiwgMSwg
dHlwZUJpbmRpbmcuZ2V0RGltZW5zaW9ucygpKTsKICAgICAJQXJyYXlUeXBlIGFycmF5VHlwZSA9
IChBcnJheVR5cGUpIHR5cGU7CiAgICAgCWFzc2VydEVxdWFscygiV3JvbmcgZGltZW5zaW9uIiwg
MSwgYXJyYXlUeXBlLmdldERpbWVuc2lvbnMoKSk7Ci0gICAgCXR5cGUgPSBhcnJheVR5cGUuZ2V0
Q29tcG9uZW50VHlwZSgpOworICAgIAl0eXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwog
ICAgIAlhc3NlcnRUcnVlKCJOb3QgYSBzaW1wbGUgdHlwZSIsIHR5cGUuaXNTaW1wbGVUeXBlKCkp
OwogICAgIAljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJTdHJpbmciLCBjb250ZW50cyk7CiAgICAg
CWFzc2VydEVxdWFscygiV3JvbmcgZXh0cmEgZGltZW5zaW9uIiwgMSwgc2luZ2xlVmFyaWFibGVE
ZWNsYXJhdGlvbi5nZXRFeHRyYURpbWVuc2lvbnMoKSk7CkBAIC00NDk4LDcgKzQ1MDksNyBAQAog
ICAgIAlhc3NlcnRFcXVhbHMoIndyb25nIGRpbWVuc2lvbnMiLCAxLCB0eXBlQmluZGluZy5nZXRE
aW1lbnNpb25zKCkpOwogICAgIAlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlw
ZTsKICAgICAJYXNzZXJ0RXF1YWxzKCJXcm9uZyBkaW1lbnNpb24iLCAxLCBhcnJheVR5cGUuZ2V0
RGltZW5zaW9ucygpKTsKLSAgICAJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7
CisgICAgCXR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7CiAgICAgCWFzc2VydFRydWUo
Ik5vdCBhIHNpbXBsZSB0eXBlIiwgdHlwZS5pc1NpbXBsZVR5cGUoKSk7CiAgICAgCWNoZWNrU291
cmNlUmFuZ2UodHlwZSwgIlN0cmluZyIsIGNvbnRlbnRzKTsKICAgICAJYXNzZXJ0RXF1YWxzKCJX
cm9uZyBleHRyYSBkaW1lbnNpb24iLCAwLCBzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLmdldEV4
dHJhRGltZW5zaW9ucygpKTsKQEAgLTExMTgyLDcgKzExMTkzLDcgQEAKIAkJSVR5cGVCaW5kaW5n
IGJpbmRpbmcgPSB0eXBlLnJlc29sdmVCaW5kaW5nKCk7CiAJCWFzc2VydE5vdE51bGwoIk5vIGJp
bmRpbmciLCBiaW5kaW5nKTsKIAkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBxdWFsaWZpZWQgbmFtZSIs
ICJ0ZXN0MDM0Ny5PdXRlcjxqYXZhLmxhbmcuSW50ZWdlcj4uSW5uZXI8amF2YS5sYW5nLkRvdWJs
ZT5bXSIsIGJpbmRpbmcuZ2V0UXVhbGlmaWVkTmFtZSgpKTsKLQkJVHlwZSBjb21wb25lbnRUeXBl
ID0gdHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCVR5cGUgY29tcG9uZW50VHlwZSA9IGNvbXBv
bmVudFR5cGUodHlwZSk7CiAJCWJpbmRpbmcgPSBjb21wb25lbnRUeXBlLnJlc29sdmVCaW5kaW5n
KCk7CiAJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsKIAkJYXNzZXJ0RXF1
YWxzKCJXcm9uZyBxdWFsaWZpZWQgbmFtZSIsICJ0ZXN0MDM0Ny5PdXRlcjxqYXZhLmxhbmcuSW50
ZWdlcj4uSW5uZXI8amF2YS5sYW5nLkRvdWJsZT4iLCBiaW5kaW5nLmdldFF1YWxpZmllZE5hbWUo
KSk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlcjE1SkxTOFRlc3QuamF2YSBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMTVKTFM4VGVzdC5qYXZhCmluZGV4IGY0YjE1MjguLmUy
YzQ0MDQgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMTVKTFM4VGVzdC5qYXZh
CisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMTVKTFM4VGVzdC5qYXZhCkBAIC0xLDUgKzEs
NSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAxMSwgMjAx
MiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAxMSwgMjAx
MyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRo
aXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2
YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEu
MAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFi
bGUgYXQKQEAgLTE3MDgsNyArMTcwOCw3IEBACiAJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIlN0
cmluZ1tdIiwgc291cmNlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCB0eXBl
LmlzQXJyYXlUeXBlKCkpOwogCQlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlw
ZTsKLQkJY2hlY2tTb3VyY2VSYW5nZShhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpLCAiU3Ry
aW5nIiwgc291cmNlKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShhcnJheVR5cGUuZ2V0RWxlbWVudFR5
cGUoKSwgIlN0cmluZyIsIHNvdXJjZSk7CiAJCWFzc2VydEVxdWFscygiV3JvbmcgZXh0cmEgZGlt
ZW5zaW9ucyIsIDEsIHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24uZ2V0RXh0cmFEaW1lbnNpb25z
KCkpOwogCX0KIApAQCAtMTczNiw3ICsxNzM2LDcgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBl
LCAiU3RyaW5nW10iLCBzb3VyY2UpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIs
IHR5cGUuaXNBcnJheVR5cGUoKSk7CiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBl
KSB0eXBlOwotCQljaGVja1NvdXJjZVJhbmdlKGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCks
ICJTdHJpbmciLCBzb3VyY2UpOworCQljaGVja1NvdXJjZVJhbmdlKGFycmF5VHlwZS5nZXRFbGVt
ZW50VHlwZSgpLCAiU3RyaW5nIiwgc291cmNlKTsKIAkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBleHRy
YSBkaW1lbnNpb25zIiwgMCwgc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbi5nZXRFeHRyYURpbWVu
c2lvbnMoKSk7CiAJfQogCS8qKgpAQCAtMjQyNywxMiArMjQyNyw5IEBACiAJCWNoZWNrU291cmNl
UmFuZ2UodHlwZSwgIk1hcDxTdHJpbmcsIERvdWJsZT5bXVtdIiwgc291cmNlKTsKIAkJYXNzZXJ0
RXF1YWxzKCJ3cm9uZyB0eXBlIiwgQVNUTm9kZS5BUlJBWV9UWVBFLCB0eXBlLmdldE5vZGVUeXBl
KCkpOwogCQlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJdHlwZSA9
IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWNoZWNrU291cmNlUmFuZ2UodHlwZSwg
Ik1hcDxTdHJpbmcsIERvdWJsZT5bXSIsIHNvdXJjZSk7Ci0JCWFzc2VydEVxdWFscygid3Jvbmcg
dHlwZSIsIEFTVE5vZGUuQVJSQVlfVFlQRSwgdHlwZS5nZXROb2RlVHlwZSgpKTsKLQkJYXJyYXlU
eXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRU
eXBlKCk7CisJCXR5cGUgPSBhcnJheVR5cGUuZ2V0RWxlbWVudFR5cGUoKTsKIAkJY2hlY2tTb3Vy
Y2VSYW5nZSh0eXBlLCAiTWFwPFN0cmluZywgRG91YmxlPiIsIHNvdXJjZSk7CisJCWFzc2VydEVx
dWFscygid3JvbmcgdHlwZSIsIEFTVE5vZGUuUEFSQU1FVEVSSVpFRF9UWVBFLCB0eXBlLmdldE5v
ZGVUeXBlKCkpOwogCX0KIAogCS8qCkBAIC0yNDU0LDEyICsyNDUxLDkgQEAKIAkJY2hlY2tTb3Vy
Y2VSYW5nZSh0eXBlLCAiamF2YS51dGlsLk1hcDxTdHJpbmcsIERvdWJsZT5bXVtdIiwgc291cmNl
KTsKIAkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBlIiwgQVNUTm9kZS5BUlJBWV9UWVBFLCB0eXBl
LmdldE5vZGVUeXBlKCkpOwogCQlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlw
ZTsKLQkJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWNoZWNrU291cmNl
UmFuZ2UodHlwZSwgImphdmEudXRpbC5NYXA8U3RyaW5nLCBEb3VibGU+W10iLCBzb3VyY2UpOwot
CQlhc3NlcnRFcXVhbHMoIndyb25nIHR5cGUiLCBBU1ROb2RlLkFSUkFZX1RZUEUsIHR5cGUuZ2V0
Tm9kZVR5cGUoKSk7Ci0JCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7Ci0JCXR5cGUgPSBh
cnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQl0eXBlID0gYXJyYXlUeXBlLmdldEVsZW1l
bnRUeXBlKCk7CiAJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgImphdmEudXRpbC5NYXA8U3RyaW5n
LCBEb3VibGU+Iiwgc291cmNlKTsKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBlIiwgQVNUTm9k
ZS5QQVJBTUVURVJJWkVEX1RZUEUsIHR5cGUuZ2V0Tm9kZVR5cGUoKSk7CiAJfQogCiAJLyoKQEAg
LTQxMTgsNyArNDExMiw3IEBACiAgICAgCWFzc2VydEVxdWFscygid3JvbmcgZGltZW5zaW9ucyIs
IDEsIHR5cGVCaW5kaW5nLmdldERpbWVuc2lvbnMoKSk7CiAgICAgCUFycmF5VHlwZSBhcnJheVR5
cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwogICAgIAlhc3NlcnRFcXVhbHMoIldyb25nIGRpbWVuc2lv
biIsIDEsIGFycmF5VHlwZS5nZXREaW1lbnNpb25zKCkpOwotICAgIAl0eXBlID0gYXJyYXlUeXBl
LmdldENvbXBvbmVudFR5cGUoKTsKKyAgICAJdHlwZSA9IGFycmF5VHlwZS5nZXRFbGVtZW50VHlw
ZSgpOwogICAgIAlhc3NlcnRUcnVlKCJOb3QgYSBzaW1wbGUgdHlwZSIsIHR5cGUuaXNTaW1wbGVU
eXBlKCkpOwogICAgIAljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJTdHJpbmciLCBjb250ZW50cyk7
CiAgICAgCWFzc2VydEVxdWFscygiV3JvbmcgZXh0cmEgZGltZW5zaW9uIiwgMSwgc2luZ2xlVmFy
aWFibGVEZWNsYXJhdGlvbi5nZXRFeHRyYURpbWVuc2lvbnMoKSk7CkBAIC00NTAyLDcgKzQ0OTYs
NyBAQAogICAgIAlhc3NlcnRFcXVhbHMoIndyb25nIGRpbWVuc2lvbnMiLCAxLCB0eXBlQmluZGlu
Zy5nZXREaW1lbnNpb25zKCkpOwogICAgIAlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlw
ZSkgdHlwZTsKICAgICAJYXNzZXJ0RXF1YWxzKCJXcm9uZyBkaW1lbnNpb24iLCAxLCBhcnJheVR5
cGUuZ2V0RGltZW5zaW9ucygpKTsKLSAgICAJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRU
eXBlKCk7CisgICAgCXR5cGUgPSBhcnJheVR5cGUuZ2V0RWxlbWVudFR5cGUoKTsKICAgICAJYXNz
ZXJ0VHJ1ZSgiTm90IGEgc2ltcGxlIHR5cGUiLCB0eXBlLmlzU2ltcGxlVHlwZSgpKTsKICAgICAJ
Y2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiU3RyaW5nIiwgY29udGVudHMpOwogICAgIAlhc3NlcnRF
cXVhbHMoIldyb25nIGV4dHJhIGRpbWVuc2lvbiIsIDAsIHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRp
b24uZ2V0RXh0cmFEaW1lbnNpb25zKCkpOwpAQCAtMTExODYsNyArMTExODAsNyBAQAogCQlJVHlw
ZUJpbmRpbmcgYmluZGluZyA9IHR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKIAkJYXNzZXJ0Tm90TnVs
bCgiTm8gYmluZGluZyIsIGJpbmRpbmcpOwogCQlhc3NlcnRFcXVhbHMoIldyb25nIHF1YWxpZmll
ZCBuYW1lIiwgInRlc3QwMzQ3Lk91dGVyPGphdmEubGFuZy5JbnRlZ2VyPi5Jbm5lcjxqYXZhLmxh
bmcuRG91YmxlPltdIiwgYmluZGluZy5nZXRRdWFsaWZpZWROYW1lKCkpOwotCQlUeXBlIGNvbXBv
bmVudFR5cGUgPSB0eXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJVHlwZSBjb21wb25lbnRUeXBl
ID0gdHlwZS5nZXRFbGVtZW50VHlwZSgpOwogCQliaW5kaW5nID0gY29tcG9uZW50VHlwZS5yZXNv
bHZlQmluZGluZygpOwogCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7CiAJ
CWFzc2VydEVxdWFscygiV3JvbmcgcXVhbGlmaWVkIG5hbWUiLCAidGVzdDAzNDcuT3V0ZXI8amF2
YS5sYW5nLkludGVnZXI+LklubmVyPGphdmEubGFuZy5Eb3VibGU+IiwgYmluZGluZy5nZXRRdWFs
aWZpZWROYW1lKCkpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9k
ZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxNVRlc3Qu
amF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMTVUZXN0LmphdmEKaW5kZXggYWVjMWEzYy4u
MDk0ZDgxMyAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxNVRlc3QuamF2YQor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlcjE1VGVzdC5qYXZhCkBAIC03OCw2ICs3OCwxMyBA
QAogCQl9CiAJfQogCisJLyoqCisJICogQGRlcHJlY2F0ZWQKKwkgKi8KKwlwcml2YXRlIFR5cGUg
Y29tcG9uZW50VHlwZShBcnJheVR5cGUgYXJyYXkpIHsKKwkJcmV0dXJuIGFycmF5LmdldENvbXBv
bmVudFR5cGUoKTsKKwl9CisKIAkvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93
X2J1Zy5jZ2k/aWQ9MjM0NjA5IEJpbmRpbmdLZXkjdG9TaWduYXR1cmUoKSBmYWlscyB3aXRoIGtl
eSBmcm9tIGNyZWF0ZVdpbGNhcmRUeXBlQmluZGluZ0tleSguLikKIAlwdWJsaWMgdm9pZCB0ZXN0
MjM0NjA5KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CiAKQEAgLTE3MTgsNyArMTcyNSw3
IEBACiAJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIlN0cmluZ1tdIiwgc291cmNlKTsKIAkJYXNz
ZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlzQXJyYXlUeXBlKCkpOwogCQlBcnJh
eVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJY2hlY2tTb3VyY2VSYW5nZShh
cnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpLCAiU3RyaW5nIiwgc291cmNlKTsKKwkJY2hlY2tT
b3VyY2VSYW5nZShjb21wb25lbnRUeXBlKGFycmF5VHlwZSksICJTdHJpbmciLCBzb3VyY2UpOwog
CQlhc3NlcnRFcXVhbHMoIldyb25nIGV4dHJhIGRpbWVuc2lvbnMiLCAxLCBzaW5nbGVWYXJpYWJs
ZURlY2xhcmF0aW9uLmdldEV4dHJhRGltZW5zaW9ucygpKTsKIAl9CiAKQEAgLTE3NDYsNyArMTc1
Myw3IEBACiAJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIlN0cmluZ1tdIiwgc291cmNlKTsKIAkJ
YXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlzQXJyYXlUeXBlKCkpOwogCQlB
cnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJY2hlY2tTb3VyY2VSYW5n
ZShhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpLCAiU3RyaW5nIiwgc291cmNlKTsKKwkJY2hl
Y2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlKGFycmF5VHlwZSksICJTdHJpbmciLCBzb3VyY2Up
OwogCQlhc3NlcnRFcXVhbHMoIldyb25nIGV4dHJhIGRpbWVuc2lvbnMiLCAwLCBzaW5nbGVWYXJp
YWJsZURlY2xhcmF0aW9uLmdldEV4dHJhRGltZW5zaW9ucygpKTsKIAl9CiAJLyoqCkBAIC0yNDM3
LDExICsyNDQ0LDExIEBACiAJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIk1hcDxTdHJpbmcsIERv
dWJsZT5bXVtdIiwgc291cmNlKTsKIAkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyB0eXBlIiwgQVNUTm9k
ZS5BUlJBWV9UWVBFLCB0eXBlLmdldE5vZGVUeXBlKCkpOwogCQlBcnJheVR5cGUgYXJyYXlUeXBl
ID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBl
KCk7CisJCXR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7CiAJCWNoZWNrU291cmNlUmFu
Z2UodHlwZSwgIk1hcDxTdHJpbmcsIERvdWJsZT5bXSIsIHNvdXJjZSk7CiAJCWFzc2VydEVxdWFs
cygid3JvbmcgdHlwZSIsIEFTVE5vZGUuQVJSQVlfVFlQRSwgdHlwZS5nZXROb2RlVHlwZSgpKTsK
IAkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJdHlwZSA9IGFycmF5VHlwZS5nZXRD
b21wb25lbnRUeXBlKCk7CisJCXR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7CiAJCWNo
ZWNrU291cmNlUmFuZ2UodHlwZSwgIk1hcDxTdHJpbmcsIERvdWJsZT4iLCBzb3VyY2UpOwogCX0K
IApAQCAtMjQ2NCwxMSArMjQ3MSwxMSBAQAogCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJqYXZh
LnV0aWwuTWFwPFN0cmluZywgRG91YmxlPltdW10iLCBzb3VyY2UpOwogCQlhc3NlcnRFcXVhbHMo
Indyb25nIHR5cGUiLCBBU1ROb2RlLkFSUkFZX1RZUEUsIHR5cGUuZ2V0Tm9kZVR5cGUoKSk7CiAJ
CUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQl0eXBlID0gYXJyYXlU
eXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJdHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBl
KTsKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiamF2YS51dGlsLk1hcDxTdHJpbmcsIERvdWJs
ZT5bXSIsIHNvdXJjZSk7CiAJCWFzc2VydEVxdWFscygid3JvbmcgdHlwZSIsIEFTVE5vZGUuQVJS
QVlfVFlQRSwgdHlwZS5nZXROb2RlVHlwZSgpKTsKIAkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkg
dHlwZTsKLQkJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCXR5cGUgPSBj
b21wb25lbnRUeXBlKGFycmF5VHlwZSk7CiAJCWNoZWNrU291cmNlUmFuZ2UodHlwZSwgImphdmEu
dXRpbC5NYXA8U3RyaW5nLCBEb3VibGU+Iiwgc291cmNlKTsKIAl9CiAKQEAgLTQxMjgsNyArNDEz
NSw3IEBACiAgICAgCWFzc2VydEVxdWFscygid3JvbmcgZGltZW5zaW9ucyIsIDEsIHR5cGVCaW5k
aW5nLmdldERpbWVuc2lvbnMoKSk7CiAgICAgCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlU
eXBlKSB0eXBlOwogICAgIAlhc3NlcnRFcXVhbHMoIldyb25nIGRpbWVuc2lvbiIsIDEsIGFycmF5
VHlwZS5nZXREaW1lbnNpb25zKCkpOwotICAgIAl0eXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVu
dFR5cGUoKTsKKyAgICAJdHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKICAgICAJYXNz
ZXJ0VHJ1ZSgiTm90IGEgc2ltcGxlIHR5cGUiLCB0eXBlLmlzU2ltcGxlVHlwZSgpKTsKICAgICAJ
Y2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiU3RyaW5nIiwgY29udGVudHMpOwogICAgIAlhc3NlcnRF
cXVhbHMoIldyb25nIGV4dHJhIGRpbWVuc2lvbiIsIDEsIHNpbmdsZVZhcmlhYmxlRGVjbGFyYXRp
b24uZ2V0RXh0cmFEaW1lbnNpb25zKCkpOwpAQCAtNDUxMiw3ICs0NTE5LDcgQEAKICAgICAJYXNz
ZXJ0RXF1YWxzKCJ3cm9uZyBkaW1lbnNpb25zIiwgMSwgdHlwZUJpbmRpbmcuZ2V0RGltZW5zaW9u
cygpKTsKICAgICAJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7CiAgICAg
CWFzc2VydEVxdWFscygiV3JvbmcgZGltZW5zaW9uIiwgMSwgYXJyYXlUeXBlLmdldERpbWVuc2lv
bnMoKSk7Ci0gICAgCXR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworICAgIAl0
eXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogICAgIAlhc3NlcnRUcnVlKCJOb3QgYSBz
aW1wbGUgdHlwZSIsIHR5cGUuaXNTaW1wbGVUeXBlKCkpOwogICAgIAljaGVja1NvdXJjZVJhbmdl
KHR5cGUsICJTdHJpbmciLCBjb250ZW50cyk7CiAgICAgCWFzc2VydEVxdWFscygiV3JvbmcgZXh0
cmEgZGltZW5zaW9uIiwgMCwgc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbi5nZXRFeHRyYURpbWVu
c2lvbnMoKSk7CkBAIC0xMTE5Nyw3ICsxMTIwNCw3IEBACiAJCUlUeXBlQmluZGluZyBiaW5kaW5n
ID0gdHlwZS5yZXNvbHZlQmluZGluZygpOwogCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwg
YmluZGluZyk7CiAJCWFzc2VydEVxdWFscygiV3JvbmcgcXVhbGlmaWVkIG5hbWUiLCAidGVzdDAz
NDcuT3V0ZXI8amF2YS5sYW5nLkludGVnZXI+LklubmVyPGphdmEubGFuZy5Eb3VibGU+W10iLCBi
aW5kaW5nLmdldFF1YWxpZmllZE5hbWUoKSk7Ci0JCVR5cGUgY29tcG9uZW50VHlwZSA9IHR5cGUu
Z2V0Q29tcG9uZW50VHlwZSgpOworCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRUeXBl
KHR5cGUpOwogCQliaW5kaW5nID0gY29tcG9uZW50VHlwZS5yZXNvbHZlQmluZGluZygpOwogCQlh
c3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7CiAJCWFzc2VydEVxdWFscygiV3Jv
bmcgcXVhbGlmaWVkIG5hbWUiLCAidGVzdDAzNDcuT3V0ZXI8amF2YS5sYW5nLkludGVnZXI+Lklu
bmVyPGphdmEubGFuZy5Eb3VibGU+IiwgYmluZGluZy5nZXRRdWFsaWZpZWROYW1lKCkpOwpAQCAt
MTEzMjMsNyArMTEzMzAsNyBAQAogCQlhc3NlcnRUcnVlKCJOb3QgYSBjb21waWxhdGlvbiB1bml0
IiwgcmVzdWx0LmdldE5vZGVUeXBlKCkgPT0gQVNUTm9kZS5DT01QSUxBVElPTl9VTklUKTsKIAkJ
Q29tcGlsYXRpb25Vbml0IHVuaXQgPSAoQ29tcGlsYXRpb25Vbml0KSByZXN1bHQ7CiAJCU1ldGhv
ZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9uID0gKE1ldGhvZERlY2xhcmF0aW9uKSBnZXRB
U1ROb2RlKHVuaXQsIDAsIDApOwotCQlUeXBlIGNvbXBvbmVudFR5cGUgPSAoKEFycmF5VHlwZSlt
ZXRob2REZWNsYXJhdGlvbi5nZXRSZXR1cm5UeXBlMigpKS5nZXRDb21wb25lbnRUeXBlKCk7CisJ
CVR5cGUgY29tcG9uZW50VHlwZSA9IGNvbXBvbmVudFR5cGUoKChBcnJheVR5cGUpbWV0aG9kRGVj
bGFyYXRpb24uZ2V0UmV0dXJuVHlwZTIoKSkpOwogCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcg
PSBjb21wb25lbnRUeXBlLnJlc29sdmVCaW5kaW5nKCk7CiAJCWFzc2VydEVxdWFscygiV3Jvbmcg
ZnVsbHkgcXVhbGlmaWVkIG5hbWUiLCAidGVzdDAzNTEuSTEiLCB0eXBlQmluZGluZy5nZXRRdWFs
aWZpZWROYW1lKCkpOwogCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3Rz
Lm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThU
ZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlcjE4VGVzdC5qYXZhCmluZGV4IGE1Yzk0
NzAuLjMxYjViYzggMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVs
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyMThUZXN0Lmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXIxOFRlc3QuamF2YQpAQCAtMjczLDEzICsy
NzMsMTMgQEAKIAkJSVR5cGVCaW5kaW5nIGJpbmRpbmcgPSB0eXBlLnJlc29sdmVCaW5kaW5nKCk7
CiAJCWFzc2VydE5vdE51bGwoIk5vIGJpbmRpbmciLCBiaW5kaW5nKTsKIAkJYXNzZXJ0RXF1YWxz
KCJXcm9uZyBxdWFsaWZpZWQgbmFtZSIsICJ0ZXN0MDAwNC5PdXRlcjxqYXZhLmxhbmcuSW50ZWdl
cj4uSW5uZXI8amF2YS5sYW5nLkRvdWJsZT5bXSIsIGJpbmRpbmcuZ2V0UXVhbGlmaWVkTmFtZSgp
KTsKLQkJVHlwZSBjb21wb25lbnRUeXBlID0gdHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWJp
bmRpbmcgPSBjb21wb25lbnRUeXBlLnJlc29sdmVCaW5kaW5nKCk7CisJCVR5cGUgZWxlbWVudFR5
cGUgPSB0eXBlLmdldEVsZW1lbnRUeXBlKCk7CisJCWJpbmRpbmcgPSBlbGVtZW50VHlwZS5yZXNv
bHZlQmluZGluZygpOwogCQlhc3NlcnROb3ROdWxsKCJObyBiaW5kaW5nIiwgYmluZGluZyk7CiAJ
CWFzc2VydEVxdWFscygiV3JvbmcgcXVhbGlmaWVkIG5hbWUiLAogCQkJCSJ0ZXN0MDAwNC5PdXRl
cjxqYXZhLmxhbmcuSW50ZWdlcj4uSW5uZXI8amF2YS5sYW5nLkRvdWJsZT4iLCBiaW5kaW5nLmdl
dFF1YWxpZmllZE5hbWUoKSk7Ci0JCWFzc2VydFRydWUoIk5vdCBwYXJhbWV0ZXJpemVkIiwgY29t
cG9uZW50VHlwZS5pc1BhcmFtZXRlcml6ZWRUeXBlKCkpOwotCQlQYXJhbWV0ZXJpemVkVHlwZSBw
YXJhbWV0ZXJpemVkVHlwZSA9IChQYXJhbWV0ZXJpemVkVHlwZSkgY29tcG9uZW50VHlwZTsKKwkJ
YXNzZXJ0VHJ1ZSgiTm90IHBhcmFtZXRlcml6ZWQiLCBlbGVtZW50VHlwZS5pc1BhcmFtZXRlcml6
ZWRUeXBlKCkpOworCQlQYXJhbWV0ZXJpemVkVHlwZSBwYXJhbWV0ZXJpemVkVHlwZSA9IChQYXJh
bWV0ZXJpemVkVHlwZSkgZWxlbWVudFR5cGU7CiAJCVR5cGUgdHlwZTIgPSBwYXJhbWV0ZXJpemVk
VHlwZS5nZXRUeXBlKCk7CiAJCWFzc2VydFRydWUoIk5vdCBxdWFsaWZpZWQiLCB0eXBlMi5pc1F1
YWxpZmllZFR5cGUoKSk7CiAJCVF1YWxpZmllZFR5cGUgcXVhbGlmaWVkVHlwZSA9IChRdWFsaWZp
ZWRUeXBlKSB0eXBlMjsKQEAgLTExMzksMTMgKzExMzksMTIgQEAKIAkJVHlwZSB0eXBlID0gY3Jl
YXRpb24uZ2V0VHlwZSgpOwogCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCB0eXBlIiwgdHJ1ZSwg
dHlwZS5pc0FycmF5VHlwZSgpKTsKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiQE1hcmtlcjIg
aW50IEBNYXJrZXIgQE1hcmtlcjIgWzJdIEBNYXJrZXIyIEBNYXJrZXIzIFtiYXIoKV0gQE1hcmtl
cjMgQE1hcmtlciBbXSIsIGNvbnRlbnRzLnRvQ2hhckFycmF5KCkpOwotCQlhc3NlcnRFcXVhbHMo
IkluY29ycmVjdCBhbm5vdGF0aW9ucyIsICJATWFya2VyMyBATWFya2VyICIsIGNvbnZlcnRBbm5v
dGF0aW9uc0xpc3QoKChBcnJheVR5cGUpIHR5cGUpLmFubm90YXRpb25zKCkpKTsKLQkJdHlwZSA9
ICgoQXJyYXlUeXBlKSB0eXBlKS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWFzc2VydEVxdWFscygi
SW5jb3JyZWN0IHR5cGUiLCB0cnVlLCB0eXBlLmlzQXJyYXlUeXBlKCkpOwotCQlhc3NlcnRFcXVh
bHMoIkluY29ycmVjdCBhbm5vdGF0aW9ucyIsICJATWFya2VyMiBATWFya2VyMyAiLCBjb252ZXJ0
QW5ub3RhdGlvbnNMaXN0KCgoQXJyYXlUeXBlKSB0eXBlKS5hbm5vdGF0aW9ucygpKSk7Ci0JCXR5
cGUgPSAoKEFycmF5VHlwZSkgdHlwZSkuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlhc3NlcnRFcXVh
bHMoIkluY29ycmVjdCB0eXBlIiwgdHJ1ZSwgdHlwZS5pc0FycmF5VHlwZSgpKTsKLQkJYXNzZXJ0
RXF1YWxzKCJJbmNvcnJlY3QgYW5ub3RhdGlvbnMiLCAiQE1hcmtlciBATWFya2VyMiAiLCBjb252
ZXJ0QW5ub3RhdGlvbnNMaXN0KCgoQXJyYXlUeXBlKSB0eXBlKS5hbm5vdGF0aW9ucygpKSk7CisJ
CUV4dHJhRGltZW5zaW9uIGV4dHJhRGltZW5zaW9uID0gKChBcnJheVR5cGUpIHR5cGUpLmdldERp
bWVuc2lvbkF0KDApOworCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCBhbm5vdGF0aW9ucyIsICJA
TWFya2VyMyBATWFya2VyICIsIGNvbnZlcnRBbm5vdGF0aW9uc0xpc3QoZXh0cmFEaW1lbnNpb24u
YW5ub3RhdGlvbnMoKSkpOworCQlleHRyYURpbWVuc2lvbiA9ICgoQXJyYXlUeXBlKSB0eXBlKS5n
ZXREaW1lbnNpb25BdCgxKTsKKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgYW5ub3RhdGlvbnMi
LCAiQE1hcmtlcjIgQE1hcmtlcjMgIiwgY29udmVydEFubm90YXRpb25zTGlzdChleHRyYURpbWVu
c2lvbi5hbm5vdGF0aW9ucygpKSk7CisJCWV4dHJhRGltZW5zaW9uID0gKChBcnJheVR5cGUpIHR5
cGUpLmdldERpbWVuc2lvbkF0KDIpOworCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCBhbm5vdGF0
aW9ucyIsICJATWFya2VyIEBNYXJrZXIyICIsIGNvbnZlcnRBbm5vdGF0aW9uc0xpc3QoZXh0cmFE
aW1lbnNpb24uYW5ub3RhdGlvbnMoKSkpOwogCQlMaXN0IGRpbWVuc2lvbnMgPSBjcmVhdGlvbi5k
aW1lbnNpb25zKCk7CiAJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IGV4cHJlc3Npb25zIiwgMiwg
ZGltZW5zaW9ucy5zaXplKCkpOwogCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCBleHByZXNzaW9u
cyIsICIyIiwgZGltZW5zaW9ucy5nZXQoMCkudG9TdHJpbmcoKSk7CkBAIC0xMTU5LDEzICsxMTU4
LDEyIEBACiAJCQogCQl0eXBlID0gY3JlYXRpb24uZ2V0VHlwZSgpOwogCQlhc3NlcnRFcXVhbHMo
IkluY29ycmVjdCB0eXBlIiwgdHJ1ZSwgdHlwZS5pc0FycmF5VHlwZSgpKTsKLQkJYXNzZXJ0RXF1
YWxzKCJJbmNvcnJlY3QgYW5ub3RhdGlvbnMiLCAiQE1hcmtlcjIgQE1hcmtlcjMgIiwgY29udmVy
dEFubm90YXRpb25zTGlzdCgoKEFycmF5VHlwZSkgdHlwZSkuYW5ub3RhdGlvbnMoKSkpOwotCQl0
eXBlID0gKChBcnJheVR5cGUpIHR5cGUpLmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNzZXJ0RXF1
YWxzKCJJbmNvcnJlY3QgdHlwZSIsIHRydWUsIHR5cGUuaXNBcnJheVR5cGUoKSk7Ci0JCWFzc2Vy
dEVxdWFscygiSW5jb3JyZWN0IGFubm90YXRpb25zIiwgIkBNYXJrZXIgQE1hcmtlcjIgIiwgY29u
dmVydEFubm90YXRpb25zTGlzdCgoKEFycmF5VHlwZSkgdHlwZSkuYW5ub3RhdGlvbnMoKSkpOwot
CQl0eXBlID0gKChBcnJheVR5cGUpIHR5cGUpLmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNzZXJ0
RXF1YWxzKCJJbmNvcnJlY3QgdHlwZSIsIHRydWUsIHR5cGUuaXNBcnJheVR5cGUoKSk7Ci0JCWFz
c2VydEVxdWFscygiSW5jb3JyZWN0IGFubm90YXRpb25zIiwgIkBNYXJrZXIzIEBNYXJrZXIgIiwg
Y29udmVydEFubm90YXRpb25zTGlzdCgoKEFycmF5VHlwZSkgdHlwZSkuYW5ub3RhdGlvbnMoKSkp
OworCQlleHRyYURpbWVuc2lvbiA9ICgoQXJyYXlUeXBlKSB0eXBlKS5nZXREaW1lbnNpb25BdCgw
KTsKKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgYW5ub3RhdGlvbnMiLCAiQE1hcmtlcjIgQE1h
cmtlcjMgIiwgY29udmVydEFubm90YXRpb25zTGlzdChleHRyYURpbWVuc2lvbi5hbm5vdGF0aW9u
cygpKSk7CisJCWV4dHJhRGltZW5zaW9uID0gKChBcnJheVR5cGUpIHR5cGUpLmdldERpbWVuc2lv
bkF0KDEpOworCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCBhbm5vdGF0aW9ucyIsICJATWFya2Vy
IEBNYXJrZXIyICIsIGNvbnZlcnRBbm5vdGF0aW9uc0xpc3QoZXh0cmFEaW1lbnNpb24uYW5ub3Rh
dGlvbnMoKSkpOworCQlleHRyYURpbWVuc2lvbiA9ICgoQXJyYXlUeXBlKSB0eXBlKS5nZXREaW1l
bnNpb25BdCgyKTsKKwkJYXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgYW5ub3RhdGlvbnMiLCAiQE1h
cmtlcjMgQE1hcmtlciAiLCBjb252ZXJ0QW5ub3RhdGlvbnNMaXN0KGV4dHJhRGltZW5zaW9uLmFu
bm90YXRpb25zKCkpKTsKIAkJZGltZW5zaW9ucyA9IGNyZWF0aW9uLmRpbWVuc2lvbnMoKTsKIAkJ
YXNzZXJ0RXF1YWxzKCJJbmNvcnJlY3QgZXhwcmVzc2lvbnMiLCAyLCBkaW1lbnNpb25zLnNpemUo
KSk7CiAJCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IGV4cHJlc3Npb25zIiwgIjIiLCBkaW1lbnNp
b25zLmdldCgwKS50b1N0cmluZygpKTsKQEAgLTEyMzYsMTIgKzEyMzQsNiBAQAogCQlWYXJpYWJs
ZURlY2xhcmF0aW9uRnJhZ21lbnQgZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdt
ZW50KSBsaXN0LmdldCgwKTsKIAkJQXJyYXlDcmVhdGlvbiBjcmVhdGlvbiA9IChBcnJheUNyZWF0
aW9uKSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOwogCQlUeXBlIHR5cGUgPSBjcmVhdGlvbi5n
ZXRUeXBlKCk7Ci0JCWFzc2VydEVxdWFscygiSW5jb3JyZWN0IHR5cGUiLCB0cnVlLCB0eXBlLmlz
QXJyYXlUeXBlKCkpOwotCQlhc3NlcnRFcXVhbHMoIlR5cGUgc2hvdWxkIGJlIG1hbGZvcm1lZCIs
IEFTVE5vZGUuTUFMRk9STUVELCAodHlwZS5nZXRGbGFncygpICYgQVNUTm9kZS5NQUxGT1JNRUQp
KTsKLQkJdHlwZSA9ICgoQXJyYXlUeXBlKSB0eXBlKS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWFz
c2VydEVxdWFscygiSW5jb3JyZWN0IHR5cGUiLCB0cnVlLCB0eXBlLmlzQXJyYXlUeXBlKCkpOwot
CQlhc3NlcnRFcXVhbHMoIlR5cGUgc2hvdWxkIGJlIG1hbGZvcm1lZCIsIEFTVE5vZGUuTUFMRk9S
TUVELCAodHlwZS5nZXRGbGFncygpICYgQVNUTm9kZS5NQUxGT1JNRUQpKTsKLQkJdHlwZSA9ICgo
QXJyYXlUeXBlKSB0eXBlKS5nZXRDb21wb25lbnRUeXBlKCk7CiAJCWFzc2VydEVxdWFscygiSW5j
b3JyZWN0IHR5cGUiLCB0cnVlLCB0eXBlLmlzQXJyYXlUeXBlKCkpOwogCQlhc3NlcnRFcXVhbHMo
IlR5cGUgc2hvdWxkIGJlIG1hbGZvcm1lZCIsIEFTVE5vZGUuTUFMRk9STUVELCAodHlwZS5nZXRG
bGFncygpICYgQVNUTm9kZS5NQUxGT1JNRUQpKTsKIAl9CkBAIC0xNjE0LDE0ICsxNjA2LDE0IEBA
CiAJCUV4cHJlc3Npb24gZXhwcmVzc2lvbiA9IGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CiAJ
CWFzc2VydFRydWUoZXhwcmVzc2lvbiBpbnN0YW5jZW9mIExhbWJkYUV4cHJlc3Npb24pOwogCQlM
YW1iZGFFeHByZXNzaW9uIGxhbWJkYUV4cHJlc3Npb24gPSAoTGFtYmRhRXhwcmVzc2lvbilleHBy
ZXNzaW9uOwotCQlhc3NlcnRFcXVhbHMoIihpbnRbXSBpYSkgLT4ge1xuICByZXR1cm4gaWEuY2xv
bmUoKTtcbn1cbiIsIGxhbWJkYUV4cHJlc3Npb24udG9TdHJpbmcoKSk7CisJCWFzc2VydEVxdWFs
cygiKGludCBbXSBpYSkgLT4ge1xuICByZXR1cm4gaWEuY2xvbmUoKTtcbn1cbiIsIGxhbWJkYUV4
cHJlc3Npb24udG9TdHJpbmcoKSk7CiAJCUlNZXRob2RCaW5kaW5nIGJpbmRpbmcgPSBsYW1iZGFF
eHByZXNzaW9uLnJlc29sdmVNZXRob2RCaW5kaW5nKCk7CiAJCWFzc2VydEVxdWFscygicHJpdmF0
ZSBzdGF0aWMgamF2YS5sYW5nLk9iamVjdCBsYW1iZGEkMChpbnRbXSkgIiwgYmluZGluZy50b1N0
cmluZygpKTsKIAkJYXNzZXJ0VHJ1ZShsYW1iZGFFeHByZXNzaW9uLnBhcmFtZXRlcnMoKS5zaXpl
KCkgPT0gMSk7CiAJCVZhcmlhYmxlRGVjbGFyYXRpb24gdmFyaWFibGVEZWNsYXJhdGlvbiA9IChW
YXJpYWJsZURlY2xhcmF0aW9uKSBsYW1iZGFFeHByZXNzaW9uLnBhcmFtZXRlcnMoKS5nZXQoMCk7
CiAJCWFzc2VydFRydWUodmFyaWFibGVEZWNsYXJhdGlvbiBpbnN0YW5jZW9mIFNpbmdsZVZhcmlh
YmxlRGVjbGFyYXRpb24pOwogCQlTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uIHNpbmdsZVZhcmlh
YmxlRGVjbGFyYXRpb24gPSAoU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbil2YXJpYWJsZURlY2xh
cmF0aW9uOwotCQlhc3NlcnRFcXVhbHMoImludFtdIGlhIiwgc2luZ2xlVmFyaWFibGVEZWNsYXJh
dGlvbi50b1N0cmluZygpKTsJCQorCQlhc3NlcnRFcXVhbHMoImludCBbXSBpYSIsIHNpbmdsZVZh
cmlhYmxlRGVjbGFyYXRpb24udG9TdHJpbmcoKSk7CQkKIAl9CiAKIAkvKioKQEAgLTI2NTMsNSAr
MjY0NSwyMzIgQEAKIAkJdHlwZUJpbmRpbmcgPSB0eXBlLnJlc29sdmVCaW5kaW5nKCk7CiAJCWFz
c2VydEZhbHNlKCJBIEZ1bmN0aW9uYWwgaW50ZXJmYWNlIiwgdHlwZUJpbmRpbmcuaXNGdW5jdGlv
bmFsSW50ZXJmYWNlKCkpOwogCX0KKwkvLyBodHRwczovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9z
aG93X2J1Zy5jZ2k/aWQ9NDEzOTQyCisJLy8gYWxzbyByZWZlciBodHRwczovL2J1Z3MuZWNsaXBz
ZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9NDEzNTY5CisJcHVibGljIHZvaWQgdGVzdEJ1ZzQx
Mzk0MigpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlTdHJpbmcgY29udGVudHMgPQor
CQkicHVibGljIGNsYXNzIFggZXh0ZW5kcyBATm9uTnVsbChpbnRbXS5jbGFzcykgT2JqZWN0IHtc
biIgKworCQkiICAgIE9iamVjdCBmaWVsZCA9IG5ldyBBcnJheUxpc3Q8IEBOb25FbXB0eSgwKSBp
bnQgQE5vbk51bGwodmFsdWUxID0gMSkgW10gQE5vbkVtcHR5KDEpIFsgXT4oKSA7XG4iICsKKwkJ
IiAgICBAQW5ub3QgaW50IEBBbm5vdDEgW10gYTEgQEFubm90MiBAQW5ub3QzIEBOb25OdWxsICh2
YWx1ZSA9IGludFtdLmNsYXNzLCB2YWx1ZTEgPSAwKVsvKiBbXSAqLyBdIEBBbm5vdDMgQEFubm90
MiBbXSBAQW5ub3Q0IFtdO1xuIiArCisJCSIgICAgaW50W10geHh4W107XG4iICsKKwkJIiAgICBp
bnQgW11bXSBpaSA9IG5ldyBpbnRbMl1bM107IiArCisJCSIgICAgQXJyYXlMaXN0PGludFtdPiBb
XVtdIHl5eTsgLy8gc291cmNlIHJhbmdlcyBhbHJlYWR5IGJyb2tlbiBpbiBBU1QuSkxTNFxuIiAr
CisJCSIgICAgQXJyYXlMaXN0PGludFtdW10+IFtdW11bXVtdIHp6ejtcbiIgKworCQkiICAgIEFy
cmF5TGlzdDxGbG9hdD4gW11bXVtdIHp6ejI7XG4iICsKKwkJIiAgICBPYmplY3QgYSA9IG5ldyBB
cnJheUxpc3Q8IEBUYWtlVHlwZShpbnRbXVtdLmNsYXNzKSBpbnQgQFRha2VUeXBlKGZsb2F0LmNs
YXNzKSBbXSBAVGFrZVR5cGUoZG91YmxlLmNsYXNzKSBbXT4oKSA7XG4iICsKKwkJIiAgICBPYmpl
Y3QgYiA9IG5ldyBATm9uTnVsbCh2YWx1ZTEgPSBNYXRoLlBJKSBBcnJheUxpc3Q8ID4oKSA7IFxu
IiArCisJCSIgICAgT2JqZWN0IGMgPSBuZXcgQXJyYXlMaXN0PEBOb25OdWxsKHZhbHVlMT0gTWF0
aC5QSSApIE9iamVjdFtdPigpIDtcbiIgKworCQkiXG4iICsKKwkJIiAgICBpbnQgZm9vKEBUYWtl
VHlwZShpbnRbXS5jbGFzcylpbnQgaSApIEBUYWtlVHlwZShpbnRbXS5jbGFzcykgW10ge1xuIiAr
CisJCSIgICAgICAgIGludFtdIGFyciA9ICBuZXcgaW50WzJdO1xuIiArCisJCSIgICAgICAgIGZv
ciAoU3RyaW5nIHRhYiBAVGFrZVR5cGUoaW50W10uY2xhc3MpIFtdID0gbnVsbDs7ICsraSkgeyBi
cmVhazsgfVxuIiArCisJCSIgICAgICAgIGZvciAoQERlcHJlY2F0ZWQgU3RyaW5nIHRhYkBUYWtl
VHlwZShpbnRbXS5jbGFzcykgW11bXSAgPSBudWxsOzsgKytpKSB7fVxuIiArCisJCSIgICAgfVxu
IiArCisJCSIgICAgaW50IGJhcihpbnQgW10gLypAVGFrZVR5cGUoaW50W10uY2xhc3MpKi8gW10g
YSApIHtcbiIgKworCQkiICAgIAlyZXR1cm4gMDtcbiIgKworCQkiICAgIH1cbiIgKworCQkicHVi
bGljIGludCB2YXIxKGludCBAVGFrZVR5cGUoaW50W10uY2xhc3MpLi4uIGFyZ3MpIHsgcmV0dXJu
IDA7fVxuIiArCisJCSJwdWJsaWMgaW50IHZhcjIoaW50IEBBbm5vdCAuLi4gYXJncykgeyByZXR1
cm4gMDt9XG4iICsKKwkJIn1cbiIgKworCQkiXG4iICsKKwkJIkBUYXJnZXQoRWxlbWVudFR5cGUu
VFlQRV9VU0UpXG4iICsKKwkJIkBSZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LlJVTlRJTUUpXG4i
ICsKKwkJIkBEb2N1bWVudGVkXG4iICsKKwkJIkBpbnRlcmZhY2UgTm9uTnVsbCB7XG4iICsKKwkJ
IglDbGFzcyB2YWx1ZSgpIGRlZmF1bHQgaW50LmNsYXNzO1xuIiArCisJCSIJZG91YmxlIHZhbHVl
MSgpIGRlZmF1bHQgMDtcbiIgKworCQkifVxuIiArCisJCSJcbiIgKworCQkiQFRhcmdldChFbGVt
ZW50VHlwZS5UWVBFX1VTRSlcbiIgKworCQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3kuUlVO
VElNRSlcbiIgKworCQkiQERvY3VtZW50ZWRcbiIgKworCQkiQGludGVyZmFjZSBOb25FbXB0eSB7
XG4iICsKKwkJIglpbnQgdmFsdWUoKSBkZWZhdWx0IDA7XG4iICsKKwkJIn1cbiIgKworCQkiXG4i
ICsKKwkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJIkBSZXRlbnRpb24o
UmV0ZW50aW9uUG9saWN5LlJVTlRJTUUpXG4iICsKKwkJIkBEb2N1bWVudGVkXG4iICsKKwkJIkBp
bnRlcmZhY2UgVGFrZVR5cGUge1xuIiArCisJCSIJQ2xhc3MgdmFsdWUoKSBkZWZhdWx0IGludFtd
LmNsYXNzO1xuIiArCisJCSJ9XG4iICsKKwkJIlxuIiArCisJCSJAVGFyZ2V0KEVsZW1lbnRUeXBl
LlRZUEVfVVNFKVxuIiArCisJCSJAUmV0ZW50aW9uKFJldGVudGlvblBvbGljeS5SVU5USU1FKVxu
IiArCisJCSJARG9jdW1lbnRlZFxuIiArCisJCSJAaW50ZXJmYWNlIEFubm90IHt9XG4iICsKKwkJ
IlxuIiArCisJCSJAVGFyZ2V0KEVsZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCSJAUmV0ZW50
aW9uKFJldGVudGlvblBvbGljeS5SVU5USU1FKVxuIiArCisJCSJARG9jdW1lbnRlZFxuIiArCisJ
CSJAaW50ZXJmYWNlIEFubm90MSB7fVxuIiArCisJCSJcbiIgKworCQkiQFRhcmdldChFbGVtZW50
VHlwZS5UWVBFX1VTRSlcbiIgKworCQkiQFJldGVudGlvbihSZXRlbnRpb25Qb2xpY3kuUlVOVElN
RSlcbiIgKworCQkiQERvY3VtZW50ZWRcbiIgKworCQkiQGludGVyZmFjZSBBbm5vdDIge31cbiIg
KworCQkiXG4iICsKKwkJIkBUYXJnZXQoRWxlbWVudFR5cGUuVFlQRV9VU0UpXG4iICsKKwkJIkBS
ZXRlbnRpb24oUmV0ZW50aW9uUG9saWN5LlJVTlRJTUUpXG4iICsKKwkJIkBEb2N1bWVudGVkXG4i
ICsKKwkJIkBpbnRlcmZhY2UgQW5ub3QzIHt9XG4iICsKKwkJIlxuIiArCisJCSJAVGFyZ2V0KEVs
ZW1lbnRUeXBlLlRZUEVfVVNFKVxuIiArCisJCSJAUmV0ZW50aW9uKFJldGVudGlvblBvbGljeS5S
VU5USU1FKVxuIiArCisJCSJARG9jdW1lbnRlZFxuIiArCisJCSJAaW50ZXJmYWNlIEFubm90NCB7
fVxuIiArCisJCSJcbiI7CisJCXRoaXMud29ya2luZ0NvcHkgPSBnZXRXb3JraW5nQ29weSgiL0Nv
bnZlcnRlcjE4L3NyYy9YLmphdmEiLCB0cnVlKTsKKwkJQVNUTm9kZSBub2RlID0gYnVpbGRBU1Qo
Y29udGVudHMsIHRoaXMud29ya2luZ0NvcHksIGZhbHNlKTsKKwkJYXNzZXJ0RXF1YWxzKCJOb3Qg
YSBjb21waWxhdGlvbiB1bml0IiwgQVNUTm9kZS5DT01QSUxBVElPTl9VTklULCBub2RlLmdldE5v
ZGVUeXBlKCkpOworCQlDb21waWxhdGlvblVuaXQgdW5pdCA9IChDb21waWxhdGlvblVuaXQpIG5v
ZGU7CisJCQorCQlUeXBlRGVjbGFyYXRpb24gdHlwZSA9ICAoVHlwZURlY2xhcmF0aW9uKSB1bml0
LnR5cGVzKCkuZ2V0KDApOworCQlTaW1wbGVUeXBlIHNpbXBsZVR5cGUgPSAgKFNpbXBsZVR5cGUp
IHR5cGUuZ2V0U3VwZXJjbGFzc1R5cGUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShzaW1wbGVUeXBl
LCAiQE5vbk51bGwoaW50W10uY2xhc3MpIE9iamVjdCIsIGNvbnRlbnRzKTsKKwkJU2luZ2xlTWVt
YmVyQW5ub3RhdGlvbiBzaW5nbGVNZW1iZXJBbm5vdGF0aW9uID0gKFNpbmdsZU1lbWJlckFubm90
YXRpb24pIHNpbXBsZVR5cGUuYW5ub3RhdGlvbnMoKS5nZXQoMCk7CisJCWNoZWNrU291cmNlUmFu
Z2Uoc2luZ2xlTWVtYmVyQW5ub3RhdGlvbiwgIkBOb25OdWxsKGludFtdLmNsYXNzKSIsIGNvbnRl
bnRzKTsKKwkJVHlwZUxpdGVyYWwgdHlwZUxpdGVyYWwgPSAoVHlwZUxpdGVyYWwpIHNpbmdsZU1l
bWJlckFubm90YXRpb24uZ2V0VmFsdWUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlTGl0ZXJh
bCwgImludFtdLmNsYXNzIiwgY29udGVudHMpOworCQlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFy
cmF5VHlwZSkgdHlwZUxpdGVyYWwuZ2V0VHlwZSgpOworCQljaGVja1NvdXJjZVJhbmdlKGFycmF5
VHlwZSwgImludFtdIiwgY29udGVudHMpOworCQkKKwkJaW50IGNvdW50ID0gMDsKKwkJRmllbGRE
ZWNsYXJhdGlvbiBmaWVsZCA9IChGaWVsZERlY2xhcmF0aW9uKSB0eXBlLmJvZHlEZWNsYXJhdGlv
bnMoKS5nZXQoY291bnQrKyk7CisJCWNoZWNrU291cmNlUmFuZ2UoZmllbGQsICJPYmplY3QgZmll
bGQgPSBuZXcgQXJyYXlMaXN0PCBATm9uRW1wdHkoMCkgaW50IEBOb25OdWxsKHZhbHVlMSA9IDEp
IFtdIEBOb25FbXB0eSgxKSBbIF0+KCkgOyIsIGNvbnRlbnRzKTsKKwkJVmFyaWFibGVEZWNsYXJh
dGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZmll
bGQuZnJhZ21lbnRzKCkuZ2V0KDApOworCQlDbGFzc0luc3RhbmNlQ3JlYXRpb24gaW5zdGFuY2Ug
PSAoQ2xhc3NJbnN0YW5jZUNyZWF0aW9uKSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlQ
YXJhbWV0ZXJpemVkVHlwZSBwYXJhbWV0ZXJpemVkVHlwZSA9IChQYXJhbWV0ZXJpemVkVHlwZSkg
aW5zdGFuY2UuZ2V0VHlwZSgpOworCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBwYXJhbWV0ZXJp
emVkVHlwZS50eXBlQXJndW1lbnRzKCkuZ2V0KDApOworCQljaGVja1NvdXJjZVJhbmdlKGFycmF5
VHlwZSwgIkBOb25FbXB0eSgwKSBpbnQgQE5vbk51bGwodmFsdWUxID0gMSkgW10gQE5vbkVtcHR5
KDEpIFsgXSIsIGNvbnRlbnRzKTsKKwkJUHJpbWl0aXZlVHlwZSBwcmltaXRpdmVUeXBlID0gKFBy
aW1pdGl2ZVR5cGUpIGFycmF5VHlwZS5nZXRFbGVtZW50VHlwZSgpOworCQljaGVja1NvdXJjZVJh
bmdlKHByaW1pdGl2ZVR5cGUsICJATm9uRW1wdHkoMCkgaW50IiwgY29udGVudHMpOworCQlFeHRy
YURpbWVuc2lvbiBleHRyYURpbWVuc2lvbiA9IGFycmF5VHlwZS5nZXREaW1lbnNpb25BdCgxKTsK
KwkJY2hlY2tTb3VyY2VSYW5nZShleHRyYURpbWVuc2lvbiwgIkBOb25OdWxsKHZhbHVlMSA9IDEp
IFtdIiwgY29udGVudHMpOworCQlleHRyYURpbWVuc2lvbiA9IGFycmF5VHlwZS5nZXREaW1lbnNp
b25BdCgwKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShleHRyYURpbWVuc2lvbiwgIkBOb25FbXB0eSgx
KSBbIF0iLCBjb250ZW50cyk7CisJCQorCQlmaWVsZCA9IChGaWVsZERlY2xhcmF0aW9uKSB0eXBl
LmJvZHlEZWNsYXJhdGlvbnMoKS5nZXQoY291bnQrKyk7CisJCWNoZWNrU291cmNlUmFuZ2UoZmll
bGQsICJAQW5ub3QgaW50IEBBbm5vdDEgW10gYTEgQEFubm90MiBAQW5ub3QzIEBOb25OdWxsICh2
YWx1ZSA9IGludFtdLmNsYXNzLCB2YWx1ZTEgPSAwKVsvKiBbXSAqLyBdIEBBbm5vdDMgQEFubm90
MiBbXSBAQW5ub3Q0IFtdOyIsIGNvbnRlbnRzKTsKKwkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkg
ZmllbGQuZ2V0VHlwZSgpOworCQljaGVja1NvdXJjZVJhbmdlKGFycmF5VHlwZSwgImludCBAQW5u
b3QxIFtdIiwgY29udGVudHMpOworCQlmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJh
Z21lbnQpIGZpZWxkLmZyYWdtZW50cygpLmdldCgwKTsKKwkJZXh0cmFEaW1lbnNpb24gPSAoRXh0
cmFEaW1lbnNpb24pIGZyYWdtZW50LmV4dHJhRGltZW5zaW9ucygpLmdldCgwKTsKKwkJY2hlY2tT
b3VyY2VSYW5nZShleHRyYURpbWVuc2lvbiwgIkBBbm5vdDIgQEFubm90MyBATm9uTnVsbCAodmFs
dWUgPSBpbnRbXS5jbGFzcywgdmFsdWUxID0gMClbLyogW10gKi8gXSIsIGNvbnRlbnRzKTsKKwkJ
ZXh0cmFEaW1lbnNpb24gPSAoRXh0cmFEaW1lbnNpb24pIGZyYWdtZW50LmV4dHJhRGltZW5zaW9u
cygpLmdldCgxKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShleHRyYURpbWVuc2lvbiwgIkBBbm5vdDMg
QEFubm90MiBbXSIsIGNvbnRlbnRzKTsKKwkJCisJCWZpZWxkID0gKEZpZWxkRGVjbGFyYXRpb24p
IHR5cGUuYm9keURlY2xhcmF0aW9ucygpLmdldChjb3VudCsrKTsKKwkJY2hlY2tTb3VyY2VSYW5n
ZShmaWVsZCwgImludFtdIHh4eFtdOyIsIGNvbnRlbnRzKTsKKwkJYXNzZXJ0VHJ1ZShmaWVsZC5n
ZXRUeXBlKCkuaXNBcnJheVR5cGUoKSk7CisJCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGZpZWxk
LmdldFR5cGUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShhcnJheVR5cGUsICJpbnRbXSIsIGNvbnRl
bnRzKTsKKwkJCisJCWZpZWxkID0gKEZpZWxkRGVjbGFyYXRpb24pIHR5cGUuYm9keURlY2xhcmF0
aW9ucygpLmdldChjb3VudCsrKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShmaWVsZCwgImludCBbXVtd
IGlpID0gbmV3IGludFsyXVszXTsiLCBjb250ZW50cyk7CisJCWFycmF5VHlwZSA9IChBcnJheVR5
cGUpIGZpZWxkLmdldFR5cGUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShhcnJheVR5cGUsICJpbnQg
W11bXSIsIGNvbnRlbnRzKTsKKwkJZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdt
ZW50KSBmaWVsZC5mcmFnbWVudHMoKS5nZXQoMCk7CisJCUFycmF5Q3JlYXRpb24gYXJyYXlDcmVh
dGlvbiA9IChBcnJheUNyZWF0aW9uKSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOworCQlhcnJh
eVR5cGUgPSBhcnJheUNyZWF0aW9uLmdldFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZShhcnJheVR5cGUu
Z2V0RWxlbWVudFR5cGUoKS5pc1ByaW1pdGl2ZVR5cGUoKSk7CisJCWFzc2VydFRydWUoYXJyYXlU
eXBlLmdldERpbWVuc2lvbnMoKSA9PSAyKTsKKwkJCisJCWZpZWxkID0gKEZpZWxkRGVjbGFyYXRp
b24pIHR5cGUuYm9keURlY2xhcmF0aW9ucygpLmdldChjb3VudCsrKTsKKwkJY2hlY2tTb3VyY2VS
YW5nZShmaWVsZCwgIkFycmF5TGlzdDxpbnRbXT4gW11bXSB5eXk7IiwgY29udGVudHMpOworCQlh
cnJheVR5cGUgPSAoQXJyYXlUeXBlKSBmaWVsZC5nZXRUeXBlKCk7CisJCWNoZWNrU291cmNlUmFu
Z2UoYXJyYXlUeXBlLCAiQXJyYXlMaXN0PGludFtdPiBbXVtdIiwgY29udGVudHMpOworCisJCWZp
ZWxkID0gKEZpZWxkRGVjbGFyYXRpb24pIHR5cGUuYm9keURlY2xhcmF0aW9ucygpLmdldChjb3Vu
dCsrKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShmaWVsZCwgIkFycmF5TGlzdDxpbnRbXVtdPiBbXVtd
W11bXSB6eno7IiwgY29udGVudHMpOworCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBmaWVsZC5n
ZXRUeXBlKCk7CisJCWFzc2VydFRydWUoYXJyYXlUeXBlLmdldEVsZW1lbnRUeXBlKCkuaXNQYXJh
bWV0ZXJpemVkVHlwZSgpKTsKKwkJYXNzZXJ0VHJ1ZShhcnJheVR5cGUuZ2V0RGltZW5zaW9ucygp
ID09IDQpOworCQkKKwkJZmllbGQgPSAoRmllbGREZWNsYXJhdGlvbikgdHlwZS5ib2R5RGVjbGFy
YXRpb25zKCkuZ2V0KGNvdW50KyspOworCQljaGVja1NvdXJjZVJhbmdlKGZpZWxkLCAiQXJyYXlM
aXN0PEZsb2F0PiBbXVtdW10genp6MjsiLCBjb250ZW50cyk7CisJCWFycmF5VHlwZSA9IChBcnJh
eVR5cGUpIGZpZWxkLmdldFR5cGUoKTsKKwkJYXNzZXJ0VHJ1ZShhcnJheVR5cGUuZ2V0RWxlbWVu
dFR5cGUoKS5pc1BhcmFtZXRlcml6ZWRUeXBlKCkpOworCQlhc3NlcnRUcnVlKGFycmF5VHlwZS5n
ZXREaW1lbnNpb25zKCkgPT0gMyk7CisJCQorCQlmaWVsZCA9IChGaWVsZERlY2xhcmF0aW9uKSB0
eXBlLmJvZHlEZWNsYXJhdGlvbnMoKS5nZXQoY291bnQrKyk7CisJCWNoZWNrU291cmNlUmFuZ2Uo
ZmllbGQsICJPYmplY3QgYSA9IG5ldyBBcnJheUxpc3Q8IEBUYWtlVHlwZShpbnRbXVtdLmNsYXNz
KSBpbnQgQFRha2VUeXBlKGZsb2F0LmNsYXNzKSBbXSBAVGFrZVR5cGUoZG91YmxlLmNsYXNzKSBb
XT4oKSA7IiwgY29udGVudHMpOworCQlmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJh
Z21lbnQpIGZpZWxkLmZyYWdtZW50cygpLmdldCgwKTsKKwkJQ2xhc3NJbnN0YW5jZUNyZWF0aW9u
IGNsYXNzSW5zdGFuY2VDcmVhdGlvbiA9IChDbGFzc0luc3RhbmNlQ3JlYXRpb24pIGZyYWdtZW50
LmdldEluaXRpYWxpemVyKCk7CisJCXBhcmFtZXRlcml6ZWRUeXBlID0gKFBhcmFtZXRlcml6ZWRU
eXBlKSBjbGFzc0luc3RhbmNlQ3JlYXRpb24uZ2V0VHlwZSgpOworCQlhcnJheVR5cGUgPSAoQXJy
YXlUeXBlKSBwYXJhbWV0ZXJpemVkVHlwZS50eXBlQXJndW1lbnRzKCkuZ2V0KDApOworCQljaGVj
a1NvdXJjZVJhbmdlKGFycmF5VHlwZSwgIkBUYWtlVHlwZShpbnRbXVtdLmNsYXNzKSBpbnQgQFRh
a2VUeXBlKGZsb2F0LmNsYXNzKSBbXSBAVGFrZVR5cGUoZG91YmxlLmNsYXNzKSBbXSIsIGNvbnRl
bnRzKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShhcnJheVR5cGUuZ2V0RWxlbWVudFR5cGUoKSwgIkBU
YWtlVHlwZShpbnRbXVtdLmNsYXNzKSBpbnQiLCBjb250ZW50cyk7CisJCWFzc2VydFRydWUoYXJy
YXlUeXBlLmdldEVsZW1lbnRUeXBlKCkuaXNQcmltaXRpdmVUeXBlKCkpOworCQlleHRyYURpbWVu
c2lvbiA9IGFycmF5VHlwZS5nZXREaW1lbnNpb25BdCgxKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShl
eHRyYURpbWVuc2lvbiwgIkBUYWtlVHlwZShmbG9hdC5jbGFzcykgW10iLCBjb250ZW50cyk7CisJ
CWV4dHJhRGltZW5zaW9uID0gYXJyYXlUeXBlLmdldERpbWVuc2lvbkF0KDApOworCQlBbm5vdGF0
aW9uIGFubm90YXRpb24gPSAoQW5ub3RhdGlvbikgZXh0cmFEaW1lbnNpb24uYW5ub3RhdGlvbnMo
KS5nZXQoMCk7CisJCWFzc2VydFRydWUoYW5ub3RhdGlvbi5pc1NpbmdsZU1lbWJlckFubm90YXRp
b24oKSk7CisJCXNpbmdsZU1lbWJlckFubm90YXRpb24gPSAoU2luZ2xlTWVtYmVyQW5ub3RhdGlv
bikgYW5ub3RhdGlvbjsKKwkJdHlwZUxpdGVyYWwgPSAoVHlwZUxpdGVyYWwpIHNpbmdsZU1lbWJl
ckFubm90YXRpb24uZ2V0VmFsdWUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlTGl0ZXJhbCwg
ImRvdWJsZS5jbGFzcyIsIGNvbnRlbnRzKTsKKwkJCisJCWZpZWxkID0gKEZpZWxkRGVjbGFyYXRp
b24pIHR5cGUuYm9keURlY2xhcmF0aW9ucygpLmdldChjb3VudCsrKTsKKwkJY2hlY2tTb3VyY2VS
YW5nZShmaWVsZCwgIk9iamVjdCBiID0gbmV3IEBOb25OdWxsKHZhbHVlMSA9IE1hdGguUEkpIEFy
cmF5TGlzdDwgPigpIDsiLCBjb250ZW50cyk7CisJCWZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFy
YXRpb25GcmFnbWVudCkgZmllbGQuZnJhZ21lbnRzKCkuZ2V0KDApOworCQljbGFzc0luc3RhbmNl
Q3JlYXRpb24gPSAoQ2xhc3NJbnN0YW5jZUNyZWF0aW9uKSBmcmFnbWVudC5nZXRJbml0aWFsaXpl
cigpOworCQlwYXJhbWV0ZXJpemVkVHlwZSA9IChQYXJhbWV0ZXJpemVkVHlwZSkgY2xhc3NJbnN0
YW5jZUNyZWF0aW9uLmdldFR5cGUoKTsKKwkJY2hlY2tTb3VyY2VSYW5nZShwYXJhbWV0ZXJpemVk
VHlwZS5nZXRUeXBlKCksICJATm9uTnVsbCh2YWx1ZTEgPSBNYXRoLlBJKSBBcnJheUxpc3QiLCBj
b250ZW50cyk7CisJCQorCQlmaWVsZCA9IChGaWVsZERlY2xhcmF0aW9uKSB0eXBlLmJvZHlEZWNs
YXJhdGlvbnMoKS5nZXQoY291bnQrKyk7CisJCWNoZWNrU291cmNlUmFuZ2UoZmllbGQsICJPYmpl
Y3QgYyA9IG5ldyBBcnJheUxpc3Q8QE5vbk51bGwodmFsdWUxPSBNYXRoLlBJICkgT2JqZWN0W10+
KCkgOyIsIGNvbnRlbnRzKTsKKwkJZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdt
ZW50KSBmaWVsZC5mcmFnbWVudHMoKS5nZXQoMCk7CisJCWNsYXNzSW5zdGFuY2VDcmVhdGlvbiA9
IChDbGFzc0luc3RhbmNlQ3JlYXRpb24pIGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CisJCXBh
cmFtZXRlcml6ZWRUeXBlID0gKFBhcmFtZXRlcml6ZWRUeXBlKSBjbGFzc0luc3RhbmNlQ3JlYXRp
b24uZ2V0VHlwZSgpOworCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBwYXJhbWV0ZXJpemVkVHlw
ZS50eXBlQXJndW1lbnRzKCkuZ2V0KDApOworCQlhc3NlcnRUcnVlKGFycmF5VHlwZS5nZXREaW1l
bnNpb25zKCkgPT0gMSk7CisJCQorCQlNZXRob2REZWNsYXJhdGlvbiBtZXRob2QgPSAoTWV0aG9k
RGVjbGFyYXRpb24pIHR5cGUuYm9keURlY2xhcmF0aW9ucygpLmdldChjb3VudCsrKTsKKwkJZXh0
cmFEaW1lbnNpb24gPSAoRXh0cmFEaW1lbnNpb24pIG1ldGhvZC5leHRyYURpbWVuc2lvbnMoKS5n
ZXQoMCk7CisJCWNoZWNrU291cmNlUmFuZ2UoZXh0cmFEaW1lbnNpb24sICJAVGFrZVR5cGUoaW50
W10uY2xhc3MpIFtdIiwgY29udGVudHMpOworCQlzaW5nbGVNZW1iZXJBbm5vdGF0aW9uID0gKFNp
bmdsZU1lbWJlckFubm90YXRpb24pIGV4dHJhRGltZW5zaW9uLmFubm90YXRpb25zKCkuZ2V0KDAp
OworCQl0eXBlTGl0ZXJhbCA9IChUeXBlTGl0ZXJhbCkgc2luZ2xlTWVtYmVyQW5ub3RhdGlvbi5n
ZXRWYWx1ZSgpOworCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlTGl0ZXJhbC5nZXRUeXBl
KCk7CisJCWFzc2VydFRydWUoYXJyYXlUeXBlLmdldEVsZW1lbnRUeXBlKCkuaXNQcmltaXRpdmVU
eXBlKCkpOworCQlhc3NlcnRUcnVlKGFycmF5VHlwZS5nZXREaW1lbnNpb25zKCkgPT0gMSk7CisJ
CVNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24gc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiA9IChT
aW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uKSBtZXRob2QucGFyYW1ldGVycygpLmdldCgwKTsKKwkJ
c2luZ2xlTWVtYmVyQW5ub3RhdGlvbiA9IChTaW5nbGVNZW1iZXJBbm5vdGF0aW9uKSBzaW5nbGVW
YXJpYWJsZURlY2xhcmF0aW9uLm1vZGlmaWVycygpLmdldCgwKTsKKwkJY2hlY2tTb3VyY2VSYW5n
ZShzaW5nbGVNZW1iZXJBbm5vdGF0aW9uLCAiQFRha2VUeXBlKGludFtdLmNsYXNzKSIsIGNvbnRl
bnRzKTsKKwkJdHlwZUxpdGVyYWwgPSAoVHlwZUxpdGVyYWwpIHNpbmdsZU1lbWJlckFubm90YXRp
b24uZ2V0VmFsdWUoKTsKKwkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZUxpdGVyYWwuZ2V0
VHlwZSgpOworCQlhc3NlcnRUcnVlKGFycmF5VHlwZS5nZXRFbGVtZW50VHlwZSgpLmlzUHJpbWl0
aXZlVHlwZSgpKTsKKwkJYXNzZXJ0VHJ1ZShhcnJheVR5cGUuZ2V0RGltZW5zaW9ucygpID09IDEp
OworCQlGb3JTdGF0ZW1lbnQgZm9yU3RhdGVtZW50ID0gKEZvclN0YXRlbWVudCkgbWV0aG9kLmdl
dEJvZHkoKS5zdGF0ZW1lbnRzKCkuZ2V0KDEpOworCQlWYXJpYWJsZURlY2xhcmF0aW9uRXhwcmVz
c2lvbiB2YXJpYWJsZURlY2xhcmF0aW9uRXhwcmVzc2lvbiA9IChWYXJpYWJsZURlY2xhcmF0aW9u
RXhwcmVzc2lvbikgZm9yU3RhdGVtZW50LmluaXRpYWxpemVycygpLmdldCgwKTsKKwkJZnJhZ21l
bnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSB2YXJpYWJsZURlY2xhcmF0aW9uRXhw
cmVzc2lvbi5mcmFnbWVudHMoKS5nZXQoMCk7CisJCWV4dHJhRGltZW5zaW9uID0gKEV4dHJhRGlt
ZW5zaW9uKSBmcmFnbWVudC5leHRyYURpbWVuc2lvbnMoKS5nZXQoMCk7CisJCWNoZWNrU291cmNl
UmFuZ2UoZXh0cmFEaW1lbnNpb24sICJAVGFrZVR5cGUoaW50W10uY2xhc3MpIFtdIiwgY29udGVu
dHMpOworCQlmb3JTdGF0ZW1lbnQgPSAoRm9yU3RhdGVtZW50KSBtZXRob2QuZ2V0Qm9keSgpLnN0
YXRlbWVudHMoKS5nZXQoMSk7CisJCXZhcmlhYmxlRGVjbGFyYXRpb25FeHByZXNzaW9uID0gKFZh
cmlhYmxlRGVjbGFyYXRpb25FeHByZXNzaW9uKSBmb3JTdGF0ZW1lbnQuaW5pdGlhbGl6ZXJzKCku
Z2V0KDApOworCQlmcmFnbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIHZhcmlh
YmxlRGVjbGFyYXRpb25FeHByZXNzaW9uLmZyYWdtZW50cygpLmdldCgwKTsKKwkJZXh0cmFEaW1l
bnNpb24gPSAoRXh0cmFEaW1lbnNpb24pIGZyYWdtZW50LmV4dHJhRGltZW5zaW9ucygpLmdldCgw
KTsKKwkJY2hlY2tTb3VyY2VSYW5nZShleHRyYURpbWVuc2lvbiwgIkBUYWtlVHlwZShpbnRbXS5j
bGFzcykgW10iLCBjb250ZW50cyk7CisJCQorCQltZXRob2QgPSAoTWV0aG9kRGVjbGFyYXRpb24p
IHR5cGUuYm9keURlY2xhcmF0aW9ucygpLmdldChjb3VudCsrKTsKKwkJc2luZ2xlVmFyaWFibGVE
ZWNsYXJhdGlvbiA9IChTaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uKSBtZXRob2QucGFyYW1ldGVy
cygpLmdldCgwKTsKKwkJLy8gdGVzdCBjYXNlIGFjdGl2ZSBvbmx5IGFmdGVyIGJ1ZyA0MTc2NjAg
aXMgZml4ZWQgKHVuY29tbWVudCkKKwkJY2hlY2tTb3VyY2VSYW5nZShzaW5nbGVWYXJpYWJsZURl
Y2xhcmF0aW9uLCAiaW50IFtdIC8qQFRha2VUeXBlKGludFtdLmNsYXNzKSovIFtdIGEiLCBjb250
ZW50cyk7CisJCQorCQltZXRob2QgPSAoTWV0aG9kRGVjbGFyYXRpb24pIHR5cGUuYm9keURlY2xh
cmF0aW9ucygpLmdldChjb3VudCsrKTsKKwkJc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbiA9IChT
aW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uKSBtZXRob2QucGFyYW1ldGVycygpLmdldCgwKTsKKwkJ
Y2hlY2tTb3VyY2VSYW5nZShzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLCAiaW50IEBUYWtlVHlw
ZShpbnRbXS5jbGFzcykuLi4gYXJncyIsIGNvbnRlbnRzKTsKKwkJc2luZ2xlTWVtYmVyQW5ub3Rh
dGlvbiA9IChTaW5nbGVNZW1iZXJBbm5vdGF0aW9uKSBzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9u
LnZhcmFyZ3NBbm5vdGF0aW9ucygpLmdldCgwKTsKKwkJdHlwZUxpdGVyYWwgPSAoVHlwZUxpdGVy
YWwpIHNpbmdsZU1lbWJlckFubm90YXRpb24uZ2V0VmFsdWUoKTsKKwkJYXJyYXlUeXBlID0gKEFy
cmF5VHlwZSkgdHlwZUxpdGVyYWwuZ2V0VHlwZSgpOworCQlhc3NlcnRUcnVlKGFycmF5VHlwZS5n
ZXRFbGVtZW50VHlwZSgpLmlzUHJpbWl0aXZlVHlwZSgpKTsKKwkJYXNzZXJ0VHJ1ZShhcnJheVR5
cGUuZ2V0RGltZW5zaW9ucygpID09IDEpOworCQkKKwkJbWV0aG9kID0gKE1ldGhvZERlY2xhcmF0
aW9uKSB0eXBlLmJvZHlEZWNsYXJhdGlvbnMoKS5nZXQoY291bnQrKyk7CisJCXNpbmdsZVZhcmlh
YmxlRGVjbGFyYXRpb24gPSAoU2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbikgbWV0aG9kLnBhcmFt
ZXRlcnMoKS5nZXQoMCk7CisJCWNoZWNrU291cmNlUmFuZ2Uoc2luZ2xlVmFyaWFibGVEZWNsYXJh
dGlvbiwgImludCBAQW5ub3QgLi4uIGFyZ3MiLCBjb250ZW50cyk7CisJCWFzc2VydFRydWUoc2lu
Z2xlVmFyaWFibGVEZWNsYXJhdGlvbi52YXJhcmdzQW5ub3RhdGlvbnMoKS5zaXplKCkgPT0gMSk7
CisKKwl9CiAKIH0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVs
L3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyQVNUM1Rlc3Qu
amF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyQVNUM1Rlc3QuamF2YQppbmRleCA5ZDc3Zjcy
Li5hNjJiYWZkIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlckFTVDNUZXN0Lmph
dmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXJBU1QzVGVzdC5qYXZhCkBAIC01OSw2ICs1
OSwxMyBAQAogCQlyZXR1cm4gbWV0aG9kRGVjbGFyYXRpb24udGhyb3duRXhjZXB0aW9ucygpOwog
CX0KIAorCS8qKgorCSAqIEBkZXByZWNhdGVkCisJICovCisJcHJpdmF0ZSBUeXBlIGNvbXBvbmVu
dFR5cGUoQXJyYXlUeXBlIGFycmF5KSB7CisJCXJldHVybiBhcnJheS5nZXRDb21wb25lbnRUeXBl
KCk7CisJfQorCiAJcHVibGljIHZvaWQgdGVzdDAwMDEoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0
aW9uIHsKIAkJSUNvbXBpbGF0aW9uVW5pdCBzb3VyY2VVbml0ID0gZ2V0Q29tcGlsYXRpb25Vbml0
KCJDb252ZXJ0ZXIiICwgInNyYyIsICJ0ZXN0MDAwMSIsICJUZXN0LmphdmEiKTsgLy8kTk9OLU5M
Uy0xJCAvLyROT04tTkxTLTIkIC8vJE5PTi1OTFMtMyQgLy8kTk9OLU5MUy00JAogCQljaGFyW10g
c291cmNlID0gc291cmNlVW5pdC5nZXRTb3VyY2UoKS50b0NoYXJBcnJheSgpOwpAQCAtNzY1OSwx
MyArNzY2NiwxMyBAQAogCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcgPSBhcnJheVR5cGUucmVz
b2x2ZUJpbmRpbmcoKTsKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiamF2YS5sYW5nLk9iamVj
dFtdW10iLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCiAJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUg
YmluZGluZyIsIHR5cGVCaW5kaW5nKTsgLy8kTk9OLU5MUy0xJAotCQlUeXBlIGVsZW1lbnRUeXBl
ID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJVHlwZSBlbGVtZW50VHlwZSA9IGNv
bXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nMiA9IGVs
ZW1lbnRUeXBlLnJlc29sdmVCaW5kaW5nKCk7CiAJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUgYmlu
ZGluZzIiLCB0eXBlQmluZGluZzIpOyAvLyROT04tTkxTLTEkCiAJCWFzc2VydEVxdWFscygid3Jv
bmcgZGltZW5zaW9uIiwgMSwgdHlwZUJpbmRpbmcyLmdldERpbWVuc2lvbnMoKSk7IC8vJE5PTi1O
TFMtMSQKIAkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgIk9iamVjdFtdIiwgdHlwZUJpbmRp
bmcyLmdldE5hbWUoKSk7CQkgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCiAJCWFzc2VydFRy
dWUoIk5vdCBhbiBhcnJheSB0eXBlIiwgZWxlbWVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5P
Ti1OTFMtMSQKLQkJVHlwZSBlbGVtZW50VHlwZTIgPSAoKEFycmF5VHlwZSkgZWxlbWVudFR5cGUp
LmdldENvbXBvbmVudFR5cGUoKTsKKwkJVHlwZSBlbGVtZW50VHlwZTIgPSBjb21wb25lbnRUeXBl
KCgoQXJyYXlUeXBlKSBlbGVtZW50VHlwZSkpOwogCQlhc3NlcnRUcnVlKCJOb3QgYSBzaW1wbGUg
dHlwZSIsIGVsZW1lbnRUeXBlMi5pc1NpbXBsZVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJSVR5
cGVCaW5kaW5nIHR5cGVCaW5kaW5nMyA9IGVsZW1lbnRUeXBlMi5yZXNvbHZlQmluZGluZygpOwog
CQlhc3NlcnROb3ROdWxsKCJObyB0eXBlIGJpbmRpbmczIiwgdHlwZUJpbmRpbmczKTsgLy8kTk9O
LU5MUy0xJApAQCAtODAwNiw3ICs4MDEzLDcgQEAKIAkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5n
MyA9IHNpbXBsZVR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKIAkJYXNzZXJ0Tm90TnVsbCgibm8gdHlw
ZSBiaW5kaW5nMyIsIHR5cGVCaW5kaW5nMyk7IC8vJE5PTi1OTFMtMSQKIAkJYXNzZXJ0RXF1YWxz
KCJ3cm9uZyBuYW1lIiwgIk9iamVjdCIsIHR5cGVCaW5kaW5nMy5nZXROYW1lKCkpOyAvLyROT04t
TkxTLTEkIC8vJE5PTi1OTFMtMiQKLQkJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBl
KCk7CisJCXR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7CiAJCWFzc2VydFRydWUoIk5v
dCBhbiBhcnJheSB0eXBlIiwgdHlwZSBpbnN0YW5jZW9mIEFycmF5VHlwZSk7IC8vJE5PTi1OTFMt
MSQKIAkJQXJyYXlUeXBlIGFycmF5VHlwZTIgPSAoQXJyYXlUeXBlKSB0eXBlOwogCQlJVHlwZUJp
bmRpbmcgdHlwZUJpbmRpbmc0ID0gYXJyYXlUeXBlMi5yZXNvbHZlQmluZGluZygpOwpAQCAtODA0
OCwxNCArODA1NSwxNCBAQAogCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmczID0gc2ltcGxlVHlw
ZS5yZXNvbHZlQmluZGluZygpOwogCQlhc3NlcnROb3ROdWxsKCJubyB0eXBlIGJpbmRpbmczIiwg
dHlwZUJpbmRpbmczKTsgLy8kTk9OLU5MUy0xJAogCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUi
LCAiT2JqZWN0IiwgdHlwZUJpbmRpbmczLmdldE5hbWUoKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9O
LU5MUy0yJAotCQl0eXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJdHlwZSA9
IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5
cGUiLCB0eXBlIGluc3RhbmNlb2YgQXJyYXlUeXBlKTsgLy8kTk9OLU5MUy0xJAogCQlBcnJheVR5
cGUgYXJyYXlUeXBlMiA9IChBcnJheVR5cGUpIHR5cGU7CiAJCWNoZWNrU291cmNlUmFuZ2UoYXJy
YXlUeXBlMiwgIk9iamVjdFsxMF1bXSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKIAkJSVR5cGVC
aW5kaW5nIHR5cGVCaW5kaW5nNCA9IGFycmF5VHlwZTIucmVzb2x2ZUJpbmRpbmcoKTsKIAkJYXNz
ZXJ0Tm90TnVsbCgibm8gdHlwZSBiaW5kaW5nNCIsIHR5cGVCaW5kaW5nNCk7IC8vJE5PTi1OTFMt
MSQKIAkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgIk9iamVjdFtdW10iLCB0eXBlQmluZGlu
ZzQuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkCi0JCXR5cGUgPSBhcnJh
eVR5cGUyLmdldENvbXBvbmVudFR5cGUoKTsKKwkJdHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlU
eXBlMik7CiAJCWFzc2VydFRydWUoIk5vdCBhbiBhcnJheSB0eXBlIiwgdHlwZSBpbnN0YW5jZW9m
IEFycmF5VHlwZSk7IC8vJE5PTi1OTFMtMSQKIAkJQXJyYXlUeXBlIGFycmF5VHlwZTMgPSAoQXJy
YXlUeXBlKSB0eXBlOwogCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmc1ID0gYXJyYXlUeXBlMy5y
ZXNvbHZlQmluZGluZygpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMu
bW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXJBU1Q0
VGVzdC5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXJBU1Q0VGVzdC5qYXZhCmluZGV4IDhm
NDEwMTIuLmM1OGEyMTggMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1v
ZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyQVNUNFRl
c3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlckFTVDRUZXN0LmphdmEKQEAgLTU5
LDYgKzU5LDEzIEBACiAJCXJldHVybiBtZXRob2REZWNsYXJhdGlvbi50aHJvd25FeGNlcHRpb25z
KCk7CiAJfQogCisJLyoqCisJICogQGRlcHJlY2F0ZWQKKwkgKi8KKwlwcml2YXRlIFR5cGUgY29t
cG9uZW50VHlwZShBcnJheVR5cGUgYXJyYXkpIHsKKwkJcmV0dXJuIGFycmF5LmdldENvbXBvbmVu
dFR5cGUoKTsKKwl9CisKIAlwdWJsaWMgdm9pZCB0ZXN0MDAwMSgpIHRocm93cyBKYXZhTW9kZWxF
eGNlcHRpb24gewogCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21waWxhdGlv
blVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMDAxIiwgIlRlc3QuamF2YSIpOyAvLyRO
T04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQkCiAJCWNo
YXJbXSBzb3VyY2UgPSBzb3VyY2VVbml0LmdldFNvdXJjZSgpLnRvQ2hhckFycmF5KCk7CkBAIC03
NjU5LDEzICs3NjY2LDEzIEBACiAJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IGFycmF5VHlw
ZS5yZXNvbHZlQmluZGluZygpOwogCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJqYXZhLmxhbmcu
T2JqZWN0W11bXSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKIAkJYXNzZXJ0Tm90TnVsbCgiTm8g
dHlwZSBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOyAvLyROT04tTkxTLTEkCi0JCVR5cGUgZWxlbWVu
dFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlUeXBlIGVsZW1lbnRUeXBl
ID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmcy
ID0gZWxlbWVudFR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKIAkJYXNzZXJ0Tm90TnVsbCgiTm8gdHlw
ZSBiaW5kaW5nMiIsIHR5cGVCaW5kaW5nMik7IC8vJE5PTi1OTFMtMSQKIAkJYXNzZXJ0RXF1YWxz
KCJ3cm9uZyBkaW1lbnNpb24iLCAxLCB0eXBlQmluZGluZzIuZ2V0RGltZW5zaW9ucygpKTsgLy8k
Tk9OLU5MUy0xJAogCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAiT2JqZWN0W10iLCB0eXBl
QmluZGluZzIuZ2V0TmFtZSgpKTsJCSAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKIAkJYXNz
ZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5cGUiLCBlbGVtZW50VHlwZS5pc0FycmF5VHlwZSgpKTsg
Ly8kTk9OLU5MUy0xJAotCQlUeXBlIGVsZW1lbnRUeXBlMiA9ICgoQXJyYXlUeXBlKSBlbGVtZW50
VHlwZSkuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlUeXBlIGVsZW1lbnRUeXBlMiA9IGNvbXBvbmVu
dFR5cGUoKChBcnJheVR5cGUpIGVsZW1lbnRUeXBlKSk7CiAJCWFzc2VydFRydWUoIk5vdCBhIHNp
bXBsZSB0eXBlIiwgZWxlbWVudFR5cGUyLmlzU2ltcGxlVHlwZSgpKTsgLy8kTk9OLU5MUy0xJAog
CQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmczID0gZWxlbWVudFR5cGUyLnJlc29sdmVCaW5kaW5n
KCk7CiAJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUgYmluZGluZzMiLCB0eXBlQmluZGluZzMpOyAv
LyROT04tTkxTLTEkCkBAIC04MDA2LDcgKzgwMTMsNyBAQAogCQlJVHlwZUJpbmRpbmcgdHlwZUJp
bmRpbmczID0gc2ltcGxlVHlwZS5yZXNvbHZlQmluZGluZygpOwogCQlhc3NlcnROb3ROdWxsKCJu
byB0eXBlIGJpbmRpbmczIiwgdHlwZUJpbmRpbmczKTsgLy8kTk9OLU5MUy0xJAogCQlhc3NlcnRF
cXVhbHMoIndyb25nIG5hbWUiLCAiT2JqZWN0IiwgdHlwZUJpbmRpbmczLmdldE5hbWUoKSk7IC8v
JE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAotCQl0eXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVu
dFR5cGUoKTsKKwkJdHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNzZXJ0VHJ1
ZSgiTm90IGFuIGFycmF5IHR5cGUiLCB0eXBlIGluc3RhbmNlb2YgQXJyYXlUeXBlKTsgLy8kTk9O
LU5MUy0xJAogCQlBcnJheVR5cGUgYXJyYXlUeXBlMiA9IChBcnJheVR5cGUpIHR5cGU7CiAJCUlU
eXBlQmluZGluZyB0eXBlQmluZGluZzQgPSBhcnJheVR5cGUyLnJlc29sdmVCaW5kaW5nKCk7CkBA
IC04MDQ4LDE0ICs4MDU1LDE0IEBACiAJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzMgPSBzaW1w
bGVUeXBlLnJlc29sdmVCaW5kaW5nKCk7CiAJCWFzc2VydE5vdE51bGwoIm5vIHR5cGUgYmluZGlu
ZzMiLCB0eXBlQmluZGluZzMpOyAvLyROT04tTkxTLTEkCiAJCWFzc2VydEVxdWFscygid3Jvbmcg
bmFtZSIsICJPYmplY3QiLCB0eXBlQmluZGluZzMuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAv
LyROT04tTkxTLTIkCi0JCXR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQl0
eXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJOb3QgYW4gYXJy
YXkgdHlwZSIsIHR5cGUgaW5zdGFuY2VvZiBBcnJheVR5cGUpOyAvLyROT04tTkxTLTEkCiAJCUFy
cmF5VHlwZSBhcnJheVR5cGUyID0gKEFycmF5VHlwZSkgdHlwZTsKIAkJY2hlY2tTb3VyY2VSYW5n
ZShhcnJheVR5cGUyLCAiT2JqZWN0WzEwXVtdIiwgc291cmNlKTsgLy8kTk9OLU5MUy0xJAogCQlJ
VHlwZUJpbmRpbmcgdHlwZUJpbmRpbmc0ID0gYXJyYXlUeXBlMi5yZXNvbHZlQmluZGluZygpOwog
CQlhc3NlcnROb3ROdWxsKCJubyB0eXBlIGJpbmRpbmc0IiwgdHlwZUJpbmRpbmc0KTsgLy8kTk9O
LU5MUy0xJAogCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAiT2JqZWN0W11bXSIsIHR5cGVC
aW5kaW5nNC5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKLQkJdHlwZSA9
IGFycmF5VHlwZTIuZ2V0Q29tcG9uZW50VHlwZSgpOworCQl0eXBlID0gY29tcG9uZW50VHlwZShh
cnJheVR5cGUyKTsKIAkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5cGUiLCB0eXBlIGluc3Rh
bmNlb2YgQXJyYXlUeXBlKTsgLy8kTk9OLU5MUy0xJAogCQlBcnJheVR5cGUgYXJyYXlUeXBlMyA9
IChBcnJheVR5cGUpIHR5cGU7CiAJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzUgPSBhcnJheVR5
cGUzLnJlc29sdmVCaW5kaW5nKCk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRl
ckFTVDhUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlckFTVDhUZXN0LmphdmEKaW5k
ZXggY2UwZmNjNC4uZDQxMzBlNSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXJB
U1Q4VGVzdC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyQVNUOFRlc3QuamF2YQpA
QCAtNzY2MiwxNSArNzY2Miw5IEBACiAJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IGFycmF5
VHlwZS5yZXNvbHZlQmluZGluZygpOwogCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJqYXZhLmxh
bmcuT2JqZWN0W11bXSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKIAkJYXNzZXJ0Tm90TnVsbCgi
Tm8gdHlwZSBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOyAvLyROT04tTkxTLTEkCi0JCVR5cGUgZWxl
bWVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlJVHlwZUJpbmRpbmcg
dHlwZUJpbmRpbmcyID0gZWxlbWVudFR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKLQkJYXNzZXJ0Tm90
TnVsbCgiTm8gdHlwZSBiaW5kaW5nMiIsIHR5cGVCaW5kaW5nMik7IC8vJE5PTi1OTFMtMSQKLQkJ
YXNzZXJ0RXF1YWxzKCJ3cm9uZyBkaW1lbnNpb24iLCAxLCB0eXBlQmluZGluZzIuZ2V0RGltZW5z
aW9ucygpKTsgLy8kTk9OLU5MUy0xJAotCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAiT2Jq
ZWN0W10iLCB0eXBlQmluZGluZzIuZ2V0TmFtZSgpKTsJCSAvLyROT04tTkxTLTEkIC8vJE5PTi1O
TFMtMiQKLQkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5cGUiLCBlbGVtZW50VHlwZS5pc0Fy
cmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAotCQlUeXBlIGVsZW1lbnRUeXBlMiA9ICgoQXJyYXlU
eXBlKSBlbGVtZW50VHlwZSkuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlhc3NlcnRUcnVlKCJOb3Qg
YSBzaW1wbGUgdHlwZSIsIGVsZW1lbnRUeXBlMi5pc1NpbXBsZVR5cGUoKSk7IC8vJE5PTi1OTFMt
MSQKLQkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nMyA9IGVsZW1lbnRUeXBlMi5yZXNvbHZlQmlu
ZGluZygpOworCQlUeXBlIGVsZW1lbnRUeXBlID0gYXJyYXlUeXBlLmdldEVsZW1lbnRUeXBlKCk7
CisJCWFzc2VydFRydWUoIk5vdCBhIHNpbXBsZSB0eXBlIiwgZWxlbWVudFR5cGUuaXNTaW1wbGVU
eXBlKCkpOyAvLyROT04tTkxTLTEkCisJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzMgPSBlbGVt
ZW50VHlwZS5yZXNvbHZlQmluZGluZygpOwogCQlhc3NlcnROb3ROdWxsKCJObyB0eXBlIGJpbmRp
bmczIiwgdHlwZUJpbmRpbmczKTsgLy8kTk9OLU5MUy0xJAogCQlhc3NlcnRFcXVhbHMoIndyb25n
IGRpbWVuc2lvbiIsIDAsIHR5cGVCaW5kaW5nMy5nZXREaW1lbnNpb25zKCkpOyAvLyROT04tTkxT
LTEkCiAJCWFzc2VydEVxdWFscygid3JvbmcgbmFtZSIsICJPYmplY3QiLCB0eXBlQmluZGluZzMu
Z2V0TmFtZSgpKTsJCSAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKQEAgLTgwMDksMTIgKzgw
MDMsMTAgQEAKIAkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nMyA9IHNpbXBsZVR5cGUucmVzb2x2
ZUJpbmRpbmcoKTsKIAkJYXNzZXJ0Tm90TnVsbCgibm8gdHlwZSBiaW5kaW5nMyIsIHR5cGVCaW5k
aW5nMyk7IC8vJE5PTi1OTFMtMSQKIAkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgIk9iamVj
dCIsIHR5cGVCaW5kaW5nMy5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQK
LQkJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWFzc2VydFRydWUoIk5v
dCBhbiBhcnJheSB0eXBlIiwgdHlwZSBpbnN0YW5jZW9mIEFycmF5VHlwZSk7IC8vJE5PTi1OTFMt
MSQKLQkJQXJyYXlUeXBlIGFycmF5VHlwZTIgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQlJVHlwZUJp
bmRpbmcgdHlwZUJpbmRpbmc0ID0gYXJyYXlUeXBlMi5yZXNvbHZlQmluZGluZygpOworCQl0eXBl
ID0gYXJyYXlUeXBlLmdldEVsZW1lbnRUeXBlKCk7CisJCUlUeXBlQmluZGluZyB0eXBlQmluZGlu
ZzQgPSB0eXBlLnJlc29sdmVCaW5kaW5nKCk7CiAJCWFzc2VydE5vdE51bGwoIm5vIHR5cGUgYmlu
ZGluZzQiLCB0eXBlQmluZGluZzQpOyAvLyROT04tTkxTLTEkCi0JCWFzc2VydEVxdWFscygid3Jv
bmcgbmFtZSIsICJPYmplY3RbXSIsIHR5cGVCaW5kaW5nNC5nZXROYW1lKCkpOyAvLyROT04tTkxT
LTEkIC8vJE5PTi1OTFMtMiQKKwkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgIk9iamVjdCIs
IHR5cGVCaW5kaW5nNC5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKIAl9
CiAKIAkvKioKQEAgLTgwNTEsMjAgKzgwNDMsMTAgQEAKIAkJSVR5cGVCaW5kaW5nIHR5cGVCaW5k
aW5nMyA9IHNpbXBsZVR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKIAkJYXNzZXJ0Tm90TnVsbCgibm8g
dHlwZSBiaW5kaW5nMyIsIHR5cGVCaW5kaW5nMyk7IC8vJE5PTi1OTFMtMSQKIAkJYXNzZXJ0RXF1
YWxzKCJ3cm9uZyBuYW1lIiwgIk9iamVjdCIsIHR5cGVCaW5kaW5nMy5nZXROYW1lKCkpOyAvLyRO
T04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKLQkJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRU
eXBlKCk7Ci0JCWFzc2VydFRydWUoIk5vdCBhbiBhcnJheSB0eXBlIiwgdHlwZSBpbnN0YW5jZW9m
IEFycmF5VHlwZSk7IC8vJE5PTi1OTFMtMSQKLQkJQXJyYXlUeXBlIGFycmF5VHlwZTIgPSAoQXJy
YXlUeXBlKSB0eXBlOwotCQljaGVja1NvdXJjZVJhbmdlKGFycmF5VHlwZTIsICJPYmplY3RbMTBd
W10iLCBzb3VyY2UpOyAvLyROT04tTkxTLTEkCi0JCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzQg
PSBhcnJheVR5cGUyLnJlc29sdmVCaW5kaW5nKCk7CisJCXR5cGUgPSBhcnJheVR5cGUuZ2V0RWxl
bWVudFR5cGUoKTsKKwkJSVR5cGVCaW5kaW5nIHR5cGVCaW5kaW5nNCA9IHR5cGUucmVzb2x2ZUJp
bmRpbmcoKTsKIAkJYXNzZXJ0Tm90TnVsbCgibm8gdHlwZSBiaW5kaW5nNCIsIHR5cGVCaW5kaW5n
NCk7IC8vJE5PTi1OTFMtMSQKLQkJYXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgIk9iamVjdFtd
W10iLCB0eXBlQmluZGluZzQuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIk
Ci0JCXR5cGUgPSBhcnJheVR5cGUyLmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNzZXJ0VHJ1ZSgi
Tm90IGFuIGFycmF5IHR5cGUiLCB0eXBlIGluc3RhbmNlb2YgQXJyYXlUeXBlKTsgLy8kTk9OLU5M
Uy0xJAotCQlBcnJheVR5cGUgYXJyYXlUeXBlMyA9IChBcnJheVR5cGUpIHR5cGU7Ci0JCUlUeXBl
QmluZGluZyB0eXBlQmluZGluZzUgPSBhcnJheVR5cGUzLnJlc29sdmVCaW5kaW5nKCk7Ci0JCWFz
c2VydE5vdE51bGwoIm5vIHR5cGUgYmluZGluZzUiLCB0eXBlQmluZGluZzUpOyAvLyROT04tTkxT
LTEkCi0JCWFzc2VydEVxdWFscygid3JvbmcgbmFtZSIsICJPYmplY3RbXSIsIHR5cGVCaW5kaW5n
NS5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKLQkJY2hlY2tTb3VyY2VS
YW5nZShhcnJheVR5cGUzLCAiT2JqZWN0WzEwXSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKKwkJ
YXNzZXJ0RXF1YWxzKCJ3cm9uZyBuYW1lIiwgIk9iamVjdCIsIHR5cGVCaW5kaW5nNC5nZXROYW1l
KCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKIAl9CiAKIApkaWZmIC0tZ2l0IGEvb3Jn
LmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL2RvbS9BU1RDb252ZXJ0ZXJKYXZhZG9jRmxhdHRlbmVyLmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FT
VENvbnZlcnRlckphdmFkb2NGbGF0dGVuZXIuamF2YQppbmRleCBkNThkYmRjLi4zZjM5NmI5IDEw
MDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlckphdmFkb2NGbGF0dGVuZXIuamF2YQor
KysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlckphdmFkb2NGbGF0dGVuZXIuamF2YQpAQCAtMSwx
MCArMSwxNCBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAw
MCwgMjAwOCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAw
MCwgMjAxMyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2
ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBt
YWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vu
c2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBh
dmFpbGFibGUgYXQKICAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1s
CiAgKgorICogVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiBhbiBlYXJseS1kcmFmdCBzcGVj
aWZpY2F0aW9uIGRldmVsb3BlZCB1bmRlciB0aGUgSmF2YQorICogQ29tbXVuaXR5IFByb2Nlc3Mg
KEpDUCkgYW5kIGlzIG1hZGUgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIGFuZCBldmFsdWF0aW9uIHB1
cnBvc2VzCisgKiBvbmx5LiBUaGUgY29kZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueSBzcGVj
aWZpY2F0aW9uIG9mIHRoZSBKQ1AuCisgKiAKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJQk0g
Q29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KICAqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqLwpAQCAtMzMsNiArMzcsMTMgQEAKIH0KIAogLyoqCisgKiBAZGVwcmVjYXRl
ZAorICovCitwcml2YXRlIFR5cGUgY29tcG9uZW50VHlwZShBcnJheVR5cGUgYXJyYXkpIHsKKwly
ZXR1cm4gYXJyYXkuZ2V0Q29tcG9uZW50VHlwZSgpOworfQorCisvKioKICAqIFJldHVybnMgdGhl
IHN0cmluZyBhY2N1bXVsYXRlZCBpbiB0aGUgdmlzaXQuCiAgKgogICogQHJldHVybiB0aGUgc2Vy
aWFsaXplZApAQCAtNTIsOCArNjMsMTUgQEAKICAqIEBzZWUgQVNUVmlzaXRvciN2aXNpdChBcnJh
eVR5cGUpCiAgKi8KIHB1YmxpYyBib29sZWFuIHZpc2l0KEFycmF5VHlwZSBub2RlKSB7Ci0Jbm9k
ZS5nZXRDb21wb25lbnRUeXBlKCkuYWNjZXB0KHRoaXMpOwotCXRoaXMuYnVmZmVyLmFwcGVuZCgi
W10iKTsvLyROT04tTkxTLTEkCisJaWYgKG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA8IEFTVC5K
TFM4KSB7CisJCWNvbXBvbmVudFR5cGUobm9kZSkuYWNjZXB0KHRoaXMpOworCQl0aGlzLmJ1ZmZl
ci5hcHBlbmQoIltdIik7Ly8kTk9OLU5MUy0xJAorCX0gZWxzZSB7CisJCW5vZGUuZ2V0RWxlbWVu
dFR5cGUoKS5hY2NlcHQodGhpcyk7CisJCWZvciAoaW50IGkgPSAwOyAgaSA8IG5vZGUuZ2V0RGlt
ZW5zaW9ucygpOyArK2kpIHsKKwkJCSgoRXh0cmFEaW1lbnNpb24pIG5vZGUuZGltZW5zaW9ucygp
LmdldChpKSkuYWNjZXB0KHRoaXMpOworCQl9CisJfQogCXJldHVybiBmYWxzZTsKIH0KIApkaWZm
IC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNl
L2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXJUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FT
VENvbnZlcnRlclRlc3QuamF2YQppbmRleCA4ZDYwNTUzLi5hYzZjMDJjIDEwMDY0NAotLS0gYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvZG9tL0FTVENvbnZlcnRlclRlc3QuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZl
cnRlclRlc3QuamF2YQpAQCAtNTIsNiArNTIsMTMgQEAKIAkJcmV0dXJuIG1ldGhvZERlY2xhcmF0
aW9uLnRocm93bkV4Y2VwdGlvbnMoKTsKIAl9CiAKKwkvKioKKwkgKiBAZGVwcmVjYXRlZAorCSAq
LworCXByaXZhdGUgVHlwZSBjb21wb25lbnRUeXBlKEFycmF5VHlwZSBhcnJheSkgeworCQlyZXR1
cm4gYXJyYXkuZ2V0Q29tcG9uZW50VHlwZSgpOworCX0KKwogCS8qKiBAZGVwcmVjYXRlZCB1c2lu
ZyBkZXByZWNhdGVkIGNvZGUgKi8KIAlwdWJsaWMgdm9pZCB0ZXN0MDAwMSgpIHRocm93cyBKYXZh
TW9kZWxFeGNlcHRpb24gewogCQlJQ29tcGlsYXRpb25Vbml0IHNvdXJjZVVuaXQgPSBnZXRDb21w
aWxhdGlvblVuaXQoIkNvbnZlcnRlciIgLCAic3JjIiwgInRlc3QwMDAxIiwgIlRlc3QuamF2YSIp
OyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJCAvLyROT04tTkxTLTQk
CkBAIC03ODIxLDEzICs3ODI4LDEzIEBACiAJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZyA9IGFy
cmF5VHlwZS5yZXNvbHZlQmluZGluZygpOwogCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJqYXZh
LmxhbmcuT2JqZWN0W11bXSIsIHNvdXJjZSk7IC8vJE5PTi1OTFMtMSQKIAkJYXNzZXJ0Tm90TnVs
bCgiTm8gdHlwZSBiaW5kaW5nIiwgdHlwZUJpbmRpbmcpOyAvLyROT04tTkxTLTEkCi0JCVR5cGUg
ZWxlbWVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlUeXBlIGVsZW1l
bnRUeXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlJVHlwZUJpbmRpbmcgdHlwZUJp
bmRpbmcyID0gZWxlbWVudFR5cGUucmVzb2x2ZUJpbmRpbmcoKTsKIAkJYXNzZXJ0Tm90TnVsbCgi
Tm8gdHlwZSBiaW5kaW5nMiIsIHR5cGVCaW5kaW5nMik7IC8vJE5PTi1OTFMtMSQKIAkJYXNzZXJ0
RXF1YWxzKCJ3cm9uZyBkaW1lbnNpb24iLCAxLCB0eXBlQmluZGluZzIuZ2V0RGltZW5zaW9ucygp
KTsgLy8kTk9OLU5MUy0xJAogCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAiT2JqZWN0W10i
LCB0eXBlQmluZGluZzIuZ2V0TmFtZSgpKTsJCSAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQK
IAkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5cGUiLCBlbGVtZW50VHlwZS5pc0FycmF5VHlw
ZSgpKTsgLy8kTk9OLU5MUy0xJAotCQlUeXBlIGVsZW1lbnRUeXBlMiA9ICgoQXJyYXlUeXBlKSBl
bGVtZW50VHlwZSkuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlUeXBlIGVsZW1lbnRUeXBlMiA9IGNv
bXBvbmVudFR5cGUoKChBcnJheVR5cGUpIGVsZW1lbnRUeXBlKSk7CiAJCWFzc2VydFRydWUoIk5v
dCBhIHNpbXBsZSB0eXBlIiwgZWxlbWVudFR5cGUyLmlzU2ltcGxlVHlwZSgpKTsgLy8kTk9OLU5M
Uy0xJAogCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmczID0gZWxlbWVudFR5cGUyLnJlc29sdmVC
aW5kaW5nKCk7CiAJCWFzc2VydE5vdE51bGwoIk5vIHR5cGUgYmluZGluZzMiLCB0eXBlQmluZGlu
ZzMpOyAvLyROT04tTkxTLTEkCkBAIC04MTY4LDcgKzgxNzUsNyBAQAogCQlJVHlwZUJpbmRpbmcg
dHlwZUJpbmRpbmczID0gc2ltcGxlVHlwZS5yZXNvbHZlQmluZGluZygpOwogCQlhc3NlcnROb3RO
dWxsKCJubyB0eXBlIGJpbmRpbmczIiwgdHlwZUJpbmRpbmczKTsgLy8kTk9OLU5MUy0xJAogCQlh
c3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAiT2JqZWN0IiwgdHlwZUJpbmRpbmczLmdldE5hbWUo
KSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJAotCQl0eXBlID0gYXJyYXlUeXBlLmdldENv
bXBvbmVudFR5cGUoKTsKKwkJdHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNz
ZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5cGUiLCB0eXBlIGluc3RhbmNlb2YgQXJyYXlUeXBlKTsg
Ly8kTk9OLU5MUy0xJAogCQlBcnJheVR5cGUgYXJyYXlUeXBlMiA9IChBcnJheVR5cGUpIHR5cGU7
CiAJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzQgPSBhcnJheVR5cGUyLnJlc29sdmVCaW5kaW5n
KCk7CkBAIC04MjEwLDE0ICs4MjE3LDE0IEBACiAJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzMg
PSBzaW1wbGVUeXBlLnJlc29sdmVCaW5kaW5nKCk7CiAJCWFzc2VydE5vdE51bGwoIm5vIHR5cGUg
YmluZGluZzMiLCB0eXBlQmluZGluZzMpOyAvLyROT04tTkxTLTEkCiAJCWFzc2VydEVxdWFscygi
d3JvbmcgbmFtZSIsICJPYmplY3QiLCB0eXBlQmluZGluZzMuZ2V0TmFtZSgpKTsgLy8kTk9OLU5M
Uy0xJCAvLyROT04tTkxTLTIkCi0JCXR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgp
OworCQl0eXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJOb3Qg
YW4gYXJyYXkgdHlwZSIsIHR5cGUgaW5zdGFuY2VvZiBBcnJheVR5cGUpOyAvLyROT04tTkxTLTEk
CiAJCUFycmF5VHlwZSBhcnJheVR5cGUyID0gKEFycmF5VHlwZSkgdHlwZTsKIAkJY2hlY2tTb3Vy
Y2VSYW5nZShhcnJheVR5cGUyLCAiT2JqZWN0WzEwXVtdIiwgc291cmNlKTsgLy8kTk9OLU5MUy0x
JAogCQlJVHlwZUJpbmRpbmcgdHlwZUJpbmRpbmc0ID0gYXJyYXlUeXBlMi5yZXNvbHZlQmluZGlu
ZygpOwogCQlhc3NlcnROb3ROdWxsKCJubyB0eXBlIGJpbmRpbmc0IiwgdHlwZUJpbmRpbmc0KTsg
Ly8kTk9OLU5MUy0xJAogCQlhc3NlcnRFcXVhbHMoIndyb25nIG5hbWUiLCAiT2JqZWN0W11bXSIs
IHR5cGVCaW5kaW5nNC5nZXROYW1lKCkpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQKLQkJ
dHlwZSA9IGFycmF5VHlwZTIuZ2V0Q29tcG9uZW50VHlwZSgpOworCQl0eXBlID0gY29tcG9uZW50
VHlwZShhcnJheVR5cGUyKTsKIAkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5cGUiLCB0eXBl
IGluc3RhbmNlb2YgQXJyYXlUeXBlKTsgLy8kTk9OLU5MUy0xJAogCQlBcnJheVR5cGUgYXJyYXlU
eXBlMyA9IChBcnJheVR5cGUpIHR5cGU7CiAJCUlUeXBlQmluZGluZyB0eXBlQmluZGluZzUgPSBh
cnJheVR5cGUzLnJlc29sdmVCaW5kaW5nKCk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENv
bnZlcnRlclRlc3QyLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlclRlc3QyLmphdmEKaW5k
ZXggMTJhZDU2MC4uNjYxN2ZiYiAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXJU
ZXN0Mi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVyVGVzdDIuamF2YQpAQCAtNCw2
ICs0LDEwIEBACiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBF
Y2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlz
dHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CiAgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3Jn
L2xlZ2FsL2VwbC12MTAuaHRtbAorICoKKyAqIFRoaXMgaXMgYW4gaW1wbGVtZW50YXRpb24gb2Yg
YW4gZWFybHktZHJhZnQgc3BlY2lmaWNhdGlvbiBkZXZlbG9wZWQgdW5kZXIgdGhlIEphdmEKKyAq
IENvbW11bml0eSBQcm9jZXNzIChKQ1ApIGFuZCBpcyBtYWRlIGF2YWlsYWJsZSBmb3IgdGVzdGlu
ZyBhbmQgZXZhbHVhdGlvbiBwdXJwb3NlcworICogb25seS4gVGhlIGNvZGUgaXMgbm90IGNvbXBh
dGlibGUgd2l0aCBhbnkgc3BlY2lmaWNhdGlvbiBvZiB0aGUgSkNQLgogICogCiAgKiBDb250cmli
dXRvcnM6CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVu
dGF0aW9uCkBAIC01NCw2ICs1OCwxMyBAQAogCSAqLwogCXByaXZhdGUgc3RhdGljIExpc3QgaW50
ZXJuYWxUaHJvd25FeGNlcHRpb25zKE1ldGhvZERlY2xhcmF0aW9uIG1ldGhvZERlY2xhcmF0aW9u
KSB7CiAJCXJldHVybiBtZXRob2REZWNsYXJhdGlvbi50aHJvd25FeGNlcHRpb25zKCk7CisJfQor
CisJLyoqCisJICogQGRlcHJlY2F0ZWQKKwkgKi8KKwlwcml2YXRlIFR5cGUgY29tcG9uZW50VHlw
ZShBcnJheVR5cGUgYXJyYXkpIHsKKwkJcmV0dXJuIGFycmF5LmdldENvbXBvbmVudFR5cGUoKTsK
IAl9CiAKIAkvKioKQEAgLTI2MzEsMTEgKzI2NDIsMTEgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0
eXBlLCAiQ2xhc3NbXVtdIiwgc291cmNlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5
cGUiLCB0eXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJCUFycmF5VHlwZSBhcnJh
eVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJheVR5
cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRU
eXBlKGFycmF5VHlwZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9u
ZW50VHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQljaGVja1NvdXJjZVJhbmdl
KGNvbXBvbmVudFR5cGUsICJDbGFzc1tdIiwgc291cmNlKTsKIAkJYXJyYXlUeXBlID0gKEFycmF5
VHlwZSkgY29tcG9uZW50VHlwZTsKLQkJY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21w
b25lbnRUeXBlKCk7CisJCWNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7
CiAJCWFzc2VydFRydWUoImlzIGFuIGFycmF5IHR5cGUiLCAhY29tcG9uZW50VHlwZS5pc0FycmF5
VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUs
ICJDbGFzcyIsIHNvdXJjZSk7CiAJfQpAQCAtMjY1NywxNSArMjY2OCwxNSBAQAogCQljaGVja1Nv
dXJjZVJhbmdlKHR5cGUsICJDbGFzc1tdW11bXSIsIHNvdXJjZSk7CiAJCWFzc2VydFRydWUoIm5v
dCBhbiBhcnJheSB0eXBlIiwgdHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQlB
cnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJVHlwZSBjb21wb25lbnRU
eXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJVHlwZSBjb21wb25lbnRUeXBl
ID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkg
dHlwZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJY2hl
Y2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXVtdIiwgc291cmNlKTsKIAkJYXJy
YXlUeXBlID0gKEFycmF5VHlwZSkgY29tcG9uZW50VHlwZTsKLQkJY29tcG9uZW50VHlwZSA9IGFy
cmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCWNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRU
eXBlKGFycmF5VHlwZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9u
ZW50VHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQljaGVja1NvdXJjZVJhbmdl
KGNvbXBvbmVudFR5cGUsICJDbGFzc1tdIiwgc291cmNlKTsKIAkJYXJyYXlUeXBlID0gKEFycmF5
VHlwZSkgY29tcG9uZW50VHlwZTsKLQkJY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21w
b25lbnRUeXBlKCk7CisJCWNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7
CiAJCWFzc2VydFRydWUoImlzIGFuIGFycmF5IHR5cGUiLCAhY29tcG9uZW50VHlwZS5pc0FycmF5
VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUs
ICJDbGFzcyIsIHNvdXJjZSk7CiAJfQpAQCAtMjY4NywxMSArMjY5OCwxMSBAQAogCQljaGVja1Nv
dXJjZVJhbmdlKHR5cGUsICJDbGFzc1tdW10iLCBzb3VyY2UpOwogCQlhc3NlcnRUcnVlKCJub3Qg
YW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJQXJy
YXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7Ci0JCVR5cGUgY29tcG9uZW50VHlw
ZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCVR5cGUgY29tcG9uZW50VHlwZSA9
IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5
cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJCWNoZWNr
U291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzW10iLCBzb3VyY2UpOwogCQlhcnJheVR5
cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBlOwotCQljb21wb25lbnRUeXBlID0gYXJyYXlU
eXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJY29tcG9uZW50VHlwZSA9IGNvbXBvbmVudFR5cGUo
YXJyYXlUeXBlKTsKIAkJYXNzZXJ0VHJ1ZSgiaXMgYW4gYXJyYXkgdHlwZSIsICFjb21wb25lbnRU
eXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJCWNoZWNrU291cmNlUmFuZ2UoY29t
cG9uZW50VHlwZSwgIkNsYXNzIiwgc291cmNlKTsKIAkJTGlzdCBmcmFnbWVudHMgPSBmaWVsZERl
Y2xhcmF0aW9uLmZyYWdtZW50cygpOwpAQCAtMjcxNywxOSArMjcyOCwxOSBAQAogCQljaGVja1Nv
dXJjZVJhbmdlKHR5cGUsICJDbGFzc1tdW11bXVtdIiwgc291cmNlKTsKIAkJYXNzZXJ0VHJ1ZSgi
bm90IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJ
CUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQlUeXBlIGNvbXBvbmVu
dFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlUeXBlIGNvbXBvbmVudFR5
cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJh
eSB0eXBlIiwgY29tcG9uZW50VHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQlj
aGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJDbGFzc1tdW11bXSIsIHNvdXJjZSk7CiAJ
CWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7Ci0JCWNvbXBvbmVudFR5cGUg
PSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQljb21wb25lbnRUeXBlID0gY29tcG9u
ZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIGNv
bXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJY2hlY2tTb3VyY2VS
YW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXVtdIiwgc291cmNlKTsKIAkJYXJyYXlUeXBlID0g
KEFycmF5VHlwZSkgY29tcG9uZW50VHlwZTsKLQkJY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5n
ZXRDb21wb25lbnRUeXBlKCk7CisJCWNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5
VHlwZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlwZS5p
c0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVu
dFR5cGUsICJDbGFzc1tdIiwgc291cmNlKTsKIAkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgY29t
cG9uZW50VHlwZTsKLQkJY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBl
KCk7CisJCWNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7CiAJCWFzc2Vy
dFRydWUoImlzIGFuIGFycmF5IHR5cGUiLCAhY29tcG9uZW50VHlwZS5pc0FycmF5VHlwZSgpKTsg
Ly8kTk9OLU5MUy0xJAogCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJDbGFzcyIs
IHNvdXJjZSk7CiAJfQpAQCAtMjc1MSw3ICsyNzYyLDcgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0
eXBlLCAiQ2xhc3NbXSIsIHNvdXJjZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBl
IiwgdHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQlBcnJheVR5cGUgYXJyYXlU
eXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJVHlwZSBjb21wb25lbnRUeXBlID0gYXJyYXlUeXBl
LmdldENvbXBvbmVudFR5cGUoKTsKKwkJVHlwZSBjb21wb25lbnRUeXBlID0gY29tcG9uZW50VHlw
ZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJheSB0eXBlIiwgIWNvbXBvbmVu
dFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJY2hlY2tTb3VyY2VSYW5nZShj
b21wb25lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2UpOwogCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9k
b20vQVNUQ29udmVydGVyVGVzdEFTVDNfMi5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVz
dHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXJU
ZXN0QVNUM18yLmphdmEKaW5kZXggMGI5YTE3Ny4uN2I0OTc1NSAxMDA2NDQKLS0tIGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L2RvbS9BU1RDb252ZXJ0ZXJUZXN0QVNUM18yLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252
ZXJ0ZXJUZXN0QVNUM18yLmphdmEKQEAgLTE0Myw2ICsxNDMsMTMgQEAKIAl9CiAKIAkvKioKKwkg
KiBAZGVwcmVjYXRlZAorCSAqLworCXByaXZhdGUgVHlwZSBjb21wb25lbnRUeXBlKEFycmF5VHlw
ZSBhcnJheSkgeworCQlyZXR1cm4gYXJyYXkuZ2V0Q29tcG9uZW50VHlwZSgpOworCX0KKworCS8q
KgogCSAqIGh0dHA6Ly9kZXYuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjI1NjAK
IAkgKi8KIAlwdWJsaWMgdm9pZCB0ZXN0MDQwMSgpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24g
ewpAQCAtMjcxOCwxMSArMjcyNSwxMSBAQAogCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJDbGFz
c1tdW10iLCBzb3VyY2UpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUu
aXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChB
cnJheVR5cGUpIHR5cGU7Ci0JCVR5cGUgY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21w
b25lbnRUeXBlKCk7CisJCVR5cGUgY29tcG9uZW50VHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlU
eXBlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlz
QXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50
VHlwZSwgIkNsYXNzW10iLCBzb3VyY2UpOwogCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21w
b25lbnRUeXBlOwotCQljb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUo
KTsKKwkJY29tcG9uZW50VHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNzZXJ0
VHJ1ZSgiaXMgYW4gYXJyYXkgdHlwZSIsICFjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAv
LyROT04tTkxTLTEkCiAJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzIiwg
c291cmNlKTsKIAl9CkBAIC0yNzQ0LDE1ICsyNzUxLDE1IEBACiAJCWNoZWNrU291cmNlUmFuZ2Uo
dHlwZSwgIkNsYXNzW11bXVtdIiwgc291cmNlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5
IHR5cGUiLCB0eXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJCUFycmF5VHlwZSBh
cnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJh
eVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBjb21wb25l
bnRUeXBlKGFycmF5VHlwZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29t
cG9uZW50VHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQljaGVja1NvdXJjZVJh
bmdlKGNvbXBvbmVudFR5cGUsICJDbGFzc1tdW10iLCBzb3VyY2UpOwogCQlhcnJheVR5cGUgPSAo
QXJyYXlUeXBlKSBjb21wb25lbnRUeXBlOwotCQljb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdl
dENvbXBvbmVudFR5cGUoKTsKKwkJY29tcG9uZW50VHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlU
eXBlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlz
QXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50
VHlwZSwgIkNsYXNzW10iLCBzb3VyY2UpOwogCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21w
b25lbnRUeXBlOwotCQljb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUo
KTsKKwkJY29tcG9uZW50VHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNzZXJ0
VHJ1ZSgiaXMgYW4gYXJyYXkgdHlwZSIsICFjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAv
LyROT04tTkxTLTEkCiAJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzIiwg
c291cmNlKTsKIAl9CkBAIC0yNzc0LDExICsyNzgxLDExIEBACiAJCWNoZWNrU291cmNlUmFuZ2Uo
dHlwZSwgIkNsYXNzW11bXSIsIHNvdXJjZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0
eXBlIiwgdHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQlBcnJheVR5cGUgYXJy
YXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJVHlwZSBjb21wb25lbnRUeXBlID0gYXJyYXlU
eXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJVHlwZSBjb21wb25lbnRUeXBlID0gY29tcG9uZW50
VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIGNvbXBv
bmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJY2hlY2tTb3VyY2VSYW5n
ZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXSIsIHNvdXJjZSk7CiAJCWFycmF5VHlwZSA9IChBcnJh
eVR5cGUpIGNvbXBvbmVudFR5cGU7Ci0JCWNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29t
cG9uZW50VHlwZSgpOworCQljb21wb25lbnRUeXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUp
OwogCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJheSB0eXBlIiwgIWNvbXBvbmVudFR5cGUuaXNBcnJh
eVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBl
LCAiQ2xhc3MiLCBzb3VyY2UpOwogCQlMaXN0IGZyYWdtZW50cyA9IGZpZWxkRGVjbGFyYXRpb24u
ZnJhZ21lbnRzKCk7CkBAIC0yODA0LDE5ICsyODExLDE5IEBACiAJCWNoZWNrU291cmNlUmFuZ2Uo
dHlwZSwgIkNsYXNzW11bXVtdW10iLCBzb3VyY2UpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJy
YXkgdHlwZSIsIHR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJQXJyYXlUeXBl
IGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7Ci0JCVR5cGUgY29tcG9uZW50VHlwZSA9IGFy
cmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCVR5cGUgY29tcG9uZW50VHlwZSA9IGNvbXBv
bmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCBj
b21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJCWNoZWNrU291cmNl
UmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzW11bXVtdIiwgc291cmNlKTsKIAkJYXJyYXlUeXBl
ID0gKEFycmF5VHlwZSkgY29tcG9uZW50VHlwZTsKLQkJY29tcG9uZW50VHlwZSA9IGFycmF5VHlw
ZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCWNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRUeXBlKGFy
cmF5VHlwZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlw
ZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQljaGVja1NvdXJjZVJhbmdlKGNvbXBv
bmVudFR5cGUsICJDbGFzc1tdW10iLCBzb3VyY2UpOwogCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBl
KSBjb21wb25lbnRUeXBlOwotCQljb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVu
dFR5cGUoKTsKKwkJY29tcG9uZW50VHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJ
YXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBl
KCkpOyAvLyROT04tTkxTLTEkCiAJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNs
YXNzW10iLCBzb3VyY2UpOwogCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBl
OwotCQljb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJY29t
cG9uZW50VHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNzZXJ0VHJ1ZSgiaXMg
YW4gYXJyYXkgdHlwZSIsICFjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxT
LTEkCiAJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzIiwgc291cmNlKTsK
IAl9CkBAIC0yODM4LDcgKzI4NDUsNyBAQAogCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJDbGFz
c1tdIiwgc291cmNlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlz
QXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJy
YXlUeXBlKSB0eXBlOwotCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9u
ZW50VHlwZSgpOworCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlw
ZSk7CiAJCWFzc2VydFRydWUoImlzIGFuIGFycmF5IHR5cGUiLCAhY29tcG9uZW50VHlwZS5pc0Fy
cmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5
cGUsICJDbGFzcyIsIHNvdXJjZSk7CiAJfQpAQCAtNjU0OSw3ICs2NTU2LDcgQEAKIAkJCWNoZWNr
U291cmNlUmFuZ2UodHlwZSwgImJvb2xlYW5bXSIsIGNvbnRlbnRzKTsKIAkJCWFzc2VydFRydWUo
Ik5vdCBhbiBhcnJheSB0eXBlIiwgdHlwZS5pc0FycmF5VHlwZSgpKTsKIAkJCUFycmF5VHlwZSBh
cnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQkJVHlwZSBjb21wb25lbnRUeXBlID0gYXJy
YXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJCVR5cGUgY29tcG9uZW50VHlwZSA9IGNvbXBv
bmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJCWFzc2VydFRydWUoIk5vdCBhIHByaW1pdGl2ZSB0eXBl
IiwgY29tcG9uZW50VHlwZS5pc1ByaW1pdGl2ZVR5cGUoKSk7CiAJCQlQcmltaXRpdmVUeXBlIHBy
aW1pdGl2ZVR5cGUgPSAoUHJpbWl0aXZlVHlwZSkgY29tcG9uZW50VHlwZTsKIAkJCWFzc2VydEVx
dWFscygiTm90IGJvb2xlYW4iLCBQcmltaXRpdmVUeXBlLkJPT0xFQU4sIHByaW1pdGl2ZVR5cGUu
Z2V0UHJpbWl0aXZlVHlwZUNvZGUoKSk7CkBAIC05NTQxLDExICs5NTQ4LDExIEBACiAJCUFycmF5
Q3JlYXRpb24gYXJyYXlDcmVhdGlvbiA9IChBcnJheUNyZWF0aW9uKSBub2RlOwogCQlBcnJheVR5
cGUgYXJyYXlUeXBlID0gYXJyYXlDcmVhdGlvbi5nZXRUeXBlKCk7CiAJCWNoZWNrU291cmNlUmFu
Z2UoYXJyYXlUeXBlLCAiU3RyaW5nWzBdW2JbMTBdXVtdIiwgc291cmNlVW5pdC5nZXRTb3VyY2Uo
KSk7Ci0JCW5vZGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlub2RlID0gY29t
cG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBhcnJheSB0eXBl
IiwgQVNUTm9kZS5BUlJBWV9UWVBFLCBub2RlLmdldE5vZGVUeXBlKCkpOwogCQlhcnJheVR5cGUg
PSAoQXJyYXlUeXBlKW5vZGU7CiAJCWNoZWNrU291cmNlUmFuZ2UoYXJyYXlUeXBlLCAiU3RyaW5n
WzBdW2JbMTBdXSIsIHNvdXJjZVVuaXQuZ2V0U291cmNlKCkpOwotCQlub2RlID0gYXJyYXlUeXBl
LmdldENvbXBvbmVudFR5cGUoKTsKKwkJbm9kZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsK
IAkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gYXJyYXkgdHlwZSIsIEFTVE5vZGUuQVJSQVlfVFlQRSwg
bm9kZS5nZXROb2RlVHlwZSgpKTsKIAkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSlub2RlOwogCQlj
aGVja1NvdXJjZVJhbmdlKGFycmF5VHlwZSwgIlN0cmluZ1swXSIsIHNvdXJjZVVuaXQuZ2V0U291
cmNlKCkpOwpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3Jj
L29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RDb252ZXJ0ZXJUZXN0QVNUNF8yLmph
dmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0
L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlclRlc3RBU1Q0XzIuamF2YQppbmRleCBhY2YwOGVm
Li4yNWY4OGE4IDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlclRlc3RBU1Q0XzIu
amF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVENvbnZlcnRlclRlc3RBU1Q0XzIuamF2YQpAQCAtMTQx
LDYgKzE0MSwxMyBAQAogCX0KIAogCS8qKgorCSAqIEBkZXByZWNhdGVkCisJICovCisJcHJpdmF0
ZSBUeXBlIGNvbXBvbmVudFR5cGUoQXJyYXlUeXBlIGFycmF5KSB7CisJCXJldHVybiBhcnJheS5n
ZXRDb21wb25lbnRUeXBlKCk7CisJfQorCisJLyoqCiAJICogaHR0cDovL2Rldi5lY2xpcHNlLm9y
Zy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yMjU2MAogCSAqLwogCXB1YmxpYyB2b2lkIHRlc3QwNDAx
KCkgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CkBAIC0yNzE2LDExICsyNzIzLDExIEBACiAJ
CWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIkNsYXNzW11bXSIsIHNvdXJjZSk7CiAJCWFzc2VydFRy
dWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgdHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0x
JAogCQlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJVHlwZSBjb21w
b25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJVHlwZSBjb21wb25l
bnRUeXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4g
YXJyYXkgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQK
IAkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXSIsIHNvdXJjZSk7CiAJ
CWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7Ci0JCWNvbXBvbmVudFR5cGUg
PSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQljb21wb25lbnRUeXBlID0gY29tcG9u
ZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJheSB0eXBlIiwgIWNv
bXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJY2hlY2tTb3VyY2VS
YW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2UpOwogCX0KQEAgLTI3NDIsMTUgKzI3
NDksMTUgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiQ2xhc3NbXVtdW10iLCBzb3VyY2Up
OwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNBcnJheVR5cGUoKSk7
IC8vJE5PTi1OTFMtMSQKIAkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7
Ci0JCVR5cGUgY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJ
CVR5cGUgY29tcG9uZW50VHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNzZXJ0
VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAv
LyROT04tTkxTLTEkCiAJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzW11b
XSIsIHNvdXJjZSk7CiAJCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7Ci0J
CWNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQljb21wb25l
bnRUeXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4g
YXJyYXkgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQK
IAkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXSIsIHNvdXJjZSk7CiAJ
CWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7Ci0JCWNvbXBvbmVudFR5cGUg
PSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQljb21wb25lbnRUeXBlID0gY29tcG9u
ZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJheSB0eXBlIiwgIWNv
bXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJY2hlY2tTb3VyY2VS
YW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2UpOwogCX0KQEAgLTI3NzIsMTEgKzI3
NzksMTEgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiQ2xhc3NbXVtdIiwgc291cmNlKTsK
IAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlzQXJyYXlUeXBlKCkpOyAv
LyROT04tTkxTLTEkCiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwot
CQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlU
eXBlIGNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7CiAJCWFzc2VydFRy
dWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlwZS5pc0FycmF5VHlwZSgpKTsgLy8k
Tk9OLU5MUy0xJAogCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJDbGFzc1tdIiwg
c291cmNlKTsKIAkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgY29tcG9uZW50VHlwZTsKLQkJY29t
cG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCWNvbXBvbmVudFR5
cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7CiAJCWFzc2VydFRydWUoImlzIGFuIGFycmF5
IHR5cGUiLCAhY29tcG9uZW50VHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQlj
aGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJDbGFzcyIsIHNvdXJjZSk7CiAJCUxpc3Qg
ZnJhZ21lbnRzID0gZmllbGREZWNsYXJhdGlvbi5mcmFnbWVudHMoKTsKQEAgLTI4MDIsMTkgKzI4
MDksMTkgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiQ2xhc3NbXVtdW11bXSIsIHNvdXJj
ZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgdHlwZS5pc0FycmF5VHlwZSgp
KTsgLy8kTk9OLU5MUy0xJAogCQlBcnJheVR5cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlw
ZTsKLQkJVHlwZSBjb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsK
KwkJVHlwZSBjb21wb25lbnRUeXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3Nl
cnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7
IC8vJE5PTi1OTFMtMSQKIAkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3Nb
XVtdW10iLCBzb3VyY2UpOwogCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBl
OwotCQljb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKKwkJY29t
cG9uZW50VHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90
IGFuIGFycmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxT
LTEkCiAJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzW11bXSIsIHNvdXJj
ZSk7CiAJCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7Ci0JCWNvbXBvbmVu
dFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQljb21wb25lbnRUeXBlID0g
Y29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlw
ZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJY2hlY2tT
b3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXSIsIHNvdXJjZSk7CiAJCWFycmF5VHlw
ZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7Ci0JCWNvbXBvbmVudFR5cGUgPSBhcnJheVR5
cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQljb21wb25lbnRUeXBlID0gY29tcG9uZW50VHlwZShh
cnJheVR5cGUpOwogCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJheSB0eXBlIiwgIWNvbXBvbmVudFR5
cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKIAkJY2hlY2tTb3VyY2VSYW5nZShjb21w
b25lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2UpOwogCX0KQEAgLTI4MzYsNyArMjg0Myw3IEBACiAJ
CWNoZWNrU291cmNlUmFuZ2UodHlwZSwgIkNsYXNzW10iLCBzb3VyY2UpOwogCQlhc3NlcnRUcnVl
KCJub3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQK
IAkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7Ci0JCVR5cGUgY29tcG9u
ZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7CisJCVR5cGUgY29tcG9uZW50
VHlwZSA9IGNvbXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKIAkJYXNzZXJ0VHJ1ZSgiaXMgYW4gYXJy
YXkgdHlwZSIsICFjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJ
CWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzIiwgc291cmNlKTsKIAl9CkBA
IC02NTQ3LDcgKzY1NTQsNyBAQAogCQkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiYm9vbGVhbltd
IiwgY29udGVudHMpOwogCQkJYXNzZXJ0VHJ1ZSgiTm90IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlz
QXJyYXlUeXBlKCkpOwogCQkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7
Ci0JCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwor
CQkJVHlwZSBjb21wb25lbnRUeXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQkJYXNz
ZXJ0VHJ1ZSgiTm90IGEgcHJpbWl0aXZlIHR5cGUiLCBjb21wb25lbnRUeXBlLmlzUHJpbWl0aXZl
VHlwZSgpKTsKIAkJCVByaW1pdGl2ZVR5cGUgcHJpbWl0aXZlVHlwZSA9IChQcmltaXRpdmVUeXBl
KSBjb21wb25lbnRUeXBlOwogCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYm9vbGVhbiIsIFByaW1pdGl2
ZVR5cGUuQk9PTEVBTiwgcHJpbWl0aXZlVHlwZS5nZXRQcmltaXRpdmVUeXBlQ29kZSgpKTsKQEAg
LTk1MzksMTEgKzk1NDYsMTEgQEAKIAkJQXJyYXlDcmVhdGlvbiBhcnJheUNyZWF0aW9uID0gKEFy
cmF5Q3JlYXRpb24pIG5vZGU7CiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSBhcnJheUNyZWF0aW9u
LmdldFR5cGUoKTsKIAkJY2hlY2tTb3VyY2VSYW5nZShhcnJheVR5cGUsICJTdHJpbmdbMF1bYlsx
MF1dW10iLCBzb3VyY2VVbml0LmdldFNvdXJjZSgpKTsKLQkJbm9kZSA9IGFycmF5VHlwZS5nZXRD
b21wb25lbnRUeXBlKCk7CisJCW5vZGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7CiAJCWFz
c2VydEVxdWFscygiTm90IGFuIGFycmF5IHR5cGUiLCBBU1ROb2RlLkFSUkFZX1RZUEUsIG5vZGUu
Z2V0Tm9kZVR5cGUoKSk7CiAJCWFycmF5VHlwZSA9IChBcnJheVR5cGUpbm9kZTsKIAkJY2hlY2tT
b3VyY2VSYW5nZShhcnJheVR5cGUsICJTdHJpbmdbMF1bYlsxMF1dIiwgc291cmNlVW5pdC5nZXRT
b3VyY2UoKSk7Ci0JCW5vZGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQlub2Rl
ID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOwogCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBhcnJh
eSB0eXBlIiwgQVNUTm9kZS5BUlJBWV9UWVBFLCBub2RlLmdldE5vZGVUeXBlKCkpOwogCQlhcnJh
eVR5cGUgPSAoQXJyYXlUeXBlKW5vZGU7CiAJCWNoZWNrU291cmNlUmFuZ2UoYXJyYXlUeXBlLCAi
U3RyaW5nWzBdIiwgc291cmNlVW5pdC5nZXRTb3VyY2UoKSk7CmRpZmYgLS1naXQgYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
ZG9tL0FTVENvbnZlcnRlclRlc3RBU1Q4XzIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRl
c3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29udmVydGVy
VGVzdEFTVDhfMi5qYXZhCmluZGV4IGZiMzJlNzUuLjJlNzQ0MzYgMTAwNjQ0Ci0tLSBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0
cy9kb20vQVNUQ29udmVydGVyVGVzdEFTVDhfMi5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUQ29u
dmVydGVyVGVzdEFTVDhfMi5qYXZhCkBAIC0xNDEsNiArMTQxLDEzIEBACiAJfQogCiAJLyoqCisJ
ICogQGRlcHJlY2F0ZWQKKwkgKi8KKwlwcml2YXRlIFR5cGUgY29tcG9uZW50VHlwZShBcnJheVR5
cGUgYXJyYXkpIHsKKwkJcmV0dXJuIGFycmF5LmdldENvbXBvbmVudFR5cGUoKTsKKwl9CisKKwkv
KioKIAkgKiBodHRwOi8vZGV2LmVjbGlwc2Uub3JnL2J1Z3Mvc2hvd19idWcuY2dpP2lkPTIyNTYw
CiAJICovCiAJcHVibGljIHZvaWQgdGVzdDA0MDEoKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKQEAgLTI3MjUsMTMgKzI3MzIsMTggQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiQ2xh
c3NbXVtdIiwgc291cmNlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCB0eXBl
LmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAo
QXJyYXlUeXBlKSB0eXBlOwotCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29t
cG9uZW50VHlwZSgpOwotCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIGNvbXBvbmVu
dFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKLQkJY2hlY2tTb3VyY2VSYW5nZShj
b21wb25lbnRUeXBlLCAiQ2xhc3NbXSIsIHNvdXJjZSk7Ci0JCWFycmF5VHlwZSA9IChBcnJheVR5
cGUpIGNvbXBvbmVudFR5cGU7Ci0JCWNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9u
ZW50VHlwZSgpOwotCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJheSB0eXBlIiwgIWNvbXBvbmVudFR5
cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKLQkJY2hlY2tTb3VyY2VSYW5nZShjb21w
b25lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2UpOworCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA8
IEFTVC5KTFM4KSB7CisJCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5
VHlwZSk7CisJCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIGNvbXBvbmVudFR5cGUu
aXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9u
ZW50VHlwZSwgIkNsYXNzW10iLCBzb3VyY2UpOworCQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkg
Y29tcG9uZW50VHlwZTsKKwkJCWNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlw
ZSk7CisJCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJheSB0eXBlIiwgIWNvbXBvbmVudFR5cGUuaXNB
cnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50
VHlwZSwgIkNsYXNzIiwgc291cmNlKTsKKwkJfSBlbHNlIHsKKwkJCVR5cGUgZWxlbWVudFR5cGUg
PSBhcnJheVR5cGUuZ2V0RWxlbWVudFR5cGUoKTsKKwkJCWNoZWNrU291cmNlUmFuZ2UoZWxlbWVu
dFR5cGUsICJDbGFzcyIsIHNvdXJjZSk7CisJCX0KIAl9CiAKIAkvKioKQEAgLTI3NTEsMTcgKzI3
NjMsMjIgQEAKIAkJY2hlY2tTb3VyY2VSYW5nZSh0eXBlLCAiQ2xhc3NbXVtdW10iLCBzb3VyY2Up
OwogCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIHR5cGUuaXNBcnJheVR5cGUoKSk7
IC8vJE5PTi1OTFMtMSQKIAkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7
Ci0JCVR5cGUgY29tcG9uZW50VHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0J
CWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBlIiwgY29tcG9uZW50VHlwZS5pc0FycmF5VHlw
ZSgpKTsgLy8kTk9OLU5MUy0xJAotCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJD
bGFzc1tdW10iLCBzb3VyY2UpOwotCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRU
eXBlOwotCQljb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJ
YXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBl
KCkpOyAvLyROT04tTkxTLTEkCi0JCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNs
YXNzW10iLCBzb3VyY2UpOwotCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBl
OwotCQljb21wb25lbnRUeXBlID0gYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNz
ZXJ0VHJ1ZSgiaXMgYW4gYXJyYXkgdHlwZSIsICFjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkp
OyAvLyROT04tTkxTLTEkCi0JCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNz
Iiwgc291cmNlKTsKKwkJaWYgKHRoaXMuYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgeworCQkJ
VHlwZSBjb21wb25lbnRUeXBlID0gY29tcG9uZW50VHlwZShhcnJheVR5cGUpOworCQkJYXNzZXJ0
VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAv
LyROT04tTkxTLTEkCisJCQljaGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJDbGFzc1td
W10iLCBzb3VyY2UpOworCQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgY29tcG9uZW50VHlwZTsK
KwkJCWNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7CisJCQlhc3NlcnRU
cnVlKCJub3QgYW4gYXJyYXkgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8v
JE5PTi1OTFMtMSQKKwkJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzW10i
LCBzb3VyY2UpOworCQkJYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgY29tcG9uZW50VHlwZTsKKwkJ
CWNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7CisJCQlhc3NlcnRUcnVl
KCJpcyBhbiBhcnJheSB0eXBlIiwgIWNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5P
Ti1OTFMtMSQKKwkJCWNoZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzIiwgc291
cmNlKTsKKwkJfSBlbHNlIHsKKwkJCVR5cGUgZWxlbWVudFR5cGUgPSBhcnJheVR5cGUuZ2V0RWxl
bWVudFR5cGUoKTsKKwkJCWNoZWNrU291cmNlUmFuZ2UoZWxlbWVudFR5cGUsICJDbGFzcyIsIHNv
dXJjZSk7CisJCX0KIAl9CiAKIAkvKioKQEAgLTI3ODEsMTMgKzI3OTgsMTggQEAKIAkJY2hlY2tT
b3VyY2VSYW5nZSh0eXBlLCAiQ2xhc3NbXVtdIiwgc291cmNlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90
IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJCUFy
cmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQlUeXBlIGNvbXBvbmVudFR5
cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlhc3NlcnRUcnVlKCJub3QgYW4g
YXJyYXkgdHlwZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQK
LQkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXSIsIHNvdXJjZSk7Ci0J
CWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7Ci0JCWNvbXBvbmVudFR5cGUg
PSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJh
eSB0eXBlIiwgIWNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKLQkJ
Y2hlY2tTb3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2UpOworCQlpZiAo
dGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQlUeXBlIGNvbXBvbmVudFR5cGUg
PSBjb21wb25lbnRUeXBlKGFycmF5VHlwZSk7CisJCQlhc3NlcnRUcnVlKCJub3QgYW4gYXJyYXkg
dHlwZSIsIGNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJCWNo
ZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzW10iLCBzb3VyY2UpOworCQkJYXJy
YXlUeXBlID0gKEFycmF5VHlwZSkgY29tcG9uZW50VHlwZTsKKwkJCWNvbXBvbmVudFR5cGUgPSBj
b21wb25lbnRUeXBlKGFycmF5VHlwZSk7CisJCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJheSB0eXBl
IiwgIWNvbXBvbmVudFR5cGUuaXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKKwkJCWNoZWNr
U291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzIiwgc291cmNlKTsKKwkJfSBlbHNlIHsK
KwkJCVR5cGUgZWxlbWVudFR5cGUgPSBhcnJheVR5cGUuZ2V0RWxlbWVudFR5cGUoKTsKKwkJCWNo
ZWNrU291cmNlUmFuZ2UoZWxlbWVudFR5cGUsICJDbGFzcyIsIHNvdXJjZSk7CisJCX0KIAkJTGlz
dCBmcmFnbWVudHMgPSBmaWVsZERlY2xhcmF0aW9uLmZyYWdtZW50cygpOwogCQlhc3NlcnRFcXVh
bHMoIndyb25nIHNpemUiLCAxLCBmcmFnbWVudHMuc2l6ZSgpKTsKIAkJVmFyaWFibGVEZWNsYXJh
dGlvbkZyYWdtZW50IGZyYWdtZW50ID0gKFZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCkgZnJh
Z21lbnRzLmdldCgwKTsKQEAgLTI4MTEsMjEgKzI4MzMsMjYgQEAKIAkJY2hlY2tTb3VyY2VSYW5n
ZSh0eXBlLCAiQ2xhc3NbXVtdW11bXSIsIHNvdXJjZSk7CiAJCWFzc2VydFRydWUoIm5vdCBhbiBh
cnJheSB0eXBlIiwgdHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAogCQlBcnJheVR5
cGUgYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgdHlwZTsKLQkJVHlwZSBjb21wb25lbnRUeXBlID0g
YXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5
IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCi0JCWNo
ZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzW11bXVtdIiwgc291cmNlKTsKLQkJ
YXJyYXlUeXBlID0gKEFycmF5VHlwZSkgY29tcG9uZW50VHlwZTsKLQkJY29tcG9uZW50VHlwZSA9
IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWFzc2VydFRydWUoIm5vdCBhbiBhcnJh
eSB0eXBlIiwgY29tcG9uZW50VHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAotCQlj
aGVja1NvdXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJDbGFzc1tdW10iLCBzb3VyY2UpOwotCQlh
cnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBlOwotCQljb21wb25lbnRUeXBlID0g
YXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5
IHR5cGUiLCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCi0JCWNo
ZWNrU291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzW10iLCBzb3VyY2UpOwotCQlhcnJh
eVR5cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBlOwotCQljb21wb25lbnRUeXBlID0gYXJy
YXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJYXNzZXJ0VHJ1ZSgiaXMgYW4gYXJyYXkgdHlw
ZSIsICFjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCi0JCWNoZWNr
U291cmNlUmFuZ2UoY29tcG9uZW50VHlwZSwgIkNsYXNzIiwgc291cmNlKTsKKwkJaWYgKHRoaXMu
YXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgeworCQkJVHlwZSBjb21wb25lbnRUeXBlID0gY29t
cG9uZW50VHlwZShhcnJheVR5cGUpOworCQkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUi
LCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJCQljaGVja1Nv
dXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJDbGFzc1tdW11bXSIsIHNvdXJjZSk7CisJCQlhcnJh
eVR5cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBlOworCQkJY29tcG9uZW50VHlwZSA9IGNv
bXBvbmVudFR5cGUoYXJyYXlUeXBlKTsKKwkJCWFzc2VydFRydWUoIm5vdCBhbiBhcnJheSB0eXBl
IiwgY29tcG9uZW50VHlwZS5pc0FycmF5VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQkJY2hlY2tT
b3VyY2VSYW5nZShjb21wb25lbnRUeXBlLCAiQ2xhc3NbXVtdIiwgc291cmNlKTsKKwkJCWFycmF5
VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7CisJCQljb21wb25lbnRUeXBlID0gY29t
cG9uZW50VHlwZShhcnJheVR5cGUpOworCQkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUi
LCBjb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJCQljaGVja1Nv
dXJjZVJhbmdlKGNvbXBvbmVudFR5cGUsICJDbGFzc1tdIiwgc291cmNlKTsKKwkJCWFycmF5VHlw
ZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGU7CisJCQljb21wb25lbnRUeXBlID0gY29tcG9u
ZW50VHlwZShhcnJheVR5cGUpOworCQkJYXNzZXJ0VHJ1ZSgiaXMgYW4gYXJyYXkgdHlwZSIsICFj
b21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCisJCQljaGVja1NvdXJj
ZVJhbmdlKGNvbXBvbmVudFR5cGUsICJDbGFzcyIsIHNvdXJjZSk7CisJCX0gZWxzZSB7CisJCQlU
eXBlIGVsZW1lbnRUeXBlID0gYXJyYXlUeXBlLmdldEVsZW1lbnRUeXBlKCk7CisJCQljaGVja1Nv
dXJjZVJhbmdlKGVsZW1lbnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2UpOworCQl9CiAJfQogCiAJLyoq
CkBAIC0yODQ1LDkgKzI4NzIsOSBAQAogCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJDbGFzc1td
Iiwgc291cmNlKTsKIAkJYXNzZXJ0VHJ1ZSgibm90IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlzQXJy
YXlUeXBlKCkpOyAvLyROT04tTkxTLTEkCiAJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlU
eXBlKSB0eXBlOwotCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50
VHlwZSgpOwotCQlhc3NlcnRUcnVlKCJpcyBhbiBhcnJheSB0eXBlIiwgIWNvbXBvbmVudFR5cGUu
aXNBcnJheVR5cGUoKSk7IC8vJE5PTi1OTFMtMSQKLQkJY2hlY2tTb3VyY2VSYW5nZShjb21wb25l
bnRUeXBlLCAiQ2xhc3MiLCBzb3VyY2UpOworCQl0eXBlID0gdGhpcy5hc3QuYXBpTGV2ZWwoKSA8
IEFTVC5KTFM4ID8gY29tcG9uZW50VHlwZShhcnJheVR5cGUpIDogYXJyYXlUeXBlLmdldEVsZW1l
bnRUeXBlKCk7CisJCWFzc2VydFRydWUoImlzIGFuIGFycmF5IHR5cGUiLCAhdHlwZS5pc0FycmF5
VHlwZSgpKTsgLy8kTk9OLU5MUy0xJAorCQljaGVja1NvdXJjZVJhbmdlKHR5cGUsICJDbGFzcyIs
IHNvdXJjZSk7CiAJfQogCiAJLyoqCkBAIC02NTU2LDcgKzY1ODMsNyBAQAogCQkJY2hlY2tTb3Vy
Y2VSYW5nZSh0eXBlLCAiYm9vbGVhbltdIiwgY29udGVudHMpOwogCQkJYXNzZXJ0VHJ1ZSgiTm90
IGFuIGFycmF5IHR5cGUiLCB0eXBlLmlzQXJyYXlUeXBlKCkpOwogCQkJQXJyYXlUeXBlIGFycmF5
VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7Ci0JCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJheVR5
cGUuZ2V0Q29tcG9uZW50VHlwZSgpOworCQkJVHlwZSBjb21wb25lbnRUeXBlID0gY29tcG9uZW50
VHlwZShhcnJheVR5cGUpOwogCQkJYXNzZXJ0VHJ1ZSgiTm90IGEgcHJpbWl0aXZlIHR5cGUiLCBj
b21wb25lbnRUeXBlLmlzUHJpbWl0aXZlVHlwZSgpKTsKIAkJCVByaW1pdGl2ZVR5cGUgcHJpbWl0
aXZlVHlwZSA9IChQcmltaXRpdmVUeXBlKSBjb21wb25lbnRUeXBlOwogCQkJYXNzZXJ0RXF1YWxz
KCJOb3QgYm9vbGVhbiIsIFByaW1pdGl2ZVR5cGUuQk9PTEVBTiwgcHJpbWl0aXZlVHlwZS5nZXRQ
cmltaXRpdmVUeXBlQ29kZSgpKTsKQEAgLTk1NDgsMTQgKzk1NzUsMTkgQEAKIAkJQXJyYXlDcmVh
dGlvbiBhcnJheUNyZWF0aW9uID0gKEFycmF5Q3JlYXRpb24pIG5vZGU7CiAJCUFycmF5VHlwZSBh
cnJheVR5cGUgPSBhcnJheUNyZWF0aW9uLmdldFR5cGUoKTsKIAkJY2hlY2tTb3VyY2VSYW5nZShh
cnJheVR5cGUsICJTdHJpbmdbMF1bYlsxMF1dW10iLCBzb3VyY2VVbml0LmdldFNvdXJjZSgpKTsK
LQkJbm9kZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCWFzc2VydEVxdWFscygi
Tm90IGFuIGFycmF5IHR5cGUiLCBBU1ROb2RlLkFSUkFZX1RZUEUsIG5vZGUuZ2V0Tm9kZVR5cGUo
KSk7Ci0JCWFycmF5VHlwZSA9IChBcnJheVR5cGUpbm9kZTsKLQkJY2hlY2tTb3VyY2VSYW5nZShh
cnJheVR5cGUsICJTdHJpbmdbMF1bYlsxMF1dIiwgc291cmNlVW5pdC5nZXRTb3VyY2UoKSk7Ci0J
CW5vZGUgPSBhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQlhc3NlcnRFcXVhbHMoIk5v
dCBhbiBhcnJheSB0eXBlIiwgQVNUTm9kZS5BUlJBWV9UWVBFLCBub2RlLmdldE5vZGVUeXBlKCkp
OwotCQlhcnJheVR5cGUgPSAoQXJyYXlUeXBlKW5vZGU7Ci0JCWNoZWNrU291cmNlUmFuZ2UoYXJy
YXlUeXBlLCAiU3RyaW5nWzBdIiwgc291cmNlVW5pdC5nZXRTb3VyY2UoKSk7CisJCWlmICh0aGlz
LmFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsKKwkJCW5vZGUgPSBjb21wb25lbnRUeXBlKGFy
cmF5VHlwZSk7CisJCQlhc3NlcnRFcXVhbHMoIk5vdCBhbiBhcnJheSB0eXBlIiwgQVNUTm9kZS5B
UlJBWV9UWVBFLCBub2RlLmdldE5vZGVUeXBlKCkpOworCQkJYXJyYXlUeXBlID0gKEFycmF5VHlw
ZSlub2RlOworCQkJY2hlY2tTb3VyY2VSYW5nZShhcnJheVR5cGUsICJTdHJpbmdbMF1bYlsxMF1d
Iiwgc291cmNlVW5pdC5nZXRTb3VyY2UoKSk7CisJCQlub2RlID0gY29tcG9uZW50VHlwZShhcnJh
eVR5cGUpOworCQkJYXNzZXJ0RXF1YWxzKCJOb3QgYW4gYXJyYXkgdHlwZSIsIEFTVE5vZGUuQVJS
QVlfVFlQRSwgbm9kZS5nZXROb2RlVHlwZSgpKTsKKwkJCWFycmF5VHlwZSA9IChBcnJheVR5cGUp
bm9kZTsKKwkJCWNoZWNrU291cmNlUmFuZ2UoYXJyYXlUeXBlLCAiU3RyaW5nWzBdIiwgc291cmNl
VW5pdC5nZXRTb3VyY2UoKSk7CisJCX0gZWxzZSB7CisJCQlub2RlID0gYXJyYXlUeXBlLmdldEVs
ZW1lbnRUeXBlKCk7CisJCQljaGVja1NvdXJjZVJhbmdlKG5vZGUsICJTdHJpbmciLCBzb3VyY2VV
bml0LmdldFNvdXJjZSgpKTsKKwkJfQogCX0KIAogCS8qKgpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlw
c2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2Rv
bS9BU1RTdHJ1Y3R1cmFsUHJvcGVydHlUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9tL0FTVFN0cnVjdHVy
YWxQcm9wZXJ0eVRlc3QuamF2YQppbmRleCAyYmY0Yjg3Li5iMzkyODExIDEwMDY0NAotLS0gYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvZG9tL0FTVFN0cnVjdHVyYWxQcm9wZXJ0eVRlc3QuamF2YQorKysgYi9vcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9t
L0FTVFN0cnVjdHVyYWxQcm9wZXJ0eVRlc3QuamF2YQpAQCAtMTcyLDcgKzE3Miw3IEBACiAJCQkJ
YnJlYWs7CiAJCQljYXNlIEFTVC5KTFM4IDoKIAkJCQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJl
ciBvZiB2aXNpdGVkIG5vZGUgY2xhc3NlcyIsIDg0LCBub2RlQ2xhc3Nlcy5zaXplKCkpOwotCQkJ
CWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIHZpc2l0ZWQgcHJvcGVydGllcyIsIDEwNSwg
dmlzaXRlZFByb3BlcnRpZXMuc2l6ZSgpKTsKKwkJCQlhc3NlcnRFcXVhbHMoIldyb25nIG51bWJl
ciBvZiB2aXNpdGVkIHByb3BlcnRpZXMiLCAxMDYsIHZpc2l0ZWRQcm9wZXJ0aWVzLnNpemUoKSk7
CiAJCQkJYXNzZXJ0RXF1YWxzKCJXcm9uZyBudW1iZXIgb2Ygc2ltcGxlIHByb3BlcnRpZXMiLCAy
MSwgc2ltcGxlUHJvcGVydGllcy5zaXplKCkpOwogCQkJCWFzc2VydEVxdWFscygiV3JvbmcgbnVt
YmVyIG9mIGNoaWxkIHByb3BlcnRpZXMiLCAxMTgsIGNoaWxkUHJvcGVydGllcy5zaXplKCkpOwog
CQkJCWFzc2VydEVxdWFscygiV3JvbmcgbnVtYmVyIG9mIGNoaWxkIGxpc3QgcHJvcGVydGllcyIs
IDY2LCBjaGlsZExpc3RQcm9wZXJ0aWVzLnNpemUoKSk7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvZG9t
L0FTVFRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUVGVzdC5qYXZhCmluZGV4IDZlYjMwYTkuLmRm
NzM3YzggMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUVGVzdC5qYXZhCisrKyBiL29yZy5lY2xp
cHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9k
b20vQVNUVGVzdC5qYXZhCkBAIC0yMDU3LDYgKzIwNTcsMTggQEAKIAkJYXNzZXJ0VHJ1ZShQcmlt
aXRpdmVUeXBlLnRvQ29kZSgibm90LWEtdHlwZSIpID09IG51bGwpOyAvLyROT04tTkxTLTEkCiAJ
fQogCisJLyoqCisJICogQGRlcHJlY2F0ZWQKKwkgKi8KKwlUeXBlIGdldEFycmF5Q29tcG9uZW50
VHlwZShBcnJheVR5cGUgYXJyYXkpIHsKKwkJcmV0dXJuIGFycmF5LmdldENvbXBvbmVudFR5cGUo
KTsKKwl9CisJLyoqCisJICogQGRlcHJlY2F0ZWQKKwkgKi8KKwl2b2lkIHNldEFycmF5Q29tcG9u
ZW50VHlwZShBcnJheVR5cGUgYXJyYXksIFR5cGUgdHlwZSkgeworCQlhcnJheS5zZXRDb21wb25l
bnRUeXBlKHR5cGUpOworCX0KIAlwdWJsaWMgdm9pZCB0ZXN0QXJyYXlUeXBlKCkgewogCQlTaW1w
bGVOYW1lIHgxID0gdGhpcy5hc3QubmV3U2ltcGxlTmFtZSgiU3RyaW5nIik7IC8vJE5PTi1OTFMt
MSQKIAkJU2ltcGxlVHlwZSB4MiA9IHRoaXMuYXN0Lm5ld1NpbXBsZVR5cGUoeDEpOwpAQCAtMjA2
Niw3ICsyMDc4LDExIEBACiAJCXByZXZpb3VzQ291bnQgPSB0aGlzLmFzdC5tb2RpZmljYXRpb25D
b3VudCgpOwogCQlhc3NlcnRUcnVlKHguZ2V0QVNUKCkgPT0gdGhpcy5hc3QpOwogCQlhc3NlcnRU
cnVlKHguZ2V0UGFyZW50KCkgPT0gbnVsbCk7Ci0JCWFzc2VydFRydWUoeC5nZXRDb21wb25lbnRU
eXBlKCkuZ2V0UGFyZW50KCkgPT0geCk7CisJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCgpIDwgQVNU
LkpMUzgpIHsKKwkJCWFzc2VydFRydWUoZ2V0QXJyYXlDb21wb25lbnRUeXBlKHgpLmdldFBhcmVu
dCgpID09IHgpOworCQl9IGVsc2UgeworCQkJYXNzZXJ0VHJ1ZSh4LmdldEVsZW1lbnRUeXBlKCku
Z2V0UGFyZW50KCkgPT0geCk7CisJCX0KIAkJLy8gbWFrZSBzdXJlIHRoYXQgcmVhZGluZyBkaWQg
bm90IGNoYW5nZSBtb2RpZmljYXRpb24gY291bnQKIAkJYXNzZXJ0VHJ1ZSh0aGlzLmFzdC5tb2Rp
ZmljYXRpb25Db3VudCgpID09IHByZXZpb3VzQ291bnQpOwogCQlhc3NlcnRUcnVlKCF4LmlzU2lt
cGxlVHlwZSgpKTsKQEAgLTIwODEsMzkgKzIwOTcsNjkgQEAKIAkJYXNzZXJ0VHJ1ZSh4LmdldERp
bWVuc2lvbnMoKSA9PSAxKTsKIAkJYXNzZXJ0VHJ1ZSh4LmdldEVsZW1lbnRUeXBlKCkgPT0geDIp
OwogCi0JCWdlbmVyaWNQcm9wZXJ0eVRlc3QoeCwgbmV3IFByb3BlcnR5KCJDb21wb25lbnRUeXBl
IiwgdHJ1ZSwgVHlwZS5jbGFzcykgeyAvLyROT04tTkxTLTEkCi0JCQlwdWJsaWMgQVNUTm9kZSBz
YW1wbGUoQVNUIHRhcmdldEFzdCwgYm9vbGVhbiBwYXJlbnRlZCkgewotCQkJCVNpbXBsZVR5cGUg
cmVzdWx0ID0gdGFyZ2V0QXN0Lm5ld1NpbXBsZVR5cGUoCi0JCQkJCXRhcmdldEFzdC5uZXdTaW1w
bGVOYW1lKCJhIikpOyAvLyROT04tTkxTLTEkCi0JCQkJaWYgKHBhcmVudGVkKSB7Ci0JCQkJCXRh
cmdldEFzdC5uZXdBcnJheVR5cGUocmVzdWx0KTsKKwkJaWYgKHRoaXMuYXN0LmFwaUxldmVsKCkg
PCBBU1QuSkxTOCkgeworCQkJZ2VuZXJpY1Byb3BlcnR5VGVzdCh4LCBuZXcgUHJvcGVydHkoIkNv
bXBvbmVudFR5cGUiLCB0cnVlLCBUeXBlLmNsYXNzKSB7IC8vJE5PTi1OTFMtMSQKKwkJCQlwdWJs
aWMgQVNUTm9kZSBzYW1wbGUoQVNUIHRhcmdldEFzdCwgYm9vbGVhbiBwYXJlbnRlZCkgeworCQkJ
CQlTaW1wbGVUeXBlIHJlc3VsdCA9IHRhcmdldEFzdC5uZXdTaW1wbGVUeXBlKAorCQkJCQkJdGFy
Z2V0QXN0Lm5ld1NpbXBsZU5hbWUoImEiKSk7IC8vJE5PTi1OTFMtMSQKKwkJCQkJaWYgKHBhcmVu
dGVkKSB7CisJCQkJCQl0YXJnZXRBc3QubmV3QXJyYXlUeXBlKHJlc3VsdCk7CisJCQkJCX0KKwkJ
CQkJcmV0dXJuIHJlc3VsdDsKIAkJCQl9Ci0JCQkJcmV0dXJuIHJlc3VsdDsKLQkJCX0KLQkJCXB1
YmxpYyBBU1ROb2RlIHdyYXAoKSB7Ci0JCQkJQXJyYXlUeXBlIHJlc3VsdCA9IEFTVFRlc3QudGhp
cy5hc3QubmV3QXJyYXlUeXBlKHgpOwotCQkJCXJldHVybiByZXN1bHQ7Ci0JCQl9Ci0JCQlwdWJs
aWMgdm9pZCB1bndyYXAoKSB7Ci0JCQkJQXJyYXlUeXBlIGEgPSAoQXJyYXlUeXBlKSB4LmdldFBh
cmVudCgpOwotCQkJCWEuc2V0Q29tcG9uZW50VHlwZShBU1RUZXN0LnRoaXMuYXN0Lm5ld1ByaW1p
dGl2ZVR5cGUoUHJpbWl0aXZlVHlwZS5JTlQpKTsKLQkJCX0KLQkJCXB1YmxpYyBBU1ROb2RlIGdl
dCgpIHsKLQkJCQlyZXR1cm4geC5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCQl9Ci0JCQlwdWJsaWMg
dm9pZCBzZXQoQVNUTm9kZSB2YWx1ZSkgewotCQkJCXguc2V0Q29tcG9uZW50VHlwZSgoVHlwZSkg
dmFsdWUpOwotCQkJfQotCQl9KTsKKwkJCQlwdWJsaWMgQVNUTm9kZSB3cmFwKCkgeworCQkJCQlB
cnJheVR5cGUgcmVzdWx0ID0gQVNUVGVzdC50aGlzLmFzdC5uZXdBcnJheVR5cGUoeCk7CisJCQkJ
CXJldHVybiByZXN1bHQ7CisJCQkJfQorCQkJCXB1YmxpYyB2b2lkIHVud3JhcCgpIHsKKwkJCQkJ
QXJyYXlUeXBlIGEgPSAoQXJyYXlUeXBlKSB4LmdldFBhcmVudCgpOworCQkJCQlzZXRBcnJheUNv
bXBvbmVudFR5cGUoYSwgQVNUVGVzdC50aGlzLmFzdC5uZXdQcmltaXRpdmVUeXBlKFByaW1pdGl2
ZVR5cGUuSU5UKSk7CisJCQkJfQorCQkJCXB1YmxpYyBBU1ROb2RlIGdldCgpIHsKKwkJCQkJcmV0
dXJuIGdldEFycmF5Q29tcG9uZW50VHlwZSh4KTsKKwkJCQl9CisJCQkJcHVibGljIHZvaWQgc2V0
KEFTVE5vZGUgdmFsdWUpIHsKKwkJCQkJc2V0QXJyYXlDb21wb25lbnRUeXBlKHgsIChUeXBlKSB2
YWx1ZSk7CisJCQkJfQorCQkJfSk7CiAKLQkJeC5zZXRDb21wb25lbnRUeXBlKAotCQkJdGhpcy5h
c3QubmV3QXJyYXlUeXBlKHRoaXMuYXN0Lm5ld1ByaW1pdGl2ZVR5cGUoUHJpbWl0aXZlVHlwZS5J
TlQpLCA0KSk7CisJCQlzZXRBcnJheUNvbXBvbmVudFR5cGUoeCwKKwkJCQl0aGlzLmFzdC5uZXdB
cnJheVR5cGUodGhpcy5hc3QubmV3UHJpbWl0aXZlVHlwZShQcmltaXRpdmVUeXBlLklOVCksIDQp
KTsKKwkJCWFzc2VydFRydWUoeC5nZXREaW1lbnNpb25zKCkgPT0gNSk7CisJCQlhc3NlcnRUcnVl
KHguZ2V0RWxlbWVudFR5cGUoKS5pc1ByaW1pdGl2ZVR5cGUoKSk7CisJCQlmaW5hbCBBcnJheVR5
cGUgeDMgPSB0aGlzLmFzdC5uZXdBcnJheVR5cGUoeCwgMik7CisJCQlhc3NlcnRUcnVlKHgzLmdl
dERpbWVuc2lvbnMoKSA9PSA3KTsKKwkJfSBlbHNlIHsKKwkJCWdlbmVyaWNQcm9wZXJ0eVRlc3Qo
eCwgbmV3IFByb3BlcnR5KCJFbGVtZW50VHlwZSIsIHRydWUsIFR5cGUuY2xhc3MpIHsgLy8kTk9O
LU5MUy0xJAorCQkJCXB1YmxpYyBBU1ROb2RlIHNhbXBsZShBU1QgdGFyZ2V0QXN0LCBib29sZWFu
IHBhcmVudGVkKSB7CisJCQkJCVNpbXBsZVR5cGUgcmVzdWx0ID0gdGFyZ2V0QXN0Lm5ld1NpbXBs
ZVR5cGUoCisJCQkJCQl0YXJnZXRBc3QubmV3U2ltcGxlTmFtZSgiYSIpKTsgLy8kTk9OLU5MUy0x
JAorCQkJCQlpZiAocGFyZW50ZWQpIHsKKwkJCQkJCXRhcmdldEFzdC5uZXdBcnJheVR5cGUocmVz
dWx0KTsKKwkJCQkJfQorCQkJCQlyZXR1cm4gcmVzdWx0OworCQkJCX0KKwkJCQlwdWJsaWMgQVNU
Tm9kZSB3cmFwKCkgeworCQkJCQlBcnJheVR5cGUgcmVzdWx0ID0gQVNUVGVzdC50aGlzLmFzdC5u
ZXdBcnJheVR5cGUoeCwgNSk7CisJCQkJCXJldHVybiByZXN1bHQ7CisJCQkJfQorCQkJCXB1Ymxp
YyB2b2lkIHVud3JhcCgpIHsKKwkJCQkJQXJyYXlUeXBlIGEgPSAoQXJyYXlUeXBlKSB4LmdldFBh
cmVudCgpOworCQkJCQlhLnNldEVsZW1lbnRUeXBlKEFTVFRlc3QudGhpcy5hc3QubmV3UHJpbWl0
aXZlVHlwZShQcmltaXRpdmVUeXBlLklOVCkpOworCQkJCX0KKwkJCQlwdWJsaWMgQVNUTm9kZSBn
ZXQoKSB7CisJCQkJCXJldHVybiB4LmdldEVsZW1lbnRUeXBlKCk7CisJCQkJfQorCQkJCXB1Ymxp
YyB2b2lkIHNldChBU1ROb2RlIHZhbHVlKSB7CisJCQkJCXguc2V0RWxlbWVudFR5cGUoKFR5cGUp
IHZhbHVlKTsKKwkJCQl9CisJCQl9KTsKIAotCQlhc3NlcnRUcnVlKHguZ2V0RGltZW5zaW9ucygp
ID09IDUpOwotCQlhc3NlcnRUcnVlKHguZ2V0RWxlbWVudFR5cGUoKS5pc1ByaW1pdGl2ZVR5cGUo
KSk7Ci0JCWZpbmFsIEFycmF5VHlwZSB4MyA9IHRoaXMuYXN0Lm5ld0FycmF5VHlwZSh4LCAyKTsK
LQkJYXNzZXJ0VHJ1ZSh4My5nZXREaW1lbnNpb25zKCkgPT0gNyk7Ci0JCQorCQkJeC5zZXRFbGVt
ZW50VHlwZSh0aGlzLmFzdC5uZXdQcmltaXRpdmVUeXBlKFByaW1pdGl2ZVR5cGUuSU5UKSk7CisJ
CQlhc3NlcnRUcnVlKHguZ2V0RGltZW5zaW9ucygpID09IDEpOworCQkJYXNzZXJ0VHJ1ZSh4Lmdl
dEVsZW1lbnRUeXBlKCkuaXNQcmltaXRpdmVUeXBlKCkpOworCQl9CisKIAkJdHJ5IHsKIAkJCXRo
aXMuYXN0Lm5ld0FycmF5VHlwZShudWxsLCAyKTsKIAkJfSBjYXRjaChJbGxlZ2FsQXJndW1lbnRF
eGNlcHRpb24gZSkgewpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9k
ZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL2RvbS9BU1RWaXNpdG9yVGVzdC5qYXZh
IGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9j
b3JlL3Rlc3RzL2RvbS9BU1RWaXNpdG9yVGVzdC5qYXZhCmluZGV4IGE5NGNiMjQuLjA3NmQ0NmEg
MTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9kb20vQVNUVmlzaXRvclRlc3QuamF2YQorKysgYi9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
ZG9tL0FTVFZpc2l0b3JUZXN0LmphdmEKQEAgLTExNTcsNyArMTE1Nyw4IEBACiAJCXRoaXMuYi5z
ZXRMZW5ndGgoMCk7CiAJCXgxLmFjY2VwdCh2MSk7CiAJCVN0cmluZyByZXN1bHQgPSB0aGlzLmIu
dG9TdHJpbmcoKTsKLQkJYXNzZXJ0VHJ1ZSgiWyh0QVsodFBjaGFyY2hhcnRQKV10QSldIi5lcXVh
bHMocmVzdWx0KSk7IC8vJE5PTi1OTFMtMSQKKwkJU3RyaW5nIGV4cGVjdGVkID0gdGhpcy5hc3Qu
YXBpTGV2ZWwoKSA8IEFTVC5KTFM4ID8gIlsodEFbKHRQY2hhcmNoYXJ0UClddEEpXSIgOiAiWyh0
QVsodFBjaGFyY2hhcnRQKV1bKEBFREBFRClddEEpXSI7CisJCWFzc2VydFRydWUoZXhwZWN0ZWQu
ZXF1YWxzKHJlc3VsdCkpOyAvLyROT04tTkxTLTEkCiAJfQogCiAJLyoqIEBkZXByZWNhdGVkIHVz
aW5nIGRlcHJlY2F0ZWQgY29kZSAqLwpAQCAtMTI1NCw3ICsxMjU1LDggQEAKIAkJdGhpcy5iLnNl
dExlbmd0aCgwKTsKIAkJeDEuYWNjZXB0KHYxKTsKIAkJU3RyaW5nIHJlc3VsdCA9IHRoaXMuYi50
b1N0cmluZygpOwotCQlhc3NlcnRUcnVlKHJlc3VsdC5lcXVhbHMoIlsoZUFDIisiWyh0QSIrdGhp
cy5UMVMrInRBKV0iK3RoaXMuRTFTK3RoaXMuRTJTKyJbKGVBSWVBSSldZUFDKV0iKSk7IC8vJE5P
Ti1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKKwkJU3Ry
aW5nIGRpbSA9IHRoaXMuYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxTOCA/ICIiIDogIlsoQEVEQEVE
KV0iOworCQlhc3NlcnRUcnVlKHJlc3VsdC5lcXVhbHMoIlsoZUFDIisiWyh0QSIrdGhpcy5UMVMr
IGRpbSArInRBKV0iK3RoaXMuRTFTK3RoaXMuRTJTKyJbKGVBSWVBSSldZUFDKV0iKSk7IC8vJE5P
Ti1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMkIC8vJE5PTi1OTFMtNCQKIAl9CiAJ
cHVibGljIHZvaWQgdGVzdEFycmF5SW5pdGlhbGl6ZXIoKSB7CiAJCUFycmF5SW5pdGlhbGl6ZXIg
eDEgPSB0aGlzLmFzdC5uZXdBcnJheUluaXRpYWxpemVyKCk7CmRpZmYgLS1naXQgYS9vcmcuZWNs
aXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
ZG9tL1R5cGVBbm5vdGF0aW9uc0NvbnZlcnRlclRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5j
b3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9kb20vVHlwZUFu
bm90YXRpb25zQ29udmVydGVyVGVzdC5qYXZhCmluZGV4IDFjYTBjYjMuLmM3ZWZlYjAgMTAwNjQ0
Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9q
ZHQvY29yZS90ZXN0cy9kb20vVHlwZUFubm90YXRpb25zQ29udmVydGVyVGVzdC5qYXZhCisrKyBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29y
ZS90ZXN0cy9kb20vVHlwZUFubm90YXRpb25zQ29udmVydGVyVGVzdC5qYXZhCkBAIC0xLDUgKzEs
NSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAx
MiBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAx
MyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRo
aXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2
YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEu
MAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFi
bGUgYXQKQEAgLTE2Miw3ICsxNjIsNyBAQAogCQkJCSJjbGFzcyBaPFE+IHtcbiIgKyAKIAkJCQki
ICAgIH1cbiIgKyAKIAkJCQkiICB9XG4iICsgCi0JCQkJIiAgT2JqZWN0IG89KEBNYXJrZXIgWDxA
TWFya2VyIFN0cmluZz4uQE1hcmtlciBZPEBNYXJrZXIgSW50ZWdlcj4uQE1hcmtlciBaPEBNYXJr
ZXIgT2JqZWN0PkBNYXJrZXIgW11bXUBNYXJrZXIgW11bXSludWxsO1xuIiArIAorCQkJCSIgIE9i
amVjdCBvPShATWFya2VyIFg8QE1hcmtlciBTdHJpbmc+LkBNYXJrZXIgWTxATWFya2VyIEludGVn
ZXI+LkBNYXJrZXIgWjxATWFya2VyIE9iamVjdD4gQE1hcmtlciBbXSBbXSBATWFya2VyIFtdIFtd
KW51bGw7XG4iICsgCiAJCQkJIiAgQGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldChqYXZhLmxh
bmcuYW5ub3RhdGlvbi5FbGVtZW50VHlwZS5UWVBFX1VTRSkgQGludGVyZmFjZSBNYXJrZXIge31c
biIgKyAKIAkJCQkifVxuIjsKIAkJYXNzZXJ0QVNUTm9kZUVxdWFscyhleHBlY3RlZE91dHB1dCwg
bm9kZSk7CkBAIC0xOTEsNyArMTkxLDcgQEAKIAkJCQkiY2xhc3MgWjxRPiB7XG4iICsgCiAJCQkJ
IiAgICB9XG4iICsgCiAJCQkJIiAgfVxuIiArIAotCQkJCSIgIE9iamVjdCBvPShATWFya2VyIFg8
QE1hcmtlciBTdHJpbmc+LkBNYXJrZXIgWTxATWFya2VyIEludGVnZXI+LkBNYXJrZXIgWjxATWFy
a2VyIE9iamVjdD5bXUBNYXJrZXIgW11bXUBNYXJrZXIgW10pbnVsbDtcbiIgKyAKKwkJCQkiICBP
YmplY3Qgbz0oQE1hcmtlciBYPEBNYXJrZXIgU3RyaW5nPi5ATWFya2VyIFk8QE1hcmtlciBJbnRl
Z2VyPi5ATWFya2VyIFo8QE1hcmtlciBPYmplY3Q+IFtdIEBNYXJrZXIgW10gW10gQE1hcmtlciBb
XSludWxsO1xuIiArIAogCQkJCSIgIEBqYXZhLmxhbmcuYW5ub3RhdGlvbi5UYXJnZXQoamF2YS5s
YW5nLmFubm90YXRpb24uRWxlbWVudFR5cGUuVFlQRV9VU0UpIEBpbnRlcmZhY2UgTWFya2VyIHt9
XG4iICsgCiAJCQkJIn1cbiI7CiAJCWFzc2VydEFTVE5vZGVFcXVhbHMoZXhwZWN0ZWRPdXRwdXQs
IG5vZGUpOwpAQCAtMjIwLDcgKzIyMCw3IEBACiAJCQkJImNsYXNzIFo8UT4ge1xuIiArIAogCQkJ
CSIgICAgfVxuIiArIAogCQkJCSIgIH1cbiIgKyAKLQkJCQkiICBpbnRbXVtdW11bXSBvPShAT25l
IGludFtdQFR3byBbXVtdQFRocmVlIFtdKW51bGw7XG4iICsgCisJCQkJIiAgaW50IFtdIFtdIFtd
IFtdIG89KEBPbmUgaW50IFtdIEBUd28gW10gW10gQFRocmVlIFtdKW51bGw7XG4iICsgCiAJCQkJ
IiAgQGphdmEubGFuZy5hbm5vdGF0aW9uLlRhcmdldChqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVt
ZW50VHlwZS5UWVBFX1VTRSkgQGludGVyZmFjZSBNYXJrZXIge31cbiIgKyAKIAkJCQkifVxuIjsK
IAkJYXNzZXJ0QVNUTm9kZUVxdWFscyhleHBlY3RlZE91dHB1dCwgbm9kZSk7CkBAIC0yNDksNyAr
MjQ5LDcgQEAKIAkJCQkiY2xhc3MgWjxRPiB7XG4iICsgCiAJCQkJIiAgICB9XG4iICsgCiAJCQkJ
IiAgfVxuIiArIAotCQkJCSIgIFN0cmluZ1tdW11bXVtdIG89KEBPbmUgU3RyaW5nW11AVHdvIFtd
W11AVGhyZWUgW10pbnVsbDtcbiIgKyAKKwkJCQkiICBTdHJpbmcgW10gW10gW10gW10gbz0oQE9u
ZSBTdHJpbmcgW10gQFR3byBbXSBbXSBAVGhyZWUgW10pbnVsbDtcbiIgKyAKIAkJCQkiICBAamF2
YS5sYW5nLmFubm90YXRpb24uVGFyZ2V0KGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBl
LlRZUEVfVVNFKSBAaW50ZXJmYWNlIE1hcmtlciB7fVxuIiArIAogCQkJCSJ9XG4iOwogCQlhc3Nl
cnRBU1ROb2RlRXF1YWxzKGV4cGVjdGVkT3V0cHV0LCBub2RlKTsKQEAgLTI3OCw3ICsyNzgsNyBA
QAogCQkJCSJjbGFzcyBaPFE+IHtcbiIgKyAKIAkJCQkiICAgIH1cbiIgKyAKIAkJCQkiICB9XG4i
ICsgCi0JCQkJIiAgT2JqZWN0IG89KEBPbmUgWDxTdHJpbmc+W11AVHdvIFtdW11AVGhyZWUgW10p
bnVsbDtcbiIgKyAKKwkJCQkiICBPYmplY3Qgbz0oQE9uZSBYPFN0cmluZz4gW10gQFR3byBbXSBb
XSBAVGhyZWUgW10pbnVsbDtcbiIgKyAKIAkJCQkiICBAamF2YS5sYW5nLmFubm90YXRpb24uVGFy
Z2V0KGphdmEubGFuZy5hbm5vdGF0aW9uLkVsZW1lbnRUeXBlLlRZUEVfVVNFKSBAaW50ZXJmYWNl
IE1hcmtlciB7fVxuIiArIAogCQkJCSJ9XG4iOwogCQlhc3NlcnRBU1ROb2RlRXF1YWxzKGV4cGVj
dGVkT3V0cHV0LCBub2RlKTsKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3Rz
Lm1vZGVsL3NyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcv
QVNUUmV3cml0aW5nRXhwcmVzc2lvbnNUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmli
aW5nL0FTVFJld3JpdGluZ0V4cHJlc3Npb25zVGVzdC5qYXZhCmluZGV4IDBhZmY0ZjguLjgzNWZi
OGIgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nRXhw
cmVzc2lvbnNUZXN0LmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwv
c3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdy
aXRpbmdFeHByZXNzaW9uc1Rlc3QuamF2YQpAQCAtMjYzLDIzICsyNjMsMjUgQEAKIAkJCW1lbWJl
clZhbHVlUGFpci5zZXROYW1lKGFzdC5uZXdTaW1wbGVOYW1lKCJ2IikpOwogCQkJbWVtYmVyVmFs
dWVQYWlyLnNldFZhbHVlKGFzdC5uZXdOdW1iZXJMaXRlcmFsKCI5OSIpKTsKIAkJCWFubm90YXRp
b25DLnZhbHVlcygpLmFkZChtZW1iZXJWYWx1ZVBhaXIpOwotCQkJYXJyYXlUeXBlLmFubm90YXRp
b25zKCkuYWRkKGFubm90YXRpb25DKTsKKwkJCUV4dHJhRGltZW5zaW9uIGRpbTAgPSBhcnJheVR5
cGUuZ2V0RGltZW5zaW9uQXQoMCk7CisJCQlkaW0wLmFubm90YXRpb25zKCkuYWRkKGFubm90YXRp
b25DKTsKIAkJCQotCQkJYXJyYXlUeXBlPSBhc3QubmV3QXJyYXlUeXBlKGFycmF5VHlwZSk7CiAJ
CQlTaW5nbGVNZW1iZXJBbm5vdGF0aW9uIGFubm90YXRpb25CPSBhc3QubmV3U2luZ2xlTWVtYmVy
QW5ub3RhdGlvbigpOwogCQkJYW5ub3RhdGlvbkIuc2V0VHlwZU5hbWUoYXN0Lm5ld1NpbXBsZU5h
bWUoIkIiKSk7CiAJCQlhbm5vdGF0aW9uQi5zZXRWYWx1ZShhc3QubmV3TnVtYmVyTGl0ZXJhbCgi
MCIpKTsKLQkJCWFycmF5VHlwZS5hbm5vdGF0aW9ucygpLmFkZChhbm5vdGF0aW9uQik7CisJCQlF
eHRyYURpbWVuc2lvbiBkaW0xID0gYXN0Lm5ld0V4dHJhRGltZW5zaW9uKCk7CisJCQlkaW0xLmFu
bm90YXRpb25zKCkuYWRkKGFubm90YXRpb25CKTsKKwkJCWFycmF5VHlwZS5kaW1lbnNpb25zKCku
YWRkKDAsIGRpbTEpOwogCQkJCi0JCQlhcnJheVR5cGU9IGFzdC5uZXdBcnJheVR5cGUoYXJyYXlU
eXBlKTsKIAkJCU1hcmtlckFubm90YXRpb24gYW5ub3RhdGlvbkE9IGFzdC5uZXdNYXJrZXJBbm5v
dGF0aW9uKCk7CiAJCQlhbm5vdGF0aW9uQS5zZXRUeXBlTmFtZShhc3QubmV3U2ltcGxlTmFtZSgi
QSIpKTsKLQkJCWFycmF5VHlwZS5hbm5vdGF0aW9ucygpLmFkZChhbm5vdGF0aW9uQSk7Ci0JCQkK
LQkJCWFycmF5Q3JlYXRpb24uc2V0VHlwZShhcnJheVR5cGUpOworCQkJRXh0cmFEaW1lbnNpb24g
ZGltMiA9IGFzdC5uZXdFeHRyYURpbWVuc2lvbigpOworCQkJZGltMi5hbm5vdGF0aW9ucygpLmFk
ZChhbm5vdGF0aW9uQSk7CisJCQlhcnJheVR5cGUuZGltZW5zaW9ucygpLmFkZCgwLCBkaW0yKTsK
IAkJCQogCQkJYXJyYXlDcmVhdGlvbi5kaW1lbnNpb25zKCkuYWRkKGFzdC5uZXdOdW1iZXJMaXRl
cmFsKCIxIikpOwogCQkJYXJyYXlDcmVhdGlvbi5kaW1lbnNpb25zKCkuYWRkKGFzdC5uZXdOdW1i
ZXJMaXRlcmFsKCIyIikpOworCQkJYXJyYXlDcmVhdGlvbi5zZXRUeXBlKGFycmF5VHlwZSk7CiAJ
CQkKIAkJCXJld3JpdGUuZ2V0TGlzdFJld3JpdGUoaW52b2NhdGlvbiwgTWV0aG9kSW52b2NhdGlv
bi5BUkdVTUVOVFNfUFJPUEVSVFkpLmluc2VydExhc3QoYXJyYXlDcmVhdGlvbiwgbnVsbCk7CiAJ
CX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcv
ZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nTWV0
aG9kRGVjbFRlc3QuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9v
cmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5n
TWV0aG9kRGVjbFRlc3QuamF2YQppbmRleCA3YTIxMjI1Li41ZGEwMjYyIDEwMDY0NAotLS0gYS9v
cmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUv
dGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3JpdGluZ01ldGhvZERlY2xUZXN0LmphdmEK
KysrIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pk
dC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdNZXRob2REZWNsVGVz
dC5qYXZhCkBAIC0xMTEsNyArMTExLDcgQEAKIAkJCQlsaXN0UmV3cml0ZS5yZW1vdmUoZXh0cmFE
aW1lbnNpb24sIG51bGwpOwogCQkJfQogCQkJZm9yIChpbnQgaT0gMDsgaSA8IGV4dHJhRGltZW5z
aW9uczsgaSsrKSB7Ci0JCQkJbGlzdFJld3JpdGUuaW5zZXJ0TGFzdChtZXRob2REZWNsLmdldEFT
VCgpLm5ld0V4dHJhRGltZW5zaW9uKCksIG51bGwpOworCQkJCWxpc3RSZXdyaXRlLmluc2VydEZp
cnN0KG1ldGhvZERlY2wuZ2V0QVNUKCkubmV3RXh0cmFEaW1lbnNpb24oKSwgbnVsbCk7CiAJCQl9
CiAJCX0KIAl9CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9z
cmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJld3Jp
dGluZ1N0YXRlbWVudHNUZXN0LmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2Rl
bC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvcmV3cml0ZS9kZXNjcmliaW5nL0FTVFJl
d3JpdGluZ1N0YXRlbWVudHNUZXN0LmphdmEKaW5kZXggMDgyZmE1Ny4uNzE5YjAyNiAxMDA2NDQK
LS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pk
dC9jb3JlL3Rlc3RzL3Jld3JpdGUvZGVzY3JpYmluZy9BU1RSZXdyaXRpbmdTdGF0ZW1lbnRzVGVz
dC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsL3NyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9yZXdyaXRlL2Rlc2NyaWJpbmcvQVNUUmV3cml0aW5nU3RhdGVt
ZW50c1Rlc3QuamF2YQpAQCAtNTk0MiwyNCArNTk0MiwyNSBAQAogCQkJTGlzdFJld3JpdGUgbGlz
dFJld3JpdGU9IHJld3JpdGUuZ2V0TGlzdFJld3JpdGUoZnJhZ21lbnQsIFZhcmlhYmxlRGVjbGFy
YXRpb25GcmFnbWVudC5FWFRSQV9ESU1FTlNJT05TMl9QUk9QRVJUWSk7CiAJCQlFeHRyYURpbWVu
c2lvbiBkaW09IGFzdC5uZXdFeHRyYURpbWVuc2lvbigpOwogCQkJTWFya2VyQW5ub3RhdGlvbiBt
YXJrZXJBbm5vdGF0aW9uOwotCQkJbGlzdFJld3JpdGUuaW5zZXJ0QXQoZGltLCAwLCBudWxsKTsK
KwkJCWxpc3RSZXdyaXRlLmluc2VydEZpcnN0KGRpbSwgbnVsbCk7CiAKIAkJCUFycmF5VHlwZSBj
cmVhdGlvblR5cGUgPSBjcmVhdGlvbi5nZXRUeXBlKCk7Ci0JCQlBcnJheVR5cGUgbmV3QXJyYXlU
eXBlID0gYXN0Lm5ld0FycmF5VHlwZSgoQXJyYXlUeXBlKSBBU1ROb2RlLmNvcHlTdWJ0cmVlKGFz
dCwgY3JlYXRpb25UeXBlKSk7Ci0JCQluZXdBcnJheVR5cGUgPSBhc3QubmV3QXJyYXlUeXBlKG5l
d0FycmF5VHlwZSk7Ci0JCQlyZXdyaXRlLnNldChjcmVhdGlvbiwgQXJyYXlDcmVhdGlvbi5UWVBF
X1BST1BFUlRZLCBuZXdBcnJheVR5cGUsIG51bGwpOwotCi0JCQlsaXN0UmV3cml0ZT0gcmV3cml0
ZS5nZXRMaXN0UmV3cml0ZShuZXdBcnJheVR5cGUsIEFycmF5VHlwZS5BTk5PVEFUSU9OU19QUk9Q
RVJUWSk7CisJCQlBcnJheVR5cGUgbmV3QXJyYXlUeXBlID0gKEFycmF5VHlwZSkgQVNUTm9kZS5j
b3B5U3VidHJlZShhc3QsIGNyZWF0aW9uVHlwZSk7CisJCQluZXdBcnJheVR5cGUuZGltZW5zaW9u
cygpLmFkZChhc3QubmV3RXh0cmFEaW1lbnNpb24oKSk7CisJCQkKKwkJCUV4dHJhRGltZW5zaW9u
IGRpbTAgPSBhc3QubmV3RXh0cmFEaW1lbnNpb24oKTsKIAkJCW1hcmtlckFubm90YXRpb249IGFz
dC5uZXdNYXJrZXJBbm5vdGF0aW9uKCk7CiAJCQltYXJrZXJBbm5vdGF0aW9uLnNldFR5cGVOYW1l
KGFzdC5uZXdTaW1wbGVOYW1lKCJBbm5vdDMiKSk7Ci0JCQlsaXN0UmV3cml0ZS5pbnNlcnRBdCht
YXJrZXJBbm5vdGF0aW9uLCAwLCBudWxsKTsKLQkJCW5ld0FycmF5VHlwZS5hbm5vdGF0aW9ucygp
LmFkZChtYXJrZXJBbm5vdGF0aW9uKTsKKwkJCWRpbTAuYW5ub3RhdGlvbnMoKS5hZGQobWFya2Vy
QW5ub3RhdGlvbik7CiAJCQltYXJrZXJBbm5vdGF0aW9uPSBhc3QubmV3TWFya2VyQW5ub3RhdGlv
bigpOwogCQkJbWFya2VyQW5ub3RhdGlvbi5zZXRUeXBlTmFtZShhc3QubmV3U2ltcGxlTmFtZSgi
QW5ub3QyIikpOwotCQkJbGlzdFJld3JpdGUuaW5zZXJ0QXQobWFya2VyQW5ub3RhdGlvbiwgMSwg
bnVsbCk7CisJCQlkaW0wLmFubm90YXRpb25zKCkuYWRkKG1hcmtlckFubm90YXRpb24pOwogCQkJ
bWFya2VyQW5ub3RhdGlvbj0gYXN0Lm5ld01hcmtlckFubm90YXRpb24oKTsKIAkJCW1hcmtlckFu
bm90YXRpb24uc2V0VHlwZU5hbWUoYXN0Lm5ld1NpbXBsZU5hbWUoIkFubm90MSIpKTsKLQkJCWxp
c3RSZXdyaXRlLmluc2VydEF0KG1hcmtlckFubm90YXRpb24sIDIsIG51bGwpOworCQkJZGltMC5h
bm5vdGF0aW9ucygpLmFkZChtYXJrZXJBbm5vdGF0aW9uKTsKKwkJCW5ld0FycmF5VHlwZS5kaW1l
bnNpb25zKCkuYWRkKGRpbTApOworCQkJcmV3cml0ZS5zZXQoY3JlYXRpb24sIEFycmF5Q3JlYXRp
b24uVFlQRV9QUk9QRVJUWSwgbmV3QXJyYXlUeXBlLCBudWxsKTsKKwogCQl9CiAJCXsKIAkJCXN0
YXRlbWVudCA9IChWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50KSBzdGF0ZW1lbnRzLmdldCgx
KTsKQEAgLTU5NzgsNDMgKzU5NzksNDQgQEAKIAkJCUV4cHJlc3Npb24gZXhwID0gKEV4cHJlc3Np
b24pIGV4cHJlc3Npb25zLmdldCgxKTsKIAkJCWxpc3RSZXdyaXRlLnJlbW92ZShleHAsIG51bGwp
OwogCi0JCQlsaXN0UmV3cml0ZSA9IHJld3JpdGUuZ2V0TGlzdFJld3JpdGUoY3JlYXRpb25UeXBl
LCBBcnJheVR5cGUuQU5OT1RBVElPTlNfUFJPUEVSVFkpOwotCQkJTWFya2VyQW5ub3RhdGlvbiBh
bm5vdGF0aW9uID0gKE1hcmtlckFubm90YXRpb24pIGNyZWF0aW9uVHlwZS5hbm5vdGF0aW9ucygp
LmdldCgwKTsKKwkJCUV4dHJhRGltZW5zaW9uIGRpbSA9IGNyZWF0aW9uVHlwZS5nZXREaW1lbnNp
b25BdCgyKTsKKwkJCWxpc3RSZXdyaXRlID0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShkaW0sIEV4
dHJhRGltZW5zaW9uLkFOTk9UQVRJT05TX1BST1BFUlRZKTsKKwkJCU1hcmtlckFubm90YXRpb24g
YW5ub3RhdGlvbiA9IChNYXJrZXJBbm5vdGF0aW9uKSBkaW0uYW5ub3RhdGlvbnMoKS5nZXQoMCk7
CiAJCQlsaXN0UmV3cml0ZS5yZW1vdmUoYW5ub3RhdGlvbiwgbnVsbCk7CiAKLQkJCWNyZWF0aW9u
VHlwZSA9IChBcnJheVR5cGUpIGNyZWF0aW9uVHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCQls
aXN0UmV3cml0ZSA9IHJld3JpdGUuZ2V0TGlzdFJld3JpdGUoY3JlYXRpb25UeXBlLCBBcnJheVR5
cGUuQU5OT1RBVElPTlNfUFJPUEVSVFkpOwotCQkJYW5ub3RhdGlvbiA9IChNYXJrZXJBbm5vdGF0
aW9uKSBjcmVhdGlvblR5cGUuYW5ub3RhdGlvbnMoKS5nZXQoMSk7CisJCQlkaW0gPSBjcmVhdGlv
blR5cGUuZ2V0RGltZW5zaW9uQXQoMSk7CisJCQlsaXN0UmV3cml0ZSA9IHJld3JpdGUuZ2V0TGlz
dFJld3JpdGUoZGltLCBFeHRyYURpbWVuc2lvbi5BTk5PVEFUSU9OU19QUk9QRVJUWSk7CisJCQlh
bm5vdGF0aW9uID0gKE1hcmtlckFubm90YXRpb24pIGRpbS5hbm5vdGF0aW9ucygpLmdldCgxKTsK
IAkJCWxpc3RSZXdyaXRlLnJlbW92ZShhbm5vdGF0aW9uLCBudWxsKTsKIAotCQkJY3JlYXRpb25U
eXBlID0gKEFycmF5VHlwZSkgY3JlYXRpb25UeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJCWxp
c3RSZXdyaXRlID0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShjcmVhdGlvblR5cGUsIEFycmF5VHlw
ZS5BTk5PVEFUSU9OU19QUk9QRVJUWSk7Ci0JCQlhbm5vdGF0aW9uID0gKE1hcmtlckFubm90YXRp
b24pIGNyZWF0aW9uVHlwZS5hbm5vdGF0aW9ucygpLmdldCgxKTsKKwkJCWRpbSA9IGNyZWF0aW9u
VHlwZS5nZXREaW1lbnNpb25BdCgwKTsKKwkJCWxpc3RSZXdyaXRlID0gcmV3cml0ZS5nZXRMaXN0
UmV3cml0ZShkaW0sIEV4dHJhRGltZW5zaW9uLkFOTk9UQVRJT05TX1BST1BFUlRZKTsKKwkJCWFu
bm90YXRpb24gPSAoTWFya2VyQW5ub3RhdGlvbikgZGltLmFubm90YXRpb25zKCkuZ2V0KDEpOwog
CQkJbGlzdFJld3JpdGUucmVtb3ZlKGFubm90YXRpb24sIG51bGwpOwogCiAJCQlmcmFnbWVudCA9
IChWYXJpYWJsZURlY2xhcmF0aW9uRnJhZ21lbnQpIGZyYWdtZW50cy5nZXQoMSk7CiAKIAkJCWNy
ZWF0aW9uID0gKEFycmF5Q3JlYXRpb24pIGZyYWdtZW50LmdldEluaXRpYWxpemVyKCk7CiAJCQlj
cmVhdGlvblR5cGUgPSBjcmVhdGlvbi5nZXRUeXBlKCk7Ci0KLQkJCWxpc3RSZXdyaXRlID0gcmV3
cml0ZS5nZXRMaXN0UmV3cml0ZShjcmVhdGlvblR5cGUsIEFycmF5VHlwZS5BTk5PVEFUSU9OU19Q
Uk9QRVJUWSk7Ci0JCQlhbm5vdGF0aW9uID0gKE1hcmtlckFubm90YXRpb24pIGNyZWF0aW9uVHlw
ZS5hbm5vdGF0aW9ucygpLmdldCgwKTsKKwkJCWRpbSA9IGNyZWF0aW9uVHlwZS5nZXREaW1lbnNp
b25BdCgyKTsKKwkJCWxpc3RSZXdyaXRlID0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShkaW0sIEV4
dHJhRGltZW5zaW9uLkFOTk9UQVRJT05TX1BST1BFUlRZKTsKKwkJCWFubm90YXRpb24gPSAoTWFy
a2VyQW5ub3RhdGlvbikgZGltLmFubm90YXRpb25zKCkuZ2V0KDEpOwogCQkJbGlzdFJld3JpdGUu
cmVtb3ZlKGFubm90YXRpb24sIG51bGwpOwotCQkJYW5ub3RhdGlvbiA9IChNYXJrZXJBbm5vdGF0
aW9uKSBjcmVhdGlvblR5cGUuYW5ub3RhdGlvbnMoKS5nZXQoMSk7CisJCQlhbm5vdGF0aW9uID0g
KE1hcmtlckFubm90YXRpb24pIGRpbS5hbm5vdGF0aW9ucygpLmdldCgwKTsKIAkJCWxpc3RSZXdy
aXRlLnJlbW92ZShhbm5vdGF0aW9uLCBudWxsKTsKIAotCQkJY3JlYXRpb25UeXBlID0gKEFycmF5
VHlwZSkgY3JlYXRpb25UeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJCWxpc3RSZXdyaXRlID0g
cmV3cml0ZS5nZXRMaXN0UmV3cml0ZShjcmVhdGlvblR5cGUsIEFycmF5VHlwZS5BTk5PVEFUSU9O
U19QUk9QRVJUWSk7Ci0JCQlhbm5vdGF0aW9uID0gKE1hcmtlckFubm90YXRpb24pIGNyZWF0aW9u
VHlwZS5hbm5vdGF0aW9ucygpLmdldCgwKTsKKwkJCWRpbSA9IGNyZWF0aW9uVHlwZS5nZXREaW1l
bnNpb25BdCgxKTsKKwkJCWxpc3RSZXdyaXRlID0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShkaW0s
IEV4dHJhRGltZW5zaW9uLkFOTk9UQVRJT05TX1BST1BFUlRZKTsKKwkJCWFubm90YXRpb24gPSAo
TWFya2VyQW5ub3RhdGlvbikgZGltLmFubm90YXRpb25zKCkuZ2V0KDEpOwogCQkJbGlzdFJld3Jp
dGUucmVtb3ZlKGFubm90YXRpb24sIG51bGwpOwotCQkJYW5ub3RhdGlvbiA9IChNYXJrZXJBbm5v
dGF0aW9uKSBjcmVhdGlvblR5cGUuYW5ub3RhdGlvbnMoKS5nZXQoMSk7CisJCQlhbm5vdGF0aW9u
ID0gKE1hcmtlckFubm90YXRpb24pIGRpbS5hbm5vdGF0aW9ucygpLmdldCgwKTsKIAkJCWxpc3RS
ZXdyaXRlLnJlbW92ZShhbm5vdGF0aW9uLCBudWxsKTsKIAotCQkJY3JlYXRpb25UeXBlID0gKEFy
cmF5VHlwZSkgY3JlYXRpb25UeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJCWxpc3RSZXdyaXRl
ID0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShjcmVhdGlvblR5cGUsIEFycmF5VHlwZS5BTk5PVEFU
SU9OU19QUk9QRVJUWSk7Ci0JCQlhbm5vdGF0aW9uID0gKE1hcmtlckFubm90YXRpb24pIGNyZWF0
aW9uVHlwZS5hbm5vdGF0aW9ucygpLmdldCgwKTsKKwkJCWRpbSA9IGNyZWF0aW9uVHlwZS5nZXRE
aW1lbnNpb25BdCgwKTsKKwkJCWxpc3RSZXdyaXRlID0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShk
aW0sIEV4dHJhRGltZW5zaW9uLkFOTk9UQVRJT05TX1BST1BFUlRZKTsKKwkJCWFubm90YXRpb24g
PSAoTWFya2VyQW5ub3RhdGlvbikgZGltLmFubm90YXRpb25zKCkuZ2V0KDEpOwogCQkJbGlzdFJl
d3JpdGUucmVtb3ZlKGFubm90YXRpb24sIG51bGwpOwotCQkJYW5ub3RhdGlvbiA9IChNYXJrZXJB
bm5vdGF0aW9uKSBjcmVhdGlvblR5cGUuYW5ub3RhdGlvbnMoKS5nZXQoMSk7CisJCQlhbm5vdGF0
aW9uID0gKE1hcmtlckFubm90YXRpb24pIGRpbS5hbm5vdGF0aW9ucygpLmdldCgwKTsKIAkJCWxp
c3RSZXdyaXRlLnJlbW92ZShhbm5vdGF0aW9uLCBudWxsKTsKIAogCQkJZXhwcmVzc2lvbnMgPSBj
cmVhdGlvbi5kaW1lbnNpb25zKCk7CkBAIC02MDM1LDggKzYwMzcsOCBAQAogCQlidWYuYXBwZW5k
KCJpbXBvcnQgamF2YS5sYW5nLmFubm90YXRpb24uRWxlbWVudFR5cGU7XG4iKTsKIAkJYnVmLmFw
cGVuZCgicHVibGljIGNsYXNzIEUge1xuIik7CiAJCWJ1Zi5hcHBlbmQoIiAgICBwdWJsaWMgdm9p
ZCBmb28oKSB7XG4iKTsKLQkJYnVmLmFwcGVuZCgiICAgIAlpbnQgW10gaSBbXSBAQW5ub3QxIEBB
bm5vdDIgW10gQEFubm90MSBAQW5ub3QzIFtdID0gbmV3IGludCBAQW5ub3QxIEBBbm5vdDIgIFsy
XSBAQW5ub3QyIEBBbm5vdDMgW3NpemUoKV0gQEFubm90MiBAQW5ub3QxIFtdW10gQEFubm90MyBA
QW5ub3QyIEBBbm5vdDFbXTtcbiIpOwotCQlidWYuYXBwZW5kKCIgICAgCWludCBbXSBqIFtdW10g
PSBuZXcgaW50IEBBbm5vdDEgWzJdIEBBbm5vdDIgW10gQEFubm90MyBbXSwgayBbXVtdID0gbmV3
IGludFsyXVsxMF1bc2l6ZSgpXTtcbiIpOworCQlidWYuYXBwZW5kKCIgICAgCWludCBbXSBpIFtd
IEBBbm5vdDEgQEFubm90MiBbXSBAQW5ub3QxIEBBbm5vdDMgW10gPSBuZXcgaW50IEBBbm5vdDEg
QEFubm90MiAgWzJdIEBBbm5vdDIgQEFubm90MyBbc2l6ZSgpXSBAQW5ub3QyIEBBbm5vdDEgW11b
XUBBbm5vdDMgQEFubm90MiBAQW5ub3QxIFtdO1xuIik7CisJCWJ1Zi5hcHBlbmQoIiAgICAJaW50
IFtdIGogW11bXSA9IG5ldyBpbnQgQEFubm90MiBbMl0gQEFubm90MiBbXSBAQW5ub3QxIFtdLCBr
IFtdW10gPSBuZXcgaW50IFsyXSBbMTBdIFtzaXplKCldO1xuIik7CiAJCWJ1Zi5hcHBlbmQoIiAg
ICB9XG4iKTsKIAkJYnVmLmFwcGVuZCgiICAgIHB1YmxpYyBpbnQgc2l6ZSgpIHsgcmV0dXJuIDI7
IH1cbiIpOwogCQlidWYuYXBwZW5kKCJ9XG4iKTsKQEAgLTYwODYsMTAgKzYwODgsMTAgQEAKIAkJ
CUFycmF5Q3JlYXRpb24gY3JlYXRpb24gPSAoQXJyYXlDcmVhdGlvbikgZnJhZ21lbnQuZ2V0SW5p
dGlhbGl6ZXIoKTsKIAogCQkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IGNyZWF0aW9uLmdldFR5cGUo
KTsKLQkJCWFycmF5VHlwZSA9IChBcnJheVR5cGUpIGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBl
KCk7Ci0JCQlMaXN0UmV3cml0ZSBsaXN0UmV3cml0ZT0gcmV3cml0ZS5nZXRMaXN0UmV3cml0ZShh
cnJheVR5cGUsIEFycmF5VHlwZS5BTk5PVEFUSU9OU19QUk9QRVJUWSk7Ci0JCQlsaXN0UmV3cml0
ZS5yZW1vdmUoKEFTVE5vZGUpYXJyYXlUeXBlLmFubm90YXRpb25zKCkuZ2V0KDApLCBudWxsKTsK
LQkJCWxpc3RSZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSlhcnJheVR5cGUuYW5ub3RhdGlvbnMoKS5n
ZXQoMSksIG51bGwpOworCQkJRXh0cmFEaW1lbnNpb24gZGltID0gYXJyYXlUeXBlLmdldERpbWVu
c2lvbkF0KDEpOworCQkJTGlzdFJld3JpdGUgbGlzdFJld3JpdGU9IHJld3JpdGUuZ2V0TGlzdFJl
d3JpdGUoZGltLCBFeHRyYURpbWVuc2lvbi5BTk5PVEFUSU9OU19QUk9QRVJUWSk7CisJCQlsaXN0
UmV3cml0ZS5yZW1vdmUoKEFTVE5vZGUpZGltLmFubm90YXRpb25zKCkuZ2V0KDApLCBudWxsKTsK
KwkJCWxpc3RSZXdyaXRlLnJlbW92ZSgoQVNUTm9kZSlkaW0uYW5ub3RhdGlvbnMoKS5nZXQoMSks
IG51bGwpOwogCQkJcmV3cml0ZS5zZXQoY3JlYXRpb24sIEFycmF5Q3JlYXRpb24uVFlQRV9QUk9Q
RVJUWSwgYXJyYXlUeXBlLCBudWxsKTsKIAkJfQogCQl7CkBAIC02MTAxLDE2ICs2MTAzLDEyIEBA
CiAJCQlhc3NlcnRFcXVhbHMoIkluY29ycmVjdCB0eXBlIiwgQVNUTm9kZS5BUlJBWV9UWVBFLCB0
eXBlLmdldE5vZGVUeXBlKCkpOwogCQkJQXJyYXlDcmVhdGlvbiBjcmVhdGlvbiA9IChBcnJheUNy
ZWF0aW9uKSBmcmFnbWVudC5nZXRJbml0aWFsaXplcigpOwogCQkJQXJyYXlUeXBlIGNyZWF0aW9u
VHlwZSA9IGNyZWF0aW9uLmdldFR5cGUoKTsKLQotCQkJQXJyYXlUeXBlIG5ld0FycmF5VHlwZSA9
IChBcnJheVR5cGUpIGNyZWF0aW9uVHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCQlyZXdyaXRl
LnNldChjcmVhdGlvbiwgQXJyYXlDcmVhdGlvbi5UWVBFX1BST1BFUlRZLCBuZXdBcnJheVR5cGUs
IG51bGwpOwotCisJCQlyZXdyaXRlLnJlbW92ZShjcmVhdGlvblR5cGUuZ2V0RGltZW5zaW9uQXQo
MCksIG51bGwpOwogCQkJZnJhZ21lbnQgPSAoVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50KSBm
cmFnbWVudHMuZ2V0KDEpOwogCQkJY3JlYXRpb24gPSAoQXJyYXlDcmVhdGlvbikgZnJhZ21lbnQu
Z2V0SW5pdGlhbGl6ZXIoKTsKIAkJCWNyZWF0aW9uVHlwZSA9IGNyZWF0aW9uLmdldFR5cGUoKTsK
IAotCQkJbmV3QXJyYXlUeXBlID0gKEFycmF5VHlwZSkgY3JlYXRpb25UeXBlLmdldENvbXBvbmVu
dFR5cGUoKTsKLQkJCXJld3JpdGUuc2V0KGNyZWF0aW9uLCBBcnJheUNyZWF0aW9uLlRZUEVfUFJP
UEVSVFksIG5ld0FycmF5VHlwZSwgbnVsbCk7CisJCQlyZXdyaXRlLnJlbW92ZShjcmVhdGlvblR5
cGUuZ2V0RGltZW5zaW9uQXQoMCksIG51bGwpOwogCQl9CiAJCS8vIEdldCBuZXcgY29kZQogCQlT
dHJpbmcgcHJldmlldz0gZXZhbHVhdGVSZXdyaXRlKGN1LCByZXdyaXRlKTsKQEAgLTYxMjAsNyAr
NjExOCw3IEBACiAJCWJ1Zi5hcHBlbmQoImltcG9ydCBqYXZhLmxhbmcuYW5ub3RhdGlvbi5FbGVt
ZW50VHlwZTtcbiIpOwogCQlidWYuYXBwZW5kKCJwdWJsaWMgY2xhc3MgRSB7XG4iKTsKIAkJYnVm
LmFwcGVuZCgiICAgIHB1YmxpYyB2b2lkIGZvbygpIHtcbiIpOwotCQlidWYuYXBwZW5kKCIgICAg
CWludCBbXSBpIFtdW10gPSBuZXcgaW50IEBBbm5vdDEgQEFubm90MiAgWzJdW3NpemUobmV3IGlu
dFtdW117fSldO1xuIik7CisJCWJ1Zi5hcHBlbmQoIiAgICAJaW50IFtdIGkgW11bXSA9IG5ldyBp
bnQgQEFubm90MSBAQW5ub3QyICBbMl0gIFtzaXplKG5ldyBpbnRbXVtde30pXSBbXTtcbiIpOwog
CQlidWYuYXBwZW5kKCIgICAgCWludCBbXSBqIFtdW10gPSBuZXcgaW50IEBBbm5vdDEgQEFubm90
MiBbMl0gQEFubm90MiBAQW5ub3QzIFtzaXplKG5ldyBpbnRbXXt9KV0sIGsgW11bXSA9IG5ldyBp
bnQgQEFubm90MSBAQW5ub3QyIFsyXSBAQW5ub3QyIEBBbm5vdDMgWzEwXTtcbiIpOwogCQlidWYu
YXBwZW5kKCIgICAgfVxuIik7CiAJCWJ1Zi5hcHBlbmQoIiAgICBwdWJsaWMgaW50IHNpemUoT2Jq
ZWN0IG9iaikgeyByZXR1cm4gMjsgfVxuIik7CmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVC5qYXZhIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1QuamF2YQppbmRleCA3OGY4
OWNmLi43MGUzZjdjIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2NvcmUvZG9tL0FTVC5qYXZhCisrKyBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2Rv
bS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNULmphdmEKQEAgLTk5OSw2ICs5OTksMTQgQEAK
IAl9CiAKIAkvKioKKwkgKiBBIGxvY2FsIG1ldGhvZCB0byB3b3JrYXJvdW5kIGNhbGxpbmcgZGVw
cmVjYXRlZCBtZXRob2QgaW4gYXJyYXkgdHlwZS4KKwkgKiBAZGVwcmVjYXRlZAorCSAqLworCXBy
aXZhdGUgdm9pZCBzZXRBcnJheUNvbXBvbmVudFR5cGUoQXJyYXlUeXBlIGFycmF5VHlwZSwgVHlw
ZSB0eXBlKSB7CisJCWFycmF5VHlwZS5zZXRDb21wb25lbnRUeXBlKHR5cGUpOworCX0KKworCS8q
KgogCSAqIENyZWF0ZXMgYW5kIHJldHVybnMgYSBuZXcgdW5wYXJlbnRlZCBhbm5vdGF0aW9uIHR5
cGUgZGVjbGFyYXRpb24KIAkgKiBub2RlIGZvciBhbiB1bnNwZWNpZmllZCwgYnV0IGxlZ2FsLCBu
YW1lOyBubyBtb2RpZmllcnM7IG5vIGphdmFkb2M7CiAJICogYW5kIGFuIGVtcHR5IGxpc3Qgb2Yg
bWVtYmVyIGRlY2xhcmF0aW9ucy4KQEAgLTExMDksMTkgKzExMTcsMzEgQEAKIAogCS8qKgogCSAq
IENyZWF0ZXMgYW5kIHJldHVybnMgYSBuZXcgdW5wYXJlbnRlZCBhcnJheSB0eXBlIG5vZGUgd2l0
aCB0aGUgZ2l2ZW4KLQkgKiBjb21wb25lbnQgdHlwZSwgd2hpY2ggbWF5IGJlIGFub3RoZXIgYXJy
YXkgdHlwZS4KKwkgKiBjb21wb25lbnQgdHlwZSwgd2hpY2ggbWF5IGJlIGFub3RoZXIgYXJyYXkg
dHlwZSBmb3IgbGV2ZWxzIGxlc3MgdGhhbiBKTFM4LgorCSAqIEZvciBKTFM4IGFuZCBhYm92ZSB0
aGlzIHR5cGUgaGFzIHRvIGJlIGFuIGFubm90YXRhYmxlIHR5cGUuCiAJICoKLQkgKiBAcGFyYW0g
Y29tcG9uZW50VHlwZSB0aGUgY29tcG9uZW50IHR5cGUgKHBvc3NpYmx5IGFub3RoZXIgYXJyYXkg
dHlwZSkKKwkgKiBAcGFyYW0gdHlwZSB0aGUgY29tcG9uZW50IHR5cGUgKHBvc3NpYmx5IGFub3Ro
ZXIgYXJyYXkgdHlwZSkgZm9yIGxldmVsIGxlc3MgdGhhbiBKTFM4LCAKKwkgKiBhIDxjb2RlPkFu
bm90YXRhYmxlVHlwZTwvY29kZT4gIGZvciBKTFM4IGFuZCBhYm92ZQogCSAqIEByZXR1cm4gYSBu
ZXcgdW5wYXJlbnRlZCBhcnJheSB0eXBlIG5vZGUKIAkgKiBAZXhjZXB0aW9uIElsbGVnYWxBcmd1
bWVudEV4Y2VwdGlvbiBpZjoKIAkgKiA8dWw+CiAJICogPGxpPnRoZSBub2RlIGJlbG9uZ3MgdG8g
YSBkaWZmZXJlbnQgQVNUPC9saT4KIAkgKiA8bGk+dGhlIG5vZGUgYWxyZWFkeSBoYXMgYSBwYXJl
bnQ8L2xpPgorCSAqIDxsaT4gbGV2ZWwgaXMgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRvIEpMUzgg
YW5kIHR5cGUgbm90IGFuIGFycmF5IHR5cGU8L2xpPgogCSAqIDwvdWw+CiAJICovCi0JcHVibGlj
IEFycmF5VHlwZSBuZXdBcnJheVR5cGUoVHlwZSBjb21wb25lbnRUeXBlKSB7Ci0JCUFycmF5VHlw
ZSByZXN1bHQgPSBuZXcgQXJyYXlUeXBlKHRoaXMpOwotCQlyZXN1bHQuc2V0Q29tcG9uZW50VHlw
ZShjb21wb25lbnRUeXBlKTsKKwlwdWJsaWMgQXJyYXlUeXBlIG5ld0FycmF5VHlwZShUeXBlIHR5
cGUpIHsKKwkJQXJyYXlUeXBlIHJlc3VsdDsKKwkJaWYgKHRoaXMuYXBpTGV2ZWwgPCBBU1QuSkxT
OCkgeworCQkJcmVzdWx0ID0gbmV3IEFycmF5VHlwZSh0aGlzKTsKKwkJCXNldEFycmF5Q29tcG9u
ZW50VHlwZShyZXN1bHQsIHR5cGUpOworCQkJcmV0dXJuIHJlc3VsdDsKKwkJfQorCQlpZiAodHlw
ZS5pc0FycmF5VHlwZSgpKSB7CisJCQl0aHJvdyBuZXcgSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9u
KCk7CisJCX0KKwkJcmVzdWx0ID0gbmV3IEFycmF5VHlwZSh0aGlzKTsKKwkJcmVzdWx0LnNldEVs
ZW1lbnRUeXBlKHR5cGUpOwogCQlyZXR1cm4gcmVzdWx0OwogCX0KIApAQCAtMTEzMyw3ICsxMTUz
LDcgQEAKIAkgKiBlbGVtZW50IHR5cGUgb2YgdGhlIHJlc3VsdCB3aWxsIG5vdCBiZSB0aGUgc2Ft
ZSBhcyB3aGF0IHdhcyBwYXNzZWQgaW4uCiAJICogPC9wPgogCSAqCi0JICogQHBhcmFtIGVsZW1l
bnRUeXBlIHRoZSBlbGVtZW50IHR5cGUgKGNhbiBiZSBhbiBhcnJheSB0eXBlKQorCSAqIEBwYXJh
bSBlbGVtZW50VHlwZSB0aGUgZWxlbWVudCB0eXBlIChjYW4gYmUgYW4gYXJyYXkgdHlwZSBmb3Ig
SkxTOC4gRm9yIGxldmVsIEpMUzggYW5kIGFib3ZlIHRoaXMgc2hvdWxkIGJlIGFuIDxjb2RlPkFu
bm90YXRhYmxlVHlwZTwvY29kZT4pCiAJICogQHBhcmFtIGRpbWVuc2lvbnMgdGhlIG51bWJlciBv
ZiBkaW1lbnNpb25zLCBhIHBvc2l0aXZlIG51bWJlcgogCSAqIEByZXR1cm4gYSBuZXcgdW5wYXJl
bnRlZCBhcnJheSB0eXBlIG5vZGUKIAkgKiBAZXhjZXB0aW9uIElsbGVnYWxBcmd1bWVudEV4Y2Vw
dGlvbiBpZjoKQEAgLTExNDMsNiArMTE2Myw3IEBACiAJICogPGxpPnRoZSBlbGVtZW50IHR5cGUg
aXMgbnVsbDwvbGk+CiAJICogPGxpPnRoZSBudW1iZXIgb2YgZGltZW5zaW9ucyBpcyBsb3dlciB0
aGFuIDE8L2xpPgogCSAqIDxsaT50aGUgbnVtYmVyIG9mIGRpbWVuc2lvbnMgaXMgZ3JlYXRlciB0
aGFuIDEwMDA8L2xpPgorCSAqIDxsaT5mb3IgbGV2ZWxzIGZyb20gSkxTOCBhbmQgbGF0ZXIsIGlm
IHRoZSBlbGVtZW50IHR5cGUgaXMgbm90IGFuIGFycmF5IHR5cGUgPC9saT4KIAkgKiA8L3VsPgog
CSAqLwogCXB1YmxpYyBBcnJheVR5cGUgbmV3QXJyYXlUeXBlKFR5cGUgZWxlbWVudFR5cGUsIGlu
dCBkaW1lbnNpb25zKSB7CkBAIC0xMTUzLDEwICsxMTc0LDI0IEBACiAJCQkvLyB3ZSB3b3VsZCBi
bG93IG91ciBzdGFja3MgYW55d2F5IHdpdGggYSAxMDAwLUQgYXJyYXkKIAkJCXRocm93IG5ldyBJ
bGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oKTsKIAkJfQotCQlBcnJheVR5cGUgcmVzdWx0ID0gbmV3
IEFycmF5VHlwZSh0aGlzKTsKLQkJcmVzdWx0LnNldENvbXBvbmVudFR5cGUoZWxlbWVudFR5cGUp
OwotCQlmb3IgKGludCBpID0gMjsgaSA8PSBkaW1lbnNpb25zOyBpKyspIHsKLQkJCXJlc3VsdCA9
IG5ld0FycmF5VHlwZShyZXN1bHQpOworCQlBcnJheVR5cGUgcmVzdWx0OworCQlpZiAodGhpcy5h
cGlMZXZlbCA8IEFTVC5KTFM4KSB7CisJCQlyZXN1bHQgPSBuZXcgQXJyYXlUeXBlKHRoaXMpOwor
CQkJc2V0QXJyYXlDb21wb25lbnRUeXBlKHJlc3VsdCwgZWxlbWVudFR5cGUpOworCQkJZm9yIChp
bnQgaSA9IDI7IGkgPD0gZGltZW5zaW9uczsgaSsrKSB7CisJCQkJcmVzdWx0ID0gbmV3QXJyYXlU
eXBlKHJlc3VsdCk7CisJCQl9CisJCQlyZXR1cm4gcmVzdWx0OworCQl9CisJCS8vbGV2ZWwgPj0g
SkxTOAorCQlpZiAoZWxlbWVudFR5cGUuaXNBcnJheVR5cGUoKSkgeworCQkJdGhyb3cgbmV3IEls
bGVnYWxBcmd1bWVudEV4Y2VwdGlvbigpOworCQl9CisJCXJlc3VsdCA9IG5ldyBBcnJheVR5cGUo
dGhpcyk7CisJCXJlc3VsdC5zZXRFbGVtZW50VHlwZShlbGVtZW50VHlwZSk7CisJCS8vIGluZGV4
IHN0YXJ0aW5nIGZyb20gMSBzaW5jZSB0aGVyZSBpcyBhIGRpbWVuc2lvbiBhbHJlYWR5IGF2YWls
YWJsZSBieSBkZWZhdWx0LgorCQlmb3IgKGludCBpID0gMTsgaSA8IGRpbWVuc2lvbnM7ICsraSkg
eworCQkJcmVzdWx0LmRpbWVuc2lvbnMoKS5hZGQobmV3IEV4dHJhRGltZW5zaW9uKHRoaXMpKTsK
IAkJfQogCQlyZXR1cm4gcmVzdWx0OwogCmRpZmYgLS1naXQgYS9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVENvbnZlcnRlci5qYXZhIGIvb3JnLmVj
bGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RDb252ZXJ0ZXIu
amF2YQppbmRleCA3OWY5MzMxLi45OTA3MjllIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQu
Y29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FTVENvbnZlcnRlci5qYXZhCisrKyBi
L29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUQ29u
dmVydGVyLmphdmEKQEAgLTM1MSw2ICszNTEsMTMgQEAKIAkJCX0KIAkJfQogCX0KKworCXByaXZh
dGUgdm9pZCBjaGVja0FuZFNldE1hbGZvcm1lZChBU1ROb2RlIG9sZEFTVE5vZGUsIEFTVE5vZGUg
bmV3QVNUTm9kZSkgeworCQlpZiAoKG9sZEFTVE5vZGUuZ2V0RmxhZ3MoKSAmIEFTVE5vZGUuTUFM
Rk9STUVEKSAhPSAwKSB7CisJCQluZXdBU1ROb2RlLnNldEZsYWdzKG5ld0FTVE5vZGUuZ2V0Rmxh
Z3MoKSB8IEFTVE5vZGUuTUFMRk9STUVEKTsKKwkJfQorCX0KKwogCS8qKiAKIAkgKiBJbnRlcm5h
bCBhY2Nlc3MgbWV0aG9kIHRvIFNpbmdsZVZhcmlhYmxlRGVjbGFyYXRpb24jc2V0RXh0cmFEaW1l
bnNpb25zKCkgZm9yIGF2b2lkaW5nIGRlcHJlY2F0ZWQgd2FybmluZ3MKIAkgKgpAQCAtNDY1LDE0
ICs0NzIsMjYgQEAKIAogCXByb3RlY3RlZCB2b2lkIGNvbXBsZXRlUmVjb3JkKEFycmF5VHlwZSBh
cnJheVR5cGUsIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQVNUTm9kZSBh
c3ROb2RlKSB7CiAJCUFycmF5VHlwZSBhcnJheSA9IGFycmF5VHlwZTsKKwkJdGhpcy5yZWNvcmRO
b2RlcyhhcnJheVR5cGUsIGFzdE5vZGUpOworCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA+PSBB
U1QuSkxTOCkgeworCQkJdGhpcy5yZWNvcmROb2RlcyhhcnJheVR5cGUuZ2V0RWxlbWVudFR5cGUo
KSwgYXN0Tm9kZSk7CisJCQlyZXR1cm47CisJCX0KIAkJaW50IGRpbWVuc2lvbnMgPSBhcnJheS5n
ZXREaW1lbnNpb25zKCk7CiAJCWZvciAoaW50IGkgPSAwOyBpIDwgZGltZW5zaW9uczsgaSsrKSB7
Ci0JCQlUeXBlIGNvbXBvbmVudFR5cGUgPSBhcnJheS5nZXRDb21wb25lbnRUeXBlKCk7CisJCQlU
eXBlIGNvbXBvbmVudFR5cGUgPSBjb21wb25lbnRUeXBlKGFycmF5KTsKIAkJCXRoaXMucmVjb3Jk
Tm9kZXMoY29tcG9uZW50VHlwZSwgYXN0Tm9kZSk7CiAJCQlpZiAoY29tcG9uZW50VHlwZS5pc0Fy
cmF5VHlwZSgpKSB7CiAJCQkJYXJyYXkgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBlOwogCQkJ
fQogCQl9CisJfQorCQorCS8qKgorCSAqIEBkZXByZWNhdGVkCisJICovCisJcHJpdmF0ZSBUeXBl
IGNvbXBvbmVudFR5cGUoQXJyYXlUeXBlIGFycmF5KSB7CisJCXJldHVybiBhcnJheS5nZXRDb21w
b25lbnRUeXBlKCk7CiAJfQogCiAJcHVibGljIEFTVE5vZGUgY29udmVydChib29sZWFuIGlzSW50
ZXJmYWNlLCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFic3RyYWN0TWV0
aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVjbGFyYXRpb24pIHsKQEAgLTkwOSwxMiArOTI4LDE4IEBA
CiAJCWlmIChpc1ZhckFyZ3MpIHsKIAkJCXNldFR5cGVGb3JTaW5nbGVWYXJpYWJsZURlY2xhcmF0
aW9uKHZhcmlhYmxlRGVjbCwgdHlwZSwgZXh0cmFEaW1lbnNpb25zICsgMSk7CiAJCQkvLyBodHRw
czovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MzkxODk4Ci0JCQlpZiAo
dHlwZS5pc0Fubm90YXRhYmxlKCkpIHsKLQkJCQlBbm5vdGF0YWJsZVR5cGUgYW5ub3RhdGFibGVU
eXBlID0gKEFubm90YXRhYmxlVHlwZSkgdHlwZTsKLQkJCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwo
KSA+PSBBU1QuSkxTOCAmJiAhYW5ub3RhdGFibGVUeXBlLmFubm90YXRpb25zKCkuaXNFbXB0eSgp
KSB7Ci0JCQkJCUl0ZXJhdG9yIGFubm90YXRpb25zID0gYW5ub3RhdGFibGVUeXBlLmFubm90YXRp
b25zKCkuaXRlcmF0b3IoKTsKLQkJCQkJd2hpbGUgKGFubm90YXRpb25zLmhhc05leHQoKSkgewot
CQkJCQkJQW5ub3RhdGlvbiBhbm5vdGF0aW9uID0gKEFubm90YXRpb24pIGFubm90YXRpb25zLm5l
eHQoKTsKKwkJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCgpID49IEFTVC5KTFM4KSB7CisJCQkJTGlz
dCBhbm5vdGF0aW9ucyAgPSBudWxsOworCQkJCWlmICh0eXBlLmlzQW5ub3RhdGFibGUoKSkgewor
CQkJCQlhbm5vdGF0aW9ucyA9ICgoQW5ub3RhdGFibGVUeXBlKSB0eXBlKS5hbm5vdGF0aW9ucygp
OworCQkJCX0gZWxzZSBpZiAodHlwZS5pc0FycmF5VHlwZSgpKSB7CisJCQkJCUFycmF5VHlwZSBh
cnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOworCQkJCQlhbm5vdGF0aW9ucyA9IGFycmF5VHlw
ZS5kaW1lbnNpb25zKCkuaXNFbXB0eSgpID8gbnVsbCA6ICgoYXJyYXlUeXBlLmdldERpbWVuc2lv
bkF0KDApKS5hbm5vdGF0aW9ucygpKTsKKwkJCQl9CisJCQkJaWYgKGFubm90YXRpb25zICE9IG51
bGwpIHsKKwkJCQkJSXRlcmF0b3IgaXRlciA9IGFubm90YXRpb25zLml0ZXJhdG9yKCk7CisJCQkJ
CXdoaWxlIChpdGVyLmhhc05leHQoKSkgeworCQkJCQkJQW5ub3RhdGlvbiBhbm5vdGF0aW9uID0g
KEFubm90YXRpb24pIGl0ZXIubmV4dCgpOwogCQkJCQkJYW5ub3RhdGlvbi5zZXRQYXJlbnQobnVs
bCwgbnVsbCk7CiAJCQkJCQl2YXJpYWJsZURlY2wudmFyYXJnc0Fubm90YXRpb25zKCkuYWRkKGFu
bm90YXRpb24pOwogCQkJCQl9CkBAIC05ODEsMjcgKzEwMDYsMTkgQEAKIAkJQXJyYXlUeXBlIGFy
cmF5VHlwZSA9IG51bGw7CiAJCWlmICh0eXBlLmlzQXJyYXlUeXBlKCkpIHsKIAkJCWFycmF5VHlw
ZSA9IChBcnJheVR5cGUpIHR5cGU7CisJCQlpZiAoZXhwcmVzc2lvbi5hbm5vdGF0aW9uc09uRGlt
ZW5zaW9ucyAhPSBudWxsKSB7CisJCQkJaWYgKHRoaXMuYXN0LmFwaUxldmVsKCkgPCBBU1QuSkxT
OCkgeworCQkJCQlhcnJheVR5cGUuc2V0RmxhZ3MoYXJyYXlUeXBlLmdldEZsYWdzKCkgfCBBU1RO
b2RlLk1BTEZPUk1FRCk7CisJCQkJfSBlbHNlIHsKKwkJCQkJc2V0QXJyYXlUeXBlQW5ub3RhdGlv
bnNBbmRTb3VyY2UoYXJyYXlUeXBlLCBleHByZXNzaW9uLmFubm90YXRpb25zT25EaW1lbnNpb25z
KTsKKwkJCQl9CisJCQl9CiAJCX0gZWxzZSB7Ci0JCQlhcnJheVR5cGUgPSB0aGlzLmFzdC5uZXdB
cnJheVR5cGUodHlwZSwgZGltZW5zaW9uc0xlbmd0aCk7Ci0JCQlpZiAodGhpcy5yZXNvbHZlQmlu
ZGluZ3MpIHsKLQkJCQljb21wbGV0ZVJlY29yZChhcnJheVR5cGUsIGV4cHJlc3Npb24pOwotCQkJ
fQotCQkJaW50IHN0YXJ0ID0gdHlwZS5nZXRTdGFydFBvc2l0aW9uKCk7Ci0JCQlpbnQgZW5kID0g
dHlwZS5nZXRTdGFydFBvc2l0aW9uKCkgKyB0eXBlLmdldExlbmd0aCgpOwotCQkJaW50IHByZXZp
b3VzU2VhcmNoU3RhcnQgPSBlbmQgLSAxOwotCQkJQXJyYXlUeXBlIGNvbXBvbmVudFR5cGUgPSAo
QXJyYXlUeXBlKSB0eXBlLmdldFBhcmVudCgpOwotCQkJZm9yIChpbnQgaSA9IDA7IGkgPCBkaW1l
bnNpb25zTGVuZ3RoOyBpKyspIHsKLQkJCQlwcmV2aW91c1NlYXJjaFN0YXJ0ID0gcmV0cmlldmVS
aWdodEJyYWNrZXRQb3NpdGlvbihwcmV2aW91c1NlYXJjaFN0YXJ0ICsgMSwgdGhpcy5jb21waWxh
dGlvblVuaXRTb3VyY2VMZW5ndGgpOwotCQkJCWNvbXBvbmVudFR5cGUuc2V0U291cmNlUmFuZ2Uo
c3RhcnQsIHByZXZpb3VzU2VhcmNoU3RhcnQgLSBzdGFydCArIDEpOwotCQkJCWNvbXBvbmVudFR5
cGUgPSAoQXJyYXlUeXBlKSBjb21wb25lbnRUeXBlLmdldFBhcmVudCgpOwotCQkJfQotCQl9Ci0J
CWlmIChleHByZXNzaW9uLmFubm90YXRpb25zT25EaW1lbnNpb25zICE9IG51bGwpIHsKLQkJCWFu
bm90YXRlVHlwZShhcnJheVR5cGUsIGV4cHJlc3Npb24uYW5ub3RhdGlvbnNPbkRpbWVuc2lvbnMp
OworCQkJYXJyYXlUeXBlID0gY29udmVydFRvQXJyYXkodHlwZSwgdHlwZS5nZXRTdGFydFBvc2l0
aW9uKCksIC0xLCBkaW1lbnNpb25zTGVuZ3RoLCBleHByZXNzaW9uLmFubm90YXRpb25zT25EaW1l
bnNpb25zKTsKIAkJfQogCQlhcnJheUNyZWF0aW9uLnNldFR5cGUoYXJyYXlUeXBlKTsKIAkJaWYg
KHRoaXMucmVzb2x2ZUJpbmRpbmdzKSB7Ci0JCQlyZWNvcmROb2RlcyhhcnJheVR5cGUsIGV4cHJl
c3Npb24pOworCQkJY29tcGxldGVSZWNvcmQoYXJyYXlUeXBlLCBleHByZXNzaW9uKTsKIAkJfQog
CQlpZiAoZXhwcmVzc2lvbi5pbml0aWFsaXplciAhPSBudWxsKSB7CiAJCQlhcnJheUNyZWF0aW9u
LnNldEluaXRpYWxpemVyKGNvbnZlcnQoZXhwcmVzc2lvbi5pbml0aWFsaXplcikpOwpAQCAtMzEy
MSw2ICszMTM4LDMxIEBACiAJCXJldHVybiBwYWNrYWdlRGVjbGFyYXRpb247CiAJfQogCisJcHJp
dmF0ZSBBcnJheVR5cGUgY29udmVydFRvQXJyYXkoVHlwZSBzdWJUeXBlLCBpbnQgc291cmNlU3Rh
cnQsIGludCBsZW5ndGgsIGludCBub09mRGltZW5zaW9ucywKKwkJCW9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb21waWxlci5hc3QuQW5ub3RhdGlvbltdW10gYW5ub3RhdGlvbnNPbkRpbXMpIHsK
KwkJQXJyYXlUeXBlIGFycmF5VHlwZSA9IHRoaXMuYXN0Lm5ld0FycmF5VHlwZShzdWJUeXBlLCBu
b09mRGltZW5zaW9ucyk7CisJCWlmIChsZW5ndGggPiAwKSBhcnJheVR5cGUuc2V0U291cmNlUmFu
Z2Uoc291cmNlU3RhcnQsIGxlbmd0aCk7CisJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCgpIDwgQVNU
LkpMUzgpIHsKKwkJCWlmIChhbm5vdGF0aW9uc09uRGltcyAhPSBudWxsKSB7CisJCQkJYXJyYXlU
eXBlLnNldEZsYWdzKGFycmF5VHlwZS5nZXRGbGFncygpIHwgQVNUTm9kZS5NQUxGT1JNRUQpOwor
CQkJfQorCQkJQXJyYXlUeXBlIHN1YmFycmF5VHlwZSA9IGFycmF5VHlwZTsKKwkJCWludCBpbmRl
eCA9IG5vT2ZEaW1lbnNpb25zIC0gMTsKKwkJCWludCBhcnJheUVuZCA9IHJldHJpZXZlUHJvcGVy
UmlnaHRCcmFja2V0UG9zaXRpb24obm9PZkRpbWVuc2lvbnMsIHNvdXJjZVN0YXJ0KTsKKwkJCXdo
aWxlIChpbmRleCA+IDApIHsKKwkJCQlzdWJhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBjb21wb25l
bnRUeXBlKHN1YmFycmF5VHlwZSk7CisJCQkJaW50IGVuZCA9IHJldHJpZXZlUHJvcGVyUmlnaHRC
cmFja2V0UG9zaXRpb24oaW5kZXgsIHNvdXJjZVN0YXJ0KTsKKwkJCQlzdWJhcnJheVR5cGUuc2V0
U291cmNlUmFuZ2Uoc291cmNlU3RhcnQsIGVuZCAtIHNvdXJjZVN0YXJ0ICsgMSk7CisJCQkJaW5k
ZXgtLTsKKwkJCX0KKwkJCWlmIChsZW5ndGggPD0gMCkgYXJyYXlUeXBlLnNldFNvdXJjZVJhbmdl
KHNvdXJjZVN0YXJ0LCBhcnJheUVuZCAtIHNvdXJjZVN0YXJ0ICsgMSk7CisJCQlyZXR1cm4gYXJy
YXlUeXBlOworCQl9CisKKwkJc2V0QXJyYXlUeXBlQW5ub3RhdGlvbnNBbmRTb3VyY2UoYXJyYXlU
eXBlLCBhbm5vdGF0aW9uc09uRGltcyk7CisJCXJldHVybiBhcnJheVR5cGU7CisJfQorCiAJcHJp
dmF0ZSBFbnVtRGVjbGFyYXRpb24gY29udmVydFRvRW51bURlY2xhcmF0aW9uKG9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuVHlwZURlY2xhcmF0aW9uIHR5cGVEZWNsYXJhdGlv
bikgewogCQljaGVja0NhbmNlbGVkKCk7CiAJCS8vIGVudW0gZGVjbGFyYXRpb24gY2Fubm90IGJl
IGJ1aWx0IGlmIHRoZSBzb3VyY2UgaXMgbm90ID49IDEuNSwgc2luY2UgZW51bSBpcyB0aGVuIHNl
ZW4gYXMgYW4gaWRlbnRpZmllcgpAQCAtMzM1MSw2ICszMzkzLDM3IEBACiAJCX0KIAl9CiAKKwlw
cml2YXRlIHZvaWQgc2V0QXJyYXlUeXBlQW5ub3RhdGlvbnMoRXh0cmFEaW1lbnNpb24gY3VycmVu
dERpbWVuc2lvbiwKKwkJCW9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQW5u
b3RhdGlvbltdW10gYW5ub3RhdGlvbnNPbkRpbXMsIGludCBpbmRleCkgeworCQlpZiAoYW5ub3Rh
dGlvbnNPbkRpbXMgPT0gbnVsbCkgcmV0dXJuOworCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29tcGlsZXIuYXN0LkFubm90YXRpb25bXSBhbm5vdGF0aW9uID0gYW5ub3RhdGlvbnNPbkRpbXNb
aW5kZXhdOworCQlpZiAoYW5ub3RhdGlvbiAhPSBudWxsKSB7CisJCQlmb3IgKGludCBqID0gMDsg
aiA8IGFubm90YXRpb24ubGVuZ3RoOyBqKyspIHsKKwkJCQlBbm5vdGF0aW9uIGFubm90ID0gY29u
dmVydChhbm5vdGF0aW9uW2pdKTsKKwkJCQljdXJyZW50RGltZW5zaW9uLmFubm90YXRpb25zKCku
YWRkKGFubm90KTsKKwkJCX0KKwkJfQorCX0KKwkKKwlwcml2YXRlIHZvaWQgc2V0QXJyYXlUeXBl
QW5ub3RhdGlvbnNBbmRTb3VyY2UoQXJyYXlUeXBlIGFycmF5VHlwZSwKKwkJCW9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb21waWxlci5hc3QuQW5ub3RhdGlvbltdW10gYW5ub3RhdGlvbnNPbkRp
bXMpIHsKKwkJTGlzdCBkaW1lbnNpb25zID0gYXJyYXlUeXBlLmRpbWVuc2lvbnMoKTsKKwkJVHlw
ZSBlbGVtVHlwZSA9IGFycmF5VHlwZS5nZXRFbGVtZW50VHlwZSgpOworCQlpbnQgc3RhcnQgPSBl
bGVtVHlwZS5nZXRTdGFydFBvc2l0aW9uKCk7CisJCWludCBlbmRFbGVtZW50ID0gc3RhcnQgKyBl
bGVtVHlwZS5nZXRMZW5ndGgoKTsKKwkJaW50IGxlbmd0aCA9IGFycmF5VHlwZS5nZXRMZW5ndGgo
KTsKKwkJaW50IGVuZCA9IChsZW5ndGggPD0gMCkgPyByZXRyaWV2ZVByb3BlclJpZ2h0QnJhY2tl
dFBvc2l0aW9uKGRpbWVuc2lvbnMuc2l6ZSgpLCBlbmRFbGVtZW50KSA6IHN0YXJ0ICsgbGVuZ3Ro
IC0gMTsKKwkJYXJyYXlUeXBlLnNldFNvdXJjZVJhbmdlKHN0YXJ0LCBlbmQgLSBzdGFydCArIDEp
OworCQkKKwkJc3RhcnQgPSBlbmRFbGVtZW50OworCQlmb3IgKGludCBpID0gMDsgaSA8IGRpbWVu
c2lvbnMuc2l6ZSgpOyBpKyspIHsKKwkJCUV4dHJhRGltZW5zaW9uIGN1cnJlbnREaW1lbnNpb24g
PSAoRXh0cmFEaW1lbnNpb24pIGRpbWVuc2lvbnMuZ2V0KGkpOworCQkJc2V0QXJyYXlUeXBlQW5u
b3RhdGlvbnMoY3VycmVudERpbWVuc2lvbiwgYW5ub3RhdGlvbnNPbkRpbXMsIGkpOworCQkJcmV0
cmlldmVEaW1lbnNpb25BbmRTZXRQb3NpdGlvbnMoc3RhcnQsIGVuZCwgY3VycmVudERpbWVuc2lv
bik7CisJCQlzdGFydCA9IGN1cnJlbnREaW1lbnNpb24uZ2V0U3RhcnRQb3NpdGlvbigpICsgY3Vy
cmVudERpbWVuc2lvbi5nZXRMZW5ndGgoKTsKKwkJfQorCX0KKwogCXByb3RlY3RlZCBWYXJpYWJs
ZURlY2xhcmF0aW9uU3RhdGVtZW50IGNvbnZlcnRUb1ZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1l
bnQob3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Mb2NhbERlY2xhcmF0aW9u
IGxvY2FsRGVjbGFyYXRpb24pIHsKIAkJZmluYWwgVmFyaWFibGVEZWNsYXJhdGlvbkZyYWdtZW50
IHZhcmlhYmxlRGVjbGFyYXRpb25GcmFnbWVudCA9IGNvbnZlcnRUb1ZhcmlhYmxlRGVjbGFyYXRp
b25GcmFnbWVudChsb2NhbERlY2xhcmF0aW9uKTsKIAkJZmluYWwgVmFyaWFibGVEZWNsYXJhdGlv
blN0YXRlbWVudCB2YXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50ID0gbmV3IFZhcmlhYmxlRGVj
bGFyYXRpb25TdGF0ZW1lbnQodGhpcy5hc3QpOwpAQCAtMzM3NSw2ICszNDQ4LDkgQEAKIAkJCQl0
eXBlLnNldEZsYWdzKHR5cGUuZ2V0RmxhZ3MoKSB8IEFTVE5vZGUuTUFMRk9STUVEKTsKIAkJCQli
cmVhazsKIAkJCWRlZmF1bHQ6CisJCQkJaWYgKGFubm90YXRpb25zID09IG51bGwpIGJyZWFrOwor
CQkJCWludCBzdGFydCA9IHR5cGUuZ2V0U3RhcnRQb3NpdGlvbigpOworCQkJCWludCBsZW5ndGgg
PSB0eXBlLmdldExlbmd0aCgpOwogCQkJCWludCBhbm5vdGF0aW9uc0xlbmd0aCA9IGFubm90YXRp
b25zLmxlbmd0aDsKIAkJCQlmb3IgKGludCBpID0gMDsgaSA8IGFubm90YXRpb25zTGVuZ3RoOyBp
KyspIHsKIAkJCQkJb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0
aW9uIHR5cGVBbm5vdGF0aW9uID0gYW5ub3RhdGlvbnNbaV07CkBAIC0zMzgzLDIwICszNDU5LDE0
IEBACiAJCQkJCQl0eXBlLmFubm90YXRpb25zKCkuYWRkKGFubm90YXRpb24pOwogCQkJCQl9CiAJ
CQkJfQorCQkJCWludCBhbm5vdGF0aW9uc1N0YXJ0OworCQkJCWlmIChhbm5vdGF0aW9uc1swXSAh
PSBudWxsICYmIChhbm5vdGF0aW9uc1N0YXJ0ID0gYW5ub3RhdGlvbnNbMF0uc291cmNlU3RhcnQp
IDwgc3RhcnQgJiYgYW5ub3RhdGlvbnNTdGFydCA+IDApIHsKKwkJCQkJbGVuZ3RoICs9ICBzdGFy
dCAtIGFubm90YXRpb25zU3RhcnQ7CisJCQkJCXN0YXJ0ID0gYW5ub3RhdGlvbnNTdGFydDsKKwkJ
CQl9CisJCQkJdHlwZS5zZXRTb3VyY2VSYW5nZShzdGFydCwgbGVuZ3RoKTsKIAkJfQogCX0KLQlw
cml2YXRlIHZvaWQgYW5ub3RhdGVUeXBlKFR5cGUgdHlwZSwgb3JnLmVjbGlwc2UuamR0LmludGVy
bmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uW11bXSBhbm5vdGF0aW9ucykgewotCQlpbnQgbGV2
ZWwgPSBhbm5vdGF0aW9ucy5sZW5ndGggLSAxOwotCQl3aGlsZSh0eXBlLmlzQXJyYXlUeXBlKCkp
IHsKLQkJCUFycmF5VHlwZSBhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSB0eXBlOwotCQkJb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uW10gdHlwZUFubm90YXRp
b25zID0gYW5ub3RhdGlvbnNbbGV2ZWwtLV07Ci0JCQlpZiAodHlwZUFubm90YXRpb25zICE9IG51
bGwpIHsKLQkJCQlhbm5vdGF0ZVR5cGUoYXJyYXlUeXBlLCB0eXBlQW5ub3RhdGlvbnMpOwotCQkJ
fQotCQkJdHlwZSA9IGFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBlKCk7Ci0JCX0KLQl9Ci0KIAlw
cml2YXRlIHZvaWQgYW5ub3RhdGVUeXBlUGFyYW1ldGVyKFR5cGVQYXJhbWV0ZXIgdHlwZVBhcmFt
ZXRlciwgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uW10g
YW5ub3RhdGlvbnMpIHsKIAkJc3dpdGNoKHRoaXMuYXN0LmFwaUxldmVsKSB7CiAJCQljYXNlIEFT
VC5KTFMyX0lOVEVSTkFMIDoKQEAgLTM1NDQsMjMgKzM2MTQsNyBAQAogCQkJCX0KIAkJCX0KIAkJ
CWlmIChkaW1lbnNpb25zICE9IDApIHsKLQkJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29t
cGlsZXIuYXN0LkFubm90YXRpb25bXVtdIGFubm90YXRpb25zT25EaW1lbnNpb25zID0gdHlwZVJl
ZmVyZW5jZS5nZXRBbm5vdGF0aW9uc09uRGltZW5zaW9ucygpOwotCQkJCXR5cGUgPSB0aGlzLmFz
dC5uZXdBcnJheVR5cGUodHlwZSwgZGltZW5zaW9ucyk7Ci0JCQkJdHlwZS5zZXRTb3VyY2VSYW5n
ZShzb3VyY2VTdGFydCwgbGVuZ3RoKTsKLQkJCQlBcnJheVR5cGUgc3ViYXJyYXlUeXBlID0gKEFy
cmF5VHlwZSkgdHlwZTsKLQkJCQlpbnQgaW5kZXggPSBkaW1lbnNpb25zIC0gMTsKLQkJCQl3aGls
ZSAoaW5kZXggPiAwKSB7Ci0JCQkJCWlmIChhbm5vdGF0aW9uc09uRGltZW5zaW9ucyAhPSBudWxs
ICYmIChhbm5vdGF0aW9ucyA9IGFubm90YXRpb25zT25EaW1lbnNpb25zW2luZGV4XSkgIT0gbnVs
bCkgewotCQkJCQkJYW5ub3RhdGVUeXBlKHN1YmFycmF5VHlwZSwgYW5ub3RhdGlvbnMpOwotCQkJ
CQl9Ci0JCQkJCXN1YmFycmF5VHlwZSA9IChBcnJheVR5cGUpIHN1YmFycmF5VHlwZS5nZXRDb21w
b25lbnRUeXBlKCk7Ci0JCQkJCWludCBlbmQgPSByZXRyaWV2ZVByb3BlclJpZ2h0QnJhY2tldFBv
c2l0aW9uKGluZGV4LCBzb3VyY2VTdGFydCk7Ci0JCQkJCXN1YmFycmF5VHlwZS5zZXRTb3VyY2VS
YW5nZShzb3VyY2VTdGFydCwgZW5kIC0gc291cmNlU3RhcnQgKyAxKTsKLQkJCQkJaW5kZXgtLTsK
LQkJCQl9Ci0JCQkJaWYgKGFubm90YXRpb25zT25EaW1lbnNpb25zICE9IG51bGwgJiYgKGFubm90
YXRpb25zID0gYW5ub3RhdGlvbnNPbkRpbWVuc2lvbnNbMF0pICE9IG51bGwpIHsKLQkJCQkJYW5u
b3RhdGVUeXBlKHN1YmFycmF5VHlwZSwgYW5ub3RhdGlvbnMpOwotCQkJCX0KKwkJCQl0eXBlID0g
Y29udmVydFRvQXJyYXkodHlwZSwgc291cmNlU3RhcnQsIGxlbmd0aCwgZGltZW5zaW9ucywgdHlw
ZVJlZmVyZW5jZS5nZXRBbm5vdGF0aW9uc09uRGltZW5zaW9ucygpKTsKIAkJCQlpZiAodGhpcy5y
ZXNvbHZlQmluZGluZ3MpIHsKIAkJCQkJLy8gc3RvcmUga2V5cyBmb3IgaW5uZXIgdHlwZXMKIAkJ
CQkJY29tcGxldGVSZWNvcmQoKEFycmF5VHlwZSkgdHlwZSwgdHlwZVJlZmVyZW5jZSk7CkBAIC0z
ODEyLDMwICszODY2LDkgQEAKIAogCQkJbGVuZ3RoID0gdHlwZVJlZmVyZW5jZS5zb3VyY2VFbmQg
LSBzb3VyY2VTdGFydCArIDE7CiAJCQlpZiAoZGltZW5zaW9ucyAhPSAwKSB7Ci0JCQkJb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uW11bXSBhbm5vdGF0aW9u
c09uRGltZW5zaW9ucyA9IHR5cGVSZWZlcmVuY2UuZ2V0QW5ub3RhdGlvbnNPbkRpbWVuc2lvbnMo
KTsKLQkJCQl0eXBlID0gdGhpcy5hc3QubmV3QXJyYXlUeXBlKHR5cGUsIGRpbWVuc2lvbnMpOwor
CQkJCXR5cGUgPSBjb252ZXJ0VG9BcnJheSh0eXBlLCBzb3VyY2VTdGFydCwgLTEsIGRpbWVuc2lv
bnMsIHR5cGVSZWZlcmVuY2UuZ2V0QW5ub3RhdGlvbnNPbkRpbWVuc2lvbnMoKSk7CiAJCQkJaWYg
KHRoaXMucmVzb2x2ZUJpbmRpbmdzKSB7CiAJCQkJCWNvbXBsZXRlUmVjb3JkKChBcnJheVR5cGUp
IHR5cGUsIHR5cGVSZWZlcmVuY2UpOwotCQkJCX0KLQkJCQlpbnQgZW5kID0gcmV0cmlldmVFbmRP
ZkRpbWVuc2lvbnNQb3NpdGlvbihzb3VyY2VTdGFydCtsZW5ndGgsIHRoaXMuY29tcGlsYXRpb25V
bml0U291cmNlTGVuZ3RoKTsKLQkJCQlpZiAoZW5kICE9IC0xKSB7Ci0JCQkJCXR5cGUuc2V0U291
cmNlUmFuZ2Uoc291cmNlU3RhcnQsIGVuZCAtIHNvdXJjZVN0YXJ0ICsgMSk7Ci0JCQkJfSBlbHNl
IHsKLQkJCQkJdHlwZS5zZXRTb3VyY2VSYW5nZShzb3VyY2VTdGFydCwgbGVuZ3RoKTsKLQkJCQl9
Ci0JCQkJQXJyYXlUeXBlIHN1YmFycmF5VHlwZSA9IChBcnJheVR5cGUpIHR5cGU7Ci0JCQkJaW50
IGluZGV4ID0gZGltZW5zaW9ucyAtIDE7Ci0JCQkJd2hpbGUgKGluZGV4ID4gMCkgewotCQkJCQlp
ZiAoYW5ub3RhdGlvbnNPbkRpbWVuc2lvbnMgIT0gbnVsbCAgJiYgKGFubm90YXRpb25zID0gYW5u
b3RhdGlvbnNPbkRpbWVuc2lvbnNbaW5kZXhdKSAhPSBudWxsKSB7Ci0JCQkJCQlhbm5vdGF0ZVR5
cGUoc3ViYXJyYXlUeXBlLCBhbm5vdGF0aW9ucyk7Ci0JCQkJCX0KLQkJCQkJc3ViYXJyYXlUeXBl
ID0gKEFycmF5VHlwZSkgc3ViYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJCQkJZW5k
ID0gcmV0cmlldmVQcm9wZXJSaWdodEJyYWNrZXRQb3NpdGlvbihpbmRleCwgc291cmNlU3RhcnQp
OwotCQkJCQlzdWJhcnJheVR5cGUuc2V0U291cmNlUmFuZ2Uoc291cmNlU3RhcnQsIGVuZCAtIHNv
dXJjZVN0YXJ0ICsgMSk7Ci0JCQkJCWluZGV4LS07Ci0JCQkJfQotCQkJCWlmIChhbm5vdGF0aW9u
c09uRGltZW5zaW9ucyAhPSBudWxsICAmJiAoYW5ub3RhdGlvbnMgPSBhbm5vdGF0aW9uc09uRGlt
ZW5zaW9uc1swXSkgIT0gbnVsbCkgewotCQkJCQlhbm5vdGF0ZVR5cGUoc3ViYXJyYXlUeXBlLCBh
bm5vdGF0aW9ucyk7CiAJCQkJfQogCQkJfQogCQl9CkBAIC0zODk2LDE2ICszOTI5LDExIEBACiAJ
cHJpdmF0ZSB2b2lkIHNldFNvdXJjZVJhbmdlQW5ub3RhdGlvbnNBbmRSZWNvcmROb2RlcyhUeXBl
UmVmZXJlbmNlIHR5cGVSZWZlcmVuY2UsIEFubm90YXRhYmxlVHlwZSBhbm5vdGF0YWJsZVR5cGUs
CiAJCQlvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIuYXN0LkFubm90YXRpb25bXVtd
IHR5cGVBbm5vdGF0aW9ucywgaW50IGluZGV4LCBpbnQgc3RhcnQsIGludCBlbmQpIHsKIAkJb3Jn
LmVjbGlwc2UuamR0LmludGVybmFsLmNvbXBpbGVyLmFzdC5Bbm5vdGF0aW9uW10gYW5ub3RhdGlv
bnM7Ci0JCWludCBhbm5vdGF0aW9uc1N0YXJ0ID0gc3RhcnQ7CiAJCWludCBsZW5ndGggPSBlbmQg
LSBzdGFydCArIDE7CisJCWFubm90YXRhYmxlVHlwZS5zZXRTb3VyY2VSYW5nZShzdGFydCwgbGVu
Z3RoKTsKIAkJaWYgKHR5cGVBbm5vdGF0aW9ucyAhPSBudWxsICYmIChhbm5vdGF0aW9ucyA9IHR5
cGVBbm5vdGF0aW9uc1tpbmRleF0pICE9IG51bGwpIHsKIAkJCWFubm90YXRlVHlwZShhbm5vdGF0
YWJsZVR5cGUsIGFubm90YXRpb25zKTsKLQkJCWlmIChhbm5vdGF0aW9uc1swXSAhPSBudWxsICYm
IChhbm5vdGF0aW9uc1N0YXJ0ID0gYW5ub3RhdGlvbnNbMF0uc291cmNlU3RhcnQpIDwgc3RhcnQp
IHsKLQkJCQlsZW5ndGggKz0gYW5ub3RhdGlvbnNTdGFydCA+IDAgPyBzdGFydCAtIGFubm90YXRp
b25zU3RhcnQgOiAwOwotCQkJCXN0YXJ0ID0gYW5ub3RhdGlvbnNTdGFydDsKLQkJCX0KIAkJfQot
CQlhbm5vdGF0YWJsZVR5cGUuc2V0U291cmNlUmFuZ2Uoc3RhcnQsIGxlbmd0aCk7CiAJCWlmICh0
aGlzLnJlc29sdmVCaW5kaW5ncykgewogCQkJcmVjb3JkTm9kZXMoYW5ub3RhdGFibGVUeXBlLCB0
eXBlUmVmZXJlbmNlKTsKIAkJfQpAQCAtNDYwMywzOCArNDYzMSw2IEBACiAJfQogCiAJLyoqCi0J
ICogVGhpcyBtZXRob2QgaXMgdXNlZCB0byByZXRyaWV2ZSB0aGUgZW5kaW5nIHBvc2l0aW9uIGZv
ciBhIHR5cGUgZGVjbGFyYXRpb24gd2hlbiB0aGUgZGltZW5zaW9uIGlzIHJpZ2h0IGFmdGVyIHRo
ZSB0eXBlCi0JICogbmFtZS4KLQkgKiBGb3IgZXhhbXBsZToKLQkgKiAgICBpbnRbXSBpOyA9PiBy
ZXR1cm4gNSwgYnV0IGludCBpW10gPT4gcmV0dXJuIC0xOwotCSAqIEByZXR1cm4gaW50IHRoZSBk
aW1lbnNpb24gZm91bmQKLQkgKi8KLQlwcm90ZWN0ZWQgaW50IHJldHJpZXZlRW5kT2ZEaW1lbnNp
b25zUG9zaXRpb24oaW50IHN0YXJ0LCBpbnQgZW5kKSB7Ci0JCXRoaXMuc2Nhbm5lci5yZXNldFRv
KHN0YXJ0LCBlbmQpOwotCQlpbnQgZm91bmRQb3NpdGlvbiA9IC0xOwotCQl0cnkgewotCQkJaW50
IHRva2VuOwotCQkJd2hpbGUgKCh0b2tlbiA9IHRoaXMuc2Nhbm5lci5nZXROZXh0VG9rZW4oKSkg
IT0gVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lRU9GKSB7Ci0JCQkJc3dpdGNoKHRva2VuKSB7Ci0J
CQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lTEJSQUNLRVQ6Ci0JCQkJCWNhc2UgVGVy
bWluYWxUb2tlbnMuVG9rZW5OYW1lQ09NTUVOVF9CTE9DSzoKLQkJCQkJY2FzZSBUZXJtaW5hbFRv
a2Vucy5Ub2tlbk5hbWVDT01NRU5UX0pBVkFET0M6Ci0JCQkJCWNhc2UgVGVybWluYWxUb2tlbnMu
VG9rZW5OYW1lQ09NTUVOVF9MSU5FOgotCQkJCQkJYnJlYWs7Ci0JCQkJCWNhc2UgVGVybWluYWxU
b2tlbnMuVG9rZW5OYW1lUkJSQUNLRVQ6Ly8xNjYKLQkJCQkJCWZvdW5kUG9zaXRpb24gPSB0aGlz
LnNjYW5uZXIuY3VycmVudFBvc2l0aW9uIC0gMTsKLQkJCQkJCWJyZWFrOwotCQkJCQlkZWZhdWx0
OgotCQkJCQkJcmV0dXJuIGZvdW5kUG9zaXRpb247Ci0JCQkJfQotCQkJfQotCQl9IGNhdGNoKElu
dmFsaWRJbnB1dEV4Y2VwdGlvbiBlKSB7Ci0JCQkvLyBpZ25vcmUKLQkJfQotCQlyZXR1cm4gZm91
bmRQb3NpdGlvbjsKLQl9Ci0KLQkvKioKIAkgKiBUaGlzIG1ldGhvZCBpcyB1c2VkIHRvIHJldHJp
ZXZlIHRoZSBzdGFydCBhbmQgZW5kIHBvc2l0aW9uIG9mIGEgbmFtZSBvciBwcmltaXRpdmUgdHlw
ZSB0b2tlbi4KIAkgKiAKIAkgKiBAcmV0dXJuIGludFtdIGEgc2luZ2xlIGRpbWVuc2lvbmFsIGFy
cmF5LCB3aXRoIHR3byBlbGVtZW50cywgZm9yIHRoZSBzdGFydCBhbmQgZW5kIHBvc2l0aW9ucyBv
ZiB0aGUgbmFtZSByZXNwZWN0aXZlbHkKQEAgLTQ2NDQsOCArNDY0MCwxNSBAQAogCQlib29sZWFu
IGlzQW5ub3RhdGlvbiA9IGZhbHNlOwogCQl0cnkgewogCQkJaW50IHRva2VuOworCQkJaW50IGNv
dW50ID0gMDsKIAkJCXdoaWxlICgodG9rZW4gPSB0aGlzLnNjYW5uZXIuZ2V0TmV4dFRva2VuKCkp
ICE9IFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUVPRikgewogCQkJCXN3aXRjaCh0b2tlbikgewor
CQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUxQQVJFTjoKKwkJCQkJCSsrY291bnQ7
CisJCQkJCQlicmVhazsKKwkJCQkJY2FzZSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVSUEFSRU46
CisJCQkJCQktLWNvdW50OworCQkJCQkJYnJlYWs7CiAJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMu
VG9rZW5OYW1lQVQ6CiAJCQkJCQlpc0Fubm90YXRpb24gPSB0cnVlOwogCQkJCQkJYnJlYWs7CkBA
IC00NjYzLDYgKzQ2NjYsNyBAQAogCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZWxv
bmc6CiAJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lc2hvcnQ6CiAJCQkJCWNhc2Ug
VGVybWluYWxUb2tlbnMuVG9rZW5OYW1lYm9vbGVhbjoKKwkJCQkJCWlmIChjb3VudCA+IDApIGJy
ZWFrOwogCQkJCQkJcmV0dXJuIG5ldyBpbnRbXXt0aGlzLnNjYW5uZXIuc3RhcnRQb3NpdGlvbiwg
dGhpcy5zY2FubmVyLmN1cnJlbnRQb3NpdGlvbiAtIDF9OwogCQkJCX0KIAkJCX0KQEAgLTQ3MTIs
OSArNDcxNiwxNyBAQAogCQl0aGlzLnNjYW5uZXIucmVzZXRUbyhzdGFydCwgZW5kKTsKIAkJaW50
IGRpbWVuc2lvbnMgPSAwOwogCQl0cnkgewotCQkJaW50IHRva2VuOwotCQkJYm9vbGVhbiBpc0Fu
bm90YXRpb24gPSBmYWxzZTsKKwkJCWludCB0b2tlbiwgbFBhcmVuQ291bnQgPSAwOworCQkJYm9v
bGVhbiBpc0Fubm90YXRpb24gPSBmYWxzZSwgZm91bmRBbm5vdGF0aW9uID0gZmFsc2U7CiAJCQl3
aGlsZSAoKHRva2VuID0gdGhpcy5zY2FubmVyLmdldE5leHRUb2tlbigpKSAhPSBUZXJtaW5hbFRv
a2Vucy5Ub2tlbk5hbWVFT0YpIHsKKwkJCQlpZiAoZm91bmRBbm5vdGF0aW9uKSB7CisJCQkJCWlm
ICh0b2tlbiA9PSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVMUEFSRU4pICsrbFBhcmVuQ291bnQ7
CisJCQkJCWVsc2UgaWYgKHRva2VuID09IFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZVJQQVJFTikg
eworCQkJCQkJLS1sUGFyZW5Db3VudDsKKwkJCQkJCWNvbnRpbnVlOworCQkJCQl9CisJCQkJCWlm
IChsUGFyZW5Db3VudCA+IDApIGNvbnRpbnVlOworCQkJCX0KIAkJCQlzd2l0Y2godG9rZW4pIHsK
IAkJCQkJY2FzZSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVMQlJBQ0tFVDoKIAkJCQkJY2FzZSBU
ZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVDT01NRU5UX0JMT0NLOgpAQCAtNDcyNCw2ICs0NzM2LDcg
QEAKIAkJCQkJCWJyZWFrOwogCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUFUOgog
CQkJCQkJaXNBbm5vdGF0aW9uID0gdHJ1ZTsKKwkJCQkJCWZvdW5kQW5ub3RhdGlvbiA9IHRydWU7
IC8qIGNoZWNrIGZvciBwYXJhbXMgKi8KIAkJCQkJCWJyZWFrOwogCQkJCQljYXNlIFRlcm1pbmFs
VG9rZW5zLlRva2VuTmFtZUlkZW50aWZpZXI6CiAJCQkJCQlpZiAoIWlzQW5ub3RhdGlvbikgewpA
QCAtNDc0OCwyMiArNDc2MSwzNiBAQAogCXByb3RlY3RlZCB2b2lkIHJldHJpZXZlRGltZW5zaW9u
QW5kU2V0UG9zaXRpb25zKGludCBzdGFydCwgaW50IGVuZCwgRXh0cmFEaW1lbnNpb24gZGltKSB7
CiAJCXRoaXMuc2Nhbm5lci5yZXNldFRvKHN0YXJ0LCBlbmQpOwogCQlpbnQgdG9rZW47CisJCWlu
dCBjb3VudCA9IDAsIGxQYXJlbkNvdW50ID0gMDsKIAkJYm9vbGVhbiBzdGFydFNldCA9IGZhbHNl
OwogCQl0cnkgewogCQkJd2hpbGUoKHRva2VuID0gdGhpcy5zY2FubmVyLmdldE5leHRUb2tlbigp
KSAhPSBUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVFT0YpICB7Ci0JCQkJc3dpdGNoKHRva2VuKSB7
Ci0JCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lV0hJVEVTUEFDRToKLQkJCQkJCWJy
ZWFrOwotCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZVJCUkFDS0VUOgotCQkJCQkJ
aW50IGVuZERpbSA9IHRoaXMuc2Nhbm5lci5jdXJyZW50UG9zaXRpb24gLSAxOwotCQkJCQkJZGlt
LnNldFNvdXJjZVJhbmdlKHN0YXJ0LCBlbmREaW0gLSBzdGFydCArIDEpOwotCQkJCQkJcmV0dXJu
OwotCQkJCQlkZWZhdWx0OgotCQkJCQkJaWYgKCFzdGFydFNldCkgewotCQkJCQkJCXN0YXJ0ID0g
dGhpcy5zY2FubmVyLnN0YXJ0UG9zaXRpb247Ci0JCQkJCQkJc3RhcnRTZXQgPSB0cnVlOwotCQkJ
CQkJfQotCQkJCQkJYnJlYWs7CisJCQkJaWYgKHRva2VuICE9IFRlcm1pbmFsVG9rZW5zLlRva2Vu
TmFtZVdISVRFU1BBQ0UpIHsKKwkJCQkJaWYgKCFzdGFydFNldCkgeworCQkJCQkJc3RhcnQgPSB0
aGlzLnNjYW5uZXIuc3RhcnRQb3NpdGlvbjsKKwkJCQkJCXN0YXJ0U2V0ID0gdHJ1ZTsKKwkJCQkJ
fQorCQkJCQlzd2l0Y2godG9rZW4pIHsKKwkJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5O
YW1lUkJSQUNLRVQ6CisJCQkJCQkJaWYgKGxQYXJlbkNvdW50ID4gMCkgYnJlYWs7CisJCQkJCQkJ
LS1jb3VudDsKKwkJCQkJCQlpZiAoY291bnQgPiAwKSBicmVhazsKKwkJCQkJCQlpbnQgZW5kRGlt
ID0gdGhpcy5zY2FubmVyLmN1cnJlbnRQb3NpdGlvbiAtIDE7CisJCQkJCQkJZGltLnNldFNvdXJj
ZVJhbmdlKHN0YXJ0LCBlbmREaW0gLSBzdGFydCArIDEpOworCQkJCQkJCXJldHVybjsKKwkJCQkJ
CWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lTEJSQUNLRVQ6CisJCQkJCQkJaWYgKGxQYXJl
bkNvdW50ID4gMCkgYnJlYWs7CisJCQkJCQkJY291bnQrKzsKKwkJCQkJCQlicmVhazsKKwkJCQkJ
CWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lTFBBUkVOOgorCQkJCQkJCWxQYXJlbkNvdW50
Kys7CisJCQkJCQkJYnJlYWs7CisJCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZVJQ
QVJFTjoKKwkJCQkJCQktLWxQYXJlbkNvdW50OworCQkJCQkJCWJyZWFrOworCQkJCQkJZGVmYXVs
dDoKKwkJCQkJCQlicmVhazsKKwkJCQkJfQogCQkJCX0KIAkJCX0KIAkJfSBjYXRjaChJbnZhbGlk
SW5wdXRFeGNlcHRpb24gZSkgewpAQCAtNDg0MSwxMCArNDg2OCwyMiBAQAogCQlpbnQgYmFsYW5j
ZSA9IDA7CiAJCWludCBwb3MgPSBpbml0aWFsaXplckVuZCA+IG5hbWVFbmQgPyBpbml0aWFsaXpl
ckVuZCAtIDEgOiBuYW1lRW5kOwogCQl0cnkgewotCQkJaW50IHRva2VuOworCQkJaW50IHRva2Vu
LCBsUGFyZW5Db3VudCA9IDA7CisJCQlib29sZWFuIGhhc0Fubm90YXRpb25zID0gZmFsc2U7CiAJ
CQl3aGlsZSAoKHRva2VuID0gdGhpcy5zY2FubmVyLmdldE5leHRUb2tlbigpKSAhPSBUZXJtaW5h
bFRva2Vucy5Ub2tlbk5hbWVFT0YpIHsKIAkJCQloYXNUb2tlbnMgPSB0cnVlOworCQkJCWlmICho
YXNBbm5vdGF0aW9ucykgeworCQkJCQlpZiAodG9rZW4gPT0gVGVybWluYWxUb2tlbnMuVG9rZW5O
YW1lTFBBUkVOKSArK2xQYXJlbkNvdW50OworCQkJCQllbHNlIGlmICh0b2tlbiA9PSBUZXJtaW5h
bFRva2Vucy5Ub2tlbk5hbWVSUEFSRU4pIHsKKwkJCQkJCS0tbFBhcmVuQ291bnQ7IAorCQkJCQkJ
Y29udGludWU7CisJCQkJCX0KKwkJCQkJaWYgKGxQYXJlbkNvdW50ID4gMCkgY29udGludWU7CisJ
CQkJfQogCQkJCXN3aXRjaCh0b2tlbikgeworCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2Vu
TmFtZUFUOgorCQkJCQkJaGFzQW5ub3RhdGlvbnMgPSB0cnVlOworCQkJCQkJYnJlYWs7CiAJCQkJ
CWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lTEJSQUNFIDoKIAkJCQkJY2FzZSBUZXJtaW5h
bFRva2Vucy5Ub2tlbk5hbWVMQlJBQ0tFVCA6CiAJCQkJCQliYWxhbmNlKys7CkBAIC00ODc0LDEw
ICs0OTEzLDIyIEBACiAJcHJvdGVjdGVkIGludCByZXRyaWV2ZVByb3BlclJpZ2h0QnJhY2tldFBv
c2l0aW9uKGludCBicmFja2V0TnVtYmVyLCBpbnQgc3RhcnQpIHsKIAkJdGhpcy5zY2FubmVyLnJl
c2V0VG8oc3RhcnQsIHRoaXMuY29tcGlsYXRpb25Vbml0U291cmNlTGVuZ3RoKTsKIAkJdHJ5IHsK
LQkJCWludCB0b2tlbiwgY291bnQgPSAwOworCQkJaW50IHRva2VuLCBjb3VudCA9IDAsIGxQYXJl
bnRDb3VudCA9IDAsIGJhbGFuY2UgPSAwOwogCQkJd2hpbGUgKCh0b2tlbiA9IHRoaXMuc2Nhbm5l
ci5nZXROZXh0VG9rZW4oKSkgIT0gVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lRU9GKSB7CiAJCQkJ
c3dpdGNoKHRva2VuKSB7CisJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lTFBBUkVO
OgorCQkJCQkJKytsUGFyZW50Q291bnQ7CisJCQkJCQlicmVhazsKKwkJCQkJY2FzZSBUZXJtaW5h
bFRva2Vucy5Ub2tlbk5hbWVSUEFSRU46CisJCQkJCQktLWxQYXJlbnRDb3VudDsKKwkJCQkJCWJy
ZWFrOworCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUxCUkFDS0VUOgorCQkJCQkJ
KytiYWxhbmNlOworCQkJCQkJYnJlYWs7CiAJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5O
YW1lUkJSQUNLRVQ6CisJCQkJCQktLWJhbGFuY2U7CisJCQkJCQlpZiAobFBhcmVudENvdW50ID4g
MCkgYnJlYWs7CisJCQkJCQlpZiAoYmFsYW5jZSA+IDApIGJyZWFrOwogCQkJCQkJY291bnQrKzsK
IAkJCQkJCWlmIChjb3VudCA9PSBicmFja2V0TnVtYmVyKSB7CiAJCQkJCQkJcmV0dXJuIHRoaXMu
c2Nhbm5lci5jdXJyZW50UG9zaXRpb24gLSAxOwpAQCAtNDkyNCwzMiArNDk3NSw2IEBACiAJCQkJ
c3dpdGNoKHRva2VuKSB7CiAJCQkJCWNhc2UgVGVybWluYWxUb2tlbnMuVG9rZW5OYW1lUkJSQUNF
IDoKIAkJCQkJCXJldHVybiB0aGlzLnNjYW5uZXIuY3VycmVudFBvc2l0aW9uIC0gMTsKLQkJCQl9
Ci0JCQl9Ci0JCX0gY2F0Y2goSW52YWxpZElucHV0RXhjZXB0aW9uIGUpIHsKLQkJCS8vIGlnbm9y
ZQotCQl9Ci0JCXJldHVybiAtMTsKLQl9Ci0KLQkvKioKLQkgKiBUaGlzIG1ldGhvZCBpcyB1c2Vk
IHRvIHJldHJpZXZlIHRoZSBwb3NpdGlvbiBvZiB0aGUgcmlnaHQgYnJhY2tldC4KLQkgKiBAcmV0
dXJuIGludCB0aGUgZGltZW5zaW9uIGZvdW5kLCAtMSBpZiBub25lCi0JICovCi0JcHJvdGVjdGVk
IGludCByZXRyaWV2ZVJpZ2h0QnJhY2tldFBvc2l0aW9uKGludCBzdGFydCwgaW50IGVuZCkgewot
CQl0aGlzLnNjYW5uZXIucmVzZXRUbyhzdGFydCwgZW5kKTsKLQkJdHJ5IHsKLQkJCWludCB0b2tl
bjsKLQkJCWludCBiYWxhbmNlID0gMDsKLQkJCXdoaWxlICgodG9rZW4gPSB0aGlzLnNjYW5uZXIu
Z2V0TmV4dFRva2VuKCkpICE9IFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUVPRikgewotCQkJCXN3
aXRjaCh0b2tlbikgewotCQkJCQljYXNlIFRlcm1pbmFsVG9rZW5zLlRva2VuTmFtZUxCUkFDS0VU
IDoKLQkJCQkJCWJhbGFuY2UrKzsKLQkJCQkJCWJyZWFrOwotCQkJCQljYXNlIFRlcm1pbmFsVG9r
ZW5zLlRva2VuTmFtZVJCUkFDS0VUIDoKLQkJCQkJCWJhbGFuY2UtLTsKLQkJCQkJCWlmIChiYWxh
bmNlID09IDApIHJldHVybiB0aGlzLnNjYW5uZXIuY3VycmVudFBvc2l0aW9uIC0gMTsKLQkJCQkJ
CWJyZWFrOwogCQkJCX0KIAkJCX0KIAkJfSBjYXRjaChJbnZhbGlkSW5wdXRFeGNlcHRpb24gZSkg
ewpAQCAtNTY0MywzMiArNTY2OCw1MSBAQAogCQkJCQl0aGlzLmFzdC5nZXRCaW5kaW5nUmVzb2x2
ZXIoKS51cGRhdGVLZXkodHlwZSwgZWxlbWVudFR5cGUpOwogCQkJCQlmaWVsZERlY2xhcmF0aW9u
LnNldFR5cGUoZWxlbWVudFR5cGUpOwogCQkJCX0gZWxzZSB7Ci0JCQkJCWludCBzdGFydCA9IHR5
cGUuZ2V0U3RhcnRQb3NpdGlvbigpOwotCQkJCQlBcnJheVR5cGUgc3ViYXJyYXlUeXBlID0gYXJy
YXlUeXBlOwotCQkJCQlpbnQgaW5kZXggPSBleHRyYURpbWVuc2lvbjsKLQkJCQkJd2hpbGUgKGlu
ZGV4ID4gMCkgewotCQkJCQkJc3ViYXJyYXlUeXBlID0gKEFycmF5VHlwZSkgc3ViYXJyYXlUeXBl
LmdldENvbXBvbmVudFR5cGUoKTsKLQkJCQkJCWluZGV4LS07Ci0JCQkJCX0KLQkJCQkJaW50IGVu
ZCA9IHJldHJpZXZlUHJvcGVyUmlnaHRCcmFja2V0UG9zaXRpb24ocmVtYWluaW5nRGltZW5zaW9u
cywgc3RhcnQpOwotCQkJCQlzdWJhcnJheVR5cGUuc2V0U291cmNlUmFuZ2Uoc3RhcnQsIGVuZCAt
IHN0YXJ0ICsgMSk7Ci0JCQkJCS8vIGN1dCB0aGUgY2hpbGQgbG9vc2UgZnJvbSBpdHMgcGFyZW50
ICh3aXRob3V0IGNyZWF0aW5nIGdhcmJhZ2UpCi0JCQkJCXN1YmFycmF5VHlwZS5zZXRQYXJlbnQo
bnVsbCwgbnVsbCk7CisJCQkJCUFycmF5VHlwZSBzdWJhcnJheVR5cGUgPSBleHRyYWN0U3ViQXJy
YXlUeXBlKGFycmF5VHlwZSwgcmVtYWluaW5nRGltZW5zaW9ucywgZXh0cmFEaW1lbnNpb24pOwog
CQkJCQlmaWVsZERlY2xhcmF0aW9uLnNldFR5cGUoc3ViYXJyYXlUeXBlKTsKLQkJCQkJdXBkYXRl
SW5uZXJQb3NpdGlvbnMoc3ViYXJyYXlUeXBlLCByZW1haW5pbmdEaW1lbnNpb25zKTsKIAkJCQkJ
dGhpcy5hc3QuZ2V0QmluZGluZ1Jlc29sdmVyKCkudXBkYXRlS2V5KHR5cGUsIHN1YmFycmF5VHlw
ZSk7CiAJCQkJfQorCQkJCWNoZWNrQW5kU2V0TWFsZm9ybWVkKHR5cGUsIGZpZWxkRGVjbGFyYXRp
b24pOwogCQkJfSBlbHNlIHsKIAkJCQlmaWVsZERlY2xhcmF0aW9uLnNldFR5cGUodHlwZSk7CiAJ
CQl9CiAJCX0gZWxzZSB7Ci0JCQlpZiAodHlwZS5pc0FycmF5VHlwZSgpKSB7CisJCQlpZiAodHlw
ZS5pc0FycmF5VHlwZSgpICYmICh0aGlzLmFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpKSB7CiAJ
CQkJLy8gdXBkYXRlIHBvc2l0aW9ucyBvZiB0aGUgY29tcG9uZW50IHR5cGVzIG9mIHRoZSBhcnJh
eSB0eXBlCiAJCQkJaW50IGRpbWVuc2lvbnMgPSAoKEFycmF5VHlwZSkgdHlwZSkuZ2V0RGltZW5z
aW9ucygpOwogCQkJCXVwZGF0ZUlubmVyUG9zaXRpb25zKHR5cGUsIGRpbWVuc2lvbnMpOwogCQkJ
fQogCQkJZmllbGREZWNsYXJhdGlvbi5zZXRUeXBlKHR5cGUpOwogCQl9CisJfQorCisJLyoqIGV4
dHJhY3RzIHRoZSBzdWJBcnJheVR5cGUgZm9yIGEgZ2l2ZW4gZGVjbGFyYXRpb24gZm9yIEFTVCBs
ZXZlbHMgbGVzcworCSAqIEBwYXJhbSBhcnJheVR5cGUgcGFyZW50IHR5cGUKKwkgKiBAcGFyYW0g
cmVtYWluaW5nRGltZW5zaW9ucyAKKwkgKiBAcGFyYW0gZXh0cmFEaW1lbnNpb25zCisJICogQHJl
dHVybiBhbiBBcnJheVR5cGUKKwkgKi8KKwlwcml2YXRlIEFycmF5VHlwZSBleHRyYWN0U3ViQXJy
YXlUeXBlKEFycmF5VHlwZSBhcnJheVR5cGUsIGludCByZW1haW5pbmdEaW1lbnNpb25zLCBpbnQg
ZXh0cmFEaW1lbnNpb25zKSB7CisJCUFycmF5VHlwZSBzdWJBcnJheVR5cGUgPSBhcnJheVR5cGU7
CisJCWludCBzdGFydCA9IHN1YkFycmF5VHlwZS5nZXRTdGFydFBvc2l0aW9uKCk7CisJCWlmICh0
aGlzLmFzdC5hcGlMZXZlbCgpIDwgQVNULkpMUzgpIHsKKwkJCXdoaWxlIChleHRyYURpbWVuc2lv
bnMgPiAwICkgeworCQkJCXN1YkFycmF5VHlwZSA9IChBcnJheVR5cGUpIGNvbXBvbmVudFR5cGUo
c3ViQXJyYXlUeXBlKTsKKwkJCQlleHRyYURpbWVuc2lvbnMtLTsKKwkJCX0KKwkJCXVwZGF0ZUlu
bmVyUG9zaXRpb25zKHN1YkFycmF5VHlwZSwgcmVtYWluaW5nRGltZW5zaW9ucyk7CisJCX0gZWxz
ZSB7CisJCQlMaXN0IGRpbWVuc2lvbnMgPSBzdWJBcnJheVR5cGUuZGltZW5zaW9ucygpOworCQkJ
d2hpbGUgKGV4dHJhRGltZW5zaW9ucyA+IDAgKSB7CisJCQkJZGltZW5zaW9ucy5yZW1vdmUoZGlt
ZW5zaW9ucy5zaXplKCkgLSAxKTsKKwkJCQlleHRyYURpbWVuc2lvbnMtLTsKKwkJCX0KKwkJfQor
CQlpbnQgZW5kID0gcmV0cmlldmVQcm9wZXJSaWdodEJyYWNrZXRQb3NpdGlvbihyZW1haW5pbmdE
aW1lbnNpb25zLCBzdGFydCk7CisJCXN1YkFycmF5VHlwZS5zZXRTb3VyY2VSYW5nZShzdGFydCwg
ZW5kIC0gc3RhcnQgKyAxKTsKKwkJLy8gY3V0IHRoZSBjaGlsZCBsb29zZSBmcm9tIGl0cyBwYXJl
bnQgKHdpdGhvdXQgY3JlYXRpbmcgZ2FyYmFnZSkKKwkJc3ViQXJyYXlUeXBlLnNldFBhcmVudChu
dWxsLCBudWxsKTsKKwkJcmV0dXJuIHN1YkFycmF5VHlwZTsKIAl9CiAKIAlwcm90ZWN0ZWQgdm9p
ZCBzZXRUeXBlRm9yTWV0aG9kRGVjbGFyYXRpb24oTWV0aG9kRGVjbGFyYXRpb24gbWV0aG9kRGVj
bGFyYXRpb24sIFR5cGUgdHlwZSwgaW50IGV4dHJhRGltZW5zaW9uKSB7CkBAIC01NjkxLDE4ICs1
NzM1LDcgQEAKIAkJCQkJCWJyZWFrOwogCQkJCQl9CiAJCQkJfSBlbHNlIHsKLQkJCQkJaW50IHN0
YXJ0ID0gdHlwZS5nZXRTdGFydFBvc2l0aW9uKCk7Ci0JCQkJCUFycmF5VHlwZSBzdWJhcnJheVR5
cGUgPSBhcnJheVR5cGU7Ci0JCQkJCWludCBpbmRleCA9IGV4dHJhRGltZW5zaW9uOwotCQkJCQl3
aGlsZSAoaW5kZXggPiAwKSB7Ci0JCQkJCQlzdWJhcnJheVR5cGUgPSAoQXJyYXlUeXBlKSBzdWJh
cnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQkJCQkJaW5kZXgtLTsKLQkJCQkJfQotCQkJ
CQlpbnQgZW5kID0gcmV0cmlldmVQcm9wZXJSaWdodEJyYWNrZXRQb3NpdGlvbihyZW1haW5pbmdE
aW1lbnNpb25zLCBzdGFydCk7Ci0JCQkJCXN1YmFycmF5VHlwZS5zZXRTb3VyY2VSYW5nZShzdGFy
dCwgZW5kIC0gc3RhcnQgKyAxKTsKLQkJCQkJLy8gY3V0IHRoZSBjaGlsZCBsb29zZSBmcm9tIGl0
cyBwYXJlbnQgKHdpdGhvdXQgY3JlYXRpbmcgZ2FyYmFnZSkKLQkJCQkJc3ViYXJyYXlUeXBlLnNl
dFBhcmVudChudWxsLCBudWxsKTsKLQkJCQkJdXBkYXRlSW5uZXJQb3NpdGlvbnMoc3ViYXJyYXlU
eXBlLCByZW1haW5pbmdEaW1lbnNpb25zKTsKKwkJCQkJQXJyYXlUeXBlIHN1YmFycmF5VHlwZSA9
IGV4dHJhY3RTdWJBcnJheVR5cGUoYXJyYXlUeXBlLCByZW1haW5pbmdEaW1lbnNpb25zLCBleHRy
YURpbWVuc2lvbik7CiAJCQkJCXN3aXRjaCh0aGlzLmFzdC5hcGlMZXZlbCkgewogCQkJCQkJY2Fz
ZSBBU1QuSkxTMl9JTlRFUk5BTCA6CiAJCQkJCQkJbWV0aG9kRGVjbGFyYXRpb24uaW50ZXJuYWxT
ZXRSZXR1cm5UeXBlKHN1YmFycmF5VHlwZSk7CkBAIC01NzEzLDYgKzU3NDYsNyBAQAogCQkJCQl9
CiAJCQkJCXRoaXMuYXN0LmdldEJpbmRpbmdSZXNvbHZlcigpLnVwZGF0ZUtleSh0eXBlLCBzdWJh
cnJheVR5cGUpOwogCQkJCX0KKwkJCQljaGVja0FuZFNldE1hbGZvcm1lZCh0eXBlLCBtZXRob2RE
ZWNsYXJhdGlvbik7CiAJCQl9IGVsc2UgewogCQkJCXN3aXRjaCh0aGlzLmFzdC5hcGlMZXZlbCkg
ewogCQkJCQljYXNlIEFTVC5KTFMyX0lOVEVSTkFMIDoKQEAgLTU3NTIsMjEgKzU3ODYsMTIgQEAK
IAkJCQkJdGhpcy5hc3QuZ2V0QmluZGluZ1Jlc29sdmVyKCkudXBkYXRlS2V5KHR5cGUsIGVsZW1l
bnRUeXBlKTsKIAkJCQkJc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlvbi5zZXRUeXBlKGVsZW1lbnRU
eXBlKTsKIAkJCQl9IGVsc2UgewotCQkJCQlpbnQgc3RhcnQgPSB0eXBlLmdldFN0YXJ0UG9zaXRp
b24oKTsKLQkJCQkJQXJyYXlUeXBlIHN1YmFycmF5VHlwZSA9IGFycmF5VHlwZTsKLQkJCQkJaW50
IGluZGV4ID0gZXh0cmFEaW1lbnNpb247Ci0JCQkJCXdoaWxlIChpbmRleCA+IDApIHsKLQkJCQkJ
CXN1YmFycmF5VHlwZSA9IChBcnJheVR5cGUpIHN1YmFycmF5VHlwZS5nZXRDb21wb25lbnRUeXBl
KCk7Ci0JCQkJCQlpbmRleC0tOwotCQkJCQl9Ci0JCQkJCWludCBlbmQgPSByZXRyaWV2ZVByb3Bl
clJpZ2h0QnJhY2tldFBvc2l0aW9uKHJlbWFpbmluZ0RpbWVuc2lvbnMsIHN0YXJ0KTsKLQkJCQkJ
c3ViYXJyYXlUeXBlLnNldFNvdXJjZVJhbmdlKHN0YXJ0LCBlbmQgLSBzdGFydCArIDEpOwotCQkJ
CQkvLyBjdXQgdGhlIGNoaWxkIGxvb3NlIGZyb20gaXRzIHBhcmVudCAod2l0aG91dCBjcmVhdGlu
ZyBnYXJiYWdlKQotCQkJCQlzdWJhcnJheVR5cGUuc2V0UGFyZW50KG51bGwsIG51bGwpOwotCQkJ
CQl1cGRhdGVJbm5lclBvc2l0aW9ucyhzdWJhcnJheVR5cGUsIHJlbWFpbmluZ0RpbWVuc2lvbnMp
OwotCQkJCQlzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLnNldFR5cGUoc3ViYXJyYXlUeXBlKTsK
KwkJCQkJQXJyYXlUeXBlIHN1YmFycmF5VHlwZSA9IGV4dHJhY3RTdWJBcnJheVR5cGUoYXJyYXlU
eXBlLCByZW1haW5pbmdEaW1lbnNpb25zLCBleHRyYURpbWVuc2lvbik7CiAJCQkJCXRoaXMuYXN0
LmdldEJpbmRpbmdSZXNvbHZlcigpLnVwZGF0ZUtleSh0eXBlLCBzdWJhcnJheVR5cGUpOworCQkJ
CQlzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLnNldFR5cGUoc3ViYXJyYXlUeXBlKTsKIAkJCQl9
CisJCQkJY2hlY2tBbmRTZXRNYWxmb3JtZWQodHlwZSwgc2luZ2xlVmFyaWFibGVEZWNsYXJhdGlv
bik7CisJCQkJCQogCQkJfSBlbHNlIHsKIAkJCQlzaW5nbGVWYXJpYWJsZURlY2xhcmF0aW9uLnNl
dFR5cGUodHlwZSk7CiAJCQl9CkBAIC01Nzg4LDIxICs1ODEzLDExIEBACiAJCQkJCXRoaXMuYXN0
LmdldEJpbmRpbmdSZXNvbHZlcigpLnVwZGF0ZUtleSh0eXBlLCBlbGVtZW50VHlwZSk7CiAJCQkJ
CXZhcmlhYmxlRGVjbGFyYXRpb25FeHByZXNzaW9uLnNldFR5cGUoZWxlbWVudFR5cGUpOwogCQkJ
CX0gZWxzZSB7Ci0JCQkJCWludCBzdGFydCA9IHR5cGUuZ2V0U3RhcnRQb3NpdGlvbigpOwotCQkJ
CQlBcnJheVR5cGUgc3ViYXJyYXlUeXBlID0gYXJyYXlUeXBlOwotCQkJCQlpbnQgaW5kZXggPSBl
eHRyYURpbWVuc2lvbjsKLQkJCQkJd2hpbGUgKGluZGV4ID4gMCkgewotCQkJCQkJc3ViYXJyYXlU
eXBlID0gKEFycmF5VHlwZSkgc3ViYXJyYXlUeXBlLmdldENvbXBvbmVudFR5cGUoKTsKLQkJCQkJ
CWluZGV4LS07Ci0JCQkJCX0KLQkJCQkJaW50IGVuZCA9IHJldHJpZXZlUHJvcGVyUmlnaHRCcmFj
a2V0UG9zaXRpb24ocmVtYWluaW5nRGltZW5zaW9ucywgc3RhcnQpOwotCQkJCQlzdWJhcnJheVR5
cGUuc2V0U291cmNlUmFuZ2Uoc3RhcnQsIGVuZCAtIHN0YXJ0ICsgMSk7Ci0JCQkJCS8vIGN1dCB0
aGUgY2hpbGQgbG9vc2UgZnJvbSBpdHMgcGFyZW50ICh3aXRob3V0IGNyZWF0aW5nIGdhcmJhZ2Up
Ci0JCQkJCXN1YmFycmF5VHlwZS5zZXRQYXJlbnQobnVsbCwgbnVsbCk7Ci0JCQkJCXVwZGF0ZUlu
bmVyUG9zaXRpb25zKHN1YmFycmF5VHlwZSwgcmVtYWluaW5nRGltZW5zaW9ucyk7CisJCQkJCUFy
cmF5VHlwZSBzdWJhcnJheVR5cGUgPSBleHRyYWN0U3ViQXJyYXlUeXBlKGFycmF5VHlwZSwgcmVt
YWluaW5nRGltZW5zaW9ucywgZXh0cmFEaW1lbnNpb24pOwogCQkJCQl2YXJpYWJsZURlY2xhcmF0
aW9uRXhwcmVzc2lvbi5zZXRUeXBlKHN1YmFycmF5VHlwZSk7CiAJCQkJCXRoaXMuYXN0LmdldEJp
bmRpbmdSZXNvbHZlcigpLnVwZGF0ZUtleSh0eXBlLCBzdWJhcnJheVR5cGUpOwogCQkJCX0KKwkJ
CQljaGVja0FuZFNldE1hbGZvcm1lZCh0eXBlLCB2YXJpYWJsZURlY2xhcmF0aW9uRXhwcmVzc2lv
bik7CiAJCQl9IGVsc2UgewogCQkJCXZhcmlhYmxlRGVjbGFyYXRpb25FeHByZXNzaW9uLnNldFR5
cGUodHlwZSk7CiAJCQl9CkBAIC01ODI0LDIxICs1ODM5LDExIEBACiAJCQkJCXRoaXMuYXN0Lmdl
dEJpbmRpbmdSZXNvbHZlcigpLnVwZGF0ZUtleSh0eXBlLCBlbGVtZW50VHlwZSk7CiAJCQkJCXZh
cmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQuc2V0VHlwZShlbGVtZW50VHlwZSk7CiAJCQkJfSBl
bHNlIHsKLQkJCQkJaW50IHN0YXJ0ID0gdHlwZS5nZXRTdGFydFBvc2l0aW9uKCk7Ci0JCQkJCUFy
cmF5VHlwZSBzdWJhcnJheVR5cGUgPSBhcnJheVR5cGU7Ci0JCQkJCWludCBpbmRleCA9IGV4dHJh
RGltZW5zaW9uOwotCQkJCQl3aGlsZSAoaW5kZXggPiAwKSB7Ci0JCQkJCQlzdWJhcnJheVR5cGUg
PSAoQXJyYXlUeXBlKSBzdWJhcnJheVR5cGUuZ2V0Q29tcG9uZW50VHlwZSgpOwotCQkJCQkJaW5k
ZXgtLTsKLQkJCQkJfQotCQkJCQlpbnQgZW5kID0gcmV0cmlldmVQcm9wZXJSaWdodEJyYWNrZXRQ
b3NpdGlvbihyZW1haW5pbmdEaW1lbnNpb25zLCBzdGFydCk7Ci0JCQkJCXN1YmFycmF5VHlwZS5z
ZXRTb3VyY2VSYW5nZShzdGFydCwgZW5kIC0gc3RhcnQgKyAxKTsKLQkJCQkJLy8gY3V0IHRoZSBj
aGlsZCBsb29zZSBmcm9tIGl0cyBwYXJlbnQgKHdpdGhvdXQgY3JlYXRpbmcgZ2FyYmFnZSkKLQkJ
CQkJc3ViYXJyYXlUeXBlLnNldFBhcmVudChudWxsLCBudWxsKTsKLQkJCQkJdXBkYXRlSW5uZXJQ
b3NpdGlvbnMoc3ViYXJyYXlUeXBlLCByZW1haW5pbmdEaW1lbnNpb25zKTsKKwkJCQkJQXJyYXlU
eXBlIHN1YmFycmF5VHlwZSA9IGV4dHJhY3RTdWJBcnJheVR5cGUoYXJyYXlUeXBlLCByZW1haW5p
bmdEaW1lbnNpb25zLCBleHRyYURpbWVuc2lvbik7CiAJCQkJCXZhcmlhYmxlRGVjbGFyYXRpb25T
dGF0ZW1lbnQuc2V0VHlwZShzdWJhcnJheVR5cGUpOwogCQkJCQl0aGlzLmFzdC5nZXRCaW5kaW5n
UmVzb2x2ZXIoKS51cGRhdGVLZXkodHlwZSwgc3ViYXJyYXlUeXBlKTsKIAkJCQl9CisJCQkJY2hl
Y2tBbmRTZXRNYWxmb3JtZWQodHlwZSwgdmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCk7CiAJ
CQl9IGVsc2UgewogCQkJCXZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQuc2V0VHlwZSh0eXBl
KTsKIAkJCX0KQEAgLTU4NTEsMTMgKzU4NTYsMTMgQEAKIAkJaWYgKGRpbWVuc2lvbnMgPiAxKSB7
CiAJCQkvLyBuZWVkIHRvIHNldCBwb3NpdGlvbnMgZm9yIGludGVybWVkaWF0ZSBhcnJheSB0eXBl
IHNlZSA0MjgzOQogCQkJaW50IHN0YXJ0ID0gdHlwZS5nZXRTdGFydFBvc2l0aW9uKCk7Ci0JCQlU
eXBlIGN1cnJlbnRDb21wb25lbnRUeXBlID0gKChBcnJheVR5cGUpIHR5cGUpLmdldENvbXBvbmVu
dFR5cGUoKTsKKwkJCVR5cGUgY3VycmVudENvbXBvbmVudFR5cGUgPSBjb21wb25lbnRUeXBlKCgo
QXJyYXlUeXBlKSB0eXBlKSk7CiAJCQlpbnQgc2VhcmNoZWREaW1lbnNpb24gPSBkaW1lbnNpb25z
IC0gMTsKIAkJCWludCByaWdodEJyYWNrZXRFbmRQb3NpdGlvbiA9IHN0YXJ0OwogCQkJd2hpbGUg
KGN1cnJlbnRDb21wb25lbnRUeXBlLmlzQXJyYXlUeXBlKCkpIHsKIAkJCQlyaWdodEJyYWNrZXRF
bmRQb3NpdGlvbiA9IHJldHJpZXZlUHJvcGVyUmlnaHRCcmFja2V0UG9zaXRpb24oc2VhcmNoZWRE
aW1lbnNpb24sIHN0YXJ0KTsKIAkJCQljdXJyZW50Q29tcG9uZW50VHlwZS5zZXRTb3VyY2VSYW5n
ZShzdGFydCwgcmlnaHRCcmFja2V0RW5kUG9zaXRpb24gLSBzdGFydCArIDEpOwotCQkJCWN1cnJl
bnRDb21wb25lbnRUeXBlID0gKChBcnJheVR5cGUpIGN1cnJlbnRDb21wb25lbnRUeXBlKS5nZXRD
b21wb25lbnRUeXBlKCk7CisJCQkJY3VycmVudENvbXBvbmVudFR5cGUgPSBjb21wb25lbnRUeXBl
KCgoQXJyYXlUeXBlKSBjdXJyZW50Q29tcG9uZW50VHlwZSkpOwogCQkJCXNlYXJjaGVkRGltZW5z
aW9uLS07CiAJCQl9CiAJCX0KZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9v
cmcvZWNsaXBzZS9qZHQvY29yZS9kb20vQVNUTWF0Y2hlci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0
LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RNYXRjaGVyLmphdmEKaW5kZXgg
ZjMzYzVlMi4uYjA0MzM2NSAxMDA2NDQKLS0tIGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29y
Zy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RNYXRjaGVyLmphdmEKKysrIGIvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BU1RNYXRjaGVyLmphdmEKQEAg
LTE2NCw2ICsxNjQsMTMgQEAKIAl9CiAKIAkvKioKKwkgKiBAZGVwcmVjYXRlZAorCSAqLworCXBy
aXZhdGUgVHlwZSBjb21wb25lbnRUeXBlKEFycmF5VHlwZSBhcnJheSkgeworCQlyZXR1cm4gYXJy
YXkuZ2V0Q29tcG9uZW50VHlwZSgpOworCX0KKworCS8qKgogCSAqIFJldHVybnMgd2hldGhlciB0
aGUgZ2l2ZW4gbm9kZSBhbmQgdGhlIG90aGVyIG9iamVjdCBtYXRjaC4KIAkgKiA8cD4KIAkgKiBU
aGUgZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiBwcm92aWRlZCBieSB0aGlzIGNsYXNzIHRlc3RzIHdo
ZXRoZXIgdGhlCkBAIC0zMzEsOCArMzM4LDExIEBACiAJCX0KIAkJQXJyYXlUeXBlIG8gPSAoQXJy
YXlUeXBlKSBvdGhlcjsKIAkJaW50IGxldmVsID0gbm9kZS5nZXRBU1QoKS5hcGlMZXZlbDsKLQkJ
cmV0dXJuIHNhZmVTdWJ0cmVlTWF0Y2gobm9kZS5nZXRDb21wb25lbnRUeXBlKCksIG8uZ2V0Q29t
cG9uZW50VHlwZSgpKQotCQkJCSYmIChsZXZlbCA+PSBBU1QuSkxTOCA/IHNhZmVTdWJ0cmVlTGlz
dE1hdGNoKG5vZGUuYW5ub3RhdGlvbnMoKSwgby5hbm5vdGF0aW9ucygpKSA6IHRydWUpOworCQlp
ZiAobGV2ZWwgPCBBU1QuSkxTOCkgeworCQkJcmV0dXJuIHNhZmVTdWJ0cmVlTWF0Y2goY29tcG9u
ZW50VHlwZShub2RlKSwgY29tcG9uZW50VHlwZShvKSk7CisJCX0KKwkJcmV0dXJuIHNhZmVTdWJ0
cmVlTWF0Y2gobm9kZS5nZXRFbGVtZW50VHlwZSgpLCBvLmdldEVsZW1lbnRUeXBlKCkpCisJCQkJ
JiYgc2FmZVN1YnRyZWVMaXN0TWF0Y2gobm9kZS5kaW1lbnNpb25zKCksIG8uZGltZW5zaW9ucygp
KTsKIAl9CiAKIAkvKioKZGlmZiAtLWdpdCBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcv
ZWNsaXBzZS9qZHQvY29yZS9kb20vQXJyYXlUeXBlLmphdmEgYi9vcmcuZWNsaXBzZS5qZHQuY29y
ZS9kb20vb3JnL2VjbGlwc2UvamR0L2NvcmUvZG9tL0FycmF5VHlwZS5qYXZhCmluZGV4IGNkMWRk
ODMuLmMzZTNmNzUgMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNs
aXBzZS9qZHQvY29yZS9kb20vQXJyYXlUeXBlLmphdmEKKysrIGIvb3JnLmVjbGlwc2UuamR0LmNv
cmUvZG9tL29yZy9lY2xpcHNlL2pkdC9jb3JlL2RvbS9BcnJheVR5cGUuamF2YQpAQCAtMjEsMzIg
KzIxLDQxIEBACiAvKioKICAqIFR5cGUgbm9kZSBmb3IgYW4gYXJyYXkgdHlwZS4KICAqIDxwPgot
ICogQXJyYXkgdHlwZXMgYXJlIGV4cHJlc3NlZCBpbiBhIHJlY3Vyc2l2ZSBtYW5uZXIsIG9uZSBk
aW1lbnNpb24gYXQgYSB0aW1lLgorICogQXJyYXkgdHlwZXMgYXJlIGV4cHJlc3NlZCBpbiBhIHJl
Y3Vyc2l2ZSBtYW5uZXIsIG9uZSBkaW1lbnNpb24gYXQgYSB0aW1lLiBGcm9tIEpMUzggb253YXJk
cywKKyAqIGluc3RlYWQgb2YgdGhpcyByZWN1cnNpdmUgbWFubmVyLCBhcnJheXMgYXJlIHJlcHJl
c2VudGVkIGJ5IGEgYmFzZSBlbGVtZW50IHR5cGUgKHdoaWNoIGNhbm5vdAorICogYmUgYW4gQXJy
YXkgdHlwZSkgYW5kIGEgbGlzdCBvZiBkaW1lbnNpb25zIGVhY2ggb2Ygd2hpY2ggbWF5IGhhdmUg
YSBsaXN0IG9mIGFubm90YXRpb25zLgogICogPC9wPgogICogPHByZT4KLSAqIEFycmF5VHlwZToK
LSAqICAgIFR5cGUgeyBBbm5vdGF0aW9uIH0gPGI+J1snPC9iPiA8Yj4nXSc8L2I+CisgKiBBcnJh
eVR5cGU6IAorICogICAgVHlwZSBFeHRyYURpbWVuc2lvbiB7IEV4dHJhRGltZW5zaW9uIH0KICAq
IDwvcHJlPgogICoKICAqIEBzaW5jZSAyLjAKICAqIEBub2luc3RhbnRpYXRlIFRoaXMgY2xhc3Mg
aXMgbm90IGludGVuZGVkIHRvIGJlIGluc3RhbnRpYXRlZCBieSBjbGllbnRzLgogICovCi1wdWJs
aWMgY2xhc3MgQXJyYXlUeXBlIGV4dGVuZHMgQW5ub3RhdGFibGVUeXBlIHsKK3B1YmxpYyBjbGFz
cyBBcnJheVR5cGUgZXh0ZW5kcyBUeXBlIHsKIAogCS8qKgogCSAqIFRoZSAiY29tcG9uZW50VHlw
ZSIgc3RydWN0dXJhbCBwcm9wZXJ0eSBvZiB0aGlzIG5vZGUgdHlwZSAoY2hpbGQgdHlwZToge0Bs
aW5rIFR5cGV9KS4KKwkgKiBOb3Qgc3VwcG9ydGVkIGZyb20gSkxTOCBvbndhcmRzLgogCSAqIEBz
aW5jZSAzLjAKIAkgKi8KIAlwdWJsaWMgc3RhdGljIGZpbmFsIENoaWxkUHJvcGVydHlEZXNjcmlw
dG9yIENPTVBPTkVOVF9UWVBFX1BST1BFUlRZID0KIAkJbmV3IENoaWxkUHJvcGVydHlEZXNjcmlw
dG9yKEFycmF5VHlwZS5jbGFzcywgImNvbXBvbmVudFR5cGUiLCBUeXBlLmNsYXNzLCBNQU5EQVRP
UlksIENZQ0xFX1JJU0spOyAvLyROT04tTkxTLTEkCiAKIAkvKioKLQkgKiBUaGUgImFubm90YXRp
b25zIiBzdHJ1Y3R1cmFsIHByb3BlcnR5IG9mIHRoaXMgbm9kZSB0eXBlIChlbGVtZW50IHR5cGU6
IHtAbGluayBBbm5vdGF0aW9ufSkuCisJICogVGhlICJlbGVtZW50VHlwZSIgc3RydWN0dXJhbCBw
cm9wZXJ0eSBvZiB0aGlzIG5vZGUgdHlwZSAoY2hpbGQgdHlwZToge0BsaW5rIFR5cGV9KSAoYWRk
ZWQgaW4gSkxTOCBBUEkpLgogCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAogCSAqLwotCXB1Ymxp
YyBzdGF0aWMgZmluYWwgQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yIEFOTk9UQVRJT05TX1BS
T1BFUlRZID0KLQkJCWludGVybmFsQW5ub3RhdGlvbnNQcm9wZXJ0eUZhY3RvcnkoQXJyYXlUeXBl
LmNsYXNzKTsKKwlwdWJsaWMgc3RhdGljIGZpbmFsIENoaWxkUHJvcGVydHlEZXNjcmlwdG9yIEVM
RU1FTlRfVFlQRV9QUk9QRVJUWSA9CisJCQluZXcgQ2hpbGRQcm9wZXJ0eURlc2NyaXB0b3IoQXJy
YXlUeXBlLmNsYXNzLCAiZWxlbWVudFR5cGUiLCBUeXBlLmNsYXNzLCBNQU5EQVRPUlksIENZQ0xF
X1JJU0spOyAvLyROT04tTkxTLTEkCQogCQorCS8qKgorCSAqIFRoZSAiZGltZW5zaW9ucyIgc3Ry
dWN0dXJhbCBwcm9wZXJ0eSBvZiB0aGlzIG5vZGUgdHlwZSAoZWxlbWVudCB0eXBlOiB7QGxpbmsg
RXh0cmFEaW1lbnNpb259KSAoYWRkZWQgaW4gSkxTOCBBUEkpLgorCSAqIEBzaW5jZSAzLjkgQkVU
QV9KQVZBOAorCSAqLworCXB1YmxpYyBzdGF0aWMgZmluYWwgQ2hpbGRMaXN0UHJvcGVydHlEZXNj
cmlwdG9yIERJTUVOU0lPTlNfUFJPUEVSVFkgPQorCQkJbmV3IENoaWxkTGlzdFByb3BlcnR5RGVz
Y3JpcHRvcihBcnJheVR5cGUuY2xhc3MsICJkaW1lbnNpb25zIiwgRXh0cmFEaW1lbnNpb24uY2xh
c3MsIENZQ0xFX1JJU0spOyAvLyROT04tTkxTLTEkCQogCS8qKgogCSAqIEEgbGlzdCBvZiBwcm9w
ZXJ0eSBkZXNjcmlwdG9ycyAoZWxlbWVudCB0eXBlOgogCSAqIHtAbGluayBTdHJ1Y3R1cmFsUHJv
cGVydHlEZXNjcmlwdG9yfSksCkBAIC02OSw4ICs3OCw4IEBACiAKIAkJcHJvcGVydHlMaXN0ID0g
bmV3IEFycmF5TGlzdCgzKTsKIAkJY3JlYXRlUHJvcGVydHlMaXN0KEFycmF5VHlwZS5jbGFzcywg
cHJvcGVydHlMaXN0KTsKLQkJYWRkUHJvcGVydHkoQ09NUE9ORU5UX1RZUEVfUFJPUEVSVFksIHBy
b3BlcnR5TGlzdCk7Ci0JCWFkZFByb3BlcnR5KEFOTk9UQVRJT05TX1BST1BFUlRZLCBwcm9wZXJ0
eUxpc3QpOworCQlhZGRQcm9wZXJ0eShFTEVNRU5UX1RZUEVfUFJPUEVSVFksIHByb3BlcnR5TGlz
dCk7CisJCWFkZFByb3BlcnR5KERJTUVOU0lPTlNfUFJPUEVSVFksIHByb3BlcnR5TGlzdCk7CiAJ
CVBST1BFUlRZX0RFU0NSSVBUT1JTXzhfMCA9IHJlYXBQcm9wZXJ0eUxpc3QocHJvcGVydHlMaXN0
KTsKIAl9CiAKQEAgLTk4LDkgKzEwNywxOSBAQAogCiAJLyoqCiAJICogVGhlIGNvbXBvbmVudCB0
eXBlOyBsYXppbHkgaW5pdGlhbGl6ZWQ7IGRlZmF1bHRzIHRvIGEgc2ltcGxlIHR5cGUgd2l0aAot
CSAqIGFuIHVuc3BlY2lmaWVkLCBidXQgbGVnYWwsIG5hbWUuCisJICogYW4gdW5zcGVjaWZpZWQs
IGJ1dCBsZWdhbCwgbmFtZS4gcmV1c2VkIGZvciBlbGVtZW50IHR5cGUgZnJvbSBKTFM4IG9ud2Fy
ZHMuCiAJICovCiAJcHJpdmF0ZSBUeXBlIGNvbXBvbmVudFR5cGUgPSBudWxsOworCisJLyoqCisJ
ICogTGlzdCBvZiBleHRyYSBkaW1lbnNpb25zIHRoaXMgbm9kZSBoYXMgd2l0aCBvcHRpb25hbCBh
bm5vdGF0aW9ucworCSAqIChlbGVtZW50IHR5cGU6IHtAbGluayBFeHRyYURpbWVuc2lvbn0pLgor
CSAqIE51bGwgYmVmb3JlIEpMUzguIEFkZGVkIGluIEpMUzg7IGRlZmF1bHRzIHRvIGEgbGlzdCB3
aXRoIG9uZSBlbGVtZW50CisJICogKHNlZSBjb25zdHJ1Y3RvcikuCisJICogCisJICogQHNpbmNl
IDMuOSBCRVRBX0pBVkE4CisJICovCisJcHJpdmF0ZSBBU1ROb2RlLk5vZGVMaXN0IGRpbWVuc2lv
bnMgPSBudWxsOwogCiAJLyoqCiAJICogQ3JlYXRlcyBhIG5ldyB1bnBhcmVudGVkIG5vZGUgZm9y
IGFuIGFycmF5IHR5cGUgb3duZWQgYnkgdGhlIGdpdmVuIEFTVC4KQEAgLTExMywxNCArMTMyLDMx
IEBACiAJICovCiAJQXJyYXlUeXBlKEFTVCBhc3QpIHsKIAkJc3VwZXIoYXN0KTsKKwkJaWYgKGFz
dC5hcGlMZXZlbCA+PSBBU1QuSkxTOCkgeworCQkJdGhpcy5kaW1lbnNpb25zID0gbmV3IEFTVE5v
ZGUuTm9kZUxpc3QoRElNRU5TSU9OU19QUk9QRVJUWSk7CisJCQkvLyBzaW5nbGUgZGltZW5zaW9u
IGFycmF5IGlzIHRoZSBkZWZhdWx0CisJCQl0aGlzLmRpbWVuc2lvbnMoKS5hZGQodGhpcy5hc3Qu
bmV3RXh0cmFEaW1lbnNpb24oKSk7CisJCX0KIAl9CiAKLQkvKiAob21pdCBqYXZhZG9jIGZvciB0
aGlzIG1ldGhvZCkKLQkgKiBNZXRob2QgZGVjbGFyZWQgb24gQW5ub3RhdGFibGVUeXBlLgotCSAq
IEBzaW5jZSAzLjkgQkVUQV9KQVZBOAotCSAqLwotCWZpbmFsIENoaWxkTGlzdFByb3BlcnR5RGVz
Y3JpcHRvciBpbnRlcm5hbEFubm90YXRpb25zUHJvcGVydHkoKSB7Ci0JCXJldHVybiBBTk5PVEFU
SU9OU19QUk9QRVJUWTsKKwkvKioKKwkqIENyZWF0ZXMgYSBuZXcgdW5wYXJlbnRlZCBub2RlIGZv
ciBhbiBhcnJheSB0eXBlIG93bmVkIGJ5IHRoZSBnaXZlbiBBU1QuCisJKiA8cD4KKwkqIE4uQi4g
VGhpcyBjb25zdHJ1Y3RvciBpcyBwcml2YXRlLgorCSogPC9wPgorCSoKKwkqIEBwYXJhbSBhc3Qg
dGhlIEFTVCB0aGF0IGlzIHRvIG93biB0aGlzIG5vZGUKKwkqIEBwYXJhbSBkaW1lbnNpb25zIG5v
IG9mIGRpbWVuc2lvbnMgLSBjYW4gYmUgemVybworCSoKKwkqIEBzaW5jZSAzLjkgQkVUQV9KQVZB
OAorCSovCisJcHJpdmF0ZSBBcnJheVR5cGUoQVNUIGFzdCwgaW50IGRpbWVuc2lvbnMpIHsKKwkJ
c3VwZXIoYXN0KTsKKwkJdW5zdXBwb3J0ZWRJbjJfM180KCk7CisJCXRoaXMuZGltZW5zaW9ucyA9
IG5ldyBBU1ROb2RlLk5vZGVMaXN0KERJTUVOU0lPTlNfUFJPUEVSVFkpOworCQlmb3IgKGludCBp
ID0gMDsgaSA8IGRpbWVuc2lvbnM7ICsraSkgeworCQkJdGhpcy5kaW1lbnNpb25zKCkuYWRkKHRo
aXMuYXN0Lm5ld0V4dHJhRGltZW5zaW9uKCkpOworCQl9CiAJfQogCiAJLyogKG9taXQgamF2YWRv
YyBmb3IgdGhpcyBtZXRob2QpCkBAIC0xMzQsOCArMTcwLDggQEAKIAkgKiBNZXRob2QgZGVjbGFy
ZWQgb24gQVNUTm9kZS4KIAkgKi8KIAlmaW5hbCBMaXN0IGludGVybmFsR2V0Q2hpbGRMaXN0UHJv
cGVydHkoQ2hpbGRMaXN0UHJvcGVydHlEZXNjcmlwdG9yIHByb3BlcnR5KSB7Ci0JCWlmIChwcm9w
ZXJ0eSA9PSBBTk5PVEFUSU9OU19QUk9QRVJUWSkgewotCQkJcmV0dXJuIGFubm90YXRpb25zKCk7
CisJCWlmIChwcm9wZXJ0eSA9PSBESU1FTlNJT05TX1BST1BFUlRZKSB7CisJCQlyZXR1cm4gZGlt
ZW5zaW9ucygpOwogCQl9CiAJCS8vIGFsbG93IGRlZmF1bHQgaW1wbGVtZW50YXRpb24gdG8gZmxh
ZyB0aGUgZXJyb3IKIAkJcmV0dXJuIHN1cGVyLmludGVybmFsR2V0Q2hpbGRMaXN0UHJvcGVydHko
cHJvcGVydHkpOwpAQCAtMTUwLDYgKzE4NiwxMyBAQAogCQkJCXJldHVybiBnZXRDb21wb25lbnRU
eXBlKCk7CiAJCQl9IGVsc2UgewogCQkJCXNldENvbXBvbmVudFR5cGUoKFR5cGUpIGNoaWxkKTsK
KwkJCQlyZXR1cm4gbnVsbDsKKwkJCX0KKwkJfSBlbHNlIGlmIChwcm9wZXJ0eSA9PSBFTEVNRU5U
X1RZUEVfUFJPUEVSVFkpIHsKKwkJCWlmIChnZXQpIHsKKwkJCQlyZXR1cm4gZ2V0RWxlbWVudFR5
cGUoKTsKKwkJCX0gZWxzZSB7CisJCQkJc2V0RWxlbWVudFR5cGUoKFR5cGUpIGNoaWxkKTsKIAkJ
CQlyZXR1cm4gbnVsbDsKIAkJCX0KIAkJfQpAQCAtMTY4LDEzICsyMTEsMTcgQEAKIAkgKiBNZXRo
b2QgZGVjbGFyZWQgb24gQVNUTm9kZS4KIAkgKi8KIAlBU1ROb2RlIGNsb25lMChBU1QgdGFyZ2V0
KSB7Ci0JCUFycmF5VHlwZSByZXN1bHQgPSBuZXcgQXJyYXlUeXBlKHRhcmdldCk7Ci0JCXJlc3Vs
dC5zZXRTb3VyY2VSYW5nZShnZXRTdGFydFBvc2l0aW9uKCksIGdldExlbmd0aCgpKTsKLQkJcmVz
dWx0LnNldENvbXBvbmVudFR5cGUoKFR5cGUpIGdldENvbXBvbmVudFR5cGUoKS5jbG9uZSh0YXJn
ZXQpKTsKLQkJaWYgKHRoaXMuYXN0LmFwaUxldmVsID49IEFTVC5KTFM4KSB7Ci0JCQlyZXN1bHQu
YW5ub3RhdGlvbnMoKS5hZGRBbGwoCi0JCQkJCUFTVE5vZGUuY29weVN1YnRyZWVzKHRhcmdldCwg
YW5ub3RhdGlvbnMoKSkpOworCQlBcnJheVR5cGUgcmVzdWx0OworCQlpZiAodGhpcy5hc3QuYXBp
TGV2ZWwgPCBBU1QuSkxTOCkgeworCQkJcmVzdWx0ID0gbmV3IEFycmF5VHlwZSh0YXJnZXQpOwor
CQkJcmVzdWx0LnNldENvbXBvbmVudFR5cGUoKFR5cGUpIGdldENvbXBvbmVudFR5cGUoKS5jbG9u
ZSh0YXJnZXQpKTsJCQkKKwkJfSBlbHNlIHsKKwkJCXJlc3VsdCA9IG5ldyBBcnJheVR5cGUodGFy
Z2V0LCAwKTsKKwkJCXJlc3VsdC5zZXRFbGVtZW50VHlwZSgoVHlwZSkgZ2V0RWxlbWVudFR5cGUo
KS5jbG9uZSh0YXJnZXQpKTsKKwkJCXJlc3VsdC5kaW1lbnNpb25zKCkuYWRkQWxsKAorCQkJCQlB
U1ROb2RlLmNvcHlTdWJ0cmVlcyh0YXJnZXQsIGRpbWVuc2lvbnMoKSkpOwogCQl9CisJCXJlc3Vs
dC5zZXRTb3VyY2VSYW5nZShnZXRTdGFydFBvc2l0aW9uKCksIGdldExlbmd0aCgpKTsKIAkJcmV0
dXJuIHJlc3VsdDsKIAl9CiAKQEAgLTE5Myw5ICsyNDAsMTEgQEAKIAkJYm9vbGVhbiB2aXNpdENo
aWxkcmVuID0gdmlzaXRvci52aXNpdCh0aGlzKTsKIAkJaWYgKHZpc2l0Q2hpbGRyZW4pIHsKIAkJ
CS8vIHZpc2l0IGNoaWxkcmVuIGluIG5vcm1hbCBsZWZ0IHRvIHJpZ2h0IHJlYWRpbmcgb3JkZXIK
LQkJCWFjY2VwdENoaWxkKHZpc2l0b3IsIGdldENvbXBvbmVudFR5cGUoKSk7Ci0JCQlpZiAodGhp
cy5hc3QuYXBpTGV2ZWwgPj0gQVNULkpMUzgpIHsKLQkJCQlhY2NlcHRDaGlsZHJlbih2aXNpdG9y
LCB0aGlzLmFubm90YXRpb25zKTsKKwkJCWlmICh0aGlzLmFzdC5hcGlMZXZlbCA8IEFTVC5KTFM4
KSB7CisJCQkJYWNjZXB0Q2hpbGQodmlzaXRvciwgZ2V0Q29tcG9uZW50VHlwZSgpKTsJCQkJCisJ
CQl9IGVsc2UgeworCQkJCWFjY2VwdENoaWxkKHZpc2l0b3IsIGdldEVsZW1lbnRUeXBlKCkpOwor
CQkJCWFjY2VwdENoaWxkcmVuKHZpc2l0b3IsIHRoaXMuZGltZW5zaW9ucyk7CiAJCQl9CiAJCX0K
IAkJdmlzaXRvci5lbmRWaXNpdCh0aGlzKTsKQEAgLTIwNiwxNSArMjU1LDIxIEBACiAJICogbWF5
IGJlIGFub3RoZXIgYXJyYXkgdHlwZS4KIAkgKgogCSAqIEByZXR1cm4gdGhlIGNvbXBvbmVudCB0
eXBlIG5vZGUKKwkgKiBAZGVwcmVjYXRlZCBmcm9tIEpMUzggYW5kIGxhdGVyLCB0aGUgcmVjdXJz
aXZlIHN0cnVjdHVyZSBpcyBub3QgdmFsaWQKIAkgKi8KIAlwdWJsaWMgVHlwZSBnZXRDb21wb25l
bnRUeXBlKCkgeworCQlzdXBwb3J0ZWRPbmx5SW4yXzNfNCgpOworCQlyZXR1cm4gaW50ZXJuYWxH
ZXRDb21wb25lbnRUeXBlKENPTVBPTkVOVF9UWVBFX1BST1BFUlRZKTsKKwl9CisKKwlwcml2YXRl
IFR5cGUgaW50ZXJuYWxHZXRDb21wb25lbnRUeXBlKENoaWxkUHJvcGVydHlEZXNjcmlwdG9yIHBy
b3BlcnR5KSB7CiAJCWlmICh0aGlzLmNvbXBvbmVudFR5cGUgPT0gbnVsbCkgewogCQkJLy8gbGF6
eSBpbml0IG11c3QgYmUgdGhyZWFkLXNhZmUgZm9yIHJlYWRlcnMKIAkJCXN5bmNocm9uaXplZCAo
dGhpcykgewogCQkJCWlmICh0aGlzLmNvbXBvbmVudFR5cGUgPT0gbnVsbCkgewogCQkJCQlwcmVM
YXp5SW5pdCgpOwogCQkJCQl0aGlzLmNvbXBvbmVudFR5cGUgPSBuZXcgU2ltcGxlVHlwZSh0aGlz
LmFzdCk7Ci0JCQkJCXBvc3RMYXp5SW5pdCh0aGlzLmNvbXBvbmVudFR5cGUsIENPTVBPTkVOVF9U
WVBFX1BST1BFUlRZKTsKKwkJCQkJcG9zdExhenlJbml0KHRoaXMuY29tcG9uZW50VHlwZSwgcHJv
cGVydHkpOwogCQkJCX0KIAkJCX0KIAkJfQpAQCAtMjMyLDE1ICsyODcsMjEgQEAKIAkgKiA8bGk+
dGhlIG5vZGUgYWxyZWFkeSBoYXMgYSBwYXJlbnQ8L2xpPgogCSAqIDxsaT5hIGN5Y2xlIGluIHdv
dWxkIGJlIGNyZWF0ZWQ8L2xpPgogCSAqIDwvdWw+CisJICogQGRlcHJlY2F0ZWQgZnJvbSBKTFM4
IGFuZCBsYXRlciwgdGhlIHJlY3Vyc2l2ZSBzdHJ1Y3R1cmUgaXMgbm90IHZhbGlkCiAJICovCiAJ
cHVibGljIHZvaWQgc2V0Q29tcG9uZW50VHlwZShUeXBlIGNvbXBvbmVudFR5cGUpIHsKKwkJc3Vw
cG9ydGVkT25seUluMl8zXzQoKTsKIAkJaWYgKGNvbXBvbmVudFR5cGUgPT0gbnVsbCkgewogCQkJ
dGhyb3cgbmV3IElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbigpOwogCQl9CisJCWludGVybmFsU2V0
Q29tcG9uZW50VHlwZShjb21wb25lbnRUeXBlLCBDT01QT05FTlRfVFlQRV9QUk9QRVJUWSk7CisJ
fQorCisJcHJpdmF0ZSB2b2lkIGludGVybmFsU2V0Q29tcG9uZW50VHlwZShUeXBlIHR5cGUsIENo
aWxkUHJvcGVydHlEZXNjcmlwdG9yIHByb3BlcnR5KSB7CiAJCUFTVE5vZGUgb2xkQ2hpbGQgPSB0
aGlzLmNvbXBvbmVudFR5cGU7Ci0JCXByZVJlcGxhY2VDaGlsZChvbGRDaGlsZCwgY29tcG9uZW50
VHlwZSwgQ09NUE9ORU5UX1RZUEVfUFJPUEVSVFkpOwotCQl0aGlzLmNvbXBvbmVudFR5cGUgPSBj
b21wb25lbnRUeXBlOwotCQlwb3N0UmVwbGFjZUNoaWxkKG9sZENoaWxkLCBjb21wb25lbnRUeXBl
LCBDT01QT05FTlRfVFlQRV9QUk9QRVJUWSk7CisJCXByZVJlcGxhY2VDaGlsZChvbGRDaGlsZCwg
dHlwZSwgcHJvcGVydHkpOworCQl0aGlzLmNvbXBvbmVudFR5cGUgPSB0eXBlOworCQlwb3N0UmVw
bGFjZUNoaWxkKG9sZENoaWxkLCB0eXBlLCBwcm9wZXJ0eSk7CiAJfQogCiAJLyoqCkBAIC0yNDgs
MzYgKzMwOSw5OCBAQAogCSAqIG5ldmVyIGFuIGFycmF5IHR5cGUuCiAJICogPHA+CiAJICogVGhp
cyBpcyBhIGNvbnZlbmllbmNlIG1ldGhvZCB0aGF0IGRlc2NlbmRzIGEgY2hhaW4gb2YgbmVzdGVk
IGFycmF5IHR5cGVzCi0JICogdW50aWwgaXQgcmVhY2hlcyBhIG5vbi1hcnJheSB0eXBlLgorCSAq
IHVudGlsIGl0IHJlYWNoZXMgYSBub24tYXJyYXkgdHlwZSB1bnRpbCBKTFM0LiBGcm9tIEpMUzgg
YW5kIGxhdGVyLCB0aGlzIHJldHVybnMgdGhlCisJICogZWxlbWVudCB0eXBlIGRpcmVjdGx5Lgog
CSAqIDwvcD4KIAkgKgotCSAqIEByZXR1cm4gdGhlIGNvbXBvbmVudCB0eXBlIG5vZGUKKwkgKiBA
cmV0dXJuIHRoZSBlbGVtZW50IHR5cGUgbm9kZQogCSAqLwogCXB1YmxpYyBUeXBlIGdldEVsZW1l
bnRUeXBlKCkgewotCQlUeXBlIHQgPSBnZXRDb21wb25lbnRUeXBlKCk7Ci0JCXdoaWxlICh0Lmlz
QXJyYXlUeXBlKCkpIHsKLQkJCXQgPSAoKEFycmF5VHlwZSkgdCkuZ2V0Q29tcG9uZW50VHlwZSgp
OworCQlpZiAodGhpcy5hc3QuYXBpTGV2ZWwoKSA8IEFTVC5KTFM4KSB7CisJCQlUeXBlIHQgPSBn
ZXRDb21wb25lbnRUeXBlKCk7CisJCQl3aGlsZSAodC5pc0FycmF5VHlwZSgpKSB7CisJCQkJdCA9
ICgoQXJyYXlUeXBlKSB0KS5nZXRDb21wb25lbnRUeXBlKCk7CisJCQl9CisJCQlyZXR1cm4gdDsK
IAkJfQotCQlyZXR1cm4gdDsKKwkJcmV0dXJuIGludGVybmFsR2V0Q29tcG9uZW50VHlwZShFTEVN
RU5UX1RZUEVfUFJPUEVSVFkpOworCX0KKworCS8qKgorCSAqIFNldHMgdGhlIGVsZW1lbnQgdHlw
ZSBvZiB0aGUgYXJyYXkuCisJICoKKwkgKiBAcGFyYW0gdHlwZSB0aGUgbmV3IHR5cGUKKwkgKiBA
ZXhjZXB0aW9uIElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbiBpZjoKKwkgKiA8dWw+CisJICogPGxp
PnRoZSBub2RlIGJlbG9uZ3MgdG8gYSBkaWZmZXJlbnQgQVNUPC9saT4KKwkgKiA8bGk+dGhlIG5v
ZGUgYWxyZWFkeSBoYXMgYSBwYXJlbnQ8L2xpPgorCSAqIDxsaT50aGUgbm9kZSBpcyBhbiBhcnJh
eSB0eXBlPC9saT4KKwkgKiA8L3VsPgorCSAqIEBzaW5jZSAzLjkgQkVUQV9KQVZBOAorCSAqLwor
CXB1YmxpYyB2b2lkIHNldEVsZW1lbnRUeXBlKFR5cGUgdHlwZSkgeworCQlpZiAodHlwZSA9PSBu
dWxsIHx8IHR5cGUgaW5zdGFuY2VvZiBBcnJheVR5cGUpIHsKKwkJCXRocm93IG5ldyBJbGxlZ2Fs
QXJndW1lbnRFeGNlcHRpb24oKTsKKwkJfQorCQlpbnRlcm5hbFNldENvbXBvbmVudFR5cGUodHlw
ZSwgRUxFTUVOVF9UWVBFX1BST1BFUlRZKTsKIAl9CiAKIAkvKioKIAkgKiBSZXR1cm5zIHRoZSBu
dW1iZXIgb2YgZGltZW5zaW9ucyBpbiB0aGlzIGFycmF5IHR5cGUuCiAJICogPHA+CiAJICogVGhp
cyBpcyBhIGNvbnZlbmllbmNlIG1ldGhvZCB0aGF0IGRlc2NlbmRzIGEgY2hhaW4gb2YgbmVzdGVk
IGFycmF5IHR5cGVzCi0JICogdW50aWwgaXQgcmVhY2hlcyBhIG5vbi1hcnJheSB0eXBlLgorCSAq
IHVudGlsIGl0IHJlYWNoZXMgYSBub24tYXJyYXkgdHlwZSAodW50aWwgSkxTNCkuIEZyb20gSkxT
OCBvbndhcmRzLCAKKwkgKiB0aGlzIHJldHVybnMgdGhlIHNpemUgb2YgdGhlIGRpbWVuc2lvbnMg
bGlzdC4KIAkgKiA8L3A+CiAJICoKIAkgKiBAcmV0dXJuIHRoZSBudW1iZXIgb2YgZGltZW5zaW9u
cyAoYWx3YXlzIHBvc2l0aXZlKQogCSAqLwogCXB1YmxpYyBpbnQgZ2V0RGltZW5zaW9ucygpIHsK
KwkJaWYgKHRoaXMuYXN0LmFwaUxldmVsKCkgPj0gQVNULkpMUzgpIHsKKwkJCXJldHVybiBkaW1l
bnNpb25zKCkuc2l6ZSgpOworCQl9CiAJCVR5cGUgdCA9IGdldENvbXBvbmVudFR5cGUoKTsKLQkJ
aW50IGRpbWVuc2lvbnMgPSAxOyAvLyBhbHdheXMgaW5jbHVkZSB0aGlzIGFycmF5IHR5cGUKKwkJ
aW50IGRpbWVuc2lvbiA9IDE7IC8vIGFsd2F5cyBpbmNsdWRlIHRoaXMgYXJyYXkgdHlwZQogCQl3
aGlsZSAodC5pc0FycmF5VHlwZSgpKSB7Ci0JCQlkaW1lbnNpb25zKys7CisJCQlkaW1lbnNpb24r
KzsKIAkJCXQgPSAoKEFycmF5VHlwZSkgdCkuZ2V0Q29tcG9uZW50VHlwZSgpOwogCQl9Ci0JCXJl
dHVybiBkaW1lbnNpb25zOworCQlyZXR1cm4gZGltZW5zaW9uOwkJCQorCX0KKworCS8qKgorCSAq
IFJldHVybnMgdGhlIGRpbWVuc2lvbiBkIGluIHRoaXMgYXJyYXkgdHlwZS4KKwkgKiA8cD4KKwkg
KiBUaGlzIGlzIGEgY29udmVuaWVuY2UgbWV0aG9kIHRoYXQgcmV0dXJucyB0aGUgZGltZW5zaW9u
IGF0IHRoZSBnaXZlbiBudW1iZXIgZC4KKwkgKiA8L3A+CisJICogQHBhcmFtIGQgZGltZW5zaW9u
IG5vCisJICogQHJldHVybiBEaW1lbnNpb24gYXQgbnVtYmVyIGQsIG51bGwgaWYgZCBvdXQgb2Yg
cmFuZ2UKKwkgKiAKKwkgKiBAc2luY2UgMy45IEJFVEFfSkFWQTgKKwkgKi8KKwlwdWJsaWMgRXh0
cmFEaW1lbnNpb24gZ2V0RGltZW5zaW9uQXQoaW50IGQpIHsKKwkJdW5zdXBwb3J0ZWRJbjJfM180
KCk7CisJCUV4dHJhRGltZW5zaW9uIGV4dHJhRGltZW5zaW9uID0gbnVsbDsKKwkJaW50IG4gPSBn
ZXREaW1lbnNpb25zKCkgLSAxOworCQlpZiAoZCA+PSAwICYmIGQgPD0gbikgeworCQkJZXh0cmFE
aW1lbnNpb24gPSAoRXh0cmFEaW1lbnNpb24pIGRpbWVuc2lvbnMoKS5nZXQobiAtIGQpOworCQl9
CisJCXJldHVybiBleHRyYURpbWVuc2lvbjsKKwl9CisKKwkvKioKKwkgKiBSZXR1cm5zIHRoZSBs
aXZlIG9yZGVyZWQgbGlzdCBvZiBkaW1lbnNpb25zIHdpdGggb3B0aW9uYWwgYW5ub3RhdGlvbnMg
KGFkZGVkIGluIEpMUzggQVBJKS4KKwkgKiAKKwkgKiBAcmV0dXJuIHRoZSBsaXZlIGxpc3Qgb2Yg
ZGltZW5zaW9ucyB3aXRoIG9wdGlvbmFsIGFubm90YXRpb25zIChlbGVtZW50IHR5cGU6IHtAbGlu
ayBFeHRyYURpbWVuc2lvbn0pCisJICogQGV4Y2VwdGlvbiBVbnN1cHBvcnRlZE9wZXJhdGlvbkV4
Y2VwdGlvbiBpZiB0aGlzIG9wZXJhdGlvbiBpcyB1c2VkIGJlbG93IEpMUzgKKwkgKiBAc2luY2Ug
My45IEJFVEFfSkFWQTgKKwkgKi8KKwlwdWJsaWMgTGlzdCBkaW1lbnNpb25zKCkgeworCQkvLyBt
b3JlIGVmZmljaWVudCB0aGFuIGp1c3QgY2FsbGluZyB1bnN1cHBvcnRlZEluMl8zXzQoKSB0byBj
aGVjaworCQlpZiAodGhpcy5kaW1lbnNpb25zID09IG51bGwpIHsKKwkJCXVuc3VwcG9ydGVkSW4y
XzNfNCgpOworCQl9CisJCXJldHVybiB0aGlzLmRpbWVuc2lvbnM7CiAJfQogCiAJLyogKG9taXQg
amF2YWRvYyBmb3IgdGhpcyBtZXRob2QpCkBAIC0yOTMsOCArNDE2LDggQEAKIAlpbnQgdHJlZVNp
emUoKSB7CiAJCXJldHVybgogCQkJbWVtU2l6ZSgpCi0JCQkrICh0aGlzLmNvbXBvbmVudFR5cGUg
PT0gbnVsbCA/IDAgOiBnZXRDb21wb25lbnRUeXBlKCkudHJlZVNpemUoKSkKLQkJCSsgKHRoaXMu
YW5ub3RhdGlvbnMgPT0gbnVsbCA/IDAgOiB0aGlzLmFubm90YXRpb25zLmxpc3RTaXplKCkpOwor
CQkJKyAodGhpcy5jb21wb25lbnRUeXBlID09IG51bGwgPyAwIDogKHRoaXMuYXN0LmFwaUxldmVs
KCkgPCBBU1QuSkxTOCA/IGdldENvbXBvbmVudFR5cGUoKS50cmVlU2l6ZSgpIDogZ2V0RWxlbWVu
dFR5cGUoKS50cmVlU2l6ZSgpKQorCQkJKyAodGhpcy5kaW1lbnNpb25zID09IG51bGwgPyAwIDog
dGhpcy5kaW1lbnNpb25zLmxpc3RTaXplKCkpKTsKIAl9CiB9CiAKZGlmZiAtLWdpdCBhL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vTmFp
dmVBU1RGbGF0dGVuZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vTmFpdmVBU1RGbGF0dGVuZXIuamF2YQppbmRleCBiNzM1
ZGVhLi42ZDU1NmMzIDEwMDY0NAotLS0gYS9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL05haXZlQVNURmxhdHRlbmVyLmphdmEKKysrIGIv
b3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2Rv
bS9OYWl2ZUFTVEZsYXR0ZW5lci5qYXZhCkBAIC0zNzAsOSArMzcwLDE3IEBACiAJICogQHNlZSBB
U1RWaXNpdG9yI3Zpc2l0KEFycmF5VHlwZSkKIAkgKi8KIAlwdWJsaWMgYm9vbGVhbiB2aXNpdChB
cnJheVR5cGUgbm9kZSkgewotCQlub2RlLmdldENvbXBvbmVudFR5cGUoKS5hY2NlcHQodGhpcyk7
Ci0JCXZpc2l0VHlwZUFubm90YXRpb25zKG5vZGUpOwotCQl0aGlzLmJ1ZmZlci5hcHBlbmQoIltd
Iik7Ly8kTk9OLU5MUy0xJAorCQlpZiAobm9kZS5nZXRBU1QoKS5hcGlMZXZlbCgpIDwgQVNULkpM
UzgpIHsKKwkJCXZpc2l0Q29tcG9uZW50VHlwZShub2RlKTsKKwkJCXRoaXMuYnVmZmVyLmFwcGVu
ZCgiW10iKTsvLyROT04tTkxTLTEkCisJCX0gZWxzZSB7CisJCQlub2RlLmdldEVsZW1lbnRUeXBl
KCkuYWNjZXB0KHRoaXMpOworCQkJTGlzdCBkaW1lbnNpb25zID0gbm9kZS5kaW1lbnNpb25zKCk7
CisJCQlmb3IgKGludCBpID0gMDsgaSA8IGRpbWVuc2lvbnMuc2l6ZSgpIDsgaSsrKSB7CisJCQkJ
RXh0cmFEaW1lbnNpb24gYURpbWVuc2lvbiA9IChFeHRyYURpbWVuc2lvbikgZGltZW5zaW9ucy5n
ZXQoaSk7CisJCQkJYURpbWVuc2lvbi5hY2NlcHQodGhpcyk7CisJCQl9CisJCX0KIAkJcmV0dXJu
IGZhbHNlOwogCX0KIApAQCAtMTk0NCw0ICsxOTUyLDExIEBACiAJCXJldHVybiBmYWxzZTsKIAl9
CiAKKwkvKioKKwkgKiBAZGVwcmVjYXRlZAorCSAqLworCXByaXZhdGUgdm9pZCB2aXNpdENvbXBv
bmVudFR5cGUoQXJyYXlUeXBlIG5vZGUpIHsKKwkJbm9kZS5nZXRDb21wb25lbnRUeXBlKCkuYWNj
ZXB0KHRoaXMpOworCX0KKwogfQpkaWZmIC0tZ2l0IGEvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9t
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9yZXdyaXRlL0FTVFJld3JpdGVBbmFs
eXplci5qYXZhIGIvb3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL2RvbS9yZXdyaXRlL0FTVFJld3JpdGVBbmFseXplci5qYXZhCmluZGV4IDZjZjQ0
YTkuLmFlMWVlNjggMTAwNjQ0Ci0tLSBhL29yZy5lY2xpcHNlLmpkdC5jb3JlL2RvbS9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9BU1RSZXdyaXRlQW5hbHl6ZXIuamF2
YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9kb20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvcmUvZG9tL3Jld3JpdGUvQVNUUmV3cml0ZUFuYWx5emVyLmphdmEKQEAgLTIwNzcsMTUgKzIw
NzcsMTUgQEAKIAkJCVJld3JpdGVFdmVudCBkaW1FdmVudD0gZ2V0RXZlbnQobm9kZSwgQXJyYXlD
cmVhdGlvbi5ESU1FTlNJT05TX1BST1BFUlRZKTsKIAkJCWJvb2xlYW4gaGFzRGltZW5zaW9uQ2hh
bmdlcz0gKGRpbUV2ZW50ICE9IG51bGwgJiYgZGltRXZlbnQuZ2V0Q2hhbmdlS2luZCgpICE9IFJl
d3JpdGVFdmVudC5VTkNIQU5HRUQpOwogCQkJUmV3cml0ZUV2ZW50W10gZXZlbnRzPSBoYXNEaW1l
bnNpb25DaGFuZ2VzID8gZGltRXZlbnQuZ2V0Q2hpbGRyZW4oKSA6IG51bGw7Ci0JCQlBcnJheVR5
cGUgY3VycmVudExldmVsPSAoQXJyYXlUeXBlKSByZXBsYWNpbmdUeXBlLmdldEVsZW1lbnRUeXBl
KCkuZ2V0UGFyZW50KCk7CisJCQlib29sZWFuIGFzdExldmVsR1RFOCA9IG5vZGUuZ2V0QVNUKCku
YXBpTGV2ZWwoKSA+PSBBU1QuSkxTOCA/IHRydWUgOiBmYWxzZTsKKwkJCUFycmF5VHlwZSBjdXJy
ZW50TGV2ZWwgPSBhc3RMZXZlbEdURTggPyBudWxsIDogKEFycmF5VHlwZSkgcmVwbGFjaW5nVHlw
ZS5nZXRFbGVtZW50VHlwZSgpLmdldFBhcmVudCgpOworCQkJaW50IHJlcGxhY2luZ1R5cGVEaW1l
bnNpb25zID0gcmVwbGFjaW5nVHlwZS5nZXREaW1lbnNpb25zKCk7CiAJCQlpbnQgaT0wLCBkaW1T
aXplPSAoZXZlbnRzID09IG51bGwpID8gMCA6IGV2ZW50cy5sZW5ndGg7CiAJCQlUeXBlIGVsZW1l
bnRUeXBlPSBhcnJheVR5cGUuZ2V0RWxlbWVudFR5cGUoKTsKIAkJCWludCBvZmZzZXQ9IGVsZW1l
bnRUeXBlLmdldFN0YXJ0UG9zaXRpb24oKSArIGVsZW1lbnRUeXBlLmdldExlbmd0aCgpOwotCQkJ
d2hpbGUoY3VycmVudExldmVsICE9IG51bGwpIHsKLQkJCQlpZiAobm9kZS5nZXRBU1QoKS5hcGlM
ZXZlbCgpID49IEFTVC5KTFM4KSB7Ci0JCQkJCXJld3JpdGVUeXBlQW5ub3RhdGlvbnMoY3VycmVu
dExldmVsLCBBcnJheVR5cGUuQU5OT1RBVElPTlNfUFJPUEVSVFksIG9mZnNldCk7Ci0JCQkJfQor
CQkJd2hpbGUoY3VycmVudExldmVsICE9IG51bGwgfHwgYXN0TGV2ZWxHVEU4KSB7CiAJCQkJaWYg
KGkgPCBkaW1TaXplKSB7CisJCQkJCWlmIChhc3RMZXZlbEdURTgpIGludGVybmFsRXh0cmFEaW1l
bnNpb25SZXdyaXRlKHJlcGxhY2luZ1R5cGUsIGksIG9mZnNldCk7CiAJCQkJCSBvZmZzZXQ9IGdl
dFNjYW5uZXIoKS5nZXRUb2tlbkVuZE9mZnNldChUZXJtaW5hbFRva2Vucy5Ub2tlbk5hbWVMQlJB
Q0tFVCwgb2Zmc2V0KTsKIAkJCQkJaWYgKGhhc0RpbWVuc2lvbkNoYW5nZXMpIHsKIAkJCQkJCVJl
d3JpdGVFdmVudCBldmVudD0gZXZlbnRzW2ldOwpAQCAtMjEyMCwxMyArMjEyMCwxOSBAQAogCQkJ
CQkJb2Zmc2V0PSByZXRyaWV2ZVJpZ2h0QnJhY2tldEVuZFBvc2l0aW9uKG9mZnNldCwgMSwgdHJ1
ZSk7CiAJCQkJCX0KIAkJCQl9IGVsc2UgaWYgKGkgPCBuT2xkQnJhY2tldHMpIHsKKwkJCQkJaWYg
KGFzdExldmVsR1RFOCkgaW50ZXJuYWxFeHRyYURpbWVuc2lvblJld3JpdGUocmVwbGFjaW5nVHlw
ZSwgaSwgb2Zmc2V0KTsKIAkJCQkJb2Zmc2V0PSByZXRyaWV2ZVJpZ2h0QnJhY2tldEVuZFBvc2l0
aW9uKG9mZnNldCwgMSwgZmFsc2UpOwogCQkJCX0gZWxzZSB7CisJCQkJCWludGVybmFsRXh0cmFE
aW1lbnNpb25BZGRpdGlvbihyZXBsYWNpbmdUeXBlLCBpLCBvZmZzZXQsIGVkaXRHcm91cCwgYXN0
TGV2ZWxHVEU4KTsKIAkJCQkJZG9UZXh0SW5zZXJ0KG9mZnNldCwgIltdIiwgZWRpdEdyb3VwKTsg
Ly8kTk9OLU5MUy0xJAogCQkJCX0KIAkJCQlpKys7Ci0JCQkJaWYgKGN1cnJlbnRMZXZlbCA9PSBy
ZXBsYWNpbmdUeXBlKSBicmVhazsKLQkJCQljdXJyZW50TGV2ZWw9IChBcnJheVR5cGUpIGN1cnJl
bnRMZXZlbC5nZXRQYXJlbnQoKTsKKwkJCQlpZiAoYXN0TGV2ZWxHVEU4KSB7CisJCQkJCWlmIChp
ID09IHJlcGxhY2luZ1R5cGVEaW1lbnNpb25zKSBicmVhazsKKwkJCQl9IGVsc2UgeworCQkJCQlp
ZiAoY3VycmVudExldmVsID09IHJlcGxhY2luZ1R5cGUpIGJyZWFrOworCQkJCQljdXJyZW50TGV2
ZWw9IChBcnJheVR5cGUpIGN1cnJlbnRMZXZlbC5nZXRQYXJlbnQoKTsKKwkJCQl9CiAJCQl9CiAJ
CQlpZiAoaSA8IG5PbGRCcmFja2V0cykgewogCQkJCWludCBlbmRQb3M9IHJldHJpZXZlUmlnaHRC
cmFja2V0RW5kUG9zaXRpb24ob2Zmc2V0LCBuT2xkQnJhY2tldHMgLSBpLCBmYWxzZSk7CkBAIC0y
MTQ0LDYgKzIxNTAsMjYgQEAKIAkJCWhhbmRsZUV4Y2VwdGlvbihlKTsKIAkJfQogCQlyZXR1cm4g
ZmFsc2U7CisJfQorCisJcHJpdmF0ZSB2b2lkIGludGVybmFsRXh0cmFEaW1lbnNpb25BZGRpdGlv
bihBcnJheVR5cGUgcmVwbGFjaW5nVHlwZSwgaW50IGluZGV4LCBpbnQgcG9zLCBUZXh0RWRpdEdy
b3VwIGVkaXRHcm91cCwKKwkJCWJvb2xlYW4gYXN0TGV2ZWxHVEU4KSB7CisJCWlmIChhc3RMZXZl
bEdURTgpIHsKKwkJCUV4dHJhRGltZW5zaW9uIGRpbSA9IChFeHRyYURpbWVuc2lvbikgcmVwbGFj
aW5nVHlwZS5kaW1lbnNpb25zKCkuZ2V0KGluZGV4KTsKKwkJCUxpc3QgYW5ub3RhdGlvbnMgPSBk
aW0uYW5ub3RhdGlvbnMoKTsKKwkJCWlmIChhbm5vdGF0aW9ucyAhPSBudWxsKSB7CisJCQkJZm9y
IChpbnQgaiA9IDA7IGogPCBhbm5vdGF0aW9ucy5zaXplKCk7IGorKykgeworCQkJCQlBbm5vdGF0
aW9uIGFubm90YXRpb24gPSAoQW5ub3RhdGlvbikgYW5ub3RhdGlvbnMuZ2V0KGopOworCQkJCQlk
b1RleHRJbnNlcnQocG9zLCBhbm5vdGF0aW9uLnRvU3RyaW5nKCkgKyAiICIsIGVkaXRHcm91cCk7
IC8vJE5PTi1OTFMtMSQKKwkJCQl9CisJCQkJCisJCQl9CisJCX0KKwl9CisKKwlwcml2YXRlIHZv
aWQgaW50ZXJuYWxFeHRyYURpbWVuc2lvblJld3JpdGUoQXJyYXlUeXBlIHJlcGxhY2luZ1R5cGUs
IGludCBpbmRleCwgaW50IHBvcykgeworCQlFeHRyYURpbWVuc2lvbiBkaW0gPSAoRXh0cmFEaW1l
bnNpb24pIHJlcGxhY2luZ1R5cGUuZGltZW5zaW9ucygpLmdldChpbmRleCk7CisJCXJld3JpdGVU
eXBlQW5ub3RhdGlvbnMoZGltLCBFeHRyYURpbWVuc2lvbi5BTk5PVEFUSU9OU19QUk9QRVJUWSwg
cG9zKTsKIAl9CiAKIAkvKioKQEAgLTIxNzUsNiArMjIwMSw5IEBACiAJfQogCiAJcHJpdmF0ZSBU
eXBlIGdldEVsZW1lbnRUeXBlKEFycmF5VHlwZSBwYXJlbnQpIHsKKwkJaWYgKHBhcmVudC5nZXRB
U1QoKS5hcGlMZXZlbCgpID49IEFTVC5KTFM4KSB7CisJCQlyZXR1cm4gKFR5cGUpIGdldE9yaWdp
bmFsVmFsdWUocGFyZW50LCBBcnJheVR5cGUuRUxFTUVOVF9UWVBFX1BST1BFUlRZKTsKKwkJfQog
CQlUeXBlIHQgPSAoVHlwZSkgZ2V0T3JpZ2luYWxWYWx1ZShwYXJlbnQsIEFycmF5VHlwZS5DT01Q
T05FTlRfVFlQRV9QUk9QRVJUWSk7CiAJCXdoaWxlICh0LmlzQXJyYXlUeXBlKCkpIHsKIAkJCXQg
PSAoVHlwZSkgZ2V0T3JpZ2luYWxWYWx1ZSh0LCBBcnJheVR5cGUuQ09NUE9ORU5UX1RZUEVfUFJP
UEVSVFkpOwpAQCAtMjE4Myw2ICsyMjEyLDkgQEAKIAl9CiAKIAlwcml2YXRlIGludCBnZXREaW1l
bnNpb25zKEFycmF5VHlwZSBwYXJlbnQpIHsKKwkJaWYgKHBhcmVudC5nZXRBU1QoKS5hcGlMZXZl
bCgpID49IEFTVC5KTFM4KSB7CisJCQlyZXR1cm4gKChMaXN0KSBnZXRPcmlnaW5hbFZhbHVlKHBh
cmVudCwgQXJyYXlUeXBlLkRJTUVOU0lPTlNfUFJPUEVSVFkpKS5zaXplKCk7CisJCX0KIAkJVHlw
ZSB0ID0gKFR5cGUpIGdldE9yaWdpbmFsVmFsdWUocGFyZW50LCBBcnJheVR5cGUuQ09NUE9ORU5U
X1RZUEVfUFJPUEVSVFkpOwogCQlpbnQgZGltZW5zaW9ucyA9IDE7IC8vIGFsd2F5cyBpbmNsdWRl
IHRoaXMgYXJyYXkgdHlwZQogCQl3aGlsZSAodC5pc0FycmF5VHlwZSgpKSB7CkBAIC0yMjE0LDkg
KzIyNDYsMTEgQEAKIAkJaWYgKCFoYXNDaGlsZHJlbkNoYW5nZXMobm9kZSkpIHsKIAkJCXJldHVy
biBkb1Zpc2l0VW5jaGFuZ2VkQ2hpbGRyZW4obm9kZSk7CiAJCX0KLQkJaW50IHBvcyA9IHJld3Jp
dGVSZXF1aXJlZE5vZGUobm9kZSwgQXJyYXlUeXBlLkNPTVBPTkVOVF9UWVBFX1BST1BFUlRZKTsK
LQkJaWYgKG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA+PSBBU1QuSkxTOCkgewotCQkJcmV3cml0
ZVR5cGVBbm5vdGF0aW9ucyhub2RlLCBBcnJheVR5cGUuQU5OT1RBVElPTlNfUFJPUEVSVFksIHBv
cyk7CisJCWlmIChub2RlLmdldEFTVCgpLmFwaUxldmVsKCkgPCBBU1QuSkxTOCkgeworCQkJcmV3
cml0ZVJlcXVpcmVkTm9kZShub2RlLCBBcnJheVR5cGUuQ09NUE9ORU5UX1RZUEVfUFJPUEVSVFkp
OworCQl9IGVsc2UgeworCQkJaW50IHBvcyA9IHJld3JpdGVSZXF1aXJlZE5vZGUobm9kZSwgQXJy
YXlUeXBlLkVMRU1FTlRfVFlQRV9QUk9QRVJUWSk7CisJCQlyZXdyaXRlTm9kZUxpc3Qobm9kZSwg
QXJyYXlUeXBlLkRJTUVOU0lPTlNfUFJPUEVSVFksIHBvcywgVXRpbC5FTVBUWV9TVFJJTkcsICIg
Iik7IC8vJE5PTi1OTFMtMSQKIAkJfQogCQlyZXR1cm4gZmFsc2U7CiAJfQpkaWZmIC0tZ2l0IGEv
b3JnLmVjbGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2Rv
bS9yZXdyaXRlL0FTVFJld3JpdGVGbGF0dGVuZXIuamF2YSBiL29yZy5lY2xpcHNlLmpkdC5jb3Jl
L2RvbS9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9kb20vcmV3cml0ZS9BU1RSZXdyaXRl
RmxhdHRlbmVyLmphdmEKaW5kZXggMjBmNjZlMy4uMDMzYjQ5NiAxMDA2NDQKLS0tIGEvb3JnLmVj
bGlwc2UuamR0LmNvcmUvZG9tL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL2RvbS9yZXdy
aXRlL0FTVFJld3JpdGVGbGF0dGVuZXIuamF2YQorKysgYi9vcmcuZWNsaXBzZS5qZHQuY29yZS9k
b20vb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvZG9tL3Jld3JpdGUvQVNUUmV3cml0ZUZs
YXR0ZW5lci5qYXZhCkBAIC0yMzYsMzUgKzIzNiwzNSBAQAogCQlBcnJheVR5cGUgYXJyYXlUeXBl
PSAoQXJyYXlUeXBlKSBnZXRDaGlsZE5vZGUobm9kZSwgQXJyYXlDcmVhdGlvbi5UWVBFX1BST1BF
UlRZKTsKIAogCQkvLyBnZXQgdGhlIGVsZW1lbnQgdHlwZSBhbmQgY291bnQgZGltZW5zaW9ucwot
CQlUeXBlIGVsZW1lbnRUeXBlPSAoVHlwZSkgZ2V0Q2hpbGROb2RlKGFycmF5VHlwZSwgQXJyYXlU
eXBlLkNPTVBPTkVOVF9UWVBFX1BST1BFUlRZKTsKLQkJaW50IGRpbWVuc2lvbnM9IDE7IC8vIGFs
d2F5cyBpbmNsdWRlIHRoaXMgYXJyYXkgdHlwZQotCQl3aGlsZSAoZWxlbWVudFR5cGUuaXNBcnJh
eVR5cGUoKSkgewotCQkJZGltZW5zaW9ucysrOwotCQkJZWxlbWVudFR5cGUgPSAoVHlwZSkgZ2V0
Q2hpbGROb2RlKGVsZW1lbnRUeXBlLCBBcnJheVR5cGUuQ09NUE9ORU5UX1RZUEVfUFJPUEVSVFkp
OworCQlUeXBlIGVsZW1lbnRUeXBlOworCQlpbnQgZGltZW5zaW9uczsKKwkJYm9vbGVhbiBhc3RM
ZXZlbEdURTggPSBub2RlLmdldEFTVCgpLmFwaUxldmVsKCkgPj0gQVNULkpMUzggPyB0cnVlIDog
ZmFsc2U7CisJCWlmIChhc3RMZXZlbEdURTgpIHsKKwkJCWVsZW1lbnRUeXBlID0gKFR5cGUpIGdl
dENoaWxkTm9kZShhcnJheVR5cGUsIEFycmF5VHlwZS5FTEVNRU5UX1RZUEVfUFJPUEVSVFkpOwor
CQkJZGltZW5zaW9ucyA9IGdldENoaWxkTGlzdChhcnJheVR5cGUsIEFycmF5VHlwZS5ESU1FTlNJ
T05TX1BST1BFUlRZKS5zaXplKCk7CisJCX0gZWxzZSB7CisJCQllbGVtZW50VHlwZSA9IChUeXBl
KSBnZXRDaGlsZE5vZGUoYXJyYXlUeXBlLCBBcnJheVR5cGUuQ09NUE9ORU5UX1RZUEVfUFJPUEVS
VFkpOworCQkJZGltZW5zaW9ucyA9IDE7IC8vIGFsd2F5cyBpbmNsdWRlIHRoaXMgYXJyYXkgdHlw
ZQorCQkJd2hpbGUgKGVsZW1lbnRUeXBlLmlzQXJyYXlUeXBlKCkpIHsKKwkJCQlkaW1lbnNpb25z
Kys7CisJCQkJZWxlbWVudFR5cGUgPSAoVHlwZSkgZ2V0Q2hpbGROb2RlKGVsZW1lbnRUeXBlLCBB
cnJheVR5cGUuQ09NUE9ORU5UX1RZUEVfUFJPUEVSVFkpOworCQkJfQogCQl9CiAKIAkJZWxlbWVu
dFR5cGUuYWNjZXB0KHRoaXMpOwogCiAJCS8vIGFkZCAiPGFubm90YXRpb25zPiBbIDxkaW1lbnNp
b24+IF0iIGZvciBlYWNoIGRpbWVuc2lvbiBleHByZXNzaW9uCi0JCVR5cGUgdHlwZT0gYXJyYXlU
eXBlOwogCQlMaXN0IGxpc3Q9IGdldENoaWxkTGlzdChub2RlLCBBcnJheUNyZWF0aW9uLkRJTUVO
U0lPTlNfUFJPUEVSVFkpOwogCQlmb3IgKGludCBpPSAwOyBpIDwgbGlzdC5zaXplKCk7IGkrKykg
ewotCQkJaWYgKG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA+PSBBU1QuSkxTOCAmJiB0eXBlIGlu
c3RhbmNlb2YgQXJyYXlUeXBlKSB7Ci0JCQkJdmlzaXRMaXN0KHR5cGUsIEFycmF5VHlwZS5BTk5P
VEFUSU9OU19QUk9QRVJUWSwgU3RyaW5nLnZhbHVlT2YoJyAnKSwgVXRpbC5FTVBUWV9TVFJJTkcs
IFN0cmluZy52YWx1ZU9mKCcgJykpOwotCQkJCXR5cGUgPSAoVHlwZSkgZ2V0Q2hpbGROb2RlKHR5
cGUsIEFycmF5VHlwZS5DT01QT05FTlRfVFlQRV9QUk9QRVJUWSk7Ci0JCQl9CisJCQlpbnRlcm5h
bFZpc2l0RXh0cmFEaW1lbnNpb25Bbm5vdGF0aW9ucyhhcnJheVR5cGUsIGksIGFzdExldmVsR1RF
OCk7CiAJCQl0aGlzLnJlc3VsdC5hcHBlbmQoJ1snKTsKIAkJCSgoQVNUTm9kZSkgbGlzdC5nZXQo
aSkpLmFjY2VwdCh0aGlzKTsKIAkJCXRoaXMucmVzdWx0LmFwcGVuZCgnXScpOwotCQkJZGltZW5z
aW9ucy0tOwogCQl9CiAKIAkJLy8gYWRkICI8YW5ub3RhdGlvbnM+IFtdIiBmb3IgZWFjaCBleHRy
YSBhcnJheSBkaW1lbnNpb24KLQkJZm9yIChpbnQgaT0gMDsgaSA8IGRpbWVuc2lvbnM7IGkrKykg
ewotCQkJaWYgKG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA+PSBBU1QuSkxTOCAmJiB0eXBlIGlu
c3RhbmNlb2YgQXJyYXlUeXBlKSB7Ci0JCQkJdmlzaXRMaXN0KHR5cGUsIEFycmF5VHlwZS5BTk5P
VEFUSU9OU19QUk9QRVJUWSwgU3RyaW5nLnZhbHVlT2YoJyAnKSwgVXRpbC5FTVBUWV9TVFJJTkcs
IFN0cmluZy52YWx1ZU9mKCcgJykpOwotCQkJCXR5cGUgPSAoVHlwZSkgZ2V0Q2hpbGROb2RlKHR5
cGUsIEFycmF5VHlwZS5DT01QT05FTlRfVFlQRV9QUk9QRVJUWSk7Ci0JCQl9CisJCWZvciAoaW50
IGk9IGxpc3Quc2l6ZSgpOyBpIDwgZGltZW5zaW9uczsgaSsrKSB7CisJCQlpbnRlcm5hbFZpc2l0
RXh0cmFEaW1lbnNpb25Bbm5vdGF0aW9ucyhhcnJheVR5cGUsIGksIGFzdExldmVsR1RFOCk7CiAJ
CQl0aGlzLnJlc3VsdC5hcHBlbmQoIltdIik7IC8vJE5PTi1OTFMtMSQKIAkJfQogCkBAIC0yNzMs
NiArMjczLDEzIEBACiAJCQlnZXRDaGlsZE5vZGUobm9kZSwgQXJyYXlDcmVhdGlvbi5JTklUSUFM
SVpFUl9QUk9QRVJUWSkuYWNjZXB0KHRoaXMpOwogCQl9CiAJCXJldHVybiBmYWxzZTsKKwl9CisK
Kwlwcml2YXRlIHZvaWQgaW50ZXJuYWxWaXNpdEV4dHJhRGltZW5zaW9uQW5ub3RhdGlvbnMoQXJy
YXlUeXBlIGFycmF5VHlwZSwgaW50IGluZGV4LCBib29sZWFuIGFzdExldmVsR1RFOCkgeworCQlp
ZiAoYXN0TGV2ZWxHVEU4KSB7CisJCQlFeHRyYURpbWVuc2lvbiBleHRyYURpbWVuc2lvbiA9IChF
eHRyYURpbWVuc2lvbikgYXJyYXlUeXBlLmRpbWVuc2lvbnMoKS5nZXQoaW5kZXgpOworCQkJdmlz
aXRMaXN0KGV4dHJhRGltZW5zaW9uLCBFeHRyYURpbWVuc2lvbi5BTk5PVEFUSU9OU19QUk9QRVJU
WSwgU3RyaW5nLnZhbHVlT2YoJyAnKSwgVXRpbC5FTVBUWV9TVFJJTkcsIFN0cmluZy52YWx1ZU9m
KCcgJykpOworCQl9CiAJfQogCiAJLyoKQEAgLTI4OSwxMSArMjk2LDEzIEBACiAJICogQHNlZSBB
U1RWaXNpdG9yI3Zpc2l0KEFycmF5VHlwZSkKIAkgKi8KIAlwdWJsaWMgYm9vbGVhbiB2aXNpdChB
cnJheVR5cGUgbm9kZSkgewotCQlnZXRDaGlsZE5vZGUobm9kZSwgQXJyYXlUeXBlLkNPTVBPTkVO
VF9UWVBFX1BST1BFUlRZKS5hY2NlcHQodGhpcyk7Ci0JCWlmIChub2RlLmdldEFTVCgpLmFwaUxl
dmVsKCkgPj0gQVNULkpMUzgpIHsKLQkJCXZpc2l0TGlzdChub2RlLCBBcnJheVR5cGUuQU5OT1RB
VElPTlNfUFJPUEVSVFksIFN0cmluZy52YWx1ZU9mKCcgJyksIFV0aWwuRU1QVFlfU1RSSU5HLCBT
dHJpbmcudmFsdWVPZignICcpKTsKKwkJaWYgKG5vZGUuZ2V0QVNUKCkuYXBpTGV2ZWwoKSA8IEFT
VC5KTFM4KSB7CisJCQlnZXRDaGlsZE5vZGUobm9kZSwgQXJyYXlUeXBlLkNPTVBPTkVOVF9UWVBF
X1BST1BFUlRZKS5hY2NlcHQodGhpcyk7CisJCQl0aGlzLnJlc3VsdC5hcHBlbmQoIltdIik7IC8v
JE5PTi1OTFMtMSQKKwkJfSBlbHNlIHsKKwkJCWdldENoaWxkTm9kZShub2RlLCBBcnJheVR5cGUu
RUxFTUVOVF9UWVBFX1BST1BFUlRZKS5hY2NlcHQodGhpcyk7CisJCQl2aXNpdExpc3Qobm9kZSwg
QXJyYXlUeXBlLkRJTUVOU0lPTlNfUFJPUEVSVFksIFN0cmluZy52YWx1ZU9mKCcgJyksIFV0aWwu
RU1QVFlfU1RSSU5HLCBTdHJpbmcudmFsdWVPZignICcpKTsKIAkJfQotCQl0aGlzLnJlc3VsdC5h
cHBlbmQoIltdIik7IC8vJE5PTi1OTFMtMSQKIAkJcmV0dXJuIGZhbHNlOwogCX0KIA==
</data>

          </attachment>
      

    </bug>

</bugzilla>