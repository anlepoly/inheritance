<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>426965</bug_id>
          
          <creation_ts>2014-01-30 01:59:00 -0500</creation_ts>
          <short_desc>[1.8] Eclipse rejects valid type conversion in lambda</short_desc>
          <delta_ts>2014-01-30 09:58:46 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>4.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>BETA J8</target_milestone>
          
          <blocked>424053</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Jay Arthanareeswaran">jarthana</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>srikanth_sankaran</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2356386</commentid>
    <comment_count>0</comment_count>
    <who name="Jay Arthanareeswaran">jarthana</who>
    <bug_when>2014-01-30 01:59:57 -0500</bug_when>
    <thetext>This code is rejected, while Javac allows:

public class X {
	interface I&lt;U extends List&lt;X&gt;, V&gt; {
		V foo(U p);
	}
	public void main() {
		I&lt;List&lt;X&gt;, Object&gt; fi = p -&gt; p.toArray(new X[] {});
	}
}

This appears to be a recent regression.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2356393</commentid>
    <comment_count>1</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-30 02:18:38 -0500</bug_when>
    <thetext>Indeed, this compiles with   

Eclipse Java Development Tools Patch for Java 8 Support (BETA)	1.0.0.v20140128-0105_BETA_JAVA8	org.eclipse.jdt.java8patch.feature.group	Eclipse.org

The error message looks bizarre: On the theory that such cases should have
a simple fix somewhere I&apos;ll take a look first.

&quot;Type mismatch: cannot convert from X[] to Object&quot;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2356425</commentid>
    <comment_count>2</comment_count>
    <who name="Srikanth Sankaran">srikanth_sankaran</who>
    <bug_when>2014-01-30 04:02:49 -0500</bug_when>
    <thetext>Disabled junit available here: 

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=733b86db2327db90691ce417f854923bab36a366

inferInvocation type returns null for this.solutionsPerTargetType.get(targetType);</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2356648</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2014-01-30 09:58:46 -0500</bug_when>
    <thetext>Thanks for the prepared test :)

I have one place in the inference implementation where I need to test if a type S has a given class or interface type T as its super type. Here I forgot to consider the special case of S being an array and T being j.l.Object.

Fix released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&amp;id=12bb3007708f198ce96e1ee7074598576067e3f5</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>