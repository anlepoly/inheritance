<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>361407</bug_id>
          
          <creation_ts>2011-10-19 10:24:00 -0400</creation_ts>
          <short_desc>Resource leak warning when resource is assigned to a field outside of constructor</short_desc>
          <delta_ts>2012-01-24 08:50:45 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.8</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.8 M5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Markus Keller">markus_keller</reporter>
          <assigned_to name="Stephan Herrmann">stephan.herrmann</assigned_to>
          <cc>amj87.iitr</cc>
    
    <cc>deepakazad</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2013104</commentid>
    <comment_count>0</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2011-10-19 10:24:40 -0400</bug_when>
    <thetext>I20111018-0850

It&apos;s inconsistent that I get resource leak warnings when a resource is assigned to a field outside of constructor. Inside a constructor, the warning seems to be hidden. This happens whether or not dispose() is there.

package xy;

import java.io.FileInputStream;
import java.io.IOException;
import java.util.Objects;

public class Leaks {
    private FileInputStream fInput;

    Leaks(String name) throws IOException {
        FileInputStream fileInputStream= new FileInputStream(name);
        fInput= fileInputStream;
        Objects.hashCode(fInput);
        
        init(name);
    }
    
    void init(String name) throws IOException {
        FileInputStream fileInputStream= new FileInputStream(name);
        fInput= fileInputStream;
        Objects.hashCode(fInput);
    }
    
    public void dispose() throws IOException {
        fInput.close();
    }
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2013156</commentid>
    <comment_count>1</comment_count>
    <who name="Deepak Azad">deepakazad</who>
    <bug_when>2011-10-19 11:15:35 -0400</bug_when>
    <thetext>Also assignment of a resource to a field should be treated the same way as resource as a parameter or a return value i.e. the warning should be &apos;Potential resource leak&apos; instead of &apos;Resource leak&apos;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2013447</commentid>
    <comment_count>2</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2011-10-19 17:07:47 -0400</bug_when>
    <thetext>Makes sense. I&apos;ll take a look.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2048068</commentid>
    <comment_count>3</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-09 18:15:59 -0500</bug_when>
    <thetext>The matter of resources stored in fields is covered by the patch in
bug 358903. Actually just like a resource returned from a method
also assignment to a field means we don&apos;t issue any warning. In both
cases it&apos;s likely s.o. else&apos;s responsibility to close.

However, the difference between method and ctor still needs to be looked at.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2050604</commentid>
    <comment_count>4</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2012-01-15 11:11:13 -0500</bug_when>
    <thetext>The issues of potential / definite leaks and field assignments has indeed been resolved in bug 358903.

The remaining inconsistency between methods and constructors (incl. self-calls) has been fix in commit 96ef6a1342ca74d72728b34641d9caf80d6d6997.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2055063</commentid>
    <comment_count>5</comment_count>
    <who name="Ayushman Jain">amj87.iitr</who>
    <bug_when>2012-01-24 08:50:45 -0500</bug_when>
    <thetext>Verified for 3.8M5 using build I20120122-2000</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>